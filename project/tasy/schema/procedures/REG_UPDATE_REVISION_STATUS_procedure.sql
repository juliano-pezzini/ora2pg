-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE reg_update_revision_status ( nr_seq_version_revision_p bigint, ie_destino_revisao_p text default 'T', nm_usuario_p text  DEFAULT NULL) AS $body$
DECLARE


nr_seq_document_w		reg_version_revision.nr_seq_documento%type;
ie_status_revisao_w		reg_version_revision.ie_status_revisao%type;
ds_pdf_structure_w		reg_version_revision.ds_pdf_structure%type;
nr_seq_rev_control_w		reg_revision_control.nr_sequencia%type;
nr_round_w			reg_revision_control.nr_round%type;
nr_seq_doc_w			reg_version_revision.nr_seq_documento%type;
ie_all_reviewed_w		varchar(1);
ie_any_rev_rejected_w		varchar(1);
ie_all_signed_w			varchar(1);
ie_all_approved_w		varchar(1);


BEGIN

if (nr_seq_version_revision_p IS NOT NULL AND nr_seq_version_revision_p::text <> '') then

	select	ie_status_revisao,
		nr_seq_documento
	into STRICT	ie_status_revisao_w,
		nr_seq_doc_w
	from	reg_version_revision
	where	nr_sequencia = nr_seq_version_revision_p;

	case
	when ie_status_revisao_w in ('U', 'A') then

		select	ds_pdf_structure
		into STRICT	ds_pdf_structure_w
		from	reg_version_revision
		where	nr_sequencia = nr_seq_version_revision_p;

		--if (ds_pdf_structure_w is not null) then
		update	reg_version_revision
		set	ie_status_revisao = 'R', -- Pending revision
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia = nr_seq_version_revision_p;
		
		CALL reg_documento_pck.enviar_aviso_revisores(nr_seq_doc_w, 'R');

		if (ie_status_revisao_w = 'A') then

			select	nextval('reg_revision_control_seq')
			into STRICT	nr_seq_rev_control_w
			;

			select coalesce(max(nr_round) + 1, 1)
			into STRICT   nr_round_w
			from   reg_revision_control
			where  nr_seq_revisao = nr_seq_version_revision_p;

			insert into reg_revision_control(
				nr_sequencia,
				nr_seq_revisao,
				nr_round,
				nm_usuario_nrec,
				nm_usuario,
				dt_atualizacao_nrec,
				dt_atualizacao )
			values (
				nr_seq_rev_control_w,
				nr_seq_version_revision_p,
				nr_round_w,
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp() );

			select	nr_seq_documento
			into STRICT	nr_seq_document_w
			from	reg_version_revision
			where	nr_sequencia = nr_seq_version_revision_p;

			insert into reg_version_approvers(
				nr_sequencia,
				nr_seq_revision,
				nr_seq_rev_control,
				nm_approver,
				nm_usuario_nrec,
				nm_usuario,
				dt_atualizacao_nrec,
				dt_atualizacao,
				ie_approver_type )
			SELECT	nextval('reg_version_approvers_seq'),
				nr_seq_version_revision_p,
				nr_seq_rev_control_w,
				nm_usuario_revisor,
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				ie_tipo_revisor
			from	reg_doc_revisor
			where	nr_seq_documento = nr_seq_document_w
			and	ie_tipo_revisor <> 'C';

		end if;			
		--end if;
	when ie_status_revisao_w = 'R' then
	
		select	max(nr_sequencia)
		into STRICT	nr_seq_rev_control_w
		from	reg_revision_control
		where	nr_seq_revisao = nr_seq_version_revision_p;

		select	CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END
		into STRICT	ie_all_reviewed_w
		from	reg_version_approvers
		where	nr_seq_revision = nr_seq_version_revision_p
		and	nr_seq_rev_control = nr_seq_rev_control_w
		and	ie_approver_type = 'R'
		and	coalesce(ie_aceito::text, '') = '';

		if (ie_all_reviewed_w = 'S') then

			select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
			into STRICT	ie_any_rev_rejected_w
			from	reg_version_approvers
			where	nr_seq_revision = nr_seq_version_revision_p
			and	nr_seq_rev_control = nr_seq_rev_control_w
			and	ie_approver_type = 'R'
			and	ie_aceito = 'N';

			if (ie_any_rev_rejected_w = 'S' and ie_destino_revisao_p <> 'P') then

				update	reg_version_revision
				set	ie_status_revisao = 'A', -- Pending adjustment
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_sequencia = nr_seq_version_revision_p;

			else

				update	reg_version_revision
				set	ie_status_revisao = 'P', -- Pending Approval
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_sequencia = nr_seq_version_revision_p;
				
				CALL reg_documento_pck.enviar_aviso_revisores(nr_seq_doc_w, 'P');

			end if;
		end if;

	when ie_status_revisao_w = 'S' then

		select	max(nr_sequencia)
		into STRICT	nr_seq_rev_control_w
		from	reg_revision_control
		where	nr_seq_revisao = nr_seq_version_revision_p;

		select	CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END
		into STRICT	ie_all_signed_w
		from	reg_version_approvers
		where	nr_seq_revision = nr_seq_version_revision_p
		and	nr_seq_rev_control = nr_seq_rev_control_w
		and	ie_approver_type = 'R'
		and	coalesce(dt_approved::text, '') = '';

		if (ie_all_signed_w = 'S') then

			update	reg_version_revision
			set	ie_status_revisao = 'F', -- Signed
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_version_revision_p;

		end if;

	when ie_status_revisao_w = 'P' then

		select	max(nr_sequencia)
		into STRICT	nr_seq_rev_control_w
		from	reg_revision_control
		where	nr_seq_revisao = nr_seq_version_revision_p;

		select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
		into STRICT	ie_any_rev_rejected_w
		from	reg_version_approvers
		where	nr_seq_revision = nr_seq_version_revision_p
		and	nr_seq_rev_control = nr_seq_rev_control_w
		and	ie_approver_type = 'A'
		and	ie_aceito = 'N';

		if (ie_any_rev_rejected_w = 'S') then

			update	reg_version_revision
			set	ie_status_revisao = 'A', -- Pending adjustment
				nm_usuario = nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_sequencia = nr_seq_version_revision_p;

		else

			select	CASE WHEN count(1)=0 THEN  'S'  ELSE 'N' END
			into STRICT	ie_all_approved_w
			from	reg_version_approvers
			where	nr_seq_revision = nr_seq_version_revision_p
			and	nr_seq_rev_control = nr_seq_rev_control_w
			and	ie_approver_type = 'A'
			and	coalesce(dt_approved::text, '') = '';

			if (ie_all_approved_w = 'S') then
			
				update	reg_revision_control
				set	dt_aprov_revisao = clock_timestamp(),
					dt_atualizacao = clock_timestamp(),
					nm_usuario = nm_usuario_p
				where	nr_sequencia = nr_seq_rev_control_w;

				update	reg_version_revision
				set	ie_status_revisao = 'S', -- Pending digital signature
					nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp(),
					dt_closed_revision = clock_timestamp()
				where	nr_sequencia = nr_seq_version_revision_p;
				
				CALL reg_documento_pck.enviar_aviso_revisores(nr_seq_doc_w, 'S');
			
			end if;
		end if;
	end case;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reg_update_revision_status ( nr_seq_version_revision_p bigint, ie_destino_revisao_p text default 'T', nm_usuario_p text  DEFAULT NULL) FROM PUBLIC;

