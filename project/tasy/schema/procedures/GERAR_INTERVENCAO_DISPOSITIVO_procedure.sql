-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_intervencao_dispositivo ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_seq_dispositivo_p bigint, ds_hora_p text, nm_usuario_p text) AS $body$
DECLARE


		

nr_seq_diag_w		bigint;
nr_seq_proc_w		bigint;
nr_sequencia_w		bigint;
qt_existe_w		bigint;
nr_seq_result_w		bigint;
cd_intervalo_w		varchar(7);
ds_horario_padrao_w	varchar(2000);
nr_seq_probl_colab_w	bigint;
ds_observacao_padr_w	varchar(255);
ie_adep_w		varchar(1);
vl_prim_hor_w		varchar(15);
hr_prim_horario_w		timestamp;
nr_intervalo_w		real;
ds_horarios_w		varchar(2000);
dt_prescricao_w		timestamp;
qt_horas_validade_w	bigint;
ds_prim_horario_w		varchar(255);
ie_se_necessario_w		varchar(1);
ie_auxiliar_w       varchar(10);
ie_encaminhar_w     varchar(10);
ie_fazer_w          varchar(10);
ie_orientar_w       varchar(10);
ie_supervisionar_w   varchar(10);

ie_acao_sae_w		varchar(15);
dt_retirada_prev_w	timestamp;
ds_dispositivo_w 	varchar(255);
nr_seq_topografia_w	bigint;
qt_reg_intervencao_w bigint;
dt_prevista_w		timestamp;
		
C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_intervalo,
		a.ds_horario_padrao,
		a.ds_observacao_padr,
		a.ie_adep,
		a.ie_auxiliar,
		a.ie_encaminhar,
		a.ie_fazer,
		a.ie_orientar,
		a.ie_supervisionar
	from	pe_procedimento a
	where	a.nr_sequencia	= nr_seq_proc_p
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	not exists (	SELECT	1
					from	pe_prescr_proc x
					where	x.nr_seq_prescr	= nr_sequencia_p
					and	x.nr_seq_proc	= a.nr_sequencia);

BEGIN


vl_prim_hor_w := obter_param_usuario(281, 325, obter_perfil_ativo, nm_usuario_p, 0, vl_prim_hor_w);

select	qt_horas_validade
into STRICT	qt_horas_validade_w
from	pe_prescricao
where	nr_sequencia	= nr_sequencia_p
and 	coalesce(ie_situacao,'A') = 'A';


Select 	max(ie_acao_sae),
		max(dt_retirada_prev),
		max(substr(obter_descricao_padrao('DISPOSITIVO',
   'DS_DISPOSITIVO',NR_SEQ_DISPOSITIVO),1,80)),
		max(nr_seq_topografia)
into STRICT	ie_acao_sae_w,
		dt_retirada_prev_w,
		ds_dispositivo_w,
		nr_seq_topografia_w
from	atend_pac_dispositivo
where	nr_sequencia = nr_seq_dispositivo_p;

select	count(*)
into STRICT	qt_reg_intervencao_w
from	pe_prescr_proc
where	nr_seq_prescr	= nr_sequencia_p
and		nr_seq_proc	= nr_seq_proc_p;


if (ds_hora_p IS NOT NULL AND ds_hora_p::text <> '') then
	
	dt_prevista_w := to_date(ds_hora_p,'hh24:mi');
	
end if;

if (qt_reg_intervencao_w > 0) then

	select  ds_observacao
	into STRICT	ds_observacao_padr_w
	from	pe_prescr_proc
	where	nr_seq_prescr	= nr_sequencia_p
	and		nr_seq_proc	= nr_seq_proc_p;
	
	if (ds_observacao_padr_w IS NOT NULL AND ds_observacao_padr_w::text <> '') then	
		ds_observacao_padr_w := substr(ds_observacao_padr_w ||chr(10)||chr(13)||wheb_mensagem_pck.get_texto(289360) || ' '||ds_dispositivo_w||'. ',1,255);		
	else	
		ds_observacao_padr_w:= wheb_mensagem_pck.get_texto(289360) || ' '||ds_dispositivo_w||'.';			
	end if;
	
	if (nr_seq_topografia_w IS NOT NULL AND nr_seq_topografia_w::text <> '') then
	
		ds_observacao_padr_w := substr(ds_observacao_padr_w ||substr(obter_desc_topografia_dor(nr_seq_topografia_w),1,60),1,255);
	
	end if;

	update  pe_prescr_proc
	set		ds_observacao 	= ds_observacao_padr_w
	where	nr_seq_prescr	= nr_sequencia_p
	and		nr_seq_proc		= nr_seq_proc_p;
	
	commit;
	
else

	open C01;
	loop
	fetch C01 into	
		nr_seq_proc_w,
		cd_intervalo_w,
		ds_horario_padrao_w,
		ds_observacao_padr_w,
		ie_adep_w,
		ie_auxiliar_w    ,
		ie_encaminhar_w  ,     
		ie_fazer_w       ,     
		ie_orientar_w    ,     
		ie_supervisionar_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	nextval('pe_prescr_proc_seq')
		into STRICT	nr_sequencia_w
		;
		
		if (dt_prevista_w IS NOT NULL AND dt_prevista_w::text <> '') then
			hr_prim_horario_w := dt_prevista_w;
		elsif (vl_prim_hor_w = '1') then
			hr_prim_horario_w	:= to_date(to_char(clock_timestamp(),'dd/mm/yyyy') || obter_primeiro_horario_sae(cd_intervalo_w,	nr_sequencia_p),'dd/mm/yyyy hh24:mi:ss');
		elsif (vl_prim_hor_w = '2') then
			hr_prim_horario_w 	:= trunc(dt_prescricao_w + (1/24),'hh24');
		end if;
		
		if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
			SELECT * FROM calcular_horario_intervencao(cd_intervalo_w, hr_prim_horario_w, coalesce(qt_horas_validade_w,24), nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w, nr_sequencia_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_prim_horario_w, ie_se_necessario_w;
			if (coalesce(ds_horario_padrao_w::text, '') = '') then
				ds_horario_padrao_w	:= ds_horarios_w;
			end if;
		end if;
		
		if (ds_observacao_padr_w IS NOT NULL AND ds_observacao_padr_w::text <> '') then	
			ds_observacao_padr_w := substr(ds_observacao_padr_w ||chr(10)||chr(13)||wheb_mensagem_pck.get_texto(289360) || ' '||ds_dispositivo_w||'. ',1,255);		
		else	
			ds_observacao_padr_w:= wheb_mensagem_pck.get_texto(289360) || ' '||ds_dispositivo_w||'.';			
		end if;
		
		if (nr_seq_topografia_w IS NOT NULL AND nr_seq_topografia_w::text <> '') then
		
			ds_observacao_padr_w := substr(ds_observacao_padr_w ||substr(obter_desc_topografia_dor(nr_seq_topografia_w),1,60),1,255);
		
		end if;

		insert into pe_prescr_proc(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_proc,
			nr_seq_prescr,
			qt_pontuacao,
			ds_origem,
			nr_seq_apres,
			cd_intervalo,
			ds_horarios,
			qt_intervencao,
			ie_se_necessario,
			ds_observacao,
			ie_suspenso,
			ie_adep,
			hr_prim_horario,
			ie_auxiliar    ,
			ie_encaminhar  ,     
			ie_fazer       ,     
			ie_orientar    ,     
			ie_supervisionar)
		values (	nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_proc_w,
			nr_sequencia_p,
			1,
			'A',
			1,
			cd_intervalo_w,
			ds_horario_padrao_w,
			1,
			'N',
			ds_observacao_padr_w,
			'N',
			ie_adep_w,
			to_char(hr_prim_horario_w,'hh24:mi'),
			ie_auxiliar_w    ,     
			ie_encaminhar_w  ,     
			ie_fazer_w       ,     
			ie_orientar_w    ,     
			ie_supervisionar_w);
		end;
	end loop;
	close C01;

	commit;

end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_intervencao_dispositivo ( nr_sequencia_p bigint, nr_seq_proc_p bigint, nr_seq_dispositivo_p bigint, ds_hora_p text, nm_usuario_p text) FROM PUBLIC;

