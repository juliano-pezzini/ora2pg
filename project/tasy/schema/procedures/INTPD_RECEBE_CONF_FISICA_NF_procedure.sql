-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebe_conf_fisica_nf ( nr_sequencia_p bigint, xml_p xml, id_event_p text default '66') AS $body$
DECLARE


_ora2pg_r RECORD;
qt_registros_w			bigint;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_sistema_w			intpd_eventos_sistema.nr_seq_sistema%type;					
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_regra_conv_w		conversao_meio_externo.nr_seq_regra%type;
ie_sistema_externo_w		varchar(15);
nota_fiscal_item_w			nota_fiscal_item%rowtype;
nota_fiscal_item_lote_w		nota_fiscal_item_lote%rowtype;
inspecao_recebimento_lote_w	inspecao_recebimento_lote%rowtype;
reg_integracao_w			gerar_int_padrao.reg_integracao_conv;
i				integer;
dt_entrada_saida_w		nota_fiscal.dt_entrada_saida%type;
qt_conversao_w			unidade_medida_adic_compra.qt_conversao%type;
cd_cgc_w			nota_fiscal.cd_cgc%type;
cd_estabelecimento_w		nota_fiscal.cd_estabelecimento%type;
nm_usuario_w                    nota_fiscal.nm_usuario%type;
ds_erro_w			varchar(4000);
/*if > 0 not execute the invoice calculation routine*/

qt_inconsistencia_w 		bigint := 0;
qt_nf_item_w			nota_fiscal_item.qt_item_nf%type;

c01 CURSOR FOR
SELECT	*
from	xmltable('/STRUCTURE/INVOICE' passing xml_p columns
	ie_action				varchar(15)	path	'IE_ACTION',
	nr_sequencia			bigint	path	'NR_SEQUENCE',
	xml_itens_nota			xml 		path	'ITEMS');
c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	*
from	xmltable('/ITEMS/ITEM' passing c01_w.xml_itens_nota columns
	nr_item_nf			integer	path	'NR_INVOICE_ITEM',
	cd_material			varchar(40)	path	'CD_MATERIAL',
	qt_item_nf			varchar(40)	path	'QT_INVOICE_ITEM',
	cd_unidade_medida_compra		varchar(40)	path	'CD_UNIT_MEASURE_PURCHASE',
	nr_seq_marca			varchar(40)	path	'NR_SEQ_BRAND',
	cd_local_estoque			varchar(40)	path	'CD_LOCAL_STOCK',
	nr_ordem_compra			varchar(40)	path	'NR_PURCHASE_ORDER',
	nr_seq_inspecao			varchar(40)	path	'NR_RECEIPT_INSPECTION',
	nm_usuario			varchar(15)	path	'NM_USER_CHECK',
	xml_lotes_item_nota			xml 		path	'SUPPLIERS_BATCH');
c02_w	c02%rowtype;

c03 CURSOR FOR
SELECT	*
from	xmltable('/SUPPLIERS_BATCH/SUPPLIER_BATCH' passing c02_w.xml_lotes_item_nota columns
	cd_lote_fabricacao			varchar(40)	path	'CD_LOT_FABRICATION',
	dt_validade			varchar(40)	path	'DT_EXPIRATION',
	ie_indeterminado			varchar(40)	path	'IE_UNDETERMINED',	
	qt_material			varchar(40)	path	'QT_BATCH',
	cd_barra_material			varchar(255)	path	'CD_BARCODE',
	ds_barras				varchar(4000)	path	'DS_BARCODE_DESCRIPTION',
	nr_seq_marca			varchar(40)	path	'NR_BRAND',
	nm_usuario			varchar(15)	path	'NM_USER_CHECK');
c03_w	c03%rowtype;


BEGIN

select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_conv_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w	:=	nr_seq_sistema_w;

reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao		:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao	:=	nr_seq_regra_conv_w;
reg_integracao_w.qt_reg_log := 0;

open C01;
loop
fetch C01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	count(*)
	into STRICT	qt_registros_w
	from	nota_fiscal
	where	nr_sequencia = c01_w.nr_sequencia
	and	coalesce(dt_atualizacao_estoque::text, '') = '';
	
	open C02;
	loop
	fetch C02 into	
		c02_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		select	coalesce(sum(qt_item_nf),0)
		into STRICT	qt_nf_item_w
		from	nota_fiscal_item
		where 	nr_sequencia = c01_w.nr_sequencia
		and 	cd_material = c02_w.cd_material
		and 	nr_item_nf = c02_w.nr_item_nf;
		
		if (qt_nf_item_w > 0) and (qt_nf_item_w <> (somente_numero_virg_char(replace(c02_w.qt_item_nf, '.', ',')))::numeric ) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(176853, 'DS_MATERIAL=' || c02_w.cd_material || ';QT_MATERIAL=' || qt_nf_item_w);
		end if;
		
		CALL consiste_validade_venc_item(c01_w.nr_sequencia, cd_estabelecimento_w, c02_w.nm_usuario);
		
		open c03;
		loop
		fetch c03 into	
			c03_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		
		select	coalesce(sum(b.qt_material),0)
		into STRICT	qt_nf_item_w
		from   	nota_fiscal_item a,
			nota_fiscal_item_lote b
		where  	a.nr_item_nf = b.nr_item_nf
		and	a.nr_sequencia = b.nr_seq_nota
		and 	a.nr_sequencia = c01_w.nr_sequencia
		and 	a.cd_material = c02_w.cd_material
		and 	a.nr_item_nf = c02_w.nr_item_nf
		and 	b.cd_lote_fabricacao = c03_w.cd_lote_fabricacao;
		
		if (qt_nf_item_w > 0) and (qt_nf_item_w <> (somente_numero_virg_char(replace(c03_w.qt_material, '.', ',')))::numeric ) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(176853, 'DS_MATERIAL=' ||  c02_w.cd_material || ';QT_MATERIAL=' || qt_nf_item_w);
		end if;
		
		CALL consiste_lote_fornec_regra(c02_w.cd_material, 0, 0, 0, 66, c03_w.cd_lote_fabricacao);
		end;
		end loop;
		close c03;
		end;
	end loop;
	close C02;
	
	/*Somente entra na rotina se a nota fiscal nao estiver calculada*/

	if (qt_registros_w > 0) then

		nota_fiscal_item_w.nr_sequencia	:= c01_w.nr_sequencia;
		
		select	cd_cgc,
			cd_estabelecimento
		into STRICT	cd_cgc_w,
			cd_estabelecimento_w
		from	nota_fiscal
		where	nr_sequencia = c01_w.nr_sequencia;
	
		open C02;
		loop
		fetch C02 into	
			c02_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			reg_integracao_w.nm_tabela		:=	'NOTA_FISCAL_ITEM';
			reg_integracao_w.nm_elemento	:=	'ITEM';
			reg_integracao_w.nr_seq_visao	:=	6437;
			
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_ITEM_NF', c02_w.nr_item_nf, 'N', nota_fiscal_item_w.nr_item_nf) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_w.nr_item_nf := _ora2pg_r.ds_valor_retorno_p;			
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_MATERIAL', c02_w.cd_material, 'S', nota_fiscal_item_w.cd_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_w.cd_material := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_ITEM_NF', c02_w.qt_item_nf, 'N', nota_fiscal_item_w.qt_item_nf) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_w.qt_item_nf := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_UNIDADE_MEDIDA_COMPRA', c02_w.cd_unidade_medida_compra, 'S', nota_fiscal_item_w.cd_unidade_medida_compra) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_w.cd_unidade_medida_compra := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_LOCAL_ESTOQUE', c02_w.cd_local_estoque, 'S', nota_fiscal_item_w.cd_local_estoque) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_w.cd_local_estoque := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_MARCA', c02_w.nr_seq_marca, 'S', nota_fiscal_item_w.nr_seq_marca) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_w.nr_seq_marca := _ora2pg_r.ds_valor_retorno_p;
			SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c02_w.nm_usuario, 'N', nota_fiscal_item_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;
			
			select	nr_seq_unidade_adic,
				vl_unitario_item_nf,
				coalesce(vl_desconto,0)
			into STRICT	nota_fiscal_item_w.nr_seq_unidade_adic,
				nota_fiscal_item_w.vl_unitario_item_nf,
				nota_fiscal_item_w.vl_desconto
			from	nota_fiscal_item
			where	nr_sequencia	= nota_fiscal_item_w.nr_sequencia
			and	nr_item_nf	= nota_fiscal_item_w.nr_item_nf;	
			
			nota_fiscal_item_w.vl_total_item_nf	:= nota_fiscal_item_w.qt_item_nf * nota_fiscal_item_w.vl_unitario_item_nf;
			nota_fiscal_item_w.vl_liquido		:= nota_fiscal_item_w.vl_total_item_nf - nota_fiscal_item_w.vl_desconto;
			
			
			if (nota_fiscal_item_w.nr_seq_unidade_adic > 0) then
				
				select	coalesce(max(qt_conversao),1)
				into STRICT	qt_conversao_w
				from	unidade_medida_adic_compra
				where	nr_sequencia = nota_fiscal_item_w.nr_seq_unidade_adic;
				
				nota_fiscal_item_w.qt_item_estoque	:= nota_fiscal_item_w.qt_item_nf * qt_conversao_w;
			
			else				
				select	obter_qt_convertida_compra_est(	nota_fiscal_item_w.cd_material,
									nota_fiscal_item_w.qt_item_nf,
									nota_fiscal_item_w.cd_unidade_medida_compra,
									nota_fiscal_item_w.nr_seq_marca,
									cd_cgc_w,
									cd_estabelecimento_w)
				into STRICT	nota_fiscal_item_w.qt_item_estoque
				;
			end if;
			
			
			if (reg_integracao_w.qt_reg_log = 0) then
			
				select	count(*)
				into STRICT	qt_registros_w
				from	nota_fiscal_item
				where	nr_sequencia	= nota_fiscal_item_w.nr_sequencia
				and	nr_item_nf	= nota_fiscal_item_w.nr_item_nf;
				
				if (qt_registros_w > 0) then
				
					/* Atualiza os dados do item da nota fiscal*/

					update	nota_fiscal_item
					set	cd_material			= nota_fiscal_item_w.cd_material,
						qt_item_nf			= nota_fiscal_item_w.qt_item_nf,
						cd_unidade_medida_compra		= nota_fiscal_item_w.cd_unidade_medida_compra,
						cd_local_estoque			= nota_fiscal_item_w.cd_local_estoque,
						nr_seq_marca 			= nota_fiscal_item_w.nr_seq_marca,
						nm_usuario 			= nota_fiscal_item_w.nm_usuario,
						dt_atualizacao 			= clock_timestamp(),
						vl_total_item_nf		= nota_fiscal_item_w.vl_total_item_nf,
						vl_liquido			= nota_fiscal_item_w.vl_liquido,
						qt_item_estoque			= nota_fiscal_item_w.qt_item_estoque
					where	nr_sequencia			= nota_fiscal_item_w.nr_sequencia
					and	nr_item_nf			= nota_fiscal_item_w.nr_item_nf;
					
					select	coalesce(max(nr_seq_inspecao),0)
					into STRICT	nota_fiscal_item_w.nr_seq_inspecao
					from	nota_fiscal_item
					where	nr_sequencia			= nota_fiscal_item_w.nr_sequencia
					and	nr_item_nf			= nota_fiscal_item_w.nr_item_nf;
					
					if (nota_fiscal_item_w.nr_seq_inspecao > 0) then
						
						/* Atualiza os dados da inspecao*/

						update	inspecao_recebimento
						set	cd_material		= nota_fiscal_item_w.cd_material,
							qt_inspecao		= nota_fiscal_item_w.qt_item_nf,
							nr_seq_marca 		= nota_fiscal_item_w.nr_seq_marca,
							nm_usuario 		= nota_fiscal_item_w.nm_usuario,
							dt_atualizacao 		= clock_timestamp()
						where	nr_sequencia		= nota_fiscal_item_w.nr_seq_inspecao;
					end if;
					
					
					/*Coloca todos os lote como Nao Conferidos*/

					update	nota_fiscal_item_lote
					set	ie_conferido	= 'N'
					where	nr_seq_nota	= nota_fiscal_item_w.nr_sequencia;
					
					update	inspecao_recebimento_lote
					set	ie_conferido	= 'N'
					where	nr_seq_inspecao = nota_fiscal_item_w.nr_seq_inspecao;

					
					open C03;
					loop
					fetch C03 into	
						c03_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						
						reg_integracao_w.nm_tabela		:=	'NOTA_FISCAL_ITEM_LOTE';
						reg_integracao_w.nm_elemento	:=	'SUPPLIER_BATCH';
						reg_integracao_w.nr_seq_visao	:=	16574;						
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_LOTE_FABRICACAO', c03_w.cd_lote_fabricacao, 'N', nota_fiscal_item_lote_w.cd_lote_fabricacao) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.cd_lote_fabricacao := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_VALIDADE', c03_w.dt_validade, 'N', nota_fiscal_item_lote_w.dt_validade) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.dt_validade := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'IE_INDETERMINADO', c03_w.ie_indeterminado, 'N', nota_fiscal_item_lote_w.ie_indeterminado) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.ie_indeterminado := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'QT_MATERIAL', c03_w.qt_material, 'N', nota_fiscal_item_lote_w.qt_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.qt_material := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'CD_BARRA_MATERIAL', c03_w.cd_barra_material, 'N', nota_fiscal_item_lote_w.cd_barra_material) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.cd_barra_material := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DS_BARRAS', c03_w.ds_barras, 'N', nota_fiscal_item_lote_w.ds_barras) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.ds_barras := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_SEQ_MARCA', c03_w.nr_seq_marca, 'S', nota_fiscal_item_lote_w.nr_seq_marca) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.nr_seq_marca := _ora2pg_r.ds_valor_retorno_p;
						SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NM_USUARIO', c03_w.nm_usuario, 'S', nota_fiscal_item_lote_w.nm_usuario) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; nota_fiscal_item_lote_w.nm_usuario := _ora2pg_r.ds_valor_retorno_p;					
						nota_fiscal_item_lote_w.dt_atualizacao		:= clock_timestamp();
						nota_fiscal_item_lote_w.dt_atualizacao_nrec	:= clock_timestamp();
						nota_fiscal_item_lote_w.nm_usuario_nrec	:= nota_fiscal_item_lote_w.nm_usuario;
						nota_fiscal_item_lote_w.nr_seq_nota		:= nota_fiscal_item_w.nr_sequencia;
						nota_fiscal_item_lote_w.nr_item_nf		:= nota_fiscal_item_w.nr_item_nf;						
						nota_fiscal_item_lote_w.qt_compra		:= dividir(nota_fiscal_item_lote_w.qt_material,Obter_conversao_Material(nota_fiscal_item_w.cd_material,'CE'));
						nota_fiscal_item_lote_w.ie_conferido		:= 'S';
						
						if (reg_integracao_w.qt_reg_log = 0) then
						
							select	coalesce(max(nr_sequencia),0)
							into STRICT	nota_fiscal_item_lote_w.nr_sequencia
							from	nota_fiscal_item_lote
							where	nr_seq_nota		= nota_fiscal_item_w.nr_sequencia
							and	nr_item_nf		= nota_fiscal_item_w.nr_item_nf
							and	cd_lote_fabricacao		= nota_fiscal_item_lote_w.cd_lote_fabricacao;
							
							if (nota_fiscal_item_lote_w.nr_sequencia > 0) then
							
								select	dt_atualizacao_nrec,
									nm_usuario_nrec,
									dt_fabricacao,
									nr_serie_material
								into STRICT	nota_fiscal_item_lote_w.dt_atualizacao_nrec,
									nota_fiscal_item_lote_w.nm_usuario_nrec,
									nota_fiscal_item_lote_w.dt_fabricacao,
									nota_fiscal_item_lote_w.nr_serie_material
								from	nota_fiscal_item_lote
								where	nr_sequencia = nota_fiscal_item_lote_w.nr_sequencia;
									
								/* Atualiza os dados do lote fornecedor da nota*/

								update	nota_fiscal_item_lote
								set	row = nota_fiscal_item_lote_w
								where	nr_sequencia = nota_fiscal_item_lote_w.nr_sequencia;
							else
								select	nextval('nota_fiscal_item_lote_seq')
								into STRICT	nota_fiscal_item_lote_w.nr_sequencia
								;
								
								/* Cria o lote fornecedor na nota caso ele nao exista*/

								insert into nota_fiscal_item_lote values (nota_fiscal_item_lote_w.*);
							end if;
							
							select	count(*)
							into STRICT	qt_registros_w
							from	inspecao_recebimento_lote
							where	nr_seq_inspecao = nota_fiscal_item_w.nr_seq_inspecao;
							
							if (qt_registros_w > 0) then
							
								inspecao_recebimento_lote_w.dt_atualizacao		:= clock_timestamp();
								inspecao_recebimento_lote_w.dt_atualizacao_nrec	:= clock_timestamp();
								inspecao_recebimento_lote_w.nm_usuario_nrec		:= nota_fiscal_item_lote_w.nm_usuario;
								inspecao_recebimento_lote_w.nm_usuario		:= nota_fiscal_item_lote_w.nm_usuario;
								inspecao_recebimento_lote_w.nr_seq_inspecao		:= nota_fiscal_item_w.nr_seq_inspecao;
								inspecao_recebimento_lote_w.dt_validade		:= nota_fiscal_item_lote_w.dt_validade;
								inspecao_recebimento_lote_w.qt_material		:= nota_fiscal_item_lote_w.qt_material;
								inspecao_recebimento_lote_w.cd_lote_fabricacao		:= nota_fiscal_item_lote_w.cd_lote_fabricacao;
								inspecao_recebimento_lote_w.nr_seq_marca		:= nota_fiscal_item_lote_w.nr_seq_marca;
								inspecao_recebimento_lote_w.ie_indeterminada		:= nota_fiscal_item_lote_w.ie_indeterminado;
								inspecao_recebimento_lote_w.ds_barras		:= nota_fiscal_item_lote_w.ds_barras;
								inspecao_recebimento_lote_w.cd_barra_material		:= nota_fiscal_item_lote_w.cd_barra_material;
								inspecao_recebimento_lote_w.ie_conferido		:= 'S';
								inspecao_recebimento_lote_w.dt_fabricacao		:= null;

								select	coalesce(max(nr_sequencia),0)
								into STRICT	inspecao_recebimento_lote_w.nr_sequencia
								from	inspecao_recebimento_lote
								where	nr_seq_inspecao	= nota_fiscal_item_w.nr_seq_inspecao
								and	cd_lote_fabricacao	= nota_fiscal_item_lote_w.cd_lote_fabricacao;
								
								if (inspecao_recebimento_lote_w.nr_sequencia > 0) then
									
									select	dt_atualizacao_nrec,
										nm_usuario_nrec,
										dt_fabricacao
									into STRICT	inspecao_recebimento_lote_w.dt_atualizacao_nrec,
										inspecao_recebimento_lote_w.nm_usuario_nrec,
										inspecao_recebimento_lote_w.dt_fabricacao
									from	inspecao_recebimento_lote
									where	nr_sequencia = inspecao_recebimento_lote_w.nr_sequencia;
									
									
									/* Atualiza os dados do lote fornecedor da inspecao recebimento*/

									update	inspecao_recebimento_lote
									set	row = inspecao_recebimento_lote_w
									where	nr_sequencia = inspecao_recebimento_lote_w.nr_sequencia;
								else
									select	nextval('inspecao_recebimento_lote_seq')
									into STRICT	inspecao_recebimento_lote_w.nr_sequencia
									;
									
									/* Cria o lote fornecedor na inspecao caso ele nao exista*/

									insert into inspecao_recebimento_lote values (inspecao_recebimento_lote_w.*);
								end if;
							end if;
						end if;
							
							nota_fiscal_item_lote_w := null;
							inspecao_recebimento_lote_w := null;
						end;
					end loop;
					close C03;
					
					/* Deleta os lotes da nota que nao passaram pela conferencia. Sifnifica que eles nao existem, entao tem que deletar.*/

					delete
					from	nota_fiscal_item_lote
					where	nr_seq_nota	= nota_fiscal_item_w.nr_sequencia
					and	nr_item_nf	= nota_fiscal_item_w.nr_item_nf
					and	coalesce(ie_conferido,'N')	= 'N';
					
					
					/*Delete os lotes da inspecao que nao passaram pela conferencia. Significa que eles nao existem, entao tem que deletar*/

					delete
					from	inspecao_recebimento_lote
					where	nr_seq_inspecao	= nota_fiscal_item_w.nr_seq_inspecao
					and	coalesce(ie_conferido,'N')	= 'N';					
				end if;
			end if;
			end;
		end loop;
		close C02;
		
		if (reg_integracao_w.qt_reg_log = 0) then
		
			select	count(*)
			into STRICT	qt_registros_w
			from	nota_fiscal a,
				nota_fiscal_item b
			where	a.nr_sequencia = b.nr_sequencia
			and	a.nr_sequencia = nota_fiscal_item_w.nr_sequencia
			and	coalesce(a.dt_atualizacao_estoque::text, '') = '';
			
			if (qt_registros_w > 0) then

				select	dt_entrada_saida,
						nm_usuario
				into STRICT	dt_entrada_saida_w,
						nm_usuario_w
				from	nota_fiscal
				where	nr_sequencia = nota_fiscal_item_w.nr_sequencia;
				
					begin		
						CALL atualiza_total_nota_fiscal(nota_fiscal_item_w.nr_sequencia,coalesce(nm_usuario_w,'INTPDTASY'));
						CALL gerar_lote_fornec_nf(nota_fiscal_item_w.nr_sequencia,'N',coalesce(nota_fiscal_item_w.nm_usuario,'INTPDTASY'),'S');
						
						qt_inconsistencia_w := consiste_nota_integra(nota_fiscal_item_w.nr_sequencia, nm_usuario_w, qt_inconsistencia_w);
						commit;

						if (coalesce(qt_inconsistencia_w,0) <= 0 or coalesce(id_event_p,'66') = '66') then		
							CALL atualizar_nota_fiscal(nota_fiscal_item_w.nr_sequencia,'I',coalesce(nota_fiscal_item_w.nm_usuario,'INTPDTASY'),0,'N');
						else
							ds_erro_w := wheb_mensagem_pck.get_texto(1078413);
							INTPD_GRAVAR_LOG_RECEBIMENTO(nr_sequencia_p,ds_erro_w,'INTPDTASY');
						end if;
					exception
					when others then
						rollback;
						ds_erro_w := sqlerrm;				
						INTPD_GRAVAR_LOG_RECEBIMENTO(nr_sequencia_p,ds_erro_w,'INTPDTASY');
					end;
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

if	((reg_integracao_w.qt_reg_log > 0) or (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '')) then
	begin
	
	rollback;

	update intpd_fila_transmissao
	set	ie_status = 'E',
		ie_tipo_erro = 'F'
	where	nr_sequencia = nr_sequencia_p;

	for i in 0..reg_integracao_w.qt_reg_log-1 loop		
		INTPD_GRAVAR_LOG_RECEBIMENTO(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY');
	end loop;
	end;

else

	update	intpd_fila_transmissao
	set	ie_status = 'S',
		nr_seq_documento = c01_w.nr_sequencia
	where	nr_sequencia = nr_sequencia_p;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebe_conf_fisica_nf ( nr_sequencia_p bigint, xml_p xml, id_event_p text default '66') FROM PUBLIC;

