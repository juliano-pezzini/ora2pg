-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_marcar_result_critico ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_seq_prescr_p prescr_procedimento.nr_sequencia%TYPE, ie_critico_p text, nm_usuario_critico_p text, nr_seq_result_p exame_lab_result_item.nr_seq_resultado%TYPE default null, nr_seq_p exame_lab_result_item.nr_sequencia%TYPE default null) AS $body$
DECLARE

    nr_seq_proc_compl_w   prescr_procedimento.nr_seq_proc_compl%TYPE;
    ie_comunicacao_critico_w prescr_procedimento_compl.ie_comunicacao_critico%TYPE;
    nr_sequencia_w lab_comunicacao_critico.nr_sequencia%TYPE;

BEGIN
    IF (ie_critico_p = 'S')
    THEN 
        ie_comunicacao_critico_w := 1;
    ELSE
        ie_comunicacao_critico_w := 4;
        SELECT nextval('lab_comunicacao_critico_seq')
        INTO STRICT nr_sequencia_w
;

        INSERT INTO lab_comunicacao_critico(
            nr_sequencia, 
            dt_atualizacao, 
            nm_usuario, 
            dt_atualizacao_nrec, 
            nm_usuario_nrec,
            nr_prescricao, 
            nr_seq_prescricao, 
            ie_comunicacao_critico,
            dt_liberacao
        ) VALUES (
            nr_sequencia_w, 
            clock_timestamp(), 
            nm_usuario_critico_p, 
            clock_timestamp(), 
            nm_usuario_critico_p,
            nr_prescricao_p, 
            nr_seq_prescr_p, 
            ie_comunicacao_critico_w,
            clock_timestamp()
        );
    END IF;

    SELECT
        MAX(nr_seq_proc_compl)
    INTO STRICT nr_seq_proc_compl_w
    FROM
        prescr_procedimento
    WHERE
        nr_prescricao = nr_prescricao_p
        AND nr_sequencia = nr_seq_prescr_p;

    IF ( coalesce(nr_seq_proc_compl_w::text, '') = '' )
    THEN
        SELECT
            nextval('prescr_procedimento_compl_seq')
        INTO STRICT nr_seq_proc_compl_w
;

        INSERT INTO prescr_procedimento_compl(
            nr_sequencia,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ie_critico,
            nm_usuario_critico,
            ie_comunicacao_critico
        ) VALUES (
            nr_seq_proc_compl_w,
            clock_timestamp(),
            nm_usuario_critico_p,
            clock_timestamp(),
            nm_usuario_critico_p,
            ie_critico_p,
            nm_usuario_critico_p,
            ie_comunicacao_critico_w
        );

        UPDATE prescr_procedimento
        SET
            nr_seq_proc_compl = nr_seq_proc_compl_w,
            dt_atualizacao = clock_timestamp(),
            nm_usuario = nm_usuario_critico_p
        WHERE
            nr_prescricao = nr_prescricao_p
            AND nr_sequencia = nr_seq_prescr_p;

        IF
            (nr_seq_result_p IS NOT NULL AND nr_seq_result_p::text <> '') AND (nr_seq_p IS NOT NULL AND nr_seq_p::text <> '')
        THEN
            UPDATE exame_lab_result_item
            SET
                ie_resultado_critico = ie_critico_p
            WHERE
                nr_seq_resultado = nr_seq_result_p
                AND nr_sequencia = nr_seq_p;
        END IF;

    ELSE
        UPDATE prescr_procedimento_compl
        SET
            ie_critico = ie_critico_p,
            ie_comunicacao_critico = ie_comunicacao_critico_w,
            dt_atualizacao = clock_timestamp(),
            nm_usuario_critico = nm_usuario_critico_p,
            nm_usuario = nm_usuario_critico_p
        WHERE
            nr_sequencia = nr_seq_proc_compl_w;

        IF
            (nr_seq_result_p IS NOT NULL AND nr_seq_result_p::text <> '') AND (nr_seq_p IS NOT NULL AND nr_seq_p::text <> '')
        THEN
            UPDATE exame_lab_result_item
            SET
                ie_resultado_critico = ie_critico_p
            WHERE
                nr_seq_resultado = nr_seq_result_p
                AND nr_sequencia = nr_seq_p;

        END IF;

    END IF;

  --commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_marcar_result_critico ( nr_prescricao_p prescr_procedimento.nr_prescricao%TYPE, nr_seq_prescr_p prescr_procedimento.nr_sequencia%TYPE, ie_critico_p text, nm_usuario_critico_p text, nr_seq_result_p exame_lab_result_item.nr_seq_resultado%TYPE default null, nr_seq_p exame_lab_result_item.nr_sequencia%TYPE default null) FROM PUBLIC;

