-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_verifica_calendario_cron (dt_inicio_ativ_p timestamp, qt_hora_prev_p bigint, dt_inicio_definitivo_p INOUT timestamp, dt_fim_definitivo_p INOUT timestamp, nr_seq_cronograma_p bigint, nm_usuario_p text, nr_sequencia_p bigint) AS $body$
DECLARE


ie_dia_semana_w		varchar(1);
ie_inicio_definido_w	varchar(1);
ie_fim_definido_w	varchar(1);
dt_inicio_ativ_w	timestamp;
dt_inicio_ativ_ww	timestamp;
qt_minutos_w		double precision;
qt_voltas_w		bigint;
hr_final_w		varchar(5);
hr_inicio_w		varchar(5);
qt_min_intervalo_w	smallint;
qt_minutos_dia_w	bigint;
qt_regra_w		bigint;
qt_excessao_w		bigint;
dt_ajuste_invervalo_w	timestamp;
ie_tipo_excessao_w	varchar(1);
nr_seq_equipe_papel_w	bigint;


BEGIN

qt_minutos_w := qt_hora_prev_p*60;
ie_inicio_definido_w := 'N';
ie_fim_definido_w := 'N';
qt_voltas_w := 1;
dt_inicio_ativ_w := dt_inicio_ativ_p;
dt_inicio_ativ_ww := dt_inicio_ativ_w;
dt_inicio_definitivo_p := dt_inicio_ativ_w;

select	max(nr_seq_equipe_papel)
into STRICT	nr_seq_equipe_papel_w
from	proj_cron_etapa_equipe
where	nr_seq_etapa_cron = nr_sequencia_p;

while(ie_fim_definido_w = 'N') loop
	begin

	ie_dia_semana_w	:= pkg_date_utils.get_WeekDay(dt_inicio_ativ_w);
	hr_inicio_w	:= null;

	select	count(*)
	into STRICT	qt_regra_w
	from	proj_cron_calendario
	where	nr_seq_cronograma = nr_seq_cronograma_p
	and	((ie_dia_semana = ie_dia_semana_w) or (pkg_date_utils.is_business_day(dt_inicio_ativ_w) = 1 and ie_dia_semana = '9'));

	select	count(*)
	into STRICT	qt_excessao_w
	from	proj_cron_excessao
	where	nr_seq_cronograma = nr_seq_cronograma_p
	and	trunc(dt_inicio_ativ_w,'dd') between trunc(dt_inicial,'dd') and trunc(dt_final,'dd');

	if (qt_excessao_w > 0) then

		if (nr_seq_equipe_papel_w IS NOT NULL AND nr_seq_equipe_papel_w::text <> '') then

			select	max(hr_final),
					max(hr_inicio),
					max(ie_tipo_excessao),
					max(qt_min_intervalo)
			into STRICT	hr_final_w,
					hr_inicio_w,
					ie_tipo_excessao_w,
					qt_min_intervalo_w
			from	proj_cron_excessao
			where	nr_seq_cronograma = nr_seq_cronograma_p
			and		nr_seq_equipe_papel = nr_seq_equipe_papel_w
			and		trunc(dt_inicio_ativ_w,'dd') between trunc(dt_inicial,'dd') and trunc(dt_final,'dd');

		end if;

		if (coalesce(hr_inicio_w::text, '') = '') then

			select	max(hr_final),
					max(hr_inicio),
					max(ie_tipo_excessao),
					max(qt_min_intervalo)
			into STRICT	hr_final_w,
					hr_inicio_w,
					ie_tipo_excessao_w,
					qt_min_intervalo_w
			from	proj_cron_excessao
			where	nr_seq_cronograma = nr_seq_cronograma_p
			and		trunc(dt_inicio_ativ_w,'dd') between trunc(dt_inicial,'dd') and trunc(dt_final,'dd');

		end if;

		if (ie_tipo_excessao_w in ('A','D')) then

			if (dt_inicio_ativ_w = to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss')) then
				-- Se a atividade anterior acabar ao meio dia, inicia após o intervalo do dia.
				dt_inicio_definitivo_p := dt_inicio_ativ_w + (qt_min_intervalo_w/1440);
				dt_inicio_ativ_w := dt_inicio_ativ_w + (qt_min_intervalo_w/1440);
			end if;

			-- Se ie_inicio_definido_w for S, irá colocar a data inicial como a hora de início do próximo dia.
			if (ie_inicio_definido_w = 'S') then
				dt_inicio_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss');
				ie_inicio_definido_w := 'F';
			end if;
			-- Verifica se a data de início não é a data final da regra
			if (ie_inicio_definido_w = 'N') and (dt_inicio_ativ_w = to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_final_w || ':00','dd/mm/yyyy hh24:mi:ss')) then
				-- Se for, seta o ie como 'S'.
				ie_inicio_definido_w := 'S';
			end if;

			if (qt_voltas_w = 1) then --Regra do dia inicial
				-- Pega os minutos de início do dia até a hora da data prevista, e soma no total de minutos.
				qt_minutos_w := qt_minutos_w + (dt_inicio_ativ_w - to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')) * 1440;
			end if;
			-- Quantidade de minutos disponíveis no dia
			qt_minutos_dia_w := (to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_final_w || ':00','dd/mm/yyyy hh24:mi:ss') - to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')) * 1440;

			if (to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')+ (qt_minutos_w/1440) >= to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss') and (dt_inicio_ativ_ww < to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss'))) then
					-- Se for após o intervalo, diminuir o tempo do intervalo.
					qt_minutos_dia_w := qt_minutos_dia_w - qt_min_intervalo_w;
			end if;

			if (qt_minutos_w > qt_minutos_dia_w) then
				-- Se a quantidada de minutos disponíveis for maior do que a quantidade de minutos do dia, diminui os minutos do dia e passa para o próximo dia.
				qt_minutos_w := qt_minutos_w - qt_minutos_dia_w;
			elsif (qt_minutos_w <= qt_minutos_dia_w) then

				if (to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')+ (qt_minutos_w/1440) > to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss') and (dt_inicio_ativ_ww < to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss'))) then
					-- Se for após o intervalo, soma o tempo do intervalo no horário do fim da atividade.
					dt_fim_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss') + ((qt_minutos_w + qt_min_intervalo_w)/1440);
				else
					-- Senão somente soma a quantide de minutos do dia.
					dt_fim_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss') + (qt_minutos_w/1440);
				end if;
				dt_ajuste_invervalo_w := dt_fim_definitivo_p;
				--Se o fim da atividade for dentro do intervalo, coloca no fim do intervalo com a quantidade de minutos da diferença.
				if (dt_ajuste_invervalo_w > to_Date(to_char(dt_ajuste_invervalo_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss') and dt_ajuste_invervalo_w < (to_Date(to_char(dt_ajuste_invervalo_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss')+(qt_min_intervalo_w/1440))) then
					dt_fim_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss')+(qt_min_intervalo_w/1440) + (dt_ajuste_invervalo_w - to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss'));
				end if;

				ie_fim_definido_w := 'S';

			end if;
			qt_voltas_w := qt_voltas_w + 1;
		end if;


	elsif (qt_regra_w > 0) then

		qt_min_intervalo_w := 0;
		hr_inicio_w := null;

		if (nr_seq_equipe_papel_w IS NOT NULL AND nr_seq_equipe_papel_w::text <> '') then

			if (ie_dia_semana_w in ('2','3','4','5','6')) then
				select	max(hr_final),
					max(hr_inicio),
					max(qt_min_intervalo)
				into STRICT	hr_final_w,
					hr_inicio_w,
					qt_min_intervalo_w
				from	proj_cron_calendario
				where	nr_seq_cronograma = nr_seq_cronograma_p
				and	nr_seq_equipe_papel = nr_seq_equipe_papel_w
				and (ie_dia_semana = ie_dia_semana_w
					or ie_dia_semana = '9');

			elsif (ie_dia_semana_w in ('1','7')) then

				select	max(hr_final),
					max(hr_inicio),
					max(qt_min_intervalo)
				into STRICT	hr_final_w,
					hr_inicio_w,
					qt_min_intervalo_w
				from	proj_cron_calendario
				where	nr_seq_cronograma = nr_seq_cronograma_p
				and	ie_dia_semana = ie_dia_semana_w
				and	nr_seq_equipe_papel = nr_seq_equipe_papel_w;
			end if;
		end if;

		if (coalesce(hr_inicio_w::text, '') = '') then

			if (ie_dia_semana_w in ('2','3','4','5','6')) then
				select	max(hr_final),
					max(hr_inicio),
					max(qt_min_intervalo)
				into STRICT	hr_final_w,
					hr_inicio_w,
					qt_min_intervalo_w
				from	proj_cron_calendario
				where	nr_seq_cronograma = nr_seq_cronograma_p
				and (ie_dia_semana = ie_dia_semana_w
					or ie_dia_semana = '9');

			elsif (ie_dia_semana_w in ('1','7')) then

				select	max(hr_final),
					max(hr_inicio),
					max(qt_min_intervalo)
				into STRICT	hr_final_w,
					hr_inicio_w,
					qt_min_intervalo_w
				from	proj_cron_calendario
				where	nr_seq_cronograma = nr_seq_cronograma_p
				and	ie_dia_semana = ie_dia_semana_w;
			end if;

		end if;

		if (dt_inicio_ativ_w = to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss')) then
			-- Se a atividade anterior acabar ao meio dia, inicia após o intervalo do dia.
			dt_inicio_definitivo_p := dt_inicio_ativ_w + (qt_min_intervalo_w/1440);
			dt_inicio_ativ_w := dt_inicio_ativ_w + (qt_min_intervalo_w/1440);
		end if;

		-- Se ie_inicio_definido_w for S, irá colocar a data inicial como a hora de início do próximo dia.
		if (ie_inicio_definido_w = 'S') then
			dt_inicio_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss');
			ie_inicio_definido_w := 'F';
		end if;
		-- Verifica se a data de início não é a data final da regra
		if (ie_inicio_definido_w = 'N') and (dt_inicio_ativ_w = to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_final_w || ':00','dd/mm/yyyy hh24:mi:ss')) then
			-- Se for, seta o ie como 'S'.
			ie_inicio_definido_w := 'S';
		end if;

		if (qt_voltas_w = 1) then --Regra do dia inicial
			-- Pega os minutos de início do dia até a hora da data prevista, e soma no total de minutos.
			qt_minutos_w := qt_minutos_w + (dt_inicio_ativ_w - to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')) * 1440;
		end if;
		-- Quantidade de minutos disponíveis no dia
		qt_minutos_dia_w := (to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_final_w || ':00','dd/mm/yyyy hh24:mi:ss') - to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')) * 1440;

		if (to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')+ (qt_minutos_w/1440) >= to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss') and (dt_inicio_ativ_ww < to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss'))) then
				-- Se for após o intervalo, diminuir o tempo do intervalo.
				qt_minutos_dia_w := qt_minutos_dia_w - qt_min_intervalo_w;
		end if;

		if (qt_minutos_w > qt_minutos_dia_w) then
			-- Se a quantidada de minutos disponíveis for maior do que a quantidade de minutos do dia, diminui os minutos do dia e passa para o próximo dia.
			qt_minutos_w := qt_minutos_w - qt_minutos_dia_w;
		elsif (qt_minutos_w <= qt_minutos_dia_w) then

			if (to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss')+ (qt_minutos_w/1440) > to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss') and (dt_inicio_ativ_ww < to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss'))) then
				-- Se for após o intervalo, soma o tempo do intervalo no horário do fim da atividade.
				dt_fim_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss') + ((qt_minutos_w + qt_min_intervalo_w)/1440);
			else
				-- Senão somente soma a quantide de minutos do dia.
				dt_fim_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' '|| hr_inicio_w || ':00','dd/mm/yyyy hh24:mi:ss') + (qt_minutos_w/1440);
			end if;
			dt_ajuste_invervalo_w := dt_fim_definitivo_p;
			--Se o fim da atividade for dentro do intervalo, coloca no fim do intervalo com a quantidade de minutos da diferença.
			if (dt_ajuste_invervalo_w > to_Date(to_char(dt_ajuste_invervalo_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss') and dt_ajuste_invervalo_w < (to_Date(to_char(dt_ajuste_invervalo_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss')+(qt_min_intervalo_w/1440))) then
				dt_fim_definitivo_p := to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss')+(qt_min_intervalo_w/1440) + (dt_ajuste_invervalo_w - to_Date(to_char(dt_inicio_ativ_w,'dd/mm/yyyy') ||' 12:00:00','dd/mm/yyyy hh24:mi:ss'));
			end if;

			ie_fim_definido_w := 'S';

		end if;
		qt_voltas_w := qt_voltas_w + 1;
	end if;
	dt_inicio_ativ_w := dt_inicio_ativ_w + 1;
	end;
	end loop;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_verifica_calendario_cron (dt_inicio_ativ_p timestamp, qt_hora_prev_p bigint, dt_inicio_definitivo_p INOUT timestamp, dt_fim_definitivo_p INOUT timestamp, nr_seq_cronograma_p bigint, nm_usuario_p text, nr_sequencia_p bigint) FROM PUBLIC;

