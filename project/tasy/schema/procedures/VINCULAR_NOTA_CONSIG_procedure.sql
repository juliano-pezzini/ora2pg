-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_nota_consig ( nr_seq_vinc_consig_p bigint, nr_sequencia_p bigint, nr_item_nf_p bigint, ds_lista_lote_p text, nm_usuario_p text) AS $body$
DECLARE


ds_historico_w		varchar(255);

ds_lista_lote_w		varchar(4000);
cd_lote_fabricacao_w	varchar(20);
dt_validade_w		timestamp;
ie_indeterminado_w	varchar(1);
qt_existe_w		bigint;
qt_existe_lote_w		bigint;
tam_lista_w		bigint;
ie_pos_virgula_w		bigint;
nr_seq_lote_fornec_w	bigint;



BEGIN

if (nr_seq_vinc_consig_p IS NOT NULL AND nr_seq_vinc_consig_p::text <> '') then
	begin

	update	nota_fiscal_item
	set	nr_sequencia_vinc_consig = nr_seq_vinc_consig_p
	where	nr_sequencia = nr_sequencia_p
	and	nr_item_nf = nr_item_nf_p;

	ds_historico_w := WHEB_MENSAGEM_PCK.get_texto(311875,'NR_SEQ_VINC_CONSIG_P=' || nr_seq_vinc_consig_p || ';' || 'NR_ITEM_NF_P=' || nr_item_nf_p);

	CALL gerar_historico_nota_fiscal( nr_sequencia_p, nm_usuario_p, 48, ds_historico_w);

	ds_lista_lote_w	:= ds_lista_lote_p;

	if (ds_lista_lote_w IS NOT NULL AND ds_lista_lote_w::text <> '') then
		begin

		while(ds_lista_lote_w IS NOT NULL AND ds_lista_lote_w::text <> '') loop
			begin

			tam_lista_w		:=	length(ds_lista_lote_w);
			ie_pos_virgula_w		:=	position(',' in ds_lista_lote_w);

			if (ie_pos_virgula_w <> 0) then
				nr_seq_lote_fornec_w	:= (substr(ds_lista_lote_w,1,(ie_pos_virgula_w - 1)))::numeric;
				ds_lista_lote_w		:= substr(ds_lista_lote_w,(ie_pos_virgula_w + 1),tam_lista_w);
			end if;

			select	count(*)
			into STRICT	qt_existe_w
			from	nota_fiscal_item
			where	nr_sequencia = nr_seq_vinc_consig_p
			and	nr_seq_lote_fornec = nr_seq_lote_fornec_w;

			if (qt_existe_w <> 0) then
				begin

				select	cd_lote_fabricacao,
					dt_validade,
					ie_indeterminado
				into STRICT	cd_lote_fabricacao_w,
					dt_validade_w,
					ie_indeterminado_w
				from	nota_fiscal_item
				where	nr_sequencia = nr_seq_vinc_consig_p
				and	nr_seq_lote_fornec = nr_seq_lote_fornec_w;

				update	nota_fiscal_item
				set	cd_lote_fabricacao		= cd_lote_fabricacao_w,
					dt_validade		= dt_validade_w,
					ie_indeterminado		= ie_indeterminado_w
				where	nr_sequencia		= nr_sequencia_p
				and	nr_item_nf		= nr_item_nf_p;

				end;
			else
				begin

				select	cd_lote_fabricacao
				into STRICT	cd_lote_fabricacao_w
				from	nota_fiscal_item_lote
				where	nr_seq_nota = nr_seq_vinc_consig_p
				and	nr_seq_lote_fornec = nr_seq_lote_fornec_w;

				select	count(*)
				into STRICT	qt_existe_lote_w
				from	nota_fiscal_item_lote
				where	nr_seq_nota = nr_sequencia_p
				and	nr_item_nf = nr_item_nf_p
				and	cd_lote_fabricacao = cd_lote_fabricacao_w;

				if (cd_lote_fabricacao_w IS NOT NULL AND cd_lote_fabricacao_w::text <> '') and (qt_existe_lote_w = 0) then
					begin

					insert into nota_fiscal_item_lote(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_nota,
						nr_item_nf,
						dt_validade,
						ie_indeterminado,
						qt_material,
						cd_lote_fabricacao,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_marca,
						qt_compra,
						dt_fabricacao)
					SELECT	nextval('nota_fiscal_item_lote_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_item_nf_p,
						dt_validade,
						ie_indeterminado,
						qt_material,
						cd_lote_fabricacao,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_marca,
						qt_compra,
						dt_fabricacao
					from	nota_fiscal_item_lote
					where	nr_seq_nota = nr_seq_vinc_consig_p
					and	nr_seq_lote_fornec = nr_seq_lote_fornec_w;

					end;
				end if;

				end;
			end if;

			end;
		end loop;

		end;
	end if;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_nota_consig ( nr_seq_vinc_consig_p bigint, nr_sequencia_p bigint, nr_item_nf_p bigint, ds_lista_lote_p text, nm_usuario_p text) FROM PUBLIC;

