-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE rc_itens AS (nr_tabela_w		bigint,
				 cd_item_w		varchar(255),
				 ds_item_w		varchar(255),
				 qt_solic_w		double precision,
				 qt_aut_w		double precision,
				 ie_tipo_item_w		bigint
				);


CREATE OR REPLACE PROCEDURE pls_tiss_gerar_w_guia_prorrog ( nr_sequencia_autor_p bigint, ds_dir_padrao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Buscar os registros referentes as guias de prorrogação de internação para os relatórios.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [ X ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
type 	tb_itens is table of rc_itens index by integer;

tb_itens_w			tb_itens;

cd_guia_w			pls_guia_plano.cd_guia%type;
dt_autorizacao_w		pls_guia_plano.dt_autorizacao%type;
cd_senha_w			pls_guia_plano.cd_senha%type;
cd_guia_oper_w			pls_guia_plano.cd_guia_principal%type;
cd_guia_refer_w			pls_guia_plano.cd_guia%type;
ds_indicacao_clinica_w		pls_guia_plano.ds_indicacao_clinica%type;
qt_dia_solicitado_w		pls_guia_plano.qt_dia_solicitado%type;
qt_dia_autorizado_w		pls_guia_plano.qt_dia_autorizado%type;
ds_observacao_w			pls_guia_plano.ds_observacao%type;
dt_solicitacao_w		pls_guia_plano.dt_solicitacao%type;

cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type; --OS - 1289502
cd_usuario_plano_w		pls_segurado_carteira.cd_usuario_plano%type;

cd_pessoa_fisica_w		pls_segurado.cd_pessoa_fisica%type;

nm_pessoa_fisica_w		pessoa_fisica.nm_pessoa_fisica%type;
nm_solicitante_w		pessoa_fisica.nm_pessoa_fisica%type;

nr_crm_w			medico.nr_crm%type;
uf_crm_w			medico.uf_crm%type;

cd_cpf_cgc_w			varchar(255);
nm_contratado_w			varchar(255);

cd_cbo_saude_w			varchar(255);
cd_conselho_prof_w		varchar(255);
cd_tipo_acomod_w		varchar(255);
ds_proc_mat_w			varchar(255);
cd_proc_mat_w			varchar(255);
cd_ans_w			varchar(20); --OS - 1289502
qt_autorizada_w			double precision;
qt_solicitada_w			double precision;
cd_edicao_w			bigint;
nr_tipo_item_w			bigint;
qt_itens_w			bigint;
qt_proc_mat_guia_w		bigint;
nr_seq_apresentacao_w		bigint;
qt_itens_vazio_w		bigint;
qt_linhas_add_w			bigint;
qt_itens_guia_w			bigint;


nr_seq_guia_w			w_tiss_guia.nr_sequencia%type;
ie_tipo_guia_w			pls_guia_plano.ie_tipo_guia%type;



c01 CURSOR FOR
	SELECT	*
	from (
		SELECT (substr(rpad(obter_descricao_procedimento(a.cd_procedimento,a.ie_origem_proced),100, ' '),1,255)),
			to_char(a.cd_procedimento) cd_procedimento,
			coalesce(a.qt_autorizada,0),
			a.qt_solicitada ,
			pls_obter_cod_tabela_tiss( a.cd_procedimento,  a.ie_origem_proced, null ),
			1 ds
		from	pls_guia_plano_proc a,
			pls_guia_plano b
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_sequencia		= nr_sequencia_autor_p
		and	a.ie_status 		in ('L','P','S','M','N')
		and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
		
union all

		select (substr(rpad(pls_obter_desc_material(a.nr_seq_material),100, ' '),1,255)),
			pls_obter_seq_codigo_material(a.nr_seq_material, null) cd_procedimento,
			coalesce(a.qt_autorizada,0),
			a.qt_solicitada,
			pls_obter_cod_tabela_tiss( null,  null, a.nr_seq_material ) cd_edicao,
			2 ds
		from	pls_guia_plano_mat a,
			pls_guia_plano b
		where	a.nr_seq_guia		= b.nr_sequencia
		and	b.nr_sequencia		= nr_sequencia_autor_p
		and	a.ie_status 		in ('L','P','S','M','N')
		and	coalesce(a.nr_seq_motivo_exc::text, '') = ''
	) alias18
	order by
		ds,
		cd_procedimento;
BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

commit;

if (nr_sequencia_autor_p > 0) then
	select	coalesce(cd_guia_prestador, coalesce(cd_guia_manual, cd_guia)),
		dt_autorizacao,
		coalesce(cd_senha,cd_senha_externa),
		cd_guia_principal,
		cd_guia,
		substr(ds_indicacao_clinica,1,500),
		qt_dia_solicitado,
		pls_obter_cd_tiss_acomodacao(nr_seq_tipo_acomodacao),
		qt_dia_autorizado,
		substr(ds_observacao,1,500),
		dt_solicitacao,
		ie_tipo_guia,
		cd_estabelecimento --OS - 1289502
	into STRICT	cd_guia_w,
		dt_autorizacao_w,
		cd_senha_w,
		cd_guia_refer_w,
		cd_guia_oper_w,
		ds_indicacao_clinica_w,
		qt_dia_solicitado_w,
		cd_tipo_acomod_w,
		qt_dia_autorizado_w,
		ds_observacao_w,
		dt_solicitacao_w,
		ie_tipo_guia_w,
		cd_estabelecimento_w --OS - 1289502
	from	pls_guia_plano
	where	nr_sequencia	= nr_sequencia_autor_p;

	--Guia de Solicitação de Prorrogação de Internação
	if (ie_tipo_guia_w <> '8') then
		goto final;
	end if;
	--OS - 1289502
	cd_ans_w	:= pls_obter_dados_outorgante(cd_estabelecimento_w,'ANS');

	if (coalesce(cd_ans_w::text, '') = '') then
		cd_ans_w	:= pls_obter_dados_outorgante(cd_estabelecimento_p,'ANS');
	end if;

	if (coalesce(cd_ans_w::text, '') = '') then
		select	max(cd_ans)
		into STRICT	cd_ans_w
		from	pls_outorgante
		where	(cd_ans IS NOT NULL AND cd_ans::text <> '');
	end if;
	--fim--OS - 1289502--
	-- Dados beneficiário
	select	substr(pls_obter_dados_segurado(a.nr_seq_segurado,'CR'),1,255),
		substr(tws_get_name_person(d.cd_pessoa_fisica, d.cd_estabelecimento),1,255),
		b.cd_pessoa_fisica
	into STRICT	cd_usuario_plano_w,
		nm_pessoa_fisica_w,
		cd_pessoa_fisica_w
	from	pessoa_fisica d,
		pls_segurado_carteira c,
		pls_segurado b,
		pls_guia_plano a
	where	a.nr_sequencia 		= nr_sequencia_autor_p
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	b.nr_sequencia		= c.nr_seq_segurado
	and	b.cd_pessoa_fisica	= d.cd_pessoa_fisica;

	-- Dados contratado solic
	select	max(substr(pls_obter_contratado_cooperado(nr_sequencia_autor_p, b.cd_pessoa_fisica, 'C'),1,255)),
		max(substr(pls_obter_contratado_cooperado(nr_sequencia_autor_p, b.cd_pessoa_fisica, 'N'),1,255)),
		max(c.nm_pessoa_fisica),
		max(b.nr_crm),
		max(b.uf_crm),
		max(substr((	select	a.cd_cbo
				from	cbo_saude a,
					pls_guia_plano b
				where	b.nr_seq_cbo_saude 	= a.nr_sequencia
				and	b.nr_sequencia 		= nr_sequencia_autor_p), 1, 6)),
		CASE WHEN max(obter_dados_medico(b.cd_pessoa_fisica, 'SGCRM'))='CRM' THEN  '06' WHEN max(obter_dados_medico(b.cd_pessoa_fisica, 'SGCRM'))='CRN' THEN  '07' WHEN max(obter_dados_medico(b.cd_pessoa_fisica, 'SGCRM'))='CRO' THEN  '08' WHEN max(obter_dados_medico(b.cd_pessoa_fisica, 'SGCRM'))='CREFITO' THEN  '05'  ELSE '10' END
	into STRICT	cd_cpf_cgc_w,
		nm_contratado_w,
		nm_solicitante_w,
		nr_crm_w,
		uf_crm_w,
		cd_cbo_saude_w,
		cd_conselho_prof_w
	from	pls_guia_plano a,
		medico b,
		pessoa_fisica c
	where	a.cd_medico_solicitante	= b.cd_pessoa_fisica
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.nr_sequencia 		= nr_sequencia_autor_p;


	qt_itens_w		:= 0;
	nr_seq_apresentacao_w	:= 0;
	qt_proc_mat_guia_w	:= 0;
	qt_itens_guia_w		:= 0;

	tb_itens_w.Delete;

	open c01;
	loop
	fetch c01 into	ds_proc_mat_w,
			cd_proc_mat_w,
			qt_autorizada_w,
			qt_solicitada_w,
			cd_edicao_w,
			nr_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		tb_itens_w[qt_itens_w].nr_tabela_w		:= cd_edicao_w;
		tb_itens_w[qt_itens_w].cd_item_w		:= cd_proc_mat_w;
		tb_itens_w[qt_itens_w].ds_item_w		:= ds_proc_mat_w;
		tb_itens_w[qt_itens_w].qt_solic_w		:= qt_solicitada_w;
		tb_itens_w[qt_itens_w].qt_aut_w			:= qt_autorizada_w;
		tb_itens_w[qt_itens_w].ie_tipo_item_w		:= nr_tipo_item_w;

		qt_itens_w := qt_itens_w + 1;
	end;
	end loop;
	close c01;

	for i in 0.. qt_itens_w-1 loop
		begin
		qt_proc_mat_guia_w	:= qt_proc_mat_guia_w + 1;

		if (qt_proc_mat_guia_w = 1) then

			select	nextval('w_tiss_guia_seq')
			into STRICT	nr_seq_guia_w
			;

			insert into w_tiss_guia(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_sequencia_autor,
				cd_ans, 	--OS - 1289502
				cd_autorizacao, -- cd_guia_w
				dt_autorizacao, -- dt_autorizacao_w
				cd_senha,	-- cd_senha_w
				nr_guia_operadora, -- cd_guia_oper_w
				nr_guia_prestador, --cd_guia_refer_w
				ds_observacao, -- ds_observacao_w
				ds_justificativa, -- ds_indicacao_clinica_w
				dt_solicitacao, -- dt_solicitacao_w
				qt_dose_campo, -- qt_dia_solicitado_w
				qt_dose_total, -- qt_dia_autorizado_w
				ds_especific_mat) -- cd_tipo_acomod_w
			values (nr_seq_guia_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_autor_p,
				cd_ans_w, 	--OS - 1289502
				cd_guia_w,
				dt_autorizacao_w,
				cd_senha_w,
				cd_guia_oper_w,
				cd_guia_refer_w,
				ds_observacao_w,
				replace(ds_indicacao_clinica_w, '#', ''),
				dt_solicitacao_w,
				qt_dia_solicitado_w,
				qt_dia_autorizado_w,
				cd_tipo_acomod_w);


			insert	into w_tiss_beneficiario(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				nm_pessoa_fisica,
				cd_usuario_convenio,
				cd_pessoa_fisica)
			values (nextval('w_tiss_beneficiario_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				nm_pessoa_fisica_w,
				cd_usuario_plano_w,
				cd_pessoa_fisica_w);

			insert into w_tiss_contratado_solic(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				cd_cgc,
				nm_contratado,
				nm_solicitante,
				cd_cnes,
				nr_crm,
				uf_crm,
				cd_cbo_saude)
			values (nextval('w_tiss_contratado_solic_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				cd_cpf_cgc_w,
				nm_contratado_w,
				nm_solicitante_w,
				cd_conselho_prof_w,
				nr_crm_w,
				uf_crm_w,
				cd_cbo_saude_w);
		end if;

		nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

		if (i < qt_itens_w) then

			insert	into w_tiss_opm(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				nr_seq_apresentacao,
				ds_opm,
				cd_opm,
				qt_autorizada,
				qt_solicitada,
				ie_opcao_fabricante,
				cd_edicao)
			values (nextval('w_tiss_opm_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				nr_seq_apresentacao_w,
				tb_itens_w[i].ds_item_w,
				tb_itens_w[i].cd_item_w,
				tb_itens_w[i].qt_aut_w,
				tb_itens_w[i].qt_solic_w,
				tb_itens_w[i].ie_tipo_item_w,
				tb_itens_w[i].nr_tabela_w );
		else
			insert	into w_tiss_opm(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				nr_seq_apresentacao,
				ds_opm,
				cd_opm,
				qt_autorizada,
				qt_solicitada,
				ie_opcao_fabricante,
				cd_edicao)
			values (nextval('w_tiss_opm_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				'',
				'',
				'',
				'',
				'',
				'',
				'');
		end if;

		if (qt_proc_mat_guia_w = 9) then
			qt_proc_mat_guia_w := 0;
		end if;
		end;
	end loop;

	qt_itens_vazio_w 	:= 9 - qt_itens_guia_w;

	if (qt_itens_vazio_w 	= 9) then
		qt_linhas_add_w		:= 9 - qt_itens_vazio_w;
	else
		qt_linhas_add_w		:= qt_itens_vazio_w;
	end if;


	for i in 1.. qt_linhas_add_w loop
		begin
		insert	into w_tiss_opm(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nr_seq_guia,
			nr_seq_apresentacao,
			ds_opm,
			cd_opm,
			qt_autorizada,
			qt_solicitada,
			ie_opcao_fabricante,
			cd_edicao)
		values (nextval('w_tiss_opm_seq'),
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_guia_w,
			'',
			'',
			'',
			'',
			'',
			'',
			'');
		end;
	end loop;


end if;

<<final>>

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_gerar_w_guia_prorrog ( nr_sequencia_autor_p bigint, ds_dir_padrao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

