-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recep_gerar_atend_compl ( nm_usuario_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_atendimento_gerado_p INOUT bigint, ds_erro_p INOUT text) AS $body$
DECLARE

				 
nr_atendimento_w 	bigint;
nr_seq_atecaco_w	bigint;
nr_prescricao_w		bigint;
nr_seq_interno_w	bigint;
nr_seq_prescr_proc_w 	integer;
qt_gerou_atend_w	integer;
nr_seq_solic_compl_w	bigint;
				

BEGIN 
 
if (coalesce(nr_atendimento_p,0) > 0) and (coalesce(nr_prescricao_p,0) > 0) and (coalesce(nr_seq_prescr_p,0) > 0) then 
	 
	 
	select	nr_seq_atecaco 
	into STRICT	nr_seq_atecaco_w 
	from	prescr_medica 
	where 	nr_prescricao = nr_prescricao_p;
	 
	select	nr_sequencia 
	into STRICT	nr_seq_solic_compl_w 
	from	solicitacao_exame_compl 
	where	nr_atendimento = nr_atendimento_p 
	and	nr_prescricao = nr_prescricao_p 
	and	nr_seq_prescr = nr_seq_prescr_p;
 
	select	nextval('atendimento_paciente_seq') 
	into STRICT	nr_atendimento_w 
	;
		 
	insert into atendimento_paciente(nr_atendimento, 
					ie_permite_visita, 
					dt_entrada, 
					ie_tipo_atendimento, 
					cd_procedencia, 
					cd_medico_resp, 
					cd_pessoa_fisica, 
					cd_estabelecimento, 
					dt_atualizacao, 
					nm_usuario, 
					nm_usuario_atend) 
				SELECT nr_atendimento_w, 
					ie_permite_visita, 
					clock_timestamp(), 
					ie_tipo_atendimento, 
					cd_procedencia, 
					cd_medico_resp, 
					cd_pessoa_fisica, 
					cd_estabelecimento, 
					clock_timestamp(), 
					nm_usuario_p, 
					nm_usuario_p 
				from atendimento_paciente 
				where nr_atendimento = nr_atendimento_p;
					 
	select	nextval('atend_categoria_convenio_seq') 
	into STRICT	nr_seq_interno_w 
	;				
					 
	insert into atend_categoria_convenio(cd_convenio, 
						cd_categoria, 
						dt_inicio_vigencia, 
						nr_seq_interno, 
						nr_atendimento, 
						dt_atualizacao, 
						nm_usuario, 
						nr_doc_convenio, 
						cd_senha, 
						cd_plano_convenio) 
					SELECT cd_convenio, 
						cd_categoria, 
						clock_timestamp(), 
						nr_seq_interno_w, 
						nr_atendimento_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_doc_convenio, 
						cd_senha, 
						cd_plano_convenio 
					from	atend_categoria_convenio 
					where 	nr_seq_interno = nr_seq_atecaco_w;
					 
	select	nextval('prescr_medica_seq') 
	into STRICT	nr_prescricao_w 
	;
					 
	insert into prescr_medica(nr_prescricao, 
				cd_pessoa_fisica, 
				dt_prescricao, 
				nr_atendimento, 
				dt_atualizacao, 
				nm_usuario, 
				nr_doc_conv, 
				nr_seq_atecaco, 
				cd_medico, 
				cd_senha, 
				nr_horas_validade, 
				dt_entrega, 
				ie_origem_inf, 
				dt_primeiro_horario, 
				nm_usuario_original, 
				cd_estabelecimento, 
				cd_setor_atendimento) 
			SELECT	nr_prescricao_w, 
				cd_pessoa_fisica, 
				clock_timestamp(), 
				nr_atendimento_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_doc_conv, 
				nr_seq_interno_w, 
				cd_medico, 
				cd_senha, 
				nr_horas_validade, 
				clock_timestamp(), 
				ie_origem_inf, 
				dt_primeiro_horario, 
				nm_usuario_p, 
				cd_estabelecimento_p, 
				cd_setor_atendimento 
			from	prescr_medica 
			where	nr_prescricao = nr_prescricao_p;
		 
	select	coalesce(max(nr_sequencia), 0) + 1 
	into STRICT	nr_seq_prescr_proc_w 
	from	prescr_procedimento 
	where	nr_prescricao = nr_prescricao_w;	
		 
		 
	insert into prescr_procedimento(cd_procedimento, 
					qt_procedimento, 
					nr_prescricao, 
					nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					ie_origem_inf, 
					ie_origem_proced, 
					nr_seq_proc_interno, 
					nr_doc_convenio, 
					cd_senha, 
					nr_seq_solic_compl, 
					cd_equipamento, 
					cd_medico_exec, 
					cd_setor_atendimento, 
					ie_lado, 
					cd_motivo_baixa, 
					ie_suspenso)		 
				SELECT 	cd_procedimento, 
					qt_procedimento, 
					nr_prescricao_w, 
					nr_seq_prescr_proc_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					ie_origem_inf, 
					ie_origem_proced, 
					nr_seq_proc_interno, 
					nr_doc_convenio, 
					cd_senha, 
					nr_seq_solic_compl_w, 
					cd_equipamento, 
					cd_medico_exec, 
					cd_setor_atendimento, 
					ie_lado, 
					0, 
					'N' 
				from	prescr_procedimento 
				where	nr_prescricao = nr_prescricao_p	 
				and	nr_sequencia = nr_seq_prescr_p;
 
	select	count(*) 
	into STRICT	qt_gerou_atend_w 
	from	atendimento_paciente a, 
		atend_categoria_convenio b, 
		prescr_medica c 
	where  a.nr_atendimento = nr_atendimento_w	 
	and	a.nr_atendimento = b.nr_atendimento 
	and	a.nr_atendimento = c.nr_atendimento;
	 
	if (qt_gerou_atend_w > 0) then 
	 
		nr_atendimento_gerado_p := nr_atendimento_w;
		 
		update	solicitacao_exame_compl 
		set	cd_status = 30, 
			nm_usuario = nm_usuario_p, 
			dt_atualizacao = clock_timestamp(), 
			dt_recepcionado = clock_timestamp() 
		where	nr_sequencia = nr_seq_solic_compl_w;
		 
		if (nr_prescricao_w > 0) then 
 
			ds_erro_p := liberar_prescricao(nr_prescricao_w, nr_atendimento_w, ie_tipo_pessoa_p, cd_perfil_p, nm_usuario_p, 'N', ds_erro_p);
	 
		end if;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recep_gerar_atend_compl ( nm_usuario_p text, nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, nr_atendimento_gerado_p INOUT bigint, ds_erro_p INOUT text) FROM PUBLIC;

