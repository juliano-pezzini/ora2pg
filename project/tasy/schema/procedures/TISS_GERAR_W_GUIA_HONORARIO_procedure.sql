-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_honorario (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nr_seq_med_fatur_p bigint, nr_cirurgia_p bigint, ds_dir_padrao_p text, nm_usuario_p text, ie_consiste_liberacao_p text default 'N', ie_observacao_p text default 'P') AS $body$
DECLARE


dt_emissao_guia_w		timestamp;
cd_ans_w			varchar(100);
nr_atendimento_w		bigint;
nr_interno_conta_w		bigint;
nr_seq_procedimento_w		bigint;
cd_autorizacao_w		varchar(100);
cd_autor_w			varchar(100);
cd_procedimento_w		varchar(60);
qt_proc_guia_w			bigint;
cd_senha_w			varchar(100);
cd_medico_executor_w		varchar(10);
dt_inicio_vigencia_w		timestamp;
dt_final_vigencia_w		timestamp;
nr_seq_guia_w			bigint;
cd_categoria_conv_w		varchar(20);
nr_cpf_w			varchar(15);
nm_medico_executor_w		varchar(255);
sg_conselho_w			varchar(15);
nr_crm_w			varchar(20);
uf_crm_w			valor_dominio.vl_dominio%type;
cd_cbo_saude_w			varchar(20);
ie_tipo_atendimento_w		varchar(20);
ie_tipo_saida_w			varchar(20);
cd_edicao_amb_w			varchar(20);
qt_procedimento_w		double precision;
vl_reducao_acrescimo_w		double precision;
vl_procedimento_w		double precision;
nr_seq_conta_guia_w		bigint;
dt_entrada_w			timestamp;
dt_alta_w			timestamp;
ie_via_acesso_w			varchar(20);
vl_unitario_w			double precision;
ds_procedimento_w		varchar(255);
dt_procedimento_w		timestamp;
vl_total_w			double precision := 0;
cont_w				integer  := 0;
cd_estabelecimento_w		bigint := 0;
ds_razao_social_w		varchar(255);
cd_cnes_w			varchar(20);
cd_cgc_w			varchar(20);
qt_solicitada_w			double precision;
qt_autorizada_w			double precision;
dt_autorizacao_w		timestamp;
cd_doenca_cid_w			varchar(20);
ds_observacao_w			varchar(4000);
ds_arquivo_logo_w		varchar(140);
ds_funcao_medico_w		varchar(25);
cd_especialidade_w		integer;
cd_cgc_honorario_w		varchar(200);
CD_EDICAO_RELAT_W		varchar(200);
cd_medico_exec_proc_w		varchar(200);
cd_cgc_estab_w			varchar(200);
cd_convenio_w			integer;
cd_interno_w			varchar(15);
cd_medico_convenio_w		varchar(20);
nr_seq_med_fatur_w		bigint;
nr_seq_apresentacao_w		bigint;
nr_seq_apresent_w		bigint;
ie_tecnica_utilizada_w		varchar(2);
dt_inicio_proced_w		timestamp;
dt_fim_proced_w			timestamp;
nm_contratado_w			varchar(255);
cd_autorizacao_princ_w		varchar(255);
cd_tipo_acomodacao_w		varchar(40);
ie_agrupar_proc_w		varchar(40);
cd_prestador_convenio_w		varchar(255) := '';
cd_cnpj_exec_w			varchar(20);
ie_desc_proc_interno_w		varchar(255);
ds_observacao_regra_w		varchar(4000);
nr_seq_regra_cobranca_w		bigint;
ie_clinica_w			bigint;
ds_arquivo_logo_comp_w		varchar(255);
cd_proc_tuss_w			varchar(255);
ie_proc_tuss_w			varchar(255);
ie_gerar_tiss_w			varchar(10);
nr_seq_classif_atend_w		bigint;
ie_regra_exec_honor_w		varchar(10);
cd_cgc_regra_honor_w		varchar(255);
ie_exec_regra_honor_w		varchar(10);
cd_medico_exec_honor_w		varchar(20);
cd_medico_atend_w		varchar(20);
cd_cgc_prest_regra_prest_w	varchar(255);
cd_prestador_regra_w		varchar(255);
ds_prestador_regra_w		varchar(255);
cd_medico_exec_regra_prest_w	varchar(255);
cd_cgc_solic_regra_prest_w	varchar(255);
nr_seq_regra_w			bigint;
ie_solicitante_w		varchar(255);
ie_medico_exec_w		varchar(255);
cd_prestador_solic_w		varchar(255);
ds_prestador_solic_w		varchar(255);
cd_cgc_contratado_w		varchar(255);
ds_contratado_w			varchar(255);
cd_cns_exec_w			varchar(255);
cd_interno_contratado_w		varchar(255);
cd_setor_entrada_w		bigint;
cd_setor_execucao_w		bigint;
vl_total_procedimento_w		double precision;
cd_medico_referido_w		varchar(10);
cd_interno_honor_regra_w	varchar(255);
nm_exec_honor_regra_w		varchar(255);
ds_versao_w			varchar(20);
ie_desc_laudo_fatur_med_w	varchar(10);
nr_seq_proc_interno_w		bigint;
nr_seq_guia_proc_w		bigint;
nr_seq_apres_partic_w		bigint;
nr_seq_apres_proc_anterior_w	bigint;
nr_cpf_partic_w			varchar(15);	
ds_funcao_medico_partic_w	varchar(25);
nm_pessoa_fisica_partic_w	varchar(255);
sg_conselho_partic_w		varchar(15);
nr_crm_partic_w			varchar(20);
uf_crm_partic_w			valor_dominio.vl_dominio%type;
cd_medico_convenio_partic_w	varchar(50);
nr_cpf_relat_partic_w		varchar(15);
cd_cbo_saude_partic_w		varchar(20);
ie_honor_partic_w		varchar(1);
nr_seq_tiss_conta_proc_w	bigint;	
dt_mesano_referencia_w		timestamp;
nr_seq_guia_proc_ant_w		bigint;
nr_seq_partic_w			bigint;
nr_seq_regra_exec_honor_w	bigint;
cd_proced_conversao_w		varchar(20);
ie_origem_proced_w			bigint;
cd_plano_convenio_w			varchar(10);
ie_sexo_w					varchar(1);
cd_grupo_proc_conversao_w	varchar(10);
nr_seq_conversao_w			bigint;
ds_posicao_w		integer;
ds_dir_padrao_w		varchar(255);
ie_funcao_medico_w	funcao_medico.cd_funcao%type;
im_logo_convenio_w	tiss_logo_convenio.im_logo_convenio%type;	

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.dt_entrada,
	b.dt_alta,
	b.nr_atendimento,	
	a.nr_interno_conta,
	a.dt_emissao_guia
from	tiss_conta_guia a,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_interno_conta	= nr_interno_conta_p
and	a.ie_tiss_tipo_guia	= '6'

union

SELECT	a.nr_sequencia,
	b.dt_entrada,
	b.dt_alta,
	b.nr_atendimento,
	a.nr_interno_conta,
	a.dt_emissao_guia
from	tiss_conta_guia a,
	TISS_PROTOCOLO_GUIA c,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	c.nr_sequencia		= a.nr_seq_prot_guia
and	c.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.ie_tiss_tipo_guia	= '6';

c02 CURSOR FOR
SELECT	a.cd_procedimento,
	a.cd_edicao_amb,
	sum(qt_procedimento),
	sum(vl_reducao_acrescimo),
	sum((tiss_obter_regra_campo(6, 'VL_PROCEDIMENTO', cd_convenio_w, a.vl_procedimento, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null,a.cd_setor_execucao))::numeric ),
	a.ie_via_acesso,
	(tiss_obter_regra_campo(6, 'VL_UNITARIO', cd_convenio_w, a.vl_unitario, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null,a.cd_setor_execucao))::numeric ,
	a.ds_procedimento,
	a.dt_procedimento,
	a.cd_cgc_prestador,
	a.cd_medico_executor,
	a.ie_funcao_medico,
	a.nr_seq_proc,
	a.dt_inicio_cir,
	a.dt_fim_cir,
	a.ie_tecnica_utilizada,
	CASE WHEN obter_se_projeto_versao(0,13,ds_versao_w,0)='S' THEN CASE WHEN ie_honor_partic_w='S' THEN a.nr_sequencia  ELSE null END   ELSE null END  nr_seq_procedimento_w,
	a.cd_setor_execucao
from	tiss_conta_proc a
where	nr_seq_guia		= nr_seq_conta_guia_w
group by a.cd_procedimento,
	a.cd_edicao_amb,
	a.ie_via_acesso,
	(tiss_obter_regra_campo(6, 'VL_UNITARIO', cd_convenio_w, a.vl_unitario, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null, a.cd_setor_execucao))::numeric ,
	a.ds_procedimento,
	a.dt_procedimento,
	a.cd_cgc_prestador,
	a.cd_medico_executor,
	a.ie_funcao_medico,
	a.nr_seq_proc,
	a.dt_inicio_cir,
	a.dt_fim_cir,
	a.ie_tecnica_utilizada,
	CASE WHEN obter_se_projeto_versao(0,13,ds_versao_w,0)='S' THEN CASE WHEN ie_honor_partic_w='S' THEN a.nr_sequencia  ELSE null END   ELSE null END ,
	a.cd_setor_execucao
order by a.dt_procedimento,
	a.dt_inicio_cir;

c03 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_atendimento,
	a.nr_doc_convenio,
	a.cd_medico,
	tiss_obter_grau_partic(a.ie_funcao_medico),
	e.ie_tipo_atendimento,
	a.cd_cnpj_exec,
	a.nr_Seq_regra_cobranca,
	e.cd_medico_resp,
	a.ie_funcao_medico
from	pep_med_fatur a,
	atendimento_paciente e
where	e.nr_atendimento	= a.nr_atendimento
and	a.nr_sequencia		= nr_seq_med_fatur_p
and   ((coalesce(ie_consiste_liberacao_p,'N') = 'N') or ((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and (coalesce(a.dt_inativacao::text, '') = '')));

c04 CURSOR FOR
SELECT	Obter_codigo_Tuss(coalesce(nr_seq_proc_interno,0)),
	a.cd_procedimento,
	coalesce(CASE WHEN 	ie_desc_proc_interno_w='P' THEN  obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced) WHEN 	ie_desc_proc_interno_w='N' THEN  obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced) WHEN 	ie_desc_proc_interno_w='S' THEN  coalesce(obter_desc_proc_interno(a.nr_seq_proc_interno), obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced))	 END , obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced)) ds_procedimento,
	a.qt_fatur,
	a.qt_fatur,
	e.dt_entrada,
	e.dt_alta,
	tiss_obter_tabela(null, e.cd_estabelecimento, x.cd_convenio, x.cd_categoria,
			  b.dt_faturamento, 'R', y.ie_classificacao, a.cd_procedimento, a.ie_origem_proced, null, null, e.nr_atendimento,a.nr_seq_proc_interno),
	a.dt_procedimento,
	substr(tiss_obter_tipo_acomod(x.cd_tipo_acomodacao),1,40),
	a.dt_inicio_procedimento,
	a.dt_fim_procedimento,
	TISS_ELIMINAR_CARACTERE(b.ds_observacao),
	a.ie_tecnica_utilizada,
	a.ie_via_acesso,
	a.tx_reducao_acres,
	a.nr_seq_proc_interno,
	a.ie_origem_proced,
	x.cd_plano_convenio
from	pep_med_fatur_proc a,
	pep_med_fatur b,
	procedimento y,
	atend_categoria_convenio x,
	atendimento_paciente e
where	a.nr_seq_fatur		= b.nr_sequencia
and	e.nr_atendimento	= b.nr_atendimento
and	x.nr_atendimento	= e.nr_atendimento
and	a.cd_procedimento	= y.cd_procedimento
and	a.ie_origem_proced	= y.ie_origem_proced
and	obter_atecaco_atendimento(e.nr_atendimento) 	= x.nr_seq_interno
and	nr_seq_fatur		= nr_seq_med_fatur_p
and   ((coalesce(ie_consiste_liberacao_p,'N') = 'N') or ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and (coalesce(b.dt_inativacao::text, '') = '')))
order by a.dt_procedimento;

c05 CURSOR FOR
SELECT	a.nr_cirurgia,
	a.nr_atendimento,
	b.nr_doc_convenio,
	a.cd_medico_cirurgiao,
	'00',
	e.ie_tipo_atendimento,
	obter_cgc_estabelecimento(e.cd_estabelecimento) cd_cnpj_exec,	
	e.cd_medico_resp
from	cirurgia a,
	atend_categoria_convenio b,
	atendimento_paciente e
where	e.nr_atendimento	= a.nr_atendimento
and	e.nr_atendimento	= b.nr_atendimento
and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento)
and	a.nr_cirurgia		= nr_cirurgia_p;

c06 CURSOR FOR
SELECT	Obter_codigo_Tuss(coalesce(a.nr_seq_proc_interno,0)),
	a.cd_procedimento_princ,
	coalesce(CASE WHEN 	ie_desc_proc_interno_w='P' THEN  obter_descricao_procedimento(a.cd_procedimento_princ, a.ie_origem_proced) WHEN 	ie_desc_proc_interno_w='N' THEN  obter_descricao_procedimento(a.cd_procedimento_princ, a.ie_origem_proced) WHEN 	ie_desc_proc_interno_w='S' THEN  coalesce(obter_desc_proc_interno(a.nr_seq_proc_interno), obter_descricao_procedimento(a.cd_procedimento_princ, a.ie_origem_proced))	 END , obter_descricao_procedimento(a.cd_procedimento_princ, a.ie_origem_proced)) ds_procedimento,
	1,
	1,
	e.dt_entrada,
	e.dt_alta,
	tiss_obter_tabela(null, e.cd_estabelecimento, x.cd_convenio, x.cd_categoria,
			  a.dt_inicio_real, 'R', y.ie_classificacao, a.cd_procedimento_princ, a.ie_origem_proced, null, null, e.ie_tipo_atendimento,a.nr_seq_proc_interno, null, a.cd_procedimento_tuss),
	a.dt_inicio_real dt_proc,
	substr(tiss_obter_tipo_acomod(x.cd_tipo_acomodacao),1,40),
	a.dt_inicio_real,
	a.dt_termino,
	TISS_ELIMINAR_CARACTERE(a.ds_observacao),
	null ie_tecnica_utilizada,
	null ie_via_acesso,
	null tx_reducao_acres,
	0,
	a.ie_origem_proced,
	x.cd_plano_convenio
from	cirurgia a,			
	procedimento y,
	atend_categoria_convenio x,
	atendimento_paciente e
where	a.cd_procedimento_princ	= y.cd_procedimento
and	a.ie_origem_proced	= y.ie_origem_proced
and	e.nr_atendimento	= a.nr_atendimento
and	e.nr_atendimento	= x.nr_atendimento
and	x.nr_seq_interno	= obter_atecaco_atendimento(e.nr_atendimento)
and	a.nr_cirurgia		= nr_cirurgia_p

union all

SELECT	Obter_codigo_Tuss(coalesce(b.nr_seq_proc_interno,0)),
	b.cd_procedimento,
	coalesce(CASE WHEN 	ie_desc_proc_interno_w='P' THEN  obter_descricao_procedimento(b.cd_procedimento, b.ie_origem_proced) WHEN 	ie_desc_proc_interno_w='N' THEN  obter_descricao_procedimento(b.cd_procedimento, b.ie_origem_proced) WHEN 	ie_desc_proc_interno_w='S' THEN  coalesce(obter_desc_proc_interno(b.nr_seq_proc_interno), obter_descricao_procedimento(b.cd_procedimento, b.ie_origem_proced))	 END , obter_descricao_procedimento(b.cd_procedimento, b.ie_origem_proced)) ds_procedimento,
	1,
	1,
	e.dt_entrada,
	e.dt_alta,
	tiss_obter_tabela(null, e.cd_estabelecimento, x.cd_convenio, x.cd_categoria, 
			  a.dt_inicio_real, 'R', y.ie_classificacao, b.cd_procedimento, b.ie_origem_proced, null, null, e.ie_tipo_atendimento,b.nr_seq_proc_interno, b.nr_seq_exame, b.cd_proced_tuss),
	a.dt_inicio_real dt_proc,
	substr(tiss_obter_tipo_acomod(x.cd_tipo_acomodacao),1,40),
	a.dt_inicio_real,
	a.dt_termino,
	TISS_ELIMINAR_CARACTERE(b.ds_observacao),
	null ie_tecnica_utilizada,
	null ie_via_acesso,
	null tx_reducao_acres,
	0,
	a.ie_origem_proced,
	x.cd_plano_convenio

from	prescr_procedimento b,
	cirurgia a,			
	procedimento y,
	atend_categoria_convenio x,
	atendimento_paciente e
where	b.nr_prescricao		= a.nr_prescricao
and	a.cd_procedimento_princ	= y.cd_procedimento
and	a.ie_origem_proced	= y.ie_origem_proced
and	e.nr_atendimento	= a.nr_atendimento
and	e.nr_atendimento	= x.nr_atendimento
and	x.nr_seq_interno	= obter_atecaco_atendimento(e.nr_atendimento)
and	a.nr_cirurgia		= nr_cirurgia_p
and	(b.cd_medico_exec IS NOT NULL AND b.cd_medico_exec::text <> '');

c07 CURSOR FOR
SELECT	nr_cpf,
	ie_funcao_medico,
	nm_medico_executor,
	sg_conselho,
	nr_crm,
	uf_crm,
	cd_medico_convenio,
	nr_cpf_relat,
	cd_cbos
from	tiss_conta_partic
where	nr_seq_proc	= nr_seq_tiss_conta_proc_w
order by ie_funcao_medico;


BEGIN
delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_paciente
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_solicitacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado
where	nm_usuario		= nm_usuario_p;

commit;

CALL tiss_convenio_pck.set_dt_referencia_tiss(null);

if	((coalesce(nr_seq_protocolo_p,0) > 0) or (coalesce(nr_interno_conta_p,0) > 0)) and (coalesce(ie_gerar_tiss_w,'S') = 'S') then

	if (coalesce(nr_seq_protocolo_p,0) > 0) then

		select	max(c.cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(a.cd_estabelecimento),
			max(b.cd_convenio),
			max(a.cd_prestador_convenio),
			max(coalesce(a.dt_referencia_tiss,a.dt_mesano_referencia))
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_estabelecimento_w,
			cd_convenio_w,
			cd_prestador_convenio_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			protocolo_convenio a
		where	a.cd_convenio		= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_seq_protocolo	= nr_seq_protocolo_p;
		
		CALL tiss_convenio_pck.set_dt_referencia_tiss(dt_mesano_referencia_w);

	elsif (coalesce(nr_interno_conta_p,0) > 0) then

		select	max(cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(a.cd_estabelecimento),
			max(b.cd_convenio),
			max(a.dt_mesano_referencia)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_estabelecimento_w,
			cd_convenio_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			conta_paciente a
		where	a.cd_convenio_parametro	= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_interno_conta	= nr_interno_conta_p;

	end if;

	select	coalesce(max(ie_agrupar_proc), 'S'),
		max(ds_arquivo_logo_comp),
		coalesce(max(ie_gerar_tiss), 'S'),
		coalesce(max(ie_honor_partic), 'S')
	into STRICT	ie_agrupar_proc_w,
		ds_arquivo_logo_comp_w,
		ie_gerar_tiss_w,
		ie_honor_partic_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
	select	tiss_obter_versao(cd_convenio_w,cd_estabelecimento_w,dt_mesano_referencia_w)
	into STRICT	ds_versao_w
	;	

	select	max(cd_cgc)
	into STRICT	cd_cgc_estab_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	
	
	begin
		select	im_logo_convenio
		into STRICT	im_logo_convenio_w
		from	tiss_logo_convenio
		where	cd_convenio	   = cd_convenio_w
		and 	coalesce(ie_situacao,'N') = 'A';
	exception
	when others then
		im_logo_convenio_w := null;
	end;
			
	if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
		ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
	end if;
	

	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then
	
		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_logo_w,
				null);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				im_logo_convenio_w);
		end if;

		open c01;
		loop
		fetch c01 into
			nr_seq_conta_guia_w,
			dt_entrada_w,
			dt_alta_w,
			nr_atendimento_w,
			nr_interno_conta_w,
			dt_emissao_guia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			select	max((obter_clinica_atend(nr_atendimento_w, 'C'))::numeric )
			into STRICT	ie_clinica_w
			;

			nr_seq_apresentacao_w	:= 0;
			qt_proc_guia_w 		:= 0;
			nr_seq_apres_partic_w	:= 0;

			select	max(ie_tipo_atendimento)
			into STRICT	ie_tipo_atendimento_w
			from	atendimento_paciente
			where	nr_atendimento		= nr_atendimento_w;

			select	max(cd_categoria_parametro)
			into STRICT	cd_categoria_conv_w
			from	conta_paciente
			where	nr_interno_conta	= nr_interno_conta_w;

			open c02;
			loop
			fetch c02 into
				cd_procedimento_w,
				cd_edicao_amb_w,
				qt_procedimento_w,
				vl_reducao_acrescimo_w,
				vl_procedimento_w,
				ie_via_acesso_w,
				vl_unitario_w,
				ds_procedimento_w,
				dt_procedimento_w,
				cd_cgc_honorario_w,
				cd_medico_exec_proc_w,
				ds_funcao_medico_w,
				nr_seq_procedimento_w,
				dt_inicio_proced_w,
				dt_fim_proced_w,
				ie_tecnica_utilizada_w,
				nr_seq_tiss_conta_proc_w,
				cd_setor_execucao_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				qt_proc_guia_w		:= qt_proc_guia_w + 1;				

				if (qt_proc_guia_w = 1) then
					nr_seq_apresentacao_w	:= 0;
					nr_seq_apres_partic_w	:= 0;
					nr_seq_guia_w := TISS_GERAR_CABECALHO_HONOR(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
				end if;
				
				/*select	max(nr_seq_guia)
				into	nr_seq_guia_proc_w
				from	w_tiss_proc_paciente;

				if	(nr_seq_guia_proc_w <> nr_seq_guia_w) then					
					nr_seq_apresentacao_w	:= 0;
					nr_seq_apres_partic_w	:= 0;
				end if;*/
				
				nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

				/* OS93314 - 15/05/2008 - Nao grava o nr_seq_procedimento_w para alguns procedimentos na TISS_CONTA_PROC.
							  Coloquei no cursor c02.
				select	max(ie_tecnica_utilizada)
				into	ie_tecnica_utilizada_w
				from	procedimento_paciente
				where	nr_sequencia	= nr_seq_procedimento_w;
				*/
		
				insert	into w_tiss_proc_paciente(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_procedimento,
					cd_edicao_amb,
					qt_procedimento,
					vl_reducao_acrescimo,
					vl_procedimento,
					dt_entrada,
					dt_alta,
					ie_via_acesso,
					vl_unitario,
					ds_procedimento,
					dt_procedimento,
					nr_seq_apresentacao,
					ie_tecnica_utilizada,
					dt_inicio_cirurgia,
					dt_fim_cirurgia,
					ie_funcao_medico)
				values (nextval('w_tiss_proc_paciente_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_procedimento_w,
					cd_edicao_amb_w,
					qt_procedimento_w,
					vl_reducao_acrescimo_w,
					vl_procedimento_w,
					dt_entrada_w,
					dt_alta_w,
					ie_via_acesso_w,
					vl_unitario_w,
					ds_procedimento_w,			
					dt_procedimento_w,
					nr_seq_apresentacao_w,
					ie_tecnica_utilizada_w,
					dt_inicio_proced_w,
					dt_fim_proced_w,
					ds_funcao_medico_w);			
				
				if (obter_se_projeto_versao(0,4,ds_versao_w,0) = 'S') then

					nr_seq_apres_proc_anterior_w := null;

					open C07;
					loop
					fetch C07 into
						nr_cpf_partic_w,
						ds_funcao_medico_partic_w,
						nm_pessoa_fisica_partic_w,
						sg_conselho_partic_w,
						nr_crm_partic_w,
						uf_crm_partic_w,
						cd_medico_convenio_partic_w,
						nr_cpf_relat_partic_w,
						cd_cbo_saude_partic_w;
					EXIT WHEN NOT FOUND; /* apply on C07 */
						begin
						
						if	nr_seq_apres_partic_w = 5 then
						
							nr_seq_guia_proc_ant_w	:= nr_seq_guia_w; --Guardo a guia anterior
							
							nr_seq_guia_w := TISS_GERAR_CABECALHO_HONOR(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
							
							--Atualizo o ultimo procedimento da guia anterior para a nova guia
							update	w_tiss_proc_paciente
							set	nr_seq_guia		= nr_seq_guia_w,
								nr_seq_apresentacao	= 1
							where	nr_sequencia		=
										(SELECT	max(x.nr_sequencia)
										from	w_tiss_proc_paciente x
										where	x.nr_seq_guia		= nr_seq_guia_proc_ant_w
										and	(x.cd_procedimento IS NOT NULL AND x.cd_procedimento::text <> ''));
							--Completo a guia anterior
							CALL TISS_COMPLETAR_GUIA(nr_seq_guia_proc_ant_w, nm_usuario_p);
							
							qt_proc_guia_w			:= 1;
							nr_seq_apres_partic_w		:= 0;
							nr_seq_apres_proc_anterior_w	:= nr_seq_apresentacao_w;
							nr_seq_apresentacao_w		:= 1;
						end if;

						nr_seq_apres_partic_w	:= nr_seq_apres_partic_w + 1;

						insert	into w_tiss_proc_partic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							nr_seq_procedimento,
							nr_seq_apresentacao,
							ie_funcao_medico,
							nr_cpf,
							nm_pessoa_fisica,
							sg_conselho,
							nr_crm,
							uf_crm,
							cd_interno,
							nr_cpf_relat,
							cd_cbos)
						values (nextval('w_tiss_proc_partic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							CASE WHEN  nr_seq_apresentacao_w =0 THEN  nr_seq_apres_proc_anterior_w  ELSE nr_seq_apresentacao_w END ,
							nr_seq_apres_partic_w,
							ds_funcao_medico_partic_w,
							nr_cpf_partic_w,
							nm_pessoa_fisica_partic_w,
							sg_conselho_partic_w,
							nr_crm_partic_w,
							uf_crm_partic_w,
							cd_medico_convenio_partic_w,
							nr_cpf_relat_partic_w,
							cd_cbo_saude_partic_w);					

						end;
					end loop;
					close C07;
				end if;

				if (qt_proc_guia_w	= 10) then
					qt_proc_guia_w		:= 0;					
					CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
				end if;

			end loop;
			close c02;

			CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

			commit;

		end loop;
		close c01;
	end if;

elsif (coalesce(nr_seq_med_fatur_p,0) > 0) then

	select	max(cd_convenio),
		max(b.cd_estabelecimento)
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w
	from	atend_categoria_convenio a,
		pep_med_fatur b
	where	a.nr_atendimento				= b.nr_atendimento
	and	obter_atecaco_atendimento(a.nr_atendimento) 	= a.nr_seq_interno
	and	b.nr_sequencia					= nr_seq_med_fatur_p
   and   ((coalesce(ie_consiste_liberacao_p,'N') = 'N') or ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and (coalesce(b.dt_inativacao::text, '') = '')));

	select	coalesce(max(ie_desc_proc_interno), 'N'),
		max(ds_arquivo_logo_comp),
		coalesce(max(ie_proc_tuss), 'N'),
		coalesce(max(ie_gerar_tiss), 'S'),
		coalesce(max(ie_desc_laudo_fatur_med), 'N')
	into STRICT	ie_desc_proc_interno_w,
		ds_arquivo_logo_comp_w,
		ie_proc_tuss_w,
		ie_gerar_tiss_w,
		ie_desc_laudo_fatur_med_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
	select	tiss_obter_versao(cd_convenio_w,cd_estabelecimento_w)
	into STRICT	ds_versao_w
	;

	select	max(cd_ans),
		max(b.ds_arquivo_logo_tiss)
	into STRICT	cd_ans_w,
		ds_arquivo_logo_w
	from	pessoa_juridica c,
		convenio b
	where	b.cd_cgc		= c.cd_cgc
	and	b.cd_convenio		= cd_convenio_w;
	
	
	begin
		select	im_logo_convenio
		into STRICT	im_logo_convenio_w
		from	tiss_logo_convenio
		where	cd_convenio	   = cd_convenio_w
		and 	coalesce(ie_situacao,'N') = 'A';
	exception
	when others then
		im_logo_convenio_w := null;
	end;
			
	if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
		ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
	end if;
	
	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then
	
		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then

			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_logo_w,
				null);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				im_logo_convenio_w);
		end if;

		select	cd_cgc
		into STRICT	cd_cgc_estab_w
		from	estabelecimento
		where	cd_estabelecimento	= cd_estabelecimento_w;

		open c03;
		loop
		fetch c03 into
			nr_seq_med_fatur_w,
			nr_atendimento_w,
			cd_autorizacao_w,
			cd_medico_convenio_w,
			ds_funcao_medico_w,
			ie_tipo_atendimento_w,
			cd_cnpj_exec_w,
			nr_Seq_regra_cobranca_w,
			cd_medico_atend_w,
			ie_funcao_medico_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */

			select	max((obter_clinica_atend(nr_atendimento_w, 'C'))::numeric ),
				max(obter_setor_atendimento(nr_atendimento_w))
			into STRICT	ie_clinica_w,
				cd_setor_entrada_w
			;

			select 	max(' - Regra cobranca: ' || a.ds_regra)
			into STRICT	ds_observacao_regra_w
			from	pep_regra_cobranca a
			where	a.nr_sequencia	= nr_seq_regra_cobranca_w;

			select	max(nr_doc_convenio),
				max(cd_categoria)
			into STRICT	cd_autor_w,
				cd_categoria_conv_w
			from	atend_categoria_convenio
			where	nr_atendimento				  = nr_atendimento_w
			and	obter_atecaco_atendimento(nr_atendimento) = nr_seq_interno;

			nr_seq_apresentacao_w	:= 1;
			qt_proc_guia_w 		:= 0;
			nr_seq_partic_w		:= 1;

			open c04;
			loop
			fetch c04 into
				cd_proc_tuss_w,
				cd_procedimento_w,
				ds_procedimento_w,
				qt_solicitada_w,
				qt_autorizada_w,
				dt_entrada_w,
				dt_alta_w,
				cd_edicao_amb_w,
				dt_procedimento_w,
				cd_tipo_acomodacao_w,
				dt_inicio_proced_w,
				dt_fim_proced_w,
				ds_observacao_w,
				ie_tecnica_utilizada_w,
				ie_via_acesso_w,
				vl_reducao_acrescimo_w,
				nr_seq_proc_interno_w,
				ie_origem_proced_w,
				cd_plano_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				
				if (coalesce(ie_proc_tuss_w,'N')	= 'F') then
					cd_procedimento_w	:= coalesce(cd_proc_tuss_w, cd_procedimento_w);
				elsif (ie_proc_tuss_w = 'C') then
				
					nr_seq_conversao_w	:= null;
					cd_proced_conversao_w	:= null;

					select	max(b.ie_sexo)
					into STRICT	ie_sexo_w
					from	atendimento_paciente a,
							pessoa_fisica b
					where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
					and	a.nr_atendimento = nr_atendimento_w;
					
					SELECT * FROM converte_proc_convenio(	cd_estabelecimento_w, cd_convenio_w, null, cd_procedimento_w, ie_origem_proced_w, null, null, ie_tipo_atendimento_w, clock_timestamp(), cd_proced_conversao_w, cd_grupo_proc_conversao_w, nr_seq_conversao_w, cd_setor_entrada_w, null, nr_seq_proc_interno_w, 'A', cd_plano_convenio_w, ie_clinica_w, 0, null, null, null, ie_sexo_w, null, null, 0, null, null, null) INTO STRICT cd_proced_conversao_w, cd_grupo_proc_conversao_w, nr_seq_conversao_w;
				
					if (coalesce(cd_proced_conversao_w,0) > 0) then
						cd_procedimento_w := cd_proced_conversao_w;
					elsif (coalesce(cd_proc_tuss_w,0) > 0) then
						cd_procedimento_w := cd_proc_tuss_w;
					end if;
					
				end if;
				
				

				qt_proc_guia_w		:= qt_proc_guia_w + 1;

				if (qt_proc_guia_w = 1) then

					/*ds_observacao_w	:= OBTER_SELECT_CONCATENADO_BV('select	ds_observacao
											from	pep_med_fatur_proc
											where	nr_seq_fatur = :nr_seq', 'nr_seq='||nr_seq_med_fatur_p, chr(10));
					lhalves OS201452 15/03/2010 - gerar a observacao sem a quebra de linha */
				
											
					if (ie_observacao_p = 'F') then
						select	max(replace(replace(ds_observacao,chr(13),' '),chr(10),' '))
						into STRICT 	ds_observacao_w
						from	pep_med_fatur
						where	nr_sequencia = nr_seq_med_fatur_p;
					else
						select	max(replace(replace(ds_observacao,chr(13),' '),chr(10),' '))
						into STRICT 	ds_observacao_w
						from	pep_med_fatur_proc
						where	nr_seq_fatur = nr_seq_med_fatur_p;
					end if;
					
					ds_observacao_w := ds_observacao_w || ds_observacao_regra_w;

					select	cd_senha,
						dt_final_vigencia
					into STRICT	cd_senha_w,
						dt_final_vigencia_w
					from	atend_categoria_convenio
					where	nr_atendimento					= nr_atendimento_w
					and	obter_atecaco_atendimento(nr_atendimento) 		= nr_seq_interno;
					
					select	max(cd_medico_referido)
					into STRICT	cd_medico_referido_w
					from	atendimento_paciente
					where	nr_atendimento		= nr_atendimento_w;
						
					select	nextval('w_tiss_guia_seq')
					into STRICT	nr_seq_guia_w
					;
					
					insert	into w_tiss_guia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_ans,
						cd_autorizacao,
						dt_autorizacao,
						cd_senha,
						dt_validade_senha,
						dt_emissao_guia,
						nr_interno_conta,
						nr_seq_protocolo,
						nr_sequencia_autor,
						nr_atendimento,
						cd_autorizacao_princ,
						ie_tiss_tipo_guia,
						ds_observacao,
						ds_versao)
					values (nr_seq_guia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_ans_w,
						cd_autorizacao_w,
						dt_inicio_vigencia_w,
						cd_senha_w,
						dt_final_vigencia_w,
						dt_emissao_guia_w,
						null,
						null,
						null,
						nr_atendimento_w,
						coalesce(cd_autor_w, cd_autorizacao_w),
						'6',
						tiss_obter_regra_campo(6, 'DS_OBSERVACAO', cd_convenio_w, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null,cd_setor_execucao_w),
						ds_versao_w);

					insert	into w_tiss_beneficiario(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio)
					SELECT	nextval('w_tiss_beneficiario_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						to_char(nr_cartao_nac_sus),
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio
					from	tiss_dados_paciente_v
					where	ds_versao		= '2.01.01'
					and	nr_atendimento		= nr_atendimento_w
					and	ie_origem		= 'AP';

					/*lhalves OS250276 em 20/09/2010 - Aplicar regra prestador para guia emitida pelo PEP - Faturamento Medico*/

					SELECT * FROM TISS_OBTER_REGRA_PRESTADOR(	cd_convenio_w, cd_estabelecimento_w, ie_tipo_atendimento_w, null, ie_clinica_w, cd_cnpj_exec_w, null, cd_medico_convenio_w, cd_medico_atend_w, cd_categoria_conv_w, null, null, '6',  --honorario
									'S',  --honorario
									cd_cgc_prest_regra_prest_w, cd_prestador_regra_w, ds_prestador_regra_w, cd_medico_exec_regra_prest_w, cd_cgc_solic_regra_prest_w, nr_seq_regra_w, 'P',  --procedimento
									ie_solicitante_w, null, ie_medico_exec_w, cd_prestador_solic_w, ds_prestador_solic_w, clock_timestamp(), 'S', cd_medico_referido_w, null, null, null, null, 'N', 'N', null, null) INTO STRICT 
									cd_cgc_prest_regra_prest_w, cd_prestador_regra_w, ds_prestador_regra_w, cd_medico_exec_regra_prest_w, cd_cgc_solic_regra_prest_w, nr_seq_regra_w, 
									ie_solicitante_w, ie_medico_exec_w, cd_prestador_solic_w, ds_prestador_solic_w;

					if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then						
						if (coalesce(cd_cgc_prest_regra_prest_w,'X') <> 'X') then
							cd_cgc_contratado_w	:= cd_cgc_prest_regra_prest_w;
							nm_contratado_w		:= obter_nome_pf_pj(null, cd_cgc_prest_regra_prest_w);

						elsif (coalesce(cd_medico_exec_regra_prest_w,'X') <> 'X') then
							cd_interno_contratado_w	:= obter_dados_pf(cd_medico_exec_regra_prest_w, 'CPF');
							nm_contratado_w		:= obter_nome_medico(cd_medico_exec_regra_prest_w, 'N');
						end if;
						
						if (ie_medico_exec_w = 'S') then
							cd_interno_contratado_w	:= obter_dados_pf(cd_medico_convenio_w, 'CPF');
							nm_contratado_w		:= obter_nome_medico(cd_medico_convenio_w, 'N');
						end if;

						if (coalesce(cd_prestador_regra_w,'X') <> 'X') then
							cd_interno_contratado_w	:= cd_prestador_regra_w;						
						end if;

						if (coalesce(ds_prestador_regra_w, 'X') <> 'X') then
							nm_contratado_w	:= ds_prestador_regra_w;						
						end if;	
					else
						cd_cgc_contratado_w	:= cd_cnpj_exec_w;
						nm_contratado_w		:= obter_nome_pf_pj(null, cd_cnpj_exec_w);
					end if;	

					select	max(cd_cnes)
					into STRICT	cd_cns_exec_w
					from	pessoa_juridica
					where	cd_cgc		= cd_cgc_contratado_w;

					insert	into w_tiss_contratado(nr_sequencia,
						 dt_atualizacao,
						 nm_usuario,
						 nr_seq_guia,
						 cd_cgc,
						 cd_interno,
						 nm_contratado,
						 cd_cnes)
					SELECT	 nextval('w_tiss_contratado_seq'),
						 clock_timestamp(),
						 nm_usuario_p,
						 nr_seq_guia_w,
						 coalesce(cd_interno_contratado_w,cd_cgc_contratado_w),
						 tiss_obter_regra_campo(6, 'CD_INTERNO_EXEC', cd_convenio_w,TISS_OBTER_CODIGO_PRESTADOR(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_contratado_w, (null)::numeric , 'CI', null,ie_tipo_atendimento_w,cd_categoria_conv_w) , ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null, cd_setor_execucao_w),						 						
						 tiss_obter_regra_campo(6, 'NM_CONTRATADO', cd_convenio_w, nm_contratado_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null, cd_setor_execucao_w),
						 cd_cns_exec_w
					from	 tiss_dados_executante_v
					where	 ie_origem		= 'PJ'
					and	 ds_versao		= '2.01.01'
					and 	 cd_cgc			= cd_cgc_estab_w;

					select	max(cd_cnes)
					into STRICT	cd_cnes_w
					from	pessoa_juridica
					where	cd_cgc		= cd_cnpj_exec_w;												

					/*lhalves OS250276 em 20/09/2010 - Aplicar regra contratado exec honor para guia emitida pelo PEP - Faturamento Medico*/

					SELECT * FROM TISS_OBTER_REGRA_EXEC_HONOR(	cd_estabelecimento_w, cd_convenio_w, null, cd_setor_entrada_w, cd_medico_convenio_w, ie_regra_exec_honor_w, cd_cgc_regra_honor_w, ie_exec_regra_honor_w, 'S', ds_funcao_medico_w, cd_interno_honor_regra_w, nm_exec_honor_regra_w, nr_seq_regra_exec_honor_w) INTO STRICT ie_regra_exec_honor_w, cd_cgc_regra_honor_w, ie_exec_regra_honor_w, cd_interno_honor_regra_w, nm_exec_honor_regra_w, nr_seq_regra_exec_honor_w;

					cd_medico_exec_honor_w		:= cd_medico_convenio_w;

					if (ie_regra_exec_honor_w = 'M') then
						cd_cnpj_exec_w	:= null;
						cd_cnes_w	:= null;
																	
					elsif (ie_regra_exec_honor_w = 'R') and (coalesce(cd_cgc_regra_honor_w,'X') <> 'X') then

						cd_medico_exec_honor_w	:= null;
						cd_cnpj_exec_w		:= cd_cgc_regra_honor_w;
						
						select	max(cd_cnes)
						into STRICT	cd_cnes_w
						from	pessoa_juridica
						where	cd_cgc		= cd_cgc_regra_honor_w;
					end if;

					insert	into w_tiss_contratado_exec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						ds_tipo_logradouro,
						ds_logradouro,
						nm_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes,
						nm_medico_executor,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						ds_funcao_medico)
					SELECT	nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						coalesce(cd_cnpj_exec_w, obter_dados_pf(cd_medico_exec_honor_w, 'CPF')),
						coalesce(cd_interno_honor_regra_w,
							coalesce(TISS_OBTER_CODIGO_PRESTADOR(cd_convenio_w, cd_estabelecimento_w, null, cd_cnpj_exec_w, (null)::numeric , 'CI', null,ie_tipo_atendimento_w,cd_categoria_conv_w),
							TISS_OBTER_CODIGO_PRESTADOR(cd_convenio_w, cd_estabelecimento_w, cd_medico_exec_honor_w, null, (null)::numeric , 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w,ie_funcao_medico_w))),
						obter_dados_pf(cd_medico_exec_honor_w, 'CPF'),
						coalesce(nm_exec_honor_regra_w,coalesce(obter_nome_pf_pj(null, cd_cnpj_exec_w), 
									obter_nome_medico(cd_medico_exec_honor_w, 'N'))),
						cd_tipo_acomodacao_w,
						ds_endereco,
						ds_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes_w,
						obter_nome_medico(cd_medico_convenio_w, 'N'),
						obter_dados_medico(cd_medico_convenio_w, 'SGCRM'),
						obter_dados_medico(cd_medico_convenio_w, 'CRM'),
						obter_dados_medico(cd_medico_convenio_w, 'UFCRM'),
						cd_cbo_saude,
						ds_funcao_medico_w
					from	tiss_dados_executante_v a
					where	nr_atendimento		= nr_atendimento_w
					and	ie_honorario		= 'N'
					and	ds_versao		= '2.01.01';

				end if;
				
				if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') and (coalesce(ie_desc_laudo_fatur_med_w,'N') = 'S') then
					
					select	substr(ds_laudo,1,255)
					into STRICT	ds_procedimento_w
					from	proc_interno
					where	nr_sequencia	= nr_seq_proc_interno_w;
					
				end if;

				insert	into w_tiss_proc_paciente(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_procedimento,
					cd_edicao_amb,
					qt_procedimento,
					vl_reducao_acrescimo,
					vl_procedimento,
					dt_entrada,
					dt_alta,
					ie_via_acesso,
					vl_unitario,
					ds_procedimento,
					dt_procedimento,
					nr_seq_apresentacao,
					dt_inicio_cirurgia,
					dt_fim_cirurgia,
					ie_tecnica_utilizada)
				values (nextval('w_tiss_proc_paciente_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_procedimento_w,
					cd_edicao_amb_w,
					qt_autorizada_w,
					vl_reducao_acrescimo_w,
					null,
					dt_entrada_w,
					dt_alta_w,
					ie_via_acesso_w,
					null,
					ds_procedimento_w,			
					dt_procedimento_w,
					nr_seq_apresentacao_w,
					dt_inicio_proced_w,
					dt_fim_proced_w,
					ie_tecnica_utilizada_w);				
				
				if (obter_se_projeto_versao(0,4,ds_versao_w,0) = 'S') then					

					insert	into w_tiss_proc_partic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						nr_seq_procedimento,
						nr_seq_apresentacao,
						ie_funcao_medico,
						nr_cpf,
						nm_pessoa_fisica,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_interno,
						nr_cpf_relat,
						cd_cbos)
					SELECT	nextval('w_tiss_proc_partic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						nr_seq_apresentacao_w,
						nr_seq_partic_w,
						tiss_obter_grau_partic(a.ie_funcao_medico),
						substr(OBTER_CPF_PESSOA_FISICA(a.cd_medico),1,11),
						substr(obter_nome_pf_pj(a.cd_medico,null),1,255),
						substr(c.ie_conselho_prof_tiss,1,10),
						substr(d.ds_codigo_prof,1,20),
						substr(b.UF_CRM,1,20),
						null,
						substr(OBTER_CPF_PESSOA_FISICA(a.cd_medico),1,11),
						null
					FROM medico b, pep_med_fatur a, pessoa_fisica d
LEFT OUTER JOIN conselho_profissional c ON (d.nr_seq_conselho = c.nr_sequencia)
WHERE d.cd_pessoa_fisica	= b.cd_pessoa_fisica  and a.cd_medico		= b.cd_pessoa_fisica and a.nr_sequencia		= nr_seq_med_fatur_p and ((coalesce(ie_consiste_liberacao_p,'N') = 'N') or ((a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and (coalesce(a.dt_inativacao::text, '') = '')));
					
					nr_seq_partic_w	:= nr_seq_partic_w + 1;
					
					if (nr_seq_partic_w  = 6) then
						nr_seq_partic_w		:= 1;
						nr_seq_apresentacao_w	:= 0;
						qt_proc_guia_w		:= 0;
						
						CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
						insert	into w_tiss_totais(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia)
						values (nextval('w_tiss_totais_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w);
					end if;
					
				end if;
								
				nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;
				
				if	((qt_proc_guia_w = 11) and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'N')) or
					((qt_proc_guia_w = 13) and (obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S')) then

					insert into w_tiss_contratado_exec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					insert	into w_tiss_totais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_totais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					qt_proc_guia_w	:= 0;
					nr_seq_partic_w	:= 1;
				end if;

			end loop;
			close c04;

			if (qt_proc_guia_w > 0) and
				((qt_proc_guia_w < 10) or
				 ((obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S') and qt_proc_guia_w < 12)) then

				insert	into w_tiss_totais(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia)
				values (nextval('w_tiss_totais_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

			end if;

			CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

		end loop;
		close c03;
	
	end if;

elsif (coalesce(nr_cirurgia_p,0) > 0) then

	select	a.cd_convenio,
		b.cd_estabelecimento
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w
	from	atend_categoria_convenio a,
		cirurgia b
	where	a.nr_atendimento				= b.nr_atendimento
	and	obter_atecaco_atendimento(a.nr_atendimento) 	= a.nr_seq_interno
	and	b.nr_cirurgia					= nr_cirurgia_p;

	select	coalesce(max(ie_desc_proc_interno), 'N'),
		max(ds_arquivo_logo_comp),
		coalesce(max(ie_proc_tuss), 'N'),
		coalesce(max(ie_gerar_tiss), 'S')
	into STRICT	ie_desc_proc_interno_w,
		ds_arquivo_logo_comp_w,
		ie_proc_tuss_w,
		ie_gerar_tiss_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
	select	tiss_obter_versao(cd_convenio_w,cd_estabelecimento_w)
	into STRICT	ds_versao_w
	;	

	select	max(cd_ans),
		max(b.ds_arquivo_logo_tiss)
	into STRICT	cd_ans_w,
		ds_arquivo_logo_w
	from	pessoa_juridica c,
		convenio b
	where	b.cd_cgc		= c.cd_cgc
	and	b.cd_convenio		= cd_convenio_w;
	
	begin
		select	im_logo_convenio
		into STRICT	im_logo_convenio_w
		from	tiss_logo_convenio
		where	cd_convenio	   = cd_convenio_w
		and 	coalesce(ie_situacao,'N') = 'A';
	exception
	when others then
		im_logo_convenio_w := null;
	end;
			
	if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
		ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
	end if;
	
	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then
	
		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then

			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_logo_w,
				null);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				im_logo_convenio_w);
		end if;

		select	cd_cgc
		into STRICT	cd_cgc_estab_w
		from	estabelecimento
		where	cd_estabelecimento	= cd_estabelecimento_w;

		open c05;
		loop
		fetch c05 into
			nr_seq_med_fatur_w,
			nr_atendimento_w,
			cd_autorizacao_w,
			cd_medico_convenio_w,
			ds_funcao_medico_w,
			ie_tipo_atendimento_w,
			cd_cnpj_exec_w,
			cd_medico_atend_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */

			select	max((obter_clinica_atend(nr_atendimento_w, 'C'))::numeric ),
				max(obter_setor_atendimento(nr_atendimento_w))
			into STRICT	ie_clinica_w,
				cd_setor_entrada_w
			;

			select	max(nr_doc_convenio),
				max(cd_categoria)
			into STRICT	cd_autor_w,
				cd_categoria_conv_w
			from	atend_categoria_convenio
			where	nr_atendimento				  = nr_atendimento_w
			and	obter_atecaco_atendimento(nr_atendimento) = nr_seq_interno;

			nr_seq_apresentacao_w	:= 1;
			qt_proc_guia_w 	:= 0;

			open c06;
			loop
			fetch c06 into
				cd_proc_tuss_w,
				cd_procedimento_w,
				ds_procedimento_w,
				qt_solicitada_w,
				qt_autorizada_w,
				dt_entrada_w,
				dt_alta_w,
				cd_edicao_amb_w,
				dt_procedimento_w,
				cd_tipo_acomodacao_w,
				dt_inicio_proced_w,
				dt_fim_proced_w,
				ds_observacao_w,
				ie_tecnica_utilizada_w,
				ie_via_acesso_w,
				vl_reducao_acrescimo_w,
				vl_procedimento_w,
				ie_origem_proced_w,
				cd_plano_convenio_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */

				if (coalesce(ie_proc_tuss_w,'N')	= 'F') then
					cd_procedimento_w	:= coalesce(cd_proc_tuss_w, cd_procedimento_w);
				elsif (ie_proc_tuss_w = 'C') then

					nr_seq_conversao_w	:= null;
					cd_proced_conversao_w := null;
					
					select	max(b.ie_sexo)
					into STRICT	ie_sexo_w
					from	atendimento_paciente a,
							pessoa_fisica b
					where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
					and	a.nr_atendimento = nr_atendimento_w;
						
					SELECT * FROM converte_proc_convenio(	cd_estabelecimento_w, cd_convenio_w, null, cd_procedimento_w, ie_origem_proced_w, null, null, ie_tipo_atendimento_w, clock_timestamp(), cd_proced_conversao_w, cd_grupo_proc_conversao_w, nr_seq_conversao_w, cd_setor_entrada_w, null, nr_seq_proc_interno_w, 'A', cd_plano_convenio_w, ie_clinica_w, 0, null, null, null, ie_sexo_w, null, null, 0, null, null, null) INTO STRICT cd_proced_conversao_w, cd_grupo_proc_conversao_w, nr_seq_conversao_w;					
						
					if (coalesce(cd_proced_conversao_w,0) > 0) then
						cd_procedimento_w := cd_proced_conversao_w;
					elsif (coalesce(cd_proc_tuss_w,0) > 0) then
						cd_procedimento_w := cd_proc_tuss_w;
					end if;
					
				end if;

				qt_proc_guia_w		:= qt_proc_guia_w + 1;

				if (qt_proc_guia_w = 1) then
					
					select	cd_senha,
						dt_final_vigencia
					into STRICT	cd_senha_w,
						dt_final_vigencia_w
					from	atend_categoria_convenio
					where	nr_atendimento					= nr_atendimento_w
					and	obter_atecaco_atendimento(nr_atendimento) 		= nr_seq_interno;
					
					select	max(cd_medico_referido)
					into STRICT	cd_medico_referido_w
					from	atendimento_paciente
					where	nr_atendimento		= nr_atendimento_w;
						
					select	nextval('w_tiss_guia_seq')
					into STRICT	nr_seq_guia_w
					;
					
					insert	into w_tiss_guia(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_ans,
						cd_autorizacao,
						dt_autorizacao,
						cd_senha,
						dt_validade_senha,
						dt_emissao_guia,
						nr_interno_conta,
						nr_seq_protocolo,
						nr_sequencia_autor,
						nr_atendimento,
						cd_autorizacao_princ,
						ie_tiss_tipo_guia,
						ds_observacao,
						ds_versao)
					values (nr_seq_guia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_ans_w,
						cd_autorizacao_w,
						clock_timestamp(),
						cd_senha_w,
						dt_final_vigencia_w,
						dt_emissao_guia_w,
						null,
						null,
						null,
						nr_atendimento_w,
						coalesce(cd_autor_w, cd_autorizacao_w),
						'6',
						tiss_obter_regra_campo(6, 'DS_OBSERVACAO', cd_convenio_w, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null, cd_setor_execucao_w),
						ds_versao_w);

					insert	into w_tiss_beneficiario(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio)
					SELECT	nextval('w_tiss_beneficiario_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						to_char(nr_cartao_nac_sus),
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio
					from	tiss_dados_paciente_v
					where	ds_versao		= '2.01.01'
					and	nr_atendimento		= nr_atendimento_w
					and	ie_origem		= 'AP';

					/*lhalves OS250276 em 20/09/2010 - Aplicar regra prestador para guia emitida pelo PEP - Faturamento Medico*/

					SELECT * FROM TISS_OBTER_REGRA_PRESTADOR(	cd_convenio_w, cd_estabelecimento_w, ie_tipo_atendimento_w, null, ie_clinica_w, cd_cnpj_exec_w, null, cd_medico_convenio_w, cd_medico_atend_w, cd_categoria_conv_w, null, null, '6',  --honorario
									'S',  --honorario
									cd_cgc_prest_regra_prest_w, cd_prestador_regra_w, ds_prestador_regra_w, cd_medico_exec_regra_prest_w, cd_cgc_solic_regra_prest_w, nr_seq_regra_w, 'P',  --procedimento
									ie_solicitante_w, null, ie_medico_exec_w, cd_prestador_solic_w, ds_prestador_solic_w, clock_timestamp(), 'S', cd_medico_referido_w, null, null, null, null, 'N', 'N', null, null) INTO STRICT 
									cd_cgc_prest_regra_prest_w, cd_prestador_regra_w, ds_prestador_regra_w, cd_medico_exec_regra_prest_w, cd_cgc_solic_regra_prest_w, nr_seq_regra_w, 
									ie_solicitante_w, ie_medico_exec_w, cd_prestador_solic_w, ds_prestador_solic_w;

					if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then						
						if (coalesce(cd_cgc_prest_regra_prest_w,'X') <> 'X') then
							cd_cgc_contratado_w	:= cd_cgc_prest_regra_prest_w;
							nm_contratado_w		:= obter_nome_pf_pj(null, cd_cgc_prest_regra_prest_w);

						elsif (coalesce(cd_medico_exec_regra_prest_w,'X') <> 'X') then
							cd_interno_contratado_w	:= obter_dados_pf(cd_medico_exec_regra_prest_w, 'CPF');
							nm_contratado_w		:= obter_nome_medico(cd_medico_exec_regra_prest_w, 'N');
						end if;
						
						if (ie_medico_exec_w = 'S') then
							cd_interno_contratado_w	:= obter_dados_pf(cd_medico_convenio_w, 'CPF');
							nm_contratado_w		:= obter_nome_medico(cd_medico_convenio_w, 'N');
						end if;

						if (coalesce(cd_prestador_regra_w,'X') <> 'X') then
							cd_interno_contratado_w	:= cd_prestador_regra_w;						
						end if;

						if (coalesce(ds_prestador_regra_w, 'X') <> 'X') then
							nm_contratado_w	:= ds_prestador_regra_w;						
						end if;	
					else
						cd_cgc_contratado_w	:= cd_cnpj_exec_w;
						nm_contratado_w		:= obter_nome_pf_pj(null, cd_cnpj_exec_w);
					end if;	

					select	max(cd_cnes)
					into STRICT	cd_cns_exec_w
					from	pessoa_juridica
					where	cd_cgc		= cd_cgc_contratado_w;

					insert	into w_tiss_contratado(nr_sequencia,
						 dt_atualizacao,
						 nm_usuario,
						 nr_seq_guia,
						 cd_cgc,
						 cd_interno,
						 nm_contratado,
						 cd_cnes)
					SELECT	 nextval('w_tiss_contratado_seq'),
						 clock_timestamp(),
						 nm_usuario_p,
						 nr_seq_guia_w,
						 coalesce(cd_interno_contratado_w,cd_cgc_contratado_w),
						 TISS_OBTER_CODIGO_PRESTADOR(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_contratado_w, (null)::numeric , 'CI', null,ie_tipo_atendimento_w,cd_categoria_conv_w),
						 nm_contratado_w,
						 cd_cns_exec_w
					from	 tiss_dados_executante_v
					where	 ie_origem		= 'PJ'
					and	 ds_versao		= '2.01.01'
					and 	 cd_cgc			= cd_cgc_estab_w;

					select	max(cd_cnes)
					into STRICT	cd_cnes_w
					from	pessoa_juridica
					where	cd_cgc		= cd_cnpj_exec_w;																	

					insert	into w_tiss_contratado_exec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						ds_tipo_logradouro,
						ds_logradouro,
						nm_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes,
						nm_medico_executor,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						ds_funcao_medico)
					SELECT	nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						obter_dados_pf(cd_medico_convenio_w, 'CPF'),
						TISS_OBTER_CODIGO_PRESTADOR(cd_convenio_w, cd_estabelecimento_w, cd_medico_convenio_w, null, (null)::numeric , 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w),
						obter_dados_pf(cd_medico_convenio_w, 'CPF'),
						obter_nome_medico(cd_medico_convenio_w, 'N'),
						cd_tipo_acomodacao_w,
						ds_endereco,
						ds_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes_w,
						obter_nome_medico(cd_medico_convenio_w, 'N'),
						obter_dados_medico(cd_medico_convenio_w, 'SGCRM'),
						obter_dados_medico(cd_medico_convenio_w, 'CRM'),
						obter_dados_medico(cd_medico_convenio_w, 'UFCRM'),
						cd_cbo_saude,
						ds_funcao_medico_w
					from	tiss_dados_executante_v a
					where	nr_atendimento		= nr_atendimento_w
					and	ie_honorario		= 'N'
					and	ds_versao		= '2.01.01';

				end if;

				insert	into w_tiss_proc_paciente(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_procedimento,
					cd_edicao_amb,
					qt_procedimento,
					vl_reducao_acrescimo,
					vl_procedimento,
					dt_entrada,
					dt_alta,
					ie_via_acesso,
					vl_unitario,
					ds_procedimento,
					dt_procedimento,
					nr_seq_apresentacao,
					dt_inicio_cirurgia,
					dt_fim_cirurgia,
					ie_tecnica_utilizada)
				values (nextval('w_tiss_proc_paciente_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_procedimento_w,
					cd_edicao_amb_w,
					qt_autorizada_w,
					vl_reducao_acrescimo_w,
					vl_procedimento_w,
					dt_entrada_w,
					dt_alta_w,
					ie_via_acesso_w,
					dividir_sem_round(vl_procedimento_w,qt_autorizada_w),
					ds_procedimento_w,			
					dt_procedimento_w,
					nr_seq_apresentacao_w,
					dt_inicio_proced_w,
					dt_fim_proced_w,
					ie_tecnica_utilizada_w);

				nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;
				
				if (qt_proc_guia_w = 11) or
					((obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S') and qt_proc_guia_w = 13) then

					insert into w_tiss_contratado_exec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					insert	into w_tiss_totais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_totais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					qt_proc_guia_w	:= 0;
				end if;

			end loop;
			close c06;

			if (qt_proc_guia_w > 0) and
				((qt_proc_guia_w < 10) or
				 ((obter_se_projeto_versao(0,12,ds_versao_w,0) = 'S') and qt_proc_guia_w < 12)) then
				
				select	sum(vl_procedimento)
				into STRICT	vl_total_procedimento_w
				from	w_tiss_proc_paciente
				where	nr_seq_guia	= nr_seq_guia_w;

				insert	into w_tiss_totais(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					vl_total_geral)
				values (nextval('w_tiss_totais_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					vl_total_procedimento_w);

			end if;

			CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

		end loop;
		close c05;
	
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_honorario (nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nr_seq_med_fatur_p bigint, nr_cirurgia_p bigint, ds_dir_padrao_p text, nm_usuario_p text, ie_consiste_liberacao_p text default 'N', ie_observacao_p text default 'P') FROM PUBLIC;

