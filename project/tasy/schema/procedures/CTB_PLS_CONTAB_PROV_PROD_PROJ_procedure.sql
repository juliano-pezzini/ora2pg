-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_pls_conta_proc AS (	nr_id	t_rowid);
CREATE TYPE t_pls_conta_mat AS (	nr_id	t_rowid);
CREATE TYPE t_pls_conta_res AS (	nr_id	t_rowid);


CREATE OR REPLACE PROCEDURE ctb_pls_contab_prov_prod_proj ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
cd_conta_debito_w		w_movimento_contabil.cd_conta_contabil%type;
cd_conta_credito_w		w_movimento_contabil.cd_conta_contabil%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_cgc_prestador_w		pessoa_juridica.cd_cgc%type;
cd_cpf_prestador_w		pessoa_fisica.nr_cpf%type;
ie_tipo_item_w			w_pls_movimento_sem_conta.ie_tipo_item%type;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
ie_centro_custo_deb_w		conta_contabil.ie_centro_custo%type;
ie_centro_custo_cred_w		conta_contabil.ie_centro_custo%type;
nr_nota_fiscal_w		nota_fiscal.nr_nota_fiscal%type;
vl_contabil_w			w_movimento_contabil.vl_movimento%type;
nr_seq_w_movto_cont_w		w_movimento_contabil.nr_sequencia%type;
cd_historico_w			w_movimento_contabil.cd_historico%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_lote_contabil_w		w_movimento_contabil.nr_lote_contabil%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
nr_seq_regra_cc_w		pls_regra_centro_custo.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
nr_seq_prot_conta_w		pls_conta.nr_seq_prot_conta%type;
cd_centro_custo_deb_w		w_movimento_contabil.cd_centro_custo%type;
cd_centro_custo_cred_w		w_movimento_contabil.cd_centro_custo%type;
cd_estabelecimento_w		w_movimento_contabil.cd_estabelecimento%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
nr_seq_material_w		pls_conta_mat.nr_seq_material%type;
nr_seq_mvto_sem_conta_w		w_pls_movimento_sem_conta.nr_sequencia%type;
cd_centro_custo_deb_fixo_w	conta_contabil.cd_centro_custo%type;
cd_centro_custo_cred_fixo_w	conta_contabil.cd_centro_custo%type;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_tabela_ww			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
nm_atributo_ww			w_movimento_contabil.nm_atributo%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
nm_agrupador_w			agrupador_contabil.nm_atributo%type;
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
ie_status_prov_pagto_w		pls_parametro_contabil.ie_status_prov_pagto%type;
ie_lote_ajuste_prod_w 		pls_parametro_contabil.ie_lote_ajuste_prod%type;
ie_esquema_contabil_w		pls_parametro_contabil.ie_esquema_contabil%type;
ie_consiste_recalculo_w		pls_parametro_contabil.ie_consiste_recalculo%type;
nr_seq_conta_aberta_w		pls_conta.nr_sequencia%type;
nr_seq_conta_resumo_w		pls_conta_medica_resumo.nr_sequencia%type;
cd_conta_glosa_deb_w		pls_conta_medica_resumo.cd_conta_glosa_deb%type;
cd_conta_glosa_cred_w		pls_conta_medica_resumo.cd_conta_glosa_cred%type;
vl_glosa_w			pls_conta_medica_resumo.vl_glosa%type;
cd_historico_glosa_w		pls_conta_medica_resumo.cd_historico_glosa%type;
vl_ajuste_w			w_movimento_contabil.vl_movimento%type;
cd_historico_vl_ajuste_w	pls_conta_medica_resumo.cd_historico_vl_ajuste%type;
cd_conta_deb_w			w_movimento_contabil.cd_conta_contabil%type;
cd_conta_cred_w			w_movimento_contabil.cd_conta_contabil%type;
cd_historico_contab_w		w_movimento_contabil.cd_historico%type;
vl_contab_w			w_movimento_contabil.vl_movimento%type;
nr_seq_tab_orig_w		w_movimento_contabil.nr_seq_tab_orig%type;
vl_taxa_adm_w          pls_conta_medica_resumo.vl_taxa_adm%type;
cd_classif_prov_deb_w		conta_contabil.cd_classificacao_atual%type;
cd_classif_prov_cred_w		conta_contabil.cd_classificacao_atual%type;
cd_empresa_w			empresa.cd_empresa%type;
ie_forma_contab_taxa_pgto_w	pls_parametro_contabil.ie_forma_contab_taxa_pgto%type;
ie_tipo_relacao_w		pls_prestador.ie_tipo_relacao%type;
vl_liberado_ant_w		pls_conta_medica_resumo.vl_liberado_ant%type;
ds_conteudo_w			varchar(4000);
vl_retorno_w			varchar(2000);
ds_contas_w			varchar(2000);
ds_item_w			varchar(255);
nm_prestador_w			varchar(255);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
ie_proc_mat_w			varchar(2);
ie_compl_hist_w			varchar(2);
ie_movimento_w			varchar(2);
ie_gerar_recalculo_w		varchar(1);
nr_seq_item_w			bigint;
qt_compl_hist_w			bigint;
dt_referencia_w			timestamp;
dt_ref_last_day_w		timestamp;
dt_referencia_trunc_w		timestamp;
dt_referencia_mens_w		timestamp;
dt_referencia_month_w		timestamp;
nr_id_res_w			oid;
nr_id_proc_w			oid;
nr_id_mat_w			oid;

ie_nao_aplica_recalc_w		varchar(1);
nr_seq_item_recalculo_w		bigint;

type t_rowid is table of varchar(18) index by integer;
pls_conta_proc_w	t_pls_conta_proc;
pls_conta_mat_w		t_pls_conta_mat;
pls_conta_res_w		t_pls_conta_res;

type t_movimento_contabil is table 
	of w_movimento_contabil%rowtype index by integer;
movimento_contabil_w	t_movimento_contabil;
item_mov_contabil_w	w_movimento_contabil%rowtype;

c_itens CURSOR FOR 
	SELECT	'P', /*Procedimento*/
 
		c.nr_sequencia, 
		CASE WHEN coalesce(d.nr_seq_esquema_prov,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_debito, 
		CASE WHEN coalesce(d.nr_seq_esquema_prov,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_credito, 
		pls_obter_valor_prov_resumo(d.nr_seq_conta, d.nr_sequencia,d.vl_apresentado,d.vl_calculado, d.vl_liberado,d.vl_taxa_adm,d.vl_taxa_adm_co,d.vl_taxa_adm_mat,ie_forma_contab_taxa_pgto_w,'P') vl_provisao, 
		a.dt_mes_competencia, 
		CASE WHEN coalesce(d.nr_seq_esquema_prov,0)=0 THEN  c.cd_historico_prov  ELSE d.cd_historico_prov END  cd_historico, 
		b.nr_sequencia, 
		b.nr_seq_segurado, 
		b.nr_seq_protocolo, 
		d.nr_seq_prestador_pgto, 
		b.nr_seq_prot_conta, 
		c.cd_procedimento, 
		c.ie_origem_proced, 
		null nr_seq_material, 
		'PLS_CONTA_MEDICA_RESUMO' nm_tabela, 
		'VL_PROVISAO' nm_atributo, 
		42 nr_seq_info_ctb, 
		coalesce(b.nr_seq_plano, (	SELECT	x.nr_sequencia 
					from	pls_segurado	s, 
						pls_plano	x 
					where	x.nr_sequencia	= s.nr_seq_plano 
					and	s.nr_sequencia	= b.nr_seq_segurado)) nr_seq_plano, 
		d.nr_sequencia, 
		CASE WHEN coalesce(d.nr_seq_esquema_glosa,0)=0 THEN  			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa_deb, /* Se não for esquema contábil, tem que inverter débito e crédito */
 
		CASE WHEN coalesce(d.nr_seq_esquema_glosa,0)=0 THEN  			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se não for esquema contábil, tem que inverter débito e crédito */
 
		coalesce(d.vl_glosa,0) vl_glosa, 
		CASE WHEN coalesce(d.nr_seq_esquema_glosa,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa, 
		pls_obter_valor_prov_resumo(d.nr_seq_conta, d.nr_sequencia,d.vl_apresentado,d.vl_calculado,d.vl_liberado,d.vl_taxa_adm,d.vl_taxa_adm_co,d.vl_taxa_adm_mat,ie_forma_contab_taxa_pgto_w,'A') vl_ajuste, 
		coalesce(d.cd_historico_vl_ajuste, c.cd_historico_ajuste), 
		coalesce(e.ie_regulamentacao, (	select	x.ie_regulamentacao 
						from	pls_segurado	s, 
							pls_plano	x 
						where	x.nr_sequencia	= s.nr_seq_plano 
						and	s.nr_sequencia	= b.nr_seq_segurado)) ie_regulamentacao, 
		f.nr_nota_fiscal, 
		d.vl_liberado_ant, 
		coalesce(d.vl_taxa_adm,0) + coalesce(d.vl_taxa_adm_co,0) + coalesce(d.vl_taxa_adm_mat,0) vl_taxa_adm, 
		d.oid nr_id_res, 
		c.oid nr_id_proc, 
		null nr_id_mat 
	FROM pls_conta_medica_resumo d, pls_conta_proc c, pls_protocolo_conta a, pls_conta b
LEFT OUTER JOIN pls_plano e ON (b.nr_seq_plano = e.nr_sequencia)
LEFT OUTER JOIN pls_prot_conta_titulo f ON (b.nr_seq_prot_conta = f.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_proc and b.nr_sequencia		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= b.nr_seq_protocolo   and a.dt_mes_competencia 	between dt_referencia_month_w and dt_referencia_w and a.cd_estabelecimento	= cd_estabelecimento_w and a.ie_tipo_protocolo	= 'C' and ie_status_prov_pagto_w	= 'F' and b.ie_status 		= 'F' and a.ie_situacao not in ('RE','I') and c.ie_status not in ('D','M') and d.ie_situacao		= 'A' and d.ie_tipo_item		<> 'I' and coalesce(d.nr_lote_contabil_prov,0) = 0 and ((ie_consiste_recalculo_w <> 'S') 
	or ('P' not in (select coalesce(max(x.ie_tipo_relacao),'X') 
				from	pls_prestador		x 
				where	x.nr_sequencia	= b.nr_seq_prestador_exec)) 
	or (dt_referencia_trunc_w	= dt_ref_last_day_w)) 
	 
union all
 
	select	'M', /*Material*/
 
		c.nr_sequencia, 
		CASE WHEN coalesce(d.nr_seq_esquema_prov,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_debito, 
		CASE WHEN coalesce(d.nr_seq_esquema_prov,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_credito, 
		pls_obter_valor_prov_resumo(d.nr_seq_conta, d.nr_sequencia,d.vl_apresentado,d.vl_calculado, d.vl_liberado,d.vl_taxa_adm,d.vl_taxa_adm_co,d.vl_taxa_adm_mat,ie_forma_contab_taxa_pgto_w,'P') vl_provisao, 
		a.dt_mes_competencia, 
		CASE WHEN coalesce(d.nr_seq_esquema_prov,0)=0 THEN  c.cd_historico_prov  ELSE d.cd_historico_prov END  cd_historico, 
		b.nr_sequencia, 
		b.nr_seq_segurado, 
		b.nr_seq_protocolo, 
		d.nr_seq_prestador_pgto, 
		b.nr_seq_prot_conta, 
		null cd_procedimento, 
		null ie_origem_proced, 
		c.nr_seq_material, 
		'PLS_CONTA_MEDICA_RESUMO' nm_tabela, 
		'VL_PROVISAO' nm_atributo, 
		42 nr_seq_info_ctb, 
		coalesce(b.nr_seq_plano, (	select	x.nr_sequencia 
					from	pls_segurado	s, 
						pls_plano	x 
					where	x.nr_sequencia	= s.nr_seq_plano 
					and	s.nr_sequencia	= b.nr_seq_segurado)) nr_seq_plano, 
		d.nr_sequencia, 
		CASE WHEN coalesce(d.nr_seq_esquema_glosa,0)=0 THEN  			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa_deb, /* Se não for esquema contábil, tem que inverter débito e crédito */
 
		CASE WHEN coalesce(d.nr_seq_esquema_glosa,0)=0 THEN  			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se não for esquema contábil, tem que inverter débito e crédito */
 
		coalesce(d.vl_glosa,0) vl_glosa, 
		CASE WHEN coalesce(d.nr_seq_esquema_glosa,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa, 
		pls_obter_valor_prov_resumo(d.nr_seq_conta, d.nr_sequencia,d.vl_apresentado,d.vl_calculado, d.vl_liberado,d.vl_taxa_adm,d.vl_taxa_adm_co,d.vl_taxa_adm_mat,ie_forma_contab_taxa_pgto_w,'A') vl_ajuste, 
		coalesce(d.cd_historico_vl_ajuste, c.cd_historico_ajuste), 
		coalesce(e.ie_regulamentacao, (	select	x.ie_regulamentacao 
						from	pls_segurado	s, 
							pls_plano	x 
						where	x.nr_sequencia	= s.nr_seq_plano 
						and	s.nr_sequencia	= b.nr_seq_segurado)) ie_regulamentacao, 
		f.nr_nota_fiscal, 
		d.vl_liberado_ant, 
		coalesce(d.vl_taxa_adm,0) + coalesce(d.vl_taxa_adm_co,0) + coalesce(d.vl_taxa_adm_mat,0) vl_taxa_adm, 
		d.oid nr_id_res, 
		null nr_id_proc, 
		c.oid nr_id_mat 
	FROM pls_conta_medica_resumo d, pls_conta_mat c, pls_protocolo_conta a, pls_conta b
LEFT OUTER JOIN pls_plano e ON (b.nr_seq_plano = e.nr_sequencia)
LEFT OUTER JOIN pls_prot_conta_titulo f ON (b.nr_seq_prot_conta = f.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_mat and b.nr_sequencia		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= b.nr_seq_protocolo   and a.dt_mes_competencia 	between dt_referencia_month_w and dt_referencia_w and a.cd_estabelecimento	= cd_estabelecimento_w and a.ie_tipo_protocolo	= 'C' and ie_status_prov_pagto_w	= 'F' and b.ie_status 		= 'F' and a.ie_situacao not in ('RE','I') and c.ie_status not in ('D','M') and d.ie_situacao		= 'A' and d.ie_tipo_item		<> 'I' and coalesce(d.nr_lote_contabil_prov,0) = 0 and ((ie_consiste_recalculo_w <> 'S') 
	or ('P' not in (select coalesce(max(x.ie_tipo_relacao),'X') 
				from	pls_prestador		x 
				where	x.nr_sequencia	= b.nr_seq_prestador_exec)) 
	or (dt_referencia_trunc_w	= dt_ref_last_day_w))	 
	 
union all
 
	select	'P', /*Procedimento*/
 
		c.nr_sequencia, 
		c.cd_conta_provisao_deb, 
		c.cd_conta_provisao_cred, 
		coalesce(c.vl_provisao,0), 
		a.dt_mes_competencia, 
		c.cd_historico_prov, 
		b.nr_sequencia, 
		b.nr_seq_segurado, 
		b.nr_seq_protocolo, 
		b.nr_seq_prestador_exec, 
		b.nr_seq_prot_conta, 
		c.cd_procedimento, 
		c.ie_origem_proced, 
		null nr_seq_material, 
		'PLS_CONTA_PROC' nm_tabela, 
		'VL_PROVISAO' nm_atributo, 
		42 nr_seq_info_ctb, 
		coalesce(b.nr_seq_plano, (	select	x.nr_sequencia 
					from	pls_segurado	s, 
						pls_plano	x 
					where	x.nr_sequencia	= s.nr_seq_plano 
					and	s.nr_sequencia	= b.nr_seq_segurado)) nr_seq_plano, 
		c.nr_sequencia, 
		null, 
		null, 
		null, 
		null, 
		coalesce(c.vl_provisao,0) - coalesce((	select	max(r.vl_liberado) 
						from	pls_conta_medica_resumo	r 
						where	c.nr_sequencia		= r.nr_seq_conta_proc 
						and	b.nr_sequencia		= r.nr_seq_conta),0) vl_ajuste, 
		c.cd_historico_ajuste, 
		coalesce(e.ie_regulamentacao, (	select	x.ie_regulamentacao 
						from	pls_segurado	s, 
							pls_plano	x 
						where	x.nr_sequencia	= s.nr_seq_plano 
						and	s.nr_sequencia	= b.nr_seq_segurado)) ie_regulamentacao, 
		f.nr_nota_fiscal, 
		0 vl_liberado_ant, 
		0 vl_taxa_adm, 
		null nr_id_res, 
		c.oid nr_id_proc, 
		null nr_id_mat 
	FROM pls_conta_proc c, pls_protocolo_conta a, pls_conta b
LEFT OUTER JOIN pls_plano e ON (b.nr_seq_plano = e.nr_sequencia)
LEFT OUTER JOIN pls_prot_conta_titulo f ON (b.nr_seq_prot_conta = f.nr_sequencia)
WHERE b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= b.nr_seq_protocolo   and a.dt_mes_competencia 	between dt_referencia_month_w and dt_referencia_w and a.cd_estabelecimento	= cd_estabelecimento_w and a.ie_tipo_protocolo	= 'C' and ie_status_prov_pagto_w	= 'NC' and b.ie_status		not in ('C', 'U') and a.ie_situacao not in ('RE','I') and c.ie_status not in ('D','M') and coalesce(c.vl_provisao, 0) <> 0 and coalesce(c.nr_lote_contabil_prov,0) 	= 0 and ((ie_consiste_recalculo_w <> 'S') 
	or ('P' not in (	select	coalesce(max(x.ie_tipo_relacao),'X') 
				from	pls_prestador	x 
				where	x.nr_sequencia	= b.nr_seq_prestador_exec)) 
	or (dt_referencia_trunc_w	= dt_ref_last_day_w)) 
	 
union all
 
	select	'M', /*Material*/
 
		c.nr_sequencia, 
		c.cd_conta_provisao_deb, 
		c.cd_conta_provisao_cred, 
		coalesce(c.vl_provisao,0), 
		a.dt_mes_competencia, 
		c.cd_historico_prov, 
		b.nr_sequencia, 
		b.nr_seq_segurado, 
		b.nr_seq_protocolo, 
		b.nr_seq_prestador_exec, 
		b.nr_seq_prot_conta, 
		null cd_procedimento, 
		null ie_origem_proced, 
		c.nr_seq_material, 
		'PLS_CONTA_MAT' nm_tabela, 
		'VL_PROVISAO' nm_atributo, 
		42 nr_seq_info_ctb, 
		coalesce(b.nr_seq_plano, (	select	x.nr_sequencia 
					from	pls_segurado	s, 
						pls_plano	x 
					where	x.nr_sequencia	= s.nr_seq_plano 
					and	s.nr_sequencia	= b.nr_seq_segurado)) nr_seq_plano, 
		c.nr_sequencia, 
		null, 
		null, 
		null, 
		null, 
		coalesce(c.vl_provisao,0) - coalesce((	select	max(r.vl_liberado) 
						from	pls_conta_medica_resumo	r 
						where	c.nr_sequencia		= r.nr_seq_conta_proc 
						and	b.nr_sequencia		= r.nr_seq_conta),0) vl_ajuste, 
		c.cd_historico_ajuste, 
		coalesce(e.ie_regulamentacao, (	select	x.ie_regulamentacao 
						from	pls_segurado	s, 
							pls_plano	x 
						where	x.nr_sequencia	= s.nr_seq_plano 
						and	s.nr_sequencia	= b.nr_seq_segurado)) ie_regulamentacao, 
		f.nr_nota_fiscal, 
		0 vl_liberado_ant, 
		0 vl_taxa_adm, 
		null nr_id_res, 
		null nr_id_proc, 
		c.oid nr_id_mat 
	FROM pls_conta_mat c, pls_protocolo_conta a, pls_conta b
LEFT OUTER JOIN pls_plano e ON (b.nr_seq_plano = e.nr_sequencia)
LEFT OUTER JOIN pls_prot_conta_titulo f ON (b.nr_seq_prot_conta = f.nr_sequencia)
WHERE b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= b.nr_seq_protocolo   and a.dt_mes_competencia 	between dt_referencia_month_w and dt_referencia_w and a.cd_estabelecimento	= cd_estabelecimento_w and a.ie_tipo_protocolo	= 'C' and ie_status_prov_pagto_w	= 'NC' and b.ie_status		not in ('C', 'U') and a.ie_situacao not in ('RE','I') and c.ie_status not in ('D','M') and coalesce(c.nr_lote_contabil_prov,0) 	= 0 and coalesce(c.vl_provisao, 0) <> 0 and ((ie_consiste_recalculo_w <> 'S') 
	or ('P' not in (	select	coalesce(max(x.ie_tipo_relacao),'X') 
				from	pls_prestador	x 
				where	x.nr_sequencia	= b.nr_seq_prestador_exec)) 
	or (dt_referencia_trunc_w	= dt_ref_last_day_w));
	
c_movimento CURSOR FOR 
	SELECT	oid 
	from	movimento_contabil 
	where	nr_lote_contabil	= nr_lote_contabil_p;

type t_movimento is table of oid;
desfazer_mov_contab_w t_movimento;
	
c_movimento_w CURSOR FOR 
	SELECT	oid 
	from	w_movimento_contabil 
	where	nr_lote_contabil	= nr_lote_contabil_p;

c_itens_abertos CURSOR FOR 
	SELECT	b.nr_sequencia 
	from	pls_conta		b, 
		pls_protocolo_conta	a 
	where	a.nr_sequencia		= b.nr_seq_protocolo 
	and	a.dt_mes_competencia between dt_referencia_month_w and dt_referencia_w 
	and	a.ie_tipo_protocolo	= 'C' 
	and	b.ie_status 		not in ('F','C') 
	and	a.ie_situacao		not in ('I','A','RE');
	
c_tipo_movimento CURSOR FOR 
	SELECT	'C' 
	 
	
union
 
	SELECT	'G' 
	 
	where	ie_status_prov_pagto_w = 'F' 
	
union
 
	select	'A' 
	 
	where	coalesce(vl_ajuste_w,0) > 0 
	and	ie_lote_ajuste_prod_w = 'P' 
	
union
 
	select 	'T' 
	 
	where	coalesce(ie_forma_contab_taxa_pgto_w,'N') <> 'N' 
	and	vl_taxa_adm_w <> 0;
	
-- Variávei do C_delete | cursor para limpar a tabela 
type c_movimento_type is table of oid;
c_movimento_regs_w c_movimento_type;


BEGIN 
 
select	dt_referencia, 
	cd_estabelecimento, 
	nr_lote_contabil, 
	cd_tipo_lote_contabil 
into STRICT	dt_referencia_w, 
	cd_estabelecimento_w, 
	nr_lote_contabil_w, 
	cd_tipo_lote_contabil_w 
from	lote_contabil 
where	nr_lote_contabil	= nr_lote_contabil_p;
select	max(cd_empresa) 
into STRICT	cd_empresa_w 
from	estabelecimento 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
select	max(coalesce(ie_status_prov_pagto,'NC')), 
	max(ie_esquema_contabil), 
	max(coalesce(ie_consiste_recalculo,'N')), 
	max(coalesce(ie_lote_ajuste_prod,'R')), 
	coalesce(max(ie_forma_contab_taxa_pgto),'N') 
into STRICT	ie_status_prov_pagto_w, 
	ie_esquema_contabil_w, 
	ie_consiste_recalculo_w, 
	ie_lote_ajuste_prod_w, 
	ie_forma_contab_taxa_pgto_w 
from	pls_parametro_contabil 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
dt_referencia_w		:= fim_dia(dt_referencia_w);
dt_referencia_trunc_w	:= pkg_date_utils.start_of(dt_referencia_w,'dd');
dt_ref_last_day_w	:= pkg_date_utils.start_of(pkg_date_utils.end_of(dt_referencia_w,'MONTH',0),'dd');
dt_referencia_month_w	:= trunc(dt_referencia_w,'month');
 
if (ie_esquema_contabil_w = 'N') then 
	delete	from w_pls_movimento_sem_conta 
	where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w 
	and	dt_referencia		= dt_referencia_month_w;
end if;
 
if (ie_exclusao_p = 'S') then 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	/*for reg in c_movimento 
		loop   
		delete	from movimento_contabil 
		where  rowid	= reg.rowid; 
		end loop;*/
 
		 
	open c_movimento;
	loop 
	fetch c_movimento bulk collect into desfazer_mov_contab_w limit 1000;
 
		-- Deletar em massa os registros da tabela 
		forall i in desfazer_mov_contab_w.first .. desfazer_mov_contab_w.last 
			delete from movimento_contabil where rowid = desfazer_mov_contab_w(i);
 
		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento */
	end loop;
	close c_movimento;
	 
	update	lote_contabil 
	set	vl_credito		= 0, 
		vl_debito		= 0, 
		dt_geracao_lote		 = NULL 
	where	nr_lote_contabil	= nr_lote_contabil_p;
	 
	commit;
	update	pls_conta_proc a 
	set	a.nr_lote_contabil_prov	= 0 
	where	nr_lote_contabil_prov	= nr_lote_contabil_p;
	 
	commit;
	update	pls_conta_mat a 
	set	a.nr_lote_contabil_prov	= 0 
	where	nr_lote_contabil_prov	= nr_lote_contabil_p;
	 
	commit;
	update	pls_conta_medica_resumo	a 
	set	a.nr_lote_contabil_prov	= 0 
	where	nr_lote_contabil_prov	= nr_lote_contabil_p;
	 
	commit;
	update	pls_protocolo_conta 
	set	nr_lote_contabil_prov	= 0 
	where	nr_lote_contabil_prov	= nr_lote_contabil_p;
	 
	commit;
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else 
 
	select	coalesce(max('S'),'N') 
	into STRICT	ie_gerar_recalculo_w 
	from	lote_contabil a 
	where	nr_lote_contabil	= nr_lote_contabil_p 
	and	ie_consiste_recalculo_w	= 'S' 
	and	not exists (	SELECT	1 
				from	pls_lote_recalculo l, 
					pls_regra_lote_recalculo r 
				where	l.nr_seq_regra = r.nr_sequencia 
				and	(l.dt_aplicacao IS NOT NULL AND l.dt_aplicacao::text <> '') 
				and	r.ie_tipo_regra = 1 
				and	trunc(l.dt_mes_competencia,'month') = trunc(a.dt_referencia,'month'));
 
	if (ie_gerar_recalculo_w = 'S' and dt_referencia_trunc_w = dt_ref_last_day_w) then 
		-- Necessário gerar o recálculo do recurso próprio para esta competência antes da geração do lote contábil. 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(330163);
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	open c_movimento_w;
	loop 
	fetch c_movimento_w bulk collect into c_movimento_regs_w limit 1000;
 
		-- Deletar em massa os registros da tabela temporária 
		forall i in c_movimento_regs_w.first .. c_movimento_regs_w.last 
			delete from w_movimento_contabil where rowid = c_movimento_regs_w(i);
 
		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento_w */
	end loop;
	close c_movimento_w;
	 
	/*Último dia do mês, deverá consistir contas médicas em aberto*/
	 
	if (ie_status_prov_pagto_w = 'F' and dt_referencia_trunc_w	= dt_ref_last_day_w) then 
		ds_contas_w	:= '';
		 
		open c_itens_abertos;
		loop 
		fetch c_itens_abertos into 
			nr_seq_conta_aberta_w;
		EXIT WHEN NOT FOUND; /* apply on c_itens_abertos */
			begin 
			 
			if (coalesce(ds_contas_w,'X') = 'X') then 
				ds_contas_w := nr_seq_conta_aberta_w;
			else 
				ds_contas_w := substr(ds_contas_w || ', ' || nr_seq_conta_aberta_w,1,2000);
			end if;
			 
			end;
		end loop;
		close c_itens_abertos;
	 
		if (coalesce(ds_contas_w,'X') <> 'X') then 
			/* Existem contas médicas em aberto: #@DS_CONTAS#@*/
 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(324743, 'DS_CONTAS=' || ds_contas_w);
		end if;
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	 
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)), 'NR_SEQ_CONTA');
	 
	/* Paulo 29/09/2009 - OS 168594 */
 
	begin 
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception 
	when others then 
		ie_compl_hist_w	:= null;
	end;
	 
	nr_seq_w_movto_cont_w	:= 0;
	 
	open c_itens;
	loop 
	fetch c_itens into 
		ie_proc_mat_w, 
		nr_seq_item_w, 
		cd_conta_debito_w, 
		cd_conta_credito_w, 
		vl_contabil_w, 
		dt_referencia_mens_w, 
		cd_historico_w, 
		nr_seq_conta_w, 
		nr_seq_segurado_w, 
		nr_seq_protocolo_w, 
		nr_seq_prestador_w, 
		nr_seq_prot_conta_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_material_w, 
		nm_tabela_w, 
		nm_atributo_w, 
		nr_seq_info_ctb_w, 
		nr_seq_plano_w, 
		nr_seq_conta_resumo_w, 
		cd_conta_glosa_deb_w, 
		cd_conta_glosa_cred_w, 
		vl_glosa_w, 
		cd_historico_glosa_w, 
		vl_ajuste_w, 
		cd_historico_vl_ajuste_w, 
		ie_regulamentacao_w, 
		nr_nota_fiscal_w, 
		vl_liberado_ant_w, 
		vl_taxa_adm_w, 
		nr_id_res_w, 
		nr_id_proc_w, 
		nr_id_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens */
		begin 
		cd_centro_custo_deb_w	:= null;
		cd_centro_custo_cred_w	:= null;
		nm_tabela_ww		:= nm_tabela_w;
		nm_atributo_ww		:= nm_atributo_w;
		dt_referencia_mens_w	:= fim_dia(dt_referencia_mens_w);
		 
		select	max(a.ie_tipo_relacao) 
		into STRICT	ie_tipo_relacao_w 
		from	pls_prestador	a 
		where	a.nr_sequencia = nr_seq_prestador_w;
				 
		if (ie_tipo_relacao_w = 'P' and dt_referencia_trunc_w = dt_ref_last_day_w and coalesce(vl_liberado_ant_w,0) > 0) then 
			dt_referencia_mens_w :=	dt_referencia_w;
		end if;
		 
		open c_tipo_movimento;
		loop 
		fetch c_tipo_movimento into 
			ie_movimento_w;
		EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
			begin 
			cd_centro_custo_deb_w	:= null;
			cd_centro_custo_cred_w	:= null;
			ds_compl_historico_w	:= null;
			ds_item_w		:= null;
			cd_classif_prov_deb_w	:= null;
			cd_classif_prov_cred_w	:= null;
			cd_conta_deb_w		:= null;
			cd_conta_cred_w		:= null;
			 
			if (ie_movimento_w = 'C') then /* Conta */
 
				cd_conta_deb_w		:= cd_conta_debito_w;
				cd_conta_cred_w		:= cd_conta_credito_w;
				cd_historico_contab_w	:= cd_historico_w;
				vl_contab_w		:= vl_contabil_w;
				nm_tabela_w		:= nm_tabela_ww;
				nm_atributo_w		:= nm_atributo_ww;
				nr_seq_tab_orig_w 	:= nr_seq_item_w;
				nr_seq_info_ctb_w	:= 36;
				 
				if (ie_status_prov_pagto_w = 'F') then 
					nm_tabela_w		:= 'PLS_CONTA_MEDICA_RESUMO';
					nm_atributo_w		:= 'VL_LIBERADO';
					nr_seq_tab_orig_w	:= nr_seq_conta_resumo_w;
				end if;
				 
			elsif (ie_movimento_w = 'G') then /* Glosa */
 
				cd_conta_deb_w		:= cd_conta_glosa_deb_w;
				cd_conta_cred_w		:= cd_conta_glosa_cred_w;
				cd_historico_contab_w	:= cd_historico_glosa_w;
				vl_contab_w		:= vl_glosa_w;
				 
				nm_tabela_w		:= 'PLS_CONTA_MEDICA_RESUMO';
				nm_atributo_w		:= 'VL_GLOSA';
				nr_seq_tab_orig_w	:= nr_seq_conta_resumo_w;
				nr_seq_info_ctb_w	:= 24;
			elsif (ie_movimento_w = 'A') then 
				cd_conta_deb_w		:= cd_conta_debito_w;
				cd_conta_cred_w		:= cd_conta_credito_w;
				cd_historico_contab_w	:= cd_historico_vl_ajuste_w;
				vl_contab_w		:= vl_ajuste_w;
				 
				if (coalesce(nr_seq_item_recalculo_w,0) <> 0) then 
					vl_contab_w := 0;
				end if;
				 
				nm_tabela_w		:= 'PLS_CONTA_MEDICA_RESUMO';
				nm_atributo_w		:= 'VL_AJUSTADO';
				nr_seq_tab_orig_w	:= nr_seq_conta_resumo_w;
				nr_seq_info_ctb_w	:= 36;
	 
			elsif (ie_movimento_w = 'T') then 
				nr_seq_tab_orig_w	:= nr_seq_conta_resumo_w;
				nr_seq_info_ctb_w	:= 36;
				nm_atributo_w		:= 'VL_TAXA_PAGAMENTO';
				vl_contab_w		:= vl_taxa_adm_w;
 
				if (ie_forma_contab_taxa_pgto_w = 'P') then 
					cd_conta_deb_w		:= cd_conta_debito_w;
					cd_conta_cred_w		:= cd_conta_credito_w;
					vl_contab_w		:= vl_contab_w * (-1);
					 
				elsif (ie_forma_contab_taxa_pgto_w = 'G') then 
					cd_conta_deb_w		:= cd_conta_glosa_deb_w;
					cd_conta_cred_w		:= cd_conta_glosa_cred_w;
					 
				elsif (ie_forma_contab_taxa_pgto_w = 'O') then 
					select	max(cd_classif_prov_deb), 
						max(cd_classif_prov_cred) 
					into STRICT	cd_classif_prov_deb_w, 
						cd_classif_prov_cred_w 
					from	pls_conta_medica_resumo 
					where	nr_sequencia	= nr_seq_conta_resumo_w 
					and	nr_seq_conta	= nr_seq_conta_w;
									 
					if (cd_classif_prov_deb_w IS NOT NULL AND cd_classif_prov_deb_w::text <> '') then 
						cd_classif_prov_deb_w	:= substr(cd_classif_prov_deb_w,1,16) || '9' || substr(cd_classif_prov_deb_w,18,(length(cd_classif_prov_deb_w) - 16));
						 
						cd_conta_deb_w		:= ctb_obter_conta_classif(cd_classif_prov_deb_w,dt_referencia_mens_w,cd_estabelecimento_w);
					end if;
					 
					if (cd_classif_prov_cred_w IS NOT NULL AND cd_classif_prov_cred_w::text <> '') then 
						cd_classif_prov_cred_w	:= substr(cd_classif_prov_cred_w,1,16) || '9' || substr(cd_classif_prov_cred_w,18,(length(cd_classif_prov_cred_w) - 16));
						 
						cd_conta_cred_w		:= ctb_obter_conta_classif(cd_classif_prov_cred_w,dt_referencia_mens_w,cd_estabelecimento_w);
					end if;
				 
				end if;
			end if;
			 
			if (coalesce(cd_conta_deb_w::text, '') = '') or (coalesce(cd_conta_cred_w::text, '') = '') then 
				if (ie_esquema_contabil_w = 'N') then 
					if (ie_proc_mat_w = 'P') then 
						ie_tipo_item_w	:= 'PCM';
						ds_item_w	:= substr(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w),1,255);
					else 
						ie_tipo_item_w	:= 'MCM';
						ds_item_w	:= substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',nr_seq_material_w),1,255);
					end if;
					 
					select	nextval('w_pls_movimento_sem_conta_seq') 
					into STRICT	nr_seq_mvto_sem_conta_w 
					;
					 
					if (coalesce(cd_conta_deb_w::text, '') = '') then 
						insert into w_pls_movimento_sem_conta(nr_sequencia, 
							cd_item, 
							ds_item, 
							ie_tipo_item, 
							dt_atualizacao, 
							nm_usuario, 
							vl_item, 
							dt_referencia, 
							nr_lote_contabil, 
							ie_proc_mat_item, 
							ie_deb_cred, 
							ds_observacao, 
							cd_tipo_lote_contabil) 
						values (nr_seq_mvto_sem_conta_w, 
							nr_seq_item_w, 
							ds_item_w, 
							ie_tipo_item_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							vl_contab_w, 
							dt_referencia_month_w, 
							nr_lote_contabil_w, 
							ie_proc_mat_w, 
							'D', 
							'Provisão de produção médica', 
							cd_tipo_lote_contabil_w);
					end if;
					 
					if (coalesce(cd_conta_cred_w::text, '') = '') then 
						insert into w_pls_movimento_sem_conta(nr_sequencia, 
							cd_item, 
							ds_item, 
							ie_tipo_item, 
							dt_atualizacao, 
							nm_usuario, 
							vl_item, 
							dt_referencia, 
							nr_lote_contabil, 
							ie_proc_mat_item, 
							ie_deb_cred, 
							ds_observacao, 
							cd_tipo_lote_contabil) 
						values (nr_seq_mvto_sem_conta_w, 
							nr_seq_item_w, 
							ds_item_w, 
							ie_tipo_item_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							vl_contab_w, 
							dt_referencia_month_w, 
							nr_lote_contabil_w, 
							ie_proc_mat_w, 
							'C', 
							'Provisão de produção médica', 
							cd_tipo_lote_contabil_w);
					end if;
				end if;
			 
			end if;
			 
			if (cd_conta_deb_w IS NOT NULL AND cd_conta_deb_w::text <> '') or (cd_conta_cred_w IS NOT NULL AND cd_conta_cred_w::text <> '') then 
				 
				if (nm_agrupador_w = 'NR_SEQ_CONTA') then 
					nr_seq_agrupamento_w	:= nr_seq_conta_w;
				elsif (nm_agrupador_w = 'NR_SEQ_PROTOCOLO') then 
					nr_seq_agrupamento_w	:= nr_seq_protocolo_w;
				end if;
				 
				if (ie_compl_hist_w = 'S') then 
					select	count(1) 
					into STRICT	qt_compl_hist_w 
					from	historico_padrao_atributo 
					where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w 
					and	cd_historico		= cd_historico_contab_w  LIMIT 1;
					 
					if (qt_compl_hist_w > 0) then 
						if (coalesce(nr_seq_prestador_w,0) > 0) then 
							select	a.cd_pessoa_fisica, 
								a.cd_cgc 
							into STRICT	cd_pessoa_fisica_w, 
								cd_cgc_prestador_w 
							from	pls_prestador	a 
							where	a.nr_sequencia	= nr_seq_prestador_w;
							 
							begin 
							nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
							exception 
							when others then 
								nm_prestador_w	:= null;
							end;
							 
							select	max(nr_cpf) 
							into STRICT	cd_cpf_prestador_w 
							from	pessoa_fisica 
							where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
						end if;
						 
						ds_conteudo_w	:= substr(	nr_seq_prestador_w	||'#@'|| 
										nm_prestador_w 		||'#@'|| 
										nr_seq_protocolo_w	||'#@'|| 
										nr_seq_conta_w		||'#@'|| 
										cd_cgc_prestador_w	||'#@'|| 
										cd_cpf_prestador_w	||'#@'|| 
										nr_nota_fiscal_w,1,4000);
						 
						begin 
						ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_contab_w, ds_conteudo_w),1,255);
						exception 
						when others then 
							ds_compl_historico_ww	:= null;
						end;
						 
						ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
					end if;
				end if;
				 
				if (cd_conta_deb_w IS NOT NULL AND cd_conta_deb_w::text <> '') then 
					select	ie_centro_custo, 
						cd_centro_custo 
					into STRICT	ie_centro_custo_deb_w, 
						cd_centro_custo_deb_fixo_w 
					from	conta_contabil 
					where	cd_conta_contabil = cd_conta_deb_w;
					 
					if (ie_centro_custo_deb_w = 'S') then 
						if (cd_centro_custo_deb_fixo_w IS NOT NULL AND cd_centro_custo_deb_fixo_w::text <> '') then 
							cd_centro_custo_deb_w	:= cd_centro_custo_deb_fixo_w;
						else 
							SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, null, cd_centro_custo_deb_w, nr_seq_regra_cc_w, nr_seq_prestador_w) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;
						end if;
					end if;
					 
					nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					 
					item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
					item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
					item_mov_contabil_w.cd_conta_contabil	:= cd_conta_deb_w;
					item_mov_contabil_w.ie_debito_credito	:= 'D';
					item_mov_contabil_w.cd_historico	:= cd_historico_contab_w;
					item_mov_contabil_w.dt_movimento	:= dt_referencia_mens_w;
					item_mov_contabil_w.vl_movimento	:= vl_contab_w;
					item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
					item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_deb_w;
					item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
					item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
					item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
					item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
					item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
					item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
					 
					movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
 
					if (movimento_contabil_w.count >= 1000) then 
						begin						 
						forall i in movimento_contabil_w.first .. movimento_contabil_w.last 
							insert into w_movimento_contabil values movimento_contabil_w(i);
						commit;
 
						movimento_contabil_w.delete;
						end;
					end if;
				end if;
				 
				if (cd_conta_cred_w IS NOT NULL AND cd_conta_cred_w::text <> '') then 
				 
					select	ie_centro_custo, 
						cd_centro_custo 
					into STRICT	ie_centro_custo_cred_w, 
						cd_centro_custo_cred_fixo_w 
					from	conta_contabil 
					where	cd_conta_contabil = cd_conta_cred_w;
					 
					if (ie_centro_custo_cred_w = 'S') then 
						if (cd_centro_custo_cred_fixo_w IS NOT NULL AND cd_centro_custo_cred_fixo_w::text <> '') then 
							cd_centro_custo_cred_w	:= cd_centro_custo_cred_fixo_w;
						else 
							SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, null, cd_centro_custo_cred_w, nr_seq_regra_cc_w, nr_seq_prestador_w) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
						end if;
					end if;
					 
					nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					 
					item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
					item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
					item_mov_contabil_w.cd_conta_contabil	:= cd_conta_cred_w;
					item_mov_contabil_w.ie_debito_credito	:= 'C';
					item_mov_contabil_w.cd_historico	:= cd_historico_contab_w;
					item_mov_contabil_w.dt_movimento	:= dt_referencia_mens_w;
					item_mov_contabil_w.vl_movimento	:= vl_contab_w;
					item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
					item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_cred_w;
					item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
					item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
					item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
					item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
					item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
					item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
					 
					movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
 
					if (movimento_contabil_w.count >= 1000) then 
						begin						 
						forall i in movimento_contabil_w.first .. movimento_contabil_w.last 
							insert into w_movimento_contabil values movimento_contabil_w(i);
						commit;
 
						movimento_contabil_w.delete;
						end;
					end if;
					 
				end if;
			end if;
			end;
		end loop;
		close c_tipo_movimento;
		 
		CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		 
		pls_conta_proc_w.nr_id(pls_conta_proc_w.nr_id.count)	:= nr_id_proc_w;
		 
		if (pls_conta_proc_w.nr_id.count >= 1000) then 
			begin 
			forall i in pls_conta_proc_w.nr_id.first .. pls_conta_proc_w.nr_id.last 
				update	pls_conta_proc	a 
				set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
				where	rowid				= pls_conta_proc_w.nr_id(i);
 
			commit;
			pls_conta_proc_w.nr_id.delete;
			end;
		end if;
		 
		pls_conta_mat_w.nr_id(pls_conta_mat_w.nr_id.count)	:= nr_id_mat_w;
		 
		if (pls_conta_mat_w.nr_id.count >= 1000) then 
			begin 
			forall i in pls_conta_mat_w.nr_id.first .. pls_conta_mat_w.nr_id.last 
				update	pls_conta_mat	a 
				set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
				where	rowid				= pls_conta_mat_w.nr_id(i);
 
			commit;
			pls_conta_mat_w.nr_id.delete;
			end;
		end if;
		 
		if (ie_status_prov_pagto_w = 'F') then 
			pls_conta_res_w.nr_id(pls_conta_res_w.nr_id.count)	:= nr_id_res_w;
			 
			if (pls_conta_res_w.nr_id.count >= 1000) then 
				begin 
				forall i in pls_conta_res_w.nr_id.first .. pls_conta_res_w.nr_id.last 
					update	pls_conta_medica_resumo	a 
					set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
					where	rowid				= pls_conta_res_w.nr_id(i);
 
				commit;
				pls_conta_res_w.nr_id.delete;
				end;
			end if;
		end if;
		 
		CALL wheb_usuario_pck.set_ie_lote_contabil('N');
		end;		
	end loop;
	close c_itens;
	 
	if (movimento_contabil_w.count > 0) then 
		forall i in movimento_contabil_w.first .. movimento_contabil_w.last 
			insert into w_movimento_contabil values movimento_contabil_w(i);
		commit;
		movimento_contabil_w.delete;
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	if (pls_conta_proc_w.nr_id.count > 0) then 
		forall i in pls_conta_proc_w.nr_id.first .. pls_conta_proc_w.nr_id.last 
			update	pls_conta_proc	a 
			set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
			where	rowid				= pls_conta_proc_w.nr_id(i);
 
		commit;
		pls_conta_proc_w.nr_id.delete;
	end if;
	 
	if (pls_conta_mat_w.nr_id.count > 0) then	 
		forall i in pls_conta_mat_w.nr_id.first .. pls_conta_mat_w.nr_id.last 
			update	pls_conta_mat	a 
			set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
			where	rowid				= pls_conta_mat_w.nr_id(i);
 
		commit;
		pls_conta_mat_w.nr_id.delete;
	end if;
	 
	if (ie_status_prov_pagto_w = 'F') then 
		if (pls_conta_res_w.nr_id.count > 0) then 
			forall i in pls_conta_res_w.nr_id.first .. pls_conta_res_w.nr_id.last 
				update	pls_conta_medica_resumo	a 
				set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
				where	rowid				= pls_conta_res_w.nr_id(i);
 
			commit;
			pls_conta_res_w.nr_id.delete;
		end if;
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	 
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p, 
					nm_usuario_p);
end if;
 
if (coalesce(ds_retorno_p::text, '') = '') then 
	update	lote_contabil 
	set	ie_situacao		= 'A', 
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END  
	where	nr_lote_contabil	= nr_lote_contabil_p;
	 
	if (ie_exclusao_p = 'S') then 
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
	else 
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);
	end if;
	 
	commit;
else 
	rollback;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_prov_prod_proj ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

