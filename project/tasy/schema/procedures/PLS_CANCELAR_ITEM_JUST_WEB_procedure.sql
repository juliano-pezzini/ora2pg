-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_item_just_web ( nr_seq_requisicao_p bigint, nr_seq_auditoria_p bigint, nr_seq_item_p bigint, ds_motivo_p text, nr_seq_motivo_canc_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
qt_registro_w		bigint;
nr_seq_mat_w		bigint;
nr_seq_proc_w		bigint;
qt_reg_proc_w		bigint;
qt_reg_mat_w		bigint;
qt_reg_aud_w		bigint;
ie_encerrar_ana_param_w	varchar(2) := 'N';
qt_itens_dif_canc_w	bigint;
ds_historico_w		varchar(1000);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;


BEGIN 
 
select	max(nr_seq_mat_origem), 
	max(nr_seq_proc_origem) 
into STRICT	nr_seq_mat_w, 
	nr_seq_proc_w 
from	pls_auditoria_item 
where	nr_sequencia = nr_seq_item_p;
 
ds_retorno_p	:= 'S';
 
update	pls_auditoria_item 
set	dt_atualizacao 	= clock_timestamp(), 
	nm_usuario	= nm_usuario_p, 
	ie_status	= 'C' 
where 	nr_sequencia	= nr_seq_item_p;
 
 
if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then 
 
	update	pls_requisicao_proc 
	set	dt_atualizacao 	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p, 
		ie_status	= 'C', 
		ie_estagio	= 'N', 
		nr_seq_motivo_cancel = nr_seq_motivo_canc_p 
	where 	nr_sequencia	= nr_seq_proc_w 
	and	nr_seq_requisicao = nr_seq_requisicao_p;
 
elsif (nr_seq_mat_w IS NOT NULL AND nr_seq_mat_w::text <> '') then 
 
	update	pls_requisicao_mat 
	set	dt_atualizacao 	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p, 
		ie_status	= 'C', 
		ie_estagio	= 'N', 
		nr_seq_motivo_cancel = nr_seq_motivo_canc_p 
	where 	nr_sequencia	= nr_seq_mat_w 
	and	nr_seq_requisicao = nr_seq_requisicao_p;
 
end if;
 
select	cd_estabelecimento 
into STRICT	cd_estabelecimento_w 
from	pls_requisicao 
where	nr_sequencia 	= nr_seq_requisicao_p;
 
ie_encerrar_ana_param_w := pls_parametro_operadora_web('EAJ', cd_estabelecimento_w);
 
select	count(1) 
into STRICT	qt_reg_proc_w 
from	pls_requisicao_proc 
where	nr_seq_requisicao	= nr_seq_requisicao_p 
and	ie_status		<> 'C';
 
select	count(1) 
into STRICT	qt_reg_mat_w 
from	pls_requisicao_mat 
where	nr_seq_requisicao	= nr_seq_requisicao_p 
and		ie_status <> 'C';
 
qt_itens_dif_canc_w := qt_reg_proc_w + qt_reg_mat_w;
 
if (qt_itens_dif_canc_w = 0) then 
	-- Se todos os itens da requisição estão cancelados 
 
	update	pls_requisicao 
	set	ie_status		= 'C', 
		ie_estagio		= 3, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_sequencia		= nr_seq_requisicao_p;
 
	select	count(1) 
	into STRICT	qt_reg_aud_w 
	from	pls_auditoria 
	where	nr_seq_requisicao	= nr_seq_requisicao_p 
	and	ie_status		not in ('F', 'C');
 
	if (qt_reg_aud_w	> 0) then 
		update	pls_auditoria 
		set	ie_status		= 'C', 
			dt_liberacao		= clock_timestamp(), 
			nr_seq_proc_interno	 = NULL, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_seq_requisicao	= nr_seq_requisicao_p;
	end if;
 
end if;
 
insert into pls_requisicao_historico(nr_sequencia, dt_atualizacao_nrec, dt_atualizacao, 
	nm_usuario, nm_usuario_nrec, nr_seq_requisicao, 
	ds_historico, dt_historico, ie_origem_historico, 
	ie_tipo_historico, nr_seq_item) 
values (nextval('pls_requisicao_historico_seq'), clock_timestamp(), clock_timestamp(), 
	nm_usuario_p, nm_usuario_p, nr_seq_requisicao_p, 
	ds_motivo_p, clock_timestamp(), 'M', 'M', nr_seq_item_p);
 
select 	count(1) 
into STRICT	qt_registro_w 
from	pls_auditoria_item 
where 	nr_seq_auditoria = nr_seq_auditoria_p 
and	ie_status = 'J';
 
if (qt_registro_w = 0) then 
 
	select 	count(1) 
	into STRICT	qt_registro_w 
	from	pls_auditoria_item 
	where 	nr_seq_auditoria = nr_seq_auditoria_p 
	and		ie_status = 'P';
 
	-- Se todos os itens pendente de justificativas forem cancelados 
	if (ie_encerrar_ana_param_w = 'S' and qt_registro_w = 0) then 
		update	pls_auditoria 
		set	ie_status 	= 'F', 
			nm_usuario 	= nm_usuario_p, 
			dt_atualizacao 	= clock_timestamp(), 
			dt_liberacao	= clock_timestamp() 
		where 	nr_sequencia 	= nr_seq_auditoria_p;
 
		ds_historico_w := 'O usuário web '||nm_usuario_p||', encerrou a análise após cancelar todos os itens na justificativa do prestador.';
		 
		CALL pls_gerar_hist_req_web(nr_seq_requisicao_p, 'L',ds_historico_w, 
				    nm_usuario_p);
		 
		if (qt_itens_dif_canc_w > 0) then 
			CALL pls_atualiza_estagio_req(nr_seq_requisicao_p,nm_usuario_p);
		end if;
	else 
		update	pls_auditoria 
		set	ie_status 	= 'A', 
			nm_usuario 	= nm_usuario_p, 
			dt_atualizacao 	= clock_timestamp() 
		where 	nr_sequencia 	= nr_seq_auditoria_p 
		and	ie_status	<> 'C';
	end if;
	ds_retorno_p := 'N';
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_item_just_web ( nr_seq_requisicao_p bigint, nr_seq_auditoria_p bigint, nr_seq_item_p bigint, ds_motivo_p text, nr_seq_motivo_canc_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

