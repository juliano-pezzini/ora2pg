-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_proc_analise_ptu ( cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, dt_procedimento_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, ie_via_acesso_p text, cd_guia_p text, ie_tipo_guia_p text, nr_seq_conta_p bigint, nr_seq_benef_p bigint, ds_medicos_p text, ds_partic_p text, nm_usuario_p text, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_conta_princ_p bigint, ie_comitar_p text, nr_seq_grupo_atual_p bigint, tx_item_p bigint, vl_total_apres_p bigint, vl_taxa_servico_imp_p bigint, vl_taxa_co_imp_p bigint, vl_taxa_material_imp_p bigint, vl_taxa_mat_material_imp_p bigint, cd_procedimento_imp_p bigint, ds_procedimento_imp_p text, tx_intercambio_imp_p bigint, nr_seq_conta_ant_p bigint, nr_seq_item_criado_P INOUT bigint) AS $body$
DECLARE

 
nr_seq_proc_w			bigint;
dt_procedimento_w		timestamp;
ds_medicos_w			varchar(255);
ds_partic_w			varchar(255);
cd_medico_w			bigint;
cd_partic_w			bigint;
ds_partic_ww			varchar(255);
nr_seq_partic_w			bigint;
nr_seq_conselho_w		bigint;
nr_seq_cbo_saude_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_item_criado_w		bigint;
ds_observacao_w			varchar(255);
ds_cbo_prest_w			varchar(255);
ds_cbo_part_w			varchar(255);
cd_cbo_prest_w			varchar(255);
cd_cbo_part_w			varchar(255);
ie_tipo_despesa_w		varchar(1);
ie_origem_analise_w		smallint;
nr_seq_grau_partic_w		bigint;
nr_seq_prestador_w		bigint;
uf_conselho_w 			pls_proc_participante.uf_conselho%type;
nr_seq_proc_ww			bigint := null;
nm_medico_executor_imp_w 	varchar(255);
vl_unitario_imp_w		double precision;
ie_calculo_pacote_w		varchar(2);
ie_atualiza_apresentado_w	varchar(2);
nr_seq_log_exec_w		pls_cta_log_exec.nr_sequencia%type;
/*Diego 02/05/2011 - OS 310634 
  Rotina que tem por obejetivo criar na conta médica o procedimento inserido pelo auditor durante o processo de auditoria.*/
 
C01 CURSOR FOR 
	SELECT	cd_medico, 
		nr_seq_cbo_saude, 
		nr_seq_grau_partic, 
		nr_seq_prestador, 
		nm_medico_executor_imp 
	from	w_pls_proc_participante 
	where	nr_seq_analise = nr_seq_analise_p 
	
union
 
	SELECT	null, 
		null, 
		null, 
		null, 
		null 
	 
	where	not exists (	select	1 
				from	w_pls_proc_participante 
				where	nr_seq_analise = nr_seq_analise_p	);


BEGIN 
 
if (coalesce(nr_seq_conta_p,0) = 0) then 
	/*Obtem a conta principal do tipo de guia passada*/
 
	select	min(nr_sequencia) 
	into STRICT	nr_seq_conta_w 
	from	pls_conta 
	where	nr_seq_analise = nr_seq_analise_p 
	and	ie_tipo_guia = ie_tipo_guia_p 
	and	nr_seq_segurado = nr_seq_benef_p;
else 
	nr_seq_conta_w := nr_seq_conta_p;
end if;
 
select	coalesce(dt_procedimento_p, dt_emissao) 
into STRICT	dt_procedimento_w 
from	pls_conta 
where	nr_sequencia = nr_seq_conta_w;
 
vl_unitario_imp_w := dividir(vl_total_apres_p,qt_procedimento_p);
open C01;
loop 
fetch C01 into 
	cd_medico_w, 
	nr_seq_cbo_saude_w, 
	nr_seq_grau_partic_w, 
	nr_seq_prestador_w, 
	nm_medico_executor_imp_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	--obtem a seq da conta proc 
	select	nextval('pls_conta_proc_seq') 
	into STRICT	nr_seq_proc_w 
	;	
 
	/*Criar o procedimento na conta médica*/
 
	insert into pls_conta_proc(nr_sequencia, cd_procedimento, ie_origem_proced, 
		 qt_procedimento, dt_procedimento, ie_via_acesso, 
		 nr_seq_conta, nm_usuario, nm_usuario_nrec, 
		 dt_atualizacao, dt_atualizacao_nrec, ie_situacao, 
		 ie_status, qt_procedimento_imp,tx_item, 
		 nr_seq_proc_ref, dt_inicio_proc, dt_fim_proc, 
		 vl_procedimento_imp, vl_taxa_servico_imp, vl_taxa_co_imp, 
		 vl_taxa_material_imp, cd_procedimento_imp, ds_procedimento_imp, 
		 tx_intercambio_imp, vl_unitario_imp, vl_apresentado_xml, 
		 ie_ato_cooperado) 
	values (nr_seq_proc_w, cd_procedimento_p, ie_origem_proced_p, 
		 0, dt_procedimento_w, ie_via_acesso_p, 
		 nr_seq_conta_w, nm_usuario_p, nm_usuario_p, 
		 clock_timestamp(), clock_timestamp(), 'D', 
		 'U', qt_procedimento_p,tx_item_p, 
		 nr_seq_proc_ww, dt_inicio_p, dt_fim_p, 
		 vl_total_apres_p, vl_taxa_servico_imp_p, vl_taxa_co_imp_p, 
		 vl_taxa_material_imp_p, cd_procedimento_imp_p, ds_procedimento_imp_p, 
		 tx_intercambio_imp_p, vl_unitario_imp_w, vl_total_apres_p, 
		 '1');
		 
	if (coalesce(nr_seq_proc_ww::text, '') = '') then 
		nr_seq_proc_ww := nr_seq_proc_w;
	end if;	
	 
	if (cd_medico_w > 0) then 
		uf_conselho_w 		:= obter_dados_medico(cd_medico_w, 'UFCRM');
		nr_seq_conselho_w 	:= pls_obter_seq_conselho_prof(cd_medico_w);	
	end if;
	 
	if (cd_medico_w > 0) or (nr_seq_prestador_w > 0) or (coalesce(nm_medico_executor_imp_w,'X') <> 'X') then	 
		 
		insert into pls_proc_participante(nr_sequencia , dt_atualizacao, nm_usuario, 
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_proc, 
			cd_medico, nr_seq_grau_partic, uf_conselho, 
			nr_seq_cbo_saude, nr_seq_conselho, nr_seq_prestador, 
			nm_medico_executor_imp, ie_status) 
		values (nextval('pls_proc_participante_seq'), clock_timestamp(), nm_usuario_p, 
			clock_timestamp(), nm_usuario_p, nr_seq_proc_w, 
			cd_medico_w, nr_seq_grau_partic_w, uf_conselho_w, 
			coalesce(nr_seq_cbo_saude_w,pls_obter_cod_especialidade(nr_seq_conta_ant_p,'P')), nr_seq_conselho_w, nr_seq_prestador_w, 
			nm_medico_executor_imp_w, 'U');
	end if;
 
	select	max(ie_tipo_despesa) 
	into STRICT	ie_tipo_despesa_w 
	from	pls_conta_proc 
	where	nr_sequencia = nr_seq_proc_w;
	 
	select	coalesce(max(ie_calculo_pacote),'P'), 
		coalesce(max(ie_atualizar_valor_apresent),'N') 
	into STRICT	ie_calculo_pacote_w, 
		ie_atualiza_apresentado_w 
	from	pls_parametros 
	where	cd_estabelecimento	= cd_estabelecimento_p;
	--Abrir os lançamentos dos procedimentos conforme as regras por quantidade de execução 
	if (pls_util_cta_pck.pls_usa_rn_qtde_exec_regra = 'S') then 
		nr_seq_log_exec_w := pls_cta_processo_pck.executa_processo(	null, null, null, nr_seq_conta_p, null, null, null, null, '14,', null, nm_usuario_p, cd_estabelecimento_p, null, nr_seq_log_exec_w);
	else					 
 
		--Abrir os lançamentos dos procedimentos conforme as regras por quantidade de execução 
		CALL pls_abrir_proc_qtde_proc_valor(nr_seq_conta_p, null, nm_usuario_p, 
						cd_estabelecimento_p);
 
	end if;
	 
	if (ie_tipo_despesa_w = '1') then /* Atualizar o valor do procedimento */
 
		CALL pls_atualiza_valor_proc(nr_seq_proc_w, 'S', nm_usuario_p,'S',null,null);
	elsif (ie_tipo_despesa_w in ('2','3')) then /* Atualizar os valores das taxas e diárias */
 
		CALL pls_atualiza_valor_servico(nr_seq_proc_w, 'S', nm_usuario_p,'S');
	elsif (ie_tipo_despesa_w = '4') then 		 
		if (ie_calculo_pacote_w	= 'R') then 
			CALL pls_atualiza_valor_proc(nr_seq_proc_w, 'S', nm_usuario_p,'S',null,null); /* Atualizar os valores dos pacotes como se fossem procedimentos. Diego OS 411746- Hist. 27/03/2012 07:30:51*/
		else 
			CALL pls_atualiza_valor_pacote(nr_seq_proc_w, 'C', nm_usuario_p, 'S', 'N');/* Atualizar os valores dos pacotes */
		end if;
	end if;
 
	/*Robson 409348 - Não estava atualizando Regras para procedimentos dia 10/04/2012*/
 
	/*Francisco - 08/05/2012 - Passei para dentro da atualiza_valor_proc, por causa do log e para centralizar 
	pls_calcular_vinculo_direto(nr_seq_conta_w, nm_usuario_p);*/
 
 
	CALL pls_obter_tx_qtde_mat_valor(null,nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_p);
 
	if (coalesce(ie_atualiza_apresentado_w,'N') <> 'N') then 
		CALL pls_atualiza_valor_apresentado( null, null, null, null, nr_seq_proc_w, cd_estabelecimento_p, nm_usuario_p);
	end if;
 
	CALL pls_consistir_conta_proc(nr_seq_proc_w, cd_estabelecimento_p,'N', nm_usuario_p);
 
	/*Rotina para vincular regra de liberacao de valores para conta no procedimento, quando inserido manualmente pela anaálise. */
 
	CALL pls_obter_regra_valor_conta(nr_seq_conta_w,nr_seq_proc_w,null,null,nm_usuario_p);
 
	CALL pls_atualizar_glosa_oc_analise(	nr_seq_proc_w, null, nr_seq_analise_p, 
					cd_estabelecimento_p, nm_usuario_p);
	 
	/*Gerar os dados do resumo para ser usado na função OPS - Análise de Produção Médica */
 
	nr_seq_item_criado_w := pls_gerar_w_resumo_conta_ptu(	nr_seq_conta_w, nr_seq_proc_w, null, nr_seq_conta_princ_p, nr_seq_analise_p, nm_usuario_p, nr_seq_item_criado_w);
					 
	CALL pls_atualizar_proc_ref(nr_seq_proc_w, cd_estabelecimento_p, nm_usuario_p);
 
	update	pls_conta_proc 
	set	ie_status = 'A' 
	where	nr_sequencia = nr_seq_proc_w 
	and	ie_status 	<> 'D';
 
	update	w_pls_resumo_conta 
	set	nr_seq_grupo_item 	= nr_seq_grupo_atual_p 
	where	nr_sequencia 		= nr_seq_item_criado_w;
 
	end;
end loop;
close C01;
 
ds_observacao_w :=	'Procedimento inserido: '||cd_procedimento_p||'-'||pls_obter_desc_procedimento(cd_procedimento_p,ie_origem_proced_p)||chr(13)||chr(10)|| 
			'Quantidade inserida: '||qt_procedimento_p;
/*Inserindo histórico*/
 
CALL pls_inserir_hist_analise(nr_seq_conta_w, nr_seq_analise_p, 19, 
			 nr_seq_proc_w, 'P', null, 
			 null,ds_observacao_w, nr_seq_grupo_atual_p, 
			 nm_usuario_p,cd_estabelecimento_p);
 
delete	FROM w_pls_proc_participante 
where	nr_seq_analise = nr_seq_analise_p;
nr_seq_item_criado_P := nr_seq_item_criado_w;			
if (coalesce(ie_comitar_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_proc_analise_ptu ( cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, dt_procedimento_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, ie_via_acesso_p text, cd_guia_p text, ie_tipo_guia_p text, nr_seq_conta_p bigint, nr_seq_benef_p bigint, ds_medicos_p text, ds_partic_p text, nm_usuario_p text, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_conta_princ_p bigint, ie_comitar_p text, nr_seq_grupo_atual_p bigint, tx_item_p bigint, vl_total_apres_p bigint, vl_taxa_servico_imp_p bigint, vl_taxa_co_imp_p bigint, vl_taxa_material_imp_p bigint, vl_taxa_mat_material_imp_p bigint, cd_procedimento_imp_p bigint, ds_procedimento_imp_p text, tx_intercambio_imp_p bigint, nr_seq_conta_ant_p bigint, nr_seq_item_criado_P INOUT bigint) FROM PUBLIC;

