-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_dif_saldo_lote_consig ( dt_mesano_referencia_p timestamp) AS $body$
DECLARE


cd_estabelecimento_w		smallint	:= 0;
cd_local_estoque_w		smallint	:= 0;
cd_material_estoque_w		integer	:= 0;
cd_operacao_estoque_w		smallint	:= 0;
ie_entrada_saida_w			varchar(1);
qt_estoque_w			double precision;
dt_mesano_referencia_w		timestamp;
dt_mesano_anterior_w		timestamp;
qt_entrada_w			double precision;
qt_saida_w			double precision;
qt_saldo_estoque_w		double precision;
qt_saldo_anterior_w			double precision;
qt_dif_w				double precision;
ds_retorno_w			varchar(40);
nr_seq_lote_w			bigint;

c00 CURSOR FOR
SELECT	distinct
	a.cd_estabelecimento,
	a.cd_material_estoque,
	a.cd_local_estoque,
	a.nr_seq_lote_fornec
from	material b,
	movimento_estoque a
where	a.dt_mesano_referencia 	= dt_mesano_referencia_w
and	a.cd_material_estoque	= b.cd_material
and	b.ie_consignado = 1
and	(a.nr_seq_lote_fornec IS NOT NULL AND a.nr_seq_lote_fornec::text <> '')
and (substr(obter_se_material_estoque_lote(a.cd_estabelecimento, a.cd_material_estoque),1,1) = 'S')

union

select	distinct
	a.cd_estabelecimento,
	a.cd_material,
	a.cd_local_estoque,
	a.nr_seq_lote
from	material b,
	fornecedor_mat_consig_lote a
where	a.dt_mesano_referencia	= dt_mesano_referencia_w
and	a.cd_material		= b.cd_material
and	b.ie_consignado 		= 1
and	(a.nr_seq_lote IS NOT NULL AND a.nr_seq_lote::text <> '')
and (substr(obter_se_material_estoque_lote(a.cd_estabelecimento, a.cd_material),1,1) = 'S');

c01 CURSOR FOR
SELECT	CASE WHEN a.cd_acao=1 THEN a.qt_estoque  ELSE a.qt_estoque * -1 END ,
	a.cd_operacao_estoque,
	b.ie_entrada_saida
from	operacao_estoque b,
	movimento_estoque a
where	a.dt_mesano_referencia	= dt_mesano_referencia_w
and	a.cd_material_estoque	= cd_material_estoque_w
and	a.cd_local_estoque		= cd_local_estoque_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.nr_seq_lote_fornec	= nr_seq_lote_w
and	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and	(b.ie_consignado IS NOT NULL AND b.ie_consignado::text <> '')
and	b.ie_consignado in (2,3,4,5,6,7)
and (substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_estoque_w),1,1) = 'S');


BEGIN
dt_mesano_referencia_w	:= trunc(dt_mesano_referencia_p,'month');
dt_mesano_anterior_w  	:= add_months(dt_mesano_referencia_w, -1);
ds_retorno_w := obter_valor_dinamico('Truncate table w_saldo_estoque', ds_retorno_w);

open c00;
loop
	begin
	fetch c00 into
		cd_estabelecimento_w,
		cd_material_estoque_w,
		cd_local_estoque_w,
		nr_seq_lote_w;
	EXIT WHEN NOT FOUND; /* apply on c00 */
        	begin
		qt_entrada_w	:= 0;
		qt_saida_w	:= 0;
		begin
		select	qt_estoque
		into STRICT	qt_saldo_estoque_w
		from	fornecedor_mat_consig_lote
		where	cd_estabelecimento	 	= cd_estabelecimento_w
		and	cd_local_estoque		= cd_local_estoque_w
		and	cd_material		= cd_material_estoque_w
		and	dt_mesano_referencia	= dt_mesano_referencia_w
		and	nr_seq_lote		= nr_seq_lote_w
		and (substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_estoque_w),1,1) = 'S');
		exception
			when others	 then
				qt_saldo_estoque_w	:= 0;
		end;

		begin
		select	qt_estoque
		into STRICT	qt_saldo_anterior_w
		from	fornecedor_mat_consig_lote
		where	cd_estabelecimento		= cd_estabelecimento_w
		and	cd_local_estoque		= cd_local_estoque_w
		and	cd_material		= cd_material_estoque_w
		and	dt_mesano_referencia	= dt_mesano_anterior_w
		and	nr_seq_lote		= nr_seq_lote_w
		and (substr(obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_estoque_w),1,1) = 'S');
		exception
			when others	 then
				qt_saldo_anterior_w	:= 0;
		end;

		open c01;
		loop
		fetch c01 into
			qt_estoque_w,
			cd_operacao_estoque_w,
			ie_entrada_saida_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
       		begin
			if (ie_entrada_saida_w = 'S') then
				qt_saida_w	:= qt_saida_w + qt_estoque_w;
			else
				qt_entrada_w	:= qt_entrada_w + qt_estoque_w;
			end if;
			end;
		end loop;
		close c01;

		qt_dif_w	:=  	qt_saldo_estoque_w -
					(qt_saldo_anterior_w + qt_entrada_w - qt_saida_w);
		if (qt_dif_w <> 0) then
			begin
			update	fornecedor_mat_consig_lote
			set	qt_estoque = qt_estoque - qt_dif_w
			where	cd_estabelecimento		= cd_estabelecimento_w
           			and	cd_local_estoque 		= cd_local_estoque_w
           			and	cd_material           		= cd_material_estoque_w
           			and	dt_mesano_referencia  	= dt_mesano_referencia_w
			and	nr_seq_lote		= nr_seq_lote_w;
			end;
		end if;
		end;
	end;
end loop;
close c00;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_dif_saldo_lote_consig ( dt_mesano_referencia_p timestamp) FROM PUBLIC;

