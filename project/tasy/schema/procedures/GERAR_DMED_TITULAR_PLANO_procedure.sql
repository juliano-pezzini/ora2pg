-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dmed_titular_plano ( nr_seq_dmed_p text, nm_usuario_p text, cd_estabelecimento_p text) AS $body$
DECLARE


vl_total_w		double precision;
nr_seq_titular_w		bigint;
cd_pessoa_fisica_w	varchar(14);
dt_ano_calendario_w	varchar(5);
nr_cpf_w			varchar(14);
nr_sequencia_w		bigint;
nr_sequencia_tit_w		bigint;
conta_w			numeric(20);
nr_seq_pagador_w		bigint;
idade_w			varchar(5) := '18';
ie_cpf_w			varchar(2);

C01 CURSOR FOR
SELECT	z.nr_cpf,
	z.cd_pessoa_fisica,
	sum(z.vl_mensalidade)
from
	(select	c.nr_cpf nr_cpf,
		a.nr_sequencia nr_seq_titular, --titular
		null nr_seq_pagador, --pagador
		c.cd_pessoa_fisica cd_pessoa_fisica,
		sum(d.vl_item) vl_mensalidade
	from	pls_mensalidade_segurado e,
		pessoa_fisica c,
		pls_segurado a,
		pls_mensalidade_seg_item d,
		pls_plano b
	where   a.cd_pessoa_fisica = c.cd_pessoa_fisica
	and     a.nr_sequencia = e.nr_seq_segurado
	and	e.nr_Sequencia = d.nr_seq_mensalidade_seg
	and	a.nr_seq_plano = b.nr_sequencia
	and	obter_Se_titulo_pago(e.nr_seq_mensalidade, dt_ano_calendario_w) = 'S'
	and	b.ie_tipo_contratacao in ('I','CA')
	and     coalesce(a.nr_seq_titular::text, '') = ''
	and	d.ie_tipo_item in (	select ie_tipo_item
					from   dmed_regra_tipo_item)
	and	obter_idade(c.dt_nascimento, clock_timestamp(), 'A') 	>= idade_w
	and 	(to_char(e.dt_mesano_referencia,'yyyy') = dt_ano_calendario_w
	or	to_char(e.dt_mesano_referencia,'yyyy') = (dt_ano_calendario_w - 1))
	and	(to_char(a.dt_contratacao,'yyyy'))::numeric  <= (dt_ano_calendario_w)::numeric
	and	((to_char(a.dt_rescisao,'yyyy') = dt_ano_calendario_w)
	or (coalesce(a.dt_rescisao::text, '') = ''))
	and	(((ie_cpf_w = 'SC') and ( coalesce(c.nr_cpf::text, '') = ''))
	or	( ie_cpf_w = 'CC' AND c.nr_cpf IS NOT NULL AND c.nr_cpf::text <> '')
	or (ie_cpf_w = 'AM'))
	and  	((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento))
	or   	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = '')))
	group by  c.cd_pessoa_fisica, c.nr_cpf, a.nr_sequencia
	
union all

  	SELECT	c.nr_cpf nr_cpf,
		a.nr_sequencia nr_seq_titular,
		f.nr_sequencia nr_seq_pagador,
		c.cd_pessoa_fisica cd_pessoa_fisica,
		sum(d.vl_item) vl_mensalidade
	from	pls_segurado a,
    		pls_segurado f,
    		pessoa_fisica c,
		pessoa_fisica p,
    		pls_plano b,
    		pls_mensalidade_segurado e,
		pls_mensalidade_seg_item d
	where	a.nr_seq_pagador = f.nr_Sequencia
  	and	a.cd_pessoa_fisica = c.cd_pessoa_fisica
	and	a.nr_seq_plano = b.nr_sequencia
	and	p.cd_pessoa_fisica = a.cd_pessoa_fisica
  	and  	a.nr_sequencia = e.nr_seq_segurado
	and	e.nr_Sequencia = d.nr_seq_mensalidade_seg
	and	b.ie_tipo_contratacao in ('I','CA')
	and   	coalesce(a.nr_seq_titular::text, '') = ''
	and	((to_char(a.dt_rescisao,'yyyy') = dt_ano_calendario_w)
	or (coalesce(a.dt_rescisao::text, '') = ''))
	and	d.ie_tipo_item in (	select ie_tipo_item
					from   dmed_regra_tipo_item)
	and	(to_char(a.dt_contratacao,'yyyy'))::numeric  <= (dt_ano_calendario_w)::numeric 
	and	(((ie_cpf_w = 'SC') and ( coalesce(c.nr_cpf::text, '') = ''))
	or	( ie_cpf_w = 'CC' AND c.nr_cpf IS NOT NULL AND c.nr_cpf::text <> '')
	or (ie_cpf_w = 'AM'))
	and	obter_idade(p.dt_nascimento, clock_timestamp(), 'A') < idade_w
	and   	to_char(e.dt_mesano_referencia,'yyyy') = dt_ano_calendario_w
	and  	((a.cd_estabelecimento = coalesce( cd_estabelecimento_p ,a.cd_estabelecimento))
	or   	((coalesce(a.cd_estabelecimento::text, '') = '') and (coalesce(cd_estabelecimento_p::text, '') = '')))
	group by	c.cd_pessoa_fisica, c.nr_cpf, a.nr_sequencia, f.nr_sequencia) z
group by	z.nr_cpf,
         	z.cd_pessoa_fisica;


BEGIN
	select 	to_char(dt_ano_calendario),
		coalesce(ie_cpf, 'AM')
	into STRICT	dt_ano_calendario_w,
		ie_cpf_w
	from	dmed
	where	nr_sequencia = nr_seq_dmed_p;

	select	count(*)
	into STRICT	conta_w
	from	dmed_ops_titular_plano;

	if (conta_w > 0) then
		begin
		delete 	from dmed_ops_reembolso
		where	nr_seq_titular 	in (	SELECT 	nr_sequencia
					from 	dmed_ops_titular_plano
					where	nr_seq_dmed = nr_seq_dmed_p)
	or 	nr_seq_dependente 	in (	select	nr_sequencia
					from	dmed_ops_depend_titular
					where	nr_seq_dmed_titular in (select 	nr_sequencia
								     from 	dmed_ops_titular_plano
								     where	nr_seq_dmed = nr_seq_dmed_p));
		delete 	from dmed_ops_depend_titular
		where	nr_seq_dmed_titular in (SELECT 	nr_sequencia
					    from 	dmed_ops_titular_plano
					    where	nr_seq_dmed = nr_seq_dmed_p);
		delete 	from dmed_ops_titular_plano
		where	nr_seq_dmed = nr_seq_dmed_p;
		end;
	end if;

open C01;
loop
fetch C01 into
	nr_cpf_w,
	cd_pessoa_fisica_w,
	vl_total_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('dmed_ops_titular_plano_seq')
	into STRICT	nr_sequencia_w
	;

	Insert into dmed_ops_titular_plano(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						vl_pago_ano,
						nr_seq_dmed,
						nr_seq_segurado)
				values (		nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_fisica_w,
						vl_total_w,
						nr_seq_dmed_p,
						null);

	CALL gerar_dmed_dependente_titular(	nr_sequencia_w,
					cd_pessoa_fisica_w,
					null,
					nr_seq_dmed_p,
					nm_usuario_p,
					cd_estabelecimento_p);

	CALL gerar_dmed_reembolso_titular(	nr_sequencia_w,
					cd_pessoa_fisica_w,
					nr_seq_dmed_p,
					nm_usuario_p,
					cd_estabelecimento_p);

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dmed_titular_plano ( nr_seq_dmed_p text, nm_usuario_p text, cd_estabelecimento_p text) FROM PUBLIC;

