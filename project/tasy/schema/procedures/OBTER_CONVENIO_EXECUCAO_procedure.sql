-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_convenio_execucao ( nr_atendimento_p bigint, dt_execucao_p timestamp, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, nr_doc_convenio_p INOUT text, ie_tipo_guia_p INOUT text, cd_senha_p INOUT text) AS $body$
DECLARE


ie_doc_convenio_w		varchar(3);
cd_senha_w				varchar(20);
cd_estabelecimento_w	smallint;
nr_seq_interno_categ_w	atend_categoria_convenio.nr_seq_interno%type;

C01 CURSOR FOR
	SELECT	coalesce(cd_convenio,0),
			cd_categoria,
			nr_doc_convenio,
			ie_tipo_guia,
			cd_senha
	from 	Atend_Categoria_convenio
	where	nr_atendimento	= nr_atendimento_p
	and		nr_seq_interno	= nr_seq_interno_categ_w
	order by cd_convenio;



BEGIN

cd_convenio_p	:= 0;

select	max(nr_seq_interno)
into STRICT	nr_seq_interno_categ_w
from 	atend_categoria_convenio
where 	nr_atendimento	= nr_atendimento_p
and		dt_inicio_vigencia	<= dt_execucao_p
and		coalesce(dt_final_vigencia,dt_execucao_p) >= dt_execucao_p;

if (nr_seq_interno_categ_w IS NOT NULL AND nr_seq_interno_categ_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		cd_convenio_p,
		cd_categoria_p,
		nr_doc_convenio_p,
		ie_tipo_guia_p,
		cd_senha_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
end if;

if (coalesce(cd_convenio_p,0) = 0) then
	select	coalesce(max(cd_convenio),0),
			max(cd_categoria),
			max(nr_doc_convenio),
			max(ie_tipo_guia),
			max(cd_senha)
	into STRICT		cd_convenio_p,
			cd_categoria_p,
			nr_doc_convenio_p,
			ie_tipo_guia_p,
			cd_senha_w
	from 	Atend_Categoria_convenio
	where	nr_atendimento	= nr_atendimento_p
	  and	nr_seq_interno	=
		(SELECT max(nr_seq_interno)
		from atend_categoria_convenio
		where nr_atendimento		= nr_atendimento_p
		  and	dt_inicio_vigencia	<= dt_execucao_p);
end if;

if (cd_convenio_p = 0) or (coalesce(cd_categoria_p::text, '') = '') then
	/*r.aise_application_error(-20011, 'Não foi encontrado convênio para esta execução.' || to_char(dt_execucao_p,'dd/mm/yyyy hh24:mi:ss') || chr(10) ||
					'Verifique se existe convênio cadastrado para est e atendimento' || chr(10) ||
					' ou se a data de entrada é menor que o início de vigência da guia na tela de Entrada Única de Pacientes !#@#@');*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(263417,'dt_execucao_w='||PKG_DATE_FORMATERS.to_varchar(dt_execucao_p, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO));
end if;

select	coalesce(max(cd_estabelecimento),1)
into STRICT	cd_estabelecimento_w
from	atendimento_paciente
where 	nr_atendimento	= nr_atendimento_p;

ie_doc_convenio_w	:= Obter_Valor_Conv_Estab(cd_convenio_p, cd_estabelecimento_w, 'IE_DOC_CONVENIO');

if (ie_doc_convenio_w = 'S') then
	nr_doc_convenio_p := coalesce(cd_senha_w, nr_doc_convenio_p);
elsif (ie_doc_convenio_w in ('N','T')) then  -- Edgar 30/07/2007, OS 64191, tratar regra guia tiss
	nr_doc_convenio_p := null;
end if;

if (ie_doc_convenio_w	<> 'A') then
	cd_senha_w		:= null;
end if;

cd_senha_p			:= cd_senha_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_convenio_execucao ( nr_atendimento_p bigint, dt_execucao_p timestamp, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, nr_doc_convenio_p INOUT text, ie_tipo_guia_p INOUT text, cd_senha_p INOUT text) FROM PUBLIC;

