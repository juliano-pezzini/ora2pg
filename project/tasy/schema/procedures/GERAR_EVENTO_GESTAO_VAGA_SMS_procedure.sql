-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_gestao_vaga_sms ( cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_gv_p bigint, nm_paciente_p text) AS $body$
DECLARE

nr_seq_evento_w		bigint;
qt_idade_w		  bigint;
cd_convenio_gv_w	bigint;
qt_regra_gv_w		bigint;
ie_permite_w		varchar(1) := 'N';

ie_status_w 		varchar(15);
ie_tipo_vaga_w		varchar(15);
ie_solicitacao_w	varchar(15);
cd_setor_atual_w	bigint;
cd_tipo_acomod_desej_w	bigint;
cd_setor_desejado_w	bigint;
nr_seq_status_pac_w	bigint;
nr_sequencia_w		bigint;
c01 CURSOR FOR
	SELECT	nr_seq_evento, 
		nr_sequencia 
	from	regra_envio_sms 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_evento_disp		= 'ACPA' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and (obter_se_convenio_rec_alerta(cd_convenio_gv_w, nr_sequencia) = 'S') 
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_p),0)) = 'S') 
	and	coalesce(ie_situacao,'A') = 'A';
	
	 

BEGIN 
 
select	coalesce(cd_convenio,0), 
	coalesce(ie_tipo_vaga,'X'), 
	coalesce(ie_status,'X'), 
	coalesce(ie_solicitacao,'X'), 
	coalesce(cd_setor_atual,0), 
	coalesce(cd_setor_desejado,0), 
	coalesce(cd_tipo_acomod_desej,0), 
	coalesce(nr_seq_status_pac,0) 
into STRICT	cd_convenio_gv_w, 
	ie_tipo_vaga_w, 
	ie_status_w, 
	ie_solicitacao_w, 
	cd_setor_atual_w, 
	cd_setor_desejado_w, 
	cd_tipo_acomod_desej_w, 
	nr_seq_status_pac_w 
from	gestao_vaga 
where	nr_sequencia = nr_seq_gv_p;
 
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') OR (nm_paciente_p IS NOT NULL AND nm_paciente_p::text <> '') then 
	qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_p,clock_timestamp(),'A'),0);
	open c01;
	loop 
	fetch c01 into 
		nr_seq_evento_w, 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin		 
		 
		select	count(*) 
		into STRICT	qt_regra_gv_w 
		from	regra_envio_sms_gv 
		where	nr_seq_regra = nr_sequencia_w;
		 
		if (qt_regra_gv_w = 0) and ((ie_tipo_vaga_w = 'C') or (ie_tipo_vaga_w = 'CG')) then 
		 
			CALL gerar_evento_paciente(nr_seq_evento_w,null,cd_pessoa_fisica_p,null,nm_usuario_p,null,null,null,null,null,null,nr_seq_gv_p);
			 
		elsif (qt_regra_gv_w > 0) then 
			 
			select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_permite_w 
			from	regra_envio_sms_gv 
			where	ie_situacao 						= 'A' 
			and	coalesce(ie_status, ie_status_w) 				= ie_status_w 
			and	coalesce(ie_solicitacao, ie_solicitacao_w)			= ie_solicitacao_w 
			and	coalesce(cd_setor_atual, cd_setor_atual_w)			= cd_setor_atual_w 
			and	coalesce(cd_tipo_acomod_desej, cd_tipo_acomod_desej_w)	= cd_tipo_acomod_desej_w 
			and	coalesce(cd_setor_desejado, cd_setor_desejado_w)		= cd_setor_desejado_w 
			and	coalesce(ie_tipo_vaga, ie_tipo_vaga_w)			= ie_tipo_vaga_w 
			and	coalesce(nr_seq_status_pac, nr_seq_status_pac_w)		= nr_seq_status_pac_w 
			and	nr_seq_regra 						= nr_sequencia_w;
			 
			if (ie_permite_w = 'S') then				 
				 
				CALL gerar_evento_paciente(nr_seq_evento_w,null,cd_pessoa_fisica_p,null,nm_usuario_p,null,null,null,null,null,null,nr_seq_gv_p);				
				 
			end if;
		end if;
		 
		end;
	end loop;
	close c01;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_gestao_vaga_sms ( cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_gv_p bigint, nm_paciente_p text) FROM PUBLIC;

