-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescr_proc_pre_venda ( nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE

					
cd_procedimento_w	procedimento.cd_procedimento%type;
ie_origem_proced_w	procedimento.ie_origem_proced%type;
nr_atendimento_w		prescr_medica.nr_atendimento%type;
nr_seq_proc_interno_w	proc_interno.nr_sequencia%type;
nr_seq_prevenda_item_w	pre_venda_item.nr_sequencia%type;
nr_sequencia_w		prescr_procedimento.nr_sequencia%type;
nr_seq_interno_w		prescr_procedimento.nr_seq_interno%type;
dt_prev_execucao_w	prescr_medica.dt_inicio_prescr%type;
qt_proc_prescr_w		bigint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno
from	pre_venda_item
where	nr_atendimento = nr_atendimento_w
and 	coalesce(nr_prescricao::text, '') = '';


BEGIN
	
select 	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

open c01;
loop
fetch c01 into
	nr_seq_prevenda_item_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	/* Verificar se o procedimento selecionado já foi gerado na prescrição.*/

	select 	count(*)
	into STRICT	qt_proc_prescr_w
	from	prescr_procedimento
	where 	nr_prescricao = nr_prescricao_p
	and	cd_procedimento = cd_procedimento_w
	and	ie_origem_proced = ie_origem_proced_w;

	if (coalesce(qt_proc_prescr_w,0) = 0) then
		begin
		
		select	dt_inicio_prescr
		into STRICT	dt_prev_execucao_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p;

		select	nextval('prescr_procedimento_seq')
		into STRICT	nr_seq_interno_w
		;
					
		insert into prescr_procedimento(
			nr_seq_interno,
			nr_prescricao,
			nr_sequencia,
			cd_procedimento,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			ie_origem_proced,
			dt_prev_execucao,
			nr_seq_proc_interno,
			ie_suspenso,
			ds_observacao,
			ie_origem_inf)
		values (	nr_seq_interno_w,
			nr_prescricao_p,
			nr_sequencia_w,
			cd_procedimento_w,
			1,
			clock_timestamp(), 
			nm_usuario_p, 
			ie_origem_proced_w,
			dt_prev_execucao_w,
			nr_seq_proc_interno_w,
			'N',
			obter_desc_expressao(937954),
			'1');
			
		update	pre_venda_item
		set	nr_prescricao = nr_prescricao_p,
			nr_seq_interno = nr_seq_interno_w
		where 	nr_sequencia = nr_seq_prevenda_item_w;

		CALL intpd_enviar_atendimento(nr_atendimento_w, 'A', '0', nm_usuario_p);

		end;
	end if;

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescr_proc_pre_venda ( nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

