-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_calc_hor_enteral_md (( dt_inicio_p timestamp, ie_continuo_p text, cd_intervalo_p text, qt_tempo_aplicacao_p bigint, qt_tempo_etapa_p bigint, hr_inicio_pausa_p text, dt_fim_p timestamp, ie_present_desc_stage_p text, nr_ocorrencia_p INOUT bigint, ds_horarios_p out text, nr_interv_ocor_p bigint ) is dt_horario_w timestamp DEFAULT dt_inicio_p) AS $body$
BEGIN
    if (coalesce(qt_tempo_etapa_w, 0) <= 0) then
      nr_ocorrencia_p := 0;
      ds_horarios_p	:= null;
      return;
    end if;
	return;
  end;

begin
  if (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '') then

    if (coalesce(cd_intervalo_p, 'null') <> 'null') then
      nr_ocorrencia_p := nr_interv_ocor_p;
    end if;

    if (ie_continuo_p = 'S') then
      qt_tempo_etapa_w := 0;
    else
      qt_tempo_etapa_w := coalesce(qt_tempo_etapa_p, 0);
    end if;

    if (qt_tempo_etapa_w = 0) then
      qt_tempo_etapa_w := qt_tempo_aplicacao_w;
    end if;

    if (hr_inicio_pausa_p IS NOT NULL AND hr_inicio_pausa_p::text <> '') then
      dt_hora_pausa_w	 := trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_p, coalesce(hr_inicio_pausa_p,'00:00')), 'mi');
      qt_tempo_pausa_ww := 24 - qt_tempo_etapa_w;
      if (dt_hora_pausa_w < clock_timestamp()) then
        dt_hora_pausa_w := dt_hora_pausa_w + 1;
      end if;
    end if;

    if (ie_continuo_p = 'N') then
      qt_tempo_aplicacao_w := 24;
      qt_tempo_pausa_w := dividir_sem_round_md(qt_tempo_aplicacao_w - (qt_tempo_etapa_w * coalesce(nr_ocorrencia_p, 0)), coalesce(nr_ocorrencia_p, 0));
      if (qt_tempo_pausa_w < 0) then
        qt_tempo_pausa_w := 1;
      end if;
    else
      qt_tempo_pausa_w := 0;
    end if;

    if (not Possivel_calcular) then
      return;
    end if;

    if (coalesce(dt_fim_w::text, '') = '') then
      if ((ie_continuo_p = 'S') and (qt_tempo_aplicacao_w < 24) and (ie_param_CPOE_24_w = 'S')) then
        if (hr_inicio_pausa_p IS NOT NULL AND hr_inicio_pausa_p::text <> '') then
          dt_fim_w := dt_inicio_p + 1;
        else
          qt_duracao_aux_w := ceil(dividir_md(24, qt_tempo_aplicacao_w)) * qt_tempo_aplicacao_w;
          dt_fim_w := dt_inicio_p + abs(dividir_sem_round_md(qt_duracao_aux_w, 24));				
        end if;
      else
        dt_fim_w := dt_inicio_p + abs(dividir_sem_round_md(qt_tempo_aplicacao_w, 24));
      end if;
    end if;

    if ((dt_fim_w - dt_inicio_p) > 1) and ((ie_continuo_p = 'N') or (ie_continuo_p = 'S' AND ie_param_CPOE_24_w = 'N')) then
      dt_fim_w := dt_inicio_p + 1;
    end if;

    if (to_char(dt_fim_w + 1/24/60, 'hh24:mi') = to_char(dt_inicio_p, 'hh24:mi')) then
      dt_fim_w := dt_fim_w + 1/24/60;
    end if;

    if (qt_tempo_etapa_w <> trunc(qt_tempo_etapa_w)) or (to_char(dt_inicio_p,'mi') <> '00') or (to_char(dt_fim_w,'mi') <> '00') then
      ds_mascara_hora_w := 'hh24:mi';
    end if;

    nr_ocorrencia_p := 0;
    dt_horario_w := dt_inicio_p;

    if (dt_hora_pausa_w IS NOT NULL AND dt_hora_pausa_w::text <> '') and (dt_hora_pausa_w > dt_horario_w) and (ie_continuo_p = 'S') then
	
      while(dt_horario_w < dt_fim_w) loop

        dt_horario_fim_w := dt_horario_w + dividir_sem_round_md(qt_tempo_etapa_w, 24);
        nr_ocorrencia_p := nr_ocorrencia_p + 1;

        if (dt_horario_fim_w > dt_hora_pausa_w) and (dt_hora_pausa_w > dt_horario_w) then
          dt_horario_fim_w := dt_hora_pausa_w;
          dt_fim_w := dt_fim_w + abs(dividir_sem_round_md(qt_tempo_pausa_ww, 24));
          qt_tempo_etapa_ger_w := Obter_Hora_Entre_datas(dt_horario_w, dt_hora_pausa_w);
          qt_tempo_etapa_w := qt_tempo_etapa_w - qt_tempo_etapa_ger_w;
          qt_tempo_pausa_w := qt_tempo_pausa_ww;
        end if;

        if (dt_horario_fim_w > dt_fim_w) then
          dt_horario_fim_w := trunc(dt_fim_w, 'mi');
          dt_fim_w := dt_horario_fim_w;
        end if;

        if (ie_present_desc_stage_p = 'N') then
          ds_horarios_p := substr(ds_horarios_p || to_char(dt_horario_w, ds_mascara_hora_w) || ' ',1,2000);
        else
          ds_horarios_p  := substr(ds_horarios_p ||
                                   replace(ds_etapa_w, '#@NR_PRIM_HOR#@', to_char(dt_horario_w, ds_mascara_hora_w)) || ' ' ||
                                   to_char(dt_horario_fim_w, ds_mascara_hora_w) || '; ',1,2000);
        end if;

        dt_horario_w := dt_horario_fim_w + dividir_sem_round_md(qt_tempo_pausa_w, 24);

        if (nr_ocorrencia_p > 48) then
          return;
        end if;
      end loop;
    else

      while(dt_horario_w < dt_fim_w) loop

        dt_horario_fim_w := dt_horario_w + dividir_sem_round_md(qt_tempo_etapa_w,24);
        nr_ocorrencia_p := nr_ocorrencia_p + 1;

        if (dt_horario_fim_w > dt_fim_w) then
          dt_horario_fim_w := trunc(dt_fim_w, 'mi');
          dt_fim_w := dt_horario_fim_w;
        end if;

        if (ie_present_desc_stage_p = 'N') then
          ds_horarios_p := substr(ds_horarios_p || to_char(dt_horario_w,ds_mascara_hora_w) || ' ',1,2000);
        else
          ds_horarios_p := substr(ds_horarios_p || replace(ds_etapa_w,'#@NR_PRIM_HOR#@', to_char(dt_horario_w, ds_mascara_hora_w))
                            || ' ' || to_char(dt_horario_fim_w, ds_mascara_hora_w) || '; ',1,2000);
        end if;

        dt_horario_w := dt_horario_fim_w + dividir_sem_round_md(qt_tempo_pausa_w, 24);

        if (nr_ocorrencia_p > 48) then
          return;
        end if;
      end loop;
    end if;
  end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_calc_hor_enteral_md (( dt_inicio_p timestamp, ie_continuo_p text, cd_intervalo_p text, qt_tempo_aplicacao_p bigint, qt_tempo_etapa_p bigint, hr_inicio_pausa_p text, dt_fim_p timestamp, ie_present_desc_stage_p text, nr_ocorrencia_p INOUT bigint, ds_horarios_p out text, nr_interv_ocor_p bigint ) is dt_horario_w timestamp DEFAULT dt_inicio_p) FROM PUBLIC;

