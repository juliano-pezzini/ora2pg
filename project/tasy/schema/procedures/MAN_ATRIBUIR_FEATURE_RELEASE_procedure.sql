-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_atribuir_feature_release ( nr_feature_p bigint, nr_release_p bigint, nr_release_atual_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_release_planejado_w	desenv_release.nr_sequencia%type;
dt_release_planejado_w	desenv_release.dt_inicial%type;
dt_release_final_plan_w	desenv_release.dt_final%type;
dt_final_w		desenv_release.dt_final%type;
qt_existe_w		bigint;
qt_stories_release_w	bigint;


BEGIN

select	max(dt_final)
into STRICT	dt_final_w
from	desenv_release
where	nr_sequencia = nr_release_p;

if (dt_final_w < clock_timestamp()) then
	ds_erro_p := wheb_mensagem_pck.get_texto(336102); --Este PI já terminou.
	return;
end if;

select	count(*)
into STRICT	qt_existe_w
from	desenv_feature_release a,
	desenv_release b
where	nr_feature = nr_feature_p
and	a.nr_release = b.nr_sequencia
and	((nr_release_p = a.nr_release) or (not clock_timestamp() between b.dt_inicial and b.dt_final))
and	b.dt_final > clock_timestamp()
and	coalesce(nr_release,0) <> coalesce(nr_release_atual_p,0);

if (qt_existe_w > 0) then
	ds_erro_p := wheb_mensagem_pck.get_texto(336103); --Esta Feature já foi planejada..
	return;
end if;

select	max(a.nr_release),
	max(b.dt_inicial),
	max(b.dt_final)
into STRICT	nr_release_planejado_w,
	dt_release_planejado_w,
	dt_release_final_plan_w
from	desenv_feature_release a,
	desenv_release b
where	a.nr_release = b.nr_sequencia
and	a.nr_feature = nr_feature_p
and	b.nr_sequencia = nr_release_atual_p;

select	count(*)
into STRICT	qt_stories_release_w
from	desenv_story_sprint a,
	desenv_sprint b,
	desenv_story c
where	b.nr_release = nr_release_atual_p
and	a.nr_story = c.nr_sequencia
and	c.nr_feature = nr_feature_p
and	(a.nr_sprint IS NOT NULL AND a.nr_sprint::text <> '');

if (dt_release_planejado_w > clock_timestamp()) or
	(dt_release_planejado_w IS NOT NULL AND dt_release_planejado_w::text <> '' AND qt_stories_release_w = 0) then
	update	desenv_feature_release
	set	nr_release = nr_release_p
	where	nr_release = nr_release_planejado_w
	and	nr_feature = nr_feature_p;
else
	delete	from desenv_feature_release
	where	nr_feature = nr_feature_p
	and	coalesce(nr_release::text, '') = '';
	insert	into desenv_feature_release(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_feature,
		nr_release)
	values (	nextval('desenv_story_sprint_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_feature_p,
		nr_release_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_atribuir_feature_release ( nr_feature_p bigint, nr_release_p bigint, nr_release_atual_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

