-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_vacinacao_periodo ( dt_inicial_p timestamp, dt_final_p timestamp, ds_profissionais_p text, nm_usuario_p text) AS $body$
DECLARE


cd_profissional_w				esus_vacinacao.cd_profissional%type;
ds_profissionais_w				varchar(4000);
ie_pos_virgula_w				smallint;

cd_pessoa_fisica_w              esus_vacinacao.cd_pessoa_fisica%type;
nr_atendimento_w                esus_vacinacao.nr_atendimento%type;
ie_gestante_w                   esus_vacinacao.ie_gestante%type;
cd_cbo_w                        esus_vacinacao.cd_cbo_profissional%type;
nr_cnes_equipe_w                esus_vacinacao.cd_cnes_unidade%type;
nr_seq_equipe_w                 esus_vacinacao.nr_seq_sus_equipe%type;
nr_seq_vacinacao_w              esus_vacinacao.nr_sequencia%type;
nr_seq_vacina_w                 esus_regra_vacina.nr_seq_vacina%type;
ie_dose_w                       esus_vacinacao_item.cd_dose%type;
ds_lote_w                       esus_vacinacao_item.ds_lote_vacina%type;
ds_fabricante_w                 esus_vacinacao_item.ds_fabricante%type;
cd_vacina_esus_w                esus_vacinacao_item.cd_imunobiologico%type;

c01 CURSOR FOR
    SELECT	cd_pessoa_fisica,
            max(nr_atendimento),
            max(ie_gestante)
    from	paciente_vacina
    where	cd_pessoa_aplicacao = cd_profissional_w
    and		dt_vacina between dt_inicial_p and dt_final_p
    and		ie_executado = 'S'
    and		coalesce(dt_cancelamento::text, '') = ''
    and		coalesce(dt_inativacao::text, '') = ''
    group by cd_pessoa_fisica;

c02 CURSOR FOR
    SELECT	nr_seq_vacina,
            CASE WHEN ie_dose='1D' THEN  'D1' WHEN ie_dose='1R' THEN  'R1' WHEN ie_dose='2D' THEN  'D2' WHEN ie_dose='2R' THEN  'R2' WHEN ie_dose='3D' THEN  'D3'  ELSE ie_dose END ,
            ds_lote,
            ds_fabricante
    from	paciente_vacina
    where	cd_pessoa_aplicacao = cd_profissional_w
    and		dt_vacina between dt_inicial_p and dt_final_p
    and     cd_pessoa_fisica = cd_pessoa_fisica_w
    and		ie_executado = 'S'
    and		coalesce(dt_cancelamento::text, '') = ''
    and		coalesce(dt_inativacao::text, '') = '';


BEGIN

    if (ds_profissionais_p IS NOT NULL AND ds_profissionais_p::text <> '') then
        ds_profissionais_w := ds_profissionais_p;

        while (ds_profissionais_w IS NOT NULL AND ds_profissionais_w::text <> '') loop
            ie_pos_virgula_w := position(',' in ds_profissionais_w);

            if (ie_pos_virgula_w <> 0) then
                cd_profissional_w := substr(ds_profissionais_w, 1, (ie_pos_virgula_w - 1));
            else
                cd_profissional_w := ds_profissionais_w;
            end if;

            ds_profissionais_w := substr(ds_profissionais_w, (ie_pos_virgula_w + 1), length(ds_profissionais_w));

            open c01;
            loop
            fetch c01 into
                cd_pessoa_fisica_w,
                nr_atendimento_w,
                ie_gestante_w;
            EXIT WHEN NOT FOUND; /* apply on c01 */

                select  max(b.nr_sequencia),
                        max(a.cd_cbo),
                        max(a.nr_cnes_equipe)
                into STRICT    nr_seq_equipe_w,
                        cd_cbo_w,
                        nr_cnes_equipe_w
                from	sus_profissional_equipe a,
                        sus_equipe b
                where	a.nr_seq_equipe_sus = b.nr_seq_equipe
                and		a.cd_municipio_equipe = b.cd_municipio_ibge
                and		a.nr_cnes_equipe = b.nr_cnes_equipe
                and		a.cd_pessoa_fisica = cd_profissional_w;

                select  nextval('esus_vacinacao_seq')
                into STRICT    nr_seq_vacinacao_w
;

                insert into esus_vacinacao(
                    nr_sequencia,
                    cd_estabelecimento,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    cd_profissional,
                    cd_pessoa_fisica,
                    cd_cbo_profissional,
                    cd_cnes_unidade,
                    nr_seq_sus_equipe,
                    nr_prontuario,
                    ie_local_atendimento,
                    dt_atendimento,
                    ie_gestante,
                    nr_atendimento,
                    dt_liberacao,
                    cd_pessoa_digitacao)
                values (
                    nr_seq_vacinacao_w,
                    obter_estabelecimento_ativo,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    cd_profissional_w,
                    cd_pessoa_fisica_w,
                    cd_cbo_w,
                    nr_cnes_equipe_w,
                    nr_seq_equipe_w,
                    obter_prontuario_atendimento(nr_atendimento_w),
                    '1',
                    obter_data_entrada(nr_atendimento_w),
                    ie_gestante_w,
                    nr_atendimento_w,
                    clock_timestamp(),
                    obter_pessoa_fisica_usuario(nm_usuario_p, 'C'));

                open c02;
                loop
                fetch c02 into
                    nr_seq_vacina_w,
                    ie_dose_w,
                    ds_lote_w,
                    ds_fabricante_w;
                EXIT WHEN NOT FOUND; /* apply on c02 */

                    select	max(cd_vacina_esus)
                    into STRICT    cd_vacina_esus_w
                    from	esus_regra_vacina
                    where	nr_seq_vacina = nr_seq_vacina_w
                    and		ie_situacao = 'A';

                    if (cd_vacina_esus_w IS NOT NULL AND cd_vacina_esus_w::text <> '') then
                        insert into esus_vacinacao_item(
                            nr_sequencia,
                            dt_atualizacao,
                            nm_usuario,
                            dt_atualizacao_nrec,
                            nm_usuario_nrec,
                            nr_seq_vacinacao,
                            cd_imunobiologico,
                            cd_dose,
                            ds_lote_vacina,
                            ds_fabricante)
                        values (
                            nextval('esus_vacinacao_item_seq'),
                            clock_timestamp(),
                            nm_usuario_p,
                            clock_timestamp(),
                            nm_usuario_p,
                            nr_seq_vacinacao_w,
                            cd_vacina_esus_w,
                            ie_dose_w,
                            ds_lote_w,
                            ds_fabricante_w);
                    end if;
                end loop;
                close c02;
            end loop;
            close c01;
        end loop;
    end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_vacinacao_periodo ( dt_inicial_p timestamp, dt_final_p timestamp, ds_profissionais_p text, nm_usuario_p text) FROM PUBLIC;

