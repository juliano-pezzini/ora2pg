-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_carencia_alt_prod ( nr_seq_segurado_p bigint, nr_seq_plano_novo_p bigint, nr_seq_plano_ant_p bigint, cd_estabelecimento_p bigint, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_tipo_carencia_w		bigint;
nr_seq_carencia_w		bigint;
qt_dias_w			integer;
qt_registros_w			bigint;
ie_mes_posterior_w		varchar(1);
dt_inclusao_operadora_w		timestamp;
nr_seq_grupo_carencia_w		bigint;
dt_inicio_vigencia_w		timestamp;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_tipo_carencia,
		a.qt_dias,
		a.ie_mes_posterior,
		a.nr_seq_grupo_carencia
	from	pls_carencia	a
	where	a.nr_seq_plano	= nr_seq_plano_ant_p
	and	exists	(	SELECT	1
				from	pls_carencia	x
				where	x.nr_seq_plano		= nr_seq_plano_novo_p
				and	((x.nr_seq_tipo_carencia	= a.nr_seq_tipo_carencia) or (x.nr_seq_grupo_carencia	= a.nr_seq_grupo_carencia))) /*Apenas copiar as carencias do produto anterior caso houver no antigo*/
	and	a.ie_cpt	= 'N'
	and	dt_inclusao_operadora_w between coalesce(a.dt_inicio_vig_plano,dt_inclusao_operadora_w) and coalesce(a.dt_fim_vig_plano,dt_inclusao_operadora_w);

c02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_carencia,
		qt_dias,
		ie_mes_posterior,
		nr_seq_grupo_carencia
	from	pls_carencia
	where	nr_seq_plano	= nr_seq_plano_novo_p
	and	ie_cpt	= 'N'
	and	dt_inclusao_operadora_w between coalesce(dt_inicio_vig_plano,dt_inclusao_operadora_w) and coalesce(dt_fim_vig_plano,dt_inclusao_operadora_w);


BEGIN

select	max(dt_inclusao_operadora)
into STRICT	dt_inclusao_operadora_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	dt_alteracao
into STRICT	dt_inicio_vigencia_w
from	pls_segurado_alt_plano
where	nr_seq_segurado	= nr_seq_segurado_p
and	nr_sequencia	=	(	SELECT	max(nr_sequencia)
					from 	pls_segurado_alt_plano 
					where 	nr_seq_segurado = nr_seq_segurado_p
					and	ie_situacao 	= 'A'
					and	trunc(dt_atualizacao) = trunc(clock_timestamp()));

open c01;
loop
fetch c01 into	
	nr_seq_carencia_w,
	nr_seq_tipo_carencia_w,
	qt_dias_w,
	ie_mes_posterior_w,
	nr_seq_grupo_carencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (nr_seq_tipo_carencia_w IS NOT NULL AND nr_seq_tipo_carencia_w::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_carencia
		where	nr_seq_segurado		= nr_seq_segurado_p
		and	nr_seq_tipo_carencia	= nr_seq_tipo_carencia_w;
	elsif (nr_seq_grupo_carencia_w IS NOT NULL AND nr_seq_grupo_carencia_w::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_carencia
		where	nr_seq_segurado		= nr_seq_segurado_p
		and	nr_seq_grupo_carencia	= nr_seq_grupo_carencia_w;
	end if;	

	if (pls_consistir_sexo_carencia(nr_seq_segurado_p,nr_seq_tipo_carencia_w) = 'S') then
		if (qt_registros_w = 0) then
			insert into pls_carencia(nr_sequencia, dt_atualizacao, nm_usuario, nr_seq_plano,
				nr_seq_contrato, nr_seq_tipo_carencia, nr_seq_segurado, qt_dias,
				dt_inicio_vigencia, ds_observacao, ie_mes_posterior,ie_origem_carencia_benef,
				nr_seq_grupo_carencia,ie_cpt)
			values (nextval('pls_carencia_seq'), clock_timestamp(), nm_usuario_p, null,
				null, nr_seq_tipo_carencia_w, nr_seq_segurado_p, qt_dias_w,
				dt_inclusao_operadora_w, wheb_mensagem_pck.get_texto(1108911), ie_mes_posterior_w,'P',
				nr_seq_grupo_carencia_w,'N');
		end if;
	end if;
	end;
end loop;
close c01;

open C02;
loop
fetch C02 into	
	nr_seq_carencia_w,
	nr_seq_tipo_carencia_w,
	qt_dias_w,
	ie_mes_posterior_w,
	nr_seq_grupo_carencia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	if (nr_seq_tipo_carencia_w IS NOT NULL AND nr_seq_tipo_carencia_w::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_carencia
		where	nr_seq_segurado		= nr_seq_segurado_p
		and	nr_seq_tipo_carencia	= nr_seq_tipo_carencia_w;
	elsif (nr_seq_grupo_carencia_w IS NOT NULL AND nr_seq_grupo_carencia_w::text <> '') then
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_carencia
		where	nr_seq_segurado		= nr_seq_segurado_p
		and	nr_seq_grupo_carencia	= nr_seq_grupo_carencia_w;
	end if;	

	if (pls_consistir_sexo_carencia(nr_seq_segurado_p,nr_seq_tipo_carencia_w) = 'S') then
		if (qt_registros_w = 0) then
			insert into pls_carencia(nr_sequencia, dt_atualizacao, nm_usuario, nr_seq_plano,
				nr_seq_contrato, nr_seq_tipo_carencia, nr_seq_segurado, qt_dias,
				dt_inicio_vigencia, ds_observacao, ie_mes_posterior,ie_origem_carencia_benef,
				nr_seq_grupo_carencia,ie_cpt)
			values (nextval('pls_carencia_seq'), clock_timestamp(), nm_usuario_p, null,
				null, nr_seq_tipo_carencia_w, nr_seq_segurado_p, qt_dias_w,
				dt_inicio_vigencia_w, wheb_mensagem_pck.get_texto(1108910), ie_mes_posterior_w,'P',
				nr_seq_grupo_carencia_w,'N');
		end if;
	end if;
	end;
end loop;
close C02;

if (coalesce(ie_commit_p,'N')	= 'S') then
	commit;
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_carencia_alt_prod ( nr_seq_segurado_p bigint, nr_seq_plano_novo_p bigint, nr_seq_plano_ant_p bigint, cd_estabelecimento_p bigint, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

