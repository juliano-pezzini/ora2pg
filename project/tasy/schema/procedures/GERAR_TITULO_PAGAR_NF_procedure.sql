-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_pagar_nf ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_saldo_tit_pagar_w			varchar(10);
ie_trib_atualiza_saldo_w		varchar(2);
vl_tributo_saldo_w			double precision;
vl_total_item_desc_w			double precision;
vl_total_item_w				double precision;
nr_seq_conta_bco_w			bigint;
pr_desc_financ_w			double precision;
qt_itens_nf_w				bigint;
cd_natureza_operacao_w			bigint;
cd_estab_financeiro_w 			smallint;
cd_estabelecimento_w			smallint;
cd_serie_nf_w				varchar(255);
ie_entrada_saida_w			varchar(255);
nr_nota_fiscal_w			varchar(255);
ie_moeda_w				varchar(255);
nr_seq_trans_adiant_w			bigint;
dt_vencimento_orig_w			timestamp;
dt_vencimento_w				timestamp;
dt_maior_vencimento_w			timestamp;
dt_emissao_w				timestamp;
dt_entrada_saida_w			timestamp;
vl_vencimento_w				double precision;
vl_total_nota_w				double precision;
vl_titulo_w				double precision;
vl_mercadoria_w				double precision;
vl_mercadoria_devolucao_w 		nota_fiscal.vl_mercadoria%type;
vl_baixa_devolucao_w      		titulo_pagar_baixa.vl_baixa%type;
vl_baixa_rateado_w      		titulo_pagar_baixa.vl_baixa%type;
vl_classif_w				double precision;
vl_vinculado_w				double precision;
cd_cgc_w				varchar(14);
cd_pessoa_fisica_w			varchar(10);
nr_titulo_w				bigint;
nr_titulo_imposto_w			bigint;
nr_titulo_origem_w			bigint;
cd_tipo_baixa_neg_w			integer;
nr_adiantamento_w			bigint;
nr_ordem_compra_w        		bigint;
nr_sequencia_w	        		bigint;
nr_sequencia_adiant_w	      		bigint;
nr_seq_classif_w	        	bigint;
nr_seq_baixa_w	      			bigint;
nr_sequencia_ref_w        		bigint;
tx_juros_w				double precision;
tx_multa_w				double precision;
tx_desc_antecipacao_w			double precision;
ie_acao_nf_w				varchar(255);
vl_saldo_atual_w			double precision;
cd_conta_contabil_w			varchar(255);
ie_situacao_nf_w			varchar(255);
cd_centro_custo_w			bigint;
nr_seq_conta_financ_w			bigint;
cd_conta_financ_cpa_w			bigint;
vl_ir_w					double precision;
vl_ir_nf_w				double precision := 0;
vl_ir_tit_w				double precision;
ie_contas_pagar_w			varchar(255);
vl_desc_financ_w			double precision;
vl_tributo_w				double precision;
vl_base_calculo_w			double precision;
cd_tributo_w				bigint;
nr_seq_imposto_w			bigint;
dt_imposto_w				timestamp;
ds_erro_w				varchar(255);
cd_tipo_taxa_juro_w			bigint;
pr_imposto_w				double precision;
cd_condicao_pagamento_w			bigint;
nr_seq_trans_baixa_w			bigint;
cd_cond_pagto_w				bigint;
ds_venc_w				varchar(4000);
qt_venc_w				bigint;
cd_conta_financ_trib_w			bigint;
cd_conta_financ_nf_trib_w		bigint;
cd_benef_trib_w				varchar(255);
ie_vencimento_w				varchar(255);
ds_irrelevante_w			varchar(255);
dt_primeiro_venc_w			timestamp;
nr_seq_trans_reg_w			bigint;
nr_parcela_w				integer;
nr_total_parcelas_w			integer;
ie_despesa_adic_w			varchar(255) := 'N';
cont_w					bigint;
cd_darf_w				varchar(255);
dt_referencia_w				timestamp;
cd_variacao_w				varchar(255)	:= null;
ie_periodicidade_w			varchar(255)	:= null;
cd_darf_nf_w				varchar(255);
nr_seq_lote_res_pls_w			bigint;
nr_contrato_w				bigint;/* francisco - os 49506 - 31/01/2007 */
vl_base_adic_w				double precision;
vl_trib_nao_retido_w			double precision;
vl_base_nao_retido_w			double precision;
vl_trib_adic_w				double precision;
ie_dt_contab_tit_nota_w			varchar(255);
dt_contabil_w				timestamp;
cd_operacao_nf_w			bigint;
ie_data_contab_nf_w			varchar(255);
vl_nota_origem_w			double precision;
/* falta obter a informacao  */

cd_moeda_w				integer;
cd_moeda_cp_w				bigint;
cd_tipo_taxa_multa_w        		bigint;
/*desconto financeiro compras*/

nr_seq_trans_fin_desc_w			bigint;
pr_desc_financeiro_w			double precision;
vl_desconto_financ_oc_w			double precision;	
cd_tipo_baixa_financ_w			bigint;
/* campos ir */

cd_beneficiario_ir_w			varchar(255);
cd_tributo_ir_w				bigint;
cd_conta_contabil_ir_w			varchar(255);
nr_seq_conta_fin_ir_w			bigint;
ie_vencimento_ir_w			varchar(255);
/* campos despesa adicional */

nr_titulo_desp_w			bigint;
dt_vencimento_despesa_w			timestamp;
vl_documento_despesa_w			double precision;
cd_cgc_despesa_w			varchar(255);
nr_documento_despesa_w			bigint;
/*tratar adiantamentos vinculados*/

vl_titulo_adiant_w			double precision;
vl_saldo_adiant_w			double precision;
vl_saldo_titulo_w			double precision;
vl_vinculado_tit_w			double precision;
/*repasses dos titulos gerados*/

nr_repasse_terceiro_w			bigint;
ds_repasses_w				varchar(255) := '';
ds_observacao_nf_w			varchar(4000);
ie_devolucao_nf_w			varchar(255);
vl_total_baixa_w			double precision := 0;
vl_alterado_w				double precision := 0;
cd_tipo_baixa_devolucao_w		bigint;
nr_trans_fin_baixa_nf_w			bigint;
nr_trans_fin_contab_nf_w		bigint;
ie_entregue_bloqueto_w			varchar(255);
ie_tipo_titulo_nf_bloq_w		varchar(2);
vl_frete_w				double precision;
cd_conta_financ_frete_w			bigint;
vl_sem_frete_w				double precision;
vl_frete_classif_w			double precision;
ie_forma_desc_fin_w			varchar(255);
vl_desc_antec_w				double precision	:= 0;
cd_conta_contabil_frete_w		varchar(255);
ie_corpo_item_w				varchar(255);
ie_rateio_adiant_w			varchar(255)	:= 'P';
ie_tipo_titulo_operacao_w		varchar(2)	:= null;
ie_origem_titulo_w			varchar(10);
nr_seq_classe_tit_pagar_w		bigint;
qt_proj_recurso_w			bigint;
nr_seq_proj_rec_w			bigint;
ie_vinc_adiant_nf_dev_w			varchar(1);
vl_desc_dependente_w			double precision;
vl_reducao_w				double precision;
cd_tipo_servico_w			varchar(100);
nr_seq_trans_financ_w			bigint;
nr_seq_classe_dev_nf_w			bigint;
cd_tipo_baixa_oc_w			integer;
nr_seq_classe_w				bigint;
cd_tipo_baixa_neg_tp_w			integer;
cd_material_regra_w			bigint;
qt_regra_material_w			bigint	:= 0;
qt_regra_duplicada_w			bigint	:= 0;
nr_seq_tipo_adiant_nf_dev_w		bigint;
vl_adiantamento_w			double precision;
vl_devolucao_adiant_w			double precision;
cd_tipo_pessoa_juridica_w		bigint;
qt_regra_classe_w			bigint;
ds_observacao_w				varchar(2000);
qt_parcelas_w				bigint;
nr_seq_classificacao_w			nota_fiscal.nr_seq_classificacao%type;
nr_seq_trans_fin_regra_w		titulo_pagar.nr_seq_trans_fin_baixa%type;
ie_tipo_titulo_w			titulo_pagar.ie_tipo_titulo%type;
cd_empresa_w				smallint;
ie_conta_contab_tit_trib_w		parametros_contas_pagar.ie_conta_contab_tit_trib%type;
cd_conta_cont_trib_w			conta_contabil.cd_conta_contabil%type;
ie_rateio_classif_w			tributo.ie_rateio_classif%type;
ie_titulo_tributo_w			varchar(1)	:= 'N';
ds_arquivo_w				nota_fiscal_anexo.ds_arquivo%type;
ie_gravar_anexo_w			varchar(1)	:= 'N';
ie_dt_contab_adiant_tit_w		parametros_contas_pagar.ie_dt_contab_adiant_tit%type;
dt_contabil_adiant_w			timestamp;
nr_seq_adiant_pago_dev_w		adiant_pago_dev.nr_sequencia%type;
ie_vincular_adiant_titulo_w		varchar(1);
nr_seq_trib_cp_w			bigint;
nr_integracao_w				bigint := 0;
/* Projeto Multimoeda - Variaveis */

vl_cotacao_w				cotacao_moeda.vl_cotacao%type;
vl_cotacao_atual_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_estrang_w			integer;
vl_titulo_estrang_w			double precision;
vl_saldo_estrang_w			double precision;
vl_total_baixa_estrang_w	double precision;
vl_baixa_estrang_w			double precision;
vl_complemento_w			double precision;
vl_cambial_ativo_w			titulo_pagar_baixa.vl_cambial_ativo%type := null;
vl_cambial_passivo_w		titulo_pagar_baixa.vl_cambial_passivo%type := null;
cd_moeda_empresa_w			integer;
ie_nota_estrang_w			varchar(1) := 'N';
IE_TITULO_PAGAR_W	tributo_conta_contabil.IE_TITULO_PAGAR%type;
ie_atualiza_trib_adiant_w	varchar(2);
vl_saldo_tp_nfs_origem_w	titulo_pagar.vl_saldo_titulo%type;
vl_saldo_adiantamento_w			adiantamento_pago.vl_saldo%type;
nr_seq_trans_fin_dev_w		tipo_adiant_pago.nr_seq_trans_fin%type;

cd_moeda_adiant_pago_w			adiantamento_pago.cd_moeda%type;
vl_conv_adiantamento_w			adiantamento_pago.vl_cotacao%type;

vl_cambial_passivo_adiant_w		titulo_pagar_adiant.vl_cambial_passivo%type := null;
vl_cambial_ativo_adiant_w		titulo_pagar_adiant.vl_cambial_ativo%type := null;

c010 CURSOR FOR
	SELECT 	b.cd_estabelecimento,
		b.cd_serie_nf,
		b.nr_nota_fiscal,
		coalesce(a.dt_vencimento, b.dt_emissao) dt_vencimento,
		coalesce(a.vl_vencimento, b.vl_total_nota),
		CASE WHEN a.ie_origem='S' THEN a.cd_cgc_emitente WHEN a.ie_origem='F' THEN a.cd_cgc_emitente  ELSE b.cd_cgc END ,
		b.cd_pessoa_fisica,
		b.dt_emissao,
		b.dt_entrada_saida,
		b.nr_ordem_compra,
		b.nr_sequencia_ref,
		b.nr_sequencia,
        	c.ie_entrada_saida,
		b.vl_total_nota,
		b.vl_mercadoria,
		e.ie_contas_pagar,
		b.cd_condicao_pagamento,
		coalesce(a.vl_desc_financ,0),
		b.cd_operacao_nf,
		coalesce(b.ie_entregue_bloqueto, 'N'),
		b.vl_frete,
		b.nr_seq_lote_res_pls,
		o.ie_tipo_titulo,
		b.cd_tipo_servico,
		b.cd_natureza_operacao,
		b.nr_seq_classificacao,
		coalesce(o.ie_data_contab_nf, 'ES'),
		b.cd_moeda_estrangeira,
		b.vl_conv_estrangeiro vl_cotacao
	FROM operacao_nota o, estabelecimento e, natureza_operacao c, nota_fiscal b
LEFT OUTER JOIN nota_fiscal_venc a ON (b.nr_sequencia = a.nr_sequencia)
WHERE b.nr_sequencia		= nr_sequencia_p and b.cd_natureza_operacao 	= c.cd_natureza_operacao and b.cd_operacao_nf 	= o.cd_operacao_nf and b.cd_estabelecimento	= e.cd_estabelecimento and coalesce(o.ie_contas_pagar,'S') 	= 'S' and coalesce(e.ie_contas_pagar,'S') <> 'N' and coalesce(a.nr_titulo_pagar::text, '') = ''
	order	by dt_vencimento;

c020 CURSOR FOR
	SELECT	nr_titulo,
		vl_titulo,
		coalesce(vl_titulo_estrang,0),
		cd_moeda,
		obter_saldo_titulo_pagar(a.nr_titulo,clock_timestamp()),
		count(nr_titulo) over ()
	from 	titulo_pagar a
	where 	a.nr_seq_nota_fiscal 	 = coalesce(nr_sequencia_ref_w, nr_sequencia_p)
	and	coalesce(a.dt_liquidacao::text, '') = ''
	and	coalesce(a.nr_seq_tributo::text, '') = '';

c030 CURSOR FOR
	SELECT 	coalesce(cd_conta_cont_trib_w,a.cd_conta_contabil),
		a.cd_centro_custo,
		coalesce(a.nr_seq_conta_financ, cd_conta_financ_cpa_w),
		sum(a.vl_liquido),
		a.nr_contrato
	from 	nota_fiscal_item a
	where	a.nr_sequencia = nr_sequencia_p
	and	not exists (SELECT	1
		from	nota_fiscal_item_rateio b
		where	b.nr_seq_nota = a.nr_sequencia
		and	b.nr_item_nf = a.nr_item_nf
		and (coalesce(ie_rateio_classif_w,'S') = 'S' or coalesce(ie_titulo_tributo_w,'N') = 'N'))
	group	by a.cd_conta_contabil,
		a.cd_centro_custo,
		a.nr_seq_conta_financ,
		a.nr_contrato
	
union all

	select 	coalesce(cd_conta_cont_trib_w,a.cd_conta_contabil),
		a.cd_centro_custo,
		coalesce(a.cd_conta_financ, coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w)),
		sum(a.vl_rateio),
		b.nr_contrato
	from 	nota_fiscal_item_rateio a,
		nota_fiscal_item b
	where	b.nr_sequencia	= nr_sequencia_p
	and	b.nr_sequencia	= a.nr_seq_nota 
	and	a.nr_item_nf		= b.nr_item_nf
	and (coalesce(ie_rateio_classif_w,'S') = 'S' or coalesce(ie_titulo_tributo_w,'N') = 'N')
	group	by a.cd_conta_contabil,
		a.cd_centro_custo,
		a.cd_conta_financ,
		b.nr_seq_conta_financ,
		b.nr_contrato
	
union all

	select	cd_conta_cont_trib_w,
		null,
		cd_conta_financ_cpa_w,
		vl_mercadoria_w,
		null
	
	where	not exists (select	1
		from	nota_fiscal_item a
		where	a.nr_sequencia	= nr_sequencia_p)
	and	(cd_conta_cont_trib_w IS NOT NULL AND cd_conta_cont_trib_w::text <> '');
/*fabio 19/08/2004 adicionei o union acima para trazer quando existir raterio (10360)*/

c040 CURSOR FOR
	SELECT	a.cd_tributo,
		sum(coalesce(vl_base_calculo,0)),
		sum(coalesce(a.vl_tributo,0)),
		dividir(sum(coalesce(a.vl_tributo,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
		max(ie_venc_nf) ie_vencimento,
		max(a.cd_conta_financ) cd_conta_financ_nf_trib,
		a.cd_darf,
		sum(coalesce(a.vl_base_adic,0)),
		sum(coalesce(a.vl_trib_nao_retido,0)),
		sum(coalesce(a.vl_base_nao_retido,0)),
		sum(coalesce(a.vl_trib_adic,0)),
		b.ie_corpo_item,
		sum(coalesce(a.vl_reducao_base,0)) vl_desc_dependente,
		sum(coalesce(a.vl_reducao,0)) vl_reducao,
		b.ie_rateio_classif
	from	tributo b,
		nota_fiscal_trib a
	where	((coalesce(b.ie_gerar_titulo_pagar,'N') in ('S','F')) or (philips_param_pck.get_cd_pais = 2))
	and	nr_sequencia		= nr_sequencia_p
	and	a.cd_tributo		= b.cd_tributo
	and	b.ie_conta_pagar	= 'S'
	group by a.cd_tributo,
		a.cd_darf,
		b.ie_corpo_item,
		b.ie_rateio_classif
	
union

	SELECT a.cd_tributo,
		sum(coalesce(vl_base_calculo,0)),
		sum(coalesce(a.vl_tributo,0)),
		dividir(sum(coalesce(a.vl_tributo,0)), sum(coalesce(vl_base_calculo,0))) pr_imposto,
		max(ie_vencimento) ie_vencimento,
		0 cd_conta_financ_nf_trib,
		null cd_darf,
		sum(coalesce(a.vl_base_adic,0)),
		sum(coalesce(a.vl_trib_nao_retido,0)),
		sum(coalesce(a.vl_base_nao_retido,0)),
		sum(coalesce(a.vl_trib_adic,0)),
		b.ie_corpo_item,
		0,
		0,
		b.ie_rateio_classif
	from	tributo b,
		nota_fiscal_item_trib a
	where	((coalesce(b.ie_gerar_titulo_pagar,'N') in ('S','F')) or (philips_param_pck.get_cd_pais = 2))
	and	nr_sequencia		= nr_sequencia_p
	and	a.cd_tributo		= b.cd_tributo
	and	b.ie_conta_pagar	= 'S'
	and	a.ie_rateio		= 'N'
	group	by a.cd_tributo,
		b.ie_corpo_item,
		b.ie_rateio_classif
	
union

	select	a.cd_tributo,
		coalesce(a.vl_base_calculo,0),
		coalesce(a.vl_tributo,0),
		dividir(coalesce(a.vl_tributo,0), coalesce(a.vl_base_calculo,0)) pr_imposto,
		b.ie_venc_nf ie_vencimento,
		0 cd_conta_financ_nf_trib,
		null cd_darf,
		coalesce(a.vl_base_adic,0),
		coalesce(a.vl_trib_nao_retido,0),
		coalesce(a.vl_base_nao_retido,0),
		coalesce(a.vl_trib_adic,0),
		b.ie_corpo_item,
		coalesce(a.vl_desc_base,0) vl_desc_dependente,
		coalesce(a.vl_reducao,0) vl_reducao,
		b.ie_rateio_classif
	from	tributo b,
		nota_fiscal_venc_trib a
	where	((coalesce(b.ie_gerar_titulo_pagar,'N') in ('S','F')) or (philips_param_pck.get_cd_pais = 2))
	and	a.dt_vencimento		= dt_vencimento_w
	and	nr_sequencia		= nr_sequencia_p
	and	a.cd_tributo		= b.cd_tributo
	and	b.ie_conta_pagar	= 'S';

c060 CURSOR FOR
	SELECT	dt_vencimento,
		vl_documento,
		cd_cgc,
		nr_documento
	from	nota_fiscal_desp_adic
	where	nr_seq_nf = nr_sequencia_p
	and	coalesce(ie_origem,'N') = 'N';

/* rfoliveira - os 323907 - 30/05/2011 - podem haver varias ocs em uma nf. como o nr. da oc fica gravado no item tambem, foi tratado para que busque o nr. da oc a partir do item da nf */

c05 CURSOR FOR
	SELECT	nr_adiantamento,
		vl_vinculado,
		null nr_seq_trans_financ
	from	ordem_compra_adiant_pago a,
		nota_fiscal_item b
	where	a.nr_ordem_compra	= b.nr_ordem_compra
	and	b.nr_sequencia = nr_sequencia_p
	group by	nr_adiantamento,
		vl_vinculado
	
union

	SELECT	nr_adiantamento,
		sum(vl_vinculado),
		nr_seq_trans_financ
	from	nota_fiscal_adiant_pago
	where	nr_sequencia_nf	= nr_sequencia_p
	group by	nr_adiantamento,
		nr_seq_trans_financ;

/*francisco - os 36549 - 19/07/2006 - cursor abaixo para gravar repasses no complemento do titulo*/

c015 CURSOR FOR
	SELECT	nr_repasse_terceiro
	from	repasse_nota_fiscal
	where	nr_seq_nota_fiscal = nr_sequencia_p
	order by
		nr_repasse_terceiro;

c025 CURSOR FOR
	SELECT	a.ds_arquivo
	from	nota_fiscal_anexo a
	where	a.nr_seq_nota	= nr_sequencia_p;


BEGIN

select	ie_acao_nf,
	cd_estabelecimento,
	ie_situacao,
	CASE WHEN coalesce(ds_observacao::text, '') = '' THEN ''  ELSE substr(obter_desc_expressao(729193) || substr(ds_observacao,1,3500),1,4000) END
into STRICT 	ie_acao_nf_w,
	cd_estabelecimento_w,
	ie_situacao_nf_w,
	ds_observacao_nf_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select  max(cd_empresa) -- AAMFIRMO OS 630365;
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w;

/* Projeto Multimoeda - Obtem a moeda padrao da empresa */

select	obter_moeda_padrao_empresa(cd_estabelecimento_w,'E')
into STRICT	cd_moeda_empresa_w
;

ie_moeda_w := obter_param_usuario(40, 208, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_moeda_w);
ie_gravar_anexo_w := Obter_Param_Usuario(40, 445, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gravar_anexo_w);
ie_vincular_adiant_titulo_w := Obter_Param_Usuario(40, 460, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vincular_adiant_titulo_w);
ie_atualiza_trib_adiant_w := Obter_Param_Usuario(851, 170, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_trib_adiant_w);

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	max(cd_conta_financ_cpa)
into STRICT	cd_conta_financ_cpa_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_w;

begin
select	min(dt_vencimento)
into STRICT	dt_primeiro_venc_w
from	nota_fiscal_venc
where	nr_sequencia	= nr_sequencia_p;
exception
when others then
	dt_primeiro_venc_w	:= null;
end;

begin
select	cd_beneficiario_ir,
	cd_tributo_ir,
	cd_conta_contabil_ir,
	nr_seq_conta_fin_ir,
	ie_vencimento_ir,
	cd_tipo_taxa_juro,
	ie_dt_contab_tit_nota,
	nr_trans_fin_baixa_nf,
	nr_trans_fin_contab_nf,
	ie_tipo_titulo_nf_bloq,
	coalesce(ie_devolucao_nf, 'A'),
	ie_vinc_adiant_nf_dev,
	cd_moeda_padrao,
	nr_seq_classe_dev_nf,
	nr_seq_tipo_adiant_nf_dev,
	coalesce(ie_trib_saldo_tit_nf,'N'),
	coalesce(ie_conta_contab_tit_trib,'T'),
	ie_dt_contab_adiant_tit
into STRICT	cd_beneficiario_ir_w,
	cd_tributo_ir_w,
	cd_conta_contabil_ir_w,
	nr_seq_conta_fin_ir_w,
	ie_vencimento_ir_w,
	cd_tipo_taxa_juro_w,
	ie_dt_contab_tit_nota_w,
	nr_trans_fin_baixa_nf_w,
	nr_trans_fin_contab_nf_w,
	ie_tipo_titulo_nf_bloq_w,
	ie_devolucao_nf_w,
	ie_vinc_adiant_nf_dev_w,
	cd_moeda_cp_w,
	nr_seq_classe_dev_nf_w,
	nr_seq_tipo_adiant_nf_dev_w,
	ie_trib_atualiza_saldo_w,
	ie_conta_contab_tit_trib_w,
	ie_dt_contab_adiant_tit_w
from 	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;
exception
	when others then
		/* erro na busca dos parametros do contas a pagar */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(186038);
end;

select	count(*)
into STRICT	qt_proj_recurso_w
from	nota_fiscal_item
where	nr_sequencia	= nr_sequencia_p
and	nr_seq_proj_rec > 0;

nr_seq_proj_rec_w	:= null;
if (qt_proj_recurso_w > 0) then
	select	max(nr_seq_proj_rec)
	into STRICT	nr_seq_proj_rec_w
	from	nota_fiscal_item
	where	nr_sequencia	= nr_sequencia_p;
end if;

/*
if	(cd_tributo_ir_w is null) then
	r.aise_application_error(-20011,'ERRO NA BUSCA DOS PARAMETROS DO CONTAS A PAGAR');
end if;
thlima - estava passando o codigo 10*/
if (cd_tributo_ir_w IS NOT NULL AND cd_tributo_ir_w::text <> '') then
	select coalesce(sum(vl_tributo),0)
	into STRICT 	vl_ir_nf_w
	from 	nota_fiscal_trib
	where 	nr_sequencia	= nr_sequencia_p
	and 	cd_tributo	= cd_tributo_ir_w;
end if;

select	coalesce(max(dt_vencimento),clock_timestamp())
into STRICT 	dt_maior_vencimento_w
from 	nota_fiscal_venc
where 	nr_sequencia = nr_sequencia_p;

vl_ir_w	:= 0;

vl_ir_tit_w	:= 0;

select	max(coalesce(nr_seq_trans_baixa_adiant, nr_seq_trans_adiant)),
	max(cd_conta_financ_frete),
	max(cd_conta_contabil_frete)
into STRICT	nr_seq_trans_adiant_w,
	cd_conta_financ_frete_w,
	cd_conta_contabil_frete_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

select	max(coalesce(nr_seq_trans_fin_desc,0)),
	max(coalesce(cd_tipo_baixa_financ,0)),
	coalesce(max(ie_forma_desc_fin),'A')
into STRICT	nr_seq_trans_fin_desc_w,
	cd_tipo_baixa_financ_w,
	ie_forma_desc_fin_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_w;

select	count(*)
into STRICT	nr_total_parcelas_w
from	nota_fiscal_venc
where	nr_sequencia		= nr_sequencia_p;

if (nr_total_parcelas_w = 0) then
	nr_total_parcelas_w	:= null;
end if;

nr_parcela_w			:= null;

open c015;
loop
	fetch c015 into
		nr_repasse_terceiro_w;
	EXIT WHEN NOT FOUND; /* apply on c015 */
		if (coalesce(ds_repasses_w::text, '') = '') then
			ds_repasses_w := substr(Wheb_mensagem_pck.get_Texto(302573, 'NR_REPASSE_TERCEIRO_W='|| NR_REPASSE_TERCEIRO_W),1,255);
					/*REPASSES N: #@NR_REPASSE_TERCEIRO_W#@*/

		else
			ds_repasses_w := substr(ds_repasses_w || ', ' || nr_repasse_terceiro_w,1,255);
		end if;
end loop;
close c015;


open c010;
loop
fetch c010 into
	cd_estabelecimento_w,
	cd_serie_nf_w,
	nr_nota_fiscal_w,
	dt_vencimento_w,
	vl_vencimento_w,
	cd_cgc_w,
	cd_pessoa_fisica_w,
	dt_emissao_w,
	dt_entrada_saida_w,
	nr_ordem_compra_w,
	nr_sequencia_ref_w,
	nr_sequencia_w,
	ie_entrada_saida_w,
	vl_total_nota_w,
	vl_mercadoria_w,
	ie_contas_pagar_w,
	cd_condicao_pagamento_w,
	vl_desc_financ_w,
	cd_operacao_nf_w,
	ie_entregue_bloqueto_w,
	vl_frete_w,
	nr_seq_lote_res_pls_w,
	ie_tipo_titulo_operacao_w,
	cd_tipo_servico_w,
	cd_natureza_operacao_w,
	nr_seq_classificacao_w,
	ie_data_contab_nf_w,
	cd_moeda_estrang_w,
	vl_cotacao_w;
EXIT WHEN NOT FOUND; /* apply on c010 */
		begin

		select	max(cd_tipo_pessoa)
		into STRICT	cd_tipo_pessoa_juridica_w
		from	pessoa_juridica
		where	cd_cgc = cd_cgc_w;
		
		/* Projeto Multimoeda - Verifica se a nota fiscal e moeda estrangeira, caso positivo os dados deverao ser gravados em moeda estrangiera */

		if (cd_moeda_estrang_w IS NOT NULL AND cd_moeda_estrang_w::text <> '') and (cd_moeda_estrang_w <> cd_moeda_empresa_w) and (coalesce(vl_cotacao_w,0) <> 0) then
			ie_nota_estrang_w := 'S';
		else
			ie_nota_estrang_w := 'N';
			vl_cotacao_w := null;
			cd_moeda_estrang_w := null;
		end if;
		
		select count(*)
		into STRICT qt_regra_classe_w
		from regra_tit_pagar_nf
		where 	((coalesce(cd_cnpj::text, '') = '') or (cd_cnpj = cd_cgc_w))
		and	((coalesce(cd_tipo_pessoa::text, '') = '') or (cd_tipo_pessoa = cd_tipo_pessoa_juridica_w));
		
		if (qt_regra_classe_w > 0) then
			select	max(nr_seq_classe)
			into STRICT 	nr_seq_classe_tit_pagar_w
			from 	regra_tit_pagar_nf
			where 	((coalesce(cd_cnpj::text, '') = '') or (cd_cnpj = cd_cgc_w))
			and	((coalesce(cd_tipo_pessoa::text, '') = '') or (cd_tipo_pessoa = cd_tipo_pessoa_juridica_w));
		end if;
	
		if (coalesce(nr_seq_classe_tit_pagar_w::text, '') = '') then
			select	max(nr_seq_classe_tit_pagar)
			into STRICT	nr_seq_classe_tit_pagar_w
			from	operacao_nota
			where	cd_operacao_nf = cd_operacao_nf_w;
		end if;

		dt_contabil_w	:= dt_entrada_saida_w;
		if (ie_dt_contab_tit_nota_w = 'EMI') then
			dt_contabil_w	:= dt_emissao_w;
		elsif (ie_dt_contab_tit_nota_w = 'ATU') then
			dt_contabil_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
		elsif (ie_dt_contab_tit_nota_w = 'OPE') then
			
			if (ie_data_contab_nf_w = 'ES') then
				dt_contabil_w	:= dt_entrada_saida_w;
			elsif (ie_data_contab_nf_w = 'EMI') then
				dt_contabil_w	:= dt_emissao_w;
			elsif (ie_data_contab_nf_w = 'ATU') then
				dt_contabil_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
			end if;
		end if;

		dt_contabil_adiant_w:= dt_entrada_saida_w;
		if (ie_dt_contab_adiant_tit_w = 'EMI') then
			dt_contabil_adiant_w:= dt_emissao_w;
		elsif (ie_dt_contab_adiant_tit_w = 'ATU') then
			dt_contabil_adiant_w := PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
		elsif (ie_dt_contab_adiant_tit_w = 'OPE') then
			if (ie_data_contab_nf_w = 'ES') then
				dt_contabil_adiant_w	:= dt_entrada_saida_w;
			elsif (ie_data_contab_nf_w = 'EMI') then
				dt_contabil_adiant_w	:= dt_emissao_w;
			elsif (ie_data_contab_nf_w = 'ATU') then
				dt_contabil_adiant_w	:= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
			end if;
		end if;

		if (nr_total_parcelas_w > 1) then
			nr_parcela_w		:= coalesce(nr_parcela_w,0) + 1;
		end if;
		begin

		select	coalesce(a.pr_juros_negociado,0),
			coalesce(a.pr_multa_atraso, 0),
			coalesce(a.pr_desc_pgto_antec, 0),
  			coalesce(a.cd_moeda,1),
			coalesce(a.pr_desc_financeiro,0),
			b.cd_tipo_baixa_neg
		into STRICT	tx_juros_w,
			tx_multa_w,
			tx_desc_antecipacao_w,
			cd_moeda_w,
			pr_desc_financeiro_w,
			cd_tipo_baixa_oc_w
		FROM ordem_compra a
LEFT OUTER JOIN forma_pagamento b ON (a.nr_seq_forma_pagto = b.nr_sequencia)
WHERE a.nr_ordem_compra	= nr_ordem_compra_w;
		exception
			when others then
				begin
				tx_juros_w			:= 0;
				tx_multa_w			:= 0;
				tx_desc_antecipacao_w	        := 0;
				cd_moeda_w			:= 1;
				pr_desc_financeiro_w		:= 0;
				end;
		end;

		if (nr_ordem_compra_w IS NOT NULL AND nr_ordem_compra_w::text <> '') then 	
		        select	      			
			        max(a.nr_seq_conta_bco)
				into STRICT  nr_seq_conta_bco_w
				from  ordem_compra_item a
				where nr_ordem_compra = nr_ordem_compra_w;
				
		elsif (nr_seq_proj_rec_w IS NOT NULL AND nr_seq_proj_rec_w::text <> '') then			
                        select
			       max(nr_seq_conta_bco)
	                       into STRICT nr_seq_conta_bco_w 
	                       from projeto_recurso 
	                       where nr_sequencia = nr_seq_proj_rec_w;
                end if;			
		if (ie_moeda_w = 'S') then
			cd_moeda_w		:= coalesce(cd_moeda_cp_w, cd_moeda_w);
		end if;
		
		if (coalesce(nr_seq_lote_res_pls_w,0) <> 0) then /* se possuir a sequencia do lote de resumo, entao a origem do titulo e pls - contas medicas, senao a origem e nota fiscal (paulo - os 171927) */
			ie_origem_titulo_w	:= '5';
		else
			ie_origem_titulo_w	:= '1';
		end if;
		
		if (ie_entrada_saida_w = 'E') and
			(ie_acao_nf_w = '1' AND ie_situacao_nf_w <> '9') then
			begin

			select	nextval('titulo_pagar_seq') 
			into STRICT	nr_titulo_w
			;

			if (dt_vencimento_w = dt_maior_vencimento_w) then
				vl_ir_w		:= vl_ir_nf_w - vl_ir_tit_w;
			else	
				begin
				vl_ir_w		:= vl_ir_nf_w / vl_total_nota_w * vl_vencimento_w;
				vl_ir_tit_w	:= vl_ir_tit_w + vl_ir_w;
				end;
			end if;

			select	max(cd_tipo_baixa),
				coalesce(max(ie_rateio_adiant),'P')
			into STRICT	cd_tipo_baixa_neg_w,
				ie_rateio_adiant_w
			from	pessoa_juridica_estab
			where	cd_cgc			= cd_cgc_w
			and	cd_estabelecimento	= cd_estabelecimento_w;


			vl_desc_antec_w	:= 0;

			if (ie_forma_desc_fin_w = 'A') or (ie_forma_desc_fin_w = 'T')then
				vl_desc_antec_w	:= vl_desc_financ_w;
				if (ie_forma_desc_fin_w = 'T') then
					select 	count(*)
					into STRICT	qt_itens_nf_w
					from	nota_fiscal_item
					where	nr_sequencia = nr_sequencia_p;
			
					if (qt_itens_nf_w > 0) then
						select	sum(vl_liquido - (vl_liquido * pr_desc_financ/100)),
							sum(vl_liquido)
						into STRICT	vl_total_item_desc_w,
							vl_total_item_w
						from	nota_fiscal_item
						where	nr_sequencia = nr_sequencia_p;
			
						pr_desc_financ_w := round((vl_total_item_w - vl_total_item_desc_w)/vl_total_item_w * 100,2);
					end if;
				end if;
			end if;
			
			if (ie_entregue_bloqueto_w = 'N') then
				ie_tipo_titulo_w := coalesce(ie_tipo_titulo_operacao_w,0);
			else
				ie_tipo_titulo_w := coalesce(ie_tipo_titulo_nf_bloq_w,0);
			end if;
			
			nr_seq_trans_fin_regra_w := obter_trans_fin_regra(	'TNF',  --Regra de definicao trans financ (Shift + F11)
						cd_estabelecimento_w, cd_pessoa_fisica_w, cd_cgc_w, '', '', ie_tipo_titulo_w, '', '', coalesce(nr_seq_classificacao_w,nr_seq_classe_tit_pagar_w), nr_seq_trans_fin_regra_w);

			/* Projeto Multimoeda - Calcula os valores para gravar no titulo quando moeda estrangeira. */

			if (coalesce(ie_nota_estrang_w,'N') = 'S') then
				vl_titulo_estrang_w := coalesce(vl_vencimento_w,0) / vl_cotacao_w;
			else
				vl_titulo_estrang_w := null;
			end if;
			
			insert into titulo_pagar(
		    		nr_titulo,
				cd_estabelecimento,	
				dt_atualizacao,
				nm_usuario,
				dt_emissao,	
				dt_contabil, 
				dt_vencimento_original, 
				dt_vencimento_atual,
				vl_titulo, 
				vl_saldo_titulo, 
				vl_saldo_juros,
				vl_saldo_multa, 
				cd_moeda, 
				tx_juros,
				tx_multa, 
				cd_tipo_taxa_juro, 
				cd_tipo_taxa_multa,             
				tx_desc_antecipacao,	 
				ie_situacao, 
				ie_origem_titulo,
				ie_tipo_titulo, 
				nr_seq_nota_fiscal, 
				cd_pessoa_fisica,
				cd_cgc, 
				nr_documento, 
				ie_desconto_dia, 
				vl_ir, 
				vl_dia_antecipacao,
				cd_tipo_taxa_antecipacao, 
				nr_parcelas, 
				nr_total_parcelas, 
				ie_status_tributo, 
				nr_lote_transf_trib, 
				ds_compl_contab, 
				ds_observacao_titulo, 
				cd_estab_financeiro, 
				cd_tipo_baixa_neg, 
				nr_seq_trans_fin_baixa,
				nr_seq_trans_fin_contab,
				nr_seq_lote_res_pls, 
				nr_seq_proj_rec, 
				nr_seq_classe,
				ie_status,
				nr_seq_conta_bco,
				vl_titulo_estrang,
				vl_cotacao)
			values (
				nr_titulo_w, 
				cd_estabelecimento_w, 
				clock_timestamp(),
				nm_usuario_p, 
				dt_emissao_w, 
				dt_contabil_w,
				dt_vencimento_w, 
				dt_vencimento_w,
				vl_vencimento_w, 
				vl_vencimento_w,
				0,
				0, 
				coalesce(cd_moeda_estrang_w,cd_moeda_w),
				tx_juros_w, 
				tx_multa_w,
				1, 
				1, 
				CASE WHEN ie_forma_desc_fin_w='T' THEN pr_desc_financ_w  ELSE 0 END ,
				'A',
				ie_origem_titulo_w,
				CASE WHEN ie_entregue_bloqueto_w='N' THEN  coalesce(ie_tipo_titulo_operacao_w,0)  ELSE coalesce(ie_tipo_titulo_nf_bloq_w,0) END ,
				nr_sequencia_w,
				cd_pessoa_fisica_w,
				CASE WHEN coalesce(cd_pessoa_fisica_w,'X')='X' THEN cd_cgc_w  ELSE null END , 
				somente_numero(substr(nr_nota_fiscal_w,1,20)), 
				'N', 
				vl_ir_w, 
				vl_desc_antec_w,
				cd_tipo_taxa_juro_w, 
				nr_parcela_w, 
				nr_total_parcelas_w, 
				'N', 
				0, 
				ds_repasses_w,
				ds_observacao_nf_w, 
				cd_estab_financeiro_w, 
				coalesce(cd_tipo_baixa_oc_w,cd_tipo_baixa_neg_w), 
				coalesce(nr_seq_trans_fin_regra_w,nr_trans_fin_baixa_nf_w),
				nr_trans_fin_contab_nf_w,
				nr_seq_lote_res_pls_w, 
				nr_seq_proj_rec_w, 
				coalesce(nr_seq_classificacao_w,nr_seq_classe_tit_pagar_w),
				'D',
				nr_seq_conta_bco_w,
				vl_titulo_estrang_w,
				vl_cotacao_w);

			CALL atualizar_inclusao_tit_pagar(nr_titulo_w, nm_usuario_p);

			if ( coalesce(ie_gravar_anexo_w,'N') = 'S') then
			
				open c025;
				loop
				fetch c025 into
					ds_arquivo_w;
				EXIT WHEN NOT FOUND; /* apply on c025 */
					begin

					if (ds_arquivo_w IS NOT NULL AND ds_arquivo_w::text <> '') then
						insert into titulo_pagar_arq(	
							ds_arquivo,
							dt_atualizacao,
							dt_atualizacao_nrec,
							nm_usuario,
							nm_usuario_nrec,
							nr_sequencia,
							nr_titulo)
						values (
							ds_arquivo_w,
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nm_usuario_p,
							nextval('titulo_pagar_arq_seq'),
							nr_titulo_w);
					end if;
					end;
				end loop;
				close c025;
			end if;
			
			update	nota_fiscal_venc
			set	nr_titulo_pagar	= nr_titulo_w
			where	nr_sequencia	= nr_sequencia_w
			and	dt_vencimento	= dt_vencimento_w;

			nr_seq_classif_w		:= 0;
			vl_classif_w			:= 0;
			
			vl_sem_frete_w := null;

			if (vl_frete_w > 0) then
				vl_sem_frete_w	:= vl_total_nota_w - vl_frete_w;
			end if;
			
			open c030;
			loop
			fetch c030 into
				cd_conta_contabil_w,
				cd_centro_custo_w,
				nr_seq_conta_financ_w,
				vl_titulo_w,
				nr_contrato_w;
			EXIT WHEN NOT FOUND; /* apply on c030 */
				begin
				nr_seq_classif_w	:= nr_seq_classif_w + 1;
				/* francisco - os 76272 - 12/12/2007 - troquei as divisoes abaixo para dividir_sem_round*/

				vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_vencimento_w,vl_total_nota_w);
				vl_titulo_w		:= vl_titulo_w * dividir_sem_round(coalesce(vl_sem_frete_w,vl_total_nota_w), vl_mercadoria_w);
				insert into titulo_pagar_classif(
					nr_titulo,
					nr_sequencia, 
					vl_titulo,
					dt_atualizacao, 
					nm_usuario, 
					cd_conta_contabil, 
					cd_centro_custo,
					nr_seq_conta_financ, 
					nr_contrato)
				values (
					nr_titulo_w, 
					nr_seq_classif_w, 
					coalesce(vl_titulo_w,0),
					clock_timestamp(), 
					nm_usuario_p, 
					cd_conta_contabil_w, 
					cd_centro_custo_w,
					nr_seq_conta_financ_w, 
					nr_contrato_w);
					
				vl_classif_w := vl_classif_w + vl_titulo_w;
				end;
			end loop;
			close c030;

			/* anderson 07/04/2006 os 29515 - inclui o if e o insert abaixo para tratamento do desconto financeiro na ordem de compra*/

			if (nr_seq_trans_fin_desc_w <> 0) and (cd_tipo_baixa_financ_w <> 0) and (pr_desc_financeiro_w > 0) then

				vl_desconto_financ_oc_w := vl_vencimento_w * (dividir(pr_desc_financeiro_w,100));
				
				select (coalesce(max(nr_sequencia),0) + 1)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_pagar_baixa(
					nr_titulo,
					nr_sequencia,
					dt_baixa,               
					cd_moeda,               
					dt_atualizacao,         
					nm_usuario,             
					cd_tipo_baixa,          
					ie_acao,                
					vl_descontos,
 					vl_outras_deducoes,
 					vl_juros,
 					vl_multa,               
 					vl_outros_acrescimos,   
 					vl_pago,                
					vl_baixa,               
					vl_devolucao,           
					nr_seq_devolucao,
					nr_seq_trans_fin,
					vl_ir,
					vl_imposto_munic,
					vl_inss,
					nr_lote_contabil)
				values (
					nr_titulo_w,
					nr_seq_baixa_w,
					clock_timestamp(),
					coalesce(cd_moeda_estrang_w,cd_moeda_w),
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_baixa_financ_w,
					'I',            	
					vl_desconto_financ_oc_w,
					0,
					0,
					0,
					0,
					0,
					vl_desconto_financ_oc_w,
					0,
					nr_sequencia_w,
					nr_seq_trans_fin_desc_w,
					0,
					0,
					0,
					0);

				CALL atualizar_tit_pagar_baixa(nr_titulo_w,nr_seq_baixa_w,nm_usuario_p);
				
				CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);
			end if;

			/* francisco - os 96569 - 22/07/2008 - tratar baixa de desconto */

			if (ie_forma_desc_fin_w = 'B') and (nr_seq_trans_fin_desc_w <> 0) and (cd_tipo_baixa_financ_w <> 0) and (vl_desc_financ_w > 0) then
				
				select (coalesce(max(nr_sequencia),0) + 1)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_pagar_baixa(
					nr_titulo,
					nr_sequencia,
					dt_baixa,               
					cd_moeda,               
					dt_atualizacao,         
					nm_usuario,             
					cd_tipo_baixa,          
					ie_acao,                
					vl_descontos,
 					vl_outras_deducoes,
 					vl_juros,
 					vl_multa,               
 					vl_outros_acrescimos,   
 					vl_pago,                
					vl_baixa,               
					vl_devolucao,           
					nr_seq_devolucao,
					nr_seq_trans_fin,
					vl_ir,
					vl_imposto_munic,
					vl_inss,
					nr_lote_contabil)
				values (
					nr_titulo_w,
					nr_seq_baixa_w,
					clock_timestamp(),
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_baixa_financ_w,
					'I',            	
					vl_desc_financ_w,
					0,
					0,
					0,
					0,
					0,
					vl_desc_financ_w,
					0,
					nr_sequencia_w,
					nr_seq_trans_fin_desc_w,
					0,
					0,
					0,
					0);

				CALL atualizar_tit_pagar_baixa(nr_titulo_w,nr_seq_baixa_w,nm_usuario_p);

				CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);
			end if;

			/* francisco - os97842 - 03/07/2008 tratar cf frete*/

			if (vl_frete_w > 0) and (cd_conta_financ_frete_w IS NOT NULL AND cd_conta_financ_frete_w::text <> '') then

				vl_frete_classif_w		:= vl_frete_w * dividir_sem_round(vl_vencimento_w,vl_total_nota_w);
	
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_classif_w
				from	titulo_pagar_classif
				where	nr_titulo	= nr_titulo_w;

				insert into titulo_pagar_classif(
					nr_titulo,
					nr_sequencia,
					vl_titulo,
					dt_atualizacao,
					nm_usuario,
					cd_conta_contabil,
					cd_centro_custo,
					nr_seq_conta_financ,
					nr_contrato)
				values (	nr_titulo_w,
					nr_seq_classif_w,
					coalesce(vl_frete_classif_w,0),
					clock_timestamp(),
					nm_usuario_p, 
					cd_conta_contabil_frete_w, /*matheus os 103502 18/08/2008 conta contabil do frete*/
					null,
					cd_conta_financ_frete_w,
					null);

				vl_classif_w		:= vl_classif_w + vl_frete_classif_w;
			end if;

			if (vl_vencimento_w <> vl_classif_w) then
				-- francisco - os 76272 - 12/12/2007 - arredondar sempre no maior valor
				select	coalesce(max(nr_sequencia),nr_seq_classif_w)
				into STRICT	nr_seq_classif_w
				from	titulo_pagar_classif a
				where	a.nr_titulo	= nr_titulo_w
				and	a.vl_titulo =	(SELECT	max(x.vl_titulo)
							from	titulo_pagar_classif x
							where	x.nr_titulo	= a.nr_titulo);

				update	titulo_pagar_classif
				set	vl_titulo	= vl_titulo + vl_vencimento_w - vl_classif_w
				where	nr_titulo	= nr_titulo_w
				and	nr_sequencia	= nr_seq_classif_w;
			end if;

/*			tributos da nota fiscal que devem ser gerados no contas a pagar */

			vl_tributo_saldo_w	:= 0;
			ie_titulo_tributo_w	:= 'S';

			open c040;
			loop
			fetch c040 into
				cd_tributo_w,
				vl_base_calculo_w,
				vl_tributo_w,
				pr_imposto_w,
				ie_vencimento_w,
				cd_conta_financ_nf_trib_w,
				cd_darf_nf_w,
				vl_base_adic_w,
				vl_trib_nao_retido_w,
				vl_base_nao_retido_w, 
				vl_trib_adic_w,
				ie_corpo_item_w,
				vl_desc_dependente_w,
				vl_reducao_w,
				ie_rateio_classif_w;
			EXIT WHEN NOT FOUND; /* apply on c040 */
				begin

				cd_material_regra_w	:= null;
				
				select	count(distinct a.cd_material)
				into STRICT	qt_regra_duplicada_w
				from	estrutura_material_v b,
					nota_fiscal_item a
				where	exists
					(SELECT	1
					from	tributo_conta_pagar x
					where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
					and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
					and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
					and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
					and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
					and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
					and	x.cd_tributo	= cd_tributo_w
					having	count(*) > 1)
				and	a.cd_material	= b.cd_material
				and	a.nr_sequencia	= nr_sequencia_p;
				
				if (qt_regra_duplicada_w = 0) then
					select	max(a.cd_material)
					into STRICT	cd_material_regra_w
					from	estrutura_material_v b,
						nota_fiscal_item a
					where	exists
						(SELECT	1
						from	tributo_conta_pagar x
						where	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
						and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
						and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
						and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
						and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
						and	dt_emissao_w between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
						and	x.cd_tributo	= cd_tributo_w)
					and	a.cd_material	= b.cd_material
					and	a.nr_sequencia	= nr_sequencia_p;

				else

					select	max(cd_material)
					into STRICT	cd_material_regra_w
					from	(SELECT	a.cd_material
						from	estrutura_material_v b,
							nota_fiscal_item a,
							tributo_conta_pagar x
						where	a.cd_material		= b.cd_material
						and	a.nr_sequencia		= nr_sequencia_p
						and	obter_se_estrutura_mat(x.cd_grupo_material, x.cd_subgrupo_material, x.cd_classe_material, x.cd_material, a.cd_material, 'S') = 'S'
						and	((x.cd_material		= a.cd_material) or (x.cd_grupo_material	= b.cd_grupo_material) or (x.cd_subgrupo_material	= b.cd_subgrupo_material) or (x.cd_classe_material	= b.cd_classe_material))
						and	((coalesce(x.cd_pessoa_juridica::text, '') = '' and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_juridica = cd_cgc_w and coalesce(x.cd_pessoa_fisica::text, '') = '') or (x.cd_pessoa_fisica = cd_pessoa_fisica_w and coalesce(x.cd_pessoa_juridica::text, '') = ''))
						and (coalesce(x.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w)
						and (coalesce(x.cd_empresa, cd_empresa_w) = cd_empresa_w)
						and	dt_emissao_w		between coalesce(dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(dt_fim_vigencia, dt_emissao_w + 1)
						and	x.cd_tributo		= cd_tributo_w
						and	x.pr_aliquota		<> 0
						and	not exists
							(select	1
							from	tributo_conta_pagar y
							where	((y.cd_material = a.cd_material) or (y.cd_grupo_material = b.cd_grupo_material) or (y.cd_subgrupo_material = b.cd_subgrupo_material) or (y.cd_classe_material = b.cd_classe_material)
								and dt_emissao_w between coalesce(y.dt_inicio_vigencia, dt_emissao_w - 1) and coalesce(y.dt_fim_vigencia, dt_emissao_w + 1))
							and	y.pr_aliquota		= 0
							and	y.cd_tributo		= cd_tributo_w)
						order by b.cd_grupo_material,
							 b.cd_subgrupo_material,
							 b.cd_classe_material,
							 b.cd_material) alias29;

				end if;

				select	nextval('titulo_pagar_imposto_seq')
				into STRICT	nr_seq_imposto_w
				;

				SELECT * FROM obter_dados_trib_tit_pagar(cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, cd_benef_trib_w, ds_irrelevante_w, cd_cond_pagto_w, cd_conta_financ_trib_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, clock_timestamp(), cd_variacao_w, ie_periodicidade_w, 'N', cd_natureza_operacao_w, cd_tipo_servico_w, cd_material_regra_w, null, null, nr_seq_trib_cp_w, cd_operacao_nf_w, 0, nr_seq_classe_w, cd_tipo_baixa_neg_tp_w, vl_base_calculo_w, 'N', null, ie_origem_titulo_w, null, null) INTO STRICT cd_benef_trib_w, ds_irrelevante_w, cd_cond_pagto_w, cd_conta_financ_trib_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_trib_cp_w, nr_seq_classe_w, cd_tipo_baixa_neg_tp_w;


				if (cd_conta_financ_nf_trib_w > 0) then
					cd_conta_financ_trib_w := cd_conta_financ_nf_trib_w;
				end if;

				if (ie_vencimento_w = 'V') then

					if (ie_corpo_item_w <> 'V') then
						vl_tributo_w		:= (vl_vencimento_w / vl_total_nota_w) * vl_tributo_w;
					end if;
					-- vl_base_calculo_w	:= (vl_vencimento_w / vl_mercadoria_w) * vl_vencimento_w; edgar 09/09/2008, os 105798, tirada esta linha, sempre deve copiar a base de calculo original
					dt_imposto_w		:= coalesce(dt_vencimento_w,clock_timestamp());
		
				elsif (ie_vencimento_w = 'R') then

					if (dt_primeiro_venc_w IS NOT NULL AND dt_primeiro_venc_w::text <> '') and (dt_primeiro_venc_w < dt_vencimento_w) then
						goto	proximo;
					else
						dt_imposto_w	:= coalesce(dt_entrada_saida_w,clock_timestamp());
					end if;
					
				elsif (ie_vencimento_w = 'P') then

					if (dt_primeiro_venc_w IS NOT NULL AND dt_primeiro_venc_w::text <> '') and (dt_primeiro_venc_w < dt_vencimento_w) then
						goto	proximo;
					else
						dt_imposto_w	:= coalesce(dt_primeiro_venc_w,clock_timestamp());
					end if;

				elsif (ie_vencimento_w = 'C') then

					dt_imposto_w	:= coalesce(dt_vencimento_w,clock_timestamp());

				elsif (ie_vencimento_w = 'E') then

					if (dt_primeiro_venc_w IS NOT NULL AND dt_primeiro_venc_w::text <> '') and (dt_primeiro_venc_w < dt_vencimento_w) then
						goto	proximo;
					else
						dt_imposto_w	:= coalesce(dt_emissao_w,clock_timestamp());
					end if;

				end if;

				if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then

					/* elemar - 21/07/2004 - data base do vencimento nao deve ser final de semana */

					if (PKG_DATE_UTILS.get_WeekDay(dt_imposto_w) = 7) then
						-- edgar 05/08/2005, os 9566, nao deixar passar par ao mes seguinte
						if (PKG_DATE_UTILS.start_of(dt_imposto_w,'DD',0) = PKG_DATE_UTILS.start_of(dt_imposto_w + 2, 'MONTH',0)) then
							dt_imposto_w := dt_imposto_w + 2;
						end if;
					elsif (PKG_DATE_UTILS.get_WeekDay(dt_imposto_w) = 1) then
						-- edgar 05/08/2005, os 9566, nao deixar passar par ao mes seguinte
						if (PKG_DATE_UTILS.start_of(dt_imposto_w,'DD',0) = PKG_DATE_UTILS.start_of(dt_imposto_w + 1, 'MONTH',0)) then
							dt_imposto_w := dt_imposto_w + 1;
						end if;
					end if;

					SELECT * FROM calcular_vencimento(	cd_estabelecimento_w, cd_cond_pagto_w, dt_imposto_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;

					if (qt_venc_w = 1) then	
						dt_imposto_w	:= to_date(substr(ds_venc_w,1,10),'DD/MM/YYYY');
					end if;
				end if;

				if (vl_tributo_w >= 0) then
					select	coalesce(ie_saldo_tit_pagar,'N')
					into STRICT	ie_saldo_tit_pagar_w
					from	tributo
					where	cd_tributo = cd_tributo_w;
					
					if (ie_saldo_tit_pagar_w = 'S') and (ie_trib_atualiza_saldo_w = 'S') then
						vl_tributo_saldo_w := vl_tributo_saldo_w + vl_tributo_w;
					end if;
				
					insert into titulo_pagar_imposto(
						nr_sequencia, nr_titulo, cd_tributo,
						ie_pago_prev, dt_atualizacao, nm_usuario,
						dt_imposto, vl_base_calculo, vl_imposto,
						ds_emp_retencao, pr_imposto, cd_cond_pagto,
						nr_seq_trans_baixa, vl_nao_retido, ie_vencimento,
						vl_base_nao_retido, vl_trib_adic, vl_base_adic, nr_seq_trans_reg,
						cd_darf,dt_atualizacao_nrec,nm_usuario_nrec, cd_variacao,
						ie_periodicidade, vl_desc_base,vl_reducao, nr_seq_trib_cp)
					values (
						nr_seq_imposto_w, nr_titulo_w, cd_tributo_w,
						'V', clock_timestamp(), nm_usuario_p,
						dt_imposto_w, vl_base_calculo_w, vl_tributo_w,
						null, pr_imposto_w, cd_cond_pagto_w,
						nr_seq_trans_baixa_w, vl_trib_nao_retido_w, ie_vencimento_w,
						vl_base_nao_retido_w, vl_trib_adic_w, vl_base_adic_w, nr_seq_trans_reg_w, 
						coalesce(cd_darf_nf_w, cd_darf_w), clock_timestamp(),nm_usuario_p, cd_variacao_w, ie_periodicidade_w, 
						vl_desc_dependente_w,vl_reducao_w, nr_seq_trib_cp_w);
					
					if (philips_param_pck.get_cd_pais <> 2) and (vl_tributo_w > 0) then
						/* ricardo 08/03/2004 - inserida a rotina para gerar o titulo do imposto */

						nr_titulo_origem_w	:= nr_titulo_w;
						select	nextval('titulo_pagar_seq')
						into STRICT	nr_titulo_imposto_w
						;

						/* ricardo 05/04/2006 - a pedido do marcus, inclui em todos os inserts da titulo pagar campo nr_lote_transf_trib 0(zero) */

						select	max(cd_tipo_baixa)
						into STRICT	cd_tipo_baixa_neg_w
						from	pessoa_juridica_estab
						where	cd_cgc			= cd_benef_trib_w
						and	cd_estabelecimento	= cd_estabelecimento_w;

						nr_seq_trans_fin_regra_w := obter_trans_fin_regra(	'TNF',  --Regra de definicaoo trans financ (Shift + F11)
									cd_estabelecimento_w, '', cd_benef_trib_w, '', '', 4, '', '', coalesce(nr_seq_classificacao_w,coalesce(nr_seq_classe_w,nr_seq_classe_tit_pagar_w)), nr_seq_trans_fin_regra_w);

						insert into titulo_pagar(
							nr_titulo,
							cd_estabelecimento,
							dt_atualizacao,
							nm_usuario, 
							dt_emissao,
							dt_contabil, 
							dt_vencimento_original,
							dt_vencimento_atual,
							vl_titulo,
							vl_saldo_titulo,
							vl_saldo_juros,
							vl_saldo_multa,
							cd_moeda,
							tx_juros,
							tx_multa,
							cd_tipo_taxa_juro,
							cd_tipo_taxa_multa,             
							tx_desc_antecipacao,
							ie_situacao,
							ie_origem_titulo,
							ie_tipo_titulo,
							nr_seq_nota_fiscal, 
							cd_cgc,
							nr_documento,
							ie_desconto_dia, 
							nr_titulo_original,
							nr_lote_contabil,
							nr_seq_tributo,
							nr_seq_trans_fin_baixa,
							nr_seq_trans_fin_contab,
							ie_status_tributo, 
							nr_lote_transf_trib,
							ds_compl_contab,
							cd_estab_financeiro,
							cd_tipo_baixa_neg,
							nr_seq_lote_res_pls,
							nr_seq_proj_rec,
							cd_tributo,
							nr_seq_classe,
							ie_status,
							DS_OBSERVACAO_TITULO)
						values (
							nr_titulo_imposto_w,
							cd_estabelecimento_w,
							clock_timestamp(),
							nm_usuario_p,
							dt_emissao_w,
							dt_contabil_w,
							dt_imposto_w,
							dt_imposto_w,
							vl_tributo_w,
							vl_tributo_w,
							0,
							0,
							cd_moeda_w,
							tx_juros_w, 
							tx_multa_w,
							1,
							1, 
							0,
							'A',              /* situacao aberto */
							ie_origem_titulo_w,                /* origem nota fiscal */
							4,                /* tipo imposto edgar 16/04/2004 - os 7779 */
							nr_sequencia_w,
							cd_benef_trib_w,
							substr(nr_nota_fiscal_w,1,20),
							'N', 
							nr_titulo_origem_w,
							0,
							nr_seq_imposto_w,
							coalesce(nr_seq_trans_fin_regra_w,nr_seq_trans_baixa_w),
							nr_seq_trans_reg_w,
							'NT',
							0,
							ds_repasses_w, 
							cd_estab_financeiro_w,
							coalesce(cd_tipo_baixa_neg_tp_w,coalesce(cd_tipo_baixa_oc_w,cd_tipo_baixa_neg_w)),
							nr_seq_lote_res_pls_w,
							nr_seq_proj_rec_w,
							cd_tributo_w,
							coalesce(nr_seq_classificacao_w,coalesce(nr_seq_classe_w,nr_seq_classe_tit_pagar_w)),
							'D',
							coalesce(substr(Obter_Pessoa_Titulo_Pagar(nr_titulo_origem_w),1,255),null));
						CALL atualizar_inclusao_tit_pagar(nr_titulo_imposto_w, nm_usuario_p);

						cd_conta_cont_trib_w	:= null;

						if (coalesce(ie_conta_contab_tit_trib_w,'T')	= 'R') then

							select	max(cd_empresa)
							into STRICT	cd_empresa_w
							from	estabelecimento	
							where	cd_estabelecimento	= cd_estabelecimento_w;
							begin	
							select coalesce(IE_TITULO_PAGAR,'N')  	
							into STRICT IE_TITULO_PAGAR_W	
							from (SELECT IE_TITULO_PAGAR
							from	tributo_conta_contabil
							where	cd_tributo 	= cd_tributo_w
							and	cd_cgc 		= cd_benef_trib_w
							and	cd_empresa	= cd_empresa_w
							and (coalesce(dt_inicio_vigencia, clock_timestamp()) <= clock_timestamp() and coalesce(dt_fim_vigencia, clock_timestamp()) >= clock_timestamp())
							order by dt_inicio_vigencia) alias8 LIMIT 1;	
							exception
							when others then
								IE_TITULO_PAGAR_W := 'N';
							end;
							
							if (IE_TITULO_PAGAR_W = 'S')then
								cd_conta_cont_trib_w		:= substr(obter_conta_contabil_trib(cd_empresa_w, cd_tributo_w, cd_benef_trib_w, clock_timestamp()),1,20);							
							else
								cd_conta_cont_trib_w		:= substr(obter_conta_contabil_trib(cd_empresa_w, cd_tributo_w, cd_cgc_w, clock_timestamp()),1,20);
							end if;

						end if;

						nr_seq_classif_w		:= 0;

						/* edgar 17/08/2004, os 10258 */

		
						nr_seq_classif_w		:= 0;
						vl_classif_w			:= 0;
						open c030;
						loop
						fetch c030 into
							cd_conta_contabil_w,
							cd_centro_custo_w,
							nr_seq_conta_financ_w,
							vl_titulo_w,
							nr_contrato_w;
						EXIT WHEN NOT FOUND; /* apply on c030 */
							nr_seq_classif_w	:= nr_seq_classif_w + 1;
							/* francisco - os 76272 - 12/12/2007 - troquei as divisoes abaixo para dividir_sem_round */

							vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_tributo_w,vl_total_nota_w);
							vl_titulo_w		:= vl_titulo_w * dividir_sem_round(vl_total_nota_w, vl_mercadoria_w);

							insert into titulo_pagar_classif(
								nr_titulo,
								nr_sequencia, 
								vl_titulo,
								dt_atualizacao, 
								nm_usuario, 
								cd_conta_contabil, 
								cd_centro_custo,
								nr_seq_conta_financ, 
								nr_seq_trans_fin, 
								nr_contrato)
							values (
								nr_titulo_imposto_w, 
								nr_seq_classif_w, 
								coalesce(vl_titulo_w,0),
								clock_timestamp(), 
								nm_usuario_p,
								cd_conta_contabil_w, 
								cd_centro_custo_w,
								coalesce(cd_conta_financ_trib_w, nr_seq_conta_financ_w), null, nr_contrato_w);
							vl_classif_w		:= vl_classif_w + vl_titulo_w;

						end loop;
						close c030;

						/*fabio os32359 nao fazia o ajuste da diferenca no ultimo registro*/

						if (vl_tributo_w <> vl_classif_w) then
							/* francisco - os 76272 - 12/12/2007 - arredondar sempre no maior valor */

							select	coalesce(max(nr_sequencia),nr_seq_classif_w)
							into STRICT	nr_seq_classif_w
							from	titulo_pagar_classif a
							where	a.nr_titulo	= nr_titulo_w
							and	a.vl_titulo =	(SELECT	max(x.vl_titulo)
										from	titulo_pagar_classif x
										where	x.nr_titulo	= a.nr_titulo);
		
							update	titulo_pagar_classif
							set	vl_titulo	= vl_titulo + vl_tributo_w - vl_classif_w
							where	nr_titulo	= nr_titulo_imposto_w
							and	nr_sequencia	= nr_seq_classif_w;
						end if;
						/* ricardo 08/03/2004 - fim rotina */

					end if;
				end if;
				exception
				when others then
					ds_erro_w	:= sqlerrm(SQLSTATE);
					/* erro ao inserir imposto no titulo.
					   verifique cadastro de tributos.
					   ds_erro_w */
					CALL wheb_mensagem_pck.exibir_mensagem_abort(186039,'DS_ERRO_W='||ds_erro_w);
				end;
				<<proximo>>
				null;
			end loop;
			close c040;

			ie_titulo_tributo_w	:= 'N';

			if (vl_tributo_saldo_w > 0) and (ie_trib_atualiza_saldo_w = 'S') then
				update	titulo_pagar
				set	vl_saldo_titulo = vl_saldo_titulo - vl_tributo_saldo_w
				where	nr_titulo = nr_titulo_w;
			end if;
			/* edgar 24/01/2005, os 12027 */

			if (coalesce(ie_vincular_adiant_titulo_w,'S') = 'S') then
				open c05;
				loop
				fetch c05 into
					nr_adiantamento_w,
					vl_vinculado_w,
					nr_seq_trans_financ_w;
				EXIT WHEN NOT FOUND; /* apply on c05 */
				
					/* primeira parcela */

					if (ie_rateio_adiant_w = 'P') then
					
						select	coalesce(max(nr_sequencia), 0) + 1
						into STRICT	nr_sequencia_adiant_w
						from	titulo_pagar_adiant
						where	nr_titulo	= nr_titulo_w;
					
						/*alterado por francisco os - 31206*/

						select	vl_saldo_titulo
						into STRICT	vl_saldo_titulo_w
						from	titulo_pagar
						where	nr_titulo = nr_titulo_w;
						
						select	coalesce(max(vl_adiantamento),0)
						into STRICT	vl_adiantamento_w
						from	adiantamento_pago
						where	nr_adiantamento = nr_adiantamento_w;
						
						select	coalesce(sum(a.vl_adiantamento),0)
						into STRICT	vl_vinculado_tit_w
						from	titulo_pagar b,
							titulo_pagar_adiant a
						where	a.nr_titulo		= b.nr_titulo
						and	a.nr_adiantamento = nr_adiantamento_w;
						
						select	coalesce(sum(vl_devolucao), 0)
						into STRICT	vl_devolucao_ADIANT_w
						from	adiant_pago_dev
						where	nr_adiantamento	= nr_adiantamento_w;
						
						vl_saldo_adiant_w	:= vl_adiantamento_w - vl_vinculado_tit_w - vl_devolucao_ADIANT_w;
						
						select	coalesce(sum(a.vl_adiantamento),0)
						into STRICT	vl_vinculado_tit_w
						from	titulo_pagar b,
							titulo_pagar_adiant a
						where	a.nr_titulo		= b.nr_titulo
						and	a.nr_adiantamento	= nr_adiantamento_w
						and	b.nr_seq_nota_fiscal	= nr_sequencia_p;
						
						vl_titulo_adiant_w	:= vl_vinculado_w - vl_vinculado_tit_w;
						
						if (vl_saldo_adiant_w < vl_titulo_adiant_w) then
							vl_titulo_adiant_w := vl_saldo_adiant_w;
						end if;
						
						begin
							select 	coalesce(c.cd_moeda, 0),
									coalesce(c.vl_cotacao, 0)
							into STRICT	cd_moeda_adiant_pago_w,
									vl_conv_adiantamento_w
							from 	nota_fiscal a,
									nota_fiscal_adiant_pago b,
									adiantamento_pago c
							where 	a.nr_sequencia = nr_sequencia_w
							and		b.nr_sequencia_nf = a.nr_sequencia
							and		b.nr_adiantamento = c.nr_adiantamento
							and     b.nr_adiantamento = nr_adiantamento_w;
						exception
						    when others then
							cd_moeda_adiant_pago_w := 0;
							vl_conv_adiantamento_w := 0;
						end;
						
						if ((cd_moeda_adiant_pago_w <> cd_moeda_empresa_w) and (vl_conv_adiantamento_w <> 0) and (cd_moeda_adiant_pago_w <> 0)) then
							
							if (vl_titulo_adiant_w < vl_saldo_titulo_w) then
								vl_cambial_passivo_adiant_w := vl_saldo_titulo_w - vl_titulo_adiant_w;
							elsif (vl_titulo_adiant_w > vl_saldo_titulo_w) then
								vl_cambial_ativo_adiant_w :=  vl_titulo_adiant_w - vl_saldo_titulo_w;
								vl_titulo_adiant_w := vl_saldo_titulo_w;
							end if;
							
						elsif (vl_titulo_adiant_w > vl_saldo_titulo_w) then
							vl_titulo_adiant_w := vl_saldo_titulo_w;
						
						end if;				
						
						if (vl_titulo_adiant_w > 0) then
							begin	
							insert into titulo_pagar_adiant(nr_titulo,
								nr_sequencia,
								nr_adiantamento,
								vl_adiantamento,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								nr_seq_trans_fin,
								dt_contabil,
								vl_cambial_ativo,
								vl_cambial_passivo)
							values (nr_titulo_w,
								nr_sequencia_adiant_w,
								nr_adiantamento_w,
								vl_titulo_adiant_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								coalesce(nr_seq_trans_financ_w,nr_seq_trans_adiant_w),
								coalesce(dt_contabil_adiant_w,dt_contabil_w),
								vl_cambial_ativo_adiant_w,
								vl_cambial_passivo_adiant_w);

								
							CALL atualiza_adiantamento_pago(nr_titulo_w,
										nr_adiantamento_w,
										vl_titulo_adiant_w,
										nr_sequencia_adiant_w,
										nm_usuario_p,
										'I');
							if (coalesce(philips_param_pck.get_cd_pais,1) = 2) and (ie_atualiza_trib_adiant_w = 'S') then -- aamfirmo OS 1049260. Para o BR nunca fez, por isso coloquei so para o MX porque o solicitando foi o San Javier.
								CALL atualiza_tributo_adiant_mx(nr_titulo_w, nr_sequencia_adiant_w, nm_usuario_p);
							end if;	
							
							end;
						end if;

					/* ratear entre os titulos */

					elsif (ie_rateio_adiant_w = 'R') then
					
						vl_titulo_adiant_w	:= dividir_sem_round(vl_titulo_w,vl_total_nota_w) * vl_vinculado_w;

						if (vl_titulo_adiant_w > 0) then

							select	coalesce(max(nr_sequencia), 0) + 1
							into STRICT	nr_sequencia_adiant_w
							from	titulo_pagar_adiant
							where	nr_titulo	= nr_titulo_w;
		
							insert into titulo_pagar_adiant(nr_titulo,
								nr_sequencia,
								nr_adiantamento,
								vl_adiantamento,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								nr_seq_trans_fin,
								dt_contabil)
							values (nr_titulo_w,
								nr_sequencia_adiant_w,
								nr_adiantamento_w,
								vl_titulo_adiant_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								coalesce(nr_seq_trans_financ_w,nr_seq_trans_adiant_w),
								dt_contabil_w);
		
							CALL atualiza_adiantamento_pago(nr_titulo_w,
										nr_adiantamento_w,
										vl_titulo_adiant_w,
										nr_sequencia_adiant_w,
										nm_usuario_p,
										'I');
						end if;
					end if;
				end loop;
				close c05;
			end if;

			/*anderson 25/09/2006 -os41481- inclui o if abaixo para identificar se ja gerou titulo para desp. adic.*/

			if (ie_despesa_adic_w = 'N') then

			/*	despesas adicionais		*/

				open c060;
				loop
				fetch c060 into
					dt_vencimento_despesa_w,
					vl_documento_despesa_w,
					cd_cgc_despesa_w,
					nr_documento_despesa_w;
				EXIT WHEN NOT FOUND; /* apply on c060 */
					begin
					ie_despesa_adic_w := 'S';

					select	nextval('titulo_pagar_seq')
					into STRICT	nr_titulo_desp_w
					;

					/* ricardo 05/04/2006 - a pedido do marcus, inclui em todos os inserts da titulo pagar o nr_lote_transf_trib como 0 (zero) */

					select	max(cd_tipo_baixa)
					into STRICT	cd_tipo_baixa_neg_w
					from	pessoa_juridica_estab
					where	cd_cgc			= cd_cgc_despesa_w
					and	cd_estabelecimento	= cd_estabelecimento_w;

					insert into titulo_pagar(
				    		nr_titulo, cd_estabelecimento,	dt_atualizacao,
						nm_usuario, dt_emissao,	dt_contabil,
						dt_vencimento_original, dt_vencimento_atual,
						vl_titulo, vl_saldo_titulo, vl_saldo_juros,
						vl_saldo_multa, cd_moeda, tx_juros,
						tx_multa, cd_tipo_taxa_juro, cd_tipo_taxa_multa,
						tx_desc_antecipacao, ie_situacao, ie_origem_titulo,
						ie_tipo_titulo,	nr_seq_nota_fiscal,
						cd_cgc, nr_documento,	ie_desconto_dia, nr_lote_contabil,
						ie_status_tributo, nr_lote_transf_trib, ds_compl_contab, 
						cd_estab_financeiro, cd_tipo_baixa_neg, nr_seq_lote_res_pls, nr_seq_proj_rec, nr_seq_classe, ie_status)
					values (
						nr_titulo_desp_w, cd_estabelecimento_w, clock_timestamp(),
						nm_usuario_p, dt_emissao_w, dt_contabil_w,
						dt_vencimento_despesa_w, dt_vencimento_despesa_w,
						vl_documento_despesa_w, vl_documento_despesa_w, 0,
						0, cd_moeda_w,	tx_juros_w,
						tx_multa_w, 1, 1,
						0,
						'A',              /* situacao aberto */
						ie_origem_titulo_w,                /* origem nota fiscal */
						coalesce(ie_tipo_titulo_operacao_w,0),                /* tipo nota fiscal */
						nr_sequencia_w,
						cd_cgc_despesa_w, nr_documento_despesa_w, 'N', 0, 'N', 0, 
						ds_repasses_w, cd_estab_financeiro_w, coalesce(cd_tipo_baixa_oc_w,cd_tipo_baixa_neg_w), nr_seq_lote_res_pls_w, nr_seq_proj_rec_w, 
						coalesce(nr_seq_classificacao_w,nr_seq_classe_tit_pagar_w),'D');
					CALL atualizar_inclusao_tit_pagar(nr_titulo_desp_w, nm_usuario_p);

					nr_seq_classif_w	:= 0;

					open	c030;
					loop
					fetch	c030 into
						cd_conta_contabil_w,
						cd_centro_custo_w,
						nr_seq_conta_financ_w,
						vl_titulo_w,
						nr_contrato_w;
					EXIT WHEN NOT FOUND; /* apply on c030 */

						nr_seq_classif_w	:= nr_seq_classif_w + 1;
						vl_titulo_w		:= dividir_sem_round(coalesce(vl_documento_despesa_w,0),coalesce(vl_total_nota_w,0)) * coalesce(vl_titulo_w,0);

						if (coalesce(vl_titulo_w,0)	> coalesce(vl_documento_despesa_w,0)) then

							vl_titulo_w	:= coalesce(vl_documento_despesa_w,0);

						end if;

						insert	into titulo_pagar_classif(nr_titulo,
							nr_sequencia,
							vl_titulo,
							dt_atualizacao,
							nm_usuario,
							cd_conta_contabil,
							cd_centro_custo,
							nr_seq_conta_financ,
							nr_contrato)
						values (nr_titulo_desp_w,
							nr_seq_classif_w,
							coalesce(vl_titulo_w,0),
							clock_timestamp(),
							nm_usuario_p,
							cd_conta_contabil_w,
							cd_centro_custo_w,
							nr_seq_conta_financ_w,
							nr_contrato_w);

					end	loop;
					close	c030;

					end;
				end loop;
				close c060;
			end if;
			
			insert	into	titulo_pagar_classif_ops(	nr_sequencia,
					vl_classificacao,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_segurado,
					ie_tipo_item,
					nr_seq_tipo_lanc,
					nr_titulo,
					nr_seq_sca)
				(SELECT	nextval('titulo_pagar_classif_ops_seq'),
					vl_classificacao,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_segurado,
					ie_tipo_item,
					nr_seq_tipo_lanc,
					nr_titulo_w,
					nr_seq_sca
				from	nota_fiscal_classif_ops
				where	nr_seq_nota	= nr_sequencia_p);
				
			
			update	nota_fiscal
			set	dt_atualizacao_cp_cr 	= clock_timestamp()
			where	nr_sequencia 		= nr_sequencia_p
			and	ie_contas_pagar_w	= 'S';
			
			/* Projeto MXM (7001)  - Exportar cadastro pessoa */

			CALL gravar_agend_integracao(565,'CD_PESSOA_JURIDICA='||null||';CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';'); --Cliente
			/*O fornecedor ou sera pessoa fisica, ou sera pessoa juridica, nunca os dois ao mesmo tempo, nem tao pouco sem os dois tipos*/

			if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
				CALL gravar_agend_integracao(566,'CD_PESSOA_JURIDICA='||null||';CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';'); --Fornecedor					
			else
				CALL gravar_agend_integracao(566,'CD_PESSOA_JURIDICA='||cd_cgc_w||';CD_PESSOA_FISICA='||null||';'); --Fornecedor			
			end if;
			/* Projeto MXM (7001)  - Exportar titulo a pagar */

			CALL gravar_agend_integracao(568,'NR_SEQUENCIA='||nr_sequencia_p||';');
			
			if (nr_integracao_w < 1) then
				nr_integracao_w := 1;
				/* Projeto MXM (7077)  - Exportar titulo a pagar */

				if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
					CALL gravar_agend_integracao(556,'CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';CD_PESSOA_JURIDICA='||null||';'); --Fornecedor
					CALL gravar_agend_integracao(562,'CD_PESSOA_FISICA='||cd_pessoa_fisica_w||';'); --Cliente
				else
					CALL gravar_agend_integracao(556,'CD_PESSOA_JURIDICA='||cd_cgc_w||';CD_PESSOA_FISICA='||null||';'); --Fornecedor
				end if;
				CALL gravar_agend_integracao(560,'NR_SEQUENCIA='||nr_sequencia_p||';');
			end if;

			end;
		elsif (ie_entrada_saida_w = 'E') and
			((ie_acao_nf_w = '2') or (ie_situacao_nf_w = '9')) then  /* edgar 15/09/2004, os 10949, se a nota for cancelada cancelar o tit */

			/* estorno da nota fiscal = cancelamento */

			begin
			open c020;
			loop
				fetch c020 into
					nr_titulo_w,
					vl_titulo_w,
					vl_titulo_estrang_w,
					cd_moeda_w,
					vl_saldo_atual_w,
					cont_w;
				EXIT WHEN NOT FOUND; /* apply on c020 */

				if (obter_dados_tit_pagar(nr_titulo_w, 'VT') <> vl_saldo_titulo_w)  then
					/* o titulo nr_titulo_w ja possui baixa ou saldo alterado! */

					CALL wheb_mensagem_pck.exibir_mensagem_abort(186040,'NR_TITULO_W='||nr_titulo_w);
				end if;


				begin
				select (coalesce(max(nr_sequencia),0) + 1)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_w;
				exception
					when others then
						nr_seq_baixa_w	:= 1;
				end;

				/* edgar 16/01/2008, os 79320, tratar tipo de baixa de devolucao */

				select	coalesce(max(cd_tipo_baixa_devolucao), 2)
				into STRICT	cd_tipo_baixa_devolucao_w
				from	parametros_contas_pagar
				where	cd_estabelecimento		= cd_estabelecimento_w;
				
				/* Projeto Multimoeda - Calcula os valores para gravar na baixa quando moeda estrangeira. */

				if (coalesce(ie_nota_estrang_w,'N') = 'S') then
					/* Obtem a cotacao mais recente cadastrada para a moeda */

					select	max(vl_cotacao)
					into STRICT	vl_cotacao_atual_w
					from	cotacao_moeda
					where	cd_moeda = cd_moeda_estrang_w
					and	dt_cotacao = 	(SELECT	max(dt_cotacao)
								from	cotacao_moeda
								where	cd_moeda = cd_moeda_estrang_w
								and	PKG_DATE_UTILS.start_of(dt_cotacao, 'dd', 0) <= PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0));
								
					select 	coalesce(sum(a.vl_baixa_estrang),0)
					into STRICT	vl_total_baixa_estrang_w
					from	titulo_pagar_baixa a
					where	a.nr_titulo = nr_titulo_w;
					
					vl_saldo_estrang_w := vl_titulo_estrang_w - vl_total_baixa_estrang_w;
					
					vl_baixa_estrang_w := coalesce(vl_saldo_atual_w,0) / coalesce(vl_cotacao_atual_w,vl_cotacao_w);
					vl_complemento_w := coalesce(vl_saldo_atual_w,0) - vl_baixa_estrang_w;
					
					if (vl_baixa_estrang_w > vl_saldo_estrang_w) then
						vl_cambial_passivo_w := vl_baixa_estrang_w - vl_saldo_estrang_w;
					elsif (vl_baixa_estrang_w < vl_saldo_estrang_w) then
						vl_cambial_ativo_w := vl_saldo_estrang_w - vl_baixa_estrang_w;
					end if;
					
				else
					vl_baixa_estrang_w := null;
					vl_complemento_w := null;
					vl_cotacao_atual_w := null;
				end if;

				insert into titulo_pagar_baixa(
					nr_titulo,
					nr_sequencia,
					dt_baixa,               
					cd_moeda,               
					dt_atualizacao,         
					nm_usuario,             
					cd_tipo_baixa,          
					ie_acao,                
					vl_descontos,
 					vl_outras_deducoes,
 					vl_juros,
 					vl_multa,               
 					vl_outros_acrescimos,   
 					vl_pago,                
					vl_baixa,               
					vl_devolucao,           
					nr_seq_devolucao,
					vl_baixa_estrang,
					vl_complemento,
					vl_cotacao,
					vl_cambial_passivo,
					vl_cambial_ativo)
				values (
					nr_titulo_w,
					nr_seq_baixa_w,
					clock_timestamp(),
					coalesce(cd_moeda_estrang_w,cd_moeda_w),
					clock_timestamp(),
					nm_usuario_p,
					cd_tipo_baixa_devolucao_w,		/* estorno de nota fiscal */
 
					'I',          				/* acao baixa */
					0,0,0,0,0,0,
					vl_saldo_atual_w,
					vl_saldo_atual_w,
					nr_sequencia_w,
					vl_saldo_estrang_w,
					vl_complemento_w,
					vl_cotacao_w,
					vl_cambial_passivo_w,
					vl_cambial_ativo_w);

				select	vl_saldo_titulo
				into STRICT	vl_saldo_atual_w
				from	titulo_pagar
				where	nr_titulo	= nr_titulo_w;
			
				update	titulo_pagar
			   	set 	vl_saldo_titulo = vl_saldo_titulo - vl_saldo_atual_w,
					ie_situacao	= 'C', /* elemar 11/06/03 troquei de 'L' para 'C' */
			             	dt_liquidacao	= clock_timestamp()
                        	where	nr_titulo		= nr_titulo_w;

				/* ricardo 29/05/2004 - cancelamento dos titulos de imposto ao cancelar a nota fiscal	*/

				CALL cancelar_titulo_pagar_imposto(nr_titulo_w, nm_usuario_p);
				
				CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);

			end loop;
			close c020;
			end;
		elsif (ie_entrada_saida_w = 'S') and (ie_acao_nf_w = '1') then
			/* nota fiscal de devolucao  */

			begin

			if (ie_devolucao_nf_w = 'A') then
			
				select	max(ds_observacao)
				into STRICT	ds_observacao_w
				from	nota_fiscal_item
				where	nr_sequencia = nr_sequencia_p
				and		(ds_observacao IS NOT NULL AND ds_observacao::text <> '');
				
				select	count(*)
				into STRICT	qt_parcelas_w
				from	nota_fiscal_venc
				where	nr_sequencia = nr_sequencia_p;
				
				

				ds_observacao_w	:=	WHEB_MENSAGEM_PCK.get_texto(302577,
								'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W ||
								';DS_OBSERVACAO_W='|| DS_OBSERVACAO_W ||
								';QT_PARCELAS_W='|| QT_PARCELAS_W);
				/*NOTA FISCAL DE DEVOLUCAO: #@NR_NOTA_FISCAL_W#@
				#@DS_OBSERVACAO_W#@
				QUANTIDADE DE PARCELAS: #@QT_PARCELAS_W#@*/
				
				select	nextval('adiantamento_pago_seq')
				into STRICT	nr_adiantamento_w
				;

				if (nr_seq_tipo_adiant_nf_dev_w IS NOT NULL AND nr_seq_tipo_adiant_nf_dev_w::text <> '') then
				
					  select 	max(nr_seq_trans_fin)
					  into STRICT		nr_seq_trans_fin_dev_w
					  from 		tipo_adiant_pago
					  where		nr_sequencia = nr_seq_tipo_adiant_nf_dev_w;
				
				end if;
				
				insert into adiantamento_pago(
					nr_adiantamento,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					dt_adiantamento,
					vl_adiantamento,
					vl_saldo,
					cd_moeda,
					cd_pessoa_fisica,
					cd_cgc,
					ds_observacao,
					nr_seq_nf,
					nr_seq_tipo,
					nr_seq_trans_fin)
				values (
					nr_adiantamento_w,
					cd_estabelecimento_w,
					clock_timestamp(),
					nm_usuario_p,
					dt_entrada_saida_w,
					vl_vencimento_w,
					vl_vencimento_w,
					cd_moeda_w,
					cd_pessoa_fisica_w,
					cd_cgc_w,
					substr(ds_observacao_w,1,255),
					nr_sequencia_p,
					nr_seq_tipo_adiant_nf_dev_w,
					nr_seq_trans_fin_dev_w);

				if (ie_vinc_adiant_nf_dev_w = 'S') then	/* ahoffelder - os 210204 - 02/06/2010 */
					select	max(a.vl_total_nota)
					into STRICT	vl_nota_origem_w
					from	nota_fiscal a
					where	a.nr_sequencia	= nr_sequencia_ref_w;
					
					select	sum(a.vl_saldo_titulo)
					into STRICT	vl_saldo_tp_nfs_origem_w
					from	titulo_pagar a
					where	a.nr_seq_nota_fiscal = nr_sequencia_ref_w
					and		coalesce(nr_seq_tributo::text, '') = ''; --Nao considerar titulos de tributo gerados
					
					open c020;
					loop
					fetch c020 into
						nr_titulo_w,
						vl_titulo_w,
						vl_titulo_estrang_w,
						cd_moeda_w,
						vl_saldo_atual_w,
						cont_w;
					EXIT WHEN NOT FOUND; /* apply on c020 */
						/* ratear o valor do adiantamento */

						
						vl_titulo_adiant_w	:=	vl_vencimento_w * dividir_sem_round(vl_titulo_w,coalesce(vl_saldo_tp_nfs_origem_w,vl_nota_origem_w));

						if (vl_titulo_adiant_w > vl_saldo_atual_w) then

							vl_titulo_adiant_w	:= vl_saldo_atual_w;

						end if;
						
						select	max(a.vl_saldo)
						into STRICT	vl_saldo_adiantamento_w
						from	adiantamento_pago a
						where	a.nr_adiantamento = nr_adiantamento_w;
						
						if (coalesce(vl_titulo_adiant_w,0) > coalesce(vl_saldo_adiantamento_w,0)) then
							vl_titulo_adiant_w := vl_saldo_adiantamento_w;		
						end if;

						select	coalesce(max(nr_sequencia), 0) + 1
						into STRICT	nr_sequencia_adiant_w
						from	titulo_pagar_adiant
						where	nr_titulo	= nr_titulo_w;
	
						insert	into titulo_pagar_adiant(ds_observacao,
							dt_atualizacao,
							nm_usuario,
							nr_adiantamento,
							nr_sequencia,
							nr_titulo,
							vl_adiantamento,
							nr_seq_trans_fin)
						values (	Wheb_mensagem_pck.get_Texto(302614, 'NR_SEQUENCIA_P='|| NR_SEQUENCIA_P),/*'VINCULO GERADO A PARTIR DA NOTA FISCAL DE DEVOLUcaO ' || NR_SEQUENCIA_P,*/
							clock_timestamp(),
							nm_usuario_p,
							nr_adiantamento_w,
							nr_sequencia_adiant_w,
							nr_titulo_w,
							vl_titulo_adiant_w,
							nr_seq_trans_fin_dev_w);

						CALL atualizar_saldo_tit_pagar(nr_titulo_w, nm_usuario_p);
						CALL gerar_w_tit_pag_imposto(nr_titulo_w, nm_usuario_p);

						select	obter_saldo_titulo_pagar(a.nr_titulo,clock_timestamp())
						into STRICT	vl_saldo_atual_w
						from	titulo_pagar a
						where	a.nr_titulo	= nr_titulo_w;

						if (vl_saldo_atual_w > 0) then	/* ahoffelder - os 276334 - 08/01/2011 */
							update	titulo_pagar
							set	ds_observacao_titulo	=
								WHEB_MENSAGEM_PCK.get_texto(302617,'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W ||';VL_TITULO_ADIANT_W='|| VL_TITULO_ADIANT_W), /*'O SALDO DESSE TiTULO FOI ABATIDO PELA NOTA DE DEVOLUcaO NR ' || nr_nota_fiscal_w || ' NO VALOR DE ' || vl_titulo_adiant_w || '.',*/
								nr_seq_classe	= nr_seq_classe_dev_nf_w
							where	nr_titulo	= nr_titulo_w;

						else

							update	titulo_pagar
							set	ds_observacao_titulo	=
								WHEB_MENSAGEM_PCK.get_texto(302618,'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W ||';VL_TITULO_ADIANT_W='|| VL_TITULO_ADIANT_W), /*'ESSE TiTULO FOI ANULADO PELA NOTA DE DEVOLUcaO NR ' || nr_nota_fiscal_w || ' NO VALOR DE ' || vl_titulo_adiant_w || '.',*/
								nr_seq_classe	= nr_seq_classe_dev_nf_w
							where	nr_titulo	= nr_titulo_w;

						end if;
					/*Atualizar o saldo do adiantamento a cada vinculacao e nao so no final*/
	
					CALL atualizar_saldo_adiant_pago(nr_adiantamento_w,nm_usuario_p);
					end loop;
					close c020;

					

				end if;
			else
				select  coalesce(max(a.vl_mercadoria), 0),
					coalesce(max(b.vl_total_nota), 0),
					coalesce(max(b.vl_mercadoria), 0)
				into STRICT    vl_mercadoria_w,
					vl_baixa_devolucao_w,
					vl_mercadoria_devolucao_w
				from    nota_fiscal a,
					nota_fiscal b
				where   a.nr_sequencia = b.nr_sequencia_ref
				and     b.nr_sequencia = nr_sequencia_p;

				if (vl_mercadoria_devolucao_w = vl_mercadoria_w or ie_devolucao_nf_w <> 'B') then
				  vl_baixa_devolucao_w := null;
				end if;
				
				/* edgar 18/06/2009, os 145281, tratar estorno do titulo */

				open c020;
				loop
				fetch c020 into
					nr_titulo_w,
					vl_titulo_w,
					vl_titulo_estrang_w,
					cd_moeda_w,
					vl_saldo_atual_w,
					cont_w;
				EXIT WHEN NOT FOUND; /* apply on c020 */
					vl_baixa_rateado_w := null;

					if (obter_dados_tit_pagar(nr_titulo_w, 'VT') <> vl_saldo_titulo_w)  then
						/* o titulo nr_titulo_w ja possui baixa ou saldo alterado! */

						CALL wheb_mensagem_pck.exibir_mensagem_abort(186040,'NR_TITULO_W='||nr_titulo_w);
					end if;

					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_baixa_w
					from	titulo_pagar_baixa
					where	nr_titulo	= nr_titulo_w;

					select	coalesce(max(cd_tipo_baixa_devolucao), 2)
					into STRICT	cd_tipo_baixa_devolucao_w
					from	parametros_contas_pagar
					where	cd_estabelecimento		= cd_estabelecimento_w;
					
					vl_total_baixa_w := coalesce(vl_baixa_devolucao_w, vl_saldo_atual_w);
					
					if (ie_devolucao_nf_w = 'B' and vl_mercadoria_devolucao_w < vl_mercadoria_w) then
						vl_baixa_rateado_w := vl_total_baixa_w / cont_w;
					end if;

					insert into titulo_pagar_baixa(
						nr_titulo,
						nr_sequencia,
						dt_baixa,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						cd_tipo_baixa,
						ie_acao,
						vl_descontos,
	 					vl_outras_deducoes,
 						vl_juros,
 						vl_multa,
 						vl_outros_acrescimos,
 						vl_pago,
						vl_baixa,
						vl_devolucao,
						nr_seq_devolucao)
					values (nr_titulo_w,
						nr_seq_baixa_w,
						clock_timestamp(),
						cd_moeda_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tipo_baixa_devolucao_w,
						'I',
						0,0,0,0,0,0,
						coalesce(vl_baixa_rateado_w, vl_total_baixa_w),
						coalesce(vl_baixa_rateado_w, vl_total_baixa_w),
						nr_sequencia_w);

					CALL atualizar_saldo_tit_pagar(nr_titulo_w, nm_usuario_p);
					CALL gerar_w_tit_pag_imposto(nr_titulo_w, nm_usuario_p);

					if (ie_devolucao_nf_w = 'B' and vl_mercadoria_devolucao_w < vl_mercadoria_w) then
						update  titulo_pagar
						set     ie_situacao   = 'A'
						where   nr_titulo     = nr_titulo_w;
					else
						update  titulo_pagar
						set     ie_situacao   = 'C',
							nr_seq_classe = nr_seq_classe_dev_nf_w
						where   nr_titulo     = nr_titulo_w;

						CALL cancelar_titulo_pagar_imposto(nr_titulo_w, nm_usuario_p);
					end if;
					
					CALL gerar_alerta_baixa_tit_pagar(nr_titulo_w,nr_seq_baixa_w,cd_estabelecimento_w,nm_usuario_p);

				end loop;
				close c020;
			end if;

			update	nota_fiscal
			set	dt_atualizacao_cp_cr 	= clock_timestamp()
			where	nr_sequencia 		= nr_sequencia_p;

			end;
		elsif (ie_entrada_saida_w = 'S') and (ie_acao_nf_w = '2') then
			/* estorno de nota fiscal de devolucao  */

			begin
			if (nr_sequencia_ref_w > 0) then
				select	coalesce(max(nr_adiantamento),0)
				into STRICT	nr_adiantamento_w
				from 	adiantamento_pago
				where	vl_adiantamento 	= vl_vencimento_w
				and 	coalesce(cd_cgc,0)		= coalesce(cd_cgc_w,0)
				and 	coalesce(cd_pessoa_fisica,0)	= coalesce(cd_pessoa_fisica_w,0)
				and	coalesce(dt_baixa::text, '') = ''
				and	nr_seq_nf		= nr_sequencia_ref_w;
			end if;
			
			if (nr_adiantamento_w 	= 0) then
				select	coalesce(max(nr_adiantamento),0)
				into STRICT	nr_adiantamento_w
				from 	adiantamento_pago
				where	vl_adiantamento 	= vl_vencimento_w
				and 	coalesce(cd_cgc,0)		= coalesce(cd_cgc_w,0)
				and 	coalesce(cd_pessoa_fisica,0)	= coalesce(cd_pessoa_fisica_w,0)
				and	coalesce(dt_baixa::text, '') = '';
			
			end if;
			--insert into log_XXtasy values(sysdate, 'MARCUS',999, nr_adiantamento_w);
			if (nr_adiantamento_w > 0) then
				begin

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_adiant_pago_dev_w
				from	adiant_pago_dev
				where	nr_adiantamento	= nr_adiantamento_w;
				
				if (nr_seq_adiant_pago_dev_w	< 1000) then
					nr_seq_adiant_pago_dev_w	:= 1000;
				end if;
				
				insert into adiant_pago_dev(
					nr_adiantamento,
					nr_sequencia,
					dt_devolucao,
					vl_devolucao,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					ds_motivo_dev,
					nr_lote_contabil,
					nr_seq_trans_fin)
				values (
					nr_adiantamento_w,
					nr_seq_adiant_pago_dev_w,
					dt_entrada_saida_w,
					vl_vencimento_w,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					Wheb_mensagem_pck.get_Texto(302622), /*'ESTORNO NF',*/
					0,
					null);
				CALL atualizar_saldo_adiant_pago(nr_adiantamento_w, nm_usuario_p);
				end;
			end if;
			update	nota_fiscal
			set	dt_atualizacao_cp_cr	= clock_timestamp()
			where	nr_sequencia 		= nr_sequencia_p
			and	ie_contas_pagar_w	= 'S';
			end;
		end if;
		end;
end loop;
close c010;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_pagar_nf ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

