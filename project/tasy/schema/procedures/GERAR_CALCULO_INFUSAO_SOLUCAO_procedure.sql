-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_calculo_infusao_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_acao_p bigint, dt_acao_p timestamp, nr_seq_acao_p bigint) AS $body$
DECLARE


qt_volume_infundir_w		double precision;
qt_volume_infundir_etapa_w	double precision;
nr_etapas_orig_w		smallint;
qt_volume_etapa_orig_w		double precision;
qt_veloc_infusao_w		double precision;
ie_unidade_infusao_w		varchar(3);
qt_tempo_infundir_w		double precision;
qt_tempo_infundir_etapa_w	double precision;
dt_prev_termino_w		timestamp := null;
qt_veloc_ant_w			double precision;
dt_veloc_ant_w			timestamp;
qt_volume_parcial_w		double precision;
qt_tempo_infusao_w		double precision;
qt_volume_infusao_w		double precision;
dt_prev_termino_etapa_w		timestamp := null;
ie_forma_infusao_w		varchar(15);
ie_status_solucao_w		varchar(15);
nr_seq_ult_prev_w		bigint;
nr_seq_evento_w			bigint;
qt_veloc_infusao_ww		double precision;
dados_solucao_w			double precision;


BEGIN

if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (ie_acao_p IS NOT NULL AND ie_acao_p::text <> '') and (dt_acao_p IS NOT NULL AND dt_acao_p::text <> '') and (nr_seq_acao_p IS NOT NULL AND nr_seq_acao_p::text <> '') then
	if (ie_tipo_solucao_p = 1) then -- solucoes
		if (ie_acao_p in (1,3)) then -- iniciar
			/* obter dados solucao */

			select	ie_forma_infusao,
				obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'VR') qt_volume_infundir,
				coalesce(obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, nr_seq_acao_p, 'VAS'),qt_dosagem) qt_veloc_infusao,
				ie_tipo_dosagem ie_unidade_infusao,
				coalesce(qt_solucao_total, 0),
				nr_etapas,
				qt_volume
			into STRICT	ie_forma_infusao_w,
				qt_volume_infundir_w,
				qt_veloc_infusao_w,
				ie_unidade_infusao_w,
				qt_volume_infundir_etapa_w,
				nr_etapas_orig_w,
				qt_volume_etapa_orig_w
			from	prescr_solucao
			where	nr_prescricao	= nr_prescricao_p
			and	nr_seq_solucao	= nr_seq_solucao_p;

			-- Conforme OS 774121, a forma de obter valor para qt_volume_infundir_etapa_w gerava erro quando a quantidade do volume era 0
			-- -------------------------------------------------------------------------------------------------------------------------------------------------
			dados_solucao_w := obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao_p, nr_seq_solucao_p, 'VID');
			if (MOD(qt_volume_infundir_etapa_w, (dados_solucao_w + 1)) = qt_volume_infundir_etapa_w) then
				qt_volume_infundir_etapa_w := 0;
			else
				if (qt_volume_etapa_orig_w > 0) then
					qt_volume_infundir_etapa_w := (qt_volume_etapa_orig_w * (TRUNC(dados_solucao_w / qt_volume_etapa_orig_w) + 1) - dados_solucao_w);
					--(qt_volume_etapa_orig_w * (TRUNC(dados_solucao_w / qt_volume_etapa_orig_w) + 1) - dados_solucao_w);
				else
					qt_volume_etapa_orig_w := 0;
				end if;
			end if;
			-- -------------------------------------------------------------------------------------------------------------------------------------------------
			Select	max(nr_sequencia)
			into STRICT	nr_seq_evento_w
			from	prescr_solucao_evento
			where	nr_prescricao	= nr_prescricao_p
			and 	nr_seq_solucao	= nr_seq_solucao_p
			and	coalesce(ie_evento_valido,'S') = 'S'
			and	(ie_tipo_dosagem IS NOT NULL AND ie_tipo_dosagem::text <> '');

			if (nr_seq_evento_w IS NOT NULL AND nr_seq_evento_w::text <> '') then
				Select	coalesce(max(ie_tipo_dosagem),ie_unidade_infusao_w)
				into STRICT	ie_unidade_infusao_w
				from	prescr_solucao_evento
				where	nr_sequencia = nr_seq_evento_w;
			end if;

			if (qt_volume_infundir_w = 0) and (qt_volume_infundir_etapa_w = 0) then
				qt_volume_infundir_etapa_w	:= coalesce(qt_volume_etapa_orig_w,0);
				qt_volume_infundir_w		:= coalesce(qt_volume_etapa_orig_w,0) * coalesce(nr_etapas_orig_w,1);
			end if;

			qt_veloc_infusao_ww	:= qt_veloc_infusao_w;

			/* calcular velocidade infusao ml/h */

			if (ie_unidade_infusao_w = 'gtm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,20) * 60;
			elsif (ie_unidade_infusao_w = 'mgm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,50) * 60;
			else
				qt_veloc_infusao_w	:= qt_veloc_infusao_w;
			end if;

			/* calcular tempo previsto termino infusao */

			if (ie_forma_infusao_w = 'T') then
				qt_tempo_infundir_etapa_w	:= dividir(qt_veloc_infusao_ww,60);
				qt_tempo_infundir_w		:= qt_tempo_infundir_etapa_w * dividir(qt_volume_infundir_w, qt_volume_infundir_etapa_w);
			else
				qt_tempo_infundir_w		:= dividir(qt_volume_infundir_w, qt_veloc_infusao_w);
				qt_tempo_infundir_etapa_w	:= dividir(qt_volume_infundir_etapa_w, qt_veloc_infusao_w);
			end if;


			/* calcular data prevista termino infusao */

			if (coalesce(qt_tempo_infundir_w,0) > 0) then
				dt_prev_termino_w	:= dt_acao_p + qt_tempo_infundir_w / 24;
			end if;
			if (coalesce(qt_tempo_infundir_etapa_w,0) > 0) then
				dt_prev_termino_etapa_w	:= dt_acao_p + qt_tempo_infundir_etapa_w / 24;
			end if;

			/*delete from rafa;
			insert into rafa values (
				nr_prescricao_p || ' - ' || nr_seq_solucao_p || ' - ' ||
				ie_acao_p || ' - ' || to_char(dt_acao_p,'dd/mm/yyyy hh24:mi:ss') || ' - ' || nr_seq_acao_p || ' - ' ||
				qt_veloc_infusao_ww || ' - ' || qt_veloc_infusao_w || ' - ' ||
				qt_volume_infundir_w || ' - ' || qt_volume_infundir_etapa_w || ' - ' ||
				qt_tempo_infundir_w || ' - ' || qt_tempo_infundir_etapa_w || ' - ' ||
				to_char(dt_prev_termino_w,'dd/mm/yyyy hh24:Mi:ss') || ' - ' || to_char(dt_prev_termino_etapa_w,'dd/mm/yyyy hh24:Mi:ss'));*/
			/* atualizar valores */

			update	prescr_solucao_evento
			set	qt_vol_restante		= qt_volume_infundir_w,
				dt_prev_termino		= dt_prev_termino_w,
				dt_prev_termino_etapa	= dt_prev_termino_etapa_w
			where	nr_sequencia		= nr_seq_acao_p;

			update	prescr_solucao
			set	dt_prev_prox_etapa	= dt_prev_termino_etapa_w
			where	nr_prescricao		= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_p;

			update	prescr_mat_hor
			set	dt_prev_fim_horario 	= dt_prev_termino_etapa_w
			where	nr_prescricao 		= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_p
			and	nr_sequencia 		= (	SELECT	max(nr_sequencia)
								from	prescr_mat_hor
								where	nr_prescricao 	= nr_prescricao_p
								and	nr_seq_solucao 	= nr_seq_solucao
								and	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
								and	coalesce(dt_fim_horario::text, '') = ''
								and	coalesce(dt_suspensao::text, '') = ''
								);
		elsif (ie_acao_p = 5) then -- ajustar velocidade infusao
			/* obter dados velocidade atual */

			select	coalesce(obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'VR'),0) qt_volume_infundir,
				obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, nr_seq_acao_p, 'VAS') qt_veloc_infusao,
				ie_tipo_dosagem ie_unidade_infusao,
				obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, nr_seq_acao_p, 'VA') qt_veloc_ant,
				to_date(obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, nr_seq_acao_p, 'DVA'),'dd/mm/yyyy hh24:mi:ss') dt_veloc_ant,
				obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, nr_seq_acao_p, 'VP') qt_volume_parcial,
				CASE WHEN MOD(qt_solucao_total,obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'VID')+1)=qt_solucao_total THEN 0  ELSE (qt_volume * (TRUNC(obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'VID') / qt_volume) + 1) - obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_seq_solucao, 'VID')) END  qt_volume_infundir_etapa,
				nr_etapas,
				qt_volume
			into STRICT	qt_volume_infundir_w,
				qt_veloc_infusao_w,
				ie_unidade_infusao_w,
				qt_veloc_ant_w,
				dt_veloc_ant_w,
				qt_volume_parcial_w,
				qt_volume_infundir_etapa_w,
				nr_etapas_orig_w,
				qt_volume_etapa_orig_w
			from	prescr_solucao
			where	nr_prescricao	= nr_prescricao_p
			and	nr_seq_solucao	= nr_seq_solucao_p;

			if (qt_volume_infundir_w = 0) and (qt_volume_infundir_etapa_w = 0) then
				qt_volume_infundir_etapa_w	:= coalesce(qt_volume_etapa_orig_w,0);
				qt_volume_infundir_w		:= coalesce(qt_volume_etapa_orig_w,0) * coalesce(nr_etapas_orig_w,1);
			end if;

			qt_veloc_infusao_ww	:= qt_veloc_infusao_w;

			/* calcular velocidade infusao ml/h */

			if (ie_unidade_infusao_w = 'gtm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,20) * 60;
				qt_veloc_ant_w		:= dividir(qt_veloc_ant_w,20) * 60;
			elsif (ie_unidade_infusao_w = 'mgm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,50) * 60;
				qt_veloc_ant_w 		:= dividir(qt_veloc_ant_w,50) * 60;
			else
				qt_veloc_infusao_w	:= qt_veloc_infusao_w;
				qt_veloc_ant_w		:= qt_veloc_ant_w;
			end if;

			/* calcular tempo infusao velocidade atual */

			qt_tempo_infusao_w	:= (dt_acao_p - dt_veloc_ant_w) * 1440 / 60;

			/* calcular volume infundido atual (tempo decorrido x velocidade atual) */

			qt_volume_infusao_w	:= (qt_veloc_ant_w * qt_tempo_infusao_w) + qt_volume_parcial_w;

			/* calcular tempo previsto termino infusao */

			qt_tempo_infundir_w		:= dividir(qt_volume_infundir_w - qt_volume_infusao_w, qt_veloc_infusao_w);
			qt_tempo_infundir_etapa_w	:= dividir(qt_volume_infundir_etapa_w - qt_volume_infusao_w, qt_veloc_infusao_w);

			/* calcular data prevista termino infusao */

			if (coalesce(qt_tempo_infundir_w,0) > 0) then
				dt_prev_termino_w	:= dt_acao_p + qt_tempo_infundir_w / 24;
			end if;
			if (coalesce(qt_tempo_infundir_etapa_w,0) > 0) then
				dt_prev_termino_etapa_w	:= dt_acao_p + qt_tempo_infundir_etapa_w / 24;
			end if;

			/*delete from rafa;
			insert into rafa values (
				nr_prescricao_p || ' - ' || nr_seq_solucao_p || ' - ' ||
				ie_acao_p || ' - ' || to_char(dt_acao_p,'dd/mm/yyyy hh24:mi:ss') || ' - ' || nr_seq_acao_p || ' - ' ||
				qt_veloc_ant_w || ' - ' || qt_veloc_infusao_ww || ' - ' || qt_veloc_infusao_w || ' - ' ||
				qt_volume_infundir_w || ' - ' || qt_volume_infundir_etapa_w || ' - ' || qt_volume_parcial_w || ' - ' ||
				qt_tempo_infusao_w || ' - ' || qt_tempo_infundir_w || ' - ' || qt_tempo_infundir_etapa_w || ' - ' ||
				to_char(dt_prev_termino_w,'dd/mm/yyyy hh24:Mi:ss') || ' - ' || to_char(dt_prev_termino_etapa_w,'dd/mm/yyyy hh24:Mi:ss'));*/
			/* atualizar valores */

			update	prescr_solucao_evento
			set	qt_vol_parcial		= qt_volume_infusao_w,
				qt_vol_restante		= qt_volume_infundir_w - qt_volume_infusao_w,
				dt_prev_termino		= dt_prev_termino_w,
				dt_prev_termino_etapa 	= dt_prev_termino_etapa_w
			where	nr_sequencia		= nr_seq_acao_p;

			update	prescr_solucao
			set	dt_prev_prox_etapa	= dt_prev_termino_etapa_w
			where	nr_prescricao		= nr_prescricao_p
			and	nr_seq_solucao		= nr_seq_solucao_p;
		else
			if (ie_acao_p in (2,4,7,10,11)) then
				update	prescr_solucao
				set	dt_prev_prox_etapa	 = NULL
				where	nr_prescricao		= nr_prescricao_p
				and	nr_seq_solucao		= nr_seq_solucao_p;
			elsif (ie_acao_p = 6) then
				ie_status_solucao_w	:= obter_status_solucao_prescr(1, nr_prescricao_p, nr_seq_solucao_p);

				if (ie_status_solucao_w = 'N') then
					update	prescr_solucao
					set	dt_prev_prox_etapa	 = NULL
					where	nr_prescricao		= nr_prescricao_p
					and	nr_seq_solucao		= nr_seq_solucao_p;
				elsif (ie_status_solucao_w in ('I','R')) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_ult_prev_w
					from	prescr_solucao_evento
					where	nr_prescricao		= nr_prescricao_p
					and	nr_seq_solucao		= nr_seq_solucao_p
					and	ie_tipo_solucao		= ie_tipo_solucao_p
					and	ie_evento_valido	= 'S'
					and	(dt_prev_termino_etapa IS NOT NULL AND dt_prev_termino_etapa::text <> '');

					if (coalesce(nr_seq_ult_prev_w,0) > 0) then
						begin
						select	dt_prev_termino_etapa
						into STRICT	dt_prev_termino_etapa_w
						from	prescr_solucao_evento
						where	nr_sequencia = nr_seq_ult_prev_w;

						update	prescr_solucao
						set	dt_prev_prox_etapa	= dt_prev_termino_etapa_w
						where	nr_prescricao		= nr_prescricao_p
						and	nr_seq_solucao		= nr_seq_solucao_p;
						end;
					else
						update	prescr_solucao
						set	dt_prev_prox_etapa	 = NULL
						where	nr_prescricao		= nr_prescricao_p
						and	nr_seq_solucao		= nr_seq_solucao_p;
					end if;
				end if;
			end if;
		end if;

	elsif (ie_tipo_solucao_p = 2) then -- solucoes
		if (ie_acao_p in (1,3)) then -- iniciar
			/* obter dados solucao */

			select	ie_forma_infusao,
				obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VR') qt_volume_infundir,
				coalesce(obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, nr_seq_acao_p, 'VAS'),qt_vel_infusao) qt_veloc_infusao,
				'mlh' ie_unidade_infusao,
				CASE WHEN MOD(qt_dose * nr_ocorrencia,obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VID')+1)=qt_dose * nr_ocorrencia THEN 0  ELSE (qt_dose * (TRUNC(obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VID') / QT_DOSE) + 1) - obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VID')) END  qt_volume_infundir_etapa,
				nr_ocorrencia,
				qt_dose
			into STRICT	ie_forma_infusao_w,
				qt_volume_infundir_w,
				qt_veloc_infusao_w,
				ie_unidade_infusao_w,
				qt_volume_infundir_etapa_w,
				nr_etapas_orig_w,
				qt_volume_etapa_orig_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_solucao_p;

			if (qt_volume_infundir_w = 0) and (qt_volume_infundir_etapa_w = 0) then
				qt_volume_infundir_etapa_w	:= coalesce(qt_volume_etapa_orig_w,0);
				qt_volume_infundir_w		:= coalesce(qt_volume_etapa_orig_w,0) * coalesce(nr_etapas_orig_w,1);
			end if;

			qt_veloc_infusao_ww	:= qt_veloc_infusao_w;

			/* calcular velocidade infusao ml/h */

			if (ie_unidade_infusao_w = 'gtm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,20) * 60;
			elsif (ie_unidade_infusao_w = 'mgm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,50) * 60;
			else
				qt_veloc_infusao_w	:= qt_veloc_infusao_w;
			end if;

			/* calcular tempo previsto termino infusao */

			if (ie_forma_infusao_w = 'T') then
				qt_tempo_infundir_etapa_w	:= dividir(qt_veloc_infusao_ww,60);
				qt_tempo_infundir_w		:= qt_tempo_infundir_etapa_w * dividir(qt_volume_infundir_w, qt_volume_infundir_etapa_w);
			else
				qt_tempo_infundir_w		:= dividir(qt_volume_infundir_w, qt_veloc_infusao_w);
				qt_tempo_infundir_etapa_w	:= dividir(qt_volume_infundir_etapa_w, qt_veloc_infusao_w);
			end if;

			/* calcular data prevista termino infusao */

			if (coalesce(qt_tempo_infundir_w,0) > 0) then
				dt_prev_termino_w	:= dt_acao_p + qt_tempo_infundir_w / 24;
			end if;
			if (coalesce(qt_tempo_infundir_etapa_w,0) > 0) then
				dt_prev_termino_etapa_w	:= dt_acao_p + qt_tempo_infundir_etapa_w / 24;
			end if;

			/* atualizar valores */

			update	prescr_solucao_evento
			set	qt_vol_restante		= qt_volume_infundir_w,
				dt_prev_termino		= dt_prev_termino_w,
				dt_prev_termino_etapa	= dt_prev_termino_etapa_w
			where	nr_sequencia		= nr_seq_acao_p;

			update	prescr_material
			set	dt_prev_prox_etapa	= dt_prev_termino_etapa_w
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_seq_solucao_p;

			update	prescr_mat_hor
			set	dt_prev_fim_horario 	= dt_prev_termino_etapa_w
			where	nr_prescricao 		= nr_prescricao_p
			and	nr_seq_material		= nr_seq_solucao_p
			and	nr_sequencia 		= (	SELECT	max(nr_sequencia)
								from	prescr_mat_hor
								where	nr_prescricao 	= nr_prescricao_p
								and	nr_seq_material = nr_seq_material
								and	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
								and	coalesce(dt_fim_horario::text, '') = ''
								and	coalesce(dt_suspensao::text, '') = '');
		elsif (ie_acao_p = 5) then -- ajustar velocidade infusao
			/* obter dados velocidade atual */

			select	coalesce(obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VR'),0) qt_volume_infundir,
				coalesce(obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, nr_seq_acao_p, 'VAS'),qt_vel_infusao) qt_veloc_infusao,
				'mlh' ie_unidade_infusao,
				obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, nr_seq_acao_p, 'VA') qt_veloc_ant,
				to_date(obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, nr_seq_acao_p, 'DVA'),'dd/mm/yyyy hh24:mi:ss') dt_veloc_ant,
				obter_dados_calculo_infusao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, nr_seq_acao_p, 'VP') qt_volume_parcial,
				CASE WHEN MOD(qt_dose * nr_ocorrencia,obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VID')+1)=qt_dose * nr_ocorrencia THEN 0  ELSE (qt_dose * (TRUNC(obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VID') / qt_dose) + 1) - obter_dados_solucao(ie_tipo_solucao_p, nr_prescricao, nr_sequencia, 'VID')) END  qt_volume_infundir_etapa,
				nr_ocorrencia,
				qt_dose
			into STRICT	qt_volume_infundir_w,
				qt_veloc_infusao_w,
				ie_unidade_infusao_w,
				qt_veloc_ant_w,
				dt_veloc_ant_w,
				qt_volume_parcial_w,
				qt_volume_infundir_etapa_w,
				nr_etapas_orig_w,
				qt_volume_etapa_orig_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_solucao_p;

			if (qt_volume_infundir_w = 0) and (qt_volume_infundir_etapa_w = 0) then
				qt_volume_infundir_etapa_w	:= coalesce(qt_volume_etapa_orig_w,0);
				qt_volume_infundir_w		:= coalesce(qt_volume_etapa_orig_w,0) * coalesce(nr_etapas_orig_w,1);
			end if;

			qt_veloc_infusao_ww	:= qt_veloc_infusao_w;

			/* calcular velocidade infusao ml/h */

			if (ie_unidade_infusao_w = 'gtm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,20) * 60;
				qt_veloc_ant_w		:= dividir(qt_veloc_ant_w,20) * 60;
			elsif (ie_unidade_infusao_w = 'mgm') then
				qt_veloc_infusao_w 	:= dividir(qt_veloc_infusao_w,50) * 60;
				qt_veloc_ant_w 		:= dividir(qt_veloc_ant_w,50) * 60;
			else
				qt_veloc_infusao_w	:= qt_veloc_infusao_w;
				qt_veloc_ant_w		:= qt_veloc_ant_w;
			end if;

			/* calcular tempo infusao velocidade atual */

			qt_tempo_infusao_w	:= (dt_acao_p - dt_veloc_ant_w) * 1440 / 60;

			/* calcular volume infundido atual (tempo decorrido x velocidade atual) */

			qt_volume_infusao_w	:= (qt_veloc_ant_w * qt_tempo_infusao_w) + qt_volume_parcial_w;

			/* calcular tempo previsto termino infusao */

			qt_tempo_infundir_w		:= dividir(qt_volume_infundir_w - qt_volume_infusao_w, qt_veloc_infusao_w);
			qt_tempo_infundir_etapa_w	:= dividir(qt_volume_infundir_etapa_w - qt_volume_infusao_w, qt_veloc_infusao_w);

			/* calcular data prevista termino infusao */

			if (coalesce(qt_tempo_infundir_w,0) > 0) then
				dt_prev_termino_w	:= dt_acao_p + qt_tempo_infundir_w / 24;
			end if;
			if (coalesce(qt_tempo_infundir_etapa_w,0) > 0) then
				dt_prev_termino_etapa_w	:= dt_acao_p + qt_tempo_infundir_etapa_w / 24;
			end if;

			/* atualizar valores */

			update	prescr_solucao_evento
			set	qt_vol_parcial		= qt_volume_infusao_w,
				qt_vol_restante		= qt_volume_infundir_w - qt_volume_infusao_w,
				dt_prev_termino		= dt_prev_termino_w,
				dt_prev_termino_etapa 	= dt_prev_termino_etapa_w
			where	nr_sequencia		= nr_seq_acao_p;

			update	prescr_material
			set	dt_prev_prox_etapa	= dt_prev_termino_etapa_w
			where	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia		= nr_seq_solucao_p;
		else
			if (ie_acao_p in (2,4,7,10,11)) then
				update	prescr_material
				set	dt_prev_prox_etapa	 = NULL
				where	nr_prescricao		= nr_prescricao_p
				and	nr_sequencia		= nr_seq_solucao_p;

			elsif (ie_acao_p = 6) then
				ie_status_solucao_w	:= obter_status_solucao_prescr(2, nr_prescricao_p, nr_seq_solucao_p);

				if (ie_status_solucao_w = 'N') then
					update	prescr_material
					set	dt_prev_prox_etapa	 = NULL
					where	nr_prescricao		= nr_prescricao_p
					and	nr_sequencia		= nr_seq_solucao_p;
				elsif (ie_status_solucao_w in ('I','R')) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_ult_prev_w
					from	prescr_solucao_evento
					where	nr_prescricao		= nr_prescricao_p
					and	nr_seq_material		= nr_seq_solucao_p
					and	ie_tipo_solucao		= ie_tipo_solucao_p
					and	ie_evento_valido	= 'S'
					and	(dt_prev_termino_etapa IS NOT NULL AND dt_prev_termino_etapa::text <> '');

					if (coalesce(nr_seq_ult_prev_w,0) > 0) then
						begin
						select	dt_prev_termino_etapa
						into STRICT	dt_prev_termino_etapa_w
						from	prescr_solucao_evento
						where	nr_sequencia = nr_seq_ult_prev_w;

						update	prescr_material
						set	dt_prev_prox_etapa	= dt_prev_termino_etapa_w
						where	nr_prescricao		= nr_prescricao_p
						and	nr_sequencia		= nr_seq_solucao_p;
						end;
					else
						update	prescr_material
						set	dt_prev_prox_etapa	 = NULL
						where	nr_prescricao		= nr_prescricao_p
						and	nr_sequencia		= nr_seq_solucao_p;
					end if;
				end if;
			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_calculo_infusao_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, ie_acao_p bigint, dt_acao_p timestamp, nr_seq_acao_p bigint) FROM PUBLIC;

