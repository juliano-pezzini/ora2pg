-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_sus_bpa ( NR_ATENDIMENTO_P bigint, DS_ERRO_P INOUT text) AS $body$
DECLARE


DS_ERRO_W		varchar(80)	:= '';
IE_TIPO_ATEND_BPA_W	smallint	:= 999;
CD_MUNICIPIO_CONVENIO_W	integer	:= 0;
QT_PROCED_SEM_ATIV_W	bigint	:= 0;
qt_proced_errados_w	bigint	:= 0;
CD_PESSOA_FISICA_W	varchar(10);
DT_NASCIMENTO_W		timestamp;
QT_PROCED_SEM_FAIXA_W	bigint	:= 0;
QT_PROCED_INATIVOS_W	bigint	:= 0;
QT_SETOR_INTERNACAO_W	bigint	:= 0;
QT_CID_W		integer	:= 0;
qt_proced_sem_grupo_w	integer	:= 0;
qt_proced_sem_tipo_w	integer	:= 0;





BEGIN
ds_erro_w			 := '';

begin
Select	coalesce(a.ie_tipo_atend_bpa,999),
	a.cd_pessoa_fisica,
	b.dt_nascimento
into STRICT	ie_tipo_atend_bpa_w,
	cd_pessoa_fisica_w,
	dt_nascimento_w
from	atendimento_paciente a,
	pessoa_fisica b
where	a.nr_atendimento 	= nr_atendimento_p
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
     when others then
     ie_tipo_atend_bpa_w := 999;
end;

if	ie_tipo_atend_bpa_w = 999 then
	ds_erro_w	:= ds_erro_w || '500 ';
end if;

if	coalesce(dt_nascimento_w::text, '') = '' then
	ds_erro_w	:= ds_erro_w || '504 ';
end if;


begin
Select	coalesce(cd_municipio_convenio,0)
into STRICT	cd_municipio_convenio_w
from	atend_categoria_convenio
where	nr_atendimento 		= nr_atendimento_p
and	dt_inicio_vigencia	= (
	SELECT	max(x.dt_inicio_vigencia)
		from	atend_categoria_convenio x
		where	x.nr_atendimento = nr_atendimento_p);
exception
     when others then
     cd_municipio_convenio_w := 0;
end;

if	cd_municipio_convenio_w = 0 then
	ds_erro_w	:= ds_erro_w || '501 ';
end if;

begin
Select	count(*)
into STRICT	qt_proced_sem_ativ_w
from	procedimento_paciente a
where	a.nr_atendimento 	= nr_atendimento_p
and	coalesce(a.cd_atividade_prof_bpa::text, '') = ''
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.ie_origem_proced	= 3;
exception
	when others then
		qt_proced_sem_ativ_w := 0;
end;

if (qt_proced_sem_ativ_w > 0) then
	ds_erro_w	:= ds_erro_w || '502 ';
end if;

/* CONSISTENCIA PROCEDIMENTOS DIFERENTE DE BPA */

begin
select	count(*)
into STRICT	qt_proced_errados_w
from 	procedimento_paciente
where 	nr_atendimento		= nr_atendimento_p
and	ie_origem_Proced		<> 3
and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
and	coalesce(cd_motivo_exc_conta::text, '') = '';
exception
		when others then
			qt_proced_errados_w := 0;
end;

if (qt_proced_errados_w > 0) then
	begin
	ds_erro_w			:= ds_erro_w || '503 ';
	end;
end if;

/* CONSISTENCIA FAIXA ETARIA */

begin
Select count(*)
into STRICT 	qt_proced_sem_faixa_w
from 	procedimento_paciente a,
	sus_valor_proc_paciente b
where 	a.nr_atendimento 	= nr_atendimento_p
and	a.nr_sequencia		= b.nr_sequencia
and	coalesce(b.cd_faixa_etaria::text, '') = ''
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.ie_origem_proced	= 3;
exception
	when others then
		qt_proced_sem_faixa_w := 0;
end;

if (qt_proced_sem_faixa_w > 0) then
	ds_erro_w	:= ds_erro_w || '505 ';
end if;

/* CONSISTENCIA PROCEDIMENTOS INATIVOS */

begin
select count(*)
into STRICT	qt_proced_inativos_w
from	procedimento_paciente a,
	procedimento b
where 	a.nr_atendimento	= nr_atendimento_p
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.cd_procedimento	= b.cd_procedimento
and	a.ie_origem_proced	= b.ie_origem_proced
and	b.ie_situacao		<> 'A';
exception
	when others then
		qt_proced_inativos_w := 0;
end;

if (qt_proced_inativos_w > 0) then
	ds_erro_w	:= ds_erro_w || '506 ';
end if;


/* CONSISTENCIA SETORES INTERNACAO */

begin
select	count(*)
into STRICT	qt_setor_internacao_w
from 	atend_paciente_unidade a,
	setor_atendimento b
where	a.nr_atendimento		= nr_atendimento_p
and	a.cd_setor_atendimento	= b.cd_setor_atendimento
and	b.cd_classif_setor in (3,4,8);
exception
	when others then
		qt_setor_internacao_w := 0;
end;

if (qt_setor_internacao_w > 0) then
	ds_erro_w	:= ds_erro_w || '507 ';
end if;

/* CONSISTENCIA SE HÁ CID PARA O ATENDIMENTO */

begin
select	count(*)
into STRICT	qt_cid_w
from	diagnostico_doenca
where	nr_atendimento	= nr_atendimento_p;
exception
	when others then
		qt_cid_w := 0;
end;

if (qt_cid_w	= 0) then
	ds_erro_w	:= ds_erro_w || '510 ';
end if;

/* 511 - BPA - Falta Grupo atendimento para procedimento */

begin
Select	count(*)
into STRICT	qt_proced_sem_grupo_w
from	procedimento_paciente	a
where	a.nr_atendimento	= nr_atendimento_p
and	coalesce(a.ie_grupo_atend_bpa::text, '') = ''
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.qt_procedimento	> 0	/* 06/11/2007 - OS73577 - Luiz F.M */
and	a.ie_origem_proced	= 3
and	not exists (	SELECT	1
				from 	sus_apac_proc	b,
					sus_apac_movto	a
				where 	a.nr_sequencia	= b.nr_seq_apac
				and 	a.nr_atendimento = nr_atendimento_p);
exception
	when others then
		qt_proced_sem_grupo_w := 0;
end;

if (qt_proced_sem_grupo_w	> 0) then
	ds_erro_w	:= ds_erro_w || '511 ';
end if;

/* 512 - BPA - Falta Tipo atendimento para procedimento */

begin
Select	count(*)
into STRICT	qt_proced_sem_tipo_w
from	procedimento_paciente	a
where	a.nr_atendimento	= nr_atendimento_p
and	coalesce(a.ie_tipo_atend_bpa::text, '') = ''
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.qt_procedimento	> 0	/* 06/11/2007 - OS73577 - Luiz F.M */
and	a.ie_origem_proced	= 3
and	not exists (	SELECT	1
				from 	sus_apac_proc	b,
					sus_apac_movto	a
				where 	a.nr_sequencia	= b.nr_seq_apac
				and 	a.nr_atendimento = nr_atendimento_p);
exception
	when others then
		qt_proced_sem_tipo_w := 0;
end;

if (qt_proced_sem_tipo_w	> 0) then
	ds_erro_w	:= ds_erro_w || '512 ';
end if;


ds_erro_p	:= ds_erro_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_sus_bpa ( NR_ATENDIMENTO_P bigint, DS_ERRO_P INOUT text) FROM PUBLIC;

