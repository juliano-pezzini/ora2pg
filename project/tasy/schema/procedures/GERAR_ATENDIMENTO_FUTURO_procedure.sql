-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_atendimento_futuro (nr_sequencia_p bigint, cd_pessoa_fisica_p text, cd_medico_p text, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, ie_origem_proced_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_atend_futuro_w	bigint;
cd_parametro_status_w	bigint;
dt_agenda_w		timestamp;
nr_seq_agecons_w		agenda_consulta_adic.nr_seq_agenda%type;

BEGIN
cd_parametro_status_w := obter_param_usuario(10000, 3, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, cd_parametro_status_w);

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then

	if (cd_tipo_agenda_p in (1,2)) then
		select	max(dt_agenda),
			max(nr_seq_atend_futuro)
		into STRICT	dt_agenda_w,
			nr_seq_atend_futuro_w
		from	agenda_paciente
		where	nr_sequencia = nr_sequencia_p;
	else
		select	max(dt_agenda)
		into STRICT	dt_agenda_w
		from	agenda_consulta 
		where	nr_sequencia = nr_sequencia_p;
		
		select	max(nr_seq_atend_futuro)
		into STRICT	nr_seq_atend_futuro_w
		from	agenda_consulta_adic
		where	nr_seq_agenda = nr_sequencia_p;
	end if;

	if (coalesce(nr_seq_atend_futuro_w::text, '') = '') then

		select  nextval('atend_pac_futuro_seq')
		into STRICT	nr_seq_atend_futuro_w
		;

		insert into atend_pac_futuro(	nr_sequencia,
						dt_atualizacao,                         
						nm_usuario,                             
						dt_atualizacao_nrec,                    
						nm_usuario_nrec,                        
						dt_prevista_atend_fut,                 
						ie_asa_estado_paciente,                 
						cd_pessoa_fisica,                       
						nr_atendimento,                         
						nr_atend_origem,                       
						nr_seq_status,                          
						dt_registro,                            
						nr_seq_reg_elemento,                    
						nr_seq_reg_template,                    
						cd_medico,                              
						cd_especialidade,                       
						dt_cancelamento,                        
						nm_usuario_cancelamento,                
						nr_seq_motivo_cancelamento,
						cd_tipo_agenda)
					values (nr_seq_atend_futuro_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						dt_agenda_w,
						null,
						cd_pessoa_fisica_p,
						null,
						null,
						cd_parametro_status_w,
						clock_timestamp(),
						null,
						null,
						cd_medico_p,
						null,
						null,
						null,
						null,
						cd_tipo_agenda_p);
						
						
		if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') then
			insert into atend_pac_proced_previsto(	nr_sequencia,
								dt_atualizacao,                         
								nm_usuario,                             
								dt_atualizacao_nrec,                    
								nm_usuario_nrec,                        
								nr_seq_proc_interno,                    
								nr_seq_atend_futuro,                    
								cd_procedimento,                        
								ie_origem_proced,                       
								ie_proc_principal)
							values (nextval('atend_pac_proced_previsto_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_proc_interno_p,
								nr_seq_atend_futuro_w,
								cd_procedimento_p,
								ie_origem_proced_p,
								'N');
		end if;
		
		
		if (cd_tipo_agenda_p in (1,2)) then
			update agenda_paciente
			set    nr_seq_atend_futuro = nr_seq_atend_futuro_w
			where  nr_sequencia = nr_sequencia_p;
		else
			begin
				select coalesce(max(nr_seq_agenda),0)
				into STRICT nr_seq_agecons_w
				from agenda_consulta_adic
				where nr_seq_agenda = nr_sequencia_p;
				
				if (nr_seq_agecons_w <> 0) then
					update agenda_consulta_adic
					set    nr_seq_atend_futuro = nr_seq_atend_futuro_w
					where  nr_seq_agenda = nr_sequencia_p;
				else
					insert into agenda_consulta_adic(
						nr_seq_agenda,
						nr_seq_atend_futuro)
					values (
						nr_sequencia_p,
						nr_seq_atend_futuro_w);
				end if;
			end;
		end if;
	end if;
end if;
						
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_atendimento_futuro (nr_sequencia_p bigint, cd_pessoa_fisica_p text, cd_medico_p text, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, ie_origem_proced_p bigint, cd_tipo_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

