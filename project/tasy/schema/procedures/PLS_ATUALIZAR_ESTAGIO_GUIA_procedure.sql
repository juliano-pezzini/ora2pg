-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_estagio_guia ( nr_seq_guia_p bigint, nm_usuario_p text, ie_autoriza_glosa_web_p text) AS $body$
DECLARE

 
/* 
 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Atualizar o estágio da guia conforme consistências realizadas. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[X] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
*/
 
 
/*	IE_ESTAGIO - Domínio 2055 
	1 - Em auditoria 
	2 - Consistido com glosa 
	3 - Consisitido sem glosa 
	4 - Negado 
	5 - Autorizado com glosa 
	6 - Autorizado sem glosa 
	7 - Usuário (aguardando ação) 
	8 - Cancelada 
	9 - Aguardando autorização do contratante 
	10 - Autorizado parcialmente 
*/
 
 
/*	IE_STATUS - Domínio 1747 
	1 - Autorizado 
	2 - Em análise 
	3 - Negado 
*/
 
 
ie_status_w			varchar(2);
ie_estagio_w			smallint	:= 7;
ie_guia_glosa_w			varchar(1)	:= 'N';
nr_seq_regra_liberacao_w	bigint;
qt_guia_proc_auditoria_w	integer	:= 0;
ie_glosa_w			varchar(1)	:= 'N';
ds_regra_pos_estabelecido_w	varchar(1);
qt_req_lib_contratante_w	bigint;
ie_libera_guia_w		varchar(2);
qt_guia_mat_auditoria_w		integer	:= 0;
nr_guia_auditoria_w		integer	:= 0;
nr_guia_ocorrencia_w		integer	:= 0;
ie_autorizar_guia_glosa_w	varchar(1);
nr_seq_regra_email_w		bigint;
ie_tipo_processo_w		varchar(1);
ie_aud_total_aprovada_w		varchar(1);
ie_define_se_gera_analise_w	varchar(1);
cd_estabelecimento_w		smallint;
ie_guia_itens_negagos_w		varchar(1) := 'N';
ie_define_se_guia_auditoria_w	varchar(2);
qt_itens_aud_w			bigint;
qt_registros_w			integer;
ie_carater_internacao_w		pls_guia_plano.ie_carater_internacao%type;
qt_itens_lib_w			integer;
ie_tipo_intercambio_w		pls_guia_plano.ie_tipo_intercambio%type;
ie_itens_inexistentes_w		varchar(1) := 'N';
qt_reg_proc_w			integer;
qt_reg_mat_w			integer;


BEGIN 
 
begin 
select	ie_status, 
	coalesce(nr_seq_regra_liberacao,0), 
	ie_tipo_processo, 
	cd_estabelecimento, 
	coalesce(ie_carater_internacao,'X'), 
	ie_tipo_intercambio 
into STRICT	ie_status_w, 
	nr_seq_regra_liberacao_w, 
	ie_tipo_processo_w, 
	cd_estabelecimento_w, 
	ie_carater_internacao_w, 
	ie_tipo_intercambio_w 
from	pls_guia_plano 
where	nr_sequencia	= nr_seq_guia_p;
exception 
	when others then	 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(190684,nr_seq_guia_p);
	--'Problema na leitura da guia: ' || nr_seq_guia_p 
end;
 
ie_guia_glosa_w	:= pls_obter_se_guia_glosada(nr_seq_guia_p);
 
if (ie_tipo_processo_w	= 'I') and (ie_tipo_intercambio_w	= 'E') then 
	select	count(1) 
	into STRICT	qt_reg_proc_w 
	from	pls_guia_plano_proc 
	where	nr_seq_guia		= nr_seq_guia_p 
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') 
	and	(ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '');
	 
	select	count(1) 
	into STRICT	qt_reg_mat_w 
	from	pls_guia_plano_mat 
	where	nr_seq_guia	= nr_seq_guia_p 
	and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');
	 
	if (qt_reg_proc_w	= 0) and (qt_reg_mat_w	= 0) then 
		ie_itens_inexistentes_w	:= 'S';
	end if;
end if;
 
/* Guia negada */
 
if (ie_status_w	= '3') then 
	ie_estagio_w	:= 4; /* Negado */
 
	 
	/* OS 650285 - Tratamento realizado para quanto negar a Guia Negar todos os itens da mesma */
	
	update	pls_guia_plano_proc 
	set	ie_status 	= 'N', 
		nm_usuario 	= nm_usuario_p, 
		dt_atualizacao 	= clock_timestamp(), 
		qt_autorizada	= 0 
	where	nr_seq_guia 	= nr_seq_guia_p 
	and	ie_status	<> 'M';
 
	update	pls_guia_plano_mat 
	set	ie_status 	= 'N', 
		nm_usuario 	= nm_usuario_p, 
		dt_atualizacao 	= clock_timestamp(), 
		qt_autorizada	= 0 
	where	nr_seq_guia 	= nr_seq_guia_p 
	and	ie_status	<> 'M';
	 
/* Guia autorizada */
 
elsif (ie_status_w	= '1') then 
	 
	if (coalesce(ie_autoriza_glosa_web_p,'X') = 'X') then 
		/* Obter o valor do parâmetro 51 - Permite autorizar guias com glosas */
 
		ie_autorizar_guia_glosa_w	:= coalesce(obter_valor_param_usuario(1204, 51, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');
	else 
		ie_autorizar_guia_glosa_w	:= ie_autoriza_glosa_web_p;
	end if;
 
	if (ie_guia_glosa_w	= 'N') then 
		ie_estagio_w	:= 6; /* Autorizado sem glosa */
	elsif (ie_guia_glosa_w	= 'S') then		 
		if (ie_autorizar_guia_glosa_w	= 'S') then 
			ie_guia_itens_negagos_w := pls_obter_se_itens_guia_status(nr_seq_guia_p,'N');
			if (ie_guia_itens_negagos_w = 'S') then 
				ie_estagio_w	:= 10; --Autorizado parcialmente 
			else
				ie_estagio_w	:= 5; --Autorizado com glosa 
			end if;
		else 
			ie_estagio_w	:= 5; --Autorizado com glosa 
		end if;
	end if;
/* Guia em análise */
 
elsif (ie_status_w	= '2') then 
	 
	nr_guia_auditoria_w	:= pls_obter_se_guia_auditoria(nr_seq_guia_p);
 
	if (pls_obter_acao_ocor_comb_guia(nr_seq_guia_p, 'V') = 'S') then 
		ie_define_se_guia_auditoria_w	:= (pls_obter_acao_ocor_comb_guia(nr_seq_guia_p, 'O'));
	else 
		ie_define_se_gera_analise_w	:= pls_obter_define_gera_analise(cd_estabelecimento_w,'A');
	end if;
	 
	if (ie_define_se_gera_analise_w = 'A') then 
		nr_guia_ocorrencia_w	:= pls_obter_se_guia_aud_ocor(nr_seq_guia_p);
	end if;
 
	if (ie_define_se_guia_auditoria_w	= 'A') then 
		ie_estagio_w	:= 1; /* Em auditoria */
		CALL pls_gerar_auditoria_guia(nr_seq_guia_p, nm_usuario_p);
	elsif (ie_guia_glosa_w	= 'S') and (nr_guia_ocorrencia_w	= 0)then 
		ie_estagio_w	:= 2; /* Consistido com glosa */
	elsif (nr_seq_regra_liberacao_w	> 0) or (nr_guia_auditoria_w	> 0) then 
		ie_estagio_w	:= 1; /* Em auditoria */
		CALL pls_gerar_auditoria_guia(nr_seq_guia_p, nm_usuario_p);
	elsif (ie_guia_glosa_w	= 'N') then 
		nr_seq_regra_email_w := pls_obter_regra_lib_estipu(nr_seq_guia_p, null, nr_seq_regra_email_w);
		qt_req_lib_contratante_w	:= pls_obter_se_guia_autorizada(nr_seq_guia_p);
		if (coalesce(nr_seq_regra_email_w,0) > 0) and (qt_req_lib_contratante_w = 0) then 
			ie_estagio_w	:= 9; /* Aguardando autorização do contratante*/
			
			CALL pls_enviar_email_autorizacao(nr_seq_guia_p, 1, nr_seq_regra_email_w, nm_usuario_p,null);
		elsif (ie_itens_inexistentes_w	= 'S') then 
			ie_estagio_w	:= 2; /* Consistido com glosa */
		else 
			ie_estagio_w	:= 3; /* Consisitido sem glosa*/
		end if;
	end if;
end if;
 
/* jtonon - OS 611630 - Entra se o estágio da Guia for 1 (Em auditoria) */
 
if (ie_estagio_w = '1') then 
 
	/* Zera a quantidade de procedimentos autorizados se o status do item estiver como 'Auditoria médica' */
 
	update	pls_guia_plano_proc 
	set	qt_autorizada	= 0 
	where	ie_status 	= 'A' 
	and	nr_seq_guia 	= nr_seq_guia_p;
 
	/* Zera a quantidade de materiais autorizados se o status do item estiver como 'Auditoria médica' */
 
	update	pls_guia_plano_mat 
	set	qt_autorizada	= 0 
	where	ie_status 	= 'A' 
	and	nr_seq_guia 	= nr_seq_guia_p;
elsif (ie_estagio_w = '2') and (coalesce(obter_valor_param_usuario(1204, 95, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N')	= 'S') then 
	/* 
	OS 680918 
	Se o parâmetro [95] - Finalizar o processo da guia se não houver itens em análise, estiver com valor 'S', será verificado se existem itens em auditoria, caso estiver com valor 'N', a guia ficará com o estágio Consistido com glosa 
	*/
 
	qt_itens_aud_w		:= pls_obter_qt_itens_status(	nr_seq_guia_p, null, 'A', 
								null, null, null, 
								null);
								 
	qt_itens_lib_w		:= pls_obter_qt_itens_status(	nr_seq_guia_p, null, 'S', 
								null, null, null, 
								null);
								 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	pls_guia_glosa 
	where	nr_seq_guia	= nr_seq_guia_p;
	 
	--Caso existam itens em auditoria e a guia não possua glosa no cabeçalho ou a guia seja de urgência/emergência, vai alterar o status da guia para auditoria ao invés de consistido com glosa 
	if	(qt_itens_aud_w	> 0 AND qt_registros_w	= 0) or 
		((qt_itens_aud_w	> 0) and (qt_registros_w	> 0) and (ie_carater_internacao_w	= 'U')) then 
		ie_estagio_w	:= '1';
		CALL pls_gerar_auditoria_guia(nr_seq_guia_p, nm_usuario_p);
	elsif (qt_registros_w	> 0) then 
		ie_estagio_w	:= 4;
		 
		update	pls_guia_plano_proc 
		set	ie_status	= 'N', 
			nm_usuario	= nm_usuario_p, 
			dt_atualizacao	= clock_timestamp() 
		where	nr_seq_guia	= nr_seq_guia_p;
		 
		update	pls_guia_plano_mat 
		set	ie_status	= 'N', 
			nm_usuario	= nm_usuario_p, 
			dt_atualizacao	= clock_timestamp() 
		where	nr_seq_guia	= nr_seq_guia_p;
	end if;
end if;
 
update	pls_guia_plano 
set	ie_estagio	= ie_estagio_w 
where	nr_sequencia	= nr_seq_guia_p;
 
CALL pls_guia_gravar_historico(nr_seq_guia_p, 7, 'Status: ' || ie_status_w || 
	' / Estágio: ' || ie_estagio_w || ' / Guia glosa: ' || ie_guia_glosa_w || 
	' / Guia proc auditoria: ' || qt_guia_proc_auditoria_w || ' / Regra liberação: ' || nr_seq_regra_liberacao_w, 
	null, nm_usuario_p);
 
ie_libera_guia_w	:= obter_valor_param_usuario(1204, 37, Obter_Perfil_Ativo, nm_usuario_p, 0);
 
if	((ie_libera_guia_w	= 'S') and (ie_estagio_w in (2,3)) and ie_tipo_processo_w <> 'P') then 
	CALL pls_liberar_guia_parametro(nr_seq_guia_p, nm_usuario_p);
end if;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_estagio_guia ( nr_seq_guia_p bigint, nm_usuario_p text, ie_autoriza_glosa_web_p text) FROM PUBLIC;

