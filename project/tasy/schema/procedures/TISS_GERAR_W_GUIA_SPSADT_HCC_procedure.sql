-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_spsadt_hcc (nr_sequencia_autor_p bigint, nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, ds_dir_padrao_p text, nr_seq_exame_p bigint, nr_prescr_tiss_p bigint, nr_seq_med_fatur_p text, nr_atend_conta_tiss_p text, nm_usuario_p text, ie_setor_prescr_p text) AS $body$
DECLARE


cd_ans_w			varchar(255);
DT_PREV_EXECUCAO_w			timestamp;
ie_urgencia_w			varchar(255);
ie_obs_urgente_w			varchar(100);
cd_cbos_w			varchar(100);
nr_atendimento_w		 	 bigint;
nr_interno_conta_w			 bigint;
cd_autorizacao_w			varchar(100);
cd_autorizacao_ww			varchar(255);
ie_emitir_spsadt_zerado_w 		varchar(020);
ie_spsadt_zerado_w		varchar(020);
cd_procedimento_w		varchar(255);
cd_proc_solic_w			varchar(020);
ie_funcao_w			varchar(020);
nr_seq_exame_lab_w		bigint;
qt_proc_guia_w			  smallint;
nr_atend_w			  bigint;
cd_senha_w			varchar(255);
dt_inicio_vigencia_w			timestamp;
dt_final_vigencia_w				timestamp;
dt_validade_senha_w			timestamp;
dt_emissao_guia_w				timestamp;
nr_seq_guia_w			 bigint;
nr_seq_agenda_w			 bigint;
nr_cpf_w				varchar(015);
ie_cid_exame_externo_w		varchar(015);
ds_cid_w				varchar(255);
cd_cgc_estab_w			varchar(255);
nr_seq_apresent_pedido_w	bigint;
nm_medico_executor_w		varchar(255);
nm_medico_solic_w			varchar(255);
ds_obs_autor_w			varchar(4000);
sg_conselho_w			varchar(015);
nr_crm_w				varchar(020);
uf_crm_w				valor_dominio.vl_dominio%type;
cd_cbo_saude_w			varchar(020);
ie_tipo_atendimento_w		varchar(255);
ie_tipo_saida_w			varchar(020);
ds_inicacao_clinica_w		varchar(2000);
ds_justificativa_w			varchar(4000);
cd_edicao_amb_w			varchar(20);
IE_DESC_PROC_INTERNO_W	varchar(20);
cd_edicao_amb_solic_w		varchar(20);
cd_medico_executor_w		varchar(20);
ds_proced_convenio_w		varchar(255);
ie_tecnica_utilizada_w		varchar(20);
IE_EMITE_HONOR_SADT_PEP_w 	varchar(20);
ie_medico_rep_w			varchar(20);
ie_quebra_grupo_exame_w		varchar(10);
ie_origem_proced_w		bigint;
qt_procedimento_w		double precision;
vl_reducao_acrescimo_w		double precision;
cd_categoria_conv_w		varchar(20);
vl_procedimento_w			double precision;
VL_TAXAS_w			double precision;
VL_DIARIAS_w			double precision;
VL_MEDICAMENTOS_w		double precision;
VL_MATERIAIS_w			double precision;
nr_seq_tipo_acidente_w		bigint;
VL_GASES_w			double precision;
vl_proc_total_w			double precision;
nr_seq_procedimento_w		bigint;
dt_entrada_w			timestamp;
dt_alta_w		 		timestamp;
ie_via_acesso_w			varchar(20);
vl_unitario_w			double precision;
ds_procedimento_w		varchar(255);
ds_proc_tabela_interno_w		varchar(255);
ds_proc_exame_proc_w		varchar(255);
ds_proc_procedimento_w		varchar(255);
ds_proced_solic_w			varchar(255);
dt_procedimento_w		timestamp;
vl_total_w			double precision	:= 0;
cont_w				integer	:= 0;
ds_razao_social_w			varchar(255);
cd_cnes_w			varchar(255);
cd_cgc_w				varchar(255);
ie_tipo_acidente_w			varchar(10);
ie_trazer_executor_w		varchar(10);
qt_solicitada_w			double precision;
qt_autorizada_w			double precision;
dt_autorizacao_w			timestamp;
cd_doenca_cid_w			varchar(255);
cd_doenca_cid_autor_w		varchar(255);
cd_cid_externo_w			varchar(255);
ds_observacao_w			varchar(255);
ds_observacao_autor_w		varchar(255);
ie_tipo_autorizacao_w		varchar(3);
nr_seq_guia_proc_w		bigint;
ds_arquivo_logo_w			varchar(140);
nr_seq_exame_w			bigint;
cd_medico_w			varchar(255);
dt_solicitacao_w			varchar(20);
cd_opm_w			varchar(20);
vl_opm_w			double precision;
vl_opms_w			double precision;
vl_total_opm_w			double precision;
cd_edicao_w			varchar(20);
ds_opm_w			varchar(255);
ds_fabricante_w			varchar(255);
ds_carater_internacao_w		varchar(1);
ie_proc_solic_spsadt_w		varchar(3);
ie_tiss_tipo_guia_w			varchar(50);
cd_setor_atendimento_w		integer;
ie_carater_inter_sus_w		varchar(2);
cd_convenio_w			integer;
cd_medico_convenio_w		varchar(20);
nr_seq_med_fatur_w		bigint;
nr_seq_autor_W			bigint;
nr_seq_apresent_W		bigint;
dt_inicio_cirurgia_w		timestamp;
dt_fim_cirurgia_w			timestamp;
cd_estabelecimento_w		smallint;
cd_interno_w			varchar(20);
nm_contratado_solic_w		varchar(255);
cd_interno_solic_w			varchar(255);
ie_medico_solic_atend_w		varchar(2);
nr_seq_apresentacao_w		bigint;
qt_opm_w			bigint;
nr_seq_apres_proc_w		bigint;
nr_seq_apresent_opm_w		bigint;
nr_seq_conta_guia_w		bigint;
dt_atendimento_w			timestamp;
cd_autorizacao_princ_exame_w	varchar(255);
cd_autorizacao_princ_w		varchar(255);
cd_cgc_prestador_w		varchar(255);
ie_agrupar_proc_w			varchar(40);
cd_prestador_convenio_w		varchar(255)	:= '';
dt_ult_atualizacao_w		timestamp;
dt_geracao_tiss_w			timestamp;
ie_status_acerto_w			integer;
ie_honorario_w			varchar(30)	:= '';
ds_assinatura_solic_w		varchar(255);
ds_assinatura_resp_w		varchar(255);
ds_assinatura_exec_w		varchar(255);
ie_assinatura_solic_w		varchar(2);
cd_setor_exclusivo_w		integer;
ie_ordenacao_spsadt_w		varchar(3);
nr_seq_proc_interno_w		bigint;
nr_seq_proc_prescr_w		bigint;
CD_AREA_PROCEDIMENTO_w	bigint;
CD_ESPECIALIDADE_w		bigint;
CD_GRUPO_PROC_w		bigint;
IE_REGRA_W			varchar(100);
ie_lado_w			varchar(255);
ie_lado_rep_w			varchar(5);
cd_tipo_Proc_w			smallint;
ie_quebra_proc_pep_w		varchar(1);
ie_prescr_unica_w			varchar(255);
ie_data_ass_prest_w		varchar(255);
dt_assin_prest_w			timestamp;
ie_solicitante_w			varchar(255);
ie_solicitante_ww			varchar(255);
ie_conveniado_w			varchar(255);
cd_medico_solic_w			varchar(255);
ie_clinica_w			varchar(255);
cd_procedencia_w			varchar(255);
cd_cgc_prest_solic_regra_w		varchar(255);
cd_medico_atendimento_w		varchar(255);
cd_setor_entrada_w		bigint;
cd_cnes_solic_w			varchar(255);
cd_cgc_solic_w			varchar(255);
ds_arquivo_logo_comp_w		varchar(255);
nr_cpf_solic_w			varchar(255);
cd_cgc_solic_regra_w		varchar(20);
ie_gerar_tiss_w			varchar(10);
ie_tipo_atend_tiss_w		varchar(10);
ie_regra_guia_princ_w		varchar(255);
cd_autor_princ_w		varchar(255);
cd_autor_princ_prescr_w		varchar(255);
nr_seq_classif_atend_w		bigint;
cd_setor_prescr_w		integer;
cd_proc_conversao_exame_w	varchar(255);
ds_proc_conversao_exame_w	varchar(255);
ie_proc_tuss_w			varchar(255);
cd_proc_tuss_w			bigint;
ds_proc_tuss_w			varchar(255);
nr_seq_pedido_exame_prescr_w		bigint;
dt_validade_carteira_w		timestamp;
cd_pessoa_fisica_W		varchar(10);
nm_pessoa_fisica_W		varchar(255);
nr_cartao_nac_sus_W		varchar(20);
ds_plano_w			varchar(255);
cd_usuario_convenio_w		varchar(255);
qt_seq_exame_w			bigint;
qt_seq_pedido_exame_w		bigint;
nr_seq_exame_param_w		bigint;
nr_seq_pedido_exame_w		bigint;
nr_seq_tiss_tabela_w		bigint;
vl_item_w			double precision;
vl_total_procedimentos_w	double precision;
vl_total_geral_w		double precision;
ie_desc_exame_ext_w		varchar(255);
ds_irrelevante_w		varchar(255);
ds_exame_w			varchar(255);
ie_prest_spsadt_tasymed_w	varchar(255);
ie_topo_rep_w			varchar(255);
ds_topogradia_w			varchar(255);
ie_dt_emissao_guia_w		varchar(255);
ie_spsadt_atend_retorno_w	varchar(10);
cd_medico_referido_w		varchar(255);
cd_proc_tabela_w		varchar(255);
cd_cid_proc_presc_w		varchar(255);
nr_sequencia_autor_w		bigint;
nr_prescricao_w			bigint;
ie_classif_proced_w		varchar(255);
ie_codigo_tuss_w		varchar(2);
ie_desc_tuss_w			varchar(2);
ie_sadt_autor_sem_proc_w	varchar(255);
ds_lado_proc_w			varchar(255);
ie_medico_solic_exame_w		varchar(10);
nr_seq_regra_solic_w		bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta,
	a.cd_autorizacao,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	'4' ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.dt_autorizacao,
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_emissao_guia,
	b.dt_entrada,
	b.ie_carater_internacao,
	a.cd_medico_executor,
	a.ie_honorario,
	a.nr_sequencia_autor
from	tiss_conta_guia a,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_interno_conta	= nr_interno_conta_p
and	a.ie_tiss_tipo_guia	= '4'

union

select	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta,
	a.cd_autorizacao,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	'4' ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.dt_autorizacao,
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_emissao_guia,
	b.dt_entrada,
	b.ie_carater_internacao,
	a.cd_medico_executor,
	a.ie_honorario,
	a.nr_sequencia_autor
from	tiss_conta_guia a,
	TISS_PROTOCOLO_GUIA c,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	c.nr_sequencia		= a.nr_seq_prot_guia
and	c.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.ie_tiss_tipo_guia	= '4'

union

select	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta,
	a.cd_autorizacao,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	'4' ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.dt_autorizacao,
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_emissao_guia,
	b.dt_entrada,
	b.ie_carater_internacao,
	a.cd_medico_executor,
	a.ie_honorario,
	a.nr_sequencia_autor
from	tiss_conta_guia a,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	b.nr_atendimento	= nr_atend_conta_tiss_p
and	a.ie_tiss_tipo_guia	= '4';

c02 CURSOR FOR
SELECT	cd_procedimento,
	cd_edicao_amb,
	sum(qt_procedimento),
	vl_reducao_acrescimo,
	sum(vl_procedimento),
	ie_via_acesso,
	vl_unitario,
	ds_procedimento,
	dt_procedimento,
	dt_inicio_cir,
	dt_fim_cir,
	ie_tecnica_utilizada,
	cd_cbos
from (
	SELECT	a.cd_procedimento,
		a.cd_edicao_amb,
		sum(a.qt_procedimento) qt_procedimento,
		sum(a.vl_reducao_acrescimo) vl_reducao_acrescimo,
		sum(a.vl_procedimento) vl_procedimento,
		a.ie_via_acesso,
		a.vl_unitario,
		a.ds_procedimento,
		trunc(a.dt_procedimento, 'dd') dt_procedimento,
		a.dt_inicio_cir,
		a.dt_fim_cir,
		a.ie_tecnica_utilizada,
		a.cd_cbos
	from	tiss_conta_proc a
	where	nr_seq_guia		= nr_seq_conta_guia_w
	and	ie_tiss_tipo_guia	= '4'
	group by a.ie_via_acesso,
		a.vl_unitario,
		a.ds_procedimento,
		trunc(a.dt_procedimento, 'dd'),
		a.dt_inicio_cir,
		a.dt_fim_cir,
		a.cd_procedimento,
		a.cd_cbos,
		a.cd_edicao_amb,
		CASE WHEN ie_agrupar_proc_w='S' THEN  1  ELSE a.nr_seq_proc END ,
		a.ie_tecnica_utilizada
	
union all

	select	null,
		null,
		(null)::numeric ,
		(null)::numeric ,
		(null)::numeric ,
		null,
		(null)::numeric ,
		null,
		to_date(null),
		to_date(null),
		to_date(null),
		null,
		null
	from	tiss_conta_desp a
	where	a.nr_seq_guia	= nr_seq_conta_guia_w
	and	not exists (	select	1
				from	tiss_conta_proc b
				where	a.nr_seq_guia	= b.nr_seq_guia)
	
union all

	select	null,
		null,
		(null)::numeric ,
		(null)::numeric ,
		(null)::numeric ,
		null,
		(null)::numeric ,
		null,
		to_date(null),
		to_date(null),
		to_date(null),
		null,
		null
	from	tiss_conta_opm_exec a
	where	a.nr_seq_guia	= nr_seq_conta_guia_w
	and	not exists (	select	1
				from	tiss_conta_proc b
				where	a.nr_seq_guia	= b.nr_seq_guia)) alias23
group	by cd_procedimento,
	cd_edicao_amb,
	vl_reducao_acrescimo,
	ie_via_acesso,
	vl_unitario,
	ds_procedimento,
	dt_procedimento,
	dt_inicio_cir,
	dt_fim_cir,
	ie_tecnica_utilizada,
	cd_cbos
order	by CASE WHEN ie_ordenacao_spsadt_w='1' THEN  ie_via_acesso  ELSE '' END ,
	CASE WHEN ie_ordenacao_spsadt_w='2' THEN  dt_procedimento  ELSE '' END;

c03 CURSOR FOR
SELECT	coalesce(cd_procedimento_convenio, cd_procedimento),
	ds_procedimento,
	qt_solicitada,
	qt_autorizada,
	cd_edicao_relat,
	ie_origem_proced
from	tiss_proc_solicitado_v
where	nr_sequencia_autor	= nr_sequencia_autor_p
and	ds_versao		= '2.01.01';

c04 CURSOR FOR
SELECT	a.nr_seq_exame,
	coalesce(substr(TISS_OBTER_PROCED_CONVERSAO(e.cd_convenio,a.cd_procedimento,a.ie_origem_proced,'C'),1,50),
		coalesce(coalesce(coalesce(a.cd_procedimento, b.cd_procedimento),
		coalesce(Obter_Cod_Proc_Interno_conv(b.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), b.cd_estabelecimento),
		    Obter_Cod_Proc_Interno_conv(a.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), b.cd_estabelecimento))),
	        Lab_Obter_Dados_Exame(a.NR_SEQ_EXAME_LAB, 'P'))),
	substr(coalesce(TISS_OBTER_PROCED_CONVERSAO(e.cd_convenio,a.cd_procedimento,a.ie_origem_proced,'D'),
		coalesce(Obter_Med_Exame_Externo(a.nr_sequencia),
		coalesce(obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced),
		obter_descricao_procedimento(b.cd_procedimento, b.ie_origem_proced)))),1,254) ds_procedimento,
	sum(a.qt_exame) qt_solicitada,
	sum(a.qt_exame) qt_autorizada,
	c.nr_atendimento,
	coalesce(b.cd_medico, j.cd_medico_resp),
	coalesce(e.nr_doc_convenio,'Não informada'),
	e.cd_senha,
	e.dt_final_vigencia,
	e.dt_inicio_vigencia,
	d.cd_cgc,
	substr(obter_nome_pf_pj(null, d.cd_cgc), 1, 150),
	d.cd_cns,
	j.dt_entrada,
	c.ds_justificativa,
	substr(c.ds_cid,1,6),
	j.ie_tipo_atendimento,
	j.ie_clinica,
	substr(obter_valor_dominio(1372,a.ie_lado),1,255),
	a.nr_seq_exame_lab
FROM convenio n, atendimento_paciente j, atend_categoria_convenio e, estabelecimento d, pedido_exame_externo c, pedido_exame_externo_item a
LEFT OUTER JOIN med_exame_padrao b ON (a.nr_seq_exame = b.nr_sequencia)
WHERE j.nr_atendimento				= e.nr_atendimento and d.cd_estabelecimento				= j.cd_estabelecimento and n.cd_convenio					= e.cd_convenio and e.nr_atendimento				= c.nr_atendimento and c.nr_sequencia					= a.nr_seq_pedido and c.nr_sequencia					= nr_seq_exame_p and ((coalesce((obter_tipo_procedimento(
		coalesce(a.cd_procedimento,(Obter_Cod_Proc_Interno_conv(a.nr_proc_interno,Obter_Convenio_Atendimento(c.nr_atendimento),null,c.dt_solicitacao,null))::numeric ),
		coalesce(a.ie_origem_proced,(Obter_origem_Proc_Interno_conv(a.nr_proc_interno,Obter_Convenio_Atendimento(c.nr_atendimento),null,c.dt_solicitacao,null))::numeric )
		,'C'))::numeric ,999)	= cd_tipo_proc_w) or (coalesce(cd_tipo_Proc_w::text, '') = '') ) and a.nr_seq_apresent				= coalesce(nr_seq_apresent_pedido_w,a.nr_seq_apresent) and (coalesce(TISS_OBTER_SETOR_EXCLUSIVO(a.cd_procedimento,a.ie_origem_proced),999)	= coalesce(cd_setor_exclusivo_w,999)) group by e.cd_senha,
	 coalesce(e.nr_doc_convenio,'Não informada'),
	 e.dt_final_vigencia,
	 e.dt_inicio_vigencia,
	 a.nr_seq_exame,
	 coalesce(substr(TISS_OBTER_PROCED_CONVERSAO(e.cd_convenio,a.cd_procedimento,a.ie_origem_proced,'C'),1,50),
		coalesce(coalesce(coalesce(a.cd_procedimento, b.cd_procedimento),
		coalesce(Obter_Cod_Proc_Interno_conv(b.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), b.cd_estabelecimento),
		    Obter_Cod_Proc_Interno_conv(a.nr_proc_interno, e.cd_convenio, e.cd_categoria, clock_timestamp(), b.cd_estabelecimento))),
	        Lab_Obter_Dados_Exame(a.NR_SEQ_EXAME_LAB, 'P'))),
	 e.cd_convenio,
	 a.cd_procedimento,
	 b.cd_procedimento,
	 b.ie_origem_proced,
	 a.ie_origem_proced,
	 Obter_Med_Exame_Externo(a.nr_sequencia),
	 j.cd_medico_resp,
	 c.ds_cid,
	 c.nr_atendimento,
	 b.cd_medico,
	 'Não Informada',
	 d.cd_cgc,
	 substr(obter_nome_pf_pj(null, d.cd_cgc), 1, 150),
	 j.dt_entrada,
	 d.cd_cns,
	 c.ds_justificativa,
	 j.ie_tipo_atendimento,
	 j.ie_clinica,
	 substr(obter_valor_dominio(1372,a.ie_lado),1,255),
	 a.nr_seq_exame_lab;

c05 CURSOR FOR
SELECT	cd_procedimento_convenio,
	cd_edicao_amb,
	ds_procedimento,
	qt_solicitada,
	qt_autorizada,
--	substr(obter_nome_pf_pj(null,cd_cgc_fabricante),1,255),
	coalesce(ds_fabricante, substr(obter_nome_pf_pj(null,cd_cgc_fabricante),1,255)),
	vl_unitario
from	tiss_opm_solicitado_v
where	ds_versao		= '2.01.01'
and	ie_origem		= 'AC'
and	nr_sequencia_autor	= nr_sequencia_autor_p;

c06 CURSOR FOR
SELECT	distinct
	coalesce(cd_setor_atendimento,0),
	coalesce(nr_doc_convenio,'X'),
	ds_dado_clinico
from	prescr_procedimento
where	nr_prescricao		= nr_prescr_tiss_p
and (coalesce(ie_suspenso,'N') 	= 'N')
and	IE_SETOR_PRESCR_p	= 'S'
and	coalesce(nr_seq_derivado::text, '') = ''

union

select	distinct
	-1 cd_setor_atendimento,
	coalesce(nr_doc_convenio,'Y'),
	ds_dado_clinico
from	prescr_procedimento
where	nr_prescricao		= nr_prescr_tiss_p
and	coalesce(nr_seq_derivado::text, '') = ''
and (coalesce(ie_suspenso,'N') 	= 'N')
and	IE_SETOR_PRESCR_p	= 'N';

c07 CURSOR FOR
SELECT	a.cd_procedimento,
	coalesce(obter_desc_prescr_proc_exam(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno, a.nr_seq_exame), obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced)),
	sum(a.qt_procedimento),
	sum(a.qt_procedimento),
	b.dt_prescricao,
	substr(coalesce(a.ds_observacao,b.ds_observacao) ,1,255),
	a.ie_origem_proced,
	b.cd_estabelecimento,
	a.cd_convenio,
	substr(tiss_eliminar_caractere(obter_desc_prescr_proc_exam(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno, nr_seq_exame_p)), 1, 60) ds_proc_tabela_interno,
	substr(tiss_eliminar_caractere(obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced)), 1, 60) ds_proc_exame_proc,
	substr(tiss_eliminar_caractere(coalesce(TISS_OBTER_DESC_PROCED(a.nr_sequencia, 0, 'DS_PROC_SPSADT'), obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced))), 1, 60) ds_proc_procedimento,
	a.ie_urgencia,
	a.DT_PREV_EXECUCAO,
	substr(obter_valor_dominio(1372, a.ie_lado),1,254)
from	prescr_procedimento a,
	prescr_medica b
where	a.nr_prescricao			= b.nr_prescricao
and	b.nr_prescricao			= nr_prescr_tiss_p
and	((coalesce(a.cd_setor_atendimento,0)	= cd_setor_atendimento_w) or (cd_setor_atendimento_w		= -1))
and	((coalesce(a.nr_doc_convenio,'X')		= cd_autorizacao_ww) or (cd_autorizacao_ww		= 'Y'))
and	coalesce(a.ds_dado_clinico,'X')		= coalesce(ds_inicacao_clinica_w, 'X')
and (coalesce(ie_suspenso,'N') 		= 'N')
and (coalesce(ie_prescr_unica_w,'N')		= 'N')
and 	((coalesce((obter_tipo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric ,999) = cd_tipo_proc_w) or (coalesce(cd_tipo_Proc_w::text, '') = '') )
and	coalesce(nr_seq_derivado::text, '') = ''
group by a.cd_procedimento,
	coalesce(obter_desc_prescr_proc_exam(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno, a.nr_seq_exame), obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced)),
	dt_prescricao,
	b.ds_observacao,
	a.ds_observacao,
	a.ie_origem_proced,
	b.cd_estabelecimento,
	a.cd_convenio,
	a.nr_seq_proc_interno,
	a.nr_sequencia,
	b.ds_observacao,
	a.ie_urgencia,
	a.DT_PREV_EXECUCAO,
	a.ie_lado

union all

select	a.cd_procedimento,
	coalesce(obter_desc_prescr_proc_exam(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno, a.nr_seq_exame), obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced)),
	sum(a.qt_procedimento),
	sum(a.qt_procedimento),
	b.dt_prescricao,
	substr(coalesce(a.ds_observacao,b.ds_observacao) ,1,255),
	a.ie_origem_proced,
	b.cd_estabelecimento,
	a.cd_convenio,
	substr(tiss_eliminar_caractere(obter_desc_prescr_proc_exam(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno, nr_seq_exame_p)), 1, 60) ds_proc_tabela_interno,
	substr(tiss_eliminar_caractere(obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced)), 1, 60) ds_proc_exame_proc,
	substr(tiss_eliminar_caractere(coalesce(TISS_OBTER_DESC_PROCED(a.nr_sequencia, 0, 'DS_PROC_SPSADT'), obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced))), 1, 60) ds_proc_procedimento,
	a.ie_urgencia,
	a.DT_PREV_EXECUCAO,
	substr(obter_valor_dominio(1372, a.ie_lado),1,254)
from	prescr_procedimento a,
	prescr_medica b
where	a.nr_prescricao				= b.nr_prescricao
and	b.nr_prescricao				= nr_prescr_tiss_p
and	((coalesce(a.cd_setor_atendimento,0)		= cd_setor_atendimento_w) or (cd_setor_atendimento_w			= -1))
and	((coalesce(a.nr_doc_convenio,'X')			= cd_autorizacao_ww) or (cd_autorizacao_ww			= 'Y'))
and	coalesce(a.ds_dado_clinico,'X')			= coalesce(ds_inicacao_clinica_w, 'X')
and (coalesce(ie_suspenso,'N') 			= 'N')
and (coalesce(ie_prescr_unica_w,'N')			= 'S')
and 	((coalesce((obter_tipo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric ,999) = cd_tipo_proc_w) or (coalesce(cd_tipo_Proc_w::text, '') = '') )
and	coalesce(nr_seq_derivado::text, '') = ''
group by a.cd_procedimento,
	coalesce(obter_desc_prescr_proc_exam(a.cd_procedimento, a.ie_origem_proced, a.nr_seq_proc_interno, a.nr_seq_exame), obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced)),
	dt_prescricao,
	b.ds_observacao,
	a.ds_observacao,
	a.ie_origem_proced,
	b.cd_estabelecimento,
	a.cd_convenio,
	a.nr_seq_proc_interno,
	a.nr_sequencia,
	b.ds_observacao,
	a.ie_urgencia,
	a.DT_PREV_EXECUCAO,
	a.ie_lado;

c12 CURSOR FOR
SELECT	cd_procedimento_convenio,
	cd_edicao_amb,
	ds_procedimento,
	qt_solicitada,
	qt_autorizada,
	null
from	tiss_opm_solicitado_v
where	ds_versao			= '2.01.01'
and	ie_origem			= 'RE'
and	nr_prescricao		= nr_prescr_tiss_p;

c08 CURSOR FOR
SELECT	a.nr_sequencia,
		a.nr_atendimento,
		coalesce(a.nr_doc_convenio, c.nr_doc_convenio) cd_guia,
		a.cd_medico
from	atend_categoria_convenio c,
		atendimento_paciente e,
		pep_med_fatur a
where	c.nr_atendimento	= a.nr_atendimento
and		e.nr_atendimento	= c.nr_atendimento
and		a.nr_sequencia		= nr_seq_med_fatur_p;

c09 CURSOR FOR
SELECT	a.cd_procedimento,
		obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced),
		a.qt_fatur,
		a.qt_fatur,
		e.dt_entrada,
		e.dt_alta,
		tiss_obter_tabela(null, e.cd_estabelecimento, x.cd_convenio, x.cd_categoria,
		b.dt_faturamento, 'R', y.ie_classificacao, a.cd_procedimento, a.ie_origem_proced, null, null, e.nr_atendimento,a.nr_seq_proc_interno),
		a.dt_procedimento,
		substr(tiss_obter_grau_partic(b.ie_funcao_medico),1,10),
		a.ie_via_acesso,
		a.ie_tecnica_utilizada
from	procedimento y,
		atend_categoria_convenio x,
		atendimento_paciente e,
		pep_med_fatur_proc a,
		pep_med_fatur b
where	a.nr_seq_fatur		= b.nr_sequencia
and		e.nr_atendimento	= b.nr_atendimento
and		x.nr_atendimento	= e.nr_atendimento
and		a.cd_procedimento	= y.cd_procedimento
and		a.ie_origem_proced	= y.ie_origem_proced
and		b.nr_sequencia		= nr_seq_med_fatur_p;

c10 CURSOR FOR
SELECT	coalesce(b.cd_procedimento_convenio, b.cd_procedimento),
		b.ds_procedimento,
		sum(b.qt_solicitada),
		sum(b.qt_autorizada),
		b.cd_edicao_relat
from	tiss_proc_solicitado_v b
where	b.cd_procedimento_convenio	= lpad(cd_procedimento_w, 10, 0)
and		b.ie_origem			= 'AC'
and		b.ds_versao			= '2.01.01'
and		b.nr_atendimento			= nr_atendimento_w
group by
		coalesce(b.cd_procedimento_convenio, b.cd_procedimento),
		b.ds_procedimento,
		b.cd_edicao_relat;

c11 CURSOR FOR
SELECT	nr_interno_conta
from	conta_paciente
where	((nr_interno_conta	= nr_interno_conta_p) or
		((coalesce(nr_interno_conta_p,0) <= 0) and (nr_atendimento = nr_atend_conta_tiss_p)));

c13 CURSOR FOR
SELECT	ie_emitir_zerado
from	tiss_regra_item_zerado
where	coalesce(cd_convenio, cd_convenio_w)			= cd_convenio_w
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w
and	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0))	= coalesce(cd_area_procedimento_w,0)
and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
and	coalesce(cd_procedimento, coalesce(cd_procedimento_w,0))			= coalesce(cd_procedimento_w,0)
and	ie_proc_solic 	= 'S'
order 	by coalesce(cd_procedimento, 0),
	coalesce(cd_grupo_proc, 0),
	coalesce(cd_especialidade, 0),
	coalesce(cd_area_procedimento, 0),
	coalesce(cd_convenio, 0),
	coalesce(ie_tipo_atendimento, 0);

c14 CURSOR FOR
SELECT	distinct
	coalesce((obter_tipo_procedimento(
		coalesce(a.cd_procedimento,(Obter_Cod_Proc_Interno_conv(a.nr_proc_interno,Obter_Convenio_Atendimento(c.nr_atendimento),null,c.dt_solicitacao,null))::numeric ),
		coalesce(a.ie_origem_proced,(Obter_origem_Proc_Interno_conv(a.nr_proc_interno,Obter_Convenio_Atendimento(c.nr_atendimento),null,c.dt_solicitacao,null))::numeric ),
		'C'))::numeric ,999)
from	pedido_exame_externo c,
	pedido_exame_externo_item a
where	a.nr_seq_pedido 	= c.nr_sequencia
and 	a.nr_seq_pedido		= nr_seq_exame_p
and	ie_quebra_proc_pep_w	= 'S'

union

select	null

where	ie_quebra_proc_pep_w	= 'N';

c15 CURSOR FOR
SELECT 	distinct
	coalesce((obter_tipo_procedimento(a.cd_procedimento,a.ie_origem_proced,'C'))::numeric ,999)
from	prescr_procedimento a,
	prescr_medica b
where	a.nr_prescricao			= b.nr_prescricao
and	b.nr_prescricao			= nr_prescr_tiss_p
and	ie_quebra_proc_pep_w	= 'S'

union

select	null

where	ie_quebra_proc_pep_w	= 'N';

c16 CURSOR FOR
SELECT	ie_regra
from	tiss_regra_guia_princ
where	cd_estabelecimento					= cd_estabelecimento_w
and	cd_convenio						= cd_convenio_w
and	coalesce(ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0))	= coalesce(ie_tipo_atendimento_w,0)
and (ie_tiss_tipo_guia					= '4')
order by coalesce(ie_tipo_atendimento, 0);

c17 CURSOR FOR
SELECT	distinct
	a.nr_seq_apresent
from	pedido_exame_externo c,
	pedido_exame_externo_item a
where	a.nr_seq_pedido 	= c.nr_sequencia
and 	a.nr_seq_pedido		= nr_seq_exame_p;

c18 CURSOR FOR
SELECT	distinct
	coalesce(TISS_OBTER_SETOR_EXCLUSIVO(a.cd_procedimento,a.ie_origem_proced),999)
from	pedido_exame_externo c,
	pedido_exame_externo_item a
where	a.nr_seq_pedido 	= c.nr_sequencia
and 	a.nr_seq_pedido		= nr_seq_exame_p;


BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_paciente
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_solicitacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm_exec
where	nm_usuario		= nm_usuario_p;

commit;

select	max(a.cd_autorizacao)
into STRICT	cd_autorizacao_princ_exame_w
from	pedido_exame_externo a
where	a.nr_sequencia	= nr_seq_exame_p;

select	coalesce(max(ie_tipo_autorizacao),'0')
into STRICT	ie_tipo_autorizacao_w
from	autorizacao_convenio
where	nr_sequencia	= nr_sequencia_autor_p;



if (coalesce(nr_seq_protocolo_p,0) > 0) or (coalesce(nr_interno_conta_p,0) > 0) or (coalesce(nr_atend_conta_tiss_p,0) > 0) then

	select 	coalesce(max(ie_gerar_tiss), 'S')
	into STRICT 	ie_gerar_tiss_w
	from 	tiss_parametros_convenio
	where 	cd_estabelecimento	= Obter_Estab_Conta_Paciente(nr_interno_conta_p)
	and 	cd_convenio		= Obter_conv_conta(nr_interno_conta_p);

	-- Edgar 01/08/2007, OS 64360, tratamento para recalcular a conta TISS qdo emitir o relatório
	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then

		open c11;
		loop
		fetch c11 into
			nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c11 */

			select	max(dt_atualizacao)
			into STRICT	dt_ult_atualizacao_w
			from (SELECT	dt_atualizacao
				from		procedimento_paciente
				where		nr_interno_conta	= nr_interno_conta_w
				
union

				SELECT	dt_atualizacao
				from		material_atend_paciente
				where		nr_interno_conta	= nr_interno_conta_w) alias1;

			select	coalesce(max(dt_geracao_tiss), dt_ult_atualizacao_w - 1),
				max(ie_status_acerto)
			into STRICT	dt_geracao_tiss_w,
				ie_status_acerto_w
			from	conta_paciente
			where	nr_interno_conta	= nr_interno_conta_w;

			if (ie_status_acerto_w = 1) and (dt_ult_atualizacao_w > dt_geracao_tiss_w) then
				CALL tiss_atualizar_prot_conta(null, nr_interno_conta_w, null, null, 'N', null, nm_usuario_p);
			end if;
			commit;
		end loop;
		close c11;


		if (coalesce(nr_seq_protocolo_p,0) > 0) then

			select	max(c.cd_ans),
				max(b.ds_arquivo_logo_tiss),
				max(b.cd_convenio),
				max(a.cd_estabelecimento),
				max(a.cd_prestador_convenio)
			into STRICT	cd_ans_w,
				ds_arquivo_logo_w,
				cd_convenio_w,
				cd_estabelecimento_w,
				cd_prestador_convenio_w
			from	pessoa_juridica c,
				convenio b,
				protocolo_convenio a
			where	a.cd_convenio		= b.cd_convenio
			and	b.cd_cgc		= c.cd_cgc
			and	a.nr_seq_protocolo	= nr_seq_protocolo_p;

		elsif (coalesce(nr_interno_conta_p,0) > 0) then

			select	max(cd_ans),
				max(b.ds_arquivo_logo_tiss),
				max(b.cd_convenio),
				max(a.cd_estabelecimento)
			into STRICT	cd_ans_w,
				ds_arquivo_logo_w,
				cd_convenio_w,
				cd_estabelecimento_w
			from	pessoa_juridica c,
				convenio b,
				conta_paciente a
			where	a.cd_convenio_parametro	= b.cd_convenio
			and	b.cd_cgc		= c.cd_cgc
			and	a.nr_interno_conta	= nr_interno_conta_p;

		elsif (coalesce(nr_atend_conta_tiss_p,0) > 0) then

			select	max(cd_ans),
				max(b.ds_arquivo_logo_tiss),
				max(b.cd_convenio),
				max(a.cd_estabelecimento)
			into STRICT	cd_ans_w,
				ds_arquivo_logo_w,
				cd_convenio_w,
				cd_estabelecimento_w
			from	pessoa_juridica c,
				convenio b,
				conta_paciente a
			where	a.cd_convenio_parametro	= b.cd_convenio
			and	b.cd_cgc		= c.cd_cgc
			and	a.nr_atendimento	= nr_atend_conta_tiss_p;

		end if;

		select	coalesce(max(ie_data_ass_prest), 'S'),
			max(ds_arquivo_logo_comp)
		into STRICT	ie_data_ass_prest_w,
			ds_arquivo_logo_comp_w
		from	tiss_parametros_convenio
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_convenio		= cd_convenio_w;

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then

			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || '\'|| ds_arquivo_logo_w);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null);
		end if;

		select	coalesce(max(IE_AGRUPAR_PROC), 'S'),
			coalesce(max(ie_exec_spsadt),'N'),
			coalesce(max(ie_proc_solic_spsadt), 'AC'),
			coalesce(max(ie_ordenacao_spsadt), 0),
			coalesce(max(ie_obs_urgente), 'N'),
			coalesce(max(ie_quebra_proc_pep), 'N')
		into STRICT	ie_agrupar_proc_w,
			ie_trazer_executor_w,
			ie_proc_solic_spsadt_w,
			ie_ordenacao_spsadt_w,
			ie_obs_urgente_w,
			ie_quebra_proc_pep_w
		from	TISS_PARAMETROS_CONVENIO
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_convenio		= cd_convenio_w;

		open c01;
		loop
		fetch c01 into
			nr_seq_conta_guia_w,
			nr_atendimento_w,
			nr_interno_conta_w,
			cd_autorizacao_w,
			ie_tipo_atendimento_w,
			ie_tipo_saida_w,
			ie_tiss_tipo_guia_w,
			cd_autorizacao_princ_w,
			cd_cgc_prestador_w,
			dt_autorizacao_w,
			cd_senha_w,
			dt_validade_senha_w,
			dt_emissao_guia_w,
			dt_atendimento_w,
			ds_carater_internacao_w,
			cd_medico_executor_w,
			ie_honorario_w,
			nr_sequencia_autor_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			qt_proc_guia_w 		:= 0;
			nr_seq_apres_proc_w	:= 0;
			nr_seq_apresent_opm_w	:= 0;

			nr_seq_apresentacao_w	:= 0;
			open c02;
			loop
			fetch c02 into
				cd_procedimento_w,
				cd_edicao_amb_w,
				qt_procedimento_w,
				vl_reducao_acrescimo_w,
				vl_procedimento_w,
				ie_via_acesso_w,
				vl_unitario_w,
				ds_proced_convenio_w,
				dt_procedimento_w,
				dt_inicio_cirurgia_w,
				dt_fim_cirurgia_w,
				ie_tecnica_utilizada_w,
				cd_cbos_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */

				qt_proc_guia_w		:= qt_proc_guia_w + 1;

				if (qt_proc_guia_w = 1) then
					nr_seq_guia_w := tiss_gerar_cabecalho_spsadt(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
				end if;

				select	max(nr_seq_guia)
				into STRICT	nr_seq_guia_proc_w
				from	w_tiss_proc_paciente;

				if (nr_seq_guia_proc_w <> nr_seq_guia_w) then
					nr_seq_apres_proc_w	:= 0;
					nr_seq_apresentacao_w	:= 0;
				end if;

				nr_seq_apres_proc_w	:= nr_seq_apres_proc_w + 1;

				insert	into w_tiss_proc_paciente(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_procedimento,
					cd_edicao_amb,
					qt_procedimento,
					vl_reducao_acrescimo,
					vl_procedimento,
					dt_entrada,
					dt_alta,
					ie_via_acesso,
					vl_unitario,
					ds_procedimento,
					dt_procedimento,
					dt_inicio_cirurgia,
					dt_fim_cirurgia,
					nr_seq_apresentacao,
					ie_tecnica_utilizada)
				values (nextval('w_tiss_proc_paciente_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_procedimento_w,
					cd_edicao_amb_w,
					qt_procedimento_w,
					vl_reducao_acrescimo_w,
					vl_procedimento_w,
					dt_entrada_w,
					dt_alta_w,
					ie_via_acesso_w,
					vl_unitario_w,
					ds_proced_convenio_w,
					dt_procedimento_w,
					dt_inicio_cirurgia_w,
					dt_fim_cirurgia_w,
					nr_seq_apres_proc_w,
					ie_tecnica_utilizada_w);

				if (ie_proc_solic_spsadt_w	= 'AC') then

					open c10;
					loop
					fetch c10 into
						cd_proc_solic_w,
						ds_proced_solic_w,
						qt_solicitada_w,
						qt_autorizada_w,
						cd_edicao_amb_solic_w;
					EXIT WHEN NOT FOUND; /* apply on c10 */

						if (length(cd_proc_solic_w) = 10) then
							if (substr(cd_proc_solic_w, 1,2) = '00') then
								cd_proc_solic_w		:= substr(cd_proc_solic_w, 3, 8);
							end if;
						end if;

						nr_seq_apresentacao_w := nr_seq_apresentacao_w + 1;

						insert into w_tiss_proc_solic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_procedimento,
							cd_edicao_amb,
							ds_procedimento,
							qt_solicitada,
							qt_autorizada,
							nr_seq_apresentacao)
						values (nextval('w_tiss_proc_solic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_proc_solic_w,
							cd_edicao_amb_solic_w,
							coalesce(ds_proced_convenio_w, ds_proced_solic_w),
							qt_solicitada_w,
							qt_autorizada_w,
							nr_seq_apresentacao_w);

					end loop;
					close c10;

				else

					insert into w_tiss_proc_solic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_procedimento,
						cd_edicao_amb,
						ds_procedimento,
						qt_solicitada,
						qt_autorizada,
						nr_seq_apresentacao)
					values (nextval('w_tiss_proc_solic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_procedimento_w,
						cd_edicao_amb_w,
						coalesce(ds_proced_convenio_w, ds_procedimento_w),
						qt_procedimento_w,
						qt_procedimento_w,
						nr_seq_apres_proc_w);

				end if;

				if (qt_proc_guia_w = 5) then
					qt_proc_guia_w	:= 0;
					CALL TISS_GERAR_OPM_EXEC(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
					CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
				end if;

			end loop;
			close c02;

			if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then
				CALL TISS_GERAR_OPM_EXEC(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
			end if;

			CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

		end loop;
		close c01;
	end if;

elsif (coalesce(nr_sequencia_autor_p,0) > 0) and (ie_tipo_autorizacao_w in ('3','5', '4')) then

	select	cd_ans,
		b.ds_arquivo_logo_tiss,
		b.cd_convenio
	into STRICT	cd_ans_w,
		ds_arquivo_logo_w,
		cd_convenio_w
	from	pessoa_juridica c,
		convenio b,
		autorizacao_convenio a
	where	a.cd_convenio		= b.cd_convenio
	and	b.cd_cgc		= c.cd_cgc
	and	a.nr_sequencia		= nr_sequencia_autor_p;

	select	cd_autorizacao,
		TISS_OBTER_DATA_AUTOR(nr_sequencia),
		cd_senha,
		dt_fim_vigencia,
		nr_atendimento
	into STRICT	cd_autorizacao_w,
		dt_autorizacao_w,
		cd_senha_w,
		dt_final_vigencia_w,
		nr_atendimento_w
	from	autorizacao_convenio
	where	nr_sequencia		= nr_sequencia_autor_p;

	select	max(nr_doc_conv_principal),
		max(b.ds_observacao),
		max(a.cd_categoria)
	into STRICT	cd_autorizacao_princ_w,
		ds_obs_autor_w,
		cd_categoria_conv_w
	from	atend_categoria_convenio a,
		autorizacao_convenio b
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_sequencia		= nr_sequencia_autor_p;

	select 	coalesce(max(ie_gerar_tiss), 'S')
	into STRICT 	ie_gerar_tiss_w
	from 	tiss_parametros_convenio
	where 	cd_estabelecimento	= Obter_Estab_Atend(nr_atendimento_w)
	and 	cd_convenio		= cd_convenio_w;

	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then

			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || '\' || ds_arquivo_logo_w);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null);
		end if;

		select	max(a.nr_atendimento),
			max(b.dt_entrada),
			max(b.ie_tipo_atendimento),
			max(b.cd_estabelecimento),
			max(b.nr_seq_classificacao)
		into STRICT	nr_atendimento_w,
			dt_atendimento_w,
			ie_tipo_atendimento_w,
			cd_estabelecimento_w,
			nr_seq_classif_atend_w
		from	autorizacao_convenio a,
			atendimento_paciente b
		where	a.nr_sequencia		= nr_sequencia_autor_p
		and	b.nr_atendimento	= a.nr_atendimento;

		select	coalesce(max(IE_DESC_PROC_INTERNO), 'N'),
			coalesce(max(ie_assinatura_solic), 'N')
		into STRICT	IE_DESC_PROC_INTERNO_W,
			ie_assinatura_solic_w
		from	tiss_parametros_convenio
		where	cd_convenio		= cd_convenio_w
		and	cd_estabelecimento	= cd_estabelecimento_w;

		if (ie_assinatura_solic_w	= 'S') then
			select	max(nm_medico_solicitante)
			into STRICT	ds_assinatura_solic_w
			from	tiss_dados_solicitante_v
			where	nr_sequencia_autor	= nr_sequencia_autor_p
			and	ds_versao		= '2.01.01'
			and	ie_origem		= 'AC';

			if (coalesce(ds_assinatura_solic_w::text, '') = '') then
				ds_assinatura_solic_w		:= '   ____________________________';
			end if;
		else
			ds_assinatura_solic_w		:= coalesce(tiss_obter_regra_campo(4, 'DS_ASSINATURA_SOLIC', cd_convenio_W, ds_assinatura_solic_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null), '   ____________________________');
		end if;

		ds_assinatura_resp_w		:= coalesce(tiss_obter_regra_campo(4, 'DS_ASSINATURA_RESP', cd_convenio_W, ds_assinatura_resp_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null), '   ____________________________');
		ds_assinatura_exec_w		:= coalesce(tiss_obter_regra_campo(4, 'DS_ASSINATURA_EXEC', cd_convenio_W, ds_assinatura_exec_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null), '   ____________________________');

		qt_proc_guia_w 		:= 0;
		nr_seq_apresentacao_w	:= 0;
		open c03;
		loop
		fetch c03 into
			cd_procedimento_w,
			ds_procedimento_w,
			qt_solicitada_w,
			qt_autorizada_w,
			cd_edicao_amb_w,
			ie_origem_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */

			if (ie_desc_proc_interno_w = 'S') then

				select	substr(tiss_eliminar_caractere(coalesce(obter_desc_prescr_proc_exam(cd_procedimento_w, ie_origem_proced_w, null, null),
									   ds_procedimento_w)), 1, 60)
				into STRICT	ds_procedimento_w
				;

			elsif (ie_desc_proc_interno_w = 'P') then
				ds_procedimento_w	:= substr(tiss_eliminar_caractere(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w)), 1, 60);
			end if;

			qt_proc_guia_w		:= qt_proc_guia_w + 1;
			if (qt_proc_guia_w = 1) then

				select	max(nr_seq_agenda)
				into STRICT	nr_seq_agenda_w
				from	autorizacao_convenio
				where	nr_sequencia	= nr_sequencia_autor_p;

				if (coalesce(cd_autorizacao_w::text, '') = '') or (cd_autorizacao_w = '0') then

					select	max(nr_doc_convenio)
					into STRICT	cd_autorizacao_w
					from	agenda_paciente
					where	nr_sequencia	= nr_seq_agenda_w;

				end if;

				if (coalesce(ie_data_ass_prest_w,'N') = 'S') then
					dt_assin_prest_w	:= dt_atendimento_w;
				else
					dt_assin_prest_w	:= clock_timestamp();
				end if;

				select	nextval('w_tiss_guia_seq')
				into STRICT	nr_seq_guia_w
				;

				insert	into w_tiss_guia(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					cd_ans,
					cd_autorizacao,
					dt_autorizacao,
					cd_senha,
					dt_validade_senha,
					dt_emissao_guia,
					nr_interno_conta,
					nr_seq_protocolo,
					nr_sequencia_autor,
					nr_atendimento,
					cd_autorizacao_princ,
					ds_observacao,
					ie_tiss_tipo_guia,
					dt_entrada,
					ds_assinatura_solic,
					ds_assinatura_resp,
					ds_assinatura_exec,
					DT_ASSIN_PREST)
				values (nr_seq_guia_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_ans_w,
					cd_autorizacao_w,
					dt_autorizacao_w,
					cd_senha_w,
					dt_final_vigencia_w,
					clock_timestamp(),
					null,
					null,
					nr_sequencia_autor_p,
					nr_atendimento_w,
					cd_autorizacao_princ_w,
					coalesce(tiss_obter_regra_campo(4, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null), substr(ds_obs_autor_w,1,4000)),
					'2',
					dt_atendimento_w,
					ds_assinatura_solic_w,
					ds_assinatura_resp_w,
					ds_assinatura_exec_w,
					DT_ASSIN_PREST_w);

				select	max(nr_atendimento)
				into STRICT	nr_atend_w
				from	tiss_dados_paciente_v
				where	nr_atendimento	= nr_atendimento_w;

				if (nr_atend_w IS NOT NULL AND nr_atend_w::text <> '') then
					insert	into w_tiss_beneficiario(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio)
					SELECT	nextval('w_tiss_beneficiario_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio
					from	tiss_dados_paciente_v
					where	ds_versao	= '2.01.01'
					and	nr_atendimento	= nr_atendimento_w
					and	ie_origem	= 'AP';
				else
					insert	into w_tiss_beneficiario(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio)
					SELECT	nextval('w_tiss_beneficiario_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_pessoa_fisica,
						nm_pessoa_fisica,
						nr_cartao_nac_sus,
						ds_plano,
						dt_validade_carteira,
						cd_usuario_convenio
					from	tiss_dados_paciente_v
					where	ds_versao	= '2.01.01'
					and	nr_seq_agenda	= nr_seq_agenda_w
					and	ie_origem	= 'AC';
				end if;

				select	max(cd_medico_convenio)
				into STRICT	cd_medico_convenio_w
				from	tiss_dados_solicitante_v
				where	nr_sequencia_autor	= nr_sequencia_autor_p
				and	ds_versao		= '2.01.01'
				and	ie_origem		= 'AC'
				and	cd_convenio		= cd_convenio_w;

				if (cd_medico_convenio_w IS NOT NULL AND cd_medico_convenio_w::text <> '') then

					insert into w_tiss_contratado_solic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						nm_solicitante,
						cd_cnes,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude)
					SELECT	nextval('w_tiss_contratado_solic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						nr_cpf,
						cd_medico_convenio_w,
						nr_cpf,
						nm_medico_solicitante,
						nm_medico_solicitante,
						null,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude
					from	tiss_dados_solicitante_v
					where	nr_sequencia_autor	= nr_sequencia_autor_p
					and	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC';

				else
					insert into w_tiss_contratado_solic(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						nm_solicitante,
						cd_cnes,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude)
					SELECT	nextval('w_tiss_contratado_solic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_cgc,
						cd_interno,
						nr_cpf,
						ds_razao_social,
						nm_medico_solicitante,
						cd_cnes,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude
					from	tiss_dados_solicitante_v
					where	nr_sequencia_autor	= nr_sequencia_autor_p
					and	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC';

				end if;

				/*lhalves OS 230225 em 05/08/2010 - verifica se existe CID na autorização.*/

				select	max(cd_doenca_cid),
					max(ds_diagnostico)
				into STRICT	cd_doenca_cid_autor_w,
					ds_observacao_autor_w
				from	tiss_diagnostico_v
				where	ds_versao		= '2.01.01'
				and	ie_origem		= 'ACD'
				and	nr_sequencia_autor 	= nr_sequencia_autor_p
				and	ie_classificacao_doenca 	= 'P';

				if (coalesce(cd_doenca_cid_autor_w::text, '') = '') then
					select	max(cd_doenca_cid),
						max(ds_diagnostico)
					into STRICT	cd_doenca_cid_w,
						ds_observacao_w
					from	tiss_diagnostico_v
					where	ds_versao		= '2.01.01'
					and	ie_origem		= 'AC'
					and	nr_sequencia_autor 	= nr_sequencia_autor_p
					and	ie_classificacao_doenca 	= 'P';
				else
					cd_doenca_cid_w	:= cd_doenca_cid_autor_w;
					ds_observacao_w	:= ds_observacao_autor_w;
				end if;

				insert into w_tiss_solicitacao(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					dt_solicitacao,
					ie_carater_solic,
					cd_cid,
					ds_indicacao)
				SELECT	nextval('w_tiss_solicitacao_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					dt_autorizacao,
					ie_carater_inter_sus,
					tiss_obter_regra_campo(2, 'CD_DOENCA_CID', CD_CONVENIO_W, cd_doenca_cid_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
					coalesce(a.ds_indicacao, ds_observacao_w)
				from	tiss_dados_solicitacao_v a
				where	a.nr_sequencia_autor	= nr_sequencia_autor_p
				and	ie_origem		= 'AC'
				and	ds_versao		= '2.01.01';

			end if;

			nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

			insert into w_tiss_proc_solic(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				cd_procedimento,
				cd_edicao_amb,
				ds_procedimento,
				qt_solicitada,
				qt_autorizada,
				nr_seq_apresentacao)
			values (nextval('w_tiss_proc_solic_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				cd_procedimento_w,
				cd_edicao_amb_w,
				ds_procedimento_w,
				qt_solicitada_w,
				qt_autorizada_w,
				nr_seq_apresentacao_w);

			if (qt_proc_guia_w = 5) then

				insert into w_tiss_contratado_exec(NR_SEQUENCIA,
					dt_ATUALIZACAO,
					nm_usUARIO,
					nr_seq_GUIA)
				values (nextval('w_tiss_contratado_exec_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

				insert	into w_tiss_totais(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia)
				values (nextval('w_tiss_totais_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

				qt_proc_guia_w	:= 0;
			end if;

		end loop;
		close c03;

		if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then

			insert into w_tiss_contratado_exec(NR_SEQUENCIA,
				dt_ATUALIZACAO,
				nm_usUARIO,
				nr_seq_GUIA)
			values (nextval('w_tiss_contratado_exec_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w);

			insert	into w_tiss_totais(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia)
			values (nextval('w_tiss_totais_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w);

		end if;

		if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

			qt_proc_guia_w		:= 0;
			nr_seq_apresentacao_w	:= 0;

			open c05;
			loop
			fetch c05 into
				cd_opm_w,
				cd_edicao_w,
				ds_opm_w,
				qt_solicitada_w,
				qt_autorizada_w,
				ds_fabricante_w,
				vl_opm_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */

				qt_proc_guia_w		:= qt_proc_guia_w + 1;
				nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;
				insert into w_tiss_opm(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_opm,
					cd_edicao,
					ds_opm,
					qt_solicitada,
					qt_autorizada,
					ds_fabricante,
					vl_opm,
					nr_seq_apresentacao)
				values (nextval('w_tiss_opm_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_opm_w,
					cd_edicao_w,
					ds_opm_w,
					qt_solicitada_w,
					qt_autorizada_w,
					ds_fabricante_w,
					vl_opm_w,
					nr_seq_apresentacao_w);

			end loop;
			close c05;

		end if;

		CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

	end if;

elsif (coalesce(nr_seq_exame_p,0) > 0 ) then

	qt_proc_guia_w 	:= 0;

	select	max(cd_ans),
		max(b.ds_arquivo_logo_tiss),
		max(b.cd_convenio),
		max(obter_tipo_atendimento(a.nr_atendimento)),
		max(a.cd_categoria),
		max(x.cd_estabelecimento),
		max(j.cd_doenca),
		max(x.nr_seq_classificacao),
		max(x.cd_medico_referido)
	into STRICT	cd_ans_w,
		ds_arquivo_logo_w,
		cd_convenio_w,
		ie_tipo_atendimento_w,
		cd_categoria_conv_w,
		cd_estabelecimento_w,
		cd_cid_externo_w,
		nr_seq_classif_atend_w,
		cd_medico_referido_w
	from	pessoa_juridica c,
		atendimento_paciente x,
		pedido_exame_externo j,
		convenio b,
		atend_categoria_convenio a
	where	a.cd_convenio		= b.cd_convenio
	and	j.nr_atendimento		= a.nr_atendimento
	and	x.nr_atendimento		= a.nr_atendimento
	and	b.cd_cgc			= c.cd_cgc
	and	j.nr_sequencia		= nr_seq_exame_p;

	select	coalesce(max(ie_cid_solic_externo), 'N'),
		coalesce(max(ie_quebra_proc_pep),'N'),
		coalesce(max(ie_gerar_tiss), 'S'),
		coalesce(max(ie_proc_tuss),'N'),
		coalesce(max(ie_desc_proc_interno),'P'),
		coalesce(max(ie_desc_exame_ext),'N'),
		coalesce(max(ie_spsadt_atend_retorno),'S'),
		coalesce(max(ie_medico_solic_exame),'A'),
		coalesce(max(ie_lado_rep),'N'),
		coalesce(max(ie_quebra_grupo_exame),'N'),
		max(ds_arquivo_logo_comp)
	into STRICT	ie_cid_exame_externo_w,
		ie_quebra_proc_pep_w,
		ie_gerar_tiss_w,
		ie_proc_tuss_w,
		ie_desc_proc_interno_w,
		ie_desc_exame_ext_w,
		ie_spsadt_atend_retorno_w,
		ie_medico_solic_exame_w,
		ie_lado_rep_w,
		ie_quebra_grupo_exame_w,
		ds_arquivo_logo_comp_w
	from	tiss_parametros_convenio
	where	cd_convenio		= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_w;

	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then

			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || '\' || ds_arquivo_logo_w);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null);
		end if;

		nr_seq_apresentacao_w := 0;

		select	nextval('w_tiss_guia_seq')
		into STRICT	nr_seq_guia_w
		;

		open c18;
		loop
		fetch c18 into
			cd_setor_exclusivo_w;
		EXIT WHEN NOT FOUND; /* apply on c18 */

			open c17;
			loop
			fetch c17 into
				nr_seq_apresent_pedido_w;
			EXIT WHEN NOT FOUND; /* apply on c17 */

				open c14;
				loop
				fetch c14 into
					cd_tipo_proc_w;
				EXIT WHEN NOT FOUND; /* apply on c14 */

					qt_proc_guia_w 		:= 0;
					nr_seq_apresentacao_w 	:= 0;

					open c04;
					loop
					fetch c04 into
						nr_seq_exame_w,
						cd_procedimento_w,
						ds_procedimento_w,
						qt_solicitada_w,
						qt_autorizada_w,
						nr_atendimento_w,
						cd_medico_w,
						cd_autorizacao_w,
						cd_senha_w,
						dt_inicio_vigencia_w,
						dt_final_vigencia_w,
						cd_cgc_w,
						ds_razao_social_w,
						cd_cnes_w,
						dt_atendimento_w,
						ds_justificativa_w,
						ds_cid_w,
						ie_tipo_atendimento_w,
						ie_clinica_w,
						ds_lado_proc_w,
						nr_seq_exame_lab_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */

						qt_proc_guia_w 		:= qt_proc_guia_w + 1;

						if (qt_proc_guia_w = 1) then
							select	nextval('w_tiss_guia_seq')
							into STRICT	nr_seq_guia_w
							;

							if (coalesce(ie_data_ass_prest_w,'N') = 'S') then
								dt_assin_prest_w	:= dt_atendimento_w;
							else
								dt_assin_prest_w	:= clock_timestamp();
							end if;

							/*Alteração lhalves OS202825 23/03/2010 - Aplicar regra prestador solic nas guias emitida pelo PEP - Solic de exames esternos*/

							select	max(obter_setor_atendimento(nr_atendimento_w))
							into STRICT	cd_setor_entrada_w
							;

							SELECT * FROM tiss_obter_regra_prest_solic(	cd_convenio_w, cd_estabelecimento_w, cd_setor_entrada_w, ie_clinica_w, cd_procedimento_w, ie_tipo_atendimento_w, 'N', ie_solicitante_w, cd_cgc_solic_regra_w, cd_medico_w, cd_medico_solic_w, ds_irrelevante_w, ds_irrelevante_w, cd_medico_referido_w, cd_categoria_conv_w, clock_timestamp(), null, null, null, nr_seq_regra_solic_w) INTO STRICT ie_solicitante_w, cd_cgc_solic_regra_w, cd_medico_solic_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_solic_w;

							if (coalesce(ie_solicitante_w,'H') = 'MC') then

								select	coalesce(max(obter_se_medico_conveniado(cd_estabelecimento_w, cd_medico_w, cd_convenio_w, null, null, null,null,null,null, null, null)), 'N')
								into STRICT	ie_conveniado_w
								;

								if (coalesce(ie_conveniado_w,'S') = 'S') then

									cd_cgc_w		:= tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_solic_w, null, null, 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w);
									ds_razao_social_w 	:= substr(obter_nome_pf_pj(cd_medico_w, null), 1, 150);
									cd_cnes_w		:= null;
								else
									cd_cgc_w 		:= cd_cgc_w;
									ds_razao_social_w 	:= substr(obter_nome_pf_pj(null, cd_cgc_w), 1, 150);
								end if;

							elsif (coalesce(ie_solicitante_w,'H') = 'H') then
								cd_cgc_w 		:= cd_cgc_w;
								ds_razao_social_w 	:= substr(obter_nome_pf_pj(null, cd_cgc_w), 1, 150);

							elsif (coalesce(ie_solicitante_w,'H') = 'M') then
								cd_cgc_w 		:= obter_dados_pf(cd_medico_w, 'CPF');
								ds_razao_social_w 	:= substr(obter_nome_pf_pj(cd_medico_w, null), 1, 150);
								cd_cnes_w		:= null;

							elsif (coalesce(ie_solicitante_w,'H') = 'I') then
								if (cd_medico_solic_w IS NOT NULL AND cd_medico_solic_w::text <> '') then
									cd_cgc_w		:= coalesce((tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_solic_w, null, null, 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w)),
													(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_solic_w, null, null, 'CPF',null,ie_tipo_atendimento_w,cd_categoria_conv_w)));
									ds_razao_social_w 	:= substr(obter_nome_pf_pj(cd_medico_solic_w, null), 1, 150);
									cd_cnes_w		:= null;

								elsif (cd_cgc_solic_regra_w IS NOT NULL AND cd_cgc_solic_regra_w::text <> '') then
									cd_cgc_w		:= coalesce((tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_solic_regra_w, null, 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w)),
													(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_solic_regra_w, null, 'CGC',null,ie_tipo_atendimento_w,cd_categoria_conv_w)));
									ds_razao_social_w 	:= substr(obter_nome_pf_pj(null, cd_cgc_solic_regra_w), 1, 150);
								elsif (coalesce(cd_medico_solic_w::text, '') = '') and (coalesce(cd_cgc_solic_regra_w::text, '') = '') then
									cd_cgc_w		:= coalesce((tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_w, null, 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w)),
													(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_w, null, 'CGC',null,ie_tipo_atendimento_w,cd_categoria_conv_w)));
									ds_razao_social_w 	:= substr(obter_nome_pf_pj(null, cd_cgc_w), 1, 150);

								end if;
							end if;
							/*Fim alteração lhalves OS202825*/

							insert	into w_tiss_guia(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								cd_ans,
								cd_autorizacao,
								dt_autorizacao,
								cd_senha,
								dt_validade_senha,
								dt_emissao_guia,
								nr_atendimento,
								ds_observacao,
								ie_tiss_tipo_guia,
								dt_entrada,
								cd_autorizacao_princ,
								DT_ASSIN_PREST)
							values (nr_seq_guia_w,
								clock_timestamp(),
								nm_usuario_p,
								cd_ans_w,
								cd_autorizacao_princ_exame_w,
								null,
								cd_senha_w,
								dt_final_vigencia_w,
								clock_timestamp(),
								nr_atendimento_w,
								tiss_obter_regra_campo(4, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
								'2',
								dt_atendimento_w,
								cd_autorizacao_princ_exame_w,
								DT_ASSIN_PREST_w);

							insert	into w_tiss_beneficiario(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_pessoa_fisica,
								nm_pessoa_fisica,
								nr_cartao_nac_sus,
								ds_plano,
								dt_validade_carteira,
								cd_usuario_convenio)
							SELECT	nextval('w_tiss_beneficiario_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								cd_pessoa_fisica,
								nm_pessoa_fisica,
								nr_cartao_nac_sus,
								ds_plano,
								dt_validade_carteira,
								cd_usuario_convenio
							from	tiss_dados_paciente_v
							where	ds_versao		= '2.01.01'
							and	nr_atendimento		= nr_atendimento_w
							and	ie_origem		= 'AP';

							insert into w_tiss_contratado_solic(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_cgc,
								cd_interno,
								nr_cpf,
								nm_contratado,
								nm_solicitante,
								cd_cnes,
								sg_conselho,
								nr_crm,
								uf_crm,
								cd_cbo_saude)
							SELECT	nextval('w_tiss_contratado_solic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								cd_cgc_w,
								null,
								substr(obter_dados_pf(cd_pessoa_fisica, 'CPF'), 1, 150),
								ds_razao_social_w,
								obter_nome_medico(cd_pessoa_fisica,'N'),
								cd_cnes_w,
								obter_Dados_medico(cd_pessoa_fisica, 'SGCRM'),
								obter_Dados_medico(cd_pessoa_fisica, 'CRM'),
								obter_Dados_medico(cd_pessoa_fisica, 'UFCRM'),
								substr(obter_dados_pf(cd_pessoa_fisica, 'CBOS'),1,20)
							from	medico
							where	cd_pessoa_fisica = cd_medico_w;

							if (ie_cid_exame_externo_w	= 'N') then
								select	max(cd_doenca),
									max(ds_diagnostico)
								into STRICT	cd_doenca_cid_w,
									ds_observacao_w
								from	diagnostico_doenca a
								where	nr_atendimento		= nr_atendimento_w
								and	ie_classificacao_doenca = 'P';
							else
								cd_doenca_cid_w	:= ds_cid_w;
							end if;

							insert into w_tiss_solicitacao(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								dt_solicitacao,
								ie_carater_solic,
								cd_cid,
								ds_indicacao)
							SELECT	nextval('w_tiss_solicitacao_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								null,
								null,
								tiss_obter_regra_campo(2, 'CD_DOENCA_CID', CD_CONVENIO_W, coalesce(cd_cid_externo_w, cd_doenca_cid_w), ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
								coalesce(ds_justificativa_w, ds_observacao_w)
							;

						end if;

						nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

						/*lhalves OS267716 em 23/11/2010 - Proc TUSS para exames padrões */

						if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
							select	max(nr_proc_interno)
							into STRICT	nr_seq_proc_interno_w
							from 	med_exame_padrao
							where	nr_sequencia	= nr_seq_exame_w;

							if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
								select 	max(cd_procedimento_tuss),
									substr(Obter_Descricao_Procedimento(max(cd_procedimento_tuss),8),1,255)
								into STRICT	cd_proc_tuss_w,
									ds_proc_tuss_w
								from 	proc_interno
								where	nr_sequencia = nr_seq_proc_interno_w;

								if (ie_proc_tuss_w = 'S') and (coalesce(cd_proc_tuss_w,0) <> 0) then
									cd_procedimento_w	:= coalesce(cd_proc_tuss_w,cd_procedimento_w);
								end if;

								if (ie_desc_proc_interno_W = 'T') and (coalesce(ds_proc_tuss_w,'Não encontrado') <> 'Não encontrado') then
									ds_procedimento_w	:= coalesce(ds_proc_tuss_w,ds_procedimento_w);
								end if;
							end if;
						end if;

						if (nr_seq_exame_lab_w IS NOT NULL AND nr_seq_exame_lab_w::text <> '') then
							select 	max(cd_procedimento_tuss),
								substr(Obter_Descricao_Procedimento(max(cd_procedimento_tuss),8),1,255)
							into STRICT	cd_proc_tuss_w,
								ds_proc_tuss_w
							from 	exame_laboratorio
							where	nr_seq_exame = nr_seq_exame_lab_w;

							if (ie_proc_tuss_w = 'S') and (coalesce(cd_proc_tuss_w,0) <> 0) then
								cd_procedimento_w	:= coalesce(cd_proc_tuss_w,cd_procedimento_w);
							end if;

							if (ie_desc_proc_interno_W = 'T') and (coalesce(ds_proc_tuss_w,'Não encontrado') <> 'Não encontrado') then
								ds_procedimento_w	:= coalesce(ds_proc_tuss_w,ds_procedimento_w);
							end if;

						end if;

						if	((ie_desc_exame_ext_w = 'S') and (coalesce(ds_exame_w,'X') <> 'X')) then
							ds_procedimento_w := ds_exame_w;
						end if;

						if (ie_lado_rep_w = 'S') and (ds_lado_proc_w IS NOT NULL AND ds_lado_proc_w::text <> '') then
							ds_procedimento_w	:= substr((ds_procedimento_w ||'-'||ds_lado_proc_w),1,255);
						end if;

						ds_procedimento_w	:= substr(coalesce(tiss_obter_campo_esp(	cd_convenio_w,
														cd_estabelecimento_w,
														'DS_PROCEDIMENTO',
														ds_procedimento_w,
														null,null,null,null,null,
														null,null,null,null,
														'SADTS',
														cd_procedimento_w,
														null,null,null,
														cd_cgc_w,
														null,
														cd_medico_w,
														null, null, ds_lado_proc_w, null, null),ds_procedimento_w),1,255);


						insert into w_tiss_proc_solic(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_procedimento,
							cd_edicao_amb,
							ds_procedimento,
							qt_solicitada,
							qt_autorizada,
							nr_seq_apresentacao)
						values (nextval('w_tiss_proc_solic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_procedimento_w,
							null,
							ds_procedimento_w,
							qt_solicitada_w,
							qt_autorizada_w,
							nr_seq_apresentacao_w);

						if (qt_proc_guia_w = 5) then
							nr_seq_apresentacao_w		:= 0;
							qt_proc_guia_w			:= 0;
							CALL TISS_GERAR_OPM_EXEC(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
							CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

						end if;
					end loop;
					close c04;

					if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then
						CALL TISS_GERAR_OPM_EXEC(nr_seq_conta_guia_w, nr_seq_guia_w, nm_usuario_p);
						CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
					end if;

				end loop;
				close c14;

			end loop;
			close c17;

		end loop;
		close c18;
	end if;

elsif (coalesce(nr_prescr_tiss_p,0) > 0)  then

	select	max(a.cd_estabelecimento),
		max(b.cd_convenio),
		max(a.nr_seq_classificacao)
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w,
		nr_seq_classif_atend_w
	from	atendimento_paciente a,
		atend_categoria_convenio b
	where	obter_atecaco_atendimento(a.nr_atendimento) 	= b.nr_seq_interno
	and	a.nr_atendimento				= b.nr_atendimento
	and	a.nr_atendimento				= obter_atendimento_prescr(nr_prescr_tiss_p);

	select	coalesce(max(ie_prescr_unica),'N'),
		coalesce(max(ie_quebra_proc_pep), 'N'),
		coalesce(max(ie_gerar_tiss), 'S')
	into STRICT	ie_prescr_unica_w,
		ie_quebra_proc_pep_w,
		ie_gerar_tiss_w
	from	TISS_PARAMETROS_CONVENIO
	where	cd_estabelecimento			= cd_estabelecimento_w
	and	cd_convenio				= cd_convenio_w;

	select	max(cd_ans),
		max(b.ds_arquivo_logo_tiss),
		max(b.cd_convenio),
		max(t.nr_doc_convenio)
	into STRICT	cd_ans_w,
		ds_arquivo_logo_w,
		cd_convenio_w,
		cd_autorizacao_w
	from	pessoa_juridica c,
		convenio b,
		atend_categoria_convenio t,
		prescr_medica a
	where	t.cd_convenio				= b.cd_convenio
	and	b.cd_cgc					= c.cd_cgc
	and	t.nr_atendimento				= a.nr_atendimento
	and	obter_atecaco_atendimento(t.nr_atendimento) 	= t.nr_seq_interno
	and	a.nr_prescricao				= nr_prescr_tiss_p;

	select	max(a.cd_senha),
		max(a.dt_inicio_vigencia),
		max(a.dt_final_vigencia),
		max(a.nr_atendimento),
		max(b.dt_entrada),
		max(b.ie_tipo_atendimento),
		max(a.cd_categoria),
		max(ie_clinica),
		max(coalesce(a.nr_doc_conv_principal,a.nr_doc_convenio))
	into STRICT	cd_senha_w,
		dt_inicio_vigencia_w,
		dt_final_vigencia_w,
		nr_atendimento_w,
		dt_atendimento_w,
		ie_tipo_atendimento_w,
		cd_categoria_conv_w,
		ie_clinica_w,
		cd_autor_princ_w
	from	atend_categoria_convenio a,
		atendimento_paciente b
	where	a.nr_atendimento				= obter_atendimento_prescr(nr_prescr_tiss_p)
	and	obter_atecaco_atendimento(b.nr_atendimento) 	= a.nr_seq_interno
	and	a.nr_atendimento				= b.nr_atendimento;

	if (coalesce(ie_gerar_tiss_w,'S')= 'S') then

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				coalesce(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || '\' || ds_arquivo_logo_w);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null);
		end if;

		open c06;
		loop
		fetch c06 into
			cd_setor_atendimento_w,
			cd_autorizacao_ww,
			ds_inicacao_clinica_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */

			open c15;
			loop
			fetch c15 into
				cd_tipo_proc_w;
			EXIT WHEN NOT FOUND; /* apply on c15 */

				qt_proc_guia_w 		:= 0;
				nr_seq_apresentacao_w	:= 0;

				open c07;
				loop
				fetch c07 into
					cd_procedimento_w,
					ds_procedimento_w,
					qt_solicitada_w,
					qt_autorizada_w,
					dt_autorizacao_w,
					ds_observacao_w,
					ie_origem_proced_w,
					cd_estabelecimento_w,
					cd_convenio_w,
					ds_proc_tabela_interno_w,
					ds_proc_exame_proc_w,
					ds_proc_procedimento_w,
					ie_urgencia_w,
					DT_PREV_EXECUCAO_w,
					ie_lado_w;
				EXIT WHEN NOT FOUND; /* apply on c07 */

					select	CD_PROCEDIMENTO,
						IE_ORIGEM_PROCED,
						CD_GRUPO_PROC,
						CD_ESPECIALIDADE,
						CD_AREA_PROCEDIMENTO
					into STRICT	CD_PROCEDIMENTO_w,
						IE_ORIGEM_PROCED_w,
						CD_GRUPO_PROC_w,
						CD_ESPECIALIDADE_w,
						CD_AREA_PROCEDIMENTO_w
					from	estrutura_procedimento_v
					where	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w;

					select	max(cd_convenio)
					into STRICT	cd_convenio_w
					from	atend_categoria_convenio
					where	nr_atendimento		= obter_atendimento_prescr(nr_prescr_tiss_p);

					IE_REGRA_W := TISS_OBTER_REGRA_PROC_PRESCR(	CD_AREA_PROCEDIMENTO_w, CD_ESPECIALIDADE_w, CD_GRUPO_PROC_w, CD_PROCEDIMENTO_w, IE_ORIGEM_PROCED_w, cd_estabelecimento_w, IE_REGRA_W, cd_convenio_w, null, null);

					select	coalesce(max(ie_spsadt_zerado),'S'),
						coalesce(max(ie_medico_rep),'P'),
						coalesce(max(ie_desc_proc_interno),'P'),
						coalesce(max(ie_obs_urgente), 'N'),
						coalesce(max(ie_lado_rep),'N'),
						coalesce(max(ie_solicitante),'H')
					into STRICT	ie_spsadt_zerado_w,
						ie_medico_rep_w,
						ie_desc_proc_interno_w,
						ie_obs_urgente_w,
						ie_lado_rep_w,
						ie_solicitante_w
					from	TISS_PARAMETROS_CONVENIO
					where	cd_estabelecimento	= cd_estabelecimento_w
					and	cd_convenio		= cd_convenio_w;

					if (ie_obs_urgente_w = 'S') and (ie_urgencia_w = 'S') then
						ds_observacao_w	:= substr('Agora - Data prevista execução: ' || to_char(DT_PREV_EXECUCAO_w, 'dd/mm/yyyy hh24:mi') || chr(13) || ds_observacao_w,1,255);
					end if;

					if (ie_desc_proc_interno_w = 'S') then
						ds_procedimento_w := coalesce(ds_proc_tabela_interno_w, ds_procedimento_w);
					elsif (ie_desc_proc_interno_w = 'P') then
						ds_procedimento_w := coalesce(ds_proc_exame_proc_w, ds_procedimento_w);
					elsif (ie_desc_proc_interno_w = 'N') then
						ds_procedimento_w := coalesce(ds_procedimento_w,ds_proc_procedimento_w);
					end if;

					if (coalesce(IE_REGRA_W, 'S') = 'S') then

						qt_proc_guia_w		:= qt_proc_guia_w + 1;

						if (qt_proc_guia_w = 1) then

							select	nextval('w_tiss_guia_seq')
							into STRICT	nr_seq_guia_w
							;

							if (coalesce(ie_data_ass_prest_w,'N') = 'S') then
								dt_assin_prest_w	:= dt_atendimento_w;
							else
								dt_assin_prest_w	:= clock_timestamp();
							end if;

							/*lhalves OS 226155 em 25/06/2010 - Considerar regra guia princ, ao emitir a guia pelo REP*/

							ie_regra_guia_princ_w	:= null;
							open c16;
							loop
							fetch c16 into
								ie_regra_guia_princ_w;
							EXIT WHEN NOT FOUND; /* apply on c16 */
							end loop;
							close c16;

							if (ie_regra_guia_princ_w = 'AG') then
								if (cd_autor_princ_w IS NOT NULL AND cd_autor_princ_w::text <> '') then
									cd_autor_princ_prescr_w := cd_autor_princ_w;
								else
									select 	CASE WHEN cd_autorizacao_ww='X' THEN  cd_autorizacao_w  ELSE cd_autorizacao_ww END
									into STRICT	cd_autor_princ_prescr_w
									;
								end if;
							elsif (ie_regra_guia_princ_w in ('GP','A')) then
								cd_autor_princ_prescr_w := cd_autor_princ_w;
							elsif (ie_regra_guia_princ_w = 'S') then
								cd_autor_princ_prescr_w	:= cd_senha_w;
							elsif (ie_regra_guia_princ_w = 'AS') then
								cd_autor_princ_prescr_w := cd_autor_princ_w || cd_senha_w;
							elsif (ie_regra_guia_princ_w = 'G') then
								select 	CASE WHEN cd_autorizacao_ww='X' THEN  cd_autorizacao_w  ELSE cd_autorizacao_ww END
								into STRICT	cd_autor_princ_prescr_w
								;
							elsif (ie_regra_guia_princ_w = 'N') then
								cd_autor_princ_prescr_w := null;
							end if;

							insert	into w_tiss_guia(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								cd_ans,
								cd_autorizacao,
								cd_autorizacao_princ,
								dt_autorizacao,
								cd_senha,
								dt_validade_senha,
								dt_emissao_guia,
								nr_interno_conta,
								nr_seq_protocolo,
								nr_sequencia_autor,
								ds_observacao,
								ie_tiss_tipo_guia,
								dt_entrada,
								nr_atendimento,
								DT_ASSIN_PREST)
							values (nr_seq_guia_w,
								clock_timestamp(),
								nm_usuario_p,
								cd_ans_w,
								CASE WHEN cd_autorizacao_ww='X' THEN  cd_autorizacao_w  ELSE cd_autorizacao_ww END ,
								cd_autor_princ_prescr_w,
								dt_inicio_vigencia_w,
								cd_senha_w,
								dt_final_vigencia_w,
								clock_timestamp(),
								null,
								null,
								null,
								coalesce(tiss_obter_regra_campo(4, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null), ds_observacao_w),
								'2',
								dt_atendimento_w,
								nr_atendimento_w,
								DT_ASSIN_PREST_w);

							insert	into w_tiss_beneficiario(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_pessoa_fisica,
								nm_pessoa_fisica,
								nr_cartao_nac_sus,
								ds_plano,
								dt_validade_carteira,
								cd_usuario_convenio)
							SELECT	nextval('w_tiss_beneficiario_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								cd_pessoa_fisica,
								nm_pessoa_fisica,
								nr_cartao_nac_sus,
								ds_plano,
								dt_validade_carteira,
								cd_usuario_convenio
							from	tiss_dados_paciente_v
							where	ds_versao		= '2.01.01'
							and	nr_atendimento		= obter_atendimento_prescr(nr_prescr_tiss_p)
							and	ie_origem		= 'AP';

							/*inicio lhalves OS213180 em 07/05/2010 - gravar o tipo atend tiss conforme regras */

							select	max(coalesce(ie_tipo_atend_tiss,'0'))
							into STRICT 	ie_tipo_atend_tiss_w
							from	tiss_tipo_atendimento
							where	ie_tipo_atendimento			= ie_tipo_atendimento_w
							and	coalesce(ie_clinica, coalesce(ie_clinica_w,0))	= coalesce(ie_clinica_w,0)
							and	coalesce(cd_setor_entrada, Obter_Setor_Atendimento(obter_atendimento_prescr(nr_prescr_tiss_p)))	= Obter_Setor_Atendimento(obter_atendimento_prescr(nr_prescr_tiss_p))
							and	coalesce(cd_convenio, cd_convenio_w)					= cd_convenio_w
							order by
								coalesce(ie_tipo_atendimento,0),
								coalesce(ie_clinica,0),
								coalesce(cd_setor_entrada,0),
								coalesce(cd_convenio,0);

							insert into w_tiss_dados_atendimento(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								ie_tipo_atendimento)
							values (nextval('w_tiss_dados_atendimento_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								ie_tipo_atend_tiss_w);
							/*Fim lhalves OS 213180*/

							select	max(obter_nome_medico(cd_medico,'N')),
								max(obter_dados_medico(cd_medico, 'UFCRM')),
								max(obter_dados_medico(cd_medico, 'SGCRM')),
								max(obter_dados_medico(cd_medico, 'CRM')),
								max(obter_dados_pf(cd_medico, 'CPF')),
								max(substr(obter_nome_pf_pj(null, cd_cgc_solic),1,254)),
								max(cd_cgc_solic),
								max(cd_medico)
							into STRICT	nm_medico_solic_w,
								uf_crm_w,
								sg_conselho_w,
								nr_crm_w,
								nr_cpf_w,
								nm_contratado_solic_w,
								cd_interno_solic_w,
								cd_medico_solic_w
							from	prescr_medica
							where	nr_prescricao	= nr_prescr_tiss_p;

							if (ie_medico_rep_w	= 'A') then
								select	coalesce(max(obter_nome_medico(b.cd_medico_anterior, 'N')), nm_medico_solic_w),
									coalesce(max(obter_dados_medico(b.cd_medico_anterior, 'UFCRM')), uf_crm_w),
									coalesce(max(obter_dados_medico(b.cd_medico_anterior, 'SGCRM')), sg_conselho_w),
									coalesce(max(obter_dados_medico(b.cd_medico_anterior, 'CRM')), nr_crm_w),
									coalesce(max(obter_dados_pf(b.cd_medico_anterior, 'CPF')), nr_cpf_w)
								into STRICT	nm_medico_solic_w,
									uf_crm_w,
									sg_conselho_w,
									nr_crm_w,
									nr_cpf_w
								from	atendimento_troca_medico b,
									atendimento_paciente a
								where	a.nr_atendimento	= b.nr_atendimento
								and	a.nr_atendimento	= nr_atendimento_w
								and	b.dt_troca = (	SELECT	min(x.dt_troca)
											from	atendimento_troca_medico x
											where	x.nr_atendimento = a.nr_atendimento);
							end if;

							select 	max(obter_setor_prescricao(nr_prescr_tiss_p,'C'))
							into STRICT 	cd_setor_prescr_w
							;

							select	coalesce(max(obter_se_medico_conveniado(cd_estabelecimento_w, cd_medico_solic_w, cd_convenio_w, null, null, null, cd_setor_atendimento_w,null,null, null, null)), 'N')
							into STRICT	ie_conveniado_w
							;

							ie_solicitante_ww	:= null;

							if (ie_solicitante_w	= 'R') then

								select	max(d.ie_tipo_atendimento),
									max(d.ie_clinica),
									max(d.cd_procedencia),
									max(d.cd_medico_referido)
								into STRICT	ie_tipo_atendimento_w,
									ie_clinica_w,
									cd_procedencia_w,
									cd_medico_referido_w
								from	atendimento_paciente d
								where	nr_atendimento	= obter_atendimento_prescr(nr_prescr_tiss_p);

								select	max(coalesce(cd_medico_atendimento, cd_medico_resp))
								into STRICT	cd_medico_atendimento_w
								from	atendimento_paciente
								where	nr_atendimento	= obter_atendimento_prescr(nr_prescr_tiss_p);

								select	max(obter_setor_atendimento(obter_atendimento_prescr(nr_prescr_tiss_p)))
								into STRICT	cd_setor_entrada_w
								;

								SELECT * FROM tiss_obter_regra_prest_solic(cd_convenio_w, cd_estabelecimento_w, cd_setor_prescr_w, ie_clinica_w, cd_procedencia_w, ie_tipo_atendimento_w, 'N', ie_solicitante_w, cd_cgc_prest_solic_regra_w, cd_medico_atendimento_w, cd_medico_solic_w, ds_irrelevante_w, ds_irrelevante_w, cd_medico_referido_w, cd_categoria_conv_w, clock_timestamp(), null, null, null, nr_seq_regra_solic_w) INTO STRICT ie_solicitante_w, cd_cgc_prest_solic_regra_w, cd_medico_solic_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_solic_w;
							end if;

							if (ie_solicitante_w	= 'M') or (ie_solicitante_w	= 'MC' AND ie_conveniado_w	= 'S') then
								ie_solicitante_ww		:= ie_solicitante_w;
								nm_contratado_solic_w		:= nm_medico_solic_w;
								cd_interno_solic_w		:= tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_solic_w, null, cd_setor_prescr_w, 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w);
							elsif (ie_solicitante_w	= 'I') then
								if (coalesce(cd_medico_solic_w::text, '') = '') then
									ie_solicitante_ww		:= ie_solicitante_w;
									select	max(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_prest_solic_regra_w, cd_setor_entrada_w, 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w)),
										max(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, null, cd_cgc_prest_solic_regra_w, cd_setor_entrada_w, 'CGC',null,ie_tipo_atendimento_w,cd_categoria_conv_w))
									into STRICT	cd_interno_solic_w,
										cd_cgc_solic_w
									;

									select	max(ds_razao_social),
										max(cd_cnes)
									into STRICT	nm_contratado_solic_w,
										cd_cnes_solic_w
									from	pessoa_juridica
									where	cd_cgc		= cd_cgc_prest_solic_regra_w;
								else
									ie_solicitante_ww		:= ie_solicitante_w;
									select	max(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_solic_w, null, cd_setor_entrada_w, 'CI',null,ie_tipo_atendimento_w,cd_categoria_conv_w)),
										max(tiss_obter_codigo_prestador(cd_convenio_w, cd_estabelecimento_w, cd_medico_solic_w, null, cd_setor_entrada_w, 'CPF',null,ie_tipo_atendimento_w,cd_categoria_conv_w))
									into STRICT	cd_interno_solic_w,
										nr_cpf_solic_w
									;

									select	max(nm_pessoa_fisica),
										max(cd_cnes)
									into STRICT	nm_contratado_solic_w,
										cd_cnes_solic_w
									from	pessoa_fisica
									where	cd_pessoa_fisica	= cd_medico_solic_w;

								end if;
							end if;

							insert into w_tiss_contratado_solic(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_cgc,
								cd_interno,
								nr_cpf,
								nm_contratado,
								nm_solicitante,
								cd_cnes,
								sg_conselho,
								nr_crm,
								uf_crm,
								cd_cbo_saude)
							SELECT	nextval('w_tiss_contratado_solic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								CASE WHEN coalesce(ie_solicitante_ww,'H')='H' THEN  cd_cgc  ELSE cd_cgc_solic_w END ,
								CASE WHEN coalesce(ie_solicitante_ww,'H')='H' THEN  cd_interno  ELSE cd_interno_solic_w END ,
								coalesce(nr_cpf_solic_w, nr_cpf_w),
								coalesce(nm_contratado_solic_w, ds_razao_social),
								tiss_obter_regra_campo(2, 'NM_SOLICITANTE', CD_CONVENIO_W, nm_medico_solic_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
								coalesce(cd_cnes_solic_w, cd_cnes),
								tiss_obter_regra_campo(2, 'SG_CONSELHO', CD_CONVENIO_W, sg_conselho_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
								tiss_obter_regra_campo(2, 'NR_CRM', CD_CONVENIO_W, nr_crm_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
								tiss_obter_regra_campo(2, 'UF_CRM', CD_CONVENIO_W, uf_crm_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
								tiss_obter_regra_campo(2, 'CD_CBO_SAUDE', CD_CONVENIO_W, cd_cbo_saude, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null)
							from	tiss_dados_solicitante_v
							where	nr_atendimento		= obter_atendimento_prescr(nr_prescr_tiss_p)
							and	ds_versao		= '2.01.01'
							and	ie_origem		= 'AP';

							select	max(cd_doenca_cid),
								max(ds_diagnostico)
							into STRICT	cd_doenca_cid_w,
								ds_observacao_w
							from	tiss_diagnostico_v
							where	ds_versao		= '2.01.01'
							--and	ie_origem		= 'AC'    	lhalves OS 198528 02/03/2010, apenas gerava o CID na guia emitida pelo REP se existia autorização
							and	nr_atendimento	 	= obter_atendimento_prescr(nr_prescr_tiss_p)
							and	ie_classificacao_doenca = 'P';

							select	max(CASE WHEN ie_carater_inter_sus='1' THEN  'E'  ELSE 'U' END )
							into STRICT	ie_carater_inter_sus_w
							from	atendimento_paciente a
							where	a.nr_atendimento	= obter_atendimento_prescr(nr_prescr_tiss_p);

							insert into w_tiss_solicitacao(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								dt_solicitacao,
								ie_carater_solic,
								cd_cid,
								ds_indicacao)
							values (nextval('w_tiss_solicitacao_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								dt_autorizacao_w,
								ie_carater_inter_sus_w,
								tiss_obter_regra_campo(2, 'CD_DOENCA_CID', CD_CONVENIO_W, cd_doenca_cid_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, nr_seq_classif_atend_w, null, null),
								coalesce(ds_inicacao_clinica_w, ds_observacao_w));

						end if;


						ie_emitir_spsadt_zerado_w	:= ie_spsadt_zerado_w;
						if (ie_spsadt_zerado_w	= 'R') then
							ie_emitir_spsadt_zerado_w		:= 'S';
							open c13;
							loop
							fetch c13 into
								ie_emitir_spsadt_zerado_w;
							EXIT WHEN NOT FOUND; /* apply on c13 */
							end loop;
							close c13;
						end if;

						if (coalesce(qt_solicitada_w,0) <> 0) or (coalesce(qt_autorizada_w,0) <> 0) or (ie_emitir_spsadt_zerado_w = 'S') then

							nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

							if (coalesce(ie_lado_rep_w,'N') = 'S') then
								if (ie_lado_w IS NOT NULL AND ie_lado_w::text <> '') then
									ds_procedimento_w := ds_procedimento_w || ' - ' || ie_lado_w;
								end if;
							end if;

							-- Edgar 05/08/2009, OS 158125, tratar conversão
							cd_procedimento_w	:= coalesce(TISS_Obter_Proced_Conversao(cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, 'C'), cd_procedimento_w);

							insert into w_tiss_proc_solic(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_guia,
								cd_procedimento,
								cd_edicao_amb,
								ds_procedimento,
								qt_solicitada,
								qt_autorizada,
								nr_seq_apresentacao)
							values (nextval('w_tiss_proc_solic_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								cd_procedimento_w,
								cd_edicao_amb_w,
								ds_procedimento_w,
								qt_solicitada_w,
								qt_autorizada_w,
								nr_seq_apresentacao_w);

							if (qt_proc_guia_w = 5) then

								insert into w_tiss_contratado_exec(nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									nr_seq_guia)
								values (nextval('w_tiss_contratado_exec_seq'),
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_guia_w);

								insert	into w_tiss_totais(nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									nr_seq_guia)
								values (nextval('w_tiss_totais_seq'),
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_guia_w);

								qt_proc_guia_w	:= 0;
								nr_seq_apresentacao_w	:= 0;
								CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);
							end if;
						end if;
					end if;

				end loop;
				close c07;

				if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then

					insert into w_tiss_contratado_exec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

					insert	into w_tiss_totais(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia)
					values (nextval('w_tiss_totais_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w);

				end if;

				if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

					qt_proc_guia_w		:= 0;
					nr_seq_apresentacao_w	:= 0;

					open c12;
					loop
					fetch c12 into
						cd_opm_w,
						cd_edicao_w,
						ds_opm_w,
						qt_solicitada_w,
						qt_autorizada_w,
						ds_fabricante_w;
					EXIT WHEN NOT FOUND; /* apply on c12 */

						qt_proc_guia_w		:= qt_proc_guia_w + 1;
						nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

						insert into w_tiss_opm(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_guia,
							cd_opm,
							cd_edicao,
							ds_opm,
							qt_solicitada,
							qt_autorizada,
							ds_fabricante,
							vl_opm,
							nr_seq_apresentacao)
						values (nextval('w_tiss_opm_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_guia_w,
							cd_opm_w,
							cd_edicao_w,
							ds_opm_w,
							qt_solicitada_w,
							qt_autorizada_w,
							ds_fabricante_w,
							null,
							nr_seq_apresentacao_w);

					end loop;
					close c12;

				end if;

				CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

			end loop;
			close c15;

		end loop;
		close c06;
	end if;

elsif (coalesce(nr_seq_med_fatur_p,0) > 0) then

	select	max(cd_convenio),
		max(a.cd_categoria),
		max(b.cd_estabelecimento)
	into STRICT	cd_convenio_w,
		cd_categoria_conv_w,
		cd_estabelecimento_w
	from	atend_categoria_convenio a,
		pep_med_fatur b
	where	a.nr_atendimento	= b.nr_atendimento
	and	b.nr_sequencia		= nr_seq_med_fatur_p;

	select	coalesce(max(IE_EMITE_HONOR_SADT_PEP), 'N')
	into STRICT	IE_EMITE_HONOR_SADT_PEP_w
	from	tiss_parametros_convenio
	where	cd_convenio		= cd_convenio_w
	and	cd_estabelecimento	= cd_estabelecimento_w;

	select	max(cd_cgc)
	into STRICT	cd_cgc_estab_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_w;

	select	max(cd_ans),
		max(b.ds_arquivo_logo_tiss)
	into STRICT	cd_ans_w,
		ds_arquivo_logo_w
	from	pessoa_juridica c,
		convenio b
	where	b.cd_cgc		= c.cd_cgc
	and	b.cd_convenio		= cd_convenio_w;

	if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
		insert	into w_tiss_relatorio(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_arquivo_logo)
		values (nextval('w_tiss_relatorio_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || '\' || ds_arquivo_logo_w);
	else
		insert	into w_tiss_relatorio(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_arquivo_logo)
		values (nextval('w_tiss_relatorio_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			null);
	end if;

	open c08;
	loop
	fetch c08 into
		nr_seq_med_fatur_w,
		nr_atendimento_w,
		cd_autorizacao_w,
		cd_medico_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c08 */

		qt_proc_guia_w 		:= 0;
		nr_seq_apres_proc_w	:= 0;

		open c09;
		loop
		fetch c09 into
			cd_procedimento_w,
			ds_procedimento_w,
			qt_solicitada_w,
			qt_autorizada_w,
			dt_entrada_w,
			dt_alta_w,
			cd_edicao_amb_w,
			dt_procedimento_w,
			ie_funcao_w,
			ie_via_acesso_w,
			ie_tecnica_utilizada_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */

			qt_proc_guia_w		:= qt_proc_guia_w + 1;

			if (qt_proc_guia_w = 1) then

				select	max(a.cd_senha),
					max(a.dt_inicio_vigencia),
					max(a.dt_final_vigencia),
					max(b.dt_entrada),
					max(b.ie_tipo_atendimento)
				into STRICT	cd_senha_w,
					dt_inicio_vigencia_w,
					dt_final_vigencia_w,
					dt_atendimento_w,
					ie_tipo_atendimento_w
				from	atend_categoria_convenio a,
					atendimento_paciente b
				where	a.nr_atendimento				= nr_atendimento_w
				and	obter_atecaco_atendimento(b.nr_atendimento) 	= a.nr_seq_interno
				and	a.nr_atendimento				= b.nr_atendimento;

				select	nextval('w_tiss_guia_seq')
				into STRICT	nr_seq_guia_w
				;

				if (coalesce(ie_data_ass_prest_w,'N') = 'S') then
					dt_assin_prest_w	:= dt_atendimento_w;
				else
					dt_assin_prest_w	:= clock_timestamp();
				end if;

				insert	into w_tiss_guia(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_ans,
					cd_autorizacao,
					dt_autorizacao,
					cd_senha,
					dt_validade_senha,
					dt_emissao_guia,
					nr_interno_conta,
					nr_seq_protocolo,
					nr_sequencia_autor,
					nr_atendimento,
					ds_observacao,
					ie_tiss_tipo_guia,
					dt_entrada,
					DT_ASSIN_PREST)
				values (nr_seq_guia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_ans_w,
					cd_autorizacao_w,
					dt_inicio_vigencia_w,
					cd_senha_w,
					dt_final_vigencia_w,
					clock_timestamp(),
					null,
					null,
					null,
					nr_atendimento_w,
					tiss_obter_regra_campo(4, 'DS_OBSERVACAO', CD_CONVENIO_W, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, null, null, null),
					'4',
					dt_atendimento_w,
					DT_ASSIN_PREST_w);

				insert	into w_tiss_beneficiario(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_pessoa_fisica,
					nm_pessoa_fisica,
					nr_cartao_nac_sus,
					ds_plano,
					dt_validade_carteira,
					cd_usuario_convenio)
				SELECT	nextval('w_tiss_beneficiario_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_pessoa_fisica,
					nm_pessoa_fisica,
					to_char(nr_cartao_nac_sus),
					ds_plano,
					dt_validade_carteira,
					cd_usuario_convenio
				from	tiss_dados_paciente_v
				where	ds_versao		= '2.01.01'
				and	nr_atendimento		= nr_atendimento_w
				and	ie_origem		= 'AP';

				insert into w_tiss_contratado_solic(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_cgc,
					cd_interno,
					nr_cpf,
					nm_contratado,
					nm_solicitante,
					cd_cnes,
					sg_conselho,
					nr_crm,
					uf_crm,
					cd_cbo_saude)
				SELECT	nextval('w_tiss_contratado_solic_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_cgc,
					cd_interno,
					nr_cpf_w,
					ds_razao_social,
					obter_nome_medico(cd_medico_convenio_w, 'N'),
					cd_cnes,
					obter_dados_medico(cd_medico_convenio_w, 'SGCRM'),
					obter_dados_medico(cd_medico_convenio_w, 'CRM'),
					obter_dados_medico(cd_medico_convenio_w, 'UFCRM'),
					cd_cbo_saude
				from	tiss_dados_solicitante_v
				where	nr_atendimento		= nr_atendimento_w
				and	ds_versao		= '2.01.01'
				and	ie_origem		= 'AP';

				insert	into w_tiss_contratado_exec(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_cgc,
					cd_interno,
					nr_cpf,
					nm_contratado,
					ds_tipo_logradouro,
					ds_logradouro,
					nm_municipio,
					sg_estado,
					cd_municipio_ibge,
					cd_cep,
					cd_cnes,
					nm_medico_executor,
					sg_conselho,
					nr_crm,
					uf_crm,
					cd_cbo_saude,
					ds_funcao_medico)
				SELECT	nextval('w_tiss_contratado_exec_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w,
					cd_cgc,
					coalesce(cd_prestador_convenio_w, cd_interno),
					tiss_obter_regra_campo(4, 'CD_INTERNO', cd_convenio_w, coalesce(nr_cpf_w, TISS_OBTER_CODIGO_PRESTADOR(cd_convenio_w, cd_estabelecimento_w, cd_medico_convenio_w, null, (null)::numeric , 'CI', null,ie_tipo_atendimento_w,cd_categoria_conv_w)), ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, null, null, null), ds_razao_social,
					ds_tipo_logradouro,
					(ds_endereco || ' ' || nr_endereco || ' ' || ds_complemento),
					ds_municipio,
					sg_estado,
					cd_municipio_ibge,
					cd_cep,
					cd_cnes,
					tiss_obter_regra_campo(4, 'NM_EXECUTOR', cd_convenio_w, obter_nome_medico(cd_medico_convenio_w, 'N'), ie_tipo_atendimento_w,
		cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, null, null, null),
					tiss_obter_regra_campo(4, 'SG_CONSELHO', cd_convenio_w, obter_dados_medico(cd_medico_convenio_w, 'SGCRM'), ie_tipo_atendimento_w,
		cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, null, null, null),
					tiss_obter_regra_campo(4, 'NR_CRM', cd_convenio_w, obter_dados_medico(cd_medico_convenio_w, 'CRM'), ie_tipo_atendimento_w,
		cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, null, null, null),
					tiss_obter_regra_campo(4, 'UF_CRM', cd_convenio_w, obter_dados_medico(cd_medico_convenio_w, 'UFCRM'), ie_tipo_atendimento_w,
		cd_categoria_conv_w,'N',0, cd_estabelecimento_w, null, null, null, null),
					cd_cbo_saude,
					ie_funcao_w
				from	tiss_dados_executante_v a
				where	nr_atendimento		= nr_atendimento_w
				and	((IE_EMITE_HONOR_SADT_PEP_w	= 'N' AND ie_honorario = 'N') or
					 (IE_EMITE_HONOR_SADT_PEP_w	= 'S' AND ie_honorario = 'S'))
				and	ds_versao		= '2.01.01';

			end if;

			nr_seq_apres_proc_w	:= nr_seq_apres_proc_w + 1;

			insert	into w_tiss_proc_paciente(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia,
				cd_procedimento,
				cd_edicao_amb,
				qt_procedimento,
				vl_reducao_acrescimo,
				vl_procedimento,
				dt_entrada,
				dt_alta,
				vl_unitario,
				ds_procedimento,
				dt_procedimento,
				nr_seq_apresentacao,
				ie_tecnica_utilizada,
				ie_via_acesso)
			values (nextval('w_tiss_proc_paciente_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w,
				cd_procedimento_w,
				cd_edicao_amb_w,
				qt_autorizada_w,
				null,
				null,
				dt_entrada_w,
				dt_alta_w,
				null,
				ds_procedimento_w,
				dt_procedimento_w,
				nr_seq_apres_proc_w,
				ie_tecnica_utilizada_w,
				ie_via_acesso_w);

			if (qt_proc_guia_w = 5) then

				insert into w_tiss_contratado_exec(NR_SEQUENCIA,
					dt_ATUALIZACAO,
					nm_usUARIO,
					nr_seq_GUIA)
				values (nextval('w_tiss_contratado_exec_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

				insert	into w_tiss_totais(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia)
				values (nextval('w_tiss_totais_seq'),
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_guia_w);

				qt_proc_guia_w	:= 0;
			end if;

		end loop;
		close c09;

		if (qt_proc_guia_w > 0) and (qt_proc_guia_w < 5) then

			insert	into w_tiss_totais(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_guia)
			values (nextval('w_tiss_totais_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_guia_w);

		end if;

		CALL TISS_COMPLETAR_GUIA(nr_seq_guia_w, nm_usuario_p);

	end loop;
	close c08;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_spsadt_hcc (nr_sequencia_autor_p bigint, nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, ds_dir_padrao_p text, nr_seq_exame_p bigint, nr_prescr_tiss_p bigint, nr_seq_med_fatur_p text, nr_atend_conta_tiss_p text, nm_usuario_p text, ie_setor_prescr_p text) FROM PUBLIC;

