-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_desbloqueio_cheque (nr_seq_cheque_p bigint, nm_usuario_p text) AS $body$
DECLARE



/*

Edgar 03/05/2008, NÃO DAR COMMIT

*/
nr_seq_camara_deposito_w	bigint;
dt_devolucao_w			timestamp;
dt_compensacao_w		timestamp;
dt_venda_terc_w			timestamp;
dt_saque_w			timestamp;
dt_terc_devolucao_w		timestamp;
dt_seg_reapresentacao_w		timestamp;
dt_seg_devolucao_w		timestamp;
dt_reapresentacao_w		timestamp;
dt_devolucao_banco_w		timestamp;
dt_deposito_w			timestamp;
dt_vencimento_w			timestamp;
cd_estabelecimento_w		bigint;
qt_registro_w			bigint;

c01 CURSOR FOR
SELECT	c.nr_seq_camara
from	banco_estabelecimento c,
	deposito b,
	deposito_cheque a
where	a.nr_seq_deposito	= b.nr_sequencia
and	b.nr_conta		= c.nr_sequencia
and	a.nr_seq_cheque		= nr_seq_cheque_p
and	(b.dt_deposito IS NOT NULL AND b.dt_deposito::text <> '')
order	by 1;


BEGIN

/*Matheus - coloquei esta consistência */

select	count(*)
into STRICT	qt_registro_w
from	cheque_cr
where	nr_seq_cheque	= nr_seq_cheque_p;

if (qt_registro_w > 0) then
	begin

	select	dt_devolucao,
		dt_compensacao,
		dt_venda_terc,
		dt_saque,
		dt_terc_devolucao,
		dt_seg_reapresentacao,
		dt_seg_devolucao,
		dt_reapresentacao,
		dt_devolucao_banco,
		dt_deposito,
		coalesce(dt_vencimento_atual, dt_vencimento),
		cd_estabelecimento
	into STRICT	dt_devolucao_w,
		dt_compensacao_w,
		dt_venda_terc_w,
		dt_saque_w,
		dt_terc_devolucao_w,
		dt_seg_reapresentacao_w,
		dt_seg_devolucao_w,
		dt_reapresentacao_w,
		dt_devolucao_banco_w,
		dt_deposito_w,
		dt_vencimento_w,
		cd_estabelecimento_w
	from	cheque_cr
	where	nr_seq_cheque	= nr_seq_cheque_p;

	if (coalesce(dt_devolucao_w::text, '') = '') and (coalesce(dt_compensacao_w::text, '') = '') and (coalesce(dt_venda_terc_w::text, '') = '') and (coalesce(dt_saque_w::text, '') = '') and (coalesce(dt_terc_devolucao_w::text, '') = '') then

		nr_seq_camara_deposito_w		:= null;
		open c01;
		loop
		fetch c01 into
			nr_seq_camara_deposito_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		end loop;
		close c01;

		if (coalesce(nr_seq_camara_deposito_w::text, '') = '') then
			select	max(nr_seq_camara)
			into STRICT	nr_seq_camara_deposito_w
			from	parametro_contas_receber
			where	cd_estabelecimento	= cd_estabelecimento_w;
		end if;

		if (coalesce(dt_reapresentacao_w::text, '') = '') then
			update	cheque_cr
			set	DT_PREV_SEG_DESBLOQUEIO 	 = NULL
			where	nr_seq_cheque			= nr_seq_cheque_p;
		end if;

		if (coalesce(dt_seg_reapresentacao_w::text, '') = '') then
			update	cheque_cr
			set	DT_PREV_TERC_DESBLOQUEIO	 = NULL
			where	nr_seq_cheque			= nr_seq_cheque_p;
		end if;


		if (dt_seg_reapresentacao_w IS NOT NULL AND dt_seg_reapresentacao_w::text <> '') then	-- segunda reapresentação
			update	cheque_cr
			set	DT_PREV_TERC_DESBLOQUEIO	= OBTER_DESBLOQUEIO_CHEQUE(cd_estabelecimento,
											dt_seg_reapresentacao_w,
											vl_cheque,
											nr_seq_camara_deposito_w,
											nr_seq_camara)
			where	nr_seq_cheque			= nr_seq_cheque_p;

		elsif (dt_reapresentacao_w IS NOT NULL AND dt_reapresentacao_w::text <> '') then		-- primeira reapresentação
			update	cheque_cr
			set	DT_PREV_SEG_DESBLOQUEIO 	= OBTER_DESBLOQUEIO_CHEQUE(cd_estabelecimento,
											dt_reapresentacao_w,
											vl_cheque,
											nr_seq_camara_deposito_w,
											nr_seq_camara)
			where	nr_seq_cheque			= nr_seq_cheque_p;

		elsif (dt_deposito_w IS NOT NULL AND dt_deposito_w::text <> '') then		-- primeiro depósito
			update	cheque_cr
			set	DT_PREV_DESBLOQUEIO		= OBTER_DESBLOQUEIO_CHEQUE(cd_estabelecimento,
											dt_deposito_w,
											vl_cheque,
											nr_seq_camara_deposito_w,
											nr_seq_camara)
			where	nr_seq_cheque			= nr_seq_cheque_p;

		elsif (dt_vencimento_w IS NOT NULL AND dt_vencimento_w::text <> '') then		-- Sem depósito
			update	cheque_cr
			set	DT_PREV_DESBLOQUEIO     	= OBTER_DESBLOQUEIO_CHEQUE(cd_estabelecimento,
											dt_vencimento_w,
											vl_cheque,
											nr_seq_camara_deposito_w,
											nr_seq_camara)
			where	nr_seq_cheque			= nr_seq_cheque_p;
		end if;

	end if;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_desbloqueio_cheque (nr_seq_cheque_p bigint, nm_usuario_p text) FROM PUBLIC;

