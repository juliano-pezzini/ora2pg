-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importa_valor_rateio ( nr_seq_nota_p bigint, nr_seq_item_nota_p bigint, cd_estabelecimento_p bigint, cd_empresa_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_centro_custo_w			bigint;
qt_conta_contabil_w		bigint;
qt_conta_financ_w			bigint;
cd_centro_custo_w			bigint;
cd_conta_contabil_w		varchar(20);
cd_conta_financ_w			bigint;
vl_rateio_w			double precision;
vl_frete_w			double precision;
vl_desconto_w			double precision;
vl_seguro_w			double precision;
vl_despesa_acessoria_w		double precision;
vl_tributo_w			double precision;
ie_permite_outro_estab_w        varchar(5);
cd_perfil_ativo_w               perfil.cd_perfil%type;
c01 CURSOR FOR
SELECT	cd_centro_custo,
	cd_conta_contabil,
	cd_conta_financ,
	coalesce(vl_rateio,0),
	coalesce(vl_frete,0),
	coalesce(vl_desconto,0),
	coalesce(vl_seguro,0),
	coalesce(vl_despesa_acessoria,0),
	coalesce(vl_tributo,0)
from	w_importa_rateio_nf
where	nr_seq_nf = nr_seq_nota_p
and	nm_usuario = nm_usuario_p
and	vl_rateio > 0
and	((cd_centro_custo IS NOT NULL AND cd_centro_custo::text <> '') or (cd_conta_contabil IS NOT NULL AND cd_conta_contabil::text <> '') or (cd_conta_financ IS NOT NULL AND cd_conta_financ::text <> ''));


BEGIN
cd_perfil_ativo_w := obter_perfil_ativo;
ie_permite_outro_estab_w := obter_param_usuario(40, 367, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_p, ie_permite_outro_estab_w);

open C01;
loop
fetch C01 into
	cd_centro_custo_w,
	cd_conta_contabil_w,
	cd_conta_financ_w,
	vl_rateio_w,
	vl_frete_w,
	vl_desconto_w,
	vl_seguro_w,
	vl_despesa_acessoria_w,
	vl_tributo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (cd_centro_custo_w > 0) then


		if (ie_permite_outro_estab_w = 'S') then

			select  count(*)
			into STRICT	qt_centro_custo_w
			from 	centro_custo
			where   cd_centro_custo = cd_centro_custo_w
			and	ie_situacao = 'A';

		else

			select  count(*)
			into STRICT	qt_centro_custo_w
			from 	centro_custo
			where   cd_centro_custo = cd_centro_custo_w
			and	ie_situacao = 'A'
			and	cd_estabelecimento = cd_estabelecimento_p;

		end if;


		if (qt_centro_custo_w = 0) then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280312, 'CD_CENTRO_CUSTO=' || cd_centro_custo_w);
		end if;
	end if;

	if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then

		select	count(*)
		into STRICT	qt_conta_contabil_w
		from	conta_contabil
		where	cd_conta_contabil = cd_conta_contabil_w
		and	ie_situacao = 'A'
		and	cd_empresa = cd_empresa_p;

		if (qt_conta_contabil_w = 0) then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280313, 'CD_CONTA_CONTABIL=' || cd_conta_contabil_w);
		end if;
	end if;

	if (cd_conta_financ_w > 0) then

		select	count(*)
		into STRICT	qt_conta_financ_w
		from	conta_financeira
		where	cd_conta_financ = cd_conta_financ_w
		and	ie_situacao = 'A'
		and	cd_empresa = cd_empresa_p
		and	coalesce(cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p;

		if (qt_conta_financ_w = 0) then
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(280315, 'CD_CONTA_FINAC=' || cd_conta_financ_w);
		end if;
	end if;

	insert into nota_fiscal_item_rateio(
		nr_sequencia,
		nr_seq_nota,
		nr_item_nf,
		dt_atualizacao,
		nm_usuario,
		cd_centro_custo,
		cd_conta_contabil,
		cd_conta_financ,
		vl_rateio,
		vl_frete,
		vl_desconto,
		vl_seguro,
		vl_despesa_acessoria,
		ie_situacao)
	values ( nextval('nota_fiscal_item_rateio_seq'),
		nr_seq_nota_p,
		nr_seq_item_nota_p,
		clock_timestamp(),
		nm_usuario_p,
		CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
		cd_conta_contabil_w,
		CASE WHEN cd_conta_financ_w=0 THEN null  ELSE cd_conta_financ_w END ,
		vl_rateio_w,
		vl_frete_w,
		vl_desconto_w,
		vl_seguro_w,
		vl_despesa_acessoria_w,
		'A');

	end;
end loop;
close C01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importa_valor_rateio ( nr_seq_nota_p bigint, nr_seq_item_nota_p bigint, cd_estabelecimento_p bigint, cd_empresa_p bigint, nm_usuario_p text) FROM PUBLIC;

