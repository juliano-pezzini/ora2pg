-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rxt_gerar_agenda_trat_roentgen (nr_seq_tratamento_p bigint, nr_seq_campo_p bigint, nr_seq_equipamento_p bigint, dt_agenda_p timestamp, nm_usuario_p text, ie_prox_hor_sobreposto_p text, nr_seq_volume_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_agenda_w		bigint;
nr_seq_fase_w		bigint;
nr_seq_dia_w		bigint;
nr_seq_dia_fase_w	bigint;
ie_considera_volume_w	varchar(1);
ie_vincular_atend_w	varchar(1);
nr_atendimento_w	bigint;


BEGIN

ie_vincular_atend_w 	:= coalesce(Obter_Valor_Param_Usuario(3030, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N');

if (nr_seq_tratamento_p IS NOT NULL AND nr_seq_tratamento_p::text <> '') and (nr_seq_equipamento_p IS NOT NULL AND nr_seq_equipamento_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	select	coalesce(max(ie_considera_tratamento_volume),'N')
	into STRICT	ie_considera_volume_w
	from 	rxt_parametro;


	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_agenda_w
	from	rxt_agenda
	where	nr_seq_equipamento	= nr_seq_equipamento_p
	and	dt_agenda		= dt_agenda_p
	and	ie_status_agenda	= 'L'
	and	ie_tipo_agenda		= 'T';

	if (nr_seq_agenda_w > 0) then

		/*

		nr_seq_fase_w		:= rxt_obter_fase_trat_agenda(nr_seq_tratamento_p, dt_agenda_p);
		nr_seq_dia_w		:= rxt_obter_dia_fase_trat_agenda(nr_seq_tratamento_p, nr_seq_fase_w, 'DT');
		nr_seq_dia_fase_w	:= rxt_obter_dia_fase_trat_agenda(nr_seq_tratamento_p, nr_seq_fase_w, 'DF');

		update	rxt_agenda
		set	nr_seq_tratamento	= nr_seq_tratamento_p,
			nr_seq_fase	= nr_seq_fase_w,
			nr_seq_dia	= nr_seq_dia_w,
			nr_seq_dia_fase	= nr_seq_dia_fase_w,
			ie_status_agenda	= 'P',
			nm_usuario_acesso	= nm_usuario_p
		where	nr_sequencia	= nr_seq_agenda_w;

		*/
		select	max(a.nr_atendimento)
		into STRICT	nr_atendimento_w
		from	rxt_tumor a,
			rxt_tratamento b
		where	a.nr_sequencia = b.nr_Seq_tumor
		and	b.nr_sequencia = nr_seq_tratamento_p;

		if (ie_considera_volume_w = 'N') then
			nr_seq_dia_fase_w	:= rxt_obter_dia_fase_trat_roent(nr_seq_tratamento_p, nr_seq_campo_p, 'DF');
			nr_seq_dia_w		:= rxt_obter_dia_fase_trat_roent(nr_seq_tratamento_p, nr_seq_campo_p, 'DT');

			update	rxt_agenda
			set	nr_seq_tratamento	= nr_seq_tratamento_p,
				nr_seq_campo_roentgen		= nr_seq_campo_p,
				nr_seq_dia_fase		= nr_seq_dia_fase_w,
				nr_seq_dia		= nr_seq_dia_w,
				ie_status_agenda	= 'P',
				nm_usuario_acesso	= nm_usuario_p,
				nr_atendimento		= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END
			where	nr_sequencia		= nr_seq_agenda_w;
		else
			update	rxt_agenda
			set	nr_seq_tratamento	= nr_seq_tratamento_p,
				ie_status_agenda	= 'P',
				nm_usuario_acesso	= nm_usuario_p,
				nr_atendimento		= CASE WHEN ie_vincular_atend_w='S' THEN  nr_atendimento_w END
			where	nr_sequencia		= nr_seq_agenda_w;

			nr_seq_dia_fase_w	:= rxt_obter_dia_fase_vol_roent(nr_seq_volume_p, nr_seq_campo_p, 'DF');
			nr_seq_dia_w		:= rxt_obter_dia_fase_vol_roent(nr_seq_volume_p, nr_seq_campo_p, 'DT');

			insert	into rxt_agenda_fase(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_agenda_rxt,
							nr_seq_campo_roentgen,
							nr_seq_dia,
							nr_seq_dia_fase,
							nr_seq_volume)
			values (nextval('rxt_agenda_fase_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_agenda_w,
							nr_seq_campo_p,
							nr_seq_dia_w,
							nr_seq_dia_fase_w,
							nr_seq_volume_p);
		end if;
	else
		if (ie_considera_volume_w = 'S') then

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_agenda_w
			from	rxt_agenda
			where	nr_seq_equipamento	= nr_seq_equipamento_p
			and	dt_agenda		= dt_agenda_p
			and	ie_tipo_agenda		= 'T';

			nr_seq_dia_fase_w	:= rxt_obter_dia_fase_vol_roent(nr_seq_volume_p, nr_seq_campo_p, 'DF');
			nr_seq_dia_w		:= rxt_obter_dia_fase_vol_roent(nr_seq_volume_p, nr_seq_campo_p, 'DT');


			insert	into rxt_agenda_fase(nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_agenda_rxt,
							nr_seq_campo_roentgen,
							nr_seq_dia,
							nr_seq_dia_fase,
							nr_seq_volume)
			values (nextval('rxt_agenda_fase_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_agenda_w,
							nr_seq_campo_p,
							nr_seq_dia_w,
							nr_seq_dia_fase_w,
							nr_seq_volume_p);
		end if;
	end if;
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rxt_gerar_agenda_trat_roentgen (nr_seq_tratamento_p bigint, nr_seq_campo_p bigint, nr_seq_equipamento_p bigint, dt_agenda_p timestamp, nm_usuario_p text, ie_prox_hor_sobreposto_p text, nr_seq_volume_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

