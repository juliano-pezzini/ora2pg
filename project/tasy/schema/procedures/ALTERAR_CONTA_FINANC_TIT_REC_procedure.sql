-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_conta_financ_tit_rec (cd_conta_financ_ant_p bigint, cd_conta_financ_nova_p bigint, cd_centro_custo_ant_p bigint, cd_centro_custo_novo_p bigint, cd_conta_contab_ant_p text, cd_conta_contab_nova_p text, nr_seq_produto_ant_p bigint, nr_seq_produto_novo_p bigint, nr_titulo_p text, dt_vencimento_p timestamp, ie_vencimento_p text, ie_conta_financ_p text, ie_centro_custo_p text, ie_conta_contabil_p text, ie_produto_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
dt_vencimento_w		timestamp;
cd_motivo_w		smallint;
nr_lote_contabil_w	bigint;
ie_situacao_w		smallint;
nr_titulo_w		bigint;
vl_titulo_w		double precision;
cont_w			bigint;
cd_estabelecimento_w	bigint;
cd_convenio_w		bigint;
nr_seq_produto_w	bigint;
cd_cgc_w		varchar(255);
ie_tipo_convenio_w	varchar(255);
nr_seq_grupo_w		bigint;

ie_sit_w		varchar(1);
cd_estab_w		smallint;
cd_estab_ativo_w	smallint;
ie_tipo_w		varchar(1);

c01 CURSOR FOR
SELECT	nr_titulo,
	dt_vencimento,
	coalesce(nr_lote_contabil, 0),
	ie_situacao,
	vl_titulo,
	cd_estabelecimento,
	cd_convenio_conta,
	cd_cgc,
	obter_tipo_convenio(cd_convenio_conta)
from	titulo_receber a
where	' ' || nr_titulo_p || ' ' like '% ' || to_char(a.nr_titulo) || ' %';



BEGIN

select 	substr(obter_estabelecimento_ativo,1,10)
into STRICT	cd_estab_ativo_w
;

if (cd_conta_financ_nova_p IS NOT NULL AND cd_conta_financ_nova_p::text <> '') then
	select	a.ie_situacao,
		a.cd_estabelecimento
	into STRICT	ie_sit_w,
		cd_estab_w
	from	conta_financeira a
	where 	a.cd_conta_financ = cd_conta_financ_nova_p;

	if ( coalesce(ie_sit_w,'A') = 'I' ) then
		--R.aise_application_error(-20011,'Essa conta financeira está inativa! Favor selecionar outra.');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(240832);
	elsif (cd_estab_w IS NOT NULL AND cd_estab_w::text <> '') and ( cd_estab_w <> cd_estab_ativo_w ) then
		--R.aise_application_error(-20011,'Essa conta financeira é de outro estabelecimento! Favor selecionar outra.');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(240834);
	end if;
end if;

if (cd_centro_custo_novo_p IS NOT NULL AND cd_centro_custo_novo_p::text <> '') then
	select	a.ie_tipo
	into STRICT	ie_tipo_w
	from	centro_custo a
	where	a.cd_centro_custo	= cd_centro_custo_novo_p;

	if ( coalesce(ie_tipo_w,'A') = 'T' ) then
		--R.aise_application_error(-20011,'Não é possível informar um centro de custo do tipo título');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(240835);
	end if;
end if;

open c01;
loop
fetch c01 into
	nr_titulo_w,
	dt_vencimento_w,
	nr_lote_contabil_w,
	ie_situacao_w,
	vl_titulo_w,
	cd_estabelecimento_w,
	cd_convenio_w,
	cd_cgc_w,
	ie_tipo_convenio_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	count(*)
	into STRICT	cont_w
	from	titulo_receber_classif
	where	nr_titulo		= nr_titulo_w;

	if (cont_w = 0) then
		insert	into titulo_receber_classif(NR_TITULO,
			NR_SEQUENCIA,
			VL_CLASSIFICACAO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			CD_CONTA_FINANC,
			CD_CENTRO_CUSTO,
			VL_DESCONTO,
			VL_ORIGINAL,
			CD_CONTA_CONTABIL,
			NR_SEQ_CONTRATO)
		values (nr_titulo_w,
			1,
			vl_titulo_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_conta_financ_nova_p,
			cd_centro_custo_novo_p,
			0,
			vl_titulo_w,
			cd_conta_contab_nova_p,
			null);
	end if;

	if (ie_conta_financ_p = 'S') then

		update	titulo_receber_classif
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			cd_conta_financ		= cd_conta_financ_nova_p
		where	nr_titulo		= nr_titulo_w
		and	coalesce(cd_conta_financ,0)	= coalesce(cd_conta_financ_ant_p,0);

	end if;

	if (ie_centro_custo_p = 'S') and (nr_lote_contabil_w = 0) then

		update	titulo_receber_classif
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			cd_centro_custo		= cd_centro_custo_novo_p
		where	nr_titulo		= nr_titulo_w
		and	coalesce(cd_centro_custo,0)	= coalesce(cd_centro_custo_ant_p,0);

	end if;

	if (ie_conta_contabil_p = 'S') and (nr_lote_contabil_w = 0) then

		update	titulo_receber_classif
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			cd_conta_contabil	= cd_conta_contab_nova_p
		where	nr_titulo		= nr_titulo_w
		and	coalesce(cd_conta_contabil,0)	= coalesce(cd_conta_contab_ant_p,0);

	end if;

	if (ie_produto_p = 'S') then
		update	titulo_receber_classif
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			nr_seq_produto		= nr_seq_produto_novo_p
		where	nr_titulo		= nr_titulo_w
		and	coalesce(nr_seq_produto,0)	= coalesce(nr_seq_produto_ant_p,0);
	elsif (ie_produto_p = 'R') then
		SELECT * FROM obter_produto_financeiro(cd_estabelecimento_w, cd_convenio_w, cd_cgc_w, nr_seq_produto_w, ie_tipo_convenio_w, null, nr_seq_grupo_w) INTO STRICT nr_seq_produto_w, nr_seq_grupo_w;
		update	titulo_receber_classif
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			nr_seq_produto		= nr_seq_produto_w
		where	nr_titulo		= nr_titulo_w
		and	coalesce(nr_seq_produto,0)	= coalesce(nr_seq_produto_ant_p,0);

	end if;

	if (ie_vencimento_p = 'S') and (ie_situacao_w = 1) then

		select	coalesce(max(nr_sequencia), 0) + 1
		into STRICT	nr_sequencia_w
		from	alteracao_vencimento
		where	nr_titulo	= nr_titulo_w;

		if (dt_vencimento_p < dt_vencimento_w) then
			cd_motivo_w		:= 2;
		else
			cd_motivo_w		:= 1;
		end if;

		insert	into alteracao_vencimento(NR_TITULO,
			NR_SEQUENCIA,
			DT_ANTERIOR,
			DT_VENCIMENTO,
			CD_MOTIVO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			DT_ALTERACAO,
			DS_OBSERVACAO)
		SELECT	nr_titulo,
			nr_sequencia_w,
			dt_vencimento,
			dt_vencimento_p,
			cd_motivo_w,
			clock_timestamp(),
			nm_usuario_p,
			dt_vencimento_p,
			null
		from	titulo_receber
		where	nr_titulo	= nr_titulo_w;

		update	titulo_receber
		set	dt_vencimento		= dt_vencimento_p,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_titulo		= nr_titulo_w;
	end if;


end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_conta_financ_tit_rec (cd_conta_financ_ant_p bigint, cd_conta_financ_nova_p bigint, cd_centro_custo_ant_p bigint, cd_centro_custo_novo_p bigint, cd_conta_contab_ant_p text, cd_conta_contab_nova_p text, nr_seq_produto_ant_p bigint, nr_seq_produto_novo_p bigint, nr_titulo_p text, dt_vencimento_p timestamp, ie_vencimento_p text, ie_conta_financ_p text, ie_centro_custo_p text, ie_conta_contabil_p text, ie_produto_p text, nm_usuario_p text) FROM PUBLIC;

