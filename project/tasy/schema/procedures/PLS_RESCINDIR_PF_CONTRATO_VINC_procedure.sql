-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_rescindir_pf_contrato_vinc ( nr_seq_segurado_p bigint, nr_seq_motivo_p bigint, dt_rescisao_p timestamp, dt_limite_utilizacao_p timestamp, ie_tipo_rescisao_p text, nr_seq_causa_rescisao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			
nr_seq_contrato_w		bigint;
nr_seq_segurado_w		bigint;
cd_pessoa_fisica_w		varchar(10);
dt_contratacao_w		timestamp;
nr_seq_vinculo_sca_w		bigint;
dt_liberacao_w			timestamp;
ie_situacao_atend_w		varchar(10);
nr_seq_contrato_vinc_w		bigint;
qt_beneficiarios_w		bigint;
qt_benef_inativos_w		bigint;
ie_gerar_validade_cartao_w	varchar(10);
ie_situacao_atend_aux_w		pls_segurado.ie_situacao_atend%type;
	
C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.nr_sequencia,
		b.ie_situacao_atend
	from	pls_segurado		b,
		pls_contrato		a
	where	b.nr_seq_contrato	= a.nr_sequencia
	and	a.nr_contrato_principal	= nr_seq_contrato_w
	and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	coalesce(b.dt_rescisao::text, '') = '';
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_liberacao
	from	pls_sca_vinculo a,
		pls_segurado b,
		pls_contrato c
	where	b.nr_sequencia	= a.nr_seq_segurado
	and	c.nr_sequencia	= b.nr_seq_contrato
	and	b.nr_sequencia	= nr_seq_segurado_w;
	

BEGIN

select	nr_seq_contrato,
	cd_pessoa_fisica
into STRICT	nr_seq_contrato_w,
	cd_pessoa_fisica_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	max(ie_gerar_validade_cartao)
into STRICT	ie_gerar_validade_cartao_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_gerar_validade_cartao_w::text, '') = '') then
	ie_gerar_validade_cartao_w	:= 'S';
end if;

open C01;
loop
fetch C01 into	
	nr_seq_segurado_w,
	nr_seq_contrato_vinc_w,
	ie_situacao_atend_aux_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (trunc(dt_limite_utilizacao_p,'dd') >= trunc(clock_timestamp(),'dd')) and (ie_situacao_atend_aux_w <> 'S') then
		ie_situacao_atend_w	:= 'A';
	elsif	((dt_limite_utilizacao_p < clock_timestamp()) or (ie_situacao_atend_aux_w = 'S')) then
		ie_situacao_atend_w	:= 'I';
	end if;
	
	select	dt_contratacao
	into STRICT	dt_contratacao_w
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_w;
	
	if (trunc(dt_contratacao_w,'dd') > trunc(dt_rescisao_p,'dd')) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(196219);
	else
		/* Rescindir o segurado */

		update	pls_segurado
		set	dt_rescisao			= dt_rescisao_p,
			dt_limite_utilizacao		= dt_limite_utilizacao_p,
			nm_usuario			= nm_usuario_p,
			dt_atualizacao			= clock_timestamp(),
			nr_seq_motivo_cancelamento 	= nr_seq_motivo_p,
			ie_situacao_atend		= ie_situacao_atend_w,
			ie_tipo_rescisao		= ie_tipo_rescisao_p,
			dt_reativacao			 = NULL
		where	nr_sequencia			= nr_seq_segurado_w;

		/* Rescindir a carteirinha */

		update	pls_segurado_carteira
		set	dt_validade_carteira	= dt_limite_utilizacao_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_seq_segurado		= nr_seq_segurado_w
		and	coalesce(dt_validade_carteira::text, '') = ''
		and	ie_gerar_validade_cartao_w	= 'S';


		/* Rescindir SCA's */
		open C02;
		loop
		fetch C02 into	
			nr_seq_vinculo_sca_w,
			dt_liberacao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
		
			if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
				CALL pls_rescindir_sca_benef(nr_seq_vinculo_sca_w,dt_rescisao_p,'N',nm_usuario_p);
			end if;	
		
			end;
		end loop;
		close C02;

		/* Gerar histórico */

		CALL pls_gerar_segurado_historico(	nr_seq_segurado_w, '1', dt_rescisao_p, 'Rescisão',
						'Rescisão do beneficiário atráves do seu contrato principal', null, null, null,
						nr_seq_motivo_p, dt_rescisao_p, null, null,
						null, null, null, null,
						nm_usuario_p, 'N');			
	end if;
	
	/* Verificar se após rescindir os beneficiários vai ser rescindido o contrato também */

	if (nr_seq_contrato_vinc_w IS NOT NULL AND nr_seq_contrato_vinc_w::text <> '') then
		CALL pls_preco_beneficiario_pck.atualizar_desconto_benef(nr_seq_contrato_vinc_w, clock_timestamp(), null, 'N', nm_usuario_p, cd_estabelecimento_p);

		
		select	count(*)
		into STRICT	qt_beneficiarios_w
		from	pls_segurado
		where	nr_seq_contrato	= nr_seq_contrato_vinc_w;
		
		select	count(*)
		into STRICT	qt_benef_inativos_w
		from	pls_segurado
		where	nr_seq_contrato	= nr_seq_contrato_vinc_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	(dt_rescisao IS NOT NULL AND dt_rescisao::text <> '');
		
		if (qt_beneficiarios_w > 0) and (qt_benef_inativos_w = qt_beneficiarios_w) then
			update	pls_contrato
			set	dt_rescisao_contrato	= dt_rescisao_p,
				ie_situacao		= '3',
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_rescisao	= nr_seq_motivo_p,
				dt_limite_utilizacao	= dt_limite_utilizacao_p,
				nr_seq_causa_rescisao	= nr_seq_causa_rescisao_p
			where	nr_sequencia		= nr_seq_contrato_vinc_w;		
		end if;
	end if;
	
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rescindir_pf_contrato_vinc ( nr_seq_segurado_p bigint, nr_seq_motivo_p bigint, dt_rescisao_p timestamp, dt_limite_utilizacao_p timestamp, ie_tipo_rescisao_p text, nr_seq_causa_rescisao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

