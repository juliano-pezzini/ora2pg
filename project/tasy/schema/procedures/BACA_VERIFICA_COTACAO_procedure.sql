-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_verifica_cotacao () AS $body$
DECLARE


qt_integridade_w	integer;
qt_coluna_w		integer;
qt_nulo_w		integer;
qt_erro_w		integer	:=0;
ds_descricao_w		varchar(255);


BEGIN
/*----------- Primeira Parte ------------*/

/*-------------  Verifica se o campo (NR_SEQUENCIA) das 3 Tabelas estão todos com valores --------------*/

select	count(*)
into STRICT	qt_nulo_w
from	cot_compra_forn_item_tr
where	coalesce(nr_sequencia::text, '') = '';
if (qt_nulo_w > 0) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Tabela COT_COMPRA_FORN_ITEM_TR - Campo NR_SEQUENCIA (valores nulos)';
end if;
select	count(*)
into STRICT	qt_nulo_w
from	cot_compra_forn_item
where	coalesce(nr_sequencia::text, '') = '';
if (qt_nulo_w > 0) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Tabela COT_COMPRA_FORN_ITEM - Campo NR_SEQUENCIA (valores nulos)';
end if;
select	count(*)
into STRICT	qt_nulo_w
from	cot_compra_forn
where	coalesce(nr_sequencia::text, '') = '';
if (qt_nulo_w > 0) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Tabela COT_COMPRA_FORN - Campo NR_SEQUENCIA (valores nulos)';
end if;
/*-----------Fim Primeira Parte ------------*/

/*----------- Segunda Parte ------------*/

/*----------  Verifica as PK e integridade da Terceira tabela  --------------*/

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN_ITEM_TR'
and	constraint_name = 'COCOFOT_PK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(1) = Tabela COT_COMPRA_FORN_ITEM_TR - Diferença na PK (COCOFOT_PK)';
elsif (qt_integridade_w = 1) then
	begin
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOT_PK'
	and	column_name = 'NR_SEQUENCIA';
	if (qt_coluna_w <> 1) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(2) = COT_COMPRA_FORN_ITEM_TR - Campos diferentes na coluna da PK(COCOFOT_PK)';
	end if;
	end;
end if;

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN_ITEM_TR'
and	constraint_name = 'COCOFOT_UK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(4) = Tabela COT_COMPRA_FORN_ITEM_TR - Diferença na UK (COCOFOT_UK)';
elsif (qt_integridade_w = 1) then
	begin
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOT_UK'
	and 	column_name in ('NR_COT_COMPRA','NR_ITEM_COT_COMPRA','CD_CGC_FORNECEDOR','CD_TRIBUTO');
	if (qt_coluna_w <> 4) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(5) = COT_COMPRA_FORN_ITEM_TR - Campos diferentes na UK(COCOFOT_UK)';
	end if;
	end;
end if;

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN_ITEM_TR'
and	constraint_name = 'COCOFOT_COCOFOI_FK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(1) = Tabela COT_COMPRA_FORN_ITEM_TR - Diferença na PK (COCOFOT_PK)';
elsif (qt_integridade_w = 1) then
	begin
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOT_COCOFOI_FK'
	and 	column_name = 'NR_SEQ_COT_ITEM_FORN';
	if (qt_coluna_w <> 1) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(5) = COT_COMPRA_FORN_ITEM_TR - Campos diferentes na FK(COCOFOT_COCOFOI_FK)';
	end if;
	end;
end if;

/*-----------Fim Segunda Parte ------------*/

/*----------- Terceira Parte ------------*/

/*----------  Verifica as PK e integridade da Segunda tabela  --------------*/

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN_ITEM'
and	constraint_name = 'COCOFOI_PK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(6) = Tabela COT_COMPRA_FORN_ITEM - Diferença na PK (COCOFOI_PK)';
elsif (qt_integridade_w = 1) then
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOI_PK'
	and	column_name = 'NR_SEQUENCIA';
	if (qt_coluna_w <> 1) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(7) = COT_COMPRA_FORN_ITEM - Campos diferentes na coluna da PK(COCOFOI_PK)';
	end if;
end if;

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN_ITEM'
and	constraint_name = 'COCOFOI_UK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(8) = Tabela COT_COMPRA_FORN_ITEM - Diferença na UK (COCOFOI_UK)';
elsif (qt_integridade_w = 1) then
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOI_UK'
	and	column_name in ('NR_COT_COMPRA','NR_ITEM_COT_COMPRA','CD_CGC_FORNECEDOR');
	if (qt_coluna_w <> 3) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(9) = Tabela COT_COMPRA_FORN_ITEM - Diferença na UK (COCOFOI_UK)';
	end if;
end if;

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN_ITEM'
and	constraint_name = 'COCOFOI_COCOFOR_FK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(10) = COT_COMPRA_FORN_ITEM - Não existe integridade (COCOFOI_COCOFOR_FK)';
elsif (qt_integridade_w = 1) then
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOI_COCOFOR_FK'
	and	column_name = 'NR_SEQ_COT_FORN';
	if (qt_coluna_w <> 1) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(11) = COT_COMPRA_FORN_ITEM - Colunas da integridade(COCOFOI_COCOFOR_FK)';
	end if;
end if;

/*-----------Fim Terceira Parte ------------*/

/*----------- Quarta Parte ------------*/

/*----------  Verifica as PK e integridade da Primeira tabela  --------------*/

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN'
and	constraint_name = 'COCOFOR_PK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(12) = Tabela COT_COMPRA_FORN - Diferença na PK (COCOFOR_PK)';
elsif (qt_integridade_w = 1) then
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOR_PK'
	and	column_name = 'NR_SEQUENCIA';
	if (qt_coluna_w <> 1) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(13) = COT_COMPRA_FORN - Campos diferentes na coluna da PK(COCOFOR_PK)';
	end if;
end if;

select	count(*)
into STRICT	qt_integridade_w
from	user_constraints
where	table_name = 'COT_COMPRA_FORN'
and	constraint_name = 'COCOFOR_UK';
if (qt_integridade_w <> 1) then
	qt_erro_w	:= qt_erro_w + 1;
	RAISE NOTICE 'Erro(14) = Tabela COT_COMPRA_FORN - Diferença na UK (COCOFOR_UK)';
elsif (qt_integridade_w = 1) then
	select	count(*)
	into STRICT	qt_coluna_w
	from	user_cons_columns
	where	constraint_name = 'COCOFOR_UK'
	and	column_name in ('NR_COT_COMPRA','CD_CGC_FORNECEDOR');
	if (qt_coluna_w <> 2) then
		qt_erro_w	:= qt_erro_w + 1;
		RAISE NOTICE 'Erro(15) = Tabela COT_COMPRA_FORN - Diferença na UK (COCOFOR_UK)';
	end if;
end if;


/*-----------Fim Quarta Parte ------------*/

RAISE NOTICE '---------------------';
RAISE NOTICE 'Verificação terminada';
if (qt_erro_w = 0) then
	RAISE NOTICE 'Não foi encontado erros!!!';
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_verifica_cotacao () FROM PUBLIC;

