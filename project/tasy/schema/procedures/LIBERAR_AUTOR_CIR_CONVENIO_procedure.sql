-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_autor_cir_convenio (nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



dt_autorizacao_w	timestamp;
nr_atendimento_w	bigint;
nr_seq_agenda_w		autorizacao_cirurgia.nr_seq_agenda%type;
nm_usuario_pedido_w	varchar(255);
ds_observacao_w		varchar(255);
dt_pedido_w		timestamp;
cd_requisitante_w	varchar(255);
nr_prescricao_w		bigint;

nr_doc_convenio_w	varchar(255);
nr_seq_autorizacao_w	bigint;
cd_convenio_w		bigint;
nr_seq_estagio_w	bigint;
nr_sequencia_autor_w	bigint;
ie_lib_materiais_esp_w	varchar(255)	:= 'N';

cd_material_w		bigint;
qt_solicitada_w		double precision;
vl_unitario_material_w	double precision;
ds_observacao_mat_w	varchar(255);
cd_cgc_fornec_w		varchar(255);
nr_seq_fabricante_w	bigint;

qt_registro_w		bigint;
ie_valor_conta_w	varchar(1);
nr_seq_opme_w		bigint;
cd_pessoa_fisica_w	autorizacao_cirurgia.cd_pessoa_fisica%type;

c01 CURSOR FOR
SELECT	cd_material,
	qt_solicitada,
	vl_unitario_material,
	ds_observacao,
	cd_cgc_fornec,
	nr_seq_fabricante,
	ie_valor_conta,
	nr_seq_opme
from	material_autor_cirurgia
where	nr_seq_autorizacao	= nr_sequencia_p;


BEGIN

select	count(*)
into STRICT	qt_registro_w
from	autorizacao_convenio
where	nr_seq_autor_cirurgia	= nr_sequencia_p;

if (qt_registro_w > 0) then
	--r.aise_application_error(-20011,'Ja foi gerada uma autorizacao convenio para esta autorizacao de materiais especiais!');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(263406);
end if;

select	nr_atendimento,
	nr_seq_agenda,
	nm_usuario_pedido,
	ds_observacao,
	dt_pedido,
	cd_requisitante,
	nr_prescricao,
	cd_pessoa_fisica
into STRICT	nr_atendimento_w,
	nr_seq_agenda_w,
	nm_usuario_pedido_w,
	ds_observacao_w,
	dt_pedido_w,
	cd_requisitante_w,
	nr_prescricao_w,
	cd_pessoa_fisica_w
from	autorizacao_cirurgia
where	nr_sequencia	= nr_sequencia_p;
		
if (coalesce(nr_atendimento_w,0) > 0) then
	
	select	nr_doc_convenio,
		cd_convenio
	into STRICT	nr_doc_convenio_w,
		cd_convenio_w
	from	atend_categoria_convenio
	where	nr_atendimento			= nr_atendimento_w
	and	obter_atecaco_atendimento(nr_atendimento) = nr_seq_interno;

elsif (coalesce(nr_seq_agenda_w,0) > 0) then
	
	select	nr_atendimento,
		cd_convenio,
		nr_doc_convenio
	into STRICT	nr_atendimento_w,
		cd_convenio_w,
		nr_doc_convenio_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_w;

end if;

begin
if (coalesce(dt_autorizacao_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_estagio_w
	from	estagio_autorizacao
	where	ie_interno	= '1'
	and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
		
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_estagio_w
	from	estagio_autorizacao
	where	ie_interno	= '10'
	and	OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;
end if;
exception
	when others then
	nr_seq_estagio_w	:= null;
end;

select	nextval('autorizacao_convenio_seq')
into STRICT	nr_sequencia_autor_w
;

insert	into autorizacao_convenio(NR_ATENDIMENTO ,
	CD_CONVENIO,
	CD_AUTORIZACAO,
	DT_AUTORIZACAO,
	DT_INICIO_VIGENCIA,
	DT_ATUALIZACAO,
	NM_USUARIO,
	DT_FIM_VIGENCIA,
	NM_RESPONSAVEL,
	DS_OBSERVACAO,
	CD_SENHA,
	CD_PROCEDIMENTO_PRINCIPAL,
	IE_ORIGEM_PROCED,
	DT_PEDIDO_MEDICO,
	CD_MEDICO_SOLICITANTE,
	IE_TIPO_GUIA,
	QT_DIA_AUTORIZADO,
	NR_PRESCRICAO,
	DT_ENVIO,
	DT_RETORNO,
	NR_SEQ_ESTAGIO,
	IE_TIPO_AUTORIZACAO,
	IE_TIPO_DIA,
	CD_TIPO_ACOMODACAO,
	NR_SEQ_AUTOR_CIRURGIA,
	DS_INDICACAO,
	DT_GERACAO_CIH,
	NR_SEQUENCIA,
	NR_SEQ_AGENDA,
	DT_ATUALIZACAO_NREC,
	NM_USUARIO_NREC,
	CD_PESSOA_FISICA)
values (nr_atendimento_w,
	cd_convenio_w,
	nr_doc_convenio_w,
	clock_timestamp(),
	null,
	clock_timestamp(),
	nm_usuario_p,
	null,
	nm_usuario_pedido_w,
	ds_observacao_w,
	null,
	null, --:new.cd_procedimento
	null,--:new.ie_origem_proced
	dt_pedido_w,
	cd_requisitante_w,
	5,
	null,
	nr_prescricao_w,
	null,
	null,
	nr_seq_estagio_w,
	5,
	'C',
	null,
	nr_sequencia_p,
	null,
	null,
	nr_sequencia_autor_w,
	nr_seq_agenda_w,
	clock_timestamp(),
	nm_usuario_p,
	cd_pessoa_fisica_w);

open c01;
loop
fetch c01 into
	cd_material_w,
	qt_solicitada_w,
	vl_unitario_material_w,
	ds_observacao_mat_w,
	cd_cgc_fornec_w,
	nr_seq_fabricante_w,
	ie_valor_conta_w,
	nr_seq_opme_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	insert	into	material_autorizado(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nr_sequencia_autor,
		cd_material,
		qt_solicitada,
		qt_autorizada,
		vl_unitario,
		ds_observacao,
		cd_cgc_fabricante,
		nr_seq_fabricante,
		ie_valor_conta,
		nr_seq_opme)
	values (nextval('material_autorizado_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nr_sequencia_autor_w,
		cd_material_w,
		qt_solicitada_w,
		0,
		vl_unitario_material_w,
		ds_observacao_w,
		cd_cgc_fornec_w,
		nr_seq_fabricante_w,
		ie_valor_conta_w,
		nr_seq_opme_w);
end loop;
close c01;

update	autorizacao_cirurgia
set	dt_liberacao_autor	= clock_timestamp(),
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where	nr_sequencia		= nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_autor_cir_convenio (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

