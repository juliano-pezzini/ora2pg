-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_liberar_repasse_seg ( nr_seq_seg_repasse_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


dt_liberacao_w			timestamp;
nr_seq_segurado_w		bigint;
ie_tipo_segurado_ant_w		varchar(1);
ie_cartao_provisorio_w		varchar(1);
nr_seq_carteira_w		bigint;
nr_seq_motivo_via_adic_w	bigint;
nr_seq_tabela_repasse_w		bigint;
ie_tipo_repasse_w		varchar(1);
dt_repasse_w			timestamp;
dt_liberacao_benef_w		timestamp;
dt_contratacao_w		timestamp;
dt_rescisao_w			timestamp;
nr_seq_repasse_seg_w		bigint;
qt_repasse_aberto_w		bigint;
nr_seq_congenere_atend_w	bigint;
cd_estabelecimento_w		bigint;
cd_cgc_outorgante_w		varchar(14);
cd_cgc_atendimento_w		varchar(14);
qt_registros_w			bigint;
ds_historico_benef_w		pls_segurado_repasse.ds_historico_benef%type;
ie_tipo_compartilhamento_w	pls_segurado_repasse.ie_tipo_compartilhamento%type;


BEGIN

select	a.dt_liberacao,
	b.nr_sequencia nr_seq_segurado,
	a.ie_cartao_provisorio,
	a.nr_seq_motivo_via_adic,
	a.nr_seq_tabela,
	a.ie_tipo_repasse,
	a.dt_repasse,
	b.dt_liberacao,
	b.dt_contratacao,
	b.dt_rescisao,
	a.nr_sequencia,
	a.nr_seq_congenere_atend,
	b.cd_estabelecimento,
	a.ds_historico_benef,
	b.ie_tipo_segurado,
	a.ie_tipo_compartilhamento
into STRICT	dt_liberacao_w,
	nr_seq_segurado_w,
	ie_cartao_provisorio_w,
	nr_seq_motivo_via_adic_w,
	nr_seq_tabela_repasse_w,
	ie_tipo_repasse_w,
	dt_repasse_w,
	dt_liberacao_benef_w,
	dt_contratacao_w,
	dt_rescisao_w,
	nr_seq_repasse_seg_w,
	nr_seq_congenere_atend_w,
	cd_estabelecimento_w,
	ds_historico_benef_w,
	ie_tipo_segurado_ant_w,
	ie_tipo_compartilhamento_w
from	pls_segurado_repasse	a,
	pls_segurado		b
where	a.nr_seq_segurado	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_seg_repasse_p;

if (dt_repasse_w < dt_contratacao_w) and (ie_tipo_compartilhamento_w = 1) then
	update	pls_segurado_repasse
	set	dt_repasse	= dt_contratacao_w
	where	nr_sequencia	= nr_seq_repasse_seg_w;
	
	dt_repasse_w	:= dt_contratacao_w;
end if;

if	(dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '' AND dt_rescisao_w < dt_repasse_w) and (ie_tipo_compartilhamento_w = 1) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1067528, 'DT_RESCISAO='||dt_rescisao_w);
end if;

if (coalesce(ie_tipo_repasse_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(194983);
end if;

if (coalesce(dt_repasse_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(194984);
end if;

if (coalesce(dt_liberacao_benef_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(194985);
end if;

if (nr_seq_congenere_atend_w IS NOT NULL AND nr_seq_congenere_atend_w::text <> '') then
	select	max(cd_cgc_outorgante)
	into STRICT	cd_cgc_outorgante_w
	from	pls_outorgante
	where	cd_estabelecimento	= cd_estabelecimento_w;
	
	if (cd_cgc_outorgante_w IS NOT NULL AND cd_cgc_outorgante_w::text <> '') then
		select	max(cd_cgc)
		into STRICT	cd_cgc_atendimento_w
		from	pls_congenere
		where	nr_sequencia	= nr_seq_congenere_atend_w;
		
		if (cd_cgc_atendimento_w = cd_cgc_outorgante_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(202794); --Operadora de atendimento não pode ser a operadora do plano de saúde do beneficiário!
		end if;
	end if;
end if;

select	count(*)
into STRICT	qt_repasse_aberto_w
from	pls_segurado_repasse	b,
	pls_segurado		a
where	a.nr_sequencia = b.nr_seq_segurado
and	a.nr_sequencia = nr_seq_segurado_w
and	b.nr_seq_congenere_atend = nr_seq_congenere_atend_w
and	coalesce(b.dt_fim_repasse::text, '') = ''
and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
and	b.nr_sequencia <> nr_seq_seg_repasse_p;

if (coalesce(qt_repasse_aberto_w,0) > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1040430); --Já existe um compartilhamento de risco vigente para a mesma operadora. Favor verificar.
end if;

if (nr_seq_congenere_atend_w IS NOT NULL AND nr_seq_congenere_atend_w::text <> '') and (ie_tipo_compartilhamento_w = 1) then
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_regra_bloqueio_repasse
	where	nr_seq_congenere	= nr_seq_congenere_atend_w
	and	trunc(dt_repasse_w,'dd') between trunc(dt_inicio_bloqueio,'dd') and trunc(coalesce(dt_fim_bloqueio,dt_repasse_w),'dd')
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	
	if (qt_registros_w	> 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(223159); --Cooperativa de atendimento está bloqueada para atendimento. Favor verificar.
	end if;
end if;

if (coalesce(dt_liberacao_w::text, '') = '') then
	update	pls_segurado_repasse
	set	dt_liberacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_seg_repasse_p;
	
	if	((trunc(dt_repasse_w,'dd') <= trunc(clock_timestamp(),'dd')) and (ie_tipo_compartilhamento_w = 1)) then
		CALL pls_alterar_segurado_repasase(	nr_seq_segurado_w, nr_seq_tabela_repasse_w, nr_seq_repasse_seg_w,
						dt_repasse_w, ie_tipo_segurado_ant_w, ds_historico_benef_w || ' - pls_liberar_repasse_seg', 
						nm_usuario_p);
	end if;
	
	--Gerar uma via adicional caso esteja para esteja marcado para gerar um cartão provisório
	if (coalesce(ie_cartao_provisorio_w,'N') = 'S') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_carteira_w
		from	pls_segurado_carteira
		where	nr_seq_segurado	= nr_seq_segurado_w;
		
		CALL pls_gerar_via_carteira(nr_seq_carteira_w,nr_seq_motivo_via_adic_w,nm_usuario_p,1202,'M','N');
	end if;
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_liberar_repasse_seg ( nr_seq_seg_repasse_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

