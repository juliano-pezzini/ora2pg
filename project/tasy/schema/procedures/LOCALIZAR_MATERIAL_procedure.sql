-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE localizar_material ( ds_restricao_p text, ds_princ_ativo_p text, ie_gererico_p text, ie_comercial_p text, nm_usuario_p text, ds_material_p text default null, ds_codigo_p text default null, ie_tipo_codigo_p text default null, ie_cd_material_p text default null) AS $body$
DECLARE


 

c01        integer;
resultado        integer;
cd_material_ww    varchar(6);
cd_material_w    integer;
ds_sql_w        varchar(4000);
is_Parametro64_w varchar(1)  := 'N';
is_Parametro24_w varchar(1)  := 'O';
ds_restricao_mat_w  varchar(2000);
ds_restricao_sis_w  varchar(2000);
resultado_material_w    varchar(2000);
resultado_codigo_w    varchar(2000);



c02 CURSOR FOR
SELECT    a.cd_material_generico
from    material a,
    w_localizar_material b
where    a.cd_material = b.cd_material
and    (a.cd_material_generico IS NOT NULL AND a.cd_material_generico::text <> '')
and    not exists (    SELECT    1
        from    w_localizar_material x
        where    x.cd_material = a.cd_material_generico)
group by    a.cd_material_generico;

c03 CURSOR FOR
SELECT    a.cd_material
from    material a,
    w_localizar_material b
where    a.cd_material_generico = b.cd_material
and    not exists (    SELECT    1
        from    w_localizar_material x
        where    x.cd_material = a.cd_material);

BEGIN

is_Parametro64_w := Obter_Param_Usuario(-124, 64, Obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, is_Parametro64_w);
is_Parametro24_w := Obter_Param_Usuario(-124, 24, Obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, is_Parametro24_w);

ds_sql_w    := 'select cd_material from material a where 1 = 1 ' || ds_restricao_p;

delete    FROM w_localizar_material;

c01    := dbms_sql.open_cursor;
dbms_sql.parse(c01,ds_sql_w,dbms_sql.native);

if (ds_material_p IS NOT NULL AND ds_material_p::text <> '') then

    resultado_material_w := ds_material_p;

    if (is_Parametro64_w = 'S') then    
         resultado_material_w := replace(ELIMINA_ASPAS(rtrim(ds_material_p)),' ','%');
    end if;
	
    if (is_Parametro24_w = 'I') then
    
        if (coalesce(ie_cd_material_p,'X') = 'S') then
            dbms_sql.bind_variable(c01,':DS_DESCRICAO_MAT',resultado_material_w);
	elsif (coalesce(ie_cd_material_p,'X') = 'C') then
	    dbms_sql.bind_variable(c01,':DS_DESCRICAO_MAT','%' || resultado_material_w || '%');
	elsif (coalesce(ie_cd_material_p,'X') = 'N') then
            dbms_sql.bind_variable(c01,':DS_DESCRICAO_MAT',resultado_material_w || '%');
        end if;
    else
	if (coalesce(ie_cd_material_p,'X') = 'S') then
	    dbms_sql.bind_variable(c01,':DS_DESCRICAO_MAT',resultado_material_w);
	else
	    dbms_sql.bind_variable(c01,':DS_DESCRICAO_MAT','%' || resultado_material_w || '%');
	end if;
   end if;
end if;

if (ds_codigo_p IS NOT NULL AND ds_codigo_p::text <> '') then
    resultado_codigo_w := ds_codigo_p;

    if (ie_tipo_codigo_p <> 'R') then    
        dbms_sql.bind_variable(c01,':CD_SISTEMA', resultado_codigo_w);
    else
	 if (coalesce(ie_cd_material_p,'X') = 'S') then
		dbms_sql.bind_variable(c01,':CD_SISTEMA', resultado_codigo_w);
        else
		dbms_sql.bind_variable(c01,':CD_SISTEMA','%' || resultado_codigo_w || '%');
        end if;
    end if;

end if;

dbms_sql.define_column(c01, 1, cd_material_ww, 6);

resultado := dbms_sql.execute(c01);

while(dbms_sql.fetch_rows(c01) > 0) loop
    begin
    dbms_sql.column_value(c01, 1, cd_material_ww);
    cd_material_w    := somente_numero(cd_material_ww);

    if (cd_material_w > 0) then
        insert into w_localizar_material(
            cd_material,
            ie_tipo) 
        values (    cd_material_w,
            'N');
    end if;
    end;
end loop;

dbms_sql.close_cursor(c01);

if    ((ie_gererico_p = 'S') or (ie_comercial_p = 'S')) then
    open c02;
    loop
    fetch c02 into
        cd_material_w;
    EXIT WHEN NOT FOUND; /* apply on c02 */
        begin
        insert into w_localizar_material(
            cd_material,
            ie_tipo)
        values (    cd_material_w,
            'G');
        end;
    end loop;
    close c02;
end if;


if (ie_comercial_p = 'S') then
    open c03;
    loop
    fetch c03 into
        cd_material_w;
    EXIT WHEN NOT FOUND; /* apply on c03 */
        begin
        insert into w_localizar_material(
            cd_material,
            ie_tipo)
        values (cd_material_w,
            'C');
        end;
    end loop;
    close c03;
end if;


if (ie_gererico_p = 'N') and (ie_comercial_p = 'S') then
    delete    FROM w_localizar_material
    where    ie_tipo = 'G';
end if;


if (coalesce(ds_princ_ativo_p,'X') <> 'X') then
    begin
    ds_sql_w    :=    'select    a.cd_material ' ||
                'from    material a ' ||
                'where    not exists ( ' ||
                        'select    1 ' ||
                        'from    w_localizar_material x ' ||
                        'where    x.cd_material = a.cd_material) ' || ds_princ_ativo_p;
    c01    := dbms_sql.open_cursor;
    dbms_sql.parse(c01,ds_sql_w,dbms_sql.native);
    dbms_sql.define_column(c01, 1, cd_material_ww, 6);

 
    resultado := dbms_sql.execute(c01);
    while(dbms_sql.fetch_rows(c01) > 0) loop
        begin
        dbms_sql.column_value(c01, 1, cd_material_ww);
        cd_material_w    := somente_numero(cd_material_ww);

        if (cd_material_w > 0) then
            insert into w_localizar_material(
                cd_material,
                ie_tipo) 
            values (    cd_material_w,
                'P');
        end if;
        end;
    end loop;
    dbms_sql.close_cursor(c01);
    end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE localizar_material ( ds_restricao_p text, ds_princ_ativo_p text, ie_gererico_p text, ie_comercial_p text, nm_usuario_p text, ds_material_p text default null, ds_codigo_p text default null, ie_tipo_codigo_p text default null, ie_cd_material_p text default null) FROM PUBLIC;

