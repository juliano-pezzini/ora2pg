-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_verifica_dif_movto_valor ( dt_mesano_referencia_p timestamp, cd_material_p bigint) AS $body$
DECLARE


/*ESSA PROCEDURE FOI CRIADA PARA AJUSTAR UMA DIFERENÇA DE VALOR DE ESTOQUE NO COSTA CAVALCANTI, A FIM DE RATEAR UMA DIFERENÇA DE VALOR NOS MOVIMENTOS DE ESTOQUE,  SOMENTE QUANDO O ESTOQUE ESTIVER ZERADO
OS 226815*/
cd_estabelecimento_w		smallint	:= 0;
cd_local_estoque_w		smallint	:= 1;
cd_material_w			integer	:= 0;
cd_material_ref_w			integer	:= 0;
cd_operacao_estoque_w		smallint	:= 0;
ie_entrada_saida_w			varchar(1);
vl_estoque_w			double precision;
dt_mesano_referencia_w		timestamp;
dt_mesano_anterior_w		timestamp;
vl_entrada_w			double precision;
vl_saida_w			double precision;
vl_saldo_estoque_w		double precision;
vl_saldo_anterior_w			double precision;
vl_dif_w				double precision;
ds_retorno_w			varchar(40);
qt_existe_w			integer;
nr_movimento_estoque_w		bigint;
qt_movimentos_w			bigint;
cd_tipo_valor_w			integer;

c01 CURSOR FOR
SELECT	distinct
	cd_estabelecimento,
	cd_material
from	saldo_estoque
where	dt_mesano_referencia 	= dt_mesano_referencia_w
and	coalesce(qt_estoque, 0) = 0

union

select	distinct
	cd_estabelecimento,
	cd_material
from	saldo_estoque a
where	a.dt_mesano_referencia 	= dt_mesano_anterior_w
and	coalesce(qt_estoque, 0) = 0
and not exists (
	SELECT	1
	from	saldo_estoque b
	where	a.cd_estabelecimento 	= b.cd_estabelecimento
	and	a.cd_material		= b.cd_material
	and	b.dt_mesano_referencia 	= dt_mesano_referencia_w);

c02 CURSOR FOR
SELECT	a.vl_estoque,
	a.cd_operacao_estoque,
	b.ie_entrada_saida
from	operacao_estoque b,
	resumo_movto_estoque a
where	a.dt_mesano_referencia	= dt_mesano_referencia_w
and	a.cd_material		= cd_material_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	a.ie_consignado		= 'N';

c03 CURSOR FOR
SELECT	a.nr_movimento_estoque
from	movimento_estoque a,
	operacao_estoque b
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	a.dt_mesano_referencia	= dt_mesano_referencia_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	a.cd_material		= cd_material_w
and	b.ie_entrada_saida	= 'S'
and	a.cd_acao		= '1';


BEGIN

dt_mesano_referencia_w	:= trunc(dt_mesano_referencia_p,'month');
dt_mesano_anterior_w  	:= add_months(dt_mesano_referencia_w, -1);
ds_retorno_w := obter_valor_dinamico('Truncate table w_saldo_estoque', ds_retorno_w);

select	min(cd_material)
into STRICT	cd_material_ref_w
from 	saldo_Estoque
where	dt_mesano_referencia 	= dt_mesano_referencia_w;

open C01;
loop
fetch C01 into
	cd_estabelecimento_w,
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	vl_entrada_w		:= 0;
	vl_saida_w		:= 0;
	vl_saldo_estoque_w	:= 0;
	vl_saldo_anterior_w	:= 0;

	begin
	select	coalesce(sum(vl_estoque),0)
	into STRICT	vl_saldo_estoque_w
	from	saldo_estoque
	where	cd_estabelecimento 	= cd_estabelecimento_w
	and	cd_material		= cd_material_w
	and	dt_mesano_referencia	= dt_mesano_referencia_w;
	exception when others then
		vl_saldo_estoque_w	:= 0;
	end;

	begin
	select	coalesce(sum(vl_estoque),0)
	into STRICT	vl_saldo_anterior_w
	from	saldo_estoque
	where	cd_estabelecimento 	= cd_estabelecimento_w
	and	cd_material		 = cd_material_w
	and	dt_mesano_referencia	= dt_mesano_anterior_w;
	exception when others	 then
		vl_saldo_anterior_w	:= 0;
	end;

	open c02;
	loop
	fetch c02 into
		vl_estoque_w,
		cd_operacao_estoque_w,
		ie_entrada_saida_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
       	begin
		if (ie_entrada_saida_w = 'S') then
			vl_saida_w		:= vl_saida_w + vl_estoque_w;
		else
			vl_entrada_w	:= vl_entrada_w + vl_estoque_w;
		end if;
		end;
	end loop;
	close c02;

	vl_dif_w	:=  	vl_saldo_estoque_w -
				(vl_saldo_anterior_w + vl_entrada_w - vl_saida_w);

	if (vl_dif_w <> 0) then
		begin
		insert into w_saldo_estoque(
			cd_estabelecimento,
			cd_local_estoque,
			cd_material,
			dt_mesano_referencia,
			qt_estoque_atual,
			qt_estoque_anterior,
			qt_entrada,
			qt_saida,
			qt_diferenca)
		values (	cd_estabelecimento_w,
			cd_local_estoque_w,
			cd_material_w,
			dt_mesano_referencia_w,
			vl_saldo_estoque_w,
			vl_saldo_anterior_w,
			vl_entrada_w,
			vl_saida_w,
			vl_dif_w);

		if (cd_material_p = 1555) then

			/*update	saldo_estoque
			set	vl_estoque 		= vl_estoque - vl_dif_w
			where	cd_estabelecimento 	= cd_estabelecimento_w
			and	cd_material		= cd_material_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w
			and	cd_local_estoque 	= (
							select	min(cd_local_estoque)
							from	saldo_estoque
							where	cd_estabelecimento 	= cd_estabelecimento_w
			  	  			and	cd_material		= cd_material_w
			  	  			and	dt_mesano_referencia	= dt_mesano_referencia_w);*/
			select	count(*)
			into STRICT	qt_movimentos_w
			from	movimento_estoque a,
				operacao_estoque b
			where	a.cd_operacao_estoque	= b.cd_operacao_estoque
			and	a.dt_mesano_referencia	= dt_mesano_referencia_w
			and	a.cd_estabelecimento	= cd_estabelecimento_w
			and	a.cd_material		= cd_material_w
			and	b.ie_entrada_saida	= 'S'
			and	a.cd_acao		= '1';

			vl_dif_w := dividir(vl_dif_w, qt_movimentos_w);

			if (vl_dif_w <> 0) then

				open C03;
				loop
				fetch C03 into
					nr_movimento_estoque_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin

					select	a.cd_tipo_valor
					into STRICT	cd_tipo_valor_w
					from	movimento_estoque_valor a
					where	a.nr_movimento_estoque	= nr_movimento_estoque_w
					and	a.vl_movimento		= (
									SELECT	max(x.vl_movimento)
									from	movimento_estoque_valor x
									where	x.nr_movimento_estoque	= nr_movimento_estoque_w);

					update	movimento_estoque_valor
					set	vl_movimento	= vl_movimento + vl_dif_w
					where	cd_tipo_valor	= cd_tipo_valor_w;

					end;
				end loop;
				close C03;
			end if;
		end if;
		end;
	end if;
	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_verifica_dif_movto_valor ( dt_mesano_referencia_p timestamp, cd_material_p bigint) FROM PUBLIC;

