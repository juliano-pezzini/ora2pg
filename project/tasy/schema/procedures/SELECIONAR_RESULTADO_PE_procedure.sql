-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE selecionar_resultado_pe ( nr_prescricao_p bigint, nr_seq_item_p bigint, nr_seq_topografia_p bigint, ie_lado_p text, nr_seq_result_p bigint, ie_topografia_p INOUT text, nr_seq_sesult_out_p INOUT bigint, ie_observacao_p INOUT text, ie_reg_regra_p INOUT text, ie_sinal_vital_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

		
nr_seq_result_w			bigint;
ie_topografia_w			varchar(1) := 'N';
ie_observacao_w			varchar(1) := 'N';
qt_reg_w				bigint;
cd_perfil_w				bigint;
cd_estabelecimento_w	bigint;
ie_regra_w				varchar(1) := 'N';
ie_sinal_vital_w		pe_item_resultado.ie_sinal_vital%type;


BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_result_p IS NOT NULL AND nr_seq_result_p::text <> '') and (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	
	CALL selecionar_resultado(
		nr_prescricao_p,
		nr_seq_result_p,
		nr_seq_item_p,
		nr_seq_topografia_p,
		ie_lado_p,
		nm_usuario_p);

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_result_w
	from	pe_prescr_item_result
	where	nr_seq_prescr = nr_prescricao_p;
	
	select	coalesce(ie_topografia,'N')
	into STRICT	ie_topografia_w
	from	pe_item_examinar
	where	nr_sequencia = nr_seq_item_p;
	
	select 	coalesce(ie_observacao,'N')
	into STRICT	ie_observacao_w
	from 	pe_item_resultado
	where 	nr_sequencia = nr_seq_result_p;
	
	if (ie_topografia_w = 'N') then
		begin
		
		select	coalesce(ie_topografia,'N')
		into STRICT	ie_topografia_w
		from	pe_item_resultado
		where	nr_sequencia = nr_seq_result_p;
		end;
	end if;

	select	max(ie_sinal_vital)
	into STRICT	ie_sinal_vital_w
	from	pe_item_resultado
	where	nr_sequencia = nr_seq_result_p;
	end;
	
	cd_perfil_w 	:= obter_perfil_ativo;
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	
	select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_regra_w
	from   	regra_eventos_result_sae 
	where  	nr_seq_resultado = nr_seq_result_p 
	and    	nr_seq_item_examinar = nr_seq_item_p
	and    	coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0)
	and    	coalesce(cd_perfil,coalesce(cd_perfil_w,0)) = coalesce(cd_perfil_w,0);	
	
end if;
nr_seq_sesult_out_p 	:= nr_seq_result_w;
ie_topografia_p 	:= ie_topografia_w;
ie_sinal_vital_p	:= ie_sinal_vital_w;
ie_observacao_p		:= ie_observacao_w;
ie_reg_regra_p		:= ie_regra_w;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE selecionar_resultado_pe ( nr_prescricao_p bigint, nr_seq_item_p bigint, nr_seq_topografia_p bigint, ie_lado_p text, nr_seq_result_p bigint, ie_topografia_p INOUT text, nr_seq_sesult_out_p INOUT bigint, ie_observacao_p INOUT text, ie_reg_regra_p INOUT text, ie_sinal_vital_p INOUT text, nm_usuario_p text) FROM PUBLIC;

