-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_itens_execucao ( nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, nr_seq_requisicao_p bigint, ie_origem_execucao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
 
 
/* ie_origem_execucao_p 
P - Portal Web 
T - Tasy 
*/
 
 
qt_item_aprovado_w		double precision;
qt_item_solicitado_w		double precision;
qt_item_executado_w		double precision;
qt_item_pendente_w		double precision;
dt_requisicao_w			timestamp;
dt_validade_senha_w  		timestamp;
nr_seq_requisicao_w   	bigint;
nr_seq_proc_mat_w   	 	bigint;
cd_proc_mat_w      	bigint;
ds_tipo_guia_w     	varchar(255);
ds_proc_mat_w      	varchar(255);
nm_medico_w       	varchar(255);
cd_medico_solicitante_w 	varchar(10);
ie_tipo_item_w     	varchar(2);
nr_seq_prestador_w   	bigint;
nr_seq_segurado_w    	bigint;
ie_tipo_guia_w     	varchar(2);
ie_permite_execucao_w		varchar(1);
nr_sequencia_w			bigint;
ie_origem_proced_w		bigint;
cd_especialidade_w		bigint;

 
 
C01 CURSOR FOR 
	SELECT	b.nr_sequencia nr_sequencia, 
		a.ie_tipo_guia, 
		'P' ie_tipo_item, 
		a.nr_sequencia nr_seq_requisicao, 
		a.dt_requisicao dt_requisicao, 
		b.cd_procedimento cd_proc_mat, 
		b.ie_origem_proced ie_origem_proced, 
		a.cd_medico_solicitante, 
		b.qt_solicitado qt_proc_mat_solic, 
		b.qt_procedimento qt_proc_mat_aprov, 
		b.qt_proc_executado qt_proc_mat_exec, 
		pls_quant_itens_pendentes_exec(b.qt_procedimento,b.qt_proc_executado) qt_pendente, 
		a.dt_validade_senha dt_validade_senha, 
		a.cd_especialidade 
	from	pls_requisicao a, 
		pls_requisicao_proc b 
	where	a.nr_sequencia = b.nr_seq_requisicao 
	and	a.ie_estagio in (2,4,6,9,11) 
	and	b.ie_status in ('P','S') 
	and ((b.qt_procedimento IS NOT NULL AND b.qt_procedimento::text <> '') and (b.qt_procedimento - coalesce(b.qt_proc_executado,0)) > 0) 
	and	((a.nr_seq_segurado	= nr_seq_segurado_p 
	and (a.nr_sequencia 	= nr_seq_requisicao_p 
	or 	coalesce(nr_seq_requisicao_p::text, '') = '')) 
	or (a.nr_sequencia 	= nr_seq_requisicao_p)) 
	and (trunc(clock_timestamp())	<= a.dt_validade_senha or coalesce(a.dt_validade_senha::text, '') = '') 
	
union
 
	SELECT	b.nr_sequencia nr_sequencia, 
		a.ie_tipo_guia, 
		'M' ie_tipo_item, 
		a.nr_sequencia nr_seq_requisicao, 
		a.dt_requisicao dt_requisicao, 
		b.nr_seq_material cd_proc_mat, 
		0 ie_origem_proced, 
		a.cd_medico_solicitante, 
		b.qt_solicitado qt_proc_mat_solic, 
		b.qt_material qt_proc_mat_aprov, 
		b.qt_mat_executado qt_proc_mat_exec, 
		pls_quant_itens_pendentes_exec(b.qt_material,b.qt_mat_executado) qt_pendente, 
		a.dt_validade_senha dt_validade_senha, 
		a.cd_especialidade 
	from	pls_requisicao a, 
		pls_requisicao_mat b 
	where	a.nr_sequencia = b.nr_seq_requisicao 
	and	a.ie_estagio in (2,4,6,9,11) 
	and	b.ie_status in ('P','S') 
	and ((b.qt_material IS NOT NULL AND b.qt_material::text <> '') and (b.qt_material - coalesce(b.qt_mat_executado,0)) > 0) 
	and	((a.nr_seq_segurado	= nr_seq_segurado_p 
	and (a.nr_sequencia 	= nr_seq_requisicao_p 
	or 	coalesce(nr_seq_requisicao_p::text, '') = '')) 
	or (a.nr_sequencia 	= nr_seq_requisicao_p)) 
	and (trunc(clock_timestamp())	<= a.dt_validade_senha	or coalesce(a.dt_validade_senha::text, '') = '') 
	order by nr_seq_requisicao;

C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.ie_tipo_guia, 
		'P' ie_tipo_item, 
		a.nr_sequencia nr_seq_requisicao, 
		a.cd_medico_solicitante, 
		a.dt_requisicao dt_requisicao, 
		b.cd_procedimento cd_proc_mat, 
		b.ie_origem_proced ie_origem_proced, 
		b.qt_solicitado qt_proc_mat_solic, 
		b.qt_procedimento qt_proc_mat_aprov, 
		b.qt_proc_executado qt_proc_mat_exec, 
		pls_quant_itens_pendentes_exec(b.qt_procedimento,b.qt_proc_executado) qt_pendente, 
		a.cd_especialidade 
	from	pls_requisicao a, 
		pls_requisicao_proc b 
	where	a.nr_sequencia = b.nr_seq_requisicao 
	and	b.ie_status in ('P','S') 
	and ((b.qt_procedimento IS NOT NULL AND b.qt_procedimento::text <> '') and (b.qt_procedimento - coalesce(b.qt_proc_executado,0)) > 0) 
	and	((a.nr_seq_segurado	= nr_seq_segurado_p 
	and (a.nr_sequencia 	= nr_seq_requisicao_p 
	or 	coalesce(nr_seq_requisicao_p::text, '') = '')) 
	or (a.nr_sequencia 	= nr_seq_requisicao_p)) 
	
union
 
	SELECT	a.nr_sequencia, 
		a.ie_tipo_guia, 
		'M' ie_tipo_item, 
		a.nr_sequencia nr_seq_requisicao, 
		a.cd_medico_solicitante, 
		a.dt_requisicao dt_requisicao, 
		b.nr_seq_material cd_proc_mat, 
		0 ie_origem_proced, 
		b.qt_solicitado qt_proc_mat_solic, 
		b.qt_material qt_proc_mat_aprov, 
		b.qt_mat_executado qt_proc_mat_exec, 
		pls_quant_itens_pendentes_exec(b.qt_material,b.qt_mat_executado) qt_pendente, 
		a.cd_especialidade 
	from	pls_requisicao a, 
		pls_requisicao_mat b 
	where	a.nr_sequencia = b.nr_seq_requisicao 
	and	b.ie_status in ('P','S') 
	and ((b.qt_material IS NOT NULL AND b.qt_material::text <> '') and (b.qt_material - coalesce(b.qt_mat_executado,0)) > 0) 
	and	((a.nr_seq_segurado	= nr_seq_segurado_p 
	and (a.nr_sequencia 	= nr_seq_requisicao_p 
	or 	coalesce(nr_seq_requisicao_p::text, '') = '')) 
	or (a.nr_sequencia 	= nr_seq_requisicao_p)) 
	order by nr_sequencia;

 

BEGIN 
CALL pls_delete_w_itens_execucao(nr_seq_prestador_p, nr_seq_segurado_p, 'LC');
 
-- Limpar os itens que foram colocados para execução, no momento da consulta para não deixar sujeira na base 
if (ie_origem_execucao_p = 'P') then 
	CALL pls_delete_w_itens_execucao(null, nr_seq_segurado_p, 'LE');
end if;
 
if (ie_origem_execucao_p = 'P' or ie_origem_execucao_p = 'T') then 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_proc_mat_w, 
		ie_tipo_guia_w, 
		ie_tipo_item_w, 
		nr_seq_requisicao_w, 
		dt_requisicao_w, 
		cd_proc_mat_w, 
		ie_origem_proced_w, 
		cd_medico_solicitante_w, 
		qt_item_solicitado_w, 
		qt_item_aprovado_w, 
		qt_item_executado_w, 
		qt_item_pendente_w, 
		dt_validade_senha_w, 
		cd_especialidade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		if	((ie_tipo_item_w	= 'P') and (pls_obter_se_proc_prestador(	nr_seq_prestador_p,null,cd_proc_mat_w, 
												ie_origem_proced_w, ie_tipo_guia_w, 
												clock_timestamp(),cd_estabelecimento_p,null,null,null,null)	= 'S') and 
			((coalesce(cd_especialidade_w,0)	<> 0) and (pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'S')	or (coalesce(cd_especialidade_w,0)	= 0))) then 
			select	coalesce(max(nr_sequencia),0) + 1 
			into STRICT	nr_sequencia_w 
			from	w_pls_itens_benef_exec 
			where	nr_seq_segurado	= nr_seq_segurado_p;
 
			ie_permite_execucao_w := pls_obter_se_bloqueio_exec(nr_seq_requisicao_w, nr_seq_prestador_p, ie_tipo_guia_w, ie_origem_execucao_p, 
						null,null,null,null);
 
			insert into w_pls_itens_benef_exec(	nr_sequencia, dt_atualizacao, nm_usuario, 
								dt_atualizacao_nrec, nm_usuario_nrec, qt_item_aprovado, 
								qt_item_solicitado, qt_item_executado,qt_item_pendente, 
								dt_requisicao, dt_validade_senha, nr_seq_requisicao, 
								nr_seq_proc_mat, cd_proc_mat, ds_proc_mat, 
								ds_tipo_guia, nm_medico, cd_medico_solicitante, 
								ie_tipo_item, nr_seq_prestador, nr_seq_segurado, 
								ie_tipo_guia, ie_permite_execucao, ie_tipo_consulta) 
							values (	nr_sequencia_w, clock_timestamp(), nm_usuario_p, 
								clock_timestamp(), nm_usuario_p, coalesce(qt_item_aprovado_w,0), 
								coalesce(qt_item_solicitado_w,0), coalesce(qt_item_executado_w,0), coalesce(qt_item_pendente_w,0), 
								to_char(dt_requisicao_w,'dd/mm/yyyy'), to_char(dt_validade_senha_w, 'dd/mm/yyyy'), nr_seq_requisicao_w, 
								nr_seq_proc_mat_w, cd_proc_mat_w, substr(obter_descricao_procedimento(cd_proc_mat_w,ie_origem_proced_w),1,255), 
								substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255), cd_medico_solicitante_w, 
								ie_tipo_item_w, nr_seq_prestador_p, nr_seq_segurado_p, 
								ie_tipo_guia_w, ie_permite_execucao_w, 'LC');
		elsif	((ie_tipo_item_w	= 'M') and (pls_obter_se_mat_prestador(nr_seq_prestador_p,null, cd_proc_mat_w, clock_timestamp(),null,null, cd_estabelecimento_p, null)	= 'S') and 
			((coalesce(cd_especialidade_w,0)	<> 0) and (pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'S')	or (coalesce(cd_especialidade_w,0)	= 0))) then 
			select	coalesce(max(nr_sequencia),0) + 1 
			into STRICT	nr_sequencia_w 
			from	w_pls_itens_benef_exec 
			where	nr_seq_segurado	= nr_seq_segurado_p;
 
			ie_permite_execucao_w := pls_obter_se_bloqueio_exec(nr_seq_requisicao_w, nr_seq_prestador_p, ie_tipo_guia_w, ie_origem_execucao_p, 
						null,null,null,null);
 
			insert into w_pls_itens_benef_exec(	nr_sequencia, dt_atualizacao, nm_usuario, 
								dt_atualizacao_nrec, nm_usuario_nrec, qt_item_aprovado, 
								qt_item_solicitado, qt_item_executado,qt_item_pendente, 
								dt_requisicao, dt_validade_senha, nr_seq_requisicao, 
								nr_seq_proc_mat, cd_proc_mat, ds_proc_mat, 
								ds_tipo_guia, nm_medico, cd_medico_solicitante, 
								ie_tipo_item, nr_seq_prestador, nr_seq_segurado, 
								ie_tipo_guia, ie_permite_execucao, ie_tipo_consulta) 
							values (	nr_sequencia_w, clock_timestamp(), nm_usuario_p, 
								clock_timestamp(), nm_usuario_p, coalesce(qt_item_aprovado_w,0), 
								coalesce(qt_item_solicitado_w,0), coalesce(qt_item_executado_w,0), coalesce(qt_item_pendente_w,0), 
								to_char(dt_requisicao_w,'dd/mm/yyyy'), to_char(dt_validade_senha_w, 'dd/mm/yyyy'), nr_seq_requisicao_w, 
								nr_seq_proc_mat_w, cd_proc_mat_w, substr(pls_obter_desc_material(cd_proc_mat_w),1,255), 
								substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255), cd_medico_solicitante_w, 
								ie_tipo_item_w, nr_seq_prestador_p, nr_seq_segurado_p, 
								ie_tipo_guia_w, ie_permite_execucao_w, 'LC');
		end if;
		end;
	end loop;
	close C01;
 
 
 
 
	open C02;
	loop 
	fetch C02 into 
		nr_seq_proc_mat_w, 
		ie_tipo_guia_w, 
		ie_tipo_item_w, 
		nr_seq_requisicao_w, 
		cd_medico_solicitante_w, 
		dt_requisicao_w, 
		cd_proc_mat_w, 
		ie_origem_proced_w, 
		qt_item_solicitado_w, 
		qt_item_aprovado_w, 
		qt_item_executado_w, 
		qt_item_pendente_w, 
		cd_especialidade_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		if	((ie_tipo_item_w	= 'P') and (pls_obter_se_proc_prestador(	nr_seq_prestador_p,null,cd_proc_mat_w, 
												ie_origem_proced_w, ie_tipo_guia_w,clock_timestamp(), 
												cd_estabelecimento_p,null,null,null,null)	= 'N') or 
			((coalesce(cd_especialidade_w,0)	<> 0) and (pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'N'))) then 
			select	coalesce(max(nr_sequencia),0) + 1 
			into STRICT	nr_sequencia_w 
			from	w_pls_itens_benef_exec 
			where	nr_seq_segurado	= nr_seq_segurado_p;
 
			insert into w_pls_itens_benef_exec(	nr_sequencia, dt_atualizacao, nm_usuario, 
								dt_atualizacao_nrec, nm_usuario_nrec, qt_item_aprovado, 
								qt_item_solicitado, qt_item_executado,qt_item_pendente, 
								dt_requisicao, dt_validade_senha, nr_seq_requisicao, 
								nr_seq_proc_mat, cd_proc_mat, ds_proc_mat, 
								ds_tipo_guia, nm_medico, cd_medico_solicitante, 
								ie_tipo_item, nr_seq_prestador, nr_seq_segurado, 
								ie_tipo_guia, ie_permite_execucao, ie_tipo_consulta) 
							values (	nr_sequencia_w, clock_timestamp(), nm_usuario_p, 
								clock_timestamp(), nm_usuario_p, coalesce(qt_item_aprovado_w,0), 
								coalesce(qt_item_solicitado_w,0), coalesce(qt_item_executado_w,0), coalesce(qt_item_pendente_w,0), 
								to_char(dt_requisicao_w,'dd/mm/yyyy'), null, nr_seq_requisicao_w, 
								nr_seq_proc_mat_w, cd_proc_mat_w, substr(obter_descricao_procedimento(cd_proc_mat_w,ie_origem_proced_w),1,255), 
								substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255), cd_medico_solicitante_w, 
								ie_tipo_item_w, nr_seq_prestador_p, nr_seq_segurado_p, 
								null, 'N', 'LC');
		elsif	((ie_tipo_item_w	= 'M') and (pls_obter_se_mat_prestador(nr_seq_prestador_p,null, cd_proc_mat_w, clock_timestamp(),null,null, cd_estabelecimento_p, null)	= 'N') or 
			((coalesce(cd_especialidade_w,0)	<> 0) and (pls_obter_se_espec_prestador(nr_seq_prestador_p, cd_especialidade_w)	= 'N'))) then 
			select	coalesce(max(nr_sequencia),0) + 1 
			into STRICT	nr_sequencia_w 
			from	w_pls_itens_benef_exec 
			where	nr_seq_segurado	= nr_seq_segurado_p;
 
			insert into w_pls_itens_benef_exec(	nr_sequencia, dt_atualizacao, nm_usuario, 
								dt_atualizacao_nrec, nm_usuario_nrec, qt_item_aprovado, 
								qt_item_solicitado, qt_item_executado,qt_item_pendente, 
								dt_requisicao, dt_validade_senha, nr_seq_requisicao, 
								nr_seq_proc_mat, cd_proc_mat, ds_proc_mat, 
								ds_tipo_guia, nm_medico, cd_medico_solicitante, 
								ie_tipo_item, nr_seq_prestador, nr_seq_segurado, 
								ie_tipo_guia, ie_permite_execucao, ie_tipo_consulta) 
							values (	nr_sequencia_w, clock_timestamp(), nm_usuario_p, 
								clock_timestamp(), nm_usuario_p, coalesce(qt_item_aprovado_w,0), 
								coalesce(qt_item_solicitado_w,0), coalesce(qt_item_executado_w,0), coalesce(qt_item_pendente_w,0), 
								to_char(dt_requisicao_w,'dd/mm/yyyy'), null, nr_seq_requisicao_w, 
								nr_seq_proc_mat_w, cd_proc_mat_w, substr(pls_obter_desc_material(cd_proc_mat_w),1,255), 
								substr(obter_valor_dominio(1746,ie_tipo_guia_w),1,255), substr(obter_nome_medico(cd_medico_solicitante_w,'N'),1,255), cd_medico_solicitante_w, 
								ie_tipo_item_w, nr_seq_prestador_p, nr_seq_segurado_p, 
								null, 'N', 'LC');
		end if;
		end;
	end loop;
	close C02;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_itens_execucao ( nr_seq_prestador_p bigint, nr_seq_segurado_p bigint, nr_seq_requisicao_p bigint, ie_origem_execucao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

