-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_token_atendimento ( cd_usuario_plano_p text, nm_usuario_p text, ds_token_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Gerar o token de atendimento do beneficiário.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ x ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  x]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_segurado_w	pls_segurado.nr_sequencia%type;
ds_token_w		pls_requisicao.ds_token%type;
qt_tempo_token_w	pls_param_atend_geral.qt_tempo_token%type;
dt_validade_token_w	pls_token_atendimento.dt_validade_token%type;
nr_seq_token_w		pls_token_atendimento.nr_sequencia%type;


BEGIN

select	max(b.nr_sequencia)
into STRICT	nr_seq_segurado_w
from	pls_segurado		b,
	pls_segurado_carteira	a
where	a.nr_seq_segurado	= b.nr_sequencia
and	a.cd_usuario_plano	= cd_usuario_plano_p;

if (coalesce(nr_seq_segurado_w::text, '') = '') then
	select	max(nr_seq_segurado)
	into STRICT	nr_seq_segurado_w
	from	pls_segurado_cart_ant
	where	cd_usuario_ant = cd_usuario_plano_p;
end if;

qt_tempo_token_w	:= pls_obter_param_atend_geral('TT');

if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_token_w
	from	pls_token_atendimento
	where	nr_seq_segurado	= nr_seq_segurado_w
	and	dt_validade_token >= clock_timestamp();

	-- Inativa o token em aberto para depois gerar um novo.
	if (nr_seq_token_w IS NOT NULL AND nr_seq_token_w::text <> '') then
		update	pls_token_atendimento
		set	dt_validade_token	= clock_timestamp()
		where	nr_sequencia		= nr_seq_token_w;
	end if;

	while(coalesce(length(ds_token_w),0) < 6) loop
		begin
			ds_token_w	:= ds_token_w || round(dbms_random.value(0,9));
		end;
	end loop;

	dt_validade_token_w	:= (clock_timestamp() + qt_tempo_token_w/1440);

	insert into pls_token_atendimento(	nr_sequencia, nr_seq_segurado, nm_usuario_nrec,
						nm_usuario, dt_atualizacao_nrec, dt_atualizacao,
						dt_geracao_token, dt_validade_token, ds_token)
				values (	nextval('pls_token_atendimento_seq'), nr_seq_segurado_w, nm_usuario_p,
						nm_usuario_p, clock_timestamp(), clock_timestamp(),
						clock_timestamp(), dt_validade_token_w, ds_token_w);

	ds_token_p	:= ds_token_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_token_atendimento ( cd_usuario_plano_p text, nm_usuario_p text, ds_token_p INOUT text) FROM PUBLIC;

