-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_vincular_titulo_lote_pag ( ds_lista_titulo_p text, ie_tipo_titulo_p text, nr_seq_evento_p bigint, nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_conta_contabil_w		varchar(20);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ie_final_w				varchar(1);
vl_saldo_titulo_w			double precision;
nr_titulo_w			bigint;
nr_seq_evento_movto_w		bigint;
nr_seq_prestador_w		bigint	:= null;
qt_titulo_w			bigint;
nr_seq_pagamento_w		bigint;
nr_seq_pag_prest_w		bigint;
dt_vencimento_w			timestamp;

C01 CURSOR FOR
	SELECT	nr_titulo
	from	titulo_pagar
	where	Obter_Se_Contido(nr_titulo,ds_lista_titulo_p) = 'S'
	and	ie_tipo_titulo_p	= 'P'
	
union 	all

	PERFORM	nr_titulo
	from	titulo_receber
	where	Obter_Se_Contido(nr_titulo,ds_lista_titulo_p) = 'S'
	and	ie_tipo_titulo_p	= 'R';


BEGIN
open C01;
loop
fetch C01 into
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (ie_tipo_titulo_p = 'P') then
		select	max(cd_pessoa_fisica),
			max(cd_cgc),
			max(vl_saldo_titulo),
			max(dt_vencimento_original)
		into STRICT	cd_pessoa_fisica_w,
			cd_cgc_w,
			vl_saldo_titulo_w,
			dt_vencimento_w
		from	titulo_pagar
		where	nr_titulo	= nr_titulo_w;

		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_cgc	= cd_cgc_w;
		else
			nr_seq_prestador_w	:= null;
		end if;

		select	count(1)
		into STRICT	qt_titulo_w
		from	pls_pagamento_item b,
			pls_pagamento_prestador a
		where	a.nr_sequencia		= b.nr_seq_pagamento
		and	b.nr_tit_pagar_origem   = nr_titulo_w
		and	a.nr_seq_prestador	= nr_seq_prestador_w  LIMIT 1;

		if (qt_titulo_w > 0) or (coalesce(nr_seq_prestador_w::text, '') = '') then
			goto final;
		end if;
	else
		select	max(cd_pessoa_fisica),
			max(cd_cgc),
			max(vl_saldo_titulo),
			max(dt_vencimento)
		into STRICT	cd_pessoa_fisica_w,
			cd_cgc_w,
			vl_saldo_titulo_w,
			dt_vencimento_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_w;

		if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
		elsif (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_prestador_w
			from	pls_prestador
			where	cd_cgc	= cd_cgc_w;
		else
			nr_seq_prestador_w	:= null;
		end if;

		select	count(1)
		into STRICT	qt_titulo_w
		from	pls_pagamento_item b,
			pls_pagamento_prestador a
		where	a.nr_sequencia		= b.nr_seq_pagamento
		and	b.nr_tit_receber_origem = nr_titulo_w
		and	a.nr_seq_prestador	= nr_seq_prestador_w  LIMIT 1;

		if (qt_titulo_w > 0) or (coalesce(nr_seq_prestador_w::text, '') = '') then
			goto final;
		end if;
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_pagamento_w
	from	pls_pagamento_prestador
	where	nr_seq_prestador 	= nr_seq_prestador_w
	and	nr_seq_lote		= nr_seq_lote_p;

	if (coalesce(nr_seq_pagamento_w::text, '') = '') then
		select	nextval('pls_pagamento_prestador_seq')
		into STRICT	nr_seq_pag_prest_w
		;

		insert into pls_pagamento_prestador(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_lote,
			nr_seq_prestador,
			vl_pagamento)
		values (nr_seq_pag_prest_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_lote_p,
			nr_seq_pag_prest_w,
			vl_saldo_titulo_w);
	else
		nr_seq_pag_prest_w := nr_seq_pagamento_w;
	end if;

	insert into pls_pagamento_item(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_evento,
		nr_seq_pagamento,
		vl_item,
		nr_tit_receber_origem,
		nr_tit_pagar_origem)
	values (nextval('pls_pagamento_item_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_evento_p,
		nr_seq_pag_prest_w,
		vl_saldo_titulo_w,
		CASE WHEN ie_tipo_titulo_p='R' THEN nr_titulo_w  ELSE null END ,
		CASE WHEN ie_tipo_titulo_p='P' THEN nr_titulo_w  ELSE null END );

	<<final>>
	ie_final_w	:= 'S';
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_vincular_titulo_lote_pag ( ds_lista_titulo_p text, ie_tipo_titulo_p text, nr_seq_evento_p bigint, nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

