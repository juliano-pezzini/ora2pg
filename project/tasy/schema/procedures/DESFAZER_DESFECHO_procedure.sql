-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_desfecho (nr_atendimento_p bigint, nm_usuario_p text, ie_inativar_p text default 'N', ds_justificativa_p text default '') AS $body$
DECLARE


				
nr_seq_gestao_w		bigint;
nr_seq_estagio_w	bigint;		
nr_sequencia_w		bigint;
ie_tipo_w		varchar(10);
nr_interno_conta_w	bigint;
cd_motivo_exc_conta_w	bigint;
cd_estabelecimento_w	bigint;

dt_inicio_atendimento_w		timestamp;
dt_atend_medico_w		timestamp;
dt_chamada_paciente_w		timestamp;
dt_chamada_reavaliacao_w	timestamp;
dt_reavaliacao_medica_w		timestamp;
dt_chamada_enfermagem_w		timestamp;
dt_fim_consulta_w		timestamp;
ie_status_pa_w			varchar(15);
nr_seq_atend_pac_cham_w		bigint;
ie_param_atend_w		varchar(1);
qt_pacote_w		bigint;
nr_seq_proc_pacote_w	bigint;
ie_param_227_w			varchar(1);
dt_alta_w		timestamp;
ds_erro_w		varchar(100);
ie_param_233_w	 varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	gestao_vaga
	where	nr_atendimento	= nr_atendimento_p;	

c02 CURSOR FOR
	SELECT	'P' ie_tipo,
		a.nr_sequencia,
		a.nr_interno_conta,
		a.nr_seq_proc_pacote
	from	procedimento_paciente a,
		conta_paciente b,
		regra_lanc_automatico c
	where	a.nr_interno_conta 	= b.nr_interno_conta
	and	b.nr_Atendimento	= nr_atendimento_p
	and	c.nr_sequencia		= a.nr_seq_regra_lanc
	and	b.ie_status_acerto	= 1
	and	c.NR_SEQ_EVENTO		= 251
	and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
	
union all

	SELECT	'M' ie_tipo,
		a.nr_sequencia,
		a.nr_interno_conta,
		a.nr_seq_proc_pacote
	from	material_Atend_paciente a,
		conta_paciente b,
		regra_lanc_automatico c
	where	a.nr_interno_conta 	= b.nr_interno_conta
	and	b.nr_Atendimento	= nr_atendimento_p
	and	c.nr_sequencia		= a.nr_seq_regra_lanc
	and	b.ie_status_acerto	= 1
	and	c.NR_SEQ_EVENTO		= 251
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '';
	
	


BEGIN

select	cd_estabelecimento
into STRICT	cd_estabelecimento_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

ie_param_233_w := obter_param_usuario(935, 233, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_param_233_w);
ie_param_atend_w := obter_param_usuario(935, 194, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_param_atend_w);
ie_param_227_w := obter_param_usuario(935, 227, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_param_227_w);

if (ie_param_233_w = 'S' and coalesce(ie_inativar_p,'N') = 'X') or (coalesce(ie_inativar_p,'N') <> 'X') then

begin
if (ie_param_atend_w = 'S') then
	update	atendimento_paciente
	set	dt_lib_medico  = NULL
	where	nr_Atendimento = nr_atendimento_p;
end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_atend_pac_cham_w
	from	atendimento_pac_chamado
	where	nr_atendimento = nr_atendimento_p;

	if (nr_seq_atend_pac_cham_w IS NOT NULL AND nr_seq_atend_pac_cham_w::text <> '') then
		
		select	dt_inicio_atendimento,
			dt_atend_medico,
			dt_chamada_paciente,
			dt_chamada_reavaliacao,
			dt_reavaliacao_medica,
			dt_chamada_enfermagem,
			dt_fim_consulta,
			ie_status_pa
		into STRICT	dt_inicio_atendimento_w,
			dt_atend_medico_w,
			dt_chamada_paciente_w,
			dt_chamada_reavaliacao_w,
			dt_reavaliacao_medica_w,
			dt_chamada_enfermagem_w,
			dt_fim_consulta_w,
			ie_status_pa_w
		from	atendimento_pac_chamado
		where	nr_sequencia = nr_seq_atend_pac_cham_w;

		update	atendimento_paciente set
			dt_inicio_atendimento	= coalesce(dt_inicio_atendimento_w,	dt_inicio_atendimento),
			dt_atend_medico		= coalesce(dt_atend_medico_w, dt_atend_medico),
			dt_chamada_paciente	= coalesce(dt_chamada_paciente_w, dt_chamada_paciente),
			dt_chamada_reavaliacao	= coalesce(dt_chamada_reavaliacao_w, dt_chamada_reavaliacao),
			dt_reavaliacao_medica	= coalesce(dt_reavaliacao_medica_w, dt_reavaliacao_medica),
			dt_chamada_enfermagem	= coalesce(dt_chamada_enfermagem_w, dt_chamada_enfermagem),
			dt_fim_consulta		= coalesce(dt_fim_consulta_w, dt_fim_consulta),
			ie_status_pa		= coalesce(ie_status_pa_w, ie_status_pa)
		where	nr_atendimento = nr_atendimento_p;
		
		delete	from atendimento_pac_chamado
		where	nr_sequencia = nr_seq_atend_pac_cham_w;
		
	end if;
exception
when others then
null;	
end;

if (coalesce(ie_inativar_p,'N') = 'S') then
	update	atendimento_alta
	set		ds_justificativa = ds_justificativa_p,
			dt_inativacao = clock_timestamp(),
			nm_usuario_inativacao = nm_usuario_p,
			ie_situacao = 'I'
	where	nr_atendimento	= nr_atendimento_p
	and		ie_tipo_orientacao = 'P'
	and     (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and     coalesce(dt_inativacao::text, '') = '';
elsif (coalesce(ie_inativar_p,'N') <> 'X'  or ie_param_233_w = 'S') then
	delete	FROM atendimento_alta
	where	nr_atendimento	= nr_atendimento_p
	and		ie_tipo_orientacao = 'P'; -- Deletar apenas registro de desfecho e nao de Orientacoes de alta
end if;
	
select	max(nr_sequencia)
into STRICT	nr_seq_estagio_w
from	estagio_autorizacao
where	ie_interno = '70'
and		OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;

select	max(cd_motivo_exc_conta)
into STRICT	cd_motivo_exc_conta_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_param_227_w = 'S') then
	open C01;
	loop
	fetch C01 into	
		nr_seq_gestao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
	
		update	gestao_vaga
		set	ie_status = 'C',
			dt_atualizacao = clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_gestao_w;
	
		if (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') then
			update	autorizacao_convenio
			set	nr_seq_estagio	= nr_seq_estagio_w,
				dt_atualizacao = clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_seq_gestao	= nr_seq_gestao_w;
		end if;
	
		end;
	end loop;
	close C01;
end if;

open C02;
loop
fetch C02 into	
	ie_tipo_w,
	nr_sequencia_w,
	nr_interno_conta_w,
	nr_seq_proc_pacote_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	if (ie_tipo_w = 'P') then
		select	count(*)
		into STRICT	qt_pacote_w
		from	atendimento_pacote
		where	nr_seq_proc_origem = nr_sequencia_w
		and	nr_atendimento = nr_atendimento_p;
		
		if (qt_pacote_w > 0) then
			if (coalesce(nr_seq_proc_pacote_w,0) = 0) then
				select	max(nr_seq_procedimento)
				into STRICT	nr_seq_proc_pacote_w
				from	atendimento_pacote
				where	nr_seq_proc_origem = nr_sequencia_w
				and	nr_atendimento = nr_atendimento_p;
			end if;
		
			CALL desfazer_pacote(nr_seq_proc_pacote_w, 'S', nm_usuario_p);
			
		elsif (coalesce(nr_seq_proc_pacote_w,0) > 0) then
			select	count(*)
			into STRICT	qt_pacote_w
			from	atendimento_pacote
			where	nr_seq_procedimento = nr_seq_proc_pacote_w
			and	nr_atendimento = nr_atendimento_p;
			
			if (qt_pacote_w > 0) then
				CALL desfazer_pacote(nr_seq_proc_pacote_w, 'S', nm_usuario_p);
			end if;
			
		end if;
	
	elsif (coalesce(nr_seq_proc_pacote_w,0) > 0) then
		select	count(*)
		into STRICT	qt_pacote_w
		from	atendimento_pacote
		where	nr_seq_procedimento = nr_seq_proc_pacote_w
		and	nr_atendimento = nr_atendimento_p;
		
		if (qt_pacote_w > 0) then
			CALL desfazer_pacote(nr_seq_proc_pacote_w, 'S', nm_usuario_p);
		end if;
	end if;
	
	CALL excluir_matproc_conta(nr_sequencia_w,nr_interno_conta_w,cd_motivo_exc_conta_w,obter_desc_expressao(320459),ie_tipo_w,nm_usuario_p);
	end;
end loop;
close C02;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	select	max(dt_alta)
	into STRICT	dt_alta_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
		begin
		ds_erro_w := gerar_estornar_alta(nr_atendimento_p, 'E', 0, 0, null, nm_usuario_p, ds_erro_w, 0, 0, null);
		exception
			when others then
			ds_erro_w := '';
		end;
	end if;
end if;

CALL Cancelar_Atend_Alta_PA(	nr_atendimento_p,
			null,
			Obter_Dados_Usuario_Opcao(nm_usuario_p,'C'),
			null,
			nm_usuario_p);

commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_desfecho (nr_atendimento_p bigint, nm_usuario_p text, ie_inativar_p text default 'N', ds_justificativa_p text default '') FROM PUBLIC;

