-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ppm_metrica_kloc ( nr_seq_metrica_p bigint, nr_seq_objetivo_metrica_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, dt_referencia_p timestamp) AS $body$
DECLARE

			
dt_ref_inicio_w 	timestamp;
dt_ref_fim_w 		timestamp;
dt_referencia_w		timestamp;
dt_fim_ano_w		timestamp;
qt_lines_w		bigint;
qt_erro_w		bigint;
vl_resultado_w		double precision;
vl_montante_w		bigint;
vl_individual_w		bigint;
nm_usuario_exec_w	usuario.nm_usuario%type;
nr_seq_diretoria_w	ppm_objetivo.nr_seq_diretoria%type;
nr_seq_gerencia_w	ppm_objetivo.nr_seq_gerencia%type;
nr_seq_grupo_w		ppm_objetivo.nr_seq_grupo%type;
nr_seq_acumulado_w	bigint;
ds_comando_w		varchar(255);
ds_param_sql_w		varchar(255);


BEGIN

ds_comando_w	:= 'select obter_indicador_HTML5(:dt_referencia_p, ''PER_DEFECT_IDENTIFIED_BY_CUSTOMER'', ''A'') from dual';
ds_param_sql_w 	:= 'dt_referencia_p=' || dt_referencia_p || ';';
vl_resultado_w := Obter_Valor_Dinamico_bv(ds_comando_w, ds_param_sql_w, vl_resultado_w);


CALL PPM_GRAVAR_RESULTADO(nr_seq_objetivo_metrica_p, dt_referencia_p, vl_resultado_w, null, null, nm_usuario_p);

/*select	max(nr_seq_gerencia),
	max(nr_seq_grupo),
	max(nr_seq_diretoria)
into	nr_seq_gerencia_w,
	nr_seq_grupo_w,
	nr_seq_diretoria_w
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c
where	a.nr_sequencia		= nr_seq_objetivo_metrica_p
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia;

dt_ref_inicio_w := pkg_date_utils.start_of(dt_referencia_p,'MONTH');
dt_ref_fim_w 	:= pkg_date_utils.end_of(last_day(dt_referencia_p),'DAY');
dt_referencia_w	:= trunc(dt_referencia_p);
dt_fim_ano_w	:= trunc(PKG_DATE_UTILS.end_of(to_date('31/12/' || to_char(dt_referencia_p,'yyyy'),'dd/mm/yyyy'),'DAY'));

if	(nr_seq_grupo_w is not null) then

	select	count(distinct nr_sequencia)
	into	qt_erro_w
	from	os_erro_gerencia_v a
	where	dt_liberacao between dt_ref_inicio_w and dt_ref_fim_w	
	and 	ie_plataforma = 'H'
	and		a.nr_seq_subtipo in (256,257) --Commit Fail and Fail in the Coding Development
	and	exists
		(select 1
		from	MAN_ORDEM_SERV_TECNICO os
		where	os.nr_seq_ordem_serv = a.nr_sequencia
		and	os.dt_liberacao is not null
		and	os.NR_SEQ_TIPO = '163') --Aprovacao de code review
	and	nr_seq_grupo_des_erro = nr_seq_grupo_w;
	
	--Quantidade de OS's de defeito por pessoa

	select  sum(nvl(k.qt_modified,0)+nvl(k.qt_added,0)+nvl(k.qt_deleted,0)+nvl(k.qt_collected,0))
	into	qt_lines_w
	from    kpi_lines_kaloc k,
		usuario_grupo_des g,
		usuario u
	where   u.ds_email 	= k.ds_email_user_git
	and     u.nm_usuario 	= g.nm_usuario_grupo
	and	g.nr_seq_grupo	= nr_seq_grupo_w
	and     trunc(k.dt_atualizacao, 'month') = trunc(dt_referencia_w, 'month');	

elsif	(nr_seq_gerencia_w is not null) then

	select	count(distinct a.nr_sequencia)
	into	qt_erro_w
	from	os_erro_gerencia_v a,
		grupo_desenvolvimento b
	where	a.dt_liberacao between 	dt_ref_inicio_w and dt_ref_fim_w
	and 	a.ie_plataforma = 'H'
	and		a.nr_seq_subtipo in (256,257) --Commit Fail and Fail in the Coding Development
	and	a.nr_Seq_grupo_Des_erro = b.nr_sequencia
	and	exists
		(select 1
		from	MAN_ORDEM_SERV_TECNICO os
		where	os.nr_seq_ordem_serv = a.nr_sequencia
		and	os.dt_liberacao is not null
		and	os.NR_SEQ_TIPO = '163') --Aprovacao de code review
	and	b.nr_seq_gerencia 	= nr_seq_gerencia_w;	
		
	select  sum(nvl(k.qt_modified,0)+nvl(k.qt_added,0)+nvl(k.qt_deleted,0)+nvl(k.qt_collected,0))
	into	qt_lines_w
	from    kpi_lines_kaloc k,
		grupo_desenvolvimento gd,
		usuario_grupo_des g,
		usuario u
	where   u.ds_email 		= k.ds_email_user_git
	and     u.nm_usuario 		= g.nm_usuario_grupo	
	and	g.nr_seq_grupo		= gd.nr_sequencia
	and	gd.nr_seq_gerencia	= nr_seq_gerencia_w
	and     trunc(k.dt_atualizacao, 'month') = trunc(dt_referencia_w, 'month');
	
elsif	(nr_seq_diretoria_w is not null) then

	select	count(distinct a.nr_sequencia)
	into	qt_erro_w
	from	os_erro_gerencia_v a,
		grupo_desenvolvimento b,
		gerencia_wheb c
	where	a.dt_liberacao between 	dt_ref_inicio_w and dt_ref_fim_w
	and	a.nr_Seq_grupo_Des_erro = b.nr_sequencia
	and	exists
		(select 1
		from	MAN_ORDEM_SERV_TECNICO os
		where	os.nr_seq_ordem_serv = a.nr_sequencia
		and	os.dt_liberacao is not null
		and	os.NR_SEQ_TIPO = '163') --Aprovacao de code review
	and	b.nr_seq_gerencia 	= c.nr_Sequencia
	and 	a.ie_plataforma = 'H'
	and		a.nr_seq_subtipo in (256,257) --Commit Fail and Fail in the Coding Development
	and	c.nr_seq_diretoria	= nr_seq_diretoria_w;
	
	select  sum(nvl(k.qt_modified,0)+nvl(k.qt_added,0)+nvl(k.qt_deleted,0)+nvl(k.qt_collected,0))
	into	qt_lines_w
	from    kpi_lines_kaloc k,
		gerencia_wheb gw,
		grupo_desenvolvimento gd,
		usuario_grupo_des g,
		usuario u
	where   u.ds_email 		= k.ds_email_user_git
	and     u.nm_usuario 		= g.nm_usuario_grupo	
	and	g.nr_seq_grupo		= gd.nr_sequencia	
	and	gd.nr_seq_gerencia	= gw.nr_sequencia
	and	gw.nr_seq_diretoria	= nr_seq_diretoria_w
	and     trunc(k.dt_atualizacao, 'month') = trunc(dt_referencia_w, 'month');
		
else

	select	max(nm_usuario)
	into	nm_usuario_exec_w
	from	usuario x
	where	x.cd_pessoa_fisica = cd_pessoa_fisica_p
	and	x.ie_situacao	= 'A';
	
	--Quantidade de OS's de defeito por pessoa

	select  sum(nvl(k.qt_modified,0)+nvl(k.qt_added,0)+nvl(k.qt_deleted,0)+nvl(k.qt_collected,0))
	into	qt_lines_w
	from    kpi_lines_kaloc k,
		usuario u
	where   u.ds_email 	= k.ds_email_user_git
	and     u.nm_usuario 	= nm_usuario_exec_w
	and     trunc(k.dt_atualizacao, 'month') = trunc(dt_referencia_w, 'month');

	--Quantidade de OS's de defeito por pessoa

	select 	count(*) 
	into	qt_erro_w
	from	os_erro_gerencia_v a
	where	a.dt_liberacao 		between dt_ref_inicio_w and dt_ref_fim_w
	and		a.ie_plataforma		= 'H'	
	and		a.nr_seq_subtipo in (256,257) --Commit Fail and Fail in the Coding Development
	and	exists
		(select 1
		from	MAN_ORDEM_SERV_TECNICO os
		where	os.nr_seq_ordem_serv = a.nr_sequencia
		and	os.dt_liberacao is not null
		and	os.NR_SEQ_TIPO = '163') --Aprovacao de code review
	and	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	a.dt_liberacao 		is not null;
	
end if;

if	(qt_lines_w > 0) and
	(qt_erro_w > 0) then
	vl_resultado_w := dividir( qt_erro_w * 1000, qt_lines_w );
	PPM_GRAVAR_RESULTADO(nr_seq_objetivo_metrica_p, dt_referencia_p, vl_resultado_w, qt_lines_w, qt_erro_w * 1000, nm_usuario_p);	
else
	vl_resultado_w := 0;
	PPM_GRAVAR_RESULTADO(nr_seq_objetivo_metrica_p, dt_referencia_p, vl_resultado_w, 0, 0, nm_usuario_p);
end if;

select	max(nr_sequencia)
into	nr_seq_acumulado_w
from	ppm_objetivo_result a
where	a.nr_seq_metrica	= nr_seq_objetivo_metrica_p
and	trunc(dt_referencia)	= dt_fim_ano_w;

if	(nr_seq_acumulado_w is not null) then

	select	sum(vl_montante),
		sum(vl_individual)	
	into	vl_montante_w,
		vl_individual_w
	from	ppm_objetivo_result a
	where	a.nr_seq_metrica = nr_seq_objetivo_metrica_p
	and	trunc(a.dt_referencia,'year') = trunc(dt_referencia_w,'year')
	and	a.nr_sequencia	<> nvl(nr_seq_acumulado_w,0);
	
	update	ppm_objetivo_result
	set	vl_resultado_calc	= dividir(vl_individual_w,vl_montante_w)
	where	nr_sequencia		= nr_seq_acumulado_w;
	
end if;
*/
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ppm_metrica_kloc ( nr_seq_metrica_p bigint, nr_seq_objetivo_metrica_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, dt_referencia_p timestamp) FROM PUBLIC;

