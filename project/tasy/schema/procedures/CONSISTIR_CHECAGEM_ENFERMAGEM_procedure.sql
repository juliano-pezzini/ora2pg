-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_checagem_enfermagem ( nr_prescricao_p bigint, nr_seq_ordem_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_cracha_p text default null, ds_msg_p INOUT text DEFAULT NULL) AS $body$
DECLARE

			
nr_sequencia_w  		bigint;
nr_seq_horario_w  		bigint;
ie_cancelada_w  		varchar(1):='N';
ie_se_necessario_w	varchar(1):='N';
ds_msg_w		varchar(255):= '';
dt_inicio_adm_w		timestamp;
nr_seq_atendimento_w	bigint;
cd_profissional_w		varchar(10);	
nr_seq_material_w		bigint;
ds_material_w		varchar(80);
ds_material_esp_w		varchar(80);
cd_material_w		integer;	
qtd_w			integer;
nr_prescricao_w		bigint;
ds_msg_log_w		varchar(255):= null;
ie_consiste_sinal_vital 	varchar(1);
nr_atendimento_w		bigint;
ie_finalizar_adm_w		varchar(1);
dt_fim_adm_w		timestamp;
ie_acm_w		varchar(1) := 'N';
ie_urgencia_w		varchar(1);
qt_ordem_w  		bigint;
nr_sequencia_prescr_w 	bigint;
nr_seq_ordem_w 		bigint;
ie_param346_w 		varchar(1);
ie_liberar_reg_w		varchar(1);
ie_permite_inicio_fim_w		varchar(1);
ie_validado_inicio_fim_w		varchar(1);
ie_medicamento_inicializar_w varchar(1);
ie_medicamento_acm_sn_w varchar(1);								

C01 CURSOR FOR
	SELECT 	a.nr_sequencia,
		nr_seq_mat_hor
	from    can_ordem_prod a,
		prescr_medica b,
		prescr_material c,
		prescr_mat_hor d,
		can_ordem_item_prescr e
	where 	b.nr_prescricao = nr_prescricao_p
	and   	a.nr_sequencia = e.nr_seq_ordem
	and   	b.nr_prescricao = c.nr_prescricao
	and   	c.nr_prescricao = d.nr_prescricao
	and   	c.nr_sequencia = d.nr_seq_material
	and     coalesce(c.nr_sequencia_diluicao::text, '') = ''
	and     d.nr_sequencia    = e.nr_seq_mat_hor
	and   	coalesce(a.dt_checagem::text, '') = ''
	and   	ie_param346_w = 'S'
  	and     a.ie_cancelada 	= 'N'
 	and     coalesce(d.dt_suspensao::text, '') = ''
	order by  dt_horario desc, a.nr_sequencia desc;

C03 CURSOR FOR	
	SELECT 	a.nr_sequencia,
		d.nr_sequencia
	from    can_ordem_prod a,
		prescr_medica b,
		prescr_material c,
		prescr_mat_hor d,
		can_ordem_item_prescr e
	where 	b.nr_prescricao = nr_prescricao_p
	and   	a.nr_sequencia = e.nr_seq_ordem
	and   	b.nr_prescricao = c.nr_prescricao
	and   	c.nr_prescricao = d.nr_prescricao
	and   	c.nr_sequencia = d.nr_seq_material
	and     	coalesce(c.nr_sequencia_diluicao::text, '') = ''
	and     	d.nr_sequencia    = e.nr_seq_mat_hor
	and a.ie_cancelada = 'N'						
	and ie_param346_w = 'N'
    and ((coalesce(c.dt_inicio_medic::text, '') = '' AND 'S'= ie_permite_inicio_fim_w)
    or (coalesce(a.dt_checagem::text, '') = '' AND 'N'= ie_permite_inicio_fim_w))
	order by  a.nr_sequencia desc;

C02 CURSOR FOR
  	SELECT 	d.nr_seq_atendimento,
		coalesce(c.nr_seq_material, f.nr_seq_material),
		f.nr_sequencia,
		f.cd_material
	 from 	can_ordem_prod  a, 
            		can_ordem_item_prescr b,
           		 prescr_material c,
            		paciente_atendimento    d,
            		prescr_mat_hor          f
	where      a.nr_prescricao         = d.nr_prescricao 
	and          a.nr_sequencia          = b.nr_seq_ordem
	and          b.nr_seq_mat_hor        = f.nr_sequencia
	and        	b.nr_seq_prescricao    = c.nr_sequencia
	and          c.nr_prescricao         = f.nr_prescricao
	and          c.nr_sequencia          = f.nr_seq_material
	and         coalesce(c.nr_sequencia_diluicao::text, '') = ''
	and         coalesce(f.dt_suspensao::text, '') = ''
	and     	a.nr_sequencia 	= nr_seq_ordem_p
	and     	a.nr_prescricao = nr_prescricao_p;


BEGIN
	begin
		ie_liberar_reg_w := obter_param_usuario(3130, 496, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liberar_reg_w);
		ie_permite_inicio_fim_w := obter_param_usuario(88, 354, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_inicio_fim_w);
		ie_consiste_sinal_vital := obter_param_usuario(88, 69, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_sinal_vital);
		ie_param346_w := obter_param_usuario(88, 346, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_param346_w);
		ie_finalizar_adm_w := obter_param_usuario(88, 100, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_finalizar_adm_w);

		if (ie_finalizar_adm_w = 'S') then
			dt_fim_adm_w := clock_timestamp();
		end if;
		if (ie_consiste_sinal_vital = 'S') then
			select	max(nr_atendimento)
			into STRICT 	nr_atendimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_p;
			select coalesce(max('S'),'N')
			into STRICT   ie_consiste_sinal_vital
			from   atendimento_sinal_vital
			where  nr_atendimento = nr_atendimento_w;

			if (ie_consiste_sinal_vital = 'N') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(262611);
			end if;
		end  if; 	
		ds_material_w	:= substr(Obter_material_ordem_prod(nr_seq_ordem_p,'C'),1,60) ||' - '||substr(Obter_material_ordem_prod(nr_seq_ordem_p,'M'),1,60);
			begin
				select  ie_cancelada
				into STRICT	ie_cancelada_w
				from    can_ordem_prod
				where   nr_prescricao = nr_prescricao_p
				and     nr_sequencia  = nr_seq_ordem_p;
				exception
				when no_data_found then
				begin
					select  count(*)
					into STRICT	qtd_w
					from    can_ordem_prod
					where   nr_sequencia  = nr_seq_ordem_p;	
					if (qtd_w > 0) then
						select  nr_prescricao
						into STRICT	nr_prescricao_w
						from    can_ordem_prod
						where   nr_sequencia  = nr_seq_ordem_p;	
						ds_msg_w	:= Wheb_mensagem_pck.get_texto(306456); -- 'O medicamento nao esta associado a esta prescricao.';
						-- 'O medicamento '|| ds_material_w ||' nao esta associado a prescricao '||nr_prescricao_p||'. Pertence a prescricao '||nr_prescricao_w||'.';
						ds_msg_log_w 	:= Wheb_mensagem_pck.get_texto(306457, 'DS_MATERIAL_W='||ds_material_w||';NR_PRESCRICAO_P='||nr_prescricao_p||';NR_PRESCRICAO_W='||nr_prescricao_w);
					else
						ds_msg_w	:= Wheb_mensagem_pck.get_texto(306456); -- 'O medicamento nao esta associado a esta prescricao.';
					end if;
				end;
			end;
		if (ds_msg_w IS NOT NULL AND ds_msg_w::text <> '') then
			ds_msg_w := ds_msg_w;
		elsif ( ie_cancelada_w = 'S') then
			ds_msg_w	:= Wheb_mensagem_pck.get_texto(306459, 'DS_MATERIAL_W='||ds_material_w); -- 'O medicamento ' ||ds_material_w||' esta cancelado para este paciente.';
		else
			if (ie_param346_w = 'S') then
				open C01;
				loop
				fetch C01 into	
					nr_sequencia_w,
					nr_seq_horario_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					nr_sequencia_w := nr_sequencia_w;
				end loop;
				close C01;
			else
				open C03;
				loop
				fetch C03 into	
					nr_sequencia_w,
					nr_seq_horario_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */

				end loop;
				close C03;
			end if;

		  select count(a.nr_sequencia) qtdOrdem
		  into STRICT  qt_ordem_w
		  from  can_ordem_prod  a
		  where a.nr_prescricao = nr_prescricao_p
		  and   coalesce(a.dt_checagem::text, '') = '' 
		  and   (a.dt_fim_preparo IS NOT NULL AND a.dt_fim_preparo::text <> '') 
		  and   a.NR_SEQUENCIA < nr_seq_ordem_p;
		  select 
          max(valida_inicio_fim_adm(d.nr_seq_atendimento, coalesce(c.nr_seq_material, f.nr_seq_material)))
          into STRICT ie_validado_inicio_fim_w
          from 	can_ordem_prod  a,
          can_ordem_item_prescr b,
          prescr_material c,
          paciente_atendimento d,
          prescr_mat_hor f
          where a.nr_prescricao = d.nr_prescricao
          and a.nr_sequencia = b.nr_seq_ordem
          and b.nr_seq_mat_hor = f.nr_sequencia
          and b.nr_seq_prescricao = c.nr_sequencia
          and c.nr_prescricao = f.nr_prescricao
          and c.nr_sequencia = f.nr_seq_material
          and coalesce(c.nr_sequencia_diluicao::text, '') = ''
          and coalesce(f.dt_suspensao::text, '') = ''
          and a.nr_sequencia = nr_seq_ordem_p
          and a.nr_prescricao = nr_prescricao_p;		
			if (ie_permite_inicio_fim_w <> 'S' or ie_finalizar_adm_w = 'S' ) then
        if ( nr_sequencia_w = nr_seq_ordem_p) then 
          update  can_ordem_prod 
          set     dt_checagem 	= clock_timestamp(),
              nm_usuario 	= nm_usuario_p,
              dt_atualizacao 	= clock_timestamp()
          where   nr_prescricao 	= nr_prescricao_p
          and     nr_sequencia  	= nr_sequencia_w;
          commit;
        else
          begin
            --ds_material_esp_w := substr(Obter_material_ordem_prod(nr_sequencia_w,'C'),1,60) ||' - '||substr(Obter_material_ordem_prod(nr_sequencia_w,'M'),1,60);
            select  	max(c.ie_se_necessario),
                  max(c.ie_acm),
                  max(c.ie_urgencia)
            into STRICT  ie_se_necessario_w,
                  ie_acm_w,
                  ie_urgencia_w
            from    	can_ordem_prod a,
                  prescr_medica b,
                  prescr_material c
            where   	a.nr_prescricao = b.nr_prescricao
            and       	a.nr_prescricao = c.nr_prescricao
            and     	a.nr_prescricao = nr_prescricao_p
            and     	a.nr_sequencia 	= nr_seq_ordem_p
            and     	a.ie_cancelada 	= 'N'
            and     	(a.dt_fim_preparo IS NOT NULL AND a.dt_fim_preparo::text <> '')
            and     	coalesce(c.nr_sequencia_diluicao::text, '') = ''
            and    	  (a.dt_fim_preparo IS NOT NULL AND a.dt_fim_preparo::text <> '');

            if (ie_se_necessario_w = 'S' or
              ie_acm_w = 'S') then
              update  can_ordem_prod
              set     dt_checagem 	= clock_timestamp(),
                  nm_usuario 	= nm_usuario_p,
                  dt_atualizacao 	= clock_timestamp()
              where   nr_prescricao 	= nr_prescricao_p
              and     nr_sequencia  	= nr_seq_ordem_p;
              commit;
            else
                -- ds_msg_log_w	:= 'O medicamento '||ds_material_esp_w|| ' nao confere com a sequencia da ordem. Medicamento da sequencia: '||ds_material_w||'.';

                -- 'ERRO: Houve uma tentativa de checar o medicamento de sequencia '||nr_seq_ordem_p||' no lugar do medicamento de sequencia '||nr_sequencia_w||'.';
                ds_msg_log_w	:= Wheb_mensagem_pck.get_texto(306465, 'NR_SEQ_ORDEM_P='||nr_seq_ordem_p||';NR_SEQUENCIA_W='||nr_sequencia_w);
                ds_msg_w	:= Wheb_mensagem_pck.get_texto(306469); -- 'Este medicamento nao confere com a sequencia da ordem';        
              end if;

              exception
                when no_data_found then
                ds_msg_w	:=  Wheb_mensagem_pck.get_texto(306473, 'DS_MATERIAL_W='||ds_material_w); -- 'O medicamento '|| ds_material_w ||' esta cancelado ou nao foi liberado pela farmacia.';
            end;
          end if;
        else
          if ( nr_sequencia_w <> nr_seq_ordem_p) then
            begin
              --ds_material_esp_w := substr(Obter_material_ordem_prod(nr_sequencia_w,'C'),1,60) ||' - '||substr(Obter_material_ordem_prod(nr_sequencia_w,'M'),1,60);
              select  	max(c.ie_se_necessario),
                    	max(c.ie_acm),
                    	max(c.ie_urgencia)
              into STRICT	ie_se_necessario_w,
                    	ie_acm_w,
                    	ie_urgencia_w
              from    	can_ordem_prod a,
                    	prescr_medica b,
                    	prescr_material c
              where   	a.nr_prescricao = b.nr_prescricao
              and       a.nr_prescricao = c.nr_prescricao
              and     	a.nr_prescricao = nr_prescricao_p
              and     	a.nr_sequencia 	= nr_seq_ordem_p
              and     	a.ie_cancelada 	= 'N'
              and     	(a.dt_fim_preparo IS NOT NULL AND a.dt_fim_preparo::text <> '')
              and     	coalesce(c.nr_sequencia_diluicao::text, '') = ''
              and    	(a.dt_fim_preparo IS NOT NULL AND a.dt_fim_preparo::text <> '');

              if (ie_validado_inicio_fim_w = 'I') then 
											 
                 if (ie_se_necessario_w <> 'S' and ie_acm_w <> 'S') then                
                    -- ds_msg_log_w	:= 'O medicamento '||ds_material_esp_w|| ' nao confere com a sequencia da ordem. Medicamento da sequencia: '||ds_material_w||'.';

                    -- 'ERRO: Houve uma tentativa de checar o medicamento de sequencia '||nr_seq_ordem_p||' no lugar do medicamento de sequencia '||nr_sequencia_w||'.';
                    ds_msg_log_w	:= Wheb_mensagem_pck.get_texto(306465, 'NR_SEQ_ORDEM_P='||nr_seq_ordem_p||';NR_SEQUENCIA_W='||nr_sequencia_w);
                    ds_msg_w	:= Wheb_mensagem_pck.get_texto(306469); -- 'Este medicamento nao confere com a sequencia da ordem';
                end if;
              end if;

            exception
              when no_data_found then
                ds_msg_w	:=  Wheb_mensagem_pck.get_texto(306473, 'DS_MATERIAL_W='||ds_material_w); -- 'O medicamento '|| ds_material_w ||' esta cancelado ou nao foi liberado pela farmacia.';
          end;
        end if;			
      end if;
		end if;
		-- Se for inicio da checagem
		if (coalesce(ds_msg_w::text, '') = '') then
			begin
				select  max(dt_inicio_adm),
					max(nr_seq_atendimento)  
				into STRICT	dt_inicio_adm_w,
					nr_seq_atendimento_w
				from    paciente_atendimento  
				where   nr_prescricao = nr_prescricao_p;

				if (coalesce(dt_inicio_adm_w::text, '') = '') then
					update  paciente_atendimento 
					set     dt_inicio_adm 		= clock_timestamp(), 
						nm_usuario 		= nm_usuario_p,
						dt_atualizacao 		= clock_timestamp()
					where   nr_seq_atendimento 	= nr_seq_atendimento_w;
				end if;

				select 	cd_pessoa_fisica
				into STRICT	cd_profissional_w
				from	usuario
				where	nm_usuario = nm_usuario_p;
				open C02;
				loop
				fetch C02 into	
					nr_seq_atendimento_w,
					nr_seq_material_w,
					nr_seq_horario_w,
					cd_material_w;

				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
				
					if (ie_permite_inicio_fim_w = 'S' and ie_finalizar_adm_w <> 'S') then
						if (ie_validado_inicio_fim_w = 'I') then
							insert into	paciente_atend_medic_adm(
                                nr_sequencia, 
                                dt_administracao,
                                ie_status_adm, 
                                cd_profissional, 
                                nr_seq_material, 
                                nr_seq_atendimento, 
                                dt_atualizacao,
                                nm_usuario) 
                            values ( 
                                nextval('paciente_atend_medic_adm_seq'), 
                                clock_timestamp(),
                                1, 
                                cd_profissional_w, 
                                nr_seq_material_w, 
                                nr_seq_atendimento_w, 
                                clock_timestamp(), 	
                                nm_usuario_p);

                            update  prescr_material
                            set     dt_inicio_medic = clock_timestamp()
                            where   nr_seq_atendimento = nr_seq_atendimento_w
                            and     nr_seq_material = nr_seq_material_w;

						elsif (ie_validado_inicio_fim_w = 'F') then

							if ( nr_sequencia_w = nr_seq_ordem_p) then
								update  can_ordem_prod 
								set     dt_checagem 	= clock_timestamp(),
										nm_usuario 	= nm_usuario_p,
										dt_atualizacao 	= clock_timestamp()
								where   nr_prescricao 	= nr_prescricao_p
								and     nr_sequencia  	= nr_sequencia_w;
								commit;
							else
								begin
									--ds_material_esp_w := substr(Obter_material_ordem_prod(nr_sequencia_w,'C'),1,60) ||' - '||substr(Obter_material_ordem_prod(nr_sequencia_w,'M'),1,60);
									select  	max(c.ie_se_necessario),
												max(c.ie_acm),
												max(c.ie_urgencia)
									into STRICT		ie_se_necessario_w,
												ie_acm_w,
												ie_urgencia_w
									from    	can_ordem_prod a,
												prescr_medica b,
												prescr_material c
									where   	a.nr_prescricao = b.nr_prescricao
									and       	a.nr_prescricao = c.nr_prescricao
									and     	a.nr_prescricao = nr_prescricao_p
									and     	a.nr_sequencia 	= nr_seq_ordem_p
									and     	a.ie_cancelada 	= 'N'
									and     	(a.dt_fim_preparo IS NOT NULL AND a.dt_fim_preparo::text <> '')
									and     	coalesce(c.nr_sequencia_diluicao::text, '') = ''
									and    	  (a.dt_fim_preparo IS NOT NULL AND a.dt_fim_preparo::text <> '');

									if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then

										update  can_ordem_prod 
										set     dt_checagem 	= clock_timestamp(),
												nm_usuario 	= nm_usuario_p,
												dt_atualizacao 	= clock_timestamp()
										where   nr_prescricao 	= nr_prescricao_p
										and     nr_sequencia  	= nr_seq_ordem_p;
										commit;
									else
										-- ds_msg_log_w	:= 'O medicamento '||ds_material_esp_w|| ' nao confere com a sequencia da ordem. Medicamento da sequencia: '||ds_material_w||'.';

										-- 'ERRO: Houve uma tentativa de checar o medicamento de sequencia '||nr_seq_ordem_p||' no lugar do medicamento de sequencia '||nr_sequencia_w||'.';
										ds_msg_log_w	:= Wheb_mensagem_pck.get_texto(306465, 'NR_SEQ_ORDEM_P='||nr_seq_ordem_p||';NR_SEQUENCIA_W='||nr_sequencia_w);
										ds_msg_w	:= Wheb_mensagem_pck.get_texto(306469); -- 'Este medicamento nao confere com a sequencia da ordem';        
									end if;

									exception
										when no_data_found then
										ds_msg_w	:=  Wheb_mensagem_pck.get_texto(306473, 'DS_MATERIAL_W='||ds_material_w); -- 'O medicamento '|| ds_material_w ||' esta cancelado ou nao foi liberado pela farmacia.';
								end;
							end if;

							update	paciente_atend_medic_adm
							set     dt_fim_administracao = clock_timestamp(),
									cd_profissional_termino = cd_profissional_w
							where   nr_seq_atendimento  = nr_seq_atendimento_w
							and     nr_seq_material     = nr_seq_material_w;
						end if;

					else

					insert into	paciente_atend_medic_adm(
						nr_sequencia, 
						dt_administracao, 
						dt_fim_administracao,
						ie_status_adm, 
						cd_profissional, 
						nr_seq_material, 
						nr_seq_atendimento, 
						dt_atualizacao,
						nm_usuario) 
					values ( 
						nextval('paciente_atend_medic_adm_seq'), 
						clock_timestamp(), 
						dt_fim_adm_w,
						1, 
						cd_profissional_w, 
						nr_seq_material_w, 
						nr_seq_atendimento_w, 
						clock_timestamp(), 	
						nm_usuario_p);
					end if;
					if (ie_permite_inicio_fim_w <> 'S' or ie_validado_inicio_fim_w = 'F') then
					
					if (ie_liberar_reg_w = 'S')then

						update	paciente_atend_medic
						set	ie_administracao	= 'A',
							dt_liberacao = clock_timestamp(),
							nm_usuario_lib = nm_usuario_p
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	nr_seq_material		= nr_seq_material_w;

						CALL gerar_pend_assinatura_pep(
							nr_seq_atendimento_p => nr_seq_atendimento_w,
							nr_seq_material_p 	 => nr_seq_material_w,
							nm_usuario_p 		 => nm_usuario_p
						);
					else
						update	paciente_atend_medic
						set	ie_administracao	= 'A'
						where	nr_seq_atendimento	= nr_seq_atendimento_w
						and	nr_seq_material		= nr_seq_material_w;
					end if;

					update  can_ordem_prod
					set     dt_administracao = clock_timestamp()
					where   nr_sequencia in (SELECT  nr_seq_ordem
											 from    can_ordem_item_prescr b
											 where   b.NR_SEQ_MAT_HOR = nr_seq_horario_w);

					CALL ADM_MEDIC_ADEP_QUI_PDA(nr_seq_atendimento_w,clock_timestamp(),nr_prescricao_p,nm_usuario_p,cd_estabelecimento_p,'A',nr_seq_horario_w,cd_cracha_p);			

					end if;	
					end;
				end loop;
				close C02;
				
        if (ie_permite_inicio_fim_w = 'S' or ie_finalizar_adm_w <> 'S' ) then
          if (ie_validado_inicio_fim_w = 'I') then
              ds_msg_w:= Wheb_mensagem_pck.get_texto(1145731); -- 'A administracao do medicamento foi iniciada com sucesso.';
          elsif (ie_validado_inicio_fim_w = 'F') then
              ds_msg_w:= Wheb_mensagem_pck.get_texto(1145732); -- 'A administracao do medicamento foi finalizada com sucesso.';
          end if;
        else
          ds_msg_w:= Wheb_mensagem_pck.get_texto(306478); -- 'OK: O Medicamento foi checado com sucesso.';
        end if;

				if (coalesce(nr_atendimento_w::text, '') = '')then
					select	max(nr_seq_atendimento)
					into STRICT	nr_seq_atendimento_w
					from    paciente_atendimento  
					where   nr_prescricao = nr_prescricao_p;		
				end if;					
			exception
				when no_data_found then
				ds_msg_w:= Wheb_mensagem_pck.get_texto(306486); -- 'ERRO: O medicamento nao foi checado.';
			end;
		end if;
		if (ds_msg_log_w IS NOT NULL AND ds_msg_log_w::text <> '')	then
			ds_msg_log_w := Wheb_mensagem_pck.get_texto(306488, 'NR_PRESCRICAO_P='||nr_prescricao_p||';DS_MSG_LOG_W='||ds_msg_log_w); -- 'Prescricao='||nr_prescricao_p||'.'||ds_msg_log_w;
			CALL gravar_log_tasy(7581, ds_msg_log_w, nm_usuario_p);	
		end if;
		ds_msg_p:= ds_msg_w;	

	exception
		WHEN OTHERS THEN
        ds_msg_w:= Wheb_mensagem_pck.get_texto(262611);
        ds_msg_p:= ds_msg_w;											
          CALL GRAVAR_LOG_TASY(7581, 
                            SQLSTATE||chr(13)||
                            SUBSTR(SQLERRM, 1, 200) ||chr(13)||
                            '   nr_prescricao_p: '			|| nr_prescricao_p 		||chr(13)||
                            '   nr_seq_ordem_p: ' 			|| nr_seq_ordem_p    	||chr(13)||
                            '   cd_estabelecimento_p: ' 	|| cd_estabelecimento_p ||chr(13)||
                            '	ds_msg_w: '|| ds_msg_w,
                            '	ConstChec');  							
	end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_checagem_enfermagem ( nr_prescricao_p bigint, nr_seq_ordem_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_cracha_p text default null, ds_msg_p INOUT text DEFAULT NULL) FROM PUBLIC;

