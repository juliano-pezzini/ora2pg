-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_lote_faturamento_pag ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_mesano_referencia_w		timestamp;
cd_unimed_destino_lote_w	varchar(4);
cd_unimed_destino_w		varchar(4);
nr_seq_congenere_destino_w	bigint;
cd_unimed_origem_w		varchar(4);
nr_seq_mensalidade_w		bigint;
nr_seq_pagador_w		bigint;
nr_seq_intercambio_w		bigint;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
cd_cgc_w			varchar(14);
nr_documento_w			bigint;
dt_emissao_doc_w		timestamp;
dt_vencimento_doc_w		timestamp;
vl_total_doc_w			double precision;
vl_tot_doc_liq_w		double precision;
vl_ajuste_doc_w			double precision;
nr_titulo_w			bigint;
dt_referencia_w			timestamp;
nr_seq_congenere_w		bigint;
nr_seq_fatura_w			bigint;
qt_registros_gerados_w		bigint;
qt_faturas_coop_w		bigint;
ie_tipo_geracao_a800_w		varchar(2);
nr_seq_grupo_intercambio_w	bigint;
vl_total_mensalidade_w		double precision;
nr_versao_transacao_w		smallint;
cd_interface_a800_e_w		ptu_regra_interface.cd_interface%type;
cd_versao_ptu_w			ptu_regra_interface.cd_versao_ptu%type;

C01 CURSOR FOR
	SELECT	c.nr_sequencia
	from	pls_segurado		e,
		titulo_receber		d,
		pls_mensalidade		c,
		pls_contrato_pagador	b,
		pls_intercambio		a
	where	c.nr_seq_pagador	= b.nr_sequencia
	and	e.nr_seq_intercambio	= a.nr_sequencia
	and	d.nr_seq_mensalidade	= c.nr_sequencia
	and	e.nr_seq_pagador	= b.nr_sequencia
	and	c.dt_referencia	between dt_inicio_vigencia_w and dt_fim_vigencia_w
	and	a.ie_tipo_contrato	= 'I'
	and	e.ie_tipo_repasse	= 'P'
	and	coalesce(c.ie_cancelamento::text, '') = ''
	and	((a.nr_seq_congenere	= nr_seq_congenere_w and (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> ''))
	or (coalesce(nr_seq_congenere_w::text, '') = ''))
	group by c.nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	ptu_fatura_pre
	where	nr_seq_lote	= nr_seq_lote_p;


BEGIN

select	max(ie_tipo_geracao_a800)
into STRICT	ie_tipo_geracao_a800_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_tipo_geracao_a800_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(190382);
end if;

select	dt_mesano_referencia,
	cd_unimed_destino
into STRICT	dt_mesano_referencia_w,
	cd_unimed_destino_lote_w
from	ptu_fatura_pre_lote
where	nr_sequencia	= nr_seq_lote_p;

select	max(cd_cgc_outorgante)
into STRICT	cd_cgc_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_p;

select	max(cd_cooperativa)
into STRICT	cd_unimed_origem_w
from	pls_congenere
where	cd_cgc	= cd_cgc_w;

if (cd_unimed_destino_lote_w IS NOT NULL AND cd_unimed_destino_lote_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_congenere_w
	from	pls_congenere
	where	(cd_cooperativa)::numeric 	= (cd_unimed_destino_lote_w)::numeric;
end if;

dt_inicio_vigencia_w	:= trunc(dt_mesano_referencia_w,'Month');
dt_fim_vigencia_w	:= fim_dia(last_day(dt_mesano_referencia_w));

open C01;
loop
fetch C01 into
	nr_seq_mensalidade_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	nr_seq_pagador,
		dt_referencia,
		vl_mensalidade
	into STRICT	nr_seq_pagador_w,
		dt_referencia_w,
		vl_total_mensalidade_w
	from	pls_mensalidade
	where	nr_sequencia	= nr_seq_mensalidade_w;

	select	max(nr_seq_pagador_intercambio)
	into STRICT	nr_seq_intercambio_w
	from	pls_contrato_pagador
	where	nr_sequencia	= nr_seq_pagador_w;

	select	max(nr_titulo)
	into STRICT	nr_titulo_w
	from	titulo_receber
	where	nr_seq_mensalidade	= nr_seq_mensalidade_w;

	if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
		select	dt_emissao,
			dt_vencimento,
			vl_titulo,
			(vl_saldo_multa + vl_saldo_juros)
		into STRICT	dt_emissao_doc_w,
			dt_vencimento_doc_w,
			vl_total_doc_w,
			vl_ajuste_doc_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_w;

		vl_tot_doc_liq_w	:= vl_total_doc_w + vl_ajuste_doc_w;

		select	nr_seq_congenere,
			nr_seq_grupo_intercambio
		into STRICT	nr_seq_congenere_destino_w,
			nr_seq_grupo_intercambio_w
		from	pls_intercambio
		where	nr_sequencia	= nr_seq_intercambio_w;

		select	max(cd_cooperativa)
		into STRICT	cd_unimed_destino_w
		from	pls_congenere
		where	nr_sequencia	= nr_seq_congenere_destino_w;

		cd_versao_ptu_w	:= pls_obter_versao_ptu(cd_estabelecimento_p, nr_seq_congenere_destino_w, dt_mesano_referencia_w, 'A800');

		if (cd_versao_ptu_w in ('8.0', '9.0', '9.1', '10.0')) then
			nr_versao_transacao_w	:= 07;
		else
			cd_interface_a800_e_w	:= substr(pls_obter_interf_ptu(cd_estabelecimento_p, nr_seq_congenere_destino_w, clock_timestamp(), 'A800'),1,255);

			if (cd_interface_a800_e_w = 2666) then
				nr_versao_transacao_w	:= 06;
			elsif (cd_interface_a800_e_w in (2473,2593)) then
				nr_versao_transacao_w	:= 05;
			else
				nr_versao_transacao_w	:= 04;
			end if;
		end if;

		if (ie_tipo_geracao_a800_w = 'CO') then
			select	count(1)
			into STRICT	qt_faturas_coop_w
			from	ptu_fatura_pre
			where	cd_unimed_destino	= cd_unimed_destino_w
			and	dt_competencia	between dt_inicio_vigencia_w and dt_fim_vigencia_w
			and	cd_estabelecimento	= cd_estabelecimento_p;

			nr_seq_intercambio_w		:= null;
			nr_seq_grupo_intercambio_w	:= null;
		elsif (ie_tipo_geracao_a800_w = 'C') then
			select	count(1)
			into STRICT	qt_faturas_coop_w
			from	ptu_fatura_pre
			where	nr_seq_intercambio		= nr_seq_intercambio_w
			and	dt_competencia	between dt_inicio_vigencia_w and dt_fim_vigencia_w
			and	cd_estabelecimento		= cd_estabelecimento_p;

			nr_seq_grupo_intercambio_w	:= null;
		elsif (ie_tipo_geracao_a800_w = 'G') then
			select	count(1)
			into STRICT	qt_faturas_coop_w
			from	ptu_fatura_pre
			where	nr_seq_grupo_intercambio	= nr_seq_grupo_intercambio_w
			and	dt_competencia	between dt_inicio_vigencia_w and dt_fim_vigencia_w
			and	cd_estabelecimento		= cd_estabelecimento_p;

			nr_seq_intercambio_w		:= null;
		end if;

		--aaschlote 20/04/2016 OS 1073081
		if (qt_faturas_coop_w > 0) and (ie_tipo_geracao_a800_w = 'C') then
			select	count(1)
			into STRICT	qt_faturas_coop_w
			from	ptu_fatura_pre
			where	nr_documento		= nr_titulo_w
			and	nr_seq_intercambio	= nr_seq_intercambio_w;
		end if;

		if (qt_faturas_coop_w	= 0) then
			select	nextval('ptu_fatura_pre_seq')
			into STRICT	nr_seq_fatura_w
			;

			insert into	ptu_fatura_pre(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					cd_estabelecimento,nr_seq_lote,cd_unimed_destino,cd_unimed_origem,dt_geracao,
					nr_versao_transacao,ie_envio_recebimento,tp_registro,dt_competencia,dt_cobranca_inicial,
					dt_cobranca_final,tp_documento,nr_documento,dt_vencimento,dt_emissao,vl_total,
					vl_total_liq,vl_ajuste,vl_ir,nr_seq_intercambio,nr_seq_grupo_intercambio)
			values (	nr_seq_fatura_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					cd_estabelecimento_p,nr_seq_lote_p,cd_unimed_destino_w,cd_unimed_origem_w,clock_timestamp(),
					nr_versao_transacao_w,'E',1,dt_referencia_w,dt_inicio_vigencia_w,
					dt_fim_vigencia_w,2,nr_titulo_w,dt_vencimento_doc_w,dt_emissao_doc_w,vl_total_mensalidade_w,
					vl_total_doc_w,vl_ajuste_doc_w,0,nr_seq_intercambio_w,nr_seq_grupo_intercambio_w);

			/*Gerar os beneficiários da cobrança*/

			CALL ptu_gerar_fatura_benef_pre(nr_seq_fatura_w,nr_seq_mensalidade_w,cd_estabelecimento_p,nm_usuario_p);
			/*Gerar o cedente e o sacado da cobrança*/

			CALL ptu_gerar_cede_saca_fatura_pre(nr_seq_fatura_w,cd_estabelecimento_p,nm_usuario_p);
			/*Gerar o corpo da fatura da cobrança*/

			CALL ptu_gerar_corpo_fatura_pre(nr_seq_fatura_w,nr_seq_mensalidade_w,cd_estabelecimento_p,nm_usuario_p);
		elsif (ie_tipo_geracao_a800_w <> 'C') then
			/*Caso existir a unimed nesse lote, então colocar os beneficiários*/

			if (ie_tipo_geracao_a800_w = 'CO') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_fatura_w
				from	ptu_fatura_pre
				where	cd_unimed_destino		= cd_unimed_destino_w
				and	dt_competencia	between dt_inicio_vigencia_w and dt_fim_vigencia_w
				and	cd_estabelecimento		= cd_estabelecimento_p
				and	nr_seq_lote			= nr_seq_lote_p;
			elsif (ie_tipo_geracao_a800_w = 'C') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_fatura_w
				from	ptu_fatura_pre
				where	nr_seq_intercambio		= nr_seq_intercambio_w
				and	dt_competencia	between dt_inicio_vigencia_w and dt_fim_vigencia_w
				and	cd_estabelecimento		= cd_estabelecimento_p
				and	nr_seq_lote			= nr_seq_lote_p;
			elsif (ie_tipo_geracao_a800_w = 'G') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_fatura_w
				from	ptu_fatura_pre
				where	nr_seq_grupo_intercambio	= nr_seq_grupo_intercambio_w
				and	dt_competencia	between dt_inicio_vigencia_w and dt_fim_vigencia_w
				and	cd_estabelecimento		= cd_estabelecimento_p
				and	nr_seq_lote			= nr_seq_lote_p;
			end if;

			if (nr_seq_fatura_w IS NOT NULL AND nr_seq_fatura_w::text <> '') then
				/*Gerar os beneficiários da cobrança*/

				CALL ptu_gerar_fatura_benef_pre(nr_seq_fatura_w,nr_seq_mensalidade_w,cd_estabelecimento_p,nm_usuario_p);
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

/*Gerar o trailler com as infomrações da cobrança já geradas*/

open C02;
loop
fetch C02 into
	nr_seq_fatura_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	CALL ptu_gerar_trailer_fatura_pre(nr_seq_fatura_w,cd_estabelecimento_p,nm_usuario_p);
	end;
end loop;
close C02;

select	count(1)
into STRICT	qt_registros_gerados_w
from	ptu_fatura_pre
where	nr_seq_lote	= nr_seq_lote_p;

if (qt_registros_gerados_w	> 0) then
	update	ptu_fatura_pre_lote
	set	dt_geracao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_lote_faturamento_pag ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

