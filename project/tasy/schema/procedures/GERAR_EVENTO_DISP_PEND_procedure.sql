-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_disp_pend (nr_seq_evento_p bigint, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_forma_ev_w		varchar(15);
ie_pessoa_destino_w	varchar(15);
cd_pf_destino_w		varchar(10);
ds_mensagem_w		varchar(4000);
ds_titulo_w		varchar(100);
cd_pessoa_destino_w	varchar(10);
nr_sequencia_w		bigint;
ds_maquina_w		varchar(80);
nm_paciente_w		varchar(60);
ds_unidade_w		varchar(60);
ds_setor_atendimento_w	varchar(60);
ie_usuario_aceite_w	varchar(1);
cd_setor_atendimento_w	integer;
cd_perfil_w		integer;
cd_pessoa_regra_w	varchar(10);
nr_ramal_w		varchar(10);
cd_convenio_w		bigint;
nr_telefone_w		varchar(10);
ds_unidade_ww		varchar(60);
ds_setor_atendimento_ww	varchar(60);
cd_setor_atend_pac_w	integer;
cd_medico_solic_w	bigint;
nm_usuario_destino_w	varchar(15);
ds_cid_w		varchar(240);
cd_cid_w		varchar(10);
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(50);

c00 CURSOR FOR 
SELECT (wheb_mensagem_pck.get_texto(793622) || ' ' || substr(obter_nome_pf(p.cd_pessoa_fisica), 1, 255) || chr(13) || 
	wheb_mensagem_pck.get_texto(793623) || ' ' || substr(obter_desc_disp_cons(a.nr_sequencia),1,100) || chr(13) || 
	wheb_mensagem_pck.get_texto(793626) || ': ' || to_char(a.dt_retirada_prev, pkg_date_formaters.localize_mask('short', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, wheb_usuario_pck.get_nm_usuario)))) ds_mensagem, 
	c.nr_atendimento, 
	c.cd_pessoa_fisica 
FROM  pessoa_fisica p, 
    dispositivo b, 
    atendimento_paciente c, 
	atend_pac_dispositivo a 
WHERE	a.nr_seq_dispositivo 	= b.nr_sequencia 
and	c.nr_atendimento 	= a.nr_atendimento 
and   c.cd_pessoa_fisica 	= p.cd_pessoa_fisica 
and	c.nr_atendimento	= nr_atendimento_p 
and	coalesce(a.dt_retirada::text, '') = '' 
and	a.dt_retirada_prev > clock_timestamp() - interval '5 days'/1440;

C01 CURSOR FOR 
	SELECT	ie_forma_ev, 
		ie_pessoa_destino, 
		cd_pf_destino, 
		coalesce(ie_usuario_aceite,'N'), 
		cd_setor_atendimento, 
		cd_perfil 
	from	ev_evento_regra_dest 
	where	nr_seq_evento	= nr_seq_evento_p 
	and	coalesce(cd_convenio, coalesce(cd_convenio_w,0))			= coalesce(cd_convenio_w,0) 
	and	coalesce(cd_setor_atend_pac, coalesce(cd_setor_atend_pac_w,0))	= coalesce(cd_setor_atend_pac_w,0)	 
	order by ie_forma_ev;

C02 CURSOR FOR 
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C') 
	from	usuario_setor_v 
	where	cd_setor_atendimento = cd_setor_atendimento_w 
	and	ie_forma_ev_w in (2,3) 
	and	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');

C03 CURSOR FOR 
	SELECT	obter_dados_usuario_opcao(nm_usuario,'C'), 
		nm_usuario 
	from	usuario_perfil 
	where	cd_perfil = cd_perfil_w 
	and	ie_forma_ev_w in (1,2,3) 
	and	(obter_dados_usuario_opcao(nm_usuario,'C') IS NOT NULL AND (obter_dados_usuario_opcao(nm_usuario,'C'))::text <> '');
	

BEGIN 
 
select	substr(obter_inf_sessao(0),1,80) 
into STRICT	ds_maquina_w
;
 
open C00;
loop 
fetch C00 into	 
	ds_mensagem_w, 
	nr_atendimento_w, 
	cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
 
	select	coalesce(max(obter_convenio_atendimento(nr_atendimento_w)), 0) 
	into STRICT	cd_convenio_w 
	;
 
	select	ds_titulo, 
		ds_mensagem_w || chr(13) || ds_mensagem 
	into STRICT	ds_titulo_w, 
		ds_mensagem_w 
	from	ev_evento 
	where	nr_sequencia	= nr_seq_evento_p;
 
	select	substr(obter_nome_pf(cd_pessoa_fisica_w),1,60), 
		substr(obter_unidade_atendimento(nr_atendimento_w,'A','U'),1,60), 
		substr(obter_unidade_atendimento(nr_atendimento_w,'A','RA'),1,60), 
		substr(obter_unidade_atendimento(nr_atendimento_w,'A','TL'),1,60), 
		substr(obter_unidade_atendimento(nr_atendimento_w,'A','S'),1,60) 
	into STRICT	nm_paciente_w, 
		ds_unidade_w, 
		nr_ramal_w, 
		nr_telefone_w, 
		ds_setor_atendimento_w 
	;
 
	select	substr(obter_cid_atendimento(nr_atendimento_w, 'P'),1,10), 
		substr(obter_desc_cid_doenca(obter_cid_atendimento(nr_atendimento_w, 'P')),1,240) 
	into STRICT	cd_cid_w, 
		ds_cid_w 
	;
 
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@paciente',nm_paciente_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@atendimento',nr_atendimento_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ramal',nr_ramal_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@telefone',nr_telefone_w),1,4000);
 
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@quarto',ds_unidade_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@setor',ds_setor_atendimento_w),1,4000);
 
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@cd_cid',cd_cid_w),1,4000);
	ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w,'@ds_cid',ds_cid_w),1,4000);
 
	select	nextval('ev_evento_paciente_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	insert into ev_evento_paciente( 
		nr_sequencia, 
		nr_seq_evento, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_pessoa_fisica, 
		nr_atendimento, 
		ds_titulo, 
		ds_mensagem, 
		ie_status, 
		ds_maquina, 
		dt_evento, 
		dt_liberacao) 
	values (	nr_sequencia_w, 
		nr_seq_evento_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_pessoa_fisica_w, 
		nr_atendimento_w, 
		ds_titulo_w, 
		ds_mensagem_w, 
		'G', 
		ds_maquina_w, 
		clock_timestamp(), 
		clock_timestamp());
 
	open C01;
	loop 
	fetch C01 into 
		ie_forma_ev_w, 
		ie_pessoa_destino_w, 
		cd_pf_destino_w, 
		ie_usuario_aceite_w, 
		cd_setor_atendimento_w, 
		cd_perfil_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		if (ie_pessoa_destino_w = '1') then /* Médico do atendimento */
 
			begin 
			select	max(cd_medico_atendimento) 
			into STRICT	cd_pessoa_regra_w 
			from	atendimento_paciente 
			where	nr_atendimento	= nr_atendimento_w;
			end;
		elsif (ie_pessoa_destino_w = '2') then /*Médico responsável pelo paciente*/
 
			begin 
			select	max(cd_medico_resp) 
			into STRICT	cd_pessoa_regra_w 
			from	atendimento_paciente 
			where	nr_atendimento	= nr_atendimento_w;
			end;
		elsif (ie_pessoa_destino_w = '4') then /*Médico referido*/
 
			begin 
			select	max(cd_medico_referido) 
			into STRICT	cd_pessoa_regra_w 
			from	atendimento_paciente 
			where	nr_atendimento	= nr_atendimento_w;
			end;
		elsif (ie_pessoa_destino_w = '5') or (ie_pessoa_destino_w = '12') then /*Pessoa fixa ou Usuário fixo*/
 
			cd_pessoa_regra_w	:= cd_pf_destino_w;
		end if;
		 
		if (cd_pf_destino_w IS NOT NULL AND cd_pf_destino_w::text <> '') and (cd_pf_destino_w <> 0) then 
			cd_pessoa_regra_w := cd_pf_destino_w;
			 
		 
		insert into ev_evento_pac_destino( 
			nr_sequencia, 
			nr_seq_ev_pac, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			cd_pessoa_fisica, 
			ie_forma_ev, 
			ie_status, 
			dt_ciencia, 
			ie_pessoa_destino, 
			dt_evento) 
		values (	nextval('ev_evento_pac_destino_seq'), 
			nr_sequencia_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_pessoa_regra_w, 
			ie_forma_ev_w, 
			'G', 
			null, 
			ie_pessoa_destino_w, 
			clock_timestamp());
				 
		end if;
		 
		open C02;
		loop 
		fetch C02 into 
			cd_pessoa_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then 
			 
				insert into ev_evento_pac_destino( 
					nr_sequencia, 
					nr_seq_ev_pac, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					cd_pessoa_fisica, 
					ie_forma_ev, 
					ie_status, 
					dt_ciencia, 
					ie_pessoa_destino, 
					dt_evento) 
				values (	nextval('ev_evento_pac_destino_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_pessoa_regra_w, 
					ie_forma_ev_w, 
					'G', 
					null, 
					ie_pessoa_destino_w, 
					clock_timestamp());
			end if;
			end;
		end loop;
		close C02;
 
		open C03;
		loop 
		fetch C03 into 
			cd_pessoa_regra_w, 
			nm_usuario_destino_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			if (cd_pessoa_regra_w IS NOT NULL AND cd_pessoa_regra_w::text <> '') then 
				insert into ev_evento_pac_destino( 
					nr_sequencia, 
					nr_seq_ev_pac, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					cd_pessoa_fisica, 
					ie_forma_ev, 
					ie_status, 
					dt_ciencia, 
					nm_usuario_Dest, 
					ie_pessoa_destino, 
					dt_evento) 
				values (	nextval('ev_evento_pac_destino_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_pessoa_regra_w, 
					ie_forma_ev_w, 
					'G', 
					null, 
					nm_usuario_destino_w, 
					ie_pessoa_destino_w, 
					clock_timestamp());
			end if;
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C01;
 
end loop;
close C00;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_disp_pend (nr_seq_evento_p bigint, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

