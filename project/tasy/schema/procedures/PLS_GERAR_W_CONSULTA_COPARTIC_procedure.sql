-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_consulta_copartic ( dt_protocolo_inicial_p timestamp, dt_protocolo_final_p timestamp, ie_status_mensalidade_p text, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, nr_seq_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_regra_copartic_p pls_conta_coparticipacao.nr_seq_regra%type, nr_seq_analise_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_conta_coparticipacao_w	pls_conta_coparticipacao.nr_sequencia%type;
nr_seq_mensalidade_seg_w	pls_mensalidade_segurado.nr_sequencia%type;
ie_gerar_mensalidade_w		pls_conta_coparticipacao.ie_gerar_mensalidade%type;
ie_status_coparticipacao_w	pls_conta_coparticipacao.ie_status_coparticipacao%type;
ie_tipo_protocolo_w		pls_protocolo_conta.ie_tipo_protocolo%type;
ie_status_mensalidade_w		pls_conta_coparticipacao.ie_status_mensalidade%type;
ie_status_protocolo_w		pls_protocolo_conta.ie_status%type;
ie_status_conta_w		pls_conta.ie_status%type;
nr_seq_lote_copartic_w		pls_lote_coparticipacao.nr_sequencia%type;
ie_situacao_coparticipacao_w	w_pls_consulta_copartic.ie_situacao_coparticipacao%type;
ie_forma_pagamento_w		pls_parametro_pagamento.ie_forma_pagamento%type;
dt_protocolo_final_w		timestamp := fim_dia(dt_protocolo_final_p);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_mensalidade_seg,
		coalesce(a.ie_gerar_mensalidade,'S') ie_gerar_mensalidade,
		coalesce(a.ie_status_coparticipacao,'S') ie_status_coparticipacao,
		coalesce(c.ie_tipo_protocolo,'C') ie_tipo_protocolo,
		coalesce(a.ie_status_mensalidade,'P') ie_status_mensalidade,
		c.ie_status ie_status_protocolo,
		b.ie_status ie_status_conta
	from	pls_conta_coparticipacao a,
		pls_conta b,
		pls_protocolo_conta c,
		pls_segurado d
	where	a.nr_seq_conta = b.nr_sequencia
	and	b.nr_seq_protocolo = c.nr_sequencia
	and	b.nr_seq_segurado = d.nr_sequencia
	and	c.ie_tipo_protocolo in ('C','I')
	and	((a.ie_status_mensalidade = ie_status_mensalidade_p) or (coalesce(ie_status_mensalidade_p::text, '') = ''))
	and	c.dt_mes_competencia between dt_protocolo_inicial_p and dt_protocolo_final_w
	and	((d.nr_sequencia = nr_seq_segurado_p) or (coalesce(nr_seq_segurado_p,0) = 0))
	and	((d.nr_seq_contrato = nr_seq_contrato_p) or (coalesce(nr_seq_contrato_p,0) = 0))
	and	((b.nr_sequencia = nr_seq_conta_p) or (coalesce(nr_seq_conta_p,0) = 0))
	and	((c.nr_sequencia = nr_seq_protocolo_p) or (coalesce(nr_seq_protocolo_p,0) = 0))
	and	((a.nr_seq_regra = nr_seq_regra_copartic_p) or (coalesce(nr_seq_regra_copartic_p,0) = 0))
	and	((b.nr_seq_analise = nr_seq_analise_p) or (coalesce(nr_seq_analise_p,0) = 0))
	and	b.cd_estabelecimento = cd_estabelecimento_p;


BEGIN

delete	from w_pls_consulta_copart_inco
where	nm_usuario = nm_usuario_p;

delete	from w_pls_consulta_copartic
where	nm_usuario = nm_usuario_p;

select	max(ie_forma_pagamento)
into STRICT	ie_forma_pagamento_w
from	pls_parametro_pagamento
where	cd_estabelecimento	= cd_estabelecimento_p;
ie_forma_pagamento_w	:= coalesce(ie_forma_pagamento_w,'P');

open C01;
loop
fetch C01 into
	nr_seq_conta_coparticipacao_w,
	nr_seq_mensalidade_seg_w,
	ie_gerar_mensalidade_w,
	ie_status_coparticipacao_w,
	ie_tipo_protocolo_w,
	ie_status_mensalidade_w,
	ie_status_protocolo_w,
	ie_status_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_situacao_coparticipacao_w	:= 'P';

	select	max(x.nr_seq_lote)
	into STRICT	nr_seq_lote_copartic_w
	from	pls_lib_coparticipacao x
	where	x.nr_seq_conta_coparticipacao	= nr_seq_conta_coparticipacao_w;

	if (nr_seq_lote_copartic_w IS NOT NULL AND nr_seq_lote_copartic_w::text <> '') or (nr_seq_mensalidade_seg_w IS NOT NULL AND nr_seq_mensalidade_seg_w::text <> '') then
		ie_situacao_coparticipacao_w	:= 'L';
	else
		if (ie_tipo_protocolo_w not in ('C','I')) then
			CALL pls_gravar_inconsis_copart(nr_seq_conta_coparticipacao_w, 'Cobrança da coparticipação não permitida',
			'A cobrança de coparticipação não é permitida para o tipo de protocolo "'||obter_valor_dominio(3648,ie_tipo_protocolo_w)||'"', nm_usuario_p);
			ie_situacao_coparticipacao_w	:= 'I';
		end if;

		if (ie_gerar_mensalidade_w = 'N') then
			CALL pls_gravar_inconsis_copart(nr_seq_conta_coparticipacao_w, 'Cobrança da coparticipação não permitida',
			'Verificar atributo IE_GERAR_MENSALIDADE, da tabela PLS_CONTA_COPARTICIPACAO. O atributo não é alimentado pelo sistema', nm_usuario_p);
			ie_situacao_coparticipacao_w	:= 'I';
		end if;

		if (ie_status_coparticipacao_w <> 'S') then
			CALL pls_gravar_inconsis_copart(nr_seq_conta_coparticipacao_w, 'Cobrança da coparticipação não permitida',
			'Verificar campo "Status coparticipação", na função OPS - Gestão de Contas Médicas / Contas Médicas / Valores adicionais / Coparticipação', nm_usuario_p);
			ie_situacao_coparticipacao_w	:= 'I';
		end if;

		if (ie_status_mensalidade_w = 'C') then
			CALL pls_gravar_inconsis_copart(nr_seq_conta_coparticipacao_w, 'Cobrança da coparticipação cancelada',
			'Verificar campo "Status mensalidade", na função OPS - Gestão de Contas Médicas / Contas Médicas / Valores adicionais / Coparticipação', nm_usuario_p);
			ie_situacao_coparticipacao_w	:= 'I';
		end if;

		if	((ie_forma_pagamento_w = 'P') and (ie_status_protocolo_w not in ('3','6'))) then
			CALL pls_gravar_inconsis_copart(nr_seq_conta_coparticipacao_w, 'Falta liberar o protocolo para pagamento',
			'Na função OPS - Gestão de Contas Médicas / Protocolo, utilizar a opção de botão direito "Liberar para pagamento"', nm_usuario_p);
			ie_situacao_coparticipacao_w	:= 'I';
		end if;

		if	(ie_forma_pagamento_w = 'C' AND ie_status_conta_w <> 'F') then
			CALL pls_gravar_inconsis_copart(nr_seq_conta_coparticipacao_w, 'Falta fechar a conta médica',
			'Na função OPS - Gestão de Contas Médicas / Contas Médicas / Conta, utilizar a opção de botão direito "Fechar conta"', nm_usuario_p);
			ie_situacao_coparticipacao_w	:= 'I';
		end if;
	end if;

	insert	into	w_pls_consulta_copartic(	nr_seq_conta_coparticipacao, dt_atualizacao, nm_usuario,
			ie_situacao_coparticipacao)
		values (	nr_seq_conta_coparticipacao_w, clock_timestamp(), nm_usuario_p,
			ie_situacao_coparticipacao_w);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_consulta_copartic ( dt_protocolo_inicial_p timestamp, dt_protocolo_final_p timestamp, ie_status_mensalidade_p text, nr_seq_segurado_p bigint, nr_seq_contrato_p bigint, nr_seq_conta_p bigint, nr_seq_protocolo_p bigint, nr_seq_regra_copartic_p pls_conta_coparticipacao.nr_seq_regra%type, nr_seq_analise_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

