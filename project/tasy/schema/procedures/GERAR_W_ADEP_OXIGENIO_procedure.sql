-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_adep_oxigenio (nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ie_respiracao_w			varchar(255);
cd_mod_vent_w			varchar(255);
ie_disp_resp_esp_w		varchar(255);
qt_fluxo_oxigenio_w		double precision;
dt_monitorizacao_w		timestamp;
cd_pessoa_fisica_w		varchar(255);
ie_respiracao_inic_w		varchar(255);
cd_mod_vent_inic_w		varchar(255);
ie_disp_resp_esp_inic_w		varchar(255);
qt_fluxo_oxigenio_inic_w	double precision;
dt_monitorizacao_inic_w		timestamp;
nr_seq_oxigenio_inic_w		bigint;
qt_atend_w			bigint;
nr_seq_oxigenio_w		bigint;
dt_final_w			timestamp;
aux_w				bigint;

/* obter oxigenioterapia */

c01 CURSOR FOR
SELECT	ie_respiracao,
	cd_mod_vent,
	ie_disp_resp_esp,
	qt_fluxo_oxigenio,
	dt_monitorizacao,
	cd_pessoa_fisica
from	atendimento_monit_resp
where	nr_atendimento = nr_atendimento_p
and	dt_monitorizacao between dt_inicial_p and dt_final_p
order by
	dt_monitorizacao;


BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	/* limpar tabela */

	delete
	from	w_adep_oxigenio
	where	nr_atendimento = nr_atendimento_p
	and	nm_usuario = nm_usuario_p;

	/* gerar oxigenioterapia */

	open c01;
	loop
	fetch c01 into
		ie_respiracao_w,
		cd_mod_vent_w,
		ie_disp_resp_esp_w,
		qt_fluxo_oxigenio_w,
		dt_monitorizacao_w,
		cd_pessoa_fisica_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		/* verificar oxigenioterapia */

		select	count(*)
		into STRICT	qt_atend_w
		from	w_adep_oxigenio
		where	nr_atendimento = nr_atendimento_p
		and	nm_usuario = nm_usuario_p;

		/* gerar primeira oxigenioterapia */

		if (qt_atend_w = 0) then
			select	nextval('w_adep_oxigenio_seq')
			into STRICT	nr_seq_oxigenio_w
			;

			insert into w_adep_oxigenio(nr_sequencia,
				nm_usuario,
				dt_relatorio,
				nr_atendimento,
				ie_respiracao,
				cd_mod_vent,
				ie_disp_resp_esp,
				qt_fluxo_oxigenio,
				dt_monitorizacao,
				cd_pessoa_fisica,
				dt_final_monit,
				qt_tempo_oxigenio,
				qt_litros)
			values (nr_seq_oxigenio_w,
				nm_usuario_p,
				clock_timestamp(),
				nr_atendimento_p,
				ie_respiracao_w,
				cd_mod_vent_w,
				ie_disp_resp_esp_w,
				qt_fluxo_oxigenio_w,
				dt_monitorizacao_w,
				cd_pessoa_fisica_w,
				null,
				null,
				null);

			ie_respiracao_inic_w		:= ie_respiracao_w;
			cd_mod_vent_inic_w		:= cd_mod_vent_w;
			ie_disp_resp_esp_inic_w		:= ie_disp_resp_esp_w;
			qt_fluxo_oxigenio_inic_w	:= qt_fluxo_oxigenio_w;
			dt_monitorizacao_inic_w		:= dt_monitorizacao_w;
			nr_seq_oxigenio_inic_w		:= nr_seq_oxigenio_w;
		else
			/* atualizar monitorizacao (se inalterada) */

			if	((ie_respiracao_inic_w = ie_respiracao_w) or (coalesce(ie_respiracao_inic_w::text, '') = '' and coalesce(ie_respiracao_w::text, '') = '')) and
				((cd_mod_vent_inic_w = cd_mod_vent_w) or (coalesce(cd_mod_vent_inic_w::text, '') = '' and coalesce(cd_mod_vent_w::text, '') = '')) and
				((ie_disp_resp_esp_inic_w = ie_disp_resp_esp_w) or (coalesce(ie_disp_resp_esp_inic_w::text, '') = '' and coalesce(ie_disp_resp_esp_w::text, '') = '')) and
				((qt_fluxo_oxigenio_inic_w = qt_fluxo_oxigenio_w) or (coalesce(qt_fluxo_oxigenio_inic_w::text, '') = '' and coalesce(qt_fluxo_oxigenio_w::text, '') = '')) then
				aux_w := 0;
			else
				/* finalizar monitorizacao inicial */

				update	w_adep_oxigenio
				set	dt_final_monit		= dt_monitorizacao_w,
					qt_tempo_oxigenio	= (dt_monitorizacao_w - dt_monitorizacao_inic_w) * 24
				where	nr_sequencia		= nr_seq_oxigenio_inic_w;

				/* gerar nova monitorizacao */

				select	nextval('w_adep_oxigenio_seq')
				into STRICT	nr_seq_oxigenio_w
				;

				insert into w_adep_oxigenio(nr_sequencia,
					nm_usuario,
					dt_relatorio,
					nr_atendimento,
					ie_respiracao,
					cd_mod_vent,
					ie_disp_resp_esp,
					qt_fluxo_oxigenio,
					dt_monitorizacao,
					cd_pessoa_fisica,
					dt_final_monit,
					qt_tempo_oxigenio,
					qt_litros)
				values (nr_seq_oxigenio_w,
					nm_usuario_p,
					clock_timestamp(),
					nr_atendimento_p,
					ie_respiracao_w,
					cd_mod_vent_w,
					ie_disp_resp_esp_w,
					qt_fluxo_oxigenio_w,
					dt_monitorizacao_w,
					cd_pessoa_fisica_w,
					null,
					null,
					null);

				ie_respiracao_inic_w		:= ie_respiracao_w;
				cd_mod_vent_inic_w		:= cd_mod_vent_w;
				ie_disp_resp_esp_inic_w		:= ie_disp_resp_esp_w;
				qt_fluxo_oxigenio_inic_w	:= qt_fluxo_oxigenio_w;
				dt_monitorizacao_inic_w		:= dt_monitorizacao_w;
				nr_seq_oxigenio_inic_w		:= nr_seq_oxigenio_w;
			end if;
		end if;
		end;
	end loop;
	close c01;

	/* concluir oxigenioterapia */

	if (coalesce(nr_seq_oxigenio_inic_w,0) > 0) then

		select	max(dt_final_monit)
		into STRICT	dt_final_w
		from	w_adep_oxigenio
		where	nr_sequencia = nr_seq_oxigenio_inic_w;

		if (coalesce(dt_final_w::text, '') = '') then
			update	w_adep_oxigenio
			set	dt_final_monit	= dt_final_p,
				qt_tempo_oxigenio	= (dt_final_p - dt_monitorizacao_inic_w) * 24
			where	nr_sequencia		= nr_seq_oxigenio_inic_w;
		end if;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_adep_oxigenio (nr_atendimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

