-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lanc_apos_conta ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_adicional_1_p text, ds_adicional_2_p text, ds_adicional_3_p text, ds_adicional_4_p text, nr_interno_conta_p bigint) AS $body$
DECLARE


/* nao e possivel disparar o kit chamando a procedure gerar_kit_material_exec */

					
ds_erro_w			varchar(255);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_convenio_conta_w		integer;
cd_convenio_decode_w		integer;
cd_categoria_w			varchar(10);
cd_categoria_decode_w		varchar(10);
cd_categoria_conta_w		varchar(10);
cd_local_estoque_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_medico_atendimento_w		varchar(1);
ie_local_estoque_w			varchar(1);
cd_cgc_w			varchar(14);
cd_cgc_regra_w			varchar(14);
nr_doc_convenio_w		varchar(20);
nr_doc_propaci_w			varchar(20);
cd_procedimento_w          		bigint		:= 0;
ie_origem_proced_w		bigint		:= 0;
cd_material_w      			integer		:= 0;
nr_sequencia_w         		bigint		:= 0;
nr_seq_regra_w         		bigint		:= 0;
nr_seq_acao_regra_w		bigint		:= 0;
nr_seq_exame_propaci_w     		bigint		:= 0;
cd_unid_medida_w			varchar(30);
cd_medico_executor_w		varchar(10);
cd_medico_req_w			varchar(10);
cd_medico_resp_w			varchar(10);
cd_setor_regra_w			integer	:= 0;
cd_setor_atendimento_w		integer	:= 0;
qt_lancamento_w			double precision	:= 0;
dt_entrada_unidade_w		timestamp;
dt_entrada_unidade_intern_w	timestamp;
dt_entrada_w			timestamp;
qt_registro_w			bigint	:= 0;
qt_passagem_setor_w		bigint	:= 0;
nr_atend_original_w			bigint;
nr_interno_conta_w			bigint;

nr_seq_propaci_w			bigint;
cd_proc_propaci_w			bigint;
dt_proc_propaci_w			timestamp;
ie_origem_propaci_w		bigint;
nr_seq_exame_w			bigint;
cd_medico_propaci_w		varchar(10);
cd_medico_filtro_w			varchar(10);
cd_area_proc_w			bigint;
cd_especial_proc_w		bigint;
cd_grupo_proc_w			bigint;
tx_proc_propaci_w			double precision	:= 100;
dt_execucao_w			timestamp:= clock_timestamp();
dt_alta_w				timestamp;
qt_porte_anestesico_w		smallint;
nr_seq_atepacu_w			bigint;
nr_seq_atepacu_intern_w		bigint;
cd_edicao_amb_w			integer;
qt_proc_alta_w			integer;
qt_proc_lib_evolucao_w		integer;
qt_mat_alta_w			integer;
qt_procedimento_w			double precision;
ie_tipo_convenio_w			smallint;
qt_reg_w				bigint;
ie_funcao_medico_w		smallint;
nr_seq_proc_interno_w		bigint	:= 0;
nr_seq_proc_interno_ww		bigint	:= 0;
cd_senha_w			varchar(20);
cd_motivo_alta_w			bigint	:= null;
ie_medico_executor_w		varchar(1);
cd_medico_regra_w		varchar(10)	:= null;
ie_clinica_w			bigint;
tx_procedimento_w			double precision;
cd_tipo_acomodacao_w		bigint;
nr_anos_w			bigint;
cd_atividade_prof_bpa_w		smallint;
ie_regra_guia_w			varchar(5);
ie_consiste_item_w			varchar(1);
ie_consiste_proc_int_w		varchar(1);
nr_seq_lanc_proc_interno_w		bigint	:= 0;
ie_consiste_item_ww		varchar(1);
dt_liberacao_evolucao_w		timestamp;
nr_prescricao_w			bigint;
cd_medico_prescr_w		varchar(10);
cd_medico_exec_item_w		varchar(10);
cd_especialidade_w		integer;
nr_seq_classificacao_w		bigint;
cd_tipo_anestesia_w		varchar(10);
cd_funcao_w			integer;
ie_tipo_atend_bpa_w		smallint;
ie_grupo_atend_bpa_w		smallint;
cd_plano_convenio_w		varchar(10);
ie_proc_princ_atend_w		varchar(10);
ie_evolucao_clinica_w		varchar(3)	:= null;
ie_via_acesso_w			varchar(1);
cont_w				bigint;
ie_integracao_w			varchar(01)	:= 'N';
ie_tipo_guia_w			varchar(02);
nr_interno_conta_ww		bigint;
cd_pessoa_fisica_w		varchar(10);
qt_atend_w			bigint;
ie_primeiro_atend_w		varchar(01);
cd_profissional_w			varchar(10);

nr_seq_forma_org_w		bigint := 0;
nr_seq_grupo_w			bigint := 0;
nr_seq_subgrupo_w		bigint := 0;
cd_estab_item_w			bigint;
nr_seq_pq_proc_w			bigint;
dt_acerto_conta_w			timestamp;
ie_vincular_proc_princ_w		varchar(1):= 'S';
ie_carater_atend_w			varchar(02);
nr_cirurgia_w			bigint;
cd_setor_item_w			bigint;

qt_passagem_w			bigint;
nr_seq_setor_item_w		bigint;
qt_regra_proc_w			bigint;
cd_kit_material_w			integer:= 0;
nr_seq_atepacu_ww		bigint;
nr_seq_proc_princ_w		bigint;
ie_dispara_kit_mat_w		varchar(1);
/* ds_adicional_3_p - regra lancamento prescricao - nao mecher sem falar comigo (ricardo) 27/03/2008 */

dia_feriado_w			varchar(1) := 'N';
dia_semana_w			smallint	:= 0;
nr_sequencia_prescricao_w		bigint;
ie_lado_w			varchar(01)	:= 'X';
ie_material_pai_w			varchar(1)	:= 'S';
nr_seq_exame_proc_w		bigint;
ie_duplicar_proc_regra_w		varchar(01);
cd_tipo_recomendacao_w		bigint	:= -1;
ie_video_w			varchar(01)	:= 'X';
nr_seq_w				bigint;

nr_seq_atepacu_proc_w		bigint;
cd_setor_atendimento_proc_w	bigint;
dt_entrada_unidade_proc_w		timestamp;
nm_usuario_banco_w		varchar(50);
cd_setor_ativo_w			integer;
ie_lancto_auto_dt_alta_w		varchar(1);
ie_credenciado_w			varchar(1);
cd_medico_parecer_w		varchar(10);
qt_medico_w			bigint;
nr_prescr_w			bigint;
nr_seq_reg_template_w		bigint;
cd_pessoa_usuario_w		varchar(10);
cd_dieta_w			bigint	:= -1;
cd_material_exame_w		varchar(20)	:= '0';
cd_procedencia_w			integer		:= 0;
dt_inicio_procedimento_w		timestamp;
nr_min_duracao_w			bigint;
ie_forma_apresentacao_w		smallint;
ie_lanc_aut_assumir_pac_w		varchar(10);
dt_atual_trunc_w			timestamp	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());

ie_situacao_w  varchar(1);

cd_conv_glosa_w			integer;
cd_categ_glosa_w			varchar(10);
ds_retorno_char_w			varchar(255);
ds_retorno_numerico_w		bigint;
nr_seq_regra_ajuste_w		bigint;
nr_seq_regra_preco_w		bigint;
ie_classificacao_w			smallint;
ie_glosa_w			varchar(3);
cd_motivo_exc_conta_ww		integer;
cd_motivo_exc_conta_w		integer;
nr_seq_conta_origem_w		bigint;
cd_cnpj_prestador_w		varchar(14);/*Geliard 07/11/2009 OS165332*/
cd_cid_doenca_w			varchar(10);/*Geliard OS 178910*/
cd_setor_atend_prescr_w    	integer  	:= 0;/*Geliard OS 387281*/
nr_seq_origem_w			bigint;
nr_seq_classif_medico_w		atendimento_paciente.nr_seq_classif_medico%type;
cd_medico_lanc_aut_pac_w	regra_lanc_aut_pac.cd_medico%type;

c01 CURSOR FOR
SELECT a.nr_sequencia,
	a.cd_setor_atendimento,
	CASE WHEN a.nr_seq_evento=211 THEN  nr_interno_conta_p  ELSE CASE WHEN ie_conv_parametro='A' THEN  0  ELSE nr_interno_conta_p END  END ,
	coalesce(a.ie_vincular_proc_princ,'S'),
	coalesce(a.ie_dispara_kit_mat,'N'),
	coalesce(a.ie_duplicar_proc_regra,'N')
from 	regra_lanc_automatico a
where	a.cd_estabelecimento				= cd_estabelecimento_w
and	coalesce(a.cd_convenio, CASE WHEN ie_conv_parametro='A' THEN  cd_convenio_w  ELSE cd_convenio_conta_w END )	= CASE WHEN ie_conv_parametro='A' THEN  cd_convenio_w  ELSE cd_convenio_conta_w END
and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)	= ie_tipo_convenio_w
and (coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)= ie_tipo_atendimento_w or	coalesce(ie_tipo_atendimento_w::text, '') = '')
and (a.nr_seq_evento				= nr_seq_evento_p)
and	((coalesce(a.cd_medico, cd_medico_filtro_w)	= cd_medico_filtro_w) or (coalesce(cd_medico_filtro_w::text, '') = ''))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_procedimento::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_procedimento,cd_proc_propaci_w) = cd_proc_propaci_w or coalesce(cd_proc_propaci_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_area_procedimento::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_area_procedimento,cd_area_proc_w)= cd_area_proc_w 	or coalesce(cd_area_proc_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_especialidade_proc::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_especialidade_proc,cd_especial_proc_w) = cd_especial_proc_w or coalesce(cd_especial_proc_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_grupo_proc::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_grupo_proc,cd_grupo_proc_w)	= cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')))
and	((coalesce(a.cd_edicao_amb,cd_edicao_amb_w)	= cd_edicao_amb_w) or (coalesce(cd_edicao_amb_w::text, '') = ''))
and (coalesce(a.nr_seq_exame,nr_seq_exame_propaci_w)	= nr_seq_exame_propaci_w)
and	coalesce(a.cd_categoria, cd_categoria_w)	= cd_categoria_w
and	((coalesce(a.cd_motivo_alta, cd_motivo_alta_w)	= cd_motivo_alta_w) or (coalesce(cd_motivo_alta_w::text, '') = ''))
and (coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w) = nr_seq_proc_interno_w)
and	((coalesce(ie_clinica::text, '') = '') or (ie_clinica = ie_clinica_w))
and	((coalesce(cd_tipo_acomodacao::text, '') = '') or (coalesce(cd_tipo_acomodacao_w::text, '') = '') or (cd_tipo_acomodacao = cd_tipo_acomodacao_w))
and	((coalesce(cd_tipo_anestesia::text, '') = '') or (coalesce(cd_tipo_anestesia_w::text, '') = '') or (cd_tipo_anestesia = cd_tipo_anestesia_w))
and	((coalesce(cd_especialidade::text, '') = '') or (coalesce(cd_especialidade_w::text, '') = '') or (cd_especialidade = cd_especialidade_w))
and	coalesce(nr_seq_classificacao,coalesce(nr_seq_classificacao_w,0))	= coalesce(nr_seq_classificacao_w,0)
and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
and	((coalesce(a.cd_funcao::text, '') = '') or (cd_funcao_w = 0) or (a.cd_funcao = cd_funcao_w))
and	(((nr_seq_evento_p = 26) and (obter_se_medico_especialidade(a.nr_sequencia,cd_medico_resp_w) = 'S')) or (nr_seq_evento_p <> 26))
and	coalesce(cd_plano_convenio, cd_plano_convenio_w)	= cd_plano_convenio_w
and	((coalesce(ie_evolucao_clinica_w::text, '') = '') or (coalesce(a.ie_evolucao_clinica,ie_evolucao_clinica_w) = ie_evolucao_clinica_w)) 	
and	coalesce(a.nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w 	
and	coalesce(a.nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w 	
and	coalesce(a.nr_seq_subgrupo, nr_seq_subgrupo_w)	= nr_seq_subgrupo_w
and (coalesce(a.ie_carater_inter, coalesce(ie_carater_atend_w, 0))	= coalesce(ie_carater_atend_w, 0))
and	((cd_tipo_recomendacao_w = -1 and (coalesce(cd_tipo_recomendacao::text, '') = '')) or (coalesce(cd_tipo_recomendacao,cd_tipo_recomendacao_w) = cd_tipo_recomendacao_w))
and	((cd_dieta_w = -1 and (coalesce(cd_dieta::text, '') = '')) or (coalesce(cd_dieta,cd_dieta_w) = cd_dieta_w))
and	((ie_video_w = 'X') or (coalesce(ie_video, 'N') = 'N') or ((coalesce(ie_video, 'N') = 'S') and (coalesce(ie_video, coalesce(ie_video_w, 'X')) = coalesce(ie_video_w, 'X'))))
and	qt_reg_w					= 0
and	coalesce(cd_procedencia,cd_procedencia_w)	= cd_procedencia_w
and	ie_situacao					= 'A'
and (coalesce(ie_feriado,'N')	= 'N' or	coalesce(ie_feriado,'N')				= dia_feriado_w)
and	((coalesce(ie_lado_w, 'X')	= 'X') or (coalesce(ie_lado, ie_lado_w) = ie_lado_w))
and	coalesce(cd_material_exame,cd_material_exame_w)	= cd_material_exame_w
and	((coalesce(dt_dia_semana, dia_semana_w) = dia_semana_w) or (dt_dia_semana = 9))
and	coalesce(ie_tipo_guia,coalesce(ie_tipo_guia_w,'0'))	= coalesce(ie_tipo_guia_w,'0')
and 	((coalesce(a.ie_credenciado,'T') = 'T') or (a.ie_credenciado 	= ie_credenciado_w))
and	dt_atual_trunc_w between coalesce(dt_inicio_vigencia,dt_atual_trunc_w) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(dt_final_vigencia,dt_atual_trunc_w, clock_timestamp()))
and (coalesce(dt_execucao_w, clock_timestamp()) between 
		ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_execucao_w, clock_timestamp()), coalesce( to_char(hr_inicial,'hh24:mi:ss'), '00:00:01'))
					and
		ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(coalesce(dt_execucao_w, clock_timestamp()), coalesce(to_char(hr_final,'hh24:mi:ss'), '23:59:59')))
order by
	coalesce(a.ie_conv_parametro, 'A'),
	coalesce(a.cd_medico,0),
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.ie_tipo_atendimento,0),
	coalesce(a.cd_convenio,0),
	coalesce(a.ie_tipo_convenio,0),
	coalesce(a.cd_edicao_amb,0),
	coalesce(a.cd_procedimento,0),
	coalesce(a.cd_grupo_proc,0),
	coalesce(a.cd_especialidade_proc,0),
	coalesce(a.cd_area_procedimento,0),
	coalesce(a.nr_seq_exame,0),
	coalesce(a.ie_clinica,0),
	coalesce(a.cd_funcao,0),
	coalesce(a.ie_lado,' '),
	coalesce(a.cd_material_exame,' '),
	coalesce(obter_prior_espec_medico(cd_medico_resp_w,a.cd_espec_medic_atend),9999) desc;

c02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * CASE WHEN coalesce(qt_procedimento_w,0)=0 THEN 1  ELSE qt_procedimento_w END  END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		coalesce(a.tx_procedimento,100),
		coalesce(a.ie_regra_guia,'RC'),
		a.nr_seq_proc_interno,
		coalesce(a.ie_consiste_item,'N'),
    	coalesce(a.ie_consiste_proc_int,'N'),
		coalesce(a.nr_seq_proc_interno, 0),
		coalesce(a.ie_proc_princ_atend, 'N'),
		a.nr_seq_lanc,
		a.cd_estab_item,
		a.cd_setor_item,
		nr_min_duracao,
		a.cd_cnpj_prestador,
		a.cd_cid_doenca,
		a.cd_medico
	from 	material		b,
		regra_lanc_aut_pac	a
	where	a.nr_seq_regra 	= nr_seq_regra_w
	and	nr_seq_regra_w 	<> 0
	and	b.ie_situacao 	= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and	((coalesce(ie_retorno,'N') = 'S') or ((coalesce(ie_retorno,'N') = 'N') and (coalesce(nr_atend_original_w::text, '') = '')) 
				 or ((coalesce(ie_retorno,'N') = 'R') and (nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '')))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w	= 0
	
union all

	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		coalesce(a.tx_procedimento,100),
		coalesce(a.ie_regra_guia,'RC'),
		a.nr_seq_proc_interno,
		coalesce(a.ie_consiste_item,'N'),
    	coalesce(a.ie_consiste_proc_int,'N'),
		coalesce(a.nr_seq_proc_interno, 0),
		coalesce(a.ie_proc_princ_atend, 'N'),
		a.nr_seq_lanc,
		a.cd_estab_item,
		a.cd_setor_item,
		nr_min_duracao,
		a.cd_cnpj_prestador,
		a.cd_cid_doenca,
		a.cd_medico
	from 	material		b, 
		regra_lanc_aut_pac	a
	where	a.nr_seq_regra 	= nr_seq_regra_w
	and	nr_seq_regra_w 	<> 0
	and	b.ie_situacao 	= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and (coalesce(ie_retorno,'N') = 'P') 
	and	ie_primeiro_atend_w	= 'S'
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w	= 0
	
union all

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		coalesce(tx_procedimento,100),
		coalesce(ie_regra_guia,'RC'),
		nr_seq_proc_interno,
		coalesce(ie_consiste_item,'N'),
    	coalesce(ie_consiste_proc_int,'N'),
		coalesce(nr_seq_proc_interno, 0),
		coalesce(ie_proc_princ_atend, 'N'),
		nr_seq_lanc,
		cd_estab_item,
		cd_setor_item,
		nr_min_duracao,
		cd_cnpj_prestador,
		cd_cid_doenca,
		cd_medico
	from 	regra_lanc_aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w <> 0
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and	((coalesce(ie_retorno,'N') = 'S') or ((coalesce(ie_retorno,'N') = 'N') and (coalesce(nr_atend_original_w::text, '') = '')) 
				 or ((coalesce(ie_retorno,'N') = 'R') and (nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '')))
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or
		(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w		= 0
	
union all

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		coalesce(tx_procedimento,100),
		coalesce(ie_regra_guia,'RC'),
		nr_seq_proc_interno,
		coalesce(ie_consiste_item,'N'),
    	coalesce(ie_consiste_proc_int,'N'),
		coalesce(nr_seq_proc_interno, 0),
		coalesce(ie_proc_princ_atend, 'N'),
		nr_seq_lanc,
		cd_estab_item,
		cd_setor_item,
		nr_min_duracao,
		cd_cnpj_prestador,
		cd_cid_doenca,
		cd_medico
	from 	regra_lanc_aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w <> 0
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and (coalesce(ie_retorno,'N') = 'P') 
	and	ie_primeiro_atend_w	= 'S'
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or
		(nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w		= 0;




BEGIN

cd_tipo_recomendacao_w		:= -1;
cd_dieta_w			:= -1;
ie_video_w			:= 'X';
nr_seq_propaci_w	:= nr_sequencia_p;
nr_seq_regra_w		:= 0;
cd_tipo_acomodacao_w	:= null;
cd_especialidade_w	:= null;
nr_cirurgia_w		:= null;


begin
select
	a.ie_tipo_atendimento,
	a.nr_atend_original,
	a.cd_estabelecimento,
	b.cd_cgc,
	a.cd_setor_atendimento,
	a.cd_medico_resp,
	a.cd_convenio,
	c.ie_tipo_convenio,
	a.cd_categoria,
	a.dt_entrada_unidade,
	a.dt_entrada,
	CASE WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='N' THEN  null WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='S' THEN  coalesce(a.cd_senha, a.nr_doc_convenio)  ELSE a.nr_doc_convenio END ,
	a.dt_alta,
	a.nr_seq_atepacu,
	a.cd_senha,
	a.ie_clinica,
	a.cd_tipo_acomod_unid,
	coalesce(nr_anos,999),
	a.nr_seq_classificacao,
	coalesce(a.cd_plano_convenio,'0'),
	ie_tipo_guia,
	cd_pessoa_fisica,
	ie_carater_inter_sus,
	coalesce(cd_procedencia,0)
into STRICT	ie_tipo_atendimento_w,
	nr_atend_original_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_setor_atendimento_w,
	cd_medico_resp_w,
	cd_convenio_w,
	ie_tipo_convenio_w,
	cd_categoria_w,
	dt_entrada_unidade_w,
	dt_entrada_w,
	nr_doc_convenio_w,
	dt_alta_w,
	nr_seq_atepacu_w,
	cd_senha_w,
	ie_clinica_w,
	cd_tipo_acomodacao_w,
	nr_anos_w,
	nr_seq_classificacao_w,
	cd_plano_convenio_w,
	ie_tipo_guia_w,
	cd_pessoa_fisica_w,
	ie_carater_atend_w,
	cd_procedencia_w
from 	estabelecimento b,
	convenio c,
	atendimento_paciente_v a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	c.cd_convenio		= a.cd_convenio
and	a.nr_atendimento	= nr_atendimento_p;
exception
	when others then
		cd_estabelecimento_w 	:= 9999;
		cd_procedencia_w	 	:= 0;
end;

select	coalesce(max(nr_seq_classif_medico),0)
into STRICT	nr_seq_classif_medico_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;

select	count(*)
into STRICT	qt_atend_w
from	atendimento_paciente
where	cd_pessoa_fisica	= cd_pessoa_fisica_w
and	nr_atendimento		<> nr_atendimento_p;

if (qt_atend_w	= 0) then
	ie_primeiro_atend_w	:= 'S';
else
	ie_primeiro_atend_w	:= 'N';
end if;

begin
select	cd_convenio_parametro,
	cd_categoria_parametro
into STRICT	cd_convenio_conta_w,
	cd_categoria_conta_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
		cd_convenio_conta_w 	:= cd_convenio_w;
		cd_categoria_conta_w	:= cd_categoria_w;
end;

select	max(cd_funcao_medico),
	max(ie_lanc_aut_assumir_pac)
into STRICT	ie_funcao_medico_w,
	ie_lanc_aut_assumir_pac_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

qt_reg_w		:= 0;

/* obter feriado */

begin
select 	'S'
into STRICT 	dia_feriado_w
from 	feriado
where 	cd_estabelecimento 	= cd_estabelecimento_w
and 	to_char(dt_feriado,'dd/mm/yyyy') = to_char(coalesce(dt_execucao_w, clock_timestamp()),'dd/mm/yyyy');
exception
            when others then
		dia_feriado_w	:= 'N';
end;

dia_semana_w 		:= PKG_DATE_UTILS.get_WeekDay(coalesce(dt_execucao_w, clock_timestamp()));

nr_prescr_w:= 0;
	

dt_execucao_w := coalesce(dt_execucao_w, dt_entrada_unidade_w); /* elemar 17/09/2002 - gerar lancamento na entrada do paciente  */
select	max(cd_edicao_amb)
into STRICT	cd_edicao_amb_w
from	convenio_amb
where (cd_estabelecimento	= cd_estabelecimento_w)
  and (cd_convenio		= cd_convenio_w)
  and (cd_categoria		= cd_categoria_w)
  and (coalesce(ie_situacao,'A')	= 'A')
  and	(dt_inicio_vigencia	=
	(SELECT max(dt_inicio_vigencia)
	from	convenio_amb a
	where (a.cd_estabelecimento	= cd_estabelecimento_w)
	and (a.cd_convenio		= cd_convenio_w)
	and (a.cd_categoria		= cd_categoria_w)
	and (coalesce(a.ie_situacao,'A')	= 'A')
	and (a.dt_inicio_vigencia	<= dt_execucao_w)));


if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
	cd_medico_filtro_w    := cd_medico_propaci_w;
else
	cd_medico_filtro_w    := cd_medico_resp_w;
end if;

select	coalesce(max(obter_funcao_ativa),0)
into STRICT	cd_funcao_w
;

select 	obter_se_medico_credenciado(cd_estabelecimento_w, cd_medico_filtro_w, cd_convenio_w, null, cd_especialidade_w,
				    cd_categoria_w, cd_setor_atendimento_w, cd_plano_convenio_w, null, ie_tipo_atendimento_w, null, null)
into STRICT	ie_credenciado_w
;

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	cd_setor_regra_w,
	nr_interno_conta_ww,
	ie_vincular_proc_princ_w,
	ie_dispara_kit_mat_w,
	ie_duplicar_proc_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (cd_setor_regra_w IS NOT NULL AND cd_setor_regra_w::text <> '') then
		begin
		if (cd_setor_regra_w = cd_setor_atendimento_w) then
			nr_seq_regra_w	:= nr_sequencia_w;
		end if;
		end;
	else
		nr_seq_regra_w	:= nr_sequencia_w;
	end if;
	
	end;
end loop;
close c01;

RAISE NOTICE '%', nr_seq_regra_w;
qt_proc_lib_evolucao_w	:= 0;

open c02;
loop
fetch c02 into
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_exame_w,
		cd_material_w,
		cd_unid_medida_w,
		qt_lancamento_w,
		ie_medico_atendimento_w,
		ie_local_estoque_w,
		ie_funcao_medico_w,
		tx_procedimento_w,
		ie_regra_guia_w,
		nr_seq_proc_interno_ww,
		ie_consiste_item_w,
    	ie_consiste_proc_int_w,
		nr_seq_lanc_proc_interno_w,
		ie_proc_princ_atend_w,
		nr_seq_acao_regra_w,
		cd_estab_item_w,
		cd_setor_item_w,
		nr_min_duracao_w,
		cd_cnpj_prestador_w,
		cd_cid_doenca_w,
		cd_medico_lanc_aut_pac_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	begin


	if (coalesce(tx_procedimento_w::text, '') = '') 	or (tx_procedimento_w	= 0)		then
		tx_procedimento_w	:= 100;
	end if;

	/* inicializa medico quando ie_medico_atendimento = 'S' */


	/* primeiro = medico executor, segundo = medico do atendimento */

	cd_medico_executor_w		:= '';

	if (ie_medico_atendimento_w <> 'N') then
		begin

		if (ie_medico_atendimento_w = 'S') then
			begin
			if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
				cd_medico_executor_w    := cd_medico_propaci_w;
			else
				cd_medico_executor_w    := cd_medico_resp_w;
			end if;
			end;
		elsif (ie_medico_atendimento_w = 'P') then
			cd_medico_executor_w    := cd_medico_prescr_w;
		elsif (ie_medico_atendimento_w = 'E') then
			cd_medico_executor_w    := cd_medico_propaci_w;			
		elsif (ie_medico_atendimento_w = 'Y') then
			cd_medico_executor_w    := coalesce(cd_medico_prescr_w, cd_medico_resp_w);			
		elsif (ie_medico_atendimento_w = 'X') then
			cd_medico_executor_w    := coalesce(cd_medico_exec_item_w, coalesce(cd_medico_prescr_w, cd_medico_resp_w));
		elsif (ie_medico_atendimento_w = 'L') then			
			cd_medico_executor_w    :=  coalesce(cd_medico_parecer_w,cd_medico_resp_w);
		end if;			
		end;
	end if;

  /*tratar para ir para o final caso o proc interno da acao da regra esteja inativo*/

  if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
		select	coalesce(max(ie_situacao),'A')
		into STRICT	ie_situacao_w
		from	proc_interno
		where	nr_sequencia = nr_seq_proc_interno_ww;

		if (ie_situacao_w = 'I') then
			goto continue_loop;
		end if;
  end if;

	/* felipe - os 48237 - 12/01/2007 - busca o procedimento do proc. interno a ser executado */

	if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
		SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_ww, nr_prescricao_w, nr_atendimento_p, nr_interno_conta_w, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;

	/* verifica se procedimento de alta ja foi executado    bola 08072002 */

	begin
	qt_proc_alta_w		:= 0;
	qt_proc_lib_evolucao_w	:= 0;	
	end;

	ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, nr_interno_conta_w, cd_procedimento_w, ie_origem_proced_w,
				ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w, nm_usuario_p,
				cd_estabelecimento_w, null, 0,cd_setor_atendimento_w);

        
    /*Apos obter o codigo do procedimento atraves do proc interno testar novamente para ver se o codigo esta ativo.*/

    if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
      select 	coalesce(max(ie_situacao),'A')
      into STRICT	ie_situacao_w
      from	procedimento
      where	cd_procedimento	 = cd_procedimento_w
      and	ie_origem_proced = ie_origem_proced_w;
		
      if (ie_situacao_w = 'I') then
        goto continue_loop;
      end if;
    end if;

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (qt_proc_alta_w	= 0) 		and (qt_proc_lib_evolucao_w = 0) and (ie_consiste_item_ww = 'S') then
		begin
		RAISE NOTICE '%', cd_procedimento_w;
		select nextval('procedimento_paciente_seq')
		into STRICT nr_sequencia_w;

		if (nr_seq_propaci_w = 0) then
			dt_proc_propaci_w := null;
		end if;

		cd_atividade_prof_bpa_w	:= null;
		if (ie_origem_proced_w	= 3) then
			begin
			select 	max(cd_atividade_prof_bpa)
			into STRICT	cd_atividade_prof_bpa_w
			from	procedimento
			where	cd_procedimento	= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proced_w;

			if (ie_tipo_convenio_w = 3) and (cd_atividade_prof_bpa_w IS NOT NULL AND cd_atividade_prof_bpa_w::text <> '') then
				begin
				select	ie_tipo_atend_bpa
				into STRICT	ie_tipo_atend_bpa_w
				from	sus_atividade_prof_proc
				where	cd_procedimento			= cd_procedimento_w
				and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
				exception
					when others then
					ie_tipo_atend_bpa_w	:= null;
				end;
				
				begin
				select	ie_grupo_atend_bpa
				into STRICT	ie_grupo_atend_bpa_w
				from	sus_atividade_prof_proc
				where	cd_procedimento			= cd_procedimento_w
				and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
				exception
					when others then
					ie_grupo_atend_bpa_w	:= null;
				end;
			end if;

			end;
		end if;

		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_profissional_w, coalesce(cd_medico_regra_w,cd_medico_executor_w), dt_execucao_w, nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_profissional_w;

		if (cd_cgc_regra_w IS NOT NULL AND cd_cgc_regra_w::text <> '') then
			cd_cgc_w	:= cd_cgc_regra_w;			
		end if;
		
		/*os60881 - andre regra da via de acesso*/

		select	obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, cd_convenio_w)
		into STRICT	ie_via_acesso_w
		;	

		if (cd_estab_item_w IS NOT NULL AND cd_estab_item_w::text <> '') and (cd_setor_item_w IS NOT NULL AND cd_setor_item_w::text <> '') then
			
			select	coalesce(count(*),0)
			into STRICT	qt_passagem_w
			from	atend_paciente_unidade
			where	nr_atendimento 			= nr_atendimento_p
			and	cd_setor_atendimento		= cd_setor_item_w
			and	PKG_DATE_UTILS.start_of(dt_entrada_unidade,'dd',0) = PKG_DATE_UTILS.start_of(dt_execucao_w,'dd',0);
			
			if (qt_passagem_w = 0) then
				CALL gerar_passagem_setor_atend(nr_atendimento_p, cd_setor_item_w, dt_execucao_w, 'N', nm_usuario_p);
			end if;
			

			select	coalesce(max(nr_seq_interno),0)
			into STRICT	nr_seq_setor_item_w
			from	atend_paciente_unidade
			where	nr_atendimento 			= nr_atendimento_p
			and	cd_setor_atendimento		= cd_setor_item_w
			and	PKG_DATE_UTILS.start_of(dt_entrada_unidade,'dd',0) = PKG_DATE_UTILS.start_of(dt_execucao_w,'dd',0);
			

			if (nr_seq_setor_item_w > 0) then
				begin
				select	nr_seq_interno,
					dt_entrada_unidade,
					cd_setor_atendimento
				into STRICT	nr_seq_atepacu_w,
					dt_entrada_unidade_w,
					cd_setor_atendimento_w
				from	atend_paciente_unidade
				where	nr_seq_interno		= nr_seq_setor_item_w;
				exception
				when others then
					nr_seq_setor_item_w	:= nr_seq_setor_item_w;
				end;
			end if;
		end if;

	

		if (coalesce(nr_min_duracao_w,0)	> 0) then
			begin
			select	coalesce(max(ie_forma_apresentacao),0)
			into STRICT	ie_forma_apresentacao_w
			from	procedimento
			where	cd_procedimento		= cd_procedimento_w
			and		ie_origem_proced	= ie_origem_proced_w;
			
			if (ie_forma_apresentacao_w	= 4) then
				dt_inicio_procedimento_w		:= (coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())) - (nr_min_duracao_w / 1440));
			end if;
			exception
				when others then
					dt_inicio_procedimento_w	:= null;
				end;
			
		end if;
		
		/* obter regra de ajuste do procedimento para pegar a regra preco taxa correta */

		cd_conv_glosa_w	:= cd_convenio_w;
		cd_categ_glosa_w:= cd_categoria_w;
		
		begin
		select	coalesce(max(cd_setor_atendimento),0)
		into STRICT	cd_setor_atend_prescr_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_w;
		exception
		when others then
			cd_setor_atend_prescr_w := 0;
		end;
		
		nr_seq_origem_w := coalesce((obter_dados_categ_conv(nr_atendimento_p,'OC'))::numeric ,0);
		
		SELECT * FROM glosa_procedimento(
				cd_estabelecimento_w, nr_atendimento_p, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), cd_procedimento_w, ie_origem_proced_w, coalesce(qt_lancamento_w,1), cd_tipo_acomodacao_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_ww, null, cd_plano_convenio_w, ie_clinica_w, null, cd_medico_executor_w, null, cd_conv_glosa_w, cd_categ_glosa_w, ds_retorno_numerico_w, ds_retorno_char_w, ds_retorno_char_w, ds_retorno_numerico_w, ds_retorno_numerico_w, ds_retorno_char_w, ds_retorno_char_w, ie_glosa_w, ds_retorno_numerico_w, nr_seq_regra_preco_w, ds_retorno_numerico_w, ds_retorno_numerico_w, cd_motivo_exc_conta_ww, ds_retorno_char_w, ds_retorno_numerico_w, ds_retorno_char_w, ds_retorno_numerico_w, ds_retorno_char_w, nr_seq_regra_ajuste_w, null, null, null, null, null, null, null, cd_setor_atend_prescr_w, null, null, null, nr_seq_origem_w, nr_seq_classif_medico_w) INTO STRICT cd_conv_glosa_w, cd_categ_glosa_w, ds_retorno_numerico_w, ds_retorno_char_w, ds_retorno_char_w, ds_retorno_numerico_w, ds_retorno_numerico_w, ds_retorno_char_w, ds_retorno_char_w, ie_glosa_w, ds_retorno_numerico_w, nr_seq_regra_preco_w, ds_retorno_numerico_w, ds_retorno_numerico_w, cd_motivo_exc_conta_ww, ds_retorno_char_w, ds_retorno_numerico_w, ds_retorno_char_w, ds_retorno_numerico_w, ds_retorno_char_w, nr_seq_regra_ajuste_w;
				
		select 	coalesce(max(ie_classificacao),'1')
		into STRICT	ie_classificacao_w
		from 	procedimento
		where 	cd_procedimento = cd_procedimento_w
		and 	ie_origem_proced = ie_origem_proced_w;
		
		cd_motivo_exc_conta_w:= null;
		
		/*      tratar casos em que o convenio nao paga e portanto devem ser zerados */

		if (ie_glosa_w = 'Z') then
			select	max(cd_motivo_exc_conta)
			into STRICT	cd_motivo_exc_conta_w
			from	parametro_faturamento
			where	cd_estabelecimento	= cd_estabelecimento_w;
	
			nr_seq_conta_origem_w		:= nr_interno_conta_w;
			nr_interno_conta_ww		:= null;
		end if;

		/*      tratar casos em que o se deseja excluir o servico da conta com os valores calculados */

		if (ie_glosa_w = 'E') then
			cd_motivo_exc_conta_w	:= cd_motivo_exc_conta_ww;
		end if;	
		
		insert into procedimento_paciente(
			nr_sequencia     		,
			nr_atendimento          ,
			dt_entrada_unidade      ,
			cd_procedimento         ,
			dt_conta                ,
			dt_procedimento         ,
			qt_procedimento         ,
			dt_atualizacao          ,
			nm_usuario              ,
			cd_convenio             ,
			cd_categoria            ,
			tx_medico               ,
			tx_anestesia            ,
			tx_procedimento         ,
			cd_acao                 ,
			cd_setor_atendimento    ,
			ie_origem_proced        ,
			ie_valor_informado      ,
			nm_usuario_original     ,
			cd_setor_receita	,
			cd_situacao_glosa	,
			cd_cgc_prestador	,
			nr_doc_convenio		,
			nr_seq_proc_princ	,
			qt_porte_anestesico	,
			cd_procedimento_princ	,
			dt_procedimento_princ,
			nr_seq_atepacu,
			ie_auditoria,
			ds_observacao,
			nr_seq_exame,
			cd_senha,
			cd_atividade_prof_bpa,
			cd_medico_req,
			nr_prescricao,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			nr_seq_regra_lanc,
			ie_proc_princ_atend,
			ie_via_acesso,
			ie_tecnica_utilizada,
			ie_integracao,
			ie_tipo_guia,
			nr_interno_conta,
			cd_pessoa_fisica,
			nr_cirurgia,
			nr_seq_proc_interno,
			nr_seq_reg_template,
			dt_inicio_procedimento,
			nr_seq_regra_preco,
			nr_seq_ajuste_proc,
			vl_medico,
			vl_anestesista,
			vl_auxiliares,
			vl_custo_operacional,
			vl_materiais,
			vl_procedimento,
			nr_seq_conta_origem,
			cd_motivo_exc_conta,
			cd_doenca_cid,
			cd_medico_executor)
		values (
			nr_sequencia_w  	,
			nr_atendimento_p        ,
			dt_entrada_unidade_w,
			cd_procedimento_w       ,
			coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
			coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
			coalesce(qt_lancamento_w,1),
			clock_timestamp()                 ,
			nm_usuario_p            ,
			CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END ,
			CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END ,
			100			,
			100			,
			CASE WHEN tx_procedimento_w=100 THEN tx_proc_propaci_w  ELSE tx_procedimento_w END ,
			'1'				,
			cd_setor_atendimento_w  ,
			ie_origem_proced_w	,
			'N'			,
			nm_usuario_p            ,
			cd_setor_atendimento_w  ,
			0 				,
			coalesce(cd_cnpj_prestador_w,cd_cgc_w),
			CASE WHEN ie_regra_guia_w='RC' THEN nr_doc_convenio_w WHEN ie_regra_guia_w='RT' THEN  null  ELSE nr_doc_propaci_w END ,
			CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN  CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE nr_sequencia_p END   ELSE null END ,
			CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE qt_porte_anestesico_w END ,
			CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE cd_proc_propaci_w END ,
			dt_proc_propaci_w,
			CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w  ELSE coalesce(nr_seq_atepacu_proc_w,nr_seq_atepacu_w) END ,
			'N',
			/*decode(nr_seq_evento_p, 30, 'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p || ' Prescr.: ' ||  
				decode(nr_prescr_w,0,nvl(somente_numero(ds_adicional_3_p),0), nr_prescr_w), 'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p),*/
			CASE WHEN nr_seq_evento_p=30 THEN  wheb_mensagem_pck.get_texto(304245, 'NR_SEQ_REGRA='  || nr_seq_regra_w  || ';' ||											'NR_SEQ_EVENTO=' || nr_seq_evento_p || ';' || 											'NR_PRESCRICAO=' || CASE WHEN nr_prescr_w=0 THEN coalesce(somente_numero(ds_adicional_3_p),0)  ELSE nr_prescr_w END )  ELSE wheb_mensagem_pck.get_texto(304246, 'NR_SEQ_REGRA='  || nr_seq_regra_w  || ';' || 											'NR_SEQ_EVENTO=' || nr_seq_evento_p) END ,
			nr_seq_exame_w,
			cd_senha_w,
			cd_atividade_prof_bpa_w,
			cd_medico_req_w,
			CASE WHEN nr_seq_evento_p=34 THEN  nr_prescricao_w  ELSE null END ,
			ie_tipo_atend_bpa_w,
			ie_grupo_atend_bpa_w,
			nr_seq_regra_w,
			ie_proc_princ_atend_w,
			ie_via_acesso_w,
			null,
      ie_integracao_w, ie_tipo_guia_w, CASE WHEN nr_interno_conta_ww=0 THEN  null  ELSE nr_interno_conta_ww END ,
			cd_profissional_w, nr_cirurgia_w,nr_seq_proc_interno_ww,
			nr_seq_reg_template_w,
			dt_inicio_procedimento_w,
			CASE WHEN ie_classificacao_w=1 THEN  null  ELSE nr_seq_regra_preco_w END ,
			nr_seq_regra_ajuste_w,
			0, 0, 0, 0, 0, 0,
			nr_seq_conta_origem_w,
			cd_motivo_exc_conta_w,
			substr(cd_cid_doenca_w,1,4),
			cd_medico_lanc_aut_pac_w);
		end;
	else
		begin
		qt_mat_alta_w	:= 0;
		ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, nr_interno_conta_w, cd_material_w, null,
					ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w,
					nm_usuario_p,cd_estabelecimento_w, null, 0,cd_setor_atendimento_w);

		if (qt_mat_alta_w	= 0) and (ie_consiste_item_ww = 'S') then
			begin
			if (ie_local_estoque_w = 'N') then
				cd_local_estoque_w	:= null;
			elsif (ie_local_estoque_w = 'S') then
				cd_local_estoque_w	:= cd_local_estoque_p;
			elsif (ie_local_estoque_w = 'U') then
				begin
				select b.cd_local_estoque
				into STRICT 	cd_local_estoque_w
				from setor_atendimento b, usuario a
				where b.cd_setor_atendimento 	= a.cd_setor_atendimento
			  	and a.nm_usuario		= nm_usuario_p;
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
			elsif (ie_local_estoque_w = 'A') then				
				
				select 	wheb_usuario_pck.get_cd_setor_atendimento
				into STRICT	cd_setor_ativo_w
				;
				
				begin
				select	cd_local_estoque
				into STRICT	cd_local_estoque_w
				from 	setor_atendimento
				where	cd_setor_atendimento 	= cd_setor_ativo_w;  	
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
			elsif (ie_local_estoque_w = 'P') then
				begin
				select cd_local_estoque
				into STRICT 	cd_local_estoque_w
				from setor_atendimento
				where cd_setor_atendimento = cd_setor_atendimento_w;
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
			end if;
			
			if (coalesce(cd_kit_material_w, 0) = 0) then
				begin
				
				select nextval('material_atend_paciente_seq')
				into STRICT nr_sequencia_w;
				
				begin
				
				
				
				insert into material_atend_paciente(
					nr_sequencia     		,
					nr_atendimento          ,
					dt_entrada_unidade      ,
					cd_material             ,
					dt_conta                ,
					dt_atendimento          ,
					qt_material             ,
					qt_executada            ,
					dt_atualizacao          ,
					nm_usuario              ,
					cd_unidade_medida   	,
					cd_convenio             ,
					cd_categoria            ,
					cd_acao                 ,
					cd_local_estoque		,
					cd_setor_atendimento    ,
					ie_valor_informado      ,
					nm_usuario_original     ,
					cd_setor_receita		,
					cd_situacao_glosa		,
					nr_doc_convenio		,
					nr_seq_proc_princ		,
					cd_proced_referencia,
					nr_seq_atepacu,		/* elemar 04/07/2001 */
					ie_auditoria,
					ds_observacao,
					nr_seq_regra_lanc,
					ie_tipo_guia,
					nr_interno_conta,
					nr_cirurgia,
					nr_seq_reg_template,
					vl_unitario,
					vl_material,
					cd_cgc_prestador)
				values (
					nr_sequencia_w  		,
					nr_atendimento_p        ,
					CASE WHEN nr_seq_evento_p=82 THEN  dt_entrada_unidade_intern_w  ELSE coalesce(dt_entrada_unidade_proc_w, dt_entrada_unidade_w) END ,
					cd_material_w           ,
					coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
					coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
	 				qt_lancamento_w,
					qt_lancamento_w,
					clock_timestamp()                 ,
					nm_usuario_p            ,
					cd_unid_medida_w		,
					CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END ,
					CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END ,
					'1'			      ,
					cd_local_estoque_w      ,
					coalesce(cd_setor_atendimento_proc_w, cd_setor_atendimento_w)  ,
					'N'				,
					nm_usuario_p            ,
					cd_setor_atendimento_w  ,
					0				,
					CASE WHEN nr_seq_evento_p=34 THEN  CASE WHEN ie_regra_guia_w='RC' THEN nr_doc_convenio_w WHEN ie_regra_guia_w='RT' THEN  null  ELSE nr_doc_propaci_w END   ELSE nr_doc_convenio_w END ,
					CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE nr_sequencia_p END   ELSE null END ,
					CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE cd_proc_propaci_w END ,
					CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w  ELSE coalesce(nr_seq_atepacu_proc_w, nr_seq_atepacu_w) END     ,
					'N',
					/*decode(nr_seq_evento_p, 30, 'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p || ' Prescr.: ' || 
					nvl(somente_numero(ds_adicional_3_p),0),'LA Regra: '  || nr_seq_regra_w || ' Evento: ' || nr_seq_evento_p),*/
					CASE WHEN nr_seq_evento_p=30 THEN  wheb_mensagem_pck.get_texto(304245, 'NR_SEQ_REGRA='  || nr_seq_regra_w  || ';' ||											'NR_SEQ_EVENTO=' || nr_seq_evento_p || ';' || 											'NR_PRESCRICAO=' || coalesce(somente_numero(ds_adicional_3_p),0))  ELSE wheb_mensagem_pck.get_texto(304246, 'NR_SEQ_REGRA='  || nr_seq_regra_w  || ';' || 											'NR_SEQ_EVENTO=' || nr_seq_evento_p) END ,					
					nr_seq_regra_w, ie_tipo_guia_w, CASE WHEN nr_interno_conta_ww=0 THEN  null  ELSE nr_interno_conta_ww END , 
					nr_cirurgia_w,
					nr_seq_reg_template_w,
					0, 0,
					cd_cnpj_prestador_w);
				exception
					when 	others then
					nr_sequencia_w := 0;
				end;
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
	<<continue_loop>>
	ie_situacao_w := null;
end loop;
close c02;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lanc_apos_conta ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_adicional_1_p text, ds_adicional_2_p text, ds_adicional_3_p text, ds_adicional_4_p text, nr_interno_conta_p bigint) FROM PUBLIC;

