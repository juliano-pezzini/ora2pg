-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hem_gerar_dados_cirurgia ( nr_cirurgia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
C01 CURSOR FOR 
	SELECT	b.nr_seq_proc_interno  -- PROCEDIMENTOS DA CIRURGIA QUE ESTÃO CADASTRADOS NO DIS 
	from	cirurgia a, 
		hem_proc_interno b, 
		hem_procedimento c 
	where	a.nr_cirurgia		= nr_cirurgia_p 
	and b.nr_seq_proc = c.nr_sequencia 
	and	a.nr_seq_proc_interno	= b.nr_seq_proc_interno 
	and	coalesce(a.dt_fim_cirurgia::text, '') = '' 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	
union
 
	SELECT	b.nr_seq_proc_interno  -- PROCEDIMENTOS ADICIONAIS DA CIRURGIA QUE ESTÃO CADASTRADOS NO DIS 
	from	cirurgia a, 
		hem_proc_interno b, 
		hem_procedimento c, 
		prescr_procedimento d 
	where	a.nr_cirurgia		= nr_cirurgia_p 
	and b.nr_seq_proc = c.nr_sequencia 
	and	a.nr_prescricao		= d.nr_prescricao 
	and	d.nr_seq_proc_interno	= b.nr_seq_proc_interno 
	and	coalesce(c.ie_situacao,'A') = 'A' 
	and	coalesce(a.dt_fim_cirurgia::text, '') = '';
					
nr_seq_proc_w		bigint;
nr_seq_proc_interno_w	bigint;


BEGIN 
if (coalesce(nr_cirurgia_p,0) > 0) then 
	begin 
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
			 
		nr_seq_proc_w := hem_inserir_procedimento_pepo(nr_cirurgia_p, nr_seq_proc_interno_w, nm_usuario_p, nr_seq_proc_w);
		 
		if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then 
		 
			insert into hem_proc_partic( 
				nr_sequencia, 
				nr_seq_proc, 
				dt_atualizacao, 
				nm_usuario, 
				cd_pessoa_fisica, 
				cd_funcao, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec 
			)(	SELECT	nextval('hem_proc_partic_seq'), 
					nr_seq_proc, 
					clock_timestamp(), 
					nm_usuario_p, 
					cd_pessoa_fisica, 
					ie_funcao, 
					clock_timestamp(), 
					nm_usuario_p 
				from ( 
					SELECT	a.nr_sequencia nr_seq_proc, 
						b.cd_pessoa_fisica, 
						b.ie_funcao 
					from	hem_proc a, 
						cirurgia_participante b 
					where	a.nr_seq_cirurgia	= b.nr_cirurgia 
					and	a.nr_seq_cirurgia	= nr_cirurgia_p 
					and	a.nr_sequencia		= nr_seq_proc_w 
					
union
 
					select	a.nr_sequencia nr_seq_proc, 
						b.cd_medico_cirurgiao, 
						'' --ie_funcao 
					from	hem_proc a, 
						cirurgia b 
					where	a.nr_seq_cirurgia	= b.nr_cirurgia 
					and	a.nr_seq_cirurgia	= nr_cirurgia_p 
					and	a.nr_sequencia		= nr_seq_proc_w 
					and not exists (select 1 
								  from cirurgia_participante c 
								  where a.nr_seq_cirurgia = c.nr_cirurgia 
								  and	 b.cd_medico_cirurgiao = c.cd_pessoa_fisica)) alias6 
			);
		end if;
		end;
	end loop;
	close C01;
	end;
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hem_gerar_dados_cirurgia ( nr_cirurgia_p bigint, nm_usuario_p text) FROM PUBLIC;

