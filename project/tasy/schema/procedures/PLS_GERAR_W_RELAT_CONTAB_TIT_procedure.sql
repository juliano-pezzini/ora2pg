-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_relat_contab_tit ( cd_conta_contabil_p text, ie_faturamento_p text, ie_informacao_p text, nr_titulo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
ds_conta_contabil_w		varchar(255);
ds_cobertura_w			varchar(255);
ds_natureza_w			varchar(255);
nm_pessoa_titulo_w		varchar(80);
nm_pessoa_princ_w		varchar(80);
nr_documento_w			varchar(30);
cd_conta_contabil_w		varchar(20);
cd_pessoa_princ_w		varchar(14);
ie_tipo_titulo_w		varchar(3);
ie_liquidacao_w			varchar(1);
vl_item_w			double precision;
vl_mensalidade_w		double precision;
vl_saldo_titulo_w		double precision;
vl_titulo_w			double precision;
vl_recebido_w			double precision;
nr_titulo_w			bigint;
nr_seq_mensalidade_w		bigint;
nr_seq_pagador_w		bigint;
nr_contrato_w			bigint;
nr_parcela_w			bigint;
qt_result_w			bigint;
nr_seq_contrato_w		bigint;
dt_emissao_w			timestamp;
dt_vencimento_w			timestamp;
dt_mesano_ref_w			timestamp;
dt_contrato_w			timestamp;
dt_rescisao_w			timestamp;
dt_liquidacao_w			timestamp;
dt_recebimento_w		timestamp;
dt_ini_cobert_w			timestamp;
dt_fim_cobert_w			timestamp;
ds_tipo_w			varchar(255) := 'Faturamento';
ie_tipo_w			varchar(100);
dt_final_w			timestamp;
dt_inicio_w			timestamp;
nr_seq_contrato_princ_w		pls_contrato.nr_contrato_principal%type;

C01 CURSOR FOR 
	SELECT	/* +USE_CONCAT*/
 
		a.nr_titulo 
	from	pls_lote_mensalidade	d, 
		pls_mensalidade			c,	 
		titulo_receber_classif	b, 
		titulo_receber			a 
	where	a.nr_seq_mensalidade	= c.nr_sequencia 
	and	d.nr_sequencia		= c.nr_seq_lote 
	and	a.nr_titulo		= b.nr_titulo 
	and	ie_faturamento_p in ('F','A') 
	and	ie_informacao_p = 'S' 
	and	((a.nr_titulo	= nr_titulo_p) or (coalesce(nr_titulo_p::text, '') = '')) 
	and (c.dt_referencia < dt_final_w 
	or	d.dt_contabilizacao < dt_final_w) 
	and	((b.cd_conta_contabil = cd_conta_contabil_p) or (coalesce(cd_conta_contabil_p::text, '') = '')) 
	and	a.ie_situacao <> 3 
	
union all
 
	SELECT	a.nr_titulo 
	from	titulo_rec_liq_cc	f, 
		titulo_receber_liq	e, 
		pls_lote_mensalidade	d, 
		pls_mensalidade		c, 
		titulo_receber		a 
	where	a.nr_seq_mensalidade	= c.nr_sequencia 
	and	d.nr_sequencia		= c.nr_seq_lote 
	and	e.nr_titulo		= a.nr_titulo 
	and	e.nr_sequencia		= f.nr_seq_baixa 
	and	a.nr_titulo		= f.nr_titulo 
	and	ie_faturamento_p in ('F','A') 
	and	ie_informacao_p = 'S' 
	and	((a.nr_titulo	= nr_titulo_p) or (coalesce(nr_titulo_p::text, '') = '')) 
	and (c.dt_referencia < dt_final_w 
	or	d.dt_contabilizacao < dt_final_w) 
	and	((f.cd_conta_rec_pls = cd_conta_contabil_p) or (coalesce(cd_conta_contabil_p::text, '') = '')) 
	and	a.ie_situacao <> 3 
	and	not exists (select	1 
				from	titulo_receber_classif x 
				where	x.nr_titulo	= a.nr_titulo);


BEGIN 
delete from w_pls_relat_contab_titulo where nm_usuario = nm_usuario_p;
dt_final_w 	:= fim_dia(dt_final_p);
dt_inicio_w 	:= trunc(dt_inicial_p);
 
open C01;
loop 
fetch C01 into 
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	vl_item_w := 0;
	 
	select	a.vl_titulo, 
		a.dt_emissao, 
		a.dt_vencimento, 
		a.nr_seq_mensalidade, 
		a.nr_documento, 
		a.ie_tipo_titulo, 
		a.dt_liquidacao, 
		substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,200), 
		obter_saldo_titulo_receber(a.nr_titulo,dt_final_p) 
	into STRICT	vl_titulo_w, 
		dt_emissao_w, 
		dt_vencimento_w, 
		nr_seq_mensalidade_w, 
		nr_documento_w, 
		ie_tipo_titulo_w, 
		dt_liquidacao_w, 
		nm_pessoa_titulo_w, 
		vl_saldo_titulo_w 
	from	titulo_receber	a 
	where	a.nr_titulo	= nr_titulo_w;
	 
	select	obter_valor_tit_rec_contab(nr_titulo_w,cd_conta_contabil_p,dt_final_w) 
	into STRICT	vl_item_w 
	;	
	 
	if (vl_item_w <> 0) then		 
		if (nr_seq_mensalidade_w IS NOT NULL AND nr_seq_mensalidade_w::text <> '') then 
			select	b.dt_mesano_referencia, 
				a.nr_seq_pagador, 
				(select	max(v.ie_segmentacao) 
				from	pls_plano			v, 
					pls_mensalidade_segurado	c 
				where	v.nr_sequencia		= c.nr_seq_plano 
				and	c.nr_seq_mensalidade	= a.nr_sequencia) ds_cobertura, 
				a.nr_parcela, 
				a.vl_mensalidade 
			into STRICT	dt_mesano_ref_w, 
				nr_seq_pagador_w, 
				ds_cobertura_w, 
				nr_parcela_w, 
				vl_mensalidade_w 
			from	pls_lote_mensalidade		b, 
				pls_mensalidade			a 
			where	a.nr_seq_lote			= b.nr_sequencia 
			and	a.nr_sequencia			= nr_seq_mensalidade_w;
			 
			if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then 
				select	max(b.nr_contrato), 
					max(b.dt_contrato), 
					max(b.dt_rescisao_contrato), 
					pls_obter_dados_produto_contr(max(b.nr_sequencia),'TC') ds_natureza, 
					max(nr_seq_contrato) 
				into STRICT	nr_contrato_w, 
					dt_contrato_w, 
					dt_rescisao_w, 
					ds_natureza_w, 
					nr_seq_contrato_w 
				from	pls_contrato		b, 
					pls_contrato_pagador	a 
				where	a.nr_seq_contrato	= b.nr_sequencia 
				and	a.nr_sequencia		= nr_seq_pagador_w;
					 
				select	max(coalesce(obter_cpf_pessoa_fisica(a.cd_pessoa_fisica),a.cd_cgc)), 
					max(substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,255)) 
				into STRICT	cd_pessoa_princ_w, 
					nm_pessoa_princ_w 
				from	pls_contrato_pagador	a 
				where	a.nr_seq_contrato	= nr_seq_contrato_w 
				and	a.ie_tipo_pagador	= 'P';
				 
				if (coalesce(cd_pessoa_princ_w::text, '') = '' and coalesce(nm_pessoa_princ_w::text, '') = '') then 
					select	max(nr_contrato_principal) 
					into STRICT	nr_seq_contrato_princ_w 
					from	pls_contrato 
					where	nr_sequencia = nr_seq_contrato_w;
					 
					if (coalesce(nr_seq_contrato_princ_w,0) > 0) then 
						select	max(coalesce(obter_cpf_pessoa_fisica(a.cd_pessoa_fisica),a.cd_cgc)), 
							max(substr(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc),1,255)) 
						into STRICT	cd_pessoa_princ_w, 
							nm_pessoa_princ_w 
						from  	pls_contrato_pagador	a 
						where 	nr_seq_contrato 	= nr_seq_contrato_princ_w 
						and  	ie_tipo_pagador 	= 'P';
					end if;
				end if;				
					 
				select	add_months(dt_contrato_w,pls_obter_meses_entre_datas(dt_contrato_w,dt_final_p)), 
					add_months(dt_contrato_w,pls_obter_meses_entre_datas(dt_contrato_w,dt_final_p)) + 30 
				into STRICT	dt_ini_cobert_w, 
					dt_fim_cobert_w 
				;
			end if;
		end if;
		 
		if (cd_conta_contabil_p IS NOT NULL AND cd_conta_contabil_p::text <> '') then 
			select	substr(a.ds_conta_contabil,1,255) 
			into STRICT	ds_conta_contabil_w 
			from	conta_contabil	a 
			where	cd_conta_contabil	= cd_conta_contabil_p;
		else 
			ds_conta_contabil_w	:= 'NÃ£o informada';
		end if;
			 
		insert into w_pls_relat_contab_titulo(nr_sequencia, 
			nm_usuario, 
			dt_atualizacao, 
			nm_usuario_nrec, 
			dt_atualizacao_nrec, 
			nr_titulo, 
			dt_emissao, 
			dt_vencimento, 
			ie_tipo_titulo, 
			cd_conta_contabil, 
			ds_conta_contabil, 
			ds_faturamento, 
			vl_item, 
			nr_contrato, 
			nm_pessoa_titulo, 
			nm_pessoa_princ, 
			cd_pessoa_princ, 
			dt_rescisao, 
			dt_contrato, 
			ds_cobertura, 
			vl_mensalidade, 
			dt_mesano_ref, 
			nr_parcela, 
			ds_natureza) 
		values (nextval('w_pls_relat_contab_titulo_seq'), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nr_titulo_w, 
			dt_emissao_w, 
			dt_vencimento_w, 
			ie_tipo_titulo_w, 
			cd_conta_contabil_p, 
			ds_conta_contabil_w, 
			ds_tipo_w, 
			vl_item_w, 
			nr_contrato_w, 
			nm_pessoa_titulo_w, 
			nm_pessoa_princ_w, 
			cd_pessoa_princ_w, 
			dt_rescisao_w, 
			dt_contrato_w, 
			ds_cobertura_w, 
			vl_mensalidade_w, 
			dt_mesano_ref_w, 
			nr_parcela_w, 
			ds_natureza_w);
	end if;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_relat_contab_tit ( cd_conta_contabil_p text, ie_faturamento_p text, ie_informacao_p text, nr_titulo_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

