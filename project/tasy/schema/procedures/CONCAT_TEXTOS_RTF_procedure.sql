-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE concat_textos_rtf (ds_texto_origem_p INOUT text, ds_texto_novo_p text) AS $body$
DECLARE


i 							bigint := 1;
ds_fragmento_w 				varchar(1000) := '';
ds_fragmento_aux_w 			varchar(1000) := '';
ds_tag_color_origem_w 		varchar(1000) := '';
ds_tag_color_novo_w 		varchar(1000) := '';
ds_tag_color_origem_alt_w 	varchar(1000) := '';
ds_tag_color_novo_alt_w 	varchar(1000) := '';
qt_tags_color_origem_w		bigint;
qt_tags_color_novo_w		bigint;
ds_texto_novo_w				text;


BEGIN
ds_tag_color_origem_alt_w := substr(ds_texto_origem_p,
							position('{\colortbl' in ds_texto_origem_p), 
							position(';}' in substr(ds_texto_origem_p, position('{\colortbl' in ds_texto_origem_p), length(ds_texto_origem_p))));
							
ds_tag_color_novo_alt_w := substr(ds_texto_novo_p,
						position('{\colortbl' in ds_texto_novo_p), 
						position(';}' in substr(ds_texto_novo_p, position('{\colortbl' in ds_texto_novo_p), length(ds_texto_novo_p)))+1);

ds_tag_color_origem_w := ds_tag_color_origem_alt_w;
ds_tag_color_novo_w := ds_tag_color_novo_alt_w;

/*Remove último } * /
ds_texto_novo_w := regexp_replace(ds_texto_novo_p, '}', '', instr(ds_texto_novo_p ,' ',-1));*/
ds_texto_novo_w := ds_texto_novo_p;
ds_texto_novo_w := replace(ds_texto_novo_w,ds_tag_color_novo_w, ' ');

/*Remove cabeçalho do RTF para anexar no RTF antigo * /
if regexp_like(ds_texto_origem_p, '\par') then 
	ds_texto_origem_p := regexp_replace(ds_texto_origem_p,  '^.*', chr(13)||chr(13), 1);
end if;*/
SELECT (LENGTH(ds_tag_color_origem_w) - LENGTH(replace(ds_tag_color_origem_w, ';', '')))-1 /*consulta para objter quantas combinacaoes RGB tem na tag*/
INTO STRICT 	qt_tags_color_origem_w
;

SELECT (LENGTH(ds_tag_color_novo_w) - LENGTH(replace(ds_tag_color_novo_w, ';', '')))-1 /*consulta para objter quantas combinacaoes RGB tem na tag*/
INTO STRICT 	qt_tags_color_novo_w
;

begin
	while(i <= qt_tags_color_novo_w) loop

		ds_fragmento_aux_w := substr(ds_tag_color_novo_alt_w, (position('{\colortbl ;' in ds_tag_color_novo_alt_w)+12),length(ds_tag_color_novo_alt_w));
		ds_fragmento_w := substr(ds_fragmento_aux_w, 1, position(';' in ds_fragmento_aux_w));
		ds_tag_color_novo_alt_w := replace(ds_tag_color_novo_alt_w, ('{\colortbl ;'||ds_fragmento_w), '{\colortbl ;');
		ds_tag_color_origem_alt_w := ds_tag_color_origem_alt_w || ds_fragmento_w;
		
		ds_texto_novo_w := replace(ds_texto_novo_w,'\cf'||i, '\cf-XpTo'|| (qt_tags_color_origem_w+i) ); /*Uso do XpTo apenas para nao dar replace numa mesma tag duas vezes*/
		i := i + 1;
	end loop;
end;
ds_texto_novo_w := replace(ds_texto_novo_w, '\cf-XpTo', '\cf');
ds_texto_origem_p := replace(ds_texto_origem_p, ds_tag_color_origem_w, ds_tag_color_origem_alt_w) || ds_texto_novo_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE concat_textos_rtf (ds_texto_origem_p INOUT text, ds_texto_novo_p text) FROM PUBLIC;

