-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_mat_atend_pac_opme ( nr_seq_agenda_p bigint, nr_sequencia_opme_p bigint, qt_material_atendido_p bigint, cd_local_estoque_p bigint, cd_motivo_baixa_p bigint, cd_material_p bigint, nm_usuario_p text, nr_seq_lote_fornec_p bigint) AS $body$
DECLARE

 
nr_seq_prescr_w			bigint;
nr_seq_mat_atend_w		bigint;
nr_atendimento_w		bigint;
cd_setor_atendimento_w		integer;
cd_setor_atendimento_ww		integer;
cd_material_w			integer;
dt_entrada_unidade_w		timestamp;
cd_unidade_medida_w		varchar(30);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
nr_seq_atepacu_w		bigint;
nr_sequencia_w			integer;
dt_atualizacao_w		timestamp;
cd_local_estoque_w		smallint;
cd_senha_w			varchar(20);
cd_cgc_w			varchar(14);
nr_seq_tipo_baixa_w		bigint;
ie_atualiza_estoque_w		varchar(1);
ie_atualiza_conta_w		varchar(1);	
nr_prescricao_w			bigint;
dt_prescricao_w			timestamp;
cd_estabelecimento_w		bigint;
nr_cirurgia_w			bigint;
nr_sequencia_prescricao_w	bigint;
cd_motivo_exc_conta_w		integer;
dt_inicio_cirurgia_w		timestamp;

c01 CURSOR FOR 
	SELECT	b.nr_atendimento, 
		obter_dados_material(a.cd_material,'UMC') cd_unidade_medida, 
		a.cd_cgc, 
		b.nr_cirurgia 
	from	agenda_pac_opme a, 
		agenda_paciente b 
	where	b.nr_sequencia = a.nr_seq_agenda 
	and	(b.ie_opme_integracao IS NOT NULL AND b.ie_opme_integracao::text <> '') 
	and	b.nr_sequencia = nr_seq_agenda_p 
	and	a.cd_material = cd_material_p 
	and	a.nr_sequencia = nr_sequencia_opme_p;


BEGIN 
 
cd_local_estoque_w := cd_local_estoque_p;
 
select	obter_prescr_cir_especial(nr_cirurgia) 
into STRICT	nr_prescricao_w 
from	agenda_paciente 
where	nr_sequencia = nr_seq_agenda_p;
 
select	max(cd_estabelecimento), 
	max(dt_prescricao) 
into STRICT	cd_estabelecimento_w, 
	dt_prescricao_w 
from	prescr_medica 
where	nr_prescricao = nr_prescricao_w;
 
select	max(a.nr_sequencia) 
into STRICT	nr_sequencia_prescricao_w 
from	prescr_material a, 
	prescr_medica c 
where	a.nr_prescricao = c.nr_prescricao 
and	a.nr_prescricao = nr_prescricao_w 
and	a.cd_material = cd_material_p;
 
cd_motivo_exc_conta_w := Obter_Param_Usuario(1750, 32, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_motivo_exc_conta_w);
 
open c01;
loop 
fetch c01 into 
	nr_atendimento_w, 
	cd_unidade_medida_w, 
	cd_cgc_w, 
	nr_cirurgia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
    begin 
 
	select	max(dt_inicio_real), 
			max(cd_setor_atendimento) 
	into STRICT	dt_inicio_cirurgia_w, 
		cd_setor_atendimento_ww 
	from	cirurgia 
	where	nr_cirurgia = nr_cirurgia_w;
 
	select	coalesce(max(nr_seq_interno),0) 
	into STRICT	nr_seq_atepacu_w 
	from	atend_paciente_unidade 
	where	nr_atendimento = nr_atendimento_w 
	and	cd_setor_atendimento = cd_setor_atendimento_ww;
 
	if (nr_seq_atepacu_w = 0) then 
	 
		nr_seq_atepacu_w := Obter_Atepacu_paciente(nr_atendimento_w,'IAA');
	 
	end if;
	 
    select max(cd_setor_atendimento), 
        max(dt_entrada_unidade) 
    into STRICT  cd_setor_atendimento_w, 
        	dt_entrada_unidade_w 
    from  atend_paciente_unidade 
    where  nr_seq_interno = nr_seq_atepacu_w;
 
    select nr_sequencia, 
        ie_atualiza_estoque, 
		ie_conta_paciente 
    into STRICT  nr_seq_tipo_baixa_w, 
        ie_atualiza_estoque_w, 
		ie_atualiza_conta_w 
    from  tipo_baixa_prescricao 
    where  cd_tipo_baixa = cd_motivo_baixa_p 
    and   ie_prescricao_devolucao = 'P';
 
    SELECT * FROM obter_convenio_execucao(nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
 
    select nextval('material_atend_paciente_seq') 
    into STRICT  nr_seq_mat_atend_w 
;
 
    if (ie_atualiza_estoque_w = 'N') then 
        cd_local_estoque_w := null;
    end if;
	 
	if (ie_atualiza_conta_w = 'S') then 
     
		insert into material_atend_paciente(nr_sequencia, 
			nr_atendimento, 
			dt_entrada_unidade, 
			cd_material, 
			dt_atendimento, 
			dt_conta, 
			cd_unidade_medida, 
			qt_material, 
			dt_atualizacao, 
			nm_usuario, 
			cd_convenio, 
			cd_categoria, 
			nr_doc_convenio, 
			ie_tipo_guia, 
			cd_material_prescricao, 
			cd_material_exec, 
			cd_acao, 
			cd_setor_atendimento, 
			qt_executada, 
			vl_unitario, 
			qt_ajuste_conta, 
			ie_valor_informado, 
			ie_guia_informada, 
			ie_auditoria, 
			nm_usuario_original, 
			cd_situacao_glosa, 
			nr_seq_atepacu, 
			cd_local_estoque, 
			cd_cgc_fornecedor, 
			nr_seq_tipo_baixa, 
			nr_cirurgia, 
			nr_prescricao, 
			dt_prescricao, 
			nr_sequencia_prescricao, 
			nr_seq_cor_exec, 
			nr_seq_agenda_pac_opme, 
			nr_seq_lote_fornec) 
		values (nr_seq_mat_atend_w, 
			nr_atendimento_w, 
			dt_entrada_unidade_w, 
			cd_material_p, 
			clock_timestamp(), 
			dt_inicio_cirurgia_w, 
			cd_unidade_medida_w, 
			qt_material_atendido_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_convenio_w, 
			cd_categoria_w, 
			nr_doc_convenio_w, 
			ie_tipo_guia_w, 
			cd_material_p, 
			cd_material_p, 
			'1', 
			cd_setor_atendimento_w, 
			qt_material_atendido_p, 
			0, 
			0, 
			'N', 
			'N', 
			'N', 
			nm_usuario_p, 
			0, 
			nr_seq_atepacu_w, 
			cd_local_estoque_w, 
			cd_cgc_w, 
			nr_seq_tipo_baixa_w, 
			nr_cirurgia_w, 
			nr_prescricao_w, 
			dt_prescricao_w, 
			nr_sequencia_prescricao_w, 
			97, 
			nr_sequencia_opme_p, 
			CASE WHEN coalesce(nr_seq_lote_fornec_p,0)=0 THEN ''  ELSE nr_seq_lote_fornec_p END );
			 
	    CALL Atualiza_Preco_Material(nr_seq_mat_atend_w,nm_usuario_p);
 
	end if;	
	 
	if (ie_atualiza_conta_w = 'N') and (ie_atualiza_estoque_w = 'S') then 
	 
		CALL Gerar_Prescricao_estoque( 
			cd_estabelecimento_w, 
			nr_atendimento_w, 
			dt_entrada_unidade_w, 
			cd_material_p, 
			dt_prescricao_w, 
			1, 
			cd_local_estoque_w, 
			qt_material_atendido_p, 
			cd_setor_atendimento_w, 
			cd_unidade_medida_w, 
			nm_usuario_p, 
			'I', 
			nr_prescricao_w, 
			0, 
			0, 
			0, 
			cd_cgc_w, 
			null, 
			null, 
			0, 
			null, 
			null, 
			null, 
			null, 
			null);
	 
	end if;
	 
	if (ie_atualiza_conta_w = 'N') and (ie_atualiza_estoque_w = 'N') then 
		 
		update	prescr_material 
		set	qt_baixa_especial = qt_material_atendido_p, 
			cd_motivo_baixa	 = cd_motivo_baixa_p 
		where	nr_prescricao	 = nr_prescricao_w 
		and	nr_sequencia 	 = nr_sequencia_prescricao_w;
		 
		if (cd_motivo_exc_conta_w > 0) then 
		 
			insert into material_atend_paciente(nr_sequencia, 
				nr_atendimento, 
				dt_entrada_unidade, 
				cd_material, 
				dt_atendimento, 
				dt_conta, 
				cd_unidade_medida, 
				qt_material, 
				dt_atualizacao, 
				nm_usuario, 
				cd_convenio, 
				cd_categoria, 
				nr_doc_convenio, 
				ie_tipo_guia, 
				cd_material_prescricao, 
				cd_material_exec, 
				cd_acao, 
				cd_setor_atendimento, 
				qt_executada, 
				vl_unitario, 
				qt_ajuste_conta, 
				ie_valor_informado, 
				ie_guia_informada, 
				ie_auditoria, 
				nm_usuario_original, 
				cd_situacao_glosa, 
				nr_seq_atepacu, 
				cd_cgc_fornecedor, 
				nr_seq_tipo_baixa, 
				nr_cirurgia, 
				nr_prescricao, 
				dt_prescricao, 
				nr_sequencia_prescricao, 
				nr_seq_cor_exec, 
				nr_seq_agenda_pac_opme, 
				nr_seq_lote_fornec) 
			values (nr_seq_mat_atend_w, 
				nr_atendimento_w, 
				dt_entrada_unidade_w, 
				cd_material_p, 
				clock_timestamp(), 
				clock_timestamp(), 
				cd_unidade_medida_w, 
				qt_material_atendido_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_convenio_w, 
				cd_categoria_w, 
				nr_doc_convenio_w, 
				ie_tipo_guia_w, 
				cd_material_p, 
				cd_material_p, 
				'1', 
				cd_setor_atendimento_w, 
				qt_material_atendido_p, 
				0, 
				0, 
				'N', 
				'N', 
				'N', 
				nm_usuario_p, 
				0, 
				nr_seq_atepacu_w, 
				cd_cgc_w, 
				nr_seq_tipo_baixa_w, 
				nr_cirurgia_w, 
				nr_prescricao_w, 
				dt_prescricao_w, 
				nr_sequencia_prescricao_w, 
				97, 
				nr_sequencia_opme_p, 
				CASE WHEN coalesce(nr_seq_lote_fornec_p,0)=0 THEN ''  ELSE nr_seq_lote_fornec_p END );
		 
			 
			update	material_atend_paciente 
			set	nr_interno_conta  = NULL, 
				cd_motivo_exc_conta = cd_motivo_exc_conta_w, 
				nm_usuario = nm_usuario_p 
			where	nr_sequencia = nr_seq_mat_atend_w;
 
		end if;
	end if;
	 
	if (coalesce(nr_seq_mat_atend_w,0) > 0 ) then 
	 
		update	agenda_pac_opme 
		set	nr_seq_map = nr_seq_mat_atend_w 
		where	nr_seq_agenda = nr_seq_agenda_p 
		and	cd_material = cd_material_p 
		and	nr_sequencia = nr_sequencia_opme_p;
	 
	 
	end if;
	if (coalesce(nr_seq_lote_fornec_p,0) > 0 ) then 
		 
		update	agenda_pac_opme 
		set	nr_seq_lote = nr_seq_lote_fornec_p 
		where	nr_seq_agenda = nr_seq_agenda_p 
		and	cd_material = cd_material_p 
		and	nr_sequencia = nr_sequencia_opme_p;
	 
	end if;
    end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_mat_atend_pac_opme ( nr_seq_agenda_p bigint, nr_sequencia_opme_p bigint, qt_material_atendido_p bigint, cd_local_estoque_p bigint, cd_motivo_baixa_p bigint, cd_material_p bigint, nm_usuario_p text, nr_seq_lote_fornec_p bigint) FROM PUBLIC;

