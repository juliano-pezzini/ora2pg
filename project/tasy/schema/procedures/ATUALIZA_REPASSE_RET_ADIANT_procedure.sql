-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_repasse_ret_adiant ( nr_seq_retorno_p convenio_retorno.nr_sequencia%type, nm_usuario_p convenio_retorno.nm_usuario%type) AS $body$
DECLARE


nr_seq_ret_adiant_w		convenio_retorno.nr_seq_ret_adiant%type;
vl_diferenca_w			procedimento_repasse.vl_liberado%type;
ie_status_w			procedimento_repasse.ie_status%type;
nr_seq_proc_rep_novo_w		procedimento_repasse.nr_sequencia%type;
vl_total_liberado_w		procedimento_repasse.vl_liberado%type;
vl_repasse_w			procedimento_repasse.vl_repasse%type;
vl_ajuste_w			procedimento_repasse.vl_repasse%type;
nr_seq_mat_rep_novo_w		material_repasse.nr_sequencia%type;

type nr_seq_proc_repasse_tp is table of procedimento_repasse.nr_sequencia%type index by integer;
type nr_seq_mat_repasse_tp is table of material_repasse.nr_sequencia%type index by integer;

nr_seq_proc_repasse_w		nr_seq_proc_repasse_tp;
nr_seq_mat_repasse_w		nr_seq_mat_repasse_tp;

c_itens_ret CURSOR FOR
	SELECT	a.vl_glosa,
		a.vl_cobrado,
		a.nr_seq_propaci,
		a.nr_seq_partic, 
		a.nr_seq_matpaci,
		a.ie_acao_glosa
	from	convenio_retorno_glosa a,
		convenio_retorno_item b
	where	b.nr_sequencia		= a.nr_seq_ret_item 
	and	b.nr_seq_retorno	= nr_seq_retorno_p
	
union all

	/* Caso o item nao tenha sido adicionado no retorno Detalhe, libera o valor que falta */

	SELECT	0 vl_glosa,
		a.vl_cobrado,
		a.nr_seq_propaci, 
		a.nr_seq_partic, 
		a.nr_seq_matpaci,
		a.ie_acao_glosa
	from	convenio_retorno_glosa a,
		convenio_retorno_item b
	where	b.nr_sequencia		= a.nr_seq_ret_item 
	and	b.nr_seq_retorno	= nr_seq_ret_adiant_w
	and	not exists (	select	1
				from	convenio_retorno_glosa x,
					convenio_retorno_item y
				where	y.nr_sequencia		= x.nr_seq_ret_item 
				and	y.nr_seq_retorno	= nr_seq_retorno_p
				and (x.nr_seq_propaci	= a.nr_seq_propaci
				or	x.nr_seq_matpaci	= a.nr_seq_matpaci));
	
c_itens_ret_w	c_itens_ret%rowtype;
	
c_itens_proc CURSOR FOR
	SELECT	a.nr_sequencia,
		a.vl_liberado,
		a.vl_repasse,
		a.vl_original_repasse,
		a.vl_original_repasse - ((a.vl_original_repasse * c_itens_ret_w.vl_glosa) / c_itens_ret_w.vl_cobrado) vl_razao_repasse,
		a.ie_status,
		a.nr_seq_procedimento
	from	procedimento_repasse a
	where	a.nr_seq_procedimento	= c_itens_ret_w.nr_seq_propaci
	and	coalesce(a.nr_seq_partic,0) 	= c_itens_ret_w.nr_seq_partic
	and 	(c_itens_ret_w.nr_seq_partic IS NOT NULL AND c_itens_ret_w.nr_seq_partic::text <> '')
	
union all

	SELECT	a.nr_sequencia,
		a.vl_liberado,
		a.vl_repasse,
		a.vl_original_repasse,
		a.vl_original_repasse - ((a.vl_original_repasse * (c_itens_ret_w.vl_glosa)) / c_itens_ret_w.vl_cobrado) vl_razao_repasse,
		a.ie_status,
		a.nr_seq_procedimento
	from	procedimento_repasse a
	where	a.nr_seq_procedimento	= c_itens_ret_w.nr_seq_propaci
	and 	coalesce(a.nr_seq_partic::text, '') = ''
	and 	coalesce(c_itens_ret_w.nr_seq_partic::text, '') = ''
	order by ie_status desc;

c_itens_proc_w	c_itens_proc%rowtype;
	
c_itens_mat CURSOR FOR
	SELECT	a.nr_sequencia,
		a.vl_liberado,
		a.vl_repasse,
		a.vl_original_repasse,
		a.vl_original_repasse - ((a.vl_original_repasse * c_itens_ret_w.vl_glosa) / c_itens_ret_w.vl_cobrado) vl_razao_repasse,
		a.ie_status,
		a.nr_seq_material
	from	material_repasse a
	where	a.nr_seq_material	= c_itens_ret_w.nr_seq_matpaci;

c_itens_mat_w	c_itens_mat%rowtype;

c_proc_rep_zerados CURSOR FOR
	SELECT	a.nr_sequencia
	from	procedimento_repasse a
	where	a.nr_seq_procedimento	= c_itens_ret_w.nr_seq_propaci
	and	coalesce(a.nr_seq_partic,0) 	= c_itens_ret_w.nr_seq_partic
	and 	(c_itens_ret_w.nr_seq_partic IS NOT NULL AND c_itens_ret_w.nr_seq_partic::text <> '')
	and	a.vl_liberado		= 0
	and	a.vl_repasse		= 0
	and	a.ie_status		in ('A','G')
	
union all

	SELECT	a.nr_sequencia
	from	procedimento_repasse a
	where	a.nr_seq_procedimento	= c_itens_ret_w.nr_seq_propaci
	and 	coalesce(a.nr_seq_partic::text, '') = ''
	and 	coalesce(c_itens_ret_w.nr_seq_partic::text, '') = ''
	and	a.vl_liberado		= 0
	and	a.vl_repasse		= 0
	and	a.ie_status		in ('A','G');

c_mat_rep_zerados CURSOR FOR
	SELECT	a.nr_sequencia
	from	material_repasse a
	where	a.nr_seq_material	= c_itens_ret_w.nr_seq_matpaci
	and	a.vl_liberado		= 0
	and	a.vl_repasse		= 0
	and	a.ie_status		in ('A','G');
				

BEGIN

select	max(a.nr_seq_ret_adiant)
into STRICT	nr_seq_ret_adiant_w
from	convenio_retorno a
where	a.nr_sequencia = nr_seq_retorno_p;

open c_itens_ret;
loop
fetch c_itens_ret into
	c_itens_ret_w;
EXIT WHEN NOT FOUND; /* apply on c_itens_ret */

	open c_itens_proc;
	loop
	fetch c_itens_proc into
		c_itens_proc_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_proc */
	
		if (c_itens_proc_w.ie_status = 'R') then
			vl_diferenca_w		:= 0;
			vl_total_liberado_w	:= c_itens_proc_w.vl_liberado;
			
			/* Se for Reapresentacao, e o valor reapresentado for maior que o inicial, mantem os valores originais. */

			if	(c_itens_ret_w.ie_acao_glosa = 'A' AND c_itens_proc_w.vl_razao_repasse <> c_itens_proc_w.vl_liberado) or
				(c_itens_ret_w.ie_acao_glosa = 'R' AND c_itens_proc_w.vl_razao_repasse > c_itens_proc_w.vl_liberado) then
				
				vl_diferenca_w		:= c_itens_proc_w.vl_razao_repasse - c_itens_proc_w.vl_liberado;
				vl_total_liberado_w	:= vl_total_liberado_w + vl_diferenca_w;

				insert into procedimento_repasse(
					nr_sequencia,
					nr_seq_procedimento,
					vl_repasse,
					dt_atualizacao,
					nm_usuario,
					nr_seq_terceiro,
					nr_lote_contabil,
					nr_repasse_terceiro,
					cd_conta_contabil,
					nr_seq_trans_fin,
					vl_liberado,
					nr_seq_item_retorno,
					ie_status,
					nr_seq_origem,
					cd_regra,
					dt_liberacao,
					cd_medico,
					dt_contabil_titulo,
					dt_contabil,
					nr_seq_partic,
					nr_seq_trans_fin_rep_maior,
					nr_seq_criterio,
					vl_original_repasse,
					nr_seq_ret_glosa,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_observacao,
					nr_processo_aih,
					nm_usuario_lib,
					nr_interno_conta_est,
					ie_estorno,
					ie_repasse_calc,
					nr_seq_regra_item,
					ie_analisado,
					nr_seq_lote_audit_hist,
					nr_seq_motivo_des,
					ie_desc_caixa,
					vl_desp_cartao,
					nr_seq_parcela,
					vl_custo_item,
					vl_desconto,
					nr_atendimento,
					nm_pessoa_fisica,
					ds_procedimento,
					ds_status,
					nm_medico,
					nm_medico_executor,
					ds_transacao,
					ds_convenio,
					ds_regra,
					dt_procedimento,
					ds_tipo_atendimento,
					dt_mesano_referencia,
					cd_procedimento,
					nr_interno_conta,
					ds_centro_custo,
					nm_usuario_original,
					dt_entrada_atend,
					ds_conta_contabil,
					ds_obs_forma_repasse,
					ds_funcao_med,
					nm_medico_req,
					ds_observacao_criterio,
					ds_categoria,
					nr_prescricao,
					ds_via_acesso,
					ds_medico_resp,
					ds_carater,
					ds_medico_laudo,
					qt_procedimento,
					ie_origem_proced,
					cd_pessoa_fisica,
					nr_seq_proc_crit_repasse,
					cd_convenio,
					ie_tipo_convenio,
					ie_tipo_atendimento,
					cd_medico_laudo,
					ds_classif_atua_medico,
					nr_laudo,
					ie_bloq_laudo_liberado,
					vl_custo,
					vl_imposto,
					dt_entrega_convenio,
					ds_tipo_conv,
					ie_alta_complexidade,
					ds_log,
					nr_codigo_controle)
				SELECT	nextval('procedimento_repasse_seq'),
					a.nr_seq_procedimento,
					vl_diferenca_w,
					clock_timestamp(),
					nm_usuario_p,
					a.nr_seq_terceiro,
					a.nr_lote_contabil,
					null,
					null,
					a.nr_seq_trans_fin,
					vl_diferenca_w,
					null,
					'R',
					a.nr_sequencia,
					a.cd_regra,
					clock_timestamp(),
					a.cd_medico,
					a.dt_contabil_titulo,
					a.dt_contabil,
					a.nr_seq_partic,
					a.nr_seq_trans_fin_rep_maior,
					a.nr_seq_criterio,
					a.vl_original_repasse,
					a.nr_seq_ret_glosa,
					clock_timestamp(),
					nm_usuario_p,
					a.ds_observacao,
					a.nr_processo_aih,
					a.nm_usuario_lib,
					a.nr_interno_conta_est,
					a.ie_estorno,
					a.ie_repasse_calc,
					a.nr_seq_regra_item,
					a.ie_analisado,
					a.nr_seq_lote_audit_hist,
					a.nr_seq_motivo_des,
					a.ie_desc_caixa,
					a.vl_desp_cartao,
					a.nr_seq_parcela,
					a.vl_custo_item,
					a.vl_desconto,
					a.nr_atendimento,
					a.nm_pessoa_fisica,
					a.ds_procedimento,
					a.ds_status,
					a.nm_medico,
					a.nm_medico_executor,
					a.ds_transacao,
					a.ds_convenio,
					a.ds_regra,
					a.dt_procedimento,
					a.ds_tipo_atendimento,
					a.dt_mesano_referencia,
					a.cd_procedimento,
					a.nr_interno_conta,
					a.ds_centro_custo,
					a.nm_usuario_original,
					a.dt_entrada_atend,
					a.ds_conta_contabil,
					a.ds_obs_forma_repasse,
					a.ds_funcao_med,
					a.nm_medico_req,
					a.ds_observacao_criterio,
					a.ds_categoria,
					a.nr_prescricao,
					a.ds_via_acesso,
					a.ds_medico_resp,
					a.ds_carater,
					a.ds_medico_laudo,
					a.qt_procedimento,
					a.ie_origem_proced,
					a.cd_pessoa_fisica,
					a.nr_seq_proc_crit_repasse,
					a.cd_convenio,
					a.ie_tipo_convenio,
					a.ie_tipo_atendimento,
					a.cd_medico_laudo,
					a.ds_classif_atua_medico,
					a.nr_laudo,
					a.ie_bloq_laudo_liberado,
					a.vl_custo,
					a.vl_imposto,
					a.dt_entrega_convenio,
					a.ds_tipo_conv,
					a.ie_alta_complexidade,
					a.ds_log,
					a.nr_codigo_controle
				from	procedimento_repasse a
				where	a.nr_sequencia = c_itens_proc_w.nr_sequencia;
				
				/* Se estava 100% liberado e agora possui valor glosado/reapresentado, precisa desdobrar o repasse liberado. */

				if (c_itens_proc_w.vl_original_repasse = c_itens_proc_w.vl_liberado) then
					
					vl_repasse_w	:= vl_diferenca_w * -1;
					ie_status_w	:= 'A';
					
					if (c_itens_ret_w.ie_acao_glosa = 'A') then
						ie_status_w	:= 'G';
					end if;
					
					 /* Se for "Glosa aceita", insere como "Glosado", senao como "Aguardando retorno". */

					SELECT * FROM desdobrar_procmat_repasse(	nr_seq_proc_repasse_p	=> c_itens_proc_w.nr_sequencia, nr_seq_mat_repasse_p	=> null, ie_status_p		=> ie_status_w, vl_repasse_p		=> vl_repasse_w, nm_usuario_p		=> nm_usuario_p, nr_seq_proc_rep_novo_p	=> nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_p	=> nr_seq_mat_rep_novo_w) INTO STRICT nr_seq_proc_rep_novo_p	=> nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_p	=> nr_seq_mat_rep_novo_w;
				end if;
			end if;
		
		elsif (c_itens_mat_w.ie_status = 'A') then
		
			vl_ajuste_w	:= 0;
			if (vl_diferenca_w <> 0) then
				vl_ajuste_w	:= vl_diferenca_w * -1;
			end if;

			ie_status_w	:= 'A';
			if (c_itens_ret_w.ie_acao_glosa = 'A') then
				ie_status_w	:= 'G';
			end if;

			/* Se o valor glosado/reapresentado mudou, ajusta o valor do repasse "Aguardando retorno". 
			   Se o IE_ACAO_GLOSA for igual a "Glosa aceita", ajusta o Status para "Glosado" */
			
			if (vl_ajuste_w <> 0) or (ie_status_w = 'G') then				
				update	procedimento_repasse
				set	vl_repasse	= vl_repasse + vl_ajuste_w,
					ie_status	= ie_status_w
				where	nr_sequencia	= c_itens_proc_w.nr_sequencia;
			end if;
		end if;
		
		if (c_itens_proc_w.ie_status <> 'R') then
			
			update	procedimento_repasse
			set	vl_repasse	= vl_repasse + (vl_original_repasse - (vl_repasse + vl_total_liberado_w))
			where	nr_sequencia	= c_itens_proc_w.nr_sequencia
			and	vl_original_repasse <> vl_repasse + vl_total_liberado_w;
		end if;
	end loop;
	close c_itens_proc;
	
	open c_itens_mat;
	loop
	fetch c_itens_mat into
		c_itens_mat_w;
	EXIT WHEN NOT FOUND; /* apply on c_itens_mat */
	
		if (c_itens_mat_w.ie_status = 'R') then
			vl_diferenca_w		:= 0;
			vl_total_liberado_w	:= c_itens_mat_w.vl_liberado;
			
			if	(c_itens_ret_w.ie_acao_glosa = 'A' AND c_itens_mat_w.vl_razao_repasse <> c_itens_mat_w.vl_liberado) or
				(c_itens_ret_w.ie_acao_glosa = 'R' AND c_itens_mat_w.vl_razao_repasse > c_itens_mat_w.vl_liberado) then
				
				vl_diferenca_w		:= c_itens_mat_w.vl_razao_repasse - c_itens_mat_w.vl_liberado;
				vl_total_liberado_w	:= vl_total_liberado_w + vl_diferenca_w;
					
				insert into material_repasse(
					nr_sequencia,
					nr_seq_material,
					vl_repasse,
					dt_atualizacao,
					nm_usuario,
					nr_seq_terceiro,
					nr_lote_contabil,
					nr_repasse_terceiro,
					cd_conta_contabil,
					nr_seq_trans_fin,
					vl_liberado,
					nr_seq_item_retorno,
					ie_status,
					nr_seq_origem,
					cd_regra,
					dt_liberacao,
					cd_medico,
					dt_contabil_titulo,
					dt_contabil,
					nr_seq_trans_fin_rep_maior,
					nr_seq_criterio,
					vl_original_repasse,
					nr_seq_ret_glosa,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_observacao,
					nm_usuario_lib,
					nr_interno_conta_est,
					ie_estorno,
					ie_repasse_calc,
					nr_seq_regra_item,
					ie_analisado,
					nr_seq_motivo_des,
					ie_desc_caixa,
					nr_seq_lote_audit_hist,
					vl_desp_cartao,
					nr_seq_parcela,
					vl_custo_item,
					vl_desconto,
					ds_regra,
					cd_material,
					ds_material,
					nr_atendimento,
					cd_pessoa_fisica,
					nm_pessoa_fisica,
					ds_status,
					ds_transacao,
					ds_convenio,
					nm_medico,
					nr_interno_conta,
					dt_conta,
					ds_tipo_atendimento,
					ds_centro_custo,
					nm_usuario_original,
					ds_observacao_criterio,
					ds_categoria,
					nr_prescricao,
					ds_classif_atua_medico,
					dt_entrada,
					cd_convenio,
					ie_tipo_convenio,
					ie_tipo_atendimento,
					cd_setor_atendimento,
					qt_material,
					cd_motivo_exc_conta,
					cd_protocolo,
					nr_ciclo,
					vl_custo,
					vl_imposto,
					nr_seq_medicacao,
					dt_entrega_convenio,
					ds_tipo_conv,
					ds_clinica,
					cd_unidade_basica,
					nm_medico_referido,
					nr_atendimento_mae,
					ds_log,
					nr_codigo_controle)
				SELECT	nextval('material_repasse_seq'),
					a.nr_seq_material,
					vl_diferenca_w,
					clock_timestamp(),
					nm_usuario_p,
					a.nr_seq_terceiro,
					a.nr_lote_contabil,
					null,
					null,
					a.nr_seq_trans_fin,
					vl_diferenca_w,
					null,
					'R',
					a.nr_sequencia,
					a.cd_regra,
					clock_timestamp(),
					a.cd_medico,
					a.dt_contabil_titulo,
					a.dt_contabil,
					a.nr_seq_trans_fin_rep_maior,
					a.nr_seq_criterio,
					a.vl_original_repasse,
					a.nr_seq_ret_glosa,
					clock_timestamp(),
					nm_usuario_p,
					a.ds_observacao,
					a.nm_usuario_lib,
					a.nr_interno_conta_est,
					a.ie_estorno,
					a.ie_repasse_calc,
					a.nr_seq_regra_item,
					a.ie_analisado,
					a.nr_seq_motivo_des,
					a.ie_desc_caixa,
					a.nr_seq_lote_audit_hist,
					a.vl_desp_cartao,
					a.nr_seq_parcela,
					a.vl_custo_item,
					a.vl_desconto,
					a.ds_regra,
					a.cd_material,
					a.ds_material,
					a.nr_atendimento,
					a.cd_pessoa_fisica,
					a.nm_pessoa_fisica,
					a.ds_status,
					a.ds_transacao,
					a.ds_convenio,
					a.nm_medico,
					a.nr_interno_conta,
					a.dt_conta,
					a.ds_tipo_atendimento,
					a.ds_centro_custo,
					a.nm_usuario_original,
					a.ds_observacao_criterio,
					a.ds_categoria,
					a.nr_prescricao,
					a.ds_classif_atua_medico,
					a.dt_entrada,
					a.cd_convenio,
					a.ie_tipo_convenio,
					a.ie_tipo_atendimento,
					a.cd_setor_atendimento,
					a.qt_material,
					a.cd_motivo_exc_conta,
					a.cd_protocolo,
					a.nr_ciclo,
					a.vl_custo,
					a.vl_imposto,
					a.nr_seq_medicacao,
					a.dt_entrega_convenio,
					a.ds_tipo_conv,
					a.ds_clinica,
					a.cd_unidade_basica,
					a.nm_medico_referido,
					a.nr_atendimento_mae,
					a.ds_log,
					a.nr_codigo_controle
				from	material_repasse a
				where	a.nr_sequencia = c_itens_mat_w.nr_sequencia;
					
				if (c_itens_mat_w.vl_original_repasse = c_itens_mat_w.vl_liberado) then
					
					vl_repasse_w	:= vl_diferenca_w * -1;
					ie_status_w	:= 'A';
					
					if (c_itens_ret_w.ie_acao_glosa = 'A') then
						ie_status_w	:= 'G';
					end if;
					
					SELECT * FROM desdobrar_procmat_repasse(	nr_seq_proc_repasse_p	=> null, nr_seq_mat_repasse_p	=> c_itens_mat_w.nr_sequencia, ie_status_p		=> ie_status_w, vl_repasse_p		=> vl_repasse_w, nm_usuario_p		=> nm_usuario_p, nr_seq_proc_rep_novo_p	=> nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_p	=> nr_seq_mat_rep_novo_w) INTO STRICT nr_seq_proc_rep_novo_p	=> nr_seq_proc_rep_novo_w, nr_seq_mat_rep_novo_p	=> nr_seq_mat_rep_novo_w;
				end if;
			end if;
			
		elsif (c_itens_mat_w.ie_status = 'A') then
		
			vl_ajuste_w	:= 0;
			if (vl_diferenca_w <> 0) then
				vl_ajuste_w	:= vl_diferenca_w * -1;
			end if;

			ie_status_w	:= 'A';
			if (c_itens_ret_w.ie_acao_glosa = 'A') then
				ie_status_w	:= 'G';
			end if;
			
			if (vl_ajuste_w <> 0) or (ie_status_w = 'G') then
				update	material_repasse
				set	vl_repasse	= vl_repasse + vl_ajuste_w,
					ie_status	= ie_status_w
				where	nr_sequencia	= c_itens_mat_w.nr_sequencia;
			end if;
		end if;
		
		if (c_itens_mat_w.ie_status <> 'R') then
			
			update	material_repasse
			set	vl_repasse	= vl_repasse + (vl_original_repasse - (vl_repasse + vl_total_liberado_w))
			where	nr_sequencia	= c_itens_mat_w.nr_sequencia
			and	vl_original_repasse <> vl_repasse + vl_total_liberado_w;
		end if;
	end loop;
	close c_itens_mat;
	
	/* Se os itens foram liberados 100%, exlui o registro Aguardando retorno com valor zerado */

	open c_proc_rep_zerados;
	loop
	fetch c_proc_rep_zerados bulk collect into
		nr_seq_proc_repasse_w limit 1000;
	exit when nr_seq_proc_repasse_w.count = 0;
		forall i in nr_seq_proc_repasse_w.first..nr_seq_proc_repasse_w.last
			delete
			from	procedimento_repasse
			where	nr_sequencia	= nr_seq_proc_repasse_w(i);
		commit;
		
		nr_seq_proc_repasse_w.delete;
	end loop;
	close c_proc_rep_zerados;
	
	open c_mat_rep_zerados;
	loop
	fetch c_mat_rep_zerados bulk collect into
		nr_seq_mat_repasse_w limit 1000;
	exit when nr_seq_mat_repasse_w.count = 0;
		forall i in nr_seq_mat_repasse_w.first..nr_seq_mat_repasse_w.last
			delete
			from	material_repasse
			where	nr_sequencia	= nr_seq_mat_repasse_w(i);
		commit;
		
		nr_seq_mat_repasse_w.delete;
	end loop;
	close c_mat_rep_zerados;
	
end loop;
close c_itens_ret;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_repasse_ret_adiant ( nr_seq_retorno_p convenio_retorno.nr_sequencia%type, nm_usuario_p convenio_retorno.nm_usuario%type) FROM PUBLIC;

