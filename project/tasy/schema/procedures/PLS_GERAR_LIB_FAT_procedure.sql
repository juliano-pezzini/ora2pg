-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lib_fat ( nr_seq_lib_fat_p pls_lib_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


cd_estabelecimento_w		pls_lib_faturamento.cd_estabelecimento%type;
ie_pos_estab_faturamento_w	pls_parametros.ie_pos_estab_faturamento%type;
ie_contas_faturar_w		pls_parametro_faturamento.ie_contas_faturar%type;
dt_conta_inicial_w		pls_lib_faturamento.dt_conta_inicial%type;
dt_conta_final_w		pls_lib_faturamento.dt_conta_final%type;
dt_lib_pag_prot_inicial_w	pls_lib_faturamento.dt_lib_pag_prot_inicial%type;
dt_lib_pag_prot_final_w		pls_lib_faturamento.dt_lib_pag_prot_final%type;
ie_apresentacao_prot_w		pls_lib_faturamento.ie_apresentacao_prot%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
--------------------------------------------------------------------------------------------------------------------------------------------------------------
qt_registros_conta_filtro_w	integer;
qt_registros_contr_filtro_w	integer;
qt_registros_congen_filtro_w	integer;
qt_registros_inter_filtro_w	integer;
qt_registros_prot_filtro_w	integer;
--------------------------------------------------------------------------------------------------------------------------------------------------------------
var_cur_w			integer;
var_exec_w			integer;
var_retorno_w			integer;
ds_sql_contas_faturamento_w	varchar(2000);
ds_filtro_contas_faturamento_w	varchar(2000);

c02 CURSOR(nr_seq_lib_fat_pc	pls_lib_fat_conta.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	pls_lib_fat_conta
	where	nr_seq_lib_fat	= nr_seq_lib_fat_pc;

BEGIN
select	max(cd_estabelecimento),
	trunc(max(dt_conta_inicial),'dd'),
	max(dt_conta_final),
	trunc(max(dt_lib_pag_prot_inicial),'dd'),
	max(dt_lib_pag_prot_final),
	coalesce(max(ie_apresentacao_prot),'T')
into STRICT	cd_estabelecimento_w,
	dt_conta_inicial_w,
	dt_conta_final_w,
	dt_lib_pag_prot_inicial_w,
	dt_lib_pag_prot_final_w,
	ie_apresentacao_prot_w
from	pls_lib_faturamento
where	nr_sequencia		= nr_seq_lib_fat_p;

select	coalesce(max(ie_pos_estab_faturamento), 'N')
into STRICT	ie_pos_estab_faturamento_w
from	pls_parametros	a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(a.ie_contas_faturar), 'PF')
into STRICT	ie_contas_faturar_w
from	pls_parametro_faturamento	a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

-- Busca as regras do adicionais do lote de faturamento
select	count(1)
into STRICT	qt_registros_conta_filtro_w
from	pls_lib_fat_adic
where	nr_seq_lote	= nr_seq_lib_fat_p
and	(nr_seq_conta IS NOT NULL AND nr_seq_conta::text <> '');

select	count(1)
into STRICT	qt_registros_contr_filtro_w
from	pls_lib_fat_adic
where	nr_seq_lote	= nr_seq_lib_fat_p
and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '');

select	count(1)
into STRICT	qt_registros_congen_filtro_w
from	pls_lib_fat_adic
where	nr_seq_lote	= nr_seq_lib_fat_p
and	(nr_seq_cooperativa IS NOT NULL AND nr_seq_cooperativa::text <> '');

select	count(1)
into STRICT	qt_registros_inter_filtro_w
from	pls_lib_fat_adic
where	nr_seq_lote	= nr_seq_lib_fat_p
and	(nr_seq_intercambio IS NOT NULL AND nr_seq_intercambio::text <> '');

select	count(1)
into STRICT	qt_registros_prot_filtro_w
from	pls_lib_fat_adic
where	nr_seq_lote	= nr_seq_lib_fat_p
and	(nr_seq_protocolo IS NOT NULL AND nr_seq_protocolo::text <> '');

if (qt_registros_conta_filtro_w > 0) then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || 	'  and b.nr_sequencia in (	select 	y.nr_seq_conta			' ||
										'				from	pls_lib_fat_adic	y	' ||
										'				where	y.nr_seq_lote	= :nr_seq_lote	' ||
										'				and	y.nr_seq_conta is not null)	';

end if;

if (qt_registros_contr_filtro_w > 0) then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || 	'  and c.nr_seq_contrato in (	select 	y.nr_seq_contrato		' ||
										'				from	pls_lib_fat_adic	y	' ||
										'				where	y.nr_seq_lote	= :nr_seq_lote	' ||
										'				and	y.nr_seq_contrato is not null)	';

end if;

if (qt_registros_congen_filtro_w > 0) then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || 	'  and nvl(c.nr_seq_ops_congenere, c.nr_seq_congenere) in 		' ||
										'				(select y.nr_seq_cooperativa	' ||
										'				from	pls_lib_fat_adic	y	' ||
										'				where	y.nr_seq_lote	= :nr_seq_lote	' ||
										'				and	y.nr_seq_cooperativa is not null)	';

end if;

if (qt_registros_inter_filtro_w > 0) then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || 	'  and c.nr_seq_intercambio in	(select y.nr_seq_intercambio	' ||
										'				from	pls_lib_fat_adic	y	' ||
										'				where	y.nr_seq_lote	= :nr_seq_lote	' ||
										'				and	y.nr_seq_intercambio is not null) ';

end if;

if (qt_registros_prot_filtro_w > 0) then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || 	'  and a.nr_sequencia in	(select y.nr_seq_protocolo	' ||
										'				from	pls_lib_fat_adic	y	' ||
										'				where	y.nr_seq_lote	= :nr_seq_lote	' ||
										'				and	y.nr_seq_protocolo is not null) ';

end if;

if (ie_pos_estab_faturamento_w = 'S') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and b.ie_tipo_conta in (''O'', ''C'', ''I'') ';

elsif (ie_pos_estab_faturamento_w = 'N') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and b.ie_tipo_conta = ''C'' ';

elsif (ie_pos_estab_faturamento_w = 'R') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and pls_obter_forma_cobr_pos_estab(:cd_estabelecimento,nvl(b.ie_tipo_segurado,c.ie_tipo_segurado)) = ''F'' ';
end if;

if (dt_conta_inicial_w IS NOT NULL AND dt_conta_inicial_w::text <> '') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and b.dt_atualizacao >= :dt_fechamento_inicial_lote ';
end if;

if (dt_conta_final_w IS NOT NULL AND dt_conta_final_w::text <> '') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and b.dt_atualizacao <= :dt_fechamento_final_lote ';
end if;

if (dt_lib_pag_prot_inicial_w IS NOT NULL AND dt_lib_pag_prot_inicial_w::text <> '') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and a.dt_lib_pagamento >= :dt_lib_pag_prot_inicial ';
end if;

if (dt_lib_pag_prot_final_w IS NOT NULL AND dt_lib_pag_prot_final_w::text <> '') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and a.dt_lib_pagamento <= :dt_lib_pag_prot_final ';
end if;

if (ie_contas_faturar_w <> 'CF') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and a.ie_status in (''3'', ''4'', ''6'', ''7'') ';
	-- 3 Liberado para pagamento / 4 Encerrado sem pagamento / 6 Pago / 7 Encerrado A700
end if;

if (ie_apresentacao_prot_w <> 'T') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and a.ie_apresentacao = :ie_apresentacao_prot ';
end if;

if (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
	ds_filtro_contas_faturamento_w	:= ds_filtro_contas_faturamento_w || ' and	a.cd_estabelecimento	= :cd_estabelecimento ';
end if;

ds_sql_contas_faturamento_w :=	'	select	b.nr_sequencia							' || chr(13) ||
				'	from	pls_plano 		d,					' || chr(13) ||
				'		pls_segurado		c,					' || chr(13) ||
				'		pls_conta_pos_cab_v	b,					' || chr(13) ||
				'		pls_protocolo_conta	a					' || chr(13) ||
				'	where	a.nr_sequencia	= b.nr_seq_protocolo				' || chr(13) ||
				'	and	b.ie_status_fat	= ''L''						' || chr(13) ||
				'	and	c.nr_sequencia	= b.nr_seq_segurado				' || chr(13) ||
				'	and	c.nr_seq_plano	= d.nr_sequencia(+)				' || chr(13) ||
				'	and	b.ie_status	= ''F''						' || chr(13) ||
				'	and	((nvl(d.ie_preco,''3'') = ''1'' and c.dt_rescisao is not null) or ' || chr(13) ||
				'		 nvl(d.ie_preco,''3'') in (''2'',''3''))			' || chr(13) ||
				'	and	exists	(select	1						' || chr(13) ||
				'			from	pls_conta_pos_estabelecido x			' || chr(13) ||
				'			where	b.nr_sequencia		= x.nr_seq_conta	' || chr(13) ||
				'			and	x.ie_status_faturamento	= ''L''			' || chr(13) ||
				'			and	(x.ie_situacao = ''A'' or x.ie_situacao is null)' || chr(13) ||
				'			and	x.nr_seq_evento_fat is null			' || chr(13) ||
				'			and	x.nr_seq_lote_fat is null)			' || chr(13) ||
				'	and	not exists (	select	1					' || chr(13) ||
				'				from	pls_conta x				' || chr(13) ||
				'				where	x.nr_seq_conta_referencia = b.nr_sequencia	' || chr(13) ||
				'				and	x.nr_seq_ajuste_fat 	is not null)		' || chr(13) ||
				ds_filtro_contas_faturamento_w;

var_cur_w := dbms_sql.open_cursor;
dbms_sql.parse(var_cur_w, ds_sql_contas_faturamento_w, 1);

if (ie_pos_estab_faturamento_w = 'R') or (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') then
	dbms_sql.bind_variable(var_cur_w, ':cd_estabelecimento', cd_estabelecimento_p);
end if;

if (dt_conta_inicial_w IS NOT NULL AND dt_conta_inicial_w::text <> '') then
	dbms_sql.bind_variable(var_cur_w, ':dt_fechamento_inicial_lote', fim_dia(dt_conta_inicial_w));
end if;

if (dt_conta_final_w IS NOT NULL AND dt_conta_final_w::text <> '') then
	dbms_sql.bind_variable(var_cur_w, ':dt_fechamento_final_lote', dt_conta_final_w);
end if;

if (dt_lib_pag_prot_inicial_w IS NOT NULL AND dt_lib_pag_prot_inicial_w::text <> '') then
	dbms_sql.bind_variable(var_cur_w, ':dt_lib_pag_prot_inicial', dt_lib_pag_prot_inicial_w);
end if;

if (dt_lib_pag_prot_final_w IS NOT NULL AND dt_lib_pag_prot_final_w::text <> '') then
	dbms_sql.bind_variable(var_cur_w, ':dt_lib_pag_prot_final', fim_dia(dt_lib_pag_prot_final_w));
end if;

if (ie_apresentacao_prot_w <> 'T') then
	dbms_sql.bind_variable(var_cur_w, ':ie_apresentacao_prot', ie_apresentacao_prot_w);
end if;

if (qt_registros_conta_filtro_w > 0) or (qt_registros_contr_filtro_w > 0) or (qt_registros_congen_filtro_w > 0) or (qt_registros_inter_filtro_w > 0) or (qt_registros_prot_filtro_w > 0) then
	dbms_sql.bind_variable(var_cur_w, ':nr_seq_lote', nr_seq_lib_fat_p);
end if;

dbms_sql.define_column(var_cur_w, 1, nr_seq_conta_w);
var_exec_w := dbms_sql.execute(var_cur_w);

loop
var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
exit when var_retorno_w = 0;

	dbms_sql.column_value(var_cur_w, 1, nr_seq_conta_w);

	insert into pls_lib_fat_conta(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lib_fat,
		nr_seq_conta,
		ie_status)
	SELECT	nextval('pls_lib_fat_conta_seq'),
		nm_usuario_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_lib_fat_p,
		nr_seq_conta_w,
		'AC'
	;

end loop;
dbms_sql.close_cursor(var_cur_w);

for r_C02_w in C02(nr_seq_lib_fat_p) loop
	CALL pls_gerar_lib_fat_conta_pos( r_C02_w.nr_sequencia, cd_estabelecimento_p, nm_usuario_p);
end loop;

update	pls_lib_faturamento
set	dt_geracao_lote	= clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_sequencia	= nr_seq_lib_fat_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lib_fat ( nr_seq_lib_fat_p pls_lib_faturamento.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

