-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE recebe_nota_nfse ( dt_emissao_p text, nr_numero_p text, nr_nfe_imp_p text, cd_estabelecimento_p bigint, cd_verificacao_p text, vl_servico_p bigint, vl_liquido_nfse_p bigint, cd_cgc_p text, nr_cpf_p text, cd_cgc_emitente_p text, cd_natureza_operacao_imp_p bigint, nm_usuario_p text, vl_tributo_p bigint, tx_aliquota_p bigint, nr_sequencia_p INOUT text, vl_base_calculo_p bigint, ie_situacao_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, cd_condicao_pagamento_p bigint, cd_procedimento_p bigint, cd_serie_nf_p text, cd_operacao_nf_p bigint) AS $body$
DECLARE



nr_sequencia_w		nota_fiscal.nr_sequencia%type;
dt_emissao_w		timestamp;
ie_origem_proced_w	procedimento.ie_origem_proced%type;
qt_pessoa_w		bigint;
qt_pj_w			bigint;
cd_pessoa_fisica_w	nota_fiscal.cd_pessoa_fisica%type;
cd_cgc_w		nota_fiscal.cd_cgc%type;
cd_cgc_emitente_w       nota_fiscal.cd_cgc_emitente%type;
ie_situacao_w		nota_fiscal.ie_situacao%type;
cd_procedimento_w       procedimento.cd_procedimento%type;
nr_cpf_w                pessoa_fisica.nr_cpf%type;
ie_tipo_nota_w          nota_fiscal.ie_tipo_nota%type;


BEGIN

dt_emissao_w	:= to_date(dt_emissao_p,'yyyy-mm-dd');

select	coalesce(ie_situacao_p,1)
into STRICT	ie_situacao_w
;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;


if (cd_cgc_emitente_p IS NOT NULL AND cd_cgc_emitente_p::text <> '') then

	select  somente_numero_char(cd_cgc_emitente_p)
	into STRICT    cd_cgc_emitente_w
	;

	select	obter_conversao_interna(cd_cgc_emitente_w,'PROCEDIMENTO','CD_PROCEDIMENTO',cd_procedimento_p)
	into STRICT	cd_procedimento_w
	;

	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then

		select  max(ie_origem_proced)
		into STRICT    ie_origem_proced_w
		from    procedimento
		where   cd_procedimento = cd_procedimento_w;

	end if;

	ie_tipo_nota_w := 'EN';

end if;


if (nr_cpf_p IS NOT NULL AND nr_cpf_p::text <> '') then

	select	somente_numero_char(nr_cpf_p)
	into STRICT	nr_cpf_w
	;

	select	count(*)
	into STRICT	qt_pessoa_w
	from	pessoa_fisica
	where	nr_cpf = nr_cpf_w;

	if (qt_pessoa_w > 0) then

		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pessoa_fisica
		where	nr_cpf = nr_cpf_w;


		ie_tipo_nota_w := 'EF';

	end if;

end if;


if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then

	select somente_numero_char(cd_cgc_p)
	into STRICT   cd_cgc_w
	;

end if;


	insert into nota_fiscal(cd_estabelecimento,
				cd_operacao_nf,
				cd_serie_nf,
				dt_atualizacao,
				dt_emissao,
				dt_entrada_saida,
				ie_acao_nf,
				ie_emissao_nf,
				ie_tipo_frete,
				nm_usuario,
				nr_nota_fiscal,
				nr_sequencia,
				nr_sequencia_nf,
				qt_peso_bruto,
				qt_peso_liquido,
				vl_mercadoria,
				vl_total_nota,
				cd_verificacao_nfse,
				dt_emissao_nfe,
				cd_pessoa_fisica,
				cd_cgc,
				cd_cgc_emitente,
				ie_situacao,
				cd_natureza_operacao,
				ie_tipo_nota,
				cd_condicao_pagamento)
			values ( cd_estabelecimento_p,
				cd_operacao_nf_p,
				cd_serie_nf_p,
				clock_timestamp(),
				dt_emissao_w,
				dt_emissao_w,
				1,
				0,
				0,
				nm_usuario_p,
				nr_numero_p,
				nr_sequencia_w,
				1,
				0,
				0,
				vl_servico_p,
				vl_liquido_nfse_p,
				cd_verificacao_p,
				dt_emissao_w,
				cd_pessoa_fisica_w,
				cd_cgc_w,
				cd_cgc_emitente_w,
				ie_situacao_w,
				cd_natureza_operacao_imp_p,
				ie_tipo_nota_w,
				cd_condicao_pagamento_p);

		insert into nota_fiscal_item(cd_estabelecimento,
				cd_natureza_operacao,
				cd_serie_nf,
				dt_atualizacao,
				nm_usuario,
				nr_item_nf,
				nr_sequencia,
				nr_sequencia_nf,
				qt_item_nf,
				vl_desconto,
				vl_desconto_rateio,
				vl_despesa_acessoria,
				vl_frete,
				vl_liquido,
				vl_seguro,
				vl_total_item_nf,
				vl_unitario_item_nf,
				cd_procedimento,
				ie_origem_proced,
				cd_local_estoque,
				cd_centro_custo)
			values (cd_estabelecimento_p,
				cd_natureza_operacao_imp_p,
				cd_serie_nf_p,
				clock_timestamp(),
				nm_usuario_p,
				1,
				nr_sequencia_w,
				1,
				1,
				0,
				0,
				0,
				0,
				vl_servico_p,
				0,
				vl_servico_p,
				vl_servico_p,
				cd_procedimento_w,
				ie_origem_proced_w,
				cd_local_estoque_p,
				cd_centro_custo_p);


nr_sequencia_p	:= nr_sequencia_w;



commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE recebe_nota_nfse ( dt_emissao_p text, nr_numero_p text, nr_nfe_imp_p text, cd_estabelecimento_p bigint, cd_verificacao_p text, vl_servico_p bigint, vl_liquido_nfse_p bigint, cd_cgc_p text, nr_cpf_p text, cd_cgc_emitente_p text, cd_natureza_operacao_imp_p bigint, nm_usuario_p text, vl_tributo_p bigint, tx_aliquota_p bigint, nr_sequencia_p INOUT text, vl_base_calculo_p bigint, ie_situacao_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, cd_condicao_pagamento_p bigint, cd_procedimento_p bigint, cd_serie_nf_p text, cd_operacao_nf_p bigint) FROM PUBLIC;

