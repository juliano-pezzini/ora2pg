-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_exame_dia_semana ( nr_exame_p bigint, nr_seq_material_p text, dt_prescr_exame_p timestamp, nm_usuario_p text, cd_estabelecimento_p text, ie_permite_p INOUT text) AS $body$
DECLARE

ie_domingo_w		varchar(1):= '';
ie_segunda_w		varchar(1):= '';
ie_terca_w			varchar(1):= '';
ie_quarta_w			varchar(1):= '';
ie_quinta_w			varchar(1):= '';
ie_sexta_w			varchar(1):= '';
ie_sabado_w			varchar(1):= '';
ie_feriado_w		varchar(1):= '';
ie_permite_w		varchar(1):= 'S';
ds_dia_semana_w		bigint;
ie_dia_feriado_w 	bigint;
nr_seq_grupo_w		bigint;
qt_exame_dia_w		bigint := 0;
nr_seq_exame_dia_w	bigint := 0;
ie_tipo_feriado_w	integer;
ie_tipo_regra_w		varchar(1);


BEGIN

if (nr_exame_p IS NOT NULL AND nr_exame_p::text <> '') and (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
	begin

	select  coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_exame_dia_w
	from (
		SELECT  a.nr_sequencia
		from 	lab_exame_dia a,
				material_exame_lab b
		where 	a.nr_seq_exame 	=	nr_exame_p
		and		((a.ie_tipo_regra	= 'C') or (a.ie_tipo_regra	= 'L'))
		and		a.nr_seq_material =	b.nr_sequencia
		and		trim(both b.cd_material_exame) = trim(both nr_seq_material_p)
		and		coalesce(a.cd_estabelecimento,coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
		order by a.cd_estabelecimento
	) alias12 LIMIT 1;
	end;
end if;

if (nr_exame_p IS NOT NULL AND nr_exame_p::text <> '') and (nr_seq_exame_dia_w = 0) then
	begin

	select 	count(*)
	into STRICT	qt_exame_dia_w
	from   	lab_exame_dia  a
	where  	a.nr_seq_exame = nr_exame_p;

	if ( qt_exame_dia_w > 0) then --verifica se existe algum exame cadastrado na regra
		begin

		select 	coalesce(max(nr_sequencia),0)
		into STRICT 	nr_seq_exame_dia_w
		from (
			SELECT   a.nr_sequencia
			from     lab_exame_dia  a
			where    a.nr_seq_exame = nr_exame_p
			and  	 ((a.ie_tipo_regra = 'C') or (a.ie_tipo_regra = 'L'))
			and  	 coalesce(a.cd_estabelecimento,coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
			order by a.cd_estabelecimento
		) alias9 LIMIT 1;

		end;
	end if;
	end;
end if;

if (nr_exame_p IS NOT NULL AND nr_exame_p::text <> '') and (qt_exame_dia_w = 0) and (nr_seq_exame_dia_w = 0) then --se nÃ£o existir exame cadastrado na regra, verifica se existe grupo na regra
	begin

	select  coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_exame_dia_w
	from (
		SELECT  f.nr_sequencia
		from    exame_laboratorio h,
				grupo_exame_lab   i,
				lab_exame_dia     f
		where   h.nr_seq_exame    = nr_exame_p
		and     ((coalesce(f.nr_seq_exame::text, '') = '') or (f.nr_seq_exame = nr_exame_p))
		and     i.nr_sequencia    = h.nr_seq_grupo
		and     f.Nr_Seq_Grupo    = i.nr_sequencia
		and     ((f.ie_tipo_regra = 'C') or (f.ie_tipo_regra	= 'L'))
		and		coalesce(f.cd_estabelecimento,coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
		order by f.cd_estabelecimento
	) alias15 LIMIT 1;

	end;
end if;

if (nr_seq_exame_dia_w > 0) then
	begin

	select 	a.ie_domingo,
			a.ie_segunda,
			a.ie_terca,
			a.ie_quarta,
			a.ie_quinta,
			a.ie_sexta,
			a.ie_sabado,
			a.ie_feriado,
			a.ie_tipo_feriado,
			a.ie_tipo_regra
	into STRICT	ie_domingo_w,
			ie_segunda_w,
			ie_terca_w,
			ie_quarta_w,
			ie_quinta_w,
			ie_sexta_w,
			ie_sabado_w,
			ie_feriado_w,
			ie_tipo_feriado_w,
			ie_tipo_regra_w
	from 	lab_exame_dia a
	where	a.nr_sequencia = nr_seq_exame_dia_w
	and		coalesce(a.cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
	and		((a.ie_tipo_regra	= 'C') or (a.ie_tipo_regra	= 'L'));


	ie_dia_feriado_w := lab_obter_se_feriado(cd_estabelecimento_p, coalesce(dt_prescr_exame_p, clock_timestamp()), ie_tipo_feriado_w);

	if ( ie_dia_feriado_w > 0) then
		ds_dia_semana_w := 8;
	elsif ( ie_dia_feriado_w = 0) then
		ds_dia_semana_w	:= pkg_date_utils.get_WeekDay(coalesce(dt_prescr_exame_p,clock_timestamp()));
	end if;

	if (ie_tipo_regra_w = 'C') then
		if ( ds_dia_semana_w = 1) then
			if ( ie_domingo_w = 'N') then
				ie_permite_w := 'N';
			end if;
		elsif ( ds_dia_semana_w = 2) then
			if ( ie_segunda_w = 'N') then
				ie_permite_w := 'N';
			end if;
		elsif ( ds_dia_semana_w = 3) then
			if ( ie_terca_w = 'N') then
				ie_permite_w := 'N';
			end if;
		elsif ( ds_dia_semana_w = 4) then
			if ( ie_quarta_w = 'N') then
				ie_permite_w := 'N';
			end if;
		elsif ( ds_dia_semana_w = 5) then
			if ( ie_quinta_w = 'N') then
				ie_permite_w := 'N';
			end if;
		elsif ( ds_dia_semana_w = 6) then
			if ( ie_sexta_w = 'N') then
				ie_permite_w := 'N';
			end if;
		elsif ( ds_dia_semana_w = 7) then
			if ( ie_sabado_w = 'N') then
				ie_permite_w := 'N';
			end if;
		elsif ( ds_dia_semana_w = 8) then
			if ( ie_feriado_w = 'N') then
				ie_permite_w := 'N';
			end if;
		end if;
	elsif (ie_tipo_regra_w = 'L') then
		ie_permite_w := 'L';
	end if;
	end;
end if;

ie_permite_p := ie_permite_w;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_exame_dia_semana ( nr_exame_p bigint, nr_seq_material_p text, dt_prescr_exame_p timestamp, nm_usuario_p text, cd_estabelecimento_p text, ie_permite_p INOUT text) FROM PUBLIC;

