-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_repasse_retorno (ie_status_repasse_p text, cd_motivo_glosa_p bigint, ie_forma_calculo_crit_p INOUT text, nr_seq_regra_p INOUT bigint, ie_calculo_p INOUT text, ie_status_rep_novo_p INOUT text, ie_proc_partic_p INOUT text, ie_origem_valor_p INOUT text, ie_adicional_p text, nr_seq_procedimento_p bigint, tx_adicional_p INOUT bigint, qt_partic_rep_p bigint) AS $body$
DECLARE


ie_calculo_w		varchar(10);
nr_seq_regra_w		bigint;
ie_status_rep_novo_w	varchar(10);
ie_forma_calculo_crit_w	varchar(10);
ie_proc_partic_w		varchar(10);
ie_origem_valor_w		varchar(50);
ie_adicional_w		varchar(50);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_area_procedimento_w	bigint;
cd_especialidade_w	bigint;
cd_grupo_proc_w		bigint;
tx_adicional_w		double precision;
ie_partic_rep_w		varchar(255);

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ie_calculo,
	a.ie_status_rep_novo,
	a.ie_forma_calculo_crit,
	coalesce(a.ie_proc_partic,'A'),
	a.ie_origem_valor,
	coalesce(a.ie_adicional,'N'),
	a.tx_adicional
from	regra_repasse_retorno a
where	a.ie_status_repasse 					= ie_status_repasse_p
and	coalesce(a.cd_motivo_glosa, coalesce(cd_motivo_glosa_p, -1))		= coalesce(cd_motivo_glosa_p, -1)
and	coalesce(a.ie_forma_calculo_crit, coalesce(ie_forma_calculo_crit_p, '-1'))	= coalesce(ie_forma_calculo_crit_p, '-1')
and	((coalesce(a.ie_adicional, 'N')					= 'N')
	 or (coalesce(ie_adicional_p, 'N')					= coalesce(a.ie_adicional, 'N')))
and	coalesce(cd_procedimento, coalesce(cd_procedimento_w, 0))		= coalesce(cd_procedimento_w, 0)
and	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0))	= coalesce(cd_area_procedimento_w,0)
and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
and	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
and	coalesce(ie_origem_proced, coalesce(ie_origem_proced_w,0))		= coalesce(ie_origem_proced_w,0)
and	((coalesce(ie_partic_rep, 'N') = 'N')
	 or (coalesce(qt_partic_rep_p, 0) > 0))
order by	CASE WHEN coalesce(ie_adicional, 'N')='S' THEN  1  ELSE 0 END ,
	coalesce(ie_forma_calculo_crit, 0),
	coalesce(cd_procedimento, 0),
	coalesce(cd_grupo_proc, 0),
	coalesce(cd_especialidade, 0),
	coalesce(cd_area_procedimento, 0),
	CASE WHEN coalesce(ie_partic_rep, 'N')='S' THEN  1  ELSE 0 END;


BEGIN

select	max(a.cd_procedimento),
	max(a.ie_origem_proced)
into STRICT	cd_procedimento_w,
	ie_origem_proced_w
from	procedimento_paciente a
where	a.nr_sequencia		= nr_seq_procedimento_p;

select	max(a.cd_area_procedimento),
	max(a.cd_especialidade),
	max(a.cd_grupo_proc)
into STRICT	cd_area_procedimento_w,
	cd_especialidade_w,
	cd_grupo_proc_w
from	estrutura_procedimento_v a
where	a.cd_procedimento		= cd_procedimento_w
and	a.ie_origem_proced	= ie_origem_proced_w;

open c01;
loop
fetch c01 into
	nr_seq_regra_w,
	ie_calculo_w,
	ie_status_rep_novo_w,
	ie_forma_calculo_crit_w,
	ie_proc_partic_w,
	ie_origem_valor_w,
	ie_adicional_w,
	tx_adicional_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

end loop;
close c01;

nr_seq_regra_p		:= nr_seq_regra_w;
ie_calculo_p		:= ie_calculo_w;
ie_status_rep_novo_p	:= ie_status_rep_novo_w;
ie_forma_calculo_crit_p	:= ie_forma_calculo_crit_w;
ie_proc_partic_p		:= ie_proc_partic_w;
ie_origem_valor_p		:= ie_origem_valor_w;
tx_adicional_p		:= tx_adicional_w;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_repasse_retorno (ie_status_repasse_p text, cd_motivo_glosa_p bigint, ie_forma_calculo_crit_p INOUT text, nr_seq_regra_p INOUT bigint, ie_calculo_p INOUT text, ie_status_rep_novo_p INOUT text, ie_proc_partic_p INOUT text, ie_origem_valor_p INOUT text, ie_adicional_p text, nr_seq_procedimento_p bigint, tx_adicional_p INOUT bigint, qt_partic_rep_p bigint) FROM PUBLIC;

