-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_dbs_item ( nr_seq_voucher_p bigint, nm_usuario_p text, ie_validate_p text) AS $body$
DECLARE

				
nr_encounter_w				atendimento_paciente.nr_atendimento%type;
nr_lsp_w					equipamento.cd_imobilizado_ext%type;
ie_encounter_type_w			atendimento_paciente.ie_tipo_atendimento%type;
dt_update_nrec_w			prescr_proc_peca.dt_atualizacao_nrec%type;
dt_medical_report_w			laudo_paciente.dt_laudo%type;
ie_referral_override_w		dbs_voucher.ie_referral_override%type;
nr_seq_account_w			bigint;
nr_sequencia_w				bigint;

c_procedimento CURSOR FOR
	SELECT	a.nr_sequencia,
			(coalesce(vl_procedimento,0) * 100) vl_procedimento,
			a.cd_equipamento,
			a.cd_procedimento,
			a.ds_observacao,
			trunc(a.dt_final_procedimento - dt_inicio_procedimento) qt_duracao,
			b.cd_setor_externo
	from	procedimento_paciente a,
			setor_atendimento b
	where	a.nr_interno_conta		= nr_seq_account_w
	and		a.cd_setor_atendimento	= b.cd_setor_atendimento;

BEGIN

CALL billing_i18n_pck.set_validate_eclipse(ie_validate_p);

select	max(nr_seq_account)
into STRICT	nr_seq_account_w
from	dbs_voucher
where	nr_sequencia	= nr_seq_voucher_p;

select	a.nr_atendimento,
		a.ie_tipo_atendimento
into STRICT	nr_encounter_w,
		ie_encounter_type_w
from	atendimento_paciente a,
		conta_paciente b
where	b.nr_interno_conta	= nr_seq_account_w
and		a.nr_atendimento	= b.nr_atendimento;

ie_encounter_type_w := get_eclipse_conversion('IE_TIPO_ATENDIMENTO', ie_encounter_type_w, 'DBS', null, nr_seq_account_w, ie_encounter_type_w);

select 	a.ie_referral_override
into STRICT	ie_referral_override_w
from	dbs_voucher a
where	nr_sequencia = nr_seq_voucher_p;

for r_c_procedimento in c_procedimento loop

	select 	max(a.dt_laudo),
			max(b.dt_atualizacao_nrec)
	into STRICT	dt_medical_report_w,
			dt_update_nrec_w
	FROM laudo_paciente a
LEFT OUTER JOIN prescr_proc_peca b ON (a.nr_sequencia = b.nr_seq_laudo)
WHERE a.nr_seq_proc = r_c_procedimento.nr_sequencia;
	
	select	max(cd_imobilizado_ext)
	into STRICT	nr_lsp_w
	from	equipamento
	where	cd_equipamento = r_c_procedimento.cd_equipamento;
	
	if (dt_medical_report_w > clock_timestamp()) then
		CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(567780), nm_usuario_p);
	end if;
	
	if (r_c_procedimento.cd_equipamento = 0) then
		CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(566689), nm_usuario_p);
	end if;
	
	if (r_c_procedimento.qt_duracao = 0) then
		CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(566689), nm_usuario_p);
	end if;
	
	if (ie_referral_override_w = 'H' and coalesce(r_c_procedimento.ds_observacao::text, '') = '') then
		CALL generate_inco_eclipse(nr_seq_account_w, 3, obter_desc_expressao(923766), nm_usuario_p);
	end if;
	
	if (coalesce(r_c_procedimento.vl_procedimento::text, '') = '') then
		CALL generate_inco_eclipse(nr_seq_account_w, 1, obter_desc_expressao(587168), nm_usuario_p);
	end if;
	
	select 	nextval('dbs_item_seq')
	into STRICT 	nr_sequencia_w
	;
	
	insert into dbs_item(
				nr_sequencia,
				nr_seq_voucher,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				dt_accession,
				ie_aftercare,
				vl_charge,
				dt_collection,
				ie_duplicate,
				cd_equipament,
				qt_service,
				ie_hospital,
				cd_item,
				cd_scp,
				nr_lsp,
				ie_multiple,
				qt_patients,
				ie_restrictive,
				ie_rule,
				ie_s4b3,
				ie_selfdeemed,
				ds_service,
				qt_duration)
			values (
				nr_sequencia_w,
				nr_seq_voucher_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				dt_medical_report_w,
				null,
				r_c_procedimento.vl_procedimento,
				dt_update_nrec_w,
				null,
				r_c_procedimento.cd_equipamento,
				null,
				ie_encounter_type_w,
				r_c_procedimento.cd_procedimento,
				r_c_procedimento.cd_setor_externo,
				nr_lsp_w,
				null,
				null,
				null,
				null,
				null,
				null,
				r_c_procedimento.ds_observacao,
				r_c_procedimento.qt_duracao);

end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_dbs_item ( nr_seq_voucher_p bigint, nm_usuario_p text, ie_validate_p text) FROM PUBLIC;

