-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_data_resultado_exame_orc (nr_seq_prescricao_p bigint, nr_prescricao_p bigint, dt_resultado_p INOUT timestamp) AS $body$
DECLARE


dt_resultado_w				timestamp;
nr_seq_exame_w				bigint;
cd_setor_atendimento_w			integer;
cd_material_exame_w			varchar(20);
dt_coleta_w				timestamp;
cd_setor_atend_w			varchar(255);
cd_setor_coleta_w			varchar(255);
cd_setor_entrega_w			varchar(255);
qt_dia_entrega_w			smallint;
ie_emite_mapa_w				varchar(1);
ds_hora_fixa_w				varchar(2);
ie_data_resultado_w			varchar(1);
qt_min_entrega_w			bigint;
ie_atualizar_recoleta_w			varchar(1);
ie_urgencia_w				varchar(1);
ie_dia_semana_final_w 			bigint;
ie_dia_semana_upd_w			smallint;
qt_min_atraso_w		    		bigint;
dt_prev_execucao_w			timestamp;
ie_forma_atual_dt_result_w		exame_lab_regra_setor.ie_atul_data_result%type;


BEGIN

		select	nr_seq_exame,
			cd_setor_atendimento,
			cd_material_exame,
			dt_coleta,
			ie_urgencia,
			dt_prev_execucao
		into STRICT	nr_seq_exame_w,
			cd_setor_atendimento_w,
			cd_material_exame_w,
			dt_coleta_w,
			ie_urgencia_w,
			dt_prev_execucao_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_prescricao_p;

		SELECT * FROM obter_setor_exame_lab(	nr_prescricao_p, nr_seq_exame_w, cd_setor_atendimento_w, cd_material_exame_w, dt_coleta_w, 'S', cd_setor_atend_w, cd_setor_coleta_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_urgencia_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w) INTO STRICT cd_setor_atend_w, cd_setor_coleta_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;


		if (ie_data_resultado_w = 'P') or (ie_data_resultado_w = 'N') then

			if (ds_hora_fixa_w IS NOT NULL AND ds_hora_fixa_w::text <> '') then

				select	(pkg_date_utils.start_of(coalesce(dt_prev_execucao_w,dt_prescricao), 'DD', 0) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END )
				into STRICT	dt_resultado_w
				from 	prescr_medica
				where 	nr_prescricao = nr_prescricao_p;
			else
				select	coalesce(dt_prev_execucao_w,dt_prescricao) + qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END )
				into STRICT	dt_resultado_w
				from 	prescr_medica
				where 	nr_prescricao = nr_prescricao_p;
			end if;

		elsif (ie_data_resultado_w = 'C') and (dt_coleta_w IS NOT NULL AND dt_coleta_w::text <> '') then

			if (ds_hora_fixa_w IS NOT NULL AND ds_hora_fixa_w::text <> '') then

				select	(pkg_date_utils.start_of(dt_coleta_w, 'DD', 0) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END )
				into STRICT	dt_resultado_w
				from 	prescr_medica
				where 	nr_prescricao = nr_prescricao_p;
			else
				select	dt_coleta_w + qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END )
				into STRICT	dt_resultado_w
				from 	prescr_medica
				where 	nr_prescricao = nr_prescricao_p;
			end if;
		end if;

		if (ie_dia_semana_final_w > 0) then

			select	pkg_date_utils.get_weekday(dt_resultado_w)
			into STRICT	ie_dia_semana_upd_w
			;

			while(ie_dia_semana_upd_w <> ie_dia_semana_final_w) loop
				dt_resultado_w := dt_resultado_w + 1;

				select	pkg_date_utils.get_weekday(dt_resultado_w)
				into STRICT	ie_dia_semana_upd_w
				;
			end loop;
		end if;

dt_resultado_p	:= dt_resultado_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_data_resultado_exame_orc (nr_seq_prescricao_p bigint, nr_prescricao_p bigint, dt_resultado_p INOUT timestamp) FROM PUBLIC;

