-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_valores_aval_ped (nr_sequencia_p bigint, qt_altura_p bigint, qt_circ_quadril_p bigint, nr_atendimento_p bigint, qt_idade_p bigint, ie_origem_peso_p text, qt_circ_braco_p bigint, qt_circ_abdomen_p bigint, qt_prega_cut_tricip_p bigint, qt_proteina_p bigint, qt_caloria_p bigint, qt_caloria_kj_p bigint, nr_seq_fator_ativ_p bigint, nr_seq_fator_stress_p bigint, qt_prega_cut_suprailiaca_p bigint, qt_prega_cut_abd_p bigint, ie_respiracao_p text, ie_queimadura_p text, ie_fator_ativ_fisica_p text, qt_circ_cintura_p bigint, qt_altura_joelho_p bigint, qt_prega_cut_subesc_p bigint, qt_circ_panturrilha_p bigint, dt_avaliacao_p timestamp, ie_trauma_p text, pr_perda_p INOUT bigint, qt_peso_atual_p INOUT bigint, qt_peso_habit_p INOUT bigint, qt_perda_p INOUT bigint, pr_perda_peso_p INOUT bigint, qt_imc_p INOUT bigint, qt_razao_cintura_quadril_p INOUT bigint, qt_altura_estimada_p INOUT bigint, qt_perc_circ_braco_p INOUT bigint, qt_perc_prega_cut_tricip_p INOUT bigint, qt_perc_circ_musc_braco_p INOUT bigint, qt_circ_musc_braco_p INOUT bigint, pr_circ_braco_p INOUT bigint, pr_prega_cut_tricip_p INOUT bigint, pr_circ_musc_braco_p INOUT bigint, qt_gasto_ener_repouso_p INOUT bigint, qt_nec_proteica_p INOUT bigint, qt_nec_calorica_p INOUT bigint, qt_nec_calorica_kj_p INOUT bigint, qt_gasto_ener_total_p INOUT bigint, qt_gasto_geb_mifflin_p INOUT bigint, pr_gordura_p INOUT bigint, qt_gast_ener_total_ireton_p INOUT bigint, qt_necessidade_energetica_p INOUT bigint, QT_OSSEA_P bigint, QT_PESO_AJUSTADO_AMP_P bigint, DS_IMC_P INOUT text, DS_RESULT_CB_P INOUT text, DS_RESULT_PCT_P INOUT text, DS_RESULT_CMB_P INOUT text, QT_FATOR_ATIV_FISICA_P INOUT text, DS_OSSEA_P INOUT text, DS_CLASS_ALTURA_IDADE_P INOUT text, DS_CLASS_IMC_IDADE_P INOUT text, DS_CLASS_PESO_ALTURA_P INOUT text, DS_CLASS_PESO_IDADE_P INOUT text, DS_ESTADO_NUTRICIONAL_P INOUT text, DS_CLASS_ALTURA_IDADE_Z_P INOUT text, DS_CLASS_PESO_IDADE_Z_P INOUT text, DS_CLASS_PESO_ALTURA_Z_P INOUT text, DS_CLASS_IMC_IDADE_Z_P INOUT text, IE_TCTH_P text default 'N', DS_PERC_CIRC_BRACO_Z_P INOUT text DEFAULT NULL, DS_PERC_PREGA_CUT_TRICIP_Z_P INOUT text DEFAULT NULL, QT_PESO_HABITUAL_P INOUT bigint DEFAULT NULL, DS_CLASS_ALTURA_IDADE_PZ_P INOUT text DEFAULT NULL, DS_CLASS_PESO_IDADE_PZ_P INOUT text DEFAULT NULL, DS_CLASS_PESO_ALTURA_PZ_P INOUT text DEFAULT NULL, DS_CLASS_IMC_IDADE_PZ_P INOUT text DEFAULT NULL) AS $body$
DECLARE



	cd_pessoa_fisica_w	varchar(10);
	ie_sexo_w		    varchar(1);
	qt_fator_ativ_w		double precision;
	qt_fator_stress_w	double precision;
	qt_obesidade		smallint;
	qt_pont_sexo		smallint;
	qt_pont_queimadura	smallint;
	qt_pont_trauma		smallint;
	ie_raca_negra_w		varchar(1);
	qt_nec_proteica_w	double precision;
	qt_meses_w			varchar(255);
	qt_50_w				real;
	qt_fator_ativ_fis_w double precision;
	ds_erro_w           varchar(4000);
	idade_ano_w         bigint;
	ds_estado_nutr_w    varchar(25);
	EXEC_W              varchar(300);
	qt_peso_atual_w     bigint;

BEGIN
	select	cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	idade_ano_w := Obter_Idade_PF(cd_pessoa_fisica_w, clock_timestamp(), 'A');

	select	obter_sexo_pf(cd_pessoa_fisica_w,'C')
	into STRICT	ie_sexo_w
	;

	qt_meses_w := obter_idade_pf(cd_pessoa_fisica_w,dt_avaliacao_p,'M');

	select max(qt_50)
	into STRICT   qt_50_w
	from   w_aval_who
	where  ie_tipo = 'IMC'
	and    ie_sexo = ie_sexo_w
	and    qt_meses = qt_meses_w;

  if (qt_altura_p > 0) and (qt_50_w > 0) then
    begin
      EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_PESO_HABITUAL_MD(:1,:2) INTO :result';

      EXECUTE EXEC_W USING IN qt_altura_p,
                                     IN qt_50_w,
                                     OUT qt_peso_habit_p;
    exception
      when others then
        qt_peso_habit_p := null;
    end;
  end if;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_PERC_PERDA_PESO_HAB_MD(:1,:2) INTO :result';

    EXECUTE EXEC_W USING IN qt_peso_atual_p,
                                   IN qt_peso_habit_p,
                                   OUT pr_perda_p;
  exception
    when others then
      pr_perda_p := null;
  end;

  begin
    EXEC_W := 'BEGIN OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_QTDE_PESO_PERDIDA_MD(:1,:2,:3,:4,:5); END;';

    EXECUTE EXEC_W USING IN qt_peso_atual_p,
                                   IN qt_peso_habit_p,
                                   IN qt_peso_habitual_p,
                                   OUT qt_perda_p,
                                   OUT pr_perda_peso_p;
  exception
    when others then
      qt_perda_p      := null;
      pr_perda_peso_p := null;
  end;

  if (qt_altura_p IS NOT NULL AND qt_altura_p::text <> '') then
    begin
      EXEC_W := 'CALL OBTER_VALOR_IMC_MD(:1,:2,:3) INTO :result';

      EXECUTE EXEC_W USING IN qt_peso_atual_p,
                                     IN 0,
                                     IN qt_altura_p,
                                     OUT qt_imc_p;
    exception
      when others then
        qt_imc_p  := null;
    end;

    if (qt_imc_p IS NOT NULL AND qt_imc_p::text <> '') then
        qt_imc_p := trunc(qt_imc_p,1);
    end if;
  end if;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_RELACAO_CINT_QUADRI_MD(:1,:2) INTO :result';

    EXECUTE EXEC_W USING IN qt_circ_quadril_p,
                                   IN qt_circ_cintura_p,
                                   OUT qt_razao_cintura_quadril_p;
  exception
    when others then
      qt_razao_cintura_quadril_p  := null;
  end;

	select	coalesce(max(ie_negro),'N')
	into STRICT	ie_raca_negra_w
	from	cor_pele a,
			pessoa_fisica b
	where	b.nr_seq_cor_pele 	= a.nr_sequencia
	and		b.cd_pessoa_fisica 	= cd_pessoa_fisica_w;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_ALTURA_ESTIMADA_MD(:1,:2,:3) INTO :result';

    EXECUTE EXEC_W USING IN ie_sexo_w,
                                   IN qt_idade_p,
                                   IN qt_altura_joelho_p,
                                   OUT qt_altura_estimada_p;
  exception
    when others then
      qt_altura_estimada_p  := null;
  end;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_PESO_ATUAL_AVAL_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9) INTO :result';

    EXECUTE EXEC_W USING IN ie_origem_peso_p,
                                   IN qt_altura_joelho_p,
                                   IN ie_sexo_w,
                                   IN qt_idade_p,			  
                                   IN qt_prega_cut_subesc_p,
                                   IN qt_circ_panturrilha_p,
                                   IN qt_circ_braco_p,
                                   IN qt_circ_abdomen_p,
                                   IN ie_raca_negra_w,
                                   OUT qt_peso_atual_w;
  exception
    when others then
      qt_peso_atual_w  := null;
  end;

  if (qt_peso_atual_w IS NOT NULL AND qt_peso_atual_w::text <> '') then
      qt_peso_atual_p := qt_peso_atual_w;
  end if;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_PERC_MEDIDA_AVAL_MD(:1) INTO :result';

    EXECUTE EXEC_W USING IN obter_classif_percentil(ie_raca_negra_w,ie_sexo_w,qt_idade_p,'CB'),
                                   OUT qt_perc_circ_braco_p;
  exception
    when others then
      qt_perc_circ_braco_p  := null;
  end;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_PERC_MEDIDA_AVAL_MD(:1) INTO :result';

    EXECUTE EXEC_W USING IN obter_classif_percentil(ie_raca_negra_w,ie_sexo_w,qt_idade_p,'PCT'),
                                   OUT qt_perc_prega_cut_tricip_p;
  exception
    when others then
      qt_perc_prega_cut_tricip_p  := null;
  end;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_PERC_MEDIDA_AVAL_MD(:1) INTO :result';

    EXECUTE EXEC_W USING IN obter_classif_percentil(ie_raca_negra_w,ie_sexo_w,qt_idade_p,'CMB'),
                                   OUT qt_perc_circ_musc_braco_p;
  exception
    when others then
      qt_perc_circ_musc_braco_p  := null;
  end;

  begin
    EXEC_W := 'BEGIN OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_C_MUS_BRA_PREG_CUT_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9); END;';

    EXECUTE EXEC_W USING IN qt_circ_braco_p,
                                   IN qt_prega_cut_tricip_p,
                                   IN qt_perc_circ_braco_p,
                                   IN qt_perc_prega_cut_tricip_p,
                                   IN qt_perc_circ_musc_braco_p,
                                   OUT qt_circ_musc_braco_p, 
                                   OUT pr_circ_braco_p,
                                   OUT pr_prega_cut_tricip_p,
                                   OUT pr_circ_musc_braco_p;
  exception
    when others then
      qt_circ_musc_braco_p    := null;
      pr_circ_braco_p         := null;
      pr_prega_cut_tricip_p   := null;
      pr_circ_musc_braco_p    := null;
  end;

  begin
    EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_GASTO_ENER_REPOUSO_MD(:1,:2,:3,:4,:5) INTO :result';

    EXECUTE EXEC_W USING IN ie_sexo_w,
                                   IN qt_peso_atual_p,
                                   IN qt_altura_p,
                                   IN qt_altura_estimada_p,
                                   IN qt_idade_p,
                                   OUT qt_gasto_ener_repouso_p;
  exception
    when others then
      qt_gasto_ener_repouso_p  := null;
  end;

	select	coalesce(max(qt_fator),1)
	into STRICT	qt_fator_stress_w
	from	nut_fator_stress
	where	nr_sequencia	= nr_seq_fator_stress_p;

	select	coalesce(max(qt_fator),1)
	into STRICT	qt_fator_ativ_w
	from	nut_fator_ativ
	where	nr_sequencia	= nr_seq_fator_ativ_p;

  begin
    EXEC_W := 'BEGIN OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_NEC_PROT_COLORICA_KJ_MD(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11); END;';

    EXECUTE EXEC_W USING IN qt_proteina_p,
                                   IN qt_peso_atual_p,
                                   IN qt_caloria_p,
                                   IN qt_caloria_kj_p,
                                   IN qt_gasto_ener_repouso_p,
                                   IN qt_fator_stress_w,
                                   IN qt_fator_ativ_w,
                                   OUT qt_nec_proteica_p, 
                                   OUT qt_nec_calorica_p,
                                   OUT qt_nec_calorica_kj_p,
                                   OUT qt_gasto_ener_total_p;
  exception
    when others then
      qt_nec_proteica_p       := null;
      qt_nec_calorica_p       := null;
      qt_nec_calorica_kj_p    := null;
      qt_gasto_ener_total_p   := null;
  end;
	
	begin
    begin
      EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_GASTO_GEB_MIFFLIN_MD(:1,:2,:3,:4) INTO :result';

      EXECUTE EXEC_W USING IN qt_altura_p,
                                     IN ie_sexo_w,
                                     IN qt_peso_atual_p,
                                     IN qt_idade_p,
                                     OUT qt_gasto_geb_mifflin_p;
    exception
      when others then
        qt_gasto_geb_mifflin_p  := null;
    end;

    begin
      EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_PR_GORDURA_MD(:1,:2,:3,:4) INTO :result';

      EXECUTE EXEC_W USING IN qt_prega_cut_tricip_p,
                                     IN qt_prega_cut_suprailiaca_p,
                                     IN qt_prega_cut_subesc_p,
                                     IN qt_prega_cut_abd_p,
                                     OUT pr_gordura_p;
    exception
      when others then
        pr_gordura_p  := null;
    end;

    begin
      EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_GAST_ENER_IRETON_MD(:1,:2,:3,:4,:5,:6,:7) INTO :result';

      EXECUTE EXEC_W USING IN ie_respiracao_p,
                                     IN qt_imc_p,
                                     IN qt_idade_p,
                                     IN qt_peso_atual_p,
                                     IN ie_queimadura_p,
                                     IN ie_trauma_p,
                                     IN ie_sexo_w,
                                     OUT qt_gast_ener_total_ireton_p;
    exception
      when others then
        qt_gast_ener_total_ireton_p  := null;
    end;
	
		qt_fator_ativ_fis_w         := (obter_qt_fator_ativ_fisica(ie_fator_ativ_fisica_p, nr_atendimento_p))::numeric;
		if (qt_fator_ativ_fis_w IS NOT NULL AND qt_fator_ativ_fis_w::text <> '') and (qt_fator_ativ_fis_w > 0) then
			qt_necessidade_energetica_p := obter_nec_energetica(qt_peso_atual_p,qt_altura_p,qt_fator_ativ_fis_w,nr_atendimento_p);
		else
			qt_necessidade_energetica_p := null;
		end if;

    begin 
      EXEC_W := 'CALL OBTER_VALORES_AVAL_PED_MD_PCK.OBTER_NECESSIDADE_ENERG_MD(:1,:2,:3,:4,:6,:7) INTO :result';

      EXECUTE EXEC_W USING IN ie_tcth_p,
                                     IN ie_sexo_w,
                                     IN idade_ano_w,
                                     IN qt_peso_atual_p,
                                     IN qt_meses_w,
                                     IN qt_necessidade_energetica_p,
                                     OUT qt_necessidade_energetica_p;
    exception
      when others then
        qt_necessidade_energetica_p  := null;
    end;
	exception
	when others then
		null;
	end;

	-- Campos functions
	begin
    begin
      EXEC_W := 'CALL OBTER_DS_ESTADO_NUTRICIONAL_MD(:1) INTO :result';

      EXECUTE EXEC_W USING IN pr_perda_p,
                                     OUT ds_imc_p;
    exception
      when others then
        ds_imc_p  := null;
    end;
    ds_imc_p 				:= substr(ds_imc_p,1,255);
		
		ds_result_cb_p			:= substr(obter_result_cb(pr_circ_braco_p),1,255);
		ds_result_pct_p			:= substr(obter_result_pct(pr_prega_cut_tricip_p),1,255);
		ds_result_cmb_p			:= substr(obter_result_cmb(pr_circ_musc_braco_p),1,255);
		qt_fator_ativ_fisica_p	:= qt_fator_ativ_fis_w;
		ds_ossea_p				:= substr(obter_ds_ossea(qt_ossea_p, nr_atendimento_p),1,255);
		ds_class_altura_idade_p := substr(obter_par_antrop(nr_atendimento_p,'AI',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p),1,255);
		ds_class_imc_idade_p	:= substr(obter_par_antrop(nr_atendimento_p,'IMCI',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p,null,null,qt_imc_p),1,255);
		ds_class_peso_altura_p	:= substr(obter_par_antrop(nr_atendimento_p,'PA',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p),1,255);
		ds_class_peso_idade_p	:= substr(obter_par_antrop(nr_atendimento_p,'PI',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p),1,255);

    begin
      EXEC_W := 'CALL OBTER_DS_ESTADO_NUTRICIONAL_MD(:1) INTO :result';

      EXECUTE EXEC_W USING IN pr_perda_p,
                                     OUT ds_estado_nutricional_p;
    exception
      when others then
        ds_estado_nutricional_p  := null;
    end;
    ds_estado_nutricional_p := substr(ds_estado_nutricional_p,1,255);

		ds_perc_circ_braco_z_p   := substr(Obter_par_antrop_z(nr_atendimento_p,'ZCB',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p,null,null,null, qt_circ_braco_p,null),1,255);
		ds_perc_prega_cut_tricip_z_p := substr(Obter_par_antrop_z(nr_atendimento_p,'ZPC',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p,null,null,null,null,qt_prega_cut_tricip_p),1,255);
		ds_class_altura_idade_z_p := substr(Obter_par_antrop_z(nr_atendimento_p,'ZAI',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p),1,255);
		ds_class_peso_idade_z_p := substr(Obter_par_antrop_z(nr_atendimento_p,'ZPI',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p),1,255);
		ds_class_peso_altura_z_p := substr(Obter_par_antrop_z(nr_atendimento_p,'ZPA',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p),1,255);
		ds_class_imc_idade_z_p := substr(Obter_par_antrop_z(nr_atendimento_p,'ZMC',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p,null,null,qt_imc_p),1,255);	
		
		DS_CLASS_ALTURA_IDADE_PZ_P := substr(Obter_par_antrop_pz(nr_atendimento_p,'AI',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p,  qt_idade_p, qt_meses_w),1,255);

		DS_CLASS_PESO_IDADE_PZ_P := substr(Obter_par_antrop_pz(nr_atendimento_p,'PI',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p,  qt_idade_p, qt_meses_w),1,255);

		DS_CLASS_PESO_ALTURA_PZ_P := substr(Obter_par_antrop_pz(nr_atendimento_p,'PA',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p,  qt_idade_p, qt_meses_w),1,255);

		DS_CLASS_IMC_IDADE_PZ_P := substr(Obter_par_antrop_pz(nr_atendimento_p,'IMC',coalesce(qt_peso_ajustado_amp_p,qt_peso_atual_p),qt_altura_p,dt_avaliacao_p, qt_idade_p, qt_meses_w,qt_imc_p),1,255);

	exception
		when others then
			null;
	end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_valores_aval_ped (nr_sequencia_p bigint, qt_altura_p bigint, qt_circ_quadril_p bigint, nr_atendimento_p bigint, qt_idade_p bigint, ie_origem_peso_p text, qt_circ_braco_p bigint, qt_circ_abdomen_p bigint, qt_prega_cut_tricip_p bigint, qt_proteina_p bigint, qt_caloria_p bigint, qt_caloria_kj_p bigint, nr_seq_fator_ativ_p bigint, nr_seq_fator_stress_p bigint, qt_prega_cut_suprailiaca_p bigint, qt_prega_cut_abd_p bigint, ie_respiracao_p text, ie_queimadura_p text, ie_fator_ativ_fisica_p text, qt_circ_cintura_p bigint, qt_altura_joelho_p bigint, qt_prega_cut_subesc_p bigint, qt_circ_panturrilha_p bigint, dt_avaliacao_p timestamp, ie_trauma_p text, pr_perda_p INOUT bigint, qt_peso_atual_p INOUT bigint, qt_peso_habit_p INOUT bigint, qt_perda_p INOUT bigint, pr_perda_peso_p INOUT bigint, qt_imc_p INOUT bigint, qt_razao_cintura_quadril_p INOUT bigint, qt_altura_estimada_p INOUT bigint, qt_perc_circ_braco_p INOUT bigint, qt_perc_prega_cut_tricip_p INOUT bigint, qt_perc_circ_musc_braco_p INOUT bigint, qt_circ_musc_braco_p INOUT bigint, pr_circ_braco_p INOUT bigint, pr_prega_cut_tricip_p INOUT bigint, pr_circ_musc_braco_p INOUT bigint, qt_gasto_ener_repouso_p INOUT bigint, qt_nec_proteica_p INOUT bigint, qt_nec_calorica_p INOUT bigint, qt_nec_calorica_kj_p INOUT bigint, qt_gasto_ener_total_p INOUT bigint, qt_gasto_geb_mifflin_p INOUT bigint, pr_gordura_p INOUT bigint, qt_gast_ener_total_ireton_p INOUT bigint, qt_necessidade_energetica_p INOUT bigint, QT_OSSEA_P bigint, QT_PESO_AJUSTADO_AMP_P bigint, DS_IMC_P INOUT text, DS_RESULT_CB_P INOUT text, DS_RESULT_PCT_P INOUT text, DS_RESULT_CMB_P INOUT text, QT_FATOR_ATIV_FISICA_P INOUT text, DS_OSSEA_P INOUT text, DS_CLASS_ALTURA_IDADE_P INOUT text, DS_CLASS_IMC_IDADE_P INOUT text, DS_CLASS_PESO_ALTURA_P INOUT text, DS_CLASS_PESO_IDADE_P INOUT text, DS_ESTADO_NUTRICIONAL_P INOUT text, DS_CLASS_ALTURA_IDADE_Z_P INOUT text, DS_CLASS_PESO_IDADE_Z_P INOUT text, DS_CLASS_PESO_ALTURA_Z_P INOUT text, DS_CLASS_IMC_IDADE_Z_P INOUT text, IE_TCTH_P text default 'N', DS_PERC_CIRC_BRACO_Z_P INOUT text DEFAULT NULL, DS_PERC_PREGA_CUT_TRICIP_Z_P INOUT text DEFAULT NULL, QT_PESO_HABITUAL_P INOUT bigint DEFAULT NULL, DS_CLASS_ALTURA_IDADE_PZ_P INOUT text DEFAULT NULL, DS_CLASS_PESO_IDADE_PZ_P INOUT text DEFAULT NULL, DS_CLASS_PESO_ALTURA_PZ_P INOUT text DEFAULT NULL, DS_CLASS_IMC_IDADE_PZ_P INOUT text DEFAULT NULL) FROM PUBLIC;

