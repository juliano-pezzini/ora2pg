-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_pagto_citibank_600 ( nr_seq_envio_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* PADRÃO CNAB 600 */
 
ds_conteudo_w		varchar(600);
cd_cgc_w		varchar(14);
cd_cpf_cnpj_w		varchar(14);
nm_empresa_w		varchar(15);
nm_pessoa_w		varchar(15);
ds_endereco_w		varchar(30);
nr_cep_w		varchar(8);
cd_banco_w		varchar(3);
cd_agencia_bancaria_w	varchar(4);
nr_conta_w		varchar(15);
nr_titulo_w		bigint;
dt_vencimento_w		varchar(6);
vl_titulo_w		double precision;
ie_tipo_pagamento_w	varchar(3);
ie_modalidade_w		smallint;
vl_escritural_w		double precision;
vl_acrescimo_w		double precision;
vl_desconto_w		double precision;
vl_juros_w		double precision;
vl_multa_w		double precision;
vl_despesa_w		double precision;
nr_conta_estab_w	varchar(10);
nr_conta_complementar_w	varchar(10);
cd_banco_estab_w	varchar(3);
nr_bloqueto_w		varchar(50);
cd_pessoa_fisica_w	varchar(10);
cd_cgc_estab_w		varchar(14);
nr_seq_pag_w		integer;
nr_bloqueto_orig_w	titulo_pagar.nr_bloqueto%type;
vl_bloqueto_w		double precision;
ie_servico_w		varchar(2);
ds_cidade_w		varchar(15);
ds_estado_w		varchar(2);
ds_telefone_w		varchar(11);
ie_tipo_conta_benef_w	varchar(2);
ds_email_w		varchar(45);
ie_tipo_conta_citibank_w	varchar(2);
nr_conta_citibank_w		bigint;
nr_seq_pag_trl_w	bigint;	
cd_estabelecimento_w	smallint;
ie_tipo_inscricao_w	varchar(1);
nm_beneficiario_w	varchar(80);
cd_transmissao_w	banco_estabelecimento.cd_transmissao%type;
cd_banco_externo_w	banco.cd_banco_externo%type;
qt_banco_externo_w	bigint;
dt_remessa_retorno_w	varchar(6);
cd_banco_benef_w	banco.cd_banco_externo%type;
cd_agencia_benef_w	varchar(4);
nr_conta_benef_w	varchar(15);
ie_digito_conta_w	varchar(1);
ie_numer_digito_w	varchar(1);

c01 CURSOR FOR 
SELECT	rpad(upper(elimina_acentuacao(substr(obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc),1,255))),15,' ') nm_pessoa, 
	rpad(coalesce(upper(elimina_acentuacao(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'R'),1,30))),' '),30,' ') ds_endereco, 
	lpad(substr(somente_numero(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'CEP')),1,8),8,'0') nr_cep, 
	lpad(coalesce(a.cd_banco,0),3,'0'), 
	lpad(substr(coalesce(a.cd_agencia_bancaria,'0'),1,4),4,'0') cd_agencia_bancaria, 
	lpad(substr(coalesce(a.nr_conta,'0'),1,14),14,'0') nr_conta, 
	a.nr_titulo, 
	to_char(b.dt_vencimento_atual,'yymmdd'), 
	b.vl_titulo, 
	a.vl_escritural, 
	a.vl_acrescimo, 
	a.vl_desconto, 
	a.ie_tipo_pagamento, 
	CASE WHEN a.ie_tipo_pagamento='DOC' THEN '071' WHEN a.ie_tipo_pagamento='BLQ' THEN '081' WHEN a.ie_tipo_pagamento='CC' THEN '072' WHEN a.ie_tipo_pagamento='PC' THEN '088' WHEN a.ie_tipo_pagamento='TED' THEN '083' END  ie_modalidade, 
	a.vl_juros, 
	a.vl_multa, 
	a.vl_despesa, 
	rpad(coalesce(substr(Converte_Codigo_Bloqueto('Barra_Lido',b.nr_bloqueto),1,50),' '),50,' ') nr_bloqueto, 
	b.cd_pessoa_fisica, 
	b.cd_cgc, 
	b.nr_bloqueto, 
	CASE WHEN a.ie_tipo_servico='00115' THEN '26' WHEN a.ie_tipo_servico='00110' THEN '25' WHEN a.ie_tipo_servico='00100' THEN '21' WHEN a.ie_tipo_servico='00020' THEN '01' WHEN a.ie_tipo_servico='00030' THEN '20' WHEN a.ie_tipo_servico='00130' THEN '33' WHEN a.ie_tipo_servico='00125' THEN '32' WHEN a.ie_tipo_servico='00105' THEN '22' WHEN a.ie_tipo_servico='00120' THEN '31' END  ie_servico, 
	rpad(coalesce(upper(elimina_acentuacao(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'CI'),1,15))),' '),15,' ') ds_cidade, 
	rpad(coalesce(upper(elimina_acentuacao(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'UF'),1,2))),' '),2,' ') ds_estado, 
	lpad(somente_numero(coalesce(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'T'),1,11),'0')),11,'0') ds_telefone, 
	rpad(coalesce(upper(elimina_acentuacao(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'M'),1,45))),' '),45,' ') ds_email, 
	CASE WHEN coalesce(b.cd_pessoa_fisica::text, '') = '' THEN 'J'  ELSE 'F' END  ie_tipo_inscricao, /*alterado */
 
	lpad(coalesce(upper(elimina_acentuacao(substr(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'C'),1,14))),'0'),14,'0') cd_cpf_cnpj, 
	rpad(substr(coalesce(obter_dados_pf_pj(b.cd_pessoa_fisica,b.cd_cgc,'RP'),obter_nome_pf_pj(b.cd_pessoa_fisica,b.cd_cgc)),1,80),80,' ') nm_beneficiario, 
	lpad(coalesce(d.cd_banco_externo,'0'),3,'0') cd_banco_externo, 
	lpad(substr(coalesce(a.ie_digito_conta,'0'),1,1),1,'0') ie_digito_conta 
FROM titulo_pagar b
LEFT OUTER JOIN pessoa_fisica c ON (b.cd_pessoa_fisica = c.cd_pessoa_fisica)
, titulo_pagar_escrit a
LEFT OUTER JOIN banco d ON (a.cd_banco = d.cd_banco)
WHERE a.nr_titulo		= b.nr_titulo and a.nr_seq_escrit		= nr_seq_envio_p;

/* Trailer do arquivo */
 
vl_total_w		double precision	:= 0;


BEGIN  
 
delete	from w_envio_banco 
where	nm_usuario	= nm_usuario_p;
 
/* Header do arquivo */
 
 
select	lpad(substr(coalesce(b.cd_conta,'0'),1,10),10,'0') nr_conta_estab, 
	b.cd_banco, 
	c.cd_cgc, 
	rpad(upper(elimina_acentuacao(substr(obter_nome_pf_pj(null,c.cd_cgc),1,255))),15,' ') nm_empresa, 
	lpad(substr(coalesce(b.cd_transmissao,'0'),1,10),10,'0') cd_transmissao, 
	to_char(a.dt_remessa_retorno,'yymmdd') 
into STRICT	nr_conta_estab_w, 
	cd_banco_estab_w, 
	cd_cgc_estab_w, 
	nm_empresa_w, 
	cd_transmissao_w, 
	dt_remessa_retorno_w 
from	estabelecimento c, 
	banco_estabelecimento b, 
	banco_escritural a 
where	c.cd_estabelecimento	= coalesce(b.cd_estabelecimento,a.cd_estabelecimento) 
and	a.nr_seq_conta_banco	= b.nr_sequencia 
and	a.nr_sequencia		= nr_seq_envio_p;
 
select	lpad(substr(coalesce(max(a.nr_conta),'0'),1,10),10,'0') 
into STRICT	nr_conta_complementar_w 
from	pessoa_juridica_conta a 
where	a.cd_banco	= cd_banco_estab_w 
and	a.cd_cgc	= cd_cgc_estab_w;
 
if (somente_numero(nr_conta_complementar_w) = 0) then 
 
	nr_conta_complementar_w	:= nr_conta_estab_w;
 
end if;
 
select	count(*) 
into STRICT	qt_banco_externo_w 
from	banco a 
where	a.cd_banco_externo	= '745';
 
/* Transação */
 
 
open	c01;
loop 
fetch	c01 into 
	nm_pessoa_w, 
	ds_endereco_w, 
	nr_cep_w, 
	cd_banco_w, 
	cd_agencia_bancaria_w, 
	nr_conta_w, 
	nr_titulo_w, 
	dt_vencimento_w, 
	vl_titulo_w, 
	vl_escritural_w, 
	vl_acrescimo_w, 
	vl_desconto_w, 
	ie_tipo_pagamento_w, 
	ie_modalidade_w, 
	vl_juros_w, 
	vl_multa_w, 
	vl_despesa_w, 
	nr_bloqueto_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	nr_bloqueto_orig_w, 
	ie_servico_w, 
	ds_cidade_w, 
	ds_estado_w, 
	ds_telefone_w, 
	ds_email_w, 
	ie_tipo_inscricao_w, 
	cd_cpf_cnpj_w, 
	nm_beneficiario_w, 
	cd_banco_externo_w, 
	ie_digito_conta_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	if (nr_bloqueto_orig_w IS NOT NULL AND nr_bloqueto_orig_w::text <> '') then 
 
		begin 
 
			vl_bloqueto_w	:= (obter_dados_cod_barras(nr_bloqueto_orig_w,'V'))::numeric;
 
			if (coalesce(vl_bloqueto_w,0) = 0) or (coalesce(vl_bloqueto_w,0)	> coalesce(vl_titulo_w,0)) then 
 
				vl_bloqueto_w	:= null;
 
			end if;
 
		exception 
		when others then 
 
			vl_bloqueto_w	:= null;
 
		end;
 
	else 
 
		vl_bloqueto_w	:= null;
 
	end if;
 
	if (ie_modalidade_w = '071') or (ie_modalidade_w = '083') then 
		ie_tipo_conta_benef_w := '01';
	else 
		ie_tipo_conta_benef_w := '00';
	end if;
 
	nr_seq_pag_w	:= coalesce(nr_seq_pag_w,0) + 1;
	nr_seq_pag_trl_w	:= coalesce(nr_seq_pag_trl_w,0) + 1;
	 
	if (ie_tipo_pagamento_w	= 'CC') then 
 
		/* Se o código do Citibank tiver sido cadastrado como "externo", considera o código externo */
 
		if (coalesce(qt_banco_externo_w,0)	= 0) then 
 
			select	max(nr_conta) 
			into STRICT	nr_conta_citibank_w 
			from (SELECT	a.nr_conta 
				from	banco b, 
					pessoa_fisica_conta a 
				where	b.cd_banco_externo	= '745' 
				and	a.cd_banco		= b.cd_banco 
				and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w 
				
union all
 
				SELECT	a.nr_conta 
				from	banco b, 
					pessoa_juridica_conta a 
				where	b.cd_banco_externo	= '745' 
				and	a.cd_banco		= b.cd_banco 
				and	a.cd_cgc		= cd_cgc_w) alias4;
 
		else 
 
			select	max(nr_conta) 
			into STRICT	nr_conta_citibank_w 
			from (SELECT	a.nr_conta 
				from	pessoa_fisica_conta a 
				where	a.cd_banco		= 745 
				and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w 
				
union all
 
				SELECT	a.nr_conta 
				from	pessoa_juridica_conta a 
				where	a.cd_banco		= 745 
				and	a.cd_cgc		= cd_cgc_w) alias1;
 
		end if;
 
		ie_tipo_conta_citibank_w	:= '01';
	else 
		nr_conta_citibank_w		:= '0';
		ie_tipo_conta_citibank_w	:= '00';
 
	end if;
 
	if (coalesce(vl_bloqueto_w,0)	<> 0) and (coalesce(vl_bloqueto_w,0)	< coalesce(vl_escritural_w,0)) then 
 
		vl_desconto_w	:= coalesce(vl_escritural_w,0) - coalesce(vl_bloqueto_w,0);
 
	end if;
	 
	select	a.cd_estabelecimento 
	into STRICT	cd_estabelecimento_w 
	from	estabelecimento c, 
		banco_estabelecimento b, 
		banco_escritural a 
	where	c.cd_estabelecimento	= coalesce(b.cd_estabelecimento,a.cd_estabelecimento) 
	and	a.nr_seq_conta_banco	= b.nr_sequencia 
	and	a.nr_sequencia		= nr_seq_envio_p;
 
	if (ie_modalidade_w	in ('071','083')) then 
		 
		if (ie_digito_conta_w IS NOT NULL AND ie_digito_conta_w::text <> '') then /*verificar se é somente numero no digito da conta*/
 
		 
			select 	obter_se_somente_numero(ie_digito_conta_w) 
			into STRICT	ie_numer_digito_w 
			;
			 
		end if;
		 
		if ( coalesce(ie_numer_digito_w,'S') = 'N' ) then /*Se não for número substituir por 0*/
 
			ie_digito_conta_w := '0';
		end if;
 
		cd_banco_benef_w	:= lpad(substr(cd_banco_externo_w,1,3),3,'0');
		cd_agencia_benef_w	:= cd_agencia_bancaria_w;
		nr_conta_benef_w	:= lpad(substr(nr_conta_w,1,14),14,'0');
		nr_conta_benef_w  := nr_conta_benef_w || ie_digito_conta_w;
	else 
 
		cd_banco_benef_w	:= '000';
		cd_agencia_benef_w	:= '0000';
		nr_conta_benef_w	:= lpad('0',15,'0');
 
	end if;
 
	vl_total_w		:= coalesce(vl_total_w,0) + coalesce(vl_bloqueto_w,coalesce(vl_escritural_w,0)) - coalesce(vl_desconto_w,0) + coalesce(vl_acrescimo_w,0) + coalesce(vl_juros_w,0) + coalesce(vl_multa_w,0) + coalesce(vl_despesa_w,0);
 
	ds_conteudo_w	:=	'PAY' || 
				'076' || 
				lpad(cd_transmissao_w,10,'0') || 
				coalesce(dt_remessa_retorno_w,dt_vencimento_w) || 
				lpad(coalesce(ie_modalidade_w,0),3,'0') || 
				rpad(nr_titulo_w,15,' ') || 
				lpad(substr(nr_seq_pag_w,1,8),8,'0') || 
				lpad(cd_cpf_cnpj_w,14,'0') || /* trocado */
 
				'BRL' || 
				rpad(nr_titulo_w,10,' ') || 
				lpad(somente_numero(to_char(coalesce(vl_bloqueto_w,coalesce(vl_escritural_w,0)) - coalesce(vl_desconto_w,0) + coalesce(vl_acrescimo_w,0) + coalesce(vl_juros_w,0) + coalesce(vl_multa_w,0) + coalesce(vl_despesa_w,0),'9999999999990.00')),15,'0') || 
				rpad('0',6,'0') ||  
				rpad(nr_titulo_w,30,' ') || 
				cd_cgc_estab_w ||  /* trocado */
 
				'J'|| /*ie_tipo_inscricao_w ||*/
 
				rpad(substr(nm_empresa_w,1,15),15,' ') || /*nm_pessoa_w ||*/
 
				rpad('0',6,'0') || 
				ie_servico_w || 
				'01' || 
				nm_beneficiario_w || 
				ds_endereco_w || 
				ds_cidade_w || 
				ds_estado_w || 
				nr_cep_w || 
				ds_telefone_w || 
				cd_banco_benef_w || 
				cd_agencia_benef_w || 
				lpad(' ',4,' ') || 
				nr_conta_benef_w || 
				rpad(' ',1,' ') || 
				ie_tipo_conta_benef_w || 
				rpad(' ',30,' ') || 
				rpad(' ',15,' ') || 
				rpad(' ',2,' ') || 
				lpad('0',10,'0') ||	 
				rpad(' ',20,' ') || 
				rpad(' ',15,' ') || 
				lpad(substr(coalesce(nr_conta_citibank_w,'0'),1,10),10,'0') || 
				coalesce(ie_tipo_conta_citibank_w,'00') || 
				'001' || 
				nr_bloqueto_w || 
				rpad(' ',5,' ') || 
				ds_email_w || 
				rpad(' ',52,' ');
 
	insert	into w_envio_banco(ds_conteudo, 
		cd_estabelecimento, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_apres, 
		nr_seq_apres_2, 
		nr_sequencia) 
	values (ds_conteudo_w, 
		cd_estabelecimento_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_pag_w, 
		nr_seq_pag_w, 
		nextval('w_envio_banco_seq'));
 
end	loop;
close	c01;
 
/* Trailer do arquivo */
 
ds_conteudo_w	:=	'TRL' || 
			lpad(substr(nr_seq_pag_w,1,15),15,'0') || 
			lpad(somente_numero(to_char(coalesce(vl_total_w,0),'9999999999990.00')),15,'0') || 
			rpad('0',15,'0') || 
			lpad(substr(nr_seq_pag_w,1,15),15,'0') || 
			rpad(' ',37,' ') || 
			rpad('§',500,'§');	/* esses caracteres são removidos pelo componente ExpImp para que o trailer fique com a quantidade correta de caracteres (100), senão ele fica com 600 caracteres (o que é errado) */
			 
			nr_seq_pag_w	:= coalesce(nr_seq_pag_w,0) + 1;
 
insert	into w_envio_banco(ds_conteudo, 
	cd_estabelecimento, 
	dt_atualizacao, 
	nm_usuario, 
	nr_seq_apres, 
	nr_seq_apres_2, 
	nr_sequencia) 
values (ds_conteudo_w, 
	cd_estabelecimento_w, 
	clock_timestamp(), 
	nm_usuario_p, 
	nr_seq_pag_w, 
	nr_seq_pag_w, 
	nextval('w_envio_banco_seq'));
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_pagto_citibank_600 ( nr_seq_envio_p bigint, nm_usuario_p text) FROM PUBLIC;

