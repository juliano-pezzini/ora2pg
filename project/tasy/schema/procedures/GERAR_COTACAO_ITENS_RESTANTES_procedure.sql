-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cotacao_itens_restantes ( nr_cot_compra_orig_p bigint, nm_usuario_p text) AS $body$
DECLARE



qt_registros_w		bigint;
qt_dias_Retorno_w		bigint;
cd_perfil_w		perfil.cd_perfil%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
nr_cot_compra_w		cot_compra.nr_cot_compra%type;
ds_observacao_w		cot_compra.ds_observacao%type;
dt_retorno_w		cot_compra.dt_retorno_prev%type;
nr_item_cot_compra_w	cot_compra_item.nr_item_cot_compra%type;
nr_item_cot_compra_ww	cot_compra_item.nr_item_cot_compra%type;
qt_material_w		cot_compra_item.qt_material%type;
qt_material_fornec_w	cot_compra_forn_item.qt_material%type;
qt_diferenca_w		double precision := 0;
qt_saldo_w		double precision := 0;
nr_seq_entrega_w		cot_compra_item_entrega.nr_sequencia%type;
qt_entrega_w		cot_compra_item_entrega.qt_entrega%type;

c01 CURSOR FOR
SELECT	nr_item_cot_compra,
	qt_material
from	cot_compra_item
where	nr_cot_compra = nr_cot_compra_orig_p;

c02 CURSOR FOR
SELECT	nr_sequencia,
	qt_entrega
from	cot_compra_item_entrega
where	nr_cot_compra = nr_cot_compra_orig_p
and	nr_item_cot_compra = nr_item_cot_compra_w
order by dt_entrega desc;


BEGIN

select	count(*)
into STRICT	qt_registros_w
from	cot_compra_resumo
where	nr_cot_compra = nr_cot_compra_orig_p;

if (qt_registros_w > 0) then

	select	count(*)
	into STRICT	qt_registros_w
	from	cot_compra_item a
	where	a.nr_cot_compra = nr_cot_compra_orig_p
	and	a.qt_material > (
				SELECT	coalesce(min(x.qt_material),0)
				from	cot_compra_resumo x
				where	x.nr_cot_compra = a.nr_cot_compra
				and	x.nr_item_cot_compra = a.nr_item_cot_compra);

	if (qt_registros_w > 0) then

		select	cd_estabelecimento,
			obter_perfil_ativo
		into STRICT	cd_estabelecimento_w,
			cd_perfil_w
		from	cot_compra
		where	nr_cot_compra = nr_cot_compra_orig_p;

		select	coalesce(max(obter_valor_param_usuario(915, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)),7)
		into STRICT	qt_dias_Retorno_w
		;

		dt_retorno_w := clock_timestamp() + qt_dias_Retorno_w;

		ds_observacao_w	:= Wheb_mensagem_pck.get_Texto(301320, 'NR_COT_COMPRA_ORIG_P='|| NR_COT_COMPRA_ORIG_P); /*Gerada através da cotação ' || NR_COT_COMPRA_ORIG_P;*/
		select	nextval('cot_compra_seq')
		into STRICT	nr_cot_compra_w
		;

		insert into cot_compra(
			nr_cot_compra,
			dt_cot_compra,
			dt_atualizacao,
			cd_comprador,
			nm_usuario,
			ds_observacao,
			cd_pessoa_solicitante,
			cd_estabelecimento,
			dt_retorno_prev)
		SELECT	nr_cot_compra_w,
			clock_timestamp(),
			clock_timestamp(),
			cd_comprador,
			nm_usuario_p,
			ds_observacao_w,
			cd_pessoa_solicitante,
			cd_estabelecimento,
			dt_retorno_w
		from	cot_compra
		where	nr_cot_compra = nr_cot_compra_orig_p;

		open C01;
		loop
		fetch C01 into
			nr_item_cot_compra_w,
			qt_material_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			select	count(*)
			into STRICT	qt_registros_w
			from	cot_compra_resumo
			where	nr_cot_compra = nr_cot_compra_orig_p
			and	nr_item_cot_compra = nr_item_cot_compra_w;

			if (qt_registros_w > 0) then

				select	min(qt_material)
				into STRICT	qt_material_fornec_w
				from	cot_compra_resumo
				where	nr_cot_compra = nr_cot_compra_orig_p
				and	nr_item_cot_compra = nr_item_cot_compra_w;

				qt_diferenca_w	:= qt_material_w - qt_material_fornec_w;
				qt_saldo_w	:= qt_diferenca_w;

				if (qt_diferenca_w > 0) then

					update	cot_compra_item
					set	qt_material = qt_material_fornec_w
					where	nr_cot_compra = nr_cot_compra_orig_p
					and	nr_item_cot_compra = nr_item_cot_compra_w;

					open C02;
					loop
					fetch C02 into
						nr_seq_entrega_w,
						qt_entrega_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin

						if (qt_entrega_w > qt_diferenca_w) then

							qt_saldo_w := 0;

							update	cot_compra_item_entrega
							set	qt_entrega = qt_entrega - qt_diferenca_w
							where	nr_sequencia = nr_seq_entrega_w;

						else

							if (qt_saldo_w >= qt_entrega_w) then
								delete from cot_compra_item_entrega
								where	nr_sequencia = nr_seq_entrega_w;
							else
								update	cot_compra_item_entrega
								set	qt_entrega = qt_entrega - qt_saldo_w
								where	nr_sequencia = nr_seq_entrega_w;
							end if;

							qt_saldo_w	:= qt_saldo_w - qt_entrega_w;

						end if;

						if (qt_saldo_w <= 0) then
							exit;
						end if;

						select	coalesce(max(nr_item_cot_compra),0) +1
						into STRICT	nr_item_cot_compra_ww
						from	cot_compra_item
						where	nr_cot_compra = nr_cot_compra_w;

						insert into cot_compra_item(
							nr_cot_compra,
							nr_item_cot_compra,
							cd_material,
							qt_material,
							cd_unidade_medida_compra,
							dt_atualizacao,
							dt_limite_entrega,
							nm_usuario,
							ie_situacao,
							ds_material_direto_w,
							ie_regra_preco,
							nr_solic_compra,
							nr_item_solic_compra,
							cd_estab_item,
							vl_unit_previsto)
						SELECT	nr_cot_compra_w,
							nr_item_cot_compra_ww,
							cd_material,
							qt_diferenca_w,
							cd_unidade_medida_compra,
							clock_timestamp(),
							trunc(dt_retorno_w,'dd'),
							nm_usuario_p,
							ie_situacao,
							ds_material_direto_w,
							ie_regra_preco,
							nr_solic_compra,
							nr_item_solic_compra,
							cd_estab_item,
							vl_unit_previsto
						from	cot_compra_item
						where	nr_cot_compra = nr_cot_compra_orig_p
						and	nr_item_cot_compra = nr_item_cot_compra_w;

						insert into cot_compra_item_entrega(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_cot_compra,
							nr_item_cot_compra,
							dt_entrega,
							qt_entrega)
						values (	nextval('cot_compra_item_entrega_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_cot_compra_w,
							nr_item_cot_compra_ww,
							trunc(dt_retorno_w,'dd'),
							qt_diferenca_w);
						end;
					end loop;
					close C02;

				end if;
			else
				select	coalesce(max(nr_item_cot_compra),0) +1
				into STRICT	nr_item_cot_compra_ww
				from	cot_compra_item
				where	nr_cot_compra = nr_cot_compra_w;

				insert into cot_compra_item(
					nr_cot_compra,
					nr_item_cot_compra,
					cd_material,
					qt_material,
					cd_unidade_medida_compra,
					dt_atualizacao,
					dt_limite_entrega,
					nm_usuario,
					ie_situacao,
					ds_material_direto_w,
					ie_regra_preco,
					nr_solic_compra,
					nr_item_solic_compra,
					cd_estab_item,
					vl_unit_previsto)
				SELECT	nr_cot_compra_w,
					nr_item_cot_compra_ww,
					cd_material,
					qt_material_w,
					cd_unidade_medida_compra,
					clock_timestamp(),
					trunc(dt_retorno_w,'dd'),
					nm_usuario_p,
					ie_situacao,
					ds_material_direto_w,
					ie_regra_preco,
					nr_solic_compra,
					nr_item_solic_compra,
					cd_estab_item,
					vl_unit_previsto
				from	cot_compra_item
				where	nr_cot_compra = nr_cot_compra_orig_p
				and	nr_item_cot_compra = nr_item_cot_compra_w;

				insert into cot_compra_item_entrega(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_cot_compra,
					nr_item_cot_compra,
					dt_entrega,
					qt_entrega)
				values (	nextval('cot_compra_item_entrega_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_cot_compra_w,
					nr_item_cot_compra_ww,
					trunc(dt_retorno_w,'dd'),
					qt_material_w);

				delete from cot_compra_item
				where	nr_cot_compra = nr_cot_compra_orig_p
				and	nr_item_cot_compra = nr_item_cot_compra_w;

			end if;
			end;
		end loop;
		close C01;
	end if;
end if;

if (nr_cot_compra_w > 0) then
	select	count(*)
	into STRICT	qt_registros_w
	from	cot_compra_item
	where	nr_cot_compra = nr_cot_compra_w;

	if (qt_registros_w = 0) then

		delete from cot_compra
		where nr_cot_compra = nr_cot_compra_w;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cotacao_itens_restantes ( nr_cot_compra_orig_p bigint, nm_usuario_p text) FROM PUBLIC;

