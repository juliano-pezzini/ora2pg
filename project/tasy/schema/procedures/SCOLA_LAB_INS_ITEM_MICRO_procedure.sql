-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE scola_lab_ins_item_micro ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_analito_p text, cd_microorganismo_p text, cd_medicamento_p text, qt_microorganismo_p text, qt_mic_p text, ie_result_p text, nm_usuario_p text, ds_obs_antibiotico_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_prescricao_w prescr_procedimento.nr_prescricao%type;
nr_seq_prescr_w prescr_procedimento.nr_sequencia%type;
nr_seq_exame_w  prescr_procedimento.nr_seq_exame%type;
nr_seq_analit_w prescr_procedimento.nr_seq_exame%type;
cd_exame_w      exame_laboratorio.cd_exame%type;

ie_result_w             exame_lab_result_antib.ie_resultado%type;
qt_mic_w                exame_lab_result_antib.ds_resultado_antib%type;
qt_microorganismo_w     exame_lab_result_antib.qt_microorganismo%type;
ds_obs_antibiotico_w    exame_lab_result_antib.ds_obs_antibiotico%type;


BEGIN
    begin
        --verifica se a prescrição é válida e o item é um exame laboratorial
        select  pp.nr_prescricao,
                pp.nr_sequencia,
                pp.nr_seq_exame
        into STRICT    nr_prescricao_w,
                nr_seq_prescr_w,
                nr_seq_exame_w
        from    prescr_procedimento pp
        where   pp.nr_prescricao = nr_prescricao_p
            and pp.nr_sequencia = nr_seq_prescr_p
            and (pp.nr_seq_exame IS NOT NULL AND pp.nr_seq_exame::text <> '');

    exception when others then
        ds_erro_p := 'Numero da prescrição ou item inválidos.';
        return;
    end;WITH RECURSIVE cte AS (


    begin
        --Valida se o código recebido é de um exame filho do exame prescrito e se ele está na exame_lab_result_item
        select  e.nr_seq_exame
        into STRICT    nr_seq_analit_w
        from    exame_laboratorio e WHERE nr_seq_superior = nr_seq_exame_w
  UNION ALL


    begin
        
        select  e.nr_seq_exame
        into STRICT    nr_seq_analit_w
        from    exame_laboratorio e JOIN cte c ON (c.prior nr_seq_exame = e.nr_seq_superior)

) SELECT * FROM cte WHERE coalesce(e.cd_exame_integracao, e.cd_exame) = cd_analito_p
            and exists (
                SELECT  1
                from    exame_lab_resultado elr
                        inner join exame_lab_result_item elri ON (elr.nr_seq_resultado = elri.nr_seq_resultado)
                where   elri.nr_seq_exame = e.nr_seq_exame
                    and elri.nr_seq_prescr = nr_seq_prescr_w);
;
    exception when others then
        ds_erro_p := 'Exame inválido. Exame não encontrado nos resultados para a prescrição recebida.';
        return;
    end;

    begin
        --verifica se o analito está ativo e é de microbiologia
        select  el.cd_exame
        into STRICT    cd_exame_w
        from    exame_laboratorio el
        where   nr_seq_exame = nr_seq_analit_w
            and coalesce(el.ie_situacao, 'A') = 'A'
            and el.ie_formato_resultado in ('SM', 'SDM');
    exception when others then
        ds_erro_p := 'Exame inválido. Exame de tipo incompatível com a importação de microbiologia.';
        return;
    end;

    begin
        --verifica se todos os campos tem tamanho compatível
        select  ie_result_p,
                qt_mic_p,
                qt_microorganismo_p,
                ds_obs_antibiotico_p
        into STRICT    ie_result_w,
                qt_mic_w,
                qt_microorganismo_w,
                ds_obs_antibiotico_w
;
    exception when others then
        ds_erro_p := 'Resultados inválidos.';
        return;
    end;

    if ie_result_p not in ('S', 'R', 'I') then
        --verifica se o resultado é valido
        ds_erro_p := 'Resultados inválidos. O resultado deve ser "S", "R", ou "I" (Sensível, Resistente ou Intermediário).';
        return;
    end if;


    ds_erro_p := Lab_inserir_item_micro_result(
        nr_prescricao_w,         --validado localmente
        nr_seq_prescr_w,         --validado localmente
        cd_exame_w,              --validado localmente
        cd_microorganismo_p,     --validado em Lab_inserir_item_micro_result
        cd_medicamento_p,        --validado em Lab_inserir_item_micro_result
        qt_microorganismo_w,     --validado localmente
        qt_mic_w,                --validado localmente
        ie_result_w,             --validado localmente
        nm_usuario_p, ds_erro_p, ds_obs_antibiotico_w);  --validado localmente
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE scola_lab_ins_item_micro ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_analito_p text, cd_microorganismo_p text, cd_medicamento_p text, qt_microorganismo_p text, qt_mic_p text, ie_result_p text, nm_usuario_p text, ds_obs_antibiotico_p text, ds_erro_p INOUT text) FROM PUBLIC;

