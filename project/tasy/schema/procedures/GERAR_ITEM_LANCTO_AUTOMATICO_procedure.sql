-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_item_lancto_automatico (nr_seq_proced_princ_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_p bigint, cd_unid_medida_p text, qt_lancamento_p bigint, cd_local_estoque_p bigint, ie_medico_atendimento_p text, ie_local_estoque_p text, nr_seq_regra_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_medico_executor_w		varchar(10);
cd_medico_propaci_w		varchar(10);
cd_medico_resp_w		varchar(10);
nr_atendimento_w		bigint;
nr_sequencia_w		bigint;
cd_convenio_w			integer;
cd_proc_propaci_w		bigint;
cd_categoria_w		varchar(10);
cd_cgc_w			varchar(14);
nr_doc_convenio_w		varchar(20);
qt_porte_anestesico_w	smallint;
cd_setor_atendimento_w	integer;
cd_Local_Estoque_w		smallint;
nr_seq_atepacu_w		bigint;
dt_alta_w			timestamp;
dt_proc_propaci_w		timestamp;
dt_entrada_unidade_w		timestamp;
dt_execucao_w			timestamp;
tx_proc_propaci_w		double precision	:= 100;
cd_senha_w			varchar(20);
nr_cirurgia_w			bigint;
nr_seq_atepacu_proc_w		bigint;
ds_observacao_w			varchar(50);
nr_seq_evento_w			bigint;


BEGIN 
 
select	max(nr_seq_evento) 
into STRICT	nr_seq_evento_w 
from	regra_lanc_automatico 
where	nr_sequencia = nr_seq_regra_p;
 
if (nr_seq_evento_w = 132) then 
	select	nr_atendimento, 
		dt_atendimento, 
		cd_convenio, 
		cd_categoria, 
		tx_material, 
		cd_setor_atendimento, 
		cd_senha, 
		nr_cirurgia, 
		nr_seq_atepacu, 
		dt_entrada_unidade 
	into STRICT	nr_atendimento_w, 
		dt_execucao_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		tx_proc_propaci_w, 
		cd_setor_atendimento_w, 
		cd_senha_w, 
		nr_cirurgia_w, 
		nr_seq_atepacu_proc_w, 
		dt_entrada_unidade_w 
	from	material_atend_paciente 
	where	nr_sequencia		= nr_seq_proced_princ_p;
else 
	select	cd_procedimento, 
		dt_procedimento, 
		cd_medico_executor, 
		nr_atendimento, 
		dt_procedimento, 
		cd_convenio, 
		cd_categoria, 
		tx_procedimento, 
		cd_setor_atendimento, 
		qt_porte_anestesico, 
		cd_senha, 
		nr_cirurgia, 
		nr_seq_atepacu, 
		dt_entrada_unidade 
	into STRICT	cd_proc_propaci_w, 
		dt_proc_propaci_w, 
		cd_medico_propaci_w, 
		nr_atendimento_w, 
		dt_execucao_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		tx_proc_propaci_w, 
		cd_setor_atendimento_w, 
		qt_porte_anestesico_w, 
		cd_senha_w, 
		nr_cirurgia_w, 
		nr_seq_atepacu_proc_w, 
		dt_entrada_unidade_w 
	from	procedimento_paciente 
	where	nr_sequencia		= nr_seq_proced_princ_p;
end if;
 
select	a.cd_medico_resp, 
	a.dt_alta, 
	CASE WHEN Obter_Valor_Conv_Estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='N' THEN  null WHEN Obter_Valor_Conv_Estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='S' THEN  coalesce(a.cd_senha, a.nr_doc_convenio)  ELSE a.nr_doc_convenio END ,	/* Edgar 
 
06/10/2004 - OS 11672 */
 
	a.nr_seq_atepacu, 
	b.cd_cgc 
into STRICT	cd_medico_resp_w, 
	dt_alta_w, 
	nr_doc_convenio_w, 
	nr_seq_atepacu_w, 
	cd_cgc_w 
from	convenio c, 
	estabelecimento b, 
	atendimento_paciente_v a 
where	a.cd_estabelecimento	= b.cd_estabelecimento 
and	c.cd_convenio		= a.cd_convenio 
and	a.nr_atendimento	= nr_atendimento_w;
 
cd_medico_executor_w		:= null;
ds_observacao_w			:= wheb_mensagem_pck.get_texto(306715,'NR_SEQ_REGRA_P=' || nr_seq_regra_p || ';' || 'NR_SEQ_EVENTO_P=' || nr_seq_evento_w);
				 
 
if (ie_medico_atendimento_p = 'S') then 
	begin 
	if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then 
		cd_medico_executor_w  := cd_medico_propaci_w;
	else	 
		cd_medico_executor_w  := cd_medico_resp_w;
	end if;
	end;
end if;
 
if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (length(cd_procedimento_p) > 0) then 
	begin 
 
	select nextval('procedimento_paciente_seq') 
	into STRICT nr_sequencia_w;
 
	insert into procedimento_paciente( 
		NR_SEQUENCIA   	,        
		NR_ATENDIMENTO     ,    
		DT_ENTRADA_UNIDADE   ,    
		CD_PROCEDIMENTO     ,    
		DT_CONTA        ,    
		DT_PROCEDIMENTO     ,    
		QT_PROCEDIMENTO     ,    
		DT_ATUALIZACAO     ,    
		NM_USUARIO       ,    
		CD_MEDICO        ,    
		CD_CONVENIO       ,    
		CD_CATEGORIA      ,    
		TX_MEDICO        ,    
		TX_ANESTESIA      ,    
		TX_PROCEDIMENTO     ,    
		CD_ACAO         ,    
		CD_MEDICO_EXECUTOR   ,    
		CD_SETOR_ATENDIMENTO  ,    
		IE_ORIGEM_PROCED    ,    
		IE_VALOR_INFORMADO   ,    
		NM_USUARIO_ORIGINAL   ,    
		CD_SETOR_RECEITA	, 
		CD_SITUACAO_GLOSA	, 
		IE_FUNCAO_MEDICO	, 
		CD_CGC_PRESTADOR	, 
		NR_DOC_CONVENIO		, 
		NR_SEQ_PROC_PRINC	, 
		QT_PORTE_ANESTESICO	, 
		CD_PROCEDIMENTO_PRINC	, 
		DT_PROCEDIMENTO_PRINC, 
		nr_seq_atepacu, 
		ie_auditoria, 
		cd_senha, 
		ds_observacao) 
	values ( 
		nr_sequencia_w 	,        
		nr_atendimento_w    ,    
		dt_entrada_unidade_w  ,    
		cd_procedimento_p    ,    
		coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),    
		coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),    
		qt_lancamento_p		,    
		clock_timestamp()         ,    
		nm_usuario_p      ,    
		cd_medico_executor_w  ,    
		cd_convenio_w      ,    
		cd_categoria_w     ,    
		100			, 
		100			, 
		tx_proc_propaci_w	, 
		'1'			,    
		cd_medico_executor_w  ,    
		cd_setor_atendimento_w ,    
		ie_origem_proced_p   ,    
		'N'			,    
		nm_usuario_p      ,    
		cd_setor_atendimento_w , 
		0 			, 
		0			, 
		cd_cgc_w		, 
		nr_doc_convenio_w	, 
		CASE WHEN nr_seq_evento_w=132 THEN  null  ELSE nr_seq_proced_princ_p END , 
		qt_porte_anestesico_w	, 
		cd_proc_propaci_w	, 
		dt_proc_propaci_w	, 
		nr_seq_atepacu_proc_w	, 
		'N', 
		cd_senha_w, 
		ds_observacao_w);
 
	if (nr_sequencia_w > 0) then 
		CALL Atualiza_preco_procedimento( 
			nr_sequencia_w, cd_convenio_w, nm_usuario_p);
	end if;
	end;
else 
	begin 
	if (ie_local_estoque_p = 'N') then 
		cd_Local_Estoque_w	:= null;
	elsif (ie_local_estoque_p = 'S') then 
		cd_Local_Estoque_w	:= cd_local_estoque_p;
	elsif (ie_local_estoque_p = 'U') then 
		begin 
		select	b.cd_local_estoque 
		into STRICT	cd_Local_Estoque_w	 
		from	setor_atendimento b, 
			usuario a 
		where	b.cd_setor_atendimento 	= a.cd_setor_atendimento 
		and	a.nm_usuario		= nm_usuario_p;
		exception 
			when others then 
			cd_local_estoque_w	:= null;
		end;
	elsif (ie_local_estoque_p = 'P') then 
		begin 
		select	cd_local_estoque 
		into STRICT	cd_Local_Estoque_w	 
		from	setor_atendimento 
		where	cd_setor_atendimento = cd_setor_atendimento_w;
		exception 
			when others then 
			cd_local_estoque_w	:= null;
		end;
	end if;
 
	select nextval('material_atend_paciente_seq') 
	into STRICT nr_sequencia_w;
 
	begin 
		insert into Material_atend_paciente( 
			NR_SEQUENCIA   	,        
			NR_ATENDIMENTO     ,    
			DT_ENTRADA_UNIDADE   ,    
			CD_MATERIAL       ,    
			DT_CONTA        ,    
			DT_ATENDIMENTO     ,    
			QT_MATERIAL       ,    
			QT_EXECUTADA      ,    
			DT_ATUALIZACAO     ,    
			NM_USUARIO       ,    
			CD_UNIDADE_MEDIDA  	,      
			CD_CONVENIO       ,    
			CD_CATEGORIA      ,    
			CD_ACAO         ,    
			CD_LOCAL_ESTOQUE	,        
			CD_SETOR_ATENDIMENTO  ,    
			IE_VALOR_INFORMADO   ,    
			NM_USUARIO_ORIGINAL   ,    
			CD_SETOR_RECEITA	, 
			CD_SITUACAO_GLOSA	, 
			NR_DOC_CONVENIO		, 
			NR_SEQ_PROC_PRINC	, 
			CD_PROCED_REFERENCIA	, 
			nr_seq_atepacu		, 
			ie_auditoria, 
			nr_cirurgia, 
			ds_observacao) 
		values ( 
			nr_sequencia_w 	,        
			nr_atendimento_w    ,    
			dt_entrada_unidade_w  ,    
			cd_material_p      ,    
			coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),    
			coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),    
 			qt_lancamento_p		,    
			qt_lancamento_p	   	,    
			clock_timestamp()         ,    
			nm_usuario_p      ,    
			cd_unid_medida_p	, 
			cd_convenio_w      ,    
			cd_categoria_w     ,    
			'1'			,    
			cd_local_estoque_w   ,    
			cd_setor_atendimento_w ,    
			'N'			,    
			nm_usuario_p      ,    
			cd_setor_atendimento_w , 
			0			, 
			nr_doc_convenio_w	, 
			CASE WHEN nr_seq_evento_w=132 THEN  null  ELSE nr_seq_proced_princ_p END , 
			cd_proc_propaci_w	, 
			nr_seq_atepacu_proc_w	, 
			'N', 
			nr_cirurgia_w, 
			ds_observacao_w);
		exception 
			when 	others then 
				nr_sequencia_w := 0;
		end;
 
		if (nr_sequencia_w > 0) then 
			CALL Atualiza_preco_material(nr_sequencia_w, nm_usuario_p);
		end if;
		end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_item_lancto_automatico (nr_seq_proced_princ_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_material_p bigint, cd_unid_medida_p text, qt_lancamento_p bigint, cd_local_estoque_p bigint, ie_medico_atendimento_p text, ie_local_estoque_p text, nr_seq_regra_p bigint, nm_usuario_p text) FROM PUBLIC;

