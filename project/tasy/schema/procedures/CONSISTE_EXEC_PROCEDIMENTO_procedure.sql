-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_exec_procedimento (NR_SEQUENCIA_P bigint, DS_ERRO_P INOUT text) AS $body$
DECLARE


cd_procedimento_w		bigint		:= 0;
cd_estabelecimento_w		integer;
ie_origem_proced_w		bigint		:= 0;
ie_tipo_serv_w			smallint		:= NULL;
ie_tipo_ato_w			smallint		:= NULL;
cd_convenio_w			integer		:= 0;
nr_atendimento_w		bigint		:= 0;
qt_procedimento_w		double precision	:= 0;
dt_procedimento_w		timestamp;
ds_proc_requerido_w		varchar(255)	:= '';
ie_obrigatorio_w		varchar(1);
cd_pessoa_fisica_w		varchar(10);
cd_plano_w			varchar(10)	:= '';
ds_erro_w			varchar(255);
ds_erro_pac_w			varchar(255);
ds_erro_Plano_w			varchar(255);
qt_proced_com_preco_w		integer;
ie_tipo_atendimento_w		smallint;
cd_autorizacao_w		varchar(20);
cd_categoria_w			varchar(10);
nr_seq_proc_w			bigint;
nr_seq_exame_w			bigint;
cd_setor_atendimento_w		bigint;
ds_proc_com_erro_w		varchar(255);
dt_conta_w			timestamp;
dt_alta_w			timestamp;
dt_entrada_w			timestamp;
nr_interno_conta_w		bigint;
ie_separa_conta_w		varchar(10);
ie_regra_w			varchar(10);
nr_seq_regra_retorno_w		bigint;
nr_seq_proc_interno_w		bigint;
nm_usuario_w			varchar(15);
nr_prescricao_w			bigint;
cd_setor_entrega_w		integer;
cd_medico_exec_w		varchar(10);
ie_glosa_w		regra_ajuste_proc.ie_glosa%type;
nr_seq_regra_preco_w	regra_ajuste_proc.nr_sequencia%type;
nr_sequencia_prescricao_w	procedimento_paciente.nr_sequencia_prescricao%type;


BEGIN
ds_erro_w			:= '';


SELECT	coalesce(MAX(nr_sequencia),0)
INTO STRICT	nr_seq_proc_w
FROM	procedimento_paciente
WHERE	nr_sequencia	= nr_sequencia_p;


/* Ricardo 18/05/2004 - Incluí o teste abaixo, caso não existir o procedimento paciente, não continua a procedure */

IF (nr_seq_proc_w	<> 0) THEN
	BEGIN

	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.ie_tipo_servico_sus,
		a.ie_tipo_ato_sus,
		a.cd_convenio,
		b.cd_pessoa_fisica,
		b.nr_atendimento,
		a.qt_procedimento,
		a.dt_procedimento,
		a.nr_doc_convenio,
		b.ie_tipo_atendimento,
		b.cd_estabelecimento,
		a.cd_setor_atendimento,
		a.nr_seq_exame,
		a.dt_conta,
		coalesce(b.dt_alta, clock_timestamp()),
		b.dt_entrada,
		a.nr_interno_conta,
		a.nr_seq_proc_interno,
		a.nm_usuario,
		substr(obter_categoria_atendimento(b.nr_atendimento),1,10),
		a.nr_prescricao,
		a.cd_medico_executor,
		a.nr_sequencia_prescricao
	INTO STRICT 	cd_procedimento_w,
		ie_origem_proced_w,
		ie_tipo_serv_w,
		ie_tipo_ato_w,
		cd_convenio_w,
		cd_pessoa_fisica_w,
		nr_atendimento_w,
		qt_procedimento_w,
		dt_procedimento_w,
		cd_autorizacao_w,
		ie_tipo_atendimento_w,
		cd_estabelecimento_w,
		cd_setor_atendimento_w,
		nr_seq_exame_w,
		dt_conta_w,
		dt_alta_w,
		dt_entrada_w,
		nr_interno_conta_w,
		nr_seq_proc_interno_w,
		nm_usuario_w,
		cd_categoria_w,
		nr_prescricao_w,
		cd_medico_exec_w,
		nr_sequencia_prescricao_w
	FROM 	Atendimento_Paciente b,
		procedimento_paciente a
	WHERE 	a.nr_sequencia 	= nr_sequencia_p
	AND 	a.nr_atendimento	= b.nr_atendimento;

	select	coalesce(max(Obter_Valor_Conv_Estab(cd_convenio, cd_estabelecimento_w, 'IE_SEPARA_CONTA')), 'S')
	into STRICT	ie_separa_conta_w
	from	convenio
	where	cd_convenio		= cd_convenio_w;

	/*    Consistencia Sexo, Idade */

	ds_erro_pac_w := Consiste_Paciente_Proc(
			nr_seq_proc_interno_w, nr_atendimento_w, cd_pessoa_fisica_w, cd_procedimento_w, ie_origem_Proced_w, ds_erro_pac_w);

	ds_erro_w			:= ds_erro_w || ds_erro_pac_w;

	/*    Consistencias AIH */

	IF (ie_origem_proced_w = 2) THEN
		BEGIN

		/* Consistencia para ver se a ultima vigencia tem preço  Marcus 27/07/00 */

		SELECT COUNT(*)
		INTO STRICT qt_proced_com_preco_w
		FROM sus_preco_procaih a
		WHERE a.dt_competencia =
			(SELECT MAX(b.dt_competencia)
	            	FROM sus_preco_procaih b)
			AND a.cd_procedimento = cd_procedimento_w
	  		AND a.ie_origem_proced = ie_origem_proced_w;
		IF (qt_proced_com_preco_w = 0) THEN
			ds_erro_w	:= ds_erro_w ||'767'||'('||TO_CHAR(cd_procedimento_w)||') ';
		END IF;

	/* CONSISTENCIA DO PROCEDIMENTO REQUERIDO */

		ie_obrigatorio_w 			:= 'N';
		SELECT * FROM Define_Proc_Requerido(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, ds_proc_requerido_w, ie_obrigatorio_w) INTO STRICT ds_proc_requerido_w, ie_obrigatorio_w;
		IF (ds_proc_requerido_w = WHEB_MENSAGEM_PCK.get_texto(280163)) THEN
			ds_erro_w	:= ds_erro_w ||'734'||'('||TO_CHAR(cd_procedimento_w)||') ';
		END IF;
		END;

	/*    Consistencias BPA */

	ELSIF (ie_origem_proced_w = 3) THEN
		BEGIN
		SELECT coalesce(COUNT(*),0)
		INTO STRICT qt_proced_com_preco_w
		FROM sus_preco_procbpa a
		WHERE a.dt_competencia =
			(SELECT MAX(b.dt_competencia)
			FROM sus_preco_procbpa b)
		        AND a.cd_procedimento 	= cd_procedimento_w
		        AND a.ie_origem_proced 	= ie_origem_proced_w;
		IF (qt_proced_com_preco_w = 0) THEN
			ds_erro_w	:= ds_erro_w ||'508'||'('||TO_CHAR(cd_procedimento_w)||') ';
		END IF;
		END;
	END IF;

	/* Ricardo 25/01/2006 - Inserido o campo NR_SEQ_EXAME para a CONSISTE_PLANO_CONVENIO OS 28644 */

	/* Francisco - OS 124433 - 22/04/2009 - Tratar setor de entrega */

	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
		select	max(cd_setor_entrega)
		into STRICT	cd_setor_entrega_w
		from	prescr_medica
		where	nr_prescricao	= nr_prescricao_w;
	end if;

	SELECT * FROM consiste_plano_convenio(
	       	nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, 0, /* lhalves OS251935 em 24/09/2010 - troquei por 0 por causa da consiste_autorizacao_proc*/
		ie_tipo_atendimento_w, cd_plano_w, cd_autorizacao_w, ds_erro_Plano_w, cd_setor_atendimento_w, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_retorno_w, nr_seq_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, cd_setor_entrega_w, cd_medico_exec_w, cd_pessoa_fisica_w, ie_glosa_w, nr_seq_regra_preco_w, nr_prescricao_w, nr_sequencia_prescricao_w) INTO STRICT ds_erro_Plano_w, ie_regra_w, nr_seq_regra_retorno_w, ie_glosa_w, nr_seq_regra_preco_w;

	IF (ds_erro_plano_w IS NOT NULL AND ds_erro_plano_w::text <> '') AND (SUBSTR(ds_erro_plano_w,1,3) in ('406','407','408')) AND (ie_regra_w in ('3','7','8')) THEN
		BEGIN
		/*Substituido os comandos abaixo pela procedure trocar_convenio_particular
		OS 88904, Fabricio e Francisco, alterava o convênio do item para particular porém o convenio da conta não*/
		/*obter_convenio_particular(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w);
		UPDATE procedimento_paciente
		SET 	cd_convenio	= cd_convenio_w,
			cd_categoria	= cd_categoria_w
		WHERE 	nr_sequencia	= nr_sequencia_p
		and	ie_separa_conta_w = 'S';*/
		CALL Trocar_convenio_particular(nr_sequencia_p,nm_usuario_w, 'P');
		END;
	END IF;


	/* Identificar as Contas com data de proc/mat fora do periodo de atendimento */

	ds_proc_com_erro_w	:= '';
/*	select	'('||to_char(max(cd_procedimento_w))||') '
	into	ds_proc_com_erro_w
	from	dual
	where	dt_conta_w not between dt_entrada_w and dt_alta_w;
	if	(ds_proc_com_erro_w <> '() ') then
		ds_erro_w	:= ds_erro_w || '20'||ds_proc_com_erro_w;
	end if;*/
	ds_proc_com_erro_w	:= '';
	SELECT	'('||TO_CHAR(MAX(cd_procedimento_w))||') '
	INTO STRICT	ds_proc_com_erro_w
	FROM	conta_paciente a
	WHERE	dt_conta_w NOT BETWEEN a.dt_periodo_inicial AND dt_periodo_final
	AND	a.nr_interno_conta = nr_interno_conta_w;

	IF (ds_proc_com_erro_w <> '() ') THEN
		ds_erro_w	:= ds_erro_w || '21'||ds_proc_com_erro_w;
	END IF;


	ds_erro_w		:= ds_erro_w || ds_erro_plano_w;

	END;
END IF;

ds_erro_p		:= ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_exec_procedimento (NR_SEQUENCIA_P bigint, DS_ERRO_P INOUT text) FROM PUBLIC;

