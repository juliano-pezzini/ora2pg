-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_c100_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
cd_modelo_w			varchar(2);
nr_seq_regra_efd_w		fis_efd_controle.nr_seq_regra_efd%type;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
nr_sequencia_w			bigint;
dt_fim_w			timestamp;
ie_tipo_titulo_w		varchar(2);
qt_registros_w			bigint;

c_nota CURSOR FOR 
	SELECT	'C100' tp_registro, 
		substr(CASE WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='E' THEN 0 WHEN Obter_se_nota_entrada_saida(a.nr_sequencia)='S' THEN 1 END ,1,1) ie_operacao, 
		/*quando o tipo da nota é "Entrada(Emissão própria)" o ie_emissao_nf deve ser 0*/
 
		CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='S' THEN  0 WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  CASE WHEN ie_tipo_nota='EP' THEN  0  ELSE 1 END  END  ie_emissao_nf, 
		/*se for nota de entrada pega o emitente (pessoa física ou jurídica), se for de saída pega o cd_cgc */
 
		CASE WHEN Obter_Se_Nota_Entrada_Saida(a.nr_sequencia)='E' THEN  coalesce(a.cd_cgc_emitente, a.cd_pessoa_fisica)  ELSE coalesce(cd_cgc,a.cd_pessoa_fisica) END  cd_participante, 
		 lpad(m.cd_modelo_nf, 2, 0) cd_modelo, 
		/* situação: 01 Documento regular extemporâneo , 03 Documento cancelado extemporâneo, 07 Documento Fiscal Complementar extemporâneo. */
 
		substr(CASE WHEN a.ie_situacao=1 THEN  '00' WHEN a.ie_situacao=2 THEN  '02' WHEN a.ie_situacao=3 THEN  '02' WHEN a.ie_situacao=9 THEN  '02'  ELSE '07' END , 1, 2) cd_situacao, 
		substr(trim(both a.cd_serie_nf), 1, 3) cd_serie_nf, 
		substr(coalesce(a.nr_nfe_imp, a.nr_nota_fiscal), 1, 9) nr_nota_fiscal, 
		a.nr_danfe nr_danfe, 
		substr(to_char(a.dt_emissao, 'ddmmyyyy'),1,8) dt_emissao, 
		substr(to_char(a.dt_entrada_saida, 'ddmmyyyy'),1,8) dt_entrada_saida, 
		a.vl_total_nota vl_total_nota, 
		substr(CASE WHEN coalesce(a.cd_condicao_pagamento,0)=0 THEN  9  ELSE CASE WHEN obter_dados_nota_fiscal(a.nr_sequencia, '28')=1 THEN  0  ELSE 1 END  END , 1, 1) ie_pagto, 
		--soma dos descontos dos itens + o descnto na nota, caso tenha 
		(obter_dados_nota_fiscal(a.nr_sequencia, '37') + a.vl_descontos) vl_descontos, 
		0 vl_abatimento, 
		obter_dados_nota_fiscal(a.nr_sequencia, '36') vl_mercadorias, 
		CASE WHEN a.ie_tipo_frete='C' THEN  1 WHEN a.ie_tipo_frete='F' THEN  2  ELSE 9 END  ie_tipo_frete, 
		a.vl_frete vl_frete, 
		a.vl_seguro vl_seguro, 
		a.vl_despesa_acessoria vl_despesa_acessoria, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'ICMS', 'BC') vl_base_calc_icms, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'ICMS', 'VL') vl_icms, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'ICMSST', 'BC') vl_base_calc_icms_st, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'ICMSST', 'VL') vl_icms_retido_st, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'IPI', 'VL') vl_ipi, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'PIS', 'VL') vl_pis, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'COFINS', 'VL') vl_cofins, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'PISST', 'VL') vl_pis_retido_st, 
		nfe_obter_valores_totais_num(a.nr_sequencia, 'COFINSST', 'VL') vl_cofins_retido_st, 
		a.nr_sequencia, 
		a.ie_tipo_nota 
	FROM operacao_nota b, nota_fiscal a
LEFT OUTER JOIN modelo_nota_fiscal m ON (a.nr_seq_modelo = m.nr_sequencia)
WHERE a.cd_estabelecimento	= cd_estabelecimento_p  and a.cd_operacao_nf	= b.cd_operacao_nf and m.nr_sequencia in (SELECT nr_seq_modelo_nf 
					from	fis_regra_efd_c100 
					where 	nr_seq_regra_efd	= nr_seq_regra_efd_w)  -- REGISTRO C100: NOTA FISCAL (CÓDIGO 01), NOTA FISCAL AVULSA (CÓDIGO 1B), NOTA FISCAL DE PRODUTOR (CÓDIGO 04) E NF-e (CÓDIGO 55). 
  and a.dt_entrada_saida between dt_inicio_p and dt_fim_w and b.ie_servico		= 'N' and (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') --and	(((Obter_Se_Nota_Entrada_Saida(a.nr_sequencia) = 'S') and (a.dt_emissao between dt_inicio_p and dt_fim_w)) or 
	--	 ((Obter_Se_Nota_Entrada_Saida(a.nr_sequencia) = 'E') and (ie_tipo_nota <> 'EP') and (a.dt_entrada_saida between dt_inicio_p and dt_fim_w)) or 
	--	 ((ie_tipo_nota = 'EP') and (a.dt_emissao between dt_inicio_p and dt_fim_w))) --tipo de nota = 'emissão própria' deve ser pela data de emissão 
  and a.ie_situacao = 1 order by 
		2;
vet01	c_nota%RowType;

c_fatura CURSOR FOR 
	SELECT	'C140' tp_registro, 
		'TP' ie_tipo, 
		0 ie_emitente, 
		substr(CASE WHEN max(a.ie_tipo_titulo)=0 THEN '00' WHEN max(a.ie_tipo_titulo)=1 THEN '00' WHEN max(a.ie_tipo_titulo)=2 THEN '00' WHEN max(a.ie_tipo_titulo)=3 THEN '02' WHEN max(a.ie_tipo_titulo)=13 THEN '03' END ,1,2) ie_tipo_titulo, 
		'' ds_compl_titulo, 
		max(a.nr_titulo) nr_titulo, 
		coalesce(max(a.nr_total_parcelas),1) nr_total_parcelas, 
		sum(a.vl_titulo) vl_titulo 
	from	titulo_pagar a 
	where	a.nr_seq_nota_fiscal	= nr_sequencia_w 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	having	count(*) > 0 
	
union
 
	SELECT	'C140' tp_registro, 
		'TR' ie_tipo, 
		0 ie_emitente, 
		substr(CASE WHEN max(a.ie_tipo_titulo)=1 THEN '00' WHEN max(a.ie_tipo_titulo)=2 THEN '00' WHEN max(a.ie_tipo_titulo)=3 THEN '02' WHEN max(a.ie_tipo_titulo)=4 THEN '01' END ,1,2) ie_tipo_titulo, 
		'' ds_compl_titulo, 
		max(a.nr_titulo) nr_titulo, 
		1 nr_total_parcelas, 
		sum(a.vl_titulo) vl_titulo 
	from	titulo_receber a 
	where	a.nr_seq_nf_saida	= nr_sequencia_w 
	and	a.cd_estabelecimento	= cd_estabelecimento_p 
	having	count(*) > 0;

vet02	c_fatura%RowType;

c_venc_fatura CURSOR FOR 
	SELECT	'C141' tp_registro, 
		coalesce(nr_parcelas, 1) nr_parcela, 
		substr(to_char(a.dt_vencimento_atual,'ddmmyyyy'),1,8) dt_vencimento, 
		a.vl_titulo vl_titulo 
	from	titulo_pagar a 
	
	where	a.nr_seq_nota_fiscal	= nr_sequencia_w 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	vet02.ie_tipo		= 'TP' 
	
union all
 
	SELECT	'C141' tp_registro, 
		1 nr_parcela, 
		substr(to_char(a.dt_vencimento,'ddmmyyyy'),1,8) dt_vencimento, 
		a.vl_titulo vl_titulo 
	from	titulo_receber a 
	
	where	a.nr_seq_nf_saida	= nr_sequencia_w 
	and	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	vet02.ie_tipo	= 'TR';

vet03	c_venc_fatura%RowType;


BEGIN 
select	nr_seq_regra_efd 
into STRICT 	nr_seq_regra_efd_w 
from	fis_efd_controle 
where	nr_sequencia	= nr_seq_controle_p;
 
dt_fim_w	:= fim_dia(dt_fim_p); --coloca a hora junto ex: 01/01/2013 23:59:59 
open c_nota;
loop 
fetch c_nota into	 
	vet01;
EXIT WHEN NOT FOUND; /* apply on c_nota */
	begin 
	nr_sequencia_w	:= vet01.nr_sequencia;
	cd_modelo_w	:= vet01.cd_modelo;
	 
	if (vet01.cd_situacao = '00') then 
		ds_linha_w	:= substr(	sep_w || vet01.tp_registro	 						|| 
						sep_w || vet01.ie_operacao							|| 
						sep_w || vet01.ie_emissao_nf							|| 
						sep_w || vet01.cd_participante	 						|| 
						sep_w || vet01.cd_modelo							|| 
						sep_w || vet01.cd_situacao							|| 
						sep_w || vet01.cd_serie_nf 							|| 
						sep_w || vet01.nr_nota_fiscal	 						|| 
						sep_w || substr(vet01.nr_danfe,1,44)						|| 
						sep_w || vet01.dt_emissao							|| 
						sep_w || vet01.dt_entrada_saida							|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_total_nota), 1, 30)		|| 
						sep_w || vet01.ie_pagto		 						|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_descontos), 1, 30) 		|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_abatimento), 1, 30)		|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_mercadorias), 1, 30)		|| 
						sep_w || vet01.ie_tipo_frete							|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_frete), 1, 30)	 		|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_seguro), 1, 30)			|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_despesa_acessoria), 1,30)	|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_base_calc_icms), 1, 30)		|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_icms), 1, 30)			|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_base_calc_icms_st), 1, 30)	|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_icms_retido_st), 1, 30)		|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_ipi), 1 ,30)			|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_pis), 1, 30)			|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_cofins), 1, 30)			|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_pis_retido_st), 1, 30)		|| 
						sep_w || substr(sped_obter_campo_valor(vet01.vl_cofins_retido_st), 1, 30)	|| 
						sep_w,1,8000);
	else 
		ds_linha_w	:= substr(	sep_w || vet01.tp_registro	|| 
						sep_w || vet01.ie_operacao		|| 
						sep_w || vet01.ie_emissao_nf		|| 
						sep_w || ''	 			|| 
						sep_w || vet01.cd_modelo		|| 
						sep_w || vet01.cd_situacao		|| 
						sep_w || vet01.cd_serie_nf 		|| 
						sep_w || vet01.nr_nota_fiscal	 	|| 
						sep_w || substr(vet01.nr_danfe,1,44)	|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''		 		|| 
						sep_w || '' 				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''	 			|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w || ''				|| 
						sep_w,1,8000);
	 
	end if;
	 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
 
	insert into fis_efd_arquivo(nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		nm_usuario_nrec, 
		dt_atualizacao_nrec, 
		nr_seq_controle_efd, 
		nr_linha, 
		cd_registro, 
		ds_arquivo, 
		ds_arquivo_compl) 
	values (nr_seq_registro_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nr_seq_controle_p, 
		nr_linha_w, 
		vet01.tp_registro, 
		ds_arquivo_w, 
		ds_arquivo_compl_w);
		 
	if	(cd_modelo_w = '01' AND vet01.cd_situacao = '00') then 
		begin 
		open c_fatura;
		loop 
		fetch c_fatura into	 
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c_fatura */
			begin 
			select	count(1) 
			into STRICT	qt_registros_w 
			from (SELECT	a.nr_titulo 
				from	titulo_pagar a 
				where	a.nr_seq_nota_fiscal	= nr_sequencia_w 
				and	a.cd_estabelecimento	= cd_estabelecimento_p 
				
union
 
				SELECT	a.nr_titulo 
				from	titulo_receber a 
				where	a.nr_seq_nf_saida	= nr_sequencia_w 
				and	a.cd_estabelecimento	= cd_estabelecimento_p) alias1;
			 
			ie_tipo_titulo_w	:= vet02.ie_tipo_titulo;
			ie_tipo_titulo_w	:= vet02.ie_tipo_titulo;
			 
			if (qt_registros_w > 1) then 
				ie_tipo_titulo_w	:= '99';
			end if;
			 
			ds_linha_w	:= substr(	sep_w || vet02.tp_registro						|| 
							sep_w || vet02.ie_emitente						|| 
							sep_w || ie_tipo_titulo_w						|| 
							sep_w || vet02.ds_compl_titulo						|| 
							sep_w || vet02.nr_titulo						|| 
							sep_w || vet02.nr_total_parcelas					|| 
							sep_w || substr(sped_obter_campo_valor(coalesce(vet02.vl_titulo,0)), 1, 30)	|| 
							sep_w,1,8000);
			 
			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;
			 
			insert into fis_efd_arquivo(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				nr_seq_controle_efd, 
				nr_linha, 
				cd_registro, 
				ds_arquivo, 
				ds_arquivo_compl) 
			values (nr_seq_registro_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_seq_controle_p, 
				nr_linha_w, 
				vet02.tp_registro, 
				ds_arquivo_w, 
				ds_arquivo_compl_w);
				 
			open c_venc_fatura;
			loop 
			fetch c_venc_fatura into	 
				vet03;
			EXIT WHEN NOT FOUND; /* apply on c_venc_fatura */
				begin 
				ds_linha_w	:= substr(	sep_w || vet03.tp_registro					|| 
								sep_w || vet03.nr_parcela					|| 
								sep_w || vet03.dt_vencimento					|| 
								sep_w || substr(sped_obter_campo_valor(vet03.vl_titulo), 1, 30)	|| 
								sep_w,1,8000);
			 
				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
				nr_seq_registro_w	:= nr_seq_registro_w + 1;
				nr_linha_w		:= nr_linha_w + 1;
				 
				insert into fis_efd_arquivo(nr_sequencia, 
					nm_usuario, 
					dt_atualizacao, 
					nm_usuario_nrec, 
					dt_atualizacao_nrec, 
					nr_seq_controle_efd, 
					nr_linha, 
					cd_registro, 
					ds_arquivo, 
					ds_arquivo_compl) 
				values (nr_seq_registro_w, 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nr_seq_controle_p, 
					nr_linha_w, 
					vet03.tp_registro, 
					ds_arquivo_w, 
					ds_arquivo_compl_w);
				end;
			end loop;
			close c_venc_fatura;
			end;
		end loop;
		close c_fatura;
		end;
	end if;
 
	if (vet01.cd_situacao = '00') then 
		if	((vet01.ie_operacao = 0 AND vet01.ie_tipo_nota = 'EN') or -- gera o C170 se for nota de entrada ou emissão própria 
			(vet01.ie_operacao = 1 AND vet01.cd_modelo = 1)) then --se for nota de saída e modelo de nota fiscal = 1 
			SELECT * FROM fis_gerar_reg_C170_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_sequencia_w, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
		end if;
		 
		SELECT * FROM fis_gerar_reg_C190_efd(	nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_sequencia_w, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
	end if;			
	end;
end loop;
close c_nota;
 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_c100_efd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

