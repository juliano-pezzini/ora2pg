-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_subst_item_conta ( nr_seq_analise_p bigint, cd_item_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, nr_seq_item_subs_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, nr_id_transacao_p bigint, nr_seq_item_criado_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_uni_apres_w			double precision;
vl_total_apres_w		double precision;
qt_item_w			double precision;
nr_seq_item_criado_w		bigint;
nr_seq_glosa_conta_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_item_w			bigint;
nr_seq_conta_w			bigint;
nr_seq_proc_novo_w		bigint	:= null;
nr_seq_mat_novo_w		bigint	:= null;
ie_consistir_analise_w		varchar(1);
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
/* Quando for o item agrupador da análise, subsituir também os filhos */

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_proc,
		null nr_seq_mat,
		a.nr_seq_conta
	from	pls_conta_proc a
	where	a.nr_sequencia	= nr_seq_item_subs_p
	and	ie_tipo_p	= 'P'
	and (a.ie_status <> 'D' or coalesce(a.ie_status::text, '') = '')
	and	((exists (	SELECT 	1
				from	pls_proc_participante x
				where	x.nr_seq_conta_proc 	= a.nr_sequencia
				and	((x.ie_status <> 'C') or (coalesce(x.ie_status::text, '') = ''))	)) or (not exists (	select 	1
				from	pls_proc_participante x
				where	x.nr_seq_conta_proc 	= a.nr_sequencia)	))
	
union all

	select	a.nr_sequencia nr_seq_proc,
		null nr_seq_mat,
		a.nr_seq_conta
	from	pls_conta_proc a
	where	a.nr_seq_agrup_analise	= nr_seq_item_subs_p
	and	a.nr_sequencia	<> a.nr_seq_agrup_analise
	and	ie_tipo_p	= 'P'
	and	((exists (	select 	1
				from	pls_proc_participante x
				where	x.nr_seq_conta_proc 	= a.nr_sequencia
				and	((x.ie_status <> 'C') or (coalesce(x.ie_status::text, '') = ''))	)) or (not exists (	select 	1
				from	pls_proc_participante x
				where	x.nr_seq_conta_proc 	= a.nr_sequencia)	))
	and (a.ie_status <> 'D' or coalesce(a.ie_status::text, '') = '')
	
union all

	select	null nr_seq_proc,
		a.nr_sequencia nr_seq_mat,
		a.nr_seq_conta
	from	pls_conta_mat a
	where	a.nr_sequencia	= nr_seq_item_subs_p
	and	ie_tipo_p	= 'M'
	and (a.ie_status <> 'D' or coalesce(a.ie_status::text, '') = '');


BEGIN
select	max(ie_origem_conta)
into STRICT	ie_origem_conta_w
from	pls_conta
where	nr_seq_analise = nr_seq_analise_p;

if (ie_origem_conta_w = 'A') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(786203);
end if;

ie_consistir_analise_w := Obter_Param_Usuario(1365, 16, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, cd_estabelecimento_p, ie_consistir_analise_w);
open C01;
loop
fetch C01 into
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	nr_seq_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/* Inserir motivo de glosa/ ocorrência */

	if (nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') or (nr_seq_motivo_glosa_p IS NOT NULL AND nr_seq_motivo_glosa_p::text <> '') then
		nr_seq_glosa_conta_w := pls_analise_inserir_glosa_item(nr_seq_analise_p, nr_seq_conta_w, nr_seq_conta_proc_w, nr_seq_conta_mat_w, null, nr_seq_ocorrencia_p, nr_seq_motivo_glosa_p, 'N', cd_estabelecimento_p, nm_usuario_p, 'N', nr_seq_glosa_conta_w);
	end if;

	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
		nr_seq_item_w	:= nr_seq_conta_proc_w;
	else
		nr_seq_item_w	:= nr_seq_conta_mat_w;
	end if;

	nr_seq_item_criado_w := pls_substituir_item_conta(cd_item_p, ie_tipo_p, ie_origem_proced_p, qt_item_p, vl_uni_apres_p, vl_total_apres_p, nr_seq_conta_w, nr_seq_item_w, nm_usuario_p, cd_estabelecimento_p, nr_seq_ocorrencia_p, nr_seq_motivo_glosa_p, nr_id_transacao_p, nr_seq_item_criado_w);

	nr_seq_proc_novo_w	:= null;
	nr_seq_mat_novo_w	:= null;

	if (ie_tipo_p = 'P') then
		nr_seq_proc_novo_w	:= nr_seq_item_criado_w;
	elsif (ie_tipo_p = 'M') then
		nr_seq_mat_novo_w	:= nr_seq_item_criado_w;
	end if;

	if (ie_consistir_analise_w = 'N') then
		CALL pls_analise_consistir_item(nr_seq_analise_p, 'S', null, nr_seq_conta_w, nr_seq_proc_novo_w, nr_seq_mat_novo_w, cd_estabelecimento_p, nm_usuario_p);
	end if;
	nr_seq_item_criado_p	:= nr_seq_item_criado_w;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_subst_item_conta ( nr_seq_analise_p bigint, cd_item_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, nr_seq_item_subs_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, nr_id_transacao_p bigint, nr_seq_item_criado_p INOUT bigint) FROM PUBLIC;

