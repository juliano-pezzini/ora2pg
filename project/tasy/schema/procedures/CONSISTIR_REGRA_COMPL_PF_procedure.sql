-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_regra_compl_pf ( cd_estabelecimento_p bigint, cd_perfil_p bigint, cd_pessoa_fisica_p text, cd_setor_p bigint, ie_obriga_p INOUT text, ds_regra_p INOUT text, ie_consis_atrib_p INOUT text, ie_regra_atuacao_p text default null, nr_seq_regra_p bigint default 0) AS $body$
DECLARE


ds_regras_w			varchar(1000) := null;
ie_tipo_complemento_w		smallint;
ie_obriga_w			varchar(1);
qt_regra_w			smallint;
ds_estabelecimento_w		pessoa_juridica.ds_razao_social%type;
ds_mensagem_w			varchar(1000);
qt_estab_w			bigint;
qt_pf_w				bigint;
qt_idade_w			integer;
nr_seq_regra_w			bigint;
ie_somente_regra_obrig_w		varchar(255);

--cursor c02
ds_mensagem_atrib_w		varchar(255);
nm_campo_obrig_w			varchar(255);
ie_campo_obrig_w			varchar(2);
ds_complemento_w			varchar(255);
ie_campo_vazio_w			varchar(2);
ds_regra_atrib_w			varchar(2000) := null;
ds_retorno_w			varchar(2000);
ds_mensagem_consist_w			varchar(255);

c01 CURSOR FOR
	SELECT	ie_tipo_complemento,
		substr(obter_valor_dominio(8,ie_tipo_complemento),1,255) ds_tipo_compl
	from	regra_compl_pessoa_fisica
	where	cd_estabelecimento = cd_estabelecimento_p
	and	coalesce(cd_perfil,coalesce(cd_perfil_p,0)) = coalesce(cd_perfil_p,0)
	and	coalesce(cd_setor_atendimento,coalesce(cd_setor_p,0)) = coalesce(cd_setor_p,0)
	and	((coalesce(qt_idade_minima::text, '') = '' or coalesce(qt_idade_maxima::text, '') = '') or (qt_idade_w between qt_idade_minima and qt_idade_maxima))
	and (coalesce(ie_regra_atuacao,'T') = 'T' or
		coalesce(ie_regra_atuacao,'T') = coalesce(ie_regra_atuacao_p,coalesce(ie_regra_atuacao,'T')))
	and (coalesce(nr_seq_regra_p,0) = 0 or
		nr_seq_regra_p = nr_sequencia)
	group by ie_tipo_complemento
	order by ie_tipo_complemento;

--Verifica os campos obrigatorios de acordo com a regra
c02 CURSOR FOR
	SELECT	b.ds_atributo,
		b.ie_obrigatorio,
		CASE WHEN coalesce(b.ds_mensagem,'0')='0' THEN ''  ELSE ' - ' || b.ds_mensagem END
	from	regra_compl_pf_atributo b,
		regra_compl_pessoa_fisica a		
	where	a.nr_sequencia = b.nr_seq_regra_compl_pf
	and	b.ie_obrigatorio = 'S'
	and	a.nr_sequencia = CASE WHEN coalesce(nr_seq_regra_p,0)=0 THEN nr_seq_regra_w  ELSE nr_seq_regra_p END 
	order by b.ds_atributo;



BEGIN
ie_somente_regra_obrig_w := obter_param_usuario(5, 219, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_p, ie_somente_regra_obrig_w);
ie_obriga_p := 'N';

delete	FROM LOG_REGRA_COMPL_PF
where	nm_usuario	= wheb_usuario_pck.get_nm_usuario;

commit;
if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	
	begin
	select	substr(obter_idade(dt_nascimento, clock_timestamp(), 'A'),1,5)
	into STRICT	qt_idade_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	exception
		when others then
		qt_idade_w	:= 0;
	end;

	select	obter_nome_estabelecimento(cd_estabelecimento_p)
	into STRICT	ds_estabelecimento_w
	;

	ds_mensagem_w	:= wheb_mensagem_pck.get_texto(306510, 'DS_ESTABELECIMENTO_W=' || ds_estabelecimento_w); -- O estabelecimento #@DS_ESTABELECIMENTO_W#@ possui as seguintes regras de complemento de pessoas fisicas cadastradas: 
	
	open c01;
	loop
	fetch c01 into
		ie_tipo_complemento_w,
		ds_complemento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	count(*)
		into STRICT	qt_regra_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_p
		and	ie_tipo_complemento = ie_tipo_complemento_w;
		
		select	coalesce(max(x.nr_sequencia),0)
		into STRICT	nr_seq_regra_w
		from	(SELECT	nr_sequencia
				from	regra_compl_pessoa_fisica
				where	cd_estabelecimento = cd_estabelecimento_p
				and	coalesce(cd_perfil,coalesce(cd_perfil_p,0)) = coalesce(cd_perfil_p,0)
				and	coalesce(cd_setor_atendimento,coalesce(cd_setor_p,0)) = coalesce(cd_setor_p,0)
				and	((coalesce(qt_idade_minima::text, '') = '' or coalesce(qt_idade_maxima::text, '') = '') or (qt_idade_w between qt_idade_minima and qt_idade_maxima))
				and (coalesce(ie_regra_atuacao,'T') = 'T' or
					coalesce(ie_regra_atuacao,'T') = coalesce(ie_regra_atuacao_p,coalesce(ie_regra_atuacao,'T')))
				and (coalesce(nr_seq_regra_p,0) = 0 or
					nr_seq_regra_p = nr_sequencia)
				and	ie_tipo_complemento = ie_tipo_complemento_w
				order by cd_perfil,
					cd_setor_atendimento,
					coalesce(qt_idade_minima,0) desc,
					coalesce(qt_idade_maxima,99999)) x LIMIT 1;

		if (qt_regra_w = 0) then
			begin

			begin
			select	ie_obriga
			into STRICT	ie_obriga_p
			from	regra_compl_pessoa_fisica
			where	nr_sequencia = nr_seq_regra_w;
			exception
			when others then
				ie_obriga_p := 'N';
			end;

			if (ie_obriga_p = 'S') then
				begin
				ie_obriga_p	:= 'S';
				ds_regras_w	:= substr(ds_regras_w || '- ' || obter_valor_dominio(8, ie_tipo_complemento_w) || ' [' || wheb_mensagem_pck.get_texto(306512, null) || ']' || chr(10),1,1000); -- Obrigatorio
				end;
			elsif (coalesce(ie_somente_regra_obrig_w,'N') = 'N') then
				ds_regras_w	:= substr(ds_regras_w || '- ' || obter_valor_dominio(8, ie_tipo_complemento_w) || ' [' || wheb_mensagem_pck.get_texto(306513, null) || ']' || chr(10),1,1000); -- Nao obrigatorio
			end if;
			end;
		end if;

		ds_mensagem_atrib_w:= wheb_mensagem_pck.get_texto(306510, 'DS_ESTABELECIMENTO_W=' || ds_estabelecimento_w); -- O estabelecimento #@DS_ESTABELECIMENTO_W#@ possui as seguintes regras de complemento de pessoas fisicas cadastradas: 
		
		
		
		begin
		open c02;
		loop
		fetch c02 into
			nm_campo_obrig_w,
			ie_campo_obrig_w,
			ds_mensagem_consist_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	obter_select_concatenado_bv(	' select decode('||nm_campo_obrig_w||',null,''S'','''',''S'',''N'') from compl_pessoa_fisica x where ie_tipo_complemento = :ie_complem_pf and x.cd_pessoa_fisica = :cd_pessoa_fisica  order by ie_tipo_complemento ',
								'cd_pessoa_fisica='|| cd_pessoa_fisica_p ||';ie_complem_pf='|| ie_tipo_complemento_w, '')
			into STRICT	ie_campo_vazio_w
			;
			
			if (qt_regra_w > 0) and (ie_campo_obrig_w = 'S') and (ie_campo_vazio_w = 'S') then
				ds_regra_atrib_w :=	ds_regra_atrib_w||





									wheb_mensagem_pck.get_texto(306519, 'DS_COMPLEMENTO_W=' || ds_complemento_w || ';' ||
																		'NM_CAMPO_OBRIG_W=' || nm_campo_obrig_w|| ';' ||
																		'DS_MENSAGEM_CONSIST_W=' || ds_mensagem_consist_w || ';' ||
																		'IE_CAMPO_VAZIO_W=' || ie_campo_vazio_w || ';' ||
																		'IE_CAMPO_OBRIG_W=' || ie_campo_obrig_w);

			elsif (qt_regra_w = 0) and (ie_campo_obrig_w = 'S') and (ie_campo_vazio_w = 'S') then
				ds_regra_atrib_w :=	ds_regra_atrib_w||





									wheb_mensagem_pck.get_texto(306522, 'DS_COMPLEMENTO_W=' || ds_complemento_w || ';' ||
																		'NM_COMPLEMENTO_W=' || wheb_mensagem_pck.get_texto(306523, null) || ';' ||
																		'NM_CAMPO_OBRIG_W=' || nm_campo_obrig_w || ';' ||
																		'IE_CAMPO_OBRIG_W=' || ie_campo_obrig_w);
			elsif (qt_regra_w = 0) and (ie_campo_obrig_w = 'S') then
				ds_regra_atrib_w :=	wheb_mensagem_pck.get_texto(306525, null);

			end if;
			end;
		end loop;
		close c02;
		
		exception
		when others then
			ie_consis_atrib_p	:= 'N';
			ds_regra_atrib_w	:= '';
			
			insert into	LOG_REGRA_COMPL_PF(
						dt_atualizacao,
						nm_usuario,
						ds_log
						) 
						values (
						clock_timestamp(),
						wheb_usuario_pck.get_nm_usuario,
						wheb_mensagem_pck.get_texto(306526, null) -- Erro ao executar o cursor c02 para consistir os campos da regra!
						);

			commit;
		end;
		end;
		
	end loop;
	close c01;	
end if;

if (ds_regras_w IS NOT NULL AND ds_regras_w::text <> '') then

	ds_regra_p	:= substr(ds_mensagem_w || ds_regras_w,1,255);
	ds_retorno_w 	:=	chr(10)||chr(13)||
				wheb_mensagem_pck.get_texto(306527, null) || -- Definicoes dos campos pela regra: 
				ds_regra_atrib_w;

else
	ds_regra_p	:= '';
	ds_retorno_w	:=	ds_mensagem_atrib_w ||
				chr(10)||chr(13)||
				wheb_mensagem_pck.get_texto(306527, null) || -- Definicoes dos campos pela regra: 
				ds_regra_atrib_w;
end if;

if (ds_regra_atrib_w IS NOT NULL AND ds_regra_atrib_w::text <> '') or (ds_regra_atrib_w <> '') then
	ie_consis_atrib_p	:= 'S';

	insert into	LOG_REGRA_COMPL_PF(
				dt_atualizacao,
				nm_usuario,
				ds_log
				) 
				values (
				clock_timestamp(),
				wheb_usuario_pck.get_nm_usuario,
				substr(ds_retorno_w,1,2000)



				);
	commit;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_regra_compl_pf ( cd_estabelecimento_p bigint, cd_perfil_p bigint, cd_pessoa_fisica_p text, cd_setor_p bigint, ie_obriga_p INOUT text, ds_regra_p INOUT text, ie_consis_atrib_p INOUT text, ie_regra_atuacao_p text default null, nr_seq_regra_p bigint default 0) FROM PUBLIC;

