-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE far_gerar_itens_pedido ( nm_usuario_p text, nr_seq_vendedor_p bigint, nr_seq_pedido_p bigint, cd_material_p bigint, qt_material_p bigint, vl_novo_desconto_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_seq_motivo_desc_p bigint, nr_sequencia_p bigint, nr_seq_item_update_p bigint, nr_seq_item_p INOUT bigint) AS $body$
DECLARE

 
								 
cd_material_w		bigint;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
existe_regra_item_w	integer;
existe_regra_pedido_w	integer;
valida_material_w		integer;
vl_preco_orig_w		double precision;
vl_desconto_orig_w		double precision;
vl_desconto_final_w 	double precision;
pr_desconto_final_w	double precision;
vl_desconto_max_item_w	double precision;
pr_desconto_max_item_w	double precision;
vl_desconto_max_pedido_w	double precision;
pr_desconto_max_pedido_w	double precision;
vl_desconto_pedido_w	double precision;
pr_desconto_pedido_w    	double precision;
vl_mercadoria_w		double precision;
vl_total_pedido_w		double precision;
vl_total_desconto_w	double precision;
ie_entregar_w		varchar(1);
nr_sequencia_w		bigint;


BEGIN 
 
select	count(*) 
into STRICT	valida_material_w 
from	estrutura_material_v 
where	cd_material = cd_material_p;
 
if (valida_material_w = 0) then 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(279312);
end if;
 
select	cd_material, 
	cd_grupo_material, 
	cd_subgrupo_material, 
	cd_classe_material 
into STRICT	cd_material_w, 
	cd_grupo_material_w, 
	cd_subgrupo_material_w, 
	cd_classe_material_w 
from	estrutura_material_v 
where	cd_material = cd_material_p;
 
vl_preco_orig_w:= far_obter_preco_mat2(cd_material_p,cd_estabelecimento_p,0);
vl_desconto_orig_w:= far_obter_preco_mat2(cd_material_p,cd_estabelecimento_p,1);
vl_total_pedido_w	:= (vl_preco_orig_w * qt_material_p);
 
vl_desconto_final_w:= vl_novo_desconto_p;
 
if (coalesce(vl_desconto_final_w,0) = 0) then 
	vl_desconto_final_w:= vl_desconto_orig_w;
end if;
 
vl_total_desconto_w := (vl_desconto_final_w * qt_material_p);
 
pr_desconto_final_w:= (dividir(100,(vl_preco_orig_w))*vl_desconto_final_w);
 
select	count(*) 
into STRICT	existe_regra_item_w 
from	far_regra_limite_desc 
where	ie_tipo_desconto = 'I' 
and	coalesce(nr_seq_vendedor,nr_seq_vendedor_p) = nr_seq_vendedor_p 
and	coalesce(cd_material,cd_material_w) = cd_material_w 
and	coalesce(cd_grupo_material,cd_grupo_material_w) = cd_grupo_material_w 
and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w) = cd_subgrupo_material_w 
and	coalesce(cd_classe_material,cd_classe_material_w) = cd_classe_material_w;
 
if (existe_regra_item_w > 0) then 
 
	select	coalesce(max(vl_desconto_max),0), 
			coalesce(max(pr_desconto_max),0) 
	into STRICT	vl_desconto_max_item_w, 
			pr_desconto_max_item_w 
	from	far_regra_limite_desc 
	where	ie_tipo_desconto = 'I' 
	and	coalesce(nr_seq_vendedor,nr_seq_vendedor_p) = nr_seq_vendedor_p 
	and	coalesce(cd_material,cd_material_w) = cd_material_w 
	and	coalesce(cd_grupo_material,cd_grupo_material_w) = cd_grupo_material_w 
	and	coalesce(cd_subgrupo_material,cd_subgrupo_material_w) = cd_subgrupo_material_w 
	and	coalesce(cd_classe_material,cd_classe_material_w) = cd_classe_material_w;
	 
	-- Consiste por favlor Fixo do item 
	if ((coalesce(vl_desconto_max_item_w * qt_material_p,0) < (vl_desconto_final_w/qt_material_p)) and (coalesce(vl_desconto_max_item_w,0) <> 0)) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(279315);
	end if;
	 
	-- Consiste pelo percentual do item 
	if (coalesce(pr_desconto_max_item_w * qt_material_p,0) < (pr_desconto_final_w/qt_material_p)) and (coalesce(pr_desconto_max_item_w,0) <> 0) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(279317);
	end if;	
 
end if;
 
select	count(*) 
into STRICT	existe_regra_pedido_w 
from	far_regra_limite_desc 
where	ie_tipo_desconto = 'P' 
and	coalesce(nr_seq_vendedor,nr_seq_vendedor_p) = nr_seq_vendedor_p;
 
if (existe_regra_pedido_w > 0) then 
	 
	select	coalesce(max(vl_desconto_max),0), 
			coalesce(max(pr_desconto_max),0) 
	into STRICT	vl_desconto_max_pedido_w, 
			pr_desconto_max_pedido_w		 
	from	far_regra_limite_desc 
	where	ie_tipo_desconto = 'P' 
	and	coalesce(nr_seq_vendedor,nr_seq_vendedor_p) = nr_seq_vendedor_p;
	 
	select	vl_mercadoria, 
			vl_desconto 
	into STRICT	vl_mercadoria_w, 
			vl_desconto_pedido_w 
	from	far_pedido 
	where	nr_sequencia = nr_seq_pedido_p;
 
	pr_desconto_pedido_w:= (dividir(100,(vl_mercadoria_w+vl_preco_orig_w))*vl_desconto_pedido_w);
	 
	-- Consiste por favlor Fixo do pedido 
	if ((coalesce(vl_desconto_max_pedido_w,0) < (vl_desconto_final_w+vl_desconto_pedido_w)) and (coalesce(vl_desconto_max_pedido_w,0) <> 0)) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(279320);
	end if;	
 
	-- Consiste pelo percentual do pedido 
	if (coalesce(pr_desconto_max_pedido_w,0) < pr_desconto_pedido_w) and (coalesce(pr_desconto_max_pedido_w,0) <> 0) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(279321);
	end if;		
	 
end if;
 
nr_sequencia_w:= nr_sequencia_p;
 
if (coalesce(nr_sequencia_w,0) = 0) then 
 
	nr_sequencia_w := 1;
	 
	select 	coalesce(max(nr_seq_item),0) + 1 
	into STRICT	nr_sequencia_w 
	from 	far_pedido_item 
	where	nr_seq_pedido = nr_seq_pedido_p;
	 
	insert into far_pedido_item( 
				nr_seq_item, 
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_pedido, 
				qt_material, 
				cd_material, 
				vl_unitario_item, 
				vl_total_item, 
				vl_liquido_item, 
				cd_unidade_medida, 
				nr_seq_promocao, 
				vl_desconto, 
				pr_desconto) 
			values (nr_sequencia_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_pedido_p, 
				qt_material_p, 
				cd_material_p, 
				vl_preco_orig_w, 
				vl_total_pedido_w, 
				(vl_total_pedido_w-vl_total_desconto_w), 
				0, 
				null, 
				vl_total_desconto_w, 
				pr_desconto_final_w);
				 
	update	far_pedido 
	set		vl_mercadoria = (vl_mercadoria+vl_total_pedido_w-vl_total_desconto_w) 
	where	nr_sequencia = nr_seq_pedido_p;
	 
else 
	update	far_pedido_item 
	set	vl_desconto = vl_desconto_final_w, 
		pr_desconto = (pr_desconto_final_w/qt_material_p), 
		nr_seq_motivo_desc = nr_seq_motivo_desc_p, 
		vl_liquido_item = ((vl_preco_orig_w*qt_material_p)-vl_desconto_final_w) 
	where	nr_seq_pedido = nr_seq_pedido_p 
	and	nr_seq_item = nr_seq_item_update_p;
	 
end if;
 
nr_seq_item_p:= nr_sequencia_w;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE far_gerar_itens_pedido ( nm_usuario_p text, nr_seq_vendedor_p bigint, nr_seq_pedido_p bigint, cd_material_p bigint, qt_material_p bigint, vl_novo_desconto_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, nr_seq_motivo_desc_p bigint, nr_sequencia_p bigint, nr_seq_item_update_p bigint, nr_seq_item_p INOUT bigint) FROM PUBLIC;

