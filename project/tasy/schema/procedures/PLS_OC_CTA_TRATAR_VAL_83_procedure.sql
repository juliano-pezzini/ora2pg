-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_83 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar guia principal autorização
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
dados_tb_sel_w			pls_tipos_ocor_pck.dados_table_selecao_ocor;
dados_tb_selecao_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;
nr_idx_w			integer := 0;
qt_guia_w			integer := 0;
cd_guia_principal_w		pls_guia_plano.cd_guia_principal%type;
ds_observacao_w			varchar(1500);

-- Informações da validação guia principal autorização
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.ie_valida_guia_autoriza,
		coalesce(a.ie_guia_nulo,'N') ie_guia_nulo,
		ie_tipo_guia,
		coalesce(ie_valida_guia_referencia,'N') ie_valida_guia_referencia,
		( 	SELECT 	max(ds_expressao)
			from 	valor_dominio_v
			where 	cd_dominio = 1746
			and 	vl_dominio = ie_tipo_guia) ds_tipo_guia
	from	pls_oc_cta_val_guia_aut a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		conta.nr_seq_guia,
		conta.cd_guia_referencia,
		conta.nr_seq_segurado,
		conta.ie_tipo_guia,
		conta.cd_guia,
		conta.cd_guia_ref  --Esse campo na view é o cd_guia_referencia da pls_conta deve ser utilizado esse e não o cd_guia_ok pois é assim que é tratado na glosa 1306
	from	pls_oc_cta_selecao_ocor_v	sel,
		pls_conta_v			conta
	where	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	conta.nr_sequencia	= sel.nr_seq_conta;
BEGIN

-- Deve existir informação da regra para aplicar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		/*Verifica se é para validar a ocorrência*/

		if (r_C01_w.ie_valida_guia_autoriza = 'S') or (r_C01_w.ie_guia_nulo = 'S') or (r_C01_w.ie_tipo_guia IS NOT NULL AND r_C01_w.ie_tipo_guia::text <> '') or (r_C01_w.ie_valida_guia_referencia = 'S') then

			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
			pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);

			for r_C02_w in C02(nr_id_transacao_p) loop
				qt_guia_w := 0;
				ds_observacao_w := null;

				if (r_C01_w.ie_valida_guia_referencia = 'S') and (r_C02_w.cd_guia_ref IS NOT NULL AND r_C02_w.cd_guia_ref::text <> '') and (r_C02_w.ie_tipo_guia in ('4','5')) and (r_C02_w.cd_guia_ref <> r_C02_w.cd_guia) then
					select	count(1)
					into STRICT	qt_guia_w
					from	pls_guia_plano
					where	cd_guia = r_C02_w.cd_guia_ref
					and	nr_seq_segurado	= r_C02_w.nr_seq_segurado;

					if (qt_guia_w = 0) then
						select	count(1)
						into STRICT	qt_guia_w
						from	pls_conta
						where	cd_guia	= r_C02_w.cd_guia_ref
						and	nr_seq_segurado = r_C02_w.nr_seq_segurado;

						if (qt_guia_w = 0) then
							ds_observacao_w := 	'Não foi encontrado nenhuma autorização nem conta médica com o código de guia = ' || r_C02_w.cd_guia_ref ||
										' e segurado = ' || r_C02_w.nr_seq_segurado || '.';
						end if;
					end if;
				end if;

				if (r_C02_w.nr_seq_guia IS NOT NULL AND r_C02_w.nr_seq_guia::text <> '') and (r_C02_w.cd_guia_referencia IS NOT NULL AND r_C02_w.cd_guia_referencia::text <> '') and (coalesce(ds_observacao_w::text, '') = '') then
					/*Busca a guia principal da guia da guia*/

					select	cd_guia_principal
					into STRICT	cd_guia_principal_w
					from	pls_guia_plano
					where	nr_sequencia	= r_C02_w.nr_seq_guia;

					/*Caso a guia principal que está na guia seja diferente da conta*/

					if (cd_guia_principal_w <> r_C02_w.cd_guia_referencia) and (r_C01_w.ie_valida_guia_autoriza = 'S') then
						ds_observacao_w := 	'Guia referência da conta ' || r_C02_w.cd_guia_referencia ||
									' é diferente que está na guia da autorização (' || cd_guia_principal_w || ')';

					elsif (coalesce(cd_guia_principal_w::text, '') = '') and (r_C01_w.ie_guia_nulo = 'S') then

						ds_observacao_w := 	'Há uma guia referência informada na conta (' || r_C02_w.cd_guia_referencia ||
									'), porém, não está informada na guia da autorização';
					end if;

					--Caso ainda não gerou ocorrência, Nesse caso, busca pela guia referência e nr_seq_segurado uma guia autorizada do tipo da guia selecionada na validação
					--
					if ((r_C01_w.ie_tipo_guia IS NOT NULL AND r_C01_w.ie_tipo_guia::text <> '') and coalesce(ds_observacao_w::text, '') = '') then

						select	max(cd_guia)
						into STRICT	cd_guia_principal_w
						from	pls_guia_plano
						where	cd_guia		= r_C02_w.cd_guia_referencia
						and	nr_seq_segurado = r_C02_w.nr_seq_segurado
						and	ie_tipo_guia	= r_c01_w.ie_tipo_guia
						and 	ie_status	= '1';

						if (coalesce(cd_guia_principal_w::text, '') = '') then

							ds_observacao_w := 	'Não localizada uma autorização com cd_guia = ' || r_C02_w.cd_guia_referencia ||
									' e segurado '||r_C02_w.nr_seq_segurado||' cujo o tipo de guia = '|| r_C01_w.ds_tipo_guia||
									' ou a guia não está autorizada. ';

						end if;
					end if;
				end if;

				if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then

					dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
					dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
					dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= ds_observacao_w;

					if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
						CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
												'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
						nr_idx_w := 0;
						pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
					else
						nr_idx_w := nr_idx_w + 1;
					end if;
				end if;

			end loop;

			/*Lança as glosas caso existir registros que não foram gerados*/

			if (nr_idx_w > 0)	then
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
										'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
			end if;

			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;

	end loop;
end if;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_83 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

