-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dados_exame_interno (cd_pessoa_fisica_p text, nr_prescricao_p bigint, nr_sequencia_p bigint, dt_exame_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_sequencia_w		bigint;
nr_seq_exame_w		bigint;
nr_seq_exame_item_w	bigint;
nr_prescricao_w		bigint;
nr_seq_prescricao_w	integer;

qt_resultado_w		double precision;
ds_resultado_w		varchar(255);
pr_resultado_w		double precision;
dt_exame_w		timestamp;
nr_seq_cliente_w	bigint;
nr_seq_exame_res_w	bigint;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		d.nr_seq_exame, 
		a.dt_exame, 
		a.nr_seq_cliente, 
		a.nr_seq_exame 
	FROM 	med_result_exame a, 
		med_cliente b, 
		atendimento_paciente c, 
		med_exame_padrao d 
	WHERE 	a.nr_seq_cliente 	= b.nr_sequencia 
	AND	a.nr_seq_exame 		= d.nr_sequencia 
	AND	(d.nr_seq_exame IS NOT NULL AND d.nr_seq_exame::text <> '') 
	AND	a.dt_exame		= TRUNC(dt_exame_p) 
	and	coalesce(a.nr_prescricao,nr_prescricao_p) 		= nr_prescricao_p 
	and	coalesce(a.nr_seq_prescricao,nr_sequencia_p)	= nr_sequencia_p 
	AND	c.cd_pessoa_fisica 	= cd_pessoa_fisica_p 
	AND	b.cd_pessoa_fisica 	= c.cd_pessoa_fisica 
	AND	((coalesce(vl_exame::text, '') = '') OR (coalesce(ds_valor_exame::text, '') = ''));

 
C03 CURSOR FOR 
	SELECT 	E.qt_resultado, 
		SUBSTR(E.ds_resultado,1,255), 
		E.pr_resultado, 
		E.nr_seq_exame, 
		B.nr_prescricao, 
		E.nr_seq_prescr 
	FROM 	result_laboratorio a, 
		prescr_medica B, 
		exame_lab_result_item E, 
		exame_lab_resultado D, 
		prescr_procedimento C 
	WHERE 	a.nr_prescricao   	= b.nr_prescricao 
	AND 	a.nr_prescricao   	= c.nr_prescricao 
	AND 	a.nr_seq_prescricao 	= c.nr_sequencia 
	AND	D.nr_seq_resultado 	= E.nr_seq_resultado 
	AND 	D.nr_prescricao 	= B.nr_prescricao  -- 
	AND 	C.nr_sequencia 	= E.nr_seq_prescr  -- 
	AND 	C.nr_prescricao 	= B.nr_prescricao 
	AND	C.nr_prescricao		= nr_prescricao_p 
	AND	C.nr_sequencia		= nr_sequencia_p 
	AND 	E.nr_seq_exame 	= nr_seq_exame_w 
	AND	EXISTS (SELECT	1 
			FROM  	atendimento_paciente X 
			WHERE 	X.cd_pessoa_fisica = cd_pessoa_fisica_p 
			AND 	B.nr_atendimento = X.nr_atendimento) 
	AND 	C.ie_status_atend 	>= 35 
	AND 	(a.ds_resultado IS NOT NULL AND a.ds_resultado::text <> '') 
	AND 	((E.qt_resultado IS NOT NULL AND E.qt_resultado::text <> '') OR (E.ds_resultado IS NOT NULL AND E.ds_resultado::text <> '') OR (E.pr_resultado IS NOT NULL AND E.pr_resultado::text <> '')) 
	ORDER BY E.dt_aprovacao;

 
C04 CURSOR FOR 
	SELECT 	a.nr_seq_cliente, 
		a.dt_exame, 
		b.nr_sequencia, 
		a.nr_prescricao, 
		a.nr_seq_prescricao, 
		a.nr_seq_exame_lab 
	FROM  	med_result_exame a, 
		med_exame_padrao b, 
		med_cliente c					 
	WHERE 	a.nr_seq_exame 	 = b.nr_sequencia 
	AND	a.nr_seq_cliente  = c.nr_sequencia 
	AND	c.cd_pessoa_fisica = cd_pessoa_fisica_p 
	and	a.dt_exame = trunc(dt_exame_p) 
	and	coalesce(a.nr_prescricao,nr_prescricao_p) 	= nr_prescricao_p 
	and	coalesce(a.nr_seq_prescricao,nr_sequencia_p)	= nr_sequencia_p 
	and	coalesce(a.ie_calculado,'N') = 'N';
	
	 
 

BEGIN 
 
OPEN C01;
LOOP 
FETCH C01 INTO 
	nr_sequencia_w, 
	nr_seq_exame_w, 
	dt_exame_w, 
	nr_seq_cliente_w, 
	nr_seq_exame_res_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	nr_prescricao_w		:= 0;
	nr_seq_prescricao_w	:= 0;
	qt_resultado_w		:= 0;
	ds_resultado_w		:= '';
	pr_resultado_w		:= 0;
	 
	OPEN C03;
	LOOP 
	FETCH C03 INTO 
		qt_resultado_w, 
		ds_resultado_w, 
		pr_resultado_w, 
		nr_seq_exame_item_w, 
		nr_prescricao_w, 
		nr_seq_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		 
		IF (coalesce(qt_resultado_w,0) <> 0) THEN 
			UPDATE	med_result_exame 
			SET	vl_exame	= qt_resultado_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			WHERE	nr_sequencia	= nr_sequencia_w;
												 
			CALL Med_Altera_Resultado_Exame(nr_sequencia_w,qt_resultado_w,nr_seq_cliente_w,nr_seq_exame_res_w);
 
		ELSIF (coalesce(pr_resultado_w,0) <> 0) THEN 
			UPDATE	med_result_exame 
			SET	vl_exame	= pr_resultado_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			WHERE	nr_sequencia	= nr_sequencia_w;
			 
			CALL Med_Altera_Resultado_Exame(nr_sequencia_w,pr_resultado_w,nr_seq_cliente_w,nr_seq_exame_res_w);
 
		ELSIF (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') THEN 
			UPDATE	med_result_exame 
			SET	ds_valor_exame	= ds_resultado_w, 
				nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp() 
			WHERE	nr_sequencia	= nr_sequencia_w;
 
		END IF;
		 
 
	END LOOP;
	CLOSE C03;
 
END LOOP;
CLOSE C01;
 
OPEN C04;
LOOP 
FETCH C04 INTO 
	nr_seq_cliente_w, 
	dt_exame_w, 
	nr_seq_exame_w, 
	nr_prescricao_w, 
	nr_seq_prescricao_w, 
	nr_seq_exame_item_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	CALL Med_Atualiza_Exame_interno(nr_seq_cliente_w,dt_exame_w,nr_seq_exame_w);
end loop;
close C04;
 
 
COMMIT;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dados_exame_interno (cd_pessoa_fisica_p text, nr_prescricao_p bigint, nr_sequencia_p bigint, dt_exame_p timestamp, nm_usuario_p text) FROM PUBLIC;

