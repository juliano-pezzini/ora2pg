-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_rec_glosa (nr_seq_lote_hist_p bigint, nm_usuario_p text, ds_dir_padrao_p text) AS $body$
DECLARE


cd_convenio_w			bigint;
cd_estabelecimento_w		bigint;
cd_ans_w			varchar(100);
ds_arquivo_logo_w		varchar(255);
ds_arquivo_logo_comp_w		varchar(255);
ie_gerar_tiss_w			varchar(10);
ds_versao_w			varchar(20);
cd_item_w			varchar(10);
ds_item_w			varchar(255);
dt_realizacao_w			timestamp;
dt_fim_realizacao_w		timestamp;
cd_edicao_amb_w			varchar(2);
nr_seq_motivo_glosa_w		varchar(10);
nr_seq_motivo_glosa_guia_w	varchar(10);
vl_recursado_w			double precision;
ds_justificativa_w		varchar(255);
nr_seq_rec_guia_w		bigint;
cd_autorizacao_w		varchar(20);
cd_senha_w			varchar(20);
nr_seq_guia_w			bigint;
qt_item_w			bigint;
cd_motivo_glosa_w		varchar(4);
cont_w				bigint;
nr_seq_apresentacao_w		bigint;
ie_funcao_medico_w		tiss_recurso_glosa_item.ie_funcao_medico%type;
im_logo_convenio_w		tiss_logo_convenio.im_logo_convenio%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_autorizacao,
	a.cd_senha,
	a.nr_seq_motivo_glosa
from	tiss_recurso_glosa_guia a,
	tiss_recurso_glosa_prot b
where	a.nr_seq_rec_prot	= b.nr_sequencia
and	b.nr_seq_lote_hist	= nr_seq_lote_hist_p
order by a.cd_autorizacao;

c02 CURSOR FOR
SELECT	a.cd_procedimento_convenio,
	a.ds_procedimento,
	a.dt_procedimento,
	a.dt_fim_procedimento,
	a.cd_edicao_amb,
	a.nr_seq_motivo_glosa,
	a.vl_recursado,
	a.ds_justificativa,
	a.ie_funcao_medico
from	tiss_recurso_glosa_item a
where	a.nr_seq_rec_guia	= nr_seq_rec_guia_w
order by a.dt_procedimento,
	a.dt_fim_procedimento,
	a.ds_procedimento;


BEGIN

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_recurso
where	nm_usuario		= nm_usuario_p;

commit;

if (coalesce(nr_seq_lote_hist_p,0) > -1) then

	select	max(a.cd_convenio),
		max(a.cd_estabelecimento),
		max(d.cd_ans),
		max(c.ds_arquivo_logo_tiss)
	into STRICT	cd_convenio_w,
		cd_estabelecimento_w,
		cd_ans_w,
		ds_arquivo_logo_w
	from	lote_auditoria a,
		lote_audit_hist b,
		convenio c,
		pessoa_juridica d
	where	a.nr_sequencia	= b.nr_seq_lote_audit
	and	a.cd_convenio	= c.cd_convenio
	and	c.cd_cgc	= d.cd_cgc
	and	b.nr_sequencia	= nr_seq_lote_hist_p;

	select	max(ds_arquivo_logo_comp),
		coalesce(max(ie_gerar_tiss), 'S')
	into STRICT	ds_arquivo_logo_comp_w,
		ie_gerar_tiss_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;

	if (coalesce(ie_gerar_tiss_w,'S') = 'S') then
	
		begin
			select	im_logo_convenio
			into STRICT	im_logo_convenio_w
			from	tiss_logo_convenio
			where	cd_convenio	   = cd_convenio_w
			and 	coalesce(ie_situacao,'N') = 'A';
		exception
		when others then
			im_logo_convenio_w := null;
		end;
				
		if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
			ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
		end if;

		if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				ds_arquivo_logo_w,
				null);
		else
			insert	into w_tiss_relatorio(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ds_arquivo_logo,
				im_logo_convenio)
			values (nextval('w_tiss_relatorio_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				im_logo_convenio_w);
		end if;

		open C01;
		loop
		fetch C01 into
			nr_seq_rec_guia_w,
			cd_autorizacao_w,
			cd_senha_w,
			nr_seq_motivo_glosa_guia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			qt_item_w	:= 0;
			
			if (coalesce(nr_seq_motivo_glosa_guia_w::text, '') = '') then

				open C02;
				loop
				fetch C02 into
					cd_item_w,
					ds_item_w,
					dt_realizacao_w,
					dt_fim_realizacao_w,
					cd_edicao_amb_w,
					nr_seq_motivo_glosa_w,
					vl_recursado_w,
					ds_justificativa_w,
					ie_funcao_medico_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin

					if (qt_item_w = 0) then
						nr_seq_guia_w  := TISS_GERAR_CAB_REC_GLOSA(nr_seq_rec_guia_w, nr_seq_lote_hist_p, nm_usuario_p, nr_seq_guia_w );
					end if;

					qt_item_w	:= qt_item_w + 1;

					select	max(cd_motivo_tiss)
					into STRICT	cd_motivo_glosa_w
					from	tiss_motivo_glosa
					where	nr_sequencia	= nr_seq_motivo_glosa_w;

					insert into w_tiss_recurso_guia_item(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_recurso_guia,
						dt_realizacao,
						dt_fim_realizacao,
						cd_edicao_amb,
						cd_item,
						ds_item,
						cd_motivo_glosa,
						vl_recursado,
						ds_justificativa,
						nr_seq_apresentacao,
						ie_funcao_medico)
					values (nextval('w_tiss_recurso_guia_item_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						dt_realizacao_w,
						dt_fim_realizacao_w,
						cd_edicao_amb_w,
						cd_item_w,
						ds_item_w,
						cd_motivo_glosa_w,
						vl_recursado_w,
						ds_justificativa_w,
						qt_item_w,
						ie_funcao_medico_w);

					if (qt_item_w = 7) then
						qt_item_w := 0;

						select	count(*)
						into STRICT	cont_w
						from	w_tiss_recurso_guia_item
						where	nr_seq_recurso_guia	= nr_seq_guia_w;

						select	coalesce(max(nr_seq_apresentacao),1)
						into STRICT	nr_seq_apresentacao_w
						from	w_tiss_recurso_guia_item
						where	nr_seq_recurso_guia	= nr_seq_guia_w;

						while	cont_w < 7 loop
							nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

							insert	into w_tiss_recurso_guia_item(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_recurso_guia,
								nr_seq_apresentacao)
							values (nextval('w_tiss_recurso_guia_item_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_guia_w,
								nr_seq_apresentacao_w);
							cont_w		:= cont_w + 1;
						end loop;
					end if;

					end;
				end loop;
				close C02;
			
			else			
				nr_seq_guia_w := TISS_GERAR_CAB_REC_GLOSA(nr_seq_rec_guia_w, nr_seq_lote_hist_p, nm_usuario_p, nr_seq_guia_w);			
			end if;
				
			if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then

				select	count(*)
				into STRICT	cont_w
				from	w_tiss_recurso_guia_item
				where	nr_seq_recurso_guia	= nr_seq_guia_w;

				select	coalesce(max(nr_seq_apresentacao),1)
				into STRICT	nr_seq_apresentacao_w
				from	w_tiss_recurso_guia_item
				where	nr_seq_recurso_guia	= nr_seq_guia_w;

				while	cont_w < 7 loop
				
					nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;

					insert	into w_tiss_recurso_guia_item(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_recurso_guia,
						nr_seq_apresentacao)
					values (nextval('w_tiss_recurso_guia_item_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						nr_seq_apresentacao_w);
					cont_w		:= cont_w + 1;
				end loop;
			end if;

			end;
		end loop;
		close C01;

	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_rec_glosa (nr_seq_lote_hist_p bigint, nm_usuario_p text, ds_dir_padrao_p text) FROM PUBLIC;

