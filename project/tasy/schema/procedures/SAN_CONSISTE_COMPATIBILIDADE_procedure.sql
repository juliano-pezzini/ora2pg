-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_consiste_compatibilidade ( nr_seq_trans_res_p bigint, ie_tipo_p text, sql_item_p text, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


lista_producao_w		dbms_sql.varchar2_table;
ds_resultado_w			varchar(255);
ie_tipo_sangue_doador_w		varchar(2);
ie_tipo_sangue_receptor_w	varchar(2);
ie_regra_w			varchar(1);
nr_seq_exame_w			bigint;
nr_seq_exame_lote_w		bigint;
nr_seq_doacao_w			bigint;
nr_seq_producao_w		bigint;
cd_pessoa_fisica_w		varchar(10);
ds_exame_w			varchar(100);

c01 CURSOR FOR
SELECT	ds_resultado, nr_seq_exame
from 	san_exame_realizado
where	nr_seq_exame_lote = nr_seq_exame_lote_w;

c02 CURSOR FOR
SELECT	ie_regra
from	san_exame_compatibilidade
where	nr_seq_exame = nr_seq_exame_w
and	upper(ds_resultado) = upper(ds_resultado_w)
and	((ie_tipo_sangue_bolsa = ie_tipo_sangue_doador_w)
or (coalesce(ie_tipo_sangue_bolsa::text, '') = ''))
and 	((ie_tipo_sangue_receptor = ie_tipo_sangue_receptor_w)
or (coalesce(ie_tipo_sangue_receptor::text, '') = ''));

c03 CURSOR FOR
SELECT	ds_exame
from	san_exame
where	nr_sequencia = nr_seq_exame_w;
BEGIN

if (ie_tipo_p = 'R') then
	select 	cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	san_reserva
	where	nr_sequencia = nr_seq_trans_res_p;
elsif (ie_tipo_p = 'T') then
	select 	cd_pessoa_fisica
	into STRICT	cd_pessoa_fisica_w
	from	san_transfusao
	where	nr_sequencia = nr_seq_trans_res_p;
end if;

select	max(ie_tipo_sangue)
into STRICT	ie_tipo_sangue_receptor_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_w;

ds_retorno_p := '';
lista_producao_w := obter_lista_string(sql_item_p, ',');

for	i in lista_producao_w.first..lista_producao_w.last loop
	nr_seq_producao_w := (lista_producao_w(i))::numeric;

	select	max(nr_seq_doacao), max(ie_tipo_sangue)
	into STRICT	nr_seq_doacao_w,
		ie_tipo_sangue_doador_w
	from	san_producao
	where	nr_sequencia = nr_seq_producao_w;

	if (nr_seq_doacao_w IS NOT NULL AND nr_seq_doacao_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_exame_lote_w
		from	san_exame_lote
		where	nr_seq_doacao = nr_seq_doacao_w;
	else
		select	max(nr_sequencia)
		into STRICT	nr_seq_exame_lote_w
		from	san_exame_lote
		where	nr_seq_producao = nr_seq_producao_w;
	end if;

	open c01;
		loop
		fetch c01 into
			ds_resultado_w,
			nr_seq_exame_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		open c02;
			loop
			fetch c02 into
				ie_regra_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			open c03;
				fetch c03 into
					ds_exame_w;
				ds_retorno_p := ds_retorno_p || ie_regra_w || '#' || ds_exame_w || '//';

			close c03;
			end;

		end loop;
		close c02;
		end;

	end loop;
	close c01;

end loop;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_consiste_compatibilidade ( nr_seq_trans_res_p bigint, ie_tipo_p text, sql_item_p text, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

