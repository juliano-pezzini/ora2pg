-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_caixa_saldo (nr_seq_saldo_caixa_p bigint, nr_seq_lote_p bigint, vl_especie_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
NR_SEQ_TRANS_TROCO_W		bigint;
NR_SEQ_CHEQUE_CR_w		bigint;
NR_SEQ_ESPECIE_CR_w		bigint;
NR_SEQ_CHEQUE_CP_w		bigint;
NR_SEQ_ESPECIE_CP_w		bigint;
nr_sequencia_w			bigint;
nr_seq_caixa_w			bigint;
dt_saldo_w			timestamp;
vl_saldo_w			double precision;
vl_saldo_lote_w			double precision;
nr_seq_cheque_w			bigint;
vl_cheque_w			double precision;
nr_seq_trans_fin_especie_w		bigint;


c01 CURSOR FOR
SELECT	a.nr_seq_cheque,
	a.vl_cheque
from	cheque_cr a
where	a.nr_seq_lote		= nr_seq_lote_p
and	a.nr_seq_saldo_caixa	= nr_seq_saldo_caixa_p
and	not exists (select	1
		from	movto_trans_financ x
		where	x.nr_seq_cheque		= a.nr_seq_cheque);


c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.vl_cheque
from	cheque a
where	a.nr_seq_lote		= nr_seq_lote_p
and	a.nr_seq_saldo_caixa	= nr_seq_saldo_caixa_p
and	not exists (select	1
		from	movto_trans_financ x
		where	x.nr_seq_cheque_cp	= a.nr_sequencia);


BEGIN

select	b.cd_estabelecimento,
	a.dt_saldo,
	a.nr_seq_caixa,
	b.nr_seq_trans_fin_especie
into STRICT	cd_estabelecimento_w,
	dt_saldo_w,
	nr_seq_caixa_w,
	nr_seq_trans_fin_especie_w
from	caixa b,
	caixa_saldo_diario a
where	a.nr_sequencia	= nr_seq_saldo_caixa_p
and	b.nr_sequencia	= a.nr_seq_caixa;

select	C.NR_SEQ_TRANS_TROCO,
	c.NR_SEQ_CHEQUE_CR,
	c.NR_SEQ_ESPECIE_CR,
	c.NR_SEQ_CHEQUE_CP,
	c.NR_SEQ_ESPECIE_CP
into STRICT	NR_SEQ_TRANS_TROCO_W,
	NR_SEQ_CHEQUE_CR_w,
	NR_SEQ_ESPECIE_CR_w,
	NR_SEQ_CHEQUE_CP_w,
	NR_SEQ_ESPECIE_CP_w
from	parametro_tesouraria c
where	c.cd_estabelecimento	= cd_estabelecimento_w;

select	obter_saldo_movto_trans_financ(nr_seq_lote_p, nr_seq_caixa_w ,'E') -
	obter_saldo_movto_trans_financ(nr_seq_lote_p, nr_seq_caixa_w, 'S')
into STRICT	vl_saldo_w
;

if (vl_saldo_w > 0) then
	/* Gerar os recebimentos em cheque */

	open c01;
	loop
	fetch c01 into
		nr_seq_cheque_w,
		vl_cheque_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		insert into movto_trans_financ(nr_sequencia,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			dt_atualizacao,
			nm_usuario,
			nr_lote_contabil,
			ie_conciliacao,
			nr_seq_cheque,
			nr_seq_caixa,
			nr_seq_saldo_caixa,
			dt_referencia_saldo,
			nr_seq_lote)
		values (nextval('movto_trans_financ_seq'),
			clock_timestamp(),
			NR_SEQ_CHEQUE_CR_w,
			vl_cheque_w,
			clock_timestamp(),
			nm_usuario_p,
			0,
			'N',
			nr_seq_cheque_w,
			nr_seq_caixa_w,
			nr_seq_saldo_caixa_p,
			dt_saldo_w,
			nr_seq_lote_p);

	end loop;
	close c01;

	/* Gerar os recebimentos em espÃ©cie */

	if (vl_especie_p > 0) then

		insert	into movto_trans_financ(nr_sequencia,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			dt_atualizacao,
			nm_usuario,
			nr_lote_contabil,
			ie_conciliacao,
			nr_seq_caixa,
			nr_seq_saldo_caixa,
			dt_referencia_saldo,
			nr_seq_lote)
		values (nextval('movto_trans_financ_seq'),
			clock_timestamp(),
			coalesce(nr_seq_trans_fin_especie_w, NR_SEQ_ESPECIE_CR_w),
			vl_especie_p,
			clock_timestamp(),
			nm_usuario_p,
			0,
			'N',
			nr_seq_caixa_w,
			nr_seq_saldo_caixa_p,
			dt_saldo_w,
			nr_seq_lote_p);

	end if;

	/* Gerar o troco */

	select	coalesce(sum(obter_saldo_movto_trans_financ(nr_seq_lote_p, nr_seq_caixa_w,'D')),0)
	into STRICT	vl_saldo_lote_w
	;

	if (vl_saldo_lote_w > 0) then
		insert	into movto_trans_financ(nr_sequencia,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			dt_atualizacao,
			nm_usuario,
			nr_lote_contabil,
			ie_conciliacao,
			nr_seq_caixa,
			nr_seq_saldo_caixa,
			dt_referencia_saldo,
			nr_seq_lote)
		values (nextval('movto_trans_financ_seq'),
			clock_timestamp(),
			NR_SEQ_TRANS_TROCO_W,
			vl_saldo_lote_w,
			clock_timestamp(),
			nm_usuario_p,
			0,
			'N',
			nr_seq_caixa_w,
			nr_seq_saldo_caixa_p,
			dt_saldo_w,
			nr_seq_lote_p);
	end if;

elsif (vl_saldo_w < 0) then		/* Gerar Pagamentos */
	insert	into movto_trans_financ(nr_sequencia,
		dt_transacao,
		nr_seq_trans_financ,
		vl_transacao,
		dt_atualizacao,
		nm_usuario,
		nr_lote_contabil,
		ie_conciliacao,
		nr_seq_caixa,
		nr_seq_saldo_caixa,
		dt_referencia_saldo,
		nr_seq_lote)
	values (nextval('movto_trans_financ_seq'),
		clock_timestamp(),
		NR_SEQ_ESPECIE_CP_w,
		vl_especie_p,
		clock_timestamp(),
		nm_usuario_p,
		0,
		'N',
		nr_seq_caixa_w,
		nr_seq_saldo_caixa_p,
		dt_saldo_w,
		nr_seq_lote_p);

	open c02;
	loop
	fetch c02 into
		nr_sequencia_w,
		vl_cheque_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		insert	into movto_trans_financ(nr_sequencia,
			dt_transacao,
			nr_seq_trans_financ,
			vl_transacao,
			dt_atualizacao,
			nm_usuario,
			nr_lote_contabil,
			ie_conciliacao,
			nr_seq_caixa,
			nr_seq_saldo_caixa,
			dt_referencia_saldo,
			nr_seq_lote,
			nr_seq_cheque_cp)
		values (nextval('movto_trans_financ_seq'),
			clock_timestamp(),
			NR_SEQ_CHEQUE_CP_w,
			vl_cheque_w,
			clock_timestamp(),
			nm_usuario_p,
			0,
			'N',
			nr_seq_caixa_w,
			nr_seq_saldo_caixa_p,
			dt_saldo_w,
			nr_seq_lote_p,
			nr_sequencia_w);
	end loop;
	close c02;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_caixa_saldo (nr_seq_saldo_caixa_p bigint, nr_seq_lote_p bigint, vl_especie_p bigint, nm_usuario_p text) FROM PUBLIC;

