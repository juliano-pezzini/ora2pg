-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_caboplanina_html ( nr_seq_paciente_p bigint, qt_peso_p bigint, qt_altura_p bigint, qt_porcent_reducao_p bigint, qt_creatinina_p bigint, ie_unid_med_p bigint, auc_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, qt_clearance_p INOUT bigint, qt_carboplatina_p INOUT bigint) AS $body$
DECLARE



cd_pessoa_fisica_w	        varchar(10);
dt_nascimento_w             timestamp;
qt_idade_w                  smallint;
ie_sexo_w                   varchar(1);
nr_seq_atendimento_w        bigint;
qt_superf_corporal_w        double precision;
ie_calcular_carboplanina_w  varchar(10);
pr_reducao_w                double precision;
ie_formula_sc_w             varchar(10);

c01 CURSOR FOR
SELECT	nr_seq_atendimento,
	pr_reducao
from	paciente_atendimento
where	nr_seq_paciente = nr_seq_paciente_p
and	coalesce(nr_prescricao::text, '') = '';

c02 CURSOR FOR

SELECT	nr_seq_atendimento
from	paciente_atendimento
where	nr_seq_paciente = nr_seq_paciente_p
and	coalesce(nr_prescricao::text, '') = ''
and	(qt_peso IS NOT NULL AND qt_peso::text <> '');



C03 CURSOR FOR
	SELECT	nr_seq_atendimento
	from	paciente_atendimento
	where	nr_seq_paciente = nr_seq_paciente_p
	and	coalesce(nr_prescricao::text, '') = '';



BEGIN
ie_calcular_carboplanina_w	:= Obter_Valor_Param_Usuario(281, 485, Obter_perfil_Ativo, Wheb_Usuario_Pck.Get_nm_Usuario, wheb_usuario_pck.get_cd_estabelecimento);
qt_carboplatina_p	:= 0;

select	cd_pessoa_fisica,
        pr_reducao,
        ie_formula_sup_corporea
into STRICT	cd_pessoa_fisica_w,
        pr_reducao_w,
        ie_formula_sc_w
from	paciente_setor
where	nr_seq_paciente	= nr_seq_paciente_p;

select	dt_nascimento,
        ie_sexo
into STRICT	dt_nascimento_w,
        ie_sexo_w
from	pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

select	(obter_idade(dt_nascimento_w,clock_timestamp(),'A'))::numeric
into STRICT	qt_idade_w
;

if (qt_peso_p > 0) and (qt_creatinina_p > 0) then
	begin
	qt_clearance_p	:= dividir(((140 - qt_idade_w) * qt_peso_p) , (7.2 * qt_creatinina_p));

	if (ie_unid_med_p = 1) then
		qt_clearance_p	:= qt_clearance_p * 0.10;
	end if;

	if (ie_sexo_w = 'F') then
		qt_clearance_p	:= qt_clearance_p * 0.85;
	end if;

	qt_carboplatina_p	:= (auc_p * (qt_clearance_p + 25));
	end;
end if;

if (qt_carboplatina_p > 0) and (ie_calcular_carboplanina_w	<> 'N') then
	begin
	OPEN C01;
	LOOP
	FETCH C01 into
		nr_seq_atendimento_w,
		pr_reducao_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

		update	paciente_atend_medic a
		set	a.qt_dose_prescricao	= qt_carboplatina_p,
			a.cd_unid_med_prescr	= (	SELECT b.cd_unidade_med_princ
						  	from unidade_medida b
							where a.cd_unid_med_dose = b.cd_unidade_medida)
		where a.nr_seq_atendimento = nr_seq_atendimento_w
		and a.cd_unid_med_dose = 'mgCar';
		if (pr_reducao_w IS NOT NULL AND pr_reducao_w::text <> '') and (pr_reducao_w	> 0) then
			update 	paciente_atend_medic a
			set	 qt_dose_prescricao = (qt_dose_prescricao - ((pr_reducao_w * coalesce(qt_dose_prescricao,0)) / 100))
			where a.nr_seq_atendimento = nr_seq_atendimento_w
			and	coalesce(ie_aplica_reducao,'S') = 'S'
			and a.cd_unid_med_dose = 'mgCar';
		end if;

	END LOOP;
	CLOSE C01;
	end;



end if;

OPEN C02;
LOOP
FETCH C02 into
	nr_seq_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

	if (qt_peso_p > 0) then
        qt_superf_corporal_w := round(obter_superficie_corp_red_ped(qt_peso_p, qt_altura_p,qt_porcent_reducao_p, cd_pessoa_fisica_w, obter_usuario_ativo, ie_formula_sc_w),obter_numero_casas_sc);
		update	paciente_atendimento
		set	qt_superf_corporal	= qt_superf_corporal_w
		where	nr_seq_atendimento	= nr_seq_atendimento_w
		and nr_ciclo between nr_ciclo_inicial_p and nr_ciclo_final_p;
		CALL Atualizar_Dose_Oncologia(nr_seq_atendimento_w);
	end if;

END LOOP;
CLOSE C02;



open C03;
loop
fetch C03 into
	nr_seq_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	CALL ARREDONDAR_DOSE_ONC_CICLO(nr_seq_atendimento_w);
	end;
end loop;
close C03;


commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_caboplanina_html ( nr_seq_paciente_p bigint, qt_peso_p bigint, qt_altura_p bigint, qt_porcent_reducao_p bigint, qt_creatinina_p bigint, ie_unid_med_p bigint, auc_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, qt_clearance_p INOUT bigint, qt_carboplatina_p INOUT bigint) FROM PUBLIC;

