-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_retorno_tiss (nr_seq_retorno_p bigint, nr_seq_lote_p bigint, cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_interno_conta_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_protocolo_w		bigint;
nr_seq_protocolo_retorno_w	bigint;
nr_conta_convenio_w		varchar(255);
qt_protocolos_w			bigint;
cd_guia_operadora_w		varchar(255);
cd_guia_prestador_w		varchar(255);
nr_guia_w			varchar(255);
nr_seq_conta_proc_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_processado_w			convenio_retorno_movto.qt_cobrada%type;
vl_processado_w			double precision;
vl_liberado_w			double precision;
qt_glosa_proc_w			integer;
cd_glosa_w			varchar(255);
ds_item_retorno_w		varchar(255);
vl_glosa_w			double precision;
vl_glosa_total_w		double precision;
cd_glosa_tasy_w			integer;
cd_convenio_w			integer;
cd_estabelecimento_w		bigint;
ie_protocolo_ret_w		varchar(255);
cd_guia_oper_original_w		varchar(255);
cd_guia_prest_original_w	varchar(255);
vl_processado_dem_w		double precision;
vl_protocolo_w			double precision;
nr_seq_lote_w			bigint;
ie_gerar_todos_W			varchar(255);
ie_somente_recebido_w		varchar(1);
ie_qt_executada_w			varchar(1);
nr_seq_item_conta_w		bigint;
ds_item_w			varchar(255);
ie_tipo_tabela_w		varchar(10);
dt_atendimento_w		timestamp;
cd_setor_atendimento_w		integer;
ie_valor_pago_ret_w		varchar(10);
cd_procedimento_xml_w		varchar(20);
ie_guia_partic_w		varchar(1);
ds_versao_w			varchar(20);
vl_processado_guia_w		double precision;
vl_liberado_guia_w		double precision;
vl_glosado_guia_w		double precision;
vl_processado_proc_w		double precision;
vl_liberado_proc_w		double precision;
vl_glosado_proc_w		double precision;
vl_informado_proc_w		double precision;
qt_glosa_guia_w			bigint;
ie_guia_retorno_w		tiss_regra_ret_guia.ie_guia_prestador%type;
ie_funcao_medico_w		convenio_retorno_movto.ie_funcao_medico%type;
ie_grau_partic_tiss_w		tiss_dem_conta_proc.nr_grau_participacao_tiss%type;
dt_realizacao_w			timestamp;
qt_paga_w			convenio_retorno_movto.qt_paga%type;
cd_senha_w			tiss_dem_conta.cd_senha%type;
ie_dt_conta_w			tiss_regra_ret_guia.ie_data_realizacao%type;
dt_inicio_faturamento_w		tiss_dem_conta.dt_inicio_faturamento%type;	
ie_tipo_prot_w			bigint;
ds_lista_item_w			varchar(32767) := '';
nr_sequencia_item_w 		tiss_dem_conta_proc.nr_sequencia_item%type;
vl_informado_guia_w		tiss_dem_conta.vl_informado%type;
vl_informado_w			tiss_dem_conta.vl_informado%type;

c04 CURSOR FOR
SELECT	b.nr_sequencia
from	tiss_cabecalho e,
	tiss_demonstrativo d,
	tiss_dem_fatura c,
	tiss_dem_lote b
where	b.nr_seq_fatura		= c.nr_sequencia
and	c.nr_seq_demonstrativo	= d.nr_sequencia
and	d.nr_seq_cabecalho	= e.nr_sequencia
and	e.nr_Seq_retorno	= nr_seq_retorno_p
and	((coalesce(ie_gerar_todos_w,'S') = 'S') or (b.nr_sequencia = nr_seq_lote_p));

c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_guia_operadora,
	nr_guia_prestador,
	cd_senha
from	tiss_dem_conta
where	nr_seq_lote		= nr_seq_lote_w;

c02 CURSOR FOR
SELECT	nr_sequencia,
	cd_procedimento,
	ie_origem_proced,
	qt_procedimento,
	vl_processado,
	vl_liberado,
	ie_tipo_tabela,
	ds_item,
	cd_procedimento_xml,
	vl_informado,
	dt_realizacao,
	nr_grau_participacao_tiss,
  nr_sequencia_item
from	tiss_dem_conta_proc
where	nr_seq_conta		= nr_seq_conta_w;

c03 CURSOR FOR
SELECT	CASE WHEN ie_somente_recebido_w='S' THEN 0  ELSE coalesce(vl_glosa,0) END ,
	cd_glosa
from	tiss_dem_glosa
where	nr_seq_conta_proc	= nr_seq_conta_proc_w;

/*Cursor para buscar as guais da versao 3 que sao pagas integrais.
Onde no arquivo de retorno, vem somente a guia e nao os itens.*/
c05 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_guia_operadora,
	a.nr_guia_prestador,
	a.vl_processado,
	a.vl_liberado,
	a.vl_glosado
from	tiss_dem_conta a
where	a.nr_seq_lote	= nr_seq_lote_w
and (obter_se_projeto_versao(0,13,ds_versao_w,0) = 'S')
and	not exists (SELECT	1
	from	tiss_dem_conta_proc x
	where	x.nr_seq_conta = a.nr_sequencia);

/*Cursor para buscar as guais da versao 3 onde alguns convenios somente retornam os itens que forma glosados.
Entao se o item nao esta na guia, mas a guia esta com o valor liberado, sera considerado como pago.*/
	
c06 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_guia_operadora,
	a.nr_guia_prestador,
	a.vl_processado,
	a.vl_liberado,
	a.vl_glosado,
	a.vl_informado
from	tiss_dem_conta a
where	a.nr_seq_lote	= nr_seq_lote_w
and (obter_se_projeto_versao(0,13,ds_versao_w,0) = 'S')
and	exists (SELECT	1
	from	tiss_dem_conta_proc x
	where	x.nr_seq_conta = a.nr_sequencia)
and	a.vl_liberado > (select	sum(y.vl_liberado)
			from	tiss_dem_conta_proc y
			where	y.nr_seq_conta = a.nr_sequencia)
and	(coalesce(a.vl_liberado,0)	<> coalesce((	select	sum(x.vl_informado)
						from	tiss_dem_conta_proc x
						where	x.nr_seq_conta = a.nr_sequencia),0));

  rec RECORD;

BEGIN

select 	cd_convenio,
	cd_estabelecimento,
	nr_seq_protocolo_w
into STRICT	cd_convenio_w,
	cd_estabelecimento_w,
	nr_seq_protocolo_w
from 	convenio_retorno
where 	nr_sequencia = nr_seq_retorno_p;

select	max(a.ds_versao)
into STRICT	ds_versao_w
from	tiss_cabecalho a
where	a.nr_seq_retorno = nr_seq_retorno_p;

select	max(ie_tipo_protocolo)
into STRICT	ie_tipo_prot_w
from	protocolo_convenio
where	nr_seq_protocolo = nr_seq_protocolo_w;

ie_gerar_todos_w := obter_param_usuario(27, 098, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_todos_w);
ie_somente_recebido_w := obter_param_usuario(27, 120, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_somente_recebido_w);
ie_qt_executada_w := obter_param_usuario(27, 168, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_qt_executada_w);

select	coalesce(max(ie_protocolo_ret),0)
into STRICT	ie_protocolo_ret_w
from	tiss_parametros_convenio
where	cd_convenio 		= cd_convenio_p
and	cd_estabelecimento	= cd_estabelecimento_w;

select	max(ie_valor_pago_ret)
into STRICT	ie_valor_pago_ret_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_p
and	cd_estabelecimento	= cd_estabelecimento_w;


if (coalesce(nr_seq_protocolo_w,0) = 0) and (ie_protocolo_ret_w = 1) then

	open c04;
	loop
	fetch c04 into
		nr_seq_lote_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */

		select	coalesce(b.nr_lote,'')
		into STRICT	nr_conta_convenio_w
		from	convenio_retorno f,
			tiss_cabecalho e,
			tiss_demonstrativo d,
			tiss_dem_fatura c,
			tiss_dem_lote b
		where	b.nr_seq_fatura		= c.nr_sequencia
		and	c.nr_seq_demonstrativo	= d.nr_sequencia
		and	d.nr_seq_cabecalho	= e.nr_sequencia
		and	e.nr_seq_retorno	= f.nr_sequencia
		and	f.nr_sequencia		= nr_seq_retorno_p
		and	b.nr_sequencia 		= nr_seq_lote_w;

		if (coalesce(nr_conta_convenio_w,'') <> '') then

			select	count(distinct nr_seq_protocolo)
			into STRICT	qt_protocolos_w
			from	conta_paciente
			where	nr_conta_convenio = nr_conta_convenio_w;

			if (qt_protocolos_w = 1) then

				select	max(nr_seq_protocolo)
				into STRICT	nr_seq_protocolo_retorno_w
				from	conta_paciente
				where	nr_conta_convenio = nr_conta_convenio_w;

				update	convenio_retorno
				set	nr_seq_protocolo	= nr_seq_protocolo_retorno_w
				where	nr_sequencia		= nr_seq_retorno_p;

			elsif (qt_protocolos_w > 1) then

				CALL wheb_mensagem_pck.exibir_mensagem_abort(186957);
				--r.aise_application_error(-20011, 'No parametro Origem prot no retorno esta selecionado Numero do lote do XML. Porem, existe mais de um protocolo com o mesmo numero de lote.');
			end if;
		end if;
	end loop;
	close c04;
end if;

open c04;
loop
fetch c04 into
	nr_seq_lote_w;
EXIT WHEN NOT FOUND; /* apply on c04 */

	ds_lista_item_w := '';
	open c01;
	loop
	fetch c01 into
		nr_seq_conta_w,
		cd_guia_operadora_w,
		cd_guia_prestador_w,
		cd_senha_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	count(*)
		into STRICT	qt_glosa_guia_w
		from	tiss_dem_glosa
		where	nr_seq_conta	= nr_seq_conta_w
		and		vl_glosa 	> 0;

		cd_guia_oper_original_w		:= cd_guia_operadora_w;
		cd_guia_prest_original_w	:= cd_guia_prestador_w;		

		/*Por questao de performance, retirei esta function do c02 e incluir apenas no c01, pois  a guia e por conta e nao por item*/

		SELECT * FROM TISS_OBTER_GUIA_RETORNO(	nr_seq_conta_w, cd_convenio_p, cd_estabelecimento_w, cd_guia_operadora_w, cd_guia_prestador_w, nr_interno_conta_w, ie_guia_retorno_w, ie_dt_conta_w) INTO STRICT cd_guia_operadora_w, cd_guia_prestador_w, nr_interno_conta_w, ie_guia_retorno_w, ie_dt_conta_w;

		nr_guia_w	:= coalesce(cd_guia_operadora_w, cd_guia_prestador_w);

		if (coalesce(nr_interno_conta_w::text, '') = '') and (coalesce(ie_guia_retorno_w,'X') <> 'GPO') and (coalesce(ie_guia_retorno_w,'X') <> 'ICS') then

			select	max(a.nr_interno_conta)
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia c,
				conta_paciente a,
				tiss_dem_lote b
			where	a.nr_conta_convenio	= somente_numero(b.nr_lote)
			and	a.nr_interno_conta	= c.nr_interno_conta
			and	c.cd_autorizacao	= cd_guia_oper_original_w
			and	a.ie_status_acerto	= 2
			and	b.nr_sequencia		= nr_seq_lote_w;
		end if;

		if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') and (coalesce(ie_guia_retorno_w,'X') = 'ICS') then

			nr_guia_w := cd_senha_w;
		end if;

		if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then		
			update	tiss_dem_conta
			set	nr_interno_conta	= nr_interno_conta_w
			where	nr_sequencia		= nr_seq_conta_w;		
		end if;

		open c02;
		loop
		fetch c02 into
			nr_seq_conta_proc_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_processado_w,
			vl_processado_w,
			vl_liberado_w,
			ie_tipo_tabela_w,
			ds_item_w,
			cd_procedimento_xml_w,
			vl_informado_proc_w,
			dt_realizacao_w,
			ie_grau_partic_tiss_w,
      nr_sequencia_item_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			if (obter_se_projeto_versao(0,13,ds_versao_w,0) = 'S') then-- Se a versao for 3, entao o valor processado (cobrado) sera sempre o valor informado, pois ele e obrigatorio no arquivo. OS 891886
					vl_processado_w	:= vl_informado_proc_w;
			end if;

			cd_glosa_w		:= null;
			cd_glosa_tasy_w		:= null;
			vl_glosa_total_w 	:= 0;
			vl_glosa_w		:= 0;	

			--Se tem glosa para a guia, entao este motivo de glosa sera tambem para todos os itens.
			if (qt_glosa_guia_w > 0) then

				select	max(a.cd_motivo_glosa),
					max(a.cd_motivo_tiss)
				into STRICT	cd_glosa_tasy_w,
					cd_glosa_w
				from	tiss_motivo_glosa a,
					tiss_dem_glosa b
				where	b.nr_seq_conta		= nr_seq_conta_w
				and	a.cd_motivo_tiss 	= b.cd_glosa
				and	b.vl_glosa		> 0
				and	coalesce(b.nr_seq_conta_proc::text, '') = ''
				and	a.cd_convenio 		= cd_convenio_w;

				if (coalesce(cd_glosa_tasy_w::text, '') = '') then
					select	max(a.cd_motivo_glosa),
						max(a.cd_motivo_tiss)
					into STRICT	cd_glosa_tasy_w,
						cd_glosa_w
					from	tiss_motivo_glosa a,
						tiss_dem_glosa b
					where	b.nr_seq_conta		= nr_seq_conta_w
					and	a.cd_motivo_tiss 	= b.cd_glosa
					and	b.vl_glosa		> 0
					and	coalesce(b.nr_seq_conta_proc::text, '') = ''
					and	coalesce(a.cd_convenio::text, '') = '';
				end if;

				--Se a glosa e da guia e o item tem valor informado, porem valor liberado 0, entao ele foi todo glosa, logo o valor de glosa recebe o valor informado.
				if (coalesce(vl_informado_proc_w,0) > 0) and (coalesce(vl_liberado_w,0) = 0) then
					vl_glosa_total_w	:= coalesce(vl_informado_proc_w,0);
				end if;

			else
				open c03;
				loop
				fetch c03 into
					vl_glosa_w,
					cd_glosa_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */

					vl_glosa_total_w	:= vl_glosa_total_w + vl_glosa_w;

					select	max(cd_motivo_glosa)
					into STRICT	cd_glosa_tasy_w
					from	tiss_motivo_glosa
					where	cd_motivo_tiss = cd_glosa_w
					and	cd_convenio = cd_convenio_w;					

					if (coalesce(cd_glosa_tasy_w::text, '') = '') then
						select	max(cd_motivo_glosa)
						into STRICT	cd_glosa_tasy_w
						from	tiss_motivo_glosa
						where	cd_motivo_tiss = cd_glosa_w
						and	coalesce(cd_convenio::text, '') = '';
					end if;

				end loop;
				close c03;
			end if;

			--Ajuste feito para a OS 1271652 em que no arquivo estava vindo a guia como se setive-se sendo glosa total, porem nao era glosa total apenas alguns itens..
			if (vl_glosa_total_w = 0) then
				open c03;
				loop
				fetch c03 into
					vl_glosa_w,
					cd_glosa_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */

					vl_glosa_total_w := vl_glosa_total_w + vl_glosa_w;

					select	max(cd_motivo_glosa)
					into STRICT	cd_glosa_tasy_w
					from	tiss_motivo_glosa
					where	cd_motivo_tiss = cd_glosa_w
					and	cd_convenio = cd_convenio_w;					

					if (coalesce(cd_glosa_tasy_w::text, '') = '') then
						select	max(cd_motivo_glosa)
						into STRICT	cd_glosa_tasy_w
						from	tiss_motivo_glosa
						where	cd_motivo_tiss = cd_glosa_w
						and	coalesce(cd_convenio::text, '') = '';
					end if;

				end loop;
				close c03;
			end if;

			nr_seq_item_conta_w := null;
			/*lhalves OS 532673 em 11/01/2013
			Para alguns convenios, o valor processado corresponde ao valor que eles processaram para o pagamento, entao o valor processado sempre sera igual ao valor liberado, mesmo o item tendo valor de glosa.
			Com o tratamento abaixo, o valor processado (cobrado), sera a soma do liberado com o glosado
			*/
			if (ie_valor_pago_ret_w = 'S') and (coalesce(vl_processado_w,0) = coalesce(vl_liberado_w,0)) and (coalesce(vl_glosa_total_w,0) > 0) then

				vl_processado_w := coalesce(vl_liberado_w,0) + coalesce(vl_glosa_total_w,0);

			end if;
			/*FIm lhalves OS 532673 em 11/01/2013*/
				


			if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (coalesce(nr_seq_item_conta_w::text, '') = '') and (coalesce(cd_procedimento_xml_w,'0') <> '0') then /*Primeiro verifica se encontrou o item conforme o codigo do item no XML. CD_PROCEDIMENTO_XML_W */


				-- primeiro tenta achar o item da conta pelo valor do participante / pode achar mais de um item com o mesmo sequencial
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_item_conta_w
				from	procedimento_paciente a, procedimento_participante b
				where	a.nr_sequencia = b.nr_sequencia
				and	coalesce(somente_numero(cd_procedimento_convenio),cd_procedimento) = somente_numero(cd_procedimento_xml_w)
				and	coalesce(a.nr_doc_convenio,nr_guia_w)= nr_guia_w
				and	a.nr_interno_conta		= nr_interno_conta_w
				and	coalesce(b.vl_conta, b.vl_participante) = vl_informado_proc_w --procurar pelo valor do participante
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
				and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '');

				if (coalesce(nr_seq_item_conta_w::text, '') = '') then

					-- segundo tenta achar o item da conta pelo valor do medico (com participantes) / pode achar mais de um item com o mesmo sequencial
					select	max(a.nr_sequencia)
					into STRICT	nr_seq_item_conta_w
					from	procedimento_paciente a
					where	coalesce(somente_numero(cd_procedimento_convenio),cd_procedimento) = somente_numero(cd_procedimento_xml_w)
					and	coalesce(a.nr_doc_convenio,nr_guia_w)= nr_guia_w
					and	a.nr_interno_conta		= nr_interno_conta_w
					and	a.vl_medico			= vl_informado_proc_w --procurar pelo honorario
					and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '')
					and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
					and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
					and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
					and	coalesce(obter_participantes_proc(a.nr_sequencia),'X') <> 'X'; -- somente se existir participantes
					if (coalesce(nr_seq_item_conta_w::text, '') = '') then
						-- terceiro tenta achar o item da conta pelo valor do medico (sem participantes) / NaO pode achar mais de um item com o mesmo sequencial
						for rec in (	
							SELECT	a.nr_sequencia
							from	procedimento_paciente a
							where	coalesce(somente_numero(cd_procedimento_convenio),cd_procedimento) = somente_numero(cd_procedimento_xml_w)
							and	coalesce(a.nr_doc_convenio,nr_guia_w)= nr_guia_w
							and	a.nr_interno_conta		= nr_interno_conta_w
							and	a.vl_medico			= vl_informado_proc_w --procurar pelo honorario
							and	(a.cd_medico_executor IS NOT NULL AND a.cd_medico_executor::text <> '')
							and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
							and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
							and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
							and	coalesce(obter_participantes_proc(a.nr_sequencia),'X') = 'X' --somente sem participantes
							order by 1
						)
						loop	
							if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
								nr_seq_item_conta_w := rec.nr_sequencia;
							end if;
						end loop rec;

						if (coalesce(nr_seq_item_conta_w::text, '') = '') then

							-- quarto tenta achar o item da conta pelo valor do procedimento / NaO pode achar mais de um item com o mesmo sequencial
							for rec in (	
								SELECT	a.nr_sequencia
								from	procedimento_paciente a
								where	coalesce(somente_numero(cd_procedimento_convenio),cd_procedimento) = somente_numero(cd_procedimento_xml_w)
								and	coalesce(a.nr_doc_convenio,nr_guia_w)= nr_guia_w
								and	a.nr_interno_conta		= nr_interno_conta_w
								and	a.vl_procedimento		= vl_informado_proc_w
								and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
								and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
								and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
								order by 1
							)
							loop	
								if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
									nr_seq_item_conta_w := rec.nr_sequencia;
								end if;
							end loop rec;

							if (coalesce(nr_seq_item_conta_w::text, '') = '') then

								-- quinto tenta achar o item da conta somente pelo codigo (normal ou conv) / NaO pode achar mais de um item com o mesmo sequencial
								for rec in (
									SELECT	a.nr_sequencia
									from	procedimento_paciente a
									where	coalesce(somente_numero(cd_procedimento_convenio),cd_procedimento) = somente_numero(cd_procedimento_xml_w)
									and	coalesce(a.nr_doc_convenio,nr_guia_w)= nr_guia_w
									and	a.nr_interno_conta		= nr_interno_conta_w
									and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
									and	coalesce(a.vl_procedimento,0)	<> 0
									and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
									and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
									order by 1
								)
								loop	
									if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
										nr_seq_item_conta_w := rec.nr_sequencia;
									end if;
								end loop rec;

								if (coalesce(nr_seq_item_conta_w::text, '') = '') then

									-- sexto tenta achar o item da conta somente pelo codigo normal / NaO pode achar mais de um item com o mesmo sequencial
									for rec in (
										SELECT	a.nr_sequencia
										from	procedimento_paciente a
										where	a.cd_procedimento		= somente_numero(cd_procedimento_xml_w)
										and	a.nr_interno_conta		= nr_interno_conta_w
										and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
										and	coalesce(a.vl_procedimento,0)	<> 0
										and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
										and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
										order by 1
									)
									loop	
										if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
											nr_seq_item_conta_w := rec.nr_sequencia;
										end if;
									end loop rec;

									if (coalesce(nr_seq_item_conta_w::text, '') = '') then

										-- setimo tenta achar o item da conta somente pelo codigo TUSS / NaO pode achar mais de um item com o mesmo sequencial
										for rec in (
											SELECT	a.nr_sequencia
											from	procedimento_paciente a
											where	a.cd_procedimento_tuss		= somente_numero(cd_procedimento_xml_w)
											and	a.nr_interno_conta		= nr_interno_conta_w
											and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
											and	coalesce(a.vl_procedimento,0)	<> 0
											and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
											and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
											order by 1
										)
										loop	
											if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
												nr_seq_item_conta_w := rec.nr_sequencia;
											end if;
										end loop rec;									

										--buscando agora os materiais
										if (coalesce(nr_seq_item_conta_w::text, '') = '') then
											select	max(a.nr_sequencia)
											into STRICT	nr_seq_item_conta_w
											from	material_atend_paciente a
											where	a.cd_material_tiss			= cd_procedimento_xml_w
											and	coalesce(a.nr_doc_convenio,nr_guia_w) 	= nr_guia_w
											and	a.nr_interno_conta			= nr_interno_conta_w
											and	((ie_dt_conta_w 			= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 				= 'P' and trunc(a.dt_atendimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 				= 'N'))
											and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

											if (coalesce(nr_seq_item_conta_w::text, '') = '') then
												select	max(a.nr_sequencia)
												into STRICT	nr_seq_item_conta_w
												from	material_atend_paciente a
												where	coalesce(somente_numero(a.cd_material_convenio),a.cd_material) = somente_numero(cd_procedimento_xml_w)
												and	((ie_dt_conta_w 			= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 				= 'P' and trunc(a.dt_atendimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 				= 'N'))
												and	coalesce(a.nr_doc_convenio,nr_guia_w) 	= nr_guia_w
												and	a.nr_interno_conta			= nr_interno_conta_w
												and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

												if (coalesce(nr_seq_item_conta_w::text, '') = '') then
													select	max(a.nr_sequencia)
													into STRICT	nr_seq_item_conta_w
													from	material_atend_paciente a
													where	a.cd_material			= somente_numero(cd_procedimento_xml_w)
													and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_atendimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
													and	a.nr_interno_conta		= nr_interno_conta_w
													and	coalesce(a.cd_motivo_exc_conta::text, '') = '';
												end if;
											end if;
										end if;
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;

			if (coalesce(nr_seq_item_conta_w::text, '') = '') then /*Se nao encontrou o item, busca conforme o item do Tasy CD_PROCEDIMENTO_W*/


				-- primeiro tenta achar o item da conta pelo valor do procedimento / NaO pode achar mais de um item com o mesmo sequencial
				for rec in (
					SELECT	a.nr_sequencia
					from	procedimento_paciente a
					where	coalesce(somente_numero(cd_procedimento_convenio),cd_procedimento) = somente_numero(cd_procedimento_w)
					and	coalesce(a.nr_doc_convenio,nr_guia_w) = nr_guia_w
					and	a.nr_interno_conta		= nr_interno_conta_w
					and	a.vl_procedimento		= vl_informado_proc_w
					and	trunc(a.dt_conta)		= trunc(dt_realizacao_w)
					and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
					and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
					and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
					order by 1
				)
				loop	
					if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
						nr_seq_item_conta_w := rec.nr_sequencia;
					end if;
				end loop rec;					

				if (coalesce(nr_seq_item_conta_w::text, '') = '') then

					-- segundo tenta achar o item da conta somente pelo codigo (normal ou conv) / NaO pode achar mais de um item com o mesmo sequencial
					for rec in (
						SELECT	a.nr_sequencia
						from	procedimento_paciente a
						where	coalesce(somente_numero(cd_procedimento_convenio),cd_procedimento) = somente_numero(cd_procedimento_w)
						and	coalesce(a.nr_doc_convenio,nr_guia_w)= nr_guia_w
						and	a.nr_interno_conta		= nr_interno_conta_w
						and	trunc(a.dt_conta)		= trunc(dt_realizacao_w)
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	coalesce(a.vl_procedimento,0)	<> 0
						and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
						and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
						order by 1
					)
					loop	
						if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
							nr_seq_item_conta_w := rec.nr_sequencia;
						end if;
					end loop rec;					

					if (coalesce(nr_seq_item_conta_w::text, '') = '') then

						-- terceiro tenta achar o item da conta somente pelo codigo normal / NaO pode achar mais de um item com o mesmo sequencial
						for rec in (
							SELECT	a.nr_sequencia
							from	procedimento_paciente a
							where	a.cd_procedimento		= somente_numero(cd_procedimento_w)
							and	trunc(a.dt_conta)		= trunc(dt_realizacao_w)
							and	a.nr_interno_conta		= nr_interno_conta_w
							and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
							and	coalesce(a.vl_procedimento,0)	<> 0
							and	((ie_dt_conta_w 	= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 		= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 		= 'N'))
							and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
							order by 1
						)
						loop	
							if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
								nr_seq_item_conta_w := rec.nr_sequencia;
							end if;
						end loop rec;					

						if (coalesce(nr_seq_item_conta_w::text, '') = '') then

							-- quarto tenta achar o item da conta somente pelo codigo TUSS / NaO pode achar mais de um item com o mesmo sequencial							
							for rec in (
								SELECT	a.nr_sequencia
								from	procedimento_paciente a
								where	a.cd_procedimento_tuss		= somente_numero(cd_procedimento_w)
								and	a.nr_interno_conta		= nr_interno_conta_w
								and	trunc(a.dt_conta)		= trunc(dt_realizacao_w)
								and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
								and	coalesce(a.vl_procedimento,0)	<> 0
								and	((ie_dt_conta_w 		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'P' and trunc(a.dt_procedimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 			= 'N'))
								and (TISS_OBTER_CODIGO_TABELA(nr_seq_tiss_tabela) = ie_tipo_tabela_w or coalesce(ie_tipo_tabela_w::text, '') = '')
								order by 1
							)
							loop	
								if (coalesce(position(rec.nr_sequencia ||',' in substr(ds_lista_item_w,1,32767)),0) = 0) and (coalesce(nr_seq_item_conta_w::text, '') = '') then
									nr_seq_item_conta_w := rec.nr_sequencia;
								end if;
							end loop rec;		

							-- buscando agora os materiais
							if (coalesce(nr_seq_item_conta_w::text, '') = '') then
								select	max(a.nr_sequencia)
								into STRICT	nr_seq_item_conta_w
								from	material_atend_paciente a
								where	coalesce(somente_numero(a.cd_material_convenio),a.cd_material) = somente_numero(cd_procedimento_w)
								and	coalesce(a.nr_doc_convenio,nr_guia_w) = nr_guia_w
								and	a.nr_interno_conta	= nr_interno_conta_w
								and	trunc(a.dt_conta)		 = trunc(dt_realizacao_w)
								and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
								and	((ie_dt_conta_w	= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 	= 'P' and trunc(a.dt_atendimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 	= 'N'));

								if (coalesce(nr_seq_item_conta_w::text, '') = '') then
									select	max(a.nr_sequencia)
									into STRICT	nr_seq_item_conta_w
									from	material_atend_paciente a
									where	a.cd_material	= somente_numero(cd_procedimento_w)
									and	a.nr_interno_conta	= nr_interno_conta_w
									and	trunc(a.dt_conta)		 = trunc(dt_realizacao_w)
									and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
									and	((ie_dt_conta_w		= 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 		= 'P' and trunc(a.dt_atendimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 		= 'N'));

									if (coalesce(nr_seq_item_conta_w::text, '') = '') then
										select	max(a.nr_sequencia)
										into STRICT	nr_seq_item_conta_w
										from	material_atend_paciente a
										where	somente_numero(a.cd_material_tiss)		= somente_numero(cd_procedimento_w)
										and	coalesce(a.nr_doc_convenio,nr_guia_w) = nr_guia_w
										and	a.nr_interno_conta	= nr_interno_conta_w
										and	trunc(a.dt_conta)		 = trunc(dt_realizacao_w)
										and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
										and	((ie_dt_conta_w = 'C' and trunc(a.dt_conta) = trunc(dt_realizacao_w)) or (ie_dt_conta_w	= 'P' and trunc(a.dt_atendimento) = trunc(dt_realizacao_w)) or (ie_dt_conta_w 	= 'N'));
									end if;
								end if;
							end if;
						end if;
					end if;
				end if;
			end if;

			dt_atendimento_w	:= null;
			cd_setor_atendimento_w 	:= null;
			/*lhalves OS 352611 em 05/10/2011*/

			if (coalesce(nr_seq_item_conta_w,0) > 0) and (coalesce(nr_interno_conta_w,0) > 0) then

				select	max(x.dt_atendimento),
					max(x.cd_setor_atendimento)
				into STRICT	dt_atendimento_w,
					cd_setor_atendimento_w
				from (SELECT	max(a.dt_conta) dt_atendimento,
						max(a.cd_setor_atendimento) cd_setor_atendimento
					from	procedimento_paciente a
					where	a.nr_sequencia		= nr_seq_item_conta_w
					and	a.nr_interno_conta	= nr_interno_conta_w
					
union

					SELECT	max(a.dt_atendimento),
						max(a.cd_setor_atendimento) cd_setor_atendimento
					from	material_atend_paciente	a
					where	a.nr_sequencia		= nr_seq_item_conta_w
					and	a.nr_interno_conta	= nr_interno_conta_w) x;

			end if;
			/*FIM lhalves OS 352611 em 05/10/2011*/



			/*INiCIO - lhalves OS 374022 em 18/11/2011 - Se encontrou item na conta, busca a descricao e codigo conforme o item da conta.*/

			if (coalesce(nr_seq_item_conta_w::text, '') = '') then

				if (coalesce(nr_interno_conta_w::text, '') = '') and (ie_guia_retorno_w <> 'GPO') then
					select	max(a.nr_interno_conta)
					into STRICT	nr_interno_conta_w
					from	conta_paciente_guia b,
						conta_paciente a
					where	a.nr_interno_conta	= b.nr_interno_conta
					and	a.ie_status_acerto	= 2
					and	b.cd_autorizacao	= nr_guia_w;

					if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then

						--Verifica se a guia e do participante, onde o valor da guia e zerado.
						begin
						select	'S'
						into STRICT	ie_guia_partic_w
						from	conta_paciente_guia
						where	nr_interno_conta	= nr_interno_conta_w
						and	cd_autorizacao		= nr_guia_w
						and	vl_participante		> 0
						and	vl_guia			= 0  LIMIT 1;
						exception
						when others then
							ie_guia_partic_w	:= 'N';
						end;

						--Se e de participante, entao busca a guia do procedimento deste participante,pois o valor estara na conta nesta guia.
						if (ie_guia_partic_w = 'S') then
							select	max(cd_autorizacao)
							into STRICT	nr_guia_w
							from	conta_paciente_guia a
							where	a.nr_interno_conta	= nr_interno_conta_w
							and	a.cd_autorizacao	<> nr_guia_w
							and	a.vl_participante	= 0
							and	a.vl_guia		> 0
							and	exists (SELECT	1
								FROM procedimento_paciente b
LEFT OUTER JOIN procedimento_participante c ON (b.nr_sequencia = c.nr_sequencia)
WHERE b.nr_interno_conta	= a.nr_interno_conta and b.nr_doc_convenio	= a.cd_autorizacao  );
						end if;
					end if;
				end if;

				if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then

					if (coalesce(cd_procedimento_xml_w,'0') <> '0') then

						select	max(x.cd_item),
							max(x.ds_item)
						into STRICT	cd_procedimento_w,
							ds_item_retorno_w
						from (SELECT	max(cd_procedimento) cd_item,
								max(substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,255)) ds_item
							from	procedimento_paciente
							where	nr_interno_conta		= nr_interno_conta_w
							and	nr_doc_convenio			= nr_guia_w
							and	coalesce(cd_motivo_exc_conta::text, '') = ''
							and (cd_procedimento				= somente_numero(cd_procedimento_xml_w) or
								somente_numero(cd_procedimento_tuss)		= somente_numero(cd_procedimento_xml_w) or
								somente_numero(cd_procedimento_convenio)        = somente_numero(cd_procedimento_xml_w))
							
union

							SELECT	max(cd_material) cd_item,
								max(substr(obter_desc_material(cd_material),1,255)) ds_item
							from	material_atend_paciente
							where	nr_interno_conta	= nr_interno_conta_w
							and	nr_doc_convenio		= nr_guia_w
							and	coalesce(cd_motivo_exc_conta::text, '') = ''
							and (cd_material				= somente_numero(cd_procedimento_xml_w) or
								somente_numero(cd_material_tiss)			= somente_numero(cd_procedimento_xml_w) or
								somente_numero(cd_material_convenio)	= somente_numero(cd_procedimento_xml_w))) x;

					else
						select	max(x.cd_item),
							max(x.ds_item)
						into STRICT	cd_procedimento_w,
							ds_item_retorno_w
						from (SELECT	max(cd_procedimento) cd_item,
								max(substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,255)) ds_item
							from	procedimento_paciente
							where	nr_interno_conta		= nr_interno_conta_w
							and	nr_doc_convenio			= nr_guia_w
							and	coalesce(cd_motivo_exc_conta::text, '') = ''
							and (cd_procedimento		= cd_procedimento_w or
								cd_procedimento_tuss		= cd_procedimento_w or
								cd_procedimento_convenio        = to_char(cd_procedimento_w))
							
union

							SELECT	max(cd_material) cd_item,
								max(substr(obter_desc_material(cd_material),1,255)) ds_item
							from	material_atend_paciente
							where	nr_interno_conta	= nr_interno_conta_w
							and	nr_doc_convenio		= nr_guia_w
							and	coalesce(cd_motivo_exc_conta::text, '') = ''
							and (cd_material		= cd_procedimento_w or
								cd_material_tiss	= to_char(cd_procedimento_w) or
								cd_material_convenio	= to_char(cd_procedimento_w))) x;
					end if;


				else
					SELECT * FROM TISS_OBTER_COD_PROCED_CONV(cd_procedimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

					select	max(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w))
					into STRICT	ds_item_retorno_w
					;

					if (coalesce(ds_item_retorno_w, Wheb_mensagem_pck.get_Texto(307200)) = Wheb_mensagem_pck.get_Texto(307200)) then
						select	max(obter_desc_material(cd_procedimento_w))
						into STRICT	ds_item_retorno_w
						;
					end if;
				end if;

			else

				if (coalesce(position(nr_seq_item_conta_w ||',' in substr(ds_lista_item_w,1,32766)),0) = 0) then
					ds_lista_item_w := substr(ds_lista_item_w || nr_seq_item_conta_w ||',', 1, 32767);
				end if;

				select	max(x.cd_item),
					max(x.ds_item)
				into STRICT	cd_procedimento_w,
					ds_item_retorno_w
				from (SELECT	max(cd_procedimento) cd_item,
						max(substr(obter_desc_procedimento(cd_procedimento,ie_origem_proced),1,255)) ds_item
					from	procedimento_paciente
					where	nr_sequencia		= nr_seq_item_conta_w
					and	nr_interno_conta	= nr_interno_conta_w
					
union

					SELECT	max(cd_material) cd_item,
						max(substr(obter_desc_material(cd_material),1,255)) ds_item
					from	material_atend_paciente
					where	nr_sequencia		= nr_seq_item_conta_w
					and	nr_interno_conta	= nr_interno_conta_w) x;

			end if;
			/*FIM- lhalves OS 374022*/

			if (ie_tipo_tabela_w in ('05','95','96','12','16')) and /*Brasindice ou Tabela propria, a descricao deve ser conforme o arquivo*/
				(ds_item_w IS NOT NULL AND ds_item_w::text <> '') then
				ds_item_retorno_w := ds_item_w;
			end if;

			--Se nao obteve o procedimento do Tasy, entao considera o do proprio XML, porem como number.

			--Se tiver caracteres, letras no codigo, cai no exception mas deixa como null
			if (coalesce(cd_procedimento_w::text, '') = '') then
				begin
					cd_procedimento_w	:= (cd_procedimento_xml_w)::numeric;
				exception
				when others then
					cd_procedimento_w	:= null;
				end;			
			end if;		

			if (ie_grau_partic_tiss_w IS NOT NULL AND ie_grau_partic_tiss_w::text <> '') then

				select	max(cd_funcao)
				into STRICT	ie_funcao_medico_w
				from	funcao_medico
				where	ie_grau_partic_tiss = ie_grau_partic_tiss_w;
			end if;

			if (coalesce(ie_qt_executada_w,'N') = 'N') then

				qt_paga_w	:= trunc(dividir((vl_liberado_w * qt_processado_w), vl_processado_w));
				if (coalesce(vl_liberado_w,0) = 0) then
					qt_paga_w	:= 0;			
				end if;

				insert into convenio_retorno_movto(nr_sequencia,
					nr_doc_convenio,
					cd_autorizacao,
					dt_atualizacao,
					nm_usuario,
					cd_item,
					vl_cobrado,
					vl_pago,
					qt_cobrada,
					qt_paga,
					nr_seq_retorno,
					ds_item_retorno,
					cd_motivo,
					vl_glosa,
					vl_total_pago,
					nr_conta,
					nr_seq_item_conta,
					dt_execucao,
					cd_setor_atendimento,
					cd_motivo_glosa_tiss,
					ie_funcao_medico,
          nr_sequencia_item)
				values (	nextval('convenio_retorno_movto_seq'),
					nr_guia_w,
					nr_guia_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_procedimento_w,
					vl_processado_w,
					vl_liberado_w,
					qt_processado_w,
					qt_paga_w,
					nr_seq_retorno_p,
					substr(ds_item_retorno_w,1,240),
					cd_glosa_tasy_w,
					vl_glosa_total_w,
					vl_liberado_w,
					nr_interno_conta_w,
					nr_seq_item_conta_w,
					coalesce(dt_realizacao_w,dt_atendimento_w),
					cd_setor_atendimento_w,
					cd_glosa_w,
					ie_funcao_medico_w,
          nr_sequencia_item_w);

			else

				qt_paga_w	:= qt_processado_w;
				if (coalesce(vl_liberado_w,0) = 0) then
					qt_paga_w	:= 0;			
				end if;

				insert into convenio_retorno_movto(nr_sequencia,
					nr_doc_convenio,
					cd_autorizacao,
					dt_atualizacao,
					nm_usuario,
					cd_item,
					vl_cobrado,
					vl_pago,
					qt_cobrada,
					qt_paga,
					nr_seq_retorno,
					ds_item_retorno,
					cd_motivo,
					vl_glosa,
					vl_total_pago,
					nr_conta,
					nr_seq_item_conta,
					dt_execucao,
					cd_setor_atendimento,
					cd_motivo_glosa_tiss,
					ie_funcao_medico,
          nr_sequencia_item)
				values (	nextval('convenio_retorno_movto_seq'),
					nr_guia_w,
					nr_guia_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_procedimento_w,
					vl_processado_w,
					vl_liberado_w,
					qt_processado_w,
					qt_processado_w,
					nr_seq_retorno_p,
					substr(ds_item_retorno_w,1,240),
					cd_glosa_tasy_w,
					vl_glosa_total_w,
					vl_liberado_w,
					nr_interno_conta_w,
					nr_seq_item_conta_w,
					coalesce(dt_realizacao_w,dt_atendimento_w),
					cd_setor_atendimento_w,
					cd_glosa_w,
					ie_funcao_medico_w,
          nr_sequencia_item_w);

			end if;

			update	tiss_dem_conta
			set	dt_importacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_conta_w;

		end loop;
		close c02;

		end;
	end loop;
	close c01;

	/*Cursor para buscar as guais da versao 3 que sao pagas integrais.
	Onde no arquivo de retorno, vem somente a guia e nao os itens.*/
	open C05;
	loop
	fetch C05 into
		nr_seq_conta_w,
		cd_guia_operadora_w,
		cd_guia_prestador_w,
		vl_processado_guia_w,
		vl_liberado_guia_w,
		vl_glosado_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin

		SELECT * FROM TISS_OBTER_GUIA_RETORNO(nr_seq_conta_w, cd_convenio_p, cd_estabelecimento_w, cd_guia_operadora_w, cd_guia_prestador_w, nr_interno_conta_w, ie_guia_retorno_w, ie_dt_conta_w) INTO STRICT cd_guia_operadora_w, cd_guia_prestador_w, nr_interno_conta_w, ie_guia_retorno_w, ie_dt_conta_w;

		nr_guia_w	:= coalesce(cd_guia_operadora_w, cd_guia_prestador_w);

		if (coalesce(nr_interno_conta_w::text, '') = '') then
			select	max(a.nr_interno_conta)
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia c,
				conta_paciente a,
				tiss_dem_lote b
			where	a.nr_conta_convenio	= somente_numero(b.nr_lote)
			and	a.nr_interno_conta	= c.nr_interno_conta
			and	c.cd_autorizacao	= cd_guia_oper_original_w
			and	a.ie_status_acerto	= 2
			and	b.nr_sequencia		= nr_seq_lote_w;

			if (coalesce(nr_interno_conta_w::text, '') = '') then
				select	max(a.nr_interno_conta)
				into STRICT	nr_interno_conta_w
				from	conta_paciente_guia b,
					conta_paciente a
				where	a.nr_interno_conta	= b.nr_interno_conta
				and	a.ie_status_acerto	= 2
				and	b.cd_autorizacao	= nr_guia_w;
			end if;
		end if;

		if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then		
			update	tiss_dem_conta
			set	nr_interno_conta	= nr_interno_conta_w
			where	nr_sequencia		= nr_seq_conta_w;		
		end if;



		insert into convenio_retorno_movto(nr_sequencia,
			nr_doc_convenio,
			cd_autorizacao,
			dt_atualizacao,
			nm_usuario,
			vl_cobrado,
			vl_pago,
			nr_seq_retorno,
			vl_glosa,
			vl_total_pago,
			nr_conta)
		values (	nextval('convenio_retorno_movto_seq'),
			nr_guia_w,
			nr_guia_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_processado_guia_w,
			vl_liberado_guia_w,
			nr_seq_retorno_p,
			vl_glosado_guia_w,
			vl_liberado_guia_w,
			nr_interno_conta_w);
			
			update	tiss_dem_conta
			set	dt_importacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_conta_w;
						
		end;
	end loop;
	close C05;

	open C06;
	loop
	fetch C06 into
		nr_seq_conta_w,
		cd_guia_operadora_w,
		cd_guia_prestador_w,
		vl_processado_guia_w,
		vl_liberado_guia_w,
		vl_glosado_guia_w,
		vl_informado_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin

		SELECT * FROM TISS_OBTER_GUIA_RETORNO(nr_seq_conta_w, cd_convenio_p, cd_estabelecimento_w, cd_guia_operadora_w, cd_guia_prestador_w, nr_interno_conta_w, ie_guia_retorno_w, ie_dt_conta_w) INTO STRICT cd_guia_operadora_w, cd_guia_prestador_w, nr_interno_conta_w, ie_guia_retorno_w, ie_dt_conta_w;

		nr_guia_w	:= coalesce(cd_guia_operadora_w, cd_guia_prestador_w);

		if (coalesce(nr_interno_conta_w::text, '') = '') then
			select	max(a.nr_interno_conta)
			into STRICT	nr_interno_conta_w
			from	conta_paciente_guia c,
				conta_paciente a,
				tiss_dem_lote b
			where	a.nr_conta_convenio	= somente_numero(b.nr_lote)
			and	a.nr_interno_conta	= c.nr_interno_conta
			and	c.cd_autorizacao	= cd_guia_oper_original_w
			and	a.ie_status_acerto	= 2
			and	b.nr_sequencia		= nr_seq_lote_w;

			if (coalesce(nr_interno_conta_w::text, '') = '') then
				select	max(a.nr_interno_conta)
				into STRICT	nr_interno_conta_w
				from	conta_paciente_guia b,
					conta_paciente a
				where	a.nr_interno_conta	= b.nr_interno_conta
				and	a.ie_status_acerto	= 2
				and	b.cd_autorizacao	= nr_guia_w;
			end if;
		end if;

		if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then		
			update	tiss_dem_conta
			set	nr_interno_conta	= nr_interno_conta_w
			where	nr_sequencia		= nr_seq_conta_w;		
		end if;

		select	sum(vl_processado),
			sum(vl_liberado),
			sum(vl_processado - vl_liberado),
			sum(vl_informado)
		into STRICT	vl_processado_proc_w,
			vl_liberado_proc_w,
			vl_glosado_proc_w,
			vl_informado_proc_w
		from	tiss_dem_conta_proc
		where	nr_seq_conta	= nr_seq_conta_w;

		vl_liberado_w	:= vl_liberado_guia_w - vl_liberado_proc_w;
		vl_processado_w	:= vl_processado_guia_w - vl_processado_proc_w;
		vl_informado_w	:= vl_informado_guia_w - vl_informado_proc_w;
		vl_glosa_w	:= vl_glosado_guia_w - vl_glosado_proc_w;

		insert into convenio_retorno_movto(nr_sequencia,
			nr_doc_convenio,
			cd_autorizacao,
			dt_atualizacao,
			nm_usuario,
			vl_cobrado,
			vl_pago,
			nr_seq_retorno,
			vl_glosa,
			vl_total_pago,
			nr_conta)
		values (	nextval('convenio_retorno_movto_seq'),
			nr_guia_w,
			nr_guia_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_informado_w,
			vl_liberado_w,
			nr_seq_retorno_p,
			0,
			vl_liberado_w,
			nr_interno_conta_w);

			update	tiss_dem_conta
			set	dt_importacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_conta_w;
						
		end;
	end loop;
	close C06;


	select	sum(coalesce(obter_total_protocolo(nr_seq_protocolo),0))
	into STRICT	vl_protocolo_w
	from	protocolo_convenio
	where	nr_seq_protocolo	= nr_seq_protocolo_w;

	select	sum(a.vl_processado)
	into STRICT	vl_processado_dem_w
	from	tiss_cabecalho b,
		tiss_demonstrativo a
	where	b.nr_sequencia	= a.nr_seq_cabecalho
	and	b.nr_seq_retorno	= nr_seq_retorno_p;

	if (vl_processado_dem_w <> vl_protocolo_w) then
		insert into convenio_retorno_hist(nr_sequencia,
			ds_historico,
			dt_atualizacao,
			dt_historico,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_retorno)
		values (nextval('convenio_retorno_hist_seq'),
			WHEB_MENSAGEM_PCK.get_texto(307210,'VL_PROCESSADO_DEM_W='|| VL_PROCESSADO_DEM_W ||';VL_PROTOCOLO_W='|| VL_PROTOCOLO_W),	/*'O valor do demonstrativo e diferente do valor do protocolo. Vl processado: ' || vl_processado_dem_w || ', ' || 'Vl protocolo: ' || vl_protocolo_w,*/
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_retorno_p);
	end if;

end loop;
close c04;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_retorno_tiss (nr_seq_retorno_p bigint, nr_seq_lote_p bigint, cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

