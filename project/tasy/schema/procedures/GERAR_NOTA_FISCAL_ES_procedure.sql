-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nota_fiscal_es (cd_estabelecimento_p bigint, nr_nota_fiscal_p text, cd_serie_nf_p text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, dt_emissao_p timestamp, dt_entrada_saida_p timestamp, cd_cgc_emitente_p text, cd_pessoa_fisica_p text, cd_cgc_p text, cd_condicao_pagamento_p bigint, ds_observacao_p text, qt_peso_bruto_p bigint, qt_peso_liquido_p bigint, ds_especie_p text, cd_moeda_p bigint, ie_commit_p text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
/* alterada POR JULIANA LANA - FSFX EM 24/03/2015 
CRIA A NF COM IE_TIPO_NOTA = SF 
INCLUI CHAMADA PARA GERAR Nº DA RPS 
Ordena a busca das mensagens pela ordem em que foram criadas na tabela temporária 
*/
 
nr_nota_fiscal_w    nota_fiscal.nr_nota_fiscal%type;
cd_serie_nf_w      nota_fiscal.cd_serie_nf%type;
cd_natureza_operacao_w    nota_fiscal.cd_natureza_operacao%type;
cd_natureza_operacao_ne_w  parametro_compras.cd_nat_oper_compra_ne%type;
cd_natureza_operacao_fe_w  parametro_compras.cd_nat_oper_compra_fe%type;
sg_estado_fornec_w    pessoa_juridica.sg_estado%type;
sg_estado_estab_w    pessoa_juridica.sg_estado%type;
cd_cgc_emitente_w    pessoa_juridica.cd_cgc%type;
ds_observacao_w      nota_fiscal.ds_observacao%type;
nr_sequencia_nf_w    nota_fiscal.nr_sequencia_nf%type;
nr_seq_nota_fiscal_w    nota_fiscal.nr_sequencia%type;


BEGIN 
 
select  max(b.sg_estado), 
  max(b.cd_cgc) 
into STRICT  sg_estado_estab_w, 
  cd_cgc_emitente_w 
from  pessoa_juridica b, 
  estabelecimento a 
where  a.cd_cgc    = b.cd_cgc 
and  a.cd_estabelecimento  = cd_estabelecimento_p;
 
if (cd_cgc_emitente_p IS NOT NULL AND cd_cgc_emitente_p::text <> '') then 
 
  cd_cgc_emitente_w  := cd_cgc_emitente_p;
 
end if;
 
if (coalesce(cd_serie_nf_p::text, '') = '') then 
 
  select  max(a.cd_serie_nf) 
  into STRICT  cd_serie_nf_w 
  from  parametro_compras a 
  where  a.cd_estabelecimento  = cd_estabelecimento_p;
 
  if (coalesce(cd_serie_nf_w::text, '') = '') then 
 
    cd_serie_nf_w := obter_param_usuario(40, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_serie_nf_w);
 
  end if;
 
else 
 
  cd_serie_nf_w  := cd_serie_nf_p;
 
end if;
 
if (coalesce(cd_natureza_operacao_p::text, '') = '') then 
 
  select  coalesce(max(a.cd_natureza_operacao), 0) 
  into STRICT  cd_natureza_operacao_w 
  from  operacao_nota a 
  where  a.cd_operacao_nf  = cd_operacao_nota_p;
 
  if (coalesce(cd_natureza_operacao_w::text, '') = '') then 
 
    select  coalesce(max(a.cd_nat_oper_compra_ne),1102), 
      coalesce(max(a.cd_nat_oper_compra_fe),2102) 
    into STRICT  cd_natureza_operacao_ne_w, 
      cd_natureza_operacao_fe_w 
    from  parametro_compras a 
    where  a.cd_estabelecimento  = cd_estabelecimento_p;
 
    if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then 
 
      select  max(a.sg_estado) 
      into STRICT  sg_estado_fornec_w 
      from  pessoa_juridica a 
      where  a.cd_cgc  = cd_cgc_p;
 
      if (sg_estado_fornec_w  <> sg_estado_estab_w) then 
 
        cd_natureza_operacao_w  := cd_natureza_operacao_fe_w;
 
      else 
 
        cd_natureza_operacao_w  := cd_natureza_operacao_ne_w;
 
      end if;
 
    else 
 
      cd_natureza_operacao_w  := cd_natureza_operacao_ne_w;
 
    end if;
 
  end if;
 
else 
 
  cd_natureza_operacao_w  := cd_natureza_operacao_p;
 
end if;
 
 
select  coalesce(max(a.nr_sequencia_nf),0) + 1 
into STRICT  nr_sequencia_nf_w 
from  nota_fiscal a 
where  a.cd_estabelecimento  = cd_estabelecimento_p 
and  a.cd_serie_nf    = cd_serie_nf_w 
and  a.nr_nota_fiscal  = nr_nota_fiscal_w;
 
--comentário inserido por juliana lana - fsfsx em 24/03/2015 
--ds_observacao_w  := substr('Nota fiscal gerada a partir da importação de arquivo de integração.' || chr(13) || chr(10) || ds_observacao_p,1,4000); 
ds_observacao_w  := '';
 
select  nextval('nota_fiscal_seq') 
into STRICT  nr_seq_nota_fiscal_w
;
 
if (coalesce(nr_nota_fiscal_p::text, '') = '') then 
 
  select  max(a.nr_nota_fiscal) 
  into STRICT  nr_nota_fiscal_w 
  from  nota_fiscal a 
  where  a.nr_nota_fiscal  = to_char(nr_seq_nota_fiscal_w);
 
  if (coalesce(nr_nota_fiscal_w::text, '') = '') then 
 
    nr_nota_fiscal_w  := to_char(nr_seq_nota_fiscal_w);
 
  else 
 
    nr_nota_fiscal_w  := to_char(nr_seq_nota_fiscal_w + 1);
 
  end if;
 
else 
 
  nr_nota_fiscal_w  := nr_nota_fiscal_p;
 
end if;
 
insert  into nota_fiscal(cd_cgc, 
  cd_cgc_emitente, 
  cd_condicao_pagamento, 
  cd_estabelecimento, 
  cd_moeda, 
  cd_natureza_operacao, 
  cd_operacao_nf, 
  cd_pessoa_fisica, 
  cd_serie_nf, 
  ds_especie, 
  ds_observacao, 
  dt_atualizacao, 
  dt_atualizacao_nrec, 
  dt_emissao, 
  dt_entrada_saida, 
  ie_acao_nf, 
  ie_emissao_nf, 
  ie_situacao, 
  ie_tipo_frete, 
  ie_tipo_nota, 
  nm_usuario, 
  nm_usuario_nrec, 
  nr_lote_contabil, 
  nr_nota_fiscal, 
  nr_sequencia, 
  nr_sequencia_nf, 
  qt_peso_bruto, 
  qt_peso_liquido, 
  vl_mercadoria, 
  vl_total_nota) 
values (cd_cgc_p, 
  cd_cgc_emitente_w, 
  cd_condicao_pagamento_p, 
  cd_estabelecimento_p, 
  cd_moeda_p, 
  cd_natureza_operacao_w, 
  cd_operacao_nota_p, 
  cd_pessoa_fisica_p, 
  cd_serie_nf_w, 
  ds_especie_p, 
  ds_observacao_w, 
  clock_timestamp(), 
  clock_timestamp(), 
  dt_emissao_p, 
  dt_entrada_saida_p, 
  '1', 
  '0', 
  '1', 
  'F', 
  'SF', 
  nm_usuario_p, 
  nm_usuario_p, 
  0, 
  nr_nota_fiscal_w, 
  nr_seq_nota_fiscal_w, 
  nr_sequencia_nf_w, 
  coalesce(qt_peso_bruto_p,0), 
  coalesce(qt_peso_liquido_p,0), 
  0, 
  0);
 
-- Add Juliana Lana FSFX . Gera nº da RPS 
CALL sup_gerar_nr_nota_fiscal( nr_seq_nota_fiscal_w, cd_serie_nf_w, cd_estabelecimento_p, nm_usuario_p);
 
nr_sequencia_p  := nr_seq_nota_fiscal_w;
 
 
if (coalesce(ie_commit_p,'S')  = 'S') then 
 
  commit;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nota_fiscal_es (cd_estabelecimento_p bigint, nr_nota_fiscal_p text, cd_serie_nf_p text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, dt_emissao_p timestamp, dt_entrada_saida_p timestamp, cd_cgc_emitente_p text, cd_pessoa_fisica_p text, cd_cgc_p text, cd_condicao_pagamento_p bigint, ds_observacao_p text, qt_peso_bruto_p bigint, qt_peso_liquido_p bigint, ds_especie_p text, cd_moeda_p bigint, ie_commit_p text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

