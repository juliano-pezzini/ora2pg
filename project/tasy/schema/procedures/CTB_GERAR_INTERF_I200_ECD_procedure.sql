-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_interf_i200_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
finalidade: gerar as informacoes dos registros de:
	"lancamento contabil" - i200
	"partidas do lancamento" - i250
-------------------------------------------------------------------------------------------------------------------

locais de chamada direta:
[ x ]  objetos do dicionario [  ] tasy (delphi/java) [  ] portal [  ]  relatorios [ ] outros:
 ------------------------------------------------------------------------------------------------------------------

pontos de atencao:
	ie_consolida_empresa, pois ira gerar um registro para cada estabelecimento
	da empresa se estiver como "sim".

	ie_apres_conta_ctb - campo "apresentacao conta" da pasta "regra"
		cd - codigo
		cl - classificacao
		cp - classificacao sem os pontos

	ie_forma_num_lcto - campo "identif i200" da pasta "regra"
		ag - agrupador sequencial
		nr - sequencia do movimento
-------------------------------------------------------------------------------------------------------------------

referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
vl_credito_total_w		ctb_movimento.vl_movimento%type;
vl_debito_total_w		ctb_movimento.vl_movimento%type;
ie_consolida_empresa_w		ctb_regra_sped.ie_consolida_empresa%type;
cd_versao_w			ctb_regra_sped.cd_versao%type;
sep_w				varchar(1)	:= '|';
ie_tipo_lancamento_w		varchar(2);
tp_registro_w			varchar(15);
ie_forma_num_lcto_w		varchar(15);
ie_apres_conta_ctb_w		varchar(15);
cd_conta_contabil_w		varchar(40);
ds_historico_w			varchar(255);
ds_arquivo_w			varchar(4000);
ds_compl_arquivo_w		varchar(4000);
ds_linha_w			varchar(8000);
dt_atualizacao_w		timestamp;
dt_movimento_w			timestamp;
dt_inicio_w			timestamp;
dt_fim_w			timestamp;
qt_commit_w			bigint	:= 0;
nr_linha_w			bigint	:= qt_linha_p;
nr_seq_registro_w		bigint	:= nr_sequencia_p;
vl_movimento_w			double precision;
nr_agrup_sequencial_ini_w	bigint;
nr_agrup_sequencial_fim_w	bigint;
nr_agrup_sequencial_w		bigint;
nr_linha_i200_w			bigint;
nr_vetor_i200_w			bigint;
nr_seq_registro_i200_w		bigint;
idx				bigint;
testes_w			bigint;
nr_agrup_sequencial_ant		bigint;
dt_lancto_ext_w		ctb_movimento.dt_lancto_ext%type;

c_partidas_ag CURSOR FOR
	SELECT	a.nr_agrup_sequencial,
		b.dt_referencia,
		a.dt_movimento,
		a.cd_conta_contabil,
		a.cd_classificacao,
		CASE WHEN a.ie_centro_custo='N' THEN null  ELSE c.cd_centro_custo END 	cd_centro_custo,
		coalesce(coalesce(c.vl_movimento,a.vl_movimento),0)	vl_movimento,
		a.ie_debito_credito,
		a.nr_seq_agrupamento	nr_documento,
		a.cd_historico,
		a.ds_historico,
		a.ds_compl_historico,
		a.ie_encerramento,
		CASE WHEN a.ie_debito_credito='C' THEN coalesce(coalesce(c.vl_movimento,a.vl_movimento),0)  ELSE 0 END 	vl_credito,
		CASE WHEN a.ie_debito_credito='D' THEN coalesce(coalesce(c.vl_movimento,a.vl_movimento),0)  ELSE 0 END 	vl_debito,
		a.dt_lancto_ext
	FROM lote_contabil d, ctb_mes_ref b, ctb_movimento_v2 a
LEFT OUTER JOIN ctb_movto_centro_custo c ON (a.nr_sequencia = c.nr_seq_movimento)
WHERE b.nr_sequencia		= a.nr_seq_mes_ref and b.nr_sequencia		= d.nr_seq_mes_ref and d.nr_lote_contabil	= a.nr_lote_contabil and b.cd_empresa		= cd_empresa_p and a.cd_estabelecimento	= coalesce(cd_estabelecimento_p, a.cd_estabelecimento) and b.dt_referencia between dt_inicio_w and dt_fim_w and trunc(a.dt_movimento) between trunc(dt_inicio_p) and fim_dia(dt_fim_p) and ie_consolida_empresa_w	= 'N' and (a.nr_agrup_sequencial IS NOT NULL AND a.nr_agrup_sequencial::text <> '')
	
union all

	SELECT	a.nr_agrup_sequencial,
		b.dt_referencia,
		a.dt_movimento,
		a.cd_conta_contabil,
		a.cd_classificacao,
		CASE WHEN a.ie_centro_custo='N' THEN null  ELSE c.cd_centro_custo END 	cd_centro_custo,
		coalesce(coalesce(c.vl_movimento,a.vl_movimento),0) vl_movimento,
		a.ie_debito_credito,
		a.nr_seq_agrupamento	nr_documento,
		a.cd_historico,
		a.ds_historico,
		a.ds_compl_historico,
		a.ie_encerramento,
		CASE WHEN a.ie_debito_credito='C' THEN coalesce(coalesce(c.vl_movimento,a.vl_movimento),0)  ELSE 0 END 	vl_credito,
		CASE WHEN a.ie_debito_credito='D' THEN coalesce(coalesce(c.vl_movimento,a.vl_movimento),0)  ELSE 0 END 	vl_debito,
		a.dt_lancto_ext
	FROM estabelecimento e, lote_contabil d, ctb_mes_ref b, ctb_movimento_v2 a
LEFT OUTER JOIN ctb_movto_centro_custo c ON (a.nr_sequencia = c.nr_seq_movimento)
WHERE b.nr_sequencia		= a.nr_seq_mes_ref and b.nr_sequencia		= d.nr_seq_mes_ref and d.nr_lote_contabil	= a.nr_lote_contabil and b.cd_empresa		= cd_empresa_p and a.cd_estabelecimento	= e.cd_estabelecimento and b.dt_referencia between dt_inicio_w and dt_fim_w and trunc(a.dt_movimento) between trunc(dt_inicio_p) and fim_dia(dt_fim_p) and coalesce(e.ie_gerar_sped,'S')		= 'S' and coalesce(e.ie_scp, 'N')		!= 'S' and ie_consolida_empresa_w	= 'S' and (a.nr_agrup_sequencial IS NOT NULL AND a.nr_agrup_sequencial::text <> '') order by 1, 2;

vet010	c_partidas_ag%rowtype;

nr_vetor_w			bigint	:= 0;
type registro is table of ctb_sped_registro%rowtype index by integer;
ctb_sped_registro_w		registro;


BEGIN
select	coalesce(max(a.ie_apres_conta_ctb), 'CD'),
	coalesce(max(a.ie_forma_num_lcto), 'NR'),
	coalesce(max(a.ie_consolida_empresa), 'N'),
	coalesce(max(a.cd_versao), '9.0')
into STRICT	ie_apres_conta_ctb_w,
	ie_forma_num_lcto_w,
	ie_consolida_empresa_w,
	cd_versao_w
from	ctb_regra_sped a,
	ctb_sped_controle b
where	a.nr_sequencia	= b.nr_seq_regra_sped
and	b.nr_sequencia	= nr_seq_controle_p;

dt_inicio_w	:= 	trunc(dt_inicio_p,'mm');
dt_fim_w	:=	fim_mes(dt_fim_p);

if (ie_forma_num_lcto_w = 'AG') then
	begin
	nr_agrup_sequencial_ant := 0;
	ie_tipo_lancamento_w	:= null;
	open c_partidas_ag;
	loop
	fetch c_partidas_ag into
		vet010;
	EXIT WHEN NOT FOUND; /* apply on c_partidas_ag */
		begin
		
		if (nr_agrup_sequencial_ant <> vet010.nr_agrup_sequencial) or (coalesce(nr_agrup_sequencial_ant, 0) = 0) then
			begin

			if (nr_agrup_sequencial_ant <> vet010.nr_agrup_sequencial) and (nr_agrup_sequencial_ant <> 0) then
				begin

				/* tipo de lancamento */



				/* valor do numero de lancamento */

				vl_movimento_w	:= vl_credito_total_w;

				if (vl_movimento_w = 0) then
					vl_movimento_w := vl_debito_total_w;
				end if;
				
				/* registro i 200*/

				tp_registro_w		:= 'I200';
				if (cd_versao_w in ('7.0', '8.0', '9.0')) then
				
					ds_linha_w		:= substr(	sep_w || tp_registro_w					||
										sep_w || nr_agrup_sequencial_w				||
										sep_w || to_char(dt_movimento_w,'ddmmyyyy')		||
										sep_w || sped_obter_campo_valor(vl_movimento_w)		||
										sep_w || ie_tipo_lancamento_w 				||
										sep_w || to_char(dt_lancto_ext_w,'ddmmyyyy') 				||
										sep_w,1,8000);
				else
					ds_linha_w		:= substr(	sep_w || tp_registro_w					||
										sep_w || nr_agrup_sequencial_w				||
										sep_w || to_char(dt_movimento_w,'ddmmyyyy')		||
										sep_w || sped_obter_campo_valor(vl_movimento_w)		||
										sep_w || ie_tipo_lancamento_w 				||										
										sep_w,1,8000);
										
				end if;

				ds_arquivo_w		:= substr(ds_linha_w,1,4000);
				ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);

				ctb_sped_registro_w[nr_vetor_i200_w].nr_sequencia		:= nr_seq_registro_i200_w;
				ctb_sped_registro_w[nr_vetor_i200_w].ds_arquivo			:= ds_arquivo_w;
				ctb_sped_registro_w[nr_vetor_i200_w].dt_atualizacao		:= dt_atualizacao_w;
				ctb_sped_registro_w[nr_vetor_i200_w].nm_usuario			:= nm_usuario_p;
				ctb_sped_registro_w[nr_vetor_i200_w].dt_atualizacao_nrec	:= dt_atualizacao_w;
				ctb_sped_registro_w[nr_vetor_i200_w].nm_usuario_nrec		:= nm_usuario_p;
				ctb_sped_registro_w[nr_vetor_i200_w].nr_seq_controle_sped	:= nr_seq_controle_p;
				ctb_sped_registro_w[nr_vetor_i200_w].ds_arquivo_compl		:= ds_compl_arquivo_w;
				ctb_sped_registro_w[nr_vetor_i200_w].cd_registro		:= tp_registro_w;
				ctb_sped_registro_w[nr_vetor_i200_w].nr_linha			:= nr_linha_i200_w;
				ctb_sped_registro_w[nr_vetor_i200_w].nr_doc_origem		:= nr_agrup_sequencial_w;

				nr_vetor_i200_w		:= 0;
				nr_seq_registro_i200_w	:= 0;
				nr_linha_i200_w		:= 0;

				if (nr_vetor_w >= 1000) then
					begin

					forall m in ctb_sped_registro_w.first..ctb_sped_registro_w.last
						insert into ctb_sped_registro values ctb_sped_registro_w(m);

					nr_vetor_w		:= 0;
					ctb_sped_registro_w.delete;

					commit;

					end;
				end if;

				end;
			end if;

			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w 	+ 1;
			nr_vetor_w		:= nr_vetor_w 	+ 1;
			nr_seq_registro_i200_w	:= nr_seq_registro_w;
			nr_linha_i200_w		:= nr_linha_w;
			nr_vetor_i200_w		:= nr_vetor_w;
			vl_credito_total_w	:= 0;
			vl_debito_total_w	:= 0;
			dt_atualizacao_w	:= clock_timestamp();
			dt_movimento_w		:= null;
			ie_tipo_lancamento_w	:= null;
			dt_lancto_ext_w	:= null;
			end;
		end if;


		if (coalesce(dt_movimento_w::text, '') = '') then
			dt_movimento_w		:= vet010.dt_movimento;
		end if;
		/* Tipo do lancamento */

		if (coalesce(ie_tipo_lancamento_w,'X') = 'X') then

			ie_tipo_lancamento_w	:= 'N';

			if (vet010.ie_encerramento = 'S') then
				ie_tipo_lancamento_w	:= 'E';
			end if;


		end if;
		dt_lancto_ext_w := vet010.dt_lancto_ext;
		if (dt_lancto_ext_w IS NOT NULL AND dt_lancto_ext_w::text <> '') then
			ie_tipo_lancamento_w := 'X';
		end if;		

		nr_agrup_sequencial_w	:= vet010.nr_agrup_sequencial;

		if (coalesce(vet010.vl_credito, 0) 	<> 0) then
			vl_credito_total_w	:= vl_credito_total_w + vet010.vl_credito;
		end if;

		if (coalesce(vet010.vl_debito, 0) 	<> 0) then
			vl_debito_total_w 	:= vl_debito_total_w + vet010.vl_debito;
		end if;

		tp_registro_w		:= 'I250';
		ds_historico_w		:= substr(vet010.ds_historico || ' ' || vet010.ds_compl_historico,1, 255);
		ds_historico_w		:= substr(replace(replace(replace(ds_historico_w,chr(13),' '),chr(10),' '),'|',''),1,255);
		ds_historico_w		:= substr(replace(ds_historico_w,chr(9),''),1,255);
		cd_conta_contabil_w	:= vet010.cd_conta_contabil;

		if (ie_apres_conta_ctb_w = 'CL') then
			cd_conta_contabil_w	:= vet010.cd_classificacao;
		elsif (ie_apres_conta_ctb_w = 'CP') then
			cd_conta_contabil_w	:= substr(replace(vet010.cd_classificacao,'.',''),1,40);
		end if;

		ds_linha_w	:= substr(	sep_w || tp_registro_w					||
						sep_w || cd_conta_contabil_w 				||
						sep_w || vet010.cd_centro_custo 			||
						sep_w || sped_obter_campo_valor(vet010.vl_movimento)	||
						sep_w || vet010.ie_debito_credito 			||
						sep_w || vet010.nr_documento 				||
						sep_w || vet010.cd_historico 				||
						sep_w || ds_historico_w 				||
						sep_w || ''						||
						sep_w, 1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;
		qt_commit_w		:= qt_commit_w + 1;
		nr_vetor_w		:= nr_vetor_w + 1;

		ctb_sped_registro_w[nr_vetor_w].nr_sequencia		:= nr_seq_registro_w;
		ctb_sped_registro_w[nr_vetor_w].ds_arquivo		:= ds_arquivo_w;
		ctb_sped_registro_w[nr_vetor_w].dt_atualizacao		:= clock_timestamp();
		ctb_sped_registro_w[nr_vetor_w].nm_usuario		:= nm_usuario_p;
		ctb_sped_registro_w[nr_vetor_w].dt_atualizacao_nrec	:= clock_timestamp();
		ctb_sped_registro_w[nr_vetor_w].nm_usuario_nrec		:= nm_usuario_p;
		ctb_sped_registro_w[nr_vetor_w].nr_seq_controle_sped	:= nr_seq_controle_p;
		ctb_sped_registro_w[nr_vetor_w].ds_arquivo_compl	:= ds_compl_arquivo_w;
		ctb_sped_registro_w[nr_vetor_w].cd_registro		:= tp_registro_w;
		ctb_sped_registro_w[nr_vetor_w].nr_linha		:= nr_linha_w;
		ctb_sped_registro_w[nr_vetor_w].nr_doc_origem		:= vet010.nr_agrup_sequencial;

		nr_agrup_sequencial_ant := vet010.nr_agrup_sequencial;

		end;
	end loop;
	close c_partidas_ag;

	end;

	/* valor do numero de lancamento */

	vl_movimento_w	:= vl_credito_total_w;

	if (vl_movimento_w = 0) then
		vl_movimento_w	:= vl_debito_total_w;
	end if;

	/* registro i 200*/

	tp_registro_w		:= 'I200';
	if (cd_versao_w in ('7.0', '8.0', '9.0')) then
		ds_linha_w		:= substr(	sep_w || tp_registro_w					||
							sep_w || nr_agrup_sequencial_w				||
							sep_w || to_char(dt_movimento_w,'ddmmyyyy')		||
							sep_w || sped_obter_campo_valor(vl_movimento_w)		||
							sep_w || ie_tipo_lancamento_w 				||
							sep_w || to_char(dt_lancto_ext_w,'ddmmyyyy') 				||
							sep_w,1,8000);
	else
		ds_linha_w		:= substr(	sep_w || tp_registro_w					||
							sep_w || nr_agrup_sequencial_w				||
							sep_w || to_char(dt_movimento_w,'ddmmyyyy')		||
							sep_w || sped_obter_campo_valor(vl_movimento_w)		||
							sep_w || ie_tipo_lancamento_w 				||
							sep_w,1,8000);
	end if;

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_compl_arquivo_w	:= substr(ds_linha_w,4001,4000);

	ctb_sped_registro_w[nr_vetor_i200_w].nr_sequencia		:= nr_seq_registro_i200_w;
	ctb_sped_registro_w[nr_vetor_i200_w].ds_arquivo			:= ds_arquivo_w;
	ctb_sped_registro_w[nr_vetor_i200_w].dt_atualizacao		:= dt_atualizacao_w;
	ctb_sped_registro_w[nr_vetor_i200_w].nm_usuario			:= nm_usuario_p;
	ctb_sped_registro_w[nr_vetor_i200_w].dt_atualizacao_nrec	:= dt_atualizacao_w;
	ctb_sped_registro_w[nr_vetor_i200_w].nm_usuario_nrec		:= nm_usuario_p;
	ctb_sped_registro_w[nr_vetor_i200_w].nr_seq_controle_sped	:= nr_seq_controle_p;
	ctb_sped_registro_w[nr_vetor_i200_w].ds_arquivo_compl		:= ds_compl_arquivo_w;
	ctb_sped_registro_w[nr_vetor_i200_w].cd_registro		:= tp_registro_w;
	ctb_sped_registro_w[nr_vetor_i200_w].nr_linha			:= nr_linha_i200_w;
	ctb_sped_registro_w[nr_vetor_i200_w].nr_doc_origem		:= nr_agrup_sequencial_w;
end if;

if (ctb_sped_registro_w.count > 0) then
	forall m in ctb_sped_registro_w.first..ctb_sped_registro_w.last
		insert into ctb_sped_registro values ctb_sped_registro_w(m);
end if;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_interf_i200_ecd ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

