-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_alterar_status_story ( nr_story_p bigint, nr_sprint_p bigint, cd_status_p bigint, cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, nr_ordem_servico_p INOUT bigint, ie_commit_p text default 'S') AS $body$
DECLARE

 
nr_art_w		desenv_art.nr_sequencia%type;
cd_papel_w		desenv_member.cd_papel%type;
ie_desenvolvedor_w	desenv_member.ie_desenvolvedor%type;
ie_testador_w		desenv_member.ie_testador%type;
ie_business_owner_w	desenv_member.ie_business_owner%type;
ie_scrum_master_w	desenv_member.ie_scrum_master%type;
ie_product_owner_w	desenv_member.ie_product_owner%type;
ie_rte_w		desenv_member.ie_rte%type;
cd_status_atual_w	desenv_story.cd_status%type;
nr_membro_w		desenv_member.nr_sequencia%type;
nr_team_w		desenv_team.nr_sequencia%type;
ie_usa_ordem_servico_w	desenv_team.ie_usa_ordem_servico%type;
qt_atribuicao_w		bigint;
qt_story_desenv_w	bigint;
ie_atribuido_usuario_w	varchar(1);
nr_seq_estagio_w	desenv_status_story_os.nr_seq_estagio%type;
nr_ordem_servico_w	desenv_story_sprint.nr_ordem_servico%type;
			

BEGIN 
 
select	max(c.nr_sequencia) 
into STRICT	nr_art_w 
from	desenv_sprint a, 
	desenv_release b, 
	desenv_art c 
where	a.nr_sequencia = nr_sprint_p 
and	a.nr_release = b.nr_sequencia 
and	b.nr_art = c.nr_sequencia;
 
select	max(cd_papel), 
	coalesce(max(ie_desenvolvedor),'N'), 
	coalesce(max(ie_testador),'N'), 
	coalesce(max(ie_business_owner),'N'), 
	coalesce(max(ie_scrum_master),'N'), 
	coalesce(max(ie_product_owner),'N'), 
	coalesce(max(ie_rte),'N'), 
	max(a.nr_sequencia), 
	max(b.nr_sequencia), 
	max(b.ie_usa_ordem_servico) 
into STRICT	cd_papel_w, 
	ie_desenvolvedor_w, 
	ie_testador_w, 
	ie_business_owner_w, 
	ie_scrum_master_w, 
	ie_product_owner_w, 
	ie_rte_w, 
	nr_membro_w, 
	nr_team_w, 
	ie_usa_ordem_servico_w 
from	desenv_member a, 
	desenv_team b 
where	a.nr_team = b.nr_sequencia 
and	b.nr_art = nr_art_w 
and	a.cd_pessoa_fisica = cd_pessoa_fisica_p;
 
select	coalesce(max(cd_status),0) 
into STRICT	cd_status_atual_w 
from	desenv_story_sprint 
where	nr_story = nr_story_p 
and	nr_sprint = nr_sprint_p;
 
/*if	(cd_status_p > cd_status_atual_w) and 
	((cd_status_p - cd_status_atual_w) > 1) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336605);--Não é possível pular nenhum estágio. 
	return; 
end if; 
 
if	(cd_status_atual_w <> 0) and 
	(cd_status_p = 0) and 
	((cd_papel_w not in (2,3)) and (ie_scrum_master_w <> 'S') and (ie_product_owner_w <> 'S')) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336627);--Somente Scrum Masters ou Product Owners podem retornar Stories para A Fazer. 
	return; 
end if; 
 
if	(cd_status_atual_w = 2) and 
	(cd_status_p = 1) and 
	((cd_papel_w <> 4) and (ie_testador_w <> 'S')) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336632);--Somente Testadores podem retornar Stories para Desenvolvimento. 
	return; 
end if; 
 
if	(cd_status_atual_w = 3) and 
	(cd_status_p < 3) and 
	((cd_papel_w <> 3) and (ie_product_owner_w <> 'S')) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336633);--Somente Product Owners podem retornar Stories quando em Aceitação. 
	return; 
end if; 
 
if	(cd_status_atual_w = 0) and 
	(cd_status_p = 1) and 
	((cd_papel_w not in (1,2)) and (ie_desenvolvedor_w <> 'S') and (ie_scrum_master_w <> 'S')) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336606);--Somente Desenvolvedores ou Scrum Masters podem colocar Stories em Desenvolvimento. 
	return; 
end if; 
 
if	(cd_status_atual_w = 1) and 
	(cd_status_p = 2) and 
	((cd_papel_w not in (1,2)) and (ie_desenvolvedor_w <> 'S') and (ie_scrum_master_w <> 'S')) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336620);--Somente Desenvolvedores ou Scrum Masters podem colocar Stories em Verificação. 
	return; 
end if; 
 
if	(cd_status_atual_w = 2) and 
	(cd_status_p = 3) and 
	((cd_papel_w <> 4) and (ie_testador_w <> 'S')) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336621);--Somente Testers podem colocar Stories em Aceitação. 
	return; 
end if; 
 
if	(cd_status_atual_w = 3) and 
	(cd_status_p = 4) and 
	((cd_papel_w <> 3) and (ie_product_owner_w <> 'S')) then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336630);--Somente Product Owners podem colocar Stories em Pronto. 
	return; 
end if;*/
 
 
select	count(nr_sequencia), 
	coalesce(max(CASE WHEN nr_membro=nr_membro_w THEN 'S'  ELSE null END ),'N') 
into STRICT	qt_atribuicao_w, 
	ie_atribuido_usuario_w 
from	desenv_story_atribuicao 
where	nr_story = nr_story_p;
 
if (cd_status_p = 1) and (cd_status_atual_w = 0) and (qt_atribuicao_w > 0) and (ie_atribuido_usuario_w <> 'S') then 
	ds_erro_p := wheb_mensagem_pck.get_texto(336607);--Esta Story está atribuída a outro usuário. 
	return;
end if;
 
if (qt_atribuicao_w = 0) then 
	insert into desenv_story_atribuicao( 
		nr_sequencia, 
		dt_atualizacao, 
		dt_atualizacao_nrec, 
		nm_usuario, 
		nm_usuario_nrec, 
		nr_membro, 
		nr_story) 
	values (	nextval('desenv_story_atribuicao_seq'), 
		clock_timestamp(), 
		clock_timestamp(), 
		nm_usuario_p, 
		nm_usuario_p, 
		nr_membro_w, 
		nr_story_p);
end if;
 
if (cd_status_atual_w = 0) and (cd_status_p = 1) and (ie_usa_ordem_servico_w <> 'N') then 
	nr_ordem_servico_p := man_gerar_os_story(nr_ordem_servico_p, nr_story_p, nr_sprint_p, nm_usuario_p, cd_estabelecimento_p, nr_art_w);
end if;
 
select	max(nr_seq_estagio) 
into STRICT	nr_seq_estagio_w 
from	desenv_status_story_os 
where	nr_art = nr_art_w 
and	cd_status = cd_status_p;
 
if (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') then 
	select	max(nr_ordem_servico) 
	into STRICT	nr_ordem_servico_w 
	from	desenv_story_sprint 
	where	nr_story = nr_story_p 
	and	nr_sprint = nr_sprint_p;
	 
	update	man_ordem_servico 
	set	nr_seq_estagio = nr_seq_estagio_w 
	where	nr_sequencia = nr_ordem_servico_w;
end if;
 
update	desenv_story_sprint 
set	cd_status = cd_status_p, 
	nm_usuario = nm_usuario_p, 
	dt_atualizacao = clock_timestamp() 
where	nr_story = nr_story_p 
and	nr_sprint = nr_sprint_p;
 
if (coalesce(ie_commit_p,'S') <> 'N') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_alterar_status_story ( nr_story_p bigint, nr_sprint_p bigint, cd_status_p bigint, cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text, nr_ordem_servico_p INOUT bigint, ie_commit_p text default 'S') FROM PUBLIC;

