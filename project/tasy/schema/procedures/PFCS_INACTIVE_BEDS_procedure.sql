-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_inactive_beds ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


c01 CURSOR FOR
SELECT	 coalesce((select max(round(clock_timestamp() - x.dt_historico))
					from unidade_atend_hist x
					where x.nr_seq_unidade = a.nr_seq_interno
					and x.ie_status_unidade = a.ie_status_unidade),0) qt_time_blocked,
	e.ds_motivo ds_reason_blocked,
	a.ie_status_unidade cd_status,
	c.qt_time rule_time,
	substr(obter_valor_dominio(82,a.ie_status_unidade),1,255) ds_status,
	a.ie_status_unidade ie_status,
	a.cd_unidade_basica || ' ' || a.cd_unidade_compl ds_location,
	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department
FROM setor_atendimento d, pfcs_time_unit_bed c, unidade_atendimento a
LEFT OUTER JOIN motivo_interdicao_leito e ON (a.cd_motivo_interdicao = e.cd_motivo)
WHERE a.ie_status_unidade = c.cd_rule and a.cd_setor_atendimento = d.cd_setor_atendimento  and d.cd_classif_setor in ('1','3','4','9','11','12') and d.ie_ocup_hospitalar <> 'N' and a.ie_status_unidade in ('I','U') and a.ie_situacao = 'A' and d.ie_situacao = 'A' and d.cd_estabelecimento_base = (cd_estabelecimento_p)::numeric and coalesce(a.nr_seq_location::text, '') = '';



c01_fhir CURSOR FOR
SELECT (clock_timestamp() - a.dt_atualizacao) qt_time_blocked,
         PFCS_GET_STATUS_BED(a.nr_seq_location) ds_reason_blocked,
	a.ie_status_unidade cd_status,
	c.qt_time rule_time,
	substr(obter_valor_dominio(82,a.ie_status_unidade),1,255) ds_status,
	a.ie_status_unidade ie_status,
	a.cd_unidade_basica || ' ' || a.cd_unidade_compl ds_location,
	d.cd_setor_atendimento cd_department,
	d.ds_setor_atendimento ds_department
from	unidade_atendimento a,
	pfcs_time_unit_bed c,
	setor_atendimento d
where	a.ie_status_unidade = c.cd_rule
and	a.cd_setor_atendimento = d.cd_setor_atendimento
and	d.cd_classif_setor in ('1','3','4','9','11','12')
and	d.ie_ocup_hospitalar <> 'N'
and a.ie_status_unidade in ('I','U')
and	a.ie_situacao = 'A'
and	d.ie_situacao = 'A'
and	d.cd_estabelecimento_base = (cd_estabelecimento_p)::numeric
and (a.nr_seq_location IS NOT NULL AND a.nr_seq_location::text <> '');

qt_beds_w				        bigint := 0;
pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;
nr_seq_panel_w				    pfcs_panel.nr_sequencia%type;
pfcs_flag_settings_w            pfcs_general_rule.ie_table_origin%type;
BEGIN

	nr_seq_operational_level_w := pfcs_get_structure_level(
				cd_establishment_p => cd_estabelecimento_p,
				ie_level_p => 'O',
				ie_info_p => 'C');

    select ie_table_origin
        into STRICT pfcs_flag_settings_w
    from pfcs_general_rule;

-- Tasy tables or both
if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then

	for c01_w in c01 loop
	begin

		if (c01_w.rule_time < c01_w.qt_time_blocked) then

			qt_beds_w := qt_beds_w + 1;

			select	nextval('pfcs_panel_detail_seq')
			into STRICT	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			insert into pfcs_detail_bed(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				ds_location,
				cd_department,
				ds_department,
				ds_status,
				ie_status,
				qt_time_blocked,
				ds_reason_blocked)

			values (
				nextval('pfcs_detail_bed_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_w.ds_location,
				c01_w.cd_department,
				c01_w.ds_department,
				c01_w.ds_status,
				c01_w.ie_status,
				c01_w.qt_time_blocked,
				c01_w.ds_reason_blocked);

		end if;

	end;
	end loop;
commit;

end if;

-- Integration tables or both
if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
for c01_f in c01_fhir loop
	begin

		if (c01_f.rule_time < c01_f.qt_time_blocked) then

			qt_beds_w := qt_beds_w + 1;

			select	nextval('pfcs_panel_detail_seq')
			into STRICT	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			insert into pfcs_detail_bed(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_detail,
				ds_location,
				cd_department,
				ds_department,
				ds_status,
				ie_status,
				qt_time_blocked,
				ds_reason_blocked)

			values (
				nextval('pfcs_detail_bed_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				pfcs_panel_detail_seq_w,
				c01_f.ds_location,
				c01_f.cd_department,
				c01_f.ds_department,
				c01_f.ds_status,
				c01_f.ie_status,
				c01_f.qt_time_blocked,
				c01_f.ds_reason_blocked);

		end if;

	end;
	end loop;
commit;

end if;
 := pfcs_pck.pfcs_generate_results(
				vl_indicator_p => qt_beds_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

		CALL pfcs_pck.pfcs_update_detail(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_panel_p => nr_seq_panel_w,
				nr_seq_operational_level_p => nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p);

		CALL pfcs_pck.pfcs_activate_records(
				nr_seq_indicator_p => nr_seq_indicator_p,
				nr_seq_operational_level_p => nr_seq_operational_level_w,
				nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_inactive_beds ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

