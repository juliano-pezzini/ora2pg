-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gap_aprovar_processo ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_etapa_w			bigint;
qt_reprov_w			bigint;
qt_aprov_w			bigint;
ie_etapa_obrigatoria_w		varchar(01);
ie_resultado_w			varchar(01)	:= '';
qtd_doc_obrigatorio_w		bigint;
ie_temp_acces_approval_w	bigint;
nr_days_granted_w		bigint;
dt_validade_w			timestamp		:= null;



BEGIN
select	coalesce(max('S'),'N')
into STRICT	ie_etapa_obrigatoria_w

where	exists (	SELECT 1
		from	gap_processo_etapa a,
			gap_ritual b
		where	b.nr_sequencia	= a.nr_seq_etapa
		and	coalesce(b.ie_obrigatorio,'S') = 'S'
		and	a.nr_seq_processo = nr_sequencia_p);


select	count(*)
into STRICT	qtd_doc_obrigatorio_w
from	GAP_PROCESSO a,
		GAP_PROCESSO_DOC b,
		gap_processo_etapa c
where 	a.nr_sequencia =  b.NR_SEQ_PROCESSO
and 	a.nr_sequencia = c.nr_seq_processo
and  	substr(obter_obrigatoriedade_doc(b.nr_seq_doc),1,1) = 'S'
and   	coalesce(b.DS_ARQUIVO::text, '') = ''
and 	c.ie_resultado <> 'R'
and   	a.nr_sequencia = nr_sequencia_p;

if (qtd_doc_obrigatorio_w = 0) then		
	
	if (ie_etapa_obrigatoria_w = 'S') then
		begin
		select	count(*) qt_etapa,
			coalesce(sum(CASE WHEN a.ie_resultado='R' THEN 1  ELSE 0 END ),0) qt_repr,
			coalesce(sum(CASE WHEN a.ie_resultado='A' THEN 1  ELSE 0 END ),0) qt_Aprov
		into STRICT	qt_etapa_w,
			qt_reprov_w,
			qt_aprov_w
		from	gap_processo_etapa a,
			gap_ritual b
		where	b.nr_sequencia	= a.nr_seq_etapa
		and	coalesce(b.ie_obrigatorio,'S') = 'S'
		and	a.nr_seq_processo = nr_sequencia_p;

		if (qt_etapa_w > 0) and
			((qt_aprov_w + qt_reprov_w) = qt_etapa_w) then
			begin
			ie_resultado_w	:= 'A';
			if (qt_aprov_w <> qt_etapa_w) then	
				ie_resultado_w	:= 'R';
			end if;
			end;
		end if;
		end;
	elsif (ie_etapa_obrigatoria_w = 'N') then
		begin
		select	count(*) qt_etapa,
			coalesce(sum(CASE WHEN a.ie_resultado='R' THEN 1  ELSE 0 END ),0) qt_repr
		into STRICT	qt_etapa_w,
			qt_reprov_w
		from	gap_processo_etapa a,
			gap_ritual b
		where	b.nr_sequencia	= a.nr_seq_etapa
		and	a.nr_seq_processo = nr_sequencia_p;
		ie_resultado_w	:= 'A';
		if (qt_etapa_w > 0) and (qt_reprov_w > 0) then
			ie_resultado_w	:= 'R';
		end if;
		end;
	end if;
	
	select count(1)
	into STRICT ie_temp_acces_approval_w
	from gap_ritual a,
	gap_processo b
	where b.nr_seq_tipo = a.nr_seq_tipo
	and b.nr_sequencia = nr_sequencia_p
	and ie_temp_access_approval = 'S';
	
	select case when(ie_temp_acces_approval_w > 0) then max(nr_days_temp_access)
		else max(nr_days_access) end
		into STRICT nr_days_granted_w
		from gap_tipo a,
		gap_processo b
		where a.nr_sequencia = b.nr_seq_tipo
		and b.nr_sequencia = nr_sequencia_p;
		
	if (ie_resultado_w in ('A','R')) then
		if (ie_resultado_w = 'A') then
			if (ie_temp_acces_approval_w > 0) then
				ie_resultado_w := 'T';
			end if;
			if (nr_days_granted_w > 0) then
				dt_validade_w := (clock_timestamp() + nr_days_granted_w);
			end if;
		end if;
		begin	
		update	gap_processo
		set	ie_resultado		= ie_resultado_w,
			dt_final		= clock_timestamp(),
			dt_atualizacao		= clock_timestamp(),
			dt_validade		=
			(case when dt_validade_w = NULL then (case when ie_resultado_w = 'R' then null else dt_validade end)
			else dt_validade_w end),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_sequencia_p;
		commit;
		end;
	end if;
	
else

	CALL Wheb_mensagem_pck.exibir_mensagem_abort(494669);

end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gap_aprovar_processo ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

