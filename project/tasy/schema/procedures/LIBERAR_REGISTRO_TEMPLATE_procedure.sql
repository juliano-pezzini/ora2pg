-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_registro_template (nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_nao_lib_w				bigint;
nr_atendimento_w			bigint;
nr_seq_reg_template_w		bigint;
ie_finalizar_atendimento_w	varchar(2) := 'N';
hr_inicio_consulta_w		varchar(5);
hr_fim_consulta_w			varchar(5);
cd_medico_w					varchar(10);
ie_medico_resp_w			integer;
ie_medico_w					varchar(1);
nr_sequencia_w				bigint;
nr_seq_templ_w				EHR_REGISTRO.NR_SEQ_TEMPL%TYPE;
nr_seq_item_pront_w         bigint;
ie_gerar_aprovacao_w        bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	ehr_reg_template
	where	nr_seq_reg	= nr_sequencia_p;

C02 CURSOR FOR
	SELECT	b.nr_sequencia
	from	ehr_reg_template a,
			ehr_reg_elemento b,
			ehr_registro c
	where	c.nr_sequencia	= a.nr_seq_reg
	and		a.nr_seq_reg	= nr_sequencia_p
	and		a.nr_sequencia	= b.nr_seq_reg_template
	and		(b.nr_seq_temp_conteudo IS NOT NULL AND b.nr_seq_temp_conteudo::text <> '')
	and		coalesce(b.NR_REGISTRO_CLUSTER::text, '') = ''
	and		not exists (	SELECT	1
							from	ehr_template_conteudo x
							where	x.nr_seq_template	= a.nr_seq_template
							and	b.nr_seq_temp_conteudo	= x.nr_sequencia);


BEGIN

open C02;
loop
fetch C02 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	delete from ehr_reg_elemento
	where	nr_sequencia = nr_sequencia_w;
	end;
end loop;
close C02;

update	ehr_registro
set	dt_liberacao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	nm_usuario_liberacao	= nm_usuario_p
where	nr_sequencia	= nr_sequencia_p;

update	ehr_reg_template
set	dt_liberacao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_seq_reg	= nr_sequencia_p;

open C01;
loop
fetch C01 into
	nr_seq_reg_template_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	update	ehr_reg_elemento
	set	dt_liberacao = clock_timestamp()
	where	nr_seq_reg_template	= nr_seq_reg_template_w
	and coalesce(dt_liberacao::text, '') = '';
	end;
end loop;
close C01;

select	max(b.nr_atendimento),
	max(b.cd_profissional)
into STRICT	nr_atendimento_w,
	cd_medico_w
from	ehr_registro b
where	b.nr_sequencia	= nr_sequencia_p;

select	coalesce(max('S'),'N')
into STRICT	ie_medico_w
from	Medico
where	cd_pessoa_fisica	= cd_medico_w;

select	max(a.ie_finalizar_atendimento)
into STRICT	ie_finalizar_atendimento_w
from	ehr_template a,
	ehr_reg_template b
where	b.nr_seq_template	= a.nr_sequencia
and	nr_seq_reg	= nr_sequencia_p;

if (ie_finalizar_atendimento_w = 'S') then
	begin
	select	max(hr_fim_consulta),
		max(hr_inicio_consulta)
	into STRICT	hr_fim_consulta_w,
		hr_inicio_consulta_w
	from	atendimento_ps_v
	where	nr_atendimento	= nr_atendimento_w;

	select	count(*)
	into STRICT	ie_medico_resp_w
	from	atendimento_ps_v
	where	cd_medico_resp	= cd_medico_w
	and	nr_atendimento	= nr_atendimento_w;

	if ((trim(both hr_inicio_consulta_w) IS NOT NULL AND (trim(both hr_inicio_consulta_w))::text <> '')) and (coalesce(trim(both hr_fim_consulta_w)::text, '') = '') and (ie_medico_w = 'S') and (ie_medico_resp_w > 0) then
		begin
		update	atendimento_paciente
		set	dt_fim_consulta	= clock_timestamp()
		where	nr_atendimento	= nr_atendimento_w;
		end;
	end if;
	end;
end if;
CALL executar_evento_agenda_atend(nr_atendimento_w,'LTP',obter_estab_atend(nr_atendimento_w),nm_usuario_p);
CALL EHR_registrar_sv(nr_sequencia_p,nm_usuario_p);

open C01;
loop
fetch C01 into
	nr_seq_reg_template_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	CALL Gerar_Evolucao_Template(nr_sequencia_p,nr_seq_reg_template_w,nm_usuario_p);
	end;
end loop;
close C01;

commit;


select
    count(*) into STRICT ie_gerar_aprovacao_w
from 
    mult_aprov_item i
where (SELECT ie_situacao from mult_aprov_funcao f where f.nr_sequencia = i.nr_seq_funcao)  = 'A'
and (select count(*) from mult_aprov_prof p where p.nr_seq_item = i.nr_sequencia) > 0
and nr_seq_doc = 685877;

if (ie_gerar_aprovacao_w > 0) then
    SELECT NR_SEQ_ITEM_PRONT INTO STRICT nr_seq_item_pront_w FROM EHR_REGISTRO WHERE NR_SEQUENCIA = nr_sequencia_p;
	CALL gerar_aprovacao_documento('EHR_REGISTRO', 'NR_SEQUENCIA', nr_sequencia_p, nm_usuario_p, nr_seq_item_pront_w);
end if;

select NR_SEQ_TEMPL
into STRICT nr_seq_templ_w
from EHR_REGISTRO
where NR_SEQUENCIA = nr_sequencia_p;

CALL ATUALIZAR_EV_LINHA_CUIDADO('EV', 'EHR_REGISTRO', nr_sequencia_p,
      'nr_seq_template_w='||nr_seq_templ_w||';', obter_pessoa_atendimento(nr_atendimento_w, 'C'), nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_registro_template (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

