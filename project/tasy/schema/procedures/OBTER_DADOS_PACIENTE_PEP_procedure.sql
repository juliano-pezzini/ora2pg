-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_paciente_pep ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, ds_especialidade_p INOUT text, nm_medico_p INOUT text, nr_telef_medico_p INOUT text, ds_email_medico_p INOUT text, ds_setor_p INOUT text, ds_unidade_p INOUT text, ds_convenio_p INOUT text, ds_tipo_sangue_p INOUT text, nm_pessoa_fisica_p INOUT text, ds_fator_rh_p INOUT text, ds_estado_civil_p INOUT text, ds_nacionalidade_p INOUT text, ds_grau_instrucao_p INOUT text, ds_cidade_natal_p INOUT text, nr_telefone_celular_p INOUT text, nr_dd_celular_p INOUT text, qt_altura_cm_p INOUT text, nr_telefone_p INOUT text, ds_endereco_p INOUT text, ds_cidade_p INOUT text, ds_email_p INOUT text, ds_profissao_p INOUT text, ds_empresa_p INOUT text, ds_religiao_p INOUT text, ds_fluencia_port_p INOUT text, ds_idioma_adic_p INOUT text, nr_ramal_p INOUT text, nm_responsavel_p INOUT text, nr_crm_p INOUT text, uf_crm_p INOUT text, nm_pai_p INOUT text, nm_mae_p INOUT text, ds_grau_parentesco_p INOUT text, nr_cpf_p INOUT text, nr_identidade_p INOUT text, ds_tipo_convenio_p INOUT text, ie_tipo_prontuario_p INOUT text, nr_tel_concat_p INOUT text, nr_dd_telefone_p INOUT text, ds_plano_p INOUT text, ds_raca_cor_p INOUT text, ds_inicio_vigencia_p INOUT text, ds_pessoa_referencia_p INOUT text, ds_esp_referencia_p INOUT text, ds_conselho_profissional_p INOUT text, ds_pflegegrad_p INOUT text, ds_grau_parentconjuge_p INOUT text, ds_tipo_custodia_p INOUT text, ie_custodiante_p INOUT text, nm_conjuge_p INOUT text, nr_telefone_conjuge_p INOUT text, nr_tel_mae_p INOUT text, nr_tel_pai_p INOUT text, nr_tel_responsavel_p INOUT text, nm_pessoa_responsavel_p INOUT text, nr_tel_conjuge_p INOUT text, nm_medico_externo_p INOUT text, nr_telefone_medico_externo_p INOUT text, nm_contato_principal_p INOUT text, nr_telefone_principal_p INOUT text, ds_notes_p INOUT text, ds_medicare_p INOUT text, ds_mediexp_p INOUT text, ds_especialidade_me_p INOUT text, ds_municipio_me_p INOUT text, ds_endereco_compl_me_p INOUT text, ds_fax_p INOUT compl_pessoa_fisica.ds_fax%type, ds_telefone_pep_p INOUT text) AS $body$
DECLARE


nr_atendimento_w	bigint;
cd_usuario_convenio_w	varchar(40);
dt_validade_carteira_w	timestamp;
cd_convenio_w			bigint;
nr_cartao_nac_sus_w		varchar(40);
ie_tipo_complemento_w	bigint := 1;
ie_tipo_compl_conj_w	bigint := 3;
cd_estabelecimento_w	bigint;
qt_reg_w				bigint;
ie_sbis_w				varchar(1);
dt_entrada_w			timestamp;
nr_seq_atecaco_w 		bigint;
nr_seq_atepacu_w		bigint;


ds_tipo_sangue_w		varchar(255);
nm_pessoa_fisica_w		varchar(255);
ds_fator_rh_w			varchar(255);
ds_estado_civil_w		varchar(255);
ds_nacionalidade_w		varchar(255);
ds_grau_instrucao_w		varchar(255);
ds_cidade_natal_w		varchar(255);
nr_telefone_celular_w	varchar(255);
qt_altura_cm_w			varchar(255);
nr_telefone_w			varchar(255);
ds_endereco_w			varchar(255);
ds_cidade_w				varchar(255);
ds_email_w				varchar(255);
ds_profissao_w			varchar(255);
ds_empresa_w			varchar(255);
ds_religiao_w			varchar(255);
ds_fluencia_port_w		varchar(255);
ds_idioma_adic_w		varchar(255);
nm_pai_w				varchar(255);
nm_mae_w				varchar(255);
nr_cpf_w				varchar(255);
nr_identidade_w			varchar(255);
ie_tipo_prontuario_w	varchar(255);
nr_tel_concat_w			varchar(255);
nr_dd_telefone_w		varchar(255);
nr_dd_celular_w			varchar(255);
ds_raca_cor_w			varchar(255);
ds_compl_end_w			varchar(255);
ds_endereco2_w			varchar(255);
ds_endereco_australia_w		varchar(4000);
ds_telefone_pep_w		varchar(255);




C01 CURSOR FOR
	SELECT	substr(obter_valor_dominio(1173,ie_tipo_sangue),1,30),
			substr(PEP_obter_nome_sbis(nr_atendimento_w, Obter_Nome_PF_Oculta(cd_pessoa_fisica,obter_perfil_ativo,null)),1,80) nm_pessoa_fisica,
			substr(obter_valor_dominio(117,ie_fator_rh),1,30),
			substr(obter_valor_dominio(5,ie_estado_civil),1,30),
			substr(obter_desc_nacionalidade(cd_nacionalidade),1,30),
			substr(obter_valor_dominio(10,ie_grau_instrucao),1,90),
			substr(obter_naturalidade_pf(cd_pessoa_fisica,'A'),1,55),
			nr_telefone_celular,
			qt_altura_cm,
			substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'T'),1,60),
			substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'M'),1,60),
			coalesce(substr(obter_compl_pf(cd_pessoa_fisica,2,'P'),1,60),substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'P'),1,60)),
			coalesce(substr(obter_compl_pf(cd_pessoa_fisica,2,'S'),1,60),substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'S'),1,60)),
			substr(obter_desc_religiao(cd_religiao),1,60),
			substr(obter_valor_dominio(1343,ie_fluencia_portugues),1,60),
			substr(obter_idioma_adicional(cd_pessoa_fisica),1,2000),
			substr(obter_compl_pf(cd_pessoa_fisica,4,'N'),1,60),
			substr(obter_compl_pf(cd_pessoa_fisica,5,'N'),1,60),
			nr_cpf,
			nr_identidade,
			substr(obter_valor_dominio(1528,ie_tipo_prontuario),1,60),
			CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DIT'),1,60) IS NULL THEN NULL  ELSE '+ '||SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DIT'),1,60)||' ' END
			|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DDT'),1,60) IS NULL THEN NULL  ELSE '('||SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DDT'),1,60)||') ' END  
			|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'T'),1,60)   IS NULL THEN NULL  ELSE SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'T'),1,60) END 
			|| CASE WHEN coalesce(nr_telefone_celular::text, '') = '' THEN ' ('||substr(obter_valor_dominio(5637, ie_tipo_complemento_w), 1, 254)||')'  ELSE CASE WHEN coalesce(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'T')::text, '') = '' THEN NULL  ELSE ' ('||substr(obter_valor_dominio(5637, ie_tipo_complemento_w), 1, 254)||') / ' END   			|| CASE WHEN coalesce(NR_DDI_CELULAR::text, '') = '' THEN NULL  ELSE '+ '||NR_DDI_CELULAR||' ' END  			|| CASE WHEN coalesce(NR_DDD_CELULAR::text, '') = '' THEN NULL  ELSE '('||NR_DDD_CELULAR||') ' END ||nr_telefone_celular||CASE WHEN coalesce(nr_telefone_celular::text, '') = '' THEN null  ELSE ' ('||Wheb_mensagem_pck.get_texto(839507)||') ' END  END ,
			substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DIT'),1,60)||substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DDT'),1,60),
			NR_DDD_CELULAR,
			substr(Obter_Desc_Cor_pele(nr_seq_cor_pele),1,60),
			substr(obter_telefone_concat_pep(cd_pessoa_fisica,ie_tipo_complemento_w,'S'),1,254)
	from	pessoa_fisica_alteracao
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and		dt_atualizacao > dt_entrada_w
	order by dt_atualizacao;



BEGIN
ds_especialidade_p	:= '';
nm_medico_p		:= '';
nr_telef_medico_p	:= '';
ds_email_medico_p	:= '';
ds_setor_p		:= '';
ds_unidade_p		:= '';
ds_convenio_p		:= '';
ds_tipo_sangue_p	:= '';
nm_pessoa_fisica_p	:= '';
ds_fator_rh_p		:= '';
ds_estado_civil_p	:= '';
ds_nacionalidade_p	:= '';
ds_grau_instrucao_p	:= '';
ds_cidade_natal_p	:= '';
nr_telefone_celular_p	:= '';
nr_dd_celular_p     := '';
qt_altura_cm_p		:= '';
nr_telefone_p		:= '';
ds_endereco_p		:= '';
ds_cidade_p		:= '';
ds_email_p		:= '';
ds_profissao_p		:= '';
ds_empresa_p		:= '';
ds_religiao_p		:= '';
ds_fluencia_port_p	:= '';
ds_idioma_adic_p	:= '';
nr_ramal_p		:= '';
nm_responsavel_p	:= '';
nr_crm_p		:= '';
uf_crm_p		:= '';
nm_pai_p		:= '';
nm_mae_p		:= '';
ds_grau_parentesco_p	:= '';
nr_cpf_p		:= '';
nr_identidade_p		:= '';
ds_tipo_convenio_p	:= '';
ie_tipo_prontuario_p	:= '';
nr_tel_concat_p		:= '';
ds_plano_p           := '';
nr_dd_telefone_p     := '';
ds_raca_cor_p		 := '';
ds_pessoa_referencia_p 	:= '';
ds_inicio_vigencia_p 	:= '';
ds_esp_referencia_p	:= '';
ds_conselho_profissional_p := '';
ds_pflegegrad_p := '';
ds_grau_parentconjuge_p	:= '';
ds_tipo_custodia_p 		:= '';
ie_custodiante_p		:= '';
nm_conjuge_p			:= '';		
nr_telefone_conjuge_p	:= '';
nr_tel_mae_p	:= '';
nr_tel_pai_p	:= '';
nr_tel_responsavel_p	:= '';
nm_pessoa_responsavel_p	:= '';
nr_tel_conjuge_p	:= '';
nm_medico_externo_p := '';
nr_telefone_medico_externo_p := '';
nr_telefone_principal_p := '';
nm_contato_principal_p := '';
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
ds_notes_p := '';

ds_medicare_p := '';
ds_mediexp_p :=	 '';

nr_atendimento_w	:= nr_atendimento_p;

if (nr_atendimento_p = 0) then
	select	coalesce(max(a.nr_atendimento),0)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente b,
		unidade_atendimento a
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	a.nr_atendimento	= b.nr_atendimento;
end if;

ie_sbis_w := obter_param_usuario(0, 220, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo, ie_sbis_w);

begin

if (obter_funcao_ativa = 281) then

	Select	coalesce(max(ie_tipo_complemento),1)
	into STRICT	ie_tipo_complemento_w
	from	parametro_medico
	where	cd_estabelecimento = cd_estabelecimento_w;

	If (ie_tipo_complemento_w <> 1) then
		
		select  count(*)
		into STRICT	qt_reg_w
		from 	COMPL_PESSOA_FISICA a
		where 	CD_PESSOA_FISICA = cd_pessoa_fisica_p
		and  	A.IE_TIPO_COMPLEMENTO = ie_tipo_complemento_w;
		
		if (qt_reg_w = 0 ) then
		
				ie_tipo_complemento_w := 1;
		
		end if;
		
	end if;
	
end if;

nr_seq_atecaco_w := obter_atecaco_atendimento(nr_atendimento_w);
nr_seq_atepacu_w := obter_atepacu_paciente(nr_atendimento_w, 'A');

select	substr(obter_nome_setor(a.cd_setor_atendimento),1,100),
	a.cd_unidade_basica || ' ' || a.cd_unidade_compl,
	substr(obter_nome_convenio(b.cd_convenio) ||
	' / ' || Wheb_mensagem_pck.get_texto(1024558) ||
	' ' || cd_usuario_convenio ||
	' ' || Wheb_mensagem_pck.get_texto(1024559) ||
	' ' || to_char(dt_validade_carteira,'dd/mm/yyyy'),1,100),
	e.nr_ramal,
	obter_valor_dominio(11,obter_tipo_convenio(b.cd_convenio)),
	b.cd_usuario_convenio,
	b.dt_validade_carteira,
	b.cd_convenio,
	substr(Obter_Plano_Convenio_Atend(c.nr_atendimento,'D'),1,200)
into STRICT	ds_setor_p,
	ds_unidade_p,
	ds_convenio_p,
	nr_ramal_p,
	ds_tipo_convenio_p,
	cd_usuario_convenio_w,
	dt_validade_carteira_w,
	cd_convenio_w,
   ds_plano_p
FROM atend_categoria_convenio b, atend_paciente_unidade a, atendimento_paciente c
LEFT OUTER JOIN unidade_atendimento e ON (c.nr_atendimento = e.nr_atendimento)
WHERE c.nr_atendimento = b.nr_atendimento and c.nr_atendimento = a.nr_atendimento  and c.nr_atendimento = nr_atendimento_w and b.nr_seq_interno	= nr_seq_atecaco_w and a.nr_seq_interno 	= nr_seq_atepacu_w;

if (Obter_Sigla_Pais_Locale(wheb_usuario_pck.get_nm_usuario) = 'de_DE')then
    select ds_convenio
    into STRICT   ds_convenio_p
    from ( SELECT  coalesce(substr(obter_nome_convenio(b.cd_convenio),1,100), '') ds_convenio
            FROM atend_categoria_convenio b, atend_paciente_unidade a, atendimento_paciente c
LEFT OUTER JOIN unidade_atendimento e ON (c.nr_atendimento = e.nr_atendimento)
WHERE c.nr_atendimento    = b.nr_atendimento and c.nr_atendimento    = a.nr_atendimento  and c.nr_atendimento    = nr_atendimento_p and a.nr_seq_interno 	= obter_atepacu_paciente(nr_atendimento_p, 'A') order by b.nr_prioridade) alias6 LIMIT 1;
	
	ds_plano_p := obter_classif_esp_pac(nr_atendimento_p);
	
end if;


exception
     when others then
		begin

if (wheb_usuario_pck.get_nm_usuario = 'vmsouza') then
        INSERT INTO log_mov(DT_ATUALIZACAO , NM_USUARIO, DS_LOG, CD_LOG) VALUES (clock_timestamp(), 'vmsouza','2.0' , 722);
         end if;
		select	ds_setor_atendimento,
			ds_unidade,
			substr(ds_convenio ||
			' / ' || Wheb_mensagem_pck.get_texto(1024558) ||
			' ' || Obter_Dados_Categ_Conv(nr_atendimento_w,'U') ||
			' ' || Wheb_mensagem_pck.get_texto(1024559) ||
			' ' || Obter_Dados_Categ_Conv(nr_atendimento_w,'V'),1,100),
			null,
			obter_valor_dominio(11,obter_tipo_convenio(cd_convenio)),
			cd_usuario_convenio,
			Obter_Dados_Categ_Conv(nr_atendimento_w,'V'),
			cd_convenio
		into STRICT	ds_setor_p,
			ds_unidade_p,
			ds_convenio_p,
			nr_ramal_p,
			ds_tipo_convenio_p,
			cd_usuario_convenio_w,
			dt_validade_carteira_w,
			cd_convenio_w
		from	atendimento_ps_v
		where 	nr_atendimento = nr_atendimento_w;
		exception
		     when others then
			ds_setor_p	:= null;
		end;

end;



if (pkg_i18n.get_user_locale	= 'en_AU' or pkg_i18n.get_user_locale	= 'ja_JP') then

begin
	select	get_complete_address_desc(nr_seq_pessoa_endereco, cd_pessoa_fisica, ie_tipo_complemento, null, null,'Y')
	into STRICT	ds_endereco_australia_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	ie_tipo_complemento = ie_tipo_complemento_w;
	
	exception
	when others then
		ds_endereco_australia_w	:= null;
	end;

end if;

begin
Select	substr(obter_valor_dominio(1173,ie_tipo_sangue),1,30),
	substr(PEP_obter_nome_sbis(nr_atendimento_w, Obter_Nome_PF_Oculta(cd_pessoa_fisica,obter_perfil_ativo,null)),1,80) nm_pessoa_fisica,
	substr(obter_valor_dominio(117,ie_fator_rh),1,30),
	substr(obter_valor_dominio(5,ie_estado_civil),1,30),
	substr(obter_desc_nacionalidade(cd_nacionalidade),1,30),
	substr(obter_valor_dominio(10,ie_grau_instrucao),1,90),
	--substr(obter_desc_cep_loc(NR_CEP_CIDADE_NASC),1,50) ||' - '|| substr(obter_uf_localidade(NR_CEP_CIDADE_NASC),1,2),
	substr(obter_naturalidade_pf(cd_pessoa_fisica,'A'),1,55),
	nr_telefone_celular,
	qt_altura_cm,
	substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'T'),1,60),
	substr(CASE WHEN  pkg_i18n.get_user_locale ='en_AU' THEN coalesce(ds_endereco_australia_w,obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'ENCB')) WHEN  pkg_i18n.get_user_locale ='ja_JP' THEN coalesce(ds_endereco_australia_w,obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'ENCB'))  ELSE obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'LES') END ,1,220),
	substr(CASE WHEN  pkg_i18n.get_user_locale ='en_AU' THEN (Obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'CEP')  || ' - ' || Obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DS_UF')  || ' , ' || Obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'PAIS'))  ELSE obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'CCE') END ,1,220),
	substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'M'),1,60),
  coalesce(OBTER_PROFISSAO_PF(cd_pessoa_fisica),coalesce(coalesce(substr(obter_compl_pf(cd_pessoa_fisica,2,'P'),1,60),substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'P'),1,60)), substr(obter_desc_cargo(cd_cargo),1,60))),
	coalesce(substr(obter_compl_pf(cd_pessoa_fisica,2,'S'),1,60),substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'S'),1,60)),
	substr(obter_desc_religiao(cd_religiao),1,60),
	substr(obter_valor_dominio(1343,ie_fluencia_portugues),1,60),
	substr(obter_idioma_adicional(cd_pessoa_fisica),1,2000),
	substr(obter_compl_pf(cd_pessoa_fisica,4,'N'),1,60),
	substr(obter_compl_pf(cd_pessoa_fisica,5,'N'),1,60),
	coalesce(nr_cpf,cd_curp),
	coalesce(nr_identidade,cd_rfc),
	substr(obter_valor_dominio(1528,ie_tipo_prontuario),1,60),
	CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica, ie_tipo_complemento_w,'DIT'),1,60) IS NULL THEN NULL  ELSE CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica, ie_tipo_complemento_w,'DDT'),1,60) IS NULL THEN NULL  ELSE CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica, ie_tipo_complemento_w,'T'),1,60)   IS NULL THEN NULL  ELSE '+ '||SUBSTR(obter_compl_pf(cd_pessoa_fisica, ie_tipo_complemento_w,'DIT'),1,60)			||' ('||SUBSTR(obter_compl_pf(cd_pessoa_fisica, ie_tipo_complemento_w,'DDT'),1,60)||') '  			|| SUBSTR(obter_compl_pf(cd_pessoa_fisica, ie_tipo_complemento_w,'T'),1,60) END  END  END 
	|| CASE WHEN coalesce(nr_telefone_celular::text, '') = '' THEN ''  ELSE CASE WHEN coalesce(obter_compl_pf(cd_pessoa_fisica, ie_tipo_complemento_w,'T')::text, '') = '' THEN NULL  ELSE ' ('||substr(obter_valor_dominio(5637,  ie_tipo_complemento_w), 1, 254)||') / ' END   	|| CASE WHEN coalesce(NR_DDI_CELULAR::text, '') = '' THEN NULL  ELSE '+ '||NR_DDI_CELULAR||' ' END  	|| CASE WHEN coalesce(NR_DDD_CELULAR::text, '') = '' THEN NULL  ELSE '('||NR_DDD_CELULAR||') ' END ||nr_telefone_celular||CASE WHEN coalesce(nr_telefone_celular::text, '') = '' THEN null  ELSE ' ('||Wheb_mensagem_pck.get_texto(839507)||')' END  END ,
	nr_cartao_nac_sus,
	substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DIT'),1,60)||substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'DDT'),1,60),
	NR_DDD_CELULAR,
	(CASE WHEN (obter_pflegegrad(cd_pessoa_fisica, nr_atendimento_w) IS NOT NULL AND (obter_pflegegrad(cd_pessoa_fisica, nr_atendimento_w))::text <> '') THEN obter_desc_pflegegrad(cd_pessoa_fisica, nr_atendimento_w) ELSE null END) ds_pflegegrad,
	substr(Obter_Desc_Cor_pele(nr_seq_cor_pele),1,60),
	substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'GP'),1,60),
	substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'TC'),1,60),
	obter_valor_dominio(8070,substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'IEC'),1,60)),
	substr(obter_compl_pf(cd_pessoa_fisica,6,'N'),1,60),
	CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'DIT'),1,60) IS NULL THEN NULL  ELSE '+ '||SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'DIT'),1,60)||' ' END 
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'DDT'),1,60) IS NULL THEN NULL  ELSE '('||SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'DDT'),1,60)||') ' END  
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'T'),1,60)   IS NULL THEN NULL  ELSE SUBSTR(obter_compl_pf(cd_pessoa_fisica,ie_tipo_compl_conj_w,'T'),1,60) END ,
	CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,5,'DIT'),1,60) IS NULL THEN NULL  ELSE '+ '||SUBSTR(obter_compl_pf(cd_pessoa_fisica,5,'DIT'),1,60)||' ' END 
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,5,'DDT'),1,60) IS NULL THEN NULL  ELSE '('||SUBSTR(obter_compl_pf(cd_pessoa_fisica,5,'DDT'),1,60)||') ' END  
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,5,'T'),1,60)   IS NULL THEN NULL  ELSE SUBSTR(obter_compl_pf(cd_pessoa_fisica,5,'T'),1,60) END ,
	CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,4,'DIT'),1,60) IS NULL THEN NULL  ELSE '+ '||SUBSTR(obter_compl_pf(cd_pessoa_fisica,4,'DIT'),1,60)||' ' END 
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,4,'DDT'),1,60) IS NULL THEN NULL  ELSE '('||SUBSTR(obter_compl_pf(cd_pessoa_fisica,4,'DDT'),1,60)||') ' END  
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,4,'T'),1,60)   IS NULL THEN NULL  ELSE SUBSTR(obter_compl_pf(cd_pessoa_fisica,4,'T'),1,60) END ,
	CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,3,'DIT'),1,60) IS NULL THEN NULL  ELSE '+ '||SUBSTR(obter_compl_pf(cd_pessoa_fisica,3,'DIT'),1,60)||' ' END 
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,3,'DDT'),1,60) IS NULL THEN NULL  ELSE '('||SUBSTR(obter_compl_pf(cd_pessoa_fisica,3,'DDT'),1,60)||') ' END  
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,3,'T'),1,60)   IS NULL THEN NULL  ELSE SUBSTR(obter_compl_pf(cd_pessoa_fisica,3,'T'),1,60) END ,
	CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,6,'DIT'),1,60) IS NULL THEN NULL  ELSE '+ '||SUBSTR(obter_compl_pf(cd_pessoa_fisica,6,'DIT'),1,60)||' ' END 
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,6,'DDT'),1,60) IS NULL THEN NULL  ELSE '('||SUBSTR(obter_compl_pf(cd_pessoa_fisica,6,'DDT'),1,60)||') ' END  
	|| CASE WHEN SUBSTR(obter_compl_pf(cd_pessoa_fisica,6,'T'),1,60)   IS NULL THEN NULL  ELSE SUBSTR(obter_compl_pf(cd_pessoa_fisica,6,'T'),1,60) END ,
	substr(obter_compl_pf(cd_pessoa_fisica,3,'N'),1,60),
	substr(obter_dados_medico_externo(cd_pessoa_fisica, 'N'),1,60),
	substr(obter_dados_medico_externo(cd_pessoa_fisica, 'T'),1,60),
	substr(get_insurance_holder_value(cd_pessoa_fisica,null,12,'M',null),1,30), 
	PKG_DATE_FORMATERS.to_varchar(get_ins_rec_strt_exp_date(cd_pessoa_fisica,12,'E'), 'shortDate', wheb_usuario_pck.get_cd_estabelecimento,wheb_usuario_pck.get_nm_usuario),
	substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'EN'),1,220),
	substr(obter_compl_pf(cd_pessoa_fisica,ie_tipo_complemento_w,'NREND'),1,220),
    substr(obter_dados_medico_externo(cd_pessoa_fisica, 'ESP'),1,60),
    substr(obter_dados_medico_externo(cd_pessoa_fisica, 'C'),1,60),
    substr(obter_dados_medico_externo(cd_pessoa_fisica, 'E'),1,250),
	substr(obter_telefone_concat_pep(cd_pessoa_fisica,ie_tipo_complemento_w),1,254)

into STRICT	ds_tipo_sangue_p,
	nm_pessoa_fisica_p,
	ds_fator_rh_p,
	ds_estado_civil_p,
	ds_nacionalidade_p,
	ds_grau_instrucao_p,
	ds_cidade_natal_p,
	nr_telefone_celular_p,
	qt_altura_cm_p,
	nr_telefone_p,
	ds_endereco_p,
	ds_cidade_p,
	ds_email_p,
	ds_profissao_p,
	ds_empresa_p,
	ds_religiao_p,
	ds_fluencia_port_p,
	ds_idioma_adic_p,
	nm_pai_p,
	nm_mae_p,
	nr_cpf_p,
	nr_identidade_p,
	ie_tipo_prontuario_p,
	nr_tel_concat_p,
	nr_cartao_nac_sus_w,
	nr_dd_telefone_p,
	nr_dd_celular_p,
	ds_pflegegrad_p,
	ds_raca_cor_p,
	ds_grau_parentconjuge_p,
	ds_tipo_custodia_p, 	
	ie_custodiante_p,
	nm_conjuge_p,	
	nr_telefone_conjuge_p,
	nr_tel_mae_p,
	nr_tel_pai_p,
	nr_tel_responsavel_p,
	nr_tel_conjuge_p,
	nm_pessoa_responsavel_p,
	nm_medico_externo_p,
	nr_telefone_medico_externo_p,
	ds_medicare_p,
	ds_mediexp_p,
	ds_endereco2_w,
	ds_compl_end_w,
    ds_especialidade_me_p,
    ds_municipio_me_p,
    ds_endereco_compl_me_p,
	ds_telefone_pep_p
   
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_p;
exception
     when others then
		ds_tipo_sangue_p	:= null;
end;

select 	max(a.ds_fax)
into STRICT 	ds_fax_p
from 	compl_pessoa_fisica a
where 	a.cd_pessoa_fisica = cd_pessoa_fisica_p
and 	(a.ds_fax IS NOT NULL AND a.ds_fax::text <> '');

begin
select cpf.nm_contato,
       cpf.nr_telefone
into STRICT   nm_contato_principal_p,
       nr_telefone_principal_p
from (SELECT cpf.nm_contato, cpf.nr_telefone
from compl_pessoa_fisica cpf
where cpf.CD_PESSOA_FISICA = cd_pessoa_fisica_p and ie_tipo_complemento = 3
order by case when ie_contato_principal = 'S' then 0 else 1 end) cpf LIMIT 1;
exception
    when others then
      nm_contato_principal_p := null;
      nr_telefone_principal_p := null;
end;

if (nr_cartao_nac_sus_w IS NOT NULL AND nr_cartao_nac_sus_w::text <> '') and (coalesce(cd_usuario_convenio_w::text, '') = '') and (obter_tipo_convenio(cd_convenio_w)	= 3) then
	ds_convenio_p	:= substr(obter_nome_convenio(cd_convenio_w)||
			' / CNS: ' ||nr_cartao_nac_sus_w ||
			' Val: ' || Obter_Dados_Categ_Conv(nr_atendimento_w,'V'),1,100);
end if;

begin
select	coalesce(substr(Obter_Espec_medico_atend(nr_atendimento,cd_medico_resp,'D'),1,50),substr(obter_especialidade_medico(cd_medico_resp,'D'),1,50)),
	substr(obter_nome_medico(cd_medico_resp,'N'),1,60),
	substr(obter_compl_pf(cd_medico_resp,2,'T'),1,20),
	substr(obter_compl_pf(cd_medico_resp,2,'M'),1,60),
	substr(Obter_Dados_Responsavel(nr_atendimento,'N'),1,60),
	substr(Obter_Dados_Responsavel(nr_atendimento,'GP'),1,60),
	substr(OBTER_DADOS_MEDICO(cd_medico_resp,'CRM'),1,60),
	substr(OBTER_DADOS_MEDICO(cd_medico_resp,'UFCRM'),1,60),
	coalesce(substr(OBTER_DADOS_MEDICO(cd_medico_resp,'SGCRM'),1,100),Wheb_mensagem_pck.get_texto(356410)),
	ds_observacao
into STRICT	ds_especialidade_p,
	nm_medico_p,
	nr_telef_medico_p,
	ds_email_medico_p,
	nm_responsavel_p,
	ds_grau_parentesco_p,
	nr_crm_p,
	uf_crm_p,
	ds_conselho_profissional_p,
	ds_notes_p
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_w;
exception
     when others then
		ds_especialidade_p	:= null;
end;

begin
SELECT	to_char(MAX(a.dt_inicio_vigencia), 'dd/mm/yyyy hh24:mi:ss'),
	max(substr(obter_nome_pf_pj(a.cd_pessoa_ref, null),1,255)),
	max(obter_especialidade_ref(a.cd_especialidade_referencia))
into STRICT	ds_inicio_vigencia_p,
	ds_pessoa_referencia_p,
	ds_esp_referencia_p
FROM	pessoa_classif a
WHERE	a.nr_sequencia  = (  SELECT	MAX(b.nr_sequencia)
		  	   FROM		pessoa_classif b
			   WHERE	b.cd_pessoa_fisica = cd_pessoa_fisica_p
			   and		clock_timestamp() between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia, clock_timestamp())
			   and		(b.dt_inicio_vigencia IS NOT NULL AND b.dt_inicio_vigencia::text <> ''));
exception
     when others then
		ds_inicio_vigencia_p	:= null;
		ds_pessoa_referencia_p	:= null;
		ds_esp_referencia_p	:= null;
end;

if (ie_sbis_w = 'S') and (nr_atendimento_p > 0) then
	select	max(dt_entrada)
	into STRICT	dt_entrada_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	select	count(1)
	into STRICT	qt_reg_w
	from	pessoa_fisica_alteracao
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and		dt_atualizacao > dt_entrada_w;
	
	SELECT	max(substr(ds_endereco,1,255))
	INTO STRICT	ds_endereco_w
	FROM (SELECT	SUBSTR(Sus_Obter_Desc_TipoLog(cd_tipo_logradouro),1,40)||' '||ds_endereco || ' ' ||
					CASE WHEN coalesce(nr_endereco::text, '') = '' THEN ' - '  ELSE ', '|| TO_CHAR(nr_endereco) END  || ' ' ||
					ds_bairro || ' ' || ds_complemento ds_endereco
			FROM	compl_pessoa_fisica_hist a
			WHERE	a.cd_pessoa_fisica = cd_pessoa_fisica_p
			AND		a.ie_tipo_complemento = ie_tipo_complemento_w
			AND		a.dt_atualizacao > dt_entrada_w
			ORDER	BY a.nr_sequencia DESC) alias6 LIMIT 1;
	
	SELECT	max(substr(ds_descricao,1,255))
	INTO STRICT	ds_cidade_w
	FROM (SELECT a.cd_cep ||' - '||a.ds_municipio||' - '||a.sg_estado ds_descricao
			 FROM	compl_pessoa_fisica_hist a
			 WHERE	a.cd_pessoa_fisica 		= cd_pessoa_fisica_p
			 AND	a.ie_tipo_complemento 	= ie_tipo_complemento_w
			 AND		a.dt_atualizacao > dt_entrada_w
			 ORDER	BY a.nr_sequencia DESC) alias2 LIMIT 1;
	
	ds_endereco_p			:= coalesce(ds_endereco_w,ds_endereco_p);
	ds_cidade_p				:= coalesce(ds_cidade_w,ds_cidade_p);
	
	if (qt_reg_w > 0) then
	
		open C01;
		loop
		fetch C01 into	
			ds_tipo_sangue_w,
			nm_pessoa_fisica_w,
			ds_fator_rh_w,
			ds_estado_civil_w,
			ds_nacionalidade_w,
			ds_grau_instrucao_w,
			ds_cidade_natal_w,
			nr_telefone_celular_w,
			qt_altura_cm_w,
			nr_telefone_w,
			ds_email_w,
			ds_profissao_w,
			ds_empresa_w,
			ds_religiao_w,
			ds_fluencia_port_w,
			ds_idioma_adic_w,
			nm_pai_w,
			nm_mae_w,
			nr_cpf_w,
			nr_identidade_w,
			ie_tipo_prontuario_w,
			nr_tel_concat_w,
			nr_dd_telefone_w,
			nr_dd_celular_w,
			ds_raca_cor_w,
			ds_telefone_pep_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ds_tipo_sangue_p		:= coalesce(ds_tipo_sangue_w,ds_tipo_sangue_p);
			nm_pessoa_fisica_p		:= coalesce(nm_pessoa_fisica_w,nm_pessoa_fisica_p);
			ds_fator_rh_p			:= coalesce(ds_fator_rh_w,ds_fator_rh_p);
			ds_estado_civil_p		:= coalesce(ds_estado_civil_w,ds_estado_civil_p);
			ds_nacionalidade_p		:= coalesce(ds_nacionalidade_w,ds_nacionalidade_p);
			ds_grau_instrucao_p		:= coalesce(ds_grau_instrucao_w,ds_grau_instrucao_p);
			ds_cidade_natal_p		:= coalesce(ds_cidade_natal_w,ds_cidade_natal_p);
			nr_telefone_celular_p	:= coalesce(nr_telefone_celular_w,nr_telefone_celular_p);
			qt_altura_cm_p			:= coalesce(qt_altura_cm_w,qt_altura_cm_p);
			nr_telefone_p			:= coalesce(nr_telefone_w,nr_telefone_p);
			ds_email_p				:= coalesce(ds_email_w,ds_email_p);
			ds_profissao_p			:= coalesce(ds_profissao_w, ds_profissao_p);
			ds_empresa_p			:= coalesce(ds_empresa_w, ds_empresa_p);
			ds_religiao_p			:= coalesce(ds_religiao_w, ds_religiao_p);
			ds_fluencia_port_p		:= coalesce(ds_fluencia_port_w, ds_fluencia_port_p);
			ds_idioma_adic_p		:= coalesce(ds_idioma_adic_w, ds_idioma_adic_p);
			nm_pai_p				:= coalesce(nm_pai_w, nm_pai_p);
			nm_mae_p				:= coalesce(nm_mae_w, nm_mae_p);
			nr_cpf_p				:= coalesce(nr_cpf_w, nr_cpf_p);
			nr_identidade_p			:= coalesce(nr_identidade_w, nr_identidade_p);
			ie_tipo_prontuario_p	:= coalesce(ie_tipo_prontuario_w, ie_tipo_prontuario_p);
			nr_tel_concat_p			:= coalesce(nr_tel_concat_w, nr_tel_concat_p);
			nr_dd_telefone_p		:= coalesce(nr_dd_telefone_w, nr_dd_telefone_p);
			nr_dd_celular_p			:= coalesce(nr_dd_celular_w, nr_dd_celular_p);
			ds_raca_cor_p			:= coalesce(ds_raca_cor_w, ds_raca_cor_p);
			ds_telefone_pep_p		:= coalesce(ds_telefone_pep_w,ds_telefone_pep_p);
			end;
		end loop;
		close C01;
		
	end if;
	
end if;

	if (Obter_Sigla_Pais_Locale(wheb_usuario_pck.get_nm_usuario) = 'de_DE') then
			ds_endereco_p := ds_endereco2_w || ', ' || ds_compl_end_w;
	end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_paciente_pep ( nr_atendimento_p bigint, cd_pessoa_fisica_p text, ds_especialidade_p INOUT text, nm_medico_p INOUT text, nr_telef_medico_p INOUT text, ds_email_medico_p INOUT text, ds_setor_p INOUT text, ds_unidade_p INOUT text, ds_convenio_p INOUT text, ds_tipo_sangue_p INOUT text, nm_pessoa_fisica_p INOUT text, ds_fator_rh_p INOUT text, ds_estado_civil_p INOUT text, ds_nacionalidade_p INOUT text, ds_grau_instrucao_p INOUT text, ds_cidade_natal_p INOUT text, nr_telefone_celular_p INOUT text, nr_dd_celular_p INOUT text, qt_altura_cm_p INOUT text, nr_telefone_p INOUT text, ds_endereco_p INOUT text, ds_cidade_p INOUT text, ds_email_p INOUT text, ds_profissao_p INOUT text, ds_empresa_p INOUT text, ds_religiao_p INOUT text, ds_fluencia_port_p INOUT text, ds_idioma_adic_p INOUT text, nr_ramal_p INOUT text, nm_responsavel_p INOUT text, nr_crm_p INOUT text, uf_crm_p INOUT text, nm_pai_p INOUT text, nm_mae_p INOUT text, ds_grau_parentesco_p INOUT text, nr_cpf_p INOUT text, nr_identidade_p INOUT text, ds_tipo_convenio_p INOUT text, ie_tipo_prontuario_p INOUT text, nr_tel_concat_p INOUT text, nr_dd_telefone_p INOUT text, ds_plano_p INOUT text, ds_raca_cor_p INOUT text, ds_inicio_vigencia_p INOUT text, ds_pessoa_referencia_p INOUT text, ds_esp_referencia_p INOUT text, ds_conselho_profissional_p INOUT text, ds_pflegegrad_p INOUT text, ds_grau_parentconjuge_p INOUT text, ds_tipo_custodia_p INOUT text, ie_custodiante_p INOUT text, nm_conjuge_p INOUT text, nr_telefone_conjuge_p INOUT text, nr_tel_mae_p INOUT text, nr_tel_pai_p INOUT text, nr_tel_responsavel_p INOUT text, nm_pessoa_responsavel_p INOUT text, nr_tel_conjuge_p INOUT text, nm_medico_externo_p INOUT text, nr_telefone_medico_externo_p INOUT text, nm_contato_principal_p INOUT text, nr_telefone_principal_p INOUT text, ds_notes_p INOUT text, ds_medicare_p INOUT text, ds_mediexp_p INOUT text, ds_especialidade_me_p INOUT text, ds_municipio_me_p INOUT text, ds_endereco_compl_me_p INOUT text, ds_fax_p INOUT compl_pessoa_fisica.ds_fax%type, ds_telefone_pep_p INOUT text) FROM PUBLIC;

