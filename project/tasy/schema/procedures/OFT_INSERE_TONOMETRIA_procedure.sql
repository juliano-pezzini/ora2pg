-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oft_insere_tonometria ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaTonometria strRecTypeFormOft) AS $body$
DECLARE


nr_sequencia_w			oft_tonometria.nr_sequencia%type;
cd_equipamento_w		oft_tonometria.cd_equipamento%type;
ds_observacao_w		oft_tonometria.ds_observacao%type;
dt_exame_w				oft_tonometria.dt_exame%type;
ie_tipo_tonometria_w	oft_tonometria.ie_tipo_tonometria%type := 0;
vl_pressao_od_w		oft_tonometria.vl_pressao_od%type;
vl_pressao_oe_w		oft_tonometria.vl_pressao_oe%type;
cd_profissional_w		oft_tonometria.cd_profissional%type;
nm_usuario_w			usuario.nm_usuario%type := wheb_usuario_pck.get_nm_usuario;
ie_registrado_w		varchar(1) := 'N';
ds_erro_w				varchar(4000);

BEGIN
begin

if (coalesce(nr_seq_consulta_p,0) > 0) and (vListaTonometria.count > 0) then
	for i in 1..vListaTonometria.count loop
		begin
		if (vListaTonometria[i].nr_seq_visao in (21953,88268)) then
			ie_tipo_tonometria_w := 2;
		elsif (vListaTonometria[i].nr_seq_visao = 86159) then
			ie_tipo_tonometria_w := 1;
		end if;

		if (vListaTonometria[i](.ds_valor IS NOT NULL AND .ds_valor::text <> '')) or (vListaTonometria[i](.nr_valor IS NOT NULL AND .nr_valor::text <> '')) then
			case upper(vListaTonometria[i].nm_campo)
				when 'CD_PROFISSIONAL' then
					cd_profissional_w	:= vListaTonometria[i].ds_valor;
				when 'DT_EXAME' then
					dt_exame_w 	:= pkg_date_utils.get_DateTime(vListaTonometria[i].ds_valor);
				when 'CD_EQUIPAMENTO' then
					cd_equipamento_w 	:= vListaTonometria[i].nr_valor;
					ie_registrado_w	:= 'S';
				when 'DS_OBSERVACAO' then
					ds_observacao_w 	:= vListaTonometria[i].ds_valor;
					ie_registrado_w	:= 'S';
				when 'VL_PRESSAO_OD' then
					vl_pressao_od_w 	:= vListaTonometria[i].nr_valor;
					ie_registrado_w	:= 'S';
				when 'VL_PRESSAO_OE' then
					vl_pressao_oe_w 	:= vListaTonometria[i].nr_valor;
					ie_registrado_w	:= 'S';
				else
					null;
			end case;
		end if;
		end;
	end loop;

	select	max(nr_sequencia)
	into STRICT		nr_sequencia_w
	from		oft_tonometria
	where		nr_seq_consulta_form = nr_seq_consulta_form_p
	and		nr_seq_consulta		= nr_seq_consulta_p
	and		ie_tipo_tonometria	= ie_tipo_tonometria_w
	and		coalesce(dt_liberacao::text, '') = ''
	and		nm_usuario				= nm_usuario_w;

	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		update	oft_tonometria
		set		dt_atualizacao		= 	clock_timestamp(),
					nm_usuario			=	nm_usuario_w,
					cd_profissional	= coalesce(cd_profissional_w,cd_profissional),
					dt_exame				=	coalesce(dt_exame_w,dt_exame),
					vl_pressao_od		=	vl_pressao_od_w,
					vl_pressao_oe		=	vl_pressao_oe_w,
					ds_observacao		=	ds_observacao_w,
					cd_equipamento		=	cd_equipamento_w
		where		nr_sequencia		=	nr_sequencia_w;
		CALL wheb_usuario_pck.set_ie_commit('S');
	else
		if (ie_registrado_w = 'S') then
			CALL wheb_usuario_pck.set_ie_commit('S');
			select	nextval('oft_tonometria_seq')
			into STRICT		nr_sequencia_w
			;

			insert	into oft_tonometria(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													dt_atualizacao_nrec,
													nm_usuario_nrec,
													dt_exame,
													ie_tipo_tonometria,
													vl_pressao_od,
													vl_pressao_oe,
													nr_seq_consulta,
													cd_profissional,
													ie_situacao,
													ds_observacao,
													cd_equipamento,
													nr_seq_consulta_form)
			values (	nr_sequencia_w,
													clock_timestamp(),
													nm_usuario_w,
													clock_timestamp(),
													nm_usuario_w,
													coalesce(dt_exame_w,clock_timestamp()),
													ie_tipo_tonometria_w,
													vl_pressao_od_w,
													vl_pressao_oe_w,
													nr_seq_consulta_p,
													coalesce(cd_profissional_w,obter_pf_usuario(nm_usuario_w,'C')),
													'A',
													ds_observacao_w,
													cd_equipamento_w,
													nr_seq_consulta_form_p);
		end if;
	end if;
end if;

exception
when others then
	ds_erro_w	:= substr(sqlerrm,1,4000);
	update	OFT_CONSULTA_FORMULARIO
	set		ds_stack			=	substr(dbms_utility.format_call_stack||ds_erro_w,1,4000)
	where		nr_sequencia	= 	nr_seq_consulta_form_p;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oft_insere_tonometria ( nr_seq_consulta_p bigint, nr_seq_consulta_form_p bigint, vListaTonometria strRecTypeFormOft) FROM PUBLIC;

