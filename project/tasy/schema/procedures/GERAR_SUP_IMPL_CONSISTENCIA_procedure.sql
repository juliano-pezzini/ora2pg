-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_sup_impl_consistencia ( ie_tipo_virada_p bigint, ie_sistema_ant_p text) AS $body$
DECLARE


/*ie_tipo_virada_p
0	saldo normal
1	saldo consignado
2	cm
5	consumo entrada
6	Lote fornecedor
7	Saldo estoque lote
55	consumo saida*/
nr_sequencia_w		bigint;
ie_linha_w		integer;
cd_estabelecimento_w	integer;
cd_local_estoque_w	smallint;
cd_material_w		integer;
cd_material_estoque_w	integer;
cd_material_planilha_w	varchar(20);
cd_fornecedor_w		varchar(14);
qt_estoque_w		double precision;
vl_estoque_w		double precision;
vl_ultima_compra_w	double precision;
qt_existe_w		integer;
ie_material_estoque_w	varchar(1);
ie_consignado_w		varchar(1);
ie_situacao_w		varchar(1);
ds_materiais_w		varchar(255);
ie_prim_vez_w		varchar(1);
cd_local_ant_w		smallint;
qt_reg_w		bigint;
dt_validade_w		sup_impl_estoque.dt_validade%type;
nr_seq_lote_w		material_lote_fornec.nr_sequencia%type;
ie_consiste_ds_barras_w		varchar(1);
ds_barras_w			varchar(4000);
ds_lote_fornec_w		varchar(20);
qt_lotes_ds_barras_w		bigint;
ie_estoque_lote_w   material_estab.ie_estoque_lote%type;

c01 CURSOR FOR
SELECT	nr_sequencia nr_sequencia,
	row_number() OVER () AS ie_linha,
	cd_estabelecimento cd_estabelecimento,
	cd_local_estoque cd_local_estoque,
	trim(both cd_material_planilha) cd_material_planilha,
	qt_estoque qt_estoque,
	(vl_custo_medio * qt_estoque) vl_estoque,
	vl_ultima_compra vl_ultima_compra,
	coalesce(cd_fornecedor, 'X') cd_fornecedor,
	dt_validade dt_validade,
	ds_barras ds_barras,
	ds_lote_fornec ds_lote_fornec
from	sup_impl_estoque
where (coalesce(qt_estoque, 0) > 0)
and	ie_tipo_virada_p <> 2

union all

SELECT	nr_sequencia nr_sequencia,
	row_number() OVER () AS ie_linha,
	cd_estabelecimento cd_estabelecimento,
	0 cd_local_estoque,
	trim(both cd_material_planilha) cd_material_planilha,
	0 qt_estoque,
	vl_custo_medio vl_estoque,
	0 vl_ultima_compra,
	'X' cd_fornecedor,
	dt_validade dt_validade,
	ds_barras ds_barras,
	ds_lote_fornec ds_lote_fornec
from	sup_impl_estoque
where	ie_tipo_virada_p = 2;

c02 CURSOR FOR
SELECT	b.cd_material_estoque cd_material_estoque
from	material b,
	material_estab a
where	a.cd_material = b.cd_material
and	b.ie_situacao	= 'A'
and	coalesce(a.cd_sistema_ant,b.cd_sistema_ant) like cd_material_planilha_w
and	a.cd_estabelecimento = cd_estabelecimento_w
group by b.cd_material_estoque

union

SELECT	a.cd_material_estoque
from	material a
where	a.ie_situacao	= 'A'
and	a.cd_sistema_ant like cd_material_planilha_w
and	not exists (	select	1
			from	material_estab x
			where	x.cd_material = a.cd_material
			and	x.cd_estabelecimento = cd_estabelecimento_w)
group by a.cd_material_estoque;

BEGIN
ie_prim_vez_w	:= 'S';
cd_local_ant_w	:= 0;
qt_reg_w	:= 0;

delete from sup_impl_consistencia;
commit;

for c01_row in c01 loop
begin

	nr_sequencia_w		:= c01_row.nr_sequencia;
	ie_linha_w		:= c01_row.ie_linha;
	cd_estabelecimento_w	:= c01_row.cd_estabelecimento;
	cd_local_estoque_w	:= c01_row.cd_local_estoque;
	cd_material_planilha_w	:= c01_row.cd_material_planilha;
	qt_estoque_w		:= c01_row.qt_estoque;
	vl_estoque_w		:= c01_row.vl_estoque;
	vl_ultima_compra_w	:= c01_row.vl_ultima_compra;
	cd_fornecedor_w		:= c01_row.cd_fornecedor;
	dt_validade_w		:= c01_row.dt_validade;
	ds_barras_w		:= c01_row.ds_barras;
	ds_lote_fornec_w	:= c01_row.ds_lote_fornec;

	/*-----------------------------consistencias gerais-------------------------------------*/


	/*-----consitencia a ser feita uma unica vez por arquivo-----*/

	if (ie_prim_vez_w = 'S') then
		begin

		ie_prim_vez_w	:= 'N';

		select	count(*)
		into STRICT	qt_existe_w
		from	parametro_estoque
		where	cd_estabelecimento = cd_estabelecimento_w;
		if (qt_existe_w = 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '7', WHEB_MENSAGEM_PCK.get_texto(280077) || WHEB_MENSAGEM_PCK.get_texto(280078) || cd_estabelecimento_w);
		end if;

		select coalesce(max(1),0)
		into STRICT	qt_existe_w
		
		where exists (SELECT 1 from job_v where	position('GERAR_RESUMO_MOVTO_ESTOQUE' in comando) > 0)
		or exists (select 1 from user_scheduler_jobs where position('GERAR_RESUMO_MOVTO_ESTOQUE' in job_name) > 0);
		
		if (qt_existe_w = 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '8', WHEB_MENSAGEM_PCK.get_texto(280091));
		end if;
		
		select coalesce(max(1),0)
		into STRICT	qt_existe_w
		
		where exists (SELECT 1 from job_v where	position('VALORIZAR_ESTOQUE' in comando) > 0)
		or exists (select 1 from user_scheduler_jobs where position('VALORIZAR_ESTOQUE' in job_name) > 0);
		
		
		if (qt_existe_w = 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '8', WHEB_MENSAGEM_PCK.get_texto(280092));
		end if;
	
		select coalesce(max(1),0)
		into STRICT	qt_existe_w
		
		where exists (SELECT 1 from job_v where	position('VIRADA_SALDO' in comando) > 0)
		or exists (select 1 from user_scheduler_jobs where position('VIRADA_SALDO' in job_name) > 0);
		
		if (qt_existe_w = 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '8', WHEB_MENSAGEM_PCK.get_texto(280093));
		end if;
		end;
	end if;

	/*-----consitencia a ser feita uma unica vez por local de estoque-----*/

	if (cd_local_ant_w <> cd_local_estoque_w) and ( ie_tipo_virada_p <> 2) then
		begin


		select	count(*)
		into STRICT	qt_existe_w
		from	local_estoque
		where	cd_local_estoque = cd_local_estoque_w;

		if ( qt_existe_w = 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
				values ( ie_linha_w, '5', WHEB_MENSAGEM_PCK.get_texto(1107950, 'CD_LOCAL_ESTOQUE=' || cd_local_estoque_w));
		end if;

		cd_local_ant_w	:= cd_local_estoque_w;
		select	count(*)
		into STRICT	qt_existe_w
		from	local_estoque
		where	cd_local_estoque = cd_local_estoque_w
		and	cd_estabelecimento <> cd_estabelecimento_w;

		if (qt_existe_w > 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '5', WHEB_MENSAGEM_PCK.get_texto(280094) || cd_local_estoque_w || WHEB_MENSAGEM_PCK.get_texto(280078) || cd_estabelecimento_w);
		end if;

		select	count(*)
		into STRICT	qt_existe_w
		from	local_estoque
		where	cd_local_estoque = cd_local_estoque_w
		and	ie_situacao <> 'A';


		if (qt_existe_w > 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '5', WHEB_MENSAGEM_PCK.get_texto(280095) || cd_local_estoque_w);
		end if;
		end;
	end if;

	cd_material_w	:= 0;
	/*-------------------------consiste a existencia do material no tasy-----------------------*/


	/*consiste o material pelo cd_sistema_ant*/

	if (ie_sistema_ant_p = 'S') then
		begin
		qt_existe_w	:= 0;
		cd_material_w	:= 0;
		ds_materiais_w	:= '';
		
		for c02_row in c02 loop
		begin
			cd_material_estoque_w := c02_row.cd_material_estoque;											
			ds_materiais_w	:= ds_materiais_w || to_char(c02_row.cd_material_estoque);
			qt_existe_w	:= qt_existe_w + 1;
			end;
		end loop;
		/*close c02; */

		if (qt_existe_w = 1) then
			cd_material_w := cd_material_estoque_w;
		elsif (qt_existe_w = 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '1', WHEB_MENSAGEM_PCK.get_texto(280097) || cd_material_planilha_w || WHEB_MENSAGEM_PCK.get_texto(280098));
		elsif (qt_existe_w > 1) then			
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '2', WHEB_MENSAGEM_PCK.get_texto(280099) || cd_material_planilha_w || WHEB_MENSAGEM_PCK.get_texto(280100) || ds_materiais_w || ')');
		end if;
		end;
	end if;

	/*consiste o material pelo proprio codigo do tasy*/

	if (ie_sistema_ant_p <> 'S') then
		begin
		select	coalesce(max(cd_material), 0)
		into STRICT	cd_material_w
		from	material
		where	cd_material = cd_material_planilha_w;		
		exception
		when others then
			cd_material_w	:=	0;
		end;
		
		if (cd_material_w = 0) then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '1', WHEB_MENSAGEM_PCK.get_texto(280101) || cd_material_planilha_w || WHEB_MENSAGEM_PCK.get_texto(280098));
		end if;
	end if;

	/*-------------------------consiste os dados do material encontrado no tasy-----------------------*/


	/*se foi encontrado um material somente, no tasy. inicia as consistencias do material especifico*/

	if (cd_material_w	> 0) then
		begin

		update	sup_impl_estoque
		set	cd_material	= cd_material_w
		where	nr_sequencia	= nr_sequencia_w;

		/*verifica se material de estoque*/

		select	coalesce(max(ie_material_estoque), 'N')
		into STRICT	ie_material_estoque_w
		from	material_estab
		where	cd_material = cd_material_w
		and	cd_estabelecimento = cd_estabelecimento_w;
		if (ie_material_estoque_w = 'N') then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '3', WHEB_MENSAGEM_PCK.get_texto(280103) || cd_material_planilha_w);
		end if;

		/*verifica tipo consignado para carga de saldo normal*/

		if (ie_tipo_virada_p = 0) then
			select	coalesce(max(ie_consignado),'X')
			into STRICT	ie_consignado_w
			from	material
			where	cd_material = cd_material_w;
			if (ie_consignado_w not in ('0','2')) then
				insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
				values ( ie_linha_w, '4', WHEB_MENSAGEM_PCK.get_texto(280104) || cd_material_planilha_w);
			end if;
		end if;

		/*verifica tipo consignado para carga de saldo consignado*/

		if (ie_tipo_virada_p in (1,9)) then
			select	coalesce(max(ie_consignado),'X')
			into STRICT	ie_consignado_w
			from	material
			where	cd_material = cd_material_w;
			if (ie_consignado_w not in ('1','2')) then
				insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
				values ( ie_linha_w, '4', WHEB_MENSAGEM_PCK.get_texto(280105) || cd_material_planilha_w);
			end if;
		end if;
		
		if (ie_tipo_virada_p in (1,6,9)) or ((ie_tipo_virada_p = 7) and (coalesce(cd_fornecedor_w,'X') <> 'X')) then
			select	count(*)
			into STRICT	qt_existe_w
			from	pessoa_juridica
			where	cd_cgc	= cd_fornecedor_w;
			
			if (qt_existe_w = 0) then
				insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
				values ( ie_linha_w, '9', WHEB_MENSAGEM_PCK.get_texto(280106) || cd_fornecedor_w || WHEB_MENSAGEM_PCK.get_texto(280107));
			end if;
		end if;

        if (ie_tipo_virada_p = 9) then
			select	ie_estoque_lote
			into STRICT	ie_estoque_lote_w
			from	material_estab
			where	cd_material	= cd_material_w
              and   cd_estabelecimento = cd_estabelecimento_w;
			
			if (ie_estoque_lote_w = 'N') then
				insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
				values ( ie_linha_w, '1', WHEB_MENSAGEM_PCK.get_texto(1135461) || cd_material_w);
			end if;
		end if;

		/*verifica material inativo*/

		select	coalesce(max(ie_situacao),'X')
		into STRICT	ie_situacao_w
		from	material
		where	cd_material = cd_material_w;
		if (ie_situacao_w = 'I') then
			insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
			values ( ie_linha_w, '6', WHEB_MENSAGEM_PCK.get_texto(280108) || cd_material_planilha_w);
		end if;

		end;
	end if;

	/* validacao retirada da procedure gravar_sup_impl_saldos */

	if (ie_tipo_virada_p in (7,9))then
		if (coalesce(dt_validade_w::text, '') = '') then
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_lote_w
			from	material_lote_fornec
			where	coalesce(dt_validade::text, '') = ''
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A';
		else
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_lote_w
			from	material_lote_fornec
			where	dt_validade = dt_validade_w
			and	cd_cgc_fornec = cd_fornecedor_w
			and	ds_lote_fornec = ds_lote_fornec_w
			and	cd_material = cd_material_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and	ie_situacao = 'A';
		end if;
		
		if (nr_seq_lote_w = 0) then
			begin
			
			ie_consiste_ds_barras_w := Obter_Valor_Param_Usuario(143, 356, obter_perfil_ativo, null, cd_estabelecimento_w);
			
			if (ie_consiste_ds_barras_w = 'S') then
				begin
				select	count(*)
				into STRICT	qt_lotes_ds_barras_w
				from	material_lote_fornec
				where	cd_estabelecimento = cd_estabelecimento_w
				and	ie_situacao = 'A'
				and	upper(ds_barras) = upper(ds_barras_w);
				
				if (qt_lotes_ds_barras_w > 0) then
					insert into sup_impl_consistencia(nr_sequencia, cd_tipo_consistencia, ds_consistencia)
					values ( ie_linha_w, '10', WHEB_MENSAGEM_PCK.get_texto(261252) || ' ' || WHEB_MENSAGEM_PCK.get_texto(308692) || ds_barras_w);
				end if;
				end;
			end if;
			end;
		end if;
	end if;
	
	qt_reg_w := qt_reg_w + 1;
	
	if (qt_reg_w = 50) then
		begin
		commit;
		qt_reg_w := 0;
		end;
	end if;
	end;
end loop;
/*close c01; */

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_sup_impl_consistencia ( ie_tipo_virada_p bigint, ie_sistema_ant_p text) FROM PUBLIC;

