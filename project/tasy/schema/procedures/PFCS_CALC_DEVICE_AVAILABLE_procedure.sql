-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calc_device_available ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


	qt_available_beds_w				bigint := 0;
	nr_seq_operational_level_w  	bigint := 0;
	pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
	nr_seq_panel_w					pfcs_panel_detail.nr_seq_panel%type;

	ds_dev_unknown_status			    varchar(15) := 'UNKNOWN';
	ds_dev_inactive_status_w			  varchar(15) := 'INACTIVE';
	ds_device_type_w 			    varchar(10) := 'Monitor';
    qt_total_aux                	pfcs_panel.vl_indicator_aux%type := 0;
    qt_total_brkn_pfcs_w              bigint := 0;
    qt_isUse_device_w                 bigint := 0;

    c01_fhir_status CURSOR FOR
        SELECT 'U' cd_status_fhir
        
union
 SELECT 'I' cd_status_fhir 
        
union
 select 'C' cd_status_fhir 
        
union
 select 'K' cd_status_fhir 
        
union
 select 'H' cd_status_fhir;

	c01_from_pfcs CURSOR FOR
			SELECT	count(1) total_devices,
                loc.ds_department ds_department
        		from	pfcs_device dev,
        				pfcs_location loc,
        				pfcs_organization org
        		where (dev.si_status in (ds_dev_inactive_status_w) or coalesce(dev.si_status::text, '') = '')
        		and		dev.ds_device_type = ds_device_type_w
        		and     dev.nr_seq_location = loc.nr_sequencia
        		and		dev.nr_seq_organization = org.nr_sequencia
        		and		org.cd_estabelecimento = (cd_estabelecimento_p)::numeric
				and 	loc.si_status  in ('ACTIVE')
        		and     pfcs_get_bed_status(loc.cd_operational_status, 'C', cd_estabelecimento_p, 'Y') = 'A'
                group by loc.ds_department
        	
union all

        		SELECT	count(1) total_devices,
        			Obter_desc_expressao(344145) ds_department
        		from	pfcs_device dev,
        			pfcs_organization org
        		where (dev.si_status in (ds_dev_inactive_status_w) or coalesce(dev.si_status::text, '') = '')
        				and		dev.ds_device_type = ds_device_type_w
        				and		dev.nr_seq_organization = org.nr_sequencia
        				and		coalesce(dev.nr_seq_location::text, '') = ''
        				and		org.cd_estabelecimento = (cd_estabelecimento_p)::numeric;


BEGIN

	nr_seq_operational_level_w := (cd_estabelecimento_p)::numeric;

	for r_c01 in c01_from_pfcs loop
	     := pfcs_pck_v2.pfcs_generate_results(
		    vl_indicator_p => r_c01.total_devices, ds_reference_value_p => r_c01.ds_department, vl_indicator_aux_p => 0, nr_seq_indicator_p => 160, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);
    end loop;

    for c01_w in c01_fhir_status loop
        if (pfcs_get_bed_status(c01_w.cd_status_fhir, 'C', cd_estabelecimento_p, 'Y') = 'A') then
            qt_available_beds_w := qt_available_beds_w + pfcs_get_tele_device_intg_v2(ds_device_type_w, replace(c01_w.cd_status_fhir, 'U', 'Unoccupied'), cd_estabelecimento_p);
        end if;
    end loop;

   	qt_isUse_device_w := pfcs_get_tele_device_intg_v2(ds_device_type_w, 'U', cd_estabelecimento_p);
   	qt_total_brkn_pfcs_w :=  pfcs_get_tele_device_intg_v2(ds_device_type_w, 'BorkenLostDevice', cd_estabelecimento_p);
   	qt_total_aux :=  qt_available_beds_w + qt_isUse_device_w + qt_total_brkn_pfcs_w;

    	     := pfcs_pck_v2.pfcs_generate_results(
    		    vl_indicator_p => qt_available_beds_w, ds_reference_value_p => '', vl_indicator_aux_p => qt_total_aux, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);
    commit;

	CALL pfcs_pck_v2.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

	   CALL pfcs_pck_v2.pfcs_update_detail(
            nr_seq_indicator_p => 160,
        	nr_seq_panel_p => nr_seq_panel_w,
        	nr_seq_operational_level_p => nr_seq_operational_level_w,
        	nm_usuario_p => nm_usuario_p);

	CALL pfcs_pck_v2.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

       CALL pfcs_pck_v2.pfcs_activate_records(
        		nr_seq_indicator_p => 160,
        		nr_seq_operational_level_p => nr_seq_operational_level_w,
        		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calc_device_available ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

