-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_movto_conta_plamta ( nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd01			integer;
ie_tipo_despesa_w		varchar(3);
ds_sql_w			varchar(2000);
cd_retorno_w		varchar(20);
qt_retorno_w		varchar(15);
ds_tipo_w		varchar(10);
ds_funcao_w		varchar(80);
cd_medico_w		varchar(10);
nm_medico_w		varchar(80);
nr_conselho_w		varchar(20);
uf_conselho_w		varchar(2);
ret_w			integer;

c01 CURSOR FOR 
SELECT	b.ie_tipo_despesa, 
	upper(b.ds_sql) 
from	conv_regra_desp_plamta b, 
	conta_paciente a 
where	b.cd_convenio		= a.cd_convenio_parametro 
and	a.nr_interno_conta		= nr_interno_conta_p 
and	b.ie_situacao		= 'A';


BEGIN 
if (nr_seq_protocolo_p IS NOT NULL AND nr_seq_protocolo_p::text <> '') and (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') then 
	begin 
	delete 
	from	movimento_conta_plamta 
	where	nr_interno_conta = nr_interno_conta_p;
	open	c01;
	loop 
		fetch	c01 
		into	ie_tipo_despesa_w, 
			ds_sql_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		ds_sql_w:= replace(ds_sql_w, ':NR_INTERNO_CONTA', coalesce(nr_interno_conta_p, 0));
		cd01 := dbms_sql.open_cursor;
		dbms_sql.parse(cd01, ds_sql_w, dbms_sql.native);
		dbms_sql.define_column(cd01, 1, cd_retorno_w, 20);
		dbms_sql.define_column(cd01, 2, qt_retorno_w, 15);
		dbms_sql.define_column(cd01, 3, ds_tipo_w, 10);
		dbms_sql.define_column(cd01, 4, ds_funcao_w, 80);
		dbms_sql.define_column(cd01, 5, cd_medico_w, 10);
		ret_w := dbms_sql.execute(cd01);
		loop 
			if (dbms_sql.fetch_rows(cd01) > 0) then 
				begin 
					dbms_sql.column_value(cd01, 1, cd_retorno_w);
				exception 
				when others then 
					cd_retorno_w := 0;
				end;
				begin 
					dbms_sql.column_value(cd01, 2, qt_retorno_w);
				exception 
				when others then 
					qt_retorno_w := 0;
				end;
				begin 
					dbms_sql.column_value(cd01, 3, ds_tipo_w);
				exception 
				when others then 
					ds_tipo_w := 0;
				end;
				begin 
					dbms_sql.column_value(cd01, 4, ds_funcao_w);
				exception 
				when others then 
					ds_funcao_w := 0;
				end;
				begin 
					dbms_sql.column_value(cd01, 5, cd_medico_w);
				exception 
				when others then 
					cd_medico_w := 0;
				end;
				nm_medico_w	:= null;
				nr_conselho_w	:= null;
				uf_conselho_w	:= null;
				if	((ie_tipo_despesa_w = 'HM') or (ie_tipo_despesa_w = 'CC')) then 
					select	max(substr(a.nm_pessoa_fisica,1,80)) nm_medico, 
						max(b.nr_crm) nr_conselho, 
						substr(max(b.uf_crm),1,2) uf_conselho 
					into STRICT	nm_medico_w, 
						nr_conselho_w, 
						uf_conselho_w 
					from	pessoa_fisica a, 
						medico b 
					where	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
					and	a.cd_pessoa_fisica  = cd_medico_w;
				end if;
				insert 
				into movimento_conta_plamta(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_protocolo, nr_interno_conta, cd_item, qt_item, cd_tipo_item, ds_funcao, nm_medico, nr_conselho, uf_conselho, ie_tipo_despesa) 
				values (nextval('movimento_conta_plamta_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, nr_seq_protocolo_p, nr_interno_conta_p, cd_retorno_w, qt_retorno_w, ds_tipo_w, ds_funcao_w, nm_medico_w, nr_conselho_w, uf_conselho_w, ie_tipo_despesa_w);
				commit;
			else 
				exit;
			end if;
		end loop;
		dbms_sql.close_cursor(cd01);
		end;
	end loop;
	close c01;
	end;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_movto_conta_plamta ( nr_seq_protocolo_p bigint, nr_interno_conta_p bigint, nm_usuario_p text) FROM PUBLIC;

