-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_atualiza_imped_sorologia ( nr_seq_exame_p bigint, nr_seq_exame_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_acao_w		varchar(1);
qt_dias_inaptidao_w	integer;
ds_resultado_w		varchar(255);
qt_amostra_w		smallint;
nr_seq_doacao_w		bigint;
ie_doacao_inapta_w	varchar(1);
ie_resultado_w		varchar(1);
ie_amostra_w		varchar(1);


BEGIN

if (nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '') and (nr_seq_exame_lote_p IS NOT NULL AND nr_seq_exame_lote_p::text <> '') then

	select	upper(max(ds_resultado))
	into STRICT	ds_resultado_w
	from	san_exame_realizado
	where	nr_seq_exame = nr_seq_exame_p
	and	nr_seq_exame_lote = nr_seq_exame_lote_p;

	select	coalesce(max(a.qt_amostra),1),
		max(b.nr_seq_doacao)
	into STRICT	qt_amostra_w,
		nr_seq_doacao_w
	from	san_doacao a,
		san_exame_lote b
	where	b.nr_seq_doacao = a.nr_sequencia
	and	b.nr_sequencia = nr_seq_exame_lote_p;

	if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') and ((ds_resultado_w = 'POSITIVO') or (ds_resultado_w = 'REAGENTE') or (ds_resultado_w = 'INDETERMINADO') or (ds_resultado_w = 'ANDAMENTO')) then

		select	max(ie_acao),
			coalesce(max(qt_dias_inaptidao),0),
			coalesce(max(ie_doacao_inapta),'S'),
			max(ie_resultado),
			max(ie_amostra)
		into STRICT	ie_acao_w,
			qt_dias_inaptidao_w,
			ie_doacao_inapta_w,
			ie_resultado_w,
			ie_amostra_w
		from	san_regra_exame_sorologia
		where	nr_seq_exame = nr_seq_exame_p
		and 	ie_situacao = 'A'
		and	ie_amostra = qt_amostra_w
		and	((ie_resultado = 'P' and (ds_resultado_w in ('POSITIVO','REAGENTE')))
		or (ie_resultado = 'I' and ds_resultado_w = 'INDETERMINADO')
		or (ie_resultado = 'A' and ds_resultado_w = 'ANDAMENTO'));


		if (ie_acao_w = 'D') then /*Inapto definitivo*/
			update	san_doacao
			set	ie_avaliacao_final = 'I',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where 	nr_sequencia 	= nr_seq_doacao_w;

			insert into san_impedimento_sorologia(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lote,
				nr_seq_exame,
				nr_seq_doacao,
				dt_ocorrencia,
				ie_nova_amostra,
				ie_inapto_definitivo,
				ie_resultado,
				ie_amostra)
			values (	nextval('san_impedimento_sorologia_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_exame_lote_p,
				nr_seq_exame_p,
				nr_seq_doacao_w,
				clock_timestamp(),
				'N',
				'S',
				ie_resultado_w,
				ie_amostra_w);

		elsif (ie_acao_w = 'T') then /*Inapto tempor√°rio*/
			if (ie_doacao_inapta_w = 'S') then
				update	san_doacao
				set	ie_avaliacao_final = 'I',
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where 	nr_sequencia 	= nr_seq_doacao_w;
			end if;

			insert into san_impedimento_sorologia(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lote,
				nr_seq_exame,
				nr_seq_doacao,
				dt_ocorrencia,
				dt_liberacao,
				ie_nova_amostra,
				ie_inapto_definitivo,
				ie_resultado,
				ie_amostra)
			values (	nextval('san_impedimento_sorologia_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_exame_lote_p,
				nr_seq_exame_p,
				nr_seq_doacao_w,
				clock_timestamp(),
				clock_timestamp() + qt_dias_inaptidao_w,
				'N',
				'N',
				ie_resultado_w,
				ie_amostra_w);

		elsif (ie_acao_w = 'A') then /*Nova amostra*/
			if (ie_doacao_inapta_w = 'S') then
				update	san_doacao
				set	ie_avaliacao_final = 'I',
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where 	nr_sequencia 	= nr_seq_doacao_w;
			end if;

			insert into san_impedimento_sorologia(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lote,
				nr_seq_exame,
				nr_seq_doacao,
				dt_ocorrencia,
				ie_nova_amostra,
				ie_inapto_definitivo,
				ie_resultado,
				ie_amostra)
			values (	nextval('san_impedimento_sorologia_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_exame_lote_p,
				nr_seq_exame_p,
				nr_seq_doacao_w,
				clock_timestamp(),
				'S',
				'N',
				ie_resultado_w,
				ie_amostra_w);
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_atualiza_imped_sorologia ( nr_seq_exame_p bigint, nr_seq_exame_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

