-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_item_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, nm_usuario_p text, ie_prescricao_p text, ie_lib_item_p text, ie_tipo_item_p text, ds_erro_p INOUT text) AS $body$
DECLARE


Medico_Libera_Tudo_w    varchar(10);
dt_liberacao_w			timestamp;
ie_motivo_prescricao_w	prescr_medica.ie_motivo_prescricao%type;
ie_origem_inf_w			prescr_medica.ie_origem_inf%type;
cd_setor_atendimento_w  setor_atendimento.cd_setor_atendimento%type;
nr_seq_material_w		bigint;
nr_seq_horario_w		bigint;
cd_setor_entrega_w	  	prescr_medica.cd_setor_entrega%type;
dt_saida_w				timestamp;
dt_entrada_w 			timestamp;
dt_prescricao_w			timestamp;
cd_setor_atend_w		setor_atendimento.cd_setor_atendimento%type;
ie_indice_cursor_w		integer;
nr_prescricao_mae_w		prescr_medica.nr_prescricao%type;
nr_prescricao_original_w bigint;
qt_horas_passado_w		bigint;
nr_seq_proc_w			bigint;
nr_rec_w				bigint;
ie_liberado_w			boolean := False;/* Elemar - 12/02/04 - inclui esta variavel e seu tratamento */
nr_sequencia_w			bigint;
nr_sequencia_anterior_w	bigint;
dt_prim_horario_w		varchar(5);
varie_lote_sep_agora_w	varchar(5);
cd_unidade_medida_w		varchar(50);
IE_INDICE_W				varchar(5);
qt_nao_agora_w			bigint;
ie_medico_lib_setor_w	varchar(3);
ie_emergencia_w			prescr_medica.ie_emergencia%type;
qt_cito_w				smallint;
qt_histo_w				smallint;
cd_estabelecimento_w	smallint;
ie_gravar_hor_w			varchar(5);
qt_unidade_atend_w		bigint;
ie_lib_w				smallint;
VarLiberaOutroSetor_w	varchar(10);
ie_laudo_w				varchar(1);
dt_validade_w			timestamp;
nr_seq_proc_interno_w	cpoe_procedimento.nr_seq_proc_interno%type;
cd_material_exame_w	cpoe_procedimento.cd_material_exame%type;
dt_prev_execucao_w	cpoe_procedimento.dt_prev_execucao%type;
ds_erro_regra_w varchar(4000);
ds_mensagem_w varchar(4000);
ie_abortar_w varchar(30);
nr_doc_conv_w			prescr_medica.nr_doc_conv%type;
nr_doc_convenio_w		varchar(20);
qt_proced_w				bigint;
ie_prescr_emergencia_w	prescr_medica.ie_prescr_emergencia%type;
nr_seq_solucao_w		integer;
nr_seq_solucao_www		bigint;
nr_seq_kit_www			bigint;
ie_classif_agora_w		varchar(10);
qt_comp_solucao_w		bigint;
VarRegraGuia_w			varchar(10);
nr_seq_prot_glic_w		bigint;
nr_seq_glic_w			bigint;
ie_dose_espec_agora_w	varchar(1);
qt_peso_w				prescr_medica.qt_peso%type;
qt_altura_w				real;
qt_sinal_vital_w		bigint;
nr_sequencia_sinal_w	bigint;
cd_prescritor_w			pessoa_fisica.cd_pessoa_fisica%type;
aux_w					varchar(1);
qt_hora_intervalo_w		double precision;
nr_horas_validade_w		bigint;
dt_horario_w			timestamp;
dt_inicio_prescr_w		timestamp;
dt_validade_prescr_w	timestamp;
dt_proxima_dose_w		timestamp;
dt_proxima_dose_orig_w	timestamp;
cd_motivo_baixa_w		prescr_material.cd_motivo_baixa%type;
ds_diluicao_w			varchar(2000);
ie_lib_como_medico_w	varchar(5);
qt_solucao_total_w		double precision;
ie_acm_w				varchar(1);
ie_se_necessario_w		varchar(1);
VarPermiteLiberarTudoSeUrg_w varchar(10);	/*David em 14/07/2008 - OS 99092*/
qt_agora_w				bigint;	/*David em 14/07/2008 - OS 99092*/
ie_status_pa_w			varchar(15);
ie_regra_w				varchar(15);
cd_material_w			bigint;
ie_via_aplicacao_w cpoe_material.ie_via_aplicacao%type;
cd_pessoa_fisica_w pessoa_fisica.cd_pessoa_fisica%type;
dt_inicio_w cpoe_material.dt_inicio%type;
ie_duracao_w cpoe_material.ie_duracao%type;
nr_seq_ficha_w			bigint;
ds_erro_w				varchar(2000);
hr_prim_horario_w		timestamp;
nr_etapas_w				smallint;
qt_hora_fase_w			double precision;
ds_horarios_w			varchar(255);
ie_urgencia_w			varchar(1);
ie_proc_ivc_w			varchar(15);
hr_prescricao_w			varchar(15);
hr_dose_especial_w		varchar(15);
ie_setar_horario_esp_w	varchar(5);
cd_intervalo_agora_w	varchar(7);
ie_regra_agora_w		regra_disp_lote_farm.ie_regra_agora%type;
nr_seq_regra_w			regra_disp_lote_farm.nr_sequencia%type;
ie_regra_dose_esp_w		regra_disp_lote_farm.ie_regra_dose_esp%type;
ie_proced_agora_w		regra_disp_lote_farm.ie_proced_agora%type;
ie_rec_agora_w			regra_disp_lote_farm.ie_rec_agora%type;
nr_seq_agora_w			bigint;
qt_min_agora_w			smallint;
ie_gerar_sequencia_lab_w varchar(1);
ie_altera_dt_proxima_dose_w	varchar(1);
ie_necessita_liberacao_w varchar(1);
nr_seq_solucao_ww		bigint;	
cd_intervalo_w			varchar(7);
ie_lib_farm_w			varchar(1);
dt_liberacao_farmacia_w	timestamp;
ie_momento_lib_w		varchar(1);
nr_sequencia_diluicao_w	bigint;
nr_seq_kit_w			bigint;
ie_realiza_geracao_w	varchar(1) := 'N';
qt_dia_prim_hor_w		bigint;
hr_prim_horario_ww		varchar(10);
cd_funcao_origem_w		funcao.cd_funcao%type;
ie_quimio_w				varchar(1);
ie_motivo_prescr_regra_w	regra_disp_lote_farm.ie_motivo_prescricao%type;
ie_lib_horarios_direto_w	varchar(1);
qt_tempo_ciencia_w 		wl_regra_item.qt_tempo_normal%type;
nr_seq_regra_wl_w 		wl_regra_item.nr_sequencia%type;
cd_paciente_w			pessoa_fisica.cd_pessoa_fisica%type;
qt_registro_w			smallint;
ie_medico_w				varchar(1);
nr_ocorrencia_w			prescr_material.nr_ocorrencia%type;

qt_medic_w					bigint;
qt_procedimento_w bigint;
ie_gera_worklist_w			varchar(1) := 'N';
is_rule_tasklist_w			wl_item.nr_sequencia%type;
nr_seq_mat_cpoe_w			prescr_material.nr_seq_mat_cpoe%type;
nr_seq_tipo_adm_fat_atd_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type;
nr_seq_episodio_w			atendimento_paciente.nr_seq_episodio%type;
ie_gerar_pendencia_tl_w		subtipo_episodio.ie_gerar_pendencia%type;
ie_existe_tarefa_w			varchar(1) := 'N';

ie_info_rastre_prescr_w		varchar(1);
ds_alteracao_rastre_w		varchar(1800);
ie_momento_lote_w			regra_disp_lote_farm.ie_momento_lote%type;
qt_procedimento_asa_w		integer;
qt_tempo_sa_w				wl_regra_item.qt_tempo_normal%type;
nr_seq_regra_wl_sa_w		wl_regra_item.nr_sequencia%type;
is_rule_tasklist_sa_w		wl_item.nr_sequencia%type;

qt_tempo_pa_w				wl_regra_item.qt_tempo_normal%type;
nr_seq_regra_wl_pa_w		wl_regra_item.nr_sequencia%type;
is_rule_tasklist_pa_w		wl_item.nr_sequencia%type;

ds_sql_w					varchar(4000);

nr_horas_apos_copia_w bigint;
ie_operacao_interv_w intervalo_prescricao.ie_operacao%type;
dt_inicio_medic_w prescr_material.dt_inicio_medic%type;
dt_prox_geracao_w cpoe_material.dt_prox_geracao%type;

c001 CURSOR FOR
SELECT	nr_sequencia,
		ie_urgencia,
		'S',
		null,
		1
from	prescr_material
where	1 = 1
and		nr_sequencia	= nr_sequencia_p
and		nr_prescricao	= nr_prescricao_p
and		ie_tipo_item_p	= 'M'
and		ie_lib_item_p	= 'S'

union

SELECT	nr_sequencia,
		ie_urgencia,
		'S',
		null,
		2
from	prescr_material
where	1 = 1
and		nr_sequencia_solucao	= nr_sequencia_p
and		nr_prescricao	= nr_prescricao_p
and		ie_tipo_item_p	= 'S'
and		ie_lib_item_p	= 'S'

union

select	nr_sequencia,
		ie_urgencia,
		'S',
		null,
		3
from	prescr_material
where	1 = 1
and		((coalesce(cd_unidade_medida_w::text, '') = '') or (cd_unidade_medida_dose = cd_unidade_medida_w))
and		(((ie_tipo_item_p in ('M','MAT')) and (ie_agrupador in (1,2))) or
		 (ie_tipo_item_p = 'S' AND ie_agrupador = 4) or
		 ((ie_tipo_item_p = 'A') and (ie_agrupador in (1,2,4,5,3,7,9))))
and		ie_urgencia	= 'S'
and		nr_prescricao	= nr_prescricao_p
and		coalesce(ie_regra_agora_w,'N') = 'S'
and		ie_lib_item_p	= 'N'

union

select	nr_sequencia,
		ie_urgencia,
		Obter_momento_lib_item(nr_seq_regra_w,cd_material,cd_setor_atendimento_w,cd_intervalo,ie_acm,ie_se_necessario,ie_dose_espec_agora,ie_urgencia,'S') ie_necessita_liberacao,
		null,
		4
from	prescr_material
where	1 = 1
and		Obter_momento_lib_item(nr_seq_regra_w,cd_material,cd_setor_atendimento_w,cd_intervalo,ie_acm,ie_se_necessario,ie_dose_espec_agora,ie_urgencia,'S') = 'N'
and		(((ie_tipo_item_p = 'M') and (ie_agrupador in (1,2))) or
		 (ie_tipo_item_p = 'S' AND ie_agrupador = 4) or
		 ((ie_tipo_item_p = 'A') and (ie_agrupador in (1,2,4,5,3,7,9))))
and		nr_prescricao	= nr_prescricao_p
and		ie_lib_item_p	= 'N'

union

select	a.nr_sequencia,
		b.ie_urgencia,
		Obter_momento_lib_item(nr_seq_regra_w,a.cd_material,cd_setor_atendimento_w,null,b.ie_acm,b.ie_se_necessario,null,b.ie_urgencia,'S') ie_necessita_liberacao,
		b.nr_seq_solucao,
		5
from	prescr_material a,
		prescr_solucao b
where	1 = 1
and		Obter_momento_lib_item(nr_seq_regra_w,a.cd_material,cd_setor_atendimento_w,null,b.ie_acm,b.ie_se_necessario,null,b.ie_urgencia,'S') = 'N'
and		a.nr_sequencia_solucao 	= b.nr_seq_solucao 
and		a.nr_prescricao 	= b.nr_prescricao
and		(((ie_tipo_item_p = 'M') and (ie_agrupador in (1,2))) or
		 (ie_tipo_item_p = 'S' AND ie_agrupador = 4) or
		 ((ie_tipo_item_p = 'A') and (ie_agrupador in (1,2,4,5,3,7,9))))
and		a.nr_prescricao		= nr_prescricao_p
and		ie_lib_item_p		= 'N'

union

select	nr_sequencia,
		ie_dose_espec_agora ie_urgencia,
		'S',
		null,
		6
from	prescr_material
where	1 = 1
and		((coalesce(cd_unidade_medida_w::text, '') = '') or (cd_unidade_medida_dose = cd_unidade_medida_w))
and		(((ie_tipo_item_p = 'M') and (ie_agrupador in (1,2))) or
		 (ie_tipo_item_p = 'S' AND ie_agrupador = 4) or
		 ((ie_tipo_item_p = 'A') and (ie_agrupador in (1,2,4,5,3,7,9))))
and		ie_dose_espec_agora	= 'S'
and		nr_prescricao	= nr_prescricao_p
and		coalesce(ie_regra_dose_esp_w,'N') = 'S'
and		ie_lib_item_p	= 'N'

union

select	nr_sequencia,
		ie_urgencia,
		'S',
		null,
		7
from	prescr_material
where	1 = 1
and		((coalesce(cd_unidade_medida_w::text, '') = '') or (cd_unidade_medida_dose = cd_unidade_medida_w))
and		(((ie_tipo_item_p in ('M','MAT')) and (ie_agrupador in (1,2))) or
		 (ie_tipo_item_p = 'S' AND ie_agrupador = 4) or
		 ((ie_tipo_item_p = 'A') and (ie_agrupador in (1,2,4,5,3,7,9,8,12))))
and		ie_lib_horarios_direto_w = 'S'
and		nr_prescricao	= nr_prescricao_p
and		ie_lib_item_p	= 'N';
	
C01 CURSOR FOR
SELECT	a.cd_setor_atendimento,
		a.dt_saida_unidade,
		a.dt_entrada_unidade
from	usuario_setor_v b,
		atend_paciente_unidade a
where	a.nr_atendimento	= nr_atendimento_p
and		a.cd_setor_atendimento	= b.cd_setor_atendimento
and		b.nm_usuario		= nm_usuario_p
order by
		a.dt_saida_unidade,
		a.dt_entrada_unidade;

C12 CURSOR FOR
SELECT	cd_intervalo,
		nr_sequencia,
		nr_seq_kit,
		nr_sequencia_solucao
from	prescr_material
where	coalesce(ie_em_protocolo_vanco, 'N') = 'N'
and		((nr_sequencia	= nr_seq_material_w) or (nr_seq_kit	= nr_seq_material_w))
and		ie_urgencia	= 'S'
and		nr_prescricao	= nr_prescricao_p;

C07 CURSOR FOR
SELECT	b.nr_sequencia,
		obter_ocorrencia_intervalo(b.cd_intervalo,coalesce(a.nr_horas_validade,24),'H'),
		b.dt_proxima_dose,
		b.nr_sequencia_anterior,
		coalesce(b.nr_prescricao_anterior,b.nr_prescricao_original),
		b.cd_material,
		b.cd_intervalo,
		b.hr_prim_horario,
        b.nr_seq_mat_cpoe,
        b.dt_inicio_medic
from	prescr_material b,
		prescr_medica a
where	Obter_se_interv_superior_24h(b.cd_intervalo, null) = 'S'
and		b.ie_origem_inf	<> 'K'
and		b.ie_agrupador	in (1, 2)
and		a.nr_prescricao	= b.nr_prescricao
and		coalesce(coalesce(a.dt_liberacao_medico,a.dt_liberacao)::text, '') = ''
and		a.nr_prescricao	= nr_prescricao_p;

C08 CURSOR FOR
SELECT	b.nr_sequencia,
		substr(obter_diluicao_medic(b.nr_sequencia,b.nr_prescricao),1,2000)
from	prescr_material b
where	1 = 1
and		b.ie_origem_inf	<> 'K'
and		b.ie_agrupador	= 1
and		nr_sequencia	= nr_seq_material_w
and		b.nr_prescricao	= nr_prescricao_p;

C11 CURSOR FOR
SELECT	b.nr_sequencia,
		to_char(b.dt_lib_material,'hh24:mi'),
		b.hr_dose_especial
from	prescr_material b
where	1 = 1
and		b.ie_origem_inf	<> 'K'
and		b.ie_dose_espec_agora = 'S'
and		b.ie_agrupador	= 1
and		b.nr_sequencia	= nr_seq_material_w
and		b.nr_prescricao	= nr_prescricao_p;

c13 CURSOR FOR
SELECT	a.nr_sequencia,
		a.ie_urgencia,
		'S',
		b.ie_lib_farm,
		b.dt_liberacao_farmacia,
		Obter_momento_lib_item(nr_seq_regra_w,a.cd_material,cd_setor_atendimento_w,a.cd_intervalo,a.ie_acm,a.ie_se_necessario,a.ie_dose_espec_agora,a.ie_urgencia,'N'),
		a.nr_sequencia_diluicao,
		a.nr_seq_kit,
		1,
		a.nr_ocorrencia
from	prescr_medica b,
		prescr_material a
where	1 = 1
and		a.ie_urgencia	= 'S'
and		(((ie_tipo_item_p in ('M','MAT')) and (a.ie_agrupador in (1,2))) or
		 (ie_tipo_item_p = 'S' AND a.ie_agrupador = 4) or
		 ((ie_tipo_item_p = 'A') and (a.ie_agrupador in (1,2,4,3,7,9))))
and		a.nr_prescricao	= b.nr_prescricao
and		b.nr_prescricao	= nr_prescricao_p
and		a.nr_prescricao	= nr_prescricao_p
and		coalesce(ie_regra_agora_w,'N') = 'S'
and		ie_lib_item_p	= 'N'

union

SELECT	a.nr_sequencia,
		a.ie_dose_espec_agora,
		'S',
		b.ie_lib_farm,
		b.dt_liberacao_farmacia,
		Obter_momento_lib_item(nr_seq_regra_w,a.cd_material,cd_setor_atendimento_w,a.cd_intervalo,a.ie_acm,a.ie_se_necessario,a.ie_dose_espec_agora,a.ie_urgencia,'N'),
		a.nr_sequencia_diluicao,
		a.nr_seq_kit,
		2,
		0
from	prescr_medica b,
		prescr_material a
where	1 = 1
and		a.ie_dose_espec_agora = 'S'
and		(((ie_tipo_item_p = 'M') and (a.ie_agrupador in (1,2))) or
		 (ie_tipo_item_p = 'S' AND a.ie_agrupador = 4) or
		 ((ie_tipo_item_p = 'A') and (a.ie_agrupador in (1,2,4,3,7,9))))
and		a.nr_prescricao	= b.nr_prescricao
and		b.nr_prescricao	= nr_prescricao_p
and		a.nr_prescricao	= nr_prescricao_p
and		coalesce(ie_regra_dose_esp_w,'N') = 'S'
and		ie_lib_item_p	= 'N';
	
c14 CURSOR FOR
SELECT	coalesce(ie_regra_agora,'N'),
		nr_sequencia,
		cd_unidade_medida,
		ie_regra_dose_esp,
		ie_proced_agora,
		coalesce(ie_rec_agora,'N'),
		ie_motivo_prescricao,
		ie_momento_lote
FROM	regra_disp_lote_farm
where	((ie_motivo_prescricao = ie_motivo_prescricao_w) or (coalesce(ie_motivo_prescricao::text, '') = ''))
and		((clock_timestamp() between pkg_date_utils.get_DateTime(clock_timestamp(), coalesce(dt_hora_inicio,clock_timestamp())) and
						  pkg_date_utils.get_DateTime(clock_timestamp(), coalesce(dt_hora_fim,clock_timestamp()))) or ((dt_hora_fim IS NOT NULL AND dt_hora_fim::text <> '') and
		  dt_hora_fim < coalesce(dt_hora_inicio,clock_timestamp()) and (clock_timestamp() between pkg_date_utils.get_DateTime(clock_timestamp(), coalesce(dt_hora_inicio,clock_timestamp())) and
						   pkg_date_utils.get_DateTime(clock_timestamp() + interval '1 days', coalesce(dt_hora_fim,clock_timestamp())))))
and		((cd_setor_atendimento = cd_setor_atendimento_w) or (coalesce(cd_setor_atendimento::text, '') = ''))
and		pkg_date_utils.start_of(clock_timestamp(), 'DD', 0) between pkg_date_utils.start_of(dt_inicio_vigencia, 'DD', 0) and pkg_date_utils.start_of(coalesce(dt_fim_vigencia,clock_timestamp()), 'DD', 0)
and		coalesce(ie_tipo_item,'M')	= 'M'
and		cd_estabelecimento	= cd_estabelecimento_w
and		ie_situacao = 'A'
and 	((ie_quimio_w <> 'S' and coalesce(ie_quimioterapicas,'N') <> 'S') or (ie_quimio_w = 'S'))
order by CASE WHEN ie_quimioterapicas='S' THEN 'Z'  ELSE CASE WHEN ie_quimioterapicas='N' THEN 'C'  ELSE 'B' END  END ,coalesce(ie_tipo_item,'A'), coalesce(cd_setor_atendimento,0), coalesce(ie_motivo_prescricao,0);

c15 CURSOR FOR
SELECT	nr_sequencia
from	prescr_procedimento a
where	1 = 1
and		not exists (SELECT	1
					from	prescr_proc_hor x
					where	1 = 1
					and		(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and		a.nr_sequencia	= x.nr_seq_procedimento
					and		a.nr_prescricao	= x.nr_prescricao)
and		a.ie_urgencia	= 'S'
and		a.nr_prescricao	= nr_prescricao_p;

c16 CURSOR FOR
SELECT	nr_sequencia
from	prescr_recomendacao a
where	1 = 1
and		not exists (SELECT	1
					from	prescr_rec_hor x
					where	1 = 1
					and		(x.dt_lib_horario IS NOT NULL AND x.dt_lib_horario::text <> '')
					and		a.nr_sequencia	= x.nr_seq_recomendacao
					and		a.nr_prescricao	= x.nr_prescricao)
and		a.ie_urgencia	= 'S'
and		a.nr_prescricao	= nr_prescricao_p;

c17 CURSOR FOR
SELECT	coalesce(b.qt_tempo_normal,0),
		coalesce(b.nr_sequencia, 0)
from 	wl_regra_worklist a,
		wl_regra_item b
where	a.nr_sequencia = b.nr_seq_regra
and		b.ie_situacao = 'A'
and		a.nr_seq_item = (	SELECT	max(x.nr_sequencia)
							from	wl_item x
							where	x.nr_sequencia = a.nr_seq_item
							and		x.cd_categoria = 'RA'
							and		x.ie_situacao = 'A');

c18 CURSOR FOR
SELECT	distinct nr_seq_mat_cpoe
from	prescr_material
where	1=1
and		nr_prescricao = nr_prescricao_p
and		nr_seq_mat_cpoe = (	SELECT x.nr_sequencia
						  	from   cpoe_material x
							where  x.nr_sequencia = nr_seq_mat_cpoe
							and	   x.cd_material = cd_material
							and	   coalesce(x.ie_exige_ciencia,'N') = 'N');

c19_prescr_procedimento CURSOR FOR
SELECT	distinct pp.nr_seq_proc_cpoe nr_seq_proc_cpoe_w
from	prescr_procedimento pp
where	1=1
and		pp.nr_prescricao = nr_prescricao_p
and		pp.nr_seq_proc_cpoe = (	SELECT x.nr_sequencia
								from   cpoe_procedimento x
								where  x.nr_sequencia = pp.nr_seq_proc_cpoe
								and	   x.nr_seq_proc_interno = pp.nr_seq_proc_interno
								and	   coalesce(x.ie_exige_ciencia,'N') <> 'S');
								
c20 CURSOR FOR
SELECT	coalesce(b.qt_tempo_normal,0),
		coalesce(b.nr_sequencia, 0)
from 	wl_regra_worklist a,
		wl_regra_item b
where	a.nr_sequencia = b.nr_seq_regra
and		b.ie_situacao = 'A'
and		a.nr_seq_item = (	SELECT	max(x.nr_sequencia)
							from	wl_item x
							where	x.nr_sequencia = a.nr_seq_item
							and		x.cd_categoria = 'SA'
							and		x.ie_situacao = 'A');
							
c21 CURSOR FOR
SELECT	coalesce(b.qt_tempo_normal,0),
		coalesce(b.nr_sequencia, 0)
from 	wl_regra_worklist a,
		wl_regra_item b
where	a.nr_sequencia = b.nr_seq_regra
and		b.ie_situacao = 'A'
and		a.nr_seq_item = (	SELECT	max(x.nr_sequencia)
							from	wl_item x
							where	x.nr_sequencia = a.nr_seq_item
							and		x.cd_categoria = 'PA'
							and		x.ie_situacao = 'A');
							
BEGIN
ds_erro_p    := '';

ie_info_rastre_prescr_w	:= 'N';

select 	coalesce(max('S'),'N')
into STRICT	ie_quimio_w
from	paciente_atendimento
where	nr_prescricao = nr_prescricao_p;

if (nr_atendimento_p > 0) then
	begin
	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
	end;
end if;

select	max(a.dt_inicio_prescr),
		max(a.dt_validade_prescr),
		coalesce(max(a.nr_horas_validade),24),
		coalesce(max(a.cd_funcao_origem),924),
		max(a.ie_motivo_prescricao),
		max(a.ie_origem_inf),
		max(a.cd_setor_atendimento),
		max(a.dt_prescricao),
		max(a.nr_prescricao_mae),
		coalesce(max(a.ie_emergencia),'N'),
		coalesce(max(a.ie_prescr_emergencia),'N'),
		max(a.cd_setor_entrega),
		max(a.nr_doc_conv),
		max(a.qt_peso),
		max(a.qt_altura_cm),
		max(a.cd_prescritor)
into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w,
		nr_horas_validade_w,
		cd_funcao_origem_w,
		ie_motivo_prescricao_w,
		ie_origem_inf_w,
		cd_setor_atend_w,
		dt_prescricao_w,
		nr_prescricao_mae_w,
		ie_emergencia_w,
		ie_prescr_emergencia_w,
		cd_setor_entrega_w,
		nr_doc_conv_w,
		qt_peso_w,
		qt_altura_w,
		cd_prescritor_w
from	prescr_medica a
where	a.nr_prescricao = nr_prescricao_p;

Medico_Libera_Tudo_w := Obter_Param_Usuario(924, 11, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, Medico_Libera_Tudo_w);
qt_horas_passado_w := Obter_Param_Usuario(924, 29, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, qt_horas_passado_w);
ie_gravar_hor_w := Obter_Param_Usuario(924, 116, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gravar_hor_w);
cd_motivo_baixa_w := Obter_Param_Usuario(924, 194, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, cd_motivo_baixa_w);
ie_lib_como_medico_w := Obter_Param_Usuario(924, 211, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_lib_como_medico_w);
ie_altera_dt_proxima_dose_w := obter_param_usuario(924, 694, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_altera_dt_proxima_dose_w);
varie_lote_sep_agora_w := Obter_Param_Usuario(924, 864, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, varie_lote_sep_agora_w);

open c01;
loop
fetch c01 into	
	cd_setor_atendimento_w,
	dt_saida_w,
	dt_entrada_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

OPEN c14;
LOOP
FETCH c14 INTO
	ie_regra_agora_w,
	nr_seq_regra_w,
	cd_unidade_medida_w,
	ie_regra_dose_esp_w,
	ie_proced_agora_w,
	ie_rec_agora_w,
	ie_motivo_prescr_regra_w,
	ie_momento_lote_w;
EXIT WHEN NOT FOUND; /* apply on c14 */
	BEGIN
	ie_regra_agora_w			:= ie_regra_agora_w;
	nr_seq_regra_w				:= nr_seq_regra_w;
	cd_unidade_medida_w			:= cd_unidade_medida_w;
	ie_proced_agora_w			:= ie_proced_agora_w;
	ie_rec_agora_w				:= ie_rec_agora_w;
	ie_motivo_prescr_regra_w	:= ie_motivo_prescr_regra_w;
	ie_momento_lote_w			:= ie_momento_lote_w;
	END;
END LOOP;
CLOSE c14;

/*
Se a variavel ie_lib_horarios_direto_w receber "S" entao
este motivo indicar que a prescricao nao precisa de liberacao da Enfermagem
e farmacia. Sendo assim deve setar as datas de liberacao.
*/
select	coalesce(max(ie_regra_motivo), 'N')
into STRICT	ie_lib_horarios_direto_w
from	regra_motivo_lib_prescr
where	ie_motivo_prescricao = ie_motivo_prescr_regra_w;

open C001;
loop
fetch C001 into	
	nr_seq_material_w,
	ie_urgencia_w,
	ie_necessita_liberacao_w,
	nr_seq_solucao_ww,
	ie_indice_w;
EXIT WHEN NOT FOUND; /* apply on C001 */

	select  max(b.dt_lib_material),
			max(b.cd_material),
			max(b.cd_intervalo),
			max(b.ie_acm),
			max(b.ie_se_necessario),
			max(b.ie_dose_espec_agora),
			max(b.nr_ocorrencia)
	into STRICT	dt_liberacao_w,
			cd_material_w,
			cd_intervalo_w,
			ie_acm_w,
			ie_se_necessario_w,
			ie_dose_espec_agora_w,
			nr_ocorrencia_w
	from 	prescr_material b
	where 	b.nr_prescricao = nr_prescricao_p
	and		b.nr_sequencia	= nr_seq_material_w;
	
	-- Deixei esse select do estabelecimento ficou aqui pois, iria afetar nos parametros do usuario carregados ao longo do corpo da procedure
	select	coalesce(max(a.cd_estabelecimento),cd_estabelecimento_w)
	into STRICT	cd_estabelecimento_w
	from	prescr_medica a
	where	a.nr_prescricao = nr_prescricao_p;

	if	(dt_prescricao_w < clock_timestamp() - (coalesce(qt_horas_passado_w,24)/24)) and (ie_prescr_emergencia_w <> 'S') and (cd_funcao_origem_w <> 2314) then
		-- 'A data da prescricao nao pode ser inferior a '|| qt_horas_passado_w ||' horas.' || chr(13) || chr(10) ||'Se desejar liberar essa prescricao faca uma copia com data atual.#@#@'); 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(195023,'QT_HORAS='||qt_horas_passado_w);
	end if;

	if (Medico_Libera_Tudo_w = 'N') then
		VarPermiteLiberarTudoSeUrg_w := Obter_Param_Usuario(924, 231, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, VarPermiteLiberarTudoSeUrg_w);
		if (VarPermiteLiberarTudoSeUrg_w <> 'N') then
			begin
			select  count(*)
			into STRICT	qt_agora_w
			from    prescr_material m where		coalesce(m.ie_urgencia,'N')   = 'S'
			and     m.ie_agrupador = 1
			and     m.nr_prescricao = nr_prescricao_p
			and		m.nr_sequencia	= nr_seq_material_w LIMIT 1;
			
			if (qt_agora_w > 0) then
				qt_nao_agora_w	:= 0;
				if (VarPermiteLiberarTudoSeUrg_w = 'T') then
					select  count(*)
					into STRICT	qt_nao_agora_w
					from    prescr_material m where		coalesce(m.ie_urgencia,'N')   <> 'S'
					and     m.ie_agrupador = 1
					and     m.nr_prescricao = nr_prescricao_p
					and		m.nr_sequencia	= nr_seq_material_w LIMIT 1;
				end if;
				
				if (qt_nao_agora_w = 0) then
					Medico_Libera_Tudo_w := 'S';
				end if;
			end if;
			end;
		end if;
	end if;
	
	if (ie_tipo_pessoa_p = 'S') or (ie_lib_como_medico_w = 'S') or
		(((coalesce(ie_regra_agora_w,'N') = 'S') or (coalesce(ie_regra_dose_esp_w,'N') = 'S')) and (ie_urgencia_w = 'S')) or (ie_necessita_liberacao_w = 'N') or		
		(((ie_tipo_pessoa_p = 'S') or --novo Comentario abaixo.
		(ie_lib_como_medico_w = 'S')) and
		ie_indice_w = 7) then 
		
		/*
		(((ie_tipo_pessoa_p = 'S') or
		(ie_lib_como_medico_w = 'S')) and
		ie_motivo_prescr_regra_w = 'S') then
		
		Este if a para setar a data no campo dt_lib_material caso o motivo da prescricao indique
		que essa prescricao nao necessita liberacao de enfermagem e farmacia.		
		*/
		
		if (coalesce(dt_liberacao_w::text, '') = '') and (nr_atendimento_p > 0) and (coalesce(cd_setor_atendimento_w::text, '') = '') and (cd_funcao_origem_w <> 2314) then
			ie_medico_lib_setor_w := Obter_Param_Usuario(924, 87, cd_perfil_p, nm_usuario_p, 0, ie_medico_lib_setor_w);
			if (ie_medico_lib_setor_w = 'N') then
				--'O paciente nao tem passagem pelo setor do medico. Parametro 87.#@#@');
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(195027);
			end if;
		end if;

		if (coalesce(dt_liberacao_w::text, '') = '')  and
			(((cd_funcao_origem_w = 2314) and (ie_momento_lote_w = 'M') and (ie_tipo_pessoa_p = 'S')) or (cd_funcao_origem_w <> 2314) or
			 (cd_funcao_origem_w = 2314 AND ie_urgencia_w = 'N') or
			 ((cd_funcao_origem_w = 2314) and (ie_urgencia_w = 'S') and (nr_ocorrencia_w = 1))) then
			
			ie_liberado_w := True;	/* Elemar - 12/02/04 */
			
				update	prescr_material
				set	dt_lib_material	= clock_timestamp(),
					dt_lib_farmacia	= clock_timestamp(),
					dt_lib_enfermagem = clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_prescricao	= nr_prescricao_p
				and	nr_sequencia	= nr_seq_material_w;	
			
				update	prescr_material
				set	dt_lib_material	= clock_timestamp(),
					dt_lib_farmacia	= clock_timestamp(),
					dt_lib_enfermagem = clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_prescricao	= nr_prescricao_p
				and	nr_seq_kit	= nr_seq_material_w;
			
				update	prescr_material
				set	dt_lib_material	= clock_timestamp(),
					dt_lib_farmacia	= clock_timestamp(),
					dt_lib_enfermagem = clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_prescricao	= nr_prescricao_p
				and	nr_sequencia_diluicao	= nr_seq_material_w;
			
			    if (ie_tipo_item_p in ('A','S')) then
			
				    if (ie_tipo_item_p <> 'S') then
						update	prescr_solucao
						set	dt_lib_material	= clock_timestamp(),
							dt_lib_farmacia	= clock_timestamp(),
							dt_lib_enfermagem = clock_timestamp(),
							nm_usuario	= nm_usuario_p
						where	nr_prescricao	= nr_prescricao_p
						and	nr_seq_solucao	= nr_seq_solucao_ww;
					--and	ie_urgencia	= 'S';
					else
						update	prescr_solucao
						set	dt_lib_material	= clock_timestamp(),
							dt_lib_farmacia	= clock_timestamp(),
							dt_lib_enfermagem = clock_timestamp(),
							nm_usuario	= nm_usuario_p
						where	nr_prescricao	= nr_prescricao_p
						and	nr_seq_solucao	= nr_sequencia_p;
					--and	ie_urgencia	= 'S';
					end if;
				
					CALL gerar_status_solucao(nr_prescricao_p,dt_inicio_prescr_w,nm_usuario_p,cd_funcao_origem_w,nr_horas_validade_w);
				end if;
		end if;
	end if;
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
	if (ie_tipo_pessoa_p <> 'S') and (ie_lib_como_medico_w = 'N') and (coalesce(dt_liberacao_w::text, '') = '') then
		VarLiberaOutroSetor_w := Obter_Param_Usuario(924, 125, cd_perfil_p, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), VarLiberaOutroSetor_w);

		select	count(*)
		into STRICT	qt_unidade_atend_w
		from	atend_paciente_unidade where		nr_atendimento	= nr_atendimento_p LIMIT 1;
	
		if (VarLiberaOutroSetor_w = 'S') or /* Edilson 24/11/2006 - OS 45111 */
			(cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then

			ie_liberado_w := True;	/* Elemar - 12/02/04 */
			update	prescr_material
			set	dt_lib_enfermagem = clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_material_w;
		
	   	elsif (qt_unidade_atend_w > 0) then /* Ricardo 05/08/2006 - OS 38398 */
			ds_erro_p := wheb_mensagem_pck.get_texto(278998); --O usuario nao tem o setor do paciente liberado!
		elsif (qt_unidade_atend_w = 0) and (coalesce(nr_atendimento_p,0) > 0) then /* Elemar 15/02/2007 */
			ds_erro_p :=wheb_mensagem_pck.get_texto(279001); --O atendimento nao possui setor. Verifique na funcao Entrada unica de paciente
		end if;
	end if;	

	/* Consistir que a prescricao foi liberada nesse momento */

	if (coalesce(dt_liberacao_w::text, '') = '') then
		select	coalesce(max(1),0)
		into STRICT	ie_lib_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_seq_material_w
		and		(dt_lib_material IS NOT NULL AND dt_lib_material::text <> '');

		if	((ie_lib_w = 1) or
			 ((cd_funcao_origem_w = 2314) and (ie_urgencia_w = 'S') and (nr_ocorrencia_w > 1))) then
			begin
			ie_setar_horario_esp_w := obter_param_usuario(924, 301, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_setar_horario_esp_w);
			
			open C08;
			loop
			fetch C08 into	
				nr_sequencia_w,
				ds_diluicao_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin
				update	prescr_material
				set	ds_diluicao_edit	= ds_diluicao_w
				where	nr_prescricao		= nr_prescricao_p
				and	nr_sequencia		= nr_sequencia_w;
				end;
			end loop;
			close C08;
			
			if (ie_emergencia_w	<> 'S') and (cd_funcao_origem_w <> 2314) then
				open c12;
				loop
				fetch c12 into
					cd_intervalo_agora_w,
					nr_seq_agora_w,
					nr_seq_kit_www,
					nr_seq_solucao_www;
				EXIT WHEN NOT FOUND; /* apply on c12 */
				
					select	coalesce(max(qt_min_agora),0)
					into STRICT	qt_min_agora_w
					from	intervalo_prescricao
					where	cd_intervalo = cd_intervalo_agora_w;
					
					if (nr_seq_solucao_www IS NOT NULL AND nr_seq_solucao_www::text <> '') then
						select	max(ie_classif_agora)
						into STRICT	ie_classif_agora_w
						from	prescr_solucao
						where	nr_prescricao = nr_prescricao_p
						and		nr_seq_solucao = nr_seq_solucao_www;
						if (ie_classif_agora_w IS NOT NULL AND ie_classif_agora_w::text <> '') then
							select	max(coalesce(a.qt_min_agora,a.qt_min_intervalo))
							into STRICT	qt_min_agora_w
							from	intervalo_prescricao a
							where	a.cd_intervalo = ie_classif_agora_w;
						end if;
					elsif (nr_seq_kit_www IS NOT NULL AND nr_seq_kit_www::text <> '') then
						select	max(nr_sequencia_solucao)
						into STRICT	nr_seq_solucao_www
						from	prescr_material
						where	nr_prescricao = nr_prescricao_p
						and		nr_sequencia = nr_seq_kit_www;
						if (nr_seq_solucao_www IS NOT NULL AND nr_seq_solucao_www::text <> '') then
							select	max(ie_classif_agora)
							into STRICT	ie_classif_agora_w
							from	prescr_solucao
							where	nr_prescricao = nr_prescricao_p
							and		nr_seq_solucao = nr_seq_solucao_www;
							if (ie_classif_agora_w IS NOT NULL AND ie_classif_agora_w::text <> '') then
								select	max(coalesce(a.qt_min_agora,a.qt_min_intervalo))
								into STRICT	qt_min_agora_w
								from	intervalo_prescricao a
								where	a.cd_intervalo = ie_classif_agora_w;
							end if;
						end if;
					end if;		
										
					--OS  723185
					if (qt_min_agora_w > 0) then
						dt_prim_horario_w	:= to_char(clock_timestamp() + (qt_min_agora_w/1440),'hh24:mi');
					else
						dt_prim_horario_w	:= to_char(clock_timestamp(),'hh24:mi');
					end if;
					--fim 723185
					update	prescr_material
					set	ds_horarios	= dt_prim_horario_w,
						hr_prim_horario	= dt_prim_horario_w
					where	nr_prescricao	= nr_prescricao_p
					--and	nr_sequencia	= nr_seq_agora_w -- OS = 479380
					and	coalesce(cd_intervalo,'XPTO') = cd_intervalo_agora_w -- 819973
					and	coalesce(ie_urgencia,'N')	= 'S'
					and coalesce(ie_em_protocolo_vanco, 'N') = 'N';

					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
				end loop;
				close c12;
			end if;
			
			dt_prim_horario_w	:= to_char(clock_timestamp() + coalesce((qt_min_agora_w/1440),0),'hh24:mi');

			if (coalesce(ie_setar_horario_esp_w,'N')	= 'S') then
				open c11;
				loop
				fetch c11 into
					nr_sequencia_w,
					hr_prescricao_w,
					hr_dose_especial_w;
				EXIT WHEN NOT FOUND; /* apply on c11 */
					if (hr_dose_especial_w IS NOT NULL AND hr_dose_especial_w::text <> '') and (hr_prescricao_w IS NOT NULL AND hr_prescricao_w::text <> '') then
						if (hr_dose_especial_w < hr_prescricao_w) then
							update	prescr_material
							set	hr_dose_especial	= hr_prescricao_w
							where	nr_prescricao		= nr_prescricao_p
							and	nr_sequencia		= nr_sequencia_w;
						end if;
					end if;
				end loop;
				close c11;
			end if;
			
			ie_gravar_hor_w := Obter_Param_Usuario(924, 116, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gravar_hor_w);
			
			if (coalesce(ie_regra_dose_esp_w,'N') = 'S') and (ie_indice_w = 6) and (varie_lote_sep_agora_w <> 'E') then
				CALL Gerar_prescr_mat_hor(nr_prescricao_p, nr_seq_material_w,cd_perfil_p,nm_usuario_p,'N','N', nr_seq_regra_w,'S');
			end if;

			-- Sa deve realizar a liberacao e permitir a geracao dos lotes, caso entre neste local
			ie_realiza_geracao_w	:= 'S';
			
			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

			end;
		end if;
	end if;

	begin
	
	if (varie_lote_sep_agora_w <> 'S') then
		open c07;
		loop
		fetch c07 into
			nr_sequencia_w,
			qt_hora_intervalo_w,
			dt_proxima_dose_w,
			nr_sequencia_anterior_w,
			nr_prescricao_original_w,
			cd_material_w,
			cd_intervalo_w,
			hr_prim_horario_ww,
            nr_seq_mat_cpoe_w,
            dt_inicio_medic_w;
		EXIT WHEN NOT FOUND; /* apply on c07 */
			begin
			dt_proxima_dose_orig_w	:= dt_proxima_dose_w;
			dt_horario_w			:= null;
				
			hr_prim_horario_ww	:= coalesce(hr_prim_horario_ww, to_char(dt_inicio_prescr_w, 'hh24:mi'));

            select  max(a.ie_operacao)
            into STRICT    ie_operacao_interv_w
            from    intervalo_prescricao a
            where   a.cd_intervalo = cd_intervalo_w;

            if ((nr_seq_mat_cpoe_w IS NOT NULL AND nr_seq_mat_cpoe_w::text <> '') and ie_operacao_interv_w = 'D') then
                nr_horas_apos_copia_w := get_qt_hours_after_copy_cpoe(cd_perfil_p => cd_perfil_p,
                                                                        nm_usuario_p => nm_usuario_p,
                                                                        cd_estabelecimento_p => cd_estabelecimento_w);
                select  max(a.dt_prox_geracao) + nr_horas_apos_copia_w
                into STRICT    dt_prox_geracao_w
                from    cpoe_material a
                where   a.nr_sequencia = nr_seq_mat_cpoe_w;

                qt_hora_intervalo_w := coalesce(obter_tempo_entre_datas(dt_inicio_medic_w, dt_prox_geracao_w, 'T'), qt_hora_intervalo_w);
            end if;

			if (nr_sequencia_anterior_w IS NOT NULL AND nr_sequencia_anterior_w::text <> '') then
							
				select	max(dt_proxima_dose)
				into STRICT	dt_proxima_dose_w
				from	prescr_material
				where	((coalesce(hr_prim_horario, hr_prim_horario_ww) = hr_prim_horario_ww) or (mod(qt_hora_intervalo_w,24) > 0))
				and		cd_intervalo = cd_intervalo_w
				and		cd_material = cd_material_w
				and		nr_sequencia = nr_sequencia_anterior_w
				and		nr_prescricao = nr_prescricao_original_w;
				
				if (coalesce(dt_proxima_dose_w::text, '') = '') then
					dt_proxima_dose_w	:= dt_proxima_dose_orig_w;
					
					select	max(dt_horario)
					into STRICT	dt_horario_w
					from	prescr_mat_hor
					where	nr_seq_material	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
				else
					
					update	prescr_material
					set		dt_proxima_dose	= dt_proxima_dose_w,
							dt_administrar 	= dt_proxima_dose_w
					where	nr_sequencia	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
				end if;
			else
			
				select	max(dt_horario)
				into STRICT	dt_horario_w
				from	prescr_mat_hor
				where	nr_seq_material	= nr_sequencia_w
				and		nr_prescricao	= nr_prescricao_p;
			
				dt_proxima_dose_w	:= dt_horario_w;
			end if;
	
			if (qt_hora_intervalo_w > 24) then
				if	((coalesce(dt_proxima_dose_w::text, '') = '') or (dt_proxima_dose_w between dt_inicio_prescr_w and dt_validade_prescr_w)) then
					begin
					
					begin
					if (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') then
						if (dt_inicio_prescr_w > dt_proxima_dose_w) then
							qt_dia_prim_hor_w := pkg_date_utils.start_of(dt_inicio_prescr_w,'DD',0) - pkg_date_utils.start_of(dt_proxima_dose_w,'DD',0);
						else
							qt_dia_prim_hor_w := pkg_date_utils.start_of(dt_proxima_dose_w,'DD',0) - pkg_date_utils.start_of(dt_inicio_prescr_w,'DD',0);
						end if;
					else
						if (hr_prim_horario_ww < to_char(dt_inicio_prescr_w,'hh24:mi')) then
							qt_dia_prim_hor_w	:= 1;
						else
							qt_dia_prim_hor_w	:= 0;
						end if;
					end if;
					exception when others then
						null;
					end;
					if (qt_dia_prim_hor_w not between 0 and 1) then
						qt_dia_prim_hor_w	:= 0;
					end if;
					
					dt_proxima_dose_w	:= coalesce(dt_horario_w, dt_proxima_dose_w) + qt_hora_intervalo_w/24;
					
					update	prescr_material
					set		dt_proxima_dose	= dt_proxima_dose_w,
							ie_administrar	 = NULL,
							qt_dia_prim_hor	= qt_dia_prim_hor_w
					where	nr_sequencia	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
					
					end;
				elsif (ie_altera_dt_proxima_dose_w = 'S') and (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') and (dt_proxima_dose_w < dt_inicio_prescr_w) then
					begin
					
					if	((dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and (dt_horario_w	>= dt_inicio_prescr_w) and (dt_horario_w	< dt_validade_prescr_w)) then
						dt_proxima_dose_w	:= dt_horario_w + qt_hora_intervalo_w/24;
					else
						dt_proxima_dose_w	:= dt_inicio_prescr_w + qt_hora_intervalo_w/24;
					end if;	
					
					qt_dia_prim_hor_w := pkg_date_utils.extract_field('DAY', dt_inicio_prescr_w, 0) - pkg_date_utils.extract_field('DAY', dt_proxima_dose_w, 0);
					if (qt_dia_prim_hor_w	< 0) then
						qt_dia_prim_hor_w	:= 0;
					end if;
				
					update	prescr_material
					set		ie_administrar	 = NULL,
							hr_prim_horario = to_char(dt_proxima_dose_w, 'hh24:mi'),
							dt_proxima_dose	= dt_proxima_dose_w,
							dt_administrar 	= dt_proxima_dose_w,
							ds_horarios		= to_char(dt_proxima_dose_w, 'hh24:mi'),
							qt_dia_prim_hor = qt_dia_prim_hor_w
					where	nr_sequencia	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
					
					end;
				elsif (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') then
					begin
					
					qt_dia_prim_hor_w := pkg_date_utils.extract_field('DAY', dt_inicio_prescr_w, 0) - pkg_date_utils.extract_field('DAY', dt_proxima_dose_w, 0);
					if (qt_dia_prim_hor_w	< 0) then
						qt_dia_prim_hor_w	:= 0;
					end if;
					
					update	prescr_material
					set		ie_administrar	= 'N',
							ie_regra_disp	= 'N',
							qt_dia_prim_hor	= qt_dia_prim_hor_w
					where	nr_sequencia	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;

					update	prescr_material
					set		ie_administrar		= 'N',
							ie_regra_disp		= 'N'
					where	nr_sequencia_diluicao	= nr_sequencia_w
					and		nr_prescricao		= nr_prescricao_p;

					update	prescr_mat_hor
					set		ie_situacao	= 'I'
					where	nr_seq_material	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
					
					update	prescr_mat_hor
					set		ie_situacao	= 'I'
					where	nr_seq_superior	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
					
					end;
				end if;
			elsif (ie_altera_dt_proxima_dose_w = 'S') and (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') and (dt_proxima_dose_w < dt_inicio_prescr_w) then
				begin
				
				if	((dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and (dt_horario_w	>= dt_inicio_prescr_w) and (dt_horario_w	< dt_validade_prescr_w)) then
					dt_proxima_dose_w	:= dt_horario_w + qt_hora_intervalo_w/24;
				else
					dt_proxima_dose_w	:= dt_inicio_prescr_w + qt_hora_intervalo_w/24;
				end if;	
				
				qt_dia_prim_hor_w := pkg_date_utils.extract_field('DAY', dt_inicio_prescr_w, 0) - pkg_date_utils.extract_field('DAY', dt_proxima_dose_w, 0);
				if (qt_dia_prim_hor_w	< 0) then
					qt_dia_prim_hor_w	:= 0;
				end if;
			
				update	prescr_material
				set		hr_prim_horario = to_char(dt_proxima_dose_w, 'hh24:mi'),
						ie_administrar	 = NULL,
						dt_proxima_dose	= dt_proxima_dose_w,
						dt_administrar 	= dt_proxima_dose_w,
						ds_horarios		= to_char(dt_proxima_dose_w, 'hh24:mi'),
						qt_dia_prim_hor = qt_dia_prim_hor_w
				where	nr_sequencia	= nr_sequencia_w
				and		nr_prescricao	= nr_prescricao_p;
				
				end;
			end if;
			end;
		end loop;
		close c07;
	end if;
	exception when others then
		null;
	end;
end loop;
close c001;


ie_info_rastre_prescr_w := obter_se_info_rastre_prescr( 'L', nm_usuario_p, cd_perfil_p, cd_estabelecimento_w );

if (ie_info_rastre_prescr_w = 'S') then
	ds_alteracao_rastre_w := substr('Gerar log Rastreabilidade Alteracoes / Liberar_item_prescricao = ' || 'NR_PRESCRICAO_P: ' || nr_prescricao_p
			|| ' IE_REALIZA_GERACAO_W: ' 	|| ie_realiza_geracao_w 
			|| ' IE_GRAVAR_HOR_W: ' 	 	|| ie_gravar_hor_w
			|| ' VARIE_LOTE_SEP_AGORA_W: ' 	|| varie_lote_sep_agora_w
			|| ' NR_SEQUENCIA_P: ' 			|| nr_sequencia_p
			,1,1800);
			
	CALL Gerar_log_prescr_mat(nr_prescricao_p, null, null, null, null, ds_alteracao_rastre_w, nm_usuario_p, 'N');
end if;

if (ie_realiza_geracao_w = 'S') and (ie_gravar_hor_w = 'S') then
	
	if (varie_lote_sep_agora_w = 'E') and (coalesce(nr_sequencia_p::text, '') = '') then
	
		CALL Gerar_prescr_mat_hor(nr_prescricao_p, 0,cd_perfil_p,nm_usuario_p,'N','S', nr_seq_regra_w,'E');
		CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, 0, 0, 'N', nm_usuario_p, 'GPMH');
	elsif (varie_lote_sep_agora_w = 'N') then
		CALL Gerar_prescr_mat_hor(nr_prescricao_p, 0,cd_perfil_p,nm_usuario_p,'N','S', nr_seq_regra_w,'N'); /*Medicamentos, materiais*/
	end if;	
end if;

if (varie_lote_sep_agora_w = 'S') then
	
	if (ie_gravar_hor_w = 'S') then
		CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p, null,cd_perfil_p,'N', nm_usuario_p,'N', null);
	end if;

	open C13;
	loop
	fetch C13 into	
		nr_seq_material_w,
		ie_urgencia_w,
		ie_necessita_liberacao_w,
		ie_lib_farm_w,
		dt_liberacao_farmacia_w,
		ie_momento_lib_w,
		nr_sequencia_diluicao_w,
		nr_seq_kit_w,
		ie_indice_cursor_w,
		nr_ocorrencia_w;
	EXIT WHEN NOT FOUND; /* apply on C13 */

		nr_seq_solucao_ww	:= null;

		if (nr_sequencia_diluicao_w IS NOT NULL AND nr_sequencia_diluicao_w::text <> '') then
			select	coalesce(max(Obter_momento_lib_item(nr_seq_regra_w,cd_material,cd_setor_atendimento_w,cd_intervalo,ie_acm,ie_se_necessario,ie_dose_espec_agora,ie_urgencia,'N')),'N')
			into STRICT	ie_momento_lib_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_sequencia_diluicao_w;
		elsif (nr_seq_kit_w IS NOT NULL AND nr_seq_kit_w::text <> '') then	
			select	coalesce(max(Obter_momento_lib_item(nr_seq_regra_w,cd_material,cd_setor_atendimento_w,cd_intervalo,ie_acm,ie_se_necessario,ie_dose_espec_agora,ie_urgencia,'N')),'N')
			into STRICT	ie_momento_lib_w
			from	prescr_material
			where	nr_prescricao	= nr_prescricao_p
			and	nr_sequencia	= nr_seq_kit_w;
		end if;
		
		if (ie_gravar_hor_w = 'S') and
			((coalesce(ie_lib_farm_w,'N') = 'N') or (dt_liberacao_farmacia_w IS NOT NULL AND dt_liberacao_farmacia_w::text <> '')) and (ie_momento_lib_w	= 'N') then
			
			nr_seq_horario_w	:= null;
			
			if (ie_indice_cursor_w = 2) or (coalesce(nr_ocorrencia_w, 0) > 1 and obter_funcao_ativa = 2314) then
				ds_sql_w	:=
				' select	min(nr_sequencia) ' ||
				' from		prescr_mat_hor ' ||
				' where		nr_prescricao	= :nr_prescricao_p ' ||
				' and		nr_seq_material	= :nr_seq_material_w ';

				if (ie_indice_cursor_w = 2) then
					ds_sql_w	:= ds_sql_w || ' and		ie_dose_especial = ''S'' ';
				end if;

				EXECUTE
					ds_sql_w
				into STRICT
					nr_seq_horario_w
				using
					nr_prescricao_p,
					nr_seq_material_w;
			end if;
			
			
			CALL Atualiza_prescr_hor_sem_lote(nr_prescricao_p,nr_seq_material_w,cd_perfil_p,nm_usuario_p,'N', nr_seq_horario_w);
		end if;
		
		open c07;
		loop
		fetch c07 into
			nr_sequencia_w,
			qt_hora_intervalo_w,
			dt_proxima_dose_w,
			nr_sequencia_anterior_w,
			nr_prescricao_original_w,
			cd_material_w,
			cd_intervalo_w,
			hr_prim_horario_ww,
            nr_seq_mat_cpoe_w,
            dt_inicio_medic_w;
		EXIT WHEN NOT FOUND; /* apply on c07 */
			begin
			dt_proxima_dose_orig_w	:= dt_proxima_dose_w;
			dt_horario_w			:= null;
				
			hr_prim_horario_ww	:= coalesce(hr_prim_horario_ww, to_char(dt_inicio_prescr_w, 'hh24:mi'));
			
            select  max(a.ie_operacao)
            into STRICT    ie_operacao_interv_w
            from    intervalo_prescricao a
            where   a.cd_intervalo = cd_intervalo_w;

            if ((nr_seq_mat_cpoe_w IS NOT NULL AND nr_seq_mat_cpoe_w::text <> '') and ie_operacao_interv_w = 'D') then
                nr_horas_apos_copia_w := get_qt_hours_after_copy_cpoe(cd_perfil_p => cd_perfil_p,
                                                                        nm_usuario_p => nm_usuario_p,
                                                                        cd_estabelecimento_p => cd_estabelecimento_w);
                select  max(a.dt_prox_geracao) + nr_horas_apos_copia_w
                into STRICT    dt_prox_geracao_w
                from    cpoe_material a
                where   a.nr_sequencia = nr_seq_mat_cpoe_w;

                qt_hora_intervalo_w := coalesce(obter_tempo_entre_datas(dt_inicio_medic_w, dt_prox_geracao_w, 'T'), qt_hora_intervalo_w);
            end if;


			if (nr_sequencia_anterior_w IS NOT NULL AND nr_sequencia_anterior_w::text <> '') then
							
				select	max(dt_proxima_dose)
				into STRICT	dt_proxima_dose_w
				from	prescr_material
				where	((coalesce(hr_prim_horario, hr_prim_horario_ww) = hr_prim_horario_ww) or (mod(qt_hora_intervalo_w,24) > 0))
				and		cd_intervalo = cd_intervalo_w
				and		cd_material = cd_material_w
				and		nr_sequencia = nr_sequencia_anterior_w
				and		nr_prescricao = nr_prescricao_original_w;
				
				if (coalesce(dt_proxima_dose_w::text, '') = '') then
					dt_proxima_dose_w	:= dt_proxima_dose_orig_w;
					
					select	max(dt_horario)
					into STRICT	dt_horario_w
					from	prescr_mat_hor
					where	nr_seq_material	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
				else
					
					update	prescr_material
					set		dt_proxima_dose	= dt_proxima_dose_w,
							dt_administrar 	= dt_proxima_dose_w
					where	nr_sequencia	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
				end if;
			else
			
				select	max(dt_horario)
				into STRICT	dt_horario_w
				from	prescr_mat_hor
				where	nr_seq_material	= nr_sequencia_w
				and		nr_prescricao	= nr_prescricao_p;
			
				dt_proxima_dose_w	:= dt_horario_w;
			end if;
			
			if (qt_hora_intervalo_w > 24) then
				if	((coalesce(dt_proxima_dose_w::text, '') = '') or (dt_proxima_dose_w between dt_inicio_prescr_w and dt_validade_prescr_w)) then
					begin
					
					if (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') then
						if (dt_inicio_prescr_w > dt_proxima_dose_w) then
							qt_dia_prim_hor_w := pkg_date_utils.start_of(dt_inicio_prescr_w, 'DD', 0) - pkg_date_utils.start_of(dt_proxima_dose_w, 'DD', 0);
						else
							qt_dia_prim_hor_w := pkg_date_utils.start_of(dt_proxima_dose_w, 'DD', 0) - pkg_date_utils.start_of(dt_inicio_prescr_w, 'DD', 0);
						end if;
					else
						if (hr_prim_horario_ww < to_char(dt_inicio_prescr_w,'hh24:mi')) then
							qt_dia_prim_hor_w	:= 1;
						else
							qt_dia_prim_hor_w	:= 0;
						end if;
					end if;

					if (qt_dia_prim_hor_w not between 0 and 1) then
						qt_dia_prim_hor_w	:= 0;
					end if;
					
					dt_proxima_dose_w	:= coalesce(dt_horario_w, dt_proxima_dose_w) + qt_hora_intervalo_w/24;
					
					if (mod(qt_hora_intervalo_w,24) > 0) then
						update	prescr_material
						set		dt_proxima_dose	= dt_proxima_dose_w,
								dt_administrar 	= dt_proxima_dose_w,
								ie_administrar	 = NULL,
								qt_dia_prim_hor	= qt_dia_prim_hor_w
						where	nr_sequencia	= nr_sequencia_w
						and		nr_prescricao	= nr_prescricao_p;
					else
						update	prescr_material
						set		hr_prim_horario	= to_char(dt_proxima_dose_w,'hh24:mi'),
								ds_horarios	= to_char(dt_proxima_dose_w,'hh24:mi '),
								dt_proxima_dose	= dt_proxima_dose_w,
								dt_administrar 	= dt_proxima_dose_w,
								ie_administrar	 = NULL,
								qt_dia_prim_hor	= qt_dia_prim_hor_w
						where	nr_sequencia	= nr_sequencia_w
						and		nr_prescricao	= nr_prescricao_p;
					end if;
					
					end;
				elsif (ie_altera_dt_proxima_dose_w = 'S') and (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') and (dt_proxima_dose_w < dt_inicio_prescr_w) then
					begin
					
					if	((dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and (dt_horario_w	>= dt_inicio_prescr_w) and (dt_horario_w	< dt_validade_prescr_w)) then
						dt_proxima_dose_w	:= dt_horario_w + qt_hora_intervalo_w/24;
					else
						dt_proxima_dose_w	:= dt_inicio_prescr_w + qt_hora_intervalo_w/24;
					end if;	
					
					qt_dia_prim_hor_w := pkg_date_utils.extract_field('DAY', dt_inicio_prescr_w, 0) - pkg_date_utils.extract_field('DAY', dt_proxima_dose_w, 0);
					if (qt_dia_prim_hor_w not between 0 and 1) then
						qt_dia_prim_hor_w	:= 0;
					end if;
				
					update	prescr_material
					set		ie_administrar	 = NULL,
							hr_prim_horario = to_char(dt_proxima_dose_w, 'hh24:mi'),
							dt_proxima_dose	= dt_proxima_dose_w,
							dt_administrar 	= dt_proxima_dose_w,
							ds_horarios		= to_char(dt_proxima_dose_w, 'hh24:mi'),
							qt_dia_prim_hor = qt_dia_prim_hor_w
					where	nr_sequencia	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
					
					end;
				elsif (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') then
					begin
					
					update	prescr_material
					set		ie_administrar	= 'N',
							ie_regra_disp	= 'N'
					where	nr_sequencia	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;

					update	prescr_material
					set		ie_administrar		= 'N',
							ie_regra_disp		= 'N'
					where	nr_sequencia_diluicao	= nr_sequencia_w
					and		nr_prescricao		= nr_prescricao_p;

					update	prescr_mat_hor
					set		ie_situacao	= 'I'
					where	nr_seq_material	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
					
					update	prescr_mat_hor
					set		ie_situacao	= 'I'
					where	nr_seq_superior	= nr_sequencia_w
					and		nr_prescricao	= nr_prescricao_p;
					
					end;
				end if;
			elsif (ie_altera_dt_proxima_dose_w = 'S') and (dt_proxima_dose_w IS NOT NULL AND dt_proxima_dose_w::text <> '') and (dt_proxima_dose_w < dt_inicio_prescr_w) then
				begin
				
				if	((dt_horario_w IS NOT NULL AND dt_horario_w::text <> '') and (dt_horario_w	>= dt_inicio_prescr_w) and (dt_horario_w	< dt_validade_prescr_w)) then
					dt_proxima_dose_w	:= dt_horario_w + qt_hora_intervalo_w/24;
				else
					dt_proxima_dose_w	:= dt_inicio_prescr_w + qt_hora_intervalo_w/24;
				end if;	
				
				qt_dia_prim_hor_w := pkg_date_utils.extract_field('DAY', dt_inicio_prescr_w, 0) - pkg_date_utils.extract_field('DAY', dt_proxima_dose_w, 0);
				if (qt_dia_prim_hor_w	< 0) then
					qt_dia_prim_hor_w	:= 0;
				end if;
			
				update	prescr_material
				set		hr_prim_horario = to_char(dt_proxima_dose_w, 'hh24:mi'),
						ie_administrar	 = NULL,
						dt_proxima_dose	= dt_proxima_dose_w,
						dt_administrar 	= dt_proxima_dose_w,
						ds_horarios		= to_char(dt_proxima_dose_w, 'hh24:mi'),
						qt_dia_prim_hor = qt_dia_prim_hor_w
				where	nr_sequencia	= nr_sequencia_w
				and		nr_prescricao	= nr_prescricao_p;
				
				end;
			end if;
			end;
		end loop;
		close c07;
		
		CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, nr_seq_material_w, 0, 'N', nm_usuario_p, 'GPMH');
		
	end loop;
	close c13;

	delete
	from 	prescr_mat_hor
	where	nr_prescricao = nr_prescricao_p
	and	coalesce(dt_lib_horario::text, '') = ''
	and	coalesce(dt_suspensao::text, '') = '';
	
end if;

if (coalesce(ie_proced_agora_w,'S') = 'N') then
	open C15;
	loop
	fetch C15 into	
		nr_seq_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C15 */
		CALL gerar_prescr_proc_sem_dt_lib(nr_prescricao_p,nr_seq_proc_w,cd_perfil_p,'S',nm_usuario_p);
	end loop;
	close C15;
end if;

if (coalesce(ie_rec_agora_w,'N') = 'S') then
	open C16;
	loop
	fetch C16 into	
		nr_rec_w;
	EXIT WHEN NOT FOUND; /* apply on C16 */
		CALL Gerar_prescr_hor_sem_lib(nr_prescricao_p,nr_rec_w,cd_perfil_p,'S',nm_usuario_p,null);
	end loop;
	close C16;
end if;
	
select	max(obter_se_medico(cd_prescritor_w, 'M'))
into STRICT	ie_medico_w
;
	
open c18;
loop
fetch c18 into
	nr_seq_mat_cpoe_w;
EXIT WHEN NOT FOUND; /* apply on c18 */
	begin

	select
		cd_material,
		ie_via_aplicacao,
		cd_pessoa_fisica,
    dt_inicio,
    cd_intervalo,
    ie_duracao
	into STRICT
		cd_material_w,
		ie_via_aplicacao_w,
		cd_pessoa_fisica_w,
    dt_inicio_w,
    cd_intervalo_w,
    ie_duracao_w
	from cpoe_material
	where nr_sequencia = nr_seq_mat_cpoe_w;

  SELECT * FROM cpoe_consist_regra_prescr_mat(
							nr_atendimento_p, cd_material_w, 'N', ie_via_aplicacao_w, Obter_Tipo_Atendimento(nr_atendimento_p), obter_setor_atendimento(nr_atendimento_p), obter_perfil_ativo, Obter_Convenio_Atendimento(nr_atendimento_p), wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, cd_pessoa_fisica_w, dt_inicio_w, ds_erro_regra_w, ds_mensagem_w, ie_abortar_w, cd_intervalo_w, ie_duracao_w) INTO STRICT ds_erro_regra_w, ds_mensagem_w, ie_abortar_w;

  if (ds_erro_regra_w = 'M') then
		update	cpoe_material
		set		ie_ordered_on_behalf = 'S'
		where	nr_sequencia = nr_seq_mat_cpoe_w;
  elsif (ds_erro_regra_w = 'D') then
		update	cpoe_material
		set		ie_exige_ciencia = 'S'
		where	nr_sequencia = nr_seq_mat_cpoe_w;
  end if;

	end;
end loop;
close c18;
	
for c19_proc_w in c19_prescr_procedimento loop

	select
		nr_seq_proc_interno,
		cd_material_exame,
		dt_prev_execucao
	into STRICT
		nr_seq_proc_interno_w,
		cd_material_exame_w,
		dt_prev_execucao_w
	from cpoe_procedimento
	where nr_sequencia = c19_proc_w.nr_seq_proc_cpoe_w;

	SELECT * FROM cpoe_consist_regra_presc_proce(
							nr_atendimento_p, null, null, null, nr_seq_proc_interno_w, obter_perfil_ativo, obter_setor_atendimento(nr_atendimento_p), cd_material_exame_w, nm_usuario_p, dt_prev_execucao_w, ds_erro_regra_w, ds_mensagem_w, ie_abortar_w) INTO STRICT ds_erro_regra_w, ds_mensagem_w, ie_abortar_w;

  if (ds_erro_regra_w = 'M') then
		update	cpoe_procedimento
		set		ie_ordered_on_behalf = 'S'
		where	nr_sequencia = c19_proc_w.nr_seq_proc_cpoe_w;
  elsif (ds_erro_regra_w = 'D') then
		update	cpoe_procedimento
		set		ie_exige_ciencia = 'S'
		where	nr_sequencia = c19_proc_w.nr_seq_proc_cpoe_w;
  end if;

end loop;

select	count(*)
into STRICT	qt_medic_w
from	prescr_material a,
		cpoe_material b
where	a.nr_seq_mat_cpoe = b.nr_sequencia
and 	a.nr_prescricao	= nr_prescricao_p
and		(b.ie_controle_tempo IS NOT NULL AND b.ie_controle_tempo::text <> '')
and		coalesce(b.ie_material,'N') = 'N'
and (b.ie_ordered_on_behalf = 'S' or b.ie_exige_ciencia = 'S');

select	count(*)
into STRICT	qt_procedimento_w
from	prescr_procedimento a,
	cpoe_procedimento b
where	a.nr_seq_proc_cpoe = b.nr_sequencia
and 	a.nr_prescricao	= nr_prescricao_p
and 	a.ie_status_execucao <> 'ASA'
and (b.ie_ordered_on_behalf = 'S' or b.ie_exige_ciencia = 'S');



if (qt_procedimento_w > 0 or qt_medic_w > 0) then
	ie_gera_worklist_w := 'S';
end if;


		
select	(CASE WHEN (max(nr_prescricoes) IS NOT NULL AND (max(nr_prescricoes))::text <> '') THEN 'S' ELSE 'N' END)
into STRICT	ie_existe_tarefa_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

select 	max(cd_pessoa_fisica),
		max(nr_seq_tipo_admissao_fat),
		max(ie_tipo_atendimento),
		max(nr_seq_episodio)
into STRICT	cd_paciente_w,
		nr_seq_tipo_adm_fat_atd_w,
		ie_tipo_atendimento_w,
		nr_seq_episodio_w
from	atendimento_paciente
where	nr_atendimento = nr_atendimento_p;


if (coalesce(nr_atendimento_p, 0) > 0) and (ie_medico_w <> 'S')  and (ie_gera_worklist_w = 'S') then

	select	count(a.nr_sequencia)
	into STRICT	is_rule_tasklist_w
	from	wl_item a,
			wl_regra_worklist b,
			wl_regra_item c
	where	a.nr_sequencia = b.nr_seq_item
	and		b.nr_sequencia = c.nr_seq_regra
	and		a.cd_categoria = 'RA'
	and		a.ie_situacao = 'A'
	and		c.ie_situacao = 'A';

	if (ie_existe_tarefa_w = 'N' and is_rule_tasklist_w > 0)then
	
		open c17;
		loop
		fetch c17 into
			qt_tempo_ciencia_w,
			nr_seq_regra_wl_w;
		EXIT WHEN NOT FOUND; /* apply on c17 */
			begin
				if (qt_tempo_ciencia_w > 0 and obter_se_regra_geracao(nr_seq_regra_wl_w,nr_seq_episodio_w,nr_seq_tipo_adm_fat_atd_w) = 'S') then
					-- Gera Tarefa no Worklist para pendencia de ciencia
					CALL wl_gerar_finalizar_tarefa('RA','I',nr_atendimento_p,cd_paciente_w,nm_usuario_p,clock_timestamp()+(qt_tempo_ciencia_w/24),'S',
											null,null,null,nr_prescricao_p,null,null,null,null,null,nr_seq_regra_wl_w,null,null,null,null,null,null,null,clock_timestamp(),nr_seq_episodio_w);
				end if;
			end;
		end loop;
		close c17;	
		
	end if;
	
end if;

select	count(*)
into STRICT	qt_procedimento_asa_w
from	prescr_procedimento a,
		cpoe_procedimento b
where	a.nr_seq_proc_cpoe = b.nr_sequencia
and 	a.nr_prescricao	= nr_prescricao_p
and 	a.ie_status_execucao = 'ASA';

select	count(a.nr_sequencia)
into STRICT	is_rule_tasklist_sa_w
from	wl_item a,
		wl_regra_worklist b,
		wl_regra_item c
where	a.nr_sequencia = b.nr_seq_item
and	b.nr_sequencia = c.nr_seq_regra
and	a.cd_categoria = 'SA'
and	a.ie_situacao = 'A'
and	c.ie_situacao = 'A';

if (coalesce(nr_atendimento_p, 0) > 0  and qt_procedimento_asa_w > 0 and is_rule_tasklist_sa_w > 0 and ie_existe_tarefa_w = 'N') then

	open c20;
	loop
	fetch c20 into
		qt_tempo_sa_w,
		nr_seq_regra_wl_sa_w;
	EXIT WHEN NOT FOUND; /* apply on c20 */
		begin
			if (qt_tempo_sa_w > 0 and obter_se_regra_geracao(nr_seq_regra_wl_sa_w,nr_seq_episodio_w,nr_seq_tipo_adm_fat_atd_w) = 'S') then

				CALL wl_gerar_finalizar_tarefa('SA','I',nr_atendimento_p,cd_paciente_w,nm_usuario_p,clock_timestamp()+(qt_tempo_sa_w/24),'S',
										null,null,null,nr_prescricao_p,null,null,null,null,null,nr_seq_regra_wl_sa_w,null,null,null,null,null,null,null,clock_timestamp(),nr_seq_episodio_w);
			end if;
		end;
	end loop;
	close c20;

end if;
if (pkg_i18n.get_user_locale = 'ja_JP') then
begin
select	count(a.nr_sequencia)
into STRICT	is_rule_tasklist_pa_w
from	wl_item a,
		wl_regra_worklist b,
		wl_regra_item c
where	a.nr_sequencia = b.nr_seq_item
and	b.nr_sequencia = c.nr_seq_regra
and	a.cd_categoria = 'PA'
and	a.ie_situacao = 'A'
and	c.ie_situacao = 'A';

if (coalesce(nr_atendimento_p, 0) > 0 and is_rule_tasklist_pa_w > 0 and ie_existe_tarefa_w = 'N') then

	open c21;
	loop
	fetch c21 into
		qt_tempo_pa_w,
		nr_seq_regra_wl_pa_w;
	EXIT WHEN NOT FOUND; /* apply on c21 */
		begin
			if (obter_se_regra_geracao(nr_seq_regra_wl_pa_w,nr_seq_episodio_w,nr_seq_tipo_adm_fat_atd_w) = 'S') then

				CALL wl_gerar_finalizar_tarefa('PA','I',nr_atendimento_p,cd_paciente_w,nm_usuario_p,clock_timestamp()+(qt_tempo_pa_w/24),'N',
										null,null,null,nr_prescricao_p,null,null,null,null,null,nr_seq_regra_wl_pa_w,null,null,null,null,null,null,null,clock_timestamp(),nr_seq_episodio_w);
			end if;
		end;
	end loop;
	close c21;
  end if;
end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_item_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, ie_tipo_pessoa_p text, cd_perfil_p bigint, nm_usuario_p text, ie_prescricao_p text, ie_lib_item_p text, ie_tipo_item_p text, ds_erro_p INOUT text) FROM PUBLIC;

