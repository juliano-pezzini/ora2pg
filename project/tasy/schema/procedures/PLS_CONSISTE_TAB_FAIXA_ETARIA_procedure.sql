-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_tab_faixa_etaria ( nr_seq_tabela_p pls_tabela_preco.nr_sequencia%type, nr_seq_plano_preco_p pls_plano_preco.nr_sequencia%type, qt_idade_inicial_p pls_plano_preco.qt_idade_inicial%type, qt_idade_final_p pls_plano_preco.qt_idade_final%type, ie_grau_titularidade_p pls_plano_preco.ie_grau_titularidade%type, qt_vidas_inicial_p pls_plano_preco.qt_vidas_inicial%type, qt_vidas_final_p pls_plano_preco.qt_vidas_final%type, vl_preco_atual_p pls_plano_preco.vl_preco_atual%type, vl_preco_nao_subsid_atual_p pls_plano_preco.vl_preco_nao_subsid_atual%type, tx_acrescimo_p pls_plano_preco.tx_acrescimo%type, ds_erro_p INOUT text ) AS $body$
DECLARE


/*
	Esta procedure foi criada com base na PLS_CONSISTE_FAIXA_ETARIA.
	A rotina PLS_CONSISTE_FAIXA_ETARIA não deve mais ser utilizada, e sim a PLS_CONSISTE_TAB_FAIXA_ETARIA. 
*/
-- Campos do cursor 1
nr_seq_faixa_outro_w		pls_plano_preco.nr_sequencia%type;
qt_idade_inicial_outro_w	pls_plano_preco.qt_idade_inicial%type;
qt_idade_final_outro_w		pls_plano_preco.qt_idade_final%type;
ie_grau_titularidade_outro_w	pls_plano_preco.ie_grau_titularidade%type;
qt_vidas_inicial_outro_w	pls_plano_preco.qt_vidas_inicial%type;
qt_vidas_final_outro_w		pls_plano_preco.qt_vidas_final%type;

-- Campos vindos como parâmetro
qt_idade_inicial_w		pls_plano_preco.qt_idade_inicial%type;
qt_idade_final_w		pls_plano_preco.qt_idade_final%type;
ie_grau_titularidade_w		pls_plano_preco.ie_grau_titularidade%type;
qt_vidas_inicial_w		pls_plano_preco.qt_vidas_inicial%type;
qt_vidas_final_w		pls_plano_preco.qt_vidas_final%type;
vl_preco_atual_w		pls_plano_preco.vl_preco_atual%type;
vl_preco_nao_subsid_atual_w	pls_plano_preco.vl_preco_nao_subsid_atual%type;
tx_acrescimo_w			pls_plano_preco.tx_acrescimo%type;

ie_preco_vidas_contrato_w	pls_tabela_preco.ie_preco_vidas_contrato%type;
nr_seq_faixa_anterior_w		pls_plano_preco.nr_sequencia%type;
vl_preco_fx_anterior_w		pls_plano_preco.vl_preco_atual%type;

ds_erro_w			varchar(4000) := null;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		qt_idade_inicial,
		qt_idade_final,
		ie_grau_titularidade,
		qt_vidas_inicial,
		qt_vidas_final
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_p
	and	nr_sequencia	<> nr_seq_plano_preco_p;


BEGIN

qt_idade_inicial_w		:= qt_idade_inicial_p;
qt_idade_final_w		:= qt_idade_final_p;
ie_grau_titularidade_w		:= ie_grau_titularidade_p;
qt_vidas_inicial_w		:= qt_vidas_inicial_p;
qt_vidas_final_w		:= qt_vidas_final_p;
vl_preco_atual_w		:= vl_preco_atual_p;
vl_preco_nao_subsid_atual_w	:= coalesce(vl_preco_nao_subsid_atual_p,0);
tx_acrescimo_w			:= coalesce(tx_acrescimo_p,0);

select	coalesce(ie_preco_vidas_contrato,'N')
into STRICT	ie_preco_vidas_contrato_w
from	pls_tabela_preco
where	nr_sequencia = nr_seq_tabela_p;

if (qt_idade_inicial_w = 0) and (tx_acrescimo_w <> 0) then
	ds_erro_w := ds_erro_w || '       - ' || wheb_mensagem_pck.get_texto(329718) || ';' || chr(13);
	-- Mensagem: O percentual de acréscimo deve ser igual a zero para a 1ª faixa etária;
end if;

if (vl_preco_nao_subsid_atual_w > vl_preco_atual_w) then
	ds_erro_w := ds_erro_w || '       - ' || wheb_mensagem_pck.get_texto(288695) || ';' || chr(13);
	-- Mensagem: O preço não subsidiado atual não pode ser maior que o preço atual;
end if;

if (qt_idade_inicial_w > qt_idade_final_w) then
	ds_erro_w := ds_erro_w || '       - ' || wheb_mensagem_pck.get_texto(329698) || ';' || chr(13);
	-- Mensagem: A idade inicial não pode ser maior que a idade final;
end if;

if (ie_preco_vidas_contrato_w = 'S') then
	if (qt_vidas_inicial_w > qt_vidas_final_w) then
		ds_erro_w := ds_erro_w || '       - ' || wheb_mensagem_pck.get_texto(329713) || ';' || chr(13);
		-- Mensagem: A quantidade de vidas inicial não pode ser maior que a quantidade de vidas final;
	end if;
end if;

select 	max(nr_sequencia)
into STRICT 	nr_seq_faixa_anterior_w
from	pls_plano_preco   a
where	a.nr_seq_tabela	= nr_seq_tabela_p
and	a.qt_idade_final+1 = qt_idade_inicial_w
and	coalesce(ie_grau_titularidade,'X') = coalesce(ie_grau_titularidade_w,'X');

if (coalesce(nr_seq_faixa_anterior_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_faixa_anterior_w
	from	pls_plano_preco	a
	where	a.nr_seq_tabela = nr_seq_tabela_p
	and	a.qt_idade_final+1 = qt_idade_inicial_w
	and	a.vl_preco_atual = (	SELECT	max(x.vl_preco_atual)
					from	pls_plano_preco x
					where	x.nr_seq_tabela = nr_seq_tabela_p
					and	x.qt_idade_final+1 = qt_idade_inicial_w);
end if;	

if (nr_seq_faixa_anterior_w IS NOT NULL AND nr_seq_faixa_anterior_w::text <> '') then
	select 	vl_preco_atual
	into STRICT	vl_preco_fx_anterior_w
	from	pls_plano_preco
	where   nr_sequencia = nr_seq_faixa_anterior_w;
	
	if (vl_preco_fx_anterior_w > vl_preco_atual_w) then
		ds_erro_w := ds_erro_w || ' - ' || wheb_mensagem_pck.get_texto(349140) || ';' || chr(13);
		-- Mensagem: O preço atual não pode ser menor que o preço da faixa etária anterior;
	end if;
end if;

open C01;
loop
fetch C01 into
	nr_seq_faixa_outro_w,
	qt_idade_inicial_outro_w,
	qt_idade_final_outro_w,
	ie_grau_titularidade_outro_w,
	qt_vidas_inicial_outro_w,
	qt_vidas_final_outro_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	
	if (ie_preco_vidas_contrato_w = 'N') then
			
		if	((qt_idade_inicial_w 	>= qt_idade_inicial_outro_w AND qt_idade_inicial_w 	<= qt_idade_final_outro_w) or
			 (qt_idade_final_w 	>= qt_idade_inicial_outro_w AND qt_idade_final_w 	<= qt_idade_final_outro_w) or
			 (qt_idade_inicial_w 	<= qt_idade_inicial_outro_w AND qt_idade_final_w   	>= qt_idade_final_outro_w) or
			 (qt_idade_inicial_w 	>= qt_idade_inicial_outro_w AND qt_idade_final_w   	<= qt_idade_final_outro_w)) and (coalesce(ie_grau_titularidade_w, 'X') = coalesce(ie_grau_titularidade_outro_w, 'X')) then
			
			ds_erro_w := ds_erro_w || ' - ' || wheb_mensagem_pck.get_texto(329689, 'NR_SEQ_FAIXA_ETARIA=' || nr_seq_faixa_outro_w) || ';' || chr(13);
			-- Mensagem: Faixa etária em conflito com a faixa etária NR_SEQ_FAIXA_ETARIA;
		end if;
	
	else -- if	(ie_preco_vidas_contrato_w = 'S') and
		
		if	(((coalesce(qt_vidas_inicial_w, coalesce(qt_vidas_inicial_outro_w,0)) 	>= coalesce(qt_vidas_inicial_outro_w, coalesce(qt_vidas_inicial_w,0))) and (coalesce(qt_vidas_inicial_w, coalesce(qt_vidas_final_outro_w,0)) 	<= coalesce(qt_vidas_final_outro_w, coalesce(qt_vidas_inicial_w,0)))) or
			 ((coalesce(qt_vidas_final_w, coalesce(qt_vidas_inicial_outro_w,0)) 	>= coalesce(qt_vidas_inicial_outro_w, coalesce(qt_vidas_final_w,0))) and (coalesce(qt_vidas_final_w, coalesce(qt_vidas_final_outro_w,0)) 	<= coalesce(qt_vidas_final_outro_w, coalesce(qt_vidas_final_w,0)))) or
			 ((coalesce(qt_vidas_inicial_w, coalesce(qt_vidas_inicial_outro_w,0))	>= coalesce(qt_vidas_inicial_outro_w, coalesce(qt_vidas_inicial_w,0))) and (coalesce(qt_vidas_final_w, coalesce(qt_vidas_final_outro_w,0)) 	<= coalesce(qt_vidas_final_outro_w, coalesce(qt_vidas_final_w,0)))) or
			 ((coalesce(qt_vidas_inicial_w, coalesce(qt_vidas_inicial_outro_w,0)) 	<= coalesce(qt_vidas_inicial_outro_w, coalesce(qt_vidas_inicial_w,0))) and (coalesce(qt_vidas_final_w, coalesce(qt_vidas_final_outro_w,0)) 	>= coalesce(qt_vidas_final_outro_w, coalesce(qt_vidas_final_w,0))))) and (coalesce(ie_grau_titularidade_w, 'X') = coalesce(ie_grau_titularidade_outro_w, 'X')) then
			
			if	(qt_idade_inicial_w 	>= qt_idade_inicial_outro_w AND qt_idade_inicial_w 	<= qt_idade_final_outro_w) or
				(qt_idade_final_w 	>= qt_idade_inicial_outro_w AND qt_idade_final_w 	<= qt_idade_final_outro_w) or
				(qt_idade_inicial_w 	<= qt_idade_inicial_outro_w AND qt_idade_final_w 	>= qt_idade_final_outro_w) or
				(qt_idade_inicial_w 	>= qt_idade_inicial_outro_w AND qt_idade_final_w   	<= qt_idade_final_outro_w) then
			
				ds_erro_w := ds_erro_w || ' - ' || wheb_mensagem_pck.get_texto(329689, 'NR_SEQ_FAIXA_ETARIA=' || nr_seq_faixa_outro_w) || ';' || chr(13);
				-- Mensagem: Faixa etária em conflito com a faixa etária NR_SEQ_FAIXA_ETARIA;
			end if;
		end if;
	end if;	
end loop;
close c01;

if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	ds_erro_p := substr(substr(ds_erro_w, 1, length(ds_erro_w) - 2) || '.',1,255);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_tab_faixa_etaria ( nr_seq_tabela_p pls_tabela_preco.nr_sequencia%type, nr_seq_plano_preco_p pls_plano_preco.nr_sequencia%type, qt_idade_inicial_p pls_plano_preco.qt_idade_inicial%type, qt_idade_final_p pls_plano_preco.qt_idade_final%type, ie_grau_titularidade_p pls_plano_preco.ie_grau_titularidade%type, qt_vidas_inicial_p pls_plano_preco.qt_vidas_inicial%type, qt_vidas_final_p pls_plano_preco.qt_vidas_final%type, vl_preco_atual_p pls_plano_preco.vl_preco_atual%type, vl_preco_nao_subsid_atual_p pls_plano_preco.vl_preco_nao_subsid_atual%type, tx_acrescimo_p pls_plano_preco.tx_acrescimo%type, ds_erro_p INOUT text ) FROM PUBLIC;

