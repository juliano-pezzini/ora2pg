-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ultima_carencia ( nr_seq_segurado_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
qt_carencia_benef_w		bigint;
qt_carencia_contrato_w		bigint;
qt_carencia_plano_w		bigint;
dt_inclusao_operadora_w		timestamp;
ie_mes_posterior_w		varchar(1);
dt_inicio_vigencia_w		timestamp;
qt_dias_w			bigint;
dt_carencia_w			timestamp;
dt_ultima_carencia_w		timestamp;
qt_carencias_benef_w		bigint := 0;
qt_carencias_contrato_w		bigint := 0;
qt_carencias_produto_w		bigint := 0;

C01 CURSOR FOR
	SELECT	coalesce(a.ie_mes_posterior,'N'),
		a.dt_inicio_vigencia,
		a.qt_dias
	from	pls_carencia	a
	where	a.nr_seq_segurado	= nr_seq_segurado_p
	and	a.ie_cpt		= 'N'
	and	qt_carencias_benef_w	> 0
	
union

	SELECT	coalesce(a.ie_mes_posterior,'N'),
		a.dt_inicio_vigencia,
		a.qt_dias
	from	pls_carencia a
	where	a.nr_seq_contrato	= nr_seq_contrato_w
	and	a.ie_cpt		= 'N'
	and	qt_carencias_contrato_w	> 0
	
union

	select	coalesce(a.ie_mes_posterior,'N'),
		a.dt_inicio_vigencia,
		a.qt_dias
	from	pls_carencia a
	where	nr_seq_plano		= nr_seq_plano_w
	and	a.ie_cpt		= 'N'
	and	qt_carencias_produto_w	> 0
	and	dt_inclusao_operadora_w between coalesce(a.dt_inicio_vig_plano,dt_inclusao_operadora_w) and coalesce(a.dt_fim_vig_plano,dt_inclusao_operadora_w);


BEGIN

/* Obter dados do beneficiÃ¡rio */

begin
select	nr_seq_contrato,
	nr_seq_plano,
	dt_inclusao_operadora
into STRICT	nr_seq_contrato_w,
	nr_seq_plano_w,
	dt_inclusao_operadora_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;
exception
when others then
	nr_seq_contrato_w	:= null;
	nr_seq_plano_w		:= null;
	dt_inclusao_operadora_w	:= null;
end;

select	count(1)
into STRICT	qt_carencias_benef_w
from	pls_carencia		b,
	pls_segurado		a
where	b.nr_seq_segurado	= a.nr_sequencia
and	a.nr_sequencia		= nr_seq_segurado_p
and	b.ie_cpt		= 'N'  LIMIT 1;

if (qt_carencias_benef_w = 0) then
	select	/*+ INDEX (C PLSCAREN_PLSCONT_FK_I)*/ count(1)
	into STRICT	qt_carencias_contrato_w
	from	pls_contrato		a,
		pls_carencia		c,
		pls_segurado		b
	where	c.nr_seq_contrato	= a.nr_sequencia
	and	b.nr_seq_contrato	= a.nr_sequencia
	and	b.nr_sequencia		= nr_seq_segurado_p
	and	c.ie_cpt		= 'N'  LIMIT 1;

	if (qt_carencias_contrato_w = 0) then
		select	count(1)
		into STRICT	qt_carencias_produto_w
		from	pls_plano		a,
			pls_carencia		c,
			pls_segurado		b
		where	a.nr_sequencia	= c.nr_seq_plano
		and	b.nr_seq_plano	= a.nr_sequencia
		and	b.nr_sequencia	= nr_seq_segurado_p
		and	c.ie_cpt	= 'N'
		and	dt_inclusao_operadora_w between coalesce(c.dt_inicio_vig_plano,dt_inclusao_operadora_w) and coalesce(c.dt_fim_vig_plano,dt_inclusao_operadora_w)  LIMIT 1;
	end if;
end if;

dt_ultima_carencia_w	:= dt_inclusao_operadora_w;

if (qt_carencias_benef_w > 0) or (qt_carencias_contrato_w > 0) or (qt_carencias_produto_w > 0) then
	open C01;
	loop
	fetch C01 into
		ie_mes_posterior_w,
		dt_inicio_vigencia_w,
		qt_dias_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select (coalesce(dt_inicio_vigencia_w,dt_inclusao_operadora_w) + qt_dias_w)
		into STRICT	dt_carencia_w
		;

		if (coalesce(dt_ultima_carencia_w::text, '') = '') then
			dt_ultima_carencia_w	:= dt_carencia_w;
		elsif (dt_carencia_w > dt_ultima_carencia_w) then
			dt_ultima_carencia_w	:= dt_carencia_w;
		end if;
		end;
	end loop;
	close C01;
end if;

if (dt_ultima_carencia_w IS NOT NULL AND dt_ultima_carencia_w::text <> '') then
	update	pls_segurado
	set	dt_ultima_carencia	= dt_ultima_carencia_w
	where	nr_sequencia		= nr_seq_segurado_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ultima_carencia ( nr_seq_segurado_p bigint, nm_usuario_p text) FROM PUBLIC;

