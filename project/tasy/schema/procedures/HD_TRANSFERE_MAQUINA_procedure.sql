-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_transfere_maquina (nr_seq_maquina_p bigint, nr_seq_unid_origem_p bigint, nr_seq_unid_destino_p bigint, nr_seq_ponto_dialise_p bigint, dt_transferencia_p timestamp, nm_usuario_p text, ds_observacao_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
qt_registro_w		integer;
nr_seq_ponto_atual_w	bigint;
nr_seq_maquina_w		bigint;
ie_ponto_livre_w		varchar(1);
qt_maquina_ponto_w 	smallint;

BEGIN
 
if (nr_seq_ponto_dialise_p = 0)	 then 
	ds_erro_p	:= wheb_mensagem_pck.get_texto(281792,null);
else 
	begin 
 
	/* Guarda o ponto atual da máquina */
 
	select	nr_seq_ponto 
	into STRICT	nr_seq_ponto_atual_w 
	from	hd_maquina_dialise 
	where	nr_sequencia	= nr_seq_maquina_p;	
	 
	/* Obtem se o ponto onde quer transferir está livre */
 
	select	substr(hd_obter_se_ponto_livre(nr_seq_ponto_dialise_p),1,1) 
	into STRICT	ie_ponto_livre_w 
	;
	 
	/* Limpa o ponto atual da máquina */
 
	update	hd_maquina_dialise 
	set	nr_seq_ponto	 = NULL 
	where	nr_sequencia	= nr_seq_maquina_p;
	 
	/* Se transferência interna onde o ponto já está ocupado realiza a troca */
 
	if (nr_seq_unid_origem_p = nr_seq_unid_destino_p) and (ie_ponto_livre_w = 'N') then 
		 
		select	count(*) 
		into STRICT	qt_maquina_ponto_w 
		from	hd_maquina_dialise 
		where	nr_seq_ponto	= nr_seq_ponto_dialise_p;
	 
		if (qt_maquina_ponto_w > 1) then			 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(203100);
		end if;
		 
		/* Pega a máquina que está no ponto atual */
 
		select	nr_sequencia 
		into STRICT	nr_seq_maquina_w 
		from	hd_maquina_dialise 
		where	nr_seq_ponto	= nr_seq_ponto_dialise_p;
		 
		/* Insere o ponto de diálise */
 
		insert into hd_maquina_transf( 
			nr_sequencia, 
			dt_transferencia, 
			nr_seq_maquina, 
			nr_seq_unid_destino, 
			nr_seq_unid_origem, 
			nr_seq_ponto_origem, 
			nr_seq_ponto_destino, 
			cd_pf_transf, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			ds_observacao 
		) values ( 
			nextval('hd_maquina_transf_seq'), 
			dt_transferencia_p, 
			nr_seq_maquina_w, 
			nr_seq_unid_destino_p, 
			nr_seq_unid_origem_p, 
			nr_seq_ponto_dialise_p, 
			nr_seq_ponto_atual_w, 
			substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			ds_observacao_p 
		);
		 
		/* Atualiza o ponto na máquina */
 
		update	hd_maquina_dialise 
		set	nr_seq_ponto	= nr_seq_ponto_atual_w 
		where	nr_sequencia	= nr_seq_maquina_w;
		 
	end if;
	 
	/* Insere o ponto de diálise */
 
	insert into hd_maquina_transf( 
		nr_sequencia, 
		dt_transferencia, 
		nr_seq_maquina, 
		nr_seq_unid_destino, 
		nr_seq_unid_origem, 
		nr_seq_ponto_origem, 
		nr_seq_ponto_destino, 
		cd_pf_transf, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_observacao 
	) values ( 
		nextval('hd_maquina_transf_seq'), 
		dt_transferencia_p, 
		nr_seq_maquina_p, 
		nr_seq_unid_destino_p, 
		nr_seq_unid_origem_p, 
		nr_seq_ponto_atual_w, 
		nr_seq_ponto_dialise_p, 
		substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_observacao_p 
	);
 
	/* Atualiza o ponto na máquina */
 
	update	hd_maquina_dialise 
	set	nr_seq_ponto	= nr_seq_ponto_dialise_p 
	where	nr_sequencia	= nr_seq_maquina_p;
		 
	commit;
		 
	end;
	 
end if;		
	 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_transfere_maquina (nr_seq_maquina_p bigint, nr_seq_unid_origem_p bigint, nr_seq_unid_destino_p bigint, nr_seq_ponto_dialise_p bigint, dt_transferencia_p timestamp, nm_usuario_p text, ds_observacao_p text, ds_erro_p INOUT text) FROM PUBLIC;

