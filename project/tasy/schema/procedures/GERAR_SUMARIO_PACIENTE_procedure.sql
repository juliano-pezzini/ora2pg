-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_sumario_paciente ( dt_sumario_p text, cd_pessoa_paciente_p text DEFAULT NULL, cd_estabelecimento_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, ds_oid_identificador_p text DEFAULT NULL, ds_identificador_p text DEFAULT NULL, ds_sender_oid_p text DEFAULT NULL, ds_sender_id_p text DEFAULT NULL, ds_sender_name_p text DEFAULT NULL, ds_request_oid_p text DEFAULT NULL, ds_request_id_p text DEFAULT NULL, ds_request_name_p text DEFAULT NULL, ds_oid_document_p text DEFAULT NULL, ds_conteudo_p text DEFAULT NULL) AS $body$
DECLARE


ie_existe_w						varchar(1) := 'N';
cd_cgc_origem_w					pessoa_juridica.cd_cgc%TYPE;
cd_cgc_destino_w				pessoa_juridica.cd_cgc%TYPE;
cd_pessoa_fisica_solic_w		pessoa_fisica.cd_pessoa_fisica%TYPE;
cd_pessoa_fisica_origem_w		pessoa_fisica.cd_pessoa_fisica%TYPE;
cd_pessoa_fisica_pac_w			pessoa_fisica.cd_pessoa_fisica%TYPE;
nr_sequencia_w					imp_sumario_paciente.nr_sequencia%TYPE;
nr_seq_patient_w				patient_query_issuer.nr_sequencia%TYPE;
ds_patient_ids_issuername_w		patient_query_issuer.ds_patient_ids_issuername%TYPE;
ds_patient_ids_issuercode_w		patient_query_issuer.ds_patient_ids_issuercode%TYPE;
nr_seq_issuer_w					patient_query_pf.nr_seq_issuer%TYPE;
ds_patient_oid_name_w			patient_query_pf.ds_patient_oid_name%TYPE;
ds_patient_oid_code_w			patient_query_pf.ds_patient_oid_code%TYPE;
nr_seq_arquivo_w				imp_sumario_pac_arquivo.nr_sequencia%TYPE;
ds_oid_identificador_w			imp_sumario_paciente.ds_oid_identificador%TYPE;
ds_identificador_w				imp_sumario_paciente.ds_identificador%TYPE;
dt_sumario_w					imp_sumario_paciente.dt_sumario%TYPE;




BEGIN


dt_sumario_w := TO_DATE(dt_sumario_p, 'yyyymmdd');


	IF (ds_oid_document_p IS NOT NULL AND ds_oid_document_p::text <> '') THEN

		SELECT  coalesce(MAX('S'),'N')
		INTO STRICT	ie_existe_w
		FROM	imp_sumario_pac_arquivo
		WHERE 	ds_oid_document = ds_oid_document_p;

	END IF;
	
	IF ( ie_existe_w = 'N') THEN

		IF (cd_pessoa_paciente_p IS NOT NULL AND cd_pessoa_paciente_p::text <> '') THEN

			cd_pessoa_fisica_pac_w := cd_pessoa_paciente_p;

			SELECT	MAX(nr_seq_issuer)
			INTO STRICT	nr_seq_issuer_w
			FROM 	patient_query_pf
			WHERE	cd_pessoa_fisica  = cd_pessoa_paciente_p;

			IF (coalesce(nr_seq_issuer_w,0) > 0)  THEN

				SELECT  MAX(ds_patient_ids_issuername),
						MAX(ds_patient_ids_issuercode)
				INTO STRICT	ds_patient_ids_issuername_w,
						ds_patient_ids_issuercode_w
				FROM	patient_query_issuer
				WHERE	nr_sequencia = nr_seq_issuer_w;

				SELECT  MAX(ds_patient_oid_name),
						MAX(ds_patient_oid_code)
				INTO STRICT	ds_patient_oid_name_w,
						ds_patient_oid_code_w
				FROM	patient_query_pf
				WHERE	nr_sequencia = nr_seq_issuer_w;

			ELSE

				IF (ds_sender_oid_p IS NOT NULL AND ds_sender_oid_p::text <> '') THEN

					SELECT  MAX(nr_sequencia)
					INTO STRICT	nr_seq_issuer_w
					FROM	patient_query_issuer
					WHERE	UPPER(ds_patient_ids_issuername) = UPPER(ds_sender_oid_p)
					AND		UPPER(ds_patient_ids_issuercode) = UPPER(ds_sender_id_p);

					IF ( coalesce(nr_seq_issuer_w::text, '') = '') THEN

						SELECT  nextval('patient_query_issuer_seq')
						INTO STRICT	nr_seq_issuer_w
						;

						INSERT INTO patient_query_issuer( nr_sequencia,
														   dt_atualizacao,
														   dt_Atualizacao_nrec,
														   nm_usuario,
														   nm_usuario_nrec,
														   ds_patient_ids_issuername,
														   ds_patient_ids_issuercode)
												 VALUES (  nr_seq_issuer_w,
														   clock_timestamp(),
														   clock_timestamp(),
														   nm_usuario_p,
														   nm_usuario_p,
														   ds_sender_oid_p,
														   ds_sender_id_p);

					   COMMIT;



					END IF;

				END IF;

			END IF;

		ELSE

		ds_oid_identificador_w  := ds_oid_identificador_p;
		ds_identificador_w		:= ds_identificador_p;

		IF (ds_identificador_p IS NOT NULL AND ds_identificador_p::text <> '') THEN

			IF (INSTR(ds_identificador_p, '2.16.840.1.113883.13.237', 1, 1) > 0 ) THEN

				ds_oid_identificador_w := '2.16.840.1.113883.13.237';

				SELECT SUBSTR(ds_identificador_p,1,INSTR(ds_identificador_p, '^', 1, 1) - 1)
				INTO STRICT   ds_identificador_w
				;

			ELSIF (INSTR(ds_identificador_p, '2.16.840.1.113883.13.236', 1, 1) > 0 ) THEN

				ds_oid_identificador_w := '2.16.840.1.113883.13.237';

				SELECT SUBSTR(ds_identificador_p,1,INSTR(ds_identificador_p, '^', 1, 1) - 1)
				INTO STRICT   ds_identificador_w
				;

			END IF;

		END IF;

			IF (ds_oid_identificador_w IS NOT NULL AND ds_oid_identificador_w::text <> '') THEN

				IF ( ds_oid_identificador_w = '2.16.840.1.113883.13.237')  THEN-- CPF
					SELECT  MAX(cd_pessoa_fisica)
					INTO STRICT	cd_pessoa_fisica_pac_w
					FROM	pessoa_fisica
					WHERE 	UPPER(nr_cpf) = UPPER(ds_identificador_w);

				ELSIF ( ds_oid_identificador_w = '2.16.840.1.113883.13.236')  THEN-- CNS
					SELECT  MAX(cd_pessoa_fisica)
					INTO STRICT	cd_pessoa_fisica_pac_w
					FROM	pessoa_fisica
					WHERE 	UPPER(nr_cartao_nac_sus) = UPPER(ds_identificador_w);

				END IF;

			END IF;


		END IF;

		SELECT	MAX(nr_sequencia)
		INTO STRICT	nr_sequencia_w
		FROM 	imp_sumario_paciente
		WHERE	ds_oid_identificador = coalesce(ds_oid_identificador_w,ds_patient_oid_name_w)
		AND		ds_identificador = coalesce(ds_identificador_w,ds_patient_oid_code_w)
		AND		UPPER(ds_sender_oid) = UPPER(ds_sender_oid_p)
		AND		UPPER(ds_sender_id) = UPPER(ds_sender_id_p);

		IF ( coalesce(nr_sequencia_w::text, '') = '') THEN

			SELECT 	nextval('imp_sumario_paciente_seq')
			INTO STRICT	nr_sequencia_w
			;

			INSERT INTO imp_sumario_paciente(
											nr_sequencia,
											cd_estabelecimento,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											ie_tipo_sumario,
											ds_sumario_config,
											cd_pessoa_fisica,
											dt_sumario,
											ds_oid_identificador,
											ds_identificador,
											ds_sender_oid,
											ds_sender_id,
											ds_sender_name,
											ds_request_oid,
											ds_request_id,
											ds_request_name)
									VALUES ( nr_sequencia_w,
											coalesce(cd_estabelecimento_p,1),
											clock_timestamp(),
											coalesce(nm_usuario_p,'T.I.E'),
											clock_timestamp(),
											coalesce(nm_usuario_p,'T.I.E'),
											'CONF',
											'RES Philips',
											cd_pessoa_fisica_pac_w,
											dt_sumario_w,
											ds_oid_identificador_p,
											ds_identificador_p,
											ds_sender_oid_p,
											ds_sender_id_p,
											ds_sender_name_p,
											ds_request_oid_p,
											ds_request_id_p,
											ds_request_name_p);



			COMMIT;


	  END IF;


		SELECT  nextval('imp_sumario_pac_arquivo_seq')
		INTO STRICT	nr_seq_arquivo_w
		;

		INSERT INTO imp_sumario_pac_arquivo( nr_sequencia,
											 dt_atualizacao,
											 nm_usuario,
											 dt_atualizacao_nrec,
											 nm_usuario_nrec,
											 nr_seq_sumario,
											 ie_tipo_arquivo,
											 ds_conteudo,
											 ds_oid_document,
											 ie_anexado)
									 VALUES ( nr_seq_arquivo_w,
											 clock_timestamp(),
											 coalesce(nm_usuario_p,'T.I.E'),
											 clock_timestamp(),
											 coalesce(nm_usuario_p,'T.I.E'),
											 nr_sequencia_w,
											 'PDF',
											 coalesce(ds_conteudo_p,' '),
											 ds_oid_document_p,
											 'N');


		COMMIT;


	END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_sumario_paciente ( dt_sumario_p text, cd_pessoa_paciente_p text DEFAULT NULL, cd_estabelecimento_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, ds_oid_identificador_p text DEFAULT NULL, ds_identificador_p text DEFAULT NULL, ds_sender_oid_p text DEFAULT NULL, ds_sender_id_p text DEFAULT NULL, ds_sender_name_p text DEFAULT NULL, ds_request_oid_p text DEFAULT NULL, ds_request_id_p text DEFAULT NULL, ds_request_name_p text DEFAULT NULL, ds_oid_document_p text DEFAULT NULL, ds_conteudo_p text DEFAULT NULL) FROM PUBLIC;

