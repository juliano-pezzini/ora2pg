-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_pk_cotacao () AS $body$
DECLARE


qt_columns_w	smallint;
ds_retorno_w	varchar(100);


BEGIN

/*--------------------Primeira Parte-----------------------*/

/*Dropa FK e deleta da documentação  3 Tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM_TR DROP CONSTRAINT COCOFOT_COCOFOI_FK', ds_retorno_w);
	delete	from INTEGRIDADE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOFOT_COCOFOI_FK';

	delete 	from INTEGRIDADE_REFERENCIAL
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOFOT_COCOFOI_FK';


/*Dropa PK e deleta da documentação  3 Tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM_TR DROP CONSTRAINT COCOFOT_PK', ds_retorno_w);
	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
	and	nm_indice = 'COCOFOT_PK';

	delete	from indice
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
	and	nm_indice = 'COCOFOT_PK';


/*Antes de dropar da 2 tabela, dropo o Indice DA COT_COMPRA_ITEM, que faz referencia a 2 tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_ITEM DROP CONSTRAINT COCOITE_COCOFOA_I', ds_retorno_w);
	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOA_I';

	delete	from indice
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOA_I';


ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_ITEM DROP CONSTRAINT COCOITE_COCOFOI_I', ds_retorno_w);
	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOI_I';

	delete	from indice
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOI_I';


/*Antes de dropar da 2 tabela, dropo a FK  DA COT_COMPRA_ITEM, que faz referencia a 2 tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_ITEM DROP CONSTRAINT COCOITE_COCOFOA_FK', ds_retorno_w);
	delete	from INTEGRIDADE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOITE_COCOFOA_FK';

	delete 	from INTEGRIDADE_REFERENCIAL
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOITE_COCOFOA_FK';

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_ITEM DROP CONSTRAINT COCOITE_COCOFOS_FK', ds_retorno_w);
	delete	from INTEGRIDADE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOITE_COCOFOS_FK';

	delete 	from INTEGRIDADE_REFERENCIAL
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOITE_COCOFOS_FK';




/*Dropa FK e deleta da documentação  2 Tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM DROP CONSTRAINT COCOFOI_COCOFOR_FK', ds_retorno_w);
	delete	from INTEGRIDADE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOFOI_COCOFOR_FK';

	delete 	from INTEGRIDADE_REFERENCIAL
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
	and	nm_INTEGRIDADE_REFERENCIAL =  'COCOFOI_COCOFOR_FK';


/*Dropa PK e deleta da documentação  2 tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM DROP CONSTRAINT COCOFOI_PK', ds_retorno_w);
	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
	and	nm_indice = 'COCOFOI_PK';

	delete	from indice
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
	and	nm_indice = 'COCOFOI_PK';


/*Dropa PK e deleta da documentação  1 tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN DROP CONSTRAINT COCOFOR_PK', ds_retorno_w);
	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_FORN'
	and	nm_indice = 'COCOFOR_PK';

	delete	from indice
	where	nm_tabela = 'COT_COMPRA_FORN'
	and	nm_indice = 'COCOFOR_PK';





/*-------------------Segunda Parte------------------------*/

/*Cria PK e cria na documentação 3 Tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM_TR ADD
			( CONSTRAINT COCOFOT_PK   Primary Key  (NR_SEQUENCIA)) ', ds_retorno_w);
	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN_ITEM_TR',
		'COCOFOT_PK',
		'PK',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(
		nm_tabela,
		nm_indice,
		nr_sequencia,
		nm_atributo,
		dt_atualizacao,
		nm_usuario)
	values ('COT_COMPRA_FORN_ITEM_TR',
		'COCOFOT_PK',
		1,
		'NR_SEQUENCIA',
		clock_timestamp(),
		'Tasy');


/*Cria PK e cria na documentação 2 Tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM ADD
			( CONSTRAINT COCOFOI_PK   Primary Key  (NR_SEQUENCIA)) ', ds_retorno_w);
	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN_ITEM',
		'COCOFOI_PK',
		'PK',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(
		nm_tabela,
		nm_indice,
		nr_sequencia,
		nm_atributo,
		dt_atualizacao,
		nm_usuario)
	values ('COT_COMPRA_FORN_ITEM',
		'COCOFOI_PK',
		1,
		'NR_SEQUENCIA',
		clock_timestamp(),
		'Tasy');


/*Cria PK e cria na documentação 1 Tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN ADD
			( CONSTRAINT COCOFOR_PK   Primary Key  (NR_SEQUENCIA)) ', ds_retorno_w);
	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN',
		'COCOFOR_PK',
		'PK',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(
		nm_tabela,
		nm_indice,
		nr_sequencia,
		nm_atributo,
		dt_atualizacao,
		nm_usuario)
	values ('COT_COMPRA_FORN',
		'COCOFOR_PK',
		1,
		'NR_SEQUENCIA',
		clock_timestamp(),
		'Tasy');




/*-------------------Terceira Parte------------------------*/

/*Cria UK 3 tabela com os campos que antes eram PK, tambem cria na documentação*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM_TR DROP CONSTRAINT COCOFOT_UK ', ds_retorno_w);
ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM_TR ADD
			( CONSTRAINT COCOFOT_UK Unique(	NR_COT_COMPRA,
							NR_ITEM_COT_COMPRA,
							CD_CGC_FORNECEDOR,
							CD_TRIBUTO)) ', ds_retorno_w);

/*deleto as uks antes de cria-las, caso seja necessário rodar o arquivo novamente*/

delete	from INDICE_ATRIBUTO
where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
and	nm_indice = 'COCOFOT_UK';

delete	from indice
where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
and	nm_indice = 'COCOFOT_UK';


	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN_ITEM_TR',
		'COCOFOT_UK',
		'UK',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN_ITEM_TR', 'COCOFOT_UK', 1, 'NR_COT_COMPRA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN_ITEM_TR', 'COCOFOT_UK', 2, 'NR_ITEM_COT_COMPRA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN_ITEM_TR', 'COCOFOT_UK', 3, 'CD_CGC_FORNECEDOR', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN_ITEM_TR', 'COCOFOT_UK', 4, 'CD_TRIBUTO', clock_timestamp(), 'Tasy');




/*Cria UK 2 tabela com os campos que antes eram PK, tambem cria na documentação*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM DROP CONSTRAINT COCOFOI_UK ', ds_retorno_w);
ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM ADD
			( CONSTRAINT COCOFOI_UK Unique(	NR_COT_COMPRA,
							NR_ITEM_COT_COMPRA,
							CD_CGC_FORNECEDOR)) ', ds_retorno_w);

/*deleto as uks antes de cria-las, caso seja necessário rodar o arquivo novamente*/

delete	from INDICE_ATRIBUTO
where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
and	nm_indice = 'COCOFOI_UK';

delete	from indice
where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
and	nm_indice = 'COCOFOI_UK';

	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN_ITEM',
		'COCOFOI_UK',
		'UK',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN_ITEM', 'COCOFOI_UK', 1, 'NR_COT_COMPRA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN_ITEM', 'COCOFOI_UK', 2, 'NR_ITEM_COT_COMPRA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN_ITEM', 'COCOFOI_UK', 3, 'CD_CGC_FORNECEDOR', clock_timestamp(), 'Tasy');


/*Cria UK 1 tabela com os campos que antes eram PK, tambem cria na documentação*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN DROP CONSTRAINT COCOFOR_UK ', ds_retorno_w);
ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN ADD
			( CONSTRAINT COCOFOR_UK Unique(	NR_COT_COMPRA,
							CD_CGC_FORNECEDOR)) ', ds_retorno_w);

/*deleto as uks antes de cria-las, caso seja necessário rodar o arquivo novamente*/

delete	from INDICE_ATRIBUTO
where	nm_tabela = 'COT_COMPRA_FORN'
and	nm_indice = 'COCOFOR_UK';

delete	from indice
where	nm_tabela = 'COT_COMPRA_FORN'
and	nm_indice = 'COCOFOR_UK';

	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN',
		'COCOFOR_UK',
		'UK',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN', 'COCOFOR_UK', 1, 'NR_COT_COMPRA', clock_timestamp(), 'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela, nm_indice, nr_sequencia, nm_atributo, dt_atualizacao, nm_usuario)
	values ('COT_COMPRA_FORN', 'COCOFOR_UK', 2, 'CD_CGC_FORNECEDOR', clock_timestamp(), 'Tasy');




/*--------------------Quarta Parte-------------------------*/

/*CRIA FK 3 Tabela, e insere na documentação */

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM_TR ADD
	(CONSTRAINT COCOFOT_COCOFOI_FK FOREIGN KEY (NR_SEQ_COT_ITEM_FORN)
	REFERENCES COT_COMPRA_FORN_ITEM(NR_SEQUENCIA)) ', ds_retorno_w);

	insert	into INTEGRIDADE_REFERENCIAL(
		nm_tabela,
		nm_integridade_referencial,
		nm_tabela_referencia,
		dt_atualizacao,
		nm_usuario,
		ie_regra_delecao,
		ds_integridade_referencial,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values (	'COT_COMPRA_FORN_ITEM_TR',
		'COCOFOT_COCOFOI_FK',
		'COT_COMPRA_FORN_ITEM',
		clock_timestamp(),
		'Tasy',
		'CASCADE',
		'',
		'I',
		'A',
		clock_timestamp());

	insert 	into INTEGRIDADE_ATRIBUTO(
		nm_tabela,
		nm_integridade_referencial,
		nm_atributo,
		ie_sequencia_criacao,
		dt_atualizacao,
		nm_usuario)
	values (	'COT_COMPRA_FORN_ITEM_TR',
		'COCOFOT_COCOFOI_FK',
		'NR_SEQ_COT_ITEM_FORN',
		1,
		clock_timestamp(),

		'Tasy');

/*CRIA INDICE 3 Tabela, e insere na documentação */

ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX COCOFOT_COCOFOI_FK_I ', ds_retorno_w);
ds_retorno_w := Executar_SQL_Dinamico('CREATE INDEX COCOFOT_COCOFOI_FK_I ON COT_COMPRA_FORN_ITEM_TR(NR_SEQ_COT_ITEM_FORN)', ds_retorno_w);

/*dropo o indice antes de cria-lo, caso seja necessário rodar o arquivo novamente*/

	delete	from INDICE
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
	and	nm_indice = 'COCOFOT_COCOFOI_FK_I';

	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM_TR'
	and	nm_indice = 'COCOFOT_COCOFOI_FK_I';


	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN_ITEM_TR',
		'COCOFOT_COCOFOI_FK_I',
		'I',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(
		nm_tabela,
		nm_indice,
		nr_sequencia,
		nm_atributo,
		dt_atualizacao,
		nm_usuario)
	values ('COT_COMPRA_FORN_ITEM_TR',
		'COCOFOT_COCOFOI_FK_I',
		1,
		'NR_SEQ_COT_ITEM_FORN',
		clock_timestamp(),
		'Tasy');

/*CRIA FK 2 Tabela, e insere na documentação */

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_FORN_ITEM ADD
	(CONSTRAINT COCOFOI_COCOFOR_FK FOREIGN KEY (NR_SEQ_COT_FORN)
	REFERENCES COT_COMPRA_FORN(NR_SEQUENCIA)) ', ds_retorno_w);
	insert	into INTEGRIDADE_REFERENCIAL(
		nm_tabela,
		nm_integridade_referencial,
		nm_tabela_referencia,
		dt_atualizacao,
		nm_usuario,
		ie_regra_delecao,
		ds_integridade_referencial,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values (	'COT_COMPRA_FORN_ITEM',
		'COCOFOI_COCOFOR_FK',
		'COT_COMPRA_FORN',
		clock_timestamp(),
		'Tasy',
		'CASCADE',
		'',
		'I',
		'A',
		clock_timestamp());

	insert 	into INTEGRIDADE_ATRIBUTO(
		nm_tabela,
		nm_integridade_referencial,
		nm_atributo,
		ie_sequencia_criacao,
		dt_atualizacao,
		nm_usuario)
	values (	'COT_COMPRA_FORN_ITEM',
		'COCOFOI_COCOFOR_FK',
		'NR_SEQ_COT_FORN',
		1,
		clock_timestamp(),
		'Tasy');


/*CRIA INDICE 2 Tabela, e insere na documentação */

ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX COCOFOI_COCOFOR_FK_I', ds_retorno_w);
ds_retorno_w := Executar_SQL_Dinamico('CREATE INDEX COCOFOI_COCOFOR_FK_I ON COT_COMPRA_FORN_ITEM(NR_SEQ_COT_FORN)', ds_retorno_w);

/*dropo o indice antes de cria-lo, caso seja necessário rodar o arquivo novamente*/

	delete	from INDICE
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
	and	nm_indice = 'COCOFOI_COCOFOR_FK_I';

	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_FORN_ITEM'
	and	nm_indice = 'COCOFOI_COCOFOR_FK_I';


	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_FORN_ITEM',
		'COCOFOI_COCOFOR_FK_I',
		'I',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(
		nm_tabela,
		nm_indice,
		nr_sequencia,
		nm_atributo,
		dt_atualizacao,
		nm_usuario)
	values ('COT_COMPRA_FORN_ITEM',
		'COCOFOI_COCOFOR_FK_I',
		1,
		'NR_SEQ_COT_FORN',
		clock_timestamp(),
		'Tasy');


/*Cria FK DA COT_COMPRA_ITEM, que faz referencia a 2 tabela*/

ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_ITEM ADD
	(CONSTRAINT COCOITE_COCOFOA_FK FOREIGN KEY (	NR_COT_VENC_ALT,
							NR_ITEM_COT_VENC_ALT,
							CD_CGC_FORNECEDOR_VENC_ALT)
	REFERENCES COT_COMPRA_FORN_ITEM(NR_COT_COMPRA,
					NR_ITEM_COT_COMPRA,
					CD_CGC_FORNECEDOR))', ds_retorno_w);

	insert	into INTEGRIDADE_REFERENCIAL(
		nm_tabela,
		nm_integridade_referencial,
		nm_tabela_referencia,
		dt_atualizacao,
		nm_usuario,
		ie_regra_delecao,
		ds_integridade_referencial,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values (	'COT_COMPRA_ITEM',
		'COCOITE_COCOFOA_FK',
		'COT_COMPRA_FORN_ITEM',
		clock_timestamp(),
		'Tasy',
		'NO ACTION',
		'',
		'I',
		'A',
		clock_timestamp());
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela,nm_integridade_referencial,nm_atributo,ie_sequencia_criacao,dt_atualizacao,nm_usuario)
	values (	'COT_COMPRA_ITEM',	'COCOITE_COCOFOA_FK', 'NR_COT_VENC_ALT', 1, clock_timestamp(), 'Tasy');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela,nm_integridade_referencial,nm_atributo,ie_sequencia_criacao,dt_atualizacao,nm_usuario)
	values (	'COT_COMPRA_ITEM',	'COCOITE_COCOFOA_FK', 'NR_ITEM_COT_VENC_ALT', 2, clock_timestamp(), 'Tasy');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela,nm_integridade_referencial,nm_atributo,ie_sequencia_criacao,dt_atualizacao,nm_usuario)
	values (	'COT_COMPRA_ITEM',	'COCOITE_COCOFOA_FK', 'CD_CGC_FORNECEDOR_VENC_ALT', 3, clock_timestamp(), 'Tasy');


ds_retorno_w := Executar_SQL_Dinamico(' ALTER TABLE COT_COMPRA_ITEM ADD
	(CONSTRAINT COCOITE_COCOFOS_FK FOREIGN KEY (	NR_COT_VENC_SIS,
							NR_ITEM_COT_VENC_SIS,
							CD_CGC_FORNECEDOR_VENC_SIS)
	REFERENCES COT_COMPRA_FORN_ITEM(NR_COT_COMPRA,
					NR_ITEM_COT_COMPRA,
					CD_CGC_FORNECEDOR))', ds_retorno_w);

	insert	into INTEGRIDADE_REFERENCIAL(
		nm_tabela,
		nm_integridade_referencial,
		nm_tabela_referencia,
		dt_atualizacao,
		nm_usuario,
		ie_regra_delecao,
		ds_integridade_referencial,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values (	'COT_COMPRA_ITEM',
		'COCOITE_COCOFOS_FK',
		'COT_COMPRA_FORN_ITEM',
		clock_timestamp(),
		'Tasy',
		'NO ACTION',
		'',
		'I',
		'A',
		clock_timestamp());

	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela,nm_integridade_referencial,nm_atributo,ie_sequencia_criacao,dt_atualizacao,nm_usuario)
	values (	'COT_COMPRA_ITEM',	'COCOITE_COCOFOS_FK', 'NR_COT_VENC_SIS', 1, clock_timestamp(), 'Tasy');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela,nm_integridade_referencial,nm_atributo,ie_sequencia_criacao,dt_atualizacao,nm_usuario)
	values (	'COT_COMPRA_ITEM',	'COCOITE_COCOFOS_FK', 'NR_ITEM_COT_VENC_SIS', 2, clock_timestamp(), 'Tasy');
	insert 	into INTEGRIDADE_ATRIBUTO(nm_tabela,nm_integridade_referencial,nm_atributo,ie_sequencia_criacao,dt_atualizacao,nm_usuario)
	values (	'COT_COMPRA_ITEM',	'COCOITE_COCOFOS_FK', 'CD_CGC_FORNECEDOR_VENC_SIS', 3, clock_timestamp(), 'Tasy');


/*Cria Indice DA COT_COMPRA_ITEM, que faz referencia a 2 tabela*/

/*cria o indice antes de cria-lo, caso seja necessário rodar o arquivo novamente*/

ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX COCOITE_COCOFOA_I ', ds_retorno_w);
ds_retorno_w := Executar_SQL_Dinamico('CREATE INDEX COCOITE_COCOFOA_I ON COT_COMPRA_ITEM(NR_COT_VENC_ALT, NR_ITEM_COT_VENC_ALT, CD_CGC_FORNECEDOR_VENC_ALT)', ds_retorno_w);
	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOA_I';

	delete	from INDICE
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOA_I';

	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_ITEM',
		'COCOITE_COCOFOA_I',
		'I',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(nm_tabela,nm_indice,nr_sequencia,nm_atributo,dt_atualizacao,nm_usuario)
	values ('COT_COMPRA_ITEM','COCOITE_COCOFOA_I',1,'NR_COT_VENC_ALT',clock_timestamp(),'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela,nm_indice,nr_sequencia,nm_atributo,dt_atualizacao,nm_usuario)
	values ('COT_COMPRA_ITEM','COCOITE_COCOFOA_I',2,'NR_ITEM_COT_VENC_ALT',clock_timestamp(),'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela,nm_indice,nr_sequencia,nm_atributo,dt_atualizacao,nm_usuario)
	values ('COT_COMPRA_ITEM','COCOITE_COCOFOA_I',3,'CD_CGC_FORNECEDOR_VENC_ALT',clock_timestamp(),'Tasy');


ds_retorno_w := Executar_SQL_Dinamico('DROP INDEX COCOITE_COCOFOI_I ', ds_retorno_w);
ds_retorno_w := Executar_SQL_Dinamico('CREATE INDEX COCOITE_COCOFOI_I ON COT_COMPRA_ITEM(NR_COT_VENC_SIS, NR_ITEM_COT_VENC_SIS, CD_CGC_FORNECEDOR_VENC_SIS)', ds_retorno_w);
	delete	from INDICE_ATRIBUTO
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOI_I';

	delete	from INDICE
	where	nm_tabela = 'COT_COMPRA_ITEM'
	and	nm_indice = 'COCOITE_COCOFOI_I';

	insert 	into INDICE(
		nm_tabela,
		nm_indice,
		ie_tipo,
		dt_atualizacao,
		nm_usuario,
		ds_indice,
		ie_criar_alterar,
		ie_situacao,
		dt_criacao)
	values ('COT_COMPRA_ITEM',
		'COCOITE_COCOFOI_I',
		'I',
		clock_timestamp(),
		'Tasy',
		'',
		'I',
		'A',
		clock_timestamp());

	insert	into INDICE_ATRIBUTO(nm_tabela,nm_indice,nr_sequencia,nm_atributo,dt_atualizacao,nm_usuario)
	values ('COT_COMPRA_ITEM','COCOITE_COCOFOI_I',1,'NR_COT_VENC_SIS',clock_timestamp(),'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela,nm_indice,nr_sequencia,nm_atributo,dt_atualizacao,nm_usuario)
	values ('COT_COMPRA_ITEM','COCOITE_COCOFOI_I',2,'NR_ITEM_COT_VENC_SIS',clock_timestamp(),'Tasy');
	insert	into INDICE_ATRIBUTO(nm_tabela,nm_indice,nr_sequencia,nm_atributo,dt_atualizacao,nm_usuario)
	values ('COT_COMPRA_ITEM','COCOITE_COCOFOI_I',3,'CD_CGC_FORNECEDOR_VENC_SIS',clock_timestamp(),'Tasy');


select	count(*)
into STRICT	qt_columns_w
from	user_cons_columns
where	constraint_name = 'COCOFOT_PK';
/*insert	into log__tasy values (sysdate, 'Baca', 1234, 'Acerto COCOFOT_PK: ' || qt_columns_w);*/

select	count(*)
into STRICT	qt_columns_w
from	user_cons_columns
where	constraint_name = 'COCOFOI_PK';
/*insert	into log__tasy values (sysdate, 'Baca', 1234, 'Acerto COCOFOI_PK: ' || qt_columns_w);*/

select	count(*)
into STRICT	qt_columns_w
from	user_cons_columns
where	constraint_name = 'COCOFOR_PK';
/*insert	into log__tasy values (sysdate, 'Baca', 1234, 'Acerto COCOFOR_PK: ' || qt_columns_w);*/

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_pk_cotacao () FROM PUBLIC;

