-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_laudo (nr_sequencia_p bigint, cd_perfil_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_sep_bv_w				varchar(100);
ds_param_integ_hl7_w		varchar(4000);
ie_integrar_laudo_w			numeric(20);
cd_convenio_w			bigint;
cd_setor_atendimento_w	integer;
nr_seq_prescr_w			integer;
nr_prescricao_w			bigint;
ie_int_centricity_w		varchar(1);
funcao_ativa_w 		bigint;
alterar_medico_exec_conta_w varchar(1) := 'N';


BEGIN

begin
ie_integrar_laudo_w := obter_param_usuario(28, 167, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_integrar_laudo_w);
funcao_ativa_w	:= coalesce(obter_funcao_ativa, -1234567);
alterar_medico_exec_conta_w := coalesce(obter_valor_param_usuario(945, 90, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo),'N');
exception when others then
ie_integrar_laudo_w	:= 0;
end;

ds_sep_bv_w := obter_separador_bv;

select	CASE WHEN coalesce(max(ie_situacao),'I')='I' THEN 'N'  ELSE 'S' END
into STRICT	ie_int_centricity_w
from	cliente_integracao
where	nr_seq_inf_integracao = 585;

if (ie_int_centricity_w = 'S') then
	CALL quebra_linha_hl7(nr_sequencia_p, nm_usuario_p);
end if;

update	laudo_paciente
set	dt_liberacao		= clock_timestamp(),
	nm_usuario_liberacao	= nm_usuario_p
where	nr_sequencia		= nr_sequencia_p;

CALL gravar_log_status_laudo(nr_sequencia_p,1,nm_usuario_p);

select	max(nr_seq_prescricao),
	max(nr_prescricao)
into STRICT	nr_seq_prescr_w,
	nr_prescricao_w
from	laudo_paciente
where	nr_sequencia = nr_sequencia_p;

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (funcao_ativa_w = 945) then
  if (alterar_medico_exec_conta_w = 'P') or (alterar_medico_exec_conta_w = 'C') then
  		CALL atualizar_propaci_medico_laudo(nr_sequencia_p,'EX',nm_usuario_p);
 	end if;
end if;

if (nr_seq_prescr_w IS NOT NULL AND nr_seq_prescr_w::text <> '') and (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then
	select 	max(cd_setor_atendimento)
	into STRICT	cd_setor_atendimento_w
	from	prescr_procedimento
	where	nr_prescricao = nr_prescricao_w
	and	nr_sequencia = nr_seq_prescr_w;
end if;

select	max(obter_convenio_atendimento(nr_atendimento_p))
into STRICT	cd_convenio_w
;

if (ie_integrar_laudo_w = cd_convenio_w) or (obter_se_envio_laudo_integr(cd_convenio_w,cd_setor_atendimento_w) = 'S') then
	begin
	ds_param_integ_hl7_w :=	'nr_sequencia=' || nr_sequencia_p || ';';
	CALL gravar_agend_integracao(86, ds_param_integ_hl7_w);	
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_laudo (nr_sequencia_p bigint, cd_perfil_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

