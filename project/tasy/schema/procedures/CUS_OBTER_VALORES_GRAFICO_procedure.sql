-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cus_obter_valores_grafico ( dt_referencia_p timestamp, cd_centro_controle_p bigint, cd_estab_p bigint, ie_orcado_real_p bigint, cd_empresa_p bigint, ie_limpar_tabela_p text, nm_usuario_p text, nr_seq_unid_neg_p text) AS $body$
DECLARE




ie_classif_conta_w		varchar(255);
ds_classificacao_w		varchar(255);
vl_mes_atual_w			double precision;
vl_mes_1_w			double precision;
vl_mes_2_w			double precision;
vl_mes_3_w			double precision;
vl_mes_4_w			double precision;
vl_mes_5_w			double precision;
vl_mes_6_w			double precision;
vl_mes_7_w			double precision;
vl_mes_8_w			double precision;
vl_mes_9_w			double precision;
vl_mes_10_w			double precision;
vl_mes_11_w			double precision;
vl_mes_12_w			double precision;
vl_medio_w			double precision;
vl_total_w			double precision;
ie_orcado_real_w		varchar(2);
cd_centro_controle_w		integer;
dt_mes_referencia_w		timestamp;
ds_receita_liquida_w	varchar(255);
ie_emite_perc_w			varchar(1);

C01 CURSOR FOR
	SELECT	x.ie_classif_conta,
	x.ds_classificacao,
	'N' ie_emite_perc,
	sum(CASE WHEN x.dt_mes_referencia=dt_referencia_p THEN vl_mes  ELSE 0 END ) vl_mes_atual,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-1,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_1,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-2,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_2,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-3,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_3,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-4,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_4,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-5,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_5,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-6,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_6,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-7,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_7,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-8,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_8,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-9,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_9,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-10,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_10,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-11,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_11,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-12,0) THEN x.vl_mes  ELSE 0 END ) vl_mes_12,
	dividir(	sum(CASE WHEN x.dt_mes_referencia=dt_referencia_p THEN vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-1,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-2,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-3,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-4,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-5,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-6,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-7,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-8,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-9,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-10,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-11,0) THEN x.vl_mes  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-12,0) THEN x.vl_mes  ELSE 0 END ),12) vl_medio,
	sum(CASE WHEN x.dt_mes_referencia=dt_referencia_p THEN vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-1,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-2,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-3,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-4,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-5,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-6,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-7,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-8,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-9,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-10,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-11,0) THEN x.vl_mes  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-12,0) THEN x.vl_mes  ELSE 0 END ) vl_total
from (	SELECT	a.ie_classif_conta,
		b.ds_classificacao,
		e.dt_mes_referencia,
		sum(a.vl_mes) vl_mes,
		sum(a.pr_rec_liquida) pr_rec_liquida,
		a.cd_centro_controle
	from	centro_controle c,
		classif_result b,
		resultado_centro_controle a,
		tabela_custo	e
	where	((a.cd_estabelecimento	= cd_estab_p) or (cd_estab_p =0))
	and (a.cd_centro_controle	= cd_centro_controle_p or cd_centro_controle_p = 99999999)
	and	a.nr_seq_tabela		= e.nr_sequencia
	and	a.cd_centro_controle	= c.cd_centro_controle
	and	e.ie_orcado_real	= coalesce(ie_orcado_real_w,'R')
	and	b.cd_empresa		= cd_empresa_p
	and	dt_mes_referencia 	between pkg_date_utils.add_month(dt_referencia_p,-12,0) and dt_referencia_p
	and	a.cd_estabelecimento	= c.cd_estabelecimento
	and	a.ie_classif_conta	= b.cd_classificacao
	and 	c.ie_tipo_centro_controle = '2'
	and 	c.ie_centro_resultado = 'S'
	and 	c.ie_situacao = 'A'
	and 	((nr_seq_unid_neg_p = '0') or (substr(cus_obter_se_centro_unid_neg(c.cd_estabelecimento, c.cd_centro_controle, nr_seq_unid_neg_p),1,1) = 'S'))
	group by	a.ie_classif_conta,
		b.ds_classificacao,
		e.dt_mes_referencia,
		a.cd_centro_controle) x
group by	x.ie_classif_conta,
		x.ds_classificacao

union all

select	x.ie_classif_conta,
	x.ds_classificacao,
	'S' ie_emite_perc,
	sum(CASE WHEN x.dt_mes_referencia=dt_referencia_p THEN pr_rec_liquida  ELSE 0 END ) vl_mes_atual,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-1,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_1,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-2,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_2,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-3,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_3,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-4,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_4,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-5,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_5,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-6,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_6,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-7,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_7,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-8,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_8,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-9,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_9,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-10,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_10,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-11,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_11,
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-12,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_mes_12,
	dividir(	sum(CASE WHEN x.dt_mes_referencia=dt_referencia_p THEN pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-1,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-2,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-3,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-4,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-5,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-6,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-7,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-8,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-9,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-10,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-11,0) THEN x.pr_rec_liquida  ELSE 0 END )+
			sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-12,0) THEN x.pr_rec_liquida  ELSE 0 END ), 12) vl_medio,
	sum(CASE WHEN x.dt_mes_referencia=dt_referencia_p THEN pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-1,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-2,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-3,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-4,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-5,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-6,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-7,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-8,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-9,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-10,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-11,0) THEN x.pr_rec_liquida  ELSE 0 END )+
	sum(CASE WHEN x.dt_mes_referencia=pkg_date_utils.add_month(dt_referencia_p,-12,0) THEN x.pr_rec_liquida  ELSE 0 END ) vl_total
from (	select	a.ie_classif_conta,
		ds_receita_liquida_w ds_classificacao,
		e.dt_mes_referencia,
		dividir(sum(a.pr_rec_liquida * a.vl_mes), sum(a.vl_mes))pr_rec_liquida
	from	centro_controle c,
		classif_result b,
		resultado_centro_controle a,
		tabela_custo	e
	where	((a.cd_estabelecimento	= cd_estab_p) or (cd_estab_p =0))
	and (a.cd_centro_controle	= cd_centro_controle_p or cd_centro_controle_p = 99999999)
	and	a.nr_seq_tabela		= e.nr_sequencia
	and (ie_emite_perc = 'S' or ie_receita_liquida = 'S')
	and	a.cd_centro_controle	= c.cd_centro_controle
	and	b.cd_empresa		= cd_empresa_p
	and	e.ie_orcado_real	= coalesce(ie_orcado_real_w,'R')
	and	dt_mes_referencia 	between pkg_date_utils.add_month(dt_referencia_p,-12,0) and dt_referencia_p
	and	a.cd_estabelecimento	= c.cd_estabelecimento
	and	a.ie_classif_conta	= b.cd_classificacao
	and 	c.ie_tipo_centro_controle = '2'
	and 	c.ie_centro_resultado = 'S'
	and 	c.ie_situacao = 'A'
	and 	((nr_seq_unid_neg_p = '0') or (substr(cus_obter_se_centro_unid_neg(c.cd_estabelecimento, c.cd_centro_controle, nr_seq_unid_neg_p),1,1) = 'S'))
	group by	a.ie_classif_conta,
		b.ds_classificacao,
		e.dt_mes_referencia) x
group by	x.ie_classif_conta,
	x.ds_classificacao
order by	1;


BEGIN

if (coalesce(ie_limpar_tabela_p,'S') = 'S') then
	begin
	delete from w_cus_grafico_result
	where  nm_usuario = nm_usuario_p or dt_atualizacao < clock_timestamp() - interval '3 days';
	commit;
	end;
end if;

ds_receita_liquida_w	:= substr(wheb_mensagem_pck.get_texto(300668),1,255);

if (ie_orcado_real_p = 0) then
    ie_orcado_real_w	:=	'R';
    else
    ie_orcado_real_w	:=	'O';
end if;

open C01;
loop
fetch C01 into
	ie_classif_conta_w,
	ds_classificacao_w,
	ie_emite_perc_w,
	vl_mes_atual_w,
	vl_mes_1_w,
	vl_mes_2_w,
	vl_mes_3_w,
	vl_mes_4_w,
	vl_mes_5_w,
	vl_mes_6_w,
	vl_mes_7_w,
	vl_mes_8_w,
	vl_mes_9_w,
	vl_mes_10_w,
	vl_mes_11_w,
	vl_mes_12_w,
	vl_medio_w,
	vl_total_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	insert into w_cus_grafico_result(ie_classif_conta,
					ds_classificacao,
					vl_mes_atual,
					vl_mes_1,
					vl_mes_2,
					vl_mes_3,
					vl_mes_4,
					vl_mes_5,
					vl_mes_6,
					vl_mes_7,
					vl_mes_8,
					vl_mes_9,
					vl_mes_10,
					vl_mes_11,
					vl_mes_12,
					vl_medio,
					vl_total,
					nm_usuario,
					cd_estabelecimento,
					dt_atualizacao,
					dt_referencia,
					ie_emite_perc)
				values ( ie_classif_conta_w,
					ds_classificacao_w,
					vl_mes_atual_w,
					vl_mes_1_w,
					vl_mes_2_w,
					vl_mes_3_w,
					vl_mes_4_w,
					vl_mes_5_w,
					vl_mes_6_w,
					vl_mes_7_w,
					vl_mes_8_w,
					vl_mes_9_w,
					vl_mes_10_w,
					vl_mes_11_w,
					vl_mes_12_w,
					vl_medio_w,
					vl_total_w,
					nm_usuario_p,
					cd_estab_p,
					clock_timestamp(),
					dt_referencia_p,
					ie_emite_perc_w);
	end;
end loop;
close C01;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cus_obter_valores_grafico ( dt_referencia_p timestamp, cd_centro_controle_p bigint, cd_estab_p bigint, ie_orcado_real_p bigint, cd_empresa_p bigint, ie_limpar_tabela_p text, nm_usuario_p text, nr_seq_unid_neg_p text) FROM PUBLIC;

