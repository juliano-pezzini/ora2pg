-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_pessoa_do_atendimento ( cd_pf_origem_p text, cd_pf_destino_p text, nr_atend_origem_p text, ie_acao_p text, nm_usuario_p text, dt_acerto_p timestamp) AS $body$
DECLARE


ora2pg_rowcount int;
/*	Acao a Tomar 
	R - Devolve o numero de Registros por Tabela
	T - Transfere de uma pessoa para outra	*/
ds_comando_w			varchar(2000);
ds_res_w				varchar(4000);
VarSql				varchar(1) := chr(39);
qt_reg_w				bigint;
nr_seq_log_w			bigint;
nm_tabela_w			varchar(50);
nm_atributo_w			varchar(50);

C01 CURSOR FOR
SELECT	a.nm_tabela, b.nm_atributo
from	integridade_atributo b,
	integridade_referencial a
where	a.nm_tabela = b.nm_tabela
and	a.nm_integridade_referencial = b.nm_integridade_referencial
and	a.nm_tabela_referencia = 'PESSOA_FISICA'
and	b.nm_atributo not like '%MEDICO%'
and exists (	SELECT	1
		from	tabela_atributo x
		where	x.nm_tabela = a.nm_tabela
		and	x.nm_atributo = 'NR_ATENDIMENTO');


BEGIN
CALL wheb_usuario_pck.set_ie_executar_trigger('N');

open C01;
loop
fetch C01 into
	nm_tabela_w,
	nm_atributo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	RAISE NOTICE '% %', nm_tabela_w, nm_atributo_w;
	ds_comando_w :=	'select count(*) from ' || nm_tabela_w ||
			' where ' || nm_atributo_w || ' = ' || VarSql || cd_pf_origem_p || VarSql ||
			' and nr_atendimento = ' || nr_atend_origem_p;
	qt_reg_w := obter_valor_dinamico(ds_comando_w, qt_reg_w);
	RAISE NOTICE '%', qt_reg_w;

	if (qt_reg_w > 0) then
		begin
		if (ie_acao_p = 'R') then
			ds_res_w	:= ds_res_w || nm_tabela_w || '=' || qt_reg_w || ',';
		elsif (ie_acao_p = 'T') then
			begin
			ds_comando_w		:= 'update ' || nm_tabela_w || ' set ' || nm_atributo_w || ' = ' || VarSql || cd_pf_destino_p || VarSql ||
						   ' where ' || nm_atributo_w || ' = ' || VarSql || cd_pf_origem_p || VarSql ||
						   ' and nr_atendimento =  ' || nr_atend_origem_p;
			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

			RAISE NOTICE '% %=%', wheb_mensagem_pck.get_texto(306027), nm_tabela_w,  ora2pg_rowcount;
			GET DIAGNOSTICS ora2pg_rowcount = ROW_COUNT;

			ds_res_w := ds_res_w || nm_tabela_w || '=' ||  ora2pg_rowcount || ',';
			qt_reg_w := obter_valor_dinamico(ds_comando_w, qt_reg_w);
			end;
		end if;
		end;
	end if;
	end;
end loop;
close C01;

if (ie_acao_p = 'T') then
	begin
	select	count(*)
	into STRICT	qt_reg_w
	from	paciente_setor
	where	cd_pessoa_fisica = cd_pf_origem_p  LIMIT 1;
	
	if (qt_reg_w > 0) then
		update	paciente_setor
		set	cd_pessoa_fisica = cd_pf_destino_p
		where	cd_pessoa_fisica = cd_pf_origem_p;
	end if;
	exception
	when others then
		null;
	end;
end if;

/* RFOLIVEIRA - 14:46 19/09/2013 */


/* Quando foi removido o insert abaixo, parou de funcionar a rotina de transferencia, pois dependia deste log */


/* Desta forma, criei a tabela abaixo para inserir a informacao e realizar a transferencia, sem a necessidade uma modificacao maior */


/*insert into logxxxx_tasy (dt_atualizacao, nm_usuario, cd_log, ds_log)
		values (dt_acerto_p, nm_usuario_p, 850, ds_res_w);*/
select	nextval('log_transf_atendimento_seq')
into STRICT	nr_seq_log_w
;

insert into log_transf_atendimento(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		ds_log)
	values (	nr_seq_log_w,
		nm_usuario_p,
		dt_acerto_p,
		nm_usuario_p,
		dt_acerto_p,
		ds_res_w);

commit;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_pessoa_do_atendimento ( cd_pf_origem_p text, cd_pf_destino_p text, nr_atend_origem_p text, ie_acao_p text, nm_usuario_p text, dt_acerto_p timestamp) FROM PUBLIC;

