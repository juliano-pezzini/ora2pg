-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE manchester_tria_pronto_atend ( nr_atendimento_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, ds_queixa_princ_p text, ds_observacao_p text, dt_inicio_triagem_p timestamp, nr_seq_classif_p bigint, cd_estabelecimento_p bigint, ie_retriagem_p text, nr_seq_manchester_fluxo_p bigint, cd_classificador_p text, nr_seq_discriminador_p bigint, ie_nao_p text, nr_seq_fluxo_original_p bigint, ds_detalhe_p text default '', ds_obs_queixa_p text default null, ds_erro_p INOUT text DEFAULT NULL, nr_sequencia_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE


cd_setor_atendimento_w varchar(5);
ie_clinica_w	varchar(5);
ds_erro_w		varchar(2000);
nr_seq_fila_w				bigint;
nr_seq_pac_senha_fila_w			bigint;
nr_sequencia_seq_w	pe_prescricao.nr_sequencia%type;
nr_sequencia_w		triagem_pronto_atend.nr_sequencia%type;
ie_position_w	integer := 0;
nr_regras_atendidas_w varchar(2000);


type pe_prescricao_type	is table of pe_prescricao%ROWTYPE	index by integer;
pe_prescricao_row	pe_prescricao_type;

pe_prescricao_c CURSOR(nr_sequencia_w  triagem_pronto_atend.nr_sequencia%type) FOR
SELECT  pp.*
from    pe_prescricao pp
where   nr_seq_triagem = nr_sequencia_w;

BEGIN
begin

ds_erro_p := '';

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then

	if (nr_seq_classif_p IS NOT NULL AND nr_seq_classif_p::text <> '') then		
		
		update	atendimento_paciente
		set		nr_seq_triagem = nr_seq_classif_p,
				dt_inicio_atendimento = CASE WHEN dt_inicio_atendimento = NULL THEN dt_inicio_triagem_p  ELSE dt_inicio_atendimento END ,
				dt_fim_triagem = clock_timestamp()
		where	nr_atendimento = nr_atendimento_p;
	end if;
	
	select	max(ie_clinica)
	into STRICT	ie_clinica_w
	from	atendimento_paciente  
	where	nr_atendimento = nr_atendimento_p
    and     not exists (SELECT 	1
						from   	triagem_pronto_atend b
						where 	 b.nr_atendimento = nr_atendimento_p);


	select 	max(cd_setor_atendimento)
	into STRICT   	cd_setor_atendimento_w
	from   	ATEND_PACIENTE_UNIDADE
	where 	nr_atendimento = nr_atendimento_p
    and   	not exists (SELECT 	1
						from   	triagem_pronto_atend b
						where 	 b.nr_atendimento = nr_atendimento_p);
						
	select nextval('triagem_pronto_atend_seq')
	into STRICT   nr_sequencia_p
	;

    select max(a.nr_seq_pac_senha_fila)
    into STRICT  nr_seq_pac_senha_fila_w
    from	atendimento_paciente a
    where	a.nr_atendimento = nr_atendimento_p;

    if (nr_seq_pac_senha_fila_w IS NOT NULL AND nr_seq_pac_senha_fila_w::text <> '') then
        select	max(coalesce(nr_seq_fila_senha,nr_seq_fila_senha_origem)) nr_fila
        into STRICT	nr_seq_fila_w
        from	paciente_senha_fila
        where	nr_sequencia = nr_seq_pac_senha_fila_w;
    end if;

    select  max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from    triagem_pronto_atend
	where   nr_atendimento = nr_atendimento_p;

	insert into triagem_pronto_atend(nr_sequencia,
			nm_usuario,
			nm_usuario_nrec,
			nm_usuario_triagem,
			nr_atendimento,
			cd_pessoa_fisica,
			dt_inicio_triagem,
			dt_fim_triagem,
			ds_queixa_princ,
			ds_observacao,
			nr_seq_classif,
			dt_atualizacao,
			cd_estabelecimento,
			ie_retriagem,
			nr_seq_manchester_fluxo,
			cd_classificador,
			dt_atualizacao_nrec,
			nr_seq_discriminador,
			ie_nao,
			nr_seq_fluxo_original,
			ie_status_paciente,
      ds_resumo_manchester,
			ie_clinica,
			cd_setor_atendimento,
      nr_seq_fila_senha,
      nr_seq_pac_fila,
      ds_obs_queixa)
		values (nr_sequencia_p,
			nm_usuario_p,
			nm_usuario_p,
			nm_usuario_p,
			nr_atendimento_p,
			obter_pessoa_atendimento(nr_atendimento_p,'C'),
			dt_inicio_triagem_p,
			clock_timestamp(),
			ds_queixa_princ_p,
			ds_observacao_p,
			nr_seq_classif_p,
			clock_timestamp(),
			cd_estabelecimento_p,
			ie_retriagem_p,
			nr_seq_manchester_fluxo_p,
			obter_dados_usuario_opcao(nm_usuario_p,'C'),
			clock_timestamp(),
			nr_seq_discriminador_p,
			ie_nao_p,
			nr_seq_fluxo_original_p,
			'T',
      ds_detalhe_p,
			ie_clinica_w,
			cd_setor_atendimento_w,
      nr_seq_pac_senha_fila_w,
      nr_seq_fila_w,
      ds_obs_queixa_p);
			commit;

			if (nr_atendimento_p > 0) and (nr_seq_classif_p > 0)then
					nr_regras_atendidas_w := gqa_classificacao_risco(nr_seq_classif_p, nr_atendimento_p, nm_usuario_p, nr_regras_atendidas_w, nr_seq_discriminador_p);
                    CALL gera_protocolo_assistencial(nr_atendimento_p,nm_usuario_p);
			end if;

    if (coalesce(pkg_i18n.get_user_locale, 'pt_BR') = 'de_DE') then
		
		<<pe_prescricao_loop>>
		for w_pe_prescricao in pe_prescricao_c(nr_sequencia_w) loop
		
			ie_position_w := ie_position_w + 1;
			
			select	nextval('pe_prescricao_seq')
			into STRICT	nr_sequencia_seq_w
			;
			
			pe_prescricao_row[ie_position_w].nr_sequencia 			:= nr_sequencia_seq_w;
			pe_prescricao_row[ie_position_w].nr_seq_triagem			:= nr_sequencia_p;
			pe_prescricao_row[ie_position_w].dt_atualizacao 		:= w_pe_prescricao.dt_atualizacao;
			pe_prescricao_row[ie_position_w].nm_usuario		 		:= w_pe_prescricao.nm_usuario;
			pe_prescricao_row[ie_position_w].dt_prescricao 			:= w_pe_prescricao.dt_prescricao;
			pe_prescricao_row[ie_position_w].cd_prescritor			:= w_pe_prescricao.cd_prescritor;
			pe_prescricao_row[ie_position_w].nr_atendimento			:= w_pe_prescricao.nr_atendimento;
			pe_prescricao_row[ie_position_w].cd_pessoa_fisica		:= w_pe_prescricao.cd_pessoa_fisica;
			pe_prescricao_row[ie_position_w].dt_liberacao			:= w_pe_prescricao.dt_liberacao;
			pe_prescricao_row[ie_position_w].dt_atualizacao_nrec	:= w_pe_prescricao.dt_atualizacao_nrec;
			pe_prescricao_row[ie_position_w].nm_usuario_nrec		:= w_pe_prescricao.nm_usuario_nrec;
			pe_prescricao_row[ie_position_w].dt_inicio_prescr		:= w_pe_prescricao.dt_inicio_prescr;
			pe_prescricao_row[ie_position_w].dt_validade_prescr		:= w_pe_prescricao.dt_validade_prescr;
			pe_prescricao_row[ie_position_w].nr_prescricao			:= w_pe_prescricao.nr_prescricao;
			pe_prescricao_row[ie_position_w].nr_seq_modelo			:= w_pe_prescricao.nr_seq_modelo;
			pe_prescricao_row[ie_position_w].nr_cirurgia			:= w_pe_prescricao.nr_cirurgia;
			pe_prescricao_row[ie_position_w].ie_situacao			:= w_pe_prescricao.ie_situacao;
			pe_prescricao_row[ie_position_w].dt_inativacao			:= w_pe_prescricao.dt_inativacao;
			pe_prescricao_row[ie_position_w].nm_usuario_inativacao	:= w_pe_prescricao.nm_usuario_inativacao;
			pe_prescricao_row[ie_position_w].ds_justificativa		:= w_pe_prescricao.ds_justificativa;
			pe_prescricao_row[ie_position_w].cd_perfil_ativo		:= w_pe_prescricao.cd_perfil_ativo;
			pe_prescricao_row[ie_position_w].dt_suspensao			:= w_pe_prescricao.dt_suspensao;
			pe_prescricao_row[ie_position_w].nm_usuario_susp		:= w_pe_prescricao.nm_usuario_susp;
			pe_prescricao_row[ie_position_w].cd_setor_atendimento	:= w_pe_prescricao.cd_setor_atendimento;
			pe_prescricao_row[ie_position_w].ie_rn					:= w_pe_prescricao.ie_rn;
			pe_prescricao_row[ie_position_w].qt_horas_validade		:= w_pe_prescricao.qt_horas_validade;
			pe_prescricao_row[ie_position_w].dt_primeiro_horario	:= w_pe_prescricao.dt_primeiro_horario;
			pe_prescricao_row[ie_position_w].ie_agora				:= w_pe_prescricao.ie_agora;
			pe_prescricao_row[ie_position_w].ie_estender_validade	:= w_pe_prescricao.ie_estender_validade;
			pe_prescricao_row[ie_position_w].dt_rep_pt				:= w_pe_prescricao.dt_rep_pt;
			pe_prescricao_row[ie_position_w].ds_utc					:= w_pe_prescricao.ds_utc;
			pe_prescricao_row[ie_position_w].ds_utc_atualizacao		:= w_pe_prescricao.ds_utc_atualizacao;

		end loop pe_prescricao_loop;
		
		if (pe_prescricao_row.first IS NOT NULL AND pe_prescricao_row.first::text <> '') then
			forall i in pe_prescricao_row.first .. pe_prescricao_row.last
			insert into pe_prescricao values pe_prescricao_row(i);
			commit;
		end if;
	end if;

end if;

exception
when others then
	ds_erro_w := substr(sqlerrm,2000);

	CALL gravar_log_tasy(99995,
					SUBSTR('Erro ao inserir TRIAGEM_PRONTO_ATEND  no manchester = ' || ds_erro_w,1,2000),
					wheb_usuario_pck.get_nm_usuario);
					
	ds_erro_p := Substr('Erro ao inserir TRIAGEM_PRONTO_ATEND  no manchester = ' || ds_erro_w,1,2000);
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE manchester_tria_pronto_atend ( nr_atendimento_p bigint, nm_usuario_p text, cd_pessoa_fisica_p text, ds_queixa_princ_p text, ds_observacao_p text, dt_inicio_triagem_p timestamp, nr_seq_classif_p bigint, cd_estabelecimento_p bigint, ie_retriagem_p text, nr_seq_manchester_fluxo_p bigint, cd_classificador_p text, nr_seq_discriminador_p bigint, ie_nao_p text, nr_seq_fluxo_original_p bigint, ds_detalhe_p text default '', ds_obs_queixa_p text default null, ds_erro_p INOUT text DEFAULT NULL, nr_sequencia_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

