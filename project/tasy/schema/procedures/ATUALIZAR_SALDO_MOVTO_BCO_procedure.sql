-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_saldo_movto_bco ( nr_sequencia_p bigint, nm_usuario_p text, vl_transacao_p bigint, nr_seq_banco_p bigint, dt_referencia_P timestamp, nr_seq_trans_p bigint, nr_seq_saldo_p INOUT bigint, vl_transacao_estrang_p bigint default null, vl_cotacao_p bigint default null) AS $body$
DECLARE


ie_banco_w			varchar(255);
vl_transacao_w			double precision;
vl_saldo_w			double precision;
nr_seq_saldo_w			bigint;
nr_seq_banco_saldo_w		bigint;
nr_sequencia_w			bigint;
cd_estabelecimento_w		bigint;

dt_fechamento_w			timestamp;
nr_seq_saldo_mes_w		bigint;

ie_abrir_saldo_w		varchar(255);
ie_mais_saldo_w			varchar(1);
dt_referencia_w			timestamp;
ds_log_w			varchar(4000);
/* Projeto Multimoeda - Variáveis */

vl_transacao_estrang_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
vl_saldo_estrang_w		double precision;
cd_moeda_w			integer;

C01 CURSOR FOR
SELECT	nr_sequencia
from	banco_saldo
where	nr_seq_conta	= nr_seq_banco_p
and	nr_sequencia	<> nr_seq_banco_saldo_w
and	trunc(dt_referencia,'month')	> trunc(dt_referencia_p, 'month');


BEGIN
select	coalesce(max(b.ie_banco),'N')
into STRICT	ie_banco_w
from	transacao_financeira b
where	b.nr_sequencia		= nr_seq_trans_p;

select	max(cd_estabelecimento),
	max(cd_moeda)
into STRICT	cd_estabelecimento_w,
	cd_moeda_w
from	banco_estabelecimento
where	nr_sequencia		= nr_seq_banco_p;

/* Projeto Multimoeda - Busca a cotação na data da transação */

if ((cd_moeda_w IS NOT NULL AND cd_moeda_w::text <> '') and coalesce(vl_transacao_estrang_p,0) <> 0) then
	if (vl_cotacao_p IS NOT NULL AND vl_cotacao_p::text <> '') then
		vl_cotacao_w := vl_cotacao_p;
	elsif (coalesce(vl_cotacao_p::text, '') = '') then
		select	obter_cotacao_moeda_financ(cd_moeda_w,dt_referencia_p)
		into STRICT	vl_cotacao_w
		;
	end if;
end if;

select	coalesce(max(ie_abrir_saldo), 'S')
into STRICT	ie_abrir_saldo_w
from	parametro_controle_banc
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_banco_w	<> 'N') then
	vl_transacao_w		:= vl_transacao_p;
	vl_transacao_estrang_w	:= vl_transacao_estrang_p;
	if (ie_banco_w		= 'C')  then
		vl_transacao_w	:= vl_transacao_w	* (-1);
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			vl_transacao_estrang_w := vl_transacao_estrang_w * -1;
		end if;
	end if;

	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_banco_saldo_w
	from	banco_saldo
	where	nr_seq_conta		= nr_seq_banco_p
	and	trunc(DT_REFERENCIA,'month')	= trunc(dt_referencia_p, 'month')
	and	coalesce(dt_fechamento::text, '') = '';
	exception
		when no_data_found then
			nr_seq_banco_saldo_w := 0;
	end;

	if (nr_seq_banco_saldo_w > 0) then
		update	banco_saldo
		set	VL_SALDO = coalesce(VL_SALDO, 0) + CASE WHEN ie_banco_w='T' THEN  0  ELSE (coalesce(vl_transacao_w,0)) END ,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_banco_saldo_w;
		/* Projeto Multimoeda - Atualiza o saldo do banco em moeda estrangeira */

		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			update	banco_saldo
			set	vl_saldo_estrang = coalesce(vl_saldo_estrang,0) + CASE WHEN ie_banco_w='T' THEN  0  ELSE vl_transacao_estrang_w END
			where	nr_sequencia	= nr_seq_banco_saldo_w;
		end if;
	elsif (ie_abrir_saldo_w = 'S') then
		begin

		select	coalesce(max(a.vl_saldo),0) + CASE WHEN ie_banco_w='T' THEN  0  ELSE (coalesce(vl_transacao_w, 0)) END ,
			coalesce(max(a.vl_saldo_estrang),0) + CASE WHEN ie_banco_w='T' THEN  0  ELSE coalesce(vl_transacao_estrang_w,0) END
		into STRICT	vl_saldo_w,
			vl_saldo_estrang_w
		from	banco_saldo a
		where	a.nr_seq_conta = nr_seq_banco_p
		and	a.dt_referencia = (
			SELECT	max(b.dt_referencia)
			from	banco_saldo b
			where	b.nr_seq_conta = nr_seq_banco_p);
		exception
		when no_data_found then
			if (ie_banco_w = 'T') then
				vl_saldo_w := 0;
				vl_saldo_estrang_w := 0;
			else
				vl_saldo_w := vl_transacao_w;
				vl_saldo_estrang_w := vl_transacao_estrang_w;
			end if;
		end;

		ie_mais_saldo_w := obter_param_usuario(814, 50, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_mais_saldo_w);

		if (coalesce(ie_mais_saldo_w,'S')	= 'N') then

			select	max(a.dt_referencia)
			into STRICT	dt_referencia_w
			from	banco_saldo a
			where	coalesce(a.dt_fechamento::text, '') = ''
			and	a.nr_seq_conta	= nr_seq_banco_p;

			if (dt_referencia_w IS NOT NULL AND dt_referencia_w::text <> '') then

				/* Já existe um mês aberto nessa conta bancária! Parâmetro [50] do Controle Bancário.
				Mês aberto: dt_referencia_w */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(236023,'DT_REFERENCIA_W=' || dt_referencia_w);

			end if;

		end if;

		begin
		select	nextval('banco_saldo_seq')
		into STRICT	nr_seq_banco_saldo_w
		;
		/* Projeto Multimoeda - Verifica se a transação é moeda estrangeira para gravar no saldo */

		if (coalesce(vl_transacao_estrang_w,0) = 0) then
			vl_saldo_estrang_w := null;
			vl_cotacao_w := null;
		end if;

		insert	into banco_saldo(
				NR_SEQUENCIA,
				NR_SEQ_CONTA,
				DT_REFERENCIA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				VL_SALDO,
				DT_FECHAMENTO,
				NM_USUARIO_FECHAMENTO,
				vl_saldo_estrang,
				vl_cotacao,
				cd_moeda)
		values (
				nr_seq_banco_saldo_w,
				nr_seq_banco_p,
				trunc(dt_referencia_p, 'month'),
				clock_timestamp(),
				nm_usuario_p,
				coalesce(vl_saldo_w,0),
				null,
				null,
				vl_saldo_estrang_w,
				vl_cotacao_w,
				cd_moeda_w);
		exception
		when others then
			/* O mês de referência desta transação já tem saldo bancário fechado! */

			CALL wheb_mensagem_pck.exibir_mensagem_abort(207890);
		end;
	else
		/* Esta conta bancária não possui mês aberto no controle bancário! */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(207891);
	end if;

	OPEN C01;
	LOOP
	FETCH c01 into nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		update	banco_saldo
		set	vl_saldo	= vl_saldo + CASE WHEN ie_banco_w='T' THEN  0  ELSE coalesce(vl_transacao_w,0) END
		where	nr_sequencia	= nr_sequencia_w;
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			update	banco_saldo
			set	vl_saldo_estrang = vl_saldo_estrang + CASE WHEN ie_banco_w='T' THEN  0  ELSE coalesce(vl_transacao_estrang_w,0) END
			where	nr_sequencia	= nr_sequencia_w;
		end if;
	END LOOP;
	CLOSE c01;

	nr_seq_saldo_p	:= nr_seq_banco_saldo_w;
	if (nr_seq_banco_saldo_w > 0) and (vl_transacao_p >= 0) then
		begin
		update	movto_trans_financ
		set	dt_atualizacao	= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			nr_seq_saldo_banco	= nr_seq_banco_saldo_w
		where	nr_sequencia		= nr_sequencia_p;
		/* Edgar 09/12/2003 - Se entrar nesta excessão é porque está tentando excluir uma movimentação com valor zerado */

		exception
			when others then
				nr_seq_banco_saldo_w := 0;
		end;
	end if;

	if (coalesce(nr_seq_banco_saldo_w,0) = 0) then

		select	max(nr_sequencia)
		into STRICT	nr_seq_saldo_mes_w
		from	banco_saldo
		where	nr_seq_conta	= nr_seq_banco_p
		and	trunc(dt_referencia,'month')	= trunc(dt_referencia_p,'month');

		if (nr_seq_saldo_mes_w IS NOT NULL AND nr_seq_saldo_mes_w::text <> '') then
			select	max(dt_fechamento)
			into STRICT	dt_fechamento_w
			from	banco_saldo
			where	nr_sequencia	= nr_seq_saldo_mes_w;
		end if;
		ds_log_w	:= substr('Seq movto= ' || nr_sequencia_p || chr(13) ||
					'vl_transacao_p= ' || vl_transacao_p || chr(13) ||
					'nr_seq_banco_p= ' || nr_seq_banco_p || chr(13) ||
					'dt_referencia_p= ' || to_char(dt_referencia_p,'dd/mm/yyyy hh24:mi:ss') || chr(13) ||
					'nr_seq_trans_p= ' || nr_seq_trans_p ||
					'nr_seq_saldo_p= ' || nr_seq_saldo_p ||
					'dt_fechamento_w= ' || dt_fechamento_w ||
					'nr_seq_saldo_mes_w= ' || nr_seq_saldo_mes_w,1,4000);
		CALL fin_gerar_log_controle_banco(3,ds_log_w, nm_usuario_p,'N');


	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_saldo_movto_bco ( nr_sequencia_p bigint, nm_usuario_p text, vl_transacao_p bigint, nr_seq_banco_p bigint, dt_referencia_P timestamp, nr_seq_trans_p bigint, nr_seq_saldo_p INOUT bigint, vl_transacao_estrang_p bigint default null, vl_cotacao_p bigint default null) FROM PUBLIC;

