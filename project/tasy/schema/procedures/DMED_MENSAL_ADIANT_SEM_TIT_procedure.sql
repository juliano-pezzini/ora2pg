-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dmed_mensal_adiant_sem_tit ( nr_seq_dmed_mensal_p bigint, cd_estabelecimento_p bigint, dt_referencia_p timestamp, ie_nota_fiscal_p text, ie_conta_paciente_p text, ie_cpf_p text, ie_idade_p text, ie_estrangeiro_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
	GERAR_DMED_MENSAL_PRESTADOR
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_pessoa_responsavel_w		varchar(10);
cd_pessoa_beneficiario_w	varchar(10);
nr_documento_w			bigint;
vl_documento_w			double precision;
dt_documento_w			timestamp;
contador_w			bigint;
idade_w				bigint;

c01 CURSOR FOR
	SELECT  a.nr_adiantamento nr_documento,
		c.cd_pessoa_fisica cd_pessoa_responsavel,
		null cd_pessoa_beneficiario,
		a.vl_saldo vl_documento,
		a.dt_contabil dt_documento
	from 	adiantamento	a,
		pessoa_fisica	c
	where 	a.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	a.vl_saldo > 0
	and	(((ie_cpf_p = 'SC') and ( coalesce(c.nr_cpf::text, '') = '')) or
		( ie_cpf_p = 'CC' AND c.nr_cpf IS NOT NULL AND c.nr_cpf::text <> '') or (ie_cpf_p = 'AM'))
	and	exists (SELECT	1
			from	dmed_regra_adiantamento	w
			where	w.cd_tipo_recebimento	= a.cd_tipo_recebimento)
	and	to_char(a.dt_contabil,'mm/yyyy')	= to_char(dt_referencia_p, 'mm/yyyy');


BEGIN

select 	coalesce(max(nr_idade),16)
into STRICT 	idade_w
from 	dmed_regra_geral;

open c01;
loop
fetch C01 into
	nr_documento_w,
	cd_pessoa_responsavel_w,
	cd_pessoa_beneficiario_w,
	vl_documento_w,
	dt_documento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	contador_w	:= contador_w + 1;

	if (coalesce(cd_pessoa_beneficiario_w::text, '') = '') then
		cd_pessoa_beneficiario_w	:= cd_pessoa_responsavel_w;
	end if;

	insert into dmed_titulos_mensal(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_dmed_mensal,
		nr_documento,
		ie_tipo_documento,
		cd_pessoa_titular,
		cd_pessoa_beneficiario,
		vl_pago,
		dt_liquidacao,
		ie_prestadora_ops)
	values (nextval('dmed_titulos_mensal_seq'),
		clock_timestamp(),
		'Tasy',
		clock_timestamp(),
		'Tasy',
		nr_seq_dmed_mensal_p,
		nr_documento_w,
		'AS',
		cd_pessoa_responsavel_w,
		cd_pessoa_beneficiario_w,
		vl_documento_w,
		dt_documento_w,
		'P');

	if (mod(contador_w,100) = 0) then
		commit;
	end if;
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dmed_mensal_adiant_sem_tit ( nr_seq_dmed_mensal_p bigint, cd_estabelecimento_p bigint, dt_referencia_p timestamp, ie_nota_fiscal_p text, ie_conta_paciente_p text, ie_cpf_p text, ie_idade_p text, ie_estrangeiro_p text) FROM PUBLIC;

