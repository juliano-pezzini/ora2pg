-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_inativar_glo_ocor ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inativar as glosas e ocorrências de um ou vários itens da análise , para que o sistema
reative na consistência
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_conta_w			varchar(1)	:= 'N';
nr_seq_conta_glosa_w		bigint;
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_ocorrencia_fat_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_glosa_w			bigint;
qt_ocorrencia_w			integer;

C01 CURSOR(nr_seq_analise_pc	pls_conta.nr_seq_analise%type)FOR
	SELECT	a.nr_sequencia
	from	pls_conta a
	where	a.nr_seq_analise	= nr_seq_analise_pc;

/* Glosas */

C02 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia
	from	pls_conta_glosa	a
	where	a.nr_seq_conta	= nr_seq_conta_pc
	and	a.ie_situacao	= 'A'
	and	coalesce(nr_seq_ocorrencia_benef::text, '') = ''
	and	coalesce(a.nr_seq_conta_proc::text, '') = ''
	and	coalesce(a.nr_seq_conta_mat::text, '') = ''
	and	coalesce(a.nr_seq_proc_partic::text, '') = ''
	and	ie_conta_w	= 'S'
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	
union all

	SELECT	a.nr_sequencia
	from	pls_conta_glosa	a,
		pls_conta_proc	b
	where	a.ie_situacao		= 'A'
	and	a.nr_seq_conta_proc	= b.nr_sequencia
	and	coalesce(nr_seq_ocorrencia_benef::text, '') = ''
	and	b.nr_seq_conta		= nr_seq_conta_pc
	and (ie_lib_manual = 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	
union all

	select	a.nr_sequencia
	from	pls_conta_glosa	a,
		pls_conta_mat	b
	where	a.ie_situacao		= 'A'
	and	a.nr_seq_conta_mat	= b.nr_sequencia
	and	coalesce(nr_seq_ocorrencia_benef::text, '') = ''
	and	b.nr_seq_conta		= nr_seq_conta_pc
	and (ie_lib_manual = 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	
union all

	select	a.nr_sequencia
	from	pls_conta_proc		c,
		pls_proc_participante	b,
		pls_conta_glosa		a
	where	a.ie_situacao		= 'A'
	and	a.nr_seq_proc_partic	= b.nr_sequencia
	and	coalesce(a.nr_seq_ocorrencia_benef::text, '') = ''
	and (a.ie_lib_manual 	= 'N' 	or coalesce(a.ie_lib_manual::text, '') = '')
	and	c.nr_sequencia		= b.nr_seq_conta_proc
	and	c.nr_seq_conta		= nr_seq_conta_pc;

C03 CURSOR(	nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	/* +USE_CONCAT */
		a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (SELECT 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and	coalesce(a.nr_seq_conta_proc::text, '') = ''
	and	coalesce(a.nr_seq_conta_mat::text, '') = ''
	and	coalesce(a.nr_seq_proc_partic::text, '') = ''
	and	ie_conta_w	= 'S'
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and (exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_ocorrencia	= a.nr_seq_ocorrencia
			 and	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10') or
		not exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10'))
	
union all

	select	a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_conta_proc		b,
		pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (select 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_conta_proc	= b.nr_sequencia
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and (exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_ocorrencia	= a.nr_seq_ocorrencia
			 and	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10') or
		not exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10'))
	
union all

	select	a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_conta_mat		b,
		pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (select 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_conta_mat	= b.nr_sequencia
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and (exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_ocorrencia	= a.nr_seq_ocorrencia
			 and	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10') or
		not exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10'))
	
union all

	select	a.nr_sequencia,
		a.nr_seq_glosa
	from	pls_proc_participante	b,
		pls_ocorrencia_benef	a
	where	((a.ie_situacao		= 'A') or (exists (select 1
								 from 	pls_analise_glo_ocor_grupo	c
								 where	a.nr_sequencia		= c.nr_seq_ocor_benef
								 and	c.ie_status		= 'P')))
	and	a.nr_seq_proc_partic	= b.nr_sequencia
	and	a.nr_seq_conta		= nr_seq_conta_pc
	and (ie_lib_manual 	= 'N' 	or coalesce(ie_lib_manual::text, '') = '')
	and (exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_ocorrencia	= a.nr_seq_ocorrencia
			 and	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10') or
		not exists (select 1
			from	pls_acao_analise	acao,
				pls_acao_analise_ocor	ocor
			 where	ocor.nr_seq_acao_analise = acao.nr_sequencia
			 and	acao.cd_acao		= '10'));

C04 CURSOR(nr_seq_ocorrencia_benef_pc	pls_ocorrencia_benef.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia
	from	pls_ocorrencia_benef	b
	where	b.nr_seq_ocor_pag	= nr_seq_ocorrencia_benef_pc
	and (b.ie_lib_manual 	= 'N' or coalesce(b.ie_lib_manual::text, '') = '');
BEGIN
ie_conta_w	:= 'N';

if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') and (coalesce(nr_seq_conta_proc_p::text, '') = '') and (coalesce(nr_seq_conta_mat_p::text, '') = '') and (coalesce(nr_seq_proc_partic_p::text, '') = '') then
	ie_conta_w	:= 'S';
else
	if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') and (coalesce(nr_seq_conta_p::text, '') = '') and (coalesce(nr_seq_conta_proc_p::text, '') = '') and (coalesce(nr_seq_conta_mat_p::text, '') = '') and (coalesce(nr_seq_proc_partic_p::text, '') = '') then
		ie_conta_w	:= 'S';
	end if;
end if;

for r_c01_w in C01(nr_seq_analise_p) loop
	begin
	for r_c02_w in C02(	r_c01_w.nr_sequencia) loop
		begin
		select	count(1)
		into STRICT	qt_ocorrencia_w
		from	pls_ocorrencia_benef x
		where	x.nr_seq_glosa = r_c02_w.nr_sequencia;

		if (qt_ocorrencia_w = 0) then
			update	pls_conta_glosa
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
			where	nr_sequencia		= r_c02_w.nr_sequencia;

			update	pls_ocorrencia_benef
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
			where	nr_seq_glosa_fat	= r_c02_w.nr_sequencia;
		end if;
		end;
	end loop;

	for r_c03_w in C03(	r_c01_w.nr_sequencia) loop
		begin
		nr_seq_glosa_w	:= r_c03_w.nr_seq_glosa;

		update	pls_ocorrencia_benef
		set	ie_situacao		= 'I',
			ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
		where	nr_sequencia		= r_c03_w.nr_sequencia;

		if (coalesce(nr_seq_glosa_w::text, '') = '') then
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_glosa_w
			from	pls_conta_glosa a
			where	a.nr_seq_ocorrencia_benef	= r_c03_w.nr_sequencia;

		end if;

		if (nr_seq_glosa_w IS NOT NULL AND nr_seq_glosa_w::text <> '') then
			update	pls_conta_glosa
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
			where	nr_sequencia		= nr_seq_glosa_w;
		end if;

		for r_c04_w in C04(r_c03_w.nr_sequencia) loop
			begin
			update	pls_ocorrencia_benef
			set	ie_situacao		= 'I',
				ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
			where	nr_sequencia		= r_c04_w.nr_sequencia;
			end;
		end loop;

		end;
	end loop;

	end;
end loop;

/* Procedure intermediária, sem commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_inativar_glo_ocor ( nr_seq_analise_p bigint, nr_seq_conta_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nr_seq_proc_partic_p bigint, nm_usuario_p text) FROM PUBLIC;

