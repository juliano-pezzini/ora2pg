-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE rc_med AS (dt_prev_w		timestamp, 
				cd_tabela_w		varchar(2), 
				cd_med_w		varchar(10), 
				ds_med_w		varchar(150), 
				qt_doses_w		double precision, 
				via_adm_w		varchar(2), 
				freq_w			varchar(2), 
				nr_seq_apre_w		bigint, 
				nr_seq_autor_w		bigint, 
				qt_unidade_medida_w	varchar(3));
CREATE TYPE rc_cid AS (dt_diag_w		timestamp, 
				cd_cid_w		varchar(4), 
				cd_diag_imag_w		varchar(1), 
				ie_est_tumor_w		varchar(1), 
				ie_cap_func_w		varchar(1), 
				cd_fin_trat_w		varchar(1), 
				ds_diag_w		varchar(1000), 
				ds_obs_w		varchar(4000));


CREATE OR REPLACE PROCEDURE pls_tiss_gerar_w_guia_quimio (nr_sequencia_autor_p bigint, nr_seq_lote_guia_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
type 	tb_med is table of rc_med index by integer;
type 	tb_cid is table of rc_cid index by integer;

tb_cid_w			tb_cid;
tb_med_w			tb_med;
nr_cid_w			bigint := 0;
cd_doenca_w			varchar(4);

dt_prev_realizacao_w		timestamp;
cd_tipo_tabela_w		varchar(2);
cd_medicamento_w		varchar(10);
ds_medicamento_w		varchar(150);
qt_doses_w			double precision;
qt_itens_w			double precision;

via_adm_w			varchar(2);
frequencia_w			varchar(2);
qt_unidade_medida_w		varchar(3);
cd_ans_w			varchar(20); --OS - 1289502 
dt_radioterapia_w		timestamp;
ds_procedimento_cirurgico_w	varchar(40);
dt_real_proc_cirurgico_w	timestamp;
ds_area_irradiada_w		varchar(40);

nr_seq_guia_w			bigint;
nr_seq_apresentacao_w		bigint;
nr_med_w			bigint;
i				bigint;
nr_contador_geral		bigint;

dt_diagnostico_w		timestamp;
cd_diagnostico_imagem_w		varchar(1);
ie_estadia_tumor_w		varchar(1);
ie_capacidade_funcional_w	varchar(1);
cd_finalidade_tratamento_w	varchar(1);
ds_diagnostico_w		varchar(1000);
ds_observacao_w			varchar(4000);
nr_seq_segurado_w		varchar(15);

cd_versao_w			pls_versao_tiss.cd_versao_tiss%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type; --OS - 1289502 
c01 CURSOR FOR 
	SELECT	b.dt_prevista, 
		pls_obter_cod_tabela_tiss(null,null, c.nr_seq_material) cd_tabela, 
		substr(pls_obter_dados_mat_guia_req(b.nr_seq_plano_mat,'','CD'),1,10), 
		substr(pls_obter_dados_mat_guia_req(b.nr_seq_plano_mat,'','DS'),1,150), 
		CASE WHEN c.ie_status='A' THEN  c.qt_solicitada  ELSE c.qt_autorizada END , 
		b.qt_dosagem_total, 
		b.ie_via_administracao, 
		b.ie_frequencia_dose, 
		b.qt_unidade_medida 
	from 	pls_lote_anexo_guias_aut a, 
		pls_lote_anexo_mat_aut b, 
		pls_guia_plano_mat c 
	where	b.nr_seq_lote_anexo_guia = a.nr_sequencia 
	and	c.nr_sequencia = b.nr_seq_plano_mat 
	and	a.nr_seq_guia = nr_sequencia_autor_p 
	and	a.ie_tipo_anexo = 'QU' 
	and 	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and	coalesce(b.nr_seq_motivo_exc::text, '') = '';
	
c02 CURSOR FOR 	--Diagnóstico oncológico 
	SELECT	b.dt_diagnostico, 
		b.cd_doenca, 
		b.cd_diagnostico_imagem, 
		b.ie_estadia_tumor, 
		b.ie_capacidade_funcional, 
		b.cd_finalidade_tratamento, 
		b.ds_diagnostico, 
		b.ds_observacao 
	from	pls_lote_anexo_diag_aut		b, 
		pls_lote_anexo_guias_aut	a 
	where	b.nr_seq_lote_anexo_guia = a.nr_sequencia 
	and	a.nr_seq_guia = nr_sequencia_autor_p 
	and (a.nr_sequencia = nr_seq_lote_guia_p 
	or	0 = coalesce(nr_seq_lote_guia_p, 0)) 
	and	a.ie_tipo_anexo = 'QU' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	order by ie_tipo_diagnostico desc, b.nr_sequencia asc;
	/*Não mudar a ordenação, é necessário trazer primeiro os dados do atendimento e depois os diagnósticos */
 

BEGIN 
 
delete	from w_tiss_proc_paciente 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_guia 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_solicitacao 
where	nm_usuario		= nm_usuario_p;
 
commit;
 
if (nr_sequencia_autor_p IS NOT NULL AND nr_sequencia_autor_p::text <> '') then 
	begin 
		select	a.dt_radioterapia, 
			a.ds_procedimento_cirurgico, 
			a.dt_real_proc_cirurgico, 
			a.ds_area_irradiada 
		into STRICT	dt_radioterapia_w, 
			ds_procedimento_cirurgico_w, 
			dt_real_proc_cirurgico_w, 
			ds_area_irradiada_w 
		from 	pls_lote_anexo_guias_aut a 
		where	a.nr_seq_guia = nr_sequencia_autor_p 
		and	a.ie_tipo_anexo = 'QU'	 
		and	coalesce(a.nr_seq_motivo_exc::text, '') = '';
		 
	exception 
	when others then 
		dt_radioterapia_w		:= null;
		ds_procedimento_cirurgico_w	:= null;
		dt_real_proc_cirurgico_w	:= null;
		ds_area_irradiada_w		:= null;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(355626);-- Guia sem anexo 
	end;
	 
	--OS - 1289502 
	begin 
		select	cd_estabelecimento 
		into STRICT	cd_estabelecimento_w 
		from	pls_guia_plano 
		where	nr_sequencia = nr_sequencia_autor_p;
	exception 
	when others then 
		cd_estabelecimento_w := null;
	end;
	--fim--OS - 1289502-- 
	 
	nr_seq_apresentacao_w := 1;
	nr_med_w := 1;
	nr_contador_geral := 0;
	 
	--OS - 1289502 
	cd_ans_w	:= pls_obter_dados_outorgante(cd_estabelecimento_w,'ANS');
	 
	if (coalesce(cd_ans_w::text, '') = '') then		 
		select	max(cd_ans) 
		into STRICT	cd_ans_w 
		from	pls_outorgante 
		where	(cd_ans IS NOT NULL AND cd_ans::text <> '');
	end if;
	--fim--OS - 1289502-- 
	 
	select	pls_obter_versao_tiss 
	into STRICT	cd_versao_w 
	;
	 
	open c01;
	loop 
	fetch c01 into	dt_prev_realizacao_w, 
			cd_tipo_tabela_w, 
			cd_medicamento_w, 
			ds_medicamento_w, 
			qt_itens_w, 
			qt_doses_w, 
			via_adm_w, 
			frequencia_w, 
			qt_unidade_medida_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
 
	begin 
	 
		if (cd_versao_w < '3.03.01') then 
			qt_doses_w := qt_itens_w;
		end if;
	 
		nr_contador_geral := nr_contador_geral + 1;
		if (nr_med_w = 9) then 
			nr_med_w := 1;
			nr_seq_apresentacao_w := 1;
		end if;
		 
		if (nr_med_w = 1) then 
			select	nextval('w_tiss_guia_seq') 
			into STRICT	nr_seq_guia_w 
			;
		end if;
		 
		tb_med_w[nr_contador_geral].dt_prev_w		:= dt_prev_realizacao_w;
		tb_med_w[nr_contador_geral].cd_tabela_w		:= cd_tipo_tabela_w;
		tb_med_w[nr_contador_geral].cd_med_w		:= cd_medicamento_w;
		tb_med_w[nr_contador_geral].ds_med_w		:= ds_medicamento_w;
		tb_med_w[nr_contador_geral].qt_doses_w		:= qt_doses_w;
		tb_med_w[nr_contador_geral].via_adm_w		:= via_adm_w;
		tb_med_w[nr_contador_geral].freq_w		:= frequencia_w;
		tb_med_w[nr_contador_geral].nr_seq_apre_w	:= nr_seq_apresentacao_w;
		tb_med_w[nr_contador_geral].nr_seq_autor_w	:= nr_seq_guia_w;
		tb_med_w[nr_contador_geral].qt_unidade_medida_w	:= qt_unidade_medida_w;
		 
		if (nr_med_w = 1) then 
 
			nr_seq_apresentacao_w := 1;
			 
			insert into w_tiss_guia(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				cd_ans,			--OS - 1289502 
				dt_entrada,		--dt_radioterapia 
				ds_especific_mat,	--ds_procedimento_cirurgico 
				dt_autorizacao,		--dt_real_proc_cirurgico 
				ds_observacao,		--ds_area_irradiada 
				nr_seq_guia) 
			values (nr_seq_guia_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_ans_w,		--OS - 1289502 
				dt_radioterapia_w, 
				ds_procedimento_cirurgico_w, 
				dt_real_proc_cirurgico_w, 
				ds_area_irradiada_w, 
				nr_sequencia_autor_p);
			 
		end if;
		 
		nr_med_w := nr_med_w + 1;
		nr_seq_apresentacao_w := nr_seq_apresentacao_w + 1;
		 
	end;
	end loop;
	close c01;
	 
	if (nr_med_w < 8) then 
		for i in 1.. ((8 - nr_med_w)+1) loop 
			begin 
				nr_contador_geral := nr_contador_geral + 1;
				tb_med_w[nr_contador_geral].dt_prev_w		:= null;
				tb_med_w[nr_contador_geral].cd_tabela_w		:= null;
				tb_med_w[nr_contador_geral].cd_med_w		:= null;
				tb_med_w[nr_contador_geral].ds_med_w		:= null;
				tb_med_w[nr_contador_geral].qt_doses_w		:= null;
				tb_med_w[nr_contador_geral].via_adm_w		:= null;
				tb_med_w[nr_contador_geral].freq_w		:= null;
				tb_med_w[nr_contador_geral].nr_seq_apre_w	:= nr_seq_apresentacao_w;
				tb_med_w[nr_contador_geral].nr_seq_autor_w	:= nr_seq_guia_w;
				tb_med_w[nr_contador_geral].qt_unidade_medida_w	:= null;
				nr_seq_apresentacao_w := nr_seq_apresentacao_w + 1;
			end;
		end loop;
	end if;	
 
	for i in 1.. nr_contador_geral loop 
		begin 
		insert into w_tiss_proc_paciente(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_procedimento, 
			cd_edicao_amb, 
			cd_procedimento, 
			ds_procedimento, 
			qt_procedimento, 
			ie_via_acesso, 
			ie_funcao_medico, 
			nr_seq_apres_controle, 
			nr_seq_apresentacao, 
			nr_seq_guia, 
			ds_face_dente) 
		values (nextval('w_tiss_proc_paciente_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			tb_med_w[i].dt_prev_w, 
			tb_med_w[i].cd_tabela_w, 
			tb_med_w[i].cd_med_w, 
			tb_med_w[i].ds_med_w, 
			tb_med_w[i].qt_doses_w, 
			tb_med_w[i].via_adm_w, 
			tb_med_w[i].freq_w, 
			tb_med_w[i].nr_seq_apre_w, 
			i, 
			tb_med_w[i].nr_seq_autor_w, 
			tb_med_w[i].qt_unidade_medida_w);
		end;
	end loop;
	 
	open c02;
	loop 
	fetch c02 into	dt_diagnostico_w, 
			cd_doenca_w, 
			cd_diagnostico_imagem_w, 
			ie_estadia_tumor_w, 
			ie_capacidade_funcional_w, 
			cd_finalidade_tratamento_w, 
			ds_diagnostico_w, 
			ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */				
		begin 
			tb_cid_w[nr_cid_w].dt_diag_w		:= dt_diagnostico_w;
			tb_cid_w[nr_cid_w].cd_cid_w		:= cd_doenca_w;
			tb_cid_w[nr_cid_w].cd_diag_imag_w	:= cd_diagnostico_imagem_w;
			tb_cid_w[nr_cid_w].ie_est_tumor_w	:= ie_estadia_tumor_w;
			tb_cid_w[nr_cid_w].ie_cap_func_w	:= ie_capacidade_funcional_w;
			tb_cid_w[nr_cid_w].cd_fin_trat_w	:= cd_finalidade_tratamento_w;
			tb_cid_w[nr_cid_w].ds_diag_w		:= ds_diagnostico_w;
			tb_cid_w[nr_cid_w].ds_obs_w		:= ds_observacao_w;
			nr_cid_w := nr_cid_w + 1;
		end;
	end loop;
	close c02;
 
	if (nr_cid_w = 1 )then 
		insert into w_tiss_solicitacao(nr_sequencia, dt_atualizacao, nm_usuario, 
			dt_diagnostico,	cd_cid,	cd_diagnostico_imagem, 
			cd_estadiamento_tumor,	ie_capacidade_funcional,cd_finalidade_tratamento, 
			ds_diagnostico,	ds_observacao,nr_seq_guia) 
		values (nextval('w_tiss_solicitacao_seq'), clock_timestamp(),nm_usuario_p, 
			tb_cid_w[0].dt_diag_w,	tb_cid_w[0].cd_cid_w,	tb_cid_w[0].cd_diag_imag_w, 
			tb_cid_w[0].ie_est_tumor_w, tb_cid_w[0].ie_cap_func_w, tb_cid_w[0].cd_fin_trat_w, 
			tb_cid_w[0].ds_diag_w, tb_cid_w[0].ds_obs_w, nr_sequencia_autor_p);
	elsif (nr_cid_w = 2 )then 
		insert into w_tiss_solicitacao(nr_sequencia, dt_atualizacao, nm_usuario, 
			dt_diagnostico, cd_cid,	cd_cid2, 
			cd_diagnostico_imagem, cd_estadiamento_tumor, ie_capacidade_funcional, 
			cd_finalidade_tratamento, ds_diagnostico, ds_observacao, 
			nr_seq_guia) 
		values (nextval('w_tiss_solicitacao_seq'), clock_timestamp(), nm_usuario_p, 
			tb_cid_w[0].dt_diag_w,	tb_cid_w[1].cd_cid_w, tb_cid_w[0].cd_cid_w, 
			tb_cid_w[0].cd_diag_imag_w, tb_cid_w[0].ie_est_tumor_w,	tb_cid_w[0].ie_cap_func_w, 
			tb_cid_w[0].cd_fin_trat_w, tb_cid_w[0].ds_diag_w, tb_cid_w[0].ds_obs_w, 
			nr_sequencia_autor_p);
	elsif (nr_cid_w = 3 )then 
		insert into w_tiss_solicitacao(nr_sequencia, dt_atualizacao, nm_usuario, 
			dt_diagnostico, cd_cid, cd_cid2, 
			cd_cid3, cd_diagnostico_imagem, cd_estadiamento_tumor, 
			ie_capacidade_funcional, cd_finalidade_tratamento, ds_diagnostico, 
			ds_observacao, nr_seq_guia) 
		values (nextval('w_tiss_solicitacao_seq'), clock_timestamp(), nm_usuario_p, 
			tb_cid_w[0].dt_diag_w, tb_cid_w[1].cd_cid_w, tb_cid_w[2].cd_cid_w, 
			tb_cid_w[0].cd_cid_w, tb_cid_w[0].cd_diag_imag_w, tb_cid_w[0].ie_est_tumor_w, 
			tb_cid_w[0].ie_cap_func_w, tb_cid_w[0].cd_fin_trat_w, tb_cid_w[0].ds_diag_w, 
			tb_cid_w[0].ds_obs_w,nr_sequencia_autor_p);
	elsif (nr_cid_w = 4 )then 
		insert into w_tiss_solicitacao(nr_sequencia, dt_atualizacao,nm_usuario, 
			dt_diagnostico, cd_cid, cd_cid2, 
			cd_cid3, cd_cid4, cd_diagnostico_imagem, cd_estadiamento_tumor, 
			ie_capacidade_funcional, cd_finalidade_tratamento, ds_diagnostico, 
			ds_observacao, nr_seq_guia)	 
		values (nextval('w_tiss_solicitacao_seq'), clock_timestamp(), 
			nm_usuario_p, tb_cid_w[0].dt_diag_w, tb_cid_w[1].cd_cid_w, 
			tb_cid_w[2].cd_cid_w, tb_cid_w[3].cd_cid_w, tb_cid_w[0].cd_cid_w, 
			tb_cid_w[0].cd_diag_imag_w, tb_cid_w[0].ie_est_tumor_w,	tb_cid_w[0].ie_cap_func_w, 
			tb_cid_w[0].cd_fin_trat_w, tb_cid_w[0].ds_diag_w, tb_cid_w[0].ds_obs_w, 
			nr_sequencia_autor_p);
	elsif (nr_cid_w = 5 )then 
		insert into w_tiss_solicitacao(nr_sequencia,dt_atualizacao,nm_usuario, 
			dt_diagnostico,cd_cid,cd_cid2, 
			cd_cid3,cd_cid4,cd_diagnostico_imagem, 
			cd_estadiamento_tumor,ie_capacidade_funcional,cd_finalidade_tratamento, 
			ds_diagnostico, ds_observacao, nr_seq_guia)	 
		values (nextval('w_tiss_solicitacao_seq'), clock_timestamp(),nm_usuario_p, 
			tb_cid_w[0].dt_diag_w, tb_cid_w[1].cd_cid_w,tb_cid_w[2].cd_cid_w, 
			tb_cid_w[3].cd_cid_w,tb_cid_w[4].cd_cid_w,tb_cid_w[0].cd_diag_imag_w, 
			tb_cid_w[0].ie_est_tumor_w,tb_cid_w[0].ie_cap_func_w,tb_cid_w[0].cd_fin_trat_w, 
			tb_cid_w[0].ds_diag_w,tb_cid_w[0].ds_obs_w,nr_sequencia_autor_p);
	end if;	
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_gerar_w_guia_quimio (nr_sequencia_autor_p bigint, nr_seq_lote_guia_p bigint, nm_usuario_p text) FROM PUBLIC;

