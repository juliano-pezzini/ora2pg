-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_conta_procedimento ( cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_conta_p bigint, ie_clinica_p bigint, cd_setor_atendimento_p bigint, ie_classif_convenio_p text, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_convenio_p text, dt_vigencia_p timestamp, cd_conta_contabil_p INOUT text, cd_centro_custo_p INOUT bigint, cd_plano_p text, ie_regra_pacote_p text default null, ie_complexidade_sus_p text default null, ie_tipo_financ_sus_p text default null, nr_seq_motivo_solic_p bigint default null, cd_operacao_estoque_p bigint default null, cd_operacao_nf_p bigint default null, ie_cancelamento_p text default null, cd_natureza_operacao_p bigint default null, nr_seq_proc_interno_p parametros_conta_contabil.nr_seq_proc_interno%type default null) AS $body$
DECLARE


/* -------------- Tipo de Conta -------
	1 - Receita
	2 - Estoque
	3 - Passagem Direta
	6 - Redutora Receita
	7 - Gratuidade
	8 - Pre-faturamento
*/
cd_grupo_w                			bigint  := 0;
cd_especialidade_w        			bigint  := 0;
cd_area_w				bigint  := 0;
cd_conta_receita_w        			varchar(20);
cd_conta_estoque_w        			varchar(20);
cd_conta_passag_direta_w  			varchar(20);
cd_conta_desp_pre_fatur_w			varchar(20);
CD_CONTA_REDUT_RECEITA_w		varchar(20);
cd_conta_gratuidade_w			varchar(20);
dt_vigencia_w				timestamp;
nr_seq_forma_org_w			bigint := 0;
nr_seq_grupo_w				bigint := 0;
nr_seq_subgrupo_w			bigint := 0;
cd_centro_custo_receita_w			bigint;
cd_conta_rec_pacote_w 			varchar(20);
cd_empresa_w				smallint;
cd_sequencia_parametro_w			bigint;
cd_conta_perda_pre_fat_w		parametros_conta_contabil.cd_conta_perda_pre_fat%type;
ie_considera_dt_vig_w		varchar(1);

/* Matheus OS 84758 04/03/2008 coloquei decode no end do ie_origem_proced */

C001 CURSOR FOR
SELECT	cd_conta_receita,
	cd_conta_estoque,
	cd_conta_passag_direta,
	cd_conta_rec_pacote,
	cd_centro_custo_receita,
	cd_conta_desp_pre_fatur,
	CD_CONTA_REDUT_RECEITA,
	cd_conta_gratuidade,
	cd_sequencia_parametro,
	cd_conta_perda_pre_fat
from 	parametros_conta_contabil
where	cd_empresa					= cd_empresa_w
and	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
and	coalesce(cd_procedimento,cd_procedimento_p) 		= cd_procedimento_p
and	coalesce(CASE WHEN coalesce(cd_procedimento,0)=0 THEN null  ELSE ie_origem_proced END ,ie_origem_proced_p) = ie_origem_proced_p
and	coalesce(cd_area_proced,cd_area_w)			= cd_area_w	
and	coalesce(cd_especial_proced,cd_especialidade_w)		= cd_especialidade_w
and	coalesce(cd_grupo_proced,cd_grupo_w)			= cd_grupo_w
and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)		= nr_seq_forma_org_w 	
and	coalesce(nr_seq_grupo, nr_seq_grupo_w)			= nr_seq_grupo_w 	
and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w
and 	coalesce(ie_tipo_atendimento,coalesce(ie_tipo_atendimento_p,0)) 	= coalesce(ie_tipo_atendimento_p,0)
and	coalesce(cd_setor_atendimento,coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0)
and	coalesce(cd_centro_custo,coalesce(cd_centro_custo_p,0))		= coalesce(cd_centro_custo_p,0)
and	coalesce(ie_classif_convenio,coalesce(ie_classif_convenio_p,0))	= coalesce(ie_classif_convenio_p,0)
and	coalesce(ie_tipo_convenio,coalesce(ie_tipo_convenio_p,0))		= coalesce(ie_tipo_convenio_p,0)
and	coalesce(cd_plano,coalesce(cd_plano_p,0))			= coalesce(cd_plano_p,0)
and	coalesce(cd_categoria_convenio,coalesce(cd_categoria_convenio_p,'0'))	= coalesce(cd_categoria_convenio_p,'0')
and	coalesce(cd_convenio,coalesce(cd_convenio_p,0))			= coalesce(cd_convenio_p,0)
and	coalesce(nr_seq_motivo_solic,coalesce(nr_seq_motivo_solic_p,0))	= coalesce(nr_seq_motivo_solic_p,0)
and	((coalesce(cd_operacao_estoque_p::text, '') = '') or (coalesce(cd_operacao_estoque::text, '') = '') or (cd_operacao_estoque_p = cd_operacao_estoque))
and	((IE_TIPO_CONTA_P = 1 AND cd_conta_receita IS NOT NULL AND cd_conta_receita::text <> '') or
	(IE_TIPO_CONTA_P = 2 AND cd_conta_estoque IS NOT NULL AND cd_conta_estoque::text <> '') or
	(IE_TIPO_CONTA_P = 3 AND cd_conta_passag_direta IS NOT NULL AND cd_conta_passag_direta::text <> '') or
	(IE_TIPO_CONTA_P = 4 AND cd_conta_desp_pre_fatur IS NOT NULL AND cd_conta_desp_pre_fatur::text <> '') or
	(IE_TIPO_CONTA_P = 6 AND CD_CONTA_REDUT_RECEITA IS NOT NULL AND CD_CONTA_REDUT_RECEITA::text <> '') or
	(IE_TIPO_CONTA_P = 7 AND cd_conta_gratuidade IS NOT NULL AND cd_conta_gratuidade::text <> ''))
and	coalesce(cd_material::text, '') = ''
and	coalesce(cd_classe_material::text, '') = ''
and	coalesce(cd_subgrupo_material::text, '') = ''
and	coalesce(cd_grupo_material::text, '') = ''
and coalesce(nr_seq_familia::text, '') = ''
and	coalesce(ie_clinica, coalesce(ie_clinica_p,0))			= coalesce(ie_clinica_p,0)
and	coalesce(ie_complexidade_sus,coalesce(ie_complexidade_sus_p,'0')) = coalesce(ie_complexidade_sus_p,'0')
and	coalesce(ie_tipo_financ_sus,coalesce(ie_tipo_financ_sus_p,'0'))	= coalesce(ie_tipo_financ_sus_p,'0')
and (coalesce(dt_inicio_vigencia, dt_vigencia_w) <= dt_vigencia_w and coalesce(dt_fim_vigencia, dt_vigencia_w) >= dt_vigencia_w)
and	coalesce(cd_operacao_nf,coalesce(cd_operacao_nf_p,'0'))	= coalesce(cd_operacao_nf_p,'0')
and	coalesce(ie_situacao_conta_pac,coalesce(ie_cancelamento_p,'0')) = coalesce(ie_cancelamento_p,'0')
and	coalesce(cd_natureza_operacao, coalesce(cd_natureza_operacao_p, 0)) = coalesce(cd_natureza_operacao_p, 0)
and	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_p, 0)) = coalesce(nr_seq_proc_interno_p, 0)
order by	CASE WHEN ie_considera_dt_vig_w='S' THEN dt_inicio_vigencia  ELSE null END ,
		coalesce(cd_operacao_nf,0),
		coalesce(cd_estabelecimento,0),
		coalesce(ie_tipo_financ_sus,0),
		coalesce(ie_complexidade_sus,0),
		coalesce(cd_categoria_convenio,'0'),
		coalesce(cd_plano,0),
		coalesce(cd_convenio,0),
		coalesce(ie_tipo_convenio,0),
		coalesce(ie_classif_convenio,0),
		coalesce(cd_setor_atendimento,0),
		coalesce(cd_centro_custo,0),
		coalesce(ie_tipo_atendimento,0),
		coalesce(ie_clinica,0),
		coalesce(nr_seq_proc_interno,0),
		coalesce(cd_procedimento,0),
		coalesce(nr_seq_forma_org,0),
		coalesce(nr_seq_subgrupo,0),
		coalesce(nr_seq_grupo,0),
		coalesce(cd_grupo_proced,0),
		coalesce(cd_especial_proced,0),
		coalesce(cd_area_proced,0),
		coalesce(ie_cancelamento_p,'0');


BEGIN

dt_vigencia_w         := pkg_date_utils.get_time(dt_vigencia_p,0,0,0);
ie_considera_dt_vig_w := coalesce(obter_valor_param_usuario(7050, 20, obter_perfil_ativo, obter_usuario_ativo, obter_estabelecimento_ativo), 'S');

begin
select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento = cd_estabelecimento_p;

select	cd_grupo_proc,
	cd_especialidade,
	cd_area_procedimento,
	coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 'F'),'F'),1,10),0),
	coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 'G'),'G'),1,10),0),
	coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 'S'),'S'),1,10),0)
into STRICT	cd_grupo_w,
	cd_especialidade_w,
	cd_area_w,
	nr_seq_forma_org_w,
	nr_seq_grupo_w,
	nr_seq_subgrupo_w
from	estrutura_procedimento_v
where	cd_procedimento 	= cd_procedimento_p
and	ie_origem_proced 	= ie_origem_proced_p;
exception when others then
	cd_grupo_w 		:= 0;
	cd_especialidade_w	:= 0;
	cd_area_w		:= 0;
end;

OPEN C001;
LOOP
FETCH C001 INTO
	cd_conta_receita_w,
	cd_conta_estoque_w,
	cd_conta_passag_direta_w,
	cd_conta_rec_pacote_w,
	cd_centro_custo_receita_w,
	cd_conta_desp_pre_fatur_w,
	CD_CONTA_REDUT_RECEITA_w,
	cd_conta_gratuidade_w,
	cd_sequencia_parametro_w,
	cd_conta_perda_pre_fat_w;
EXIT WHEN NOT FOUND; /* apply on C001 */
	begin
	
	if (ie_tipo_conta_p = 1) then
		begin
		cd_conta_contabil_p	:= cd_conta_receita_w;
		if (coalesce(cd_centro_custo_receita_w,0) <> 0) then
			cd_centro_custo_p	:= cd_centro_custo_receita_w;
		end if;
		if (coalesce(ie_regra_pacote_p,'N') = 'S') then
			cd_conta_contabil_p	:= coalesce(cd_conta_rec_pacote_w, cd_conta_receita_w);
		end if;
		end;
	elsif (ie_tipo_conta_p = 2) then
		cd_conta_contabil_p	:= cd_conta_estoque_w;
	elsif (ie_tipo_conta_p = 3) then
		cd_conta_contabil_p 	:= cd_conta_passag_direta_w;
	elsif (ie_tipo_conta_p = 4) then
		cd_conta_contabil_p	:= cd_conta_desp_pre_fatur_w;
	elsif (ie_tipo_conta_p = 6) then
		cd_conta_contabil_p	:= CD_CONTA_REDUT_RECEITA_w;
	elsif (ie_tipo_conta_p = 7) then
		cd_conta_contabil_p	:= cd_conta_gratuidade_w;
	elsif (ie_tipo_conta_p = 8) then
		cd_conta_contabil_p	:= cd_conta_perda_pre_fat_w;
	end if;
	end;
END LOOP;
CLOSE C001;

CALL philips_contabil_pck.set_cd_sequencia_parametro(cd_sequencia_parametro_w);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_conta_procedimento ( cd_estabelecimento_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_conta_p bigint, ie_clinica_p bigint, cd_setor_atendimento_p bigint, ie_classif_convenio_p text, ie_tipo_atendimento_p bigint, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_categoria_convenio_p text, dt_vigencia_p timestamp, cd_conta_contabil_p INOUT text, cd_centro_custo_p INOUT bigint, cd_plano_p text, ie_regra_pacote_p text default null, ie_complexidade_sus_p text default null, ie_tipo_financ_sus_p text default null, nr_seq_motivo_solic_p bigint default null, cd_operacao_estoque_p bigint default null, cd_operacao_nf_p bigint default null, ie_cancelamento_p text default null, cd_natureza_operacao_p bigint default null, nr_seq_proc_interno_p parametros_conta_contabil.nr_seq_proc_interno%type default null) FROM PUBLIC;

