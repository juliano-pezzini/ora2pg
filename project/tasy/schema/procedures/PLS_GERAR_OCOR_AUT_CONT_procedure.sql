-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_cont ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, cd_tipo_portador_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Rotina utilizada para validar as informações do da operadora executora (intercâmbio) com os filtros definidos na regra
de ocorrência combinada.
IE_TIPO_OCORRENCIA_W	= C - Gera a ocorrência para o cabeçalho
			= I - Gera ocorrência para os itens
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x] Tasy (Delphi/Java) [  x] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Performance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
ie_gerar_ocorrencia_w		varchar(2)	:= 'N';
ie_regra_com_itens_w		varchar(1);
nr_contrato_w			pls_contrato.nr_contrato%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_intercambio_W		pls_intercambio.nr_sequencia%type;
cd_cgc_estipulante_w		pessoa_juridica.cd_cgc%type;
cd_pf_estipulante_w		pessoa_fisica.cd_pessoa_fisica%type;
qt_contratos_w			bigint;
nr_seq_pagador_w		pls_contrato_pagador.nr_sequencia%type;
qt_processo_judicial_w		bigint	:= 0;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
dt_solicitacao_w		timestamp;
ie_tipo_contrato_inter_w	pls_intercambio.ie_tipo_contrato%type;

ie_regra_senha_estip_w		varchar(1);

cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

C01 CURSOR FOR
	SELECT	nr_seq_grupo_contrato,
		ie_tipo_pagador,
		nr_seq_tipo_processo,
		ie_tipo_contrato_intercambio,
		ie_exige_senha_estipulante
	from	pls_ocor_aut_filtro_cont
	where	nr_seq_ocor_aut_filtro	= nr_seq_ocor_filtro_p
	and	ie_situacao		= 'A'
	and 	((coalesce(nr_contrato::text, '') = '')
	or (nr_contrato		= nr_contrato_w))
	and 	((coalesce(nr_seq_intercambio::text, '') = '')
	or (nr_seq_intercambio	= nr_seq_intercambio_w))
	and	((coalesce(cd_tipo_portador::text, '') = '')
	or (cd_tipo_portador	= cd_tipo_portador_p));

BEGIN
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	b.nr_seq_intercambio,
			b.nr_seq_contrato,
			b.nr_seq_pagador,
			b.nr_sequencia,
			a.dt_solicitacao,
			b.cd_pessoa_fisica
		into STRICT	nr_seq_intercambio_w,
			nr_seq_contrato_w,
			nr_seq_pagador_w,
			nr_seq_segurado_w,
			dt_solicitacao_w,
			cd_pessoa_fisica_w
		from	pls_guia_plano a,
			pls_segurado b
		where	a.nr_sequencia		= nr_seq_guia_p
		and	a.nr_seq_segurado	= b.nr_sequencia;
	exception
	when others then
		nr_seq_intercambio_w	:= null;
		nr_seq_contrato_w	:= null;
		nr_seq_pagador_w	:= null;
		nr_seq_segurado_w	:= null;
	end;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	begin
		select	b.nr_seq_intercambio,
			b.nr_seq_contrato,
			b.nr_seq_pagador,
			b.nr_sequencia,
			a.dt_requisicao,
			b.cd_pessoa_fisica
		into STRICT	nr_seq_intercambio_w,
			nr_seq_contrato_w,
			nr_seq_pagador_w,
			nr_seq_segurado_w,
			dt_solicitacao_w,
			cd_pessoa_fisica_w
		from	pls_requisicao a,
			pls_segurado b
		where	a.nr_sequencia		= nr_seq_requisicao_p
		and	a.nr_seq_segurado	= b.nr_sequencia;
	exception
	when others then
		nr_seq_intercambio_w	:= null;
		nr_seq_contrato_w	:= null;
	end;
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	begin
		select	nr_seq_requisicao
		into STRICT	nr_seq_requisicao_w
		from	pls_execucao_requisicao
		where	nr_sequencia	= nr_seq_execucao_p;
	exception
	when others then
		nr_seq_requisicao_w	:= null;
	end;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		begin
			select	b.nr_seq_intercambio,
				b.nr_seq_contrato,
				b.nr_seq_pagador,
				b.nr_sequencia,
				a.dt_requisicao,
				b.cd_pessoa_fisica
			into STRICT	nr_seq_intercambio_w,
				nr_seq_contrato_w,
				nr_seq_pagador_w,
				nr_seq_segurado_w,
				dt_solicitacao_w,
				cd_pessoa_fisica_w
			from	pls_requisicao a,
				pls_segurado b
			where	a.nr_sequencia		= nr_seq_requisicao_w
			and	a.nr_seq_segurado	= b.nr_sequencia;
		exception
		when others then
			nr_seq_intercambio_w	:= null;
			nr_seq_contrato_w	:= null;
		end;
	end if;
end if;

if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
	begin
		select	nr_contrato
		into STRICT	nr_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w;
	exception
	when others then
		nr_contrato_w		:= null;
	end;
end if;

begin
	select	a.cd_cgc,
		a.cd_pessoa_fisica
	into STRICT	cd_cgc_estipulante_w,
		cd_pf_estipulante_w
	from	pls_contrato_pagador	a
	where	a.nr_sequencia		= nr_seq_pagador_w;
exception
when others then
	cd_cgc_estipulante_w	:= null;
	cd_pf_estipulante_w	:= null;
end;

for r_C01_w in C01 loop
	begin
		ie_gerar_ocorrencia_w	:= 'S';
		if (r_C01_w.nr_seq_grupo_contrato IS NOT NULL AND r_C01_w.nr_seq_grupo_contrato::text <> '') then
			select	count(1)
			into STRICT	qt_contratos_w
			from	pls_preco_contrato
			where (nr_seq_contrato	= nr_seq_contrato_w
			or	nr_seq_intercambio	= nr_seq_intercambio_w)
			and	nr_seq_grupo		= r_C01_w.nr_seq_grupo_contrato;

			if (qt_contratos_w	= 0) then
				ie_gerar_ocorrencia_w	:= 'N';
			end if;
		end if;

		if (ie_gerar_ocorrencia_w	= 'S') then
			if (r_C01_w.ie_tipo_pagador	= 'A') then
				if ((cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') or (cd_pf_estipulante_w IS NOT NULL AND cd_pf_estipulante_w::text <> '')) then
					ie_gerar_ocorrencia_w	:= 'S';
				end if;
			elsif (r_C01_w.ie_tipo_pagador	= 'PF') then
				if ((coalesce(cd_cgc_estipulante_w::text, '') = '') and (cd_pf_estipulante_w IS NOT NULL AND cd_pf_estipulante_w::text <> '')) then
					ie_gerar_ocorrencia_w	:= 'S';
				else
					ie_gerar_ocorrencia_w := 'N';
				end if;
			elsif (r_C01_w.ie_tipo_pagador	= 'PJ') then
				if ((cd_cgc_estipulante_w IS NOT NULL AND cd_cgc_estipulante_w::text <> '') and (coalesce(cd_pf_estipulante_w::text, '') = '')) then
					ie_gerar_ocorrencia_w	:= 'S';
				else
					ie_gerar_ocorrencia_w := 'N';
				end if;
			else
				ie_gerar_ocorrencia_w	:= 'S';
			end if;
		end if;

		if 	((coalesce(r_C01_w.nr_seq_tipo_processo,0)	> 0) and (ie_gerar_ocorrencia_w	= 'S')) then
			select	count(1)
			into STRICT	qt_processo_judicial_w
			from	processo_judicial_liminar
			where	(((coalesce(ie_considera_codigo_pf, 'N') = 'N'	and nr_seq_segurado	= nr_seq_segurado_w)
			or (coalesce(ie_considera_codigo_pf, 'N') = 'S'		and pls_obter_dados_segurado(nr_seq_segurado, 'PF')	= cd_pessoa_fisica_w))
			or	nr_seq_contrato		= nr_seq_contrato_w)
			and	ie_impacto_autorizacao	= 'S'
			and	nr_seq_tipo_processo	= r_C01_w.nr_seq_tipo_processo
			and	ie_estagio		= 2
			and	dt_solicitacao_w between trunc(dt_inicio_validade) and fim_dia(coalesce(dt_fim_validade,dt_solicitacao_w));

			if (qt_processo_judicial_w > 0) then
				ie_gerar_ocorrencia_w := 'S';
			else
				ie_gerar_ocorrencia_w := 'N';
			end if;
		end if;

		if 	(ie_gerar_ocorrencia_w	= 'S' AND r_C01_w.ie_tipo_contrato_intercambio IS NOT NULL AND r_C01_w.ie_tipo_contrato_intercambio::text <> '') then
			begin
				select	coalesce(ie_tipo_contrato, '0')
				into STRICT	ie_tipo_contrato_inter_w
				from	pls_intercambio
				where	nr_sequencia	= nr_seq_intercambio_w;
			exception
			when others then
				ie_tipo_contrato_inter_w	:= '0';
			end;

			if (r_C01_w.ie_tipo_contrato_intercambio <> ie_tipo_contrato_inter_w) then
				ie_gerar_ocorrencia_w	:= 'N';
			end if;
		end if;

		if 	((ie_gerar_ocorrencia_w	= 'S') and (coalesce(r_C01_w.ie_exige_senha_estipulante, 'N') = 'S')) then
			ie_regra_senha_estip_w := pls_verifica_regra_senha_estip(	nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_segurado_w, nr_contrato_w, nm_usuario_p, ie_regra_senha_estip_w);
			if (ie_regra_senha_estip_w	= 'N') then
				ie_gerar_ocorrencia_w	:= 'N';
			end if;
		end if;

		if (ie_gerar_ocorrencia_w	= 'S') then
			exit;
		end if;
	end;
end loop;

if (ie_gerar_ocorrencia_w = 'S') then
	ie_regra_com_itens_w  :=  pls_obter_se_oco_aut_fil_itens(nr_seq_ocor_filtro_p);

	if (ie_regra_com_itens_w = 'S') then
		ie_tipo_ocorrencia_p := 'I';
	else
		ie_tipo_ocorrencia_p := 'C';
	end if;
end if;

ie_gerar_ocorrencia_p	:= ie_gerar_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_cont ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, cd_tipo_portador_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) FROM PUBLIC;

