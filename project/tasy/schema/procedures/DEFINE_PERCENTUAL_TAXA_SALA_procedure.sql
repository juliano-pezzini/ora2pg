-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_percentual_taxa_sala (nr_atendimento_p bigint, nr_cirurgia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_tipo_cirurgia_w		cirurgia.cd_tipo_cirurgia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_convenio_w			convenio.cd_convenio%type;
nr_seq_hist_tx_sala_cir_w	hist_taxa_sala_cirurgica.nr_sequencia%type;
ie_regra_via_acesso_w		regra_tx_porte_cirurgia.ie_regra_via_acesso%type;
pr_taxa_maior_porte_w		regra_tx_porte_cirurgia.pr_taxa_maior_porte%type;			
pr_taxa_seq_maior_porte_w	regra_tx_porte_cirurgia.pr_taxa_seq_maior_porte%type;
pr_taxa_demais_porte_w		regra_tx_porte_cirurgia.pr_taxa_demais_porte%type;
qt_porte_anest_w		hist_taxa_sala_cirurgica.qt_porte_anest%type;
nr_seq_proc_taxa_w		hist_taxa_sala_cirurgica.nr_seq_proc_taxa%type;
qt_reg_w			bigint := 1;

C01 CURSOR FOR
	SELECT	pr_taxa_maior_porte,
		pr_taxa_seq_maior_porte,
		pr_taxa_demais_porte   
	from	regra_tx_porte_cirurgia
	where	cd_convenio 			= cd_convenio_w
	and	cd_estabelecimento		= cd_estabelecimento_w
	and	ie_situacao			= 'A'
	and	coalesce(cd_tipo_cirurgia,cd_tipo_cirurgia_w) = cd_tipo_cirurgia_w
	and	ie_regra_via_acesso 		= ie_regra_via_acesso_w
	order by coalesce(cd_tipo_cirurgia,0);
	
C02 CURSOR FOR
	SELECT	coalesce(qt_porte_anest,0),
		nr_seq_proc_taxa
	from	hist_taxa_sala_cirurgica
	where	nr_cirurgia = nr_cirurgia_p
	and	nr_atendimento = nr_atendimento_p
	order by coalesce(qt_porte_anest,0) desc;	
					

BEGIN

select	max(a.cd_estabelecimento),
	max(b.cd_convenio),
	coalesce(max(b.cd_tipo_cirurgia),0)
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_tipo_cirurgia_w
from	atendimento_paciente a,
	cirurgia b
where	b.nr_cirurgia 	 = nr_cirurgia_p
and	a.nr_atendimento = b.nr_atendimento
and	a.nr_atendimento = nr_atendimento_p;

select	coalesce(max(a.nr_sequencia),0)
into STRICT	nr_seq_hist_tx_sala_cir_w
from	hist_taxa_sala_cirurgica a
where	a.nr_atendimento 	= nr_atendimento_p
and	a.nr_cirurgia		= nr_cirurgia_p
and	coalesce(a.qt_porte_anest,0)  = (	SELECT	max(x.qt_porte_anest)
					from	hist_taxa_sala_cirurgica x
					where	x.nr_atendimento = a.nr_atendimento
					and	x.nr_cirurgia	 = a.nr_cirurgia);
begin					
select	'M'
into STRICT	ie_regra_via_acesso_w	
from	hist_taxa_sala_cirurgica a,
	procedimento_paciente b
where	a.nr_seq_propac_cir = b.nr_sequencia
and	a.nr_atendimento    = nr_atendimento_p
and	a.nr_cirurgia	    = nr_cirurgia_p
and	a.nr_sequencia	   <> nr_seq_hist_tx_sala_cir_w
and	coalesce(b.ie_via_acesso,'M') in ('M','U');
exception
when no_data_found then
  ie_regra_via_acesso_w := 'D';
when too_many_rows then
  ie_regra_via_acesso_w := 'M';
end;


open C01;
loop
fetch C01 into	
	pr_taxa_maior_porte_w,
	pr_taxa_seq_maior_porte_w,
	pr_taxa_demais_porte_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	pr_taxa_maior_porte_w 		:= pr_taxa_maior_porte_w;
	pr_taxa_seq_maior_porte_w 	:= pr_taxa_seq_maior_porte_w;
	pr_taxa_demais_porte_w		:= pr_taxa_demais_porte_w;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into	
	qt_porte_anest_w,
	nr_seq_proc_taxa_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	if (qt_reg_w = 1) then
	
		update	procedimento_paciente
		set	tx_procedimento	= pr_taxa_maior_porte_w,
			vl_procedimento = (dividir(vl_procedimento,100) * pr_taxa_maior_porte_w),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_proc_taxa_w;
	
	elsif (qt_reg_w = 2) then
	
		update	procedimento_paciente
		set	tx_procedimento	= pr_taxa_seq_maior_porte_w,
			vl_procedimento = (dividir(vl_procedimento,100) * pr_taxa_seq_maior_porte_w),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_proc_taxa_w;
	
	elsif (qt_reg_w > 2) then
		
		update	procedimento_paciente
		set	tx_procedimento	= pr_taxa_demais_porte_w,
			vl_procedimento = (dividir(vl_procedimento,100) * pr_taxa_demais_porte_w),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_proc_taxa_w;
		
	end if;
	
	
	qt_reg_w := qt_reg_w + 1;
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_percentual_taxa_sala (nr_atendimento_p bigint, nr_cirurgia_p bigint, nm_usuario_p text) FROM PUBLIC;

