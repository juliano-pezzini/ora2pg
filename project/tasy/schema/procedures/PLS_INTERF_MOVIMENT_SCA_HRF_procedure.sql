-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_interf_moviment_sca_hrf ( nr_seq_lote_p ptu_mov_produto_lote.nr_sequencia%type, nm_arquivo_p text, ie_tipo_movimento_p text) AS $body$
DECLARE


-- VARIAVEIS ARQUIVO
nm_arq_w			varchar(30);
ie_identificador_w		varchar(1);
arq_texto_w			utl_file.file_type;
ds_local_w			varchar(255);
ds_erro_w			varchar(255);
file_exist_w			boolean;
size_w				bigint;
block_size_w			bigint;
nr_count_aux_w			integer		:= 0;

-- CABEÃ‡ALHO
ds_linha_header_w	varchar(4000);
nm_hospital_w		varchar(35);
dt_hr_atual_w		varchar(12);

-- DETALHE
ds_linha_subheader_w	varchar(8000);
cd_beneficiario_w	varchar(35);
nm_cliente_w		varchar(45);
nm_beneficiario_w	varchar(45);
dt_nascimento_w		varchar(8);
nr_zeros_w		varchar(8)	:= '00000000';
ds_branco_w		varchar(45)	:= '                                             ';
nr_telefoneComer_w	varchar(25)	:= '                         ';
ie_situacao_w		varchar(1);
dt_situacao_w		varchar(8)	:= '        ';
ie_tipoPessoa_w		varchar(1);
vl_repasse_w		varchar(20);

C01 CURSOR( nr_seq_lote_pc ptu_mov_produto_lote.nr_sequencia%type ) FOR
	SELECT	nr_sequencia nr_seq_mov_produto,
		rpad(substr(pls_obter_desc_coop_codigo(a.cd_unimed_origem), 1, 35), 35, ' ') nm_hospital,
		to_char(clock_timestamp(), 'ddmmyyyyhh24mi') dt_hr_atual
	from	ptu_movimentacao_produto a
	where	a.nr_seq_lote = nr_seq_lote_pc;

C02 CURSOR( nr_seq_mov_produto_pc ptu_movimentacao_produto.nr_sequencia%type ) FOR
	SELECT	nr_sequencia nr_seq_empresa,
		rpad(substr(ds_razao_social, 1, 45), 45, ' ') nm_cliente,
		CASE WHEN ie_tipo_pessoa=1 THEN  'J' WHEN ie_tipo_pessoa=2 THEN  'F'  ELSE ' ' END  ie_tipoPessoa
	from	ptu_mov_produto_empresa a
	where	a.nr_seq_mov_produto = nr_seq_mov_produto_pc;

C03 CURSOR( nr_seq_empresa_pc ptu_mov_produto_empresa.nr_sequencia%type ) FOR
	SELECT	nr_sequencia,
		lpad(substr(coalesce(a.cd_usuario_plano_benef, a.cd_usuario_plano), 1, 35), 35, '0') cd_beneficiario,
		rpad(substr(a.nm_beneficiario, 1, 45), 45, ' ') nm_beneficiario,
		to_char(a.dt_nascimento, 'ddmmyyyy') dt_nascimento,
		coalesce(a.ie_tipo_movimento, ' ') ie_situacao,
		lpad(substr(obter_valor_sem_virgula(a.vl_mensalidade), 1, 20), 20, '0') vl_repasse
	from	ptu_mov_produto_benef a
	where	a.nr_seq_empresa = nr_seq_empresa_pc;
BEGIN

for r_c01_w in C01( nr_seq_lote_p ) loop
	-- ARQUIVO
	begin
	SELECT * FROM obter_evento_utl_file(17, null, ds_local_w, ds_erro_w) INTO STRICT ds_local_w, ds_erro_w;
	exception
	when others then
		ds_local_w := null;
	end;

	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_w);
	end if;

	select	'REGIONAL_' || to_char(clock_timestamp(), 'ddmmyyyyhh24miss') || '.txt'
	into STRICT	nm_arq_w
	;

	utl_file.fgetattr(ds_local_w,nm_arq_w,file_exist_w,size_w,block_size_w);

	if (file_exist_w) then
		utl_file.fremove(ds_local_w,nm_arq_w);
	end if;

	begin
	arq_texto_w := utl_file.fopen(ds_local_w,nm_arq_w,'W');
	exception
	when others then
		ds_erro_w := obter_erro_utl_open(SQLSTATE);
		CALL wheb_mensagem_pck.exibir_mensagem_abort('Local: '||ds_local_w||' Nome arquivo: '||nm_arq_w||' '||ds_erro_w);
	end;

	select	r_c01_w.nm_hospital || r_c01_w.dt_hr_atual
	into STRICT	ds_linha_header_w
	;

	utl_file.put_line( arq_texto_w, ds_linha_header_w );
	utl_file.fflush( arq_texto_w );

	for r_c02_w in C02( r_c01_w.nr_seq_mov_produto ) loop
		for r_c03_w in C03( r_c02_w.nr_seq_empresa ) loop
			select	substr((r_c03_w.cd_beneficiario ||
				r_c02_w.nm_cliente ||
				r_c03_w.nm_beneficiario ||
				r_c03_w.dt_nascimento ||
				rpad(substr(a.ds_endereco, 1, 50), 50, ' ') ||
				nr_zeros_w ||
				ds_branco_w ||
				rpad(substr(a.ds_bairro, 1, 45), 45, ' ') ||
				rpad(substr(a.nm_municipio, 1, 35), 35, ' ') ||
				rpad(substr(a.sg_uf, 1, 2), 2, ' ') ||
				rpad(substr(a.cd_cep, 1, 11), 11, ' ') ||
				rpad(substr(a.nr_ddd || a.nr_fone, 1, 25), 25, ' ') ||
				nr_telefoneComer_w ||
				r_c03_w.ie_situacao ||
				dt_situacao_w ||
				r_c02_w.ie_tipoPessoa ||
				r_c03_w.vl_repasse), 1, 8000)
			into STRICT	ds_linha_subheader_w
			from	ptu_movimento_benef_compl a
			where	a.nr_seq_beneficiario = r_c03_w.nr_sequencia  LIMIT 1;

			utl_file.put_line( arq_texto_w, ds_linha_subheader_w );
			utl_file.fflush( arq_texto_w );
		end loop;
	end loop;
end loop;
utl_file.fclose(arq_texto_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_interf_moviment_sca_hrf ( nr_seq_lote_p ptu_mov_produto_lote.nr_sequencia%type, nm_arquivo_p text, ie_tipo_movimento_p text) FROM PUBLIC;

