-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_sus_bpa ( nr_seq_protocolo_p bigint, nr_folha_bpa_p bigint, nr_folha_bpi_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_sequencia_w		bigint;
nr_interno_conta_w		bigint;
nr_interno_conta_ww		bigint;
nr_atendimento_w		bigint;
cd_pessoa_fisica_w	varchar(10);
cd_pessoa_fisica_ww	varchar(10);
dt_mesano_referencia_w	timestamp;
qt_linhas_w		bigint		:= 1;
qt_folha_bpa_w		integer		:= 0;
nm_orgao_responsavel_w	varchar(30);
cd_orgao_responsavel_w	varchar(6);
cd_cgc_responsavel_w	varchar(14);
nm_orgao_destino_w	varchar(40);
ie_orgao_destino_w		varchar(1);
cd_cnes_hospital_w	integer;
cd_registro_w		smallint;
dt_procedimento_w		timestamp;
cd_cns_medico_exec_w	varchar(15);
cd_cns_medico_exec_ww	varchar(15)	:= '0';
cd_cbo_w		varchar(6);
cd_cbo_ww		varchar(6)	:= '0';
dt_atend_proc_w		timestamp;
nr_folha_bpa_w		bigint		:= 0;
nr_folha_bpa_con_w	smallint		:= 0;
nr_folha_bpa_c_geral_w	smallint		:= 0;
nr_folha_bpa_ind_w	integer		:= 0;
nr_linha_folha_w		bigint		:= 0;
nr_linha_folha_con_w	smallint		:= 0;
nr_linha_folha_ind_w	smallint		:= 0;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_cns_paciente_w	varchar(15);
ie_sexo_pac_w		varchar(1);
cd_municipio_ibge_w	varchar(6);
cd_cid_proc_w		varchar(4);
nr_idade_pac_w		smallint;
qt_procedimento_w		integer;
cd_carater_atend_w	varchar(2);
ds_autorizacao_w		varchar(13);
nm_paciente_w		varchar(30);
dt_nascimento_w		varchar(10);
ie_tipo_bpa_w		varchar(1);
qt_proc_consolidado_w	bigint	:= 0;
qt_proc_individua_w	bigint	:= 0;
cd_dominio_w		bigint	:= 0;
cd_medico_executor_w	varchar(10);
cd_raca_cor_w		varchar(2)	:= 99;
cd_cor_pele_w		varchar(40);
cd_cnes_hosp_proc_w	integer;
cd_cnes_hosp_proc_ww	integer;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
cd_estab_original_w	estabelecimento.cd_estabelecimento%type;
cd_exec_exp_w		varchar(10);
cd_cbo_exec_exp_w	varchar(6);
cd_cgc_prestador_w	varchar(14);
cd_cnes_prestador_w	integer;
ie_cnes_prestador_w	varchar(1);
ie_data_ref_proc_w		varchar(2) 	:= 'N';
ie_ordena_paciente_w	varchar(2) 	:= 'N';
ds_ordem_w		varchar(30);
ds_ordem2_w		varchar(30);
ds_ordem3_w		varchar(30);
ie_data_entrada_w		varchar(10)	:= 'N';
cd_etnia_w		varchar(4) 	:= '0000';
cd_nacionalidade_w	varchar(8) 	:= '   ';
cd_nacionalidade_ww	varchar(8);
nr_seq_regra_w		bigint;
ie_exclui_procedimento_w	varchar(1)	:= 'N';
qt_existe_proc_w		bigint	:= 0;
qt_existe_reg_pest_w	bigint	:= 0;
cd_cgc_prestador_exp_w	varchar(14);
cd_servico_w		varchar(3) := '0';
cd_serv_classif_w		varchar(3) := '0';
cd_equipe_w		varchar(12);
tp_logradouro_w		varchar(3);
cd_cep_w		varchar(8);
ds_logradouro_w		varchar(100);
ds_compl_logradouro_w	varchar(10);
nr_logradouro_w		varchar(5);
ds_bairro_w		varchar(30);
ddd_fone_pac_w		varchar(2);
nr_fone_pac_w		varchar(9);
nr_fone_completo_pac_w	varchar(11);
email_w			varchar(40);
cd_cnpj_fornecedor_w	sus_bpa_opme.cd_cnpj_fornecedor%type;
ie_versao_bpa_w		sus_parametros_bpa.ie_versao_bpa%type;
ie_agrupa_bpai_w	varchar(1) := 'N';
ie_remove_tplogr_end_w	sus_parametros_bpa.ie_remove_tplogr_end%type := 'N';
ds_tipo_logradouro_w	sus_tipo_logradouro.ds_tipo_logradouro%type;
qt_reg_w		bigint:=0;
qt_regra_exp_w	bigint:=0;
qt_proc_comp_w		bigint;

Ie_tiporeg_proc_cons_w	varchar(30):='';
Ie_tiporeg_proc_indv_w	varchar(30):='';
Ie_Proc_Compativel_w	varchar(1):='S';
Ie_Regra_Exporta_Proc_w	varchar(1):='N';
ie_continua_w		varchar(1);
ie_considerar_cns_ant_w	parametro_faturamento.ie_considerar_cns_ant%type;
nr_cartao_nac_sus_ant_w cnes_profissional.nr_cartao_nac_sus_ant%type;	
qt_reg_sem_inf_w	bigint := 0;
qt_reg_commit_w		bigint := 1000;
ie_tipo_convenio_w	convenio.ie_tipo_convenio%type;
ie_control_num_folha_bpi_w	sus_parametros_bpa.ie_control_num_folha_bpi%type;	
nr_folha_bpa_cont_w 		sus_control_folha_bpa_comp.nr_folha_bpi%type;	
nr_seq_control_folha_w		sus_control_folha_bpa_comp.nr_sequencia%type;	
ie_ordem_cbo_ap_medico_w	sus_parametros_bpa.ie_ordem_cbo_ap_medico%type := 'N';
nr_ultima_folha_bpa_w		w_susbpa_interf.nr_folha_bpa%type;
nr_ultima_linha_folha_w		w_susbpa_interf.nr_linha_folha%type;
qt_linha_export_w               w_susbpa_interf.qt_linha_export%type := 0;

qt_dados_w  bigint;

--Buscar todos procedimentos do protocolo
--Valdiar as regras apenas para cada procedimento
--Passar como parametro para o C01
C00 CURSOR FOR
	SELECT	c.cd_procedimento,
		c.ie_origem_proced,
		b.cd_estabelecimento
	FROM atendimento_paciente b, conta_paciente a, procedimento_paciente c
LEFT OUTER JOIN sus_valor_proc_paciente d ON (c.nr_sequencia = d.nr_sequencia)
WHERE a.nr_seq_protocolo	= nr_seq_protocolo_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta  and c.ie_origem_proced	= 7 and coalesce(c.cd_motivo_exc_conta::text, '') = '' and coalesce(d.ie_exp_bpa_doa_org, 'S')	= 'S' Group by	c.cd_procedimento,
			c.ie_origem_proced,
			b.cd_estabelecimento;

/* Obter dados do detalhe */

c01 CURSOR FOR
	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END  ds_ordem,
		w.Ie_Consolidado cd_registro,
		0 nr_interno_conta,
		0 nr_atendimento,
		' ' cd_pessoa_fisica,
		' ' cd_cns_medico_exec,
		to_date(null) dt_atend_proc,
		c.cd_procedimento,
		c.ie_origem_proced,
		' ' cd_cid_proc,
		s.nr_idade_pac_proc nr_idade_pac,
		sum(c.qt_procedimento) qt_procedimento,
		' ' cd_carater_atend,
		' ' ds_autorizacao,
		'C' ie_tipo_bpa,		
		' ' cd_medico_executor,
		s.cd_cbo_exp cd_cbo,
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7) cd_cnes_hosp_proc,
		cd_cgc_prestador,
		'0' cd_servico,
		'0' cd_serv_classif,
		'' cd_cnpj_fornecedor,
		b.cd_estabelecimento,
		w.Ie_Compativel,
		CASE WHEN ie_ordem_cbo_ap_medico_w='N' THEN ''  ELSE s.cd_cbo_exp END  ds_ordem2,
		CASE WHEN ie_ordem_cbo_ap_medico_w='N' THEN s.cd_cbo_exp  ELSE '' END  ds_ordem3,
		CASE WHEN ie_cnes_prestador_w='S' THEN cd_cgc_prestador  ELSE '' END  ds_ordem4
	FROM w_susbpa_info_proc w, protocolo_convenio p, atendimento_paciente b, conta_paciente a, procedimento_paciente c
LEFT OUTER JOIN sus_valor_proc_paciente s ON (c.nr_sequencia = s.nr_sequencia)
WHERE p.nr_seq_protocolo	= nr_seq_protocolo_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta and a.nr_seq_protocolo	= p.nr_seq_protocolo and w.nr_seq_protocolo	= p.nr_seq_protocolo and w.cd_procedimento	= c.cd_procedimento 	-- Foi removido o To_Char para melhorar a performance - OS 1372794
  and w.ie_origem_proced	= c.ie_origem_proced and w.cd_estabelecimento	= b.cd_estabelecimento  and c.ie_origem_proced	= 7 and coalesce(c.cd_motivo_exc_conta::text, '') = '' and w.Ie_Consolidado 	= '1' --sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 11) = 1
  and w.Ie_Regra_Exporta  = 'N' --nvl(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N'	
  and coalesce(s.ie_exp_bpa_doa_org, 'S')	= 'S' group by	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END ,
		 w.Ie_Consolidado,
		0, 0, ' ', ' ',
		to_date(null),
		c.cd_procedimento,
		c.ie_origem_proced,
		' ', ' ', ' ', '', ' ',
		s.nr_idade_pac_proc,
		' ', ' ', ' ', '', 'C', ' ', ' ', '',		
		s.cd_cbo_exp,
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7),
		cd_cgc_prestador,'0','0','','','','','','','','','','',
		b.cd_estabelecimento,
		w.Ie_Compativel, ''
	having(sum(c.qt_procedimento) > 0) /*Geliard OS381654 16/11/2011*/
	
union all

	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN substr(obter_nome_pf(b.cd_pessoa_fisica),1,30)  ELSE c.cd_procedimento END  ds_ordem,
		w.Ie_individual	 cd_registro,
		a.nr_interno_conta,
		b.nr_atendimento,
		b.cd_pessoa_fisica,
		s.cd_cns_medico_exec cd_cns_medico_exec,
		CASE WHEN ie_data_entrada_w='N' THEN c.dt_procedimento  ELSE b.dt_entrada END  dt_atend_proc,
		c.cd_procedimento,
		c.ie_origem_proced,
		c.cd_doenca_cid cd_cid_proc,
		s.nr_idade_pac_proc nr_idade_pac,
		c.qt_procedimento,
		coalesce(d.cd_carater_atendimento,ie_carater_inter_sus) cd_carater_atend,
		substr(coalesce(coalesce(d.nr_bpa,c.nr_doc_convenio),' '),1,13) ds_autorizacao,
		'I' ie_tipo_bpa,
		s.cd_medico_exec_exp cd_medico_executor,
		s.cd_cbo_exp cd_cbo,
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7) cd_cnes_hosp_proc,
		cd_cgc_prestador,
		coalesce(to_char((select coalesce(cd_servico,0) from sus_servico where nr_sequencia = c.nr_seq_servico)),'0') cd_servico,
		coalesce(to_char((select coalesce(cd_servico_classif,0) from sus_servico_classif where nr_sequencia = c.nr_seq_servico_classif)),'0') cd_serv_classif,
		e.cd_cnpj_fornecedor,
		b.cd_estabelecimento,
		w.Ie_Compativel,
		s.cd_cbo_exp ds_ordem2,
		'' ds_ordem3,
		'' ds_ordem4
	FROM w_susbpa_info_proc w, protocolo_convenio p, atendimento_paciente b, procedimento_paciente c
LEFT OUTER JOIN sus_bpa_opme e ON (c.nr_sequencia = e.nr_seq_procedimento)
LEFT OUTER JOIN sus_valor_proc_paciente s ON (c.nr_sequencia = s.nr_sequencia)
, conta_paciente a
LEFT OUTER JOIN sus_bpa_unif d ON (a.nr_interno_conta = d.nr_interno_conta)
WHERE p.nr_seq_protocolo	= nr_seq_protocolo_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta   and a.nr_seq_protocolo	= p.nr_seq_protocolo and w.nr_seq_protocolo	= p.nr_seq_protocolo and w.cd_procedimento	= c.cd_procedimento 	-- Foi removido o To_Char para melhorar a performance - OS 1372794
  and w.ie_origem_proced	= c.ie_origem_proced and w.cd_estabelecimento	= b.cd_estabelecimento  and c.ie_origem_proced	= 7 and coalesce(c.cd_motivo_exc_conta::text, '') = '' and w.Ie_individual		= '2' --sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C',12 ) = 2
  and w.Ie_Regra_Exporta 	= 'N' --nvl(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N'
  and coalesce(s.ie_exp_bpa_doa_org, 'S')	= 'S' order by	cd_cnes_hosp_proc,
		ds_ordem4,
		cd_cns_medico_exec,
		ds_ordem2,
		ds_ordem,
		cd_procedimento,
		ds_ordem3,
		nr_idade_pac;
		
c02 CURSOR FOR
	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END  ds_ordem,
		w.Ie_Consolidado cd_registro,
		0 nr_interno_conta,
		0 nr_atendimento,
		' ' cd_pessoa_fisica,
		' ' cd_cns_medico_exec,
		to_date(null) dt_atend_proc,
		c.cd_procedimento,
		c.ie_origem_proced,
		' ' cd_cid_proc,
		substr(sus_obter_idade_pac_bpa(b.cd_pessoa_fisica, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, 'A'),1,3) nr_idade_pac,
		sum(c.qt_procedimento) qt_procedimento,
		' ' cd_carater_atend,
		' ' ds_autorizacao,
		'C' ie_tipo_bpa,		
		' ' cd_medico_executor,
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),
						b.cd_estabelecimento,
						'N','S','N','C'),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) cd_cbo,
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7) cd_cnes_hosp_proc,
		cd_cgc_prestador,
		'0' cd_servico,
		'0' cd_serv_classif,
		'' cd_cnpj_fornecedor,
		b.cd_estabelecimento,
		w.Ie_Compativel,
		CASE WHEN ie_ordem_cbo_ap_medico_w='N' THEN ''  ELSE substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,						c.ie_origem_proced,						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),						b.cd_estabelecimento,						'N','S','N','C'),						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) END  ds_ordem2,
		CASE WHEN ie_ordem_cbo_ap_medico_w='N' THEN substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,						c.ie_origem_proced,						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),						b.cd_estabelecimento,						'N','S','N','C'),						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6)  ELSE '' END  ds_ordem3,
		'' ds_ordem4
	FROM w_susbpa_info_proc w, protocolo_convenio p, atendimento_paciente b, conta_paciente a, procedimento_paciente c
LEFT OUTER JOIN sus_valor_proc_paciente s ON (c.nr_sequencia = s.nr_sequencia)
WHERE p.nr_seq_protocolo	= nr_seq_protocolo_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta and a.nr_seq_protocolo	= p.nr_seq_protocolo and w.nr_seq_protocolo	= p.nr_seq_protocolo and w.cd_procedimento	= c.cd_procedimento 	-- Foi removido o To_Char para melhorar a performance - OS 1372794
  and w.ie_origem_proced	= c.ie_origem_proced and w.cd_estabelecimento	= b.cd_estabelecimento and c.ie_origem_proced	= 7 and coalesce(c.cd_motivo_exc_conta::text, '') = '' and w.Ie_Consolidado 	= '1' --sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C', 11) = 1
  and w.Ie_Regra_Exporta  	= 'N' --nvl(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N'		
  and coalesce(s.ie_exp_bpa_doa_org, 'S')	= 'S' group by	CASE WHEN ie_ordena_paciente_w='S' THEN ''  ELSE c.cd_procedimento END ,
		 w.Ie_Consolidado,
		0, 0, ' ', ' ',
		to_date(null),
		c.cd_procedimento,
		c.ie_origem_proced,
		' ', ' ', ' ', '', ' ',
		substr(sus_obter_idade_pac_bpa(b.cd_pessoa_fisica, c.cd_procedimento, c.ie_origem_proced, c.dt_procedimento, 'A'),1,3),
		' ', ' ', ' ', '', 'C', ' ', ' ', '',		
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),
						b.cd_estabelecimento,
						'N','S','N','C'),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6),
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7),
		cd_cgc_prestador,'0','0','','','','','','','','','','',
		b.cd_estabelecimento,
		w.Ie_Compativel
	having(sum(c.qt_procedimento) > 0) /*Geliard OS381654 16/11/2011*/
	
union all

	SELECT	CASE WHEN ie_ordena_paciente_w='S' THEN substr(obter_nome_pf(b.cd_pessoa_fisica),1,30)  ELSE c.cd_procedimento END  ds_ordem,
		w.Ie_individual	 cd_registro,
		a.nr_interno_conta,
		b.nr_atendimento,
		b.cd_pessoa_fisica,
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						c.cd_cbo,
						b.cd_estabelecimento,
						'N','S','N','CNS'),obter_dados_pf(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),'CNS')),1,15) cd_cns_medico_exec,
		CASE WHEN ie_data_entrada_w='N' THEN c.dt_procedimento  ELSE b.dt_entrada END  dt_atend_proc,
		c.cd_procedimento,
		c.ie_origem_proced,
		c.cd_doenca_cid cd_cid_proc,
		substr(obter_idade_pf(b.cd_pessoa_fisica, c.dt_procedimento, 'A'),1,3) nr_idade_pac,
		c.qt_procedimento,
		coalesce(d.cd_carater_atendimento,ie_carater_inter_sus) cd_carater_atend,
		substr(coalesce(coalesce(d.nr_bpa,c.nr_doc_convenio),' '),1,13) ds_autorizacao,
		'I' ie_tipo_bpa,
		coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						c.cd_cbo,
						b.cd_estabelecimento,
						'N','S','N','M'),coalesce(c.cd_medico_executor,c.cd_pessoa_fisica)) cd_medico_executor,
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),
						b.cd_estabelecimento,
						'N','S','N','C'),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) cd_cbo,
		substr(sus_obter_substituir_cnes(cd_cnes_hospital_w, c.cd_setor_atendimento, b.cd_estabelecimento,b.ie_tipo_atendimento),1,7) cd_cnes_hosp_proc,
		cd_cgc_prestador,
		coalesce(sus_obter_dados_servico(c.nr_seq_servico,'C'),'0') cd_servico,
		coalesce(to_char(sus_obter_desc_classif(c.nr_seq_servico_classif,null,'C')),'0') cd_serv_classif,
		e.cd_cnpj_fornecedor,
		b.cd_estabelecimento,
		w.Ie_Compativel,
		substr(coalesce(sus_obter_regra_exp_exec(c.cd_procedimento,
						c.ie_origem_proced,
						coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0)),
						b.cd_estabelecimento,
						'N','S','N','C'),
						coalesce(c.cd_cbo, sus_obter_cbo_medico(coalesce(c.cd_medico_executor,c.cd_pessoa_fisica),c.cd_procedimento,clock_timestamp(),0))),1,6) ds_ordem2,
		'' ds_ordem3,
		'' ds_ordem4
	FROM w_susbpa_info_proc w, protocolo_convenio p, atendimento_paciente b, procedimento_paciente c
LEFT OUTER JOIN sus_bpa_opme e ON (c.nr_sequencia = e.nr_seq_procedimento)
LEFT OUTER JOIN sus_valor_proc_paciente s ON (c.nr_sequencia = s.nr_sequencia)
, conta_paciente a
LEFT OUTER JOIN sus_bpa_unif d ON (a.nr_interno_conta = d.nr_interno_conta)
WHERE p.nr_seq_protocolo	= nr_seq_protocolo_p and a.nr_atendimento	= b.nr_atendimento and a.nr_interno_conta	= c.nr_interno_conta   and a.nr_seq_protocolo	= p.nr_seq_protocolo and w.nr_seq_protocolo	= p.nr_seq_protocolo and w.cd_procedimento	= c.cd_procedimento 	-- Foi removido o To_Char para melhorar a performance - OS 1372794
  and w.ie_origem_proced	= c.ie_origem_proced and w.cd_estabelecimento	= b.cd_estabelecimento and c.ie_origem_proced	= 7 and coalesce(c.cd_motivo_exc_conta::text, '') = '' and w.Ie_individual		= '2' --sus_obter_tiporeg_proc(c.cd_procedimento, c.ie_origem_proced, 'C',12 ) = 2
  and w.Ie_Regra_Exporta 	= 'N' --nvl(sus_obter_regra_expbpa(c.nr_sequencia),'N') = 'N'
  and coalesce(s.ie_exp_bpa_doa_org, 'S')	= 'S' order by	cd_cnes_hosp_proc,
		cd_cns_medico_exec,
		ds_ordem2,
		ds_ordem,
		cd_procedimento,
		ds_ordem3,
		nr_idade_pac;	
		
type 		fetch_array is table of c01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_c01_w			vetor;
BEGIN

qt_linha_export_w := 0;
ie_ordena_paciente_w := obter_param_usuario(1125, 52, obter_perfil_ativo, nm_usuario_p, 0, ie_ordena_paciente_w);
ie_data_ref_proc_w := obter_param_usuario(1125, 59, obter_perfil_ativo, nm_usuario_p, 0, ie_data_ref_proc_w);
ie_data_entrada_w	:= coalesce(obter_valor_param_usuario(1125,73,obter_perfil_ativo,nm_usuario_p,0),'N');
ie_agrupa_bpai_w	:= coalesce(obter_valor_param_usuario(1125,162,obter_perfil_ativo,nm_usuario_p,0),'N');
begin
qt_reg_commit_w		:= coalesce((obter_valor_param_usuario(1125,167,obter_perfil_ativo,nm_usuario_p,0))::numeric ,1000);
exception
when others then
	qt_reg_commit_w := 1000;
end;

begin
select	count(1)
into STRICT	qt_reg_sem_inf_w
FROM conta_paciente b, procedimento_paciente a
LEFT OUTER JOIN sus_valor_proc_paciente s ON (a.nr_sequencia = s.nr_sequencia)
WHERE a.nr_interno_conta = b.nr_interno_conta and b.nr_seq_protocolo = nr_seq_protocolo_p  and coalesce(a.cd_motivo_exc_conta::text, '') = '' and a.ie_origem_proced = 7 and (((coalesce(s.cd_cns_medico_exec,'X') = 'X') or (coalesce(s.cd_medico_exec_exp ,'X') = 'X') or (coalesce(s.cd_cbo_exp ,'X') = 'X') or (coalesce(s.nr_idade_pac_proc,0) = 0)) or
	((coalesce(s.cd_registro_proc,0) <> 2) and (coalesce(s.nr_idade_pac_proc,0) > 0)))   LIMIT 1;
exception
when others then
	qt_reg_sem_inf_w := 0;
end;

if (qt_reg_sem_inf_w > 0) then
	CALL atualiza_sus_valor_proc_pac(nr_seq_protocolo_p,nm_usuario_p);	
end if;

cd_estab_original_w := wheb_usuario_pck.get_cd_estabelecimento;

select max(coalesce(ie_control_num_folha_bpi,'N'))
into STRICT ie_control_num_folha_bpi_w
from sus_parametros_bpa
where cd_estabelecimento = cd_estab_original_w;


if (coalesce(ie_data_ref_proc_w,'N') = 'S') then
	begin
		if (coalesce(ie_control_num_folha_bpi_w,'N') = 'N') then
			CALL gerar_interf_sus_bpa_ref_proc(	nr_seq_protocolo_p, nr_folha_bpa_p, nr_folha_bpi_p, nm_usuario_p);
		else	
			CALL gerar_interf_sus_bpa_ref_proc(	nr_seq_protocolo_p, nr_folha_bpa_p, 0, nm_usuario_p);
		end if;
	end;						
else
	begin

	/* Limpar tabela */

	delete	from w_susbpa_interf
	where	nr_seq_protocolo	= nr_seq_protocolo_p;

	/* Obter dados do cabecalho */

	begin
	select	a.dt_mesano_referencia,
		substr(obter_nome_estabelecimento(b.cd_estabelecimento),1,30),
		b.cd_orgao_responsavel,
		substr(obter_cgc_estabelecimento(b.cd_estabelecimento),1,14),
		b.nm_orgao_destino,
		b.ie_orgao_destino,
		sus_obter_substituir_cnes(b.cd_cnes_hospital, a.cd_setor_atendimento, b.cd_estabelecimento,0),
		b.cd_estabelecimento,
		b.ie_cnes_prestador,
		b.ie_versao_bpa,
		coalesce(b.ie_remove_tplogr_end,'N'),
		coalesce(ie_ordem_cbo_ap_medico,'N')
	into STRICT	dt_mesano_referencia_w,
		nm_orgao_responsavel_w,
		cd_orgao_responsavel_w,
		cd_cgc_responsavel_w,
		nm_orgao_destino_w,
		ie_orgao_destino_w,
		cd_cnes_hospital_w,
		cd_estabelecimento_w,
		ie_cnes_prestador_w,
		ie_versao_bpa_w,
		ie_remove_tplogr_end_w,
		ie_ordem_cbo_ap_medico_w
	from	sus_parametros_bpa	b,
		protocolo_convenio	a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p
	and	a.cd_estabelecimento	= b.cd_estabelecimento;
	exception
		when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204006);
		/*Nao foram encontrados dados na pasta Cadastros da funcao SUS BPA. Estas informacoes sao necessarias para a exportacao.*/

	end;

        delete  from sus_control_folha_bpa_comp
        where	trunc(dt_mesano_referencia,'month') = trunc(dt_mesano_referencia_w,'month')
        and     nr_seq_protocolo	= nr_seq_protocolo_p;

	/* Obter o valor do campo DOMINIO, o calculo e feito pelo MOD da soma dos codigos dos procedimentos com suas respectivas quantidades mais 1111 */

	select	mod((sum(c.cd_procedimento) + sum(c.qt_procedimento)),1111) + 1111
	into STRICT	cd_dominio_w
	from	procedimento_paciente	c,
		atendimento_paciente	b,
		conta_paciente		a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p
	and	a.nr_atendimento	= b.nr_atendimento
	and	a.nr_interno_conta	= c.nr_interno_conta
	and	c.ie_origem_proced	= 7;

	select	nextval('w_susbpa_interf_seq')
	into STRICT	nr_sequencia_w
	;

	/* Inserir o registro do cabecalho */

	insert into w_susbpa_interf(
			nr_sequencia,
			nr_seq_protocolo,
			nr_interno_conta,
			nr_atendimento,
			cd_pessoa_fisica,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_registro,
			dt_mesano_referencia,
			qt_linhas,
			qt_folha_bpa,
			nm_orgao_responsavel,
			cd_orgao_responsavel,
			cd_cgc_responsavel,
			nm_orgao_destino,
			ie_orgao_destino,
			ds_versao,
			ie_cabecalho,
			cd_dominio,
			ie_versao_bpa)
		values (	nr_sequencia_w,
			nr_seq_protocolo_p,
			nr_interno_conta_w,
			nr_atendimento_w,
			cd_pessoa_fisica_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			'*BPA*',
			dt_mesano_referencia_w,
			qt_linhas_w,
			qt_folha_bpa_w,
			nm_orgao_responsavel_w,
			cd_orgao_responsavel_w,
			cd_cgc_responsavel_w,
			nm_orgao_destino_w,
			ie_orgao_destino_w,
			'*BPABeta4*',
			'C',
			substr(cd_dominio_w,1,4),
			ie_versao_bpa_w);

	commit;
	
	/* Contador de procedimentos consolidados */

	Begin	
	select	count(1)
	into STRICT	qt_proc_consolidado_w
	from	sus_procedimento_registro	c,
		procedimento_paciente		b,
		conta_paciente 			a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p
	and	a.nr_interno_conta 	= b.nr_interno_conta
	and	b.cd_procedimento	= c.cd_procedimento
	and	b.ie_origem_proced	= c.ie_origem_proced
	and	c.cd_registro		= 1
	and	coalesce(sus_obter_reg_proc_bpa(c.cd_procedimento,c.ie_origem_proced),c.cd_registro) = 1  LIMIT 1;
	
	Exception
		when others then
			qt_proc_consolidado_w:=0;
	End;
	
	if (qt_proc_consolidado_w	> 0) then
		nr_folha_bpa_con_w	:= 1;
	end if;

	if (nr_folha_bpa_p > 0) then
		if	((nr_folha_bpa_p + 1) < 1000) then
			nr_folha_bpa_con_w	:= nr_folha_bpa_p + 1;
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(204007,'NR_FOLHA_BPA_CON_P='||nr_folha_bpa_con_w||';NR_FOLHA_BPA_P='||nr_folha_bpa_p);
			/*Numero maximo de folhas excedido! 
			nr_folha_bpa_con_w: #@nr_folha_bpa_con_p#@ nr_folha_bpa_p:#@nr_folha_bpa_p#@	
			Verifique a quantidade de linhas no banco do BPAMag, ou efetue a limpeza do mesmo para geracao do arquivo.o para geracao do arquivo.*/
		end if;
	end if;
	
	if (nr_folha_bpi_p > 0) then
		nr_folha_bpa_ind_w 	:= nr_folha_bpi_p;
	end if;

	if (ie_control_num_folha_bpi_w = 'S') then
		nr_folha_bpa_ind_w := 0;
	end if;
	
	Delete from W_SusBpa_Info_Proc Where Nr_Seq_Protocolo = Nr_Seq_Protocolo_p;	
	
	Commit;	
	
	qt_reg_w := 0;

	CALL wheb_usuario_pck.set_cd_estabelecimento(cd_estabelecimento_w);

	For R0 In C00 Loop 
		begin
		
		Ie_tiporeg_proc_indv_w := sus_obter_tiporeg_proc(R0.cd_procedimento, R0.ie_origem_proced, 'C', 12);
		Ie_tiporeg_proc_cons_w := sus_obter_tiporeg_proc(R0.cd_procedimento, R0.ie_origem_proced, 'C', 11);		
		
		begin
		select	'N'
		into STRICT	Ie_Proc_Compativel_w
		from	sus_bpa_proc_compativel	b
		where	b.cd_proc_faturado	= r0.cd_procedimento
		and	b.ie_origem_faturado	= r0.ie_origem_proced  LIMIT 1;				
		exception
		when others then
			Ie_Proc_Compativel_w := 'S';
		end;

		Select	count(1)
		Into STRICT	qt_regra_exp_w
		From 	sus_regra_exportacao_bpa
		Where 	cd_estabelecimento = R0.cd_estabelecimento;	
	
		If (qt_regra_exp_w > 0) Then
			Ie_Regra_Exporta_Proc_w:=sus_obter_regra_expbpa_proc(R0.cd_procedimento,R0.ie_origem_proced,R0.cd_estabelecimento);
		Else
			Ie_Regra_Exporta_Proc_w:='N';
		End If;
			   		
		Insert Into W_SusBpa_Info_Proc(Nr_Sequencia,
						Nr_Seq_Protocolo,
						Cd_Procedimento,
						Ie_Origem_Proced,
						Ie_Individual,
						Ie_Consolidado,
						Ie_Compativel,
						Ie_Regra_Exporta,
						Cd_Estabelecimento)
				Values (	nextval('w_susbpa_info_proc_seq'),
						Nr_Seq_Protocolo_p,
						R0.Cd_procedimento,
						R0.Ie_Origem_Proced,
						Ie_tiporeg_proc_indv_w,
						Ie_tiporeg_proc_cons_w,
						Ie_Proc_Compativel_w,
						Ie_Regra_Exporta_Proc_w,
						R0.cd_estabelecimento);
						
		qt_reg_w := qt_reg_w + 1;						
		if (qt_reg_w = qt_reg_commit_w) then
			qt_reg_w := 0;
			commit;
		end if;
						
		end;		
	End Loop;

	CALL wheb_usuario_pck.set_cd_estabelecimento(cd_estab_original_w);	
	
	if (qt_reg_w > 0) then
		commit;
	end if;
		
	select Obter_Tipo_Convenio(cd_convenio)
	into STRICT ie_tipo_convenio_w
	from protocolo_convenio
	where nr_seq_protocolo = nr_seq_protocolo_p;
	
	if (ie_tipo_convenio_w in (3,10)) then
		begin
		open c01;
		loop
		fetch c01 bulk collect into s_array limit 100;
			vetor_c01_w(i) := s_array;
			i := i + 1;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		end loop;
		close c01;	
		end;
	else
		begin
		open c02;
		loop
		fetch c02 bulk collect into s_array limit 100;
			vetor_c01_w(i) := s_array;
			i := i + 1;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		end loop;
		close c02;	
		end;
	end if;

	
	qt_reg_w := 0;

	for i in 1..vetor_c01_w.count loop
	 	begin
		s_array := vetor_c01_w(i);
		for z in 1..s_array.count loop
			begin
			ie_continua_w	:= 'S';
			
			qt_reg_w := qt_reg_w + 1;
		

			if (coalesce(s_array[z].Ie_Compativel,'S') = 'N') then
			
				/* OS 859085 - Tratar regra de proc compativel, aqui ja foi verificado se o procedimento esta na regra como proc faturado*/

				begin				
				select	1
				into STRICT	qt_proc_comp_w
				from	sus_bpa_proc_compativel	b,
					procedimento_paciente	a
				where	b.cd_proc_faturado	= s_array[z].cd_procedimento
				and	b.ie_origem_faturado	= s_array[z].ie_origem_proced
				and	a.cd_procedimento	= b.cd_proc_compativel
				and	a.ie_origem_proced	= b.ie_origem_compativel
				and	a.nr_interno_conta	= s_array[z].nr_interno_conta
				and	a.nr_atendimento	= s_array[z].nr_atendimento  LIMIT 1;				
				exception
				when others then
					qt_proc_comp_w	:= 0;
				end;
				
				if (qt_proc_comp_w = 1) then				
					ie_continua_w	:= 'N';
				end if;
			
			end if;

			if (ie_continua_w = 'S') then
				
				if (length(s_array[z].cd_cid_proc) > 4) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(318948,	'CONTA='||s_array[z].nr_interno_conta||';CID='||s_array[z].cd_cid_proc||
											';PROC='||s_array[z].cd_procedimento);
				end if;

				ds_ordem_w			:= s_array[z].ds_ordem;
				cd_registro_w		:= s_array[z].cd_registro;
				nr_interno_conta_w	:= s_array[z].nr_interno_conta;
				nr_atendimento_w	:= s_array[z].nr_atendimento;
				cd_pessoa_fisica_w	:= s_array[z].cd_pessoa_fisica;
				cd_cns_medico_exec_w	:= s_array[z].cd_cns_medico_exec;
				dt_atend_proc_w		:= s_array[z].dt_atend_proc;
				cd_procedimento_w	:= s_array[z].cd_procedimento;
				ie_origem_proced_w	:= s_array[z].ie_origem_proced;				
				cd_cid_proc_w		:= s_array[z].cd_cid_proc;
				nr_idade_pac_w		:= somente_numero(s_array[z].nr_idade_pac);
				qt_procedimento_w	:= s_array[z].qt_procedimento;
				cd_carater_atend_w	:= s_array[z].cd_carater_atend;
				ds_autorizacao_w	:= s_array[z].ds_autorizacao;								
				ie_tipo_bpa_w		:= s_array[z].ie_tipo_bpa;
				cd_medico_executor_w:= s_array[z].cd_medico_executor;				
				cd_cbo_w			:= s_array[z].cd_cbo;
				cd_cnes_hosp_proc_w	:= s_array[z].cd_cnes_hosp_proc;
				cd_cgc_prestador_w	:= s_array[z].cd_cgc_prestador;
				cd_servico_w		:= s_array[z].cd_servico;
				cd_serv_classif_w	:= s_array[z].cd_serv_classif;
				cd_cnpj_fornecedor_w:= s_array[z].cd_cnpj_fornecedor;
				
				
				/* Obter dados da BPA Unificada */

				if (ie_tipo_bpa_w	= 'I') then
					
					if (coalesce(cd_pessoa_fisica_w,'X') <> coalesce(cd_pessoa_fisica_ww,'X')) then
						
						cd_pessoa_fisica_ww := cd_pessoa_fisica_w;

						Begin
						select	substr(p.nr_cartao_nac_sus,1,15) nr_cartao_nac_sus,
							substr(p.ie_sexo,1,1) ie_sexo_pac,
							substr(c.cd_municipio_ibge,1,6),
							substr(p.cd_nacionalidade,1,3) cd_nacionalidade,
							substr(p.nm_pessoa_fisica,1,30),
							to_char(dt_nascimento,'DD/MM/YYYY'),
							substr(c.cd_tipo_logradouro,1,3) tp_logradouro,
							substr(cd_cep,1,8) cd_cep,
							substr(sus_elimina_caracteres_esp(elimina_acentos(upper(c.ds_endereco),'S')),1,100) ds_logradouro,
							substr(sus_elimina_caracteres_esp(elimina_acentos(upper(c.ds_complemento),'S')),1,10) ds_compl_logradouro,
							upper(substr(c.nr_endereco,1,5)) nr_logradouro,							
							substr(sus_elimina_caracteres_esp(elimina_acentos(upper(c.ds_bairro),'S')),1,30) ds_bairro,
							substr(c.ds_email,1,40) email
						into STRICT	cd_cns_paciente_w,
							ie_sexo_pac_w,
							cd_municipio_ibge_w,
							cd_nacionalidade_ww,
							nm_paciente_w,
							dt_nascimento_w,
							tp_logradouro_w,
							cd_cep_w,
							ds_logradouro_w,
							ds_compl_logradouro_w,
							nr_logradouro_w,
							ds_bairro_w,
							email_w			
						FROM pessoa_fisica p
LEFT OUTER JOIN compl_pessoa_fisica c ON (p.cd_pessoa_fisica = c.cd_pessoa_fisica)
WHERE p.cd_pessoa_fisica = cd_pessoa_fisica_w  and ((c.ie_tipo_complemento = 1) or (coalesce(c.ie_tipo_complemento::text, '') = ''));						
						exception
							when others then
							cd_cns_paciente_w:=cd_cns_paciente_w;
						end;	

						nr_fone_completo_pac_w := sus_obter_telefone_export(cd_pessoa_fisica_w);
						ddd_fone_pac_w := substr(nr_fone_completo_pac_w,1,2);
						nr_fone_pac_w := substr(nr_fone_completo_pac_w,3,9);
						cd_cor_pele_w := sus_obter_cor_pele(cd_pessoa_fisica_w, 'C');
						cd_raca_cor_w := lpad(cd_cor_pele_w,2,'0');

						cd_etnia_w := null;
						if (cd_cor_pele_w = '5') then
							cd_etnia_w := lpad(sus_obter_etnia(cd_pessoa_fisica_w, 'C'),4,'0');
						end if;
					end if;

					if (nr_interno_conta_w <> nr_interno_conta_ww) then
						nr_interno_conta_ww := nr_interno_conta_w;
						begin
						select	coalesce(nr_bpa, ''),
							coalesce(cd_carater_atendimento, cd_carater_atend_w)
						into STRICT	ds_autorizacao_w,
							cd_carater_atend_w
						from	sus_bpa_unif
						where	nr_interno_conta	= nr_interno_conta_w;
						exception
							when others then
							ds_autorizacao_w		:= ds_autorizacao_w;
							cd_carater_atend_w	:= cd_carater_atend_w;
						end;

						cd_carater_atend_w	:= lpad(cd_carater_atend_w,2,'0');
					end if;
					
					begin
					select	coalesce(max(cd_externo),cd_nacionalidade_ww)
					into STRICT	cd_nacionalidade_ww
					from	nacionalidade
					where	cd_nacionalidade = cd_nacionalidade_ww
					and	cd_nacionalidade <> '10';
					exception
					when others then
						cd_nacionalidade_ww := cd_nacionalidade_ww;
					end;
					
					cd_nacionalidade_w := lpad(cd_nacionalidade_ww,3,'0');
				end if;

				if (ie_cnes_prestador_w = 'S') then
					cd_cgc_prestador_exp_w := sus_obter_prest_exp(cd_procedimento_w, ie_origem_proced_w, cd_cgc_prestador_w, cd_estabelecimento_w, 'N', 'S', 'N', cd_cgc_prestador_exp_w);

					if (cd_cgc_prestador_exp_w IS NOT NULL AND cd_cgc_prestador_exp_w::text <> '') then
						cd_cgc_prestador_w	:= cd_cgc_prestador_exp_w;
					end if;

					if (cd_cgc_prestador_w		<> cd_cgc_responsavel_w) then
						begin
						select	coalesce(max(cd_cnes),0)
						into STRICT	cd_cnes_prestador_w
						from	pessoa_juridica
						where	cd_cgc	= cd_cgc_prestador_w;
						exception
						when others then
							cd_cnes_prestador_w := 0;
						end;
						if (coalesce(cd_cnes_prestador_w,0) > 0) then
							cd_cnes_hosp_proc_w	:= cd_cnes_prestador_w;
						end if;
					end if;
				end if;

				--sus_obter_exec_exp_aih(cd_procedimento_w, 7, cd_medico_executor_w, cd_cbo_w, cd_estabelecimento_w, 'N', 'S', 'N', cd_exec_exp_w, cd_cbo_exec_exp_w);
			
				--OS Angelina Caron, problema para agrupar consolidados com mesmo cbo da regra de exportacao. OS 316031
				
				qt_existe_proc_w := 0;
				
				if (ie_tipo_bpa_w = 'C') then
					begin
					
					select 	count(1)
					into STRICT	qt_existe_proc_w
					from	w_susbpa_interf
					where	cd_procedimento = cd_procedimento_w
					and	ie_tipo_bpa	= 'C'
					and	cd_cbo		= cd_cbo_w
					and	cd_ups		= cd_cnes_hosp_proc_w
					and	nr_idade_pac	= nr_idade_pac_w
					and	nr_seq_protocolo = nr_seq_protocolo_p
					and	nm_usuario_nrec	 = nm_usuario_p  LIMIT 1;

					if (qt_existe_proc_w > 0) then
						begin
						
						update	w_susbpa_interf
						set	qt_procedimento = qt_procedimento + qt_procedimento_w
						where	cd_procedimento = cd_procedimento_w
						and	cd_cbo = cd_cbo_w
						and	cd_ups		= cd_cnes_hosp_proc_w
						and	nr_idade_pac	= nr_idade_pac_w
						and	ie_tipo_bpa = 'C'
						and	nr_seq_protocolo = nr_seq_protocolo_p
						and	nm_usuario_nrec	 = nm_usuario_p;
						
						if (qt_reg_w = qt_reg_commit_w) then
							qt_reg_w := 0;
							commit;
						end if;
						
						end;
					end if;
					
					end;
				end if;				
				
				if (coalesce(ie_agrupa_bpai_w,'N') = 'S') and (ie_tipo_bpa_w = 'I') then
					begin				
					
					select 	count(1)
					into STRICT	qt_existe_proc_w
					from	w_susbpa_interf
					where	cd_procedimento		= cd_procedimento_w
					and	ie_tipo_bpa		= 'I'
					and	cd_cns_medico_exec	= cd_cns_medico_exec_w
					and	cd_cbo			= cd_cbo_w
					and	cd_ups			= cd_cnes_hosp_proc_w
					and	cd_pessoa_fisica	= cd_pessoa_fisica_w
					and	coalesce(ds_autorizacao,'X') = coalesce(ds_autorizacao_w,'X')
					and	nr_seq_protocolo 	= nr_seq_protocolo_p
					and	nm_usuario_nrec	 	= nm_usuario_p  LIMIT 1;
					
					if (qt_existe_proc_w > 0) then
						begin
						
						update	w_susbpa_interf
						set	qt_procedimento = qt_procedimento + qt_procedimento_w
						where	cd_procedimento		= cd_procedimento_w
						and	ie_tipo_bpa		= 'I'
						and	cd_cns_medico_exec	= cd_cns_medico_exec_w
						and	cd_cbo			= cd_cbo_w
						and	cd_ups			= cd_cnes_hosp_proc_w
						and	cd_pessoa_fisica	= cd_pessoa_fisica_w
						and	coalesce(ds_autorizacao,'X') = coalesce(ds_autorizacao_w,'X')
						and	nr_seq_protocolo 	= nr_seq_protocolo_p
						and	nm_usuario_nrec	 	= nm_usuario_p;		

						if (qt_reg_w = qt_reg_commit_w) then							
							qt_reg_w := 0;
							commit;
						end if;
						
						end;
					end if;
					
					end;
				end if;

				if (qt_existe_proc_w = 0) then
					begin
					if (ie_tipo_bpa_w	= 'C') then
						begin
						cd_medico_executor_w	:= ' ';
						end;
					end if;

					begin
					select	coalesce(ie_considerar_cns_ant, 'N')
					into STRICT	ie_considerar_cns_ant_w
					from	parametro_faturamento
					where	cd_estabelecimento = cd_estab_original_w;
					exception
						when others then
						ie_considerar_cns_ant_w :='N';
					end;
					
					if (ie_considerar_cns_ant_w = 'S') then
						begin
							select	coalesce(b.nr_cartao_nac_sus_ant, ' ')
							into STRICT	nr_cartao_nac_sus_ant_w
							from 	cnes_profissional 	b
							where	b.cd_pessoa_fisica = coalesce(cd_medico_executor_w,0)  LIMIT 1;
							exception
						when others then
							nr_cartao_nac_sus_ant_w := ' ';
						end;
						if (nr_cartao_nac_sus_ant_w <> ' ') then
							cd_cns_medico_exec_w := nr_cartao_nac_sus_ant_w;
						end if;
						
						begin
							select	coalesce(b.nr_cartao_nac_sus_ant, ' ')
							into STRICT	nr_cartao_nac_sus_ant_w
							from 	cnes_profissional 	b
							where	b.cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w,0)  LIMIT 1;
							exception
						when others then
							nr_cartao_nac_sus_ant_w := ' ';
						end;
						if (nr_cartao_nac_sus_ant_w <> ' ') then
							cd_cns_paciente_w := nr_cartao_nac_sus_ant_w;
						end if;
					end if;
					
					/* Cada folha possui 99 linhas, se atingir esse limite ou ser outro profissional BPI deve ser criada uma nova folha */

					if (ie_tipo_bpa_w	= 'C') then
						if (nr_linha_folha_w	= 20) then
							nr_linha_folha_con_w	:= 0;
							nr_folha_bpa_con_w	:= nr_folha_bpa_con_w + 1;
						end if;
						if (cd_cnes_hosp_proc_ww 	<> cd_cnes_hosp_proc_w)	then
							begin
							select	coalesce(max(a.nr_folha_bpa),0)	
							into STRICT	nr_ultima_folha_bpa_w
							from	w_susbpa_interf a
							where	a.nr_seq_protocolo = nr_seq_protocolo_p
							and	a.ie_tipo_bpa = 'C'
							and	a.cd_ups = cd_cnes_hosp_proc_w;
							
							if (nr_ultima_folha_bpa_w > 0) then
								begin
								select	coalesce(max(a.nr_linha_folha),0)
								into STRICT	nr_ultima_linha_folha_w
								from	w_susbpa_interf a
								where	a.nr_seq_protocolo = nr_seq_protocolo_p
								and	a.ie_tipo_bpa = 'C'
								and	a.cd_ups = cd_cnes_hosp_proc_w;
								
								if (nr_ultima_linha_folha_w < 20) then
									begin
									nr_linha_folha_con_w	:= nr_ultima_linha_folha_w;
									nr_folha_bpa_con_w	:= nr_ultima_folha_bpa_w;
									end;
								else
									begin
									nr_linha_folha_con_w	:= 0;
									nr_folha_bpa_con_w	:= nr_ultima_folha_bpa_w + 1;
									end;	
								end if;
								end;
							else
								begin		
								nr_linha_folha_con_w	:= 0;
								nr_folha_bpa_con_w	:= 1;
								end;
							end if;
							end;
						end if;
						
						if (nr_linha_folha_w	= 20) or (cd_cnes_hosp_proc_ww 	<> cd_cnes_hosp_proc_w) then
							nr_folha_bpa_c_geral_w	:= nr_folha_bpa_c_geral_w + 1;
						end if;
					elsif (ie_tipo_bpa_w	= 'I') then	
						if (coalesce(ie_control_num_folha_bpi_w,'N') = 'S') then													
							begin										
							if (cd_cns_medico_exec_w <> cd_cns_medico_exec_ww)  or (cd_cbo_w <> cd_cbo_ww) then
								nr_folha_bpa_cont_w := 0;							
								
								if (coalesce(nr_folha_bpa_ind_w,0) > 0) then
									nr_seq_control_folha_w := sus_gravar_con_fol_bpa_comp(nr_seq_protocolo_p, dt_mesano_referencia_w, cd_cns_medico_exec_ww, cd_cbo_ww, nr_folha_bpa_ind_w, nr_linha_folha_ind_w, nr_seq_control_folha_w);
								end if;
							end if;
						
							if (coalesce(nr_folha_bpa_cont_w,0) = 0) then
								begin
                                                                select 	max(coalesce(nr_folha_bpi,0)),
                                                                        max(coalesce(nr_linha_folha_bpi,0)),
                                                                        max(coalesce(nr_sequencia,0))
                                                                into STRICT    nr_folha_bpa_cont_w,
                                                                        nr_linha_folha_ind_w,
                                                                        nr_seq_control_folha_w
                                                                from	sus_control_folha_bpa_comp
                                                                where	cd_cbo_medico_exec = cd_cbo_w
                                                                and	cd_cns_medico_exec = cd_cns_medico_exec_w
                                                                and 	trunc(dt_mesano_referencia,'month') = trunc(dt_mesano_referencia_w,'month');
								
								nr_folha_bpa_ind_w := nr_folha_bpa_cont_w;
                                                                end;
							end if;							
						
							if (coalesce(nr_seq_control_folha_w,0) = 0) then
								nr_seq_control_folha_w := sus_gravar_con_fol_bpa_comp(nr_seq_protocolo_p, dt_mesano_referencia_w, cd_cns_medico_exec_w, cd_cbo_w, null, null, nr_seq_control_folha_w);
								nr_folha_bpa_ind_w 	:= 1;
								nr_linha_folha_ind_w	:= 0;
							end if;
							
							if (nr_linha_folha_ind_w	= 99) then
								nr_linha_folha_ind_w	:= 0;
								if (nr_folha_bpa_ind_w < 98901) then
									nr_folha_bpa_ind_w	:= nr_folha_bpa_ind_w + 1;
								else
									CALL wheb_mensagem_pck.exibir_mensagem_abort(279833);				
								end if;	
							end if;							
							end; 							
						elsif (nr_linha_folha_w	= 99) or (cd_cns_medico_exec_w	<> cd_cns_medico_exec_ww) or (cd_cbo_w 		<> cd_cbo_ww) then
							nr_linha_folha_ind_w	:= 0;
							if (nr_folha_bpa_ind_w < 98901) then
								nr_folha_bpa_ind_w	:= nr_folha_bpa_ind_w + 1;
							else
								CALL wheb_mensagem_pck.exibir_mensagem_abort(279833);				
							end if;
						end if;
					end if;

					/* Contador de linhas do arquivo */

					qt_linhas_w		:= qt_linhas_w + 1; /* Numero de linhas do BPA gravadas */
					/* Se o procedimento for consolidado entao sera inserida as folhas e o numero da linha do consolidado se nao do Individualizado */

					if (ie_tipo_bpa_w	= 'C') then
						nr_linha_folha_con_w	:= nr_linha_folha_con_w + 1;
						nr_linha_folha_w        := nr_linha_folha_con_w;
						nr_folha_bpa_w		:= nr_folha_bpa_con_w;
					elsif (ie_tipo_bpa_w	= 'I') then
						nr_linha_folha_ind_w	:= nr_linha_folha_ind_w + 1;
						nr_linha_folha_w        := nr_linha_folha_ind_w;
						nr_folha_bpa_w		:= nr_folha_bpa_ind_w;
					end if;

					/* Felipe - 28/02/2008 - OS 80604 - Esse codigo e feito de 7 em 7 pacientes */

					if (cd_procedimento_w	= 0301080160) then
						qt_procedimento_w		:= trunc(dividir(qt_procedimento_w,7));
					end if;
					
					if (ie_remove_tplogr_end_w = 'S') and (length(ds_logradouro_w) > 30)	then
						begin
						ds_tipo_logradouro_w	:= substr(sus_obter_desc_tipo_logr(tp_logradouro_w),1,40);
						
						--lhalves OS 843869 em 12/02/2015 - Inclui o upper
						if (upper(substr(ds_logradouro_w,1,length(ds_tipo_logradouro_w)+1)) = upper(ds_tipo_logradouro_w)||' ') then
							ds_logradouro_w	:= substr(substr(ds_logradouro_w,length(ds_tipo_logradouro_w)+2,length(ds_logradouro_w)),1,30);
						else
							ds_logradouro_w := substr(ds_logradouro_w,1,30);
						end if;
						
						end;
					elsif (ie_remove_tplogr_end_w = 'T') and (tp_logradouro_w IS NOT NULL AND tp_logradouro_w::text <> '') then
						begin
						ds_tipo_logradouro_w	:= substr(sus_obter_desc_tipo_logr(tp_logradouro_w),1,40);
						
						--lhalves OS 843869 em 12/02/2015 - Inclui o upper
						if (upper(substr(ds_logradouro_w,1,length(ds_tipo_logradouro_w)+1)) = upper(ds_tipo_logradouro_w)||' ') then
							ds_logradouro_w	:= substr(substr(ds_logradouro_w,length(ds_tipo_logradouro_w)+2,length(ds_logradouro_w)),1,30);
						else
							ds_logradouro_w := substr(ds_logradouro_w,1,30);
						end if;
						
						end;					
					else	
						ds_logradouro_w := substr(ds_logradouro_w,1,30);
					end if;
					
					select	nextval('w_susbpa_interf_seq')
					into STRICT	nr_sequencia_w
					;		

                                        qt_linha_export_w := qt_linha_export_w + 1;
					
					insert into w_susbpa_interf(
							nr_sequencia,
							nr_seq_protocolo,
							nr_interno_conta,
							nr_atendimento,
							cd_pessoa_fisica,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ds_registro,
							dt_mesano_referencia,
							qt_linhas,
							qt_folha_bpa,
							nm_orgao_responsavel,
							cd_orgao_responsavel,
							cd_cgc_responsavel,
							nm_orgao_destino,
							ie_orgao_destino,
							ds_versao,
							cd_ups,
							dt_competencia,
							cd_cns_medico_exec,
							cd_cbo,
							dt_procedimento,
							nr_folha_bpa,
							nr_linha_folha,
							cd_procedimento,
							cd_cns_paciente,
							ie_sexo_pac,
							cd_municipio_ibge,
							cd_cid_proc,
							nr_idade_pac,
							qt_procedimento,
							cd_carater_atendimento,
							ds_autorizacao,
							ds_origem_informacao,
							nm_paciente,
							dt_nascimento,
							ie_tipo_bpa,
							ie_cabecalho,
							cd_dominio,
							cd_raca_cor,
							cd_etnia,
							cd_nacionalidade,
							cd_servico,
							cd_servico_classif,
							cd_equipe,
							tp_logradouro,
							cd_cep,
							ds_logradouro,
							ds_compl_logradouro,
							nr_logradouro,
							ds_bairro,
							ddd_fone_pac,
							nr_fone_pac,
							ds_email,
							cd_cnpj_fornecedor,
                                                        qt_linha_export)
					values (		nr_sequencia_w,
							nr_seq_protocolo_p,
							nr_interno_conta_w,
							nr_atendimento_w,
							cd_pessoa_fisica_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							'*BPA*',
							dt_mesano_referencia_w,
							qt_linhas_w,
							qt_folha_bpa_w,
							nm_orgao_responsavel_w,
							cd_orgao_responsavel_w,
							cd_cgc_responsavel_w,
							nm_orgao_destino_w,
							ie_orgao_destino_w,
							'*BPABeta4*',
							coalesce(cd_cnes_hosp_proc_w, cd_cnes_hospital_w),
							dt_mesano_referencia_w,
							coalesce(cd_cns_medico_exec_w,0),
							cd_cbo_w,
							dt_atend_proc_w,
							nr_folha_bpa_w,
							nr_linha_folha_w,
							cd_procedimento_w,
							cd_cns_paciente_w,
							ie_sexo_pac_w,
							cd_municipio_ibge_w,
							cd_cid_proc_w,
							(nr_idade_pac_w)::numeric ,
							qt_procedimento_w,
							cd_carater_atend_w,
							ds_autorizacao_w,
							'BPA',
							nm_paciente_w,
							to_date(dt_nascimento_w,'dd/mm/yyyy'),
							ie_tipo_bpa_w,
							'P',
							substr(cd_dominio_w,1,4),
							cd_raca_cor_w,
							cd_etnia_w,
							cd_nacionalidade_w,
							cd_servico_w,
							cd_serv_classif_w,
							cd_equipe_w,
							tp_logradouro_w,
							cd_cep_w,
							ds_logradouro_w,
							ds_compl_logradouro_w,
							nr_logradouro_w,
							ds_bairro_w,
							ddd_fone_pac_w,
							nr_fone_pac_w,
							email_w,
							cd_cnpj_fornecedor_w,
                                                        qt_linha_export_w);
					
					if (qt_reg_w = qt_reg_commit_w) then
						qt_reg_w := 0;
						commit;
					end if;
			
					/*Adicionado este IF pois quando o primeiro registro do protocolo e consolidado, 
					estava salvando informacoes no controlador do individualizado e por isso nao trocava de folha.
					Geliard 24/06/11, OS 329586*/
					if (ie_tipo_bpa_w	= 'I') then
						cd_cns_medico_exec_ww	:= cd_cns_medico_exec_w;
						cd_cbo_ww		:= cd_cbo_w;
					end if;
					
					cd_cnes_hosp_proc_ww := cd_cnes_hosp_proc_w;
					
					end;
				end if;
			end if;
			end;
		end loop;
		end;
	end loop;
	
	if (coalesce(ie_control_num_folha_bpi_w,'N') = 'S') then													
		nr_seq_control_folha_w := sus_gravar_con_fol_bpa_comp(nr_seq_protocolo_p, dt_mesano_referencia_w, cd_cns_medico_exec_w, cd_cbo_w, nr_folha_bpa_ind_w, nr_linha_folha_ind_w, nr_seq_control_folha_w);																		
	end if;

	/* Somatorio da quantidade total de folhas do arquivo */

	qt_folha_bpa_w	:= nr_folha_bpa_c_geral_w + nr_folha_bpa_ind_w;

	/* Atualizar na tabela temporaria a quantidade linhas e de folhas do arquivo */

	update	w_susbpa_interf
	set	qt_linhas		= qt_linhas_w,
		qt_folha_bpa	= qt_folha_bpa_w
	where	nr_seq_protocolo	= nr_seq_protocolo_p;

	commit;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_sus_bpa ( nr_seq_protocolo_p bigint, nr_folha_bpa_p bigint, nr_folha_bpi_p bigint, nm_usuario_p text) FROM PUBLIC;

