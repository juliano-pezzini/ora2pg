-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_siscoserv ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
dt_inicial_w			timestamp;
dt_final_w			timestamp;

c_documento CURSOR FOR 
	SELECT	nr_seq_nota_fiscal, 
		cd_pf_documento, 
		cd_moeda, 
		vl_faturado, 
		nr_interno_conta, 
		dt_documento, 
		dt_inicio_servico, 
		dt_fim_servico 
	from (SELECT	a.nr_sequencia nr_seq_nota_fiscal, 
			a.cd_pessoa_fisica cd_pf_documento, 
			a.cd_moeda, 
			a.vl_mercadoria vl_faturado, 
			a.nr_interno_conta, 
			a.dt_emissao dt_documento, 
			c.dt_entrada dt_inicio_servico, 
			c.dt_alta dt_fim_servico, 
			coalesce(substr(obter_se_brasileiro(d.cd_pessoa_fisica),1,1),'N') ie_brasileiro 
		from	nota_fiscal		a, 
			conta_paciente		b, 
			atendimento_paciente	c, 
			pessoa_fisica		d 
		where	b.nr_interno_conta	= a.nr_interno_conta 
		and	c.nr_atendimento	= b.nr_atendimento 
		and	d.cd_pessoa_fisica	= a.cd_pessoa_fisica 
		and	a.ie_situacao		= '1' 
		and	a.dt_emissao between dt_inicial_w and dt_final_w 
		and	(a.cd_moeda IS NOT NULL AND a.cd_moeda::text <> '')) alias4 
	where	ie_brasileiro	= 'N';

type 		documento is table of c_documento%rowtype;
documento_w 	documento;
i		integer := 1;
type vetor_documento is table of documento index by integer;
vetor_documento_w	vetor_documento;

BEGIN 
select	a.dt_inicial, 
	a.dt_final 
into STRICT	dt_inicial_w, 
	dt_final_w 
from	lote_siscoserv	a 
where	a.nr_sequencia	= nr_seq_lote_p;
 
dt_inicial_w	:= trunc(dt_inicial_w, 'dd');
dt_final_w	:= fim_dia(dt_final_w);
 
open c_documento;
loop 
fetch c_documento bulk collect into documento_w limit 1000;
	vetor_documento_w(i)	:= documento_w;
	i			:= i + 1;
EXIT WHEN NOT FOUND; /* apply on c_documento */
end loop;
close c_documento;
 
for i in 1..vetor_documento_w.count loop 
	begin 
	documento_w	:= vetor_documento_w(i);
	 
	for z in 1..documento_w.count loop 
		begin 
		 
		insert into lote_siscoserv_doc(nr_sequencia, 
			nr_seq_lote, 
			nm_usuario, 
			nm_usuario_nrec, 
			dt_atualizacao, 
			dt_atualizacao_nrec, 
			cd_moeda, 
			cd_pf_documento, 
			dt_documento, 
			dt_fim_servico, 
			dt_inicio_servico, 
			nr_interno_conta, 
			nr_seq_nota_fiscal, 
			vl_faturado) 
		values (nextval('lote_siscoserv_doc_seq'), 
			nr_seq_lote_p, 
			nm_usuario_p, 
			nm_usuario_p, 
			clock_timestamp(), 
			clock_timestamp(), 
			documento_w[z].cd_moeda, 
			documento_w[z].cd_pf_documento, 
			documento_w[z].dt_documento, 
			documento_w[z].dt_fim_servico, 
			documento_w[z].dt_inicio_servico, 
			documento_w[z].nr_interno_conta, 
			documento_w[z].nr_seq_nota_fiscal, 
			documento_w[z].vl_faturado);
		end;
	end loop;
	end;
end loop;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_siscoserv ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

