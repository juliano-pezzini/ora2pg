-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reg_ecf_n030 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) AS $body$
DECLARE


nr_seq_registro_w		bigint := nr_sequencia_p;
nr_linha_w			bigint := qt_linha_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(4000);
sep_w				varchar(2) := ds_separador_p;

tp_registro			varchar(5);
dt_inicio_apuracao_w		timestamp;
dt_fim_apuracao_w		timestamp;
ie_forma_apuracao_w		fis_regra_ecf_0020.ie_forma_apuracao%type;
nr_seq_apuracao_w		bigint;
ie_tipo_apuracao_w		varchar(1);
dt_inicio_w			timestamp;
dt_fim_w			timestamp;
nr_indicador_w			smallint;
vl_custo_w			double precision;
ie_lote_anual_w			fis_lote_apuracao.ie_lote_anual%type;
ie_lacs_lalur_w			varchar(2);
ie_gerar_ecf_w 			fis_livros_estr_padrao.ie_gerar_ecf%type;
nr_seq_lote_w			fis_lote_ecf.nr_sequencia%type;

nr_sequencia_IRPJ_w		bigint;

-- Registro N030
c01 CURSOR FOR
	SELECT  b.dt_mes_apuracao,
		a.ie_anual_trimestral,
		a.ie_forma_apuracao
	from	fis_estrutura_calculo 	a,
		fis_lote_apuracao 	b,
		fis_controle_ecf 	c
	where	a.nr_sequencia 		= b.nr_seq_estrutura
	and 	b.nr_sequencia		= c.nr_seq_lote
	and 	b.dt_mes_apuracao	between 	dt_inicio_apuracao_w and dt_fim_apuracao_w
	and 	a.ie_lalur_lacs		= 'LL'
	and 	b.ie_lote_anual 	= 'N'
	and	b.cd_empresa 		= cd_empresa_p
	and	(((ie_scp_p = 'S')
		and (coalesce(a.ie_scp, 'N') = 'S')
		and (a.cd_estabelecimento_scp = cd_estabelecimento_p))
	or	((ie_scp_p = 'N') 
		and (coalesce(a.ie_scp, 'N') = 'N')))	
	order by	b.dt_mes_apuracao;
vet01	c01%RowType;

-- Registro N500 / 620 / 630 / 650 / 660 / 670
c02 CURSOR FOR
	SELECT 	nr_seq_item,
		d.cd_codigo_ecf,
		substr(obter_desc_item_estrut(a.nr_seq_item),1,255) ds_item,
		a.vl_mes_01,
		a.vl_mes_02,
		a.vl_mes_03,
		a.vl_mes_04,
		a.vl_mes_05,
		a.vl_mes_06,
		a.vl_mes_07,
		a.vl_mes_08,
		a.vl_mes_09,
		a.vl_mes_10,
		a.vl_mes_11,
		a.vl_mes_12,
		a.vl_anual,
		d.cd_codigo_bloco_n
	from	fis_calculo_estrut 	a,
		fis_estrutura_item 	b,
		fis_estrutura_livros 	c,
		fis_livros_estr_padrao	d,
		fis_lote_apuracao 	e,
		fis_estrutura_calculo	f,
		fis_controle_ecf 	g
	where	a.nr_seq_item		= b.nr_sequencia
	and 	a.nr_seq_estrut		= b.nr_seq_estrutura
	and	b.nr_seq_livros		= c.nr_sequencia
	and	c.nr_seq_estrutura 	= d.nr_sequencia
	and	a.nr_seq_lote		= e.nr_sequencia
	and	a.nr_seq_estrut		= e.nr_seq_estrutura
	and 	f.nr_sequencia		= e.nr_seq_estrutura
	and 	e.nr_sequencia		= g.nr_seq_lote
	and (b.ie_tipo_estrutura 	= 'DE' or nr_sequencia_IRPJ_w in (914,1008))
	and (d.nr_sequencia 	= nr_sequencia_IRPJ_w or coalesce(nr_sequencia_IRPJ_w::text, '') = '')
	and (a.ie_lalur_lacs	= ie_lacs_lalur_w or coalesce(ie_lacs_lalur_w::text, '') = '')
	and	a.dt_referencia 	between dt_inicio_w and dt_fim_w
	and 	e.ie_lote_anual		= ie_lote_anual_w
	and (d.ie_gerar_ecf 	= ie_gerar_ecf_w or coalesce(ie_gerar_ecf_w::text, '') = '')
	and	(((ie_scp_p = 'S')
		and (coalesce(f.ie_scp, 'N') = 'S')
		and (f.cd_estabelecimento_scp = cd_estabelecimento_p))
	or	((ie_scp_p = 'N') 
		and (coalesce(f.ie_scp, 'N') = 'N')))	
	and	e.cd_empresa 		= cd_empresa_p
	order by
	(substr( '.'	||d.cd_codigo_ecf||'.',
                 instr( '.' 	||d.cd_codigo_ecf||'.', '.', 1, 1 )+1,
                 instr( '.'	||d.cd_codigo_ecf||'.', '.', 1, 2 )-instr( '.'||d.cd_codigo_ecf||'.', '.', 1, 1 )-1 ))::numeric 
           nulls first,
        (substr( '.'	||d.cd_codigo_ecf||'.',
                  instr( '.'	||d.cd_codigo_ecf||'.', '.', 1, 2 )+1,
                  instr( '.'	||d.cd_codigo_ecf||'.', '.', 1, 3 )-instr( '.'||d.cd_codigo_ecf||'.', '.', 1, 2 )-1 ))::numeric 
           nulls first;
vet02	c02%RowType;


BEGIN

select  max(dt_inicio_apuracao),
	max(dt_fim_apuracao),
	max(nr_seq_lote)
into STRICT	dt_inicio_apuracao_w,
	dt_fim_apuracao_w,
	nr_seq_lote_w
from	fis_controle_ecf
where	nr_sequencia = nr_seq_controle_p;

select  max(ie_forma_apuracao)
into STRICT	ie_forma_apuracao_w
from	fis_regra_ecf_0020
where	nr_seq_lote	= nr_seq_lote_w
and	cd_empresa = cd_empresa_p;

tp_registro	:= 'N001';
ds_linha_w  	:=  substr( 	sep_w || tp_registro		|| -- Texto Fixo Contendo a Identificao do Registro.
				sep_w || 0 		|| -- Indicador de movimento: 0 - Bloco com dados informados; 1 - Bloco sem dados informados.
				sep_w,1,8000);

ds_arquivo_w		:= substr(ds_linha_w,1,4000);
ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
nr_seq_registro_w		:= nr_seq_registro_w + 1;
nr_linha_w		:= nr_linha_w + 1;

insert into fis_ecf_arquivo(
	nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nr_seq_controle_ecf,
	nr_linha,
	cd_registro,
	ds_arquivo,
	ds_arquivo_compl)
values (	nr_seq_registro_w,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nr_seq_controle_p,
	nr_linha_w,
	tp_registro,
	ds_arquivo_w,
	ds_arquivo_compl_w);

if ie_forma_apuracao_w  = 'A' then
	tp_registro	:= 'N030'; --linha A00
	dt_inicio_w	:= dt_inicio_apuracao_w;
	dt_fim_w		:= dt_fim_apuracao_w;

	ds_linha_w  	:=  substr( sep_w || tp_registro	 			|| -- Texto Fixo Contendo a Identificao do Registro
				sep_w || to_char(dt_inicio_w,'ddmmyyyy')		|| -- Data do Incio do Perodo
				sep_w || to_char(dt_fim_w,'ddmmyyyy')		|| -- Data do Fim do Perodo
				sep_w || 'A00' 				|| -- Perodo de Apurao
				sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_ecf_arquivo(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_ecf,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (	nr_seq_registro_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_w,
		tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);

	ie_lote_anual_w := 'S';
	ie_lacs_lalur_w := 'LL';
	nr_sequencia_IRPJ_w := 914;
	ie_gerar_ecf_w := null;

	open c02;
	loop
	fetch c02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		tp_registro	:= 'N500'; --da linha A00
		ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
					sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.vl_anual		|| -- Valor
					sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		end;
	end loop;
	close c02;

	--ie_lote_anual_w := 'S';

	--ie_lacs_lalur_w := 'LL';
	nr_sequencia_IRPJ_w := null;
	--ie_gerar_ecf_w := null;
	open c02;
	loop
	fetch c02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		tp_registro	:= 'N630'; --da linha A00
		ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
					sep_w || vet02.cd_codigo_bloco_n	|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.vl_anual		|| -- Valor
					sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		end;
	end loop;
	close c02;

	--ie_lote_anual_w := 'S';
	ie_lacs_lalur_w := 'LC';
	nr_sequencia_IRPJ_w := 914;
	--ie_gerar_ecf_w := null;
	open c02;
	loop
	fetch c02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		tp_registro	:= 'N650'; --da linha A00
		ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
					sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.vl_anual		|| -- Valor
					sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		end;
	end loop;
	close c02;

	--ie_lote_anual_w := 'S';

	--ie_lacs_lalur_w := 'LC';
	nr_sequencia_IRPJ_w := null;
	--ie_gerar_ecf_w := null;
	open c02;
	loop
	fetch c02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		tp_registro	:= 'N670'; --da linha A00
		ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
					sep_w || vet02.cd_codigo_bloco_n	|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || vet02.vl_anual		|| -- Valor
					sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w		:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);

		end;
	end loop;
	close c02;

end if;

open c01;
loop
fetch c01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	tp_registro	:= 'N030';

	if (vet01.ie_anual_trimestral = 'A') then
		if (vet01.ie_forma_apuracao <> 'R') then
			dt_inicio_w 		:= dt_inicio_apuracao_w;
		else
			dt_inicio_w 		:= trunc(vet01.dt_mes_apuracao, 'mm');
		end if;
		dt_fim_w			:= fim_mes(vet01.dt_mes_apuracao);
		ie_tipo_apuracao_w 	:= 'A';
		nr_seq_apuracao_w 	:= to_char(dt_fim_w, 'mm');
	else
		dt_inicio_w 		:= trunc(add_months(vet01.dt_mes_apuracao, -2), 'month');
		dt_fim_w			:= vet01.dt_mes_apuracao;
		ie_tipo_apuracao_w 	:= 'T';
		nr_seq_apuracao_w 	:= (to_char(dt_fim_w, 'mm') / 3);
	end if;

	ds_linha_w := substr( sep_w || tp_registro	 				|| -- Texto Fixo Contendo a Identificao do Registro
			  sep_w || to_char(dt_inicio_w,'ddmmyyyy')			|| -- Data do Incio do Perodo
			  sep_w || to_char(dt_fim_w ,'ddmmyyyy')				|| -- Data do Fim do Perodo
			  sep_w || ie_tipo_apuracao_w || lpad(nr_seq_apuracao_w, 2, '0')	|| -- Perodo de Apurao
			  sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_ecf_arquivo(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_ecf,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (	nr_seq_registro_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_w,
		tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);

	--LALUR
	ie_lote_anual_w := 'N';
	ie_lacs_lalur_w := 'LL';
	--ie_gerar_ecf_w := null;
	dt_inicio_w := trunc(dt_fim_w, 'month');

	if (vet01.ie_forma_apuracao <> 'R') then

		nr_sequencia_IRPJ_w := 914;
		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	:= 'N500';

			case to_char(vet01.dt_mes_apuracao, 'mm')
			when '01' then
				vl_custo_w := vet02.vl_mes_01;
			when '02' then
				vl_custo_w := vet02.vl_mes_02;
			when '03' then
				vl_custo_w := vet02.vl_mes_03;
			when '04' then
				vl_custo_w := vet02.vl_mes_04;
			when '05' then
				vl_custo_w := vet02.vl_mes_05;
			when '06' then
				vl_custo_w := vet02.vl_mes_06;
			when '07' then
				vl_custo_w := vet02.vl_mes_07;
			when '08' then
				vl_custo_w := vet02.vl_mes_08;
			when '09' then
				vl_custo_w := vet02.vl_mes_09;
			when '10' then
				vl_custo_w := vet02.vl_mes_10;
			when '11' then
				vl_custo_w := vet02.vl_mes_11;
			when '12' then
				vl_custo_w := vet02.vl_mes_12;
			else
				vl_custo_w := null;
			end case;

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c02;

	else

		nr_sequencia_IRPJ_w := 1008;
		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	 := 'N500';

				case to_char(vet01.dt_mes_apuracao, 'mm')
				when '01' then
					vl_custo_w := vet02.vl_mes_01;
				when '02' then
					vl_custo_w := vet02.vl_mes_02;
				when '03' then
					vl_custo_w := vet02.vl_mes_03;
				when '04' then
					vl_custo_w := vet02.vl_mes_04;
				when '05' then
					vl_custo_w := vet02.vl_mes_05;
				when '06' then
					vl_custo_w := vet02.vl_mes_06;
				when '07' then
					vl_custo_w := vet02.vl_mes_07;
				when '08' then
					vl_custo_w := vet02.vl_mes_08;
				when '09' then
					vl_custo_w := vet02.vl_mes_09;
				when '10' then
					vl_custo_w := vet02.vl_mes_10;
				when '11' then
					vl_custo_w := vet02.vl_mes_11;
				when '12' then
					vl_custo_w := vet02.vl_mes_12;
				else
					vl_custo_w := null;
				end case;

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

				end;
		end loop;
		close c02;

	end if;
	
	if ie_tipo_apuracao_w = 'A' then
	
		--ie_lote_anual_w := 'N';

		--ie_lacs_lalur_w := 'LL';
		nr_sequencia_IRPJ_w := null;
		ie_gerar_ecf_w := 'N620';	

		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	:= 'N620';
			
				case to_char(vet01.dt_mes_apuracao, 'mm')
				when '01' then
					vl_custo_w := vet02.vl_mes_01;
				when '02' then
					vl_custo_w := vet02.vl_mes_02;
				when '03' then
					vl_custo_w := vet02.vl_mes_03;
				when '04' then
					vl_custo_w := vet02.vl_mes_04;
				when '05' then
					vl_custo_w := vet02.vl_mes_05;
				when '06' then
					vl_custo_w := vet02.vl_mes_06;
				when '07' then
					vl_custo_w := vet02.vl_mes_07;
				when '08' then
					vl_custo_w := vet02.vl_mes_08;
				when '09' then
					vl_custo_w := vet02.vl_mes_09;
				when '10' then
					vl_custo_w := vet02.vl_mes_10;
				when '11' then
					vl_custo_w := vet02.vl_mes_11;
				when '12' then
					vl_custo_w := vet02.vl_mes_12;
				else
					vl_custo_w := null;
				end case;

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;
			
			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c02;
	else
	
		--ie_lote_anual_w := 'N';

		--ie_lacs_lalur_w := 'LL';
		nr_sequencia_IRPJ_w := null;
		ie_gerar_ecf_w := null;

		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	:= 'N630'; --da linha A00	
			
			case to_char(vet01.dt_mes_apuracao, 'mm')
			when '01' then
				vl_custo_w := vet02.vl_mes_01;
			when '02' then
				vl_custo_w := vet02.vl_mes_02;
			when '03' then
				vl_custo_w := vet02.vl_mes_03;
			when '04' then
				vl_custo_w := vet02.vl_mes_04;
			when '05' then
				vl_custo_w := vet02.vl_mes_05;
			when '06' then
				vl_custo_w := vet02.vl_mes_06;
			when '07' then
				vl_custo_w := vet02.vl_mes_07;
			when '08' then
				vl_custo_w := vet02.vl_mes_08;
			when '09' then
				vl_custo_w := vet02.vl_mes_09;
			when '10' then
				vl_custo_w := vet02.vl_mes_10;
			when '11' then
				vl_custo_w := vet02.vl_mes_11;
			when '12' then
				vl_custo_w := vet02.vl_mes_12;
			else
				vl_custo_w := null;
			end case;			

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c02;	
	
	end if;		
	
	--LACS

	--ie_lote_anual_w := 'N';
	ie_lacs_lalur_w := 'LC';
	ie_gerar_ecf_w := null;

	dt_inicio_w	:= trunc(dt_fim_w, 'month');

	if (vet01.ie_forma_apuracao <> 'R') then

		nr_sequencia_IRPJ_w := 914;
		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	:= 'N650';

			case to_char(vet01.dt_mes_apuracao, 'mm')
			when '01' then
				vl_custo_w := vet02.vl_mes_01;
			when '02' then
				vl_custo_w := vet02.vl_mes_02;
			when '03' then
				vl_custo_w := vet02.vl_mes_03;
			when '04' then
				vl_custo_w := vet02.vl_mes_04;
			when '05' then
				vl_custo_w := vet02.vl_mes_05;
			when '06' then
				vl_custo_w := vet02.vl_mes_06;
			when '07' then
				vl_custo_w := vet02.vl_mes_07;
			when '08' then
				vl_custo_w := vet02.vl_mes_08;
			when '09' then
				vl_custo_w := vet02.vl_mes_09;
			when '10' then
				vl_custo_w := vet02.vl_mes_10;
			when '11' then
				vl_custo_w := vet02.vl_mes_11;
			when '12' then
				vl_custo_w := vet02.vl_mes_12;
			else
				vl_custo_w := null;
			end case;

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c02;

	else

		nr_sequencia_IRPJ_w := 1008;
		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	:= 'N650';

				case to_char(vet01.dt_mes_apuracao, 'mm')
				when '01' then
					vl_custo_w := vet02.vl_mes_01;
				when '02' then
					vl_custo_w := vet02.vl_mes_02;
				when '03' then
					vl_custo_w := vet02.vl_mes_03;
				when '04' then
					vl_custo_w := vet02.vl_mes_04;
				when '05' then
					vl_custo_w := vet02.vl_mes_05;
				when '06' then
					vl_custo_w := vet02.vl_mes_06;
				when '07' then
					vl_custo_w := vet02.vl_mes_07;
				when '08' then
					vl_custo_w := vet02.vl_mes_08;
				when '09' then
					vl_custo_w := vet02.vl_mes_09;
				when '10' then
					vl_custo_w := vet02.vl_mes_10;
				when '11' then
					vl_custo_w := vet02.vl_mes_11;
				when '12' then
					vl_custo_w := vet02.vl_mes_12;
				else
					vl_custo_w := null;
				end case;

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

				end;
		end loop;
		close c02;

	end if;

	if ie_tipo_apuracao_w = 'A' then
	
		--ie_lote_anual_w := 'N';

		--ie_lacs_lalur_w := 'LC';
		nr_sequencia_IRPJ_w := null;
		ie_gerar_ecf_w := 'N660';

		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	:= 'N660';

				case to_char(vet01.dt_mes_apuracao, 'mm')
				when '01' then
					vl_custo_w := vet02.vl_mes_01;
				when '02' then
					vl_custo_w := vet02.vl_mes_02;
				when '03' then
					vl_custo_w := vet02.vl_mes_03;
				when '04' then
					vl_custo_w := vet02.vl_mes_04;
				when '05' then
					vl_custo_w := vet02.vl_mes_05;
				when '06' then
					vl_custo_w := vet02.vl_mes_06;
				when '07' then
					vl_custo_w := vet02.vl_mes_07;
				when '08' then
					vl_custo_w := vet02.vl_mes_08;
				when '09' then
					vl_custo_w := vet02.vl_mes_09;
				when '10' then
					vl_custo_w := vet02.vl_mes_10;
				when '11' then
					vl_custo_w := vet02.vl_mes_11;
				when '12' then
					vl_custo_w := vet02.vl_mes_12;
				else
					vl_custo_w := null;
				end case;

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c02;
	
	else
	
		--ie_lote_anual_w := 'N';

		--ie_lacs_lalur_w := 'LC';
		nr_sequencia_IRPJ_w := null;
		ie_gerar_ecf_w := null;

		open c02;
		loop
		fetch c02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tp_registro	:= 'N670';
			
			case to_char(vet01.dt_mes_apuracao, 'mm')
			when '01' then
				vl_custo_w := vet02.vl_mes_01;
			when '02' then
				vl_custo_w := vet02.vl_mes_02;
			when '03' then
				vl_custo_w := vet02.vl_mes_03;
			when '04' then
				vl_custo_w := vet02.vl_mes_04;
			when '05' then
				vl_custo_w := vet02.vl_mes_05;
			when '06' then
				vl_custo_w := vet02.vl_mes_06;
			when '07' then
				vl_custo_w := vet02.vl_mes_07;
			when '08' then
				vl_custo_w := vet02.vl_mes_08;
			when '09' then
				vl_custo_w := vet02.vl_mes_09;
			when '10' then
				vl_custo_w := vet02.vl_mes_10;
			when '11' then
				vl_custo_w := vet02.vl_mes_11;
			when '12' then
				vl_custo_w := vet02.vl_mes_12;
			else
				vl_custo_w := null;
			end case;			

			ds_linha_w := substr( sep_w || tp_registro	 		|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || vet02.cd_codigo_ecf		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vet02.ds_item		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || vl_custo_w			|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w		:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_ecf,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (	nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);

			end;
		end loop;
		close c02;
	end if;

	end;
end loop;
close c01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

SELECT * FROM fis_reg_ecf_N990(nr_seq_controle_p, ds_separador_p, cd_estabelecimento_p, nm_usuario_p, cd_empresa_p, qt_linha_p, nr_sequencia_p) INTO STRICT qt_linha_p, nr_sequencia_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reg_ecf_n030 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) FROM PUBLIC;

