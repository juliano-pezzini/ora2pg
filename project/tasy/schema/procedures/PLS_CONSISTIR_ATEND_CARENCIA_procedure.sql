-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_atend_carencia ( nr_seq_segurado_p bigint, nr_seq_plano_p bigint, nr_seq_prestador_p bigint, dt_solicitacao_p timestamp, nr_seq_item_evento_p bigint, ie_evento_p text, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistencia  de atendimento levando em conta a carencia.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
				
nr_seq_carencia_w		bigint;
ie_permite_w			varchar(10);
ie_permite_aux_w		varchar(10);
dt_inclusao_operadora_w		timestamp;
nr_seq_rede_w			bigint;
nr_seq_rede_aux_w		bigint;
dt_carencia_w			timestamp;
qt_registros_w			bigint;
nr_seq_plano_ant_w		bigint;
			
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_carencia
	where	nr_seq_segurado = nr_seq_segurado_p
	and	ie_cpt		= 'N'
	and	(nr_seq_rede IS NOT NULL AND nr_seq_rede::text <> '');
	
C02 CURSOR FOR
	SELECT	nr_seq_rede
	from	pls_plano_rede_atend
	where	nr_seq_plano		= nr_seq_plano_ant_w
	and	dt_solicitacao_p between coalesce(dt_inicio_vigencia,dt_solicitacao_p) and coalesce(dt_fim_vigencia,dt_solicitacao_p)
	and	nr_seq_rede		<> nr_seq_rede_w;


BEGIN

select	dt_inclusao_operadora
into STRICT	dt_inclusao_operadora_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	count(1)
into STRICT	qt_registros_w
from	pls_segurado_alt_plano
where	nr_seq_segurado	= nr_seq_segurado_p
and	ie_situacao = 'A'  LIMIT 1;

if (qt_registros_w	> 0) then
	select	max(nr_seq_plano_ant)
	into STRICT	nr_seq_plano_ant_w
	from	pls_segurado_alt_plano
	where	nr_seq_segurado		= nr_seq_segurado_p
	and	ie_situacao 		= 'A'
	and	nr_seq_plano_atual	= nr_seq_plano_p;	
end if;


open C01;
loop
fetch C01 into	
	nr_seq_carencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	nr_seq_rede,
		coalesce(dt_inicio_vigencia,dt_inclusao_operadora_w)+qt_dias
	into STRICT	nr_seq_rede_w,
		dt_carencia_w
	from	pls_carencia	
	where	nr_sequencia = nr_seq_carencia_w;
	
	ie_permite_w	:= pls_obter_se_prest_rede_atend(nr_seq_prestador_p,nr_seq_rede_w);
	
	
	if (ie_permite_w = 'S') then
		if (coalesce(dt_solicitacao_p,clock_timestamp()) < dt_carencia_w) then
			if (nr_seq_plano_ant_w IS NOT NULL AND nr_seq_plano_ant_w::text <> '') then
				ie_permite_aux_w	:= 'N';
				/*Verificar se nas outras redes de atendimento do produto anterior, existem redes que ja cumpriram a carencia para esse prestador*/

				open c02;
				loop
				fetch c02 into	
					nr_seq_rede_aux_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					begin
					
					ie_permite_aux_w	:= pls_obter_se_prest_rede_atend(nr_seq_prestador_p,nr_seq_rede_aux_w);
					
					if (ie_permite_aux_w = 'S') then
						exit;
					end if;
					
					end;
				end loop;
				close c02;

				if (ie_permite_aux_w = 'S') then
					exit;
				end if;
			end if;
			CALL pls_gravar_motivo_glosa('1212', nr_seq_item_evento_p, null,
				null, wheb_mensagem_pck.get_texto(1108883, 'DT_CARENCIA='||to_char(dt_carencia_w,'dd/mm/yyyy')||';DS_REDE_ATENDIMENTO='||substr(pls_obter_dados_rede_atend(nr_seq_rede_w,'DS'),1,255)), nm_usuario_p,
				'B', ie_evento_p, nr_seq_prestador_p,
				'',null);
			exit;
		end if;
	end if;
	
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_atend_carencia ( nr_seq_segurado_p bigint, nr_seq_plano_p bigint, nr_seq_prestador_p bigint, dt_solicitacao_p timestamp, nr_seq_item_evento_p bigint, ie_evento_p text, nm_usuario_p text) FROM PUBLIC;

