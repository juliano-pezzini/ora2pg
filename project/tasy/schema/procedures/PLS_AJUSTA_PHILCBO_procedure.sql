-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajusta_philcbo () AS $body$
DECLARE


nr_seq_oc_combinada_w	PLS_OC_CTA_COMBINADA.nr_Sequencia%type;
nr_seq_oc_filtro_w	PLS_OC_CTA_FILTRO.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_estabelecimento
	from	pls_ocorrencia
	where	cd_ocorrencia like '%PHILCBO%';

BEGIN
for r_C01_w in C01 loop

	delete	FROM PLS_OC_CTA_VAL_CBO
	where	NR_SEQ_OC_CTA_COMB in (	SELECT	nr_sequencia
					from	PLS_OC_CTA_COMBINADA
					where	nr_seq_ocorrencia = r_C01_w.nr_sequencia);

	delete	FROM PLS_OC_CTA_FILTRO_CONTA
	where	NR_SEQ_OC_CTA_FILTRO in (	SELECT	nr_sequencia
						from	PLS_OC_CTA_FILTRO
						where	NR_SEQ_OC_CTA_COMB in (	select	nr_sequencia
										from	PLS_OC_CTA_COMBINADA
										where	nr_seq_ocorrencia = r_C01_w.nr_sequencia));

	delete	FROM PLS_OC_CTA_FILTRO
	where	NR_SEQ_OC_CTA_COMB in (	SELECT	nr_sequencia
					from	PLS_OC_CTA_COMBINADA
					where	nr_seq_ocorrencia = r_C01_w.nr_sequencia);


	select	max(nr_sequencia)
	into STRICT	nr_seq_oc_combinada_w
	from	PLS_OC_CTA_COMBINADA
	where	nr_seq_ocorrencia = r_C01_w.nr_sequencia
	and	nm_regra = 'CBO inválido';

	if (coalesce(nr_seq_oc_combinada_w::text, '') = '') then
		insert into PLS_OC_CTA_COMBINADA(NR_SEQUENCIA,DT_INICIO_VIGENCIA,DT_FIM_VIGENCIA,IE_VALIDACAO,NM_REGRA,NR_SEQ_TIPO_VALIDACAO,IE_APLICACAO_OCORRENCIA,IE_EVENTO,IE_PORTAL_WEB,IE_UTILIZA_FILTRO,CD_ESTABELECIMENTO,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OCORRENCIA,IE_EXCECAO,IE_PRIMEIRA_VERIFICACAO,NR_SEQ_COMBINADA,DT_INICIO_VIGENCIA_REF,DT_FIM_VIGENCIA_REF,IE_ORIGEM_CONTA)
		values (nextval('pls_oc_cta_combinada_seq'),TO_DATE('01/01/2000','dd/mm/yyyy'),null,20,'CBO inválido',36,'C','CC','A','S',r_c01_w.cd_estabelecimento,clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',r_C01_w.nr_sequencia,'N','V',null,TO_DATE('01/01/2000','dd/mm/yyyy'),TO_DATE('31/12/3000','dd/mm/yyyy'),'N')returning nr_sequencia into nr_seq_oc_combinada_w;
	end if;

	insert into PLS_OC_CTA_FILTRO(NR_SEQUENCIA,NM_FILTRO,IE_FILTRO_CONTA,IE_FILTRO_PROC,IE_FILTRO_MAT,IE_FILTRO_BENEF,IE_FILTRO_PREST,IE_FILTRO_PRODUTO,IE_FILTRO_CONTRATO,IE_FILTRO_INTERC,IE_FILTRO_PROF,IE_FILTRO_PROTOCOLO,IE_FILTRO_OPER_BENEF,IE_EXCECAO,IE_VALIDA_TODO_ATEND,IE_SITUACAO,IE_VALIDA_CONTA_PRINC,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OC_CTA_COMB,NR_ORDEM_GERAL,NR_ORDEM_CONTA,NR_ORDEM_PROC,NR_ORDEM_MAT,NR_ORDEM_BENEF,NR_ORDEM_PREST,NR_ORDEM_INTERC,NR_ORDEM_CONTRATO,NR_ORDEM_PRODUTO,NR_ORDEM_PROF)
	values (nextval('pls_oc_cta_filtro_seq'),'CBO inválido','S','N','N','N','N','N','N','N','N','N','N','N','N','A','N',clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',nr_seq_oc_combinada_w,null,null,null,null,null,null,null,null,null,null) returning nr_sequencia into nr_seq_oc_filtro_w;

	insert into PLS_OC_CTA_FILTRO_CONTA(NR_SEQUENCIA,NR_SEQ_GRUPO_DOENCA,CD_DOENCA_CID,IE_TIPO_GUIA,NR_SEQ_TIPO_ATENDIMENTO,NR_SEQ_SAIDA_INT,IE_REGIME_INTERNACAO,IE_TIPO_INTERNADO,IE_CARATER_INTERNACAO,IE_TIPO_CONSULTA,NR_SEQ_CLINICA,IE_TIPO_FATURAMENTO,IE_ORIGEM_CONTA,IE_TIPO_CONTA,NR_SEQ_TIPO_ACOMOD_CONTA,IE_INDICACAO_ACIDENTE,IE_ACOMODACAO_AUTORIZADA,IE_INTERNACAO_OBSTETRICA,IE_INTERNADO,IE_VINC_INTERNACAO,IE_INDICADOR_DORN,IE_RECEM_NASCIDO,IE_CONTA_AUTORIZADA,TP_REDE_MIN,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OC_CTA_FILTRO,IE_SITUACAO,IE_OBSERVACAO)
	values (nextval('pls_oc_cta_filtro_conta_seq'),null,'','3',null,null,'','','',null,null,'','','',null,'','N','N','N','N','N','N','N',null,clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',nr_seq_oc_filtro_w,'A','A');

	insert into PLS_OC_CTA_VAL_CBO(NR_SEQUENCIA,IE_VALIDAR_CBO_INVALIDO,IE_VALIDA_CBO_SOLIC,IE_VALIDA_CBO_DESC,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OC_CTA_COMB)
	values (nextval('pls_oc_cta_val_cbo_seq'),'S','N','N',clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',nr_seq_oc_combinada_w);

	select	max(nr_sequencia)
	into STRICT	nr_seq_oc_combinada_w
	from	PLS_OC_CTA_COMBINADA
	where	nr_seq_ocorrencia = r_C01_w.nr_sequencia
	and	nm_regra = 'Validação CBO inválido SADT';

	if (coalesce(nr_seq_oc_combinada_w::text, '') = '') then
		insert into PLS_OC_CTA_COMBINADA(NR_SEQUENCIA,DT_INICIO_VIGENCIA,DT_FIM_VIGENCIA,IE_VALIDACAO,NM_REGRA,NR_SEQ_TIPO_VALIDACAO,IE_APLICACAO_OCORRENCIA,IE_EVENTO,IE_PORTAL_WEB,IE_UTILIZA_FILTRO,CD_ESTABELECIMENTO,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OCORRENCIA,IE_EXCECAO,IE_PRIMEIRA_VERIFICACAO,NR_SEQ_COMBINADA,DT_INICIO_VIGENCIA_REF,DT_FIM_VIGENCIA_REF,IE_ORIGEM_CONTA)
		values (nextval('pls_oc_cta_combinada_seq'),TO_DATE('01/01/2000','dd/mm/yyyy'),null,20,'Validação CBO inválido SADT',36,'C','CC','A','S',r_c01_w.cd_estabelecimento,clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',r_C01_w.nr_sequencia,'N','V',null,TO_DATE('01/01/2000','dd/mm/yyyy'),TO_DATE('31/12/3000','dd/mm/yyyy'),'N') returning nr_sequencia into nr_seq_oc_combinada_w;
	end if;

	insert into PLS_OC_CTA_FILTRO(NR_SEQUENCIA,NM_FILTRO,IE_FILTRO_CONTA,IE_FILTRO_PROC,IE_FILTRO_MAT,IE_FILTRO_BENEF,IE_FILTRO_PREST,IE_FILTRO_PRODUTO,IE_FILTRO_CONTRATO,IE_FILTRO_INTERC,IE_FILTRO_PROF,IE_FILTRO_PROTOCOLO,IE_FILTRO_OPER_BENEF,IE_EXCECAO,IE_VALIDA_TODO_ATEND,IE_SITUACAO,IE_VALIDA_CONTA_PRINC,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OC_CTA_COMB,NR_ORDEM_GERAL,NR_ORDEM_CONTA,NR_ORDEM_PROC,NR_ORDEM_MAT,NR_ORDEM_BENEF,NR_ORDEM_PREST,NR_ORDEM_INTERC,NR_ORDEM_CONTRATO,NR_ORDEM_PRODUTO,NR_ORDEM_PROF)
	values (nextval('pls_oc_cta_filtro_seq'),'CBO solicitante inválido','S','N','N','N','N','N','N','N','N','N','N','N','N','A','N',clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',nr_seq_oc_combinada_w,null,null,null,null,null,null,null,null,null,null) returning nr_sequencia into nr_seq_oc_filtro_w;

	insert into PLS_OC_CTA_FILTRO_CONTA(NR_SEQUENCIA,NR_SEQ_GRUPO_DOENCA,CD_DOENCA_CID,IE_TIPO_GUIA,NR_SEQ_TIPO_ATENDIMENTO,NR_SEQ_SAIDA_INT,IE_REGIME_INTERNACAO,IE_TIPO_INTERNADO,IE_CARATER_INTERNACAO,IE_TIPO_CONSULTA,NR_SEQ_CLINICA,IE_TIPO_FATURAMENTO,IE_ORIGEM_CONTA,IE_TIPO_CONTA,NR_SEQ_TIPO_ACOMOD_CONTA,IE_INDICACAO_ACIDENTE,IE_ACOMODACAO_AUTORIZADA,IE_INTERNACAO_OBSTETRICA,IE_INTERNADO,IE_VINC_INTERNACAO,IE_INDICADOR_DORN,IE_RECEM_NASCIDO,IE_CONTA_AUTORIZADA,TP_REDE_MIN,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OC_CTA_FILTRO,IE_SITUACAO,IE_OBSERVACAO)
	values (nextval('pls_oc_cta_filtro_conta_seq'),null,'','4',null,null,'','','',null,null,'','','',null,'','N','N','N','N','N','N','N',null,clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',nr_seq_oc_filtro_w,'A','A');

	insert into PLS_OC_CTA_VAL_CBO(NR_SEQUENCIA,IE_VALIDAR_CBO_INVALIDO,IE_VALIDA_CBO_SOLIC,IE_VALIDA_CBO_DESC,DT_ATUALIZACAO,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,NR_SEQ_OC_CTA_COMB)
	values (nextval('pls_oc_cta_val_cbo_seq'),'N','S','N',clock_timestamp(),'dgkorz',clock_timestamp(),'dgkorz',nr_seq_oc_combinada_w);

	update	pls_ocorrencia
	set	ie_situacao = 'A'
	where	nr_sequencia = r_C01_w.nr_sequencia;

	commit;
end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajusta_philcbo () FROM PUBLIC;

