-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_justif_auditoria ( nr_seq_auditoria_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, ds_historico_p text, ie_tipo_historico_p text, nm_usuario_p text) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Atualizar a justificativa da auditoria
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

	IE_TIPO_HISTORICO

	AM - Análise do material
	AP - Análise do procedimento
	J - Solicitação de justificativa
	L - Log do sistema
	M - Manual
	R - Resposta da solicitação de justificativa
	RF - Resposta da solicitação de justificativa + FAX
*/nr_seq_proc_mat_w	bigint;
nr_seq_segurado_w	bigint;
nr_seq_historico_w	bigint;
ie_status_w		varchar(1);


C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_status
	from	pls_auditoria_item
	where	nr_seq_auditoria = nr_seq_auditoria_p
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
	and	ie_status = 'J'
	
union

	SELECT	nr_sequencia,
		ie_status
	from	pls_auditoria_item
	where	nr_seq_auditoria = nr_seq_auditoria_p
	and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '')
	and	ie_status = 'J'
	order by nr_sequencia;


BEGIN

if ((nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') and nr_seq_requisicao_p > 0) then
	select	nr_seq_segurado
	into STRICT	nr_seq_segurado_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_p;

	select  max(nr_sequencia) nr_sequencia
	into STRICT	nr_seq_historico_w
        from    pls_requisicao_historico
        where   nr_seq_requisicao = nr_seq_requisicao_p
        and     ie_tipo_historico = 'J';


	 insert into pls_requisicao_historico(
                        nr_sequencia, dt_historico, nr_seq_segurado,
                        ie_origem_historico, ie_tipo_historico, dt_atualizacao,
                        nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
                        ds_historico, nr_seq_requisicao, nr_seq_historico)
             values ( 	nextval('pls_requisicao_historico_seq'), clock_timestamp(), nr_seq_segurado_w,
                        'M', ie_tipo_historico_p, clock_timestamp(),
                        nm_usuario_p, clock_timestamp(), nm_usuario_p,
                        ds_historico_p, nr_seq_requisicao_p, nr_seq_historico_w);
else
	select	nr_seq_segurado
	into STRICT	nr_seq_segurado_w
	from	pls_guia_plano
	where	nr_sequencia = nr_seq_guia_p;

	select  max(nr_sequencia) nr_sequencia
	into STRICT	nr_seq_historico_w
        from    pls_guia_plano_historico
        where   nr_seq_guia = nr_seq_requisicao_p
        and     ie_tipo_historico = 'J';

	insert into pls_guia_plano_historico(
                        nr_sequencia, dt_historico, nr_seq_segurado,
                        ie_origem_historico, ie_tipo_historico, dt_atualizacao,
                        nm_usuario, ds_observacao, nr_seq_guia,
			nr_seq_historico)
             values ( 	nextval('pls_guia_plano_historico_seq'), clock_timestamp(), nr_seq_segurado_w,
                        'M', ie_tipo_historico_p, clock_timestamp(),
                        nm_usuario_p, ds_historico_p, nr_seq_guia_p,
			nr_seq_historico_w);

end if;

if (ie_tipo_historico_p = 'R') then
	update	pls_auditoria
	set	nm_usuario 		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp(),
		ie_status 		= 'A',
		ie_retorno_justific	= 'S'
	where	nr_sequencia 		= nr_seq_auditoria_p;

	open C01;
	loop
	fetch c01 into
		nr_seq_proc_mat_w,
		ie_status_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		update	pls_auditoria_item
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_status		= 'P'
		where	nr_sequencia		= nr_seq_proc_mat_w;
	end;
	end loop;
	close C01;
elsif (ie_tipo_historico_p = 'RF') then
	update	pls_auditoria
	set	nm_usuario 		= nm_usuario_p,
		dt_atualizacao 		= clock_timestamp(),
		ie_status 		= 'AF',
		ie_retorno_justific	= 'S'
	where	nr_sequencia = nr_seq_auditoria_p;

	open C01;
	loop
	fetch c01 into
		nr_seq_proc_mat_w,
		ie_status_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		update	pls_auditoria_item
		set	nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_status		= 'P'
		where	nr_sequencia		= nr_seq_proc_mat_w;
	end;
	end loop;
	close C01;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_justif_auditoria ( nr_seq_auditoria_p bigint, nr_seq_requisicao_p bigint, nr_seq_guia_p bigint, ds_historico_p text, ie_tipo_historico_p text, nm_usuario_p text) FROM PUBLIC;

