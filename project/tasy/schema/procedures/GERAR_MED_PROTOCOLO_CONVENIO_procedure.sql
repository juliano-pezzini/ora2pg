-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_med_protocolo_convenio (nr_seq_protocolo_p bigint, cd_medico_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE



nr_seq_faturamento_w	bigint;
cd_convenio_w		integer;
nr_seq_plano_w		bigint;
nr_seq_plano_atend_w	bigint;
nr_seq_item_w		bigint;
qt_registro_w		bigint;
vl_parametro_w		bigint;
qt_plano_w		bigint;
qt_regra_w		bigint;
qt_itens_w		bigint;
ie_tipo_guia_w		varchar(02);

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_seq_plano
	from	med_cliente c,
		med_atendimento b,
		med_faturamento a
	where	a.nr_atendimento					= b.nr_atendimento
	and	b.nr_seq_cliente					= c.nr_sequencia
	and	c.cd_medico						= cd_medico_p
	and 	b.cd_convenio						= cd_convenio_w
	--and	b.nr_seq_plano						= nvl(nr_seq_plano_w, b.nr_seq_plano)
	and	coalesce(coalesce(ie_tipo_guia_w, a.ie_tipo_guia),'0')		= coalesce(a.ie_tipo_guia,'0')
	and	coalesce(nr_seq_item_w, a.nr_seq_item)			= a.nr_seq_item
	and	b.dt_entrada between dt_inicial_p and dt_final_p
	and	coalesce(a.nr_seq_protocolo::text, '') = ''
	order by b.nr_atendimento;


BEGIN

select	coalesce(max(vl_parametro),0)
into STRICT	vl_parametro_w
from (
	SELECT	a.vl_parametro
	from    med_parametro_medico a
	where   a.cd_medico        = cd_medico_p
	and	a.nr_seq_parametro = 71
	
union

	SELECT	a.vl_padrao vl_parametro
	from    med_parametro a
	where   a.nr_sequencia     = 71
	and	not exists (select  1
	                     from    med_parametro_medico x
	                     where   x.nr_seq_parametro = a.nr_sequencia
	                     and     x.cd_medico = cd_medico_p)) alias3;

select	cd_convenio,
	nr_seq_plano,
	nr_seq_item,
	ie_tipo_guia
into STRICT	cd_convenio_w,
	nr_seq_plano_w,
	nr_seq_item_w,
	ie_tipo_guia_w
from	med_prot_convenio
where	nr_sequencia			= nr_seq_protocolo_p;

if (coalesce(vl_parametro_w,0)	> 0) then
	select	coalesce(count(*),0)
	into STRICT	qt_itens_w
	from	med_faturamento
	where	nr_seq_protocolo	= nr_seq_protocolo_p;

	if (qt_itens_w	>= vl_parametro_w) then
		--A quantidade limite do protocolo já foi atingida conforme parâmetro 71.#@#@');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(261422);
	end if;
end if;

qt_registro_w	:= 0;

select	coalesce(count(*),0)
into STRICT	qt_registro_w
from	med_faturamento
where	nr_seq_protocolo	= nr_seq_protocolo_p;

open	c01;
loop
fetch	c01 into
	nr_seq_faturamento_w,
	nr_seq_plano_atend_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	coalesce(count(*),0)
	into STRICT	qt_plano_w
	from	med_prot_convenio_regra x
	where	x.nr_seq_plano		= nr_seq_plano_atend_w
	and	x.nr_seq_protocolo	= nr_seq_protocolo_p;

	select	coalesce(count(*),0)
	into STRICT	qt_regra_w
	from	med_prot_convenio_regra x
	where	x.nr_seq_protocolo	= nr_seq_protocolo_p;

	if	((coalesce(nr_seq_plano_w::text, '') = '') and (qt_regra_w	= 0)) or (nr_seq_plano_w	= nr_seq_plano_atend_w) or (qt_plano_w	> 0) then

		if (coalesce(vl_parametro_w,0)	= 0) or (qt_registro_w		< coalesce(vl_parametro_w,0)) then
			qt_registro_w		:= qt_registro_w +1;
			update	med_faturamento
			set	nr_seq_protocolo	= nr_seq_protocolo_p
			where	nr_sequencia		= nr_seq_faturamento_w;
		end if;
	end if;
	end;
end loop;
close c01;

update	med_prot_convenio
set	dt_geracao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	nm_usuario_geracao = nm_usuario_p,
	dt_atualizacao = clock_timestamp()
where	nr_sequencia	= nr_seq_protocolo_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_med_protocolo_convenio (nr_seq_protocolo_p bigint, cd_medico_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

