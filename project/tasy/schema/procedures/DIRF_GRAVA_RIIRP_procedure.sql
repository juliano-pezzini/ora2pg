-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dirf_grava_riirp ( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text) is vl_rendimento_jan_w varchar(20) AS $body$
BEGIN
return;
end;

begin
separador_w		:= '|';
vl_rendimento_jan_w	:= 0;
vl_rendimento_fev_w	:= 0;
vl_rendimento_mar_w	:= 0;
vl_rendimento_abr_w	:= 0;
vl_rendimento_mai_w	:= 0;
vl_rendimento_jun_w	:= 0;
vl_rendimento_jul_w	:= 0;
vl_rendimento_ago_w	:= 0;
vl_rendimento_set_w	:= 0;
vl_rendimento_out_w	:= 0;
vl_rendimento_nov_w	:= 0;
vl_rendimento_dez_w	:= 0;

select	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='01' THEN  a.vl_rendimento  ELSE 0 END ),0) mes1,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='02' THEN  a.vl_rendimento  ELSE 0 END ),0) mes2,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='03' THEN  a.vl_rendimento  ELSE 0 END ),0) mes3,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='04' THEN  a.vl_rendimento  ELSE 0 END ),0) mes4,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='05' THEN  a.vl_rendimento  ELSE 0 END ),0) mes5,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='06' THEN  a.vl_rendimento  ELSE 0 END ),0) mes6,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='07' THEN  a.vl_rendimento  ELSE 0 END ),0) mes7,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='08' THEN  a.vl_rendimento  ELSE 0 END ),0) mes8,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='09' THEN  a.vl_rendimento  ELSE 0 END ),0) mes9,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='10' THEN  a.vl_rendimento  ELSE 0 END ),0) mes10,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='11' THEN  a.vl_rendimento  ELSE 0 END ),0) mes11,
	coalesce(sum(CASE WHEN coalesce(to_char(a.dt_base_titulo, 'mm'),'00')='12' THEN  a.vl_rendimento  ELSE 0 END ),0) mes12
into STRICT	vl_rendimento_jan_w,
	vl_rendimento_fev_w,
	vl_rendimento_mar_w,
	vl_rendimento_abr_w,
	vl_rendimento_mai_w,
	vl_rendimento_jun_w,
	vl_rendimento_jul_w,
	vl_rendimento_ago_w,
	vl_rendimento_set_w,
	vl_rendimento_out_w,
	vl_rendimento_nov_w,
	vl_rendimento_dez_w
from	dirf_lote_mensal	e,
	dirf_agrupar_lote	d,
	dirf_lote		c,
	titulo_pagar		b,
	dirf_titulo_pagar	a
where	1 = 1
and	e.nr_sequencia		= a.nr_seq_lote_dirf
and	e.nr_sequencia		= d.nr_seq_lote_mensal
and	c.nr_sequencia		= d.nr_seq_lote_anual
and	a.nr_titulo		= b.nr_titulo
and	c.nr_sequencia		= nr_seq_lote_dirf_p
and	a.ie_registro		= 'RIIRP'
and	coalesce(a.cd_pessoa_fisica, b.cd_pessoa_fisica)	= cd_pessoa_fisica_p
and	a.cd_darf = cd_darf_p;

if	((abs(vl_rendimento_jan_w) +
	abs(vl_rendimento_fev_w) +
	abs(vl_rendimento_mar_w) +
	abs(vl_rendimento_abr_w) +
	abs(vl_rendimento_mai_w) +
	abs(vl_rendimento_jun_w) +
	abs(vl_rendimento_jul_w) +
	abs(vl_rendimento_ago_w) +
	abs(vl_rendimento_set_w) +
	abs(vl_rendimento_out_w) +
	abs(vl_rendimento_nov_w) +
	abs(vl_rendimento_dez_w)) > 1) then
	begin

	ds_arquivo_w := 'RIIRP'	|| separador_w || campo_dirf(vl_rendimento_jan_w)	|| separador_w || campo_dirf(vl_rendimento_fev_w) || separador_w || campo_dirf(vl_rendimento_mar_w)
				|| separador_w || campo_dirf(vl_rendimento_abr_w)	|| separador_w || campo_dirf(vl_rendimento_mai_w) || separador_w || campo_dirf(vl_rendimento_jun_w)
				|| separador_w || campo_dirf(vl_rendimento_jul_w) 	|| separador_w || campo_dirf(vl_rendimento_ago_w) || separador_w || campo_dirf(vl_rendimento_set_w)
				|| separador_w || campo_dirf(vl_rendimento_out_w) 	|| separador_w || campo_dirf(vl_rendimento_nov_w) || separador_w || campo_dirf(vl_rendimento_dez_w)
				|| separador_w || '' || separador_w;

	nr_seq_apres_p := nr_seq_apres_p + 1;

	insert 	into w_dirf_arquivo(nr_sequencia,
		nm_usuario,
		nm_usuario_nrec,
		dt_atualizacao,
		dt_atualizacao_nrec,
		ds_arquivo,
		nr_seq_apresentacao,
		nr_seq_registro,
		cd_darf)
	values (nextval('w_dirf_arquivo_seq'),
		nm_usuario_p,
		nm_usuario_p,
		clock_timestamp(),
		clock_timestamp(),
		ds_arquivo_w,
		to_char(nr_seq_apres_p),
		0,
		cd_darf_p);

	end;
end if;

commit;

nr_seq_apres_p	:= nr_seq_apres_p + 1;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dirf_grava_riirp ( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text) is vl_rendimento_jan_w varchar(20) FROM PUBLIC;

