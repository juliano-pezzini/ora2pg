-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_produto_lactario ( nr_prescricao_p bigint, ie_origem_inf_p text, nr_seq_leite_deriv_p bigint, nm_usuario_p text, cd_perfil_p bigint) AS $body$
DECLARE


--ParÃ¢metros da REP
vl_param_530_w					varchar(5);
ie_via_aplicacao_w				prescr_leite_deriv.ie_via_aplicacao%type;
ie_via_leite_w					prescr_material.ie_via_leite%type;
hr_prim_horario_w				prescr_leite_deriv.hr_prim_horario%type;
nr_sequencia_ww					prescr_material.nr_sequencia%type;
nr_sequencia_www				prescr_material.nr_sequencia%type;
cd_material_ww					prescr_material.cd_material%type;
cd_material_www					prescr_material.cd_material%type;
nr_seq_produto_w				bigint;
nr_seq_adicional_w				bigint;
nr_seq_material_w				integer;
nr_seq_material_adic_w			bigint;
cd_material_w					bigint;
cd_unidade_medida_w				varchar(30);
cd_unidade_medida_consumo_w		varchar(30);
cd_unidade_medida_con_adic_w 	varchar(30);
cd_material_adic_w				bigint;
cd_unidade_medida_adic_w 		varchar(30);
qt_dose_ww						double precision;
qt_volume_total_w				bigint;
qt_porcentagem_w				prescr_material.qt_porcentagem%type;
ie_regra_disp_w					varchar(10);
cd_intervalo_w					varchar(50);
qt_dose_w						double precision;
nr_Sequencia_w					bigint;
ds_erro_w						varchar(2000);
ds_horarios_w					varchar(2000);
cd_pessoa_fisica_w				varchar(60);
cd_estabelecimento_w			bigint;
nr_agrupamento_w				bigint;
dt_nascimento_w					timestamp;
qt_conversao_dose_w				double precision;
qt_total_dispensar_w			double precision;
qt_conversao_w					double precision;
qt_unitaria_w					double precision;
nr_intervalo_w					bigint;
qt_produto_w					double precision;
ie_acm_w						varchar(1);
ie_regra_volume_leite_w			varchar(15);
ie_dose_pelo_usuario_w			varchar(1)	:= 'N';
ie_se_necessario_w				prescr_leite_deriv.ie_se_necessario%type;
ds_justificativa_w				varchar(2000) := '';

c01 CURSOR FOR
SELECT	a.nr_seq_produto,
		b.cd_material,
		obter_unid_med_usua('ml'),
		a.qt_dose,
		substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UMS'),1,30),
		a.ie_regra_volume_leite,
		a.ie_via_leite,
		a.ds_justificativa
from	w_produto_lactario a,
		nutricao_leite_deriv b,
		material c
where	a.nr_seq_produto = b.nr_sequencia
and		b.cd_material	= c.cd_material
and		a.nr_prescricao	= nr_prescricao_p
and		a.nm_usuario	= nm_usuario_p
and 	coalesce(b.ie_situacao,'A') = 'A'
and		a.nr_seq_adicional = 0;

c02 CURSOR FOR
SELECT	a.nr_seq_produto,
		b.cd_material,
		coalesce(b.cd_unidade_medida,c.cd_unidade_medida_consumo),
		a.qt_porcentagem,
		coalesce(a.qt_dose,0),
		substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_w,'UMS'),1,30)
from	w_produto_lactario a,
		nutricao_leite_deriv_adic b,
		material c
where	a.nr_seq_adicional = b.nr_sequencia
and		b.cd_material	= c.cd_material
and		a.nr_seq_produto = nr_seq_produto_w
and		a.nr_prescricao	= nr_prescricao_p
and		a.nm_usuario	= nm_usuario_p;


C03 CURSOR FOR
SELECT	nr_sequencia,
		cd_material
from	prescr_material
where	nr_seq_leite_deriv	= nr_seq_leite_deriv_p
and		nr_prescricao		= nr_prescricao_p
and		ie_agrupador		= 16;

C04 CURSOR FOR
SELECT	nr_sequencia,
		cd_material
from	prescr_material
where	nr_sequencia_diluicao	= nr_sequencia_ww
and		nr_prescricao			= nr_prescricao_p
and		ie_agrupador			= 17;


BEGIN

select	coalesce(max(b.qt_volume_total),0),
		coalesce(max(a.cd_estabelecimento),1),
		max(c.dt_nascimento),
		max(c.cd_pessoa_fisica),
		max(b.cd_intervalo),
		max(b.ds_horarios),
		max(b.ie_via_aplicacao),
		coalesce(max(b.ie_se_necessario),'N'),
		coalesce(max(b.hr_prim_horario), '')
into STRICT	qt_volume_total_w,
		cd_estabelecimento_w,
		dt_nascimento_w,
		cd_pessoa_fisica_w,
		cd_intervalo_w,
		ds_horarios_w,
		ie_via_aplicacao_w,
		ie_se_necessario_w,
		hr_prim_horario_w
from	pessoa_fisica c,
		prescr_medica a,
		prescr_leite_deriv b
where	a.nr_prescricao		= b.nr_prescricao
and		c.cd_pessoa_fisica	= a.cd_pessoa_fisica
and		a.nr_prescricao		= nr_prescricao_p
and		b.nr_sequencia		= nr_seq_leite_deriv_p;

vl_param_530_w := Obter_Param_Usuario(924, 530, coalesce(cd_perfil_p,0), nm_usuario_p, cd_estabelecimento_w, vl_param_530_w);

open C01;
loop
fetch C01 into
		nr_seq_produto_w,
		cd_material_w,
		cd_unidade_medida_w,
		qt_dose_ww,
		cd_unidade_medida_consumo_w,
		ie_regra_volume_leite_w,
		ie_via_leite_w,
		ds_justificativa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (ie_dose_pelo_usuario_w	= 'N') and (coalesce(qt_dose_ww,0)	> 0) then
		ie_dose_pelo_usuario_w	:= 'S';
	end if;

	select	coalesce(max(nr_agrupamento),0) + 1,
			coalesce(max(ie_acm),'N')
	into STRICT	nr_agrupamento_w,
			ie_acm_w
	from	prescr_material
	where	nr_prescricao		= nr_prescricao_p
	and		nr_seq_leite_deriv	= nr_seq_leite_deriv_p
	and		ie_agrupador		= 16;

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_seq_material_w
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p;

	select	obter_se_volume_consiste(cd_material_w,qt_volume_total_w, cd_pessoa_fisica_w)
	into STRICT	ds_erro_w
	;

	if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(193870,'DS_ERRO='||ds_erro_w);
	end if;

	/* obter conversao dose */

	select	obter_conversao_unid_med(cd_material_w, cd_unidade_medida_w)
	into STRICT	qt_conversao_dose_w
	;

	/* obter quantidade consumo */

	select	coalesce(max(qt_conversao),0)
	into STRICT	qt_conversao_w
	from	unidade_medida_dose_v
	where	cd_material = cd_material_w
	and		cd_unidade_medida = cd_unidade_medida_w;

	if (qt_conversao_w = 0) then
		qt_unitaria_w := 0;
	else
		qt_unitaria_w := dividir(coalesce(qt_dose_ww, qt_volume_total_w), qt_conversao_w);
	end if;

	nr_intervalo_w	:= obter_ocorrencias_horarios_rep(ds_horarios_w);
	/* obter quantidade dispensar */

	SELECT * FROM obter_quant_dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, 0, cd_intervalo_w, upper(obter_via_usuario('VO')), qt_unitaria_w, 0, nr_intervalo_w, null, null, cd_unidade_medida_w, null, qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;

	insert	into prescr_material(
			nr_sequencia,
			nr_prescricao,
			cd_material,
			cd_unidade_medida_dose,
			cd_unidade_medida,
			dt_atualizacao,
			ie_origem_inf,
			nm_usuario,
			ie_agrupador,
			qt_material,
			qt_unitaria,
			nr_seq_leite_deriv,
			qt_dose,
			nr_agrupamento,
			qt_conversao_dose,
			qt_total_dispensar,
			nr_ocorrencia,
			cd_intervalo,
			ie_regra_disp,
			ie_regra_volume_leite,
			ie_via_leite,
			ie_se_necessario,
			ds_justificativa,
			hr_prim_horario)
		values (
			nr_seq_material_w,
			nr_prescricao_p,
			cd_material_w,
			cd_unidade_medida_w,
			cd_unidade_medida_consumo_w,
			clock_timestamp(),
			ie_origem_inf_p,
			nm_usuario_p,
			16,
			coalesce(qt_produto_w,1),
			coalesce(qt_unitaria_w,1),
			nr_seq_leite_deriv_p,
			coalesce(qt_dose_ww, qt_volume_total_w),
			nr_agrupamento_w,
			qt_conversao_dose_w,
			qt_total_dispensar_w,
			nr_intervalo_w,
			cd_intervalo_w,
			ie_regra_disp_w,
			ie_regra_volume_leite_w,
			coalesce(ie_via_leite_w, ie_via_aplicacao_w),
			ie_se_necessario_w,
			ds_justificativa_w,
			hr_prim_horario_w);

	commit;

	if (vl_param_530_w = 'S') then
		CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_seq_material_adic_w,cd_perfil_p,'N',nm_usuario_p,null);
	end if;

	open C02;
	loop
	fetch C02 into
			nr_seq_adicional_w,
			cd_material_adic_w,
			cd_unidade_medida_adic_w,
			qt_porcentagem_w,
			qt_dose_ww,
			cd_unidade_medida_con_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (qt_dose_ww	<> 0) then
			qt_dose_w		:= qt_dose_ww;
			qt_porcentagem_w	:= trunc(dividir((qt_dose_w * 100),qt_volume_total_w));
		else
			qt_dose_w		:= dividir(coalesce(qt_porcentagem_w,0) * qt_volume_total_w,100);
		end if;

		select	coalesce(max(ie_se_necessario),'N'),
			coalesce(max(ie_acm),'N')
		into STRICT	ie_se_necessario_w,
			ie_acm_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia 	= nr_seq_material_w;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_material_adic_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p;

		/* obter conversao dose */

		select	obter_conversao_unid_med(cd_material_w, cd_unidade_medida_w)
		into STRICT	qt_conversao_dose_w
		;

		/* obter quantidade consumo */

		select	coalesce(max(qt_conversao),0)
		into STRICT	qt_conversao_w
		from	unidade_medida_dose_v
		where	cd_material = cd_material_w
		and		cd_unidade_medida = cd_unidade_medida_w;

		if (qt_conversao_w = 0) then
			qt_unitaria_w := 0;
		else
			qt_unitaria_w := dividir(qt_dose_w, qt_conversao_w);
		end if;
		nr_intervalo_w	:= obter_ocorrencias_horarios_rep(ds_horarios_w);

		/* obter quantidade dispensar */

		SELECT * FROM obter_quant_dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, 0, cd_intervalo_w, upper(obter_via_usuario('VO')), qt_unitaria_w, 0, nr_intervalo_w, null, null, cd_unidade_medida_w, null, qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_produto_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;

		insert	into prescr_material(
					nr_sequencia,
					nr_prescricao,
					cd_material,
					cd_unidade_medida_dose,
					cd_unidade_medida,
					dt_atualizacao,
					ie_origem_inf,
					nm_usuario,
					ie_agrupador,
					qt_material,
					qt_unitaria,
					nr_sequencia_diluicao,
					qt_porcentagem,
					qt_dose,
					nr_agrupamento,
					qt_conversao_dose,
					qt_total_dispensar,
					nr_ocorrencia,
					cd_intervalo,
					ie_regra_disp,
					ie_se_necessario)
				values (
					nr_seq_material_adic_w,
					nr_prescricao_p,
					cd_material_adic_w,
					cd_unidade_medida_adic_w,
					cd_unidade_medida_con_adic_w,
					clock_timestamp(),
					ie_origem_inf_p,
					nm_usuario_p,
					17,
					coalesce(qt_produto_w,1),
					coalesce(qt_unitaria_w,1),
					nr_seq_material_w,
					qt_porcentagem_w,
					qt_dose_w,
					nr_agrupamento_w,
					qt_conversao_dose_w,
					qt_total_dispensar_w,
					nr_intervalo_w,
					cd_intervalo_w,
					ie_regra_disp_w,
					ie_se_necessario_w);

			commit;

			if (vl_param_530_w = 'S') then
				CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_seq_material_adic_w,cd_perfil_p,'N',nm_usuario_p,null);
			end if;

			end;

		end loop;
		close C02;
	end;
end loop;
close C01;

commit;

ds_erro_w := consistir_prod_leites_deriv(nr_prescricao_p, nr_seq_material_w, nr_seq_leite_deriv_p, nm_usuario_p, cd_perfil_p, ds_erro_w);

if (ie_dose_pelo_usuario_w	= 'N') then
	CALL atualiza_produto_lactario(nr_seq_leite_deriv_p, nm_usuario_p, cd_perfil_p);
else
	-- Atualizar   DS_HORARIOS, HR_PRIM_HORARIO do Produto / Produto Adicional para gerar HorÃ¡rios / Lote (OS 719064)
	open C03;
	loop
	fetch C03 into
		nr_sequencia_ww,
		cd_material_ww;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		update	prescr_material
		set		ds_horarios			= ds_horarios_w,
				hr_prim_horario		= hr_prim_horario_w
		where	nr_sequencia		= nr_sequencia_ww
		and		cd_material			= cd_material_ww
		and		nr_prescricao		= nr_prescricao_p;

		open C04;
		loop
		fetch C04 into
			nr_sequencia_www,
			cd_material_www;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			update	prescr_material
			set		ds_horarios			= ds_horarios_w,
					hr_prim_horario		= hr_prim_horario_w
			where	nr_sequencia		= nr_sequencia_www
			and		cd_material			= cd_material_www
			and		nr_prescricao		= nr_prescricao_p;
			end;
		end loop;
		close C04;

		end;
	end loop;
	close C03;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_produto_lactario ( nr_prescricao_p bigint, ie_origem_inf_p text, nr_seq_leite_deriv_p bigint, nm_usuario_p text, cd_perfil_p bigint) FROM PUBLIC;

