-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_accomm_avg_time ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) is -- Tasy cursors
 c01_tasy CURSOR FOR SELECT v.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(v.cd_pessoa_fisica, 'list'), obter_nome_pf(v.cd_pessoa_fisica)) nm_patient, substr(pfcs_obter_lista_dados_classif(v.cd_pessoa_fisica),1,255) ds_classification, obter_sexo_pf(v.cd_pessoa_fisica, 'D') ds_gender, p.dt_nascimento dt_birthdate, obter_dados_pf(v.cd_pessoa_fisica, 'I') qt_idade_paciente, nvl(v.dt_prevista, v.dt_solicitacao) request_date, round((sysdate - v.dt_solicitacao) * 1440) qt_time_stage, 'O' ie_status_rule, v.ie_status cd_status, substr(obter_desc_status_gv(v.ie_status,'D'),1,100) ds_status, substr(obter_valor_dominio(1410,v.ie_tipo_vaga),1,100) ds_type, v.ie_tipo_vaga cd_type from gestao_vaga v, pessoa_fisica p where v.cd_pessoa_fisica = p.cd_pessoa_fisica and v.cd_estabelecimento = cd_estabelecimento_p and v.ie_status ('A', 'H', 'L', 'I') RETURNS bigint AS $body$
DECLARE

    qt_rule_time_w pfcs_time_stage_pa.qt_time%type;
BEGIN
    select coalesce(qt_time, 0)
    into STRICT qt_rule_time_w
    from pfcs_time_stage_bed_req
    where cd_rule = cd_stage_p;

    return	qt_rule_time_w;
end;

function pfcs_average_time(time_field_p number, persons_field_p number)
return number as
	final_value_w		number(15);
begin
    if (persons_field_p = 0) then
        final_value_w := 0;
    else
        final_value_w := time_field_p / persons_field_p;
    end if;

    return final_value_w;
end;

begin
nr_seq_operational_level_w := pfcs_get_structure_level(
        cd_establishment_p => cd_estabelecimento_p,
        ie_level_p => 'O',
        ie_info_p => 'C');

select ie_table_origin
into STRICT pfcs_flag_settings_w
from pfcs_general_rule;

-- Tasy tables or both
if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then
	for c01_w in c01_tasy loop
		if (coalesce(ds_status_w::text, '') = '') then
            select ds_rule
            into STRICT ds_status_w
            from PFCS_TIME_STAGE_BED_REQ
            where cd_rule = c01_w.ie_status_rule;
		end if;

		if (coalesce(cd_status_w::text, '') = '') then
            select substr(obter_desc_status_gv(c01_w.ie_status_rule,'C'),1,100)
            into STRICT cd_status_w
;
        end if;

		if (c01_w.qt_time_stage > 0 ) then
			qt_total_w := qt_total_w + 1;
			qt_total_time_w :=  c01_w.qt_time_stage + qt_total_time_w;
			if (pfcs_stages_times(c01_w.ie_status_rule) < c01_w.qt_time_stage ) then
                qt_total_over_threshold_w := qt_total_over_threshold_w + 1;
				ie_over_threshold_w := 'S';
			end if;
		end if;

		select nextval('pfcs_panel_detail_seq')
		into STRICT pfcs_panel_detail_seq_w
		;

		insert into pfcs_panel_detail(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			ie_situation,
			nr_seq_indicator,
			nr_seq_operational_level)
		values (
			pfcs_panel_detail_seq_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			'T',
			nr_seq_indicator_p,
			nr_seq_operational_level_w);

		insert into pfcs_detail_patient(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			id_patient,
			nm_patient,
			ds_gender,
			ds_classification,
			dt_birthdate,
            ds_age_range,
			qt_time_awaiting_bed,
			ie_over_threshold,
			nr_seq_detail)
		values (
			nextval('pfcs_detail_patient_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c01_w.id_patient,
			c01_w.nm_patient,
			c01_w.ds_gender,
			c01_w.ds_classification,
			c01_w.dt_birthdate,
            c01_w.qt_idade_paciente,
			c01_w.qt_time_stage,
			ie_over_threshold_w,
			pfcs_panel_detail_seq_w);

		insert into pfcs_detail_bed_request(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_type,
			cd_type,
			ds_status,
			cd_status,
            ie_status,
			dt_time_request,
			nr_seq_detail)
		values (
            nextval('pfcs_detail_bed_request_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c01_w.ds_type,
			c01_w.cd_type,
			c01_w.ds_status,
			c01_w.cd_status,
            cd_status_w,
			c01_w.request_date,
			pfcs_panel_detail_seq_w);

		ie_over_threshold_w := 'N';
	end loop;

	 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_time_w, vl_indicator_help_p => qt_total_w, vl_indicator_aux_p => qt_total_over_threshold_w, ds_reference_value_p => ds_status_w, cd_reference_value_p => cd_status_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

	qt_total_time_w := 0;
	qt_total_w := 0;
	qt_total_over_threshold_w := 0;
	ds_status_w := null;
    cd_status_w := null;

    for c02_w in c02_tasy loop
		if (coalesce(ds_status_w::text, '') = '') then
            select ds_rule
            into STRICT ds_status_w
            from PFCS_TIME_STAGE_BED_REQ
            where CD_RULE = c02_w.ie_status_rule;
		end if;
		if (coalesce(cd_status_w::text, '') = '') then
			select substr(obter_desc_status_gv(c02_w.ie_status_rule,'C'),1,100)
			into STRICT cd_status_w
			;
		end if;

		if (c02_w.qt_time_stage > 0 ) then
			qt_total_w := qt_total_w + 1;
			qt_total_time_w :=  c02_w.qt_time_stage + qt_total_time_w;
			if (pfcs_stages_times(c02_w.ie_status_rule) < c02_w.qt_time_stage ) then
				qt_total_over_threshold_w := qt_total_over_threshold_w + 1;
				ie_over_threshold_w := 'S';
			end if;
		end if;

		select nextval('pfcs_panel_detail_seq')
		into STRICT pfcs_panel_detail_seq_w
		;

		insert into pfcs_panel_detail(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			ie_situation,
			nr_seq_indicator,
			nr_seq_operational_level)
		values (
			pfcs_panel_detail_seq_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			'T',
			nr_seq_indicator_p,
			nr_seq_operational_level_w);

		insert into pfcs_detail_patient(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			id_patient,
			nm_patient,
			ds_gender,
			ds_classification,
			dt_birthdate,
            ds_age_range,
			qt_time_awaiting_bed,
			ie_over_threshold,
			nr_seq_detail)
		values (
			nextval('pfcs_detail_patient_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c02_w.id_patient,
			c02_w.nm_patient,
			c02_w.ds_gender,
			c02_w.ds_classification,
			c02_w.dt_birthdate,
            c02_w.qt_idade_paciente,
			c02_w.qt_time_stage,
			ie_over_threshold_w,
			pfcs_panel_detail_seq_w);

		insert into pfcs_detail_bed_request(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_type,
			cd_type,
			ds_status,
			cd_status,
            ie_status,
			dt_time_request,
			nr_seq_detail)
		values (nextval('pfcs_detail_bed_request_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c02_w.ds_type,
			c02_w.cd_type,
			c02_w.ds_status,
			c02_w.cd_status,
            cd_status_w,
			c02_w.request_date,
			pfcs_panel_detail_seq_w);

		ie_over_threshold_w := 'N';
	end loop;

	 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_time_w, vl_indicator_help_p => qt_total_w, vl_indicator_aux_p => qt_total_over_threshold_w, ds_reference_value_p => ds_status_w, cd_reference_value_p => cd_status_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

	qt_total_time_w := 0;
	qt_total_w := 0;
	qt_total_over_threshold_w := 0;
	ds_status_w := null;
    cd_status_w := null;

    for c03_w in c03_tasy loop
		if (coalesce(ds_status_w::text, '') = '') then
            select ds_rule
            into STRICT ds_status_w
            from PFCS_TIME_STAGE_BED_REQ
            where CD_RULE =c03_w.ie_status_rule;
		end if;
		if (coalesce(cd_status_w::text, '') = '') then
			select substr(obter_desc_status_gv(c03_w.ie_status_rule,'C'),1,100)
			into STRICT cd_status_w
			;
		end if;

		if (c03_w.qt_time_stage > 0 ) then
			qt_total_w := qt_total_w + 1;
			qt_total_time_w :=  c03_w.qt_time_stage + qt_total_time_w;
			if (pfcs_stages_times(c03_w.ie_status_rule) < c03_w.qt_time_stage ) then
				qt_total_over_threshold_w := qt_total_over_threshold_w + 1;
				ie_over_threshold_w := 'S';
			end if;
		end if;

		select nextval('pfcs_panel_detail_seq')
		into STRICT pfcs_panel_detail_seq_w
		;

		insert into pfcs_panel_detail(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			ie_situation,
			nr_seq_indicator,
			nr_seq_operational_level)
		values (
			pfcs_panel_detail_seq_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			'T',
			nr_seq_indicator_p,
			nr_seq_operational_level_w);

		insert into pfcs_detail_patient(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			id_patient,
			nm_patient,
			ds_gender,
			ds_classification,
			dt_birthdate,
            ds_age_range,
			qt_time_awaiting_bed,
			ie_over_threshold,
			nr_seq_detail)
		values (
			nextval('pfcs_detail_patient_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c03_w.id_patient,
			c03_w.nm_patient,
			c03_w.ds_gender,
			c03_w.ds_classification,
			c03_w.dt_birthdate,
            c03_w.qt_idade_paciente,
			c03_w.qt_time_stage,
			ie_over_threshold_w,
			pfcs_panel_detail_seq_w);

		insert into pfcs_detail_bed_request(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_type,
			cd_type,
			ds_status,
			cd_status,
            ie_status,
			dt_time_request,
			nr_seq_detail)
		values (
            nextval('pfcs_detail_bed_request_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c03_w.ds_type,
			c03_w.cd_type,
			c03_w.ds_status,
			c03_w.cd_status,
            cd_status_w,
			c03_w.request_date,
			pfcs_panel_detail_seq_w);

		ie_over_threshold_w := 'N';
	end loop;

	 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_time_w, vl_indicator_help_p =>qt_total_w, vl_indicator_aux_p => qt_total_over_threshold_w, ds_reference_value_p => ds_status_w, cd_reference_value_p => cd_status_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

	qt_total_time_w := 0;
	qt_total_w := 0;
	qt_total_over_threshold_w := 0;
	ds_status_w := null;
end if;

-- Integration tables or both
if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
	for c01_w in c01_fhir loop
		if (coalesce(ds_status_w::text, '') = '') then
            select ds_rule
            into STRICT ds_status_w
            from PFCS_TIME_STAGE_BED_REQ
            where cd_rule = c01_w.ie_status_rule;
		end if;
        cd_status_w := c01_w.ie_status_rule;

		if (c01_w.qt_time_stage > 0 ) then
			qt_total_w := qt_total_w + 1;
			qt_total_time_w :=  c01_w.qt_time_stage + qt_total_time_w;
			if (pfcs_stages_times(c01_w.ie_status_rule) < c01_w.qt_time_stage ) then
                qt_total_over_threshold_w := qt_total_over_threshold_w + 1;
				ie_over_threshold_w := 'S';
			end if;
		end if;

		select nextval('pfcs_panel_detail_seq')
		into STRICT pfcs_panel_detail_seq_w
		;

		insert into pfcs_panel_detail(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			ie_situation,
			nr_seq_indicator,
			nr_seq_operational_level)
		values (
			pfcs_panel_detail_seq_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			'T',
			nr_seq_indicator_p,
			nr_seq_operational_level_w);

		insert into pfcs_detail_patient(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			id_patient,
			nm_patient,
			ds_gender,
			ds_classification,
			dt_birthdate,
            ds_age_range,
			qt_time_awaiting_bed,
			ie_over_threshold,
			nr_seq_detail)
		values (
			nextval('pfcs_detail_patient_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c01_w.id_patient,
			c01_w.nm_patient,
			c01_w.ds_gender,
			c01_w.ds_classification,
			c01_w.dt_birthdate,
            c01_w.qt_idade_paciente,
			c01_w.qt_time_stage,
			ie_over_threshold_w,
			pfcs_panel_detail_seq_w);

		insert into pfcs_detail_bed_request(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_type,
			cd_type,
			ds_status,
			cd_status,
            ie_status,
			dt_time_request,
			nr_seq_detail)
		values (
            nextval('pfcs_detail_bed_request_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			c01_w.ds_type,
			c01_w.cd_type,
			c01_w.ds_status,
			c01_w.cd_status,
            cd_status_w,
			c01_w.request_date,
			pfcs_panel_detail_seq_w);

		ie_over_threshold_w := 'N';
	end loop;

	 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_time_w, vl_indicator_help_p => qt_total_w, vl_indicator_aux_p => qt_total_over_threshold_w, ds_reference_value_p => ds_status_w, cd_reference_value_p => cd_status_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);
end if;


CALL pfcs_pck.pfcs_activate_records(
    nr_seq_indicator_p => nr_seq_indicator_p,
    nr_seq_operational_level_p => nr_seq_operational_level_w,
    nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_accomm_avg_time ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) is  c01_tasy CURSOR FOR SELECT v.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(v.cd_pessoa_fisica, 'list'), obter_nome_pf(v.cd_pessoa_fisica)) nm_patient, substr(pfcs_obter_lista_dados_classif(v.cd_pessoa_fisica),1,255) ds_classification, obter_sexo_pf(v.cd_pessoa_fisica, 'D') ds_gender, p.dt_nascimento dt_birthdate, obter_dados_pf(v.cd_pessoa_fisica, 'I') qt_idade_paciente, nvl(v.dt_prevista, v.dt_solicitacao) request_date, round((sysdate - v.dt_solicitacao) * 1440) qt_time_stage, 'O' ie_status_rule, v.ie_status cd_status, substr(obter_desc_status_gv(v.ie_status,'D'),1,100) ds_status, substr(obter_valor_dominio(1410,v.ie_tipo_vaga),1,100) ds_type, v.ie_tipo_vaga cd_type from gestao_vaga v, pessoa_fisica p where v.cd_pessoa_fisica = p.cd_pessoa_fisica and v.cd_estabelecimento = cd_estabelecimento_p and v.ie_status ('A', 'H', 'L', 'I') FROM PUBLIC;

