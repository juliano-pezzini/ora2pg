-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_novo_perda_palm ( nr_prescricao_p bigint, nr_seq_horario_p bigint, nr_seq_lote_forn_p bigint, qt_perda_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


nr_sequencia_w		prescr_mat_hor_lote.nr_sequencia%type;
nr_seq_lote_w		prescr_mat_hor_lote.nr_seq_lote%type;
nr_seq_lote_ant_w	prescr_mat_hor_lote.nr_seq_lote%type;
nr_seq_material_w	prescr_material.nr_sequencia%type;
ie_controlado_w		varchar(1);
ie_gera_lote_w		varchar(1);	
										

BEGIN

ds_retorno_p	:= null;

select	max(nr_seq_lote)
into STRICT	nr_seq_lote_ant_w
from	prescr_mat_hor
where	nr_prescricao = nr_prescricao_p
and		nr_sequencia = nr_seq_horario_p;

begin -- Exception
if (nr_seq_lote_ant_w IS NOT NULL AND nr_seq_lote_ant_w::text <> '') then

	select 	max(obter_se_medic_controlado(a.cd_material, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1))),
			max(a.nr_seq_material)
	into STRICT	ie_controlado_w,
			nr_seq_material_w
	from	prescr_mat_hor a
	where	a.nr_sequencia = nr_seq_horario_p
	and		a.nr_prescricao = nr_prescricao_p;	
		
	ie_gera_lote_w	:=	coalesce(obter_valor_param_usuario(88, 359, Obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento,1)),'S');

	update	prescr_material
	set		cd_motivo_baixa  = NULL,
			dt_baixa  = NULL
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia = nr_seq_material_w;

	update	prescr_mat_hor
	set		nr_seq_lote  = NULL,
			cd_motivo_baixa  = NULL
	where	nr_sequencia = nr_seq_horario_p;

	--Gerar novo lote p/ o horario
	
	if ((ie_gera_lote_w = 'S') or (ie_gera_lote_w = 'X' AND ie_controlado_w = 'N')) then
		CALL Gerar_Lote_Atend_Prescricao(nr_prescricao_p, 0, nr_seq_horario_p, 'N', nm_usuario_p, 'GPMH', 0);
	end if;
	
	select	max(nr_seq_lote)
	into STRICT	nr_seq_lote_w
	from	prescr_mat_hor
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia = nr_seq_horario_p;
	
	if (nr_seq_lote_w <> nr_seq_lote_ant_w) then	
	
		update	ap_lote_item
		set		qt_total_dispensar = qt_perda_p,
				qt_dispensar = qt_perda_p
		where	nr_seq_lote = nr_seq_lote_w
		and		nr_seq_mat_hor = nr_seq_horario_p;
	
        select	nextval('prescr_mat_hor_lote_seq')
		into STRICT	nr_sequencia_w
		;

        insert into prescr_mat_hor_lote(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_mat_hor,
			qt_dispensar_hor,
			nr_seq_lote,
			nr_seq_lote_ant,
			nr_seq_lote_fornec)					
		values (		
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_horario_p,
			qt_perda_p,
			nr_seq_lote_w,
			nr_seq_lote_ant_w,
			nr_seq_lote_forn_p);
			
	else	
		rollback;	
	end if;

end if;

commit;

exception
	when others then
	rollback;
	ds_retorno_p	:= substr(sqlerrm,1,2000);
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_novo_perda_palm ( nr_prescricao_p bigint, nr_seq_horario_p bigint, nr_seq_lote_forn_p bigint, qt_perda_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

