-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE schematic4test_configvalue (NR_SEQUENCIA_P bigint, NM_USUARIO_P text) AS $body$
DECLARE

DS_VALUE_W varchar(1000);
NR_SEQ_VARIABLE_W bigint;
NR_SEQ_STEP_W bigint;
NM_VARIABLE_W varchar(255);
NM_USUARIO_NREC_W varchar(15);
NR_SEQ_SERVICE_W bigint;
NR_SEQUENCIA_W bigint;
NR_SEQ_PRESET_W bigint;
NR_SEQ_URL_W bigint;
NR_SEQ_BROWSER_W bigint;
NR_SEQ_ROBOT_W bigint;
NR_SEQ_GRID_W bigint;
IE_RUNTYPE_W smallint;
TOTAL_W bigint;
TOTAL_W2 bigint;
NR_SEQUENCIA_VAL_W bigint;
NR_SEQ_SERVICE_W2 bigint;
NEWSEQUENCEVAL bigint;
DS_VERSION_W varchar(255);

--loop values
C01 CURSOR FOR
  SELECT DISTINCT val.NR_SEQUENCIA, val.DS_VALUE DS_VALUE, val.NR_SEQ_VARIABLE NR_SEQ_VARIABLE, val.NR_SEQ_STEP NR_SEQ_STEP, VARIABLE1.NM_VARIABLE NM_VARIABLE, val.NR_SEQ_SERVICE NR_SEQ_SERVICE, val.NM_USUARIO_NREC, val.DS_VERSION
    INTO STRICT NR_SEQUENCIA_VAL_W, DS_VALUE_W, NR_SEQ_VARIABLE_W, NR_SEQ_STEP_W, NM_VARIABLE_W, NR_SEQ_SERVICE_W2, NM_USUARIO_NREC_W, DS_VERSION_W
  FROM SCHEM_TEST_SCRIPT scr 
  INNER JOIN SCHEM_TEST_STEP ste ON (ste.NR_SEQ_SCRIPT = scr.NR_SEQUENCIA) 
  INNER JOIN SCHEM_TEST_VALUES val ON (val.NR_SEQ_STEP = ste.NR_SEQUENCIA) 
  INNER JOIN SCHEM_TEST_VARIABLE VARIABLE1 ON (VARIABLE1.NR_SEQUENCIA = val.NR_SEQ_VARIABLE) 
  WHERE scr.NR_SEQUENCIA = NR_SEQUENCIA_W
  AND not val.NR_SEQ_SERVICE = NR_SEQ_SERVICE_W
  AND val.NR_SEQ_VARIABLE <> 1
  GROUP BY val.NR_SEQUENCIA, val.DS_VALUE, val.NR_SEQ_VARIABLE, val.NR_SEQ_STEP, VARIABLE1.NM_VARIABLE, val.NR_SEQ_SERVICE, val.NM_USUARIO_NREC
  ORDER BY val.NR_SEQUENCIA ASC;
	

BEGIN
    --procedure that create value if service changed
	INSERT INTO SCHEM_TEST_BEHOLDER(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, ds_interaction, ds_param_a)
	VALUES (nextval('schem_test_beholder_seq'), NM_USUARIO_P, clock_timestamp(), 'Robot', clock_timestamp(), 'SCHEMATIC4TEST_CONFIGVALUE',
	'NR_SEQUENCIA_P as '||NR_SEQUENCIA_P);

   SELECT script.NR_SEQUENCIA NR_SEQUENCIA, script.NR_SEQ_PRESET NR_SEQ_PRESET
      INTO STRICT NR_SEQUENCIA_W, NR_SEQ_PRESET_W
   FROM SCHEM_TEST_SCRIPT script
   WHERE script.NR_SEQUENCIA = NR_SEQUENCIA_P;


  IF (NR_SEQUENCIA_W IS NOT NULL AND NR_SEQUENCIA_W::text <> '') THEN
    UPDATE SCHEM_TEST_SCRIPT SET IE_START = '0', DT_ATUALIZACAO = clock_timestamp(), NM_USUARIO = NM_USUARIO_P WHERE NR_SEQUENCIA = NR_SEQUENCIA_W;
    UPDATE SCHEM_TEST_STEP SET DT_ATUALIZACAO = clock_timestamp(), NM_USUARIO = NM_USUARIO_P WHERE NR_SEQ_SCRIPT = NR_SEQUENCIA_W;
    
    SELECT preset.NR_SEQ_URL NR_SEQ_URL, preset.NR_SEQ_BROWSER NR_SEQ_BROWSER, preset.NR_SEQ_SERVICE NR_SEQ_SERVICE, preset.NR_SEQ_ROBOT NR_SEQ_ROBOT, preset.NR_SEQ_GRID NR_SEQ_GRID, preset.IE_RUNTYPE IE_RUNTYPE
       INTO STRICT NR_SEQ_URL_W, NR_SEQ_BROWSER_W, NR_SEQ_SERVICE_W, NR_SEQ_ROBOT_W, NR_SEQ_GRID_W, IE_RUNTYPE_W
	FROM SCHEM_TEST_PRESET preset WHERE preset.NR_SEQUENCIA = NR_SEQ_PRESET_W;

    UPDATE SCHEM_TEST_VALUES SET NR_SEQ_SERVICE = NR_SEQ_SERVICE_W, NM_USUARIO = NM_USUARIO_P, DT_ATUALIZACAO = clock_timestamp()
	WHERE NR_SEQUENCIA in (SELECT val.NR_SEQUENCIA FROM SCHEM_TEST_VALUES val
	INNER JOIN SCHEM_TEST_STEP ste ON (val.NR_SEQ_STEP = ste.NR_SEQUENCIA) 
	INNER JOIN SCHEM_TEST_SCRIPT scr ON (ste.NR_SEQ_SCRIPT = scr.NR_SEQUENCIA) 
	WHERE scr.NR_SEQUENCIA = NR_SEQUENCIA_W AND coalesce(val.NR_SEQ_SERVICE::text, '') = '');
    COMMIT;

    SELECT COUNT(scr.NR_SEQUENCIA) TOTAL 
        INTO STRICT TOTAL_W
    FROM SCHEM_TEST_SCRIPT scr 
    INNER JOIN SCHEM_TEST_STEP ste ON (ste.NR_SEQ_SCRIPT = scr.NR_SEQUENCIA) 
	INNER JOIN SCHEM_TEST_VALUES val ON (val.NR_SEQ_STEP = ste.NR_SEQUENCIA)
	WHERE scr.NR_SEQUENCIA = NR_SEQUENCIA_W AND val.NR_SEQ_SERVICE = NR_SEQ_SERVICE_W
    AND val.NR_SEQ_VARIABLE <> 1;
    
    IF (TOTAL_W = 0) THEN
       OPEN C01;
        LOOP
          FETCH C01 INTO	
            NR_SEQUENCIA_VAL_W,
            DS_VALUE_W, 
            NR_SEQ_VARIABLE_W,
            NR_SEQ_STEP_W,
            NM_VARIABLE_W,
            NR_SEQ_SERVICE_W2,
            NM_USUARIO_NREC_W,
			DS_VERSION_W;
        EXIT WHEN NOT FOUND; /* apply on C01 */
        BEGIN	
          SELECT COUNT(scr.NR_SEQUENCIA) TOTAL
            INTO STRICT TOTAL_W2
          FROM SCHEM_TEST_SCRIPT scr 
          INNER JOIN SCHEM_TEST_STEP ste ON (ste.NR_SEQ_SCRIPT = scr.NR_SEQUENCIA) 
          INNER JOIN SCHEM_TEST_VALUES val ON (val.NR_SEQ_STEP = ste.NR_SEQUENCIA)
          WHERE ste.NR_SEQUENCIA = NR_SEQ_STEP_W 
          AND val.NR_SEQ_SERVICE = NR_SEQ_SERVICE_W
          AND val.NR_SEQ_VARIABLE = NR_SEQ_VARIABLE_W
          AND val.NR_SEQ_VARIABLE <> 1;
    
          IF (TOTAL_W2 = 0) THEN
            SELECT nextval('schem_test_values_seq')
              INTO STRICT NEWSEQUENCEVAL
;
            
            IF (NR_SEQ_VARIABLE_W = 1) THEN
                DS_VALUE_W := null;
            END IF;

            delete from schem_test_values where nr_seq_step = NR_SEQ_STEP_W and NR_SEQ_VARIABLE = NR_SEQ_VARIABLE_W and coalesce(NR_SEQ_SERVICE::text, '') = '' and coalesce(DS_VALUE::text, '') = '';
            COMMIT;
            
            INSERT INTO SCHEM_TEST_VALUES(nr_sequencia, ds_value, nr_seq_variable, nr_seq_step, nr_seq_service, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ds_version)
                 VALUES (NEWSEQUENCEVAL, replace(replace(replace(replace(replace(DS_VALUE_W,chr(38)||'amp;','&'),chr(38)||'lt;','<'),chr(38)||'gt;','>'),chr(38)||'apos;', chr(39)),chr(38)||'quot;',chr(34)), NR_SEQ_VARIABLE_W, NR_SEQ_STEP_W, NR_SEQ_SERVICE_W, clock_timestamp(), NM_USUARIO_P, clock_timestamp(), NM_USUARIO_P, DS_VERSION_W);

            UPDATE SCHEM_TEST_STEP SET DT_ATUALIZACAO = clock_timestamp(), NM_USUARIO = NM_USUARIO_P WHERE NR_SEQUENCIA = NR_SEQ_STEP_W;
            COMMIT;
          END IF;
        END;
      END LOOP;
      CLOSE C01;
    END IF;
  END IF;
  EXCEPTION
  WHEN no_data_found THEN
    RAISE NOTICE 'Erro: Data not found';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE schematic4test_configvalue (NR_SEQUENCIA_P bigint, NM_USUARIO_P text) FROM PUBLIC;

