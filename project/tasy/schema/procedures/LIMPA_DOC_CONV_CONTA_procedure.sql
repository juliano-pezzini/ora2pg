-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE limpa_doc_conv_conta ( nr_interno_conta_p conta_paciente.nr_interno_conta%type default null, nr_seq_protocolo_p protocolo_convenio.nr_seq_protocolo%type default null, ie_status_acerto_p conta_paciente.ie_status_acerto%type default null, ie_atualiza_guia_p tiss_parametros_convenio.ie_atualiza_nr_guia%type default null) AS $body$
DECLARE


/*


	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	Nao efetuar COMMIT.
	Esse objeto e invocado na RECALCULA_CONTA_PACIENTE e TISS_ATUALIZAR_PROT_CONTA
	
	Objetivo: 	limpar os campos referentes ao documento / guia do convenio dos itens da conta conforme regra
	Onde: 		processo de atualizacao de contas TISS e Recalculo da Conta
	Condicao: 	parametro TISS_PARAMETROS_CONVENIO.IE_ATUALIZA_NR_GUIA for diferente de 'N' e a condicao de negocio for atendida
	OS origem:	2231136
	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	Do NOT commit.
	This object is invoked at RECALCULA_CONTA_PACIENTE and TISS_ATUALIZAR_PROT_CONTA.
	
	Objetive/Goal:	clear hpms's form values from patient account's items according to business rule
	Where:		TISS Generation and account recalculation
	Condition:	parameter TISS_PARAMETROS_CONVENIO.IE_ATUALIZA_NR_GUIA being different from 'N' and the business condition is met
	Origin SO:	2231136
	
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
*/
ie_deve_atualizar_w		varchar(1) := 'N';
ie_algum_item_possui_guia_w	varchar(1) := 'N';

ie_status_conta_w		conta_paciente.ie_status_acerto%type;
ie_atualiza_guia_w		tiss_parametros_convenio.ie_atualiza_nr_guia%type;


BEGIN

if coalesce(nr_interno_conta_p, 0) > 0 then

	-- If account's ie_status_acerto is not informed, we search for it.
	if	coalesce(ie_status_acerto_p::text, '') = '' then
		select	ie_status_acerto
		into STRICT	ie_status_conta_w
		from	conta_paciente
		where	nr_interno_conta = nr_interno_conta_p;
	else
		ie_status_conta_w := ie_status_acerto_p;
	end if;
	
	-- If hpms's ie_atualiza_nr_guia parameter is not informed, we search for it.
	if	coalesce(ie_atualiza_guia_p::text, '') = '' then
		select	coalesce(max(ie_atualiza_nr_guia), 'N')
		into STRICT	ie_atualiza_guia_w
		from	tiss_parametros_convenio
		where	cd_convenio = (SELECT x.cd_convenio_parametro from conta_paciente x where x.nr_interno_conta = nr_interno_conta_p)
		and	cd_estabelecimento = (select x.cd_estabelecimento from conta_paciente x where x.nr_interno_conta = nr_interno_conta_p);
	else
		ie_atualiza_guia_w := ie_atualiza_guia_p;
	end if;
	
	if	ie_atualiza_guia_w = 'S' then
		ie_deve_atualizar_w := 'N';
		
		if	ie_atualiza_guia_w = 'S' then
			ie_deve_atualizar_w := 'S';
		elsif	ie_atualiza_guia_w = 'P' and ie_status_conta_w = 1 then
			ie_deve_atualizar_w := 'S';
		elsif	ie_atualiza_guia_w = 'B' then
			select	CASE WHEN sum(qt)=0 THEN  'S'  ELSE 'N' END
			into STRICT	ie_deve_atualizar_w
			from (
				SELECT	count(*)	qt
				from	procedimento_paciente
				where	nr_interno_conta = nr_interno_conta_p
				and (
					(nr_doc_convenio IS NOT NULL AND nr_doc_convenio::text <> '') 
					or (nr_doc_honor_conv IS NOT NULL AND nr_doc_honor_conv::text <> '')
					)
					
				
union	all

				PERFORM 	count(*)	qt
				from	procedimento_participante
				where	nr_sequencia in (
							select 	x.nr_sequencia
							from	procedimento_paciente x
							where	x.nr_interno_conta = nr_interno_conta_p
							)
				and	(nr_doc_honor_conv IS NOT NULL AND nr_doc_honor_conv::text <> '')
				
				
union 	all

				select	count(*)	qt
				from	material_atend_paciente
				where	(nr_doc_convenio IS NOT NULL AND nr_doc_convenio::text <> '')
				and	nr_interno_conta = nr_interno_conta_p
			) alias10;
		end if;

		if 	ie_deve_atualizar_w = 'S'
			and coalesce(obter_titulo_conta_protocolo(nr_seq_protocolo_p,nr_interno_conta_p)::text, '') = '' 
			and coalesce(obter_titulo_conta(nr_interno_conta_p)::text, '') = '' 
			and coalesce(somente_numero(obter_nf_conta_protocolo(nr_seq_protocolo_p,nr_interno_conta_p)),0) = 0 then
			ie_deve_atualizar_w := 'S';
		else
			ie_deve_atualizar_w := 'N';
		end if;

		if ie_deve_atualizar_w = 'S' then
		
			update 	procedimento_paciente
			set	nr_doc_convenio 	 = NULL,
				nr_doc_honor_conv 	 = NULL
			where	nr_interno_conta 	= nr_interno_conta_p;
			
			update	procedimento_participante
			set	nr_doc_honor_conv 	 = NULL
			where	nr_sequencia 		in (
								SELECT	x.nr_sequencia
								from 	procedimento_paciente x
								where 	x.nr_interno_conta = nr_interno_conta_p
								);
			
			update	material_atend_paciente
			set	nr_doc_convenio 	 = NULL
			where	nr_interno_conta	= nr_interno_conta_p;
			
		end if;
	
	end if;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE limpa_doc_conv_conta ( nr_interno_conta_p conta_paciente.nr_interno_conta%type default null, nr_seq_protocolo_p protocolo_convenio.nr_seq_protocolo%type default null, ie_status_acerto_p conta_paciente.ie_status_acerto%type default null, ie_atualiza_guia_p tiss_parametros_convenio.ie_atualiza_nr_guia%type default null) FROM PUBLIC;

