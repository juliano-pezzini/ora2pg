-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_gerar_resp_dest_capt ( nr_seq_captacao_dest_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Gerar equipes ou profissionais responsáveis conforme critérios de distribuição
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_programa_w	mprev_programa.nr_sequencia%type;
ie_sexo_w		pessoa_fisica.ie_sexo%type;
nr_idade_w		smallint;
nr_seq_criterio_w	mprev_regra_capt_resp_crit.nr_sequencia%type;
qt_partic_w		bigint;
qt_captacao_w		bigint;
qt_atual_w		bigint;
qt_anterior_w		bigint;
nr_seq_equipe_dest_w	mprev_equipe.nr_sequencia%type;
qt_maxima_participantes_w	MPREV_REGRA_CAPT_RESP_DEST.qt_maxima_participantes%type;
ie_qt_max_w	varchar(1) := 'N';

/* Critério */

c_criterio CURSOR(nr_seq_programa_pc bigint,
		ie_sexo_pc	text,
		nr_idade_pc	bigint) FOR
	SELECT	a.nr_sequencia nr_sequencia
	from	mprev_regra_capt_resp_crit a
	where (a.nr_seq_programa = nr_seq_programa_pc or coalesce(a.nr_seq_programa::text, '') = '')
	and (a.ie_sexo = ie_sexo_pc or coalesce(a.ie_sexo::text, '') = '')
	and (nr_idade_pc between coalesce(a.qt_idade_inicial,0) and coalesce(a.qt_idade_final,999))
	and	a.ie_situacao = 'A';


/* Destinos */

c_destino CURSOR(nr_seq_criterio_pc	bigint) FOR
	SELECT	a.nr_seq_equipe nr_seq_equipe,
		coalesce(a.qt_maxima_participantes,999999999) qt_maxima_participantes
	from	MPREV_REGRA_CAPT_RESP_DEST a
	where	a.nr_seq_criterio	= nr_seq_criterio_pc
	order by
		qt_maxima_participantes;

BEGIN

if (nr_seq_captacao_dest_p IS NOT NULL AND nr_seq_captacao_dest_p::text <> '') then
	select	max(a.nr_seq_programa),
		max(c.ie_sexo),
		somente_numero(obter_idade(max(c.dt_nascimento),clock_timestamp(),'A'))
	into STRICT	nr_seq_programa_w,
		ie_sexo_w,
		nr_idade_w
	from	pessoa_fisica c,
		mprev_captacao b,
		mprev_captacao_destino a
	where	a.nr_seq_captacao = b.nr_sequencia
	and	c.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	a.nr_sequencia = nr_seq_captacao_dest_p;

	nr_seq_criterio_w	:= null;
	for r_c_criterio in c_criterio(nr_seq_programa_w,ie_sexo_w,nr_idade_w) loop
		nr_seq_criterio_w	:= r_c_criterio.nr_sequencia;
	end loop;

	if (nr_seq_criterio_w IS NOT NULL AND nr_seq_criterio_w::text <> '') then
		qt_anterior_w	:= 9999999999;
		nr_seq_equipe_dest_w	:= null;
		for r_c_destino in c_destino(nr_seq_criterio_w) loop
			/* Participantes vinculados */

			select	count(1)
			into STRICT	qt_partic_w
			from	mprev_programa_partic b,
				mprev_prog_partic_prof a
			where	a.nr_seq_programa_partic	= b.nr_sequencia
			and	b.nr_seq_programa	= nr_seq_programa_w
			and	a.nr_seq_equipe		= r_c_destino.nr_seq_equipe
			and	clock_timestamp() between a.dt_inicio_acomp and coalesce(a.dt_fim_acomp,clock_timestamp());

			/* Captações pendentes */

			select	count(1)
			into STRICT	qt_captacao_w
			from	mprev_captacao_destino b,
				mprev_captacao a
			where	a.nr_sequencia = b.nr_seq_captacao
			and	b.nr_seq_programa	= nr_seq_programa_w
			and	b.nr_seq_equipe	= r_c_destino.nr_seq_equipe
			and	a.ie_status not in ('C','R');

			qt_atual_w	:= qt_partic_w + qt_captacao_w;

			/* Vai passando por todas as equipes da regra e irá associar com a que tem menos participantes vinculados ,
			caso a equipe anterior tenha atingido sua quantidade maxima irá somente verificar se a equipe atual ainda tem vagas disponiveis */
			if	((qt_atual_w < qt_anterior_w AND qt_atual_w < r_c_destino.qt_maxima_participantes)
				or (ie_qt_max_w = 'S' and qt_atual_w < r_c_destino.qt_maxima_participantes)) then
				nr_seq_equipe_dest_w	:= r_c_destino.nr_seq_equipe;
				ie_qt_max_w := 'N';
			end if;

			if (qt_atual_w >= r_c_destino.qt_maxima_participantes) then
				ie_qt_max_w := 'S';
			end if;
			qt_anterior_w	:= qt_atual_w;
		end loop;

		if (nr_seq_equipe_dest_w IS NOT NULL AND nr_seq_equipe_dest_w::text <> '') then
			update	mprev_captacao_destino
			set	nr_seq_equipe	= nr_seq_equipe_dest_w,
				nr_seq_criterio_dist = nr_seq_criterio_w
			where	nr_sequencia	= nr_seq_captacao_dest_p;
		end if;
	end if;
end if;

/* Não pode ter commit - interna */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_gerar_resp_dest_capt ( nr_seq_captacao_dest_p bigint, nm_usuario_p text) FROM PUBLIC;

