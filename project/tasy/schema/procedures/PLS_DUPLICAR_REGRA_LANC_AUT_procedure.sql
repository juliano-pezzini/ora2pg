-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_duplicar_regra_lanc_aut ( nr_seq_regra_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w     		bigint;
nr_seq_regra_w    		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_lanc_aut_item
	where	nr_seq_regra	= nr_seq_regra_p;


BEGIN

select	nextval('pls_regra_lanc_automatico_seq')
into STRICT	nr_sequencia_w
;

insert	into	pls_regra_lanc_automatico(	nr_sequencia,
		ie_situacao,
		cd_estabelecimento,
		ds_regra,
		ie_evento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_acomodacao_origem,
		ie_acomodacao_destino,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		ie_acao_regra,
		nr_seq_plano,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_material,
		ds_observacao,
		nr_seq_sca,
		cd_material,
		nr_seq_grau_partic,
		ie_material_especial_ausente,
		ie_tipo_guia,
		nr_seq_prestador,
		ie_tipo_prestador,
		ie_consulta_urgencia,
		cd_medico_solicitante,
		ie_tipo_despesa,
		ie_tipo_segurado,
		ie_regulamentacao,
		nr_seq_uni_exec,
		nr_seq_grupo_intercambio,
		ie_preco_ant,
		ie_preco,
		nr_seq_prest_fornec,
		ie_pessoa_contrato,
		nr_seq_tipo_acomodacao,
		qt_idade_min,
		qt_idade_max,
		ie_unid_tempo_idade,
		nr_seq_grupo_produto,
		cd_especialidade_medica,
		ie_origem_alt_produto,
		ie_evento_lanc_conta,
		ie_tipo_intercambio,
		ie_origem_lancamento,
		ie_regime_internacao,
		nr_seq_tipo_prestador,
		nr_seq_classificacao,
		nr_seq_grupo_prestador,
		ie_somente_sem_diaria,
		ie_tipo_atendimento,
		nr_seq_prestador_exec,
		nr_seq_cooperativa,
		nr_seq_ops_congenere,
		nr_seq_regra_ame,
		ie_origem_solicitacao,
		nr_acao_origem,
		ie_tipo_contratacao)
	(SELECT nr_sequencia_w,
		ie_situacao,
		cd_estabelecimento,
		substr(wheb_mensagem_pck.get_texto(1128226) || ' ' || ds_regra,1,150),
		ie_evento,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		ie_acomodacao_origem,
		ie_acomodacao_destino,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		ie_acao_regra,
		nr_seq_plano,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_material,
		ds_observacao,
		nr_seq_sca,
		cd_material,
		nr_seq_grau_partic,
		ie_material_especial_ausente,
		ie_tipo_guia,
		nr_seq_prestador,
		ie_tipo_prestador,
		ie_consulta_urgencia,
		cd_medico_solicitante,
		ie_tipo_despesa,
		ie_tipo_segurado,
		ie_regulamentacao,
		nr_seq_uni_exec,
		nr_seq_grupo_intercambio,
		ie_preco_ant,
		ie_preco,
		nr_seq_prest_fornec,
		ie_pessoa_contrato,
		nr_seq_tipo_acomodacao,
		qt_idade_min,
		qt_idade_max,
		ie_unid_tempo_idade,
		nr_seq_grupo_produto,
		cd_especialidade_medica,
		ie_origem_alt_produto,
		ie_evento_lanc_conta,
		ie_tipo_intercambio,
		ie_origem_lancamento,
		ie_regime_internacao,
		nr_seq_tipo_prestador,
		nr_seq_classificacao,
		nr_seq_grupo_prestador,
		ie_somente_sem_diaria,
		ie_tipo_atendimento,
		nr_seq_prestador_exec,
		nr_seq_cooperativa,
		nr_seq_ops_congenere,
		nr_seq_regra_ame,
		ie_origem_solicitacao,
		nr_acao_origem,
		ie_tipo_contratacao
	from	pls_regra_lanc_automatico
	where	nr_sequencia 	= nr_seq_regra_p);

open C01;
loop
fetch C01 into
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert	into	pls_regra_lanc_aut_item(	nr_sequencia,
			nr_seq_regra,
			ie_situacao,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_tipo_carencia,
			qt_dias_carencia,
			ie_inicio_vig_carencia,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			nr_seq_bonificacao,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_material,
			vl_mensalidade,
			ie_tipo_regra,
			cd_material,
			nr_seq_sca,
			nr_seq_tabela_sca,
			qt_item_lancamento,
			ie_adaptar_carencia_rede,
			nr_seq_prest_fornec,
			nr_seq_regra_dependencia,
			qt_lancamento,
			ie_forma_lancamento,
			ie_quantidade_prestador,
			ie_pagamento,
			ie_faturamento,
			ie_prestador_pgto,
			ds_historico,
			ie_tipo_atividade,
			qt_dias_venc_contrato,
			nr_seq_material_forn)
		(SELECT	nextval('pls_regra_lanc_aut_item_seq'),
			nr_sequencia_w,
			ie_situacao,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_tipo_carencia,
			qt_dias_carencia,
			ie_inicio_vig_carencia,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			nr_seq_bonificacao,
			cd_procedimento,
			ie_origem_proced,
			nr_seq_material,
			vl_mensalidade,
			ie_tipo_regra,
			cd_material,
			nr_seq_sca,
			nr_seq_tabela_sca,
			qt_item_lancamento,
			ie_adaptar_carencia_rede,
			nr_seq_prest_fornec,
			nr_seq_regra_dependencia,
			qt_lancamento,
			ie_forma_lancamento,
			ie_quantidade_prestador,
			ie_pagamento,
			ie_faturamento,
			ie_prestador_pgto,
			ds_historico,
			ie_tipo_atividade,
			qt_dias_venc_contrato,
			nr_seq_material_forn
		from	pls_regra_lanc_aut_item
		where	nr_sequencia	= nr_seq_regra_w);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_duplicar_regra_lanc_aut ( nr_seq_regra_p bigint, nm_usuario_p text) FROM PUBLIC;

