-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_autorizacao_episodio ( cd_convenio_p convenio.cd_convenio%TYPE, nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, nr_seq_estagio_p estagio_autorizacao.nr_sequencia%TYPE, ie_evento_p regra_gerar_autorizacao.ie_evento%TYPE ) AS $body$
DECLARE


    current_date_w              timestamp := clock_timestamp();
    min_age_default_w           CONSTANT integer := 0;
    max_age_default_w           CONSTANT integer := 999;
    active_status_w             CONSTANT varchar(1) := 'A';
    yes_value_w                 CONSTANT varchar(1) := 'S';
    current_days_w              CONSTANT autorizacao_convenio.ie_tipo_dia%TYPE := 'C';
    nr_sequencia_autor_w        autorizacao_convenio.nr_sequencia%TYPE;
    ie_tipo_dia_w               autorizacao_convenio.ie_tipo_dia%TYPE := current_days_w;
    ie_tipo_autorizacao_w       autorizacao_convenio.ie_tipo_autorizacao%TYPE;
    dt_inicio_vigencia_w        autorizacao_convenio.dt_inicio_vigencia%TYPE;
    dt_fim_vigencia_w           autorizacao_convenio.dt_fim_vigencia%TYPE;
    cd_tipo_acomodacao_w        tipo_acomodacao.cd_tipo_acomodacao%TYPE;
    cd_setor_resp_w             departamento_medico.cd_departamento%TYPE;
    nm_usuario_w                usuario.nm_usuario%TYPE;
    cd_estabelecimento_w        estabelecimento.cd_estabelecimento%TYPE;
    ie_tipo_atendimento_w       atendimento_paciente.ie_tipo_atendimento%TYPE;
    nr_seq_episodio_w           episodio_paciente.nr_sequencia%TYPE;
    nr_contract_partner_w       atendimento_paciente_aux.ds_contract_partner%TYPE;

    c01 CURSOR FOR
    SELECT
        rga.nr_sequencia,
        rga.ie_evento,
        rga.ie_tipo_atendimento,
        rga.cd_convenio,
        rga.cd_categoria,
        rga.cd_plano,
        rga.cd_setor_atendimento,
        rga.cd_classif_setor,
        rga.cd_tipo_acomodacao,
        coalesce(rga.qt_idade_min, min_age_default_w),
        coalesce(rga.qt_idade_max, max_age_default_w),
        rga.qt_hora_antecedencia,
        rga.dt_vigencia_inicial,
        rga.dt_vigencia_final,
        rga.hr_inicial,
        rga.hr_final,
        rga.dt_dia_semana,
        rga.ie_feriado,
        rga.ie_internado,
        rga.ie_tipo_autorizacao,
        rga.nr_seq_estagio,
        rga.nr_seq_tipo_avaliacao
    FROM
        regra_gerar_autorizacao rga
    WHERE
        ie_evento = ie_evento_p
        AND cd_convenio = cd_convenio_p
        AND cd_estabelecimento = cd_estabelecimento_w
        AND coalesce(ie_situacao, active_status_w) = active_status_w
        AND obter_se_regra_aut_lib_perfil(nr_sequencia) = yes_value_w
        AND NOT EXISTS (
                SELECT nr_sequencia
                FROM autorizacao_convenio
                WHERE cd_convenio = cd_convenio_p
                    AND nr_atendimento = nr_atendimento_p
                    AND nr_seq_estagio = nr_seq_estagio_p
                    AND nr_seq_regra_autor = rga.nr_sequencia)
    ORDER BY
        coalesce(cd_setor_atendimento, 0) DESC,
        coalesce(ie_tipo_atendimento, 0) DESC,
        ie_tipo_autorizacao DESC;

BEGIN
    nm_usuario_w := obter_usuario_ativo;
    cd_estabelecimento_w := obter_estabelecimento_ativo;

    SELECT
        MAX(acc.dt_final_vigencia),
        MAX(acc.dt_inicio_vigencia),
        MAX(ap.ie_tipo_atendimento),
        MAX(ap.nr_seq_episodio),
        MAX(apaux.ds_contract_partner)
    INTO STRICT
        dt_inicio_vigencia_w,
        dt_fim_vigencia_w,
        ie_tipo_atendimento_w,
        nr_seq_episodio_w,
        nr_contract_partner_w
    FROM
        atend_categoria_convenio acc
    INNER JOIN atendimento_paciente ap ON (acc.nr_atendimento = ap.nr_atendimento)
    INNER JOIN atendimento_paciente_aux apaux ON (apaux.nr_atendimento = ap.nr_atendimento)
    WHERE ap.nr_atendimento = nr_atendimento_p;

    SELECT
        nextval('autorizacao_convenio_seq')
    INTO STRICT nr_sequencia_autor_w
;

    <<loop_registered_rules>>
    FOR c01_w IN c01 LOOP
        INSERT INTO autorizacao_convenio(
            nr_sequencia,
            nr_atendimento,
            nr_seq_episodio,
            nr_contract_partner,
            nr_seq_regra_autor,
            cd_convenio,
            dt_inicio_vigencia,
            dt_fim_vigencia,
            dt_envio,
            dt_autorizacao,
            dt_atualizacao_nrec,
            dt_atualizacao,
            nm_usuario_nrec,
            nm_usuario,
            nm_responsavel,
            nr_seq_estagio,
            cd_tipo_acomodacao,
            cd_setor_resp,
            ie_tipo_autorizacao,
            ie_tipo_dia
        ) VALUES (
            nr_sequencia_autor_w,
            nr_atendimento_p,
            nr_seq_episodio_w,
            nr_contract_partner_w,
            c01_w.nr_sequencia,
            cd_convenio_p,
            dt_inicio_vigencia_w,
            dt_fim_vigencia_w,
            current_date_w,
            current_date_w,
            current_date_w,
            current_date_w,
            nm_usuario_w,
            nm_usuario_w,
            nm_usuario_w,
            nr_seq_estagio_p,
            cd_tipo_acomodacao_w,
            cd_setor_resp_w,
            ie_tipo_autorizacao_w,
            ie_tipo_dia_w
        );

        COMMIT;

    END LOOP loop_registered_rules;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_autorizacao_episodio ( cd_convenio_p convenio.cd_convenio%TYPE, nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, nr_seq_estagio_p estagio_autorizacao.nr_sequencia%TYPE, ie_evento_p regra_gerar_autorizacao.ie_evento%TYPE ) FROM PUBLIC;

