-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_pf_sib_pai ( cd_pessoa_fisica_p text, nm_mae_benef_p text, nm_beneficiario_p text, dt_nascimento_p timestamp, ie_sexo_p text, nr_cpf_p text, nr_pis_pasep_p text, nr_cartao_nac_sus_p text, cd_declaracao_nasc_vivo_p text, cd_nacionalidade_p text, nr_reg_geral_estrang_p text, nr_identidade_p text, ds_orgao_emissor_ci_p pessoa_fisica.ds_orgao_emissor_ci%type, nr_seq_pais_p text, nr_cep_p text, uf_p text, ds_municipio_p text, ds_logradouro_p text, sg_emissora_ci_p text, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


ds_erro_w			varchar(4000)	:= null;
ds_nao_informado_w		varchar(255)	:= null;
ds_invalido_w			varchar(255)	:= null;
qt_nao_informado_w		integer;
qt_invalido_w			integer;
qt_pessoa_fisica_w		integer;

cd_pais_sib_w			varchar(30);
ie_brasileiro_w			varchar(1);
cd_pessoa_resp_w		varchar(10);
nr_ident_resp_w			varchar(30);
ds_orgao_emissor_ci_resp_w	pessoa_fisica.ds_orgao_emissor_ci%type;
nr_reg_geral_estrang_resp_w	varchar(30);
cd_nacionalidade_w		smallint;
ie_brasileiro_resp_w		varchar(1);
qt_idade_w			integer;
cd_pessoa_mae_w			varchar(10);
cd_cep_w			varchar(15);
uf_w				compl_pessoa_fisica.sg_estado%type;
cd_municipio_ibge_w		varchar(6);
ds_logradouro_w			varchar(255);
qt_titular_w			bigint;
nm_contato_w			varchar(255);
dt_contratacao_w		timestamp;
ie_nome_benef_invalido_w	varchar(10);
ie_nome_mae_invalido_w		varchar(10);

procedure add_campo_mensagem(	ds_campo_p	text,
				ie_tipo_p	text) is
;
BEGIN
if (ie_tipo_p = 'N') then --Campo não informado
	if (length(ds_nao_informado_w||ds_campo_p) <= 253) then
		if (qt_nao_informado_w > 0) then
			ds_nao_informado_w	:= ds_nao_informado_w ||', '|| ds_campo_p;
		else
			ds_nao_informado_w	:= 'Os campos abaixo não foram informados:' || chr(13) || chr(10);
			ds_nao_informado_w	:= ds_nao_informado_w || ds_campo_p;
		end if;
		qt_nao_informado_w	:= qt_nao_informado_w + 1;
	end if;
elsif (ie_tipo_p = 'I') then --Informação inválida
	if (length(ds_invalido_w||ds_campo_p) <= 253) then
		if (qt_invalido_w > 0) then
			ds_invalido_w	:= ds_invalido_w ||', '|| ds_campo_p;
		else
			ds_invalido_w	:= 'Os campos abaixo estão inválidos:' || chr(13) || chr(10);
			ds_invalido_w	:= ds_invalido_w || ds_campo_p;
		end if;
		qt_invalido_w	:= qt_invalido_w + 1;
	end if;
end if;
end;

begin
qt_nao_informado_w	:= 0;
qt_invalido_w		:= 0;

select	count(1)
into STRICT	qt_pessoa_fisica_w
from	pessoa_fisica
where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

if (coalesce(nr_seq_pais_p,'0') <> '0') then
	select	cd_pais_sib
	into STRICT	cd_pais_sib_w
	from	pais
	where	nr_sequencia	= nr_seq_pais_p;
end if;

if (coalesce( cd_nacionalidade_p,'0') <> '0') then
	select	ie_brasileiro
	into STRICT	ie_brasileiro_w
	from	nacionalidade
	where	cd_nacionalidade = cd_nacionalidade_p;
end if;

--3 - Nome do Beneficiário não informado
if (coalesce(nm_beneficiario_p,'0') = '0') and (pls_obter_incosistencia_lib(3) = 'S') then
	add_campo_mensagem('Nome','N');
end if;

--4 - Data de Nasc. do Beneficiário não informado
if (coalesce(dt_nascimento_p::text, '') = '') and (pls_obter_incosistencia_lib(4) = 'S') then
	add_campo_mensagem('Data de nascimento','N');
else
	select	obter_idade(dt_nascimento_p,clock_timestamp(),'A')
	into STRICT	qt_idade_w
	;
end if;

--5 - Sexo do Beneficiário não informado
if (coalesce(ie_sexo_p,'0') = '0') and (pls_obter_incosistencia_lib(5) = 'S') then
	add_campo_mensagem('Sexo','N');
end if;

select	max(cd_pessoa_fisica_ref)
into STRICT	cd_pessoa_resp_w
from	compl_pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_p
and	ie_tipo_complemento = 3;

if (coalesce(cd_pessoa_resp_w,0) <> 0) then
	select	coalesce(max(nr_identidade),'0'),
		coalesce(max(ds_orgao_emissor_ci),'0'),
		coalesce(max(nr_reg_geral_estrang),'0')
	into STRICT	nr_ident_resp_w,
		ds_orgao_emissor_ci_resp_w,
		nr_reg_geral_estrang_resp_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_resp_w;
	
	if (coalesce(cd_nacionalidade_w,'0') <> '0') then
		select	ie_brasileiro
		into STRICT	ie_brasileiro_resp_w
		from	nacionalidade
		where	cd_nacionalidade = cd_nacionalidade_w;
	end if;
end if;

--6 - CPF, CNS, Pis/Pasep do Beneficiário não informado
if	((((coalesce(nr_cpf_p,'0') = '0') and (qt_idade_w < 60 AND qt_idade_w >= 18)) and (coalesce(nr_pis_pasep_p,'0') = '0') and (coalesce(nr_cartao_nac_sus_p,'0') = '0'))
	and (ie_brasileiro_w = 'S' or coalesce(cd_nacionalidade_p,'0') = '0')) or (ie_brasileiro_w = 'N' and coalesce(nr_reg_geral_estrang_p::text, '') = '') then
	
	select	count(1)
	into STRICT	qt_titular_w
	from	pls_segurado
	where	cd_pessoa_fisica = cd_pessoa_fisica_p
	and	coalesce(nr_seq_titular::text, '') = ''
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	coalesce(dt_rescisao::text, '') = '';
	
	if (qt_titular_w > 0) and (pls_obter_incosistencia_lib(6) = 'S') then
		add_campo_mensagem('CPF, CNS, Pis/Pasep','N');
	end if;
end if;

--7 - Documento de Identificação do Beneficiário não informado
if	(((ie_brasileiro_w = 'S' or coalesce(cd_nacionalidade_p,'0') = '0') and coalesce(nr_identidade_p,'0') = '0') or (ie_brasileiro_w = 'N' and coalesce(nr_reg_geral_estrang_p,'0') = '0')) and (pls_obter_incosistencia_lib(7) = 'S') then
	if (qt_idade_w < 18) and (cd_pessoa_resp_w <> 0) then
		if (nr_ident_resp_w = '0') then
			add_campo_mensagem('Documento de Identificação','N');
		end if;
	else
		add_campo_mensagem('Documento de Identificação','N');
	end if;
end if;

--aaschlote 12/03/2012 - OS 418682
if (coalesce(nr_identidade_p,'0') <> '0')  then
	--8 - Orgão Emissor do Documento de Identificação do beneficiário não informado
	if (coalesce(ds_orgao_emissor_ci_p,'0') = '0') and (pls_obter_incosistencia_lib(8) = 'S') then
		if (qt_idade_w < 18) and (cd_pessoa_resp_w <> 0) then
			if (ds_orgao_emissor_ci_resp_w = '0') then
				add_campo_mensagem('Orgão Emissor do Documento de Identificação','N');
			end if;
		else
			add_campo_mensagem('Orgão Emissor do Documento de Identificação','N');
		end if;
	end if;
	
	--9 - País Emissor do Documento de Identificação do beneficiário não informado
	if (coalesce(cd_pais_sib_w ,'0') = '0') and (pls_obter_incosistencia_lib(9) = 'S') then
		add_campo_mensagem('País Emissor do Documento de Identificação','N');
	end if;
	
	--UF Emissor do Documento de Identificação do beneficiário não informado
	if (coalesce(sg_emissora_ci_p::text, '') = '') and (pls_obter_incosistencia_lib(31) = 'S') then
		add_campo_mensagem('UF Emissor do Documento de Identificação','N');
	end if;
end if;

--24 - Número da declaração de nascido vivo não informado
if (coalesce(cd_declaracao_nasc_vivo_p::text, '') = '') and (trunc(dt_nascimento_p,'dd') >= to_date('01/01/2010','dd/mm/yyyy')) and (pls_obter_incosistencia_lib(24) = 'S') then
	add_campo_mensagem('Declaração de nascido vivo','N');
end if;

ie_nome_benef_invalido_w := pls_consistir_letra_unica_pf(nm_beneficiario_p);
if (coalesce(nm_mae_benef_p,'0') <> 'x') then
	ie_nome_mae_invalido_w	 := pls_consistir_letra_unica_pf(nm_mae_benef_p);
end if;

--28 - Nome do beneficiário ou da mãe inválido
if (ie_nome_mae_invalido_w = 'S') or (ie_nome_benef_invalido_w = 'S') and (pls_obter_incosistencia_lib(28) = 'S') then
	add_campo_mensagem('Nome do beneficiário ou da mãe','I');
end if;

--33 - Número da declaração de nascido vivo inválido
if (cd_declaracao_nasc_vivo_p IS NOT NULL AND cd_declaracao_nasc_vivo_p::text <> '') and (pls_obter_incosistencia_lib(33) = 'S') and
	((obter_se_somente_numero(cd_declaracao_nasc_vivo_p) = 'N') or (length(cd_declaracao_nasc_vivo_p) <> 11)) then
	add_campo_mensagem('Declaração de nascido vivo','I');
end if;

if (qt_nao_informado_w > 0) then
	ds_erro_w	:= ds_nao_informado_w;
end if;

if (qt_invalido_w > 0) and (length(ds_erro_w||ds_invalido_w) <= 250) then
	if (coalesce(ds_erro_w::text, '') = '') then
		ds_erro_w := ds_invalido_w;
	else
		ds_erro_w	:= ds_erro_w || chr(13) || chr(13) || chr(10) || chr(10) || ds_invalido_w;
	end if;
end if;

ds_retorno_p := substr(ds_erro_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_pf_sib_pai ( cd_pessoa_fisica_p text, nm_mae_benef_p text, nm_beneficiario_p text, dt_nascimento_p timestamp, ie_sexo_p text, nr_cpf_p text, nr_pis_pasep_p text, nr_cartao_nac_sus_p text, cd_declaracao_nasc_vivo_p text, cd_nacionalidade_p text, nr_reg_geral_estrang_p text, nr_identidade_p text, ds_orgao_emissor_ci_p pessoa_fisica.ds_orgao_emissor_ci%type, nr_seq_pais_p text, nr_cep_p text, uf_p text, ds_municipio_p text, ds_logradouro_p text, sg_emissora_ci_p text, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

