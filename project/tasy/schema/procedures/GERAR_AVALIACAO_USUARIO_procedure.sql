-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE lista AS (
	nm varchar(50),
	dt timestamp );


CREATE OR REPLACE PROCEDURE gerar_avaliacao_usuario ( dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
dt_fim_real_w		timestamp;
dt_cliente_teste_w	timestamp;
dt_recebimento_w	timestamp;
nm_usuario_exec_w	varchar(15);
qt_encerrada_w		bigint;
nr_seq_estagio_w	bigint;
qt_registro_w		bigint;
ie_referencia_w		varchar(15);
nr_seq_grupo_des_w	bigint;
dt_referencia_w		timestamp;
qt_mes_w		smallint;
dt_ref_inicial_w	timestamp	:= clock_timestamp() + interval '60 days';
qt_minuto_w		double precision;
qt_mes_01_w		double precision;
qt_mes_02_w		double precision;
qt_mes_03_w		double precision;
qt_mes_04_w		double precision;
qt_mes_05_w		double precision;
qt_mes_06_w		double precision;
qt_mes_07_w		double precision;
qt_mes_08_w		double precision;
qt_mes_09_w		double precision;
qt_mes_10_w		double precision;
qt_mes_11_w		double precision;
qt_mes_12_w		double precision;
qt_mes_corrente_w	double precision;
ie_ordem_w		smallint;
qt_controle_w		bigint:=0;
contador_w		bigint;

type myArray is table of lista index by integer;

ar_executores_w myArray;
ar_executores_vazio_w myArray;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.dt_fim_real,
	a.nr_seq_estagio,
	a.nr_seq_grupo_des
from	man_ordem_servico a
where	a.dt_ordem_servico between dt_inicial_p and dt_final_p
and exists (	select	1
		from	man_ordem_serv_estagio b,
			man_estagio_processo c
		where	a.nr_sequencia		= b.nr_seq_ordem
		and	b.nr_seq_estagio 	= c.nr_sequencia
		and	c.ie_desenv = 'S')

union

select	a.nr_sequencia,
	a.dt_fim_real,
	a.nr_seq_estagio,
	a.nr_seq_grupo_des
from	man_ordem_servico a
where	a.dt_fim_real between dt_inicial_p and dt_final_p
and exists (	select	1
		from	man_ordem_serv_estagio b,
			man_estagio_processo c
		where	a.nr_sequencia		= b.nr_seq_ordem
		and	b.nr_seq_estagio 	= c.nr_sequencia
		and	c.ie_desenv = 'S')

union

select	a.nr_sequencia,
	a.dt_fim_real,
	a.nr_seq_estagio,
	a.nr_seq_grupo_des
from	man_ordem_servico a
where	a.dt_ordem_servico between dt_inicial_p and dt_final_p
and not exists (	select	1
		from	man_ordem_serv_estagio b,
				man_estagio_processo c
		where	a.nr_sequencia		= b.nr_seq_ordem
		and	b.nr_seq_estagio 	= c.nr_sequencia
		and	c.ie_desenv = 'S')
and exists (	select	1
		from	man_ordem_serv_ativ b,
				usuario_grupo_des d,
				grupo_Desenvolvimento z
		where	a.nr_sequencia	  	= b.nr_seq_ordem_serv
		and 	a.nm_usuario_exec 	= d.nm_usuario_grupo
		and		d.nr_seq_grupo		= z.nr_sequencia
		and		z.nr_seq_gerencia	= 2);

/*Desenvolvimento*/

C02 CURSOR FOR
SELECT  a.nm_usuario_exec,
  min(coalesce(a.dt_recebimento, a.dt_atualizacao)),
  sum(c.qt_minuto) qt
from  man_ordem_serv_ativ c,
  man_ordem_servico_exec a
where  a.nr_seq_ordem    = nr_sequencia_w
and  c.nr_seq_ordem_serv   = nr_sequencia_w
and  c.nr_seq_ordem_serv  = a.nr_seq_ordem
and  a.nm_usuario_exec  = c.nm_usuario_exec
and  a.nm_usuario_exec  not in ('FastService','JavaService', 'PEPService','REPService','Defeito')
and exists (  SELECT  1
    from  usuario_grupo_des d,
        grupo_Desenvolvimento z,
        gerencia_wheb g
    where  c.nm_usuario_exec  = d.nm_usuario_grupo
    and    d.nr_seq_grupo    = z.nr_sequencia
    and    g.nr_sequencia = z.nr_seq_gerencia
    and    g.ie_area_gerencia in ('DES','IES','PDES','TEC'))
and exists (  select  1
    from  usuario_grupo_des b,
        grupo_Desenvolvimento z,
        gerencia_wheb g
    where  a.nm_usuario_exec  = b.nm_usuario_grupo
    and    b.nr_seq_grupo     = z.nr_sequencia
    and    g.nr_sequencia = z.nr_seq_gerencia
    and    g.ie_area_gerencia in ('DES','IES','PDES','TEC'))
group by a.nm_usuario_exec

union

select   a.nm_usuario_exec,
  coalesce(a.dt_recebimento, a.dt_atualizacao),
  sum(0) qt
from   man_ordem_servico_exec a
where  a.nr_seq_ordem   = nr_sequencia_w
and    not exists ( select 1 from man_ordem_serv_ativ x where x.nr_seq_ordem_serv = a.nr_seq_ordem and  x.nr_seq_ordem_serv   = nr_sequencia_w)
and    a.nm_usuario_exec not in ('FastService','JavaService', 'PEPService','REPService','Defeito')
and exists (  select 1
    from   man_ordem_servico d,
      man_estagio_processo c
    where  d.nr_sequencia = a.nr_seq_ordem
    and  d.nr_seq_estagio =c.nr_sequencia
    and  c.ie_desenv = 'S')
and exists (  select 1
    from   usuario_grupo_des b,
        grupo_Desenvolvimento z,
        gerencia_wheb g
    where   a.nm_usuario_exec   = b.nm_usuario_grupo
    and   b.nr_seq_grupo     = z.nr_sequencia
    and    g.nr_sequencia = z.nr_seq_gerencia
    and    g.ie_area_gerencia in ('DES','IES','PDES','TEC'))
group by a.nm_usuario_exec,
  coalesce(a.dt_recebimento, a.dt_atualizacao)
order by 3, 2;

/*Tecnologia
UNIONS
1 - Verifica se usuário executor e com maior tempo de atividade realizada
2 - Verificar se usuário possui atividade realizada, e OS passou pela Tecnologia porém não está como executor previsto
3 - Ordens que o usuário recebeu porém não trabalhou ainda.
*/
C03 CURSOR FOR
SELECT	a.nm_usuario_exec,
	a.dt_recebimento,
	sum(c.qt_minuto) qt
from	man_ordem_serv_ativ c,
	man_ordem_servico_exec a
where	a.nr_seq_ordem		= nr_sequencia_w
and	c.nr_seq_ordem_serv 	= nr_sequencia_w
and	c.nr_seq_ordem_serv	= a.nr_seq_ordem
and	a.nm_usuario_exec	= c.nm_usuario_exec
and exists (	select	1
		from	usuario_grupo_des d,
				grupo_Desenvolvimento z
		where	c.nm_usuario_exec	= d.nm_usuario_grupo
		and		d.nr_seq_grupo		= z.nr_sequencia
		and		z.nr_seq_gerencia = 2)
and exists (	select	1
		from	usuario_grupo_des b,
				grupo_Desenvolvimento z
		where	a.nm_usuario_exec	= b.nm_usuario_grupo
		and		b.nr_seq_grupo = z.nr_Sequencia
		and		z.nr_seq_gerencia = 2)
group by a.nm_usuario_exec,
	a.dt_recebimento

union

select	b.nm_usuario_exec,
	b.dt_atividade,
	sum(b.qt_minuto) qt
from	man_ordem_serv_ativ b,
	man_ordem_servico a
where	a.nr_sequencia = b.nr_seq_ordem_serv
and	a.nr_sequencia = nr_sequencia_w
and	exists (select 1
		from 	usuario_grupo_des d,
				grupo_Desenvolvimento z
		where	d.nr_seq_grupo = z.nr_sequencia
		and		z.nr_seq_gerencia = 2
		and		b.nm_usuario_exec = d.nm_usuario_grupo)
and not exists (	select	1
		from	usuario_grupo_des d,
				man_ordem_servico_exec c,
				grupo_Desenvolvimento z
		where	a.nr_sequencia 		= c.nr_seq_ordem
		and		c.nm_usuario_exec 	= d.nm_usuario_grupo
		and		b.nm_usuario_exec	= c.nm_usuario_exec
		and		d.nr_seq_grupo		= z.nr_sequencia
		and		z.nr_seq_gerencia	= 2)
and	exists (	select	1
		from	man_ordem_serv_estagio f,
			man_estagio_processo c
		where	a.nr_sequencia = f.nr_seq_ordem
		and	f.nr_seq_estagio = c.nr_sequencia
		and	c.ie_tecnologia = 'S')
group by b.nm_usuario_exec,
	b.dt_atividade

union

select 	a.nm_usuario_exec,
	a.dt_recebimento,
	sum(0) qt
from 	man_ordem_servico_exec a
where	a.nr_seq_ordem 	= nr_sequencia_w
and exists (	select 1
		from 	man_ordem_servico d
		where	d.nr_sequencia = a.nr_seq_ordem
		and	exists (select 1 from man_estagio_processo z where z.nr_sequencia = d.nr_seq_estagio and z.ie_tecnologia = 'S'))
and exists (	select 1
		from 	usuario_grupo_des b,
				grupo_Desenvolvimento z
		where 	a.nm_usuario_exec = b.nm_usuario_grupo
		and		b.nr_seq_grupo = z.nr_sequencia
		and		z.nr_seq_gerencia = 2)
group by a.nm_usuario_exec,
	a.dt_recebimento
order by 3, 2;

C05 CURSOR FOR
SELECT	sum(qt_ordem),
	ie_referencia,
	nm_usuario,
	trunc(dt_referencia,'mm') dt,
	nr_seq_grupo_des,
	CASE WHEN ie_referencia='R' THEN 5 WHEN ie_referencia='C' THEN 10 WHEN ie_referencia='E' THEN 15 WHEN ie_referencia='ER' THEN 20 WHEN ie_referencia='PR' THEN 25 END
from	w_avaliacao_usuario
where	dt_referencia between dt_inicial_p and dt_final_p
and	nm_usuario_cor = nm_usuario_p
group by ie_referencia,
	nm_usuario,
	trunc(dt_referencia,'mm'),
	nr_seq_grupo_des,
	CASE WHEN ie_referencia='R' THEN 5 WHEN ie_referencia='C' THEN 10 WHEN ie_referencia='E' THEN 15 WHEN ie_referencia='ER' THEN 20 WHEN ie_referencia='PR' THEN 25 END 
order by dt desc;

C06 CURSOR FOR
SELECT	c.dt_liberacao,
	b.nm_usuario,
	a.nr_seq_grupo_des,
	c.nr_sequencia
from	usuario b,
	man_doc_erro a,
	os_erro_gerencia_v c
where	c.dt_liberacao between dt_inicial_p and dt_final_p
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	c.NR_SEQUENCIA 		= a.nr_seq_ordem
and	c.cd_pessoa_fisica	= b.cd_pessoa_fisica;

C07 CURSOR FOR
SELECT	nm_usuario,
	trunc(dt_referencia,'mm'),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_01  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_01  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_02  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_02  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_03  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_03  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_04  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_04  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_05  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_05  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_06  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_06  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_07  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_07  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_08  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_08  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_09  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_09  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_10  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_10  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_11  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_11  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_12  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_12  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_corrente  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_corrente  ELSE 0 END )))::numeric,2)
from	w_avaliacao_usuario
where	nm_usuario_cor = nm_usuario_p
group by nm_usuario, trunc(dt_referencia,'mm')
order by nm_usuario;

C08 CURSOR FOR
SELECT	nr_seq_grupo_des,
	trunc(dt_referencia,'mm'),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_01  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_01  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_02  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_02  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_03  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_03  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_04  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_04  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_05  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_05  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_06  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_06  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_07  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_07  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_08  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_08  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_09  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_09  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_10  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_10  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_11  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_11  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_12  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_12  ELSE 0 END )))::numeric,2),
	round((dividir(SUM(CASE WHEN ie_referencia='ER' THEN qt_mes_corrente  ELSE 0 END ) * 100, SUM(CASE WHEN ie_referencia='R' THEN qt_mes_corrente  ELSE 0 END )))::numeric,2)
from	w_avaliacao_usuario
where	nm_usuario_cor = nm_usuario_p
and	1 = 2
group by nr_seq_grupo_des, trunc(dt_referencia,'mm')
order by nr_seq_grupo_des;



BEGIN
delete	FROM w_avaliacao_usuario
where	nm_usuario_cor = nm_usuario_p;

/*Desenvolvimento*/

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	dt_fim_real_w,
	nr_seq_estagio_w,
	nr_seq_grupo_des_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	ar_executores_w := ar_executores_vazio_w;
	qt_controle_w := 0;

	nm_usuario_exec_w := null;
	dt_recebimento_w := null;

	/*Desenvolvimento*/

	open C02;
	loop
	fetch C02 into
		nm_usuario_exec_w,
		dt_recebimento_w,
		qt_minuto_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ar_executores_w[qt_controle_w].nm := nm_usuario_exec_w;
		ar_executores_w[qt_controle_w].dt := dt_recebimento_w;
		qt_controle_w := qt_controle_w + 1;
		end;
	end loop;
	close C02;

	/*Verifica se existe dois executores na OS e caso o executor com maior tempo de execução for o analista, irá retira-lo e deixar a OS para o programador com maior tempo de execução*/

	if (ar_executores_w.count > 1 ) then
		for contador_w IN REVERSE ar_executores_w.count-1..0 loop
			select 	count(*)
			into STRICT	qt_controle_w
			from	grupo_desenvolvimento a,
				usuario_grupo_des b
			where	a.nr_sequencia = b.nr_seq_grupo
			and	b.ie_funcao_usuario in ('S','M','N')
			and	nm_usuario_grupo = ar_executores_w[contador_w].nm;

			if ( qt_controle_w = 0 ) then
				nm_usuario_exec_w := ar_executores_w[contador_w].nm;
				dt_recebimento_w := ar_executores_w[contador_w].dt;
				exit;
			end if;
		end loop;
	end if;

	if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_ordem,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem,
			nr_seq_ordem_serv)
		values (	dt_recebimento_w,
			1,
			'R',
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			5,
			nr_sequencia_w);
		/*PEga última data que a OS ficou em um estágio de desenvolvimento*/

		select	max(a.dt_atualizacao)
		into STRICT	dt_cliente_teste_w
		from	man_ordem_serv_estagio a,
				man_ordem_Servico c
		where	a.nr_seq_ordem	= nr_sequencia_w
		and		c.nr_Sequencia = a.nr_Seq_ordem
		and		exists (
				SELECT 1
				from	man_Estagio_processo b
				where 	b.nr_sequencia = a.nr_seq_estagio
				and		b.ie_desenv = 'S'
				and	coalesce(b.ie_tecnologia,'N') = 'N')
		and		not exists (
				SELECT 1
				from	man_Estagio_processo b
				where 	b.nr_sequencia = c.nr_seq_estagio
				and		b.ie_desenv = 'S'
				and	coalesce(b.ie_tecnologia,'N') = 'N');


		/*
		Pega as OS que não foram para cliente teste, porém foram encerradas ou para o estagio de teste.
		*/
		if (coalesce(dt_cliente_teste_w::text, '') = '') then
			select	max(dt_atualizacao)
			into STRICT	dt_cliente_teste_w
			from	man_ordem_serv_estagio
			where	nr_seq_ordem	= nr_sequencia_w
			and	nr_seq_estagio	in (511,811,9,791,1234,1071);
		end if;

		if (dt_cliente_teste_w IS NOT NULL AND dt_cliente_teste_w::text <> '') then
			insert into w_avaliacao_usuario(
				dt_referencia,
				qt_ordem,
				ie_referencia,
				nm_usuario,
				nm_usuario_cor,
				nr_seq_grupo_des,
				ie_ordem,
				nr_seq_ordem_serv)
			values (	dt_cliente_teste_w,
				1,
				'C',
				nm_usuario_exec_w,
				nm_usuario_p,
				nr_seq_grupo_des_w,
				10,
				nr_sequencia_w);

		end if;

		if (dt_fim_real_w IS NOT NULL AND dt_fim_real_w::text <> '') then
			insert into w_avaliacao_usuario(
				dt_referencia,
				qt_ordem,
				ie_referencia,
				nm_usuario,
				nm_usuario_cor,
				nr_seq_grupo_des,
				ie_ordem,
				nr_seq_ordem_serv)
			values (	dt_fim_real_w,
				1,
				'E',
				nm_usuario_exec_w,
				nm_usuario_p,
				nr_seq_grupo_des_w,
				15,
				nr_sequencia_w);
		end if;
	end if;

	ar_executores_w := ar_executores_vazio_w;
	qt_controle_w := 0;

	nm_usuario_exec_w := null;
	dt_recebimento_w := null;
	/*Tecnologia*/

	open C03;
	loop
	fetch C03 into
		nm_usuario_exec_w,
		dt_recebimento_w,
		qt_minuto_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ar_executores_w[qt_controle_w].nm := nm_usuario_exec_w;
		ar_executores_w[qt_controle_w].dt := dt_recebimento_w;
		qt_controle_w := qt_controle_w + 1;
		end;
	end loop;
	close C03;

	/*Verifica se existe dois executores na OS e caso o executor com maior tempo de execução for o analista, irá retira-lo e deixar a OS para o programador com maior tempo de execução*/

	if (ar_executores_w.count > 1 ) then
		FOR contador_w IN REVERSE ar_executores_w.count-1..0 loop
			select 	count(*)
			into STRICT	qt_controle_w
			from	grupo_desenvolvimento a,
				usuario_grupo_des b
			where	a.nr_sequencia = b.nr_seq_grupo
			and	b.ie_funcao_usuario in ('S','M','N')
			and	nm_usuario_grupo = ar_executores_w[contador_w].nm;
			if ( qt_controle_w = 0 ) then
				nm_usuario_exec_w := ar_executores_w[contador_w].nm;
				dt_recebimento_w := ar_executores_w[contador_w].dt;
				exit;
			end if;

		end loop;
	end if;


	if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then

		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_ordem,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem,
			nr_seq_ordem_serv)
		values (	dt_recebimento_w,
			1,
			'R',
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			5,
			nr_sequencia_w);

		/*Pega última data que a OS ficou em um estágio de tecnologia*/

		select	max(a.dt_atualizacao)
		into STRICT	dt_cliente_teste_w
		from	man_ordem_serv_estagio a,
				man_ordem_Servico c
		where	a.nr_seq_ordem	= nr_sequencia_w
		and		c.nr_Sequencia = a.nr_Seq_ordem
		and		exists (
				SELECT 1
				from	man_Estagio_processo b
				where 	b.nr_sequencia = a.nr_seq_estagio
				and	b.ie_tecnologia = 'S')
		and		not exists (
				SELECT 1
				from	man_Estagio_processo b
				where 	b.nr_sequencia = c.nr_seq_estagio
				and	b.ie_tecnologia = 'S');

		if (dt_cliente_teste_w IS NOT NULL AND dt_cliente_teste_w::text <> '') then
			insert into w_avaliacao_usuario(
				dt_referencia,
				qt_ordem,
				ie_referencia,
				nm_usuario,
				nm_usuario_cor,
				nr_seq_grupo_des,
				ie_ordem,
				nr_seq_ordem_serv)
			values (	dt_cliente_teste_w,
				1,
				'C',
				nm_usuario_exec_w,
				nm_usuario_p,
				nr_seq_grupo_des_w,
				10,
				nr_sequencia_w);

		end if;

		if (dt_fim_real_w IS NOT NULL AND dt_fim_real_w::text <> '') then
			insert into w_avaliacao_usuario(
				dt_referencia,
				qt_ordem,
				ie_referencia,
				nm_usuario,
				nm_usuario_cor,
				nr_seq_grupo_des,
				ie_ordem,
				nr_seq_ordem_serv)
			values (	dt_fim_real_w,
				1,
				'E',
				nm_usuario_exec_w,
				nm_usuario_p,
				nr_seq_grupo_des_w,
				15,
				nr_sequencia_w);
		end if;

		commit;

	end if;
	end;
end loop;
close C01;


open C06;
loop
fetch C06 into
	dt_recebimento_w,
	nm_usuario_exec_w,
	nr_seq_grupo_des_w,
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin
	insert into w_avaliacao_usuario(
		dt_referencia,
		qt_ordem,
		ie_referencia,
		nm_usuario,
		nm_usuario_cor,
		nr_seq_grupo_des,
		ie_ordem,
		nr_seq_ordem_serv)
	values (	dt_recebimento_w,
		1,
		'ER',
		nm_usuario_exec_w,
		nm_usuario_p,
		nr_seq_grupo_des_w,
		20,
		nr_sequencia_w);
	end;
end loop;
close C06;

qt_mes_w	:= 0;

open C05;
loop
fetch C05 into
	qt_registro_w,
	ie_referencia_w,
	nm_usuario_exec_w,
	dt_referencia_w,
	nr_seq_grupo_des_w,
	ie_ordem_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin
	if (dt_referencia_w < dt_ref_inicial_w) then
		dt_ref_inicial_w	:= dt_referencia_w;
		qt_mes_w			:= qt_mes_w + 1;
	end if;

	if (qt_mes_w = 1) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_corrente,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 2) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_12,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 3) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_11,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 4) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_10,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 5) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_09,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 6) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_08,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 7) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_07,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 8) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_06,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 9) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_05,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 10) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_04,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 11) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_03,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 12) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_02,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	elsif (qt_mes_w = 13) then
		insert into w_avaliacao_usuario(
			dt_referencia,
			qt_mes_01,
			ie_referencia,
			nm_usuario,
			nm_usuario_cor,
			nr_seq_grupo_des,
			ie_ordem)
		values (	dt_referencia_w,
			qt_registro_w,
			ie_referencia_w,
			nm_usuario_exec_w,
			nm_usuario_p,
			nr_seq_grupo_des_w,
			ie_ordem_w);
	end if;

	end;
end loop;
close C05;

open C07;
loop
fetch C07 into
	nm_usuario_exec_w,
	dt_referencia_w,
	qt_mes_01_w,
	qt_mes_02_w,
	qt_mes_03_w,
	qt_mes_04_w,
	qt_mes_05_w,
	qt_mes_06_w,
	qt_mes_07_w,
	qt_mes_08_w,
	qt_mes_09_w,
	qt_mes_10_w,
	qt_mes_11_w,
	qt_mes_12_w,
	qt_mes_corrente_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
	insert into w_avaliacao_usuario(
		nm_usuario,
		dt_referencia,
		qt_mes_01,
		qt_mes_02,
		qt_mes_03,
		qt_mes_04,
		qt_mes_05,
		qt_mes_06,
		qt_mes_07,
		qt_mes_08,
		qt_mes_09,
		qt_mes_10,
		qt_mes_11,
		qt_mes_12,
		qt_mes_corrente,
		nm_usuario_cor,
		ie_referencia,
		ie_ordem)
	values (	nm_usuario_exec_w,
		dt_referencia_w,
		qt_mes_01_w,
		qt_mes_02_w,
		qt_mes_03_w,
		qt_mes_04_w,
		qt_mes_05_w,
		qt_mes_06_w,
		qt_mes_07_w,
		qt_mes_08_w,
		qt_mes_09_w,
		qt_mes_10_w,
		qt_mes_11_w,
		qt_mes_12_w,
		qt_mes_corrente_w,
		nm_usuario_p,
		'PR',
		25);
	end;
end loop;
close C07;

open C08;
loop
fetch C08 into
	nr_seq_grupo_des_w,
	dt_referencia_w,
	qt_mes_01_w,
	qt_mes_02_w,
	qt_mes_03_w,
	qt_mes_04_w,
	qt_mes_05_w,
	qt_mes_06_w,
	qt_mes_07_w,
	qt_mes_08_w,
	qt_mes_09_w,
	qt_mes_10_w,
	qt_mes_11_w,
	qt_mes_12_w,
	qt_mes_corrente_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	begin
	insert into w_avaliacao_usuario(
		nr_seq_grupo_des,
		dt_referencia,
		qt_mes_01,
		qt_mes_02,
		qt_mes_03,
		qt_mes_04,
		qt_mes_05,
		qt_mes_06,
		qt_mes_07,
		qt_mes_08,
		qt_mes_09,
		qt_mes_10,
		qt_mes_11,
		qt_mes_12,
		qt_mes_corrente,
		nm_usuario_cor,
		ie_referencia,
		ie_ordem)
	values (	nr_seq_grupo_des_w,
		dt_referencia_w,
		qt_mes_01_w,
		qt_mes_02_w,
		qt_mes_03_w,
		qt_mes_04_w,
		qt_mes_05_w,
		qt_mes_06_w,
		qt_mes_07_w,
		qt_mes_08_w,
		qt_mes_09_w,
		qt_mes_10_w,
		qt_mes_11_w,
		qt_mes_12_w,
		qt_mes_corrente_w,
		nm_usuario_p,
		'PR',
		25);
	end;
end loop;
close C08;

commit;

/*delete from w_avaliacao_usuario
where	nm_usuario_cor	= nm_usuario_p
and	qt_ordem is not null;
*/
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_avaliacao_usuario ( dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text) FROM PUBLIC;

