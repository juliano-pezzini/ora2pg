-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (nm_coluna_w varchar(255));


CREATE OR REPLACE PROCEDURE gerar_horarios_adep_lab (cd_estabelecimento_p bigint, nr_atendimento_p bigint, qt_hora_anterior_p bigint, qt_hora_adicional_p bigint, qt_hora_prescricao_p bigint, ie_horario_realizado_p text, ie_horario_suspenso_p text, dt_consulta_p timestamp, nm_usuario_p text) AS $body$
DECLARE


/* vetor */

type vetor is table of colunas index by integer;

/* globais */

vetor_w		vetor;
ivet			integer;
ind			integer;
nr_seq_adep_w		bigint;
ds_update_w		varchar(1000);
--dt_inicial_w	varchar2(19);
--dt_final_w		varchar2(19);
dt_inicial_w		timestamp;
dt_final_w		timestamp;

/* itens */

ds_horario_w		varchar(19);
dt_order_by_w		timestamp;
ie_tipo_w		varchar(1);
ie_acm_sn_w		varchar(1);
ie_suspenso_w		varchar(1);
ie_status_item_w	varchar(2);
nr_prescricao_w	bigint;
nr_seq_item_w		bigint;
cd_item_w		varchar(15);
ie_exibe_suspenso_w	varchar(15);
ds_item_w		varchar(240);
cd_intervalo_w	varchar(7);
ds_prescricao_w	varchar(240);

/* horários */

nr_seq_hor_w		bigint;
ie_status_w		varchar(1);

ie_data_proc_w		varchar(15);
dt_validade_prescr_w	timestamp;
ie_pendente_liberacao_w	varchar(1);
ie_exibir_col_pend_w	varchar(1);

/* obter horários itens */

c01 CURSOR FOR
SELECT	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario,
	c.dt_horario dt_order_by
from	prescr_proc_hor c,
	prescr_procedimento b,
	prescr_medica a
where	c.nr_prescricao = b.nr_prescricao
and	c.nr_seq_procedimento = b.nr_sequencia
and	b.nr_prescricao = a.nr_prescricao
--and	a.dt_liberacao is not null
and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '')
and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S'
and	coalesce(a.ie_adep,'S') = 'S'
and	coalesce(b.nr_seq_solic_sangue::text, '') = ''
and	coalesce(b.nr_seq_derivado::text, '') = ''
and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
and	coalesce(c.ie_situacao,'A') = 'A'
and	a.nr_atendimento = nr_atendimento_p
and	(((coalesce(dt_validade_prescr_w::text, '') = '') and (a.dt_validade_prescr > clock_timestamp() - qt_hora_prescricao_p/24)) or (a.dt_validade_prescr > dt_validade_prescr_w))
--and	c.dt_horario between to_date(dt_inicial_w,'dd/mm/yyyy hh24:mi:ss') and to_date(dt_final_w,'dd/mm/yyyy hh24:mi:ss')
and	c.dt_horario between dt_inicial_w and dt_final_w
and	((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> ''))
and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S'))
and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S'))
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
group by
	c.dt_horario
order by
	2;

/* obter itens */

c02 CURSOR FOR
SELECT	'P' ie_tipo_item,
	a.nr_prescricao nr_prescricao,
	b.nr_sequencia nr_seq_item,
	CASE WHEN coalesce(b.ie_acm,'N')='S' THEN  'S'  ELSE CASE WHEN coalesce(b.ie_se_necessario,'N')='S' THEN  'S'  ELSE 'N' END  END  ie_acm_sn,
	coalesce(b.ie_suspenso,'N') ie_suspenso,
	substr(obter_status_item_prescr(a.nr_prescricao, b.nr_sequencia, 'P'),1,2) ie_status_item,
	to_char(b.cd_procedimento) cd_item,
	substr(obter_material_exame_lab(null, b.cd_material_exame,3),1,240) ds_item,
	b.cd_intervalo cd_intervalo,
	CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240)  ELSE substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240) END  END  ds_prescricao,
	'' ie_pendente_liberacao
from	prescr_proc_hor c,
	prescr_procedimento b,
	prescr_medica a
where	c.nr_prescricao = b.nr_prescricao
and	c.nr_seq_procedimento = b.nr_sequencia
and	b.nr_prescricao = a.nr_prescricao
and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '')
--and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S'
and	coalesce(a.ie_adep,'S') = 'S'
and	coalesce(c.ie_situacao,'A') = 'A'
and	coalesce(b.nr_seq_solic_sangue::text, '') = ''
and	coalesce(b.nr_seq_derivado::text, '') = ''
and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
and	a.nr_atendimento = nr_atendimento_p
and	(((coalesce(dt_validade_prescr_w::text, '') = '') and (a.dt_validade_prescr > clock_timestamp() - qt_hora_prescricao_p/24)) or (a.dt_validade_prescr > dt_validade_prescr_w))
and	((c.dt_horario between dt_inicial_w and dt_final_w) or
	(((coalesce(b.ie_acm,'N') = 'S') or (coalesce(b.ie_se_necessario,'N') = 'S')) and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_w,dt_final_w) = 'S')))
and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S'))
and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S'))
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S'
and	((ie_exibir_col_pend_w = 'N') or
	 ((	select 	coalesce(max('S'),'N')
		from	prescr_proc_hor d
		where	d.nr_prescricao = a.nr_prescricao
		and	Obter_se_horario_liberado(d.dt_lib_horario, d.dt_horario) = 'S') = 'S'))
group by
	'P',
	a.nr_prescricao,
	b.nr_sequencia,
	b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_material_exame,
	b.nr_seq_exame,
	b.cd_intervalo,
	b.ie_acm,
	b.ie_se_necessario,
	b.ie_suspenso,
	''

union

select	'P' ie_tipo_item,
	a.nr_prescricao nr_prescricao,
	b.nr_sequencia nr_seq_item,
	CASE WHEN coalesce(b.ie_acm,'N')='S' THEN  'S'  ELSE CASE WHEN coalesce(b.ie_se_necessario,'N')='S' THEN  'S'  ELSE 'N' END  END  ie_acm_sn,
	coalesce(b.ie_suspenso,'N') ie_suspenso,
	substr(obter_status_item_prescr(a.nr_prescricao, b.nr_sequencia, 'P'),1,2) ie_status_item,
	to_char(b.cd_procedimento) cd_item,
	substr(obter_material_exame_lab(null, b.cd_material_exame,3),1,240) ds_item,
	b.cd_intervalo cd_intervalo,
	CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240)  ELSE substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240) END  END  ds_prescricao,
	CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN  'E'  ELSE CASE WHEN coalesce(a.dt_liberacao_farmacia::text, '') = '' THEN  'F'  ELSE '' END  END  ie_pendente_liberacao
from	prescr_procedimento b,
	prescr_medica a
where	b.nr_prescricao = a.nr_prescricao
and	ie_exibir_col_pend_w = 'S'
and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S'
and	coalesce(a.ie_adep,'S') = 'S'
and	coalesce(b.nr_seq_solic_sangue::text, '') = ''
and	coalesce(b.nr_seq_derivado::text, '') = ''
and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
and	a.nr_atendimento = nr_atendimento_p
and	(((ie_horario_suspenso_p = 'N') and (coalesce(b.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S'))
and	(((coalesce(dt_validade_prescr_w::text, '') = '') and (a.dt_validade_prescr > clock_timestamp() - qt_hora_prescricao_p/24)) or (a.dt_validade_prescr > dt_validade_prescr_w))
and	((	select 	coalesce(max('S'),'N')
		from	prescr_proc_hor d
		where	d.nr_prescricao = a.nr_prescricao
		and	Obter_se_horario_liberado(d.dt_lib_horario, d.dt_horario) = 'S') = 'N')
group by
	'P',
	CASE WHEN coalesce(a.dt_liberacao::text, '') = '' THEN  'E'  ELSE CASE WHEN coalesce(a.dt_liberacao_farmacia::text, '') = '' THEN  'F'  ELSE '' END  END ,
	a.nr_prescricao,
	b.nr_sequencia,
	b.cd_procedimento,
	b.ie_origem_proced,
	b.cd_material_exame,
	b.nr_seq_exame,
	b.cd_intervalo,
	b.ie_acm,
	b.ie_se_necessario,
	b.ie_suspenso
order by
	1, 2, 3, 6, 7;

/* obter itens x horários */

c03 CURSOR FOR
SELECT	'P' ie_tipo_item,
	a.nr_prescricao nr_prescricao,
	b.nr_sequencia nr_seq_item,
	to_char(b.cd_procedimento) cd_item,
	c.nr_sequencia nr_seq_hor,
	to_char(c.dt_horario,'dd/mm/yyyy hh24:mi:ss') ds_horario,
	substr(obter_status_hor_prescr(c.nr_sequencia, 'P'),1,1) ie_status,
	CASE WHEN b.ie_se_necessario='S' THEN  'SN ' || substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240)  ELSE CASE WHEN b.ie_acm='S' THEN  'ACM ' || substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240)  ELSE substr(obter_desc_exame_lab(b.nr_seq_exame, null, b.cd_procedimento, b.ie_origem_proced),1,240) END  END  ds_prescricao
from	prescr_proc_hor c,
	prescr_procedimento b,
	prescr_medica a
where	c.nr_prescricao = b.nr_prescricao
and	c.nr_seq_procedimento = b.nr_sequencia
and	b.nr_prescricao = a.nr_prescricao
--and	a.dt_liberacao is not null
and	(obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w) IS NOT NULL AND (obter_data_lib_proc_adep(a.dt_liberacao, a.dt_liberacao_medico, ie_data_proc_w))::text <> '')
and	obter_se_exibir_adep_suspensos(b.dt_suspensao, ie_exibe_suspenso_w) = 'S'
and	coalesce(a.ie_adep,'S') = 'S'
and	coalesce(c.ie_situacao,'A') = 'A'
and	coalesce(b.nr_seq_solic_sangue::text, '') = ''
and	coalesce(b.nr_seq_derivado::text, '') = ''
and	(b.nr_seq_exame IS NOT NULL AND b.nr_seq_exame::text <> '')
and	a.nr_atendimento = nr_atendimento_p
and	(((coalesce(dt_validade_prescr_w::text, '') = '') and (a.dt_validade_prescr > clock_timestamp() - qt_hora_prescricao_p/24)) or (a.dt_validade_prescr > dt_validade_prescr_w))
and	((coalesce(c.ie_horario_especial,'N') = 'N') or (c.dt_fim_horario IS NOT NULL AND c.dt_fim_horario::text <> ''))
and	(((ie_horario_realizado_p = 'N') and (coalesce(c.dt_fim_horario::text, '') = '')) or (ie_horario_realizado_p = 'S'))
and	(((ie_horario_suspenso_p = 'N') and (coalesce(c.dt_suspensao::text, '') = '')) or (ie_horario_suspenso_p = 'S'))
and	c.dt_horario = to_date(vetor_w[ind].nm_coluna_w,'dd/mm/yyyy hh24:mi:ss')
and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S';


BEGIN

ie_data_proc_w := obter_param_usuario(924, 223, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_data_proc_w);
ie_exibe_suspenso_w := obter_param_usuario(1113, 117, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exibe_suspenso_w);
ie_exibir_col_pend_w := obter_param_usuario(1113, 154, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exibir_col_pend_w);

/* limpar tabela temporária x usuário */

delete	from w_adep
where	nm_usuario = nm_usuario_p;

if (coalesce(dt_consulta_p::text, '') = '') then

	if (qt_hora_anterior_p > 0) then
		select	to_date(to_char(trunc(clock_timestamp() - qt_hora_anterior_p/24, 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
		into STRICT	dt_inicial_w
		;
	else
		select	to_date(to_char(trunc(clock_timestamp(), 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
		into STRICT	dt_inicial_w
		;
	end if;

	if (qt_hora_adicional_p > 0) then
		select	to_date(to_char(trunc(clock_timestamp() + qt_hora_adicional_p/24, 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
		into STRICT	dt_final_w
		;
	else
		select	to_date(to_char(trunc(clock_timestamp(), 'hh24'), 'dd/mm/yyyy hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
		into STRICT	dt_final_w
		;
	end if;

	dt_validade_prescr_w := null;
else
	dt_inicial_w := dt_consulta_p;
	dt_final_w := dt_consulta_p + (qt_hora_adicional_p/24);
	dt_validade_prescr_w := dt_consulta_p;

end if;

/* carregar vetor horários */

ivet := 0;
open c01;
loop
fetch c01 into	ds_horario_w,
			dt_order_by_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ivet := ivet + 1;
	vetor_w[ivet].nm_coluna_w := ds_horario_w;
	end;
end loop;
close c01;

/* completar vetor horários, se necessário */

ind := ivet;
while(ind < 40) loop
	begin
	ind := ind + 1;
	vetor_w[ind].nm_coluna_w := null;
	end;
end loop;

/* gerar horários */

select	nextval('w_adep_seq')
into STRICT	nr_seq_adep_w
;

insert into w_adep(
			nr_sequencia,
			nm_usuario,
			ie_tipo_item,
			ie_acm_sn,
			ie_suspenso,
			ie_status_item,
			nr_prescricao,
			nr_seq_item,
			cd_item,
			ds_item,
			ds_prescricao,
			nr_prescricoes,
			ie_pendente_liberacao,
			hora1,  hora2,  hora3,  hora4,  hora5,  hora6,  hora7,  hora8,  hora9,  hora10,
			hora11, hora12, hora13, hora14, hora15, hora16, hora17, hora18, hora19, hora20,
			hora21, hora22, hora23, hora24, hora25, hora26, hora27, hora28, hora29, hora30,
			hora31, hora32, hora33, hora34, hora35, hora36, hora37, hora38, hora39, hora40
			)
		values (
			nr_seq_adep_w,
			nm_usuario_p,
			'H',
			'N',
			'N',
			'N',
			1,
			1,
			1,
			'HORÁRIOS',
			'HORÁRIOS',
			'1',
			'',
			vetor_w[1].nm_coluna_w,
			vetor_w[2].nm_coluna_w,
			vetor_w[3].nm_coluna_w,
			vetor_w[4].nm_coluna_w,
			vetor_w[5].nm_coluna_w,
			vetor_w[6].nm_coluna_w,
			vetor_w[7].nm_coluna_w,
			vetor_w[8].nm_coluna_w,
			vetor_w[9].nm_coluna_w,
			vetor_w[10].nm_coluna_w,
			vetor_w[11].nm_coluna_w,
			vetor_w[12].nm_coluna_w,
			vetor_w[13].nm_coluna_w,
			vetor_w[14].nm_coluna_w,
			vetor_w[15].nm_coluna_w,
			vetor_w[16].nm_coluna_w,
			vetor_w[17].nm_coluna_w,
			vetor_w[18].nm_coluna_w,
			vetor_w[19].nm_coluna_w,
			vetor_w[20].nm_coluna_w,
			vetor_w[21].nm_coluna_w,
			vetor_w[22].nm_coluna_w,
			vetor_w[23].nm_coluna_w,
			vetor_w[24].nm_coluna_w,
			vetor_w[25].nm_coluna_w,
			vetor_w[26].nm_coluna_w,
			vetor_w[27].nm_coluna_w,
			vetor_w[28].nm_coluna_w,
			vetor_w[29].nm_coluna_w,
			vetor_w[30].nm_coluna_w,
			vetor_w[31].nm_coluna_w,
			vetor_w[32].nm_coluna_w,
			vetor_w[33].nm_coluna_w,
			vetor_w[34].nm_coluna_w,
			vetor_w[35].nm_coluna_w,
			vetor_w[36].nm_coluna_w,
			vetor_w[37].nm_coluna_w,
			vetor_w[38].nm_coluna_w,
			vetor_w[39].nm_coluna_w,
			vetor_w[40].nm_coluna_w
			);

/* gerar itens */

open c02;
loop
fetch c02 into	ie_tipo_w,
			nr_prescricao_w,
			nr_seq_item_w,
			ie_acm_sn_w,
			ie_suspenso_w,
			ie_status_item_w,
			cd_item_w,
			ds_item_w,
			cd_intervalo_w,
			ds_prescricao_w,
			ie_pendente_liberacao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	select	nextval('w_adep_seq')
	into STRICT	nr_seq_adep_w
	;

	insert into w_adep(
				nr_sequencia,
				nm_usuario,
				ie_tipo_item,
				ie_acm_sn,
				ie_suspenso,
				ie_status_item,
				nr_prescricao,
				nr_seq_item,
				cd_item,
				ds_item,
				cd_intervalo,
				ds_prescricao,
				nr_prescricoes,
				ie_pendente_liberacao
				)
			values (
				nr_seq_adep_w,
				nm_usuario_p,
				ie_tipo_w,
				ie_acm_sn_w,
				ie_suspenso_w,
				ie_status_item_w,
				nr_prescricao_w,
				nr_seq_item_w,
				cd_item_w,
				ds_item_w,
				cd_intervalo_w,
				ds_prescricao_w,
				CASE WHEN ie_acm_sn_w='S' THEN nr_prescricao_w  ELSE null END ,
				ie_pendente_liberacao_w
				);
	end;
end loop;
close c02;

/* gerar itens x horários */

ind := 0;
while(ind < 40) loop
	begin
	ind := ind + 1;
	open c03;
	loop
	fetch c03 into	ie_tipo_w,
				nr_prescricao_w,
				nr_seq_item_w,
				cd_item_w,
				nr_seq_hor_w,
				ds_horario_w,
				ie_status_w,
				ds_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		/*
		ds_update_w :=	' update w_adep	' ||
					' set hora' || to_char(ind) || ' = ' || chr(39) || 'S' || to_char(nr_seq_hor_w) || 'H' || ie_status_w || chr(39) || ',' ||
					' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,' || to_char(nr_prescricao_w) || ')' ||
					' where nm_usuario = ' || chr(39) || nm_usuario_p || chr(39) ||
					' and ie_tipo_item = ' || chr(39) || ie_tipo_w || chr(39) ||
					' and cd_item = ' || chr(39) || cd_item_w || chr(39) ||
					' and nr_prescricao = ' || to_char(nr_prescricao_w) ||
					' and nr_seq_item = ' || to_char(nr_seq_item_w);
		exec_sql_dinamico('ADEP', ds_update_w);
		*/
		ds_update_w :=	' update w_adep	' ||
					' set hora' || to_char(ind) || ' = :vl_hora, ' ||
					' nr_prescricoes = adep_juntar_prescricao(nr_prescricoes,:nr_prescricao) ' ||
					' where nm_usuario = :nm_usuario ' ||
					' and ie_tipo_item = :ie_tipo ' ||
					' and cd_item = :cd_item ' ||
					' and nr_prescricao = :nr_prescricao ' ||
					' and nr_seq_item = :nr_seq_item ';

		CALL exec_sql_dinamico_bv('ADEP', ds_update_w,	'vl_hora=S' || to_char(nr_seq_hor_w) || 'H' || ie_status_w	|| ';' ||
								'nr_prescricao=' || to_char(nr_prescricao_w)			|| ';' ||
								'nm_usuario=' || nm_usuario_p					|| ';' ||
								'ie_tipo=' || ie_tipo_w						|| ';' ||
								'cd_item=' || cd_item_w						|| ';' ||
								'nr_seq_item=' || to_char(nr_seq_item_w)				|| ';' );
		end;
	end loop;
	close c03;
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_horarios_adep_lab (cd_estabelecimento_p bigint, nr_atendimento_p bigint, qt_hora_anterior_p bigint, qt_hora_adicional_p bigint, qt_hora_prescricao_p bigint, ie_horario_realizado_p text, ie_horario_suspenso_p text, dt_consulta_p timestamp, nm_usuario_p text) FROM PUBLIC;

