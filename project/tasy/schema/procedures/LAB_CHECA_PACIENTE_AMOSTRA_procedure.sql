-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_checa_paciente_amostra ( nr_atendimento_p prescr_medica.nr_atendimento%type, cd_barras_p prescr_proc_controle_etiq.cd_barras%type, cd_barras_user_p usuario.cd_barras%type, ds_error_p INOUT text ) AS $body$
DECLARE

nm_usuario_w        usuario.nm_usuario%type;
nr_prescricao_w     prescr_proc_controle_etiq.nr_prescricao%type;
nr_seq_prescr_w     prescr_proc_controle_etiq.nr_seq_prescr%type;

ie_checado_w        varchar(1)	:= 'N';

c01 CURSOR FOR
    SELECT  c.nr_prescricao,
            c.nr_sequencia
    from    prescr_medica b,
            lab_parametro a,
            prescr_procedimento c
    where   b.nr_controle = substr(cd_barras_p, 4, length(cd_barras_p)) and
            a.cd_unidade_fleury = substr(cd_barras_p, 1, 3) and
            b.nr_atendimento = nr_atendimento_p and
            a.cd_estabelecimento = b.cd_estabelecimento and
            c.nr_prescricao = b.nr_prescricao;

/*Os primeiros três dígitos do código de barras representam o cógigo da unidade.
 *Os últimos dois dígitos do código de barras representam o item para o fleury (veve ser ignorado).
 */
BEGIN

if (coalesce(nr_atendimento_p::text, '') = '' or coalesce(cd_barras_p::text, '') = '' or coalesce(cd_barras_user_p::text, '') = '') then
    ds_error_p := OBTER_DESC_EXPRESSAO(505855);--É necessário preencher todos os campos.
end if;

if (coalesce(ds_error_p::text, '') = '') then
    begin
        select  nm_usuario
        into STRICT    nm_usuario_w
        from    usuario
        where   cd_barras = cd_barras_user_p;
    exception when no_data_found or too_many_rows then
        ds_error_p := OBTER_DESC_EXPRESSAO(773753);--Código de barras do usuário é inválido ou não existe
    end;
end if;

if (coalesce(ds_error_p::text, '') = '') then
    open c01;
    loop
    fetch c01 into
        nr_prescricao_w,
        nr_seq_prescr_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
        begin
			ie_checado_w := 'S';

            insert into prescr_proc_checagem_pac(nr_sequencia,
                dt_atualizacao,
                dt_atualizacao_nrec,
                nm_usuario,
                nm_usuario_nrec,
                nr_prescricao,
                nr_seq_prescr,
                ds_observacao)
            values (nextval('prescr_proc_checagem_pac_seq'),
                clock_timestamp(),
                clock_timestamp(),
                nm_usuario_w,
                nm_usuario_w,
                nr_prescricao_w,
                nr_seq_prescr_w,
                OBTER_DESC_EXPRESSAO(702326));--Item checado
        end;

	end loop;
	close c01;

	if (ie_checado_w = 'N') then
		ds_error_p	:= OBTER_DESC_EXPRESSAO(967897);
	end if;

else
	ds_error_p	:= OBTER_DESC_EXPRESSAO(967897);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_checa_paciente_amostra ( nr_atendimento_p prescr_medica.nr_atendimento%type, cd_barras_p prescr_proc_controle_etiq.cd_barras%type, cd_barras_user_p usuario.cd_barras%type, ds_error_p INOUT text ) FROM PUBLIC;

