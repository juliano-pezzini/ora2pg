-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_atualizar_uf_controle_perit ( nr_seq_controle_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_pessoa_fisica_w		bigint;
dt_dialise_w			timestamp;
hr_dialise_w			timestamp;
hr_dialise_peritonial_w		timestamp;
nr_sequencia_ant_w		bigint;
qt_volume_drenagem_w		smallint;
qt_volume_drenagem_post_w	smallint;
qt_volume_infusao_ant_w		smallint;
qt_volume_infusao_w		smallint;


BEGIN


if (nr_seq_controle_p IS NOT NULL AND nr_seq_controle_p::text <> '') then

	select	cd_pessoa_fisica,
		dt_dialise_peritonial,
		hr_dialise_peritonial,
		qt_volume_drenagem,
		qt_volume_infusao
	into STRICT	cd_pessoa_fisica_w,
		dt_dialise_w,
		hr_dialise_peritonial_w,
		qt_volume_drenagem_w,
		qt_volume_infusao_w
	from	hd_dialise_peritonial
	where	nr_sequencia = nr_seq_controle_p;

	--Verifica se há registro anterior no mesmo dia para atualizar o UF dele
	/*select	max(hr_dialise_peritonial)
	into	hr_dialise_w
	from	hd_dialise_peritonial
	where	nr_sequencia <> nr_seq_controle_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	dt_dialise_peritonial = dt_dialise_w
	and	to_date(to_char(dt_dialise_w,'dd/mm/yyyy')||''||to_char(hr_dialise_peritonial,'hh24:mi'),'dd/mm/yyyy hh24:mi') >=
		to_date(to_char(dt_dialise_w,'dd/mm/yyyy')||''||to_char(hr_dialise_peritonial_w,'hh24:mi'),'dd/mm/yyyy hh24:mi');*/
	select	max(hr_dialise_peritonial)
	into STRICT	hr_dialise_w
	from	hd_dialise_peritonial
	where	nr_sequencia <> nr_seq_controle_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	hr_dialise_peritonial <= hr_dialise_peritonial_w;


	select	coalesce(max(qt_volume_infusao),0),
		max(nr_sequencia)
	into STRICT	qt_volume_infusao_ant_w,
		nr_sequencia_ant_w
	from	hd_dialise_peritonial
	where	nr_sequencia <> nr_seq_controle_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	--and	dt_dialise_peritonial = dt_dialise_w
	and	hr_dialise_peritonial = hr_dialise_w;

	if (nr_sequencia_ant_w IS NOT NULL AND nr_sequencia_ant_w::text <> '') then

		update	hd_dialise_peritonial
		set	qt_uf = qt_volume_drenagem_w - qt_volume_infusao_ant_w,
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia = nr_sequencia_ant_w;

	end if;

	--Verifica se há registro posterior no mesmo dia para atualizar o UF do registro que está sendo alterado
	/*select	min(hr_dialise_peritonial)
	into	hr_dialise_w
	from	hd_dialise_peritonial
	where	nr_sequencia <> nr_seq_controle_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	--and	dt_dialise_peritonial = dt_dialise_w
	and	to_date(to_char(dt_dialise_w,'dd/mm/yyyy')||''||to_char(hr_dialise_peritonial,'hh24:mi'),'dd/mm/yyyy hh24:mi') >=
		to_date(to_char(dt_dialise_w,'dd/mm/yyyy')||''||to_char(hr_dialise_peritonial_w,'hh24:mi'),'dd/mm/yyyy hh24:mi');*/
	select	min(hr_dialise_peritonial)
	into STRICT	hr_dialise_w
	from	hd_dialise_peritonial
	where	nr_sequencia <> nr_seq_controle_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	hr_dialise_peritonial >= hr_dialise_peritonial_w;

	select	max(qt_volume_drenagem)
	into STRICT	qt_volume_drenagem_post_w
	from	hd_dialise_peritonial
	where	nr_sequencia <> nr_seq_controle_p
	and	cd_pessoa_fisica = cd_pessoa_fisica_w
	--and	dt_dialise_peritonial = dt_dialise_w
	and	hr_dialise_peritonial = hr_dialise_w;

	if (qt_volume_drenagem_post_w IS NOT NULL AND qt_volume_drenagem_post_w::text <> '') then

		update	hd_dialise_peritonial
		set	qt_uf = qt_volume_drenagem_post_w - qt_volume_infusao_w,
			nm_usuario = nm_usuario_p,
			dt_atualizacao = clock_timestamp()
		where	nr_sequencia = nr_seq_controle_p;

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_atualizar_uf_controle_perit ( nr_seq_controle_p bigint, nm_usuario_p text) FROM PUBLIC;

