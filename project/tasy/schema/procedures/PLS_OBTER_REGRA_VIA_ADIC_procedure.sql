-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_regra_via_adic ( nr_seq_contrato_p bigint, nr_seq_intercambio_p bigint, nr_seq_plano_p bigint, nr_via_solicitacao_p bigint, ie_renovacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_referencia_p timestamp, nr_seq_regra_p INOUT bigint, vl_regra_p INOUT bigint, pr_regra_p INOUT bigint) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Obter regra via adicional do cartão de identificação do segurado
----------------------------------------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x ] Tasy (Delphi/Java) [ x ] Portal [  ] Relatórios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_regra_w		bigint;
vl_via_adicional_w	double precision	:= 0;
pr_via_adicional_w	double precision	:= 0;


BEGIN
nr_seq_regra_w	:= null;

if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_segurado_cart
	where	nr_seq_contrato		= nr_seq_contrato_p
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	nr_via_solicitacao_p between coalesce(nr_via_inicial,nr_via_solicitacao_p) and coalesce(nr_via_final,nr_via_solicitacao_p)
	and (ie_renovacao = ie_renovacao_p or ie_renovacao = 'A')
	and	dt_referencia_p between coalesce(dt_inicio_vigencia,dt_referencia_p) and coalesce(dt_fim_vigencia,dt_referencia_p);
elsif (nr_seq_intercambio_p IS NOT NULL AND nr_seq_intercambio_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_segurado_cart
	where	nr_seq_intercambio	= nr_seq_intercambio_p
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	nr_via_solicitacao_p between coalesce(nr_via_inicial,nr_via_solicitacao_p) and coalesce(nr_via_final,nr_via_solicitacao_p)
	and (ie_renovacao = ie_renovacao_p or ie_renovacao = 'A')
	and	dt_referencia_p between coalesce(dt_inicio_vigencia,dt_referencia_p) and coalesce(dt_fim_vigencia,dt_referencia_p);
end if;

if (coalesce(nr_seq_regra_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_segurado_cart
	where	nr_seq_plano		= nr_seq_plano_p
	and	coalesce(nr_seq_contrato::text, '') = ''
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	nr_via_solicitacao_p between coalesce(nr_via_inicial,nr_via_solicitacao_p) and coalesce(nr_via_final,nr_via_solicitacao_p)
	and (ie_renovacao = ie_renovacao_p or ie_renovacao = 'A')
	and	dt_referencia_p between coalesce(dt_inicio_vigencia,dt_referencia_p) and coalesce(dt_fim_vigencia,dt_referencia_p);

	if (coalesce(nr_seq_regra_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_w
		from	pls_regra_segurado_cart
		where	coalesce(nr_seq_plano::text, '') = ''
		and	coalesce(nr_seq_contrato::text, '') = ''
		and	coalesce(nr_seq_intercambio::text, '') = ''
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	nr_via_solicitacao_p between coalesce(nr_via_inicial,nr_via_solicitacao_p) and coalesce(nr_via_final,nr_via_solicitacao_p)
		and (ie_renovacao = ie_renovacao_p or ie_renovacao = 'A')
		and	dt_referencia_p between coalesce(dt_inicio_vigencia,dt_referencia_p) and coalesce(dt_fim_vigencia,dt_referencia_p);
	end if;
end if;

if (coalesce(nr_seq_regra_w,0) <> 0) then
	select	max(vl_via_adicional),
		max(tx_via_adicional)
	into STRICT	vl_via_adicional_w,
		pr_via_adicional_w
	from	pls_regra_segurado_cart
	where	nr_sequencia	= nr_seq_regra_w;
end if;

nr_seq_regra_p 	:= nr_seq_regra_w;
vl_regra_p	:= vl_via_adicional_w;
pr_regra_p	:= pr_via_adicional_w;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_regra_via_adic ( nr_seq_contrato_p bigint, nr_seq_intercambio_p bigint, nr_seq_plano_p bigint, nr_via_solicitacao_p bigint, ie_renovacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_referencia_p timestamp, nr_seq_regra_p INOUT bigint, vl_regra_p INOUT bigint, pr_regra_p INOUT bigint) FROM PUBLIC;

