-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE prescr_procedimento_beforepost ( nr_prescricao_p bigint, nr_sequencia_p bigint, dt_prev_execucao_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, dt_coleta_p timestamp, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_entrega_p INOUT timestamp, dt_prevista_retorno_p INOUT timestamp, ie_emite_mapa_p INOUT text, qt_proc_exame_regra_p INOUT text, ds_sus_p INOUT text, qt_procedimento_p INOUT bigint, qt_min_entrega_p INOUT bigint, ie_cig_p INOUT text, cd_convenio_p INOUT bigint, ie_tipo_convenio_p INOUT text, ie_urgencia_p text, cd_setor_coleta_p INOUT text, cd_setor_entrega_p INOUT text, ds_hora_fixa_p INOUT text, ie_dia_semana_final_p INOUT bigint, qt_dia_entrega_p INOUT bigint, qt_min_atraso_p INOUT bigint) AS $body$
DECLARE

						 
dt_entrega_w			timestamp;
dt_prevista_retorno_w		timestamp;
ie_emite_mapa_w			varchar(1);
cd_prescritor_w			varchar(10);
cd_especialidade_w		integer;
qt_proc_exame_regra_w		varchar(4000);
nr_atendimento_w		bigint;
cd_convenio_w			integer;
ds_sus_w			varchar(10);	
qt_procedimento_w		bigint;
ie_tipo_convenio_w		smallint;
cd_setor_atendimento_w		varchar(255);
cd_setor_atendimento_w2	setor_atendimento.cd_setor_atendimento%type;
qt_dia_entrega_w		smallint;
ds_hora_fixa_w			varchar(2);
ie_data_resultado_w		varchar(1);
qt_min_entrega_w		bigint;
ie_atualizar_recoleta_w 	varchar(1);
cig_w				varchar(3);
ie_cig_w			varchar(1) := 'N';
ie_dia_semana_final_w 		bigint;
qt_min_atraso_w			bigint;
ie_forma_atual_dt_result_w	exame_lab_regra_setor.ie_atul_data_result%type;
cont_w			bigint;


BEGIN 
 
select	max(cd_prescritor), 
		max(nr_atendimento) 
into STRICT	cd_prescritor_w, 
		nr_atendimento_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
select 	count(*) 
into STRICT	qt_procedimento_w 
from 	procedimento 
where 	cd_procedimento 	= cd_procedimento_p 
and 	ie_origem_proced 	= ie_origem_proced_p;
 
if (cd_setor_atendimento_p = 0) then 
	cd_setor_atendimento_w2 := null;
else 
	cd_setor_atendimento_w2 := cd_setor_atendimento_p;
end if;
 
dt_entrega_w := obter_entrega_laudo(nr_prescricao_p, dt_prev_execucao_p, nr_seq_proc_interno_p, cd_procedimento_p, ie_origem_proced_p, cd_setor_atendimento_p, nm_usuario_p, dt_entrega_w);
 
if (nr_seq_exame_p IS NOT NULL AND nr_seq_exame_p::text <> '')	then 
	 
	dt_prevista_retorno_w := atualiza_dt_realizacao_exame(nr_seq_exame_p, nr_prescricao_p, dt_prev_execucao_p, dt_prevista_retorno_w);
	 
	SELECT * FROM obter_setor_exame_lab(nr_prescricao_p, nr_seq_exame_p, cd_setor_atendimento_w2, null, dt_coleta_p, 'S', cd_setor_atendimento_w, cd_setor_coleta_p, cd_setor_entrega_p, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_urgencia_p, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w) INTO STRICT cd_setor_atendimento_w, cd_setor_coleta_p, cd_setor_entrega_p, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;
 
	cd_especialidade_w	:= coalesce(obter_especialidade_medico(nr_prescricao_p, 'C'), 0);
 
	qt_proc_exame_regra_w	:= coalesce(obter_dados_exame_lab_rep(cd_perfil_p, cd_especialidade_w, cd_setor_atendimento_p, nr_seq_exame_p, cd_estabelecimento_p, 'Q'),'XPTO');
 
end if;
 
cig_w 		:= obter_ctrl_glic_proc(nr_sequencia_p);
if (cig_w = 'CIG')	then 
	ie_cig_w := 'S';
end if;
 
cd_convenio_w	:= coalesce(obter_convenio_atendimento(nr_atendimento_w),0);
 
select	max(ie_tipo_convenio) 
into STRICT	ie_tipo_convenio_w 
from 	convenio 
where 	cd_convenio = cd_convenio_w;
 
ds_sus_w 			:= coalesce(sus_consiste_proced_atend(nr_atendimento_w, cd_procedimento_p,ie_origem_proced_p),'XPTO');
dt_entrega_p			:= dt_entrega_w;
dt_prevista_retorno_p 		:= dt_prevista_retorno_w;
ie_emite_mapa_p			:= ie_emite_mapa_w;
qt_procedimento_p		:= qt_procedimento_w;
qt_min_entrega_p		:= qt_min_entrega_w;
ie_cig_p			:= ie_cig_w;
ie_tipo_convenio_p		:= ie_tipo_convenio_w;
qt_proc_exame_regra_p		:= null;
cd_convenio_p			:= null;
ds_sus_p			:= null;
ds_hora_fixa_p			:= ds_hora_fixa_w;
ie_dia_semana_final_p 		:= ie_dia_semana_final_w;
qt_dia_entrega_p		:= qt_dia_entrega_w;
qt_min_atraso_p			:= qt_min_atraso_w;
 
if (qt_proc_exame_regra_w <> 'XPTO') then 
	begin 
	qt_proc_exame_regra_p	:= qt_proc_exame_regra_w;
	end;
end if;
if (ds_sus_w <> 'XPTO') then 
	begin 
	ds_sus_p		:= ds_sus_w;
	end;
end if;
if (cd_convenio_w > 0) then 
	begin 
	cd_convenio_p		:= cd_convenio_w;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE prescr_procedimento_beforepost ( nr_prescricao_p bigint, nr_sequencia_p bigint, dt_prev_execucao_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, dt_coleta_p timestamp, cd_perfil_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_entrega_p INOUT timestamp, dt_prevista_retorno_p INOUT timestamp, ie_emite_mapa_p INOUT text, qt_proc_exame_regra_p INOUT text, ds_sus_p INOUT text, qt_procedimento_p INOUT bigint, qt_min_entrega_p INOUT bigint, ie_cig_p INOUT text, cd_convenio_p INOUT bigint, ie_tipo_convenio_p INOUT text, ie_urgencia_p text, cd_setor_coleta_p INOUT text, cd_setor_entrega_p INOUT text, ds_hora_fixa_p INOUT text, ie_dia_semana_final_p INOUT bigint, qt_dia_entrega_p INOUT bigint, qt_min_atraso_p INOUT bigint) FROM PUBLIC;

