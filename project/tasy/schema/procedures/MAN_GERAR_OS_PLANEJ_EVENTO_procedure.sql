-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_gerar_os_planej_evento ( cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, ie_evento_p text) AS $body$
DECLARE



cd_perfil_w			integer	;
cd_pessoa_solic_w			varchar(10);
cd_pessoa_resp_w			varchar(10);
cd_setor_atendimento_w		integer;
dt_prevista_w			timestamp;
dt_emissao_prev_w			timestamp;
dt_ultima_ordem_w			timestamp;
ds_arquivo_w			varchar(255);
ds_comunicado_w			varchar(4000);
ds_dano_w			varchar(2000);
ds_dano_breve_w			varchar(80);
ds_atividade_w			varchar(2000);
ds_perfil_adicional_w		varchar(4000);
ie_anexar_email_w			varchar(1);
ie_prioridade_w			varchar(1);
ie_comunicacao_w			varchar(1);
ie_solicitante_w			varchar(1);
nm_usuario_destino_w		varchar(255);
nm_usuario_exec_w		varchar(15);
nr_seq_anexo_w			bigint;
nr_seq_ordem_w			bigint;
nr_seq_ordem_ww			bigint;
nr_max_seq_ordem_w		bigint;
nr_seq_ativ_w			bigint;
nr_seq_planej_w			bigint;
nr_seq_planej_ww			bigint;
nr_seq_tipo_cont_w		bigint;
nr_seq_local_w			bigint;
nr_seq_trab_w			bigint;
nr_seq_equip_w			bigint;
qt_dia_freq_w			smallint;
qt_dia_prev_w			smallint;
qt_dia_ordem_w			smallint;
qt_preventiva_w			bigint;
qt_ordem_aberta_w			bigint;
qt_min_prev_w			bigint;
nr_seq_tipo_equip_w		bigint;/*Tipo do equipamento*/
nr_seq_tipo_equip_ww		bigint;/*Tipo do equipamento do planejamento*/
nr_seq_apres_w			integer;
nr_seq_origem_dano_w		bigint;
nr_seq_causa_dano_w		bigint;
nr_seq_tipo_solucao_w		bigint;
nr_seq_complex_w			bigint;
nr_seq_cs_w			bigint;
ie_equip_regra_excl_w		varchar(1) := 'N';
qt_reg_w			integer;
nr_seq_tipo_os_w			bigint;

C01 CURSOR FOR
SELECT	a.nr_seq_localizacao,
	a.nr_seq_equip,
	a.nr_seq_planej,
	Obter_Tipo_Equip_Preventivo(a.nr_seq_equip),
	b.nr_seq_tipo_equip
from	man_planej_prev b,
	unidade_atend_prev a
where	a.nr_seq_planej		= b.nr_sequencia
and	coalesce(b.ie_situacao,'A')	= 'A'
and	a.cd_setor_atendimento	= cd_setor_atendimento_p
and	a.cd_unidade_basica	= cd_unidade_basica_p
and	a.cd_unidade_compl	= cd_unidade_compl_p
and	a.ie_evento		= ie_evento_p;

C02 CURSOR FOR
SELECT	ds_atividade,
	qt_min_prev,
	nr_seq_apres
from	man_planej_atividade
where	nr_seq_planej_prev	= nr_seq_planej_w;

c03 CURSOR FOR
SELECT	ds_arquivo,
	ie_anexar_email
from	man_planej_prev_arq
where	nr_seq_planej_Prev	= nr_seq_planej_w;


BEGIN
/*Matheus OS 55486 25/04/07 */

select	count(*)
into STRICT	qt_preventiva_w
from	unidade_atend_prev
where	cd_setor_atendimento	= cd_setor_atendimento_p
and	cd_unidade_basica		= cd_unidade_basica_p
and	cd_unidade_compl		= cd_unidade_compl_p
and	ie_evento			= ie_evento_p;


if (qt_preventiva_w > 0) then
	begin
	open C01;
	loop
	fetch C01 into
		nr_seq_local_w,
		nr_seq_equip_w,
		nr_seq_planej_w,
		nr_seq_tipo_equip_w,
		nr_seq_tipo_equip_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	count(nr_sequencia)
		into STRICT	qt_reg_w
		from	man_planej_prev_equip_excl
		where	nr_seq_equipamento = nr_seq_equip_w
		and	nr_seq_planej_prev = nr_seq_planej_w;

		ie_equip_regra_excl_w := 'N';
		if (qt_reg_w > 0) then
			ie_equip_regra_excl_w := 'S';
		end if;


		if	(nr_seq_tipo_equip_w = nr_seq_tipo_equip_ww AND ie_equip_regra_excl_w = 'N') then
			begin
			select	b.qt_dia_previsto,
				b.qt_dia_gerar_ordem,
				b.ie_prioridade,
				b.cd_pessoa_solicitante,
				b.cd_setor_atendimento,
				b.ds_planejamento,
				b.nr_seq_tipo_contador,
				b.ds_dano,
				b.nm_usuario_exec,
				a.qt_dia,
				b.ie_comunicacao,
				b.ie_solicitante,
				c.nr_seq_planej,
				c.nr_seq_trab,
				coalesce(b.cd_perfil,0),
				b.nr_seq_origem_dano,
				b.nr_seq_causa_dano,
				b.nr_seq_tipo_solucao,
				b.nr_seq_complex,
				b.nr_seq_cs,
				b.nr_seq_tipo_os
		        into STRICT	qt_dia_prev_w,
				qt_dia_ordem_w,
				ie_prioridade_w,
				cd_pessoa_solic_w,
				cd_setor_atendimento_w,
				ds_dano_breve_w,
				nr_seq_tipo_cont_w,
				ds_dano_w,
				nm_usuario_exec_w,
				qt_dia_freq_w,
				ie_comunicacao_w,
				ie_solicitante_w,
				nr_seq_planej_ww,
				nr_seq_trab_w,
				cd_perfil_w,
				nr_seq_origem_dano_w,
				nr_seq_causa_dano_w,
				nr_seq_tipo_solucao_w,
				nr_seq_complex_w,
				nr_seq_cs_w,
				nr_seq_tipo_os_w
        		from	man_planej_prev b,
				man_equipamento c,
				man_freq_planej a
			where	b.nr_sequencia 	= nr_seq_planej_w
			and	c.nr_sequencia 	= nr_seq_equip_w
			and	c.nr_seq_tipo_equip 	= b.nr_seq_tipo_equip
			and	b.nr_seq_frequencia 	= a.nr_sequencia;

			select	coalesce(max(nr_sequencia), 0)
			into STRICT	nr_seq_ordem_ww
			from 	man_ordem_servico
			where 	nr_seq_equipamento 	= nr_seq_equip_w
			and 	coalesce(nr_seq_Planej,0)	= nr_seq_planej_w
			and 	ie_tipo_ordem 	= 2;

			if (nr_seq_ordem_ww = 0) then
				dt_emissao_prev_w	:= clock_timestamp() - interval '1000 days';
			else
				begin
				select  coalesce(dt_fim_real, clock_timestamp())
				into STRICT 	dt_ultima_ordem_w
				from 	man_ordem_servico
				where 	nr_sequencia 	= nr_seq_ordem_ww;
				dt_emissao_prev_w	:= dt_ultima_ordem_w + qt_dia_freq_w;
				end;
			end if;

			select	coalesce(obter_usuario_pessoa(cd_pessoa_solic_w),'X')
			into STRICT	nm_usuario_destino_w
			;

			if (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') then
				select	coalesce(max(cd_pessoa_resp), 'X')
				into STRICT	cd_pessoa_resp_w
				from	setor_atendimento
				where	cd_setor_atendimento = cd_setor_atendimento_w;
				if (cd_pessoa_resp_w <> 'X') then
					nm_usuario_destino_w	:= nm_usuario_destino_w || ',' || obter_usuario_pessoa(cd_pessoa_resp_w);
				end if;
			end if;

			if (clock_timestamp() >= dt_emissao_prev_w) then
       				begin
				select	nextval('man_ordem_servico_seq')
				into STRICT	nr_seq_ordem_w
				;

				insert into man_ordem_servico(
					nr_sequencia,
					nr_seq_equipamento,
					nr_seq_localizacao,
		           		cd_pessoa_solicitante,
           				dt_ordem_servico,
					ie_prioridade,
					ie_parado,
           				ds_dano_breve,
		           		dt_atualizacao,
           				nm_usuario,
		           		dt_inicio_desejado,
           				dt_conclusao_desejada,
		           		ds_dano,
           				dt_inicio_previsto,
	        	   		dt_fim_previsto,
        	   			dt_inicio_real,
		           		dt_fim_real,
           				ie_tipo_ordem,
		           		ie_status_ordem,
           				nr_grupo_planej,
					nr_grupo_trabalho,
           				nr_seq_tipo_solucao,
		           		ds_solucao,
           				nm_usuario_exec,
		           		qt_contador,
           				nr_seq_planej,
		           		nr_seq_tipo_contador,
					ie_classificacao,
					ie_origem_os,
					nm_usuario_nrec,
					nr_seq_origem_dano,
					nr_seq_causa_dano,
					nr_seq_complex,
					nr_seq_cs,
					nr_seq_tipo_ordem
					)
		        	values ( nr_seq_ordem_w,
					nr_seq_equip_w,
					nr_seq_local_w,
           				cd_pessoa_solic_w,
		           		clock_timestamp(),
					ie_prioridade_w,
		           		'N',
           				ds_dano_breve_w,
		           		clock_timestamp(),
           				'Prevent_Event',
		           		clock_timestamp() + qt_dia_ordem_w,
					clock_timestamp() + qt_dia_prev_w + qt_dia_ordem_w,
		           		ds_dano_w,
           				null,
		           		null,
           				null,
		           		null,
           				2,
		           		1,
		           		nr_seq_planej_ww,
					nr_seq_trab_w,
					nr_seq_tipo_solucao_w,
           				null,
		           		null,
           				null,
					nr_seq_planej_w,
					nr_seq_tipo_cont_w,
					'S',
					'4',
					'Prevent_Event',
					nr_seq_origem_dano_w,
					nr_seq_causa_dano_w,
					nr_seq_complex_w,
					nr_seq_cs_w,
					nr_seq_tipo_os_w);

		       		open C02;
        			loop
        			fetch C02 into
	        		   	ds_atividade_w,
        			   	qt_min_prev_w,
					nr_seq_apres_w;
        			EXIT WHEN NOT FOUND; /* apply on C02 */

					select	nextval('man_ordem_ativ_prev_seq')
        				into STRICT	nr_seq_ativ_w
		        		;

		           		insert into man_ordem_ativ_prev(
              					nr_sequencia,
              					nr_seq_ordem_serv,
		              			dt_atualizacao,
              					nm_usuario,
              					ds_atividade,
		              			qt_min_prev,
						nr_seq_apres)
           				values (	nr_seq_ativ_w,
              					nr_seq_ordem_w,
		              			clock_timestamp(),
              					'Prevent_Event',
              					ds_atividade_w,
		              			qt_min_prev_w,
						nr_seq_apres_w);
       				end loop;
	        		close C02;

				open c03;
				loop
				fetch C03 into
					ds_arquivo_w,
					ie_anexar_email_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */

					select	nextval('man_ordem_serv_arq_seq')
					into STRICT	nr_seq_anexo_w
					;

					insert into man_ordem_serv_arq(
						nr_sequencia,
						nr_seq_ordem,
						ds_arquivo,
						ie_anexar_email,
						dt_atualizacao,
						nm_usuario)
					values (	nr_seq_anexo_w,
						nr_seq_ordem_w,
						ds_arquivo_w,
						ie_anexar_email_w,
						clock_timestamp(),
						'Prevent_Event');
				end loop;
				close c03;

		        	if (nm_usuario_exec_w IS NOT NULL AND nm_usuario_exec_w::text <> '') then
           				insert into man_ordem_servico_exec(
           	   				nr_sequencia,
              					nr_seq_ordem,
              					dt_atualizacao,
	              				nm_usuario,
        	      				nm_usuario_exec,
              					qt_min_prev,
						dt_recebimento)
           				values (	nextval('man_ordem_servico_exec_seq'),
              					nr_seq_ordem_w,
              					clock_timestamp(),
	              				'Prevent_Event',
        	      				nm_usuario_exec_w,
              					0,
						clock_timestamp());
        			end if;

				if (ie_comunicacao_w = 'S') then
					begin

					ds_perfil_adicional_w	:= '';

					if (coalesce(cd_perfil_w,0) <> 0) then
						ds_perfil_adicional_w	:= cd_perfil_w || ',';
					end if;

					if (nm_usuario_destino_w <> 'X') then
						ds_comunicado_w := 'Gerado a ordem de serviço da Manutenção preventiva ' ||
									ds_dano_breve_w || ', com o seguinte dano: ' || chr(13) || chr(10);
						ds_comunicado_w := substr(ds_comunicado_w || ds_dano_w,1,4000);

						insert into comunic_interna(
							dt_comunicado,
							ds_titulo,
							ds_comunicado,
							nm_usuario,
							dt_atualizacao,
							ie_geral,
							nm_usuario_destino,
							cd_perfil,
							nr_sequencia,
							ie_gerencial,
							nr_seq_classif,
							ds_perfil_adicional,
							cd_setor_destino,
							cd_estab_destino,
							ds_setor_adicional,
							dt_liberacao,
							ds_grupo,
							nm_usuario_oculto)
						values ( clock_timestamp(),
							'Abertura de Ordem de Serviço Preventiva nº ' || nr_seq_ordem_w,
							ds_comunicado_w,
							'Prevent_Event',
							clock_timestamp(),
							'N',
							nm_usuario_destino_w,
							null,
							nextval('comunic_interna_seq'),
							'N',
							null,
							ds_perfil_adicional_w,
							null,
							null,
							null,
							clock_timestamp(),
							null,
							null);
					end if;
					end;
				end if;
				end;
			end if;
			end;
		end if;

		end;

	end loop;
	close C01;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_os_planej_evento ( cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, ie_evento_p text) FROM PUBLIC;

