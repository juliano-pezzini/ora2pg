-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE comunic_consist_temp_inspecao ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*Campos inspecao recebimento*/
				
nr_ordem_compra_w		bigint;
nr_item_oci_w			integer;
cd_material_w			integer;
ds_material_w			varchar(255);
cd_cgc_w			varchar(14);
nr_seq_tipo_nao_conf_w		bigint;
ds_justificativa_w			varchar(2000);
qt_inspecionado_w			double precision;

/*Campos email*/

dt_liberacao_w			varchar(100);
qt_temperatura_min_w		double precision;
qt_temperatura_max_w		double precision;
qt_temp_min_transp_w		double precision;
qt_temp_max_transp_w		double precision;
ds_fornecedor_w			varchar(255);
ds_email_comprador_w		varchar(80);
nm_pessoa_recebimento_w		varchar(100);
ds_observacao_w			varchar(255);
ie_consiste_temp_armaz_w		varchar(1);
ie_consiste_temp_transp_w		varchar(1);
ie_temperatura_w			double precision;
ie_material_recebido_w		varchar(3);
ds_mensagem_w			varchar(2000);
ds_assunto_w			varchar(255);
ds_email_destino_w			varchar(2000);
nm_comprador_w			varchar(100);
ds_email_origem_w			varchar(255);
ds_email_remetente_w		varchar(255);

/*Campos Ordem de Compra*/

cd_estabelecimento_w		smallint;
cd_setor_atendimento_w		integer;

ds_macro_w     funcao_macro.ds_macro%type;

/*Campos Regra Email*/

nr_seq_regra_w			bigint := 0;
ds_email_adicional_w		varchar(2000);
cd_perfil_disparar_w		varchar(10);
ie_momento_envio_w		varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ds_email_adicional,
		cd_perfil_disparar,
		coalesce(ds_email_remetente,'X'),
		coalesce(ie_momento_envio,'I')
	from	regra_envio_email_compra
	where	ie_tipo_mensagem = 37
	and	ie_situacao = 'A'
	and	cd_estabelecimento = cd_estabelecimento_w
	and	obter_se_envia_email_regra(nr_sequencia_p, 'IR', 37, cd_estabelecimento_w) = 'S';


BEGIN

begin
select	cd_cgc,
	coalesce(nr_ordem_compra,0),
	coalesce(nr_item_oci,0),
	coalesce(qt_inspecao,0),
	substr(coalesce(ds_observacao,WHEB_MENSAGEM_PCK.get_texto(298419)),1,255),
	coalesce(to_char(dt_liberacao,'dd/mm/yyyy'),'X'),
	cd_material,
	substr(obter_desc_material(cd_material),1,255) ds_material,
	coalesce(nr_seq_tipo_nao_conf,0),
	substr(coalesce(ds_justificativa,'X'),1,2000),
	somente_numero(ie_temperatura)
into STRICT	cd_cgc_w,
	nr_ordem_compra_w,
	nr_item_oci_w,
	qt_inspecionado_w,
	ds_observacao_w,
	dt_liberacao_w,
	cd_material_w,
	ds_material_w,
	nr_seq_tipo_nao_conf_w,
	ds_justificativa_w,
	ie_temperatura_w
from	inspecao_recebimento
where	nr_sequencia = nr_sequencia_p;
exception
	when others then
		nr_ordem_compra_w := 0;
end;

if (nr_ordem_compra_w <> 0) then
	begin

	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_w;

	/*Abre o cursor informando as regras*/

	open C01;
	loop
	fetch C01 into	
		nr_seq_regra_w,
		ds_email_adicional_w,
		cd_perfil_disparar_w,
		ds_email_remetente_w,
		ie_momento_envio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (coalesce(cd_perfil_disparar_w::text, '') = '') or (cd_perfil_disparar_w IS NOT NULL AND cd_perfil_disparar_w::text <> '') and (cd_perfil_disparar_w = obter_perfil_ativo) then		
			begin

			begin
			select	x.qt_temperatura_min,
				x.qt_temperatura_max,
				x.qt_temp_min_transp,
				x.qt_temp_max_transp
			into STRICT	qt_temperatura_min_w,
				qt_temperatura_max_w,
				qt_temp_min_transp_w,
				qt_temp_max_transp_w
			from	inspecao_regra_material x
			where	x.cd_material		= cd_material_w
			and	x.cd_estabelecimento	= cd_estabelecimento_p
			and	x.ie_temperatura		= 'S';
			exception
				when others then
				qt_temperatura_min_w 	:= 0;
				qt_temperatura_max_w 	:= 0;
				qt_temp_min_transp_w 	:= 0;
				qt_temp_max_transp_w	:= 0;	
			end;

			if (dt_liberacao_w <> 'X') then
				ie_material_recebido_w := WHEB_MENSAGEM_PCK.get_texto(298420);
			else	
				ie_material_recebido_w := WHEB_MENSAGEM_PCK.get_texto(298421);
			end if;

			select	substr(obter_dados_ordem_compra(nr_ordem_compra_w,'F'),1,255),
				substr(sup_obter_dados_comprador(cd_estabelecimento_p,obter_dados_ordem_compra(nr_ordem_compra_w,'C'),'E'),1,80),
				substr(obter_pessoa_fisica_usuario(nm_usuario_p,'N'),1,100),
				substr(obter_nome_pf(obter_dados_ordem_compra(nr_ordem_compra_w,'C')),1,100)
			into STRICT	ds_fornecedor_w,
				ds_email_comprador_w,
				nm_pessoa_recebimento_w,
				nm_comprador_w
			;

			if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '' AND ds_email_comprador_w IS NOT NULL AND ds_email_comprador_w::text <> '') then
				ds_email_destino_w := substr(ds_email_comprador_w || ';' || ds_email_adicional_w,1,2000);
            elsif ( (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') and coalesce(ds_email_comprador_w::text, '') = '')then
                ds_email_destino_w := ds_email_adicional_w;
            else
                ds_email_destino_w := ds_email_comprador_w;
			end if;

            select max(ds_macro)
                into STRICT ds_macro_w 
                from funcao_macro 
                where cd_funcao = 270 
                and nr_sequencia = 1630;
			select	substr(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(ds_assunto,
					'@ordem compra',nr_ordem_compra_w),
					'@comprador ', nm_comprador_w),
					'@inspecao',nr_sequencia_p),
					'@qtde',qt_inspecionado_w),
					'@fornecedor',ds_fornecedor_w),
					'@codigo',cd_material_w),
					 ds_macro_w,ds_material_w),
					'@pessoaReceb',nm_pessoa_recebimento_w),
					'@tempReceb',ie_temperatura_w),
					'@tempMinArmaz',qt_temperatura_min_w),
					'@tempMaxArmaz',qt_temperatura_max_w),
					'@tempMintransp',qt_temp_min_transp_w),
					'@tempMaxtransp',qt_temp_max_transp_w)
					,1,255),
				substr(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(
				replace(ds_mensagem_padrao,
					'@ordem compra',nr_ordem_compra_w),
					'@comprador', nm_comprador_w),
					'@inspecao',nr_sequencia_p),
					'@qtde',qt_inspecionado_w),
					'@fornecedor',ds_fornecedor_w),
					'@codigo',cd_material_w),
					ds_macro_w,ds_material_w),
					'@pessoaReceb',nm_pessoa_recebimento_w),
					'@tempReceb',ie_temperatura_w),
					'@tempMinArmaz',qt_temperatura_min_w),
					'@tempMaxArmaz',qt_temperatura_max_w),
					'@tempMintransp',qt_temp_min_transp_w),
					'@tempMaxtransp',qt_temp_max_transp_w)
					,1,2000)
			into STRICT	ds_assunto_w,
				ds_mensagem_w
			from	regra_envio_email_compra
			where	nr_sequencia = nr_seq_regra_w;

			select	coalesce(max(ds_email),'X')
			into STRICT	ds_email_origem_w
			from	usuario
			where	nm_usuario = nm_usuario_p;

			if (ds_email_remetente_w <> 'X') then
				ds_email_origem_w	:= ds_email_remetente_w;
			end if;

			if (ie_momento_envio_w = 'A') and (ds_email_origem_w <> 'X') then
				begin

				CALL sup_grava_envio_email(
					'IR',
					'37',
					nr_sequencia_p,
					null,
					null,
					ds_email_destino_w,
					nm_usuario_p,
					ds_email_origem_w,
					ds_assunto_w,
					ds_mensagem_w,
					cd_estabelecimento_w,
					nm_usuario_p);

				end;
			else
				begin
				CALL enviar_email(	ds_assunto_w,
						ds_mensagem_w,
				 		null,
						ds_email_destino_w,
						nm_usuario_p,
						'M');
				exception
					when others then
					ds_mensagem_w := '';
				end; -- Fim exception
			end if;

			end;
		end if;	

		end;	
	end loop;
	close C01;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE comunic_consist_temp_inspecao ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

