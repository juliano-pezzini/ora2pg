-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_protocolo_vancomicina ( cd_estabelecimento_p bigint, cd_perfil_p text, nm_usuario_p text, nr_prescricao_p bigint, nr_prescr_futura_p bigint, ie_anti_histaminico_p text, ie_exame_vancocinemia_p text, qt_horas_proced_p bigint) AS $body$
DECLARE


-- Rotina gerada a partir da procedure INSERIR_ITEM_PROTOCOLO_PRESCR
ie_consiste_medic_w			varchar(1);
cd_convenio_w				integer;
nr_atendimento_w			bigint;
dt_inicio_prescr_w			timestamp;
dt_validade_prescr_w		timestamp;
cd_setor_prescr_w			integer;
cd_estabelecimento_w		integer;
dt_prescricao_w				timestamp;
nr_horas_validade_w			integer;
dt_primeiro_horario_w		timestamp;
dt_inicio_item_w			timestamp;
nr_seq_material_w			integer;
qt_peso_w					real;
cd_protocolo_vanco_w		bigint;
nr_seq_prot_vanco_w			bigint;
ie_medico_prescr_w			varchar(5);
cd_setor_exclusivo_w		integer;
ie_kit_automatico_w			varchar(5);
nr_agrup_atual_presc_w		double precision;
dt_procedimento_w			timestamp;
dt_ultimo_proc_prev_w		timestamp;
qt_protocolo_w				double precision := 1;
hr_prim_horario_w			varchar(5);
hr_dose_ataque_w			varchar(5);
cd_procedimento_w			bigint;
cd_proced_aux_w				bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_exame_w				bigint;
ie_origem_proced_w			bigint;
ie_origem_aux_w				bigint;
nr_seq_procedimento_w		bigint;
nr_seq_atual_prescr_w		bigint;
ie_situacao_w				varchar(1);
nr_seq_proc_prot_w			bigint;
ie_urgencia_w				varchar(1);
dt_prim_horario_proced_w 	timestamp;
ie_dt_prescr_dt_exec_proc_w	varchar(1);
cd_categoria_w				varchar(10);
ie_tipo_convenio_w			smallint;
ie_check_tipo_interv_w		varchar(1);
cd_estab_atend_w			integer;
ie_tipo_atendimento_w		smallint;
ie_gerar_setor_w			varchar(10);
hr_prim_hor_proced_w		varchar(15);
ie_agora_w					varchar(1);
ds_horarios_w				varchar(2000);
ds_horarios2_w				varchar(2000);
nr_ocorrencia_w				double precision;
ds_observacao_w				varchar(2000);
cd_plano_convenio_w			varchar(10);
cd_material_exame_w			varchar(20);
ie_acm_w					varchar(1);
ie_previsao_proced_w		varchar(15);
ds_horarios_padrao_w		varchar(2000);
ie_se_necessario_w			varchar(1);
ds_erro_w					varchar(4000);
ie_cig_w					varchar(255);
cd_kit_material_w			bigint;
ds_material_especial_w		varchar(255);
cd_setor_atendimento_w		integer;
ie_mesmo_zerado_w			varchar(1);
ie_prot_glic_mentor_w		varchar(1);
qt_prescr_atend_w			bigint;
ie_prescr_proc_sem_lib_w	 varchar(30);
nr_seq_prot_glic_w			bigint;
ie_lado_w					varchar(1);
ie_acm_sn_w					varchar(1);
ie_respiracao_w				varchar(15);
ie_inconsistencia_w			varchar(20);
ds_inconsistentes_w			varchar(20);
cd_mod_vent_w				varchar(15);
ie_disp_resp_esp_w			varchar(15);
qt_fluxo_oxigenio_w			double precision;
ds_dado_clinico_w			varchar(2000);
ie_objetivo_onco_w			varchar(15);
ie_executar_leito_w			varchar(1);
nr_seq_contraste_w			bigint;
ds_exame_fis_achado_cirur_w	varchar(2000);
ds_resumo_clinico_w			varchar(2000);
cd_setor_entrega_w			integer;
cd_setor_coleta_w			integer;
ds_prescricao_w				varchar(80);
ds_diag_provavel_ap_w		varchar(255);
ds_exame_anterior_ap_w		varchar(255);
ds_localizacao_lesao_w		varchar(2000);
ds_tempo_doenca_w			varchar(255);
cd_cgc_laboratorio_w		varchar(15);
qt_frasco_env_w				integer;
nr_seq_proc_int_cirur_w		bigint;
qt_peca_ap_w				smallint;
nr_seq_amostra_princ_w		bigint;
ds_qualidade_peca_ap_w		varchar(2000);
ie_forma_exame_w			varchar(15);
cd_pessoa_coleta_w			varchar(10);
ds_justificativa_w			varchar(4000);
dt_inicio_medic_w			timestamp;
qt_dia_util_w				integer;
ie_possui_ataque_w			varchar(1);
qt_min_pad_anti_hist_w		double precision;

nr_prescricao_w				prescr_medica.nr_prescricao%type;
nr_seq_pend_pac_acao_w		prescr_medica.nr_seq_pend_pac_acao%type;

nr_seq_vanco_w				prescr_material.nr_sequencia%type;
nr_seq_vanco_manut_w		prescr_material.nr_sequencia%type;
nr_seq_anti_hist_w			prescr_material.nr_sequencia%type;
qt_dia_prim_hor_w			prescr_material.qt_dia_prim_hor%type;
qt_total_dispensar_w		prescr_material.qt_total_dispensar%type;
qt_unitaria_w				prescr_material.qt_unitaria%type;
qt_material_w				prescr_material.qt_material%type;
ie_regra_disp_w				prescr_material.ie_regra_disp%type;
cd_unidade_medida_dose_w	prescr_material.cd_unidade_medida_dose%type;
ie_via_aplicacao_w			prescr_material.ie_via_aplicacao%type;
qt_dose_especial_w			prescr_material.qt_dose_especial%type;
ie_dose_espec_agora_w		prescr_material.ie_dose_espec_agora%type;
qt_dose_w					prescr_material.qt_dose%type;
qt_conversao_dose_w			prescr_material.qt_conversao_dose%type;
nr_ocorrencia_vanco_w		prescr_material.nr_ocorrencia%type;
qt_min_intervalo_w			prescr_material.qt_min_intervalo%type;
qt_hora_intervalo_w			prescr_material.qt_hora_intervalo%type;

qt_procedimento_w			prescr_procedimento.qt_procedimento%type;

cd_intervalo_w				intervalo_prescricao.cd_intervalo%type;

cd_setor_atend_w			setor_atendimento.cd_setor_atendimento%type;

cd_medico_exec_w			pessoa_fisica.cd_pessoa_fisica%type;
cd_prescritor_w				pessoa_fisica.cd_pessoa_fisica%type;

nr_seq_proc_int_aux_w		proc_interno.nr_sequencia%type;

cd_material_w				material.cd_material%type;

ds_tipo_interv_w			varchar(15);
ie_REP_1069_w				varchar(15);
qt_dias_util_w				bigint;
ie_administrar_w			varchar(1);

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.cd_material,
			a.cd_unidade_medida_dose,
			a.ie_via_aplicacao,
			a.qt_dose,
			a.qt_conversao_dose
	from	prescr_material a
	where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
	and		coalesce(a.nr_seq_medic_material::text, '') = ''
	and		a.nr_seq_protocolo = nr_seq_prot_vanco_w
	and		a.cd_protocolo = cd_protocolo_vanco_w
	and     obter_se_mat_vancomicina(a.cd_material) = 'N'
	and		a.nr_sequencia > nr_seq_vanco_w
	and     a.ie_agrupador = 1	
	and		a.nr_prescricao = nr_prescricao_p
	order by a.nr_sequencia;

/* Protocolo: Proced/Exames */

C03 CURSOR FOR
	SELECT	a.nr_seq_proc + nr_seq_atual_prescr_w,
			a.nr_seq_proc,
			a.cd_procedimento,
			CASE WHEN coalesce(a.ie_multiplicar_quant,'N')='S' THEN (coalesce(qt_protocolo_w,1) * a.qt_procedimento)  ELSE a.qt_procedimento END ,
			a.ds_observacao,
			a.ie_origem_proced,
			a.cd_intervalo,
			a.cd_setor_atendimento,
			a.cd_material_exame,
			a.nr_seq_exame,
			coalesce(a.ie_se_necessario,'N'),
			coalesce(a.ie_acm,'N'),
			coalesce(a.hr_prim_horario,hr_prim_horario_w),
			a.ds_material_especial,
			a.ie_urgencia,
			a.nr_seq_proc_interno,
			a.ie_lado,
			a.ie_respiracao,
			a.cd_mod_vent,
			a.ie_disp_resp_esp,
			a.qt_fluxo_oxigenio,
			coalesce(qt_min_intervalo,0),
			a.nr_seq_prot_glic,
			a.ds_dado_clinico,
			ie_objetivo_onco,
			coalesce(ie_executar_leito, 'N'),
			nr_seq_contraste,
			ds_exame_fis_achado_cirur,
			a.ds_resumo_clinico,
			a.cd_setor_entrega,
			a.cd_setor_coleta,
			SUBSTR(a.ds_prescricao,1,80),
			a.ie_horario,
			a.cd_medico_exec,
			substr(a.ds_diag_provavel_ap,1,255),
			substr(a.ds_exame_anterior_ap,1,255),
			substr(a.ds_localizacao_lesao,1,2000),
			substr(a.ds_tempo_doenca,1,255),
			substr(a.cd_cgc_laboratorio,1,14),
			a.qt_frasco_env,
			a.nr_seq_proc_int_cirur,
			a.qt_peca_ap,
			a.nr_seq_amostra_princ,
			a.ds_qualidade_peca_ap,
			a.ie_forma_exame,
			a.cd_pessoa_coleta,
			a.ds_justificativa,
			a.cd_kit_material
	from	exame_laboratorio b,
			Protocolo_medic_proc a
	where	obter_se_exame_vancocinemia(a.nr_seq_exame) = 'S'
	and		a.nr_seq_exame		= b.nr_seq_exame
	and		((b.ie_solicitacao = 'S') or (coalesce(a.nr_seq_exame::text, '') = ''))
	and		a.nr_sequencia		= nr_seq_prot_vanco_w
	and		a.cd_protocolo	 	= cd_protocolo_vanco_w
	order by a.nr_seq_apres;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	prescr_material
	where	ie_agrupador	= 1
	and		nr_prescricao	= nr_prescricao_w;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_w;


BEGIN

select	max(cd_protocolo)
into STRICT	cd_protocolo_vanco_w
from	protocolo_medicacao
where	coalesce(ie_vancomicina, 'N') = 'S'
and		coalesce(ie_situacao,'A') = 'A';

if (coalesce(cd_protocolo_vanco_w::text, '') = '') then
	-- Nao ha nenhum protocolo de vancomicina cadastrado!
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(236591);
end if;

select	max(nr_sequencia)
into STRICT	nr_seq_prot_vanco_w
from	protocolo_medicacao
where	coalesce(ie_vancomicina, 'N') = 'S'
and		cd_protocolo = cd_protocolo_vanco_w;

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and
	((ie_anti_histaminico_p = 'S') or (ie_exame_vancocinemia_p in ('F','S'))) then
		
	if (ie_exame_vancocinemia_p = 'F') then
		nr_prescricao_w		:= nr_prescricao_p;
	else
		nr_prescricao_w		:= nr_prescr_futura_p;
	end if;

	select	max(dt_primeiro_horario),
			max(nr_atendimento),
			max(nr_horas_validade),
			max(dt_prescricao),
			max(cd_estabelecimento),
			max(cd_setor_atendimento),
			max(dt_inicio_prescr),
			max(dt_validade_prescr),
			coalesce(max(qt_peso),0),
			coalesce(max(nr_seq_pend_pac_acao),0)
	into STRICT	dt_primeiro_horario_w,
			nr_atendimento_w,
			nr_horas_validade_w,
			dt_prescricao_w,
			cd_estabelecimento_w,
			cd_setor_prescr_w,
			dt_inicio_prescr_w,
			dt_validade_prescr_w,
			qt_peso_w,
			nr_seq_pend_pac_acao_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_w;
	
	cd_estabelecimento_w	:= coalesce(cd_estabelecimento_p, cd_estabelecimento_w);

	ie_consiste_medic_w := Obter_Param_Usuario(924, 18, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_consiste_medic_w);

	CALL Consiste_Protocolo_prescricao(cd_estabelecimento_w, cd_protocolo_vanco_w, nr_seq_prot_vanco_w, ie_consiste_medic_w);
					
	-- Gerar medicamentos, tipo anti-histamanico
	if (ie_anti_histaminico_p = 'S') then
	
		qt_min_pad_anti_hist_w	:= 30/24/60;
		
		ie_REP_1069_w := obter_param_usuario(924, 1069, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_REP_1069_w);
	
		-- Localizar a ultima vancomicina prescrita (sendo esta, a vancomicina principal da ultima acao)  na prescricao [ATAQUE ou MANUTENCAO]
		select	max(nr_sequencia)
		into STRICT	nr_seq_vanco_w
		from	prescr_material a
		where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
		and		coalesce(a.nr_seq_medic_material::text, '') = ''
		and     obter_se_mat_vancomicina(a.cd_material) = 'S'
		and     a.ie_agrupador = 1	
		and		a.nr_prescricao = nr_prescricao_p;
		
		-- Verificar se possui vancomicina de ataque por protocolo
		select	coalesce(max('S'), 'N')
		into STRICT	ie_possui_ataque_w
		from	prescr_material a
		where	a.ie_em_protocolo_vanco = 'S'
		and		coalesce(a.ie_urgencia, 'N') = 'S'
		and		a.nr_sequencia = nr_seq_vanco_w
		and		a.nr_prescricao = nr_prescricao_w;

		-- Inserir medicamentos vinculados ao protocolo
		CALL Inserir_mat_prescr_prot(nr_prescricao_w, cd_protocolo_vanco_w, nr_seq_prot_vanco_w,0, 1, 0, 0, 0, null, null, null, null, 1, nm_usuario_p, null,qt_peso_w,null,0,0, null,null,null, null,null,null, null,null,null,null,null,null,null,'S',null,null,null,null,null,null,null,null,null,null,null,null);
		
		-- Excluir vancomicinas geradas pelo protocolo
		delete	FROM prescr_material a
		where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
		and		coalesce(a.nr_seq_medic_material::text, '') = ''
		and		a.nr_seq_protocolo = nr_seq_prot_vanco_w
		and		a.cd_protocolo = cd_protocolo_vanco_w
		and     obter_se_mat_vancomicina(a.cd_material) = 'S'
		and		a.nr_sequencia > nr_seq_vanco_w
		and     a.ie_agrupador = 1	
		and		a.nr_prescricao = nr_prescricao_p;
		
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		
		-- Localizar vancomicina de manutencao
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_vanco_manut_w
		from	prescr_material a
		where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
		and     obter_se_mat_vancomicina(a.cd_material) = 'S'
		and		a.nr_sequencia > nr_seq_vanco_w
		and		coalesce(a.ie_urgencia,'N') = 'N'
		and     a.ie_agrupador = 1	
		and		a.nr_prescricao = nr_prescricao_p;
		
		-- Buscar intervalo da dose de manutencao
		if (nr_seq_vanco_manut_w IS NOT NULL AND nr_seq_vanco_manut_w::text <> '') then
			select	max(cd_intervalo)
			into STRICT	cd_intervalo_w
			from	prescr_material
			where	coalesce(ie_em_protocolo_vanco,'N') = 'S'
			and		coalesce(ie_urgencia,'N') = 'N'
			and		nr_sequencia = nr_seq_vanco_manut_w
			and		nr_prescricao = nr_prescricao_p;
		end if;
		
		-- Buscar intervalo da dose de ataque ou fora do protocolo
		if (coalesce(cd_intervalo_w::text, '') = '') then
			select	max(cd_intervalo)
			into STRICT	cd_intervalo_w
			from	prescr_material
			where	nr_sequencia = nr_seq_vanco_w
			and		nr_prescricao = nr_prescricao_p;
		end if;
		
		-- Valida sequencia de manutencao
		nr_seq_vanco_manut_w	:= coalesce(nr_seq_vanco_manut_w, nr_seq_vanco_w);
		
		-- Limpa horarios
		hr_prim_horario_w	:= null;
		hr_dose_ataque_w	:= null;
		
		-- Verificar se horario de inicio da medicacao esta dentro da vigencia
		select	max(a.hr_prim_horario),
				coalesce(max(a.qt_dia_prim_hor),0),
				max(a.cd_material),
				max(a.ie_administrar),
				coalesce(max(a.nr_ocorrencia),0),
				coalesce(max(qt_min_intervalo),0),
				coalesce(max(qt_hora_intervalo),0),
				max(ds_horarios)
		into STRICT	hr_prim_horario_w,
				qt_dia_prim_hor_w,
				cd_material_w,
				ie_administrar_w,
				nr_ocorrencia_vanco_w,
				qt_min_intervalo_w,
				qt_hora_intervalo_w,
				ds_horarios_w
		from	prescr_material a
		where	a.nr_sequencia = nr_seq_vanco_w
		and		a.nr_prescricao = nr_prescricao_p;
		
		-- Data de inicio da primeira vancomicina (ataque ou manutencao)		
		dt_inicio_item_w	:= 	trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w, coalesce(hr_prim_horario_w, dt_inicio_prescr_w)), 'mi') + qt_dia_prim_hor_w - qt_min_pad_anti_hist_w;
		
		-- Validando data de inicio do anti-histaminico (Se precisara de dose de ataque)
		if (dt_inicio_item_w < dt_inicio_prescr_w) then
			if	((ie_possui_ataque_w = 'N') or (nr_seq_vanco_w <> nr_seq_vanco_manut_w)) then

				if (ie_possui_ataque_w = 'N') then
					select	coalesce(max(nr_ocorrencia),0)
					into STRICT	nr_ocorrencia_vanco_w
					from	prescr_material
					where	nr_sequencia = nr_seq_vanco_manut_w
					and		nr_prescricao = nr_prescricao_p;
				end if;
				
				ie_urgencia_w	:= 'N';
				hr_dose_ataque_w	:= to_char(dt_inicio_item_w, 'hh24:mi');
				
				if (nr_seq_vanco_manut_w IS NOT NULL AND nr_seq_vanco_manut_w::text <> '') then
					select	coalesce(max(a.hr_prim_horario), hr_dose_ataque_w),
							coalesce(max(a.qt_dia_prim_hor), qt_dia_prim_hor_w)
					into STRICT	hr_prim_horario_w,
							qt_dia_prim_hor_w
					from	prescr_material a
					where	a.nr_sequencia = nr_seq_vanco_manut_w
					and		a.nr_prescricao = nr_prescricao_w;
					
					dt_inicio_item_w	:= 	trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w, coalesce(hr_prim_horario_w, dt_inicio_prescr_w)), 'mi') + qt_dia_prim_hor_w - qt_min_pad_anti_hist_w;
					
					if (dt_inicio_prescr_w > dt_inicio_item_w) then
						qt_dia_prim_hor_w	:= 1;
					end if;
					
				else
					cd_intervalo_w		:= Obter_interv_acm_sn_agora_lib(cd_estabelecimento_p, 1, 2, 1, cd_material_w, null, nr_prescricao_p, null, null);
					ie_urgencia_w		:= 'S';
					hr_dose_ataque_w	:= '';
					qt_dia_prim_hor_w	:= 0;
				end if;
			end if;
		end if;
		
		ds_tipo_interv_w	:= trim(both Obter_se_interv_agora_acm_sn(cd_intervalo_w));
		ie_urgencia_w		:= 'N';
		ie_acm_w			:= 'N';
		ie_se_necessario_w	:= 'N';
		
		if (ds_tipo_interv_w = 'AGORA') then
			ie_urgencia_w	:= 'S';
		elsif (ds_tipo_interv_w = 'SN') then
			ie_se_necessario_w	:= 'S';
		elsif (ds_tipo_interv_w = 'ACM') then
			ie_acm_w		:= 'S';
		end if;
		
		qt_dose_especial_w		:= null;
		
		if (hr_dose_ataque_w IS NOT NULL AND hr_dose_ataque_w::text <> '') then
			ie_dose_espec_agora_w	:= 'S';
		else
			ie_dose_espec_agora_w	:= 'N';
		end if;
		
		if (ie_possui_ataque_w = 'N') and (nr_ocorrencia_vanco_w < 2) then
			nr_ocorrencia_w	:= 0;
			ds_horarios_w	:= null;
		else
			nr_ocorrencia_w	:= 0;
			
			if (nr_seq_vanco_w = nr_seq_vanco_manut_w) then
				nr_ocorrencia_w	:= nr_ocorrencia_vanco_w;
				
				if (ie_possui_ataque_w = 'N') then
					if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (trim(both ds_horarios_w) not in ('ACM','SN')) and (position(' ' in ds_horarios_w) > 0) then
						ds_horarios_w	:= replace(replace(replace(ds_horarios_w,'  ', ' '),'  ', ' '),'  ', ' ');
						ds_horarios_w	:= substr(ds_horarios_w, position(' ' in ds_horarios_w)+1, length(ds_horarios_w));
						hr_prim_horario_w	:= substr(ds_horarios_w, 1, position(' ' in ds_horarios_w)-1);
						
						if (position(':' in hr_prim_horario_w) = 0) then
							hr_prim_horario_w	:= hr_prim_horario_w || ':00';
						end if;
						
						if (length(hr_prim_horario_w) = 5) then
							dt_inicio_item_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w, hr_prim_horario_w), 'mi');
							
							if (dt_inicio_item_w < dt_inicio_prescr_w) then
								qt_dia_prim_hor_w	:= 1;
							else
								qt_dia_prim_hor_w	:= 0;
							end if;
								
							dt_inicio_item_w	:= dt_inicio_item_w + qt_dia_prim_hor_w - qt_min_pad_anti_hist_w;
						end if;
					end if;
					
					if (ie_dose_espec_agora_w = 'S') then
						nr_ocorrencia_w	:= nr_ocorrencia_w-1;
					end if;
				end if;
			end if;
			
			ds_horarios_w	:= null;
			ds_horarios2_w	:= null;
			
			SELECT * FROM Calcular_Horario_Prescricao(	nr_prescricao_w,  -- NR_PRESCRICAO_P
											cd_intervalo_w,  -- CD_INTERVALO_P
											dt_inicio_prescr_w, --dt_inicio_item_w, -- DT_PRIM_HORARIO_PRESC_P
											dt_inicio_item_w,  -- DT_HORA_INICIO_P
											nr_horas_validade_w,  --trunc((nvl(dt_validade_prescr_w,dt_inicio_prescr_w+nr_horas_validade_w)-dt_inicio_item_w)*24) - 30*1/60/60, -- NR_HORA_VALIDADE_P
											cd_material_w,  --cd_material_w, -- CD_MATERIAL_P
											qt_hora_intervalo_w,  -- QT_HORA_INTERVALO_P
											qt_min_intervalo_w,  -- QT_MIN_INTERVALO_P
											nr_ocorrencia_w,  -- NR_INTERVALO_P
											ds_horarios_w,  -- DS_HORARIOS_P
											ds_horarios2_w,  -- DS_HORARIOS2_P
											'N',  -- IE_SOLUCAO_P
											null,  -- DS_DOSE_DIFERENCIADA_P
											null,  -- IE_EXCLUI_HOR_DD_ZERADOS_P
											null,  -- CD_PROCEDIMENTO_P
											null,  -- IE_ORIGEM_PROCED_P
											null) INTO STRICT 
											nr_ocorrencia_w, 
											ds_horarios_w, 
											ds_horarios2_w; -- NR_SEQ_PROC_INTERNO_P
											
			ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;
		end if;
		
		open C02;
		loop
		fetch C02 into
			nr_seq_anti_hist_w,
			cd_material_w,
			cd_unidade_medida_dose_w,
			ie_via_aplicacao_w,
			qt_dose_w,
			qt_conversao_dose_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin	
			if (hr_dose_ataque_w IS NOT NULL AND hr_dose_ataque_w::text <> '') then
				qt_dose_especial_w		:= qt_dose_w;
			end if;
			
			select	coalesce(max(qt_conversao),0)
			into STRICT	qt_conversao_dose_w
			from	unidade_medida_dose_v
			where	cd_unidade_medida = cd_unidade_medida_dose_w
			and		cd_material = cd_material_w;
			
			qt_unitaria_w	:= dividir(qt_dose_w, qt_conversao_dose_w);
			
			SELECT * FROM Obter_Quant_Dispensar(	cd_estabelecimento_p, cd_material_w, nr_prescricao_p, nr_seq_anti_hist_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, coalesce(qt_dose_especial_w,0), nr_ocorrencia_w, '', 'S', cd_unidade_medida_dose_w, qt_dias_util_w, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
									
			update	prescr_material a
			set		a.ie_administrar = ie_administrar_w,
					a.ie_urgencia = ie_urgencia_w,
					a.ie_se_necessario = ie_se_necessario_w,
					a.ie_acm = ie_acm_w,
					a.cd_intervalo = cd_intervalo_w,
					a.ds_horarios = ds_horarios_w,
					a.nr_ocorrencia = nr_ocorrencia_w,
					a.hr_prim_horario = to_char(dt_inicio_item_w,'hh24:mi'),
					a.ie_dose_espec_agora = ie_dose_espec_agora_w,
					a.qt_dose_especial = qt_dose_especial_w,
					a.hr_dose_especial = hr_dose_ataque_w,
					a.nr_seq_medic_material = nr_seq_vanco_w,
					a.qt_total_dispensar = qt_total_dispensar_w,
					a.qt_material = qt_material_w,
					a.qt_unitaria = qt_unitaria_w,
					a.qt_dia_prim_hor = qt_dia_prim_hor_w,
					a.ie_regra_disp = CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.ie_regra_disp  ELSE ie_regra_disp_w END ,
					a.ie_em_protocolo_vanco = 'S'
			where	a.nr_sequencia = nr_seq_anti_hist_w
			and		a.nr_prescricao = nr_prescricao_p;
			
			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
			
			CALL Gerar_Reconst_Diluicao(nr_prescricao_p, nr_seq_anti_hist_w, 'A');
			CALL Ajustar_Dose_Diluente(nr_prescricao_p, nr_seq_anti_hist_w);

			if (ie_REP_1069_w = 'S') and (obter_se_medic_diluido(nr_prescricao_p, nr_seq_anti_hist_w) = 'S') then
				update	prescr_material
				set		qt_solucao = qt_dose
				where	nr_sequencia = nr_seq_anti_hist_w
				and		nr_prescricao = nr_prescricao_p;
			end if;

			Ajustar_Prescr_Material(nr_prescricao_p, nr_seq_anti_hist_w);

			ds_erro_w := consistir_prescr_material(nr_prescricao_p, nr_seq_anti_hist_w, nm_usuario_p, cd_perfil_p, ds_erro_w);
			
			end;
		end loop;
		close C02;

		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;		
	end if;
	
	if (qt_horas_proced_p > 0) then
		if (ie_exame_vancocinemia_p = 'F') then
			update	prescr_medica
			set		qt_hor_exame_vanco = qt_horas_proced_p
			where	nr_prescricao = nr_prescricao_p;
			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		elsif (ie_exame_vancocinemia_p = 'S') then

			ie_dt_prescr_dt_exec_proc_w := Obter_Param_Usuario(924, 397, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_dt_prescr_dt_exec_proc_w);
			ie_prescr_proc_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prescr_proc_sem_lib_w);
			ie_check_tipo_interv_w := obter_param_usuario(924, 809, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_check_tipo_interv_w);
			ie_kit_automatico_w := Obter_Param_Usuario(924, 810, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_kit_automatico_w);
		
			-- Inserir Procedimentos
			select	coalesce(max(nr_sequencia),0),
					coalesce(max(nr_agrupamento),0)
			into STRICT	nr_seq_atual_prescr_w,
					nr_agrup_atual_presc_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_w;

			dt_procedimento_w		:= null;
			
			if (coalesce(ie_possui_ataque_w::text, '') = '') then
				-- Verificar se possui vancomicina de ataque por protocolo
				select	coalesce(max('S'), 'N')
				into STRICT	ie_possui_ataque_w
				from	prescr_material a
				where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
				and		coalesce(a.nr_seq_medic_material::text, '') = ''
				and     obter_se_mat_vancomicina(a.cd_material) = 'S'
				and		a.ie_em_protocolo_vanco = 'S'
				and		coalesce(a.ie_urgencia, 'N') = 'S'
				and		a.ie_agrupador = 1
				and		a.nr_prescricao = nr_prescricao_p;
			end if;
			
			if (ie_possui_ataque_w = 'N') then
				select	max(b.dt_prev_execucao)
				into STRICT	dt_ultimo_proc_prev_w
				from	prescr_procedimento b,
						prescr_medica a
				where	obter_se_exame_vancocinemia(b.nr_seq_exame) = 'S'
				and		coalesce(b.dt_suspensao::text, '') = ''
				and		a.nr_prescricao = b.nr_prescricao
				and		coalesce(a.dt_suspensao::text, '') = ''
				and		a.nr_prescricao <> nr_prescricao_p
				and		a.nr_atendimento = nr_atendimento_w;

				if (dt_ultimo_proc_prev_w IS NOT NULL AND dt_ultimo_proc_prev_w::text <> '') then	
					select	min(c.dt_horario)
					into STRICT	dt_procedimento_w
					from	prescr_mat_hor c,
							prescr_material b,
							prescr_medica a
					where	c.dt_horario > dt_ultimo_proc_prev_w
					and		c.nr_seq_material = b.nr_sequencia
					and		coalesce(coalesce(b.nr_sequencia_solucao, b.nr_sequencia_dieta, b.nr_sequencia_diluicao)::text, '') = ''
					and		a.nr_prescricao = c.nr_prescricao
					and		obter_se_mat_vancomicina(b.cd_material) = 'S'
					and		coalesce(b.dt_suspensao::text, '') = ''
					and		b.ie_agrupador = 1
					and		a.nr_prescricao = b.nr_prescricao
					and		coalesce(a.dt_suspensao::text, '') = ''
					and		a.dt_prescricao > dt_ultimo_proc_prev_w
					and		a.nr_atendimento = nr_atendimento_w;
				end if;
			else
				select	round(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_w, max(a.hr_prim_horario)), 'hh24')
				into STRICT	dt_procedimento_w
				from	prescr_material a
				where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
				and		coalesce(a.nr_seq_medic_material::text, '') = ''
				and     obter_se_mat_vancomicina(a.cd_material) = 'S'
				and		a.ie_em_protocolo_vanco = 'S'
				and		coalesce(a.ie_urgencia, 'N') = 'S'
				and		a.ie_agrupador = 1
				and		a.nr_prescricao = nr_prescricao_p;
			end if;

			qt_dia_util_w	:= 0;
			
			if (coalesce(dt_procedimento_w::text, '') = '') then
				
				select	max(a.hr_prim_horario)
				into STRICT	hr_prim_horario_w
				from	prescr_material a
				where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
				and		obter_se_mat_vancomicina(a.cd_material) = 'S'
				and		coalesce(a.ie_urgencia, 'N') = 'N'
				and		a.ie_agrupador = 1
				and		nr_prescricao = nr_prescricao_p;
				
				if (coalesce(hr_prim_horario_w::text, '') = '') then		
					select	coalesce(max(a.hr_prim_horario), to_char(dt_inicio_prescr_w,'hh24:mi')),
							coalesce(max(a.qt_dias_util),0)
					into STRICT	hr_prim_horario_w,
							qt_dia_util_w
					from	prescr_material a
					where	coalesce(coalesce(a.nr_sequencia_solucao, a.nr_sequencia_dieta, a.nr_sequencia_diluicao)::text, '') = ''
					and     obter_se_mat_vancomicina(a.cd_material) = 'S'
					and		a.ie_agrupador = 1
					and		a.nr_prescricao = nr_prescricao_p;
					
					dt_procedimento_w	:= dt_inicio_prescr_w;
				else
					dt_procedimento_w	:= dt_prescricao_w;
				end if;
			
				dt_procedimento_w		:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_procedimento_w, hr_prim_horario_w), 'mi');
			end if;
			
			dt_procedimento_w		:= dt_procedimento_w + qt_dia_util_w + (coalesce(qt_horas_proced_p,48)/24);
			hr_prim_horario_w		:= to_char(dt_procedimento_w, 'hh24:mi');

			open C03;
			loop
			fetch C03 into
				nr_seq_procedimento_w,
				nr_seq_proc_prot_w,
				cd_procedimento_w,
				qt_procedimento_w,
				ds_observacao_w,
				ie_origem_proced_w,
				cd_intervalo_w,
				cd_setor_exclusivo_w,
				cd_material_exame_w,
				nr_seq_exame_w,
				ie_se_necessario_w,
				ie_acm_w,
				hr_prim_hor_proced_w,
				ds_material_especial_w,
				ie_agora_w,
				nr_seq_proc_interno_w,
				ie_lado_w,
				ie_respiracao_w,
				cd_mod_vent_w,
				ie_disp_resp_esp_w,
				qt_fluxo_oxigenio_w,
				qt_min_intervalo_w,
				nr_seq_prot_glic_w,
				ds_dado_clinico_w,
				ie_objetivo_onco_w,
				ie_executar_leito_w,
				nr_seq_contraste_w,
				ds_exame_fis_achado_cirur_w,
				ds_resumo_clinico_w,
				cd_setor_entrega_w,
				cd_setor_coleta_w,
				ds_prescricao_w,
				ie_previsao_proced_w,
				cd_medico_exec_w,
				ds_diag_provavel_ap_w,
				ds_exame_anterior_ap_w,
				ds_localizacao_lesao_w,
				ds_tempo_doenca_w,
				cd_cgc_laboratorio_w,
				qt_frasco_env_w,
				nr_seq_proc_int_cirur_w,
				qt_peca_ap_w,
				nr_seq_amostra_princ_w,
				ds_qualidade_peca_ap_w,
				ie_forma_exame_w,
				cd_pessoa_coleta_w,
				ds_justificativa_w,
				cd_kit_material_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
					SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_w, 0, 0, cd_procedimento_w, ie_origem_proced_w, NULL, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
				end if;

				if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
					begin
					select	DisTINCT
						cd_procedimento,
						ie_origem_proced
					into STRICT	cd_proced_aux_w,
						ie_origem_aux_w
					from	exame_lab_convenio
					where	nr_seq_exame	= nr_seq_exame_w
					and	cd_convenio	= cd_convenio_w;
					exception
						when others then
							cd_proced_aux_w	:= null;
							ie_origem_aux_w	:= null;
					end;

					cd_procedimento_w	:= coalesce(cd_proced_aux_w,cd_procedimento_w);
					ie_origem_proced_w	:= coalesce(ie_origem_aux_w,ie_origem_proced_w);
				end if;

				select	coalesce(max(ie_situacao),'A')
				into STRICT	ie_situacao_w
				from	procedimento
				where	ie_origem_proced	= ie_origem_proced_w
				and		cd_procedimento		= cd_procedimento_w;

				if (ie_situacao_w = 'A') then

					if (coalesce(cd_procedimento_w::text, '') = '') and (coalesce(nr_atendimento_w,0) > 0) then
						select	a.ie_tipo_convenio,
								b.cd_convenio,
								b.cd_categoria,
								a.cd_estabelecimento,
								b.cd_plano_convenio
						into STRICT	ie_tipo_convenio_w,
								cd_convenio_w,
								cd_categoria_w,
								cd_estab_atend_w,
								cd_plano_convenio_w
						from	atend_categoria_convenio b,
								atendimento_paciente a
						where	a.nr_atendimento	= nr_atendimento_w
						and		b.nr_atendimento	= a.nr_atendimento
						and		b.nr_seq_interno	= OBTER_ATECACO_ATendIMENTO(A.NR_ATendIMENTO);

						SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_atend_w, ie_tipo_convenio_w, nr_seq_proc_interno_w, cd_material_exame_w, cd_plano_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_int_aux_w) INTO STRICT cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_int_aux_w;

					end if;

					begin
					select	coalesce(cd_setor_exclusivo,cd_setor_exclusivo_w)
					into STRICT	cd_setor_exclusivo_w
					from	procedimento
					where	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w;
					exception
						when others then
							cd_setor_exclusivo_w := cd_setor_exclusivo_w;
					end;

					ie_gerar_setor_w := obter_se_gerar_setor_rotina(cd_estabelecimento_w, 924, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w, nr_seq_exame_w, cd_setor_prescr_w,nm_usuario_p);

					/* Rafael em 28/2/8 OS81068 */

					if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (ie_gerar_setor_w = 'S') then
						select	obter_setor_atend_proc(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, null, cd_setor_prescr_w, nm_usuario_p, nr_seq_proc_interno_w,nr_atendimento_w)
						into STRICT	cd_setor_exclusivo_w
						;
					end if;
					
					if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

						select	obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,cd_setor_prescr_w,null,nr_seq_exame_w)
						into STRICT	cd_setor_exclusivo_w
						;

					end if;

					if (coalesce(ie_dt_prescr_dt_exec_proc_w, 'N') <> 'S') then
						select	Obter_data_prev_exec(dt_prescricao_w,dt_procedimento_w,cd_setor_exclusivo_w, nr_prescricao_w, 'A')
						into STRICT	dt_primeiro_horario_w
						;
					else
						dt_primeiro_horario_w := dt_prescricao_w;
					end if;		

					dt_prim_horario_proced_w	:= null;

					if (hr_prim_hor_proced_w <> '  :  ') and (hr_prim_hor_proced_w IS NOT NULL AND hr_prim_hor_proced_w::text <> '') then
						begin
						dt_prim_horario_proced_w	:=  trunc(ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_primeiro_horario_w, SUBSTR(hr_prim_hor_proced_w,1,5)), 'mi');
						if (dt_inicio_prescr_w > dt_prim_horario_proced_w) then
							begin
							dt_prim_horario_proced_w := dt_prim_horario_proced_w + 1;
							end;
						end if;
						end;
					end if;

					if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (ie_check_tipo_interv_w = 'S') then
						select	coalesce(coalesce(max(ie_se_necessario),ie_se_necessario_w),'N'),
								coalesce(coalesce(max(ie_agora),ie_urgencia_w),'N'),
								coalesce(coalesce(max(ie_acm),ie_acm_w),'N')
						into STRICT	ie_se_necessario_w,
								ie_urgencia_w,
								ie_acm_w
						from	intervalo_prescricao
						where	cd_intervalo = cd_intervalo_w;
					end if;
					
					if (coalesce(ie_urgencia_w,ie_agora_w) = 'S') then
						dt_prim_horario_proced_w	:= clock_timestamp();
					elsif (ie_previsao_proced_w IS NOT NULL AND ie_previsao_proced_w::text <> '') then	/* Verificar se procedimento cadastrado com especificacao para a data prevista */
						if (ie_previsao_proced_w = 'DP') then		---- Data da prescricao (DP) 
							dt_prim_horario_proced_w := dt_prescricao_w;
						elsif (ie_previsao_proced_w = '3h') then	---- 3 horas apos a prescricao (3h)
							dt_prim_horario_proced_w := dt_prescricao_w + 3/24;
						elsif (ie_previsao_proced_w = '6h') then	---- 6 horas apos a prescricao (6h)
							dt_prim_horario_proced_w := dt_prescricao_w + 6/24;
						elsif (ie_previsao_proced_w = '9h') then	---- 9 horas apos a prescricao (9h)
							dt_prim_horario_proced_w := dt_prescricao_w + 9/24;
						end if;
					end if;
					
					dt_prim_horario_proced_w := dt_prescricao_w + 6/24;

					ds_horarios_w 	:= '';
					nr_ocorrencia_w 	:= 0;

					if (coalesce(ie_urgencia_w,ie_agora_w) = 'S') then
						dt_primeiro_horario_w	:= clock_timestamp();

						select	coalesce(max(obter_interv_acm_sn_agora_lib(cd_estabelecimento_w,1,2,'P',cd_procedimento_w,cd_intervalo_w,nr_prescricao_w,ie_origem_proced_w,nr_seq_proc_interno_w)),cd_intervalo_w)
						into STRICT	cd_intervalo_w
						;

					elsif (ie_previsao_proced_w IS NOT NULL AND ie_previsao_proced_w::text <> '') then	/* Verificar se procedimento cadastrado com especificacao para a data prevista */
						if (ie_previsao_proced_w = 'DP') then		---- Data da prescricao (DP) 
							dt_primeiro_horario_w := dt_prescricao_w;
						elsif (ie_previsao_proced_w = '3h') then	---- 3 horas apos a prescricao (3h)
							dt_primeiro_horario_w := dt_prescricao_w + 3/24;
						elsif (ie_previsao_proced_w = '6h') then	---- 6 horas apos a prescricao (6h)
							dt_primeiro_horario_w := dt_prescricao_w + 6/24;
						elsif (ie_previsao_proced_w = '9h') then	---- 9 horas apos a prescricao (9h)
							dt_primeiro_horario_w := dt_prescricao_w + 9/24;
						end if;
					end if;
					
					-- A geracao do procedimento sera para 48 horas apos a data atual
					dt_primeiro_horario_w		:= dt_procedimento_w;
					dt_prim_horario_proced_w	:= dt_procedimento_w;

					SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_w, cd_intervalo_w, coalesce(dt_procedimento_w,coalesce(dt_primeiro_horario_w,dt_prescricao_w)), coalesce(dt_prim_horario_proced_w,coalesce(dt_procedimento_w,dt_primeiro_horario_w)), nr_horas_validade_w, cd_procedimento_w, 0, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;

					ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;

					select	padroniza_horario_prescr(ds_horarios_w, to_char(dt_inicio_prescr_w,'dd/mm/yyyy hh24:mi:ss'))
					into STRICT	ds_horarios_padrao_w
					;
					
					if (/*ieEliminaHorVigencia_w*/
 'N' = 'S') and (ie_agora_w <> 'S') and (ds_horarios_padrao_w IS NOT NULL AND ds_horarios_padrao_w::text <> '') then
						ds_horarios_w	:= Eliminar_hor_vigencia_proc(ds_horarios_w, cd_intervalo_w, dt_inicio_prescr_w,
												coalesce(dt_prim_horario_proced_w,coalesce(dt_procedimento_w,dt_primeiro_horario_w)),
												0, qt_min_intervalo_w, nr_prescricao_w,coalesce(ie_agora_w,'N'),coalesce(dt_prim_horario_proced_w,coalesce(dt_procedimento_w,dt_primeiro_horario_w)));
						if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (ds_horarios_w <> '') then
							nr_ocorrencia_w := obter_ocorrencias_horarios_rep(ds_horarios_w);
						end if;
					end if;


					select	max(obter_ctrl_glic_proc(nr_seq_proc_interno_w))
					into STRICT	ie_cig_w
					;

					if (ie_cig_w	= 'CIG') then
						ds_horarios_w 	:= to_char(coalesce(dt_prim_horario_proced_w,coalesce(dt_procedimento_w,dt_primeiro_horario_w)),'hh24:mi');
						nr_ocorrencia_w	:= 1;
					end if;

					if (ie_se_necessario_w = 'S') then
						ds_horarios_w := 'SN';
					ELSif (ie_acm_w = 'S') then
						ds_horarios_w := 'ACM';
					end if;

					if (ie_se_necessario_w = 'S') or (ie_acm_w = 'S') then
						select	max(cd_setor_atendimento)
						into STRICT	cd_setor_atendimento_w
						from	prescr_medica
						where	nr_prescricao	= nr_prescricao_w;

						select	coalesce(max(b.qt_se_necessario),0),
								coalesce(max(b.ie_mesmo_zerado),'N')
						into STRICT	nr_ocorrencia_w,
								ie_mesmo_zerado_w
						from	intervalo_prescricao a,
								intervalo_setor b
						where	a.cd_intervalo 		= b.cd_intervalo
						and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
						and		coalesce(b.cd_estab, cd_estabelecimento_w)				= cd_estabelecimento_w
						and		a.cd_intervalo 		= cd_intervalo_w;

						if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then
							select	coalesce(max(qt_se_necessario),1)
							into STRICT	nr_ocorrencia_w
							from	intervalo_prescricao
							where	cd_intervalo = cd_intervalo_w;
						end if;
					end if;

					nr_agrup_atual_presc_w	:= nr_agrup_atual_presc_w + 1;
					
					if (coalesce(nr_atendimento_w,0) > 0) and (coalesce(nr_seq_pend_pac_acao_w,0) > 0) then			
						Select	coalesce(obter_unidade_atendimento(nr_atendimento_w,'IA','CS'), obter_unidade_atendimento(nr_atendimento_w,'A','CS'))
						into STRICT	cd_setor_exclusivo_w	
						;			
					end if;
					
					if (coalesce(cd_medico_exec_w::text, '') = '') then
						ie_medico_prescr_w := Obter_Param_Usuario(924, 998, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_medico_prescr_w);
						if (ie_medico_prescr_w = 'S') then
							select	max(cd_prescritor)
							into STRICT	cd_prescritor_w
							from	prescr_medica
							where	Obter_se_medico(cd_prescritor, 'M') = 'S'
							and		nr_prescricao	= nr_prescricao_w;
							
							cd_medico_exec_w	:= cd_prescritor_w;
						end if;
					end if;
					
					insert into prescr_procedimento(
						nr_prescricao,
						nr_sequencia,
						nr_agrupamento,
						cd_procedimento,
						qt_procedimento,
						dt_atualizacao,
						nm_usuario,
						ds_observacao,
						cd_motivo_baixa,
						ie_origem_proced,
						cd_intervalo,
						ie_urgencia,
						ie_suspenso,
						cd_setor_atendimento,
						dt_prev_execucao,
						cd_material_exame,
						nr_seq_exame,
						ie_status_atend,
						ie_amostra,
						ie_origem_inf,
						ie_se_necessario,
						ie_acm,
						ds_horarios,
						nr_ocorrencia,
						ds_material_especial,
						nr_seq_interno,
						nr_seq_proc_interno,
						ds_dado_clinico,
						ie_avisar_result,
						cd_protocolo,
						nr_seq_protocolo,
						nr_seq_proc_protocolo,
						ie_lado,
						ie_respiracao,
						cd_mod_vent,
						ie_disp_resp_esp,
						qt_fluxo_oxigenio,
						qt_min_intervalo,
						nr_seq_prot_glic,
						ie_objetivo_onco,
						ie_executar_leito,
						nr_seq_contraste,
						ds_exame_fis_achado_cirur,
						ds_resumo_clinico,
						cd_setor_coleta,
						cd_setor_entrega,
						ds_rotina,
						cd_medico_exec,
						ds_diag_provavel_ap,
						ds_exame_anterior_ap,
						ds_localizacao_lesao,
						ds_tempo_doenca,
						cd_cgc_laboratorio,
						qt_frasco_env,
						nr_seq_proc_int_cirur,
						qt_peca_ap,
						nr_seq_amostra_princ,
						ds_qualidade_peca_ap,
						ie_forma_exame,
						cd_pessoa_coleta,
						ds_justificativa,
						ie_em_protocolo_vanco,
						nr_prescricao_original)
					values (
						nr_prescricao_w,
						nr_seq_procedimento_w,
						nr_agrup_atual_presc_w,
						cd_procedimento_w,
						qt_procedimento_w,
						clock_timestamp(),
						nm_usuario_p,
						ds_observacao_w,
						0,
						ie_origem_proced_w,
						cd_intervalo_w,
						coalesce(ie_urgencia_w,ie_agora_w),
						'N',
						cd_setor_exclusivo_w,
						coalesce(dt_prim_horario_proced_w,coalesce(dt_procedimento_w,dt_primeiro_horario_w)),
						cd_material_exame_w,
						nr_seq_exame_w,
						5,
						'N',
						'1',
						ie_se_necessario_w,
						ie_acm_w,
						ds_horarios_w,
						nr_ocorrencia_w,
						ds_material_especial_w,
						nextval('prescr_procedimento_seq'),
						nr_seq_proc_interno_w,
						ds_dado_clinico_w,
						'N',
						cd_protocolo_vanco_w,
						nr_seq_prot_vanco_w,
						nr_seq_proc_prot_w,
						ie_lado_w,
						ie_respiracao_w,
						cd_mod_vent_w,
						ie_disp_resp_esp_w,
						qt_fluxo_oxigenio_w,
						CASE WHEN qt_min_intervalo_w=0 THEN null  ELSE qt_min_intervalo_w END ,
						nr_seq_prot_glic_w,
						ie_objetivo_onco_w,
						ie_executar_leito_w,
						nr_seq_contraste_w,
						ds_exame_fis_achado_cirur_w,
						ds_resumo_clinico_w,
						cd_setor_coleta_w,
						cd_setor_entrega_w,
						ds_prescricao_w,
						cd_medico_exec_w,
						ds_diag_provavel_ap_w,
						ds_exame_anterior_ap_w,
						ds_localizacao_lesao_w,
						ds_tempo_doenca_w,
						cd_cgc_laboratorio_w,
						qt_frasco_env_w,
						nr_seq_proc_int_cirur_w,
						qt_peca_ap_w,
						nr_seq_amostra_princ_w,
						ds_qualidade_peca_ap_w,
						ie_forma_exame_w,
						cd_pessoa_coleta_w,
						ds_justificativa_w,
						'S',
						nr_prescricao_p);
						
					if (cd_kit_material_w IS NOT NULL AND cd_kit_material_w::text <> '') then
						CALL Gerar_Kit_Proced_manual(cd_estabelecimento_w, nr_prescricao_w, nr_seq_procedimento_w, cd_kit_material_w, nm_usuario_p);
					end if;

					select	coalesce(max(ie_glicemia_mentor),'N')
					into STRICT	ie_prot_glic_mentor_w
					from	protocolo_medicacao
					where	cd_protocolo = cd_protocolo_vanco_w
					and		nr_sequencia = nr_seq_prot_vanco_w;
					
					select	count(*)
					into STRICT	qt_prescr_atend_w
					from	prescr_medica
					where	nr_atendimento = nr_atendimento_w;
									
					if	((ie_prescr_proc_sem_lib_w = 'S') or
						 ((coalesce(nr_seq_pend_pac_acao_w,0) > 0) and (coalesce(ie_prot_glic_mentor_w,'N') = 'S') and (coalesce(nr_seq_prot_glic_w,0) > 0) and (coalesce(qt_prescr_atend_w,0) = 1))) then			
						CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_w,nr_seq_procedimento_w,cd_perfil_p,'N',nm_usuario_p);
					end if;

					CALL Gerar_Prescr_Proc_Glic(nr_prescricao_w, nr_seq_procedimento_w, nr_seq_prot_glic_w, nm_usuario_p);
					CALL Gerar_Med_Mat_Assoc_Glic(nr_prescricao_w, nr_seq_procedimento_w, nr_seq_prot_glic_w);
					CALL Inserir_mat_prescr_prot(nr_prescricao_w, cd_protocolo_vanco_w, nr_seq_prot_vanco_w,0,
								5, 0, nr_seq_proc_prot_w, 0, null,
								nr_seq_procedimento_w, null, cd_intervalo_w, qt_protocolo_w, nm_usuario_p, coalesce(ie_urgencia_w,'N'),coalesce(qt_peso_w,0),hr_prim_horario_w,0,0, null,null,null, null,null,null, null,null,null,null,null,null,null,'S',null,null,null,null,null,null,null,null,null,null,null,null);
					ds_erro_w := consistir_prescr_procedimento(nr_prescricao_w, nr_seq_procedimento_w, nm_usuario_p, 0, ds_erro_w);		
					
					select	coalesce(max(ie_glicemia_mentor),'N')
					into STRICT	ie_prot_glic_mentor_w
					from	protocolo_medicacao
					where	cd_protocolo = cd_protocolo_vanco_w
					and		nr_sequencia = nr_seq_prot_vanco_w;		
					
					if (coalesce(nr_seq_prot_glic_w,0) > 0) and (coalesce(nr_seq_pend_pac_acao_w,0) > 0) and (coalesce(ie_prot_glic_mentor_w,'N') = 'S') then
						
						ie_acm_sn_w	:= 'N';
						if (coalesce(ie_acm_w,'N') = 'S') or (coalesce(ie_se_necessario_w,'N') = 'S') then
							ie_acm_sn_w	:= 'S';
						end if;
						
						SELECT * FROM Aprazar_item_prescr('N', obter_estab_atend(nr_atendimento_w), nr_atendimento_w, 'G', nr_horas_validade_w, cd_procedimento_w, cd_intervalo_w, qt_procedimento_w, dt_inicio_prescr_w, to_char(nr_prescricao_w), nr_prescricao_w, nr_seq_procedimento_w, 'N', null, wheb_mensagem_pck.get_texto(307600),  -- Realizado pelo sistema
											nm_usuario_p, ie_inconsistencia_w, ds_inconsistentes_w, nr_seq_proc_interno_w, null, ie_acm_sn_w, null, null, 'N', null, nr_seq_prot_glic_w, null, null, '', null, null) INTO STRICT ie_inconsistencia_w, ds_inconsistentes_w;
						
					end if;

				end if;

				exception
					when others then			
						ds_erro_w	:= substr(sqlerrm(SQLSTATE),1,255);			
						--Erro na Inclusao dos Procedimentos da Prescricao Medica #@DS_ERRO#@
						CALL Wheb_mensagem_pck.exibir_mensagem_abort(176615,'DS_ERRO='||ds_erro_w);
				end;

			end loop;
			close C03;

			if (ie_kit_automatico_w = 'S') then
				CALL gerar_kit_procedimento(cd_estabelecimento_w, nr_prescricao_w, null, nm_usuario_p);
			end if;
		
			-- Atualizar os medicamentos dos procedimentos ---
			open C05;
			loop
				fetch C05 into
					nr_seq_procedimento_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
				--ajustar_prescr_mat_proc(nr_prescricao_w, nr_seq_procedimento_w);
				CALL Gerar_med_mat_assoc(nr_prescricao_w,nr_seq_procedimento_w);
				CALL Gerar_prescr_proc_assoc(nr_prescricao_w,nr_seq_procedimento_w, nm_usuario_p);
				CALL ajustar_prescr_mat_proc(nr_prescricao_w, nr_seq_procedimento_w, cd_perfil_p,null);
			end loop;
			close C05;
		end if;
	end if;

	-- Atualizar os reconstituintes, diluente e rediluentes dos medicamentos ---
	open C04;
	loop
	fetch C04 into
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		CALL ajustar_prescr_material(nr_prescricao_w, nr_seq_material_w);
	end loop;
	close C04;
	
	CALL reordenar_medicamento(nr_prescricao_w);
	CALL reordenar_procedimento(nr_prescricao_w);

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_protocolo_vancomicina ( cd_estabelecimento_p bigint, cd_perfil_p text, nm_usuario_p text, nr_prescricao_p bigint, nr_prescr_futura_p bigint, ie_anti_histaminico_p text, ie_exame_vancocinemia_p text, qt_horas_proced_p bigint) FROM PUBLIC;

