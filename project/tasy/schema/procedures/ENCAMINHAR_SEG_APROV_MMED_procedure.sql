-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE encaminhar_seg_aprov_mmed ( nm_usuario_p text, nr_seq_laudo_p bigint, ds_mensagem_p text, cd_medico_seg_aprov_p text) AS $body$
DECLARE


			
ie_laudo_liberado_w				varchar(2);
nr_prescricao_w					bigint;
nr_sequencia_prescricao_w				bigint;
nr_atendimento_w    				bigint;
cd_procedimento_w   				bigint;
nr_seq_laudo_compl_w        laudo_paciente_compl.nr_sequencia%type;
ie_exist_med_rep_cat_w      integer;
nr_atend_laudo_w            laudo_paciente.nr_atendimento%type;
cd_pessoa_fisica_w          laudo_paciente.cd_pessoa_fisica%type;


C01 CURSOR FOR
SELECT distinct	nr_prescricao,
		nr_sequencia_prescricao
from		procedimento_paciente
where		nr_laudo = nr_seq_laudo_p;
	

BEGIN

select
  max(a.nr_atendimento),
  max(a.cd_procedimento)
into STRICT
  nr_atendimento_w,
  cd_procedimento_w
from	procedimento_paciente a
where	nr_sequencia = (SELECT max(b.nr_seq_proc)
			from 	laudo_paciente b
			where	b.nr_sequencia = nr_seq_laudo_p);


update	laudo_paciente
set	ie_exige_seg_aprov = 'S',
	dt_liberacao  = NULL,
	cd_resp_seg_aprov = cd_medico_seg_aprov_p,
	nm_usuario_liberacao  = NULL
where	nr_sequencia = nr_seq_laudo_p;

select max(nr_sequencia)
into STRICT nr_seq_laudo_compl_w
from laudo_paciente_compl
where nr_seq_laudo = nr_seq_laudo_p;

if (nr_seq_laudo_compl_w > 0) then
  update laudo_paciente_compl
  set dt_seg_aprov_solicitado = clock_timestamp()
  where nr_sequencia = nr_seq_laudo_compl_w;
else 
  select nextval('laudo_paciente_compl_seq')
  into STRICT nr_seq_laudo_compl_w
;

  insert into laudo_paciente_compl(nr_sequencia,
                                    nr_seq_laudo,
                                    nm_usuario,
                                    dt_atualizacao,
                                    dt_seg_aprov_solicitado)
                                    values (nr_seq_laudo_compl_w,
                                          nr_seq_laudo_p,
                                          nm_usuario_p,
                                          clock_timestamp(),                                          
                                          clock_timestamp());
end if;


open C01;
loop
fetch C01 into	
	nr_prescricao_w,
	nr_sequencia_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	CALL gravar_auditoria_mmed(nr_prescricao_w,nr_sequencia_prescricao_w,nm_usuario_p,7,null);	
	end;
end loop;
close C01;

insert	into comunic_interna(
		dt_comunicado,
		ds_titulo,
		ds_comunicado,
		nm_usuario,
		dt_atualizacao,
		ie_geral,
		nm_usuario_destino,
		ie_gerencial,
		nr_sequencia,
		dt_liberacao)
	values (
		clock_timestamp(),
		obter_texto_dic_objeto(291741, null, null) || nr_seq_laudo_p,

		obter_texto_dic_objeto(291746, null, null) || nr_atendimento_w || chr(10) ||
    		obter_texto_dic_objeto(291749, null, null) || substr(obter_desc_procedimento(cd_procedimento_w, null),0,100) || chr(10) ||
   		chr(10) || 
    		ds_mensagem_p,


		nm_usuario_p,
		clock_timestamp(),
		'N',
		obter_usuario_pf(cd_medico_seg_aprov_p),
		'N',
		nextval('comunic_interna_seq'),
		clock_timestamp());

commit;

select count(b.cd_categoria)
into STRICT ie_exist_med_rep_cat_w
from wl_regra_worklist a,
    wl_item b
where a.nr_seq_item = b.nr_sequencia
and b.cd_categoria = 'MR';

if (ie_exist_med_rep_cat_w > 0) then
  select max(nr_atendimento),
         max(cd_pessoa_fisica)
  into STRICT nr_atend_laudo_w,
       cd_pessoa_fisica_w
  from laudo_paciente
  where nr_sequencia = nr_seq_laudo_p;

  CALL wl_gerar_finalizar_tarefa('MR','I', nr_atend_laudo_w, cd_pessoa_fisica_w, nm_usuario_p, (clock_timestamp() + interval '1 days'), 'N', null, null, null, null, null, null, null, null, null, null,
                             null, null, null, null, null, null, null, clock_timestamp(), null, null, cd_medico_seg_aprov_p, null, null, null, null, nr_seq_laudo_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE encaminhar_seg_aprov_mmed ( nm_usuario_p text, nr_seq_laudo_p bigint, ds_mensagem_p text, cd_medico_seg_aprov_p text) FROM PUBLIC;

