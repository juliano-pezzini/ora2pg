-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE job_gravar_agend_integracao ( nr_seq_evento_p bigint, ds_parametros_p text, cd_estabelecimento_p bigint default 1, cd_setor_atendimento_p bigint default null, nr_seq_servidor_p bigint default null) AS $body$
DECLARE


ret_w 			varchar(4000);
pos_w 			integer;
nr_seq_log_w 		bigint;
nm_usuario_w 		varchar(15);
desc_evento_w 		varchar(4000);
ie_situacao_w 		varchar(1);
nr_controle_w 		bigint;
cd_estabelecimento_w  	bigint;
cd_setor_atendimento_w	bigint;
ie_status_w		varchar(1) := 'T';
qt_ocorrencias_w	integer := 0;
qt_agrupamento_w	bigint := 0;
ds_agrupador_w		varchar(2000);


BEGIN
	
	nr_controle_w := 0;
	desc_evento_w := Wheb_mensagem_pck.get_texto(308849) /*'Evento:'*/
 || nr_seq_evento_p || '. ' || Wheb_mensagem_pck.get_texto(308850) || ':' /*'. Parametros utilizados:'*/ || ds_parametros_p;
	nm_usuario_w :=  coalesce(wheb_usuario_pck.get_nm_usuario,'SYSTEM');
	ret_w := gravar_log_integracao(nm_usuario_w, nr_seq_evento_p, ds_parametros_p, 'N', 'S', ret_w, cd_estabelecimento_p, cd_setor_atendimento_p);
	ret_w := ret_w || ';';
	
	select	count(*)
	into STRICT	qt_agrupamento_w
	from	evento_agrupamento a
	where	a.nr_seq_evento	= nr_seq_evento_p;
	
	if (qt_agrupamento_w > 0) then
		ds_agrupador_w	:= substr(obter_agrupador_evento(nr_seq_evento_p, ds_parametros_p),1,2000);
	end if;
	
	while( position(';' in ret_w) > 0 ) and ( nr_controle_w < 1000)  loop
		nr_controle_w := nr_controle_w + 1;
		pos_w := position(';' in ret_w);
		nr_seq_log_w := (substr(ret_w, 0, pos_w-1))::numeric;
		ret_w := substr(ret_w, pos_w+1, length(ret_w));
	
		if (nr_seq_log_w IS NOT NULL AND nr_seq_log_w::text <> '') then

			insert into log_integracao_evento(
				nr_sequencia,
				nr_seq_log,
				ie_tipo_evento,
				ie_envio_retorno,
				cd_evento,
				ds_observacao,
				dt_atualizacao,
				nm_usuario
			) VALUES (
				nextval('log_integracao_evento_seq'),
				nr_seq_log_w,
				'I',
				'E',
				'GM',
				desc_evento_w,
				clock_timestamp(),
				Wheb_mensagem_pck.get_texto(308851) /*'Gerenciador'*/
			);
	
			begin
		
			select 	c.ie_situacao
			into STRICT 	ie_situacao_w
			from  	cliente_integracao c,
					log_integracao l 
			where 	l.nr_seq_informacao = c.nr_seq_inf_integracao 
			and   	l.nr_sequencia = nr_seq_log_w
			and   	coalesce(c.cd_estabelecimento_destino, cd_estabelecimento_p) = cd_estabelecimento_p
			and   	coalesce(c.cd_setor_atendimento, 9999) = coalesce(cd_setor_atendimento_p,9999);
		
			cd_setor_atendimento_w := cd_setor_atendimento_p;
		
			exception
		
			when no_data_found  then
				begin
				
				cd_setor_atendimento_w := null;
				
				select 	max(c.ie_situacao)
				into STRICT 	ie_situacao_w
				from  	cliente_integracao c,
						log_integracao l 
				where 	l.nr_seq_informacao = c.nr_seq_inf_integracao 
				and   	l.nr_sequencia = nr_seq_log_w
				and   	coalesce(c.cd_estabelecimento_destino, cd_estabelecimento_p) = cd_estabelecimento_p
				and		coalesce(c.cd_setor_atendimento::text, '') = '';
				
				end;
			
			end;
	
			if (ie_situacao_w = 'P') then
			begin
				
			  update log_integracao set ie_status = 'I' where nr_sequencia = nr_seq_log_w;
				
			  insert into log_integracao_evento(
			    nr_sequencia,
			    nr_seq_log,
			    ie_tipo_evento,
			    ie_envio_retorno,
			    cd_evento,
			    ds_observacao,
			    dt_atualizacao,
			    nm_usuario
			  ) VALUES (
			    nextval('log_integracao_evento_seq'),
			    nr_seq_log_w,
			    'I',
			    'E',
			    'I',
			    Wheb_mensagem_pck.get_texto(308853), /*'Integracao Parada',*/
			    clock_timestamp(),
			    Wheb_mensagem_pck.get_texto(308851) /*'Gerenciador'*/
			  );
			end;
			else
			begin

			cd_estabelecimento_w := cd_estabelecimento_p;
			if ((cd_estabelecimento_w = 1) or (cd_estabelecimento_w = 0)) then
			
				select 	coalesce(max(cd_estabelecimento),0)
				into STRICT	cd_estabelecimento_w
				from	estabelecimento
				where	cd_estabelecimento = cd_estabelecimento_w;

				if (cd_estabelecimento_w = 0) then
					select 	coalesce(min(cd_estabelecimento),1)
					into STRICT	cd_estabelecimento_w
					from	estabelecimento;

				end if;
			end if;		
			
			ie_status_w := 'T';
			
			begin
				select count(1)
				  into STRICT qt_ocorrencias_w
				  from log_integracao_evento
				 where nr_seq_log     = nr_seq_log_w
				   and ie_tipo_evento = 'O'
				   and cd_evento      = 'ER';
			exception
				when others then
					qt_ocorrencias_w := 0;
			end;
			
			if (qt_ocorrencias_w > 0) then
				ie_status_w := 'O';
			end if;
			
			insert into agendamento_integracao(
				nr_sequencia,
				nr_seq_evento,
				ds_parametros,
				nr_seq_log,
				ie_status,
				id_processo,
				nr_processo_debug,
				dt_atualizacao,
				nm_usuario,
				cd_estabelecimento,
				cd_setor_atendimento,
				ds_agrupador,
				nr_seq_servidor
			) values (
				nextval('agendamento_integracao_seq'),
				nr_seq_evento_p,
				ds_parametros_p,
				nr_seq_log_w,
				ie_status_w,
				'P',
				'0',
				clock_timestamp(),
				nm_usuario_w,
				cd_estabelecimento_w,
				cd_setor_atendimento_w,
				ds_agrupador_w,
				nr_seq_servidor_p
			);
			end;
			end if;
		end if;
	end loop;
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE job_gravar_agend_integracao ( nr_seq_evento_p bigint, ds_parametros_p text, cd_estabelecimento_p bigint default 1, cd_setor_atendimento_p bigint default null, nr_seq_servidor_p bigint default null) FROM PUBLIC;

