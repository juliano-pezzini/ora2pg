-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dar_criar_datamodel (nr_sequencia_p dar_tables_control.nr_sequencia%type, ie_novo_registro text default 'S') AS $body$
DECLARE


   ds_campos_w         varchar(4000);
   lista_campo_w       lista_varchar_pck.tabela_varchar;
   lista_tabela_w      lista_varchar_pck.tabela_varchar;
   lista_tabela_aux_w  lista_varchar_pck.tabela_varchar;
   alias_tabela_aux_w  lista_varchar_pck.tabela_varchar;
   ds_campo_aux_w      varchar(255);
   ds_campo_w          dar_tab_control_fields.ds_campo%type;
   ds_tabela_w         varchar(4000);
   nr_posicao_ponto_w  bigint;
   nr_posicao_from_w   bigint;
   nr_posicao_where_w  bigint;
   nr_posicao_espaco_w bigint;
   nr_tamanho_string_w bigint;
   nr_identificador_w  dar_tab_control_fields.nr_identificador%type;
   qt_inconsistencia_w bigint;
   c1 CURSOR FOR
      SELECT *
        from dar_tables_control a
       where a.nr_sequencia = nr_sequencia_p;

   r1 c1%rowtype;
BEGIN

   select count(nr_seq_tab_controle)
     into STRICT qt_inconsistencia_w
     from dar_consist_sql
    where nr_seq_tab_controle = nr_sequencia_p;

   if (qt_inconsistencia_w = 0) then
      open c1;
      loop
         fetch c1
            into r1;
         EXIT WHEN NOT FOUND; /* apply on c1 */

      end loop;
      close c1;

      if (ie_novo_registro = 'N') then
         -- caso seja update, remover dostos os fields e gerar novamente.
         delete FROM dar_tab_control_fields
          where nr_seq_table_control = nr_sequencia_p;
      end if;

      select position('FROM' in upper(r1.ds_sql)),
             position('WHERE' in upper(r1.ds_sql)),
             length(r1.ds_sql)
        into STRICT nr_posicao_from_w, nr_posicao_where_w, nr_tamanho_string_w
;

      if (nr_posicao_where_w = 0) then
         nr_posicao_where_w := nr_tamanho_string_w;
         select trim(both substr(r1.ds_sql, 7, nr_posicao_from_w - 8)),
                trim(substr(r1.ds_sql,
                            nr_posicao_from_w + 4,
                            nr_tamanho_string_w - (nr_posicao_from_w)))
           into STRICT ds_campos_w, ds_tabela_w
;

      else
         select trim(both substr(r1.ds_sql, 7, nr_posicao_from_w - 8)),
                trim(substr(r1.ds_sql,
                            nr_posicao_from_w + 4,
                            nr_posicao_where_w - (nr_posicao_from_w + 5)))
           into STRICT ds_campos_w, ds_tabela_w
;
      end if;

      lista_tabela_w := obter_lista_string2(ds_tabela_w, ',');

      for i in 1 .. lista_tabela_w.last loop
      
         ds_tabela_w         := trim(both replace(trim(both lista_tabela_w(i)),
                                             chr(10),
                                             ' '));
         nr_posicao_espaco_w := position(' ' in ds_tabela_w);
         -- Se possui espaco, tem alias no nome da tabela
         if (nr_posicao_espaco_w > 0) then
            -- DO primeiro character ate o espaco e o nome da tabela
            lista_tabela_aux_w(i) := trim(both substr(ds_tabela_w,
                                                 1,
                                                 nr_posicao_espaco_w));
            alias_tabela_aux_w(i) := trim(substr(ds_tabela_w,
                                                 nr_posicao_espaco_w,
                                                 length(ds_tabela_w) -
                                                 (nr_posicao_espaco_w - 1)));
         else
            lista_tabela_aux_w(i) := ds_tabela_w;
            alias_tabela_aux_w(i) := ds_tabela_w;
         end if;

      end loop;

      lista_campo_w := obter_lista_string2(ds_campos_w, ',');

      for i in 1 .. lista_campo_w.last loop
         --
         ds_campo_aux_w     := trim(both replace(trim(both lista_campo_w(i)),
                                            chr(10),
                                            ' '));
         nr_posicao_ponto_w := position('.' in ds_campo_aux_w);

         ds_tabela_w := substr(ds_campo_aux_w, 0, nr_posicao_ponto_w - 1);
         -- Verificar se e alias ou tabela
         if (lista_tabela_aux_w.count = 1) then
            ds_tabela_w := lista_tabela_aux_w(1);
         else
            for ii in 1 .. lista_tabela_aux_w.last loop
               if (alias_tabela_aux_w(ii) = ds_tabela_w) then
                  ds_tabela_w := lista_tabela_aux_w(ii);
               end if;
            end loop;
         end if;

         ds_campo_w := substr(ds_campo_aux_w,
                              nr_posicao_ponto_w + 1,
                              length(ds_campo_aux_w) - nr_posicao_ponto_w);
         --
         nr_posicao_espaco_w := position(' ' in ds_campo_w);
         -- se possui espaco possui alias 
         if (nr_posicao_espaco_w > 0) then
            if (position('AS' in upper(ds_campo_w)) > 0) then

               nr_identificador_w := substr(ds_campo_w,
                                            position('AS' in upper(ds_campo_w)) + 3,
                                            length(ds_campo_w) -
                                            position('AS' in upper(ds_campo_w)));
               ds_campo_w         := substr(ds_campo_w,
                                            1,
                                            position('AS' in upper(ds_campo_w)) - 1);

            else
            
               nr_identificador_w := substr(ds_campo_w,
                                            position(' ' in upper(ds_campo_w)) + 1,
                                            length(ds_campo_w) -
                                            position(' ' in upper(ds_campo_w)));
               ds_campo_w         := substr(ds_campo_w,
                                            1,
                                            position(' ' in upper(ds_campo_w)) - 1);

            end if;
         else
            nr_identificador_w := ds_campo_w;
         end if;

         insert into dar_tab_control_fields(nr_sequencia,
             ds_tabela,
             ds_campo,
             ds_expressao_campo,
             ds_expressao_tabela,
             nr_seq_table_control,
             nr_identificador,
             dt_atualizacao,
             nm_usuario,
             dt_atualizacao_nrec,
             nm_usuario_nrec)
         values (nextval('dar_tab_control_fields_seq'),
             ds_tabela_w,
             ds_campo_w,
             null,
             null,
             nr_sequencia_p,
             nr_identificador_w,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario,
             clock_timestamp(),
             wheb_usuario_pck.get_nm_usuario);
      end loop;

      CALL dar_gerar_tab_data_model(nr_sequencia_p,
                               wheb_usuario_pck.get_nm_usuario);
   end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dar_criar_datamodel (nr_sequencia_p dar_tables_control.nr_sequencia%type, ie_novo_registro text default 'S') FROM PUBLIC;

