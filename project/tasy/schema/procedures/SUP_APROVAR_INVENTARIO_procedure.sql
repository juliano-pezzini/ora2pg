-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_aprovar_inventario ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ds_erro_w		varchar(255);
ie_consiste_justificativa_w	varchar(1);
ie_consiste_definicao_lote_w	varchar(1);
cd_material_w		integer;
ds_lote_fornec_w		material_lote_fornec.ds_lote_fornec%type;
nr_seq_lote_w		material_lote_fornec.nr_sequencia%type;

C01 CURSOR FOR
SELECT	a.cd_material,
	c.ds_lote_fornec
from	inventario_material a,
	inventario_material_lote b,
	material_lote_fornec c
where	a.nr_seq_inventario = b.nr_seq_inventario
and	a.nr_sequencia = b.nr_seq_item
and	b.nr_seq_lote_fornec = c.nr_sequencia
and	substr(obter_se_material_estoque_lote(cd_estabelecimento_p, a.cd_material),1,1) = 'S'
and	coalesce(b.qt_diferenca,0) <> 0
and	coalesce(b.ds_justificativa::text, '') = ''
and	a.nr_seq_inventario = nr_sequencia_p
order by a.cd_material,
	c.ds_lote_fornec;

C02 CURSOR FOR
SELECT	a.cd_material,
	c.ds_lote_fornec,
	c.nr_sequencia
from	inventario_material a,
	inventario_material_lote b,
	material_lote_fornec c
where	a.nr_seq_inventario = b.nr_seq_inventario
and	a.nr_sequencia = b.nr_seq_item
and     coalesce(b.qt_inventario::text, '') = ''
and	b.nr_seq_lote_fornec = c.nr_sequencia
and	substr(obter_se_material_estoque_lote(cd_estabelecimento_p, a.cd_material),1,1) = 'S'
and	a.nr_seq_inventario = nr_sequencia_p
order by a.cd_material,
	c.ds_lote_fornec;


BEGIN
ie_consiste_justificativa_w := substr(obter_valor_param_usuario(143, 247, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),1,1);
ie_consiste_definicao_lote_w := substr(obter_valor_param_usuario(143, 372, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),1,1);

if (ie_consiste_justificativa_w = 'S') then
	begin
	open C01;
	loop
	fetch C01 into
		cd_material_w,
		ds_lote_fornec_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(281406) || ds_lote_fornec_w || WHEB_MENSAGEM_PCK.get_texto(281407) || cd_material_w || WHEB_MENSAGEM_PCK.get_texto(281408) || chr(13) || chr(10),1,255);
		end;
	end loop;
	close C01;
	end;
end if;

if (ie_consiste_definicao_lote_w = 'N') and (coalesce(ds_erro_w,'X') = 'X') then
	begin
	open C02;
	loop
	fetch C02 into
		cd_material_w,
		ds_lote_fornec_w,
		nr_seq_lote_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ds_erro_w := substr(ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(281411) || nr_seq_lote_w || ' - ' || ds_lote_fornec_w || WHEB_MENSAGEM_PCK.get_texto(281407) || cd_material_w || WHEB_MENSAGEM_PCK.get_texto(281410) || chr(13) || chr(10),1,255);
		end;
	end loop;
	close C02;
	end;
end if;

if (coalesce(ds_erro_w,'X') = 'X') then
	begin
	Update	inventario
	set	dt_aprovacao = clock_timestamp(),
		nm_usuario_aprov = nm_usuario_p
	where	nr_sequencia = nr_sequencia_p;
	end;
end if;

ds_erro_p := ds_erro_w;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_aprovar_inventario ( nr_sequencia_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

