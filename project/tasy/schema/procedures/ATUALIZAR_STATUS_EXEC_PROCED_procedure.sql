-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_status_exec_proced ( nr_sequencia_p bigint, nm_usuario_p text, IE_RETIRA_DT_ENVEL_P text) AS $body$
DECLARE


ie_status_execucao_w	varchar(3);
nr_sequencia_laudo_w	bigint;
nr_seq_loc_w		integer;
ie_tipo_local_w		varchar(3);
nr_prescricao_w		bigint;
nr_seq_proc_w		bigint;
nr_prescricao_vinc_w	bigint;
IE_STATUS_EXEC_w	varchar(3);
Ie_laudo_liberado_w	varchar(1);
dt_liberacao_w		timestamp;
dt_envelopado_w		timestamp;
cd_estab_w		integer;

c01 CURSOR FOR
	SELECT 	distinct nr_prescricao
	from 	procedimento_paciente
	where	nr_laudo = nr_sequencia_p
	and	nr_prescricao <> nr_prescricao_w;


BEGIN

select	coalesce(max(nr_sequencia),0),
	coalesce(max(nr_prescricao),0),
	coalesce(max(nr_seq_proc),0),
	max(dt_liberacao),
	max(dt_envelopado)
into STRICT	nr_sequencia_laudo_w,
	nr_prescricao_w,
	nr_seq_proc_w,
	dt_liberacao_w,
	dt_envelopado_w
from	laudo_paciente
where	nr_sequencia	= nr_sequencia_p;

select	max(cd_estabelecimento)
into STRICT	cd_estab_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;

Ie_laudo_liberado_w := Obter_Param_Usuario(994, 20, obter_perfil_ativo, nm_usuario_p, cd_estab_w, Ie_laudo_liberado_w);



if (coalesce(dt_liberacao_w::text, '') = '') and (Ie_laudo_liberado_w = 'N') then
	--'Não é possivel registrar a localização pois o laudo ' || NR_SEQ_LAUDO || ' não foi liberado #@#@');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(200564, 'NR_SEQ_LAUDO='||nr_sequencia_p);
end if;

Select	coalesce(max(nr_seq_loc),0)
into STRICT	nr_seq_loc_w
from	laudo_paciente_loc
where	nr_sequencia = nr_sequencia_laudo_w;

Select	somente_numero(obter_valor_dominio(138,coalesce(max(ie_tipo_local),0)))
into STRICT	ie_tipo_local_w
from	laudo_paciente_loc
where	nr_sequencia	= nr_sequencia_laudo_w
and	nr_seq_loc	= nr_seq_loc_w;

if (ie_tipo_local_w = '0') then
	select 	coalesce(max(IE_STATUS_EXEC),'0')
	into STRICT	IE_STATUS_EXEC_w
	from	PRESCR_PROC_STATUS a
	where	a.nr_prescricao 	= nr_prescricao_w
	and	IE_STATUS_EXEC not in ('990','900','80','70','60','50','45','43', 'BE')
	AND	a.nr_seq_prescr  IN (	SELECT	b.nr_sequencia_prescricao
			FROM	procedimento_paciente b
			WHERE	b.nr_prescricao = a.nr_prescricao
			AND	b.nr_sequencia_prescricao = a.nr_seq_prescr
			AND	b.nr_laudo = nr_sequencia_p);



	if (IE_STATUS_EXEC_w = '0') then
		ie_tipo_local_w := '40';
	else
		ie_tipo_local_w := IE_STATUS_EXEC_w;
	end if;

	if (ie_retira_dt_envel_p = 'S') and (dt_envelopado_w IS NOT NULL AND dt_envelopado_w::text <> '') then
		update  laudo_paciente
		set	dt_envelopado   = NULL,
			dt_atualizacao = clock_timestamp(),
			nm_usuario     = nm_usuario_p
		where 	nr_sequencia = nr_sequencia_p;
	end if;

end if;



Update	prescr_procedimento a
set	a.ie_status_execucao	= ie_tipo_local_w,
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where	a.nr_prescricao 	= nr_prescricao_w
and	a.nr_sequencia  in (	SELECT	b.nr_sequencia_prescricao
				from	procedimento_paciente b
				where	b.nr_prescricao = a.nr_prescricao
				and	b.nr_sequencia_prescricao = a.nr_sequencia
				and	b.nr_laudo = nr_sequencia_p);


OPEN C01;
LOOP
FETCH C01 into
	nr_prescricao_vinc_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	Update	prescr_procedimento a
	set	a.ie_status_execucao	= ie_tipo_local_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	a.nr_prescricao 	= nr_prescricao_vinc_w
	and	a.nr_sequencia  in (	SELECT	b.nr_sequencia_prescricao
					from	procedimento_paciente b
					where	b.nr_prescricao = a.nr_prescricao
					and	b.nr_sequencia_prescricao = a.nr_sequencia
					and	b.nr_laudo = nr_sequencia_p);
	end;
END LOOP;
CLOSE C01;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_status_exec_proced ( nr_sequencia_p bigint, nm_usuario_p text, IE_RETIRA_DT_ENVEL_P text) FROM PUBLIC;

