-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (
        nr_seq_antigo bigint,
        nr_seq_novo   bigint);


CREATE OR REPLACE PROCEDURE duplicar_xml_projeto (nr_seq_projeto_p bigint, nm_usuario_p text) AS $body$
DECLARE


    type vetor is table of campos index by integer;

    elementos_w vetor;
    atributos_w vetor;

    nr_seq_elemento_w        bigint;
    nr_seq_atributo_w        bigint;
    nr_seq_atrib_elem_w      bigint;
    nr_seq_elemento_novo_w   bigint;
    nr_seq_atrib_elem_novo_w bigint;
    nr_seq_projeto_novo_w    bigint;

    i bigint;
    k bigint;

    c01 CURSOR FOR
        SELECT nr_sequencia from xml_elemento where nr_seq_projeto = nr_seq_projeto_p;

    c02 CURSOR FOR
        SELECT b.nr_sequencia
          from xml_atributo b,
               xml_elemento a
         where a.nr_sequencia = b.nr_seq_elemento
           and a.nr_seq_projeto = nr_seq_projeto_p;


BEGIN

    $if $$tasy_local_dict=true $then
    nr_seq_projeto_novo_w := get_remote_sequence('seq:xml_projeto_seq');
    $else
    select nextval('xml_projeto_seq') into STRICT nr_seq_projeto_novo_w;
    $end

    insert into xml_projeto(nr_sequencia,
         ds_projeto,
         dt_atualizacao,
         nm_usuario,
         dt_atualizacao_nrec,
         nm_usuario_nrec,
         ds_cabecalho,
         ds_observacao,
         ie_tipo_complexo,
         nr_seq_proj_complexo,
         ie_hosp_pls,
         ie_tiss,
         ie_situacao)
        SELECT nr_seq_projeto_novo_w,
               ds_projeto || ' C'||chr(243)||'pia',
               clock_timestamp(),
               nm_usuario_p,
               clock_timestamp(),
               nm_usuario_p,
               ds_cabecalho,
               ds_observacao,
               ie_tipo_complexo,
               nr_seq_proj_complexo,
               ie_hosp_pls,
               ie_tiss,
               ie_situacao
          from xml_projeto
         where nr_sequencia = nr_seq_projeto_p;

    /* Carregar vetores com sequencias antigas e referenciar sequencias novas */

    i := 0;
    open c01;
    loop
        fetch c01
            into nr_seq_elemento_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */

        elementos_w[i].nr_seq_antigo := nr_seq_elemento_w;

        $if $$tasy_local_dict=true $then
        elementos_w[i].nr_seq_novo := get_remote_sequence('seq:xml_elemento_seq');
        $else
        select nextval('xml_elemento_seq') into STRICT elementos_w[i].nr_seq_novo;
        $end

        i := i + 1;
    end loop;
    close c01;

    /* Carregar vetores com sequencias antigas e referenciar sequencias novas */

    i := 0;
    open c02;
    loop
        fetch c02
            into nr_seq_atributo_w;
        EXIT WHEN NOT FOUND; /* apply on c02 */

        atributos_w[i].nr_seq_antigo := nr_seq_atributo_w;

        $if $$tasy_local_dict=true $then
        atributos_w[i].nr_seq_novo := get_remote_sequence('seq:xml_atributo_seq');
        $else
        select nextval('xml_atributo_seq') into STRICT atributos_w[i].nr_seq_novo;
        $end

        i := i + 1;
    end loop;
    close c02;

    /* Inserir todos os elementos a serem duplicados */

    i := 0;
    for i in 0 .. elementos_w.count - 1 loop
        insert into xml_elemento(nr_sequencia,
             nr_seq_apresentacao,
             nr_seq_projeto,
             nm_elemento,
             ds_elemento,
             ds_cabecalho,
             ds_sql,
             ds_grupo,
             nm_usuario,
             dt_atualizacao,
             ie_criar_nulo,
             nm_usuario_nrec,
             dt_atualizacao_nrec,
             ie_tipo_elemento,
             ie_criar_elemento,
             ie_tipo_complexo)
            SELECT elementos_w[i].nr_seq_novo,
                   nr_seq_apresentacao,
                   nr_seq_projeto_novo_w,
                   nm_elemento,
                   ds_elemento,
                   ds_cabecalho,
                   ds_sql,
                   ds_grupo,
                   nm_usuario_p,
                   clock_timestamp(),
                   ie_criar_nulo,
                   nm_usuario_p,
                   clock_timestamp(),
                   ie_tipo_elemento,
                   ie_criar_elemento,
                   ie_tipo_complexo
              from xml_elemento
             where nr_sequencia = elementos_w[i].nr_seq_antigo;
    end loop;

    /* Inserir todos os atributos a serem duplicados */

    i := 0;
    for i in 0 .. atributos_w.count - 1 loop

        select nr_seq_elemento,
               nr_seq_atrib_elem
          into STRICT nr_seq_elemento_w,
               nr_seq_atrib_elem_w
          from xml_atributo
         where nr_sequencia = atributos_w[i].nr_seq_antigo;

        nr_seq_elemento_novo_w   := null;
        nr_seq_atrib_elem_novo_w := null;

        /* Mapear elemento novo baseado no elemento antigo */

        k := 0;
        for k in 0 .. elementos_w.count - 1 loop
            if (elementos_w[k].nr_seq_antigo = nr_seq_elemento_w) then
                nr_seq_elemento_novo_w := elementos_w[k].nr_seq_novo;
            end if;
            if (elementos_w[k].nr_seq_antigo = nr_seq_atrib_elem_w) then
                nr_seq_atrib_elem_novo_w := elementos_w[k].nr_seq_novo;
            end if;
        end loop;

        insert into xml_atributo(nr_sequencia,
             nr_seq_elemento,
             nr_seq_apresentacao,
             nm_atributo_xml,
             nm_atributo,
             ie_criar_nulo,
             ie_obrigatorio,
             ie_tipo_atributo,
             ds_mascara,
             nm_usuario_nrec,
             dt_atualizacao_nrec,
             nm_usuario,
             dt_atualizacao,
             nr_seq_atrib_elem,
             ie_criar_atributo,
             ds_cabecalho,
             ie_controle_pb)
            SELECT atributos_w[i].nr_seq_novo,
                   nr_seq_elemento_novo_w,
                   nr_seq_apresentacao,
                   nm_atributo_xml,
                   nm_atributo,
                   ie_criar_nulo,
                   ie_obrigatorio,
                   ie_tipo_atributo,
                   ds_mascara,
                   nm_usuario_p,
                   clock_timestamp(),
                   nm_usuario_p,
                   clock_timestamp(),
                   nr_seq_atrib_elem_novo_w,
                   ie_criar_atributo,
                   ds_cabecalho,
                   ie_controle_pb
              from xml_atributo
             where nr_sequencia = atributos_w[i].nr_seq_antigo;

    end loop;

    commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_xml_projeto (nr_seq_projeto_p bigint, nm_usuario_p text) FROM PUBLIC;

