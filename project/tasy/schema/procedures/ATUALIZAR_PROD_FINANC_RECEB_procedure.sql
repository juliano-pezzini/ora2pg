-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_prod_financ_receb (nr_seq_caixa_rec_p bigint, nm_usuario_p text, cd_produto_externo_p text, ie_commit_p text, nr_adiantamento_p bigint default null) AS $body$
DECLARE


cd_estabelecimento_w	bigint;

nr_seq_produto_w	bigint;
nr_seq_grupo_prod_w	bigint;
count_w			bigint;
nr_seq_movto_cartao_w	bigint;
cd_conta_financ_w	bigint;

c01 CURSOR FOR
SELECT	nr_sequencia
from	movto_cartao_cr
where	nr_seq_caixa_rec	= nr_seq_caixa_rec_p;


BEGIN

if (cd_produto_externo_p IS NOT NULL AND cd_produto_externo_p::text <> '') then

	if (nr_adiantamento_p IS NOT NULL AND nr_adiantamento_p::text <> '') then
		select	max(cd_estabelecimento)

		into STRICT	cd_estabelecimento_w
		from	adiantamento
		where	nr_seq_caixa_rec	= nr_seq_caixa_rec_p

		and		nr_adiantamento = nr_adiantamento_p;

		SELECT * FROM obter_produto_financeiro(cd_estabelecimento_w, null, null, nr_seq_produto_w, null, cd_produto_externo_p, nr_seq_grupo_prod_w) INTO STRICT nr_seq_produto_w, nr_seq_grupo_prod_w;



		select	count(*)
		into STRICT	count_w
		from	adiantamento_classif
		where	nr_adiantamento	= nr_adiantamento_p;

		if (count_w > 0) then
			update	adiantamento_classif
			set	nr_seq_produto	= nr_seq_produto_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_adiantamento	= nr_adiantamento_p;
		else
			insert into adiantamento_classif(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_adiantamento,
				nr_seq_produto)
			values (nextval('adiantamento_classif_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_adiantamento_p,
				nr_seq_produto_w);
		end if;

		update	adiantamento
		set	nr_seq_grupo_prod	= nr_seq_grupo_prod_w
		where	nr_adiantamento		= nr_adiantamento_p;




	end if;
	/*Atualizar também a movimentação de cartão */

	open C01;
	loop
	fetch C01 into
		nr_seq_movto_cartao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		update	movto_cartao_cr_classif
		set	nr_seq_produto		= nr_seq_produto_w
		where	nr_seq_movto		= nr_seq_movto_cartao_w;

		update	movto_cartao_cr
		set	nr_seq_grupo_prod	= nr_seq_grupo_prod_w
		where	nr_sequencia		= nr_seq_movto_cartao_w;

		select	obter_conta_financ_cartao_cr(nr_seq_movto_cartao_w)
		into STRICT	cd_conta_financ_w
		;

		if (cd_conta_financ_w IS NOT NULL AND cd_conta_financ_w::text <> '') then
			update	movto_cartao_cr_classif
			set	cd_conta_financ		= cd_conta_financ_w
			where	nr_seq_movto		= nr_seq_movto_cartao_w;
		end if;

	end loop;
	close C01;

end if;

if (ie_commit_p = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_prod_financ_receb (nr_seq_caixa_rec_p bigint, nm_usuario_p text, cd_produto_externo_p text, ie_commit_p text, nr_adiantamento_p bigint default null) FROM PUBLIC;

