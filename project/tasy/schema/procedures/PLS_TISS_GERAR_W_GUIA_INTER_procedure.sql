-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE rc_proced AS (cd_proced_w		bigint, 
				 ds_proced_w		varchar(255), 
				 ie_origem_proc_w	bigint, 
				 qt_solic_w		double precision, 
				 qt_aut_w		double precision 
				);
CREATE TYPE rc_material AS (cd_mat_w		bigint, 
				 ds_mat_w		varchar(255), 
				 qt_aut_w		double precision 
				);


CREATE OR REPLACE PROCEDURE pls_tiss_gerar_w_guia_inter (nr_sequencia_autor_p bigint, ds_dir_padrao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
type 	tb_proced is table of rc_proced index by integer;
type 	tb_material is table of rc_material index by integer;				
 
tb_proced_w			tb_proced;
tb_material_w			tb_material;

 
cd_guia_w			varchar(20);
cd_guia_principal_w		varchar(20);
cd_ans_w			varchar(20);
cd_senha_w			varchar(20);
dt_autorizacao_w		timestamp;
dt_validade_senha_w		timestamp;
dt_emissao_w			timestamp;
nr_seq_plano_w			bigint;
nr_seq_segurado_w		bigint;
cd_medico_solicitante_w		varchar(10);
nr_seq_prestador_w		bigint;
cd_usuario_plano_w		varchar(30);
dt_validade_carteira_w		timestamp;
cd_pessoa_fisica_w		varchar(10);
ds_plano_w			varchar(255);
ie_carater_internacao_w		varchar(1);
nr_seq_guia_w			bigint;
nr_cartao_nac_sus_w		varchar(60);
nm_pessoa_fisica_w		varchar(255);
sg_conselho_w			varchar(20);
cd_tabela_relat_w		varchar(2);
ds_indicacao_w			varchar(255);
cd_cnes_w			varchar(20);
qt_proc_mat_guia_w 		bigint;
nr_seq_apresentacao_w		bigint;
nr_seq_guia_proc_w		bigint;
cd_procedimento_w		bigint;
ds_procedimento_w		varchar(255);
ie_origem_proced_w		bigint;
qt_solicitada_w			double precision;
qt_autorizada_w			double precision;
nr_cpf_w			varchar(11);
nr_crm_w			varchar(20);
uf_crm_w			medico.uf_crm%type;
cd_cbo_w			varchar(10);
nm_medico_solicitante_w		varchar(255);
ds_observacao_w			varchar(4000);
ie_tipo_atend_tiss_w		varchar(2);
dt_solicitacao_w		timestamp;	
ie_regime_internacao_w		varchar(1);	
qt_dia_solicitado_w		smallint;	
cd_cidP_w			varchar(20);	
cd_cidS_w			varchar(20);	
dt_admissao_w			timestamp;		
nm_usuario_liberacao_w		varchar(255);	
cd_cpf_cgc_w			varchar(14);	
nm_contratado_w			varchar(255);	
nm_prestador_w			varchar(255);	
cd_tiss_w			numeric(20);	
ie_tipo_doenca_w		varchar(5);	
ie_indicacao_acidente_w		varchar(5);	
nr_seq_material_w		numeric(20);	
ds_material_w			varchar(255);		
ds_tipo_acomodacao_w		varchar(255);	
cd_tipo_acomodacao_w		numeric(20);	
qt_dia_autorizado_w		smallint;	
cd_material_w			numeric(20);
nr_seq_clinica_w		bigint;
cd_tipo_acomod_autor_w		varchar(255);
qt_autorizada_opm_w		integer;
vl_material_w			bigint;
nm_fantasia_w			varchar(255);
cd_cnes_prestador_w		varchar(20);
nr_cgc_prestador_w		varchar(14);
nr_seq_guia_plano_w		bigint;
qt_proced_w			bigint;
qt_material_w			bigint;
qt_proc_mat_w			bigint;
i				bigint;
j				bigint;
k				bigint;
qt_proc_mat_vazio_w		bigint;
qt_linhas_add_w		bigint;

c01 CURSOR FOR 
	SELECT	cd_procedimento, 
		substr(obter_descricao_procedimento(cd_procedimento,ie_origem_proced),1,255), 
		ie_origem_proced, 
		qt_solicitada, 
		qt_autorizada 
	from	pls_guia_plano_proc 
	where	nr_seq_guia		= nr_seq_guia_plano_w 
	and	ie_status		in ('L','S','P') 
	and	coalesce(nr_seq_motivo_exc::text, '') = '';
	
C02 CURSOR FOR 
	SELECT 	substr(pls_obter_desc_material(a.nr_seq_material),1,255),	 
		qt_autorizada,	 
		substr(pls_obter_seq_codigo_material(nr_seq_material,''),1,255) 
	from	pls_guia_plano_mat a 
	where	a.nr_seq_guia 	= nr_seq_guia_plano_w	 
	and	a.ie_status 		in ('L','P','S')	 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '';		
 

BEGIN 
 
delete	from w_tiss_guia 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_dados_atendimento 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_beneficiario 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_proc_paciente 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_contratado_exec 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_totais 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_proc_solic 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_solicitacao 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_contratado_solic 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_relatorio 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_opm 
where	nm_usuario		= nm_usuario_p;
 
delete	from w_tiss_opm_exec 
where	nm_usuario		= nm_usuario_p;
 
commit;
 
begin 
	select	a.nr_sequencia 
	into STRICT	nr_seq_guia_plano_w 
	from	pls_guia_plano a 
	where	a.cd_guia 	= (SELECT x.cd_guia_principal from pls_guia_plano x where x.nr_sequencia = nr_sequencia_autor_p);
exception 
when others then 
	nr_seq_guia_plano_w	:= nr_sequencia_autor_p;
end;
 
if (nr_seq_guia_plano_w	<> nr_sequencia_autor_p) then 
	cd_guia_principal_w	:= nr_sequencia_autor_p;
end if;
 
if (coalesce(nr_seq_guia_plano_w,0) > 0) then 
	begin 
		select	a.cd_guia, 
			coalesce(a.cd_senha,a.cd_senha_externa), 
			a.dt_autorizacao, 
			a.dt_validade_senha, 
			a.dt_emissao, 
			a.nr_seq_plano, 
			a.nr_seq_segurado, 
			a.cd_medico_solicitante, 
			a.nr_seq_prestador, 
			substr(pls_obter_dados_cart_segurado(a.nr_seq_segurado,'C'),1,30), 
			to_date(pls_obter_dados_cart_segurado(a.nr_seq_segurado,'V'),'dd/mm/yyyy'), 
			b.cd_pessoa_fisica, 
			(select max(c.ds_plano) from pls_plano c where c.nr_sequencia = a.nr_seq_plano) ds_plano, 
			a.ie_carater_internacao, 
			a.ds_observacao, 
			substr(a.ds_indicacao_clinica,1,255), 
			ie_tipo_atend_tiss, 
			dt_solicitacao, 
			a.ie_regime_internacao,	 
			a.qt_dia_solicitado,	 
			substr(pls_obter_dados_guia(cd_guia, 'CIDP', cd_estabelecimento_p),1,20),	 
			substr(pls_obter_dados_guia(cd_guia, 'CIDS', cd_estabelecimento_p),1,20),	 
			a.dt_admissao_hosp,	 
			a.qt_dia_autorizado,	 
			a.nm_usuario_liberacao,	 
			substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255),	 
			a.nr_seq_clinica, 
			substr(pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,255), 
			substr(pls_obter_dados_prestador(a.nr_seq_prestador,'NF'),1,255), 	 
			substr(pls_obter_dados_prestador(a.nr_seq_prestador,'CNES'),1,255), 
			substr(pls_obter_dados_prestador(a.nr_seq_prestador,'CGC'),1,255) 			 
		into STRICT	cd_guia_w, 
			cd_senha_w, 
			dt_autorizacao_w, 
			dt_validade_senha_w, 
			dt_emissao_w, 
			nr_seq_plano_w, 
			nr_seq_segurado_w, 
			cd_medico_solicitante_w, 
			nr_seq_prestador_w, 
			cd_usuario_plano_w, 
			dt_validade_carteira_w, 
			cd_pessoa_fisica_w, 
			ds_plano_w, 
			ie_carater_internacao_w, 
			ds_observacao_w, 
			ds_indicacao_w, 
			ie_tipo_atend_tiss_w, 
			dt_solicitacao_w,	 
			ie_regime_internacao_w,	 
			qt_dia_solicitado_w,	 
			cd_cidP_w,	 
			cd_cidS_w,	 
			dt_admissao_w,	 
			qt_dia_autorizado_w,	 
			nm_usuario_liberacao_w,	 
			cd_tipo_acomod_autor_w,	 
			nr_seq_clinica_w, 
			nm_prestador_w, 
			nm_fantasia_w, 
			cd_cnes_prestador_w, 
			nr_cgc_prestador_w 
		from	pls_segurado b, 
			pls_guia_plano a 
		where	a.nr_seq_segurado	= b.nr_sequencia 
		and	a.nr_sequencia		= nr_seq_guia_plano_w;
	exception 
	when others then 
		cd_guia_w		:= null;
		cd_senha_w		:= null;
		dt_autorizacao_w	:= null;
		dt_validade_senha_w	:= null;
		dt_emissao_w		:= null;
		nr_seq_plano_w		:= null;
		nr_seq_segurado_w	:= null;
		cd_medico_solicitante_w	:= null;
		nr_seq_prestador_w	:= null;
		cd_usuario_plano_w	:= null;
		dt_validade_carteira_w	:= null;
		cd_pessoa_fisica_w	:= null;
		ds_plano_w		:= null;
		ie_carater_internacao_w	:= null;
		ds_observacao_w		:= null;
		ds_indicacao_w		:= null;
		ie_tipo_atend_tiss_w	:= null;
		dt_solicitacao_w	:= null;	
		ie_regime_internacao_w	:= null;	
		qt_dia_solicitado_w	:= null;	
		cd_cidP_w		:= null;	
		cd_cidS_w		:= null;	
		dt_admissao_w		:= null;	
		qt_dia_autorizado_w	:= null;	
		nm_usuario_liberacao_w	:= null;	
		cd_tipo_acomod_autor_w	:= null;	
		nr_seq_clinica_w	:= null;		
		nm_prestador_w		:= null;
		nm_fantasia_w		:= null;
		cd_cnes_prestador_w	:= null;
	end;
	 
	begin 
		select	cd_medico_solicitante,	 
			substr(pls_obter_contratado_cooperado(nr_sequencia_autor_p,cd_medico_solicitante,'N'),1,255),	 
			substr(pls_obter_contratado_cooperado(nr_sequencia_autor_p,cd_medico_solicitante,'CN'),1,20) 
		into STRICT	cd_cpf_cgc_w,	 
			nm_contratado_w,	 
			cd_cnes_w	 
		from	pls_guia_plano 
		where	nr_sequencia	= nr_seq_guia_plano_w;
	exception 
	when others then 
		cd_cpf_cgc_w		:= null;
		nm_contratado_w		:= null;	
		cd_cnes_w		:= null;	
	end;
	 
	begin 
		select	b.cd_tiss	 
		into STRICT	cd_tiss_w	 
		from	pls_guia_plano a,	 
			pls_clinica b	 
		where	a.nr_seq_clinica	= b.nr_sequencia	 
		and	a.nr_sequencia		= nr_seq_guia_plano_w;
	exception 
	when others then 
		cd_tiss_w	:= null;
	end;
	 
	begin 
		select	ie_tipo_doenca,	 
			ie_indicacao_acidente 
		into STRICT	ie_tipo_doenca_w, 
			ie_indicacao_acidente_w 
		from	pls_diagnostico	 
		where	nr_seq_guia = nr_seq_guia_plano_w 
		and	ie_classificacao = 'P';	
	exception 
	when others then 
		ie_tipo_doenca_w		:= null;	
		ie_indicacao_acidente_w		:= null;
	end;
	 
	begin 
		select	b.ds_tipo_acomodacao,	 
			b.cd_tipo_acomodacao,	 
			coalesce(a.qt_dia_autorizado, coalesce(a.qt_dia_solicitado,0))	 
		into STRICT	ds_tipo_acomodacao_w,	 
			cd_tipo_acomodacao_w,	 
			qt_dia_autorizado_w	 
		from	pls_guia_plano a,	 
			pls_tipo_acomodacao b	 
		where	a.nr_seq_tipo_acomodacao	= b.nr_sequencia	 
		and	a.nr_sequencia			= nr_seq_guia_plano_w;
	exception 
	when others then 
		ds_tipo_acomodacao_w	:= null;
		cd_tipo_acomodacao_w	:= null;
		qt_dia_autorizado_w	:= null;
	end;
 
	 
	begin 
		select	max(cd_ans) 
		into STRICT	cd_ans_w 
		from	pls_outorgante 
		where	(cd_ans IS NOT NULL AND cd_ans::text <> '');
	exception 
	when others then 
		cd_ans_w := pls_obter_dados_outorgante(cd_estabelecimento_p, 'ANS');
	end;
	 
	insert	into w_tiss_relatorio(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		ds_arquivo_logo) 
	values (nextval('w_tiss_relatorio_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_dir_padrao_p || '\pls_logo.jpg');
 
	qt_proc_mat_guia_w	:= 0;
	nr_seq_apresentacao_w	:= 0;
	qt_proced_w		:= 0;
	qt_material_w		:= 0;
	 
	tb_proced_w.Delete;
	open c01;
	loop 
	fetch c01 into	cd_procedimento_w, 
			ds_procedimento_w, 
			ie_origem_proced_w, 
			qt_solicitada_w, 
			qt_autorizada_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
			tb_proced_w[qt_proced_w].cd_proced_w		:= cd_procedimento_w;
			tb_proced_w[qt_proced_w].ds_proced_w		:= ds_procedimento_w;
			tb_proced_w[qt_proced_w].ie_origem_proc_w	:= ie_origem_proced_w;
			tb_proced_w[qt_proced_w].qt_solic_w		:= qt_solicitada_w;
			tb_proced_w[qt_proced_w].qt_aut_w		:= qt_autorizada_w;
			 
			qt_proced_w := qt_proced_w + 1;
		end;		
	end loop;
	close c01;
	 
	tb_material_w.delete;
	open C02;
	loop 
	fetch C02 into 
		ds_material_w,	 
		qt_autorizada_opm_w,	 
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
			tb_material_w[qt_material_w].cd_mat_w		:= cd_material_w;
			tb_material_w[qt_material_w].qt_aut_w		:= qt_autorizada_opm_w;
			tb_material_w[qt_material_w].ds_mat_w		:= ds_material_w;
			 
			qt_material_w := qt_material_w + 1;
		end;
	end loop;
	close C02;
		 
	if qt_proced_w > qt_material_w then 
		qt_proc_mat_w := qt_proced_w-1;
	else 
		qt_proc_mat_w := qt_material_w-1;
	end if;
	 
	for i in 0.. qt_proc_mat_w loop 
		begin 
		qt_proc_mat_guia_w	:= qt_proc_mat_guia_w + 1;
		 
		if (qt_proc_mat_guia_w = 1) then 
			 
			select	nextval('w_tiss_guia_seq') 
			into STRICT	nr_seq_guia_w 
			;
			 
 
			insert	into w_tiss_guia(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				cd_ans, 
				cd_autorizacao, 
				dt_autorizacao, 
				cd_senha, 
				dt_validade_senha, 
				dt_emissao_guia, 
				nr_sequencia_autor, 
				cd_autorizacao_princ, 
				ds_observacao, 
				ie_tiss_tipo_guia, 
				dt_entrada, 
				ds_assinatura_exec) -- nm_usuario_liberacao 
			values (nr_seq_guia_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				cd_ans_w, 
				cd_guia_w, 
				dt_autorizacao_w, 
				cd_senha_w, 
				dt_validade_senha_w, 
				coalesce(dt_emissao_w,clock_timestamp()), 
				nr_seq_guia_plano_w, 
				cd_guia_principal_w, 
				ds_observacao_w, 
				'1', 
				dt_admissao_w, 
				nm_usuario_liberacao_w);
				 
			select	nr_cartao_nac_sus, 
				substr(obter_nome_pf(cd_pessoa_fisica),1,255) 
			into STRICT	nr_cartao_nac_sus_w, 
				nm_pessoa_fisica_w 
			from	pessoa_fisica 
			where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
			 
 
			insert	into w_tiss_beneficiario(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				nm_pessoa_fisica, 
				nr_cartao_nac_sus, 
				ds_plano, 
				dt_validade_carteira, 
				cd_usuario_convenio, 
				cd_pessoa_fisica) 
			values (nextval('w_tiss_beneficiario_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				nm_pessoa_fisica_w, 
				nr_cartao_nac_sus_w, 
				ds_plano_w, 
				dt_validade_carteira_w, 
				cd_usuario_plano_w, 
				cd_pessoa_fisica_w);
 
			begin 
				select	b.nr_cpf, 
					substr(obter_nome_pf(a.cd_pessoa_fisica),1,255), 
					substr(obter_conselho_profissional(b.nr_seq_conselho,'S'),1,10), 
					nr_crm, 
					uf_crm, 
					substr(obter_descricao_padrao('CBO_SAUDE','CD_CBO',b.nr_seq_cbo_saude),1,10) 
				into STRICT	nr_cpf_w, 
					nm_medico_solicitante_w, 
					sg_conselho_w, 
					nr_crm_w, 
					uf_crm_w, 
					cd_cbo_w 
				from	pessoa_fisica b, 
					medico a 
				where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
				and	a.cd_pessoa_fisica	= cd_medico_solicitante_w;
			exception 
			when others then 
				nr_cpf_w := null;
				nm_medico_solicitante_w := null;
				sg_conselho_w := null;
				nr_crm_w := null;
				uf_crm_w := null;
				cd_cbo_w := null;
			end;
			 
			insert into w_tiss_contratado_solic(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				cd_cgc, 
				nm_contratado, 
				nm_solicitante, 
				cd_cnes, 
				sg_conselho, 
				nr_crm, 
				uf_crm, 
				cd_cbo_saude) 
			values (nextval('w_tiss_contratado_solic_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				cd_cpf_cgc_w, 
				nm_contratado_w, 
				nm_medico_solicitante_w, 
				cd_cnes_w, 
				sg_conselho_w, 
				nr_crm_w, 
				uf_crm_w, 
				cd_cbo_w);
			 
			insert into w_tiss_solicitacao(nr_sequencia,      
				dt_atualizacao,     
				nm_usuario,       
				nr_seq_guia,       
				dt_solicitacao,     
				ie_carater_solic,    
				cd_cid,         
				ds_indicacao, 
				ie_unidade_tempo,	 
				ie_tipo_internacao,   
				ie_regime_internacao, 
				qt_dia_solicitado,    
				ie_tipo_doenca,            
				ie_tipo_acidente)				 
			values (nextval('w_tiss_solicitacao_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				dt_autorizacao_w, 
				ie_carater_internacao_w, 
				cd_cidP_w, 
				ds_indicacao_w, 
				cd_cidS_w, 
				nr_seq_clinica_w, 
				ie_regime_internacao_w, 
				qt_dia_solicitado_w, 
				ie_tipo_doenca_w, 
				ie_indicacao_acidente_w);
				 
				 
			insert	into w_tiss_contratado_exec(nr_sequencia, 	 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				cd_cgc, 
				nm_contratado, 
				cd_cnes, 
				nr_seq_conta, -- cd_tipo_acomod_autor 
				ds_tipo_logradouro, -- dt_admissao 
				ds_logradouro) -- qt_dia_autorizado 
			values (nextval('w_tiss_contratado_exec_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				nr_cgc_prestador_w, 
				nm_prestador_w, 
				cd_cnes_prestador_w,							 
				qt_dia_autorizado_w, 
				To_Char(dt_admissao_w, 'dd/mm/yyyy'), 
				cd_tipo_acomod_autor_w);	
		end if;
 
		nr_seq_apresentacao_w	:= nr_seq_apresentacao_w + 1;
 
		if (i < qt_proced_w) then 
			cd_tabela_relat_w := pls_obter_tabela_proc_guia(nr_sequencia_autor_p, cd_estabelecimento_p, nr_seq_prestador_w, 
									tb_proced_w[i].cd_proced_w, tb_proced_w[i].ie_origem_proc_w, dt_autorizacao_w);		
		 
			insert into w_tiss_proc_solic(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				cd_procedimento, 
				cd_edicao_amb, 
				ds_procedimento, 
				qt_solicitada, 
				qt_autorizada, 
				nr_seq_apresentacao) 
			values (nextval('w_tiss_proc_solic_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				tb_proced_w[i].cd_proced_w, 
				cd_tabela_relat_w, 
				tb_proced_w[i].ds_proced_w, 
				tb_proced_w[i].qt_solic_w, 
				tb_proced_w[i].qt_aut_w, 
				nr_seq_apresentacao_w);
		else 
			insert into w_tiss_proc_solic(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				cd_procedimento, 
				cd_edicao_amb, 
				ds_procedimento, 
				qt_solicitada, 
				qt_autorizada, 
				nr_seq_apresentacao) 
			values (nextval('w_tiss_proc_solic_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				'', 
				'', 
				'', 
				'', 
				'', 
				'');
		end if;	
 
		if (i < qt_material_w) then 
			insert	into w_tiss_opm(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				nr_seq_apresentacao, 
				ds_opm, 
				cd_opm, 
				qt_autorizada, 
				qt_solicitada, 
				vl_opm) 
			values (nextval('w_tiss_opm_seq'),		 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				nr_seq_apresentacao_w, 
				tb_material_w[i].ds_mat_w, 
				tb_material_w[i].cd_mat_w, 
				qt_autorizada_opm_w, 
				qt_solicitada_w, 
				vl_material_w);
		else 
			insert	into w_tiss_opm(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_guia, 
				nr_seq_apresentacao, 
				ds_opm, 
				cd_opm, 
				qt_autorizada, 
				qt_solicitada, 
				vl_opm) 
			values (nextval('w_tiss_opm_seq'),		 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_guia_w, 
				'', 
				'', 
				'', 
				'', 
				'', 
				'');
		end if;
		 
		if (qt_proc_mat_guia_w = 5) then 
			qt_proc_mat_guia_w	:= 0;			
		end if;
		end;
	end loop;	
 
	qt_proc_mat_vazio_w 	:= 5 - qt_proc_mat_guia_w;
	 
	if qt_proc_mat_vazio_w = 5 then 
		qt_linhas_add_w		:= 5 - qt_proc_mat_vazio_w;
	else 
		qt_linhas_add_w		:= qt_proc_mat_vazio_w;
	end if;
	 
	for i in 1.. qt_linhas_add_w loop 
		begin 
		insert into w_tiss_proc_solic(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_guia, 
			cd_procedimento, 
			cd_edicao_amb, 
			ds_procedimento, 
			qt_solicitada, 
			qt_autorizada, 
			nr_seq_apresentacao) 
		values (nextval('w_tiss_proc_solic_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_guia_w, 
			'', 
			'', 
			'', 
			'', 
			'', 
			'');	
		end;
	end loop;
	 
	for i in 1.. qt_linhas_add_w loop 
		begin 
		insert	into w_tiss_opm(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_guia, 
			nr_seq_apresentacao, 
			ds_opm, 
			cd_opm, 
			qt_autorizada, 
			qt_solicitada, 
			vl_opm) 
		values (nextval('w_tiss_opm_seq'),		 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_guia_w, 
			'', 
			'', 
			'', 
			'', 
			'', 
			'');
		end;
	end loop;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_gerar_w_guia_inter (nr_sequencia_autor_p bigint, ds_dir_padrao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

