-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_carrega_bonific_manutencao ( nr_seq_bonificacao_p bigint, ie_tipo_exercao_p text, ie_opcao_p text, nr_seq_vinculo_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
ie_tipo_exercao_p
I - Inserir bonificação existentes
E - Inserir bonificação novas
D - Deletar bonificação existente
*/
/*
ie_opcao_p
PA - Prospota de Adesão
BP - Beneficiário de plano de saúde
BE - Beneficiários de plano de saúde(contatos)
CO- Contratos de plano de saúde
PC - Pagador de plano de saúde(contatos)
SC - SCA
*/
nr_seq_bonificacao_w	bigint;
nr_sequencia_w		bigint;
tx_bonificacao_w	double precision;
vl_bonificacao_w	double precision;
dt_inicio_vigencia_w	timestamp;
dt_fim_vigencia_w	timestamp;
qt_registro_w		bigint;

C01 CURSOR FOR
	SELECT	nr_seq_bonificacao,
		nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_proposta	= nr_seq_vinculo_p
	and	ie_opcao_p		= 'PA'
	
union

	SELECT	nr_seq_bonificacao,
		nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_segurado_prop	= nr_seq_vinculo_p
	and	ie_opcao_p		= 'BP'
	
union

	select	nr_seq_bonificacao,
		nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_contrato		= nr_seq_vinculo_p
	and	ie_opcao_p		= 'CO'
	
union

	select	nr_seq_bonificacao,
		nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_pagador		= nr_seq_vinculo_p
	and	ie_opcao_p		= 'PC'
	
union

	select	nr_seq_bonificacao,
		nr_sequencia
	from	pls_bonificacao_vinculo
	where	nr_seq_plano		= nr_seq_vinculo_p
	and	ie_opcao_p		= 'SC';


BEGIN

if (ie_tipo_exercao_p	= 'I') then
	delete	FROM w_pls_bonificacao_vinculo;
end if;

if (ie_tipo_exercao_p	= 'I') then
	if (ie_opcao_p	= 'PA') then
		open C01;
		loop
		fetch C01 into
			nr_seq_bonificacao_w,
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			if (nr_seq_bonificacao_w IS NOT NULL AND nr_seq_bonificacao_w::text <> '') then
				select	tx_bonificacao,
					vl_bonificacao,
					dt_inicio_vigencia,
					dt_fim_vigencia
				into STRICT	tx_bonificacao_w,
					vl_bonificacao_w,
					dt_inicio_vigencia_w,
					dt_fim_vigencia_w
				from	pls_bonificacao_vinculo
				where	nr_sequencia	= nr_sequencia_w;

				insert into w_pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_bonificacao,vl_bonificacao,tx_bonificacao,dt_inicio_vigencia,dt_fim_vigencia,
						nr_seq_proposta)
				values (	nextval('w_pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_bonificacao_w,vl_bonificacao_w,tx_bonificacao_w,dt_inicio_vigencia_w,dt_fim_vigencia_w,
						nr_seq_vinculo_p);
			end if;
			end;
		end loop;
		close C01;
	elsif (ie_opcao_p	= 'BP') then
		open C01;
		loop
		fetch C01 into
			nr_seq_bonificacao_w,
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			if (nr_seq_bonificacao_w IS NOT NULL AND nr_seq_bonificacao_w::text <> '') then
				select	tx_bonificacao,
					vl_bonificacao,
					dt_inicio_vigencia,
					dt_fim_vigencia
				into STRICT	tx_bonificacao_w,
					vl_bonificacao_w,
					dt_inicio_vigencia_w,
					dt_fim_vigencia_w
				from	pls_bonificacao_vinculo
				where	nr_sequencia	= nr_sequencia_w;

				insert into w_pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						nr_seq_bonificacao,vl_bonificacao,tx_bonificacao,dt_inicio_vigencia,dt_fim_vigencia,
						nr_seq_benef_proposta)
				values (	nextval('w_pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						nr_seq_bonificacao_w,vl_bonificacao_w,tx_bonificacao_w,dt_inicio_vigencia_w,dt_fim_vigencia_w,
						nr_seq_vinculo_p);
			end if;
			end;
		end loop;
		close C01;
	end if;
elsif (ie_tipo_exercao_p	= 'E') then
	if (ie_opcao_p	= 'PA') then
		if (nr_seq_bonificacao_p IS NOT NULL AND nr_seq_bonificacao_p::text <> '') then
			insert into w_pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_bonificacao,nr_seq_proposta)
			values (	nextval('w_pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_bonificacao_p,nr_seq_vinculo_p);
		end if;
	elsif (ie_opcao_p	= 'BP') then
		if (nr_seq_bonificacao_p IS NOT NULL AND nr_seq_bonificacao_p::text <> '') then
			insert into w_pls_bonificacao_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					nr_seq_bonificacao,nr_seq_benef_proposta)
			values (	nextval('w_pls_bonificacao_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					nr_seq_bonificacao_p,nr_seq_vinculo_p);
		end if;
	end if;
elsif (ie_tipo_exercao_p	= 'D') then
	if (ie_opcao_p	= 'PA') then
		if (nr_seq_bonificacao_p IS NOT NULL AND nr_seq_bonificacao_p::text <> '') then
			select	count(*)
			into STRICT	qt_registro_w
			from	w_pls_bonificacao_vinculo
			where	nr_seq_bonificacao	= nr_seq_bonificacao_p
			and	nr_seq_proposta		= nr_seq_vinculo_p;

			if (qt_registro_w > 0) then
				delete	FROM w_pls_bonificacao_vinculo
				where	nr_seq_bonificacao	= nr_seq_bonificacao_p
				and	nr_seq_proposta		= nr_seq_vinculo_p;
			end if;
		end if;
	elsif (ie_opcao_p	= 'BP') then
		if (nr_seq_bonificacao_p IS NOT NULL AND nr_seq_bonificacao_p::text <> '') then
			select	count(*)
			into STRICT	qt_registro_w
			from	w_pls_bonificacao_vinculo
			where	nr_seq_bonificacao	= nr_seq_bonificacao_p
			and	nr_seq_benef_proposta	= nr_seq_vinculo_p;

			if (qt_registro_w > 0) then
				delete	FROM w_pls_bonificacao_vinculo
				where	nr_seq_bonificacao	= nr_seq_bonificacao_p
				and	nr_seq_benef_proposta	= nr_seq_vinculo_p;
			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_carrega_bonific_manutencao ( nr_seq_bonificacao_p bigint, ie_tipo_exercao_p text, ie_opcao_p text, nr_seq_vinculo_p bigint, nm_usuario_p text) FROM PUBLIC;

