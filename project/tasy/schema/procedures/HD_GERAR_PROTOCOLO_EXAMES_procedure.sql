-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_protocolo_exames ( nr_seq_tratamento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_tratamento_w		varchar(15);
cd_pessoa_fisica_w	varchar(10);
nr_seq_protocolo_w	bigint;
nr_seq_prot_anterior_w	bigint;
ie_trat_anterior_w	varchar(15);
cd_estabelecimento_w	smallint;
cd_convenio_w		integer;
ie_paciente_agudo_w	paciente_tratamento.ie_paciente_agudo%type;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	hd_prot_exame_padrao
	where	ie_tratamento = ie_tratamento_w
	and (cd_estabelecimento = cd_estabelecimento_w or coalesce(cd_estabelecimento::text, '') = '')
	and (cd_convenio = cd_convenio_w or coalesce(cd_convenio::text, '') = '')
	and	((ie_tipo_paciente = ie_paciente_agudo_w) or (coalesce(ie_tipo_paciente, 'A') = 'A'))
	and	ie_situacao = 'A';


BEGIN

if (nr_seq_tratamento_p IS NOT NULL AND nr_seq_tratamento_p::text <> '') then

	select	ie_tratamento,
		cd_pessoa_fisica,
		ie_paciente_agudo
	into STRICT	ie_tratamento_w,
		cd_pessoa_fisica_w,
		ie_paciente_agudo_w
	from	paciente_tratamento
	where	nr_sequencia = nr_seq_tratamento_p;

	select	max(obter_estab_unid_hemodialise(coalesce(hd_obter_unidade_prc(CD_PESSOA_FISICA,'C'),NR_SEQ_UNID_DIALISE))),
		max(cd_convenio)
	into STRICT	cd_estabelecimento_w,
		cd_convenio_w
	from	hd_pac_renal_cronico
	where	cd_pessoa_fisica = cd_pessoa_fisica_w;

	select	max(nr_sequencia)
	into STRICT	nr_seq_prot_anterior_w
	from	hd_protocolo_exame
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	coalesce(dt_fim::text, '') = '';

	/*select	max(nr_sequencia)
	into	nr_seq_protocolo_w
	from	hd_prot_exame_padrao
	where	ie_tratamento = ie_tratamento_w
	and	(cd_estabelecimento = cd_estabelecimento_w or cd_estabelecimento is null)
	and	(cd_convenio = cd_convenio_w or cd_convenio is null)
	and	ie_situacao = 'A';*/
	if (nr_seq_prot_anterior_w IS NOT NULL AND nr_seq_prot_anterior_w::text <> '') then

		select	ie_tratamento
		into STRICT	ie_trat_anterior_w
		from	hd_protocolo_exame
		where	nr_sequencia = nr_seq_prot_anterior_w;

	end if;

	if (ie_trat_anterior_w <> ie_tratamento_w) or (coalesce(nr_seq_prot_anterior_w::text, '') = '') then

		open C01;
		loop
		fetch C01 into
			nr_seq_protocolo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			insert into hd_protocolo_exame(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_protocolo,
						ie_tratamento,
						cd_pessoa_fisica)
					values (	nextval('hd_protocolo_exame_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_protocolo_w,
						ie_tratamento_w,
						cd_pessoa_fisica_w);
			end;
		end loop;
		close C01;


	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_protocolo_exames ( nr_seq_tratamento_p bigint, nm_usuario_p text) FROM PUBLIC;

