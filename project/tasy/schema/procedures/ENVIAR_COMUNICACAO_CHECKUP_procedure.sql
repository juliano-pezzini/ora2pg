-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE enviar_comunicacao_checkup (nr_seq_checkup_p bigint, nr_seq_etapa_p bigint, ie_opcao_envio_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_mensagem_p text) AS $body$
DECLARE

 
nm_paciente_w		varchar(255);
nm_usuario_prof_w	varchar(60);
ds_etapa_w		varchar(255);
dt_previsto_w		timestamp;
dt_previsto_checkup_w	timestamp;
nm_usuario_w		varchar(255);
ds_setor_w		varchar(255);
ds_perfil_w		varchar(4000);
ie_tipo_envio_w	varchar(3);
nr_sequencia_w	bigint;
lista_usuario_w	varchar(255);
ds_email_padrao_w	varchar(80);
ds_email_destino_w	varchar(80);
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
ie_contador_w		bigint;
ds_titulo_w		varchar(255)	:= 'Check-Up Executivo.';

C01 CURSOR FOR 
	SELECT	substr(obter_nome_pf(a.cd_pessoa_fisica),1,100), 
		a.dt_previsto, 
		substr(obter_desc_etapa_checkup(b.nr_seq_etapa),1,100), 
		substr(obter_usuario_pessoa(b.cd_pessoa_fisica),1,60), 
		b.dt_prevista, 
		b.nm_usuario_destino, 
		b.ds_perfil_adicional, 
		b.ds_setor_adicional, 
		b.ie_forma_conf 
	from	checkup_etapa b, 
		checkup a 
	where	a.nr_sequencia	= b.nr_seq_checkup 
	and	a.nr_sequencia 	= nr_seq_checkup_p 
	order	by a.nr_sequencia, b.nr_seq_etapa;


BEGIN 
 
if (coalesce(ie_opcao_envio_p,'E') = 'E') then 
	begin 
	if (nr_seq_checkup_p IS NOT NULL AND nr_seq_checkup_p::text <> '') and (nr_seq_etapa_p IS NOT NULL AND nr_seq_etapa_p::text <> '') then 
		begin 
		select	substr(obter_nome_pf(a.cd_pessoa_fisica),1,100), 
			substr(obter_desc_etapa_checkup(b.nr_seq_etapa),1,100), 
			substr(obter_usuario_pessoa(b.cd_pessoa_fisica),1,60), 
			b.dt_prevista, 
			b.nm_usuario_destino, 
			b.ds_perfil_adicional, 
			b.ds_setor_adicional, 
			b.ie_forma_conf 
		into STRICT	nm_paciente_w, 
			ds_etapa_w, 
			nm_usuario_prof_w, 
			dt_previsto_w,			 
			nm_usuario_w, 
			ds_perfil_w, 
			ds_setor_w, 
			ie_tipo_envio_w 
		from	checkup_etapa b, 
			checkup a 
		where	a.nr_sequencia	= b.nr_seq_checkup 
		and	a.nr_sequencia 	= nr_seq_checkup_p 
		and	b.nr_seq_etapa	= nr_seq_etapa_p 
		order	by a.nr_sequencia, b.nr_seq_etapa;
 
		if (coalesce(ie_tipo_envio_w, 'CI') = 'CI') then 
			begin 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_sequencia_w 
			;
 
			insert	into comunic_interna(	dt_comunicado, 
							ds_titulo, 
							ds_comunicado, 
							nm_usuario, 
							dt_atualizacao, 
							ie_geral, 
							nm_usuario_destino, 
							cd_perfil, 
							nr_sequencia, 
							ie_gerencial, 
							nr_seq_classif, 
							ds_perfil_adicional, 
							cd_setor_destino, 
							cd_estab_destino, 
							ds_setor_adicional, 
							dt_liberacao, 
							ds_grupo) 
			values ( 
							clock_timestamp(), 
							ds_titulo_w, 
							ds_mensagem_p, 
							nm_usuario_p, 
							clock_timestamp(), 
							'N', 
							nm_usuario_w || nm_usuario_prof_w, 
							null, 
							nr_sequencia_w, 
							'N', 
							null, 
							ds_perfil_w, 
							null, 
							cd_estabelecimento_p, 
							ds_setor_w, 
							clock_timestamp(), 
							null);
			end;
 
		elsif (coalesce(ie_tipo_envio_w, 'CI') = 'EM') then 
			begin 
			 
			select	b.nm_usuario_destino || nm_usuario_prof_w 
			into STRICT	lista_usuario_w 
			from	checkup_etapa b, 
				checkup a 
			where	a.nr_sequencia	= b.nr_seq_checkup 
			and	a.nr_sequencia	= nr_seq_checkup_p 
			and	b.nr_seq_etapa	= nr_seq_etapa_p 
			order	by a.nr_sequencia, b.nr_seq_etapa;
 
			select	coalesce(c.vl_parametro, c.vl_parametro_padrao) 
			into STRICT	ds_email_padrao_w 
			from	funcao_parametro c 
			where	c.cd_funcao	= 996 
			and	c.nr_sequencia	= 8;
 
			if (coalesce(ds_email_padrao_w::text, '') = '') or (ds_email_padrao_w = '') then 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(265623,'');
				--Não existe um e-mail padrão cadastrado para o envio das comunicações do Check-up! (Parâmetro 8). 
			end if;
 
			ie_contador_w	:= 0;
 
			while	(lista_usuario_w IS NOT NULL AND lista_usuario_w::text <> '') or 
				ie_contador_w > 100 loop 
				begin 
				tam_lista_w		:= length(lista_usuario_w);
				ie_pos_virgula_w	:= position(',' in lista_usuario_w);
 
				if (ie_pos_virgula_w <> 0) then 
					nm_usuario_w	:= substr(lista_usuario_w,1,(ie_pos_virgula_w - 1));
					lista_usuario_w	:= substr(lista_usuario_w,(ie_pos_virgula_w + 2),tam_lista_w);
				else 
					nm_usuario_w	:= nm_usuario_prof_w;
					lista_usuario_w	:= null;
				end if;
 
				select	x.ds_email 
				into STRICT	ds_email_destino_w 
				from	usuario x 
				where	x.nm_usuario = nm_usuario_w;
				 
				if (coalesce(ds_email_destino_w::text, '') = '') or (ds_email_destino_w = '') then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(265624,'usuario= '||nm_usuario_w);
					--O usuário: '||nm_usuario_w||' não possui um e-mail válido cadastrado em seu cadastro de usuário! 
				end if;
				 
				CALL Enviar_Email(ds_titulo_w,ds_mensagem_p,ds_email_padrao_w,ds_email_destino_w,nm_usuario_p,'M');
				ie_contador_w	:= ie_contador_w + 1;
				end;
			end loop;
			end;
		end if;
		end;
	end if;
	end;
 
elsif (coalesce(ie_opcao_envio_p,'E') = 'C') then 
	begin 
	if (nr_seq_checkup_p IS NOT NULL AND nr_seq_checkup_p::text <> '') then 
		begin 
		Open	C01;
		Loop 
		Fetch	C01 into	nm_paciente_w, 
					dt_previsto_checkup_w, 
					ds_etapa_w, 
					nm_usuario_prof_w, 
					dt_previsto_w,			 
					nm_usuario_w, 
					ds_perfil_w, 
					ds_setor_w, 
					ie_tipo_envio_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
 
		if (coalesce(ie_tipo_envio_w, 'CI') = 'CI') then 
			begin 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_sequencia_w 
			;
 
			insert	into comunic_interna(	dt_comunicado, 
							ds_titulo, 
							ds_comunicado, 
							nm_usuario, 
							dt_atualizacao, 
							ie_geral, 
							nm_usuario_destino, 
							cd_perfil, 
							nr_sequencia, 
							ie_gerencial, 
							nr_seq_classif, 
							ds_perfil_adicional, 
							cd_setor_destino, 
							cd_estab_destino, 
							ds_setor_adicional, 
							dt_liberacao, 
							ds_grupo) 
			values ( 
							clock_timestamp(), 
							ds_titulo_w, 
							ds_mensagem_p, 
							nm_usuario_p, 
							clock_timestamp(), 
							'N', 
							nm_usuario_w || nm_usuario_prof_w, 
							null, 
							nr_sequencia_w, 
							'N', 
							null, 
							ds_perfil_w, 
							null, 
							cd_estabelecimento_p, 
							ds_setor_w, 
							clock_timestamp(), 
							null);
			end;
 
		elsif (coalesce(ie_tipo_envio_w, 'CI') = 'EM') then 
			begin 
			lista_usuario_w	:= nm_usuario_w || nm_usuario_prof_w;
 
			select	coalesce(c.vl_parametro, c.vl_parametro_padrao) 
			into STRICT	ds_email_padrao_w 
			from	funcao_parametro c 
			where	c.cd_funcao	= 996 
			and	c.nr_sequencia	= 8;
			 
			if (coalesce(ds_email_padrao_w::text, '') = '') or (ds_email_padrao_w = '') then 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(265625,'');
				--Não existe um e-mail padrão cadastrado para o envio das comunicações do Check-up! (Parâmetro 8). 
			end if;
			 
			ie_contador_w	:= 0;
 
			while	(lista_usuario_w IS NOT NULL AND lista_usuario_w::text <> '') or 
				ie_contador_w > 100 loop 
				begin 
				tam_lista_w		:= length(lista_usuario_w);
				ie_pos_virgula_w	:= position(',' in lista_usuario_w);
 
				if (ie_pos_virgula_w <> 0) then 
					nm_usuario_w	:= substr(lista_usuario_w,1,(ie_pos_virgula_w - 1));
					lista_usuario_w	:= substr(lista_usuario_w,(ie_pos_virgula_w + 2),tam_lista_w);
				else 
					nm_usuario_w	:= nm_usuario_prof_w;
					lista_usuario_w	:= null;
				end if;
				 
				select	x.ds_email 
				into STRICT	ds_email_destino_w 
				from	usuario x 
				where	x.nm_usuario = nm_usuario_w;
 
				if (coalesce(ds_email_destino_w::text, '') = '') or (ds_email_destino_w = '') then 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(265624,'usuario= '||nm_usuario_w);
					--O usuário: '||nm_usuario_w||' não possui um e-mail válido cadastrado em seu cadastro de usuário! 
				end if;
				 
				CALL Enviar_Email(ds_titulo_w,ds_mensagem_p,ds_email_padrao_w,ds_email_destino_w,nm_usuario_p,'M');
				ie_contador_w	:= ie_contador_w + 1;
				end;
			end loop;
			end;
		end if;
		end Loop;
		Close C01;
		end;
 
	end if;
	end;
end if;
COMMIT;
 
END	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enviar_comunicacao_checkup (nr_seq_checkup_p bigint, nr_seq_etapa_p bigint, ie_opcao_envio_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_mensagem_p text) FROM PUBLIC;

