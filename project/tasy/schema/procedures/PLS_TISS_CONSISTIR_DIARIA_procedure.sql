-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tiss_consistir_diaria ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistência  de diária.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  x]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/* IE_TIPO_GLOSA_P
	C - Conta
	CP - Conta procedimento
	CM - Conta material
	A - Autorização
	AP - Autorização procedimento
	AM - Autorização material
*/
qt_registro_w			bigint	:= 0;
cd_guia_w			varchar(20);
nr_seq_segurado_w		bigint;
dt_entrada_w			timestamp;
dt_alta_w			timestamp;
qt_procedimento_w		double precision;
qt_proc_total_diarias_w		double precision	:= 0;
qt_dias_internado_w		integer	:= null;
ie_tipo_guia_w			varchar(2);
cd_tipo_acomodacao_w		varchar(2);
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_tipo_acomodacao_conta_w	bigint;
ie_acomodacao_invalida_w	varchar(1) 	:= 'S';
ie_guia_autor_w			varchar(1) 	:= 'S';
ie_acomodacao_nula_w		varchar(1)	:= 'N';
ie_categoria_w			varchar(1)	:= 'N';
nr_seq_categoria_w		bigint;
nr_seq_categoria_ww		bigint;
ie_validacao_w			varchar(5);
cd_versao_tiss_w		pls_protocolo_conta.cd_versao_tiss%type;
nr_seq_protocolo_w		pls_conta.nr_seq_protocolo%type;

C01 CURSOR FOR
	SELECT	nr_seq_categoria
	from	pls_regra_categoria
	where	nr_seq_tipo_acomodacao = nr_seq_tipo_acomodacao_w;


BEGIN

if (ie_tipo_glosa_p	= 'C') then
	/* Obter dados da conta */

	begin
	select	coalesce(coalesce(cd_guia_referencia,cd_guia),coalesce(cd_guia_solic_imp,cd_guia_imp)),
		nr_seq_segurado,
		coalesce(dt_entrada,dt_entrada_imp),
		coalesce(dt_alta,dt_alta_imp),
		ie_tipo_guia,
		cd_tipo_acomodacao_imp,
		nr_seq_tipo_acomodacao,
		nr_seq_protocolo
	into STRICT	cd_guia_w,
		nr_seq_segurado_w,
		dt_entrada_w,
		dt_alta_w,
		ie_tipo_guia_w,
		cd_tipo_acomodacao_w,
		nr_seq_tipo_acomodacao_conta_w,
		nr_seq_protocolo_w
	from	pls_conta
	where	nr_sequencia	= nr_sequencia_p;
	exception
	when others then
		nr_seq_segurado_w	:= null;
	end;

	select	coalesce(sum(qt_procedimento_imp),0)
	into STRICT	qt_proc_total_diarias_w
	from	pls_conta_proc
	where	nr_seq_conta = nr_sequencia_p
	and	ie_tipo_despesa = '3';


	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (dt_entrada_w IS NOT NULL AND dt_entrada_w::text <> '') then
		qt_dias_internado_w := Obter_Dias_Entre_Datas_hora(dt_entrada_w,dt_alta_w) + 1;
	end if;

	select 	cd_versao_tiss
	into STRICT	cd_versao_tiss_w
	from	pls_protocolo_conta
	where	nr_sequencia = nr_seq_protocolo_w;

	if ( cd_versao_tiss_w < '3.01.00') then
		if (ie_evento_p = 'IA') then
			if (ie_tipo_guia_w = '5') and (coalesce(cd_tipo_acomodacao_w::text, '') = '') then
				ie_acomodacao_nula_w	:= 'S';
			end if;
		elsif (ie_evento_p = 'CC') then
			if (ie_tipo_guia_w = '5') and (coalesce(nr_seq_tipo_acomodacao_conta_w::text, '') = '') then
				ie_acomodacao_nula_w	:= 'S';
			end if;
		end if;
	end if;

	if (ie_tipo_guia_w = '5') then
		if (cd_guia_w IS NOT NULL AND cd_guia_w::text <> '') then
			if (ie_evento_p = 'IA') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_tipo_acomodacao_conta_w
				from	pls_tipo_acomodacao
				where	cd_tiss			= cd_tipo_acomodacao_w;

				nr_seq_segurado_w := nr_seq_segurado_p;
			end if;

			begin
			select 	ie_validacao_categoria
			into STRICT	ie_validacao_w
			from	pls_regra_glosa_1909;
			exception
			when others then
				ie_validacao_w	:= 'AC';
			end;

			begin
				select	nr_seq_tipo_acomodacao
				into STRICT	nr_seq_tipo_acomodacao_w
				from	pls_guia_plano
				where	cd_guia		= cd_guia_w
				and	nr_seq_segurado	= nr_seq_segurado_w;
			exception
			when others then
				nr_seq_tipo_acomodacao_w := null;
				ie_guia_autor_w := 'N';
			end;

			if (coalesce(cd_guia_w,'X') <> 'X')	then
				ie_guia_autor_w	:= 'S';

				begin
					select	nr_seq_tipo_acomodacao
					into STRICT	nr_seq_tipo_acomodacao_w
					from	pls_guia_plano
					where	cd_guia_pesquisa = cd_guia_w
					and	nr_seq_segurado	 = nr_seq_segurado_w;
				exception
				when others then
					nr_seq_tipo_acomodacao_w := null;
					ie_guia_autor_w := 'N';
				end;
			end if;

			if (nr_seq_tipo_acomodacao_w <> nr_seq_tipo_acomodacao_conta_w) and (ie_guia_autor_w = 'S') then /*Diego OS 326796 - Só será considerada para guias que possuem uma autorização na base.*/
				ie_acomodacao_invalida_w := 'N';
			end if;

			if (ie_acomodacao_invalida_w 	= 'N') 	and (coalesce(ie_validacao_w,'AC')	= 'AC')	then
				open C01;
				loop
				fetch C01 into
					nr_seq_categoria_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin
					nr_seq_categoria_ww := null;
					begin
						select	max(nr_sequencia)
						into STRICT	nr_seq_categoria_ww
						from	pls_regra_categoria
						where	nr_seq_categoria 	= nr_seq_categoria_w
						and	nr_seq_tipo_acomodacao 	= nr_seq_tipo_acomodacao_conta_w;
					exception
					when others then
						nr_seq_categoria_ww:= 0;
					end;


					if (coalesce(nr_seq_categoria_ww,0) > 0) then
						ie_acomodacao_invalida_w := 'S';
					end if;
					end;
				end loop;
				close C01;
			end if;
		end if;
	end if;
elsif (ie_tipo_glosa_p	= 'A') then
	select	nr_seq_tipo_acomodacao,
		ie_tipo_guia
	into STRICT	nr_seq_tipo_acomodacao_w,
		ie_tipo_guia_w
	from	pls_guia_plano
	where	nr_sequencia = nr_sequencia_p;

	if (ie_tipo_guia_w in ('1','8')) and (coalesce(nr_seq_tipo_acomodacao_w::text, '') = '') then
		ie_acomodacao_nula_w	:= 'S';
	end if;
end if;

qt_registro_w	:= 0;
/* 1913 - Cobrança de diária em quantidade incompatível com a permanência hospitalar*/

if (qt_proc_total_diarias_w > qt_dias_internado_w) then
	CALL pls_gravar_glosa_tiss('1914',
		'Total de diárias: '||qt_proc_total_diarias_w ||' - Período internado: '||qt_dias_internado_w||' dias.', ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/* 1906 - Acomodação não informada*/

if (ie_acomodacao_nula_w = 'S') then
	CALL pls_gravar_glosa_tiss('1906',
		'Conta: ' || nr_sequencia_p, ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

/* 1908 (Agora 1909) - Acomodação não autorizada*/

if (ie_tipo_guia_w = '5') and (ie_acomodacao_invalida_w = 'N') then
	CALL pls_gravar_glosa_tiss('1909',
		'Acomodação autorizada: '|| pls_obter_desc_tipo_acomodacao(nr_seq_tipo_acomodacao_w)||' | Acomodação da conta: '||pls_obter_desc_tipo_acomodacao(nr_seq_tipo_acomodacao_conta_w), ie_evento_p,
		nr_sequencia_p, ie_tipo_glosa_p, nr_seq_prestador_p,
		nr_seq_ocorrencia_p, '', nm_usuario_p,
		cd_estabelecimento_p, null);
end if;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tiss_consistir_diaria ( nr_sequencia_p bigint, ie_tipo_glosa_p text, ie_evento_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

