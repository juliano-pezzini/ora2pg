-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_wsuite_trans_person_login ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE, ds_email_p compl_pessoa_fisica.ds_email%TYPE, nr_cpf_p pessoa_fisica.nr_cpf%TYPE, cd_rfc_p pessoa_fisica.cd_rfc%TYPE, dt_nascimento_p pessoa_fisica.dt_nascimento%TYPE, ie_sexo_p pessoa_fisica.ie_sexo%TYPE, nr_telefone_celular_p pessoa_fisica.nr_telefone_celular%TYPE, nr_passaporte_p pessoa_fisica.nr_passaporte%TYPE, nr_identidade_p pessoa_fisica.nr_identidade%TYPE, cd_nacionalidade_p pessoa_fisica.cd_nacionalidade%TYPE, ie_tipo_login_p wsuite_usuario.ie_tipo_login%TYPE, ds_bairro_p compl_pessoa_fisica.ds_bairro%TYPE, sg_estado_p compl_pessoa_fisica.sg_estado%TYPE, ds_municipio_p compl_pessoa_fisica.ds_municipio%TYPE, ds_endereco_p compl_pessoa_fisica.ds_endereco%TYPE, ds_retorno_p INOUT text, ds_link_retrieve_p INOUT text, ds_from_email INOUT text, ds_logo INOUT text, ds_alternative_login_p INOUT wsuite_usuario.ds_alternative_login%TYPE, ie_tipo_ativacao_p wsuite_usuario.ie_tipo_ativacao%TYPE DEFAULT NULL) AS $body$
DECLARE

  /* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  Finality: Create new person in the database 
  ------------------------------------------------------------------------------------------------------------------- 

  Locais de chamada direta: 
  [  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatorios [ ] Outros:
  ------------------------------------------------------------------------------------------------------------------ 

  Pontos de atencao: 
  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
  id_subject_w                   wsuite_usuario.id_subject%TYPE;
  nr_sequencia_termo_uso_w       wsuite_usuario.nr_seq_termo_uso%TYPE;
  nr_seq_wsuite_solic_inclusao_p wsuite_solic_inclusao_pf.nr_sequencia%TYPE;
  ds_login_w                     wsuite_usuario.ds_login%TYPE;
  ds_replacement_login_w         wsuite_usuario.nm_usuario_web%TYPE;
  nr_seq_wsuite_usuario_w        wsuite_usuario.nr_sequencia%TYPE;
  compl_pessoa_fisica_count      integer := 0;
  ds_hash_w                      wsuite_usuario.ds_hash_ativacao%TYPE;
  datasource_id_w                datasource.id%TYPE;
  application_id_w               application.id%TYPE;
  id_w                           subject.id%TYPE;
  subject_datasource_id          subject_datasource.id%TYPE;
  ds_razao_social_p              pessoa_juridica.ds_razao_social%TYPE;
  ds_email_remetente_p           wsuite_configuracao.ds_email_remetente%TYPE;
  ds_token_p                     wsuite_token.ds_token%TYPE;
  ds_path_p                      wsuite_token.ds_path%TYPE;
  ds_alternative_login_count     integer := 0;
  ds_email_w                     varchar(255);
  ds_endereco_w                  varchar(255);
  sg_estado_w                    varchar(255);
  id_role_w                      varchar(255);
  id_client_w                    varchar(255);
  subject_client_id              varchar(255);
  subject_role_id                varchar(255);
  id_datasource_role_w           varchar(255);
  ds_expressao_w                 varchar(255);
  cd_cep_p                       varchar(255);
  nr_telefone_p                  varchar(255);
  nr_sequencia_max_w             compl_pessoa_fisica.nr_sequencia%TYPE;
  ds_email_pf_w			 compl_pessoa_fisica.ds_email%TYPE;
  nm_usuario_web_w               wsuite_usuario.nm_usuario_web%TYPE;

  c01 CURSOR FOR 
    SELECT dt_atualizacao, 
           nm_usuario, 
           dt_atualizacao_nrec, 
           nm_usuario_nrec, 
           nm_pessoa_fisica, 
           nr_ddd_celular, 
           nr_ddi_celular, 
           nr_identidade, 
           cd_municipio_ibge, 
           nr_seq_pais, 
           nr_passaporte, 
           nr_seq_person_name, 
           cd_estabelecimento, 
           ds_senha, 
           nr_cpf, 
           nr_telefone_celular, 
           cd_rfc, 
           ie_sexo, 
           dt_nascimento 
    FROM   pessoa_fisica 
    WHERE  cd_pessoa_fisica = cd_pessoa_fisica_p;
BEGIN
    SELECT nextval('wsuite_solic_inclusao_pf_seq') 
    INTO STRICT   nr_seq_wsuite_solic_inclusao_p 
;

    SELECT nextval('wsuite_usuario_seq') 
    INTO STRICT   nr_seq_wsuite_usuario_w 
;

    SELECT nr_sequencia 
    INTO STRICT   nr_sequencia_termo_uso_w 
    FROM   wsuite_termo_uso 
    WHERE  ie_situacao = 'A'  
    ORDER  BY dt_atualizacao DESC LIMIT 1;

    SELECT Count(*) 
    INTO STRICT   compl_pessoa_fisica_count 
    FROM   compl_pessoa_fisica 
    WHERE  cd_pessoa_fisica = cd_pessoa_fisica_p 
       AND ie_tipo_complemento = 1;

    --Register generated by person inclusion request, done via Web Suite portal, inclusion code: 
    ds_expressao_w := Obter_desc_expressao(757798, NULL);
    ds_email_pf_w := lower(ds_email_p);

    FOR c01_w IN c01 LOOP
        INSERT INTO wsuite_solic_inclusao_pf(nr_sequencia, 
                     dt_atualizacao, 
                     nm_usuario, 
                     dt_atualizacao_nrec, 
                     nm_usuario_nrec, 
                     nm_pessoa_fisica, 
                     dt_nascimento, 
                     nr_cpf, 
                     ds_email, 
                     ds_endereco, 
                     ds_bairro, 
                     nr_telefone_celular, 
                     nr_ddd_celular, 
                     nr_ddi_celular, 
                     nr_identidade, 
                     cd_rfc, 
                     cd_pessoa_fisica, 
                     ie_status, 
                     cd_municipio_ibge, 
                     nr_seq_pais, 
                     nr_passaporte, 
                     sg_estado, 
                     ds_municipio, 
                     ie_sexo, 
                     dt_solicitacao, 
                     nr_seq_person_name, 
                     cd_nacionalidade,
		     ie_origem_solicitacao) 
        VALUES ( nr_seq_wsuite_solic_inclusao_p, 
                     clock_timestamp(), 
                     c01_w.nm_usuario, 
                     clock_timestamp(), 
                     c01_w.nm_usuario_nrec, 
                     c01_w.nm_pessoa_fisica, 
                     dt_nascimento_p, 
                     nr_cpf_p, 
                     ds_email_pf_w, 
                     ds_endereco_p, 
                     ds_bairro_p, 
                     nr_telefone_celular_p, 
                     c01_w.nr_ddd_celular, 
                     c01_w.nr_ddi_celular, 
                     nr_identidade_p, 
                     cd_rfc_p, 
                     cd_pessoa_fisica_p, 
                     '2', 
                     c01_w.cd_municipio_ibge, 
                     c01_w.nr_seq_pais, 
                     nr_passaporte_p, 
                     sg_estado_p, 
                     ds_municipio_p, 
                     ie_sexo_p, 
                     clock_timestamp(), 
                     c01_w.nr_seq_person_name, 
                     cd_nacionalidade_p,
		     '1');

        SELECT * FROM SELECT * FROM Wsuite_generate_username(nr_cpf_p, cd_rfc_p, ds_email_pf_w, nr_seq_wsuite_usuario_w, ie_tipo_login_p, ds_replacement_login_w, ds_login_w) INTO STRICT ds_replacement_login_w, ds_login_w INTO ds_replacement_login_w, ds_login_w,;

        ds_hash_w := wsuite_login_pck.wsuite_generate_hash;

        ds_alternative_login_p := Substr(ds_email_pf_w, 1, position('@' in ds_email_pf_w) 
                                                        - 1);

        SELECT Count(*) 
        INTO STRICT   ds_alternative_login_count 
        FROM   subject 
        WHERE  ds_alternative_login = ds_alternative_login_p;

        WHILE ds_alternative_login_count > 0 LOOP 
            SELECT Concat(ds_alternative_login_p, Round( 
                   dbms_random.Value(1, 1000))) 
            INTO STRICT   ds_alternative_login_p 
;

            SELECT Count(*) 
            INTO STRICT   ds_alternative_login_count 
            FROM   subject 
            WHERE  ds_alternative_login = ds_alternative_login_p;
        END LOOP;

        SELECT psa_uuid_generator 
        INTO STRICT   id_w 
;

        INSERT INTO subject(id, 
                     ds_alternative_login, 
                     ds_email, 
                     ds_login, 
                     ds_password, 
                     ds_replacement_login, 
                     ds_salt, 
                     dt_creation, 
                     dt_modification, 
                     dt_password_modification, 
                     nm_subject, 
                     vl_auth_type, 
                     vl_password_style) 
        VALUES ( id_w, 
                     ds_alternative_login_p, 
                     ds_email_pf_w, 
                     ds_login_w, 
                     psa_uuid_generator, 
                     ds_replacement_login_w, 
                     NULL, 
                     clock_timestamp(), 
                     clock_timestamp(), 
                     clock_timestamp(), 
                     c01_w.nm_pessoa_fisica, 
                     0, 
                     1 );

        SELECT Max(id) 
        INTO STRICT   id_subject_w 
        FROM   subject 
        WHERE  ds_login = ds_login_w;

        IF (UPPER(ie_tipo_ativacao_p) = 'S') THEN
          nm_usuario_web_w := ds_login_w;
        ELSE
          nm_usuario_web_w := ds_replacement_login_w;
        END IF;

        INSERT INTO wsuite_usuario(nr_sequencia,
                     ie_situacao, 
                     cd_estabelecimento,                       
                     nm_usuario_web,                       
                     cd_pessoa_fisica, 
                     ie_tipo_login, 
                     dt_atualizacao, 
                     nm_usuario, 
                     dt_atualizacao_nrec, 
                     nm_usuario_nrec, 
                     nm_usuario_tasy, 
                     nr_seq_segurado, 
                     qt_tentativa_acesso, 
                     nr_seq_perfil_wsuite, 
                     id_subject, 
                     ds_login, 
                     nr_seq_inclusao_pf, 
                     ds_hash_ativacao, 
                     dt_criacao, 
                     dt_ativacao, 
                     nr_seq_termo_uso, 
                     dt_envio_confirmacao, 
                     ds_alternative_login, 
                     ie_origem_conta,
							       ds_email,
                     ie_tipo_ativacao) 
        VALUES ( nr_seq_wsuite_usuario_w, 
                     'I',
                     c01_w.cd_estabelecimento, 
                     nm_usuario_web_w, 
                     cd_pessoa_fisica_p, 
                     ie_tipo_login_p, 
                     clock_timestamp(), 
                     wheb_usuario_pck.get_nm_usuario, 
                     clock_timestamp(), 
                     wheb_usuario_pck.get_nm_usuario, 
                     NULL, 
                     NULL, 
                     NULL, 
                     NULL, 
                     id_subject_w, 
                     ds_login_w, 
                     nr_seq_wsuite_solic_inclusao_p, 
                     ds_hash_w, 
                     clock_timestamp(), 
                     NULL,
                     nr_sequencia_termo_uso_w, 
                     NULL, 
                     ds_alternative_login_p, 
                     'S',
							       ds_email_pf_w,
                     ie_tipo_ativacao_p);

        IF ( compl_pessoa_fisica_count = 0 ) THEN 
          SELECT coalesce(Max(nr_sequencia), 0) + 1 
          INTO STRICT   nr_sequencia_max_w 
          FROM   compl_pessoa_fisica 
          WHERE  cd_pessoa_fisica = cd_pessoa_fisica_p 
             AND ie_tipo_complemento = 1;

          INSERT INTO compl_pessoa_fisica(cd_pessoa_fisica, 
                       nr_sequencia, 
                       ie_tipo_complemento, 
                       dt_atualizacao, 
                       nm_usuario, 
                       ds_endereco, 
                       cd_cep, 
                       nr_endereco, 
                       ds_complemento, 
                       ds_bairro, 
                       sg_estado, 
                       nr_telefone, 
                       ds_observacao, 
                       ds_email, 
                       dt_atualizacao_nrec, 
                       nm_usuario_nrec) 
          VALUES ( cd_pessoa_fisica_p, 
                       nr_sequencia_max_w, 
                       1, 
                       clock_timestamp(), 
                       c01_w.nm_usuario, 
                       ds_endereco_p, 
                       NULL, 
                       NULL, 
                       NULL, 
                       ds_bairro_p, 
                       NULL, 
                       NULL, 
                       ds_expressao_w || nr_seq_wsuite_solic_inclusao_p, 
                       ds_email_pf_w, 
                       clock_timestamp(), 
                       c01_w.nm_usuario );
        END IF;

        SELECT psa_uuid_generator 
        INTO STRICT   subject_datasource_id 
;

        SELECT id 
        INTO STRICT   application_id_w 
        FROM   application 
        WHERE  nm_application = 'websuite';

        SELECT id 
        INTO STRICT   datasource_id_w 
        FROM   datasource 
        WHERE  id_application IN (SELECT id 
                                  FROM   application 
                                  WHERE  nm_application = 'websuite');

        INSERT INTO subject_datasource(dt_creation, 
                     dt_modification, 
                     id, 
                     id_datasource, 
                     id_subject, 
                     vl_activation_status, 
                     vl_attempts_so_far) 
        VALUES ( clock_timestamp(), 
                     clock_timestamp(), 
                     subject_datasource_id, 
                     datasource_id_w, 
                     id_subject_w, 
                     0, 
                     0 );

        INSERT INTO application_subject(id_application, 
                     id_subject) 
        VALUES ( application_id_w, 
                     id_subject_w );

        SELECT id 
        INTO STRICT   id_client_w 
        FROM   client 
        WHERE  nm_client = 'patient';

        SELECT psa_uuid_generator 
        INTO STRICT   subject_client_id 
;

        INSERT INTO subject_client(id, 
                     id_subject, 
                     id_client, 
                     dt_creation, 
                     dt_modification, 
                     vl_activation_status, 
                     vl_attempts_so_far) 
        VALUES ( subject_client_id, 
                     id_subject_w, 
                     id_client_w, 
                     clock_timestamp(), 
                     clock_timestamp(), 
                     0, 
                     0 );

        SELECT id 
        INTO STRICT   id_role_w 
        FROM   ROLE 
        WHERE  nm_role = 'linkedUser';

        INSERT INTO subject_role(id_subject, 
                     id_role, 
                     dt_creation, 
                     dt_modification) 
        VALUES ( id_subject_w, 
                     id_role_w, 
                     clock_timestamp(), 
                     clock_timestamp() );

        IF ( compl_pessoa_fisica_count > 0 ) THEN 
          UPDATE compl_pessoa_fisica 
          SET    ds_email = ds_email_pf_w 
          WHERE  cd_pessoa_fisica = cd_pessoa_fisica_p 
             AND ie_tipo_complemento = 1;
        END IF;

        COMMIT;
    END LOOP;

    ds_retorno_p := ds_login_w;

    SELECT Concat(max(ds_link_web_suite), 'reset-password') 
    INTO STRICT   ds_path_p 
    FROM   wsuite_configuracao;

    SELECT max(ds_email_remetente)
    INTO STRICT   ds_from_email 
    FROM   wsuite_configuracao;

    SELECT max(ds_url_logo_header_login) 
    INTO STRICT   ds_logo 
    FROM   wsuite_layout_client;

    SELECT * FROM wsuite_login_pck.Wsuite_retrieve_password(ds_login_w, ds_path_p, '', ds_email_w, ds_endereco_w, cd_cep_p, sg_estado_w, nr_telefone_p, ds_razao_social_p, ds_email_remetente_p, ds_link_retrieve_p, ds_token_p, 'S') INTO STRICT ds_email_w, ds_endereco_w, cd_cep_p, sg_estado_w, nr_telefone_p, ds_razao_social_p, ds_email_remetente_p, ds_link_retrieve_p, ds_token_p;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_wsuite_trans_person_login ( cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE, ds_email_p compl_pessoa_fisica.ds_email%TYPE, nr_cpf_p pessoa_fisica.nr_cpf%TYPE, cd_rfc_p pessoa_fisica.cd_rfc%TYPE, dt_nascimento_p pessoa_fisica.dt_nascimento%TYPE, ie_sexo_p pessoa_fisica.ie_sexo%TYPE, nr_telefone_celular_p pessoa_fisica.nr_telefone_celular%TYPE, nr_passaporte_p pessoa_fisica.nr_passaporte%TYPE, nr_identidade_p pessoa_fisica.nr_identidade%TYPE, cd_nacionalidade_p pessoa_fisica.cd_nacionalidade%TYPE, ie_tipo_login_p wsuite_usuario.ie_tipo_login%TYPE, ds_bairro_p compl_pessoa_fisica.ds_bairro%TYPE, sg_estado_p compl_pessoa_fisica.sg_estado%TYPE, ds_municipio_p compl_pessoa_fisica.ds_municipio%TYPE, ds_endereco_p compl_pessoa_fisica.ds_endereco%TYPE, ds_retorno_p INOUT text, ds_link_retrieve_p INOUT text, ds_from_email INOUT text, ds_logo INOUT text, ds_alternative_login_p INOUT wsuite_usuario.ds_alternative_login%TYPE, ie_tipo_ativacao_p wsuite_usuario.ie_tipo_ativacao%TYPE DEFAULT NULL) FROM PUBLIC;

