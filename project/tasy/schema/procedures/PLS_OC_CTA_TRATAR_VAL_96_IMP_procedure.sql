-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_96_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
i			integer;
ie_tipo_guia_plano_w	pls_guia_plano.ie_tipo_guia%type;
nr_seq_segurado_plano_w	pls_guia_plano.nr_seq_segurado%type;
ie_guia_princ_w		pls_guia_plano.ie_tipo_guia%type;
nr_seq_segurado_princ_w pls_guia_plano.nr_seq_segurado%type;
cd_guia_princ_w		pls_guia_plano.cd_guia%type;
nr_seq_conta_princ_w	pls_conta.nr_seq_conta_princ%type;
ie_valido_w		varchar(2) := 'N';
ds_observacao_1_w	varchar(255);
ds_observacao_2_w	varchar(255);

tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;

C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_valida_cta_princ_guia,
		a.nr_seq_regra_tp_guia,
		coalesce(a.ie_valida_regras,'N') ie_valida_regras,
		(SELECT	b.ie_tipo_guia_autor
		 from	pls_regra_tipo_guia_apres b
		 where	b.nr_sequencia = a.nr_seq_regra_tp_guia
		 and	b.ie_situacao = 'A') ie_tipo_guia_autor
	from	pls_oc_cta_val_princ_guia a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT 	sel.nr_sequencia nr_seq_selecao,
		sel.nr_seq_conta,
		conta.cd_guia_principal cd_guia_referencia,
		conta.cd_guia_operadora cd_guia,
		conta.nr_seq_segurado_conv nr_seq_segurado
	from 	pls_conta_imp conta,
		pls_oc_cta_selecao_imp sel
	where 	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	sel.nr_seq_conta	= conta.nr_sequencia;

C04 CURSOR(	nr_seq_regra_tp_guia_pc		pls_regra_tipo_guia_apres.nr_sequencia%type) FOR
	SELECT	ie_tipo_guia_apres
	from	pls_regra_tp_guia_ap_item
	where	nr_seq_regra = nr_seq_regra_tp_guia_pc
	order by ie_tipo_guia_apres;
BEGIN

-- Deve ter a informação da regra para que seja aplicada a validação.
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
							'N',
							nr_id_transacao_p,
							null);
	i := 0;

	--Guia executada:
	ds_observacao_1_w := wheb_mensagem_pck.get_texto(791815);
	--Guia apresentada:
	ds_observacao_2_w := wheb_mensagem_pck.get_texto(791816);

	for r_C01_w in C01(nr_seq_combinada_p) loop

		--limpa as variáveis
		SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

		for	r_C02_w in C02(nr_id_transacao_p) loop

			ie_valido_w := 'N';

			--aqui busco os dados da guia da conta principal
			select	sub.ie_tipo_guia_plano,
				sub.ie_tipo_guia,
				sub.nr_seq_segurado,
				sub.cd_guia_imp
			into STRICT	ie_tipo_guia_plano_w,
				ie_guia_princ_w,
				nr_seq_segurado_princ_w,
				cd_guia_princ_w
			from (
				SELECT (SELECT	max(b.ie_tipo_guia)
					 from	pls_guia_plano b
					 where	b.nr_sequencia = a.nr_seq_guia) ie_tipo_guia_plano,
					ie_tipo_guia,
					nr_seq_segurado,
					cd_guia_imp
				from	pls_conta a
				where	nr_sequencia = r_c02_w.nr_seq_conta
				
union all

				select (select	max(b.ie_tipo_guia)
					 from	pls_guia_plano b
					 where	b.nr_sequencia = conta.cd_guia_operadora) ie_tipo_guia_plano,
					prot.ie_tipo_guia,
					conta.nr_seq_segurado_conv nr_seq_segurado,
					conta.cd_guia_operadora cd_guia_imp
				from	pls_conta_imp conta,
					pls_protocolo_conta_imp prot
				where	prot.nr_sequencia	= conta.nr_seq_protocolo
				and 	conta.nr_sequencia	= r_c02_w.nr_seq_conta
			) sub LIMIT 1;

			if (r_C01_w.nr_seq_regra_tp_guia IS NOT NULL AND r_C01_w.nr_seq_regra_tp_guia::text <> '') then

				/*Caso o ie_valida_regras estiver marcado, ele trabalhará em conjunto com o nr_seq_regra_tp_guia, aí caso
					a guia autorizada da conta em questão não for do tipo apontado na Regra tipo guia apresentada,  será gerado
					a ocorrência. Sem esse campo marcado, apenas ocorre validação sobre a regra selecionada, então nesse caso,
					uma conta vinculada a uma guia de solicitação de internação não é validadada caso esteja utilizando uma regra
					para solicitação de internação, somente gerando ocorrência dependendo do cadastro da regra e não gerando se
					a não for do tipo de guia autorizada. também gerará ocorrência caso não encontre a guia na base..
					*/
					if (r_C01_w.ie_valida_regras = 'S') then

						ie_valido_w := 'S';

					end if;

				if (ie_tipo_guia_plano_w = r_C01_w.ie_tipo_guia_autor) then

					ie_valido_w := 'S';

					for r_C04_w in C04(r_C01_w.nr_seq_regra_tp_guia) loop

						if (r_C04_w.ie_tipo_guia_apres = ie_guia_princ_w) then
							ie_valido_w := 'N';
							exit;
						end if;
					end loop;


				end if;

				if (ie_valido_w = 'S') then
						tb_seq_selecao_w(i) := r_C02_w.nr_seq_selecao;
						tb_observacao_w(i) := ds_observacao_1_w || obter_valor_dominio(1746, ie_guia_princ_w) || '. '|| ds_observacao_1_w || obter_valor_dominio(1746, ie_tipo_guia_plano_w);
						tb_valido_w(i) := ie_valido_w;

						if (i >= pls_util_pck.qt_registro_transacao_w) then
							--Grava as informações na tabela de seleção
							CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
													tb_valido_w,
													tb_observacao_w,
													nr_id_transacao_p,
													'SEQ');
							--limpa as variáveis
							SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

							i := 0; -- zera o contador e fecha a transação
						else
							i := i + 1;
						end if;
				end if;

			elsif (r_C01_w.ie_valida_cta_princ_guia = 'S') then
				--pego os dados da guia na autorização
				select	max(ie_tipo_guia),
					max(nr_seq_segurado)
				into STRICT	ie_tipo_guia_plano_w,
					nr_seq_segurado_plano_w
				from	pls_guia_plano
				where	cd_guia_pesquisa = cd_guia_princ_w
				and	nr_seq_segurado  = nr_seq_segurado_princ_w;

				-- De Para para comparar os tipos de guas da autorização  com os tipos de guia da conta
				if ( ie_tipo_guia_plano_w in (1 , 8)) then
					ie_tipo_guia_plano_w := 5;
				elsif ( ie_tipo_guia_plano_w = 2) then
					ie_tipo_guia_plano_w := 4;
				end if;

				--esta validaçao verifica se a guia apresentada é a mesma da autoriza para o mesmo segurado ou seja mesmo atendimento - como hoje a SJRP não valida itens é considerado a guia por isso apenas compara segurado e tipo de guia
				if ( nr_seq_segurado_princ_w = nr_seq_segurado_plano_w) and ( ie_guia_princ_w <> ie_tipo_guia_plano_w ) then
					--Passa nr_seq_conta ao invéz do nr_seq_selecao, pois será feito validação a nível de conta
					tb_seq_selecao_w(i) := r_C02_w.nr_seq_selecao;
					tb_observacao_w(i) := null;
					tb_valido_w(i) := 'S';

					if ( i >= pls_util_pck.qt_registro_transacao_w) then
						--Grava as informações na tabela de seleção
						CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
												tb_valido_w,
												tb_observacao_w,
												nr_id_transacao_p,
												'SEQ');
						--limpa as variáveis
						SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
						i := 0; -- zera o contador e fecha a transação
					else
						i := i + 1;
					end if;
				end if;
			end if;
		end loop;  -- fehca o loop do c02
		--Grava as informações na tabela de seleção
		CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
								tb_valido_w,
								tb_observacao_w,
								nr_id_transacao_p,
								'SEQ');

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
							'N',
							ie_regra_excecao_p,
							null,
							nr_id_transacao_p,
							null);
	end loop;  -- fecha o loop do c01
end if; -- fecha o if dados regras
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_96_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

