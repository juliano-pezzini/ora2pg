-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_34 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação de médico executor da conta ou participante ativo ou inativo.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Alteração:
------------------------------------------------------------------------------------------------------------------
dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_geraX.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_sql_condicao_w	varchar(1000);
ds_sql_w		varchar(4000);
nr_seq_selecao_w	dbms_sql.number_table;
ds_observacao_w		dbms_sql.varchar2_table;
ie_valido_w		dbms_sql.varchar2_table;
v_cur			pls_util_pck.t_cursor;

-- Informações da validação de não-utilização de item autorizado
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_val_medico_inativo
	from	pls_oc_cta_val_med_inativo a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

BEGIN

-- Deve ter a informação da regra para que seja aplicada a validação.
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then
	for	r_C01_w in C01( dados_regra_p.nr_sequencia) loop

		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

		ds_sql_condicao_w := ' 	';
		if (r_C01_w.ie_val_medico_inativo = 'S') then
		ds_sql_condicao_w := 	'	and	(med.ie_situacao <> ''A'' '||pls_tipos_ocor_pck.enter_w||
					'	or	 (med.dt_desligamento < conta.dt_atendimento_referencia))'||pls_tipos_ocor_pck.enter_w;
		end if;

	 		ds_sql_w := ds_sql_w || 'select	sel.nr_sequencia nr_seq_selecao, ' || pls_tipos_ocor_pck.enter_w ||
						' ''S'' ie_registro_valido, ' ||pls_tipos_ocor_pck.enter_w||
						' null ds_obervacao ' ||pls_tipos_ocor_pck.enter_w||
						'from	pls_oc_cta_selecao_ocor_v sel, ' || pls_tipos_ocor_pck.enter_w ||
						'	pls_conta conta, ' || pls_tipos_ocor_pck.enter_w ||
						'	pls_conta_proc proc '||pls_tipos_ocor_pck.enter_w||
						'where	sel.nr_id_transacao = :nr_id_transacao ' || pls_tipos_ocor_pck.enter_w ||
						'and	sel.ie_valido = ''S'' ' || pls_tipos_ocor_pck.enter_w ||
						'and	conta.nr_sequencia = proc.nr_seq_conta'||pls_tipos_ocor_pck.enter_w||
						'and	conta.nr_sequencia = sel.nr_seq_conta ' || pls_tipos_ocor_pck.enter_w ||
						'and	sel.nr_seq_conta_proc = proc.nr_sequencia' || pls_tipos_ocor_pck.enter_w ||
						'and	sel.ie_tipo_registro = ''P'' '|| pls_tipos_ocor_pck.enter_w ||
						'and	exists ( ' || pls_tipos_ocor_pck.enter_w ||
						'		select	1 '|| pls_tipos_ocor_pck.enter_w ||
						'		from	medico med' || pls_tipos_ocor_pck.enter_w ||
						'		where	med.cd_pessoa_fisica = conta.cd_medico_executor ' || pls_tipos_ocor_pck.enter_w ||
						ds_sql_condicao_w || pls_tipos_ocor_pck.enter_w ||
						')and 	not exists ('|| pls_tipos_ocor_pck.enter_w ||
						'		select 1 '|| pls_tipos_ocor_pck.enter_w ||
						'		from pls_proc_participante part'|| pls_tipos_ocor_pck.enter_w ||
						'		where proc.nr_sequencia = part.nr_seq_conta_proc'|| pls_tipos_ocor_pck.enter_w ||
						'	) '|| pls_tipos_ocor_pck.enter_w ||
						'union '|| pls_tipos_ocor_pck.enter_w ||
						'select	sel.nr_sequencia nr_seq_selecao, ' || pls_tipos_ocor_pck.enter_w ||
						' ''S'' ie_registro_valido, ' ||pls_tipos_ocor_pck.enter_w||
						' null ds_obervacao ' ||pls_tipos_ocor_pck.enter_w||
						'from	pls_oc_cta_selecao_ocor_v sel, ' || pls_tipos_ocor_pck.enter_w ||
						'	pls_conta conta, ' || pls_tipos_ocor_pck.enter_w ||
						'	pls_conta_proc proc, '||pls_tipos_ocor_pck.enter_w||
						'	pls_proc_participante part '||pls_tipos_ocor_pck.enter_w||
						'where	sel.nr_id_transacao = :nr_id_transacao ' || pls_tipos_ocor_pck.enter_w ||
						'and	sel.ie_valido = ''S'' ' || pls_tipos_ocor_pck.enter_w ||
						'and	conta.nr_sequencia = proc.nr_seq_conta'||pls_tipos_ocor_pck.enter_w||
						'and	part.nr_seq_conta_proc = proc.nr_sequencia '||pls_tipos_ocor_pck.enter_w||
						'and	conta.nr_sequencia = sel.nr_seq_conta ' || pls_tipos_ocor_pck.enter_w ||
						'and	sel.nr_seq_conta_proc = proc.nr_sequencia' || pls_tipos_ocor_pck.enter_w ||
						'and	sel.ie_tipo_registro = ''P'' '|| pls_tipos_ocor_pck.enter_w ||
						'and	exists ( ' || pls_tipos_ocor_pck.enter_w ||
						'		select	1 '|| pls_tipos_ocor_pck.enter_w ||
						'		from	medico med' || pls_tipos_ocor_pck.enter_w ||
						'		where	med.cd_pessoa_fisica = part.cd_medico ' || pls_tipos_ocor_pck.enter_w ||

						ds_sql_condicao_w ||pls_tipos_ocor_pck.enter_w||

						'	) ';

		begin
			open v_cur for EXECUTE ds_sql_w using 	nr_id_transacao_p, nr_id_transacao_p;
			loop
				nr_seq_selecao_w	:= pls_util_cta_pck.num_table_vazia_w;
				ie_valido_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
				ds_observacao_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
				fetch v_cur bulk collect
				into  nr_seq_selecao_w, ie_valido_w, ds_observacao_w
				limit pls_util_cta_pck.qt_registro_transacao_w;
					exit when nr_seq_selecao_w.count = 0;

					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao( nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w, 'SEQ', ds_observacao_w,
										ie_valido_w, nm_usuario_p);

			end loop;
			close v_cur;
		exception
		when others then
			--Fecha cursor
			close v_cur;
			-- Insere o log na tabela e aborta a operação
			CALL pls_tipos_ocor_pck.trata_erro_sql_dinamico(dados_regra_p,ds_sql_w,nr_id_transacao_p,nm_usuario_p);
		end;
	end loop; -- C01
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_34 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

