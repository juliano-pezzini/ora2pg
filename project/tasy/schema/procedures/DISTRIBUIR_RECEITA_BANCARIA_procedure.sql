-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_titulo_receber AS (	nr_titulo		bigint);


CREATE OR REPLACE PROCEDURE distribuir_receita_bancaria ( nr_seq_lote_p bigint, nr_seq_regra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_lote_mens_w			distribuicao_receita_mens.nr_seq_lote_mens%type;
nr_seq_conta_banco_w			regra_dist_rec_criterio.nr_seq_conta_banco%type;
nr_dia_inicial_w			regra_dist_rec_criterio.nr_dia_inicial%type;
nr_dia_final_w				regra_dist_rec_criterio.nr_dia_final%type;
nr_titulo_w				titulo_receber.nr_titulo%type;
dt_pagamento_previsto_w			titulo_receber.dt_pagamento_previsto%type;
nr_dia_titulo_w				titulo_receber.nr_titulo%type;
nr_seq_dist_receita_w			distribuicao_receita.nr_sequencia%type;
nr_seq_conta_banco_ant_w		regra_dist_rec_criterio.nr_seq_conta_banco%type;
qt_minima_titulo_w			regra_dist_rec_criterio.qt_minima_titulo%type;
qt_maxima_titulo_w			regra_dist_rec_criterio.qt_maxima_titulo%type;
nr_contrato_inicial_w			regra_dist_rec_criterio.nr_contrato_inicial%type;
nr_contrato_final_w			regra_dist_rec_criterio.nr_contrato_final%type;
vl_minimo_w				regra_dist_rec_criterio.vl_minimo%type;
vl_maximo_w				regra_dist_rec_criterio.vl_maximo%type;
qt_titulo_w				titulo_receber.vl_saldo_titulo%type;
vl_saldo_titulo_w			titulo_receber.nr_titulo%type;
vl_saldo_titulo_total_w			titulo_receber.nr_titulo%type;
nr_seq_forma_cobranca_w			regra_distribuicao_receita.nr_seq_forma_cobranca%type;
nr_seq_pagador_w			pls_mensalidade.nr_seq_pagador%type;
nr_seq_forma_cobranca_pag_w		regra_dist_rec_criterio.nr_seq_forma_cobranca%type;
ie_banco_contrato_w			regra_dist_rec_criterio.ie_banco_contrato%type;
ie_titulo_criterio_w			regra_distribuicao_receita.ie_titulo_criterio%type;
nr_seq_conta_banco_tit_w		bigint;
cd_cep_inicial_w			regra_dist_rec_criterio.cd_cep_inicial%type;
cd_cep_final_w				regra_dist_rec_criterio.cd_cep_final%type;
cd_cep_pagador_w			varchar(15);
cd_pessoa_fisica_pagador_w		pls_contrato_pagador.cd_pessoa_fisica%type;
cd_cgc_pagador_w			pls_contrato_pagador.cd_cgc%type;

qt_distribuicao_w			bigint	:= 0;
nr_vetor_w				bigint	:= 0;
ie_gera_w				varchar(255);

c_lote_mensalidade CURSOR FOR 
	SELECT	a.nr_seq_lote_mens 
	from	distribuicao_receita_mens	a 
	where	a.nr_seq_lote	= nr_seq_lote_p;

c_criterio_dist CURSOR FOR		 
	SELECT	a.nr_seq_conta_banco, 
		a.nr_dia_inicial, 
		a.nr_dia_final, 
		a.qt_minima_titulo, 
		a.qt_maxima_titulo, 
		a.nr_contrato_inicial, 
		a.nr_contrato_final, 
		a.vl_minimo, 
		a.vl_maximo, 
		a.ie_banco_contrato, 
		a.cd_cep_inicial, 
		a.cd_cep_final 
	from	regra_dist_rec_criterio	a 
	where	a.nr_seq_regra	= nr_seq_regra_p 
	order by 
		coalesce(a.nr_dia_inicial, 0), 
		coalesce(a.nr_dia_final, 0), 
		coalesce(a.qt_minima_titulo, 0), 
		coalesce(a.qt_maxima_titulo, 0), 
		coalesce(a.nr_contrato_inicial, 0), 
		coalesce(a.nr_contrato_final, 0), 
		coalesce(a.vl_minimo, 0), 
		coalesce(a.vl_maximo, 0), 
		coalesce(a.nr_seq_forma_cobranca, 0), 
		a.ie_banco_contrato, 
		coalesce(a.cd_cep_inicial, '0'), 
		coalesce(a.cd_cep_final, '0');
		
c_titulos CURSOR FOR 
	SELECT	b.nr_titulo, 
		b.dt_pagamento_previsto, 
		coalesce(b.vl_titulo,0), 
		a.nr_seq_pagador 
	from	pls_contrato_pagador d, 
		pls_contrato	c, 
		titulo_receber	b, 
		pls_mensalidade	a 
	where	d.nr_sequencia		= a.nr_seq_pagador 
	and	d.nr_seq_contrato	= c.nr_sequencia 
	and	a.nr_seq_lote		= nr_seq_lote_mens_w 
	and	a.nr_sequencia		= b.nr_seq_mensalidade 
	and 	((coalesce(nr_seq_forma_cobranca_w::text, '') = '') or (nr_seq_forma_cobranca_w = substr(pls_obter_dados_pagador_fin(a.nr_seq_pagador, 'F'),1,10))) 
	and (ie_titulo_criterio_w = 'S' or 
		not exists (SELECT	1 
		from	distribuicao_receita	w, 
			titulo_receber_dist_rec	x 
		where	x.nr_titulo	= b.nr_titulo 
		and	w.nr_sequencia	= nr_seq_dist_rec 
		and	w.nr_seq_lote	= nr_seq_lote_p)) 
	order by CASE WHEN coalesce(ie_banco_contrato_w,'N')='S' THEN coalesce(obter_conta_tit_rec_dist(b.nr_titulo),0)  ELSE 0 END , 
		b.dt_pagamento_previsto;

type vetor_titulo_receber is table of t_titulo_receber index by integer;
vetor_titulo_receber_w	vetor_titulo_receber;

BEGIN 
 
select	coalesce(max(a.ie_titulo_criterio),'N'), 
		max(nr_seq_forma_cobranca) 
into STRICT	ie_titulo_criterio_w, 
		nr_seq_forma_cobranca_w 
from	regra_distribuicao_receita a 
where	a.nr_sequencia	= nr_seq_regra_p;
 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
 
	vl_saldo_titulo_total_w	:= 0;
	qt_titulo_w		:= 0;
	 
	open c_lote_mensalidade;
	loop 
	fetch c_lote_mensalidade into 
		nr_seq_lote_mens_w;
	EXIT WHEN NOT FOUND; /* apply on c_lote_mensalidade */
		begin 
		open c_criterio_dist;
		loop 
		fetch c_criterio_dist into 
			nr_seq_conta_banco_w, 
			nr_dia_inicial_w, 
			nr_dia_final_w, 
			qt_minima_titulo_w, 
			qt_maxima_titulo_w, 
			nr_contrato_inicial_w, 
			nr_contrato_final_w, 
			vl_minimo_w, 
			vl_maximo_w, 
			ie_banco_contrato_w, 
			cd_cep_inicial_w, 
			cd_cep_final_w;
		EXIT WHEN NOT FOUND; /* apply on c_criterio_dist */
			begin 
			nr_vetor_w		:= 0;
			qt_distribuicao_w	:= 0;
			vetor_titulo_receber_w.delete;
 
			open c_titulos;
			loop 
			fetch c_titulos into 
				nr_titulo_w, 
				dt_pagamento_previsto_w, 
				vl_saldo_titulo_w, 
				nr_seq_pagador_w;
			EXIT WHEN NOT FOUND; /* apply on c_titulos */
				begin 
				 
				ie_gera_w	:= 'S';
				nr_dia_titulo_w	:= somente_numero(to_char(dt_pagamento_previsto_w,'dd'));
				 
				if	not(nr_dia_titulo_w between coalesce(nr_dia_inicial_w, nr_dia_titulo_w) and coalesce(nr_dia_final_w, nr_dia_titulo_w)) then 
					ie_gera_w	:= 'N';
				end if;
								 
				if	not ((vl_saldo_titulo_total_w + vl_saldo_titulo_w) between coalesce(vl_minimo_w,0) and coalesce(vl_maximo_w,coalesce((vl_saldo_titulo_total_w + vl_saldo_titulo_w),0))) then 
					ie_gera_w	:= 'N';
				end if;
				 
				if	not ((qt_titulo_w + 1) between coalesce(qt_minima_titulo_w,0) and coalesce(qt_maxima_titulo_w, coalesce((qt_titulo_w + 1),0))) then 
					ie_gera_w	:= 'N';				
				end if;
 
				if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') and 
					((cd_cep_inicial_w IS NOT NULL AND cd_cep_inicial_w::text <> '') or (cd_cep_final_w IS NOT NULL AND cd_cep_final_w::text <> '')) then /*Buscar PF ou PJ do pagador*/
 
				 
					select	max(cd_pessoa_fisica), 
						max(cd_cgc) 
					into STRICT	cd_pessoa_fisica_pagador_w, 
						cd_cgc_pagador_w 
					from	pls_contrato_pagador 
					where	nr_sequencia = nr_seq_pagador_w;
					 
					if (cd_pessoa_fisica_pagador_w IS NOT NULL AND cd_pessoa_fisica_pagador_w::text <> '') or (cd_cgc_pagador_w IS NOT NULL AND cd_cgc_pagador_w::text <> '') then /*Se tiver PF ou PJ obtem o CEP*/
 
						cd_cep_pagador_w	:= substr(obter_dados_pf_pj(cd_pessoa_fisica_pagador_w,cd_cgc_pagador_w,'CEP'),1,15);
					end if;
					 
					if (cd_cep_pagador_w IS NOT NULL AND cd_cep_pagador_w::text <> '') then /*Se tiver CEP, compara com o cep da regra*/
 
				 
						if	not(somente_numero(cd_cep_pagador_w) between somente_numero(coalesce(cd_cep_inicial_w,cd_cep_pagador_w)) and somente_numero(coalesce(cd_cep_final_w,cd_cep_pagador_w))) then 
							ie_gera_w := 'N';
						end if;
				 
					end if;
					 
				end if;
				 
				if (ie_gera_w = 'S') then 
					nr_vetor_w					:= nr_vetor_w + 1;
					vetor_titulo_receber_w[nr_vetor_w].nr_titulo	:= nr_titulo_w;
					 
					vl_saldo_titulo_total_w		:= vl_saldo_titulo_total_w + vl_saldo_titulo_w;
					qt_titulo_w					:= qt_titulo_w + 1;					
				end if;
				end;
			end loop;
			close c_titulos;
 
			for w in 1..vetor_titulo_receber_w.count loop 
				begin 
				nr_seq_conta_banco_tit_w	:= nr_seq_conta_banco_w;
				 
				if (coalesce(ie_banco_contrato_w,'N')	= 'S') then 
 
					select	max(coalesce(a.nr_seq_conta_banco_deb_aut,a.nr_seq_conta_banco)) 
					into STRICT	nr_seq_conta_banco_tit_w 
					from	pls_contrato_pagador_fin a, 
						pls_contrato_pagador b, 
						pls_mensalidade c, 
						titulo_receber d 
					where	b.nr_sequencia		= a.nr_seq_pagador 
					and	b.ie_tipo_pagador	= 'P' 
					and	c.nr_seq_pagador	= b.nr_sequencia 
					and	d.nr_seq_mensalidade	= c.nr_sequencia 
					and	d.nr_titulo		= vetor_titulo_receber_w[w].nr_titulo;
 
					if (coalesce(nr_seq_conta_banco_tit_w::text, '') = '') then 
 
						select	max(coalesce(a.nr_seq_conta_banco_deb_aut,a.nr_seq_conta_banco)) 
						into STRICT	nr_seq_conta_banco_tit_w 
						from	pls_contrato_pagador_fin a, 
							pls_mensalidade c, 
							titulo_receber d 
						where	c.nr_seq_pagador_fin	= a.nr_sequencia 
						and	d.nr_seq_mensalidade	= c.nr_sequencia 
						and	d.nr_titulo		= vetor_titulo_receber_w[w].nr_titulo;
 
					end if;
 
				end if;
				 
				if (nr_seq_conta_banco_ant_w <> nr_seq_conta_banco_tit_w) or (coalesce(nr_seq_conta_banco_ant_w::text, '') = '') then 
					qt_distribuicao_w	:= 0;
					end if;
				 
				if (qt_distribuicao_w = 0) then 
					select	nextval('distribuicao_receita_seq') 
					into STRICT	nr_seq_dist_receita_w 
					;
					 
					insert into distribuicao_receita(nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_lote, 
						nr_seq_conta_banco, 
						nr_seq_forma_cobranca) 
					values (nr_seq_dist_receita_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_seq_lote_p, 
						nr_seq_conta_banco_tit_w, 
						nr_seq_forma_cobranca_w);
				end if;
					 
				insert into titulo_receber_dist_rec(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					nr_seq_dist_rec, 
					nr_titulo) 
				values (nextval('titulo_receber_dist_rec_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					nr_seq_dist_receita_w, 
					vetor_titulo_receber_w[w].nr_titulo);
 
				qt_distribuicao_w	:= qt_distribuicao_w + 1;
 
				if (qt_distribuicao_w = 25000) then 
					qt_distribuicao_w	:= 0;
					nr_seq_dist_receita_w	:= null;
				end if;
 
				nr_seq_conta_banco_ant_w	:= nr_seq_conta_banco_tit_w;
				end;
				end loop;
			end;
		end loop;
		 
		close c_criterio_dist;
		end;
	end loop;
	close c_lote_mensalidade;
end if;
 
update	lote_distribuicao_receita 
set	dt_distribuicao	= clock_timestamp() 
where	nr_sequencia	= nr_seq_lote_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE distribuir_receita_bancaria ( nr_seq_lote_p bigint, nr_seq_regra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

