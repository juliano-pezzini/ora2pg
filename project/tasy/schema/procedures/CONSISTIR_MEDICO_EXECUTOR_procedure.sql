-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_medico_executor (nr_interno_conta_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_setor_atendimento_w		integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_atendimento_w		smallint;
vl_medico_w			double precision;
ie_responsavel_credito_w		varchar(5);
cd_medico_executor_w		varchar(10);
ie_medico_executor_w		varchar(2);
cd_cgc_w			varchar(14);
ie_coluna_soma_w			varchar(1);
ie_repassa_medico_w		varchar(1) := '0';
cd_medico_regra_w		varchar(10);
nr_seq_exame_w			bigint;
cd_pessoa_fisica_w		varchar(10);
dt_procedimento_w	timestamp;
nr_seq_classificacao_w		bigint;
nr_prescricao_w			bigint;
nr_sequencia_prescricao_w	integer;
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);
cd_setor_prescricao_w		integer;
nr_seq_proc_interno_w		procedimento_paciente.nr_seq_proc_interno%type;
ds_falta_informar_me_w		varchar(255);
ds_proc_nao_pode_ter_me_w	varchar(255);

c01 CURSOR FOR
SELECT	a.cd_estabelecimento,
	b.cd_convenio,
	b.cd_setor_atendimento,
	b.cd_procedimento,
	b.ie_origem_proced,
	c.ie_tipo_atendimento,
	b.vl_medico,
	b.ie_responsavel_credito,
	b.cd_medico_executor,
	b.nr_seq_exame,
	b.dt_procedimento,
	c.nr_seq_classificacao,
	b.nr_prescricao,
	b.nr_sequencia_prescricao,
	b.nr_seq_proc_interno
from	atendimento_paciente c,
	conta_paciente a,
	procedimento_paciente b
where	b.nr_interno_conta	= nr_interno_conta_p
and	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_atendimento	= c.nr_atendimento
and	coalesce(b.cd_motivo_exc_conta::text, '') = '';
	


BEGIN

open c01;
loop
fetch c01 into
	cd_estabelecimento_w,
	cd_convenio_w,
	cd_setor_atendimento_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_tipo_atendimento_w,
	vl_medico_w,
	ie_responsavel_credito_w,
	cd_medico_executor_w,
	nr_seq_exame_w,
	dt_procedimento_w,
	nr_seq_classificacao_w,
	nr_prescricao_w,
	nr_sequencia_prescricao_w,
	nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

	ie_coluna_soma_w		:= '0';
	ie_repassa_medico_w		:= '0';
	if (vl_medico_w	> 0) then

		select	coalesce(max(ie_coluna_soma), '0'),
			coalesce(max(ie_repassa_medico),'0')
		into STRICT	ie_coluna_soma_w,
			ie_repassa_medico_w
		from	regra_honorario
		where	cd_regra	= ie_responsavel_credito_w;

	end if;

	if (coalesce(cd_medico_executor_w::text, '') = '') and (coalesce(ie_repassa_medico_w, '0') = 'S') and (coalesce(ds_falta_informar_me_w::text, '') = '')	then
		ds_falta_informar_me_w := '13'||'('||WHEB_MENSAGEM_PCK.get_texto(281082)||to_char(cd_procedimento_w)||') ';
	end if;
	
	if (coalesce(nr_prescricao_w,0) > 0) then
		
		select	max(cd_setor_atendimento)
		into STRICT	cd_setor_prescricao_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_w;
		
		if (coalesce(nr_sequencia_prescricao_w,0) > 0) then
			select	max(ie_origem_inf),
				max(cd_cgc_laboratorio)
			into STRICT	ie_origem_inf_w,
				cd_cgc_laboratorio_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_sequencia_prescricao_w;
		end if;
		
	end if;

	SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_regra_w, cd_pessoa_fisica_w, null, dt_procedimento_w, nr_seq_classificacao_w, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_regra_w, cd_pessoa_fisica_w;

	if (coalesce(ie_medico_executor_w,'0') = 'N')	and (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '')	and (coalesce(ds_proc_nao_pode_ter_me_w::text, '') = '')	then
		ds_proc_nao_pode_ter_me_w := '37'||'('||WHEB_MENSAGEM_PCK.get_texto(281082)||to_char(cd_procedimento_w)||') ';
	elsif (coalesce(ie_medico_executor_w,'0') = 'X') and (coalesce(cd_medico_executor_w::text, '') = '') and (ds_falta_informar_me_w = '')	then
		ds_falta_informar_me_w	:= '13'||'('||WHEB_MENSAGEM_PCK.get_texto(281082)||to_char(cd_procedimento_w)||') ';
	end if;
	
	if (ds_falta_informar_me_w IS NOT NULL AND ds_falta_informar_me_w::text <> '') and (ds_proc_nao_pode_ter_me_w IS NOT NULL AND ds_proc_nao_pode_ter_me_w::text <> '') then
		exit;
	end if;	

end loop;
close c01;

ds_erro_p			:= ds_falta_informar_me_w || ds_proc_nao_pode_ter_me_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_medico_executor (nr_interno_conta_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

