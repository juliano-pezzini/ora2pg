-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_cruz_pessoa_fisica (nr_prontuario_p text, nm_pessoa_fisica_p text, nm_pessoa_pai_p text, nm_pessoa_mae_p text, nm_conjuge_p text, dt_nascimento_p timestamp, ie_sexo_p text, nr_identidade_p text, nr_cpf_p text, nr_telefone_p text, ds_endereco_p text, ds_bairro_p text, ds_cidade_p text, ds_estado_p text, ds_end_com_p text, ds_bairro_com_p text, ds_cidade_com_p text, ds_estado_com_p text, ds_cep_com_p text, nr_fone_com_p text, nr_celular_p text, cd_pessoa_fisica_p INOUT text) AS $body$
DECLARE


cd_pessoa_fisica_w		varchar(10);
nm_pessoa_fisica_w		varchar(40);
dt_nascimento_w			timestamp;
ie_sexo_w			varchar(01);
nr_identidade_w			varchar(15);
nr_cpf_w			varchar(11);
ds_endereco_w			varchar(100);
cd_cep_w			varchar(09);
nr_endereco_w			integer;
ds_complemento_w		varchar(40);
ds_bairro_w			varchar(40);
ds_municipio_w			varchar(40);
sg_estado_w			varchar(02);
cd_municipio_ibge_w		varchar(10);
nr_telefone_w			varchar(15);
nm_pai_w			varchar(40);
nm_mae_w			varchar(40);
nm_conjuge_w			varchar(40);
ds_end_com_w			varchar(40);
ds_bairro_com_w			varchar(40);
ds_cidade_com_w			varchar(40);
sg_estado_com_w			varchar(02);
cd_cep_com_w			varchar(09);
nr_fone_com_w			varchar(15);
nr_ramal_w			varchar(05);
nr_contador_w			bigint;
cd_municipio_sus_w		varchar(10);
nr_seq_cor_w			bigint;
ie_estado_civil_w		varchar(05);
cd_nacionalidade_w		varchar(08);
ie_grau_instrucao_w		bigint;
cd_religiao_w			bigint;
nr_prontuario_w			varchar(30);
nr_pac_w			bigint;
qt_nacional_w			varchar(08);



BEGIN

nr_prontuario_w	:= somente_numero(nr_prontuario_p);

select	nextval('pessoa_fisica_seq')
into STRICT	cd_pessoa_fisica_w
;

select count(*)
into STRICT	nr_pac_w
from	pessoa_fisica
where	nr_prontuario	= nr_prontuario_p;

if (nr_pac_w > 0) then
	nr_prontuario_w	:= null;
end if;

insert	into pessoa_fisica(cd_pessoa_fisica,
	nm_pessoa_fisica,
	ie_tipo_pessoa,
	dt_atualizacao,
	nm_usuario,
	dt_nascimento,
	ie_sexo,
	nr_cpf,
	nr_identidade,
	nr_prontuario)
values (cd_pessoa_fisica_w,
	substr(nm_pessoa_fisica_P,1,60),
	2, clock_timestamp(), 'IMPORTCRUZ',
	dt_nascimento_p,
	substr(ie_sexo_p,1,1),
	substr(nr_cpf_p,1,11),
	substr(nr_identidade_p,1,15),
	nr_prontuario_w);


if (ds_endereco_p IS NOT NULL AND ds_endereco_p::text <> '') then

	insert 	into compl_pessoa_fisica(cd_pessoa_fisica,
		nr_sequencia,
		ie_tipo_complemento,
		dt_atualizacao,
		nm_usuario,
		ds_endereco,
		ds_bairro,
		ds_municipio,
		sg_estado,
		nr_telefone)
	values (cd_pessoa_fisica_w,
		1,
		1,
		clock_timestamp(),
		'IMPORTCRUZ',
		substr(ds_endereco_p,1,40),
		substr(ds_bairro_p,1,40),
		substr(ds_cidade_p,1,40),
		substr(ds_estado_p,1,2),
		somente_numero(substr(nr_telefone_p,1,15)));

end if;


if (ds_end_com_p IS NOT NULL AND ds_end_com_p::text <> '') then

	insert 	into compl_pessoa_fisica(cd_pessoa_fisica,
		nr_sequencia,
		ie_tipo_complemento,
		dt_atualizacao,
		nm_usuario,
		ds_endereco,
		cd_cep,
		ds_bairro,
		ds_municipio,
		sg_estado,
		nr_telefone)
	values (cd_pessoa_fisica_w,
		2,
		2,
		clock_timestamp(),
		'IMPORTCRUZ',
		substr(ds_end_com_p,1,40),
		somente_numero(ds_cep_com_p),
		substr(ds_bairro_com_p,1,40),
		substr(ds_cidade_com_p,1,40),
		substr(ds_estado_com_p,1,2),
		somente_numero(substr(nr_fone_com_p,1,15)));
end if;


if (nm_pessoa_pai_p IS NOT NULL AND nm_pessoa_pai_p::text <> '') then

	insert 	into compl_pessoa_fisica(cd_pessoa_fisica,
		nr_sequencia,
		ie_tipo_complemento,
		dt_atualizacao,
		nm_usuario,
		nm_contato)
	values (cd_pessoa_fisica_w,
		3, 4, clock_timestamp(), 'IMPORTCRUZ',
		substr(nm_pessoa_pai_p,1,60));
end if;


if (nm_pessoa_mae_p IS NOT NULL AND nm_pessoa_mae_p::text <> '') then

	insert 	into compl_pessoa_fisica(cd_pessoa_fisica,
		nr_sequencia,
		ie_tipo_complemento,
		dt_atualizacao,
		nm_usuario,
		nm_contato)
	values (cd_pessoa_fisica_w,
		4, 5, clock_timestamp(), 'IMPORTCRUZ',
		substr(nm_pessoa_mae_p,1,60));
end if;

if (nm_conjuge_p IS NOT NULL AND nm_conjuge_p::text <> '') then

	insert 	into compl_pessoa_fisica(cd_pessoa_fisica,
		nr_sequencia,
		ie_tipo_complemento,
		dt_atualizacao,
		nm_usuario,
		nm_contato)
	values (cd_pessoa_fisica_w,
		5, 6, clock_timestamp(), 'IMPORTCRUZ',
		substr(nm_conjuge_p,1,60));
end if;

commit;

cd_pessoa_fisica_p	:= cd_pessoa_fisica_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_cruz_pessoa_fisica (nr_prontuario_p text, nm_pessoa_fisica_p text, nm_pessoa_pai_p text, nm_pessoa_mae_p text, nm_conjuge_p text, dt_nascimento_p timestamp, ie_sexo_p text, nr_identidade_p text, nr_cpf_p text, nr_telefone_p text, ds_endereco_p text, ds_bairro_p text, ds_cidade_p text, ds_estado_p text, ds_end_com_p text, ds_bairro_com_p text, ds_cidade_com_p text, ds_estado_com_p text, ds_cep_com_p text, nr_fone_com_p text, nr_celular_p text, cd_pessoa_fisica_p INOUT text) FROM PUBLIC;

