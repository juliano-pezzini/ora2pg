-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_devolucao_inspecao ( nr_seq_nota_p bigint, nm_usuario_p text, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_nota_fiscal_w			nota_fiscal.nr_nota_fiscal%type;
nr_nota_fiscal_entrada_w		nota_fiscal.nr_nota_fiscal%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
dt_entrada_saida_w		nota_fiscal.dt_entrada_saida%type;
dt_emissao_w			nota_fiscal.dt_emissao%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_cgc_w			pessoa_juridica.cd_cgc%type;
cd_cgc_emitente_w		pessoa_juridica.cd_cgc%type;
cd_cgc_estabelecimento_w		pessoa_juridica.cd_cgc%type;
cd_oper_dev_insp_w		parametro_compras.cd_oper_dev_insp%type;
cd_mot_nf_dev_insp_w		parametro_compras.cd_mot_nf_dev_insp%type;
cd_natureza_operacao_w		natureza_operacao.cd_natureza_operacao%type;
ie_param_371_w			funcao_param_usuario.vl_parametro%type;
ie_ratear_ipi_nf_devol_w		operacao_nota.ie_ratear_ipi_nf_devol%type;
ie_somar_ipi_w			varchar(1) := 'N';
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_sequencia_nf_w			nota_fiscal.nr_sequencia_nf%type;
nr_sequencia_w			nota_fiscal.nr_sequencia%type;
ds_motivo_dev_w			motivo_devolucao_nota.ds_motivo%type;
ie_lote_fornec_nf_dev_w		parametro_compras.ie_lote_fornec_nf_dev%type;
ds_obs_padrao_nf_dev_w		parametro_compras.ds_obs_padrao_nf_dev%type;
cd_condicao_pagto_w		condicao_pagamento.cd_condicao_pagamento%type;
cd_setor_atendimento_w		setor_atendimento.cd_setor_atendimento%type;
nr_item_nf_w			nota_fiscal_item.nr_item_nf%type;
nr_item_nf_ww			nota_fiscal_item.nr_item_nf%type;
vl_ipi_w				nota_fiscal_item_trib.vl_tributo%type;
qt_item_nf_w			nota_fiscal_item.qt_item_nf%type;
vl_unitario_item_nf_w		nota_fiscal_item.vl_unitario_item_nf%type;
vl_total_item_nf_w			nota_fiscal_item.vl_total_item_nf%type;
cd_material_w			material.cd_material%type;
cd_centro_custo_w			centro_custo.cd_centro_custo%type;
nr_seq_conta_financ_w		conta_financeira.cd_conta_financ%type := null;
nr_seq_proj_rec_w			projeto_recurso.nr_sequencia%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
cd_perfil_ativo_w			perfil.cd_perfil%type;
ie_tipo_nota_w			nota_fiscal.ie_tipo_nota%type;
nr_seq_lote_item_devol_w		nota_fiscal_item_lote.nr_sequencia%type;
nr_seq_lote_item_w			nota_fiscal_item_lote.nr_sequencia%type;
cd_lote_fabricacao_w		nota_fiscal_item.cd_lote_fabricacao%type;
dt_validade_w			nota_fiscal_item.dt_validade%type;
ie_indeterminado_w			nota_fiscal_item.ie_indeterminado%type;
qt_item_estoque_w			nota_fiscal_item.qt_item_estoque%type;
qt_conv_compra_estoque_w		material.qt_conv_compra_estoque%type;
qt_gerar_w			nota_fiscal_item.qt_item_estoque%type;
nr_seq_marca_w			marca.nr_sequencia%type;
ie_gera_w			varchar(1);
ie_quantidade_w			varchar(1);
ie_gerar_desdobrado_w		varchar(1);
qt_registro_w			bigint;
nr_danfe_referencia_w		nota_fiscal.nr_danfe_referencia%type;
ie_agrupar_lote_w 		regra_nf_lote_fornec.ie_agrupar_lote%type;

c01 CURSOR FOR
SELECT	distinct a.nr_seq_item_nf
from	inspecao_recebimento a
where	nr_seq_nota_fiscal = nr_seq_nota_p
and exists (
	SELECT	1
	from 	inspecao_divergencia x
	where	x.nr_seq_inspecao = a.nr_sequencia
	and	x.ie_motivo_aceite = 'D');


C02 CURSOR FOR
SELECT	nr_sequencia
from	nota_fiscal_item_lote
where	nr_seq_nota = nr_seq_nota_p
and	nr_item_nf = nr_item_nf_ww;

c03 CURSOR FOR
SELECT	nr_item_nf,
	cd_material,
	cd_lote_fabricacao,
	dt_validade,
	ie_indeterminado,
	qt_item_nf,
	qt_item_estoque,
	dividir(qt_item_estoque,qt_item_nf),
	nr_seq_marca
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_w
and	(cd_lote_fabricacao IS NOT NULL AND cd_lote_fabricacao::text <> '');	


BEGIN

cd_perfil_ativo_w	:= obter_perfil_ativo;

select	nr_nota_fiscal,
	cd_estabelecimento,
	cd_pessoa_fisica,
	cd_cgc,
	dt_emissao,
	dt_entrada_saida,
	cd_condicao_pagamento,
	cd_setor_digitacao,
	nr_danfe
into STRICT	nr_nota_fiscal_entrada_w,
	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	dt_emissao_w,
	dt_entrada_saida_w,
	cd_condicao_pagto_w,
	cd_setor_atendimento_w,
	nr_danfe_referencia_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_p;

select	cd_cgc
into STRICT	cd_cgc_estabelecimento_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

cd_cgc_emitente_w	:= coalesce(cd_cgc_estabelecimento_w, cd_cgc_w);

select	cd_oper_dev_insp,
	cd_mot_nf_dev_insp
into STRICT	cd_oper_dev_insp_w,
	cd_mot_nf_dev_insp_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

if (cd_oper_dev_insp_w > 0) then

	select	coalesce(max(cd_natureza_operacao),0),
		coalesce(max(ie_ratear_ipi_nf_devol),'S')
	into STRICT	cd_natureza_operacao_w,
		ie_ratear_ipi_nf_devol_w
	from	operacao_nota
	where	cd_operacao_nf = cd_oper_dev_insp_w;
	
	select	max(cd_serie_nf)
	into STRICT	cd_serie_nf_w
	from	operacao_nota_serie
	where	cd_operacao_nf = cd_oper_dev_insp_w;

end if;

if (cd_serie_nf_w IS NOT NULL AND cd_serie_nf_w::text <> '') and (cd_oper_dev_insp_w > 0) and (cd_oper_dev_insp_w > 0) and (cd_natureza_operacao_w > 0) then

	ie_tipo_nota_w		:= coalesce((obter_valor_param_usuario(40, 335, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w)), 'SD');
	ie_param_371_w		:= coalesce((obter_valor_param_usuario(40, 371, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w)), 'N');

	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
		ie_tipo_nota_w	:= 'SF';
	end if;

	if (ie_ratear_ipi_nf_devol_w = 'S') and (ie_param_371_w = 'S') then
		ie_somar_ipi_w := 'S';
	end if;
	
	select	coalesce(max(nr_ultima_nf),0) + 1
	into STRICT 	nr_nota_fiscal_w
	from	serie_nota_fiscal
	where	cd_serie_nf 		= cd_serie_nf_w
	and 	cd_estabelecimento 	= cd_estabelecimento_w;	

	select (coalesce(max(nr_sequencia_nf),0)+1)
	into STRICT	nr_sequencia_nf_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estabelecimento_w
	and	cd_cgc_emitente	   = cd_cgc_emitente_w
	and	nr_nota_fiscal     = nr_nota_fiscal_w
	and	cd_serie_nf        = cd_serie_nf_w;

	select	nextval('nota_fiscal_seq')
	into STRICT	nr_sequencia_w
	;

	select	count(*)
	into STRICT	qt_registro_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estabelecimento_w
	and	cd_cgc_emitente = cd_cgc_emitente_w
	and	cd_serie_nf = cd_serie_nf_w
	and	nr_nota_fiscal = nr_nota_fiscal_w
	and	nr_sequencia_nf = nr_sequencia_nf_w
	and	ie_situacao = '1';

	if (qt_registro_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(328306); /*Erro ao gerar a nota de devolucao: Ja existe uma nota fiscal cadastrada com esse numero e serie para este fornecedor.*/
	end if;

	select	coalesce(ds_motivo,'')
	into STRICT	ds_motivo_dev_w
	from	motivo_devolucao_nota
	where	nr_sequencia = cd_mot_nf_dev_insp_w;

	select	ie_lote_fornec_nf_dev,
		substr(	replace(
			replace(
			replace(
			replace(			
			replace(ds_obs_padrao_nf_dev,
				'@nr_nota_fiscal', nr_nota_fiscal_w),
				'@dt_emissao', coalesce(dt_emissao_w, trunc(clock_timestamp()))),
				'@dt_entrada_saida', coalesce(dt_entrada_saida_w, clock_timestamp())),
				'@ds_motivo_dev', ds_motivo_dev_w),
				'@nr_danfe_referencia', nr_danfe_referencia_w),1,4000)							
	into STRICT	ie_lote_fornec_nf_dev_w,
		ds_obs_padrao_nf_dev_w	
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_w;

	insert into nota_fiscal(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_condicao_pagamento,
		cd_cgc,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		cd_natureza_operacao,
		vl_desconto_rateio,
		ie_situacao,
		nr_lote_contabil,
		nr_sequencia,
		cd_pessoa_fisica,
		nr_seq_motivo_devol,
		ie_tipo_nota,
		nr_sequencia_ref,
		cd_setor_digitacao,
		ds_observacao)
	values ( cd_estabelecimento_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		cd_oper_dev_insp_w,
		trunc(clock_timestamp()),
		clock_timestamp(),
		'1',
		'0',
		0,
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		cd_condicao_pagto_w,
		cd_cgc_w,
		0,
		0,
		0,
		0,
		0,
		cd_natureza_operacao_w,
		0,
		'1',
		0,
		nr_sequencia_w,
		cd_pessoa_fisica_w,
		cd_mot_nf_dev_insp_w,
		ie_tipo_nota_w,
		nr_seq_nota_p,
		cd_setor_atendimento_w,
		coalesce(ds_obs_padrao_nf_dev_w, wheb_mensagem_pck.get_Texto(310531, 'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W)));
						/*Nota Fiscal de origem: #@NR_NOTA_FISCAL_W#@*/

	open C01;
	loop
	fetch C01 into	
		nr_item_nf_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	cd_material,
			qt_item_nf,
			vl_unitario_item_nf,
			nr_seq_proj_rec,
			cd_local_estoque,
			vl_total_item_nf
		into STRICT	cd_material_w,
			qt_item_nf_w,
			vl_unitario_item_nf_w,
			nr_seq_proj_rec_w,
			cd_local_estoque_w,
			vl_total_item_nf_w
		from	nota_fiscal_item
		where	nr_sequencia = nr_seq_nota_p
		and	nr_item_nf = nr_item_nf_w;

		if (ie_somar_ipi_w = 'S') then
			
			select  coalesce(sum(vl_tributo),0)
			into STRICT	vl_ipi_w
			from	nota_fiscal_item_trib
			where	nr_sequencia = nr_seq_nota_p
			and	nr_item_nf = nr_item_nf_w
			and	substr(obter_tipo_tributo(cd_tributo),1,255) = 'IPI';
			
			vl_ipi_w		:= dividir(vl_ipi_w, qt_item_nf_w);
			
			vl_unitario_item_nf_w	:= vl_unitario_item_nf_w + vl_ipi_w;
			vl_total_item_nf_w	:= vl_total_item_nf_w + (qt_item_nf_w * vl_ipi_w);
		end if;
		
		
		
		/*Ajuste da conta financeira*/

		nr_seq_conta_financ_w := obter_conta_financeira('S', cd_estabelecimento_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financ_w, null, cd_oper_dev_insp_w, null, null, null, nr_seq_proj_rec_w, null, cd_pessoa_fisica_w, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);

		if (nr_seq_conta_financ_w = 0) then
			nr_seq_conta_financ_w := null;
		end if;
		
		select	coalesce(max(nr_item_nf),0) + 1
		into STRICT	nr_item_nf_ww
		from	nota_fiscal_item
		where	nr_sequencia = nr_sequencia_w;
		
		insert into nota_fiscal_item(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_natureza_operacao,
			qt_item_nf,
			vl_unitario_item_nf,
			vl_total_item_nf,
			dt_atualizacao,
			nm_usuario,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_material,
			cd_procedimento,
			cd_setor_atendimento,
			cd_conta,
			cd_local_estoque,
			ds_observacao,
			qt_peso_bruto,
			qt_peso_liquido,
			cd_unidade_medida_compra,
			qt_item_estoque,
			cd_unidade_medida_estoque,
			cd_lote_fabricacao,
			dt_validade,
			dt_atualizacao_estoque,
			cd_conta_contabil,
			vl_desconto_rateio,
			vl_seguro,
			cd_centro_custo,
			cd_material_estoque,
			ie_origem_proced,
			nr_ordem_compra,
			nr_item_oci,
			nr_sequencia,
			vl_liquido,
			nr_seq_ordem_serv,
			nr_seq_lote_fornec,
			nr_seq_proj_rec,
			dt_inicio_garantia,
			dt_fim_garantia,
			dt_entrega_ordem,
			ds_complemento,
			cd_imobilizado,
			nr_seq_conta_financ)
		SELECT	cd_estabelecimento_w,
			cd_cgc_emitente_w,
			cd_serie_nf_w,
			nr_nota_fiscal_w,
			nr_sequencia_nf_w,
			nr_item_nf_ww,
			cd_natureza_operacao_w,
			qt_item_nf,
			vl_unitario_item_nf_w,
			vl_total_item_nf_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_material,
			cd_procedimento,
			cd_setor_atendimento,
			cd_conta,
			cd_local_estoque,
			substr(wheb_mensagem_pck.get_Texto(310531, 'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W) || chr(13) || chr(10) || ds_observacao, 1, 255),
			qt_peso_bruto,
			qt_peso_liquido,
			cd_unidade_medida_compra,
			qt_item_estoque,
			cd_unidade_medida_estoque,
			cd_lote_fabricacao,
			dt_validade,
			dt_atualizacao_estoque,
			cd_conta_contabil,
			vl_desconto_rateio,
			vl_seguro,
			cd_centro_custo,
			cd_material_estoque,
			ie_origem_proced,
			nr_ordem_compra,
			nr_item_oci,
			nr_sequencia_w,
			vl_total_item_nf_w,
			nr_seq_ordem_serv,
			nr_seq_lote_fornec,
			nr_seq_proj_rec,
			dt_inicio_garantia,
			dt_fim_garantia,
			dt_entrega_ordem,
			ds_complemento,
			cd_imobilizado,
			nr_seq_conta_financ_w
		from	nota_fiscal_item
		where	nr_sequencia = nr_seq_nota_p
		and	nr_item_nf = nr_item_nf_w;
		
		CALL Gerar_Imposto_Nf_Item(nr_sequencia_w, nr_item_nf_ww, nm_usuario_p, 0, null, 'N');
		
		open C02;
		loop
		fetch C02 into
			nr_seq_lote_item_devol_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			select	nextval('nota_fiscal_item_lote_seq')
			into STRICT	nr_seq_lote_item_w
			;

			insert into nota_fiscal_item_lote(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_nota,
				nr_item_nf,
				dt_validade,
				qt_material,
				cd_lote_fabricacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_marca,
				nr_seq_lote_fornec,
				cd_barra_material,
				ds_barras,
				ie_indeterminado,
				qt_compra,
				dt_fabricacao)
			SELECT	nr_seq_lote_item_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_w,
				nr_item_nf_ww,
				dt_validade,
				qt_material,
				cd_lote_fabricacao,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_marca,
				nr_seq_lote_fornec,
				cd_barra_material,
				ds_barras,
				ie_indeterminado,
				qt_compra,
				dt_fabricacao
			from	nota_fiscal_item_lote
			where	nr_sequencia = nr_seq_lote_item_devol_w;

			end;
		end loop;
		close C02;		
		
		end;
	end loop;
	close C01;

	CALL gerar_historico_nota_fiscal(nr_sequencia_w, nm_usuario_p, '3', wheb_mensagem_pck.get_Texto(310537, 'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W)); /*Devolucao a partir da nota fiscal #@NR_NOTA_FISCAL_W#@*/
	CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);
	CALL Gerar_vencimento_nota_fiscal(nr_sequencia_w,nm_usuario_p);
	CALL gerar_imposto_nf(nr_sequencia_w, nm_usuario_p, 0, 0, 'N', 'A');

	if (ie_lote_fornec_nf_dev_w = 'S') then
	
		open C03;
		loop
		fetch C03 into	
			nr_item_nf_w,
			cd_material_w,
			cd_lote_fabricacao_w,
			dt_validade_w,
			ie_indeterminado_w,
			qt_item_nf_w,
			qt_item_estoque_w,
			qt_conv_compra_estoque_w,
			nr_seq_marca_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
			SELECT * FROM obter_regra_nf_lote_fornec(cd_material_w, cd_estabelecimento_w, ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w, nr_seq_marca_w) INTO STRICT ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w;
			
			if (ie_gera_w in ('S','O')) then
								
				if (ie_quantidade_w = 'E') then
					qt_gerar_w	:= qt_item_estoque_w;
				else
					qt_gerar_w	:= dividir(qt_item_estoque_w,qt_conv_compra_estoque_w);
				end if;
			
				update	nota_fiscal_item
				set	cd_lote_fabricacao	= '',
					dt_validade		 = NULL,
					ie_indeterminado	= 'N'
				where	nr_sequencia		= nr_sequencia_w
				and	nr_item_nf		= nr_item_nf_w;
				
				select	nextval('nota_fiscal_item_lote_seq')
				into STRICT	nr_seq_lote_item_w
				;

				insert into nota_fiscal_item_lote(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_nota,
					nr_item_nf,
					dt_validade,
					qt_material,
					cd_lote_fabricacao,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_marca,			
					ie_indeterminado)
				values (	nr_seq_lote_item_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					nr_item_nf_w,
					dt_validade_w,
					qt_gerar_w,
					cd_lote_fabricacao_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_marca_w,
					ie_indeterminado_w);			
			end if;
			end;
		end loop;
		close C03;
	end if;
end if;

nr_sequencia_p := nr_sequencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_devolucao_inspecao ( nr_seq_nota_p bigint, nm_usuario_p text, nr_sequencia_p INOUT bigint) FROM PUBLIC;

