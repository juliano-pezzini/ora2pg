-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplica_tabela_amb2 (cd_edicao_origem_p bigint, cd_edicao_destino_p bigint, cd_moeda_destino_p bigint, cd_area_restrita_p bigint, cd_espec_restrita_p bigint, cd_grupo_restrito_p bigint, ie_indice_p bigint, nm_usuario_p text, ie_substituir_p text, dt_vigencia_origem_p timestamp, dt_vigencia_p timestamp, ie_ultima_vigencia_p text, ie_arredondamento_p text, qt_casas_decimais_p bigint, ie_sem_final_vig_p text) AS $body$
DECLARE

 
cd_procedimento_w		bigint;
vl_procedimento_w		double precision;
cd_moeda_w			smallint;
vl_custo_operacional_w		double precision;
vl_anestesista_w		double precision;
vl_medico_w			double precision;
vl_filme_w			double precision;
qt_filme_w			double precision;
nr_auxiliares_w			smallint;
nr_incidencia_w			smallint;
qt_porte_anestesico_w		smallint;
ie_origem_proced_w		bigint;
vl_auxiliares_w			double precision;
ds_erro_w			varchar(255);
dt_inicio_vigencia_w		timestamp;
nr_sequencia_w			bigint;
nr_sequencia_nova_w		bigint;

dt_vigencia_w			timestamp;
ie_deletar_tudo_w		varchar(2);
ie_indice_w			double precision;

c01 CURSOR FOR 
 
SELECT	a.nr_sequencia, 
	a.cd_procedimento, 
	a.vl_procedimento, 
	a.cd_moeda, 
	a.vl_custo_operacional, 
	a.vl_anestesista, 
	a.vl_medico, 
	a.vl_filme, 
	a.qt_filme, 
	a.nr_auxiliares, 
	a.nr_incidencia, 
	a.qt_porte_anestesico, 
	a.ie_origem_proced, 
	a.vl_auxiliares, 
	a.dt_inicio_vigencia 
from	estrutura_procedimento_v b, 
	preco_amb a 
where	a.cd_edicao_amb	= cd_edicao_origem_p 
and	a.cd_procedimento = b.cd_procedimento 
and	a.ie_origem_proced = b.ie_origem_proced 
and	b.cd_area_procedimento = coalesce(cd_area_restrita_p,b.cd_area_procedimento) 
and	b.cd_especialidade = coalesce(cd_espec_restrita_p,b.cd_especialidade) 
and	b.cd_grupo_proc	= coalesce(cd_grupo_restrito_p,b.cd_grupo_proc) 
and	coalesce(a.dt_inicio_vigencia, clock_timestamp()) = coalesce(dt_vigencia_origem_p, coalesce(a.dt_inicio_vigencia, clock_timestamp())) 
and	ie_ultima_vigencia_p = 'N' 
and	((coalesce(ie_sem_final_vig_p,'N') = 'N') or (coalesce(a.dt_final_vigencia::text, '') = '')) 
and	not exists (SELECT 1 from preco_amb x 
	where	x.cd_edicao_amb	= cd_edicao_destino_p 
	and	x.cd_procedimento = a.cd_procedimento 
	and	x.dt_inicio_vigencia = a.dt_inicio_vigencia 
	and	x.dt_inicio_vigencia = dt_vigencia_p 
	and	coalesce(ie_substituir_p,'N') = 'N') 
and	exists (select 1 from edicao_amb y 
	where y.cd_edicao_amb = cd_edicao_destino_p) 

union
 
select	a.nr_sequencia, 
	a.cd_procedimento, 
	a.vl_procedimento, 
	a.cd_moeda, 
	a.vl_custo_operacional, 
	a.vl_anestesista, 
	a.vl_medico, 
	a.vl_filme, 
	a.qt_filme, 
	a.nr_auxiliares, 
	a.nr_incidencia, 
	a.qt_porte_anestesico, 
	a.ie_origem_proced, 
	a.vl_auxiliares, 
	a.dt_inicio_vigencia 
from	estrutura_procedimento_v b, 
	preco_amb a 
where	a.cd_edicao_amb	= cd_edicao_origem_p 
and	a.cd_procedimento = b.cd_procedimento 
and	a.ie_origem_proced = b.ie_origem_proced 
and	b.cd_area_procedimento = coalesce(cd_area_restrita_p,b.cd_area_procedimento) 
and	b.cd_especialidade = coalesce(cd_espec_restrita_p,b.cd_especialidade) 
and	b.cd_grupo_proc	= coalesce(cd_grupo_restrito_p,b.cd_grupo_proc) 
and	ie_ultima_vigencia_p = 'S' 
and	((coalesce(ie_sem_final_vig_p,'N') = 'N') or (coalesce(a.dt_final_vigencia::text, '') = '')) 
and 	dt_inicio_vigencia = 
		(select max(x.dt_inicio_vigencia) 
        from preco_amb x 
        where x.cd_edicao_amb = a.cd_edicao_amb 
        and  x.cd_procedimento = a.cd_procedimento 
        and  x.ie_origem_proced = a.ie_origem_proced) 
and	not exists ( 
	select 1 from preco_amb x 
	where	x.cd_edicao_amb	= cd_edicao_destino_p 
	and	x.cd_procedimento = a.cd_procedimento 
	and	x.dt_inicio_vigencia = a.dt_inicio_vigencia 
	and	x.dt_inicio_vigencia = dt_vigencia_p 
	and	coalesce(ie_substituir_p,'N') = 'N') 
and	exists (select 1 from edicao_amb y 
	where y.cd_edicao_amb		= cd_edicao_destino_p);


BEGIN 
 
ds_erro_w	:= '';
dt_vigencia_w	:= coalesce(dt_vigencia_p, clock_timestamp());
ie_deletar_tudo_w:= coalesce(obter_valor_param_usuario(obter_funcao_ativa,24,obter_perfil_ativo,nm_usuario_p,0),'S');
ie_indice_w	:= coalesce(ie_indice_p,1);
 
begin 
delete	from w_preco_simulacao 
where	nm_usuario = nm_usuario_p;
commit;
end;
 
open c01;
loop 
fetch c01 into 
	nr_sequencia_w, 
	cd_procedimento_w, 
	vl_procedimento_w, 
	cd_moeda_w, 
	vl_custo_operacional_w, 
	vl_anestesista_w, 
	vl_medico_w, 
	vl_filme_w, 
	qt_filme_w, 
	nr_auxiliares_w, 
	nr_incidencia_w, 
	qt_porte_anestesico_w, 
	ie_origem_proced_w, 
	vl_auxiliares_w, 
	dt_inicio_vigencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	if (ie_arredondamento_p = 'N') or (qt_casas_decimais_p = 0) then 
		vl_procedimento_w	:= vl_procedimento_w * ie_indice_w;
		vl_custo_operacional_w	:= vl_custo_operacional_w * ie_indice_w;
		vl_anestesista_w	:= vl_anestesista_w * ie_indice_w;
		vl_medico_w		:= vl_medico_w * ie_indice_w;
		vl_auxiliares_w		:= vl_auxiliares_w * ie_indice_w;
	elsif (ie_arredondamento_p = 'D') then 
		vl_procedimento_w	:= trunc(vl_procedimento_w * ie_indice_w,qt_casas_decimais_p);
		vl_custo_operacional_w	:= trunc(vl_custo_operacional_w * ie_indice_w,qt_casas_decimais_p);
		vl_anestesista_w	:= trunc(vl_anestesista_w * ie_indice_w,qt_casas_decimais_p);
		vl_medico_w		:= trunc(vl_medico_w * ie_indice_w,qt_casas_decimais_p);
		vl_auxiliares_w		:= trunc(vl_auxiliares_w * ie_indice_w,qt_casas_decimais_p);
	elsif (ie_arredondamento_p = 'P') then   
		vl_procedimento_w	:= round(vl_procedimento_w * ie_indice_w,qt_casas_decimais_p);
		vl_custo_operacional_w	:= round(vl_custo_operacional_w * ie_indice_w,qt_casas_decimais_p);
		vl_anestesista_w	:= round(vl_anestesista_w * ie_indice_w,qt_casas_decimais_p);
		vl_medico_w		:= round(vl_medico_w * ie_indice_w,qt_casas_decimais_p);
		vl_auxiliares_w		:= round(vl_auxiliares_w * ie_indice_w,qt_casas_decimais_p);
	end if;
 
	insert into w_preco_simulacao( 
		cd_procedimento, 
		cd_edicao_amb, 
		vl_procedimento, 
		vl_custo_operacional, 
		vl_anestesista, 
		vl_medico, 
		vl_filme, 
		qt_filme, 
		nr_auxiliares, 
		nr_incidencia, 
		qt_porte_anestesico, 
		ie_origem_proced, 
		vl_auxiliares, 
		nm_usuario) 
	values (	cd_procedimento_w, 
		cd_edicao_destino_p, 
		vl_procedimento_w, 
		vl_custo_operacional_w, 
		vl_anestesista_w, 
		vl_medico_w, 
		vl_filme_w, 
		qt_filme_w, 
		nr_auxiliares_w, 
		nr_incidencia_w, 
		qt_porte_anestesico_w, 
		ie_origem_proced_w, 
		vl_auxiliares_w, 
		nm_usuario_p);
	exception 
  	when others then 
		ds_erro_w := sqlerrm(SQLSTATE);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(177821,'CD_PROCEDIMENTO_W='||cd_procedimento_w || ';DS_ERRO_W=' || ds_erro_w);
	end;
end loop;
close c01;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplica_tabela_amb2 (cd_edicao_origem_p bigint, cd_edicao_destino_p bigint, cd_moeda_destino_p bigint, cd_area_restrita_p bigint, cd_espec_restrita_p bigint, cd_grupo_restrito_p bigint, ie_indice_p bigint, nm_usuario_p text, ie_substituir_p text, dt_vigencia_origem_p timestamp, dt_vigencia_p timestamp, ie_ultima_vigencia_p text, ie_arredondamento_p text, qt_casas_decimais_p bigint, ie_sem_final_vig_p text) FROM PUBLIC;

