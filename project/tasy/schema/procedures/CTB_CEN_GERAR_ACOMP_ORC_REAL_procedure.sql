-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_cen_gerar_acomp_orc_real ( cd_estabelecimento_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_classif_conta_p text, cd_classif_centro_p text, cd_conta_contabil_p text, cd_centro_custo_p text, qt_min_nivel_conta_p bigint, qt_max_nivel_conta_p bigint, qt_min_nivel_centro_p bigint, qt_max_nivel_centro_p bigint, nm_usuario_p text, ie_ordem_inicio_p text, ie_opcao_p bigint, nr_seq_cenario_p bigint) AS $body$
DECLARE


/* ie_ordem_inicio_p pode ser c(conta) ou e(centro) */

qt_commit_w					bigint;
cd_centro_custo_w				centro_custo.cd_centro_custo%type;
cd_centro_custo_ww				centro_custo.cd_centro_custo%type	:= 0;
cd_centro_ww					centro_custo.cd_centro_custo%type;
cd_conta_contabil_w				varchar(40);
cd_conta_contabil_ww				varchar(40)	:= '00000000';
cd_conta_ww					varchar(40);
cd_classif_w					varchar(4000);
cd_classif_ww					varchar(4000);
cd_classificacao_w					varchar(40);
cd_classificacao_ww				varchar(40);
cd_classif_conta_w					varchar(40);
cd_classif_centro_w				varchar(40);
cd_empresa_w					smallint;
ds_gerencial_w					varchar(255);
ds_centro_w					varchar(80);
ds_conta_w					varchar(255);
ie_gerar_w					varchar(1);
ie_pos_w						bigint;
nr_sequencia_w					bigint;
qt_nivel_max_w					smallint;
qt_nivel_min_w					smallint;
qt_nivel_2_w					smallint;
i						integer;
j						integer;
k						integer;
y						integer;
z						integer;
w						integer;
vl_saldo_atual_w					double precision;
vl_movimento_ww					double precision;
vl_orcado_cen_w					double precision;
dt_inicial_w					timestamp;
dt_final_w					timestamp;
qt_min_nivel_conta_w				bigint;
qt_max_nivel_conta_w				bigint;
qt_min_nivel_centro_w				bigint;
qt_max_nivel_centro_w				bigint;
qt_nivel_conta_w					bigint;
qt_nivel_centro_w					bigint;
ie_debito_credito_w					varchar(01);
ie_tipo_conta_w					varchar(01);
qt_reg_w						bigint;
ie_separador_centro_w				empresa.ie_sep_classif_centro%type;
ie_separador_conta_w				empresa.ie_sep_classif_conta_ctb%type;

c001 CURSOR FOR
SELECT	s.cd_conta_contabil,
	s.cd_centro_custo,
	SUM(coalesce(s.vl_movimento, 0)) vl_saldo_atual,
	e.ie_debito_credito,
	ctb_obter_nivel_classif_conta(c.cd_classificacao) qt_nivel_conta,
	ctb_obter_nivel_classif_conta(d.cd_classificacao) qt_nivel_centro,
	SUM(s.vl_movimento)
FROM	ctb_grupo_conta e,
	centro_custo d,
	conta_contabil c,
	ctb_saldo s,
	ctb_mes_ref r
WHERE	s.nr_seq_mes_ref		= r.nr_sequencia
AND	r.cd_empresa		= c.cd_empresa
AND	s.cd_conta_contabil	= c.cd_conta_contabil
AND	s.cd_centro_custo		= d.cd_centro_custo
AND	c.cd_grupo		= e.cd_grupo
AND	r.dt_referencia		BETWEEN dt_inicial_w  AND dt_final_w
AND	c.ie_tipo			<> 'T'
AND	e.ie_tipo 			IN ('R','C','D')
AND	s.cd_estabelecimento	= cd_estabelecimento_p
AND	c.cd_empresa		= cd_empresa_w
AND	(s.cd_centro_custo IS NOT NULL AND s.cd_centro_custo::text <> '')
GROUP BY s.cd_conta_contabil,
	s.cd_centro_custo,
	e.ie_debito_credito,
	ctb_obter_nivel_classif_conta(c.cd_classificacao),
	ctb_obter_nivel_classif_conta(d.cd_classificacao)

UNION

SELECT	s.cd_conta_contabil,
	s.cd_centro_custo,
	SUM(0) vl_saldo_atual,
	e.ie_debito_credito,
	ctb_obter_nivel_classif_conta(c.cd_classificacao) qt_nivel_conta,
	ctb_obter_nivel_classif_conta(d.cd_classificacao) qt_nivel_centro,
	SUM(0)
FROM	ctb_grupo_conta e,
	centro_custo d,
	conta_contabil c,
	ctb_orc_cen_valor s
WHERE	s.cd_conta_contabil	= c.cd_conta_contabil
AND	s.cd_centro_custo		= d.cd_centro_custo
and	s.cd_estabelecimento	= d.cd_estabelecimento
AND	c.cd_grupo		= e.cd_grupo
and	s.nr_Seq_cenario		= nr_Seq_cenario_p
AND	c.ie_tipo			<> 'T'
AND	e.ie_tipo 			IN ('R','C','D')
AND	s.cd_estabelecimento	= cd_estabelecimento_p
AND	c.cd_empresa		= cd_empresa_w
and	not exists (	select	1
			from	ctb_saldo y
			where	y.cd_conta_contabil	= s.cd_conta_contabil
			and	y.cd_centro_custo		= s.cd_centro_Custo
			and	y.cd_estabelecimento	= s.cd_estabelecimento
			and	ctb_obter_mes_ref(y.nr_Seq_mes_ref) between dt_inicial_w  AND dt_final_w)
GROUP BY s.cd_conta_contabil,
	s.cd_centro_custo,
	e.ie_debito_credito,
	ctb_obter_nivel_classif_conta(c.cd_classificacao),
	ctb_obter_nivel_classif_conta(d.cd_classificacao)
order by	1,2;


BEGIN

ie_separador_centro_w	:= philips_contabil_pck.get_separador_centro;
ie_separador_conta_w	:= philips_contabil_pck.get_separador_conta;

select	cd_empresa
into STRICT	cd_empresa_w
from	ctb_orc_cenario
where	nr_sequencia = nr_seq_cenario_p;

qt_commit_w		:= 0;

dt_inicial_w		:= trunc(dt_inicial_p, 'month');
dt_final_w		:= trunc(coalesce(dt_final_p,dt_inicial_p), 'month');
delete	from w_ctb_acomp_valor
where	nm_usuario	= nm_usuario_p;
commit;

open  c001;
loop
fetch c001 into
		cd_conta_contabil_w,
		cd_centro_custo_w,
		vl_saldo_atual_w,
		ie_debito_credito_w,
		qt_nivel_conta_w,
		qt_nivel_centro_w,
		vl_movimento_ww;
EXIT WHEN NOT FOUND; /* apply on c001 */
	begin

qt_commit_w	:= qt_commit_w + 1;

if (qt_commit_w >= 2000) then
	qt_commit_w := 0;
	commit;
end if;

	qt_min_nivel_conta_w	:= qt_min_nivel_conta_p;
	qt_max_nivel_conta_w	:= qt_max_nivel_conta_p;
	qt_min_nivel_centro_w	:= qt_min_nivel_centro_p;
	qt_max_nivel_centro_w	:= qt_max_nivel_centro_p;

	if (qt_min_nivel_conta_w > qt_nivel_conta_w) then
		qt_min_nivel_conta_w	:= qt_nivel_conta_w;
	end if;
	if (qt_min_nivel_centro_w > qt_nivel_centro_w) then
		qt_min_nivel_centro_w := qt_nivel_centro_w;
	end if;
	if (qt_max_nivel_conta_w > qt_nivel_conta_w) then
		qt_max_nivel_conta_w	:= qt_nivel_conta_w;
	end if;
	if (qt_max_nivel_centro_w > qt_nivel_centro_w) then
		qt_max_nivel_centro_w := qt_nivel_centro_w;
	end if;

	ie_gerar_w	:= 'S';
	if (coalesce(cd_classif_conta_p,'0') <> '0')  then
		begin
		ie_gerar_w	:= 'N';
		cd_classif_w	:= cd_classif_conta_p;
		cd_classif_w	:= replace(cd_classif_w,'(','');
		cd_classif_w	:= replace(cd_classif_w,')','');
		cd_classif_w	:= replace(cd_classif_w,' ','');
		while(ie_gerar_w = 'N') and (length(cd_classif_w) > 0)  loop
			begin
			ie_pos_w 	:= position(',' in cd_classif_w);
			if (ie_pos_w = 0) then
				cd_classif_ww	:= cd_classif_w;
				cd_classif_w	:= '';
			else
				cd_classif_ww	:= substr(cd_classif_w,1, ie_pos_w - 1);
				cd_classif_w	:= substr(cd_classif_w, ie_pos_w + 1, 255);
			end if;
			select ctb_obter_se_conta_classif_sup(cd_conta_contabil_w, cd_classif_ww)
			into STRICT	ie_gerar_w
			;
			end;
		end loop;
		end;
	end if;
	if (ie_gerar_w	= 'S')  and (coalesce(cd_classif_centro_p,'0') <> '0')  then
		begin
		ie_gerar_w	:= 'N';
		cd_classif_w	:= cd_classif_centro_p;
		cd_classif_w	:= replace(cd_classif_w,'(','');
		cd_classif_w	:= replace(cd_classif_w,')','');
		cd_classif_w	:= replace(cd_classif_w,' ','');
		while(ie_gerar_w = 'N') and (length(cd_classif_w) > 0)  loop
			begin
			ie_pos_w 		:= position(',' in cd_classif_w);
			if (ie_pos_w = 0) then
				cd_classif_ww	:= cd_classif_w;
				cd_classif_w	:= '';
			else
				cd_classif_ww	:= substr(cd_classif_w,1, ie_pos_w - 1);
				cd_classif_w	:= substr(cd_classif_w, ie_pos_w + 1, 255);
			end if;
			select	ctb_obter_se_centro_sup(cd_centro_custo_w, cd_classif_ww)
			into STRICT	ie_gerar_w
			;
			end;
		end loop;
		end;
	end if;

/*	opção
	1 - todas contas
	2 - com movimento
	3 - com saldo
*/
	if (ie_gerar_w	= 'S')  then
		if (ie_opcao_p = 2) and (vl_movimento_ww = 0) then
			ie_gerar_w := 'N';
		end if;
	end if;

	if (ie_gerar_w	= 'S')  and (coalesce(cd_centro_custo_p, '0') <> '0') then
		select	ctb_obter_se_centro_contido(cd_centro_custo_w, cd_centro_custo_p)
		into STRICT	ie_gerar_w
		;
	end if;

	if (ie_gerar_w	= 'S')  and (coalesce(cd_conta_contabil_p,'0') <> '0') then
		select	ctb_obter_se_conta_contida(cd_conta_contabil_w, cd_conta_contabil_p)
		into STRICT	ie_gerar_w
		;
	end if;

	if (ie_gerar_w	= 'S')  then
		begin
		if (cd_conta_contabil_w	<> cd_conta_contabil_ww) then
			select	ctb_obter_conta_nivel(cd_conta_contabil_w, qt_max_nivel_conta_w, dt_inicial_w)
			into STRICT	cd_conta_ww
			;
			select	max(cd_classificacao),
				max(ds_conta_contabil)
			into STRICT	cd_classif_conta_w,
				ds_conta_w
			from	conta_contabil
			where	cd_conta_contabil	= cd_conta_ww
			and	cd_empresa		= cd_empresa_w;
			cd_conta_contabil_ww		:= cd_conta_contabil_w;
		end if;
		if (cd_centro_custo_w	<> cd_centro_custo_ww) then
			select	ctb_obter_centro_nivel(cd_centro_custo_w, qt_max_nivel_centro_w)
			into STRICT	cd_centro_ww
			;
			select	max(cd_classificacao),
				max(ds_centro_custo)
			into STRICT	cd_classif_centro_w,
				ds_centro_w
			from	centro_custo
			where	cd_centro_custo	= cd_centro_ww
			and	cd_estabelecimento	= cd_estabelecimento_p;
			cd_centro_custo_ww		:= cd_centro_custo_w;
		end if;

		if (ie_ordem_inicio_p = 'C') then
			cd_classificacao_w	:= cd_classif_conta_w || ie_separador_conta_w || cd_classif_centro_w;
			ds_gerencial_w	:= substr(ds_centro_w,1,100);
			qt_nivel_2_w	:= qt_max_nivel_conta_w + qt_min_nivel_centro_w;
			qt_nivel_max_w	:= qt_max_nivel_conta_w;
			qt_nivel_min_w	:= qt_min_nivel_conta_w;
			cd_classificacao_ww	:= cd_classif_conta_w;
		else
			cd_classificacao_w	:= cd_classif_centro_w || ie_separador_centro_w || cd_classif_conta_w;
			ds_gerencial_w	:= substr(ds_conta_w,1,255);
			qt_nivel_2_w	:= qt_max_nivel_centro_w + qt_min_nivel_conta_w;
			qt_nivel_max_w	:= qt_max_nivel_centro_w;
			qt_nivel_min_w	:= qt_min_nivel_centro_w;
			cd_classificacao_ww	:= cd_classif_centro_w;
		end if;
		y				:= 1;
		for i in 1..length(cd_classificacao_w) loop
			if (substr(cd_classificacao_w,i,1) = ie_separador_conta_w) then
				y		:= y + 1;
			end if;
		end loop;

		z				:= y;
		while(y >= qt_nivel_min_w) loop

			select	count(*)
			into STRICT	k
			from	w_ctb_acomp_valor
			where	cd_classificacao	= cd_classificacao_w
			and	nm_usuario		= nm_usuario_p
			and	nr_Seq_cenario		= nr_Seq_cenario_p;

			if (k > 0) then
				/* Buscar o valor total do cenario*/

				select	count(*)
				into STRICT	qt_reg_w
				from	w_ctb_acomp_valor
				where	cd_classificacao	= cd_classificacao_w
				and	nr_seq_cenario	= nr_seq_cenario_p
				and	nm_usuario	= nm_usuario_p;

				if (qt_reg_w > 0) then

					select	coalesce(sum(a.vl_orcado),0)
					into STRICT	vl_orcado_cen_w
					from	ctb_orc_cen_valor a
					where	a.cd_estabelecimento	= cd_estabelecimento_p
					and	a.nr_seq_cenario		= nr_seq_cenario_p
					and	a.cd_centro_custo		= cd_centro_custo_w
					and	a.cd_conta_contabil	= cd_conta_contabil_w;

					if (ie_ordem_inicio_p <> 'C' ) and (ie_debito_credito_w = 'D') and (y = qt_nivel_max_w) then
						vl_orcado_cen_w		:= vl_orcado_cen_w * -1;
					end if;

					update	w_ctb_acomp_valor
					set	vl_orcado		= coalesce(vl_orcado,0) + vl_orcado_cen_w
					where	nr_seq_cenario	= nr_seq_cenario_p
					and	cd_classificacao	= cd_classificacao_w
					and	nm_usuario	= nm_usuario_p;
				end if;

				update	w_ctb_acomp_valor
				set	vl_contabil_acum	= vl_contabil_acum + vl_saldo_atual_w
				where	cd_classificacao	= cd_classificacao_w
				and	nm_usuario	= nm_usuario_p;

			else
				begin
				j	:= y - qt_min_nivel_conta_w - qt_min_nivel_centro_w + 1;
				if (y = z) then
					w		:= 0;
				elsif (y > qt_nivel_max_w) then
					if (ie_ordem_inicio_p = 'C') then
						w	:= 10 + y - qt_nivel_max_w;
					else
						w	:= 20 + y - qt_nivel_max_w;
					end if;
				else
					j	:= y - qt_nivel_min_w;
					if (ie_ordem_inicio_p = 'C') then
						w	:= 20 + y;
					else
						w	:= 10 + y;
					end if;
				end if;
				if (w > 20) then
					select	ctb_obter_conta_nivel(cd_conta_contabil_w, w - 20, dt_inicial_w)
					into STRICT	cd_conta_ww
					;
					select	max(ds_conta_contabil)
					into STRICT	ds_gerencial_w
					from	conta_contabil
					where	cd_conta_contabil	= cd_conta_ww;
				elsif (w > 10) then
					select	ctb_obter_centro_nivel(cd_centro_custo_w, w - 10)
					into STRICT	cd_centro_ww
					;
					select	max(ds_centro_custo)
					into STRICT	ds_gerencial_w
					from	centro_custo
					where	cd_centro_custo		= cd_centro_ww;
				end if;



				if (ds_gerencial_w IS NOT NULL AND ds_gerencial_w::text <> '') then

					/* Buscar o valor total do cenario*/

					select	coalesce(sum(a.vl_orcado),0)
					into STRICT	vl_orcado_cen_w
					from	ctb_orc_cen_valor a
					where	a.cd_estabelecimento	= cd_estabelecimento_p
					and	a.nr_seq_cenario	= nr_seq_cenario_p
					and	a.cd_centro_custo	= cd_centro_custo_w
					and	a.cd_conta_contabil	= cd_conta_contabil_w;

					ds_gerencial_w	:= substr(lpad(' ', j * 2) || ds_gerencial_w,1,100);

					select	ie_tipo
					into STRICT	ie_tipo_conta_w
					from	conta_contabil
					where	cd_conta_contabil	= coalesce(cd_conta_ww,cd_conta_contabil_w);

					cd_conta_ww	:= substr(cd_conta_contabil_w,1,20);
					cd_centro_ww	:= cd_centro_custo_w;

					if (w > 0) then
						cd_conta_ww	:= '';
						cd_centro_ww	:= null;
					end if;

					select	nextval('w_ctb_acomp_valor_seq')
					into STRICT	nr_sequencia_w
					;

					if (ie_ordem_inicio_p <> 'C' ) and (ie_debito_credito_w = 'D') and (y = qt_nivel_max_w) then
						vl_orcado_cen_w		:= vl_orcado_cen_w * -1;
						vl_saldo_atual_w	:= vl_saldo_atual_w * -1;
					end if;

					insert into w_ctb_acomp_valor(
						nr_sequencia,
						nm_usuario,
						cd_conta_contabil,
						cd_centro_custo,
						cd_classificacao,
						cd_classif_conta,
						ds_gerencial,
						nr_seq_mes_ref,
						vl_contabil_acum,
						vl_orcado,
						ie_informacao,
						nr_seq_cenario,
						dt_atualizacao,
						ie_tipo_conta)
					values (nr_sequencia_w,
						nm_usuario_p,
						cd_conta_ww,
						cd_centro_ww,
						cd_classificacao_w,
						cd_classif_conta_w,
						ds_gerencial_w,
						null,
						vl_saldo_atual_w,
						vl_orcado_cen_w,
						'V',
						nr_seq_cenario_p,
						clock_timestamp(),
						ie_tipo_conta_w);
				end if;
				end;
			end if;
			if (y 	> qt_nivel_max_w) and (y 	<= qt_nivel_2_w) then
				cd_classificacao_w	:= cd_classificacao_ww;
			else
				select	instr(cd_classificacao_w, ie_separador_centro_w, -1)
				into STRICT	k
				;
				cd_classificacao_w	:= substr(cd_classificacao_w,1,k -1);
			end if;
			y				:= 0;
			if (cd_classificacao_w IS NOT NULL AND cd_classificacao_w::text <> '') then
				y			:= 1;
				for i in 1..length(cd_classificacao_w) loop
					if (substr(cd_classificacao_w,i,1) = ie_separador_centro_w) then
						y	:= y + 1;
				end if;
				end loop;
			end if;
			if (ie_ordem_inicio_p <> 'C' ) and (ie_debito_credito_w = 'D' ) and (y = qt_nivel_max_w) then
				vl_saldo_atual_w	:= vl_saldo_atual_w * -1;
				vl_orcado_cen_w		:= vl_orcado_cen_w * -1;
			end if;
		end loop;
		end;
	end if;
	end;
end loop;
close c001;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_cen_gerar_acomp_orc_real ( cd_estabelecimento_p text, dt_inicial_p timestamp, dt_final_p timestamp, cd_classif_conta_p text, cd_classif_centro_p text, cd_conta_contabil_p text, cd_centro_custo_p text, qt_min_nivel_conta_p bigint, qt_max_nivel_conta_p bigint, qt_min_nivel_centro_p bigint, qt_max_nivel_centro_p bigint, nm_usuario_p text, ie_ordem_inicio_p text, ie_opcao_p bigint, nr_seq_cenario_p bigint) FROM PUBLIC;

