-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE comunic_fornec_atraso_compra () AS $body$
DECLARE

 
qt_item_w			bigint;
qt_dias_w			bigint;
dt_prevista_entrega_w		timestamp;
cd_fornecedor_w			varchar(14);
cd_material_w			integer;
cd_estabelecimento_w		smallint;
ds_fornecedor_w			varchar(80);
nr_ordem_compra_w		bigint;
ds_email_destino_w			varchar(255);
ds_email_origem_w			varchar(255);
ds_assunto_w			varchar(255);
ds_mensagem_w			varchar(2000);
cd_comprador_w			varchar(10);
nm_usuario_w			varchar(15);
nr_seq_regra_w			bigint;
cd_cnpj_editado_w			varchar(20);
cd_cnpj_w			varchar(14);
ie_usuario_w			varchar(3);
ds_email_compras_w		varchar(255);
ds_email_adicional_w		varchar(2000);
ie_momento_envio_w		varchar(1);
ds_email_remetente_w		varchar(255);

c01 CURSOR FOR 
SELECT	count(c.nr_item_oci) qt_item, 
	a.cd_estabelecimento, 
	coalesce(a.cd_cgc_fornecedor,a.cd_pessoa_fisica) cd_fornecedor, 
	a.nr_ordem_compra, 
	c.dt_prevista_entrega, 
	(trunc(clock_timestamp(),'dd') - trunc(c.dt_prevista_entrega,'dd')) qt_dias 
from	ordem_compra a, 
	ordem_compra_item b, 
	ordem_compra_item_entrega c 
where	a.nr_ordem_compra = b.nr_ordem_compra 
and	b.nr_ordem_compra = c.nr_ordem_compra 
and	b.nr_item_oci = c.nr_item_oci 
and	coalesce(a.dt_baixa::text, '') = '' 
and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '') 
and	coalesce(a.nr_seq_motivo_cancel::text, '') = '' 
and	coalesce(c.dt_cancelamento::text, '') = '' 
and	coalesce(c.dt_real_entrega::text, '') = '' 
and	trunc(c.dt_prevista_entrega,'dd') < trunc(clock_timestamp(),'dd') 
--and	(substr(obter_Regra_envio_email_compra(16, a.cd_estabelecimento, b.cd_material),1,1) = 'S') Foi retirado essa restrição porque foi criada a pasta Filtros da regra. Então foi substituído pela function abaixo (obter_se_envia_email_regra). 
and	obter_se_envia_email_regra(a.nr_ordem_compra, 'OC', 16, a.cd_estabelecimento) = 'S' 
group by	coalesce(a.cd_cgc_fornecedor,a.cd_pessoa_fisica), 
	a.nr_ordem_compra, 
	c.dt_prevista_entrega, 
	a.cd_estabelecimento 
order by	cd_fornecedor, 
	a.nr_ordem_compra;


BEGIN 
open c01;
loop 
fetch c01 into 
	qt_item_w, 
	cd_estabelecimento_w, 
	cd_fornecedor_w, 
	nr_ordem_compra_w, 
	dt_prevista_entrega_w, 
	qt_dias_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	select	coalesce(max(nr_sequencia),0), 
		coalesce(max(ie_usuario),'U'), 
		coalesce(max(ds_email_remetente),'X'), 
		max(replace(ds_email_adicional,',',';')), 
		coalesce(max(ie_momento_envio),'I') 
	into STRICT	nr_seq_regra_w, 
		ie_usuario_w, 
		ds_email_remetente_w, 
		ds_email_adicional_w, 
		ie_momento_envio_w 
	from	regra_envio_email_compra 
	where	ie_tipo_mensagem = 16 
	and	ie_situacao = 'A' 
	and	cd_estabelecimento = cd_estabelecimento_w;
	 
	if (nr_seq_regra_w > 0) then 
		begin 
		select	substr(obter_dados_pf_pj_estab(cd_estabelecimento, cd_pessoa_fisica, cd_cgc_fornecedor, 'M'),1,60) ds_email_destino, 
			obter_dados_usuario_opcao(obter_usuario_pessoa(cd_comprador),'E') ds_email_origem, 
			obter_usuario_pessoa(cd_comprador) nm_usuario, 
			obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc_fornecedor) ds_fornecedor, 
			obter_cgc_cpf_editado(cd_cgc_fornecedor) cd_cnpj_editado, 
			cd_cgc_fornecedor 
		into STRICT	ds_email_destino_w, 
			ds_email_origem_w, 
			nm_usuario_w, 
			ds_fornecedor_w, 
			cd_cnpj_editado_w, 
			cd_cnpj_w 
		from	ordem_compra 
		where	nr_ordem_compra = nr_ordem_compra_w;
 
		if (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then		 
		 
			select	substr( 
				replace( 
				replace( 
				replace( 
				replace( 
				replace( 
				replace( 
				replace(ds_assunto,'@nr_ordem_compra',nr_ordem_compra_w), 
				'@qt_item',qt_item_w), 
				'@data',dt_prevista_entrega_w), 
				'@qt_dias',qt_dias_w), 
				'@cnpj_editado',cd_cnpj_editado_w), 
				'@cnpj',cd_cnpj_w), 
				'@fornecedor',ds_fornecedor_w),1,255), 
				substr( 
				replace( 
				replace( 
				replace( 
				replace( 
				replace( 
				replace( 
				replace(ds_mensagem_padrao,'@nr_ordem_compra',nr_ordem_compra_w), 
				'@qt_item',qt_item_w), 
				'@data',dt_prevista_entrega_w), 
				'@qt_dias',qt_dias_w), 
				'@cnpj_editado',cd_cnpj_editado_w), 
				'@cnpj',cd_cnpj_w), 
				'@fornecedor',ds_fornecedor_w),1,2000) 
			into STRICT	ds_assunto_w, 
				ds_mensagem_w 
			from	regra_envio_email_compra 
			where	nr_sequencia = nr_seq_regra_w;
 
			if (ie_usuario_w = 'C') then 
				select	ds_email 
				into STRICT	ds_email_compras_w 
				from	parametro_compras 
				where	cd_estabelecimento = cd_estabelecimento_w;
			 
				if (ds_email_compras_w IS NOT NULL AND ds_email_compras_w::text <> '') then 
					ds_email_origem_w := ds_email_compras_w;
				end if;
			end if;
 
			if (ds_email_remetente_w <> 'X') then 
				ds_email_origem_w	:= ds_email_remetente_w;
			end if;
		 
			if (ds_email_adicional_w IS NOT NULL AND ds_email_adicional_w::text <> '') then 
				ds_email_destino_w := ds_email_destino_w || ';' || ds_email_adicional_w;
			end if;
		 
			if (ie_momento_envio_w = 'A') then 
				begin 
 
				CALL sup_grava_envio_email( 
					'OC', 
					'16', 
					nr_ordem_compra_w, 
					null, 
					null, 
					ds_email_destino_w, 
					nm_usuario_w, 
					ds_email_origem_w, 
					ds_assunto_w, 
					ds_mensagem_w, 
					cd_estabelecimento_w, 
					nm_usuario_w);
 
				commit;
 
				end;
			else 
				if (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then 
					begin 
					CALL enviar_email(ds_assunto_w,ds_mensagem_w,ds_email_origem_w,ds_email_destino_w,nm_usuario_w,'M');
					exception when others then 
						ds_assunto_w := '';
					end;
				end if;
			end if;
		end if;
		end;
	end if;
	end;
end loop;
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE comunic_fornec_atraso_compra () FROM PUBLIC;

