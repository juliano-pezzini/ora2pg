-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_banco_pend_cartao_cr (nm_usuario_p text, nr_seq_movto_cartao_p bigint, nr_seq_lote_cartao_p bigint, dt_estorno_p timestamp) AS $body$
DECLARE

 
nr_seq_movto_pend_w		bigint;
nr_seq_movto_cartao_estorno_w	bigint;				
vl_baixa_w			double precision;
nr_seq_movto_trans_fin_w	bigint;
cd_estabelecimento_w		bigint;
nr_seq_parcela_w		bigint;
ie_forma_lanc_lote_cartao_w	varchar(10);
dt_baixa_w			timestamp;
qt_baixa_movto_pend_w		bigint;
vl_baixas_lote_w		movto_banco_pend_baixa.vl_baixa%type;	
 
c01 CURSOR FOR 
SELECT	a.nr_sequencia 
from	movto_cartao_cr_parcela a 
where	a.nr_seq_lote	= nr_seq_lote_cartao_p;


BEGIN 
 
if (nr_seq_movto_cartao_p IS NOT NULL AND nr_seq_movto_cartao_p::text <> '') then 
 
	select	max(nr_seq_movto_pend), 
		max(vl_baixa) 
	into STRICT	nr_seq_movto_pend_w, 
		vl_baixa_w 
	from	movto_banco_pend_baixa 
	where	nr_seq_cartao_baixa	= nr_seq_movto_cartao_p;
 
	select	max(a.nr_sequencia), 
		max(a.dt_baixa) 
	into STRICT	nr_seq_movto_cartao_estorno_w, 
		dt_baixa_w 
	from	movto_cartao_cr_parcela b, 
		movto_cartao_cr_baixa a 
	where	a.nr_seq_parcela	= 	b.nr_sequencia 
	and	b.nr_sequencia		= 	(SELECT	x.nr_seq_parcela 
						from	movto_cartao_cr_baixa x 
						where	x.nr_sequencia	= nr_seq_movto_cartao_p);
 
	select	max(d.nr_sequencia) 
	into STRICT	nr_seq_movto_trans_fin_w 
	from	transacao_financeira e, 
		movto_trans_financ d, 
		movto_cartao_cr c, 
		movto_cartao_cr_parcela b, 
		movto_cartao_cr_baixa a		 
	where	a.nr_seq_parcela	= b.nr_sequencia 
	and	b.nr_seq_movto		= c.nr_sequencia 
	and	d.nr_seq_movto_cartao	= c.nr_sequencia 
	and	e.nr_sequencia		= d.nr_seq_trans_financ 
	and	e.ie_acao		= 24 
	and	d.vl_transacao		= vl_baixa_w * -1 
	and	trunc(d.dt_transacao)	= trunc(a.dt_baixa)	 
	and	a.nr_sequencia		= nr_seq_movto_cartao_estorno_w;
	 
	/*Soma das baixas e estornos do para este lote de cartao no CNI*/
 
	select	sum(a.vl_baixa) 
	into STRICT	vl_baixas_lote_w 
	from	movto_banco_pend_baixa a 
	where 	a.nr_seq_lote_cartao	= nr_seq_lote_cartao_p 
	and	a.nr_seq_movto_pend	= nr_seq_movto_pend_w;	
	 
	/*Verificar se ja foi lançado um estorno para esse lote de cartao, se for, não lançar novamente*/
 
	select 	count(*) 
	into STRICT	qt_baixa_movto_pend_w 
	from  	movto_banco_pend_baixa a 
	where 	a.nr_seq_lote_cartao	= nr_seq_lote_cartao_p 
	and	a.nr_seq_movto_pend	= nr_seq_movto_pend_w 
	and	vl_baixas_lote_w	<> vl_baixa_w; /*Se o total das baixas for igual ao valor da baixa, significa q uma baixa ainda n foi estornada*/
 
	if (nr_seq_movto_pend_w IS NOT NULL AND nr_seq_movto_pend_w::text <> '') and (coalesce(vl_baixa_w,0) <> 0) and (coalesce(qt_baixa_movto_pend_w,0) = 0) then 
		CALL baixar_movto_banco_pend(nr_seq_movto_pend_w, 
					dt_baixa_w, 
					vl_baixa_w * -1, 
					null, 
					null, 
					nm_usuario_p, 
					'S', 
					null, 
					null, 
					null, 
					null, 
					nr_seq_movto_trans_fin_w, 
					null, 
					nr_seq_movto_cartao_estorno_w, 
					nr_seq_lote_cartao_p);		
	end if;
 
elsif (nr_seq_lote_cartao_p IS NOT NULL AND nr_seq_lote_cartao_p::text <> '') then 
 
	select	max(cd_estabelecimento) 
	into STRICT	cd_estabelecimento_w 
	from	lote_baixa_cartao_cr 
	where	nr_sequencia		= nr_seq_lote_cartao_p;
	 
	select	coalesce(max(ie_forma_lanc_lote_cartao),'P') 
	into STRICT	ie_forma_lanc_lote_cartao_w 
	from	parametro_contas_receber 
	where	cd_estabelecimento	= cd_estabelecimento_w;
 
	if (ie_forma_lanc_lote_cartao_w = 'L') then /*Uma baixa para o Lote*/
 
 
		select	max(nr_seq_movto_pend), 
			max(vl_baixa), 
			max(dt_baixa) 
		into STRICT	nr_seq_movto_pend_w, 
			vl_baixa_w, 
			dt_baixa_w 
		from	movto_banco_pend_baixa 
		where	nr_seq_lote_cartao	= nr_seq_lote_cartao_p;
 
		select	max(b.nr_sequencia) 
		into STRICT	nr_seq_movto_trans_fin_w 
		from	transacao_financeira c, 
			movto_trans_financ b, 
			lote_baixa_cartao_cr a 
		where	b.nr_seq_lote_cartao	= a.nr_sequencia 
		and	c.nr_sequencia		= b.nr_seq_trans_financ 
		and	c.ie_acao		= 24	 
		and	b.vl_transacao		= vl_baixa_w * -1 
		and	trunc(b.dt_transacao)	= trunc(dt_estorno_p) 
		and	a.nr_sequencia		= nr_seq_lote_cartao_p;	
		 
		/*Soma das baixas e estornos do para este lote de cartao no CNI*/
 
		select	sum(a.vl_baixa) 
		into STRICT	vl_baixas_lote_w 
		from	movto_banco_pend_baixa a 
		where 	a.nr_seq_lote_cartao	= nr_seq_lote_cartao_p 
		and	a.nr_seq_movto_pend	= nr_seq_movto_pend_w;	
		 
		/*Verificar se ja foi lançado um estorno para esse lote de cartao, se for, não lançar novamente*/
 
		select 	count(*) 
		into STRICT	qt_baixa_movto_pend_w 
		from  	movto_banco_pend_baixa a 
		where 	a.nr_seq_lote_cartao	= nr_seq_lote_cartao_p 
		and	a.nr_seq_movto_pend	= nr_seq_movto_pend_w 
		and	vl_baixas_lote_w	<> vl_baixa_w; /*Se o total das baixas for igual ao valor da baixa, significa q uma baixa ainda n foi estornada*/
 
		if (nr_seq_movto_pend_w IS NOT NULL AND nr_seq_movto_pend_w::text <> '') and (coalesce(vl_baixa_w,0) <> 0) and (coalesce(qt_baixa_movto_pend_w,0) = 0) then 
			CALL baixar_movto_banco_pend(nr_seq_movto_pend_w, 
						dt_baixa_w, 
						vl_baixa_w * -1, 
						null, 
						null, 
						nm_usuario_p, 
						'S', 
						null, 
						null, 
						null, 
						null, 
						nr_seq_movto_trans_fin_w, 
						null, 
						nr_seq_movto_cartao_estorno_w, 
						nr_seq_lote_cartao_p);
		end if;
	else 
	 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_parcela_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */	
		 
			select	max(nr_seq_movto_pend), 
				max(vl_baixa), 
				max(dt_baixa) 
			into STRICT	nr_seq_movto_pend_w, 
				vl_baixa_w, 
				dt_baixa_w 
			from	movto_banco_pend_baixa 
			where	nr_seq_lote_cartao	= nr_seq_lote_cartao_p 
			and	nr_seq_parc_cartao	= nr_seq_parcela_w;
 
			select	max(d.nr_sequencia) 
			into STRICT	nr_seq_movto_trans_fin_w 
			from	transacao_financeira e, 
				movto_trans_financ d, 
				movto_cartao_cr c, 
				movto_cartao_cr_parcela b					 
			where	b.nr_seq_movto		= c.nr_sequencia 
			and	d.nr_seq_movto_cartao	= c.nr_sequencia 
			and	d.nr_seq_parc_cartao	= b.nr_sequencia 
			and	e.nr_sequencia		= d.nr_seq_trans_financ 
			and	e.ie_acao		= 24 
			and	b.nr_sequencia		= nr_seq_parcela_w;
			 
			/*Soma das baixas e estornos do para este lote de cartao no CNI*/
 
			select	sum(a.vl_baixa) 
			into STRICT	vl_baixas_lote_w 
			from	movto_banco_pend_baixa a 
			where 	a.nr_seq_lote_cartao	= nr_seq_lote_cartao_p 
			and	a.nr_seq_movto_pend	= nr_seq_movto_pend_w 
			and	nr_seq_parc_cartao	= nr_seq_parcela_w;	
			 
			/*Verificar se ja foi lançado um estorno para esse lote de cartao, se for, não lançar novamente*/
 
			select 	count(*) 
			into STRICT	qt_baixa_movto_pend_w 
			from  	movto_banco_pend_baixa a 
			where 	a.nr_seq_lote_cartao	= nr_seq_lote_cartao_p 
			and	a.nr_seq_movto_pend	= nr_seq_movto_pend_w 
			and	vl_baixas_lote_w	<> vl_baixa_w; /*Se o total das baixas for igual ao valor da baixa, significa q uma baixa ainda n foi estornada*/
	 
			if (nr_seq_movto_pend_w IS NOT NULL AND nr_seq_movto_pend_w::text <> '') and (coalesce(vl_baixa_w,0) <> 0) and (coalesce(qt_baixa_movto_pend_w,0) = 0) then 
				CALL baixar_movto_banco_pend(nr_seq_movto_pend_w, 
							dt_baixa_w, 
							vl_baixa_w * -1, 
							null, 
							null, 
							nm_usuario_p, 
							'S', 
							null, 
							null, 
							null, 
							null, 
							nr_seq_movto_trans_fin_w, 
							null, 
							nr_seq_movto_cartao_estorno_w, 
							nr_seq_lote_cartao_p);
			end if;
		 
		end loop;
		close C01;
	 
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_banco_pend_cartao_cr (nm_usuario_p text, nr_seq_movto_cartao_p bigint, nr_seq_lote_cartao_p bigint, dt_estorno_p timestamp) FROM PUBLIC;

