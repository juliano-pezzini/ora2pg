-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_49_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
ds_sql_w           	 		varchar(4000);
ds_sql_2_w          		varchar(4000);
ds_sql_2_aux_w          	varchar(4000);
ds_sql_2_original_w     	varchar(4000);
ds_sql_tab_quente_w			varchar(4000);
ds_observacao_w         	varchar(600);
v_cur               		pls_util_pck.t_cursor;

var_cur_w           integer;
var_exec_w          integer;
var_retorno_w       integer;
nr_idx_w            integer := 0;

tb_seq_selecao_w		pls_util_cta_pck.t_number_table;
tb_valido_w			pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w			pls_util_cta_pck.t_varchar2_table_4000;

-- Informações da validação de situação inativa do prestador
C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
SELECT  a.nr_sequencia  nr_seq_validacao,
    a.ie_restringe_segurado,
    a.ie_mesmo_prestador,
    a.ie_considera_cta_cancelada,
    a.ie_considera_prot_rejeitado,
    a.ie_mesma_apresentacao,
    a.ie_documento,
    coalesce(a.ie_mesmo_protocolo,'N') ie_mesmo_protocolo,
    coalesce(a.ie_mesmo_tipo_faturamento,'N') ie_mesmo_tipo_faturamento,
    coalesce(a.ie_mesma_senha,'N') ie_mesma_senha,
	coalesce(a.ie_conta_glosada,'N') ie_conta_glosada
from    pls_oc_cta_val_duplic_guia a
where   a.nr_seq_oc_cta_comb    = nr_seq_oc_cta_comb_pc;

c01_w		c01%rowtype;

c02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	a.nr_sequencia nr_seq_selecao,
		null ds_observacao,
		b.nr_sequencia nr_seq_conta,
		b.cd_guia_operadora_conv cd_guia_pesquisa,
		b.cd_guia_prestador,
		b.nr_seq_segurado_conv nr_seq_segurado,
		c.nr_seq_lote_protocolo nr_seq_lote_conta,
		c.nr_lote_prestador nr_protocolo_prestador,
		b.nr_seq_protocolo,
		b.nr_seq_prest_exec_conv nr_seq_prestador_exec,
		coalesce(b.ie_tipo_faturamento,'T') ie_tipo_faturamento,
		b.cd_senha
	from	pls_conta_imp			b,
		pls_oc_cta_selecao_imp	a,
		pls_protocolo_conta_imp c
	where	a.nr_seq_conta = b.nr_sequencia
	and	b.nr_seq_protocolo = c.nr_sequencia
	and	a.ie_valido =  'S'
	and	a.nr_id_transacao = nr_id_transacao_pc;

c02_w		c02%rowtype;


BEGIN
-- Deve se ter a informação da regra para que a validação seja aplicada.
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '') then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V', 'N', nr_id_transacao_p, null, 'N');

	for c01_w in c01(nr_seq_combinada_p) loop

		ds_sql_2_w  := '    select  ''Protocolo '' || to_char(x.nr_seq_protocolo) || '' do lote ('' || to_char(y.nr_seq_lote_protocolo) || ' ||
							' ''), importado por '' || nvl(x.nm_usuario_nrec,y.nm_usuario_nrec) || '' em '' || to_char(y.dt_atualizacao_nrec,''dd/mm/yyyy hh24:mi:ss'') ds_obervacao ' ||pls_tipos_ocor_pck.enter_w||
					   '    from    pls_conta_imp x, ' || pls_util_pck.enter_w ||
					   '    	pls_protocolo_conta_imp y ' || pls_util_pck.enter_w ||
					   '    where   x.nr_sequencia <> :nr_seq_conta ' || pls_util_pck.enter_w ||
					   '    and	x.nr_seq_protocolo = y.nr_sequencia ' || pls_util_pck.enter_w ||
					   '    and	y.ie_situacao <> ''T'' ' || pls_util_pck.enter_w;

		ds_sql_tab_quente_w:= 	'union all' ||pls_tipos_ocor_pck.enter_w||
								'    select  ''Protocolo '' || to_char(x.nr_seq_protocolo) || '' do lote ('' || to_char(x.nr_seq_lote_conta) || ' ||
								' ''), importado por '' || nvl(x.nm_usuario_conta_nrec,x.nm_usuario_prot_nrec) || '' em '' || to_char(x.dt_atualizacao_prot_nrec,''dd/mm/yyyy hh24:mi:ss'') ds_obervacao ' ||pls_tipos_ocor_pck.enter_w||
								'    from    pls_conta_v x ' || pls_util_pck.enter_w ||
								'    where   1 = 1 ' || pls_util_pck.enter_w;

		if (C01_w.ie_documento = 'G') then
			ds_sql_2_w := ds_sql_2_w || '   and x.cd_guia_operadora_conv = :cd_guia_pesquisa ' || pls_util_pck.enter_w;
			ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and x.cd_guia_pesquisa = :cd_guia_pesquisa ' || pls_util_pck.enter_w;
		elsif (C01_w.ie_documento = 'P') then
			ds_sql_2_w := ds_sql_2_w || '   and x.cd_guia_prestador = :cd_guia_prestador ' || pls_util_pck.enter_w;
			ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and x.cd_guia_prestador = :cd_guia_prestador ' || pls_util_pck.enter_w;
		end if;

		-- Restricoes conforme regra (restricoes do subselect)
		if (C01_w.ie_restringe_segurado = 'S') then
			ds_sql_2_w := ds_sql_2_w || '   and     x.nr_seq_segurado_conv = :nr_seq_segurado' || pls_util_pck.enter_w;
			ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     x.nr_seq_segurado = :nr_seq_segurado' || pls_util_pck.enter_w;
		end if;

		if (C01_w.ie_mesmo_prestador = 'S') then
			ds_sql_2_w := ds_sql_2_w || '   and     x.nr_seq_prest_exec_conv = :nr_seq_prestador_exec' || pls_util_pck.enter_w;
			ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     x.nr_seq_prestador_exec = :nr_seq_prestador_exec' || pls_util_pck.enter_w;
		end if;

		if (C01_w.ie_considera_cta_cancelada = 'N') then
			ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     x.ie_status <> ' || pls_util_pck.aspas_w || 'C' || pls_util_pck.aspas_w || pls_util_pck.enter_w;
		end if;

		if (C01_w.ie_considera_prot_rejeitado = 'N') then
			ds_sql_2_w := ds_sql_2_w || '   and     y.ie_situacao <> ' || pls_util_pck.aspas_w || 'RE' || pls_util_pck.aspas_w || pls_util_pck.enter_w;
			ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     x.ie_situacao_protocolo <> ' || pls_util_pck.aspas_w || 'RE' || pls_util_pck.aspas_w || pls_util_pck.enter_w;
		end if;

		if (C01_w.ie_mesma_apresentacao = 'S') then
			ds_sql_2_w := ds_sql_2_w || '   and     ('|| pls_util_pck.enter_w;
			ds_sql_2_w := ds_sql_2_w || '       ((y.nr_seq_lote_protocolo is null) or (y.nr_seq_lote_protocolo <> :nr_seq_lote_conta)) or ' || pls_util_pck.enter_w;
			ds_sql_2_w := ds_sql_2_w || '       ((y.nr_lote_prestador is null) or (y.nr_lote_prestador <> :nr_protocolo_prestador)) ' || pls_util_pck.enter_w;
			ds_sql_2_w := ds_sql_2_w || '       )' || pls_util_pck.enter_w;

		ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     ('|| pls_util_pck.enter_w;
		ds_sql_tab_quente_w := ds_sql_tab_quente_w || '       ((x.nr_seq_lote_conta is null) or (x.nr_seq_lote_conta <> :nr_seq_lote_conta)) or ' || pls_util_pck.enter_w;
		ds_sql_tab_quente_w := ds_sql_tab_quente_w || '       ((x.nr_protocolo_prestador is null) or (x.nr_protocolo_prestador <> :nr_protocolo_prestador)) ' || pls_util_pck.enter_w;
		ds_sql_tab_quente_w := ds_sql_tab_quente_w || '       )' || pls_util_pck.enter_w;
		end if;

		if (C01_w.ie_mesmo_protocolo = 'S') then
			ds_sql_2_w := ds_sql_2_w || '   and     x.nr_seq_protocolo = :nr_seq_protocolo' || pls_util_pck.enter_w;
			ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     x.nr_seq_protocolo = :nr_seq_protocolo' || pls_util_pck.enter_w;
		end if;

		if (C01_w.ie_mesmo_tipo_faturamento = 'S') then
				ds_sql_2_w := ds_sql_2_w || '   and     x.ie_tipo_faturamento = :ie_tipo_faturamento' || pls_util_pck.enter_w;
				ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     x.ie_tipo_faturamento = :ie_tipo_faturamento' || pls_util_pck.enter_w;
		end if;

		if (C01_w.ie_mesma_senha = 'S') then
				ds_sql_2_w := ds_sql_2_w || '   and     x.cd_senha = :cd_senha' || pls_util_pck.enter_w;
				ds_sql_tab_quente_w := ds_sql_tab_quente_w || '   and     x.cd_senha = :cd_senha' || pls_util_pck.enter_w;
		end if;

		for c02_w in c02(nr_id_transacao_p) loop

			ds_sql_2_aux_w      := '';
			ds_sql_2_original_w := '';

			-- se a conta enviada for "Total", deve olhar todas as guias, senão deve olhar apenas as guias do tipo "total".
			-- é importante para os casos onde os prestadores enviem guias parciais e complementares
			if (c02_w.ie_tipo_faturamento <> 'T') then
				ds_sql_2_aux_w := ds_sql_2_aux_w || '    and	nvl(x.ie_tipo_faturamento, ''T'') = ''T'' ' || pls_util_pck.enter_w;
			end if;

			ds_sql_2_original_w := ds_sql_2_w || ds_sql_2_aux_w || ds_sql_tab_quente_w || ds_sql_2_aux_w;

			var_cur_w := dbms_sql.open_cursor;
			dbms_sql.parse(var_cur_w, ds_sql_2_original_w, 1);
			dbms_sql.bind_variable(var_cur_w, ':nr_seq_conta', c02_w.nr_seq_conta);

			if (C01_w.ie_documento = 'G') then
				dbms_sql.bind_variable(var_cur_w, ':cd_guia_pesquisa', c02_w.cd_guia_pesquisa);
			elsif (C01_w.ie_documento = 'P') then
					dbms_sql.bind_variable(var_cur_w, ':cd_guia_prestador', c02_w.cd_guia_prestador);
			end if;

			if (C01_w.ie_restringe_segurado = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_segurado', c02_w.nr_seq_segurado);
			end if;

			if (C01_w.ie_mesmo_prestador = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_prestador_exec', c02_w.nr_seq_prestador_exec);
			end if;

			if (C01_w.ie_mesma_apresentacao = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_lote_conta', c02_w.nr_seq_lote_conta);
				dbms_sql.bind_variable(var_cur_w, ':nr_protocolo_prestador', c02_w.nr_protocolo_prestador);
			end if;

			if (C01_w.ie_mesmo_protocolo = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_protocolo', c02_w.nr_seq_protocolo);
			end if;

			if (C01_w.ie_mesmo_tipo_faturamento = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':ie_tipo_faturamento', c02_w.ie_tipo_faturamento);
			end if;

			if (C01_w.ie_mesma_senha = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':cd_senha', c02_w.cd_senha);
			end if;

			--Segunda vez devido ao union
			dbms_sql.bind_variable(var_cur_w, ':nr_seq_conta', c02_w.nr_seq_conta);

			if (C01_w.ie_documento = 'G') then
				dbms_sql.bind_variable(var_cur_w, ':cd_guia_pesquisa', c02_w.cd_guia_pesquisa);
			elsif (C01_w.ie_documento = 'P') then
					dbms_sql.bind_variable(var_cur_w, ':cd_guia_prestador', c02_w.cd_guia_prestador);
			end if;

			if (C01_w.ie_restringe_segurado = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_segurado', c02_w.nr_seq_segurado);
			end if;

			if (C01_w.ie_mesmo_prestador = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_prestador_exec', c02_w.nr_seq_prestador_exec);
			end if;

			if (C01_w.ie_mesma_apresentacao = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_lote_conta', c02_w.nr_seq_lote_conta);
				dbms_sql.bind_variable(var_cur_w, ':nr_protocolo_prestador', c02_w.nr_protocolo_prestador);
			end if;

			if (C01_w.ie_mesmo_protocolo = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':nr_seq_protocolo', c02_w.nr_seq_protocolo);
			end if;

			if (C01_w.ie_mesmo_tipo_faturamento = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':ie_tipo_faturamento', c02_w.ie_tipo_faturamento);
			end if;

			if (C01_w.ie_mesma_senha = 'S') then
				dbms_sql.bind_variable(var_cur_w, ':cd_senha', c02_w.cd_senha);
			end if;

			dbms_sql.define_column(var_cur_w, 1, ds_observacao_w,255);

			var_exec_w := dbms_sql.execute(var_cur_w);

			loop
				var_retorno_w := dbms_sql.fetch_rows(var_cur_w);
			exit when var_retorno_w = 0;

			dbms_sql.column_value(var_cur_w, 1, ds_observacao_w);

			end loop;
			dbms_sql.close_cursor(var_cur_w);

			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				tb_valido_w(nr_idx_w)      := 'S';
				tb_seq_selecao_w(nr_idx_w) := c02_w.nr_seq_selecao;
				tb_observacao_w(nr_idx_w)  := ds_observacao_w;

				if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
					--Grava as informações na tabela de seleção
					CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
											tb_valido_w,
											tb_observacao_w,
											nr_id_transacao_p,
											'SEQ');
					--limpa as variáveis
					SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
					nr_idx_w := 0;
				else
					nr_idx_w := nr_idx_w + 1;
				end if;
			end if;
		end loop;
	end loop;

	--Grava as informações na tabela de seleção
	CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
							tb_valido_w,
							tb_observacao_w,
							nr_id_transacao_p,
							'SEQ');

    -- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
						'N',
						ie_regra_excecao_p,
						null,
						nr_id_transacao_p,
						null);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_49_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

