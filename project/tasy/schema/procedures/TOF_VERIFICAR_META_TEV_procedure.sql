-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tof_verificar_meta_tev ( nr_atendimento_p text, nm_usuario_p text, dt_evento_p timestamp, ie_finalizar_p text default 'N') AS $body$
DECLARE



nr_seq_escala_tev_w		bigint;
dt_avaliacao_tev_w		escala_tev.dt_avaliacao%type;
nr_sequencia_w			tof_meta_atend.nr_sequencia%type;
contador_w			integer;
ie_status_w			varchar(2);
qt_proc_tev_w			integer;
qt_mat_tev_w			integer;
qt_recomend_tev_w		integer;
dt_inicio_w			timestamp;
dt_fim_w			timestamp;
nr_seq_meta_atend_w   bigint;
ie_tipo_meta_w		varchar(3);

dt_inicio_meta_w			timestamp;
qt_horas_consistencia_w	double precision;
dt_horas_inicio_consist_w	timestamp;
qt_minutos_retr_w	bigint;
			
C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		m.ie_tipo_meta,
		m.qt_minutos_retr,
		a.dt_inicio
	from	tof_meta_atend a,
		tof_meta m
	where	m.nr_sequencia = a.nr_seq_meta
	and	nr_atendimento = nr_atendimento_p
	and	coalesce(m.ie_situacao,'A') = 'A'
	and	coalesce(a.dt_finalizacao::text, '') = ''
	and	ie_regra = 'TEV'
	and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and coalesce(a.dt_inativacao::text, '') = '';
			

BEGIN


if (coalesce(ie_finalizar_p,'N') = 'S') then

	dt_inicio_w 	:= establishment_timezone_utils.startofday(coalesce(dt_evento_p,clock_timestamp()));
	dt_fim_w 	:= clock_timestamp();

else

	dt_inicio_w 	:= establishment_timezone_utils.startofday(coalesce(dt_evento_p,clock_timestamp()) - 1);
	dt_fim_w 	:= establishment_timezone_utils.endOfDay(coalesce(dt_inicio_w,clock_timestamp()));

end if;

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	ie_tipo_meta_w,
	qt_minutos_retr_w,
	dt_inicio_meta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
		begin
		
		qt_horas_consistencia_w		:= (qt_minutos_retr_w/1440);
		dt_horas_inicio_consist_w	:= (dt_fim_w - qt_horas_consistencia_w);
		
		if (dt_inicio_meta_w < dt_horas_inicio_consist_w) then	
		
			
			select	count(*),
				min(nr_sequencia)
			into STRICT	contador_w,
				nr_seq_escala_tev_w
			from	escala_tev t
			where	t.nr_atendimento = nr_atendimento_p
			and	(t.dt_liberacao IS NOT NULL AND t.dt_liberacao::text <> '')
			and	coalesce(t.dt_inativacao::text, '') = ''
			and	t.ie_situacao = 'A'
			and	t.ie_risco in ('A', 'M')
			and	t.dt_liberacao between dt_inicio_w and dt_fim_w;
			
			if (contador_w > 0) then
				begin
				
				Select	max(dt_avaliacao)
				into STRICT	dt_avaliacao_tev_w
				from	escala_tev
				where	nr_sequencia = 	nr_seq_escala_tev_w;
				
				select 	count(*)
				into STRICT	qt_proc_tev_w
				from   	prescr_medica a,
					prescr_procedimento b,
					procedimento c
				where  	a.nr_prescricao = b.nr_prescricao
				and    	a.nr_atendimento = nr_atendimento_p
				and    	b.cd_procedimento = c.cd_procedimento
				and    	b.ie_origem_proced = c.ie_origem_proced
				and	a.dt_prescricao  between dt_avaliacao_tev_w and dt_avaliacao_tev_w + 1
				and    	c.ie_protocolo_tev = 'S';		
				
				select 	count(*)
				into STRICT	qt_mat_tev_w
				from   	prescr_medica a,
					prescr_material b,
					material c
				where  	a.nr_prescricao = b.nr_prescricao
				and    	b.cd_material = c.cd_material
				and    	a.nr_atendimento = nr_atendimento_p
				and	a.dt_prescricao  between dt_avaliacao_tev_w and dt_avaliacao_tev_w + 1
				and    	c.ie_protocolo_tev = 'S';
				
				select 	count(*)
				into STRICT	qt_recomend_tev_w
				from   	prescr_medica a,
					prescr_recomendacao b,
					tipo_recomendacao d
				where  	a.nr_prescricao  = b.nr_prescricao
				and	b.cd_recomendacao = d.cd_tipo_recomendacao
				and    	a.nr_atendimento = nr_atendimento_p
				and	a.dt_prescricao  between dt_avaliacao_tev_w and dt_avaliacao_tev_w + 1
				and    	ie_protocolo_tev = 'S';
				
				
				if (qt_proc_tev_w + qt_mat_tev_w + qt_recomend_tev_w = 0 ) then
				
					ie_status_w := 'N';
					
				else		
			
					ie_status_w := 'A';
					
				end if;
				
				if (ie_tipo_meta_w = 'D' ) then
			
					Select  nextval('tof_meta_atend_hor_seq')
					into STRICT	nr_seq_meta_atend_w
					;			
					
					insert into tof_meta_atend_hor(	nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													dt_atualizacao_nrec,
													nm_usuario_nrec,
													nr_seq_meta_atend,
													ie_status,
													dt_geracao,
													ds_observacao,
													dt_liberacao)
											values (	nr_seq_meta_atend_w,
													clock_timestamp(),
													nm_usuario_p,
													clock_timestamp(),
													nm_usuario_p,
													nr_sequencia_w,
													ie_status_w,
													dt_fim_w,
													'',
													clock_timestamp());
													
					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
												
				end if;						
				
					
				end;
			end if;
			
			update	tof_meta_atend
			set 	ie_status = ie_status_w 
			where 	nr_sequencia = nr_sequencia_w;
			
			if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		
		end if;
		end;
	end if;
	
	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tof_verificar_meta_tev ( nr_atendimento_p text, nm_usuario_p text, dt_evento_p timestamp, ie_finalizar_p text default 'N') FROM PUBLIC;

