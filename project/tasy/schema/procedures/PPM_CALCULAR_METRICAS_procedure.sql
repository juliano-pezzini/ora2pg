-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ppm_calcular_metricas (nm_usuario_p text, dt_referencia_p timestamp, nr_seq_metrica_p bigint default 0, nr_seq_diretoria_p bigint default null, nr_seq_gerencia_p bigint default null) AS $body$
DECLARE


nr_seq_ppm_metrica_w		bigint;
ie_tipo_metrica_w		varchar(5);
cd_pessoa_fisica_obj_w		varchar(10);
nr_seq_metrica_w		bigint;
qt_result_w			bigint;
nr_seq_depto_w			bigint;
nr_seq_gerencia_w		bigint;
nr_seq_grupo_w			bigint;
nm_procedure_w			varchar(50);
dt_referencia_w			timestamp;

c01 CURSOR FOR
SELECT	nr_sequencia,
	ie_tipo,
	nm_procedure
from	ppm_metrica
where	ie_situacao = 'A'
and	(nm_procedure IS NOT NULL AND nm_procedure::text <> '')
and (nr_sequencia = nr_seq_metrica_p or coalesce(nr_seq_metrica_p,0) = 0);

c02 CURSOR FOR
SELECT	c.cd_pessoa_fisica,
	a.nr_sequencia	
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c
where	a.nr_seq_metrica	= nr_seq_ppm_metrica_w
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia
and	(c.cd_pessoa_fisica IS NOT NULL AND c.cd_pessoa_fisica::text <> '')
and	coalesce(nr_seq_diretoria_p::text, '') = ''
and	coalesce(nr_seq_gerencia_p::text, '') = ''
and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp() + interval '1 days');

c03 CURSOR FOR
SELECT	distinct
	a.nr_sequencia,
	d.nr_sequencia nr_seq_depto
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c,
	diretoria_philips d
where	a.nr_seq_metrica	= nr_seq_ppm_metrica_w
and	c.nr_seq_diretoria	= coalesce(nr_seq_diretoria_p,c.nr_seq_diretoria)
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia
and	d.nr_sequencia		= c.nr_seq_diretoria
and	d.ie_situacao 		= 'A'
and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp() + interval '1 days');

c04 CURSOR FOR
SELECT	distinct
	a.nr_sequencia,
	c.nr_seq_gerencia
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c
where	a.nr_seq_metrica	= nr_seq_ppm_metrica_w
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia
and	c.nr_seq_gerencia	= coalesce(nr_seq_gerencia_p,c.nr_seq_gerencia)
and	(c.nr_seq_gerencia IS NOT NULL AND c.nr_seq_gerencia::text <> '')
and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp() + interval '1 days');

c05 CURSOR FOR
SELECT	c.nr_seq_grupo,
	a.nr_sequencia
from	ppm_objetivo_metrica a,
	ppm_objetivo_meta b,
	ppm_objetivo c
where	a.nr_seq_metrica	= nr_seq_ppm_metrica_w
and	a.nr_seq_meta		= b.nr_sequencia
and	b.nr_seq_objetivo	= c.nr_sequencia
and	(c.nr_seq_grupo IS NOT NULL AND c.nr_seq_grupo::text <> '')
and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp() + interval '1 days');

	procedure EXECUTA_PROCEDURE(	nm_procedure_p		text,
					nr_seq_ppm_metrica_p	bigint,
					nr_seq_metrica_p	bigint,
					cd_pessoa_fisica_obj_p	text) is

	qt_proc_w			bigint;
	ds_separador_w			varchar(10) := obter_separador_bv;
	ds_parametros_w			varchar(2000);
	
	
BEGIN
	
	select	count(*)
	into STRICT	qt_proc_w
	from	user_objects
	where	object_name = nm_procedure_p;
	
	--Se ainda não foi gerado o resultado para a metrica de acordo com a periodiocidade
	if (qt_proc_w > 0) and
		--(qt_result_w = 0) and
		(nm_procedure_p IS NOT NULL AND nm_procedure_p::text <> '') then
		
		ds_parametros_w	:= 	'nr_seq_metrica='|| nr_seq_ppm_metrica_p	||ds_separador_w||
					'nr_seq_objetivo_metrica='|| nr_seq_metrica_p	||ds_separador_w||
					'cd_pessoa_fisica='|| cd_pessoa_fisica_obj_p	||ds_separador_w||
					'nm_usuario='|| 'TasyPPM'			||ds_separador_w||
					'dt_referencia='|| to_char(dt_referencia_w,'dd/mm/yyyy') ||ds_separador_w;
	
		CALL exec_sql_dinamico_bv('TasyPPM','begin '|| nm_procedure_p ||'(:nr_seq_metrica,:nr_seq_objetivo_metrica,:cd_pessoa_fisica,:nm_usuario,:dt_referencia); end;',ds_parametros_w);			
		
	end if;
	
	end;

begin

if (PKG_DATE_UTILS.end_of(dt_referencia_p,'MONTH') < PKG_DATE_UTILS.end_of(clock_timestamp(),'MONTH')) then
	dt_referencia_w := PKG_DATE_UTILS.end_of(dt_referencia_p,'MONTH');
elsif (PKG_DATE_UTILS.end_of(dt_referencia_p,'MONTH') > PKG_DATE_UTILS.end_of(clock_timestamp(),'MONTH')) then
	dt_referencia_w := PKG_DATE_UTILS.end_of(dt_referencia_p,'MONTH');	
elsif (nm_usuario_p <> 'Tasy') then --Quando manual e mes atual, é sempre 
	dt_referencia_w := dt_referencia_p - 1;
else
	dt_referencia_w := dt_referencia_p; --Quando é pela JOB utiliza a data atual
end if;

open C01;
loop
fetch C01 into	
	nr_seq_ppm_metrica_w,
	ie_tipo_metrica_w,
	nm_procedure_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		
	--Calcular métricas individuais
	open C02;
	loop
	fetch C02 into	
		cd_pessoa_fisica_obj_w,
		nr_seq_metrica_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		/*if	(ie_tipo_metrica_w = 'M') then		
			select	count(*)
			into	qt_result_w
			from	ppm_objetivo_result a
			where	a.nr_seq_metrica = nr_seq_metrica_w
			and	PKG_DATE_UTILS.start_of(dt_referencia,'MONTH') = PKG_DATE_UTILS.start_of(sysdate,'MONTH')
			and	exists
				(select	1
				from	ppm_objetivo_metrica x
				where	x.nr_sequencia = a.nr_seq_metrica
				and	x.nr_seq_metrica = nr_seq_ppm_metrica_w);	
		end if;*/
	
		EXECUTA_PROCEDURE(nm_procedure_w,nr_seq_ppm_metrica_w,nr_seq_metrica_w,cd_pessoa_fisica_obj_w);		
		
		end;
	end loop;
	close C02;
	
	--Cursor para diretoria
	open C03;
	loop
	fetch C03 into	
		nr_seq_metrica_w,
		nr_seq_depto_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		
		EXECUTA_PROCEDURE(nm_procedure_w, nr_seq_ppm_metrica_w, nr_seq_metrica_w, null);	
		
		--PPM_CALCULAR_METRICA_DEPTO(nr_seq_ppm_metrica_w, nr_seq_metrica_w, dt_referencia_w, nm_usuario_p, nr_seq_depto_w, null, null);				
		
		end;
	end loop;
	close C03;
	
	--Cursor para as Gerência
	open C04;
	loop
	fetch C04 into	
		nr_seq_metrica_w,
		nr_seq_gerencia_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin

		EXECUTA_PROCEDURE(nm_procedure_w, nr_seq_ppm_metrica_w, nr_seq_metrica_w, null);	
		
		--PPM_CALCULAR_METRICA_DEPTO(nr_seq_ppm_metrica_w, nr_seq_metrica_w, dt_referencia_w, nm_usuario_p, null, nr_seq_gerencia_w, null);				
		
		end;
	end loop;
	close C04;		
	
	--Cursor para os grupos
	open C05;
	loop
	fetch C05 into	
		nr_seq_grupo_w,
		nr_seq_metrica_w;		
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		
		EXECUTA_PROCEDURE(nm_procedure_w, nr_seq_ppm_metrica_w, nr_seq_metrica_w, null);	
		
		--PPM_CALCULAR_METRICA_DEPTO(nr_seq_ppm_metrica_w, nr_seq_metrica_w, dt_referencia_w, nm_usuario_p, nr_seq_depto_w, nr_seq_gerencia_w, nr_seq_grupo_w);				
		
		end;
	end loop;
	close C05;		
	
	end;
end loop;
close C01;

--Envia o comunicado no fechamento do mês
if (nm_usuario_p = 'Tasy') and (trunc(clock_timestamp()) = trunc(last_day(clock_timestamp()))) then
	PPM_ENVIAR_COMUNIC_INTERNA;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ppm_calcular_metricas (nm_usuario_p text, dt_referencia_p timestamp, nr_seq_metrica_p bigint default 0, nr_seq_diretoria_p bigint default null, nr_seq_gerencia_p bigint default null) FROM PUBLIC;

