-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (	nr_seq_old bigint, 
			nr_seq_new bigint, 
			nr_conta bigint);


CREATE OR REPLACE PROCEDURE estornar_conta_paciente ( nr_interno_conta_p bigint, nm_usuario_p text, ie_cancel_conta_dest_p text default null, nr_seq_conta_origem_p bigint default null) AS $body$
DECLARE

/*
 ( Processo de estorno de contas processadas - San Javier)
	ie_cancel_conta_dest_p = N    -> Quando esta dentro de um processo em que a conta passada em NR_INTERNO_CONTA_P e a conta destino de um processamento de conta de convenio
	nr_seq_conta_origem_p ->  Se a conta em NR_INTERNO_CONTA_P e uma conta de destino de um processamento, pode passar a conta de origem do processamento.
*/
type Vetor is table of campos index by integer;

nr_interno_conta_w           		bigint;
nr_interno_conta_nova_w      		bigint;
nr_interno_conta_ler_w		bigint;
nr_sequencia_w			bigint;
nr_seq_nova_w			bigint;
nr_seq_desc_dest_w		bigint;
nr_seq_desc_origem_w		bigint;
cd_acao_w			varchar(1);
qt_adic_w			smallint;
qt_acao_w			smallint;
cont_w				integer;
cont_desc_w			integer;
nr_seq_apac_w			bigint;
cd_estrutura_w		integer;
vl_conta_w			double precision;
ie_calcula_w			varchar(1);
pr_desconto_w			real;
vl_desconto_w			double precision;
vl_liquido_w			double precision;
cd_setor_atendimento_w		integer;
cd_medico_w			varchar(10);

i				integer := 1;
Vetor_Proc_w			Vetor;
ie_desc_material_w			varchar(2);
nr_atendimento_w			bigint;
cd_convenio_parametro_w		bigint;
cd_categoria_parametro_w		varchar(20);
cd_estabelecimento_w		bigint;
ie_gerar_pacote_canc_nota_w	varchar(01);
nr_prescricao_proc_w		bigint;
nr_seq_prescr_proc_w		bigint;
nr_seq_etapa_w			bigint;

cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_w			bigint;
nr_seq_atend_pacote_w		bigint;
ds_erro_w			varchar(1000);

ie_manter_data_w		varchar(1):= 'N';

ie_regra_disp_w			varchar(1):= 'N';
cd_estabelecimento_ww		bigint;
cd_material_ww			integer;
cd_convenio_ww			integer;
cd_categoria_ww			varchar(10);
cd_setor_ww			integer;
dt_entrada_ww			timestamp;
dt_atendimento_ww		timestamp;
nr_seq_item_w			bigint;
nr_seq_protocolo_w		bigint;
nr_protocolo_w			varchar(40);
ie_inserir_conta_estornada_w	varchar(1);
cd_responsavel_w		varchar(10);
qt_regra_estorno_w		bigint;
nr_seq_proc_origem_pac_w	procedimento_paciente.nr_sequencia%type;
nr_seq_proc_pac_w		procedimento_paciente.nr_sequencia%type;
nr_seq_proc_pacote_w		procedimento_paciente.nr_sequencia%type;
nr_seq_nova_pacote_w		procedimento_paciente.nr_sequencia%type;
ie_gerou_pacote_w		varchar(1)	:= 'N';
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
qt_regra_sh_w			bigint := 0;
ie_finaliza_ult_etapa_w		varchar(1);
ie_baixa_itens_pend_w		varchar(1) := 'S';
IE_COMPLEX_AIH_ORIG_w		varchar(2);
ds_nls_territory_w		varchar(64);
ie_tipo_prot_est_w		protocolo_convenio.ie_tipo_protocolo%type;
nr_seq_valor_proc_w		proc_paciente_valor.nr_sequencia%type;
nr_seq_valor_proc_pacote_w	proc_paciente_valor.nr_sequencia%type;
nr_seq_proc_partic_w		procedimento_paciente.nr_sequencia%type;
nr_seq_valor_mat_w		mat_atend_paciente_valor.nr_sequencia%type;
nr_seq_mat_partic_w		material_atend_paciente.nr_sequencia%type;
nr_seq_conta_des_w		conta_paciente.nr_interno_conta%type;
nr_interno_conta_orig_w		conta_paciente.nr_interno_conta%type;
ie_status_conta_des_w		conta_paciente.ie_status_acerto%type;
ie_cancel_conta_orig_w		conta_paciente.ie_cancelamento%type	:= 'N';
ie_conta_deducao_w			varchar(1)	:= 'N';

ie_ctb_online_w                 ctb_param_lote_receita.ie_ctb_online%type;
ie_geracao_w		        ctb_regra_geracao_lote_rec.ie_geracao%type;

c01 CURSOR FOR
SELECT 	nr_sequencia,
	CASE WHEN cd_acao='1' THEN '2'  ELSE '1' END  cd_acao, 
	nr_interno_conta_w, 1, -1
from	procedimento_paciente a
where	nr_interno_conta	= nr_interno_conta_p
/* Coaseguro y deducible - Mexico */

and	((exists (	SELECT	1
			from	conta_pac_ded_conv_item x
			where	x.nr_seq_propaci_dest = a.nr_sequencia
			and (coalesce(nr_seq_conta_origem_p::text, '') = '' or 
				exists ( select 1
					 from	conta_pac_deducao_conv y
					 where  y.nr_sequencia = x.nr_seq_deducao_conv
					 and 	y.nr_seq_conta_orig = nr_seq_conta_origem_p))) or ie_cancel_conta_orig_w = 'N') or ie_conta_deducao_w = 'N')

union

select	a.nr_sequencia, 
	a.cd_acao, 
	nr_interno_conta_nova_w, 2, 1
from	procedimento_paciente a
where	a.nr_interno_conta	= nr_interno_conta_p
and	coalesce(a.nr_seq_proc_pacote,0) <> nr_sequencia
/* Coaseguro y deducible - Mexico */

and (ie_cancel_conta_orig_w = 'N' or ie_conta_deducao_w = 'N')
order by 1;

c02 CURSOR FOR
SELECT 	nr_sequencia,
	CASE WHEN cd_acao='1' THEN '2'  ELSE '1' END  cd_acao, 
	nr_interno_conta_w, 1, -1
from	Material_atend_paciente a
where	nr_interno_conta	= nr_interno_conta_p
/* Coaseguro y deducible - Mexico */

and (exists (	SELECT	1
				from	conta_pac_ded_conv_item x
				where	x.nr_seq_matpaci_dest = a.nr_sequencia	
				and (coalesce(nr_seq_conta_origem_p::text, '') = '' or 
					exists ( select 1
						 from	conta_pac_deducao_conv y
						 where  y.nr_sequencia = x.nr_seq_deducao_conv
						 and 	y.nr_seq_conta_orig = nr_seq_conta_origem_p))) or ie_cancel_conta_orig_w = 'N' or ie_conta_deducao_w = 'N')

union

select	a.nr_sequencia, 
	a.cd_acao, 
	nr_interno_conta_nova_w, 2, 1
from	Material_atend_paciente a
where	a.nr_interno_conta	= nr_interno_conta_p
/* Coaseguro y deducible - Mexico */

and (ie_cancel_conta_orig_w = 'N' or ie_conta_deducao_w = 'N');

c03 CURSOR FOR
SELECT	cd_estrutura,
	vl_conta,
	ie_calcula,
	pr_desconto,
	vl_desconto,
	vl_liquido,
	cd_setor_atendimento,
	cd_medico,
	ie_desc_material
from	conta_paciente_desc_item
where	nr_seq_desconto	= nr_seq_desc_origem_w;

C030 CURSOR FOR
	SELECT	c.nr_prescricao,
		c.nr_sequencia
	from	prescr_procedimento c,
		procedimento_paciente a
	where	a.nr_prescricao			= c.nr_prescricao
	and	a.nr_sequencia_prescricao	= c.nr_sequencia
	and	coalesce(c.dt_baixa::text, '') = ''
	and	a.nr_sequencia			= nr_sequencia_w
	and	coalesce(a.nr_seq_exame::text, '') = ''
	order by 1;
	
C10 CURSOR FOR
	SELECT	*
	from	conta_paciente_etapa
	where	nr_interno_conta		= nr_interno_conta_p;
	
C20 CURSOR FOR
	SELECT	*
	from	conta_paciente_desconto
	where	nr_interno_conta 	= nr_interno_conta_p;
	
c40 CURSOR FOR
	SELECT 	a.*
	from 	atendimento_pacote 	a,
		procedimento_paciente	c,
		conta_paciente 		b
	where 	a.nr_atendimento = b.nr_atendimento
	and 	b.nr_interno_conta = c.nr_interno_conta
	and 	a.nr_seq_procedimento = c.nr_sequencia
	and 	b.nr_interno_conta = nr_interno_conta_p;
	
C50 CURSOR FOR
	SELECT	a.nr_seq_material nr_seq_item
	from	material_atend_paciente b,
		mat_atend_paciente_valor a
	where	b.nr_interno_conta 	= nr_interno_conta_nova_w
	and	a.nr_seq_material	= b.nr_sequencia
	
union all

	SELECT	a.nr_seq_procedimento nr_seq_item
	from	procedimento_paciente b,
		proc_paciente_valor a
	where	b.nr_interno_conta 	= nr_interno_conta_nova_w
	and	a.nr_seq_procedimento	= b.nr_sequencia
	order by nr_seq_item;
	
C60 CURSOR FOR
	SELECT	a.*
	from	atendimento_pacote a
	where	a.nr_seq_proc_origem in (SELECT x.nr_sequencia
		from 	procedimento_paciente x
		where 	x.nr_interno_conta =  nr_interno_conta_p);
		
C70 CURSOR FOR
	SELECT 	nr_sequencia
	from	procedimento_paciente
	where	nr_interno_conta = nr_interno_conta_p
	and	coalesce(nr_seq_proc_pacote,0) = nr_sequencia
	order by 1;
		
		
	
c10_w	c10%rowtype;
c20_w	c20%rowtype;
c40_w	c40%rowtype;
c60_w	c60%rowtype;



BEGIN

ie_manter_data_w 	:= obter_valor_param_usuario(67, 416, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_finaliza_ult_etapa_w	:= obter_valor_param_usuario(67, 707, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_baixa_itens_pend_w	:= obter_valor_param_usuario(67, 731, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

nr_interno_conta_orig_w := coalesce(nr_seq_conta_origem_p,0);

begin
select 	max(ie_complexidade)
into STRICT	IE_COMPLEX_AIH_ORIG_w
from 	sus_aih_unif
where 	nr_interno_conta = nr_interno_conta_p;
exception
	when others then
		IE_COMPLEX_AIH_ORIG_w:= '';
end;

select	nextval('conta_paciente_seq')
into STRICT	nr_interno_conta_w
;

insert into Conta_Paciente(
	nr_atendimento,
	dt_acerto_conta, 
	ie_status_acerto, 
	dt_periodo_inicial,
	dt_periodo_final,
	dt_atualizacao,
	nm_usuario, 
	cd_convenio_parametro,
	nr_protocolo, 
	dt_mesano_referencia,
	dt_mesano_contabil, 
	cd_convenio_calculo,
	cd_categoria_calculo,
	nr_interno_conta,
	nr_seq_protocolo,
	cd_categoria_parametro,
	ds_inconsistencia,
	dt_recalculo, 
	cd_estabelecimento, 
	vl_desconto, 
	vl_conta,
	ie_tipo_atend_tiss,
	nr_seq_saida_consulta,
	nr_seq_saida_int,
	nr_seq_saida_spsadt,
	dt_alta_tiss,
	dt_entrada_tiss,
	ie_tipo_fatur_tiss,
	ie_tipo_consulta_tiss,
	cd_autorizacao,
	ie_tipo_atend_conta,
	nr_seq_conta_origem)
SELECT	a.nr_atendimento,	
	CASE WHEN ie_manter_data_w='N' THEN  a.dt_acerto_conta + (1/86400)  ELSE a.dt_acerto_conta END ,
	a.ie_status_acerto,
	a.dt_periodo_inicial,	
	a.dt_periodo_final, 
	clock_timestamp(),
	nm_usuario_p, 
	a.cd_convenio_parametro, 
	'0', 
	trunc(b.dt_ref_valida,'dd'),
	a.dt_mesano_contabil, 
	a.cd_convenio_calculo, 
	a.cd_categoria_calculo,
	nr_interno_conta_w, 
	null, 
	a.cd_categoria_parametro,
	a.ds_inconsistencia, 
	a.dt_recalculo, 
	a.cd_estabelecimento, 
	a.vl_desconto, 
	a.vl_conta,
	a.ie_tipo_atend_tiss,
	a.nr_seq_saida_consulta,
	a.nr_seq_saida_int,
	a.nr_seq_saida_spsadt,
	a.dt_alta_tiss,
	a.dt_entrada_tiss,
	a.ie_tipo_fatur_tiss,
	a.ie_tipo_consulta_tiss, 
	a.cd_autorizacao,
	a.ie_tipo_atend_conta,
	nr_interno_conta_p
from	Convenio b, 
	conta_paciente a
where	nr_interno_conta	= nr_interno_conta_p
and	b.cd_convenio		= a.cd_convenio_parametro;

select	nextval('conta_paciente_seq')
into STRICT	nr_interno_conta_nova_w
;
/*Criando a conta em provisorio*/

insert into Conta_Paciente(
	nr_atendimento,
	dt_acerto_conta, 
	ie_status_acerto, 
	dt_periodo_inicial,
	dt_periodo_final, 
	dt_atualizacao, 
	nm_usuario, 
	cd_convenio_parametro,
	nr_protocolo, 
	dt_mesano_referencia, 
	dt_mesano_contabil, 
	cd_convenio_calculo,
	cd_categoria_calculo, 
	nr_interno_conta, 
	nr_seq_protocolo, 
	cd_categoria_parametro,
	ds_inconsistencia, 
	dt_recalculo, 
	cd_estabelecimento, 
	vl_desconto, 
	vl_conta,
	ie_tipo_atend_tiss,
	nr_seq_saida_consulta,
	nr_seq_saida_int,
	nr_seq_saida_spsadt,
	dt_alta_tiss,
	dt_entrada_tiss,
	ie_tipo_fatur_tiss,
	ie_tipo_consulta_tiss,
	ie_tipo_atend_conta,
	nr_seq_conta_origem)
SELECT	a.nr_atendimento,
	CASE WHEN ie_manter_data_w='N' THEN  a.dt_acerto_conta  + (2/86400)  ELSE a.dt_acerto_conta END ,
	1, a.dt_periodo_inicial,
	a.dt_periodo_final, 
	clock_timestamp(), 
	nm_usuario_p, 
	a.cd_convenio_parametro,
	'0', 
	trunc(b.dt_ref_valida,'dd'), 
	a.dt_mesano_contabil, 
	a.cd_convenio_calculo,
	a.cd_categoria_calculo, 
	nr_interno_conta_nova_w, 
	null,
	a.cd_categoria_parametro, 
	a.ds_inconsistencia, 
	a.dt_recalculo,
	a.cd_estabelecimento, 
	vl_desconto, 
	vl_conta,
	a.ie_tipo_atend_tiss,
	a.nr_seq_saida_consulta,
	a.nr_seq_saida_int,
	a.nr_seq_saida_spsadt,
	a.dt_alta_tiss,
	a.dt_entrada_tiss,
	a.ie_tipo_fatur_tiss,
	a.ie_tipo_consulta_tiss,
	a.ie_tipo_atend_conta,
	nr_interno_conta_p
from	convenio b, 
	conta_paciente a
where	nr_interno_conta	= nr_interno_conta_p
and	b.cd_convenio		= a.cd_convenio_parametro;

begin
select 	max(cd_responsavel)
into STRICT	cd_responsavel_w
from 	conta_paciente
where 	nr_interno_conta = nr_interno_conta_p;

update	conta_paciente
set 	cd_responsavel = coalesce(cd_responsavel_w, cd_responsavel)
where 	nr_interno_conta in (nr_interno_conta_nova_w, nr_interno_conta_w);
exception
	when others then
	cd_responsavel_w:= '';
end;

update	sus_aih
set	nr_interno_conta	= nr_interno_conta_nova_w
where	nr_interno_conta	= nr_interno_conta_p;

update	sus_aih_unif
set	nr_interno_conta	= nr_interno_conta_nova_w
where	nr_interno_conta	= nr_interno_conta_p;

update	sus_laudo_paciente
set	nr_interno_conta	= nr_interno_conta_nova_w
where	nr_interno_conta	= nr_interno_conta_p;

select	nextval('sus_apac_movto_seq')
into STRICT	nr_seq_apac_w
;

insert into sus_apac_movto(
	nr_sequencia,
	nr_apac,
	nr_atendimento,
	dt_competencia,
	cd_unidade,
	cd_proc_principal,
	ie_origem_proc_princ,
	dt_inicio_validade,
	dt_fim_validade,
	dt_emissao,
	ie_tipo_apac,
	cd_motivo_cobranca,
	dt_ocorrencia,
	cd_medico_resp,
	cd_tratamento,
	cd_varia_atrib,
	dt_atualizacao,
	nm_usuario,
	nr_cartao_nac_sus,
	dt_inicio_tratamento,
	cd_cid_principal,
	cd_cid_secundario,
	ie_indicado_tx,
	ie_inscrito_tx,
	dt_inscricao_tx,
	qt_tx_realizado,
	dt_primeiro_tx,
	dt_segundo_tx,
	dt_terceiro_tx,
	qt_creatinina,
	qt_ureia_pre,
	qt_ureia_pos,
	ie_hepatite_c,
	ie_hbsag,
	ie_hiv,
	ie_hla,
	cd_cid_topografia,
	cd_cid_morfologia,
	ie_metastase,
	ie_finalidade,
	dt_diagnostico,
	cd_estagio,
	dt_pri_tratamento,
	dt_seg_tratamento,
	dt_ter_tratamento,
	cd_cid_pri_radiacao,
	cd_cid_seg_radiacao,
	cd_cid_ter_radiacao,
	qt_campo_planejado,
	qt_meses_prev,
	ie_resultado_exame,
	nr_aih_tx,
	dt_transplante,
	cd_proc_tx,
	ie_origem_proc_tx,
	dt_consistencia,
	nm_usuario_cons,
	ds_inconsistencia,
	nr_interno_conta,
	cd_nacionalidade)
SELECT	nr_seq_apac_w,
	nr_apac,
	nr_atendimento,
	dt_competencia,
	cd_unidade,
	cd_proc_principal,
	ie_origem_proc_princ,
	dt_inicio_validade,
	dt_fim_validade,
	dt_emissao,
	ie_tipo_apac,
	cd_motivo_cobranca,
	dt_ocorrencia,
	cd_medico_resp,
	cd_tratamento,
	cd_varia_atrib,
	clock_timestamp(),
	nm_usuario_p,
	nr_cartao_nac_sus,
	dt_inicio_tratamento,
	cd_cid_principal,
	cd_cid_secundario,
	ie_indicado_tx,
	ie_inscrito_tx,
	dt_inscricao_tx,
	qt_tx_realizado,
	dt_primeiro_tx,
	dt_segundo_tx,
	dt_terceiro_tx,
	qt_creatinina,
	qt_ureia_pre,
	qt_ureia_pos,
	ie_hepatite_c,
	ie_hbsag,
	ie_hiv,
	ie_hla,
	cd_cid_topografia,
	cd_cid_morfologia,
	ie_metastase,
	ie_finalidade,
	dt_diagnostico,
	cd_estagio,
	dt_pri_tratamento,
	dt_seg_tratamento,
	dt_ter_tratamento,
	cd_cid_pri_radiacao,
	cd_cid_seg_radiacao,
	cd_cid_ter_radiacao,
	qt_campo_planejado,
	qt_meses_prev,
	ie_resultado_exame,
	nr_aih_tx,
	dt_transplante,
	cd_proc_tx,
	ie_origem_proc_tx,
	dt_consistencia,
	nm_usuario_cons,
	ds_inconsistencia,
	nr_interno_conta_nova_w,
	cd_nacionalidade
from	sus_apac_movto
where	nr_interno_conta	= nr_interno_conta_p;

update	sus_apac_movto
set	ie_status_apac		= 'D'
where	nr_interno_conta	= nr_interno_conta_p;

select	nextval('sus_apac_unif_seq')
into STRICT	nr_seq_apac_w
;

insert into sus_apac_unif(
	nr_sequencia         ,
	nr_apac              ,
	cd_estabelecimento   ,
	nr_atendimento       ,
	cd_procedimento      ,
	ie_origem_proced     ,
	dt_competencia       ,
	dt_inicio_validade   ,
	dt_fim_validade      ,
	dt_emissao           ,
	dt_atualizacao       ,
	nm_usuario           ,
	dt_atualizacao_nrec  ,
	nm_usuario_nrec      ,
	ie_tipo_apac         ,
	cd_motivo_cobranca   ,
	cd_medico_responsavel,
	dt_solicitacao       ,
	cd_medico_autorizador,
	dt_autorizacao       ,
	nr_apac_anterior     ,
	dt_ocorrencia        ,
	cd_cid_principal     ,
	cd_cid_secundario    ,
	cd_cid_causa_assoc   ,
	nr_interno_conta     ,
	dt_inicio_tratamento ,
	dt_diagnostico       ,
	cd_carater_internacao,
	cd_cid_topografia    ,
	cd_cid_primeiro_trat ,
	cd_cid_segundo_trat  ,
	cd_cid_terceiro_trat ,
	dt_pri_tratamento    ,
	dt_seg_tratamento    ,
	dt_ter_tratamento    ,
	ie_linfonodos_reg_inv,
	cd_estadio           ,
	cd_grau_histopat     ,
	dt_diag_cito_hist    ,
	ie_tratamento_ant    ,
	ie_finalidade        ,
	cd_cid_pri_radiacao  ,
	cd_cid_seg_radiacao  ,
	cd_cid_ter_radiacao  ,
	nr_campos_pri_radi   ,
	nr_campos_seg_radi   ,
	nr_campos_ter_radi   ,
	dt_inicio_pri_radi   ,
	dt_inicio_seg_radi   ,
	dt_inicio_ter_radi   ,
	dt_fim_pri_radi      ,
	dt_fim_seg_radi      ,
	dt_fim_ter_radi      ,
	ds_sigla_esquema     ,
	qt_meses_planejados  ,
	qt_meses_autorizados ,
	dt_pri_dialise       ,
	qt_altura_cm         ,
	qt_peso              ,
	qt_diurese           ,
	qt_glicose           ,
	pr_albumina          ,
	pr_hb                ,
	ie_acesso_vascular   ,
	ie_hiv               ,
	ie_hcv               ,
	ie_hb_sangue         ,
	ie_ultra_abdomen     ,
	ie_continuidade_trat ,
	qt_interv_fistola    ,
	ie_inscrito_cncdo    ,
	nr_tru               ,
	ie_transplantado     ,
	qt_transplante       ,
	ie_gestante          ,
	cd_proc_aih1         ,
	cd_proc_aih2         ,
	cd_proc_aih3         ,
	nr_aih1              ,
	nr_aih2              ,
	dt_cirurgia1         ,
	dt_cirurgia2         ,
	nr_meses_acomp       ,
	dt_acompanhamento    ,
	qt_pont_barros       ,
	nr_tabela_barros	 ,
	dt_inicio_dialise_cli,
	ie_caract_tratamento ,
	ie_acesso_vasc_dial  ,
	ie_acomp_nefrol	     ,
	ie_situacao_usu_ini	 ,
	ie_situacao_trasp	 ,
	ie_dados_apto		 ,
	qt_fosforo			 ,
	qt_ktv_semanal		 ,
	qt_pth				 ,
	ie_inter_clinica	 ,
	ie_peritonite_diag      ,
        cd_medic_antineo_1      ,
        cd_medic_antineo_2      ,
        cd_medic_antineo_3      ,
        cd_medic_antineo_4      ,
        cd_medic_antineo_5      ,
        cd_medic_antineo_6      ,
        cd_medic_antineo_7      ,
        cd_medic_antineo_8      ,
        cd_medic_antineo_9      ,
        cd_medic_antineo_10)
SELECT	nr_seq_apac_w         ,
	nr_apac              ,
	cd_estabelecimento   ,
	nr_atendimento       ,
	cd_procedimento      ,
	ie_origem_proced     ,
	dt_competencia       ,
	dt_inicio_validade   ,
	dt_fim_validade      ,
	dt_emissao           ,
	clock_timestamp()       ,
	nm_usuario_p           ,
	clock_timestamp()  ,
	nm_usuario_p      ,
	ie_tipo_apac         ,
	cd_motivo_cobranca   ,
	cd_medico_responsavel,
	dt_solicitacao       ,
	cd_medico_autorizador,
	dt_autorizacao       ,
	nr_apac_anterior     ,
	dt_ocorrencia        ,
	cd_cid_principal     ,
	cd_cid_secundario    ,
	cd_cid_causa_assoc   ,
	nr_interno_conta_nova_w     ,
	dt_inicio_tratamento ,
	dt_diagnostico       ,
	cd_carater_internacao,
	cd_cid_topografia    ,
	cd_cid_primeiro_trat ,
	cd_cid_segundo_trat  ,
	cd_cid_terceiro_trat ,
	dt_pri_tratamento    ,
	dt_seg_tratamento    ,
	dt_ter_tratamento    ,
	ie_linfonodos_reg_inv,
	cd_estadio           ,
	cd_grau_histopat     ,
	dt_diag_cito_hist    ,
	ie_tratamento_ant    ,
	ie_finalidade        ,
	cd_cid_pri_radiacao  ,
	cd_cid_seg_radiacao  ,
	cd_cid_ter_radiacao  ,
	nr_campos_pri_radi   ,
	nr_campos_seg_radi   ,
	nr_campos_ter_radi   ,
	dt_inicio_pri_radi   ,
	dt_inicio_seg_radi   ,
	dt_inicio_ter_radi   ,
	dt_fim_pri_radi      ,
	dt_fim_seg_radi      ,
	dt_fim_ter_radi      ,
	ds_sigla_esquema     ,
	qt_meses_planejados  ,
	qt_meses_autorizados ,
	dt_pri_dialise       ,
	qt_altura_cm         ,
	qt_peso              ,
	qt_diurese           ,
	qt_glicose           ,
	pr_albumina          ,
	pr_hb                ,
	ie_acesso_vascular   ,
	ie_hiv               ,
	ie_hcv               ,
	ie_hb_sangue         ,
	ie_ultra_abdomen     ,
	ie_continuidade_trat ,
	qt_interv_fistola    ,
	ie_inscrito_cncdo    ,
	nr_tru               ,
	ie_transplantado     ,
	qt_transplante       ,
	ie_gestante          ,
	cd_proc_aih1         ,
	cd_proc_aih2         ,
	cd_proc_aih3         ,
	nr_aih1              ,
	nr_aih2              ,
	dt_cirurgia1         ,
	dt_cirurgia2         ,
	nr_meses_acomp       ,
	dt_acompanhamento    ,
	qt_pont_barros       ,
	nr_tabela_barros	 ,
	dt_inicio_dialise_cli,
	ie_caract_tratamento ,
	ie_acesso_vasc_dial  ,
	ie_acomp_nefrol	     ,
	ie_situacao_usu_ini	 ,
	ie_situacao_trasp	 ,
	ie_dados_apto		 ,
	qt_fosforo			 ,
	qt_ktv_semanal		 ,
	qt_pth				 ,
	ie_inter_clinica	 ,
	ie_peritonite_diag      ,
        cd_medic_antineo_1      ,
        cd_medic_antineo_2      ,
        cd_medic_antineo_3      ,
        cd_medic_antineo_4      ,
        cd_medic_antineo_5      ,
        cd_medic_antineo_6      ,
        cd_medic_antineo_7      ,
        cd_medic_antineo_8      ,
        cd_medic_antineo_9      ,
        cd_medic_antineo_10
from	sus_apac_unif
where	nr_interno_conta	= nr_interno_conta_p;

begin
	select	substr(value,1,64)
	into STRICT	ds_nls_territory_w
	from	v$nls_parameters
	where	parameter = 'NLS_TERRITORY';
exception
when others then
	ds_nls_territory_w:=null;	
end;

/*Verificar se a conta particular esta fechada*/

select	max(nr_seq_conta_des)
into STRICT	nr_seq_conta_des_w
from	conta_pac_deducao_conv
where	nr_seq_conta_orig = nr_interno_conta_p;

select	max(ie_status_acerto)
into STRICT	ie_status_conta_des_w -- status da conta destino
from	conta_paciente
where	nr_interno_conta = nr_seq_conta_des_w;

if (coalesce(nr_interno_conta_orig_w,0) = 0) then
	select	max(nr_seq_conta_orig)
	into STRICT	nr_interno_conta_orig_w
	from	conta_pac_deducao_conv
	where	nr_seq_conta_des = nr_interno_conta_p;
end if;

if (nr_interno_conta_orig_w IS NOT NULL AND nr_interno_conta_orig_w::text <> '') and (coalesce(ie_cancel_conta_dest_p,'S') = 'N') then
	select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_cancel_conta_orig_w
	from	conta_paciente
	where	nr_seq_conta_origem	= nr_interno_conta_orig_w
	and	(ie_cancelamento IS NOT NULL AND ie_cancelamento::text <> '');
else
	ie_cancel_conta_orig_w	:= 'N';
end if;

select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_conta_deducao_w
from	conta_pac_deducao_conv a
where	a.nr_seq_conta_des = nr_interno_conta_p;

OPEN C01;
LOOP
FETCH C01 into
	nr_sequencia_w,
	cd_acao_w, 
	nr_interno_conta_ler_w,
	qt_adic_w,
	qt_acao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select nextval('procedimento_paciente_seq')
	into STRICT nr_seq_nova_w
	;

	/* MATHEUS 08-05-2008 Coloquei NR_SEQ_PROC_INTERNO para copiar*/

	
	if (coalesce(ie_baixa_itens_pend_w,'S') = 'S') then
		
		open C030;
		loop
		fetch C030 into	
			nr_prescricao_proc_w,
			nr_seq_prescr_proc_w;
		EXIT WHEN NOT FOUND; /* apply on C030 */
			begin
			
			update	prescr_procedimento
			set	dt_baixa		= clock_timestamp(),
				cd_motivo_baixa		= 1
			where	nr_prescricao		= nr_prescricao_proc_w
			and	nr_sequencia		= nr_seq_prescr_proc_w;
			
			end;
		end loop;
		close C030;
	
	end if;

	insert into procedimento_paciente(
		nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento, nr_seq_proc_interno,
		dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario,
		cd_medico, cd_convenio, cd_categoria, cd_pessoa_fisica, dt_prescricao,
		ds_observacao, vl_procedimento, vl_medico, vl_anestesista, vl_materiais,
		cd_edicao_amb, cd_tabela_servico, dt_vigencia_preco, cd_procedimento_princ,
		dt_procedimento_princ, dt_acerto_conta, dt_acerto_convenio,
		dt_acerto_medico,	vl_auxiliares, vl_custo_operacional,
		tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao,
		cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao, qt_devolvida,
		cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, cd_medico_executor,
		ie_cobra_pf_pj, nr_laudo, dt_conta, cd_setor_atendimento,
		cd_conta_contabil, cd_procedimento_aih, ie_origem_proced, nr_aih,	
		ie_responsavel_credito,	tx_procedimento, cd_equipamento,ie_valor_informado,
		cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa,
		nr_lote_contabil,	cd_procedimento_convenio, nr_seq_autorizacao,
		ie_tipo_servico_sus, ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador,
		cd_atividade_prof_bpa, nr_interno_conta, nr_seq_proc_princ,	ie_guia_informada,
		dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus,
		cd_especialidade, nm_usuario_original,
		ie_tipo_proc_sus,cd_setor_receita, vl_adic_plant, nr_seq_atepacu, ie_proc_princ_atend,
		nr_seq_proc_pacote, cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame,nr_seq_aih,
		ie_doc_executor,cd_cbo,nr_seq_regra_doc, nr_seq_proc_est, ie_via_acesso, cd_medico_exec_conta, 
		cd_senha, nr_ato_ipasgo)
	SELECT
		nr_seq_nova_w, nr_atendimento, dt_entrada_unidade, cd_procedimento, nr_seq_proc_interno,
		CASE WHEN ie_manter_data_w='N' THEN  dt_procedimento + (qt_adic_w / 86400)  ELSE dt_procedimento END , qt_procedimento * qt_acao_w,
		clock_timestamp(), nm_usuario_p, cd_medico, cd_convenio, cd_categoria,
		cd_pessoa_fisica, dt_prescricao, ds_observacao, vl_procedimento * qt_acao_w,
		vl_medico * qt_acao_w, vl_anestesista * qt_acao_w,
		vl_materiais * qt_acao_w, cd_edicao_amb, cd_tabela_servico,
		dt_vigencia_preco, cd_procedimento_princ,	dt_procedimento_princ,
		CASE WHEN ie_manter_data_w='N' THEN  dt_acerto_conta + (qt_adic_w / 86400)  ELSE dt_acerto_conta END , dt_acerto_convenio,
		dt_acerto_medico,	vl_auxiliares * qt_acao_w, vl_custo_operacional * qt_acao_w,
		tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao,
		cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao_w,
		qt_devolvida * qt_acao_w, cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio,
		cd_medico_executor, ie_cobra_pf_pj,	nr_laudo, CASE WHEN ie_manter_data_w='N' THEN  dt_conta + (qt_adic_w / 86400)  ELSE dt_conta END ,
		cd_setor_atendimento, cd_conta_contabil, cd_procedimento_aih,
		ie_origem_proced,	nr_aih, ie_responsavel_credito, tx_procedimento,
		cd_equipamento, CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END ,
		cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, 0,
		cd_procedimento_convenio, nr_seq_autorizacao, ie_tipo_servico_sus,
		ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador, cd_atividade_prof_bpa,
		nr_interno_conta_ler_w, nr_seq_proc_princ, ie_guia_informada,
		dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus,
		cd_especialidade,	nm_usuario_original, ie_tipo_proc_sus,
		cd_setor_receita, vl_adic_plant * qt_acao_w, nr_seq_atepacu, ie_proc_princ_atend,
		nr_seq_proc_pacote,
		cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame,nr_seq_aih,
		ie_doc_executor,cd_cbo,nr_seq_regra_doc, nr_sequencia_w, ie_via_acesso, cd_medico_exec_conta,
		cd_senha, nr_ato_ipasgo
	from procedimento_paciente
	where nr_sequencia = nr_sequencia_w;

	
	insert into procedimento_participante(
		nr_sequencia, nr_seq_partic, ie_funcao, dt_atualizacao,
		nm_usuario,	cd_pessoa_fisica,	cd_cgc, ie_valor_informado,
		ie_emite_conta, vl_participante, vl_conta, nr_lote_contabil,
		nr_conta_medico, ie_tipo_servico_sus, ie_tipo_ato_sus,
		qt_ponto_sus, vl_ponto_sus, vl_original, ie_responsavel_credito,
		pr_procedimento,cd_cbo,ie_doc_executor,ie_participou_sus, cd_medico_exec_conta)
	SELECT
		nr_seq_nova_w, nr_seq_partic,ie_funcao, clock_timestamp(),
		nm_usuario_p, cd_pessoa_fisica, cd_cgc,
		CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END ,ie_emite_conta,
		vl_participante  * qt_acao_w,	vl_conta  * qt_acao_w,
		0,	nr_conta_medico, ie_tipo_servico_sus,
		ie_tipo_ato_sus, qt_ponto_sus * qt_acao_w,
		vl_ponto_sus * qt_acao_w, vl_original * qt_acao_w,
		ie_responsavel_credito,	pr_procedimento,cd_cbo,
		ie_doc_executor,ie_participou_sus, cd_medico_exec_conta
	from  procedimento_participante
	where nr_sequencia = nr_sequencia_w;

	delete	from proc_paciente_valor
	where	nr_seq_procedimento	= nr_seq_nova_w;
	
	
	Insert into proc_paciente_valor(
		nr_seq_procedimento, nr_sequencia, ie_tipo_valor,
 		dt_atualizacao, nm_usuario, vl_procedimento,
 		vl_medico, vl_anestesista, vl_materiais, vl_auxiliares,
 		vl_custo_operacional, cd_convenio, cd_categoria, pr_valor)
	SELECT
		nr_seq_nova_w, nr_sequencia, ie_tipo_valor,
 		clock_timestamp(), nm_usuario_p, vl_procedimento * qt_acao_w,
 		vl_medico * qt_acao_w, vl_anestesista * qt_acao_w,
 		vl_materiais * qt_acao_w, vl_auxiliares * qt_acao_w,
 		vl_custo_operacional * qt_acao_w, cd_convenio,
 		cd_categoria, pr_valor
	from  proc_paciente_valor
	where nr_seq_procedimento = nr_sequencia_w;
	
	insert into proc_paciente_convenio(
		nr_seq_procedimento, dt_atualizacao, nm_usuario, cd_procedimento, ds_procedimento, cd_unidade_medida, tx_conversao_qtde, cd_grupo, nr_proc_interno)
	
	SELECT
		nr_seq_nova_w, clock_timestamp(), nm_usuario_p, cd_procedimento, ds_procedimento, cd_unidade_medida, tx_conversao_qtde, cd_grupo, nr_proc_interno
	from	proc_paciente_convenio
	where	nr_seq_procedimento = nr_sequencia_w;
	
	insert into sus_valor_proc_paciente(
		nr_sequencia, dt_atualizacao, nm_usuario, dt_competencia,
		qt_ato_medico, qt_ato_anestesista, vl_matmed, vl_diaria, vl_taxas,
		vl_medico, vl_sadt, vl_contraste, vl_gesso, vl_quimioterapia,
		vl_dialise, vl_tph, vl_filme_rx, vl_filme_ressonancia, vl_anestesia,
		vl_sadt_rx, vl_sadt_pc, vl_outros, vl_ato_medico, vl_ato_anestesista,
		cd_faixa_etaria, ie_tipo_atend_bpa, ie_grupo_atend_bpa, vl_ato_sadt,
		vl_ponto_sp, vl_ponto_sadt, ie_versao, cd_porte_anestesico)
	SELECT	nr_seq_nova_w,  clock_timestamp(), nm_usuario_p, dt_competencia,
		qt_ato_medico, qt_ato_anestesista, vl_matmed * qt_acao_w, vl_diaria * qt_acao_w,
		vl_taxas * qt_acao_w, vl_medico * qt_acao_w, vl_sadt * qt_acao_w, vl_contraste * qt_acao_w, 
		vl_gesso * qt_acao_w, vl_quimioterapia * qt_acao_w, vl_dialise * qt_acao_w, vl_tph * qt_acao_w, 
		vl_filme_rx * qt_acao_w, vl_filme_ressonancia * qt_acao_w, vl_anestesia * qt_acao_w,
		vl_sadt_rx * qt_acao_w, vl_sadt_pc * qt_acao_w, vl_outros * qt_acao_w, vl_ato_medico * qt_acao_w, 
		vl_ato_anestesista * qt_acao_w,
		cd_faixa_etaria, ie_tipo_atend_bpa, ie_grupo_atend_bpa, vl_ato_sadt * qt_acao_w,
		vl_ponto_sp * qt_acao_w, vl_ponto_sadt * qt_acao_w, ie_versao, cd_porte_anestesico
	from	sus_valor_proc_paciente
	where	nr_sequencia	= nr_sequencia_w;

	
	insert into sus_aih_opm(
		nr_sequencia,nr_seq_procedimento,nr_nota_fiscal,
		dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
		nr_lote,nr_serie,cd_cgc_fabricante,nr_reg_anvisa)
	SELECT	nextval('sus_aih_opm_seq'),nr_seq_nova_w,nr_nota_fiscal,
		clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
		nr_lote,nr_serie,cd_cgc_fabricante,nr_reg_anvisa
	from	sus_aih_opm
	where	nr_seq_procedimento	= nr_sequencia_w;
	
	insert into sus_aih_uti_neo(
		nr_sequencia,nr_seq_procedimento,nr_meses_gestacional,
		nr_peso,ie_motivo_saida_neo,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec)
	SELECT	nextval('sus_aih_uti_neo_seq'),nr_seq_nova_w,nr_meses_gestacional,
		nr_peso,ie_motivo_saida_neo,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p
	from	sus_aih_uti_neo
	where	nr_seq_procedimento	= nr_sequencia_w;
	
	if (qt_acao_w = 1) then
	
		insert into sus_apac_proc(
			nr_sequencia,
			nr_seq_apac,
			cd_procedimento,
			ie_origem_proced,
			cd_atividade_prof,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			cd_cgc_fornecedor,
			nr_nota_fiscal,
			nr_seq_propaci)
		SELECT	nextval('sus_apac_proc_seq'),
			nr_seq_apac_w,
			b.cd_procedimento,
			b.ie_origem_proced,
			b.cd_atividade_prof,
			b.qt_procedimento,
			clock_timestamp(),
			nm_usuario_p,
			b.cd_cgc_fornecedor,
			b.nr_nota_fiscal,
			nr_seq_nova_w
		from	sus_apac_proc b,
			sus_apac_movto a
		where	a.nr_sequencia		= b.nr_seq_apac
		and	a.nr_interno_conta	= nr_interno_conta_p
		and	not exists (	SELECT	1
					from	sus_apac_proc d,
						sus_apac_movto c
					where	c.nr_sequencia	= d.nr_seq_apac
					and	c.nr_sequencia	= nr_seq_apac_w);

	end if;
	
	if (ie_conta_deducao_w = 'S') and (qt_acao_w = 1) then
		update	conta_pac_ded_conv_item
		set		nr_seq_propaci_dest	= nr_seq_nova_w
		where	nr_seq_propaci_dest = nr_sequencia_w;
	end if;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_valor_proc_w
	from	proc_paciente_valor
	where	nr_seq_procedimento = nr_sequencia_w
	and		ie_tipo_valor in (94,95)
	and		qt_acao_w = 1;
	
	if (qt_acao_w = -1) then
		if (ie_conta_deducao_w = 'N') then
			CALL estornar_conta_ded_conv(nr_interno_conta_p,
								nr_sequencia_w,
								null,
								nr_seq_nova_w,
								null,
								null,
								null,
								qt_acao_w,
								ie_cancel_conta_orig_w,
								nm_usuario_p);
		else
			CALL estornar_conta_ded_conv(nr_interno_conta_p,
						nr_sequencia_w, --nr_seq_propaci_cancel_p
						null, -- 
						null,
						null,
						nr_seq_nova_w,
						null,
						qt_acao_w,
						ie_cancel_conta_orig_w,
						nm_usuario_p);
		end if;
	end if;
	
	if (coalesce(nr_seq_valor_proc_w,0) > 0) then		
		CALL atualizar_valor_proc_deducao(nr_sequencia_w, nr_seq_valor_proc_w, nr_seq_nova_w, nm_usuario_p);
		
		/*Excluir o item com o rateio da deducao*/

		if (ie_status_conta_des_w = 1) then
			select	max(nr_seq_propaci_dest)
			into STRICT	nr_seq_proc_partic_w
			from	conta_pac_ded_conv_item
			where	nr_seq_propaci_origem = nr_sequencia_w;
			
			update	conta_pac_ded_conv_item
			set		nr_seq_propaci_dest  = NULL
			where	nr_seq_propaci_origem = nr_sequencia_w;
			
			delete	from procedimento_paciente
			where	nr_sequencia = nr_seq_proc_partic_w;
			
			delete	from proc_paciente_valor
			where	nr_sequencia = nr_seq_valor_proc_w
			and		nr_seq_procedimento = nr_sequencia_w;
		end if;
	else		
		if	((2 = philips_param_pck.get_cd_pais) or (upper(ds_nls_territory_w) = 'MEXICO')) then -- 2 = Mexico
			insert into propaci_imposto(
				nr_sequencia, nr_seq_propaci, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_tributo, pr_imposto, vl_imposto, nr_seq_regra)
			SELECT	
				nextval('propaci_imposto_seq'), nr_seq_nova_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, cd_tributo, pr_imposto * qt_acao_w, vl_imposto * qt_acao_w, nr_seq_regra
			from	propaci_imposto
			where	nr_seq_propaci = nr_sequencia_w;
		end if;
	end if;

        update	laudo_paciente
        set	nr_seq_proc	= nr_seq_nova_w
        where	nr_seq_proc	= nr_sequencia_w;
	
	Vetor_Proc_w[i].nr_seq_old := nr_sequencia_w;
	Vetor_Proc_w[i].nr_seq_new := nr_seq_nova_w;
	Vetor_Proc_w[i].nr_conta := nr_interno_conta_ler_w;
	i := i + 1;

        if (qt_acao_w = -1) then
                insert into proc_pac_desc_contab(
                        dt_atualizacao,
                        dt_atualizacao_nrec,
                        nm_usuario,
                        nm_usuario_nrec,
                        nr_atendimento,
                        nr_interno_conta,
                        nr_seq_propaci,
                        nr_sequencia,
                        vl_desc_item_conta,
                        vl_desc_item_deduc,
                        vl_desc_item_neg,
                        vl_original,
                        vl_procedimento)
                SELECT  dt_atualizacao,
                        dt_atualizacao_nrec,
                        nm_usuario,
                        nm_usuario_nrec,
                        nr_atendimento,
                        nr_interno_conta_w,
                        nr_seq_nova_w,
                        nextval('proc_pac_desc_contab_seq'),
                        vl_desc_item_conta * qt_acao_w,
                        vl_desc_item_deduc * qt_acao_w,
                        vl_desc_item_neg * qt_acao_w,
                        vl_original * qt_acao_w,
                        vl_procedimento * qt_acao_w
                from    proc_pac_desc_contab
                where   nr_seq_propaci = nr_sequencia_w;
        end if;

	end;
END LOOP;	
CLOSE C01;

CALL link_proc_cancelAcct(nr_interno_conta_nova_w,nr_interno_conta_p,nm_usuario_p);
	
OPEN C02;
LOOP
FETCH C02 into
	nr_sequencia_w,
	cd_acao_w, 
	nr_interno_conta_ler_w,
	qt_adic_w,
	qt_acao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	
	begin
		select	b.cd_estabelecimento,
			a.cd_material,
			a.cd_convenio,
			a.cd_categoria,
			a.cd_setor_atendimento,
			c.dt_entrada,
			a.dt_atendimento
		into STRICT	cd_estabelecimento_ww,
			cd_material_ww,
			cd_convenio_ww,
			cd_categoria_ww,
			cd_setor_ww,
			dt_entrada_ww,
			dt_atendimento_ww
		from	material_atend_paciente a,
			conta_paciente b,
			atendimento_paciente c
		where	c.nr_atendimento 	= b.nr_atendimento
		and	b.nr_interno_conta 	= a.nr_interno_conta
		and	a.nr_sequencia 		= nr_sequencia_w;
	exception
		when others then
			ds_erro_w	:= substr(SQLERRM(SQLSTATE),1,1000);
	
			
	end;
	
	ie_regra_disp_w	:= Obter_Se_Regra_Qt_Fat(cd_estabelecimento_ww,cd_material_ww,cd_convenio_ww,cd_categoria_ww,
				cd_setor_ww,dt_entrada_ww,dt_atendimento_ww);
	
	select nextval('material_atend_paciente_seq')
	into STRICT nr_seq_nova_w
	;
	insert into material_atend_paciente(
		nr_sequencia,
		nr_atendimento, dt_entrada_unidade,	cd_material, dt_atendimento,
		cd_unidade_medida, qt_material, dt_atualizacao,	nm_usuario,
		cd_convenio, cd_categoria, dt_prescricao,	cd_material_prescricao,
		ie_via_aplicacao,	ds_observacao, vl_material, cd_tab_preco_material,
		dt_vigencia_tabela, dt_acerto_conta, dt_acerto_convenio, nr_prescricao,
		nr_sequencia_prescricao, cd_motivo_exc_conta, ds_compl_motivo_excon,
		cd_local_estoque,	dt_atualizacao_estoque, cd_acao, cd_setor_atendimento,
		qt_devolvida, cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio,
		qt_executada, dt_conta,	vl_unitario, cd_proced_referencia, cd_conta_contabil,
		qt_ajuste_conta, nr_aih, ie_valor_informado, cd_estabelecimento_custo,
		cd_tabela_custo, cd_situacao_glosa, nr_lote_contabil,	cd_material_convenio,
		nr_seq_autorizacao, nr_interno_conta, nr_seq_proc_princ, ie_guia_informada,
		cd_especialidade,	nm_usuario_original, vl_tabela_original,
		ie_emite_conta, cd_setor_receita, cd_cgc_fornecedor,
		nr_seq_lote_fornec, cd_material_exec, nr_seq_atepacu,
		nr_seq_proc_pacote, ie_auditoria,nr_seq_aih, ie_estorno_conta, nr_seq_mat_est,
		ie_origem_preco, nr_seq_cor_exec,cd_medico_prescritor, cd_cgc_prestador, tx_material )
	SELECT
		nr_seq_nova_w, nr_atendimento, dt_entrada_unidade,	cd_material, 
		CASE WHEN ie_manter_data_w='N' THEN  dt_atendimento + (qt_adic_w / 86400)  ELSE dt_atendimento END ,
		cd_unidade_medida, qt_material * qt_acao_w, clock_timestamp(),	nm_usuario_p,
		cd_convenio, cd_categoria, dt_prescricao,	cd_material_prescricao,
		ie_via_aplicacao,	ds_observacao, vl_material * qt_acao_w, cd_tab_preco_material,
		dt_vigencia_tabela, CASE WHEN ie_manter_data_w='N' THEN  dt_acerto_conta + (qt_adic_w / 86400)  ELSE dt_acerto_conta END , dt_acerto_convenio, 
		nr_prescricao, nr_sequencia_prescricao, cd_motivo_exc_conta, 
		ds_compl_motivo_excon, cd_local_estoque,	null, 
		cd_acao_w, cd_setor_atendimento, qt_devolvida * qt_acao_w, cd_motivo_devolucao,
		nr_cirurgia, nr_doc_convenio, qt_executada * qt_acao_w, CASE WHEN ie_manter_data_w='N' THEN  dt_conta + (qt_adic_w / 86400)  ELSE dt_conta END , vl_unitario, 
		cd_proced_referencia, cd_conta_contabil, qt_ajuste_conta * qt_acao_w, 
		nr_aih, CASE WHEN qt_adic_w=1 THEN 'S'  ELSE ie_valor_informado END , cd_estabelecimento_custo, 
		cd_tabela_custo, cd_situacao_glosa, 0, cd_material_convenio,
		nr_seq_autorizacao, nr_interno_conta_ler_w, nr_seq_proc_princ, ie_guia_informada,
		cd_especialidade,	nm_usuario_original,  
		vl_tabela_original * qt_acao_w,ie_emite_conta, cd_setor_receita, cd_cgc_fornecedor,
		nr_seq_lote_fornec, cd_material_exec, nr_seq_atepacu,
		nr_seq_proc_pacote, ie_auditoria,nr_seq_aih,
		'S', nr_sequencia_w, ie_origem_preco, CASE WHEN ie_regra_disp_w='S' THEN  1475  ELSE coalesce(nr_seq_cor_exec, 1475) END , cd_medico_prescritor, cd_cgc_prestador, tx_material
	from 	material_atend_paciente
	where nr_sequencia = nr_sequencia_w;

				
	insert into mat_atend_paciente_valor(
		nr_seq_material, nr_sequencia, ie_tipo_valor, dt_atualizacao,
		nm_usuario,	vl_material, cd_convenio, cd_categoria, pr_valor)
	SELECT
		nr_seq_nova_w, nr_sequencia, ie_tipo_valor,
		clock_timestamp(), nm_usuario_p,	vl_material * qt_acao_w,
		cd_convenio, cd_categoria, pr_valor
	from 	mat_atend_paciente_valor
	where nr_seq_material = nr_sequencia_w;
	end;
	
	insert into mat_atend_pac_convenio(
		nr_seq_material, dt_atualizacao, nm_usuario, cd_material, ds_material, cd_unidade_medida, tx_conversao_qtde, cd_grupo,
		ie_tipo_material_conv, nr_proc_interno)
	SELECT
		nr_seq_nova_w, clock_timestamp(), nm_usuario_p, cd_material, ds_material, cd_unidade_medida, tx_conversao_qtde, cd_grupo,
		ie_tipo_material_conv, nr_proc_interno
	from	mat_atend_pac_convenio
	where	nr_seq_material = nr_sequencia_w;
	
	insert	into MAT_ATEND_PACIENTE_OPME(
			nr_sequencia,
			nr_seq_material,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_sequencia_nf,
			dt_emissao,
			nr_nota_fiscal,
			vl_item_nf,
			nr_seq_nf)
	SELECT		nextval('mat_atend_paciente_opme_seq'),
			nr_seq_nova_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_nf,
			dt_emissao,
			nr_nota_fiscal,
			vl_item_nf,
			nr_seq_nf
	from 	MAT_ATEND_PACIENTE_OPME
	where 	nr_seq_material = nr_sequencia_w;
	
	if (ie_conta_deducao_w = 'S') and (qt_acao_w = 1) then
		update	conta_pac_ded_conv_item
		set		nr_seq_matpaci_dest	= nr_seq_nova_w
		where	nr_seq_matpaci_dest = nr_sequencia_w;
	end if;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_valor_mat_w
	from	mat_atend_paciente_valor
	where	nr_seq_material = nr_sequencia_w
	and		ie_tipo_valor in (94,95)
	and		qt_acao_w = 1;
	
	if (qt_acao_w = -1) then
		if (ie_conta_deducao_w = 'N') then
			CALL estornar_conta_ded_conv(nr_interno_conta_p,
								null,
								nr_sequencia_w,
								null,
								nr_seq_nova_w,
								null,
								null,
								qt_acao_w,
								ie_cancel_conta_orig_w,
								nm_usuario_p);
		else
			CALL estornar_conta_ded_conv(nr_interno_conta_p,
					null,
					nr_sequencia_w,
					null,
					null,
					null,
					nr_seq_nova_w,
					qt_acao_w,
					ie_cancel_conta_orig_w,
					nm_usuario_p);
		end if;
	end if;
	
	if (coalesce(nr_seq_valor_mat_w,0) > 0) then		
		CALL atualizar_valor_mat_deducao(nr_sequencia_w, nr_seq_valor_mat_w, nr_seq_nova_w, nm_usuario_p);
			
		/*Excluir o item com o rateio da deducao*/

		if (ie_status_conta_des_w = 1) then
			select	max(nr_seq_matpaci_dest)
			into STRICT	nr_seq_mat_partic_w
			from	conta_pac_ded_conv_item
			where	nr_seq_matpaci_origem = nr_sequencia_w;
			
			update	conta_pac_ded_conv_item
			set		nr_seq_matpaci_dest  = NULL
			where	nr_seq_matpaci_origem = nr_sequencia_w;
		
			delete	from material_atend_paciente
			where	nr_sequencia = nr_seq_mat_partic_w;
			
			delete	from mat_atend_paciente_valor
			where	nr_sequencia = nr_seq_valor_mat_w
			and	nr_seq_material = nr_sequencia_w;
		end if;
	else
		if	((2 = philips_param_pck.get_cd_pais) or (upper(ds_nls_territory_w) = 'MEXICO')) then -- 2 = Mexico
			insert into matpaci_imposto(
				nr_sequencia, nr_seq_matpaci, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_tributo, pr_imposto, vl_imposto, nr_seq_regra)
			SELECT	
				nextval('matpaci_imposto_seq'), nr_seq_nova_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, cd_tributo, pr_imposto * qt_acao_w, vl_imposto * qt_acao_w, nr_seq_regra
			from	matpaci_imposto
			where	nr_seq_matpaci = nr_sequencia_w;
		end if;
	end if;

        if (qt_acao_w = -1) then
                insert into mat_atend_pac_desc_contab(
                        dt_atualizacao,
                        dt_atualizacao_nrec,
                        nm_usuario,
                        nm_usuario_nrec,
                        nr_atendimento,
                        nr_interno_conta,
                        nr_seq_matpaci,
                        nr_sequencia,
                        vl_desc_item_conta,
                        vl_desc_item_deduc,
                        vl_desc_item_neg,
                        vl_original,
                        vl_material)                           
                SELECT  dt_atualizacao,
                        dt_atualizacao_nrec,
                        nm_usuario,
                        nm_usuario_nrec,
                        nr_atendimento,
                        nr_interno_conta_w,
                        nr_seq_nova_w,
                        nextval('mat_atend_pac_desc_contab_seq'),
                        vl_desc_item_conta * qt_acao_w,
                        vl_desc_item_deduc * qt_acao_w,
                        vl_desc_item_neg * qt_acao_w,
                        vl_original * qt_acao_w,
                        vl_material * qt_acao_w
                from    mat_atend_pac_desc_contab
                where   nr_seq_matpaci = nr_sequencia_w;
        end if;
END LOOP;
CLOSE C02;

if (ie_conta_deducao_w = 'S') and (ie_cancel_conta_orig_w <> 'S') then
	update	conta_pac_deducao_conv
	set		nr_seq_conta_des	= nr_interno_conta_nova_w
	where	nr_seq_conta_des	= nr_interno_conta_p;
end if;

for i in 1..Vetor_Proc_w.count loop
	update procedimento_paciente
	set nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_new
	where nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_old
	  and nr_interno_conta = Vetor_Proc_w[i].nr_conta;

	update procedimento_paciente
	set nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_new
	where nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_old
	  and nr_interno_conta = Vetor_Proc_w[i].nr_conta;

	update material_atend_paciente
	set nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_new
	where nr_seq_proc_princ = Vetor_Proc_w[i].nr_seq_old
	  and nr_interno_conta = Vetor_Proc_w[i].nr_conta;

	update material_atend_paciente
	set nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_new
	where nr_seq_proc_pacote = Vetor_Proc_w[i].nr_seq_old
	  and nr_interno_conta = Vetor_Proc_w[i].nr_conta;


end loop;

			
/*OS 358054 Inicio alteracoes   (gerar desconto na  conta estornada)   ------------ Alterado na OS 368864 */

select	count(*)
into STRICT	cont_desc_w
from	conta_paciente_desconto
where	nr_interno_conta = nr_interno_conta_p;

if (cont_desc_w > 0) then

	open C20;
	loop
	fetch C20 into	
		c20_w;
	EXIT WHEN NOT FOUND; /* apply on C20 */
		begin
		
		select	nextval('conta_paciente_desconto_seq')
		into STRICT	nr_seq_desc_dest_w
		;
	
		insert into conta_paciente_desconto(nr_sequencia,
			nr_interno_conta,
			ie_tipo_desconto,
			dt_atualizacao,
			nm_usuario,
			vl_conta,
			pr_desconto,
			vl_desconto,
			vl_liquido,
			dt_desconto,
			dt_calculo,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_observacao,
			cd_centro_custo,
			nr_seq_motivo_desc,
			cd_pessoa_solicitante,
			cd_cgc_solicitante,
			ie_pacote,
			ie_valor_inf)
		values (nr_seq_desc_dest_w,
			nr_interno_conta_w, -- Conta de estorno
			c20_w.ie_tipo_desconto,
			clock_timestamp(),
			nm_usuario_p,
			c20_w.vl_conta,
			c20_w.pr_desconto,
			c20_w.vl_desconto,
			c20_w.vl_liquido,
			c20_w.dt_desconto,
			c20_w.dt_calculo,
			clock_timestamp(),
			nm_usuario_p,
			c20_w.ds_observacao,
			c20_w.cd_centro_custo,
			c20_w.nr_seq_motivo_desc,
			c20_w.cd_pessoa_solicitante,
			c20_w.cd_cgc_solicitante,
			c20_w.ie_pacote,
			c20_w.ie_valor_inf);

		select	nr_sequencia
		into STRICT	nr_seq_desc_origem_w
		from	conta_paciente_desconto
		where	nr_interno_conta	= nr_interno_conta_p
		and 	nr_sequencia		= c20_w.nr_sequencia;

		open	c03;
		loop
		fetch 	c03 into
			cd_estrutura_w,
			vl_conta_w,
			ie_calcula_w,
			pr_desconto_w,
			vl_desconto_w,
			vl_liquido_w,
			cd_setor_atendimento_w,
			cd_medico_w,
			ie_desc_material_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			insert into conta_paciente_desc_item(nr_sequencia,
				nr_seq_desconto,
				cd_estrutura,
				dt_atualizacao,
				nm_usuario,
				vl_conta,
				ie_calcula,
				pr_desconto,
				vl_desconto,
				vl_liquido,
				cd_setor_atendimento,
				cd_medico,
				ie_desc_material)
			values (nextval('conta_paciente_desc_item_seq'),
				nr_seq_desc_dest_w,
				cd_estrutura_w,
				clock_timestamp(),	
				nm_usuario_p,
				vl_conta_w,
				ie_calcula_w,
				pr_desconto_w,
				vl_desconto_w,
				vl_liquido_w,
				cd_setor_atendimento_w,
				cd_medico_w,
				ie_desc_material_w);
		end loop;
		close c03;
			
		end;
		
		open C50;
		loop
		fetch C50 into	
			nr_seq_item_w;
		EXIT WHEN NOT FOUND; /* apply on C50 */
			begin
	
			update	mat_atend_paciente_valor
			set	nr_seq_desconto		= nr_seq_desc_dest_w
			where	nr_seq_material		= nr_seq_item_w;
			
			update	proc_paciente_valor
			set	nr_seq_desconto		= nr_seq_desc_dest_w
			where	nr_seq_procedimento	= nr_seq_item_w;
			
			end;
		end loop;
		close C50;
		
	end loop;
	close C20;
end if;
/*OS 358054 Fim alteracoes  ------------ Alterado na OS 368864*/



/* Edgar 05/01/2004, Inicio das alteracoes da OS 5298 (gerar desconto para nova conta gerada) */

select	count(*)
into STRICT	cont_desc_w
from	conta_paciente_desconto
where	nr_interno_conta = nr_interno_conta_p;

if (cont_desc_w > 0) then

	open C20;
	loop
	fetch C20 into	
		c20_w;
	EXIT WHEN NOT FOUND; /* apply on C20 */
		begin
		
		select	nextval('conta_paciente_desconto_seq')
		into STRICT	nr_seq_desc_dest_w
		;
		
		
		insert into conta_paciente_desconto(nr_sequencia,
			nr_interno_conta,
			ie_tipo_desconto,
			dt_atualizacao,
			nm_usuario,
			vl_conta,
			pr_desconto,
			vl_desconto,
			vl_liquido,
			dt_desconto,
			dt_calculo,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_observacao,
			cd_centro_custo,
			nr_seq_motivo_desc,
			cd_pessoa_solicitante,
			cd_cgc_solicitante,
			ie_pacote,
			ie_valor_inf)
		values (nr_seq_desc_dest_w,
			nr_interno_conta_nova_w, -- Nova conta
			c20_w.ie_tipo_desconto,
			clock_timestamp(),
			nm_usuario_p,
			c20_w.vl_conta,
			c20_w.pr_desconto,
			c20_w.vl_desconto,
			c20_w.vl_liquido,
			c20_w.dt_desconto,
			c20_w.dt_calculo,
			clock_timestamp(),
			nm_usuario_p,
			c20_w.ds_observacao,
			c20_w.cd_centro_custo,
			c20_w.nr_seq_motivo_desc,
			c20_w.cd_pessoa_solicitante,
			c20_w.cd_cgc_solicitante,
			c20_w.ie_pacote,
			c20_w.ie_valor_inf);
			
		
		select	nr_sequencia
		into STRICT	nr_seq_desc_origem_w
		from	conta_paciente_desconto
		where	nr_interno_conta	= nr_interno_conta_p
		and 	nr_sequencia		= c20_w.nr_sequencia;
		

		open	c03;
		loop
		fetch 	c03 into
			cd_estrutura_w,
			vl_conta_w,
			ie_calcula_w,
			pr_desconto_w,
			vl_desconto_w,
			vl_liquido_w,
			cd_setor_atendimento_w,
			cd_medico_w,
			ie_desc_material_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			insert into conta_paciente_desc_item(nr_sequencia,
				nr_seq_desconto,
				cd_estrutura,
				dt_atualizacao,
				nm_usuario,
				vl_conta,
				ie_calcula,
				pr_desconto,
				vl_desconto,
				vl_liquido,
				cd_setor_atendimento,
				cd_medico,
				ie_desc_material)
			values (nextval('conta_paciente_desc_item_seq'),
				nr_seq_desc_dest_w,
				cd_estrutura_w,
				clock_timestamp(),	
				nm_usuario_p,
				vl_conta_w,
				ie_calcula_w,
				pr_desconto_w,
				vl_desconto_w,
				vl_liquido_w,
				cd_setor_atendimento_w,
				cd_medico_w,
				ie_desc_material_w);
				
					
		end loop;
		close c03;
			
		end;
		
		
		open C50;
		loop
		fetch C50 into	
			nr_seq_item_w;
		EXIT WHEN NOT FOUND; /* apply on C50 */
			begin
			
	
			update	mat_atend_paciente_valor
			set	nr_seq_desconto		= nr_seq_desc_dest_w
			where	nr_seq_material		= nr_seq_item_w;
			
			
			update	proc_paciente_valor
			set	nr_seq_desconto		= nr_seq_desc_dest_w
			where	nr_seq_procedimento	= nr_seq_item_w;
			
			
			end;
		end loop;
		close C50;
		
	end loop;
	close C20;
end if;

/*Fim das alteracao da OS5298*/



/* Ricardo 08/06/2007 - OS 59375 Pro cardiaco - Gerar pacotes automaticamente para a nova conta gerada */

			
select	count(*)
into STRICT	cont_w
from	atendimento_pacote a
where	a.nr_seq_proc_origem in (SELECT x.nr_sequencia
	from 	procedimento_paciente x
	where 	x.nr_interno_conta =  nr_interno_conta_p);


if (cont_w > 0) then

	select	max(nr_atendimento),
		max(cd_convenio_parametro),
		max(cd_categoria_parametro),
		max(cd_estabelecimento)
	into STRICT	nr_atendimento_w,
		cd_convenio_parametro_w,
		cd_categoria_parametro_w,
		cd_estabelecimento_w
	from	conta_paciente
	where	nr_interno_conta	= nr_interno_conta_p;


	select	max(ie_gerar_pacote_canc_nota)
	into STRICT	ie_gerar_pacote_canc_nota_w
	from 	parametro_faturamento
	where	cd_estabelecimento	= cd_estabelecimento_w;
	

	if (ie_gerar_pacote_canc_nota_w	= 'S') then

		if (cont_desc_w = 0) then
			/*calcular_pacote
				(nr_atendimento_w,
				nr_interno_conta_nova_w, -- nr_interno_conta_p,     OS 117087 Fabricio em 26/11/2008
				cd_convenio_parametro_w,
				cd_categoria_parametro_w,
				nm_usuario_p,
				'S', 'N', 'N', 'N', 'N');
				
	
				open C40;
				loop
				fetch C40 into	
					c40_w;
				exit when C40%notfound;
					begin
					
					--Buscar o procedimento de origem do pacote

					select 	nvl(max(cd_procedimento),0), 
						nvl(max(ie_origem_proced),1)
					into	cd_procedimento_w,
						ie_origem_proced_w
					from 	procedimento_paciente
					where 	nr_sequencia   = c40_w.nr_seq_proc_origem;
					
										
					select 	nvl(max(nr_sequencia),0)
					into	nr_seq_w
					from 	procedimento_paciente
					where 	nr_atendimento = c40_w.nr_atendimento
					and 	cd_procedimento = cd_procedimento_w
					and 	ie_origem_proced = ie_origem_proced_w
					and 	nr_seq_proc_pacote = nr_sequencia;
					
					
					if	(nr_seq_w > 0) then
						
						select 	nvl(max(nr_sequencia),0)
						into	nr_seq_atend_pacote_w
						from 	atendimento_pacote
						where 	nr_seq_procedimento = nr_seq_w
						and 	nr_atendimento = c40_w.nr_atendimento;
						
						
						update 	atendimento_pacote
						set 	dt_inicio_pacote 	= c40_w.dt_inicio_pacote,
							dt_final_pacote  	= c40_w.dt_final_pacote
						where 	nr_sequencia 		= nr_seq_atend_pacote_w
						and	nr_atendimento		= c40_w.nr_atendimento;
						
						
					end if;					
					
					end;
				end loop;
				close C40;*/
				
			open C70;
			loop
			fetch C70 into	
				nr_seq_proc_pacote_w;
			EXIT WHEN NOT FOUND; /* apply on C70 */
				begin
				
				select	nextval('procedimento_paciente_seq')
				into STRICT	nr_seq_nova_pacote_w
				;
				
				insert into procedimento_paciente(
					nr_sequencia, nr_atendimento, dt_entrada_unidade, cd_procedimento, nr_seq_proc_interno,
					dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario,
					cd_medico, cd_convenio, cd_categoria, cd_pessoa_fisica, dt_prescricao,
					ds_observacao, vl_procedimento, vl_medico, vl_anestesista, vl_materiais,
					cd_edicao_amb, cd_tabela_servico, dt_vigencia_preco, cd_procedimento_princ,
					dt_procedimento_princ, dt_acerto_conta, dt_acerto_convenio,
					dt_acerto_medico, vl_auxiliares, vl_custo_operacional,
					tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao,
					cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao, qt_devolvida,
					cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio, cd_medico_executor,
					ie_cobra_pf_pj, nr_laudo, dt_conta, cd_setor_atendimento,
					cd_conta_contabil, cd_procedimento_aih, ie_origem_proced, nr_aih,	
					ie_responsavel_credito,	tx_procedimento, cd_equipamento,ie_valor_informado,
					cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa,
					nr_lote_contabil, cd_procedimento_convenio, nr_seq_autorizacao,
					ie_tipo_servico_sus, ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador,
					cd_atividade_prof_bpa, nr_interno_conta, nr_seq_proc_princ, ie_guia_informada,
					dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus,
					cd_especialidade, nm_usuario_original,
					ie_tipo_proc_sus,cd_setor_receita, vl_adic_plant, nr_seq_atepacu, ie_proc_princ_atend,
					nr_seq_proc_pacote, cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame,nr_seq_aih,
					ie_doc_executor,cd_cbo,nr_seq_regra_doc, nr_seq_proc_est, ie_via_acesso,cd_senha, nr_ato_ipasgo)
				SELECT
					nr_seq_nova_pacote_w, nr_atendimento, dt_entrada_unidade, cd_procedimento, nr_seq_proc_interno,
					CASE WHEN ie_manter_data_w='N' THEN  dt_procedimento + (2 / 86400)  ELSE dt_procedimento END , qt_procedimento,
					clock_timestamp(), nm_usuario_p, cd_medico, cd_convenio, cd_categoria,
					cd_pessoa_fisica, dt_prescricao, ds_observacao, vl_procedimento,
					vl_medico, vl_anestesista,
					vl_materiais, cd_edicao_amb, cd_tabela_servico,
					dt_vigencia_preco, cd_procedimento_princ,	dt_procedimento_princ,
					CASE WHEN ie_manter_data_w='N' THEN  dt_acerto_conta + (2 / 86400)  ELSE dt_acerto_conta END , dt_acerto_convenio,
					dt_acerto_medico, vl_auxiliares, vl_custo_operacional,
					tx_medico, tx_anestesia, nr_prescricao, nr_sequencia_prescricao,
					cd_motivo_exc_conta, ds_compl_motivo_excon, cd_acao_w,
					qt_devolvida, cd_motivo_devolucao, nr_cirurgia, nr_doc_convenio,
					cd_medico_executor, ie_cobra_pf_pj, nr_laudo, CASE WHEN ie_manter_data_w='N' THEN  dt_conta + (2 / 86400)  ELSE dt_conta END ,
					cd_setor_atendimento, cd_conta_contabil, cd_procedimento_aih,
					ie_origem_proced, nr_aih, ie_responsavel_credito, tx_procedimento,
					cd_equipamento, ie_valor_informado,
					cd_estabelecimento_custo, cd_tabela_custo, cd_situacao_glosa, 0,
					cd_procedimento_convenio, nr_seq_autorizacao, ie_tipo_servico_sus,
					ie_tipo_ato_sus, cd_cgc_prestador, nr_nf_prestador, cd_atividade_prof_bpa,
					nr_interno_conta_nova_w, nr_seq_proc_princ, ie_guia_informada,
					dt_inicio_procedimento,	ie_emite_conta, ie_funcao_medico, ie_classif_sus,
					cd_especialidade, nm_usuario_original, ie_tipo_proc_sus,
					cd_setor_receita, vl_adic_plant, nr_seq_atepacu, ie_proc_princ_atend,
					nr_seq_proc_pacote,
					cd_medico_req, ie_tipo_guia, ie_video, ie_auditoria, nr_seq_exame,nr_seq_aih,
					ie_doc_executor,cd_cbo,nr_seq_regra_doc, nr_seq_proc_pacote_w, ie_via_acesso, cd_senha, nr_ato_ipasgo
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_proc_pacote_w;

				
				insert into procedimento_participante(
					nr_sequencia, nr_seq_partic, ie_funcao, dt_atualizacao,
					nm_usuario,	cd_pessoa_fisica,	cd_cgc, ie_valor_informado,
					ie_emite_conta, vl_participante, vl_conta, nr_lote_contabil,
					nr_conta_medico, ie_tipo_servico_sus, ie_tipo_ato_sus,
					qt_ponto_sus, vl_ponto_sus, vl_original, ie_responsavel_credito,
					pr_procedimento,cd_cbo,ie_doc_executor,ie_participou_sus)
				SELECT
					nr_seq_nova_pacote_w, nr_seq_partic,ie_funcao, clock_timestamp(),
					nm_usuario_p, cd_pessoa_fisica, cd_cgc,
					ie_valor_informado,ie_emite_conta,
					vl_participante, vl_conta,
					0, nr_conta_medico, ie_tipo_servico_sus,
					ie_tipo_ato_sus, qt_ponto_sus,
					vl_ponto_sus, vl_original,
					ie_responsavel_credito,	pr_procedimento,cd_cbo,
					ie_doc_executor,ie_participou_sus
				from	procedimento_participante
				where	nr_sequencia = nr_seq_proc_pacote_w;

				delete	from proc_paciente_valor
				where	nr_seq_procedimento = nr_seq_nova_pacote_w;
				
				Insert into proc_paciente_valor(
					nr_seq_procedimento, nr_sequencia, ie_tipo_valor,
					dt_atualizacao, nm_usuario, vl_procedimento,
					vl_medico, vl_anestesista, vl_materiais, vl_auxiliares,
					vl_custo_operacional, cd_convenio, cd_categoria, pr_valor)
				SELECT
					nr_seq_nova_pacote_w, nr_sequencia, ie_tipo_valor,
					clock_timestamp(), nm_usuario_p, vl_procedimento,
					vl_medico, vl_anestesista,
					vl_materiais, vl_auxiliares,
					vl_custo_operacional, cd_convenio,
					cd_categoria, pr_valor
				from	proc_paciente_valor
				where	nr_seq_procedimento = nr_seq_proc_pacote_w;
				
				if (ie_conta_deducao_w = 'S') then
					update	conta_pac_ded_conv_item
					set		nr_seq_propaci_dest	= nr_seq_nova_pacote_w
					where	nr_seq_propaci_dest = nr_seq_proc_pacote_w;
				end if;
				
				select	max(nr_sequencia)
				into STRICT	nr_seq_valor_proc_pacote_w
				from	proc_paciente_valor
				where	nr_seq_procedimento = nr_seq_proc_pacote_w
				and		ie_tipo_valor in (94,95)
				and		qt_acao_w = 1;
				
				if (qt_acao_w = -1) then
					if (ie_conta_deducao_w = 'N') then
						CALL estornar_conta_ded_conv(nr_interno_conta_p,
											nr_seq_proc_pacote_w,
											null,
											nr_seq_nova_pacote_w,
											null,
											null,
											null,
											qt_acao_w,
											ie_cancel_conta_orig_w,
											nm_usuario_p);
					else
						CALL estornar_conta_ded_conv(nr_interno_conta_p,
											nr_seq_proc_pacote_w,
											null,
											null,
											null,
											nr_seq_nova_pacote_w,
											null,
											qt_acao_w,
											ie_cancel_conta_orig_w,
											nm_usuario_p);
					end if;
				end if;
				
				if (coalesce(nr_seq_valor_proc_pacote_w,0) > 0) then		
					CALL atualizar_valor_proc_deducao(nr_seq_proc_pacote_w, nr_seq_valor_proc_pacote_w, nr_seq_nova_pacote_w, nm_usuario_p);
					
					if (ie_status_conta_des_w = 1) then
						select	max(nr_seq_propaci_dest)
						into STRICT	nr_seq_proc_partic_w
						from	conta_pac_ded_conv_item
						where	nr_seq_propaci_origem = nr_seq_proc_pacote_w;
						
						update	conta_pac_ded_conv_item
						set		nr_seq_propaci_dest  = NULL
						where	nr_seq_propaci_origem = nr_seq_proc_pacote_w;
						
						delete	from procedimento_paciente
						where	nr_sequencia = nr_seq_proc_partic_w;
						
						delete	from proc_paciente_valor
						where	nr_sequencia = nr_seq_valor_proc_pacote_w
						and	nr_seq_procedimento = nr_seq_proc_pacote_w;
					end if;
				else				
					if	((2 = philips_param_pck.get_cd_pais) or (upper(ds_nls_territory_w) = 'MEXICO')) then -- 2 = Mexico
						insert into propaci_imposto(
							nr_sequencia, nr_seq_propaci, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, cd_tributo, pr_imposto, vl_imposto, nr_seq_regra)
						SELECT	
							nextval('propaci_imposto_seq'), nr_seq_nova_pacote_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, cd_tributo, pr_imposto, vl_imposto, nr_seq_regra
						from	propaci_imposto
						where	nr_seq_propaci = nr_seq_proc_pacote_w;
					end if;
				end if;
				
				end;
			end loop;
			close C70;
			
				
			open C60;
			loop
			fetch C60 into	
				c60_w;
			EXIT WHEN NOT FOUND; /* apply on C60 */
				begin
				
				select (coalesce(max(nr_sequencia),1) + 1)
				into STRICT	nr_seq_atend_pacote_w
				from	atendimento_pacote
				where	nr_atendimento	= c60_w.nr_atendimento;
				
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_proc_origem_pac_w
				from	procedimento_paciente a
				where	a.nr_seq_proc_est = c60_w.nr_seq_proc_origem
				and	a.nr_interno_conta <> nr_interno_conta_w;
				
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_proc_pac_w
				from	procedimento_paciente a
				where	a.nr_seq_proc_est = c60_w.nr_seq_procedimento
				and	a.nr_interno_conta <> nr_interno_conta_w;
				
				if (coalesce(nr_seq_proc_origem_pac_w,0) > 0) and (coalesce(nr_seq_proc_pac_w,0) > 0) then
					
					ie_gerou_pacote_w	:= 'S';
				
					insert into atendimento_pacote(
						nr_atendimento, nr_sequencia, nr_seq_pacote, cd_convenio, dt_atualizacao,
						nm_usuario, pr_afaturar, ie_tipo_acomod, qt_dias_pacote, qt_dias_hospital,
						qt_dias_uti, ie_excedente, dt_inicio_pacote, nr_seq_procedimento,
						nr_seq_proc_origem, dt_final_pacote, cd_setor_exclusivo, ie_classificacao,
						nr_seq_alocacao, nr_seq_tipo_acomod, ie_exige_gabarito, ie_ratear_repasse,
						vl_original, ie_rateado, vl_ajuste, ie_consiste_cirurgia, ds_observacao,
						ie_prioridade, nr_seq_regra_tx, cd_procedimento_tuss
					) values (
						c60_w.nr_atendimento, nr_seq_atend_pacote_w, c60_w.nr_seq_pacote, c60_w.cd_convenio, clock_timestamp(),
						nm_usuario_p, c60_w.pr_afaturar, c60_w.ie_tipo_acomod, c60_w.qt_dias_pacote, c60_w.qt_dias_hospital,
						c60_w.qt_dias_uti, c60_w.ie_excedente, c60_w.dt_inicio_pacote, nr_seq_proc_pac_w,
						nr_seq_proc_origem_pac_w, c60_w.dt_final_pacote, c60_w.cd_setor_exclusivo, c60_w.ie_classificacao,
						c60_w.nr_seq_alocacao, c60_w.nr_seq_tipo_acomod, c60_w.ie_exige_gabarito, c60_w.ie_ratear_repasse,
						c60_w.vl_original, c60_w.ie_rateado, c60_w.vl_ajuste, c60_w.ie_consiste_cirurgia, c60_w.ds_observacao,
						c60_w.ie_prioridade, c60_w.nr_seq_regra_tx, c60_w.cd_procedimento_tuss
					);
					
					update	procedimento_paciente
					set	nr_seq_proc_pacote = nr_seq_proc_pac_w
					where	nr_seq_proc_pacote = c60_w.nr_seq_procedimento
					and	nr_interno_conta = nr_interno_conta_nova_w;
					
					update	material_atend_paciente
					set	nr_seq_proc_pacote = nr_seq_proc_pac_w
					where	nr_seq_proc_pacote = c60_w.nr_seq_procedimento
					and	nr_interno_conta = nr_interno_conta_nova_w;
					
				end if;
				
				end;
			end loop;
			close C60;
		end if;
		

		/*select	count(*)
		into	cont_w
		from	atendimento_pacote a
		where	a.nr_seq_proc_origem in 
			(select x.nr_sequencia 
			from 	procedimento_paciente x
			where 	x.nr_interno_conta =  nr_interno_conta_nova_w);
			

		if	(cont_w > 0) and
			(cont_desc_w = 0) then
			calcular_pacote
				(nr_atendimento_w,
				nr_interno_conta_nova_w, -- nr_interno_conta_p,     OS 117087 Fabricio em 26/11/2008
				cd_convenio_parametro_w,
				cd_categoria_parametro_w,
				nm_usuario_p,
				'N', 'S', 'S', 'S', 'N');*/
	end if;
end if;

if (ie_gerou_pacote_w = 'N') then
	
	update	procedimento_paciente
	set	nr_seq_proc_pacote  = NULL
	where	(nr_seq_proc_pacote IS NOT NULL AND nr_seq_proc_pacote::text <> '')
	and	nr_interno_conta = nr_interno_conta_nova_w;
	
	update	material_atend_paciente
	set	nr_seq_proc_pacote  = NULL
	where	(nr_seq_proc_pacote IS NOT NULL AND nr_seq_proc_pacote::text <> '')
	and	nr_interno_conta = nr_interno_conta_nova_w;	

end if;

/* Fim alteracoes OS 59375 */

open C10;
loop
fetch C10 into	
	c10_w;
EXIT WHEN NOT FOUND; /* apply on C10 */
	begin	
	
	update	conta_paciente_etapa
	set 	dt_fim_etapa = clock_timestamp()
	where 	coalesce(dt_fim_etapa::text, '') = ''
	and 	nr_interno_conta = nr_interno_conta_p
	and 	nr_sequencia = c10_w.nr_sequencia;
	
	select	nextval('conta_paciente_etapa_seq')
	into STRICT	nr_seq_etapa_w
	;
	
	insert	into conta_paciente_etapa(	 nr_sequencia,
						 nr_interno_conta,
						 dt_atualizacao,
						 nm_usuario,
						 dt_etapa,
						 nr_seq_etapa,
						 cd_setor_atendimento,
						 cd_pessoa_fisica,
						 nr_seq_motivo_dev,
						 ds_observacao,
						 dt_atualizacao_nrec,
						 nm_usuario_nrec,
						 dt_fim_etapa,
						 dt_periodo_inicial,
						 dt_periodo_final)
			values (	nr_seq_etapa_w,
						nr_interno_conta_nova_w,
						clock_timestamp(),
						nm_usuario_p,
						c10_w.dt_etapa,
						c10_w.nr_seq_etapa,
						c10_w.cd_setor_atendimento,
						c10_w.cd_pessoa_fisica,
						c10_w.nr_seq_motivo_dev,
						c10_w.ds_observacao,
						clock_timestamp(),
						nm_usuario_p,
						CASE WHEN ie_finaliza_ult_etapa_w='S' THEN  coalesce(c10_w.dt_fim_etapa,clock_timestamp())  ELSE c10_w.dt_fim_etapa END ,
						c10_w.dt_periodo_inicial,
						c10_w.dt_periodo_final);

	insert into conta_paciente_etapa_dev(	nr_sequencia,
						nr_seq_etapa,
						nr_seq_motivo,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_observacao)
			SELECT			nextval('conta_paciente_etapa_dev_seq'),
						nr_seq_etapa_w,
						a.nr_seq_motivo,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						a.ds_observacao
			from	conta_paciente_etapa_dev a
			where	a.nr_seq_etapa	= c10_w.nr_sequencia;
					
	end;
end loop;
close C10;

update	conta_paciente
set		ie_cancelamento = CASE WHEN coalesce(ie_cancel_conta_orig_w,'N')='N' THEN 'C'  ELSE ie_cancelamento END ,
		dt_cancelamento = CASE WHEN coalesce(ie_cancel_conta_orig_w,'N')='N' THEN clock_timestamp()  ELSE dt_cancelamento END ,
		ie_complex_aih_orig = ie_complex_aih_orig_w	
where	nr_interno_conta = nr_interno_conta_p;


-- Edgar 27/07/2006 OS 36638, forcar estorno do repasse
begin
CALL Gerar_Conta_Paciente_Repasse(nr_interno_conta_p, nm_usuario_p);
exception
	when others then
	ds_erro_w	:= substr(SQLERRM(SQLSTATE),1,1000);
	
	
	end;

update	conta_paciente
set 	ie_cancelamento		= CASE WHEN coalesce(ie_cancel_conta_orig_w,'N')='N' THEN 'E'  ELSE ie_cancelamento END ,
		nr_seq_conta_origem	= nr_interno_conta_p,
		ie_complex_aih_orig = ie_complex_aih_orig_w
where	nr_interno_conta	= nr_interno_conta_w;
	
ie_inserir_conta_estornada_w	:= obter_valor_param_usuario(67, 554, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_tipo_prot_est_w		:= coalesce(somente_numero(obter_valor_param_usuario(67, 739, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento)),0);

if (ie_inserir_conta_estornada_w = 'S') and (ie_cancel_conta_orig_w = 'N') then

	select	max(a.nr_seq_protocolo),
		max(a.nr_protocolo)
	into STRICT	nr_seq_protocolo_w,
		nr_protocolo_w
	from	conta_paciente a,
		protocolo_convenio b
	where	nr_interno_conta	= nr_interno_conta_p
	and	a.nr_seq_protocolo	= b.nr_seq_protocolo
	and	b.ie_status_protocolo	= 1;	
	
	if (coalesce(nr_seq_protocolo_w,0) > 0) then

		update	conta_paciente
		set 	nr_seq_protocolo	= nr_seq_protocolo_w,
			nr_protocolo		= nr_protocolo_w
		where	nr_interno_conta	= nr_interno_conta_w
		and	nr_seq_conta_origem	= nr_interno_conta_p;
		
	end if;

elsif (ie_inserir_conta_estornada_w = 'N') and (ie_tipo_prot_est_w <> 0) and (ie_cancel_conta_orig_w = 'N')	then
	CALL faturar_conta(nr_interno_conta_w, ie_tipo_prot_est_w, nm_usuario_p);
end if;

update	procedimento_repasse a
set	a.nr_interno_conta_est	= nr_interno_conta_w
where	coalesce(a.nr_interno_conta_est::text, '') = ''
and	a.ie_status		= 'E'
and	exists (SELECT	1
		from	procedimento_paciente x
		where	x.nr_sequencia		= a.nr_seq_procedimento
		and	x.nr_interno_conta	= nr_interno_conta_p);

update	material_repasse a
set	a.nr_interno_conta_est	= nr_interno_conta_w
where	coalesce(a.nr_interno_conta_est::text, '') = ''
and	a.ie_status		= 'E'
and	exists (SELECT	1
		from	material_atend_paciente x
		where	x.nr_sequencia		= a.nr_seq_material
		and	x.nr_interno_conta	= nr_interno_conta_p);

update	conta_paciente
set 	nr_seq_conta_origem 	= nr_interno_conta_p
where	nr_interno_conta 	= nr_interno_conta_nova_w;

CALL Gerar_Etapa_Conta_Cancel(nr_interno_conta_nova_w, nm_usuario_p, 'S'); -- Nova conta
select 	count(*)
into STRICT	qt_regra_estorno_w
from	fatur_etapa_conta
where	ie_situacao = 'A'
and 	coalesce(IE_CONTA_AJUSTE_CANCEL,'N') = 'E';

-- Se tem regra para conta de estorno, entao a opcao Desconsiderar, nao deve gerar nenhuma regra (Trigger), por isso a exclusao
if (qt_regra_estorno_w > 0) then
	delete from conta_paciente_etapa where nr_interno_conta = nr_interno_conta_w;
end if;

CALL Gerar_Etapa_Conta_Cancel(nr_interno_conta_w, nm_usuario_p, 'E'); -- Estorno 

/* Atualizar as tabelas resumo da conta de estorno */

CALL gerar_conta_paciente_repasse(nr_interno_conta_w, nm_usuario_p);
CALL Gerar_conta_paciente_guia(nr_interno_conta_w, 2);

begin
select	coalesce(a.ie_tipo_convenio,2)
into STRICT	ie_tipo_convenio_w
from	convenio a,
	conta_paciente b
where	b.cd_convenio_parametro = a.cd_convenio
and	b.nr_interno_conta = nr_interno_conta_p  LIMIT 1;
exception
when others then
	ie_tipo_convenio_w := 2;
end;

if (ie_tipo_convenio_w <> 3) then
	CALL Atualizar_Resumo_Conta(nr_interno_conta_w, 2);
else
	begin
	
	select	count(1)
	into STRICT	qt_regra_sh_w
	from	sus_regra_rateio_sh
	where	coalesce(ie_sus_unificado,'N') = 'S'  LIMIT 1;
	
	if (qt_regra_sh_w > 0) then
		CALL sus_gerar_resumo_conta_estorno(nr_interno_conta_p, nr_interno_conta_w, nm_usuario_p);
	else
		CALL Atualizar_Resumo_Conta(nr_interno_conta_w, 2);		
	end if;	
	end;
end if;

/* Atualizar as tabelas resumo da conta de estorno */

CALL Gerar_conta_paciente_guia(nr_interno_conta_nova_w, 2);
CALL Atualizar_Resumo_Conta(nr_interno_conta_nova_w, 2);

/* Chamada Contabilizacao Lote Receita */

ie_ctb_online_w := ctb_online_pck.get_modo_lote(  6, wheb_usuario_pck.get_cd_estabelecimento, obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento));

select cd_convenio_parametro
into STRICT		cd_convenio_parametro_w
from		conta_paciente
where	nr_interno_conta	= nr_interno_conta_w;		

ie_geracao_w	:= ctb_online_pck.get_geracao_lote_receita( cd_convenio_parametro_w,
							wheb_usuario_pck.get_cd_estabelecimento,							
							nm_usuario_p,
							ie_tipo_convenio_w);													

if (ie_ctb_online_w = 'S' and ie_geracao_w in ('FCP', 'ENF', 'ETR')) then
	begin
	CALL ctb_contab_onl_lote_receita(nr_seq_protocolo_p  =>  null,
                              nr_interno_conta_p  =>  nr_interno_conta_w,
                              nm_usuario_p        =>  nm_usuario_p,
                              dt_referencia_p   	=>  clock_timestamp());
	end;
end if;

/*commit;*/

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_conta_paciente ( nr_interno_conta_p bigint, nm_usuario_p text, ie_cancel_conta_dest_p text default null, nr_seq_conta_origem_p bigint default null) FROM PUBLIC;

