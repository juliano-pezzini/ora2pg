-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_status_op_opm ( nr_seq_op_opm_p bigint, ie_acao_p text, cd_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


cd_perfil_w		integer;
cd_agenda_w		bigint;
cd_funcao_w		integer;
ds_stack_w		varchar(2000);
nr_seq_status_op_ant_w	bigint;
nr_seq_status_w		bigint;
nr_seq_opm_w		bigint;
ie_tipo_opm_w		varchar(15);
ie_estagio_opm_prescr_w	varchar(15);
ds_sep_bv_w			varchar(50) := obter_separador_bv;
cd_nova_estrutura_w  varchar(5) := 'N';

c01 CURSOR FOR
SELECT nr_sequencia
from prescr_opm
where nr_ordem_opm = nr_seq_op_opm_p;


BEGIN
cd_perfil_w	:= wheb_usuario_pck.get_cd_perfil;
cd_funcao_w	:= wheb_usuario_pck.get_cd_funcao;
ds_stack_w 	:= substr(dbms_utility.format_call_stack,1,2000);
cd_agenda_w	:= coalesce(cd_agenda_p,0);

if (coalesce(nr_seq_op_opm_p,0) > 0) and (ie_acao_p IS NOT NULL AND ie_acao_p::text <> '') then
	select	coalesce(max('P'),'F')
	into STRICT	ie_tipo_opm_w
	from   	prescr_opm_componente a,
		ordem_producao_opm b
	where  	a.nr_seq_opm 	 	= b.nr_seq_opm
	and	b.nr_sequencia	 	= nr_seq_op_opm_p;

	select	max(nr_seq_status),
				max(ie_estagio_opm_prescr)
	into STRICT	nr_seq_status_w,
			ie_estagio_opm_prescr_w
	from	regra_alteracao_status_op
	where	ie_acao 			= ie_acao_p
	and	((ie_tipo_opm			= ie_tipo_opm_w) or (ie_tipo_opm = 'A'))
	and	coalesce(cd_agenda,cd_agenda_w) 	= cd_agenda_w;

	select	max(nr_seq_status_op)
	into STRICT	nr_seq_status_op_ant_w
	from	ordem_producao_opm
	where	nr_sequencia = nr_seq_op_opm_p;

	if (nr_seq_status_w IS NOT NULL AND nr_seq_status_w::text <> '') then
		if (nr_seq_status_op_ant_w IS NOT NULL AND nr_seq_status_op_ant_w::text <> '') then
			update	ordem_producao_opm_hist
			set 	dt_fim		 = clock_timestamp()
			where 	nr_seq_ordem_opm = nr_seq_op_opm_p
			and 	nr_seq_status_op = nr_seq_status_op_ant_w;
		end if;

		insert	into	ordem_producao_opm_hist(	nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_status_op,
								nr_seq_status_op_ant,
								nr_seq_ordem_opm,
								ds_stack,
								cd_funcao,
								cd_perfil,
								dt_fim,
								dt_inicio,
								ie_acao)
		values (	nextval('ordem_producao_opm_hist_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_status_w,
								nr_seq_status_op_ant_w,
								nr_seq_op_opm_p,
								ds_stack_w,
								cd_funcao_w,
								cd_perfil_w,
								'',
								clock_timestamp(),
								ie_acao_p);
		update	ordem_producao_opm
		set	nr_seq_status_op	= nr_seq_status_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_op_opm_p;

		if (ie_estagio_opm_prescr_w IS NOT NULL AND ie_estagio_opm_prescr_w::text <> '') and (ie_acao_p <> 'COP') then
         open c01;
         loop
         fetch c01 into
            nr_seq_opm_w;
         EXIT WHEN NOT FOUND; /* apply on c01 */
            begin
            cd_nova_estrutura_w:= 'S';
            if (nr_seq_opm_w IS NOT NULL AND nr_seq_opm_w::text <> '') then
               CALL exec_sql_dinamico_bv('','begin GRAVAR_HISTORICO_OPM(:nr_seq_opm_w,:nm_usuario_p,null,:ie_estagio_opm_prescr_w,null); end;',
                  'nr_seq_opm_w=' || nr_seq_opm_w || ds_sep_bv_w ||
                  'nm_usuario_p=' || nm_usuario_p || ds_sep_bv_w ||
                  'ie_estagio_opm_prescr_w='||ie_estagio_opm_prescr_w|| ds_sep_bv_w);
            end if;
            end;
         end loop;
         close c01;
         if (cd_nova_estrutura_w = 'N') then
            select	max(nr_seq_opm)
            into STRICT		nr_seq_opm_w
            from		ordem_producao_opm
            where		nr_sequencia = nr_seq_op_opm_p;
            if (nr_seq_opm_w IS NOT NULL AND nr_seq_opm_w::text <> '') then
               CALL exec_sql_dinamico_bv('','begin GRAVAR_HISTORICO_OPM(:nr_seq_opm_w,:nm_usuario_p,null,:ie_estagio_opm_prescr_w,null); end;',
                  'nr_seq_opm_w=' || nr_seq_opm_w || ds_sep_bv_w ||
                  'nm_usuario_p=' || nm_usuario_p || ds_sep_bv_w ||
                  'ie_estagio_opm_prescr_w='||ie_estagio_opm_prescr_w|| ds_sep_bv_w);
            end if;
         end if;
		end if;

		if (WHEB_USUARIO_PCK.get_ie_commit = 'S') then commit; end if;
	end if;
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_status_op_opm ( nr_seq_op_opm_p bigint, ie_acao_p text, cd_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

