-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_susp_prescr_mat_hor ( nr_sequencia_p bigint, nm_usuario_p text, nr_seq_motivo_susp_p bigint, ds_motivo_susp_p text, ds_observacao_p text, ie_prescr_alteracao_p text default 'N') AS $body$
DECLARE


ds_justificativa_w		prescr_mat_alteracao.ds_justificativa%type;
nr_prescricao_w			bigint;
nr_seq_material_w		integer;
nr_seq_horario_w		bigint;
nr_agrupamento_w		bigint;
nr_seq_composto_w		bigint;
dt_horario_w			timestamp;
ie_tipo_item_w			varchar(10);
ie_consistir_hora_w		varchar(1);
ie_gravar_justif_w		varchar(1);
nr_atendimento_w		bigint;
cd_material_w			bigint;
nr_seq_alteracao_w		bigint;
ie_arq_pyxis_w			varchar(1);
cd_estabelecimento_w	smallint;
qt_existe_regra_w		bigint;	
nr_seq_lote_w			bigint;
qt_lote_w				bigint;
ie_status_lote_w		varchar(5);
ds_stack_w				varchar(2000);
ie_suspend_med_atend_w	varchar(1);
cd_motivo_baixa_w		bigint;
ds_horario_w			varchar(50);

c01 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and	nr_sequencia	<> nr_seq_material_w
and	nr_agrupamento	= nr_agrupamento_w
and	ie_agrupador	= 1
and	coalesce(nr_seq_kit::text, '') = '';


BEGIN
ie_suspend_med_atend_w  :=  coalesce(obter_valor_param_usuario(924, 57, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_consistir_hora_w := consiste_hora_suspensao(null,nm_usuario_p,nr_sequencia_p,null,'H');
ie_gravar_justif_w := Obter_Param_Usuario(924, 890, obter_perfil_ativo, nm_usuario_p, 0, ie_gravar_justif_w);

if (ie_consistir_hora_w = 'S') then
	--'Não é possível suspender o horário! Parâmetro[801]';
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(214137);
end if;

select 	max(coalesce(a.cd_motivo_baixa,0)),
		max(DS_HORARIO)
into STRICT	cd_motivo_baixa_w,
		ds_horario_w
from	prescr_material a,
		prescr_mat_hor b
where	b.nr_prescricao = a.nr_prescricao
and		b.nr_seq_material = a.nr_Sequencia
and		b.nr_sequencia =	nr_sequencia_p;

if (ie_suspend_med_atend_w = 'N' and cd_motivo_baixa_w > 0) then
	--'Caro Prescritor, devido o horário XX:XX já estar atendido pela farmácia, ele não será suspenso. Parâmetro [57].';
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(1076254, 'DS_HORA=' || ds_horario_w);
end if;

update	prescr_mat_hor
set		dt_suspensao		= clock_timestamp(),
		nm_usuario_susp		= nm_usuario_p,
		nr_seq_motivo_susp	= CASE WHEN nr_seq_motivo_susp_p=0 THEN null  ELSE nr_seq_motivo_susp_p END ,
		ds_motivo_susp      = ds_motivo_susp_p
where	nr_sequencia 		= nr_sequencia_p
and		coalesce(dt_fim_horario::text, '') = ''
and		coalesce(dt_suspensao::text, '') = '';

select	a.nr_prescricao,
		a.nr_seq_material,
		a.dt_horario,
		b.nr_atendimento,
		a.cd_material,
		b.cd_estabelecimento,
		a.nr_seq_lote
into STRICT	nr_prescricao_w,
		nr_seq_material_w,
		dt_horario_w,
		nr_atendimento_w,
		cd_material_w,
		cd_estabelecimento_w,
		nr_seq_lote_w
from	prescr_mat_hor a,
		prescr_medica b
where	a.nr_sequencia = nr_sequencia_p
and		a.nr_prescricao = b.nr_prescricao;

update	prescr_material
set		ie_horario_susp	= 'S'
where	nr_prescricao	= nr_prescricao_w
and		nr_sequencia	= nr_seq_material_w;

update	prescr_mat_hor
set		dt_suspensao		= clock_timestamp(),
		nm_usuario_susp		= nm_usuario_p,
		nr_seq_motivo_susp	= CASE WHEN nr_seq_motivo_susp_p=0 THEN null  ELSE nr_seq_motivo_susp_p END ,
		ds_motivo_susp      = ds_motivo_susp_p
where	nr_prescricao		= nr_prescricao_w
and		nr_seq_superior		= nr_seq_material_w
and		dt_horario			= dt_horario_w
and		coalesce(dt_fim_horario::text, '') = ''
and		coalesce(dt_suspensao::text, '') = '';

select	max(nr_agrupamento),
		max(CASE WHEN ie_agrupador=1 THEN  'M' WHEN ie_agrupador=16 THEN  'LD' WHEN ie_agrupador=12 THEN  'S'  ELSE 'MAT' END ),
		max(CASE WHEN ie_gravar_justif_w='S' THEN  PERFORM obter_desc_expressao(727956) END )
into STRICT	nr_agrupamento_w,
		ie_tipo_item_w,
		ds_justificativa_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_w
and		nr_sequencia	= nr_seq_material_w;

if ((nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and ie_prescr_alteracao_p = 'S') then
		
	ds_stack_w	:= substr(dbms_utility.format_call_stack,1,2000);
	CALL gravar_log_tasy(10007,
				' CPOE_SUSP_PRESCR_MAT_HOR:  ' ||ds_stack_w||
				' nr_atendimento_w: ' ||nr_atendimento_w ||
				' ie_tipo_item_w ' || ie_tipo_item_w ||
				' cd_material_w ' || cd_material_w ||
				' nr_prescricao_w '	||nr_prescricao_w ||
				' nr_seq_material_w ' || nr_seq_material_w ||
				' nr_sequencia_p ' || nr_sequencia_p ||
				' dt_horario_w ' || to_char(dt_horario_w, 'dd/mm/yyyy hh24:mi:ss)') ||
				' ds_justificativa_w ' || ds_justificativa_w ||
				' nr_seq_motivo_susp_p: ' || nr_seq_motivo_susp_p || 
				' nm_usuario_p: ' || nm_usuario_p, nm_usuario_p);
	

	CALL gerar_alter_hor_prescr_adep( nr_atendimento_w, ie_tipo_item_w, cd_material_w,
						nr_prescricao_w, nr_seq_material_w, nr_sequencia_p,
						dt_horario_w, 5, ds_justificativa_w, null, null, nm_usuario_p);						
end if;

open C01;
loop
fetch C01 into	
	nr_seq_composto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	select	max(nr_sequencia)
	into STRICT	nr_seq_horario_w
	from	prescr_mat_hor
	where	nr_prescricao	= nr_prescricao_w
	and	nr_seq_material	= nr_seq_composto_w
	and	dt_horario	= dt_horario_w
	and	coalesce(dt_fim_horario::text, '') = ''
	and	coalesce(dt_suspensao::text, '') = '';
	
	if (coalesce(nr_seq_horario_w,0) > 0) then
		update	prescr_mat_hor
		set	dt_suspensao		= clock_timestamp(),
			nm_usuario_susp		= nm_usuario_p,
			nr_seq_motivo_susp	= CASE WHEN nr_seq_motivo_susp_p=0 THEN null  ELSE nr_seq_motivo_susp_p END ,
			ds_motivo_susp          = ds_motivo_susp_p
		where	nr_sequencia 		= nr_seq_horario_w
		and	coalesce(dt_fim_horario::text, '') = ''
		and	coalesce(dt_suspensao::text, '') = '';
		
		update	prescr_material
		set	ie_horario_susp	= 'S'
		where	nr_prescricao	= nr_prescricao_w
		and	nr_sequencia	= nr_seq_composto_w;		
		
	end if;
	
end loop;
close C01;

select 	coalesce(max(ie_arq_pyxis),'N')
into STRICT	ie_arq_pyxis_w
from	parametro_atendimento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_arq_pyxis_w = 'S') then
	begin
	select 	count(*)
	into STRICT	qt_existe_regra_w
	from	dis_regra_local
	where	cd_estabelecimento = cd_estabelecimento_w;		

	if (coalesce(qt_existe_regra_w,0) > 0) then
		CALL dis_gerar_arq_prescr(nr_prescricao_w,'2');
	end if;
	end;	
end if;

update	ap_lote_item
set	dt_supensao	= clock_timestamp(),
	nm_usuario_susp	= nm_usuario_p
where	nr_seq_lote	= nr_seq_lote_w
and	nr_seq_mat_hor	= nr_sequencia_p
and	coalesce(dt_supensao::text, '') = '';

/*Verifica se todos os itens pendentes, já estão suspensos.. se sim. suspende o lote*/

select	count(*)
into STRICT	qt_lote_w
from	ap_lote_item
where	nr_seq_lote	= nr_seq_lote_w
and	coalesce(dt_supensao::text, '') = '';

-- Somente se ele estiver com Status Gerado
if (qt_lote_w = 0) then
	select	max(ie_status_lote)
	into STRICT	ie_status_lote_w
	from	ap_lote
	where	nr_sequencia	= nr_seq_lote_w;
	if (ie_status_lote_w = 'G') then
		update	ap_lote
		set	ie_status_lote = 'S'
		where	nr_sequencia	= nr_seq_lote_w;

		insert into ap_lote_historico(
			nr_sequencia,			dt_atualizacao,
			nm_usuario,			nr_seq_lote,
			ds_evento,			ds_log)
		values (	nextval('ap_lote_historico_seq'),	clock_timestamp(),
			nm_usuario_p,			nr_seq_lote_w,
			obter_desc_expressao(348748), obter_desc_expressao(727958)||nr_sequencia_p||' - CPOE_SUSP_PRESCR_MAT_HOR.');
	end if;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_susp_prescr_mat_hor ( nr_sequencia_p bigint, nm_usuario_p text, nr_seq_motivo_susp_p bigint, ds_motivo_susp_p text, ds_observacao_p text, ie_prescr_alteracao_p text default 'N') FROM PUBLIC;

