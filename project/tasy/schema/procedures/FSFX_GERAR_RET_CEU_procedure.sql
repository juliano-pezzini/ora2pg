-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fsfx_gerar_ret_ceu ( ds_linha_p text, nr_seq_cobranca_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_lote_rem_valor_w		bigint;
vl_registro_w			double precision;
cd_matricula_estip_w		pls_segurado.cd_matricula_estipulante%type;
ds_linha_w			varchar(255);
dt_remessa_retorno_w		timestamp;
nr_seq_mensalidade_w		bigint;
nr_titulo_w			bigint;
titulo_receber_w		titulo_receber%rowtype;
nr_seq_empresa_w		bigint;
vl_liquidacao_w			titulo_receber_cobr.vl_liquidacao%type;


BEGIN

ds_linha_w		:= replace(ds_linha_p,chr(13),'');
cd_matricula_estip_w	:= substr(ds_linha_w,1,6);
vl_registro_w		:= trim(both substr(ds_linha_w,17,28));

select	trunc(dt_remessa_retorno,'Month'),
	nr_seq_empresa
into STRICT	dt_remessa_retorno_w,
	nr_seq_empresa_w
from	cobranca_escritural
where	nr_sequencia	= nr_seq_cobranca_p;

select	max(a.nr_titulo)
into STRICT	nr_titulo_w
from	titulo_receber_cobr	a,
	titulo_receber		b,
	pls_mensalidade		c,
	pls_contrato_pagador_fin d,
	cobranca_escritural	e
where	a.nr_titulo		= b.nr_titulo
and	b.nr_seq_mensalidade	= c.nr_sequencia
and	c.nr_seq_pagador_fin	= d.nr_sequencia
and	a.nr_seq_cobranca	= e.nr_sequencia
and	e.nr_sequencia		<> nr_seq_cobranca_p
and	e.ie_remessa_retorno	= 'R'
and	trunc(e.dt_remessa_retorno,'Month')	= dt_remessa_retorno_w
and	e.nr_seq_empresa	= nr_seq_empresa_w
and	d.cd_matricula		= cd_matricula_estip_w
and	b.vl_titulo		= vl_registro_w;

if (coalesce(nr_titulo_w::text, '') = '') then
	insert	into	pls_desc_inconsistencia(	nr_sequencia,dt_atualizacao, nm_usuario, dt_atualizacao_nrec,nm_usuario_nrec,
		nr_seq_cobranca, cd_estabelecimento,nr_matricula, vl_titulo,
		ds_inconsistencia)
	values (	nextval('pls_desc_inconsistencia_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(),nm_usuario_p,
		nr_seq_cobranca_p, cd_estabelecimento_p,cd_matricula_estip_w, vl_registro_w,
		'Não foi possível encontrar o título do pagador com a matrícula ' ||cd_matricula_estip_w);
	goto final;
else
	select	max(nr_seq_mensalidade)
	into STRICT	nr_seq_mensalidade_w
	from	titulo_receber
	where	nr_titulo	= nr_titulo_w;
end if;

select	*
into STRICT	titulo_receber_w
from	titulo_receber
where	nr_titulo	= nr_titulo_w;

vl_liquidacao_w	:= titulo_receber_w.vl_titulo - vl_registro_w;

insert	into	titulo_receber_cobr(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		nr_seq_cobranca, nr_titulo, vl_cobranca,
		cd_banco, cd_agencia_bancaria,
		cd_moeda, dt_liquidacao, vl_liquidacao,
		vl_despesa_bancaria, vl_juros, vl_multa,
		vl_desc_previsto, nr_seq_mensalidade)
values (	nextval('titulo_receber_cobr_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(),nm_usuario_p,
		nr_seq_cobranca_p, nr_titulo_w, titulo_receber_w.vl_titulo,
		titulo_receber_w.cd_banco, titulo_receber_w.cd_agencia_bancaria,
		titulo_receber_w.cd_moeda, titulo_receber_w.dt_liquidacao, vl_liquidacao_w,
		0, 0, 0,
		0, nr_seq_mensalidade_w);

<<final>>
nr_seq_mensalidade_w	:= nr_seq_mensalidade_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fsfx_gerar_ret_ceu ( ds_linha_p text, nr_seq_cobranca_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

