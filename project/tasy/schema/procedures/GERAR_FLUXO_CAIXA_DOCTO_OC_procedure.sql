-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_docto_oc ( nr_documento_p bigint, nr_docto_compl_p bigint, ie_origem_info_p text, ie_somente_ativa_p text, ds_erro_p INOUT text) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENÇÃO ----------------------------------------------------------------*/


/* Cuidado ao realizar alterações no fluxo de caixa. Toda e qualquer alteração realizada em qualquer uma das       */


/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.           */


/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que           */


/* existam diferenças entre os fluxos de caixa.                                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBÉM O FLUXO DE CAIXA EM LOTE ---------------*/

NR_SEQ_OC_VENCIMENTO_W bigint;
nr_ordem_compra_w	bigint;
vl_item_liquido_w	double precision;
cd_cond_pagto_w		bigint;
cd_conta_financ_w	bigint;
dt_entrega_w		timestamp;
nr_ordem_compra_ant_w	bigint;
ie_classif_Fluxo_w	varchar(1)		:= 'R';
ie_periodo_w		varchar(1)		:= 'D';
ie_origem_w		varchar(1)		:= 'I';
vl_fluxo_w		double precision;
vl_estrag_fluxo_w		double precision;
dt_referencia_w		timestamp;
cd_moeda_w		integer		:= 0;
cd_moeda_padrao_w	integer		:= 0;
qt_vencimento_w		integer;
ds_vencimento_w		varchar(2000);
ie_tratar_fim_semana_w	varchar(2);
vl_total_ordem_w	double precision;
vl_saldo_mercadoria_w	double precision;
vl_venc_ant_w		double precision;
nr_item_oci_w		bigint;
ie_somente_futuro_w	varchar(255);
ie_oc_parcial_w		varchar(255);
ie_calc_fluxo_oc_w	varchar(255);
ie_oc_aprovada_w	varchar(255);
pr_desc_financ_w	double precision;
pr_desc_financ_ordem_w	double precision;
ie_operacao_w		varchar(10);
ie_conta_financ_ativa_w	varchar(1);
cd_moeda_empresa_w	integer;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
nm_usuario_w	varchar(255);
ds_erro_w			varchar(4000);
qtd_dias_fluxo_oc_w		bigint;


c02 CURSOR FOR
SELECT	b.dt_vencimento,
		coalesce(a.cd_moeda, cd_moeda_padrao_w),			-- Ordens de compra com vencimento
		c.nr_seq_conta_financ,
		dividir_sem_round(c.vl_item_liquido, obter_valor_liquido_ordem(a.nr_ordem_compra)) * b.vl_vencimento,
		c.pr_desc_financ,
		a.pr_desc_financeiro,
		a.nr_ordem_compra,
		a.cd_estabelecimento,
		b.NR_ITEM_OC_VENC
from	ordem_compra_item c,
	ordem_compra a,
	ORDEM_COMPRA_VENC b
where	a.nr_ordem_compra	= b.nr_ordem_compra
and	b.nr_ordem_compra	= c.nr_ordem_compra
and     b.NR_ORDEM_COMPRA 	= nr_documento_p
and 	NR_ITEM_OC_VENC 	= nr_docto_compl_p
and	a.dt_ordem_compra	> clock_timestamp() - coalesce(qtd_dias_fluxo_oc_w,180)
and	((ie_oc_aprovada_w = 'N') or (a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> ''))
and	coalesce(a.dt_baixa::text, '') = ''
and	ie_calc_fluxo_oc_w	= 'V'
order	by 4 asc;


c010 CURSOR FOR
SELECT	/*+ index(a ORDCOMP_I1) */				-- Ordens de compra sem vencimento
		b.nr_ordem_compra,
		a.cd_condicao_pagamento,
		coalesce(a.cd_moeda, cd_moeda_padrao_w),	
		b.nr_seq_conta_financ,
		b.vl_item_liquido,
		c.dt_prevista_entrega,
		b.nr_item_oci,
		b.pr_desc_financ,
		a.pr_desc_financeiro,
		a.cd_estabelecimento,
		C.NR_SEQUENCIA
from 	Ordem_compra_item_entrega c,
		ordem_compra_item b,
		ordem_compra a		
where 	b.NR_ORDEM_COMPRA 	= nr_documento_p
and		a.nr_ordem_compra	= b.nr_ordem_compra
and		b.nr_ordem_compra	= c.nr_ordem_compra
and		b.nr_item_oci		= c.nr_item_oci
and		b.qt_material		> coalesce(b.qt_material_entregue,0)
and		c.qt_prevista_entrega 	> coalesce(c.qt_real_entrega,0)
and		(b.nr_seq_conta_financ IS NOT NULL AND b.nr_seq_conta_financ::text <> '')
and		a.dt_ordem_compra	> clock_timestamp() - coalesce(qtd_dias_fluxo_oc_w,180)
and		((ie_oc_aprovada_w = 'N') or (a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> ''))
and		coalesce(a.dt_baixa::text, '') = ''
and (not exists (	SELECT	1 
						from	ordem_compra_venc x
						where	x.nr_ordem_compra = nr_documento_p) 
		or (ie_calc_fluxo_oc_w	= 'E'));


BEGIN
		
		select	nm_usuario, cd_estabelecimento
		into STRICT	nm_usuario_w,
				cd_estabelecimento_w
		from	ordem_compra
		where	NR_ORDEM_COMPRA = nr_documento_p;
		
		qtd_dias_fluxo_oc_w := obter_param_usuario(830, 34, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_w, qtd_dias_fluxo_oc_w);

		
select	obter_moeda_padrao(cd_estabelecimento_w, 'P')
into STRICT	cd_moeda_padrao_w
;

/* Projeto Multimoeda - Busca a moeda padrão da empresa para gravar no fluxo. */

select	obter_moeda_padrao_empresa(cd_estabelecimento_w,'E')
into STRICT	cd_moeda_empresa_w
;

select	ie_tratar_fim_semana,
	ie_somente_futuro,
	coalesce(ie_oc_parcial, 'N'),
	coalesce(ie_oc_aprovada, 'N'),
	coalesce(ie_calc_fluxo_oc, 'V')
into STRICT	ie_tratar_fim_semana_w,
	ie_somente_futuro_w,
	ie_oc_parcial_w,
	ie_oc_aprovada_w,
	ie_calc_fluxo_oc_w
from	parametro_fluxo_caixa
where	cd_estabelecimento	= cd_estabelecimento_w;

nr_ordem_compra_ant_w			:= 0;
vl_saldo_mercadoria_w			:= 0;

if (ie_origem_info_p = 'OC' and (nr_documento_p IS NOT NULL AND nr_documento_p::text <> '') and (nr_docto_compl_p IS NOT NULL AND nr_docto_compl_p::text <> '')) then
begin
		/* Remove os registros da ordem de compra que está sendo processada para incluir novamente */

			CALL remove_docto_fluxo_caixa(nr_documento_p,nr_docto_compl_p,ie_origem_info_p,null,'S');
open c02;
loop
fetch c02 into
	dt_referencia_w,
	cd_moeda_w,
	cd_conta_financ_w,
	vl_fluxo_w,
	pr_desc_financ_w,
	pr_desc_financ_ordem_w,
	nr_ordem_compra_w,
	cd_estabelecimento_w,
	NR_SEQ_OC_VENCIMENTO_W;
EXIT WHEN NOT FOUND; /* apply on c02 */

	if (coalesce(pr_desc_financ_w,0) > 0) then
		vl_fluxo_w		:= vl_fluxo_w - ((pr_desc_financ_w / 100) * vl_fluxo_w);
	end if;

	if (coalesce(pr_desc_financ_ordem_w,0) > 0) then
		vl_fluxo_w		:= vl_fluxo_w - ((pr_desc_financ_ordem_w / 100) * vl_fluxo_w);
	end if;
	
	
	if (cd_moeda_padrao_w <> cd_moeda_w) then

		select	Obter_Valor_Moeda_Nac(cd_estabelecimento_w,
			vl_fluxo_w,
			cd_moeda_w,
			dt_referencia_w)
		into STRICT	vl_fluxo_w
		;

	end if;

	if (ie_tratar_fim_semana_w = 'S') then
		dt_referencia_w			:= obter_proximo_dia_util(cd_estabelecimento_w, dt_referencia_w);
	end if;

			
	if (ie_somente_futuro_w = 'N') or /*Francisco - OS36817 - Quando somente futuro entrava sempre no exception*/
		(dt_referencia_w >= trunc(clock_timestamp(),'dd')) then

		if (ie_oc_parcial_w = 'S') then
			if (nr_ordem_compra_w <> nr_ordem_compra_ant_w) then
				select	coalesce(sum(vl_vencimento),0)
				into STRICT	vl_venc_ant_w
				from	ordem_compra_venc
				where	nr_ordem_compra	= nr_ordem_compra_w
				and	dt_vencimento	< dt_referencia_w;

				select	coalesce(sum(a.vl_mercadoria),0)
				into STRICT	vl_saldo_mercadoria_w
				from	nota_fiscal a
				where	a.nr_ordem_compra	= nr_ordem_compra_w
				and	exists (SELECT	1 from titulo_pagar x where x.nr_seq_nota_fiscal = a.nr_sequencia);
				
				if (vl_venc_ant_w >= vl_saldo_mercadoria_w) then
					vl_saldo_mercadoria_w	:= 0;
				else
					vl_saldo_mercadoria_w	:= vl_saldo_mercadoria_w - vl_venc_ant_w;
				end if;
			end if;
			nr_ordem_compra_ant_w		:= nr_ordem_compra_w;

			if (vl_fluxo_w >= vl_saldo_mercadoria_w) then
				vl_fluxo_w		:= vl_fluxo_w - vl_saldo_mercadoria_w;
				vl_saldo_mercadoria_w	:= 0;
			else
				vl_saldo_mercadoria_w	:= vl_saldo_mercadoria_w - vl_fluxo_w;
				vl_fluxo_w		:= 0;
			end if;
		end if;

		select	CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END
		into STRICT	ie_conta_financ_ativa_w
		from	conta_financeira
		where	cd_conta_financ = cd_conta_financ_w;
		
		vl_estrag_fluxo_w := null;
		if (cd_moeda_w <> cd_moeda_padrao_w) then
			vl_estrag_fluxo_w := vl_fluxo_w;
		end if;

		if (ie_conta_financ_ativa_w = 'A') then

						CALL gravar_fluxo_caixa_docto(dt_referencia_w,
									cd_conta_financ_w,
									OBTER_EMPRESA_ESTAB(cd_estabelecimento_w),
									cd_estabelecimento_w,
									null,
									cd_moeda_w,
									null,
									'R',
									'OC',
									'tasy',
									null,
									null,
									nr_ordem_compra_w,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									vl_fluxo_w,
									null,
									vl_estrag_fluxo_w,
									coalesce(OBTER_COTACAO_MOEDA_OC(cd_moeda_w, nr_ordem_compra_w),1),
									NR_SEQ_OC_VENCIMENTO_W);
					

		end if;
	end if;
end loop;
close c02;	
	exception when others then
		ds_erro_w := substr(ds_erro_w || ' ' || sqlerrm, 0, 4000);
	end;
end if;

nr_ordem_compra_ant_w			:= 0;
vl_saldo_mercadoria_w			:= 0;


begin	

OPEN C010;
LOOP
FETCH C010 into
	nr_ordem_compra_w,
	cd_cond_pagto_w,
	cd_moeda_w,
	cd_conta_financ_w,
	vl_item_liquido_w,
	dt_entrega_w,
	nr_item_oci_w,
	pr_desc_financ_w,
	pr_desc_financ_ordem_w,
	cd_estabelecimento_w,
	NR_SEQ_OC_VENCIMENTO_W;
EXIT WHEN NOT FOUND; /* apply on c010 */

	select	coalesce(sum(obter_valor_liquido_ordem(nr_ordem_compra)),0)
	into STRICT	vl_total_ordem_w
	from	ordem_compra
	where	nr_ordem_compra = nr_ordem_compra_w;
	
	SELECT * FROM Calcular_Vencimento(
		cd_estabelecimento_w, cd_cond_pagto_w, dt_entrega_w, qt_vencimento_w, ds_vencimento_w) INTO STRICT qt_vencimento_w, ds_vencimento_w;		
		
	vl_fluxo_w	:= dividir_sem_round(vl_item_liquido_w, qt_vencimento_w);

	if (coalesce(pr_desc_financ_w,0) > 0) then
		vl_fluxo_w		:= vl_fluxo_w - ((pr_desc_financ_w / 100) * vl_fluxo_w);
	end if;

	if (coalesce(pr_desc_financ_ordem_w,0) > 0) then
		vl_fluxo_w		:= vl_fluxo_w - ((pr_desc_financ_ordem_w / 100) * vl_fluxo_w);
	end if;
				
			
	WHILE(length(ds_vencimento_w) > 3) LOOP

		dt_referencia_w	:= To_Date(substr(ds_vencimento_w,1,10),'dd/mm/yyyy');
		ds_vencimento_w	:= substr(ds_vencimento_w, 12, length(ds_vencimento_w));		


		if (ie_tratar_fim_semana_w = 'S') then
			dt_referencia_w			:= obter_proximo_dia_util(cd_estabelecimento_w, dt_referencia_w);
		end if;

		if (ie_somente_futuro_w = 'N') or /*Francisco - OS36817 - Quando somente futuro entrava sempre no exception*/
			(dt_referencia_w >= trunc(clock_timestamp(),'dd')) then
	
			if (ie_oc_parcial_w = 'S') then
				if (nr_ordem_compra_w <> nr_ordem_compra_ant_w) then
					select	coalesce(sum(vl_vencimento),0)
					into STRICT	vl_venc_ant_w
					from	ordem_compra_venc
					where	nr_ordem_compra	= nr_ordem_compra_w
					and	dt_vencimento	< dt_referencia_w;
	
					select	coalesce(sum(a.vl_mercadoria),0)
					into STRICT	vl_saldo_mercadoria_w
					from	nota_fiscal a
					where	a.nr_ordem_compra	= nr_ordem_compra_w
					and	exists (SELECT	1 from titulo_pagar x where x.nr_seq_nota_fiscal = a.nr_sequencia);
					if (vl_venc_ant_w > vl_saldo_mercadoria_w) then
						vl_saldo_mercadoria_w	:= 0;
					else
						vl_saldo_mercadoria_w	:= vl_saldo_mercadoria_w - vl_venc_ant_w;
					end if;
				end if;
				nr_ordem_compra_ant_w		:= nr_ordem_compra_w;
				if (vl_fluxo_w >= vl_saldo_mercadoria_w) then
					vl_fluxo_w		:= vl_fluxo_w - vl_saldo_mercadoria_w;
					vl_saldo_mercadoria_w	:= 0;
				else
					vl_fluxo_w		:= 0;
					vl_saldo_mercadoria_w	:= vl_saldo_mercadoria_w - vl_fluxo_w;
				end if;
			end if;

			select	obter_operacao_conta_financ(cd_conta_financ_w)
			into STRICT	ie_operacao_w
			;

			select	CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END
			into STRICT	ie_conta_financ_ativa_w
			from	conta_financeira
			where	cd_conta_financ = cd_conta_financ_w;

			vl_estrag_fluxo_w := null;
			if (cd_moeda_w <> cd_moeda_padrao_w) then
				vl_estrag_fluxo_w := vl_fluxo_w;
			end if;
		
			if (ie_conta_financ_ativa_w = 'A') then
				
						CALL gravar_fluxo_caixa_docto(dt_referencia_w,
									cd_conta_financ_w,
									OBTER_EMPRESA_ESTAB(cd_estabelecimento_w),
									cd_estabelecimento_w,
									null,
									cd_moeda_w,
									null,
									'R',
									'OC',
									'tasy',
									null,
									null,
									nr_ordem_compra_w,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									null,
									vl_fluxo_w,
									null,
									vl_estrag_fluxo_w,
									coalesce(OBTER_COTACAO_MOEDA_OC(cd_moeda_w, nr_ordem_compra_w),1),
									NR_SEQ_OC_VENCIMENTO_W);
									
			end if;
		end if;

	end loop;
END LOOP;
CLOSE C010;
	exception when others then
		ds_erro_w := substr(ds_erro_w || ' ' || sqlerrm, 0, 4000);
	end;


commit;
ds_erro_p := ds_erro_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_docto_oc ( nr_documento_p bigint, nr_docto_compl_p bigint, ie_origem_info_p text, ie_somente_ativa_p text, ds_erro_p INOUT text) FROM PUBLIC;

