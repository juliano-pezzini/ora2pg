-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_san_sangria_terapeutica ( nr_seq_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w	atendimento_paciente.nr_atendimento%type;

C01 CURSOR FOR
	SELECT	b.dt_prev_execucao,
		e.dt_programada,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.nr_seq_proc_interno,
		b.ds_justificativa,
		b.nr_seq_derivado,
		d.cd_pessoa_fisica,
		d.nr_atendimento,
		d.cd_medico_resp,
		b.nr_sequencia,
		b.qt_vol_hemocomp
	FROM atendimento_paciente d, prescr_procedimento b, proc_interno a, prescr_medica c
LEFT OUTER JOIN prescr_solic_bco_sangue e ON (c.nr_prescricao = e.nr_prescricao)
WHERE a.nr_sequencia		= b.nr_seq_proc_interno and b.nr_prescricao		= c.nr_prescricao and c.nr_atendimento	= d.nr_atendimento  and a.ie_tipo		= 'ST' and b.nr_prescricao		= nr_seq_prescricao_p and not exists (SELECT      1
                        from    san_sangria_terapeutica x
                        where   x.nr_prescricao = b.nr_prescricao
                        and     x.nr_seq_prescr_proc = b.nr_sequencia);

BEGIN

if (nr_seq_prescricao_p IS NOT NULL AND nr_seq_prescricao_p::text <> '') then

	begin
	
		for	row_C01 in C01 loop
		
			nr_atendimento_w := row_C01.nr_atendimento;
			
			insert into san_sangria_terapeutica(
				nr_sequencia,
				cd_estabelecimento,
				cd_pessoa_fisica,
				dt_prevista,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_atendimento,
				cd_medico,
				cd_procedimento,
				ie_origem_proced,
				nr_seq_proc_interno,
				ds_observacao,
				nr_prescricao,
				nr_seq_derivado,
				nr_seq_prescr_proc,
				qt_volume
			) values (
				nextval('san_sangria_terapeutica_seq'),
				wheb_usuario_pck.get_cd_estabelecimento,
				row_C01.cd_pessoa_fisica,
				coalesce(row_C01.dt_prev_execucao, row_C01.dt_programada, clock_timestamp()),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				row_C01.nr_atendimento,
				row_C01.cd_medico_resp,
				row_C01.cd_procedimento,
				row_c01.ie_origem_proced,
				row_c01.nr_seq_proc_interno,
				row_c01.ds_justificativa,
				nr_seq_prescricao_p,
				row_c01.nr_seq_derivado,
				row_c01.nr_sequencia,
				row_C01.qt_vol_hemocomp);
			
			commit;
		end loop;
	
	exception
		when others then
		
		begin
			insert into log_atendimento(
				dt_atualizacao,
				nm_usuario,
				cd_log,
				nr_atendimento,
				ds_log)
			values (clock_timestamp(),
				nm_usuario_p,
				4004,
				nr_atendimento_w,
				'OBJ: gerar_san_sangria_terapeutica ' || chr(13) ||
				wheb_mensagem_pck.get_texto(799970) || ': ' || obter_perfil_ativo || chr(13) ||
				wheb_mensagem_pck.get_texto(799971) || ': ' || wheb_usuario_pck.get_cd_estabelecimento || chr(13) ||
				'CALLSTACK: ' || dbms_utility.format_call_stack || chr(13));
			exception
			when others then
				null;
		end;
		
	end;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_san_sangria_terapeutica ( nr_seq_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

