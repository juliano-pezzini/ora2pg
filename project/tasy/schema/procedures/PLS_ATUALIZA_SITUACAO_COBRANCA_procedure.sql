-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_situacao_cobranca ( nr_seq_cobranca_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
	ie_commit_p 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
	Manutenção de Títulos a Receber 
	 
	FECHAR_CAIXA_RECEB 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_requisicao_w		bigint;
nr_seq_req_proc_w		bigint;
nr_seq_req_mat_w		bigint;
nr_titulo_w			bigint	:= 0;

C01 CURSOR FOR 
	SELECT	nr_seq_req_proc 
	from	pls_cobranca_previa_proc 
	where	nr_seq_cob_previa	= nr_seq_cobranca_p;
	
C02 CURSOR FOR 
	SELECT	nr_seq_req_mat 
	from	pls_cobranca_previa_mat 
	where	nr_seq_cob_previa	= nr_seq_cobranca_p;


BEGIN 
begin 
select	nr_titulo 
into STRICT	nr_titulo_w 
from	titulo_receber 
where	nr_seq_cob_previa	= nr_seq_cobranca_p;
exception 
when others then 
	nr_titulo_w	:= 0;
end;
 
select	nr_seq_requisicao 
into STRICT	nr_seq_requisicao_w 
from	pls_cobranca_previa_serv 
where	nr_sequencia	= nr_seq_cobranca_p;
 
update	pls_cobranca_previa_serv 
set	ie_situacao	= 'P', 
	nm_usuario	= nm_usuario_p, 
	dt_atualizacao	= clock_timestamp() 
where	nr_sequencia	= nr_seq_cobranca_p;
 
open C01;
loop 
fetch C01 into	 
	nr_seq_req_proc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	update	pls_requisicao_proc 
	set	ie_status			= 'P', 
		ie_cobranca_previa_servico	= 'S', 
		nm_usuario			= nm_usuario_p, 
		dt_atualizacao			= clock_timestamp(), 
		qt_procedimento			= qt_solicitado 
	where	nr_sequencia			= nr_seq_req_proc_w;
	end;
end loop;
close C01;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_req_mat_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	update	pls_requisicao_mat 
	set	ie_status			= 'P', 
		ie_cobranca_previa_servico	= 'S', 
		nm_usuario			= nm_usuario_p, 
		dt_atualizacao			= clock_timestamp(), 
		qt_material			= qt_solicitado 
	where	nr_sequencia			= nr_seq_req_mat_w;
	end;
end loop;
close C02;
 
CALL pls_atualiza_estagio_req(nr_seq_requisicao_w, 
			nm_usuario_p);
 
if (nr_titulo_w > 0) then 
	CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 
					'L', 
					'Pagamento do título nº '|| nr_titulo_w ||' efetuado. Requisição Liberada para Execução.', 
					null, 
					nm_usuario_p);
end if;
 
if (coalesce(ie_commit_p, 'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_situacao_cobranca ( nr_seq_cobranca_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

