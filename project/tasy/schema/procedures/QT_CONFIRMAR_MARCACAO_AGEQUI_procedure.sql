-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_confirmar_marcacao_agequi ( nr_seq_agenda_p bigint, nm_usuario_p text, ds_observacao_p text, NR_MINUTO_DURACAO_p bigint ) AS $body$
DECLARE


nr_seq_paciente_w	bigint;	--Não é usado
cd_pessoa_fisica_w	varchar(10);	--Não é usado
dt_agenda_w		timestamp;
nr_seq_local_w		bigint;
nr_duracao_w		bigint;
nr_seq_marcacao_w	bigint;
nr_seq_atendimento_w	bigint;
nr_seq_prof_W		bigint;	--Não é usado
ie_tipo_agendamento_w	varchar(15);	--Não é usado
nr_ciclo_w		smallint;      	--Não é usado
ie_gera_autorizacao_w	varchar(1);
cd_estabelecimento_w	smallint;
ie_atualiza_estab_w	varchar(1);
cd_estab_local_w	smallint;
nr_seq_atendimento_ww	bigint;
qt_marcacao_w		bigint;
ie_consist_outro_agen_w	varchar(1);
ie_limpar_campo_quimio  varchar(1);
ds_bloq_trat_quimio_w	paciente_atendimento.ds_bloq_trat_quimio%type;
nr_seq_motivo_bloq_w	paciente_atendimento.nr_seq_motivo_bloq%type;

C01 CURSOR FOR
	SELECT	nr_seq_local,
		dt_agenda,
		nr_sequencia,
		nr_seq_atendimento
	from	agenda_quimio_marcacao
	where	nr_seq_agenda	= nr_seq_agenda_p
	and	ie_gerado	= 'N';

C02 CURSOR FOR
	SELECT	dt_agenda,
			nr_seq_local,
			nr_duracao,
			nr_seq_atendimento
	from	agenda_quimio_marcacao
	where	nr_seq_agenda	= nr_seq_agenda_p
	and 	nm_usuario 	= nm_usuario_p
	order by dt_agenda;


BEGIN

ie_gera_autorizacao_w := obter_param_usuario(865, 6, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gera_autorizacao_w);
ie_atualiza_estab_w := obter_param_usuario(865, 132, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_estab_w);

ie_consist_outro_agen_w := obter_param_usuario(865, 237, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consist_outro_agen_w);
ie_limpar_campo_quimio := obter_param_usuario(865, 245, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_limpar_campo_quimio);

if (ie_consist_outro_agen_w = 'S') then
	open C02;
	loop
	fetch C02 into
		dt_agenda_w,
		nr_seq_local_w,
		nr_duracao_w,
		nr_seq_atendimento_ww;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	count(*)
		into STRICT	qt_marcacao_w
		from	agenda_quimio_marcacao a
		where  ((dt_agenda_w between dt_agenda and dt_agenda + (nr_duracao - 1) / 1440)
		or	(dt_agenda_w + (nr_duracao_w - 1) / 1440 between dt_agenda and dt_agenda + (nr_duracao - 1) / 1440)
		or	(dt_agenda between dt_agenda_w and dt_agenda_w + (nr_duracao_w - 1) / 1440)
		or	(dt_agenda + (nr_duracao - 1) / 1440 between dt_agenda_w and dt_agenda_w + (nr_duracao_w - 1) / 1440)
		or      (dt_agenda_w between dt_agenda and dt_agenda + (NR_MINUTO_DURACAO_p - 1) / 1440)
		or	(dt_agenda_w + (NR_MINUTO_DURACAO_p - 1) / 1440 between dt_agenda and dt_agenda + (NR_MINUTO_DURACAO_p - 1) / 1440)
		or	(dt_agenda between dt_agenda_w and dt_agenda_w + (NR_MINUTO_DURACAO_p - 1) / 1440)
		or	(dt_agenda + (NR_MINUTO_DURACAO_p - 1) / 1440 between dt_agenda_w and dt_agenda_w + (NR_MINUTO_DURACAO_p - 1) / 1440))
		and 	nr_seq_agenda	<> nr_seq_agenda_p
		and	nr_seq_local	= nr_seq_local_w
		and (coalesce(ie_gerado, 'X')	= 'N'
		or (coalesce(ie_gerado, 'X')	= 'S'
		and	(a.nr_seq_pend_agenda IS NOT NULL AND a.nr_seq_pend_agenda::text <> '')
		and	not exists (	SELECT	1
					from 	agenda_quimio x
					where 	a.nr_seq_atendimento = x.nr_seq_atendimento
					and	a.nr_seq_pend_agenda = x.nr_seq_pend_agenda
					and	trunc(x.dt_agenda)   = trunc(a.dt_Agenda)
					and	x.ie_status_agenda in ('F','S','C')) ));


		if (coalesce(qt_marcacao_w,0) = 0) then

			select	count(*)
			into STRICT	qt_marcacao_w
			from	agenda_quimio
			where	((dt_agenda_w between dt_agenda and dt_agenda + (nr_minuto_duracao - 1) / 1440)
			or	(dt_agenda_w + (nr_duracao_w - 1) / 1440 between dt_agenda and dt_agenda + (nr_minuto_duracao - 1) / 1440)
			or	(dt_agenda between dt_agenda_w and dt_agenda_w + (nr_duracao_w - 1) / 1440)
			or	(dt_agenda + (nr_minuto_duracao - 1) / 1440 between dt_agenda_w and dt_agenda_w + (nr_duracao_w - 1) / 1440)
			or      (dt_agenda_w between dt_agenda and dt_agenda + (NR_MINUTO_DURACAO_p - 1) / 1440)
			or	(dt_agenda_w + (NR_MINUTO_DURACAO_p - 1) / 1440 between dt_agenda and dt_agenda + (NR_MINUTO_DURACAO_p - 1) / 1440)
			or	(dt_agenda between dt_agenda_w and dt_agenda_w + (NR_MINUTO_DURACAO_p - 1) / 1440)
			or	(dt_agenda + (NR_MINUTO_DURACAO_p - 1) / 1440 between dt_agenda_w and dt_agenda_w + (NR_MINUTO_DURACAO_p - 1) / 1440))
			and 	nr_sequencia	<> nr_seq_agenda_p
			and	nr_seq_local	= nr_seq_local_w
			and	ie_status_agenda	not in ('F','S','C');


		end if;

		if (coalesce(qt_marcacao_w,0) > 0) then

			CALL Wheb_mensagem_pck.exibir_mensagem_abort(243336,'DT_DIAS='||dt_agenda_w|| ';QT_TEMPO=' || to_char(NR_MINUTO_DURACAO_p));

			if (ie_limpar_campo_quimio = 'S')	then --OS 620565
				select	max(ds_bloq_trat_quimio),
						max(nr_seq_motivo_bloq)
				into STRICT	ds_bloq_trat_quimio_w,
						nr_seq_motivo_bloq_w
				from	paciente_atendimento
				where	nr_seq_atendimento = nr_seq_atendimento_ww;

				if (ds_bloq_trat_quimio_w IS NOT NULL AND ds_bloq_trat_quimio_w::text <> '') and (nr_seq_motivo_bloq_w IS NOT NULL AND nr_seq_motivo_bloq_w::text <> '')then

				update	paciente_atendimento
				set		ds_bloq_trat_quimio 	= '',
						nr_seq_motivo_bloq 	 = NULL
				where	nr_seq_atendimento 		= nr_seq_atendimento_ww;
			end if;

		end if;

		end if;
		end;
	end loop;
	close C02;
end if;

open C01;
loop
fetch C01 into
	nr_seq_local_w,
	dt_agenda_w,
	nr_seq_marcacao_w,
	nr_seq_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	update	agenda_quimio
	set	nr_seq_local	= nr_seq_local_w,
		dt_agenda	= dt_agenda_w,
		dt_atualizacao	= clock_timestamp(),
		ds_observacao 	= ds_observacao_p,
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_agenda_p;

	update	agenda_quimio_marcacao
	set	ie_gerado	= 'S'
	where	nr_sequencia	= nr_seq_marcacao_w;

	if (ie_atualiza_estab_w = 'S') then
		select	max(cd_estabelecimento)
		into STRICT	cd_estab_local_w
		from	qt_local
		where	nr_sequencia = nr_seq_local_w;

		update	paciente_atendimento
		set	cd_estabelecimento = cd_estab_local_w
		where	nr_seq_atendimento = nr_seq_atendimento_w;
	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_confirmar_marcacao_agequi ( nr_seq_agenda_p bigint, nm_usuario_p text, ds_observacao_p text, NR_MINUTO_DURACAO_p bigint ) FROM PUBLIC;

