-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE excluir_prescricao_nao_lib ( qt_hora_adicional_p bigint, cd_motivo_baixa_p bigint, dt_parametro_p timestamp) AS $body$
DECLARE


/* o motivo de baixa deve ser o mesmo utilizado na procedure de baixa das prescricoes */

nr_prescricao_w		bigint;
dt_inicial_w		timestamp;
dt_final_w		timestamp;

c010 CURSOR FOR
	SELECT distinct a.nr_prescricao
	from 	Prescr_medica b,
		prescr_material a
	where a.cd_motivo_baixa in (0, cd_motivo_baixa_p)
        and a.nr_prescricao = b.nr_prescricao
	  and b.dt_prescricao between dt_inicial_w and dt_final_w
	  and coalesce(b.dt_liberacao::text, '') = ''
	  and coalesce(b.dt_liberacao_medico::text, '') = ''
	  and not exists (SELECT	1
		from 	cirurgia c
		where 	c.nr_prescricao = b.nr_prescricao
		
union

		select 	1
		from 	prescr_medica x
		where 	(x.nr_cirurgia IS NOT NULL AND x.nr_cirurgia::text <> '') 
		and 	coalesce(x.ie_tipo_prescr_cirur,0) <> 2
		and 	x.nr_prescricao = b.nr_prescricao)
	
union

	select distinct a.nr_prescricao
	from 	Prescr_medica b,
		prescr_Procedimento a
	where a.cd_motivo_baixa in (0, cd_motivo_baixa_p)
        and a.nr_prescricao = b.nr_prescricao
	  and b.dt_prescricao between dt_inicial_w and dt_final_w
	  and coalesce(b.dt_liberacao::text, '') = ''
	  and coalesce(b.dt_liberacao_medico::text, '') = ''
	  and not exists (select	1
		from 	cirurgia c
		where 	c.nr_prescricao = b.nr_prescricao
		
union
 
		select 	1
		from 	prescr_medica x
		where 	(x.nr_cirurgia IS NOT NULL AND x.nr_cirurgia::text <> '') 
		and 	coalesce(x.ie_tipo_prescr_cirur,0) <> 2
		and 	x.nr_prescricao = b.nr_prescricao)
	Order by 1;

c020 CURSOR FOR
SELECT	a.nr_prescricao
from	prescr_medica a
where	a.dt_prescricao between dt_inicial_w and dt_final_w
and	coalesce(a.dt_liberacao::text, '') = ''
and	coalesce(a.dt_liberacao_medico::text, '') = ''
and 	not exists (SELECT	1
	from 	cirurgia c
	where 	c.nr_prescricao = a.nr_prescricao
	
union

	select 	1
	from 	prescr_medica x
	where 	(x.nr_cirurgia IS NOT NULL AND x.nr_cirurgia::text <> '') 
	and 	coalesce(x.ie_tipo_prescr_cirur,0) <> 2
	and 	x.nr_prescricao = a.nr_prescricao)
and not exists (
	select	1
	from	prescr_material c
	where	c.nr_prescricao = a.nr_prescricao  LIMIT 1)
and not exists (
	select	1
	from	prescr_procedimento d
	where	d.nr_prescricao = a.nr_prescricao  LIMIT 1);
		

BEGIN

dt_final_w	:= (dt_parametro_p - qt_hora_adicional_p / 24);
dt_inicial_w	:= dt_final_w - 7;

OPEN C010;
LOOP
FETCH C010 into	
	nr_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on C010 */
	BEGIN
	
	begin
	delete from prescr_material
	where nr_prescricao	= nr_prescricao_w
	  and cd_motivo_baixa 	in (0, 10);
	exception
		when others then
			nr_prescricao_w := nr_prescricao_w;			
	end;
	
	begin
	delete from prescr_procedimento
	where nr_prescricao	= nr_prescricao_w
	  and cd_motivo_baixa 	in (0, cd_motivo_baixa_p);
	exception
		when others then
			nr_prescricao_w := nr_prescricao_w;			
	end;
	
	begin
	delete from prescr_medica
	where nr_prescricao	= nr_prescricao_w;
	exception
		when others then
			nr_prescricao_w := nr_prescricao_w;
	end;
	begin
	CALL gravar_log_exclusao('PRESCR_MEDICA','JOB_PNL','NR_PRESCRICAO : ' || nr_prescricao_w,'N');
	exception
		when others then
			nr_prescricao_w := nr_prescricao_w;
	end;
	END;
END LOOP;
close c010;

commit;

open C020;
loop
fetch C020 into	
	nr_prescricao_w;
EXIT WHEN NOT FOUND; /* apply on C020 */
	begin
	begin
	delete from prescr_medica
	where nr_prescricao	= nr_prescricao_w;
	exception
		when others then
			nr_prescricao_w := nr_prescricao_w;
	end;
	begin
	CALL gravar_log_exclusao('PRESCR_MEDICA','JOB_PNL2','NR_PRESCRICAO : ' || nr_prescricao_w,'N');
	exception
		when others then
			nr_prescricao_w := nr_prescricao_w;
	end;
	end;
end loop;
close C020;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE excluir_prescricao_nao_lib ( qt_hora_adicional_p bigint, cd_motivo_baixa_p bigint, dt_parametro_p timestamp) FROM PUBLIC;

