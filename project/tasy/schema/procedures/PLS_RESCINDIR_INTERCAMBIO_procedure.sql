-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_rescindir_intercambio ( nr_seq_intercambio_p bigint, nr_seq_pagador_p bigint, nr_seq_segurado_p bigint, dt_rescisao_p timestamp, dt_limite_utilizacao_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nr_seq_rescisao_contr_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_fim_repasse_p timestamp default null) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_seq_dependente_w		bigint;
qt_benef_inativos_w		bigint;
qt_beneficiarios_w		bigint;
qt_registros_w			bigint;
nr_seq_intercambio_w		bigint;
nr_seq_titular_w		pls_segurado.nr_seq_titular%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado
	where	nr_seq_intercambio	= nr_seq_intercambio_p
	and	coalesce(dt_rescisao::text, '') = '';

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado
	where	nr_seq_titular	= nr_seq_segurado_p
	and	coalesce(dt_rescisao::text, '') = '';

c03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_segurado
	where	nr_seq_pagador	= nr_seq_pagador_p
	and	coalesce(dt_rescisao::text, '') = '';

C04 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_segurado		a,
		pls_tabela_preco	b
	where	a.nr_seq_tabela				= b.nr_sequencia
	and	a.nr_seq_intercambio			= nr_seq_intercambio_w
	and	coalesce(b.ie_preco_vidas_contrato,'N')	= 'S'
	and	b.ie_calculo_vidas 			<> 'F'
	
union

	SELECT	a.nr_sequencia
	from	pls_segurado		a,
		pls_tabela_preco	b
	where	a.nr_seq_tabela				= b.nr_sequencia
	and	a.nr_seq_intercambio			= nr_seq_intercambio_w
	and	a.nr_seq_titular			= nr_seq_segurado_p
	and	coalesce(b.ie_preco_vidas_contrato,'N')	= 'S'
	and	b.ie_calculo_vidas 			= 'F'
	
union

	select	a.nr_sequencia
	from	pls_segurado		a,
		pls_tabela_preco	b
	where	a.nr_seq_tabela				= b.nr_sequencia
	and	a.nr_seq_intercambio			= nr_seq_intercambio_w
	and	coalesce(b.ie_preco_vidas_contrato,'N')	= 'S'
	and	a.nr_sequencia				= nr_seq_titular_w
	and	b.ie_calculo_vidas 			= 'F'
	
union

	select	a.nr_sequencia
	from	pls_segurado		a,
		pls_tabela_preco	b
	where	a.nr_seq_tabela				= b.nr_sequencia
	and	a.nr_seq_intercambio			= nr_seq_intercambio_w
	and	coalesce(b.ie_preco_vidas_contrato,'N')	= 'S'
	and	a.nr_seq_titular			= nr_seq_titular_w
	and	b.ie_calculo_vidas 			= 'F';


BEGIN

/*Rescindir o intercâmbio*/

if (coalesce(nr_seq_intercambio_p,0) <> 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL pls_rescindir_segurado(nr_seq_segurado_w, dt_rescisao_p, dt_limite_utilizacao_p,
					nr_seq_motivo_p, ds_observacao_p, cd_estabelecimento_p,
					nm_usuario_p,'C','N',null, dt_fim_repasse_p);
		end;
	end loop;
	close C01;

	update	pls_intercambio
	set	dt_exclusao		= dt_rescisao_p,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_intercambio_p;

	update	pls_contrato_pagador
	set	dt_rescisao			= dt_rescisao_p,
		nm_usuario			= nm_usuario_p,
		dt_atualizacao			= clock_timestamp(),
		nr_seq_motivo_cancelamento	= nr_seq_motivo_p
	where	nr_seq_pagador_intercambio	= nr_seq_intercambio_p;
/*Rescindir o beneficiário intercâmbio*/

elsif (coalesce(nr_seq_segurado_p,0) <> 0) then
	open C02;
	loop
	fetch C02 into
		nr_seq_dependente_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		CALL pls_rescindir_segurado(nr_seq_dependente_w, dt_rescisao_p, dt_limite_utilizacao_p,
					nr_seq_motivo_p, ds_observacao_p, cd_estabelecimento_p,
					nm_usuario_p,'B','N',null, dt_fim_repasse_p);
		end;
	end loop;
	close C02;

	CALL pls_rescindir_segurado(nr_seq_segurado_p, dt_rescisao_p, dt_limite_utilizacao_p,
				nr_seq_motivo_p, ds_observacao_p, cd_estabelecimento_p,
				nm_usuario_p,'B','N',null, dt_fim_repasse_p);

	/* Obter o contrato do pagador */

	select 	nr_seq_intercambio,
		nr_seq_titular
	into STRICT	nr_seq_intercambio_w,
		nr_seq_titular_w
	from 	pls_segurado
	where	nr_sequencia = nr_seq_segurado_p;

	open C04;
	loop
	fetch C04 into
		nr_seq_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		CALL pls_recalc_preco_benef_inter(nr_seq_segurado_w,'Q','S',dt_rescisao_p,'N',nm_usuario_p,cd_estabelecimento_p);
		end;
	end loop;
	close C04;

/*Rescindir o pagador intercâmbio*/

elsif (coalesce(nr_seq_pagador_p,0) <> 0) then
	open C03;
	loop
	fetch C03 into
		nr_seq_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		CALL pls_rescindir_segurado(nr_seq_segurado_w, dt_rescisao_p, dt_limite_utilizacao_p,
					nr_seq_motivo_p, ds_observacao_p, cd_estabelecimento_p,
					nm_usuario_p,'P','N',null, dt_fim_repasse_p);
		end;
	end loop;
	close C03;

	update	pls_contrato_pagador a
	set	dt_rescisao			= dt_rescisao_p,
		nm_usuario			= nm_usuario_p,
		dt_atualizacao			= clock_timestamp(),
		nr_seq_motivo_cancelamento	= nr_seq_motivo_p
	where	nr_sequencia			= nr_seq_pagador_p
	and	not exists (SELECT	1
				from	pls_segurado x
				where	x.nr_seq_pagador	= a.nr_sequencia
				and	coalesce(x.dt_rescisao::text, '') = ''
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> ''));

	CALL pls_liquidar_titulos_rescisao(nr_seq_pagador_p,dt_rescisao_p,cd_estabelecimento_p,nm_usuario_p);
	/* Obter o contrato do pagador */

	select 	nr_seq_pagador_intercambio
	into STRICT	nr_seq_intercambio_w
	from 	pls_contrato_pagador
	where	nr_sequencia = nr_seq_pagador_p;
end if;

/* Verificar se após rescindir os beneficiários ou o pagador vai ser rescindido o contrato de intercâmbio também */

if (coalesce(nr_seq_intercambio_w,0) > 0) then
	select	count(*)
	into STRICT	qt_beneficiarios_w
	from	pls_segurado
	where	nr_seq_intercambio	= nr_seq_intercambio_w;

	select	count(*)
	into STRICT	qt_benef_inativos_w
	from	pls_segurado
	where	nr_seq_intercambio	= nr_seq_intercambio_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	(dt_rescisao IS NOT NULL AND dt_rescisao::text <> '')
	and	dt_rescisao <= clock_timestamp();

	if (qt_beneficiarios_w > 0) and (qt_benef_inativos_w = qt_beneficiarios_w) then
		update	pls_intercambio
		set	dt_exclusao		= dt_rescisao_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= nr_seq_intercambio_w;
	end if;
end if;

if (nr_seq_rescisao_contr_p IS NOT NULL AND nr_seq_rescisao_contr_p::text <> '') then
	update	pls_rescisao_contrato
	set	ie_situacao 	= 'I',
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_rescisao_contr_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rescindir_intercambio ( nr_seq_intercambio_p bigint, nr_seq_pagador_p bigint, nr_seq_segurado_p bigint, dt_rescisao_p timestamp, dt_limite_utilizacao_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nr_seq_rescisao_contr_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_fim_repasse_p timestamp default null) FROM PUBLIC;

