-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_qtd_auxiliares ( nr_seq_conta_p bigint, ie_evento_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_auxiliares_w			bigint;
qt_participantes_w		bigint;
ds_retorno_w			varchar(1) := 'S';
cd_guia_referencia_w		pls_conta.cd_guia_referencia%type;
cd_guia_w			pls_conta.cd_guia%type;
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
qt_reg_resumo_w			bigint;
qt_reg_honorario_w		bigint;
nr_seq_conta_referencia_w	pls_conta.nr_sequencia%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
cd_auxiliar_w			bigint;
cd_auxiliar_spsadt_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_segurado_w		pls_conta.nr_seq_segurado%type;
nr_seq_conta_proc_w		bigint;
nr_seq_proc_ref_w		bigint;
cd_tiss_w			bigint;
cd_tiss_ww			varchar(20);
nm_executor_w			varchar(1000);
ds_observacao_w			varchar(4000);
qt_part_existente_w		bigint;
ie_origem_conta_w		pls_conta.ie_origem_conta%type;
ie_part_crede_w			varchar(5);
ds_observacao_ww		varchar(255);
nr_seq_conta_proc_ww		bigint;
nr_auxiliares_ww		bigint;
nr_seq_grau_partic_w		pls_conta.nr_seq_grau_partic%type;
nr_seq_grau_partic_ww		bigint;
cd_medico_w			varchar(20);
cd_medico_executor_w		varchar(20);
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_conta_ww			bigint;
ie_gerar_na_conta_w		varchar(1) := 'N';
ds_grau_participacao_w		varchar(255);
ie_via_acesso_w			varchar(1);
ie_auxiliar_w			pls_grau_participacao.ie_auxiliar%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		coalesce(nr_auxiliares,0),
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_ref,
		ie_via_acesso
	from	pls_conta_proc
	where	nr_seq_conta = nr_seq_conta_p
	order by 1;

C02 CURSOR FOR
	SELECT	p.cd_tiss,
		p.ds_grau_participacao,
		b.nr_sequencia,
		a.cd_medico,
		c.cd_medico_executor,
		c.nr_seq_prestador_exec,
		a.nr_seq_grau_partic,
		a.nr_seq_prestador
	from 	pls_conta             c,
		pls_conta_proc        b,
		pls_proc_participante a,
		pls_grau_participacao p
	where	c.cd_guia_ok = cd_guia_referencia_w
	and	c.nr_seq_segurado = nr_seq_segurado_w
	and	c.ie_tipo_guia = '5'
	and	b.nr_seq_conta = c.nr_sequencia
	and	b.ie_via_acesso = ie_via_acesso_w
	and	b.ie_origem_proced = ie_origem_proced_w
	and	b.cd_procedimento = cd_procedimento_w
	and	b.ie_status in ('A', 'C', 'L', 'M', 'P', 'S')
	and	a.nr_seq_conta_proc = b.nr_sequencia
	and	a.ie_status <> 'C'
	and	p.nr_sequencia = a.nr_seq_grau_partic
	and 	p.ie_auxiliar = 'S'
	
union all

	SELECT 	p.cd_tiss,
		p.ds_grau_participacao,
		b.nr_sequencia,
		null,
		c.cd_medico_executor,
		null,
		c.nr_seq_grau_partic,
		c.nr_seq_prestador
	from 	pls_conta c,
		pls_conta_proc b,
		pls_grau_participacao p
	where	c.cd_guia_ok = cd_guia_referencia_w
	and	c.nr_seq_segurado = nr_seq_segurado_w
	and	c.ie_tipo_guia = '6'
	and	b.nr_seq_conta = c.nr_sequencia
	and	b.ie_origem_proced = ie_origem_proced_w
	and	b.cd_procedimento = cd_procedimento_w
	and	b.ie_via_acesso = ie_via_acesso_w
	and	b.ie_status in ('A', 'C', 'L', 'M', 'P', 'S')
	and	p.nr_sequencia = c.nr_seq_grau_partic
	and	p.ie_auxiliar = 'S'
	order by 1;

C03 CURSOR FOR
	/* Sem participante através  da guia de referencia */

	SELECT	p.cd_tiss,
		p.ds_grau_participacao,
		b.nr_sequencia,
		null cd_medico,
		c.cd_medico_executor,
		null nr_seq_prestador,
		b.nr_sequencia
	from	pls_conta_proc		b,
		pls_conta		c,
		pls_grau_participacao	p
	where	c.nr_sequencia				= b.nr_seq_conta
	and	p.nr_sequencia 				= c.nr_seq_grau_partic
	and	c.cd_guia_referencia			= cd_guia_referencia_w
	and	c.nr_seq_segurado			= nr_seq_segurado_w
	and 	b.cd_procedimento			= cd_procedimento_w
	and	b.ie_via_acesso				= ie_via_acesso_w
	and 	b.ie_origem_proced			= ie_origem_proced_w
	and	p.ie_auxiliar				= 'S'
	and	c.ie_tipo_guia 				= '4'
	and	not exists (	SELECT	1
				from	pls_proc_participante x
				where	x.nr_seq_conta_proc = b.nr_sequencia)
	
UNION

	/* Sem participante através  da guia da conta */

	select	p.cd_tiss,
		p.ds_grau_participacao,
		b.nr_sequencia,
		null cd_medico,
		c.cd_medico_executor,
		null nr_seq_prestador,
		b.nr_sequencia
	from	pls_conta_proc		b,
		pls_conta		c,
		pls_grau_participacao	p
	where	c.nr_sequencia				= b.nr_seq_conta
	and	p.nr_sequencia 				= c.nr_seq_grau_partic
	and	c.cd_guia				= cd_guia_referencia_w
	and	c.nr_seq_segurado			= nr_seq_segurado_w
	and 	b.cd_procedimento			= cd_procedimento_w
	and	b.ie_via_acesso				= ie_via_acesso_w
	and 	b.ie_origem_proced			= ie_origem_proced_w
	and	p.ie_auxiliar				= 'S'
	and	c.ie_tipo_guia 				= '4'
	and	not exists (	select	1
				from	pls_proc_participante x
				where	x.nr_seq_conta_proc = b.nr_sequencia)
	
UNION

	/* Com participante através  da guia de referencia */

	select	p.cd_tiss,
		p.ds_grau_participacao,
		b.nr_sequencia,
		a.cd_medico,
		c.cd_medico_executor,
		a.nr_seq_prestador,
		b.nr_sequencia
	from	pls_conta_proc		b,
		pls_proc_participante	a,
		pls_grau_participacao	p,
		pls_conta		c
	where	c.nr_sequencia				= b.nr_seq_conta
	and	b.nr_sequencia	 			= a.nr_seq_conta_proc
	and	p.nr_sequencia  			= a.nr_seq_grau_partic
	and	c.cd_guia_referencia			= cd_guia_referencia_w
	and	c.nr_seq_segurado			= nr_seq_segurado_w
	and 	b.cd_procedimento			= cd_procedimento_w
	and	b.ie_via_acesso				= ie_via_acesso_w
	and 	b.ie_origem_proced			= ie_origem_proced_w
	and	p.ie_auxiliar				= 'S'
	and	c.ie_tipo_guia 				= '4'
	and	a.ie_status 				<> 'C'
	
UNION

	/* Com participante através  da guia da conta */

	select	p.cd_tiss,
		p.ds_grau_participacao,
		b.nr_sequencia,
		a.cd_medico,
		c.cd_medico_executor,
		a.nr_seq_prestador,
		b.nr_sequencia
	from	pls_conta_proc		b,
		pls_proc_participante	a,
		pls_grau_participacao	p,
		pls_conta		c
	where	c.nr_sequencia				= b.nr_seq_conta
	and	b.nr_sequencia	 			= a.nr_seq_conta_proc
	and	p.nr_sequencia  			= a.nr_seq_grau_partic
	and	c.cd_guia				= cd_guia_referencia_w
	and	c.nr_seq_segurado			= nr_seq_segurado_w
	and 	b.cd_procedimento			= cd_procedimento_w
	and	b.ie_via_acesso				= ie_via_acesso_w
	and 	b.ie_origem_proced			= ie_origem_proced_w
	and	p.ie_auxiliar				= 'S'
	and	c.ie_tipo_guia 				= '4'
	and	a.ie_status 				<> 'C'
	order by 1;


BEGIN

if (pls_util_cta_pck.obter_se_processa_glosa('2604', cd_estabelecimento_p) = 'S') then

	-- Obter dados necessários
	select	b.nr_sequencia,
		coalesce(cd_guia_referencia,cd_guia),
		b.cd_guia,
		b.ie_tipo_guia,
		b.nr_seq_conta_referencia,
		b.nr_seq_segurado,
		b.ie_origem_conta,
		b.nr_seq_grau_partic
	into STRICT	nr_seq_conta_w,
		cd_guia_referencia_w,
		cd_guia_w,
		ie_tipo_guia_w,
		nr_seq_conta_referencia_w,
		nr_seq_segurado_w,
		ie_origem_conta_w,
		nr_seq_grau_partic_w
	from	pls_conta	b
	where	b.nr_sequencia	= nr_seq_conta_p;

	if (ie_tipo_guia_w = '6') and (nr_seq_grau_partic_w IS NOT NULL AND nr_seq_grau_partic_w::text <> '') then
		select	coalesce(ie_auxiliar,'N')
		into STRICT	ie_auxiliar_w
		from	pls_grau_participacao
		where	nr_sequencia = nr_seq_grau_partic_w;

		if (ie_auxiliar_w = 'N') then
			goto final;
		end if;
	end if;
	open C01;
	loop
	fetch C01 into
		nr_seq_conta_proc_w,
		nr_auxiliares_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_ref_w,
		ie_via_acesso_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_gerar_na_conta_w := 'N';

		ds_observacao_ww :=	'A quantidade de participantes é maior que o permitido para o procedimento: '||chr(13)||chr(10)||
					'O sistema considerou excessiva a participação dos auxiliares:';
		ds_observacao_w	 := '';

		--if	(nvl(nr_auxiliares_w,0) > 0) then --Só será consistido se existe número de participantes definidos no procedimento
		-- OS - 372134 Demitrius documentado o if acima por solicitação do cliente. Quando o numero de auxiliares for nulo ou 0 o sistema não pode permitir auxiliares
		if (ie_tipo_guia_w <> '4') then

			open C02;
			loop
			fetch C02 into
				cd_tiss_ww,
				ds_grau_participacao_w,
				nr_seq_conta_proc_ww,
				cd_medico_w,
				cd_medico_executor_w,
				nr_seq_prestador_exec_w,
				nr_seq_grau_partic_ww,
				nr_seq_prestador_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin

				ie_part_crede_w	:= pls_obter_se_credenciado_prest(cd_medico_w, nr_seq_prestador_exec_w);

				/*Testes realizados de modo a não criar a glosa em participantes que serão alocados em guias de HI pelo sistema.*/

				if	((coalesce(ie_origem_conta_w,'X') in ('D','P')) and (coalesce(ie_tipo_guia_w,0) = 5) and (ie_part_crede_w = 'N')) or (coalesce(ie_tipo_guia_w,0) = 6) then
					nm_executor_w	:= '';
					--Por ordem será liberado até o máximo permitido de auxiliares, após estes o procedimento é glosado.
					if (c02%rowCount > nr_auxiliares_w) then
						if	((coalesce(ie_tipo_guia_w,0) = 6) and (nr_seq_grau_partic_w <> nr_seq_grau_partic_ww )) or (coalesce(ie_tipo_guia_w,0) <> 6) then
							if (coalesce(coalesce(cd_medico_w ,cd_medico_executor_w),0) > 0) then
								nm_executor_w	:= obter_nome_medico(coalesce(cd_medico_w ,cd_medico_executor_w), 'NCD');
							elsif (coalesce(nr_seq_prestador_w,0) > 0) then
								nm_executor_w	:= pls_obter_dados_prestador(nr_seq_prestador_w,'N')||' (Cod. '||pls_obter_dados_prestador(nr_seq_prestador_w,'CD')||')';
							end if;

							nm_executor_w := substr(nm_executor_w||' ('||cd_tiss_ww||' - '||ds_grau_participacao_w||')',1,1000);

							ds_observacao_w := substr(ds_observacao_w||chr(13)||chr(10)||chr(9)||nm_executor_w,1,4000);
						end if;
					end if;

				end if;

				qt_part_existente_w := c02%rowCount;

				end;
			end loop;
			close C02;
		else
			open C03;
			loop
			fetch C03 into
				cd_tiss_ww,
				ds_grau_participacao_w,
				nr_seq_conta_ww,
				cd_medico_w,
				cd_medico_executor_w,
				nr_seq_prestador_w,
				nr_seq_conta_proc_ww;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin

				nm_executor_w	:= '';
				--Por ordem será liberado até o máximo permitido de auxiliares, após estes o procedimento é glosa
				if (c03%rowCount > nr_auxiliares_w) and (nr_seq_conta_proc_w = nr_seq_conta_proc_ww)	then

					if (coalesce(coalesce(cd_medico_w ,cd_medico_executor_w),0) > 0) then
						nm_executor_w	:= obter_nome_medico(coalesce(cd_medico_w, cd_medico_executor_w), 'NCD');
					elsif (coalesce(nr_seq_prestador_w,0) > 0) then
						nm_executor_w	:= pls_obter_dados_prestador(nr_seq_prestador_w,'N')||' (Cod. '||pls_obter_dados_prestador(nr_seq_prestador_w,'CD')||')';
					end if;

					nm_executor_w := substr(nm_executor_w||' ('||cd_tiss_ww||' - '||ds_grau_participacao_w||')',1,1000);

					ds_observacao_w := substr(ds_observacao_w||chr(13)||chr(10)||chr(9)||nm_executor_w,1,4000);

				end if;

				-- Se o campo de auxiliares estiver 0 ou nulo nas tabelas de preço glosa deverá ser gerada
				qt_part_existente_w := c03%rowCount;

				end;
			end loop;
			close C03;
		end if;

		if (coalesce(ds_observacao_w,'X') <> 'X') then --Para que seja gerado somente nas contas que pu possuem axuliar que é excessivo
			CALL pls_gravar_glosa_tiss(	'2604', ds_observacao_ww||ds_observacao_w||chr(13)||chr(10)||'(Máx. participantes permitidos para o procedimento: '||nr_auxiliares_w||'; Informados no procedimento: '||qt_part_existente_w||')', ie_evento_p,
						nr_seq_conta_proc_w, 'CP', null,
						null, '', nm_usuario_p,
						cd_estabelecimento_p, nr_seq_conta_p);
		end if;

		end;
	end loop;
	close C01;
end if;

<<final>>
null;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_qtd_auxiliares ( nr_seq_conta_p bigint, ie_evento_p text, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

