-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_cancelar_item (nr_seq_agenda_int_p bigint, nr_sequencia_p bigint, ds_motivo_p text default null, nr_seq_motivo_canc_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL) AS $body$
DECLARE


nr_seq_agenda_cons_w	agenda_integrada_item.nr_seq_agenda_cons%type;
nr_seq_agenda_exame_w	agenda_integrada_item.nr_seq_agenda_exame%type;
cd_agenda_w		bigint;
nr_seq_autor_w		bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_proc_autor_w	bigint;
nr_seq_autor_age_w	bigint;
nr_seq_estagio_w		bigint;
cd_procedimento_w	bigint;
ds_procedimento_w		varchar(255);
qt_proc_autor_w		bigint;
ie_status_agenda_w	varchar(2);
nr_seq_pend_quimio_w	bigint;
nr_seq_Agenda_quimio_w	bigint;
nr_seq_atendimento_w	bigint;
nr_seq_agequi_w		bigint;
dt_agenda_w		timestamp;
nr_minuto_duracao_w	bigint;
cd_medico_w		varchar(10);
			
C02 CURSOR FOR
	SELECT 	coalesce(nr_sequencia,0)
	from   	autorizacao_convenio
	where  	nr_seq_agenda_consulta  = nr_seq_agenda_cons_w;

C01 CURSOR FOR
	SELECT	nr_seq_atendimento
	from	paciente_atendimento
	where	nr_seq_pend_agenda	= nr_seq_pend_quimio_w
	order by 1;


BEGIN

select 	coalesce(nr_seq_agenda_cons,0),
	coalesce(nr_seq_agenda_exame,0),
	coalesce(nr_seq_pend_quimio,0),
	coalesce(nr_seq_agequi,0)
into STRICT	nr_seq_agenda_cons_w,
	nr_seq_agenda_exame_w,
	nr_seq_pend_quimio_w,
	nr_seq_agequi_w
from	agenda_integrada_item
where	nr_sequencia = nr_sequencia_p
and	nr_seq_agenda_int = nr_seq_agenda_int_p;

if (nr_seq_agenda_cons_w <> 0) then --no caso de agenda de consulta mantido tratamento anterior pois nao vincula procedimento na agenda e sim atraves de regra de autorizacao
	select 	max(a.cd_agenda),
		max(a.ie_status_agenda),
		max(a.dt_agenda),
		max(a.nr_minuto_duracao),
		max(b.cd_pessoa_fisica)
	into STRICT	cd_agenda_w,
		ie_status_agenda_w,
		dt_agenda_w,
		nr_minuto_duracao_w,
		cd_medico_w
	from 	agenda_consulta a,
		agenda b
	where	a.cd_agenda = b.cd_agenda
	and	a.nr_sequencia = nr_seq_agenda_cons_w;
	
	if (ie_status_agenda_w	<> 'C') then
		CALL alterar_status_agecons(cd_agenda_w,nr_seq_agenda_cons_w,'C',nr_seq_motivo_canc_p,ds_motivo_p,'N',nm_usuario_p,null);
		
		CALL cancelar_gestao_vaga(nr_seq_agenda_cons_w,nr_seq_motivo_canc_p,nm_usuario_p,cd_estabelecimento_p);
		
		/*delete	ageint_marcacao_usuario
		where	nr_seq_agenda	= nr_seq_agenda_cons_w
		and	nr_Seq_Ageint	= nr_seq_agenda_int_p;*/
 --tbyegmann em 02/06/2011 OS 326003, adicionado o delete no objeto "alterar_status_agecons" para que ao cancelar os 
							  --agendamentos na agenda integrada, deletar os dados da marcacao na "ageint_marcacao_usuario";
		
		open C02;
		loop
		fetch C02 into
			nr_seq_autor_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (nr_seq_autor_w	> 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_estagio_w
			from   	estagio_autorizacao
			where  	ie_situacao = 'A'
			and    	ie_interno  = 70;

			CALL atualizar_autorizacao_convenio(nr_seq_autor_w, nm_usuario_p, nr_seq_estagio_w, 'N', 'N','S');
			end if;
			end;
		end loop;
		close C02;
	elsif (ie_status_agenda_w = 'C') then

		CALL alterar_status_agecons(cd_agenda_w,nr_seq_agenda_cons_w,'C',null,null,'N',nm_usuario_p,null);
		
		insert into ageint_marcacao_usuario(nr_Sequencia,
                        cd_Agenda,
                        hr_agenda,
                        nm_usuario,
                        nr_Seq_ageint,
                        nr_minuto_duracao,
                        nr_Seq_agenda,
                        nr_seq_ageint_item,
                        ie_horario_auxiliar,
			cd_pessoa_fisica,
			ie_gerado)
                values (nextval('ageint_marcacao_usuario_seq'),
                        cd_agenda_w,
                        dt_agenda_w,
                        nm_usuario_p,
                        nr_seq_agenda_int_p,
                        nr_minuto_duracao_w,
                        nr_seq_agenda_cons_w,
                        nr_sequencia_p,
                        'N',
			cd_medico_w,
			'S');
		
	end if;	
elsif (nr_seq_agenda_exame_w <> 0) then
	select 	max(cd_agenda),
		max(ie_status_agenda),
		max(hr_inicio),
		max(nr_minuto_duracao),
		max(cd_medico_exec)
	into STRICT	cd_agenda_w,
		ie_status_agenda_w,
		dt_agenda_w,
		nr_minuto_duracao_w,
		cd_medico_w
	from	agenda_paciente
	where	nr_sequencia	= nr_seq_agenda_exame_w;
		
	if (ie_status_agenda_w	<> 'C') then
		CALL alterar_status_agenda(cd_agenda_w, nr_seq_agenda_exame_w,'C', nr_seq_motivo_canc_p, ds_motivo_p, 'N', nm_usuario_p);
		
		CALL cancelar_gestao_vaga(nr_seq_agenda_exame_w,nr_seq_motivo_canc_p,nm_usuario_p,cd_estabelecimento_p);
				
		delete	FROM ageint_marcacao_usuario
		where	nr_seq_agenda	= nr_seq_Agenda_exame_w
		and	nr_Seq_Ageint	= nr_seq_agenda_int_p;
		
		select	max(nr_seq_proc_interno)
		into STRICT	nr_seq_proc_interno_w
		from	agenda_integrada_item
		where 	nr_sequencia = nr_sequencia_p
		and	nr_seq_agenda_int = nr_seq_agenda_int_p;
		
		if (coalesce(nr_seq_proc_interno_w,0) > 0) then

			select	max(c.nr_sequencia),
				max(c.nr_sequencia_autor)
			into STRICT	nr_seq_proc_autor_w,
				nr_seq_autor_age_w
			from	autorizacao_convenio a, estagio_autorizacao b, procedimento_autorizado c
			where	a.nr_seq_estagio 	= b.nr_sequencia
			and	a.nr_sequencia 		= c.nr_sequencia_autor
			and	b.ie_interno <> '70'
			and	c.nr_seq_proc_interno	= nr_seq_proc_interno_w
			and	a.nr_seq_age_integ	= nr_seq_agenda_int_p;
			
			if (coalesce(nr_seq_proc_autor_w,0) > 0) then

				select	cd_procedimento,
					obter_descricao_procedimento(cd_procedimento,ie_origem_proced)
				into STRICT	cd_procedimento_w,
					ds_procedimento_w
				from	procedimento_autorizado
				where	nr_sequencia	= nr_seq_proc_autor_w;
				
				delete 	FROM procedimento_autorizado
				where	nr_sequencia = nr_seq_proc_autor_w;
				
				insert	into	autorizacao_convenio_hist(nr_sequencia,
								nm_usuario,
								dt_atualizacao,
								nm_usuario_nrec,
								dt_atualizacao_nrec,
								nr_sequencia_autor,
								ds_historico)
							values (nextval('autorizacao_convenio_hist_seq'),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nr_seq_autor_age_w,
								--'Procedimento ' || cd_procedimento_w || ' - ' || ds_procedimento_w || ' excluido da autorizacao devido a cancelamento na Agenda Integrada.'
								WHEB_MENSAGEM_PCK.get_texto(456630,'cd_procedimento_w='|| cd_procedimento_w ||';ds_procedimento_w='|| ds_procedimento_w));

				select	count(*)
				into STRICT	qt_proc_autor_w
				from	autorizacao_convenio a, procedimento_autorizado b
				where	a.nr_sequencia = b.nr_sequencia_autor
				and	a.nr_sequencia = nr_seq_autor_age_w;
				
				if (qt_proc_autor_w = 0) then--para cancelar autorizacao caso todos os itens forem cancelados
				
					select	max(nr_sequencia)
					into STRICT	nr_seq_estagio_w
					from   	estagio_autorizacao
					where  	ie_situacao = 'A'
					and    	ie_interno  = 70;
			
					CALL atualizar_autorizacao_convenio(nr_seq_autor_age_w, nm_usuario_p, nr_seq_estagio_w, 'N', 'N','S');
				end if;
				
			end if;
		end if;
	elsif (ie_status_agenda_w = 'C') then
	
		CALL alterar_status_agenda(cd_agenda_w, nr_seq_agenda_exame_w,'C', null, null, 'N', nm_usuario_p);
				
		insert into ageint_marcacao_usuario(nr_Sequencia,
                        cd_Agenda,
                        hr_agenda,
                        nm_usuario,
                        nr_Seq_ageint,
                        nr_minuto_duracao,
                        nr_Seq_agenda,
                        nr_seq_ageint_item,
                        ie_horario_auxiliar,
			cd_pessoa_fisica,
			ie_gerado)
                values (nextval('ageint_marcacao_usuario_seq'),
                        cd_agenda_w,
                        dt_agenda_w,
                        nm_usuario_p,
                        nr_seq_agenda_int_p,
                        nr_minuto_duracao_w,
                        nr_seq_agenda_exame_w,
                        nr_sequencia_p,
                        'N',
			cd_medico_w,
			'S');
	end if;
elsif (nr_seq_pend_quimio_w	<> 0) then
	open C01;
	loop
	fetch C01 into	
		nr_seq_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	max(nr_sequencia),
				max(ie_status_agenda)
		into STRICT	nr_seq_Agenda_quimio_w,
				ie_status_agenda_w
		from	agenda_quimio
		where	nr_seq_atendimento	= nr_seq_atendimento_w;
		
		if (nr_seq_Agenda_quimio_w IS NOT NULL AND nr_seq_Agenda_quimio_w::text <> '') then
			CALL Qt_Alterar_Status_Agenda(nr_seq_Agenda_quimio_w, 'C', nm_usuario_p, 'N', nr_seq_motivo_canc_p, ds_motivo_p,cd_estabelecimento_p,'');
		end if;
		end;
	end loop;
	close C01;
	
	update	qt_pendencia_Agenda
	set		ie_canc_agenda	= 'S'
	where	nr_sequencia	= nr_seq_pend_quimio_w;
elsif (nr_seq_agequi_w	<> 0) then
	select	max(ie_status_Agenda)
	into STRICT	ie_status_agenda_w
	from	agenda_quimio
	where	nr_sequencia	= nr_seq_agequi_w;
	
	CALL Qt_Alterar_Status_Agenda(nr_seq_agequi_w, 'C', nm_usuario_p, 'N', nr_seq_motivo_canc_p, ds_motivo_p, cd_estabelecimento_p,'');
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_cancelar_item (nr_seq_agenda_int_p bigint, nr_sequencia_p bigint, ds_motivo_p text default null, nr_seq_motivo_canc_p text DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_estabelecimento_p bigint DEFAULT NULL) FROM PUBLIC;

