-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_solucao_hemodialise ( nr_prescricao_p bigint, nr_seq_dialise_p bigint, ds_lista_produto_p text, nm_usuario_p text) AS $body$
DECLARE



lista_informacao_w			varchar(800);
ie_contador_w				bigint	:= 0;
tam_lista_w					bigint;
ie_pos_virgula_w			smallint;
nr_seq_protocolo_w			bigint;
nr_seq_solucao_w			integer;
nr_agrupamento_w			integer;
nr_etapas_w					protocolo_npt.nr_etapas%type;
qt_temp_solucao_w			real;
qt_volume_w					double precision;
qt_vel_infusao_w			double precision;
ds_indicacao_w				varchar(255);
ie_tipo_solucao_w			varchar(15);
ie_unid_vel_inf_w			varchar(3);
ie_bomba_infusao_w			varchar(3);
ie_calcular_prescr_prot_w	varchar(1);
ie_acm_w					varchar(1);
qt_hora_sessao_w            bigint;
qt_min_sessao_w				bigint;
qt_dosagem_w				bigint;
qt_solucao_total_w			bigint;
ie_unid_vel_inf_ww			varchar(5);
dt_inicio_prescr_w			timestamp;
ds_horarios_w				varchar(2000);
ds_horarios2_w				varchar(2000);
ie_categoria_w				varchar(1);
qt_vol_tot_w				double precision;
qt_vol_tot_comp_w			double precision;
nr_ocorrencia_w				integer;
hr_prim_horario_w			prescr_solucao.hr_prim_horario%type;
dt_status_w					prescr_solucao.dt_status%type;


BEGIN

ie_calcular_prescr_prot_w := obter_param_usuario(924, 701, obter_perfil_ativo, nm_usuario_p, 0, ie_calcular_prescr_prot_w);

lista_informacao_w	:= ds_lista_produto_p;

while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or
	ie_contador_w > 200 loop
	begin
	tam_lista_w		:= length(lista_informacao_w);
	ie_pos_virgula_w	:= position(',' in lista_informacao_w);

	if (ie_pos_virgula_w <> 0) then
		nr_seq_protocolo_w	:= (substr(lista_informacao_w,1,(ie_pos_virgula_w - 1)))::numeric;
		lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
	end if;

	begin
	select	qt_temp_solucao,
			ie_tipo_solucao,
			qt_volume,
			qt_vel_infusao,
			ie_unid_vel_inf,
			ds_indicacao,
			ie_bomba_infusao,
			coalesce(nr_etapas,1),
			coalesce(ie_acm,'N')
	into STRICT	qt_temp_solucao_w,
			ie_tipo_solucao_w,
			qt_volume_w,
			qt_vel_infusao_w,
			ie_unid_vel_inf_w,
			ds_indicacao_w,
			ie_bomba_infusao_w,
			nr_etapas_w,
			ie_acm_w
	from	protocolo_npt
	where	nr_sequencia	= nr_seq_protocolo_w;
	exception
	when others then
		qt_temp_solucao_w	:= null;
	end;

	select	coalesce(max(nr_seq_solucao),0) +1
	into STRICT	nr_seq_solucao_w
	from	prescr_solucao
	where	nr_prescricao	= nr_prescricao_p;

	select	coalesce(max(nr_agrupamento),0) +1
	into STRICT	nr_agrupamento_w
	from	prescr_solucao
	where	nr_prescricao	= nr_prescricao_p;

	if (coalesce(qt_vel_infusao_w::text, '') = '') then
		qt_vel_infusao_w := Calcular_Volume_Total_Solucao('mlh', 24, qt_volume_w, null, nr_prescricao_p, nr_seq_solucao_w, 1, qt_vel_infusao_w, 'N');
	end if;

	insert into prescr_solucao(
		nr_prescricao,
		nr_seq_solucao,
		ie_via_aplicacao,
		dt_atualizacao,
		nm_usuario,
		cd_unidade_medida,
		ie_tipo_dosagem,
		qt_tempo_aplicacao,
		nr_etapas,
		ie_suspenso,
		ie_bomba_infusao,
		nr_agrupamento,
		ie_esquema_alternado,
		ie_calc_aut,
		ie_acm,
		ie_urgencia,
		ie_solucao_especial,
		ie_tipo_solucao,
		nr_seq_protocolo,
		ie_hemodialise,
		ie_unid_vel_inf,
		ie_pos_dialisador,
		nr_seq_dialise,
		ie_ultima_bolsa,
		qt_temp_solucao,
		qt_solucao_total,
		qt_dosagem,
		ds_orientacao)
	values (	nr_prescricao_p,
		nr_seq_solucao_w,
		upper(obter_via_usuario('IV')),
		clock_timestamp(),
		nm_usuario_p,
		obter_unid_med_usua('ml'),
		'mlh',
		'24',
		coalesce(nr_etapas_w,1),
		'N',
		ie_bomba_infusao_w,
		nr_agrupamento_w,
		'N',
		'S',
		ie_acm_w,
		'N',
		'N',
		ie_tipo_solucao_w,
		nr_seq_protocolo_w,
		'S',
		ie_unid_vel_inf_w,
		'S',
		nr_seq_dialise_p,
		'N',
		qt_temp_solucao_w,
		qt_volume_w,
		qt_vel_infusao_w,
		ds_indicacao_w);


	CALL atualizar_status_item_prescr(nr_prescricao_p,nr_seq_solucao_w,'P','S',nm_usuario_p);
	CALL Inserir_Elem_Prot_Hemodialise(nr_prescricao_p,nr_seq_solucao_w,nm_usuario_p);
	if (ie_calcular_prescr_prot_w = 'S') then
		CALL calcular_solucao_protocolo(nr_seq_dialise_p,nr_prescricao_p,nr_seq_solucao_w);
	end if;
	ie_contador_w	:= ie_contador_w + 1;
	end;

	select max(a.qt_hora_sessao),
		   max(a.qt_min_sessao),
		   max(b.ie_tipo_solucao),
		   max(b.qt_dosagem),
		   max(b.qt_solucao_total),
		   max(b.ie_unid_vel_inf),
		   max(a.ie_categoria)
	into STRICT   qt_hora_sessao_w,
		   qt_min_sessao_w,
		   ie_tipo_solucao_w,
		   qt_dosagem_w,
		   qt_solucao_total_w,
		   ie_unid_vel_inf_ww,
		   ie_categoria_w
	from  hd_prescricao a, prescr_solucao b
	where b.nr_seq_dialise = a.nr_sequencia
	and   a.nr_prescricao  = nr_prescricao_p
	and   a.nr_sequencia   = nr_seq_dialise_p
	and   b.nr_seq_solucao   =  nr_seq_solucao_w;

	CALL atualizar_vol_dialise_rotina(nr_prescricao_p,nr_seq_dialise_p,nr_seq_solucao_w,qt_hora_sessao_w,qt_min_sessao_w,ie_tipo_solucao_w,qt_dosagem_w,ie_unid_vel_inf_ww);

	select	coalesce(sum(qt_solucao),0)
	into STRICT	qt_vol_tot_comp_w
	from	prescr_material
	where	nr_prescricao = nr_prescricao_p
	and		nr_sequencia_solucao = nr_seq_solucao_w;

	if	((ie_categoria_w = 'C') and (qt_vol_tot_comp_w > 0)  and ((coalesce(qt_hora_sessao_w,0) > 0) or (coalesce(qt_min_sessao_w,0) > 0))) then

		qt_vol_tot_w := 0;

		if (coalesce(qt_hora_sessao_w,0) > 0) then

			if (ie_unid_vel_inf_ww = 'mlm') then
				qt_vol_tot_w	:= qt_hora_sessao_w * (qt_dosagem_w*60);
			else
				qt_vol_tot_w	:= qt_hora_sessao_w * (qt_dosagem_w);
			end if;

		elsif (coalesce(qt_min_sessao_w,0) > 0) then

			if (ie_unid_vel_inf_ww = 'mlm') then
				qt_vol_tot_w	:= qt_min_sessao_w * (qt_dosagem_w);
			else
				qt_vol_tot_w	:= Round(qt_min_sessao_w/60) * (qt_dosagem_w);
			end if;

		end if;

		if (qt_vol_tot_w > 0) then

			nr_ocorrencia_w	:= Ceil(qt_vol_tot_w/qt_vol_tot_comp_w);
			nr_etapas_w		:= nr_ocorrencia_w;

			update	prescr_material
			set		nr_ocorrencia = nr_etapas_w
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia_solucao = nr_seq_solucao_w;

		end if;

	end if;

	select	max(dt_inicio_prescr)
	into STRICT	dt_inicio_prescr_w
	from 	prescr_medica
	where 	nr_prescricao = nr_prescricao_p;

	SELECT * FROM Calcula_Horarios_Etapas(dt_inicio_prescr_w, nr_etapas_w, dividir(qt_hora_sessao_w,nr_etapas_w), nm_usuario_p, null, qt_hora_sessao_w, ds_horarios_w, ds_horarios2_w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios2_w;

	dt_status_w := null;
	hr_prim_horario_w := obter_prim_dshorarios(cpoe_retirar_das_as(ds_horarios_w));

	if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') and (coalesce(ie_acm_w,'N') = 'N') then

		dt_status_w := dt_inicio_prescr_w;
	end if;

	update	prescr_solucao
	set		ds_horarios		= substr(ds_horarios_w,1,255),
			hr_prim_horario = hr_prim_horario_w,
			nr_etapas		= nr_etapas_w,
			dt_status       = CASE WHEN dt_status_w = NULL THEN dt_status  ELSE dt_status_w END
	where	nr_seq_solucao	= nr_seq_Solucao_w
	and		nr_prescricao	= nr_prescricao_p
	and   	nr_seq_solucao  = nr_seq_solucao_w;

	commit;

end loop;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solucao_hemodialise ( nr_prescricao_p bigint, nr_seq_dialise_p bigint, ds_lista_produto_p text, nm_usuario_p text) FROM PUBLIC;

