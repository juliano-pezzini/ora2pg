-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE susp_presc_proc_paciente (nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, nr_seq_material_p bigint, nm_usuario_p text, ds_erros_p INOUT text) AS $body$
DECLARE


nr_seq_exame_w		bigint;
nr_seq_grupo_imp_w	bigint;
nr_seq_lab_w		varchar(20);
cd_material_exame_w	varchar(20);
cd_estab_w		integer;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
ie_tipo_atendimento_w	smallint;
ie_tipo_convenio_w		smallint;
cd_setor_atend_w		integer;
nr_atendimento_w		bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
dt_prescricao_w		timestamp;
ds_erro_w		varchar(2000);
nr_seq_exame_ant_w	bigint;
nr_Seq_proc_interno_w	bigint;
nr_interno_conta_w	bigint;
ie_status_acerto_w	varchar(1);
nr_seq_interno_w	bigint;
nr_sequencia_w		bigint;
nr_seq_proc_paciente_w	bigint;
ie_incluir_exame_w	varchar(1);
cd_medico_resp_atend_w	varchar(10);
cd_estabelecimento_w	smallint;
cd_motivo_exc_conta_w	smallint;
nr_seq_proc_interno_aux_w	bigint;
cd_plano_convenio_w		varchar(10);
nr_seq_prescr_proc_mat_w prescr_proc_mat_item.nr_sequencia%type;


BEGIN

select	coalesce(max(nr_seq_exame),null)
into STRICT	nr_seq_exame_w
from	exame_laboratorio
where	cd_exame	= cd_exame_p;

if (nr_seq_exame_w > 0) then

	select  max(cd_estabelecimento),
		max(cd_medico)
	into STRICT	cd_estab_w,
		cd_medico_resp_atend_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	select  max(cd_material_exame),
		max(nr_seq_exame)
	into STRICT	cd_material_exame_w,
		nr_seq_exame_ant_w
	from	prescr_procedimento
	where   nr_prescricao =  nr_prescricao_p
	and     nr_sequencia = 	nr_seq_prescr_p;

	Select	max(nr_Seq_proc_interno)
	into STRICT	nr_Seq_proc_interno_w
	from	prescr_procedimento
	where   nr_prescricao =  nr_prescricao_p
	and     nr_sequencia = 	nr_seq_prescr_p;

	if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then

		select 	max(cd_material_exame)
		into STRICT	cd_material_exame_w
		from	material_exame_lab
		where	nr_sequencia = nr_seq_material_p;
	end if;

	select	coalesce(max(nr_atendimento), 0),
		coalesce(max(dt_prescricao), clock_timestamp())
	into STRICT	nr_atendimento_w,
		dt_prescricao_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	if (coalesce(nr_atendimento_w, 0) > 0) then
		begin
		select	a.ie_tipo_convenio,
			a.ie_tipo_atendimento,
			b.cd_convenio,
			b.cd_categoria,
			a.cd_estabelecimento,
			b.cd_plano_convenio
		into STRICT	ie_tipo_convenio_w,
			ie_tipo_atendimento_w,
			cd_convenio_w,
			cd_categoria_w,
			cd_estab_w,
			cd_plano_convenio_w
		from	atend_categoria_convenio b,
			atendimento_paciente a
		where	a.nr_atendimento	= nr_atendimento_w
		and	b.nr_atendimento	= a.nr_atendimento
		and	b.nr_seq_interno	= OBTER_ATECACO_ATENDIMENTO(A.NR_ATENDIMENTO);
		exception
			when no_data_found then
			--rai_application_error(-20011,'Faltam informações do convênio na Entrada Única.');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(192526);
		end;

		SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, nr_Seq_proc_interno_w, cd_material_exame_w, cd_plano_convenio_w, cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
	end if;

	select 	max(coalesce(lab_obter_grupo_imp_estab(cd_estab_w,a.nr_seq_exame, cd_convenio_w),a.nr_seq_grupo_imp))
	into STRICT	nr_seq_grupo_imp_w
	from	exame_laboratorio a
	where	a.nr_seq_exame =  nr_seq_exame_w;

	select 	min(nr_seq_lab)
	into STRICT	nr_seq_lab_w
	from	exame_laboratorio a,
		prescr_procedimento b
	where	a.nr_seq_exame = b.nr_seq_exame
	and	cd_material_exame = cd_material_exame_w
	and	coalesce(lab_obter_grupo_imp_estab(cd_estab_w,a.nr_seq_exame, cd_convenio_w),a.nr_seq_grupo_imp) = nr_seq_grupo_imp_w;

	--suspende o procedimento
	begin
	update	prescr_procedimento
	set	nm_usuario 	= nm_usuario_p,
		ie_suspenso	= 'S'
	where 	nr_prescricao 	= nr_prescricao_p
	and	nr_sequencia 	= nr_seq_prescr_p;
	commit;
	exception
	when others then
		ds_erro_w	:= ds_erro_w || ' ' ||wheb_mensagem_pck.get_texto(299766);--  Falha ao suspender a prescrição
	end;
	select 	max(a.ie_status_acerto),
		max(b.nr_sequencia)
	into STRICT	ie_status_acerto_w,
		nr_seq_proc_paciente_w
	from   	conta_paciente a,
		procedimento_paciente b
	where  	b.nr_prescricao 		= nr_prescricao_p
	and    	b.nr_sequencia_prescricao 	= nr_seq_prescr_p
	and    	a.nr_interno_conta        	= b.nr_interno_conta;

	if ( ie_status_acerto_w = 1) then
		begin

		select 	coalesce(cd_motivo_exc_conta,null)
		into STRICT	cd_motivo_exc_conta_w
		from 	lab_parametro
		where   cd_estabelecimento = cd_estab_w;

		begin

		CALL excluir_matproc_conta(nr_seq_proc_paciente_w, null, cd_motivo_exc_conta_w, null,'P', nm_usuario_p);
		exception
		when others then
			ds_erro_w		:= ds_erro_w || ' ' || wheb_mensagem_pck.get_texto(299768);-- Falha ao apagar procedimento da conta do paciente
		end;

		end;
	end if;

	select	coalesce(max(a.nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	prescr_procedimento a
	where	a.nr_prescricao = nr_prescricao_p;

	select	nextval('prescr_procedimento_seq')
	into STRICT	nr_seq_interno_w
	;

	begin
	insert into prescr_procedimento(
		nr_prescricao,
		nr_sequencia,
		nr_seq_interno,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		qt_procedimento,
		ie_status_execucao,
		ie_status_atend,
		ie_origem_inf,
		dt_atualizacao,
		nm_usuario,
		cd_motivo_baixa,
		cd_setor_atendimento,
		nr_ocorrencia,
		nr_agrupamento,
		ie_urgencia,
		ie_suspenso,
		ie_amostra,
		ie_executar_leito,
		ie_se_necessario,
		ie_acm,
		ie_avisar_result,
		ds_observacao,
		cd_medico_exec,
		nr_seq_exame,
		cd_material_exame,
		cd_profissional,
		dt_prev_execucao)
	values	(
		nr_prescricao_p,
		nr_sequencia_w,
		nr_seq_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		1,
		'10',
		'10',
		'1',
		clock_timestamp(),
		nm_usuario_p,
		0,
		coalesce(Obter_Setor_Atendimento(nr_atendimento_w),0),
		1,
		1,
		'N',
		'N',
		'N',
		'N',
		'N',
		'N',
		'N',
		wheb_mensagem_pck.get_texto(299770,'NM_USUARIO_P='||nm_usuario_p||';DT_PARAM_P='||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')),  --'Procedimento adicional incluído por #@ em #@ via Exames Pendentes',
		cd_medico_resp_atend_w,
		nr_seq_exame_w,
		cd_material_exame_w,
		cd_medico_resp_atend_w,
		clock_timestamp());
	commit;
	exception
	when others then
		ds_erro_w		:= ds_erro_w || ' ' || wheb_mensagem_pck.get_texto(299774); -- Falha ao incluir o novo exame
	end;

	select  max(nr_sequencia)
	into STRICT 	nr_seq_prescr_proc_mat_w
	from 	prescr_proc_mat_item
	where   nr_prescricao = nr_prescricao_p
	and		nr_seq_prescr = nr_sequencia_w;

	if (coalesce(nr_seq_prescr_proc_mat_w::text, '') = '') then

		begin
		CALL gerar_prescr_proc_mat_item(nr_prescricao_p,nm_usuario_p,cd_estab_w,nr_sequencia_w);
		commit;
		exception
		when others then
			ds_erro_w		:= ds_erro_w || ' ' ||sqlerrm|| wheb_mensagem_pck.get_texto(299774); -- Falha ao incluir o novo exame
		end;

	end if;

	CALL gerar_proc_pac_item_prescr(	nr_prescricao_p, 	nr_sequencia_w,		nr_atendimento_w,
					null, 			null, 			cd_procedimento_w,
					ie_origem_proced_w, 	1, 			coalesce(Obter_Setor_Atendimento(nr_atendimento_w),0),
					1, 			clock_timestamp(), 		nm_usuario_p,
					cd_medico_resp_atend_w,	nr_seq_exame_w, 	'A',
					null,	null,	null,	null,	null);

end if;
ds_erros_p := ds_erro_w;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE susp_presc_proc_paciente (nr_prescricao_p bigint, nr_seq_prescr_p bigint, cd_exame_p text, nr_seq_material_p bigint, nm_usuario_p text, ds_erros_p INOUT text) FROM PUBLIC;

