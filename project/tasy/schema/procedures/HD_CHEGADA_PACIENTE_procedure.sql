-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_chegada_paciente ( cd_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_opcao_p text, ie_biometria_p text) AS $body$
DECLARE


/* ie_opcao_p
	I - Incluir nova chegada
	R - Remover Ãºltima chegada
*/
nr_atendimento_w	bigint;
cd_setor_atendimento_w	bigint;
nr_seq_proc_w	procedimento_paciente.nr_sequencia%type;
nr_seq_proc_gerada_w	procedimento_paciente.nr_sequencia%type;
cd_convenio_w	procedimento_paciente.cd_convenio%type;
nr_seq_mat_w	material_atend_paciente.nr_sequencia%type;
nr_seq_mat_est_w	material_atend_paciente.nr_sequencia%type;

C01 CURSOR FOR
		SELECT 	nr_sequencia,
				cd_convenio
		from 	procedimento_paciente
		where 	nr_seq_regra_lanc in (SELECT nr_sequencia
			from	regra_lanc_automatico
			where	nr_seq_evento = 461)
		and 	coalesce(nr_seq_proc_est::text, '') = ''
		and		trunc(dt_procedimento) = trunc(clock_timestamp())
		and 	nr_atendimento = nr_atendimento_w;

		
C02 CURSOR FOR
		SELECT 	nr_sequencia
		from 	material_atend_paciente
		where 	nr_seq_regra_lanc in (SELECT nr_sequencia
			from	regra_lanc_automatico
			where	nr_seq_evento = 461)
		and 	coalesce(nr_seq_mat_est::text, '') = ''
		and		trunc(dt_atendimento) = trunc(clock_timestamp())
		and 	nr_atendimento = nr_atendimento_w;
		

BEGIN

if (ie_opcao_p = 'I') then
	insert into hd_prc_chegada(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_fisica,
		dt_chegada,
		cd_estabelecimento,
		ie_pac_faltou,
		ie_biometria
	) values (
		nextval('hd_prc_chegada_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_p,
		clock_timestamp(),
		cd_estabelecimento_p,
		'N',
		ie_biometria_p		
	);	
	
	begin
	
	select 	coalesce(max(nr_atendimento),0)
	into STRICT	nr_atendimento_w
	from   atendimento_paciente a
	where  	cd_pessoa_fisica     	= cd_pessoa_fisica_p      
	and    	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_fim_conta		   <> 'F'
	and	exists (SELECT 1 from hd_log_geracao_atend x where a.nr_atendimento = x.nr_atendimento_nov) 
	and	coalesce(dt_alta::text, '') = '';
	
	if (nr_atendimento_w = 0) then
		select	max(hd_obter_atend_ultima_dialise(cd_pessoa_fisica_p))
		into STRICT	nr_atendimento_w
		;
		
		select	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w
		and		coalesce(dt_alta::text, '') = ''
		and		ie_fim_conta <> 'F';

		if (coalesce(nr_atendimento_w::text, '') = '') then
			select	coalesce(max(nr_atendimento),0)
			into STRICT	nr_atendimento_w
			from   	atendimento_paciente
			where  	cd_pessoa_fisica     	= cd_pessoa_fisica_p
			and    	cd_estabelecimento	= cd_estabelecimento_p
			and	ie_fim_conta		<> 'F'
			and	coalesce(dt_alta::text, '') = '';
		end if;	
	end if;
	
	exception
	when others then
	nr_atendimento_w := 0;
	end;
	
    cd_setor_atendimento_w := obter_param_usuario(7009, 263, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_setor_atendimento_w);	
	if (cd_setor_atendimento_w > 0) then
		
		if (nr_atendimento_w > 0) then 
			CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, clock_timestamp(), 'N', nm_usuario_p);			
		
		elsif (nr_atendimento_w = 0) then
		
			SELECT 	coalesce(MAX(nr_atendimento),0)
			  INTO STRICT  nr_atendimento_w
			  FROM  atendimento_paciente
			 WHERE  nr_atendimento = hd_obter_atend_ultima_dialise(cd_pessoa_fisica_p)
			   AND  coalesce(dt_alta::text, '') = '';
		
			if (nr_atendimento_w > 0)  then
				CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, clock_timestamp(), 'N', nm_usuario_p);						
			elsif (nr_atendimento_w = 0) then

					SELECT 	coalesce(MAX(Hd_Obter_Atend_Pac_Renal_Cron(cd_pessoa_fisica_p)),0)
					  INTO STRICT 	nr_atendimento_w
					;
					
					if (nr_atendimento_w > 0) then
						CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, clock_timestamp(), 'N', nm_usuario_p);											
					end if;
			end if;
		end if;
	
	end if;
	if (coalesce(nr_atendimento_w,0) > 0) then
		CALL gerar_lancamento_automatico(nr_atendimento_w, null, 461, nm_usuario_p, null,null,null,null,null,null);
	end if;
	
elsif (ie_opcao_p = 'R') then
	delete 	
	from 	hd_prc_chegada
	where 	trunc(dt_chegada)	= trunc(clock_timestamp())
	and	cd_pessoa_fisica	= cd_pessoa_fisica_p;
	
	select 	coalesce(max(nr_atendimento),0)
	into STRICT	nr_atendimento_w
	from   atendimento_paciente a
	where  	cd_pessoa_fisica     	= cd_pessoa_fisica_p      
	and    	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_fim_conta		   <> 'F'
	and	exists (SELECT 1 from hd_log_geracao_atend x where a.nr_atendimento = x.nr_atendimento_nov) 
	and	coalesce(dt_alta::text, '') = '';
	
	if (nr_atendimento_w = 0) then
		select	max(hd_obter_atend_ultima_dialise(cd_pessoa_fisica_p))
		into STRICT	nr_atendimento_w
		;
		
		select	max(nr_atendimento)
		into STRICT	nr_atendimento_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_w
		and		coalesce(dt_alta::text, '') = ''
		and		ie_fim_conta <> 'F';

		if (coalesce(nr_atendimento_w::text, '') = '') then
			select	coalesce(max(nr_atendimento),0)
			into STRICT	nr_atendimento_w
			from   	atendimento_paciente
			where  	cd_pessoa_fisica     	= cd_pessoa_fisica_p
			and    	cd_estabelecimento	= cd_estabelecimento_p
			and	ie_fim_conta		<> 'F'
			and	coalesce(dt_alta::text, '') = '';
		end if;	
	end if;
	
	if (coalesce(nr_atendimento_w,0) > 0) then
	
		open C01;
		loop
		fetch C01 into	
			nr_seq_proc_w,
			cd_convenio_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			nr_seq_proc_gerada_w := duplicar_proc_paciente(nr_seq_proc_w, nm_usuario_p, nr_seq_proc_gerada_w);
			
			if (nr_seq_proc_gerada_w IS NOT NULL AND nr_seq_proc_gerada_w::text <> '') then
				update	procedimento_paciente
				set	nr_interno_conta  = NULL,
					qt_procedimento = qt_procedimento * -1,
					vl_procedimento = vl_procedimento * -1,
					vl_medico = vl_medico * -1,
					vl_anestesista = vl_anestesista * -1,
					vl_materiais = vl_materiais * -1,
					vl_auxiliares = vl_auxiliares * -1,
					vl_custo_operacional = vl_custo_operacional * -1,
					vl_adic_plant = vl_adic_plant * -1,
					ds_observacao = Wheb_mensagem_pck.get_Texto(370110, 'DS_OBSERVACAO_W='|| ds_observacao),
					dt_procedimento = clock_timestamp()
				where nr_sequencia = nr_seq_proc_gerada_w;
				
				update	procedimento_paciente
				set		nr_seq_proc_est = nr_seq_proc_gerada_w
				where	nr_sequencia = nr_seq_proc_w;
				
				CALL atualiza_preco_procedimento(nr_seq_proc_gerada_w, cd_convenio_w, nm_usuario_p);
			end if;
			end;
		end loop;
		close C01;
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_mat_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_seq_mat_est_w
			;
			
			insert into material_atend_paciente(	nr_sequencia,
							cd_material,
							dt_atendimento,
							cd_convenio,
							cd_categoria,
							nr_seq_atepacu,
							cd_setor_atendimento,
							dt_entrada_unidade,
							qt_material,
							cd_local_estoque,
							dt_Atualizacao,
							nm_usuario,
							nr_atendimento,
							cd_unidade_medida,
							cd_acao,
							ie_valor_informado,
							nr_seq_lote_fornec,
							dt_atualizacao_nrec,
							dt_conta,
							nm_usuario_nrec,
							ds_observacao,
							nr_seq_entrega_medic_fa,
							cd_cgc_fornecedor)
						SELECT  nr_seq_mat_est_w,
							cd_material,
							dt_atendimento,
							cd_convenio,
							cd_categoria,
							nr_seq_atepacu,
							cd_setor_atendimento,
							dt_entrada_unidade,
							qt_material * -1,
							cd_local_estoque,
							clock_timestamp(),
							nm_usuario,
							nr_atendimento,
							cd_unidade_medida,
							'2',
							ie_valor_informado,
							nr_seq_lote_fornec,
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							Wheb_mensagem_pck.get_Texto(370476, ''),
							nr_seq_entrega_medic_fa,
							cd_cgc_fornecedor
							from	material_atend_paciente
							where	nr_sequencia = nr_seq_mat_w;
			
			update	material_atend_paciente
			set		nr_seq_mat_est = nr_seq_mat_est_w
			where	nr_sequencia = nr_seq_mat_w;

			CALL atualiza_preco_material(nr_seq_mat_est_w,nm_usuario_p);
			
			end;
		end loop;
		close C02;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_chegada_paciente ( cd_pessoa_fisica_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_opcao_p text, ie_biometria_p text) FROM PUBLIC;

