-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_xml_censo_ocup (dt_censo_p timestamp, cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE

									 
nr_atendimento_w		bigint;
dt_censo_w				timestamp;
cd_bene_w				varchar(30);
nm_bene_w				varchar(40);
tp_internacao_w			varchar(1);
dt_entrada_w			timestamp;
ie_clinica_w			integer;
ie_regime_internacao_w	char(1);
ds_acomodacao_w			smallint;
cd_prestador_w			varchar(15);
cd_senha_w      	varchar(20);
dt_nasc_bene_w    	timestamp;
ds_erro_w				varchar(255):= '';		
c01 CURSOR FOR 
	SELECT	distinct nr_atendimento 
	from  censo_eletronico_unimed_bh_v 
	where  trunc(dt_censo_p,'dd') between dt_entrada and coalesce(dt_hr_saida_internacao,clock_timestamp()) 
	and   cd_convenio = cd_convenio_p  LIMIT 99;
c02 CURSOR FOR
	SELECT	distinct dt_censo_p, 
		cd_bene, 
		nm_bene, 
		tp_internacao, 
		dt_entrada, 
		ie_clinica, 
		ie_regime_internacao, 
		ds_acomodacao, 
		cd_prestador, 
		cd_senha, 
		dt_nasc_bene 
	from  censo_eletronico_unimed_bh_v 
	where	nr_atendimento = nr_atendimento_w;

BEGIN
 
delete from w_inconsistencia_censo;
 
open c01;
loop 
fetch c01 into	nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
		open c02;
		loop 
		fetch c02 into	dt_censo_w, 
				cd_bene_w, 
				nm_bene_w, 
				tp_internacao_w, 
				dt_entrada_w, 
				ie_clinica_w, 
				ie_regime_internacao_w, 
				ds_acomodacao_w, 
				cd_prestador_w, 
				cd_senha_w, 
				dt_nasc_bene_w;				
			EXIT WHEN NOT FOUND; /* apply on c02 */
		 
		/* Dalcastagne em 28/03/2008 Consistências enviadas por Wander HLC - OS 87408*/
 
		 
		if (coalesce(dt_nasc_bene_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar data do Nascimento.', nm_usuario_p);
		end if;
	 
		if (coalesce(cd_senha_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar senha ou autorização.', nm_usuario_p);
		end if;
		 
		if (cd_senha_w = 'NT') or (coalesce(cd_senha_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar senha ou autorização.', nm_usuario_p);
		end if;
 
		/* Fim novas consistências */
 
		 
		if (coalesce(dt_censo_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar data do censo.', nm_usuario_p);
		end if;
 
		if (coalesce(cd_bene_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar o código do beneficiário.', nm_usuario_p);
		end if;
 
		if (coalesce(nm_bene_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar o nome do beneficiário.', nm_usuario_p);
		end if;
 
		if (coalesce(tp_internacao_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar o caráter do atendimento.', nm_usuario_p);
		end if;
 
		if (coalesce(ie_clinica_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar o tipo de clínica do atendimento.', nm_usuario_p);
		end if;
 
		if (coalesce(ie_regime_internacao_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar o regime de internação.', nm_usuario_p);
		end if;
 
		if (coalesce(ds_acomodacao_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, 'Necessário informar o tipo de acomodação.', nm_usuario_p);
		end if;
 
		if (coalesce(cd_prestador_w::text, '') = '') then 
			CALL grava_inconsistencia_censo_xml(nr_atendimento_w, obter_desc_expressao(514402)/*'Necessário informar o código do prestador.'*/
, nm_usuario_p);
		end if;
 
		end loop;
		close c02;
	end if;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_xml_censo_ocup (dt_censo_p timestamp, cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

