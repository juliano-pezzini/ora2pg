-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_case_planejado ( nr_atendimento_p bigint, ie_opcao_p text, nm_usuario_p text, ie_commit_p text default 'S') AS $body$
DECLARE

sql_errm_w      varchar(4000);
ie_case_w       varchar(1) := 'N';
ie_departments_w    integer;
dt_episodio_w       episodio_paciente.dt_episodio%type;
nr_seq_episodio_w   episodio_paciente.nr_sequencia%type;
dt_referencia_w timestamp;


BEGIN
begin
if (coalesce(nr_atendimento_p,0) > 0) then
    if ( ie_opcao_p = 'C') then -- Current
    
        if ( obter_se_case_atend_planejado(nr_atendimento_p) = 'S') then
        
            dt_referencia_w := clock_timestamp() - interval '1 days' /(24 * 60 * 60); -- -1 segundo para não gerar erro nas próximas transferências do paciente
            update  atendimento_paciente
            set dt_chegada_paciente = dt_referencia_w,
                dt_atualizacao = dt_referencia_w,
                dt_entrada = dt_referencia_w,
                nm_usuario  = nm_usuario_p
            where   nr_atendimento  = nr_atendimento_p;
            select  count(*)
            into STRICT    ie_departments_w
            from    atend_paciente_unidade apu
            where   apu.nr_atendimento  = nr_atendimento_p
            and     coalesce(dt_saida_unidade::text, '') = '';

            if (coalesce(ie_departments_w,0) > 0)then
            
                update  atend_paciente_unidade
                set dt_entrada_unidade = dt_referencia_w
                where   nr_atendimento  = nr_atendimento_p
                and     coalesce(dt_saida_unidade::text, '') = '';
            end if;

            select  max(ep.dt_episodio),
                max(ep.nr_sequencia)
            into STRICT    dt_episodio_w,
                nr_seq_episodio_w
            from    episodio_paciente ep,
                atendimento_paciente ap
            where   ap.nr_seq_episodio = ep.nr_sequencia
            and ap.nr_atendimento = nr_atendimento_p;

            if ( dt_episodio_w > dt_referencia_w ) then  
            
                update  episodio_paciente
                set dt_episodio = dt_referencia_w,
                    nm_usuario = nm_usuario_p,
                    dt_atualizacao = dt_referencia_w
                where   nr_sequencia = nr_seq_episodio_w;

            end if;

            if (coalesce(ie_commit_p,'S') = 'S') then
                commit;
            end if;
        end if;

    
    elsif (ie_opcao_p = 'P') then  -- Planned
    
        Select  coalesce(max('S'),'N')
        into STRICT    ie_case_w
        from    episodio_paciente a,
                atendimento_paciente b
        where   b.nr_seq_episodio = a.nr_sequencia
        and     b.nr_atendimento = nr_atendimento_p;

        if ( ie_case_w = 'S') then
        
            update  atendimento_paciente
            set     dt_chegada_paciente  = NULL,
                    dt_atualizacao = clock_timestamp(),
                    nm_usuario  = nm_usuario_p
            where   nr_atendimento  = nr_atendimento_p;

            if (coalesce(ie_commit_p,'S') = 'S') then
                commit;
            end if;

        
        end if;

    
    end if;
end if;
exception
    when others then
    sql_errm_w := substr(sqlerrm,1,4000);
end;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_case_planejado ( nr_atendimento_p bigint, ie_opcao_p text, nm_usuario_p text, ie_commit_p text default 'S') FROM PUBLIC;

