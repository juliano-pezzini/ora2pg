-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_prescricao (( nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%TYPE, cd_perfil_p perfil.cd_perfil%TYPE, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%TYPE, nm_usuario_p usuario.nm_usuario%TYPE, itens_liberar_p text, ie_inconsistencia_out_p OUT text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE DEFAULT NULL, ie_copia_diaria_p CHAR DEFAULT 'N', ie_interv_farmacia_p text DEFAULT 'N', ie_motivo_prescr_p text DEFAULT NULL, ie_liberacao_ang_p text DEFAULT 'N', nr_prescricao_out_p OUT bigint, nr_prescricao_lib_p bigint DEFAULT NULL, nr_seq_consulta_oft_p bigint DEFAULT NULL, nr_seq_pend_pac_acao_p bigint DEFAULT NULL, ie_copia_sem_lib_enf_farm_p text DEFAULT 'N', ie_adep_p text DEFAULT 'S', nm_usuario_validacao_p text DEFAULT NULL, ds_prescricoes_geradas_out_p OUT text, nm_usuario_lib_enf_p cpoe_material.nm_usuario_lib_enf%TYPE DEFAULT NULL, cd_farmac_lib_p cpoe_material.cd_farmac_lib%TYPE DEFAULT NULL, ie_prescr_adep_p text DEFAULT NULL, ie_disp_semanal_p text DEFAULT 'N' ) IS dt_referencia_w timestamp DEFAULT dt_referencia_p) AS $body$
DECLARE

        nr_prescricao_w  varchar(200);
        ds_retorno_w     varchar(4000);

BEGIN	-- Formato  ds_prescr_geradas_w '"1234";"6413";"22211";'
        ds_retorno_w := ds_prescricoes_atuais_p;
        IF (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') THEN
            nr_prescricao_w := '"'
                               || nr_prescricao_p
                               || '";';
            IF ( coalesce(ds_prescricoes_atuais_p::text, '') = '' OR ds_prescricoes_atuais_p = '' ) THEN
                RETURN;
            ELSE
                IF ( position(nr_prescricao_w in ds_prescricoes_atuais_p) > 0 ) THEN
                    RETURN;
                ELSE
                    ds_retorno_w := ds_prescricoes_atuais_p || nr_prescricao_w;
                END IF;
            END IF;

        END IF;

        RETURN;
    END;

BEGIN
    CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO LOG - '
                           || substr(to_char(sqlerrm), 1, 2000)
                           || ' /Parametros: itens_liberar_p: '
                           || itens_liberar_p
                           || ' dt_referencia_p: '
                           || to_char(dt_referencia_p, 'dd/mm/yyy hh24:mi:ss')
                           || ' nr_atendimento_p: '
                           || nr_atendimento_p
                           || ' cd_estabelecimento_p: '
                           || cd_estabelecimento_p
                           || ' cd_pessoa_fisica_p: '
                           || cd_pessoa_fisica_p
                           || ' cd_setor_atendimento_p: '
                           || cd_setor_atendimento_p
                           || ' nm_usuario_p: '
                           || nm_usuario_p
                           || ' ie_copia_diaria_p: '
                           || ie_copia_diaria_p,
                          1,
                          2000),
                   nr_atendimento_p);

    ie_inconsistencia_out_p := '';
    ds_prescricoes_geradas_w := '';
    IF ( coalesce(ie_liberacao_ang_p, 'N') = 'N' ) THEN --GWT E ANGULAR COPIA
	/* Separa a geracao das Hemoterapias*/

        SELECT * FROM cpoe_gera_segunda_prescr(itens_liberar_p, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_liberar_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_liberar_w, nr_prescricao_segunda_w;

        IF (ds_itens_liberar_w IS NOT NULL AND ds_itens_liberar_w::text <> '') THEN
            nr_prescricao_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_liberar_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, NULL, NULL, NULL, 'N', NULL, NULL, NULL, NULL, NULL, nr_seq_pend_pac_acao_p, ie_copia_sem_lib_enf_farm_p, ie_adep_p, nm_usuario_lib_enf_p, cd_farmac_lib_p, ie_disp_semanal_p);

        END IF;

        CALL cpoe_update_prot_prescricao(nr_prescricao_w, ds_itens_liberar_w);
        ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_w);
        ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
        BEGIN
            IF (
                coalesce(ie_copia_diaria_p, 'N') = 'S'
                AND (itens_liberar_p IS NOT NULL AND itens_liberar_p::text <> '')
            ) THEN
                qt_existe_procedimento_w := position('P' in itens_liberar_p);
                IF ( qt_existe_procedimento_w > 0 ) THEN
                    CALL start_fleury('REQUEST_RECORD_DATABASE', nr_prescricao_w, NULL, cd_pessoa_fisica_p,
                                cd_estabelecimento_p,
                                nm_usuario_p,
                                cd_setor_atendimento_p,
                                cd_perfil_p,
                                '');

                END IF;

            END IF;
        EXCEPTION
            WHEN OTHERS THEN
                CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO EXCEPTION GERACAO FLEURY: '
                                       || substr(to_char(sqlerrm), 1, 2000)
                                       || ' /Parametros: itens_liberar_p: '
                                       || itens_liberar_p
                                       || ' dt_referencia_p: '
                                       || to_char(dt_referencia_p, 'dd/mm/yyy hh24:mi:ss')
                                       || ' nr_atendimento_p: '
                                       || nr_atendimento_p
                                       || ' cd_estabelecimento_p: '
                                       || cd_estabelecimento_p
                                       || ' cd_pessoa_fisica_p: '
                                       || cd_pessoa_fisica_p,
                                      1,
                                      2000),
                               nr_atendimento_p);
        END;

        IF (
            coalesce(nr_prescricao_w::text, '') = ''
            AND (nr_prescricao_segunda_w IS NOT NULL AND nr_prescricao_segunda_w::text <> '')
        ) THEN
            nr_prescricao_w := nr_prescricao_segunda_w;
        END IF;

    ELSE	--ANGULAR LIBERACAO
        ie_opcao_prescr_ww := itens_liberar_p;
        ie_medico_logado_w := obter_param_usuario(924, 760, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_medico_logado_w);
        ie_libera_se_proced_w := obter_param_usuario(924, 586, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_libera_se_proced_w);
        ie_lib_sem_interv_w := obter_param_usuario(924, 11, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_lib_sem_interv_w);
        ie_lib_tudo_proced_w := 'N';
        WHILE(ie_opcao_prescr_ww IS NOT NULL AND ie_opcao_prescr_ww::text <> '') LOOP
            IF ( position(';' in ie_opcao_prescr_ww) = 0 )
                AND (ie_opcao_prescr_ww IS NOT NULL AND ie_opcao_prescr_ww::text <> '')
            THEN
                ie_opcao_prescr_ww := ie_opcao_prescr_ww || ';';
            END IF;

            BEGIN
                sql_w := 'begin obter_opc_cpoe_gerar_presc_md (:1, :2, :3, :4); end;';
                EXECUTE sql_w
                    USING OUT item_w, OUT ie_opcao_prescr_w, OUT nr_seq_reg_item_w,  IN OUT ie_opcao_prescr_ww;
            EXCEPTION
                WHEN OTHERS THEN
                    item_w := NULL;
                    ie_opcao_prescr_w := NULL;
                    nr_seq_reg_item_w := NULL;
                    ie_opcao_prescr_ww := NULL;
            END;

            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                DELETE FROM cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_seq_item = nr_seq_reg_item_w
                    AND nm_usuario = nm_usuario_p
                    AND coalesce(dt_liberacao::text, '') = '';

            END IF;

            IF ( ie_opcao_prescr_w = 'DI' ) OR ( ie_opcao_prescr_w = 'DP' ) THEN
                ie_opcao_prescr_w := 'D';
            END IF;

            IF (ie_opcao_prescr_w IS NOT NULL AND ie_opcao_prescr_w::text <> '') THEN
                CASE ie_opcao_prescr_w
                    WHEN 'MA' THEN
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro)
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w
                            FROM
                                cpoe_material
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'M' THEN
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro)
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w
                            FROM
                                cpoe_material
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'N' THEN --Nutricao
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro)
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w
                            FROM
                                cpoe_dieta
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'P' THEN --Procedimentos
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro),
                                coalesce(MAX(cpoe_obter_se_lib_tudo_proc(nr_sequencia, 'P')), 'N')
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w,
                                ie_lib_tudo_proced_w
                            FROM
                                cpoe_procedimento
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'G' THEN --Gasoterapia
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro)
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w
                            FROM
                                cpoe_gasoterapia
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'R' THEN --Recomendacao
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro)
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w
                            FROM
                                cpoe_recomendacao
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'H' THEN --Hemoterapia
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro)
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w
                            FROM
                                cpoe_hemoterapia
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'D' THEN --Dialysis
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro)
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
								nr_seq_atend_futuro_w
                            FROM
                                cpoe_dialise
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                    WHEN 'AP' THEN --Anatomia Patologica
                        BEGIN
                            SELECT
                                coalesce(MAX(ie_item_alta), 'N'),
                                coalesce(MAX(nr_seq_transcricao), 0),
                                MAX(cd_medico),
                                MAX(nm_usuario),
                                coalesce(MAX(ie_retrogrado), 'N'),
                                MAX(dt_inicio),
                                MAX(nr_seq_pepo),
                                MAX(nr_cirurgia),
                                MAX(nr_cirurgia_patologia),
                                MAX(nr_seq_agenda),
                                MAX(nr_seq_conclusao_apae),
								MAX(nr_seq_atend_futuro),
                                coalesce(MAX(cpoe_obter_se_lib_tudo_proc(nr_sequencia, 'AP')), 'N')
                            INTO STRICT
                                ie_item_alta_w,
                                nr_seq_transcricao_w,
                                cd_medico_w,
                                nm_usuario_w,
                                ie_retrogrado_w,
                                dt_inicio_w,
                                nr_seq_pepo_w,
                                nr_cirurgia_w,
                                nr_cirurgia_patologia_w,
                                nr_seq_agenda_w,
                                nr_seq_conclusao_apae_w,
				nr_seq_atend_futuro_w,
                                ie_lib_tudo_proced_w
                            FROM
                                cpoe_anatomia_patologica
                            WHERE
                                nr_sequencia = nr_seq_reg_item_w;

                        END;
                END CASE;	

 			-- R,12;M,12345;D,1233;M,2312;
                BEGIN
                    sql_w := 'begin cpoe_gerar_prescricao_md (:1, :2, :3, :4, :5, :6, :7, :8, :9, :10, :11, :12, :13, :14, :15, :16,
                                                              :17, :18, :19, :20, :21, :22, :23, :24, :25, :26, :27, :28, :29, :30); end;';
                    EXECUTE sql_w
                        USING IN OUT ie_lib_tudo_proced_w, IN ie_libera_se_proced_w, IN  ie_lib_sem_interv_w,IN OUT ds_itens_proc_w,
                        IN ie_opcao_prescr_w, IN nr_seq_reg_item_w, IN OUT nr_seq_pepo_w, IN OUT ds_itens_pepo_w, OUT nr_seq_pepo_rep_w,
                        IN OUT nr_cirurgia_w, IN OUT ds_itens_cirur_w, OUT nr_seq_cirur_rep_w, IN OUT nr_cirurgia_patologia_w, IN
                        OUT ds_itens_cirur_pat_w, OUT nr_seq_cirur_pat_rep_w, IN OUT nr_seq_agenda_w, IN OUT ds_itens_agenda_w, OUT
                        nr_seq_agenda_rep_w, IN OUT nr_seq_transcricao_w, IN OUT ds_itens_transcricao_w, IN OUT nr_seq_transcricao_rep_w,
                        IN OUT ie_item_alta_w, IN OUT ds_itens_alta_w, IN OUT nr_seq_conclusao_apae_w, IN OUT ds_itens_apae_w, OUT
                       	nr_seq_conclusao_apae_rep_w, IN OUT ds_itens_liberados_w, IN OUT ds_itens_futuro_w, OUT nr_seq_futuro_rep_w,
                        IN OUT nr_seq_atend_futuro_w;

                EXCEPTION
                    WHEN OTHERS THEN
                        nr_seq_pepo_rep_w := NULL;
                        nr_seq_cirur_rep_w := NULL;
                        nr_seq_agenda_rep_w := NULL;
                        nr_seq_transcricao_rep_w := NULL;
                        nr_seq_conclusao_apae_rep_w := NULL;
                        nr_seq_cirur_pat_rep_w := NULL;
                        ds_itens_proc_w := NULL;
                        ie_lib_tudo_proced_w := NULL;
                        nr_seq_pepo_w := NULL;
                        ds_itens_pepo_w := NULL;
                        nr_cirurgia_w := NULL;
                        ds_itens_cirur_w := NULL;
                        nr_cirurgia_patologia_w := NULL;
                        nr_seq_agenda_w := NULL;
                        ds_itens_agenda_w := NULL;
                        nr_seq_transcricao_w := NULL;
                        ds_itens_transcricao_w := NULL;
                        ie_item_alta_w := NULL;
                        ds_itens_alta_w := NULL;
                        nr_seq_conclusao_apae_w := NULL;
                        ds_itens_apae_w := NULL;
                        ds_itens_liberados_w := NULL;
                        ds_itens_cirur_pat_w := NULL;
                        ie_lib_sem_interv_w := NULL;
			ds_itens_futuro_w := NULL;
                        nr_seq_futuro_rep_w := NULL;
                        nr_seq_atend_futuro_w := NULL;
                END;

            END IF;

        END LOOP;
	
	
	-- obter inf usuario prescritor
        IF (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') THEN
            SELECT
                MAX(a.cd_pessoa_fisica)
            INTO STRICT cd_prescritor_w
            FROM
                usuario a
            WHERE
                a.nm_usuario = nm_usuario_w;

        END IF;

        IF (
            coalesce(cd_medico_w::text, '') = ''
            AND ie_medico_logado_w = 'S'
            AND obter_se_medico(cd_prescritor_w, 'M') = 'S'
        ) THEN
            cd_medico_w := cd_prescritor_w;
        END IF;

        IF (
            coalesce(ie_copia_diaria_p, 'N') = 'N'
            AND ie_retrogrado_w = 'S'
            AND (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '')
        ) THEN
            dt_referencia_w := dt_inicio_w;
        END IF;

        IF (ds_itens_proc_w IS NOT NULL AND ds_itens_proc_w::text <> '') THEN
            nr_prescricao_proc_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_proc_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, NULL, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);

            IF ( coalesce(nr_prescricao_proc_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_proc_w;
                ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_proc_w);
            END IF;

            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_proc_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_proc_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_proc_w: '
                                               || nr_prescricao_proc_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

        IF (
            (ds_itens_pepo_w IS NOT NULL AND ds_itens_pepo_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
            AND ( coalesce(nr_seq_pepo_rep_w, 0) > 0 )
        ) THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_pepo_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_pepo_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_pepo_w, nr_prescricao_segunda_w;

            IF (ds_itens_pepo_w IS NOT NULL AND ds_itens_pepo_w::text <> '') THEN
                nr_prescricao_pepo_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_pepo_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, nr_seq_pepo_rep_w, NULL, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);
            END IF;

            IF ( coalesce(nr_prescricao_pepo_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_pepo_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_pepo_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_pepo_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_pepo_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_pepo_w: '
                                               || nr_prescricao_pepo_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

        IF (
            (ds_itens_cirur_w IS NOT NULL AND ds_itens_cirur_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
            AND ( coalesce(nr_seq_cirur_rep_w, 0) > 0 )
        ) THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_cirur_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_cirur_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_cirur_w, nr_prescricao_segunda_w;

            IF (ds_itens_cirur_w IS NOT NULL AND ds_itens_cirur_w::text <> '') THEN
                nr_prescricao_cirur_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_cirur_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, nr_seq_cirur_rep_w, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);
            END IF;

            IF ( coalesce(nr_prescricao_cirur_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_cirur_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_cirur_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_cirur_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_cirur_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_cirur_w: '
                                               || nr_prescricao_cirur_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

        IF (
            (ds_itens_cirur_pat_w IS NOT NULL AND ds_itens_cirur_pat_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
            AND ( coalesce(nr_seq_cirur_pat_rep_w, 0) > 0 )
        ) THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_cirur_pat_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_cirur_pat_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_cirur_pat_w, nr_prescricao_segunda_w;

            IF (ds_itens_cirur_pat_w IS NOT NULL AND ds_itens_cirur_pat_w::text <> '') THEN
                nr_prescricao_cirur_pat_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_cirur_pat_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, NULL, nr_seq_cirur_pat_rep_w, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);
            END IF;

            IF ( coalesce(nr_prescricao_cirur_pat_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_cirur_pat_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_cirur_pat_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_cirur_pat_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_cirur_pat_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_cirur_pat_w: '
                                               || nr_prescricao_cirur_pat_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

        IF (
            (ds_itens_agenda_w IS NOT NULL AND ds_itens_agenda_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
            AND ( coalesce(nr_seq_agenda_rep_w, 0) > 0 )
        ) THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_agenda_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_agenda_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_agenda_w, nr_prescricao_segunda_w;

            IF (ds_itens_agenda_w IS NOT NULL AND ds_itens_agenda_w::text <> '') THEN
                nr_prescricao_agenda_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_agenda_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, NULL, NULL, nr_seq_agenda_rep_w, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);
            END IF;

            IF ( coalesce(nr_prescricao_agenda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_agenda_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_agenda_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_agenda_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_agenda_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_agenda_w: '
                                               || nr_prescricao_agenda_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

        IF (
            (ds_itens_transcricao_w IS NOT NULL AND ds_itens_transcricao_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
            AND ( coalesce(nr_seq_transcricao_rep_w, 0) > 0 )
        ) THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_transcricao_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_transcricao_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_transcricao_w, nr_prescricao_segunda_w;

            IF (ds_itens_transcricao_w IS NOT NULL AND ds_itens_transcricao_w::text <> '') THEN
                nr_prescricao_transcricao_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_transcricao_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', nr_seq_transcricao_rep_w, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, NULL, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);
            END IF;

            IF ( coalesce(nr_prescricao_transcricao_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_transcricao_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_transcricao_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_transcricao_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_transcricao_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_transcricao_w: '
                                               || nr_prescricao_transcricao_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

        IF (ds_itens_alta_w IS NOT NULL AND ds_itens_alta_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
        THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_alta_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_alta_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_alta_w, nr_prescricao_segunda_w;

            IF (ds_itens_alta_w IS NOT NULL AND ds_itens_alta_w::text <> '') THEN
                nr_prescricao_alta_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_alta_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'S', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, NULL, NULL, NULL, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);
            END IF;

            IF ( coalesce(nr_prescricao_alta_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_alta_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_alta_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_alta_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_alta_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_alta_w: '
                                               || nr_prescricao_alta_w
                                               || '; nr_prescricao_segunda_w: '
                                               || nr_prescricao_segunda_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

        IF (
            (ds_itens_apae_w IS NOT NULL AND ds_itens_apae_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
            AND ( coalesce(nr_seq_conclusao_apae_rep_w, 0) > 0 )
        ) THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_apae_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_apae_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_apae_w, nr_prescricao_segunda_w;

            IF (ds_itens_apae_w IS NOT NULL AND ds_itens_apae_w::text <> '') THEN
                nr_prescricao_apae_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_apae_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, NULL, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);
            END IF;

            IF ( coalesce(nr_prescricao_apae_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_apae_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_apae_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_apae_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_apae_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_apae_w: '
                                               || nr_prescricao_apae_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

	
	  IF (
            (ds_itens_futuro_w IS NOT NULL AND ds_itens_futuro_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
            AND ( coalesce(nr_seq_futuro_rep_w, 0) > 0 )
        ) THEN
            nr_prescricao_segunda_w := NULL;
		/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_futuro_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_futuro_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_futuro_w, nr_prescricao_segunda_w;
            IF (ds_itens_futuro_w IS NOT NULL AND ds_itens_futuro_w::text <> '') THEN
                nr_prescricao_futura_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_futuro_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, NULL, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p, NULL, NULL, 'N', nr_seq_futuro_rep_w);
            END IF;

            IF ( coalesce(nr_prescricao_futura_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_futura_w;
            ELSIF ( coalesce(nr_prescricao_segunda_w, 0) > 0 ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_futura_w);
            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(1)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_futura_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_futura_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_futura_w: '
                                               || nr_prescricao_futura_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;
	
        IF (ds_itens_liberados_w IS NOT NULL AND ds_itens_liberados_w::text <> '')
            AND ( coalesce(ie_block_liberacao_w, 'N') <> 'S' )
        THEN
            nr_prescricao_segunda_w := NULL;
            SELECT
                coalesce(MAX(dt_liberacao_medico), MAX(dt_liberacao))
            INTO STRICT dt_liberacao_w
            FROM
                prescr_medica
            WHERE
                nr_prescricao = nr_prescricao_lib_p;

			/* Separa a geracao das Hemoterapias*/

            SELECT * FROM cpoe_gera_segunda_prescr(ds_itens_liberados_w, nr_atendimento_p, dt_referencia_p, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, ds_itens_liberados_w, ie_adep_p, nr_prescricao_segunda_w) INTO STRICT ds_itens_liberados_w, nr_prescricao_segunda_w;

            IF ( coalesce(nr_prescricao_lib_p, 0) > 0 )
                AND ( coalesce(dt_liberacao_w::text, '') = '' )
                AND ( coalesce(ie_copia_diaria_p, 'N') = 'N' )
            THEN
                CALL cpoe_delete_prescription(nr_prescricao_lib_p, ' Apagando somente itens(CPOE_Gerar_prescricao) ', 'S');
                nr_prescricao_w := cpoe_gerar_itens_prescricao(nr_atendimento_p, nr_prescricao_lib_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_liberados_w, cd_pessoa_fisica_p, ie_interv_farmacia_p, coalesce(ie_copia_diaria_p, 'N'), nr_prescricao_w);

                ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_w);
            ELSIF (ds_itens_liberados_w IS NOT NULL AND ds_itens_liberados_w::text <> '') THEN
                nr_prescricao_w := cpoe_gerar_prescricao_rep(nr_atendimento_p, dt_referencia_w, cd_estabelecimento_p, cd_perfil_p, cd_setor_atendimento_p, nm_usuario_p, ds_itens_liberados_w, cd_pessoa_fisica_p, coalesce(ie_copia_diaria_p, 'N'), ie_interv_farmacia_p, 'N', NULL, ie_motivo_prescr_p, cd_medico_w, cd_prescritor_w, ie_retrogrado_w, NULL, NULL, NULL, NULL, nr_seq_consulta_oft_p, nr_seq_pend_pac_acao_p, 'N', ie_adep_p);

                ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_w);
            END IF;

            CALL cpoe_update_prot_prescricao(nr_prescricao_w, ds_itens_liberados_w);
            IF (
                coalesce(nr_prescricao_apae_w::text, '') = ''
                AND (nr_prescricao_segunda_w IS NOT NULL AND nr_prescricao_segunda_w::text <> '')
            ) THEN
                nr_prescricao_w := nr_prescricao_segunda_w;
            END IF;

            ds_prescricoes_geradas_w := obter_prescricoes_geradas(ds_prescricoes_geradas_w, nr_prescricao_segunda_w);
			/* Verificar se precisa aplicar o for */

            IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' ) THEN
                SELECT
                    COUNT(*)
                INTO STRICT qt_inconsistency_w
                FROM
                    cpoe_inconsistency
                WHERE
                        nr_atendimento = nr_atendimento_p
                    AND nr_prescricao = nr_prescricao_w
                    AND nm_usuario = nm_usuario_p;

                IF ( coalesce(qt_inconsistency_w, 0) > 0 ) THEN
                    ie_inconsistencia_out_p := 'S';
                    SELECT
                        MAX(coalesce('S', 'N'))
                    INTO STRICT ie_consiste_liberacao_w
                    FROM
                        cpoe_inconsistency
                    WHERE
                            nr_atendimento = nr_atendimento_p
                        AND nm_usuario = nm_usuario_p
                        AND nr_prescricao = nr_prescricao_w
                        AND coalesce(ie_libera, 'X') = 'N';

                    IF ( coalesce(ie_consiste_liberacao_w, 'N') = 'S' ) THEN
                        ie_block_liberacao_w := 'S';
                        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO BLOCK LIBERACAO: '
                                               || 'nr_atendimento_p: '
                                               || nr_atendimento_p
                                               || '; nr_prescricao_w: '
                                               || nr_prescricao_w
                                               || '; nm_usuario_p: '
                                               || nm_usuario_p
                                               || '; nr_seq_reg_item_w: '
                                               || nr_seq_reg_item_w
                                               || '; ds_stack: '
                                               || dbms_utility.format_call_stack,
                                              1,
                                              2000),
                                       nr_atendimento_p);

                    END IF;

                END IF;

            END IF;

        END IF;

	
	
	
        IF ( coalesce(ie_copia_diaria_p, 'N') = 'N' )
            AND ( coalesce(ie_block_liberacao_w, 'N') = 'S' )
        THEN
            CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO DELETE PRESCRIPTION: '
                                   || 'nr_atendimento_p: '
                                   || nr_atendimento_p
                                   || '; nr_prescricao_proc_w: '
                                   || nr_prescricao_proc_w
                                   || '; nr_prescricao_pepo_w: '
                                   || nr_prescricao_pepo_w
                                   || '; nr_prescricao_cirur_w: '
                                   || nr_prescricao_cirur_w
                                   || '; nr_prescricao_cirur_pat_w: '
                                   || nr_prescricao_cirur_pat_w
                                   || '; nr_prescricao_agenda_w: '
                                   || nr_prescricao_agenda_w
                                   || '; nr_prescricao_transcricao_w: '
                                   || nr_prescricao_transcricao_w
                                   || '; nr_prescricao_alta_w: '
                                   || nr_prescricao_alta_w
                                   || '; nr_prescricao_apae_w: '
                                   || nr_prescricao_apae_w
				   || '; nr_prescricao_futura_w: '
                                   || nr_prescricao_futura_w
                                   || '; nr_prescricao_w: '
                                   || nr_prescricao_w
                                   || '; nm_usuario_p: '
                                   || nm_usuario_p
                                   || '; nr_seq_reg_item_w: '
                                   || nr_seq_reg_item_w
                                   || '; ds_stack: '
                                   || dbms_utility.format_call_stack,
                                  1,
                                  2000),
                           nr_atendimento_p);

            IF ( coalesce(nr_prescricao_proc_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_proc_w, '');
            END IF;

            IF ( coalesce(nr_prescricao_pepo_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_pepo_w, '');
            END IF;

            IF ( coalesce(nr_prescricao_cirur_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_cirur_w, '');
            END IF;

            IF ( coalesce(nr_prescricao_cirur_pat_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_cirur_pat_w, '');
            END IF;

            IF ( coalesce(nr_prescricao_agenda_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_agenda_w, '');
            END IF;

            IF ( coalesce(nr_prescricao_transcricao_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_transcricao_w, '');
            END IF;

            IF ( coalesce(nr_prescricao_alta_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_alta_w, '');
            END IF;

            IF ( coalesce(nr_prescricao_apae_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_apae_w, '');
            END IF;
	
            IF ( coalesce(nr_prescricao_futura_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_futura_w, NULL);
            END IF;
	
            IF ( coalesce(nr_prescricao_w, 0) > 0 ) THEN
                CALL cpoe_delete_prescription(nr_prescricao_w, '');
            END IF;

            nr_prescricao_w := NULL;
            ds_prescricoes_geradas_w := NULL;
            ie_inconsistencia_out_p := 'N';
        ELSE
            ie_usuario_medico_w := 'N';
            SELECT
                MAX(a.cd_pessoa_fisica)
            INTO STRICT cd_pf_usuario_w
            FROM
                usuario a
            WHERE
                a.nm_usuario = nm_usuario_p;

            IF (cd_pf_usuario_w IS NOT NULL AND cd_pf_usuario_w::text <> '') THEN
                SELECT
                    coalesce(MAX('1'), '3')
                INTO STRICT ie_origem_inf_w
                FROM
                    medico
                WHERE
                        cd_pessoa_fisica = cd_pf_usuario_w
                    AND coalesce(ie_situacao, 'A') = 'A';

                IF ( ie_origem_inf_w = '1' ) THEN
                    ie_usuario_medico_w := 'S';
                END IF;
            END IF;

            CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO LIBERAR PRESCRICAO: '
                                   || ' nr_atendimento_p: '
                                   || nr_atendimento_p
                                   || '; nr_prescricao_proc_w: '
                                   || nr_prescricao_proc_w
                                   || '; nr_prescricao_pepo_w: '
                                   || nr_prescricao_pepo_w
                                   || '; nr_prescricao_cirur_w: '
                                   || nr_prescricao_cirur_w
                                   || '; nr_prescricao_cirur_pat_w: '
                                   || nr_prescricao_cirur_pat_w
                                   || '; nr_prescricao_agenda_w: '
                                   || nr_prescricao_agenda_w
                                   || '; nr_prescricao_transcricao_w: '
                                   || nr_prescricao_transcricao_w
                                   || '; nr_prescricao_alta_w: '
                                   || nr_prescricao_alta_w
                                   || '; nr_prescricao_apae_w: '
                                   || nr_prescricao_apae_w
				   || '; nr_prescricao_futura_w: '
                                   || nr_prescricao_futura_w
                                   || '; nr_prescricao_w: '
                                   || nr_prescricao_w
                                   || '; nm_usuario_p: '
                                   || nm_usuario_p
                                   || '; nr_seq_reg_item_w: '
                                   || nr_seq_reg_item_w
                                   || '; ds_stack: '
                                   || dbms_utility.format_call_stack,
                                  1,
                                  2000),
                           nr_atendimento_p);

            IF ( coalesce(nr_prescricao_proc_w, 0) > 0 ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_proc_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_proc_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
                                             nm_usuario_validacao_p);
            END IF;

            IF ( coalesce(nr_prescricao_pepo_w, 0) > 0 ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_pepo_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_pepo_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
                                             nm_usuario_validacao_p);
            END IF;

            IF ( coalesce(nr_prescricao_cirur_w, 0) > 0 ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_cirur_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_cirur_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
                                             nm_usuario_validacao_p);
            END IF;

            IF ( coalesce(nr_prescricao_cirur_pat_w, 0) > 0 ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_cirur_pat_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_cirur_pat_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
                                             nm_usuario_validacao_p);
            END IF;

            IF ( coalesce(nr_prescricao_agenda_w, 0) > 0 ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_agenda_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_agenda_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
                                             nm_usuario_validacao_p);
            END IF;

            IF ( coalesce(nr_prescricao_transcricao_w, 0) > 0 ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_transcricao_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_transcricao_w, cd_estabelecimento_p, nm_usuario_p,
                                             nr_atendimento_p,
                                             nm_usuario_validacao_p);
            END IF;

            IF ( coalesce(nr_prescricao_alta_w, 0) > 0 ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_alta_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_alta_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
                                             nm_usuario_validacao_p);
                nr_seq_tipo_avaliacao_w := obter_param_usuario(924, 711, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_tipo_avaliacao_w);
                IF (nr_seq_tipo_avaliacao_w IS NOT NULL AND nr_seq_tipo_avaliacao_w::text <> '') THEN
                    CALL gerar_avaliacao_rep(nr_prescricao_alta_w, nr_seq_tipo_avaliacao_w, cd_perfil_p, cd_estabelecimento_p,
                                       nm_usuario_p);
                END IF;

            END IF;

            IF ( coalesce(nr_prescricao_apae_w, 0) > 0 ) THEN
                UPDATE conclusao_recom_apae
                SET
                    nr_prescricao = nr_prescricao_apae_w
                WHERE
                        nr_sequencia = nr_seq_conclusao_apae_rep_w
                    AND coalesce(nr_prescricao::text, '') = '';

                COMMIT;
                ds_erro_w := liberar_prescricao(nr_prescricao_apae_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

                CALL cpoe_after_liberar_prescricao(nr_prescricao_apae_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
                                             nm_usuario_validacao_p);
            END IF;	
	    
	       IF ( coalesce(nr_prescricao_futura_w, 0) > 0 ) THEN
		ds_erro_w := liberar_prescricao(nr_prescricao_futura_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);

		CALL cpoe_after_liberar_prescricao(nr_prescricao_futura_w, cd_estabelecimento_p, nm_usuario_p, nr_atendimento_p,
					     nm_usuario_validacao_p);
	    END IF;

            IF ( ie_prescr_adep_p = 'S' ) THEN
                ds_erro_w := liberar_prescricao(nr_prescricao_w, nr_atendimento_p, ie_usuario_medico_w, coalesce(cd_perfil_p, 0), nm_usuario_p, 'S', ds_erro_w);
            END IF;

        END IF;

    END IF;
	
	

    nr_prescricao_out_p := nr_prescricao_w;
    ds_prescricoes_geradas_out_p := ds_prescricoes_geradas_w;
    CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO FIM : '
                           || substr(to_char(sqlerrm), 1, 2000)
                           || ' /Parametros: itens_liberar_p: '
                           || itens_liberar_p
                           || ' dt_referencia_p: '
                           || to_char(dt_referencia_p, 'dd/mm/yyy hh24:mi:ss')
                           || ' nr_atendimento_p: '
                           || nr_atendimento_p
                           || ' cd_estabelecimento_p: '
                           || cd_estabelecimento_p
                           || ' cd_pessoa_fisica_p: '
                           || cd_pessoa_fisica_p
                           || ' cd_setor_atendimento_p: '
                           || cd_setor_atendimento_p
                           || ' ds_prescricoes_geradas_out_p: '
                           || ds_prescricoes_geradas_out_p
                           || ' nm_usuario_p: '
                           || nm_usuario_p
                           || ' ie_copia_diaria_p: '
                           || ie_copia_diaria_p,
                          1,
                          2000),
                   nr_atendimento_p);

EXCEPTION
    WHEN OTHERS THEN
        CALL gravar_log_cpoe(substr('CPOE_GERAR_PRESCRICAO EXCEPTION: '
                               || substr(to_char(sqlerrm), 1, 2000)
                               || ' /Parametros: itens_liberar_p: '
                               || itens_liberar_p
                               || ' dt_referencia_p: '
                               || to_char(dt_referencia_p, 'dd/mm/yyy hh24:mi:ss')
                               || ' nr_atendimento_p: '
                               || nr_atendimento_p
                               || ' cd_estabelecimento_p: '
                               || cd_estabelecimento_p
                               || ' cd_pessoa_fisica_p: '
                               || cd_pessoa_fisica_p
                               || ' cd_setor_atendimento_p: '
                               || cd_setor_atendimento_p
                               || ' ds_prescricoes_geradas_out_p: '
                               || ds_prescricoes_geradas_out_p
                               || ' nm_usuario_p: '
                               || nm_usuario_p
                               || ' ie_copia_diaria_p: '
                               || ie_copia_diaria_p,
                              1,
                              2000),
                       nr_atendimento_p);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_prescricao (( nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, dt_referencia_p timestamp, cd_estabelecimento_p estabelecimento.cd_estabelecimento%TYPE, cd_perfil_p perfil.cd_perfil%TYPE, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%TYPE, nm_usuario_p usuario.nm_usuario%TYPE, itens_liberar_p text, ie_inconsistencia_out_p OUT text, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%TYPE DEFAULT NULL, ie_copia_diaria_p CHAR DEFAULT 'N', ie_interv_farmacia_p text DEFAULT 'N', ie_motivo_prescr_p text DEFAULT NULL, ie_liberacao_ang_p text DEFAULT 'N', nr_prescricao_out_p OUT bigint, nr_prescricao_lib_p bigint DEFAULT NULL, nr_seq_consulta_oft_p bigint DEFAULT NULL, nr_seq_pend_pac_acao_p bigint DEFAULT NULL, ie_copia_sem_lib_enf_farm_p text DEFAULT 'N', ie_adep_p text DEFAULT 'S', nm_usuario_validacao_p text DEFAULT NULL, ds_prescricoes_geradas_out_p OUT text, nm_usuario_lib_enf_p cpoe_material.nm_usuario_lib_enf%TYPE DEFAULT NULL, cd_farmac_lib_p cpoe_material.cd_farmac_lib%TYPE DEFAULT NULL, ie_prescr_adep_p text DEFAULT NULL, ie_disp_semanal_p text DEFAULT 'N' ) IS dt_referencia_w timestamp DEFAULT dt_referencia_p) FROM PUBLIC;

