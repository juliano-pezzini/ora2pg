-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_justif_automatica ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) AS $body$
DECLARE

/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a justificativa automatica para a analise.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ 
-- cursor com a conta e seq da regra
c01 CURSOR(nr_seq_analise_pc	pls_analise_conta.nr_sequencia%type) FOR
SELECT	a.nr_sequencia nr_seq_conta,
	b.nr_seq_conta_proc,
	b.nr_seq_conta_mat,
	d.nr_sequencia nr_seq_regra,
	b.nr_sequencia nr_seq_ocorrencia
FROM pls_analise_conta g, pls_ocor_cta_just_aut c, pls_ocorrencia_benef b, pls_conta a
LEFT OUTER JOIN pls_conta_anexo f ON (a.nr_sequencia = f.nr_seq_conta)
, pls_regra_cta_just_aut d
LEFT OUTER JOIN pls_excecao_cta_just_aut e ON (d.nr_sequencia = e.nr_seq_regra_cta_just)
WHERE b.nr_seq_conta			= a.nr_sequencia and c.nr_seq_ocorrencia		= b.nr_seq_ocorrencia and d.nr_sequencia			= c.nr_seq_regra_cta_just   and g.nr_sequencia			= nr_seq_analise_pc and a.nr_seq_analise		= g.nr_sequencia and g.ie_origem_analise		= 1  -- atualmente so pode ser considerado a  analise de conta de prestadores
  and coalesce(b.ie_situacao, 'A')		= 'A' -- parte da excecao, - valida se a conta possui anexo
  and ((coalesce(e.ie_anexo, 'N') = 'N') or (coalesce(e.ie_anexo, 'N') = 'S' and coalesce(f.nr_sequencia::text, '') = '')) and to_date(a.dt_atendimento) between to_date(d.dt_inicio_vigencia) and to_date(coalesce(d.dt_fim_vigencia, clock_timestamp()));
	-- data da conta esta na vigencia da regra

-- Não foi utilizado order by por conta do custo de CPU alto.
ie_alterar_status_w	varchar(1) := 'N';
nr_seq_conta_atz_w	pls_conta.nr_sequencia%type := 0;
BEGIN

-- busca por analise
if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') then
	-- busca as contas que necessitam de justificativa
	for r_c01_w in c01(nr_seq_analise_p) loop
		-- grava o histórico na analise
		insert into pls_hist_analise_conta(	nr_sequencia,
							nr_seq_conta,
							nr_seq_analise,
							ie_tipo_historico,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_item,
							ie_tipo_item,
							nr_seq_ocorrencia,
							ds_observacao,
							nr_seq_glosa,
							nr_seq_grupo,
							nr_seq_conta_proc,
							nr_seq_conta_mat,
							nr_seq_proc_partic,
							nr_seq_ocor_benef,
							nr_seq_conta_glosa)
		SELECT	nextval('pls_hist_analise_conta_seq'),
			r_c01_w.nr_seq_conta,
			nr_seq_analise_p,
			'36', -- Aguardando justificativa médica
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			null,
			null,
			a.ds_mensagem,
			null,
			null,
			r_c01_w.nr_seq_conta_proc,
			r_c01_w.nr_seq_conta_mat,
			null,
			null,
			null
		from	pls_regra_cta_just_aut	a
		where	a.nr_sequencia	= r_c01_w.nr_seq_regra;
		
		-- atualiza o status do procedimento
		if (r_c01_w.nr_seq_conta_proc IS NOT NULL AND r_c01_w.nr_seq_conta_proc::text <> '') then
			update	pls_conta_proc
			set	ie_status	= 'J'
			where	nr_sequencia	= r_c01_w.nr_seq_conta_proc;
		end if;
		
		-- atualiza o status do material
		if (r_c01_w.nr_seq_conta_mat IS NOT NULL AND r_c01_w.nr_seq_conta_mat::text <> '') then
			update	pls_conta_mat
			set	ie_status	= 'J'
			where	nr_sequencia	= r_c01_w.nr_seq_conta_mat;
		end if;
		
		-- controla para atualizar a conta apenas uma vez, ao invéz de todas as vezes por todos os procedimentos
		if (nr_seq_conta_atz_w <> r_c01_w.nr_seq_conta) then
			update	pls_conta
			set	ie_analise_justificativa	= 'A'
			where	nr_sequencia			= r_c01_w.nr_seq_conta;
			
			nr_seq_conta_atz_w := r_c01_w.nr_seq_conta;
			
			--Gera pendência de notificação do Portal
			CALL pls_gerar_notificacao_tws(nm_usuario_p, 'JC', 'P', r_c01_w.nr_seq_conta);
		end if;
	
		ie_alterar_status_w := 'S';
	end loop;
	
	if (ie_alterar_status_w = 'S') then
		update	pls_analise_conta
		set	ie_status	= 'J' -- Aguardando justificativa
		where	nr_sequencia	= nr_seq_analise_p;
	end if;
	
	if (ie_commit_p = 'S') then
		commit;	
	end if;

end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_justif_automatica ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type, ie_commit_p text) FROM PUBLIC;

