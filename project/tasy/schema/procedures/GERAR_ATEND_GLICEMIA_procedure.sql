-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_atend_glicemia ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_procedimento_p bigint, nr_seq_prot_glic_p bigint, nm_usuario_p text, nr_seq_glicemia_p INOUT bigint) AS $body$
DECLARE


nr_seq_glic_w		bigint;
nr_glic_atend_w		bigint	:= null;
ie_status_glic_w	varchar(1);
dt_inicio_glic_w	timestamp		:= null;
dt_termino_glic_w	timestamp		:= null;
cd_pf_inic_glic_w	varchar(10)	:= null;
cd_pf_term_glic_w	varchar(10)	:= null;
ie_tipo_w		varchar(1);


BEGIN
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_procedimento_p IS NOT NULL AND nr_seq_procedimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	/* obter sequence */

	select	nextval('atend_glicemia_seq')
	into STRICT	nr_seq_glic_w
	;

	select	max(ie_tipo)
	into STRICT	ie_tipo_w
	from	pep_protocolo_glicemia
	where	nr_sequencia	= nr_seq_prot_glic_p;

	/* obter glicemias atendimento */

	if (nr_seq_prot_glic_p IS NOT NULL AND nr_seq_prot_glic_p::text <> '') and (ie_tipo_w = 'C') then /* ccg */
		select	count(*) + 1
		into STRICT	nr_glic_atend_w
		from	atend_glicemia
		where	nr_atendimento = nr_atendimento_p
		and	(nr_seq_prot_glic IS NOT NULL AND nr_seq_prot_glic::text <> '');

	else /* cig */
		select	count(*) + 1
		into STRICT	nr_glic_atend_w
		from	atend_glicemia a
		where	a.nr_atendimento = nr_atendimento_p
		and	((coalesce(a.nr_seq_prot_glic::text, '') = '') or (exists (SELECT 1 from pep_protocolo_glicemia b where a.nr_seq_prot_glic = b.nr_sequencia and b.ie_tipo = 'I')));

	end if;

	/* obter status glicemia */

	ie_status_glic_w := 'P';

	/* gerar glicemia */

	insert into atend_glicemia(
					nr_sequencia,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_atendimento,
					nr_prescricao,
					nr_seq_procedimento,
					nr_seq_prot_glic,
					nr_glic_atend,
					ie_status_glic,
					dt_inicio_glic,
					dt_termino_glic,
					cd_pf_inic_glic,
					cd_pf_term_glic
					)
	values (
					nr_seq_glic_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_atendimento_p,
					nr_prescricao_p,
					nr_seq_procedimento_p,
					nr_seq_prot_glic_p,
					nr_glic_atend_w,
					ie_status_glic_w,
					dt_inicio_glic_w,
					dt_termino_glic_w,
					cd_pf_inic_glic_w,
					cd_pf_term_glic_w
					);

else
	--Erro ao gerar o registro de glicemia!#@#@');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261404);
end if;

nr_seq_glicemia_p := nr_seq_glic_w;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_atend_glicemia ( nr_atendimento_p bigint, nr_prescricao_p bigint, nr_seq_procedimento_p bigint, nr_seq_prot_glic_p bigint, nm_usuario_p text, nr_seq_glicemia_p INOUT bigint) FROM PUBLIC;

