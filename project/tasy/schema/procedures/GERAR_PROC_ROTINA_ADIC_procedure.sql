-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proc_rotina_adic ( nr_seq_agenda_p bigint, ds_lista_valores_p text, nm_usuario_p text, is_colombia_p text default null) AS $body$
DECLARE

		
ds_lista_w		varchar(2000);
ds_proced_w		varchar(255);
ie_pos_separador_w	bigint;
nr_seq_grupo_item_w	bigint;
qt_procedimento_w	bigint;
qt_tam_lista_w		bigint;
ie_pos_virgula_w 	integer;
ds_pos_separador_w	varchar(255);
ie_lado_w			varchar(1);

nr_mipres_w				controle_mipres_agenda.nr_prescr_mipres%type;
dt_validade_mipres_w	controle_mipres_agenda.dt_validity%type;
nr_ret_mipres_w			varchar(20);


BEGIN
if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (ds_lista_valores_p IS NOT NULL AND ds_lista_valores_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	
	ds_lista_w	:= ds_lista_valores_p;
	
	while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') loop
		begin
		
		nr_mipres_w := null;
		dt_validade_mipres_w := null;
				
		qt_tam_lista_w		:= length(ds_lista_w);
		ie_pos_virgula_w	:= position(',' in ds_lista_w);
		

		if (ie_pos_virgula_w <> 0) then
			begin
				ds_proced_w		:= substr(ds_lista_w,1,(ie_pos_virgula_w - 1));
				ds_lista_w	:= substr(ds_lista_w,(ie_pos_virgula_w + 1),qt_tam_lista_w);
				
				ie_pos_separador_w	:= position('-' in ds_proced_w);
				nr_seq_grupo_item_w	:= (substr(ds_proced_w,1,(ie_pos_separador_w - 1)))::numeric;
				
				ds_pos_separador_w 	:= substr(ds_proced_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w );
								
				begin
					ie_lado_w	:= substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1));
					if (ie_lado_w = 'null') then
						ie_lado_w := null;
					end if;
				exception
					when others then
					ie_lado_w := null;
				end;
				
				ds_pos_separador_w 	:= substr(ds_pos_separador_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w );
				
				begin
					qt_procedimento_w	:= (substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1)))::numeric;
					if (qt_procedimento_w = 0) then
						qt_procedimento_w := 1;
					end if;
				exception
					when others then
					qt_procedimento_w := 1;
				end;
				
				if ((is_colombia_p IS NOT NULL AND is_colombia_p::text <> '') and is_colombia_p = 'S') then
					ds_pos_separador_w 	:= substr(ds_pos_separador_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
					ie_pos_separador_w	:= position('-' in ds_pos_separador_w );

					nr_ret_mipres_w	:= substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1));

					if (nr_ret_mipres_w <> 'null') then
						nr_mipres_w := (nr_ret_mipres_w)::numeric;
						ds_pos_separador_w 	:= substr(ds_pos_separador_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
						ie_pos_separador_w	:= position('-' in ds_pos_separador_w );
						
						dt_validade_mipres_w	:= to_date(ds_pos_separador_w, 'dd/MM/yyyy');
					end if;

				end if;
			end;
		else
			begin
				ie_pos_separador_w	:= position('-' in ds_lista_w);
				nr_seq_grupo_item_w	:= (substr(ds_lista_w,1,(ie_pos_separador_w - 1)))::numeric;
				
				ds_pos_separador_w 	:= substr(ds_proced_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w);
						
				begin
					ie_lado_w	:= substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1));
					if (ie_lado_w = 'null') then
						ie_lado_w := null;
					end if;
				exception
					when others then
					ie_lado_w := null;
				end;
				
				ds_pos_separador_w 	:= substr(ds_pos_separador_w,ie_pos_separador_w + 1,(ie_pos_virgula_w - 1));
				ie_pos_separador_w	:= position('-' in ds_pos_separador_w );
				
				begin
					qt_procedimento_w	:= (substr(ds_pos_separador_w,1,(ie_pos_separador_w - 1)))::numeric;
					if (qt_procedimento_w = 0) then
						qt_procedimento_w := 1;
					end if;
				exception
					when others then
					qt_procedimento_w := 1;
				end;
					
				
				ds_lista_w	:= null;
			end;
		end if;

		if (nr_seq_grupo_item_w IS NOT NULL AND nr_seq_grupo_item_w::text <> '') and (nr_seq_grupo_item_w > 0) then
			begin			
			
			CALL gerar_proc_rotina_adicional(
				nr_seq_agenda_p,
				nr_seq_grupo_item_w,
				qt_procedimento_w,
				nm_usuario_p,
				wheb_usuario_pck.get_cd_estabelecimento,				
				ie_lado_w,
				nr_mipres_w,
				dt_validade_mipres_w);
			end;
		end if;
		
		end;
	end loop;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proc_rotina_adic ( nr_seq_agenda_p bigint, ds_lista_valores_p text, nm_usuario_p text, is_colombia_p text default null) FROM PUBLIC;

