-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function ish_verificar_dados_envio as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE ish_verificar_dados_envio ( nr_seq_fila_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL ish_verificar_dados_envio_atx ( ' || quote_nullable(nr_seq_fila_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE ish_verificar_dados_envio_atx ( nr_seq_fila_p bigint) AS $body$
DECLARE


ds_action_w			intpd_eventos_sistema.ds_action%type;
ie_evento_w			intpd_fila_transmissao.ie_evento%type;
nr_seq_documento_w		intpd_fila_transmissao.nr_seq_documento%type;
nr_seq_regra_w			intpd_eventos_sistema.nr_seq_regra_conv%type;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;

nr_doc_retorno_w			intpd_fila_transmissao.nr_seq_documento%type;
nr_doc_consulta_w			intpd_fila_transmissao.nr_seq_documento%type;
ie_evento_envio_w			intpd_fila_transmissao.ie_evento%type;
ie_evento_recebe_w		intpd_fila_transmissao.ie_evento%type;

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
nr_seq_interno_w			diagnostico_doenca.nr_seq_interno%type;
cd_doenca_w			diagnostico_doenca.cd_doenca%type;
diagnostico_doenca_chave_w	dbms_sql.varchar2_table;

qt_existe_w			bigint;

c01 CURSOR FOR
SELECT	nr_sequencia,
	ie_status,
	nr_seq_agrupador
from	intpd_fila_transmissao
where	ie_evento = ie_evento_envio_w
and	nr_seq_documento = nr_doc_consulta_w
and	nr_sequencia < nr_seq_fila_p

union all

select	nr_sequencia,
	ie_status,
	nr_seq_agrupador
from	intpd_fila_transmissao
where	ie_evento = ie_evento_recebe_w
and	nr_doc_externo = nr_doc_consulta_w
and	nr_sequencia < nr_seq_fila_p
order by nr_sequencia desc;

c01_w	c01%rowtype;procedure intpd_gravar_log(
		nr_seq_fila_p	bigint,
		ds_tipo_p	text,
		nr_id_p		text) is

	;
BEGIN
	CALL intpd_gravar_log_receb_pragma(
		nr_seq_fila_p,
		substr(	wheb_mensagem_pck.get_texto(1026583,
			'DS_REGISTRO=' || ds_tipo_p ||
			';NR_ID=' || nr_id_p),
			1,4000),
		'Tasy');

	end;

begin
CALL intpd_inicializacao(nr_seq_fila_p);


begin
select	a.ie_evento,
	b.ds_action,
	a.nr_seq_documento,
	b.nr_seq_regra_conv,
	b.ie_conversao
into STRICT	ie_evento_w,
	ds_action_w,
	nr_seq_documento_w,
	nr_seq_regra_w,
	ie_conversao_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	b.nr_sequencia = a.nr_seq_evento_sistema
and	a.nr_sequencia = nr_seq_fila_p;
exception
when others then
	ds_action_w	:=	'X';
end;

delete	FROM intpd_log_recebimento
where	nr_seq_fila = nr_seq_fila_p;
commit;

if (ie_evento_w = '82') then
	begin
	diagnostico_doenca_chave_w 	:= obter_lista_string(nr_seq_documento_w, '¬');
	nr_atendimento_w			:= diagnostico_doenca_chave_w(1);
	nr_seq_interno_w			:= diagnostico_doenca_chave_w(2);
	cd_doenca_w			:= diagnostico_doenca_chave_w(3);

	nr_doc_consulta_w	:=		obter_atepacu_paciente(nr_atendimento_w, 'A');
	nr_doc_retorno_w	:=		intpd_conv('ATEND_PACIENTE_UNIDADE', 'NR_SEQ_INTERNO', nr_doc_consulta_w, nr_seq_regra_w, ie_conversao_w, 'E');
	nr_doc_retorno_w	:=		coalesce(obter_valor_campo_separador(nr_doc_retorno_w, 2, '¬'),'X');

	if (not(somente_numero(nr_doc_retorno_w) > 0)) then
		intpd_gravar_log(nr_seq_fila_p, 'Movement', nr_doc_consulta_w);
	end if;
	end;
end if;

/*
open c01;
loop
fetch c01 into
	c01_w;
exit when (c01%notfound or c01_w.nr_sequencia is not null);
end loop;
close c01;

if	(c01_w.nr_sequencia is not null) and
	(c01_w.ie_status = 'E') then
	update	intpd_fila_transmissao
	set	nr_seq_agrupador = c01_w.nr_seq_agrupador
	where	nr_sequencia = nr_seq_fila_p;

	commit;
end if;
*/
commit;

select	count(1)
into STRICT	qt_existe_w
from	intpd_log_recebimento
where	nr_seq_fila = nr_seq_fila_p;

if (qt_existe_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1026585);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ish_verificar_dados_envio ( nr_seq_fila_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE ish_verificar_dados_envio_atx ( nr_seq_fila_p bigint) FROM PUBLIC;

