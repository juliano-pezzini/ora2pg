-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_resp_status_tran_v60 ( nr_seq_controle_p bigint, nr_seq_pedido_status_p bigint, nr_versao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_origem_p INOUT bigint) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar a transação PTU de resposta a um pedido de status de transação, via SCS 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ X] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção:Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
cd_unimed_exec_w			smallint;
cd_unimed_benef_w		smallint;
nr_seq_execucao_w		bigint;
ie_tipo_cliente_w			varchar(255);
nr_seq_guia_w			bigint;
nr_seq_requisicao_w		bigint;
ie_tipo_identificador_w		bigint;
dt_validade_w			timestamp;
ds_observacao_w			varchar(4000);
nr_seq_origem_w			bigint;
ie_tipo_tabela_w			varchar(255);
cd_servico_w			bigint;
ds_servico_w			varchar(80);
qt_autorizado_w			bigint;
ie_autorizado_w			bigint;
nr_seq_resp_ped_status_w		bigint;
nr_seq_resp_auto_w		bigint;
nr_seq_resp_auto_serv_w		bigint;
cd_mens_espec_1_w		bigint;
cd_mens_espec_2_w		bigint;
cd_mens_espec_3_w		bigint;
cd_mens_espec_4_w		bigint;
cd_mens_espec_5_w		bigint;
nr_seq_res_serv_staus_w		bigint;
nr_seq_transacao_w		bigint;
ie_tipo_transacao_w		varchar(80);
nr_seq_req_proc_w			bigint;
nr_seq_req_mat_w			bigint;
nr_seq_guia_proc_w		bigint;
nr_seq_guia_mat_w			bigint;
ie_status_w			varchar(4);
qt_proc_mat_aprov_w		bigint;
cd_inconsistencia_w		varchar(10);
qt_registros_w    			bigint;
dt_nascimento_w			timestamp;
ie_sexo_w			varchar(1);
ie_tipo_anexo_w			varchar(1);
nr_seq_segurado_w		bigint;
qt_reg_resp_status_w		bigint;
qt_itens_auditoria_w		bigint;
ie_estagio_req_w		pls_requisicao.ie_estagio%type;
nr_seq_item_w			ptu_resposta_aut_servico.nr_seq_item%type;
sq_item_aux_w			integer := 0;

C01 CURSOR FOR 
	SELECT	ie_tipo_tabela, 
		cd_servico, 
		substr(ds_servico,1,80), 
		coalesce(nr_seq_req_proc,0), 
		coalesce(nr_seq_req_mat,0), 
		coalesce(nr_seq_guia_proc,0), 
		coalesce(nr_seq_guia_mat,0), 
		ie_tipo_anexo, 
		nr_seq_item 
	from	ptu_resposta_aut_servico 
	where	nr_seq_pedido	= nr_seq_resp_auto_w;

C02 CURSOR FOR 
	SELECT	substr(pls_obter_erro_intercambio(a.nr_seq_inconsistencia,'C'),1,10) 
	from	ptu_intercambio_consist a 
	where	((nr_seq_requisicao	= nr_seq_requisicao_w) 
	and	((nr_seq_procedimento	= nr_seq_req_proc_w	and (nr_seq_procedimento IS NOT NULL AND nr_seq_procedimento::text <> '')) or (nr_seq_req_proc_w	= 0 and coalesce(nr_seq_procedimento::text, '') = '')) 
	and	((nr_seq_material	= nr_seq_req_mat_w	and (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '')) or (nr_seq_req_mat_w 	= 0 and coalesce(nr_seq_material::text, '') = ''))) 
	
union
 
	SELECT	substr(pls_obter_erro_intercambio(y.nr_sequencia,'C'),1,10) 
	from	pls_acao_glosa_tiss	x, 
		ptu_inconsistencia	y, 
		pls_requisicao_glosa	z 
	where	x.nr_seq_inconsis_scs	= y.nr_sequencia 
	and	x.nr_seq_motivo_glosa	= z.nr_seq_motivo_glosa 
	and	((z.nr_seq_requisicao	= nr_seq_requisicao_w) 
	and	((z.nr_seq_req_proc	= nr_seq_req_proc_w	and (z.nr_seq_req_proc IS NOT NULL AND z.nr_seq_req_proc::text <> '')) or (nr_seq_req_proc_w	= 0 and coalesce(z.nr_seq_req_proc::text, '') = '')) 
	and	((z.nr_seq_req_mat	= nr_seq_req_mat_w	and (z.nr_seq_req_mat IS NOT NULL AND z.nr_seq_req_mat::text <> '')) or (nr_seq_req_mat_w 	= 0 and coalesce(z.nr_seq_req_mat::text, '') = ''))) 
	
union
 
	select	substr(pls_obter_erro_intercambio(v.nr_sequencia,'C'),1,10) 
	from	pls_ocorrencia_scs	u, 
		ptu_inconsistencia	v, 
		pls_ocorrencia_benef	w, 
		pls_requisicao		r 
	where	r.nr_sequencia		= w.nr_seq_requisicao 
	and	u.nr_seq_inconsis_scs	= v.nr_sequencia 
	and	u.nr_seq_ocorrencia	= w.nr_seq_ocorrencia 
	and	r.ie_tipo_intercambio	= 'E' 
	and		((w.nr_seq_requisicao	= nr_seq_requisicao_w) 
	and		((w.nr_seq_proc		= nr_seq_req_proc_w	and (w.nr_seq_proc IS NOT NULL AND w.nr_seq_proc::text <> '')) or (nr_seq_req_proc_w	= 0 and coalesce(w.nr_seq_proc::text, '') = '')) 
	and		((w.nr_seq_mat		= nr_seq_req_mat_w 	and (w.nr_seq_mat IS NOT NULL AND w.nr_seq_mat::text <> '')) or (nr_seq_req_mat_w 	= 0 and coalesce(w.nr_seq_mat::text, '') = '')));
	
C03 CURSOR FOR 
	SELECT	substr(pls_obter_erro_intercambio(a.nr_seq_inconsistencia,'C'),1,10) 
	from	ptu_intercambio_consist a 
	where	((nr_seq_guia		= nr_seq_guia_w) 
	and	((nr_seq_procedimento	= nr_seq_guia_proc_w	and (nr_seq_procedimento IS NOT NULL AND nr_seq_procedimento::text <> '')) or (nr_seq_guia_proc_w	= 0 and coalesce(nr_seq_procedimento::text, '') = '')) 
	and	((nr_seq_material		= nr_seq_guia_mat_w	and (nr_seq_material IS NOT NULL AND nr_seq_material::text <> '')) or (nr_seq_guia_mat_w	= 0 and coalesce(nr_seq_material::text, '') = ''))) 
	
union
 
	SELECT	substr(pls_obter_erro_intercambio(y.nr_sequencia,'C'),1,10) 
	from	pls_acao_glosa_tiss	x, 
		ptu_inconsistencia	y, 
		pls_guia_glosa		z 
	where	x.nr_seq_inconsis_scs	= y.nr_sequencia 
	and	x.nr_seq_motivo_glosa	= z.nr_seq_motivo_glosa 
	and	((z.nr_seq_guia		= nr_seq_guia_w) 
	and	((z.nr_seq_guia_proc	= nr_seq_guia_proc_w	and (z.nr_seq_guia_proc IS NOT NULL AND z.nr_seq_guia_proc::text <> '')) or (nr_seq_guia_proc_w	= 0 and coalesce(z.nr_seq_guia_proc::text, '') = '')) 
	and	((z.nr_seq_guia_mat		= nr_seq_guia_mat_w	and (z.nr_seq_guia_mat IS NOT NULL AND z.nr_seq_guia_mat::text <> '')) or (nr_seq_guia_mat_w	= 0 and coalesce(z.nr_seq_guia_mat::text, '') = ''))) 
	
union
 
	select	substr(pls_obter_erro_intercambio(v.nr_sequencia,'C'),1,10) 
	from	pls_ocorrencia_scs	u, 
		ptu_inconsistencia	v, 
		pls_ocorrencia_benef	w, 
		pls_guia_plano		r 
	where	r.nr_sequencia		= w.nr_seq_guia_plano 
	and	u.nr_seq_inconsis_scs	= v.nr_sequencia 
	and	u.nr_seq_ocorrencia	= w.nr_seq_ocorrencia 
	and	r.ie_tipo_intercambio	= 'E' 
	and	((w.nr_seq_guia_plano	= nr_seq_guia_w) 
	and	((w.nr_seq_proc		= nr_seq_guia_proc_w	and (w.nr_seq_proc IS NOT NULL AND w.nr_seq_proc::text <> '')) or (nr_seq_guia_proc_w	= 0 and coalesce(w.nr_seq_proc::text, '') = '')) 
	and	((w.nr_seq_mat		= nr_seq_guia_mat_w 	and (w.nr_seq_mat IS NOT NULL AND w.nr_seq_mat::text <> '')) or (nr_seq_guia_mat_w 	= 0 and coalesce(w.nr_seq_mat::text, '') = '')));
	

BEGIN 
 
begin 
	select	cd_unimed_executora, 
		cd_unimed_beneficiario, 
		ie_tipo_cliente, 
		nr_seq_guia, 
		nr_seq_requisicao 
	into STRICT	cd_unimed_exec_w, 
		cd_unimed_benef_w, 
		ie_tipo_cliente_w, 
		nr_seq_guia_w, 
		nr_seq_requisicao_w 
	from	ptu_pedido_compl_aut 
	where	nr_sequencia	= nr_seq_controle_p;
exception 
when others then 
	begin 
		select	cd_unimed_executora, 
			cd_unimed_beneficiario, 
			ie_tipo_cliente, 
			nr_seq_guia, 
			nr_seq_requisicao 
		into STRICT	cd_unimed_exec_w, 
			cd_unimed_benef_w, 
			ie_tipo_cliente_w, 
			nr_seq_guia_w, 
			nr_seq_requisicao_w 
		from	ptu_pedido_autorizacao 
		where	nr_sequencia	= nr_seq_controle_p;
	exception 
	when others then 
		nr_seq_guia_w		:= null;
		nr_seq_requisicao_w	:= null;
	end;
end;
	 
if (coalesce(nr_seq_guia_w,0)	<> 0) then 
	ie_tipo_identificador_w	:= 1;
	nr_seq_transacao_w	:= nr_seq_guia_w;
	ie_tipo_transacao_w	:= 'G';
	 
	select	coalesce(dt_validade_senha,clock_timestamp()), 
		substr(replace(replace(ds_observacao,chr(13),''),chr(10),''),1,4000), 
		nr_seq_segurado 
	into STRICT	dt_validade_w, 
		ds_observacao_w, 
		nr_seq_segurado_w 
	from	pls_guia_plano 
	where	nr_sequencia	= nr_seq_guia_w;
	 
	begin 
		select	nr_transacao_uni_exec 
		into STRICT	nr_seq_execucao_w 
		from	ptu_pedido_status 
		where	nr_sequencia	= nr_seq_pedido_status_p;
	exception 
	when others then 
		nr_seq_execucao_w	:= 0;
	end;
 
	CALL pls_guia_gravar_historico(nr_seq_guia_w,2,'Enviada a resposta de status de transação para a Unimed '||cd_unimed_exec_w,'',nm_usuario_p);
elsif (coalesce(nr_seq_requisicao_w,0)	<> 0) then 
	ie_tipo_identificador_w	:= 1;
	nr_seq_transacao_w	:= nr_seq_requisicao_w;
	ie_tipo_transacao_w	:= 'R';
	 
	select	coalesce(dt_validade_senha,clock_timestamp()), 
		substr(replace(replace(ds_observacao,chr(13),''),chr(10),''),1,4000), 
		nr_seq_segurado, 
		ie_estagio 
	into STRICT	dt_validade_w, 
		ds_observacao_w, 
		nr_seq_segurado_w, 
		ie_estagio_req_w 
	from	pls_requisicao 
	where	nr_sequencia	= nr_seq_requisicao_w;
	 
	begin 
		select	nr_transacao_uni_exec 
		into STRICT	nr_seq_execucao_w 
		from	ptu_pedido_status 
		where	nr_sequencia	= nr_seq_pedido_status_p;
	exception 
	when others then 
		nr_seq_execucao_w	:= 0;
	end;
	 
	CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L','Enviada a resposta de status de transação para a Unimed '||cd_unimed_exec_w,null,nm_usuario_p);
else 
	ie_tipo_identificador_w	:= 2;
	 
	begin 
		select	cd_unimed_beneficiario, 
			cd_unimed_executora, 
			ie_tipo_cliente, 
			nr_transacao_uni_exec 
		into STRICT	cd_unimed_benef_w, 
			cd_unimed_exec_w, 
			ie_tipo_cliente_w, 
			nr_seq_execucao_w 
		from	ptu_pedido_status 
		where	nr_sequencia	= nr_seq_pedido_status_p;
	exception 
	when others then 
		cd_unimed_benef_w	:= null;
		cd_unimed_exec_w		:= null;
		ie_tipo_cliente_w		:= null;
		nr_seq_execucao_w	:= null;
	end;
end if;
 
begin 
	ie_sexo_w		:= substr(pls_obter_dados_segurado(nr_seq_segurado_w,'SXS'),1,1);
	dt_nascimento_w	:= to_date(substr(pls_obter_dados_segurado(nr_seq_segurado_w,'NAS'),1,12),'dd/mm/rrrr');
exception 
when others then 
	ie_sexo_w		:= null;
	dt_nascimento_w := null;
end;
 
begin 
	select	nr_sequencia 
	into STRICT	nr_seq_origem_w 
	from	ptu_controle_execucao 
	where	nr_seq_pedido_compl	= nr_seq_controle_p;
exception 
when others then 
	begin 
		select	nr_sequencia 
		into STRICT	nr_seq_origem_w 
		from	ptu_controle_execucao 
		where	nr_seq_pedido_aut	= nr_seq_controle_p;
	exception 
	when others then 
		nr_seq_origem_w	:= 0;
	end;
end;
 
if (coalesce(nr_seq_origem_w,0)	= 0) then 
	select	max(nr_seq_origem) 
	into STRICT	nr_seq_origem_w 
	from	ptu_resposta_autorizacao 
	where	nr_seq_requisicao	= nr_seq_requisicao_w;
	 
	if (coalesce(nr_seq_origem_w,0)	= 0) then 
		select	nextval('ptu_controle_execucao_seq') 
		into STRICT	nr_seq_origem_w 
		;
	end if;
end if;
 
select	count(1) 
into STRICT	qt_reg_resp_status_w 
from	ptu_resp_pedido_status 
where	nr_seq_origem	= nr_seq_origem_w 
and	ie_enviado	= 'N';
 
if (qt_reg_resp_status_w	> 0) then 
	update	ptu_resp_pedido_status 
	set	ie_enviado	= 'S' 
	where	nr_seq_origem	= nr_seq_origem_w 
	and	ie_enviado	= 'N';
end if;
 
select	nextval('ptu_resp_pedido_status_seq') 
into STRICT	nr_seq_resp_ped_status_w
;
 
select	count(1) 
into STRICT  	qt_registros_w 
from	ptu_resp_pedido_status 
where	nr_seq_origem = nr_seq_origem_w;
 
insert	into ptu_resp_pedido_status(nr_sequencia, cd_transacao, cd_unimed_beneficiario, 
	 cd_unimed_executora, ds_observacao, dt_atualizacao, 
	 dt_atualizacao_nrec, dt_validade, ie_tipo_cliente, 
	 ie_tipo_identificador, nm_usuario, nm_usuario_nrec, 
	 nr_seq_pedido_status, nr_seq_origem, nr_seq_execucao, 
	 nr_seq_guia, nr_seq_requisicao, nr_versao, 
	 dt_nascimento, ie_sexo, ie_enviado) 
values (nr_seq_resp_ped_status_w, '00361', cd_unimed_benef_w, 
	 cd_unimed_exec_w, ds_observacao_w, clock_timestamp(), 
	 clock_timestamp(), dt_validade_w, ie_tipo_cliente_w, 
	 ie_tipo_identificador_w, nm_usuario_p, nm_usuario_p, 
	 nr_seq_pedido_status_p, nr_seq_origem_w, nr_seq_execucao_w, 
	 nr_seq_guia_w, nr_seq_requisicao_w, nr_versao_p, 
	 dt_nascimento_w, ie_sexo_w, 'N');
 
select	max(nr_sequencia) 
into STRICT	nr_seq_resp_auto_w 
from	ptu_resposta_autorizacao 
where	nr_seq_origem		= nr_seq_origem_w 
and	cd_unimed_beneficiario	= cd_unimed_benef_w;
 
open C01;
loop 
fetch C01 into 
	ie_tipo_tabela_w, 
	cd_servico_w, 
	ds_servico_w, 
	nr_seq_req_proc_w, 
	nr_seq_req_mat_w, 
	nr_seq_guia_proc_w, 
	nr_seq_guia_mat_w, 
	ie_tipo_anexo_w, 
	nr_seq_item_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	select	nextval('ptu_resp_servico_status_seq') 
	into STRICT	nr_seq_res_serv_staus_w 
	;
	 
	if (coalesce(nr_seq_item_w::text, '') = '') then 
		sq_item_aux_w	:= sq_item_aux_w + 1;
	end if;	
	 
	if (coalesce(nr_seq_req_proc_w,0)	<> 0) then 
		if (ie_estagio_req_w	= 4) then 
			ie_status_w		:= 'A';
			qt_proc_mat_aprov_w	:= 0;
		else 
			select	ie_status, 
				qt_procedimento 
			into STRICT	ie_status_w, 
				qt_proc_mat_aprov_w 
			from	pls_requisicao_proc a 
			where	nr_sequencia	= nr_seq_req_proc_w;
		end if;
	elsif (coalesce(nr_seq_req_mat_w,0)	<> 0) then 
		if (ie_estagio_req_w	= 4) then 
			ie_status_w		:= 'A';
			qt_proc_mat_aprov_w	:= 0;
		else		 
			select	ie_status, 
				qt_material 
			into STRICT	ie_status_w, 
				qt_proc_mat_aprov_w 
			from	pls_requisicao_mat 
			where	nr_sequencia	= nr_seq_req_mat_w;
		end if;
	elsif (coalesce(nr_seq_guia_proc_w,0)	<> 0)	then 
		select	ie_status, 
				qt_autorizada 
		into STRICT	ie_status_w, 
				qt_proc_mat_aprov_w 
		from	pls_guia_plano_proc 
		where	nr_sequencia	= nr_seq_guia_proc_w;
	elsif (coalesce(nr_seq_guia_mat_w,0)	<> 0) then 
		select	ie_status, 
				qt_autorizada 
		into STRICT	ie_status_w, 
				qt_proc_mat_aprov_w 
		from	pls_guia_plano_mat 
		where	nr_sequencia	= nr_seq_guia_mat_w;
	end if;
	 
	if (ie_status_w	in ('G','N','K','M')) then 
		ie_autorizado_w	:= 1;
		qt_autorizado_w	:= 0;
	elsif (ie_status_w	in ('S','P','L')) then 
		ie_autorizado_w	:= 2;
		qt_autorizado_w	:= qt_proc_mat_aprov_w;
	elsif (ie_status_w	= 'A') then 
		ie_autorizado_w	:= 4;
		qt_autorizado_w	:= 0;
	elsif (ie_status_w	in ('C','D')) then 
		ie_autorizado_w	:= 5;
		qt_autorizado_w	:= 0;
	end if;
	 
	if ((ie_status_w = 'A') and (pls_obter_regra_aud_interc(nr_seq_guia_w, nr_seq_requisicao_w, nm_usuario_p) = 'S')) then 
		ie_autorizado_w := 3;
	end if;	
	 
	insert	into ptu_resp_servico_status(nr_sequencia, cd_servico, ds_servico, 
		dt_atualizacao, dt_atualizacao_nrec, ie_autorizado, 
		ie_tipo_tabela, nm_usuario, nm_usuario_nrec, 
		nr_seq_resp_ped_status, qt_autorizado, ie_tipo_anexo, 
		nr_seq_item, nr_seq_guia_proc, nr_seq_guia_mat, 
		nr_seq_req_proc, nr_seq_req_mat) 
	values (nr_seq_res_serv_staus_w, cd_servico_w, ds_servico_w, 
		clock_timestamp(), clock_timestamp(), ie_autorizado_w, 
		ie_tipo_tabela_w, nm_usuario_p, nm_usuario_p, 
		nr_seq_resp_ped_status_w, qt_autorizado_w, ie_tipo_anexo_w, 
		coalesce(nr_seq_item_w,sq_item_aux_w), nr_seq_guia_proc_w, nr_seq_guia_mat_w, 
		nr_seq_req_proc_w, nr_seq_req_mat_w);
	 
	if (ie_autorizado_w	= 1) then 
		if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then 
			open C02;
			loop 
			fetch C02 into	 
				cd_inconsistencia_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				CALL ptu_inserir_inconsistencia(	null,null,cd_inconsistencia_w, 
								'',cd_estabelecimento_p,nr_seq_transacao_w, 
								ie_tipo_transacao_w,'00361',nr_seq_res_serv_staus_w, 
								null,null,nm_usuario_p);
				end;
			end loop;
			close C02;
		elsif (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then 
			open C03;
			loop 
			fetch C03 into	 
				cd_inconsistencia_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				CALL ptu_inserir_inconsistencia(	null,null,cd_inconsistencia_w, 
								'',cd_estabelecimento_p,nr_seq_transacao_w, 
								ie_tipo_transacao_w,'00361',nr_seq_res_serv_staus_w, 
								null,null,nm_usuario_p);
				end;
			end loop;
			close C03;
		end if;
	end if;
	end;
end loop;
close C01;
 
select	count(1) 
into STRICT	qt_itens_auditoria_w 
from	ptu_resp_servico_status 
where	nr_seq_resp_ped_status	= nr_seq_resp_ped_status_w 
and	ie_autorizado		= 4;
 
if	(qt_itens_auditoria_w > 0 AND nr_seq_resp_ped_status_w IS NOT NULL AND nr_seq_resp_ped_status_w::text <> '') then 
	update	ptu_resp_servico_status 
	set	ie_autorizado			= 4 
	where	nr_seq_resp_ped_status	= nr_seq_resp_ped_status_w;
end if;
 
nr_seq_origem_p	:= nr_seq_origem_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_resp_status_tran_v60 ( nr_seq_controle_p bigint, nr_seq_pedido_status_p bigint, nr_versao_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_origem_p INOUT bigint) FROM PUBLIC;

