-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_material_opm ( nr_prescricao_p bigint, nm_usuario_p text, nr_seq_opm_p text) AS $body$
DECLARE




cd_material_w			prescr_opm.cd_material%type;
nr_seq_opm_w			prescr_opm.nr_sequencia%type;
cd_local_setor_w			setor_atendimento.cd_local_estoque%type;
nr_sequencia_w 			material_atend_paciente.nr_sequencia%type;
cd_setor_atendimento_w		prescr_medica.cd_setor_atendimento%type;
nr_atendimento_w			prescr_medica.nr_atendimento%type;
nr_seq_atepacu_w			atend_paciente_unidade.nr_seq_interno%type;
dt_entrada_unidade_w		atend_paciente_unidade.dt_entrada_unidade%type;
cd_convenio_w 			material_atend_paciente.cd_convenio%type;
cd_categoria_w 			material_atend_paciente.cd_categoria%type;
cd_senha_w 			material_atend_paciente.cd_senha%type;
nr_doc_convenio_w 		material_atend_paciente.nr_doc_convenio%type;
cd_motivo_param_w		smallint;
cd_grupo_material_w		smallint;
cd_subgrupo_w			smallint;
cd_classe_material_w		integer;
ie_atualiza_estoque_w 		varchar(1);
nr_seq_tipo_baixa_w		material_atend_paciente.nr_seq_tipo_baixa%type;
nr_ordem_opm_w       		prescr_opm.nr_ordem_opm%type;
cd_estabelecimento_w 		prescr_medica.cd_estabelecimento%type;
ie_baixa_parcial_w 			varchar(1);
nr_lote_fornecedor_w		material_atend_paciente.nr_seq_lote_fornec%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		c.cd_material,
		b.cd_setor_atendimento,
		b.nr_atendimento,
         	c.nr_ordem_opm,
         	b.cd_estabelecimento,
		substr(obter_lote_fornecedor_opm(obter_lote_op_opm(c.nr_ordem_opm),c.nr_ordem_opm),1,15) nr_lote_fornecedor
	from	prescr_medica b,
		prescr_opm c
	where	b.nr_prescricao = c.nr_prescricao
	and 	b.nr_prescricao	= nr_prescricao_p
	and 	coalesce(c.dt_baixa::text, '') = ''
	and 	coalesce(c.cd_motivo_baixa,0) = 0
	and	obter_se_mat_cobra_paciente(c.cd_material) = 'S';

c02 CURSOR FOR
	SELECT	nr_sequencia,
		c.cd_material,
		b.cd_setor_atendimento,
		b.nr_atendimento,
         	c.nr_ordem_opm,
        	b.cd_estabelecimento,
		substr(obter_lote_fornecedor_opm(obter_lote_op_opm(nr_seq_opm_p),nr_seq_opm_p),1,15) nr_lote_fornecedor
	from	prescr_medica b,
		prescr_opm c
	where	b.nr_prescricao = c.nr_prescricao
	and 	b.nr_prescricao = nr_prescricao_p
	and 	coalesce(c.dt_baixa::text, '') = ''
	and 	coalesce(c.cd_motivo_baixa,0) = 0
	and	obter_se_mat_cobra_paciente(c.cd_material) = 'S'
	and	obter_se_contido(c.nr_ordem_opm,nr_seq_opm_p) = 'S';


BEGIN

cd_motivo_param_w := obter_param_usuario(36, 21, obter_perfil_ativo, nm_usuario_p, 0, cd_motivo_param_w);
ie_baixa_parcial_w := obter_param_usuario(10025, 32, obter_perfil_ativo, nm_usuario_p, 0, ie_baixa_parcial_w);

select 	max(nr_sequencia)
into STRICT	nr_seq_tipo_baixa_w
from 	tipo_baixa_prescricao
where 	cd_tipo_baixa = cd_motivo_param_w
and 	ie_prescricao_devolucao = 'P';

if (ie_baixa_parcial_w = 'N') then

	open C01;
	loop
	fetch C01 into
		nr_seq_opm_w,
		cd_material_w,
		cd_setor_atendimento_w,
		nr_atendimento_w,
	   	nr_ordem_opm_w,
	   	cd_estabelecimento_w,
		nr_lote_fornecedor_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select 	max(obter_convenio_atendimento(nr_atendimento_w)),
			max(substr(obter_dados_categ_conv(nr_atendimento_w,'CA'),1,10)),
			max(substr(obter_dados_categ_conv(nr_atendimento_w,'S'),1,20)),
			max(substr(obter_dados_categ_conv(nr_atendimento_w,'G'),1,20))
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_senha_w,
			nr_doc_convenio_w
		;

		select	cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material
		into STRICT	cd_grupo_material_w,
			cd_subgrupo_w,
			cd_classe_material_w
		from	estrutura_material_v
		where 	cd_material = cd_material_w;

		select	max(nr_seq_interno),
			max(dt_entrada_unidade)
		into STRICT	nr_seq_atepacu_w,
			dt_entrada_unidade_w
		from	atend_paciente_unidade
		where	nr_atendimento = nr_atendimento_w
		and 	cd_setor_atendimento = cd_setor_atendimento_w;

		select 	max(cd_local_estoque)
		into STRICT	cd_local_setor_w
		from 	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atendimento_w;

		--Verifica se deve baixar estoque ou não
		select	coalesce(max(ie_atualiza_estoque),'S')
		into STRICT 	ie_atualiza_estoque_w
		from 	tipo_baixa_prescricao
		where 	cd_tipo_baixa = cd_motivo_param_w;

		if (ie_atualiza_estoque_w = 'N') then
			cd_local_setor_w := null;
		end if;


		select 	nextval('material_atend_paciente_seq')
		into STRICT	nr_sequencia_w
		;

		insert into material_atend_paciente(
				nr_sequencia,
				cd_acao,
				cd_material,
				cd_setor_atendimento,
				cd_unidade_medida,
				dt_atendimento,
				dt_atualizacao,
				dt_entrada_unidade,
				nm_usuario,
				nr_atendimento,
				nr_seq_atepacu,
				qt_material,
				nr_prescricao,
				ds_observacao,
				cd_local_estoque,
				cd_convenio,
				cd_categoria,
				cd_material_prescricao,
				cd_material_exec,
				cd_senha,
				nr_doc_convenio,
				nr_seq_tipo_baixa,
				nr_seq_lote_fornec)
		values (
				nr_sequencia_w,
				'1',
				cd_material_w,
				cd_setor_atendimento_w,
				'un',
				clock_timestamp(),
				clock_timestamp(),
				dt_entrada_unidade_w,
				nm_usuario_p,
				nr_atendimento_w,
				nr_seq_atepacu_w,
				1,
				substr(nr_prescricao_p,1,10),
				--substr('Função: Gestão de produção OPM - Seq material=' || nr_seq_opm_w,1,255),
				substr(wheb_mensagem_pck.get_texto(838688,'CD_PERFIL=' || obter_perfil_ativo || ';CD_FUNCAO=10025'),1,255),
				cd_local_setor_w,
				cd_convenio_w,
				cd_categoria_w,
				cd_material_w,
				cd_material_w,
				cd_senha_w,
				nr_doc_convenio_w,
				nr_seq_tipo_baixa_w,
				nr_lote_fornecedor_w);

		CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

		update 	prescr_opm
		set 	dt_baixa = clock_timestamp(),
			cd_motivo_baixa = coalesce(cd_motivo_param_w,1)
		where	nr_sequencia = nr_seq_opm_w;

		CALL gerar_lanc_automatico_mat(nr_atendimento_w,cd_local_setor_w,132,nm_usuario_p, nr_sequencia_w,null,null);
		CALL wheb_usuario_pck.set_ie_commit('N');
	   if (coalesce(nr_ordem_opm_w,0) > 0) then
		  CALL gravar_status_op_opm(nr_ordem_opm_w,'AAP',null,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento);
	   end if;
	   CALL wheb_usuario_pck.set_ie_commit('S');
		end;
	end loop;
	close C01;

elsif (ie_baixa_parcial_w = 'S') then

	open C02;
	loop
	fetch C02 into
		nr_seq_opm_w,
		cd_material_w,
		cd_setor_atendimento_w,
		nr_atendimento_w,
	  	nr_ordem_opm_w,
	  	cd_estabelecimento_w,
		nr_lote_fornecedor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select 	max(obter_convenio_atendimento(nr_atendimento_w)),
			max(substr(obter_dados_categ_conv(nr_atendimento_w,'CA'),1,10)),
			max(substr(obter_dados_categ_conv(nr_atendimento_w,'S'),1,20)),
			max(substr(obter_dados_categ_conv(nr_atendimento_w,'G'),1,20))
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_senha_w,
			nr_doc_convenio_w
		;

		select	cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material
		into STRICT	cd_grupo_material_w,
			cd_subgrupo_w,
			cd_classe_material_w
		from	estrutura_material_v
		where 	cd_material = cd_material_w;

		select	max(nr_seq_interno),
			max(dt_entrada_unidade)
		into STRICT	nr_seq_atepacu_w,
			dt_entrada_unidade_w
		from	atend_paciente_unidade
		where	nr_atendimento = nr_atendimento_w
		and 	cd_setor_atendimento  = cd_setor_atendimento_w;

		/*Busca o local de estoque da regra lote produção OPM*/

		select	coalesce(max(cd_local_estoque),0)
		into STRICT	cd_local_setor_w
		from	regra_producao_opm
		where (coalesce(cd_material::text, '') = '' or cd_material = cd_material_w)
		and (coalesce(cd_classe_material::text, '') = '' or cd_classe_material = cd_classe_material_w)
		and (coalesce(cd_grupo_material::text, '') = '' or cd_grupo_material = cd_grupo_material_w)
		and (coalesce(cd_subgrupo_material::text, '') = '' or cd_subgrupo_material = cd_subgrupo_w)
	   	and (cd_estabelecimento = cd_estabelecimento_w);



		if (cd_local_setor_w = 0)then
			select 	max(cd_local_estoque)
			into STRICT	cd_local_setor_w
			from 	setor_atendimento
			where	cd_setor_atendimento = cd_setor_atendimento_w;
		end if;

		--Verifica se deve baixar estoque ou não
		select	coalesce(max(ie_atualiza_estoque),'S')
		into STRICT 	ie_atualiza_estoque_w
		from 	tipo_baixa_prescricao
		where 	cd_tipo_baixa = cd_motivo_param_w;

		if (ie_atualiza_estoque_w = 'N') then
			cd_local_setor_w := null;
		end if;


		select 	nextval('material_atend_paciente_seq')
		into STRICT	nr_sequencia_w
		;


		insert into material_atend_paciente(
				nr_sequencia,
				cd_acao,
				cd_material,
				cd_setor_atendimento,
				cd_unidade_medida,
				dt_atendimento,
				dt_atualizacao,
				dt_entrada_unidade,
				nm_usuario,
				nr_atendimento,
				nr_seq_atepacu,
				qt_material,
				nr_prescricao,
				ds_observacao,
				cd_local_estoque,
				cd_convenio,
				cd_categoria,
				cd_material_prescricao,
				cd_material_exec,
				cd_senha,
				nr_doc_convenio,
				nr_seq_tipo_baixa,
				nr_seq_lote_fornec)
		values (
				nr_sequencia_w,
				'1',
				cd_material_w,
				cd_setor_atendimento_w,
				'un',
				clock_timestamp(),
				clock_timestamp(),
				dt_entrada_unidade_w,
				nm_usuario_p,
				nr_atendimento_w,
				nr_seq_atepacu_w,
				1,
				substr(nr_prescricao_p,1,10),
				--substr('Função: Gestão de produção OPM - Seq material=' || nr_seq_opm_w,1,255),
				substr(wheb_mensagem_pck.get_texto(838688,'CD_PERFIL=' || obter_perfil_ativo || ';CD_FUNCAO=10025'),1,255),
				cd_local_setor_w,
				cd_convenio_w,
				cd_categoria_w,
				cd_material_w,
				cd_material_w,
				cd_senha_w,
				nr_doc_convenio_w,
				nr_seq_tipo_baixa_w,
				nr_lote_fornecedor_w);

		CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

		update 	prescr_opm
		set 	dt_baixa = clock_timestamp(),
			cd_motivo_baixa = coalesce(cd_motivo_param_w,1)
		where	nr_sequencia = nr_seq_opm_w;

		CALL gerar_lanc_automatico_mat(nr_atendimento_w,cd_local_setor_w,132,nm_usuario_p, nr_sequencia_w,null,null);
		CALL wheb_usuario_pck.set_ie_commit('N');
	   if (coalesce(nr_ordem_opm_w,0) > 0) then
		  CALL gravar_status_op_opm(nr_ordem_opm_w,'AAP',null,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento);
	   end if;
	   CALL wheb_usuario_pck.set_ie_commit('S');
		end;
	end loop;
	close C02;

end if;

commit;

if (coalesce(cd_material_w::text, '') = '')then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(256485);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_material_opm ( nr_prescricao_p bigint, nm_usuario_p text, nr_seq_opm_p text) FROM PUBLIC;

