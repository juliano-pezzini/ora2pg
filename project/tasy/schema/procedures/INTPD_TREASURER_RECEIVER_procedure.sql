-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_treasurer_receiver (nr_sequencia_p bigint, xml_p xml) AS $body$
DECLARE




_ora2pg_r RECORD;
ie_conversao_w			intpd_eventos_sistema.ie_conversao%type;
nr_seq_projeto_xml_w		intpd_eventos_sistema.nr_seq_projeto_xml%type;
nr_seq_sistema_w		intpd_eventos_sistema.nr_seq_sistema%type;
reg_integracao_w		gerar_int_padrao.reg_integracao_conv;
nr_seq_regra_w			conversao_meio_externo.nr_seq_regra%type;
atendimento_paciente_w		atendimento_paciente%rowtype;
ds_erro_w			varchar(4000);
ie_sistema_externo_w		varchar(15);
ie_erro_w 			varchar(1) := 'N';
ie_exception_w			varchar(1) := 'N';
i				integer;
qt_atendimento_w		bigint;

c01 CURSOR FOR
SELECT	*	
from	xmltable('/STRUCTURE/EPASE' passing xml_p columns
	ie_action			varchar(40)	path	'IE_ACTION',
	nr_atendimento			bigint	path	'NR_ENCOUNTER',
	dt_alta_tesouraria		varchar(40)	path	'DT_PAGO');

c01_w	c01%rowtype;

BEGIN

update	intpd_fila_transmissao
set	ie_status = 'R'
where	nr_sequencia = nr_sequencia_p;

commit;

begin
select	coalesce(b.ie_conversao,'I'),
	nr_seq_sistema,
	nr_seq_projeto_xml,
	nr_seq_regra_conv
into STRICT	ie_conversao_w,
	nr_seq_sistema_w,
	nr_seq_projeto_xml_w,
	nr_seq_regra_w
from	intpd_fila_transmissao a,
	intpd_eventos_sistema b
where	a.nr_seq_evento_sistema = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;

ie_sistema_externo_w	:=	nr_seq_sistema_w;
reg_integracao_w.nr_seq_fila_transmissao	:=	nr_sequencia_p;
reg_integracao_w.ie_envio_recebe		:=	'R';
reg_integracao_w.ie_sistema_externo		:=	ie_sistema_externo_w;
reg_integracao_w.ie_conversao			:=	ie_conversao_w;
reg_integracao_w.nr_seq_projeto_xml		:=	nr_seq_projeto_xml_w;
reg_integracao_w.nr_seq_regra_conversao		:=	nr_seq_regra_w;
reg_integracao_w.intpd_log_receb.delete;
reg_integracao_w.qt_reg_log			:=	0;

open c01;
loop
fetch c01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_erro_w				:= 	'N';
	reg_integracao_w.nm_elemento		:=	'EPASE';

	if (coalesce(upper(c01_w.ie_action),'UPDATE') = 'UPDATE') then
	

		select 	count(*)
		into STRICT	qt_atendimento_w
		from 	atendimento_paciente
		where 	nr_atendimento = c01_w.nr_atendimento;

		if (qt_atendimento_w = 0) then				
			/*Não foi encontrado nenhum atendimento com este número.*/

			intpd_gravar_log_recebimento(nr_sequencia_p,wheb_mensagem_pck.get_texto(1023740),'INTPDTASY','0004');
			ie_erro_w := 'S';				
		end if;
	end if;

	if (ie_erro_w = 'N') then
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'NR_ATENDIMENTO', c01_w.nr_atendimento, 'N', atendimento_paciente_w.nr_atendimento) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; atendimento_paciente_w.nr_atendimento := _ora2pg_r.ds_valor_retorno_p;
		SELECT * FROM intpd_processar_atributo(reg_integracao_w, 'DT_PAGO', c01_w.dt_alta_tesouraria, 'N', atendimento_paciente_w.dt_alta_tesouraria) INTO STRICT _ora2pg_r;
 reg_integracao_w := _ora2pg_r.reg_integracao_p; atendimento_paciente_w.dt_alta_tesouraria := _ora2pg_r.ds_valor_retorno_p;

		if (atendimento_paciente_w.dt_alta_tesouraria IS NOT NULL AND atendimento_paciente_w.dt_alta_tesouraria::text <> '') then		
			update	atendimento_paciente
			set	dt_alta_tesouraria = pkg_date_utils.get_dateTime(atendimento_paciente_w.dt_alta_tesouraria, atendimento_paciente_w.dt_alta_tesouraria)
			where	nr_atendimento = atendimento_paciente_w.nr_atendimento;
			
			insert into atend_hist_saida_real(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_atendimento,
				ds_historico,
				dt_alta)
			values (	nextval('atend_hist_saida_real_seq'),
				clock_timestamp(),
				'INTPDTASY',
				clock_timestamp(),
				'INTPDTASY',
				atendimento_paciente_w.nr_atendimento,
				obter_desc_expressao(10652295), /*Alta tesouraria*/
				pkg_date_utils.get_dateTime(atendimento_paciente_w.dt_alta_tesouraria, atendimento_paciente_w.dt_alta_tesouraria));
			
		else
			update	atendimento_paciente
			set	dt_alta_tesouraria  = NULL
			where	nr_atendimento = atendimento_paciente_w.nr_atendimento;	

	 		insert into atend_hist_saida_real(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_atendimento,
				ds_historico,
				dt_alta)
			values (	nextval('atend_hist_saida_real_seq'),
				clock_timestamp(),
				'INTPDTASY',
				clock_timestamp(),
				'INTPDTASY',
				atendimento_paciente_w.nr_atendimento,
				obter_desc_expressao(944420), /*Estorno da alta tesouraria*/
				null);
		end if;
	end if;
	end;
end loop;
close c01;
exception
when others then
	begin
	ds_erro_w := substr(dbms_utility.format_error_backtrace || chr(13) || chr(10) || sqlerrm,1,4000);
		
	rollback;

	update	intpd_fila_transmissao
	set	ie_status = 'E',
		cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
		ds_log = ds_erro_w
	where	nr_sequencia = nr_sequencia_p;

	ie_exception_w := 'S';

	end;
end;

if (ie_exception_w = 'N') then
	if	((reg_integracao_w.qt_reg_log > 0) or (ie_erro_w = 'S')) then

		begin
		rollback;

		update	intpd_fila_transmissao
		set	ie_status		= 'E',
			cd_default_message 	= CASE WHEN ds_erro_w = NULL THEN null  ELSE '0005' END ,
			ds_log			= ds_erro_w
		where	nr_sequencia		= nr_sequencia_p;
	

		for i in 0..reg_integracao_w.qt_reg_log-1 loop
			intpd_gravar_log_recebimento(nr_sequencia_p,reg_integracao_w.intpd_log_receb[i].ds_log,'INTPDTASY',reg_integracao_w.intpd_log_receb[i].cd_default_message);
		end loop;		
		end;
	else
		update	intpd_fila_transmissao
		set	ie_status 	 	= 'S',
			cd_default_message 	= '0000',
			nr_seq_documento	= c01_w.nr_atendimento
		where	nr_sequencia	 	= nr_sequencia_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_treasurer_receiver (nr_sequencia_p bigint, xml_p xml) FROM PUBLIC;

