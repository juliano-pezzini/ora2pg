-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_proposta_simul_col ( nr_seq_cliente_p bigint, nr_seq_simulacao_p bigint, cd_cgc_estipulante_p text, cd_cgc_pagador_p text, nr_dia_vencimento_p bigint, nr_seq_cobrancao_p text, nr_endereco_corresp_p text, cd_banco_p text, cd_agencia_p text, ie_agencia_dig_p text, cd_conta_p text, ie_conta_dig_p text, ie_gerou_propostas_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_classif_itens_p bigint, dt_prev_entrega_contrato_p pls_proposta_adesao.dt_prev_entrega_contrato%type) AS $body$
DECLARE


nr_seq_canal_venda_w		bigint;
nr_seq_vendedor_vinculado_w	bigint;
dt_inicio_vigencia_w		timestamp;
ie_tipo_contratacao_w		varchar(10);
cd_condicao_pagamento_w		bigint;
dt_dia_vencimento_w		smallint;
nr_seq_proposta_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_tabela_nova_w		bigint;
ie_gerou_proposta_w		varchar(10);
nr_seq_origem_agente_w		bigint;
nr_seq_agente_motivador_w	bigint;
ie_proposta_unica_simul_w	pls_parametros.ie_proposta_unica_simul%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_simul_perfil,
		(	SELECT	substr(ds_perfil_simulacao,1,255)
			from	pls_simul_regra_perfil
			where	nr_sequencia	= a.nr_seq_regra_perfil) ds_perfil
	from	pls_simulacao_perfil a
	where	a.nr_seq_simulacao	= nr_seq_simulacao_p
	and	exists (select	1 --Se nao foi informado beneficiario, nao gera proposta para o perfil
			from	pls_simulpreco_coletivo x
			where	x.nr_seq_simul_perfil = a.nr_sequencia
			and	coalesce(x.qt_beneficiario,0) > 0);

procedure criar_proposta(	nr_seq_simul_perfil_p	pls_simulacao_perfil.nr_sequencia%type) is;
BEGIN
--Gerar proposta de adesao
insert into pls_proposta_adesao(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
		cd_estabelecimento,dt_inicio_proposta,ie_tipo_proposta,ie_tipo_contratacao,cd_cgc_estipulante,
		nr_seq_vendedor_canal,nr_seq_cliente,ie_status,nr_seq_simul_preco,nr_seq_vendedor_pf,
		ie_rescindir_dependente,ie_presente_sede,nr_seq_simul_perfil, nr_seq_origem_agente, nr_seq_agente_motivador,
		ie_tipo_processo,dt_prev_entrega_contrato)
values (	nextval('pls_proposta_adesao_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
		cd_estabelecimento_p,clock_timestamp(),1,ie_tipo_contratacao_w,cd_cgc_estipulante_p,
		nr_seq_canal_venda_w,nr_seq_cliente_p,'U',nr_seq_simulacao_p,nr_seq_vendedor_vinculado_w,
		'N','N',nr_seq_simul_perfil_p, nr_seq_origem_agente_w, nr_seq_agente_motivador_w,
		'M',dt_prev_entrega_contrato_p)
	returning nr_sequencia into nr_seq_proposta_w;

--Gerar pagador da proposta, com os dados enviados nos parametro
insert into pls_proposta_pagador(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
		nr_seq_proposta,cd_cgc_pagador,dt_inicio_vigencia,nr_seq_dia_vencimento,dt_dia_vencimento,
		nr_seq_forma_cobranca,ie_mes_vencimento,ie_endereco_boleto,cd_condicao_pagamento,cd_banco,
		cd_agencia_bancaria,ie_digito_agencia,cd_conta,ie_digito_conta,ie_tipo_pagador, nr_seq_classif_itens)
values (	nextval('pls_proposta_pagador_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
		nr_seq_proposta_w,cd_cgc_pagador_p,dt_inicio_vigencia_w,nr_dia_vencimento_p,dt_dia_vencimento_w,
		nr_seq_cobrancao_p,'A',nr_endereco_corresp_p,cd_condicao_pagamento_w,cd_banco_p,
		cd_agencia_p,ie_agencia_dig_p,cd_conta_p,ie_conta_dig_p,'P', nr_seq_classif_itens_p);
end;

begin

dt_inicio_vigencia_w	:= trunc(clock_timestamp(),'Month');

if (nr_seq_cliente_p IS NOT NULL AND nr_seq_cliente_p::text <> '') then
	begin
	select	nr_seq_vendedor_canal,
		nr_seq_vendedor_vinculado
	into STRICT	nr_seq_canal_venda_w,
		nr_seq_vendedor_vinculado_w
	from	pls_solicitacao_vendedor
	where	nr_seq_cliente	= nr_seq_cliente_p
	and	coalesce(dt_fim_vigencia::text, '') = '';
	exception
	when others then
		nr_seq_canal_venda_w		:= null;
		nr_seq_vendedor_vinculado_w	:= null;
	end;
end if;

select	max(ie_tipo_contratacao)
into STRICT	ie_tipo_contratacao_w
from	pls_simulacao_preco
where	nr_sequencia	= nr_seq_simulacao_p;

select	max(cd_condicao_pagamento),
	coalesce(max(ie_proposta_unica_simul),'N')
into STRICT	cd_condicao_pagamento_w,
	ie_proposta_unica_simul_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

select	max(dt_dia_vencimento)
into STRICT	dt_dia_vencimento_w
from	pls_regra_dia_vencimento
where	nr_sequencia	= nr_dia_vencimento_p;

if (nr_seq_cliente_p IS NOT NULL AND nr_seq_cliente_p::text <> '') then
	select	nr_seq_origem_agente,
		nr_seq_agente_motivador
	into STRICT	nr_seq_origem_agente_w,
		nr_seq_agente_motivador_w
	from	pls_comercial_cliente
	where	nr_sequencia = nr_seq_cliente_p;
end if;

if (ie_proposta_unica_simul_w = 'S') then
	criar_proposta(null);
end if;

ie_gerou_proposta_w	:= 'N';

for r_c01_w in C01 loop
	begin
	select	max(nr_seq_tabela)
	into STRICT	nr_seq_tabela_w
	from	pls_simul_perfil_tabela
	where	nr_seq_simul_perfil =  r_c01_w.nr_seq_simul_perfil
	and	ie_tabela_selecionada = 'S';
	
	if (coalesce(nr_seq_tabela_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(193140,'DS_PERFIL='||r_c01_w.ds_perfil);
	end if;
	
	select	max(nr_seq_plano)
	into STRICT	nr_seq_plano_w
	from	pls_tabela_preco
	where	nr_sequencia	= nr_seq_tabela_w;
	
	--Verificar se o plano esta liberado para a proposta de adesao
	if (pls_obter_se_plano_proposta(nr_seq_plano_w) = 'N') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(193141,'DS_PRODUTO='||substr(pls_obter_dados_produto(nr_seq_plano_w,'N'),1,225));
	end if;
	
	if (ie_proposta_unica_simul_w = 'N') then
		criar_proposta(r_c01_w.nr_seq_simul_perfil);
	end if;
	
	nr_seq_tabela_nova_w := pls_gerar_tab_simul_coletivo(r_c01_w.nr_seq_simul_perfil, nr_seq_proposta_w, nr_seq_tabela_w, nr_seq_tabela_nova_w, nm_usuario_p);
	
	insert into pls_proposta_plano(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			nr_seq_proposta,nr_seq_plano,nr_seq_tabela,ie_principal)
	values (	nextval('pls_proposta_plano_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			nr_seq_proposta_w,nr_seq_plano_w,nr_seq_tabela_nova_w,'N');
	
	update	pls_simulacao_perfil
	set	nr_seq_proposta	= nr_seq_proposta_w,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= r_c01_w.nr_seq_simul_perfil;
	
	ie_gerou_proposta_w	:= 'S';
	end;
end loop; --C01
if (ie_gerou_proposta_w = 'S') then
	update	pls_simulacao_preco
	set	nr_seq_proposta	= nr_seq_proposta_w,
		nm_usuario	= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where	nr_sequencia	= nr_seq_simulacao_p;
	
	update	pls_comercial_cliente
	set	dt_proposta		= clock_timestamp(),
		ie_classificacao	= 'B',
		ie_fase_venda		= 'PA',
		ie_status		= 'C'
	where	nr_sequencia		= nr_seq_cliente_p;
end if;

ie_gerou_propostas_p	:= ie_gerou_proposta_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_proposta_simul_col ( nr_seq_cliente_p bigint, nr_seq_simulacao_p bigint, cd_cgc_estipulante_p text, cd_cgc_pagador_p text, nr_dia_vencimento_p bigint, nr_seq_cobrancao_p text, nr_endereco_corresp_p text, cd_banco_p text, cd_agencia_p text, ie_agencia_dig_p text, cd_conta_p text, ie_conta_dig_p text, ie_gerou_propostas_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_classif_itens_p bigint, dt_prev_entrega_contrato_p pls_proposta_adesao.dt_prev_entrega_contrato%type) FROM PUBLIC;

