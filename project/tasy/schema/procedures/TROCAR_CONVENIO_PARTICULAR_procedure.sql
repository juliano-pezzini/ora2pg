-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE trocar_convenio_particular ( nr_sequencia_p bigint, nm_usuario_p text, ie_proc_mat_p text) AS $body$
DECLARE


dt_atualizacao_w		timestamp := clock_timestamp();
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_estabelecimento_w		integer;
ie_classificacao_w		smallint;
nr_interno_conta_w		bigint;
nr_interno_conta_ww		bigint;
ie_alterar_valor_inf_w		varchar(5);
vl_original_w			double precision;

cd_pessoa_fisica_w		varchar(10);
cd_conv_item_w			integer;
ie_altera_item_repasse_w	varchar(1) := 'S';

BEGIN
select	cd_estabelecimento,
	nr_interno_conta,
	cd_pessoa_fisica,
	cd_convenio
into STRICT	cd_estabelecimento_w,
	nr_interno_conta_w,
	cd_pessoa_fisica_w,
	cd_conv_item_w
from (SELECT	a.cd_estabelecimento,
		b.nr_interno_conta,
		a.cd_pessoa_fisica,
		b.cd_convenio
	from	atendimento_paciente a,
		procedimento_paciente b
	where	a.nr_atendimento 	= b.nr_atendimento
	and	b.nr_sequencia 		= nr_sequencia_p
	and	ie_proc_mat_p 		= 'P'
	
union

	SELECT	a.cd_estabelecimento,
		b.nr_interno_conta,
		a.cd_pessoa_fisica,
		b.cd_convenio
	from	atendimento_paciente a,
		material_atend_paciente b
	where	a.nr_atendimento 	= b.nr_atendimento
	and	b.nr_sequencia 		= nr_sequencia_p
	and	ie_proc_mat_p 		<> 'P') alias0;

--obter_convenio_particular(cd_estabelecimento_w, cd_convenio_w,cd_categoria_w);
SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_conv_item_w, cd_pessoa_fisica_w, clock_timestamp(), cd_convenio_w, cd_categoria_w) INTO STRICT cd_convenio_w, cd_categoria_w; --trocado de obter_convenio_particular para obter_convenio_particular_pf
ie_alterar_valor_inf_w		:= coalesce(obter_valor_param_usuario(67,247,obter_perfil_ativo,nm_usuario_p,0),'S');
ie_altera_item_repasse_w	:= coalesce(obter_valor_param_usuario(1116,189,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');


if (ie_proc_mat_p = 'P') then
	begin

	select 	coalesce(vl_procedimento,0)
	into STRICT	vl_original_w
	from 	procedimento_paciente
	where 	nr_sequencia = nr_sequencia_p;

	select  b.ie_classificacao
	into STRICT	ie_classificacao_w
	from  	procedimento b,
           	procedimento_paciente a
	where 	a.cd_procedimento  	= b.cd_procedimento
	and 	a.ie_origem_proced 	= b.ie_origem_proced
	and 	a.nr_sequencia     	= nr_sequencia_p;

	if (ie_alterar_valor_inf_w		= 'S') then

		update 	procedimento_paciente a
		set   	cd_convenio     		= cd_convenio_w,
			cd_categoria    		= cd_categoria_w,
			vl_procedimento 		= 0,
			vl_medico       		= 0,
			vl_anestesista  		= 0,
			vl_materiais    		= 0,
			vl_auxiliares   		= 0,
			vl_custo_operacional 		= 0,
			nr_interno_conta		 = NULL,
			ie_valor_informado 		= 'N',
			nm_usuario			= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where 	a.nr_sequencia	  	= nr_sequencia_p
	        and 	exists (	SELECT 	1
					from 	conta_paciente b
					where 	a.nr_interno_conta = b.nr_interno_conta
					and 	b.ie_status_acerto = 1)
		and	not exists (	select	1
					from	procedimento_repasse x
					where	x.nr_seq_procedimento = a.nr_sequencia
					and	coalesce(ie_altera_item_repasse_w,'S') = 'N');

		/* francisco - os 92297 - 19/05/2008 - trocar convenio quando ainda nao tem conta tambem */

		update	procedimento_paciente a
		set   	a.cd_convenio     		= cd_convenio_w,
			a.cd_categoria    		= cd_categoria_w,
			a.vl_procedimento 		= 0,
			a.vl_medico       		= 0,
			a.vl_anestesista  		= 0,
			a.vl_materiais    		= 0,
			a.vl_auxiliares   		= 0,
			a.vl_custo_operacional 		= 0,
			a.nr_interno_conta		 = NULL,
			a.ie_valor_informado 		= 'N',
			a.nm_usuario			= nm_usuario_p,
			a.dt_atualizacao		= clock_timestamp()
		where 	a.nr_sequencia	  	= nr_sequencia_p
	        and   	coalesce(a.nr_interno_conta::text, '') = ''
		and	not exists (	SELECT	1
					from	procedimento_repasse x
					where	x.nr_seq_procedimento = a.nr_sequencia
					and	coalesce(ie_altera_item_repasse_w,'S') = 'N');

	elsif (ie_alterar_valor_inf_w		= 'N') then

		update 	procedimento_paciente a
		set   	a.cd_convenio     		= cd_convenio_w,
			a.cd_categoria    		= cd_categoria_w,
			a.nr_interno_conta		 = NULL,
			a.nm_usuario			= nm_usuario_p,
			a.dt_atualizacao		= clock_timestamp()
		where 	a.nr_sequencia	  	= nr_sequencia_p
	        and 	((coalesce(a.nr_interno_conta::text, '') = '') or ((a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '') and (exists (	SELECT 	1
					from 	conta_paciente b
					where 	a.nr_interno_conta = b.nr_interno_conta
					and 	b.ie_status_acerto = 1))))
		and	not exists (	select	1
					from	procedimento_repasse x
					where	x.nr_seq_procedimento = a.nr_sequencia
					and	coalesce(ie_altera_item_repasse_w,'S') = 'N');

	end if;

	if (ie_classificacao_w = 1) then
		CALL atualiza_preco_proc_amb(nr_sequencia_p, nm_usuario_p);
	else
		CALL atualiza_preco_servico(nr_sequencia_p, nm_usuario_p);
	end if;
	end;
else
	begin

	select 	coalesce(vl_material,0)
	into STRICT	vl_original_w
	from 	material_atend_paciente
	where 	nr_sequencia = nr_sequencia_p;

	if (ie_alterar_valor_inf_w		= 'S')	then

		update	material_atend_paciente a
		set  	a.cd_convenio     	= cd_convenio_w,
			a.cd_categoria    	= cd_categoria_w,
			a.vl_material     	= 0,
			a.vl_unitario     	= 0,
			a.ie_valor_informado 	= 'N',
			a.nr_interno_conta	 = NULL,
			a.nm_usuario		= nm_usuario_p,
			a.dt_atualizacao	= clock_timestamp()
		where 	a.nr_sequencia	  	= nr_sequencia_p
	        and 	exists (	SELECT	1
					from 	conta_paciente b
					where 	a.nr_interno_conta = b.nr_interno_conta
					and 	b.ie_status_acerto = 1)
		and	not exists (	select	1
					from	material_repasse x
					where	x.nr_seq_material = a.nr_sequencia
					and	coalesce(ie_altera_item_repasse_w,'S') = 'N');
	elsif (ie_alterar_valor_inf_w		= 'N') then

		update	material_atend_paciente a
		set  	a.cd_convenio     	= cd_convenio_w,
			a.cd_categoria    	= cd_categoria_w,
			a.nr_interno_conta	 = NULL,
			a.nm_usuario		= nm_usuario_p,
			a.dt_atualizacao	= clock_timestamp()
		where 	a.nr_sequencia	  	= nr_sequencia_p
	        and 	exists (	SELECT	1
					from 	conta_paciente b
					where 	a.nr_interno_conta = b.nr_interno_conta
					and 	b.ie_status_acerto = 1)
		and	not exists (	select	1
					from	material_repasse x
					where	x.nr_seq_material = a.nr_sequencia
					and	coalesce(ie_altera_item_repasse_w,'S') = 'N');

	end if;
	CALL atualiza_preco_material(nr_sequencia_p, nm_usuario_p);

	end;
end if;

--if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
select	nr_interno_conta
into STRICT	nr_interno_conta_ww
from (SELECT	nr_interno_conta
	 from	procedimento_paciente
	 where	nr_sequencia = nr_sequencia_p
	 and	ie_proc_mat_p = 'P'
	
union

	 SELECT	nr_interno_conta
	 from	material_atend_paciente
	 where	nr_sequencia = nr_sequencia_p
	 and	ie_proc_mat_p = 'M') alias0;

/*insert into logxxxxxx_tasy values (sysdate, nm_usuario_p, 7100, 'Transf. Item: ' || nr_sequencia_p || ' Conta origem: ' || nr_interno_conta_w ||
			     ' Conta particular destino: ' || nr_interno_conta_ww || ' Valor original: ' || vl_original_w);*/
if (coalesce(nr_interno_conta_ww,0) <> coalesce(nr_interno_conta_w,0)) then
	CALL gerar_ci_transf_particular(nr_sequencia_p, nr_interno_conta_w, nr_interno_conta_ww, vl_original_w, ie_proc_mat_p, nm_usuario_p);
end if;
--if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if; bruna os90282, falei com ricardo para tirar o if (nvl(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE trocar_convenio_particular ( nr_sequencia_p bigint, nm_usuario_p text, ie_proc_mat_p text) FROM PUBLIC;

