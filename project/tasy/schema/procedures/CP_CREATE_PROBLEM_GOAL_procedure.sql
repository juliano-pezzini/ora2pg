-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_create_problem_goal ( nr_seq_possible_prob_p cp_problem_goal.nr_seq_possible_prob%type, ds_unique_value_p cp_goal.ds_unique_value%type, nr_seq_order_p cp_problem_goal.nr_seq_order%type, nm_usuario_p cp_problem_goal.nm_usuario%type ) AS $body$
DECLARE


nr_seq_goal_w			cp_problem_goal.nr_seq_goal%type;
nr_sequencia_w			cp_problem_goal.nr_sequencia%type;
si_record_changed_w		cp_goal.si_record_changed%type;
nr_seq_old_care_plan_w	care_plan.nr_sequencia%type;


BEGIN

begin
	select	g.nr_sequencia,
			pg.nr_sequencia,
			g.si_record_changed
	into STRICT	nr_seq_goal_w,
			nr_sequencia_w,
			si_record_changed_w
	from	cp_goal g
		left outer join cp_problem_goal pg on pg.nr_seq_goal = g.nr_sequencia and nr_seq_possible_prob = nr_seq_possible_prob_p
	where	g.nr_sequencia = (
		SELECT	max(nr_sequencia)
		from	cp_goal
		where	ds_unique_value = ds_unique_value_p
	);
exception
	when no_data_found then
	begin
		nr_seq_goal_w	:= null;
		nr_sequencia_w	:= null;
	end;
end;

if ((nr_seq_goal_w IS NOT NULL AND nr_seq_goal_w::text <> '') and coalesce(nr_sequencia_w::text, '') = '') then

	select	max(get_old_care_plan(nr_seq_care_plan))
	into STRICT	nr_seq_old_care_plan_w
	from	cp_possible_prob
	where	nr_sequencia = nr_seq_possible_prob_p;

	if (nr_seq_old_care_plan_w IS NOT NULL AND nr_seq_old_care_plan_w::text <> '') and (si_record_changed_w = 'N') then
		select	CASE WHEN count(1)=0 THEN  'Y'  ELSE 'N' END
		into STRICT	si_record_changed_w
		from	cp_goal a,
				cp_problem_goal b,
				cp_possible_prob c
		where	a.nr_sequencia = b.nr_seq_goal
		and		b.nr_seq_possible_prob = c.nr_sequencia
		and		a.ds_unique_value = ds_unique_value_p
		and		c. nr_seq_care_plan = nr_seq_old_care_plan_w;
	end if;
	
	select	nextval('cp_problem_goal_seq')
	into STRICT	nr_sequencia_w
	;

	insert into cp_problem_goal(
		nr_sequencia,
		nr_seq_goal,
		nr_seq_possible_prob,
		ie_origin,
		nr_seq_order,
		si_import_status,
		ie_situacao,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		si_record_changed
        ) values (
		nr_sequencia_w,
		nr_seq_goal_w,
		nr_seq_possible_prob_p,
		'E', -- From Elsevier
		nr_seq_order_p,
		'SP',
		'I',
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		coalesce(si_record_changed_w, 'N')
        );
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_create_problem_goal ( nr_seq_possible_prob_p cp_problem_goal.nr_seq_possible_prob%type, ds_unique_value_p cp_goal.ds_unique_value%type, nr_seq_order_p cp_problem_goal.nr_seq_order%type, nm_usuario_p cp_problem_goal.nm_usuario%type ) FROM PUBLIC;

