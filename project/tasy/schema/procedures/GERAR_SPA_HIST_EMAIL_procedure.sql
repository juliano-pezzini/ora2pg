-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_spa_hist_email (ie_tipo_mensagem_p text, nr_seq_spa_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_regra_envio_w	spa_regra_email.nr_sequencia%type;				
ds_assunto_w		spa_regra_email.ds_assunto%type;
ds_mensagem_padrao_w	spa_regra_email.ds_mensagem_padrao%type;
ds_mensagem_aux_w	spa_regra_email.ds_mensagem_padrao%type;
ie_tipo_envio_w		spa_regra_email.ie_tipo_envio%type;
ie_forma_envio_w	spa_regra_email.ie_forma_envio%type;		
ds_email_origem_w	spa_regra_email.ds_email_origem%type;
nr_seq_regra_envio_aux_w	spa_hist_email.nr_seq_regra_envio%type;
qt_regra_w		bigint;				
nr_seq_hist_email_w	spa_hist_email.nr_sequencia%type;

cd_cargo_aprov_w	spa_aprovacao.cd_cargo_aprov%type;
nm_usuario_aprov_w	spa_aprovacao.nm_usuario_aprov%type;
ds_observacao_w		spa.ds_observacao%type;

nm_usuario_gerar_w	usuario.nm_usuario%type;
ds_usuario_gerar_w	usuario.ds_usuario%type;
ds_email_gerar_w	usuario.ds_email%type;
cd_estab_logado_w	estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;
nm_usuario_ci_w		varchar(4000);	
 
cd_responsavel_w	pessoa_fisica.cd_pessoa_fisica%type;
cd_solicitante_w	pessoa_fisica.cd_pessoa_fisica%type;
nm_usuario_solic_w	usuario.nm_usuario%type;
nm_pessoa_solic_w	pessoa_fisica.nm_pessoa_fisica%type;
nm_pessoa_resp_w	pessoa_fisica.nm_pessoa_fisica%type;

nm_usuario_ordem_aprov_w usuario.nm_usuario%type;
nr_seq_hist_email_dest_w spa_hist_email_destino.nr_sequencia%type;	
qt_hora_w		spa_regra_agrup_email.qt_hora%type;
cd_cargo_w		cargo.cd_cargo%type;
nr_seq_tipo_spa_w	spa.nr_seq_tipo%type;
ds_tipo_spa_w		spa_tipo.ds_tipo%type;
nr_seq_motivo_spa_w	spa.nr_seq_motivo%type;
ds_motivo_spa_w		spa_motivo.ds_motivo%type;
dt_spa_w		spa.dt_spa%type;
nr_seq_motivo_cancel_w 	spa.nr_seq_motivo_cancel%type;
ds_motivo_cancel_w	spa_motivo.ds_motivo%type;

 
C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.ds_assunto, 
		a.ds_mensagem_padrao, 
		a.ie_tipo_envio, 
		a.ie_forma_envio 
	from	spa_regra_email a 
	where	a.ie_tipo_mensagem = ie_tipo_mensagem_p 
	and	coalesce(a.ie_situacao,'A') = 'A' 
	and	not exists (	SELECT	1 
				from	spa_hist_email x 
				where	x.nr_seq_regra_envio 	= a.nr_sequencia 
				and	x.nr_seq_spa		= nr_seq_spa_p 
				and	x.ie_tipo_mensagem 	= a.ie_tipo_mensagem 
				and	coalesce(x.dt_estorno_lib_spa::text, '') = '');				
 
	 
/*Cursor C02 is 
	select	nvl(x.cd_cargo_aprov,0), 
		x.nm_usuario_aprov 
	from	spa_aprovacao x 
	where	nr_seq_spa = nr_seq_spa_p;*/
 
	 
C03 CURSOR FOR 
	SELECT	u.nm_usuario, 
		u.ds_email, 
		ds_usuario, 
		p.cd_cargo, 
		s.nr_seq_tipo, 
		s.dt_spa, 
		s.nr_seq_motivo, 
		s.nr_seq_motivo_cancel 
	from	usuario u, 
		pessoa_fisica p, 
		spa_aprovacao x, 
		spa s 
	where	u.cd_pessoa_fisica = p.cd_pessoa_fisica 
	and	p.ie_funcionario = 'S' 
	--and	u.ds_email is not null 
	and	(x.cd_cargo_aprov IS NOT NULL AND x.cd_cargo_aprov::text <> '') 
	and	coalesce(x.nm_usuario_aprov::text, '') = '' 
	and	p.cd_cargo    = x.cd_cargo_aprov 
	and	x.nr_seq_spa 	 = s.nr_sequencia 
	and	x.nr_seq_spa 	 = nr_seq_spa_p 
	and	ie_tipo_mensagem_p = 'P' 
	
union
 
	SELECT	u.nm_usuario, 
		u.ds_email, 
		ds_usuario, 
		p.cd_cargo, 
		s.nr_seq_tipo, 
		s.dt_spa, 
		s.nr_seq_motivo, 
		s.nr_seq_motivo_cancel 
	from	usuario u, 
		pessoa_fisica p, 
		spa_aprovacao x, 
		spa s 
	where	u.cd_pessoa_fisica = p.cd_pessoa_fisica 
	--and	p.ie_funcionario = 'S' 
	--and	u.ds_email is not null 
	and	coalesce(x.cd_cargo_aprov::text, '') = '' 
	and	(x.nm_usuario_aprov IS NOT NULL AND x.nm_usuario_aprov::text <> '') 
	and	u.nm_usuario    = x.nm_usuario_aprov 
	and	x.nr_seq_spa 	 = s.nr_sequencia 
	and	x.nr_seq_spa 	 = nr_seq_spa_p 
	and	ie_tipo_mensagem_p = 'P' 
	
union
 
	select	u.nm_usuario, 
		u.ds_email, 
		ds_usuario, 
		p.cd_cargo, 
		s.nr_seq_tipo, 
		s.dt_spa, 
		s.nr_seq_motivo, 
		s.nr_seq_motivo_cancel 
	from	usuario u, 
		pessoa_fisica p, 
		spa s 
	where	u.cd_pessoa_fisica = p.cd_pessoa_fisica 
	and	s.CD_RESPONSAVEL = p.cd_pessoa_fisica 
	--and	p.ie_funcionario = 'S' 
	--and	u.ds_email is not null 
	and	ie_tipo_mensagem_p <> 'P' 
	and	s.nr_sequencia    = nr_seq_spa_p 
	order by ds_usuario;

	 

BEGIN 
--Dados da SPA 
begin 
select	cd_responsavel, 
	cd_solicitante, 
	substr(obter_usuario_pf(cd_solicitante),1,10) nm_usuario_solic, 
	substr(obter_nome_pf(c.cd_solicitante),1,60) nm_solic, 
	substr(obter_nome_pf(c.cd_responsavel),1,60) nm_resp, 
	c.ds_observacao 
into STRICT	cd_responsavel_w, 
	cd_solicitante_w, 
	nm_usuario_solic_w, 
	nm_pessoa_solic_w, 
	nm_pessoa_resp_w, 
	ds_observacao_w 
from	spa c 
where	c.nr_sequencia	  = nr_seq_spa_p;
exception 
when others then 
	cd_responsavel_w := null;
	cd_solicitante_w := null;
	nm_usuario_solic_w := null;
	nm_pessoa_solic_w	:= null;
	nm_pessoa_resp_w	:= null;
	ds_observacao_w		:= null;
end;
 
 
select	count(*) 
into STRICT	qt_regra_w 
from	spa_regra_email 
where	ie_tipo_mensagem = ie_tipo_mensagem_p;
 
if (qt_regra_w > 0) then 
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_regra_envio_w, 
		ds_assunto_w, 
		ds_mensagem_padrao_w, 
		ie_tipo_envio_w, 
		ie_forma_envio_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	nextval('spa_hist_email_seq') 
		into STRICT	nr_seq_hist_email_w 
		;
		 
		insert	into	spa_hist_email( 
			ds_assunto,        
			dt_atualizacao,      
			dt_atualizacao_nrec,   
			ie_forma_envio,      
			ie_tipo_envio,      
			ie_tipo_mensagem,     
			nm_usuario,        
			nm_usuario_nrec,     
			nr_seq_regra_envio,    
			nr_seq_spa,        
			nr_sequencia) 
		values ( 
			ds_assunto_w,        
			clock_timestamp(),      
			clock_timestamp(),   
			ie_forma_envio_w,      
			ie_tipo_envio_w,      
			ie_tipo_mensagem_p,     
			nm_usuario_p,        
			nm_usuario_p,     
			nr_seq_regra_envio_w,    
			nr_seq_spa_p,        
			nr_seq_hist_email_w);
			 
		open C03;
		loop 
		fetch C03 into	 
			nm_usuario_gerar_w, 
			ds_email_gerar_w, 
			ds_usuario_gerar_w, 
			cd_cargo_w, 
			nr_seq_tipo_spa_w, 
			dt_spa_w, 
			nr_seq_motivo_spa_w, 
			nr_seq_motivo_cancel_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			 
			begin 
				select	ds_tipo 
				into STRICT	ds_tipo_spa_w 
				from	spa_tipo 
				where	nr_sequencia = nr_seq_tipo_spa_w;
			exception 
			when others then 
				ds_tipo_spa_w:='';
			end;
			 
			begin 
				select	ds_motivo 
				into STRICT	ds_motivo_spa_w 
				from	spa_motivo 
				where	nr_sequencia = nr_seq_motivo_spa_w; 			
			exception 
			when others then 
				ds_motivo_spa_w:='';
			end;
			 
			begin 
				select	ds_motivo 
				into STRICT	ds_motivo_cancel_w 
				from	spa_motivo 
				where	nr_sequencia = nr_seq_motivo_cancel_w; 			
			exception 
			when others then 
				ds_motivo_cancel_w:='';
			end;
			 
			ds_mensagem_aux_w 	:= ds_mensagem_padrao_w;
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@nm_responsavel',nm_pessoa_resp_w),1,2000);
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@nm_solicitante',nm_pessoa_solic_w),1,2000);
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@ds_destino',ds_usuario_gerar_w),1,2000);
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@nr_spa',nr_seq_spa_p),1,2000);
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@vl_spa',spa_obter_valores(nr_seq_spa_p,'VOR')),1,2000);
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@ds_tipo_spa',ds_tipo_spa_w),1,2000);
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@ds_motivo_spa',ds_motivo_spa_w),1,2000);
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@ds_motivo_do_cancelamento_spa',ds_motivo_cancel_w),1,2000);	
			ds_mensagem_aux_w	:= substr(replace_macro(ds_mensagem_aux_w,'@dt_spa',to_char(dt_spa_w,'dd/mm/yyyy hh24:mi:ss')),1,2000);	
			 
			if (nm_usuario_gerar_w IS NOT NULL AND nm_usuario_gerar_w::text <> '') then 
			 
				insert	into spa_hist_email_destino( 
					ds_email,          
					ds_mensagem_padrao,     
					dt_atualizacao,       
					dt_atualizacao_nrec,    
					dt_envio,          
					nm_usuario,         
					nm_usuario_aprovador,    
					nm_usuario_nrec,      
					nr_seq_hist_email,     
					nr_sequencia, 
					cd_cargo) 
				values ( 
					ds_email_gerar_w,          
					ds_mensagem_aux_w,     
					clock_timestamp(),       
					clock_timestamp(),    
					null,          
					nm_usuario_p,         
					nm_usuario_gerar_w,    
					nm_usuario_p,      
					nr_seq_hist_email_w,     
					nextval('spa_hist_email_destino_seq'), 
					cd_cargo_w);
				 
			end if;
			ds_mensagem_aux_w := '';
			end;
		end loop;
		close C03;
		 
		end;
	end loop;
	close C01;
end if;
 
select	coalesce(max(nm_usuario_envio),nm_usuario_solic_w) 
into STRICT	nm_usuario_ordem_aprov_w 
from	(SELECT	max(x.nm_usuario_aprov) nm_usuario_envio 
from	spa_aprovacao x 
where	x.nr_seq_spa = nr_seq_spa_p 
and	coalesce(x.cd_cargo_aprov::text, '') = '' 
and	(x.nm_usuario_aprov IS NOT NULL AND x.nm_usuario_aprov::text <> '') 
and	ie_tipo_mensagem_p = 'P' 
and	x.nr_sequencia = 	(select max(k.nr_sequencia) 
				from	spa_aprovacao k 
				where	k.nr_seq_spa = nr_seq_spa_p 
				and	(k.dt_lib_aprov IS NOT NULL AND k.dt_lib_aprov::text <> '') 
				and	coalesce(k.dt_aprovacao::text, '') = '') 

union
 
SELECT	max(u.nm_usuario) nm_usuario_envio 
from	usuario u, 
	pessoa_fisica p, 
	spa_aprovacao x 
where	u.cd_pessoa_fisica = p.cd_pessoa_fisica 
and	p.ie_funcionario = 'S' 
--and	u.ds_email is not null 
and	(x.cd_cargo_aprov IS NOT NULL AND x.cd_cargo_aprov::text <> '') 
and	coalesce(x.nm_usuario_aprov::text, '') = '' 
and	p.cd_cargo    = x.cd_cargo_aprov 
and	x.nr_seq_spa 	 = nr_seq_spa_p 
and	ie_tipo_mensagem_p = 'P' 
and	x.nr_sequencia = 	(select max(k.nr_sequencia) 
				from	spa_aprovacao k 
				where	k.nr_seq_spa = nr_seq_spa_p 
				and	(k.dt_lib_aprov IS NOT NULL AND k.dt_lib_aprov::text <> '') 
				and	coalesce(k.dt_aprovacao::text, '') = '')) alias16 
where	1 = 1;
 
				 
	 
if (nm_usuario_ordem_aprov_w IS NOT NULL AND nm_usuario_ordem_aprov_w::text <> '') then 
 
	select	max(b.ie_tipo_envio), 
		max(b.ie_forma_envio), 
		max(a.ds_email), 
		max(a.ds_mensagem_padrao), 
		max(b.ds_assunto), 
		max(a.nr_sequencia), 
		coalesce(max(b.nr_seq_regra_envio),0) 
	into STRICT	ie_tipo_envio_w, 
		ie_forma_envio_w, 
		ds_email_gerar_w, 
		ds_mensagem_padrao_w, 
		ds_assunto_w, 
		nr_seq_hist_email_dest_w, 
		nr_seq_regra_envio_aux_w 
	from	spa_hist_email_destino a, 
		spa_hist_email b 
	where	a.nr_seq_hist_email 	= b.nr_sequencia 
	and	b.nr_seq_spa	  	= nr_seq_spa_p 
	and	b.ie_tipo_mensagem	= ie_tipo_mensagem_p 
	and	a.nm_usuario_aprovador 	= nm_usuario_ordem_aprov_w 
	and 	coalesce(b.dt_estorno_lib_spa::text, '') = '';
	 
	if (ie_forma_envio_w = 'I') then 
		 
		if (ie_tipo_envio_w = 'E') and (position('@' in ds_email_gerar_w) > 0) then 
			 
			select	max(ds_email_origem) 
			into STRICT	ds_email_origem_w 
			from 	spa_regra_email 
			where 	nr_sequencia = nr_seq_regra_envio_aux_w;
			 
			if (coalesce(ds_email_origem_w::text, '') = '') then 
				select	max(ds_email) 
				into STRICT	ds_email_origem_w 
				from	usuario 
				where	nm_usuario	= nm_usuario_p;
			end if;
			 
			CALL enviar_email(ds_assunto_w,ds_mensagem_padrao_w, ds_email_origem_w ,ds_email_gerar_w,null,'M');
	 
		elsif (ie_tipo_envio_w = 'C') then 
 
			CALL Gerar_Comunic_Padrao(clock_timestamp(), 
					ds_assunto_w, 
					ds_mensagem_padrao_w, 
					nm_usuario_p, 
					'N', 
					nm_usuario_ordem_aprov_w, 
					'N', 
					null,--classif 
					null, 
					cd_estab_logado_w, 
					null, 
					clock_timestamp(), 
					null, 
					null);
	 
		end if;
		 
		update	spa_hist_email_destino 
		set	dt_atualizacao 	= clock_timestamp(), 
			nm_usuario   	= nm_usuario_p, 
			dt_envio    	= clock_timestamp() 
		where	nr_sequencia  	= nr_seq_hist_email_dest_w;
		 
	elsif (ie_forma_envio_w = 'A') then 
	 
		select	coalesce(max(qt_hora),0) 
		into STRICT	qt_hora_w 
		from	spa_regra_agrup_email a 
		where	a.ie_tipo_mensagem = ie_tipo_mensagem_p;
		 
		CALL gerar_spa_hist_email_agrup(to_date(to_char(clock_timestamp(),'dd/mm/yyyy') || ' ' || to_char(qt_hora_w) || ':00:00','dd/mm/yyyy hh24:mi:ss'), nm_usuario_p, ie_tipo_mensagem_p);		
	end if;
end if;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_spa_hist_email (ie_tipo_mensagem_p text, nr_seq_spa_p bigint, nm_usuario_p text) FROM PUBLIC;

