-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_interf_conta_aut ( nr_seq_protocolo_p bigint, nr_seq_envio_convenio_p bigint, cd_convenio_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_cgc_hospital_p text, cd_cgc_convenio_p text, cd_interno_p text) AS $body$
DECLARE


cd_estabelecimento_w	bigint;
ie_tipo_guia_w                    	varchar(2);
nr_seq_autorizacao_w            	bigint;
cd_autorizacao_w                	varchar(20);
cd_senha_w                        	varchar(20);
dt_autorizacao_w                  	timestamp;
nm_responsavel_w                  varchar(60);
dt_entrada_w		timestamp;
dt_inicio_vigencia_w              	timestamp;
dt_fim_vigencia_w                 	timestamp;
dt_pedido_medico_w              	timestamp;
cd_medico_resp_w        	varchar(10);
cd_medico_solicitante_w        	varchar(10);
cd_medico_convenio_w	varchar(15);
nm_pessoa_fisica_w	varchar(60);
nr_crm_w			varchar(20);
uf_crm_w			medico.uf_crm%type;
nr_cpf_w			varchar(11);
cd_procedimento_w	bigint;
cd_proc_convenio_w	varchar(20);
ds_proc_convenio_w	procedimento.ds_procedimento%TYPE;
qt_autorizada_w		double precision;
nr_sequencia_w		bigint;
nr_seq_controle_w		bigint;
nr_seqproc_guia_w		bigint;
cd_autorizacao_ant_w            varchar(20);
nr_doc_convenio_w	varchar(20) := '';
ie_tipo_atendimento_w            smallint;
cd_procedimento_princ_w	bigint;
nr_seq_guia_conta_w	bigint	:= 1;
nr_seq_guia_atend_w	bigint	:= 2;
nr_seq_guia_autor_w	bigint	:= 3;
nr_seq_guia_itens_w	bigint	:= 0;
qt_regra_w		smallint;
ie_origem_guia_w		varchar(01);
cd_senha_guia_w		varchar(20);
nr_conta_convenio_w	bigint;

c02 CURSOR FOR
/* obter guia da conta   */

SELECT	nr_seq_guia_atend_w,
	'C',
	x.ie_tipo_guia,
	0,
	x.cd_autorizacao,
	'',
	dt_inicio_vigencia_w,
	'',
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	dt_entrada_w,
	cd_medico_resp_w,
	cd_medico_convenio_w,
	nm_pessoa_fisica_w,
	nr_crm_w,
	uf_crm_w,
	nr_cpf_w,
	cd_procedimento_princ_w,
	cd_proc_convenio_w,
	ds_proc_convenio_w,
	1
from 	conta_paciente x	
where	x.nr_interno_conta		= nr_interno_conta_p
and	(x.cd_autorizacao IS NOT NULL AND x.cd_autorizacao::text <> '')
and	nr_seq_guia_conta_w > 0	

union

/* obter guia principal do atendimento  */

SELECT	nr_seq_guia_atend_w,
	'A',
	ie_tipo_guia_w,
	0,
	cd_autorizacao_w,
	cd_senha_w,
	dt_inicio_vigencia_w,
	'',
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	dt_entrada_w,
	cd_medico_resp_w,
	cd_medico_convenio_w,
	nm_pessoa_fisica_w,
	nr_crm_w,
	uf_crm_w,
	nr_cpf_w,
	cd_procedimento_princ_w,
	cd_proc_convenio_w,
	ds_proc_convenio_w,
	1
from 	atendimento_paciente a	
where	a.nr_atendimento	= nr_atendimento_p
and	(cd_autorizacao_w IS NOT NULL AND cd_autorizacao_w::text <> '')
and	nr_seq_guia_atend_w 	> 0	

union

/* obter guia da autorizacao_convenio   */

select	nr_seq_guia_autor_w,
	'U',
	 x.ie_tipo_guia,
	 x.nr_seq_autorizacao,
	 x.cd_autorizacao,
	 x.cd_senha,
	 x.dt_autorizacao,
	 x.nm_responsavel,
	 x.dt_inicio_vigencia,
	 x.dt_fim_vigencia,
	 x.dt_pedido_medico,
	 x.cd_medico_solicitante,
	 obter_medico_convenio(cd_estabelecimento_w, x.cd_medico_solicitante,cd_convenio_p, null, null, null, null,null, null, null, null),
	 c.nm_pessoa_fisica,
	 d.nr_crm,
	 d.uf_crm,
	 c.nr_cpf,
	 x.cd_procedimento_principal,
	 obter_codigo_item_convenio(x.cd_convenio,1,x.cd_procedimento_principal,
						coalesce(x.ie_origem_proced,1),'S', null, null, null),
	 obter_nome_item_convenio(x.cd_convenio,1,x.cd_procedimento_principal,
				coalesce(x.ie_origem_proced,1),'S', null, null, null, null),
	 1
FROM autorizacao_convenio x
LEFT OUTER JOIN pessoa_fisica c ON (x.cd_medico_solicitante = c.cd_pessoa_fisica)
LEFT OUTER JOIN medico d ON (x.cd_medico_solicitante = d.cd_pessoa_fisica)
WHERE nr_seq_guia_autor_w > 0	

union

/* obter guia dos procedimentos autorizados   */

select 	nr_seq_guia_autor_w + .5,
	'U',
	 x.ie_tipo_guia,
	 x.nr_seq_autorizacao,
	 x.cd_autorizacao,
	 x.cd_senha,
	 x.dt_autorizacao,
	 x.nm_responsavel,
	 x.dt_inicio_vigencia,
	 x.dt_fim_vigencia,
	 x.dt_pedido_medico,
	 x.cd_medico_solicitante,
	 obter_medico_convenio(cd_estabelecimento_w, x.cd_medico_solicitante,cd_convenio_p, null, null, null, null,null, null, null, null),
	 c.nm_pessoa_fisica,
	 d.nr_crm,
	 d.uf_crm,
	 c.nr_cpf,
	 l.cd_procedimento,
	 obter_codigo_item_convenio(x.cd_convenio,1,l.cd_procedimento,
					l.ie_origem_proced,'S', null, null, null),
	 obter_nome_item_convenio(x.cd_convenio,1,l.cd_procedimento,
					l.ie_origem_proced,'S', null, null, null, null),
	 l.qt_autorizada
FROM procedimento_autorizado l, autorizacao_convenio x
LEFT OUTER JOIN pessoa_fisica c ON (x.cd_medico_solicitante = c.cd_pessoa_fisica)
LEFT OUTER JOIN medico d ON (x.cd_medico_solicitante = d.cd_pessoa_fisica)
WHERE x.nr_seq_autorizacao		= l.nr_seq_autorizacao and x.nr_atendimento			= l.nr_atendimento   and nr_seq_guia_autor_w > 0	
 
union

/* obter guia dos itensa conta   */

select	nr_seq_guia_itens_w,
	'I',
	x.ie_tipo_guia,
	0,
	x.cd_autorizacao,
	'',
	dt_inicio_vigencia_w,
	'',
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	dt_entrada_w,
	cd_medico_resp_w,
	cd_medico_convenio_w,
	nm_pessoa_fisica_w,
	nr_crm_w,
	uf_crm_w,
	nr_cpf_w,
	cd_procedimento_princ_w,
	cd_proc_convenio_w,
	ds_proc_convenio_w,
	1
from 	conta_paciente_guia x	
where	x.nr_interno_conta		= nr_interno_conta_p
and	(x.cd_autorizacao IS NOT NULL AND x.cd_autorizacao::text <> '')
and	nr_seq_guia_itens_w > 0	
order  by 1, 3;


BEGIN

select	count(*)
into STRICT	qt_regra_w
from	convenio_regra_guia_interf
where	cd_convenio	= cd_convenio_p;

select max(nr_conta_convenio)
into STRICT	 nr_conta_convenio_w
from	 conta_paciente
where	 nr_interno_conta	= nr_interno_conta_p;

if (qt_regra_w > 0) then
	select	max(CASE WHEN ie_informacao='C' THEN nr_seq_ordem  ELSE 0 END ),
		max(CASE WHEN ie_informacao='A' THEN nr_seq_ordem  ELSE 0 END ),
		max(CASE WHEN ie_informacao='U' THEN nr_seq_ordem  ELSE 0 END ),
		max(CASE WHEN ie_informacao='I' THEN nr_seq_ordem  ELSE 0 END )
	into STRICT
		nr_seq_guia_conta_w,
		nr_seq_guia_atend_w,
		nr_seq_guia_autor_w,
		nr_seq_guia_itens_w
	from	convenio_regra_guia_interf
	where	cd_convenio	= cd_convenio_p;
end if;

select 	a.ie_tipo_atendimento,
	somente_numero(obter_proc_principal(nr_atendimento_p, cd_convenio_p, a.ie_tipo_atendimento,0,'C')),
	obter_medico_convenio(a.cd_estabelecimento, a.cd_medico_resp,cd_convenio_p, null, null, null, null,a.dt_entrada, a.ie_tipo_atendimento, null, null),
	a.dt_entrada,
	a.cd_medico_resp,
	b.nm_pessoa_fisica,
	d.nr_crm,
	d.uf_crm,
	b.nr_cpf,
	a.cd_estabelecimento
into STRICT	ie_tipo_atendimento_w,
	cd_procedimento_princ_w,
	cd_medico_convenio_w,
	dt_entrada_w,
	cd_medico_resp_w,
	nm_pessoa_fisica_w,
	nr_crm_w,
	uf_crm_w,
	nr_cpf_w,
	cd_estabelecimento_w
FROM pessoa_fisica b, atendimento_paciente a
LEFT OUTER JOIN medico d ON (a.cd_medico_resp = d.cd_pessoa_fisica)
WHERE a.nr_atendimento	= nr_atendimento_p and a.cd_medico_resp	= b.cd_pessoa_fisica;

select	
	max(a.dt_inicio_vigencia),
	max(a.dt_final_vigencia),
	max(a.cd_senha),
	max(a.nr_doc_convenio),
	max(a.ie_tipo_guia),
	max(obter_codigo_item_convenio(cd_convenio_p,1,cd_procedimento_princ_w,1,'S', null, null, null)),
	max(obter_nome_item_convenio(cd_convenio_p,1,cd_procedimento_princ_w,1,'S', null, null, null, null)),
	max(coalesce(a.cd_senha,a.nr_doc_convenio))
into STRICT	
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	cd_senha_w,
	cd_autorizacao_w,
	ie_tipo_guia_w,
	cd_proc_convenio_w,
	ds_proc_convenio_w,
	cd_senha_guia_w	
from 	atend_categoria_convenio a
where	a.nr_atendimento		= nr_atendimento_p
and	a.cd_convenio			= cd_convenio_p
and	a.dt_inicio_vigencia		=
	(SELECT max(x.dt_inicio_vigencia)
	from 	atend_categoria_convenio x
	where	x.nr_atendimento	= nr_atendimento_p
	and	x.cd_convenio		= cd_convenio_p);

nr_seqproc_guia_w		:= 0;
cd_autorizacao_ant_w	:= cd_autorizacao_w;

if (coalesce(cd_autorizacao_w::text, '') = '') 	and (cd_senha_w IS NOT NULL AND cd_senha_w::text <> '') then
	cd_autorizacao_w	:= cd_senha_w;
end if;

/* tratar autorizacao da autorizacao_convenio */

open c02;
loop
fetch c02 	into
		nr_seq_controle_w,
		ie_origem_guia_w,
		ie_tipo_guia_w,
		nr_seq_autorizacao_w,
		cd_autorizacao_w,
		cd_senha_w,
		dt_autorizacao_w,
		nm_responsavel_w,
		dt_inicio_vigencia_w,
		dt_fim_vigencia_w,
		dt_pedido_medico_w,
		cd_medico_solicitante_w,
		cd_medico_convenio_w,
		nm_pessoa_fisica_w,
		nr_crm_w,
		uf_crm_w,
		nr_cpf_w,
		cd_procedimento_w,
		cd_proc_convenio_w,
		ds_proc_convenio_w,
		qt_autorizada_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
     		begin
		select nextval('w_interf_conta_autor_seq')
		into STRICT	 nr_sequencia_w
		;
		if (ie_tipo_guia_w = 'I') then
			nr_doc_convenio_w	:= cd_autorizacao_w;
		end if;
		if (cd_autorizacao_w	<> cd_autorizacao_ant_w) then
			begin
			cd_autorizacao_ant_w 	:= cd_autorizacao_w;
			nr_seqproc_guia_w		:= 0;
			end;
		end if;	

		nr_seqproc_guia_w		:= nr_seqproc_guia_w + 1;
		insert into w_interf_conta_autor(
	 			nr_sequencia,
	 			cd_tipo_registro,
	 			nr_seq_registro,
	 			nr_seq_interface,
	 			nr_remessa,
	 			nr_atendimento,
	 			ie_tipo_guia,
	 			nr_seq_autorizacao,
	 			cd_autorizacao,
	 			cd_senha,
	 			dt_autorizacao,
	 			nm_responsavel,
	 			dt_inicio_vigencia,
	 			dt_final_vigencia,
	 			dt_pedido_medico,
	 			cd_medico_solicitante,
	 			cd_medico_solic_conv,
	 			nm_medico_solicitante,
	 			nr_crm_solicitante,
	 			uf_crm_solicitante,
	 			nr_cpf_solicitante,
	 			cd_procedimento_solic,
	 			cd_proc_convenio_solic,
	 			ds_proc_convenio_solic,
	 			qt_proc_solicitado,
	 			nr_seq_protocolo,
				nr_interno_conta,
	 			cd_convenio,
	 			cd_cgc_hospital,
	 			cd_cgc_convenio,
	 			cd_interno,
				ie_origem_guia,
				nr_seq_ordem_guia,
				cd_senha_guia,
				nr_seq_conta_convenio)
		values (
	 			nr_sequencia_w,
	 			3,
	 			nr_seqproc_guia_w,
	 			1,
	 			nr_seq_envio_convenio_p,
	 			nr_atendimento_p,
	 			ie_tipo_guia_w,
	 			nr_seq_autorizacao_w,
	 			cd_autorizacao_w,
	 			cd_senha_w,
	 			dt_autorizacao_w,
	 			nm_responsavel_w,
	 			dt_inicio_vigencia_w,
	 			dt_fim_vigencia_w,
	 			dt_pedido_medico_w,
	 			cd_medico_solicitante_w,
				cd_medico_convenio_w,
	 			nm_pessoa_fisica_w,
	 			nr_crm_w,
	 			uf_crm_w,
	 			nr_cpf_w,
	 			cd_procedimento_w,
	 			cd_proc_convenio_w,
	 			substr(ds_proc_convenio_w,1,50),
	 			CASE WHEN coalesce(qt_autorizada_w::text, '') = '' THEN 1 WHEN qt_autorizada_w=0 THEN 1  ELSE qt_autorizada_w END ,
	 			nr_seq_protocolo_p,
				nr_interno_conta_p,
	 			cd_convenio_p,
	 			cd_cgc_hospital_p,
	 			cd_cgc_convenio_p,
	 			cd_interno_p,
				ie_origem_guia_w,
				nr_seq_controle_w,
				cd_senha_guia_w,
				nr_conta_convenio_w);
		end;
end loop;
close c02;

if (nr_doc_convenio_w IS NOT NULL AND nr_doc_convenio_w::text <> '') then
	update w_interf_conta_cab
	set nr_doc_convenio	= nr_doc_convenio_w
	where nr_interno_conta	= nr_interno_conta_p;
end if;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_interf_conta_aut ( nr_seq_protocolo_p bigint, nr_seq_envio_convenio_p bigint, cd_convenio_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_cgc_hospital_p text, cd_cgc_convenio_p text, cd_interno_p text) FROM PUBLIC;

