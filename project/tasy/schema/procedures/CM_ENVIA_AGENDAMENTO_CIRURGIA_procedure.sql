-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cm_envia_agendamento_cirurgia ( nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint ) AS $body$
DECLARE


json_w        philips_json;
json_data_w   text;

c01 CURSOR FOR
SELECT  a.nr_sequencia schedule_id,
        obter_nome_agenda(a.cd_agenda) schedule,
        b.nr_seq_classif schedule_classification_id,
        substr(obter_desc_classif_agenda_cir(b.nr_seq_classif),1,255) schedule_classification,
        a.ie_status_agenda schedule_status_id,
        substr(obter_status_agenda_paciente(a.nr_sequencia),1,255) schedule_status,
        a.dt_agenda schedule_date,
        a.dt_agendamento scheduling_date,
        a.cd_agenda schedule_code,
        a.cd_procedimento procedure_id,
        substr(obter_descricao_procedimento(a.cd_procedimento, a.ie_origem_proced),1,100) procedure_description,
        wheb_mensagem_pck.get_texto(163013) procedure_status,
        a.nr_reserva reservation,
        c.dt_entrada admission_date,
        a.dt_chegada_prev estimated_admission_date,
        obter_estagio_autor_agepac(a.nr_sequencia,'C') authorization_status_id,
        obter_estagio_autor_agepac(a.nr_sequencia,'D') authorization_status,
        a.hr_inicio start_time,
        a.qt_idade_gestacional gestational_age,
        a.qt_idade_paciente age,
        substr(obter_nome_medico(a.cd_medico,'NC'),1,255) surgeon,
        c.nr_atendimento encounter,
        obter_unid_atend_setor_atual(c.nr_atendimento, obter_setor_atendimento(a.nr_atendimento), 'U') room,
        substr(obter_desc_convenio(a.cd_convenio),1,255) insurance,
        a.cd_usuario_convenio insurance_user,
        obter_valor_dominio(1545, a.ie_reserva_leito) admission,
        a.nr_telefone telephone,
        a.nr_minuto_duracao procedure_estimated_duration,
        (to_char((a.hr_inicio + (a.nr_minuto_duracao)::numeric /(24*60)),'hh24:mi:ss')) procedure_duration,
        a.cd_pessoa_fisica patient_id,
        d.nm_pessoa_fisica patient,
        d.dt_nascimento birth,
        d.nr_prontuario medical_record,
        d.ie_tipo_sangue || ' ' || d.ie_fator_rh blood,
        d.nr_telefone_celular cellphone,
        obter_nome_pessoa_fisica(d.cd_pessoa_mae,'') mother,
        CASE WHEN d.ie_sexo='M' THEN  wheb_mensagem_pck.get_texto(354750) WHEN d.ie_sexo='F' THEN  wheb_mensagem_pck.get_texto(354751) END  gender,
        CASE WHEN a.ie_anestesia='N' THEN  wheb_mensagem_pck.get_texto(1118500) WHEN a.ie_anestesia='S' THEN  wheb_mensagem_pck.get_texto(307592) WHEN a.ie_anestesia='X' THEN  wheb_mensagem_pck.get_texto(763069) END  anaesthesia,
        CASE WHEN a.ie_carater_cirurgia='A' THEN  wheb_mensagem_pck.get_texto(796908) WHEN a.ie_carater_cirurgia='E' THEN  wheb_mensagem_pck.get_texto(312715) WHEN a.ie_carater_cirurgia='M' THEN  wheb_mensagem_pck.get_texto(415759) WHEN a.ie_carater_cirurgia='U' THEN  wheb_mensagem_pck.get_texto(309481) END  surgery_nature,
        coalesce((select max(wheb_mensagem_pck.get_texto(94754)) from agenda_pac_sangue h where h.nr_seq_agenda = a.nr_sequencia), wheb_mensagem_pck.get_texto(94755)) preorder_blood,
        coalesce((select max(wheb_mensagem_pck.get_texto(94754)) from agenda_pac_opme h where h.nr_seq_agenda = a.nr_sequencia and coalesce(h.dt_exclusao::text, '') = ''), wheb_mensagem_pck.get_texto(94755)) OPSM,
        coalesce((coalesce((select max(wheb_mensagem_pck.get_texto(94754)) from pessoa_classif h where e.cd_pessoa_fisica = h.cd_pessoa_fisica and h.nr_seq_classif = 7),
        (select max(wheb_mensagem_pck.get_texto(1118702)) from pessoa_classif h where e.cd_pessoa_fisica = h.cd_pessoa_fisica and h.nr_seq_classif = 8))), wheb_mensagem_pck.get_texto(94755)) recommendation,
        (select max(h.ds_classif_paciente) from tipo_classificao_paciente h, agenda_paciente i where h.nr_sequencia = i.nr_seq_tipo_classif_pac and i.nr_sequencia = a.nr_sequencia) patient_classification,
        (select max(h.nr_cirurgia) from cirurgia h where h.nr_seq_agenda = a.nr_sequencia) surgery,
        (select max(h.ds_cobertura) from convenio_cobertura h where h.nr_sequencia = a.nr_seq_cobertura) insurance_coverage,
        (select max(h.ds_observacao) from pessoa_classif h where e.cd_pessoa_fisica = h.cd_pessoa_fisica and h.nr_seq_classif = 10) notes,
        coalesce((select     max(wheb_mensagem_pck.get_texto(94754))
             from       agenda_pac_servico h,
                        agenda_paciente i
             where      i.nr_sequencia = h.nr_seq_agenda
             and        i.nr_sequencia = a.nr_sequencia
             and        nr_seq_proc_servico = 6818), wheb_mensagem_pck.get_texto(94755)) ICU,
        coalesce((select     max(wheb_mensagem_pck.get_texto(94754))
             from       agenda_pac_servico h,
                        agenda_paciente i
             where      i.nr_sequencia = h.nr_seq_agenda
             and        i.nr_sequencia = a.nr_sequencia
             and        nr_seq_proc_servico =  6319), wheb_mensagem_pck.get_texto(94755)) NICU,
        coalesce((select     max(substr(obter_valor_dominio(3195,h.ie_status),1,255))
             from       agenda_pac_servico h,
                        agenda_paciente i
             where      i.nr_sequencia = h.nr_seq_agenda
             and        i.nr_sequencia = a.nr_sequencia
             and        nr_seq_proc_servico =  6817), wheb_mensagem_pck.get_texto(94755)) surgical_services_status
FROM pessoa_fisica d, agenda_paciente a
LEFT OUTER JOIN pessoa_classif e ON (a.cd_pessoa_fisica = e.cd_pessoa_fisica)
LEFT OUTER JOIN autorizacao_convenio g ON (a.nr_sequencia = g.nr_seq_agenda)
LEFT OUTER JOIN atendimento_paciente c ON (a.nr_atendimento = c.nr_atendimento)
, classif_agenda_cirurgica f
LEFT OUTER JOIN agenda b ON (f.nr_sequencia = b.nr_seq_classif)
WHERE a.cd_agenda = b.cd_agenda  and d.cd_pessoa_fisica = a.cd_pessoa_fisica and a.ie_status_agenda not in ('L', 'B', 'C') and to_date(a.hr_inicio, 'dd/mm/yyyy hh24:mi:ss') between to_date(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss') and to_date(clock_timestamp() + (obter_valor_param_usuario(410, 64, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p))::numeric /24, 'dd/mm/yyyy hh24:mi:ss') and b.cd_tipo_agenda = 1
 
union

select  a.nr_sequencia schedule_id,
        obter_nome_agenda(a.cd_agenda) schedule,
        b.nr_seq_classif schedule_classification_id,
        substr(obter_desc_classif_agenda_cir(b.nr_seq_classif),1,255) schedule_classification,
        a.ie_status_agenda schedule_status_id,
        substr(obter_status_agenda_paciente(a.nr_sequencia),1,255) schedule_status,
        a.dt_agenda schedule_date,
        a.dt_agendamento scheduling_date,
        a.cd_agenda schedule_code,
        j.cd_procedimento procedure_id,
        substr(obter_descricao_procedimento(j.cd_procedimento, j.ie_origem_proced),1,100) procedure_description,
        wheb_mensagem_pck.get_texto(163013) procedure_status,
        a.nr_reserva reservation,
        c.dt_entrada admission_date,
        a.dt_chegada_prev estimated_admission_date,
        obter_estagio_autor_agepac(a.nr_sequencia,'C') authorization_status_id,
        obter_estagio_autor_agepac(a.nr_sequencia,'D') authorization_status,
        a.hr_inicio start_time,
        a.qt_idade_gestacional gestational_age,
        a.qt_idade_paciente age,
        substr(obter_nome_medico(a.cd_medico,'NC'),1,255) surgeon,
        c.nr_atendimento encounter,
        obter_unid_atend_setor_atual(c.nr_atendimento, obter_setor_atendimento(a.nr_atendimento), 'U') room,
        substr(obter_desc_convenio(a.cd_convenio),1,255) insurance,
        a.cd_usuario_convenio insurance_user,
        obter_valor_dominio(1545, a.ie_reserva_leito) admission,
        a.nr_telefone telephone,
        a.nr_minuto_duracao procedure_estimated_duration,
        (to_char((a.hr_inicio + (a.nr_minuto_duracao)::numeric /(24*60)),'hh24:mi:ss')) procedure_duration,
        a.cd_pessoa_fisica patient_id,
        d.nm_pessoa_fisica patient,
        d.dt_nascimento birth,
        d.nr_prontuario medical_record,
        d.ie_tipo_sangue || ' ' || d.ie_fator_rh blood,
        d.nr_telefone_celular cellphone,
        obter_nome_pessoa_fisica(d.cd_pessoa_mae,'') mother,
        CASE WHEN d.ie_sexo='M' THEN  wheb_mensagem_pck.get_texto(354750) WHEN d.ie_sexo='F' THEN  wheb_mensagem_pck.get_texto(354751) END  gender,
        CASE WHEN a.ie_anestesia='N' THEN  wheb_mensagem_pck.get_texto(1118500) WHEN a.ie_anestesia='S' THEN  wheb_mensagem_pck.get_texto(307592) WHEN a.ie_anestesia='X' THEN  wheb_mensagem_pck.get_texto(763069) END  anaesthesia,
        CASE WHEN a.ie_carater_cirurgia='A' THEN  wheb_mensagem_pck.get_texto(796908) WHEN a.ie_carater_cirurgia='E' THEN  wheb_mensagem_pck.get_texto(312715) WHEN a.ie_carater_cirurgia='M' THEN  wheb_mensagem_pck.get_texto(415759) WHEN a.ie_carater_cirurgia='U' THEN  wheb_mensagem_pck.get_texto(309481) END  surgery_nature,
        coalesce((select max(wheb_mensagem_pck.get_texto(94754)) from agenda_pac_sangue h where h.nr_seq_agenda = a.nr_sequencia), wheb_mensagem_pck.get_texto(94755)) preorder_blood,
        coalesce((select max(wheb_mensagem_pck.get_texto(94754)) from agenda_pac_opme h where h.nr_seq_agenda = a.nr_sequencia and coalesce(h.dt_exclusao::text, '') = ''), wheb_mensagem_pck.get_texto(94755)) OPSM,
        coalesce((coalesce((select max(wheb_mensagem_pck.get_texto(94754)) from pessoa_classif h where e.cd_pessoa_fisica = h.cd_pessoa_fisica and h.nr_seq_classif = 7), 
        (select max(wheb_mensagem_pck.get_texto(1118702)) from pessoa_classif h where e.cd_pessoa_fisica = h.cd_pessoa_fisica and h.nr_seq_classif = 8))), wheb_mensagem_pck.get_texto(94755)) recommendation,
        (select max(h.ds_classif_paciente) from tipo_classificao_paciente h, agenda_paciente i where h.nr_sequencia = i.nr_seq_tipo_classif_pac and i.nr_sequencia = a.nr_sequencia) patient_classification,
        (select max(h.nr_cirurgia) from cirurgia h where h.nr_seq_agenda = a.nr_sequencia) surgery,
        (select max(h.ds_cobertura) from convenio_cobertura h where h.nr_sequencia = a.nr_seq_cobertura) insurance_coverage,
        (select max(h.ds_observacao) from pessoa_classif h where e.cd_pessoa_fisica = h.cd_pessoa_fisica and h.nr_seq_classif = 10) notes,
        coalesce((select     max(wheb_mensagem_pck.get_texto(94754))
             from       agenda_pac_servico h,
                        agenda_paciente i
             where      i.nr_sequencia = h.nr_seq_agenda
             and        i.nr_sequencia = a.nr_sequencia
             and        nr_seq_proc_servico = 6818), wheb_mensagem_pck.get_texto(94755)) ICU,
        coalesce((select     max(wheb_mensagem_pck.get_texto(94754))
             from       agenda_pac_servico h,
                        agenda_paciente i
             where      i.nr_sequencia = h.nr_seq_agenda
             and        i.nr_sequencia = a.nr_sequencia
             and        nr_seq_proc_servico =  6319), wheb_mensagem_pck.get_texto(94755)) NICU,
        coalesce((select     max(substr(obter_valor_dominio(3195,h.ie_status),1,255))
             from       agenda_pac_servico h,
                        agenda_paciente i
             where      i.nr_sequencia = h.nr_seq_agenda
             and        i.nr_sequencia = a.nr_sequencia
             and        nr_seq_proc_servico =  6817), wheb_mensagem_pck.get_texto(94755)) surgical_services_status
FROM agenda_paciente_proc j, pessoa_fisica d, agenda_paciente a
LEFT OUTER JOIN pessoa_classif e ON (a.cd_pessoa_fisica = e.cd_pessoa_fisica)
LEFT OUTER JOIN autorizacao_convenio g ON (a.nr_sequencia = g.nr_seq_agenda)
LEFT OUTER JOIN atendimento_paciente c ON (a.nr_atendimento = c.nr_atendimento)
, classif_agenda_cirurgica f
LEFT OUTER JOIN agenda b ON (f.nr_sequencia = b.nr_seq_classif)
WHERE a.cd_agenda = b.cd_agenda  and d.cd_pessoa_fisica = a.cd_pessoa_fisica and j.nr_sequencia = a.nr_sequencia and a.dt_agenda >= clock_timestamp() and a.ie_status_agenda not in ('L', 'B', 'C') and to_date(a.hr_inicio, 'dd/mm/yyyy hh24:mi:ss') between to_date(clock_timestamp(), 'dd/mm/yyyy hh24:mi:ss') and to_date(clock_timestamp() + (obter_valor_param_usuario(410, 64, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p))::numeric /24, 'dd/mm/yyyy hh24:mi:ss') and b.cd_tipo_agenda = 1 order by schedule_date, start_time, patient;

BEGIN

for c01_w in c01 loop

	json_w := philips_json();
	json_w.put('schedule_id', c01_w.schedule_id);
	json_w.put('schedule', c01_w.schedule);
	json_w.put('schedule_classification_id', c01_w.schedule_classification_id);
	json_w.put('schedule_classification', c01_w.schedule_classification);
	json_w.put('schedule_status_id', c01_w.schedule_status_id);
	json_w.put('schedule_status', c01_w.schedule_status);
	json_w.put('schedule_date', c01_w.schedule_date);
	json_w.put('scheduling_date', c01_w.scheduling_date);
	json_w.put('schedule_code', c01_w.schedule_code);
	json_w.put('procedure_id', c01_w.procedure_id);
	json_w.put('procedure_description', c01_w.procedure_description);
	json_w.put('procedure_status', c01_w.procedure_status);
	json_w.put('reservation', c01_w.reservation);
	json_w.put('admission_date', c01_w.admission_date);
	json_w.put('estimated_admission_date', c01_w.estimated_admission_date);
	json_w.put('authorization_status_id', c01_w.authorization_status_id);
	json_w.put('authorization_status', c01_w.authorization_status);
	json_w.put('start_time', c01_w.start_time);
	json_w.put('gestational_age', c01_w.gestational_age);
	json_w.put('age', c01_w.age);
	json_w.put('surgeon', c01_w.surgeon);
	json_w.put('encounter', c01_w.encounter);
	json_w.put('room', c01_w.room);
	json_w.put('insurance', c01_w.insurance);
	json_w.put('insurance_user', c01_w.insurance_user);
	json_w.put('admission', c01_w.admission);
	json_w.put('telephone', c01_w.telephone);
	json_w.put('procedure_estimated_duration', c01_w.procedure_estimated_duration);
	json_w.put('procedure_duration', c01_w.procedure_duration);
	json_w.put('patient_id', c01_w.patient_id);
	json_w.put('patient', c01_w.patient);
	json_w.put('birth', c01_w.birth);
	json_w.put('medical_record', c01_w.medical_record);
	json_w.put('blood', c01_w.blood);
	json_w.put('cellphone', c01_w.cellphone);
	json_w.put('mother', c01_w.mother);
	json_w.put('gender', c01_w.gender);
	json_w.put('anaesthesia', c01_w.anaesthesia);
	json_w.put('surgery_nature', c01_w.surgery_nature);
	json_w.put('preorder_blood', c01_w.preorder_blood);
	json_w.put('OPSM', c01_w.OPSM);
	json_w.put('recommendation', c01_w.recommendation);
	json_w.put('patient_classification', c01_w.patient_classification);
	json_w.put('surgery', c01_w.surgery);
	json_w.put('insurance_coverage', c01_w.insurance_coverage);
	json_w.put('notes', c01_w.notes);
	json_w.put('ICU', c01_w.ICU);
	json_w.put('NICU', c01_w.NICU);
	json_w.put('surgical_services_status', c01_w.surgical_services_status);

	dbms_lob.createtemporary(json_data_w, true);
	json_w.(json_data_w);

	json_data_w := bifrost.send_integration_content('cssd.management.send.request', json_data_w, nm_usuario_p);

end loop;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cm_envia_agendamento_cirurgia ( nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint ) FROM PUBLIC;

