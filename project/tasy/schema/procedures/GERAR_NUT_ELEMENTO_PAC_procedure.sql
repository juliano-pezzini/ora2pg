-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nut_elemento_pac ( NR_SEQUENCIA_P bigint, NM_USUARIO_P text) AS $body$
DECLARE



nr_seq_elemento_w		bigint;
nr_sequencia_w		bigint;
nr_sequencia_ww		bigint;
nr_sequencia_www		bigint;
cd_unidade_medida_w	varchar(30);
ie_prim_fase_w		varchar(1);
ie_seg_fase_w		varchar(1);
ie_terc_fase_w		varchar(1);
ie_quar_fase_w		varchar(1);
qt_fase_npt_w		bigint;
qt_fase_w		double precision;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_unidade_medida,
		ie_prim_fase,
		ie_seg_fase,
		ie_terc_fase,
		ie_quar_fase
	from 	Nut_Elemento
	where	ie_situacao	= 'A'
	and	ie_gerar_ped	= 'S'
	and	(cd_unidade_medida IS NOT NULL AND cd_unidade_medida::text <> '')
	Order by nr_seq_apresent, ds_elemento;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from 	Nut_elem_material
	where	ie_situacao	= 'A'
	and	ie_padrao	= 'S'
	and	nr_seq_elemento	= nr_seq_elemento_w
	and	coalesce(ie_tipo,'NPT') = 'NPT'
	Order by cd_material;


BEGIN

select	qt_fase_npt
into STRICT	qt_fase_npt_w
from	nut_pac
where	nr_sequencia	= nr_sequencia_p;

open C01;
loop
	fetch C01 into
			nr_seq_elemento_w,
			cd_unidade_medida_w,
			ie_prim_fase_w,
			ie_seg_fase_w,
			ie_terc_fase_w,
			ie_quar_fase_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_sequencia_w
		from	nut_pac_elemento
		where	nr_seq_nut_pac		= nr_sequencia_p
		  and	nr_seq_elemento		= nr_seq_elemento_w;

		if (nr_sequencia_w = 0) then
			begin
			if (qt_fase_npt_w = 3) then
				ie_quar_fase_w	:= 'N';
			elsif (qt_fase_npt_w = 2) then
				ie_terc_fase_w	:= 'N';
				ie_quar_fase_w	:= 'N';
			elsif (qt_fase_npt_w = 1) then
				ie_quar_fase_w	:= 'N';
				ie_terc_fase_w	:= 'N';
				ie_seg_fase_w	:= 'N';
			end if;

			select	nextval('nut_pac_elemento_seq')
			into STRICT	nr_sequencia_w
			;

			insert into Nut_Pac_Elemento(
				nr_sequencia, nr_seq_nut_pac, nr_seq_elemento,
				dt_atualizacao, nm_usuario, cd_unidade_medida,
				qt_elem_kg_dia, qt_diaria, pr_total, qt_kcal,
				ie_prim_fase, ie_seg_fase, ie_terc_fase, ie_quar_fase, ie_npt)
			values (
				nr_sequencia_w, nr_sequencia_p, nr_seq_elemento_w,
				clock_timestamp(), nm_usuario_p, cd_unidade_medida_w,
				0, 0, 0, 0, ie_prim_fase_w, ie_seg_fase_w, ie_terc_fase_w, ie_quar_fase_w, 'S');

			open C02;
			loop
				fetch C02 into
					nr_sequencia_www;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				select	nextval('nut_pac_elem_mat_seq')
				into STRICT	nr_sequencia_ww
				;

				insert into nut_pac_elem_mat(
					nr_sequencia, nr_seq_pac_elem, dt_atualizacao,
					nm_usuario, qt_volume, qt_vol_1_fase,
					qt_vol_2_fase, qt_vol_3_fase, qt_vol_4_fase, nr_seq_elem_mat)
				values (	nr_sequencia_ww, nr_sequencia_w, clock_timestamp(),
					nm_usuario_p, null, null,
					null, null, null, nr_sequencia_www);
			end Loop;
			close C02;
			end;
		end if;
		end;
end Loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nut_elemento_pac ( NR_SEQUENCIA_P bigint, NM_USUARIO_P text) FROM PUBLIC;

