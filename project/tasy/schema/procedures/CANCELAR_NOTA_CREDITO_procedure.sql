-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cancelar_nota_credito ( nr_seq_nota_p bigint, dt_cancelamento_p timestamp, nm_usuario_p text) AS $body$
DECLARE


ie_permite_canc_dt_fut_w	varchar(1) := 'S';
vl_saldo_w					nota_credito.vl_saldo%type;
vl_nota_credito_w			nota_credito.vl_nota_credito%type;
nr_seq_trans_fin_contab_w	nota_credito.nr_seq_trans_fin_contab%type;
count_w						bigint;

nr_bordero_w				bordero_pagamento.nr_bordero%type;
ie_situacao_w				nota_credito.ie_situacao%type;
nr_seq_movto_origem_w		nota_credito.nr_seq_movto_origem%type;
nr_seq_credito_n_ident_w	nota_credito.nr_seq_credito_n_ident%type;
ds_banco_w					varchar(255);
nr_seq_banco_w				movto_trans_financ.nr_seq_banco%type;
dt_transacao_w				movto_trans_financ.dt_transacao%type;


BEGIN

if (nr_seq_nota_p IS NOT NULL AND nr_seq_nota_p::text <> '') then

	select	max(coalesce(a.vl_saldo,0)),
			max(coalesce(a.vl_nota_credito,0)),
			max(coalesce(a.nr_seq_trans_fin_contab,0)),
			max(a.ie_situacao),
			max(a.nr_seq_movto_origem),
			max(a.nr_seq_credito_n_ident)
	into STRICT	vl_saldo_w,
			vl_nota_credito_w,
			nr_seq_trans_fin_contab_w,
			ie_situacao_w,
			nr_seq_movto_origem_w,
			nr_seq_credito_n_ident_w
	from	nota_credito a
	where	a.nr_sequencia	= nr_seq_nota_p;

	select   count(*)

	into STRICT	 count_w

    from     titulo_pagar x
    where    x.nr_seq_nota_credito = nr_seq_nota_p
	and 	 x.ie_situacao <> 'C';

	if (count_w > 0) then
		/*Não é possível cancelar esta nota de crédito pois a mesma já está com título gerado.*/

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(322255);
	end if;

	select   count(*),
			 max(x.nr_seq_bordero)
	into STRICT	 count_w,
			 nr_bordero_w
	from     titulo_pagar z,
			 bordero_nc y,
			 bordero_nc_nota_credito x
	where    x.nr_seq_nota_credito   = nr_seq_nota_p
	and      x.nr_seq_bordero        = y.nr_sequencia
	and      y.nr_sequencia          = z.nr_seq_bordero_nc;

	if ( count_w > 0 ) then
		/*Não é possível cancelar esta nota de crédito pois a mesma está vinculada ao um borderô.*/

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(322256);
	end if;

	if ( vl_saldo_w <> vl_nota_credito_w) then
		/*O saldo da nota de crédito não pode ser diferente do valor da nota. Vl nota crédito: #@VL_NOTA_CREDIO_W#@ Saldo: #@VL_SALDO_W#@'*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(321896,	'VL_NOTA_CREDIO_W=' || vl_nota_credito_w ||
													    ';VL_SALDO_W=' || VL_SALDO_W);
	end if;

	/*if ( nvl(nr_seq_trans_fin_contab_w,0) = 0) then
		/*'Para cancelar a nota de crédito, é necessário que a mesma possua transação financeira contábil informada.*/

		/*wheb_mensagem_pck.exibir_mensagem_abort(321898);
	end if;*/
	if ( coalesce(nr_seq_movto_origem_w,0) <> 0) and ( coalesce(nr_seq_credito_n_ident_w,0) <> 0) then

		select	max(a.nr_seq_banco),
				max(a.dt_transacao)
		into STRICT	nr_seq_banco_w,
				dt_transacao_w
		from	movto_trans_financ a
		where	a.nr_sequencia	= nr_seq_movto_origem_w;

		if (nr_seq_banco_w IS NOT NULL AND nr_seq_banco_w::text <> '') then

			select	substr(a.ds_conta,1,254)
			into STRICT	ds_banco_w
			from	banco_estabelecimento_v a
			where	a.nr_sequencia = nr_seq_banco_w;

		end if;
		CALL wheb_mensagem_pck.exibir_mensagem_abort(323815,'DS_BANCO_W='||ds_banco_w||';DT_TRANSACAO_W='||DT_TRANSACAO_W||';NR_SEQ_MOVTO_ORIGEM_W='||NR_SEQ_MOVTO_ORIGEM_W);
	end if;

	ie_permite_canc_dt_fut_w := Obter_Param_Usuario(9051, 16, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_permite_canc_dt_fut_w);

	if ( coalesce(ie_permite_canc_dt_fut_w,'S') = 'N') and (dt_cancelamento_p > clock_timestamp()) then /*Essa consistencia já tinha parametro 16*/
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(288759);
	end if;

	if ( ie_situacao_w in ('L','C') ) then
		/*Esta nota de crédito não está com situação Aberta, não pode ser cancelada*/

		CALL Wheb_mensagem_pck.exibir_mensagem_abort(322257);
	end if;

	update  nota_credito
	set     ie_situacao     = 'C',
			dt_cancelamento = dt_cancelamento_p,
			vl_saldo        = 0,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
	where   nr_sequencia    = nr_seq_nota_p;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cancelar_nota_credito ( nr_seq_nota_p bigint, dt_cancelamento_p timestamp, nm_usuario_p text) FROM PUBLIC;

