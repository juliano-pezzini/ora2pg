-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cb_recebe_nota_nfe ( cd_convenio_p bigint, dt_emissao_p text, nr_numero_p text, cd_estabelecimento_p text, cd_verificacao_p text, vl_servico_p bigint, vl_liquido_nfse_p bigint, cd_cgc_p text, nr_cpf_p text, cd_cgc_emitente_p text, cd_natureza_operacao_p bigint, nm_usuario_p text, vl_tributo_p bigint, tx_aliquota_p bigint, nr_sequencia_p INOUT text, vl_base_calculo_p bigint, ie_tipo_nota_p text, ie_situacao_p bigint) AS $body$
DECLARE



qt_convenio_w		bigint;
max_nofa_fiscal_w	varchar(255);
cd_serie_nf_w		nota_fiscal.cd_serie_nf%type;
cd_operacao_nf_w	smallint;
nr_sequencia_w		bigint;
dt_emissao_w		timestamp;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_pessoa_w		bigint;
qt_pj_w			bigint;
cd_natureza_operacao_w	smallint;
cd_condicao_pagamento_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_cgc_w		varchar(14):='';
ie_situacao_w		nota_fiscal.ie_situacao%type;


BEGIN

dt_emissao_w		:= to_date(dt_emissao_p,'yyyy-mm-dd');

select	coalesce(ie_situacao_p,1)
into STRICT	ie_situacao_w
;

select	count(*)
into STRICT	qt_convenio_w
from	parametro_nfs
where	cd_convenio = cd_convenio_p
and	cd_estabelecimento = cd_estabelecimento_p;


if (qt_convenio_w > 0) then

	select	coalesce(cd_operacao_nf,0),
		coalesce(cd_serie_nf,''),
		cd_procedimento,
		ie_origem_proced,
		coalesce(cd_natureza_operacao,0),
		coalesce(cd_condicao_pagamento,0)
	into STRICT	cd_operacao_nf_w,
		cd_serie_nf_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_natureza_operacao_w,
		cd_condicao_pagamento_w
	from	parametro_nfs
	where	cd_convenio = cd_convenio_p
	and	cd_estabelecimento = cd_estabelecimento_p;

	if (cd_serie_nf_w = '') or (cd_operacao_nf_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(205169);
	end if;

	select	max(somente_numero(nr_nota_fiscal))
	into STRICT	max_nofa_fiscal_w
	from	nota_fiscal
	where	cd_serie_nf = cd_serie_nf_w;

	select	nextval('nota_fiscal_seq')
	into STRICT	nr_sequencia_w
	;

	select	count(*)
	into STRICT	qt_pessoa_w
	from	pessoa_fisica
	where	nr_cpf = nr_cpf_p;

	if (qt_pessoa_w > 0) then
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pessoa_fisica
		where	nr_cpf = nr_cpf_p;
	end if;

	select	count(*)
	into STRICT	qt_pj_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_p;

	if (qt_pj_w > 0) then
		cd_cgc_w:= cd_cgc_p;
	end if;

	insert into nota_fiscal(cd_estabelecimento,
				cd_operacao_nf,
				cd_serie_nf,
				dt_atualizacao,
				dt_emissao,
				dt_entrada_saida,
				ie_acao_nf,
				ie_emissao_nf,
				ie_tipo_frete,
				nm_usuario,
				nr_nota_fiscal,
				nr_sequencia,
				nr_sequencia_nf,
				qt_peso_bruto,
				qt_peso_liquido,
				vl_mercadoria,
				vl_total_nota,
				nr_nfe_imp,
				cd_verificacao_nfse,
				dt_emissao_nfe,
				cd_pessoa_fisica,
				cd_cgc,
				cd_cgc_emitente,
				ie_situacao,
				cd_natureza_operacao,
				ie_tipo_nota,
				cd_condicao_pagamento)
			values ( cd_estabelecimento_p,
				cd_operacao_nf_w,
				cd_serie_nf_w,
				clock_timestamp(),
				dt_emissao_w,
				dt_emissao_w,
				1,
				0,
				0,
				nm_usuario_p,
				max_nofa_fiscal_w+1,
				nr_sequencia_w,
				1,
				0,
				0,
				vl_servico_p,
				vl_liquido_nfse_p,
				nr_numero_p,
				cd_verificacao_p,
				dt_emissao_w,
				cd_pessoa_fisica_w,
				cd_cgc_w,
				cd_cgc_emitente_p,
				ie_situacao_w,
				cd_natureza_operacao_w,
				ie_tipo_nota_p,
				cd_condicao_pagamento_w);

	insert into nota_fiscal_item(cd_estabelecimento,
					cd_natureza_operacao,
					cd_serie_nf,
					dt_atualizacao,
					nm_usuario,
					nr_item_nf,
					nr_sequencia,
					nr_sequencia_nf,
					qt_item_nf,
					vl_desconto,
					vl_desconto_rateio,
					vl_despesa_acessoria,
					vl_frete,
					vl_liquido,
					vl_seguro,
					vl_total_item_nf,
					vl_unitario_item_nf,
					cd_procedimento,
					ie_origem_proced)
				values (cd_estabelecimento_p,
					cd_natureza_operacao_w,
					cd_serie_nf_w,
					clock_timestamp(),
					nm_usuario_p,
					1,
					nr_sequencia_w,
					1,
					1,
					0,
					0,
					0,
					0,
					vl_servico_p,
					0,
					vl_servico_p,
					vl_servico_p,
					cd_procedimento_w,
					ie_origem_proced_w);

	insert into nota_fiscal_trib(cd_tributo,
					dt_atualizacao,
					nm_usuario,
					nr_seq_interno,
					nr_sequencia,
					vl_base_adic,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_trib_nao_retido,
					tx_tributo,
					vl_tributo,
					vl_base_calculo)
				values ( 20,
					clock_timestamp(),
					nm_usuario_p,
					nextval('nota_fiscal_trib_seq'),
					nr_sequencia_w,
					0,0,0,0,
					(tx_aliquota_p*100),
					vl_tributo_p,
					vl_base_calculo_p);
nr_sequencia_p	:= nr_sequencia_w;

else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(205170);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cb_recebe_nota_nfe ( cd_convenio_p bigint, dt_emissao_p text, nr_numero_p text, cd_estabelecimento_p text, cd_verificacao_p text, vl_servico_p bigint, vl_liquido_nfse_p bigint, cd_cgc_p text, nr_cpf_p text, cd_cgc_emitente_p text, cd_natureza_operacao_p bigint, nm_usuario_p text, vl_tributo_p bigint, tx_aliquota_p bigint, nr_sequencia_p INOUT text, vl_base_calculo_p bigint, ie_tipo_nota_p text, ie_situacao_p bigint) FROM PUBLIC;

