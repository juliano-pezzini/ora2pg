-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_ajustar_extensao_prescr ( nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;

C01 CURSOR FOR
SELECT	nr_sequencia
from	prescr_material
where	nr_prescricao = nr_prescricao_p;

C02 CURSOR FOR
SELECT	nr_sequencia
from	prescr_dieta
where	nr_prescricao = nr_prescricao_p;

C03 CURSOR FOR
SELECT	nr_sequencia
from	rep_jejum
where	nr_prescricao = nr_prescricao_p;

C04 CURSOR FOR
SELECT	nr_sequencia
from	nut_pac
where	nr_prescricao = nr_prescricao_p;

C05 CURSOR FOR
SELECT	nr_seq_solucao
from	prescr_solucao
where	nr_prescricao = nr_prescricao_p;

C06 CURSOR FOR
SELECT	nr_sequencia
from	prescr_gasoterapia
where	nr_prescricao = nr_prescricao_p;

C07 CURSOR FOR
SELECT	nr_sequencia
from	prescr_procedimento
where	nr_prescricao = nr_prescricao_p;

C08 CURSOR FOR
SELECT	nr_sequencia
from	prescr_recomendacao
where	nr_prescricao = nr_prescricao_p;


BEGIN

open C01;
loop
fetch C01 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'PRESCR_MATERIAL', nm_usuario_p);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'PRESCR_DIETA', nm_usuario_p);
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'REP_JEJUM', nm_usuario_p);
	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'NUT_PAC', nm_usuario_p);
	end;
end loop;
close C04;

open C05;
loop
fetch C05 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'PRESCR_SOLUCAO', nm_usuario_p);
	end;
end loop;
close C05;

open C06;
loop
fetch C06 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'PRESCR_GASOTERAPIA', nm_usuario_p);
	end;
end loop;
close C06;

open C07;
loop
fetch C07 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'PRESCR_PROCEDIMENTO', nm_usuario_p);
	end;
end loop;
close C07;

open C08;
loop
fetch C08 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	begin
	CALL PLT_ajustar_extensao(nr_prescricao_p, nr_sequencia_w, 'PRESCR_RECOMENDACAO', nm_usuario_p);
	end;
end loop;
close C08;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_ajustar_extensao_prescr ( nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

