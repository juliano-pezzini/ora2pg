-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_obter_vl_finais_js ( cd_estabelecimento_p bigint, cd_empresa_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_conta_contabil_p text, cd_tipo_lote_p bigint, nr_lote_contabil_p bigint, ie_status_p text, vl_debito_p INOUT text, vl_credito_p INOUT text, vl_saldo_atual_p INOUT text) AS $body$
DECLARE


vl_debito_w		double precision := 0.00;
vl_credito_w		double precision := 0.00;
vl_saldo_atual_w	double precision := 0.00;



BEGIN
if (coalesce(cd_tipo_lote_p::text, '') = '') then
	begin
	-- Obter  vl_total_debito
	select 	coalesce(sum(a.vl_debito),0)
	into STRICT	vl_debito_w
	from 	lote_contabil b, ctb_movimento_v a
	where	a.nr_lote_contabil = b.nr_lote_contabil
	and	a.cd_estabelecimento = 	cd_estabelecimento_p
	and	dt_movimento between 	PKG_DATE_UTILS.start_of(dt_inicio_p, 'DAY')
	and 	PKG_DATE_UTILS.end_of(dt_fim_p, 'DAY')
	and	b.nr_lote_contabil = nr_lote_contabil_p
	and	cd_conta_contabil = cd_conta_contabil_p
	and	((ie_status_p = '0') or ((b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '') and ie_status_p = '1') or ((b.dt_consistencia IS NOT NULL AND b.dt_consistencia::text <> '') and ie_status_p = '2') or ((b.dt_integracao IS NOT NULL AND b.dt_integracao::text <> '') and ie_status_p = '3'));
	
	
	-- Obter vl_total_credito
	select 	coalesce(sum(a.vl_credito),0)
	into STRICT 	vl_credito_w
	from 	lote_contabil b, ctb_movimento_v a
	where	a.nr_lote_contabil = b.nr_lote_contabil
	and	a.cd_estabelecimento = 	cd_estabelecimento_p
	and	dt_movimento between 	PKG_DATE_UTILS.start_of(dt_inicio_p, 'DAY')
	and 	PKG_DATE_UTILS.end_of(dt_fim_p, 'DAY')
	and	b.nr_lote_contabil = nr_lote_contabil_p
	and	cd_conta_contabil = cd_conta_contabil_p
	and	((ie_status_p = '0') or ((b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '') and ie_status_p = '1') or ((b.dt_consistencia IS NOT NULL AND b.dt_consistencia::text <> '') and ie_status_p = '2') or ((b.dt_integracao IS NOT NULL AND b.dt_integracao::text <> '') and ie_status_p = '3'));
	
	end;
else -- Se cd_tipo_lote_p não for igual a nulo irá adicionar a restricao cd_tipo_lote
	begin
	-- Obter  vl_total_debito
	select 	coalesce(sum(a.vl_debito),0)
	into STRICT	vl_debito_w
	from 	lote_contabil b, ctb_movimento_v a
	where	a.nr_lote_contabil = b.nr_lote_contabil
	and	a.cd_estabelecimento = 	cd_estabelecimento_p
	and	dt_movimento between 	PKG_DATE_UTILS.start_of(dt_inicio_p, 'DAY')
	and 	PKG_DATE_UTILS.end_of(dt_fim_p, 'DAY')
	and	cd_conta_contabil = cd_conta_contabil_p
	and	b.nr_lote_contabil = nr_lote_contabil_p
	and	a.cd_tipo_lote_contabil = cd_tipo_lote_p
	and	((ie_status_p = '0') or ((b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '') and ie_status_p = '1') or ((b.dt_consistencia IS NOT NULL AND b.dt_consistencia::text <> '') and ie_status_p = '2') or ((b.dt_integracao IS NOT NULL AND b.dt_integracao::text <> '') and ie_status_p = '3'));
	
	-- Obter vl_total_credito
	select 	coalesce(sum(a.vl_credito),0)
	into STRICT	vl_credito_w
	from 	lote_contabil b, ctb_movimento_v a
	where	a.nr_lote_contabil = b.nr_lote_contabil
	and	a.cd_estabelecimento = 	cd_estabelecimento_p
	and	dt_movimento between 	PKG_DATE_UTILS.start_of(dt_inicio_p, 'DAY')
	and 	PKG_DATE_UTILS.end_of(dt_fim_p, 'DAY')
	and	cd_conta_contabil = cd_conta_contabil_p
	and	b.nr_lote_contabil = nr_lote_contabil_p
	and	a.cd_tipo_lote_contabil = cd_tipo_lote_p
	and	((ie_status_p = '0') or ((b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '') and ie_status_p = '1') or ((b.dt_consistencia IS NOT NULL AND b.dt_consistencia::text <> '') and ie_status_p = '2') or ((b.dt_integracao IS NOT NULL AND b.dt_integracao::text <> '') and ie_status_p = '3'));
	end;
end if;

if (cd_empresa_p IS NOT NULL AND cd_empresa_p::text <> '') then
	begin
	-- Obter vl_saldo_atual
	select  coalesce(sum(vl_saldo),0)
	into STRICT	vl_saldo_atual_w
	from 	ctb_saldo a,
		ctb_mes_ref b
	where 	a.cd_conta_contabil = cd_conta_contabil_p
	and 	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.nr_seq_mes_ref = b.nr_sequencia
	and	b.cd_empresa = cd_empresa_p
	and 	b.dt_referencia = PKG_DATE_UTILS.start_of(dt_fim_p, 'MONTH');
				
	end;
end if;	
vl_debito_p		:= campo_mascara_virgula(vl_debito_w);
vl_credito_p		:= campo_mascara_virgula(vl_credito_w);
vl_saldo_atual_p	:= campo_mascara_virgula(vl_saldo_atual_w);
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_obter_vl_finais_js ( cd_estabelecimento_p bigint, cd_empresa_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_conta_contabil_p text, cd_tipo_lote_p bigint, nr_lote_contabil_p bigint, ie_status_p text, vl_debito_p INOUT text, vl_credito_p INOUT text, vl_saldo_atual_p INOUT text) FROM PUBLIC;

