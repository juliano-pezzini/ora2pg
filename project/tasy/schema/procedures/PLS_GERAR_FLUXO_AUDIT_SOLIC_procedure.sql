-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_fluxo_audit_solic ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar o fluxo de auditoria para os itens da conta
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_origem_conta_w		varchar(1);
nr_seq_ocor_benef_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_grupo_w			bigint;
qt_registro_w			bigint;
qt_analise_item_w		bigint;
qt_grupo_analise_w		bigint;
nr_seq_ordem_w			bigint;
nr_seq_ordem_ww			bigint;
nr_seq_aud_grupo_w		bigint;
nr_seq_ordem_ant_w		bigint;
qt_analise_parc_w		bigint;
nr_seq_aud_grupo_atual_w	bigint;
cd_estabelecimento_w		smallint;
dt_finalizacao_w		timestamp;
ie_origem_analise_w		pls_analise_conta.ie_origem_analise%type;

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.nr_seq_ocorrencia,
		a.ie_origem_conta
	from	pls_ocorrencia		c,
		pls_ocorrencia_benef	b,
		pls_conta		a
	where	a.nr_sequencia		= b.nr_seq_conta
	and	c.nr_sequencia		= b.nr_seq_ocorrencia
	and	a.nr_seq_analise	= nr_seq_analise_p
	and (coalesce(c.ie_encaminhamento::text, '') = '' or c.ie_encaminhamento = 'S')
	--and	(b.ie_lib_manual is null or b.ie_lib_manual = 'N') /* Nao deve gerar fluxo para as ocorrencias inseridas pelo usuario */
	and	b.ie_situacao = 'A';

C02 CURSOR FOR
	SELECT	b.nr_seq_grupo
	from	pls_analise_grupo_item b,
		pls_analise_conta_item a
	where	a.nr_sequencia		= b.nr_seq_item_analise
	and	a.nr_seq_analise	= nr_seq_analise_p
	and	a.nr_seq_ocorrencia	= nr_seq_ocorrencia_w
	group by
		a.nr_seq_ocorrencia,
		b.nr_seq_grupo;
	
C03 CURSOR FOR
	SELECT	a.nr_seq_grupo
	from	pls_ocorrencia_grupo	a
	where	a.nr_seq_ocorrencia	= nr_seq_ocorrencia_w
	and	a.ie_conta_medica	= 'S'
	and	a.ie_situacao		= 'A'
	and (a.ie_origem_conta = ie_origem_conta_w or coalesce(a.ie_origem_conta::text, '') = '')
	and	((coalesce(a.ie_tipo_analise::text, '') = '') or (a.ie_tipo_analise = 'A') or (a.ie_tipo_analise = 'C' and ie_origem_analise_w in ('1','3','4','5','6')) or (a.ie_tipo_analise	= 'P' and ie_origem_analise_w in ('2','7')));


BEGIN
select	max(nr_sequencia)
into STRICT	nr_seq_aud_grupo_atual_w
from	pls_auditoria_conta_grupo
where	nr_seq_analise	= nr_seq_analise_p
and	nr_seq_grupo	= nr_seq_grupo_atual_p;

select	max(ie_origem_analise)
into STRICT	ie_origem_analise_w
from	pls_analise_conta
where	nr_sequencia	= nr_seq_analise_p;

open C01;
loop
fetch C01 into
	nr_seq_ocor_benef_w,
	nr_seq_ocorrencia_w,
	ie_origem_conta_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/* Se tiver, copiar para nova */

	open C03;
	loop
	fetch C03 into	
		nr_seq_grupo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_analise_glo_ocor_grupo a
		where	a.nr_seq_ocor_benef	= nr_seq_ocor_benef_w
		and	a.nr_seq_grupo		= nr_seq_grupo_w  LIMIT 1;
		
		if (qt_registro_w = 0) then
			select	max(nr_sequencia)
			into STRICT	nr_seq_aud_grupo_w
			from	pls_auditoria_conta_grupo
			where	nr_seq_analise	= nr_seq_analise_p
			and	nr_seq_grupo	= nr_seq_grupo_w;
			
			dt_finalizacao_w	:= null;
			
			if (coalesce(nr_seq_aud_grupo_w::text, '') = '') then
				select	max(nr_seq_ordem)
				into STRICT	nr_seq_ordem_w
				from	pls_auditoria_conta_grupo
				where	nr_seq_analise	= nr_seq_analise_p
				and	nr_seq_grupo	= nr_seq_grupo_atual_p;
				
				nr_seq_ordem_ww := coalesce(nr_seq_ordem_w,0) - 1;

				insert into pls_auditoria_conta_grupo(nr_sequencia, nr_seq_analise, nr_seq_grupo,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nr_seq_ordem, ie_manual,
					ds_observacao)
				values (nextval('pls_auditoria_conta_grupo_seq'), nr_seq_analise_p, nr_seq_grupo_w,
					clock_timestamp(), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, nr_seq_ordem_ww, 'S',
					'Grupo inserido por solicitacao de parecer');
					
			else
				select	max(dt_final_analise),
					max(nr_seq_ordem)
				into STRICT	dt_finalizacao_w,
					nr_seq_ordem_ant_w
				from	pls_auditoria_conta_grupo
				where	nr_sequencia	= nr_seq_aud_grupo_w;
				
				select	max(nr_seq_ordem)
				into STRICT	nr_seq_ordem_w
				from	pls_auditoria_conta_grupo
				where	nr_seq_analise	= nr_seq_analise_p
				and	nr_seq_grupo	= nr_seq_grupo_atual_p;
				
				nr_seq_ordem_ww	:= coalesce(nr_seq_ordem_w,0) - 1;
				
				update	pls_auditoria_conta_grupo
				set	nr_seq_ordem	= nr_seq_ordem_ww,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_aud_grupo_w;
			end if;
			
			insert into pls_analise_glo_ocor_grupo(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_analise,
				nr_seq_ocor_benef,
				nr_seq_grupo,
				ie_status)
			values (nextval('pls_analise_glo_ocor_grupo_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_analise_p,
				nr_seq_ocor_benef_w,
				nr_seq_grupo_w,
				'P');
			
			select	count(1)
			into STRICT	qt_analise_parc_w
			from	pls_analise_pedido_parecer
			where	nr_seq_analise		= nr_seq_analise_p
			and	nr_seq_grupo_parecer	= nr_seq_grupo_w
			and	nr_seq_grupo_atual	= nr_seq_grupo_atual_p
			and	coalesce(dt_finalizacao::text, '') = '';
			
			if (qt_analise_parc_w = 0) then
				insert into pls_analise_pedido_parecer(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_grupo_atual,
					nr_seq_grupo_parecer,
					dt_finalizacao_anterior,
					nr_seq_fluxo_anterior,
					nr_seq_analise,
					dt_finalizacao)
				values (nextval('pls_analise_pedido_parecer_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_grupo_atual_p,
					nr_seq_grupo_w,
					dt_finalizacao_w,
					nr_seq_ordem_ant_w,
					nr_seq_analise_p,
					null);
			end if;
			
			CALL pls_finalizar_tempo_auditor(nr_seq_aud_grupo_atual_w, nr_seq_analise_p, nm_usuario_p, cd_estabelecimento_p);
			
			ds_mensagem_p	:= 'Parecer solicitado com sucesso.';
		end if;
		end;
	end loop;
	close C03;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_fluxo_audit_solic ( nr_seq_analise_p bigint, nr_seq_grupo_atual_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

