-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desvincular_titulo_protocolo (nr_seq_protocolo_p bigint, nm_usuario_p text, ds_mensagem_retorno_p INOUT text, dt_estorno_cancel_p timestamp default null) AS $body$
DECLARE



vl_saldo_titulo_w				double precision;
nr_titulo_w				bigint;
vl_titulo_w				double precision;
qt_titulo_w				bigint;
ie_situacao_w				varchar(10);
ie_desvincular_nf_titulo_w			varchar(1);
cd_estabelecimento_w			smallint;
ie_forma_canc_tit_prot_w			varchar(10);
nr_seq_titulo_w				bigint;
cd_moeda_w				bigint;
cd_tipo_recebimento_w			bigint;
nr_seq_trans_fin_w				bigint;
nr_titulo_contab_w				bigint;
ds_titulos_contab_w			varchar(4000);
qt_baixas_tit_w				bigint;
vl_tributo_tit_saldo_w			titulo_receber.vl_titulo%type;
vl_titulo_com_trib_w			titulo_receber.vl_titulo%type;
ie_excluir_tributos_w			varchar(1) := 'N';
ie_exclui_trib_w				varchar(1) := 'N';
qt_reg_w						bigint;

c01 CURSOR FOR
SELECT	nr_titulo,
	ie_situacao,
	cd_moeda,
	vl_saldo_titulo
from	titulo_receber
where	nr_seq_protocolo 	= nr_seq_protocolo_p;


BEGIN

select	count(*)
into STRICT	qt_titulo_w
from	titulo_receber
where 	nr_seq_protocolo	= nr_seq_protocolo_p;

select	coalesce(sum(vl_saldo_titulo),0),
	coalesce(sum(vl_titulo),0)
into STRICT	vl_saldo_titulo_w,
	vl_titulo_w
from	titulo_receber
where 	nr_seq_protocolo	= nr_seq_protocolo_p
and	ie_situacao		<> '3';

select	max(a.cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	protocolo_convenio a
where	a.nr_seq_protocolo	= nr_seq_protocolo_p;

select	coalesce(max(ie_forma_canc_tit_prot), 'A')
into STRICT	ie_forma_canc_tit_prot_w
from	parametro_contas_receber
where	cd_estabelecimento = cd_estabelecimento_w;

select	coalesce(min(cd_tipo_recebimento),4)
into STRICT	cd_tipo_recebimento_w
from	tipo_recebimento
where	ie_tipo_consistencia = 4
and     ((cd_estabelecimento = cd_estabelecimento_w) or (coalesce(cd_estabelecimento::text, '') = ''));

select	max(nr_seq_trans_fin)
into STRICT	nr_seq_trans_fin_w
from	tipo_recebimento
where	cd_tipo_recebimento	= cd_tipo_recebimento_w;

ie_excluir_tributos_w := obter_param_usuario(85, 254, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_excluir_tributos_w);

if (qt_titulo_w = 0) and (vl_titulo_w = 0) then
	ds_mensagem_retorno_p := wheb_mensagem_pck.get_texto(297983); --nao existem titulos associados a este protocolo.
	
elsif (vl_saldo_titulo_w = vl_titulo_w) then
	begin

	ds_titulos_contab_w	:= null;
	
	open c01;
	loop
	fetch c01 into
		nr_titulo_w,
		ie_situacao_w,
		cd_moeda_w,
		vl_saldo_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
			/* douglas 29/03/2011 - adicionado if para poder escolher a forma de cancelamento do protocolo.*/

		if (ie_situacao_w <> '3') then
			if (ie_forma_canc_tit_prot_w = 'A') then
				CALL cancelar_titulo_receber(nr_titulo_w, nm_usuario_p, 'N',coalesce(dt_estorno_cancel_p,clock_timestamp()));
			else
				/*OS 1608928 - Verificar se existem baixas com adiantamentos que nao foram estornadas*/

				select	count(*)
				into STRICT	qt_reg_w
				from	titulo_receber_liq a
				where	a.nr_titulo = nr_titulo_w
				and		(a.nr_adiantamento IS NOT NULL AND a.nr_adiantamento::text <> '')
				and    coalesce(a.nr_seq_liq_origem::text, '') = ''
				and not exists ( SELECT 1
								 from titulo_receber_liq x
								where x.nr_titulo = a.nr_titulo
								and  x.nr_seq_liq_origem = a. nr_sequencia);
				
				if (qt_reg_w > 0) then
					--Existem baixas com adiantamento no titulo que nao foram estornadas.
					CALL wheb_mensagem_pck.exibir_mensagem_abort(1040217);
				end if;

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_titulo_w
				from	titulo_receber_liq
				where	nr_titulo = nr_titulo_w;

				insert	into titulo_receber_liq(nr_titulo,
					nr_sequencia, 		
					dt_recebimento,
					vl_recebido, 		
					vl_descontos,			
					vl_juros, 
					vl_multa, 		
					cd_moeda, 			
					dt_atualizacao, 
					nm_usuario,		
					cd_tipo_recebimento, 	
					ie_acao, 
					vl_rec_maior, 		
					vl_glosa,		
					ie_lib_caixa,
					nr_seq_trans_fin,
					nr_lote_contab_antecip,
					nr_lote_contab_pro_rata,
					nr_lote_contabil)
				values (nr_titulo_w, 		
					nr_seq_titulo_w, 		
					coalesce(dt_estorno_cancel_p,clock_timestamp()), 
					vl_saldo_titulo_w,		
					0,				
					0,
					0, 			
					cd_moeda_w, 			
					clock_timestamp(), 
					nm_usuario_p, 	
					cd_tipo_recebimento_w,	
					'I', 
					0, 			
					0,				
					'S',
					nr_seq_trans_fin_w,
					0,
					0,
					0);

				CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w, null, nm_usuario_p, nr_titulo_w, nr_seq_titulo_w);
				
				nr_titulo_contab_w	:= null;
				
				nr_titulo_contab_w := pls_gerar_tit_rec_liq_mens(nr_titulo_w, nr_seq_titulo_w, nm_usuario_p, nr_titulo_contab_w);
				
				if (nr_titulo_contab_w IS NOT NULL AND nr_titulo_contab_w::text <> '') then
					ds_titulos_contab_w	:= substr(ds_titulos_contab_w || nr_titulo_contab_w || ', ',1,4000);
				end if;
				
				CALL atualizar_saldo_tit_rec(nr_titulo_w,nm_usuario_p);

				update	titulo_receber
				set 	ie_situacao		= '3'
				where	nr_titulo			= nr_titulo_w
				and	vl_saldo_titulo		= 0
				and	ie_situacao		in ('2', '4');
			end if;
		end if;
		
		-- 297984 	protocolo = #@nr_seq_protocolo_p#@

		-- 297985 - conta = #@nr_interno_conta#@

		-- 297986 cancelado por #@nm_usuario_p#@ em #@dt_canelamento_p#@ #@ds_observacao_titulo#@
		
		update	titulo_receber
		set	dt_liquidacao 		= coalesce(dt_estorno_cancel_p,clock_timestamp()),
		    	nr_sequencia_doc 	= substr(nr_titulo, length(nr_titulo) - 5, 5),
	    		nr_seq_protocolo 	 = NULL,
		    	nr_interno_conta 	 = NULL,
		    	ds_observacao_titulo 	= substr(wheb_mensagem_pck.get_texto(297984,'nr_seq_protocolo_p=' || nr_seq_protocolo_p) ||
				         	CASE WHEN coalesce(nr_interno_conta,0)=0 THEN  ''  ELSE wheb_mensagem_pck.get_texto(297985,'nr_interno_conta=' || nr_interno_conta) END  || chr(13) || chr(10) ||
						wheb_mensagem_pck.get_texto(297986,	'nm_usuario_p=' || nm_usuario_p ||
											';dt_cancelamento_p=' || clock_timestamp() ||
											';ds_observacao_titulo=' || coalesce(substr(ds_observacao_titulo,1,3800),' ')),1,4000)
		where 	nr_seq_protocolo 	= nr_seq_protocolo_p;

	end loop;
	close c01;
	
	if (ds_titulos_contab_w IS NOT NULL AND ds_titulos_contab_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236517, wheb_mensagem_pck.get_texto(297988) || '=' || ds_titulos_contab_w); -- nr_titulo
	end if;

	ie_desvincular_nf_titulo_w := obter_param_usuario(85, 139, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_desvincular_nf_titulo_w);

	if (coalesce(ie_desvincular_nf_titulo_w,'S') <> 'N') then

		update	titulo_receber
		set	nr_seq_nf_saida	 = NULL,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario 	= nm_usuario_p
		where	nr_seq_nf_saida	in (SELECT	nr_sequencia
				from	nota_fiscal
				where 	nr_seq_protocolo = nr_seq_protocolo_p);

	end if;

	update 	protocolo_convenio
	set 	dt_integracao_cr 	 = NULL
	where 	nr_seq_protocolo 	= nr_seq_protocolo_p;

	ds_mensagem_retorno_p 		:= wheb_mensagem_pck.get_texto(297989); -- desvinculacao completada
	end;

elsif (vl_saldo_titulo_w <> vl_titulo_w) and (ie_excluir_tributos_w = 'S') then	
	
	ds_titulos_contab_w	:= null;
	ie_exclui_trib_w	:= 'N';
	
	open c01;
	loop
	fetch c01 into
		nr_titulo_w,
		ie_situacao_w,
		cd_moeda_w,
		vl_saldo_titulo_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select	count(*) /*Conta quantas baixas o titulo possui*/
		into STRICT	qt_baixas_tit_w
		from	titulo_receber_liq
		where	nr_titulo	= nr_titulo_w;
		
		if ( coalesce(qt_baixas_tit_w,0) = 0 ) then /*se nao possui baixas, verifcar os tributos do titulo que deduzem o saldo do tiutlo*/
		
			select	coalesce(sum(a.VL_TRIBUTO),0)
			into STRICT	vl_tributo_tit_saldo_w
			from	titulo_receber_trib a
			where	a.nr_titulo			= nr_titulo_w
			and		coalesce(a.ie_origem_tributo, 'C') 	= 'CD'
			and 	not exists ( SELECT 1 /*nao pode existir baixa para o tributo*/
								 from	titulo_receber_trib_baixa x
								 where	x.nr_seq_tit_trib = a.nr_sequencia);

			vl_titulo_com_trib_w := coalesce(vl_saldo_titulo_w,0) + coalesce(vl_tributo_tit_saldo_w,0);
		
			if (vl_titulo_com_trib_w = vl_titulo_w) then /*se o saldo do titulo somando com os tributos for igual ao  valor do titulo, da pra excluir os tributos*/
				delete	FROM titulo_receber_trib a
				where	a.nr_titulo	= nr_titulo_w
				and		coalesce(a.ie_origem_tributo, 'C') 	= 'CD'
				and 	not exists ( SELECT 1 /*nao pode existir baixa para o tributo*/
									from	titulo_receber_trib_baixa x
									where	x.nr_seq_tit_trib = a.nr_sequencia);
									
		
				if (ie_situacao_w <> '3') then
					if (ie_forma_canc_tit_prot_w = 'A') then
						CALL cancelar_titulo_receber(nr_titulo_w, nm_usuario_p, 'N',coalesce(dt_estorno_cancel_p,clock_timestamp()));
					else
						select	coalesce(max(nr_sequencia),0) + 1
						into STRICT	nr_seq_titulo_w
						from	titulo_receber_liq
						where	nr_titulo = nr_titulo_w;

						insert	into titulo_receber_liq(nr_titulo,
							nr_sequencia, 		
							dt_recebimento,
							vl_recebido, 		
							vl_descontos,			
							vl_juros, 
							vl_multa, 		
							cd_moeda, 			
							dt_atualizacao, 
							nm_usuario,		
							cd_tipo_recebimento, 	
							ie_acao, 
							vl_rec_maior, 		
							vl_glosa,		
							ie_lib_caixa,
							nr_seq_trans_fin,
							nr_lote_contab_antecip,
							nr_lote_contab_pro_rata,
							nr_lote_contabil)
						values (nr_titulo_w, 		
							nr_seq_titulo_w, 		
							coalesce(dt_estorno_cancel_p,clock_timestamp()), 
							vl_saldo_titulo_w,		
							0,				
							0,
							0, 			
							cd_moeda_w, 			
							clock_timestamp(), 
							nm_usuario_p, 	
							cd_tipo_recebimento_w,	
							'I', 
							0, 			
							0,				
							'S',
							nr_seq_trans_fin_w,
							0,
							0,
							0);

						CALL gerar_titulo_rec_liq_cc(cd_estabelecimento_w, null, nm_usuario_p, nr_titulo_w, nr_seq_titulo_w);
						
						nr_titulo_contab_w	:= null;
						
						nr_titulo_contab_w := pls_gerar_tit_rec_liq_mens(nr_titulo_w, nr_seq_titulo_w, nm_usuario_p, nr_titulo_contab_w);
						
						if (nr_titulo_contab_w IS NOT NULL AND nr_titulo_contab_w::text <> '') then
							ds_titulos_contab_w	:= substr(ds_titulos_contab_w || nr_titulo_contab_w || ', ',1,4000);
						end if;
						
						CALL atualizar_saldo_tit_rec(nr_titulo_w,nm_usuario_p);

						update	titulo_receber
						set 	ie_situacao		= '3'
						where	nr_titulo			= nr_titulo_w
						and	vl_saldo_titulo		= 0
						and	ie_situacao		in ('2', '4');
					end if;
				ie_exclui_trib_w := 'S';	
				end if;
				
				-- 297984 	protocolo = #@nr_seq_protocolo_p#@

				-- 297985 - conta = #@nr_interno_conta#@

				-- 297986 cancelado por #@nm_usuario_p#@ em #@dt_canelamento_p#@ #@ds_observacao_titulo#@
				
				update	titulo_receber
				set	dt_liquidacao 		= coalesce(dt_estorno_cancel_p,clock_timestamp()),
						nr_sequencia_doc 	= substr(nr_titulo, length(nr_titulo) - 5, 5),
						nr_seq_protocolo 	 = NULL,
						nr_interno_conta 	 = NULL,
						ds_observacao_titulo 	= substr(wheb_mensagem_pck.get_texto(297984,'nr_seq_protocolo_p=' || nr_seq_protocolo_p) ||
									CASE WHEN coalesce(nr_interno_conta,0)=0 THEN  ''  ELSE wheb_mensagem_pck.get_texto(297985,'nr_interno_conta=' || nr_interno_conta) END  || chr(13) || chr(10) ||
								wheb_mensagem_pck.get_texto(297986,	'nm_usuario_p=' || nm_usuario_p ||
													';dt_cancelamento_p=' || clock_timestamp() ||
													';ds_observacao_titulo=' || coalesce(substr(ds_observacao_titulo,1,3800),' ')),1,4000)
				where 	nr_seq_protocolo 	= nr_seq_protocolo_p;		

			end if;
		
		end if;
		end;	
	end loop;
	close c01;
	
	if (ds_titulos_contab_w IS NOT NULL AND ds_titulos_contab_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(236517, wheb_mensagem_pck.get_texto(297988) || '=' || ds_titulos_contab_w); -- nr_titulo
	end if;

	ie_desvincular_nf_titulo_w := obter_param_usuario(85, 139, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_desvincular_nf_titulo_w);

	if (coalesce(ie_desvincular_nf_titulo_w,'S') <> 'N') then

		update	titulo_receber
		set	nr_seq_nf_saida	 = NULL,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario 	= nm_usuario_p
		where	nr_seq_nf_saida	in (SELECT	nr_sequencia
				from	nota_fiscal
				where 	nr_seq_protocolo = nr_seq_protocolo_p);

	end if;

	update 	protocolo_convenio
	set 	dt_integracao_cr 	 = NULL
	where 	nr_seq_protocolo 	= nr_seq_protocolo_p;
	
	if (ie_exclui_trib_w = 'S') then
		ds_mensagem_retorno_p 	:= wheb_mensagem_pck.get_texto(297989); -- desvinculacao completada
	else
		ds_mensagem_retorno_p 	:= wheb_mensagem_pck.get_texto(297990); --o saldo dos titulos eh diferente do valor original dos mesmos.
	end if;

else
	ds_mensagem_retorno_p := wheb_mensagem_pck.get_texto(297990); --o saldo dos titulos eh diferente do valor original dos mesmos.
end if;
											
CALL gerar_dashboard_regra(nr_seq_protocolo_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desvincular_titulo_protocolo (nr_seq_protocolo_p bigint, nm_usuario_p text, ds_mensagem_retorno_p INOUT text, dt_estorno_cancel_p timestamp default null) FROM PUBLIC;

