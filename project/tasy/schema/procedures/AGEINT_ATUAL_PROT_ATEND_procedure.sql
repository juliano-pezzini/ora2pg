-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_atual_prot_atend (cd_pessoa_fisica_p text, nm_usuario_p text, cd_protocolo_p text, ie_opcao_p text, ds_protocolo_p INOUT text) AS $body$
DECLARE


 /* O  = Obter protocolo
    F  = Finalizar protocolo 
    I  = Inserir protocolo integracao 
    PF = Atualizar pessoa fisica */
 	
													
 cd_protocolo_w ageint_protocolo_atend.cd_protocolo%TYPE;
 nr_sequencia_w ageint_dados_ura.nr_sequencia%TYPE;
 ie_status_w	ageint_dados_ura.ie_status%TYPE;

 PROCEDURE buscar_protocolo IS
 
;
BEGIN
		
 select max(apa.cd_protocolo)
    into STRICT  cd_protocolo_w
 	from  ageint_protocolo_atend apa 
 	where apa.nm_usuario = nm_usuario_p
 		and (coalesce(apa.cd_pessoa_fisica, 'null') = coalesce(cd_pessoa_fisica_p, 'null')
 		or (exists (SELECT 1 from pessoa_titular_convenio ptc where ptc.cd_pessoa_fisica = apa.cd_pessoa_fisica and ptc.cd_pessoa_titular = cd_pessoa_fisica_p)) 
		or (exists (select 1 from pessoa_titular_convenio ptc where ptc.cd_pessoa_titular = apa.cd_pessoa_fisica and ptc.cd_pessoa_fisica = cd_pessoa_fisica_p)))
 		and coalesce(dt_fim_atend::text, '') = '';
  		
 END;

 BEGIN
	 
IF (ie_opcao_p = 'O') THEN
	
 IF (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') THEN 

	buscar_protocolo;

	select max(nr_sequencia)
		into STRICT nr_sequencia_w
	from ageint_dados_ura 
		where cd_protocolo = cd_protocolo_w;

       select max(ie_status)
         into STRICT ie_status_w
         from ageint_dados_ura
        where nr_sequencia = nr_sequencia_w;
	
	IF (ie_status_w = 'E') 
	 AND (cd_protocolo_w IS NOT NULL AND cd_protocolo_w::text <> '') THEN
	 
	 update  ageint_protocolo_atend 
	 		set cd_pessoa_fisica = cd_pessoa_fisica_p,
	 		    dt_atualizacao = clock_timestamp(),
	 		    dt_atualizacao_nrec = clock_timestamp()
	 	where cd_protocolo = cd_protocolo_w
	 	and   coalesce(dt_fim_atend::text, '') = '';
	
	END IF;
 END IF;

	ds_protocolo_p := cd_protocolo_w;
 	
 ELSIF (ie_opcao_p = 'F') THEN
	
	update ageint_protocolo_atend 
	 	set dt_fim_atend = clock_timestamp(),
	 		dt_atualizacao = clock_timestamp(),
	 		dt_atualizacao_nrec = clock_timestamp()
	 where cd_protocolo = cd_protocolo_p
	 or (nm_usuario = nm_usuario_p
	 and    coalesce(dt_fim_atend::text, '') = '');
	
 ELSIF (ie_opcao_p = 'PF') THEN
	
	update ageint_protocolo_atend 
	 	set cd_pessoa_fisica = cd_pessoa_fisica_p,
	 		dt_atualizacao = clock_timestamp(),
	 		dt_atualizacao_nrec = clock_timestamp()
	 where coalesce(cd_pessoa_fisica::text, '') = ''
	 and   nm_usuario = nm_usuario_p
	 and   coalesce(dt_fim_atend::text, '') = '';
	
 ELSIF (ie_opcao_p = 'I') THEN
	
	cd_protocolo_w := NULL;
	
	select max(cd_protocolo)
		into STRICT  cd_protocolo_w
 	from  ageint_protocolo_atend
 		where nm_usuario = nm_usuario_p
 		and   coalesce(cd_pessoa_fisica, 'null') <> coalesce(cd_pessoa_fisica_p, 'null')
 		and   cd_protocolo <> cd_protocolo_p
 		and   coalesce(dt_fim_atend::text, '') = '';

 	IF (cd_protocolo_w IS NOT NULL AND cd_protocolo_w::text <> '') THEN 
 		update  ageint_protocolo_atend 
	 		set dt_fim_atend = clock_timestamp(),
	 		    dt_atualizacao = clock_timestamp(),
	 		    dt_atualizacao_nrec = clock_timestamp()
	 	where cd_protocolo = cd_protocolo_w
	 	and   coalesce(dt_fim_atend::text, '') = '';
	
	END IF;

 IF (cd_protocolo_p IS NOT NULL AND cd_protocolo_p::text <> '') then
	
	INSERT INTO ageint_protocolo_atend(nr_sequencia,
									   dt_inicio_atend, 
									   dt_atualizacao, 
									   nm_usuario, 
									   cd_protocolo, 
									   cd_pessoa_fisica,
									   dt_atualizacao_nrec,
									   nm_usuario_nrec)
									   values (nextval('ageint_protocolo_atend_seq'),
									   clock_timestamp(),
									   clock_timestamp(),
									   nm_usuario_p,
									   cd_protocolo_p,
									   cd_pessoa_fisica_p,
									   clock_timestamp(),
									   nm_usuario_p);
	ds_protocolo_p := cd_protocolo_w;
	END IF;
  END IF;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_atual_prot_atend (cd_pessoa_fisica_p text, nm_usuario_p text, cd_protocolo_p text, ie_opcao_p text, ds_protocolo_p INOUT text) FROM PUBLIC;

