-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE itens_mensalidade AS (ie_tipo_item varchar(10));


CREATE OR REPLACE PROCEDURE pls_gerar_relat_contab_mens ( dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_OUTORGANTE_w			bigint;
IE_TIPO_OPERACAO_w			varchar(10);
ie_tipo_contrato_w			varchar(10);
ie_preco_w				varchar(10);

vl_item_w				double precision;
vl_ato_cooperado_prin_w			double precision;
vl_ato_cooperado_aux_w			double precision;
vl_ato_nao_cooperado_w			double precision;
vl_tot_item_w				double precision;
vl_tot_ato_cooperado_prin_w		double precision;
vl_tot_ato_cooperado_aux_w		double precision;
vl_tot_ato_nao_cooperado_w		double precision;
vl_tot_outros_w				double precision;

ie_tipo_mensalidade_w			varchar(10);
nr_vetor_w				bigint;
i					bigint;
nr_seq_relat_cont_w			bigint;
dt_inicial_w				timestamp;
dt_final_w				timestamp;
type vetor is table of itens_mensalidade index by integer;
vetor_w				vetor;


C01 CURSOR FOR
	SELECT	IE_TIPO_OPERACAO
	from	PLS_TIPO_OPERACAO
	where	nr_seq_OUTORGANTE	= nr_seq_OUTORGANTE_w;

C02 CURSOR FOR
	SELECT	'PF'
	
	
union all

	SELECT	'PJ'
	;

C03 CURSOR FOR
	SELECT	VL_DOMINIO
	from	VALOR_DOMINIO
	where	cd_dominio	= 1669;

C04 CURSOR FOR
	SELECT	VL_DOMINIO
	from	VALOR_DOMINIO
	where	cd_dominio	= 1930;

C05 CURSOR FOR
	SELECT	coalesce(c.VL_ITEM,0),
		coalesce(c.VL_ATO_COOPERADO,0),
		coalesce(c.VL_ATO_AUXILIAR,0),
		coalesce(c.VL_ATO_NAO_COOPERADO,0)
	from	pls_mensalidade_seg_item	c,
		pls_mensalidade_segurado	b,
		pls_mensalidade			a,
		pls_plano			d,
		pls_lote_mensalidade	e
	where	c.nr_seq_mensalidade_seg	= b.nr_sequencia
	and	b.nr_seq_mensalidade		= a.nr_sequencia
	and	b.nr_seq_plano			= d.nr_sequencia
	and	a.nr_seq_lote			= e.nr_sequencia
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.dt_referencia			>= dt_inicial_w
	and	a.dt_referencia			<= dt_final_w
	and	c.IE_TIPO_ITEM			= ie_tipo_mensalidade_w
	and	d.ie_tipo_operacao		= ie_tipo_operacao_w
	and	d.ie_preco			= ie_preco_W
	and	d.ie_tipo_contratacao		= 'I'
	and e.ie_Status				= 2;

C06 CURSOR FOR
	SELECT	coalesce(c.VL_ITEM,0),
		coalesce(c.VL_ATO_COOPERADO,0),
		coalesce(c.VL_ATO_AUXILIAR,0),
		coalesce(c.VL_ATO_NAO_COOPERADO,0)
	from	pls_mensalidade_seg_item	c,
		pls_mensalidade_segurado	b,
		pls_mensalidade			a,
		pls_plano			d,
		pls_lote_mensalidade	e
	where	c.nr_seq_mensalidade_seg	= b.nr_sequencia
	and	b.nr_seq_mensalidade		= a.nr_sequencia
	and	b.nr_seq_plano			= d.nr_sequencia
	and a.nr_seq_lote			 = e.nr_sequencia
	and	coalesce(a.ie_cancelamento::text, '') = ''
	and	a.dt_referencia			>= dt_inicial_w
	and	a.dt_referencia			<= dt_final_w
	and	c.IE_TIPO_ITEM			= ie_tipo_mensalidade_w
	and	d.ie_tipo_operacao		= ie_tipo_operacao_w
	and	d.ie_preco			= ie_preco_W
	and	d.ie_tipo_contratacao		<> 'I'
	and e.ie_status				= 2;


BEGIN

delete	FROM w_pls_relat_contab_mens
where	nm_usuario	= nm_usuario_p;

select	max(nr_sequencia)
into STRICT	nr_seq_OUTORGANTE_w
from	PLS_OUTORGANTE
where	cd_estabelecimento	= cd_estabelecimento_p;

dt_inicial_w	:= trunc(dt_inicial_p,'dd');
dt_final_w	:= fim_dia(dt_final_p);

open C04;
loop
fetch C04 into
	ie_tipo_mensalidade_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	nr_vetor_w	:= vetor_w.count+1;
	vetor_w[nr_vetor_w].ie_tipo_item	:= ie_tipo_mensalidade_w;

	end;
end loop;
close C04;

open C01;
loop
fetch C01 into
	ie_tipo_operacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into
		ie_tipo_contrato_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		open C03;
		loop
		fetch C03 into
			ie_preco_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			i			:= 0;

			for i in 1..vetor_w.count loop
				ie_tipo_mensalidade_w	:= vetor_w[i].ie_tipo_item;

				vl_tot_item_w			:= 0;
				vl_tot_ato_cooperado_prin_w	:= 0;
				vl_tot_ato_cooperado_aux_w	:= 0;
				vl_tot_ato_nao_cooperado_w	:= 0;

				if (ie_tipo_contrato_w = 'PF') then
					open C05;
					loop
					fetch C05 into
						vl_item_w,
						vl_ato_cooperado_prin_w,
						vl_ato_cooperado_aux_w,
						vl_ato_nao_cooperado_w;
					EXIT WHEN NOT FOUND; /* apply on C05 */
						begin

						vl_tot_item_w			:= vl_tot_item_w + vl_item_w;
						vl_tot_ato_cooperado_prin_w	:= vl_tot_ato_cooperado_prin_w +  vl_ato_cooperado_prin_w;
						vl_tot_ato_cooperado_aux_w	:= vl_tot_ato_cooperado_aux_w  + vl_ato_cooperado_aux_w;
						vl_tot_ato_nao_cooperado_w	:= vl_tot_ato_nao_cooperado_w + vl_ato_nao_cooperado_w;

						end;
					end loop;
					close C05;

				elsif (ie_tipo_contrato_w = 'PJ') then
					open C06;
					loop
					fetch C06 into
						vl_item_w,
						vl_ato_cooperado_prin_w,
						vl_ato_cooperado_aux_w,
						vl_ato_nao_cooperado_w;
					EXIT WHEN NOT FOUND; /* apply on C06 */
						begin

						vl_tot_item_w			:= vl_tot_item_w + vl_item_w;
						vl_tot_ato_cooperado_prin_w	:= vl_tot_ato_cooperado_prin_w +  vl_ato_cooperado_prin_w;
						vl_tot_ato_cooperado_aux_w	:= vl_tot_ato_cooperado_aux_w  + vl_ato_cooperado_aux_w;
						vl_tot_ato_nao_cooperado_w	:= vl_tot_ato_nao_cooperado_w + vl_ato_nao_cooperado_w;

						end;
					end loop;
					close C06;
				end if;


				if (coalesce(vl_tot_item_w,0) <> 0) then
					vl_tot_outros_w	:= coalesce(vl_tot_item_w,0) - coalesce(vl_tot_ato_cooperado_prin_w,0) - coalesce(vl_tot_ato_cooperado_aux_w,0) - coalesce(vl_tot_ato_nao_cooperado_w,0);

					select	nextval('w_pls_relat_contab_mens_seq')
					into STRICT	nr_seq_relat_cont_w
					;

					insert into W_PLS_RELAT_CONTAB_MENS(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
							ie_tipo_item,ie_preco,ie_tipo_operacao,ie_tipo_contrato,vl_ato_cooperado_principal,
							vl_ato_cooperado_aux,vl_ato_nao_cooperado,vl_outros)
					values (	nr_seq_relat_cont_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
							vetor_w[i].ie_tipo_item,ie_preco_W,ie_tipo_operacao_w,ie_tipo_contrato_w,coalesce(vl_tot_ato_cooperado_prin_w,0),
							coalesce(vl_tot_ato_cooperado_aux_w,0),coalesce(vl_tot_ato_nao_cooperado_w,0),vl_tot_outros_w);
				end if;
			end loop;

			end;
		end loop;
		close C03;

		end;
	end loop;
	close C02;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_relat_contab_mens ( dt_inicial_p timestamp, dt_final_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

