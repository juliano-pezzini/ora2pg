-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_idade_gestacao (cd_pessoa_fisica_p text default null, nr_atendimento_p bigint default null, ie_opcao_p text DEFAULT NULL, dt_ig_p INOUT timestamp DEFAULT NULL, dt_ig_us_p INOUT timestamp DEFAULT NULL, dt_dpp_p INOUT timestamp DEFAULT NULL, dt_dpp_us_p INOUT timestamp DEFAULT NULL, qt_ig_sem_p INOUT bigint DEFAULT NULL, qt_ig_dia_p INOUT bigint DEFAULT NULL, qt_ig_sem_us_p INOUT bigint DEFAULT NULL, qt_ig_dia_us_p INOUT bigint DEFAULT NULL, qt_feto_p INOUT bigint DEFAULT NULL, nr_seq_queixa_p INOUT bigint DEFAULT NULL, qt_gestacoes_p INOUT bigint DEFAULT NULL, qt_natimortos_p INOUT bigint DEFAULT NULL, qt_parto_normal_p INOUT bigint DEFAULT NULL, qt_parto_cesario_p INOUT bigint DEFAULT NULL, qt_filhos_vivos_p INOUT bigint DEFAULT NULL, qt_filhos_mortos_p INOUT bigint DEFAULT NULL, qt_abortos_p INOUT bigint DEFAULT NULL, ie_nao_sabe_tipo_sang_p INOUT text DEFAULT NULL, ie_tipo_sanguineo_p INOUT text DEFAULT NULL, ie_fator_rh_p INOUT text DEFAULT NULL, ie_nao_sabe_tipo_sang_pai_p INOUT text DEFAULT NULL, ie_tipo_sanguineo_pai_p INOUT text DEFAULT NULL, ie_fator_rh_pai_p INOUT text DEFAULT NULL, ie_gemelaridade_p INOUT text DEFAULT NULL, ie_tipo_gemelaridade_p INOUT text DEFAULT NULL, nr_gestacao_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE

				 
/*				Opção 
Verificar campos para a da pasta Pré-Parto	PP 
Verificar campos para a da pasta História Preg.	HP 
Verificar campos para a da pasta Evolução	EV 
Verificar campos para a da pasta Primeira Cons.	PC 
Verificar campos para a pasta Exame físico 	EF 
*/
 
				 
dt_us_w				 timestamp;
dt_ig_w				 timestamp;
qt_ig_sem_us_w			 bigint;
qt_ig_dia_us_w			 bigint;
qt_total_dia_w			 bigint;
nr_atendimento_w 		 bigint;
qt_dias_dif_ig			 bigint;
qt_feto_w	 			 bigint;
cd_pessoa_fisica_w   	 varchar(10);
qt_reg_w				 bigint;
nr_sequencia_w       bigint;


BEGIN 
begin 
	 
if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then 
 
	select max(coalesce(nr_atendimento_mae,nr_atendimento_p)) 
	into STRICT	nr_atendimento_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
  
  
  cd_pessoa_fisica_w  := obter_pessoa_atendimento(nr_atendimento_w,'C');
  
  
 
	if ( ie_opcao_p = 'PP' ) then 
		 
 
		select	max(a.dt_ult_menstruacao), 
			max(a.DT_US), 
			max(a.QT_SEM_IG_ECOGRAFICA), 
			max(a.QT_IG_DIA_US), 
			max(a.qt_feto) 
		into STRICT	dt_ig_w, 
			dt_us_w, 
			qt_ig_sem_us_w, 
			qt_ig_dia_us_w, 
			qt_feto_w 
		from	parto a 
		where   a.nr_atendimento = nr_atendimento_w;
 
	end if;
	 
	If ( ie_opcao_p = 'HP' ) or ( ie_opcao_p = 'PP' ) then 
	 
  
  
		if	((coalesce(dt_ig_w::text, '') = '') or (coalesce(dt_us_w::text, '') = '') or (coalesce(qt_ig_sem_us_w::text, '') = '') or (coalesce(qt_ig_dia_us_w::text, '') = '')) then 
 
			select 	max(coalesce(dt_us_w,a.DT_EVOLUCAO)), 
				max(coalesce(qt_ig_sem_us_w,a.QT_IG_SEM_US)), 
				max(coalesce(qt_ig_dia_us_w,a.QT_IG_DIA_US)), 
				max(coalesce(qt_feto_w,a.NR_FETO)) 
			into STRICT	dt_us_w, 
				qt_ig_sem_us_w, 
				qt_ig_dia_us_w, 
				qt_feto_w 
			from  Med_Pac_Pre_Natal_Evol a 
			where nr_sequencia = (	SELECT	max(b.nr_sequencia) 
						from 	Med_Pac_Pre_Natal_Evol b, 
							Med_Pac_Pre_Natal d, 
							atendimento_paciente c 
						where  (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
						and   coalesce(b.dt_inativacao::text, '') = '' 
						and   b.dt_liberacao >= (clock_timestamp() - interval '308 days') 
						and   d.nr_atendimento = c.nr_atendimento 
						and   b.nr_seq_pre_natal = d.nr_sequencia 
						and   c.cd_pessoa_fisica = cd_pessoa_fisica_w);	
				 
		end if;	
     
	end if;	
 
	If ( ie_opcao_p = 'HP' ) or ( ie_opcao_p = 'PP' ) or ( ie_opcao_p = 'EV' ) then 
	 
		if	((coalesce(dt_ig_w::text, '') = '') or (coalesce(dt_us_w::text, '') = '') or (coalesce(qt_ig_sem_us_w::text, '') = '') or (coalesce(qt_ig_dia_us_w::text, '') = '')) then 
			 
			select 	max(coalesce(dt_ig_w,a.DT_ULTIMA_MENSTRUACAO)), 
				max(coalesce(dt_us_w,a.DT_US)), 
				max(coalesce(qt_ig_sem_us_w,a.QT_IG_SEM_US)), 
				max(coalesce(qt_ig_dia_us_w,a.QT_IG_DIA_US)), 
				max(coalesce(qt_feto_w,a.qt_feto)) 
			into STRICT	dt_ig_w, 
				dt_us_w, 
				qt_ig_sem_us_w, 
				qt_ig_dia_us_w, 
				qt_feto_w 
			from  med_pac_pre_natal a, 
				atendimento_paciente b 
			where  a.nr_atendimento	= b.nr_atendimento	 
            and   b.cd_pessoa_fisica   = cd_pessoa_fisica_w 
			and	a.nr_sequencia = 	( SELECT  max(e.nr_sequencia) 
                  from   med_pac_pre_natal e, 
                       atendimento_paciente f 
                  where	  e.nr_atendimento = f.nr_atendimento 
                  and	  f.cd_pessoa_fisica = b.cd_pessoa_fisica 
                  and	  f.cd_pessoa_fisica = cd_pessoa_fisica_w 
                  and  coalesce(e.dt_inativacao::text, '') = '');
			 
			 
		end if;
	end if;
	 
	If ( ie_opcao_p = 'HP' ) or ( ie_opcao_p = 'PP' ) or ( ie_opcao_p = 'EV' ) or ( ie_opcao_p = 'PC' ) then 
	 
		if	((coalesce(dt_ig_w::text, '') = '') or (coalesce(dt_us_w::text, '') = '') or (coalesce(qt_ig_sem_us_w::text, '') = '') or (coalesce(qt_ig_dia_us_w::text, '') = '')) then 
         
        select max(b.nr_sequencia) 
			into STRICT  nr_sequencia_w 
        from  atendimento_gravidez b, 
				  atendimento_paciente c 
			where  (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
			and   coalesce(b.dt_inativacao::text, '') = '' 
			and   b.dt_liberacao >= (clock_timestamp() - interval '308 days') 
			and   b.nr_atendimento = c.nr_atendimento 
			and   c.cd_pessoa_fisica = cd_pessoa_fisica_w;
        
        select coalesce(dt_ig_w,max(a.dt_ultima_menstruacao)), 
					 coalesce(dt_us_w,max(a.DT_US)), 
					 coalesce(qt_ig_sem_us_w,max(a.QT_IG_SEM_US)), 
					 coalesce(qt_ig_dia_us_w,max(a.QT_IG_DIA_US)), 
					 count(*), 
           max(qt_feto), 
           max(nr_gestacao), 
           max(nr_seq_queixa), 
           max(qt_gestacoes), 
           max(qt_natimortos), 
           max(qt_parto_normal), 
           max(qt_parto_cesario), 
           max(qt_filhos_vivos), 
           max(qt_filhos_mortos), 
           max(qt_abortos), 
           max(ie_nao_sabe_tipo_sang), 
           max(ie_tipo_sanguineo), 
           max(ie_fator_rh), 
           max(ie_nao_sabe_tipo_sang_pai), 
           max(ie_tipo_sanguineo_pai), 
           max(ie_fator_rh_pai), 
           max(ie_gemelaridade), 
           max(ie_tipo_gemelaridade) 
           -- max(substr(obter_dpp_us_atual_nasc(nr_sequencia,'S','PC'),1,5)) qt_sem_us_atual, 
           -- max(substr(obter_dpp_us_atual_nasc(nr_sequencia,'D','PC'),1,5)) qt_dia_us_atual 
			into STRICT	 dt_ig_w, 
					 dt_us_w, 
					 qt_ig_sem_us_w, 
					 qt_ig_dia_us_w, 
					 qt_reg_w, 
           qt_feto_w, 
           nr_gestacao_p, 
           nr_seq_queixa_p, 
           qt_gestacoes_p, 
           qt_natimortos_p, 
           qt_parto_normal_p, 
           qt_parto_cesario_p, 
           qt_filhos_vivos_p, 
           qt_filhos_mortos_p, 
           qt_abortos_p, 
           ie_nao_sabe_tipo_sang_p, 
           ie_tipo_sanguineo_p, 
           ie_fator_rh_p, 
				   ie_nao_sabe_tipo_sang_pai_p, 
           ie_tipo_sanguineo_pai_p, 
           ie_fator_rh_pai_p, 
           ie_gemelaridade_p, 
           ie_tipo_gemelaridade_p 
           --qt_sem_us_atual_p, 
           --qt_dia_us_atual_p 
			from	 atendimento_gravidez a 
			where 	 a.nr_sequencia = nr_sequencia_w;
			 
			if (qt_reg_w = 0) then 
 
				select	coalesce(dt_ig_w,max(a.dt_ultima_menstruacao)), 
						coalesce(dt_us_w,max(a.DT_AVALIACAO)), 
						coalesce(qt_ig_sem_us_w,max(a.QT_IG_SEM_US)), 
						coalesce(qt_ig_dia_us_w,max(a.QT_IG_DIA_US))						 
				into STRICT	dt_ig_w, 
						dt_us_w, 
						qt_ig_sem_us_w, 
						qt_ig_dia_us_w 
				from	enf_tri_obstetrica a 
				where  a.nr_sequencia = (SELECT max(b.nr_sequencia) 
							 from 	enf_tri_obstetrica b, 
								atendimento_paciente c 
							where  (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') 
							and   coalesce(b.dt_inativacao::text, '') = '' 
							and   b.dt_liberacao >= (clock_timestamp() - interval '308 days') 
							and   b.nr_atendimento = c.nr_atendimento 
							and   c.cd_pessoa_fisica = cd_pessoa_fisica_w);			
				 
			end if;
			 
		end if;
	end if;
 
	if (dt_us_w IS NOT NULL AND dt_us_w::text <> '') then 
		 
		qt_total_dia_w	:= coalesce(qt_ig_sem_us_w,0) * 7 + coalesce(qt_ig_dia_us_w,0);
		 
		qt_total_dia_w	:= qt_total_dia_w + (trunc(clock_timestamp()) - trunc(dt_us_w));
		 
		if ( ie_opcao_p = 'EV' ) then 
			qt_ig_sem_us_p	:= trunc(dividir(qt_total_dia_w,7));
			qt_ig_dia_us_p	:= qt_total_dia_w - (qt_ig_sem_us_p * 7);
		else		 
			qt_ig_sem_us_p	:= qt_ig_sem_us_w; --trunc(dividir(qt_total_dia_w,7));          OS 611054 
			qt_ig_dia_us_p	:= qt_ig_dia_us_w; --qt_total_dia_w - (qt_ig_sem_us_p * 7);     OS 611054		 
		end if;
		 
		dt_ig_us_p 	:= trunc(dt_us_w);
		 
		dt_dpp_us_p	:= trunc(dt_us_w) + ( 280 - (coalesce(qt_ig_sem_us_p,0) * 7) - coalesce(qt_ig_dia_us_p,0));
		 
	end if;
 
	if (dt_ig_w IS NOT NULL AND dt_ig_w::text <> '') then 
 
		qt_dias_dif_ig := (trunc(clock_timestamp()) - trunc(dt_ig_w));
 
		qt_ig_sem_p 	:= trunc(dividir(qt_dias_dif_ig,7));
		qt_ig_dia_p	:= qt_dias_dif_ig - (qt_ig_sem_p * 7);
		 
		dt_dpp_p 	:= trunc(dt_ig_w) + 280;
		 
		dt_ig_p 	:= trunc(dt_ig_w);
	end if;
 
   qt_feto_p := qt_feto_w;
end if;
 
exception 
	when others then 
	null;
end;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_idade_gestacao (cd_pessoa_fisica_p text default null, nr_atendimento_p bigint default null, ie_opcao_p text DEFAULT NULL, dt_ig_p INOUT timestamp DEFAULT NULL, dt_ig_us_p INOUT timestamp DEFAULT NULL, dt_dpp_p INOUT timestamp DEFAULT NULL, dt_dpp_us_p INOUT timestamp DEFAULT NULL, qt_ig_sem_p INOUT bigint DEFAULT NULL, qt_ig_dia_p INOUT bigint DEFAULT NULL, qt_ig_sem_us_p INOUT bigint DEFAULT NULL, qt_ig_dia_us_p INOUT bigint DEFAULT NULL, qt_feto_p INOUT bigint DEFAULT NULL, nr_seq_queixa_p INOUT bigint DEFAULT NULL, qt_gestacoes_p INOUT bigint DEFAULT NULL, qt_natimortos_p INOUT bigint DEFAULT NULL, qt_parto_normal_p INOUT bigint DEFAULT NULL, qt_parto_cesario_p INOUT bigint DEFAULT NULL, qt_filhos_vivos_p INOUT bigint DEFAULT NULL, qt_filhos_mortos_p INOUT bigint DEFAULT NULL, qt_abortos_p INOUT bigint DEFAULT NULL, ie_nao_sabe_tipo_sang_p INOUT text DEFAULT NULL, ie_tipo_sanguineo_p INOUT text DEFAULT NULL, ie_fator_rh_p INOUT text DEFAULT NULL, ie_nao_sabe_tipo_sang_pai_p INOUT text DEFAULT NULL, ie_tipo_sanguineo_pai_p INOUT text DEFAULT NULL, ie_fator_rh_pai_p INOUT text DEFAULT NULL, ie_gemelaridade_p INOUT text DEFAULT NULL, ie_tipo_gemelaridade_p INOUT text DEFAULT NULL, nr_gestacao_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

