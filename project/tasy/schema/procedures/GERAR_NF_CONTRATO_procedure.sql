-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_contrato ( cd_estabelecimento_p bigint, nr_nota_fiscal_p text, cd_serie_nf_P text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_cgc_p text, cd_pessoa_fisica_p text, cd_condicao_pagto_p bigint, dt_emissao_p timestamp, dt_entrada_saida_p timestamp, ie_tipo_nota_p text, cd_setor_digitacao_p bigint, ie_commit_p text, cd_natureza_nf_p bigint, nr_sequencia_p INOUT bigint, nr_contrato_p bigint, ie_tipo_nf_p text default null) AS $body$
DECLARE

				

nr_sequencia_nf_w            	bigint;
cd_natureza_operacao_w		smallint;
sg_estado_fornec_w		pessoa_juridica.sg_estado%type;
sg_estado_estab_w		pessoa_juridica.sg_estado%type;
cd_natureza_operacao_ne_w	smallint;
cd_natureza_operacao_fe_w	smallint;
cd_natureza_operacao_cad_w	smallint;
cd_natureza_op_nf_w		smallint;
ie_tipo_nota_w			varchar(03);
ds_objeto_contrato_w		varchar(2000);
dt_entrada_saida_w		timestamp;
cd_natureza_operacao_ww		bigint;
qt_notas_w			bigint;
cd_cgc_emitente_w		varchar(14);
cd_cgc_w			varchar(14);
ie_consiste_pj_w		varchar(1);
nr_nota_fiscal_w                nota_fiscal.nr_nota_fiscal%type;
ie_copia_anexo_contrato_w	varchar(1);
nr_sequencia_anexo_w		nota_fiscal_anexo.nr_sequencia%type;
qt_anexo_contrato_w	smallint	:= 0;

c01 CURSOR FOR
	SELECT	ds_arquivo,
		 		ds_arquivo_banco
	from 	contrato_arquivo
	where	nr_seq_contrato	= nr_contrato_p;

c01_w		c01%rowtype;


BEGIN
cd_cgc_emitente_w	:= cd_cgc_p;
cd_cgc_w		:= cd_cgc_p;
cd_natureza_operacao_w	:= cd_natureza_nf_p;
nr_nota_fiscal_w        := nr_nota_fiscal_p;

if (dt_entrada_saida_p IS NOT NULL AND dt_entrada_saida_p::text <> '') then
	dt_entrada_saida_w	:= to_date(to_char(dt_entrada_saida_p, 'dd/mm/yyyy') || ' ' ||  to_char(clock_timestamp(),'hh24:mi:ss') ,'dd/mm/yyyy hh24:mi:ss');
end if;

select	b.sg_estado
into STRICT	sg_estado_estab_w
from	estabelecimento a,
	pessoa_juridica b
where	a.cd_estabelecimento	= cd_estabelecimento_p
and	a.cd_cgc			= b.cd_cgc;

select	coalesce(max(cd_nat_oper_compra_ne),1102),
	coalesce(max(cd_nat_oper_compra_fe),2102)
into STRICT	cd_natureza_operacao_ne_w,
	cd_natureza_operacao_fe_w
from	parametro_compras
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(nr_contrato_p,0) <> 0) then
	select	a.ds_objeto_contrato
	into STRICT	ds_objeto_contrato_w
	from	contrato a
	where	a.nr_sequencia = nr_contrato_p;

    select	coalesce(obter_valor_param_usuario(40, 494, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N')
	into STRICT		ie_copia_anexo_contrato_w
	;
	
	if (ie_copia_anexo_contrato_w = 'S') then
		select	count(*)
		into STRICT		qt_anexo_contrato_w
		from		contrato_arquivo
		where	nr_seq_contrato	= nr_contrato_p;
	end if;
end if;

if (cd_natureza_nf_p = 0) then
    cd_natureza_operacao_w	:= cd_natureza_operacao_ne_w;
end if;

if (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then
	select	sg_estado
	into STRICT	sg_estado_fornec_w
	from	pessoa_juridica
	where	cd_cgc			= cd_cgc_emitente_w;
end if;

if (sg_estado_fornec_w	<> sg_estado_estab_w) and (cd_natureza_nf_p = 0) then
	cd_natureza_operacao_w	:= cd_natureza_operacao_fe_w;
end if;

select	coalesce(max(cd_natureza_operacao), 0)
into STRICT	cd_natureza_op_nf_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nota_p;

if (cd_natureza_op_nf_w > 0) and (cd_natureza_nf_p = 0)then
	cd_natureza_operacao_w	:= cd_natureza_op_nf_w;
end if;

if (coalesce(nr_contrato_p,0) <> 0) then
	select	cd_natureza_operacao
	into STRICT	cd_natureza_operacao_ww
	from	contrato
	where	nr_sequencia = nr_contrato_p;
	if (cd_natureza_operacao_ww IS NOT NULL AND cd_natureza_operacao_ww::text <> '') then
		cd_natureza_operacao_w := cd_natureza_operacao_ww;
	end if;
end if;
if (philips_param_pck.get_cd_pais <> 12) then --Japan n?o usa natureza de operac?o
if (cd_natureza_nf_p = 0) and (philips_param_pck.get_cd_pais <> 2)then --Mexico n?o usa natureza de operac?o
	select	coalesce(max(cd_natureza_operacao),0)
	into STRICT	cd_natureza_operacao_cad_w
	from	natureza_operacao
	where	cd_natureza_operacao	= cd_natureza_operacao_w;
	if (cd_natureza_operacao_cad_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(178177);
	end if;
end if;
end if;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_p
;

if (coalesce(ie_tipo_nf_p,'1') = '3') then
    nr_nota_fiscal_w := to_char(nr_sequencia_p);
end if;
	
select (coalesce(max(nr_sequencia_nf),0)+1)
into STRICT	nr_sequencia_nf_w
from	nota_fiscal
where	cd_estabelecimento	= cd_estabelecimento_p
and	coalesce(cd_cgc_emitente,'X')	= coalesce(cd_cgc_emitente_w,'X')
and	nr_nota_fiscal	= nr_nota_fiscal_w
and	cd_serie_nf	= cd_serie_nf_p;

if (ie_tipo_nota_p = 'E') then
	begin
	if (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') and (coalesce(cd_pessoa_fisica_p::text, '') = '') then
		ie_tipo_nota_w	:= 'EN';
	elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
		ie_tipo_nota_w	:= 'EF';
	end if;
	end;
elsif (ie_tipo_nota_p = 'S') then
	begin

	cd_cgc_emitente_w := obter_cgc_estabelecimento(cd_estabelecimento_p);
	
	if (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') and (coalesce(cd_pessoa_fisica_p::text, '') = '') then
		ie_tipo_nota_w	:= 'SD';
	elsif (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
		ie_tipo_nota_w	:= 'SF';
		cd_cgc_w	:= '';
	end if;
	end;
end if;

select	coalesce(obter_valor_param_usuario(40, 346, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N')
into STRICT	ie_consiste_pj_w
;

select 	count(*)
into STRICT	qt_notas_w
from 	nota_fiscal
where 	nr_nota_fiscal 		= nr_nota_fiscal_w
and	cd_cgc_emitente 	= cd_cgc_emitente_w
and	cd_serie_nf 		= cd_serie_nf_p
and	cd_estabelecimento 	= cd_estabelecimento_p
and	nr_sequencia_nf 	= nr_sequencia_nf_w;

if (qt_notas_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(178176);
end if;	

if (coalesce(ie_tipo_nota_w,'X') = 'EN') or (coalesce(ie_tipo_nota_w,'X') = 'EF') then
	
	if (coalesce(ie_consiste_pj_w,'N') = 'S') and (coalesce(cd_natureza_operacao_w,0) > 0) and (coalesce(cd_cgc_emitente_w,0) > 0) and (coalesce(obter_se_cnpj_natureza_oper_nf(cd_estabelecimento_p, cd_cgc_emitente_w, cd_natureza_nf_p),'S') = 'N') then
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(293694);
	end if;
	
elsif (coalesce(ie_tipo_nota_w,'X') = 'SD') or (coalesce(ie_tipo_nota_w,'X') = 'SF') then

	if (coalesce(ie_consiste_pj_w,'N') = 'S') and (coalesce(cd_natureza_operacao_w,0) > 0) and (coalesce(cd_cgc_w,0) > 0) and (coalesce(obter_se_cnpj_natureza_oper_nf(cd_estabelecimento_p, cd_cgc_w, cd_natureza_nf_p),'S') = 'N') then
		
		CALL wheb_mensagem_pck.exibir_mensagem_abort(293694);
	end if;
end if;	
	
insert into nota_fiscal(
	cd_estabelecimento,
	cd_cgc_emitente,
	cd_cgc,
	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf,
	cd_operacao_nf,
	dt_emissao,
	dt_entrada_saida,
	ie_acao_nf,
	ie_emissao_nf,
	ie_tipo_frete,
	vl_mercadoria,
	vl_total_nota,
	qt_peso_bruto,
	qt_peso_liquido,
	dt_atualizacao,
	nm_usuario,
	cd_condicao_pagamento,	
	vl_ipi,
	vl_descontos,
	vl_frete,
	vl_seguro,
	vl_despesa_acessoria,
	cd_natureza_operacao,
	vl_desconto_rateio,
	ie_situacao,
	nr_lote_contabil,
	nr_sequencia,
	cd_pessoa_fisica,
	ie_tipo_nota,
	cd_setor_digitacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nr_contrato,
	ds_observacao)
values (	cd_estabelecimento_p,
	cd_cgc_emitente_w,
	cd_cgc_w,
	cd_serie_nf_p,
	nr_nota_fiscal_w,
	nr_sequencia_nf_w,
	cd_operacao_nota_p,
	coalesce(dt_emissao_p, trunc(clock_timestamp())),
	coalesce(dt_entrada_saida_w, clock_timestamp()),
	'1',
	'0',
	0,
	0,
	0,
	0,
	0,
	clock_timestamp(),
	nm_usuario_p,
	CASE WHEN cd_condicao_pagto_p=0 THEN  null  ELSE cd_condicao_pagto_p END ,
	0,
	0,
	0,
	0,
	0,
	cd_natureza_operacao_w,
	0,
	'1',
 	0,
	nr_sequencia_p,
	cd_pessoa_fisica_p,
	ie_tipo_nota_w,
	cd_setor_digitacao_p,
	nm_usuario_p,
	clock_timestamp(),
	nr_contrato_p,
	CASE WHEN coalesce(nr_contrato_p,0)=0 THEN ''  ELSE wheb_mensagem_pck.get_texto(310499,'NR_CONTRATO_P='|| NR_CONTRATO_P ||';DS_OBJETO_CONTRATO_W='|| DS_OBJETO_CONTRATO_W) END );
					/*Nota Fiscal gerada pelo contrato: #@NR_CONTRATO_P#@ - #@DS_OBJETO_CONTRATO_W#@*/

CALL gerar_historico_nota_fiscal(nr_sequencia_p, nm_usuario_p, '8', wheb_mensagem_pck.get_Texto(310504));
								/*'Nota gerada a partir do contrato'*/

if (qt_anexo_contrato_w > 0) then

	open c01;
	loop
	fetch c01 into	
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	nextval('nota_fiscal_anexo_seq')
		into STRICT		nr_sequencia_anexo_w
		;
								
		insert into nota_fiscal_anexo(nr_sequencia,
			 dt_atualizacao,
			 nm_usuario,
			 dt_atualizacao_nrec,
			 nm_usuario_nrec,
			 nr_seq_nota,
			 ds_arquivo,
			 ds_arquivo_banco)
		values ( nr_sequencia_anexo_w ,
			 		clock_timestamp(),
			 		nm_usuario_p,
			 		clock_timestamp(),
			 		nm_usuario_p,
				 	nr_sequencia_p,
				 	c01_w.ds_arquivo,
				 	c01_w.ds_arquivo_banco);
		end;
	end loop;
	close c01;
end if;

if (coalesce(ie_commit_p,'S') = 'S') then /* Matheus OS 177517 usado na integracao */
	COMMIT;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_contrato ( cd_estabelecimento_p bigint, nr_nota_fiscal_p text, cd_serie_nf_P text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_cgc_p text, cd_pessoa_fisica_p text, cd_condicao_pagto_p bigint, dt_emissao_p timestamp, dt_entrada_saida_p timestamp, ie_tipo_nota_p text, cd_setor_digitacao_p bigint, ie_commit_p text, cd_natureza_nf_p bigint, nr_sequencia_p INOUT bigint, nr_contrato_p bigint, ie_tipo_nf_p text default null) FROM PUBLIC;

