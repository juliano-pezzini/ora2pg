-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_cobertura_orcamento (nr_seq_orcamento_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_estabelecimento_w	smallint;
cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
cd_tipo_acomodacao_w	smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
dt_orcamento_w		timestamp;
ie_tipo_atendimento_w	smallint;
nr_atendimento_w	bigint;
ie_autorizacao_w	varchar(3);
cd_material_w		bigint;
ie_tipo_convenio_w	smallint;
ds_ret_w		bigint;
ds_erro_w		varchar(255);
nr_seq_proc_interno_w	bigint;
ie_regra_w		orcamento_paciente_proc.ie_regra_plano%type;

C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		coalesce(nr_seq_proc_interno,0) nr_seq_proc_interno,
		qt_procedimento,
		nr_sequencia,
		coalesce(nr_seq_exame,0) nr_seq_exame
	from	orcamento_paciente_proc
	where	nr_sequencia_orcamento = nr_seq_orcamento_p
	order by nr_sequencia;	
	
C02 CURSOR FOR
	SELECT	cd_material,
		qt_material,
		nr_sequencia
	from	orcamento_paciente_mat
	where	nr_sequencia_orcamento = nr_seq_orcamento_p
	order by nr_sequencia;	


C01_w	C01%rowtype;
C02_w	C02%rowtype;


BEGIN

select	max(cd_estabelecimento),
	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano),
	max(cd_tipo_acomodacao),
	max(dt_orcamento),
	max(ie_tipo_atendimento),
	coalesce(max(nr_atendimento),0),
	max(obter_tipo_convenio(cd_convenio))
into STRICT	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_tipo_acomodacao_w,
	dt_orcamento_w,
	ie_tipo_atendimento_w,
	nr_atendimento_w,
	ie_tipo_convenio_w
from 	orcamento_paciente
where 	nr_sequencia_orcamento = nr_seq_orcamento_p;

if (coalesce(ie_tipo_atendimento_w::text, '') = '') and (nr_atendimento_w > 0) then
	
	select 	max(ie_tipo_atendimento)
	into STRICT	ie_tipo_atendimento_w
	from 	atendimento_paciente
	where 	nr_atendimento = nr_atendimento_w;
	
end if;

open C01;
loop
fetch C01 into	
	C01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	cd_procedimento_w	:= C01_w.cd_procedimento;
	ie_origem_proced_w	:= C01_w.ie_origem_proced;
	nr_seq_proc_interno_w	:= C01_w.nr_seq_proc_interno;
	ie_regra_w		:= null;
	
	if (C01_w.nr_seq_proc_interno > 0) then
	
	
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(C01_w.nr_seq_proc_interno, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, 0, cd_procedimento_w, ie_origem_proced_w, 0, dt_orcamento_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, 0, 0, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;	
	
	end if;
	
	if (C01_w.nr_seq_exame > 0) then				
		SELECT * FROM Obter_Exame_Lab_Convenio(C01_w.nr_seq_exame, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, C01_w.nr_seq_proc_interno, null, cd_plano_w, ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, ds_ret_w, dt_orcamento_w) INTO STRICT ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, ds_ret_w;
	end if;
	
	SELECT * FROM consiste_proc_orc(nr_seq_orcamento_p, cd_procedimento_w, ie_origem_proced_w, C01_w.qt_procedimento, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, nr_seq_proc_interno_w, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;
			
	update	orcamento_paciente_proc
	set 	cd_procedimento		= cd_procedimento_w,
		ie_origem_proced	= ie_origem_proced_w,
		ie_autorizacao		= ie_autorizacao_w,
		ie_regra_plano		= ie_regra_w
	where 	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and 	nr_sequencia		= C01_w.nr_sequencia;	
	
	end;
end loop;
close C01;


open C02;
loop
fetch C02 into	
	C02_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	cd_material_w	:= C02_w.cd_material;
	ie_regra_w	:= null;
	
	SELECT * FROM consiste_mat_orc(nr_seq_orcamento_p, cd_material_w, C02_w.qt_material, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;
						
	update	orcamento_paciente_mat
	set 	ie_autorizacao	= ie_autorizacao_w,
		ie_regra_plano	= ie_regra_w
	where 	nr_sequencia_orcamento	= nr_seq_orcamento_p
	and 	nr_sequencia		= C02_w.nr_sequencia;
	
	end;
end loop;
close C02;	

CALL calcular_orcamento_paciente(nr_seq_orcamento_p, nm_usuario_p, cd_estabelecimento_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_cobertura_orcamento (nr_seq_orcamento_p bigint, nm_usuario_p text) FROM PUBLIC;

