-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_receber_pf ( cd_estabelecimento_p bigint, dt_emissao_p timestamp, dt_vencimento_p timestamp, nm_usuario_p text, vl_titulo_p bigint, nr_seq_conta_p bigint, nr_seq_carteira_p bigint, ie_socio_p text) AS $body$
DECLARE


ie_erro_w				numeric(1)	:= 0;
ie_forma_pagamento_w		numeric(2)	:= 0;
nr_titulo_w			numeric(10,0)	:= 0;
dt_base_w			timestamp		:= clock_timestamp();
vl_total_w			numeric(15,2)	:= 0;
cd_moeda_padrao_w		numeric(5,0)	:= 0;
cd_tipo_portador_w			numeric(5,0)   	 := 0;
ie_origem_titulo_w			varchar(10)	:= '2';
ie_situacao_w			varchar(1)	:= '1';
cd_estab_financeiro_w		bigint;
nr_seq_classe_w			bigint	:= null;
cd_convenio_conta_w		bigint	:= null;
ie_gerar_imposto_w			varchar(1);
nr_seq_nf_saida_w			bigint;
nr_seq_trans_fin_baixa_w		bigint;
vl_base_juros_w			double precision;
tx_multa_w			double precision;
tx_juros_w			double precision;
cd_portador_w			smallint;
cd_pessoa_fisica_w		varchar(10);
ds_erro_w			varchar(2000);

C01 CURSOR FOR
	SELECT	cd_pessoa_fisica
	from 	pessoa_fisica
	where	((ie_socio = ie_socio_p) or ( ie_socio_p = 'N'));


BEGIN


ie_erro_w 			:= 0;


/* seleciona dados do parametro_contas_receber erro(1)*/

if (ie_erro_w = 0) then
	select 	coalesce(max(cd_moeda_padrao),1)
 	into STRICT 	cd_moeda_padrao_w
 	from 	parametro_contas_receber
 	where	cd_estabelecimento  = cd_estabelecimento_p;
end if;

/*
SELECT  cd_banco
into	cd_portador_w
FROM    banco_estabelecimento_v
WHERE   nr_sequencia = nr_seq_conta_p;
*/
if (coalesce(vl_titulo_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(332496);
end if;

if (coalesce(dt_emissao_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(332503);
end if;

if (coalesce(dt_vencimento_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(332504);
end if;

OPEN  C01;
LOOP
FETCH c01 into
	cd_pessoa_fisica_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	begin

	insert	into titulo_receber(
		nr_titulo,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_emissao,
		dt_vencimento,
		dt_pagamento_previsto,
		vl_titulo,
		vl_saldo_titulo,
		vl_saldo_juros,
		vl_saldo_multa,
		cd_moeda,
		cd_portador,
		cd_tipo_portador,
		ie_situacao,
		ie_tipo_emissao_titulo,
		ie_origem_titulo,
		ie_tipo_titulo,
		ie_tipo_inclusao,
		cd_pessoa_fisica,
		tx_juros,
		cd_tipo_taxa_juro,
		tx_multa,
		cd_tipo_taxa_multa,
		tx_desc_antecipacao,
		NR_SEQ_CARTEIRA_COBR,
		nr_seq_conta_banco)
	values (nextval('titulo_seq'),
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_emissao_p,
		dt_vencimento_p,
		dt_vencimento_p,
		vl_titulo_p,
		vl_titulo_p,
		0,
		0,
		cd_moeda_padrao_w,
		0, --*
		0, --cd_tipo_portador_w,--*
		ie_situacao_w,
		3, --ie_tipo_emissao_titulo_w,--*
		9, --ie_origem_titulo_w,--*
		1, --ie_tipo_titulo_w,--*
		2, --ie_tipo_inclusao_w,--*
		cd_pessoa_fisica_w,
		0,--*
		2, --cd_tipo_taxa_juro_p,--*
		0,--*
		2, --cd_tipo_taxa_multa_p,--*
		0, --tx_desc_antecip_p);--*
		nr_seq_carteira_p,
		nr_seq_conta_p);
	end;

end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_receber_pf ( cd_estabelecimento_p bigint, dt_emissao_p timestamp, dt_vencimento_p timestamp, nm_usuario_p text, vl_titulo_p bigint, nr_seq_conta_p bigint, nr_seq_carteira_p bigint, ie_socio_p text) FROM PUBLIC;

