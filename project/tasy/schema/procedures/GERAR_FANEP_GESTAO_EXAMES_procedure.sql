-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fanep_gestao_exames ( cd_pessoa_fisica_p text, cd_medico_anestesista_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_sequencia_p INOUT bigint, nm_usuario_p text, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_prescricao_p bigint default null) AS $body$
DECLARE

						
nr_sequencia_w 		bigint;
nr_sequencia_proc_w 	bigint;	
nr_prescricao_w		bigint;
dt_processo_w		timestamp;

cd_procedimento_w 	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_sequencia_proc_ww	bigint;
qt_proced_w				bigint;
nr_minuto_duracao_w		bigint;
cd_estabelecimento_w estabelecimento.cd_estabelecimento%type;

c01 CURSOR FOR
SELECT 	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno
from	agenda_paciente_proc
where 	nr_sequencia = nr_seq_agenda_p;

c02 CURSOR FOR
SELECT 	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno
from 	prescr_procedimento b,
		prescr_medica a
where	a.nr_prescricao = b.nr_prescricao 
and		a.nr_prescricao = nr_prescricao_p
and		coalesce(nr_seq_exame::text, '') = '';


BEGIN

if (coalesce(nr_atendimento_p,0) > 0) then
	select	max(a.nr_minuto_duracao),
            max(b.cd_estabelecimento)
	into STRICT	   nr_minuto_duracao_w,
            cd_estabelecimento_w
	from	   agenda_paciente a,
            agenda b
	where	   a.cd_agenda    = b.cd_agenda
   and      a.nr_sequencia = nr_seq_agenda_p;
	
	select 	max(nr_sequencia)
	into STRICT	nr_sequencia_w
	from 	pepo_cirurgia
	where 	nr_atendimento = nr_atendimento_p
	and	trunc(dt_cirurgia) = trunc(clock_timestamp());
	
	if  not(coalesce(nr_sequencia_w,0) > 0) then
		select 	nextval('pepo_cirurgia_seq')
		into STRICT	nr_sequencia_w
		;

		insert into pepo_cirurgia(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			cd_pessoa_fisica,
			dt_cirurgia,
			cd_medico_anestesista,
			nr_atendimento,
			ie_carater_cirurgia,
			qt_minutos_prev_duracao,
			ie_tipo_procedimento,
         cd_estabelecimento)
		values (nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_pessoa_fisica_p,
			clock_timestamp(),
			cd_medico_anestesista_p,
			nr_atendimento_p,
			'E',
			nr_minuto_duracao_w,
			'F',
         cd_estabelecimento_w);

	end if;
end if;
/*
if ((nr_seq_proc_interno_p is not null) and (nr_seq_proc_interno_p > 0)) then
	
	select 	pepo_cirurgia_proc_seq.nextval 
	into	nr_sequencia_proc_w
	from 	dual;	
	
	insert into pepo_cirurgia_proc
		   (nr_sequencia,
		    dt_atualizacao,
		    nm_usuario,
		    nr_seq_pepo,
		    nr_seq_proc_interno,
		    cd_procedimento,
		    ie_origem_proced)
	values	   (nr_sequencia_proc_w,
		    sysdate,
		    nm_usuario_p,
		    nr_sequencia_w,
		    nr_seq_proc_interno_p,
		    cd_procedimento_p,
		    ie_origem_proced_p);
end if;
*/
		
if (coalesce(nr_seq_agenda_p,0) > 0) then
	update	agenda_paciente
	set	nr_seq_pepo	= nr_sequencia_w
	where	nr_sequencia 	= nr_seq_agenda_p;

	select	coalesce(max(nr_prescricao),0)
	into STRICT	nr_prescricao_w
	from 	prescr_medica
	where	nr_seq_agenda = nr_seq_agenda_p;
	
	if (nr_prescricao_w > 0) then
		update	pepo_cirurgia
		set	nr_prescricao	= nr_prescricao_w
		where	nr_sequencia	= nr_sequencia_w;
		
		update prescr_medica
		set 	nr_seq_pepo = nr_sequencia_w,
			nr_atendimento = nr_atendimento_p
		where   nr_prescricao = nr_prescricao_w;
	end if;	
end if;	

open C01;
loop
fetch C01 into	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	
	select 	nextval('pepo_cirurgia_proc_seq')
	into STRICT	nr_sequencia_proc_ww
	;
	
	insert into pepo_cirurgia_proc(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_pepo,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced)
	values (nr_sequencia_proc_ww,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_w,
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w);
end loop;
close c01;

open C02;
loop
fetch C02 into	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	
	select  count(*)
	into STRICT	qt_proced_w
	from 	pepo_cirurgia_proc
	where	nr_seq_pepo = nr_sequencia_w
	and	cd_procedimento = cd_procedimento_w;
	
	if 	not(coalesce(qt_proced_w,0) > 0) then 	
		select 	nextval('pepo_cirurgia_proc_seq')
		into STRICT	nr_sequencia_proc_ww
		;
		
		if     (((cd_procedimento_w = cd_procedimento_p) and
		         coalesce(ie_origem_proced_p,0) = coalesce(ie_origem_proced_w,0)) or (nr_seq_proc_interno_w = nr_seq_proc_interno_p)) then
		
			insert into pepo_cirurgia_proc(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_pepo,
				nr_seq_proc_interno,
				cd_procedimento,
				ie_origem_proced,
				ie_proc_principal)
			values (nr_sequencia_proc_ww,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_w,
				nr_seq_proc_interno_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				'S');
		
		else
		
			insert into pepo_cirurgia_proc(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_pepo,
				nr_seq_proc_interno,
				cd_procedimento,
				ie_origem_proced)
			values (nr_sequencia_proc_ww,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_w,
				nr_seq_proc_interno_w,
				cd_procedimento_w,
				ie_origem_proced_w);
		end if;
	end if;	
end loop;
close c02;
	
nr_sequencia_p := nr_sequencia_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fanep_gestao_exames ( cd_pessoa_fisica_p text, cd_medico_anestesista_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_sequencia_p INOUT bigint, nm_usuario_p text, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_prescricao_p bigint default null) FROM PUBLIC;

