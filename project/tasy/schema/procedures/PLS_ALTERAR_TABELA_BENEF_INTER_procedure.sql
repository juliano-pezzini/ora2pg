-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_alterar_tabela_benef_inter ( nr_seq_segurado_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_nova_p bigint, ie_tipo_alteracao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/*	ie_tipo_alteracao_p 
	B - tabela do beneficiário 
	D - tabela do beneficiário e seus dependetes 
	T - todos os beneficiários com o produto selecionado 
*/
 
 
nr_seq_segurado_w		bigint;
nr_seq_tabela_ant_w		bigint;
nm_tabela_ant_w			varchar(255);
nr_seq_tabela_gerada_w		bigint;
nm_tabela_atual_w		varchar(255);
nr_seq_tabela_w			bigint;
nr_seq_tabela_atual_w		bigint;
dt_fim_vigencia_w		timestamp;
nr_seq_intercambio_w		bigint;

c01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_segurado 
	where	((nr_sequencia	= nr_seq_segurado_p) 
	or (nr_seq_titular	= nr_seq_segurado_p)) 
	and	nr_seq_plano	= nr_seq_plano_p 
	and	coalesce(dt_rescisao::text, '') = '' 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	and	ie_tipo_alteracao_p	= 'D' 
	order by	nr_seq_titular desc;

c02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_segurado 
	where	nr_seq_intercambio	= nr_seq_intercambio_w 
	and	nr_seq_plano	= nr_seq_plano_p 
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	and	ie_tipo_alteracao_p	= 'T' 
	order by	nr_seq_titular desc;


BEGIN 
 
select	max(nr_seq_intercambio) 
into STRICT	nr_seq_intercambio_w 
from	pls_segurado 
where	nr_sequencia	= nr_seq_segurado_p;
 
if (ie_tipo_alteracao_p in ('B','D','T')) then 
	nr_seq_tabela_gerada_w	:= nr_seq_tabela_nova_p;
 
	select	nm_tabela, 
		coalesce(dt_fim_vigencia,clock_timestamp()) 
	into STRICT	nm_tabela_atual_w, 
		dt_fim_vigencia_w 
	from	pls_tabela_preco 
	where	nr_sequencia	= nr_seq_tabela_gerada_w;
	 
	if (dt_fim_vigencia_w < clock_timestamp()) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(178071);
	end if;	
 
	if (ie_tipo_alteracao_p = 'B') and (coalesce(nr_seq_segurado_p,0) <> 0) then 
		 
		select	nr_seq_tabela, 
			substr(obter_descricao_padrao('PLS_TABELA_PRECO','NM_TABELA',nr_seq_tabela),1,255) 
		into STRICT	nr_seq_tabela_ant_w, 
			nm_tabela_ant_w 
		from	pls_segurado 
		where	nr_sequencia	= nr_seq_segurado_p;
		 
		update	pls_segurado 
		set	nm_usuario	= nm_usuario_p, 
			dt_atualizacao	= clock_timestamp(), 
			nr_seq_tabela	= nr_seq_tabela_gerada_w 
		where	nr_sequencia	= nr_seq_segurado_p;
		 
		CALL pls_gerar_vl_seg_intercambio(null, nr_seq_segurado_p, 'A', 
				cd_estabelecimento_p, nm_usuario_p, 'S', 
				'N','N', 'N');
				 
		/* Gerar histórico */
 
		CALL pls_gerar_segurado_historico( 
			nr_seq_segurado_p, '3', clock_timestamp(), 
			'Mudança individual de tabela de preço', 
			'Alterada tabela de preço de '||nr_seq_tabela_ant_w||' - '||nm_tabela_ant_w || ' para ' || 
				nr_seq_tabela_gerada_w || ' - ' || nm_tabela_atual_w, 
			null, 
			null, null, null, 
			clock_timestamp(), null, null, 
			null, null, null, 
			null, nm_usuario_p, 'S');
	elsif (ie_tipo_alteracao_p = 'D') and (coalesce(nr_seq_segurado_p,0) <> 0) then 
		open c01;
		loop 
		fetch c01 into 
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			select	nr_seq_tabela, 
				substr(obter_descricao_padrao('PLS_TABELA_PRECO','NM_TABELA',nr_seq_tabela),1,255) 
			into STRICT	nr_seq_tabela_ant_w, 
				nm_tabela_ant_w 
			from	pls_segurado 
			where	nr_sequencia	= nr_seq_segurado_w;
			 
			update	pls_segurado 
			set	nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp(), 
				nr_seq_tabela	= nr_seq_tabela_gerada_w 
			where	nr_sequencia	= nr_seq_segurado_w;
			 
			CALL pls_gerar_vl_seg_intercambio(null, nr_seq_segurado_w, 'A', 
				cd_estabelecimento_p, nm_usuario_p, 'S', 
				'N','N', 'N');
			/* Gerar histórico */
 
			CALL pls_gerar_segurado_historico( 
				nr_seq_segurado_w, '3', clock_timestamp(), 
				'Mudança de tabela para titular e dependentes', 
				'Alterada tabela de preço de '||nr_seq_tabela_ant_w||' - '||nm_tabela_ant_w || ' para ' || 
					nr_seq_tabela_gerada_w || ' - ' || nm_tabela_atual_w, 
				null, 
				null, null, null, 
				clock_timestamp(), null, null, 
				null, null, null, 
				null, nm_usuario_p, 'S');
			end;
		end loop;
		close c01;
	elsif (ie_tipo_alteracao_p = 'T') and (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then 
		open c02;
		loop 
		fetch c02 into 
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin 
			select	nr_seq_tabela, 
				substr(obter_descricao_padrao('PLS_TABELA_PRECO','NM_TABELA',nr_seq_tabela),1,255) 
			into STRICT	nr_seq_tabela_ant_w, 
				nm_tabela_ant_w 
			from	pls_segurado 
			where	nr_sequencia	= nr_seq_segurado_w;
			 
			update	pls_segurado 
			set	nm_usuario	= nm_usuario_p, 
				dt_atualizacao	= clock_timestamp(), 
				nr_seq_tabela	= nr_seq_tabela_gerada_w 
			where	nr_sequencia	= nr_seq_segurado_w;
			 
			CALL pls_gerar_vl_seg_intercambio(null, nr_seq_segurado_w, 'A', 
				cd_estabelecimento_p, nm_usuario_p, 'S', 
				'N','N', 'N');
					 
			/* Gerar histórico */
 
			CALL pls_gerar_segurado_historico( 
				nr_seq_segurado_w, '3', clock_timestamp(), 
				'Mudança de tabela para todos os beneficiários do produto', 
				'Alterada tabela de preço de '||nr_seq_tabela_ant_w||' - '||nm_tabela_ant_w || ' para ' || 
					nr_seq_tabela_gerada_w || ' - ' || nm_tabela_atual_w, 
				null, 
				null, null, null, 
				clock_timestamp(), null, null, 
				null, null, null, 
				null, nm_usuario_p, 'S');
			end;
		end loop;
		close c02;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alterar_tabela_benef_inter ( nr_seq_segurado_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_nova_p bigint, ie_tipo_alteracao_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

