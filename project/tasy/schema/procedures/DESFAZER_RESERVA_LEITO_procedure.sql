-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_reserva_leito ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_setor_desejado_w	integer;
cd_unidade_basica_w	varchar(10);
cd_unidade_compl_w	varchar(10);
cd_pessoa_fisica_w	varchar(10);
nm_paciente_reserva_GV_w	varchar(255);
ie_status_unidade_w	varchar(3);
cd_paciente_reserva_w	varchar(10);
nm_pac_reserva_w	varchar(255);
ie_limpar_setor_desej_w	varchar(1);
ie_status_desfazer_reserva_w		varchar(1);
ie_bed_request_w		varchar(1);
cd_evolucao_w bigint;

BEGIN

select	cd_pessoa_fisica,
	cd_setor_desejado,
	cd_unidade_basica,
	cd_unidade_compl,
	nm_paciente,
    cd_evolucao
into STRICT	cd_pessoa_fisica_w,
	cd_setor_desejado_w,
	cd_unidade_basica_w,
	cd_unidade_compl_w,
	nm_paciente_reserva_GV_w,
    cd_evolucao_w
from	gestao_vaga
where	nr_sequencia	= nr_sequencia_p;

begin
select	coalesce(max(ie_status_unidade),'L'),
	max(cd_paciente_reserva),
	max(nm_pac_reserva)
into STRICT	ie_status_unidade_w,
	cd_paciente_reserva_w,
	nm_pac_reserva_w
from	unidade_atendimento
where	cd_unidade_basica	= cd_unidade_basica_w	
and	cd_unidade_compl	= cd_unidade_compl_w
and	cd_setor_atendimento	= cd_setor_desejado_w;
exception
when others then
	ie_status_unidade_w 	:= 'L';
	cd_paciente_reserva_w 	:= null;
	nm_pac_reserva_w	:= null;
end;

ie_limpar_setor_desej_w := Obter_param_Usuario(1002, 137, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_limpar_setor_desej_w);
ie_status_desfazer_reserva_w := Obter_param_Usuario(1002, 155, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_status_desfazer_reserva_w);
ie_bed_request_w := Obter_param_Usuario(281, 1642, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_bed_request_w);

update	gestao_vaga
set	ie_status		= coalesce(ie_status_desfazer_reserva_w, 'A'),
	cd_setor_desejado 	= CASE WHEN ie_limpar_setor_desej_w='S' THEN null  ELSE cd_setor_desejado END ,
	cd_unidade_basica 	= CASE WHEN ie_limpar_setor_desej_w='S' THEN null  ELSE cd_unidade_basica END ,
	cd_unidade_compl 	= CASE WHEN ie_limpar_setor_desej_w='S' THEN null  ELSE cd_unidade_compl END
where	nr_sequencia		= nr_sequencia_p;

if (ie_bed_request_w='S') then
    CALL clinical_notes_pck.soap_data_after_delete(cd_evolucao_w);
end if;

if	(cd_paciente_reserva_w IS NOT NULL AND cd_paciente_reserva_w::text <> '' AND cd_paciente_reserva_w = cd_pessoa_fisica_w) or
	(nm_pac_reserva_w IS NOT NULL AND nm_pac_reserva_w::text <> '' AND nm_pac_reserva_w = nm_paciente_reserva_GV_w) then
	begin
	if (ie_status_unidade_w = 'R')	then
		update	unidade_atendimento
		set	ie_status_unidade	= CASE WHEN ie_status_unidade='R' THEN  'L'  ELSE ie_status_unidade END ,
			cd_paciente_reserva	 = NULL,	
			ds_observacao		 = NULL,
			nm_usuario_reserva	 = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_tipo_reserva		 = NULL,
			nm_pac_reserva		 = NULL
		where	cd_unidade_basica	= cd_unidade_basica_w	
		and	cd_unidade_compl	= cd_unidade_compl_w
		and	cd_setor_atendimento	= cd_setor_desejado_w;
	else
		update	unidade_atendimento
		set	cd_paciente_reserva	 = NULL,	
			ds_observacao		 = NULL,
			nm_usuario_reserva	 = NULL,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			ie_tipo_reserva		 = NULL,
			nm_pac_reserva		 = NULL
		where	cd_unidade_basica	= cd_unidade_basica_w	
		and	cd_unidade_compl	= cd_unidade_compl_w
		and	cd_setor_atendimento	= cd_setor_desejado_w;
	end if;
	
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_reserva_leito ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

