-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_fat_vl_adic ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type) AS $body$
DECLARE

			 
tb_nr_seq_fat_proc_mat_w	pls_util_cta_pck.t_number_table;
tb_vl_lib_taxa_co_w		pls_util_cta_pck.t_number_table;
tb_vl_lib_taxa_material_w	pls_util_cta_pck.t_number_table;
tb_vl_lib_taxa_servico_w	pls_util_cta_pck.t_number_table;
tb_vl_materiais_w		pls_util_cta_pck.t_number_table;
tb_vl_medico_w			pls_util_cta_pck.t_number_table;
tb_vl_custo_operacional_w	pls_util_cta_pck.t_number_table;

index_w				integer	:= 0;
			
C01 CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type, 
		nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR 
	SELECT	d.nr_seq_conta_pos_estab, 
		d.nr_sequencia 
	from	pls_fatura_proc		d, 
		pls_fatura_conta	c, 
		pls_fatura_evento	b, 
		pls_fatura		a 
	where	d.nr_seq_fatura_conta	= c.nr_sequencia 
	and	c.nr_seq_fatura_evento	= b.nr_sequencia 
	and	b.nr_seq_fatura		= a.nr_sequencia 
	and	((a.nr_sequencia	= nr_seq_fatura_pc) or (coalesce(nr_seq_fatura_pc::text, '') = '')) 
	and	((a.nr_seq_lote		= nr_seq_lote_pc) or (coalesce(nr_seq_lote_pc::text, '') = '')) 
	and	(d.nr_seq_conta_pos_estab IS NOT NULL AND d.nr_seq_conta_pos_estab::text <> '');
	
C02 CURSOR(	nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type, 
		nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR 
	SELECT	d.nr_seq_conta_pos_estab, 
		d.nr_sequencia 
	from	pls_fatura_mat		d, 
		pls_fatura_conta	c, 
		pls_fatura_evento	b, 
		pls_fatura		a 
	where	d.nr_seq_fatura_conta	= c.nr_sequencia 
	and	c.nr_seq_fatura_evento	= b.nr_sequencia 
	and	b.nr_seq_fatura		= a.nr_sequencia 
	and	((a.nr_sequencia	= nr_seq_fatura_pc) or (coalesce(nr_seq_fatura_pc::text, '') = '')) 
	and	((a.nr_seq_lote		= nr_seq_lote_pc) or (coalesce(nr_seq_lote_pc::text, '') = '')) 
	and	(d.nr_seq_conta_pos_estab IS NOT NULL AND d.nr_seq_conta_pos_estab::text <> '');

BEGIN 
 
for r_c01_w in C01(nr_seq_lote_p,nr_seq_fatura_p) loop 
 
	tb_nr_seq_fat_proc_mat_w(index_w) := r_c01_w.nr_sequencia;
 
	select	vl_lib_taxa_co, 
		vl_lib_taxa_material, 
		vl_lib_taxa_servico, 
		vl_materiais,   
		vl_medico, 
		vl_custo_operacional 
	into STRICT	tb_vl_lib_taxa_co_w(index_w), 
		tb_vl_lib_taxa_material_w(index_w), 
		tb_vl_lib_taxa_servico_w(index_w), 
		tb_vl_materiais_w(index_w), 
		tb_vl_medico_w(index_w), 
		tb_vl_custo_operacional_w(index_w) 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia	= r_c01_w.nr_seq_conta_pos_estab;
	 
	if (index_w >= pls_util_cta_pck.qt_registro_transacao_w) then 
		forall i in tb_nr_seq_fat_proc_mat_w.first .. tb_nr_seq_fat_proc_mat_w.last 
			update	pls_fatura_proc 
			set	vl_lib_taxa_co		= tb_vl_lib_taxa_co_w(i), 
				vl_lib_taxa_material	= tb_vl_lib_taxa_material_w(i), 
				vl_lib_taxa_servico	= tb_vl_lib_taxa_servico_w(i), 
				vl_materiais		= tb_vl_materiais_w(i), 
				vl_medico		= tb_vl_medico_w(i), 
				vl_custo_operacional	= tb_vl_custo_operacional_w(i) 
			where	nr_sequencia		= tb_nr_seq_fat_proc_mat_w(i);
			 
		tb_nr_seq_fat_proc_mat_w.delete;
		tb_vl_lib_taxa_co_w.delete;
		tb_vl_lib_taxa_material_w.delete;
		tb_vl_lib_taxa_servico_w.delete;
		tb_vl_materiais_w.delete;
		tb_vl_medico_w.delete;
		tb_vl_custo_operacional_w.delete;
		index_w	:= 0;
	else 
		index_w	:= index_w + 1;
	end if;
end loop;
 
if (tb_nr_seq_fat_proc_mat_w.count > 0) then 
	forall i in tb_nr_seq_fat_proc_mat_w.first .. tb_nr_seq_fat_proc_mat_w.last 
		update	pls_fatura_proc 
		set	vl_lib_taxa_co		= tb_vl_lib_taxa_co_w(i), 
			vl_lib_taxa_material	= tb_vl_lib_taxa_material_w(i), 
			vl_lib_taxa_servico	= tb_vl_lib_taxa_servico_w(i), 
			vl_materiais		= tb_vl_materiais_w(i), 
			vl_medico		= tb_vl_medico_w(i), 
			vl_custo_operacional	= tb_vl_custo_operacional_w(i) 
		where	nr_sequencia		= tb_nr_seq_fat_proc_mat_w(i);
end if;
			 
tb_nr_seq_fat_proc_mat_w.delete;
tb_vl_lib_taxa_co_w.delete;
tb_vl_lib_taxa_material_w.delete;
tb_vl_lib_taxa_servico_w.delete;
tb_vl_materiais_w.delete;
tb_vl_medico_w.delete;
tb_vl_custo_operacional_w.delete;
index_w	:= 0;
 
 
for r_c02_w in C02(nr_seq_lote_p,nr_seq_fatura_p) loop 
 
	tb_nr_seq_fat_proc_mat_w(index_w) := r_c02_w.nr_sequencia;
 
	select	vl_lib_taxa_co, 
		vl_lib_taxa_material, 
		vl_lib_taxa_servico, 
		vl_materiais,   
		vl_medico, 
		vl_custo_operacional 
	into STRICT	tb_vl_lib_taxa_co_w(index_w), 
		tb_vl_lib_taxa_material_w(index_w), 
		tb_vl_lib_taxa_servico_w(index_w), 
		tb_vl_materiais_w(index_w), 
		tb_vl_medico_w(index_w), 
		tb_vl_custo_operacional_w(index_w) 
	from	pls_conta_pos_estabelecido 
	where	nr_sequencia	= r_c02_w.nr_seq_conta_pos_estab;
	 
	if (index_w >= pls_util_cta_pck.qt_registro_transacao_w) then 
		forall i in tb_nr_seq_fat_proc_mat_w.first .. tb_nr_seq_fat_proc_mat_w.last 
			update	pls_fatura_mat 
			set	vl_lib_taxa_co		= tb_vl_lib_taxa_co_w(i), 
				vl_lib_taxa_material	= tb_vl_lib_taxa_material_w(i), 
				vl_lib_taxa_servico	= tb_vl_lib_taxa_servico_w(i), 
				vl_materiais		= tb_vl_materiais_w(i), 
				vl_medico		= tb_vl_medico_w(i), 
				vl_custo_operacional	= tb_vl_custo_operacional_w(i) 
			where	nr_sequencia		= tb_nr_seq_fat_proc_mat_w(i);
			 
		tb_nr_seq_fat_proc_mat_w.delete;
		tb_vl_lib_taxa_co_w.delete;
		tb_vl_lib_taxa_material_w.delete;
		tb_vl_lib_taxa_servico_w.delete;
		tb_vl_materiais_w.delete;
		tb_vl_medico_w.delete;
		tb_vl_custo_operacional_w.delete;
		index_w	:= 0;
	else 
		index_w	:= index_w + 1;
	end if;
end loop;
 
if (tb_nr_seq_fat_proc_mat_w.count > 0) then 
	forall i in tb_nr_seq_fat_proc_mat_w.first .. tb_nr_seq_fat_proc_mat_w.last 
		update	pls_fatura_mat 
		set	vl_lib_taxa_co		= tb_vl_lib_taxa_co_w(i), 
			vl_lib_taxa_material	= tb_vl_lib_taxa_material_w(i), 
			vl_lib_taxa_servico	= tb_vl_lib_taxa_servico_w(i), 
			vl_materiais		= tb_vl_materiais_w(i), 
			vl_medico		= tb_vl_medico_w(i), 
			vl_custo_operacional	= tb_vl_custo_operacional_w(i) 
		where	nr_sequencia		= tb_nr_seq_fat_proc_mat_w(i);
end if;
			 
tb_nr_seq_fat_proc_mat_w.delete;
tb_vl_lib_taxa_co_w.delete;
tb_vl_lib_taxa_material_w.delete;
tb_vl_lib_taxa_servico_w.delete;
tb_vl_materiais_w.delete;
tb_vl_medico_w.delete;
tb_vl_custo_operacional_w.delete;
index_w	:= 0;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_fat_vl_adic ( nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type) FROM PUBLIC;

