-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dados_novo_reg_hemot ( nr_pasta_p bigint, ie_gerar_nr_sangue_p text, ie_status_doacao_p bigint, ie_nova_transfusao_atend_p text, nr_novo_atendimento_p bigint, nr_seq_agenda_p bigint, nr_seq_campanha_doacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_sangue_p INOUT text, nr_seq_entidade_san_p INOUT bigint, nr_seq_entidade_p INOUT bigint, nr_seq_campanha_p INOUT bigint, cd_unidade_externa_p INOUT bigint, cd_pessoa_fisica_p INOUT text, nr_atendimento_p INOUT bigint, cd_medico_p INOUT text, cd_convenio_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint) AS $body$
DECLARE


/*	nr_pasta_p
	0 - Doação
	3 - Transfusão
	4 - Reserva	*/
ie_gerar_sangue_apos_salvar_w	varchar(1);
nr_seq_status_doacao_w	bigint;


BEGIN

select	max(nr_seq_entidade)
into STRICT	nr_seq_entidade_san_p
from	san_parametro
where	cd_estabelecimento = cd_estabelecimento_p;

if (nr_pasta_p = 0) then
	begin
	/* Hemoterapia - Parâmetro [252] - Permite gerar o número de sangue após salvar */

	ie_gerar_sangue_apos_salvar_w := obter_param_usuario(450, 252, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_sangue_apos_salvar_w);

	if (ie_gerar_sangue_apos_salvar_w = 'N') and (ie_gerar_nr_sangue_p = 'S') then
		nr_sangue_p	:= obter_numero_sangue_seq(cd_estabelecimento_p);
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_status_doacao_w
	from	san_status_doacao
	where	ie_status_doacao	= ie_status_doacao_p
	and	ie_situacao	= 'A';

	if (nr_seq_campanha_doacao_p > 0) then
		begin
		select	max(a.nr_seq_campanha)
		into STRICT	nr_seq_campanha_p
		from	san_doacao_campanha a
		where	a.nr_sequencia = nr_seq_campanha_doacao_p;
		end;
	end if;
	end;

elsif (nr_pasta_p = 3) then
	begin
	if (ie_nova_transfusao_atend_p = 'S') then
		begin
		select	max(cd_unidade_externa)
		into STRICT	cd_unidade_externa_p
		from	atend_paciente_unidade
		where	nr_atendimento = nr_novo_atendimento_p;
		end;
	end if;
	end;

elsif (nr_pasta_p = 4) then
	begin
	if (nr_seq_agenda_p > 0) then
		begin
		SELECT * FROM gerar_reserva_hemo_agenda(
			nr_seq_agenda_p, cd_pessoa_fisica_p, nr_atendimento_p, cd_medico_p, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p) INTO STRICT cd_pessoa_fisica_p, nr_atendimento_p, cd_medico_p, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p;
		end;
	end if;

	select	max(cd_unidade_externa)
	into STRICT	cd_unidade_externa_p
	from	atend_paciente_unidade
	where	nr_atendimento = nr_novo_atendimento_p;

	select	coalesce(max(a.nr_sequencia),0)
	into STRICT	nr_seq_entidade_p
	from  	san_entidade a
	where	a.cd_Setor_atendimento =
		(SELECT	max(b.cd_setor_atendimento)
		from	atend_paciente_unidade b
		where	b.nr_seq_interno =
			(select	max(c.nr_seq_interno)
			from	atend_paciente_unidade c
			where	c.nr_atendimento = nr_novo_atendimento_p));
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dados_novo_reg_hemot ( nr_pasta_p bigint, ie_gerar_nr_sangue_p text, ie_status_doacao_p bigint, ie_nova_transfusao_atend_p text, nr_novo_atendimento_p bigint, nr_seq_agenda_p bigint, nr_seq_campanha_doacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_sangue_p INOUT text, nr_seq_entidade_san_p INOUT bigint, nr_seq_entidade_p INOUT bigint, nr_seq_campanha_p INOUT bigint, cd_unidade_externa_p INOUT bigint, cd_pessoa_fisica_p INOUT text, nr_atendimento_p INOUT bigint, cd_medico_p INOUT text, cd_convenio_p INOUT bigint, cd_procedimento_p INOUT bigint, ie_origem_proced_p INOUT bigint) FROM PUBLIC;

