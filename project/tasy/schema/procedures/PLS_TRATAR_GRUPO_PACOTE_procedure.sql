-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_tratar_grupo_pacote ( nr_seq_grupo_p bigint, nr_seq_conta_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_regra_p INOUT text) AS $body$
DECLARE


cd_procedimento_w		bigint;
ie_origem_proc_w		bigint;
qt_procedimento_w		bigint;
qt_procedimento_ww		bigint;
qt_reg_w			bigint;
qt_pacote_w			bigint;
nr_seq_conversao_pacote_w	bigint;
nr_seq_grupo_proc_w		bigint;
qt_pacote_proc_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_guia_proc_w		bigint;
cd_proc_guia_w			bigint;
ie_orig_proc_guia_w		bigint;
qt_proc_grupo_w			bigint;
nr_seq_guia_pacote_w		bigint;
qt_proc_regra_w			bigint;
nr_seq_req_proc_w		bigint;
cd_proc_req_w			bigint;
ie_orig_proc_req_w		bigint;

C01 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced
	from	pls_pacote_grupo_proc		a,
		pls_pacote_cad_grupo_proc	b
	where	a.nr_seq_grupo	= b.nr_sequencia
	and	b.ie_situacao	= 'A'
	and	a.ie_situacao	= 'A'
	and	b.nr_sequencia	= nr_seq_grupo_p;


C02 CURSOR FOR
	SELECT	nr_seq_conversao_pacote,
		nr_sequencia
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_p
	and	(nr_seq_conversao_pacote IS NOT NULL AND nr_seq_conversao_pacote::text <> '')
	and	ie_tipo_despesa = 4;

/*Cursor C03 is
	select	nr_seq_conversao_pacote,
		nr_sequencia
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_p
	and	nr_seq_conversao_pacote	is not null
	and	nr_seq_pacote		is not null;*/
C03 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_pacote::text, '') = '';

C04 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	coalesce(nr_seq_pacote::text, '') = '';


BEGIN
ie_regra_p	:= 'N';
if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	open C01;
	loop
	fetch C01 into
		cd_procedimento_w,
		ie_origem_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		begin
		select	count(nr_sequencia)
		into STRICT	qt_procedimento_ww
		from	pls_conta_proc
		where	nr_seq_conta		= nr_seq_conta_p
		and	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proc_w;
		exception
		when others then
			qt_procedimento_ww	:= 0;
		end;

		if (qt_procedimento_ww <> 0) then
			qt_procedimento_ww	:= 1;
		end if;

		qt_procedimento_w	:= coalesce(qt_procedimento_w,0) + qt_procedimento_ww;

		select	count(1)
		into STRICT	qt_pacote_w
		from	pls_pacote_grupo_proc		a,
			pls_pacote_cad_grupo_proc	b
		where	a.nr_seq_grupo	= b.nr_sequencia
		and	b.ie_situacao	= 'A'
		and	a.ie_situacao	= 'A'
		and	b.nr_sequencia	= nr_seq_grupo_p;
		if (qt_procedimento_w	<> 0) and (qt_pacote_w		<= qt_procedimento_w) then
			ie_regra_p	:= 'S';
		end if;
		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		nr_seq_conversao_pacote_w,
		nr_seq_conta_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	max(nr_seq_grupo_proc)
		into STRICT	nr_seq_grupo_proc_w
		from	pls_regra_conversao_pacote
		where	nr_sequencia	= nr_seq_conversao_pacote_w;

		select	count(1)
		into STRICT	qt_pacote_proc_w
		from	pls_pacote_grupo_proc	a
		where	a.nr_seq_grupo	= nr_seq_grupo_proc_w
		and	exists (	SELECT	1
					from	pls_pacote_grupo_proc	x
					where	x.nr_seq_grupo		= nr_seq_grupo_p
					and	x.cd_procedimento	= a.cd_procedimento
					and	x.ie_origem_proced	= x.ie_origem_proced);

		if (qt_pacote_proc_w	= 0) then
			delete	FROM pls_conta_proc
			where	nr_sequencia	= nr_seq_conta_proc_w;
		end if;
		end;
	end loop;
	close C02;
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then

	select	count(1)
	into STRICT	qt_reg_w
	from	pls_pacote_grupo_proc		a,
		pls_pacote_cad_grupo_proc	b
	where	a.nr_seq_grupo		= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_grupo_p
	and	b.ie_situacao		= 'A'
	and	a.ie_situacao		= 'A'
	and	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;

	if (qt_reg_w > 0) then
		open C01;
		loop
		fetch C01 into
			cd_procedimento_w,
			ie_origem_proc_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			begin
			select	count(nr_sequencia)
			into STRICT	qt_procedimento_ww
			from	pls_guia_plano_proc
			where	nr_seq_guia		= nr_seq_guia_p
			and	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proc_w;
			exception
			when others then
				qt_procedimento_ww	:= 0;
			end;

			if (qt_procedimento_ww <> 0) then
				qt_procedimento_ww	:= 1;
			end if;

			qt_procedimento_w	:= coalesce(qt_procedimento_w,0) + qt_procedimento_ww;

			select	count(1)
			into STRICT	qt_pacote_w
			from	pls_pacote_grupo_proc		a,
				pls_pacote_cad_grupo_proc	b
			where	a.nr_seq_grupo	= b.nr_sequencia
			and	b.ie_situacao	= 'A'
			and	a.ie_situacao	= 'A'
			and	b.nr_sequencia	= nr_seq_grupo_p;

			if (qt_procedimento_w	<> 0) and (qt_pacote_w		<= qt_procedimento_w) then
				ie_regra_p	:= 'S';
			end if;
			end;
		end loop;
		close C01;

		select	count(distinct(cd_procedimento))
		into STRICT	qt_pacote_proc_w
		from	pls_guia_plano_proc	a
		where	a.nr_seq_guia	= nr_seq_guia_p
		and	coalesce(nr_seq_pacote::text, '') = ''
		and	exists (	SELECT	1
					from	pls_pacote_grupo_proc	x
					where	x.nr_seq_grupo		= nr_seq_grupo_p
					and	x.cd_procedimento	= a.cd_procedimento
					and	x.ie_origem_proced	= a.ie_origem_proced);

		select	count(1)
		into STRICT	qt_proc_regra_w
		from	pls_pacote_grupo_proc
		where	nr_seq_grupo		= nr_seq_grupo_p;

		if (qt_pacote_proc_w	= qt_proc_regra_w) then
			-- Cursor que traz os procedimentos da guia que não são pacotes
			open C03;
			loop
			fetch C03 into
				nr_seq_guia_proc_w,
				cd_proc_guia_w,
				ie_orig_proc_guia_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				select	count(1)
				into STRICT	qt_proc_grupo_w
				from	pls_pacote_grupo_proc	x
				where	x.nr_seq_grupo		= nr_seq_grupo_p
				and	x.cd_procedimento	= cd_proc_guia_w
				and	x.ie_origem_proced	= ie_orig_proc_guia_w;

				if (qt_proc_grupo_w	> 0) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_guia_pacote_w
					from	pls_guia_plano_proc
					where	nr_seq_proc_princ	= nr_seq_guia_proc_w;

					if (nr_seq_guia_pacote_w IS NOT NULL AND nr_seq_guia_pacote_w::text <> '') then
						delete	FROM pls_guia_plano_proc
						where	nr_sequencia	= nr_seq_guia_pacote_w;
					end if;
				end if;

				end;
			end loop;
			close C03;
		end if;

		/*open C03;
		loop
		fetch C03 into
			nr_seq_conversao_pacote_w,
			nr_seq_guia_proc_w;
		exit when C03%notfound;
			begin
			select	max(nr_seq_grupo_proc)
			into	nr_seq_grupo_proc_w
			from	pls_regra_conversao_pacote
			where	nr_sequencia	= nr_seq_conversao_pacote_w;

			if	(nr_seq_grupo_proc_w	is not null) then
				select	count(1)
				into	qt_pacote_proc_w
				from	pls_pacote_grupo_proc	a
				where	a.nr_seq_grupo	= nr_seq_grupo_proc_w
				and	exists (	select	1
							from	pls_pacote_grupo_proc	x
							where	x.nr_seq_grupo		= nr_seq_grupo_p
							and	x.cd_procedimento	= a.cd_procedimento
							and	x.ie_origem_proced	= x.ie_origem_proced);

				if	(qt_pacote_proc_w	= 0) then
					delete	pls_guia_plano_proc
					where	nr_sequencia	= nr_seq_guia_proc_w;
				end if;
			elsif	(nr_seq_grupo_proc_w	is null) then
				select	count(1)
				into	qt_pacote_proc_w
				from	pls_guia_plano_proc	a
				where	a.nr_seq_guia	= nr_seq_guia_p
				and	nr_seq_pacote	is null
				and	exists (	select	1
							from	pls_pacote_grupo_proc	x
							where	x.nr_seq_grupo		= nr_seq_grupo_p
							and	x.cd_procedimento	= a.cd_procedimento
							and	x.ie_origem_proced	= a.ie_origem_proced);

				if	(qt_pacote_proc_w	= 0) then
					delete	pls_guia_plano_proc
					where	nr_sequencia	= nr_seq_guia_proc_w;
				end if;
			end if;
			end;
		end loop;
		close C03;*/
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then

	select	count(1)
	into STRICT	qt_reg_w
	from	pls_pacote_grupo_proc		a,
		pls_pacote_cad_grupo_proc	b
	where	a.nr_seq_grupo		= b.nr_sequencia
	and	b.nr_sequencia		= nr_seq_grupo_p
	and	b.ie_situacao		= 'A'
	and	a.ie_situacao		= 'A'
	and	cd_procedimento		= cd_procedimento_p
	and	ie_origem_proced	= ie_origem_proced_p;

	if (qt_reg_w > 0) then
		open C01;
		loop
		fetch C01 into
			cd_procedimento_w,
			ie_origem_proc_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			begin
			select	count(nr_sequencia)
			into STRICT	qt_procedimento_ww
			from	pls_requisicao_proc
			where	nr_seq_requisicao	= nr_seq_requisicao_p
			and	cd_procedimento		= cd_procedimento_w
			and	ie_origem_proced	= ie_origem_proc_w;
			exception
			when others then
				qt_procedimento_ww	:= 0;
			end;

			if (qt_procedimento_ww <> 0) then
				qt_procedimento_ww	:= 1;
			end if;

			qt_procedimento_w	:= coalesce(qt_procedimento_w,0) + qt_procedimento_ww;

			select	count(1)
			into STRICT	qt_pacote_w
			from	pls_pacote_grupo_proc		a,
				pls_pacote_cad_grupo_proc	b
			where	a.nr_seq_grupo	= b.nr_sequencia
			and	b.ie_situacao	= 'A'
			and	a.ie_situacao	= 'A'
			and	b.nr_sequencia	= nr_seq_grupo_p;

			if (qt_procedimento_w	<> 0) and (qt_pacote_w		<= qt_procedimento_w) then
				ie_regra_p	:= 'S';
			end if;
			end;
		end loop;
		close C01;

		select	count(distinct(cd_procedimento))
		into STRICT	qt_pacote_proc_w
		from	pls_requisicao_proc	a
		where	a.nr_seq_requisicao	= nr_seq_requisicao_p
		and	coalesce(nr_seq_pacote::text, '') = ''
		and	exists (	SELECT	1
					from	pls_pacote_grupo_proc	x
					where	x.nr_seq_grupo		= nr_seq_grupo_p
					and	x.cd_procedimento	= a.cd_procedimento
					and	x.ie_origem_proced	= a.ie_origem_proced);

		select	count(1)
		into STRICT	qt_proc_regra_w
		from	pls_pacote_grupo_proc
		where	nr_seq_grupo		= nr_seq_grupo_p;

		if (qt_pacote_proc_w	= qt_proc_regra_w) then
			-- Cursor que traz os procedimentos da requisição que não são pacotes
			open C04;
			loop
			fetch C04 into
				nr_seq_req_proc_w,
				cd_proc_req_w,
				ie_orig_proc_req_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				select	count(1)
				into STRICT	qt_proc_grupo_w
				from	pls_pacote_grupo_proc	x
				where	x.nr_seq_grupo		= nr_seq_grupo_p
				and	x.cd_procedimento	= cd_proc_req_w
				and	x.ie_origem_proced	= ie_orig_proc_req_w;

				if (qt_proc_grupo_w	> 0) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_guia_pacote_w
					from	pls_requisicao_proc
					where	nr_seq_proc_princ	= nr_seq_req_proc_w;

					if (nr_seq_guia_pacote_w IS NOT NULL AND nr_seq_guia_pacote_w::text <> '') then
						delete	FROM pls_requisicao_proc
						where	nr_sequencia	= nr_seq_guia_pacote_w;
					end if;
				end if;

				end;
			end loop;
			close C04;
		end if;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_tratar_grupo_pacote ( nr_seq_grupo_p bigint, nr_seq_conta_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_regra_p INOUT text) FROM PUBLIC;

