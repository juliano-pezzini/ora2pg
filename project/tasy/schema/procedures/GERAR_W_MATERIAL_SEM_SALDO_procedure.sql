-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_material_sem_saldo ( cd_estabelecimento_p bigint, dt_mes_inicio_p timestamp, dt_mes_fim_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, cd_material_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_mesano_referencia_w	timestamp;
dt_referencia_w		timestamp;
dt_referencia_ww	timestamp;
dt_inicio_w		timestamp;
dt_fim_w		timestamp;
cd_local_estoque_w	smallint;
cd_material_w		integer;

qt_estoque_w		double precision;
qt_estoque_ant_w	double precision;

dt_inicio_sem_saldo_w	timestamp;
dt_fim_sem_saldo_w	timestamp;
qt_dia_sem_saldo_w	integer;

C01 CURSOR FOR
	SELECT	dt_mesano_referencia,
		cd_local_estoque,
		cd_material
	from	saldo_estoque
	where	cd_material = coalesce(cd_material_p, cd_material)
	and	cd_local_estoque = coalesce(cd_local_estoque_p, cd_local_estoque)
	and	cd_estabelecimento = cd_estabelecimento_p
	and	dt_mesano_referencia between PKG_DATE_UTILS.start_of(dt_inicio_w, 'month', 0) and PKG_DATE_UTILS.start_of(dt_fim_w, 'month', 0)
	order by cd_local_estoque,
		cd_material;

C02 CURSOR FOR
	SELECT	dt_dia
	from	dia_v
	where	dt_dia between dt_mesano_referencia_w and pkg_date_utils.get_datetime(PKG_DATE_UTILS.END_OF(dt_mesano_referencia_w, 'MONTH', 0), coalesce(dt_mesano_referencia_w, PKG_DATE_UTILS.GET_TIME('00:00:00')))
	and	dt_dia between dt_inicio_w and dt_fim_w
	order by dt_dia asc;


BEGIN
dt_inicio_w 	:= dt_mes_inicio_p;
dt_fim_w	:= pkg_date_utils.get_datetime(PKG_DATE_UTILS.END_OF(dt_mes_fim_p, 'MONTH', 0), coalesce(dt_mes_fim_p, PKG_DATE_UTILS.GET_TIME('00:00:00')));

if (dt_inicio_p IS NOT NULL AND dt_inicio_p::text <> '') then
	dt_inicio_w	:= dt_inicio_p;
end if;

if (dt_fim_p IS NOT NULL AND dt_fim_p::text <> '') then
	dt_fim_w	:= dt_fim_p;
end if;

if (dt_fim_w >= clock_timestamp()) then
	dt_fim_w := PKG_DATE_UTILS.start_of(clock_timestamp(), 'dd', 0);
end if;

delete	FROM w_material_sem_saldo
where	nm_usuario = nm_usuario_p;

open C01;
loop
fetch C01 into
	dt_mesano_referencia_w,
	cd_local_estoque_w,
	cd_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_estoque_ant_w := null;
	dt_inicio_sem_saldo_w	:= null;
	dt_fim_sem_saldo_w	:= null;
	qt_dia_sem_saldo_w	:= null;
	open C02;
	loop
	fetch C02 into
		dt_referencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (coalesce(qt_estoque_ant_w::text, '') = '') then
			begin
			select	max(dt_dia_saldo)
			into STRICT	dt_referencia_ww
			from	saldo_estoque_diario
			where	dt_mesano_referencia 	= dt_mesano_referencia_w
			and	cd_local_estoque 	= cd_local_estoque_w
			and	cd_material		= cd_material_w
			and	dt_dia_saldo 		< dt_referencia_w;

			if (dt_referencia_ww IS NOT NULL AND dt_referencia_ww::text <> '') then
				select	coalesce(qt_estoque,0)
				into STRICT	qt_estoque_ant_w
				from	saldo_estoque_diario
				where	dt_mesano_referencia 	= dt_mesano_referencia_w
				and	cd_local_estoque 	= cd_local_estoque_w
				and	cd_material		= cd_material_w
				and	dt_dia_saldo 		= dt_referencia_ww;
			else
				begin
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_estoque_ant_w
				from	saldo_estoque
				where	dt_mesano_referencia 	= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_w, -1, 0)
				and	cd_local_estoque 	= cd_local_estoque_w
				and	cd_material		= cd_material_w;
				end;
			end if;
			end;
		end if;

		begin
		select	coalesce(qt_estoque,0)
		into STRICT	qt_estoque_w
		from	saldo_estoque_diario
		where	dt_mesano_referencia 	= dt_mesano_referencia_w
		and	cd_local_estoque 	= cd_local_estoque_w
		and	cd_material		= cd_material_w
		and	dt_dia_saldo 		= dt_referencia_w;
		exception
		when others then
			qt_estoque_w := qt_estoque_ant_w;
		end;

		qt_estoque_ant_w := qt_estoque_w;

		if (qt_estoque_w <= 0) then
			begin
			if (coalesce(dt_inicio_sem_saldo_w::text, '') = '') then
				dt_inicio_sem_saldo_w := dt_referencia_w;
			end if;
			qt_dia_sem_saldo_w := coalesce(qt_dia_sem_saldo_w,0) + 1;
			end;
		end if;

		if (dt_inicio_sem_saldo_w IS NOT NULL AND dt_inicio_sem_saldo_w::text <> '') and
			((qt_estoque_w > 0) or (dt_referencia_w = dt_fim_w)) then
			begin
			dt_fim_sem_saldo_w := dt_referencia_w;

			insert	into	w_material_sem_saldo(
				cd_estabelecimento,
				dt_mesano_referencia,
				cd_local_estoque,
				cd_material,
				dt_inicio_sem_saldo,
				dt_fim_sem_saldo,
				qt_dia_sem_saldo,
				nm_usuario)
			values (cd_estabelecimento_p,
				dt_mesano_referencia_w,
				cd_local_estoque_w,
				cd_material_w,
				dt_inicio_sem_saldo_w,
				dt_fim_sem_saldo_w,
				qt_dia_sem_saldo_w,
				nm_usuario_p);

			dt_inicio_sem_saldo_w	:= null;
			qt_dia_sem_saldo_w	:= null;
			end;
		end if;
		end;
	end loop;
	close C02;
	commit;
	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_material_sem_saldo ( cd_estabelecimento_p bigint, dt_mes_inicio_p timestamp, dt_mes_fim_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, cd_material_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) FROM PUBLIC;

