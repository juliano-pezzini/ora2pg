-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_ocorr_guia_benef ( nr_seq_ocorrencia_p bigint, nr_seq_regra_p bigint, nr_seq_guia_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, nr_seq_segurado_p bigint, nr_seq_auditoria_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ds_documentacao_w		varchar(4000);

ie_finalizar_analise_w		varchar(1);

nr_seq_grupo_w			bigint;
nr_seq_fluxo_w			bigint;
nr_seq_ordem_atual_w		bigint;
nr_seq_auditoria_w		bigint	:= 0;

qt_ocorr_proc_w			bigint	:= 0;
qt_ocorr_mat_w			bigint	:= 0;
qt_ocorr_w			bigint	:= 0;
qt_grupo_w			bigint;
qt_fluxo_w			bigint;

C01 CURSOR FOR 
	SELECT	nr_seq_grupo, 
		nr_seq_fluxo 
	from	pls_ocorrencia_grupo 
	where	nr_seq_ocorrencia	= nr_seq_ocorrencia_p 
	and	ie_autorizacao		= 'S' 
	and	ie_situacao		= 'A' 
	group by nr_seq_fluxo, nr_seq_grupo 
	order by nr_seq_fluxo;


BEGIN 
select	coalesce(max(a.ie_finalizar_analise),'S') 
into STRICT	ie_finalizar_analise_w 
from	pls_ocorrencia	a 
where	a.nr_sequencia	= nr_seq_ocorrencia_p;
 
if (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then 
	select	count(1) 
	into STRICT	qt_ocorr_proc_w 
	from	pls_ocorrencia_benef 
	where	nr_seq_guia_plano	= nr_seq_guia_p 
	and	nr_seq_proc		= nr_seq_guia_proc_p 
	and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p;
elsif (nr_seq_guia_mat_p IS NOT NULL AND nr_seq_guia_mat_p::text <> '') then 
	select	count(1) 
	into STRICT	qt_ocorr_mat_w 
	from	pls_ocorrencia_benef 
	where	nr_seq_guia_plano	= nr_seq_guia_p 
	and	nr_seq_mat		= nr_seq_guia_mat_p 
	and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p;
elsif (coalesce(nr_seq_guia_proc_p::text, '') = '') and (coalesce(nr_seq_guia_mat_p::text, '') = '') then 
	select	count(1) 
	into STRICT	qt_ocorr_w 
	from	pls_ocorrencia_benef 
	where	nr_seq_guia_plano	= nr_seq_guia_p 
	and	nr_seq_ocorrencia	= nr_seq_ocorrencia_p 
	and	coalesce(nr_seq_proc::text, '') = '' 
	and	coalesce(nr_seq_mat::text, '') = '';
end if;
 
if (qt_ocorr_proc_w = 0) and (qt_ocorr_mat_w = 0) and (qt_ocorr_w = 0) then	 
	insert	into pls_ocorrencia_benef(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		ds_observacao, 
		ie_auditoria, 
		ie_tipo_glosa, 
		nr_seq_ocorrencia, 
		nr_seq_regra, 
		nr_seq_guia_plano, 
		nr_seq_segurado, 
		nr_seq_proc, 
		nr_seq_mat, 
		ie_finalizar_analise) 
	values (nextval('pls_ocorrencia_benef_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_documentacao_w, 
		'S', 
		'A', 
		nr_seq_ocorrencia_p, 
		nr_seq_regra_p, 
		nr_seq_guia_p, 
		nr_seq_segurado_p, 
		nr_seq_guia_proc_p, 
		nr_seq_guia_mat_p, 
		ie_finalizar_analise_w);
	 
	if (nr_seq_auditoria_p IS NOT NULL AND nr_seq_auditoria_p::text <> '') then 
		nr_seq_auditoria_w	:= nr_seq_auditoria_p;
	else 
		begin 
		select	nr_sequencia 
		into STRICT	nr_seq_auditoria_w 
		from	pls_auditoria 
		where	nr_seq_guia 	= nr_seq_guia_p 
		and	coalesce(dt_liberacao::text, '') = '';
		exception 
		when others then 
			nr_seq_auditoria_w	:= 0;	
		end;
	end if;
	 
	if (coalesce(nr_seq_guia_proc_p::text, '') = '') and (coalesce(nr_seq_guia_mat_p::text, '') = '') then 
		update	pls_guia_plano 
		set	ie_estagio	= 1, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_guia_p 
		and	ie_estagio	<> 1;
		 
		update	pls_guia_plano_proc 
		set	ie_status		= 'A', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_seq_guia		= nr_seq_guia_p 
		and	ie_status		= 'N';
		 
		update	pls_guia_plano_mat 
		set	ie_status		= 'A', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_seq_guia		= nr_seq_guia_p 
		and	ie_status		= 'N';
		 
		if (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then 
			update	pls_auditoria_item 
			set	ie_status		= 'P', 
				ie_status_solicitacao		= 'P', 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_seq_auditoria	= nr_seq_auditoria_w 
			and	ie_status		= 'N';
		end if;
		 
	elsif (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then 
		update	pls_guia_plano 
		set	ie_estagio	= 1, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_guia_p 
		and	ie_estagio	<> 1;
		 
		update	pls_guia_plano_proc 
		set	ie_status		= 'A', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_sequencia		= nr_seq_guia_proc_p 
		and	ie_status		not in ('A','S');
		 
		if (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then 
			update	pls_auditoria_item 
			set	ie_status		= 'P', 
				ie_status_solicitacao		= 'P', 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_seq_proc_origem 	= nr_seq_guia_proc_p 
			and	ie_status		not in ('A','P');
		end if;
		 
	elsif (nr_seq_guia_mat_p IS NOT NULL AND nr_seq_guia_mat_p::text <> '') then 
		update	pls_guia_plano 
		set	ie_estagio	= 1, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_guia_p 
		and	ie_estagio	<> 1;
 
		update	pls_guia_plano_mat 
		set	ie_status		= 'A', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_sequencia		= nr_seq_guia_mat_p 
		and	ie_status		not in ('A','S');
 
		if (nr_seq_auditoria_w IS NOT NULL AND nr_seq_auditoria_w::text <> '') then		 
			update	pls_auditoria_item 
			set	ie_status		= 'P', 
				ie_status_solicitacao		= 'P', 
				dt_atualizacao		= clock_timestamp(), 
				nm_usuario		= nm_usuario_p 
			where	nr_seq_mat_origem		= nr_seq_guia_mat_p 
			and	ie_status		not in ('A','P');
		end if;
			 
	end if;
	 
	if (nr_seq_auditoria_w <> 0) then		 
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_grupo_w, 
			nr_seq_fluxo_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			select	count(1) 
			into STRICT	qt_grupo_w 
			from	pls_auditoria_grupo 
			where	nr_seq_auditoria 	= nr_seq_auditoria_w 
			and	nr_seq_grupo 		= nr_seq_grupo_w;
			 
			if (qt_grupo_w = 0) then 
				select	count(1) 
				into STRICT	qt_fluxo_w 
				from	pls_auditoria_grupo 
				where	nr_seq_auditoria 	= nr_seq_auditoria_w 
				and	nr_seq_ordem 		= nr_seq_fluxo_w;
				 
				if (qt_fluxo_w > 0) then 
					select	max(nr_seq_ordem) + 1 
					into STRICT	nr_seq_ordem_atual_w 
					from	pls_auditoria_grupo 
					where	nr_seq_auditoria 	= nr_seq_auditoria_w;
					 
					nr_seq_fluxo_w	:= nr_seq_ordem_atual_w;
				end if;
				 
				insert into pls_auditoria_grupo(nr_sequencia, nr_seq_auditoria, nr_seq_grupo, 
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
					nm_usuario_nrec, nr_seq_ordem, ie_status, 
					ie_manual) 
				values (nextval('pls_auditoria_grupo_seq'), nr_seq_auditoria_w, nr_seq_grupo_w, 
					clock_timestamp(), nm_usuario_p, clock_timestamp(), 
					nm_usuario_p, nr_seq_fluxo_w, 'U', 
					'N');
			end if;
			end;
		end loop;
		close C01;
	elsif (nr_seq_auditoria_w = 0) then		 
		CALL pls_gerar_auditoria_guia(nr_seq_guia_p, nm_usuario_p);
	end if;
	 
	CALL pls_guia_gravar_historico(nr_seq_guia_p, 2, 'A guia foi enviada para análise pois existe liminar para o beneficiário.', null, nm_usuario_p);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_ocorr_guia_benef ( nr_seq_ocorrencia_p bigint, nr_seq_regra_p bigint, nr_seq_guia_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, nr_seq_segurado_p bigint, nr_seq_auditoria_p bigint, nm_usuario_p text) FROM PUBLIC;

