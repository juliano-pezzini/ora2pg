-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_exec_liberada ( nr_seq_auditoria_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_execucao_w		bigint;
nr_seq_motivo_exc_w		integer;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_ajuste_w				pls_auditoria_item.qt_ajuste%type;
nr_seq_material_w		bigint;
ie_status_w			varchar(5);
nr_seq_proc_origem_w		bigint;
nr_seq_mat_origem_w		bigint;
nr_se_exec_item_w		varchar(4000);
nr_seq_segurado_w		bigint;
nr_seq_prestador_w		bigint;
cd_estabelecimento_w		bigint;
nr_seq_retorno_w		varchar(255);
qt_itens_aud_w			bigint;
qt_itens_aud_negado_w		bigint;
ie_situacao_exec_w		smallint := 1;
nr_seq_lote_exec_w		bigint := 0;

C01 CURSOR FOR
	SELECT	nr_seq_proc_origem,
		cd_procedimento,
		ie_origem_proced,
		qt_ajuste,
		nr_seq_motivo_exc,
		ie_status
	from	pls_auditoria_item
	where	nr_seq_auditoria = nr_seq_auditoria_p
	and	(nr_seq_proc_origem IS NOT NULL AND nr_seq_proc_origem::text <> '')
	and ((ie_acao_auditor IS NOT NULL AND ie_acao_auditor::text <> '')
	or	ie_status <> ie_status_solicitacao)
	order by nr_sequencia;
	
C02 CURSOR FOR
	SELECT	nr_seq_mat_origem,
		nr_seq_material,
		qt_ajuste,
		nr_seq_motivo_exc,
		ie_status
	from	pls_auditoria_item
	where	nr_seq_auditoria = nr_seq_auditoria_p
	and	(nr_seq_mat_origem IS NOT NULL AND nr_seq_mat_origem::text <> '')
	and ((ie_acao_auditor IS NOT NULL AND ie_acao_auditor::text <> '')
	or	ie_status <> ie_status_solicitacao)
	order by nr_sequencia;
	

BEGIN

select	nr_seq_execucao,
	nr_seq_segurado,
	nr_seq_prestador,
	cd_estabelecimento
into STRICT	nr_seq_execucao_w,
	nr_seq_segurado_w,
	nr_seq_prestador_w,
	cd_estabelecimento_w
from	pls_auditoria
where	nr_sequencia = nr_seq_auditoria_p;

if (nr_seq_execucao_w IS NOT NULL AND nr_seq_execucao_w::text <> '') then
	select	coalesce(nr_seq_lote_exec,0)
	into STRICT	nr_seq_lote_exec_w
	from	pls_execucao_requisicao
	where	nr_sequencia = nr_seq_execucao_w;
end if;

select	count(1)
into STRICT	qt_itens_aud_w
from	pls_auditoria_item
where	nr_sequencia = nr_seq_auditoria_p;

select	count(1)
into STRICT	qt_itens_aud_negado_w
from	pls_auditoria_item
where	nr_sequencia = nr_seq_auditoria_p
and	ie_status in ('C','N');

if (qt_itens_aud_w = qt_itens_aud_negado_w) then
	ie_situacao_exec_w := 4;
else
	ie_situacao_exec_w := 1;
end if;

update	pls_execucao_requisicao
set	ie_situacao = ie_situacao_exec_w
where	nr_sequencia = nr_seq_execucao_w;

open C01;
loop
fetch C01 into	
	nr_seq_proc_origem_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_ajuste_w,
	nr_seq_motivo_exc_w,
	ie_status_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	update	pls_execucao_req_item
	set	cd_procedimento		= cd_procedimento_w,
		ie_origem_proced	= ie_origem_proced_w,
		qt_item			= qt_ajuste_w,
		--nr_seq_motivo_exc	= nr_seq_motivo_exc_w,
		ie_situacao		= CASE WHEN ie_status_w='A' THEN 'S' WHEN ie_status_w='N' THEN 'G' END ,		
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= nr_seq_proc_origem_w; 	
	
	if (ie_status_w  = 'N') then
		insert into pls_requisicao_glosa(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_execucao,
			nr_seq_exec_proc, nr_seq_exec_mat, nr_seq_motivo_glosa,
			ds_observacao)
		values (nextval('pls_requisicao_glosa_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, nr_seq_execucao_w,
			nr_seq_proc_origem_w, null, 566, 
			'Procedimento negado pelos grupos de analise.');
	end if;
	
	if (nr_seq_lote_exec_w = 0 ) then
		nr_se_exec_item_w := nr_se_exec_item_w ||' '|| nr_seq_proc_origem_w||' ';
		/* Adicionar o item selecionada na lista temporaria de execucao */
	
		CALL pls_carregar_itens_exec(nr_seq_segurado_w, nr_seq_proc_origem_w, nr_seq_execucao_w, nm_usuario_p);
	end if;
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into	
	nr_seq_mat_origem_w,
	nr_seq_material_w,
	qt_ajuste_w,
	nr_seq_motivo_exc_w,
	ie_status_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	update	pls_execucao_req_item
	set	nr_seq_material		= nr_seq_material_w,
		qt_item			= qt_ajuste_w,
		--nr_seq_motivo_exc 	= nr_seq_motivo_exc_w,
		ie_situacao 		= CASE WHEN ie_status_w='A' THEN 'S' WHEN ie_status_w='N' THEN 'G' END ,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia 		= nr_seq_mat_origem_w;
	
	if (ie_status_w  = 'N') then
		insert into pls_requisicao_glosa(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_execucao,
			nr_seq_exec_proc, nr_seq_exec_mat, nr_seq_motivo_glosa,
			ds_observacao)
		values (nextval('pls_requisicao_glosa_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, nr_seq_execucao_w, 
			null, nr_seq_mat_origem_w, 566,
			'Material negado pelos grupos de analise.');
	end if;
	if (nr_seq_lote_exec_w = 0 ) then
		nr_se_exec_item_w := nr_se_exec_item_w ||' '|| nr_seq_mat_origem_w||' ';
		/* Adicionar o item selecionada na lista temporaria de execucao */
	
		CALL pls_carregar_itens_exec(nr_seq_segurado_w, nr_seq_mat_origem_w, nr_seq_execucao_w, nm_usuario_p);
	end if;
	end;
end loop;
close C02;


if (nr_seq_lote_exec_w > 0 ) then
	/* Gera a guia para as execucoes geradas por lote */

	CALL pls_gerar_guia_requisicao_lote(	nr_seq_lote_exec_w, nr_seq_segurado_w, nr_seq_prestador_w,
					nm_usuario_p, 'A', cd_estabelecimento_w,
					null, null, null,
					null, null);
else
	/* Gerar a guia para as execucoes antigas que nao possuem lote de execucao */

	nr_seq_retorno_w := pls_gerar_guia_requisicao(nr_seq_segurado_w, nr_seq_prestador_w, nr_seq_execucao_w, nm_usuario_p, 'A', cd_estabelecimento_w, null, null, null, null, nr_seq_retorno_w);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_exec_liberada ( nr_seq_auditoria_p bigint, nm_usuario_p text) FROM PUBLIC;

