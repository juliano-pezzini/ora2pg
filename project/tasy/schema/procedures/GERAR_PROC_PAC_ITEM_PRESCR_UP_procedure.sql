-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proc_pac_item_prescr_up ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, cd_setor_atendimento_p bigint, cd_acao_p bigint, dt_procedimento_p timestamp, nm_usuario_p text, cd_medico_exec_proc_p text, nr_seq_exame_p bigint, ie_lado_p text, nr_seq_pe_prescr_p bigint default null, nr_seq_gas_p bigint default null, cd_proc_adic_p bigint default null, ie_origem_adic_p bigint default null, nr_seq_proc_interno_adic_p bigint default null, nr_seq_interno_p bigint default null, nr_doc_convenio_p text default null, cd_senha_p text default null) AS $body$
DECLARE

			
/* ATENCAO !!!!!!! NAO COLOCAR COMMIT DENTRO DESSA PROCEDURE.  TAMBEM NAO COLOCAR PROCEDURES QUE TENHAM COMMIT DENTRO DESSA. ATENCAO 

!!!!!!!!!! */
nr_sequencia_w			bigint;
nr_atendimento_w		bigint;
nr_cirurgia_propaci_w		bigint;
dt_entrada_unidade_w		timestamp;
dt_execucao_w			timestamp;
dt_prescricao_w			timestamp;
nr_seq_interno_w		bigint;
nr_seq_proc_princ_w		bigint;
NR_INTERNO_CONTA_WW		bigint;
CD_CONVENIO_GLOSA_W		bigint;
CD_CATEGORIA_GLOSA_W		bigint;
qt_lancamento_w			double precision;
QT_EXCEDIDA_W			double precision;
cd_especialidade_prescr_w	bigint;
cd_setor_prescr_w		bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
ie_gerar_setor_prescr_w		varchar(10);
ie_acao_excesso_w		varchar(10);
CD_MEDICO_EXECUTOR_W		varchar(50);
cd_classif_setor_w		varchar(10);
ie_lanca_auto_vinc_w		varchar(10);
cd_cgc_prestador_w		varchar(14);
ie_regra_uso_w			varchar(14);
cd_setor_atendimento_w		integer;
dt_procedimento_w			timestamp;
nr_doc_convenio_w		varchar(20);
cd_local_estoque_w		smallint;
ds_erro_w			varchar(255);
ie_tipo_guia_w			varchar(2);
cd_senha_prescr_w		varchar(20);
ie_via_acesso_w			varchar(20);
cd_profissional_w			varchar(10);

cd_estabelecimento_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_medico_executor_w		varchar(2);
cd_cgc_w			varchar(14);
cd_medico_regra_w		varchar(10);
nr_doc_conv_prescr_w		varchar(20);
cd_medico_exec_prescr_w		varchar(10);
cd_senha_w			varchar(20);
ie_guia_prescr_w			varchar(01);
cd_cbo_w			varchar(6);
cd_especialidade_w		bigint;
cd_funcao_medico_w		bigint;
ie_clinica_w			integer;
dt_entrada_w			timestamp;
nr_seq_proc_interno_w		bigint;
nr_seq_classificacao_w		bigint;

cd_medico_exec_w		varchar(10);
ie_medico_req_proc_w	varchar(01) := 'N';
cd_medico_prescr_w		varchar(10);
cd_medico_req_w			varchar(10);
cd_funcao_w				integer;
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);
cd_convenio_excesso_w		integer;
cd_categoria_excesso_w		varchar(10);
ds_texto_aux_w			varchar(255);
cd_motivo_exc_conta_w		parametro_faturamento.cd_motivo_exc_conta%type;


BEGIN

if (coalesce(nr_prescricao_p,0) > 0) then
	select	coalesce(cd_setor_atendimento_p,coalesce(b.cd_setor_entrega,b.cd_setor_atendimento)),
		b.nr_atendimento,
		coalesce(dt_procedimento_p, b.dt_prescricao),
		nr_doc_conv,
		cd_senha,
		a.dt_entrada,
		nr_seq_classificacao,
		b.cd_setor_atendimento,
		b.cd_medico
	into STRICT	cd_setor_atendimento_w,
		nr_atendimento_w,
		dt_prescricao_w,
		nr_doc_conv_prescr_w,
		cd_senha_prescr_w,
		dt_entrada_w,
		nr_seq_classificacao_w,
		cd_setor_prescr_w,
		cd_medico_prescr_w
	from	atendimento_paciente a,
		prescr_medica b
	where  	b.nr_prescricao	= nr_prescricao_p
	and	a.nr_atendimento = b.nr_atendimento;
else
	select	coalesce(cd_setor_atendimento_p,obter_setor_atendimento(a.nr_atendimento)),
		a.nr_atendimento,
		dt_procedimento_p,
		a.dt_entrada,
		nr_seq_classificacao
	into STRICT	cd_setor_atendimento_w,
		nr_atendimento_w,
		dt_prescricao_w,
		dt_entrada_w,
		nr_seq_classificacao_w
	from	atendimento_paciente a
	where  	a.nr_atendimento = nr_atendimento_p;
	
	select	max(dt_prescricao)
	into STRICT	dt_prescricao_w
	from	pe_prescricao
	where	nr_sequencia	= nr_seq_pe_prescr_p;
	
end if;

if (dt_entrada_w > dt_prescricao_w) then
	SELECT * FROM obter_convenio_execucao(nr_atendimento_w, dt_entrada_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
else
	SELECT * FROM obter_convenio_execucao(nr_atendimento_w, dt_prescricao_w, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
end if;

select	max(b.cd_cgc),
	max(a.cd_estabelecimento),
	max(a.ie_tipo_atendimento),
	max(a.ie_clinica)
into STRICT	cd_cgc_prestador_w,
	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	ie_clinica_w
from	estabelecimento b,
	atendimento_paciente a
where	a.nr_atendimento	= nr_atendimento_w
  and	a.cd_estabelecimento	= b.cd_estabelecimento;

ie_guia_prescr_w := obter_param_usuario(921, 27, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_guia_prescr_w); /* os 89639 fabricio em 28/04/2008 -> 

alejandra/pixeon */
ie_gerar_setor_prescr_w := obter_param_usuario(1113, 496, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_setor_prescr_w);
ie_lanca_auto_vinc_w := obter_param_usuario(1113, 505, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_lanca_auto_vinc_w);

if (coalesce(ie_guia_prescr_w,'N') = 'S') then
	nr_doc_convenio_w:= nr_doc_conv_prescr_w;
end if;

if (ie_gerar_setor_prescr_w = 'S') then
	
	select	max(cd_classif_setor)
	into STRICT	cd_classif_setor_w
	from	setor_atendimento
	where	cd_setor_atendimento = cd_setor_atendimento_p;
	
	if (cd_classif_setor_w	= 5) then
		cd_setor_atendimento_w	:= cd_setor_atendimento_p;
	else
		cd_setor_atendimento_w	:= cd_setor_prescr_w;
	end if;
		
end if;

if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and
	((consiste_atend_proc_conta(cd_procedimento_p, ie_origem_proced_p, cd_estabelecimento_w)) = 'S') then

	select	coalesce(obter_setor_atendimento(nr_atendimento_p),cd_setor_atendimento_p)
	into STRICT	cd_setor_atendimento_w
	;

end if;

select	max(cd_local_estoque)
into STRICT	cd_local_estoque_w
from	setor_atendimento
where	cd_setor_atendimento	= cd_setor_atendimento_w;

dt_entrada_unidade_w		:=  dt_prescricao_w;
if (dt_entrada_unidade_w > clock_timestamp()) then
	dt_entrada_unidade_w	:= clock_timestamp();
end if;

/* rafael em 20/2/8 os76992  */

begin
select	max(nr_seq_interno)
into STRICT	nr_seq_interno_w
from 	atend_paciente_unidade
where 	cd_setor_atendimento	= cd_setor_atendimento_w
and	nr_atendimento 		= nr_atendimento_w
and	dt_entrada_unidade_w between dt_entrada_unidade and coalesce(dt_saida_unidade, clock_timestamp());
exception
when others then
		nr_seq_interno_w := 0;
end;

if (coalesce(nr_seq_interno_w,0) = 0) then
	CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, dt_entrada_unidade_w, 'N', nm_usuario_p);
else
	Select	max(dt_entrada_unidade)
	into STRICT	dt_entrada_unidade_w
	from	Atend_paciente_unidade
	where	nr_seq_interno	= nr_seq_interno_w
	and	nr_atendimento	= nr_atendimento_w;
end if;

if (coalesce(nr_seq_interno_w,0) = 0) then
	select	max(nr_seq_interno),
		max(dt_entrada_unidade)
	into STRICT	nr_seq_interno_w,
		dt_entrada_unidade_w
	from	atend_paciente_unidade
	where	nr_atendimento			= nr_atendimento_w
	and	cd_setor_atendimento		= cd_setor_atendimento_w	
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade_w);
	
	if (coalesce(nr_seq_interno_w,0) = 0) then
		select	max(nr_seq_interno),
			max(dt_entrada_unidade)
		into STRICT	nr_seq_interno_w,
			dt_entrada_unidade_w
		from	atend_paciente_unidade
		where	nr_atendimento			= nr_atendimento_w
		and	cd_setor_atendimento		= cd_setor_atendimento_w;
	end if;
end if;
/* 
select	max(nr_seq_interno), 
	max(dt_entrada_unidade)
into	nr_seq_interno_w, 
	dt_entrada_unidade_w
from	atend_paciente_unidade
where	nr_atendimento		= nr_atendimento_w
and	cd_setor_atendimento	= cd_setor_atendimento_w	
and	dt_entrada_unidade_w between dt_entrada_unidade and nvl(dt_saida_unidade, sysdate);
*/


/* fim rafael em 20/2/8 os76992  */

nr_seq_proc_interno_w := nr_seq_proc_interno_p;
if (nr_seq_proc_interno_w = 0) then
	nr_seq_proc_interno_w := null;
end if;

SELECT * FROM obter_dados_prescr_proc_up(nr_prescricao_p, nr_sequencia_p, nm_usuario_p, ie_origem_inf_w, cd_cgc_laboratorio_w) INTO STRICT ie_origem_inf_w, cd_cgc_laboratorio_w;

SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_w, nr_seq_exame_p, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_regra_w, cd_profissional_w, null, dt_prescricao_w, nr_seq_classificacao_w, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_prescr_w) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_regra_w, cd_profissional_w;
			
if (ie_medico_executor_w = 'N') then
	cd_medico_exec_w	:= null;
else
	cd_medico_exec_w	:= coalesce(cd_medico_regra_w, cd_medico_exec_proc_p);
end if;

if (obter_funcao_ativa	= 1113) and (coalesce(cd_profissional_w::text, '') = '') and (ie_medico_executor_w not in ('Y', 'F', 'N')) then
	select	max(coalesce(cd_pessoa_fisica,cd_profissional_w))
	into STRICT	cd_profissional_w
	from	usuario
	where	nm_usuario = nm_usuario_p;

end if;

begin
select	obter_regra_via_acesso(cd_procedimento_p, ie_origem_proced_p, cd_estabelecimento_w, cd_convenio_w)
into STRICT	ie_via_acesso_w
;
exception
	when others then
		ie_via_acesso_w	:= null;
end;

if (ie_origem_proced_p	= 7) then /*felipe martini os92030 06/04/2008 */
	cd_cbo_w := sus_obter_cbo_medico_estab(coalesce(cd_medico_exec_w,cd_profissional_w),cd_procedimento_p,dt_procedimento_p,0,cd_estabelecimento_w);
end if;

SELECT * FROM obter_proced_espec_medica(	cd_estabelecimento_w, cd_convenio_w, cd_procedimento_p, ie_origem_proced_p, null, null, null, ie_clinica_w, cd_setor_atendimento_w, cd_especialidade_w, cd_funcao_medico_w, coalesce(cd_medico_regra_w, cd_medico_exec_proc_p), nr_seq_proc_interno_w, ie_tipo_atendimento_w) INTO STRICT cd_especialidade_w, cd_funcao_medico_w;
				
select	max(cd_especialidade)
into STRICT	cd_especialidade_prescr_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

if (cd_especialidade_prescr_w IS NOT NULL AND cd_especialidade_prescr_w::text <> '') then
	cd_especialidade_w	:= cd_especialidade_prescr_w;
end if;

select nextval('procedimento_paciente_seq')
into STRICT nr_sequencia_w
;

if (dt_entrada_unidade_w IS NOT NULL AND dt_entrada_unidade_w::text <> '') then
	cd_funcao_w := obter_funcao_ativa;
	if (cd_funcao_w	= 722) then
		select	coalesce(max(obter_valor_param_usuario(cd_funcao_w, 184, obter_perfil_ativo, nm_usuario_p, 0)), 'N')
		into STRICT	ie_medico_req_proc_w
		
		where	cd_funcao_w	= 722;

	elsif (cd_funcao_w = 916) then
                select	coalesce(max(obter_valor_param_usuario(cd_funcao_w, 179, obter_perfil_ativo, nm_usuario_p, 0)), 'N')
		into STRICT	ie_medico_req_proc_w
		
		where	cd_funcao_w	= 916;
		
        end if;
        if (ie_medico_req_proc_w = 'S') then
                cd_medico_req_w	:= cd_medico_prescr_w;
        end if;

	dt_procedimento_w 		:= dt_prescricao_w;
	insert into procedimento_paciente(
		nr_sequencia,
		nr_atendimento,
		dt_entrada_unidade,
		cd_procedimento,
		dt_procedimento,
		qt_procedimento,
		dt_atualizacao,
		nm_usuario,
		cd_convenio,
		cd_categoria,
		dt_prescricao,
		nr_prescricao,
		nr_sequencia_prescricao,
		cd_acao,
		cd_setor_atendimento,
		ie_origem_proced,
		tx_procedimento,
		cd_cgc_prestador,
		nm_usuario_original,
		nr_doc_convenio,
		nr_seq_atepacu,
		ie_auditoria,
		nr_seq_proc_interno,
		cd_medico_executor,
		cd_senha,
		nr_seq_exame,
		ie_via_acesso,
		ie_tecnica_utilizada,
		cd_pessoa_fisica,
		cd_cbo,
		ie_funcao_medico,
		cd_especialidade,
		nr_interno_conta,
		nr_sequencia_gas,
		cd_medico_req)
	values (
		nr_sequencia_w,
		nr_atendimento_w,
		dt_entrada_unidade_w,
		cd_procedimento_p,
		dt_prescricao_w,
		qt_procedimento_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_convenio_w,
		cd_categoria_w,
		dt_prescricao_w,
		nr_prescricao_p,
		nr_sequencia_p,
		cd_acao_p,
		cd_setor_atendimento_w,
		ie_origem_proced_p,
		100,
		coalesce(cd_cgc_w, cd_cgc_prestador_w),
		nm_usuario_p,
		coalesce(nr_doc_convenio_p,coalesce(nr_doc_convenio_w, nr_doc_conv_prescr_w)),
		nr_seq_interno_w,
		'N',
		nr_seq_proc_interno_w,
		cd_medico_exec_w,
		coalesce(cd_senha_p, cd_senha_prescr_w),
		nr_seq_exame_p,
		ie_via_acesso_w,
		null,
		cd_profissional_w,
		cd_cbo_w,
		cd_funcao_medico_w,
		cd_especialidade_w,
		nr_interno_conta_p,
		nr_seq_gas_p,
		cd_medico_req_w);

	ds_erro_w := consiste_exec_procedimento(nr_sequencia_w, ds_erro_w);
	CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
	
	ie_regra_uso_w := obter_param_usuario(916, 745, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_uso_w);
		
	if (ie_regra_uso_w = 'S') then
	
		select	max(nr_atendimento),
			max(qt_procedimento),
			max(dt_procedimento),
			max(cd_medico_executor),
			max(cd_categoria),
			max(nr_cirurgia),
			max(nr_interno_conta)
		into STRICT	nr_atendimento_w,
			qt_lancamento_w,
			dt_execucao_w,
			cd_medico_executor_w,
			cd_categoria_w,
			nr_cirurgia_propaci_w,
			nr_interno_conta_ww
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_w;
					
	   SELECT * FROM obter_regra_qtde_proc_exec(nr_atendimento_w, cd_procedimento_p, ie_origem_proced_p, 0, dt_execucao_w, cd_medico_executor_w, ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w, nr_seq_proc_interno_w, cd_categoria_w, null, nr_interno_conta_ww, nr_cirurgia_propaci_w, null, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, ds_erro_w, cd_convenio_excesso_w, cd_categoria_excesso_w;
									
		if (ie_acao_excesso_w = 'E') then
			if (qt_excedida_w   > 0) then

				--Excluido pela regra de uso da funcao Cadastro de Convenios
				ds_texto_aux_w := substr(wheb_mensagem_pck.get_texto(300556),1,255);
					
				select	max(cd_motivo_exc_conta)
				into STRICT	cd_motivo_exc_conta_w
				from	parametro_faturamento
				where	cd_estabelecimento = cd_estabelecimento_w;
				
				CALL excluir_matproc_conta(nr_sequencia_w, nr_interno_conta_ww, coalesce(cd_motivo_exc_conta_w, 12), ds_texto_aux_w, 'P', nm_usuario_p, 'S');
				CALL ajustar_conta_vazia_sem_commit(nr_atendimento_w, nm_usuario_p);
						
			end if;
			
		elsif (ie_acao_excesso_w = 'P') then
			if (qt_excedida_w   > 0) then
				
				 SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;
					
				update	procedimento_paciente
				set	nr_interno_conta	 = NULL,
					cd_convenio		= cd_convenio_glosa_w,
					cd_categoria		= cd_categoria_glosa_w
				where	nr_sequencia 		= nr_sequencia_w;
				
				
				CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_w, nm_usuario_p);
				
				CALL ajustar_conta_vazia_sem_commit(nr_atendimento_w, nm_usuario_p);
				
			end if;
			
		elsif (ie_acao_excesso_w = 'Z') then
			if (qt_excedida_w   > 0) then
			
				update	procedimento_paciente
				set	vl_anestesista		= 0,
					vl_auxiliares		= 0,           
					vl_custo_operacional	= 0,    
					vl_materiais		= 0,            
					vl_medico		= 0,   
					vl_procedimento		= 0,
					ie_valor_informado	= 'S'
				where	nr_sequencia 		= nr_sequencia_w;
				
			
			end if;	

		elsif (ie_acao_excesso_w = 'C') then
		
			if (qt_excedida_w   > 0) and
				(cd_convenio_excesso_w IS NOT NULL AND cd_convenio_excesso_w::text <> '' AND cd_categoria_excesso_w IS NOT NULL AND cd_categoria_excesso_w::text <> '') then

				update	procedimento_paciente
				set	nr_interno_conta	 = NULL,
					cd_convenio		= cd_convenio_excesso_w,
					cd_categoria		= cd_categoria_excesso_w
				where	nr_sequencia 		= nr_sequencia_w;
				
				
				CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_excesso_w, nm_usuario_p);
				
				CALL ajustar_conta_vazia_sem_commit(nr_atendimento_w, nm_usuario_p);
			end if;
		end if;
	end if;

	/* USADO DENTRO DA TRIGGER PRESCR_PROCEDIMENTO_UPDATE, DARA MUTANTES SE COLOCAR ESTA PROCEDURE*/


	/*Coloquei novamente devido a OS 386087 */

	if (coalesce(nr_seq_interno_p::text, '') = '') or (ie_lanca_auto_vinc_w = 'S') then
		CALL adep_gerar_lanc_automatico(nr_atendimento_w,cd_local_estoque_w,34,nm_usuario_p,nr_sequencia_w,null,null,null,coalesce(ie_lado_p,'A'),null,cd_proc_adic_p, ie_origem_adic_p,nr_seq_proc_interno_adic_p,
						cd_procedimento_p, ie_origem_proced_p,nr_seq_proc_interno_p,qt_procedimento_p,

nr_seq_exame_p);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proc_pac_item_prescr_up ( nr_prescricao_p bigint, nr_sequencia_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_proc_interno_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, cd_setor_atendimento_p bigint, cd_acao_p bigint, dt_procedimento_p timestamp, nm_usuario_p text, cd_medico_exec_proc_p text, nr_seq_exame_p bigint, ie_lado_p text, nr_seq_pe_prescr_p bigint default null, nr_seq_gas_p bigint default null, cd_proc_adic_p bigint default null, ie_origem_adic_p bigint default null, nr_seq_proc_interno_adic_p bigint default null, nr_seq_interno_p bigint default null, nr_doc_convenio_p text default null, cd_senha_p text default null) FROM PUBLIC;

