-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_ng_pk () AS $body$
DECLARE


qt_commit_w		bigint;
qt_registro_w		bigint;
qt_reg_sem_grupo_w	bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_natureza_gasto,
	a.cd_estabelecimento
from	natureza_gasto a;

Vet01	C01%RowType;

c02 CURSOR FOR
SELECT	nr_sequencia
from	orcamento_custo
where	cd_natureza_gasto 	= vet01.cd_natureza_gasto
and	cd_estabelecimento	= vet01.cd_estabelecimento
and	coalesce(nr_seq_ng::text, '') = '';

vet02	C02%RowType;

c03 CURSOR FOR
SELECT	nr_seq_interno
from	resultado_centro_controle
where	cd_natureza_gasto	= vet01.cd_natureza_gasto
and	cd_estabelecimento	= vet01.cd_estabelecimento
and	coalesce(nr_seq_ng::text, '') = '';

vet03	C03%RowType;

c04 CURSOR FOR
SELECT	nr_sequencia
from	taxa_custo_nat
where	cd_natureza_gasto	= vet01.cd_natureza_gasto
and	cd_estabelecimento	= vet01.cd_estabelecimento
and	coalesce(nr_seq_ng::text, '') = '';

vet04	C04%RowType;


BEGIN

select	count(*)
into STRICT	qt_registro_w
from	natureza_gasto
where	coalesce(nr_sequencia::text, '') = '';

if (qt_registro_w > 0) then
	update	natureza_gasto
	set	nr_sequencia	= nextval('natureza_gasto_seq')
	where	coalesce(nr_sequencia::text, '') = '';
end if;

select	count(*)
into STRICT	qt_registro_w
from	natureza_gasto
where	cd_empresa	<> obter_empresa_estab(cd_estabelecimento)
and	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

if (qt_registro_w > 0) then

	update	natureza_gasto
	set	cd_empresa	= obter_empresa_estab(cd_estabelecimento)
	where	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

end if;

commit;

select	count(*)
into STRICT	qt_registro_w
from	natureza_gasto
where	coalesce(cd_empresa::text, '') = ''
and	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '');

if (qt_registro_w > 0) then

	update	natureza_gasto
	set	cd_empresa	= obter_empresa_estab(cd_estabelecimento)
	where	(cd_estabelecimento IS NOT NULL AND cd_estabelecimento::text <> '')
	and	coalesce(cd_empresa::text, '') = '';

end if;

commit;

select	count(*)
into STRICT	qt_registro_w
from	orcamento_custo
where	coalesce(nr_seq_ng::text, '') = '';

/* ORCAMENTO_CUSTO*/

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C02;
		loop
		fetch C02 into
			vet02;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			qt_commit_w	:= qt_commit_w + 1;

			update	orcamento_custo
			set	nr_seq_ng		= Vet01.nr_sequencia
			where	nr_sequencia		= vet02.nr_sequencia;

			if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;
			end;
		end loop;
		close C02;

		if (qt_commit_w >= 5000) then
			commit;
			qt_commit_w	:= 0;
		end if;

		end;
	end loop;
	close C01;

	commit;

end if;


select	count(*)
into STRICT	qt_registro_w
from	orcamento_distribuido
where	coalesce(nr_seq_ng::text, '') = ''
and	coalesce(cd_natureza_gasto,0) <> 0;

/* ORCAMENTO_DISTRIBUIDO - N達o tinha integridade */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	orcamento_distribuido
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	coalesce(nr_seq_ng::text, '') = '';

		commit;

		end;
	end loop;
	close C01;

	commit;

end if;


select	count(*)
into STRICT	qt_registro_w
from	orcamento_distribuido
where	coalesce(cd_natureza_gasto_dest,0) <> 0;

/* ORCAMENTO_DISTRIBUIDO - N達o tinha integridade */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	orcamento_distribuido
		set	nr_seq_ng_dest		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto_dest	= Vet01.cd_natureza_gasto;

		commit;

		end;
	end loop;
	close C01;

	commit;

end if;

select	count(*)
into STRICT	qt_registro_w
from	orcamento_distribuido
where	coalesce(cd_natureza_gasto_orig,0) <> 0;

/* ORCAMENTO_DISTRIBUIDO - N達o tinha integridade, mas gravava  */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	orcamento_distribuido
		set	nr_seq_ng_orig		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto_orig	= Vet01.cd_natureza_gasto;

		commit;

		end;
	end loop;
	close C01;

	commit;

end if;


select	count(*)
into STRICT	qt_registro_w
from	centro_controle_tipo_gasto
where	coalesce(nr_seq_ng::text, '') = ''
and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '');

/* CENTRO_CONTROLE_TIPO_GASTO	Atributo:NR_SEQ_NG*/

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	centro_controle_tipo_gasto
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	coalesce(nr_seq_ng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CRITERIO_DISTR_ORC	ATRIBUTO:NR_SEQ_NG*/

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc
where	coalesce(nr_seq_ng::text, '') = ''
and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '')
		and	coalesce(nr_seq_ng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CRITERIO_DISTR_ORC	ATRIBUTO:NR_SEQ_NG_REF*/

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc
where	coalesce(nr_seq_ng_ref::text, '') = ''
and	(cd_nat_gasto_ref IS NOT NULL AND cd_nat_gasto_ref::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc
		set	nr_seq_ng_ref		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_nat_gasto_ref	= Vet01.cd_natureza_gasto
		and	(cd_nat_gasto_ref IS NOT NULL AND cd_nat_gasto_ref::text <> '')
		and	coalesce(nr_seq_ng_ref::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CRITERIO_DISTR_ORC	ATRIBUTO:NR_SEQ_NG_ORIG*/

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc
where	coalesce(nr_seq_ng_orig::text, '') = ''
and	(cd_natureza_gasto_orig IS NOT NULL AND cd_natureza_gasto_orig::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc
		set	nr_seq_ng_orig		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto_orig	= Vet01.cd_natureza_gasto
		and	(cd_natureza_gasto_orig IS NOT NULL AND cd_natureza_gasto_orig::text <> '')
		and	coalesce(nr_seq_ng_orig::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* CRITERIO_DISTR_ORC	ATRIBUTO:NR_SEQ_NG_DEST*/

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc
where	coalesce(nr_seq_ng_dest::text, '') = ''
and	(cd_natureza_gasto_dest IS NOT NULL AND cd_natureza_gasto_dest::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc
		set	nr_seq_ng_dest		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto_dest	= Vet01.cd_natureza_gasto
		and	(cd_natureza_gasto_dest IS NOT NULL AND cd_natureza_gasto_dest::text <> '')
		and	coalesce(nr_seq_ng_dest::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

select	count(*)
into STRICT	qt_registro_w
from	criterio_distr_orc_dest
where	(cd_natureza_gasto_dest IS NOT NULL AND cd_natureza_gasto_dest::text <> '')
and	coalesce(nr_seq_ng_dest::text, '') = '';

/* CRITERIO_DISTR_ORC_DEST - N達o tinha integridade */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	criterio_distr_orc_dest
		set	nr_seq_ng_dest		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto_dest	= Vet01.cd_natureza_gasto
		and	coalesce(nr_seq_ng_dest::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;

select	count(*)
into STRICT	qt_registro_w
from	cus_agrup_conta
where	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '')
and	coalesce(nr_seq_ng::text, '') = '';

/* CUS_AGRUP_CONTA - NR_SEQ_NG*/

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	cus_agrup_conta
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	coalesce(nr_seq_ng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;

select	count(*)
into STRICT	qt_registro_w
from	cus_agrup_conta
where	(cd_natureza_origem IS NOT NULL AND cd_natureza_origem::text <> '')
and	coalesce(nr_seq_ng_origem::text, '') = '';

/* CUS_AGRUP_CONTA - NR_SEQ_NG_ORIGEM */

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	cus_agrup_conta
		set	nr_seq_ng_origem		= Vet01.nr_sequencia
		where	cd_estabelecimento		= Vet01.cd_estabelecimento
		and	cd_natureza_origem	= Vet01.cd_natureza_gasto
		and	coalesce(nr_seq_ng_origem::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;

select	count(*)
into STRICT	qt_registro_w
from	cus_amortizacao
where	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '')
and	coalesce(nr_seq_ng::text, '') = '';

/* CUS_AMORTIZACAO - NR_SEQ_NG*/

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	cus_amortizacao
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	coalesce(nr_seq_ng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;


/* CUS_REGRA_IMP_CONTAB	ATRIBUTO:NR_SEQ_NG*/

select	count(*)
into STRICT	qt_registro_w
from	cus_regra_imp_contab
where	coalesce(nr_seq_ng::text, '') = ''
and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	cus_regra_imp_contab
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '')
		and	coalesce(nr_seq_ng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

select	count(*)
into STRICT	qt_registro_w
from	CUS_RESULT_TERC
where	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '')
and	coalesce(nr_seq_ng::text, '') = '';

/* CUS_RESULT_TERC - NR_SEQ_NG*/

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUS_RESULT_TERC
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	coalesce(nr_seq_ng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;

end if;

/* REGRA_CALC_ORC_CUSTO	ATRIBUTO:NR_SEQ_NG_ORIGEM*/

select	count(*)
into STRICT	qt_registro_w
from	REGRA_CALC_ORC_CUSTO
where	coalesce(nr_seq_ng_origem::text, '') = ''
and	(cd_nat_gasto_origem IS NOT NULL AND cd_nat_gasto_origem::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	REGRA_CALC_ORC_CUSTO
		set	nr_seq_ng_origem	= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_nat_gasto_origem	= Vet01.cd_natureza_gasto
		and	(cd_nat_gasto_origem IS NOT NULL AND cd_nat_gasto_origem::text <> '')
		and	coalesce(nr_seq_ng_origem::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;

/* REGRA_CALC_ORC_CUSTO	ATRIBUTO:NR_SEQ_NG_DESTINO*/

select	count(*)
into STRICT	qt_registro_w
from	REGRA_CALC_ORC_CUSTO
where	coalesce(nr_seq_ng_destino::text, '') = ''
and	(cd_nat_gasto_destino IS NOT NULL AND cd_nat_gasto_destino::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	REGRA_CALC_ORC_CUSTO
		set	nr_seq_ng_destino	= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_nat_gasto_destino	= Vet01.cd_natureza_gasto
		and	(cd_nat_gasto_destino IS NOT NULL AND cd_nat_gasto_destino::text <> '')
		and	coalesce(nr_seq_ng_destino::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;


/* CUS_CENTRO_TERC_CRIT	ATRIBUTO:NR_SEQ_NG*/

select	count(*)
into STRICT	qt_registro_w
from	CUS_CENTRO_TERC_CRIT
where	coalesce(nr_seq_ng::text, '') = ''
and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		update	CUS_CENTRO_TERC_CRIT
		set	nr_seq_ng		= Vet01.nr_sequencia
		where	cd_estabelecimento	= Vet01.cd_estabelecimento
		and	cd_natureza_gasto	= Vet01.cd_natureza_gasto
		and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '')
		and	coalesce(nr_seq_ng::text, '') = '';

		end;
	end loop;
	close C01;

	commit;
end if;
commit;

/*TAXA_CUSTO_NAT	ATRIBUTO:NR_SEQ_NG*/

select	count(*)
into STRICT	qt_registro_w
from	taxa_custo_nat
where	coalesce(nr_seq_ng::text, '') = ''
and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C04;
		loop
		fetch C04 into
			vet04;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			qt_commit_w	:= qt_commit_w + 1;

			update	TAXA_CUSTO_NAT
			set	nr_seq_ng		= Vet01.nr_sequencia
			where	nr_sequencia		= vet04.nr_sequencia;
			end;

			if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;
		end loop;
		close C04;

		if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;


		end;
	end loop;
	close C01;

	commit;
end if;



/* RESULTADO_CENTRO_CONTROLE	ATRIBUTO:NR_SEQ_NG*/

select	count(*)
into STRICT	qt_registro_w
from	resultado_centro_controle
where	coalesce(nr_seq_ng::text, '') = ''
and	(cd_natureza_gasto IS NOT NULL AND cd_natureza_gasto::text <> '');

if (qt_registro_w > 0) then

	qt_commit_w	:= 0;

	open C01;
	loop
	fetch C01 into
		Vet01;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		open C03;
		loop
		fetch C03 into
			vet03;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			qt_commit_w	:= qt_commit_w + 1;

			update	resultado_centro_controle
			set	nr_seq_ng		= Vet01.nr_sequencia
			where	nr_seq_interno		= vet03.nr_seq_interno;

			if (qt_commit_w >= 5000) then
				commit;
				qt_commit_w	:= 0;
			end if;

			end;
		end loop;
		close C03;

		if (qt_commit_w >= 5000) then
			commit;
			qt_commit_w	:= 0;
		end if;

		end;
	end loop;
	close C01;

	commit;
end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_ng_pk () FROM PUBLIC;

