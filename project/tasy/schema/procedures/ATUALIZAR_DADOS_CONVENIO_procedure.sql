-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_dados_convenio (nr_atendimento_p bigint, cd_setor_p bigint, cd_tipo_acomodacao_p bigint, ie_commit_p text default 'S', nr_sequencia_p bigint default null) AS $body$
DECLARE


ie_paciente_isolamento_w        varchar(1);
qt_idade_w			bigint;
cd_setor_paciente_w		bigint;
qt_existe_w			bigint;
qt_idade_de_w			bigint;
qt_idade_ate_w			bigint;
ie_isolado_w			varchar(1);
nr_acompanhante_w		bigint;
qt_dieta_acomp_w		bigint;
ie_lib_dieta_w			varchar(15);
ie_achou_w			varchar(1);
ie_lib_dieta_qr_w		varchar(15);
qt_reg_w			bigint;
qt_acomp_w			bigint;
ie_idade_w			bigint;
cd_estabelecimento_w		bigint;
risco_queda_w			varchar(15);
cd_tipo_acomodacao_w		bigint;
cd_risco_queda_w		bigint;
ie_considerar_sae_w		varchar(1);
nr_sequencia_w			bigint;
ie_ultimo_sae_queda_w		bigint;
qt_dieta_w			bigint;
cd_convenio_w			convenio.cd_convenio%type;
nr_seq_classif_w		atendimento_paciente.nr_seq_classificacao%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
ie_dependente_w			pessoa_fisica.ie_dependente%type;
cd_categoria_w			regra_acompanhante_dieta.cd_categoria%type;
cd_plano_convenio_w		regra_acompanhante_dieta.cd_plano_convenio%type;
ie_tipo_atendimento_w	regra_acompanhante_dieta.ie_tipo_atendimento%type;

C01 CURSOR FOR
SELECT	coalesce(qt_idade_de,0),
	coalesce(qt_idade_ate,999),
	ie_isolado,
	nr_acompanhante,qt_dieta_acomp,
	ie_lib_dieta
from	regra_acompanhante_dieta
where 	((cd_setor_atendimento = cd_setor_p) or (coalesce(cd_setor_atendimento::text, '') = ''))
and		((cd_tipo_acomodacao  = cd_tipo_acomodacao_p) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
and		((qt_idade_w between coalesce(qt_idade_de,0) and coalesce(qt_idade_ate,999)) or ((coalesce(IE_PAC_DEFICIENTE, 'N')) = 'S' and (ie_dependente_w = 'S')))
and		ie_paciente_isolamento_w = ie_isolado
and		((cd_convenio = coalesce(cd_convenio_w, 0)) or (coalesce(cd_convenio::text, '') = ''))
and		((cd_categoria = coalesce(cd_categoria_w, 'XPTO')) or (coalesce(cd_categoria::text, '') = ''))
and		((cd_plano_convenio = coalesce(cd_plano_convenio_w, 'XPTO')) or (coalesce(cd_plano_convenio::text, '') = ''))
and		((nr_seq_classificacao = coalesce(nr_seq_classif_w, 0)) or (coalesce(nr_seq_classificacao::text, '') = ''))
and		((ie_tipo_atendimento = coalesce(ie_tipo_atendimento_w, 0)) or (coalesce(ie_tipo_atendimento::text, '') = ''))
order by cd_tipo_acomodacao desc;


BEGIN
---
select  count(*)
into STRICT	qt_existe_w
from	regra_acompanhante_dieta;

if (qt_existe_w > 0) then

	select	coalesce(max(a.ie_paciente_isolado),'N'),
		coalesce(max(obter_idade_pf(a.cd_pessoa_fisica, clock_timestamp(),'A')),0),
		max(b.cd_setor_atendimento),
		max(c.cd_tipo_acomodacao),
		max(c.cd_convenio),
		max(nr_seq_classificacao),
		max(a.cd_pessoa_fisica),
		max(c.cd_categoria),
		max(c.cd_plano_convenio),
		max(a.ie_tipo_atendimento)
	into STRICT	ie_paciente_isolamento_w,
		qt_idade_w,
		cd_setor_paciente_w,
		cd_tipo_acomodacao_w,
		cd_convenio_w,
		nr_seq_classif_w,
		cd_pessoa_fisica_w,
		cd_categoria_w,
		cd_plano_convenio_w,
		ie_tipo_atendimento_w
	from	atendimento_paciente a,
		atend_paciente_unidade b,
		atend_categoria_convenio c
	where 	a.nr_atendimento = b.nr_atendimento
	and	a.nr_atendimento = c.nr_atendimento
	and	c.nr_seq_interno = obter_atecaco_atendimento(a.nr_atendimento)
	and	b.nr_seq_interno = OBTER_ATEPACU_PACIENTE(a.nr_atendimento,'IAA')
	and	a.nr_atendimento = nr_atendimento_p;

	select 	OBTER_DADOS_PF(cd_pessoa_fisica_w, 'DP')
	into STRICT 	ie_dependente_w
	;

	ie_achou_w := 'N';

	open C01;
	loop
	fetch C01 into
		qt_idade_de_w,
		qt_idade_ate_w,
		ie_isolado_w,
		nr_acompanhante_w,
		qt_dieta_acomp_w,
		ie_lib_dieta_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_achou_w := 'S';
		end;
	end loop;
	close C01;

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	select 	coalesce(max(ie_risco_queda),'N'),
		coalesce(max(cd_risco_queda),0)
	into STRICT	risco_queda_w,
		cd_risco_queda_w
	from	parametro_atendimento
	where	cd_estabelecimento = cd_estabelecimento_w;

	select	coalesce(max(ie_considerar_sae),'N')
	into STRICT	ie_considerar_sae_w
	from	regra_acompanhante_dieta
	where 	((cd_setor_atendimento = cd_setor_p) or (coalesce(cd_setor_atendimento::text, '') = ''))
	and	((cd_tipo_acomodacao  = cd_tipo_acomodacao_p) or (coalesce(cd_tipo_acomodacao::text, '') = ''))
	and	((qt_idade_w between coalesce(qt_idade_de,0) and coalesce(qt_idade_ate,999)) or ((coalesce(IE_PAC_DEFICIENTE, 'N')) = 'S' and (ie_dependente_w = 'S')))
	and (ie_paciente_isolamento_w = ie_isolado);

	nr_sequencia_w := nr_sequencia_p;

	if (coalesce(nr_sequencia_w::text, '') = '') then

		select   max(a.nr_sequencia)
		into STRICT	 nr_sequencia_w
		from     PE_PRESCRICAO a,
			 PE_PRESCR_DIAG b
		where	a.nr_sequencia = b.nr_seq_prescr
		and	a.nr_atendimento = nr_atendimento_p;

	end if;


	select	count(*)
	into STRICT	ie_ultimo_sae_queda_w
	from	PE_PRESCR_DIAG a
	where	a.nr_seq_diag	=	cd_risco_queda_w
	and	a.nr_seq_prescr = 	nr_sequencia_w;


	if	((risco_queda_w = 'S') and (ie_considerar_sae_w = 'S' AND ie_ultimo_sae_queda_w > 0) and (cd_risco_queda_w > 0)) then


		select	coalesce(obter_idade_pf(obter_pessoa_atendimento(nr_atendimento_p,'C'),clock_timestamp(),'A'),0)
		into STRICT	ie_idade_w
		;

		if 	((ie_idade_w <= 8) or (obter_se_pac_isolamento(nr_atendimento_p) = 'S')) then
			ie_lib_dieta_qr_w := 'T';
		else	ie_lib_dieta_qr_w := 'L';
		end if;

		select	coalesce(obter_qt_registro_qd(nr_atendimento_p),0)
		into STRICT	qt_reg_w
		;


		if (qt_reg_w > 0) then

			if  ((ie_idade_w > qt_idade_de_w) or (ie_idade_w < qt_idade_ate_w)) then

				update   atend_categoria_convenio
				set 	 nr_acompanhante = 1,
					 qt_dieta_acomp = 1,
					 ie_lib_dieta = ie_lib_dieta_qr_w
				where    nr_atendimento =  nr_atendimento_p;

				ie_lib_dieta_w := 'P';
				qt_dieta_acomp_w := 5;
				nr_acompanhante_w := 10;

				If (ie_commit_p = 'S') then
					if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
				End if;

				ie_achou_w := 'P';
			end if;
		end if;
	end if;

	if	 (qt_reg_w = 0 AND ie_achou_w <> 'S') then
		ie_achou_w := 'N';
	end if;

	if (ie_achou_w = 'S') then

		update	atend_categoria_convenio
		set	nr_acompanhante = nr_acompanhante_w,
			ie_lib_dieta = 	  ie_lib_dieta_w,
			qt_dieta_acomp =  qt_dieta_acomp_w
		where	nr_atendimento =  nr_atendimento_p;

	end if;


	if (ie_achou_w = 'N') then

		update	atend_categoria_convenio
		set	nr_acompanhante = 0,
			ie_lib_dieta = 	  'N',
			qt_dieta_acomp =  0
		where	nr_atendimento =  nr_atendimento_p;
	end if;

	if 	((coalesce(ie_lib_dieta_w::text, '') = '') and (coalesce(qt_dieta_acomp_w::text, '') = '') and (coalesce(nr_acompanhante_w::text, '') = '')) then
		update	atend_categoria_convenio
		set	nr_acompanhante = 0,
			ie_lib_dieta = 	  'N',
			qt_dieta_acomp =  0
		where	nr_atendimento =  nr_atendimento_p;
	end if;

end if;
-- Essa procedure Ã© utilizada na trigger PE_PRESCRICAO_aftupdate, por isso o ie_commit.
If (ie_commit_p = 'S') then
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
End if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_dados_convenio (nr_atendimento_p bigint, cd_setor_p bigint, cd_tipo_acomodacao_p bigint, ie_commit_p text default 'S', nr_sequencia_p bigint default null) FROM PUBLIC;

