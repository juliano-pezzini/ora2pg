-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_clinica_tipo_atend ( cd_estabelecimento_p bigint, ie_clinica_p bigint, ie_tipo_atendimento_p bigint, nr_seq_regra_funcao_p bigint, cd_setor_usuario_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ie_clinica_w			bigint;
nr_seq_regra_funcao_w		bigint;
cd_setor_usuario_w		integer;/* Ivan em 23/08/2007 OS65991 */
qt_reg_w			bigint;
cd_perfil_w			integer;

C01 CURSOR FOR
	SELECT	ie_clinica,
		nr_seq_regra_funcao,
		cd_setor_atendimento
	from	clinica_tipo_atendimento
	where	cd_estabelecimento			= cd_estabelecimento_p
	and	ie_tipo_atendimento			= ie_tipo_atendimento_p
	and	coalesce(ie_situacao,'A') = 'A'
	and	(((coalesce(ie_clinica::text, '') = '') and (ie_toda_clinica = 'S'))
	or	 (ie_clinica IS NOT NULL AND ie_clinica::text <> '' AND ie_clinica = ie_clinica_p)
	or	 ((coalesce(ie_clinica::text, '') = '') and (ie_toda_clinica = 'N') and (coalesce(ie_clinica_p,0) = 0)))
	and	((coalesce(nr_seq_regra_funcao::text, '') = '') or (coalesce(nr_seq_regra_funcao_p::text, '') = '') or (nr_seq_regra_funcao = nr_seq_regra_funcao_p))
	and	((coalesce(cd_setor_atendimento::text, '') = '') or (coalesce(cd_setor_usuario_p::text, '') = '') or (cd_setor_atendimento = cd_setor_usuario_p))
	and	coalesce(cd_perfil, coalesce(cd_perfil_w,0)) = coalesce(cd_perfil_w,0)
	order	by
		coalesce(ie_clinica,0),
		coalesce(nr_seq_regra_funcao,0),
		coalesce(cd_setor_atendimento,0);


BEGIN

/*	7/1/2006 Marcus
	Refiz a rotina toda, para tratar como cursor
	O Usuário pode utilizar a parametrização em cascata como a estrutura de materiais
	Caso de problema na implantação no dia 10
	Voltar a procedure anterior incluindo o estabelecimento e me avisar
*/
select	count(*)
into STRICT	qt_reg_w
from	clinica_tipo_atendimento
where	cd_estabelecimento			= cd_estabelecimento_p
and	coalesce(ie_situacao,'A') = 'A';

if (ie_clinica_p IS NOT NULL AND ie_clinica_p::text <> '') and (qt_reg_w > 0) then
	qt_reg_w		:= 0;
	cd_perfil_w	:= obter_perfil_ativo;

	OPEN C01;
	LOOP
	FETCH C01 into
		ie_clinica_w,
		nr_seq_regra_funcao_w,
		cd_setor_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		qt_reg_w	:= qt_reg_w + 1;
	END LOOP;
	CLOSE C01;

	if (qt_reg_w = 0) then
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278833,null);
	elsif (nr_seq_regra_funcao_p IS NOT NULL AND nr_seq_regra_funcao_p::text <> '') and (nr_seq_regra_funcao_p <> nr_seq_regra_funcao_w) then
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278839,null);
	elsif (cd_setor_usuario_p IS NOT NULL AND cd_setor_usuario_p::text <> '') and (cd_setor_usuario_p <> cd_setor_usuario_w) then
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278847,null);
	end if;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_clinica_tipo_atend ( cd_estabelecimento_p bigint, ie_clinica_p bigint, ie_tipo_atendimento_p bigint, nr_seq_regra_funcao_p bigint, cd_setor_usuario_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

