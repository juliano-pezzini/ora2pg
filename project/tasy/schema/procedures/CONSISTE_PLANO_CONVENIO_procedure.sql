-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_plano_convenio (nr_atendimento_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_procedimento_p timestamp, qt_procedimento_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text, cd_autorizacao_p text, ds_erro_p INOUT text, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, ie_regra_p INOUT text, nr_seq_agenda_p bigint, nr_seq_regra_p INOUT bigint, nr_seq_proc_interno_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, cd_setor_entrega_prescr_p bigint, cd_medico_p text, cd_pessoa_fisica_p text default '0', ie_glosa_p INOUT text DEFAULT NULL, nr_seq_regra_ajuste_p INOUT bigint DEFAULT NULL, nr_prescricao_p bigint default null, nr_seq_prescricao_p bigint default null, cd_tipo_acomodacao_p bigint default null, cd_usuario_convenio_p text default null, ie_carater_cirurgia_p text default null) AS $body$
DECLARE



ds_erro_w		varchar(255)	:= '';
ds_erro_Autor_w		varchar(255)	:= '';
cd_grupo_w		bigint	:= 0;
cd_especialidade_w	bigint	:= 0;
cd_tipo_acomodacao_w	bigint	:= 0;
cd_area_w		bigint	:= 0;
ie_regra_w		smallint	:= 0;
cd_plano_w		varchar(10)	:= '';
ie_valor_w		varchar(4);
qt_ponto_min_w		double precision;
qt_ponto_max_w		double precision;
cd_categoria_w		varchar(10);
cd_estabelecimento_w	integer;
ie_tipo_atendimento_w	integer;
cd_classif_setor_w	varchar(10);
nr_seq_regra_w		bigint;
vl_procedimento_w		double precision;
ie_regra_valor_w		varchar(3);
ie_carater_inter_sus_w	varchar(2);
ie_clinica_w		integer;
ds_irrelevante_w		varchar(30);
nr_seq_regra_preco_w	bigint;
ie_glosa_w		varchar(3)	:= null;
nr_seq_forma_org_w	bigint := 0;
nr_seq_grupo_w		bigint := 0;
nr_seq_subgrupo_w		bigint := 0;
cd_usuario_convenio_w	varchar(30);
cd_doenca_atend_w		varchar(10);
cd_empresa_conv_w		bigint;
cd_setor_atendimento_w	bigint;
qt_minima_w		double precision;
qt_maxima_w		double precision;
qt_proc_w		double precision;
cd_setor_paciente_w	bigint;
ie_cobertura_w		varchar(1);
nr_seq_cobertura_w	bigint;
nr_seq_classif_atend_w	bigint;
cd_pessoa_fisica_w	varchar(10);
qt_idade_w		double precision;
qt_idade_min_w		integer;
qt_idade_max_w		integer;
cd_perfil_w		integer 	:= Obter_perfil_Ativo;
cd_edicao_amb_w		integer 	:= 0;
ie_prioridade_edicao_w	varchar(01);
ie_tipo_convenio_w	smallint;
vl_ch_honorarios_w	double precision	:= 0;
vl_ch_custo_oper_w	double precision	:= 0;
vl_m2_filme_w		double precision	:= 0;
dt_inicio_vigencia_w	timestamp;
tx_ajuste_geral_w		double precision	:= 0;
nr_seq_cbhpm_edicao_w	bigint;
nr_seq_classif_proc_int_w 	bigint;
cd_medico_resp_w		varchar(10);
cd_dependente_w		smallint;
ie_carater_cirurgia_w	varchar(1);
dt_nascimento_w		timestamp;
dt_obito_w		timestamp;
qt_meses_w		double precision	:= 0;
nr_seq_classif_medico_w	atendimento_paciente.nr_seq_classif_medico%type;
cd_medico_executor_w	regra_Convenio_Plano.cd_medico_executor%type;
/* Ricardo 25/01/2006 - Inserido o campo NR_SEQ_EXAME para a CONSISTE_PLANO_CONVENIO OS 28644 */

C01 CURSOR FOR
SELECT	nr_sequencia,
	ie_regra,
	ie_valor,
	coalesce(qt_ponto_min,0),
	coalesce(qt_ponto_max,0),
	coalesce(ie_regra_valor,'FF'),
	coalesce(qt_minimo,0),
	coalesce(qt_maximo,999),
	coalesce(cd_medico_executor,cd_medico_p)
from 	regra_Convenio_Plano
where	cd_convenio						= cd_convenio_p
and	coalesce(cd_plano, coalesce(cd_plano_w,0))				= coalesce(cd_plano_w,0)
and	coalesce(nr_seq_proc_interno,coalesce(nr_seq_proc_interno_p,0))		= coalesce(nr_seq_proc_interno_p,0)
and	coalesce(cd_procedimento,coalesce(cd_procedimento_p,0)) 			= coalesce(cd_procedimento_p,0)
and	coalesce(cd_area_procedimento,cd_area_w)				= cd_area_w
and	coalesce(cd_especialidade_proc,cd_especialidade_w)			= cd_especialidade_w
and	coalesce(cd_grupo_proc,cd_grupo_w)				= cd_grupo_w
and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)			= nr_seq_forma_org_w
and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)			= nr_seq_subgrupo_w
and	coalesce(nr_seq_grupo, nr_seq_grupo_w)				= nr_seq_grupo_w
and	coalesce(ie_tipo_atendimento,coalesce(ie_tipo_atendimento_w,0))		= coalesce(ie_tipo_atendimento_w,0)
and	coalesce(cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_w,0))		= coalesce(cd_tipo_acomodacao_w,0)
and	coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_p,coalesce(cd_setor_atendimento_w,0)))		= coalesce(cd_setor_atendimento_p,coalesce(cd_setor_atendimento_w,0))
and	coalesce(nr_seq_exame, coalesce(nr_seq_exame_p, 0))			= coalesce(nr_seq_exame_p, 0)
and	coalesce(cd_classif_setor, cd_classif_setor_w) 			= cd_classif_setor_w
and	coalesce(ie_carater_inter_sus,ie_carater_inter_sus_w)			= ie_carater_inter_sus_w
and	coalesce(ie_clinica,ie_clinica_w)					= ie_clinica_w
and (coalesce(dt_procedimento_p,clock_timestamp()) between
	 coalesce(dt_inicio_vigencia,to_date('01/01/1900','dd/mm/yyyy')) and coalesce(dt_fim_vigencia,to_date('31/12/2099','dd/mm/yyyy')))
and	coalesce(cd_categoria,coalesce(cd_categoria_p,'0'))			= coalesce(cd_categoria_p,'0')
and	coalesce(obter_se_carteira_mascara(ds_mascara_carteira,cd_usuario_convenio_w),'S')	= 'S'
and (cd_estabelecimento = coalesce(cd_estabelecimento_p,cd_estabelecimento) or
	 coalesce(cd_estabelecimento::text, '') = '')
and 	coalesce(cd_empresa, coalesce(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)) = coalesce(obter_empresa_estab(wheb_usuario_pck.get_cd_estabelecimento),0)
and	coalesce(cd_doenca,cd_doenca_atend_w)				= cd_doenca_atend_w
and	coalesce(cd_setor_entrega_prescr,coalesce(cd_setor_entrega_prescr_p,0))	= coalesce(cd_setor_entrega_prescr_p,0)
and 	coalesce(cd_setor_atual,coalesce(cd_setor_paciente_w,0))			= coalesce(cd_setor_paciente_w,0)
and	coalesce(cd_empresa_conv, coalesce(cd_empresa_conv_w,0))			= coalesce(cd_empresa_conv_w,0)
and	coalesce(nr_seq_classif_atend, coalesce(nr_seq_classif_atend_w,0))	= coalesce(nr_seq_classif_atend_w,0)
and	coalesce(cd_medico_executor, coalesce(cd_medico_p,'X'))			= coalesce(cd_medico_p,'X')
--and 	((ie_cobertura_w = 'N') or ((ie_cobertura_w = 'S') and (nvl(nr_seq_cobertura,nvl(nr_seq_cobertura_w,0)) = nvl(nr_seq_cobertura_w,0))))
and	coalesce(nr_seq_cobertura,coalesce(nr_seq_cobertura_w,0))	= coalesce(nr_seq_cobertura_w,0)
and	coalesce(cd_perfil,coalesce(cd_perfil_w,0))	= coalesce(cd_perfil_w,0)
and	coalesce(ie_situacao,'A') = 'A'
and	coalesce(cd_edicao_amb,coalesce(cd_edicao_amb_w,0))			= coalesce(cd_edicao_amb_w,0)
and	coalesce(nr_seq_classif_proc_int,coalesce(nr_seq_classif_proc_int_w,0)) 	= coalesce(nr_seq_classif_proc_int_w,0)
and	coalesce(obter_se_espec_medico_plano(cd_especialidade_medic,cd_medico_p),'S') = 'S'
and	coalesce(cd_pessoa_fisica,coalesce(cd_pessoa_fisica_p,'0'))		= coalesce(cd_pessoa_fisica_p,'0')
and	coalesce(ie_carater_cirurgia, coalesce(ie_carater_cirurgia_w,'X')) 	= coalesce(ie_carater_cirurgia_w,'X')
and	coalesce(nr_seq_cbhpm_edicao,coalesce(nr_seq_cbhpm_edicao_w,0))			= coalesce(nr_seq_cbhpm_edicao_w,0)
and	coalesce(qt_idade_w,0) between coalesce(qt_idade_min,0) and coalesce(qt_idade_max,999)
order by	CASE WHEN ie_prioridade='S' THEN coalesce(cd_plano,0)  ELSE 0 END , /* OS 107055 - 17/09/2008 */
	coalesce(ds_mascara_carteira,'X'),
	coalesce(cd_pessoa_fisica,'0'),
	coalesce(nr_seq_exame,0),
	coalesce(nr_seq_proc_interno,0),
	coalesce(cd_procedimento,0),
	coalesce(cd_grupo_proc,0),
	coalesce(cd_especialidade_proc,0),
	coalesce(cd_area_procedimento,0),
	coalesce(cd_categoria,'0'),
	coalesce(ie_tipo_atendimento,0),
	coalesce(nr_seq_estagio,0),
	coalesce(ie_carater_inter_sus,'X'),
	coalesce(ie_clinica,0),
	coalesce(cd_empresa_conv,0),
	coalesce(cd_medico_executor,'0'),
	coalesce(cd_edicao_amb,0),
	coalesce(cd_perfil,0),
	coalesce(ie_carater_cirurgia,'X'),
	coalesce(nr_seq_cbhpm_edicao,0),
	coalesce(nr_seq_classif_proc_int,0),
	coalesce(qt_idade_min,0),
	coalesce(qt_idade_max,999),
    	coalesce(cd_especialidade_medic,0);


/*Cursor	c02 is
	select 	b.nr_sequencia
	from 	convenio_cobertura_regra a,
		convenio_cobertura b
	where 	b.nr_sequencia = a.nr_seq_cobertura
	and 	b.cd_convenio = cd_convenio_p
	and 	ie_cobertura_w = 'S'
	and 	nvl(ie_tipo_atendimento, nvl(ie_tipo_atendimento_w,0)) = nvl(ie_tipo_atendimento_w,0)
	and 	nvl(cd_plano, nvl(cd_plano_w,'0')) = nvl(cd_plano_w,'0')
	and 	nvl(a.ie_situacao,'A') = 'A'
	order by nvl(ie_tipo_atendimento,0),
		nvl(cd_plano,'0'),
		a.nr_seq_cobertura;*/
BEGIN



ds_erro_w		:= '';
ds_erro_autor_w		:= '';
ie_regra_w		:= 0;
cd_plano_w		:= '';
ie_cobertura_w		:= 'N';

/*select 	nvl(max(ie_cobertura),'N')
into	ie_cobertura_w
from 	convenio
where 	cd_convenio = cd_convenio_p;*/
select	coalesce(max(cd_classif_setor),'X')
into STRICT	cd_classif_setor_w
from	setor_atendimento
where	cd_setor_atendimento		= cd_setor_atendimento_p;

select	max(a.cd_estabelecimento),
	coalesce(max(a.ie_tipo_atendimento),ie_tipo_atendimento_p),
	coalesce(max(a.ie_carater_inter_sus),'X'),
	coalesce(max(a.ie_clinica),0),
	coalesce(max(obter_cid_atendimento(a.nr_atendimento,'P')),'X'),
	coalesce(max(a.nr_seq_classificacao),0),
	max(b.dt_nascimento),
	coalesce(max(b.dt_obito),clock_timestamp()),
	max(a.cd_medico_resp),
	coalesce(max(a.nr_seq_classif_medico),0)
into STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	ie_carater_inter_sus_w,
	ie_clinica_w,
	cd_doenca_atend_w,
	nr_seq_classif_atend_w,
	dt_nascimento_w,
	dt_obito_w,
	cd_medico_resp_w,
	nr_seq_classif_medico_w
from	atendimento_paciente a,
	pessoa_fisica b
where	a.nr_atendimento	= nr_atendimento_p
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

/* Obter Plano Caso esteja Null */

if (cd_plano_p IS NOT NULL AND cd_plano_p::text <> '') then
	cd_plano_w		:= cd_plano_p;
else
	select	max(cd_plano_convenio)
	into STRICT	cd_plano_w
	from	atend_categoria_convenio
	where	nr_atendimento	= nr_atendimento_p
	and	cd_convenio	= cd_convenio_p;
end if;


/* Obter o tipo de acomodacao */

select	max(cd_tipo_acomodacao),
	max(cd_categoria),
	max(cd_usuario_convenio),
	max(cd_empresa),
	max(cd_dependente)
into STRICT	cd_tipo_acomodacao_w,
	cd_categoria_w,
	cd_usuario_convenio_w,
	cd_empresa_conv_w,
	cd_dependente_w
from	atend_categoria_convenio
where	nr_atendimento	= nr_atendimento_p
and	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento);

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
	select 	max(a.cd_setor_atendimento)
	into STRICT 	cd_setor_paciente_w
	from 	atend_paciente_unidade a
	where 	a.nr_seq_interno	= (SELECT 	max(x.nr_seq_interno)
					   from 	atend_paciente_unidade x
					   where 	x.nr_atendimento = nr_atendimento_p);
end if;

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (coalesce(nr_atendimento_p::text, '') = '') then

	select	coalesce(cd_estabelecimento_p,max(b.cd_estabelecimento)),
		coalesce(max(a.ie_tipo_atendimento),ie_tipo_atendimento_p),
      coalesce(cd_tipo_acomodacao_p,max(a.cd_tipo_acomodacao)),
		coalesce(cd_categoria_p,max(a.cd_categoria)),
		coalesce(cd_usuario_convenio_p,max(a.cd_usuario_convenio)),
		max(a.cd_empresa_ref),
		coalesce(cd_plano_p,max(a.cd_plano)),
		coalesce(cd_setor_atendimento_p,coalesce(max(a.cd_setor_atendimento),max(b.cd_setor_exclusivo))),
		coalesce(cd_pessoa_fisica_p,max(a.cd_pessoa_fisica)),
		coalesce(ie_carater_cirurgia_p,max(a.ie_carater_cirurgia))
	into STRICT	cd_estabelecimento_w,
		ie_tipo_atendimento_w,
		cd_tipo_acomodacao_w,
		cd_categoria_w,
		cd_usuario_convenio_w,
		cd_empresa_conv_w,
		cd_plano_w,
		cd_setor_atendimento_w,
		cd_pessoa_fisica_w,
		ie_carater_cirurgia_w
	from	agenda b,
		agenda_paciente a
	where	a.cd_agenda	= b.cd_agenda
	and	a.nr_sequencia	= nr_seq_agenda_p;


	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then

		select 	max(a.dt_nascimento),
			coalesce(max(a.dt_obito),clock_timestamp())
		into STRICT	dt_nascimento_w,
			dt_obito_w
		from	pessoa_fisica a
		where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;

	end if;



end if;

cd_categoria_w	:=	coalesce(cd_categoria_p,cd_categoria_w);

/* Obter Estrutura do procedimento */

begin
select 	cd_grupo_proc,
	cd_especialidade,
	cd_area_procedimento,
	coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 'G'),'G'),1,10),-1),
	coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 'F'),'F'),1,10),-1),
	coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, 'C', 'S'),'S'),1,10),-1)
into STRICT	cd_grupo_w,
	cd_especialidade_w,
	cd_area_w,
	nr_seq_grupo_w,
	nr_seq_forma_org_w,
	nr_seq_subgrupo_w
from	Estrutura_Procedimento_V
where	cd_procedimento 	= coalesce(cd_procedimento_p,0)
and	ie_origem_proced	= coalesce(ie_origem_proced_p,0)
and	(cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '');
exception
     	when others then
		begin
		cd_grupo_w		:= -1;
		cd_especialidade_w	:= -1;
		cd_area_w		:= -1;
		end;
end;
nr_seq_cobertura_w	:= 0;

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then
	begin
	select	max(a.nr_seq_cobertura)
	into STRICT	nr_seq_cobertura_w
	from	agenda_integrada a,
		agenda_integrada_item b
	where	a.nr_sequencia = b.nr_seq_agenda_int
	and	b.nr_seq_agenda_exame = nr_seq_agenda_p
	and	b.nr_seq_proc_interno = nr_seq_proc_interno_p;
	exception
	when others then
		nr_seq_cobertura_w := 0;
	end;
end if;


select	coalesce(max(ie_prioridade_edicao_amb), 'N')
into STRICT	ie_prioridade_edicao_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

begin
	ie_tipo_convenio_w := coalesce(obter_tipo_convenio(cd_convenio_p),0);
exception
when others then
	ie_tipo_convenio_w := 0;
end;


if (ie_tipo_convenio_w = 3) then
	cd_edicao_amb_w 	:= 0;
elsif (ie_prioridade_edicao_w	= 'N' ) then
	begin
	select	cd_edicao_amb,
		nr_seq_cbhpm_edicao
	into STRICT	cd_edicao_amb_w,
		nr_seq_cbhpm_edicao_w
	from	convenio_amb
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_convenio		= cd_convenio_p
	and	cd_categoria		= cd_categoria_p
	and 	coalesce(ie_situacao,'A')	= 'A'
	and	dt_inicio_vigencia	=
		(SELECT max(dt_inicio_vigencia)
			from		convenio_amb a
			where		a.cd_estabelecimento	= cd_estabelecimento_p
			and		a.cd_convenio		= cd_convenio_p
			and		a.cd_categoria		= cd_categoria_p
		      and 		coalesce(ie_situacao,'A')	= 'A'
			and		a.dt_inicio_vigencia 	<= dt_procedimento_p);
	exception
		when others then
     			cd_edicao_amb_w 	:= 0;
			nr_seq_cbhpm_edicao_w	:= 0;
	end;
else
	begin
	SELECT * FROM obter_edicao_proc_conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_procedimento_p, cd_procedimento_p, cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
	exception
	when others then
		cd_edicao_amb_w := 0;
	end;
end if;

if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then
	begin
	select	nr_seq_classif
	into STRICT	nr_seq_classif_proc_int_w
	from	proc_interno
	where	nr_sequencia = nr_seq_proc_interno_p;
	exception
	when others then
		nr_seq_classif_proc_int_w := null;
	end;
end if;

qt_proc_w	:= 0;

if (coalesce(cd_estabelecimento_w::text, '') = '') then
	cd_estabelecimento_w	:=	wheb_usuario_pck.get_cd_estabelecimento;
end if;

if (coalesce(cd_pessoa_fisica_p,'0') <> '0') and (coalesce(cd_pessoa_fisica_w,'0') = '0') then

	select 	max(a.dt_nascimento),
		coalesce(max(a.dt_obito),clock_timestamp())
	into STRICT	dt_nascimento_w,
		dt_obito_w
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_p;

end if;





if (dt_nascimento_w IS NOT NULL AND dt_nascimento_w::text <> '') then

	select	trunc(months_between(dt_obito_w, dt_nascimento_w),2)
	into STRICT	qt_meses_w
	;

	if (qt_meses_w < 1) and (qt_meses_w > 0) then
		qt_idade_w		:= trunc(qt_meses_w / 12,2);
	else
		qt_idade_w		:= trunc(qt_meses_w / 12);
	end if;

else
	qt_idade_w := 0;
end if;

OPEN C01;
LOOP
FETCH C01 into
	nr_seq_regra_w,
	ie_regra_w,
	ie_valor_w,
	qt_ponto_min_w,
	qt_ponto_max_w,
	ie_regra_valor_w,
	qt_minima_w,
	qt_maxima_w,
	cd_medico_executor_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	ie_regra_w	:=  ie_regra_w;

	-- Edgar 02/11/2005, OS 23134, tratamento de consistencia de valor
	if (ie_valor_w <> 'N') then		-- se consiste valor
		if (ie_origem_proced_p = 1) then 	-- se e amb
			if (ie_valor_w = 'PP') then

				vl_procedimento_w	:= coalesce(obter_preco_procedimento(cd_estabelecimento_w,
											cd_convenio_p,
											cd_categoria_w,
											clock_timestamp(),
											cd_procedimento_p,
											ie_origem_proced_p,
											cd_tipo_acomodacao_w,
											ie_tipo_atendimento_w,
											cd_setor_atendimento_p,
											null,
											null,
											null,
											cd_plano_p,
											null,
											null,
											ie_valor_w),0);

				if 	(ie_regra_valor_w = 'FF' AND vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) or
					(ie_regra_valor_w = 'DF' AND not vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) then
					ie_regra_w	:= null;
				end if;
			elsif (ie_valor_w = 'P') then

				vl_procedimento_w	:= coalesce(obter_preco_procedimento(cd_estabelecimento_w,
											cd_convenio_p,
											cd_categoria_w,
											clock_timestamp(),
											cd_procedimento_p,
											ie_origem_proced_p,
											cd_tipo_acomodacao_w,
											ie_tipo_atendimento_w,
											cd_setor_atendimento_p,
											null,
											null,
											null,
											cd_plano_p,
											null,
											null,
											ie_valor_w),0);

				if 	(ie_regra_valor_w = 'FF' AND vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) or
					(ie_regra_valor_w = 'DF' AND not vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) then
					ie_regra_w	:= null;
				end if;
			else
				/*
				-- se nao estiver dentro da faixa de valores da regra, entao nao considerar a regra

				if	not(obter_preco_amb(cd_procedimento_p,
							cd_convenio_p,
							cd_categoria_w,
							cd_estabelecimento_w,
							ie_valor_w) 		between qt_ponto_min_w and qt_ponto_max_w) then
					ie_regra_w		:= null;
				end if;
				Rafael em 13/04/2006 OS32586. Substitui a rotina acima, pela rotina abaixo;
				*/

				-- se estiver dentro da faixa de valores da regra, entao nao considerar a regra
				vl_procedimento_w	:= obter_preco_amb(cd_procedimento_p,
							cd_convenio_p,
							cd_categoria_w,
							cd_estabelecimento_w,
							ie_valor_w);
				if 	(ie_regra_valor_w = 'FF' AND vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) or
					(ie_regra_valor_w = 'DF' AND not vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) then
					ie_regra_w	:= null;
				end if;
			end if;
		else
			/* Francisco - 10/08/07 - OS 61240 - Obter precos para CBHPM */

			if (ie_valor_w = 'CO') then
				ie_valor_w	:= 'C';
			end if;

			vl_procedimento_w	:= obter_preco_procedimento(cd_estabelecimento_w,
									cd_convenio_p,
									cd_categoria_w,
									clock_timestamp(),
									cd_procedimento_p,
									ie_origem_proced_p,
									cd_tipo_acomodacao_w,
									ie_tipo_atendimento_w,
									cd_setor_atendimento_p,
									null,
									null,
									null,
									cd_plano_p,
									null,
									null,
									ie_valor_w);

			if 	(ie_regra_valor_w = 'FF' AND vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) or
				(ie_regra_valor_w = 'DF' AND not vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) then
				ie_regra_w	:= null;
			end if;

		end if;

		if (ie_origem_proced_p = 4) then --Origem Propio
			if (ie_valor_w = 'PP') then
				vl_procedimento_w	:= coalesce(obter_preco_procedimento(cd_estabelecimento_w,
											cd_convenio_p,
											cd_categoria_w,
											clock_timestamp(),
											cd_procedimento_p,
											ie_origem_proced_p,
											cd_tipo_acomodacao_w,
											ie_tipo_atendimento_w,
											cd_setor_atendimento_p,
											null,
											null,
											null,
											cd_plano_p,
											null,
											null,
											ie_valor_w),0);

				if 	(ie_regra_valor_w = 'FF' AND vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) or
					(ie_regra_valor_w = 'DF' AND not vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) then
					ie_regra_w	:= null;
				end if;
			else
				vl_procedimento_w	:= coalesce(obter_preco_procedimento(cd_estabelecimento_w,
											cd_convenio_p,
											cd_categoria_w,
											clock_timestamp(),
											cd_procedimento_p,
											ie_origem_proced_p,
											cd_tipo_acomodacao_w,
											ie_tipo_atendimento_w,
											cd_setor_atendimento_p,
											null,
											null,
											null,
											cd_plano_p,
											null,
											null,
											ie_valor_w),0);

				if 	(ie_regra_valor_w = 'FF' AND vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) or
					(ie_regra_valor_w = 'DF' AND not vl_procedimento_w between qt_ponto_min_w and qt_ponto_max_w) then
					ie_regra_w	:= null;
				end if;
			end if;
		end if;

	end if;

END LOOP;
CLOSE C01;

/* Bloqueio Atendimento (Quando a Chamada e no Atendimento: Proc = null) */

if (ie_regra_w = 1) then
	ds_erro_w 	:= ds_erro_w || '404 ';
/* Bloqueio Execucao */

elsif (ie_regra_w = 2) then
	ds_erro_w 	:= ds_erro_w || '405 ';
/* Libera com Autorizacao */

elsif (ie_regra_w in (3,6,7)) and (coalesce(cd_procedimento_p,0) <> 0) then
	begin
	ds_erro_Autor_w := consiste_autorizacao_proc(nr_atendimento_p, cd_convenio_p, dt_procedimento_p, cd_procedimento_p, ie_origem_proced_p, qt_procedimento_p, cd_autorizacao_p, ds_erro_Autor_w, nr_seq_agenda_p, nr_prescricao_p, nr_seq_prescricao_p, nr_seq_proc_interno_p);
	ds_erro_w 	:= ds_erro_w || ds_erro_Autor_w;

	/*lhalves OS 224696 em 08/07/2010 - Consistir quantidade procedimento*/

	if (qt_minima_w > 0) or (qt_maxima_w < 999) then

		select 	coalesce(sum(qt_procedimento),0)
		into STRICT	qt_proc_w
		from 	procedimento_paciente
		where	nr_atendimento 		= nr_atendimento_p
		and	cd_convenio		= cd_convenio_p
		and	cd_procedimento		= cd_procedimento_p
		and 	ie_origem_proced	= ie_origem_proced_p
		and	coalesce(cd_motivo_exc_conta::text, '') = '';

		if (qt_proc_w < qt_minima_w) or (qt_proc_w > qt_maxima_w) then
			ie_regra_w	:= null;
			ds_erro_w	:= null;
		end if;
	end if;

	if (coalesce(ds_erro_w::text, '') = '') then -- Quando nao houver erro nao deve retornar regra
		ie_regra_w	:= null;
	end if;

	end;
elsif (ie_regra_w = 8) then
	ds_erro_w 	:= ds_erro_w || '408 ';
end if;

/* Francisco - 28/03/2008 - OS 86985 - Tratamento para nao consistir quando o procedimento vai ser glosado */

if (ie_regra_w IS NOT NULL AND ie_regra_w::text <> '') or (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then

	SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_w, cd_convenio_p, cd_categoria_w, cd_procedimento_p, ie_origem_proced_p, 'N', dt_procedimento_p, cd_tipo_acomodacao_w, ie_tipo_atendimento_p, cd_setor_atendimento_p, cd_medico_executor_w, 0, 0, null, nr_seq_proc_interno_p, null, cd_plano_p, ie_clinica_w, null, null, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ie_glosa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, null, 0, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_preco_w, null, null, null, null, null, null, null, null, ds_irrelevante_w, null, null, nr_seq_classif_atend_w, cd_medico_resp_w, ie_carater_inter_sus_w, cd_dependente_w, null, null, null, nr_seq_classif_medico_w) INTO STRICT ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ie_glosa_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_regra_preco_w, ds_irrelevante_w;

	if (ie_glosa_w = 'T') then
		ds_erro_w	:= null;
		ie_regra_w	:= null;
	end if;


end if;


ie_regra_p		:= ie_regra_w;
nr_seq_regra_p		:= nr_seq_regra_w;
ds_erro_p		:= ds_erro_w;
ie_glosa_p		:= ie_glosa_w;
nr_seq_regra_ajuste_p	:= nr_seq_regra_preco_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_plano_convenio (nr_atendimento_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_procedimento_p timestamp, qt_procedimento_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text, cd_autorizacao_p text, ds_erro_p INOUT text, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, ie_regra_p INOUT text, nr_seq_agenda_p bigint, nr_seq_regra_p INOUT bigint, nr_seq_proc_interno_p bigint, cd_categoria_p text, cd_estabelecimento_p bigint, cd_setor_entrega_prescr_p bigint, cd_medico_p text, cd_pessoa_fisica_p text default '0', ie_glosa_p INOUT text DEFAULT NULL, nr_seq_regra_ajuste_p INOUT bigint DEFAULT NULL, nr_prescricao_p bigint default null, nr_seq_prescricao_p bigint default null, cd_tipo_acomodacao_p bigint default null, cd_usuario_convenio_p text default null, ie_carater_cirurgia_p text default null) FROM PUBLIC;

