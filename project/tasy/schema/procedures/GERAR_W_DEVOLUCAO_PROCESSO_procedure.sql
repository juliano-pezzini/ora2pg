-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_devolucao_processo ( cd_barras_frac_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
ds_erro_w		varchar(255) := '';
qt_registro_w		bigint;
qt_reg_prescr_mat_w	bigint;
qt_reg_atend_w		bigint;
nr_atendimento_w	bigint;
nr_prescricao_w		bigint;
nr_prescricao_ww	bigint;
nr_seq_processo_w	bigint;
cd_material_w		integer;
nr_sequencia_w		bigint;
qt_material_w		double precision;
ie_atend_unico_w	varchar(1);
ie_tipo_barras_w	varchar(1);
ie_gera_reg_w		varchar(1) := 'S';
nr_seq_material_w	prescr_mat_hor.nr_seq_material%type;
nr_seq_material_ww	prescr_mat_hor.nr_seq_material%type;

 
C00 CURSOR FOR 
	SELECT	obter_atendimento_prescr(nr_prescricao), 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material 
	from	prescr_mat_hor 
	where	nr_seq_etiqueta = cd_barras_frac_p 
	and	ie_tipo_barras_w = 'E' 
	
union all
 
	SELECT	obter_atendimento_prescr(nr_prescricao), 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material 
	from	prescr_mat_hor 
	where	nr_seq_processo = cd_barras_frac_p 
	and	ie_tipo_barras_w = 'P' 
	
union all
 
	select	obter_atendimento_prescr(nr_prescricao), 
		nr_prescricao, 
		nr_seq_processo, 
		nr_seq_material	 
	from	prescr_mat_hor 
	where	substr(obter_codigo_barras_ordem_frac(nr_seq_etiqueta),1,14) = cd_barras_frac_p 
	and	((nr_prescricao = nr_prescricao_ww) or (nr_prescricao_ww = 0)) 
	and	ie_tipo_barras_w = 'F';
	
 
c01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.cd_material, 
		sum(a.qt_material), 
		a.nr_sequencia_prescricao 
	FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE a.cd_material = b.cd_material and (a.nr_sequencia_prescricao = nr_seq_material_ww or nr_seq_material_ww = 0) and a.nr_seq_processo = nr_seq_processo_w and a.nr_atendimento = nr_atendimento_w and not exists (SELECT 1 from item_devolucao_material_pac x where x.nr_seq_processo = a.nr_seq_processo and x.nr_prescricao = a.nr_prescricao and x.cd_material = a.cd_material) and not exists (select 1 from w_dev_material_processo z where z.nr_seq_processo = a.nr_seq_processo and z.nr_prescricao = a.nr_prescricao and z.nr_seq_material = a.nr_sequencia_prescricao)   and ((a.qt_material < 0) or (a.cd_local_estoque IS NOT NULL AND a.cd_local_estoque::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) GROUP BY a.cd_material, 
		a.dt_atendimento, 
		a.cd_unidade_medida, 
		a.nr_sequencia_prescricao, 
		a.dt_entrada_unidade, 
		a.nr_sequencia, 
		a.cd_local_estoque;


BEGIN 
ie_atend_unico_w := obter_param_usuario(42, 115, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_atend_unico_w);
ie_tipo_barras_w := obter_param_usuario(42, 116, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_tipo_barras_w);
 
if (ie_tipo_barras_w = 'E' HAVING	sum(a.qt_material) > 0 
	) then 
	select	count(*) 
	into STRICT	qt_reg_prescr_mat_w 
	from	prescr_mat_hor 
	where	nr_seq_etiqueta = cd_barras_frac_p;
	 
	if (qt_reg_prescr_mat_w > 0) then 
		select	max(obter_atendimento_prescr(nr_prescricao)) 
		into STRICT	nr_atendimento_w 
		from	prescr_mat_hor 
		where	nr_seq_etiqueta = cd_barras_frac_p;
	end if;
elsif (ie_tipo_barras_w = 'P') then 
	select	count(*) 
	into STRICT	qt_reg_prescr_mat_w 
	from	prescr_mat_hor 
	where	nr_seq_processo = cd_barras_frac_p;
	 
	if (qt_reg_prescr_mat_w > 0) then 
		select	max(obter_atendimento_prescr(nr_prescricao)) 
		into STRICT	nr_atendimento_w 
		from	prescr_mat_hor 
		where	nr_seq_processo = cd_barras_frac_p;
	end if;
 
elsif (ie_tipo_barras_w = 'F') then 
	 
	begin				--Buscando o número da prescrição para otimizar a consulta na prescr_mat_hor quando se utiliza a function obter_codigo_barras_ordem_frac 
	select	coalesce(max(nr_prescricao),0) 
	into STRICT	nr_prescricao_ww 
	from	prescr_mat_hor 
	where	nr_seq_etiqueta = obter_etiqueta_barras_frac(cd_barras_frac_p);
	exception 
	when others then 
		nr_prescricao_ww := 0;
	end;
	 
 
	select	count(*) 
	into STRICT	qt_reg_prescr_mat_w 
	from	prescr_mat_hor 
	where	substr(obter_codigo_barras_ordem_frac(nr_seq_etiqueta),1,14)	= cd_barras_frac_p 
	and	nr_seq_etiqueta = obter_etiqueta_barras_frac(cd_barras_frac_p) 
	and	((nr_prescricao = nr_prescricao_ww) or (nr_prescricao_ww = 0));
 
	 
	if (qt_reg_prescr_mat_w	> 0) then 
		select	max(obter_atendimento_prescr(nr_prescricao)) 
		into STRICT	nr_atendimento_w 
		from	prescr_mat_hor 
		where	substr(obter_codigo_barras_ordem_frac(nr_seq_etiqueta),1,14) = cd_barras_frac_p 
		and	nr_seq_etiqueta = obter_etiqueta_barras_frac(cd_barras_frac_p) 
		and	((nr_prescricao = nr_prescricao_ww) or (nr_prescricao_ww = 0));
	end if;
	 
 
end if;
 
if (qt_reg_prescr_mat_w > 0) then 
	begin 
	if (ie_atend_unico_w = 'S') then 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	w_dev_material_processo 
		where	nm_usuario = nm_usuario_p;
		 
		select	count(*) 
		into STRICT	qt_reg_atend_w 
		from	w_dev_material_processo 
		where	nm_usuario = nm_usuario_p 
		and	nr_atendimento = nr_atendimento_w;
		 
		if (qt_registro_w > 0) and (qt_reg_atend_w = 0) then 
			ie_gera_reg_w := 'N';
		end if;
	end if;
 
 
	if (ie_gera_reg_w = 'S') then 
	 
		open C00;
		loop 
		fetch C00 into	 
			nr_atendimento_w, 
			nr_prescricao_w, 
			nr_seq_processo_w, 
			nr_seq_material_ww;
		EXIT WHEN NOT FOUND; /* apply on C00 */
			begin 
			 
			open c01;
			loop 
			fetch c01 into 
				nr_sequencia_w, 
				cd_material_w, 
				qt_material_w, 
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin 
				 
				insert into w_dev_material_processo( 
					dt_atualizacao, 
					nm_usuario, 
					nr_atendimento, 
					nr_prescricao, 
					cd_material, 
					qt_material, 
					nr_seq_processo, 
					nr_seq_mat_atend_pac, 
					nr_seq_material) 
				values (	clock_timestamp(), 
					nm_usuario_p, 
					nr_atendimento_w, 
					nr_prescricao_w, 
					cd_material_w, 
					qt_material_w, 
					nr_seq_processo_w, 
					nr_sequencia_w, 
					CASE WHEN coalesce(nr_seq_material_w,0)=0 THEN 0  ELSE nr_seq_material_w END );
				 
				end;
			end loop;
			close c01;
		 
			end;
		end loop;
		close C00;		
				 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	w_dev_material_processo;
		 
		if (qt_registro_w = 0) then 
			ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(280379);
		end if;
	end if;
	end;
else 
	ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(280377);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_devolucao_processo ( cd_barras_frac_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

