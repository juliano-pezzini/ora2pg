-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lfpd_registro_a300 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE

 
contador_w		bigint	:= 0;
ds_arquivo_w		varchar(4000);
ds_arquivo_compl_w	varchar(4000);
ds_linha_w		varchar(8000);
nr_linha_w		bigint	:= qt_linha_p;
nr_seq_registro_w	bigint	:= nr_sequencia_p;
sep_w			varchar(1)	:= ds_separador_p;
cd_cgc_w		varchar(14);
cd_tributo_iss_w	smallint;
nr_seq_regra_w		bigint;
nr_seq_regra_tributo_w	bigint;
pr_imposto_w		double precision;

C01 CURSOR FOR 
	SELECT	'A300' cd_registro, 
		n.nr_sequencia nr_sequencia, 
		null nr_cpf, 
		n.cd_cgc_emitente cd_cgc, 
		m.cd_modelo_nf cd_modelo, 
		n.ie_situacao ie_situacao, 
		n.cd_serie_nf cd_serie, 
		n.cd_serie_referencia cd_subserie, 
		n.nr_sequencia nr_seq_documento, 
		to_char(n.dt_emissao,'ddMMyyyy') dt_emissao, 
		'0' cd_cfps,		 
		replace(campo_mascara(n.vl_mercadoria,2),'.',',') vl_documento_fiscal, 
		replace(campo_mascara(n.vl_descontos,2),'.',',') vl_descontos, 
		replace(campo_mascara(n.vl_mercadoria,2),'.',',') vl_servicos_prestados, 
		replace(campo_mascara(0,2),'.',',') vl_material, 
		replace(campo_mascara(0,2),'.',',') vl_despesas_acessorias, 
		replace(campo_mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'),2),'.',',') vl_base_iss, 
		replace(campo_mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'V', 'ISS'),2),'.',',') vl_iss, 
		CASE WHEN n.ds_observacao='' THEN  ''  ELSE n.nr_sequencia END  cd_inf_obs 
	from	nota_fiscal n, 
		modelo_nota_fiscal m, 
		nota_fiscal_item i, 
		operacao_nota o 
	where	n.nr_seq_modelo = m.nr_sequencia 
	and 	i.nr_sequencia = n.nr_sequencia 
	and	n.cd_operacao_nf = o.cd_operacao_nf 
	and	coalesce(Obter_se_nota_entrada_saida(n.nr_sequencia),'E') = 'S' 
	and	to_char(n.dt_emissao,'dd/MM/yy') between to_date(dt_inicio_p,'dd/MM/yy') and to_date(dt_fim_p,'dd/MM/yy') 
	and	n.cd_estabelecimento = cd_estabelecimento_p 
	and 	(i.cd_procedimento IS NOT NULL AND i.cd_procedimento::text <> '') 
	and 	o.ie_servico = 'S' 
	and 	m.cd_modelo_nf = '3A' 
	
union
 
	SELECT	'A300', 
		n.nr_sequencia nr_sequencia, 
		a.nr_cpf nr_cpf, 
		null, 
		m.cd_modelo_nf cd_modelo, 
		n.ie_situacao ie_situacao, 
		n.cd_serie_nf cd_serie, 
		n.cd_serie_referencia cd_subserie, 
		n.nr_sequencia nr_seq_documento, 
		to_char(n.dt_emissao,'ddMMyyyy') dt_emissao, 
		'0' cfps,		 
		replace(campo_mascara(n.vl_mercadoria,2),'.',',') vl_documento_fiscal, 
		replace(campo_mascara(n.vl_descontos,2),'.',',') vl_descontos, 
		replace(campo_mascara(n.vl_mercadoria,2),'.',',') vl_servicos_prestados, 
		replace(campo_mascara(0,2),'.',',') vl_material, 
		replace(campo_mascara(0,2),'.',',') vl_despesas_acessorias, 
		replace(campo_mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'B', 'ISS'),2),'.',',') vl_base_iss, 
		replace(campo_mascara(obter_valor_tipo_tributo_nota(n.nr_sequencia, 'V', 'ISS'),2),'.',',') vl_iss, 
		CASE WHEN n.ds_observacao='' THEN  ''  ELSE n.nr_sequencia END  cd_inf_obs 
	from	nota_fiscal n, 
		modelo_nota_fiscal m, 
		pessoa_fisica a, 
		nota_fiscal_item i, 
		operacao_nota o 
	where	n.nr_seq_modelo 	= m.nr_sequencia 
	and 	n.cd_pessoa_fisica 	= a.cd_pessoa_fisica 
	and 	i.nr_sequencia 		= n.nr_sequencia 
	and	n.cd_operacao_nf 	= o.cd_operacao_nf 
	and	coalesce(Obter_se_nota_entrada_saida(n.nr_sequencia),'E') = 'S' 
	and	to_char(n.dt_emissao,'dd/MM/yy') between to_date(dt_inicio_p,'dd/MM/yy') and to_date(dt_fim_p,'dd/MM/yy') 
	and	n.cd_estabelecimento	= cd_estabelecimento_p 
	and 	(i.cd_procedimento IS NOT NULL AND i.cd_procedimento::text <> '') 
	and 	o.ie_servico 		= 'S' 
	and 	m.cd_modelo_nf 		= '3A';
	
vet01	c01%RowType;


BEGIN 
 
open C01;
loop 
fetch C01 into 
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	contador_w := contador_w + 1;
 
	ds_linha_w := substr(	sep_w	||	vet01.cd_registro		|| sep_w || 
						vet01.nr_cpf			|| sep_w || 
						vet01.cd_cgc			|| sep_w || 
						vet01.cd_modelo			|| sep_w || 
						vet01.ie_situacao		|| sep_w || 
						vet01.cd_serie			|| sep_w || 
						vet01.cd_subserie		|| sep_w || 
						vet01.nr_seq_documento		|| sep_w || 
						vet01.dt_emissao		|| sep_w || 
						vet01.cd_cfps			|| sep_w ||						 
						vet01.vl_documento_fiscal	|| sep_w || 
						vet01.vl_descontos		|| sep_w || 
						vet01.vl_servicos_prestados	|| sep_w || 
						vet01.vl_material		|| sep_w || 
						vet01.vl_despesas_acessorias	|| sep_w || 
						vet01.vl_base_iss		|| sep_w || 
						vet01.vl_iss			|| sep_w || 
						vet01.cd_inf_obs		|| sep_w,1, 8000);
 
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;
 
	insert into fis_lfpd_arquivo(	nr_sequencia, 
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_linha, 
						ds_arquivo, 
						ds_arquivo_compl, 
						cd_registro, 
						nr_seq_controle_lfpd) 
				values (	nextval('fis_lfpd_arquivo_seq'), 
						clock_timestamp(), 
						nm_usuario_p, 
						clock_timestamp(), 
						nm_usuario_p, 
						nr_linha_w, 
						ds_arquivo_w, 
						ds_arquivo_compl_w, 
						vet01.cd_registro, 
						nr_seq_controle_p);
	 
	SELECT * FROM lfpd_registro_A310(nr_seq_controle_p, nm_usuario_p, cd_estabelecimento_p, vet01.nr_sequencia, dt_inicio_p, dt_fim_p, ds_separador_p, qt_linha_p, nr_sequencia_p) INTO STRICT qt_linha_p, nr_sequencia_p;
 
	if (mod(contador_w,100) = 0) then 
		commit;
	end if;
 
	end;
end loop;
close C01;
 
commit;
 
qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lfpd_registro_a300 ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

