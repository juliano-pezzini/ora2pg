-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_definir_cron_principal ( nm_usuario_p text, nr_seq_cron_p bigint) AS $body$
DECLARE


nr_seq_proj_w			bigint;
nr_seq_cron_principal_w		bigint;
nr_seq_etapa_principal_w	bigint;
nr_etapa_nova_w			bigint;
nr_seq_superior_nova_w		bigint;

dt_atualizacao_w            	timestamp;
nm_usuario_w			varchar(15);
nr_seq_apres_w			bigint;
ds_etapa_w			varchar(4000);
ie_fase_w			varchar(1);
dt_inicio_prev_w		timestamp;
dt_fim_prev_w			timestamp;
dt_inicio_real_w		timestamp;
dt_fim_real_w			timestamp;
qt_hora_prev_w			double precision;
qt_hora_real_w			double precision;
nr_seq_etapa_w			bigint;
qt_hora_saldo_w			double precision;
pr_etapa_w			double precision;
dt_cadastro_w			timestamp;
dt_final_multiplic_w		timestamp;
dt_piloto_w                 	timestamp;
dt_ativacao_w               	timestamp;
nr_seq_estrutura_w          	bigint;
ds_atividade_w              	varchar(255);
nr_seq_superior_w           	bigint;
cd_classificacao_w          	varchar(255);
nr_seq_ordenacao_w          	bigint;
ie_modulo_w                 	varchar(1);
cd_funcao_w                 	integer;
ie_etapa_exec_desenv_w      	varchar(15);
ie_mpo_w                    	varchar(1);
ie_aderencia_w              	varchar(1);
ie_cadastros_w              	varchar(1);
ie_parametrizacao_w         	varchar(1);
ie_treinamento_w            	varchar(1);
ie_teste_piloto_w           	varchar(1);
pr_previsto_w               	double precision;
ie_obrigatorio_w            	varchar(1);
ie_tipo_obj_proj_migr_w     	varchar(15);
ie_atividade_adicional_w    	varchar(1);
ie_situacao_w               	varchar(1);
ie_tipo_ativ_met_w          	varchar(15);
pr_consultoria_w            	double precision;
nr_predecessora_w           	bigint;
ie_regra_ini_fim_w          	varchar(1);
nr_seq_interno_w            	bigint;

/* obter etapas cronograma principal */

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_cronograma = nr_seq_cron_principal_w
	order by 1;

/* obter etapas cronograma parcial */

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_superior
	from	proj_cron_etapa a
	where	a.nr_seq_cronograma = nr_seq_cron_p
	and	not exists (SELECT z.nr_etapa_parcial from proj_controle_baseline z where z.nr_cronograma = nr_seq_cron_p and z.nr_etapa_parcial = a.nr_sequencia)
	order by 1;



BEGIN

/* obter sequencia projeto */

select	max(nr_seq_proj)
into STRICT	nr_seq_proj_w
from	proj_cronograma
where	nr_sequencia = nr_seq_cron_p;

/* obter cronograma principal */

select	max(nr_sequencia)
into STRICT	nr_seq_cron_principal_w
from	proj_cronograma
where	nr_seq_proj = nr_seq_proj_w
and		((ie_tipo_baseline	= 'PR') or (coalesce(ie_tipo_baseline::text, '') = ''));

open C01;
loop
fetch C01 into
	nr_seq_etapa_principal_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/* obter dados principal */

	select	clock_timestamp(),
		nm_usuario_p,
		nr_seq_apres,
		ds_etapa,
		ie_fase,
		dt_inicio_prev,
		dt_fim_prev,
		dt_inicio_real,
		dt_fim_real,
		qt_hora_prev,
		qt_hora_real,
		nr_seq_etapa,
		qt_hora_saldo,
		pr_etapa,
		dt_cadastro,
		dt_final_multiplic,
		dt_piloto,
		dt_ativacao,
		nr_seq_estrutura,
		ds_atividade,
		nr_seq_superior,
		cd_classificacao,
		nr_seq_ordenacao,
		ie_modulo,
		cd_funcao,
		ie_etapa_exec_desenv,
		ie_mpo,
		ie_aderencia,
		ie_cadastros,
		ie_parametrizacao,
		ie_treinamento,
		ie_teste_piloto,
		pr_previsto,
		ie_obrigatorio,
		ie_tipo_obj_proj_migr,
		ie_atividade_adicional,
		ie_situacao,
		ie_tipo_ativ_met,
		pr_consultoria,
		nr_predecessora,
		ie_regra_ini_fim,
		nr_seq_interno
	into STRICT	dt_atualizacao_w,
		nm_usuario_w,
		nr_seq_apres_w,
		ds_etapa_w,
		ie_fase_w,
		dt_inicio_prev_w,
		dt_fim_prev_w,
		dt_inicio_real_w,
		dt_fim_real_w,
		qt_hora_prev_w,
		qt_hora_real_w,
		nr_seq_etapa_w,
		qt_hora_saldo_w,
		pr_etapa_w,
		dt_cadastro_w,
		dt_final_multiplic_w,
		dt_piloto_w,
		dt_ativacao_w,
		nr_seq_estrutura_w,
		ds_atividade_w,
		nr_seq_superior_w,
		cd_classificacao_w,
		nr_seq_ordenacao_w,
		ie_modulo_w,
		cd_funcao_w,
		ie_etapa_exec_desenv_w,
		ie_mpo_w,
		ie_aderencia_w,
		ie_cadastros_w,
		ie_parametrizacao_w,
		ie_treinamento_w,
		ie_teste_piloto_w,
		pr_previsto_w,
		ie_obrigatorio_w,
		ie_tipo_obj_proj_migr_w,
		ie_atividade_adicional_w,
		ie_situacao_w,
		ie_tipo_ativ_met_w,
		pr_consultoria_w,
		nr_predecessora_w,
		ie_regra_ini_fim_w,
		nr_seq_interno_w
	from	proj_cron_etapa
	where	nr_sequencia = nr_seq_etapa_principal_w;

	/* atualizar principal */

	update	proj_cron_etapa a
	set(dt_atualizacao,
			nm_usuario,
			nr_seq_apres,
			ds_etapa,
			ie_fase,
			dt_inicio_prev,
			dt_fim_prev,
			dt_inicio_real,
			dt_fim_real,
			qt_hora_prev,
			qt_hora_real,
			nr_seq_etapa,
			qt_hora_saldo,
			pr_etapa,
			dt_cadastro,
			dt_final_multiplic,
			dt_piloto,
			dt_ativacao,
			nr_seq_estrutura,
			ds_atividade,
			-- nr_seq_superior,
			cd_classificacao,
			nr_seq_ordenacao,
			ie_modulo,
			cd_funcao,
			ie_etapa_exec_desenv,
			ie_mpo,
			ie_aderencia,
			ie_cadastros,
			ie_parametrizacao,
			ie_treinamento,
			ie_teste_piloto,
			pr_previsto,
			ie_obrigatorio,
			ie_tipo_obj_proj_migr,
			ie_atividade_adicional,
			ie_situacao,
			ie_tipo_ativ_met,
			pr_consultoria,
			nr_predecessora,
			ie_regra_ini_fim,
			nr_seq_interno) =
			(SELECT	clock_timestamp(),
				nm_usuario_p,
				nr_seq_apres,
				ds_etapa,
				ie_fase,
				dt_inicio_prev,
				dt_fim_prev,
				dt_inicio_real,
				dt_fim_real,
				qt_hora_prev,
				qt_hora_real,
				nr_seq_etapa,
				qt_hora_saldo,
				pr_etapa,
				dt_cadastro,
				dt_final_multiplic,
				dt_piloto,
				dt_ativacao,
				nr_seq_estrutura,
				ds_atividade,
				-- nr_seq_superior,
				cd_classificacao,
				nr_seq_ordenacao,
				ie_modulo,
				cd_funcao,
				ie_etapa_exec_desenv,
				ie_mpo,
				ie_aderencia,
				ie_cadastros,
				ie_parametrizacao,
				ie_treinamento,
				ie_teste_piloto,
				pr_previsto,
				ie_obrigatorio,
				ie_tipo_obj_proj_migr,
				ie_atividade_adicional,
				ie_situacao,
				ie_tipo_ativ_met,
				pr_consultoria,
				nr_predecessora,
				ie_regra_ini_fim,
				nr_seq_interno
			from	proj_cron_etapa b
			where	b.nr_sequencia = (select z.nr_etapa_parcial from proj_controle_baseline z where z.nr_etapa_principal = nr_seq_etapa_principal_w and z.nr_cronograma = nr_seq_cron_p))
	where	a.nr_sequencia = nr_seq_etapa_principal_w;

	/* atualizar anterior */

	update	proj_cron_etapa a
	set(dt_atualizacao,
			nm_usuario,
			nr_seq_apres,
			ds_etapa,
			ie_fase,
			dt_inicio_prev,
			dt_fim_prev,
			dt_inicio_real,
			dt_fim_real,
			qt_hora_prev,
			qt_hora_real,
			nr_seq_etapa,
			qt_hora_saldo,
			pr_etapa,
			dt_cadastro,
			dt_final_multiplic,
			dt_piloto,
			dt_ativacao,
			nr_seq_estrutura,
			ds_atividade,
			--nr_seq_superior,
			cd_classificacao,
			nr_seq_ordenacao,
			ie_modulo,
			cd_funcao,
			ie_etapa_exec_desenv,
			ie_mpo,
			ie_aderencia,
			ie_cadastros,
			ie_parametrizacao,
			ie_treinamento,
			ie_teste_piloto,
			pr_previsto,
			ie_obrigatorio,
			ie_tipo_obj_proj_migr,
			ie_atividade_adicional,
			ie_situacao,
			ie_tipo_ativ_met,
			pr_consultoria,
			nr_predecessora,
			ie_regra_ini_fim,
			nr_seq_interno) =
			(SELECT	dt_atualizacao_w,
				nm_usuario_w,
				nr_seq_apres_w,
				ds_etapa_w,
				ie_fase_w,
				dt_inicio_prev_w,
				dt_fim_prev_w,
				dt_inicio_real_w,
				dt_fim_real_w,
				qt_hora_prev_w,
				qt_hora_real_w,
				nr_seq_etapa_w,
				qt_hora_saldo_w,
				pr_etapa_w,
				dt_cadastro_w,
				dt_final_multiplic_w,
				dt_piloto_w,
				dt_ativacao_w,
				nr_seq_estrutura_w,
				ds_atividade_w,
				--nr_seq_superior_w,
				cd_classificacao_w,
				nr_seq_ordenacao_w,
				ie_modulo_w,
				cd_funcao_w,
				ie_etapa_exec_desenv_w,
				ie_mpo_w,
				ie_aderencia_w,
				ie_cadastros_w,
				ie_parametrizacao_w,
				ie_treinamento_w,
				ie_teste_piloto_w,
				pr_previsto_w,
				ie_obrigatorio_w,
				ie_tipo_obj_proj_migr_w,
				ie_atividade_adicional_w,
				ie_situacao_w,
				ie_tipo_ativ_met_w,
				pr_consultoria_w,
				nr_predecessora_w,
				ie_regra_ini_fim_w,
				nr_seq_interno_w
			)
	where	a.nr_sequencia = (select z.nr_etapa_parcial from proj_controle_baseline z where z.nr_etapa_principal = nr_seq_etapa_principal_w and z.nr_cronograma = nr_seq_cron_p);

	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_etapa_nova_w,
	nr_seq_superior_nova_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	insert into proj_cron_etapa(
		nr_sequencia,
		nr_seq_cronograma,
		dt_atualizacao,
		nm_usuario,
		nr_seq_apres,
		ds_etapa,
		ie_fase,
		dt_inicio_prev,
		dt_fim_prev,
		dt_inicio_real,
		dt_fim_real,
		qt_hora_prev,
		qt_hora_real,
		nr_seq_etapa,
		qt_hora_saldo,
		pr_etapa,
		dt_cadastro,
		dt_final_multiplic,
		dt_piloto,
		dt_ativacao,
		nr_seq_estrutura,
		ds_atividade,
		nr_seq_superior,
		cd_classificacao,
		nr_seq_ordenacao,
		ie_modulo,
		cd_funcao,
		ie_etapa_exec_desenv,
		ie_mpo,
		ie_aderencia,
		ie_cadastros,
		ie_parametrizacao,
		ie_treinamento,
		ie_teste_piloto,
		pr_previsto,
		ie_obrigatorio,
		ie_tipo_obj_proj_migr,
		ie_atividade_adicional,
		ie_situacao,
		ie_tipo_ativ_met,
		pr_consultoria,
		nr_predecessora,
		ie_regra_ini_fim,
		nr_seq_interno)
	(SELECT	nextval('proj_cron_etapa_seq'), -- nova etapa
		nr_seq_cron_principal_w,-- cronograma principal
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_apres,
		ds_etapa,
		ie_fase,
		dt_inicio_prev,
		dt_fim_prev,
		dt_inicio_real,
		dt_fim_real,
		qt_hora_prev,
		qt_hora_real,
		nr_seq_etapa,
		qt_hora_saldo,
		pr_etapa,
		dt_cadastro,
		dt_final_multiplic,
		dt_piloto,
		dt_ativacao,
		nr_seq_estrutura,
		ds_atividade,
		-- nr_seq_superior,
		(	select	nr_etapa_superior
			from 	proj_controle_superior
			where 	nr_cronograma = nr_seq_cron_p
			and 	nr_etapa_nova = (select	min(nr_sequencia) from proj_cron_etapa where nr_seq_superior = nr_seq_superior_nova_w)),
		cd_classificacao,
		nr_seq_ordenacao,
		ie_modulo,
		cd_funcao,
		ie_etapa_exec_desenv,
		ie_mpo,
		ie_aderencia,
		ie_cadastros,
		ie_parametrizacao,
		ie_treinamento,
		ie_teste_piloto,
		pr_previsto,
		ie_obrigatorio,
		ie_tipo_obj_proj_migr,
		ie_atividade_adicional,
		ie_situacao,
		ie_tipo_ativ_met,
		pr_consultoria,
		nr_predecessora,
		ie_regra_ini_fim,
		nr_seq_interno
	from	proj_cron_etapa
	where	nr_sequencia = nr_etapa_nova_w);

	delete	from proj_cron_etapa where nr_sequencia = nr_etapa_nova_w and nr_seq_cronograma = nr_seq_cron_p;

	end;
end loop;
close C02;

/* definir cronograma anterior */

update	proj_cronograma
set		nm_usuario = nm_usuario_p,
		ie_tipo_baseline = 'AN'
where	nr_sequencia = nr_seq_cron_p;

/* atualizar cronogramas */

CALL atualizar_total_horas_cron(nr_seq_cron_principal_w);
CALL atualizar_total_horas_cron(nr_seq_cron_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_definir_cron_principal ( nm_usuario_p text, nr_seq_cron_p bigint) FROM PUBLIC;

