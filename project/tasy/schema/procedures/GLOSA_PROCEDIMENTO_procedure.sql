-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE glosa_procedimento ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, dt_procedimento_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_medico_p text, ie_sexo_p text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, ie_tipo_convenio_p INOUT bigint, ie_classif_convenio_p INOUT text, cd_autorizacao_p INOUT text, nr_seq_autorizacao_p INOUT bigint, qt_autorizada_p INOUT bigint, cd_senha_p INOUT text, nm_responsavel_p INOUT text, ie_glosa_p INOUT text, cd_situacao_glosa_p INOUT bigint, nr_seq_regra_preco_p INOUT bigint, pr_glosa_p INOUT bigint, vl_glosa_p INOUT bigint, cd_motivo_exc_conta_p INOUT bigint, ie_preco_informado_p INOUT text, vl_negociado_p INOUT bigint, ie_autor_particular_p INOUT text, cd_convenio_glosa_p INOUT bigint, cd_categoria_glosa_p INOUT text, nr_sequencia_p INOUT bigint, ie_video_p text, ie_beira_leito_p text, ie_spect_p text, cd_cgc_prestador_p text, cd_equipamento_p bigint, cd_especialidade_medica_p bigint, nr_seq_cobertura_p bigint, cd_setor_atend_prescr_p bigint, nr_seq_classif_atend_p bigint, nr_seq_grupo_rec_p bigint, cd_dependente_p bigint, nr_seq_origem_p bigint, nr_seq_classif_medico_p bigint) AS $body$
DECLARE


ie_glosa_w           		varchar(1);
cd_autorizacao_w          	varchar(20)	:= '';
qt_autorizada_w          	double precision	:= 0;
nr_seq_autorizacao_w       	bigint;
qt_utilizada_w          	double precision	:= 0;
cd_situacao_glosa_w        	smallint		:= 0;
dt_inicio_vigencia_w	timestamp;
dt_final_vigencia_w		timestamp;
ie_classif_convenio_w      	varchar(03);
ie_tipo_convenio_w        	smallint    	:= 0;
tx_ajuste_w          		double precision;
vl_negociado_w		double precision;
ie_preco_informado_w	varchar(1);
cd_procedimento_esp_w	bigint;
cd_edicao_ajuste_w	integer    	:= 0;
vl_medico_neg_w		double precision	:= null;
vl_custo_oper_neg_w	double precision	:= null;
qt_filme_neg_w		double precision	:= null;
nr_auxiliares_neg_w	smallint		:= null;
qt_porte_anest_neg_w	smallint		:= null;

tx_ajuste_custo_oper_w	double precision		:= 1;
tx_ajuste_medico_w	double precision		:= 1;
tx_ajuste_partic_w		double precision		:= 1;
tx_ajuste_filme_w		double precision		:= 1;
vl_autorizado_w		double precision		:= 0;
vl_utilizado_w		double precision		:= 0;
pr_glosa_w		double precision		:= 0;
vl_glosa_w		double precision			:= 0;
ie_doc_convenio_w	varchar(3);
cd_motivo_exc_conta_w	bigint;
cd_pessoa_fisica_w	varchar(10);
qt_idade_w		bigint;
ie_atend_retorno_w	varchar(01);
cd_convenio_glosa_w	bigint;
ie_autor_particular_w	varchar(1)	:= 'N';
cd_convenio_glosa_ww	integer;
cd_categoria_glosa_ww	varchar(10);
nr_seq_ajuste_proc_ww	bigint;
qt_dias_internacao_w	bigint;
ie_tipo_atend_bpa_w	smallint;
cd_procedencia_w	integer;
nr_seq_tipo_acidente_w	bigint;
vl_filme_neg_w		double precision;
dt_entrada_w		timestamp;
ie_data_proc_dias_int_w varchar(1);
ie_consid_conv_glosa_eup_w	varchar(15);
cd_medico_resp_w	varchar(10);
ie_carater_inter_sus_w	varchar(2);
ie_dependente_w		pessoa_fisica.ie_dependente%type;
--dt_mesano_referencia_w 		conta_paciente.dt_mesano_referencia%type;
ie_tipo_nacionalidade_w		varchar(1);
nr_seq_classif_medico_w	atendimento_paciente.nr_seq_classif_medico%type;
nr_seq_proc_autorizado_w	procedimento_autorizado.nr_sequencia%type;


BEGIN

begin
select	cd_pessoa_fisica,
	trunc(coalesce(a.dt_alta, clock_timestamp()) - a.dt_entrada),
	dt_entrada,
	cd_medico_resp,
	ie_carater_inter_sus,
	nr_seq_classif_medico
into STRICT	cd_pessoa_fisica_w,
	qt_dias_internacao_w,  /* os  107880 fabricio em 26/09/2008 */
	dt_entrada_w,
	cd_medico_resp_w,
	ie_carater_inter_sus_w,
	nr_seq_classif_medico_w
from	atendimento_paciente a
where	nr_atendimento		= nr_atendimento_p;
exception
	when others then
		cd_pessoa_fisica_w:= null;
		qt_dias_internacao_w:= 0;
end;

if (coalesce(nr_seq_classif_medico_p,0) > 0) then
	nr_seq_classif_medico_w	:= nr_seq_classif_medico_p;
end if;

ie_dependente_w := obter_dados_pf(cd_pessoa_fisica_w,'DP');

begin
select	coalesce(max(ie_data_proc_dias_int),'N')
into STRICT	ie_data_proc_dias_int_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_p;
exception
	when others then
     		ie_data_proc_dias_int_w := 'N';
end;


if (ie_data_proc_dias_int_w = 'S') then
		qt_dias_internacao_w := (coalesce(dt_procedimento_p,clock_timestamp()) - dt_entrada_w);
end if;

/* define glosa do procedimento */

cd_situacao_glosa_w := 0;
/*      obter o tipo do convenio 1-particular 2-proprio 3-sus */

begin
select	ie_tipo_convenio,
	ie_classif_contabil,
	obter_valor_conv_estab(cd_convenio, cd_estabelecimento_p, 'IE_DOC_CONVENIO'),
	cd_convenio_glosa
into STRICT 	ie_tipo_convenio_w,
	ie_classif_convenio_w,
	ie_doc_convenio_w,
	cd_convenio_glosa_w
from 	convenio
where 	cd_convenio = cd_convenio_p;
exception
	when others then
     		ie_tipo_convenio_w := 2;
end;

/*geliard 25/05/2009 - os 144023*/

begin
select 	max(ie_tipo_atend_bpa),
	max(cd_procedencia)
into STRICT	ie_tipo_atend_bpa_w,
	cd_procedencia_w
from	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;
exception
	when others then
	ie_tipo_atend_bpa_w 	:= null;
	cd_procedencia_w	:= null;
end;

/* fabricio em 09/01/2007 - os 45439 */

begin
select	campo_numerico(obter_idade_pf(a.cd_pessoa_fisica, coalesce(dt_procedimento_p, clock_timestamp()), 'A')),
	CASE WHEN coalesce(a.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END ,
	nr_seq_tipo_acidente
into STRICT  	qt_idade_w,
	ie_atend_retorno_w,
	nr_seq_tipo_acidente_w
from 	pessoa_fisica b,
	atendimento_paciente a
where 	a.nr_atendimento 	= nr_atendimento_p
and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
exception
     	when others then
          	qt_idade_w := null;
end;

begin
select	coalesce(max(ie_consid_conv_glosa_eup),'S')
into STRICT	ie_consid_conv_glosa_eup_w
from	convenio_estabelecimento
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_convenio	   = cd_convenio_p;
exception
	when others then
     		ie_consid_conv_glosa_eup_w := 'N';
end;

/*obter se a pessoa e considerada cidada, estrangeira ou residente*/

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	ie_tipo_nacionalidade_w := coalesce(obter_se_residente_estrangeiro(	cd_pessoa_fisica_w,
									cd_estabelecimento_p,
									dt_procedimento_p),'N'); -- dt_entrada_w ou dt_procedimento_p
end if;
															
SELECT * FROM obter_regra_ajuste_proc(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_procedimento_p, ie_origem_proced_p, ie_video_p, dt_procedimento_p, cd_tipo_acomodacao_p, ie_tipo_atendimento_p, cd_setor_atendimento_p, cd_medico_p, null, qt_idade_w, nr_seq_exame_lab_p, nr_seq_proc_interno_p, cd_usuario_convenio_p, cd_plano_p, ie_clinica_p, cd_empresa_ref_p, ie_sexo_p, tx_ajuste_w, tx_ajuste_custo_oper_w, tx_ajuste_medico_w, tx_ajuste_partic_w, tx_ajuste_filme_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_p, cd_edicao_ajuste_w, vl_medico_neg_w, vl_custo_oper_neg_w, qt_filme_neg_w, nr_auxiliares_neg_w, qt_porte_anest_neg_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_atend_retorno_w, qt_dias_internacao_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, ie_tipo_atend_bpa_w, cd_procedencia_w, coalesce(ie_beira_leito_p,'A'), ie_spect_p, cd_cgc_prestador_p, cd_equipamento_p, nr_seq_tipo_acidente_w, cd_especialidade_medica_p, vl_filme_neg_w, nr_seq_cobertura_p, cd_setor_atend_prescr_p, nr_seq_classif_atend_p, cd_medico_resp_w, ie_carater_inter_sus_w, cd_dependente_p, nr_seq_grupo_rec_p, nr_seq_origem_p, ie_dependente_w, nr_seq_classif_medico_w, ie_tipo_nacionalidade_w) INTO STRICT tx_ajuste_w, tx_ajuste_custo_oper_w, tx_ajuste_medico_w, tx_ajuste_partic_w, tx_ajuste_filme_w, vl_negociado_w, ie_preco_informado_w, ie_glosa_w, cd_procedimento_esp_w, nr_seq_regra_preco_p, cd_edicao_ajuste_w, vl_medico_neg_w, vl_custo_oper_neg_w, qt_filme_neg_w, nr_auxiliares_neg_w, qt_porte_anest_neg_w, pr_glosa_w, vl_glosa_w, cd_motivo_exc_conta_w, ie_autor_particular_w, cd_convenio_glosa_ww, cd_categoria_glosa_ww, nr_seq_ajuste_proc_ww, vl_filme_neg_w;

if (ie_tipo_convenio_w = 1) and (coalesce(cd_convenio_glosa_w::text, '') = '') then
	ie_glosa_w	:= 'L';
end if;

if	ie_glosa_w = 'G' then
	cd_situacao_glosa_w := 1;
end if;

if	ie_glosa_w = 'L' then
	begin
	select 	/*+ index (a  atecaco_i2) */			a.nr_doc_convenio,
			a.cd_senha
	into STRICT		cd_autorizacao_w,
			cd_senha_p
	from		atend_categoria_convenio a
	where		a.nr_atendimento	= nr_atendimento_p
	and		a.cd_convenio		= cd_convenio_p
	and		a.cd_categoria		= cd_categoria_p
	and		dt_procedimento_p between a.dt_inicio_vigencia and
			coalesce(a.dt_final_vigencia,clock_timestamp() + interval '365 days');
	exception
     		when others then
			cd_autorizacao_w := '';
	end;
end if;

/* validar autorizacao do convenio */

if	ie_glosa_w = 'A' then
begin
	begin
	select 	b.cd_autorizacao,
			a.qt_autorizada,
			b.cd_senha,
			b.nm_responsavel,
			b.dt_inicio_vigencia,
			coalesce(b.dt_fim_vigencia,clock_timestamp()),
			b.nr_seq_autorizacao,
			coalesce(vl_autorizado,0),
			a.nr_sequencia
	into STRICT		cd_autorizacao_w,
			qt_autorizada_w,
			cd_senha_p,
			nm_responsavel_p,
			dt_inicio_vigencia_w,
			dt_final_vigencia_w,
			nr_seq_autorizacao_w,
			vl_autorizado_w,
			nr_seq_proc_autorizado_w
	from		procedimento_autorizado a,
			autorizacao_convenio b
	where		b.nr_atendimento 		= nr_atendimento_p
	and		b.cd_convenio		= cd_convenio_p
	and		 dt_procedimento_p between b.dt_inicio_vigencia and coalesce(b.dt_fim_vigencia,clock_timestamp() + interval '1000 days')
	and (a.nr_atendimento     = b.nr_atendimento or b.nr_sequencia = a.nr_sequencia_autor)
	and   coalesce(a.nr_seq_autorizacao, 0)   = coalesce(b.nr_seq_autorizacao,0)
	and		a.cd_procedimento	 	= cd_procedimento_p
	and		a.ie_origem_proced	= ie_origem_proced_p;
	exception
     		when others then
			cd_situacao_glosa_w := 2;
	end;

	if (ie_glosa_w = 'A') 		and (cd_situacao_glosa_w = 0) 	then
		begin
		select 		coalesce(sum(qt_procedimento),0),
				coalesce(sum(vl_procedimento),0)
		into STRICT		qt_utilizada_w,
				vl_utilizado_w
		from		procedimento_paciente
		where		nr_atendimento 		= nr_atendimento_p
		and		cd_convenio			= cd_convenio_p
		and		cd_procedimento 		= cd_procedimento_p
		and		ie_origem_proced		= ie_origem_proced_p
		and		nr_seq_autorizacao	= nr_seq_autorizacao_w	
		and		coalesce(nr_seq_proc_autor,0) <> coalesce(nr_seq_proc_autorizado_w,-1)
		and		coalesce(cd_motivo_exc_conta::text, '') = '';
		exception
	     		when others then
				qt_utilizada_w := 0;
		end;
	end if;

	if (ie_glosa_w = 'A') 		and (cd_situacao_glosa_w = 0) and
		(qt_autorizada_w < (qt_utilizada_w + qt_procedimento_p)) then
		begin
		cd_autorizacao_w	   := '';
		nr_seq_autorizacao_w := null;	
		cd_situacao_glosa_w  := 3;
		end;
	end if;
	if (ie_glosa_w = 'A') 		and (cd_situacao_glosa_w = 0) 	and (vl_autorizado_w > 0) 		then
		cd_situacao_glosa_w  		:= 9;
	end if;

	end;
end if;

if	ie_glosa_w = 'T' then
	begin
	select 		cd_convenio_glosa,
			cd_categoria_glosa
	into STRICT 		cd_convenio_p,
			cd_categoria_p	
	from 		atend_categoria_convenio
	where		nr_atendimento 		= nr_atendimento_p
	and		dt_procedimento_p between dt_inicio_vigencia and
			coalesce(dt_final_vigencia,clock_timestamp() + interval '365 days')
	and 		(cd_convenio_glosa IS NOT NULL AND cd_convenio_glosa::text <> '');
	exception
     		when others then
			cd_situacao_glosa_w 	:= 1;
	end;
end if;

if	ie_glosa_w = 'P' then
	cd_situacao_glosa_w := 8;
end if;

if	ie_glosa_w = 'D' then
	cd_situacao_glosa_w := 11;
end if;

if	ie_glosa_w = 'R' then
	cd_situacao_glosa_w := 10;
end if;

if	ie_glosa_w = 'C' then
	cd_situacao_glosa_w := 12;
end if;

if	ie_glosa_w = 'F' then
	cd_situacao_glosa_w := 14;
end if;

/* felipe - 18/10/2007 - os 63271 */

if	ie_glosa_w = 'S' then
	cd_situacao_glosa_w := 21;
end if;

if (ie_glosa_w = '1') then
	cd_situacao_glosa_w := 22;
end if;

--OS 561334 Glosa em valor (Exceto valor material)
if (ie_glosa_w = '4') then
	cd_situacao_glosa_w := 23;
end if;

if	ie_glosa_w = 'B' then
	cd_situacao_glosa_w := 13;

	if (ie_consid_conv_glosa_eup_w = 'S') then
		begin	
		select 		cd_convenio_glosa,
				cd_categoria_glosa
		into STRICT 		cd_convenio_p,
				cd_categoria_p	
		from 		atend_categoria_convenio
		where		nr_atendimento 		= nr_atendimento_p
		and		dt_procedimento_p between dt_inicio_vigencia and
				coalesce(dt_final_vigencia,clock_timestamp() + interval '365 days')
		and 		(cd_convenio_glosa IS NOT NULL AND cd_convenio_glosa::text <> '');
		exception
			when others then
				begin
				select 	cd_convenio_glosa_ww,
					cd_categoria_glosa_ww
				into STRICT	cd_convenio_p,
					cd_categoria_p
				;
				if (coalesce(cd_convenio_p::text, '') = '') or (coalesce(cd_categoria_p::text, '') = '') then
					cd_situacao_glosa_w 	:= 1;
				end if;
				end;
		end;
	else		
		begin	
		select 	cd_convenio_glosa_ww,
			cd_categoria_glosa_ww
		into STRICT	cd_convenio_p,
			cd_categoria_p
		;
		exception
			when others then
				begin
				select 	cd_convenio_glosa,
					cd_categoria_glosa
				into STRICT 	cd_convenio_p,
					cd_categoria_p	
				from 	atend_categoria_convenio
				where	nr_atendimento 		= nr_atendimento_p
				and	dt_procedimento_p between dt_inicio_vigencia and
					coalesce(dt_final_vigencia,clock_timestamp() + interval '365 days')
				and 	(cd_convenio_glosa IS NOT NULL AND cd_convenio_glosa::text <> '');
				
				if (coalesce(cd_convenio_p::text, '') = '') or (coalesce(cd_categoria_p::text, '') = '') then
					cd_situacao_glosa_w 	:= 1;
				end if;
				end;
		end;
	end if;
end if;

if (cd_situacao_glosa_w not in (0,8,9,10,11,13,21,23)) then

	/* ricardo 04/11/2006 - sirio libanes (os43964 - cartao de fidelidade - substituida a procedure
				obter_convenio_particular pela obter_convenio_particular_pf) 
		obter_convenio_particular(cd_estabelecimento_p, cd_convenio_p,cd_categoria_p); */
	SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_p, cd_convenio_p, cd_pessoa_fisica_w, dt_procedimento_p, cd_convenio_p, cd_categoria_p) INTO STRICT cd_convenio_p, cd_categoria_p;
end if;

if	ie_glosa_w = 'T' then
	cd_situacao_glosa_w := 1;
end if;

if (ie_doc_convenio_w = 'S') then
	cd_autorizacao_w := coalesce(cd_senha_p, cd_autorizacao_w);
elsif	(ie_doc_convenio_w in ('N','T')) then -- edgar 17/09/2007, os 67680, inclui o 'T'
	cd_autorizacao_w  := null;
end if;

pr_glosa_p			:= pr_glosa_w;
vl_glosa_p			:= vl_glosa_w;
ie_glosa_p			:= ie_glosa_w;
cd_situacao_glosa_p		:= cd_situacao_glosa_w;
cd_autorizacao_p		:= cd_autorizacao_w;
nr_seq_autorizacao_p		:= nr_seq_autorizacao_w;
ie_tipo_convenio_p		:= ie_tipo_convenio_w;
ie_classif_convenio_p		:= ie_classif_convenio_w;
cd_motivo_exc_conta_p		:= cd_motivo_exc_conta_w;
ie_preco_informado_p		:= ie_preco_informado_w;
vl_negociado_p			:= vl_negociado_w;
ie_autor_particular_p		:= ie_autor_particular_w;
cd_convenio_glosa_p		:= cd_convenio_glosa_ww;
cd_categoria_glosa_p		:= cd_categoria_glosa_ww;
nr_sequencia_p			:= nr_seq_ajuste_proc_ww;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE glosa_procedimento ( cd_estabelecimento_p bigint, nr_atendimento_p bigint, dt_procedimento_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_exame_lab_p bigint, nr_seq_proc_interno_p bigint, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_medico_p text, ie_sexo_p text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, ie_tipo_convenio_p INOUT bigint, ie_classif_convenio_p INOUT text, cd_autorizacao_p INOUT text, nr_seq_autorizacao_p INOUT bigint, qt_autorizada_p INOUT bigint, cd_senha_p INOUT text, nm_responsavel_p INOUT text, ie_glosa_p INOUT text, cd_situacao_glosa_p INOUT bigint, nr_seq_regra_preco_p INOUT bigint, pr_glosa_p INOUT bigint, vl_glosa_p INOUT bigint, cd_motivo_exc_conta_p INOUT bigint, ie_preco_informado_p INOUT text, vl_negociado_p INOUT bigint, ie_autor_particular_p INOUT text, cd_convenio_glosa_p INOUT bigint, cd_categoria_glosa_p INOUT text, nr_sequencia_p INOUT bigint, ie_video_p text, ie_beira_leito_p text, ie_spect_p text, cd_cgc_prestador_p text, cd_equipamento_p bigint, cd_especialidade_medica_p bigint, nr_seq_cobertura_p bigint, cd_setor_atend_prescr_p bigint, nr_seq_classif_atend_p bigint, nr_seq_grupo_rec_p bigint, cd_dependente_p bigint, nr_seq_origem_p bigint, nr_seq_classif_medico_p bigint) FROM PUBLIC;

