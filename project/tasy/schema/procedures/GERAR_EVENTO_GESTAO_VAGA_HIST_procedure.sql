-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function gerar_evento_gestao_vaga_hist as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE gerar_evento_gestao_vaga_hist ( cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_gv_p bigint) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL gerar_evento_gestao_vaga_hist_atx ( ' || quote_nullable(cd_pessoa_fisica_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(cd_estabelecimento_p) || ',' || quote_nullable(nr_seq_gv_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE gerar_evento_gestao_vaga_hist_atx ( cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_gv_p bigint) AS $body$
DECLARE

 
nr_seq_evento_w		bigint;
qt_idade_w		bigint;
cd_pessoa_fisica_w	varchar(10);
cd_convenio_gv_w	bigint;

c01 CURSOR FOR 
	SELECT	nr_seq_evento 
	from	regra_envio_sms 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	ie_evento_disp		= 'VMH' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and (obter_se_convenio_rec_alerta(cd_convenio_gv_w, nr_sequencia) = 'S') 
	and	coalesce(ie_situacao,'A') = 'A';
BEGIN
 
begin 
 
select	cd_convenio, 
	cd_pessoa_fisica 
into STRICT	cd_convenio_gv_w, 
	cd_pessoa_fisica_w 
from	gestao_vaga 
where	nr_sequencia = nr_seq_gv_p;
 
if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
	qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'),0);
	open c01;
	loop 
	fetch c01 into 
		nr_seq_evento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		CALL gerar_evento_paciente(nr_seq_evento_w,null,cd_pessoa_fisica_w,null,nm_usuario_p,null,null,null,null,null,null,nr_seq_gv_p);
		end;
	end loop;
	close c01;
end if;
 
exception 
when others then 
	cd_convenio_gv_w		:=	0;
	cd_pessoa_fisica_w	:=	'';
end;
 
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_gestao_vaga_hist ( cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_gv_p bigint) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE gerar_evento_gestao_vaga_hist_atx ( cd_pessoa_fisica_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_gv_p bigint) FROM PUBLIC;

