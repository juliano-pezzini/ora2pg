-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_remover_conta_fatura ( nr_seq_fatura_conta_p pls_fatura_conta.nr_sequencia%type, ie_excluir_contas_vinculadas_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

					
nr_seq_lote_w			pls_lote_faturamento.nr_sequencia%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
nr_seq_fatura_w			pls_fatura.nr_sequencia%type;
nr_titulo_w			pls_fatura.nr_titulo%type;
nr_seq_ptu_fatura_w		ptu_fatura.nr_sequencia%type;
qt_registro_w			integer;
nr_seq_ar_lote_w		pls_ar_lote.nr_sequencia%type;
nr_seq_conta_sus_w		pls_processo_conta.nr_sequencia%type;

ie_gerar_inf_ptu_w		varchar(1) := 'N';

c01 CURSOR(	nr_seq_fatura_conta_pc	pls_fatura_conta.nr_sequencia%type,
		nr_seq_lote_pc		pls_lote_faturamento.nr_sequencia%type) FOR
	SELECT	nr_seq_fatura_conta_pc nr_seq_fatura_conta
	
	
union all

	SELECT	c.nr_sequencia nr_seq_fatura_conta
	from	pls_conta		d,
		pls_fatura_conta	c,
		pls_fatura_evento	b,
		pls_fatura		a,
		pls_lote_faturamento	x,
		pls_regra_faturamento	y
	where	a.nr_sequencia		= b.nr_seq_fatura
	and	b.nr_sequencia		= c.nr_seq_fatura_evento
	and	c.nr_seq_conta		= d.nr_sequencia
	and	x.nr_sequencia		= a.nr_seq_lote
	and	y.nr_sequencia		= x.nr_seq_regra_fat
	and	a.nr_seq_lote		= nr_seq_lote_pc
	and	coalesce(y.ie_conta_fechada,'N') 	= 'S'
	and	exists (	select	1
			from	pls_conta			h,
				pls_fatura_conta		g,
				pls_fatura_evento		f,
				pls_fatura			e
			where	e.nr_sequencia			= f.nr_seq_fatura
			and	f.nr_sequencia			= g.nr_seq_fatura_evento
			and	g.nr_seq_conta			= h.nr_sequencia
			and	g.nr_sequencia			= nr_seq_fatura_conta_pc
			and	e.nr_seq_lote			= nr_seq_lote_pc
			and	d.cd_guia_ok			= h.cd_guia_ok
			and	d.nr_seq_segurado		= h.nr_seq_segurado
			and	d.nr_sequencia != h.nr_sequencia)
	order by 1;
	
c02 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	a.nr_seq_conta_pos_estab,
		a.nr_seq_pos_proc,
		a.nr_seq_fatura_conta
	from	pls_fatura_proc		a
	where	a.nr_seq_fatura_conta in (	SELECT	c.nr_sequencia
						from	pls_fatura_conta	c,
							pls_fatura_evento	b
						where	b.nr_sequencia		= c.nr_seq_fatura_evento
						and	c.nr_seq_conta		= nr_seq_conta_pc
						and	b.nr_seq_fatura		= nr_seq_fatura_pc);
						
c03 CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		nr_seq_fatura_pc	pls_fatura.nr_sequencia%type) FOR
	SELECT	a.nr_seq_conta_pos_estab,
		a.nr_seq_pos_mat,
		a.nr_seq_fatura_conta
	from	pls_fatura_mat		a
	where	a.nr_seq_fatura_conta in (	SELECT	c.nr_sequencia
						from	pls_fatura_conta	c,
							pls_fatura_evento	b
						where	b.nr_sequencia		= c.nr_seq_fatura_evento
						and	c.nr_seq_conta		= nr_seq_conta_pc
						and	b.nr_seq_fatura		= nr_seq_fatura_pc);
BEGIN

select	max(a.nr_seq_lote)
into STRICT	nr_seq_ar_lote_w
from	pls_fatura_conta	f,
	pls_ar_faturamento	a
where	f.nr_sequencia	= a.nr_seq_fatura_conta
and	f.nr_sequencia	= nr_seq_fatura_conta_p;

if (nr_seq_ar_lote_w IS NOT NULL AND nr_seq_ar_lote_w::text <> '') then -- Valida se a conta esta em analise de resultado
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1039962,'NR_SEQ_AR_LOTE=' || nr_seq_ar_lote_w);
end if;

if (ie_excluir_contas_vinculadas_p = 'N') then
	select	max(a.nr_seq_lote),
		max(c.nr_seq_conta),
		max(a.nr_sequencia),
		max(a.nr_titulo),
		max(c.nr_seq_conta_sus)
	into STRICT	nr_seq_lote_w,
		nr_seq_conta_w,
		nr_seq_fatura_w,
		nr_titulo_w,
		nr_seq_conta_sus_w
	from	pls_fatura_conta 	c,
		pls_fatura_evento 	b,
		pls_fatura 		a
	where	a.nr_sequencia		= b.nr_seq_fatura
	and	b.nr_sequencia		= c.nr_seq_fatura_evento
	and	c.nr_sequencia		= nr_seq_fatura_conta_p;
	
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(760592,'NR_SEQ_CONTA=' || nr_seq_fatura_conta_p);
	end if;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_ptu_fatura_w
	from	ptu_fatura
	where	nr_seq_pls_fatura = nr_seq_fatura_w;
	
	if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
		-- Excluir procedimentos
		for r_c02_w in c02( nr_seq_conta_w , nr_seq_fatura_w ) loop
			delete 	FROM pls_fatura_proc
			where	nr_seq_fat_proc_cancel in (	SELECT	nr_sequencia
								from	pls_fatura_proc
								where	nr_seq_fatura_conta = r_c02_w.nr_seq_fatura_conta);
								
			delete 	FROM pls_fatura_proc
			where	nr_seq_fatura_conta = r_c02_w.nr_seq_fatura_conta;
			
			update	pls_conta_pos_estabelecido
			set	nr_seq_evento_fat	 = NULL,
				nr_seq_lote_fat		 = NULL,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= r_c02_w.nr_seq_conta_pos_estab;
			
			update	pls_conta_pos_estab_contab
			set	nr_seq_evento_fat	 = NULL,
				nr_seq_lote_fat		 = NULL,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_conta_pos	= r_c02_w.nr_seq_conta_pos_estab;
			
			update	pls_conta_pos_proc
			set	nr_seq_evento_fat	 = NULL,
				nr_seq_lote_fat		 = NULL,
				ie_status_faturamento	= 'L',
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= r_c02_w.nr_seq_pos_proc;
		end loop;
		
		-- Excluir materiais
		for r_c03_w in c03( nr_seq_conta_w , nr_seq_fatura_w ) loop				
			delete 	FROM pls_fatura_mat
			where	nr_seq_fat_mat_cancel in (	SELECT	nr_sequencia
								from	pls_fatura_mat
								where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta);
								
			delete	FROM pls_fatura_mat
			where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
			
			update	pls_conta_pos_estabelecido
			set	nr_seq_evento_fat	 = NULL,
				nr_seq_lote_fat		 = NULL,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= r_c03_w.nr_seq_conta_pos_estab;
			
			update	pls_conta_pos_estab_contab
			set	nr_seq_evento_fat	 = NULL,
				nr_seq_lote_fat		 = NULL,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_seq_conta_pos	= r_c03_w.nr_seq_conta_pos_estab;
			
			update	pls_conta_pos_mat
			set	nr_seq_evento_fat	 = NULL,
				nr_seq_lote_fat		 = NULL,
				ie_status_faturamento	= 'L',
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_sequencia		= r_c03_w.nr_seq_pos_mat;
		end loop;
	
		delete	FROM pls_fatura_motivo_imp_cob
		where	nr_seq_conta = nr_seq_conta_w;
		
		delete	FROM pls_fatura_conta
		where	nr_sequencia in (	SELECT	b.nr_sequencia
						from	pls_fatura_conta	b,
							pls_fatura_evento	a
						where	a.nr_sequencia		= b.nr_seq_fatura_evento
						and	b.nr_seq_conta		= nr_seq_conta_w
						and	a.nr_seq_fatura		= nr_seq_fatura_w);
						
		CALL pls_gerar_fatura_log(nr_seq_lote_w, nr_seq_fatura_w, nr_seq_conta_w, 'PLS_REMOVER_CONTA_FATURA', 'RC', 'N', nm_usuario_p);
	-- Ressarcimento ao SUS
	elsif (nr_seq_conta_sus_w IS NOT NULL AND nr_seq_conta_sus_w::text <> '') then
	
		delete	FROM pls_fatura_motivo_imp_cob
		where	nr_seq_conta_sus = nr_seq_conta_sus_w;
		
		delete	FROM pls_fatura_conta
		where	nr_sequencia in (	SELECT	b.nr_sequencia
						from	pls_fatura_conta	b,
							pls_fatura_evento	a
						where	a.nr_sequencia		= b.nr_seq_fatura_evento
						and	b.nr_seq_conta_sus	= nr_seq_conta_sus_w
						and	a.nr_seq_fatura		= nr_seq_fatura_w);
						
		CALL pls_gerar_fatura_log(nr_seq_lote_w, nr_seq_fatura_w, nr_seq_conta_sus_w, 'PLS_REMOVER_CONTA_FATURA', 'RC', 'N', nm_usuario_p);
	
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_fatura_motivo_imp_cob
	where	nr_seq_fatura = nr_seq_fatura_w;
	
	if (qt_registro_w = 0) then
		update	pls_fatura
		set	ie_impedimento_cobranca	 = NULL
		where	nr_sequencia = nr_seq_fatura_w;
	end if;
	
	if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
		CALL pls_atualizar_vl_lote_fatura(nr_seq_lote_w, nm_usuario_p, 'N', 'N');
		
		CALL pls_remover_conta_fatura_ptu(nr_seq_fatura_w, nr_seq_ptu_fatura_w, nr_seq_conta_w, 'N', nm_usuario_p, nr_seq_conta_sus_w);
		
		ie_gerar_inf_ptu_w	:= 'S';
	end if;
	
	CALL pls_limpar_faturas_vazias_lote(nr_seq_lote_w, cd_estabelecimento_p, nm_usuario_p);
	
	CALL pls_atualizar_vl_lote_fatura(nr_seq_lote_w, nm_usuario_p, 'N', 'N');
	
	if (ie_gerar_inf_ptu_w = 'S') then
		CALL pls_atualizar_infomacoes_ptu(null,nr_seq_fatura_w,'S',cd_estabelecimento_p, nm_usuario_p);
	end if;
else

	select	max(a.nr_seq_lote),
		max(c.nr_seq_conta),
		max(a.nr_sequencia),
		max(a.nr_titulo),
		max(c.nr_seq_conta_sus)
	into STRICT	nr_seq_lote_w,
		nr_seq_conta_w,
		nr_seq_fatura_w,
		nr_titulo_w,
		nr_seq_conta_sus_w
	from	pls_fatura_conta 	c,
		pls_fatura_evento 	b,
		pls_fatura 		a
	where	a.nr_sequencia		= b.nr_seq_fatura
	and	b.nr_sequencia		= c.nr_seq_fatura_evento
	and	c.nr_sequencia		= nr_seq_fatura_conta_p;

	for r_c01_w in c01( nr_seq_fatura_conta_p, nr_seq_lote_w ) loop
	
		-- mantido apenas por compatibilidade
		select	max(a.nr_seq_lote),
			max(c.nr_seq_conta),
			max(a.nr_sequencia),
			max(a.nr_titulo),
			max(c.nr_seq_conta_sus)
		into STRICT	nr_seq_lote_w,
			nr_seq_conta_w,
			nr_seq_fatura_w,
			nr_titulo_w,
			nr_seq_conta_sus_w
		from	pls_fatura_conta 	c,
			pls_fatura_evento 	b,
			pls_fatura 		a
		where	a.nr_sequencia		= b.nr_seq_fatura
		and	b.nr_sequencia		= c.nr_seq_fatura_evento
		and	c.nr_sequencia		= r_c01_w.nr_seq_fatura_conta;
		
		if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(760592,'NR_SEQ_CONTA=' || r_c01_w.nr_seq_fatura_conta);
		end if;
		
		select	max(nr_sequencia)
		into STRICT	nr_seq_ptu_fatura_w
		from	ptu_fatura
		where	nr_seq_pls_fatura = nr_seq_fatura_w;
		
		if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
			for r_c02_w in c02( nr_seq_conta_w , nr_seq_fatura_w ) loop
				delete 	FROM pls_fatura_proc
				where	nr_seq_fat_proc_cancel in (	SELECT	nr_sequencia
									from	pls_fatura_proc
									where	nr_seq_fatura_conta = r_c02_w.nr_seq_fatura_conta);
									
				delete 	FROM pls_fatura_proc
				where	nr_seq_fatura_conta = r_c02_w.nr_seq_fatura_conta;
				
				update	pls_conta_pos_estabelecido
				set	nr_seq_evento_fat	 = NULL,
					nr_seq_lote_fat		 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= r_c02_w.nr_seq_conta_pos_estab;
				
				update	pls_conta_pos_estab_contab
				set	nr_seq_evento_fat	 = NULL,
					nr_seq_lote_fat		 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_conta_pos	= r_c02_w.nr_seq_conta_pos_estab;
				
				update	pls_conta_pos_proc
				set	nr_seq_evento_fat	 = NULL,
					nr_seq_lote_fat		 = NULL,
					ie_status_faturamento	= 'L',
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= r_c02_w.nr_seq_pos_proc;
			end loop;
			
			for r_c03_w in c03( nr_seq_conta_w , nr_seq_fatura_w ) loop
				delete 	FROM pls_fatura_mat
				where	nr_seq_fat_mat_cancel in (	SELECT	nr_sequencia
									from	pls_fatura_mat
									where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta);
									
				delete	FROM pls_fatura_mat
				where	nr_seq_fatura_conta = r_c03_w.nr_seq_fatura_conta;
				
				update	pls_conta_pos_estabelecido
				set	nr_seq_evento_fat	 = NULL,
					nr_seq_lote_fat		 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= r_c03_w.nr_seq_conta_pos_estab;
				
				update	pls_conta_pos_estab_contab
				set	nr_seq_evento_fat	 = NULL,
					nr_seq_lote_fat		 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_seq_conta_pos	= r_c03_w.nr_seq_conta_pos_estab;
				
				update	pls_conta_pos_mat
				set	nr_seq_evento_fat	 = NULL,
					nr_seq_lote_fat		 = NULL,
					ie_status_faturamento	= 'L',
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= r_c03_w.nr_seq_pos_mat;
			end loop;
			
			delete	FROM pls_fatura_motivo_imp_cob
			where	nr_seq_conta = nr_seq_conta_w;
			
			delete	FROM pls_fatura_conta
			where	nr_sequencia in (	SELECT	b.nr_sequencia
							from	pls_fatura_conta	b,
								pls_fatura_evento	a
							where	a.nr_sequencia		= b.nr_seq_fatura_evento
							and	b.nr_seq_conta		= nr_seq_conta_w
							and	a.nr_seq_fatura		= nr_seq_fatura_w);
							
			CALL pls_gerar_fatura_log(nr_seq_lote_w, nr_seq_fatura_w, nr_seq_conta_w, 'PLS_REMOVER_CONTA_FATURA', 'RC', 'N', nm_usuario_p);
		
		elsif (nr_seq_conta_sus_w IS NOT NULL AND nr_seq_conta_sus_w::text <> '') then
		
			delete	FROM pls_fatura_motivo_imp_cob
			where	nr_seq_conta_sus = nr_seq_conta_sus_w;
			
			delete	FROM pls_fatura_conta
			where	nr_sequencia in (	SELECT	b.nr_sequencia
							from	pls_fatura_conta	b,
								pls_fatura_evento	a
							where	a.nr_sequencia		= b.nr_seq_fatura_evento
							and	b.nr_seq_conta_sus	= nr_seq_conta_sus_w
							and	a.nr_seq_fatura		= nr_seq_fatura_w);
							
			CALL pls_gerar_fatura_log(nr_seq_lote_w, nr_seq_fatura_w, nr_seq_conta_sus_w, 'PLS_REMOVER_CONTA_FATURA', 'RC', 'N', nm_usuario_p);
		
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_fatura_motivo_imp_cob
		where	nr_seq_fatura = nr_seq_fatura_w;
		
		if (qt_registro_w = 0) then
			update	pls_fatura
			set	ie_impedimento_cobranca	 = NULL
			where	nr_sequencia = nr_seq_fatura_w;
		end if;
		
		if (nr_seq_ptu_fatura_w IS NOT NULL AND nr_seq_ptu_fatura_w::text <> '') then
			CALL pls_atualizar_vl_lote_fatura(nr_seq_lote_w, nm_usuario_p, 'N', 'N');
			
			CALL pls_remover_conta_fatura_ptu(nr_seq_fatura_w, nr_seq_ptu_fatura_w, nr_seq_conta_w, 'N', nm_usuario_p, nr_seq_conta_sus_w);
			
			ie_gerar_inf_ptu_w	:= 'S';
		end if;
		
		CALL pls_limpar_faturas_vazias_lote(nr_seq_lote_w, cd_estabelecimento_p, nm_usuario_p);
		
		CALL pls_atualizar_vl_lote_fatura(nr_seq_lote_w, nm_usuario_p, 'N', 'N');
		
		if (ie_gerar_inf_ptu_w = 'S') then
			CALL pls_atualizar_infomacoes_ptu(null,nr_seq_fatura_w,'S',cd_estabelecimento_p, nm_usuario_p);
		end if;
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_remover_conta_fatura ( nr_seq_fatura_conta_p pls_fatura_conta.nr_sequencia%type, ie_excluir_contas_vinculadas_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

