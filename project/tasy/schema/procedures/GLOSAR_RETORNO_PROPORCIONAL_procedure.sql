-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE glosar_retorno_proporcional (nr_seq_retorno_p bigint, vl_glosa_p bigint, ie_opcao_p text, nm_usuario_p text, ie_tipo_glosa_p bigint, ie_libera_repasse_p text, ie_pago_glosa_p text, ie_gerar_item_glosa_p text, ds_lista_item_p text, cd_motivo_glosa_p bigint, ie_agrupado_p text, ie_atualizar_motivo_glosa_p text) AS $body$
DECLARE

 
vl_guia_w		double precision;
nr_sequencia_w		bigint;
vl_pago_w		double precision;
vl_glosado_w		double precision := 0;
vl_glosa_total_w	double precision := 0;
vl_glosa_w		double precision := 0;
ds_campo_w		varchar(20);
vl_glosa_gerado_w	double precision;
ds_erro_w		varchar(4000);
vl_pago_atual_w		double precision := 0;
vl_glosado_atual_w	double precision := 0;
ie_acrescenta_pago_w	varchar(5) := 'N';
ie_acresc_glosa_w	varchar(5) := 'N';

/* 
ie_pago_glosa_p 
P - Valor Pago 
G - Valor de Glosa 
*/
 
 
/* 
ie_tipo_glosa_p 
0	Aceita 
1	Pendente 
2	NÃ£o 
*/
 
 
c01 CURSOR FOR 
	SELECT	nr_sequencia, 
		vl_pago 
	from	convenio_retorno_item 
	where	nr_seq_retorno		= nr_seq_retorno_p 
	and	((' ' || ds_lista_item_p || ' ' like '% ' || nr_sequencia || ' %') or coalesce(ds_lista_item_p,'X') = 'X');
	
c02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	convenio_retorno_item 
	where	nr_seq_retorno		= nr_seq_retorno_p 
	and	ie_gerar_item_glosa_p 	= 'S' 
	and	((' ' || ds_lista_item_p || ' ' like '% ' || nr_sequencia || ' %') or coalesce(ds_lista_item_p,'X') = 'X');	
 

BEGIN 
begin 
dbms_application_info.SET_ACTION('GLOSAR_RETORNO_PROPORCIONAL');
 
select	coalesce(sum(vl_pago),0) 
into STRICT	vl_guia_w 
from	convenio_retorno_item 
where	nr_seq_retorno		= nr_seq_retorno_p 
and	((' ' || ds_lista_item_p || ' ' like '% ' || nr_sequencia || ' %') or coalesce(ds_lista_item_p,'X') = 'X');
 
vl_glosa_w	:= coalesce(vl_glosa_p,0);
 
if (vl_guia_w	> 0) and (vl_glosa_p	> 0) and (vl_guia_w	>= vl_glosa_p) then 
 
	vl_glosa_gerado_w :=	vl_glosa_w * dividir_sem_round(vl_glosa_w, vl_guia_w);
 
	if (dividir_sem_round(vl_glosa_w, vl_guia_w)	> 0) then 
		open c01;
		loop 
		fetch c01 into	nr_sequencia_w, 
				vl_pago_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
 
			vl_glosado_w	:= vl_pago_w * dividir_sem_round(vl_glosa_w, vl_guia_w);
 
			if (ie_tipo_glosa_p = 0) then 
			 
				update	convenio_retorno_item 
				 set	vl_pago			= CASE WHEN ie_pago_glosa_p='P' THEN  vl_glosado_w   ELSE vl_pago - vl_glosado_w END , 
					vl_glosado		= CASE WHEN ie_pago_glosa_p='P' THEN  vl_pago - vl_glosado_w   ELSE vl_glosado + vl_glosado_w END , 
					ie_glosa			= 'S', 
					ie_libera_repasse		= coalesce(ie_libera_repasse_p, ie_libera_repasse), 
					cd_motivo_glosa		= coalesce(cd_motivo_glosa_p,cd_motivo_glosa) 
				where	nr_sequencia		= nr_sequencia_w 
				and	nr_seq_retorno		= nr_seq_retorno_p;
 
			else 
				update	convenio_retorno_item 
				 set	vl_pago			= CASE WHEN ie_pago_glosa_p='P' THEN  vl_glosado_w   ELSE vl_pago - vl_glosado_w END , 
					vl_amenor		= CASE WHEN ie_pago_glosa_p='P' THEN  vl_pago - vl_glosado_w   ELSE vl_amenor + vl_glosado_w END , 
					ie_glosa			= CASE WHEN ie_tipo_glosa_p=1 THEN 'P'  ELSE 'N' END , 
					ie_libera_repasse		= coalesce(ie_libera_repasse_p, ie_libera_repasse), 
					cd_motivo_glosa		= coalesce(cd_motivo_glosa_p,cd_motivo_glosa) 
				where	nr_sequencia		= nr_sequencia_w 
				and	nr_seq_retorno		= nr_seq_retorno_p;
			end if;
 
			vl_glosa_total_w	:= vl_glosa_total_w + vl_glosado_w;
 
			end;
		end loop;
		close c01;
	end if;
	 
	if (vl_glosa_w	> vl_glosa_total_w) or (vl_glosa_gerado_w	> vl_glosa_total_w) or (vl_glosa_total_w > vl_glosa_w) then 
 
		if (vl_glosa_total_w > vl_glosa_w) then 
		 
			vl_glosa_total_w := vl_glosa_total_w - vl_glosa_w;
		else 
			vl_glosa_total_w	:= vl_glosa_w - vl_glosa_total_w;
		end if;
		 
		 
		select	max(nr_sequencia) 
		into STRICT	nr_sequencia_w 
		from	convenio_retorno_item 
		where	nr_seq_retorno		= nr_seq_retorno_p 
		and	((' ' || ds_lista_item_p || ' ' like '% ' || nr_sequencia || ' %') or coalesce(ds_lista_item_p,'X') = 'X');
		 
		select	sum(vl_pago), 
			sum(vl_glosado) 
		into STRICT	vl_pago_atual_w, 
			vl_glosado_atual_w	 
		from	convenio_retorno_item 
		where	nr_seq_retorno		= nr_seq_retorno_p 
		and	((' ' || ds_lista_item_p || ' ' like '% ' || nr_sequencia || ' %') or coalesce(ds_lista_item_p,'X') = 'X');
		 
		 
		if (vl_pago_atual_w < vl_glosa_w) and (ie_pago_glosa_p = 'P') then 
			ie_acrescenta_pago_w := 'S';
			ie_acresc_glosa_w := 'N';
		elsif (vl_pago_atual_w > vl_glosa_w) and (ie_pago_glosa_p = 'P') then 
			ie_acrescenta_pago_w := 'N';
			ie_acresc_glosa_w := 'S';
		elsif (vl_glosado_atual_w < vl_glosa_w) and (ie_pago_glosa_p = 'G') then 
			ie_acresc_glosa_w := 'S';
			ie_acrescenta_pago_w := 'N';
		elsif (vl_glosado_atual_w > vl_glosa_w) and (ie_pago_glosa_p = 'G') then 
			ie_acresc_glosa_w := 'N';
			ie_acrescenta_pago_w := 'S';
		end if;
 
		if (ie_tipo_glosa_p = 0) then 
 
			update	convenio_retorno_item 
			 set	vl_pago			= CASE WHEN ie_acrescenta_pago_w='S' THEN vl_pago + vl_glosa_total_w  ELSE vl_pago - vl_glosa_total_w END , 
				vl_glosado		= CASE WHEN ie_acresc_glosa_w='S' THEN vl_glosado + vl_glosa_total_w  ELSE vl_glosado - vl_glosa_total_w END , 
				ie_glosa			= 'S', 
				ie_libera_repasse		= coalesce(ie_libera_repasse_p, ie_libera_repasse), 
				cd_motivo_glosa		= coalesce(cd_motivo_glosa_p,cd_motivo_glosa) 
			where	nr_sequencia		= nr_sequencia_w 
			and	nr_seq_retorno		= nr_seq_retorno_p;
		else 
 
			update	convenio_retorno_item 
			 set	vl_pago			= CASE WHEN ie_pago_glosa_p='P' THEN vl_pago - vl_glosa_total_w  ELSE vl_pago - vl_glosa_total_w END , 
				vl_amenor		= CASE WHEN ie_pago_glosa_p='P' THEN vl_amenor + vl_glosa_total_w  ELSE vl_amenor + vl_glosa_total_w END , 
				ie_glosa			= CASE WHEN ie_tipo_glosa_p=1 THEN 'P'  ELSE 'N' END , 
				ie_libera_repasse		= coalesce(ie_libera_repasse_p, ie_libera_repasse), 
				cd_motivo_glosa		= coalesce(cd_motivo_glosa_p,cd_motivo_glosa) 
			where	nr_sequencia		= nr_sequencia_w 
			and	nr_seq_retorno		= nr_seq_retorno_p;
		end if;
 
	end if;
	 
end if;
 
CALL wheb_usuario_pck.set_ie_executar_trigger('N');
 
open c02;
loop 
fetch c02 into	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
begin 
	CALL Gerar_Retorno_Glosa_Conta(nr_sequencia_w,nm_usuario_p,'G',ie_agrupado_p,1,'S','S','S','S','S','S','S',null,cd_motivo_glosa_p,null,null);
end;
end loop;
close c02;
 
if (ie_atualizar_motivo_glosa_p = 'S') then 
 
	update  convenio_retorno_glosa a 
	set    a.cd_motivo_glosa 	= cd_motivo_glosa_p 
	where   a.nr_seq_ret_item 	in 
					(SELECT	x.nr_sequencia		 
					from	convenio_retorno_item x 
					where	x.nr_seq_retorno	= nr_seq_retorno_p 
					and	((' ' || ds_lista_item_p || ' ' like '% ' || x.nr_sequencia || ' %') or coalesce(ds_lista_item_p,'X') = 'X'));	
 
end if;
 
CALL wheb_usuario_pck.set_ie_executar_trigger('S');
 
dbms_application_info.SET_ACTION('');
 
exception 
	when others then 
	dbms_application_info.SET_ACTION('');
	ds_erro_w	:= sqlerrm;
	--r.aise_application_error(-20011,sqlerrm); 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(263395,'ds_erro_w='||ds_erro_w);
end;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE glosar_retorno_proporcional (nr_seq_retorno_p bigint, vl_glosa_p bigint, ie_opcao_p text, nm_usuario_p text, ie_tipo_glosa_p bigint, ie_libera_repasse_p text, ie_pago_glosa_p text, ie_gerar_item_glosa_p text, ds_lista_item_p text, cd_motivo_glosa_p bigint, ie_agrupado_p text, ie_atualizar_motivo_glosa_p text) FROM PUBLIC;

