-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_reg_kit_estoque_adic ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_proc_p bigint, nr_sequencia_p bigint) AS $body$
DECLARE


cd_kit_material_w		integer;
nr_sequencia_w		bigint;
nr_seq_kit_estoque_w	bigint;
nr_seq_pac_pedido_w	bigint;
nr_seq_reg_kit_w		bigint;
cd_local_estoque_w	bigint;
ie_commit_w		varchar(1) := 'N';

C01 CURSOR FOR

SELECT	c.cd_kit_material
from  	proc_interno b,
	proc_interno_kit c
where	b.nr_sequencia = nr_seq_proc_p
and     c.nr_seq_proc_interno = b.nr_sequencia;


BEGIN

select 	max(nr_sequencia)
into STRICT	nr_seq_pac_pedido_w
from 	agenda_pac_pedido
where 	nr_seq_agenda = nr_sequencia_p;

if (nr_seq_pac_pedido_w IS NOT NULL AND nr_seq_pac_pedido_w::text <> '') then
	open C01;
	loop
	fetch C01 into
		cd_kit_material_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_commit_w := 'S';

		select 	max(nr_sequencia)
		into STRICT	nr_seq_reg_kit_w
		from 	kit_estoque_reg
		where 	nr_seq_pedido_agenda = nr_seq_pac_pedido_w;

		select 	coalesce(max(cd_local_estoque),0)
		into STRICT	cd_local_estoque_w
		from	kit_estoque
		where	cd_kit_material = cd_kit_material_w
		and	nr_seq_reg_kit = nr_seq_reg_kit_w;

		select	nextval('kit_estoque_seq')
		into STRICT	nr_seq_kit_estoque_w
		;

		if (nr_seq_reg_kit_w IS NOT NULL AND nr_seq_reg_kit_w::text <> '') then
			insert 	into kit_estoque(
					nr_sequencia,
					cd_kit_material,
					dt_atualizacao,
					nm_usuario,
					dt_montagem,
					nm_usuario_montagem,
					dt_utilizacao,
					nm_usuario_util,
					nr_cirurgia,
					cd_estabelecimento,
					cd_medico,
					nr_prescricao,
					nr_atendimento,
					cd_local_estoque,
					nr_seq_reg_kit,
					ie_status)
			values (	nr_seq_kit_estoque_w,
					cd_kit_material_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					cd_estabelecimento_p,
					null,
					null,
					null,
					CASE WHEN cd_local_estoque_w=0 THEN ''  ELSE cd_local_estoque_w END ,
					nr_seq_reg_kit_w,
					null);
		end if;
		end;
	end loop;
	close C01;

	if (ie_commit_w = 'S') then
		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_reg_kit_estoque_adic ( cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_proc_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

