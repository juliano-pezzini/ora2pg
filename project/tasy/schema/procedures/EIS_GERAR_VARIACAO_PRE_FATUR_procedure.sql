-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eis_gerar_variacao_pre_fatur ( dt_parametro_p timestamp, cd_empresa_p bigint) AS $body$
DECLARE

 
dt_referencia_w			timestamp;
dt_referencia_ww			timestamp;
dt_referencia_prox_w		timestamp;
cd_conta_contabil_w		varchar(20);
vl_fat_prod_ant_w			double precision;
vl_fat_prod_mes_w			double precision;
vl_fat_prod_mes_ant_w		double precision;
vl_pre_fatur_w			double precision;
vl_pre_fatur_ant_w			double precision;
qt_reg_w				bigint;

C01 CURSOR FOR 
/*	Faturamento da produção anterior*/
 
	SELECT	cd_conta_contabil, 
		sum(vl_total), 
		0, 
		0, 
		0 
	from	eis_resultado_v 
	where	dt_referencia = dt_referencia_prox_w 
	and	dt_receita < dt_referencia_prox_w 
	and	cd_estabelecimento	in ( 
		SELECT	cd_estabelecimento 
		from	estabelecimento 
		where	cd_empresa	= cd_empresa_p) 
	group by cd_conta_contabil 
	
union all
 
/*	Faturamento da produção do mês anterior */
 
	Select	cd_conta_contabil, 
		0, 
		sum(vl_total), 
		0, 
		0 
	from	eis_resultado_v 
	where	dt_referencia = dt_referencia_prox_w 
	and	dt_receita between dt_referencia_w and dt_referencia_ww 
	and	cd_estabelecimento	in ( 
		select	cd_estabelecimento 
		from	estabelecimento 
		where	cd_empresa	= cd_empresa_p) 
	group by cd_conta_contabil 
	
union all
 
/*	Pre-faturamento */
 
	Select	cd_conta_contabil, 
		0, 
		0, 
		sum(vl_material + vl_procedimento), 
		0 
	from	pre_faturamento 
	where	dt_referencia = dt_referencia_w 
	and	cd_estabelecimento	in ( 
		select	cd_estabelecimento 
		from	estabelecimento 
		where	cd_empresa	= cd_empresa_p) 
	group by cd_conta_contabil 
	
union all
 
/*	Pre-faturamento mêses anteriores */
 
	select	b.cd_conta_contabil, 
		0, 
		0, 
		0, 
		sum(b.vl_material + b.vl_procedimento) 
	from	pre_faturamento b 
	where	b.dt_referencia	= dt_referencia_prox_w 
	and	b.dt_receita	<> dt_referencia_prox_w 
	and	b.cd_estabelecimento	in ( 
		select	y.cd_estabelecimento 
		from	estabelecimento y 
		where	y.cd_empresa	= cd_empresa_p) 
	group by 
		b.cd_conta_contabil;


BEGIN 
 
delete	from w_eis_result;
dt_referencia_w		:= pkg_date_utils.start_of(dt_parametro_p,'MONTH',0);
dt_referencia_ww		:= pkg_date_utils.end_of(dt_referencia_w,'MONTH',0);
dt_referencia_prox_w	:= pkg_date_utils.add_month(dt_referencia_w,1,0);
 
OPEN C01;
LOOP 
FETCH C01 into 
	cd_conta_contabil_w, 
	vl_fat_prod_ant_w, 
	vl_fat_prod_mes_ant_w, 
	vl_pre_fatur_w, 
	vl_pre_fatur_ant_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	select	count(*) 
	into STRICT	qt_reg_w 
	from	w_eis_result 
	where	dt_referencia	= dt_referencia_w 
	and	cd_conta_contabil	= cd_conta_contabil_w;
 
	if (qt_reg_w = 0) then 
		insert into w_eis_result( 
			dt_referencia, 
			cd_conta_contabil, 
			vl_faturado, 
			vl_producao, 
			vl_fat_prod_ant, 
			vl_fat_prod_mes, 
			vl_fat_prod_mes_ant, 
			vl_pre_fatur, 
			vl_receita_antecipada, 
			vl_pre_fatur_ant, 
			vl_pre_fatur_fat_mes, 
			vl_prod_fat_ant) 
		values (	dt_referencia_w, 
			cd_conta_contabil_w, 
			0, 
			0, 
			vl_fat_prod_ant_w, 
			0, 
			vl_fat_prod_mes_ant_w, 
			vl_pre_fatur_w, 
			0, 
			vl_pre_fatur_ant_w, 
			0, 
			0);
	else 
		update w_eis_result 
		set	vl_fat_prod_ant		= vl_fat_prod_ant		+ vl_fat_prod_ant_w, 
			vl_pre_fatur		= vl_pre_fatur 		+ vl_pre_fatur_w, 
			vl_fat_prod_mes_ant	= vl_fat_prod_mes_ant	+ vl_fat_prod_mes_ant_w, 
			vl_pre_fatur_ant		= vl_pre_fatur_ant		+ vl_pre_fatur_ant_w 
		where	dt_referencia		= dt_referencia_w 
		and	cd_conta_contabil		= cd_conta_contabil_w;
	end if;
END LOOP;
CLOSE C01;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eis_gerar_variacao_pre_fatur ( dt_parametro_p timestamp, cd_empresa_p bigint) FROM PUBLIC;

