-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (nr_seq_regra 		bigint,
		cd_setor_regra		integer,
		nr_interno_conta 	bigint,
		ie_vincular_proc_princ	varchar(1),
		ie_dispara_kit_mat	varchar(1),
		ie_duplicar_proc_regra	varchar(1),
		ie_setor_atual_alta	varchar(1));


CREATE OR REPLACE PROCEDURE gerar_lancamento_automatico ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_adicional_1_p text, ds_adicional_2_p text, ds_adicional_3_p text, ds_adicional_4_p text, nr_interno_conta_p bigint) AS $body$
DECLARE

					
					

/*
se evento for diferente de evolucao medica (10)
nr_sequencia_p - sequencia do propaci;
senao
nr_sequencia_p - sequencia da evolucao;
*/
type vetor is
	table of campos index by integer;

vetor_regra_w			vetor;
i				integer := 1;
ds_erro_w			varchar(255);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_convenio_conta_w		integer;
cd_convenio_glosa_w		integer;
cd_convenio_decode_w		integer;
cd_categoria_w			varchar(10);
cd_categoria_decode_w		varchar(10);
cd_categoria_conta_w		varchar(10);
cd_categoria_glosa_w		varchar(10);
cd_local_estoque_w		smallint;
ie_tipo_atendimento_w		smallint;
ie_medico_atendimento_w		varchar(1);
ie_local_estoque_w		varchar(1);
cd_cgc_w			varchar(14);
cd_cgc_regra_w			varchar(14);
nr_doc_convenio_w		varchar(20);
nr_doc_propaci_w		varchar(20);
cd_procedimento_w          	bigint		:= 0;
ie_origem_proced_w		bigint		:= 0;
cd_material_w      		integer		:= 0;
nr_sequencia_w         		bigint		:= 0;
nr_seq_regra_w         		bigint		:= 0;
nr_seq_acao_regra_w		bigint		:= 0;
nr_seq_exame_propaci_w     	bigint		:= 0;
cd_unid_medida_w		varchar(30);
cd_medico_executor_w		varchar(10);
cd_medico_repasse_w		varchar(10);
cd_medico_req_w			varchar(10);
cd_medico_resp_w		varchar(10);
cd_setor_regra_w		integer	:= 0;
cd_setor_atendimento_w		integer	:= 0;
qt_lancamento_w			double precision	:= 0;
dt_entrada_unidade_w		timestamp;
dt_entrada_unidade_intern_w	timestamp;
dt_entrada_w			timestamp;
qt_registro_w			bigint	:= 0;
qt_passagem_setor_w		bigint	:= 0;
nr_atend_original_w		bigint;
nr_interno_conta_w		bigint;

nr_seq_propaci_w		bigint;
cd_proc_propaci_w		bigint;
dt_proc_propaci_w		timestamp;
ie_origem_propaci_w		bigint;
nr_seq_exame_w			bigint;
cd_medico_propaci_w		varchar(10);
cd_medico_filtro_w		varchar(10);
cd_area_proc_w			bigint;
cd_especial_proc_w		bigint;
cd_grupo_proc_w			bigint;
tx_proc_propaci_w		double precision	:= 100;
dt_execucao_w			timestamp;
dt_alta_w			timestamp;
qt_porte_anestesico_w		smallint;
nr_seq_atepacu_w		bigint;
nr_seq_atepacu_intern_w		bigint;
cd_edicao_amb_w			integer;
qt_proc_alta_w			integer;
qt_proc_lib_evolucao_w		integer;
qt_mat_alta_w			integer;
qt_procedimento_w		double precision;
ie_tipo_convenio_w		smallint;
qt_reg_w			bigint;
ie_funcao_medico_w		smallint;
nr_seq_proc_interno_w		bigint	:= 0;
nr_seq_proc_interno_ww		bigint	:= 0;
cd_senha_w			varchar(20);
cd_motivo_alta_w		bigint	:= 0;
ie_medico_executor_w		varchar(1);
cd_medico_regra_w		varchar(10)	:= null;
ie_clinica_w			bigint;
tx_procedimento_w		double precision;
cd_tipo_acomodacao_w		bigint;
cd_tipo_acomod_conv_w		bigint;
nr_anos_w			bigint;
cd_atividade_prof_bpa_w		smallint;
ie_regra_guia_w			varchar(5);
ie_consiste_item_w		varchar(1);
ie_consiste_proc_int_w		varchar(1);
nr_seq_lanc_proc_interno_w		bigint	:= 0;
ie_consiste_item_ww		varchar(1);
dt_liberacao_evolucao_w		timestamp;
nr_prescricao_w			bigint;
cd_medico_prescr_w		varchar(10);
cd_medico_exec_item_w		varchar(10);
cd_especialidade_w		integer;
nr_seq_classificacao_w		bigint;
cd_tipo_anestesia_w		varchar(10);
cd_funcao_w			integer;
ie_tipo_atend_bpa_w		smallint;
ie_grupo_atend_bpa_w		smallint;
cd_plano_convenio_w		varchar(10);
ie_proc_princ_atend_w		varchar(10);
ie_evolucao_clinica_w		varchar(10)	:= null;
cd_espec_evol_medico_w		varchar(10);
ie_via_acesso_w			varchar(1);
cont_w				bigint;
ie_integracao_w			varchar(01)	:= 'N';
ie_tipo_guia_w			varchar(02);
nr_interno_conta_ww		bigint;
cd_pessoa_fisica_w		varchar(10);
qt_atend_w			bigint;
ie_primeiro_atend_w		varchar(01);
cd_profissional_w		varchar(10);
cd_profissional_regra_w		varchar(10);

nr_seq_forma_org_w		bigint := 0;
nr_seq_grupo_w			bigint := 0;
nr_seq_subgrupo_w		bigint := 0;
cd_estab_item_w			bigint;
nr_seq_pq_proc_w		bigint;
dt_acerto_conta_w		timestamp;
ie_vincular_proc_princ_w	varchar(1):= 'S';
ie_carater_atend_w		varchar(02);
nr_cirurgia_w			bigint;
cd_setor_item_w			bigint;

qt_passagem_w			bigint;
nr_seq_setor_item_w		bigint;
qt_regra_proc_w			bigint;
cd_kit_material_w		integer;
nr_seq_atepacu_ww		bigint;
nr_seq_proc_princ_w		bigint;
ie_dispara_kit_mat_w		varchar(1);
/* ds_adicional_3_p - regra lancamento prescricao - nao mecher sem falar comigo (ricardo) 27/03/2008 */

dia_feriado_w			varchar(1) := 'N';
dia_semana_w			smallint	:= 0;
nr_sequencia_prescricao_w	bigint;
ie_lado_w			varchar(01)	:= 'X';
ie_material_pai_w		varchar(1)	:= 'S';
nr_seq_exame_proc_w		bigint;
ie_duplicar_proc_regra_w	varchar(01);
cd_tipo_recomendacao_w		bigint	:= -1;
ie_video_w			varchar(01)	:= 'X';
nr_seq_w			bigint;

nr_seq_atepacu_proc_w		bigint;
cd_setor_atendimento_proc_w	bigint;
dt_entrada_unidade_proc_w	timestamp;
nm_usuario_banco_w		varchar(50);
cd_setor_ativo_w		integer;
ie_lancto_auto_dt_alta_w	varchar(1);
ie_credenciado_w		varchar(1);
cd_medico_parecer_w		varchar(10);
qt_medico_w			bigint;
nr_prescr_w			bigint;
nr_seq_reg_template_w		bigint;
nr_seq_template_w		bigint;
cd_pessoa_usuario_w		varchar(10);
cd_dieta_w			bigint	:= -1;
cd_refeicao_w			varchar(3) := '0';
cd_material_exame_w		varchar(20)	:= '0';
cd_procedencia_w		integer		:= 0;
dt_inicio_procedimento_w	timestamp;
nr_min_duracao_w		bigint;
ie_forma_apresentacao_w		smallint;
ie_lanc_aut_assumir_pac_w	varchar(10);
dt_atual_trunc_w		timestamp	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());
ie_paciente_isolado_w		varchar(1);
ie_medico_profissional_w	varchar(10) := 'N';
nr_seq_conselho_w		bigint;
sg_conselho_w			varchar(10);
cd_cgc_orig_w			varchar(14);
ie_mat_liberado_local_w		varchar(15) := 'S';
ie_valida_liberacao_mat_w	varchar(15);
ds_local_estoque_w		varchar(40);
cd_medico_referido_w		varchar(10);
qt_idade_w			double precision;
dt_liberacao_dieta_w		timestamp;
dt_liberacao_dieta_nut_w	timestamp;
cd_cnpj_prestador_w		varchar(14);/*Geliard 07/11/2009 OS165332*/
cd_cid_doenca_w			varchar(10);/*Geliard OS178910*/
qt_liberar_dieta_w		integer;
ie_porte_w			varchar(1);
ie_utiliza_regra_uso_w		varchar(1);
cd_medico_diagnostico_w		varchar(10);
cd_medico_anestesista_w		varchar(10);
ds_erro_ww			varchar(255) := '';
ie_lanc_sus_setor_int_w		varchar(1) := 'N';
ie_destino_dieta_w		varchar(2);
ds_ret_w			bigint;
qt_existe_w			bigint;
nr_seq_conjunto_w		bigint	:= 0;
ie_sexo_w			varchar(1);
nr_acompanhantes_w		bigint:= 0;
nr_cirurgia_propaci_w		bigint;
ie_vincula_cirur_lanc_w		varchar(1);
ie_vincula_cirur_lanc_mat_w	varchar(1);
ie_tipo_anest_gera_lancto_w	varchar(1);
cd_medico_espec_w		varchar(10);
ie_escala_pep_w			varchar(10);
nr_seq_classif_medico_w		bigint;
cd_medico_equipe_w		varchar(10);
nr_seq_equipe_w			bigint;
qt_equipe_dia_w			bigint;
ie_atualiza_kit_w		varchar(1);
nr_seq_tipo_pg_w		bigint	:= 0;
qt_dias_internacao_w		bigint;
cd_unidade_basica_w             varchar(10)	:= '0';
cd_unidade_compl_w              varchar(10)	:= '0';
nr_seq_tipo_servico_w		bigint;
nm_tabela_w			varchar(50)	:= 'XPTO';
nm_atributo_w			varchar(50)	:= 'XPTO';
ds_dia_ciclo_w			varchar(5);
ds_dia_ciclo_ww			varchar(5);
ie_tipo_evolucao_w		varchar(3) := '0';
ie_desfecho_w			varchar(1);
nr_cirurgia_ww			bigint;
ie_nivel_w			varchar(3):= 1;
qt_regras_w			bigint:= 0;
ie_funcao_medico_proc_w		varchar(10);
qt_erro_w			bigint:= 0;

ie_regra_uso_w			varchar(1);
ie_acao_excesso_w		varchar(10);
qt_excedida_w			double precision;
ds_erro_uso_w			varchar(255);
nr_conta_w			bigint;
nr_seq_excedido_w		bigint;
dt_entrada_local_w        	timestamp;
dt_saida_local_w		timestamp;
ie_dia_internacao_rla_w		varchar(1);
dt_fim_cirurgia_w		timestamp;
dt_inicio_cirurgia_w		timestamp;
ie_funcionario_w		varchar(1);
ie_executar_leito_w		varchar(1):= 'A';
nr_seq_teste_vacina_w		bigint	:= 0;
ie_tipo_atend_tiss_w		varchar(2);
cd_medico_cirurgiao_w		varchar(10);
ie_usar_medico_cirurgiao_w	varchar(1);
cd_medico_aval_w		varchar(10);
cd_medico_ambulat_w		varchar(10);
nr_seq_tipo_avaliacao_w		bigint	:= 0;
ie_gravar_setor_cirurgia_w	varchar(1);
cd_setor_cirurgia_w		bigint;
nr_seq_tipo_atend_w		bigint	:= 0;
cd_medico_lanc_aut_pac_w	varchar(10);
qt_funcionario_dia_w		bigint;
qt_proced_dia_w				bigint;
nr_seq_forma_chegada_w		bigint;
nr_seq_proc_w			bigint	:= 0;

ie_vinc_proc_princ_item_w	varchar(1):= 'N';
ie_vincular_proc_princ_orig_w	varchar(1);
ie_atualiza_medico_req_w	varchar(1);
nr_seq_tipo_checkup_w		bigint;
ie_data_vig_atual_w		varchar(1):= 'S';
ie_origem_inf_w			varchar(1);
cd_cgc_laboratorio_w		varchar(14);
nr_seq_proc_interno_aux_w	bigint;
cd_espec_medica_w		integer:= 0;
nr_parecer_w			bigint;

ie_prioridade_edicao_w		varchar(01);
vl_ch_honorarios_w		double precision	:= 0;
vl_ch_custo_oper_w		double precision	:= 0;
vl_m2_filme_w			double precision	:= 0;
dt_inicio_vigencia_w		timestamp;
tx_ajuste_geral_w		double precision	:= 0;
nr_seq_cbhpm_edicao_w		bigint;
qt_regra_edicao_w		bigint;
cd_proc_laudo_sus_w		bigint		:= 0;
cd_doenca_w			varchar(10):= '0';
qt_regra_cid_w			bigint;
cd_agenda_w			bigint;
ie_origem_edicao_w		bigint		:= 0;
ie_situacao_w			varchar(1);

qt_dias_primeira_cir_w		bigint;
nr_ultima_cir_w			bigint;
dt_base_w			timestamp;
dt_primeira_cir_w		timestamp;
cd_convenio_excesso_w		integer;
cd_categoria_excesso_w		varchar(10);
qt_dias_primeira_prescr_w	bigint;
nr_primeira_prescr_w		bigint;
dt_primeira_prescr_w		timestamp;
ie_gera_conta_estab_w		varchar(1);
ie_excluir_princ_conta_w	varchar(1) := 'N';
cd_proced_prescrito_w		bigint;
ie_especial_proc_exec_w		varchar(01);
ie_atualiza_func_medico_w	varchar(2);
cd_conv_parametro_w		integer;
ie_funcao_medico_ww		smallint;
cd_medico_parametro_w		varchar(10);
cd_medico_evol_ferida_cur_w	varchar(10);
cd_prof_evol_ferida_w		varchar(10);
nr_seq_regra_uso_mat_w		bigint;

cd_medico_cir_w			varchar(10);
nr_seq_equipe_cir_princ_w	bigint;
ie_dias_cirurgia_w		varchar(1);
cd_medico_exec_prescr_w		varchar(10);
nm_usuario_orig_prescr_w	varchar(15);
nr_seq_queixa_w			bigint:= 0;
nm_usuario_w			varchar(50);

cd_convenio_parametro_w		integer;
cd_categoria_parametro_w	varchar(10);
ie_permite_gerar_pacote_w	varchar(1);
ie_gerar_pacote_alta_w		varchar(1);
nr_conta_pacote_w		bigint;
cd_setor_prescricao_w		integer;
qt_medico_dia_w			bigint;
ie_gerar_autor_w		varchar(1);
cd_cargo_usuario_w		cargo.cd_cargo%type;
dt_agenda_w			timestamp;
ie_data_agenda_rla_w		varchar(1);
nr_seq_equipe_cirurgiao_w	bigint;
ie_dependente_w			varchar(1);
ds_texto_w			varchar(255);
ds_texto_ww			varchar(255);
ds_texto_www			varchar(255);
cd_municipio_ibge_w		compl_pessoa_fisica.cd_municipio_ibge%type := 'X';
qt_reg_ibge_w			bigint := 0;
cd_evolucao_w			bigint;
nr_acompanhante_dia_w		bigint:= 0;
dt_acompanhante_w		timestamp;
ie_gera_se_item_exc_conta_w	regra_lanc_aut_pac.ie_gera_se_item_exc_conta%type;
ie_gerar_lanc_item_exc_w	varchar(1):='S';
ie_setor_atual_alta_w		regra_lanc_automatico.ie_setor_atual_alta%type;
cd_setor_atend_alta_w		atend_paciente_unidade.cd_setor_atendimento%type;
cd_convenio_orig_w			integer;
cd_categoria_orig_w			varchar(10);
qt_proced_setor_w		bigint;
nr_Seq_triagem_w		bigint:= 0;
cd_motivo_exc_conta_w		parametro_faturamento.cd_motivo_exc_conta%type;
ie_considera_dt_entrada_w	convenio_estabelecimento.ie_considera_dt_entrada%type;
ie_considera_dt_entrada_anam_w 	convenio_estabelecimento.ie_considera_dt_entrada%type;
nr_seq_forma_laudo_w		atendimento_paciente.nr_seq_forma_laudo%type;
nr_episodio_w			episodio_paciente.nr_sequencia%type;
nr_seq_tipo_admissao_fat_w	atendimento_paciente.nr_seq_tipo_admissao_fat%type;


cd_pessoa_fisica_usuario_w	varchar(10);
nr_prescr_gatilho_w		bigint;
nr_seq_prescr_gatilho_w		bigint;
qt_regra_w			bigint;
qt_atend_ep_w			bigint;
qt_atend_ano_w			bigint;
qt_proc_mat_w bigint;
dt_servico_atend_w timestamp;

ie_novo_medico_atual_w		varchar(1);
qt_registros_w			bigint := 0;
nr_seq_servico_w         	bigint;
										
nr_concession_card_w	atend_categoria_convenio.nr_con_card%type;										
cd_concession_card_type_w atend_categoria_convenio.cd_con_card_type%type;															

cd_especialidade_age_cons_w agenda.cd_especialidade%type;
cd_especialidade_agendamento_w	agenda_consulta.cd_especialidade%type;
cd_tipo_agenda_w    agenda.cd_tipo_agenda%type;
ie_especialidade_agenda_w   regra_lanc_aut_pac.ie_especialidade_agenda%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_setor_atendimento,
	CASE WHEN a.nr_seq_evento=211 THEN  nr_interno_conta_p  ELSE CASE WHEN ie_conv_parametro='A' THEN  0  ELSE nr_interno_conta_p END  END ,
	coalesce(a.ie_vincular_proc_princ,'S'),
	coalesce(a.ie_dispara_kit_mat,'N'),
	coalesce(a.ie_duplicar_proc_regra,'N'),
	coalesce(a.ie_setor_atual_alta, 'N')
from 	regra_lanc_automatico a
where	a.cd_estabelecimento				= cd_estabelecimento_w
and 	((nr_seq_evento_p <> 36) or ((nr_seq_evento_p = 36) and (coalesce(a.ie_nivel,coalesce(ie_nivel_w,1)) = coalesce(ie_nivel_w,1))))
and	coalesce(a.cd_convenio, CASE WHEN ie_conv_parametro='A' THEN  cd_convenio_w  ELSE cd_convenio_conta_w END )	= CASE WHEN ie_conv_parametro='A' THEN  cd_convenio_w  ELSE cd_convenio_conta_w END
and	coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)	= ie_tipo_convenio_w
and (coalesce(a.ie_tipo_atendimento,ie_tipo_atendimento_w)= ie_tipo_atendimento_w or	coalesce(ie_tipo_atendimento_w::text, '') = '')
and (a.nr_seq_evento				= nr_seq_evento_p)
and	((coalesce(a.cd_medico, cd_medico_filtro_w)	= cd_medico_filtro_w) or (coalesce(cd_medico_filtro_w::text, '') = ''))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_procedimento::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_procedimento,cd_proc_propaci_w) = cd_proc_propaci_w or coalesce(cd_proc_propaci_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_procedimento::text, '') = '')) or (((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '') and (coalesce(a.ie_origem_proced,ie_origem_propaci_w) = ie_origem_propaci_w or coalesce(ie_origem_propaci_w::text, '') = '')) or (coalesce(a.cd_procedimento::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_area_procedimento::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_area_procedimento,cd_area_proc_w)= cd_area_proc_w 	or coalesce(cd_area_proc_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_especialidade_proc::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_especialidade_proc,cd_especial_proc_w) = cd_especial_proc_w or coalesce(cd_especial_proc_w::text, '') = '')))
and	(((ds_adicional_3_p = 'PRESCRICAO') and (coalesce(a.cd_grupo_proc::text, '') = '')) or ((coalesce(ds_adicional_3_p,'X') <> 'PRESCRICAO') and (coalesce(a.cd_grupo_proc,cd_grupo_proc_w)		= cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')))
and	((coalesce(a.cd_edicao_amb,cd_edicao_amb_w)		= cd_edicao_amb_w) or (coalesce(cd_edicao_amb_w::text, '') = ''))
and (coalesce(a.nr_seq_exame,nr_seq_exame_propaci_w)	= nr_seq_exame_propaci_w)
and	coalesce(a.cd_categoria, cd_categoria_w)		= cd_categoria_w
and (coalesce(a.cd_motivo_alta, cd_motivo_alta_w)	= cd_motivo_alta_w)
and (coalesce(a.nr_seq_proc_interno, coalesce(nr_seq_proc_interno_w,0)) = coalesce(nr_seq_proc_interno_w,0))
and	((coalesce(ie_clinica::text, '') = '') or (ie_clinica = ie_clinica_w))
and	((coalesce(cd_tipo_acomodacao::text, '') = '') or (coalesce(cd_tipo_acomodacao_w::text, '') = '') or (cd_tipo_acomodacao =  CASE WHEN coalesce(ie_origem_tipo_acomod,1)=1 THEN  cd_tipo_acomodacao_w  ELSE cd_tipo_acomod_conv_w END ))
and	((coalesce(cd_tipo_anestesia::text, '') = '') or (coalesce(cd_tipo_anestesia_w::text, '') = '') or (cd_tipo_anestesia = cd_tipo_anestesia_w))
and	((coalesce(cd_especialidade::text, '') = '') or (coalesce(cd_especialidade_w::text, '') = '') or (cd_especialidade = cd_especialidade_w))
--and	((nr_seq_classificacao is null) or (nr_seq_classificacao_w is null) or (nr_seq_classificacao = nr_seq_classificacao_w))
and	coalesce(nr_seq_classificacao,coalesce(nr_seq_classificacao_w,0))	= coalesce(nr_seq_classificacao_w,0)
--and	((nr_anos_w = 999) or (nr_anos_w between nvl(qt_ano_min,0) and nvl(qt_ano_max,999)))
and	coalesce(qt_idade_w,1) between coalesce(obter_idade_lancto_auto(a.nr_sequencia,'MIN'),0) and coalesce(obter_idade_lancto_auto(a.nr_sequencia,'MAX'),9999999)
and	((coalesce(a.cd_funcao::text, '') = '') or (cd_funcao_w = 0) or (a.cd_funcao = cd_funcao_w))
and 	(((nr_seq_evento_p in (12,26,36,40,123,221,492,501,535,576)) and (obter_se_medico_especialidade(a.nr_sequencia,cd_medico_espec_w) = 'S')) or (nr_seq_evento_p not in (12,26,36,40,123,221,492,501,535,576)))
and 	((nr_seq_evento_p = 539) and cd_especialidade_agendamento_w = a.cd_espec_medic_atend or (coalesce(cd_especialidade_agendamento_w::text, '') = '' and (((coalesce(a.ie_especialidade_agenda,'N') = 'N') and (obter_se_medico_especialidade(a.nr_sequencia,cd_medico_espec_w) = 'S')) 
or 	((coalesce(a.ie_especialidade_agenda,'N') = 'S') and (a.cd_espec_medic_atend = cd_especialidade_age_cons_w or exists (SELECT 1 
															from AGENDA_CONS_ESPECIALIDADE x 
															where x.cd_agenda = cd_agenda_w 
															and x.cd_especialidade = a.cd_espec_medic_atend))))
or (nr_seq_evento_p <> 539)))
and	coalesce(cd_plano_convenio, cd_plano_convenio_w)	= cd_plano_convenio_w
and	((coalesce(ie_evolucao_clinica_w::text, '') = '') or (coalesce(a.ie_evolucao_clinica,ie_evolucao_clinica_w) = ie_evolucao_clinica_w))
and	coalesce(a.nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w
and	coalesce(a.nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w
and	coalesce(a.nr_seq_subgrupo, nr_seq_subgrupo_w)	= nr_seq_subgrupo_w
and	coalesce(a.nr_seq_conjunto,nr_seq_conjunto_w)	= nr_seq_conjunto_w
and (coalesce(a.ie_carater_inter, coalesce(ie_carater_atend_w, 0))	= coalesce(ie_carater_atend_w, 0))
and (coalesce(nr_seq_queixa, coalesce(nr_seq_queixa_w, 0))	= coalesce(nr_seq_queixa_w, 0))
and (coalesce(nr_seq_triagem, coalesce(nr_seq_triagem_w, 0))	= coalesce(nr_seq_triagem_w, 0))
and 	coalesce(ie_porte, coalesce(ie_porte_w,'0')) = coalesce(ie_porte_w, '0')
and	((cd_tipo_recomendacao_w = -1 and (coalesce(cd_tipo_recomendacao::text, '') = '')) or (coalesce(cd_tipo_recomendacao,cd_tipo_recomendacao_w) = cd_tipo_recomendacao_w))
and	((cd_dieta_w = -1 and (coalesce(cd_dieta::text, '') = '')) or (coalesce(cd_dieta,cd_dieta_w) = cd_dieta_w))
and	((cd_refeicao_w = '0' and (coalesce(cd_refeicao::text, '') = '')) or (coalesce(cd_refeicao,cd_refeicao_w) = cd_refeicao_w))
and	((coalesce(ie_dieta_liberada,'N') = 'N') or ((coalesce(ie_dieta_liberada,'S') = 'S') and (coalesce(qt_liberar_dieta_w,0) > 0)))
and	((ie_video_w = 'X') or (coalesce(ie_video, 'N') = 'N') or ((coalesce(ie_video, 'N') = 'S') and (coalesce(ie_video, coalesce(ie_video_w, 'X')) = coalesce(ie_video_w, 'X'))))
and	qt_reg_w					= 0
and (coalesce(cd_procedencia,cd_procedencia_w)	= cd_procedencia_w)
--and 	(((nr_seq_evento_p = 26) and ((ie_paciente_isolado is null) or (ie_paciente_isolado = ie_paciente_isolado_w))) or (nr_seq_evento_p <> 26))
and	(((nr_seq_evento_p in (26,39,544)) and ((coalesce(ie_paciente_isolado,'A') = 'A') or (coalesce(ie_paciente_isolado,'A') = ie_paciente_isolado_w))) or (nr_seq_evento_p not in (26,39,544)))
and	ie_situacao					= 'A'
and (coalesce(ie_feriado,'N')	= 'N' or	coalesce(ie_feriado,'N')				= dia_feriado_w)
and	((coalesce(ie_lado_w, 'X')	= 'X') or (coalesce(ie_lado, ie_lado_w) = ie_lado_w))
and	coalesce(cd_material_exame,cd_material_exame_w)	= cd_material_exame_w
and	((coalesce(dt_dia_semana, dia_semana_w) = dia_semana_w) or (dt_dia_semana = 9))
and	coalesce(ie_tipo_guia,coalesce(ie_tipo_guia_w,'0'))	= coalesce(ie_tipo_guia_w,'0')
and 	((coalesce(a.ie_credenciado,'T') = 'T') or (a.ie_credenciado 	= ie_credenciado_w))
and	((nr_seq_evento_p <> 291) or ((nr_seq_evento_p = 291) and ((coalesce(a.ie_destino_dieta, coalesce(ie_destino_dieta_w,'T')) = coalesce(ie_destino_dieta_w,'T')) or (a.ie_destino_dieta = 'T'))))
and	dt_atual_trunc_w between coalesce(dt_inicio_vigencia,dt_atual_trunc_w) and fim_dia(coalesce(dt_final_vigencia,dt_atual_trunc_w))
and	coalesce(ie_sexo, coalesce(ie_sexo_w, 'I')) = coalesce(ie_sexo_w, 'I')
and (coalesce(ie_escala_pep,ie_escala_pep_w)	= ie_escala_pep_w  or (coalesce(ie_escala_pep::text, '') = ''))
and 	((coalesce(ie_acompanhante, 'N') = 'N') or ((coalesce(ie_acompanhante,'N') = 'S') and (nr_acompanhantes_w > 0)))
and (coalesce(nr_seq_classif_medico, coalesce(nr_seq_classif_medico_w,0)) = coalesce(nr_seq_classif_medico_w,0))
and 	((coalesce(nr_seq_equipe::text, '') = '') or (obter_se_medico_equipe(nr_seq_equipe, cd_medico_equipe_w) = 'S'))
and	qt_dias_internacao_w between coalesce(qt_dias_inter_inicio, qt_dias_internacao_w) and coalesce(qt_dias_inter_final, qt_dias_internacao_w)
and	coalesce(nr_seq_tipo_pg,nr_seq_tipo_pg_w)	= nr_seq_tipo_pg_w
and	((nr_seq_evento_p not in (39,40)) or
	((nr_seq_evento_p in (39,40)) and (coalesce(cd_unidade_basica, coalesce(cd_unidade_basica_w,'0')) = coalesce(cd_unidade_basica_w,'0')) and (coalesce(cd_unidade_compl, coalesce(cd_unidade_compl_w,'0')) = coalesce(cd_unidade_compl_w,'0'))))
and 	coalesce(nr_seq_tipo_servico, coalesce(nr_seq_tipo_servico_w,0)) = coalesce(nr_seq_tipo_servico_w,0)
and 	((coalesce(cd_doenca_w,'0') = '0') or (coalesce(cd_doenca,coalesce(cd_doenca_w,'0')) = coalesce(cd_doenca_w,'0')))
and 	((coalesce(ie_origem_edicao_w,0) = 0) or (coalesce(ie_origem_edicao,coalesce(ie_origem_edicao_w,0)) = coalesce(ie_origem_edicao_w,0)))
and	coalesce(nm_tabela,nm_tabela_w)	= nm_tabela_w
and	coalesce(nm_atributo,nm_atributo_w)	= nm_atributo_w
and	coalesce(nr_seq_tipo_avaliacao,nr_seq_tipo_avaliacao_w)	= nr_seq_tipo_avaliacao_w
and	coalesce(nr_seq_tipo_atend,nr_seq_tipo_atend_w)		= nr_seq_tipo_atend_w
and	coalesce(ie_tipo_evolucao,coalesce(ie_tipo_evolucao_w,'0'))	= coalesce(ie_tipo_evolucao_w,'0')
and	((coalesce(ie_primeiro_dia_mes,'N') = 'N') or (PKG_DATE_UTILS.extract_field('DAY',dt_execucao_w) = '01'))
and (coalesce(dt_execucao_w, clock_timestamp()) between
			pkg_date_utils.Get_DateTime(coalesce(dt_execucao_w, clock_timestamp()), coalesce(hr_inicial, pkg_date_utils.get_Time(00,00,00)))
					and
			pkg_date_utils.Get_DateTime(coalesce(dt_execucao_w, clock_timestamp()), coalesce(hr_final, pkg_date_utils.get_Time(23,59,59))))
and	((nr_seq_evento_p not in (352,539,586)) or (coalesce(ie_classif_agenda,coalesce(ds_adicional_4_p,'0')) = coalesce(ds_adicional_4_p,'0')))
and	((nr_seq_evento_p not in (557,30,39)) or
	((nr_seq_evento_p in (557,30,39)) and ((coalesce(a.cd_setor_atendimento::text, '') = '') or (a.cd_setor_atendimento = cd_setor_atendimento_w))))
and 	((nr_seq_evento_p <> 26) or
	((nr_seq_evento_p = 26) and ((coalesce(a.ie_funcionario,'A') = 'A') or (coalesce(a.ie_funcionario,ie_funcionario_w) = ie_funcionario_w))))
and	((coalesce(ie_beira_leito,'A') = 'A') or (coalesce(ie_beira_leito,'A') = coalesce(ie_executar_leito_w,'A')))
and	coalesce(nr_seq_teste_vacina,nr_seq_teste_vacina_w)	= nr_seq_teste_vacina_w
and	coalesce(nr_seq_proc,nr_seq_proc_w)	= nr_seq_proc_w
and 	((nr_seq_evento_p not in (26,30)) or
	((nr_seq_evento_p in (26,30)) and (coalesce(a.ie_tipo_atend_tiss,ie_tipo_atend_tiss_w) = ie_tipo_atend_tiss_w)))
and	coalesce(nr_seq_forma_chegada, coalesce(nr_seq_forma_chegada_w,0)) = coalesce(nr_seq_forma_chegada_w,0)
and	coalesce(nr_seq_tipo_checkup, coalesce(nr_seq_tipo_checkup_w,0)) = coalesce(nr_seq_tipo_checkup_w,0)
and	((obter_se_contido_char(coalesce(ds_dia_ciclo,'0'),coalesce(ds_dia_ciclo_ww, '0')) = 'S')  or (nr_seq_evento_p <> 192) or (obter_se_contido_char(coalesce(ds_dia_ciclo,'0'),'0') = 'S'))
and	((nr_seq_evento_p <> 536) or
	((nr_seq_evento_p = 536) and (coalesce(a.cd_procedimento,cd_proc_laudo_sus_w) = cd_proc_laudo_sus_w or coalesce(cd_proc_laudo_sus_w::text, '') = '')))
and	((nr_seq_evento_p <> 566) or
	((nr_seq_evento_p = 566) and (nr_seq_evento = nr_seq_evento_p and (ie_tipo_coleta = (ds_adicional_1_p)::numeric  or coalesce(ie_tipo_coleta::text, '') = ''))))	
and	((nr_seq_evento_p <> 590) or
	((nr_seq_evento_p = 590) and ((nr_seq_evento = nr_seq_evento_p and (nr_seq_servico = nr_seq_servico_w or coalesce(nr_seq_servico::text, '') = '')) 
	and (ds_adicional_2_p = a.ie_destino_dieta or a.ie_destino_dieta = 'T'))))	
and	((nr_seq_evento_p not in (539,586))
or	((nr_seq_evento_p	in (539,586)) and coalesce(cd_agenda, cd_agenda_w) = cd_agenda_w or (coalesce(cd_agenda_w::text, '') = '' and coalesce(cd_agenda::text, '') = '')))
and	((nr_seq_evento_p <> 606) or
	((nr_seq_evento_p = 606) and ((a.ie_dieta_acompanhante = obter_se_dieta_acomp(nr_atendimento_p, dt_servico_atend_w)) or (a.ie_dieta_acompanhante = 'T')))
)
and (coalesce(a.cd_cargo,cd_cargo_usuario_w) = cd_cargo_usuario_w)
and 	((coalesce(a.ie_dependente,'N') = 'N') or (a.ie_dependente = ie_dependente_w))
and (coalesce(cd_municipio_ibge,cd_municipio_ibge_w) = cd_municipio_ibge_w)
and 	((coalesce(ie_acompanhante_dia, 'N') = 'N') or ((coalesce(ie_acompanhante_dia,'N') = 'S') and (nr_acompanhante_dia_w > 0)))
and	((nr_seq_evento_p <> 583) or((nr_seq_evento_p = 583) and (nr_seq_template = nr_seq_template_w or coalesce(nr_seq_template::text, '') = '')))
and	((nr_seq_evento_p <> 621) or((nr_seq_evento_p = 621) and (nr_seq_template = nr_seq_template_w or coalesce(nr_seq_template::text, '') = '')))
and (coalesce(nr_seq_forma_laudo, nr_seq_forma_laudo_w) = nr_seq_forma_laudo_w)
and	( (coalesce(ie_regra_qtd_atend::text, '') = '' or coalesce(nr_seq_tipo_admissao_fat,0) = 0) or
	  ((coalesce(ie_regra_qtd_atend,'X') = 'C' and coalesce(qt_atend_ep_w,0) between coalesce(qt_atend_inicio,0) and coalesce(qt_atend_fim,0) and coalesce(nr_seq_tipo_admissao_fat,0) = coalesce(nr_seq_tipo_admissao_fat_w,0)) or (coalesce(ie_regra_qtd_atend,'X') = 'A' and coalesce(qt_atend_ano_w,0) between coalesce(qt_atend_inicio,0) and coalesce(qt_atend_fim,0) and coalesce(nr_seq_tipo_admissao_fat,0) = coalesce(nr_seq_tipo_admissao_fat_w,0))))
and (nr_seq_evento_p <> 192 or 
    ((coalesce(a.cd_protocolo::text, '') = '' or a.cd_protocolo = coalesce(obter_cd_protocolo_pac_onc(ds_adicional_1_p), 0))
    and (coalesce(a.nr_seq_medicacao::text, '') = '' or a.nr_seq_medicacao = coalesce(obter_nr_seq_medicacao_pac_onc(ds_adicional_1_p), 0))))
and ((nr_seq_evento_p not in (34,539)) or
((nr_seq_evento_p in (34,539)) and (coalesce(a.cd_concession_crd, coalesce(cd_concession_card_type_w,0)) = coalesce(cd_concession_card_type_w,0)))
)
and ((nr_seq_evento_p <> 623) or 
((nr_seq_evento_p = 623) and (coalesce(a.nr_seq_precaucao::text, '') = '' or a.nr_seq_precaucao = ds_adicional_1_p) and (coalesce(a.nr_seq_motivo_isol::text, '') = '' or a.nr_seq_motivo_isol = ds_adicional_2_p)))
																																																                                                                               																				 
order by
	coalesce(a.ie_conv_parametro, 'A'),
	coalesce(a.cd_medico,0),
	coalesce(a.cd_setor_atendimento,0),
	coalesce(a.ie_evolucao_clinica,' '),
	coalesce(a.ie_tipo_atendimento,0),
	coalesce(NR_SEQ_MEDICACAO, 0),
  coalesce(CD_PROTOCOLO, 0),
  coalesce(a.cd_convenio,0),
  coalesce(DS_DIA_CICLO, 'A'),
	coalesce(a.ie_tipo_convenio,0),
	coalesce(a.cd_edicao_amb,0),
	coalesce(a.cd_procedimento,0),
	coalesce(a.cd_grupo_proc,0),
	coalesce(a.cd_especialidade_proc,0),
	coalesce(a.cd_area_procedimento,0),
	coalesce(a.nr_seq_exame,0),
	coalesce(a.ie_clinica,0),
	coalesce(a.cd_funcao,0),
	coalesce(a.ie_lado,' '),
	coalesce(a.cd_material_exame,' '),
	coalesce(nr_seq_classificacao,0),
	coalesce(nr_seq_classif_medico,0),
	coalesce(nr_seq_equipe,0),
	coalesce(nr_seq_tipo_servico,0),
	coalesce(ie_classif_agenda,' '),
	coalesce(obter_prior_espec_medico(cd_medico_espec_w,a.cd_espec_medic_atend),9999) desc,
	coalesce(a.ie_tipo_atend_tiss,'0'),
	coalesce(a.nr_seq_forma_chegada,0),
	coalesce(a.nr_seq_tipo_checkup,0),
	coalesce(a.cd_plano_convenio,'0'),
	coalesce(ie_origem_edicao,0),
	coalesce(cd_agenda,0),
	coalesce(nr_seq_queixa,0),
	coalesce(cd_motivo_alta,0),
	coalesce(cd_procedencia,0),
	coalesce(ie_paciente_isolado,'A'),
	coalesce(nr_seq_tipo_avaliacao,0),
	coalesce(a.cd_categoria,' ');

c02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * CASE WHEN coalesce(qt_procedimento_w,0)=0 THEN 1  ELSE qt_procedimento_w END  END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(a.tx_procedimento,100),
		a.tx_procedimento,
		coalesce(a.ie_regra_guia,'RC'),
		a.nr_seq_proc_interno,
		coalesce(a.ie_consiste_item,'N'),
    	coalesce(a.ie_consiste_proc_int,'N'),
    	coalesce(a.nr_seq_proc_interno, 0),
		coalesce(a.ie_proc_princ_atend, 'N'),
		a.nr_seq_lanc,
		a.cd_estab_item,
		a.cd_setor_item,
		nr_min_duracao,
		a.cd_cnpj_prestador,
		a.cd_cid_doenca,
		a.cd_medico,
		coalesce(a.ie_vinc_proc_princ_item, 'N'),
		coalesce(qt_dias_primeira_cir,0),
		coalesce(qt_dias_primeira_prescr,0),
		coalesce(a.ie_gera_conta_estab,'N'),
		coalesce(a.ie_gerar_autor,'S'),
		coalesce(a.ie_gera_se_item_exc_conta,'S'),
		coalesce(a.ie_novo_medico_atual, 'N'),
    coalesce(a.ie_especialidade_agenda, 'N')
	from 	material		b,
		regra_lanc_aut_pac	a
	where	a.nr_seq_regra 	= nr_seq_regra_w
	and	nr_seq_regra_w 	<> 0
	and	b.ie_situacao 	= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and	((coalesce(ie_retorno,'N') = 'S') or ((coalesce(ie_retorno,'N') = 'N') and (coalesce(nr_atend_original_w::text, '') = ''))
				 or ((coalesce(ie_retorno,'N') = 'R') and (nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '')))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w	= 0
	
union all

	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_exame,
		a.cd_material,
		substr(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(a.tx_procedimento,100),
		a.tx_procedimento,
		coalesce(a.ie_regra_guia,'RC'),
		a.nr_seq_proc_interno,
		coalesce(a.ie_consiste_item,'N'),
    	coalesce(a.ie_consiste_proc_int,'N'),
      	coalesce(a.nr_seq_proc_interno, 0),
		coalesce(a.ie_proc_princ_atend, 'N'),
		a.nr_seq_lanc,
		a.cd_estab_item,
		a.cd_setor_item,
		nr_min_duracao,
		a.cd_cnpj_prestador,
		a.cd_cid_doenca,
		a.cd_medico,
		coalesce(a.ie_vinc_proc_princ_item, 'N'),
		coalesce(qt_dias_primeira_cir,0),
		coalesce(qt_dias_primeira_prescr,0),
		coalesce(a.ie_gera_conta_estab,'N'),
		coalesce(a.ie_gerar_autor,'S'),
		coalesce(a.ie_gera_se_item_exc_conta,'S'),
		coalesce(a.ie_novo_medico_atual, 'N'),
    coalesce(a.ie_especialidade_agenda, 'N')
	from 	material		b,
		regra_lanc_aut_pac	a
	where	a.nr_seq_regra 	= nr_seq_regra_w
	and	nr_seq_regra_w 	<> 0
	and	b.ie_situacao 	= 'A'
	and 	coalesce(a.ie_adic_orcamento,'N') = 'N'
	and	(a.cd_material IS NOT NULL AND a.cd_material::text <> '')
	and	a.cd_material 	= b.cd_material
	and (coalesce(ie_retorno,'N') = 'P')
	and	ie_primeiro_atend_w	= 'S'
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w	= 0
	
union all

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(tx_procedimento,100),
		tx_procedimento,
		coalesce(ie_regra_guia,'RC'),
		nr_seq_proc_interno,
		coalesce(ie_consiste_item,'N'),
    	coalesce(ie_consiste_proc_int,'N'),
      	coalesce(nr_seq_proc_interno, 0),
		coalesce(ie_proc_princ_atend, 'N'),
		nr_seq_lanc,
		cd_estab_item,
		cd_setor_item,
		nr_min_duracao,
		cd_cnpj_prestador,
		cd_cid_doenca,
		cd_medico,
		coalesce(ie_vinc_proc_princ_item, 'N'),
		coalesce(qt_dias_primeira_cir,0),
		coalesce(qt_dias_primeira_prescr,0),
		coalesce(ie_gera_conta_estab,'N'),
		coalesce(ie_gerar_autor,'S'),
		coalesce(ie_gera_se_item_exc_conta,'S'),
		coalesce(ie_novo_medico_atual, 'N'),
    coalesce(ie_especialidade_agenda, 'N')
	from 	regra_lanc_aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w <> 0
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and	((coalesce(ie_retorno,'N') = 'S') or ((coalesce(ie_retorno,'N') = 'N') and (coalesce(nr_atend_original_w::text, '') = ''))
				 or ((coalesce(ie_retorno,'N') = 'R') and (nr_atend_original_w IS NOT NULL AND nr_atend_original_w::text <> '')))
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') or (nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w		= 0
	
union all

	select	cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		cd_material,
		'XX',
		CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
		coalesce(ie_medico_atendimento,'N'),
		coalesce(ie_local_estoque,'N'),
		CASE WHEN ie_forma_func_medico='P' THEN coalesce(ie_funcao_medico, ie_funcao_medico_w)  ELSE ie_funcao_medico END ,
		--nvl(tx_procedimento,100),
		tx_procedimento,
		coalesce(ie_regra_guia,'RC'),
		nr_seq_proc_interno,
		coalesce(ie_consiste_item,'N'),
    	coalesce(ie_consiste_proc_int,'N'),
      	coalesce(nr_seq_proc_interno, 0),
		coalesce(ie_proc_princ_atend, 'N'),
		nr_seq_lanc,
		cd_estab_item,
		cd_setor_item,
		nr_min_duracao,
		cd_cnpj_prestador,
		cd_cid_doenca,
		cd_medico,
		coalesce(ie_vinc_proc_princ_item, 'N'),
		coalesce(qt_dias_primeira_cir,0),
		coalesce(qt_dias_primeira_prescr,0),
		coalesce(ie_gera_conta_estab,'N'),
		coalesce(ie_gerar_autor,'S'),
		coalesce(ie_gera_se_item_exc_conta,'S'),
		coalesce(ie_novo_medico_atual, 'N'),
    coalesce(ie_especialidade_agenda, 'N')
	from 	regra_lanc_aut_pac
	where	nr_seq_regra  	= nr_seq_regra_w
	and	nr_seq_regra_w <> 0
	and 	coalesce(ie_adic_orcamento,'N') = 'N'
	and (coalesce(ie_retorno,'N') = 'P')
	and	ie_primeiro_atend_w	= 'S'
	and	((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> '') or (nr_seq_exame IS NOT NULL AND nr_seq_exame::text <> ''))
	and	((nr_anos_w = 999) or (nr_anos_w between coalesce(qt_ano_min,0) and coalesce(qt_ano_max,999)))
	and	qt_reg_w = 0;

-- OS 298426 Fabricio em 11/04/2011
c03 CURSOR FOR
	SELECT	substr(vl_dominio,1,3)
	from	valor_dominio_v
	where	cd_dominio	= 4159
	and 	nr_seq_evento_p = 36
	order by somente_numero(substr(vl_dominio,1,3));

c04 CURSOR FOR
SELECT	coalesce(ie_excluir_conta, 'N')
from		proc_interno_conv
where		(((cd_setor_atendimento = coalesce(cd_setor_atendimento_w,0) and coalesce(ie_tipo_setor,'P') = 'P') or (cd_setor_atendimento = coalesce(cd_setor_atendimento_proc_w,0) and coalesce(ie_tipo_setor,'P') = 'L')) or (coalesce(cd_setor_atendimento::text, '') = ''))
and		((cd_estabelecimento   = coalesce(cd_estabelecimento_w, wheb_usuario_pck.get_cd_estabelecimento)) or (coalesce(cd_estabelecimento::text, '') = ''))
and (coalesce(cd_categoria,coalesce(cd_categoria_w,'0')) =  coalesce(cd_categoria_w,'0'))
and (coalesce(cd_tipo_acomodacao,coalesce(coalesce(cd_tipo_acomod_conv_w, cd_tipo_acomodacao_w),0)) =  coalesce(coalesce(cd_tipo_acomod_conv_w, cd_tipo_acomodacao_w),0))
and (cd_edicao_amb		= cd_edicao_amb_w or coalesce(cd_edicao_amb::text, '') = '')
and		((ie_origem_proc_filtro = ie_origem_propaci_w) or (coalesce(ie_origem_proc_filtro::text, '') = ''))
and		((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
and (ie_tipo_atendimento	= ie_tipo_atendimento_w or coalesce(ie_tipo_atendimento::text, '') = '')
and		clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_final_vigencia, clock_timestamp())
and		cd_procedimento = cd_proced_prescrito_w
and		nr_seq_proc_interno	= nr_seq_proc_interno_w
and		coalesce(ie_situacao,'A') = 'A'
order by
	coalesce(cd_edicao_amb,0),
	coalesce(cd_convenio,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(cd_setor_atendimento,0),
	coalesce(cd_estabelecimento,0),
	coalesce(ie_tipo_setor,'P'),
	coalesce(cd_categoria,'0'),
	coalesce(cd_tipo_acomodacao,0);

c05 CURSOR FOR
	SELECT	nr_interno_conta,
		cd_convenio_parametro,
		cd_categoria_parametro
	from	conta_paciente
	where	nr_atendimento	= nr_atendimento_p;

c06 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pf_equipe_partic b,
		pf_equipe a
	where	a.nr_sequencia = b.nr_seq_equipe
	and	((a.cd_pessoa_fisica = cd_medico_executor_w) or (b.cd_pessoa_fisica = cd_medico_executor_w));
	
c07 CURSOR FOR
	SELECT cd_especialidade
	from   medico_especialidade
	where  cd_pessoa_fisica	= cd_medico_executor_w
	and    nr_seq_prioridade in (	SELECT min(x.nr_seq_prioridade) 
					from medico_especialidade x 
					where x.cd_pessoa_fisica = cd_medico_executor_w);

	

BEGIN

										
									 
						 
						 
												
										   

											  
						   
														  
			
										 
   
  
																							

								 
						 
														
										 
									   
 

																						  
				
									   
																	  
											 


					
				
									   
																	  
											 

							 
																
		   
		 

select	coalesce(max(ie_vincula_cirur_lanc),'N'),
	coalesce(max(ie_vincula_cirur_lanc_mat),'N'),
	coalesce(max(ie_atualiza_kit),'N'),
	coalesce(max(ie_dia_internacao_rla),'N'),
	coalesce(max(ie_especial_proc_exec),'N'),
	coalesce(max(ie_gerar_pacote_alta),'N'),
	coalesce(max(ie_data_agenda_rla),'N'),
	coalesce(max(cd_motivo_exc_conta),12)
into STRICT	ie_vincula_cirur_lanc_w,
	ie_vincula_cirur_lanc_mat_w,
	ie_atualiza_kit_w,
	ie_dia_internacao_rla_w,
	ie_especial_proc_exec_w,
	ie_gerar_pacote_alta_w,
	ie_data_agenda_rla_w,
	cd_motivo_exc_conta_w
from	parametro_faturamento
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (nr_seq_evento_p = 192) then
	select	coalesce(max(ds_dia_ciclo),'0')
	into STRICT	ds_dia_ciclo_ww
	from	paciente_atendimento
	where	nr_atendimento = nr_atendimento_p;

end if;

if (nr_seq_evento_p = 472) then
	select	max(dt_entrada_local),
		max(dt_saida_local)
	into STRICT	dt_entrada_local_w,
		dt_saida_local_w
	from	historico_localizacao_pa
	where	nr_sequencia	= somente_numero(ds_adicional_1_p);
end if;

nr_seq_classif_medico_w:= 0;
begin
select 	coalesce(max(nr_seq_classif_medico),0),
	CASE WHEN ie_dia_internacao_rla_w='S' THEN  trunc(max(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_alta, clock_timestamp())) - ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada)))  ELSE trunc(max(coalesce(dt_alta, clock_timestamp()) - dt_entrada)) END  qt_dias_internacao,
	coalesce(max(ie_tipo_atend_tiss),'0'),
	coalesce(max(nr_seq_queixa),0),
	coalesce(max(nr_seq_triagem),0),
	coalesce(max(nr_seq_forma_laudo),0)
into STRICT	nr_seq_classif_medico_w,
	qt_dias_internacao_w,
	ie_tipo_atend_tiss_w,
	nr_seq_queixa_w,
	nr_seq_triagem_w,
	nr_seq_forma_laudo_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;
exception
	when others then
	nr_seq_classif_medico_w := 0;
	qt_dias_internacao_w	:= 0;
	nr_seq_queixa_w			:= 0;
	nr_seq_triagem_w		:= 0;	
	nr_seq_forma_laudo_w	:= 0;
end;

																	

if (nr_seq_evento_p = 589) and
   ((coalesce(nr_seq_triagem_w::text, '') = '') or (nr_seq_triagem_w = 0)) then
   nr_seq_triagem_w := somente_numero(ds_adicional_4_p);
end if;

cd_doenca_w:= '0';
if (nr_seq_evento_p = 34) then
	begin

	select 	count(*)
	into STRICT	qt_regra_cid_w
	from 	regra_lanc_automatico
	where 	nr_seq_evento = 34
	and 	coalesce(ie_situacao,'I') = 'A'
	and 	(cd_doenca IS NOT NULL AND cd_doenca::text <> '');

	if (qt_regra_cid_w > 0) then
		cd_doenca_w:= obter_cid_atendimento(nr_atendimento_p, 'P');
	end if;

	exception
		when others then
		cd_doenca_w:= '0';
	end;
end if;

delete from regra_lanc_aut_mat_consist
where nr_atendimento = nr_atendimento_p;

cd_tipo_recomendacao_w		:= -1;
cd_dieta_w			:= -1;
ie_video_w			:= 'X';

ie_medico_profissional_w 	:= obter_valor_param_usuario(281,519,obter_perfil_ativo,nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_utiliza_regra_uso_w		:= obter_valor_param_usuario(281,631,obter_perfil_ativo,nm_usuario_p,0);
ie_tipo_anest_gera_lancto_w	:= obter_valor_param_usuario(900,242,obter_perfil_ativo,nm_usuario_p,0);
ie_usar_medico_cirurgiao_w	:= obter_valor_param_usuario(900,381,obter_perfil_ativo,nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_gravar_setor_cirurgia_w	:= obter_valor_param_usuario(900,396,obter_perfil_ativo,nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);

																			

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 30) then
	cd_tipo_recomendacao_w		:= coalesce(somente_numero(ds_adicional_1_p),0);
	if (coalesce(somente_numero(ds_adicional_4_p),0) > 0) then
		select 	max(dt_prescricao),
			max(nm_usuario_original)
		into STRICT	dt_execucao_w,
			nm_usuario_orig_prescr_w
		from 	prescr_medica
		where 	nr_prescricao = coalesce(somente_numero(ds_adicional_4_p),0);

		select	coalesce(max(ie_tipo_evolucao),'0')
		into STRICT	ie_tipo_evolucao_w
		from 	usuario
		where	nm_usuario = nm_usuario_orig_prescr_w;
	end if;
end if;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 533) then
	if (coalesce(somente_numero(ds_adicional_1_p),0) > 0) then
		select 	max(coalesce(dt_liberacao, dt_liberacao_medico))
		into STRICT	dt_execucao_w
		from 	prescr_medica
		where 	nr_prescricao = coalesce(somente_numero(ds_adicional_1_p),0);
	end if;
end if;

if (nr_seq_evento_p	= 372) and (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') then
	ie_escala_pep_w	:= ds_adicional_1_p;
end if;

if (nr_seq_evento_p	= 381) and (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') then
	nr_seq_tipo_pg_w	:= coalesce(somente_numero(ds_adicional_1_p),0);
end if;
if (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') and (nr_seq_evento_p = 30) then
	cd_dieta_w			:= coalesce(somente_numero(ds_adicional_2_p),0);
	if (coalesce(somente_numero(ds_adicional_4_p),0) > 0) then
		select 	max(dt_prescricao),
			max(cd_medico),
			max(nm_usuario_original)
		into STRICT	dt_execucao_w,
			cd_medico_prescr_w,
			nm_usuario_orig_prescr_w
		from 	prescr_medica
		where 	nr_prescricao = coalesce(somente_numero(ds_adicional_4_p),0);

		select	coalesce(max(ie_tipo_evolucao),'0')
		into STRICT	ie_tipo_evolucao_w
		from 	usuario
		where	nm_usuario = nm_usuario_orig_prescr_w;
	end if;
end if;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p	= 232) then
	nr_seq_reg_template_w	:= ds_adicional_1_p;
elsif (nr_seq_evento_p = 583) or (nr_seq_evento_p = 621) then
	if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') then
		nr_seq_reg_template_w	:= ds_adicional_1_p;
	end if;
	if (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') then
		nr_seq_template_w := ds_adicional_2_p;
	end if;
end if;


if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 532) then
	nr_seq_proc_w	:= somente_numero(ds_adicional_1_p);
end if;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 291) then
	select	coalesce(max(cd_refeicao),'0'),
		coalesce(max(dt_liberacao),clock_timestamp()),
		max(ie_destino_dieta)
	into STRICT	cd_refeicao_w,
		dt_liberacao_dieta_w,
		ie_destino_dieta_w
	from	mapa_dieta
	where	nr_sequencia = coalesce(somente_numero(ds_adicional_1_p),0);

	select	count(*)
	into STRICT	qt_liberar_dieta_w
	from	atend_categoria_convenio
	where	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_p)
	and	((ie_lib_dieta IS NOT NULL AND ie_lib_dieta::text <> '') or (coalesce(qt_dieta_acomp,0) <> 0));

end if;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 590) then

	select 	max(NR_SEQ_SERVICO),
		coalesce(max(dt_liberacao), clock_timestamp())
	into STRICT 	nr_seq_servico_w,
		dt_liberacao_dieta_nut_w
	from 	nut_atend_serv_dia
	where	nr_sequencia = coalesce(somente_numero(ds_adicional_1_p),0);	

end if;

if (nr_seq_evento_p = 26) then

	select	count(*)
	into STRICT	qt_liberar_dieta_w
	from	atend_categoria_convenio
	where	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_p)
	and	((ie_lib_dieta IS NOT NULL AND ie_lib_dieta::text <> '') or (coalesce(qt_dieta_acomp,0) <> 0));
	
	
	select	count(*)
	into STRICT	qt_regra_w
	from	regra_lanc_automatico
	where	(ie_regra_qtd_atend IS NOT NULL AND ie_regra_qtd_atend::text <> '')
	and	nr_seq_tipo_admissao_fat > 0;


	if (qt_regra_w > 0) then
		select	max(a.nr_sequencia),
			max(b.nr_seq_tipo_admissao_fat)
		into STRICT	nr_episodio_w,
			nr_seq_tipo_admissao_fat_w
		from	episodio_paciente a,
			atendimento_paciente b
		where	b.nr_seq_episodio 	= a.nr_sequencia
		and	b.nr_atendimento 	= nr_atendimento_p;

		select 	count(*)
		into STRICT	qt_atend_ep_w
		from	atendimento_paciente a
		where	a.nr_seq_episodio = nr_episodio_w
		and	coalesce(a.nr_seq_tipo_admissao_fat,0) = coalesce(nr_seq_tipo_admissao_fat_w,0);
	
		select 	count(*)
		into STRICT	qt_atend_ano_w
		from	atendimento_paciente a
		where	a.nr_seq_episodio = nr_episodio_w
		and	coalesce(a.nr_seq_tipo_admissao_fat,0) = coalesce(nr_seq_tipo_admissao_fat_w,0)
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(a.dt_entrada) = ESTABLISHMENT_TIMEZONE_UTILS.startOfYear(clock_timestamp());
	end if;
	


end if;

if (nr_seq_evento_p	= 332) then


	select	coalesce(max(nr_seq_conjunto),0)
	into STRICT	nr_seq_conjunto_w
	from	cm_conjunto_cont
	where	nr_sequencia	= ds_adicional_1_p
	and	coalesce(ie_situacao,'A') = 'A';

end if;

nr_seq_tipo_servico_w:= 0;

if (nr_seq_evento_p	= 391) then
	nr_seq_tipo_servico_w	:= coalesce(somente_numero(ds_adicional_1_p),0);
end if;

if (nr_seq_evento_p	in (401,412,431)) then
	nm_tabela_w	:= coalesce(ds_adicional_1_p,'XPTO');
	nm_atributo_w	:= coalesce(ds_adicional_2_p,'XPTO');
	dt_execucao_w	:= clock_timestamp();
	
	if (ds_adicional_3_p IS NOT NULL AND ds_adicional_3_p::text <> '') and
		((substr(nm_atributo_w,1,3)	= 'QT_') or (substr(nm_atributo_w,1,3)	= 'VL_'))  then
		
		begin
			qt_procedimento_w	:= (ds_adicional_3_p)::numeric;

		exception
		when others then
			qt_procedimento_w	:= 1;
		end;
		
		
	end if;	
	
end if;
nr_seq_teste_vacina_w	:= 0;
if (nr_seq_evento_p	 = 481) then
	nr_seq_teste_vacina_w	:= somente_numero(ds_adicional_1_p);
	begin
	dt_execucao_w		:= to_date(ds_adicional_2_p,'dd/mm/yyyy hh24:mi:ss');
	exception
		when others then
			dt_execucao_w	:= clock_timestamp();
	end;
end if;

if (nr_seq_evento_p in (539,586)) then

																	

	select	max(cd_agenda),
		max(dt_agenda),
		max(ie_origem_proced),
		max(cd_procedimento),
		max(nr_seq_proc_interno),
		max(cd_medico),
		max(cd_especialidade)
	into STRICT	cd_agenda_w,
		dt_agenda_w,
		ie_origem_propaci_w,
		cd_proc_propaci_w,
		nr_seq_proc_interno_w,
		cd_medico_exec_prescr_w,
		cd_especialidade_agendamento_w
	from	agenda_consulta
	where	nr_sequencia	= nr_sequencia_p;

        select 	max(a.CD_ESPECIALIDADE),
          max(a.cd_tipo_agenda)
        into STRICT 	cd_especialidade_age_cons_w,
          cd_tipo_agenda_w
        from 	AGENDA a
        where 	a.cd_agenda = cd_agenda_w;
																																
	if (ie_data_agenda_rla_w = 'S') then

		dt_execucao_w:=  dt_agenda_w;

		if (dt_agenda_w < dt_entrada_unidade_w) then

			dt_execucao_w:= dt_entrada_unidade_w;

		end if;

	end if;

	if (coalesce(cd_proc_propaci_w,0) > 0) and (coalesce(ie_origem_propaci_w,0) > 0)then

		begin
	
																
	
		select	b.cd_area_procedimento,
			b.cd_especialidade,
			b.cd_grupo_proc,
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, b.ie_origem_proced, 'C', 'F'),'F'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, b.ie_origem_proced, 'C', 'G'),'G'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, b.ie_origem_proced, 'C', 'S'),'S'),1,10),0)
		into STRICT	cd_area_proc_w,
			cd_especial_proc_w,
			cd_grupo_proc_w,
			nr_seq_forma_org_w,
			nr_seq_grupo_w,
			nr_seq_subgrupo_w
		from	estrutura_procedimento_v b
		where	b.cd_procedimento	= cd_proc_propaci_w
		and	b.ie_origem_proced	= ie_origem_propaci_w;
		exception
			when others then
			cd_proc_propaci_w	:=	null;
			ie_origem_propaci_w	:= 	null;
			cd_area_proc_w		:=	null;
			cd_especial_proc_w	:=	null;
			cd_grupo_proc_w		:= 	null;
			nr_seq_proc_interno_w	:= 	null;
		end;

	end if;

end if;

IF (nr_seq_evento_p = 606) THEN
    SELECT MAX(a.dt_servico)
    INTO STRICT dt_servico_atend_w
    FROM nut_atend_serv_dia a,
         nut_atend_acompanhante b
    WHERE b.nr_sequencia = ds_adicional_1_p
      AND a.nr_sequencia = b.nr_seq_atend_serv_dia;
END IF;

nr_seq_propaci_w	:= nr_sequencia_p;

if (nr_seq_evento_p = 241) then -- No evento Liberar anamnese, vem a sequencia da Anamnese, e nao do procedimento.
	nr_seq_propaci_w	:= 0;
end if;

nr_seq_regra_w		:= 0;
cd_tipo_acomodacao_w	:= null;
cd_tipo_acomod_conv_w	:= null;
cd_especialidade_w	:= null;
nr_cirurgia_w		:= null;
if (nr_seq_evento_p in (12, 123, 28, 321, 521,532,534,539,540,501, 545,547,548,549,550,551,576,586,589)) then -- 521 (aaheckler/Martini) - OS 404030;
															
	nr_seq_propaci_w	:= 0;
	if (nr_seq_evento_p	= 28) then

		nr_cirurgia_w	:= nr_sequencia_p;

		select	max(cd_tipo_anestesia),
			max(cd_setor_atendimento),
			max(ie_porte),
			max(dt_termino),
			max(dt_inicio_real),
			max(cd_medico_cirurgiao),
			max(cd_setor_atendimento),
			max(cd_medico_anestesista)
		into STRICT	cd_tipo_anestesia_w,
			cd_setor_atendimento_w,
			ie_porte_w,
			dt_fim_cirurgia_w,
			dt_inicio_cirurgia_w,
			cd_medico_cirurgiao_w,
			cd_setor_cirurgia_w,
			cd_medico_anestesista_w
		from	cirurgia
		where	nr_cirurgia	= nr_cirurgia_w;

		if (dt_fim_cirurgia_w IS NOT NULL AND dt_fim_cirurgia_w::text <> '') then  -- OS 326444
			dt_execucao_w := dt_inicio_cirurgia_w;
		end if;

		if (coalesce(ie_tipo_anest_gera_lancto_w,'S') = 'N') and -- OS 225450
			(coalesce(cd_tipo_anestesia_w::text, '') = '') then
			cd_tipo_anestesia_w:= '0';
		end if;

		begin	/*inclui esse select para buscar o procedimento da cirurgia e sua estrutura , fabricio em 29/10/2008 os 114537 */
		select	a.cd_procedimento_princ,
			a.ie_origem_proced,
			b.cd_area_procedimento,
			b.cd_especialidade,
			b.cd_grupo_proc,
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, a.ie_origem_proced, 'C', 'F'),'F'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, a.ie_origem_proced, 'C', 'G'),'G'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(b.cd_procedimento, a.ie_origem_proced, 'C', 'S'),'S'),1,10),0),
			a.nr_seq_proc_interno
		into STRICT	cd_proc_propaci_w,
			ie_origem_propaci_w,
			cd_area_proc_w,
			cd_especial_proc_w,
			cd_grupo_proc_w,
			nr_seq_forma_org_w,
			nr_seq_grupo_w,
			nr_seq_subgrupo_w,
			nr_seq_proc_interno_w
		from	cirurgia a,
			estrutura_procedimento_v b
		where	a.nr_cirurgia		= nr_cirurgia_w
		and	b.cd_procedimento	= a.cd_procedimento_princ
		and	b.ie_origem_proced	= a.ie_origem_proced;
		exception
			when others then
			cd_proc_propaci_w	:=	null;
			ie_origem_propaci_w	:= 	null;
			cd_area_proc_w		:=	null;
			cd_especial_proc_w	:=	null;
			cd_grupo_proc_w		:= 	null;
			nr_seq_proc_interno_w	:= 	null;
		end;

	end if;
end if;

if (nr_seq_evento_p in (36,251)) then
	begin

	select	coalesce(max(cd_motivo_alta),0)
	into STRICT	cd_motivo_alta_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;

	end;
end if;

nr_seq_tipo_checkup_w:= 0;
if (nr_seq_evento_p = 26) then
	select 	coalesce(max(nr_seq_tipo_checkup),0)
	into STRICT	nr_seq_tipo_checkup_w
	from 	checkup
	where 	nr_atendimento = nr_atendimento_p;
end if;

if (nr_seq_evento_p in (26, 40, 36, 39, 82,192,221)) then
	CALL gerar_lanc_auto_atendimento(nr_atendimento_p, cd_local_estoque_p, nr_seq_evento_p, nm_usuario_p);
end if;

begin
select	a.ie_tipo_atendimento,
	a.nr_atend_original,
	a.cd_estabelecimento,
	b.cd_cgc,
	a.cd_setor_atendimento,
	a.cd_medico_resp,
	a.cd_convenio,
	c.ie_tipo_convenio,
	a.cd_categoria,
	a.dt_entrada_unidade,
	a.dt_entrada,
	CASE WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='N' THEN  null WHEN obter_valor_conv_estab(c.cd_convenio, b.cd_estabelecimento, 'IE_DOC_CONVENIO')='S' THEN  coalesce(a.cd_senha, a.nr_doc_convenio)  ELSE a.nr_doc_convenio END , /* edgar  06/10/2004 , os 11672 */
	a.dt_alta,
	a.nr_seq_atepacu,
	a.cd_senha,
	a.ie_clinica,
	a.cd_tipo_acomod_unid,
	a.cd_tipo_acomod_conv,
	coalesce(nr_anos,999),
	a.nr_seq_classificacao,
	coalesce(a.cd_plano_convenio,'0'),
	ie_tipo_guia,
	cd_pessoa_fisica,
	ie_carater_inter_sus,
	coalesce(cd_procedencia,0),
	coalesce(ie_paciente_isolado,'N'),
	coalesce(a.ie_sexo,'I'),
	coalesce(a.nr_seq_forma_chegada,0),
			
	nr_con_card,
	cd_con_card_type
			 
into STRICT	ie_tipo_atendimento_w,
	nr_atend_original_w,
	cd_estabelecimento_w,
	cd_cgc_w,
	cd_setor_atendimento_w,
	cd_medico_resp_w,
	cd_convenio_w,
	ie_tipo_convenio_w,
	cd_categoria_w,
	dt_entrada_unidade_w,
	dt_entrada_w,
	nr_doc_convenio_w,
	dt_alta_w,
	nr_seq_atepacu_w,
	cd_senha_w,
	ie_clinica_w,
	cd_tipo_acomodacao_w,
	cd_tipo_acomod_conv_w,
	nr_anos_w,
	nr_seq_classificacao_w,
	cd_plano_convenio_w,
	ie_tipo_guia_w,
	cd_pessoa_fisica_w,
	ie_carater_atend_w,
	cd_procedencia_w,
	ie_paciente_isolado_w,
	ie_sexo_w,
	nr_seq_forma_chegada_w,
	nr_concession_card_w,				 
	cd_concession_card_type_w					   
from 	estabelecimento b,
	convenio c,
	atendimento_paciente_v a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	c.cd_convenio		= a.cd_convenio
and	a.nr_atendimento	= nr_atendimento_p;
exception
	when others then
		cd_estabelecimento_w 	:= 9999;
		cd_procedencia_w	:= 0;
end;


if (ie_gravar_setor_cirurgia_w = 'S') and (nr_seq_evento_p = 28) then
	begin
	select	a.cd_setor_atendimento,
		a.dt_entrada_unidade,
		a.nr_seq_interno
	into STRICT	cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		nr_seq_atepacu_w
	from 	atend_paciente_unidade a
	where	a.nr_atendimento	= nr_atendimento_p
	and 	a.cd_setor_atendimento	= cd_setor_cirurgia_w
	and 	a.nr_seq_interno = (	SELECT 	max(b.nr_seq_interno)
					from  	atend_paciente_unidade b
					where	b.nr_atendimento	= nr_atendimento_p
					and 	b.cd_setor_atendimento	= cd_setor_cirurgia_w);
	exception
		when others then
			cd_setor_atendimento_w 	:= cd_setor_atendimento_w;
			dt_entrada_unidade_w	:= dt_entrada_unidade_w;
			nr_seq_atepacu_w	:= nr_seq_atepacu_w;
	end;
end if;

begin
select	count(1)
into STRICT	qt_reg_ibge_w
from	regra_lanc_automatico
where	nr_seq_evento = nr_seq_evento_p
and	(cd_municipio_ibge IS NOT NULL AND cd_municipio_ibge::text <> '')  LIMIT 1;
exception
when others then
	qt_reg_ibge_w := 0;
end;

																												

if (qt_reg_ibge_w > 0) then
	begin

	begin
	select	coalesce(max(c.cd_municipio_ibge),'X')
	into STRICT	cd_municipio_ibge_w
	from	pessoa_fisica b,
		compl_pessoa_fisica c
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	c.ie_tipo_complemento	= 1;
	 exception
	when others then
		cd_municipio_ibge_w := 'X';
	end;

	end;
end if;

begin
select	max(obter_idade(b.dt_nascimento,coalesce(b.dt_obito,clock_timestamp()),'DIA')),
	coalesce(max(b.ie_dependente),'N')
into STRICT	qt_idade_w,
	ie_dependente_w
from	pessoa_fisica b
where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w;
exception
when others then
	qt_idade_w	:= 0;
	ie_dependente_w	:= 'N';
end;

if (nr_seq_evento_p = 26 ) then

	begin
	select	coalesce(max(ie_funcionario),'N')
	into STRICT	ie_funcionario_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_medico_resp_w;
	exception
	when others then
		ie_funcionario_w	:= 'A';
	end;

end if;

select 	max(cd_medico_referido)
into STRICT	cd_medico_referido_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

if (nr_seq_evento_p = 36) then

	begin
	select 	coalesce(max(ie_lancto_auto_dt_alta),'N')
	into STRICT	ie_lancto_auto_dt_alta_w
	from 	convenio_estabelecimento
	where 	cd_convenio = cd_convenio_w
	and 	cd_estabelecimento = cd_estabelecimento_w;
	exception
	when others then
		ie_lancto_auto_dt_alta_w := 'N';
	end;

	if (ie_lancto_auto_dt_alta_w = 'S') then
		dt_execucao_w:= dt_alta_w;
	end if;

end if;

select	count(*)
into STRICT	qt_atend_w
from	atendimento_paciente
where	cd_pessoa_fisica	= cd_pessoa_fisica_w
and	nr_atendimento		<> nr_atendimento_p;

if (qt_atend_w	= 0) then
	ie_primeiro_atend_w	:= 'S';
else
	ie_primeiro_atend_w	:= 'N';
end if;

begin
select	cd_convenio_parametro,
	cd_categoria_parametro
into STRICT	cd_convenio_conta_w,
	cd_categoria_conta_w
from	conta_paciente
where	nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
		cd_convenio_conta_w 	:= cd_convenio_w;
		cd_categoria_conta_w	:= cd_categoria_w;
end;

select	max(cd_funcao_medico),
	max(ie_lanc_aut_assumir_pac),
	coalesce(max(ie_lanc_sus_setor_int),'N'),
	coalesce(max(ie_regra_uso_rla),'N')
into STRICT	ie_funcao_medico_w,
	ie_lanc_aut_assumir_pac_w,
	ie_lanc_sus_setor_int_w,
	ie_regra_uso_w
from	parametro_faturamento
where	cd_estabelecimento = cd_estabelecimento_w;

/*	entrada do paciente no setor */

qt_reg_w		:= 0;
if (nr_seq_evento_p in (30,40,41,61,533)) then /* elemar - 12/02/04 - inclui 30,41,61 */
 /*OS483460 - Incluido 533*/
	nr_seq_propaci_w	:= 0;
	nr_seq_atepacu_w	:= nr_sequencia_p;
	select	coalesce(max(cd_setor_atendimento), cd_setor_atendimento_w),
		max(dt_entrada_unidade),
		max(cd_tipo_acomodacao),
		max(cd_unidade_basica),
		max(cd_unidade_compl)
	into STRICT	cd_setor_atendimento_w,
		dt_entrada_unidade_w,
		cd_tipo_acomodacao_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w
	from	atend_paciente_unidade
	where	nr_seq_interno	= nr_sequencia_p;
	if (nr_seq_evento_p = 40) then
		select	count(*)
		into STRICT	qt_reg_w
		from	material_atend_paciente
		where	nr_seq_atepacu	= nr_sequencia_p;
		if (qt_reg_w = 0) then
			select	count(*)
			into STRICT	qt_reg_w
			from	procedimento_paciente
			where	nr_seq_atepacu	= nr_sequencia_p;
		end if;
	end if;
end if;

select	coalesce(max(ie_valida_lib_mat_local_atend),'N')
into STRICT	ie_valida_liberacao_mat_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_w;

if (coalesce(nr_seq_propaci_w,0) > 0) and (nr_seq_evento_p <> 12) and (nr_seq_evento_p <> 123) then
	begin
	/* buscar dados do procedimento executado */

																													
	begin
	select	a.cd_procedimento,
			a.ie_origem_proced,
			a.cd_medico_executor,
			a.cd_medico_req,
			a.tx_procedimento,
			b.cd_area_procedimento,
			b.cd_especialidade,
			b.cd_grupo_proc,
			a.dt_procedimento,
			a.cd_setor_atendimento,
			a.qt_porte_anestesico,
			a.dt_procedimento,
			a.qt_procedimento,
			coalesce(a.nr_seq_exame,0),
			coalesce(a.nr_seq_proc_interno,0),
			a.cd_senha,
			a.nr_doc_convenio,
			a.nr_prescricao,
			a.nr_sequencia_prescricao,
			a.cd_especialidade,
			a.nr_interno_conta,
			a.ie_integracao,
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(a.cd_procedimento, a.ie_origem_proced, 'C', 'F'),'F'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(a.cd_procedimento, a.ie_origem_proced, 'C', 'G'),'G'),1,10),0),
			coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(a.cd_procedimento, a.ie_origem_proced, 'C', 'S'),'S'),1,10),0),
			a.nr_seq_exame,
			coalesce(ie_video, 'X'),
			nr_seq_atepacu,
			cd_setor_atendimento,
			dt_entrada_unidade,
			a.nr_cirurgia,
			a.ie_funcao_medico
	into STRICT		cd_proc_propaci_w,
			ie_origem_propaci_w,
			cd_medico_propaci_w,
			cd_medico_req_w,
			tx_proc_propaci_w,
			cd_area_proc_w,
			cd_especial_proc_w,
			cd_grupo_proc_w,
			dt_execucao_w,
			cd_setor_atendimento_w,
			qt_porte_anestesico_w,
			dt_proc_propaci_w,
			qt_procedimento_w,
			nr_seq_exame_propaci_w,
			nr_seq_proc_interno_w,
			cd_senha_w,
			nr_doc_propaci_w,
			nr_prescricao_w,
			nr_sequencia_prescricao_w,
			cd_especialidade_w,
			nr_interno_conta_w,
			ie_integracao_w,
			nr_seq_forma_org_w,
			nr_seq_grupo_w,
			nr_seq_subgrupo_w,
			nr_seq_exame_proc_w,
			ie_video_w,
			nr_seq_atepacu_proc_w,
			cd_setor_atendimento_proc_w,
			dt_entrada_unidade_proc_w,
			nr_cirurgia_propaci_w,
			ie_funcao_medico_proc_w
	from		procedimento_paciente a,
			estrutura_procedimento_v b
	where		a.nr_sequencia		= nr_seq_propaci_w
	and		b.cd_procedimento	= a.cd_procedimento
	and		b.ie_origem_proced	= a.ie_origem_proced;
	exception
			when others then
			cd_proc_propaci_w := null;
	end;

																																

	if (coalesce(nr_prescricao_w,0) > 0)  and (coalesce(nr_sequencia_prescricao_w,0) > 0) then
		ie_executar_leito_w := consiste_se_beira_leito(nr_prescricao_w, nr_sequencia_prescricao_w, nm_usuario_p, ie_executar_leito_w);
	end if;
	
	select		coalesce(max(nm_usuario_banco), 'XXX')
	into STRICT		nm_usuario_banco_w
	from		setor_atendimento
	where		cd_setor_atendimento	= cd_setor_atendimento_proc_w;

	select		max(cd_medico)
	into STRICT		cd_medico_prescr_w
	from		prescr_medica
	where		nr_prescricao	= nr_prescricao_w;

	select		coalesce(max(obter_funcao_ativa),0)
	into STRICT		cd_funcao_w
	;

	ie_lado_w	:= 'X';

	if (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') and (nr_seq_evento_p	= 34) then
		cd_material_exame_w	:= ds_adicional_2_p;
	end if;

	if (nr_seq_evento_p	= 34) and (ds_adicional_4_p IS NOT NULL AND ds_adicional_4_p::text <> '') and (ds_adicional_4_p	in ('D','E','A')) then
		ie_lado_w		:= ds_adicional_4_p;
	elsif (cd_funcao_w <> 722) and (coalesce(nr_seq_exame_proc_w::text, '') = '') then

																	  

		select		coalesce(max(nr_sequencia),0),
				coalesce(max(ie_lado), 'Z')
		into STRICT		nr_seq_w,
				ie_lado_w
		from 		prescr_procedimento
		where		nr_prescricao		= nr_prescricao_w
		and		nr_sequencia		= nr_sequencia_prescricao_w;

		if (nr_seq_w	= 0) then
			ie_lado_w	:= 'X';
		end if;
	end if;

	end;
end if;

if (nr_seq_evento_p = 557) and (coalesce(nr_seq_propaci_w,0) <> 0)then
	select  max(b.cd_setor_atendimento)
	into STRICT	cd_setor_atendimento_w
	from	procedimento_paciente a,
			prescr_medica b,
			prescr_procedimento c
	where	a.nr_prescricao = c.nr_prescricao
	and		a.nr_sequencia_prescricao = c.nr_sequencia
	and		b.nr_prescricao = c.nr_prescricao
	and		a.nr_sequencia = nr_seq_propaci_w;
end if;

if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 30) then
	begin
	select	count(*)
	into STRICT	qt_procedimento_w
	from	prescr_rec_hor
	where	nr_prescricao	= somente_numero(ds_adicional_4_p)
	and	cd_recomendacao = cd_tipo_recomendacao_w
	and	obter_se_horario_liberado(dt_lib_horario, dt_horario) = 'S'
	having count(*)	> 0;

	exception
	when others then
		qt_procedimento_w	:= 1;
	end;
end if;

/* obter feriado */

begin
select 	'S'
into STRICT 	dia_feriado_w
from 	feriado
where 	cd_estabelecimento 			= cd_estabelecimento_w
and 	to_char(dt_feriado,'dd/mm/yyyy')  	= to_char(coalesce(dt_execucao_w, clock_timestamp()),'dd/mm/yyyy');
exception
            when others then
		dia_feriado_w	:= 'N';
end;

dia_semana_w 		:= pkg_date_utils.get_WeekDay(coalesce(dt_execucao_w, clock_timestamp()));
nr_prescr_gatilho_w 	:= null;
nr_seq_prescr_gatilho_w := null;
if (nr_seq_evento_p = 30) and (coalesce(somente_numero(ds_adicional_3_p),0) > 0) and (coalesce(somente_numero(ds_adicional_4_p),0) > 0) then
	begin

	select	a.cd_procedimento,
		a.ie_origem_proced,
		b.cd_area_procedimento,
		b.cd_especialidade,
		b.cd_grupo_proc,
		coalesce(a.nr_seq_proc_interno,0),
		a.qt_procedimento,
		coalesce(a.nr_seq_exame,0),
		a.cd_medico_exec
	into STRICT	cd_proc_propaci_w,
		ie_origem_propaci_w,
		cd_area_proc_w,
		cd_especial_proc_w,
		cd_grupo_proc_w,
		nr_seq_proc_interno_w,
		qt_procedimento_w,
		nr_seq_exame_propaci_w,
		cd_medico_exec_prescr_w
	from	prescr_procedimento a,
		estrutura_procedimento_v b
	where	a.nr_sequencia		= coalesce(somente_numero(ds_adicional_4_p),0)
	and	a.nr_prescricao		= coalesce(somente_numero(ds_adicional_3_p),0)
	and	b.cd_procedimento	= a.cd_procedimento
	and	b.ie_origem_proced	= a.ie_origem_proced;
	
	if (coalesce(cd_proc_propaci_w,0) > 0) then
		nr_prescr_gatilho_w 	:= somente_numero(ds_adicional_3_p);
		nr_seq_prescr_gatilho_w := somente_numero(ds_adicional_4_p);
	end if;

	select 	max(nm_usuario_original)
	into STRICT	nm_usuario_orig_prescr_w
	from 	prescr_medica
	where 	nr_prescricao = coalesce(somente_numero(ds_adicional_3_p),0);

	select	coalesce(max(ie_tipo_evolucao),'0')
	into STRICT	ie_tipo_evolucao_w
	from 	usuario
	where	nm_usuario = nm_usuario_orig_prescr_w;

	end;
end if;

nr_prescr_w := 0;
if (nr_seq_evento_p = 30) and (coalesce(somente_numero(ds_adicional_3_p),0) > 0) then
	nr_prescr_w:= somente_numero(ds_adicional_3_p);
	select 	max(dt_prescricao),
		max(nm_usuario_original)
	into STRICT	dt_execucao_w,
		nm_usuario_orig_prescr_w
	from 	prescr_medica
	where 	nr_prescricao = nr_prescr_w;

	select	coalesce(max(ie_tipo_evolucao),'0')
	into STRICT	ie_tipo_evolucao_w
	from 	usuario
	where	nm_usuario = nm_usuario_orig_prescr_w;
end if;

if (nr_seq_evento_p = 34) then
	begin
	select	max(ie_porte)
	into STRICT	ie_porte_w
	from	cirurgia
	where	nr_cirurgia	= ds_adicional_4_p;

	select	max(b.cd_tipo_anestesia)
	into STRICT	cd_tipo_anestesia_w
	from	cirurgia		b,
		procedimento_paciente	a
	where	a.nr_cirurgia		= b.nr_cirurgia
	and	a.nr_atendimento	= nr_atendimento_p
	and	a.cd_procedimento	= cd_proc_propaci_w
	and	a.ie_origem_proced	= ie_origem_propaci_w;
	exception
	when others then
		cd_tipo_anestesia_w	:= null;
	end;
end if;
if (nr_seq_evento_p	= 39) and (ds_adicional_4_p IS NOT NULL AND ds_adicional_4_p::text <> '') then
	dt_execucao_w		:= to_date(ds_adicional_4_p,'dd/mm/yyyy hh24:mi:ss');
	RAISE NOTICE '%', PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_execucao_w, '', ESTABLISHMENT_TIMEZONE_UTILS.getTimeZone);
end if;

if (nr_seq_evento_p = 192)	or (nr_seq_evento_p = 221)	or (nr_seq_evento_p = 332)	or (nr_seq_evento_p = 353)	or (nr_seq_evento_p = 461)	or (nr_seq_evento_p = 492)	or (nr_seq_evento_p = 531) or (nr_seq_evento_p = 532) or (nr_seq_evento_p = 544) or (nr_seq_evento_p = 545) or (nr_seq_evento_p = 559) or (nr_seq_evento_p = 565) or (nr_seq_evento_p = 566) or (nr_seq_evento_p = 567) or (nr_seq_evento_p = 568) or (nr_seq_evento_p = 569) or (nr_seq_evento_p = 570) or (nr_seq_evento_p = 583) or (nr_seq_evento_p = 621) or (nr_seq_evento_p = 606)	or (nr_seq_evento_p = 623) then
	dt_execucao_w	:= clock_timestamp();
end if;

dt_execucao_w := coalesce(dt_execucao_w, dt_entrada_unidade_w); /* elemar 17/09/2002 - gerar lancamento na entrada do paciente  */
if (nr_seq_evento_p = 241) then
	begin
		select 	coalesce(max(ie_considera_dt_entrada_anam),'S')
		into STRICT	ie_considera_dt_entrada_anam_w
		from 	convenio_estabelecimento
		where 	cd_convenio = cd_convenio_w
		and 	cd_estabelecimento = cd_estabelecimento_w;
	exception
	when others then
		ie_considera_dt_entrada_anam_w := 'S';
	end;

	if (ie_considera_dt_entrada_anam_w = 'N') then		
		begin
			select	dt_liberacao
			into STRICT	dt_execucao_w
			from	anamnese_paciente
			where 	nr_sequencia = nr_sequencia_p;
		exception
		when others then
			dt_execucao_w := dt_entrada_w;
		end;		
	end if;
end if;

if (nr_seq_evento_p = 82)  then
	begin
	dt_execucao_w	:= dt_entrada_unidade_w;

	select	obter_atepacu_paciente(nr_atendimento_p, 'P')
	into STRICT	nr_seq_atepacu_intern_w
	;

	select	dt_entrada_unidade
	into STRICT	dt_entrada_unidade_intern_w
	from	atend_paciente_unidade
	where 	nr_seq_interno	= nr_seq_atepacu_intern_w;
	exception
	when others then
		--'Nao foi localizado setor para o atendimento: ' || nr_atendimento_p
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183004,'NR_ATENDIMENTO='||nr_atendimento_p);
	end;
end if;

cd_medico_equipe_w:= null;
if (nr_seq_evento_p = 123) then

	select	max(dt_liberacao),
		coalesce(max(ie_evolucao_clinica),'XPTO'),
		max(cd_medico_parecer),
		max(ie_tipo_evolucao),
		max(cd_evolucao),
		max(cd_medico),
		max(cd_especialidade_medico)
	into STRICT	dt_execucao_w,
		ie_evolucao_clinica_w,
		cd_medico_parecer_w,
		ie_tipo_evolucao_w,
		cd_evolucao_w,
		cd_medico_espec_w,
		cd_espec_evol_medico_w
	from	evolucao_paciente
	where	cd_evolucao	= nr_sequencia_p;
	
	select coalesce(max(nr_seq_classif_medico),nr_seq_classif_medico_w)
	into STRICT nr_seq_classif_medico_w
	from evolucao_paciente_compl
	where nr_seq_evo_paciente = nr_sequencia_p;
	
	begin
	select 	coalesce(max(ie_considera_dt_entrada),'N')
	into STRICT	ie_considera_dt_entrada_w
	from 	convenio_estabelecimento
	where 	cd_convenio = cd_convenio_w
	and 	cd_estabelecimento = cd_estabelecimento_w;
	exception
	when others then
		ie_considera_dt_entrada_w := 'N';
	end;

	if (ie_considera_dt_entrada_w = 'S') then
		dt_execucao_w := dt_entrada_w;
	end if;
	
	begin
	select 	count(*)
	into STRICT	qt_medico_w
	from 	medico
	where 	cd_pessoa_fisica = cd_medico_parecer_w;
	exception
	when others then
		qt_medico_w:= 0;
	end;

	if (qt_medico_w = 0) then
		cd_medico_parecer_w:= substr(ds_adicional_1_p,1,10);
	end if;

	cd_medico_equipe_w:= substr(ds_adicional_1_p,1,10);

end if;

if (nr_seq_evento_p = 39) then  -- Calcular diaria
	cd_medico_equipe_w:= cd_medico_resp_w;
end if;

if (nr_seq_evento_p = 321) then
	dt_execucao_w		:= to_date(ds_adicional_3_p, 'dd/mm/yyyy hh24:mi:ss');
end if;

if (nr_seq_evento_p = 12) then
	dt_execucao_w		:= to_date(ds_adicional_2_p,'dd/mm/yyyy hh24:mi:ss');
	ie_evolucao_clinica_w	:= ds_adicional_3_p;
	cd_medico_parecer_w	:= substr(ds_adicional_4_p,1,10);

	begin
	select 	count(*)
	into STRICT	qt_medico_w
	from 	medico
	where 	cd_pessoa_fisica = cd_medico_parecer_w;
	exception
	when others then
		qt_medico_w:= 0;
	end;

	if (qt_medico_w = 0) then
		cd_medico_parecer_w:= substr(ds_adicional_1_p,1,10);
	end if;

	begin

	select	coalesce(max(ie_tipo_evolucao),'0')
	into STRICT	ie_tipo_evolucao_w
	from 	usuario
	where	nm_usuario = nm_usuario_p;

	exception
	when others then
		ie_tipo_evolucao_w:= '0';
	end;

end if;

if (nr_seq_evento_p = 545) then

	select	coalesce(max(cd_pessoa_fisica),'0')
	into STRICT	cd_medico_evol_ferida_cur_w
	from	usuario
	where 	nm_usuario = nm_usuario_p;

	ie_evolucao_clinica_w	:= ds_adicional_2_p;

end if;


if (nr_seq_evento_p	= 521) then
	select	coalesce(max(nr_seq_tipo_atend),0),
			max(cd_profissional)
	into STRICT	nr_seq_tipo_atend_w,
			cd_medico_ambulat_w
	from	atendimento_ambulatorial
	where	nr_sequencia	= nr_sequencia_p;

end if;


select	coalesce(max(ie_prioridade_edicao_amb), 'N')
into STRICT	ie_prioridade_edicao_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_w;

select 	count(*)
into STRICT	qt_regra_edicao_w
from 	regra_lanc_automatico
where 	nr_seq_evento = 34
and 	ie_situacao = 'A'
and 	cd_estabelecimento = cd_estabelecimento_w
and 	((coalesce(cd_edicao_amb,0) > 0) or (coalesce(ie_origem_edicao,0) > 0));

if (ie_prioridade_edicao_w	= 'S' ) and (nr_seq_evento_p = 34) and (qt_regra_edicao_w > 0) then
	begin
	SELECT * FROM obter_edicao_proc_conv(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_execucao_w, cd_proc_propaci_w, cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w, ie_origem_propaci_w) INTO STRICT cd_edicao_amb_w, vl_ch_honorarios_w, vl_ch_custo_oper_w, vl_m2_filme_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;
	end;
else
	select	max(cd_edicao_amb)
	into STRICT	cd_edicao_amb_w
	from	convenio_amb
	where (cd_estabelecimento	= cd_estabelecimento_w)
	  and (cd_convenio		= cd_convenio_w)
	  and (cd_categoria		= cd_categoria_w)
	  and (coalesce(ie_situacao,'A')	= 'A')
	  and	(dt_inicio_vigencia	=
		(SELECT max(dt_inicio_vigencia)
		from	convenio_amb a
		where (a.cd_estabelecimento	= cd_estabelecimento_w)
		and (a.cd_convenio		= cd_convenio_w)
		and (a.cd_categoria		= cd_categoria_w)
		and (coalesce(a.ie_situacao,'A')	= 'A')
		and (a.dt_inicio_vigencia	<= dt_execucao_w)));
end if;

ie_origem_edicao_w:= 0;
if (coalesce(cd_edicao_amb_w,0) > 0) then
	select 	coalesce(max(ie_origem_proced),0)
	into STRICT	ie_origem_edicao_w
	from 	edicao_amb
	where 	cd_edicao_amb = cd_edicao_amb_w;
end if;


if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
	cd_medico_filtro_w    := cd_medico_propaci_w;
else
	cd_medico_filtro_w    := cd_medico_resp_w;
end if;

if (nr_seq_evento_p = 28) and (ie_usar_medico_cirurgiao_w = 'S') then
	cd_medico_filtro_w := cd_medico_cirurgiao_w;
end if;

cd_espec_medica_w:= 0;
if (nr_seq_evento_p = 321) then
	cd_medico_filtro_w := ds_adicional_2_p;
	nr_parecer_w	   := somente_numero(ds_adicional_1_p);
	if (coalesce(nr_parecer_w,0) > 0) then
		select 	coalesce(max(cd_especialidade_dest),0)
		into STRICT	cd_espec_medica_w
		from 	parecer_medico_req
		where 	nr_parecer = nr_parecer_w
		and 	nr_atendimento = nr_atendimento_p;
	end if;
end if;

if (nr_seq_evento_p = 123) then
	cd_medico_filtro_w := cd_medico_parecer_w;
	cd_espec_medica_w := cd_espec_evol_medico_w;
end if;

select	coalesce(max(obter_funcao_ativa),0)
into STRICT	cd_funcao_w
;

select 	obter_se_medico_credenciado(cd_estabelecimento_w, cd_medico_filtro_w, cd_convenio_w, null, cd_especialidade_w,
			cd_categoria_w, cd_setor_atendimento_w, cd_plano_convenio_w, null, ie_tipo_atendimento_w, ie_funcao_medico_proc_w, ie_carater_atend_w)
into STRICT	ie_credenciado_w
;

if (nr_seq_evento_p in (39,544)) then  -- Calcular diaria e Geracao diaria de itens por atendimento
	begin

	if (ds_adicional_3_p IS NOT NULL AND ds_adicional_3_p::text <> '') then
		dt_acompanhante_w	:= to_date(ds_adicional_3_p,'dd/mm/yyyy hh24:mi:ss');
	else
		dt_acompanhante_w	:= dt_execucao_w;
	end if;	
	
	begin
	select	count(1)
	into STRICT	nr_acompanhantes_w
	from	atendimento_acompanhante
	where	nr_atendimento	= nr_atendimento_p
	and to_date(dt_acompanhante_w,'dd/mm/yyyy hh24:mi:ss') between to_date(dt_acompanhante,'dd/mm/yyyy hh24:mi:ss')
	and coalesce(to_date(dt_saida,'dd/mm/yyyy hh24:mi:ss'), to_date(dt_acompanhante_w,'dd/mm/yyyy hh24:mi:ss'));
	exception
		when others then
			nr_acompanhantes_w	:= 0;
	end;

	/*SO-2220426*/

	begin
	select	count(1)
	into STRICT	nr_acompanhante_dia_w
	from	atendimento_acompanhante
	where	nr_atendimento	= nr_atendimento_p
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_acompanhante_w) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_acompanhante)
	and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_acompanhante_w) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_saida);
	exception
	when others then
		nr_acompanhante_dia_w	:= 0;
	end;		

	end;
end if;

cd_medico_espec_w:= cd_medico_resp_w;
if (nr_seq_evento_p = 12) then
	cd_medico_espec_w:= coalesce(substr(ds_adicional_1_p,1,10),cd_medico_resp_w);
end if;


if (nr_seq_evento_p	in (501,576)) then

	select	max(cd_medico),
		coalesce(max(nr_seq_tipo_avaliacao),0),
		coalesce(max(dt_avaliacao),clock_timestamp())
	into STRICT	cd_medico_aval_w,
		nr_seq_tipo_avaliacao_w,
		dt_execucao_w
	from	med_avaliacao_paciente
	where	nr_sequencia	= nr_sequencia_p;

        if (Obter_se_medico(cd_medico_aval_w, 'M') = 'S') then
	    cd_medico_espec_w := cd_medico_aval_w;
	end if;
end if;

if (nr_seq_evento_p = 536) then
	begin
	select	max(cd_procedimento_solic),
		max(coalesce(cd_medico_requisitante,cd_profis_requisitante)),
		max(coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_solic, ie_origem_proced, 'C', 'F'),'F'),1,10),0)),
		max(coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_solic, ie_origem_proced, 'C', 'G'),'G'),1,10),0)),
		max(coalesce(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento_solic, ie_origem_proced, 'C', 'S'),'S'),1,10),0))
	into STRICT	cd_proc_laudo_sus_w,
		cd_medico_filtro_w,
		nr_seq_forma_org_w,
		nr_seq_grupo_w,
		nr_seq_subgrupo_w
	from	sus_laudo_paciente
	where	nr_seq_interno = coalesce(somente_numero(ds_adicional_1_p),0);

	cd_medico_exec_item_w := cd_medico_filtro_w;
	end;
end if;

ie_data_vig_atual_w:= coalesce(obter_valor_param_usuario(905,9,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');
if (ie_data_vig_atual_w = 'N') then
	dt_atual_trunc_w := ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_execucao_w);
end if;

if (ie_tipo_convenio_w	= 3) and (nr_seq_evento_p	= 39) then
	begin

	if (coalesce(ie_lanc_sus_setor_int_w,'N') = 'S') then

		select	obter_atepacu_paciente(nr_atendimento_p, 'IA')
		into STRICT	nr_seq_atepacu_w
		;

		if (nr_seq_atepacu_w = 0) then
			nr_seq_atepacu_w := null;
		end if;
		
		if (coalesce(nr_seq_atepacu_w,0) > 0) then
			select	coalesce(max(cd_setor_atendimento),0),
				coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w),
				max(cd_unidade_basica),
				max(cd_unidade_compl)
			into STRICT	cd_setor_atendimento_w,
				dt_entrada_unidade_w,
				cd_unidade_basica_w,
				cd_unidade_compl_w			
			from	atend_paciente_unidade
			where	nr_seq_interno = nr_seq_atepacu_w;
		end if;

		dt_execucao_w	:= clock_timestamp();

	end if;

	end;
end if;

select 	count(*)
into STRICT	qt_regras_w
from 	regra_lanc_automatico
where	(ie_nivel IS NOT NULL AND ie_nivel::text <> '')
and 	coalesce(ie_situacao,'I') = 'A'
and 	nr_seq_evento = 36;

select	coalesce(max(p.cd_cargo),0)
into STRICT	cd_cargo_usuario_w
from	pessoa_fisica p,
	usuario u
where	p.cd_pessoa_fisica  	= u.cd_pessoa_fisica
and	u.nm_usuario		= nm_usuario_p;

if (qt_regras_w > 0) and (nr_seq_evento_p = 36) then

	open c03;
	loop
	fetch c03 into
		ie_nivel_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		nr_seq_regra_w		:= 0;
		cd_setor_regra_w	:= 0;
		nr_interno_conta_ww	:= 0;
		ie_vincular_proc_princ_w:= 'S';
		ie_dispara_kit_mat_w	:= 'N';
		ie_duplicar_proc_regra_w:= 'N';
		ie_setor_atual_alta_w   := 'N';

		open c01;
													
	
		loop
		fetch c01 into
			nr_sequencia_w,
			cd_setor_regra_w,
			nr_interno_conta_ww,
			ie_vincular_proc_princ_w,
			ie_dispara_kit_mat_w,
			ie_duplicar_proc_regra_w,
			ie_setor_atual_alta_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			
			if (cd_setor_regra_w IS NOT NULL AND cd_setor_regra_w::text <> '') then
				begin
				if (cd_setor_regra_w = cd_setor_atendimento_w) then
					nr_seq_regra_w	:= nr_sequencia_w;
				elsif (nr_seq_evento_p = 36) then
					begin
					if (ie_setor_atual_alta_w = 'N') then
					
						select coalesce(count(*),0)
						into STRICT qt_passagem_setor_w
						from atend_paciente_unidade
						where nr_atendimento		= nr_atendimento_p
						and cd_setor_atendimento 	= cd_setor_regra_w;
						if (qt_passagem_setor_w > 0) then
							nr_seq_regra_w	:= nr_sequencia_w;
						end if;
						
					else
					
						select	obter_atepacu_paciente(nr_atendimento_p, 'A')
						into STRICT	nr_seq_atepacu_w	
						;
						
						begin
						select	a.cd_setor_atendimento
						into STRICT	cd_setor_atend_alta_w
						from 	atend_paciente_unidade a
						where	a.nr_atendimento	= nr_atendimento_p
						and 	a.nr_seq_interno 	= nr_seq_atepacu_w;
						exception
							when others then
								cd_setor_atend_alta_w 	:= cd_setor_atend_alta_w;
						end;
						
						if (cd_setor_atend_alta_w = cd_setor_regra_w) then
							nr_seq_regra_w	:= nr_sequencia_w;
						end if;
					
					end if;
					end;
				end if;
				end;
			else
				nr_seq_regra_w	:= nr_sequencia_w;
			end if;

			if (nr_seq_evento_p = 30) and (coalesce(ds_adicional_3_p, 'XX') <> 'PRESCRICAO') then
				select	count(*)
				into STRICT	qt_regra_proc_w
				from	regra_lanc_automatico
				where	nr_seq_evento = 30
				and	coalesce(cd_area_procedimento::text, '') = ''
				and	coalesce(cd_especialidade_proc::text, '') = ''
				and	coalesce(cd_grupo_proc::text, '') = ''
				and	coalesce(cd_procedimento::text, '') = ''
				and 	coalesce(nr_seq_proc_interno::text, '') = ''
				and 	coalesce(nr_seq_exame::text, '') = ''
				and	nr_sequencia	= nr_sequencia_w;

				if (qt_regra_proc_w > 0) then
					nr_seq_regra_w	:= 0;
				end if;

				ds_texto_w := substr(wheb_mensagem_pck.get_texto(306690,'NR_SEQ_REGRA_P='|| to_char(nr_sequencia_w)),1,255); --Regra: #@NR_SEQ_REGRA_P#@
				ds_texto_ww := substr(wheb_mensagem_pck.get_texto(306695,'NR_PRESCRICAO_P='|| coalesce(somente_numero(ds_adicional_3_p),0)),1,255); --Prescr.: #@NR_PRESCRICAO_P#@
				select	count(*)
				into STRICT	qt_regra_proc_w
				from	procedimento_paciente
				where	nr_atendimento	= nr_atendimento_p
				and	ds_observacao	like '%' || ds_texto_w ||'%'|| ds_texto_ww;

				if (qt_regra_proc_w > 0) then
					nr_seq_regra_w	:= 0;
				end if;


			end if;
			end;
		end loop;
		close c01;

		i:= coalesce(vetor_regra_w.count,0) + 1;
		vetor_regra_w[i].nr_seq_regra 		:= nr_seq_regra_w;
		vetor_regra_w[i].cd_setor_regra		:= cd_setor_regra_w;
		vetor_regra_w[i].nr_interno_conta 	:= nr_interno_conta_ww;
		vetor_regra_w[i].ie_vincular_proc_princ	:= ie_vincular_proc_princ_w;
		vetor_regra_w[i].ie_dispara_kit_mat	:= ie_dispara_kit_mat_w;
		vetor_regra_w[i].ie_duplicar_proc_regra := ie_duplicar_proc_regra_w;
		vetor_regra_w[i].ie_setor_atual_alta	:= ie_setor_atual_alta_w;
		
		end;
	end loop;
	close c03;

else
	if (nr_seq_evento_p = 381) then
		if (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') then
			select coalesce(max(dt_liberacao),clock_timestamp())
			into STRICT dt_execucao_w 
			from ATENDIMENTO_PERDA_GANHO 
			where NR_SEQUENCIA = coalesce(somente_numero(ds_adicional_2_p),0) and NR_ATENDIMENTO = nr_atendimento_p;
		else
			dt_execucao_w  := coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp()));
		end if;
	end if;							

	open c01;
	loop
	fetch c01 into
		nr_sequencia_w,
		cd_setor_regra_w,
		nr_interno_conta_ww,
		ie_vincular_proc_princ_w,
		ie_dispara_kit_mat_w,
		ie_duplicar_proc_regra_w,
		ie_setor_atual_alta_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
																																		

		if (coalesce(ie_duplicar_proc_regra_w,'N') = 'S') and (nr_seq_regra_w <> 0) then

			select	coalesce(max(ie_vincular_proc_princ),'N')
			into STRICT	ie_vincular_proc_princ_w
			from	regra_lanc_automatico
			where	nr_sequencia = nr_seq_regra_w;

		end if;

		if (cd_setor_regra_w IS NOT NULL AND cd_setor_regra_w::text <> '') then
			begin
			if (cd_setor_regra_w = cd_setor_atendimento_w) then
				nr_seq_regra_w	:= nr_sequencia_w;
			elsif (nr_seq_evento_p = 36) then
				begin
				
				if (ie_setor_atual_alta_w = 'N') then
				
					select coalesce(count(*),0)
					into STRICT qt_passagem_setor_w
					from atend_paciente_unidade
					where nr_atendimento		= nr_atendimento_p
					and cd_setor_atendimento 	= cd_setor_regra_w;
					if (qt_passagem_setor_w > 0) then
						nr_seq_regra_w	:= nr_sequencia_w;
					end if;
					
				else
					
					begin
					select	obter_atepacu_paciente(nr_atendimento_p, 'A')
					into STRICT	nr_seq_atepacu_w	
					;
					
					select	a.cd_setor_atendimento
					into STRICT	cd_setor_atend_alta_w
					from 	atend_paciente_unidade a
					where	a.nr_atendimento	= nr_atendimento_p
					and 	a.nr_seq_interno 	= nr_seq_atepacu_w;
					exception
						when others then
							cd_setor_atend_alta_w 	:= cd_setor_atend_alta_w;
					end;
					
					if (cd_setor_atend_alta_w = cd_setor_regra_w) then
						nr_seq_regra_w	:= nr_sequencia_w;
					end if;
					
				end if;
				end;
			end if;
			end;
		else
			nr_seq_regra_w	:= nr_sequencia_w;
		end if;

		if (nr_seq_evento_p = 30) and (coalesce(ds_adicional_3_p, 'XX') <> 'PRESCRICAO') then
			select	count(*)
			into STRICT	qt_regra_proc_w
			from	regra_lanc_automatico
			where	nr_seq_evento = 30
			and	coalesce(cd_area_procedimento::text, '') = ''
			and	coalesce(cd_especialidade_proc::text, '') = ''
			and	coalesce(cd_grupo_proc::text, '') = ''
			and	coalesce(cd_procedimento::text, '') = ''
			and 	coalesce(nr_seq_proc_interno::text, '') = ''
			and 	coalesce(nr_seq_exame::text, '') = ''
			and	nr_sequencia	= nr_sequencia_w;

			if (qt_regra_proc_w > 0) then
				nr_seq_regra_w	:= 0;
			end if;

			ds_texto_w := substr(wheb_mensagem_pck.get_texto(306690,'NR_SEQ_REGRA_P='|| to_char(nr_sequencia_w)),1,255); --Regra: #@NR_SEQ_REGRA_P#@
			ds_texto_ww := substr(wheb_mensagem_pck.get_texto(306695,'NR_PRESCRICAO_P='|| coalesce(somente_numero(ds_adicional_3_p),0)),1,255); --Prescr.: #@NR_PRESCRICAO_P#@
			select	count(*)
			into STRICT	qt_regra_proc_w
			from	procedimento_paciente
			where	nr_atendimento	= nr_atendimento_p
			and	ds_observacao	like '%'|| ds_texto_w ||'%'|| ds_texto_ww;

			if (qt_regra_proc_w > 0) then
				nr_seq_regra_w	:= 0;
			end if;


		end if;

		end;
	end loop;
	close c01;

	i:= coalesce(vetor_regra_w.count,0) + 1;
	vetor_regra_w[i].nr_seq_regra 		:= nr_seq_regra_w;
	vetor_regra_w[i].cd_setor_regra		:= cd_setor_regra_w;
	vetor_regra_w[i].nr_interno_conta 	:= nr_interno_conta_ww;
	vetor_regra_w[i].ie_vincular_proc_princ	:= ie_vincular_proc_princ_w;
	vetor_regra_w[i].ie_dispara_kit_mat	:= ie_dispara_kit_mat_w;
	vetor_regra_w[i].ie_duplicar_proc_regra := ie_duplicar_proc_regra_w;
	vetor_regra_w[i].ie_setor_atual_alta    := ie_setor_atual_alta_w;

end if;

RAISE NOTICE '%', nr_seq_regra_w;

qt_proc_lib_evolucao_w	:= 0;

if (coalesce(nr_seq_propaci_w,0) > 0) and (nr_seq_evento_p	= 34) and (ie_duplicar_proc_regra_w	= 'S') then
	begin

	select	nextval('procedimento_paciente_seq')
	into STRICT	nr_sequencia_w
	;

	--LA Regra: #@NR_SEQ_REGRA_P#@ Evento: #@NR_SEQ_EVENTO_P#@ Prescr.: #@NR_PRESCRICAO_P#@
	ds_texto_w := substr(wheb_mensagem_pck.get_texto(306712,'NR_SEQ_REGRA_P='|| nr_seq_regra_w ||
							'NR_SEQ_EVENTO_P='|| nr_seq_evento_p ||
							'NR_PRESCRICAO_P='|| coalesce(somente_numero(ds_adicional_3_p),0)),1,255);
	--LA Regra: #@NR_SEQ_REGRA_P#@ Evento: #@NR_SEQ_EVENTO_P#@
	ds_texto_ww := substr(wheb_mensagem_pck.get_texto(306715,'NR_SEQ_REGRA_P='|| nr_seq_regra_w ||
							'NR_SEQ_EVENTO_P='|| nr_seq_evento_p),1,255);
		
	insert into procedimento_paciente(nr_sequencia     		,
			nr_atendimento          ,
			dt_entrada_unidade      ,
			cd_procedimento         ,
			dt_conta                ,
			dt_procedimento         ,
			qt_procedimento         ,
			dt_atualizacao          ,
			nm_usuario              ,
			cd_medico               ,
			cd_convenio             ,
			cd_categoria            ,
			tx_medico               ,
			tx_anestesia            ,
			tx_procedimento         ,
			cd_acao                 ,
			cd_medico_executor      ,
			cd_setor_atendimento    ,
			ie_origem_proced        ,
			ie_valor_informado      ,
			nm_usuario_original     ,
			cd_setor_receita	,
			cd_situacao_glosa	,
			ie_funcao_medico	,
			cd_cgc_prestador	,
			nr_doc_convenio		,
			nr_seq_proc_princ	,
			qt_porte_anestesico	,
			cd_procedimento_princ	,
			dt_procedimento_princ,
			nr_seq_atepacu,
			ie_auditoria,
			ds_observacao,
			nr_seq_exame,
			cd_senha,
			cd_atividade_prof_bpa,
			cd_medico_req,
			nr_prescricao,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			nr_seq_regra_lanc,
			ie_proc_princ_atend,
			ie_via_acesso,
			ie_tecnica_utilizada,
			ie_integracao,
			ie_tipo_guia,
			nr_interno_conta,
			cd_pessoa_fisica,
			nr_cirurgia,
			nr_seq_proc_interno,
			nr_seq_reg_template,
			cd_doenca_cid)
		(SELECT nr_sequencia_w,
			nr_atendimento          ,
			dt_entrada_unidade      ,
			cd_procedimento         ,
			dt_conta                ,
			dt_procedimento         ,
			coalesce(qt_procedimento,1),
			dt_atualizacao          ,
			nm_usuario              ,
			cd_medico               ,
			cd_convenio             ,
			cd_categoria            ,
			tx_medico               ,
			tx_anestesia            ,
			tx_procedimento         ,
			cd_acao                 ,
			cd_medico_executor      ,
			cd_setor_atendimento    ,
			ie_origem_proced        ,
			ie_valor_informado      ,
			nm_usuario_original     ,
			cd_setor_receita	,
			cd_situacao_glosa	,
			ie_funcao_medico	,
			cd_cgc_prestador	,
			nr_doc_convenio		,
			nr_seq_proc_princ	,
			qt_porte_anestesico	,
			cd_procedimento_princ	,
			dt_procedimento_princ,
			nr_seq_atepacu,
			ie_auditoria,
			CASE WHEN nr_seq_evento_p=30 THEN  ds_texto_w   ELSE ds_texto_ww END ,
			nr_seq_exame,
			cd_senha,
			cd_atividade_prof_bpa,
			cd_medico_req,
			nr_prescricao,
			ie_tipo_atend_bpa,
			ie_grupo_atend_bpa,
			nr_seq_regra_lanc,
			ie_proc_princ_atend,
			ie_via_acesso,
			ie_tecnica_utilizada,
			ie_integracao,
			ie_tipo_guia,
			nr_interno_conta,
			cd_pessoa_fisica,
			nr_cirurgia,
			nr_seq_proc_interno,
			nr_seq_reg_template_w,
			cd_doenca_cid
		from	procedimento_paciente
		where	nr_sequencia	= nr_seq_propaci_w);

	if (nr_sequencia_w > 0) then
		CALL atualiza_preco_procedimento(
				nr_sequencia_w, cd_convenio_w, nm_usuario_p);
	end if;
	end;
end if;

cd_cgc_orig_w:= cd_cgc_w;

cd_convenio_orig_w	:= cd_convenio_w;
cd_categoria_orig_w	:= cd_categoria_w;

														

for 	i in 1..vetor_regra_w.count loop

	nr_seq_regra_w		:= vetor_regra_w[i].nr_seq_regra;	
	cd_setor_regra_w	:= vetor_regra_w[i].cd_setor_regra;
	nr_interno_conta_ww	:= vetor_regra_w[i].nr_interno_conta;
	ie_vincular_proc_princ_w:= vetor_regra_w[i].ie_vincular_proc_princ;
	ie_dispara_kit_mat_w	:= vetor_regra_w[i].ie_dispara_kit_mat;
	ie_duplicar_proc_regra_w:= vetor_regra_w[i].ie_duplicar_proc_regra;
	ie_setor_atual_alta_w   := vetor_regra_w[i].ie_setor_atual_alta;

	ie_vincular_proc_princ_orig_w:= ie_vincular_proc_princ_w;	

																		   
	
	open c02;
	loop
	fetch c02 into
			cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_exame_w,
			cd_material_w,
			cd_unid_medida_w,
			qt_lancamento_w,
			ie_medico_atendimento_w,
			ie_local_estoque_w,
			ie_funcao_medico_w,
			tx_procedimento_w,
			ie_regra_guia_w,
			nr_seq_proc_interno_ww,
			ie_consiste_item_w,
      		ie_consiste_proc_int_w,
      		nr_seq_lanc_proc_interno_w,
			ie_proc_princ_atend_w,
			nr_seq_acao_regra_w,
			cd_estab_item_w,
			cd_setor_item_w,
			nr_min_duracao_w,
			cd_cnpj_prestador_w,
			cd_cid_doenca_w,
			cd_medico_lanc_aut_pac_w,
			ie_vinc_proc_princ_item_w,
			qt_dias_primeira_cir_w,
			qt_dias_primeira_prescr_w,
			ie_gera_conta_estab_w,
			ie_gerar_autor_w,
			ie_gera_se_item_exc_conta_w,
			ie_novo_medico_atual_w,
      ie_especialidade_agenda_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		
		/*TRATA O SETOR QUE O ITEM DE RLA DEVE SER LANCADO*/


		/*SO-2220426*/

		if (cd_estab_item_w IS NOT NULL AND cd_estab_item_w::text <> '') and (cd_setor_item_w IS NOT NULL AND cd_setor_item_w::text <> '') then

			select	coalesce(count(*),0)
			into STRICT	qt_passagem_w
			from	atend_paciente_unidade
			where	nr_atendimento 			= nr_atendimento_p
			and	cd_setor_atendimento		= cd_setor_item_w
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_execucao_w);

			if (qt_passagem_w = 0) then
				CALL gerar_passagem_setor_atend(nr_atendimento_p, cd_setor_item_w, dt_execucao_w, 'N', nm_usuario_p);
			end if;


			select	coalesce(max(nr_seq_interno),0)
			into STRICT	nr_seq_setor_item_w
			from	atend_paciente_unidade
			where	nr_atendimento 			= nr_atendimento_p
			and	cd_setor_atendimento		= cd_setor_item_w
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_execucao_w);


			if (nr_seq_setor_item_w > 0) then
				begin
				select	nr_seq_interno,
					dt_entrada_unidade,
					cd_setor_atendimento
				into STRICT	nr_seq_atepacu_proc_w,
					dt_entrada_unidade_proc_w,
					cd_setor_atendimento_w
				from	atend_paciente_unidade
				where	nr_seq_interno		= nr_seq_setor_item_w;
				exception
				when others then
					nr_seq_setor_item_w	:= nr_seq_setor_item_w;
				end;
			end if;
		end if; 		
		
		if (nr_seq_evento_p = 251) then
		    /*OS 1632413 - realizado para nao gerar materiais / procedimentos caso ja tenham sido lancados por esta regra*/

			select	count(1)
			into STRICT    qt_proc_mat_w
			from	procedimento_paciente a,
					conta_paciente b,
					regra_lanc_automatico c
			where	a.nr_interno_conta 	= b.nr_interno_conta
			and		b.nr_Atendimento	= nr_atendimento_p
			and		c.nr_sequencia		= a.nr_seq_regra_lanc
			and 	a.cd_procedimento   = cd_procedimento_w
			and		b.ie_status_acerto	= 1
			and		c.NR_SEQ_EVENTO		= 251
			and		coalesce(a.cd_motivo_exc_conta::text, '') = '';
			
			
			if (qt_proc_mat_w > 0) then
				goto final_cur;
			end if;
			
			select	count(1)
			into STRICT    qt_proc_mat_w
			from	material_Atend_paciente a,
					conta_paciente b,
					regra_lanc_automatico c
			where	a.nr_interno_conta 	= b.nr_interno_conta
			and		b.nr_Atendimento	= nr_atendimento_p
			and     a.cd_material       = cd_material_w
			and		c.nr_sequencia		= a.nr_seq_regra_lanc
			and		b.ie_status_acerto	= 1
			and		c.NR_SEQ_EVENTO		= 251
			and		coalesce(a.cd_motivo_exc_conta::text, '') = '';
			
			if (qt_proc_mat_w > 0) then
				goto final_cur;
			end if;
		end if;
		
		if (cd_convenio_w <> cd_convenio_orig_w) then
			begin
			cd_convenio_w	:= cd_convenio_orig_w;
			cd_categoria_w	:= cd_categoria_orig_w;
			end;
		end if;

		if (nr_seq_evento_p = 557) then
			nr_interno_conta_ww := nr_interno_conta_p;
			if (coalesce(cd_procedimento_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then

				select  max(cd_procedimento),
						max(ie_origem_proced)
				into STRICT	cd_procedimento_w,
						ie_origem_proced_w
				from	exame_laboratorio
				where   nr_seq_exame = nr_seq_exame_w
				and		coalesce(ie_situacao, 'I') = 'A';
			end if;
		end if;

		-- OS 426202
		if (ie_vincular_proc_princ_orig_w = 'N') then
			ie_vincular_proc_princ_w:= ie_vinc_proc_princ_item_w;
		end if;

		/*if	(tx_procedimento_w is null) or
			(tx_procedimento_w	= 0)	then
			tx_procedimento_w	:= 100;
		end if;*/
		if (tx_procedimento_w	= 0) then
			tx_procedimento_w := null;
		end if;


		/* inicializa medico quando ie_medico_atendimento = 'S' */


		/* primeiro = medico executor, segundo = medico do atendimento */

		cd_medico_executor_w		:= '';
		cd_prof_evol_ferida_w		:= '';
		
		if (ie_medico_atendimento_w <> 'N') then
			begin

			if (ie_medico_atendimento_w = 'S') then
				begin
				if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
					cd_medico_executor_w    := cd_medico_propaci_w;
				else
					cd_medico_executor_w    := cd_medico_resp_w;
				end if;
				end;
			elsif (ie_medico_atendimento_w = 'D') then
				select	coalesce(max(cd_medico),'0')
				into STRICT	cd_medico_diagnostico_w
				from	diagnostico_medico
				where	nr_atendimento = nr_atendimento_p;

				if (cd_medico_diagnostico_w <> '0') then
					cd_medico_executor_w	:= cd_medico_diagnostico_w;
				elsif (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
					cd_medico_executor_w    := cd_medico_propaci_w;
				else
					cd_medico_executor_w    := cd_medico_resp_w;
				end if;

			elsif (ie_medico_atendimento_w = 'R') then
				begin
				if (cd_medico_propaci_w IS NOT NULL AND cd_medico_propaci_w::text <> '') and (length(cd_medico_propaci_w) > 0) then
					cd_medico_executor_w    := cd_medico_propaci_w;
				else
					cd_medico_executor_w    := coalesce(cd_medico_referido_w,cd_medico_resp_w);
				end if;
				end;
			elsif (ie_medico_atendimento_w = 'P') then
				cd_medico_executor_w    := cd_medico_prescr_w;
			elsif (ie_medico_atendimento_w = 'T') and (nr_seq_evento_p in (28,423)) then
				
				if (nr_seq_evento_p = 423) then
					select	coalesce(max(cd_avaliador),'0')
					into STRICT	cd_medico_anestesista_w
					from	aval_pre_anestesica
					where	nr_sequencia = ds_adicional_1_p;
					
					if (cd_medico_anestesista_w <> '0') then
						cd_medico_executor_w	:= cd_medico_anestesista_w;
					end if;
				
				elsif (nr_seq_evento_p = 28) then
					cd_medico_executor_w	:= cd_medico_anestesista_w;
				
				end if;

			elsif (nr_seq_evento_p = 432) then
				select	coalesce(max(ds_dia_ciclo),'0')
				into STRICT	ds_dia_ciclo_w
				from	paciente_atendimento
				where	nr_seq_atendimento = ds_adicional_1_p;




			elsif (ie_medico_atendimento_w = 'E') then
				cd_medico_executor_w    := cd_medico_propaci_w;
			elsif (ie_medico_atendimento_w = 'B') then
				select 	coalesce(max(cd_pessoa_fisica), cd_medico_resp_w)
				into STRICT	cd_medico_executor_w
				from 	atend_profissional
				where 	nr_atendimento = nr_atendimento_p;
			elsif (ie_medico_atendimento_w = 'Y') then
				cd_medico_executor_w    := coalesce(cd_medico_prescr_w, cd_medico_resp_w);
			elsif (ie_medico_atendimento_w = 'X') then
				cd_medico_executor_w    := coalesce(cd_medico_exec_item_w, coalesce(cd_medico_prescr_w, cd_medico_resp_w));
			elsif (ie_medico_atendimento_w = 'L') then
				cd_medico_executor_w    :=  coalesce(cd_medico_parecer_w,cd_medico_resp_w);
			elsif (ie_medico_atendimento_w = 'H') and (nr_seq_evento_p = 550) and (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') then
				cd_medico_executor_w    := substr(ds_adicional_2_p,1,10);
			elsif (ie_medico_atendimento_w = 'U') then
				select	max(a.cd_pessoa_fisica)
				into STRICT	cd_medico_executor_w
				from	usuario a,
					medico b
				where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
				and	a.nm_usuario = wheb_usuario_pck.get_nm_usuario;
			elsif (ie_medico_atendimento_w = 'A') and (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p	= 241) then
				cd_medico_executor_w    := substr(ds_adicional_1_p,1,10);
			elsif (ie_medico_atendimento_w	= 'M') then
					begin

					select	count(*)
					into STRICT	qt_existe_w
					from	medico
					where	cd_pessoa_fisica = cd_medico_ambulat_w
					and 	coalesce(ie_situacao,'A') = 'A';

					if (qt_existe_w	> 0)then
						cd_medico_executor_w	:= cd_medico_ambulat_w;
					else
						cd_profissional_w		:= cd_medico_ambulat_w;
					end if;

					end;
			elsif (ie_medico_atendimento_w	= 'Z') then
				select	count(*)
				into STRICT	qt_existe_w
				from	medico
				where	cd_pessoa_fisica = cd_medico_aval_w
				and 	coalesce(ie_situacao,'A') = 'A';

				if (qt_existe_w	> 0)then
					cd_medico_executor_w	:= cd_medico_aval_w;
				else
					cd_profissional_w	:= cd_medico_aval_w;
				end if;
			elsif (ie_medico_atendimento_w = 'F') and (cd_medico_evol_ferida_cur_w <> '0') then
				select	count(*)
				into STRICT	qt_existe_w
				from	medico
				where	cd_pessoa_fisica = cd_medico_evol_ferida_cur_w
				and 	coalesce(ie_situacao,'A') = 'A';

				if (qt_existe_w	> 0)then
					cd_medico_executor_w	:= cd_medico_evol_ferida_cur_w;
				else
					cd_prof_evol_ferida_w	:= cd_medico_evol_ferida_cur_w;
				end if;
			elsif (ie_medico_atendimento_w = 'G') and (nr_seq_evento_p = 30) then
				cd_medico_executor_w:= cd_medico_exec_prescr_w;
			elsif (ie_medico_atendimento_w = 'V') and (nr_seq_evento_p = 539) then
				cd_medico_executor_w:= cd_medico_exec_prescr_w;

			elsif (ie_medico_atendimento_w = 'C') and (nr_seq_evento_p = 251) and (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') then
				cd_medico_executor_w    := substr(ds_adicional_2_p,1,10);
			end if;
			end;
		elsif (nr_seq_evento_p = 12) or (nr_seq_evento_p = 123) then
			cd_medico_executor_w := substr(ds_adicional_1_p,1,10);
		end if;

		if (nr_seq_evento_p = 321) then

			select	count(*)
			into STRICT	qt_existe_w
			from	medico b,
				pessoa_fisica a
			where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
			and	a.cd_pessoa_fisica = ds_adicional_2_p;
			if (qt_existe_w > 0) then
				cd_medico_executor_w := ds_adicional_2_p;
			end if;
		end if;		

    		/*tratar para ir para o final caso o proc interno da acao da regra esteja inativo*/

    		if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
			select	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	proc_interno
			where	nr_sequencia = nr_seq_proc_interno_ww;

			if (ie_situacao_w = 'I') then
				goto final_cur;
			end if;
    		end if;

		/* felipe - os 48237 - 12/01/2007 - busca o procedimento do proc. interno a ser executado */

		if (nr_seq_proc_interno_ww IS NOT NULL AND nr_seq_proc_interno_ww::text <> '') then
			SELECT * FROM obter_proc_tab_interno(nr_seq_proc_interno_ww, nr_prescricao_w, nr_atendimento_p, nr_interno_conta_w, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;

		/* Fabricio - OS 201238 - busca o procedimento do exame de lab. a ser executado */

		if	((coalesce(nr_seq_exame_w,0) > 0) and (coalesce(cd_procedimento_w,0) = 0)) then
			SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estabelecimento_w, ie_tipo_convenio_w, nr_seq_proc_interno_ww, null, cd_plano_convenio_w, ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT ds_ret_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;

  		/*Apos obter o codigo do procedimento atraves do proc interno ou exame de laboratorio testar novamente para ver se o codigo esta ativo.*/

    		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
      			select 	coalesce(max(ie_situacao),'A')
      			into STRICT	ie_situacao_w
      			from	procedimento
      			where	cd_procedimento	 = cd_procedimento_w
      			and	ie_origem_proced = ie_origem_proced_w;
		
      			if (ie_situacao_w = 'I') then
        			goto final_cur;
      			end if;
    		end if;

		/* verifica se procedimento de alta ja foi executado    bola 08072002 */

		begin
		qt_proc_alta_w		:= 0;
		qt_proc_lib_evolucao_w	:= 0;
		if (nr_seq_evento_p = 36) and (qt_regras_w = 0) then
			begin

			/* ricardo 31/05/2005 - incluido no sql abaixo a consistencia da observacao.
						se ja havia algum procedimento gerado para o paciente nao gerava o proc da alta */
			ds_texto_w := substr(wheb_mensagem_pck.get_texto(306734),1,255);--LA Regra:
			select 	count(*)
			into STRICT	qt_proc_alta_w
			from	procedimento_paciente
			where	nr_atendimento	= nr_atendimento_p
			and	cd_procedimento	= cd_procedimento_w
			and 	coalesce(cd_motivo_exc_conta::text, '') = ''
			and	ds_observacao like ds_texto_w || '% 36%';
			exception
				when others then
				qt_proc_alta_w	:= 0;
			end;
		end if;
		end;

		/* OS 484012 */

		ie_dias_cirurgia_w		:= 'S';
		nr_seq_equipe_cir_princ_w	:= 0;
		if (nr_seq_evento_p = 123) and (coalesce(qt_dias_primeira_cir_w,0) > 0) then
			
			nr_ultima_cir_w	:= null;
			open c06;
			loop
			fetch c06 into
				nr_seq_equipe_cirurgiao_w;
			EXIT WHEN NOT FOUND; /* apply on c06 */
				begin
				
				select 	max(nr_cirurgia)
				into STRICT	nr_ultima_cir_w
				from 	cirurgia
				where 	nr_atendimento = nr_atendimento_p
				and (obter_se_medico_equipe(coalesce(nr_seq_equipe_cirurgiao_w,0), cd_medico_cirurgiao) = 'S');
				
				if (coalesce(nr_ultima_cir_w,0) > 0) then
					exit;
				end if;
				
				end;
			end loop;
			close c06;
			
			/*select	nvl(max(a.nr_sequencia),0)
			into	nr_seq_equipe_cirurgiao_w
			from	pf_equipe_partic b,
				pf_equipe a
			where	a.nr_sequencia = b.nr_seq_equipe
			and	((a.cd_pessoa_fisica = cd_medico_executor_w) or (b.cd_pessoa_fisica = cd_medico_executor_w));

			select 	nvl(max(nr_cirurgia),0)
			into	nr_ultima_cir_w
			from 	cirurgia
			where 	nr_atendimento = nr_atendimento_p
			and 	(obter_se_medico_equipe(nvl(nr_seq_equipe_cirurgiao_w,0), cd_medico_cirurgiao) = 'S');*/
			if (nr_ultima_cir_w > 0) then
				
				select 	coalesce(max(cd_medico_cirurgiao),0)
				into STRICT	cd_medico_cir_w
				from 	cirurgia
				where 	nr_cirurgia = nr_ultima_cir_w;

				select	coalesce(max(a.nr_sequencia),0)
				into STRICT	nr_seq_equipe_cir_princ_w
				from	pf_equipe_partic b,
					pf_equipe a
				where	a.nr_sequencia = b.nr_seq_equipe
				and	((a.cd_pessoa_fisica = cd_medico_cir_w) or (b.cd_pessoa_fisica = cd_medico_cir_w));
					
				dt_base_w:= coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp()));

				/*SO-2220426*/

				select 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(max(coalesce(dt_inicio_real,dt_inicio_prevista)),clock_timestamp()))
				into STRICT	dt_primeira_cir_w
				from 	cirurgia
				where 	nr_cirurgia = nr_ultima_cir_w;
				
			    if (dt_base_w < dt_primeira_cir_w + qt_dias_primeira_cir_w) then
					ie_dias_cirurgia_w:= 'N'; -- Nao deve lancar,  goto final
					
					if (ie_consiste_item_w = 'X') then
						goto final_cur;
					end if;
					
				end if;
			end if;
		end if;		
		
		/*SO-2220426*/

		if (nr_seq_evento_p in (123,221,501,576)) and (ie_consiste_item_w <> 'X') then
			begin
			
			if (ie_consiste_item_w = 'D') then
			
				qt_proced_dia_w	:= 0;
				qt_proc_lib_evolucao_w	:= 0;
				
				if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
					coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
					begin		
						select	count(1)
						into STRICT	qt_proced_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and	nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
						and	coalesce(cd_motivo_exc_conta::text, '') = ''
						and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
						and  	trunc(dt_procedimento)  = trunc(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())));
						exception
						when no_data_found then
							qt_proced_dia_w 	:= 0;
						when data_exception then
							qt_proced_dia_w 	:= 0;
					end;
				else
					begin
						select	count(1)
						into STRICT	qt_proced_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and	cd_procedimento	= cd_procedimento_w
						and	ie_origem_proced	= ie_origem_proced_w
						and	coalesce(cd_motivo_exc_conta::text, '') = ''
						and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
						and  	trunc(dt_procedimento)  = trunc(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())));
						exception
						when no_data_found then
							qt_proced_dia_w 	:= 0;
						when data_exception then
							qt_proced_dia_w 	:= 0;
					end;

				end if;

				if (qt_proced_dia_w > 0) then
					qt_proc_lib_evolucao_w	:= qt_proced_dia_w;
				end if;
				
			elsif (ie_consiste_item_w = 'E') then

				if (nr_seq_equipe_cir_princ_w > 0) then
					select	coalesce(max(a.nr_sequencia),0)
					into STRICT	nr_seq_equipe_w
					from	pf_equipe_partic b,
						pf_equipe a
					where	a.nr_sequencia = b.nr_seq_equipe
					and	a.nr_sequencia = nr_seq_equipe_cir_princ_w
					and	((a.cd_pessoa_fisica = cd_medico_executor_w) or (b.cd_pessoa_fisica = cd_medico_executor_w));
				end if;
				
				if (nr_seq_equipe_w = 0) then
					select	coalesce(max(a.nr_sequencia),0)
					into STRICT	nr_seq_equipe_w
					from	pf_equipe_partic b,
						pf_equipe a
					where	a.nr_sequencia = b.nr_seq_equipe
					and	((a.cd_pessoa_fisica = cd_medico_executor_w) or (b.cd_pessoa_fisica = cd_medico_executor_w));
				end if;

				qt_equipe_dia_w:= 0;
				qt_proc_lib_evolucao_w:= 0;

				begin
				select 	count(*)
				into STRICT	qt_equipe_dia_w
				from	procedimento_paciente
				where	nr_atendimento	= nr_atendimento_p
				and (obter_se_medico_equipe(coalesce(nr_seq_equipe_w,0), cd_medico_executor) = 'S')
				and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
				and	coalesce(cd_motivo_exc_conta::text, '') = '';
				exception
					when others then
						qt_equipe_dia_w := 0;
				end;

				if (qt_equipe_dia_w > 0) then
					qt_proc_lib_evolucao_w:= qt_equipe_dia_w;
				end if;

				if (coalesce(qt_dias_primeira_cir_w,0) > 0) and (nr_seq_equipe_cir_princ_w > 0) and (nr_seq_equipe_cir_princ_w = nr_seq_equipe_w) and (ie_dias_cirurgia_w = 'N') and (qt_proc_lib_evolucao_w = 0) then
					qt_proc_lib_evolucao_w:= 1;
					/* OS 539854
					- Temos que pegar a equipe do medico cirurgico da ultima cirurgia. Se o lancamento for dessa equipe apenas, deve ser consistido o campo "Dias ultima cirurgia",
					caso contrario (no caso de evolucoes de outras equipes/especilidades) nao consiste esse campo, apenas o "Equipe/Dia" normal como e feito hoje."*/
				end if;

			elsif (ie_consiste_item_w = 'F') then

				qt_funcionario_dia_w	:= 0;
				qt_proc_lib_evolucao_w	:= 0;

				begin
				select 	count(*)
				into STRICT	qt_funcionario_dia_w
				from	procedimento_paciente
				where	nr_atendimento	= nr_atendimento_p
				and 	coalesce(cd_pessoa_fisica,'0') = cd_medico_executor_w
				and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
				and     coalesce(cd_motivo_exc_conta::text, '') = '';
				exception
					when others then
					qt_funcionario_dia_w 	:= 0;
				end;

				if (qt_funcionario_dia_w > 0) then
					qt_proc_lib_evolucao_w	:= qt_funcionario_dia_w;
				end if;
			elsif (ie_consiste_item_w = 'I') then

				qt_medico_dia_w		:= 0;
				qt_proc_lib_evolucao_w	:= 0;

				begin
				select 	count(*)
				into STRICT	qt_medico_dia_w
				from	procedimento_paciente
				where	nr_atendimento	= nr_atendimento_p
				and 	coalesce(cd_medico_executor,'0') = cd_medico_executor_w
				and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
				and     coalesce(cd_motivo_exc_conta::text, '') = '';
				exception
					when others then
					qt_medico_dia_w 	:= 0;
				end;

				if (qt_medico_dia_w > 0) then
					qt_proc_lib_evolucao_w	:= qt_medico_dia_w;
				end if;
			elsif (ie_consiste_item_w = 'T') then -- OS 397200
				qt_proc_lib_evolucao_w	:= 0;

			elsif (ie_consiste_item_w = 'H') then

				qt_medico_dia_w		:= 0;
				qt_proc_lib_evolucao_w	:= 0;

				if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
					coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
					begin		

						select 	count(1)
						into STRICT	qt_medico_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and 	coalesce(cd_medico_executor,'0') = cd_medico_executor_w
						and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
						and	nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
						and	coalesce(cd_motivo_exc_conta::text, '') = '';
						exception
						when no_data_found then
							qt_medico_dia_w 	:= 0;
						when data_exception then
							qt_medico_dia_w 	:= 0;
					end;
				else
					begin
						select 	count(1)
						into STRICT	qt_medico_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and 	coalesce(cd_medico_executor,'0') = cd_medico_executor_w
						and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
						and	cd_procedimento		    = cd_procedimento_w
						and	ie_origem_proced	    = ie_origem_proced_w
						and	coalesce(cd_motivo_exc_conta::text, '') = '';
						exception
						when no_data_found then
							qt_medico_dia_w 	:= 0;
						when data_exception then
							qt_medico_dia_w 	:= 0;
					end;

				end if;


				if (qt_medico_dia_w > 0) then
					qt_proc_lib_evolucao_w	:= qt_medico_dia_w;
				end if;
				
			elsif (ie_consiste_item_w = 'J') then

				qt_funcionario_dia_w		:= 0;
				qt_proc_lib_evolucao_w	:= 0;
				
				if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
					coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
					begin		
						
						select 	count(1)
						into STRICT	qt_funcionario_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and 	coalesce(cd_pessoa_fisica,'0') = cd_medico_executor_w
						and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
						and	nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
						and     coalesce(cd_motivo_exc_conta::text, '') = '';
						exception
						when no_data_found then
							qt_funcionario_dia_w 	:= 0;
						when data_exception then
							qt_funcionario_dia_w 	:= 0;
					end;
				else
					begin
						select 	count(1)
						into STRICT	qt_funcionario_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and 	coalesce(cd_pessoa_fisica,'0') = cd_medico_executor_w
						and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
						and	cd_procedimento		    = cd_procedimento_w
						and	ie_origem_proced	    = ie_origem_proced_w
						and     coalesce(cd_motivo_exc_conta::text, '') = '';
						exception
						when no_data_found then
							qt_funcionario_dia_w 	:= 0;
						when data_exception then
							qt_funcionario_dia_w 	:= 0;
					end;

				end if;

				if (qt_funcionario_dia_w > 0) then
					qt_proc_lib_evolucao_w	:= qt_funcionario_dia_w;
				end if;
				
			elsif (ie_consiste_item_w = 'G') then

				if (nr_seq_equipe_cir_princ_w > 0) then
					select	coalesce(max(a.nr_sequencia),0)
					into STRICT	nr_seq_equipe_w
					from	pf_equipe_partic b,
						pf_equipe a
					where	a.nr_sequencia = b.nr_seq_equipe
					and	a.nr_sequencia = nr_seq_equipe_cir_princ_w
					and	((a.cd_pessoa_fisica = cd_medico_executor_w) or (b.cd_pessoa_fisica = cd_medico_executor_w));
				end if;
				
				if (coalesce(nr_seq_equipe_w,0) = 0) then
					select	coalesce(max(a.nr_sequencia),0)
					into STRICT	nr_seq_equipe_w
					from	pf_equipe_partic b,
						pf_equipe a
					where	a.nr_sequencia = b.nr_seq_equipe
					and	((a.cd_pessoa_fisica = cd_medico_executor_w) or (b.cd_pessoa_fisica = cd_medico_executor_w));
				end if;
				
				qt_equipe_dia_w:= 0;
				qt_proc_lib_evolucao_w:= 0;
				
				if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
					coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
					begin		
					
						select 	count(1)
						into STRICT	qt_equipe_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and	nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
						and (obter_se_medico_equipe(coalesce(nr_seq_equipe_w,0), cd_medico_executor) = 'S')
						and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
						and	coalesce(cd_motivo_exc_conta::text, '') = '';
						exception
						when no_data_found then
							qt_equipe_dia_w := 0;
						when data_exception then
							qt_equipe_dia_w := 0;
					end;
				else
					begin
						select 	count(1)
						into STRICT	qt_equipe_dia_w
						from	procedimento_paciente
						where	nr_atendimento	= nr_atendimento_p
						and	cd_procedimento		    = cd_procedimento_w
						and	ie_origem_proced	    = ie_origem_proced_w
						and (obter_se_medico_equipe(coalesce(nr_seq_equipe_w,0), cd_medico_executor) = 'S')
						and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())))
						and	coalesce(cd_motivo_exc_conta::text, '') = '';
						exception
						when no_data_found then
							qt_equipe_dia_w := 0;
						when data_exception then
							qt_equipe_dia_w := 0;
					end;

				end if;

				if (qt_equipe_dia_w > 0) then
					qt_proc_lib_evolucao_w:= qt_equipe_dia_w;
				end if;

				if (coalesce(qt_dias_primeira_cir_w,0) > 0) and (nr_seq_equipe_cir_princ_w > 0) and (nr_seq_equipe_cir_princ_w = nr_seq_equipe_w) and (ie_dias_cirurgia_w = 'N') and (qt_proc_lib_evolucao_w = 0) then
					qt_proc_lib_evolucao_w:= 1;
					/* OS 539854
					- Temos que pegar a equipe do medico cirurgiao da ultima cirurgia. Se o lancamento for dessa equipe apenas, deve ser consistido o campo "Dias ultima cirurgia",
					caso contrario (no caso de evolucoes de outras equipes/especilidades) nao consiste esse campo, apenas o "Equipe/Dia" normal como e feito hoje."*/
				end if;
			elsif (ie_consiste_item_w = 'R') then
				begin
				
				qt_proced_setor_w	:= 0;
				qt_proc_lib_evolucao_w	:= 0;
				
				if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
					coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
					begin
					
						select	count(1)
						into STRICT	qt_proced_setor_w
						from	procedimento_paciente a,
							conta_paciente b
						where	b.nr_atendimento	= nr_atendimento_p
						and	a.nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	a.nr_interno_conta	= b.nr_interno_conta
						and	b.ie_status_acerto	= '1'
						and	b.nr_interno_conta	= coalesce(nr_interno_conta_w,nr_interno_conta_p)
						and	a.cd_setor_atendimento	= cd_setor_atendimento_w;
						exception
						when no_data_found then
							qt_proced_setor_w 	:= 0;
						when data_exception then
							qt_proced_setor_w 	:= 0;
					end;
				else
					begin
						select	count(1)
						into STRICT	qt_proced_setor_w
						from	procedimento_paciente a,
							conta_paciente b
						where	b.nr_atendimento	= nr_atendimento_p
						and	a.cd_procedimento	= cd_procedimento_w
						and	a.ie_origem_proced	= ie_origem_proced_w
						and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
						and	a.nr_interno_conta	= b.nr_interno_conta
						and	b.ie_status_acerto	= '1'
						and	b.nr_interno_conta	= coalesce(nr_interno_conta_w,nr_interno_conta_p)
						and	a.cd_setor_atendimento	= cd_setor_atendimento_w;
						exception
						when no_data_found then
							qt_proced_setor_w 	:= 0;
						when data_exception then
							qt_proced_setor_w 	:= 0;
					end;

				end if;

				if (qt_proced_setor_w > 0) then
					qt_proc_lib_evolucao_w	:= qt_proced_setor_w;
				end if;
				
				end;
			else
				if (nr_seq_evento_p = 123) and (ie_consiste_item_w <> 'V') then
					begin

					ds_texto_w := substr(wheb_mensagem_pck.get_texto(306738),1,255);--Evento:
					
					if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
						coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
						begin
						
							select 	count(1)
							into STRICT	qt_proc_lib_evolucao_w
							from	procedimento_paciente
							where	nr_atendimento	= nr_atendimento_p
							and	nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
							and	ds_observacao like '%'|| ds_texto_w ||' 123%';
							exception
							when no_data_found then
								qt_proc_lib_evolucao_w := 0;
							when data_exception then
								qt_proc_lib_evolucao_w := 0;
						end;
					else
						begin
							select 	count(1)
							into STRICT	qt_proc_lib_evolucao_w
							from	procedimento_paciente
							where	nr_atendimento	= nr_atendimento_p
							and	cd_procedimento	= cd_procedimento_w
							and	ds_observacao like '%'|| ds_texto_w ||' 123%';
							exception
							when no_data_found then
								qt_proc_lib_evolucao_w := 0;
							when data_exception then
								qt_proc_lib_evolucao_w := 0;
						end;

					end if;
          end;

				else
					qt_proc_lib_evolucao_w := 0;
				end if;
			end if;
			end;
		end if;

		if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 291) then
			dt_execucao_w := coalesce(dt_liberacao_dieta_w,clock_timestamp());
		end if;	
		
		if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') and (nr_seq_evento_p = 590) then
			dt_execucao_w := coalesce(dt_liberacao_dieta_nut_w, clock_timestamp());
		end if;

		if (nr_seq_evento_p = 221)  and (ie_lanc_aut_assumir_pac_w	= 'S') then
			begin

			ds_texto_w := substr(wheb_mensagem_pck.get_texto(306738),1,255);--Evento:
			
			if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
				coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
				begin		
					select 	count(1)
					into STRICT	qt_proc_lib_evolucao_w
					from	procedimento_paciente
					where	nr_atendimento	= nr_atendimento_p
					and	nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
					and	ds_observacao like '%'|| ds_texto_w ||' 221%'
					and	coalesce(cd_motivo_exc_conta::text, '') = '';
					exception
					when no_data_found then
						qt_proc_lib_evolucao_w := 0;
					when data_exception then
						qt_proc_lib_evolucao_w := 0;
				end;
			else
				begin
					select 	count(1)
					into STRICT	qt_proc_lib_evolucao_w
					from	procedimento_paciente
					where	nr_atendimento	= nr_atendimento_p
					and	cd_procedimento	= cd_procedimento_w
					and	ds_observacao like '%'|| ds_texto_w ||' 221%'
					and	coalesce(cd_motivo_exc_conta::text, '') = '';
					exception
					when no_data_found then
						qt_proc_lib_evolucao_w := 0;
					when data_exception then
						qt_proc_lib_evolucao_w := 0;
				end;

			end if;
      end;

		end if;

		select	coalesce(CASE WHEN nr_seq_evento_p=34 THEN CASE WHEN ie_vincula_cirur_lanc_w='S' THEN nr_cirurgia_propaci_w  ELSE null END   ELSE nr_cirurgia_w END ,0)
		into STRICT	nr_cirurgia_ww
		;
		
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then
			if (ie_novo_medico_atual_w = 'S' and ie_consiste_item_w = 'V') then
			begin	
				open c07;
				loop
				fetch c07 into	
					cd_especialidade_w;
				EXIT WHEN NOT FOUND; /* apply on c07 */
					begin
						if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
							coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
							begin		
								select	count(1)
								into STRICT	qt_registros_w
								from	procedimento_paciente a
								where	a.nr_atendimento = nr_atendimento_p
								and	a.nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
								and	pkg_date_utils.get_time(a.dt_procedimento,0,0,0) = pkg_date_utils.get_time(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),0,0,0)
								and 	cd_especialidade_w in (	SELECT y.cd_especialidade
												from   medico_especialidade y
												where  y.cd_pessoa_fisica = a.cd_medico_executor
												and    y.nr_seq_prioridade = (	select min(x.nr_seq_prioridade) 
																from medico_especialidade x 
																where x.cd_pessoa_fisica = a.cd_medico_executor))
								and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
								and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');
							end;
								
						else
							begin
								select	count(1)
								into STRICT	qt_registros_w
								from	procedimento_paciente a
								where	a.nr_atendimento = nr_atendimento_p
								and	a.cd_procedimento = cd_procedimento_w
								and	a.ie_origem_proced = ie_origem_proced_w
								and	pkg_date_utils.get_time(a.dt_procedimento,0,0,0) = pkg_date_utils.get_time(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),0,0,0)
								and 	cd_especialidade_w in (	SELECT y.cd_especialidade
												from   medico_especialidade y
												where  y.cd_pessoa_fisica = a.cd_medico_executor
												and    y.nr_seq_prioridade = (	select min(x.nr_seq_prioridade)
																from medico_especialidade x 
																where x.cd_pessoa_fisica = a.cd_medico_executor))
								and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
								and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');	
							end;

						end if;

						if (qt_registros_w = 0) then 						
							ie_consiste_item_ww	:= 'S';						
						else
						begin
							ie_consiste_item_ww	:= 'N';
							
							if (coalesce(ie_consiste_proc_int_w,'N') = 'S') and
								coalesce(nr_seq_lanc_proc_interno_w, 0) > 0 then
								begin		
									update 	procedimento_paciente a 
									set 	a.cd_medico_executor = cd_medico_executor_w
									where	a.nr_atendimento = nr_atendimento_p
									and	a.nr_seq_proc_interno	= nr_seq_lanc_proc_interno_w
									and	pkg_date_utils.get_time(a.dt_procedimento,0,0,0) = pkg_date_utils.get_time(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),0,0,0)
									and 	cd_especialidade_w in (	SELECT y.cd_especialidade
													from   medico_especialidade y
													where  y.cd_pessoa_fisica = a.cd_medico_executor
													and    y.nr_seq_prioridade = (	select min(x.nr_seq_prioridade) 
																	from medico_especialidade x 
																	where x.cd_pessoa_fisica = a.cd_medico_executor))
									and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
									and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');					
									
									exit;
								end;
								
							else
								begin
									update 	procedimento_paciente a
									set 	a.cd_medico_executor = cd_medico_executor_w
									where	a.nr_atendimento = nr_atendimento_p
									and	a.cd_procedimento = cd_procedimento_w
									and	a.ie_origem_proced = ie_origem_proced_w
									and	pkg_date_utils.get_time(a.dt_procedimento,0,0,0) = pkg_date_utils.get_time(coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),0,0,0)
									and 	cd_especialidade_w in (	SELECT y.cd_especialidade
													from   medico_especialidade y
													where  y.cd_pessoa_fisica = a.cd_medico_executor
													and    y.nr_seq_prioridade = (	select min(x.nr_seq_prioridade) 
																	from medico_especialidade x 
																	where x.cd_pessoa_fisica = a.cd_medico_executor))
									and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
									and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '');					
									
									exit;
								end;

							end if;
							
						end;
						end if;				
					end;
				end loop;
				close c07;								
			end;
			else				
				ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, coalesce(nr_interno_conta_w,nr_interno_conta_p), cd_procedimento_w, ie_origem_proced_w,
						ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w,
						nm_usuario_p, cd_estabelecimento_w, cd_medico_executor_w, nr_cirurgia_ww,cd_setor_atendimento_w);
			end if;
		else		
			ie_consiste_item_ww	:= 'N';		
		end if;
					
		if coalesce(ie_gera_se_item_exc_conta_w,'S') = 'N' And
		   coalesce(nr_seq_propaci_w,0) > 0 then
			begin
			
			Select 	coalesce(max('S'),'N')
			into STRICT	ie_gerar_lanc_item_exc_w
			From 	procedimento_paciente
			Where	nr_sequencia = nr_seq_propaci_w
			And	coalesce(Cd_Motivo_Exc_Conta::text, '') = ''
			And	Cd_situacao_glosa  = 0; --liberado
			
			exception
			when others then
				ie_gerar_lanc_item_exc_w:='S';
			end;
		
		else	
			ie_gerar_lanc_item_exc_w:='S';
		end if;
	
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (qt_proc_alta_w	= 0) 		and (qt_proc_lib_evolucao_w = 0) and (ie_consiste_item_ww = 'S') and (ie_gerar_lanc_item_exc_w ='S') then
			begin

			select 	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	procedimento
			where	cd_procedimento	 = cd_procedimento_w
			and	ie_origem_proced = ie_origem_proced_w;
		
			if (ie_situacao_w = 'I') then
				goto final;
			end if;

			select	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	proc_interno
			where	nr_sequencia = nr_seq_proc_interno_ww;

			if (ie_situacao_w = 'I') then
				goto final;
			end if;

			RAISE NOTICE '%', cd_procedimento_w;
			select nextval('procedimento_paciente_seq')
			into STRICT nr_sequencia_w;

			if (nr_seq_propaci_w = 0) then
				dt_proc_propaci_w := null;
			end if;

			cd_atividade_prof_bpa_w	:= null;
				
			if (ie_origem_proced_w	= 3) then
				begin
				select 	max(cd_atividade_prof_bpa)
				into STRICT	cd_atividade_prof_bpa_w
				from	procedimento
				where	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				if (ie_tipo_convenio_w = 3) and (cd_atividade_prof_bpa_w IS NOT NULL AND cd_atividade_prof_bpa_w::text <> '') then
					begin
					select	ie_tipo_atend_bpa
					into STRICT	ie_tipo_atend_bpa_w
					from	sus_atividade_prof_proc
					where	cd_procedimento			= cd_procedimento_w
					and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
					exception
						when others then
						ie_tipo_atend_bpa_w	:= null;
					end;

					begin
					select	ie_grupo_atend_bpa
					into STRICT	ie_grupo_atend_bpa_w
					from	sus_atividade_prof_proc
					where	cd_procedimento			= cd_procedimento_w
					and	cd_atividade_profissional	= cd_atividade_prof_bpa_w;
					exception
						when others then
						ie_grupo_atend_bpa_w	:= null;
					end;
				end if;

				end;
			end if;

			if (coalesce(nr_prescricao_w,0) > 0) then

				select	max(cd_setor_atendimento)
				into STRICT	cd_setor_prescricao_w
				from	prescr_medica
				where	nr_prescricao = nr_prescricao_w;

				if (coalesce(nr_sequencia_prescricao_w,0) > 0) then
					select	max(ie_origem_inf),
						max(cd_cgc_laboratorio)
					into STRICT	ie_origem_inf_w,
						cd_cgc_laboratorio_w
					from	prescr_procedimento
					where	nr_prescricao = nr_prescricao_w
					and	nr_sequencia = nr_sequencia_prescricao_w;
				end if;

			end if;
			
			if (nr_seq_evento_p	= 232) or (nr_seq_evento_p 	= 583) or (nr_seq_evento_p 	= 621) then

				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_usuario_w
				from	usuario
				where	upper(nm_usuario)	= nm_usuario_p
				and	obter_se_medico(cd_pessoa_fisica,'M')	= 'S';

				if (cd_pessoa_usuario_w IS NOT NULL AND cd_pessoa_usuario_w::text <> '') then
					cd_medico_executor_w	:= cd_pessoa_usuario_w;
				end if;

			end if;
		
			if (nr_seq_evento_p = 583) or (nr_seq_evento_p = 621) then
											
				select	max(a.cd_profissional)
				into STRICT	cd_pessoa_fisica_usuario_w
				from	EHR_REGISTRO	a,
						EHR_REG_TEMPLATE b
				where	a.NR_SEQUENCIA = b.NR_SEQ_REG
				and		b.NR_sequencia = nr_seq_reg_template_w;
								
				if (cd_pessoa_fisica_usuario_w IS NOT NULL AND cd_pessoa_fisica_usuario_w::text <> '') then
					if (Obter_se_medico(cd_pessoa_fisica_usuario_w, 'M') = 'S') then
						cd_medico_executor_w := cd_pessoa_fisica_usuario_w;
					else
						cd_profissional_w := cd_pessoa_fisica_usuario_w;
					end if;
				end if;			
			end if;		

			if (nr_seq_evento_p = 545) and (cd_prof_evol_ferida_w IS NOT NULL AND cd_prof_evol_ferida_w::text <> '') and (coalesce(cd_profissional_regra_w::text, '') = '') then
				cd_profissional_w:= cd_prof_evol_ferida_w;
			end if;
			if (ie_medico_atendimento_w	= 'Z') and (nr_seq_evento_p in (501,576)) then
				select	count(*)
				into STRICT	qt_existe_w
				from	medico
				where	cd_pessoa_fisica = cd_medico_aval_w
				and 	coalesce(ie_situacao,'A') = 'A';

				if (qt_existe_w	> 0)then
					cd_medico_executor_w	:= cd_medico_aval_w;
				else
					cd_profissional_w	:= cd_medico_aval_w;
				end if;
			elsif (ie_medico_atendimento_w = 'J') and
				((nr_seq_evento_p = 547) or (nr_seq_evento_p = 589)) then
				select	max(nm_usuario)
				into STRICT	nm_usuario_w
				from	log_prioridade_atend
				where	nr_atendimento = nr_atendimento_p;
				
				if (nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') then
					select	max(cd_pessoa_fisica)
					into STRICT	cd_profissional_w
					from	usuario
					where	nm_usuario = nm_usuario_w;
				end if;
			
			elsif (ie_medico_atendimento_w = 'I') and (nr_seq_evento_p = 531) then

				select	cd_pessoa_fisica
				into STRICT	cd_profissional_w
				from	usuario
				where 	nm_usuario = nm_usuario_p  LIMIT 1;

			end if;
			
			SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, nr_seq_exame_w, nr_seq_proc_interno_ww, ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_profissional_regra_w, coalesce(cd_medico_regra_w,cd_medico_executor_w), dt_execucao_w, nr_seq_classificacao_w, ie_origem_inf_w, cd_cgc_laboratorio_w, cd_setor_prescricao_w) INTO STRICT ie_medico_executor_w, cd_cgc_regra_w, cd_medico_regra_w, cd_profissional_regra_w;

			cd_cgc_w:= cd_cgc_orig_w; --recebe sempre o original para nao ficar sujeira na variavel
			if (cd_cgc_regra_w IS NOT NULL AND cd_cgc_regra_w::text <> '') then
				cd_cgc_w	:= cd_cgc_regra_w;
			end if;
			
			
			select	obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, cd_convenio_w)
			into STRICT	ie_via_acesso_w
			;


			if	(((cd_estab_item_w IS NOT NULL AND cd_estab_item_w::text <> '') and (coalesce(nr_interno_conta_p::text, '') = '') and (nr_seq_evento_p in (12,30))) or
				 ((cd_estab_item_w IS NOT NULL AND cd_estab_item_w::text <> '') and (cd_setor_item_w IS NOT NULL AND cd_setor_item_w::text <> '') and (ie_gera_conta_estab_w = 'S') and (nr_seq_evento_p = 34))) then
				begin

				select	CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END
				into STRICT	cd_convenio_decode_w
				;

				select	CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END
				into STRICT	cd_categoria_decode_w
				;

				SELECT * FROM obter_conta_paciente(cd_estab_item_w, nr_atendimento_p, cd_convenio_decode_w, cd_categoria_decode_w, nm_usuario_p, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, nr_seq_pq_proc_w, dt_acerto_conta_w, nr_interno_conta_ww, cd_convenio_conta_w, cd_categoria_conta_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_ww, cd_convenio_conta_w, cd_categoria_conta_w;

				end;
			end if;

			if (ie_tipo_convenio_w	= 3) and (nr_seq_evento_p	= 39) then
				begin

				if (coalesce(ie_lanc_sus_setor_int_w,'N') = 'S') then

					select	obter_atepacu_paciente(nr_atendimento_p, 'IA')
					into STRICT	nr_seq_atepacu_w
					;
					
					if (nr_seq_atepacu_w = 0) then
						nr_seq_atepacu_w := null;
					end if;
					
					if (coalesce(nr_seq_atepacu_w,0) > 0) then
						select	coalesce(max(cd_setor_atendimento),0),
							coalesce(max(dt_entrada_unidade), dt_entrada_unidade_w)
						into STRICT	cd_setor_atendimento_w,
							dt_entrada_unidade_w
						from	atend_paciente_unidade
						where	nr_seq_interno = nr_seq_atepacu_w;
					end if;

				end if;

				dt_execucao_w	:= clock_timestamp();
				end;
			end if;

			if (coalesce(nr_min_duracao_w,0)	> 0) then
				begin
				select	coalesce(max(ie_forma_apresentacao),0)
				into STRICT	ie_forma_apresentacao_w
				from	procedimento
				where	cd_procedimento		= cd_procedimento_w
				and		ie_origem_proced	= ie_origem_proced_w;

				if (ie_forma_apresentacao_w	= 4) then
					dt_inicio_procedimento_w		:= (coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())) - (nr_min_duracao_w / 1440));
				end if;
				exception
					when others then
						dt_inicio_procedimento_w	:= null;
					end;

			end if;

			if (ie_medico_profissional_w = 'S') and (nr_seq_evento_p <> 545) and
				((coalesce(cd_medico_executor_w,'X') <> 'X') or (cd_medico_lanc_aut_pac_w IS NOT NULL AND cd_medico_lanc_aut_pac_w::text <> '')) then
				begin

				select	max(nr_seq_conselho)
				into STRICT	nr_seq_conselho_w
				from	pessoa_fisica
				where	cd_pessoa_fisica	= coalesce(cd_medico_lanc_aut_pac_w, cd_medico_executor_w);

				select	trim(both upper(max(sg_conselho)))
				into STRICT	sg_conselho_w
				from	conselho_profissional
				where	nr_sequencia	= nr_seq_conselho_w;


				if (coalesce(sg_conselho_w,'X')	<> 'CRM') and
					((cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') or (cd_medico_lanc_aut_pac_w IS NOT NULL AND cd_medico_lanc_aut_pac_w::text <> '')) then
					cd_profissional_w	:= coalesce(cd_medico_lanc_aut_pac_w, cd_medico_executor_w);
					cd_medico_executor_w	:= null;
					cd_medico_lanc_aut_pac_w:= null;
				end if;

				end;
			end if;
	
			if	((coalesce(ie_regra_uso_w,'N') = 'S') or (coalesce(ie_regra_uso_w,'N') = 'A')) then

				SELECT * FROM obter_regra_qtde_proc_exec(nr_atendimento_p, cd_procedimento_w, ie_origem_proced_w, qt_lancamento_w, dt_execucao_w, cd_medico_propaci_w, ie_acao_excesso_w, qt_excedida_w, ds_erro_uso_w, cd_convenio_excesso_w, cd_categoria_excesso_w, nr_seq_proc_interno_ww, cd_categoria_w, cd_plano_convenio_w, coalesce(nr_interno_conta_w,nr_interno_conta_p), nr_cirurgia_propaci_w, nr_seq_exame_propaci_w, cd_setor_atendimento_w, null) INTO STRICT ie_acao_excesso_w, qt_excedida_w, ds_erro_uso_w, cd_convenio_excesso_w, cd_categoria_excesso_w;

				if (ie_acao_excesso_w = 'E') then
					if (qt_excedida_w   > 0) then

						if 	((qt_lancamento_w - qt_excedida_w) >= 0) then

							nr_seq_excedido_w := inserir_procedimento_paciente(cd_procedimento_w, qt_excedida_w, nr_seq_exame_w, nr_seq_proc_interno_ww, ie_origem_proced_w, cd_setor_atendimento_w, nr_atendimento_p, cd_estabelecimento_w, nm_usuario_p, null, 'S', cd_medico_propaci_w, coalesce(nr_seq_atepacu_proc_w,nr_seq_atepacu_w), dt_execucao_w, cd_convenio_w, cd_categoria_w, nr_seq_excedido_w);
							CALL atualiza_preco_procedimento(nr_seq_excedido_w, cd_convenio_w, nm_usuario_p);

							select 	max(nr_interno_conta)
							into STRICT	nr_conta_w
							from 	procedimento_paciente
							where 	nr_sequencia = nr_seq_excedido_w;
							--Excluido pela regra de uso da funcao Cadastro de Convenios
							ds_texto_w := substr(wheb_mensagem_pck.get_texto(306744),1,255);
							CALL excluir_matproc_conta(nr_seq_excedido_w, nr_conta_w, coalesce(cd_motivo_exc_conta_w, 12), ds_texto_w, 'P', nm_usuario_p);
							
							CALL ajustar_conta_vazia(nr_atendimento_p, nm_usuario_p);

							if ((qt_lancamento_w - qt_excedida_w) = 0) then
								nr_sequencia_w := 0;
								goto final;
							else
								qt_lancamento_w := qt_lancamento_w - qt_excedida_w;
							end if;
						end if;
					end if;

				elsif (ie_acao_excesso_w = 'P') then

					if (qt_excedida_w   >= qt_lancamento_w) then

						SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;

						cd_convenio_w	:= cd_convenio_glosa_w;
						cd_categoria_w	:= cd_categoria_glosa_w;

					else

						qt_lancamento_w:= qt_lancamento_w - qt_excedida_w;

						SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;

						nr_seq_excedido_w := inserir_procedimento_paciente(cd_procedimento_w, qt_excedida_w, nr_seq_exame_w, nr_seq_proc_interno_ww, ie_origem_proced_w, cd_setor_atendimento_w, nr_atendimento_p, cd_estabelecimento_w, nm_usuario_p, null, 'S', cd_medico_propaci_w, coalesce(nr_seq_atepacu_proc_w,nr_seq_atepacu_w), dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w, nr_seq_excedido_w);

						CALL atualiza_preco_procedimento(nr_seq_excedido_w, cd_convenio_glosa_w, nm_usuario_p);

						CALL ajustar_conta_vazia(nr_atendimento_p, nm_usuario_p);

					end if;

				end if;

			end if;

			if (coalesce(ie_utiliza_regra_uso_w,'N') = 'S') and (nr_seq_evento_p = 123) then
				select	obter_se_uso_qtde_proc(nr_atendimento_p, cd_procedimento_w, ie_origem_proced_w,
					qt_lancamento_w, cd_medico_executor_w, cd_setor_atendimento_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
					'3', nr_sequencia_w, ie_via_acesso_w, nr_interno_conta_ww,nr_seq_proc_interno_ww,cd_categoria_w,cd_plano_convenio_w, nr_seq_exame_propaci_w)
				into STRICT	ds_erro_ww
				;

				if (ds_erro_ww <> '') or (ds_erro_ww IS NOT NULL AND ds_erro_ww::text <> '') then
					nr_sequencia_w := 0;
					goto final;
				end if;
			end if;

			if (nr_seq_evento_p in (372,401,412,431)) then
				dt_execucao_w  := null;
			end if;

			if (nr_seq_evento_p = 381) then
				if (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '') then
					select coalesce(max(dt_liberacao),clock_timestamp()) 
					into STRICT dt_execucao_w 
					from ATENDIMENTO_PERDA_GANHO 
					where NR_SEQUENCIA = coalesce(somente_numero(ds_adicional_2_p),0) and NR_ATENDIMENTO = nr_atendimento_p;
				else
					dt_execucao_w  := coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp()));
				end if;
			end if;		

			if (nr_seq_evento_p	= 372) and (ds_adicional_2_p IS NOT NULL AND ds_adicional_2_p::text <> '')then
				begin
				dt_execucao_w	:= to_date(ds_adicional_2_p,'dd/mm/yyyy hh24:mi:ss');
				exception
					when others then
					dt_execucao_w	:= clock_timestamp();
				end;
			end if;

			ie_desfecho_w	:= obter_valor_param_usuario(935,144,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w);
			if (nr_seq_evento_p	= 251) and (ie_desfecho_w = 'S') then				
				begin
				if (ds_adicional_1_p IS NOT NULL AND ds_adicional_1_p::text <> '') then			
					dt_execucao_w	:= to_date(ds_adicional_1_p,'dd/mm/yyyy hh24:mi:ss');
				else
					dt_execucao_w := clock_timestamp();
				end if;
				exception
					when others then
					dt_execucao_w	:= clock_timestamp();
				end;
			end if;

			if (nr_seq_evento_p = 472) then

				select	max(ie_forma_apresentacao)
				into STRICT	ie_forma_apresentacao_w
				from	procedimento
				where	cd_procedimento		= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				if (ie_forma_apresentacao_w in (2,3,10,12,13)) then
					select	coalesce(obter_qte_proced_cirurgia(cd_procedimento_w, ie_origem_proced_w, dt_saida_local_w, dt_entrada_local_w),qt_lancamento_w)
					into STRICT	qt_lancamento_w
					;
				elsif (ie_forma_apresentacao_w = 11) then

					qt_lancamento_w	:= ((dt_saida_local_w-(1/86400)) - dt_entrada_local_w) * 24;

					if (mod(qt_lancamento_w,2) > 0) then
						qt_lancamento_w:= trunc(qt_lancamento_w) + 1;
					end if;

				end if;
			end if;

			-- OS 437116 (Fabricvio em 14/05/2012)
			ie_atualiza_medico_req_w:= obter_valor_param_usuario(916,926,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w);
			if (nr_seq_evento_p = 26) and (ie_atualiza_medico_req_w = 'S') then
				cd_medico_req_w:= cd_medico_resp_w;
			end if;

			if (cd_medico_lanc_aut_pac_w IS NOT NULL AND cd_medico_lanc_aut_pac_w::text <> '') then
				cd_medico_regra_w	:= cd_medico_lanc_aut_pac_w;
			end if;

			if (nr_seq_evento_p	in (539,586)) then
				ie_vincular_proc_princ_w	:= 'N';
			end if;

			/* OS 519423 */

			if (nr_seq_evento_p = 30) and (coalesce(qt_dias_primeira_prescr_w,0) > 0) then

				select 	coalesce(min(nr_prescricao),0)
				into STRICT	nr_primeira_prescr_w
				from 	prescr_medica
				where 	nr_atendimento = nr_atendimento_p;

				if (nr_primeira_prescr_w > 0) then

					dt_base_w:= coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp()));

					select 	coalesce(max(dt_prescricao),clock_timestamp())
					into STRICT	dt_primeira_prescr_w
					from 	prescr_medica
					where 	nr_prescricao = nr_primeira_prescr_w;

					if (dt_base_w < dt_primeira_prescr_w + qt_dias_primeira_prescr_w) then
						goto final;
					end if;
				end if;
			end if;



			if (nr_seq_evento_p in (26,40,241,535)) and (cd_espec_medica_w = 0) then

				select 	CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END ,
					coalesce(cd_medico_regra_w,cd_medico_executor_w)
				into STRICT	cd_conv_parametro_w,
					cd_medico_parametro_w
				;


				begin
				select 	coalesce(max(ie_atualiza_func_medico),'N')
				into STRICT	ie_atualiza_func_medico_w
				from 	convenio_estabelecimento
				where 	cd_convenio = cd_conv_parametro_w
				and 	cd_estabelecimento = cd_estabelecimento_w;
				exception
				when others then
					ie_atualiza_func_medico_w := 'N';
				end;

				
				if (ie_atualiza_func_medico_w = 'R') then
					SELECT * FROM obter_proced_espec_medica(cd_estabelecimento_w, cd_conv_parametro_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, ie_clinica_w, cd_setor_atendimento_w, cd_espec_medica_w, ie_funcao_medico_ww, cd_medico_parametro_w, nr_seq_proc_interno_ww, ie_tipo_atendimento_w) INTO STRICT cd_espec_medica_w, ie_funcao_medico_ww;
				end if;
				
				if (coalesce(cd_espec_medica_w,0) = 0) then
					if (cd_medico_resp_w = cd_medico_executor_w) then -- se for o medico do atendimento
						select 	obter_espec_medico_atend(nr_atendimento_p, cd_medico_executor_w, 'C')
						into STRICT	cd_espec_medica_w
						;
					end if;
				end if;
				
				if (ie_especial_proc_exec_w = 'S') and (coalesce(cd_espec_medica_w,0) = 0) then
					select 	obter_especialidade_medico(coalesce(cd_medico_regra_w,cd_medico_executor_w),'C')
					into STRICT	cd_espec_medica_w
					;
				end if;

			end if;

      if (nr_seq_evento_p = 586) and (cd_tipo_agenda_w = 3) and (ie_especialidade_agenda_w = 'S') then	
						cd_espec_medica_w := coalesce(cd_especialidade_agendamento_w,cd_especialidade_age_cons_w);
			end if;

      if (nr_seq_evento_p = 123) then
          cd_medico_repasse_w	:= GET_MED_REPASSE_BY_EVOLUCAO(nr_sequencia_p);
          if (cd_medico_repasse_w IS NOT NULL AND cd_medico_repasse_w::text <> '') then
              cd_medico_executor_w := cd_medico_repasse_w;
          end if;
      end if;
																	
			insert into procedimento_paciente(
				nr_sequencia     	,
				nr_atendimento          ,
				dt_entrada_unidade      ,
				cd_procedimento         ,
				dt_conta                ,
				dt_procedimento         ,
				qt_procedimento         ,
				dt_atualizacao          ,
				nm_usuario              ,
				cd_medico               ,
				cd_convenio             ,
				cd_categoria            ,
				tx_medico               ,
				tx_anestesia            ,
				tx_procedimento         ,
				cd_acao                 ,
				cd_medico_executor      ,
				cd_setor_atendimento    ,
				ie_origem_proced        ,
				ie_valor_informado      ,
				nm_usuario_original     ,
				cd_setor_receita	,
				cd_situacao_glosa	,
				ie_funcao_medico	,
				cd_cgc_prestador	,
				nr_doc_convenio		,
				nr_seq_proc_princ	,
				qt_porte_anestesico	,
				cd_procedimento_princ	,
				dt_procedimento_princ,
				nr_seq_atepacu,
				ie_auditoria,
				ds_observacao,
				nr_seq_exame,
				cd_senha,
				cd_atividade_prof_bpa,
				cd_medico_req,
				nr_prescricao,
				ie_tipo_atend_bpa,
				ie_grupo_atend_bpa,
				nr_seq_regra_lanc,
				ie_proc_princ_atend,
				ie_via_acesso,
				ie_tecnica_utilizada,
				ie_integracao,
				ie_tipo_guia,
				nr_interno_conta,
				cd_pessoa_fisica,
				nr_cirurgia,
				nr_seq_proc_interno,
				nr_seq_reg_template,
				dt_inicio_procedimento,
				cd_doenca_cid,
				cd_especialidade,
				nr_seq_lanc_acao)
			values (
				nr_sequencia_w  	,
				nr_atendimento_p        ,
				CASE WHEN nr_seq_evento_p=82 THEN  coalesce(dt_entrada_unidade_intern_w,clock_timestamp())  ELSE coalesce(dt_entrada_unidade_proc_w, coalesce(dt_entrada_unidade_w,clock_timestamp())) END , /* Coloquei os nvl OS 200195 */
				cd_procedimento_w       ,
				coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
				coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
				coalesce(qt_lancamento_w,1),
				clock_timestamp()                 ,
				nm_usuario_p            ,
				cd_medico_executor_w    ,
				CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END ,
				CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END ,
				100			,
				100			,
				--decode(tx_procedimento_w,100,tx_proc_propaci_w,tx_procedimento_w),
				coalesce(tx_procedimento_w, coalesce(tx_proc_propaci_w,100)),
				'1'				,
				coalesce(cd_medico_regra_w,cd_medico_executor_w),
				cd_setor_atendimento_w  ,
				ie_origem_proced_w	,
				'N'			,
				nm_usuario_p            ,
				cd_setor_atendimento_w  ,
				0 				,
				ie_funcao_medico_w		,
				coalesce(cd_cnpj_prestador_w,cd_cgc_w),
				CASE WHEN ie_regra_guia_w='RC' THEN nr_doc_convenio_w WHEN ie_regra_guia_w='RT' THEN  null  ELSE nr_doc_propaci_w END ,
				CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN  CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE nr_sequencia_p END   ELSE null END ,
				CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE qt_porte_anestesico_w END ,
				CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE cd_proc_propaci_w END ,
				dt_proc_propaci_w,
				CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w  ELSE coalesce(nr_seq_atepacu_proc_w,nr_seq_atepacu_w) END ,
				'N',
				CASE WHEN 				  nr_seq_evento_p=30 THEN  obter_desc_expressao(346476) || ' '  || nr_seq_regra_w || 						' ' || obter_desc_expressao(614660) || ' ' || nr_seq_evento_p || 						' ' || obter_desc_expressao(346473) || ' ' || CASE WHEN nr_prescr_w=0 THEN coalesce(somente_numero(ds_adicional_3_p),0)  ELSE nr_prescr_w END  WHEN 				  nr_seq_evento_p=332 THEN  obter_desc_expressao(346476) || ' '  || nr_seq_regra_w || 						 ' ' || obter_desc_expressao(614660) || ' ' || nr_seq_evento_p || 						 ' ' || obter_desc_expressao(346493) || ' ' || ds_adicional_1_p WHEN 				  nr_seq_evento_p=557 THEN  obter_desc_expressao(330290) || ' ' || obter_perfil_ativo|| 						 ' ' || obter_desc_expressao(335429)  WHEN 				  nr_seq_evento_p=123 THEN  obter_desc_expressao(346476) || ' ' || nr_seq_regra_w || 						 ' ' || obter_desc_expressao(614660) || ' ' || nr_seq_evento_p|| 						 ' ' || obter_desc_expressao(289676) || ': ' || cd_evolucao_w  ELSE obter_desc_expressao(346476) || ' ' || nr_seq_regra_w || 					' ' || obter_desc_expressao(614660) || ' ' || nr_seq_evento_p END ,
				nr_seq_exame_w,
				cd_senha_w,
				cd_atividade_prof_bpa_w,
				cd_medico_req_w,
				CASE WHEN nr_seq_evento_p=34 THEN  nr_prescricao_w WHEN nr_seq_evento_p=557 THEN nr_prescricao_w WHEN nr_seq_evento_p=30 THEN nr_prescr_gatilho_w  ELSE null END ,
				ie_tipo_atend_bpa_w,
				ie_grupo_atend_bpa_w,
				nr_seq_regra_w,
				ie_proc_princ_atend_w,
				ie_via_acesso_w,
				null,
        ie_integracao_w, ie_tipo_guia_w, CASE WHEN nr_interno_conta_ww=0 THEN  null  ELSE nr_interno_conta_ww END ,
				coalesce(cd_profissional_regra_w, cd_profissional_w),
				CASE WHEN nr_seq_evento_p=34 THEN CASE WHEN ie_vincula_cirur_lanc_w='S' THEN nr_cirurgia_propaci_w  ELSE null END   ELSE nr_cirurgia_w END ,
				nr_seq_proc_interno_ww,
				nr_seq_reg_template_w,
				dt_inicio_procedimento_w,
				substr(cd_cid_doenca_w,1,4),
				CASE WHEN coalesce(cd_espec_medica_w,0)=0 THEN  null  ELSE cd_espec_medica_w END ,
				nr_seq_acao_regra_w);

			<<final>>

			if (nr_sequencia_w > 0) then
				CALL atualiza_preco_procedimento(
					nr_sequencia_w, cd_convenio_w, nm_usuario_p);
					
				CALL ajustar_conta_vazia_sem_commit(nr_atendimento_p, nm_usuario_p);

				/* francisco - os 55599 - 26/07/07 - gerar autorizacao */

				begin
				select	count(*)
				into STRICT	cont_w
				from	regra_gerar_autorizacao
				where	ie_evento	= 'LA'
				and	ie_tipo_autorizacao in ('3','6')
				and	cd_convenio	= coalesce(cd_convenio_w,obter_convenio_atendimento(nr_atendimento_p))
				and	coalesce(ie_situacao, 'A') = 'A';

				if (cont_w > 0) and (coalesce(ie_gerar_autor_w,'S') = 'S') then
					CALL gerar_autor_regra(nr_atendimento_p,null,nr_sequencia_w,null,null,null,'LA',nm_usuario_p,null,nr_seq_proc_interno_ww,null,null,null,null,'','','');
				end if;
				exception
					when others then
					null;
				end;

			end if;
			end;
		else
			begin
			
			/* verifica se procedimento de alta ja foi executado    bola 08072002 */

			begin
			qt_mat_alta_w	:= 0;
			if (nr_seq_evento_p = 36) then
				begin
				select 	count(*)
				into STRICT	qt_mat_alta_w
				from	material_atend_paciente
				where	nr_atendimento	= nr_atendimento_p
				and	cd_material	= cd_material_w;
				exception
					when others then
					qt_mat_alta_w	:= 0;
				end;
			end if;
			end;

			select	coalesce(CASE WHEN nr_seq_evento_p=34 THEN CASE WHEN ie_vincula_cirur_lanc_w='S' THEN nr_cirurgia_propaci_w  ELSE null END   ELSE nr_cirurgia_w END ,0)
			into STRICT	nr_cirurgia_ww
			;

			if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
				ie_consiste_item_ww	:= consiste_regra_lanc_aut_pac(nr_atendimento_p, coalesce(nr_interno_conta_w,nr_interno_conta_p), cd_material_w, null,
						ie_consiste_item_w, ie_consiste_proc_int_w, nr_seq_lanc_proc_interno_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_seq_regra_w, nr_seq_acao_regra_w,
						nm_usuario_p,cd_estabelecimento_w, cd_medico_executor_w, nr_cirurgia_ww,cd_setor_atendimento_w);
			else		
				ie_consiste_item_ww	:= 'N';		
			end if;

			if (qt_mat_alta_w	= 0) and (ie_consiste_item_ww = 'S') and (ie_gerar_lanc_item_exc_w = 'S') then
				begin
				if (ie_local_estoque_w = 'N') then
					cd_local_estoque_w	:= null;
				elsif (ie_local_estoque_w = 'S') then
					cd_local_estoque_w	:= cd_local_estoque_p;
				elsif (ie_local_estoque_w = 'U') then
					begin
					select b.cd_local_estoque
					into STRICT 	cd_local_estoque_w
					from setor_atendimento b, usuario a
					where b.cd_setor_atendimento 	= a.cd_setor_atendimento
					and a.nm_usuario		= nm_usuario_p;
					exception
						when others then
						cd_local_estoque_w	:= null;
					end;
				elsif (ie_local_estoque_w = 'A') then

					select 	wheb_usuario_pck.get_cd_setor_atendimento
					into STRICT	cd_setor_ativo_w
					;

					begin
					select	cd_local_estoque
					into STRICT	cd_local_estoque_w
					from 	setor_atendimento
					where	cd_setor_atendimento 	= cd_setor_ativo_w;
					exception
						when others then
						cd_local_estoque_w	:= null;
					end;
				elsif (ie_local_estoque_w = 'P') then
					begin
					select cd_local_estoque
					into STRICT 	cd_local_estoque_w
					from setor_atendimento
					where cd_setor_atendimento = cd_setor_atendimento_w;
					exception
						when others then
						cd_local_estoque_w	:= null;
					end;
				end if;
				/*felipe maritni em 18/02/2009 os128891*/

				select	coalesce(max(ie_dispara_kit_mat),'N')
				into STRICT	ie_dispara_kit_mat_w
				from	regra_lanc_automatico
				where	nr_sequencia	= nr_seq_regra_w;

				/* os 88248 fabricio em 02/04/2008 */

				if (coalesce(ie_dispara_kit_mat_w,'N') = 'S') then

					select 	coalesce(max(cd_kit_material),0)
					into STRICT	cd_kit_material_w
					from 	material_estab
					where 	cd_material = cd_material_w
					and 	cd_estabelecimento = cd_estabelecimento_w;

					if (cd_kit_material_w > 0) then

						select 	CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE nr_sequencia_p END   ELSE null END
						into STRICT	nr_seq_proc_princ_w
						;



						select 	CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w WHEN nr_seq_evento_p=26 THEN  nr_seq_atepacu_w WHEN nr_seq_evento_p=28 THEN  nr_seq_atepacu_w  ELSE coalesce(nr_seq_atepacu_proc_w,nr_seq_atepacu_w) END
						into STRICT	nr_seq_atepacu_ww
						;

						select	coalesce(max(ie_material_pai), 'S')
						into STRICT	ie_material_pai_w
						from	kit_material
						where	cd_kit_material		= cd_kit_material_w;

						ds_erro_w := gerar_kit_material_exec(cd_kit_material_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), nr_prescricao_w, 'N', cd_local_estoque_w, nr_seq_proc_princ_w, nr_seq_atepacu_ww, 'N', nm_usuario_p, qt_lancamento_w, ds_erro_w, null, nr_seq_regra_w);

					end if;

				end if;

				ie_mat_liberado_local_w := 'S';

				if (coalesce(cd_material_w,0) > 0) and (coalesce(cd_local_estoque_w,0) > 0) and (coalesce(ie_valida_liberacao_mat_w,'N') = 'S') then
					ie_mat_liberado_local_w := obter_local_valido(	cd_estabelecimento_w, cd_local_estoque_w, cd_material_w, '', ie_mat_liberado_local_w);
					select	substr(ds_local_estoque,1,40)
					into STRICT	ds_local_estoque_w
					from	local_estoque
					where	cd_local_estoque = cd_local_estoque_w;

					if (coalesce(ie_mat_liberado_local_w,'S') = 'N') and (nr_seq_evento_p = 34) then
						--O material #@CD_MATERIAL_P#@ nao esta liberado para o local de estoque #@DS_LOCAL_ESTOQUE_P#@
						ds_texto_w := substr(wheb_mensagem_pck.get_texto(306751,'CD_MATERIAL_P='|| cd_material_w ||
													';DS_LOCAL_ESTOQUE_P='|| ds_local_estoque_w ),1,255);
						insert into regra_lanc_aut_mat_consist(
									nr_sequencia,
									nr_seq_evento,
									nr_atendimento,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									cd_material,
									ds_consistencia)
								values (	nextval('regra_lanc_aut_mat_consist_seq'),
									nr_seq_evento_p,
									nr_atendimento_p,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									cd_material_w,
									ds_texto_w );
					end if;
				end if;

				if	((coalesce(cd_kit_material_w, 0) = 0) or
					((coalesce(cd_kit_material_w, 0) > 0) and (ie_material_pai_w = 'S'))) and (coalesce(ie_mat_liberado_local_w,'S') <> 'N') then
					begin

					select	nextval('material_atend_paciente_seq')
					into STRICT	nr_sequencia_w
					;

					if (nr_seq_evento_p in (372,381,401,412)) then
						dt_execucao_w	:= null;
					end if;

					if (nr_seq_evento_p	in (539,586)) then
						ie_vincular_proc_princ_w	:= 'N';
					end if;

					begin

					if	((coalesce(ie_regra_uso_w,'N') = 'M') or (coalesce(ie_regra_uso_w,'N') = 'A')) then

						SELECT * FROM obter_regra_uso_mat(nr_atendimento_p, cd_material_w, qt_lancamento_w, cd_setor_atendimento_w, ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_mat_w, ds_erro_uso_w, cd_categoria_w, cd_plano_convenio_w, null, cd_cnpj_prestador_w, coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())), null, nr_interno_conta_ww) INTO STRICT ie_acao_excesso_w, qt_excedida_w, nr_seq_regra_uso_mat_w, ds_erro_uso_w;

						if (ie_acao_excesso_w = 'E') then
							if (qt_excedida_w   > 0) then

								if 	((qt_lancamento_w - qt_excedida_w) >= 0) then

									nr_seq_excedido_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_w, dt_execucao_w, cd_convenio_w, cd_categoria_w, nr_seq_atepacu_w, nm_usuario_p, qt_excedida_w, cd_local_estoque_w, '1', 'N', nr_seq_excedido_w, null, null);

									CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);

									select 	max(nr_interno_conta)
									into STRICT	nr_conta_w
									from 	material_atend_paciente
									where 	nr_sequencia = nr_seq_excedido_w;
									--Excluido pela regra de uso da funcao Cadastro de Convenios
									ds_texto_w := substr(wheb_mensagem_pck.get_texto(306744),1,255);
									CALL excluir_matproc_conta(nr_seq_excedido_w, nr_conta_w, coalesce(cd_motivo_exc_conta_w, 12), ds_texto_w, 'M', nm_usuario_p);

									if ((qt_lancamento_w - qt_excedida_w) = 0) then
										nr_sequencia_w := 0;
										goto final_mat;
									else
										qt_lancamento_w := qt_lancamento_w - qt_excedida_w;
									end if;
								end if;
							end if;

						elsif (ie_acao_excesso_w = 'P') then

							if (qt_excedida_w   >= qt_lancamento_w) then

								SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;

								cd_convenio_w	:= cd_convenio_glosa_w;
								cd_categoria_w	:= cd_categoria_glosa_w;


							else

								qt_lancamento_w := qt_lancamento_w - qt_excedida_w;

								SELECT * FROM obter_convenio_particular_pf(cd_estabelecimento_w, cd_convenio_w, '', dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w) INTO STRICT cd_convenio_glosa_w, cd_categoria_glosa_w;

								nr_seq_excedido_w := inserir_material_atend_pac(nr_atendimento_p, null, cd_material_w, dt_execucao_w, cd_convenio_glosa_w, cd_categoria_glosa_w, coalesce(nr_seq_atepacu_proc_w, nr_seq_atepacu_w), nm_usuario_p, qt_excedida_w, cd_local_estoque_w, '1', 'N', nr_seq_excedido_w, null, null);

								CALL atualiza_preco_material(nr_seq_excedido_w, nm_usuario_p);

								CALL ajustar_conta_vazia(nr_atendimento_p, nm_usuario_p);

							end if;
						end if;

					end if;

					--LA Regra: #@NR_SEQ_REGRA_P#@ Evento: #@NR_SEQ_EVENTO_P#@ Prescr.: #@NR_PRESCRICAO_P#@
					ds_texto_w := substr(wheb_mensagem_pck.get_texto(306712,'NR_SEQ_REGRA_P='|| nr_seq_regra_w ||
											';NR_SEQ_EVENTO_P='|| nr_seq_evento_p ||
											';NR_PRESCRICAO_P='|| coalesce(somente_numero(ds_adicional_3_p),0) ),1,255);
					--LA Regra: #@NR_SEQ_REGRA_P#@ Evento: #@NR_SEQ_EVENTO_P#@
					ds_texto_ww := substr(wheb_mensagem_pck.get_texto(306715,'NR_SEQ_REGRA_P='|| nr_seq_regra_w ||
											';NR_SEQ_EVENTO_P='|| nr_seq_evento_p ),1,255);
					--LA Regra: #@NR_SEQ_REGRA_P#@ Evento: #@NR_SEQ_EVENTO_P#@ Conj: #@DS_ADICIONAL_P#@
					ds_texto_www := substr(wheb_mensagem_pck.get_texto(306763,'NR_SEQ_REGRA_P='|| nr_seq_regra_w ||
											';NR_SEQ_EVENTO_P='|| nr_seq_evento_p ||
											';DS_ADICIONAL_P='|| ds_adicional_1_p ),1,255);
											
					
					if (nr_seq_evento_p = 412) and (cd_setor_item_w IS NOT NULL AND cd_setor_item_w::text <> '') and (cd_setor_item_w > 0) then
						cd_setor_atendimento_w := cd_setor_item_w;
					end if;

					insert into material_atend_paciente(
						nr_sequencia     		,
						nr_atendimento          ,
						dt_entrada_unidade      ,
						cd_material             ,
						cd_material_exec	,
						dt_conta                ,
						dt_atendimento          ,
						qt_material             ,
						qt_executada            ,
						dt_atualizacao          ,
						nm_usuario              ,
						cd_unidade_medida   	,
						cd_convenio             ,
						cd_categoria            ,
						cd_acao                 ,
						cd_local_estoque		,
						cd_setor_atendimento    ,
						ie_valor_informado      ,
						nm_usuario_original     ,
						cd_setor_receita		,
						cd_situacao_glosa		,
						nr_doc_convenio		,
						nr_seq_proc_princ		,
						cd_proced_referencia,
						nr_seq_atepacu,		/* elemar 04/07/2001 */
						ie_auditoria,
						ds_observacao,
						nr_seq_regra_lanc,
						ie_tipo_guia,
						nr_interno_conta,
						nr_cirurgia,
						nr_seq_reg_template,
						cd_cgc_prestador)
					values (
						nr_sequencia_w  		,
						nr_atendimento_p        ,
						CASE WHEN nr_seq_evento_p=82 THEN  dt_entrada_unidade_intern_w  ELSE coalesce(dt_entrada_unidade_proc_w, dt_entrada_unidade_w) END ,
						cd_material_w           ,
						cd_material_w,
						coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
						coalesce(dt_execucao_w, coalesce(dt_alta_w,clock_timestamp())),
						qt_lancamento_w,
						qt_lancamento_w,
						clock_timestamp()                 ,
						nm_usuario_p            ,
						cd_unid_medida_w		,
						CASE WHEN nr_interno_conta_ww=0 THEN  cd_convenio_w  ELSE cd_convenio_conta_w END ,
						CASE WHEN nr_interno_conta_ww=0 THEN  cd_categoria_w  ELSE cd_categoria_conta_w END ,
						'1'			      ,
						cd_local_estoque_w      ,
						coalesce(cd_setor_atendimento_proc_w, cd_setor_atendimento_w)  ,
						'N'				,
						nm_usuario_p            ,
						cd_setor_atendimento_w  ,
						0				,
						CASE WHEN ie_regra_guia_w='RC' THEN nr_doc_convenio_w WHEN ie_regra_guia_w='RT' THEN  null  ELSE nr_doc_propaci_w END , --Alterado por lhalves em 10/12/2014 - OS 822591
						CASE WHEN coalesce(ie_vincular_proc_princ_w,'S')='S' THEN CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE nr_sequencia_p END   ELSE null END ,
						CASE WHEN nr_seq_propaci_w=0 THEN  null  ELSE cd_proc_propaci_w END ,
						CASE WHEN nr_seq_evento_p=82 THEN  nr_seq_atepacu_intern_w  ELSE coalesce(nr_seq_atepacu_proc_w, nr_seq_atepacu_w) END     ,
						'N',
						CASE WHEN nr_seq_evento_p=30 THEN  ds_texto_w WHEN nr_seq_evento_p=332 THEN ds_texto_www  ELSE ds_texto_ww END ,
						nr_seq_regra_w, ie_tipo_guia_w, CASE WHEN nr_interno_conta_ww=0 THEN  null  ELSE nr_interno_conta_ww END ,
						--nr_cirurgia_w,
						CASE WHEN nr_seq_evento_p=34 THEN CASE WHEN ie_vincula_cirur_lanc_mat_w='S' THEN nr_cirurgia_propaci_w  ELSE nr_cirurgia_w END   ELSE nr_cirurgia_w END ,
						nr_seq_reg_template_w,
						cd_cnpj_prestador_w);
					exception
						when 	others then
						nr_sequencia_w := 0;
					end;

					<<final_mat>>

					if (coalesce(ie_atualiza_kit_w,'N') = 'S') and
						((coalesce(cd_kit_material_w, 0) > 0) and (ie_material_pai_w = 'S')) then
						
						update	material_atend_paciente
						set 	cd_kit_material = cd_kit_material_w
						where 	nr_sequencia = nr_sequencia_w;
					end if;

					end;
				end if;

				if (nr_sequencia_w > 0) and (nr_seq_evento_p <> 12) then /*and
					(nr_seq_evento_p <> 123) then */
					CALL atualiza_preco_material(nr_sequencia_w, nm_usuario_p);

					/* francisco - os 55599 - 26/07/07 - gerar autorizacao */

					begin
					select	count(*)
					into STRICT	cont_w
					from	regra_gerar_autorizacao
					where	ie_evento	= 'LA'
					and	ie_tipo_autorizacao = '4'
					and	cd_convenio	= coalesce(cd_convenio_w,obter_convenio_atendimento(nr_atendimento_p))
					and	coalesce(ie_situacao, 'A') = 'A';

					if (cont_w > 0) and (coalesce(ie_gerar_autor_w,'S') = 'S') then
						CALL gerar_autor_regra(nr_atendimento_p,nr_sequencia_w,null,null,null,null,'LA',nm_usuario_p,null,null,null,null,null,null,'','','');
					end if;
					exception
						when others then
						null;
					end;
				end if;
				
				if (nr_seq_evento_p = 412) and (cd_setor_item_w IS NOT NULL AND cd_setor_item_w::text <> '') and (cd_setor_item_w > 0) then
					update 	material_atend_paciente
					set 	cd_setor_atendimento = cd_setor_item_w
					where	nr_sequencia = nr_sequencia_w;					
				end if;
				
				end;
			end if;
			end;
		end if;
		end;
		
		<<final_cur>>
		qt_proc_mat_w := 0;
		
	end loop;
	close c02;
end loop;


															

if (nr_seq_evento_p = 251) and (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and
	((coalesce(ie_gerar_pacote_alta_w,'N') = 'S') or
	((coalesce(ie_gerar_pacote_alta_w,'N') = 'P') and (ie_tipo_atendimento_w = 3)) or
	((coalesce(ie_gerar_pacote_alta_w,'N') = 'R') and (obter_regra_pacote_alta(cd_estabelecimento_w,ie_tipo_atendimento_w) = 'S'))) then
	open c05;
		loop
		fetch c05 into
			nr_conta_pacote_w,
			cd_convenio_parametro_w,
			cd_categoria_parametro_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
		begin

		select	coalesce(max(ie_permite_gerar_pacote),'N')
		into STRICT	ie_permite_gerar_pacote_w
		from   	categoria_convenio
		where  	cd_convenio	= cd_convenio_parametro_w
		and    	cd_categoria	= cd_categoria_parametro_w;

		if (coalesce(ie_permite_gerar_pacote_w,'N') = 'S') and (cd_convenio_w  = cd_convenio_parametro_w) and (cd_categoria_w = cd_categoria_parametro_w) then

			CALL calcular_pacote(nr_atendimento_p,
				nr_conta_pacote_w,
				cd_convenio_parametro_w,
				cd_categoria_parametro_w,
				nm_usuario_p,
				'S','S','S','S','N');
		end if;
		end;
	end loop;
	close c05;
end if;

if (nr_seq_evento_p = 34) and (coalesce(nr_seq_propaci_w,0) > 0) and (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_sequencia_prescricao_w,0) > 0) then
	select	max(cd_procedimento),
			max(nr_seq_proc_interno)
	into STRICT	cd_proced_prescrito_w,
			nr_seq_proc_interno_w
	from	prescr_procedimento
	where	nr_sequencia = nr_sequencia_prescricao_w
	and		nr_prescricao = nr_prescricao_w;

	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		-- Remover o procedimento interno (principal) da conta
		ie_excluir_princ_conta_w	:= 'N';

		open c04;
		loop
		fetch c04 into
			ie_excluir_princ_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			ie_excluir_princ_conta_w	:= ie_excluir_princ_conta_w;
			end;
		end loop;
		close c04;

		if (ie_excluir_princ_conta_w = 'S')then
			select	coalesce(max('N'), ie_excluir_princ_conta_w)
			into STRICT	ie_excluir_princ_conta_w
			from	procedimento_paciente
			where	nr_seq_proc_princ = nr_seq_propaci_w
			and		nr_sequencia_prescricao = nr_sequencia_prescricao_w
			and		nr_prescricao = nr_prescricao_w;

			if (ie_excluir_princ_conta_w = 'S')then
				delete from procedimento_paciente
				where	nr_sequencia = nr_seq_propaci_w;
			else
				ds_texto_w := substr(wheb_mensagem_pck.get_texto(306765),1,255); --Nao deletado pois possui vinculos
				update	procedimento_paciente
				set		ds_observacao = ds_observacao || ' ('|| ds_texto_w ||') '
				where	nr_sequencia = nr_seq_propaci_w;
			end if;	
		end if;
	end if;
end if;

begin
if (nr_seq_evento_p = 26) then
   CALL ajustar_conta_vazia(nr_atendimento_p,nm_usuario_p);
end if;
exception
when others then
qt_erro_w:=1;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lancamento_automatico ( nr_atendimento_p bigint, cd_local_estoque_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_sequencia_p bigint, ds_adicional_1_p text, ds_adicional_2_p text, ds_adicional_3_p text, ds_adicional_4_p text, nr_interno_conta_p bigint) FROM PUBLIC;

