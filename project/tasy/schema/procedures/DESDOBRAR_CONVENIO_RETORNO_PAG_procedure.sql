-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE guias AS (	
			nr_sequencia		convenio_retorno_item.nr_sequencia%type,
			vl_pago			convenio_retorno_item.vl_pago%type,
			vl_adicional		convenio_retorno_item.vl_adicional%type,
			vl_pago_calc		convenio_retorno_item.vl_pago%type,
			vl_adic_calc		convenio_retorno_item.vl_adicional%type,
			vl_original		convenio_retorno_item.vl_pago%type,
			vl_original_calc	convenio_retorno_item.vl_pago%type,
			vl_pago_novo		convenio_retorno_item.vl_pago%type,
			vl_adic_novo		convenio_retorno_item.vl_pago%type,
			vl_original_novo	convenio_retorno_item.vl_pago%type,
			vl_guia			convenio_retorno_item.vl_guia%type,
			vl_amenor		convenio_retorno_item.vl_amenor%type,
			vl_amenor_calc		convenio_retorno_item.vl_amenor%type,
			vl_amenor_novo		convenio_retorno_item.vl_amenor%type
			);


CREATE OR REPLACE PROCEDURE desdobrar_convenio_retorno_pag (NR_SEQ_RETORNO_P bigint, vl_vinculado_p bigint, vl_retorno_p bigint, vl_saldo_p bigint, ie_forma_calculo_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
vl_saldo_w			double precision;
vl_vinculado_w			double precision;

i 				integer;
pr_peso_vinculado_w		double precision;
pr_peso_saldo_w			double precision;
nr_seq_retorno_w		bigint;
vl_tot_vinc_w   		double precision;
vl_dif_vinc_w 			double precision;

vl_tot_vinc_ant_w   		double precision;
vl_tot_vinc_nov_w   		double precision;

vl_sub_dif_w			double precision;

ds_valores_orig_w		convenio_retorno_item.ds_valores_originais%type;
ds_valores_orig_item_w		convenio_retorno_glosa.ds_valores_originais%type;

nr_seq_guia_w 			convenio_retorno_item.nr_sequencia%type;
nr_seq_guia_novo_w		convenio_retorno_item.nr_sequencia%type;
nr_seq_guia_atual_w		convenio_retorno_item.nr_sequencia%type;
vl_guia_w			convenio_retorno_item.vl_guia%type;
			
type guias_v is table of guias index by integer;
guias_w		guias_v;

/* 
	Variaveis relacionadas ao desdobramento dos itens 
	
	--------------------------------------------------
	
	Variables related to billing form's item splitting.
*/
vl_amaior_calc_w			convenio_retorno_glosa.vl_amaior%type;
vl_arecuperar_calc_w			convenio_retorno_glosa.vl_arecuperar%type;
vl_cobrado_calc_w			convenio_retorno_glosa.vl_cobrado%type;
vl_desconto_item_calc_w			convenio_retorno_glosa.vl_desconto_item%type;
vl_glosa_calc_w				convenio_retorno_glosa.vl_glosa%type;
vl_informado_calc_w			convenio_retorno_glosa.vl_informado%type;
vl_liberado_calc_w			convenio_retorno_glosa.vl_liberado%type;
vl_pago_dig_calc_w			convenio_retorno_glosa.vl_pago_digitado%type;
vl_reapresentacao_calc_w		convenio_retorno_glosa.vl_reapresentacao%type;
vl_repasse_item_calc_w			convenio_retorno_glosa.vl_repasse_item%type;
vl_saldo_reap_calc_w			convenio_retorno_glosa.vl_saldo_reap%type;

vl_amaior_calc_novo_w			convenio_retorno_glosa.vl_amaior%type;
vl_arecuperar_calc_novo_w		convenio_retorno_glosa.vl_arecuperar%type;
vl_cobrado_calc_novo_w			convenio_retorno_glosa.vl_cobrado%type;
vl_desconto_item_calc_novo_w		convenio_retorno_glosa.vl_desconto_item%type;
vl_glosa_calc_novo_w			convenio_retorno_glosa.vl_glosa%type;
vl_informado_calc_novo_w		convenio_retorno_glosa.vl_informado%type;
vl_liberado_calc_novo_w			convenio_retorno_glosa.vl_liberado%type;
vl_pago_dig_calc_novo_w			convenio_retorno_glosa.vl_pago_digitado%type;
vl_reapresentacao_calc_novo_w		convenio_retorno_glosa.vl_reapresentacao%type;
vl_repasse_item_calc_novo_w		convenio_retorno_glosa.vl_repasse_item%type;
vl_saldo_reap_calc_novo_w		convenio_retorno_glosa.vl_saldo_reap%type;

cursor_guias CURSOR FOR
SELECT 	nr_sequencia,
	nr_interno_conta,
	cd_autorizacao,
	coalesce(vl_pago,0) 			vl_pago,
	coalesce(vl_adicional,0)		vl_adicional,
	vl_guia 			vl_guia,
	coalesce(vl_adequado, 0) 		vl_adequado,
	coalesce(vl_amenor, 0) 		vl_amenor,
	coalesce(vl_amenor_post, 0) 		vl_amenor_post,
	coalesce(vl_cambial_ativo, 0) 	vl_cambial_ativo,
	coalesce(vl_cambial_passivo, 0) 	vl_cambial_passivo,
	coalesce(vl_coparticipacao, 0) 	vl_coparticipacao,
	coalesce(vl_desconto, 0) 		vl_desconto,
	coalesce(vl_glosado, 0) 		vl_glosado,
	coalesce(vl_glosado_post, 0) 	vl_glosado_post,
	coalesce(vl_juros, 0) 		vl_juros,
	coalesce(vl_juros_cobr, 0) 		vl_juros_cobr,
	coalesce(vl_multa_cobr, 0) 		vl_multa_cobr,
	coalesce(vl_nota_credito, 0) 	vl_nota_credito,
	coalesce(vl_perdas, 0) 		vl_perdas,
	coalesce(vl_sinistro, 0) 		vl_sinistro,
	coalesce(vl_tributo_guia, 0) 	vl_tributo_guia
from	convenio_retorno_item
where	nr_seq_retorno = nr_seq_retorno_p
and	vl_pago > 0;

itens CURSOR FOR
SELECT	a.nr_sequencia				nr_sequencia,
	coalesce(nm_usuario_p, a.nm_usuario)		nm_usuario,
	coalesce(a.vl_amaior, 0)			vl_amaior,
	coalesce(a.vl_arecuperar, 0)			vl_arecuperar,
	coalesce(a.vl_cobrado, 0)			vl_cobrado,
	coalesce(a.vl_desconto_item, 0)		vl_desconto_item,
	coalesce(a.vl_glosa, 0)			vl_glosa,
	coalesce(a.vl_informado, 0)			vl_informado,
	coalesce(a.vl_liberado, 0)			vl_liberado,
	coalesce(a.vl_pago_digitado, 0)		vl_pago_digitado,
	coalesce(a.vl_reapresentacao, 0)		vl_reapresentacao,
	coalesce(a.vl_repasse_item, 0)		vl_repasse_item,
	coalesce(a.vl_saldo_reap, 0)			vl_saldo_reap
from	convenio_retorno_glosa a
where	a.nr_seq_ret_item = nr_seq_guia_atual_w
and (coalesce(a.vl_pago_digitado, 0) > 0 or coalesce(a.vl_amaior, 0) > 0);
BEGIN

if (coalesce(vl_saldo_p,0) = 0) then
    vl_saldo_w := vl_retorno_p - vl_vinculado_p;
else
    vl_saldo_w := vl_saldo_p;
end if;

if (coalesce(vl_retorno_p,0) > 0) and (coalesce(vl_saldo_w,0) > 0) and (coalesce(vl_vinculado_p,0) > 0) then

	/*
		Gera um novo retorno de convenio que recebera as guias desdobradas.
		Tabela referencia: CONVENIO_RETORNO
		
		--------------------------------------------------
		
		Creates a new insurance return record that will receive the billing forms that were splitted.
		Reference table: CONVENIO_RETORNO
		
	*/
	
	select	nextval('convenio_retorno_seq')
	into STRICT	nr_seq_retorno_w
	;

	insert into convenio_retorno(nr_sequencia,
			cd_convenio,
			cd_estabelecimento,
			dt_atualizacao,
			dt_retorno,
			ie_status_retorno,
			nm_usuario,
			nm_usuario_retorno,
			cd_convenio_particular,
			ds_lote_convenio,
			ds_observacao,
			dt_baixa_cr,
			dt_consistencia,
			dt_fim_glosa,
			dt_final,
			dt_inicial,
			dt_limite_glosa,
			dt_recebimento,
			dt_ref_preco,
			dt_vinculacao,
			ie_baixa_unica_ret,
			ie_doc_retorno,
			ie_tipo_glosa,
			nr_seq_cobranca,
			nr_seq_prot_adic,
			nr_seq_protocolo,
			nr_seq_ret_estorno,
			nr_seq_ret_origem,
			nr_seq_tipo)
		SELECT	nr_seq_retorno_w,
			cd_convenio,
			cd_estabelecimento,
			dt_atualizacao,
			dt_retorno,
			'R',
			nm_usuario,
			nm_usuario_retorno,
			cd_convenio_particular,
			ds_lote_convenio,
			ds_observacao,
			dt_baixa_cr,
			dt_consistencia,
			dt_fim_glosa,
			dt_final,
			dt_inicial,
			dt_limite_glosa,
			dt_recebimento,
			dt_ref_preco,
			dt_vinculacao,
			ie_baixa_unica_ret,
			ie_doc_retorno,
			ie_tipo_glosa,
			nr_seq_cobranca,
			nr_seq_prot_adic,
			nr_seq_protocolo,
			nr_seq_ret_estorno,
			nr_sequencia,
			nr_seq_tipo
		from	convenio_retorno
		where	nr_sequencia	= nr_seq_retorno_p;


	pr_peso_vinculado_w := round((vl_vinculado_p / vl_retorno_p)::numeric,18);
	pr_peso_saldo_w	    := round((vl_saldo_w / vl_retorno_p)::numeric,18);

	i := 0;
	/*
		Desdobra os valores de cada guia do retorno do convenio.
		O cursor 'cursor_guias' busca todos os registros (guias) que possuem um valor de pagamento (VL_PAGO) positivo.
		Tabela referencia: CONVENIO_RETORNO_ITEM
		
		--------------------------------------------------
		
		Splits each insurance return's billing form values.
		Cursor 'cursor_guias' queries every record (form) that has a positive payment value (VL_PAGO)
		Reference table: CONVENIO_RETORNO_ITEM
		
	*/
	
	for	r in cursor_guias loop
			
			if coalesce(r.vl_guia::text, '') = '' then
				select 	coalesce(max(x.vl_guia), 0)
				into STRICT	vl_guia_w
				from	conta_paciente_guia x
				where	x.nr_interno_conta = r.nr_interno_conta
				and	x.cd_autorizacao = r.cd_autorizacao;
			else
				vl_guia_w := r.vl_guia;
			end if;
			
			ds_valores_orig_w := ''
			||'VL_PAGO='		||	r.vl_pago		||';'
			||'VL_ADICIONAL='	||	r.vl_adicional		||';'
			||'VL_GUIA='		||	vl_guia_w		||';'
			||'VL_ADEQUADO='	||	r.vl_adequado		||';'
			||'VL_AMENOR='		||	r.vl_amenor		||';'
			||'VL_AMENOR_POST='	||	r.vl_amenor_post	||';'
			||'VL_CAMBIAL_ATIVO='	||	r.vl_cambial_ativo	||';'
			||'VL_CAMBIAL_PASSIVO='	||	r.vl_cambial_passivo	||';'
			||'VL_COPARTICIPACAO='	||	r.vl_coparticipacao	||';'
			||'VL_DESCONTO='	||	r.vl_desconto		||';'
			||'VL_GLOSADO='		||	r.vl_glosado		||';'
			||'VL_GLOSADO_POST='	||	r.vl_glosado_post	||';'
			||'VL_JUROS='		||	r.vl_juros		||';'
			||'VL_JUROS_COBR='	||	r.vl_juros_cobr		||';'
			||'VL_MULTA_COBR='	||	r.vl_multa_cobr		||';'
			||'VL_NOTA_CREDITO='	||	r.vl_nota_credito	||';'
			||'VL_PERDAS='		||	r.vl_perdas		||';'
			||'VL_SINISTRO='	||	r.vl_sinistro		||';'
			||'VL_TRIBUTO_GUIA='	||	r.vl_tributo_guia	;

			guias_w[i].nr_sequencia 	:= r.nr_sequencia;
			
			/*
				Valor pago / Paid value
			*/
			
			guias_w[i].vl_pago		:= r.vl_pago;
			guias_w[i].vl_pago_calc		:= round(( r.vl_pago * pr_peso_vinculado_w)::numeric, 	3);
			guias_w[i].vl_pago_novo		:= round(( r.vl_pago * pr_peso_saldo_w)::numeric,	3);
			
			if (guias_w[i].vl_pago_novo + guias_w[i].vl_pago_calc) <> guias_w[i].vl_pago then
				vl_sub_dif_w := guias_w[i].vl_pago - (guias_w[i].vl_pago_novo + guias_w[i].vl_pago_calc);
				guias_w[i].vl_pago_novo := guias_w[i].vl_pago_novo + vl_sub_dif_w;
			end if;
			
			/*
				Valor original / Original value
			*/
			
			guias_w[i].vl_original		:= r.vl_pago + r.vl_adicional;
			guias_w[i].vl_original_calc	:= ((r.vl_pago * pr_peso_vinculado_w) + (r.vl_adicional * pr_peso_vinculado_w));
			guias_w[i].vl_original_novo	:= ((r.vl_pago * pr_peso_saldo_w) + (r.vl_adicional * pr_peso_saldo_w));
			guias_w[i].vl_original_calc	:= round((guias_w[i].vl_original_calc)::numeric, 3);
			guias_w[i].vl_original_novo	:= round((guias_w[i].vl_original_novo)::numeric, 3);
			
			if (guias_w[i].vl_original_novo + guias_w[i].vl_original_calc) <> guias_w[i].vl_original then
				vl_sub_dif_w := guias_w[i].vl_original - (guias_w[i].vl_original_novo + guias_w[i].vl_original_calc);
				guias_w[i].vl_original_novo := guias_w[i].vl_original_novo + vl_sub_dif_w;
			end if;
			
			/*
				Valor adicional / Additional value
			*/
			
			guias_w[i].vl_adicional		:= r.vl_adicional;
			guias_w[i].vl_adic_calc		:= round((r.vl_adicional * pr_peso_vinculado_w)::numeric, 3);
			guias_w[i].vl_adic_novo		:= round((r.vl_adicional * pr_peso_saldo_w)::numeric, 3);
			
			if (guias_w[i].vl_adic_novo + guias_w[i].vl_adic_calc) <> guias_w[i].vl_adicional then
				vl_sub_dif_w := guias_w[i].vl_adicional - (guias_w[i].vl_adic_novo + guias_w[i].vl_adic_calc);
				guias_w[i].vl_adic_novo := guias_w[i].vl_adic_novo + vl_sub_dif_w;
			end if;

			/*
				Valor a menor / Pending value
			*/
			guias_w[i].vl_amenor		:= r.vl_amenor;
			guias_w[i].vl_amenor_calc	:= round((r.vl_amenor * pr_peso_vinculado_w)::numeric, 3);
			guias_w[i].vl_amenor_novo	:= round((r.vl_amenor * pr_peso_saldo_w)::numeric, 3);
			
			if (guias_w[i].vl_amenor_novo + guias_w[i].vl_amenor_calc) <> guias_w[i].vl_amenor then
				vl_sub_dif_w := guias_w[i].vl_amenor - (guias_w[i].vl_amenor_novo + guias_w[i].vl_amenor_calc);
				guias_w[i].vl_amenor_novo := guias_w[i].vl_amenor_novo + vl_sub_dif_w;
			end if;
			
			/*
				Valor da guia / Form value
			*/
			
			guias_w[i].vl_guia		:= r.vl_guia;
			
			/*
				Log para depuracao / Debugging log
			*/
			RAISE NOTICE 'pago: % / adic: % / pago calc: % / adic calc: % / Pago novo: % / Adic novo : % / A menor: % / A menor calc: % / peso vinculado: % / peso saldo: %', guias_w[i].vl_pago, guias_w[i].vl_adicional, guias_w[i].vl_pago_calc, guias_w[i].vl_adic_calc, guias_w[i].vl_pago_novo, guias_w[i].vl_adic_novo, guias_w[i].vl_amenor, guias_w[i].vl_amenor_calc, pr_peso_vinculado_w, pr_peso_saldo_w;

			update	convenio_retorno_item
			set	vl_pago 	        =       guias_w[i].vl_pago_calc,
				vl_adicional 	    	=       guias_w[i].vl_adic_calc,
				vl_amenor		= 	guias_w[i].vl_amenor_calc,
				nm_usuario	        =       nm_usuario_p,
				dt_atualizacao	    	=       clock_timestamp(),
				ds_valores_originais 	= 	ds_valores_orig_w
			where	nr_sequencia		=       guias_w[i].nr_sequencia;
			
			select	nextval('convenio_retorno_item_seq')
			into STRICT	nr_seq_guia_novo_w
			;
			
			nr_seq_guia_atual_w := guias_w[i].nr_sequencia;

			insert into convenio_retorno_item(
				nr_sequencia,
				nr_seq_retorno,
				vl_pago,
				vl_glosado,
				dt_atualizacao,
				nm_usuario,
				ie_glosa,
				nr_interno_conta,
				cd_autorizacao,
				ds_observacao,
				vl_adicional,
				nr_titulo,
				vl_amenor,
				vl_adequado,
				cd_motivo_glosa,
				ie_libera_repasse,
				ie_analisada,
				vl_desconto,
				cd_autorizacao_conv,
				cd_centro_custo_desc,
				nr_seq_motivo_desc,
				vl_perdas,
				vl_guia,
				ie_autorizacao,
				vl_amenor_post,
				vl_glosado_post,
				nr_seq_ret_item_orig,
				nr_seq_receb)
			SELECT	nr_seq_guia_novo_w,
				nr_seq_retorno_w,
				guias_w[i].vl_pago_novo,
				0, --a.vl_glosado,
				clock_timestamp(),
				nm_usuario_p,
				a.ie_glosa,
				a.nr_interno_conta,
				a.cd_autorizacao,
				a.ds_observacao,
				guias_w[i].vl_adic_novo,
				a.nr_titulo,
				guias_w[i].vl_amenor_novo,
				0, --a.vl_adequado,
				a.cd_motivo_glosa,
				a.ie_libera_repasse,
				a.ie_analisada,
				0, --a.vl_desconto,
				a.cd_autorizacao_conv,
				a.cd_centro_custo_desc,
				a.nr_seq_motivo_desc,
				a.vl_perdas,
				a.vl_guia,
				a.ie_autorizacao,
				0, --a.vl_amenor_post,
				0, --a.vl_glosado_post,
				guias_w[i].nr_sequencia,
				null
			from	convenio_retorno_item a
			where	a.nr_sequencia	= nr_seq_guia_atual_w;
			
			/*
				Desdobra os valores dos itens de cada guia
				Tabela referencia: CONVENIO_RETORNO_GLOSA
				
				--------------------------------------------------
				
				Splits each billing form's item values.
				Reference table: CONVENIO_RETORNO_GLOSA
				
			*/
			for item in itens loop
			
				ds_valores_orig_item_w := ''
				||'VL_AMAIOR='		||	item.vl_amaior		||';'
				||'VL_ARECUPERAR='	||	item.vl_arecuperar	||';'
				||'VL_COBRADO='		||	item.vl_cobrado		||';'
				||'VL_DESCONTO_ITEM='	||	item.vl_desconto_item	||';'
				||'VL_GLOSA='		||	item.vl_glosa		||';'
				||'VL_INFORMADO='	||	item.vl_informado	||';'
				||'VL_LIBERADO='	||	item.vl_liberado	||';'
				||'VL_PAGO_DIGITADO='	||	item.vl_pago_digitado	||';'
				||'VL_REAPRESENTACAO='	||	item.vl_reapresentacao	||';'
				||'VL_REPASSE_ITEM='	||	item.vl_repasse_item	||';'
				||'VL_SALDO_REAP='	||	item.vl_saldo_reap	;
			
				vl_amaior_calc_w		:=	round((item.vl_amaior 			* 	pr_peso_vinculado_w)::numeric, 3);
				vl_arecuperar_calc_w		:=	round((item.vl_arecuperar 		* 	pr_peso_vinculado_w)::numeric, 3);
				vl_cobrado_calc_w		:=	round((item.vl_cobrado 			* 	pr_peso_vinculado_w)::numeric, 3);
				vl_desconto_item_calc_w		:=	round((item.vl_desconto_item 		* 	pr_peso_vinculado_w)::numeric, 3);
				vl_glosa_calc_w			:=	round((item.vl_glosa 			* 	pr_peso_vinculado_w)::numeric, 3);	
				vl_informado_calc_w		:=	round((item.vl_informado 		* 	pr_peso_vinculado_w)::numeric, 3);
				vl_liberado_calc_w		:=	round((item.vl_liberado 		* 	pr_peso_vinculado_w)::numeric, 3);
				vl_pago_dig_calc_w		:=	round((item.vl_pago_digitado 		* 	pr_peso_vinculado_w)::numeric, 3);
				vl_reapresentacao_calc_w	:=	round((item.vl_reapresentacao 		* 	pr_peso_vinculado_w)::numeric, 3);
				vl_repasse_item_calc_w		:=	round((item.vl_repasse_item 		* 	pr_peso_vinculado_w)::numeric, 3);
				vl_saldo_reap_calc_w		:=	round((item.vl_saldo_reap 		* 	pr_peso_vinculado_w)::numeric, 3);
			
				vl_amaior_calc_novo_w		:=	round((item.vl_amaior			*	pr_peso_saldo_w)::numeric, 3);
				vl_arecuperar_calc_novo_w	:=	round((item.vl_arecuperar		*	pr_peso_saldo_w)::numeric, 3);
				vl_cobrado_calc_novo_w		:=	round((item.vl_cobrado			*	pr_peso_saldo_w)::numeric, 3);
				vl_desconto_item_calc_novo_w	:=	round((item.vl_desconto_item		*	pr_peso_saldo_w)::numeric, 3);
				vl_glosa_calc_novo_w		:=	round((item.vl_glosa			*	pr_peso_saldo_w)::numeric, 3);
				vl_informado_calc_novo_w	:=	round((item.vl_informado		*	pr_peso_saldo_w)::numeric, 3);
				vl_liberado_calc_novo_w		:=	round((item.vl_liberado			*	pr_peso_saldo_w)::numeric, 3);
				vl_pago_dig_calc_novo_w		:=	round((item.vl_pago_digitado		*	pr_peso_saldo_w)::numeric, 3);
				vl_reapresentacao_calc_novo_w	:=	round((item.vl_reapresentacao		*	pr_peso_saldo_w)::numeric, 3);
				vl_repasse_item_calc_novo_w	:=	round((item.vl_repasse_item		*	pr_peso_saldo_w)::numeric, 3);
				vl_saldo_reap_calc_novo_w	:=	round((item.vl_saldo_reap		*	pr_peso_saldo_w)::numeric, 3);
				
				update	convenio_retorno_glosa
				set	vl_amaior 		= vl_amaior_calc_w,
					vl_arecuperar 		= vl_arecuperar_calc_w,
					vl_cobrado 		= vl_cobrado_calc_w,
					vl_desconto_item 	= vl_desconto_item_calc_w,
					vl_glosa 		= vl_glosa_calc_w,
					vl_informado 		= vl_informado_calc_w,
					vl_liberado 		= vl_liberado_calc_w,
					vl_pago_digitado 	= vl_pago_dig_calc_w,
					vl_reapresentacao 	= vl_reapresentacao_calc_w,
					vl_repasse_item 	= vl_repasse_item_calc_w,
					vl_saldo_reap 		= vl_saldo_reap_calc_w,
					ds_valores_originais	= ds_valores_orig_item_w
				where	nr_sequencia 		= item.nr_sequencia;
				
				insert	into convenio_retorno_glosa(
					nr_sequencia,
					cd_autorizacao,
					cd_autorizacao_compl,
					cd_especialidade,
					cd_item_convenio,
					cd_material,
					cd_mat_tuss,
					cd_medico_exec,
					cd_motivo_glosa,
					cd_pessoa_fisica,
					cd_procedimento,
					cd_procedimento_loc,
					cd_proc_tuss,
					cd_resposta,
					cd_setor_atendimento,
					cd_setor_responsavel,
					ds_complemento,
					ds_justificativa,
					ds_observacao,
					ds_observacao_interna,
					dt_atualizacao,
					dt_atualizacao_nrec,
					dt_conta,
					dt_execucao,
					dt_integracao,
					ie_acao_glosa,
					ie_atualizacao,
					ie_custo_operacional,
					ie_emite_conta,
					ie_forma_agrupamento,
					ie_funcao_medico,
					ie_funcao_medico_partic,
					ie_glosa_geral,
					ie_origem_proced,
					nm_usuario,
					nm_usuario_nrec,
					nr_interno_conta,
					nr_seq_conpaci_ret_hist,
					nr_seq_matpaci,
					nr_seq_matpaci_partic,
					nr_seq_partic,
					nr_seq_propaci,
					nr_seq_propaci_partic,
					nr_seq_ret_item,
					nr_seq_retorno,
					nr_seq_trans_financ,
					nr_sequencia_item,
					qt_cobrada,
					qt_glosa,
					qt_informada,
					qt_liberada,
					vl_amaior,
					vl_arecuperar,
					vl_cobrado,
					vl_desconto_item,
					vl_glosa,
					vl_informado,
					vl_liberado,
					vl_pago_digitado,
					vl_reapresentacao,
					vl_repasse_item,
					vl_saldo_reap
				)
				SELECT	nextval('convenio_retorno_glosa_seq'),
					cd_autorizacao,
					cd_autorizacao_compl,
					cd_especialidade,
					cd_item_convenio,
					cd_material,
					cd_mat_tuss,
					cd_medico_exec,
					cd_motivo_glosa,
					cd_pessoa_fisica,
					cd_procedimento,
					cd_procedimento_loc,
					cd_proc_tuss,
					cd_resposta,
					cd_setor_atendimento,
					cd_setor_responsavel,
					ds_complemento,
					ds_justificativa,
					ds_observacao,
					ds_observacao_interna,
					clock_timestamp(),
					dt_atualizacao_nrec,
					dt_conta,
					dt_execucao,
					dt_integracao,
					ie_acao_glosa,
					ie_atualizacao,
					ie_custo_operacional,
					ie_emite_conta,
					ie_forma_agrupamento,
					ie_funcao_medico,
					ie_funcao_medico_partic,
					ie_glosa_geral,
					ie_origem_proced,
					item.nm_usuario,
					nm_usuario_nrec,
					nr_interno_conta,
					nr_seq_conpaci_ret_hist,
					nr_seq_matpaci,
					nr_seq_matpaci_partic,
					nr_seq_partic,
					nr_seq_propaci,
					nr_seq_propaci_partic,
					nr_seq_guia_novo_w,
					nr_seq_retorno_w,
					nr_seq_trans_financ,
					nr_sequencia_item,
					qt_cobrada,
					qt_glosa,
					qt_informada,
					qt_liberada,
					vl_amaior_calc_novo_w,
					vl_arecuperar_calc_novo_w,
					vl_cobrado_calc_novo_w,
					vl_desconto_item_calc_novo_w,
					vl_glosa_calc_novo_w,
					vl_informado_calc_novo_w,
					vl_liberado_calc_novo_w,
					vl_pago_dig_calc_novo_w,
					vl_reapresentacao_calc_novo_w,
					vl_repasse_item_calc_novo_w,
					vl_saldo_reap_calc_novo_w
				from	convenio_retorno_glosa
				where	nr_sequencia = item.nr_sequencia;
				
			end loop;

			i := i + 1;
	end loop;


end if;

update	convenio_retorno
set 	ie_status_retorno = 'C'
where	nr_sequencia = nr_seq_retorno_w;

select 	Obter_totais_guia_retorno(nr_seq_retorno_p, 'V')
into STRICT 	vl_tot_vinc_ant_w
;


if vl_tot_vinc_ant_w < vl_vinculado_p then

	vl_dif_vinc_w := vl_vinculado_p - vl_tot_vinc_ant_w;

	select 	max(nr_sequencia)
	into STRICT    nr_seq_guia_w
	from 	convenio_retorno_item
	where 	nr_seq_retorno = nr_seq_retorno_p
	and 	coalesce(vl_pago, 0) > 0;
	
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		update 	convenio_retorno_item
		set     vl_pago = vl_pago + vl_dif_vinc_w
		where 	nr_sequencia = nr_seq_guia_w;
	end if;
	
elsif vl_tot_vinc_ant_w > vl_vinculado_p then
	
	vl_dif_vinc_w := vl_tot_vinc_ant_w - vl_vinculado_p;

	select 	max(nr_sequencia)
	into STRICT    nr_seq_guia_w
	from 	convenio_retorno_item
	where 	nr_seq_retorno = nr_seq_retorno_p
	and 	coalesce(vl_pago, 0) > 0;
	
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		update 	convenio_retorno_item
		set     vl_pago = vl_pago - vl_dif_vinc_w
		where 	nr_sequencia = nr_seq_guia_w;
	end if;
	
end if;

select 	Obter_totais_guia_retorno(nr_seq_retorno_w, 'V')
into STRICT 	vl_tot_vinc_nov_w
;


if vl_tot_vinc_nov_w > vl_saldo_w then

	vl_dif_vinc_w := vl_tot_vinc_nov_w - vl_saldo_w;

	select 	max(nr_sequencia)
	into STRICT    nr_seq_guia_w
	from 	convenio_retorno_item
	where 	nr_seq_retorno = nr_seq_retorno_w
	and 	coalesce(vl_pago, 0) > 0;
	
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		update 	convenio_retorno_item
		set     vl_pago = vl_pago - vl_dif_vinc_w
		where 	nr_sequencia = nr_seq_guia_w;
	end if;
	
elsif vl_tot_vinc_nov_w < vl_saldo_w then

	vl_dif_vinc_w := vl_saldo_w - vl_tot_vinc_nov_w;

	select 	max(nr_sequencia)
	into STRICT    nr_seq_guia_w
	from 	convenio_retorno_item
	where 	nr_seq_retorno = nr_seq_retorno_w
	and 	coalesce(vl_pago, 0) > 0;
	
	if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
		update 	convenio_retorno_item
		set     vl_pago = vl_pago + vl_dif_vinc_w
		where 	nr_sequencia = nr_seq_guia_w;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desdobrar_convenio_retorno_pag (NR_SEQ_RETORNO_P bigint, vl_vinculado_p bigint, vl_retorno_p bigint, vl_saldo_p bigint, ie_forma_calculo_p text, nm_usuario_p text) FROM PUBLIC;

