-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_med_mat_assoc_rotina ( nr_prescricao_p bigint, nr_seq_rotina_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_seq_acum_w		bigint;
nr_agrup_acum_w		double precision;
cd_material_w		integer;
cd_unidade_medida_w	varchar(30);
qt_dose_w		double precision;
ds_observacao_w		varchar(255);
qt_conversao_w		double precision;
nr_sequencia_w		integer;
cd_intervalo_w		varchar(7);
ds_horarios_w		varchar(2000);
ds_horarios_ww		varchar(2000);
ds_horarios2_ww		varchar(2000);
nr_ocorrencia_w		bigint := 0;
cd_estabelecimento_w	smallint;
qt_total_disp_w		double precision;
cd_setor_atendimento_w	bigint;
ie_agrupador_w		smallint;
ds_erro_w		varchar(255);
ie_via_aplicacao_w	varchar(5);
dt_primeiro_horario_w	timestamp;
dt_prescricao_w		timestamp;
cd_motivo_baixa_w	smallint;
dt_baixa_w		timestamp;
ie_cobra_paciente_w	varchar(1);
qt_idade_min_w		real;
qt_idade_max_w		real;
qt_idade_pac_w		real;
ie_intervalo_fixo_w	varchar(1);/* Oraci em 07/01/2007 OS75094 */
dt_prev_execucao_w	timestamp;
nr_horas_validade_w	integer;/* Oraci em 21/01/2008 */
ie_regra_disp_w		varchar(1);/* Rafael em 15/3/8 OS86206 */
qt_hora_intervalo_w	smallint;
qt_min_intervalo_w	integer;
ie_checar_adep_w	varchar(1);

ie_marca_campo_w			varchar(1) := 'N';
ie_agora_acm_sn_w			varchar(15);
ie_agora_w					varchar(1) := 'N';
ie_acm_w					varchar(1)	:= 'N';
ie_se_necessario_w			varchar(1) := 'N';
ds_horarios_padrao_w		varchar(2000);

C01 CURSOR FOR
SELECT	nr_seq_acum_w + row_number() OVER () AS rownum,
	a.cd_material,
	a.cd_unidade_medida,
	a.qt_dose,
	a.cd_intervalo,
	a.DS_OBSERVACAO,
	a.ds_horarios,
	a.ie_via_aplicacao,
	coalesce(a.cd_motivo_baixa,0),
	CASE WHEN coalesce(a.cd_motivo_baixa::text, '') = '' THEN null  ELSE clock_timestamp() END ,
	CASE WHEN coalesce(a.cd_motivo_baixa::text, '') = '' THEN 'S'  ELSE 'N' END ,
	a.qt_idade_min,
	a.qt_idade_max,
	coalesce(a.ie_intervalo_fixo,'N'),
	coalesce(a.ie_checar_adep,'N'),
	CASE WHEN b.ie_tipo_material=1 THEN  2 WHEN b.ie_tipo_material=5 THEN  2  ELSE 1 END  ie_agrupador
from	material b,
	mat_prescr_rotina a
where	a.cd_material		= b.cd_material
and	a.nr_seq_rotina		= nr_seq_rotina_p
and	((cd_setor_atendimento_w = a.cd_setor_atendimento) or (coalesce(a.cd_setor_atendimento::text, '') = ''))
and	(((coalesce(qt_idade_pac_w::text, '') = '') or (coalesce(a.qt_idade_min::text, '') = '' and coalesce(a.qt_idade_max::text, '') = '')) or
	 ((qt_idade_pac_w IS NOT NULL AND qt_idade_pac_w::text <> '') and (qt_idade_pac_w between coalesce(a.qt_idade_min,qt_idade_pac_w) and coalesce(a.qt_idade_max,qt_idade_pac_w))));


BEGIN

ie_marca_campo_w			:= wheb_assist_pck.obterParametroFuncao(924,809);

select	cd_estabelecimento,
	dt_primeiro_horario,
	dt_prescricao,
	cd_setor_atendimento
into STRICT	cd_estabelecimento_w,
	dt_primeiro_horario_w,
	dt_prescricao_w,
	cd_setor_atendimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

select	coalesce(max(nr_sequencia),0),
	coalesce(max(nr_agrupamento),0)
into STRICT	nr_seq_acum_w, 
	nr_agrup_acum_w
from	prescr_material
where	nr_prescricao = nr_prescricao_p;

begin
select	obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A')
into STRICT	qt_idade_pac_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;
exception
when others then
	qt_idade_pac_w	:= 0;
end;

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	cd_material_w,
	cd_unidade_medida_w,
	qt_dose_w,
	cd_intervalo_w,
	ds_observacao_w,
	ds_horarios_w,
	ie_via_aplicacao_w,
	cd_motivo_baixa_w,
	dt_baixa_w,
	ie_cobra_paciente_w,
	qt_idade_min_w,
	qt_idade_max_w,
	ie_intervalo_fixo_w,
	ie_checar_adep_w,
	ie_agrupador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	
	ie_agora_w			:= 'N';
	ie_acm_w			:= 'N';
	ie_se_necessario_w	:= 'N';

	select	coalesce(max(qt_conversao),1)
	into STRICT	qt_conversao_w
	from	material_conversao_unidade
	where	cd_material		= cd_material_w
	and	cd_unidade_medida	= cd_unidade_medida_w;

	/* Oraci em 21/01/2008 */

	select	nr_horas_validade
	into STRICT	nr_horas_validade_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	select	obter_ocorrencia_intervalo(cd_intervalo_w, nr_horas_validade_w, 'O')
	into STRICT	nr_ocorrencia_w
	;

	SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), clock_timestamp(), 24, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_ww, ds_horarios2_ww;

	ds_horarios_ww	:= ds_horarios_ww || ds_horarios2_ww;
	if (ie_marca_campo_w = 'S') then
			 
			ie_agora_acm_sn_w	:= obter_se_interv_agora_acm_sn(cd_intervalo_w);
			 
			if (ie_agora_acm_sn_w = 'AGORA') then 
				ie_agora_w		:= 'S';
				ie_acm_w		:= 'N';
				ie_se_necessario_w	:= 'N';
				ds_horarios_padrao_w	:= to_char(clock_timestamp(),'hh24:mi');
			elsif (ie_agora_acm_sn_w = 'ACM') then 
				ie_agora_w		:= 'N';
				ie_acm_w		:= 'S';
				ie_se_necessario_w	:= 'N';
				ds_horarios_padrao_w	:= 'ACM';
			elsif (ie_agora_acm_sn_w = 'SN') then 
				ie_agora_w		:= 'N';
				ie_acm_w		:= 'N';
				ie_se_necessario_w	:= 'S';
				ds_horarios_padrao_w	:= 'SN';
			
			end if;			
			 
	end if;
	
	nr_agrup_acum_w := nr_agrup_acum_w + 1;

	Insert	into Prescr_material(
		nr_prescricao,
		nr_sequencia,
		ie_origem_inf,
		cd_material,
		cd_unidade_medida_dose,
		cd_unidade_medida,
		qt_dose,
		qt_unitaria,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		cd_intervalo,
		ds_observacao,
		ie_agrupador,
		ie_medicacao_paciente,
		ie_se_necessario,
		ie_urgencia,
		ie_suspenso,
		ie_utiliza_kit,
		ie_status_cirurgia,
		ie_bomba_infusao,
		ie_aplic_bolus, 
		ie_aplic_lenta, 
		ie_acm,
		cd_motivo_baixa,
		dt_baixa,
		qt_conversao_dose,
		ds_horarios,
		nr_ocorrencia,
		ie_via_aplicacao,
		ie_recons_diluente_fixo,
		ie_sem_aprazamento,
		ie_cobra_paciente,
		ie_intervalo_dif,
		hr_prim_horario,
		ie_checar_adep,
		nr_agrupamento)
	values (		
		nr_prescricao_p,
		nr_sequencia_w,
		'A',
		cd_material_w,
		cd_unidade_medida_w,
		cd_unidade_medida_w,
		qt_dose_w,
		dividir(qt_dose_w,qt_conversao_w),
		qt_dose_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_intervalo_w,
		ds_observacao_w,
		ie_agrupador_w,
		'N',
		ie_se_necessario_w,
		ie_agora_w,
		'N',
		'N',
		'GI',
		'N',
		'N',
		'N',
		ie_acm_w,
		cd_motivo_baixa_w,
		dt_baixa_w,
		qt_conversao_w,
		coalesce(ds_horarios_padrao_w, ds_horarios_w, ds_horarios_ww),
		nr_ocorrencia_w,
		ie_via_aplicacao_w,
		'N',
		'N',
		ie_cobra_paciente_w,
		ie_intervalo_fixo_w,
		to_char(dt_prev_execucao_w,'hh24:mi'),
		ie_checar_adep_w,
		nr_agrup_acum_w);

	SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, nr_sequencia_w, cd_intervalo_w, null, dividir(qt_dose_w,qt_conversao_w), null, nr_ocorrencia_w, null, '1', cd_unidade_medida_w, 1, qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w, 'N', 'N') INTO STRICT qt_dose_w, qt_total_disp_w, ie_regra_disp_w, ds_erro_w;
		
	update	prescr_material
	set	qt_material		= qt_dose_w,
		qt_total_dispensar	= qt_total_disp_w,
		ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
	where	nr_prescricao		= nr_prescricao_p
	and	nr_sequencia		= nr_sequencia_w;
end loop;
close C01;

commit;			

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_med_mat_assoc_rotina ( nr_prescricao_p bigint, nr_seq_rotina_p bigint, nm_usuario_p text) FROM PUBLIC;

