-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_c405_icmsipi ( nr_seq_controle_p bigint, nr_ecf_cx_p text) AS $body$
DECLARE


/*REGISTRO C470: ITENS DO DOCUMENTO FISCAL EMITIDO POR ECF (CÓDIGO 02 e2D).*/

-- VARIABLES
ie_gerou_dados_bloco_w	varchar(1) := 'N';

nr_seq_icmsipi_C405_w	fis_efd_icmsipi_C405.nr_sequencia%type;

qt_cursor_w 		bigint := 0;
nr_vetor_w  		bigint := 0;

-- USUARIO
nm_usuario_w usuario.nm_usuario%type;

/*Cursor que retorna as informações para o registro c405 restringindo pela sequencia da nota fiscal*/

c_reducao_z_ecf CURSOR FOR
	SELECT	distinct dt_doc,
		null nr_cro,
		null nr_crz,
		null nr_coo_fin,
		null vl_brt,
		null vl_gt_fin
	from	fis_efd_icmsipi_C460 a
	where 	a.nr_ecf_cx		= nr_ecf_cx_p
	and 	a.nr_seq_controle	= nr_seq_controle_p;

/*Criação do array com o tipo sendo do cursor eespecificado - c_itens_cupom_fiscal*/

type reg_c_reducao_z_ecf is table of c_reducao_z_ecf%RowType;
vet_c_reducao_z_ecf reg_c_reducao_z_ecf;

/*Criação do array com o tipo sendo da tabela eespecificada - fis_efd_icmsipi_C405 */

type registro is table of fis_efd_icmsipi_C405%rowtype index by integer;
fis_registros_w registro;

BEGIN
/*Obteção do usuário ativo no tasy*/

nm_usuario_w := Obter_Usuario_Ativo;

open c_reducao_z_ecf;
loop
fetch c_reducao_z_ecf bulk collect into vet_c_reducao_z_ecf limit 1000;
	for i in 1 .. vet_c_reducao_z_ecf.Count loop
		begin

		/*Incrementa a variavel para o array*/

		qt_cursor_w:=	qt_cursor_w + 1;

		if (ie_gerou_dados_bloco_w = 'N') then
			ie_gerou_dados_bloco_w := 'S';
		end if;

		CALL fis_gerar_reg_C490_icmsipi(	nr_seq_controle_p,
						nr_ecf_cx_p,
						vet_c_reducao_z_ecf[i].dt_doc);

		/*Busca da sequencia da tabela especificada - fis_efd_icmsipi_C405 */

		select	nextval('fis_efd_icmsipi_c405_seq')
		into STRICT	nr_seq_icmsipi_C405_w
		;

		/*Inserindo valores no array para realização do forall posteriormente*/

		fis_registros_w[qt_cursor_w].nr_sequencia         := nr_seq_icmsipi_C405_w;
		fis_registros_w[qt_cursor_w].dt_atualizacao       := clock_timestamp();
		fis_registros_w[qt_cursor_w].nm_usuario           := nm_usuario_w;
		fis_registros_w[qt_cursor_w].dt_atualizacao_nrec  := clock_timestamp();
		fis_registros_w[qt_cursor_w].nm_usuario_nrec      := nm_usuario_w;
		fis_registros_w[qt_cursor_w].cd_reg               := 'C405';
		fis_registros_w[qt_cursor_w].dt_doc		  := vet_c_reducao_z_ecf[i].dt_doc;
  		fis_registros_w[qt_cursor_w].nr_cro		  := vet_c_reducao_z_ecf[i].nr_cro;
		fis_registros_w[qt_cursor_w].nr_crz		  := vet_c_reducao_z_ecf[i].nr_crz;
		fis_registros_w[qt_cursor_w].nr_coo_fin		  := vet_c_reducao_z_ecf[i].nr_coo_fin;
		fis_registros_w[qt_cursor_w].vl_brt		  := vet_c_reducao_z_ecf[i].vl_brt;
		fis_registros_w[qt_cursor_w].vl_gt_fin		  := vet_c_reducao_z_ecf[i].vl_gt_fin;
		fis_registros_w[qt_cursor_w].nr_seq_controle	  := nr_seq_controle_p;
		fis_registros_w[qt_cursor_w].nr_ecf_cx	  	  := nr_ecf_cx_p;

		if (nr_vetor_w >= 1000) then
			begin
			/*Inserindo registros definitivamente na tabela especifica - fis_efd_icmsipi_C405 */

			forall i in fis_registros_w.first .. fis_registros_w.last
				insert into fis_efd_icmsipi_C405 values fis_registros_w(i);

			nr_vetor_w := 0;
			fis_registros_w.delete;

			commit;

			end;
		end if;

		/*incrementa variavel para realizar o forall quando chegar no valor limite*/

		nr_vetor_w := nr_vetor_w + 1;

		end;
	end loop;
EXIT WHEN NOT FOUND; /* apply on c_reducao_z_ecf */
end loop;
close c_reducao_z_ecf;

if (fis_registros_w.count > 0) then
	begin
	/*Inserindo registro que não entraram outro for all devido a quantidade de registros no vetor*/

	forall i in fis_registros_w.first .. fis_registros_w.last
		insert into fis_efd_icmsipi_C405 values fis_registros_w(i);

	fis_registros_w.delete;

	commit;

	end;
end if;

/*Libera memoria*/

dbms_session.free_unused_user_memory;

/*Atualização informação no controle de geração de registro para SIM*/

if (ie_gerou_dados_bloco_w = 'S') then
	update	fis_efd_icmsipi_controle
	set	ie_mov_C 	= 'S'
	where	nr_sequencia 	= nr_seq_controle_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_c405_icmsipi ( nr_seq_controle_p bigint, nr_ecf_cx_p text) FROM PUBLIC;

