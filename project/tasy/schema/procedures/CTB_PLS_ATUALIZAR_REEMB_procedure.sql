-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_reemb ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
dt_referencia_w			timestamp;
ie_tipo_contratacao_w		varchar(15);
nr_seq_conta_w			bigint;
cd_conta_contabil_w		varchar(20);
ie_preco_w			varchar(2);
ie_segmentacao_w		varchar(3);
ie_regulamentacao_w		varchar(2);
ie_participacao_w		varchar(1);
nr_seq_regra_w			bigint;
ie_tipo_beneficiario_w		varchar(3);
cd_historico_w			numeric(20);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_despesa_w		varchar(1);
cd_historico_copartic_w		bigint;
cd_conta_coparticipacao_w	varchar(20);
nr_seq_conta_item_w		bigint;
nr_seq_grupo_ans_w		bigint;
ie_tipo_segurado_w		varchar(3);
ie_tipo_item_w			smallint;
nr_seq_material_w		bigint;
cd_conta_glosa_w		varchar(20);
cd_historico_glosa_w		bigint;

C01 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		d.ie_tipo_contratacao, 
		d.ie_preco, 
		d.ie_segmentacao, 
		d.ie_regulamentacao, 
		d.ie_participacao, 
		substr(pls_obter_dados_contrato(c.nr_seq_contrato,'TB'),1,3), 
		trunc(a.dt_mes_competencia,'month'), 
		c.ie_tipo_segurado 
	from	pls_plano 		d, 
		pls_segurado 		c,		 
		pls_conta		b, 
		pls_protocolo_conta	a		 
	where	a.nr_sequencia		= nr_seq_protocolo_p 
	and	a.nr_sequencia		= b.nr_seq_protocolo 
	and	b.nr_seq_segurado	= c.nr_sequencia 
	and	c.nr_seq_plano		= d.nr_sequencia;
	
C02 CURSOR FOR 
	SELECT	1, 
		nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced, 
		null 
	from	pls_conta_proc 
	where	nr_seq_conta	= nr_seq_conta_w 
	
union all
 
	SELECT	2, 
		nr_sequencia, 
		null, 
		null, 
		ie_tipo_despesa 
	from	pls_conta_mat 
	where	nr_seq_conta	= nr_seq_conta_w;


BEGIN 
open C01;
loop 
fetch C01 into 
	nr_seq_conta_w, 
	ie_tipo_contratacao_w, 
	ie_preco_w, 
	ie_segmentacao_w, 
	ie_regulamentacao_w, 
	ie_participacao_w, 
	ie_tipo_beneficiario_w, 
	dt_referencia_w, 
	ie_tipo_segurado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	delete	FROM sip_resumo_conta 
	where	nr_seq_conta	= nr_seq_conta_w;
 
	open C02;
	loop 
	fetch C02 into	 
		ie_tipo_item_w, 
		nr_seq_conta_item_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		ie_tipo_despesa_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		/*Diego OS 306868 - No caso de não haver regras adequadas. No final só ira fazer o update caso haja regra.*/
 
		if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then 
			update	pls_conta_proc 
			set	cd_conta_deb		 = NULL, 
				nr_seq_regra_ctb_deb	 = NULL,				 
				cd_historico_copartic 	 = NULL, 
				cd_conta_copartic_deb	 = NULL,				 
				cd_conta_cred		 = NULL, 
				nr_seq_regra_ctb_cred	 = NULL, 
				cd_historico		 = NULL,				 
				cd_conta_copartic_cred	 = NULL, 
				nr_seq_grupo_ans	 = NULL				 
			where	nr_sequencia		= nr_seq_conta_item_w;
		elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then 
			update	pls_conta_mat 
			set	cd_conta_deb		 = NULL, 
				nr_seq_regra_ctb_deb	 = NULL,				 
				nr_seq_grupo_ans	 = NULL, 
				cd_conta_cred		 = NULL, 
				nr_seq_regra_ctb_cred	 = NULL, 
				cd_historico		 = NULL				 
			where	nr_sequencia		= nr_seq_conta_item_w;
		end if;		
		 
		nr_seq_material_w	:= null;
		if (ie_tipo_item_w	= 2) then 
			nr_seq_material_w	:= nr_seq_conta_item_w;
		end if;
		/* Conta de receita */
 
		SELECT * FROM ctb_pls_obter_conta_reemb(cd_estabelecimento_p, dt_referencia_w, 'C', ie_tipo_contratacao_w, ie_preco_w, ie_segmentacao_w, ie_regulamentacao_w, ie_participacao_w, ie_tipo_beneficiario_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_despesa_w, nr_seq_conta_w, ie_tipo_segurado_w, nr_seq_conta_item_w, nr_seq_material_w, null, null, null, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_copartic_w, cd_conta_coparticipacao_w, nr_seq_grupo_ans_w, cd_conta_glosa_w, cd_historico_glosa_w) INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_copartic_w, cd_conta_coparticipacao_w, nr_seq_grupo_ans_w, cd_conta_glosa_w, cd_historico_glosa_w;
		if ((nr_seq_regra_w)::numeric  > 0) then 
			if (coalesce(cd_historico_glosa_w,0) = 0) then 
				cd_historico_glosa_w := null;
			end if;
			 
			if (nr_seq_grupo_ans_w = 0) then 
				nr_seq_grupo_ans_w := null;
			end if;
			 
			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then 
				update	pls_conta_proc 
				set	cd_conta_cred		= cd_conta_contabil_w, 
					nr_seq_regra_ctb_cred	= nr_seq_regra_w, 
					cd_historico		= cd_historico_w, 
					cd_historico_copartic 	= cd_historico_copartic_w, 
					cd_conta_copartic_cred	= cd_conta_coparticipacao_w, 
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w, 
					cd_historico_glosa	= cd_historico_glosa_w, 
					cd_conta_glosa_cred	= cd_conta_glosa_w 
				where	nr_sequencia		= nr_seq_conta_item_w;
			elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then 
				update	pls_conta_mat 
				set	cd_conta_cred		= cd_conta_contabil_w, 
					nr_seq_regra_ctb_cred	= nr_seq_regra_w, 
					cd_historico		= cd_historico_w, 
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w, 
					cd_historico_glosa	= cd_historico_glosa_w, 
					cd_conta_glosa_cred	= cd_conta_glosa_w 
				where	nr_sequencia		= nr_seq_conta_item_w;
			end if;
		end if;
		 
		/* Conta de débito */
 
		 
		 
		/*if	(nr_seq_protocolo_p = 5003) then 
		ctb_pls_obter_conta_reemb2(cd_estabelecimento_p, dt_referencia_w, 'D', 
					ie_tipo_contratacao_w, ie_preco_w, ie_segmentacao_w, 
					ie_regulamentacao_w, ie_participacao_w, ie_tipo_beneficiario_w, 
					cd_procedimento_w, ie_origem_proced_w, ie_tipo_despesa_w, 
					nr_seq_conta_w, ie_tipo_segurado_w, nr_seq_conta_item_w, 
					nr_seq_material_w, null, null, 
					null, nr_seq_regra_w, cd_historico_w, 
					cd_conta_contabil_w, cd_historico_copartic_w, cd_conta_coparticipacao_w, 
					nr_seq_grupo_ans_w);	 
		end if;*/
 
		 
		SELECT * FROM ctb_pls_obter_conta_reemb(cd_estabelecimento_p, dt_referencia_w, 'D', ie_tipo_contratacao_w, ie_preco_w, ie_segmentacao_w, ie_regulamentacao_w, ie_participacao_w, ie_tipo_beneficiario_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_despesa_w, nr_seq_conta_w, ie_tipo_segurado_w, nr_seq_conta_item_w, nr_seq_material_w, null, null, null, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_copartic_w, cd_conta_coparticipacao_w, nr_seq_grupo_ans_w, cd_conta_glosa_w, cd_historico_glosa_w) INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, cd_historico_copartic_w, cd_conta_coparticipacao_w, nr_seq_grupo_ans_w, cd_conta_glosa_w, cd_historico_glosa_w;		
 
		if ((nr_seq_regra_w)::numeric  > 0) then 
			if (coalesce(cd_historico_glosa_w,0) = 0) then 
				cd_historico_glosa_w := null;
			end if;
			 
			if (nr_seq_grupo_ans_w = 0) then 
				nr_seq_grupo_ans_w := null;
			end if;
			 
			if 	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '' AND ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then 
				update	pls_conta_proc 
				set	cd_conta_deb		= cd_conta_contabil_w, 
					nr_seq_regra_ctb_deb	= nr_seq_regra_w, 
					cd_historico		= cd_historico_w, 
					cd_historico_copartic 	= cd_historico_copartic_w, 
					cd_conta_copartic_deb	= cd_conta_coparticipacao_w, 
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w, 
					cd_historico_glosa	= cd_historico_glosa_w, 
					cd_conta_glosa_deb	= cd_conta_glosa_w 
				where	nr_sequencia		= nr_seq_conta_item_w;
			elsif (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then 
				update	pls_conta_mat 
				set	cd_conta_deb		= cd_conta_contabil_w, 
					nr_seq_regra_ctb_deb	= nr_seq_regra_w, 
					cd_historico		= cd_historico_w, 
					nr_seq_grupo_ans	= nr_seq_grupo_ans_w, 
					cd_historico_glosa	= cd_historico_glosa_w, 
					cd_conta_glosa_deb	= cd_conta_glosa_w 
				where	nr_sequencia		= nr_seq_conta_item_w;
			end if;
		end if;
		CALL sip_gerar_resumo_conta(nr_seq_conta_item_w, ie_tipo_item_w, nm_usuario_p);
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_reemb ( nr_seq_protocolo_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

