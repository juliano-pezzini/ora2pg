-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_repasse ( nr_seq_repasse_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
------------------------------------------------------------------------------------------------------------------- 
Referências: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_tipo_contratacao_w		pls_plano.ie_tipo_contratacao%type;
nr_seq_item_repasse_w		pls_repasse_mens.nr_sequencia%type;
cd_conta_contabil_w		pls_regra_ctb_mensal_venda.cd_conta_contabil%type;
ie_preco_w			pls_plano.ie_preco%type;
ie_segmentacao_w		pls_plano.ie_segmentacao%type;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
ie_participacao_w		pls_plano.ie_participacao%type;
nr_seq_regra_w			pls_regra_ctb_mensal_venda.nr_sequencia%type;
ie_tipo_beneficiario_w		pls_contrato.ie_tipo_beneficiario%type;
cd_historico_w			pls_regra_ctb_mensal_venda.cd_historico%type;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
dt_referencia_w			timestamp;

c_repasse CURSOR FOR 
	SELECT	b.nr_sequencia nr_seq_item_repasse, 
		e.ie_tipo_contratacao, 
		e.ie_preco, 
		e.ie_segmentacao, 
		e.ie_regulamentacao, 
		e.ie_participacao, 
		substr(pls_obter_dados_contrato(d.nr_seq_contrato,'TB'),1,3) ie_tipo_beneficiario, 
		trunc(a.dt_referencia,'month') dt_referencia, 
		d.ie_tipo_segurado, 
		f.cd_pessoa_fisica, 
		f.cd_cgc 
	from	pls_repasse_vend		a, 
		pls_repasse_mens		b, 
		pls_mensalidade_segurado	c, 
		pls_segurado			d, 
		pls_plano			e, 
		pls_vendedor			f 
	where	a.nr_sequencia	= b.nr_seq_repasse 
	and	c.nr_sequencia	= b.nr_seq_mens_seg 
	and	d.nr_sequencia	= c.nr_seq_segurado 
	and	e.nr_sequencia	= d.nr_seq_plano 
	and	f.nr_sequencia	= b.nr_seq_vendedor 
	and	a.nr_sequencia	= nr_seq_repasse_p 
	and	a.ie_status 	= 'F';
	
c_adicional CURSOR FOR 
	SELECT	null nr_seq_item_repasse, 
		null ie_tipo_contratacao, 
		null ie_preco, 
		null ie_segmentacao, 
		null ie_regulamentacao, 
		null ie_participacao, 
		null ie_tipo_beneficiario, 
		trunc(a.dt_referencia,'month') dt_referencia, 
		'B' ie_tipo_segurado, 
		f.cd_pessoa_fisica, 
		f.cd_cgc, 
		g.nr_sequencia nr_seq_lanc_adic 
	from	pls_repasse_vend		a, 
		pls_vendedor			f, 
		pls_repasse_lanc		g 
	where	f.nr_sequencia	= a.nr_seq_vendedor 
	and	a.nr_sequencia	= g.nr_seq_repasse 
	and	a.nr_sequencia	= nr_seq_repasse_p 
	and	a.ie_status = 'F';
	
c_repasse_w		c_repasse%rowtype;
c_adicional_w		c_adicional%rowtype;


BEGIN 
 
open c_repasse;
loop 
fetch c_repasse into 
	c_repasse_w;
EXIT WHEN NOT FOUND; /* apply on c_repasse */
	begin 
	SELECT * FROM ctb_pls_obter_conta_repasse(	cd_estabelecimento_p, c_repasse_w.dt_referencia, 'C', c_repasse_w.ie_tipo_contratacao, c_repasse_w.ie_preco, c_repasse_w.ie_segmentacao, c_repasse_w.ie_regulamentacao, c_repasse_w.ie_participacao, c_repasse_w.ie_tipo_beneficiario, c_repasse_w.ie_tipo_segurado, c_repasse_w.cd_pessoa_fisica, c_repasse_w.cd_cgc, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, 'IM') INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w;
		 
	if ((nr_seq_regra_w)::numeric  > 0) then 
		update	pls_repasse_mens 
		set	cd_conta_cred		= cd_conta_contabil_w, 
			nr_seq_regra_ctb_cred	= nr_seq_regra_w, 
			cd_historico		= cd_historico_w 
		where	nr_sequencia		= c_repasse_w.nr_seq_item_repasse;
	end if;
		 
	SELECT * FROM ctb_pls_obter_conta_repasse(	cd_estabelecimento_p, c_repasse_w.dt_referencia, 'D', c_repasse_w.ie_tipo_contratacao, c_repasse_w.ie_preco, c_repasse_w.ie_segmentacao, c_repasse_w.ie_regulamentacao, c_repasse_w.ie_participacao, c_repasse_w.ie_tipo_beneficiario, c_repasse_w.ie_tipo_segurado, c_repasse_w.cd_pessoa_fisica, c_repasse_w.cd_cgc, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, 'IM') INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w;
		 
	if ((nr_seq_regra_w)::numeric  > 0) then 
		update	pls_repasse_mens 
		set	cd_conta_deb		= cd_conta_contabil_w, 
			nr_seq_regra_ctb_deb	= nr_seq_regra_w, 
			cd_historico		= cd_historico_w 
		where	nr_sequencia		= c_repasse_w.nr_seq_item_repasse;
	end if;
	 
	end;	
end loop;
close c_repasse;
	 
open c_adicional;
loop 
fetch c_adicional into	 
	c_adicional_w;
EXIT WHEN NOT FOUND; /* apply on c_adicional */
	begin 
	SELECT * FROM ctb_pls_obter_conta_repasse(	cd_estabelecimento_p, c_adicional_w.dt_referencia, 'C', c_adicional_w.ie_tipo_contratacao, c_adicional_w.ie_preco, c_adicional_w.ie_segmentacao, c_adicional_w.ie_regulamentacao, c_adicional_w.ie_participacao, c_adicional_w.ie_tipo_beneficiario, c_adicional_w.ie_tipo_segurado, c_adicional_w.cd_pessoa_fisica, c_adicional_w.cd_cgc, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, 'VA') INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w;
	 
	if ((nr_seq_regra_w)::numeric  > 0) then 
		update	pls_repasse_lanc 
		set	cd_conta_cred		= cd_conta_contabil_w, 
			nr_seq_regra_ctb_cred	= nr_seq_regra_w, 
			cd_historico		= cd_historico_w 
		where	nr_sequencia		= c_adicional_w.nr_seq_lanc_adic;
	end if;
	 
	SELECT * FROM ctb_pls_obter_conta_repasse(	cd_estabelecimento_p, c_adicional_w.dt_referencia, 'D', c_adicional_w.ie_tipo_contratacao, c_adicional_w.ie_preco, c_adicional_w.ie_segmentacao, c_adicional_w.ie_regulamentacao, c_adicional_w.ie_participacao, c_adicional_w.ie_tipo_beneficiario, c_adicional_w.ie_tipo_segurado, c_adicional_w.cd_pessoa_fisica, c_adicional_w.cd_cgc, nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w, 'VA') INTO STRICT nr_seq_regra_w, cd_historico_w, cd_conta_contabil_w;
					 
					 
				 
	if ((nr_seq_regra_w)::numeric  > 0) then 
		update	pls_repasse_lanc 
		set	cd_conta_deb		= cd_conta_contabil_w, 
			nr_seq_regra_ctb_deb	= nr_seq_regra_w, 
			cd_historico		= cd_historico_w 
		where	nr_sequencia		= c_adicional_w.nr_seq_lanc_adic;
	end if;	
 
	end;
end loop;
close c_adicional;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_repasse ( nr_seq_repasse_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

