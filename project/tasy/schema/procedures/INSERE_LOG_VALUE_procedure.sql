-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insere_log_value (nr_seq_log_p patient_profile_log.nr_seq_destino%type, nm_usuario_p patient_profile_log.nm_usuario%type, nr_atendimento_p nascimento.nr_atendimento%type DEFAULT NULL) AS $body$
DECLARE


ds_comando_w            varchar(300);
ds_parametros_w         varchar(200);
nm_tabela_w             varchar(200);
nr_seq_origem_w         patient_profile_log.nr_seq_origem%type;
nr_seq_destino_w        patient_profile_log.nr_seq_destino%type;
nm_atributo_w           patient_profile_log.nm_atributo%type;
nr_seq_log_w            patient_profile_log.nr_sequencia%type;
ds_old_value_w          patient_profile_value.ds_old_value%type;
ds_new_value_w          patient_profile_value.ds_new_value%type;
nm_usuario_w            patient_profile_log.nm_usuario%type;
dt_atualizacao_nrec_w   patient_profile_log.dt_atualizacao_nrec%type;
nm_usuario_nrec_w       patient_profile_log.nm_usuario_nrec%type;
cd_exp_label_w          tabela_visao_atributo.cd_exp_label%type;
ie_componente_w         tabela_visao_atributo.ie_componente%type;
cd_dominio_w            tabela_visao_atributo.cd_dominio%type;
ds_valores_w            tabela_visao_atributo.ds_valores%type;
cd_exp_valores_w        tabela_visao_atributo.cd_exp_valores%type;
nr_seq_localizador_w    tabela_visao_atributo.nr_seq_localizador%type;
ie_campo_tabela_w       patient_profile_log.nr_sequencia%type;

c01 CURSOR FOR
    SELECT
        pl.nm_tabela, 
        pl.nr_seq_origem, 
        pl.nr_seq_destino, 
        pl.nm_atributo, 
        pl.nr_sequencia, 
        pl.nm_usuario,
        pl.dt_atualizacao_nrec,
        pl.nm_usuario_nrec,
        CASE WHEN coalesce(tva.cd_exp_label::text, '') = '' THEN  tva.cd_exp_label_longo  ELSE tva.cd_exp_label END ,
        tva.ie_componente,
        tva.ds_valores,
        tva.cd_dominio,
        tva.cd_exp_valores, 
        tva.nr_seq_localizador
    FROM patient_profile_log pl
    INNER JOIN tabela_visao_atributo tva ON (tva.nr_sequencia = pl.cd_view AND tva.nm_atributo = pl.nm_atributo)
    WHERE nr_seq_destino = nr_seq_log_p;


BEGIN
    
    ds_comando_w :=	' UPDATE ' || ' patient_profile_log ' ||
            ' SET dt_liberacao = sysdate, ' ||
            ' nm_usuario_liberacao = ' || ' :nm_usuario ' ||
            ' WHERE nr_seq_destino = ' || nr_seq_log_p;

    ds_parametros_w := 'nm_usuario=' || nm_usuario_p;

    CALL exec_sql_dinamico_bv('Patient profile', ds_comando_w, ds_parametros_w);
    COMMIT;

    OPEN c01;
    LOOP
    FETCH c01 INTO
        nm_tabela_w,
        nr_seq_origem_w,
        nr_seq_destino_w,
        nm_atributo_w,
        nr_seq_log_w,
        nm_usuario_w,
        dt_atualizacao_nrec_w,
        nm_usuario_nrec_w,
        cd_exp_label_w,
        ie_componente_w,
        ds_valores_w,
        cd_dominio_w,
        cd_exp_valores_w,
        nr_seq_localizador_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */

       ds_old_value_w := GET_FIELDS_VALUES(nm_tabela_w, nm_atributo_w, nr_seq_origem_w, ie_componente_w, cd_dominio_w, ds_valores_w, cd_exp_valores_w, nr_seq_localizador_w, nr_atendimento_p);
       ds_new_value_w := GET_FIELDS_VALUES(nm_tabela_w, nm_atributo_w, nr_seq_destino_w, ie_componente_w, cd_dominio_w, ds_valores_w, cd_exp_valores_w, nr_seq_localizador_w, nr_atendimento_p);

        SELECT CASE 
                    WHEN EXISTS (SELECT * FROM all_tab_columns WHERE UPPER(table_name) = nm_tabela_w AND UPPER(column_name) = nm_atributo_w  LIMIT 1) THEN 1 
                    ELSE 0 
               END INTO STRICT ie_campo_tabela_w
;
        IF (ie_campo_tabela_w >= 1) THEN
            INSERT INTO patient_profile_value(
                                          NR_SEQUENCIA,
                                          NR_SEQ_LOG,
                                          DS_ATRIBUTO,
                                          DS_NEW_VALUE,
                                          DS_OLD_VALUE,
                                          DT_ATUALIZACAO,
                                          NM_USUARIO,
                                          DT_ATUALIZACAO_NREC,
                                          NM_USUARIO_NREC)
                                   VALUES (
                                          nextval('patient_profile_value_seq'),
                                          nr_seq_log_w,
                                          cd_exp_label_w,
                                          ds_new_value_w,
                                          ds_old_value_w,
                                          clock_timestamp(),
                                          nm_usuario_w,
                                          dt_atualizacao_nrec_w,
                                          nm_usuario_nrec_w);

            COMMIT;
        END IF;
      END LOOP;
    CLOSE c01;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insere_log_value (nr_seq_log_p patient_profile_log.nr_seq_destino%type, nm_usuario_p patient_profile_log.nm_usuario%type, nr_atendimento_p nascimento.nr_atendimento%type DEFAULT NULL) FROM PUBLIC;

