-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_tabela_benef ( nm_usuario_p text) AS $body$
DECLARE

 
nm_pessoa_fisica_w		varchar(255);
nr_seq_tabela_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_plano_w			bigint;
ie_preco_w			varchar(2);
dt_contrato_w			timestamp;
nr_seq_tabela_nova_w		bigint;
qt_idade_inicial_w		integer;
qt_idade_final_w		integer;
vl_preco_atual_w		double precision;
tx_acrescimo_w			double precision;
vl_preco_nao_subsidiado_w	double precision;
nr_seq_segurado_w		bigint;
nm_tabela_ant_w			varchar(255);
nm_tabela_atual_w		varchar(255);
qt_tabela_contrato_w		bigint;
cd_estabelecimento_w		integer;
ds_erro_w			varchar(4000);

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		b.nr_sequencia, 
		a.nr_seq_plano, 
		a.nr_seq_tabela, 
		c.nm_pessoa_fisica, 
		coalesce(b.dt_contrato,clock_timestamp()), 
		d.nm_tabela, 
		b.cd_estabelecimento 
	from	pls_segurado a, 
		pls_contrato b, 
		pessoa_fisica c, 
		pls_tabela_preco d 
	where	b.nr_sequencia	= a.nr_seq_contrato 
	and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica 
	and	a.nr_seq_tabela	= d.nr_sequencia 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

c02 CURSOR FOR 
	SELECT	qt_idade_inicial, 
		qt_idade_final, 
		vl_preco_atual, 
		tx_acrescimo, 
		vl_preco_nao_subsidiado 
	from	pls_plano_preco 
	where	nr_seq_tabela	= nr_seq_tabela_w 
	order by qt_idade_inicial;
	

BEGIN 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_segurado_w, 
	nr_seq_contrato_w, 
	nr_seq_plano_w, 
	nr_seq_tabela_w, 
	nm_pessoa_fisica_w, 
	dt_contrato_w, 
	nm_tabela_ant_w, 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	select	coalesce(max(ie_preco),0) 
	into STRICT	ie_preco_w 
	from	pls_plano 
	where	nr_sequencia	= nr_seq_plano_w;
	 
	if (ie_preco_w in (1,4)) and (coalesce(nr_seq_plano_w,0) <> 0) and (coalesce(nr_seq_tabela_w,0) <> 0) then 
			 
		nm_tabela_atual_w	:= 'Tabela para o beneficiário ' || to_char(nr_seq_segurado_w) || ' - ' || nm_pessoa_fisica_w;
		 
		select	nextval('pls_tabela_preco_seq') 
		into STRICT	nr_seq_tabela_nova_w 
		;
		 
		insert into pls_tabela_preco(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			nm_tabela, 
			dt_inicio_vigencia, 
			dt_fim_vigencia, 
			nr_seq_plano, 
			dt_liberacao, 
			ie_tabela_base, 
			nr_contrato, 
			nr_seq_tabela_origem, 
			nr_segurado, 
			nr_seq_faixa_etaria) 
		SELECT	nr_seq_tabela_nova_w, 
			clock_timestamp(), 
			nm_usuario_p, 
			nm_tabela_atual_w, 
			dt_contrato_w, 
			clock_timestamp(), 
			nr_seq_plano_w, 
			clock_timestamp(), 
			'N', 
			nr_seq_contrato_w, 
			nr_sequencia, 
			nr_seq_segurado_w, 
			nr_seq_faixa_etaria 
		from	pls_tabela_preco 
		where	nr_sequencia	= nr_seq_tabela_w;
		 
		open c02;
		loop 
		fetch c02 into	 
			qt_idade_inicial_w, 
			qt_idade_final_w, 
			vl_preco_atual_w, 
			tx_acrescimo_w, 
			vl_preco_nao_subsidiado_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin			 
			insert into pls_plano_preco(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_tabela, 
				qt_idade_inicial, 
				qt_idade_final, 
				vl_preco_inicial, 
				vl_preco_atual, 
				tx_acrescimo, 
				vl_preco_nao_subsidiado) 
			values (nextval('pls_plano_preco_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_tabela_nova_w, 
				qt_idade_inicial_w, 
				qt_idade_final_w, 
				vl_preco_atual_w, 
				vl_preco_atual_w, 
				tx_acrescimo_w, 
				vl_preco_nao_subsidiado_w);
			end;
		end loop;
		close c02;
		 
		 
		/* Atualizar as tabelas dos Beneficiários */
 
		update	pls_segurado 
		set	nm_usuario	= nm_usuario_p, 
			dt_atualizacao	= clock_timestamp(), 
			nr_seq_tabela	= nr_seq_tabela_nova_w 
		where	nr_sequencia	= nr_seq_segurado_w;
		 
		begin 
		CALL pls_gerar_valor_segurado(null, nr_seq_segurado_w, 'A', 
				cd_estabelecimento_w, nm_usuario_p, 'S', 
				clock_timestamp(), 'S', 'N', 
				'N', 'N');
		exception 
			when others then 
			ds_erro_w	:= ds_erro_w	|| to_char(nr_seq_segurado_w);
		end;
		 
		/* Gerar histórico */
 
		CALL pls_gerar_segurado_historico( 
			nr_seq_segurado_w, '3', clock_timestamp(), 
			'Mudança de tabela', 
			'Alterada tabela de preço de '||nr_seq_tabela_w||' - '||nm_tabela_ant_w || 
				' para ' || nr_seq_tabela_nova_w || ' - ' || nm_tabela_atual_w, 
			null, 
			null, null, null, 
			clock_timestamp(), null, null, 
			null, null, null, 
			null, nm_usuario_p, 'S');
	end if;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_tabela_benef ( nm_usuario_p text) FROM PUBLIC;

