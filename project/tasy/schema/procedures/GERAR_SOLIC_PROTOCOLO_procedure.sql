-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_solic_protocolo ( nr_seq_prot_solic_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w			smallint;
cd_local_estoque_w			smallint;
cd_pessoa_solicitante_w			varchar(10);
cd_conta_contabil_w			varchar(20);
cd_centro_custo_w				bigint;
ie_aviso_chegada_w			varchar(1);
ie_urgente_w				varchar(1);
qt_existe_w				bigint;
nr_solic_compra_w				bigint;
cd_material_w				integer;
qt_material_w				double precision;
nr_item_w				integer;
cd_unidade_medida_compra_w		varchar(30);
nr_seq_nf_w				bigint;
vl_item_w					double precision;
ie_situacao_w				varchar(1);

c01 CURSOR FOR
SELECT	cd_material,
	qt_material
from	prot_solic_compra_item
where	nr_seq_protocolo = nr_seq_prot_solic_p;


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	prot_solic_compra_item
where	nr_seq_protocolo = nr_seq_prot_solic_p;

if (qt_existe_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266033);
	--'Este protocolo não possui nenhum item.'
end if;

select	cd_estabelecimento,
	cd_local_estoque,
	cd_pessoa_solicitante,
	cd_conta_contabil,
	cd_centro_custo,
	ie_aviso_chegada,
	ie_urgente,
	ie_situacao
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	cd_pessoa_solicitante_w,
	cd_conta_contabil_w,
	cd_centro_custo_w,
	ie_aviso_chegada_w,
	ie_urgente_w,
	ie_situacao_w
from	prot_solic_compra
where	nr_sequencia = nr_seq_prot_solic_p;

if (ie_situacao_w = 'I') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266034);
	--'A situação deste protocolo está inativa.'
end if;

select	nextval('solic_compra_seq')
into STRICT	nr_solic_compra_w
;

begin
insert into solic_compra(
	nr_solic_compra,
	cd_estabelecimento,
	dt_solicitacao_compra,
	dt_atualizacao,
	nm_usuario,
	ie_situacao,
	cd_local_estoque,
	cd_pessoa_solicitante,
	cd_centro_custo,
	cd_conta_contabil,
	ie_aviso_chegada,
	ie_urgente,
	ie_aviso_aprov_oc,
	ie_tipo_solicitacao,
	ie_comodato,
	ie_semanal,
	nr_seq_prot_solic,
	nm_usuario_nrec,
	dt_atualizacao_nrec)
values (	nr_solic_compra_w,
	cd_estabelecimento_w,
	clock_timestamp(),
	clock_timestamp(),
	nm_usuario_p,
	'A',
	cd_local_estoque_w,
	cd_pessoa_solicitante_w,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	ie_aviso_chegada_w,
	ie_urgente_w,
	'N',
	'8',
	'N',
	'N',
	nr_seq_prot_solic_p,
	nm_usuario_p,
	clock_timestamp());
exception when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(266035);
	--'Erro ao gerar a solicitação de compras.'
end;

open C01;
loop
fetch C01 into
	cd_material_w,
	qt_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMC'),1,255) cd_unidade_medida_compra
	into STRICT	cd_unidade_medida_compra_w
	from	material
	where	cd_material = cd_material_w;

	SELECT * FROM Obter_ultima_compra_material(
		cd_estabelecimento_w, cd_material_w, cd_unidade_medida_compra_w, 'C', clock_timestamp() - interval '180 days', nr_seq_nf_w, vl_item_w) INTO STRICT nr_seq_nf_w, vl_item_w;

	select	coalesce(max(nr_item_solic_compra),0) + 1
	into STRICT	nr_item_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_w;

	insert into solic_compra_item(
		nr_solic_compra,
		nr_item_solic_compra,
		cd_material,
		cd_unidade_medida_compra,
		qt_material,
		dt_atualizacao,
		nm_usuario,
		ie_situacao,
		dt_solic_item,
		vl_unit_previsto,
		ie_geracao,
		qt_conv_compra_est_orig,
		qt_saldo_disp_estoque)
	values (	nr_solic_compra_w,
		nr_item_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		qt_material_w,
		clock_timestamp(),
		nm_usuario_p,
		'A',
		trunc(clock_timestamp()),
		vl_item_w,
		'S',
		obter_dados_material(cd_material_w,'QCE'),
		obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm')));

	insert into solic_compra_item_entrega(
		nr_solic_compra,
		nr_item_solic_compra,
		nr_item_solic_compra_entr,
		qt_entrega_solicitada,
		dt_entrega_solicitada,
		dt_atualizacao,
		nm_usuario,
		ds_observacao)
	values (	nr_solic_compra_w,
		nr_item_w,
		1,
		qt_material_w,
		trunc(clock_timestamp()),
		clock_timestamp(),
		nm_usuario_p,
		null);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solic_protocolo ( nr_seq_prot_solic_p bigint, nm_usuario_p text) FROM PUBLIC;

