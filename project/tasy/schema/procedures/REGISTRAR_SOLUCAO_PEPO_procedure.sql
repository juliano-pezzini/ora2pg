-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_solucao_pepo ( ie_tipo_operacao_p text, nm_usuario_p text, nr_sequencia_interface_p bigint, nr_seq_bomba_infusao_p bigint DEFAULT NULL, nr_seq_agente_p bigint DEFAULT NULL) AS $body$
DECLARE


	  dt_alteracao_w                   bomba_infusao_transicao.dt_transicao%TYPE;
    dt_final_w                       bomba_infusao_transicao.dt_transicao%TYPE;
	  qt_velocidade_w                  BOMBA_INFUSAO_INTERFACE.QT_VELOCIDADE%TYPE;
    cd_unidade_basica_w              bomba_infusao_transicao.cd_unidade_basica%TYPE;
    cd_unidade_compl_w               bomba_infusao_transicao.cd_unidade_compl%TYPE;
    cd_setor_atendimento_W             bomba_infusao_transicao.cd_setor_atendimento%TYPE;

    ie_modo_registro_w               AGENTE_ANESTESICO.IE_MODO_REGISTRO%TYPE;
    qt_dose_total_w                  CIRURGIA_AGENTE_ANESTESICO.QT_DOSE_TOTAL%TYPE;
    ie_disp_infusao_w                AGENTE_ANESTESICO.IE_DISP_INFUSAO%TYPE;
    nr_seq_agente_w                  BOMBA_INFUSAO.NR_SEQ_AGENTE%TYPE;
    cd_estabelecimento_w             setor_atendimento.cd_estabelecimento%TYPE;
    lista_sequencia_w                varchar(4000);


BEGIN

        SELECT get_dt_bomba_infusao_transicao(nr_sequencia_interface_p)
                  INTO STRICT dt_alteracao_w;

    IF ( ie_tipo_operacao_p = 'INICIAR') THEN
        SELECT DISTINCT BII.QT_VELOCIDADE,
               AA.IE_MODO_REGISTRO, 
               CAA.QT_DOSE_TOTAL, 
               AA.IE_DISP_INFUSAO
          INTO STRICT qt_velocidade_w, ie_modo_registro_w, qt_dose_total_w, ie_disp_infusao_w
          FROM BOMBA_INFUSAO_INTERFACE BII,
               BOMBA_INFUSAO BI,
               CIRURGIA_AGENTE_ANESTESICO CAA,
               AGENTE_ANESTESICO AA
         WHERE BI.NR_SEQ_BOMBA_INTERFACE = BII.NR_SEQUENCIA
           AND CAA.NR_SEQUENCIA = BI.NR_SEQ_AGENTE
           AND AA.NR_SEQUENCIA = CAA.NR_SEQ_AGENTE
           AND BII.NR_SEQUENCIA = nr_sequencia_interface_p
           AND BI.NR_SEQ_AGENTE = nr_seq_agente_p;

        lista_sequencia_w := administrar_item_pero(
              null, qt_velocidade_w, dt_alteracao_w, null, null, nr_seq_agente_p, 'C', 'N', NM_USUARIO_P, 0, null, ie_modo_registro_w, qt_dose_total_w, ie_disp_infusao_w, null, lista_sequencia_w, wheb_usuario_pck.get_cd_estabelecimento, 'S', null);

    ELSIF ( ie_tipo_operacao_p = 'FINALIZAR') THEN

        SELECT DISTINCT BII.QT_VELOCIDADE,
          AA.IE_MODO_REGISTRO, 
          CAA.QT_DOSE_TOTAL, 
          AA.IE_DISP_INFUSAO,
          BI.NR_SEQ_AGENTE,
          bii.cd_unidade_basica,
          bii.cd_unidade_compl,
          bii.cd_setor_atendimento
        INTO STRICT qt_velocidade_w, 
          ie_modo_registro_w, 
          qt_dose_total_w, 
          ie_disp_infusao_w,
          nr_seq_agente_w,
          cd_unidade_basica_w,
          cd_unidade_compl_w,
          cd_setor_atendimento_W
        FROM BOMBA_INFUSAO_INTERFACE BII,
        BOMBA_INFUSAO BI,
        CIRURGIA_AGENTE_ANESTESICO CAA,
        AGENTE_ANESTESICO AA
        WHERE BI.NR_SEQ_BOMBA_INTERFACE = BII.NR_SEQUENCIA
        AND CAA.NR_SEQUENCIA = BI.NR_SEQ_AGENTE
        AND AA.NR_SEQUENCIA = CAA.NR_SEQ_AGENTE
        AND BII.NR_SEQUENCIA = nr_sequencia_interface_p
        AND BI.NR_SEQUENCIA = nr_seq_bomba_infusao_p;

        dt_final_w := GET_DT_FINAL_BOMBA_TRANSICAO(nr_sequencia_interface_p);

        lista_sequencia_w := administrar_item_pero(
                null, qt_velocidade_w, null, dt_final_w, null, nr_seq_agente_w, 'C', 'N', NM_USUARIO_P, 2, null, ie_modo_registro_w, qt_dose_total_w, ie_disp_infusao_w, null, lista_sequencia_w, wheb_usuario_pck.get_cd_estabelecimento, 'S', null);

          insert into bomba_infusao_transicao(
            nr_sequencia, cd_unidade_basica, 
            cd_unidade_compl, dt_transicao, ie_status, qt_velocidade, 
            ds_medicamento,nr_seq_bomba_interface,qt_volume,ds_campo,
            cd_setor_atendimento) values (
            nextval('bomba_infusao_transicao_seq'), cd_unidade_basica_w, 
            cd_unidade_compl_w, clock_timestamp(), 'DS', null, 
            null, nr_sequencia_interface_p, null, 'END_SOLUTION',
            cd_setor_atendimento_w);

    ELSIF ( ie_tipo_operacao_p = 'AJUSTE_VELOCIDADE') THEN
                SELECT DISTINCT BII.QT_VELOCIDADE,
               AA.IE_MODO_REGISTRO, 
               CAA.QT_DOSE_TOTAL, 
               AA.IE_DISP_INFUSAO,
               SA.CD_ESTABELECIMENTO
          INTO STRICT qt_velocidade_w, ie_modo_registro_w, qt_dose_total_w, ie_disp_infusao_w, cd_estabelecimento_w
          FROM BOMBA_INFUSAO_INTERFACE BII,
               BOMBA_INFUSAO BI,
               CIRURGIA_AGENTE_ANESTESICO CAA,
               AGENTE_ANESTESICO AA,
               UNIDADE_ATENDIMENTO UA,
               SETOR_ATENDIMENTO SA
         WHERE BI.NR_SEQ_BOMBA_INTERFACE = BII.NR_SEQUENCIA
           AND CAA.NR_SEQUENCIA = BI.NR_SEQ_AGENTE
           AND AA.NR_SEQUENCIA = CAA.NR_SEQ_AGENTE
           AND BII.CD_UNIDADE_BASICA = UA.CD_UNIDADE_BASICA
           AND BII.CD_UNIDADE_COMPL = UA.CD_UNIDADE_COMPL
           AND UA.CD_SETOR_ATENDIMENTO = SA.CD_SETOR_ATENDIMENTO
           AND BII.NR_SEQUENCIA = nr_sequencia_interface_p
           AND BI.NR_SEQ_AGENTE = nr_seq_agente_p;

        lista_sequencia_w := administrar_item_pero(
          null, qt_velocidade_w, clock_timestamp(), null, null, nr_seq_agente_p, 'C', 'N', nm_usuario_p, 0, null, ie_modo_registro_w, qt_dose_total_w, ie_disp_infusao_w, null, lista_sequencia_w, cd_estabelecimento_w, 'S', null);

      END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_solucao_pepo ( ie_tipo_operacao_p text, nm_usuario_p text, nr_sequencia_interface_p bigint, nr_seq_bomba_infusao_p bigint DEFAULT NULL, nr_seq_agente_p bigint DEFAULT NULL) FROM PUBLIC;

