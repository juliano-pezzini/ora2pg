-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE replicar_regra_mat ( cd_grupo_p text default null, cd_sub_grupo_p text default null, cd_classe_p text default null, cd_familia_p text default null, nm_usuario_p text DEFAULT NULL, nr_seq_regra_p bigint DEFAULT NULL, cd_mat_regra_p bigint default 0) AS $body$
DECLARE


nr_seq_regra_w			bigint;
qt_registro_w			bigint;
cd_material_w			material.cd_material%type;
cd_material_regra_w		material.cd_material%type;
nr_seq_contrato_w		contrato_regra_nf.nr_seq_contrato%type;
dt_atualizacao_w		contrato_regra_nf.dt_atualizacao%type;
nm_usuario_w			contrato_regra_nf.nm_usuario%type;
cd_conta_contabil_w		contrato_regra_nf.cd_conta_contabil%type;
cd_centro_custo_w		contrato_regra_nf.cd_centro_custo%type;
nr_seq_crit_rateio_w	contrato_regra_nf.nr_seq_crit_rateio%type;
ds_complemento_w		contrato_regra_nf.ds_complemento%type;
ds_observacao_w			contrato_regra_nf.ds_observacao%type;
nr_seq_conta_financ_w	contrato_regra_nf.nr_seq_conta_financ%type;
vl_pagto_w			    contrato_regra_nf.vl_pagto%type;
dt_atualizacao_nrec_w	contrato_regra_nf.dt_atualizacao_nrec%type;
nm_usuario_nrec_w		contrato_regra_nf.nm_usuario_nrec%type;
dt_inicio_vigencia_w	contrato_regra_nf.dt_inicio_vigencia%type;
dt_fim_vigencia_w		contrato_regra_nf.dt_fim_vigencia%type;
pr_variacao_valor_w		contrato_regra_nf.pr_variacao_valor%type;
qt_conversao_nf_w		contrato_regra_nf.qt_conversao_nf%type;
ie_conversao_nf_w		contrato_regra_nf.ie_conversao_nf%type;
nr_seq_proj_rec_w		contrato_regra_nf.nr_seq_proj_rec%type;
nr_seq_equipamento_w	contrato_regra_nf.nr_seq_equipamento%type;
cd_estab_regra_w		contrato_regra_nf.cd_estab_regra%type;
cd_local_estoque_w		contrato_regra_nf.cd_local_estoque%type;
dt_venc_pagto_w			contrato_regra_nf.dt_venc_pagto%type;
qt_dias_antes_gerar_sc_w contrato_regra_nf.qt_dias_antes_gerar_sc%type;
ie_gera_sc_automatico_w	contrato_regra_nf.ie_gera_sc_automatico%type;
ie_tipo_regra_w			contrato_regra_nf.ie_tipo_regra%type;
cd_pessoa_solicitante_w	contrato_regra_nf.cd_pessoa_solicitante%type;
ie_libera_solic_w		contrato_regra_nf.ie_libera_solic%type;
nr_seq_marca_w			contrato_regra_nf.nr_seq_marca%type;
regra_existente_w		bigint;
nr_seq_regra_up_w		contrato_regra_nf.nr_sequencia%type;
ie_preco_w			    contrato_regra_nf.ie_preco%type;
ie_quantidade_w			contrato_regra_nf.ie_quantidade%type;
vl_desconto_w			contrato_regra_nf.vl_desconto%type;
pr_desconto_w			contrato_regra_nf.pr_desconto%type;

c01 CURSOR FOR
SELECT 	distinct m.cd_material
from	material m,
	estrutura_material_v v
where	m.cd_material = v.cd_material
and	m.ie_situacao = 'A'
and	m.cd_material 			= CASE WHEN coalesce(cd_mat_regra_p,0)=0 THEN m.cd_material  ELSE cd_mat_regra_p END
and	coalesce(m.cd_classe_material,0)	= coalesce(cd_classe_p,coalesce(m.cd_classe_material,0))
and	coalesce(m.nr_seq_familia,0)		= coalesce(cd_familia_p,coalesce(m.nr_seq_familia,0))
and	coalesce(v.cd_grupo_material,0)	= coalesce(cd_grupo_p,coalesce(v.cd_grupo_material,0))
and	coalesce(v.cd_subgrupo_material,0)	= coalesce(cd_sub_grupo_p,coalesce(v.cd_subgrupo_material,0));



BEGIN

select	nr_seq_contrato,
	dt_atualizacao,
	nm_usuario,
	cd_conta_contabil,
	cd_centro_custo,
	nr_seq_crit_rateio,
	ds_complemento,
	ds_observacao,
	nr_seq_conta_financ,
	vl_pagto,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	dt_inicio_vigencia,
	dt_fim_vigencia,
	pr_variacao_valor,
	ie_conversao_nf,
	nr_seq_proj_rec,
	nr_seq_equipamento,
	cd_estab_regra,
	cd_local_estoque,
	dt_venc_pagto,
	qt_dias_antes_gerar_sc,
	ie_gera_sc_automatico,
	ie_tipo_regra,
	cd_pessoa_solicitante,
	ie_libera_solic,
	nr_seq_marca,
	ie_preco,
	ie_quantidade,
	vl_desconto,
	pr_desconto
into STRICT	nr_seq_contrato_w,
	dt_atualizacao_w,
	nm_usuario_w,
	cd_conta_contabil_w,
	cd_centro_custo_w,
	nr_seq_crit_rateio_w,
	ds_complemento_w,
	ds_observacao_w,
	nr_seq_conta_financ_w,
	vl_pagto_w,
	dt_atualizacao_nrec_w,
	nm_usuario_nrec_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	pr_variacao_valor_w,
	ie_conversao_nf_w,
	nr_seq_proj_rec_w,
	nr_seq_equipamento_w,
	cd_estab_regra_w,
	cd_local_estoque_w,
	dt_venc_pagto_w,
	qt_dias_antes_gerar_sc_w,
	ie_gera_sc_automatico_w,
	ie_tipo_regra_w,
	cd_pessoa_solicitante_w,
	ie_libera_solic_w,
	nr_seq_marca_w,
	ie_preco_w,
	ie_quantidade_w,
	vl_desconto_w,
	pr_desconto_w
from 	contrato_regra_nf
where 	nr_sequencia = nr_seq_regra_p;


open c01;
loop
fetch c01 into
	cd_material_regra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	count(cd_material)
	into STRICT	regra_existente_w
	from 	contrato_regra_nf
	where 	nr_seq_contrato = nr_seq_contrato_w
	and	cd_material = cd_material_regra_w;


	if (regra_existente_w > 0) then

		select	max(nr_sequencia)
		into STRICT	nr_seq_regra_up_w
		from 	contrato_regra_nf
		where 	nr_seq_contrato = nr_seq_contrato_w
		and	cd_material = cd_material_regra_w;
		
	end if;

	select nextval('contrato_regra_nf_seq')
	into STRICT nr_seq_regra_w
	;

	if (regra_existente_w = 0) then

		insert into contrato_regra_nf(
			nr_sequencia,
			nr_seq_contrato,
			dt_atualizacao,
			nm_usuario,
			cd_material,
			cd_conta_contabil,
			cd_centro_custo,
			nr_seq_crit_rateio,
			ds_complemento,
			ds_observacao,
			nr_seq_conta_financ,
			vl_pagto,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			pr_variacao_valor,
			qt_conversao_nf,
			ie_conversao_nf,
			nr_seq_proj_rec,
			nr_seq_equipamento,
			cd_estab_regra,
			cd_local_estoque,
			dt_venc_pagto,
			qt_dias_antes_gerar_sc,
			ie_gera_sc_automatico,
			ie_tipo_regra,
			cd_pessoa_solicitante,
			ie_libera_solic,
			nr_seq_marca,
			ie_preco,
			ie_quantidade,
			vl_desconto,
			pr_desconto)
		values (	nr_seq_regra_w,
			nr_seq_contrato_w,
			clock_timestamp(),
			nm_usuario_w,
			cd_material_regra_w,
			cd_conta_contabil_w,
			cd_centro_custo_w,
			nr_seq_crit_rateio_w,
			ds_complemento_w,
			ds_observacao_w,
			nr_seq_conta_financ_w,
			vl_pagto_w,
			dt_atualizacao_nrec_w,
			nm_usuario_nrec_w,
			dt_inicio_vigencia_w,
			dt_fim_vigencia_w,
			pr_variacao_valor_w,
			qt_conversao_nf_w,
			ie_conversao_nf_w,
			nr_seq_proj_rec_w,
			nr_seq_equipamento_w,
			cd_estab_regra_w,
			cd_local_estoque_w,
			dt_venc_pagto_w,
			qt_dias_antes_gerar_sc_w,
			ie_gera_sc_automatico_w,
			ie_tipo_regra_w,
			cd_pessoa_solicitante_w,
			ie_libera_solic_w,
			nr_seq_marca_w,
			ie_preco_w,
			ie_quantidade_w,
			vl_desconto_w,
			pr_desconto_w);
	end if;

	if (regra_existente_w > 0) then
		update contrato_regra_nf
		set	dt_atualizacao 		= clock_timestamp(),
			nm_usuario 		= nm_usuario_w,
			cd_conta_contabil	= cd_conta_contabil_w,
			cd_centro_custo		= cd_centro_custo_w,
			nr_seq_crit_rateio	= nr_seq_crit_rateio_w,
			ds_complemento		= ds_complemento_w,
			ds_observacao		= ds_observacao_w,
			nr_seq_conta_financ	= nr_seq_conta_financ_w,
			vl_pagto		= vl_pagto_w,
			dt_atualizacao_nrec	= dt_atualizacao_nrec_w,
			nm_usuario_nrec		= nm_usuario_nrec_w,
			dt_inicio_vigencia	= dt_inicio_vigencia_w,
			dt_fim_vigencia		= dt_fim_vigencia_w,
			pr_variacao_valor	= pr_variacao_valor_w,
			qt_conversao_nf		= qt_conversao_nf_w,
			ie_conversao_nf		= ie_conversao_nf_w,
			nr_seq_proj_rec		= nr_seq_proj_rec_w,
			nr_seq_equipamento	= nr_seq_equipamento_w,
			cd_estab_regra		= cd_estab_regra_w,
			cd_local_estoque	= cd_local_estoque_w,
			dt_venc_pagto		= dt_venc_pagto_w,
			qt_dias_antes_gerar_sc	= qt_dias_antes_gerar_sc_w,
			ie_gera_sc_automatico	= ie_gera_sc_automatico_w,
			ie_tipo_regra		= ie_tipo_regra_w,
			cd_pessoa_solicitante	= cd_pessoa_solicitante_w,
			ie_libera_solic		= ie_libera_solic_w,
			nr_seq_marca		= nr_seq_marca_w,
			ie_preco		= ie_preco_w,
			ie_quantidade		= ie_quantidade_w,
			vl_desconto		= vl_desconto_w,
			pr_desconto		= pr_desconto_w
		where 	nr_seq_contrato 	= nr_seq_contrato_w
		and	cd_material 		= cd_material_regra_w;
	end if;		

	select	count(*)
	into STRICT	qt_registro_w
	from	contrato_regra_pagto_trib
	where	nr_seq_regra_nf = nr_seq_regra_p;
		
		
	if (qt_registro_w > 0) and (regra_existente_w = 0) then	

		insert into contrato_regra_pagto_trib(	
				nr_sequencia,
				nr_seq_regra_nf,
				cd_tributo,
				dt_atualizacao,
				nm_usuario,
				vl_tributo,
				pr_tributo,
				cd_beneficiario,
				cd_cond_pagto,
				cd_conta_financ,
				nr_seq_trans_reg,
				nr_seq_trans_baixa,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_corpo_item,
				ie_regra_trib,
				cd_darf)
		SELECT	nextval('contrato_regra_pagto_trib_seq'),
				nr_seq_regra_w,
				cd_tributo,
				dt_atualizacao,
				nm_usuario,
				vl_tributo,
				pr_tributo,
				cd_beneficiario,
				cd_cond_pagto,
				cd_conta_financ,
				nr_seq_trans_reg,
				nr_seq_trans_baixa,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_corpo_item,
				ie_regra_trib,
				cd_darf
		from 	contrato_regra_pagto_trib
		where 	nr_seq_regra_nf = nr_seq_regra_p;


	/* 		insert into contrato_regra_pagto_trib (select contrato_regra_pagto_trib_seq.nextval, 
			nr_seq_regra_w,
			cd_tributo,
			dt_atualizacao,
			nm_usuario,
			vl_tributo,
			pr_tributo,
			cd_beneficiario,
			cd_cond_pagto,
			cd_conta_financ,
			nr_seq_trans_reg,
			nr_seq_trans_baixa,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_corpo_item,
			ie_regra_trib,
			cd_darf 
		from 	contrato_regra_pagto_trib
		where 	nr_seq_regra_nf = nr_seq_regra_p); */
	end if;

	if (qt_registro_w > 0) and (regra_existente_w = 1) then

		delete from contrato_regra_pagto_trib
		where  nr_seq_regra_nf = nr_seq_regra_up_w;

		insert into contrato_regra_pagto_trib(	
				nr_sequencia,
				nr_seq_regra_nf,     
				cd_tributo,             
				dt_atualizacao,         
				nm_usuario,             
				vl_tributo,             
				pr_tributo,             
				cd_beneficiario,        
				cd_cond_pagto,          
				cd_conta_financ,        
				nr_seq_trans_reg,       
				nr_seq_trans_baixa,     
				-- nr_seq_regra_nf,        
				dt_atualizacao_nrec,
				nm_usuario_nrec,        
				ie_corpo_item,          
				ie_regra_trib,          
				cd_darf)
		SELECT	nextval('contrato_regra_pagto_trib_seq'), 
				nr_seq_regra_up_w,
				cd_tributo,
				dt_atualizacao,
				nm_usuario,
				vl_tributo,
				pr_tributo,
				cd_beneficiario,
				cd_cond_pagto,
				cd_conta_financ,
				nr_seq_trans_reg,
				nr_seq_trans_baixa,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_corpo_item,
				ie_regra_trib,
				cd_darf 
		from 	contrato_regra_pagto_trib
		where 	nr_seq_regra_nf = nr_seq_regra_p;
		
		
	/* 		insert into contrato_regra_pagto_trib (select contrato_regra_pagto_trib_seq.nextval, 
			nr_seq_regra_up_w,
			cd_tributo,
			dt_atualizacao,
			nm_usuario,
			vl_tributo,
			pr_tributo,
			cd_beneficiario,
			cd_cond_pagto,
			cd_conta_financ,
			nr_seq_trans_reg,
			nr_seq_trans_baixa,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_corpo_item,
			ie_regra_trib,
			cd_darf 
		from 	contrato_regra_pagto_trib
		where 	nr_seq_regra_nf = nr_seq_regra_p); */
		
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	contrato_regra_nf_estab
	where	nr_seq_regra_nf = nr_seq_regra_p;
		
	if (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') and (qt_registro_w > 0) and (regra_existente_w = 0) then	
		insert into contrato_regra_nf_estab(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_regra_nf,
			cd_estab_regra)
		SELECT	nextval('contrato_regra_nf_estab_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_regra_w,
			cd_estab_regra
		from	contrato_regra_nf_estab
		where	nr_seq_regra_nf = nr_seq_regra_p;
	end if;

	if (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') and (qt_registro_w > 0) and (regra_existente_w = 1) then

		delete FROM contrato_regra_nf_estab
		where  nr_seq_regra_nf = nr_seq_regra_up_w;

		insert into contrato_regra_nf_estab(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_regra_nf,
			cd_estab_regra)
		SELECT	nextval('contrato_regra_nf_estab_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_regra_up_w,
			cd_estab_regra
		from	contrato_regra_nf_estab
		where	nr_seq_regra_nf = nr_seq_regra_p;		
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	contrato_regra_nf_consist
	where	nr_seq_regra_nf = nr_seq_regra_p;
		
		
	if (qt_registro_w > 0) and (regra_existente_w = 0)then	

	insert into contrato_regra_nf_consist(	
			nr_sequencia,
			dt_atualizacao,         
			nm_usuario,             
			dt_atualizacao_nrec,    
			nm_usuario_nrec,        
			nr_seq_regra_nf,        
			ie_tipo_consistencia,   
			vl_minimo,              
			vl_maximo,              
			ie_justificativa)
	SELECT 	nextval('contrato_regra_nf_consist_seq'), 
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_regra_w,
			ie_tipo_consistencia,
			vl_minimo,
			vl_maximo,
			ie_justificativa		
	from 	contrato_regra_nf_consist
	where 	nr_seq_regra_nf = nr_seq_regra_p;
	/* 	insert into contrato_regra_nf_consist (select contrato_regra_nf_consist_seq.nextval, 
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_regra_w,
		ie_tipo_consistencia,
		vl_minimo,
		vl_maximo,
		ie_justificativa		
	from 	contrato_regra_nf_consist
	where 	nr_seq_regra_nf = nr_seq_regra_p); */
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	contrato_regra_nf_consist
	where	nr_seq_regra_nf = nr_seq_regra_p;


	if (qt_registro_w > 0) and (regra_existente_w = 1) then

		delete from contrato_regra_nf_consist
		where  nr_seq_regra_nf = nr_seq_regra_up_w;


		insert into contrato_regra_nf_consist(	
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_regra_nf,
				ie_tipo_consistencia,
				vl_minimo,
				vl_maximo,
				ie_justificativa)
		SELECT	nextval('contrato_regra_nf_consist_seq'),
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_regra_up_w,
				ie_tipo_consistencia,
				vl_minimo,
				vl_maximo,
				ie_justificativa
		from 	contrato_regra_nf_consist
		where 	nr_seq_regra_nf = nr_seq_regra_p;
	/* insert into contrato_regra_nf_consist (select contrato_regra_nf_consist_seq.nextval, 
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_regra_up_w,
		ie_tipo_consistencia,
		vl_minimo,
		vl_maximo,
		ie_justificativa
	from 	contrato_regra_nf_consist
	where 	nr_seq_regra_nf = nr_seq_regra_p); */
	end if;

	if (qt_registro_w > 0) and (regra_existente_w = 0)then	

		insert into contrato_regra_nf_qtde(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_regra_nf,
				dt_mesano_referencia,
				qt_minima,
				qt_maxima,
				qt_material)
		SELECT 	nextval('contrato_regra_nf_qtde_seq'),
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_regra_w,
				dt_mesano_referencia,
				qt_minima,
				qt_maxima,
				qt_material
		from 	contrato_regra_nf_qtde
		where 	nr_seq_regra_nf = nr_seq_regra_p;
		/* insert into contrato_regra_nf_qtde (select contrato_regra_nf_qtde_seq.nextval, 
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_regra_w,
			dt_mesano_referencia,
			qt_minima,
			qt_maxima,
			qt_material
		from 	contrato_regra_nf_qtde
		where 	nr_seq_regra_nf = nr_seq_regra_p); */
	end if;


	if (qt_registro_w > 0) and (regra_existente_w = 1) then

		delete from contrato_regra_nf_qtde
		where  nr_seq_regra_nf = nr_seq_regra_up_w;

		insert into contrato_regra_nf_qtde(	
				nr_sequencia,
				dt_atualizacao,         
				nm_usuario,             
				dt_atualizacao_nrec,    
				nm_usuario_nrec,        
				nr_seq_regra_nf,        
				dt_mesano_referencia,   
				qt_minima,              
				qt_maxima,              
				qt_material)
		SELECT 	nextval('contrato_regra_nf_qtde_seq'), 
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_regra_w,
				dt_mesano_referencia,
				qt_minima,
				qt_maxima,
				qt_material	
		from 	contrato_regra_nf_qtde
		where 	nr_seq_regra_nf = nr_seq_regra_p;
		
	/* 	insert into contrato_regra_nf_qtde (select contrato_regra_nf_qtde_seq.nextval, 
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_regra_w,
		dt_mesano_referencia,
		qt_minima,
		qt_maxima,
		qt_material	
	from 	contrato_regra_nf_qtde
	where 	nr_seq_regra_nf = nr_seq_regra_p);
	 */
	end if;

end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE replicar_regra_mat ( cd_grupo_p text default null, cd_sub_grupo_p text default null, cd_classe_p text default null, cd_familia_p text default null, nm_usuario_p text DEFAULT NULL, nr_seq_regra_p bigint DEFAULT NULL, cd_mat_regra_p bigint default 0) FROM PUBLIC;

