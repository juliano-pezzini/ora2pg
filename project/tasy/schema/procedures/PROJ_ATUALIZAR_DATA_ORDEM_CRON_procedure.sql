-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_atualizar_data_ordem_cron ( nr_seq_cronograma_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
						 
C01 CURSOR FOR 
	SELECT	e.nr_sequencia, 
		e.dt_inicio_prev - 1, 
		e.qt_hora_prev 
	from	proj_projeto p, 
		proj_cronograma c, 
		proj_cron_etapa e 
	where	c.nr_sequencia = nr_seq_cronograma_p 
	and	p.nr_sequencia = c.nr_seq_proj 
	and	c.nr_sequencia = e.nr_seq_cronograma 
	and	c.ie_tipo_cronograma = 'E' 
	and	c.ie_situacao = 'A' 
	and 	coalesce(e.pr_etapa,0) <> 100 
	and	coalesce(e.ie_fase,'N')	= 'N' 
	and   exists (	SELECT	1 
				from	man_ordem_servico_v x 
				where	x.nr_seq_proj_cron_etapa = e.nr_sequencia);	
 
nr_seq_cron_etapa_w	bigint;
dt_inicio_rec_w		timestamp;
qt_horas_rec_w		double precision;
qt_horas_ratiada_w	double precision;
qt_min_ratiada_w	bigint;
nr_seq_ordem_servico_w	bigint;
nm_usuario_rec_w	varchar(50);
						
BEGIN 
 
 
open C01;
loop 
fetch C01 into	 
	nr_seq_cron_etapa_w, 
	dt_inicio_rec_w, 
	qt_horas_rec_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	qt_horas_ratiada_w:= qt_horas_rec_w;
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_ordem_servico_w 
	from	man_ordem_servico_v x 
	where	x.nr_seq_proj_cron_etapa = nr_seq_cron_etapa_w;
	 
	 
	 
	 
	if (nr_seq_ordem_servico_w IS NOT NULL AND nr_seq_ordem_servico_w::text <> '') and (dt_inicio_rec_w IS NOT NULL AND dt_inicio_rec_w::text <> '')then 
	 
		select	substr(obter_usuario_pf(max(cd_programador)),1,15) 
		into STRICT	nm_usuario_rec_w 
		from	proj_cron_etapa_equipe 
		where	nr_seq_etapa_cron = nr_seq_cron_etapa_w;
		 
	 
		for i in 1..ceil(dividir(qt_horas_rec_w,5)) loop 
			begin 
			/*Efetua o rateamento dos minutos previstos*/
 
			if (qt_horas_ratiada_w > 5) then 
				qt_horas_ratiada_w:= (qt_horas_ratiada_w-5);
				qt_min_ratiada_w	:= 300;
			else 
				qt_min_ratiada_w	:= (substr(to_char(qt_horas_ratiada_w,'000.00'),1,4)*60) + substr(to_char(qt_horas_ratiada_w,'000.00'),6,7);
			end if;
 
			/*Verifica uma data v√°lida */
 
			dt_inicio_rec_w:= dt_inicio_rec_w+1;
			 
			while(Obter_Se_Dia_Util(dt_inicio_rec_w,1) = 'N') loop 
				begin 
				dt_inicio_rec_w:=dt_inicio_rec_w+1;
				end;
			end loop;
 
			 
			insert into man_ordem_ativ_prev(nr_sequencia, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_ordem_serv, 
				dt_prevista, 
				qt_min_prev, 
				nm_usuario_prev, 
				ie_prioridade_desen, 
				nr_seq_ativ_exec) 
			values (nextval('man_ordem_ativ_prev_seq'), 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_ordem_servico_w, 
				trunc(dt_inicio_rec_w), 
				qt_min_ratiada_w, 
				nm_usuario_rec_w, 
				10, 
				10);
			 
			 
			end;
		end loop;	
	 
	end if;
	 
	if (dt_inicio_rec_w IS NOT NULL AND dt_inicio_rec_w::text <> '') then 
		delete	FROM man_ordem_ativ_prev 
		where	nr_seq_ordem_serv	= nr_seq_ordem_servico_w 
		and	coalesce(dt_prevista::text, '') = '';
	end if;
	 
	 
	end;
end loop;
close C01;
 
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_atualizar_data_ordem_cron ( nr_seq_cronograma_p bigint, nm_usuario_p text) FROM PUBLIC;

