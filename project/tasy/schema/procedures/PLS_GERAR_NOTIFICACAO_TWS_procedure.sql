-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_notificacao_tws ( nm_usuario_p usuario.nm_usuario%type, ie_tipo_processo_p pls_notificacao_tws.ie_tipo_processo%type, ie_status_p pls_notificacao_tws.ie_status%type, nr_seq_conta_p pls_conta.nr_sequencia%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Inserir os  registros para geração da notificação no Portal Web.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  x]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  x] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:

ie_tipo_processo_p - dominio 9514
JC - Justificativa de conta médica

ie_status_p
P - Pendente
V - Visualizada

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 

nr_seq_notificacao_tws_w	pls_notificacao_tws.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;


BEGIN

select 	max(b.nr_seq_prestador)
into STRICT	nr_seq_prestador_w
from	pls_conta a,
	pls_protocolo_conta b
where	b.nr_sequencia	= a.nr_seq_protocolo
and	a.nr_sequencia	= nr_seq_conta_p;

if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
	begin
		select	max(nr_sequencia)
		into STRICT	nr_seq_notificacao_tws_w
		from	pls_notificacao_tws
		where	nr_seq_prestador	= nr_seq_prestador_w
		and	ie_tipo_processo	= ie_tipo_processo_p
		and	nr_seq_conta		= nr_seq_conta_p;
	exception
	when others then
		nr_seq_notificacao_tws_w	:= null;
	end;
	
	if ( coalesce(nr_seq_notificacao_tws_w::text, '') = '' ) then
		insert into pls_notificacao_tws(	nr_sequencia, dt_atualizacao, nm_usuario,
							dt_atualizacao_nrec, nm_usuario_nrec, ie_tipo_processo, 
							nr_seq_prestador, ie_status, dt_notificacao, 
							nr_seq_conta)
					values (	nextval('pls_notificacao_tws_seq'), clock_timestamp(), nm_usuario_p,
							clock_timestamp(), nm_usuario_p, ie_tipo_processo_p,
							nr_seq_prestador_w, ie_status_p, clock_timestamp(),
							nr_seq_conta_p);
	else	
		update 	pls_notificacao_tws
		set	dt_atualizacao		= clock_timestamp(),
			nm_usuario   		= nm_usuario_p,		
			ie_status		= ie_status_p
		where	nr_sequencia		= nr_seq_notificacao_tws_w;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_notificacao_tws ( nm_usuario_p usuario.nm_usuario%type, ie_tipo_processo_p pls_notificacao_tws.ie_tipo_processo%type, ie_status_p pls_notificacao_tws.ie_status%type, nr_seq_conta_p pls_conta.nr_sequencia%type) FROM PUBLIC;

