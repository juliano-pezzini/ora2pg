-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transacao_aplicacao (nr_seq_banco_aplic_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_tipo_aplic_w		bigint;
cd_estabelecimento_w		smallint;
nr_seq_trans_fin_aplic_w	bigint;
dt_aplicacao_w			timestamp;
nr_seq_conta_bco_aplic_w	bigint;
nr_seq_conta_bco_resg_w		bigint;
vl_aplicacao_w			double precision;
vl_aplicacao_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_w			integer;
nr_seq_trans_saida_w		bigint;
nr_seq_saldo_bco_saida_w	bigint;
dt_referencia_saida_w		timestamp;
nr_seq_saldo_bco_entr_w		bigint;
dt_referencia_entr_w		timestamp;
ie_saldo_fechado_w		varchar(10);
nr_sequencia_w			movto_trans_financ.nr_sequencia%type;


BEGIN
-- Busca os dados da aplicação para gerar as transações de entrada e saída do banco
select	nr_seq_aplicacao,
	cd_estabelecimento,
	nr_seq_trans_fin_aplic,
	dt_aplicacao,
	nr_seq_conta_bco_aplic,
	nr_seq_conta_bco_resg,
	vl_aplicacao,
	vl_aplicacao_estrang,
	vl_cotacao,
	cd_moeda
into STRICT	nr_seq_tipo_aplic_w,
	cd_estabelecimento_w,
	nr_seq_trans_fin_aplic_w,
	dt_aplicacao_w,
	nr_seq_conta_bco_aplic_w,
	nr_seq_conta_bco_resg_w,
	vl_aplicacao_w,
	vl_aplicacao_estrang_w,
	vl_cotacao_w,
	cd_moeda_w
from	banco_aplicacao
where	nr_sequencia = nr_seq_banco_aplic_p;

-- Busca a transação correspondente para gerar a transação de saída
select	max(nr_seq_trans_aplic)
into STRICT	nr_seq_trans_saida_w
from	transacao_financeira
where	nr_sequencia = nr_seq_trans_fin_aplic_w;

if (coalesce(nr_seq_trans_saida_w::text, '') = '') then
	/* Transação correspondente não cadastrada para a transação da aplicação. */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(354968);
end if;

select	max(nr_sequencia),
	max(dt_referencia)
into STRICT	nr_seq_saldo_bco_saida_w,
	dt_referencia_saida_w
from	banco_saldo
where	nr_seq_conta = nr_seq_conta_bco_resg_w
and	trunc(dt_referencia,'month') = trunc(dt_aplicacao_w,'month');

if (coalesce(nr_seq_saldo_bco_saida_w::text, '') = '') then
	/* Não existe saldo cadastrado para o banco de resgate na data da aplicação. */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(354973);
end if;
select	obter_se_banco_fechado(nr_seq_conta_bco_resg_w,dt_referencia_saida_w)
into STRICT	ie_saldo_fechado_w
;
if (coalesce(ie_saldo_fechado_w,'N') = 'S') then
	/* Saldo fechado para a data da aplicação.*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(354974);
end if;

select	max(nr_sequencia),
	max(dt_referencia)
into STRICT	nr_seq_saldo_bco_entr_w,
	dt_referencia_entr_w
from	banco_saldo
where	nr_seq_conta = nr_seq_conta_bco_aplic_w
and	trunc(dt_referencia,'month') = trunc(dt_aplicacao_w,'month');

if (coalesce(nr_seq_saldo_bco_entr_w::text, '') = '') then
	/* Não existe saldo cadastrado para o banco de aplicação na data da aplicação. */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(354975);
end if;
select	obter_se_banco_fechado(nr_seq_conta_bco_aplic_w,dt_referencia_entr_w)
into STRICT	ie_saldo_fechado_w
;
if (coalesce(ie_saldo_fechado_w,'N') = 'S') then
	/* Saldo fechado para a data da aplicação.*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(354974);
end if;

/* Projeto Multimoeda - Verifica se a aplicação é em moeda estrangeira, caso positivo realiza os cálculos antes de criar os registros.*/

if (coalesce(vl_aplicacao_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
	vl_complemento_w := vl_aplicacao_w - vl_aplicacao_estrang_w;
else
	vl_aplicacao_estrang_w := null;
	vl_complemento_w := null;
	vl_cotacao_w := null;
end if;

select	nextval('movto_trans_financ_seq')
into STRICT	nr_sequencia_w
;

-- Insere a transação de saída no banco de resgate
insert into movto_trans_financ(	nr_sequencia,
				cd_estabelecimento,
				nr_seq_trans_financ,
				dt_transacao,
				vl_transacao,
				vl_transacao_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda,
				nr_seq_banco,
				nr_seq_saldo_banco,
				nr_seq_aplicacao,
				nr_lote_contabil,
				ie_conciliacao,
				nm_usuario,
				dt_atualizacao)
values (nr_sequencia_w,
	cd_estabelecimento_w,
	nr_seq_trans_saida_w,
	dt_aplicacao_w,
	vl_aplicacao_w,
	vl_aplicacao_estrang_w,
	vl_complemento_w,
	vl_cotacao_w,
	cd_moeda_w,
	nr_seq_conta_bco_resg_w,
	nr_seq_saldo_bco_saida_w,
	nr_seq_banco_aplic_p,
	0,
	'N',
	nm_usuario_p,
	clock_timestamp());

-- Insere a transação de entrada no banco de aplicação
insert into movto_trans_financ(	nr_sequencia,
				cd_estabelecimento,
				nr_seq_trans_financ,
				dt_transacao,
				vl_transacao,
				vl_transacao_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda,
				nr_seq_banco,
				nr_seq_saldo_banco,
				nr_seq_aplicacao,
				nr_lote_contabil,
				ie_conciliacao,
				nm_usuario,
				dt_atualizacao,
				nr_seq_movto_transf_bco)
values (nextval('movto_trans_financ_seq'),
	cd_estabelecimento_w,
	nr_seq_trans_fin_aplic_w,
	dt_aplicacao_w,
	vl_aplicacao_w,
	vl_aplicacao_estrang_w,
	vl_complemento_w,
	vl_cotacao_w,
	cd_moeda_w,
	nr_seq_conta_bco_aplic_w,
	nr_seq_saldo_bco_entr_w,
	nr_seq_banco_aplic_p,
	0,
	'N',
	nm_usuario_p,
	clock_timestamp(),
	nr_sequencia_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transacao_aplicacao (nr_seq_banco_aplic_p bigint, nm_usuario_p text) FROM PUBLIC;

