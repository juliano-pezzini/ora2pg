-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_execucao_procedimento (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_sequencia_w			bigint;
nr_conta_fechada_w		bigint;
nr_seq_w			bigint;
ie_flag_ok_w			varchar(01);
nr_laudos_w			bigint;
nr_seq_interno_w		bigint;
nr_seq_vinc_w			bigint;
ie_deletar_todos_filhos_w	varchar(1);
ie_procedimento_pacote_w	varchar(1);
qt_procedimento_pacote_w	bigint;
nr_atendimento_w		bigint;
nr_seq_proc_pacote_w		procedimento_paciente.nr_seq_proc_pacote%type;
nr_seq_proc_est_w		bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia, nr_seq_proc_est
	from	procedimento_paciente, conta_paciente
	where   procedimento_paciente.nr_interno_conta = conta_paciente.nr_interno_conta
	and     nr_prescricao = nr_prescricao_p
	and	nr_sequencia_prescricao	= nr_seq_prescr_p
	and     coalesce(conta_paciente.ie_cancelamento,'N') = 'N';

c02 CURSOR FOR
	SELECT	nr_sequencia
	from	procedimento_paciente
	where	nr_seq_proc_princ	= nr_sequencia_w;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	Prescr_procedimento
	where 	nr_prescricao			= nr_prescricao_p
	and 	nr_seq_proc_princ 		= nr_seq_interno_w;

BEGIN

select	max(nr_seq_interno)
into STRICT 	nr_seq_interno_w
from	prescr_procedimento
where 	nr_prescricao		= nr_prescricao_p
and	nr_sequencia		= nr_seq_prescr_p;

select	max(nr_atendimento)
into STRICT	nr_atendimento_w
from	prescr_medica
where 	nr_prescricao = nr_prescricao_p;

ie_procedimento_pacote_w := obter_param_usuario(942, 250, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_procedimento_pacote_w);

if (ie_procedimento_pacote_w = 'S') then

	select	count(*)
	into STRICT	qt_procedimento_pacote_w
	from	procedimento_paciente
	where 	nr_prescricao		= nr_prescricao_p
	and	nr_sequencia_prescricao	= nr_seq_prescr_p
	and	(NR_SEQ_PROC_PACOTE IS NOT NULL AND NR_SEQ_PROC_PACOTE::text <> '');
	
	if (qt_procedimento_pacote_w > 0) then
		--'Existem contas com o pacote vinculado!   parametro[250]'
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189630);
	end if;
		
end if;

open C03;
loop
fetch C03 into	
	nr_seq_vinc_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	CALL Desfazer_Execucao_Procedimento(nr_prescricao_p, nr_seq_vinc_w, nm_usuario_p);
	end;
end loop;
close C03;

ie_deletar_todos_filhos_w := obter_param_usuario(942, 195, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_deletar_todos_filhos_w);

open	c01;
loop
fetch	c01 into
	nr_sequencia_w,
	nr_seq_proc_est_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	
	select	count(*)
	into STRICT	nr_laudos_w
	from	laudo_paciente
	where	nr_seq_proc	= nr_sequencia_w;

	if (nr_laudos_w > 0) then
	  	-- 'Este procedimento ja foi laudado!
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189628);
	end if;

	begin
	select 	max(nr_seq_procedimento)
	into STRICT	nr_seq_proc_pacote_w
	from 	atendimento_pacote
	where 	nr_seq_proc_origem = nr_sequencia_w;
			
	if (coalesce(nr_seq_proc_pacote_w,0) > 0) then
		CALL desfazer_pacote(nr_seq_proc_pacote_w, 'S', nm_usuario_p);
	end if;

	select	count(*)
	into STRICT	nr_conta_fechada_w
	from	conta_paciente
	where	nr_interno_conta in (
		SELECT	nr_interno_conta
		from	procedimento_paciente
		where	nr_sequencia		= nr_sequencia_w
		
union

		SELECT	nr_interno_conta
		from	procedimento_paciente
		where	nr_seq_proc_princ	= nr_sequencia_w)
	and	ie_status_acerto = 2
	and coalesce(ie_cancelamento,'N') = 'N';

	if (nr_conta_fechada_w > 0) then
	  	-- 'Existem contas fechadas para este procedimento!');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189629);
	else	
		begin
		if (coalesce(ie_deletar_todos_filhos_w,'N') = 'S') then
			/*Realizar o delete cascade pela propaci_propaci_fk da Procedimento_paciente. Evitando o problema de filhos do procedimento 
			tambem possuirem filhos. */
			CALL Deletar_propaci_propaci(nr_sequencia_w, null);
		else			
			delete	from material_atend_paciente a
			where	nr_seq_proc_princ	= nr_sequencia_w
			and	exists (SELECT	1
				from	conta_paciente x
				where 	x.nr_interno_conta	= a.nr_interno_conta
				and	coalesce(x.ie_cancelamento::text, '') = '');

			update	material_atend_paciente
			set	nm_usuario	= nm_usuario_p,
				nr_seq_proc_princ	 = NULL
			where	nr_seq_proc_princ	= nr_sequencia_w;
			
			open	c02;
			loop
			fetch	c02 into
				nr_seq_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				delete	from material_atend_paciente a
				where	nr_seq_proc_princ	= nr_seq_w
				and	exists (SELECT	1
					from	conta_paciente x
					where 	x.nr_interno_conta	= a.nr_interno_conta
					and	coalesce(x.ie_cancelamento::text, '') = '');
			end loop;
			close c02;
			
			delete	from procedimento_paciente a
			where	nr_seq_proc_princ	= nr_sequencia_w
			and	exists (SELECT	1
				from	conta_paciente x
				where 	x.nr_interno_conta	= a.nr_interno_conta
				and	coalesce(x.ie_cancelamento::text, '') = '');
				
			update	procedimento_paciente
			set	nm_usuario		= nm_usuario_p,
				nr_seq_proc_princ	 = NULL
			where	nr_seq_proc_princ	= nr_sequencia_w;
			
			delete	from procedimento_paciente a
			where	nr_sequencia	= nr_sequencia_w
			and	exists (SELECT	1
				from	conta_paciente x
				where 	x.nr_interno_conta	= a.nr_interno_conta
				and	coalesce(x.ie_cancelamento::text, '') = '');
				
			update	procedimento_paciente a
			set	nr_prescricao		 = NULL,
				dt_prescricao		 = NULL,
				nm_usuario		= nm_usuario_p,
				nr_sequencia_prescricao  = NULL
			where 	nr_prescricao		= nr_prescricao_p
			and	nr_sequencia_prescricao	= nr_seq_prescr_p;

		end if;
		end;
	end if;
	end;
end loop;
close c01;


update prescr_proc_hor
set dt_fim_horario  = NULL
where nr_prescricao = nr_prescricao_p
and coalesce(nr_seq_proc_origem,nr_seq_procedimento) = nr_seq_prescr_p;

delete from prescr_mat_alteracao_comp
where nr_sequencia_prescr in (SELECT nr_sequencia from prescr_mat_alteracao 
                              where nr_prescricao = nr_prescricao_p and nr_seq_prescricao = nr_seq_prescr_p);


delete from prescr_mat_alteracao_comp
where nr_sequencia_prescr in (SELECT nr_sequencia from prescr_mat_alteracao 
                              where nr_prescricao = nr_prescricao_p and nr_seq_procedimento = nr_seq_prescr_p);

delete from prescr_mat_alteracao where nr_prescricao = nr_prescricao_p and nr_seq_procedimento = nr_seq_prescr_p;

CALL Ajustar_Conta_Vazia(nr_atendimento_w,nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_execucao_procedimento (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nm_usuario_p text) FROM PUBLIC;

