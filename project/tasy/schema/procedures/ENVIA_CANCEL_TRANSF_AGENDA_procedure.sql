-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_cancel_transf_agenda (nr_sequencia_p bigint, nm_usuario_p text, nm_usuarios_destino_p text, cd_setores_destino_p text, ie_tipo_comunic_p text) AS $body$
DECLARE

 
nm_paciente_w			varchar(255);
nm_usuario_w			varchar(255);
ds_setor_w			varchar(255);
lista_usuario_w			varchar(255);
lista_setor_w			varchar(255);
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
ie_contador_w			bigint;
ds_titulo_w			varchar(255);
ds_comunicado_w			varchar(2000);
dt_agenda_w			timestamp;
cd_setor_destino_w		varchar(5);
nr_atendimento			bigint;
ds_motivo_cancelamento_w	varchar(255);
nr_atendimento_w		bigint;
nr_sequencia_w			bigint;
hr_inicio_w			timestamp;


BEGIN 
 
select	substr(obter_nome_pf(cd_pessoa_fisica),1,60), 
	dt_agenda, 
	nr_atendimento, 
	substr(obter_valor_dominio(1011, cd_motivo_cancelamento),1,100), 
	hr_inicio 
into STRICT	nm_paciente_w, 
	dt_agenda_w, 
	nr_atendimento_w, 
	ds_motivo_cancelamento_w, 
	hr_inicio_w 
from	agenda_paciente 
where	nr_sequencia	= nr_sequencia_p;
 
if (ie_tipo_comunic_p = 'T') then 
	ds_titulo_w	:= wheb_mensagem_pck.get_texto(307405) || '.'; -- Transferência da agenda 
	ds_comunicado_w	:= wheb_mensagem_pck.get_texto(307401 , 'NM_PACIENTE_W=' || nm_paciente_w || ';' ||
															'NR_ATENDIMENTO_W=' || nr_atendimento_w || ';' || 
															'DT_AGENDA_W=' || dt_agenda_w || ';' || 
															'HR_INICIO_W=' || to_char(hr_inicio_w, 'hh24:mi:ss'));
					-- Transferência da agenda do paciente: #@NM_PACIENTE_W#@, atendimento: #@NR_ATENDIMENTO_W#@, data: #@DT_AGENDA_W#@, horário: #@HR_INICIO_W#@. 
else 
	ds_titulo_w	:= wheb_mensagem_pck.get_texto(307402) || '.'; -- Cancelamento de agenda 
	ds_comunicado_w	:= wheb_mensagem_pck.get_texto(307406, 'NM_PACIENTE_W=' || nm_paciente_w || ';' ||
															'NR_ATENDIMENTO_W=' || nr_atendimento_w || ';' || 
															'DT_AGENDA_W=' || dt_agenda_w || ';' || 
															'HR_INICIO_W=' || to_char(hr_inicio_w, 'hh24:mi:ss') || ';' || 
															'DS_MOTIVO_CANCELAMENTO_W=' || ds_motivo_cancelamento_w);
					-- Cancelamento da agenda do paciente: #@NM_PACIENTE_W#@, atendimento: #@NR_ATENDIMENTO_W#@, data: #@DT_AGENDA_W#@, horário: #@HR_INICIO_W#@, motivo do cancelamento: #@DS_MOTIVO_CANCELAMENTO_W#@. 
end if;
 
if (cd_setores_destino_p IS NOT NULL AND cd_setores_destino_p::text <> '') then 
	lista_setor_w := cd_setores_destino_p;
	while	(lista_setor_w IS NOT NULL AND lista_setor_w::text <> '') or 
		ie_contador_w > 100 loop 
		begin 
		tam_lista_w		:= length(lista_setor_w);
		ie_pos_virgula_w	:= position(',' in lista_setor_w);
		if (ie_pos_virgula_w <> 0) then 
			cd_setor_destino_w	:= substr(lista_setor_w,1,(ie_pos_virgula_w));
			lista_setor_w		:= substr(lista_setor_w,(ie_pos_virgula_w + 2),tam_lista_w);
		end if;
 
		select	nextval('comunic_interna_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		insert	into comunic_interna(	dt_comunicado, 
						ds_titulo, 
						ds_comunicado, 
						nm_usuario, 
						dt_atualizacao, 
						ie_geral, 
						nm_usuario_destino, 
						cd_perfil, 
						nr_sequencia, 
						ie_gerencial, 
						nr_seq_classif, 
						ds_perfil_adicional, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_setor_adicional, 
						dt_liberacao, 
						ds_grupo) 
				values (		clock_timestamp(), 
						ds_titulo_w, 
						ds_comunicado_w, 
						nm_usuario_p, 
						clock_timestamp(), 
						'N', 
						null, 
						null, 
						nr_sequencia_w, 
						'N', 
						null, 
						null, 
						null, 
						null, 
						cd_setor_destino_w, 
						clock_timestamp(), 
						null);
		ie_contador_w	:= ie_contador_w + 1;
		end;
	end loop;
else 
	ie_contador_w	:= 0;
	lista_usuario_w	:= nm_usuarios_destino_p;
	while	(lista_usuario_w IS NOT NULL AND lista_usuario_w::text <> '') or 
		ie_contador_w > 100 loop 
		begin 
		tam_lista_w		:= length(lista_usuario_w);
		ie_pos_virgula_w	:= position(',' in lista_usuario_w);
		if (ie_pos_virgula_w <> 0) then 
			nm_usuario_w	:= substr(lista_usuario_w,1,(ie_pos_virgula_w - 1));
			lista_usuario_w	:= substr(lista_usuario_w,(ie_pos_virgula_w + 2),tam_lista_w);
		end if;
 
		select	nextval('comunic_interna_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		insert	into comunic_interna(	dt_comunicado, 
						ds_titulo, 
						ds_comunicado, 
						nm_usuario, 
						dt_atualizacao, 
						ie_geral, 
						nm_usuario_destino, 
						cd_perfil, 
						nr_sequencia, 
						ie_gerencial, 
						nr_seq_classif, 
						ds_perfil_adicional, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_setor_adicional, 
						dt_liberacao, 
						ds_grupo) 
				values (		clock_timestamp(), 
						ds_titulo_w, 
						ds_comunicado_w, 
						nm_usuario_p, 
						clock_timestamp(), 
						'N', 
						nm_usuario_w, 
						null, 
						nr_sequencia_w, 
						'N', 
						null, 
						null, 
						null, 
						null, 
						null, 
						clock_timestamp(), 
						null);
		ie_contador_w	:= ie_contador_w + 1;
		end;
	end loop;
end if;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_cancel_transf_agenda (nr_sequencia_p bigint, nm_usuario_p text, nm_usuarios_destino_p text, cd_setores_destino_p text, ie_tipo_comunic_p text) FROM PUBLIC;

