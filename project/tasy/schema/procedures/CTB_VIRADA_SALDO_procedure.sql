-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_virada_saldo ( nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_conta_contabil_w	varchar(40);
cd_estabelecimento_w	integer;
cd_centro_custo_w	integer;
vl_movimento_w		double precision;
vl_saldo_w		double precision;
nr_sequencia_w		bigint;
nr_seq_mes_dest_w	bigint;
cd_empresa_w		smallint;
dt_referencia_w		timestamp;
qt_mes_fim_exerc_w	smallint;
ie_tipo_w		varchar(01);
ds_erro_w		varchar(2000);
ie_conta_vigente_w	varchar(1);
cd_conta_troca_w	varchar(40);
dt_referencia_dest_w	timestamp;
cd_classificacao_w	varchar(40);
cd_classif_sup_w	varchar(40);
nr_nivel_conta_w	bigint;
ie_zerar_saldos_w	varchar(1);

C01 CURSOR FOR
SELECT	a.cd_estabelecimento,
	a.cd_conta_contabil,
	a.cd_centro_custo,
	a.vl_saldo,
	c.ie_tipo
from	ctb_grupo_conta c,
	conta_contabil b,
	ctb_saldo a
where	a.nr_seq_mes_ref		= nr_seq_mes_ref_p
and	a.cd_conta_contabil		= b.cd_conta_contabil
and	b.cd_grupo			= c.cd_grupo
and	((b.ie_situacao 		= 'A') or (a.vl_saldo <> 0))
and	((a.cd_estabelecimento 	= cd_estabelecimento_p) or (coalesce(cd_estabelecimento_p,0) = 0));


BEGIN

select	cd_empresa,
	dt_referencia
into STRICT	cd_empresa_w,
	dt_referencia_w
from	ctb_mes_ref
where	nr_sequencia	= nr_seq_mes_ref_p;

select	qt_mes_fim_exercicio
into STRICT	qt_mes_fim_exerc_w
from	empresa
where	cd_empresa	= cd_empresa_w;

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_mes_dest_w
from	ctb_mes_ref
where	cd_empresa	= cd_empresa_w
and	pkg_date_utils.start_of(dt_referencia,'MONTH',0) = pkg_date_utils.start_of(pkg_date_utils.add_month(dt_referencia_w, 1,0), 'MONTH',0)
and	(dt_abertura IS NOT NULL AND dt_abertura::text <> '')
and	coalesce(dt_fechamento::text, '') = '';

if (nr_seq_mes_dest_w = 0) then
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(203781);
end if;

select	dt_referencia
into STRICT	dt_referencia_dest_w
from	ctb_mes_ref
where	nr_sequencia	= nr_seq_mes_dest_w;

OPEN C01;
LOOP
FETCH C01 into
	cd_estabelecimento_w,
	cd_conta_contabil_w,
	cd_centro_custo_w,
	vl_saldo_w,
	ie_tipo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/*Inicializar variavel da conta de troca */


	/*Inicializar variavel de contagem quantas contas origem diferente mesmo destino */

	ie_zerar_saldos_w := coalesce(obter_valor_param_usuario(923, 124, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w), 'S');
	
	if (ie_zerar_saldos_w = 'S') then
		begin
		if (qt_mes_fim_exerc_w > 0) then
			if (campo_numerico(pkg_date_utils.extract_field('MONTH',dt_referencia_w)) = qt_mes_fim_exerc_w) and (ie_tipo_w in ('R','D','C')) then
				vl_saldo_w		:= 0;
			end if;
		elsif (mod((to_char(dt_referencia_w, 'mm'))::numeric ,abs(qt_mes_fim_exerc_w)) = 0) and (ie_tipo_w in ('R','D','C')) then
				vl_saldo_w		:= 0;
		end if;
		end;
	end if;

	select	substr(obter_se_conta_vigente(cd_conta_contabil_w, dt_referencia_dest_w),1,1)
	into STRICT	ie_conta_vigente_w
	;
	if (ie_conta_vigente_w = 'N') then
		select	coalesce(max(a.cd_conta_destino), 'X')
		into STRICT	cd_conta_troca_w
		from	ctb_troca_plano b,
			ctb_troca_plano_conta a
		where	a.cd_conta_origem 	= cd_conta_contabil_w
		and	a.nr_seq_troca 		= b.nr_sequencia
		and	pkg_date_utils.start_of(b.dt_troca_prevista, 'MONTH',0) = pkg_date_utils.start_of(dt_referencia_dest_w, 'MONTH',0);
		
		if (cd_conta_troca_w <> 'X') then
		
			/*Verifica Quantas contas origem tem o mesmo destino que CD_CONTA_TROCA*/


			/* SE maior do que 1 obter a soma do SALDO */

			select	sum(vl_saldo)
			into STRICT	vl_saldo_w
			from	ctb_saldo c,
				ctb_troca_plano b,
				ctb_troca_plano_conta a
			where	a.cd_conta_origem 	= c.cd_conta_contabil
			and	c.nr_seq_mes_ref	= nr_seq_mes_ref_p
			and	a.cd_conta_destino	= cd_conta_troca_w
			and	a.nr_seq_troca 		= b.nr_sequencia
			and	pkg_date_utils.start_of(b.dt_troca_prevista, 'MONTH',0) = pkg_date_utils.start_of(dt_referencia_dest_w, 'MONTH',0);
			
			insert into ctb_saldo_alteracao_conta(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_mes_ref,
				nr_seq_mes_ref_ant,
				cd_conta_contabil,
				cd_conta_contabil_ant,
				cd_centro_custo,
				vl_saldo)
			values (	nextval('ctb_saldo_alteracao_conta_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_mes_dest_w,
				nr_seq_mes_ref_p,
				cd_conta_troca_w,
				cd_conta_contabil_w,
				cd_centro_custo_w,
				coalesce(vl_saldo_w,0));
			
			cd_conta_contabil_w	:= cd_conta_troca_w;
		end if;
	end if;

	cd_classificacao_w	:= substr(ctb_obter_classif_conta(cd_conta_contabil_w, null, dt_referencia_dest_w),1,40);
	cd_classif_sup_w	:= substr(ctb_obter_classif_conta_sup(cd_classificacao_w, dt_referencia_dest_w, cd_empresa_w),1,40);
	nr_nivel_conta_w	:= ctb_obter_nivel_classif_conta(cd_classificacao_w);

	select	coalesce(max(vl_movimento),0),
		coalesce(max(nr_sequencia),0)
	into STRICT	vl_movimento_w,
		nr_sequencia_w
	from	ctb_saldo
	where	nr_seq_mes_ref		= nr_seq_mes_dest_w
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_conta_contabil	= cd_conta_contabil_w
	and	coalesce(cd_centro_custo,0) 	= coalesce(cd_centro_custo_w,0);

	if (nr_sequencia_w > 0) then
		update	ctb_saldo
		SET	vl_saldo	= vl_saldo_w + vl_movimento_w
		where	nr_sequencia	= nr_sequencia_w;
	else
		begin
		select	nextval('ctb_saldo_seq')
		into STRICT	nr_sequencia_w
		;
		insert into ctb_saldo(
			nr_sequencia,	
			nr_seq_mes_ref,
			dt_atualizacao,
			nm_usuario,
			cd_estabelecimento,
			cd_conta_contabil,
			vl_debito,
			vl_credito,			
			vl_saldo,
			vl_movimento,
			cd_centro_custo,
			vl_encerramento,
			vl_enc_debito,
			vl_enc_credito,
			cd_classificacao,
			cd_classif_sup,
			nr_nivel_conta,
			vl_ordem,
			vl_ord_debito,
			vl_ord_credito)
		values ( nr_sequencia_w,
			nr_seq_mes_dest_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_w,
			cd_conta_contabil_w,
			0,
			0,
			vl_saldo_w,
			0,
			cd_centro_custo_w,
			0,
			0,
			0,
			cd_classificacao_w,
			cd_classif_sup_w,
			nr_nivel_conta_w,
			0,
			0,
			0);
		exception
			when others then				
				insert into ctb_log(
					cd_log,
					ds_log,
					nm_usuario,
					dt_atualizacao)
				values (	301,
					cd_conta_contabil_w,
					nm_usuario_p,
					clock_timestamp());
		end;
	end if;
	end;
END LOOP;
CLOSE C01;
commit;

ds_erro_w := CTB_Acumular_Saldo(nr_seq_mes_dest_w, cd_estabelecimento_p, nm_usuario_p, ds_erro_w);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_virada_saldo ( nr_seq_mes_ref_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

