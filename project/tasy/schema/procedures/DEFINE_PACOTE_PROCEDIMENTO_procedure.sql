-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_pacote_procedimento ( nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_convenio_p bigint, cd_categoria_p text, nm_usuario_p text, ie_gerar_p text, nr_seq_pacote_p bigint, ie_tipo_acomod_p text) AS $body$
DECLARE


nr_seq_pacote_w		bigint;
nr_sequencia_w		bigint;
cd_procedimento_w	bigint;
dt_procedimento_w		timestamp;
dt_inicio_pacote_w		timestamp;
dt_final_pacote_w		timestamp;
dt_alta_w			timestamp;
dt_entrada_w		timestamp;

ie_origem_proced_w	bigint;
ie_tipo_acomod_w	varchar(2);
qt_dias_pacote_w	integer;
qt_dias_uti_w		integer;
qt_dias_hospital_w	integer;
qt_dias_internacao_w	double precision;
qt_dias_unidade_w	double precision;
ie_excedente_w		smallint;
pr_afaturar_w		double precision;
vl_pacote_w		double precision;
vl_honorario_w		double precision;
vl_anestesista_w	double precision;
vl_auxiliares_w		double precision;
vl_procedimento_w	double precision;
vl_procedimento_www	double precision;
qt_ponto_pacote_w	double precision;
qt_ponto_honorario_w	double precision;

nr_seq_atend_pacote_w	bigint;
nr_seq_proc_pacote_w	bigint;
nr_seq_tipo_acomod_w	bigint;

cd_procedimento_pac_w	bigint;
ie_origem_proced_pac_w	bigint;

vl_ch_honorarios_w	double precision;
vl_ch_operacional_w	double precision;
cd_estabelecimento_w	integer;
cd_estab_conta_w	integer;
vl_filme_w		double precision;
cd_categoria_w		varchar(10);
ie_tipo_atendimento_w	smallint;
ie_tipo_atend_conta_w	smallint;
cd_setor_atendimento_w	integer;
cd_setor_atend_w	integer;
cd_medico_executor_w	varchar(10);
cd_regra_honorario_w	varchar(5);
cd_regra_honorario_ww	varchar(5);
ie_conta_honorario_w	varchar(1);
ie_calcula_honorario_w	varchar(1)		:= 'S';
cd_cgc_honorario_w	varchar(14);
cd_pessoa_honorario_w	varchar(10);
cd_estrutura_conta_w	integer;
cd_estrutura_honor_w	integer 		:= 0;
cd_especialidade_medica_w	integer		:= 0;
ie_classificacao_w	varchar(01);
nr_seq_criterio_w	bigint;
ie_exige_gabarito_w	varchar(01);
cd_cgc_prestador_w	varchar(14);
qt_proc_w		double precision;

ie_regra_hora_inicio_w		varchar(10);
ie_regra_hora_fim_w		varchar(10);

qt_pacote_w			bigint;		-- aumentei o tamanho de 3 para 10, os 115122, hosp. santa rita
ie_gerar_w			varchar(1)	:= 'S';

cd_usuario_convenio_w		varchar(40);
cd_plano_w			varchar(20);
ie_clinica_w			bigint;
cd_empresa_ref_w		bigint;
qt_idade_paciente_w		smallint;
qt_idade_pac_entrada_w	smallint;

ie_ratear_repasse_w		varchar(2);
cd_proc_exigido_w		bigint;
ie_origem_proc_exigido_w	bigint;
ie_proc_exigido_ok_w		varchar(1);
cont_w				bigint;
cd_edicao_amb_w			bigint;
qt_dias_inter_w			bigint;
ie_gerar_proced_negativo_w	varchar(01);
ie_via_acesso_w			varchar(1);

nr_interno_conta_w		bigint;
qt_atend_conv_w			bigint;

vl_procedimento_ww		double precision;

ie_retorno_w			varchar(01);
nr_cirurgia_w			bigint;
cd_tipo_anestesia_w		varchar(10);

hr_final_pacote_w		timestamp;
pr_faturar_w			double precision;
ie_acomp_w			varchar(01);
ie_carater_inter_sus_w		varchar(02);
cd_setor_pacote_w		bigint;
nr_seq_proc_interno_w		bigint;
dt_inicio_cirurgia_w		timestamp;
dt_fim_cirurgia_w		timestamp;
nr_min_duracao_prev_w		bigint;
nr_min_duracao_real_w		bigint;
ie_codigo_convenio_w		varchar(03);
cd_classif_setor_w		smallint;
dt_entrada_unidade_w		timestamp;
dt_saida_unidade_w		timestamp;
qt_passagem_classif_w		bigint;

vl_materiais_w			double precision;

tx_pacote_maior_w		double precision;
tx_pacote_w			double precision;
tx_pacote_seg_maior_w		double precision;
qt_regra_tx_cirurgia_w		bigint;
nr_cirurgia_ant_w		bigint;
vl_pacote_maior_valor_w		double precision;
nr_pacote_maior_valor_w		bigint;
ie_consiste_cirurgia_w		varchar(1);
nr_seq_proc_int_pacte_w		bigint;
ie_mat_exigido_ok_w		varchar(1):= 'S';
cd_mat_exigido_w		integer;

ds_observacao_w			varchar(255);
varsetorexclusivo_w		varchar(1);
ie_acesso_branco_w		varchar(1);
cd_setor_exclusivo_w		bigint;

ie_exige_item_conta_w		varchar(1);
ie_item_exigido_ok_w		varchar(1):= 'S';
var_estab_atendimento_w		varchar(1);

IE_CONSISTE_SIT_GLOSA_w		varchar(1);
ie_utiliza_acomod_conv_atend_w	varchar(1):= 'N';

nr_seq_proc_int_formador_w	bigint;
cd_proc_formador_w		bigint;
ie_origem_proc_formador_w	bigint;
ie_pacote_multiplo_w		varchar(1):= 'S';
ie_prioridade_w			bigint;

cd_procedimento_ww		bigint;
ie_origem_proced_ww		bigint;
ie_prioridade_ww		bigint;
nr_seq_pacote_ww		bigint;
nr_sequencia_ww			bigint;
qt_formador_w			bigint;
cd_procedimento_ant_w		bigint;
ie_pacote_ordem_prioridade_w	varchar(1):= 'N';

qt_regra_tx_w			bigint;
ie_regra_geral_w		varchar(1);
qt_proc_regra_w			bigint;
cd_area_procedimento_w		bigint;
cd_especialidade_proc_w		bigint;
cd_grupo_proc_w			bigint;
nr_seq_regra_tx_w		bigint;
nr_seq_proc_origem_w		bigint;
ie_achou_w			varchar(1):= 'N';
nr_seq_classif_medico_w		bigint;
nr_seq_atepacu_w		bigint;
dt_entrada_unidade_ww		timestamp;
ie_acomod_setor_proc_w		varchar(1);
cd_tipo_acomodacao_w		bigint;
cd_tipo_acomod_conv_w		smallint;
ie_diferente_w			varchar(1):= 'N';
cd_procedencia_w		integer;
nr_doc_convenio_w		varchar(20);
ie_guia_w			varchar(10);
cd_setor_proc_pacote_w		integer;
ie_sexo_w			varchar(1);
pr_acrescimo_rn_w		double precision;
vl_pr_filho_w			double precision;
qt_filho_w			bigint;

dt_ini_pacote_w			timestamp;
dt_ini_pacote_ant_w		timestamp;
qt_regra_ww			bigint;
ie_sem_prioridade_w		varchar(1):= 'N';
ie_doc_executor_w		smallint;
ie_lado_w			varchar(10) := null;
nr_sequencia_prescricao_w		bigint;
nr_prescricao_w			bigint		:= 0;
cd_cbo_w			varchar(06);

nr_cirurgia_pacote_w		bigint:=0;
nr_cirurgia_pacote_ant_w 	bigint:=0;

ie_regra_perc_cirurgia_w	varchar(1):='N';
ie_setor_lanc_exclusivo_w	varchar(1):='N';
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;

ie_calc_adicional_horario_w	varchar(1):= 'S';
tx_adic_medico_w    		double precision		:= 1;
tx_adic_anestesista_w 		double precision		:= 1;
tx_adic_auxiliares_w 		double precision		:= 1;
tx_adic_custo_operacional_w	double precision		:= 1;
tx_adic_materiais_w 		double precision		:= 1;
tx_adic_procedimento_w		double precision		:= 1;
vl_adic_proc_w			double precision		:= 0;
vl_adic_medico_w		double precision		:= 0;
cd_proced_calculo_horario_w	bigint;
ie_origem_proced_horario_w	bigint;
nr_seq_adic_w			bigint;
vl_procedimento_atual_w		double precision;
vl_procedimento_orig_w		double precision;
vl_custo_operacional_orig_w	double precision;
vl_anestesista_orig_w		double precision;
vl_medico_orig_w		double precision;
vl_auxiliares_orig_w		double precision;
vl_materiais_orig_w		double precision;
cd_procedimento_tuss_w		bigint;
qt_procedimento_w		double precision;
ie_permite_varias_regras_w	varchar(1);
nr_seq_regra_tx_pacote_w	bigint;
nr_seq_regra_tx_pacote_ant_w	bigint:= 0;
sql_errm_w			varchar(2000);

vl_pacote_seg_maior_valor_w		double precision;
nr_pacote_seg_maior_valor_w		bigint;
nr_seq_proc_interno_ww			bigint;
ie_atualiza_medico_w			varchar(1);
nr_seq_grupo_rec_w		bigint;
ie_opcional_w			varchar(1);
ie_mat_opcional_ok_w		varchar(1);
qt_regra_mat_opcional_w		bigint;
cd_procedimento_convenio_w	varchar(20);
cd_grupo_conversao_w		varchar(10);
nr_seq_proc_conv_w		bigint;
ie_visualiza_proc_conv_w	varchar(1);
ie_tipo_atend_tiss_w		varchar(2);
ie_define_anestesia_w		varchar(5);
cd_centro_custo_w		integer;

qt_atend_pacote_partic_w	bigint;
nr_seq_w_atend_pac_w		bigint;
nr_seq_partic_w			bigint;
cd_cgc_prest_pacote_w		varchar(14);
ie_medico_exec_pacote_w		varchar(1);
cd_medico_exec_pacote_w		varchar(10);
cd_pessoa_fisica_pacote_w	varchar(10);
cd_medico_exec_filtro_w		varchar(10);
ie_tipo_atend_med_w		smallint;
qt_minimo_w			bigint;
qt_proc_formador_w		bigint;
nr_seq_exame_w			bigint;
ie_credenciado_w		varchar(1);
qt_proc_pacote_orig_w		bigint;

cd_espec_medica_pacote_w	bigint;
ie_funcao_medico_w		varchar(10);
ie_atualiza_func_medico_w	varchar(2);

pr_adicional_hora_w		double precision;
nr_seq_regra_adic_hora_w	bigint;
qt_hora_w			pacote_tipo_acomodacao.qt_hora%type;
pr_aux_proc_w			double precision;
nr_seq_atepacu_ww		bigint;
cd_tipo_acomod_unid_w		tipo_acomodacao.cd_tipo_acomodacao%type;

cd_unidade_basica_w		atend_paciente_unidade.cd_unidade_basica%type;
cd_unidade_compl_w		atend_paciente_unidade.cd_unidade_compl%type;
nr_seq_local_pa_w		unidade_atendimento.nr_seq_local_pa%type;

ie_atend_alta_w			pacote_tipo_acomodacao.ie_atend_alta%type;
cd_moeda_pacote_w       PACOTE.cd_moeda%type;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
qt_dias_pacote_proc_w		bigint;
ie_tiss_tipo_guia_w		procedimento_paciente.ie_tiss_tipo_guia%type;
nr_prescr_proc_pacote_w		procedimento_paciente.nr_prescricao%type;
cd_doenca_w		diagnostico_doenca.cd_doenca%type;
ie_pacote_cid_w		varchar(1):= 'S';
cd_estabelecimento_logado_w	conta_paciente.cd_estabelecimento%type;

ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
ie_classif_convenio_w		convenio.ie_classif_contabil%type;
ie_complexidade_sus_w		sus_procedimento.ie_complexidade%type;
ie_tipo_financ_sus_w		sus_procedimento.ie_tipo_financiamento%type;
cd_conta_contabil_w		material_atend_paciente.cd_conta_contabil%type;

nr_seq_proc_interno_form_w	pacote_formadores.nr_seq_proc_interno%type;
nr_seq_proc_int_pacte_ww	procedimento_paciente.nr_seq_proc_interno%type;
nr_seq_proc_int_pacte_ant_w	procedimento_paciente.nr_seq_proc_interno%type;
nr_seq_proc_origem_ww		procedimento_paciente.nr_sequencia%type;

ie_proc_interno_form_w		pacote.ie_proc_interno_form%type := 'N';
ie_exige_proc_interno_form_w	varchar(1):= 'S';
ds_mask_w                       varchar(20);
ie_regra_ordem_pacote_w         convenio_estabelecimento.ie_regra_ordem_pacote%type:= 'N';

ie_prior_form_pacote_w		convenio_estabelecimento.ie_prior_form_pacote%type:= 'N';

dt_ini_pacote_ww		timestamp;
dt_final_pacote_ww		timestamp;

cd_procedimento_form_w		pacote_formadores.cd_procedimento%type;
ie_origem_proced_form_w		pacote_formadores.ie_origem_proced%type;
nr_seq_proc_int_form_w		pacote_formadores.nr_seq_proc_interno%type;

nr_sequencia_proc_pac_w		procedimento_paciente.nr_sequencia%type;
cd_procedimento_proc_pac_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_proc_pac_w	procedimento_paciente.ie_origem_proced%type;
nr_seq_proc_int_proc_pac_w	procedimento_paciente.nr_seq_proc_interno%type;

qt_form_pacote_w		bigint := 0;

type map_number is table of bigint index by varchar(50);
proc_formador_list_w		map_number;
proc_list_final_w		map_number;
i_list_final_w			varchar(50);

c010 CURSOR FOR
SELECT 	c.nr_seq_pacote,
	a.nr_sequencia,
	a.dt_procedimento,
	coalesce(a.tx_procedimento,100),
	a.cd_procedimento,
	a.ie_origem_proced,
	a.qt_procedimento,
	b.cd_categoria_calculo,
	a.cd_setor_atendimento,
	a.cd_medico_executor,
	a.cd_especialidade,
	a.nr_cirurgia,
	a.cd_cgc_prestador, /* felipe 08/06/2006 - os34992*/
	a.nr_seq_proc_interno,
	c.ds_observacao,
	coalesce(c.ie_prioridade,999),
	a.nr_seq_atepacu,
	a.dt_entrada_unidade,
	a.ie_doc_executor,
	a.nr_prescricao,
	a.nr_sequencia_prescricao,
	a.cd_cbo,
	b.dt_periodo_inicial,
	b.dt_periodo_final,
	b.ie_tipo_atend_conta,
	b.ie_tipo_atend_tiss,
	a.nr_seq_exame,
	c.cd_moeda,
	coalesce(c.ie_proc_interno_form, 'N')
from 	pacote c,
		procedimento_paciente a,
		conta_paciente b
where	b.nr_atendimento		= nr_atendimento_p
and	b.nr_interno_conta		= nr_interno_conta_p
and	b.cd_convenio_parametro		= cd_convenio_p
and	b.ie_status_acerto		= 1
and	b.cd_convenio_parametro		= c.cd_convenio
and	b.nr_interno_conta		= a.nr_interno_conta
and	to_char(a.cd_procedimento)	= c.cd_proced_pacote
and	to_char(a.ie_origem_proced)	= c.ie_origem_proced
and	c.cd_estabelecimento		= cd_estabelecimento_w
and	((a.cd_situacao_glosa		= 0 AND IE_CONSISTE_SIT_GLOSA_w = 'S') or (IE_CONSISTE_SIT_GLOSA_w = 'N'))
and	c.ie_situacao			= 'A'
and	coalesce(a.nr_seq_proc_pacote::text, '') = ''
and	c.nr_seq_pacote			= coalesce(nr_seq_pacote_p, c.nr_seq_pacote)
and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

c020 CURSOR FOR
SELECT 	coalesce(qt_dias_pacote,0),
	coalesce(qt_dias_hospital,0),
	coalesce(qt_dias_uti,0),
	ie_excedente,
	cd_procedimento,
	ie_origem_proced,
	coalesce(vl_pacote,0),
	coalesce(vl_honorario,0),
	coalesce(vl_anestesista,0),
	coalesce(qt_ponto_pacote,0),
	coalesce(qt_ponto_honorario,0),
	cd_estrutura_conta,
	ie_classificacao,
	nr_sequencia,
	ie_exige_gabarito,
	a.ie_regra_hora_inicio,
	a.ie_regra_hora_fim,
	coalesce(a.ie_ratear_repasse,'N'),
	coalesce(ie_gerar_proced_negativo, 'S'),
	hr_final_pacote,
	pr_faturar_pacote,
	coalesce(cd_setor_atendimento,0),
	nr_seq_proc_interno,
	coalesce(vl_materiais,0),
	coalesce(ie_consiste_cirurgia,'N'),
	coalesce(ie_exige_item_conta,'N'),
	coalesce(vl_auxiliares,0),
	coalesce(pr_acrescimo_rn,0),
	coalesce(ie_setor_lanc_exclusivo,'N'),
	a.qt_procedimento,
	coalesce(a.qt_hora,0)
from 	pacote_tipo_acomodacao a
where 	nr_seq_pacote			= nr_seq_pacote_w
and 	ie_tipo_acomod			= ie_tipo_acomod_w
and	coalesce(cd_categoria, coalesce(cd_categoria_p, 'X'))		= coalesce(cd_categoria_p, 'X')
and	coalesce(cd_plano, coalesce(cd_plano_w, 'X'))			= coalesce(cd_plano_w, 'X')
and 	coalesce(ie_clinica, coalesce(ie_clinica_w,0))			= coalesce(ie_clinica_w, 0)
and	coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
and	coalesce(a.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
and	coalesce(a.cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w
and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
and	((coalesce(ie_atend_alta,'A') = 'A') or (ie_atend_alta = ie_atend_alta_w))
and ((coalesce(ie_data_consiste_idade,'A') = 'A' and qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)) or (coalesce(ie_data_consiste_idade,'A') = 'E' and qt_idade_pac_entrada_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)))
and	coalesce(dt_procedimento_w, a.dt_vigencia) between coalesce(a.dt_vigencia,dt_procedimento_w) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfday(a.dt_vigencia_final) ,clock_timestamp() + interval '360 days')
and	(((coalesce(a.ie_consiste_dias_inter,'A') = 'A') and (qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w))) or
	 ((coalesce(a.ie_consiste_dias_inter,'A') = 'P') and (qt_dias_pacote_proc_w between coalesce(qt_dias_inter_inicio, qt_dias_pacote_proc_w) and coalesce(qt_dias_inter_final, qt_dias_pacote_proc_w))))
and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
and	coalesce(ie_lado,coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
and 	((coalesce(a.ie_credenciado,'T') = 'T') or (coalesce(a.ie_credenciado,'T') = coalesce(ie_credenciado_w,'N')))
and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X')
and	coalesce(dt_vigencia,dt_procedimento_w) = (
		SELECT	max(coalesce(dt_vigencia,dt_procedimento_w))
		from	pacote_tipo_acomodacao b
		where	nr_seq_pacote			= nr_seq_pacote_w
		and 	ie_tipo_acomod			= ie_tipo_acomod_w
		and	coalesce(cd_categoria, coalesce(cd_categoria_p, 'X'))	= coalesce(cd_categoria_p, 'X')
		and	coalesce(cd_plano, coalesce(cd_plano_w, 'X'))		= coalesce(cd_plano_w, 'X')
		--and	nvl(ie_classificacao,'N')	= 'N'
		and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
		and	((coalesce(ie_atend_alta,'A') = 'A') or (ie_atend_alta = ie_atend_alta_w))
		and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
		and	coalesce(b.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
		and	coalesce(b.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
		and ((coalesce(ie_data_consiste_idade,'A') = 'A' and qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)) or (coalesce(ie_data_consiste_idade,'A') = 'E' and qt_idade_pac_entrada_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)))
		and	(((coalesce(a.ie_consiste_dias_inter,'A') = 'A') and (qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w))) or
			 ((coalesce(a.ie_consiste_dias_inter,'A') = 'P') and (qt_dias_pacote_proc_w between coalesce(qt_dias_inter_inicio, qt_dias_pacote_proc_w) and coalesce(qt_dias_inter_final, qt_dias_pacote_proc_w))))
		and	coalesce(dt_procedimento_w, dt_vigencia) between coalesce(dt_vigencia,dt_procedimento_w) and coalesce( ESTABLISHMENT_TIMEZONE_UTILS.endOfday(dt_vigencia_final),clock_timestamp() + interval '360 days')
		and 	coalesce(ie_situacao, 'A') 		= 'A'
		and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
		and	coalesce(ie_lado,coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
		and	coalesce(b.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
		and 	((coalesce(b.ie_credenciado,'T') = 'T') or (coalesce(b.ie_credenciado,'T') = coalesce(ie_credenciado_w,'N')))
		and 	((coalesce(cd_medico_executor::text, '') = '') or (cd_medico_executor = cd_medico_executor_w))
		and	cd_procedimento			= a.cd_procedimento
		and	ie_origem_proced		= a.ie_origem_proced
                and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X'))
and 	coalesce(cd_categoria,'X') =   (
		select 	coalesce(max(cd_categoria),'X')
                from 	pacote_tipo_acomodacao b
		where 	nr_seq_pacote = nr_seq_pacote_w
		and 	ie_tipo_acomod = ie_tipo_acomod_w
		and 	coalesce(b.ie_situacao, 'A') 		= 'A'
		and 	coalesce(cd_categoria, coalesce(cd_categoria_p, 'X')) = coalesce(cd_categoria_p, 'X')
		and	coalesce(cd_plano, coalesce(cd_plano_w, 'X'))	    = coalesce(cd_plano_w, 'X')
		and	coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
		and	coalesce(a.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
		and	coalesce(a.cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w
		--and	nvl(ie_classificacao,'N')	= 'N'
		and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
		and	((coalesce(ie_atend_alta,'A') = 'A') or (ie_atend_alta = ie_atend_alta_w))
		and ((coalesce(ie_data_consiste_idade,'A') = 'A' and qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)) or (coalesce(ie_data_consiste_idade,'A') = 'E' and qt_idade_pac_entrada_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)))
		and	(((coalesce(a.ie_consiste_dias_inter,'A') = 'A') and (qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w))) or
			 ((coalesce(a.ie_consiste_dias_inter,'A') = 'P') and (qt_dias_pacote_proc_w between coalesce(qt_dias_inter_inicio, qt_dias_pacote_proc_w) and coalesce(qt_dias_inter_final, qt_dias_pacote_proc_w))))
		and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
		and	coalesce(dt_procedimento_w, dt_vigencia) between coalesce(dt_vigencia,dt_procedimento_w) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfday(dt_vigencia_final),clock_timestamp() + interval '360 days')
		and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
		and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
		and	coalesce(ie_lado,coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
		and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
		and 	((coalesce(b.ie_credenciado,'T') = 'T') or (coalesce(b.ie_credenciado,'T') = coalesce(ie_credenciado_w,'N')))
		and 	((coalesce(cd_medico_executor::text, '') = '') or (cd_medico_executor = cd_medico_executor_w))
		and	cd_procedimento			= a.cd_procedimento
		and	ie_origem_proced		= a.ie_origem_proced
                and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X'))
and	coalesce(cd_plano,'X') = (
		select	coalesce(max(cd_plano),'X')
		from	pacote_tipo_acomodacao b
		where	nr_seq_pacote			= nr_seq_pacote_w
		and 	ie_tipo_acomod			= ie_tipo_acomod_w
		and	coalesce(cd_categoria, coalesce(cd_categoria_p, 'X'))	= coalesce(cd_categoria_p, 'X')
		and	coalesce(cd_plano, coalesce(cd_plano_w, 'X'))		= coalesce(cd_plano_w, 'X')
		--and	nvl(ie_classificacao,'N')	= 'N'
		and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
		and	((coalesce(ie_atend_alta,'A') = 'A') or (ie_atend_alta = ie_atend_alta_w))
		and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
		and	coalesce(b.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
		and	coalesce(b.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
		and ((coalesce(ie_data_consiste_idade,'A') = 'A' and qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)) or (coalesce(ie_data_consiste_idade,'A') = 'E' and qt_idade_pac_entrada_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)))
		and	(((coalesce(a.ie_consiste_dias_inter,'A') = 'A') and (qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w))) or
			 ((coalesce(a.ie_consiste_dias_inter,'A') = 'P') and (qt_dias_pacote_proc_w between coalesce(qt_dias_inter_inicio, qt_dias_pacote_proc_w) and coalesce(qt_dias_inter_final, qt_dias_pacote_proc_w))))
		and	coalesce(dt_procedimento_w, dt_vigencia) between coalesce(dt_vigencia,dt_procedimento_w) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfday(dt_vigencia_final) ,clock_timestamp() + interval '360 days')
		and 	coalesce(ie_situacao, 'A') 		= 'A'
		and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
		and	coalesce(ie_lado,coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
		and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
		and 	((coalesce(b.ie_credenciado,'T') = 'T') or (coalesce(b.ie_credenciado,'T') = coalesce(ie_credenciado_w,'N')))
		and 	((coalesce(cd_medico_executor::text, '') = '') or (cd_medico_executor = cd_medico_executor_w))
		and	cd_procedimento			= a.cd_procedimento
		and	ie_origem_proced		= a.ie_origem_proced
                and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X'))
and 	coalesce(cd_medico_executor,'X') = (
		select 	coalesce(max(cd_medico_executor),'X')
                from 	pacote_tipo_acomodacao
		where 	nr_seq_pacote = nr_seq_pacote_w
		and 	ie_tipo_acomod = ie_tipo_acomod_w
		and 	coalesce(cd_categoria, coalesce(cd_categoria_p, 'X')) = coalesce(cd_categoria_p, 'X')
		and	coalesce(cd_plano, coalesce(cd_plano_w, 'X'))			= coalesce(cd_plano_w, 'X')
		and	coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
		and	coalesce(a.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
		and	coalesce(a.cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w
		--and	nvl(ie_classificacao,'N')	= 'N'
		and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
		and	((coalesce(ie_atend_alta,'A') = 'A') or (ie_atend_alta = ie_atend_alta_w))
		and ((coalesce(ie_data_consiste_idade,'A') = 'A' and qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)) or (coalesce(ie_data_consiste_idade,'A') = 'E' and qt_idade_pac_entrada_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)))
		and	coalesce(dt_procedimento_w, dt_vigencia) between coalesce(dt_vigencia,dt_procedimento_w) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfday(dt_vigencia_final),clock_timestamp() + interval '360 days')
		and 	coalesce(ie_situacao, 'A') 		= 'A'
		and	(((coalesce(a.ie_consiste_dias_inter,'A') = 'A') and (qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w))) or
			 ((coalesce(a.ie_consiste_dias_inter,'A') = 'P') and (qt_dias_pacote_proc_w between coalesce(qt_dias_inter_inicio, qt_dias_pacote_proc_w) and coalesce(qt_dias_inter_final, qt_dias_pacote_proc_w))))
		and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
		and 	((coalesce(cd_medico_executor::text, '') = '') or (cd_medico_executor = cd_medico_executor_w))
		and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
		and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
		and	coalesce(ie_lado,coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
		and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
		and 	((coalesce(ie_credenciado,'T') = 'T') or (coalesce(ie_credenciado,'T') = coalesce(ie_credenciado_w,'N')))
		and	cd_procedimento			= a.cd_procedimento
		and	ie_origem_proced		= a.ie_origem_proced
                and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X'))
and 	coalesce(ie_situacao, 'A') 		= 'A'
and	coalesce(qt_proc_pacote_orig_w,0) = 0
order by coalesce(dt_vigencia,dt_procedimento_w),
	 coalesce(cd_setor_atendimento, 0);

c020_new CURSOR FOR
SELECT 	coalesce(qt_dias_pacote,0),
	coalesce(qt_dias_hospital,0),
	coalesce(qt_dias_uti,0),
	ie_excedente,
	cd_procedimento,
	ie_origem_proced,
	coalesce(vl_pacote,0),
	coalesce(vl_honorario,0),
	coalesce(vl_anestesista,0),
	coalesce(qt_ponto_pacote,0),
	coalesce(qt_ponto_honorario,0),
	cd_estrutura_conta,
	ie_classificacao,
	nr_sequencia,
	ie_exige_gabarito,
	a.ie_regra_hora_inicio,
	a.ie_regra_hora_fim,
	coalesce(a.ie_ratear_repasse,'N'),
	coalesce(ie_gerar_proced_negativo, 'S'),
	hr_final_pacote,
	pr_faturar_pacote,
	coalesce(cd_setor_atendimento,0),
	nr_seq_proc_interno,
	coalesce(vl_materiais,0),
	coalesce(ie_consiste_cirurgia,'N'),
	coalesce(ie_exige_item_conta,'N'),
	coalesce(vl_auxiliares,0),
	coalesce(pr_acrescimo_rn,0),
	coalesce(ie_setor_lanc_exclusivo,'N'),
	a.qt_procedimento,
	coalesce(a.qt_hora,0)
from 	pacote_tipo_acomodacao a
where 	nr_seq_pacote			= nr_seq_pacote_w
and 	ie_tipo_acomod			= ie_tipo_acomod_w
and	coalesce(cd_categoria, coalesce(cd_categoria_p, 'X'))		= coalesce(cd_categoria_p, 'X')
and	coalesce(cd_plano, coalesce(cd_plano_w, 'X'))			= coalesce(cd_plano_w, 'X')
and 	coalesce(ie_clinica, coalesce(ie_clinica_w,0))			= coalesce(ie_clinica_w, 0)
and	coalesce(a.ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
and	coalesce(a.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0))	= coalesce(ie_tipo_atend_conta_w,0)
and	coalesce(a.cd_setor_atendimento, cd_setor_atendimento_w)	= cd_setor_atendimento_w
and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
and	((coalesce(ie_atend_alta,'A') = 'A') or (ie_atend_alta = ie_atend_alta_w))
and     ((coalesce(ie_data_consiste_idade,'A') = 'A' and qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)) or (coalesce(ie_data_consiste_idade,'A') = 'E' and qt_idade_pac_entrada_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)))
and	coalesce(dt_procedimento_w, a.dt_vigencia) between coalesce(a.dt_vigencia,dt_procedimento_w) and coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfday(a.dt_vigencia_final) ,clock_timestamp() + interval '360 days')
and	(((coalesce(a.ie_consiste_dias_inter,'A') = 'A') and (qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w))) or
	 ((coalesce(a.ie_consiste_dias_inter,'A') = 'P') and (qt_dias_pacote_proc_w between coalesce(qt_dias_inter_inicio, qt_dias_pacote_proc_w) and coalesce(qt_dias_inter_final, qt_dias_pacote_proc_w))))
and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
and	coalesce(ie_lado,coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
and	coalesce(a.cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
and 	((coalesce(a.ie_credenciado,'T') = 'T') or (coalesce(a.ie_credenciado,'T') = coalesce(ie_credenciado_w,'N')))
and	coalesce(ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w, 'X')) = coalesce(ie_carater_inter_sus_w, 'X')
and 	coalesce(ie_situacao, 'A') 		= 'A'
and	coalesce(qt_proc_pacote_orig_w,0) = 0
order by	coalesce(cd_setor_atendimento,0),
	coalesce(cd_centro_custo,0),
	coalesce(ie_tipo_atend_conta,0),
	coalesce(ie_tipo_atendimento,0),
	coalesce(ie_clinica,'0'),
	coalesce(cd_categoria,'0'),
	coalesce(cd_plano,' '),
	ie_credenciado,
	coalesce(qt_idade_min,0),
	coalesce(qt_idade_max,0),
	coalesce(qt_dias_inter_inicio,0),
	coalesce(qt_dias_inter_final,0),
	coalesce(ie_sexo,'A'),
	coalesce(ie_lado,'0'),
	coalesce(ie_tipo_anestesia,0),
	coalesce(ie_carater_inter_sus,0),
	dt_vigencia,
	coalesce(nr_seq_proc_interno,0),
	coalesce(cd_procedimento, 0),
	coalesce(ie_atend_retorno,'A'),
	coalesce(ie_atend_alta,'A'),
	coalesce(ie_data_consiste_idade,'A'),
	coalesce(ie_consiste_dias_inter,'A'),
	coalesce(ie_atend_acomp,'A');

c030 CURSOR FOR
SELECT a.nr_sequencia,
	a.nr_seq_procedimento
from 	conta_paciente c,
	procedimento_paciente b,
	atendimento_pacote a
where a.nr_atendimento	= nr_atendimento_p
  and a.nr_seq_proc_origem	= b.nr_sequencia
  and c.nr_interno_conta	= nr_interno_conta_p
  and b.nr_interno_conta	= c.nr_interno_conta
  and c.ie_status_acerto	= 1;

c04 CURSOR FOR
SELECT	nr_seq_pacote,
	pr_afaturar,
	ie_tipo_acomod,
	qt_dias_pacote,
	qt_dias_hospital,
	qt_dias_uti,
	ie_excedente,
	dt_inicio_pacote,
	dt_final_pacote,
	nr_seq_proc_origem,
	ie_classificacao,
	nr_seq_tipo_acomod,
	ie_exige_gabarito,
	cd_procedimento,
	ie_origem_proced,
	vl_honorario,
	vl_anestesista,
	vl_procedimento,
	vl_pacote,
	cd_regra_honorario,
	cd_estrutura_conta,
	coalesce(ie_ratear_repasse,'N'),
	nr_seq_proc_interno,
	vl_materiais,
	ie_consiste_cirurgia,
	ds_observacao,
	cd_setor_exclusivo,
	vl_auxiliares,
	qt_procedimento,
	nr_sequencia
from	w_atendimento_pacote
where	nr_atendimento	= nr_atendimento_p
and	cd_convenio	= cd_convenio_p
and	ie_gerar	= ie_gerar_w;


c05 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced
from	pacote_tipo_acomod_proc
where	nr_seq_pac_acomod	= nr_seq_tipo_acomod_w;

c06 CURSOR FOR
	SELECT	obter_classif_setor(cd_setor_atendimento),
		dt_entrada_unidade,
		dt_saida_unidade
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	order by dt_entrada_unidade;


c07 CURSOR FOR
	SELECT 	a.nr_sequencia,
		somente_numero(obter_dados_propaci('NC',nr_seq_proc_origem)),
		obter_valor_pacote(nr_seq_procedimento),
		nr_seq_procedimento
	from 	atendimento_pacote a
	where 	a.nr_seq_proc_origem in (SELECT nr_sequencia
					from 	procedimento_paciente b
                                        where 	b.nr_interno_conta =  nr_interno_conta_p)
	and 	somente_numero(obter_dados_propaci('NC',nr_seq_proc_origem)) is not null
	and 	somente_numero(obter_dados_propaci('NC',nr_seq_proc_origem)) > 0
	order by 2,3 desc; --cuidado ao alterar o order by desse cursor
c08 CURSOR FOR
	SELECT	cd_material,
		ie_opcional
	from	pacote_tipo_acomod_mat
	where	nr_seq_pac_acomod	= nr_seq_tipo_acomod_w;

c09 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		qt_minimo
	from	pacote_formadores
	where	nr_seq_pacote	= nr_seq_pacote_w;

c10 CURSOR FOR
	SELECT	cd_doenca
	from	pacote_cid
	where	nr_seq_pacote	= nr_seq_pacote_w;

c11 CURSOR FOR
	SELECT	b.cd_proced_pacote,
		b.ie_origem_proced,
		a.ie_prioridade,
		a.nr_seq_pacote,
		a.nr_sequencia,
		a.dt_inicio_pacote,
		a.nr_seq_proc_origem
	from 	w_atendimento_pacote a,
		pacote b
	where	a.nr_seq_pacote = b.nr_seq_pacote
	and 	a.nr_atendimento = nr_atendimento_p
	and 	coalesce(ie_pacote_ordem_prioridade_w,'N') = 'S'
	and 	((ie_sem_prioridade_w = 'S') or (ie_sem_prioridade_w = 'N' AND a.ie_prioridade IS NOT NULL AND a.ie_prioridade::text <> ''))
	order by b.cd_proced_pacote,
		 b.ie_origem_proced,
		 a.dt_inicio_pacote,
		a.ie_prioridade asc;

c15 CURSOR FOR
	SELECT	b.cd_proced_pacote,
		b.ie_origem_proced,
		a.ie_prioridade,
		a.nr_seq_pacote,
		a.nr_sequencia,
		a.dt_inicio_pacote
	from 	w_atendimento_pacote a,
		pacote b
	where	a.nr_seq_pacote = b.nr_seq_pacote
	and 	a.nr_atendimento = nr_atendimento_p
	and 	coalesce(ie_pacote_ordem_prioridade_w,'N') = 'S'
	and 	ie_sem_prioridade_w = 'N'
	and 	coalesce(a.ie_prioridade::text, '') = ''
	order by b.cd_proced_pacote,
		 b.ie_origem_proced,
		 a.dt_inicio_pacote;

c12 CURSOR FOR
	SELECT  coalesce(tx_pacote_maior,100),
		coalesce(tx_pacote_demais,100),
		coalesce(ie_regra_geral,'N'),
		coalesce(nr_sequencia,0),
		tx_pacote_seg_maior
	from 	regra_tx_pacote
	where	cd_convenio = cd_convenio_p
	and 	ie_achou_w = 'N'
	and 	coalesce(IE_REGRA_VIA_ACESSO,'N') = 'N'
        and	coalesce(cd_estabelecimento,  COALESCE(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)) =  COALESCE(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)
	order by coalesce(ie_regra_geral,'N');

c13 CURSOR FOR
	SELECT 	a.nr_sequencia,
		obter_valor_pacote(a.nr_seq_procedimento),
		a.nr_seq_procedimento,
		a.nr_seq_proc_origem,
		b.nr_cirurgia
	from 	atendimento_pacote a,
		procedimento_paciente b
	where 	a.nr_seq_proc_origem = b.nr_sequencia
	and	a.nr_seq_proc_origem in (		SELECT nr_sequencia
										from 	procedimento_paciente b
                                        where 	b.nr_interno_conta =  nr_interno_conta_p)
	order by 2 desc; --cuidado ao alterar o order by desse cursor
c14 CURSOR FOR
	SELECT  coalesce(tx_pacote_maior,100),
		coalesce(tx_pacote_demais,100),
		coalesce(ie_regra_geral,'N'),
		coalesce(nr_sequencia,0),
		tx_pacote_seg_maior
	from 	regra_tx_pacote
	where	cd_convenio = cd_convenio_p
	and 	coalesce(IE_REGRA_VIA_ACESSO,'N') = ie_diferente_w
	and	coalesce(cd_estabelecimento,  COALESCE(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)) =  COALESCE(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)
	order by coalesce(ie_regra_geral,'N');

c16 CURSOR FOR
	SELECT 	a.nr_sequencia,
		obter_valor_pacote(a.nr_seq_procedimento),
		a.nr_seq_procedimento,
		a.nr_seq_proc_origem,
		coalesce(b.nr_cirurgia,0),
		a.nr_seq_regra_tx
	from 	atendimento_pacote a,
		procedimento_paciente b
	where 	a.nr_seq_proc_origem = b.nr_sequencia
	and	a.nr_seq_proc_origem in (SELECT nr_sequencia
					from 	procedimento_paciente b
                                        where 	b.nr_interno_conta =  nr_interno_conta_p)
	order by 6,5,2 desc; --cuidado ao alterar o order by desse cursor
c17 CURSOR FOR
	SELECT	obter_classif_setor(cd_setor_atendimento),
		dt_entrada_unidade,
		dt_saida_unidade
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	and 	nr_seq_interno = nr_seq_atepacu_w
	order by dt_entrada_unidade;


C18 CURSOR FOR
	SELECT	cd_medico_executor,
		cd_especialidade,
		ie_funcao_medico,
		vl_participante,
		nr_seq_regra,
		nr_seq_partic
	from 	w_atend_pacote_partic
	where 	nr_seq_w_atend_pac = nr_seq_w_atend_pac_w;

c19 CURSOR FOR
SELECT 	b.nr_sequencia,
	b.vl_procedimento,
	b.tx_procedimento,
	coalesce(b.vl_custo_operacional,0) vl_custo_operacional,
	coalesce(b.vl_medico, 0) vl_medico
from 	Procedimento_paciente b
where 	b.nr_atendimento	= nr_atendimento_p
  and 	b.cd_convenio		= cd_convenio_p
  and 	nr_seq_proc_pacote_w 	= b.nr_sequencia;


c21 CURSOR FOR
	SELECT	cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		dt_entrada_unidade,
		dt_saida_unidade
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	order by dt_entrada_unidade;

c20 CURSOR FOR
	SELECT	b.nr_seq_proc_interno
	from	pacote a,
		pacote_formadores b
	where	b.nr_seq_pacote		= a.nr_seq_pacote
	and	b.cd_procedimento	= a.cd_proced_pacote
	and	b.ie_origem_proced	= a.ie_origem_proced
	and	a.nr_seq_pacote		= nr_seq_pacote_w;

c22 CURSOR FOR
SELECT	b.cd_proced_pacote,
	b.ie_origem_proced,
	a.nr_seq_pacote,
	a.nr_sequencia,
	a.dt_inicio_pacote,
	a.dt_final_pacote,
	a.nr_seq_proc_origem,
	(SELECT	max(nr_seq_proc_interno)
	from	procedimento_paciente
	where	nr_sequencia = a.nr_seq_proc_origem) nr_seq_proc_int_pacte,
	(select	count(1)
	from	pacote_formadores y
	where	y.nr_seq_pacote = b.nr_seq_pacote) qt_form_pacote
from	w_atendimento_pacote a,
	pacote b
where	a.nr_seq_pacote	= b.nr_seq_pacote
and	a.nr_atendimento = nr_atendimento_p
and	coalesce(ie_pacote_ordem_prioridade_w, 'N') = 'S'
order by	qt_form_pacote desc,
		a.ie_prioridade asc,
		a.dt_inicio_pacote,
		b.cd_proced_pacote,
		b.ie_origem_proced;

c23 CURSOR FOR
SELECT	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno
from	pacote_formadores
where	nr_seq_pacote = nr_seq_pacote_ww
order by nr_seq_proc_interno desc;

c24 CURSOR FOR
SELECT	a.nr_sequencia,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.nr_seq_proc_interno
from	procedimento_paciente a,
	conta_paciente b
where	b.nr_interno_conta	= a.nr_interno_conta
and	coalesce(a.nr_seq_proc_pacote::text, '') = ''
and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
and	a.dt_procedimento	between dt_ini_pacote_ww and dt_final_pacote_ww
and	b.nr_atendimento	= nr_atendimento_p
and	b.nr_interno_conta	= nr_interno_conta_p
and	a.cd_procedimento	= cd_procedimento_form_w
and	a.ie_origem_proced	= ie_origem_proced_form_w
and	b.ie_status_acerto	= 1
order by a.nr_seq_proc_interno desc;

c18_w	c18%rowtype;
c19_w	c19%rowtype;

procedure define_pacote_proc_tipo_acomod is
;
BEGIN

        /*CASO TENHA MOEDA INFORMADA NO PACOTE, O VALOR DO PACOTE SERA CONVERTIDO*/

        if (coalesce(cd_moeda_pacote_w,0) > 0) and (coalesce(nr_interno_conta_p,0) > 0) then
                vl_cotacao_w := obter_valor_convertido_cotacao(nr_interno_conta_p,cd_moeda_pacote_w);

                if (coalesce(vl_cotacao_w,0) > 0) and coalesce(vl_pacote_w,0) > 0 then
                        vl_pacote_w	 := vl_pacote_w * vl_cotacao_w;
                end if;
        end if;

        nr_seq_tipo_acomod_w	:= nr_seq_tipo_acomod_w;

        if (varsetorexclusivo_w = 'S') then
                cd_setor_exclusivo_w:= cd_setor_atendimento_w;
        elsif (varsetorexclusivo_w = 'P') and (ie_setor_lanc_exclusivo_w = 'S') then
                cd_setor_exclusivo_w:= cd_setor_atendimento_w;
        else
                cd_setor_exclusivo_w:= 0;
        end if;

        if (coalesce(pr_faturar_w,0) <> 0) then
                pr_afaturar_w	:= pr_faturar_w;
        end if;

        if (coalesce(nr_seq_tipo_acomod_w,0) > 0) and (nr_seq_tipo_acomod_w IS NOT NULL AND nr_seq_tipo_acomod_w::text <> '') then
                begin

                if (cd_setor_pacote_w <> 0) then
                        delete from w_atendimento_pacote
                        where 	nr_atendimento 	= nr_atendimento_p
                          and 	nr_seq_pacote	= nr_seq_pacote_w
                          and 	cd_setor_atendimento <> cd_setor_pacote_w;  /* os 95904 fabricio em 13/06 */
                end if;

                if (qt_dias_internacao_w <> 0) and (qt_dias_internacao_w < qt_dias_unidade_w) then
                        delete from atendimento_pacote
                        where nr_atendimento 	= nr_atendimento_p
                        and nr_seq_pacote		= nr_seq_pacote_w;
                end if;
                if (qt_dias_internacao_w < qt_dias_unidade_w) then
                        qt_dias_internacao_w 	:= qt_dias_unidade_w;
                end if;

                if (qt_dias_internacao_w = qt_dias_unidade_w) then

                        if (vl_pacote_w	= 0) and (vl_honorario_w	= 0) then

                                select	max(obter_edicao_amb(
                                                        cd_estabelecimento_w,
                                                        cd_convenio_p,
                                                        cd_categoria_p,
                                                        dt_procedimento_w))
                                into STRICT	cd_edicao_amb_w
;

                                SELECT * FROM obter_cotacao_moeda_convenio(cd_estabelecimento_w, cd_convenio_p, cd_categoria_w, cd_procedimento_w, 1, dt_procedimento_w, 'P', cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_medico_executor_w, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, cd_edicao_amb_w, nr_seq_proc_int_pacte_w, null, cd_tipo_acomodacao_w, vl_ch_honorarios_w, vl_ch_operacional_w, vl_filme_w) INTO STRICT vl_ch_honorarios_w, vl_ch_operacional_w, vl_filme_w;
                                if (coalesce(vl_ch_honorarios_w::text, '') = '') then
                                        vl_ch_honorarios_w	:= 1;
                                end if;
                                if (coalesce(vl_ch_operacional_w::text, '') = '') then
                                        vl_ch_operacional_w	:= 1;
                                end if;
                                vl_pacote_w		:= (qt_ponto_pacote_w * vl_ch_operacional_w);
                                vl_honorario_w	:= (qt_ponto_honorario_w * vl_ch_honorarios_w);
                        end if;
                        SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_p, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_procedimento_w, ie_tipo_atendimento_w, cd_setor_atendimento_w, null, null, cd_medico_executor_w, cd_cgc_prestador_w, 'S', ie_carater_inter_sus_w, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, cd_especialidade_medica_w, null, null, ie_clinica_w, null, nr_seq_classif_medico_w, cd_procedencia_w, ie_doc_executor_w, cd_cbo_w, nr_seq_proc_int_pacte_w, nr_seq_exame_w) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
                        if (ie_calcula_honorario_w	= 'N') then
                                vl_honorario_w		:= 0;
                                vl_anestesista_w	:= 0;
                                vl_auxiliares_w		:= 0;
                        end if;

                        if (ie_conta_honorario_w = 'S') then
                                vl_procedimento_w	:= vl_pacote_w + vl_honorario_w + vl_anestesista_w + vl_auxiliares_w;
                        else
                                vl_procedimento_w	:= vl_pacote_w;
                        end if;

                        if (coalesce(cd_estrutura_conta_w::text, '') = '') then
                                SELECT * FROM obter_estrut_conta_proc(
                                                cd_convenio_p, cd_procedimento_w, ie_origem_proced_w, cd_plano_w, cd_medico_executor_w, cd_regra_honorario_w, nr_sequencia_w, cd_setor_atendimento_w, ie_tipo_atendimento_w, cd_estabelecimento_w, cd_especialidade_medica_w, cd_categoria_w, dt_procedimento_w, null, cd_estrutura_conta_w, cd_estrutura_honor_w) INTO STRICT cd_estrutura_conta_w, cd_estrutura_honor_w;
                        end if;

                        vl_procedimento_w	:= vl_procedimento_w / 100 * pr_afaturar_w;

                        --Valor pacote RN
                        if (pr_acrescimo_rn_w > 0) then

                                qt_filho_w :=	coalesce(Obter_dados_parto(nr_atendimento_p,'1'),0) +  coalesce(Obter_dados_parto(nr_atendimento_p,'2'),0);

                                if (coalesce(qt_filho_w,0) > 1) then
                                        vl_pr_filho_w	  	:= pr_acrescimo_rn_w * vl_procedimento_w / 100;
                                        vl_procedimento_w	:= vl_procedimento_w + (vl_pr_filho_w * (qt_filho_w-1));
                                end if;

                        end if;

                        /*-----------------------INICIAL -------------------------------------*/

                        if (coalesce(ie_regra_hora_inicio_w, 'EP-D') = 'EP-D') then
                                dt_inicio_pacote_w	:= dt_procedimento_w - qt_dias_pacote_w;
                        elsif (coalesce(ie_regra_hora_inicio_w, 'EP') = 'EP') then
                                dt_inicio_pacote_w	:= dt_procedimento_w;
                        elsif (ie_regra_hora_inicio_w = 'E') then
                                dt_inicio_pacote_w	:= dt_entrada_w;
                        elsif (ie_regra_hora_inicio_w = 'IC') then
                                dt_inicio_pacote_w	:= dt_inicio_cirurgia_w;
                        elsif (ie_regra_hora_inicio_w = 'HIDP') then
                                dt_inicio_pacote_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_w);
                                if (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_w) < dt_entrada_w) then
                                        dt_inicio_pacote_w	:= dt_entrada_w;
                                end if;
                        elsif (ie_regra_hora_inicio_w = 'RES') then /* os 224678 fabricio em 06/07/2010 Regra Especial (HoraEntrada Setor) */
                                open c06;
                                loop
                                fetch c06 into
                                        cd_classif_setor_w,
                                        dt_entrada_unidade_w,
                                        dt_saida_unidade_w;
                                EXIT WHEN NOT FOUND; /* apply on c06 */
                                        begin

                                        select	count(*)
                                        into STRICT	qt_passagem_classif_w
                                        from 	regra_pacote_hora_final
                                        where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
                                        and 	ie_situacao = 'A'
                                        and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

                                        if (qt_passagem_classif_w > 0) then
                                                exit;
                                        end if;

                                        end;
                                end loop;
                                close c06;

                                dt_inicio_pacote_w:= dt_entrada_unidade_w;
                        elsif (ie_regra_hora_inicio_w = 'REA') then

                                open c17;
                                loop
                                fetch c17 into
                                        cd_classif_setor_w,
                                        dt_entrada_unidade_w,
                                        dt_saida_unidade_w;
                                EXIT WHEN NOT FOUND; /* apply on c17 */
                                        begin

                                        select	count(*)
                                        into STRICT	qt_passagem_classif_w
                                        from 	regra_pacote_hora_final
                                        where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
                                        and 	ie_situacao = 'A'
                                        and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

                                        if (qt_passagem_classif_w > 0) then
                                                exit;
                                        end if;

                                        end;
                                end loop;
                                close c17;

                                dt_inicio_pacote_w:= dt_entrada_unidade_w;

                        elsif (ie_regra_hora_inicio_w = 'REL') then

                                open c21;
                                loop
                                fetch c21 into
                                        cd_setor_atendimento_w,
                                        cd_unidade_basica_w,
                                        cd_unidade_compl_w,
                                        dt_entrada_unidade_w,
                                        dt_saida_unidade_w;
                                EXIT WHEN NOT FOUND; /* apply on c21 */
                                        begin

                                        select 	coalesce(max(nr_seq_local_pa),0)
                                        into STRICT	nr_seq_local_pa_w
                                        from 	unidade_atendimento
                                        where 	cd_setor_atendimento = cd_setor_atendimento_w
                                        and 	cd_unidade_basica = cd_unidade_basica_w
                                        and 	cd_unidade_compl = cd_unidade_compl_w;

                                        select	count(*)
                                        into STRICT	qt_passagem_classif_w
                                        from 	regra_pacote_hora_final
                                        where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
                                        and 	ie_situacao = 'A'
                                        and 	coalesce(cd_setor_atendimento, cd_setor_atendimento_w) = cd_setor_atendimento_w
                                        and 	coalesce(nr_seq_local_pa, nr_seq_local_pa_w) = nr_seq_local_pa_w;

                                        if (qt_passagem_classif_w > 0) then
                                                exit;
                                        end if;

                                        end;
                                end loop;
                                close c21;

                                dt_inicio_pacote_w:= dt_entrada_unidade_w;

                        elsif (ie_regra_hora_inicio_w = 'PIC') then
                                dt_inicio_pacote_w:= dt_periodo_inicial_w;
                        end if;

                        /*-----------------------FINAL -------------------------------------*/

                        if (coalesce(ie_regra_hora_fim_w, 'EP+D') = 'EP+D') then
                                dt_final_pacote_w	:= dt_inicio_pacote_w + qt_dias_pacote_w;
                        elsif (ie_regra_hora_fim_w = 'EPFQ') then
                                dt_final_pacote_w	:= dt_inicio_pacote_w + qt_proc_w;
                        elsif (ie_regra_hora_fim_w = 'EDDF') then
                                dt_final_pacote_w	:= coalesce(dt_alta_w, fim_dia(dt_inicio_pacote_w) + qt_dias_pacote_w);
                        elsif (ie_regra_hora_fim_w = 'A') then
                                dt_final_pacote_w	:= coalesce(dt_alta_w, dt_inicio_pacote_w + qt_dias_pacote_w);
                        elsif (ie_regra_hora_fim_w = 'HFDP') then
                                dt_final_pacote_w	:= fim_dia(dt_procedimento_w);
                        elsif (ie_regra_hora_fim_w = 'FC') then
                                dt_final_pacote_w	:= dt_fim_cirurgia_w;
                        elsif (ie_regra_hora_fim_w = 'EP+H') then
                                dt_final_pacote_w	:= dt_entrada_w + (qt_hora_w/24);
                        elsif (ie_regra_hora_fim_w = 'EDHF') then
                                ds_mask_w               := substr(pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, WHEB_USUARIO_PCK.GET_NM_USUARIO)),12);
                                dt_final_pacote_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_pacote_w, coalesce(to_char(hr_final_pacote_w, ds_mask_w), '00:00')) + qt_dias_pacote_w;
                        elsif (ie_regra_hora_fim_w = 'RES') then /* os 123401 fabricio em 18/02/2009  Regra Especial (HoraEntrada Setor)*/
                                open c06;
                                loop
                                fetch c06 into
                                        cd_classif_setor_w,
                                        dt_entrada_unidade_w,
                                        dt_saida_unidade_w;
                                EXIT WHEN NOT FOUND; /* apply on c06 */
                                        begin

                                        select	count(*)
                                        into STRICT	qt_passagem_classif_w
                                        from 	regra_pacote_hora_final
                                        where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
                                        and 	ie_situacao = 'A'
                                        and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

                                        if (qt_passagem_classif_w > 0) then
                                                exit;
                                        end if;

                                        end;
                                end loop;
                                close c06;

                                dt_final_pacote_w:= dt_entrada_unidade_w;
                        elsif (ie_regra_hora_fim_w = 'REA') then

                                open c17;
                                loop
                                fetch c17 into
                                        cd_classif_setor_w,
                                        dt_entrada_unidade_w,
                                        dt_saida_unidade_w;
                                EXIT WHEN NOT FOUND; /* apply on c17 */
                                        begin

                                        select	count(*)
                                        into STRICT	qt_passagem_classif_w
                                        from 	regra_pacote_hora_final
                                        where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
                                        and 	ie_situacao = 'A'
                                        and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

                                        if (qt_passagem_classif_w > 0) then
                                                exit;
                                        end if;

                                        end;
                                end loop;
                                close c17;

                                dt_final_pacote_w:= coalesce(dt_saida_unidade_w,dt_entrada_unidade_w);
                        elsif (ie_regra_hora_fim_w = 'RESA') then /* os 224678 fabricio em 06/07/2010    Regra Especial (Hora saida Setor)*/
                                open c06;
                                loop
                                fetch c06 into
                                        cd_classif_setor_w,
                                        dt_entrada_unidade_w,
                                        dt_saida_unidade_w;
                                EXIT WHEN NOT FOUND; /* apply on c06 */
                                        begin

                                        select	count(*)
                                        into STRICT	qt_passagem_classif_w
                                        from 	regra_pacote_hora_final
                                        where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
                                        and 	ie_situacao = 'A'
                                        and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

                                        if (qt_passagem_classif_w > 0) then
                                                exit;
                                        end if;

                                        end;
                                end loop;
                                close c06;

                                dt_final_pacote_w:= dt_saida_unidade_w;
                        elsif (ie_regra_hora_fim_w = 'PFC') then
                                dt_final_pacote_w:= dt_periodo_final_w;
                        elsif (ie_regra_hora_fim_w = 'RHIH') then
                                dt_final_pacote_w:= dt_inicio_pacote_w + (qt_hora_w/24);
                        end if;

                        -- edgar 30/11/2005, os 25185, tratar procedimentos obrigatorios no pacote
                        ie_proc_exigido_ok_w		:= 'S';
                        open c05;
                        loop
                        fetch c05 into
                                cd_proc_exigido_w,
                                ie_origem_proc_exigido_w;
                        EXIT WHEN NOT FOUND; /* apply on c05 */

                                select	count(*)
                                into STRICT	cont_w
                                from 	conta_paciente b,
                                        procedimento_paciente a
                                where	b.nr_atendimento	= nr_atendimento_p
                                and	a.nr_interno_conta	= b.nr_interno_conta
                                and	a.cd_convenio		= cd_convenio_p
                                and	a.dt_conta		between dt_inicio_pacote_w and dt_final_pacote_w
                                and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
                                and	b.nr_interno_conta	= nr_interno_conta_p
                                and	b.ie_status_acerto	= 1
                                and	a.cd_procedimento	= cd_proc_exigido_w
                                and	a.ie_origem_proced	= ie_origem_proc_exigido_w;

                                if (cont_w = 0) then
                                        ie_proc_exigido_ok_w	:= 'N';
                                end if;

                        end loop;
                        close c05;

                        -- fabricio 23/05/2009, os 142660, tratar materiais obrigatorios no pacote
                        ie_mat_exigido_ok_w		:= 'S';
                        ie_mat_opcional_ok_w		:= 'S';

                        select	count(*)
                        into STRICT	qt_regra_mat_opcional_w
                        from	pacote_tipo_acomod_mat
                        where	nr_seq_pac_acomod	= nr_seq_tipo_acomod_w
                        and	coalesce(ie_opcional,'N') = 'S';

                        if (qt_regra_mat_opcional_w > 0) then
                                ie_mat_opcional_ok_w	:= 'N';
                        end if;

                        open c08;
                        loop
                        fetch c08 into
                                cd_mat_exigido_w,
                                ie_opcional_w;
                        EXIT WHEN NOT FOUND; /* apply on c08 */

                                select	count(*)
                                into STRICT	cont_w
                                from 	conta_paciente b,
                                        material_atend_paciente a
                                where	b.nr_atendimento	= nr_atendimento_p
                                and	a.nr_interno_conta	= b.nr_interno_conta
                                and	a.cd_convenio		= cd_convenio_p
                                and	a.dt_conta		between dt_inicio_pacote_w and dt_final_pacote_w
                                and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
                                and	b.nr_interno_conta	= nr_interno_conta_p
                                and	b.ie_status_acerto	= 1
                                and	a.cd_material		= cd_mat_exigido_w;

                                if (coalesce(ie_opcional_w,'N') = 'S') then
                                        if (cont_w > 0) then
                                                ie_mat_opcional_ok_w	:= 'S';
                                        end if;
                                else
                                        if (cont_w = 0) then
                                                ie_mat_exigido_ok_w	:= 'N';
                                        end if;
                                end if;

                        end loop;
                        close c08;

                        -- os 159762 fabricio em 24/08/2009
                        ie_item_exigido_ok_w	:= 'S';
                        if (coalesce(ie_exige_item_conta_w,'N') = 'S') then

                                select	count(*)
                                into STRICT	cont_w
                                from 	conta_paciente b,
                                        conta_paciente_v a
                                where	b.nr_atendimento	= nr_atendimento_p
                                and	a.nr_interno_conta	= b.nr_interno_conta
                                and	a.cd_convenio		= cd_convenio_p
                                and	a.dt_conta		between dt_inicio_pacote_w and dt_final_pacote_w
                                and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
                                and	b.nr_interno_conta	= nr_interno_conta_p
                                and	b.ie_status_acerto	= 1
                                and	a.cd_item	<>  cd_procedimento_pac_w;

                                if (cont_w = 0) then
                                        ie_item_exigido_ok_w	:= 'N';
                                end if;
                        end if;

                        -- OS 210903 Fabricio em 08/06/2010 Pacotes Multiplos
                        ie_pacote_multiplo_w:= 'S';
                        open c09;
                        loop
                        fetch c09 into
                                cd_proc_formador_w,
                                ie_origem_proc_formador_w,
                                nr_seq_proc_int_formador_w,
                                qt_minimo_w;
                        EXIT WHEN NOT FOUND; /* apply on c09 */

                                select	count(*),
                                        sum(qt_procedimento)
                                into STRICT	cont_w,
                                        qt_proc_formador_w
                                from 	conta_paciente b,
                                        procedimento_paciente a
                                where	b.nr_atendimento	= nr_atendimento_p
                                and	a.nr_interno_conta	= b.nr_interno_conta
                                and	a.cd_convenio		= cd_convenio_p
                                and	a.dt_conta		between dt_inicio_pacote_w and dt_final_pacote_w
                                and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
                                and	b.nr_interno_conta	= nr_interno_conta_p
                                and	b.ie_status_acerto	= 1
                                and	a.cd_procedimento	= cd_proc_formador_w
                                and	a.ie_origem_proced	= ie_origem_proc_formador_w
                                and 	coalesce(nr_seq_proc_int_formador_w, coalesce(a.nr_seq_proc_interno,0)) = coalesce(a.nr_seq_proc_interno,0);

                                if (cont_w = 0) then
                                        ie_pacote_multiplo_w	:= 'N';
                                end if;
                                if	((qt_minimo_w IS NOT NULL AND qt_minimo_w::text <> '') and (qt_proc_formador_w < qt_minimo_w) and (ie_pacote_multiplo_w = 'S')) then
                                        ie_pacote_multiplo_w	:= 'N';
                                end if;

                        end loop;
                        close c09;

                        select	count(*)
                        into STRICT	cont_w
                        from	pacote_cid
                        where	nr_seq_pacote	= nr_seq_pacote_w;

                        if (cont_w > 0) then
                                ie_pacote_cid_w := 'N';
                                open c10;
                                loop
                                fetch c10 into
                                        cd_doenca_w;
                                EXIT WHEN NOT FOUND; /* apply on c10 */

                                        select	count(*)
                                        into STRICT	cont_w
                                        from 	atendimento_paciente a,
                                                diagnostico_doenca d
                                        where	a.nr_atendimento	= d.nr_atendimento
                                        and a.nr_atendimento = nr_atendimento_p
                                        and	d.cd_doenca	= cd_doenca_w
                                        and d.ie_situacao = 'A';

                                        if (cont_w > 0) then
                                                ie_pacote_cid_w	:= 'S';
                                        end if;

                                end loop;
                                close c10;
                        else
                                ie_pacote_cid_w	:= 'S';
                        end if;

                        if (ie_gerar_proced_negativo_w = 'N') then
                                select	sum(vl_procedimento)
                                into STRICT	vl_procedimento_www
                                from	procedimento_paciente
                                where	nr_sequencia	= nr_sequencia_w;

                                if (vl_procedimento_www < 0) then
                                        ie_proc_exigido_ok_w	:= 'N';
                                end if;

                                if (coalesce(pr_faturar_w,0) = 0) then
                                        vl_procedimento_w	:= vl_procedimento_www;
                                end if;

                        end if;

                        if (ie_visualiza_proc_conv_w = 'S') then
                                SELECT * FROM converte_proc_convenio(cd_estabelecimento_w, cd_convenio_p, cd_categoria_p, cd_procedimento_w, ie_origem_proced_w, null, cd_medico_executor_w, coalesce(ie_tipo_atendimento_w,0), dt_procedimento_w, cd_procedimento_convenio_w, cd_grupo_conversao_w, nr_seq_proc_conv_w, coalesce(cd_setor_atendimento_w,0), coalesce(cd_tipo_acomodacao_w,0), coalesce(nr_seq_proc_int_pacte_w,0), 'S', cd_plano_w, coalesce(ie_clinica_w,0), vl_procedimento_w, 0, cd_tipo_acomod_conv_w, coalesce(qt_idade_paciente_w, 0), ie_sexo_w, coalesce(cd_empresa_ref_w,0), ie_carater_inter_sus_w, nr_seq_pacote_w, 0, ie_tipo_atend_tiss_w, null) INTO STRICT cd_procedimento_convenio_w, cd_grupo_conversao_w, nr_seq_proc_conv_w;
                        end if;

                        ie_exige_proc_interno_form_w	:= 'S';
                        if	(ie_proc_interno_form_w = 'S' AND nr_seq_proc_int_pacte_w IS NOT NULL AND nr_seq_proc_int_pacte_w::text <> '') then
                                open c20;
                                loop
                                fetch c20 into
                                        nr_seq_proc_interno_form_w;
                                EXIT WHEN NOT FOUND; /* apply on c20 */
                                        if	(nr_seq_proc_interno_form_w IS NOT NULL AND nr_seq_proc_interno_form_w::text <> '' AND nr_seq_proc_interno_form_w <> nr_seq_proc_int_pacte_w) then
                                                ie_exige_proc_interno_form_w	:= 'N';
                                        end if;
                                end loop;
                                close c20;

                        end if;

                        if	((ie_proc_exigido_ok_w = 'S') and (ie_mat_exigido_ok_w = 'S') and (ie_mat_opcional_ok_w = 'S') and (ie_item_exigido_ok_w = 'S') and (ie_pacote_multiplo_w = 'S') and (ie_pacote_cid_w = 'S') and (ie_exige_proc_interno_form_w = 'S')) then

                                insert into w_atendimento_pacote(	nr_sequencia,
                                                                        nr_atendimento,	nr_seq_pacote, cd_convenio,
                                                                        pr_afaturar, ie_tipo_acomod, qt_dias_pacote,
                                                                        qt_dias_hospital, qt_dias_uti, ie_excedente,
                                                                        dt_inicio_pacote, dt_final_pacote, nr_seq_proc_origem,
                                                                        nr_seq_alocacao, ie_classificacao, nr_seq_tipo_acomod,
                                                                        ie_exige_gabarito, cd_procedimento, ie_origem_proced,
                                                                        vl_honorario, vl_anestesista, vl_procedimento, vl_pacote,
                                                                        cd_regra_honorario, cd_estrutura_conta, ie_gerar, ie_ratear_repasse, cd_setor_atendimento,
                                                                        nr_seq_proc_interno, vl_materiais, ie_consiste_cirurgia, ds_observacao, cd_setor_exclusivo,
                                                                        ie_prioridade, vl_auxiliares, qt_procedimento, cd_procedimento_convenio)
                                values (	nextval('w_atendimento_pacote_seq'),
                                                                        nr_atendimento_p, nr_seq_pacote_w, cd_convenio_p,
                                                                        pr_afaturar_w, ie_tipo_acomod_w, qt_dias_pacote_w,
                                                                        qt_dias_hospital_w, qt_dias_uti_w, ie_excedente_w,
                                                                        dt_inicio_pacote_w, dt_final_pacote_w, nr_sequencia_w,
                                                                        100, ie_classificacao_w, nr_seq_tipo_acomod_w,
                                                                        ie_exige_gabarito_w, cd_procedimento_w, ie_origem_proced_w,
                                                                        vl_honorario_w, vl_anestesista_w, vl_procedimento_w, vl_pacote_w,
                                                                        cd_regra_honorario_w, cd_estrutura_conta_w, 'N', ie_ratear_repasse_w, cd_setor_pacote_w,
                                                                        nr_seq_proc_interno_w, vl_materiais_w, ie_consiste_cirurgia_w, ds_observacao_w, CASE WHEN cd_setor_exclusivo_w=0 THEN  null  ELSE cd_setor_exclusivo_w END ,
                                                                        ie_prioridade_w, vl_auxiliares_w, qt_procedimento_w, cd_procedimento_convenio_w);
                        end if;
                end if;
                end;
        end if;

end;

begin

select	coalesce(max(cd_estabelecimento),1),
        coalesce(max(ie_tipo_atendimento),1),
        max(dt_entrada),
        max(dt_alta)
into STRICT	cd_estabelecimento_w,
        ie_tipo_atendimento_w,
        dt_entrada_w,
        dt_alta_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

varsetorexclusivo_w	:= obter_valor_param_usuario(67,362,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w));
var_estab_atendimento_w	:= obter_valor_param_usuario(67,393,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w));
ie_define_anestesia_w	:= coalesce(obter_valor_param_usuario(67,656,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)),'C');
ie_utiliza_acomod_conv_atend_w	:= obter_valor_param_usuario(67,430,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w));
ie_pacote_ordem_prioridade_w	:= obter_valor_param_usuario(67,453,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w));
ie_acomod_setor_proc_w		:= coalesce(obter_valor_param_usuario(67,467,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)),'N');
ie_regra_perc_cirurgia_w	:= coalesce(obter_valor_param_usuario(67,532,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)),'N');
ie_permite_varias_regras_w	:= coalesce(obter_valor_param_usuario(67,565,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)),'N');
ie_visualiza_proc_conv_w	:= coalesce(obter_valor_param_usuario(67,650,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w)),'N');
pr_adicional_hora_w		:= null;
nr_seq_regra_adic_hora_w	:= null;

begin

select	cd_procedencia,
	ie_tipo_atendimento,
	dt_entrada
into STRICT	cd_procedencia_w,
	ie_tipo_atend_med_w,
	dt_entrada_w
from 	atendimento_paciente
where 	nr_atendimento 	= nr_atendimento_p;
exception
    	when others then
      	cd_procedencia_w := 0;
	ie_tipo_atend_med_w := 0;
end;

select 	coalesce(max(IE_CONSISTE_SIT_GLOSA),'S'),
	coalesce(max(ie_calc_adicional_horario),'N')
into STRICT	IE_CONSISTE_SIT_GLOSA_w,
	ie_calc_adicional_horario_w
from 	parametro_faturamento
where 	cd_estabelecimento = coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w);

select 	obter_dados_categ_conv(nr_atendimento_p, 'P')
into STRICT	cd_plano_w
;

begin
select	nr_seq_classif_medico
into STRICT	nr_seq_classif_medico_w
from	atendimento_paciente
where 	nr_atendimento     	= nr_atendimento_p;
exception
    	when others then
	nr_seq_classif_medico_w:=null;
end;

select	max(CASE WHEN coalesce(nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END ),
	max(ie_carater_inter_sus),
	coalesce(max(ie_clinica),0)
into STRICT	ie_retorno_w,
	ie_carater_inter_sus_w,
	ie_clinica_w
from	atendimento_paciente
where 	nr_atendimento		= nr_atendimento_p;

select	CASE WHEN coalesce(max(obter_qt_acomp_atendimento(nr_atendimento_p)),0)=0 THEN  'N'  ELSE 'S' END
into STRICT	ie_acomp_w
;

select	count(*)
into STRICT	qt_atend_conv_w
from	atend_categoria_convenio
where	nr_atendimento	= nr_atendimento_p
and	cd_convenio	= cd_convenio_p
and	cd_categoria	= cd_categoria_p;

if (ie_utiliza_acomod_conv_atend_w = 'S') and (qt_atend_conv_w = 0) then
	select	count(*)
	into STRICT	qt_atend_conv_w
	from	atend_categoria_convenio
	where	nr_atendimento	= nr_atendimento_p;
end if;

if (qt_atend_conv_w = 0) then
	--'N?o existe cadastro para este convenio na Entrada Unica!'
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183598);
end if;

select	obter_idade(b.dt_nascimento, clock_timestamp(), 'A'),
		obter_idade(b.dt_nascimento, dt_entrada, 'A'),
		coalesce(ie_sexo,'A')
into STRICT	qt_idade_paciente_w,
		qt_idade_pac_entrada_w,
		ie_sexo_w
from	pessoa_fisica b,
	atendimento_paciente a
where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	a.nr_atendimento	= nr_atendimento_p;


if (ie_gerar_p	= 'N') then
	delete	FROM w_atendimento_pacote
	where	nr_atendimento	= nr_atendimento_p
	and		cd_convenio		= cd_convenio_p;

	if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
		ie_atend_alta_w := 'S';
	else
		ie_atend_alta_w := 'N';
	end if;

	if (var_estab_atendimento_w = 'N') then -- Estabelecimento da conta
		select 	coalesce(max(cd_estabelecimento),1)
		into STRICT	cd_estabelecimento_w
		from 	conta_paciente
		where 	nr_interno_conta = nr_interno_conta_p;

	end if;

	--incluido o " +1 " conforme componente paciente os 151550, conversado com ricardo
	select	trunc(coalesce(dt_alta_w, clock_timestamp()) - dt_entrada_w) + 1 qt_dias_internacao
	into STRICT	qt_dias_inter_w
	;

	ie_tipo_acomod_w := ie_tipo_acomod_p;

	if (coalesce(ie_tipo_acomod_w::text, '') = '') then
		select	coalesce(max(ie_classificacao),0)
		into STRICT	ie_tipo_acomod_w
		from	tipo_acomodacao b,
				atend_categoria_convenio a

		where	a.nr_atendimento		= nr_atendimento_p
		and		a.cd_convenio			= cd_convenio_p
		and		a.cd_tipo_acomodacao	= b.cd_tipo_acomodacao
		and		a.dt_inicio_vigencia	= 			-- edgar 21/12/2005, os 27560, inclui esta "and"
							(	SELECT	max(x.dt_inicio_vigencia)
								from	atend_categoria_convenio x
								where	x.nr_atendimento	= nr_atendimento_p
								and		x.cd_convenio		= cd_convenio_p);

		if (ie_utiliza_acomod_conv_atend_w = 'S') and (ie_tipo_acomod_w = 0) then
			select	coalesce(max(ie_classificacao),0)
			into STRICT	ie_tipo_acomod_w
			from	tipo_acomodacao b,
					atend_categoria_convenio a

			where	a.nr_atendimento	= nr_atendimento_p
			and		a.cd_tipo_acomodacao	= b.cd_tipo_acomodacao
			and		a.dt_inicio_vigencia	=
							(SELECT	max(x.dt_inicio_vigencia)
							from	atend_categoria_convenio x
							where	x.nr_atendimento	= nr_atendimento_p);
		end if;

	end if;

	select	sum(coalesce(a.dt_alta,clock_timestamp()) - a.dt_entrada)
	into STRICT	qt_dias_unidade_w
	from	atendimento_paciente a
	where	a.nr_atendimento	= nr_atendimento_p;
	qt_dias_unidade_w	:= coalesce(qt_dias_unidade_w,0);

	/* retirado por elemar em 26/02/04 os5948 item 2
	open c030;
	loop
	fetch c030 into
		nr_sequencia_w,
		nr_seq_proc_pacote_w;
	exit when c030%notfound;
		begin
		if	(nvl(nr_seq_proc_pacote_w,0) > 0) then
			desfazer_pacote(nr_seq_proc_pacote_w, nm_usuario_p);
		end if;
		delete from atendimento_pacote
		where nr_atendimento		= nr_atendimento_p
		  and nr_sequencia		= nr_sequencia_w;
		end;
	end loop;
	close c030;
	*/
	open c010;
	loop
	fetch c010 into
		nr_seq_pacote_w,
		nr_sequencia_w,
		dt_procedimento_w,
		pr_afaturar_w,
		cd_procedimento_pac_w,
		ie_origem_proced_pac_w,
		qt_proc_w,
		cd_categoria_w,
		cd_setor_atendimento_w,
		cd_medico_executor_w,
		cd_especialidade_medica_w,
		nr_cirurgia_w,
		cd_cgc_prestador_w,
		nr_seq_proc_int_pacte_w,
		ds_observacao_w,
		ie_prioridade_w,
		nr_seq_atepacu_w,
		dt_entrada_unidade_ww,
		ie_doc_executor_w,
		nr_prescricao_w,
		nr_sequencia_prescricao_w,
		cd_cbo_w,
		dt_periodo_inicial_w,
		dt_periodo_final_w,
		ie_tipo_atend_conta_w,
		ie_tipo_atend_tiss_w,
		nr_seq_exame_w,
		cd_moeda_pacote_w,
		ie_proc_interno_form_w;
	EXIT WHEN NOT FOUND; /* apply on c010 */

		select	trunc(dt_procedimento_w - dt_entrada_w) + 1 qt_dias_pacote
		into STRICT	qt_dias_pacote_proc_w
		;

		if (ie_acomod_setor_proc_w = 'S') then

			select 	coalesce(max(cd_tipo_acomodacao),-1)
			into STRICT	cd_tipo_acomodacao_w
			from 	atend_paciente_unidade
			where 	nr_atendimento = nr_atendimento_p
			and 	cd_setor_atendimento = cd_setor_atendimento_w
			and 	nr_seq_interno = nr_seq_atepacu_w
			and 	dt_entrada_unidade = dt_entrada_unidade_ww;

			if (cd_tipo_acomodacao_w > -1) then

				select	coalesce(max(ie_classificacao),ie_tipo_acomod_w)
				into STRICT	ie_tipo_acomod_w
				from	tipo_acomodacao
				where	cd_tipo_acomodacao	= cd_tipo_acomodacao_w;

			end if;

		end if;

    select coalesce(max(cd_empresa),0),
      max(cd_tipo_acomodacao)
    into STRICT cd_empresa_ref_w,
      cd_tipo_acomod_conv_w
    from 	atend_categoria_convenio
    where 	nr_atendimento = nr_atendimento_p
    and 	cd_convenio = cd_convenio_p;

		/*select	nvl(max(nr_seq_procedimento),0)
		into	nr_seq_proc_pacote_w
		from	atendimento_pacote
		where	nr_seq_proc_origem	= nr_sequencia_w;*/
		select	count(*)
		into STRICT	qt_proc_pacote_orig_w
		from	atendimento_pacote
		where	nr_seq_proc_origem	= nr_sequencia_w;

		qt_dias_uti_w		:= 0;
		qt_dias_internacao_w	:= 0;


		if (ie_define_anestesia_w = 'C') then

			select	max(cd_tipo_anestesia)
			into STRICT	cd_tipo_anestesia_w
			from	cirurgia
			where	nr_cirurgia	= nr_cirurgia_w;

		elsif (ie_define_anestesia_w = 'CPR') then

			select	max(cd_tipo_anestesia)
			into STRICT	cd_tipo_anestesia_w
			from	cirurgia
			where	nr_cirurgia	= nr_cirurgia_w;

			if (coalesce(cd_tipo_anestesia_w,'') = '') then

				select	max(cd_tipo_anestesia)
				into STRICT	cd_tipo_anestesia_w
				from	procedimento_paciente
				where	nr_sequencia = nr_sequencia_w;

			end if;

			if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_sequencia_prescricao_w,0) > 0) and (coalesce(cd_tipo_anestesia_w,'') = '') then

				select	max(cd_tipo_anestesia)
				into STRICT	cd_tipo_anestesia_w
				from	prescr_procedimento
				where	nr_prescricao	= nr_prescricao_w
				and	nr_sequencia	= nr_sequencia_prescricao_w;

			end if;

		elsif (ie_define_anestesia_w = 'PRC') then

			select	max(cd_tipo_anestesia)
			into STRICT	cd_tipo_anestesia_w
			from	procedimento_paciente
			where	nr_sequencia = nr_sequencia_w;

			if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_sequencia_prescricao_w,0) > 0) and (coalesce(cd_tipo_anestesia_w,'') = '') then

				select	max(cd_tipo_anestesia)
				into STRICT	cd_tipo_anestesia_w
				from	prescr_procedimento
				where	nr_prescricao	= nr_prescricao_w
				and	nr_sequencia	= nr_sequencia_prescricao_w;

			end if;

			if (coalesce(cd_tipo_anestesia_w,'') = '') then

				select	max(cd_tipo_anestesia)
				into STRICT	cd_tipo_anestesia_w
				from	cirurgia
				where	nr_cirurgia	= nr_cirurgia_w;

			end if;

		elsif (ie_define_anestesia_w = 'RPC') then

			if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_sequencia_prescricao_w,0) > 0) and (coalesce(cd_tipo_anestesia_w,'') = '') then

				select	max(cd_tipo_anestesia)
				into STRICT	cd_tipo_anestesia_w
				from	prescr_procedimento
				where	nr_prescricao	= nr_prescricao_w
				and	nr_sequencia	= nr_sequencia_prescricao_w;

			end if;

			if (coalesce(cd_tipo_anestesia_w,'') = '') then

				select	max(cd_tipo_anestesia)
				into STRICT	cd_tipo_anestesia_w
				from	procedimento_paciente
				where	nr_sequencia = nr_sequencia_w;

			end if;

			if (coalesce(cd_tipo_anestesia_w,'') = '') then

				select	max(cd_tipo_anestesia)
				into STRICT	cd_tipo_anestesia_w
				from	cirurgia
				where	nr_cirurgia	= nr_cirurgia_w;

			end if;
		end if;


		if (coalesce(nr_cirurgia_w,0) > 0) then
			select	max(dt_inicio_real),
				max(nr_min_duracao_prev),
				max(nr_min_duracao_real)
			into STRICT	dt_inicio_cirurgia_w,
				nr_min_duracao_prev_w,
				nr_min_duracao_real_w
			from 	cirurgia
			where 	nr_cirurgia = nr_cirurgia_w;

			if (coalesce(nr_min_duracao_real_w,0) > 0) then
				dt_fim_cirurgia_w:= dt_inicio_cirurgia_w + nr_min_duracao_real_w/1440;
			else
				dt_fim_cirurgia_w:= dt_inicio_cirurgia_w + nr_min_duracao_prev_w/1440;
			end if;
		end if;

		begin
		if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_sequencia_prescricao_w,0) > 0) then

			select	max(ie_lado)
			into STRICT	ie_lado_w
			from	prescr_procedimento
			where	nr_prescricao		= nr_prescricao_w
			and	nr_sequencia		= nr_sequencia_prescricao_w;
		else
			ie_lado_w := null;
		end if;
		exception
		when others then
			ie_lado_w := null;
		end;

		/* ricardo 22/05/2006 - alterei o cursor c020 para n?o fazer o max pelo nr_sequencia (quando havia 2 regras para um tipo de acomodac?o
				o cursor pegava a maior sequencia em vez da maior data. alterei tambem a forma do cursor (verificar historicos anteriores) os 33976 */
		select	max(cd_centro_custo)
		into STRICT	cd_centro_custo_w
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atendimento_w;

		ie_credenciado_w := obter_se_medico_conveniado(cd_estabelecimento_w, cd_medico_executor_w, cd_convenio_p, cd_cgc_prestador_w, cd_especialidade_medica_w, null,
								cd_setor_atendimento_w, null, dt_procedimento_w, ie_tipo_atendimento_w, null, ie_carater_inter_sus_w);

                select	coalesce(max(ie_regra_ordem_pacote),'N'),
			coalesce(max(ie_prior_form_pacote),'N')
                into STRICT	ie_regra_ordem_pacote_w,
			ie_prior_form_pacote_w
                from	convenio_estabelecimento
                where	cd_convenio		= cd_convenio_p
                and	cd_estabelecimento	= cd_estabelecimento_w;

                if (coalesce(ie_regra_ordem_pacote_w,'N') = 'N') then
                        open c020; -- Obtem os registros de regra de acomodacao do pacote
                        loop
                        fetch c020 into
                                qt_dias_pacote_w,
                                qt_dias_hospital_w,
                                qt_dias_uti_w,
                                ie_excedente_w,
                                cd_procedimento_w,
                                ie_origem_proced_w,
                                vl_pacote_w,
                                vl_honorario_w,
                                vl_anestesista_w,
                                qt_ponto_pacote_w,
                                qt_ponto_honorario_w,
                                cd_estrutura_conta_w,
                                ie_classificacao_w,
                                nr_seq_tipo_acomod_w,
                                ie_exige_gabarito_w,
                                ie_regra_hora_inicio_w,
                                ie_regra_hora_fim_w,
                                ie_ratear_repasse_w,
                                ie_gerar_proced_negativo_w,
                                hr_final_pacote_w,
                                pr_faturar_w,
                                cd_setor_pacote_w,
                                nr_seq_proc_interno_w,
                                vl_materiais_w,
                                ie_consiste_cirurgia_w,
                                ie_exige_item_conta_w,
                                vl_auxiliares_w,
                                pr_acrescimo_rn_w,
                                ie_setor_lanc_exclusivo_w,
                                qt_procedimento_w,
                                qt_hora_w;
                        EXIT WHEN NOT FOUND; /* apply on c020 */

                                define_pacote_proc_tipo_acomod();
                        end loop;
                        close c020;
                else
                        open c020_new; -- Obtem os registros de regra de acomodacao do pacote
                        loop
                        fetch c020_new into
                                qt_dias_pacote_w,
                                qt_dias_hospital_w,
                                qt_dias_uti_w,
                                ie_excedente_w,
                                cd_procedimento_w,
                                ie_origem_proced_w,
                                vl_pacote_w,
                                vl_honorario_w,
                                vl_anestesista_w,
                                qt_ponto_pacote_w,
                                qt_ponto_honorario_w,
                                cd_estrutura_conta_w,
                                ie_classificacao_w,
                                nr_seq_tipo_acomod_w,
                                ie_exige_gabarito_w,
                                ie_regra_hora_inicio_w,
                                ie_regra_hora_fim_w,
                                ie_ratear_repasse_w,
                                ie_gerar_proced_negativo_w,
                                hr_final_pacote_w,
                                pr_faturar_w,
                                cd_setor_pacote_w,
                                nr_seq_proc_interno_w,
                                vl_materiais_w,
                                ie_consiste_cirurgia_w,
                                ie_exige_item_conta_w,
                                vl_auxiliares_w,
                                pr_acrescimo_rn_w,
                                ie_setor_lanc_exclusivo_w,
                                qt_procedimento_w,
                                qt_hora_w;
                        EXIT WHEN NOT FOUND; /* apply on c020_new */

                        end loop;

                        close c020_new;
                        define_pacote_proc_tipo_acomod();
                end if;
	end loop;
	close c010;

	if (ie_prior_form_pacote_w = 'S') then

		/* Geracao do pacote com maior quantidade de formadores INICIO*/

		open c22;
		loop
		fetch c22 into
			cd_procedimento_ww,
			ie_origem_proced_ww,
			nr_seq_pacote_ww,
			nr_sequencia_ww,
			dt_ini_pacote_ww,
			dt_final_pacote_ww,
			nr_seq_proc_origem_ww,
			nr_seq_proc_int_pacte_ww,
			qt_form_pacote_w;
		EXIT WHEN NOT FOUND; /* apply on c22 */			
			if (qt_form_pacote_w > 0) then
				proc_formador_list_w.delete;
				open c23;
				loop
				fetch c23 into
					cd_procedimento_form_w,
					ie_origem_proced_form_w,
					nr_seq_proc_int_form_w;
				EXIT WHEN NOT FOUND; /* apply on c23 */
					open c24;
					loop
					fetch c24 into
						nr_sequencia_proc_pac_w,
						cd_procedimento_proc_pac_w,
						ie_origem_proced_proc_pac_w,
						nr_seq_proc_int_proc_pac_w;
					EXIT WHEN NOT FOUND; /* apply on c24 */
						if (proc_list_final_w.exists(nr_sequencia_proc_pac_w) = false and (coalesce(nr_seq_proc_int_form_w::text, '') = '' or
							nr_seq_proc_int_form_w = nr_seq_proc_int_proc_pac_w) and
							proc_formador_list_w.exists(cd_procedimento_proc_pac_w||';'||ie_origem_proced_proc_pac_w||';'||nr_seq_proc_int_form_w) = false) then
							proc_formador_list_w(cd_procedimento_proc_pac_w||';'||ie_origem_proced_proc_pac_w||';'||nr_seq_proc_int_form_w) := nr_sequencia_proc_pac_w;
							exit;
						end if;
					end loop;
					close c24;

					if (proc_formador_list_w.exists(cd_procedimento_form_w||';'||ie_origem_proced_form_w||';'||nr_seq_proc_int_form_w) = false) then
						proc_formador_list_w.delete;
						i_list_final_w := proc_list_final_w.first;
						while (i_list_final_w IS NOT NULL AND i_list_final_w::text <> '') loop
							if (proc_list_final_w(i_list_final_w) = nr_sequencia_ww) then
								proc_list_final_w.delete(i_list_final_w);
							end if;
							i_list_final_w := proc_list_final_w.next(i_list_final_w);
						end loop;
						exit;
					else
						proc_list_final_w(proc_formador_list_w(cd_procedimento_form_w||';'||ie_origem_proced_form_w||';'||nr_seq_proc_int_form_w)) := nr_sequencia_ww;
					end if;
				end loop;
				close c23;
				if (proc_formador_list_w.count = qt_form_pacote_w) then
					update 	w_atendimento_pacote
					set	ie_gerar = 'S'
					where	nr_sequencia = nr_sequencia_ww
					and 	nr_seq_pacote = nr_seq_pacote_ww;
				end if;
			else
				cd_procedimento_form_w := cd_procedimento_ww;
				ie_origem_proced_form_w:= ie_origem_proced_ww;
				open c24;
				loop
				fetch c24 into
					nr_sequencia_proc_pac_w,
					cd_procedimento_proc_pac_w,
					ie_origem_proced_proc_pac_w,
					nr_seq_proc_int_proc_pac_w;
				EXIT WHEN NOT FOUND; /* apply on c24 */
					if (proc_list_final_w.exists(nr_sequencia_proc_pac_w) = false and (	coalesce(nr_seq_proc_int_pacte_ww::text, '') = '' or
							nr_seq_proc_int_pacte_ww = nr_seq_proc_int_proc_pac_w)) then
							proc_list_final_w(nr_sequencia_proc_pac_w) := nr_sequencia_ww;
							update 	w_atendimento_pacote
							set	ie_gerar = 'S'
							where	nr_sequencia = nr_sequencia_ww
							and 	nr_seq_pacote = nr_seq_pacote_ww;
						exit;
					end if;
				end loop;
				close c24;
			end if;
		end loop;
		close c22;
		/* Geracao do pacote com maior quantidade de formadores FINAL */

	else
		/* Geracao do pacote de maior prioridade  INICIO*/

		cd_procedimento_ant_w		:= 0;
		nr_seq_proc_int_pacte_ant_w	:= 0;
		dt_ini_pacote_ant_w		:= clock_timestamp() - interval '360 days';
		open C11;
		loop
		fetch C11 into
			cd_procedimento_ww,
			ie_origem_proced_ww,
			ie_prioridade_ww,
			nr_seq_pacote_ww,
			nr_sequencia_ww,
			dt_ini_pacote_w,
			nr_seq_proc_origem_ww;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			begin

			select 	max(nr_seq_proc_interno)
			into STRICT	nr_seq_proc_int_pacte_ww
			from 	procedimento_paciente
			where 	nr_sequencia = nr_seq_proc_origem_ww;

			-- Verificar se o procedimento faz parte da lista de formadores de outro pacote
			select 	count(*)
			into STRICT	qt_formador_w
			from 	pacote_formadores	a,
				pacote			c,
				w_atendimento_pacote	b
			where 	b.nr_seq_pacote = c.nr_seq_pacote
			and 	c.nr_seq_pacote = a.nr_seq_pacote
			and 	b.nr_atendimento = nr_atendimento_p
			and 	b.nr_seq_pacote <> nr_seq_pacote_ww
			and 	b.nr_sequencia <> nr_sequencia_ww
			and 	a.cd_procedimento = cd_procedimento_ww
			and 	a.ie_origem_proced = ie_origem_proced_ww
			and	coalesce(nr_seq_proc_int_pacte_ww, coalesce(a.nr_seq_proc_interno,0)) = coalesce(a.nr_seq_proc_interno,0)
			and 	b.dt_inicio_pacote = dt_ini_pacote_w;

			if (qt_formador_w = 0) and
				((cd_procedimento_ant_w <> cd_procedimento_ww) or (nr_seq_proc_int_pacte_ant_w <> nr_seq_proc_int_pacte_ww) or (dt_ini_pacote_ant_w <> dt_ini_pacote_w)) then
				update 	w_atendimento_pacote
				set	ie_gerar = 'S'
				where	nr_sequencia = nr_sequencia_ww
				and 	nr_seq_pacote = nr_seq_pacote_ww;
			end if;

			if (cd_procedimento_ant_w <> cd_procedimento_ww) then
				cd_procedimento_ant_w:= cd_procedimento_ww;
			end if;

			if (nr_seq_proc_int_pacte_ant_w <> nr_seq_proc_int_pacte_ww) then
				nr_seq_proc_int_pacte_ant_w := nr_seq_proc_int_pacte_ww;
			end if;

			if (dt_ini_pacote_ant_w <> dt_ini_pacote_w) then
				dt_ini_pacote_ant_w:= dt_ini_pacote_w;
			end if;

			end;
		end loop;
		close C11;

		open C15;
		loop
		fetch C15 into
			cd_procedimento_ww,
			ie_origem_proced_ww,
			ie_prioridade_ww,
			nr_seq_pacote_ww,
			nr_sequencia_ww,
			dt_ini_pacote_w;
		EXIT WHEN NOT FOUND; /* apply on C15 */
			begin

			/* OS  291557*/

			update	w_atendimento_pacote
			set	ie_gerar = 'S'
			where	nr_sequencia = nr_sequencia_ww
			and 	nr_seq_pacote = nr_seq_pacote_ww;

			end;
		end loop;
		close C15;
		/* Geracao do pacote de maior prioridade FINAL */

	end if;
else
	select	count(*)
	into STRICT	qt_pacote_w
	from	w_atendimento_pacote
	where	nr_atendimento	= nr_atendimento_p
	and	cd_convenio	= cd_convenio_p;

	if (qt_pacote_w = 0) then
		CALL define_pacote_procedimento(
				nr_atendimento_p, nr_interno_conta_p, cd_convenio_p, cd_categoria_p, nm_usuario_p, 'N', null, null);
		ie_gerar_w := 'N';
		if (coalesce(ie_pacote_ordem_prioridade_w,'N') = 'S') then
			ie_gerar_w := 'S';
		end if;
	end if;

	open c04;
	loop
	fetch c04 into 	nr_seq_pacote_w,
			pr_afaturar_w,
			ie_tipo_acomod_w,
			qt_dias_pacote_w,
			qt_dias_hospital_w,
			qt_dias_uti_w,
			ie_excedente_w,
			dt_inicio_pacote_w,
			dt_final_pacote_w,
			nr_sequencia_w,
			ie_classificacao_w,
			nr_seq_tipo_acomod_w,
			ie_exige_gabarito_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			vl_honorario_w,
			vl_anestesista_w,
			vl_procedimento_w,
			vl_pacote_w,
			cd_regra_honorario_w,
			cd_estrutura_conta_w,
			ie_ratear_repasse_w,
			nr_seq_proc_interno_w,
			vl_materiais_w,
			ie_consiste_cirurgia_w,
			ds_observacao_w,
			cd_setor_exclusivo_w,
			vl_auxiliares_w,
			qt_procedimento_w,
			nr_seq_w_atend_pac_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */

		begin

		select (coalesce(max(nr_sequencia),1) + 1)
		into STRICT	nr_seq_atend_pacote_w
		from	atendimento_pacote
		where	nr_atendimento	= nr_atendimento_p;

		select	nextval('procedimento_paciente_seq')
		into STRICT	nr_seq_proc_pacote_w
		;

		select	max(b.cd_estabelecimento),
			max(a.dt_procedimento),
			max(cd_setor_atendimento),
			max(nr_prescricao)
		into STRICT	cd_estab_conta_w,
			dt_procedimento_w,
			cd_setor_proc_pacote_w,
			nr_prescr_proc_pacote_w
		from	conta_paciente b,
			procedimento_paciente a
		where	a.nr_interno_conta	= b.nr_interno_conta
		and	a.nr_sequencia		= nr_sequencia_w;

		ie_acesso_branco_w := obter_valor_param_usuario(67,388,obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w));

		select  coalesce(obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estab_conta_w, cd_convenio_p), 'U')
		into STRICT    ie_via_acesso_w
		;

		if (vl_procedimento_w	> 0) then
			vl_procedimento_ww	:= vl_procedimento_w;
		else
			vl_procedimento_ww	:= vl_pacote_w;
		end if;

		select	dt_entrada
		into STRICT	dt_entrada_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;

		exception
			when others then
			sql_errm_w	:= substr(sqlerrm,1,2000);
		end;

		select	coalesce(max(cd_estabelecimento),1),
			max(ie_tipo_atendimento)
		into STRICT	cd_estabelecimento_w,
			ie_tipo_atendimento_w
		from	atendimento_paciente
		where	nr_atendimento	= nr_atendimento_p;

		ie_tiss_tipo_guia_w	:= tiss_obter_guia_proc(ie_tipo_atendimento_w,
								cd_procedimento_w,
								ie_origem_proced_w,
								null,
								null,
								null);

		/*lhalves OS272705 em 8/12/2010*/

		nr_doc_convenio_w := null;
		SELECT * FROM tiss_obter_guia(ie_tiss_tipo_guia_w, nr_interno_conta_p, nr_doc_convenio_w, 'N', null, null, cd_regra_honorario_w, null, null, ie_guia_w, null, nr_prescr_proc_pacote_w, null, cd_setor_proc_pacote_w, null, null, null, dt_procedimento_w, null, null, nr_sequencia_w, null, cd_procedimento_w, ie_origem_proced_w, null) INTO STRICT nr_doc_convenio_w, ie_guia_w;


		ie_atualiza_medico_w:= 'S';
		begin
		select 	coalesce(max(ie_atualiza_medico),'S')
		into STRICT	ie_atualiza_medico_w
		from 	pacote_tipo_acomodacao
		where 	nr_sequencia =  nr_seq_tipo_acomod_w;
		exception
			when others then
			ie_atualiza_medico_w:= 'S';
		end;

		cd_cgc_prest_pacote_w	:= null;
		cd_medico_exec_filtro_w	:= null;
		if (ie_atualiza_medico_w = 'S') then
			cd_medico_exec_filtro_w	:= cd_medico_executor_w;
		end if;

		SELECT * FROM consiste_medico_executor(coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w), cd_convenio_p, cd_setor_proc_pacote_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atend_med_w, null, nr_seq_proc_interno_w, ie_medico_exec_pacote_w, cd_cgc_prest_pacote_w, cd_medico_exec_pacote_w, cd_pessoa_fisica_pacote_w, cd_medico_exec_filtro_w, coalesce(dt_procedimento_w,clock_timestamp()), null, null, null, null) INTO STRICT ie_medico_exec_pacote_w, cd_cgc_prest_pacote_w, cd_medico_exec_pacote_w, cd_pessoa_fisica_pacote_w;

		select	coalesce(max(ie_atualiza_func_medico),'N')
		into STRICT	ie_atualiza_func_medico_w
		from	convenio_estabelecimento
		where	cd_convenio		= cd_convenio_p
		and	cd_estabelecimento	= cd_estab_conta_w;

		cd_espec_medica_pacote_w:= null;
		ie_funcao_medico_w	:= null;

		if (ie_atualiza_func_medico_w	= 'R') then

			SELECT * FROM obter_proced_espec_medica(	cd_estab_conta_w, cd_convenio_p, cd_procedimento_w, ie_origem_proced_w, cd_regra_honorario_w, to_char(cd_estrutura_conta_w), null, ie_clinica_w, cd_setor_proc_pacote_w, cd_espec_medica_pacote_w, ie_funcao_medico_w, null, nr_seq_proc_interno_w, ie_tipo_atend_med_w) INTO STRICT cd_espec_medica_pacote_w, ie_funcao_medico_w;

		end if;

		insert	into procedimento_paciente(
			nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento,
			ie_origem_proced,
			dt_procedimento,
			dt_conta,
			cd_setor_atendimento,
			cd_pessoa_fisica,
			cd_medico_executor,
			qt_procedimento,
			dt_atualizacao,
			nm_usuario,
			cd_convenio,
			cd_categoria,
			nr_doc_convenio,
			tx_medico,
			tx_procedimento,
			tx_anestesia,
			vl_medico,
			vl_anestesista,
			vl_procedimento,
			vl_custo_operacional,
			vl_materiais,
			vl_auxiliares,
			cd_acao,
			ie_responsavel_credito,
			ie_valor_informado,
			ie_emite_conta,
			ie_funcao_medico,
			ie_guia_informada,
			cd_situacao_glosa,
			cd_cgc_prestador,
			nr_interno_conta,
			nr_sequencia,
			nr_seq_proc_pacote,
			dt_inicio_procedimento,
			nm_usuario_original,
			nr_seq_atepacu,
			ie_proc_princ_atend,
			cd_medico_req,
			ie_tipo_guia,
			ie_video,
			ie_auditoria,
			--nr_seq_exame,
			ie_via_acesso,
			nr_seq_proc_interno,
			cd_senha,
			CD_ESPECIALIDADE,
			cd_medico_convenio)
		SELECT	nr_atendimento,
			dt_entrada_unidade,
			cd_procedimento_w,
			ie_origem_proced_w,
			dt_procedimento,
			dt_conta,
			cd_setor_atendimento,
			cd_pessoa_fisica,
			CASE WHEN ie_atualiza_medico_w='S' THEN  cd_medico_executor  ELSE null END ,
			coalesce(qt_procedimento_w, qt_procedimento),
			clock_timestamp(),
			nm_usuario_p,
			cd_convenio,
			cd_categoria,
			coalesce(nr_doc_convenio_w,nr_doc_convenio),
			tx_medico,
			pr_afaturar_w,
			tx_anestesia,
			coalesce(vl_honorario_w,0) * coalesce(qt_procedimento_w, qt_procedimento) * CASE WHEN pr_afaturar_w=100 THEN  100  ELSE pr_afaturar_w END /100,
			coalesce(vl_anestesista_w, 0) * coalesce(qt_procedimento_w, qt_procedimento),
			(coalesce(vl_procedimento_ww,0) + coalesce(vl_materiais_w,0)) * coalesce(qt_procedimento_w, qt_procedimento),
			coalesce(vl_pacote_w,0) * coalesce(qt_procedimento_w, qt_procedimento),
			coalesce(vl_materiais_w,0) * coalesce(qt_procedimento_w, qt_procedimento),
			coalesce(vl_auxiliares_w, 0) * coalesce(qt_procedimento_w, qt_procedimento),
			cd_acao,
			cd_regra_honorario_w,
			'S',
			coalesce(to_char(cd_estrutura_conta_w),ie_emite_conta),
			coalesce(ie_funcao_medico_w, ie_funcao_medico),
			ie_guia_informada,
			cd_situacao_glosa,
			coalesce(cd_cgc_prest_pacote_w, cd_cgc_prestador),
			nr_interno_conta,
			nr_seq_proc_pacote_w,
			nr_seq_proc_pacote_w,
			dt_inicio_procedimento,
			nm_usuario_p,
			nr_seq_atepacu,
			ie_proc_princ_atend,
			cd_medico_req,
			ie_tipo_guia,
			ie_video,
			ie_auditoria,
			--nr_seq_exame,
			CASE WHEN ie_acesso_branco_w='S' THEN  null WHEN ie_acesso_branco_w='G' THEN  ie_via_acesso  ELSE ie_via_acesso_w END ,
			nr_seq_proc_interno_w,
			cd_senha,
			coalesce(cd_espec_medica_pacote_w, CD_ESPECIALIDADE),
			CASE WHEN ie_atualiza_medico_w='S' THEN  cd_medico_convenio  ELSE null END
		from 	procedimento_paciente
		where 	nr_sequencia = nr_sequencia_w;

		open C18;
		loop
		fetch C18 into
			c18_w;
		EXIT WHEN NOT FOUND; /* apply on C18 */
			begin

			select	coalesce(max(nr_seq_partic),0) + 1
			into STRICT	nr_seq_partic_w
			from 	procedimento_participante
			where 	nr_sequencia = nr_seq_proc_pacote_w;

			insert into procedimento_participante(
					nr_sequencia,			nr_seq_partic,			ie_funcao,			dt_atualizacao,
					nm_usuario,			cd_pessoa_fisica,		cd_cgc,				ie_valor_informado,
					ie_emite_conta,			vl_participante,		vl_conta,			nr_lote_contabil,
					nr_conta_medico,		ie_tipo_servico_sus,		ie_tipo_ato_sus,		qt_ponto_sus ,
					vl_ponto_sus ,			vl_original ,			ie_responsavel_credito,		pr_procedimento,
					cd_especialidade,		pr_faturar,    			cd_medico_convenio,		nr_doc_honor_conv,
					nr_seq_proc_crit_repasse,	ie_tiss_tipo_guia,		nr_cirurgia ,			cd_cbo,
					ie_doc_executor,		ie_participou_sus)
			values (nr_seq_proc_pacote_w,		nr_seq_partic_w,		c18_w.ie_funcao_medico,		clock_timestamp(),
					nm_usuario_p,			c18_w.cd_medico_executor,	null,				'S',
					to_char(cd_estrutura_conta_w),	c18_w.vl_participante,  	c18_w.vl_participante,  	null,
					null,				null,				null,				null,
					null,				null,				null,				1,
					c18_w.cd_especialidade,		100,				null,				null,
					null,				null,				null,				null,
					null,				null);
			end;
		end loop;
		close C18;

		pr_adicional_hora_w		:= null;
		nr_seq_regra_adic_hora_w	:= null;
		nr_seq_adic_w			:= null;

		if (ie_calc_adicional_horario_w = 'S') then

			SELECT * FROM DEFINE_ADICIONAL_HORARIO(coalesce(wheb_usuario_pck.get_cd_estabelecimento, cd_estabelecimento_w), cd_procedimento_w, ie_origem_proced_w, cd_convenio_p, cd_categoria_p, coalesce(cd_setor_proc_pacote_w,0), coalesce(IE_TIPO_ATENDIMENTO_w,0), IE_CARATER_INTER_SUS_w, dt_procedimento_w, null, null, null, null, CD_TIPO_ACOMODACAO_w, cd_medico_executor_w, cd_plano_w, dt_entrada_w, tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w, ie_clinica_w, null, nr_seq_proc_interno_w) INTO STRICT tx_adic_medico_w, tx_adic_anestesista_w, tx_adic_auxiliares_w, tx_adic_custo_operacional_w, tx_adic_materiais_w, tx_adic_procedimento_w, vl_adic_proc_w, vl_adic_medico_w, cd_proced_calculo_horario_w, ie_origem_proced_horario_w, nr_seq_adic_w;


			if (coalesce(nr_seq_adic_w,0) > 0) then -- Encontrou uma regra
				select 	coalesce(sum(vl_procedimento),0),
					coalesce(sum(vl_custo_operacional),0),
					coalesce(sum(vl_anestesista),0),
					coalesce(sum(vl_medico),0),
					coalesce(sum(vl_auxiliares),0),
					coalesce(sum(vl_materiais),0)
				into STRICT	vl_procedimento_orig_w,
					vl_custo_operacional_orig_w,
					vl_anestesista_orig_w,
					vl_medico_orig_w,
					vl_auxiliares_orig_w,
					vl_materiais_orig_w
				from 	procedimento_paciente
				where 	nr_sequencia = nr_seq_proc_pacote_w;

				vl_procedimento_atual_w:=    (tx_adic_procedimento_w * (coalesce(vl_adic_proc_w,0) + vl_custo_operacional_orig_w + vl_anestesista_orig_w +
										vl_medico_orig_w + vl_auxiliares_orig_w + vl_materiais_orig_w));

				vl_pacote_w   :=  vl_procedimento_atual_w;
				-- Substituido a forma atual de precificac?o do criterio horario,

				--pr_afaturar_w := dividir((vl_procedimento_atual_w * 100),vl_procedimento_orig_w);
				open C19;
				loop
				fetch C19 into
					c19_w;
				EXIT WHEN NOT FOUND; /* apply on C19 */
					begin
					pr_aux_proc_w			:= c19_w.vl_procedimento / c19_w.tx_procedimento;
					--Substituido a linha abaixo devido a OS 750345, onde o problema estava relacionado com as casas decimais

					--c19_w.vl_procedimento		:= c19_w.vl_procedimento / c19_w.tx_procedimento;
					c19_w.vl_procedimento		:= pr_aux_proc_w * (dividir((vl_procedimento_atual_w * 100),vl_procedimento_orig_w));

					if (c19_w.vl_custo_operacional <> 0) then
						c19_w.vl_custo_operacional	:= c19_w.vl_custo_operacional / c19_w.tx_procedimento;
						c19_w.vl_custo_operacional	:= c19_w.vl_custo_operacional * (dividir((vl_procedimento_atual_w * 100),vl_procedimento_orig_w));
					end if;

					if (c19_w.vl_medico <> 0) then
						c19_w.vl_medico			:= c19_w.vl_medico / c19_w.tx_procedimento;
						c19_w.vl_medico			:= c19_w.vl_medico * (dividir((vl_procedimento_atual_w * 100),vl_procedimento_orig_w));
					end if;

					update procedimento_paciente
					set 	tx_procedimento 	= pr_afaturar_w,
						vl_procedimento 	= c19_w.vl_procedimento,
						vl_custo_operacional	= CASE WHEN vl_custo_operacional=0 THEN  0  ELSE c19_w.vl_custo_operacional END ,
						vl_medico		= CASE WHEN vl_medico=0 THEN  0  ELSE c19_w.vl_medico END
					where 	nr_sequencia 		= c19_w.nr_sequencia;

					end;
				end loop;
				close C19;

				pr_adicional_hora_w		:= (dividir((vl_procedimento_atual_w * 100),vl_procedimento_orig_w)) - 100;
				nr_seq_regra_adic_hora_w	:= nr_seq_adic_w;

			end if;

		end if;

		select	max(cd_setor_atendimento),
			max(nr_seq_atepacu)
		into STRICT	cd_setor_atend_w,
			nr_seq_atepacu_ww
		from	procedimento_paciente
		where	nr_sequencia = nr_sequencia_w;

		select	coalesce(max(cd_tipo_acomodacao),0)
		into STRICT	cd_tipo_acomod_unid_w
		from 	atend_paciente_unidade a
		where	a.nr_atendimento = nr_atendimento_p
		and	nr_seq_interno = nr_seq_atepacu_ww;

		select	max(obter_grupo_receita(cd_estabelecimento_w, null, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, cd_setor_atend_w))
		into STRICT	nr_seq_grupo_rec_w
		;
		/* obter o tipo de acomodacao do convenio */

		begin
			select	cd_plano_convenio
			into STRICT	cd_plano_w
			from	atend_categoria_convenio_v
			where	nr_atendimento	= nr_atendimento_p
			and	cd_convenio	= cd_convenio_p
			and	cd_categoria	= cd_categoria_w;
			exception
					when others then
					begin
					select	cd_plano_convenio
					into STRICT	cd_plano_w
					from	atend_categoria_convenio_v
					where	nr_atendimento	= nr_atendimento_p
					and	cd_convenio	= cd_convenio_p;
					exception
						when others then
						cd_plano_w		:= null;
					end;
		end;

		select	coalesce(max(ie_tipo_convenio),0),
			max(ie_classif_contabil)
		into STRICT	ie_tipo_convenio_w,
			ie_classif_convenio_w
		from	convenio
		where	cd_convenio	= cd_convenio_p;

		if (ie_tipo_convenio_w = 3) and (ie_origem_proced_w <> 7) then

			begin
			/*APAC*/

			ie_complexidade_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_w, 'CX','C'),1,2);
			ie_tipo_financ_sus_w	:= substr(sus_obter_dados_apac_conta(nr_interno_conta_w, 'TF','C'),1,4);
			/*AIH*/

			if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then

				SELECT * FROM sus_obter_complex_financ_aih(nr_interno_conta_w, ie_complexidade_sus_w, ie_tipo_financ_sus_w) INTO STRICT ie_complexidade_sus_w, ie_tipo_financ_sus_w;

				/*ie_complexidade_sus_w	:= substr(sus_obter_complexidade_aih(nr_interno_conta_w),1,2);
				ie_tipo_financ_sus_w	:= substr(sus_obter_tipo_financ_aih(nr_interno_conta_w),1,4); */
				if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then

					select	max(ie_complexidade),
						max(ie_tipo_financiamento)
					into STRICT	ie_complexidade_sus_w,
						ie_tipo_financ_sus_w
					from	sus_aih_unif
					where	nr_interno_conta	= nr_interno_conta_w;

				end if;


			end if;
			/*Demais procedimentos*/

			if (coalesce(ie_complexidade_sus_w::text, '') = '') and (coalesce(ie_tipo_financ_sus_w::text, '') = '') then
					select	ie_complexidade,
						ie_tipo_financiamento
					into STRICT	ie_complexidade_sus_w,
						ie_tipo_financ_sus_w
					from	sus_procedimento
					where	cd_procedimento		= cd_procedimento_w
					and	ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
			end if;
			exception when others then
				ie_complexidade_sus_w	:= null;
				ie_tipo_financ_sus_w	:= null;
			end;

		end if;

		SELECT * FROM define_conta_procedimento(
			cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_w, cd_convenio_p, cd_categoria_w, dt_entrada_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, 'S', ie_complexidade_sus_w, ie_tipo_financ_sus_w, null, null, null, null, null, nr_seq_proc_interno_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

		/*elemar - 30/09/2005 - os23663 */

		update	procedimento_paciente
		set	nr_seq_proc_pacote = nr_seq_proc_pacote_w,
			cd_conta_contabil     	= cd_conta_contabil_w,
			cd_centro_custo_receita	= CASE WHEN cd_centro_custo_w=0 THEN null  ELSE cd_centro_custo_w END ,
			nr_seq_grupo_rec = nr_seq_grupo_rec_w,
			cd_sequencia_parametro = philips_contabil_pck.get_parametro_conta_contabil
		where	nr_sequencia	= nr_sequencia_w;

		select	max(nr_interno_conta)
		into STRICT	nr_interno_conta_w
		from	procedimento_paciente
		where	nr_sequencia	= nr_seq_proc_pacote_w;


		insert into atendimento_pacote(	nr_atendimento,	nr_sequencia, nr_seq_pacote,
							cd_convenio, dt_atualizacao, nm_usuario,
							pr_afaturar, ie_tipo_acomod, qt_dias_pacote,
							qt_dias_hospital, qt_dias_uti, ie_excedente,
							dt_inicio_pacote, dt_final_pacote, nr_seq_procedimento,
							nr_seq_proc_origem, nr_seq_alocacao, ie_classificacao,
							nr_seq_tipo_acomod, ie_exige_gabarito, ie_ratear_repasse, vl_original,
							ie_consiste_cirurgia, ds_observacao, cd_setor_exclusivo, ie_prioridade,
							pr_adicional_hora, nr_seq_regra_adic_hora)
		values (	nr_atendimento_p, nr_seq_atend_pacote_w, nr_seq_pacote_w,
							cd_convenio_p, clock_timestamp(), nm_usuario_p,
							pr_afaturar_w, ie_tipo_acomod_w, qt_dias_pacote_w,
							qt_dias_hospital_w, qt_dias_uti_w, ie_excedente_w,
							dt_inicio_pacote_w, dt_final_pacote_w, nr_seq_proc_pacote_w,
							nr_sequencia_w,	100, ie_classificacao_w,
							nr_seq_tipo_acomod_w, ie_exige_gabarito_w, ie_ratear_repasse_w, vl_pacote_w,
							ie_consiste_cirurgia_w, ds_observacao_w, cd_setor_exclusivo_w, ie_prioridade_w,
							pr_adicional_hora_w, nr_seq_regra_adic_hora_w);

		/* fabricio em 13/10/2008  os 111914, tratamento para atualizar a conversao do procedimento quando for pacotes*/

		select	coalesce(max(ie_codigo_convenio), 'X')
		into STRICT	ie_codigo_convenio_w
		from	convenio
		where	cd_convenio = cd_convenio_p;

		if (ie_codigo_convenio_w	= 'I') then
			CALL atualiza_cod_conv_mat_proc(nr_seq_proc_pacote_w, 1);
		end if;

		if (coalesce(nr_seq_proc_interno_w,0) > 0) then
			cd_procedimento_tuss_w:= Define_procedimento_TUSS(cd_estabelecimento_w,  nr_seq_proc_interno_w, cd_convenio_p, cd_categoria_p,
	  						ie_tipo_atendimento_w, dt_procedimento_w, cd_procedimento_w, ie_origem_proced_w,
							somente_numero(cd_edicao_amb_w),cd_setor_atend_w, cd_tipo_acomod_unid_w);
			update 	procedimento_paciente
			set	cd_procedimento_tuss 	= cd_procedimento_tuss_w
			where 	nr_sequencia 		= nr_seq_proc_pacote_w;

			update	atendimento_pacote
			set 	cd_procedimento_tuss    = cd_procedimento_tuss_w
			where 	nr_atendimento 		= nr_atendimento_p
			and 	nr_sequencia 		= nr_seq_atend_pacote_w;
		end if;

		CALL gerar_log_pacote(nr_interno_conta_w, nr_seq_proc_pacote_w, wheb_mensagem_pck.get_texto(305030), nm_usuario_p,null,null);

	end loop;
	close c04;

	delete	FROM w_atendimento_pacote
	where	nr_atendimento	= nr_atendimento_p
	and	cd_convenio	= cd_convenio_p;
end if;


select 	count(*)
into STRICT	qt_regra_tx_cirurgia_w
from 	regra_tx_pacote_cirurgia
where 	cd_convenio = cd_convenio_p
and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0);

if (qt_regra_tx_cirurgia_w > 0) then

	-- os 131665

	-- pacote de maior valor 100%

	-- restante 50%

	-- essas regras valem somente para pacotes cirurgicos feitos na mesma cirurgia.
	nr_cirurgia_ant_w	:= 0;
	vl_pacote_maior_valor_w	:= 0;
	nr_pacote_maior_valor_w	:= 0;

	select  coalesce(max(tx_pacote_maior),100),
		coalesce(max(tx_pacote),100)
	into STRICT	tx_pacote_maior_w,
		tx_pacote_w
	from 	regra_tx_pacote_cirurgia
	where	cd_convenio = cd_convenio_p
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_w,0)) = coalesce(cd_estabelecimento_w,0);

	open c07;
	loop
	fetch c07 into
		nr_sequencia_w,
		nr_cirurgia_w,
		vl_pacote_w,
		nr_seq_proc_pacote_w;
	EXIT WHEN NOT FOUND; /* apply on c07 */
		begin

		if (nr_cirurgia_w <> nr_cirurgia_ant_w) then

			nr_cirurgia_ant_w	:= nr_cirurgia_w;
			nr_pacote_maior_valor_w	:= nr_sequencia_w;
			vl_pacote_maior_valor_w	:= vl_pacote_w;

			update	atendimento_pacote
			set 	pr_afaturar    = coalesce(tx_pacote_maior_w,pr_afaturar)
			where 	nr_atendimento 	= nr_atendimento_p
			and 	nr_sequencia 	= nr_sequencia_w;

		else
			update	atendimento_pacote
			set 	pr_afaturar    = coalesce(tx_pacote_w,pr_afaturar)
			where 	nr_atendimento 	= nr_atendimento_p
			and 	nr_sequencia 	= nr_sequencia_w;
		end if;

		end;
	end loop;
	close c07;

end if;


-- Regra % Pacote Cirurgia independente de Cirurgia (Vale para todos os pacote)  // Verifica a Estrutura
select 	count(*)
into STRICT	qt_regra_tx_w
from 	regra_tx_pacote
where 	cd_convenio = cd_convenio_p
and	coalesce(cd_estabelecimento,coalesce(cd_estabelecimento_w,1)) = coalesce(cd_estabelecimento_w,1)
and 	coalesce(IE_REGRA_VIA_ACESSO,'N') = 'N';

if (qt_regra_tx_w > 0) then

	-- os 233888
	ie_achou_w:= 'N';
	vl_pacote_maior_valor_w	:= 0;
	nr_pacote_maior_valor_w	:= 0;
	nr_pacote_seg_maior_valor_w:= 0;
	vl_pacote_seg_maior_valor_w:= 0;

	open C12;
	loop
	fetch C12 into
		tx_pacote_maior_w,
		tx_pacote_w,
		ie_regra_geral_w,
		nr_seq_regra_tx_w,
		tx_pacote_seg_maior_w;
	EXIT WHEN NOT FOUND; /* apply on C12 */
		begin

		open c13;
		loop
		fetch c13 into
			nr_sequencia_w,
			vl_pacote_w,
			nr_seq_proc_pacote_w,
			nr_seq_proc_origem_w,
			nr_cirurgia_pacote_w;
		EXIT WHEN NOT FOUND; /* apply on c13 */
			begin

			select 	max(cd_procedimento),
				max(ie_origem_proced),
				max(nr_seq_proc_interno)
			into STRICT	cd_procedimento_w,
				ie_origem_proced_w,
				nr_seq_proc_interno_ww
			from 	procedimento_paciente
			where 	nr_sequencia = nr_seq_proc_origem_w;

			select 	max(cd_area_procedimento),
				max(cd_especialidade),
				max(cd_grupo_proc)
			into STRICT	cd_area_procedimento_w,
				cd_especialidade_proc_w,
				cd_grupo_proc_w
			from 	estrutura_procedimento_v
			where	cd_procedimento = cd_procedimento_w
			and 	ie_origem_proced = ie_origem_proced_w;

			select 	count(*)
			into STRICT	qt_proc_regra_w
			from 	regra_tx_pacote_item
			where 	nr_seq_regra_tx = nr_seq_regra_tx_w
			and 	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) = coalesce(cd_area_procedimento_w,0)
			and 	coalesce(cd_especialidade, coalesce(cd_especialidade_proc_w,0)) = coalesce(cd_especialidade_proc_w,0)
			and 	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0)) = coalesce(cd_grupo_proc_w,0)
			and	coalesce(cd_procedimento, coalesce(cd_procedimento_w,0)) = coalesce(cd_procedimento_w,0)
			and 	((coalesce(cd_procedimento,0) = 0) or (coalesce(ie_origem_proced, coalesce(ie_origem_proced_w,0)) = coalesce(ie_origem_proced_w,0)))
			and 	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_ww, 0)) = coalesce(nr_seq_proc_interno_ww, 0);


			if (qt_proc_regra_w > 0) and (ie_permite_varias_regras_w = 'N') then
				ie_achou_w:= 'S';
				exit;
			end if;
			-- OS 359619 Ou faz da forma acima, quando encontrar para, ou le todas.
			if (qt_proc_regra_w > 0) and (ie_permite_varias_regras_w = 'S') then

				update	atendimento_pacote
				set 	nr_seq_regra_tx = nr_seq_regra_tx_w
				where 	nr_atendimento 	= nr_atendimento_p
				and 	nr_sequencia 	= nr_sequencia_w
				and 	coalesce(nr_seq_regra_tx::text, '') = '';

				if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

			end if;

			end;
		end loop;
		close c13;

		if (ie_achou_w = 'S') and (ie_permite_varias_regras_w = 'N') then
			exit;
		end if;
		--OS 359619
		end;
	end loop;
	close C12;

	if (ie_permite_varias_regras_w = 'S') and (coalesce(nr_seq_regra_tx_w,0) > 0) then

		update	atendimento_pacote
		set 	nr_seq_regra_tx = nr_seq_regra_tx_w
		where 	nr_atendimento 	= nr_atendimento_p
		and 	coalesce(nr_seq_regra_tx::text, '') = '';

		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;

	-- Quando chegar aqui o sistema ja encontrou a regra
	if (ie_permite_varias_regras_w = 'N') then

		open c13;
		loop
		fetch c13 into
			nr_sequencia_w,
			vl_pacote_w,
			nr_seq_proc_pacote_w,
			nr_seq_proc_origem_w,
			nr_cirurgia_pacote_w;
		EXIT WHEN NOT FOUND; /* apply on c13 */
			begin

			if (nr_pacote_maior_valor_w = 0) or
				(nr_cirurgia_pacote_w <> nr_cirurgia_pacote_ant_w AND ie_regra_perc_cirurgia_w = 'S')then
				nr_pacote_maior_valor_w	:= nr_sequencia_w;
				vl_pacote_maior_valor_w	:= vl_pacote_w;

				update	atendimento_pacote
				set 	pr_afaturar    = coalesce(tx_pacote_maior_w,pr_afaturar)
				where 	nr_atendimento 	= nr_atendimento_p
				and 	nr_sequencia 	= nr_sequencia_w;

			else
				if (tx_pacote_seg_maior_w IS NOT NULL AND tx_pacote_seg_maior_w::text <> '') and (nr_pacote_seg_maior_valor_w = 0) then
					nr_pacote_seg_maior_valor_w	:= nr_sequencia_w;
					vl_pacote_seg_maior_valor_w	:= vl_pacote_w;

					update	atendimento_pacote
					set 	pr_afaturar    = coalesce(tx_pacote_seg_maior_w,pr_afaturar)
					where 	nr_atendimento 	= nr_atendimento_p
					and 	nr_sequencia 	= nr_sequencia_w;

				else

					update	atendimento_pacote
					set 	pr_afaturar    = coalesce(tx_pacote_w,pr_afaturar)
					where 	nr_atendimento 	= nr_atendimento_p
					and 	nr_sequencia 	= nr_sequencia_w;

				end if;

			end if;
			nr_cirurgia_pacote_ant_w :=nr_cirurgia_pacote_w;
			end;
		end loop;
		close c13;

	else

		open c16;
		loop
		fetch c16 into
			nr_sequencia_w,
			vl_pacote_w,
			nr_seq_proc_pacote_w,
			nr_seq_proc_origem_w,
			nr_cirurgia_pacote_w,
			nr_seq_regra_tx_pacote_w;
		EXIT WHEN NOT FOUND; /* apply on c16 */
			begin

			begin
			select  coalesce(tx_pacote_maior,100),
				coalesce(tx_pacote_demais,100),
				tx_pacote_seg_maior
			into STRICT	tx_pacote_maior_w,
				tx_pacote_w,
				tx_pacote_seg_maior_w
			from 	regra_tx_pacote a
			where	nr_sequencia = nr_seq_regra_tx_pacote_w;
			exception
				when others then
				tx_pacote_maior_w:= 100;
				tx_pacote_w	 := 100;
				tx_pacote_seg_maior_w:= null;
			end;

			if (nr_pacote_maior_valor_w = 0) or
				(nr_cirurgia_pacote_w <> nr_cirurgia_pacote_ant_w AND ie_regra_perc_cirurgia_w = 'S') or (nr_seq_regra_tx_pacote_ant_w <> nr_seq_regra_tx_pacote_w) then
				nr_pacote_maior_valor_w	:= nr_sequencia_w;
				vl_pacote_maior_valor_w	:= vl_pacote_w;

				update	atendimento_pacote
				set 	pr_afaturar    = coalesce(tx_pacote_maior_w,pr_afaturar)
				where 	nr_atendimento 	= nr_atendimento_p
				and 	nr_sequencia 	= nr_sequencia_w;

			else

				if (tx_pacote_seg_maior_w IS NOT NULL AND tx_pacote_seg_maior_w::text <> '') and (nr_pacote_seg_maior_valor_w = 0) then
					nr_pacote_seg_maior_valor_w	:= nr_sequencia_w;
					vl_pacote_seg_maior_valor_w	:= vl_pacote_w;

					update	atendimento_pacote
					set 	pr_afaturar    = coalesce(tx_pacote_seg_maior_w,pr_afaturar)
					where 	nr_atendimento 	= nr_atendimento_p
					and 	nr_sequencia 	= nr_sequencia_w;

				else

					update	atendimento_pacote
					set 	pr_afaturar    = coalesce(tx_pacote_w,pr_afaturar)
					where 	nr_atendimento 	= nr_atendimento_p
					and 	nr_sequencia 	= nr_sequencia_w;

				end if;

			end if;

			if (nr_seq_regra_tx_pacote_ant_w <> nr_seq_regra_tx_pacote_w) then
				nr_pacote_seg_maior_valor_w	:= 0;
				vl_pacote_seg_maior_valor_w	:= 0;
			end if;

			nr_cirurgia_pacote_ant_w 	:=nr_cirurgia_pacote_w;
			nr_seq_regra_tx_pacote_ant_w 	:= nr_seq_regra_tx_pacote_w;
			end;
		end loop;
		close c16;

	end if;

end if;


-- Regra % Pacote Cirurgia independente de Cirurgia (Vale para todos os pacote)  // Via de acesso
select 	count(*)
into STRICT	qt_regra_tx_w
from 	regra_tx_pacote
where 	cd_convenio = cd_convenio_p
and 	coalesce(IE_REGRA_VIA_ACESSO,'N') <> 'N';

if (qt_regra_tx_w > 0) then

	-- os 259856
	vl_pacote_maior_valor_w	:= 0;
	nr_pacote_maior_valor_w	:= 0;
	nr_pacote_seg_maior_valor_w:= 0;
	vl_pacote_seg_maior_valor_w:= 0;

	--Aplicar o %
	open c13;
	loop
	fetch c13 into
		nr_sequencia_w,
		vl_pacote_w,
		nr_seq_proc_pacote_w,
		nr_seq_proc_origem_w,
		nr_cirurgia_pacote_w;
	EXIT WHEN NOT FOUND; /* apply on c13 */
		begin

		select	coalesce(max(ie_via_acesso),'U')
		into STRICT	ie_via_acesso_w
		from 	procedimento_paciente
		where 	nr_sequencia = nr_seq_proc_origem_w;

		if	((ie_via_acesso_w = 'M') or (ie_via_acesso_w = 'U')) then -- Mesma via ou Unica ou principal
			ie_diferente_w		:= 'M'; -- 'M' Mesma Via	-- 'D' Vias diferentes
		elsif	((ie_via_acesso_w = 'B') or (ie_via_acesso_w = 'D')) then -- Bilateral ou via diferente
			ie_diferente_w		:= 'D'; -- 'M' Mesma Via	-- 'D' Vias diferentes
		end if;

		-- Buscar a regra correspondente
		open C14;
		loop
		fetch C14 into
			tx_pacote_maior_w,
			tx_pacote_w,
			ie_regra_geral_w,
			nr_seq_regra_tx_w,
			tx_pacote_seg_maior_w;
		EXIT WHEN NOT FOUND; /* apply on C14 */
			begin
			tx_pacote_maior_w:= tx_pacote_maior_w;
			tx_pacote_w	 := tx_pacote_w;
			ie_regra_geral_w := ie_regra_geral_w;
			nr_seq_regra_tx_w:= nr_seq_regra_tx_w;
			tx_pacote_seg_maior_w:= tx_pacote_seg_maior_w;
			end;
		end loop;
		close C14;


		/* Consistir estrutura OS 293503  INICIO*/

		select 	max(cd_procedimento),
			max(ie_origem_proced),
			max(nr_seq_proc_interno)
		into STRICT	cd_procedimento_w,
			ie_origem_proced_w,
			nr_seq_proc_interno_ww
		from 	procedimento_paciente
		where 	nr_sequencia = nr_seq_proc_origem_w;

		select 	max(cd_area_procedimento),
			max(cd_especialidade),
			max(cd_grupo_proc)
		into STRICT	cd_area_procedimento_w,
			cd_especialidade_proc_w,
			cd_grupo_proc_w
		from 	estrutura_procedimento_v
		where	cd_procedimento = cd_procedimento_w
		and 	ie_origem_proced = ie_origem_proced_w;

		select 	count(*)
		into STRICT	qt_regra_ww
		from 	regra_tx_pacote_item;

		if (qt_regra_ww > 0) then

			select 	count(*)
			into STRICT	qt_proc_regra_w
			from 	regra_tx_pacote_item
			where 	nr_seq_regra_tx = nr_seq_regra_tx_w
			and 	coalesce(cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) = coalesce(cd_area_procedimento_w,0)
			and 	coalesce(cd_especialidade, coalesce(cd_especialidade_proc_w,0)) = coalesce(cd_especialidade_proc_w,0)
			and 	coalesce(cd_grupo_proc, coalesce(cd_grupo_proc_w,0)) = coalesce(cd_grupo_proc_w,0)
			and	coalesce(cd_procedimento, coalesce(cd_procedimento_w,0)) = coalesce(cd_procedimento_w,0)
			and 	((coalesce(cd_procedimento,0) = 0) or (coalesce(ie_origem_proced, coalesce(ie_origem_proced_w,0)) = coalesce(ie_origem_proced_w,0)))
			and 	coalesce(nr_seq_proc_interno, coalesce(nr_seq_proc_interno_ww, 0)) = coalesce(nr_seq_proc_interno_ww, 0);

		end if;
		/* Consistir estrutura OS 293503  FINAL*/

		if	((qt_regra_ww = 0) or (qt_proc_regra_w > 0)) then

			if (nr_pacote_maior_valor_w = 0) then

				nr_pacote_maior_valor_w	:= nr_sequencia_w;
				vl_pacote_maior_valor_w	:= vl_pacote_w;

				update	atendimento_pacote
				set 	pr_afaturar    = coalesce(tx_pacote_maior_w,pr_afaturar)
				where 	nr_atendimento 	= nr_atendimento_p
				and 	nr_sequencia 	= nr_sequencia_w;
			else
				if (tx_pacote_seg_maior_w IS NOT NULL AND tx_pacote_seg_maior_w::text <> '') and (nr_pacote_seg_maior_valor_w = 0) then
					nr_pacote_seg_maior_valor_w	:= nr_sequencia_w;
					vl_pacote_seg_maior_valor_w	:= vl_pacote_w;

					update	atendimento_pacote
					set 	pr_afaturar    = coalesce(tx_pacote_seg_maior_w,pr_afaturar)
					where 	nr_atendimento 	= nr_atendimento_p
					and 	nr_sequencia 	= nr_sequencia_w;
				else
					update	atendimento_pacote
					set 	pr_afaturar    = coalesce(tx_pacote_w,pr_afaturar)
					where 	nr_atendimento 	= nr_atendimento_p
					and 	nr_sequencia 	= nr_sequencia_w;

				end if;

			end if;

		end if;

		end;
	end loop;
	close c13;

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_pacote_procedimento ( nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_convenio_p bigint, cd_categoria_p text, nm_usuario_p text, ie_gerar_p text, nr_seq_pacote_p bigint, ie_tipo_acomod_p text) FROM PUBLIC;

