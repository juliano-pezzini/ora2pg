-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fluxo_caixa_real ( cd_estabelecimento_p bigint, vl_saldo_anterior_p bigint, Dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, ie_periodo_p text, ie_todas_contas_p text, ie_passado_real_p text, ie_tit_rec_p text, ie_tit_pagar_p text, ie_cheque_p text, ie_cartao_p text, ie_conv_receb_p text, ie_protocolo_p text, ie_ordem_compra_p text, ie_conttrato_p text, ie_fluxo_especial_p text, ie_agenda_p text, ie_regra_atraso_p text, ie_operacao_p text, ie_bordero_pagar_p text, ie_pagto_escrit_p text, ie_somente_ativa_p text, ie_tipo_fluxo_p text default 'R', nr_seq_regra_p bigint default null) AS $body$
DECLARE


/*--------------------------------------------------------------- ATENCAO ----------------------------------------------------------------*/


/* Cuidado ao realizar alteraCoes no fluxo de caixa. Toda e qualquer alteraCao realizada em qualquer uma das       */


/* procedures do fluxo de caixa deve ser cuidadosamente verificada e realizada no fluxo de caixa em lote.           */


/* Devemos garantir que os dois fluxos de caixa tragam os mesmos valores no resultado, evitando assim que           */


/* existam diferenCas entre os fluxos de caixa.                                                                                                                */


/*--------------- AO ALTERAR O FLUXO DE CAIXA ALTERAR TAMBEM O FLUXO DE CAIXA EM LOTE ---------------*/

cd_conta_financ_cpa_w		bigint;
cd_conta_financ_cre_w		bigint;
ie_classif_Fluxo_w		varchar(1)		:= 'R';
ie_periodo_w			varchar(1)		:= 'D';
ie_origem_w			varchar(1)		:= 'I';
dt_atualizacao_w		timestamp			:= clock_timestamp();
cd_conta_financ_w		bigint;
vl_fluxo_w			double precision	:= 0;
vl_fluxo_estrang_w double precision	:= 0;
vl_juros_multa_w	double precision	:= 0;								
dt_referencia_w			timestamp;
cd_convenio_w			integer;
cd_moeda_atual_w		integer		:= 0;
cd_moeda_padrao_w		integer		:= 0;
ie_integracao_w			varchar(02);
IE_TRATAR_FIM_SEMANA_w		varchar(02);
IE_ACUMULAR_VENCIDOS_w		varchar(02);
IE_SOMENTE_FUTURO_w		varchar(02);
ie_oc_parcial_w			varchar(255);
ie_protocolo_conv_w		varchar(02);
dt_inicio_w			timestamp;
cd_centro_custo_w		integer;
ie_convenio_receb_w		varchar(100);
ie_cheque_avista_real_w		varchar(100);
ie_entrada_saida_w		varchar(100);
IE_TIT_REC_FLUXO_w		parametro_fluxo_caixa.ie_tit_rec_fluxo%type;
ie_tit_pag_fluxo_w		parametro_fluxo_caixa.ie_tit_pag_fluxo%type;
ie_cheque_pago_pend_w		varchar(1)	:= 'N';
IE_CARTAO_CR_REAL_W		varchar(2);
ie_operacao_w			varchar(5);
ie_origem_titulo_w		varchar(10);
IE_DEPOSITO_FLUXO_REAL_w	varchar(10);
nr_seq_classe_tit_rec_w		bigint;
nr_seq_classe_tit_pag_w		bigint;
ie_conta_fin_tf_receb_w		varchar(1);
ie_forma_calculo_contrato_w	varchar(1);
ie_conta_financ_ativa_w		varchar(1);
IE_OC_APROVADA_w		varchar(1);
qtd_dias_fluxo_oc_w		bigint;
ie_tipo_titulo_cr_w		titulo_receber.ie_tipo_titulo%type;
ie_tipo_titulo_cp_w		titulo_pagar.ie_tipo_titulo%type;
ie_filtro_fluxo_w		varchar(1);
ie_filtro_fluxo_proj_w		varchar(1);
cd_moeda_empresa_w		integer;
qt_loop_w				bigint;
ds_log_w				varchar(4000);	

c010 CURSOR FOR
/* 1 */

SELECT	'CR',
	dt_vencimento,
	cd_conta_financ,
	CASE WHEN 	IE_TIT_REC_FLUXO_w='T' THEN		CASE WHEN coalesce(vl_classificacao::text, '') = '' THEN vl_saldo_titulo - vl_recurso  ELSE vl_classificacao * dividir_sem_round(vl_saldo_titulo - vl_recurso, vl_bruto) END  WHEN 	IE_TIT_REC_FLUXO_w='L' THEN 		CASE WHEN coalesce(vl_classificacao::text, '') = '' THEN  PERFORM dividir_sem_round(vl_saldo_titulo - vl_recurso, vl_bruto) * vl_liquido  ELSE (dividir_sem_round(vl_classificacao, vl_titulo) * vl_liquido) *				dividir_sem_round(vl_saldo_titulo - vl_recurso, vl_bruto) END 		 END ,
	VL_TITULO_ESTRANG,
	0,
	0,
	cd_moeda,
	obter_moeda_padrao(cd_estabelecimento_p, 'R') cd_moeda_padrao,
	cd_centro_custo,
	ie_origem_titulo,
	nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	ie_tipo_tit_rec
from	(SELECT	/*+ index (a TITRECE_I9) */		OBTER_DT_VENC_TIT_REC(a.cd_cgc, OBTER_VENC_TITULO(null, a.nr_titulo), ie_regra_atraso_p, c.cd_banco, a.cd_pessoa_fisica) dt_vencimento,
		coalesce(b.cd_conta_financ, cd_conta_financ_cre_w) cd_conta_financ,
		b.vl_classificacao,
		a.vl_saldo_titulo,
		a.VL_TITULO_ESTRANG,
		a.vl_titulo,
		(obter_dados_titulo_receber(a.nr_titulo,'V'))::numeric  vl_bruto,
		(obter_dados_titulo_receber(a.nr_titulo,'VLL'))::numeric  vl_liquido,
		a.cd_moeda,
		b.cd_centro_custo,
		a.ie_origem_titulo,
		a.nr_seq_classe nr_seq_classe_tit_rec,
		a.ie_tipo_titulo ie_tipo_tit_rec,
		obter_vl_recurso_titulo(a.nr_titulo) vl_recurso
	FROM titulo_receber a
LEFT OUTER JOIN titulo_receber_classif b ON (a.nr_titulo = b.nr_titulo)
LEFT OUTER JOIN banco_estabelecimento c ON (a.nr_seq_conta_banco = c.nr_sequencia)
WHERE (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(c.nr_sequencia, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S') and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(a.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S')   and OBTER_VENC_TITULO(null, a.nr_titulo)		<= dt_final_p and a.vl_saldo_titulo				> 0 and a.ie_situacao					= '1' and ((a.cd_estabelecimento = cd_estabelecimento_p or cd_estab_financeiro = cd_estabelecimento_p and ie_restringe_estab_p = 'S')
		or (a.cd_estabelecimento			= cd_estabelecimento_p and ie_restringe_estab_p = 'E')
		or (ie_restringe_estab_p = 'N')) and (OBTER_SE_CONTA_FINANC_ESTAB(coalesce(b.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_p) = 'S' or ie_restringe_estab_p = 'N') and OBTER_VENC_TITULO(null, a.nr_titulo)		>= CASE WHEN IE_ACUMULAR_VENCIDOS_w='N' THEN dt_inicio_w  ELSE OBTER_VENC_TITULO(null, a.nr_titulo) END and OBTER_EMPRESA_ESTAB(a.cd_estabelecimento)	= cd_empresa_p and ie_tit_rec_p	= 'S' and not exists (select	1
		from	fluxo_caixa_excecao x
		where	x.ie_integracao		= 'TR'
		and	x.ie_origem_titulo_rec	= a.ie_origem_titulo
		and	x.ie_tipo_fluxo		= 'R') ) alias34

union all

/* 2 */

select	'CR',
	trunc(coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)),coalesce(a.dt_vencimento_atual, dt_vencimento)), 'dd'),
	coalesce(	CASE WHEN 	coalesce(ie_conta_fin_tf_receb_w,'N')='S' THEN (select	max(y.cd_conta_financ)			from	transacao_financeira y,				caixa_receb x			where	x.nr_seq_trans_financ	= y.nr_sequencia			and	x.nr_sequencia		= a.nr_seq_caixa_rec)  ELSE null END ,
		coalesce(	c.cd_conta_pre,
			obter_conta_fin_cheque_estab(a.nr_seq_cheque,1,ie_restringe_estab_p))
		),
		0,
		0,
	coalesce(c.vl_classificacao, a.vl_cheque),
	0,
	a.cd_moeda,
	obter_moeda_padrao(cd_estabelecimento_p, 'R') cd_moeda_padrao,
	0 cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM cheque_cr a
LEFT OUTER JOIN motivo_dev_cheque b ON (a.nr_seq_motivo_dev = b.nr_sequencia)
LEFT OUTER JOIN cheque_cr_classif c ON (a.nr_seq_cheque = c.nr_seq_cheque)
WHERE (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, a.nr_seq_cheque, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S') and coalesce(a.dt_compensacao::text, '') = '' and ((obter_status_cheque(a.nr_seq_cheque)	in (1,3)) or (obter_status_cheque(a.nr_seq_cheque)	= 5 and coalesce(b.ie_tipo_devolucao,'N') = 'B') or (IE_DEPOSITO_FLUXO_REAL_w = 'S' and obter_status_cheque(a.nr_seq_cheque) = 2))   and coalesce(a.cd_moeda,cd_moeda_empresa_w)	= cd_moeda_empresa_w   -- Projeto Multimoeda - Busca apenas os registros em moeda nacional para o fluxo a realizar
  and (OBTER_SE_CONTA_FINANC_ESTAB(obter_conta_financ_cheque_cr(a.nr_seq_cheque, 1), cd_estabelecimento_p,ie_restringe_estab_p) = 'S' or ie_restringe_estab_p = 'N') and (a.cd_estabelecimento				= cd_estabelecimento_p or ie_restringe_estab_p = 'N') and OBTER_EMPRESA_ESTAB(a.cd_estabelecimento)	= cd_empresa_p and coalesce(coalesce(c.cd_conta_pre,obter_conta_fin_cheque_estab(a.nr_seq_cheque, 1, ie_restringe_estab_p)),0) > 0 and ((trunc(coalesce(a.dt_vencimento_atual, a.dt_vencimento), 'dd') <> trunc(a.dt_contabil, 'dd')) or (ie_cheque_avista_real_w = 'S')) /* Edgar 26/02/2007 OS 51306, tratamento p/ cheque pre */
  and (coalesce(a.dt_vencimento_atual, dt_vencimento) IS NOT NULL AND (coalesce(a.dt_vencimento_atual, dt_vencimento))::text <> '') and trunc(coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, dt_vencimento)),'dd')	<= dt_final_p and trunc(coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)), coalesce(a.dt_vencimento_atual, a.dt_vencimento)),'dd')	>=
			CASE WHEN IE_ACUMULAR_VENCIDOS_w='N' THEN  dt_inicio_w  ELSE trunc(coalesce(coalesce(a.dt_prev_terc_desbloqueio, coalesce(a.dt_prev_seg_desbloqueio, a.dt_prev_desbloqueio)),										coalesce(a.dt_vencimento_atual, dt_vencimento)),'dd') END and ie_cheque_p	= 'S'
 
union all

/* 3 */

select	'CR',
	trunc(a.dt_parcela, 'dd'),
	coalesce(c.cd_conta_financ,obter_conta_financ_cartao_cr(a.nr_seq_movto)),
	dividir_sem_round(coalesce(c.vl_classificacao, b.vl_transacao),b.vl_transacao) * CASE WHEN coalesce(IE_CARTAO_CR_REAL_W,'P')='P' THEN  a.vl_parcela  ELSE a.vl_liquido END ,
	0,
	0,
	0,
	0,
	0,    
	0 cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
FROM movto_cartao_cr_parcela a, movto_cartao_cr b
LEFT OUTER JOIN movto_cartao_cr_classif c ON (b.nr_sequencia = c.nr_seq_movto)
WHERE (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, b.cd_estabelecimento),1,1) = 'S') and a.nr_seq_movto					= b.nr_sequencia  and a.vl_saldo_liquido				> 0 and (b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and coalesce(b.dt_cancelamento::text, '') = '' and (OBTER_SE_CONTA_FINANC_ESTAB(coalesce(c.cd_conta_financ,obter_conta_financ_cartao_cr(a.nr_seq_movto)), cd_estabelecimento_p,ie_restringe_estab_p) = 'S' or ie_restringe_estab_p = 'N') and (b.cd_estabelecimento				= cd_estabelecimento_p or ie_restringe_estab_p = 'N') and OBTER_EMPRESA_ESTAB(b.cd_estabelecimento)	= cd_empresa_p and coalesce(c.cd_conta_financ,coalesce(obter_conta_financ_cartao_cr(a.nr_seq_movto),0)) > 0 and a.dt_parcela					<= dt_final_p and a.dt_parcela					>= CASE WHEN IE_ACUMULAR_VENCIDOS_w='N' THEN  dt_inicio_w  ELSE a.dt_parcela END and coalesce(b.ie_lib_caixa,'S')				= 'S' and ie_cartao_p					= 'S'
 
union all

/* 4 */

select	'CP',	/* Titulos a pagar */
	dt_vencimento,
	cd_conta_financ,
	CASE WHEN ie_tit_pag_fluxo_w='T' THEN  ((dividir_sem_round(coalesce(vl_classif, vl_titulo) + -- valor do titulo
						(dividir_sem_round((vl_saldo_juros + vl_saldo_multa),vl_titulo) * 		-- caculo do valor do juros e multa
								coalesce(vl_classif, vl_titulo)						),					vl_titulo)					) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(clock_timestamp(), 'dd'))) WHEN ie_tit_pag_fluxo_w=	-- vezes o valor do saldo do titulo considerando impostos
				'L' THEN 	((dividir_sem_round(coalesce(vl_classif, vl_titulo) + -- valor do titulo
						(dividir_sem_round((vl_saldo_juros + vl_saldo_multa),vl_titulo) * 		-- caculo do valor do juros e multa
								coalesce(vl_classif, vl_titulo)						),					vl_titulo)					) * vl_saldo_titulo) END 	saldo,	-- vezes o valor do saldo do titulo sem impostos
	coalesce(VL_TITULO_ESTRANG,0),
	coalesce(vl_saldo_juros,0) + coalesce(vl_saldo_multa,0) VL_JUROS_MULTA,						  															  
	0,
	cd_moeda,
	obter_moeda_padrao(cd_estabelecimento_p, 'P'),
	cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	nr_seq_classe_tit_pag,
	ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from (select	 /*+ index (a TITPAGA_I2) */		OBTER_VENC_TITULO(a.nr_titulo, null) dt_vencimento,
		coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
		b.vl_titulo vl_classif,
		a.vl_saldo_juros,
		a.vl_saldo_multa,
		(OBTER_DADOS_TIT_PAGAR(a.nr_titulo, 'VT'))::numeric  vl_titulo,
		a.VL_TITULO_ESTRANG,			  
		a.nr_titulo,
		a.cd_moeda,
		b.cd_centro_custo,
		null ie_origem_titulo,
		null nr_seq_classe_tit_rec,
		a.nr_seq_classe nr_seq_classe_tit_pag,
		a.ie_tipo_titulo ie_tipo_tit_pag,
		null ie_tipo_tit_rec,
		a.vl_saldo_titulo 
	FROM estabelecimento d, titulo_pagar a
LEFT OUTER JOIN titulo_pagar_classif b ON (a.nr_titulo = b.nr_titulo)
WHERE (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S') and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(a.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S')  and d.cd_empresa				= cd_empresa_p and a.cd_estabelecimento			= d.cd_estabelecimento and (ie_bordero_pagar_p	= 'N' or (coalesce(a.nr_bordero::text, '') = '' and
		not exists (select	1
		from	bordero_tit_pagar x
		where	x.nr_titulo	= a.nr_titulo))) and (ie_pagto_escrit_p	= 'N' or
		not exists (select	1
		from	titulo_pagar_escrit x
		where	x.nr_titulo	= a.nr_titulo)) and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or a.cd_estab_financeiro = cd_estabelecimento_p))) and coalesce(substr(obter_se_tit_pagar_transf(a.nr_titulo),1,255),'N') = 'N' and (ie_oc_parcial_w = 'S' or
		not exists (select	1 			-- Edgar 20/07/2009, OS 153115, nao trazer titulos que tenham OC em aberto, pois entra no fluxo pela OC
		from	ordem_compra y,
			nota_fiscal x
		where	coalesce(y.dt_baixa::text, '') = ''
		and	x.nr_ordem_compra	= y.nr_ordem_compra
		and	x.nr_sequencia		= a.nr_seq_nota_fiscal)) and coalesce(a.dt_liquidacao::text, '') = '' and a.vl_saldo_titulo			> 0 and a.ie_situacao				= 'A'
	 ) alias166
where (ie_restringe_estab_p = 'N' or substr(OBTER_SE_CONTA_FINANC_ESTAB(cd_conta_financ, cd_estabelecimento_p,ie_restringe_estab_p),1,255) = 'S')
and 	dt_vencimento				<= dt_final_p
and	dt_vencimento					>= CASE WHEN IE_ACUMULAR_VENCIDOS_w='N' THEN  dt_inicio_w  ELSE dt_vencimento END 
and	ie_tit_pagar_p	= 'S'

union all

/* 5 */

select	'BP',	/* Bordero a pagar */
	dt_vencimento,
	cd_conta_financ,
	--(nvl(vl_classif,nvl(vl_bordero,vl_titulo)) / nvl(vl_bordero,vl_titulo)) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(sysdate, 'dd')) saldo,	
	CASE WHEN  coalesce(ie_tipo_fluxo_p,'R')='V' THEN   (dividir_sem_round(coalesce(vl_classif,coalesce(vl_bordero,vl_titulo)) + --Valor titulo
															  (dividir_sem_round(((vl_saldo_juros + vl_saldo_multa) - vl_desconto_bordero),vl_titulo) * coalesce(vl_classif,coalesce(vl_bordero,vl_titulo))), --Valor de juros e multa - desconto
															  vl_titulo)) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(clock_timestamp(), 'dd'))  ELSE (dividir_sem_round(coalesce(vl_classif,coalesce(vl_bordero,vl_titulo)) + --Valor titulo
															  (dividir_sem_round((vl_saldo_juros + vl_saldo_multa),vl_titulo) * coalesce(vl_classif,coalesce(vl_bordero,vl_titulo))), --Valor de juros e multa
															  vl_titulo)) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(clock_timestamp(), 'dd')) END  saldo,
	VL_TITULO_ESTRANG,   
	0,
    0,
	cd_moeda,
	obter_moeda_padrao(cd_estabelecimento_p, 'P'),
	cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	nr_seq_classe_tit_pag,
	ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	(select	 /*+ index (a TITPAGA_I2) */		(select	max(coalesce(x.dt_real_pagamento,x.dt_prev_pagamento))
		from	bordero_pagamento x
		where	x.nr_bordero	= coalesce(c.nr_bordero,a.nr_bordero)) dt_vencimento,
		coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
		b.vl_titulo vl_classif,
		a.VL_TITULO_ESTRANG,			  
		coalesce(a.vl_saldo_juros,0) vl_saldo_juros,
		coalesce(a.vl_saldo_multa,0) vl_saldo_multa,
		coalesce(c.vl_desconto_bordero,0) vl_desconto_bordero, 
		(OBTER_DADOS_TIT_PAGAR(a.nr_titulo, 'VT'))::numeric  vl_titulo,
		a.nr_titulo,
		a.cd_moeda,
		b.cd_centro_custo,
		null ie_origem_titulo,
		null nr_seq_classe_tit_rec,
		a.nr_seq_classe nr_seq_classe_tit_pag,
		c.vl_bordero,
		a.ie_tipo_titulo ie_tipo_tit_pag,
		null ie_tipo_tit_rec
	FROM estabelecimento d, titulo_pagar a
LEFT OUTER JOIN bordero_tit_pagar c ON (a.nr_titulo = c.nr_titulo)
LEFT OUTER JOIN titulo_pagar_classif b ON (a.nr_titulo = b.nr_titulo)
WHERE (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S') and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(a.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S')   and d.cd_empresa				= cd_empresa_p and a.cd_estabelecimento			= d.cd_estabelecimento and ((a.nr_bordero IS NOT NULL AND a.nr_bordero::text <> '') or
		exists (select	1
		from	bordero_tit_pagar x
		where	x.nr_titulo	= a.nr_titulo)) and (ie_pagto_escrit_p	= 'N' or
		not exists (select	1
		from	titulo_pagar_escrit x
		where	x.nr_titulo	= a.nr_titulo)) and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or a.cd_estab_financeiro = cd_estabelecimento_p))) and coalesce(substr(obter_se_tit_pagar_transf(a.nr_titulo),1,255),'N') = 'N' and (ie_oc_parcial_w = 'S' or
		not exists (select	1 			-- Edgar 20/07/2009, OS 153115, nao trazer titulos que tenham OC em aberto, pois entra no fluxo pela OC
		from	ordem_compra y,
			nota_fiscal x
		where	coalesce(y.dt_baixa::text, '') = ''
		and	x.nr_ordem_compra	= y.nr_ordem_compra
		and	x.nr_sequencia		= a.nr_seq_nota_fiscal)) and coalesce(a.dt_liquidacao::text, '') = '' and a.vl_saldo_titulo			> 0 and a.ie_situacao				= 'A'
	 ) alias229
where (ie_restringe_estab_p = 'N' or substr(OBTER_SE_CONTA_FINANC_ESTAB(cd_conta_financ, cd_estabelecimento_p,ie_restringe_estab_p),1,255) = 'S')
and	dt_vencimento	between dt_inicio_w and dt_final_p
and	ie_bordero_pagar_p	= 'S'

union all

/* 6 */

select	'PE',	/* Pagamento escritural */
	dt_vencimento,
	cd_conta_financ,
	CASE WHEN  coalesce(ie_tipo_fluxo_p,'R')='V' THEN 	(dividir_sem_round(coalesce(vl_classif,vl_titulo) + --Valor titulo
															  (dividir_sem_round(((vl_saldo_juros + vl_saldo_multa) - vl_desconto),vl_titulo) * coalesce(vl_classif, vl_titulo)), --Valor de juros e multa - desconto
															  vl_titulo)) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(clock_timestamp(), 'dd'))  ELSE (dividir_sem_round(coalesce(vl_classif,vl_titulo) + --Valor titulo
															  (dividir_sem_round((vl_saldo_juros + vl_saldo_multa),vl_titulo) * coalesce(vl_classif, vl_titulo)), --Valor de juros e multa 
															  vl_titulo)) * Obter_Saldo_Titulo_pagar(nr_titulo, trunc(clock_timestamp(), 'dd')) END  saldo,
	VL_TITULO_ESTRANG,			      
	0,
    0,
	cd_moeda,
	obter_moeda_padrao(cd_estabelecimento_p, 'P'),
	cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	nr_seq_classe_tit_pag,
	ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from (select	 /*+ index (a TITPAGA_I2) */		e.dt_remessa_retorno dt_vencimento,
		coalesce(b.nr_seq_conta_financ, cd_conta_financ_cpa_w) cd_conta_financ,
		b.vl_titulo vl_classif,
		coalesce(a.vl_saldo_juros,0) vl_saldo_juros,
		coalesce(a.vl_saldo_multa,0) vl_saldo_multa,
		coalesce(c.vl_desconto,0) vl_desconto,	
		coalesce(c.vl_liquidacao,c.vl_escritural) vl_titulo,
		a.VL_TITULO_ESTRANG,			  
		a.nr_titulo,
		a.cd_moeda,
		b.cd_centro_custo,
		null ie_origem_titulo,
		null nr_seq_classe_tit_rec,
		a.nr_seq_classe nr_seq_classe_tit_pag,
		a.ie_tipo_titulo ie_tipo_tit_pag,
		null ie_tipo_tit_rec
	FROM banco_escritural e, estabelecimento d, titulo_pagar_escrit c, titulo_pagar a
LEFT OUTER JOIN titulo_pagar_classif b ON (a.nr_titulo = b.nr_titulo)
WHERE (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S') and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(a.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S') and c.nr_seq_escrit				= e.nr_sequencia and a.nr_titulo				= c.nr_titulo  and d.cd_empresa				= cd_empresa_p and a.cd_estabelecimento			= d.cd_estabelecimento and (ie_bordero_pagar_p	= 'N' or (coalesce(a.nr_bordero::text, '') = '' and
		not exists (select	1
		from	bordero_tit_pagar x
		where	x.nr_titulo	= a.nr_titulo))) and (ie_restringe_estab_p = 'N' or (ie_restringe_estab_p = 'E' and a.cd_estabelecimento = cd_estabelecimento_p) or (ie_restringe_estab_p = 'S' and (a.cd_estabelecimento = cd_estabelecimento_p or a.cd_estab_financeiro = cd_estabelecimento_p))) and coalesce(substr(obter_se_tit_pagar_transf(a.nr_titulo),1,255),'N') = 'N' and (ie_oc_parcial_w = 'S' or
		not exists (select	1 			-- Edgar 20/07/2009, OS 153115, nao trazer titulos que tenham OC em aberto, pois entra no fluxo pela OC
		from	ordem_compra y,
			nota_fiscal x
		where	coalesce(y.dt_baixa::text, '') = ''
		and	x.nr_ordem_compra	= y.nr_ordem_compra
		and	x.nr_sequencia		= a.nr_seq_nota_fiscal)) and coalesce(a.dt_liquidacao::text, '') = '' and a.vl_saldo_titulo			> 0 and a.ie_situacao				= 'A'
	 ) alias282
where (ie_restringe_estab_p = 'N' or substr(OBTER_SE_CONTA_FINANC_ESTAB(cd_conta_financ, cd_estabelecimento_p,ie_restringe_estab_p),1,255) = 'S')
and	dt_vencimento		between dt_inicio_w and dt_final_p
and	ie_pagto_escrit_p	= 'S'

union all

/* 7 */

select	'RC',
	coalesce(a.dt_fluxo_caixa, a.dt_recebimento),
	0,
	(obter_saldo_receb_convenio(a.nr_sequencia, clock_timestamp()) * -1) saldo,
	0,
	0,     
	a.cd_convenio,
	0,
	0,
	0 cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from 	Convenio_receb a
where (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S')
and	a.ie_status <> 'T'
and	obter_saldo_receb_convenio(a.nr_sequencia, clock_timestamp()) > 0
and (a.cd_estabelecimento			= cd_estabelecimento_p or ie_restringe_estab_p = 'N')
and	coalesce(a.cd_moeda,cd_moeda_empresa_w)	= cd_moeda_empresa_w   -- Projeto Multimoeda - Busca apenas os registros em moeda nacional para o fluxo a realizar
and	OBTER_EMPRESA_ESTAB(a.cd_estabelecimento)	= cd_empresa_p
and	coalesce(a.ie_integrar_cb_fluxo,'S')		= 'S'
and	ie_convenio_receb_w			= 'S'
and	ie_conv_receb_p				= 'S'

union all

/* 8 */

select	'PC',
	a.dt_vencimento,
	0,
	coalesce(b.vl_conta,0),
	0,   
	0,     
	a.cd_convenio,
	0,
	0,
	0 cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	conta_paciente b,
	protocolo_convenio a
where (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S')
and	a.nr_seq_protocolo	= b.nr_seq_protocolo
and	((a.ie_status_protocolo	= 1 AND ie_protocolo_conv_w	= 'S') or
	 ((a.ie_status_protocolo	in (1,3)) and (ie_protocolo_conv_w	= 'A')))
and	trunc(a.dt_vencimento,'dd')			between	dt_inicio_w and dt_final_p
and (a.cd_estabelecimento				= cd_estabelecimento_p or ie_restringe_estab_p = 'N')
and	OBTER_EMPRESA_ESTAB(a.cd_estabelecimento)	= cd_empresa_p
and	coalesce(b.ie_cancelamento::text, '') = ''
and	not exists (select 1 from titulo_receber x where x.nr_seq_protocolo = a.nr_seq_protocolo or x.nr_interno_conta = b.nr_interno_conta)
and	ie_protocolo_p		= 'S'

union all

/* 9 */

select	'CP', /* Cheques pagos */
	dt_inicio_w,
	obter_conta_financ_cheque_cp(a.nr_sequencia, 1),
	sum(a.vl_cheque),
	0,
	0,
	0,
	0,
	0,    
	0 cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	cheque a
where (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S')
and	a.cd_estabelecimento					= cd_estabelecimento_p
and	coalesce(a.dt_cancelamento::text, '') = ''
and	trunc(a.dt_emissao,'dd')				< dt_inicio_w
and (coalesce(a.dt_compensacao::text, '') = '' or a.dt_compensacao > dt_final_p)
and	coalesce(a.cd_moeda,cd_moeda_empresa_w)	= cd_moeda_empresa_w   -- Projeto Multimoeda - Busca apenas os registros em moeda nacional para o fluxo a realizar
and	obter_conta_financ_cheque_cp(a.nr_sequencia, 1)	> 0
and	ie_cheque_pago_pend_w					= 'S'
group by
	obter_conta_financ_cheque_cp(a.nr_sequencia, 1)

union all

/* 10 */
 /* valor de glosas a recuperar */

select	'CR',
	CASE WHEN(trunc(dt_vencimento,'dd') - trunc(dt_inicio_w,'dd')) - abs(trunc(dt_vencimento,'dd') - trunc(dt_inicio_w,'dd'))=0 THEN dt_vencimento + 1  ELSE dt_inicio_w END  dt_vencimento,
	cd_conta_financ,
	vl_recurso,
	0,
	0,  
	0,      
	cd_moeda,
	obter_moeda_padrao(cd_estabelecimento_p,'R') cd_moeda_padrao,
	null cd_centro_custo,
	ie_origem_titulo,
	nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	ie_tipo_tit_rec
from	(select	/*+ index (a TITRECE_I9) */		OBTER_DT_VENC_TIT_REC(a.cd_cgc, OBTER_VENC_TITULO(null, a.nr_titulo), ie_regra_atraso_p, c.cd_banco, a.cd_pessoa_fisica) dt_vencimento,
		d.cd_conta_financ,
		a.cd_moeda,
		a.ie_origem_titulo,
		a.nr_seq_classe nr_seq_classe_tit_rec,
		a.ie_tipo_titulo ie_tipo_tit_rec,
		obter_vl_recurso_titulo(a.nr_titulo) vl_recurso
	FROM transacao_financeira d, titulo_receber_liq b, titulo_receber a
LEFT OUTER JOIN banco_estabelecimento c ON (a.nr_seq_conta_banco = c.nr_sequencia)
WHERE (d.cd_conta_financ IS NOT NULL AND d.cd_conta_financ::text <> '') and b.nr_seq_trans_fin				= d.nr_sequencia and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(c.nr_sequencia, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S') and (ie_filtro_fluxo_proj_w = 'N' or substr(obter_se_proj_filtro_fluxo(a.nr_seq_proj_rec, nm_usuario_p),1,1) = 'S') and a.nr_titulo					= b.nr_titulo and b.nr_sequencia	=
		(select	max(x.nr_sequencia)
		from	titulo_receber_liq x 
		where	x.nr_titulo	= a.nr_titulo
		and	not exists (select	1
			from	titulo_receber_liq w
			where	w.nr_seq_liq_origem	= x.nr_sequencia
			and	w.nr_titulo		= x.nr_titulo)
		and	coalesce(x.nr_seq_liq_origem::text, '') = ''
		and	coalesce(x.vl_recurso,0)				<> 0)  and OBTER_VENC_TITULO(null, a.nr_titulo)		<= dt_final_p and a.vl_saldo_titulo				> 0 and a.ie_situacao					= '1' and ((a.cd_estabelecimento = cd_estabelecimento_p or cd_estab_financeiro = cd_estabelecimento_p and ie_restringe_estab_p = 'S')
		or (a.cd_estabelecimento			= cd_estabelecimento_p and ie_restringe_estab_p = 'E')
		or (ie_restringe_estab_p = 'N')) and (OBTER_SE_CONTA_FINANC_ESTAB(coalesce(d.cd_conta_financ, cd_conta_financ_cre_w), cd_estabelecimento_p,ie_restringe_estab_p) = 'S' or ie_restringe_estab_p = 'N') and OBTER_EMPRESA_ESTAB(a.cd_estabelecimento)	= cd_empresa_p and ie_tit_rec_p					= 'S' and not exists (select	1
		from	fluxo_caixa_excecao x
		where	x.ie_integracao		= 'TR'
		and	x.ie_origem_titulo_rec	= a.ie_origem_titulo
		and	x.ie_tipo_fluxo		= 'R') group by	a.cd_cgc,
		a.nr_titulo,
		c.cd_banco,
		a.cd_pessoa_fisica,
		d.cd_conta_financ,
		a.cd_moeda,
		a.ie_origem_titulo,
		a.nr_seq_classe,
		a.ie_tipo_titulo) alias358
where	coalesce(vl_recurso,0)	<> 0

union all

/* 11 */
 /* Gestao de Emprestimos e Financiamentos */

select 	'CE',
	dt_vencimento,
	cd_conta_financ,
	sum(vl_fluxo),
	0,  
	0,     
	0 cd_convenio,
	cd_moeda_atual,
	obter_moeda_padrao(cd_estabelecimento_p,'R') cd_moeda_padrao,
	null cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_titulo_cp,
	null ie_tipo_titulo_cr
from (	select	a.dt_vencimento dt_vencimento,
		coalesce(b.cd_conta_financ,cd_conta_financ_cpa_w) cd_conta_financ,
		(a.vl_parcela - a.vl_juros - a.vl_amortizacao) vl_fluxo,
		c.cd_moeda_estrangeira cd_moeda_atual
	from	emprest_financ_parc a,
		emprest_financ_regra b,
		contrato c
	where	c.nr_sequencia = b.nr_seq_contrato
	and	c.nr_sequencia = a.nr_seq_contrato
	and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S')
	and	coalesce(a.vl_parcela - a.vl_juros - a.vl_amortizacao,0) <> 0
	and 	c.ie_situacao = 'A'
	and	coalesce(a.nr_titulo::text, '') = ''
	and	a.dt_vencimento between dt_inicio_w and dt_final_p
	
union all

	select	a.dt_vencimento dt_vencimento,
		coalesce(b.cd_conta_financ_amort,coalesce(b.cd_conta_financ,cd_conta_financ_cpa_w)) cd_conta_financ,
		a.vl_amortizacao vl_fluxo,
		c.cd_moeda_estrangeira cd_moeda_atual
	from	emprest_financ_parc a,
		emprest_financ_regra b,
		contrato c
	where	c.nr_sequencia = b.nr_seq_contrato
	and	c.nr_sequencia = a.nr_seq_contrato
	and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S')
	and	coalesce(a.vl_amortizacao,0) <> 0
	and 	c.ie_situacao = 'A'
	and	coalesce(a.nr_titulo::text, '') = ''
	and	a.dt_vencimento between dt_inicio_w and dt_final_p
	
union all

	select	a.dt_vencimento dt_vencimento,
		coalesce(b.cd_conta_financ_juros,coalesce(b.cd_conta_financ,cd_conta_financ_cpa_w)) cd_conta_financ,
		a.vl_juros vl_fluxo,
		c.cd_moeda_estrangeira cd_moeda_atual
	from	emprest_financ_parc a,
		emprest_financ_regra b,
		contrato c
	where	c.nr_sequencia = b.nr_seq_contrato
	and	c.nr_sequencia = a.nr_seq_contrato
	and (ie_filtro_fluxo_w = 'N' or substr(obter_se_filtro_fluxo_estab(null, null, null, nm_usuario_p, null, a.cd_estabelecimento),1,1) = 'S')
	and	coalesce(a.vl_juros,0) <> 0
	and 	c.ie_situacao = 'A'
	and	coalesce(a.nr_titulo::text, '') = ''
	and	a.dt_vencimento between dt_inicio_w and dt_final_p) alias383
group by
	dt_vencimento,
	cd_conta_financ,
	cd_moeda_atual,
	obter_moeda_padrao(cd_estabelecimento_p,'R')

union all

/* 12 */
 /* Projetos e Investimentos */

select	'PI',
	coalesce(a.dt_mes_referencia,b.dt_orcamento),
	coalesce(a.cd_conta_financ,cd_conta_financ_cpa_w) cd_conta_financ,
	a.vl_orcado,
	0,
	0,
	0,
	a.cd_moeda,
	obter_moeda_padrao(cd_estabelecimento_p, 'R') cd_moeda_padrao,
	a.cd_centro_custo,
	null ie_origem_titulo,
	null nr_seq_classe_tit_rec,
	null nr_seq_classe_tit_pag,
	null ie_tipo_tit_pag,
	null ie_tipo_tit_rec
from	gpi_orc_item a, 
	gpi_orcamento b, 
	gpi_projeto c, 
	estabelecimento d
where	a.nr_seq_orcamento = b.nr_sequencia
and	c.nr_sequencia = b.nr_seq_projeto
and	c.cd_estabelecimento = d.cd_estabelecimento
and	c.ie_situacao = 'A'
and	((c.cd_estabelecimento = cd_estabelecimento_p and ie_restringe_estab_p = 'S')
	or (c.cd_estabelecimento = cd_estabelecimento_p and ie_restringe_estab_p = 'E')
	or (ie_restringe_estab_p = 'N'))
and	d.cd_empresa = cd_empresa_p
and	a.vl_orcado <> 0
and	coalesce(a.dt_mes_referencia,b.dt_orcamento) between dt_inicio_p and dt_final_p

union all

/* 13 */
 /* Planejamento Orcamentario */

select  'PL',
        a.dt_referencia,
        coalesce(a.cd_conta_financ,cd_conta_financ_cpa_w) cd_conta_financ,
        a.vl_planej,
		0,
		0,
        0 cd_convenio,
        0 cd_moeda_atual,
        CASE WHEN a.cd_estab_exclusivo=obter_moeda_padrao(a.cd_estab_exclusivo, 'P') THEN 0 END  cd_moeda_padrao,
        a.cd_centro_custo,
        null ie_origem_titulo,
        null nr_seq_classe_tit_rec,
        null nr_seq_classe_tit_pag,
        null ie_tipo_tit_pag,
        null ie_tipo_tit_rec
from    ctb_planej_orc_valor_v a
where   (a.cd_conta_financ IS NOT NULL AND a.cd_conta_financ::text <> '')
and     coalesce(a.nr_seq_proj_gpi::text, '') = ''
and     ((coalesce(a.cd_estab_exclusivo,cd_estabelecimento_p) = cd_estabelecimento_p and ie_restringe_estab_p in ('S', 'E'))
          or (ie_restringe_estab_p = 'N'))
and     a.cd_empresa = cd_empresa_p
and     coalesce(a.vl_planej,0) <> 0
and     a.dt_referencia between dt_inicio_p and dt_final_p;

c020 CURSOR FOR
SELECT	cd_conta_financ
from	conta_financeira
where	CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END  = 'A'
and (cd_empresa = cd_empresa_p or cd_estabelecimento = cd_estabelecimento_p)
and (OBTER_SE_CONTA_FINANC_ESTAB(cd_conta_financ, cd_estabelecimento_p,ie_restringe_estab_p) = 'S' or ie_restringe_estab_p = 'N')
and	coalesce(ie_todas_contas_p,'N') = 'S';


BEGIN

begin
select	cd_conta_financ_cpa,
	cd_conta_financ_cre,
	IE_SOMENTE_FUTURO,
	IE_TRATAR_FIM_SEMANA,
	IE_ACUMULAR_VENCIDOS,
	ie_protocolo_conv,
	ie_convenio_receb,
	coalesce(ie_cheque_avista_real, 'N'),
	coalesce(IE_TIT_REC_FLUXO, 'T'),
	coalesce(ie_tit_pag_fluxo, 'T'),
	coalesce(ie_oc_parcial, 'N'),
	coalesce(ie_cheque_pago_pend,'N'),
	coalesce(IE_CARTAO_CR_REAL, 'P'),
	coalesce(IE_DEPOSITO_FLUXO_REAL, 'N'),
	coalesce(ie_forma_calculo_contrato,'R'),
	coalesce(IE_OC_APROVADA,'S')
into STRICT	cd_conta_financ_cpa_w,
 	cd_conta_financ_cre_w,
	IE_SOMENTE_FUTURO_w,
	IE_TRATAR_FIM_SEMANA_w,
	IE_ACUMULAR_VENCIDOS_w,
	ie_protocolo_conv_w,
	ie_convenio_receb_w,
	ie_cheque_avista_real_w,
	IE_TIT_REC_FLUXO_w,
	ie_tit_pag_fluxo_w,
	ie_oc_parcial_w,
	ie_cheque_pago_pend_w,
	IE_CARTAO_CR_REAL_W,
	IE_DEPOSITO_FLUXO_REAL_w,
	ie_forma_calculo_contrato_w,
	IE_OC_APROVADA_w
from	parametro_fluxo_caixa
where 	cd_estabelecimento = cd_estabelecimento_p;
exception
	when no_data_found then
		/* Parametros do fluxo de caixa nao cadastrados! */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(197611);
end;

/* Projeto Multimoeda - Busca a moeda padrao da empresa para gravar no fluxo. */

select	obter_moeda_padrao_empresa(cd_estabelecimento_p,'E')
into STRICT	cd_moeda_empresa_w
;

ie_conta_fin_tf_receb_w := obter_param_usuario(830, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_conta_fin_tf_receb_w);

dt_inicio_w		:= dt_inicio_p;
if (IE_SOMENTE_FUTURO_w = 'S') then
	dt_inicio_w	:= trunc(clock_timestamp(), 'dd');
end if;

delete	from fluxo_Caixa
where 	dt_referencia		>= dt_inicio_w
and 	ie_classif_fluxo 	in ('R', 'V')
and 	ie_origem 		<> 'D'
and (cd_empresa		= cd_empresa_p or cd_estabelecimento = cd_estabelecimento_p);

commit;

select	coalesce(max('S'),'N')
into STRICT	ie_filtro_fluxo_w
from	w_filtro_fluxo
where	nm_usuario	= nm_usuario_p
and	coalesce(nr_seq_proj_rec::text, '') = '';

select	coalesce(max('S'),'N')
into STRICT	ie_filtro_fluxo_proj_w
from	w_filtro_fluxo
where	nm_usuario	= nm_usuario_p
and	(nr_seq_proj_rec IS NOT NULL AND nr_seq_proj_rec::text <> '');


/*Inicio 1895850*/

begin
ds_log_w := substr('Parametros Fluxo Caixa a Realizar(gerar_fluxo_caixa_real):'|| chr(13) ||
				   'cd_conta_financ_cpa_w: '|| cd_conta_financ_cpa_w ||chr(13)||
				   'cd_conta_financ_cre_w: '||cd_conta_financ_cre_w||chr(13)||
				   'ie_somente_futuro_w: '||IE_SOMENTE_FUTURO_w||chr(13)||
				   'ie_tratar_fim_semana_w: '||IE_TRATAR_FIM_SEMANA_w||chr(13)||
				   'ie_acumular_vencidos_w: '||IE_ACUMULAR_VENCIDOS_w||chr(13)||
				   'ie_protocolo_conv_w: '||ie_protocolo_conv_w||chr(13)||
                   'ie_convenio_receb_w: '||ie_convenio_receb_w||chr(13)||
				   'ie_cheque_avista_real_w: '||ie_cheque_avista_real_w||chr(13)||
				   'ie_tit_rec_fluxo_w: '||IE_TIT_REC_FLUXO_w||chr(13)||
				   'ie_tit_pag_fluxo_w: '||ie_tit_pag_fluxo_w||chr(13)||
			       'ie_oc_parcial_w: '||ie_oc_parcial_w||chr(13)||
				   'ie_cheque_pago_pend_w: '||ie_cheque_pago_pend_w||chr(13)||
				   'ie_cartao_cr_real_w: '||IE_CARTAO_CR_REAL_W||chr(13)||
				   'ie_deposito_fluxo_real_w: '||IE_DEPOSITO_FLUXO_REAL_w||chr(13)||
				   'ie_forma_calculo_contrato_w: '||ie_forma_calculo_contrato_w||chr(13)||
				   'ie_oc_aprovada_w: '||IE_OC_APROVADA_w||chr(13)||
				   'cd_moeda_empresa_w: '||cd_moeda_empresa_w||chr(13)||
				   'ie_conta_fin_tf_receb_w: '||ie_conta_fin_tf_receb_w||chr(13)||
				   'dt_inicio_w: '||dt_inicio_w||chr(13)||
				   'ie_filtro_fluxo_w: '||ie_filtro_fluxo_w||chr(13)||
				   'ie_filtro_fluxo_proj_w: '||ie_filtro_fluxo_proj_w||chr(13)||
				   'cd_estabelecimento_p: '||cd_estabelecimento_p||chr(13)||
				   'vl_saldo_anterior_p: '||vl_saldo_anterior_p||chr(13)||
				   'Dt_inicio_p: '||Dt_inicio_p||chr(13)||
				   'dt_final_p: '||dt_final_p||chr(13)||
				   'nm_usuario_p: '||nm_usuario_p||chr(13)||
				   'cd_empresa_p: '||cd_empresa_p||chr(13)||
				   'ie_restringe_estab_p: '||ie_restringe_estab_p||chr(13)||
				   'ie_periodo_p: '||ie_periodo_p||chr(13)||
				   'ie_todas_contas_p: '||ie_todas_contas_p||chr(13)||
				   'ie_passado_real_p: '||ie_passado_real_p||chr(13)||
				   'ie_tit_rec_p: '||ie_tit_rec_p||chr(13)||
				   'ie_tit_pagar_p: '||ie_tit_pagar_p||chr(13)||
				   'ie_cheque_p: '||ie_cheque_p||chr(13)||
				   'ie_cartao_p: '||ie_cartao_p||chr(13)||
				   'ie_conv_receb_p: '||ie_conv_receb_p||chr(13)||
				   'ie_protocolo_p: '||ie_protocolo_p||chr(13)||
				   'ie_ordem_compra_p: '||ie_ordem_compra_p||chr(13)||
				   'ie_conttrato_p: '||ie_conttrato_p||chr(13)||
				   'ie_fluxo_especial_p: '||ie_fluxo_especial_p||chr(13)||
				   'ie_agenda_p: '||ie_agenda_p||chr(13)||
				   'ie_regra_atraso_p: '||ie_regra_atraso_p||chr(13)||
				   'ie_operacao_p: '||ie_operacao_p||chr(13)||
				   'ie_bordero_pagar_p: '||ie_bordero_pagar_p||chr(13)||
				   'ie_pagto_escrit_p: '||ie_pagto_escrit_p||chr(13)||
				   'ie_somente_ativa_p: '||ie_somente_ativa_p||chr(13)||
				   'ie_tipo_fluxo_p: '||ie_tipo_fluxo_p||chr(13)||
				   'nr_seq_regra_p: '||nr_seq_regra_p,1,4000);

/*forCar sair do loop em casa de algum problema*/
			
qt_loop_w := 1;	
while((ds_log_w IS NOT NULL AND ds_log_w::text <> '') and qt_loop_w < 3) loop
	insert into log_tasy( cd_log,
						   ds_log,
						   nm_usuario,
						   dt_atualizacao)
				values ( 96587,
						   substr(ds_log_w,1,2000),
						   nm_usuario_p,
						   clock_timestamp());

	ds_log_w := substr(ds_log_w,2001,length(ds_log_w));
	qt_loop_w := qt_loop_w + 1;						
end loop;	
exception when others then
	null;
end;
/*Fim 1895850*/

OPEN C010;
LOOP
FETCH C010 into
	ie_integracao_w,
	dt_referencia_w,
	cd_conta_Financ_w,
	vl_fluxo_w,
	vl_fluxo_estrang_w,
	vl_juros_multa_w,									
	cd_convenio_w,
	cd_moeda_atual_w,
	cd_moeda_padrao_w,
	cd_centro_custo_w,
	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	nr_seq_classe_tit_pag_w,
	ie_tipo_titulo_cp_w,
	ie_tipo_titulo_cr_w;
EXIT WHEN NOT FOUND; /* apply on c010 */

  		if (dt_referencia_w > dt_final_p) then
			dt_referencia_w   := dt_final_p;
		end if;

		if (IE_TRATAR_FIM_SEMANA_w = 'S') then
			dt_referencia_w	:= obter_proximo_dia_util(cd_estabelecimento_p, dt_referencia_w);
		end if;

		if (dt_referencia_w < Trunc(dt_inicio_w,'dd')) then
			if (IE_ACUMULAR_VENCIDOS_w = 'S') then
				dt_referencia_w	:= Trunc(dt_inicio_w,'dd');
			else
				goto proximo;
			end if;
		end if;

		if (cd_moeda_atual_w <> 0) and (cd_moeda_padrao_w <> cd_moeda_atual_w) then
			select	Obter_Valor_Moeda_strang(cd_estabelecimento_p,
						vl_fluxo_estrang_w,
						cd_moeda_atual_w,
						dt_referencia_w)
			into STRICT	vl_fluxo_w
			;
			if (vl_juros_multa_w > 0) then
				vl_fluxo_w := vl_fluxo_w + vl_juros_multa_w;
			end if;										
		end if;


		if (cd_conta_financ_w = 0) then
			ie_entrada_saida_w		:= 'E';
			if (ie_integracao_w = 'CP') then
				ie_entrada_saida_w	:= 'S';
			end if;
			cd_conta_financ_w := obter_conta_financeira('E', cd_estabelecimento_p, 0, 0, 0, 0, cd_convenio_w, null, cd_centro_custo_w, cd_conta_financ_w, null, null, null, null, null, null, null, null, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, nr_seq_classe_tit_pag_w, null, null, null, null, ie_tipo_titulo_cp_w, ie_tipo_titulo_cr_w, cd_moeda_atual_w);
		end if;


		if (cd_conta_financ_w = 0) then
			cd_conta_financ_w	:= cd_conta_financ_cre_w;
		end if;

		select	obter_operacao_conta_financ(cd_conta_financ_w)
		into STRICT	ie_operacao_w
		;

		select	CASE WHEN ie_somente_ativa_p='S' THEN ie_situacao  ELSE 'A' END
		into STRICT	ie_conta_financ_ativa_w
		from	conta_financeira
		where	cd_conta_financ = cd_conta_financ_w;
		
		if (ie_conta_financ_ativa_w = 'A') then
			if	(
					(ie_operacao_p = 'S' AND ie_operacao_w <> 'D')
				or
					(ie_operacao_p = 'D' AND ie_operacao_w <> 'S')
				or (ie_operacao_p = 'A')
				) then

				begin
				
				insert into fluxo_caixa(cd_estabelecimento,
					dt_referencia,
					cd_conta_financ,
					ie_classif_fluxo,
					dt_atualizacao,
					nm_usuario,
					vl_fluxo,
					ie_origem,
					ie_periodo,
					ie_integracao,
					cd_empresa,
					cd_moeda)
				values (cd_estabelecimento_p,
					dt_referencia_w,
					cd_conta_financ_w,
					ie_classif_fluxo_w,
					dt_atualizacao_w,
					nm_usuario_p,
					coalesce(vl_fluxo_w,0),
					ie_origem_w,
					ie_periodo_w,
					ie_integracao_w,
					cd_empresa_p,
					cd_moeda_empresa_w);
				exception
					when unique_violation then
						update	fluxo_caixa
						set	vl_fluxo		= coalesce(vl_fluxo + vl_fluxo_w, 0)
						where	cd_estabelecimento	= cd_estabelecimento_p
						and	cd_conta_financ		= cd_conta_financ_w
						and	dt_referencia		= dt_referencia_w
						and	ie_periodo		= ie_periodo_w
						and	ie_classif_fluxo	= ie_classif_fluxo_w
						and	ie_integracao		= ie_integracao_w
						and	cd_empresa		= cd_empresa_p;
					when others then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(190199,'DS_SQLERRM_W=' || sqlerrm);
				end;

			end if;
		end if;
		<<proximo>>
		null;
END LOOP;
CLOSE C010;

/* Francisco - OS 61295 - Trazer todas contas financeiras */

open c020;
loop
fetch c020 into
	cd_conta_financ_w;
EXIT WHEN NOT FOUND; /* apply on c020 */

	insert into fluxo_caixa(cd_estabelecimento,
				dt_referencia,
				cd_conta_financ,
				ie_classif_fluxo,
				dt_atualizacao,
				nm_usuario,
				vl_fluxo,
				ie_origem,
				ie_periodo,
				ie_integracao,
				cd_empresa,
				cd_moeda)
	values (cd_estabelecimento_p,
				dt_inicio_w,
				cd_conta_financ_w,
				'R',
				clock_timestamp(),
				nm_usuario_p,
				0,
				'I',
				ie_periodo_p,
				'X',
				cd_empresa_p,
				cd_moeda_empresa_w);
end loop;
close c020;

commit;

if (ie_ordem_compra_p = 'S') and (IE_OC_APROVADA_w in ('S','N')) then
	
	qtd_dias_fluxo_oc_w := obter_param_usuario(830, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qtd_dias_fluxo_oc_w);
	
	CALL gerar_fluxo_caixa_oc(	cd_estabelecimento_p,
				coalesce(qtd_dias_fluxo_oc_w,180),
				dt_inicio_p,
				dt_final_p,
				nm_usuario_p,
				cd_empresa_p,
				ie_operacao_p,
				ie_somente_ativa_p);
	commit;
end if;

if (ie_conttrato_p = 'S') then

	if (coalesce(ie_forma_calculo_contrato_w,'R') = 'M') and (coalesce(ie_tipo_fluxo_p,'R') = 'V') then

		CALL gerar_fluxo_previsto_contrato(	cd_estabelecimento_p,
						nm_usuario_p,
						cd_empresa_p,
						ie_restringe_estab_p,
						dt_inicio_p,
						dt_final_p,
						ie_operacao_p,
						ie_somente_ativa_p);

	else

		CALL gerar_fluxo_caixa_contrato(	cd_estabelecimento_p,
						nm_usuario_p,
						cd_empresa_p,
						ie_restringe_estab_p,
						dt_inicio_p,
						dt_final_p,
						ie_operacao_p,
						ie_somente_ativa_p);

	end if;

	commit;
end if;

if (ie_fluxo_especial_p = 'S') then
	CALL gerar_fluxo_caixa_esp(	cd_estabelecimento_p,
				dt_inicio_w,
				dt_final_p,
				nm_usuario_p,
				cd_empresa_p,
				ie_restringe_estab_p,
				ie_operacao_p,
				ie_somente_ativa_p,
				'R');
	commit;
end if;

if (ie_agenda_p = 'S') then
	CALL gerar_fluxo_caixa_agenda(cd_empresa_p,
				cd_estabelecimento_p,
				ie_periodo_p,
				Dt_inicio_p,
				dt_final_p,
				nm_usuario_p,
				ie_operacao_p,
				ie_somente_ativa_p);
	commit;
end if;

/* Acumular os Valores diarios para o Mes */

delete 	from fluxo_Caixa
where 	dt_referencia between trunc(dt_inicio_w, 'month') and fim_dia(last_day(trunc(dt_final_p,'month')))
and 	ie_classif_fluxo	= 'R'
and (cd_empresa		= cd_empresa_p or cd_estabelecimento = cd_estabelecimento_p)
and	ie_periodo 		= 'M';

insert into fluxo_caixa(cd_estabelecimento,
			dt_referencia,
			cd_conta_financ,
			ie_classif_fluxo,
			dt_atualizacao,
			nm_usuario,
			vl_fluxo,
			ie_origem,
			ie_periodo,
			ie_integracao,
			cd_empresa,
			cd_moeda)
SELECT			cd_estabelecimento,
			last_day(trunc(dt_referencia,'month')),
			cd_conta_financ,
			'R',
			dt_atualizacao_w,
			nm_usuario_p,
			sum(vl_fluxo),
			'X',
			'M',
--			'S',		Edgar 30/10/2006, OS 43004, criar drilldown mensal
			ie_integracao,
			cd_empresa,
			coalesce(cd_moeda,cd_moeda_empresa_w)
from			Fluxo_Caixa
where 			dt_referencia between trunc(dt_inicio_w, 'dd') and last_day(dt_final_p)
and 			ie_classif_fluxo	= 'R'
and			cd_estabelecimento	= cd_estabelecimento_p
and			cd_empresa		= cd_empresa_p
group by 		cd_estabelecimento,
			last_day(trunc(dt_referencia,'month')),
			cd_conta_financ,
			ie_classif_fluxo,
			ie_periodo,
			cd_empresa,
			ie_integracao,
			coalesce(cd_moeda,cd_moeda_empresa_w);

commit;

/* Calcular Saldos */

CALL calcular_fluxo_caixa(	cd_estabelecimento_p,
			vl_saldo_anterior_p,
			dt_inicio_w,
			dt_final_p,
			ie_periodo_p,
			'R',
			nm_usuario_p,
			cd_empresa_p,
			ie_restringe_estab_p,
			ie_passado_real_p,
			ie_somente_ativa_p,
			nr_seq_regra_p);

commit;

CALL gerar_fluxo_caixa_agrup(cd_estabelecimento_p,
			dt_inicio_w,
			dt_final_p,
			ie_periodo_p,
			'R',
			nm_usuario_p,
			cd_empresa_p,
			ie_operacao_p,
			ie_restringe_estab_p,
			ie_somente_ativa_p);

commit;

CALL gerar_fluxo_caixa_externo(	dt_inicio_w,
				dt_final_p,
				cd_estabelecimento_p,
				cd_empresa_p,
				ie_periodo_p,
				'R',
				ie_restringe_estab_p,
				nm_usuario_p,
				ie_somente_ativa_p);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fluxo_caixa_real ( cd_estabelecimento_p bigint, vl_saldo_anterior_p bigint, Dt_inicio_p timestamp, dt_final_p timestamp, nm_usuario_p text, cd_empresa_p bigint, ie_restringe_estab_p text, ie_periodo_p text, ie_todas_contas_p text, ie_passado_real_p text, ie_tit_rec_p text, ie_tit_pagar_p text, ie_cheque_p text, ie_cartao_p text, ie_conv_receb_p text, ie_protocolo_p text, ie_ordem_compra_p text, ie_conttrato_p text, ie_fluxo_especial_p text, ie_agenda_p text, ie_regra_atraso_p text, ie_operacao_p text, ie_bordero_pagar_p text, ie_pagto_escrit_p text, ie_somente_ativa_p text, ie_tipo_fluxo_p text default 'R', nr_seq_regra_p bigint default null) FROM PUBLIC;

