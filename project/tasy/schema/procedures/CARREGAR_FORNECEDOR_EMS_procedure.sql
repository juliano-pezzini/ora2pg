-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE carregar_fornecedor_ems ( nm_usuario_p text, ds_razao_social_p text, cd_cgc_p text, nr_inscricao_estadual_p text, nr_inscricao_municipal_p text, ie_isencao_tributaria_p text, ds_endereco_p text, ds_complemento_p text, ds_bairro_p text, ds_municipio_p text, nr_seq_pais_p text, sg_estado_p text, cd_cep_p text, nr_telefone_p text, nr_fax_p text, ds_email_p text, ds_endereco_cobr_p text, ds_complemento_cobr_p text, ds_bairro_cobr_p text, ds_municipio_cobr_p text, sg_estado_cobr_p text, nr_seq_pais_cobr_p text, cd_cep_cobr_p text, ds_endereco_pagto_p text, ds_complemento_pagto_p text, ds_bairro_pagto_p text, ds_municipio_pagto_p text, sg_estado_pagto_p text, nr_seq_pais_pagto_p text, cd_cep_pagto_p text) AS $body$
DECLARE


cd_cgc_w		varchar(14) := '';
qt_endereco_cobr_w	bigint;
qt_endereco_pagto_w	bigint;
			

BEGIN

if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then

	select	max(cd_cgc)
	into STRICT	cd_cgc_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_p;
	
	if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
		begin
		
		update	pessoa_juridica
		set	ds_razao_social = coalesce(substr(ds_razao_social_p, 1, 255), ' '),
			nr_inscricao_estadual = substr(nr_inscricao_estadual_p, 1, 20),
			nr_inscricao_municipal = substr(nr_inscricao_municipal_p, 1, 20),
			ds_endereco = coalesce(substr(ds_endereco_p, 1, 40), ' '),
			ds_complemento = substr(ds_complemento_p, 1, 255),
			ds_bairro = substr(ds_bairro_p, 1, 40),		
			ds_municipio = coalesce(substr(ds_municipio_p, 1, 40), ' '),			
			nr_seq_pais  = NULL,
			sg_estado = coalesce(substr(sg_estado_p, 1 , 2), ' '),		
			cd_cep = coalesce(substr(cd_cep_p, 1, 15), ' '),
			nr_telefone = substr(nr_telefone_p, 1, 15),		
			nr_fax = substr(nr_fax_p, 1, 15),		
			ds_email = substr(ds_email_p, 1, 60),
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p
		where	cd_cgc = cd_cgc_w;
		
		/* COBRANCA */
	
		if (ds_endereco_cobr_p IS NOT NULL AND ds_endereco_cobr_p::text <> '') then
			begin
				
			select	count(*)
			into STRICT	qt_endereco_cobr_w
			from	pessoa_juridica_compl
			where	ie_tipo_complemento = 5
			and	cd_cgc = cd_cgc_w;	
			
			if (qt_endereco_cobr_w > 0) then
				begin
				
				update	pessoa_juridica_compl
				set	nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp(),
					ds_endereco = substr(ds_endereco_cobr_p, 1, 60),
					ds_complemento = substr(ds_complemento_cobr_p, 1, 100), 
					ds_bairro = substr(ds_bairro_cobr_p, 1, 40),      
					ds_municipio = substr(ds_municipio_cobr_p, 1, 40),   
					sg_estado = substr(sg_estado_cobr_p, 1, 2),      
					cd_cep = substr(cd_cep_cobr_p, 1, 15)					
				where	ie_tipo_complemento = 5
				and	cd_cgc = cd_cgc_w;	
				
				end;
			else
				begin
				
				insert into pessoa_juridica_compl(	
					cd_cgc,
					nr_sequencia,   
					dt_atualizacao, 
					nm_usuario,     
					ds_endereco,    
					nr_endereco,    
					ds_complemento, 
					ds_bairro,      
					ds_municipio,   
					sg_estado,      
					cd_cep,         
					nr_telefone,    
					nr_fax,                         
					ds_email,                       
					nr_ramal_contato,               
					nm_pessoa_contato,              
					ie_tipo_complemento,            
					nr_telefone_celular,            
					cd_cbo_red,                     
					ds_cargo,                       
					cd_municipio_ibge,              
					dt_atualizacao_nrec,            
					nm_usuario_nrec,                
					ie_recebe_prop,                 
					nr_ddd_telefone,                
					ds_setor_contato,               
					ds_identific_complemento,
					nr_seq_regiao,                  
					nr_seq_ident_cnes)
				values(	substr(cd_cgc_w, 1, 14),                         
					(SELECT max(nr_sequencia) + 1 from pessoa_juridica_compl),                   
					clock_timestamp(),                 
					nm_usuario_p,                     
					substr(ds_endereco_cobr_p, 1, 60),                    
					null,                    
					substr(ds_complemento_cobr_p, 1, 100),                
					substr(ds_bairro_cobr_p, 1, 40),                       
					substr(ds_municipio_cobr_p, 1, 40),                    
					substr(sg_estado_cobr_p, 1, 2),                       
					substr(cd_cep_cobr_p, 1, 15),                         
					null,
					null,
					null,
					null,
					null,
					5,   
					null,
					null,
					null,
					null,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					null,
					null,
					null);				
				
				end;
			end if;
				
				
			end;
		end if;
		
		/* PAGAMENTO */

		if (ds_endereco_pagto_p IS NOT NULL AND ds_endereco_pagto_p::text <> '') then
			begin
			
			select	count(*)
			into STRICT	qt_endereco_pagto_w
			from	pessoa_juridica_compl
			where	ie_tipo_complemento = 2
			and	cd_cgc = cd_cgc_w;	
			
			if (qt_endereco_cobr_w > 0) then
				begin
				
				update	pessoa_juridica_compl
				set	nm_usuario = nm_usuario_p,
					dt_atualizacao = clock_timestamp(),
					ds_endereco = substr(ds_endereco_pagto_p, 1, 60),
					ds_complemento = substr(ds_complemento_pagto_p, 1, 100), 
					ds_bairro = substr(ds_bairro_pagto_p, 1, 40),      
					ds_municipio = substr(ds_municipio_pagto_p, 1, 40),   
					sg_estado = substr(sg_estado_pagto_p, 1, 2),      
					cd_cep = substr(cd_cep_pagto_p, 1, 15)					
				where	ie_tipo_complemento = 2
				and	cd_cgc = cd_cgc_w;				
				
				end;
			else
				begin
				
				insert into pessoa_juridica_compl(	
					cd_cgc,
					nr_sequencia,                   
					dt_atualizacao,                 
					nm_usuario,                     
					ds_endereco,                    
					nr_endereco,                    
					ds_complemento,                 
					ds_bairro,                      
					ds_municipio,                   
					sg_estado,                      
					cd_cep,                         
					nr_telefone,                   
					nr_fax,                         
					ds_email,                       
					nr_ramal_contato,               
					nm_pessoa_contato,              
					ie_tipo_complemento,            
					nr_telefone_celular,            
					cd_cbo_red,                     
					ds_cargo,                       
					cd_municipio_ibge,              
					dt_atualizacao_nrec,            
					nm_usuario_nrec,                
					ie_recebe_prop,                 
					nr_ddd_telefone,                
					ds_setor_contato,               
					ds_identific_complemento,
					nr_seq_regiao,                  
					nr_seq_ident_cnes)
				values(	substr(cd_cgc_w, 1, 14),                         
					(SELECT max(nr_sequencia) + 1 from pessoa_juridica_compl),                   
					clock_timestamp(),                 
					nm_usuario_p,                     
					substr(ds_endereco_pagto_p, 1, 60),                    
					null,                    
					substr(ds_complemento_pagto_p, 1, 100),                
					substr(ds_bairro_pagto_p, 1, 40),                       
					substr(ds_municipio_pagto_p, 1, 40),                    
					substr(sg_estado_pagto_p, 1, 2),                       
					substr(cd_cep_pagto_p, 1, 15),                         
					null,                   
					null,                         
					null,                       
					null,               
					null,              
					2,            
					null,            
					null,                     
					null,                       
					null,              
					clock_timestamp(),            
					nm_usuario_p,                
					null,                 
					null,                
					null,               
					null,
					null,                  
					null);				
				
				end;
			end if;
			
			end;
		end if;			
							
		end;
	else	
		begin
		
		/* PESSOA JURIDICA */
	
		insert into pessoa_juridica(	
			cd_cgc,
			ds_razao_social,
			nm_fantasia,
			nr_inscricao_estadual,
			nr_inscricao_municipal,			
			ds_endereco,
			ds_complemento,
			ds_bairro,
			ds_municipio,
			nr_seq_pais,
			sg_estado,
			cd_cep,
			nr_telefone,
			nr_fax,
			ds_email,	
			dt_atualizacao,
			nm_usuario,
			ie_situacao,
			cd_tipo_pessoa,
			ie_prod_fabric)
		values (	coalesce(substr(cd_cgc_p, 1, 14), ' '),
			coalesce(substr(ds_razao_social_p, 1, 255), ' '),
			coalesce(substr(ds_razao_social_p, 1, 255), ' '),
			substr(nr_inscricao_estadual_p, 1, 20),
			substr(nr_inscricao_municipal_p, 1, 20),
			coalesce(substr(ds_endereco_p, 1, 40), ' '),
			substr(ds_complemento_p, 1, 255),
			substr(ds_bairro_p, 1, 40),		
			coalesce(substr(ds_municipio_p, 1, 40), ' '),			
			null,
			coalesce(substr(sg_estado_p, 1 , 2), ' '),		
			coalesce(substr(cd_cep_p, 1, 15), ' '),
			substr(nr_telefone_p, 1, 15),		
			substr(nr_fax_p, 1, 15),		
			substr(ds_email_p, 1, 60),
			clock_timestamp(),
			nm_usuario_p,
			'A',
			1,  -- Aplicacao Principal\Cadastros Pessoas\Tipo de pessoa juridica 
			'N');
			
		/* COBRANCA */
	
		if (ds_endereco_cobr_p IS NOT NULL AND ds_endereco_cobr_p::text <> '') then
			begin
			
			insert into pessoa_juridica_compl(	
				cd_cgc,
				nr_sequencia,   
				dt_atualizacao, 
				nm_usuario,     
				ds_endereco,    
				nr_endereco,    
				ds_complemento, 
				ds_bairro,      
				ds_municipio,   
				sg_estado,      
				cd_cep,         
				nr_telefone,    
				nr_fax,                         
				ds_email,                       
				nr_ramal_contato,               
				nm_pessoa_contato,              
				ie_tipo_complemento,            
				nr_telefone_celular,            
				cd_cbo_red,                     
				ds_cargo,                       
				cd_municipio_ibge,              
				dt_atualizacao_nrec,            
				nm_usuario_nrec,                
				ie_recebe_prop,                 
				nr_ddd_telefone,                
				ds_setor_contato,               
				ds_identific_complemento,
				nr_seq_regiao,                  
				nr_seq_ident_cnes)
			values(	substr(cd_cgc_p, 1, 14),                         
				(SELECT max(nr_sequencia) + 1 from pessoa_juridica_compl),                   
				clock_timestamp(),                 
				nm_usuario_p,                     
				substr(ds_endereco_cobr_p, 1, 60),                    
				null,                    
				substr(ds_complemento_cobr_p, 1, 100),                
				substr(ds_bairro_cobr_p, 1, 40),                       
				substr(ds_municipio_cobr_p, 1, 40),                    
				substr(sg_estado_cobr_p, 1, 2),                       
				substr(cd_cep_cobr_p, 1, 15),                         
				null,
				null,
				null,
				null,
				null,
				5,   
				null,
				null,
				null,
				null,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				null,
				null,
				null,
				null);
				
			end;
		end if;
		
		/* PAGAMENTO */

		if (ds_endereco_pagto_p IS NOT NULL AND ds_endereco_pagto_p::text <> '') then
			begin
			
			insert into pessoa_juridica_compl(	
				cd_cgc,
				nr_sequencia,                   
				dt_atualizacao,                 
				nm_usuario,                     
				ds_endereco,                    
				nr_endereco,                    
				ds_complemento,                 
				ds_bairro,                      
				ds_municipio,                   
				sg_estado,                      
				cd_cep,                         
				nr_telefone,                   
				nr_fax,                         
				ds_email,                       
				nr_ramal_contato,               
				nm_pessoa_contato,              
				ie_tipo_complemento,            
				nr_telefone_celular,            
				cd_cbo_red,                     
				ds_cargo,                       
				cd_municipio_ibge,              
				dt_atualizacao_nrec,            
				nm_usuario_nrec,                
				ie_recebe_prop,                 
				nr_ddd_telefone,                
				ds_setor_contato,               
				ds_identific_complemento,
				nr_seq_regiao,                  
				nr_seq_ident_cnes)
			values(	substr(cd_cgc_p, 1, 14),                         
				(SELECT max(nr_sequencia) + 1 from pessoa_juridica_compl),                   
				clock_timestamp(),                 
				nm_usuario_p,                     
				substr(ds_endereco_pagto_p, 1, 60),                    
				null,                    
				substr(ds_complemento_pagto_p, 1, 100),                
				substr(ds_bairro_pagto_p, 1, 40),                       
				substr(ds_municipio_pagto_p, 1, 40),                    
				substr(sg_estado_pagto_p, 1, 2),                       
				substr(cd_cep_pagto_p, 1, 15),                         
				null,                   
				null,                         
				null,                       
				null,               
				null,              
				2,            
				null,            
				null,                     
				null,                       
				null,              
				clock_timestamp(),            
				nm_usuario_p,                
				null,                 
				null,                
				null,               
				null,
				null,                  
				null);
				
			end;
		end if;		
			
		end;
	end if;

commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE carregar_fornecedor_ems ( nm_usuario_p text, ds_razao_social_p text, cd_cgc_p text, nr_inscricao_estadual_p text, nr_inscricao_municipal_p text, ie_isencao_tributaria_p text, ds_endereco_p text, ds_complemento_p text, ds_bairro_p text, ds_municipio_p text, nr_seq_pais_p text, sg_estado_p text, cd_cep_p text, nr_telefone_p text, nr_fax_p text, ds_email_p text, ds_endereco_cobr_p text, ds_complemento_cobr_p text, ds_bairro_cobr_p text, ds_municipio_cobr_p text, sg_estado_cobr_p text, nr_seq_pais_cobr_p text, cd_cep_cobr_p text, ds_endereco_pagto_p text, ds_complemento_pagto_p text, ds_bairro_pagto_p text, ds_municipio_pagto_p text, sg_estado_pagto_p text, nr_seq_pais_pagto_p text, cd_cep_pagto_p text) FROM PUBLIC;

