-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_solic_compra_lista ( nr_seq_lista_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_pessoa_fisica_w		varchar(10);
cd_perfil_w			bigint;
nr_solic_compra_w			bigint;
cd_estabelecimento_w		integer;

cd_material_w			integer;
qt_material_w			double precision;
nr_item_solic_compra_w		bigint;
cd_unidade_medida_compra_w	varchar(30);
qt_conv_compra_estoque_w		double precision;
qt_saldo_disp_estoque_w		double precision;
vl_custo_total_w			double precision;
vl_estoque_total_w		double precision;
qt_consumo_mensal_w		double precision;
vl_ultima_compra_w		double precision;
vl_unit_previsto_w			double precision;

c00 CURSOR FOR 
SELECT	distinct 
	cd_estabelecimento 
from	segmento_compras_rel_it 
where	nr_seq_seg_rel = nr_seq_lista_p;

c01 CURSOR FOR 
SELECT	cd_material, 
	coalesce(qt_prevista_entrega_oc,1) 
from	segmento_compras_rel_it 
where	nr_seq_seg_rel = nr_seq_lista_p 
and	cd_estabelecimento = cd_estabelecimento_w;


BEGIN 
 
select	cd_pessoa_fisica, 
	obter_perfil_ativo 
into STRICT	cd_pessoa_fisica_w, 
	cd_perfil_w 
from	usuario 
where	nm_usuario = nm_usuario_p;
 
open c00;
loop 
fetch c00 into 
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin 
 
	select	nextval('solic_compra_seq') 
	into STRICT	nr_solic_compra_w 
	;
 
	insert into solic_compra( 
		nr_solic_compra, 
		cd_estabelecimento, 
		dt_solicitacao_compra, 
		dt_atualizacao, 
		nm_usuario, 
		ie_situacao, 
		cd_pessoa_solicitante, 
		cd_local_estoque, 
		cd_centro_custo, 
		cd_setor_atendimento, 
		ds_observacao, 
		ie_aviso_chegada, 
		ie_aviso_aprov_oc, 
		ie_urgente, 
		ie_tipo_solicitacao, 
		ie_comodato, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		cd_perfil) values ( 
			nr_solic_compra_w, 
			cd_estabelecimento_w, 
			clock_timestamp(), 
			clock_timestamp(), 
			nm_usuario_p, 
			'A', 
			cd_pessoa_fisica_w, 
			cd_local_estoque_p, 
			cd_centro_custo_p, 
			cd_setor_atendimento_p, 
			Wheb_mensagem_pck.get_Texto(302211), /*'Gerado através da lista crítica',*/
 
			'N', 
			'N', 
			'N', 
			'0', 
			'N', 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_perfil_w);
 
	open c01;
	loop 
	fetch c01 into 
		cd_material_w, 
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
 
		select	coalesce(max(nr_item_solic_compra),0) + 1 
		into STRICT	nr_item_solic_compra_w 
		from	solic_compra_item 
		where	nr_solic_compra = nr_solic_compra_w;
 
		select	coalesce(b.cd_unidade_medida_compra,a.cd_unidade_medida_compra), 
			coalesce(b.qt_conv_compra_estoque,a.qt_conv_compra_estoque) 
		into STRICT	cd_unidade_medida_compra_w, 
			qt_conv_compra_estoque_w 
		from	material a, 
			material_estab b 
		where	a.cd_material = b.cd_material 
		and	a.cd_material = cd_material_w 
		and	b.cd_estabelecimento = cd_estabelecimento_w;
 
		if (coalesce(qt_conv_compra_estoque_w,0) = 0) then 
			qt_conv_compra_estoque_w	:= 1;
		end if;
 
		select	obter_saldo_estoque_nuvem(cd_estabelecimento_w, cd_material_w, cd_local_estoque_p, trunc(clock_timestamp(),'MM')) 
		into STRICT	qt_saldo_disp_estoque_w 
		;
 
		select (obter_cm_mat_convertido(cd_estabelecimento_w,cd_material_w, cd_unidade_medida_compra_w, clock_timestamp()) * qt_material_w), 
			(obter_custo_medio_material(cd_estabelecimento_w,clock_timestamp(),cd_material_w) * 
			(obter_quantidade_convertida(cd_material_w, qt_material_w, cd_unidade_medida_compra_w, cd_unidade_medida_compra_w) + 
			coalesce(qt_saldo_disp_estoque_w,0))), 
			coalesce(obter_consumo_mensal_material('Q',cd_estabelecimento_w, cd_material_w, clock_timestamp()),0) 
		into STRICT	vl_custo_total_w, 
			vl_estoque_total_w, 
			qt_consumo_mensal_w 
		;
 
		select	(coalesce(obter_dados_ultima_compra(cd_estabelecimento_w,cd_material_w,'VU'),'0'))::numeric  
		into STRICT	vl_ultima_compra_w 
		;
 
		if (vl_ultima_compra_w > 0) then 
			begin 
 
			select	trunc((vl_ultima_compra_w / qt_conv_compra_estoque_w),4) 
			into STRICT	vl_unit_previsto_w 
			;
 
			end;
		else 
			vl_unit_previsto_w	:= null;
		end if;
	 
		insert into solic_compra_item( 
			nr_solic_compra, 
			nr_item_solic_compra, 
			cd_material, 
			cd_unidade_medida_compra, 
			qt_material, 
			dt_atualizacao, 
			nm_usuario, 
			ie_situacao, 
			dt_solic_item, 
			vl_unit_previsto, 
			ie_geracao, 
			ie_bula, 
			ie_amostra, 
			ie_catalogo, 
			qt_conv_compra_est_orig, 
			qt_saldo_disp_estoque, 
			qt_consumo_mensal, 
			vl_custo_total, 
			vl_estoque_total) values ( 
				nr_solic_compra_w, 
				nr_item_solic_compra_w, 
				cd_material_w, 
				cd_unidade_medida_compra_w, 
				qt_material_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				'A', 
				clock_timestamp(), 
				vl_unit_previsto_w, 
				'S', 
				'N', 
				'N', 
				'N', 
				qt_conv_compra_estoque_w, 
				qt_saldo_disp_estoque_w, 
				qt_consumo_mensal_w, 
				vl_custo_total_w, 
				vl_estoque_total_w);
 
		insert into solic_compra_item_entrega( 
			nr_solic_compra, 
			nr_item_solic_compra, 
			nr_item_solic_compra_entr, 
			qt_entrega_solicitada, 
			dt_entrega_solicitada, 
			dt_atualizacao, 
			nm_usuario) values ( 
				nr_solic_compra_w, 
				nr_item_solic_compra_w, 
				1, 
				qt_material_w, 
				clock_timestamp(), 
				clock_timestamp(), 
				nm_usuario_p);			
 
		end;
	end loop;
	close c01;
 
	end;
end loop;
close c00;
 
commit;		
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_solic_compra_lista ( nr_seq_lista_p bigint, cd_local_estoque_p bigint, cd_centro_custo_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

