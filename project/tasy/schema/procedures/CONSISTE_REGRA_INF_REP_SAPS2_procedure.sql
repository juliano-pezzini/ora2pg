-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_regra_inf_rep_saps2 ( nr_atendimento_p bigint, cd_pessoa_fisica_p bigint, nr_seq_regra_p bigint, ie_inconsistente_p INOUT boolean, ie_informacao_w_p INOUT text, ie_escala_indice_p INOUT text, ie_informacao_p text, quebra_p text, ds_mensag_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE

qt_registros_w bigint;
qt_mov_uti_w bigint;
cd_classif_setor_old_w bigint;
cd_setor_atendimento_w bigint;
cd_classif_setor_w bigint;
dt_criacao_regra_w timestamp;

c01 CURSOR FOR
	SELECT 		a.cd_setor_atendimento,
				b.cd_classif_setor
	from		atend_paciente_unidade a,
				setor_atendimento b
	where 		a.nr_atendimento = nr_atendimento_p
	and			a.cd_setor_atendimento = b.cd_setor_atendimento
	and 		ie_passagem_setor = 'N'
	and			a.dt_entrada_unidade >= dt_criacao_regra_w
	order by 	a.nr_sequencia;


BEGIN
	select	count(*)
	into STRICT	qt_registros_w  -- QUANTIDADE DE REGISTRO SAPS
	from	atendimento_paciente b,
			pe_prescricao a
	where 	a.nr_atendimento = b.nr_atendimento
	and 	b.nr_atendimento = coalesce(nr_atendimento_p,b.nr_atendimento)
	and		b.cd_pessoa_fisica = cd_pessoa_fisica_p
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and		coalesce(dt_inativacao::text, '') = ''
	and		a.ie_tipo = 'SAPS2';

	select	max(dt_atualizacao_nrec)
	into STRICT	dt_criacao_regra_w
	from	regra_consiste_inf_rep
	where 	nr_sequencia = nr_seq_regra_p;

	qt_mov_uti_w := 0;
	cd_classif_setor_old_w := -1;

	open c01;
	loop
		fetch c01 into
			cd_setor_atendimento_w,
			cd_classif_setor_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				if (cd_classif_setor_old_w <> cd_classif_setor_w and cd_classif_setor_w = 4) then
					qt_mov_uti_w := qt_mov_uti_w + 1;
				end if;

				cd_classif_setor_old_w := cd_classif_setor_w;
			end;
	end loop;
	close c01;

	if (qt_registros_w = '0' or qt_mov_uti_w > qt_registros_w) then
		select	count(*)
		into STRICT	qt_registros_w
		from	escala_saps3
		where	nr_atendimento = nr_atendimento_p
		and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and		coalesce(dt_inativacao::text, '') = '';

		if (qt_registros_w	= '0' or qt_mov_uti_w > qt_registros_w) then
				if (ds_mensag_p IS NOT NULL AND ds_mensag_p::text <> '') then
					ds_mensagem_p := ds_mensag_p || quebra_p;
				else
					ds_mensagem_p := ds_mensagem_p || wheb_mensagem_pck.get_texto(306664, null) || quebra_p; -- N√ÉO FOI CADASTRADA A ESCALA SAPS III PARA ESTE ATENDIMENTO.
				end if;
			ie_inconsistente_p := true;
			ie_informacao_w_p := ie_informacao_p;
			ie_escala_indice_p := 'SAPS2';
		end if;
	end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_regra_inf_rep_saps2 ( nr_atendimento_p bigint, cd_pessoa_fisica_p bigint, nr_seq_regra_p bigint, ie_inconsistente_p INOUT boolean, ie_informacao_w_p INOUT text, ie_escala_indice_p INOUT text, ie_informacao_p text, quebra_p text, ds_mensag_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

