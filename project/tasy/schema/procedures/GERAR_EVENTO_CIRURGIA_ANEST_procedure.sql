-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evento_cirurgia_anest ( dt_evento_p timestamp, nr_cirurgia_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_seq_pepo_p bigint) AS $body$
DECLARE


ie_finaliza_agentes_anest_w	varchar(1);
ie_finaliza_terapia_w 		varchar(1);
ie_finaliza_medicamentos_w	varchar(1);
ie_finaliza_proced_adic_w	varchar(1);
nr_sequencia_w			bigint;
nr_sequencia_medic_w		bigint;
nr_sequencia_terap_w		bigint;
dt_final_adm_w			timestamp;
ie_liberar_pepo_w		varchar(1);
ie_calcula_tempos_w		varchar(1);
dt_termino_w			timestamp;
ie_liberar_adm_evento_w	varchar(1);
ie_prescricao_anestesica_w	evento_cirurgia.ie_prescricao_anestesica%type;
nr_cirurgia_w			bigint;
ie_estrutura_pepo_w		varchar(1);	
				

BEGIN

ie_estrutura_pepo_w := obter_param_usuario(872, 158, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_estrutura_pepo_w);

select	coalesce(max(ie_finaliza_terapia),'N'),
	coalesce(max(ie_finaliza_agentes_anest),'N'),
	coalesce(max(ie_finaliza_medicamentos),'N'),
	coalesce(max(ie_libera_pepo),'N'),
	coalesce(max(ie_calcula_tempos),'N'),
	coalesce(max(ie_prescricao_anestesica),'N') ie_prescricao_anestesica,
	coalesce(max(ie_finaliza_procedimento_adic),'N')
into STRICT	ie_finaliza_terapia_w,
	ie_finaliza_agentes_anest_w,
	ie_finaliza_medicamentos_w,
	ie_liberar_pepo_w,
	ie_calcula_tempos_w,
	ie_prescricao_anestesica_w,
	ie_finaliza_proced_adic_w
from	evento_cirurgia
where	nr_sequencia = nr_seq_evento_p;

select	coalesce(max(ie_liberar_adm_evento),'N')
into STRICT	ie_liberar_adm_evento_w
from	parametros_pepo
where	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

if (ie_finaliza_agentes_anest_w = 'S') then
		
	update	cirurgia_agente_anest_ocor
	set		dt_final_adm = dt_evento_p,
			dt_liberacao = CASE WHEN ie_liberar_adm_evento_w='S' THEN clock_timestamp()  ELSE dt_liberacao END
	where	nr_sequencia in (
		SELECT	b.nr_sequencia
		from	cirurgia_agente_anestesico a,
			cirurgia_agente_anest_ocor b	
		where	a.nr_sequencia = b.nr_seq_cirur_agente
		and	((a.nr_cirurgia = nr_cirurgia_p AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') or (a.nr_seq_pepo = nr_seq_pepo_p AND nr_seq_pepo_p IS NOT NULL AND nr_seq_pepo_p::text <> ''))
		and	a.ie_tipo = 1
		and	coalesce(b.dt_final_adm::text, '') = ''
		and	coalesce(a.ie_situacao,'A') = 'A'
		and	coalesce(b.ie_situacao,'A') = 'A')
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(dt_liberacao::text, '') = '';
	commit;
	
	if (ie_liberar_adm_evento_w = 'S') then
		update	cirurgia_agente_anestesico
		set		dt_liberacao = clock_timestamp()
		where	((nr_cirurgia = nr_cirurgia_p AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') or (nr_seq_pepo = nr_seq_pepo_p AND nr_seq_pepo_p IS NOT NULL AND nr_seq_pepo_p::text <> ''))
		and		coalesce(dt_liberacao::text, '') = ''
		and		ie_tipo = 1;
		commit;
	end if;
	
end if;	

if (ie_finaliza_terapia_w = 'S') then
		
	update	cirurgia_agente_anest_ocor
	set		dt_final_adm = dt_evento_p,
			dt_liberacao = CASE WHEN ie_liberar_adm_evento_w='S' THEN clock_timestamp()  ELSE dt_liberacao END
	where	nr_sequencia in (
		SELECT	b.nr_sequencia
		from	cirurgia_agente_anestesico a,
			cirurgia_agente_anest_ocor b	
		where	a.nr_sequencia = b.nr_seq_cirur_agente
		and	((a.nr_cirurgia = nr_cirurgia_p AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') or (a.nr_seq_pepo = nr_seq_pepo_p AND nr_seq_pepo_p IS NOT NULL AND nr_seq_pepo_p::text <> ''))
		and	a.ie_tipo = 2
		and	coalesce(b.dt_final_adm::text, '') = ''
		and	coalesce(a.ie_situacao,'A') = 'A'
		and	coalesce(b.ie_situacao,'A') = 'A')
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(dt_liberacao::text, '') = '';
	commit;
	
	if (ie_liberar_adm_evento_w = 'S') then
		update	cirurgia_agente_anestesico
		set		dt_liberacao = clock_timestamp()
		where	((nr_cirurgia = nr_cirurgia_p AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') or (nr_seq_pepo = nr_seq_pepo_p AND nr_seq_pepo_p IS NOT NULL AND nr_seq_pepo_p::text <> ''))
		and		coalesce(dt_liberacao::text, '') = ''
		and		ie_tipo = 2;
		commit;
	end if;
end if;

if (ie_finaliza_medicamentos_w = 'S') then
	
	update	cirurgia_agente_anest_ocor
	set		dt_final_adm = dt_evento_p,
			dt_liberacao = CASE WHEN ie_liberar_adm_evento_w='S' THEN clock_timestamp()  ELSE dt_liberacao END
	where	nr_sequencia in (
		SELECT	b.nr_sequencia
		from	cirurgia_agente_anestesico a,
			cirurgia_agente_anest_ocor b	
		where	a.nr_sequencia = b.nr_seq_cirur_agente
		and	((a.nr_cirurgia = nr_cirurgia_p AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') or (a.nr_seq_pepo = nr_seq_pepo_p AND nr_seq_pepo_p IS NOT NULL AND nr_seq_pepo_p::text <> ''))
		and	a.ie_tipo = 3
		and	coalesce(b.dt_final_adm::text, '') = ''
		and	coalesce(a.ie_situacao,'A') = 'A'
		and	coalesce(b.ie_situacao,'A') = 'A')
	and	coalesce(ie_situacao,'A') = 'A'
	and	coalesce(dt_liberacao::text, '') = '';
	commit;
	
	if (ie_liberar_adm_evento_w = 'S') then
		update	cirurgia_agente_anestesico
		set		dt_liberacao = clock_timestamp()
		where	((nr_cirurgia = nr_cirurgia_p AND nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') or (nr_seq_pepo = nr_seq_pepo_p AND nr_seq_pepo_p IS NOT NULL AND nr_seq_pepo_p::text <> ''))
		and		coalesce(dt_liberacao::text, '') = ''
		and		ie_tipo = 3;
		commit;
	end if;
end if;

if (coalesce(nr_cirurgia_p,0) > 0) and (ie_liberar_pepo_w = 'S') then
	CALL liberar_pepo(nr_cirurgia_p,'L',nm_usuario_p);
elsif (coalesce(nr_seq_pepo_p,0) > 0) and (ie_liberar_pepo_w = 'S') then
	CALL liberar_pepo(0,'L',nm_usuario_p,nr_seq_pepo_p);
end if;

if (ie_calcula_tempos_w = 'S') then
	CALL gerar_tempo_cirurgico(nr_cirurgia_p,nm_usuario_p,nr_seq_pepo_p);
end if;

if (ie_finaliza_proced_adic_w = 'S') then
	select 	max(dt_termino)
	into STRICT	dt_termino_w
	from	cirurgia 
	where 	nr_cirurgia = nr_cirurgia_p;

	update 	prescr_procedimento 
	set 	dt_fim = dt_termino_w
	where 	nr_prescricao = (SELECT max(nr_prescricao) from cirurgia where nr_cirurgia = nr_cirurgia_p);
	commit;
end if;

if (ie_prescricao_anestesica_w = 'S') then
	if (nr_cirurgia_p IS NOT NULL AND nr_cirurgia_p::text <> '') then
		CALL gerar_prescricao_anestesica(nr_cirurgia_p, nm_usuario_p, 'S');
		
	elsif (coalesce(ie_estrutura_pepo_w, 'N') = 'S') then
		SELECT MAX(nr_cirurgia)
		INTO STRICT nr_cirurgia_w
		FROM cirurgia
		WHERE nr_seq_pepo = nr_seq_pepo_p;
		
		CALL gerar_prescricao_anestesica(nr_cirurgia_w, nm_usuario_p, 'S');
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evento_cirurgia_anest ( dt_evento_p timestamp, nr_cirurgia_p bigint, nr_seq_evento_p bigint, nm_usuario_p text, nr_seq_pepo_p bigint) FROM PUBLIC;

