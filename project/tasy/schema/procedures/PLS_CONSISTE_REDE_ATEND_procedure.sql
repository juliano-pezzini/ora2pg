-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consiste_rede_atend ( nr_seq_conta_p bigint, nr_seq_guia_p bigint, nr_seq_execucao_p bigint, nr_seq_requisicao_p bigint, nr_seq_conta_proc_p bigint, nr_seq_guia_proc_p bigint, nr_seq_exec_item_p bigint, nr_seq_req_proc_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_regra_p INOUT bigint, ie_permite_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realiza a consistencia  rede de atendimento.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[x]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_rede_plano_w			varchar(30);
ie_permite_w			varchar(1)	:= 'S';
ie_glosa_w			varchar(1)	:= 'S';
ie_tipo_consistencia_w		varchar(1)	:= 'S';
ie_primeira_rede_w		varchar(1)	:= 'S';
cd_grupo_w			bigint	:= null;
cd_procedimento_w		bigint	:= null;
cd_procedimento_cp_w		bigint	:= null;
ie_origem_proced_w		bigint	:= null;
ie_origem_proced_cp_w		bigint	:= null;
nr_seq_plano_seg_w		bigint	:= null;
nr_seq_rede_plano_w		bigint	:= null;
nr_seq_regra_w			bigint	:= null;
nr_seq_prestador_w		bigint	:= null;
nr_seq_segurado_w		bigint	:= null;
nr_seq_classif_w		bigint	:= null;
nr_seq_tipo_prest_w		bigint	:= null;
nr_seq_contrato_w		bigint	:= null;
nr_seq_congenere_w		bigint	:= null;
qt_regra_prestador_w		bigint	:= 0;
cd_area_procedimento_w		bigint	:= null;
cd_especialidade_w		bigint	:= null;
cd_area_w			bigint	:= null;
nr_seq_cooperativa_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_req_proc_w		bigint;
nr_seq_intercambio_w		bigint;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
dt_referencia_w			timestamp;
dt_emissao_w			timestamp;
cd_guia_referencia_w		varchar(20);
cd_prestador_w			varchar(30);
ie_tipo_intercambio_w		varchar(2);
ie_tipo_conta_w			varchar(2);
sg_estado_w			pessoa_juridica.sg_estado%type;
sg_estado_int_w			pessoa_juridica.sg_estado%type;
nr_seq_protocolo_w		bigint;
ds_w				varchar(2);
nr_seq_uni_exec_w		bigint;
ie_tipo_processo_w		varchar(2);
ie_tipo_proces_interc_w		varchar(2);
nr_seq_oper_repasse_w		bigint;
ie_area_coberta_w		varchar(2) := 'S';
qt_repasse_w			double precision;
cd_cgc_w			varchar(20);
qt_regra_repasse_w		double precision;
nr_seq_congenere_seg_w		bigint;
nr_seq_plano_w			bigint;
ie_carater_internacao_w		varchar(5);
ie_tipo_segurado_w		varchar(5);
nr_seq_guia_w			bigint;
qt_guia_autorizada_w		bigint;
qt_proc_exec_w			bigint;
qt_mat_exec_w			bigint;
ie_abrangencia_w		varchar(1);
nr_seq_outor_contrato_w		bigint;
cd_cgc_outorgante_w		varchar(20);
qt_glosa_w			integer;
ie_tipo_rede_min_ptu_w		pls_rede_atend_regra.ie_tpo_rede_ptu_prest%type;
ie_prestador_alto_custo_w	pls_prestador.ie_prestador_alto_custo%type;
dt_atendimento_referencia_w	pls_conta.dt_atendimento_referencia%type;
dt_atual_w			timestamp;
qt_extensao_area_w		integer:= 0;
nr_seq_guia_principal_w		pls_requisicao.nr_seq_guia_principal%type;

C01 CURSOR FOR
	SELECT	b.nr_seq_rede,
		substr(pls_obter_dados_rede_atend(b.nr_seq_rede,'CR'),1,30)
	from	pls_plano_rede_atend	b,
		pls_rede_atendimento	a
	where	a.nr_sequencia		= b.nr_seq_rede
	and	b.nr_seq_contrato	= nr_seq_contrato_w
	and	dt_referencia_w between coalesce(b.dt_inicio_vigencia,dt_referencia_w) and coalesce(b.dt_fim_vigencia,dt_referencia_w)
	and	a.ie_situacao = 'A'
	
union all

	SELECT	b.nr_seq_rede,
		substr(pls_obter_dados_rede_atend(b.nr_seq_rede,'CR'),1,30)
	from	pls_plano_rede_atend	b,
		pls_rede_atendimento	a
	where	a.nr_sequencia		= b.nr_seq_rede
	and	b.nr_seq_intercambio	= nr_seq_intercambio_w
	and	dt_referencia_w between coalesce(b.dt_inicio_vigencia,dt_referencia_w) and coalesce(b.dt_fim_vigencia,dt_referencia_w)
	and	a.ie_situacao = 'A'
	
union all

	select	b.nr_seq_rede,
		substr(pls_obter_dados_rede_atend(b.nr_seq_rede,'CR'),1,30)
	from	pls_plano_rede_atend	b,
		pls_rede_atendimento	a
	where	a.nr_sequencia		= b.nr_seq_rede
	and	b.nr_seq_plano		= nr_seq_plano_seg_w
	and	dt_referencia_w between coalesce(b.dt_inicio_vigencia,dt_referencia_w) and coalesce(b.dt_fim_vigencia,dt_referencia_w)
	and	a.ie_situacao = 'A';

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_permite
	from	pls_rede_atendimento	b,
		pls_rede_atend_regra	a
	where	a.nr_seq_rede 			= b.nr_sequencia
	and	b.nr_sequencia			= nr_seq_rede_plano_w
	and	b.ie_situacao			= 'A'
	and	dt_referencia_w 		between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	and	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador	= nr_seq_prestador_w))
	and	((coalesce(a.nr_seq_classif_prestador::text, '') = '') or (a.nr_seq_classif_prestador = nr_seq_classif_w))
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador = nr_seq_tipo_prest_w))
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento = cd_procedimento_cp_w AND a.ie_origem_proced = ie_origem_proced_w))
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc	= cd_grupo_w))
	and	((coalesce(a.cd_especialidade_proc::text, '') = '') or (a.cd_especialidade_proc = cd_especialidade_w))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento = cd_area_w))
	and	((coalesce(a.cd_prestador::text, '') = '') or (a.cd_prestador = coalesce(cd_prestador_w,'0')))
	and	((coalesce(a.ie_tipo_intercambio::text, '') = '') or (a.ie_tipo_intercambio	= 'A') or (a.ie_tipo_intercambio = ie_tipo_intercambio_w))
	and	((coalesce(a.ie_tipo_conta::text, '') = '') or (a.ie_tipo_conta		= 'A') or (a.ie_tipo_conta	= ie_tipo_conta_w))
	and	((coalesce(a.ie_alto_custo_prest, 'A') = 'A') or ((a.ie_alto_custo_prest = coalesce(ie_prestador_alto_custo_w, 'N')) and (coalesce(nr_seq_prestador_w,0) > 0)))
	and (
	--Para intercambio, roda todas diferente de "Atendimento local"
	((ie_tipo_proces_interc_w = 'E') and (ie_tipo_processo_w = 'I') and coalesce(a.ie_tipo_intercambio,'A') <> 'L')

	-- se for local, roda apenas para diferente de intercambio
	or (coalesce(a.ie_tipo_intercambio,'A') = 'L' and  not(ie_tipo_processo_w = 'I' and ie_tipo_proces_interc_w = 'E')  )
	)
	and	((coalesce(a.ie_tpo_rede_ptu_prest, 'N') = 'N') or ((a.ie_tpo_rede_ptu_prest = ie_tipo_rede_min_ptu_w) and ((coalesce(nr_seq_prestador_w,0) > 0) or (ie_tipo_proces_interc_w = 'E' AND ie_tipo_processo_w = 'I'))))
	and	((pls_obter_se_unimed_superior(nr_seq_congenere_w,a.nr_seq_congenere) = 'S' and a.ie_congenere_inferior  = 'S')
	or 	coalesce(a.nr_seq_congenere,coalesce(nr_seq_congenere_w,0)) = coalesce(nr_seq_congenere_w,0))
	order by
		coalesce(a.nr_seq_classif_prestador,0),
		coalesce(a.nr_seq_tipo_prestador,0),
		coalesce(a.nr_seq_prestador,0),
		coalesce(a.cd_prestador,0),
		coalesce(a.nr_seq_congenere,0),
		coalesce(a.ie_tipo_conta,'A'),
		coalesce(a.ie_tipo_intercambio,'A'),
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.cd_especialidade_proc,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_procedimento,0);

C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_permite
	from	pls_rede_atendimento		b,
		pls_prestador_rede_atend	a
	where	a.nr_seq_rede_atend 		= b.nr_sequencia
	and	b.nr_sequencia			= nr_seq_rede_plano_w
	and	b.ie_situacao			= 'A'
	and	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador	= nr_seq_prestador_w))
	and	((coalesce(a.nr_seq_classif_prestador::text, '') = '') or (a.nr_seq_classif_prestador = nr_seq_classif_w))
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador = nr_seq_tipo_prest_w))
	and	dt_referencia_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	order by
		coalesce(a.nr_seq_classif_prestador,0),
		coalesce(a.nr_seq_tipo_prestador,0),
		coalesce(a.nr_seq_prestador,0);


BEGIN
nr_seq_regra_p	:= null;
ie_permite_p	:= null;

if (coalesce(nr_seq_guia_proc_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'G';
elsif (coalesce(nr_seq_conta_proc_p,0) > 0) then
	ie_tipo_consistencia_w	:= 'C';
end if;

/*Consistencia da conta*/

if (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then
	/*Tipo de consistencia recebe 'C' conta*/

	ie_tipo_consistencia_w	:= 'C';

	/*Buscar as informacoes necessarias da conta*/

	select	max(nr_seq_segurado),
		max(nr_seq_prestador_exec),
		max(nr_seq_congenere),
		max(ie_tipo_conta),
		max(ie_carater_internacao),
		max(nr_seq_protocolo),
		max(dt_emissao),
		trunc(max(dt_atendimento),'dd'),
		max(cd_guia_ok),
		max(nr_seq_guia),
		max(dt_atendimento_referencia)
	into STRICT	nr_seq_segurado_w,
		nr_seq_prestador_w,
		nr_seq_congenere_w,
		ie_tipo_conta_w,
		ie_carater_internacao_w,
		nr_seq_protocolo_w,
		dt_emissao_w,
		dt_referencia_w,
		cd_guia_referencia_w,
		nr_seq_guia_w,
		dt_atendimento_referencia_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_p;

	/*Buscar as informacoes do prestador*/

	select	max(nr_seq_classificacao),
		max(nr_seq_tipo_prestador),
		max(cd_prestador),
		CASE WHEN max(ie_tipo_rede_min_ptu)=1 THEN  'B' WHEN max(ie_tipo_rede_min_ptu)=2 THEN  'E' WHEN max(ie_tipo_rede_min_ptu)=3 THEN  'M'  ELSE 'N' END ,
		max(ie_prestador_alto_custo)
	into STRICT	nr_seq_classif_w,
		nr_seq_tipo_prest_w,
		cd_prestador_w,
		ie_tipo_rede_min_ptu_w,
		ie_prestador_alto_custo_w
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_w;

	/*Buscar as informacoes do beneficiario*/

	select	max(nr_seq_plano),
		max(nr_seq_contrato),
		max(nr_seq_intercambio)
	into STRICT	nr_seq_plano_seg_w,
		nr_seq_contrato_w,
		nr_seq_intercambio_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;

	nr_seq_plano_seg_w := pls_obter_produto_benef(nr_seq_segurado_w, dt_atendimento_referencia_w);

	/*Obter estrutura procedimento*/

	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		select	cd_procedimento,
			ie_origem_proced,
			cd_area_procedimento,
			cd_grupo_proc,
			cd_especialidade,
			ie_origem_proced
		into STRICT	cd_procedimento_cp_w,
			ie_origem_proced_cp_w,
			cd_area_w,
			cd_grupo_w,
			cd_especialidade_w,
			ie_origem_proced_w
		from	pls_conta_proc_v
		where	nr_sequencia	= nr_seq_conta_proc_p;

	end if;

	if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
		/* Obter a UF da operadora  - Tasy*/

		select	coalesce(max(sg_estado),'X')
		into STRICT	sg_estado_w
		from	pessoa_juridica
		where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
					from	pls_outorgante
					where	cd_estabelecimento	= cd_estabelecimento_p);

		/* Obter a UF da operadora do beneficiario eventual ou que enviou o protocolo*/

		select	coalesce(max(a.sg_estado),'X')
		into STRICT	sg_estado_int_w
		from	pessoa_juridica	a,
			pls_congenere	b
		where	a.cd_cgc	= b.cd_cgc
		and	b.nr_sequencia	= nr_seq_congenere_w;

		if (sg_estado_w <> 'X') and (sg_estado_int_w <> 'X') then
			if (sg_estado_w	= sg_estado_int_w) then
				ie_tipo_intercambio_w	:= 'E';
			else
				ie_tipo_intercambio_w	:= 'N';
			end if;
		else
			ie_tipo_intercambio_w	:= 'A';
		end if;
	end if;

	/*Se nao encontrar no segurado pega do contrato*/

	nr_seq_plano_w			:= pls_obter_dados_segurado(nr_seq_segurado_w,'NRP');

	/*Buscando a operadora  que recebeu o atendimento*/

	if (coalesce(nr_seq_congenere_w,0)  = 0)	then
		select 	max(cd_cgc_outorgante)
		into STRICT 	cd_cgc_w
		from 	pls_outorgante
		where	cd_estabelecimento = cd_estabelecimento_p;

		select	max(nr_sequencia)
		into STRICT	nr_seq_congenere_w
		from 	pls_congenere
		where 	cd_cgc = cd_cgc_w;
	end if;

	/*Se nao encontrar a sequencia da guia vinculada ha conta ira buscar direto das autorizacoes*/

	if (coalesce(nr_seq_guia_w,0) = 0)	then

		select	max(nr_sequencia)
		into STRICT	nr_seq_guia_w
		from	pls_guia_plano
		where	cd_guia = cd_guia_referencia_w
		and	nr_seq_segurado	= nr_seq_segurado_w;
	end if;

	/*Se a guia ja estiver autorizada nao gera a glosa*/

	select	count(1)
	into STRICT	qt_guia_autorizada_w
	from 	pls_guia_plano
	where	nr_sequencia 	= nr_seq_guia_w
	and	nr_seq_segurado = nr_seq_segurado_w
	and	ie_status   	= 1;

	/*Se for uma conta de intercambio busca a cooperativa para consistencia da abragencia*/

	if (ie_tipo_conta_w =  'I')	then

		select	max(nr_seq_congenere)
		into STRICT	nr_seq_cooperativa_w
		from	pls_protocolo_conta
		where	nr_sequencia = nr_seq_protocolo_w;
	end if;

	/*Se for urgencia e emergencia nao glosa*/

	if (ie_area_coberta_w = 'S')	then
		/*Chamada da rotina para consistencia da abrangencia*/

		if (qt_guia_autorizada_w = 0)      then
			ie_area_coberta_w       := pls_obter_se_abrangencia(    nr_seq_conta_p, nr_seq_segurado_w, coalesce(nr_seq_plano_seg_w,nr_seq_plano_w),
										nr_seq_prestador_w, nr_seq_cooperativa_w,dt_emissao_w,
										nm_usuario_p);

			--Verificar se possui area de extensao de atendimento
			if (ie_area_coberta_w 	= 'N') then
				ie_area_coberta_w := pls_obter_se_extensao( nr_seq_segurado_w,coalesce(nr_seq_plano_seg_w,nr_seq_plano_w),nr_seq_prestador_w,nr_seq_contrato_w,nr_seq_cooperativa_w,trunc(clock_timestamp()));
			end if;
		end if;
	end if;

elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	begin
		select	nr_seq_segurado,
			nr_seq_prestador,
			nr_seq_uni_exec,
			nr_seq_plano,
			ie_tipo_processo,
			ie_tipo_intercambio,
			nr_seq_guia_principal
		into STRICT	nr_seq_segurado_w,
			nr_seq_prestador_w,
			nr_seq_uni_exec_w,
			nr_seq_plano_seg_w,
			ie_tipo_processo_w,
			ie_tipo_proces_interc_w,
			nr_seq_guia_principal_w
		from	pls_guia_plano
		where	nr_sequencia	= nr_seq_guia_p;
	exception
	when others then
		nr_seq_segurado_w	:= 0;
		nr_seq_prestador_w	:= 0;
		nr_seq_uni_exec_w	:= 0;
		nr_seq_plano_seg_w	:= null;
	end;

	select	trunc(dt_solicitacao,'dd')
	into STRICT	dt_referencia_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	begin
		select	nr_seq_classificacao,
			nr_seq_tipo_prestador,
			cd_prestador,
			CASE WHEN ie_tipo_rede_min_ptu=1 THEN  'B' WHEN ie_tipo_rede_min_ptu=2 THEN  'E' WHEN ie_tipo_rede_min_ptu=3 THEN  'M'  ELSE 'N' END ,
			ie_prestador_alto_custo
		into STRICT	nr_seq_classif_w,
			nr_seq_tipo_prest_w,
			cd_prestador_w,
			ie_tipo_rede_min_ptu_w,
			ie_prestador_alto_custo_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
	exception
	when others then
		nr_seq_classif_w	:= 0;
		nr_seq_tipo_prest_w	:= 0;
		cd_prestador_w		:= 'X';
		ie_tipo_rede_min_ptu_w	:= 'N';
		ie_prestador_alto_custo_w := null;
	end;

	begin
	select	nr_seq_contrato,
		nr_seq_intercambio
	into STRICT	nr_seq_contrato_w,
		nr_seq_intercambio_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_contrato_w	:= null;
		nr_seq_intercambio_w	:= null;
	end;

	if (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_procedimento_cp_w,
			ie_origem_proced_cp_w
		from	pls_guia_plano_proc
		where	nr_sequencia	= nr_seq_guia_proc_p;

		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_cp_w, ie_origem_proced_cp_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
	end if;

	if (coalesce(nr_seq_uni_exec_w,0)	<> 0) and (coalesce(ie_tipo_processo_w,'X')	= 'I') then
		/* Obter a UF da operadora  - Tasy*/

		begin
			select	sg_estado
			into STRICT	sg_estado_w
			from	pessoa_juridica
			where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
						from	pls_outorgante
						where	cd_estabelecimento	= cd_estabelecimento_p);
		exception
		when others then
			sg_estado_w	:= 'X';
		end;

		/* Obter a UF da operadora do beneficiario eventual */

		begin
			select	a.sg_estado
			into STRICT	sg_estado_int_w
			from	pessoa_juridica	a,
				pls_congenere	b
			where	a.cd_cgc	= b.cd_cgc
			and	b.nr_sequencia	= nr_seq_uni_exec_w;
		exception
		when others then
			sg_estado_int_w	:= 'X';
		end;

		if (coalesce(sg_estado_w,'X')		<> 'X') and (coalesce(sg_estado_int_w,'X')	<> 'X') then
			if (sg_estado_w	= sg_estado_int_w) then
				ie_tipo_intercambio_w	:= 'E';
			else
				ie_tipo_intercambio_w	:= 'N';
			end if;
		else
			ie_tipo_intercambio_w	:= 'A';
		end if;
	end if;

	if (ie_tipo_proces_interc_w = 'E') and (ie_tipo_processo_w = 'I') then
		if (nr_seq_guia_principal_w IS NOT NULL AND nr_seq_guia_principal_w::text <> '') then
			begin
				select	CASE WHEN max(ie_tipo_rede_min)=1 THEN  'B' WHEN max(ie_tipo_rede_min)=2 THEN  'E' WHEN max(ie_tipo_rede_min)=3 THEN  'M'  ELSE 'N' END
				into STRICT	ie_tipo_rede_min_ptu_w
				from	ptu_pedido_autorizacao
				where	nr_seq_guia = nr_seq_guia_principal_w;
			exception
			when others then
				ie_tipo_rede_min_ptu_w := 'N';
			end;
		else
			begin
				select	CASE WHEN max(ie_tipo_rede_min)=1 THEN  'B' WHEN max(ie_tipo_rede_min)=2 THEN  'E' WHEN max(ie_tipo_rede_min)=3 THEN  'M'  ELSE 'N' END
				into STRICT	ie_tipo_rede_min_ptu_w
				from	ptu_pedido_autorizacao
				where	nr_seq_guia = nr_seq_guia_p;
			exception
			when others then
				ie_tipo_rede_min_ptu_w := 'N';
			end;
		end if;
	end if;

	nr_seq_congenere_w	:= coalesce(nr_seq_uni_exec_w,0);
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	ie_tipo_consistencia_w	:= 'E';

	begin
		select	nr_seq_requisicao,
			nr_seq_prestador
		into STRICT	nr_seq_requisicao_w,
			nr_seq_prestador_w
		from	pls_execucao_requisicao
		where	nr_sequencia = nr_seq_execucao_p;
	exception
	when others then
		nr_seq_requisicao_w	:= 0;
		nr_seq_prestador_w	:= 0;
	end;

	begin
		select	nr_seq_segurado,
			trunc(dt_requisicao,'dd'),
			nr_seq_plano
		into STRICT	nr_seq_segurado_w,
			dt_referencia_w,
			nr_seq_plano_seg_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_w;
	exception
	when others then
		nr_seq_segurado_w	:= 0;
		dt_referencia_w		:= null;
		nr_seq_plano_seg_w	:= null;
	end;

	begin
		select	nr_seq_classificacao,
			nr_seq_tipo_prestador,
			cd_prestador,
			CASE WHEN ie_tipo_rede_min_ptu=1 THEN  'B' WHEN ie_tipo_rede_min_ptu=2 THEN  'E' WHEN ie_tipo_rede_min_ptu=3 THEN  'M'  ELSE 'N' END ,
			ie_prestador_alto_custo
		into STRICT	nr_seq_classif_w,
			nr_seq_tipo_prest_w,
			cd_prestador_w,
			ie_tipo_rede_min_ptu_w,
			ie_prestador_alto_custo_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
	exception
	when others then
		nr_seq_classif_w	:= 0;
		nr_seq_tipo_prest_w	:= 0;
		cd_prestador_w		:= 'X';
		ie_tipo_rede_min_ptu_w	:= 'N';
		ie_prestador_alto_custo_w := null;
	end;

	begin
	select	nr_seq_contrato,
		nr_seq_intercambio
	into STRICT	nr_seq_contrato_w,
		nr_seq_intercambio_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_contrato_w	:= null;
		nr_seq_intercambio_w	:= null;
	end;

	if (nr_seq_exec_item_p IS NOT NULL AND nr_seq_exec_item_p::text <> '') then
		begin
			select	cd_procedimento,
				ie_origem_proced
			into STRICT	cd_procedimento_cp_w,
				ie_origem_proced_cp_w
			from	pls_execucao_req_item
			where	nr_sequencia	= nr_seq_exec_item_p;
		exception
		when others then
			cd_procedimento_cp_w	:= null;
			ie_origem_proced_cp_w	:= null;
		end;

		if (ie_origem_proced_cp_w IS NOT NULL AND ie_origem_proced_cp_w::text <> '') and (ie_origem_proced_cp_w IS NOT NULL AND ie_origem_proced_cp_w::text <> '') then
			SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_cp_w, ie_origem_proced_cp_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
		end if;
	end if;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	ie_tipo_consistencia_w	:= 'R';

	begin
		select	nr_seq_segurado,
			trunc(dt_requisicao,'dd'),
			nr_seq_prestador_exec,
			ie_tipo_processo,
			ie_tipo_intercambio,
			nr_seq_uni_exec,
			nr_seq_plano,
			nr_seq_guia_principal
		into STRICT	nr_seq_segurado_w,
			dt_referencia_w,
			nr_seq_prestador_w,
			ie_tipo_processo_w,
			ie_tipo_proces_interc_w,
			nr_seq_uni_exec_w,
			nr_seq_plano_seg_w,
			nr_seq_guia_principal_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		nr_seq_segurado_w	:= 0;
		dt_referencia_w		:= null;
		nr_seq_prestador_w	:= 0;
		ie_tipo_processo_w	:= 'X';
		ie_tipo_proces_interc_w	:= 'X';
		nr_seq_uni_exec_w	:= 0;
		nr_seq_plano_seg_w	:= null;
	end;



	begin
		select	nr_seq_classificacao,
			nr_seq_tipo_prestador,
			cd_prestador,
			CASE WHEN ie_tipo_rede_min_ptu=1 THEN  'B' WHEN ie_tipo_rede_min_ptu=2 THEN  'E' WHEN ie_tipo_rede_min_ptu=3 THEN  'M'  ELSE 'N' END ,
			ie_prestador_alto_custo
		into STRICT	nr_seq_classif_w,
			nr_seq_tipo_prest_w,
			cd_prestador_w,
			ie_tipo_rede_min_ptu_w,
			ie_prestador_alto_custo_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
	exception
	when others then
		nr_seq_classif_w	:= 0;
		nr_seq_tipo_prest_w	:= 0;
		cd_prestador_w		:= 'X';
		ie_tipo_rede_min_ptu_w	:= 'N';
		ie_prestador_alto_custo_w := null;
	end;
	
	begin
	select	nr_seq_contrato,
		nr_seq_intercambio
	into STRICT	nr_seq_contrato_w,
		nr_seq_intercambio_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
	exception
	when others then
		nr_seq_contrato_w	:= null;
		nr_seq_intercambio_w	:= null;
	end;

	if (nr_seq_req_proc_p IS NOT NULL AND nr_seq_req_proc_p::text <> '') then
		select	cd_procedimento,
			ie_origem_proced
		into STRICT	cd_procedimento_cp_w,
			ie_origem_proced_cp_w
		from	pls_requisicao_proc
		where	nr_sequencia	= nr_seq_req_proc_p;

		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_cp_w, ie_origem_proced_cp_w, cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w) INTO STRICT cd_area_w, cd_especialidade_w, cd_grupo_w, ie_origem_proced_w;
	end if;

	if (coalesce(nr_seq_uni_exec_w,0)	<> 0) and (coalesce(ie_tipo_processo_w,'X')	= 'I') then
		/* Obter a UF da operadora  - Tasy*/

		begin
			select	sg_estado
			into STRICT	sg_estado_w
			from	pessoa_juridica
			where	cd_cgc	= (	SELECT	max(cd_cgc_outorgante)
						from	pls_outorgante
						where	cd_estabelecimento	= cd_estabelecimento_p);
		exception
		when others then
			sg_estado_w	:= 'X';
		end;

		/* Obter a UF da operadora do beneficiario eventual */

		begin
			select	a.sg_estado
			into STRICT	sg_estado_int_w
			from	pessoa_juridica	a,
				pls_congenere	b
			where	a.cd_cgc	= b.cd_cgc
			and		b.nr_sequencia	= nr_seq_uni_exec_w;
		exception
		when others then
			sg_estado_int_w	:= 'X';
		end;

		if (coalesce(sg_estado_w,'X')		<> 'X') and (coalesce(sg_estado_int_w,'X')	<> 'X') then
			if (sg_estado_w	= sg_estado_int_w) then
				ie_tipo_intercambio_w	:= 'E';
			else
				ie_tipo_intercambio_w	:= 'N';
			end if;
		else
			ie_tipo_intercambio_w	:= 'A';
		end if;
	end if;

	nr_seq_congenere_w	:= coalesce(nr_seq_uni_exec_w,0);

	if (ie_tipo_proces_interc_w = 'E') and (ie_tipo_processo_w = 'I') then
		if (nr_seq_guia_principal_w IS NOT NULL AND nr_seq_guia_principal_w::text <> '') then
			begin
				select	CASE WHEN max(ie_tipo_rede_min)=1 THEN  'B' WHEN max(ie_tipo_rede_min)=2 THEN  'E' WHEN max(ie_tipo_rede_min)=3 THEN  'M'  ELSE 'N' END
				into STRICT	ie_tipo_rede_min_ptu_w
				from	ptu_pedido_autorizacao
				where	nr_seq_guia = nr_seq_guia_principal_w;
			exception
			when others then
				ie_tipo_rede_min_ptu_w := 'N';
			end;
		else
			begin
				select	CASE WHEN max(ie_tipo_rede_min)=1 THEN  'B' WHEN max(ie_tipo_rede_min)=2 THEN  'E' WHEN max(ie_tipo_rede_min)=3 THEN  'M'  ELSE 'N' END
				into STRICT	ie_tipo_rede_min_ptu_w
				from	ptu_pedido_autorizacao
				where	nr_seq_requisicao = nr_seq_requisicao_p;
			exception
			when others then
				ie_tipo_rede_min_ptu_w := 'N';
			end;
		end if;
	end if;

end if;

open C01;
loop
fetch C01 into
	nr_seq_rede_plano_w,
	cd_rede_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	if (ie_primeira_rede_w = 'S') or (coalesce(ie_permite_w,'N') = 'N') then
		ie_primeira_rede_w	:= 'N';

		select	count(1)
		into STRICT	qt_regra_prestador_w
		from	pls_prestador_rede_atend;

		if (qt_regra_prestador_w > 0) then
			open C03;
			loop
			fetch C03 into
				nr_seq_regra_w,
				ie_permite_w;

		        if ie_permite_w = 'S' then
		          exit;
		        end if;

			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				null;
				end;
			end loop;
			close C03;
		else
			open C02;
			loop
			fetch C02 into
				nr_seq_regra_w,
				ie_permite_w;

		        -- se acha uma que permite, para o fluxo
		        if ie_permite_w = 'S' then
		          exit;
		        end if;

			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				null;
				end;
			end loop;
			close C02;
		end if;
	else
		exit;
	end if;
	end;
end loop;
close C01;
nr_seq_regra_p	:= nr_seq_regra_w;
ie_permite_p	:= ie_permite_w;

if	((ie_permite_w				= 'N') 		  or (coalesce(ie_area_coberta_w,'S')	= 'N'))			then
	
	if (ie_tipo_consistencia_w = 'C') then

		CALL pls_gravar_conta_glosa('1215',nr_seq_conta_p,null,
					null,'N','Fora da rede de atendimento',
					nm_usuario_p,'A','CC',
					nr_seq_prestador_w, cd_estabelecimento_p, '', null);
	elsif (ie_tipo_consistencia_w = 'G') then

		CALL pls_gravar_motivo_glosa('1215',null,nr_seq_guia_proc_p,
					null,'Fora da rede de atendimento',
					nm_usuario_p,null,'CG',
					nr_seq_prestador_w, 'Regra ->'||nr_seq_regra_w,null);
	elsif (ie_tipo_consistencia_w = 'E') then
		select	count(1)
		into STRICT	qt_glosa_w
		from	pls_requisicao_glosa	b,
			tiss_motivo_glosa a
		where	b.nr_seq_requisicao = nr_seq_requisicao_w
		and	b.nr_seq_motivo_glosa = a.nr_sequencia
		and	a.cd_motivo_tiss = '1215';

		if (qt_glosa_w = 0) then
			select	count(1)
			into STRICT	qt_proc_exec_w
			from	pls_execucao_req_item
			where	nr_sequencia	= nr_seq_exec_item_p
			and		(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');

			select	count(1)
			into STRICT	qt_mat_exec_w
			from	pls_execucao_req_item
			where	nr_sequencia	= nr_seq_exec_item_p
			and		(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');

			if (qt_proc_exec_w	> 0) then
				CALL pls_gravar_execucao_req_glosa('1215',nr_seq_execucao_p,nr_seq_exec_item_p,
									null,'Fora da rede de atendimento', nm_usuario_p,
									nr_seq_prestador_w,cd_estabelecimento_p,null,
									null);
			elsif (qt_mat_exec_w	> 0) then
				CALL pls_gravar_execucao_req_glosa('1215',nr_seq_execucao_p,null,
							nr_seq_exec_item_p,'Fora da rede de atendimento', nm_usuario_p,
							nr_seq_prestador_w,cd_estabelecimento_p,null,
							null);
			end if;
		end if;
	elsif (ie_tipo_consistencia_w = 'R') then
		if (coalesce(ie_tipo_processo_w,'X')	= 'I') and (coalesce(ie_tipo_proces_interc_w,'X')	= 'E') then
			begin
				select	coalesce(nr_seq_congenere_atend,nr_seq_congenere)
				into STRICT	nr_seq_oper_repasse_w
				from	pls_segurado_repasse
				where	nr_seq_segurado	= nr_seq_segurado_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	clock_timestamp()	between dt_repasse and fim_dia(dt_fim_repasse)
				and (coalesce(ie_tipo_compartilhamento::text, '') = '' or ie_tipo_compartilhamento = 1);
			exception
			when others then
				nr_seq_oper_repasse_w	:= 0;
			end;

			if (coalesce(nr_seq_uni_exec_w,0)	<> 0) and (coalesce(nr_seq_oper_repasse_w,0)	<> 0) then
				if (nr_seq_uni_exec_w	<> nr_seq_oper_repasse_w) then
					CALL pls_gravar_requisicao_glosa(	'1215', nr_seq_requisicao_p, null,
									null, 'Fora da rede de atendimento', nm_usuario_p,
									nr_seq_prestador_w, cd_estabelecimento_p, null,
									null);
				end if;
			else
				CALL pls_gravar_requisicao_glosa(	'1215', nr_seq_requisicao_p, null,
								null, 'Fora da rede de atendimento', nm_usuario_p,
								nr_seq_prestador_w, cd_estabelecimento_p, null,
								null);
			end if;
		else
			if (coalesce(nr_seq_prestador_w,0)	<> 0) and (coalesce(ie_tipo_processo_w,'X')	<> 'I') then
				CALL pls_gravar_requisicao_glosa(	'1215', nr_seq_requisicao_p, null,
								null, 'Fora da rede de atendimento', nm_usuario_p,
								nr_seq_prestador_w, cd_estabelecimento_p, null,
								null);
			end if;
		end if;
	end if;
end if;

/* nao pode ter commit*/

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consiste_rede_atend ( nr_seq_conta_p bigint, nr_seq_guia_p bigint, nr_seq_execucao_p bigint, nr_seq_requisicao_p bigint, nr_seq_conta_proc_p bigint, nr_seq_guia_proc_p bigint, nr_seq_exec_item_p bigint, nr_seq_req_proc_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_regra_p INOUT bigint, ie_permite_p INOUT text) FROM PUBLIC;

