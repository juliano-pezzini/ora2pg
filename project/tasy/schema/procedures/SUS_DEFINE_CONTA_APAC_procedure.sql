-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_define_conta_apac ( nr_atendimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w		bigint;
nr_interno_conta_w		bigint;
cd_convenio_w		integer;
qt_apac_w		integer	:= 0;
cd_estabelecimento_w	smallint;
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
cd_categoria_w		varchar(10);
dt_acerto_conta_w		timestamp;
cd_convenio_calculo_w	integer;
cd_categoria_calculo_w	varchar(10);
cd_setor_atendimento_w	integer;
cd_estab_usuario_w	smallint;
cd_procedimento_w	bigint;
ie_gerar_conta_nova_w	varchar(15) := 'N';


BEGIN 
 
select	cd_estabelecimento, 
	dt_entrada, 
	dt_alta 
into STRICT	cd_estabelecimento_w, 
	dt_entrada_w, 
	dt_alta_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_p;
 
begin 
cd_estab_usuario_w := wheb_usuario_pck.get_cd_estabelecimento;
exception 
when others then 
	cd_estab_usuario_w := cd_estabelecimento_w;
end;
 
ie_gerar_conta_nova_w := coalesce(obter_valor_param_usuario(1124,97,obter_perfil_ativo,nm_usuario_p,cd_estab_usuario_w),'N');
 
select	coalesce(max(cd_procedimento),0) 
into STRICT	cd_procedimento_w 
from	sus_apac_unif 
where	nr_sequencia = nr_sequencia_p;
 
select	max(cd_setor_atendimento) 
into STRICT	cd_setor_atendimento_w 
from	atend_paciente_unidade 
where	nr_atendimento	= nr_atendimento_p;
 
select	max(a.cd_convenio), 
	max(cd_categoria) 
into STRICT	cd_convenio_w, 
	cd_categoria_w 
from	atend_categoria_convenio	a, 
	convenio			c 
where	c.cd_convenio		= a.cd_convenio 
and	c.ie_tipo_convenio	= 3 
and	a.nr_atendimento	= nr_atendimento_p;
	 
select	coalesce(max(a.nr_interno_conta),null) 
into STRICT	nr_interno_conta_w 
from 	conta_paciente a 
where 	a.nr_atendimento 	= nr_atendimento_p 
and	a.cd_convenio_parametro	= cd_convenio_w 
and	a.ie_status_acerto	= 1 
and	not exists (	SELECT	1 
			from	procedimento_paciente x 
			where	x.nr_interno_conta = a.nr_interno_conta 
			and	coalesce(x.cd_motivo_exc_conta::text, '') = '' 
			and	x.ie_origem_proced = 7 
			and	sus_obter_tiporeg_proc(x.cd_procedimento,x.ie_origem_proced,'C',3) = 0);
 
if (coalesce(nr_interno_conta_w::text, '') = '') and 
	((ie_gerar_conta_nova_w = 'N') or 
	((ie_gerar_conta_nova_w = 'S') and (Sus_Obter_Estrut_Proc(cd_procedimento_w,7,'C','G') <> '6'))) then 
	begin 
	SELECT * FROM Obter_Conta_Paciente( 
		cd_estabelecimento_w, nr_atendimento_p, cd_convenio_w, cd_categoria_w, nm_usuario_p, clock_timestamp(), dt_entrada_w, dt_alta_w, null, cd_setor_atendimento_w, null, dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w) INTO STRICT dt_acerto_conta_w, nr_interno_conta_w, cd_convenio_calculo_w, cd_categoria_calculo_w;
	end;
end if;
 
select	count(*) 
into STRICT	qt_apac_w 
from	sus_apac_unif 
where	nr_interno_conta	= nr_interno_conta_w;
 
if (qt_apac_w = 0) and (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then 
	begin 
	update	sus_apac_unif 
	set	nr_interno_conta	= nr_interno_conta_w 
	where	nr_sequencia		= nr_sequencia_p 
	and	nr_atendimento		= nr_atendimento_p;
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_define_conta_apac ( nr_atendimento_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

