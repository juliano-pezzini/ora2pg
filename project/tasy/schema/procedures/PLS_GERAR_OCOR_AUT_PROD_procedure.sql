-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_prod ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) AS $body$
DECLARE



/*
IE_TIPO_OCORRENCIA_W	= C - Gera a ocorrência para o cabeçalho
			= I - Gera ocorrência para os itens
*/
nr_seq_plano_w			bigint;
nr_seq_ocor_aut_benef_w		bigint;
nr_seq_requisicao_w		bigint;
ie_gerar_ocorrencia_w		varchar(2)	:= 'N';

nr_seq_ocor_aut_prod_w		bigint;
ie_regra_com_itens_w		varchar(1);
ie_preco_w			varchar(2);
ie_regulamentacao_w		pls_ocor_aut_filtro_prod.ie_regulamentacao%type;
ie_segmentacao_w		pls_plano.ie_segmentacao%type;
nr_seq_grupo_produto_w		integer;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_grupo_produto
	from	pls_ocor_aut_filtro_prod
	where	nr_seq_ocor_aut_filtro	= nr_seq_ocor_filtro_p
	and	ie_situacao	= 'A'
	and 	((coalesce(ie_preco::text, '') = '') 	or (ie_preco = ie_preco_w))
	and	((coalesce(nr_seq_plano::text, '') = '') or (nr_seq_plano = nr_seq_plano_w))
	and 	((coalesce(ie_regulamentacao::text, '') = '') or (ie_regulamentacao = ie_regulamentacao_w))
	and	((coalesce(ie_segmentacao::text, '') = '') or (ie_segmentacao = ie_segmentacao_w));

BEGIN

if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	nr_seq_plano
	into STRICT	nr_seq_plano_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	nr_seq_plano
	into STRICT	nr_seq_plano_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then
	begin
		select	nr_seq_requisicao
		into STRICT	nr_seq_requisicao_w
		from	pls_execucao_requisicao
		where	nr_sequencia	= nr_seq_execucao_p;
	exception
	when others then
		nr_seq_requisicao_w	:= null;
	end;

	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
		begin
			select	nr_seq_plano
			into STRICT	nr_seq_plano_w
			from	pls_requisicao
			where	nr_sequencia	= nr_seq_requisicao_w;
		exception
		when others then
			nr_seq_plano_w	:= null;
		end;
	end if;
end if;

begin
	select	ie_preco,
		ie_regulamentacao,
		ie_segmentacao
	into STRICT	ie_preco_w,
		ie_regulamentacao_w,
		ie_segmentacao_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
when others then
	ie_preco_w 		:= null;
	ie_regulamentacao_w	:= null;
end;

if (ie_preco_w IS NOT NULL AND ie_preco_w::text <> '') then
	for r_C01_w in C01 loop
		ie_gerar_ocorrencia_w	:= 'S';

		if (coalesce(r_C01_w.nr_seq_grupo_produto,0) > 0) then
			ie_gerar_ocorrencia_w	:= pls_se_grupo_preco_produto(r_C01_w.nr_seq_grupo_produto, nr_seq_plano_w);
		end if;

		if (ie_gerar_ocorrencia_w = 'S') then
			exit;
		end if;
	end loop;
end if;

if (ie_gerar_ocorrencia_w = 'S') then
	ie_regra_com_itens_w  :=  pls_obter_se_oco_aut_fil_itens(nr_seq_ocor_filtro_p);

	if (ie_regra_com_itens_w = 'S') then
		ie_tipo_ocorrencia_p := 'I';
	else
		ie_tipo_ocorrencia_p := 'C';
	end if;
end if;

ie_gerar_ocorrencia_p	:= ie_gerar_ocorrencia_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_prod ( nr_seq_ocor_filtro_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) FROM PUBLIC;

