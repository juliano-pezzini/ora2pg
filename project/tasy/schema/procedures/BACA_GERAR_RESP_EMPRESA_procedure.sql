-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_gerar_resp_empresa () AS $body$
DECLARE


nr_seq_qualif_dnrc_w		dnrc_qualif_assinante.nr_sequencia%type;
empresa_estab_resp_w		empresa_estab_resp%rowtype;

c_contador CURSOR FOR
SELECT	cd_empresa,
	cd_estabelecimento,
	cd_contabilista,
	nr_crc
from	estabelecimento a
where	ie_situacao	= 'A'
and	(cd_contabilista IS NOT NULL AND cd_contabilista::text <> '')
and	not exists (	select	1
			from	empresa_estab_resp y
			where	y.cd_pessoa_fisica	= a.cd_contabilista
			and	a.cd_estabelecimento	= y.cd_estab_exclusivo)

union

select	cd_empresa,
	null cd_estabelecimento,
	cd_contabilista,
	nr_crc
from	empresa a
where	ie_situacao	= 'A'
and	(cd_contabilista IS NOT NULL AND cd_contabilista::text <> '')
and	not exists (	select	1
			from	empresa_estab_resp y
			where	y.cd_pessoa_fisica	= a.cd_contabilista
			and	a.cd_empresa		= y.cd_empresa
			and	coalesce(y.cd_estab_exclusivo::text, '') = '');

c_titular CURSOR FOR
SELECT	cd_empresa,
	cd_estabelecimento,
	cd_titular
from	estabelecimento a
where	ie_situacao	= 'A'
and	(cd_titular IS NOT NULL AND cd_titular::text <> '')

union

select	cd_empresa,
	null cd_estabelecimento,
	cd_titular
from	empresa a
where	ie_situacao	= 'A'
and	(cd_titular IS NOT NULL AND cd_titular::text <> '');
BEGIN

for vet in c_contador loop
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_qualif_dnrc_w
	from	dnrc_qualif_assinante
	where	cd_qualificacao = 900
	and	ie_situacao	= 'A';

	if (coalesce(nr_seq_qualif_dnrc_w::text, '') = '') then
		begin

		select	nextval('dnrc_qualif_assinante_seq')
		into STRICT	nr_seq_qualif_dnrc_w
		;

		insert into dnrc_qualif_assinante(
			nr_sequencia,
			cd_qualificacao,
			ds_qualificacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nm_usuario,
			dt_atualizacao,
			ie_situacao)
		values (	nr_seq_qualif_dnrc_w,
			900,
			'Contador/Contabilista',
			'BacaRespEmp',
			clock_timestamp(),
			'BacaRespEmp',
			clock_timestamp(),
			'A');

		end;
	end if;


	select	nextval('empresa_estab_resp_seq')
	into STRICT	empresa_estab_resp_w.nr_sequencia
	;

	empresa_estab_resp_w.cd_empresa		:= vet.cd_empresa;
	empresa_estab_resp_w.cd_estab_exclusivo	:= vet.cd_estabelecimento;
	empresa_estab_resp_w.cd_pessoa_fisica	:= vet.cd_contabilista;
	empresa_estab_resp_w.nr_seq_qualif_dnrc	:= nr_seq_qualif_dnrc_w;
	empresa_estab_resp_w.ie_signatario	:= 'S';
	empresa_estab_resp_w.ie_resp_legal_gov	:= 'N';
	empresa_estab_resp_w.nm_usuario		:= 'BacaRespEmp';
	empresa_estab_resp_w.nm_usuario_nrec	:= 'BacaRespEmp';
	empresa_estab_resp_w.dt_atualizacao	:= clock_timestamp();
	empresa_estab_resp_w.dt_atualizacao_nrec:= clock_timestamp();
	empresa_estab_resp_w.dt_inicio_vigencia	:= trunc(clock_timestamp(),'dd');

	insert into empresa_estab_resp values (empresa_estab_resp_w.*);

	empresa_estab_resp_w			:= null;

	update	pessoa_fisica
	set	ds_codigo_prof	= vet.nr_crc
	where	cd_pessoa_fisica= vet.cd_contabilista
	and	coalesce(ds_codigo_prof,'X') = 'X';

	end;
end loop;


for vet in c_titular loop
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_qualif_dnrc_w
	from	dnrc_qualif_assinante
	where	cd_qualificacao = 203
	and	ie_situacao	= 'A';

	if (coalesce(nr_seq_qualif_dnrc_w::text, '') = '') then
		begin

		select	nextval('dnrc_qualif_assinante_seq')
		into STRICT	nr_seq_qualif_dnrc_w
		;

		insert into dnrc_qualif_assinante(
			nr_sequencia,
			cd_qualificacao,
			ds_qualificacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nm_usuario,
			dt_atualizacao,
			ie_situacao)
		values (	nr_seq_qualif_dnrc_w,
			203,
			'Diretor',
			'BacaRespEmp',
			clock_timestamp(),
			'BacaRespEmp',
			clock_timestamp(),
			'A');

		end;
	end if;

	select	nextval('empresa_estab_resp_seq')
	into STRICT	empresa_estab_resp_w.nr_sequencia
	;

	empresa_estab_resp_w.cd_empresa		:= vet.cd_empresa;
	empresa_estab_resp_w.cd_estab_exclusivo	:= vet.cd_estabelecimento;
	empresa_estab_resp_w.cd_pessoa_fisica	:= vet.cd_titular;
	empresa_estab_resp_w.nr_seq_qualif_dnrc	:= nr_seq_qualif_dnrc_w;
	empresa_estab_resp_w.ie_signatario	:= 'S';
	empresa_estab_resp_w.ie_resp_legal_gov	:= 'S';
	empresa_estab_resp_w.nm_usuario		:= 'BacaRespEmp';
	empresa_estab_resp_w.nm_usuario_nrec	:= 'BacaRespEmp';
	empresa_estab_resp_w.dt_atualizacao	:= clock_timestamp();
	empresa_estab_resp_w.dt_atualizacao_nrec:= clock_timestamp();
	empresa_estab_resp_w.dt_inicio_vigencia	:= trunc(clock_timestamp(),'dd');
	insert into empresa_estab_resp values (empresa_estab_resp_w.*);

	empresa_estab_resp_w			:= null;

	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_gerar_resp_empresa () FROM PUBLIC;

