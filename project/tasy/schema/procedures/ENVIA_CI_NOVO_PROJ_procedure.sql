-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function envia_ci_novo_proj as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE envia_ci_novo_proj ( ie_evento_p text, nr_seq_projeto_p bigint, nm_usuario_p text, cd_gerente_p bigint default 0, cd_coordenador_p bigint default 0, nr_seq_canal_p bigint default 0, ds_campo_p text default null) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL envia_ci_novo_proj_atx ( ' || quote_nullable(ie_evento_p) || ',' || quote_nullable(nr_seq_projeto_p) || ',' || quote_nullable(nm_usuario_p) || ',' || quote_nullable(cd_gerente_p) || ',' || quote_nullable(cd_coordenador_p) || ',' || quote_nullable(nr_seq_canal_p) || ',' || quote_nullable(ds_campo_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE envia_ci_novo_proj_atx ( ie_evento_p text, nr_seq_projeto_p bigint, nm_usuario_p text, cd_gerente_p bigint default 0, cd_coordenador_p bigint default 0, nr_seq_canal_p bigint default 0, ds_campo_p text default null) AS $body$
DECLARE


nr_seq_projeto_w		bigint;
ie_comunic_interna_w		varchar(1);
ie_email_w			varchar(1);
ds_titulo_w			varchar(255);
ds_comunicado_w			varchar(4000);
ie_existe_usuario_w		varchar(1);
ie_responsavel_w		varchar(5);
cd_pessoa_w			varchar(10);
ds_email_destinatario_w		varchar(255);
nm_usuario_w			varchar(255);
ds_cliente_w			varchar(255);
ds_titulo_proj_w		varchar(255);
ds_enviados_ci_w		varchar(4000);
ds_enviados_mail_w		varchar(4000);

nm_gerente_w			varchar(255);
nm_coordenador_w		varchar(255);
ds_email_dest_gerente_w		varchar(255);
ds_email_dest_coordenador_w	varchar(255);

ds_mails_destinatarios_w	varchar(4000);
nm_nomes_destinatarios_w	varchar(4000);

dt_inicio_prev_w		timestamp;
dt_virada_w			timestamp;
ds_gerente_projeto_w		varchar(100);
ds_coordenador_w		varchar(100);

nm_usuario_destino_w		varchar(255);
nm_consultor_w			varchar(255);
dt_periodo_w			timestamp;
cd_responsavel_w		bigint;
ds_email_usuario_destino_w	varchar(255);c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ie_comunic_interna,
	a.ie_email,
	a.ds_titulo,
	a.ds_comunicado
from	proj_regra_comunicado a
where	a.ie_situacao	= 'A'
and	a.ie_evento	= ie_evento_p;

c02 CURSOR FOR
SELECT	a.ie_responsavel,
	a.nm_usuario_destino
from	proj_usuario_comunicado a
where	a.nr_seq_regra = nr_seq_projeto_w;

c03 CURSOR FOR
SELECT	max(a.cd_pessoa_fisica)
from	proj_equipe_papel a,
	proj_equipe b,
	proj_projeto c
where	a.nr_seq_equipe = b.nr_sequencia
and	c.nr_sequencia = b.nr_seq_proj
and	b.nr_seq_equipe_funcao = 1 -- Equipe de Planejamento
and	c.nr_sequencia = nr_seq_projeto_p
and	((ie_responsavel_w = 'CE' AND a.nr_seq_funcao = 17) or
	(ie_responsavel_w = 'GE' AND a.nr_seq_funcao = 15));


BEGIN
open C01;
loop
fetch C01 into	
	nr_seq_projeto_w,
	ie_comunic_interna_w,
	ie_email_w,
	ds_titulo_w,
	ds_comunicado_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_usuario_w
	from	proj_usuario_comunicado a
	where	a.nr_seq_regra = nr_seq_projeto_w;
	
	if (ie_existe_usuario_w = 'S') then
		begin
		open C02;
		loop
		fetch C02 into
			ie_responsavel_w,
			nm_usuario_destino_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			if (ie_responsavel_w = 'CP') then
				begin
				select	max(a.cd_coordenador)
				into STRICT	cd_pessoa_w
				from	proj_projeto a
				where	a.nr_sequencia = nr_seq_projeto_p;
				select	max(u.ds_email),
					max(u.nm_usuario)
				into STRICT	ds_email_destinatario_w,
					nm_usuario_w
				from	usuario u
				where	u.cd_pessoa_fisica = cd_pessoa_w;
				end;
			
			elsif (ie_responsavel_w = 'GP') then
				begin
				select	max(cd_gerente_projeto)
				into STRICT	cd_pessoa_w
				from	proj_projeto a
				where	a.nr_sequencia = nr_seq_projeto_p;
				select	max(u.ds_email),
					max(u.nm_usuario)
				into STRICT	ds_email_destinatario_w,
					nm_usuario_w
				from	usuario u
				where	u.cd_pessoa_fisica = cd_pessoa_w;
				end;
			elsif (ie_responsavel_w in ('GE','CE')) then
				begin
				open C03;
				loop
				fetch C03 into	
					cd_pessoa_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					select	max(u.ds_email),
						max(u.nm_usuario)
					into STRICT	ds_email_destinatario_w,
						nm_usuario_w
					from	usuario u
					where	u.cd_pessoa_fisica = cd_pessoa_w;
					end;
				end loop;
				close C03;
				end;
			elsif (ie_responsavel_w = 'C') then -- Canal
				begin
				select	obter_dados_pf_pj(null,max(a.cd_cnpj),'M')
				into STRICT	ds_email_destinatario_w
				from	com_canal a,
					com_canal_consultor b
				where	b.nr_seq_canal = a.nr_sequencia
				and	b.nr_sequencia = nr_seq_canal_p;
				end;
			elsif (ie_responsavel_w = 'U') then
				begin
				select max(obter_pf_usuario(nm_usuario_destino_w, 'C'))
				into STRICT	cd_responsavel_w
				;
				nm_usuario_w := nm_usuario_destino_w;
				if (cd_responsavel_w IS NOT NULL AND cd_responsavel_w::text <> '') then
					select max(obter_email_usuario(cd_responsavel_w, nm_usuario_destino_w, wheb_usuario_pck.get_cd_estabelecimento))
					into STRICT	ds_email_usuario_destino_w
					;
				end if;
				end;
			end if;
			
			
			select	max(coalesce(a.ds_titulo,'Titulo nao informado')),
					max(substr(obter_desc_cliente(a.nr_seq_cliente,'F'),1,254)),
					max(a.dt_inicio_prev),
					max(substr(obter_nome_pf(a.cd_coordenador),1,80)),
					max(substr(obter_nome_pf(a.cd_gerente_projeto),1,80)),
					max(a.dt_virada)
			into STRICT	ds_titulo_proj_w,
					ds_cliente_w,
					dt_inicio_prev_w,
					ds_coordenador_w,
					ds_gerente_projeto_w,
					dt_virada_w
			from	proj_projeto a
			where	a.nr_sequencia = nr_seq_projeto_p;
			
			select 	max(substr(obter_nome_pf(cd_consultor),1,255)),
				max(dt_agenda)
			into STRICT	nm_consultor_w,
				dt_periodo_w
			from	proj_agenda
			where	nr_seq_proj = nr_seq_projeto_p;

			ds_comunicado_w := replace(ds_comunicado_w,'@NR_PROJETO',to_char(nr_seq_projeto_p));
			ds_comunicado_w := replace(ds_comunicado_w,'@DS_TITULO',ds_titulo_proj_w);
			ds_comunicado_w := replace(ds_comunicado_w,'@DS_CLIENTE',ds_cliente_w);
			ds_comunicado_w := replace(ds_comunicado_w,'@DT_INICIO_PREV',dt_inicio_prev_w);
			ds_comunicado_w := replace(ds_comunicado_w,'@CD_COORDENADOR',ds_coordenador_w);
			ds_comunicado_w := replace(ds_comunicado_w,'@CD_GERENTE',ds_gerente_projeto_w);
			ds_comunicado_w := replace(ds_comunicado_w,'@DT_VIRADA',dt_virada_w);
			ds_comunicado_w := replace(ds_comunicado_w,'@NM_CONSULTOR', nm_consultor_w); --Apenas para Eventos do tipo 'AA' - Alteracao agenda de recurso.
			ds_comunicado_w := replace(ds_comunicado_w,'@DT_PERIODO', dt_periodo_w);
			ds_comunicado_w := replace(ds_comunicado_w,'@DS_CAMPO', '"' || ds_campo_p || '"');
			
			if (cd_gerente_p <> 0) then
			begin
				select	max(u.ds_email),
					max(u.nm_usuario)
				into STRICT	ds_email_dest_gerente_w,
					nm_gerente_w
				from	usuario u
				where	u.cd_pessoa_fisica = cd_gerente_p;
			end;
			end if;

			if (cd_coordenador_p <> 0) then
			begin
				select	max(u.ds_email),
					max(u.nm_usuario)
				into STRICT	ds_email_dest_coordenador_w,
					nm_coordenador_w
				from	usuario u
				where	u.cd_pessoa_fisica = cd_coordenador_p;
			end;
			end if;

			-- Envia e-mails
			ds_mails_destinatarios_w := ''; -- Garantia de que nao tera um e-mail antigo
			
			if (ie_email_w = 'S') then
			begin
				if	((ds_email_dest_gerente_w IS NOT NULL AND ds_email_dest_gerente_w::text <> '') and (Obter_Se_Contido_char(ds_email_dest_gerente_w,ds_mails_destinatarios_w) = 'N') and (Obter_Se_Contido_char(ds_email_dest_gerente_w,ds_enviados_mail_w) = 'N')) then
				begin
					if (ds_mails_destinatarios_w IS NOT NULL AND ds_mails_destinatarios_w::text <> '') then
						ds_mails_destinatarios_w := ds_mails_destinatarios_w || ',';
					end if;
						
					ds_mails_destinatarios_w := ds_mails_destinatarios_w || ds_email_dest_gerente_w;
				end;
				end if;

				if	((ds_email_dest_coordenador_w IS NOT NULL AND ds_email_dest_coordenador_w::text <> '') and (Obter_Se_Contido_char(ds_email_dest_coordenador_w,ds_mails_destinatarios_w) = 'N') and (Obter_Se_Contido_char(ds_email_dest_coordenador_w,ds_enviados_mail_w) = 'N')) then
				begin
					if (ds_mails_destinatarios_w IS NOT NULL AND ds_mails_destinatarios_w::text <> '') then
						ds_mails_destinatarios_w := ds_mails_destinatarios_w || ',';
					end if;

					ds_mails_destinatarios_w := ds_mails_destinatarios_w || ds_email_dest_coordenador_w;
				end;
				end if;

				if	((ds_email_destinatario_w IS NOT NULL AND ds_email_destinatario_w::text <> '') and (Obter_Se_Contido_char(ds_email_destinatario_w,ds_mails_destinatarios_w) = 'N') and (Obter_Se_Contido_char(ds_email_destinatario_w,ds_enviados_mail_w) = 'N'))then
				begin
					if (ds_mails_destinatarios_w IS NOT NULL AND ds_mails_destinatarios_w::text <> '') then
						ds_mails_destinatarios_w := ds_mails_destinatarios_w || ',';
					end if;
	
					ds_mails_destinatarios_w := ds_mails_destinatarios_w || ds_email_destinatario_w;
				end;
				end if;
				
				if (ds_email_usuario_destino_w IS NOT NULL AND ds_email_usuario_destino_w::text <> '') then
					ds_mails_destinatarios_w := ds_email_usuario_destino_w || '; ' || ds_mails_destinatarios_w;
				end if;
				ds_mails_destinatarios_w := replace(ds_mails_destinatarios_w,',',';');
				ds_mails_destinatarios_w := replace(ds_mails_destinatarios_w,';support.informatics@philips.com','');		
				
				if (ds_email_usuario_destino_w IS NOT NULL AND ds_email_usuario_destino_w::text <> '') and (ie_evento_p = 'AA') then
					begin
						CALL Enviar_Email(	ds_titulo_w,
								ds_comunicado_w,
								'support.informatics@philips.com',
								ds_email_usuario_destino_w,
								'Tasy','M');
					end;
				end if;
				
				if ((trim(both ds_mails_destinatarios_w) IS NOT NULL AND (trim(both ds_mails_destinatarios_w))::text <> '')) and (ie_evento_p <> 'AA') then
				begin
				
					while ((SUBSTR(ds_mails_destinatarios_w, -1) = ';') or (SUBSTR(ds_mails_destinatarios_w, -1) = ' ')) loop
						ds_mails_destinatarios_w := SUBSTR(ds_mails_destinatarios_w, 0, LENGTH(ds_mails_destinatarios_w) - 1);
					end loop;
				
					CALL Enviar_Email(	ds_titulo_w,
							ds_comunicado_w,
							'support.informatics@philips.com',
							ds_mails_destinatarios_w,
							'Tasy','M');
	
					ds_mails_destinatarios_w := replace(ds_mails_destinatarios_w,';',',');
					ds_enviados_mail_w := ds_enviados_mail_w || ',' || ds_mails_destinatarios_w;
				end;
				end if;
			end;
			end if;


			-- Envia comunicacao interna
			nm_nomes_destinatarios_w := ''; -- Garantia que nao vem usuario antigo
			
			if (ie_comunic_interna_w = 'S') then
			begin
				if	((nm_gerente_w IS NOT NULL AND nm_gerente_w::text <> '') and (Obter_Se_Contido_char(nm_gerente_w,nm_nomes_destinatarios_w) = 'N') and (Obter_Se_Contido_char(nm_gerente_w,ds_enviados_ci_w) = 'N')) then
				begin
					if (nm_nomes_destinatarios_w IS NOT NULL AND nm_nomes_destinatarios_w::text <> '') then
						nm_nomes_destinatarios_w := nm_nomes_destinatarios_w || ',';
					end if;

					nm_nomes_destinatarios_w := nm_nomes_destinatarios_w || nm_gerente_w;
				end;
				end if;

				if	((nm_coordenador_w IS NOT NULL AND nm_coordenador_w::text <> '') and (Obter_Se_Contido_char(nm_coordenador_w,nm_nomes_destinatarios_w) = 'N') and (Obter_Se_Contido_char(nm_coordenador_w,ds_enviados_ci_w) = 'N')) then
				begin
					if (nm_nomes_destinatarios_w IS NOT NULL AND nm_nomes_destinatarios_w::text <> '') then
						nm_nomes_destinatarios_w := nm_nomes_destinatarios_w || ',';
					end if;

					nm_nomes_destinatarios_w := nm_nomes_destinatarios_w || nm_coordenador_w;
				end;
				end if;				

				if	((nm_usuario_w IS NOT NULL AND nm_usuario_w::text <> '') and (Obter_Se_Contido_char(nm_usuario_w,nm_nomes_destinatarios_w) = 'N') and (Obter_Se_Contido_char(nm_usuario_w,ds_enviados_ci_w) = 'N')) then
				begin
					if (nm_nomes_destinatarios_w IS NOT NULL AND nm_nomes_destinatarios_w::text <> '') then
						nm_nomes_destinatarios_w := nm_nomes_destinatarios_w || ',' || nm_usuario_destino_w || ',';
					end if;

					nm_nomes_destinatarios_w := nm_nomes_destinatarios_w || nm_usuario_w;
				end;
				end if;			

				insert  into comunic_interna(
					dt_comunicado,
					ds_titulo,
					ds_comunicado,
					nm_usuario,
					dt_atualizacao,
					nr_sequencia,
					ie_gerencial,
					dt_liberacao,
					nm_usuario_destino)
				values (clock_timestamp(),
					ds_titulo_w,
					ds_comunicado_w,
					'Tasy',
					clock_timestamp(),
					nextval('comunic_interna_seq'),
					'N',
					clock_timestamp(),
					nm_nomes_destinatarios_w);
					
				ds_enviados_ci_w := ds_enviados_ci_w || ',' || nm_nomes_destinatarios_w || ',' || nm_usuario_destino_w;
			end;
			end if;
			end;
		end loop;
		close C02;
		end;
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_ci_novo_proj ( ie_evento_p text, nr_seq_projeto_p bigint, nm_usuario_p text, cd_gerente_p bigint default 0, cd_coordenador_p bigint default 0, nr_seq_canal_p bigint default 0, ds_campo_p text default null) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE envia_ci_novo_proj_atx ( ie_evento_p text, nr_seq_projeto_p bigint, nm_usuario_p text, cd_gerente_p bigint default 0, cd_coordenador_p bigint default 0, nr_seq_canal_p bigint default 0, ds_campo_p text default null) FROM PUBLIC;

