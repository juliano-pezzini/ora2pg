-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_regra_duplic_pf_html ( cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, dt_nascimento_p timestamp, nm_mae_p text, cd_estabelecimento_p bigint, ie_acao_p INOUT text, cd_perfil_p bigint, cd_rfc_p text, cd_curp_p text, ie_sexo_p text, sg_estado_nasc_p text, cd_pessoa_fisica_dupli_p INOUT text, nm_pessoa_fisica_dupli_p INOUT text, ie_rfc_duplic_p INOUT text, ie_curp_duplic_p INOUT text) AS $body$
DECLARE


nm_pessoa_param_w	varchar(255);
nm_mae_param_w		varchar(255);
cd_pessoa_duplic_w	varchar(255);
ie_acao_w			varchar(10);
ie_nome_mae_w		varchar(10);
ie_dt_nascimento_w	varchar(10);
ie_rfc_w					regra_duplic_pf.ie_rfc%type;
ie_estado_nascimento_w		regra_duplic_pf.ie_estado_nascimento%type;
ie_curp_w					regra_duplic_pf.ie_curp%type;
ie_sexo_w					regra_duplic_pf.ie_sexo%type;
ie_doc_generico_w			regra_duplic_pf.ie_doc_generico%type;
qt_documento_w				smallint;
ie_pais_w					varchar(15);
ie_rfc_ww					varchar(10);
ie_curp_ww					varchar(10);
cd_pessoa_fisica_ww		varchar(255);

/*
	Procedure utilizada nas funcoes:
		- Cadastro Completo de Pessoas - CorPes_F8
		- Cadastro Simplificado de Pessoas - CorPes_FB
		- Cadastro Medico - CorPes_F7
		- Cadastro de Funcionarios - CorPes_FF
*/
c02 CURSOR FOR
SELECT	ie_acao,
	ie_nome_mae,
	ie_dt_nascimento,
	coalesce(ie_rfc, 'N'),
	coalesce(ie_estado_nascimento, 'N'),
	coalesce(ie_curp, 'N'),
	coalesce(ie_sexo, 'N'),
	coalesce(ie_doc_generico, 'N')
from	regra_duplic_pf
where	cd_estabelecimento	= cd_estabelecimento_p
and	coalesce(cd_perfil, cd_perfil_p) = cd_perfil_p
order 	by coalesce(cd_perfil, 0);


BEGIN

	ie_pais_w := obter_nr_seq_locale(wheb_usuario_pck.get_nm_usuario);
	
	nm_pessoa_param_w	:= substr(padronizar_nome(nm_pessoa_fisica_p),1,60);
	nm_mae_param_w		:= substr(padronizar_nome(nm_mae_p),1,60);
	if (coalesce(ie_pais_w, '1') = '1') then --Brasil
	
		open c02;
		loop
		fetch c02 into
			ie_acao_w,
			ie_nome_mae_w,
			ie_dt_nascimento_w,
			ie_rfc_w,
			ie_estado_nascimento_w,
			ie_curp_w,
			ie_sexo_w,
			ie_doc_generico_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		end loop;
		close c02;
		
		if (ie_nome_mae_w = 'N') and (ie_dt_nascimento_w = 'N')	then
			
			select	max(a.cd_pessoa_fisica)
			into STRICT 	cd_pessoa_duplic_w
			from	pessoa_fisica a
			where	a.cd_pessoa_fisica 		<> cd_pessoa_fisica_p
			and	a.nm_pessoa_pesquisa		= upper(nm_pessoa_param_w)
			and	coalesce(ie_nome_mae_w,'N')		= 'N'
			and	coalesce(ie_dt_nascimento_w,'N')	= 'N'
			and	coalesce(ie_status_usuario_event,'A') <> 'I';
		
		elsif (ie_nome_mae_w = 'S') and (ie_dt_nascimento_w = 'S')	then

			select	max(a.cd_pessoa_fisica)
			into STRICT 	cd_pessoa_duplic_w
			from	compl_pessoa_fisica b,
				pessoa_fisica a
			where	b.ie_tipo_complemento		= 5
			and	b.cd_pessoa_fisica		= a.cd_pessoa_fisica
			and	a.cd_pessoa_fisica 		<> cd_pessoa_fisica_p
			and	a.dt_nascimento			= dt_nascimento_p
			and	a.nm_pessoa_pesquisa		= upper(nm_pessoa_param_w)
			and	b.nm_contato_pesquisa		= upper(nm_mae_param_w)
			and	coalesce(ie_nome_mae_w,'N')		= 'S'
			and	coalesce(ie_dt_nascimento_w,'N')	= 'S'
			and	coalesce(ie_status_usuario_event,'A') <> 'I';

		elsif (ie_nome_mae_w = 'N') and (ie_dt_nascimento_w = 'S')	then

			select	max(a.cd_pessoa_fisica)
			into STRICT 	cd_pessoa_duplic_w
			from	pessoa_fisica a
			where	a.cd_pessoa_fisica 		<> cd_pessoa_fisica_p
			and	a.nm_pessoa_pesquisa		= upper(nm_pessoa_param_w)
			and	a.dt_nascimento			= dt_nascimento_p
			and	coalesce(ie_dt_nascimento_w,'N')	= 'S'
			and	coalesce(ie_nome_mae_w,'N')		= 'N'
			and	coalesce(ie_status_usuario_event,'A') <> 'I';
		
		elsif (ie_nome_mae_w = 'S') and (ie_dt_nascimento_w = 'N')	then
			
			select	max(a.cd_pessoa_fisica)
			into STRICT 	cd_pessoa_duplic_w
			from	compl_pessoa_fisica b,
				pessoa_fisica a
			where	b.ie_tipo_complemento		= 5
			and	b.cd_pessoa_fisica		= a.cd_pessoa_fisica
			and	a.cd_pessoa_fisica 		<> cd_pessoa_fisica_p
			and	a.nm_pessoa_pesquisa		= upper(nm_pessoa_param_w)
			and	b.nm_contato_pesquisa		= upper(nm_mae_param_w)
			and	coalesce(ie_nome_mae_w,'N')		= 'S'
			and	coalesce(ie_dt_nascimento_w,'N')	= 'N'
			and	coalesce(ie_status_usuario_event,'A') <> 'I';
			
		end if;
		
	elsif (coalesce(ie_pais_w, '1') = '2') then --Mexico
	
		ie_curp_duplic_p := 'N';
		ie_rfc_duplic_p := 'N';
	
		if (cd_rfc_p IS NOT NULL AND cd_rfc_p::text <> '') then
			select 	count(nr_sequencia)
			into STRICT 	qt_documento_w
			from 	pf_documento_generico
			where 	nr_documento = cd_rfc_p
			and 	coalesce(ie_situacao, 'I') = 'A';
			
		end if;

		open c02;
		loop
		fetch c02 into
			ie_acao_w,
			ie_nome_mae_w,
			ie_dt_nascimento_w,
			ie_rfc_w,
			ie_estado_nascimento_w,
			ie_curp_w,
			ie_sexo_w,
			ie_doc_generico_w;
		EXIT WHEN NOT FOUND or (cd_pessoa_duplic_w IS NOT NULL AND cd_pessoa_duplic_w::text <> '');  /* apply on c02 */
	
			select	max(a.cd_pessoa_fisica)
			into STRICT 	cd_pessoa_duplic_w
			from	pessoa_fisica a
			where	a.cd_pessoa_fisica 		<> cd_pessoa_fisica_p
			--and	(a.nm_pessoa_pesquisa		= upper(nm_pessoa_param_w) or ie_rfc_w = 'S')
      and	 ((ie_dt_nascimento_w = 'S') and (a.dt_nascimento	= dt_nascimento_p or (coalesce(a.dt_nascimento::text, '') = '' and coalesce(dt_nascimento_p::text, '') = '')))
			and	(((ie_rfc_w = 'N' and (coalesce(cd_rfc_p::text, '') = '' or (ie_doc_generico_w = 'S' and qt_documento_w > 0)))
			or (ie_rfc_w = 'S' and a.cd_rfc = cd_rfc_p and ((ie_doc_generico_w = 'S' and qt_documento_w = 0) or ie_doc_generico_w = 'N'))))
			and (a.cd_curp					= cd_curp_p or (coalesce(a.cd_curp::text, '') = '' and coalesce(cd_curp_p::text, '') = '') or ie_curp_w = 'N')
			and (a.ie_sexo					= ie_sexo_p or (coalesce(a.ie_sexo::text, '') = '' and coalesce(ie_sexo_p::text, '') = '') or ie_sexo_w = 'N')
			and (a.sg_estado_nasc			= sg_estado_nasc_p or (coalesce(a.sg_estado_nasc::text, '') = '' and coalesce(sg_estado_nasc_p::text, '') = '') or ie_estado_nascimento_w = 'N')
			and (exists (
					SELECT b.cd_pessoa_fisica from compl_pessoa_fisica b where b.cd_pessoa_fisica = a.cd_pessoa_fisica and b.ie_tipo_complemento = 5 and b.nm_contato_pesquisa = upper(nm_mae_param_w)
				) or (not exists (
					SELECT b.cd_pessoa_fisica from compl_pessoa_fisica b where b.cd_pessoa_fisica = a.cd_pessoa_fisica and b.ie_tipo_complemento = 5 and b.nm_contato_pesquisa = upper(nm_mae_param_w)
				) and coalesce(nm_mae_param_w::text, '') = '')
				or ie_nome_mae_w = 'N')
			and	coalesce(ie_status_usuario_event,'A') <> 'I';
		
		if (ie_rfc_w = 'S') and (qt_documento_w = 0) then
			select max(CASE WHEN coalesce(a.cd_rfc::text, '') = '' THEN 'N'  ELSE 'S' END ), max(a.cd_pessoa_fisica)
			into STRICT 	ie_rfc_ww,
					cd_pessoa_fisica_ww
			from pessoa_fisica a
			where a.cd_rfc = cd_rfc_p
			and	a.cd_pessoa_fisica <> cd_pessoa_fisica_p;
		end if;
		
		if (ie_curp_w = 'S') then
			select max(CASE WHEN coalesce(a.cd_curp::text, '') = '' THEN 'N'  ELSE 'S' END ), coalesce(max(a.cd_pessoa_fisica),cd_pessoa_fisica_ww)
			into STRICT 	ie_curp_ww,
					cd_pessoa_fisica_ww
			from pessoa_fisica a
			where a.cd_curp = cd_curp_p
			and	a.cd_pessoa_fisica <> cd_pessoa_fisica_p;
		end if;

		end loop;
		close c02;
	
	end if;

	if (ie_curp_ww IS NOT NULL AND ie_curp_ww::text <> '') then
		ie_curp_duplic_p := ie_curp_ww;
	end if;
	if (ie_rfc_ww IS NOT NULL AND ie_rfc_ww::text <> '')then
		ie_rfc_duplic_p := ie_rfc_ww;
	end if;
	if (ie_acao_w IS NOT NULL AND ie_acao_w::text <> '') and ((cd_pessoa_fisica_ww IS NOT NULL AND cd_pessoa_fisica_ww::text <> '') or (cd_pessoa_duplic_w IS NOT NULL AND cd_pessoa_duplic_w::text <> ''))then
		ie_acao_p	:= ie_acao_w;
	end if;
	if (cd_pessoa_duplic_w IS NOT NULL AND cd_pessoa_duplic_w::text <> '') then
		cd_pessoa_fisica_dupli_p := cd_pessoa_duplic_w;
		select	max(nm_pessoa_fisica)
		into STRICT	nm_pessoa_fisica_dupli_p
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_duplic_w;
	end if;
	if (coalesce(cd_pessoa_duplic_w::text, '') = '') and (cd_pessoa_fisica_ww IS NOT NULL AND cd_pessoa_fisica_ww::text <> '') then
		cd_pessoa_fisica_dupli_p := cd_pessoa_fisica_ww;
		select	max(nm_pessoa_fisica)
		into STRICT	nm_pessoa_fisica_dupli_p
		from	pessoa_fisica
		where	cd_pessoa_fisica = cd_pessoa_fisica_ww;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_regra_duplic_pf_html ( cd_pessoa_fisica_p text, nm_pessoa_fisica_p text, dt_nascimento_p timestamp, nm_mae_p text, cd_estabelecimento_p bigint, ie_acao_p INOUT text, cd_perfil_p bigint, cd_rfc_p text, cd_curp_p text, ie_sexo_p text, sg_estado_nasc_p text, cd_pessoa_fisica_dupli_p INOUT text, nm_pessoa_fisica_dupli_p INOUT text, ie_rfc_duplic_p INOUT text, ie_curp_duplic_p INOUT text) FROM PUBLIC;

