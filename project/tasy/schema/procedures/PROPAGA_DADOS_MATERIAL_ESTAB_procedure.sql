-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE propaga_dados_material_estab ( cd_material_p text, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


/*Essa procedure copia os dados do estabelecimento logado e faz update em todos os outros estabelecimentos
SEMPRE QUE CRIAR UM NOVO CAMPO NA MATERIAL_ESTAB, DEVE SER COLOCADO NESTA PROCEDURE */
cd_estabelecimento_w	  	smallint;
ie_baixa_estoq_pac_w              	varchar(1);
ie_material_estoque_w           	  	varchar(1);
qt_estoque_minimo_w               	double precision;
qt_ponto_pedido_w               	  	double precision;
qt_estoque_maximo_w              	double precision;
qt_dia_interv_ressup_w            	smallint;
qt_dia_ressup_forn_w            	  	smallint;
qt_dia_estoque_minimo_w        	smallint;
nr_minimo_cotacao_w              	smallint;
qt_consumo_mensal_w            	double precision;
cd_material_conta_w               	integer;
cd_kit_material_w                	 	integer;
qt_peso_kg_w                    	 	double precision;
dt_atual_consumo_w               	timestamp;
qt_mes_consumo_w                	bigint;
ie_ressuprimento_w              		varchar(1);
ie_classif_custo_w              		varchar(1);
nr_registro_anvisa_w            		varchar(60);
ie_prescricao_w                 		varchar(1);
ie_padronizado_w                		varchar(1);
ie_estoque_lote_w               		varchar(1);
ie_requisicao_w                 		varchar(1);
ie_curva_xyz_w                  		varchar(1);
ie_controla_serie_w             		varchar(1);
dt_validade_reg_anvisa_w      	timestamp;
ie_unid_consumo_prescr_w    	varchar(1);
qt_desvio_padrao_cons_w     		double precision;
ie_farmacia_com_w               		varchar(1);
cd_unidade_venda_w             	varchar(30);
qt_conv_estoque_venda_w    	double precision;
qt_existe_w			bigint;
lista_estab_w			varchar(255);
ie_vigente_anvisa_w  	material_estab.ie_vigente_anvisa%type;

c01 CURSOR FOR
SELECT	cd_estabelecimento
from	estabelecimento
where	ie_situacao = 'A'
and	cd_estabelecimento <> cd_estabelecimento_p
and	((coalesce(lista_estab_w::text, '') = '') or
	((lista_estab_w IS NOT NULL AND lista_estab_w::text <> '') and (obter_se_contido(cd_estabelecimento, lista_estab_w) = 'S')));


BEGIN

lista_estab_w := Obter_Valor_Param_Usuario(132, 118, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p);

select	ie_baixa_estoq_pac,
	ie_material_estoque,
	qt_estoque_minimo,
	qt_ponto_pedido,
	qt_estoque_maximo,
	qt_dia_interv_ressup,
	qt_dia_ressup_forn,
	qt_dia_estoque_minimo,
	nr_minimo_cotacao,
	qt_consumo_mensal,
	cd_material_conta,
	cd_kit_material,
	qt_peso_kg,
	dt_atual_consumo,
	qt_mes_consumo,
	ie_ressuprimento,
	ie_classif_custo,
	nr_registro_anvisa,
	ie_prescricao,
	ie_padronizado,
	ie_estoque_lote,
	ie_requisicao,
	ie_curva_xyz,
	ie_controla_serie,
	dt_validade_reg_anvisa,
	ie_unid_consumo_prescr,
	qt_desvio_padrao_cons,
	ie_farmacia_com,
	cd_unidade_venda,
	qt_conv_estoque_venda,
	ie_vigente_anvisa
into STRICT	ie_baixa_estoq_pac_w,
	ie_material_estoque_w,
	qt_estoque_minimo_w,
	qt_ponto_pedido_w,
	qt_estoque_maximo_w,
	qt_dia_interv_ressup_w,
	qt_dia_ressup_forn_w,
	qt_dia_estoque_minimo_w,
	nr_minimo_cotacao_w,
	qt_consumo_mensal_w,
	cd_material_conta_w,
	cd_kit_material_w,
	qt_peso_kg_w,
	dt_atual_consumo_w,
	qt_mes_consumo_w,
	ie_ressuprimento_w,
	ie_classif_custo_w,
	nr_registro_anvisa_w,
	ie_prescricao_w,
	ie_padronizado_w,
	ie_estoque_lote_w,
	ie_requisicao_w,
	ie_curva_xyz_w,
	ie_controla_serie_w,
	dt_validade_reg_anvisa_w,
	ie_unid_consumo_prescr_w,
	qt_desvio_padrao_cons_w,
	ie_farmacia_com_w,
	cd_unidade_venda_w,
	qt_conv_estoque_venda_w,
	ie_vigente_anvisa_w
from	material_estab
where	cd_material = cd_material_p
and	cd_estabelecimento = cd_estabelecimento_p;

open C01;
loop
fetch C01 into
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	count(*)
	into STRICT	qt_existe_w
	from	material_estab
	where	cd_estabelecimento = cd_estabelecimento_w
	and	cd_material = cd_material_p;

	if (qt_existe_w > 0) then

		update		material_estab
		set		dt_atualizacao 			= clock_timestamp(),
				nm_usuario			= nm_usuario_p,
				ie_baixa_estoq_pac			= ie_baixa_estoq_pac_w,
				ie_material_estoque			= ie_material_estoque_w,
				qt_estoque_minimo			= qt_estoque_minimo_w,
				qt_ponto_pedido			= qt_ponto_pedido_w,
				qt_estoque_maximo			= qt_estoque_maximo_w,
				qt_dia_interv_ressup		= qt_dia_interv_ressup_w,
				qt_dia_ressup_forn			= qt_dia_ressup_forn_w,
				qt_dia_estoque_minimo		= qt_dia_estoque_minimo_w,
				nr_minimo_cotacao			= nr_minimo_cotacao_w,
				qt_consumo_mensal		= qt_consumo_mensal_w,
				cd_material_conta			= cd_material_conta_w,
				cd_kit_material			= cd_kit_material_w,
				qt_peso_kg			= qt_peso_kg_w,
				dt_atual_consumo			= dt_atual_consumo_w,
				qt_mes_consumo			= qt_mes_consumo_w,
				ie_ressuprimento			= ie_ressuprimento_w,
				dt_atualizacao_nrec		= clock_timestamp(),
				nm_usuario_nrec			= nm_usuario_p,
				ie_classif_custo			= ie_classif_custo_w,
				nr_registro_anvisa			= nr_registro_anvisa_w,
				ie_prescricao			= ie_prescricao_w,
				ie_padronizado			= ie_padronizado_w,
				ie_estoque_lote			= ie_estoque_lote_w,
				ie_requisicao			= ie_requisicao_w,
				ie_curva_xyz			= ie_curva_xyz_w,
				ie_controla_serie			= ie_controla_serie_w,
				dt_validade_reg_anvisa		= dt_validade_reg_anvisa_w,
				ie_unid_consumo_prescr		= ie_unid_consumo_prescr_w,
				qt_desvio_padrao_cons		= qt_desvio_padrao_cons_w,
				ie_farmacia_com			= ie_farmacia_com_w,
				cd_unidade_venda			= cd_unidade_venda_w,
				qt_conv_estoque_venda		= qt_conv_estoque_venda_w,
				ie_vigente_anvisa		= ie_vigente_anvisa_w
		where		cd_material			=  cd_material_p
		and		cd_estabelecimento 		= cd_estabelecimento_w;
	else
		insert into material_estab(
				nr_sequencia,
				cd_estabelecimento,
				cd_material,
				dt_atualizacao,
				nm_usuario,
				ie_baixa_estoq_pac,
				ie_material_estoque,
				qt_estoque_minimo,
				qt_ponto_pedido,
				qt_estoque_maximo,
				qt_dia_interv_ressup,
				qt_dia_ressup_forn,
				qt_dia_estoque_minimo,
				nr_minimo_cotacao,
				qt_consumo_mensal,
				cd_material_conta,
				cd_kit_material,
				qt_peso_kg,
				dt_atual_consumo,
				qt_mes_consumo,
				ie_ressuprimento,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				ie_classif_custo,
				nr_registro_anvisa,
				ie_prescricao,
				ie_padronizado,
				ie_estoque_lote,
				ie_requisicao,
				ie_curva_xyz,
				ie_controla_serie,
				dt_validade_reg_anvisa,
				ie_unid_consumo_prescr,
				qt_desvio_padrao_cons,
				ie_farmacia_com,
				cd_unidade_venda,
				qt_conv_estoque_venda,
				ie_vigente_anvisa)
		values (		nextval('material_estab_seq'),
				cd_estabelecimento_w,
				cd_material_p,
				clock_timestamp(),
				nm_usuario_p,
				ie_baixa_estoq_pac_w,
				ie_material_estoque_w,
				qt_estoque_minimo_w,
				qt_ponto_pedido_w,
				qt_estoque_maximo_w,
				qt_dia_interv_ressup_w,
				qt_dia_ressup_forn_w,
				qt_dia_estoque_minimo_w,
				nr_minimo_cotacao_w,
				qt_consumo_mensal_w,
				cd_material_conta_w,
				cd_kit_material_w,
				qt_peso_kg_w,
				dt_atual_consumo_w,
				qt_mes_consumo_w,
				ie_ressuprimento_w,
				clock_timestamp(),
				nm_usuario_p,
				ie_classif_custo_w,
				nr_registro_anvisa_w,
				ie_prescricao_w,
				ie_padronizado_w,
				ie_estoque_lote_w,
				ie_requisicao_w,
				ie_curva_xyz_w,
				ie_controla_serie_w,
				dt_validade_reg_anvisa_w,
				ie_unid_consumo_prescr_w,
				qt_desvio_padrao_cons_w,
				ie_farmacia_com_w,
				cd_unidade_venda_w,
				qt_conv_estoque_venda_w,
				ie_vigente_anvisa_w);
	end if;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE propaga_dados_material_estab ( cd_material_p text, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

