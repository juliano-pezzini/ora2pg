-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desvincultar_retorno_convenio (nr_seq_retorno_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_receb_w		bigint;
nr_adiantamento_w	bigint;
vl_vinculacao_w		double precision;
vl_saldo_w		double precision;
vl_recebimento_w	double precision;
ie_limpa_dt_baixa_w	varchar(2) := 'N';
cd_estabelecimento_w	smallint;
vl_cambial_passivo_w	double precision;
nr_seq_ret_item_w	bigint;

nr_seq_ret_estorno_w	convenio_retorno.nr_sequencia%type;

C01 CURSOR FOR
SELECT 	a.nr_seq_receb,
	a.vl_vinculacao,
	b.nr_adiantamento,
	b.cd_estabelecimento
from 	convenio_receb b,
	convenio_ret_receb a
where	a.nr_seq_receb	= b.nr_sequencia
and	a.nr_seq_retorno	= nr_seq_retorno_p;

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	coalesce(a.vl_cambial_passivo,0)
from	convenio_retorno_item a
where	a.nr_seq_retorno	= nr_seq_retorno_p;


BEGIN

if coalesce(nr_seq_retorno_p, 0) > 0 then
	begin
		select	coalesce(nr_sequencia, 0)
		into STRICT	nr_seq_ret_estorno_w
		from	convenio_retorno
		where	nr_seq_ret_origem = nr_seq_retorno_p;
	exception
	when others then
		nr_seq_ret_estorno_w := 0;
	end;
	
	if	nr_seq_ret_estorno_w > 0 then
		/*
			Retorno utilizado como base para desdobramento de recebimento parcial. Para prosseguir sera necessario estornar ou excluir a sequencia de retorno: #@NR_RETORNO#@
		*/
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1125860, 'NR_RETORNO='||nr_seq_ret_estorno_w);
	end if;
	
end if;

OPEN C01;
LOOP
FETCH C01 into
	nr_seq_receb_w,
	vl_vinculacao_w,
	nr_adiantamento_w,
	cd_estabelecimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	select	(vl_recebimento - obter_baixa_conrece(nr_sequencia))::numeric ,
		vl_recebimento
	into STRICT 	vl_saldo_w,
		vl_recebimento_w
	from 	convenio_receb
	where	nr_sequencia = nr_seq_receb_w;

	if ((vl_recebimento_w) > (vl_saldo_w + vl_vinculacao_w)) then

		update convenio_receb
		set ie_status = 'P'
		where 	nr_sequencia  = nr_seq_receb_w;

	else
		update convenio_receb
		set ie_status = 'N'
		where 	nr_sequencia  = nr_seq_receb_w;
	end if;


	delete FROM convenio_ret_receb
	where nr_seq_retorno = nr_seq_retorno_p
	and   nr_seq_receb   = nr_seq_receb_w;

	CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null);

	end;
END LOOP;
CLOSE C01;

/* ahoffelder - OS 232438 - 21/07/2010 */

open	c02;
loop
fetch	c02 into
	nr_seq_ret_item_w,
	vl_cambial_passivo_w;
EXIT WHEN NOT FOUND; /* apply on c02 */

	update	convenio_retorno_item
	set	vl_pago			= coalesce(vl_pago,0) + coalesce(vl_cambial_passivo_w,0),
		vl_juros		 = NULL,
		vl_cambial_ativo	 = NULL,
		vl_cambial_passivo	 = NULL,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_sequencia		= nr_seq_ret_item_w;

end	loop;
close	c02;

ie_limpa_dt_baixa_w := Obter_Param_Usuario(27, 101, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_limpa_dt_baixa_w);

if (ie_limpa_dt_baixa_w = 'N') then
	update 	convenio_retorno
	set 	ie_status_retorno = 'C',
		dt_vinculacao 	 = NULL,
		nm_usuario	= nm_usuario_p
	where nr_sequencia = nr_seq_retorno_p;
else
	update 	convenio_retorno
	set 	ie_status_retorno = 'C',
		dt_vinculacao 	 = NULL,
		dt_baixa_cr 	 = NULL,
		nm_usuario	= nm_usuario_p
	where nr_sequencia = nr_seq_retorno_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desvincultar_retorno_convenio (nr_seq_retorno_p bigint, nm_usuario_p text) FROM PUBLIC;

