-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_rpc ( nr_seq_lote_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/*	ie_opcao_p
	G - Gerar
	D - Desfazer
*/
dt_inicial_w			timestamp;
dt_final_w			timestamp;
nr_seq_lote_reajuste_w		bigint;
nr_seq_contrato_ww		pls_contrato.nr_sequencia%type;
nr_seq_reajuste_w		pls_reajuste.nr_sequencia%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
qt_registro_w			bigint;
ds_justificativa_w		pls_reajuste.ds_justificativa%type;
nr_seq_reajuste_prog_w		pls_prog_reaj_coletivo.nr_sequencia%type;
ie_caracteristica_w		pls_reajuste.ie_caracteristica%type;
dt_reajuste_w			timestamp;
dt_liberacao_w			pls_reajuste.dt_reajuste%type;
dt_aplicacao_reajuste_w		pls_reajuste.dt_aplicacao_reajuste%type;
nr_contrato_w			bigint;
ie_numero_contrato_w		varchar(2);
nr_contrato_arquivo_w		pls_rpc_contrato.nr_contrato_arquivo%type;
cd_cgc_outorgante_w		varchar(14);
cd_cooperativa_w		varchar(10);
tx_reajuste_w			pls_prog_reaj_coletivo.tx_reajuste_programado%type;
ie_gerar_franquia_w		varchar(1);
cd_operadora_empresa_w		bigint;
qt_benef_ativo_w		bigint;
cd_cod_anterior_w		pls_contrato.cd_cod_anterior%type;
ie_reajuste_w			varchar(1);
ds_mes_reaj_contrato_w		varchar(2);
nr_seq_tipo_reajuste_w		bigint;
dt_reajuste_contrato_w		timestamp;
qt_beneficiarios_w		bigint;
qt_beneficiarios_aux_w		bigint;
dt_referencia_qt_vidas_w	timestamp;
dt_mes_reajuste_negociacao_w	timestamp;
qt_rpc_contrato_w		integer := 0;
ie_tipo_reajuste_w		varchar(255);
tx_deflator_w			double precision;
tx_reajuste_correto_w		pls_reajuste.tx_reajuste_correto%type;
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
ie_reajuste_retif_w		varchar(1);
cd_grupo_relac_reaj_w		pls_grupo_contrato.cd_grupo%type;
ie_codigo_grupo_relac_w		pls_regra_rpc.ie_codigo_grupo_relac%type;
qt_vidas_w			pls_prog_reaj_coletivo.qt_vidas%type;
nr_seq_grupo_contrato_w		pls_grupo_contrato.nr_sequencia%type;
nr_mes_reajuste_w		pls_grupo_contrato.nr_mes_reajuste%type;
ie_produto_sem_benef_ativo_w	pls_regra_rpc.ie_produto_sem_benef_ativo%type;
qt_produto_ativo_w		bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_contrato,
		a.dt_reajuste,
		a.dt_liberacao,
		a.dt_aplicacao_reajuste,
		coalesce(a.tx_reajuste,0),
		a.nr_seq_tipo_reajuste,
		a.ie_caracteristica,
		a.ds_justificativa,
		CASE WHEN coalesce(a.tx_deflator::text, '') = '' THEN 'P'  ELSE 'N' END  ie_tipo_reajuste,
		coalesce(a.tx_deflator,0) tx_deflator,
		a.tx_reajuste_correto
	from	pls_reajuste a,
		pls_contrato b
	where	a.nr_seq_contrato	= b.nr_sequencia
	and	a.ie_tipo_reajuste	= 'C'
	and	b.ie_tipo_operacao	= 'B'
	and	(a.nr_seq_lote_deflator IS NOT NULL AND a.nr_seq_lote_deflator::text <> '')
	and	coalesce(a.tx_deflator,0) = 0
	and	not exists (	SELECT	1
				from	pls_reajuste z
				where	z.nr_sequencia = a.nr_seq_lote_deflator
				and	trunc(coalesce(z.dt_aplicacao_reajuste,z.dt_reajuste),'mm') = trunc(coalesce(a.dt_aplicacao_reajuste,a.dt_reajuste),'mm'))
	and	((a.dt_reajuste < a.dt_aplicacao_reajuste and a.dt_aplicacao_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and  a.dt_aplicacao_reajuste <= coalesce(dt_final_w,a.dt_reajuste))	or (a.dt_reajuste >= coalesce(a.dt_aplicacao_reajuste, a.dt_reajuste) and a.dt_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and a.dt_reajuste <= coalesce(dt_final_w,a.dt_reajuste)))--So pode ser mandado para a ANS se tiver aplicado o reajuste, ou a data de reajuste for maior que a de aplicacao.
	and	((a.nr_sequencia = nr_seq_lote_reajuste_w) or (a.nr_seq_lote_referencia = nr_seq_lote_reajuste_w) or (coalesce(nr_seq_lote_reajuste_w::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_ww) or (coalesce(nr_seq_contrato_ww, 0) = 0))
	and	exists (select	1 --Verificar se existe produto pre-estabelecido para o reajuste
			from	pls_reajuste_tabela x,
				pls_plano y
			where	x.nr_seq_plano = y.nr_sequencia
			and	x.nr_seq_reajuste = a.nr_sequencia
			and	y.ie_preco = '1'
			and	y.ie_tipo_operacao = 'B')
	and	not exists (	select	1
				from	pls_rpc_lote		y,
					pls_rpc_contrato	x
				where	y.nr_sequencia		= x.nr_seq_lote
				and	x.nr_seq_contrato	= b.nr_sequencia
				and	x.nr_seq_reajuste	= a.nr_sequencia)
	and	coalesce(b.ie_contrato_ex_funcionario,'N') = 'N'
	and	b.cd_estabelecimento = cd_estabelecimento_p
	
union all

	select	a.nr_sequencia,
		a.nr_seq_contrato,
		a.dt_reajuste,
		a.dt_liberacao,
		a.dt_aplicacao_reajuste,
		coalesce(a.tx_reajuste,0),
		a.nr_seq_tipo_reajuste,
		a.ie_caracteristica,
		a.ds_justificativa,
		CASE WHEN coalesce(a.tx_deflator::text, '') = '' THEN 'P'  ELSE 'N' END  ie_tipo_reajuste,
		coalesce(a.tx_deflator,0) tx_deflator,
		a.tx_reajuste_correto
	from	pls_reajuste a,
		pls_contrato b
	where	a.nr_seq_contrato	= b.nr_sequencia
	and	a.ie_tipo_reajuste	= 'C'
	and	b.ie_tipo_operacao	= 'B'
	and	coalesce(nr_seq_lote_deflator::text, '') = ''
	and (coalesce(a.tx_deflator,0) = 0 or a.tx_reajuste_correto <> 0)
	and	((a.dt_reajuste < a.dt_aplicacao_reajuste and a.dt_aplicacao_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and  a.dt_aplicacao_reajuste <= coalesce(dt_final_w,a.dt_reajuste))	or (a.dt_reajuste >= coalesce(a.dt_aplicacao_reajuste, a.dt_reajuste) and a.dt_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and a.dt_reajuste <= coalesce(dt_final_w,a.dt_reajuste)))--So pode ser mandado para a ANS se tiver aplicado o reajuste, ou a data de reajuste for maior que a de aplicacao.
	and	((a.nr_sequencia = nr_seq_lote_reajuste_w) or (a.nr_seq_lote_referencia = nr_seq_lote_reajuste_w) or (coalesce(nr_seq_lote_reajuste_w::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_ww) or (coalesce(nr_seq_contrato_ww, 0) = 0))
	and	exists (select	1 --Verificar se existe produto pre-estabelecido para o reajuste
			from	pls_reajuste_tabela x,
				pls_plano y
			where	x.nr_seq_plano = y.nr_sequencia
			and	x.nr_seq_reajuste = a.nr_sequencia
			and	y.ie_preco = '1'
			and	y.ie_tipo_operacao = 'B')
	and	not exists (	select	1
				from	pls_rpc_lote		y,
					pls_rpc_contrato	x
				where	y.nr_sequencia		= x.nr_seq_lote
				and	x.nr_seq_contrato	= b.nr_sequencia
				and	x.nr_seq_reajuste	= a.nr_sequencia)
	and	coalesce(b.ie_contrato_ex_funcionario,'N') = 'N'
	and	b.cd_estabelecimento = cd_estabelecimento_p
	
union all
  --Deflator aplicado apos a competencia do reajuste (Caso a aplicacao seja diferente do mes do reajuste)
	select	a.nr_sequencia,
		a.nr_seq_contrato,
		a.dt_reajuste,
		a.dt_liberacao,
		a.dt_aplicacao_reajuste,
		coalesce(a.tx_reajuste,0),
		a.nr_seq_tipo_reajuste,
		a.ie_caracteristica,
		a.ds_justificativa,
		CASE WHEN coalesce(a.tx_deflator::text, '') = '' THEN 'P'  ELSE 'N' END  ie_tipo_reajuste,
		coalesce(a.tx_deflator,0) tx_deflator,
		a.tx_reajuste_correto
	from	pls_reajuste a,
		pls_contrato b
	where	a.nr_seq_contrato	= b.nr_sequencia
	and	a.ie_tipo_reajuste	= 'C'
	and	b.ie_tipo_operacao	= 'B'
	and	coalesce(nr_seq_lote_deflator::text, '') = ''
	and	coalesce(a.tx_deflator,0) <> 0
	and	a.tx_reajuste_correto = 0
	and	exists (	select	1
			from	pls_reajuste x
			where	x.nr_seq_lote_deflator = a.nr_sequencia
			and	trunc(coalesce(x.dt_aplicacao_reajuste,x.dt_reajuste),'mm') <> trunc(coalesce(a.dt_aplicacao_reajuste,a.dt_reajuste),'mm'))
	and	((a.dt_reajuste < a.dt_aplicacao_reajuste and a.dt_aplicacao_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and  a.dt_aplicacao_reajuste <= coalesce(dt_final_w,a.dt_reajuste))	or (a.dt_reajuste >= coalesce(a.dt_aplicacao_reajuste, a.dt_reajuste) and a.dt_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and a.dt_reajuste <= coalesce(dt_final_w,a.dt_reajuste)))--So pode ser mandado para a ANS se tiver aplicado o reajuste, ou a data de reajuste for maior que a de aplicacao.
	and	((a.nr_sequencia = nr_seq_lote_reajuste_w) or (a.nr_seq_lote_referencia = nr_seq_lote_reajuste_w) or (coalesce(nr_seq_lote_reajuste_w::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_ww) or (coalesce(nr_seq_contrato_ww, 0) = 0))
	and	exists (select	1 --Verificar se existe produto pre-estabelecido para o reajuste
			from	pls_reajuste_tabela x,
				pls_plano y
			where	x.nr_seq_plano = y.nr_sequencia
			and	x.nr_seq_reajuste = a.nr_sequencia
			and	y.ie_preco = '1'
			and	y.ie_tipo_operacao = 'B')
	and	not exists (	select	1
				from	pls_rpc_lote		y,
					pls_rpc_contrato	x
				where	y.nr_sequencia		= x.nr_seq_lote
				and	x.nr_seq_contrato	= b.nr_sequencia
				and	x.nr_seq_reajuste	= a.nr_sequencia)
	and	coalesce(b.ie_contrato_ex_funcionario,'N') = 'N'
	and	b.cd_estabelecimento = cd_estabelecimento_p
	
union all
  --Reajuste nao aplicado
	select	a.nr_sequencia,
		a.nr_seq_contrato,
		a.dt_reajuste,
		a.dt_liberacao,
		a.dt_aplicacao_reajuste,
		coalesce(a.tx_reajuste,0),
		a.nr_seq_tipo_reajuste,
		a.ie_caracteristica,
		a.ds_justificativa,
		CASE WHEN coalesce(a.tx_deflator::text, '') = '' THEN 'P'  ELSE 'N' END  ie_tipo_reajuste,
		coalesce(a.tx_deflator,0) tx_deflator,
		a.tx_reajuste_correto
	from	pls_reajuste a,
		pls_contrato b
	where	a.nr_seq_contrato	= b.nr_sequencia
	and	a.ie_tipo_reajuste	= 'C'
	and	b.ie_tipo_operacao	= 'B'
	and	a.ie_reaj_nao_aplicado	= 'S'
	and	coalesce(a.tx_deflator,0) = 0
	and	not exists (	select	1
				from	pls_reajuste z
				where	z.nr_sequencia = a.nr_seq_lote_deflator
				and	trunc(z.dt_reajuste,'mm') = trunc(a.dt_reajuste,'mm'))
	and	((a.dt_reajuste < a.dt_aplicacao_reajuste and a.dt_aplicacao_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and  a.dt_aplicacao_reajuste <= coalesce(dt_final_w,a.dt_reajuste))	or (a.dt_reajuste >= coalesce(a.dt_aplicacao_reajuste, a.dt_reajuste) and a.dt_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and a.dt_reajuste <= coalesce(dt_final_w,a.dt_reajuste)))--So pode ser mandado para a ANS se tiver aplicado o reajuste, ou a data de reajuste for maior que a de aplicacao.
	and	((a.nr_sequencia = nr_seq_lote_reajuste_w) or (a.nr_seq_lote_referencia = nr_seq_lote_reajuste_w) or (coalesce(nr_seq_lote_reajuste_w::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_ww) or (coalesce(nr_seq_contrato_ww, 0) = 0))
	and	not exists (	select	1
				from	pls_rpc_lote		y,
					pls_rpc_contrato	x
				where	y.nr_sequencia		= x.nr_seq_lote
				and	x.nr_seq_contrato	= b.nr_sequencia
				and	x.nr_seq_reajuste	= a.nr_sequencia)
	and	coalesce(b.ie_contrato_ex_funcionario,'N') = 'N'
	and	b.cd_estabelecimento = cd_estabelecimento_p
	
union all
  --Reajuste do contrato de ex funcionario onde o contrato principal esta rescindido sem sofrer reajuste
	select	a.nr_sequencia,
		a.nr_seq_contrato,
		a.dt_reajuste,
		a.dt_liberacao,
		a.dt_aplicacao_reajuste,
		coalesce(a.tx_reajuste,0),
		a.nr_seq_tipo_reajuste,
		a.ie_caracteristica,
		a.ds_justificativa,
		CASE WHEN coalesce(a.tx_deflator::text, '') = '' THEN 'P'  ELSE 'N' END  ie_tipo_reajuste,
		coalesce(a.tx_deflator,0) tx_deflator,
		a.tx_reajuste_correto
	from	pls_reajuste a,
		pls_contrato b
	where	a.nr_seq_contrato	= b.nr_sequencia
	and	a.ie_tipo_reajuste	= 'C'
	and	b.ie_tipo_operacao	= 'B'
	and	coalesce(a.nr_seq_lote_deflator::text, '') = ''
	and	(b.nr_contrato_principal IS NOT NULL AND b.nr_contrato_principal::text <> '')
	and (coalesce(a.tx_deflator,0) = 0 or a.tx_reajuste_correto <> 0)
	and	((a.dt_reajuste < a.dt_aplicacao_reajuste and a.dt_aplicacao_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and  a.dt_aplicacao_reajuste <= coalesce(dt_final_w,a.dt_reajuste))	or (a.dt_reajuste >= coalesce(a.dt_aplicacao_reajuste, a.dt_reajuste) and a.dt_reajuste >= coalesce(dt_inicial_w,a.dt_reajuste) and a.dt_reajuste <= coalesce(dt_final_w,a.dt_reajuste)))--So pode ser mandado para a ANS se tiver aplicado o reajuste, ou a data de reajuste for maior que a de aplicacao.
	and	((a.nr_sequencia = nr_seq_lote_reajuste_w) or (a.nr_seq_lote_referencia = nr_seq_lote_reajuste_w) or (coalesce(nr_seq_lote_reajuste_w::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_ww) or (coalesce(nr_seq_contrato_ww, 0) = 0))
	and	exists (select	1 --Verificar se existe produto pre-estabelecido para o reajuste
			from	pls_reajuste_tabela x,
				pls_plano y
			where	x.nr_seq_plano = y.nr_sequencia
			and	x.nr_seq_reajuste = a.nr_sequencia
			and	y.ie_preco = '1'
			and	y.ie_tipo_operacao = 'B')
	and	not exists (	select	1
				from	pls_rpc_lote		y,
					pls_rpc_contrato	x
				where	y.nr_sequencia		= x.nr_seq_lote
				and	x.nr_seq_contrato	= b.nr_sequencia
				and	x.nr_seq_reajuste	= a.nr_sequencia)
	and	coalesce(b.ie_contrato_ex_funcionario,'N') = 'S'
	and	not exists (	select	1
				from	pls_reajuste x
				where	x.nr_seq_contrato = b.nr_contrato_principal
				and	x.dt_reajuste between coalesce(dt_inicial_w,a.dt_reajuste) and coalesce(dt_final_w,a.dt_reajuste))
	and	b.cd_estabelecimento = cd_estabelecimento_p;

--Enviar no RPC os reajustes que estao em negociacao e ainda nao foram finalizados
C02 CURSOR FOR  --Negociacao
	SELECT	b.nr_sequencia,
		b.nr_seq_contrato,
		coalesce(b.dt_reajuste,a.dt_mes_reajuste),
		coalesce(b.tx_reajuste_programado,0),
		b.qt_vidas
	from	pls_prog_reaj_colet_lote a,
		pls_prog_reaj_coletivo b
	where	a.nr_sequencia = b.nr_seq_lote
	and	a.dt_mes_reajuste >= coalesce(dt_inicial_w,dt_reajuste)
	and	a.dt_mes_reajuste <= coalesce(dt_final_w,dt_reajuste)
	and	((coalesce(b.nr_seq_reajuste::text, '') = '') or (b.dt_reajuste > dt_final_w))
	and	((b.nr_seq_contrato = nr_seq_contrato_ww) or (coalesce(nr_seq_contrato_ww, 0) = 0))
	and	not exists (	SELECT	1
				from	pls_reajuste x
				where	x.nr_seq_contrato = b.nr_seq_contrato
				and	trunc(x.dt_reajuste,'month') = trunc(a.dt_mes_reajuste,'month')
				and	((coalesce(x.nr_seq_lote_deflator::text, '') = '' and coalesce(x.tx_reajuste_correto::text, '') = '') or x.tx_reajuste_correto <> 0)
				and	x.ie_status = '2')
	and	exists (select	1 --Verificar se existe produto pre-estabelecido para o reajuste
			from	pls_contrato_plano x,
				pls_plano y
			where	x.nr_seq_plano = y.nr_sequencia
			and	x.nr_seq_contrato = b.nr_seq_contrato
			and	y.ie_preco = '1'
			and	y.ie_tipo_operacao = 'B')
	and	not exists (	select	1
				from	pls_rpc_contrato x
				where	x.nr_seq_contrato	= b.nr_seq_contrato
				and	x.nr_seq_lote		= nr_seq_lote_p)
	and	coalesce(nr_seq_lote_reajuste_w::text, '') = ''
	and	a.cd_estabelecimento = cd_estabelecimento_p;


BEGIN
if (ie_opcao_p = 'G') then
	begin
	select	trunc(dt_inicial,'dd'),
		CASE WHEN coalesce(dt_final::text, '') = '' THEN null  ELSE fim_dia(dt_final) END ,
		nr_seq_lote_reajuste,
		nr_seq_contrato
	into STRICT	dt_inicial_w,
		dt_final_w,
		nr_seq_lote_reajuste_w,
		nr_seq_contrato_ww
	from	pls_rpc_lote
	where	nr_sequencia	= nr_seq_lote_p;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188578, null); --Falta informar os parametros para a geracao do lote!
	end;
	
	select	max(cd_cgc_outorgante)
	into STRICT	cd_cgc_outorgante_w
	from	pls_outorgante
	where	cd_estabelecimento	= cd_estabelecimento_p;
	
	select	max(cd_cooperativa)
	into STRICT	cd_cooperativa_w
	from	pls_congenere
	where	cd_cgc	= cd_cgc_outorgante_w;
	
	open C01;
	loop
	fetch C01 into
		nr_seq_reajuste_w,
		nr_seq_contrato_w,
		dt_reajuste_w,
		dt_liberacao_w,
		dt_aplicacao_reajuste_w,
		tx_reajuste_w,
		nr_seq_tipo_reajuste_w,
		ie_caracteristica_w,
		ds_justificativa_w,
		ie_tipo_reajuste_w,
		tx_deflator_w,
		tx_reajuste_correto_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		dt_mes_reajuste_negociacao_w	:= null;
		
		if (nr_seq_reajuste_w IS NOT NULL AND nr_seq_reajuste_w::text <> '') then
			select	max(b.dt_mes_reajuste),
				max(a.qt_vidas)
			into STRICT	dt_mes_reajuste_negociacao_w,
				qt_vidas_w
			from	pls_prog_reaj_coletivo		a,
				pls_prog_reaj_colet_lote	b
			where	b.nr_sequencia		= a.nr_seq_lote
			and	a.nr_seq_reajuste	= nr_seq_reajuste_w;
		end if;
		
		if (dt_mes_reajuste_negociacao_w IS NOT NULL AND dt_mes_reajuste_negociacao_w::text <> '') then
			dt_reajuste_w		:= dt_mes_reajuste_negociacao_w;
		end if;
		
		select	count(1)
		into STRICT	qt_benef_ativo_w
		from	pls_segurado
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_reajuste_w))  LIMIT 1;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_rpc_contrato
		where	nr_seq_lote	= nr_seq_lote_p
		and	nr_seq_contrato	= nr_seq_contrato_w
		and	nr_seq_reajuste	= nr_seq_reajuste_w;
		
		if (coalesce(qt_registro_w,0) = 0) and (coalesce(qt_benef_ativo_w,0) > 0) then
			select	max(nr_contrato),
				max(cd_operadora_empresa),
				max(cd_cod_anterior),
				max(ie_reajuste),
				coalesce(max(dt_reajuste),max(dt_contrato))
			into STRICT	nr_contrato_w,
				cd_operadora_empresa_w,
				cd_cod_anterior_w,
				ie_reajuste_w,
				dt_reajuste_contrato_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w;
			
			select	max(nr_sequencia),
				max(cd_grupo),
				max(nr_mes_reajuste)
			into STRICT	nr_seq_grupo_contrato_w,
				cd_grupo_relac_reaj_w,
				nr_mes_reajuste_w
			from	pls_grupo_contrato
			where	nr_sequencia = (SELECT	max(a.nr_sequencia)
						from	pls_grupo_contrato a,
							pls_contrato_grupo b
						where	a.nr_sequencia	= b.nr_seq_grupo
						and	(a.cd_grupo IS NOT NULL AND a.cd_grupo::text <> '')
						and	b.nr_seq_contrato = nr_seq_contrato_w);
			
			ds_mes_reaj_contrato_w	:= pls_obter_mes_reaj_contrato(nr_seq_contrato_w,null,'MM');
			
			if (ie_reajuste_w = 'C') or
				((ie_reajuste_w = 'A') and (ds_mes_reaj_contrato_w = to_char(dt_reajuste_w,'MM'))) then
				select	max(b.ie_regulamentacao)
				into STRICT	ie_regulamentacao_w
				from	pls_contrato_plano	a,
					pls_plano		b
				where	a.nr_seq_plano		= b.nr_sequencia
				and	a.nr_seq_contrato	= nr_seq_contrato_w
				and	a.ie_situacao		= 'A';
				
				if (coalesce(ie_regulamentacao_w::text, '') = '') then
					select	max(b.ie_regulamentacao)
					into STRICT	ie_regulamentacao_w
					from	pls_contrato_plano	a,
						pls_plano		b
					where	a.nr_seq_plano		= b.nr_sequencia
					and	a.nr_seq_contrato	= nr_seq_contrato_w;
				end if;
				
				if (coalesce(ie_caracteristica_w::text, '') = '') and (coalesce(ds_justificativa_w::text, '') = '') then
					if (nr_seq_tipo_reajuste_w IS NOT NULL AND nr_seq_tipo_reajuste_w::text <> '') then
						begin
						select	ds_justificativa,
							ie_caracteristica
						into STRICT	ds_justificativa_w,
							ie_caracteristica_w
						from	pls_tipo_reajuste
						where	nr_sequencia	= nr_seq_tipo_reajuste_w;
						exception
						when others then
							ds_justificativa_w	:= null;
							ie_caracteristica_w	:= null;
						end;
					else
						begin
						select	ds_justificativa,
							ie_caracteristica
						into STRICT	ds_justificativa_w,
							ie_caracteristica_w
						from	pls_prog_reaj_coletivo a,
							pls_tipo_reajuste b
						where	a.nr_seq_tipo_reajuste	= b.nr_sequencia
						and	a.nr_seq_reajuste	= nr_seq_reajuste_w;
						exception
						when others then
							ds_justificativa_w	:= null;
							ie_caracteristica_w	:= null;
						end;
					end if;
				end if;
				
				begin
				select	coalesce(ds_justificativa_w,ds_justificativa),
					ie_numero_contrato,
					coalesce(ie_caracteristica_w,ie_caracteristica),
					coalesce(ie_gerar_franquia,'S'),
					coalesce(ie_codigo_grupo_relac,'N'),
					coalesce(ie_produto_sem_benef_ativo,'N')
				into STRICT	ds_justificativa_w,
					ie_numero_contrato_w,
					ie_caracteristica_w,
					ie_gerar_franquia_w,
					ie_codigo_grupo_relac_w,
					ie_produto_sem_benef_ativo_w
				from	pls_regra_rpc a
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	dt_reajuste_w between coalesce(dt_inicio_vigencia,dt_reajuste_w) and coalesce(dt_fim_vigencia,dt_reajuste_w)
				and	tx_reajuste_w	between coalesce(pr_reajuste_inicial,tx_reajuste_w) and coalesce(pr_reajuste_final,tx_reajuste_w)
				and	((a.ie_regulamentacao = ie_regulamentacao_w) or (coalesce(a.ie_regulamentacao::text, '') = ''));
				
				exception
				when others then
					ie_numero_contrato_w	:= 'C';
					ie_gerar_franquia_w	:= 'S';
				end;
				
				if (tx_reajuste_correto_w = 0) and (tx_deflator_w <> 0)
					and (coalesce(ds_justificativa_w::text, '') = '') and (coalesce(ie_caracteristica_w::text, '') = '') then
					select	max(ds_justificativa),
						max(ie_caracteristica)
					into STRICT	ds_justificativa_w,
						ie_caracteristica_w
					from	pls_tipo_reajuste
					where	ie_deflator		= 'S'
					and	cd_estabelecimento	= cd_estabelecimento_p;
				end if;
				
				if (ie_produto_sem_benef_ativo_w = 'S')then
					select	count(1)
					into STRICT	qt_produto_ativo_w
					from	pls_contrato_plano	a,
						pls_plano		b
					where	a.nr_seq_plano		= b.nr_sequencia
					and	a.nr_seq_contrato	= nr_seq_contrato_w
					and (coalesce(a.dt_inativacao::text, '') = '' or a.dt_inativacao > dt_reajuste_w);
				end if;
				
				if (ie_codigo_grupo_relac_w = 'S') and (cd_grupo_relac_reaj_w IS NOT NULL AND cd_grupo_relac_reaj_w::text <> '') then
					nr_contrato_arquivo_w	:= cd_grupo_relac_reaj_w;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'C') then
					nr_contrato_arquivo_w	:= nr_contrato_w;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'CC') then
					nr_contrato_arquivo_w	:= cd_cooperativa_w || nr_contrato_w;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'CE') then
					if (length(cd_operadora_empresa_w) < 4) then
						nr_contrato_arquivo_w	:= lpad((cd_cooperativa_w)::numeric ,3,0) ||' '|| lpad(cd_operadora_empresa_w,4,'0');
					else
						nr_contrato_arquivo_w	:= lpad((cd_cooperativa_w)::numeric ,3,0) ||' '|| cd_operadora_empresa_w;
					end if;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'CA') then
					nr_contrato_arquivo_w	:= coalesce(cd_cod_anterior_w,nr_contrato_w);
				end if;
				
				ds_justificativa_w	:= replace(ds_justificativa_w,'@DT_REAJUSTE_MMYYYY',coalesce(lpad(nr_mes_reajuste_w, 2, '0'), to_char(dt_reajuste_contrato_w,'MM'))||'/'||to_char(dt_reajuste_w,'YYYY'));
				ds_justificativa_w	:= replace(ds_justificativa_w,'@DT_LIBERACAO_MMYYYY',to_char(dt_liberacao_w,'MM/YYYY'));
				ds_justificativa_w	:= replace(ds_justificativa_w,'@DT_APLICACAO_MMYYYY',to_char(dt_aplicacao_reajuste_w,'MM/YYYY'));
				--ds_justificativa_w	:= replace(ds_justificativa_w,'@QT_VIDAS',qt_vidas_w); O replace e feito na rotina PLS_GERAR_RPC
				
				begin
				select	fim_dia(last_day(add_months(dt_reajuste,-1)))
				into STRICT	dt_referencia_qt_vidas_w
				from	pls_reajuste
				where	nr_sequencia	= nr_seq_reajuste_w;
				exception
					when others then
						dt_referencia_qt_vidas_w	:= null;
				end;
				
				select	count(1)
				into STRICT	qt_beneficiarios_w
				from	pls_segurado	x,
					pls_plano	b,
					(SELECT	a.cd_scpa,
						a.nr_protocolo_ans,
						a.nr_sequencia
					from	pls_contrato_plano	b,
						pls_plano		a
					where	a.nr_sequencia		= b.nr_seq_plano
					and	b.nr_seq_contrato	= nr_seq_contrato_w)	y
				where	b.nr_sequencia		= x.nr_seq_plano
				and	b.nr_sequencia		= y.nr_sequencia
				and	x.nr_seq_contrato	= nr_seq_contrato_w
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
				and	((coalesce(x.dt_rescisao::text, '') = '') or (x.dt_rescisao > dt_referencia_qt_vidas_w))
				and	x.dt_contratacao <= dt_referencia_qt_vidas_w
				and	((b.cd_scpa = y.cd_scpa) or (coalesce(y.cd_scpa::text, '') = ''))
				and	((b.nr_protocolo_ans = y.nr_protocolo_ans) or (coalesce(y.nr_protocolo_ans::text, '') = ''));
				
				select	count(1)
				into STRICT	qt_beneficiarios_aux_w
				from	pls_contrato y,
					pls_segurado z
				where	z.nr_seq_contrato = y.nr_sequencia
				and	y.cd_contrato_principal = nr_contrato_w
				and	coalesce(y.ie_contrato_ex_funcionario,'N') = 'S';
				
				qt_beneficiarios_w := qt_beneficiarios_w + qt_beneficiarios_aux_w;
				
				if (qt_beneficiarios_w > 0 or (ie_produto_sem_benef_ativo_w = 'S' and qt_produto_ativo_w > 0)) then
					ie_reajuste_retif_w := pls_obter_se_reajuste_retific(nr_seq_reajuste_w);
					
					if (ie_reajuste_retif_w = 'S')	then
						ds_justificativa_w := wheb_mensagem_pck.get_texto(1111940);
					end if;
					
					insert	into	pls_rpc_contrato(	nr_sequencia, nr_seq_lote, nr_seq_contrato, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_reajuste, ds_justificativa, ie_caracteristica,
						nr_contrato_arquivo, ie_gerar_franquia, nr_seq_grupo_contrato)
					values (	nextval('pls_rpc_contrato_seq'), nr_seq_lote_p, nr_seq_contrato_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, nr_seq_reajuste_w, ds_justificativa_w, ie_caracteristica_w,
						nr_contrato_arquivo_w, ie_gerar_franquia_w, nr_seq_grupo_contrato_w);
				end if;
			end if;
		end if;
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into
		nr_seq_reajuste_prog_w,
		nr_seq_contrato_w,
		dt_reajuste_w,
		tx_reajuste_w,
		qt_vidas_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	count(1)
		into STRICT	qt_benef_ativo_w
		from	pls_segurado
		where	nr_seq_contrato	= nr_seq_contrato_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_reajuste_w))  LIMIT 1;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	pls_rpc_contrato
		where	nr_seq_lote		= nr_seq_lote_p
		and	nr_seq_contrato		= nr_seq_contrato_w
		and	nr_seq_reajuste_prog	= nr_seq_reajuste_prog_w;
		
		if (coalesce(qt_registro_w,0) = 0) and (coalesce(qt_benef_ativo_w,0) > 0) then
			
			select	max(nr_contrato),
				max(cd_operadora_empresa),
				max(cd_cod_anterior),
				max(ie_reajuste),
				coalesce(max(dt_reajuste),max(dt_contrato))
			into STRICT	nr_contrato_w,
				cd_operadora_empresa_w,
				cd_cod_anterior_w,
				ie_reajuste_w,
				dt_reajuste_contrato_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_w;
			
			select	max(nr_sequencia),
				max(cd_grupo),
				max(nr_mes_reajuste)
			into STRICT	nr_seq_grupo_contrato_w,
				cd_grupo_relac_reaj_w,
				nr_mes_reajuste_w
			from	pls_grupo_contrato
			where	nr_sequencia = (SELECT	max(a.nr_sequencia)
						from	pls_grupo_contrato a,
							pls_contrato_grupo b
						where	a.nr_sequencia	= b.nr_seq_grupo
						and	(a.cd_grupo IS NOT NULL AND a.cd_grupo::text <> '')
						and	b.nr_seq_contrato = nr_seq_contrato_w);
			
			ds_mes_reaj_contrato_w	:= pls_obter_mes_reaj_contrato(nr_seq_contrato_w,null,'MM');
			
			if (ie_reajuste_w = 'C') or
				((ie_reajuste_w = 'A') and (ds_mes_reaj_contrato_w = to_char(dt_reajuste_w,'MM'))) then
				begin
				select	max(b.ie_regulamentacao)
				into STRICT	ie_regulamentacao_w
				from	pls_contrato_plano	a,
					pls_plano		b
				where	a.nr_seq_plano		= b.nr_sequencia
				and	a.nr_seq_contrato	= nr_seq_contrato_w;
				
				select	max(ds_justificativa),
					max(ie_caracteristica)
				into STRICT	ds_justificativa_w,
					ie_caracteristica_w
				from	pls_tipo_reajuste
				where	coalesce(ie_negociacao,'N')	= 'S'
				and	cd_estabelecimento	= cd_estabelecimento_p;
				exception
				when others then
					ds_justificativa_w	:= null;
					ie_caracteristica_w	:= null;
				end;
				
				begin
				select	coalesce(ds_justificativa_w,ds_justificativa),
					ie_numero_contrato,
					coalesce(ie_caracteristica_w,ie_caracteristica),
					coalesce(ie_gerar_franquia,'S'),
					coalesce(ie_codigo_grupo_relac,'N'),
					coalesce(ie_produto_sem_benef_ativo,'N')
				into STRICT	ds_justificativa_w,
					ie_numero_contrato_w,
					ie_caracteristica_w,
					ie_gerar_franquia_w,
					ie_codigo_grupo_relac_w,
					ie_produto_sem_benef_ativo_w
				from	pls_regra_rpc a
				where	cd_estabelecimento	= cd_estabelecimento_p
				and	dt_reajuste_w between coalesce(dt_inicio_vigencia,dt_reajuste_w) and coalesce(dt_fim_vigencia,dt_reajuste_w)
				and	tx_reajuste_w	between coalesce(pr_reajuste_inicial,tx_reajuste_w) and coalesce(pr_reajuste_final,tx_reajuste_w)
				and	((a.ie_regulamentacao = ie_regulamentacao_w) or (coalesce(a.ie_regulamentacao::text, '') = ''));
				exception
				when others then
					ie_numero_contrato_w	:= 'C';
					ie_gerar_franquia_w	:= 'S';
				end;
				
				if (ie_produto_sem_benef_ativo_w = 'S')then
					select	count(1)
					into STRICT	qt_produto_ativo_w
					from	pls_contrato_plano	a,
						pls_plano		b
					where	a.nr_seq_plano		= b.nr_sequencia
					and	a.nr_seq_contrato	= nr_seq_contrato_w
					and (coalesce(a.dt_inativacao::text, '') = '' or a.dt_inativacao > dt_reajuste_w);
				end if;
				
				if (ie_codigo_grupo_relac_w = 'S') and (cd_grupo_relac_reaj_w IS NOT NULL AND cd_grupo_relac_reaj_w::text <> '') then
					nr_contrato_arquivo_w	:= cd_grupo_relac_reaj_w;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'C') then
					nr_contrato_arquivo_w	:= nr_contrato_w;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'CC') then
					nr_contrato_arquivo_w	:= cd_cooperativa_w || nr_contrato_w;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'CE') then
					if (length(cd_operadora_empresa_w) < 4) then
						nr_contrato_arquivo_w	:= lpad((cd_cooperativa_w)::numeric ,3,0) ||' '|| lpad(cd_operadora_empresa_w,4,'0');
					else
						nr_contrato_arquivo_w	:= lpad((cd_cooperativa_w)::numeric ,3,0) ||' '|| cd_operadora_empresa_w;
					end if;
				elsif (coalesce(ie_numero_contrato_w,'C')	= 'CA') then
					nr_contrato_arquivo_w	:= coalesce(cd_cod_anterior_w,nr_contrato_w);
				end if;
				
				ds_justificativa_w	:= replace(ds_justificativa_w,'@DT_REAJUSTE_MMYYYY',coalesce(lpad(nr_mes_reajuste_w, 2, '0'),to_char(dt_reajuste_contrato_w,'MM'))||'/'||to_char(dt_reajuste_w,'YYYY'));
				ds_justificativa_w	:= replace(ds_justificativa_w,'@QT_VIDAS',qt_vidas_w);
				-- As macros DT_LIBERACAO_MMYYYY e DT_APLICACAO_MMYYYY nao sao tratadas para negociacao, pois o reajuste ainda nao foi liberado ou aplicado
				
				begin
				select	fim_dia(last_day(add_months(coalesce(a.dt_reajuste,b.dt_mes_reajuste),-1)))
				into STRICT	dt_referencia_qt_vidas_w
				from	pls_prog_reaj_coletivo		a,
					pls_prog_reaj_colet_lote	b
				where	b.nr_sequencia	= a.nr_seq_lote
				and	a.nr_sequencia	= nr_seq_reajuste_prog_w;
				exception
				when others then
					dt_referencia_qt_vidas_w	:= null;
				end;
				
				select	count(1)
				into STRICT	qt_beneficiarios_w
				from	pls_segurado	x,
					pls_plano	b,
					(SELECT	a.cd_scpa,
						a.nr_protocolo_ans,
						a.nr_sequencia
					from	pls_contrato_plano	b,
						pls_plano		a
					where	a.nr_sequencia		= b.nr_seq_plano
					and	b.nr_seq_contrato	= nr_seq_contrato_w)	y
				where	b.nr_sequencia		= x.nr_seq_plano
				and	b.nr_sequencia		= y.nr_sequencia
				and	x.nr_seq_contrato	= nr_seq_contrato_w
				and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
				and	((coalesce(x.dt_rescisao::text, '') = '') or (x.dt_rescisao > dt_referencia_qt_vidas_w))
				and	x.dt_contratacao <= dt_referencia_qt_vidas_w
				and	((b.cd_scpa = y.cd_scpa) or (coalesce(y.cd_scpa::text, '') = ''))
				and	((b.nr_protocolo_ans = y.nr_protocolo_ans) or (coalesce(y.nr_protocolo_ans::text, '') = ''));
				
				select	count(1)
				into STRICT	qt_beneficiarios_aux_w
				from	pls_contrato y,
					pls_segurado z
				where	z.nr_seq_contrato = y.nr_sequencia
				and	y.cd_contrato_principal = nr_contrato_w
				and	coalesce(y.ie_contrato_ex_funcionario,'N') = 'S';
				
				if (qt_beneficiarios_w > 0 or (ie_produto_sem_benef_ativo_w = 'S' and qt_produto_ativo_w > 0)) then
					insert	into	pls_rpc_contrato(	nr_sequencia, nr_seq_lote, nr_seq_contrato, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_reajuste_prog, ds_justificativa, ie_caracteristica,
						nr_contrato_arquivo, ie_gerar_franquia, nr_seq_grupo_contrato)
					values (	nextval('pls_rpc_contrato_seq'), nr_seq_lote_p, nr_seq_contrato_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, nr_seq_reajuste_prog_w, ds_justificativa_w, ie_caracteristica_w,
						nr_contrato_arquivo_w, ie_gerar_franquia_w, nr_seq_grupo_contrato_w);
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;
	
	select	count(1)
	into STRICT	qt_rpc_contrato_w
	
	where	exists (SELECT	1
			from	pls_rpc_contrato
			where	nr_seq_lote = nr_seq_lote_p);
	
	if (qt_rpc_contrato_w > 0) then
		CALL pls_gerar_rpc(nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p);
	end if;
elsif (ie_opcao_p	= 'D') then
	delete	from	pls_rpc_arquivo
	where	nr_seq_lote	= nr_seq_lote_p;
	
	delete	from	pls_rpc_contrato
	where	nr_seq_lote	= nr_seq_lote_p;
elsif (ie_opcao_p	= 'DE') then
	delete	from	pls_rpc_arquivo
	where	nr_seq_lote	= nr_seq_lote_p;
	
	delete	from	pls_rpc_contrato
	where	nr_seq_lote	= nr_seq_lote_p;
	
	update	pls_rpc_lote
	set	nm_arquivo	 = NULL
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_rpc ( nr_seq_lote_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

