-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_produto_lactario ( nr_seq_leite_deriv_p bigint, nm_usuario_p text, cd_perfil_p bigint) AS $body$
DECLARE


nr_sequencia_1_w			bigint;
nr_sequencia_2_w			bigint;
nr_prescricao_w				bigint;
cd_intervalo_w				varchar(7);
ds_horarios_w				varchar(2000);
ie_se_necessario_w			varchar(3);
qt_volume_total_w			double precision;
qt_dose_diluente_w			double precision;
qt_dose_w					double precision;
qt_porcentagem_w			prescr_material.qt_porcentagem%type;
ie_prescr_mat_sem_lib_w		varchar(30);
cd_estabelecimento_w		smallint;
hr_prim_horario_w			varchar(5);
ie_gerar_dose_w				varchar(5);

nr_ocorrencia_w				prescr_material.nr_ocorrencia%type;
qt_unitaria_w				prescr_material.qt_unitaria%type;
qt_conversao_dose_w			prescr_material.qt_conversao_dose%type;
cd_unidade_medida_dose_w	prescr_material.cd_unidade_medida_dose%type;
qt_material_w				prescr_material.qt_material%type;
qt_total_dispensar_w		prescr_material.qt_total_dispensar%type;
cd_material_w				prescr_material.cd_material%type;
ie_via_aplicacao_w			prescr_material.ie_via_aplicacao%type;
ie_origem_inf_w				prescr_material.ie_origem_inf%type;
ie_acm_w					prescr_material.ie_acm%type;
ie_regra_disp_w				prescr_material.ie_regra_disp%type;
nr_prescricao_original_w	prescr_material.nr_prescricao_original%type;
ie_via_aplicacao_ww			prescr_material.ie_via_aplicacao%type;	

ds_erro_w					varchar(4000);

C01 CURSOR FOR
	SELECT	nr_sequencia,
			nr_ocorrencia,
			cd_material,
			coalesce(cd_unidade_medida_dose,cd_unidade_medida),
			ie_via_aplicacao,
			ie_origem_inf,
			qt_material,
			nr_prescricao_original			
	from	prescr_material
	where	nr_seq_leite_deriv	= nr_seq_leite_deriv_p
	and		nr_prescricao		= nr_prescricao_w	
	and		ie_agrupador		= 16;
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
			coalesce(qt_porcentagem,0),
			coalesce(qt_dose,0),
			cd_material,
			coalesce(cd_unidade_medida_dose,cd_unidade_medida),
			ie_via_aplicacao,
			ie_origem_inf,
			qt_material
	from	prescr_material
	where	nr_sequencia_diluicao	= nr_sequencia_1_w
	and		nr_prescricao		= nr_prescricao_w
	and		ie_agrupador		= 17;

BEGIN

select	max(nr_prescricao),
		max(cd_intervalo),
		max(ds_horarios),
		max(ie_se_necessario),
		max(qt_volume_total),
		max(hr_prim_horario),
		max(ie_via_aplicacao)
into STRICT	nr_prescricao_w,
		cd_intervalo_w,
		ds_horarios_w,
		ie_se_necessario_w,
		qt_volume_total_w,
		hr_prim_horario_w,
		ie_via_aplicacao_ww
from	prescr_leite_deriv
where	nr_sequencia	= nr_seq_leite_deriv_p;

select	coalesce(max(cd_estabelecimento),1)
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_w;

ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);
ie_gerar_dose_w := Obter_Param_Usuario(924, 1134, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_gerar_dose_w);

open C01;
loop
fetch C01 into	
	nr_sequencia_1_w,
	nr_ocorrencia_w,
	cd_material_w,
	cd_unidade_medida_dose_w,
	ie_via_aplicacao_w,
	ie_origem_inf_w,
	qt_material_w,
	nr_prescricao_original_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_dose_w	:= qt_volume_total_w;
	if (ie_gerar_dose_w = 'N') and (coalesce(nr_prescricao_original_w::text, '') = '') then
		qt_dose_w	:= null;
	end if;
	
	qt_conversao_dose_w		:= coalesce(obter_conversao_unid_med(cd_material_w, cd_unidade_medida_dose_w),0);
	
	if (qt_conversao_dose_w > 0) and (coalesce(qt_dose_w,0) > 0)then
		qt_unitaria_w		:= dividir(qt_dose_w, qt_conversao_dose_w);
	else
		qt_conversao_dose_w	:= 0;
		qt_unitaria_w		:= 0;
	end if;

	if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') and (upper(trim(both ds_horarios_w)) not in ('ACM','SN')) then
		nr_ocorrencia_w		:= obter_ocorrencias_horarios_rep(ds_horarios_w);
	end if;
	
	if (ie_via_aplicacao_ww = 'OS') then		
		ie_via_aplicacao_ww := null;		
	end if;
	
	SELECT * FROM obter_quant_dispensar(	cd_estabelecimento_w, cd_material_w, nr_prescricao_w, nr_sequencia_1_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, '', ie_origem_inf_w, cd_unidade_medida_dose_w, 0, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
	
	update	prescr_material
	set		cd_intervalo		= cd_intervalo_w,
			ds_horarios			= ds_horarios_w,
			ie_se_necessario	= ie_se_necessario_w,
			qt_dose				= qt_dose_w,
			qt_conversao_dose	= qt_conversao_dose_w,
			hr_prim_horario		= hr_prim_horario_w,
			nr_ocorrencia		= nr_ocorrencia_w,
			qt_material			= coalesce(qt_material_w,0),
			qt_unitaria			= coalesce(qt_unitaria_w,0),
			qt_total_dispensar	= coalesce(qt_total_dispensar_w,0),
			ie_via_leite		= coalesce(ie_via_aplicacao_ww, ie_via_leite)
	where	nr_sequencia		= nr_sequencia_1_w
	and		nr_prescricao		= nr_prescricao_w;
	
	
	
	if (ie_prescr_mat_sem_lib_w = 'S') THEN
		CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_w, nr_sequencia_1_w, cd_perfil_p, 'N', nm_usuario_p, null);		
	end if;	
	
	open C02;
	loop
	fetch C02 into	
		nr_sequencia_2_w,
		qt_porcentagem_w,
		qt_dose_diluente_w,
		cd_material_w,
		cd_unidade_medida_dose_w,
		ie_via_aplicacao_w,
		ie_origem_inf_w,
		qt_material_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		begin
		if (qt_dose_diluente_w <> 0) then
			qt_porcentagem_w	:= trunc(((qt_dose_diluente_w * 100) / qt_volume_total_w));
		else
			qt_dose_diluente_w	:= (qt_porcentagem_w * (qt_volume_total_w / 100));
		end if;	
		exception when others then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(241180);
			--'Ocorreu uma excessão ao calcular os valores das nutrições. Verifique o cadastro do protocolo de dietas. #@#@');
		end;
		
		qt_conversao_dose_w		:= coalesce(obter_conversao_unid_med(cd_material_w, cd_unidade_medida_dose_w),0);

		if (qt_conversao_dose_w > 0) and (coalesce(qt_dose_diluente_w,0) > 0)then
			qt_unitaria_w		:= dividir(qt_dose_diluente_w, qt_conversao_dose_w);
		else
			qt_conversao_dose_w	:= 0;
			qt_unitaria_w		:= 0;
		end if;
		
		SELECT * FROM obter_quant_dispensar(	cd_estabelecimento_w, cd_material_w, nr_prescricao_w, nr_sequencia_1_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, '', ie_origem_inf_w, cd_unidade_medida_dose_w, 0, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
	
		update	prescr_material
		set		cd_intervalo		= cd_intervalo_w,
				ds_horarios			= ds_horarios_w,
				ie_se_necessario	= ie_se_necessario_w,
				qt_dose				= qt_dose_diluente_w,
				hr_prim_horario		= hr_prim_horario_w,
				nr_ocorrencia		= nr_ocorrencia_w,
				qt_conversao_dose	= qt_conversao_dose_w,
				qt_unitaria			= coalesce(qt_unitaria_w,0),
				qt_material			= coalesce(qt_material_w,0),
				qt_total_dispensar	= coalesce(qt_total_dispensar_w,0)
		where	nr_sequencia		= nr_sequencia_2_w
		and		nr_prescricao		= nr_prescricao_w;
		
		
	
		if (ie_prescr_mat_sem_lib_w = 'S') THEN		
			CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_w, nr_sequencia_2_w, cd_perfil_p, 'N', nm_usuario_p, null);
		end if;			
		end;
	end loop;
	close C02;	
	
	end;
end loop;
close C01;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

ds_erro_w := Consistir_prod_leites_deriv(nr_prescricao_w, null, nr_seq_leite_deriv_p, nm_usuario_p, cd_perfil_p, ds_erro_w);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_produto_lactario ( nr_seq_leite_deriv_p bigint, nm_usuario_p text, cd_perfil_p bigint) FROM PUBLIC;

