-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_agenda_col_beforepost ( dt_referencia_p timestamp, hr_inicio_p timestamp, dt_validade_carteira_p timestamp, cd_estabelecimento_p bigint, cd_agenda_p bigint, cd_convenio_p bigint, qt_peso_paciente_p bigint, qt_altura_paciente_p bigint, nr_seq_proc_interno_p bigint, nr_seq_agenda_p bigint, nr_minuto_duracao_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text, cd_medico_p text, nr_doc_convenio_p text, cd_pessoa_fisica_p text, cd_usuario_convenio_p text, cd_categoria_p text, cd_anestesista_p text, nm_usuario_p text, ie_peso_p INOUT text, ie_altura_p INOUT text, ie_msg_quest_prior_p INOUT text, ds_erro_categ_conv_p INOUT text, ds_consist_categ_conv_p INOUT text, ds_consiste_prior_msg_p INOUT text, ie_obter_se_proc_anest_p INOUT text, ds_pergunta_anestesia_p INOUT text) AS $body$
DECLARE

		 
ie_medico_w			varchar(1);
ie_erro_w 			varchar(1000);
ie_consiste_w 			varchar(1);
ie_obter_se_proc_anest_w	varchar(1) := 'N';
ds_pergunta_anestesia_w		varchar(255);
ds_consiste_prioridade_w	varchar(255);
qt_dias_consistencia_w		bigint;

BEGIN
if (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') and (cd_anestesista_p IS NOT NULL AND cd_anestesista_p::text <> '') then 
	begin 
	ie_medico_w := obter_se_medico(cd_medico_p, 'M');
	if (ie_medico_w = 'N') then 
		begin 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(49229);
		end;
	end if;
	ie_medico_w := obter_se_medico(cd_anestesista_p, 'M');
	if (ie_medico_w = 'N') then 
		begin 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(49233);
		end;
	end if;	
	 
	if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') then 
		begin 
		if (qt_peso_paciente_p IS NOT NULL AND qt_peso_paciente_p::text <> '') then 
			begin 
			ie_peso_p := consistir_peso_paciente_exame(cd_agenda_p, qt_peso_paciente_p, ie_peso_p);
			end;
		end if;
		if (qt_altura_paciente_p IS NOT NULL AND qt_altura_paciente_p::text <> '') then 
			begin 
			ie_altura_p := consistir_altura_pac_exame(cd_agenda_p, qt_altura_paciente_p, ie_altura_p);
			end;
		end if;
		if (ie_peso_p = 'S') and (ie_altura_p = 'S') then 
			begin 
			 
			if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') and (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') and (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') and (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then 
				begin 
				CALL consistir_regra_agenda_grupo( 
					cd_agenda_p, 
					dt_referencia_p, 
					nr_seq_proc_interno_p, 
					nr_seq_agenda_p, 
					nm_usuario_p, 
					cd_estabelecimento_p, 
					0);
 
				if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (hr_inicio_p IS NOT NULL AND hr_inicio_p::text <> '') then 
					begin 
					/*[349] - Quantidade de dias passados a considerar na consistÃªncia da regra de prioridade*/
 
					qt_dias_consistencia_w	:= obter_valor_param_usuario(820,349,wheb_usuario_pck.get_cd_perfil,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);
					ie_erro_w := ag_exame_se_consiste_prior( 
						nr_seq_agenda_p, 
						cd_pessoa_fisica_p, 
						hr_inicio_p, 
						nr_seq_proc_interno_p, 
						cd_estabelecimento_p, 
						qt_dias_consistencia_w);
					ds_consiste_prioridade_w := obter_valor_param_usuario(820,294,wheb_usuario_pck.get_cd_perfil,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento);
					if (ie_erro_w IS NOT NULL AND ie_erro_w::text <> '') then 
						begin 
						if (ds_consiste_prioridade_w = 'B') then 
							begin 
							CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ie_erro_w);
							end;
						elsif (ds_consiste_prioridade_w = 'I') then 
							begin 
							ie_msg_quest_prior_p	:= 'N';
							ds_consiste_prior_msg_p := ie_erro_w;
							end;
						elsif (ds_consiste_prioridade_W = 'Q') then 
							begin 
							ie_msg_quest_prior_p	:= 'S';
							ds_consiste_prior_msg_p := obter_texto_dic_objeto(43229,wheb_usuario_pck.get_nr_seq_idioma,'DS_ERRO='||ie_erro_w);
							end;
						end if;
						end;
					end if;
					 
					if (nr_minuto_duracao_p IS NOT NULL AND nr_minuto_duracao_p::text <> '') then 
						begin 
						ie_consiste_w := consiste_tempo_exames_ag_exame( 
							cd_agenda_p, 
							hr_inicio_p, 
							nr_minuto_duracao_p, 
							nr_seq_proc_interno_p, 
							nr_seq_agenda_p, 
							cd_pessoa_fisica_p, 
							nm_usuario_p);
							 
						if (ie_consiste_w = 'N') then 
							begin 
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(54856);
							end;
						end if;
						end;
					end if;					
					end;
				end if;
				end;
			end if;				
			end;
		end if;
		end;
	end if;
	end;		
end if;
 
ie_obter_se_proc_anest_w := obter_se_proc_anest(nr_seq_proc_interno_p,null,null);
 
ds_pergunta_anestesia_w := substr(obter_texto_tasy(80881, wheb_usuario_pck.get_nr_seq_idioma),1,255);
 
ie_consiste_w := Obter_Param_Usuario(820, 288, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, cd_estabelecimento_p, ie_consiste_w);
if (ie_consiste_w = 'S') then 
	begin 
	SELECT * FROM consiste_categoria_conv_agenda( 
			cd_convenio_p, cd_plano_p, null, nr_doc_convenio_p, dt_validade_carteira_p, cd_usuario_convenio_p, ds_erro_categ_conv_p, ds_consist_categ_conv_p, cd_categoria_p, ie_tipo_atendimento_p, 820, cd_estabelecimento_p, nm_usuario_p) INTO STRICT ds_erro_categ_conv_p, ds_consist_categ_conv_p;
	end;
end if;
 
ie_obter_se_proc_anest_p	:= ie_obter_se_proc_anest_w;
ds_pergunta_anestesia_p		:= ds_pergunta_anestesia_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_agenda_col_beforepost ( dt_referencia_p timestamp, hr_inicio_p timestamp, dt_validade_carteira_p timestamp, cd_estabelecimento_p bigint, cd_agenda_p bigint, cd_convenio_p bigint, qt_peso_paciente_p bigint, qt_altura_paciente_p bigint, nr_seq_proc_interno_p bigint, nr_seq_agenda_p bigint, nr_minuto_duracao_p bigint, ie_tipo_atendimento_p bigint, cd_plano_p text, cd_medico_p text, nr_doc_convenio_p text, cd_pessoa_fisica_p text, cd_usuario_convenio_p text, cd_categoria_p text, cd_anestesista_p text, nm_usuario_p text, ie_peso_p INOUT text, ie_altura_p INOUT text, ie_msg_quest_prior_p INOUT text, ds_erro_categ_conv_p INOUT text, ds_consist_categ_conv_p INOUT text, ds_consiste_prior_msg_p INOUT text, ie_obter_se_proc_anest_p INOUT text, ds_pergunta_anestesia_p INOUT text) FROM PUBLIC;

