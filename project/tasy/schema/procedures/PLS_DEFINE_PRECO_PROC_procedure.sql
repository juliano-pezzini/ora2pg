-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_define_preco_proc ((cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_categoria_p bigint, dt_guia_p timestamp, cd_edicao_p bigint, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_tipo_acomodacao_p bigint, nr_seq_tipo_atendimento_p bigint, nr_seq_clinica_p bigint, nr_seq_plano_p bigint, ie_tipo_tabela_p text, nr_seq_contrato_p bigint, nr_seq_outorgante_p bigint, nr_seq_procedimento_p bigint, ie_gravar_log_p text, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_contratacao_p text, qt_dias_internacao_p bigint, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_contrato_intercambio_p text, ds_parametro_tres_p text, nr_seq_classificacao_prest_p bigint, cd_medico_p text, ie_internado_p text, ie_tecnica_utilizada_p text, ie_tipo_guia_p text, ie_tipo_intercambio_p text, sg_uf_operadora_intercambio_p text, nr_seq_cbo_saude_p bigint, ie_carater_internacao_p text, dt_procedimento_p timestamp, ie_tipo_acomodacao_ptu_p text, nr_seq_rp_combinada_p pls_rp_cta_combinada.nr_sequencia%type, dados_prestador_prot_p pls_cta_valorizacao_pck.dados_prestador_prot, dados_guia_req_p pls_cta_valorizacao_pck.dados_guia, dados_conta_p pls_cta_valorizacao_pck.dados_conta, dados_regra_preco_proc_p INOUT pls_cta_valorizacao_pck.dados_regra_preco_proc, ie_tipo_beneficiario_p pls_regra_preco_proc.ie_tipo_segurado%type default null, nr_seq_cbo_saude_solic_p pls_regra_preco_proc.nr_seq_cbo_saude_solic%type default null, ie_regime_atendimento_p pls_regra_preco_proc.ie_regime_atendimento%type default null, ie_regime_atendimento_princ_p pls_regra_preco_proc.ie_regime_atendimento_princ%type default null, ie_saude_ocupacional_p pls_regra_preco_proc.ie_saude_ocupacional%type default null) is  --tipo de beneficiario passado por parametro pela funcao da consulta de preco
 ie_origem_proced_w procedimento.ie_origem_proced%type) AS $body$
DECLARE

	PERFORM	coalesce(a.nr_sequencia,0) nr_sequencia,  
		a.nr_seq_grupo_servico,       
		coalesce(a.nr_seq_grupo_prestador,0) nr_seq_grupo_prestador, 
		a.nr_seq_grupo_contrato,      
		a.nr_seq_grupo_produto,       
		a.nr_seq_cbhpm_edicao,
		a.ie_proc_tabela,
		a.nr_seq_categoria_plano,
		a.nr_seq_regra_atend_cart,
		a.cd_especialidade_prest,
		a.ie_ch_padrao_anestesista,
		a.nr_seq_grupo_operadora,
		a.cd_moeda_tabela,
		a.nr_seq_grupo_med_exec,
		a.cd_prestador_partic,
		coalesce(a.ie_gerar_remido, 'N') ie_gerar_remido
	from	pls_regra_preco_proc a    
	where	dt_guia_w  between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref 
	and	((ie_regra_preco_w = 'N') or (a.cd_estabelecimento = cd_estabelecimento_p)) 
	and	a.ie_situacao = 'A'   
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento = cd_procedimento_p AND a.ie_Origem_proced = ie_origem_proced_p))                                                                           
	and	((coalesce(nr_seq_classificacao::text, '') = '') or (a.nr_seq_classificacao = nr_seq_classificacao_prest_p) or (a.nr_seq_classificacao = nr_seq_classificacao_w))                                     
	and	((coalesce(a.ie_tipo_vinculo::text, '') = '') or (a.ie_tipo_vinculo = ie_tipo_vinculo_w))       
	and	(coalesce(a.nr_seq_grupo_prestador::text, '') = '' 	or
		exists	(SELECT	1
			from	pls_preco_prestador x
			where	x.nr_seq_grupo	= a.nr_seq_grupo_prestador
			and	((coalesce(x.nr_seq_prestador::text, '') = '')	  or (x.nr_seq_prestador	= nr_seq_prestador_p))
			and	((coalesce(x.nr_seq_classificacao::text, '') = '') or (x.nr_seq_classificacao	= nr_seq_classificacao_w))
			)
		)
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador 	= coalesce(nr_seq_tipo_prestador_w,'')))                                                                                                 	
	and	((coalesce(a.nr_seq_tipo_prestador_prot::text, '') = '') or (a.nr_seq_tipo_prestador_prot = dados_prestador_prot_p.nr_seq_tipo_prestador))
	and	((coalesce(a.cd_prestador_prot::text, '') = '') or (a.cd_prestador_prot	= dados_prestador_prot_p.cd_prestador))
	and	((coalesce(a.cd_prestador_solic::text, '') = '') or (a.cd_prestador_solic	= dados_conta_p.cd_prestador_solic))
	and	(
			(
				(coalesce(a.ie_taxa_coleta,'N') = 'N') and 
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prestador_p,0))) and 
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			) or	
			(
				((coalesce(a.ie_taxa_coleta,'N')	= 'S') and (ie_prestador_pagamento_w	= 'S')) and
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prest_pgto_coleta_w,0))) and	
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			)
		)	
		
		/*Robson da Silva - 11/04/2012 - OS 433082, Verificar se tem Taxa de coleta caso tenha deve pegar regra de taxa de coleta (Prestador de taxa de coleta), caso nao tenha regra de taxa vai pegar a regra para prestador executor.*/

	and	((coalesce(a.nr_seq_categoria::text, '') = '') or (a.nr_seq_categoria = coalesce(nr_seq_categoria_p,0))) 
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc = cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))                                                                                                  
	and	((coalesce(a.nr_seq_clinica::text, '') = '') or (a.nr_seq_clinica = nr_seq_clinica_p))  
	and	((coalesce(a.nr_seq_plano::text, '') = '') or (a.nr_seq_plano = nr_seq_plano_p))       
	and	((coalesce(a.ie_preco::text, '') = '') or (ie_preco = ie_preco_w))  
	and	((coalesce(a.cd_convenio::text, '') = '') or (a.cd_convenio = cd_convenio_p))           
	and	((coalesce(a.cd_categoria::text, '') = '') or (a.cd_categoria = cd_categoria_p))        
	and	((coalesce(a.nr_seq_outorgante::text, '') = '') or (a.nr_seq_outorgante = coalesce(nr_seq_outorgante_p,a.nr_seq_outorgante)))                                                                                            
	and	((coalesce(a.nr_seq_contrato::text, '') = '') or (a.nr_seq_contrato = coalesce(nr_seq_contrato_p,0)))
	and	((coalesce(a.ie_tipo_contratacao::text, '') = '') or (a.ie_tipo_contratacao = coalesce(ie_tipo_contratacao_p,0)))
	and	((coalesce(a.nr_seq_cbo_saude::text, '') = '') or (a.nr_seq_cbo_saude = coalesce(nr_seq_cbo_saude_p,0)))
	and	((coalesce(a.nr_seq_congenere::text, '') = '') or (a.nr_seq_congenere = coalesce(nr_seq_congenere_w,0)))
	and	((coalesce(a.nr_seq_intercambio::text, '') = '') or (a.nr_seq_intercambio = coalesce(nr_seq_intercambio_w,0)))
	and	((coalesce(a.qt_idade_inicial::text, '') = '') or (a.qt_idade_inicial <= qt_idade_benef_w))
	and	((coalesce(a.qt_idade_final::text, '') = '') or (a.qt_idade_final >= qt_idade_benef_w))  
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado	= ie_tipo_segurado_w))    
	and	((coalesce(a.ie_tipo_contrato::text, '') = '') or (a.ie_tipo_contrato	 = ie_tipo_contrato_w))
	and	((coalesce(a.nr_seq_rp_combinada::text, '') = '') or (a.nr_seq_rp_combinada	= nr_seq_rp_combinada_p))
	and	((coalesce(a.ie_cooperado::text, '') = '') or (a.ie_cooperado	= 'N' ) or (a.ie_cooperado	= ie_cooperado_w))
	and	((coalesce(a.ie_internado::text, '') = '') or (a.ie_internado	= 'N' ) or (a.ie_internado	= ie_internado_p))
	and	((coalesce(a.ie_tipo_guia::text, '') = '') or (a.ie_tipo_guia 	= ie_tipo_guia_p))
	and	((coalesce(a.ie_acomodacao::text, '') = '') or (a.ie_acomodacao 	= ie_acomodacao_w) or (a.ie_acomodacao = 'N'))
	and	((coalesce(a.ie_acomodacao_autorizada::text, '') = '') or (a.ie_acomodacao_autorizada 	= ie_acomodacao_autorizada_w) or (a.ie_acomodacao_autorizada = 'N'))
	and	((coalesce(a.ie_tipo_intercambio::text, '') = '') or (a.ie_tipo_intercambio = 'A') or (a.ie_tipo_intercambio = coalesce(ie_tipo_intercambio_p,'A')))
	and	((coalesce(a.ie_franquia::text, '') = '') or (a.ie_franquia = 'N') or (a.ie_franquia = coalesce(ie_franquia_w, a.ie_franquia)))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec	= coalesce(nr_seq_grupo_rec_w,0)))
	and	((coalesce(a.ie_pcmso::text, '') = '') or (a.ie_pcmso = 'N') 	or (a.ie_pcmso = ie_pcmso_w))
	and	((coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '') or (a.ie_tipo_acomodacao_ptu = 'T') or (a.ie_tipo_acomodacao_ptu 	= coalesce(ie_tipo_acomodacao_ptu_w,'A')))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento    = cd_area_procedimento_w))
	and	((coalesce(a.nr_seq_tipo_acomodacao::text, '') = '') or (a.nr_seq_tipo_acomodacao  = nr_seq_tipo_acomodacao_p))                                                                                                      
	and	((coalesce(a.nr_seq_tipo_atendimento::text, '') = '') or (a.nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_p))
	and	((coalesce(a.ie_regime_atendimento::text, '') = '') or (a.ie_regime_atendimento = ie_regime_atendimento_p))
	and	((coalesce(a.ie_regime_atendimento_princ::text, '') = '') or (a.ie_regime_atendimento_princ = ie_regime_atendimento_princ_p))
	and	((coalesce(a.ie_saude_ocupacional::text, '') = '') or (a.ie_saude_ocupacional = ie_saude_ocupacional_p))
	and	((coalesce(a.nr_seq_tipo_atend_princ::text, '') = '') or (a.nr_seq_tipo_atend_princ = dados_conta_p.nr_seq_tipo_atendimento))	
	and	((coalesce(a.nr_seq_grupo_intercambio::text, '') = '') or (a.nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w))
	and	((coalesce(a.ie_tecnica_utilizada::text, '') = '') or (a.ie_tecnica_utilizada	= ie_tecnica_utilizada_P))
	and	((coalesce(a.sg_uf_operadora_intercambio::text, '') = '') or (a.sg_uf_operadora_intercambio = coalesce(sg_uf_operadora_intercambio_p,'X')))
	and	((coalesce(a.nr_seq_congenere_prot::text, '') = '') or (a.nr_seq_congenere_prot 	= coalesce(nr_seq_congenere_prot_w,0)))
	and	((coalesce(a.ie_carater_internacao::text, '') = '') or (a.ie_carater_internacao 	= coalesce(ie_carater_internacao_p,'X')))
	and	((coalesce(a.ie_origem_procedimento::text, '') = '') or (a.ie_origem_procedimento 	= ie_origem_proced_p))
	and	((coalesce(a.nr_seq_ops_congenere::text, '') = '') or (a.nr_seq_ops_congenere 	= coalesce(nr_seq_ops_congenere_w,0)))
	and	((coalesce(a.ie_origem_protocolo::text, '') = '') or (a.ie_origem_protocolo	= ie_origem_protocolo_w))
	and     ((coalesce(a.cd_versao_tiss::text, '') = '') or (a.cd_versao_tiss		= cd_versao_tiss_w))
	and	((coalesce(a.ie_atend_pcmso::text, '') = '') or (a.ie_atend_pcmso = 'A') 	or (a.ie_atend_pcmso		= coalesce(dados_conta_p.ie_atend_pcmso,'N')))
	and	((coalesce(a.ie_ref_guia_internacao::text, '') = '') or (a.ie_ref_guia_internacao	= 'A') or (a.ie_ref_guia_internacao = dados_conta_p.ie_ref_guia_internacao))
	and	qt_dias_internacao_w between coalesce(a.qt_dias_inter_inicio, -1) and coalesce(a.qt_dias_inter_final, 9999999999)
	and	((a.ie_tipo_tabela	= ie_tipo_tabela_p)  
	or	(((ie_tipo_tabela_p	= 'IP') or (ie_tipo_tabela_p	= 'IC')) and (a.ie_tipo_tabela	= 'I'))
	or (ie_tipo_tabela_p = 'I'))
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') or (exists (select	1
									from	table(pls_grupos_pck.obter_procs_grupo_servico(a.nr_seq_grupo_servico, ie_origem_proced_p,cd_procedimento_p)) grupo)))
	and	((coalesce(a.ie_tipo_consulta::text, '') = '') or (a.ie_tipo_consulta	= coalesce(coalesce(dados_guia_req_p.ie_tipo_consulta_guia, dados_guia_req_p.ie_tipo_consulta_req),coalesce(dados_conta_p.ie_tipo_consulta,0))))
	and	((coalesce(a.nr_seq_prest_inter::text, '') = '') or (a.nr_seq_prest_inter = nr_seq_prest_inter_w))
	and	((coalesce(a.nr_seq_grupo_prest_int::text, '') = '') or (pls_obter_se_grupo_prest_int(a.nr_seq_grupo_prest_int, nr_seq_prest_inter_w) = 'S'))
	and	((coalesce(a.cd_medico::text, '') = '') or (a.cd_medico = cd_medico_p))
	and	((coalesce(a.ie_tipo_atendimento::text, '') = '') or (a.ie_tipo_atendimento = 'A') or (a.ie_tipo_atendimento = ie_tipo_atendimento_reemb_w))
	and	((coalesce(a.nr_seq_mot_reembolso::text, '') = '') or (a.nr_seq_mot_reembolso = nr_seq_mot_reembolso_w))
	and 	((coalesce(a.nr_seq_cbo_saude_solic::text, '') = '') or (a.nr_seq_cbo_saude_solic = coalesce(nr_seq_cbo_saude_solic_p,0)))
	and 	((coalesce(a.nr_seq_tipo_conta::text, '') = '') or ( a.nr_seq_tipo_conta = dados_conta_p.nr_seq_tipo_conta))
	order by
		coalesce(nr_seq_rp_combinada,0),
		coalesce(a.nr_seq_prestador,0),
		coalesce(a.cd_prestador,'0'),
		coalesce(a.cd_medico,'0'),
		coalesce(a.cd_procedimento,0),
		coalesce(a.nr_seq_plano,0),
		coalesce(a.cd_grupo_proc,0),       
		coalesce(a.cd_especialidade,0),    
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_grupo_servico,0),
		coalesce(a.cd_categoria,0),          
		coalesce(a.cd_convenio,0),  
		coalesce(a.ie_taxa_coleta,'N'),    
		coalesce(a.nr_seq_cbo_saude,0),            
		coalesce(a.nr_seq_grupo_produto,0),
		coalesce(a.sg_uf_operadora_intercambio,'A'),      
		coalesce(a.nr_seq_grupo_rec,0),      
		coalesce(a.ie_tipo_tabela,'I'),    
		coalesce(a.ie_tipo_guia,0),          
		coalesce(a.ie_acomodacao,'X') desc,  
		coalesce(a.ie_tecnica_utilizada,'A'),
		coalesce(a.nr_seq_grupo_prestador,0), 
		coalesce(a.nr_seq_grupo_contrato,0),
		coalesce(a.nr_seq_tipo_prestador,0),
		coalesce(a.ie_tipo_intercambio,'A'),
		coalesce(a.ie_tipo_vinculo,'X') desc, 
		coalesce(a.nr_seq_grupo_intercambio,0), 
		coalesce(a.nr_seq_classificacao,0),     
		coalesce(a.nr_seq_categoria,0),    
		coalesce(a.nr_seq_grupo_operadora,0),
		coalesce(a.nr_seq_tipo_acomodacao,0), 
		coalesce(a.nr_seq_tipo_atendimento,0),
		coalesce(a.nr_seq_tipo_atend_princ,0),
		coalesce(a.nr_seq_clinica,0),      
		coalesce(a.nr_seq_contrato,0),     
		coalesce(a.nr_seq_outorgante,0),

		coalesce(a.nr_seq_regra_atend_cart,0),
		coalesce(a.ie_tipo_contratacao,'X') desc,       
		coalesce(a.ie_preco,'0'),          
		coalesce(a.qt_dias_inter_final,0) desc, 
		coalesce(a.ie_cooperado,'N'),        
		coalesce(a.ie_franquia,'N'),
		coalesce(a.ie_autogerado,'N'),
		coalesce(a.ie_internado,'N'),
		coalesce(a.nr_seq_intercambio,0),  
		coalesce(a.nr_seq_congenere_prot,0),
		coalesce(a.ie_carater_internacao,'A'),
		coalesce(a.nr_seq_ops_congenere,0),
		coalesce(a.ie_tipo_contrato,'X'),
		coalesce(a.ie_origem_protocolo,'A'),
		coalesce(a.cd_versao_tiss,'A'),
		coalesce(a.ie_atend_pcmso,'A'),
		coalesce(a.ie_pcmso,'N'),
		coalesce(a.qt_idade_inicial,0),
		coalesce(a.qt_idade_final,0),
		coalesce(a.cd_especialidade_prest,0),
		coalesce(a.ie_proc_tabela,'N'),
		coalesce(a.nr_seq_congenere, 0),
		coalesce(a.ie_tipo_segurado, '0') desc,
		coalesce(a.nr_seq_prest_inter,0),
		coalesce(a.cd_prestador_solic,0),
		coalesce(a.ie_acomodacao_autorizada, 'N'),
		coalesce(a.ie_tipo_atendimento,'A'),
		coalesce(a.ie_regime_atendimento,0),
		coalesce(a.ie_saude_ocupacional,0),
		coalesce(a.ie_regime_atendimento_princ,0),
		coalesce(a.nr_seq_grupo_prest_int,0),
		coalesce(a.dt_inicio_vigencia, clock_timestamp()),
		coalesce(a.nr_seq_mot_reembolso,0),
		coalesce(a.nr_seq_cbo_saude_solic,0),
		coalesce(a.cd_moeda_tabela, 0),
		coalesce(a.nr_seq_grupo_med_exec, 0),
		coalesce(a.cd_prestador_partic, 0),
		coalesce(a.nr_seq_tipo_conta,0 );
		
C03 CURSOR FOR
	SELECT	coalesce(a.nr_sequencia,0) nr_sequencia,  
		a.nr_seq_grupo_servico,       
		coalesce(a.nr_seq_grupo_prestador,0) nr_seq_grupo_prestador, 
		a.nr_seq_grupo_contrato,      
		a.nr_seq_grupo_produto,       
		a.nr_seq_cbhpm_edicao,
		a.ie_proc_tabela,
		a.nr_seq_categoria_plano,
		a.nr_seq_regra_atend_cart,
		a.cd_especialidade_prest,
		a.ie_ch_padrao_anestesista,
		a.nr_seq_grupo_operadora,
		a.cd_moeda_tabela,
		a.nr_seq_grupo_med_exec,
		a.cd_prestador_partic,
		coalesce(a.ie_gerar_remido, 'N') ie_gerar_remido
	from	pls_regra_preco_proc a
	where	dt_guia_w between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
	and	a.ie_situacao = 'A'   
	and	((ie_regra_preco_w = 'N') or (a.cd_estabelecimento = cd_estabelecimento_p)) 
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento = cd_procedimento_p AND a.ie_Origem_proced = ie_origem_proced_p))                                                                           
	and	((coalesce(nr_seq_classificacao::text, '') = '') or (a.nr_seq_classificacao = nr_seq_classificacao_prest_p) or (a.nr_seq_classificacao = nr_seq_classificacao_w))                                     
	and	((coalesce(a.ie_tipo_vinculo::text, '') = '') or (a.ie_tipo_vinculo = ie_tipo_vinculo_w))       
	and	(coalesce(a.nr_seq_grupo_prestador::text, '') = '' 	or
		exists	(SELECT	1
			from	pls_preco_prestador x
			where	x.nr_seq_grupo	= a.nr_seq_grupo_prestador
			and	((coalesce(x.nr_seq_prestador::text, '') = '')	  or (x.nr_seq_prestador	= nr_seq_prestador_p))
			and	((coalesce(x.nr_seq_classificacao::text, '') = '') or (x.nr_seq_classificacao	= nr_seq_classificacao_w))
			)
		)
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador 	= coalesce(nr_seq_tipo_prestador_w,'')))                                                                                                 	
	and	((coalesce(a.nr_seq_tipo_prestador_prot::text, '') = '') or (a.nr_seq_tipo_prestador_prot = dados_prestador_prot_p.nr_seq_tipo_prestador))
	and	((coalesce(a.cd_prestador_prot::text, '') = '') or (a.cd_prestador_prot	= dados_prestador_prot_p.cd_prestador))
	and	((coalesce(a.cd_prestador_solic::text, '') = '') or (a.cd_prestador_solic	= dados_conta_p.cd_prestador_solic))
	and	(
			(
				(coalesce(a.ie_taxa_coleta,'N') = 'N') and 
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prestador_p,0))) and 
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			) or	
			(
				((coalesce(a.ie_taxa_coleta,'N')	= 'S') and (ie_prestador_pagamento_w	= 'S')) and
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prest_pgto_coleta_w,0))) and	
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			)
		)	
		
		/*Robson da Silva - 11/04/2012 - OS 433082, Verificar se tem Taxa de coleta caso tenha deve pegar regra de taxa de coleta (Prestador de taxa de coleta), caso nao tenha regra de taxa vai pegar a regra para prestador executor.*/

	and	((coalesce(a.nr_seq_categoria::text, '') = '') or (a.nr_seq_categoria = coalesce(nr_seq_categoria_p,0))) 
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or (a.cd_grupo_proc = cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))                                                                                                  
	and	((coalesce(a.nr_seq_clinica::text, '') = '') or (a.nr_seq_clinica = nr_seq_clinica_p))  
	and	((coalesce(a.nr_seq_plano::text, '') = '') or (a.nr_seq_plano = nr_seq_plano_p))       
	and	((coalesce(a.ie_preco::text, '') = '') or (ie_preco = ie_preco_w))  
	and	((coalesce(a.cd_convenio::text, '') = '') or (a.cd_convenio = cd_convenio_p))           
	and	((coalesce(a.cd_categoria::text, '') = '') or (a.cd_categoria = cd_categoria_p))        
	and	((coalesce(a.nr_seq_outorgante::text, '') = '') or (a.nr_seq_outorgante = coalesce(nr_seq_outorgante_p,a.nr_seq_outorgante)))                                                                                            
	and	((coalesce(a.nr_seq_contrato::text, '') = '') or (a.nr_seq_contrato = coalesce(nr_seq_contrato_p,0)))
	and	((coalesce(a.ie_tipo_contratacao::text, '') = '') or (a.ie_tipo_contratacao = coalesce(ie_tipo_contratacao_p,0)))
	and	((coalesce(a.nr_seq_cbo_saude::text, '') = '') or (a.nr_seq_cbo_saude = coalesce(nr_seq_cbo_saude_p,0)))
	and	((coalesce(a.nr_seq_congenere::text, '') = '') or (a.nr_seq_congenere = coalesce(nr_seq_congenere_w,0)))
	and	((coalesce(a.nr_seq_intercambio::text, '') = '') or (a.nr_seq_intercambio = coalesce(nr_seq_intercambio_w,0)))
	and	((coalesce(a.qt_idade_inicial::text, '') = '') or (a.qt_idade_inicial <= qt_idade_benef_w))
	and	((coalesce(a.qt_idade_final::text, '') = '') or (a.qt_idade_final >= qt_idade_benef_w))  
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado	= ie_tipo_segurado_w))    
	and	((coalesce(a.ie_tipo_contrato::text, '') = '') or (a.ie_tipo_contrato	 = ie_tipo_contrato_w))
	and	((coalesce(a.nr_seq_rp_combinada::text, '') = '') or (a.nr_seq_rp_combinada	= nr_seq_rp_combinada_p))
	and	((coalesce(a.ie_cooperado::text, '') = '') or (a.ie_cooperado	= 'N' ) or (a.ie_cooperado	= ie_cooperado_w))
	and	((coalesce(a.ie_internado::text, '') = '') or (a.ie_internado	= 'N' ) or (a.ie_internado	= ie_internado_p))
	and	((coalesce(a.ie_tipo_guia::text, '') = '') or (a.ie_tipo_guia 	= ie_tipo_guia_p))
	and	((coalesce(a.ie_acomodacao::text, '') = '') or (a.ie_acomodacao 	= ie_acomodacao_w) or (a.ie_acomodacao = 'N'))
	and	((coalesce(a.ie_acomodacao_autorizada::text, '') = '') or (a.ie_acomodacao_autorizada 	= ie_acomodacao_autorizada_w) or (a.ie_acomodacao_autorizada = 'N'))
	and	((coalesce(a.ie_tipo_intercambio::text, '') = '') or (a.ie_tipo_intercambio = 'A') or (a.ie_tipo_intercambio = coalesce(ie_tipo_intercambio_p,'A')))
	and	((coalesce(a.ie_franquia::text, '') = '') or (a.ie_franquia = 'N') or (a.ie_franquia = coalesce(ie_franquia_w, a.ie_franquia)))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec	= coalesce(nr_seq_grupo_rec_w,0)))
	and	((coalesce(a.ie_pcmso::text, '') = '') or (a.ie_pcmso = 'N') 	or (a.ie_pcmso = ie_pcmso_w))
	and	((coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '') or (a.ie_tipo_acomodacao_ptu = 'T') or (a.ie_tipo_acomodacao_ptu 	= coalesce(ie_tipo_acomodacao_ptu_w,'A')))
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento    = cd_area_procedimento_w))
	and	((coalesce(a.nr_seq_tipo_acomodacao::text, '') = '') or (a.nr_seq_tipo_acomodacao  = nr_seq_tipo_acomodacao_p))                                                                                                      
	and	((coalesce(a.nr_seq_tipo_atendimento::text, '') = '') or (a.nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_p))
	and	((coalesce(a.ie_regime_atendimento::text, '') = '') or (a.ie_regime_atendimento = ie_regime_atendimento_p))
	and	((coalesce(a.ie_regime_atendimento_princ::text, '') = '') or (a.ie_regime_atendimento_princ = ie_regime_atendimento_princ_p))
	and	((coalesce(a.ie_saude_ocupacional::text, '') = '') or (a.ie_saude_ocupacional = ie_saude_ocupacional_p))
	and	((coalesce(a.nr_seq_tipo_atend_princ::text, '') = '') or (a.nr_seq_tipo_atend_princ = dados_conta_p.nr_seq_tipo_atendimento))	
	and	((coalesce(a.nr_seq_grupo_intercambio::text, '') = '') or (a.nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w))
	and	((coalesce(a.ie_tecnica_utilizada::text, '') = '') or (a.ie_tecnica_utilizada	= ie_tecnica_utilizada_P))
	and	((coalesce(a.sg_uf_operadora_intercambio::text, '') = '') or (a.sg_uf_operadora_intercambio = coalesce(sg_uf_operadora_intercambio_p,'X')))
	and	((coalesce(a.nr_seq_congenere_prot::text, '') = '') or (a.nr_seq_congenere_prot 	= coalesce(nr_seq_congenere_prot_w,0)))
	and	((coalesce(a.ie_carater_internacao::text, '') = '') or (a.ie_carater_internacao 	= coalesce(ie_carater_internacao_p,'X')))
	and	((coalesce(a.ie_origem_procedimento::text, '') = '') or (a.ie_origem_procedimento 	= ie_origem_proced_p))
	and	((coalesce(a.nr_seq_ops_congenere::text, '') = '') or (a.nr_seq_ops_congenere 	= coalesce(nr_seq_ops_congenere_w,0)))
	and	((coalesce(a.ie_origem_protocolo::text, '') = '') or (a.ie_origem_protocolo	= ie_origem_protocolo_w))
	and     ((coalesce(a.cd_versao_tiss::text, '') = '') or (a.cd_versao_tiss		= cd_versao_tiss_w))
	and	((coalesce(a.ie_atend_pcmso::text, '') = '') or (a.ie_atend_pcmso = 'A') 	or (a.ie_atend_pcmso		= coalesce(dados_conta_p.ie_atend_pcmso,'N')))
	and	((coalesce(a.ie_ref_guia_internacao::text, '') = '') or (a.ie_ref_guia_internacao	= 'A') or (a.ie_ref_guia_internacao = dados_conta_p.ie_ref_guia_internacao))
	and	qt_dias_internacao_w between coalesce(a.qt_dias_inter_inicio, -1) and coalesce(a.qt_dias_inter_final, 9999999999)
	and	((a.ie_tipo_tabela	= ie_tipo_tabela_p)  
	or	(((ie_tipo_tabela_p	= 'IP') or (ie_tipo_tabela_p	= 'IC')) and (a.ie_tipo_tabela	= 'I'))
	or (ie_tipo_tabela_p = 'I'))
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') or (exists (select	1
									from	pls_grupo_servico_tm grupo
									where	grupo.nr_seq_grupo_servico = a.nr_seq_grupo_servico
									and	grupo.ie_origem_proced = ie_origem_proced_p
									and	grupo.cd_procedimento = cd_procedimento_p)))
	and	((coalesce(a.ie_tipo_consulta::text, '') = '') or (a.ie_tipo_consulta	= coalesce(coalesce(dados_guia_req_p.ie_tipo_consulta_guia, dados_guia_req_p.ie_tipo_consulta_req),coalesce(dados_conta_p.ie_tipo_consulta,0))))
	and	((coalesce(a.nr_seq_prest_inter::text, '') = '') or (a.nr_seq_prest_inter = nr_seq_prest_inter_w))
	and	((coalesce(a.nr_seq_grupo_prest_int::text, '') = '') or (pls_obter_se_grupo_prest_int(a.nr_seq_grupo_prest_int, nr_seq_prest_inter_w) = 'S'))
	and	((coalesce(a.cd_medico::text, '') = '') or (a.cd_medico = cd_medico_p))
	and	((coalesce(a.ie_tipo_atendimento::text, '') = '') or (a.ie_tipo_atendimento = 'A') or (a.ie_tipo_atendimento = ie_tipo_atendimento_reemb_w))
	and	((coalesce(a.nr_seq_mot_reembolso::text, '') = '') or (a.nr_seq_mot_reembolso = nr_seq_mot_reembolso_w))
	and 	((coalesce(a.nr_seq_cbo_saude_solic::text, '') = '') or (a.nr_seq_cbo_saude_solic = coalesce(nr_seq_cbo_saude_solic_p,0)))
	and 	((coalesce(a.nr_seq_tipo_conta::text, '') = '') or ( a.nr_seq_tipo_conta = dados_conta_p.nr_seq_tipo_conta))
	order by
		coalesce(nr_seq_rp_combinada,0),
		coalesce(a.nr_seq_prestador,0),
		coalesce(a.cd_prestador,'0'),
		coalesce(a.cd_medico,'0'),
		coalesce(a.cd_procedimento,0),
		coalesce(a.nr_seq_plano,0),
		coalesce(a.cd_grupo_proc,0),       
		coalesce(a.cd_especialidade,0),    
		coalesce(a.cd_area_procedimento,0),
		coalesce(a.nr_seq_grupo_servico,0),
		coalesce(a.cd_categoria,0),          
		coalesce(a.cd_convenio,0),  
		coalesce(a.ie_taxa_coleta,'N'),    
		coalesce(a.nr_seq_cbo_saude,0),            
		coalesce(a.nr_seq_grupo_produto,0),
		coalesce(a.sg_uf_operadora_intercambio,'A'),      
		coalesce(a.nr_seq_grupo_rec,0),      
		coalesce(a.ie_tipo_tabela,'I'),    
		coalesce(a.ie_tipo_guia,0),          
		coalesce(a.ie_acomodacao,'X') desc,  
		coalesce(a.ie_tecnica_utilizada,'A'),
		coalesce(a.nr_seq_grupo_prestador,0), 
		coalesce(a.nr_seq_grupo_contrato,0),
		coalesce(a.nr_seq_tipo_prestador,0),
		coalesce(a.ie_tipo_intercambio,'A'),
		coalesce(a.ie_tipo_vinculo,'X') desc, 
		coalesce(a.nr_seq_grupo_intercambio,0), 
		coalesce(a.nr_seq_classificacao,0),     
		coalesce(a.nr_seq_categoria,0),    
		coalesce(a.nr_seq_grupo_operadora,0),
		coalesce(a.nr_seq_tipo_acomodacao,0), 
		coalesce(a.nr_seq_tipo_atendimento,0),
		coalesce(a.ie_regime_atendimento,0),
		coalesce(a.ie_saude_ocupacional,0),
		coalesce(a.ie_regime_atendimento_princ,0),		
		coalesce(a.nr_seq_tipo_atend_princ,0),
		coalesce(a.nr_seq_clinica,0),      
		coalesce(a.nr_seq_contrato,0),     
		coalesce(a.nr_seq_outorgante,0),

		coalesce(a.nr_seq_regra_atend_cart,0),
		coalesce(a.ie_tipo_contratacao,'X') desc,       
		coalesce(a.ie_preco,'0'),          
		coalesce(a.qt_dias_inter_final,0) desc, 
		coalesce(a.ie_cooperado,'N'),        
		coalesce(a.ie_franquia,'N'),
		coalesce(a.ie_autogerado,'N'),
		coalesce(a.ie_internado,'N'),
		coalesce(a.nr_seq_intercambio,0),  
		coalesce(a.nr_seq_congenere_prot,0),
		coalesce(a.ie_carater_internacao,'A'),
		coalesce(a.nr_seq_ops_congenere,0),
		coalesce(a.ie_tipo_contrato,'X'),
		coalesce(a.ie_origem_protocolo,'A'),
		coalesce(a.cd_versao_tiss,'A'),
		coalesce(a.ie_atend_pcmso,'A'),
		coalesce(a.ie_pcmso,'N'),
		coalesce(a.qt_idade_inicial,0),
		coalesce(a.qt_idade_final,0),
		coalesce(a.cd_especialidade_prest,0),
		coalesce(a.ie_proc_tabela,'N'),
		coalesce(a.nr_seq_congenere, 0),
		coalesce(a.ie_tipo_segurado, '0') desc,
		coalesce(a.nr_seq_prest_inter,0),
		coalesce(a.cd_prestador_solic,0),
		coalesce(a.ie_acomodacao_autorizada, 'N'),
		coalesce(a.ie_tipo_atendimento,'A'),
		coalesce(a.nr_seq_grupo_prest_int,0),
		coalesce(a.dt_inicio_vigencia, clock_timestamp()),
		coalesce(a.nr_seq_mot_reembolso,0),
		coalesce(a.nr_seq_cbo_saude_solic,0),
		coalesce(a.cd_moeda_tabela, 0),
		coalesce(a.nr_seq_grupo_med_exec, 0),
		coalesce(a.cd_prestador_partic, 0),
		coalesce(a.nr_seq_tipo_conta, 0);
		
C02 CURSOR FOR
	SELECT	coalesce(a.nr_sequencia,0) nr_sequencia,
		a.nr_seq_grupo_servico,
		coalesce(a.nr_seq_grupo_prestador,0) nr_seq_grupo_prestador, 
		a.nr_seq_grupo_contrato,
		a.nr_seq_grupo_produto,
		a.nr_seq_cbhpm_edicao,
		a.ie_proc_tabela,
		a.nr_seq_categoria_plano,
		a.nr_seq_regra_atend_cart,
		a.cd_especialidade_prest,
		a.ie_ch_padrao_anestesista,
		a.nr_seq_grupo_operadora,
		a.cd_moeda_tabela,
		a.nr_seq_grupo_med_exec,
		a.cd_prestador_partic,
		coalesce(a.ie_gerar_remido, 'N') ie_gerar_remido
	from	pls_regra_preco_proc_v	a
	where	dt_guia_w between a.dt_inicio_vigencia and a.dt_fim_vigencia_ref
	and	a.ie_situacao = 'A'
	and 	((ie_regra_preco_w = 'N') or (a.cd_estabelecimento = cd_estabelecimento_p))
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento = cd_procedimento_p AND a.ie_Origem_proced = ie_origem_proced_p))
	and	((coalesce(nr_seq_classificacao::text, '') = '') or (a.nr_seq_classificacao = nr_seq_classificacao_prest_p) or (a.nr_seq_classificacao = nr_seq_classificacao_w))
	and	((coalesce(a.ie_tipo_vinculo::text, '') = '') or (a.ie_tipo_vinculo = ie_tipo_vinculo_w))
	and	(coalesce(a.nr_seq_grupo_prestador::text, '') = '' 	or
		exists	(SELECT	1
			from	pls_preco_prestador x
			where	x.nr_seq_grupo	= a.nr_seq_grupo_prestador
			and	((coalesce(x.nr_seq_prestador::text, '') = '')	  or (x.nr_seq_prestador	= nr_seq_prestador_p))
			and	((coalesce(x.nr_seq_classificacao::text, '') = '') or (x.nr_seq_classificacao	= nr_seq_classificacao_w))
			)
		)
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador 	= coalesce(nr_seq_tipo_prestador_w,'')))
	and	((coalesce(a.nr_seq_tipo_prestador_prot::text, '') = '') or (a.nr_seq_tipo_prestador_prot = dados_prestador_prot_p.nr_seq_tipo_prestador))
	and	((coalesce(a.cd_prestador_prot::text, '') = '') or (a.cd_prestador_prot	= dados_prestador_prot_p.cd_prestador))
	and	((coalesce(a.cd_prestador_solic::text, '') = '') or (a.cd_prestador_solic	= dados_conta_p.cd_prestador_solic))
	and	(
			(
				(coalesce(a.ie_taxa_coleta,'N') = 'N') and 
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prestador_p,0))) and 
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			) or
			(
				((coalesce(a.ie_taxa_coleta,'N')	= 'S') and (ie_prestador_pagamento_w	= 'S')) and
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prest_pgto_coleta_w,0))) and	
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			)
		)
		/*Robson da Silva - 11/04/2012 - OS 433082, Verificar se tem Taxa de coleta caso tenha deve pegar regra de taxa de coleta (Prestador de taxa de coleta), caso nao tenha regra de taxa vai pegar a regra para prestador executor.*/

	and	((coalesce(a.nr_seq_categoria::text, '') = '') or (a.nr_seq_categoria = coalesce(nr_seq_categoria_p,0))) 
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or ( a.cd_grupo_proc = cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
	and	((coalesce(a.nr_seq_clinica::text, '') = '') or (a.nr_seq_clinica = nr_seq_clinica_p))  
	and	((coalesce(a.nr_seq_plano::text, '') = '') or (a.nr_seq_plano = nr_seq_plano_p))
	and	((coalesce(a.ie_preco::text, '') = '') or (ie_preco = ie_preco_w))
	and	((coalesce(a.cd_convenio::text, '') = '') or (a.cd_convenio = cd_convenio_p))
	and	((coalesce(a.cd_categoria::text, '') = '') or (a.cd_categoria = cd_categoria_p))
	and	((coalesce(a.nr_seq_outorgante::text, '') = '') or (a.nr_seq_outorgante = coalesce(nr_seq_outorgante_p,a.nr_seq_outorgante)))
	and	((coalesce(a.nr_seq_contrato::text, '') = '') or (a.nr_seq_contrato = coalesce(nr_seq_contrato_p,0)))
	and	((coalesce(a.ie_tipo_contratacao::text, '') = '') or (a.ie_tipo_contratacao = coalesce(ie_tipo_contratacao_p,0)))
	and	((coalesce(a.nr_seq_cbo_saude::text, '') = '') or (a.nr_seq_cbo_saude = coalesce(nr_seq_cbo_saude_p,0)))
	and	((coalesce(a.nr_seq_congenere::text, '') = '') or (a.nr_seq_congenere = coalesce(nr_seq_congenere_w,0)))
	and	((coalesce(a.nr_seq_intercambio::text, '') = '') or (a.nr_seq_intercambio = coalesce(nr_seq_intercambio_w,0)))
	and	((coalesce(a.qt_idade_inicial::text, '') = '') or (a.qt_idade_inicial <= qt_idade_benef_w))
	and	((coalesce(a.qt_idade_final::text, '') = '') or (a.qt_idade_final >= qt_idade_benef_w))  
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado	= ie_tipo_segurado_w))
	and	((coalesce(a.ie_tipo_contrato::text, '') = '') or (a.ie_tipo_contrato	 = ie_tipo_contrato_w))
	and	((coalesce(nr_seq_rp_combinada::text, '') = '') or (nr_seq_rp_combinada	= nr_seq_rp_combinada_p))
	and	((coalesce(a.ie_cooperado::text, '') = '') or (a.ie_cooperado	= 'N' ) or (a.ie_cooperado	= ie_cooperado_w))
	and	((coalesce(a.ie_internado::text, '') = '') or (a.ie_internado	= 'N' ) or (a.ie_internado	= ie_internado_p))
	and	((coalesce(a.ie_tipo_guia::text, '') = '') or (a.ie_tipo_guia 	= ie_tipo_guia_p))
	and	((coalesce(a.ie_acomodacao::text, '') = '') or (a.ie_acomodacao 	= ie_acomodacao_w) or (a.ie_acomodacao = 'N'))
	and	((coalesce(a.ie_acomodacao_autorizada::text, '') = '') or (a.ie_acomodacao_autorizada 	= ie_acomodacao_autorizada_w) or (a.ie_acomodacao_autorizada = 'N'))
	and	((coalesce(a.ie_tipo_intercambio::text, '') = '') or (a.ie_tipo_intercambio = 'A') or (a.ie_tipo_intercambio = coalesce(ie_tipo_intercambio_p,'A')))
	and	((coalesce(a.ie_franquia::text, '') = '') or (a.ie_franquia = 'N') or (a.ie_franquia = coalesce(ie_franquia_w, a.ie_franquia)))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec	= coalesce(nr_seq_grupo_rec_w,0)))
	and	((coalesce(a.ie_pcmso::text, '') = '') or (a.ie_pcmso = 'N') 	or (a.ie_pcmso = ie_pcmso_w))	
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento    = cd_area_procedimento_w))
	and	((coalesce(a.nr_seq_tipo_acomodacao::text, '') = '') or (a.nr_seq_tipo_acomodacao  = nr_seq_tipo_acomodacao_p))
	and	((coalesce(a.nr_seq_tipo_atendimento::text, '') = '') or (a.nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_p))
	and	((coalesce(a.nr_seq_tipo_atend_princ::text, '') = '') or (a.nr_seq_tipo_atend_princ = dados_conta_p.nr_seq_tipo_atendimento))
	and	((coalesce(a.ie_regime_atendimento::text, '') = '') or (a.ie_regime_atendimento = ie_regime_atendimento_p))
	and	((coalesce(a.ie_regime_atendimento_princ::text, '') = '') or (a.ie_regime_atendimento_princ = ie_regime_atendimento_princ_p))
	and	((coalesce(a.ie_saude_ocupacional::text, '') = '') or (a.ie_saude_ocupacional = ie_saude_ocupacional_p))
	and	((coalesce(a.nr_seq_grupo_intercambio::text, '') = '') or ( a.nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w))
	and	((coalesce(a.ie_origem_protocolo::text, '') = '') or (a.ie_origem_protocolo	= ie_origem_protocolo_w))
	and     ((coalesce(a.cd_versao_tiss::text, '') = '') or (a.cd_versao_tiss		= cd_versao_tiss_w))	
	and	((coalesce(a.ie_tecnica_utilizada::text, '') = '') or (a.ie_tecnica_utilizada	= ie_tecnica_utilizada_P))
	and	((coalesce(a.sg_uf_operadora_intercambio::text, '') = '') or (a.sg_uf_operadora_intercambio = coalesce(sg_uf_operadora_intercambio_p,'X')))
	and	((coalesce(a.nr_seq_congenere_prot::text, '') = '') or (a.nr_seq_congenere_prot 	= coalesce(nr_seq_congenere_prot_w,0)))
	and	((coalesce(a.ie_carater_internacao::text, '') = '') or (a.ie_carater_internacao 	= coalesce(ie_carater_internacao_p,'X')))
	and	((coalesce(a.ie_origem_procedimento::text, '') = '') or (a.ie_origem_procedimento 	= ie_origem_proced_p))
	and	((coalesce(a.nr_seq_ops_congenere::text, '') = '') or (a.nr_seq_ops_congenere 	= coalesce(nr_seq_ops_congenere_w,0)))
	and	((coalesce(a.ie_atend_pcmso::text, '') = '') or (a.ie_atend_pcmso 	= 'A') or (a.ie_atend_pcmso		= coalesce(dados_conta_p.ie_atend_pcmso,'N')))
	and	((coalesce(a.ie_ref_guia_internacao::text, '') = '') or (a.ie_ref_guia_internacao	= 'A') or (a.ie_ref_guia_internacao = dados_conta_p.ie_ref_guia_internacao))
	and	((coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '') or (a.ie_tipo_acomodacao_ptu	= 'T') or (a.ie_tipo_acomodacao_ptu 	= coalesce(ie_tipo_acomodacao_ptu_w,'A')))
	and	qt_dias_internacao_w between coalesce(a.qt_dias_inter_inicio, -1) and coalesce(a.qt_dias_inter_final, 9999999999)
	and	((a.ie_tipo_tabela = ie_tipo_tabela_p)  
	or	(((ie_tipo_tabela_p = 'IP') or (ie_tipo_tabela_p = 'IC')) and (a.ie_tipo_tabela = 'I'))
	or (ie_tipo_tabela_p = 'I'))
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') or (exists (	select	1
									from	table(pls_grupos_pck.obter_procs_grupo_servico(a.nr_seq_grupo_servico, ie_origem_proced_p,cd_procedimento_p)) grupo)))
	and	((coalesce(a.nr_seq_prest_inter::text, '') = '') or (a.nr_seq_prest_inter = nr_seq_prest_inter_w))
	and	((coalesce(a.nr_seq_grupo_prest_int::text, '') = '') or (pls_obter_se_grupo_prest_int(a.nr_seq_grupo_prest_int, nr_seq_prest_inter_w) = 'S'))
	and	((coalesce(a.cd_medico::text, '') = '') or (a.cd_medico = cd_medico_p))
	and	((coalesce(a.ie_tipo_atendimento::text, '') = '') or (a.ie_tipo_atendimento = 'A') or (a.ie_tipo_atendimento = ie_tipo_atendimento_reemb_w))
	and	((coalesce(a.nr_seq_mot_reembolso::text, '') = '') or (a.nr_seq_mot_reembolso = nr_seq_mot_reembolso_w))
	and 	((coalesce(a.nr_seq_cbo_saude_solic::text, '') = '') or (a.nr_seq_cbo_saude_solic = coalesce(nr_seq_cbo_saude_solic_p,0)))
	and 	((coalesce(a.nr_seq_tipo_conta::text, '') = '') or ( a.nr_seq_tipo_conta = dados_conta_p.nr_seq_tipo_conta));

	
C04 CURSOR FOR
	SELECT	coalesce(a.nr_sequencia,0) nr_sequencia,
		a.nr_seq_grupo_servico,
		coalesce(a.nr_seq_grupo_prestador,0) nr_seq_grupo_prestador, 
		a.nr_seq_grupo_contrato,
		a.nr_seq_grupo_produto,
		a.nr_seq_cbhpm_edicao,
		a.ie_proc_tabela,
		a.nr_seq_categoria_plano,
		a.nr_seq_regra_atend_cart,
		a.cd_especialidade_prest,
		a.ie_ch_padrao_anestesista,
		a.nr_seq_grupo_operadora,
		a.cd_moeda_tabela,
		a.nr_seq_grupo_med_exec,
		a.cd_prestador_partic,
		coalesce(a.ie_gerar_remido, 'N') ie_gerar_remido
	from	pls_regra_preco_proc_v	a
	where	dt_guia_w between a.dt_inicio_vigencia_ref and a.dt_fim_vigencia_ref
	and	qt_dias_internacao_w between coalesce(a.qt_dias_inter_inicio, -1) and coalesce(a.qt_dias_inter_final, 9999999999)
	and	((ie_regra_preco_w = 'N') or (a.cd_estabelecimento = cd_estabelecimento_p)) 
	and	a.ie_situacao 	= 'A'   
	and	((coalesce(a.cd_procedimento::text, '') = '') or (a.cd_procedimento = cd_procedimento_p AND a.ie_Origem_proced = ie_origem_proced_p))
	and	((coalesce(nr_seq_classificacao::text, '') = '') or (a.nr_seq_classificacao = nr_seq_classificacao_prest_p) or (a.nr_seq_classificacao = nr_seq_classificacao_w))
	and	((coalesce(a.ie_tipo_vinculo::text, '') = '') or (a.ie_tipo_vinculo = ie_tipo_vinculo_w))
	and	(coalesce(a.nr_seq_grupo_prestador::text, '') = '' 	or
		exists	(SELECT	1
			from	pls_preco_prestador x
			where	x.nr_seq_grupo	= a.nr_seq_grupo_prestador
			and	((coalesce(x.nr_seq_prestador::text, '') = '')	  or (x.nr_seq_prestador	= nr_seq_prestador_p))
			and	((coalesce(x.nr_seq_classificacao::text, '') = '') or (x.nr_seq_classificacao	= nr_seq_classificacao_w))
			)
		)
	and	((coalesce(a.nr_seq_tipo_prestador::text, '') = '') or (a.nr_seq_tipo_prestador 	= coalesce(nr_seq_tipo_prestador_w,'')))
	and	((coalesce(a.nr_seq_tipo_prestador_prot::text, '') = '') or (a.nr_seq_tipo_prestador_prot = dados_prestador_prot_p.nr_seq_tipo_prestador))
	and	((coalesce(a.cd_prestador_prot::text, '') = '') or (a.cd_prestador_prot	= dados_prestador_prot_p.cd_prestador))
	and	((coalesce(a.cd_prestador_solic::text, '') = '') or (a.cd_prestador_solic	= dados_conta_p.cd_prestador_solic))
	and	(
			(
				(coalesce(a.ie_taxa_coleta,'N') = 'N') and 
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prestador_p,0))) and 
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			) or	
			(
				((coalesce(a.ie_taxa_coleta,'N')	= 'S') and (ie_prestador_pagamento_w	= 'S')) and
				((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prest_pgto_coleta_w,0))) and	
				((a.cd_prestador = coalesce(cd_prestador_w,'0')) or (coalesce(a.cd_prestador::text, '') = ''))
			)
		)
		/*Robson da Silva - 11/04/2012 - OS 433082, Verificar se tem Taxa de coleta caso tenha deve pegar regra de taxa de coleta (Prestador de taxa de coleta), caso nao tenha regra de taxa vai pegar a regra para prestador executor.*/

	and	((coalesce(a.nr_seq_categoria::text, '') = '') or (a.nr_seq_categoria = coalesce(nr_seq_categoria_p,0))) 
	and	((coalesce(a.cd_grupo_proc::text, '') = '') or ( a.cd_grupo_proc = cd_grupo_proc_w))
	and	((coalesce(a.cd_especialidade::text, '') = '') or (a.cd_especialidade = cd_especialidade_w))
	and	((coalesce(a.nr_seq_clinica::text, '') = '') or (a.nr_seq_clinica = nr_seq_clinica_p))  
	and	((coalesce(a.nr_seq_plano::text, '') = '') or (a.nr_seq_plano = nr_seq_plano_p))       
	and	((coalesce(a.ie_preco::text, '') = '') or (ie_preco = ie_preco_w))  
	and	((coalesce(a.cd_convenio::text, '') = '') or (a.cd_convenio = cd_convenio_p))           
	and	((coalesce(a.cd_categoria::text, '') = '') or (a.cd_categoria = cd_categoria_p))        
	and	((coalesce(a.nr_seq_outorgante::text, '') = '') or (a.nr_seq_outorgante = coalesce(nr_seq_outorgante_p,a.nr_seq_outorgante)))
	and	((coalesce(a.nr_seq_contrato::text, '') = '') or (a.nr_seq_contrato = coalesce(nr_seq_contrato_p,0)))
	and	((coalesce(a.ie_tipo_contratacao::text, '') = '') or (a.ie_tipo_contratacao = coalesce(ie_tipo_contratacao_p,0)))
	and	((coalesce(a.nr_seq_cbo_saude::text, '') = '') or (a.nr_seq_cbo_saude = coalesce(nr_seq_cbo_saude_p,0)))
	and	((coalesce(a.nr_seq_congenere::text, '') = '') or (a.nr_seq_congenere = coalesce(nr_seq_congenere_w,0)))
	and	((coalesce(a.nr_seq_intercambio::text, '') = '') or (a.nr_seq_intercambio = coalesce(nr_seq_intercambio_w,0)))
	and	((coalesce(a.qt_idade_inicial::text, '') = '') or (a.qt_idade_inicial <= qt_idade_benef_w))
	and	((coalesce(a.qt_idade_final::text, '') = '') or (a.qt_idade_final >= qt_idade_benef_w))  
	and	((coalesce(a.ie_tipo_segurado::text, '') = '') or (a.ie_tipo_segurado	= ie_tipo_segurado_w))    
	and	((coalesce(a.ie_tipo_contrato::text, '') = '') or (a.ie_tipo_contrato	 = ie_tipo_contrato_w))
	and	((coalesce(nr_seq_rp_combinada::text, '') = '') or (nr_seq_rp_combinada	= nr_seq_rp_combinada_p))
	and	((coalesce(a.ie_cooperado::text, '') = '') or (a.ie_cooperado	= 'N' ) or (a.ie_cooperado	= ie_cooperado_w))
	and	((coalesce(a.ie_internado::text, '') = '') or (a.ie_internado	= 'N' ) or (a.ie_internado	= ie_internado_p))
	and	((coalesce(a.ie_tipo_guia::text, '') = '') or (a.ie_tipo_guia 	= ie_tipo_guia_p))
	and	((coalesce(a.ie_acomodacao::text, '') = '') or (a.ie_acomodacao 	= ie_acomodacao_w) or (a.ie_acomodacao = 'N'))
	and	((coalesce(a.ie_acomodacao_autorizada::text, '') = '') or (a.ie_acomodacao_autorizada 	= ie_acomodacao_autorizada_w) or (a.ie_acomodacao_autorizada = 'N'))
	and	((coalesce(a.ie_tipo_intercambio::text, '') = '') or (a.ie_tipo_intercambio = 'A') or (a.ie_tipo_intercambio = coalesce(ie_tipo_intercambio_p,'A')))
	and	((coalesce(a.ie_franquia::text, '') = '') or (a.ie_franquia = 'N') or (a.ie_franquia = coalesce(ie_franquia_w, a.ie_franquia)))
	and	((coalesce(a.nr_seq_grupo_rec::text, '') = '') or (a.nr_seq_grupo_rec	= coalesce(nr_seq_grupo_rec_w,0)))
	and	((coalesce(a.ie_pcmso::text, '') = '') or (a.ie_pcmso = 'N') 	or (a.ie_pcmso = ie_pcmso_w))	
	and	((coalesce(a.cd_area_procedimento::text, '') = '') or (a.cd_area_procedimento    = cd_area_procedimento_w))
	and	((coalesce(a.nr_seq_tipo_acomodacao::text, '') = '') or (a.nr_seq_tipo_acomodacao  = nr_seq_tipo_acomodacao_p))
	and	((coalesce(a.nr_seq_tipo_atendimento::text, '') = '') or (a.nr_seq_tipo_atendimento = nr_seq_tipo_atendimento_p))
	and	((coalesce(a.ie_regime_atendimento::text, '') = '') or (a.ie_regime_atendimento = ie_regime_atendimento_p))	
	and	((coalesce(a.ie_saude_ocupacional::text, '') = '') or (a.ie_saude_ocupacional = ie_saude_ocupacional_p))
	and	((coalesce(a.nr_seq_grupo_intercambio::text, '') = '') or ( a.nr_seq_grupo_intercambio = nr_seq_grupo_intercambio_w))
	and	((coalesce(a.ie_origem_protocolo::text, '') = '') or (a.ie_origem_protocolo	= ie_origem_protocolo_w))
	and     ((coalesce(a.cd_versao_tiss::text, '') = '') or (a.cd_versao_tiss		= cd_versao_tiss_w))	
	and	((coalesce(a.ie_tecnica_utilizada::text, '') = '') or (a.ie_tecnica_utilizada	= ie_tecnica_utilizada_P))
	and	((coalesce(a.sg_uf_operadora_intercambio::text, '') = '') or (a.sg_uf_operadora_intercambio = coalesce(sg_uf_operadora_intercambio_p,'X')))
	and	((coalesce(a.nr_seq_congenere_prot::text, '') = '') or (a.nr_seq_congenere_prot 	= coalesce(nr_seq_congenere_prot_w,0)))
	and	((coalesce(a.ie_carater_internacao::text, '') = '') or (a.ie_carater_internacao 	= coalesce(ie_carater_internacao_p,'X')))
	and	((coalesce(a.ie_origem_procedimento::text, '') = '') or (a.ie_origem_procedimento 	= ie_origem_proced_p))
	and	((coalesce(a.nr_seq_ops_congenere::text, '') = '') or (a.nr_seq_ops_congenere 	= coalesce(nr_seq_ops_congenere_w,0)))
	and	((coalesce(a.ie_atend_pcmso::text, '') = '') or (a.ie_atend_pcmso 	= 'A') or (a.ie_atend_pcmso		= coalesce(dados_conta_p.ie_atend_pcmso,'N')))
	and	((coalesce(a.ie_ref_guia_internacao::text, '') = '') or (a.ie_ref_guia_internacao	= 'A') or (a.ie_ref_guia_internacao = dados_conta_p.ie_ref_guia_internacao))
	and	((coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '') or (a.ie_tipo_acomodacao_ptu	= 'T') or (a.ie_tipo_acomodacao_ptu 	= coalesce(ie_tipo_acomodacao_ptu_w,'A')))
	and	((a.ie_tipo_tabela	= ie_tipo_tabela_p)  
	or	(((ie_tipo_tabela_p	= 'IP') or (ie_tipo_tabela_p	= 'IC')) and (a.ie_tipo_tabela	= 'I')))
	and	((coalesce(a.nr_seq_grupo_servico::text, '') = '') or (exists (select	1
									from	pls_grupo_servico_tm grupo
									where	grupo.nr_seq_grupo_servico = a.nr_seq_grupo_servico
									and	grupo.ie_origem_proced = ie_origem_proced_p
									and	grupo.cd_procedimento = cd_procedimento_p)))
	and	((coalesce(a.nr_seq_prest_inter::text, '') = '') or (a.nr_seq_prest_inter = nr_seq_prest_inter_w))
	and	((coalesce(a.nr_seq_grupo_prest_int::text, '') = '') or (pls_obter_se_grupo_prest_int(a.nr_seq_grupo_prest_int, nr_seq_prest_inter_w) = 'S'))
	and	((coalesce(a.cd_medico::text, '') = '') or (a.cd_medico = cd_medico_p))
	and	((coalesce(a.ie_tipo_atendimento::text, '') = '') or (a.ie_tipo_atendimento = 'A') or (a.ie_tipo_atendimento = ie_tipo_atendimento_reemb_w))
	and	((coalesce(a.nr_seq_mot_reembolso::text, '') = '') or (a.nr_seq_mot_reembolso = nr_seq_mot_reembolso_w))
	and 	((coalesce(a.nr_seq_cbo_saude_solic::text, '') = '') or (a.nr_seq_cbo_saude_solic = coalesce(nr_seq_cbo_saude_solic_p,0)))
	and 	((coalesce(a.nr_seq_tipo_conta::text, '') = '') or ( a.nr_seq_tipo_conta = dados_conta_p.nr_seq_tipo_conta));


BEGIN

select	ie_porte_amb_tuss
into STRICT	ie_porte_amb_tuss_w
from	table(pls_parametros_pck.f_retorna_param(cd_estabelecimento_p));

dt_guia_w		:= trunc(dt_guia_p,'dd');
qt_dias_internacao_w	:= coalesce(qt_dias_internacao_p, 0);
-- padrao null no inicio da execucao da rotina, para que seja usado de forma mais inteligente e otimizada
ie_benef_remido_w	:= null;

/*Regra de preco - Demitrius*/
Select  coalesce(max(ie_regra_preco),'S') 
into STRICT    ie_regra_preco_w        
from    pls_controle_estab;

/*obter dados do protocolo OS 390784 */

begin

	if (dados_guia_req_p.nr_seq_tipo_acomodacao IS NOT NULL AND dados_guia_req_p.nr_seq_tipo_acomodacao::text <> '') then
		select	max(ie_tipo_acomodacao)
		into STRICT	ie_acomodacao_autorizada_w
		from	pls_tipo_acomodacao a
		where 	nr_sequencia = dados_guia_req_p.nr_seq_tipo_acomodacao;
	end if;

	select	a.nr_seq_congenere_prot,
		a.nr_seq_prest_pgto_coleta,
		a.nr_seq_conta,
		a.ie_autogerado,
		a.nr_seq_grupo_rec,
		coalesce(nr_seq_classificacao_prest_p, a.nr_seq_clas_prest_exec),
		cd_prestador_exec,
		cd_grupo_proc,
		cd_especialidade,
		cd_area_procedimento,
		ie_origem_proced,
		nr_seq_tipo_prest_exec,
		cd_pessoa_fisica_prest,
		ie_tipo_vinculo_prest_exec,
		ie_origem_protocolo,
		cd_versao_tiss,
		nr_seq_prest_inter,
		dt_mes_competencia,
		a.ie_tipo_atendimento_reemb,
		a.nr_seq_mot_reembolso,
		nr_seq_guia,
		ie_tipo_segurado
	into STRICT	nr_seq_congenere_prot_w,
		nr_seq_prest_pgto_coleta_w,
		nr_seq_conta_w,
		ie_autogerado_proc_w,
		nr_seq_grupo_rec_w,
		nr_seq_classificacao_w,
		cd_prestador_w,
		cd_grupo_proc_w,
		cd_especialidade_w,
		cd_area_procedimento_w,
		ie_origem_proced_w,
		nr_seq_tipo_prestador_w,
		cd_pessoa_fisica_w,
		ie_tipo_vinculo_w,
		ie_origem_protocolo_w,
		cd_versao_tiss_w,
		nr_seq_prest_inter_w,
		dt_mes_competencia_w,
		ie_tipo_atendimento_reemb_w,
		nr_seq_mot_reembolso_w,
		nr_seq_guia_w,
		ie_tipo_segurado_w
	from	pls_conta_proc_v a
	where	nr_sequencia = nr_seq_procedimento_p;
exception
when others then                
	nr_seq_congenere_prot_w		:= null;
	nr_seq_prest_pgto_coleta_w	:= null;
	ie_autogerado_proc_w		:= 'N';
end;

if (nr_seq_prest_pgto_coleta_w IS NOT NULL AND nr_seq_prest_pgto_coleta_w::text <> '') then

	ie_prestador_pagamento_w := 'S';
	
	select	max(cd_prestador)
	into STRICT	cd_prestador_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prest_pgto_coleta_w;
end if;
/* Obter dados do prestador */
if (coalesce(nr_seq_procedimento_p::text, '') = '') then
	/*Buscar o grupo de receita do procedimento OS - 306286*/
                   
	select	max(nr_seq_grupo_rec)    
	into STRICT	nr_seq_grupo_rec_w         
	from	procedimento               
	where	cd_procedimento = cd_procedimento_p   
	and	ie_origem_proced = ie_origem_proced_p;

	/*Alteracao realizada no caso do parametro for nulo*/
                       
	if (coalesce(nr_seq_classificacao_prest_p,0) = 0)  then                                                
		select	max(nr_seq_classificacao)
		into STRICT	nr_seq_classificacao_w    
		from	pls_prestador             
		where	nr_sequencia	= nr_seq_prestador_p;
	else
		nr_seq_classificacao_w := nr_seq_classificacao_prest_p;
	end if;

	select	max(ie_tipo_vinculo),         
		max(nr_seq_tipo_prestador),
		max(cd_pessoa_fisica)
	into STRICT	ie_tipo_vinculo_w,         
		nr_seq_tipo_prestador_w,
		cd_pessoa_fisica_w	
	from	pls_prestador              
	where	nr_sequencia	= nr_seq_prestador_p;
	
	SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;
end if;
/* Obter dados do beneficiario */

select	max(nr_seq_grupo_intercambio),      
	max(nr_seq_congenere),
	coalesce(max(nr_seq_intercambio),0),
	max(nr_seq_ops_congenere),
	coalesce(max(ie_pcmso),'N'),
	max(ie_tipo_segurado)
into STRICT	nr_seq_grupo_intercambio_w,    
	nr_seq_congenere_w,            
	nr_seq_intercambio_w,
	nr_seq_ops_congenere_w,
	ie_pcmso_w,
	ie_tipo_segurado_seg_w
from	pls_segurado               
where	nr_sequencia = nr_seq_segurado_p;

if (ie_tipo_beneficiario_p IS NOT NULL AND ie_tipo_beneficiario_p::text <> '') then
	ie_tipo_segurado_w := ie_tipo_beneficiario_p;
elsif (coalesce(ie_tipo_segurado_w::text, '') = '') then
	ie_tipo_segurado_w	:= ie_tipo_segurado_seg_w;
end if;

if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
	select	max(ie_tipo_contrato)
	into STRICT	ie_tipo_contrato_w
	from	pls_intercambio
	where	nr_sequencia = nr_seq_intercambio_w;
end if;

/* Robson 11/12/2010 - Alteracao para consistencia dos procedimentos do A500 */
select	max(ie_preco),                
	max(ie_acomodacao),                 
	coalesce(max(ie_franquia),'N')           
into STRICT	ie_preco_w,                
	ie_acomodacao_w,               
	ie_franquia_w                  
from	pls_plano                  
where	nr_sequencia = nr_seq_plano_p;
                         
/* Felipe - 17/08/2011 - OS 342575 
Felipe - 14/11/2011 - OS 372953 - Solicitado para retirar esse tratamento   
Demitrius - 395075  Regra tinha sido comenteda pois a regra da data nao podia ser mais utilizada .*/
                                                                                                                                                                                                  
ie_cooperado_w	:= pls_obter_se_cooperado_ativo(cd_medico_p,coalesce(dt_procedimento_p,dt_guia_w),'X');

if (coalesce(cd_prestador_w::text, '') = '') then
	select	max(cd_prestador)        
	into STRICT	cd_prestador_w             
	from	pls_prestador              
	where	nr_sequencia = nr_seq_prestador_p;
end if;

begin
	cd_especialidade_prest_w := substr(pls_obter_cod_espec_prest(nr_seq_prestador_p, cd_pessoa_fisica_w)||',',1,4000);
exception
when others then
	cd_especialidade_prest_w := null;
end;

if (coalesce(ie_tipo_acomodacao_ptu_p::text, '') = '') and (nr_seq_tipo_acomodacao_p IS NOT NULL AND nr_seq_tipo_acomodacao_p::text <> '') then

	select	max(ie_tipo_acomodacao_ptu)
	into STRICT	ie_tipo_acomodacao_ptu_w
	from	pls_tipo_acomodacao
	where	nr_sequencia = nr_seq_tipo_acomodacao_p;

else
	ie_tipo_acomodacao_ptu_w := ie_tipo_acomodacao_ptu_p;
end if;
if (ie_gravar_log_p = 'S') then		
	ds_observacao_log_w	:= 'nr_seq_prestador_p=' || nr_seq_prestador_p || ';nr_seq_categoria_p=' || nr_seq_categoria_p ||
				';dt_guia_p=' || dt_guia_p || ';cd_edicao_p=' || cd_edicao_p ||          
				';cd_procedimento_p=' || cd_procedimento_p || ';ie_origem_proced_p=' || ie_origem_proced_p ||                                                                                                        
				';cd_area_procedimento_w=' || cd_area_procedimento_w || ';cd_especialidade_w=' || cd_especialidade_w ||                                                                                              
				';cd_grupo_proc_w=' || cd_grupo_proc_w || ';nr_seq_tipo_acomodacao_p=' || nr_seq_tipo_acomodacao_p ||                                                                                                
				';nr_seq_tipo_atendimento_p=' || nr_seq_tipo_atendimento_p || ';nr_seq_clinica_p=' || nr_seq_clinica_p ||                                                                                            
				';nr_seq_plano_p=' || nr_seq_plano_p || ';ie_tipo_tabela_p=' || ie_tipo_tabela_p ||                                                                                                                  
				';nr_seq_outorgante_p=' || nr_seq_outorgante_p || ';nr_seq_contrato_p=' || nr_seq_contrato_p ||                                                                                                      
				';ie_preco_w=' || ie_preco_w || ';cd_convenio_p=' || cd_convenio_p ||    
				';cd_categoria_p=' || cd_categoria_p || ';ie_tipo_contratacao_p=' || ie_tipo_contratacao_p ||                                                                                                        
				';qt_dias_internacao_w=' || qt_dias_internacao_w || ';ie_tipo_vinculo_w=' || ie_tipo_vinculo_w ||                                                                                                    
				';nr_seq_classificacao_prest_p=' || nr_seq_classificacao_prest_p || ';nr_seq_classificacao_w=' || nr_seq_classificacao_w ||                                                                          
				';ie_tipo_segurado_w=' || ie_tipo_segurado_w || ';nr_seq_tipo_prestador_w=' || nr_seq_tipo_prestador_w ||                                                                                            
				';ie_cooperado_w=' || ie_cooperado_w || ';ie_internado_p=' || ie_internado_p ||  
				';ie_tecnica_utilizada_P=' || ie_tecnica_utilizada_P || ';ie_tipo_guia_p=' || ie_tipo_guia_p ||                                                                                                      
				';ie_acomodacao_w=' || ie_acomodacao_w || ';ie_tipo_intercambio_p=' || ie_tipo_intercambio_p ||                                                                                                      
				';ie_franquia_w=' || ie_franquia_w || ';nr_seq_grupo_rec_w=' || nr_seq_grupo_rec_w ||                                                                                                                
				';sg_uf_operadora_intercambio_p=' || sg_uf_operadora_intercambio_p || ';nr_seq_cbo_saude_p=' || nr_seq_cbo_saude_p||
				';ie_tipo_acomodacao_ptu_w='||ie_tipo_acomodacao_ptu_w||'; ie_origem_protocolo_w='||ie_origem_protocolo_w || 
				';cd_versao_tiss_w='||cd_versao_tiss_w ||';nr_seq_tipo_atend_princ=' || dados_conta_p.nr_seq_tipo_atendimento||'; ie_ref_guia_internacao='||dados_conta_p.ie_ref_guia_internacao||
				';ie_tipo_tabela_p ='||ie_tipo_tabela_p||';ie_regime_atendimento_p='||ie_regime_atendimento_p||
				';ie_regime_atendimento_p= '||ie_regime_atendimento_p||';ie_saude_ocupacional_p='||ie_saude_ocupacional_p;
								
end if;				

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	begin
		qt_idade_benef_w := pls_obter_dados_segurado(nr_seq_segurado_p,'ID');
	exception
	when others then
		qt_idade_benef_w := 0;
	end;
end if;

if (ie_gravar_log_p = 'S') then
	CALL pls_gravar_log_calculo_proc(	ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,                                                                                                               
					'Inicio da definicao do preco', ds_observacao_log_w, 'pls_define_preco_proc',   
					0, 0, 0,                    
					0, 0, 0,                    
					0, nr_seq_regra_w, nr_porte_anestesico_w,
					nr_auxiliares_w,ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC', coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
end if;

select	count(1)
into STRICT	qt_regra_w
from	pls_regra_preco_ordem
where	ie_tipo_preco = 'P'
and	((ie_tipo_tabela	= ie_tipo_tabela_p)
or	(((ie_tipo_tabela_p	= 'IP') or (ie_tipo_tabela_p	= 'IC')) and (ie_tipo_tabela	= 'I'))
or (ie_tipo_tabela_p = 'I'))  LIMIT 1;
/*verifica se existe regra de ordenacao de atributo cadastrada caso existir e verificada a view caso nao existir e mantido da forma que ja vinha ocorrendo*/

if (qt_regra_w > 0) then
	if (pls_util_cta_pck.usar_novo_agrup = 'S') then
		
		for r_c04_w in C04() loop
			begin
			
			nr_seq_grupo_servico_w	:= r_c04_w.nr_seq_grupo_servico;
			nr_seq_grupo_prestador_w:= r_c04_w.nr_seq_grupo_prestador;
			nr_seq_grupo_contrato_w	:= r_c04_w.nr_seq_grupo_contrato;
			nr_seq_grupo_produto_w	:= r_c04_w.nr_seq_grupo_produto;
			nr_seq_cbhpm_edicao_ww	:= r_c04_w.nr_seq_cbhpm_edicao;
			ie_proc_tabela_w	:= r_c04_w.ie_proc_tabela;
			nr_seq_categoria_w	:= r_c04_w.nr_seq_categoria_plano;
			nr_seq_grupo_med_exec_w	:= r_c04_w.nr_seq_grupo_med_exec;
					
			ie_grupo_produto_w		:= 'S';
			ie_grupo_contrato_w		:= 'S';
			ie_grupo_prestador_w		:= 'S';
			ie_grupo_servico_w		:= 'S';
			nr_seq_excecao_preco_proc_w	:= 0;
			ie_existe_proc_tabela_w		:= 'S';
			ie_categoria_w			:= 'S';
			ie_carteira_valida_w		:= 'S';
			ie_especialidade_prest_w	:= 'S';
			ie_grupo_operadora_w		:= 'S';
			ie_grupo_med_exec_w		:= 'S';
			ie_benef_remido_ok_w		:= 'S';
			
			--Se tem prestador participante informado na regra, precisa verificar se existe algum participante com esse codigo de prestador
			ie_prest_partic_ok_w := 'S';
			if (r_c04_w.cd_prestador_partic IS NOT NULL AND r_c04_w.cd_prestador_partic::text <> '') then
			
				select 	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_prest_partic_ok_w
				from	pls_proc_participante a,
						pls_prestador b
				where	a.nr_seq_prestador 	= b.nr_sequencia
				and		a.nr_seq_conta_proc = nr_seq_procedimento_p
				and		b.cd_prestador		= r_c04_w.cd_prestador_partic;
			
			end if;
			
			if (ie_grupo_prestador_w = 'S') then
				/* Grupo de contratos */
				if (coalesce(nr_seq_grupo_contrato_w,0) > 0) then
					if	((coalesce(nr_seq_contrato_p,0)	> 0) or (coalesce(nr_seq_contrato_intercambio_p,0) > 0)) then                         
						ie_grupo_contrato_w	:= pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_p, nr_seq_contrato_intercambio_p);
					else                          
						ie_grupo_contrato_w	:= 'N';
					end if;
				end if;
				
				if (ie_grupo_contrato_w = 'S') then
				
					/* Grupo de produtos */
					if (coalesce(nr_seq_grupo_produto_w,0) > 0) then 
						ie_grupo_produto_w	:= pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_p);
					end if;

					if (ie_grupo_produto_w = 'S') then
					
						if (ie_proc_tabela_w	= 'S') then
							ie_existe_proc_tabela_w	:= pls_obter_se_proc_tabela(r_c04_w.nr_sequencia,cd_procedimento_p, ie_origem_proced_w, dt_guia_p, r_c04_w.cd_moeda_tabela);
						end if;
						
						if (ie_existe_proc_tabela_w	= 'S') then
							if (r_c04_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c04_w.nr_seq_regra_atend_cart::text <> '') then
								ie_carteira_valida_w	:= pls_valida_regra_cart(nr_seq_segurado_p, r_c04_w.nr_seq_regra_atend_cart);
							end if;
							
							if (ie_carteira_valida_w	= 'S') then
								if (r_c04_w.cd_especialidade_prest	> 0) then
									if	not(cd_especialidade_prest_w like('%'||r_c04_w.cd_especialidade_prest||',%')) then
										ie_especialidade_prest_w	:= 'N';
									end if;
								end if;
								
								if (ie_especialidade_prest_w	= 'S') and (r_c04_w.nr_seq_grupo_operadora IS NOT NULL AND r_c04_w.nr_seq_grupo_operadora::text <> '') then
									ie_grupo_operadora_w := pls_se_grupo_preco_operadora(r_c04_w.nr_seq_grupo_operadora,coalesce(nr_seq_congenere_w,nr_seq_congenere_prot_w));								
								end if;
								
								if (nr_seq_grupo_med_exec_w IS NOT NULL AND nr_seq_grupo_med_exec_w::text <> '') then
			
									select 	count(1)
									into STRICT 	ie_nr_seq_grupo_exist_w
									from 	pls_regra_grupo_medico
									where 	exists ( SELECT 	1 
											from 	pls_medico_grupo
											where 	nr_seq_grupo 	= nr_seq_grupo_med_exec_w
											and  	cd_pessoa_fisica = cd_medico_p);

									if ( 	ie_nr_seq_grupo_exist_w = 0) then

										ie_grupo_med_exec_w := 'N';

									end if;

								end if;
							end if;
						end if;
					end if;
				end if;
			end if;

			if (coalesce(nr_seq_categoria_w,0) <> 0) then
				ie_categoria_w	:= pls_obter_se_categoria_plano(nr_seq_plano_p,nr_seq_categoria_w);
			end if;		
			
			
			-- se a regra deve limitar aos benef remidos
			if (r_c04_w.ie_gerar_remido = 'S') then
			
				-- aqui verifica se ja buscado se o benef e remido, como a execucao desta rotina e feita por procedimento, entao so precisa levantar essa informacao uma unica vez
				if (coalesce(ie_benef_remido_w::text, '') = '') then
				
					ie_benef_remido_w := pls_obter_se_benef_remido(nr_seq_segurado_p, coalesce(dt_procedimento_p, dt_guia_w));
				end if;
				
				ie_benef_remido_ok_w := ie_benef_remido_w;
			end if;

			if (ie_grupo_servico_w	= 'S') and (ie_grupo_prestador_w	= 'S') and (ie_grupo_contrato_w	= 'S') and (ie_existe_proc_tabela_w = 'S') and (ie_grupo_produto_w	= 'S') and (ie_categoria_w		= 'S') and (ie_carteira_valida_w	= 'S') and (ie_grupo_operadora_w	= 'S') and (ie_grupo_med_exec_w	= 'S') and (ie_especialidade_prest_w = 'S') and (ie_prest_partic_ok_w	= 'S')	and (ie_benef_remido_ok_w	= 'S')	then
				nr_seq_excecao_preco_proc_w	:= 0;
				
				select	count(1)
				into STRICT	qt_excecao_preco_proc_w  
				from	pls_excecao_preco_proc   
				where	nr_seq_regra	= r_c04_w.nr_sequencia
				and	ie_situacao	= 'A';
				if (qt_excecao_preco_proc_w > 0) then      
					nr_seq_excecao_preco_proc_w := pls_obter_excecao_preco_proc(	r_c04_w.nr_sequencia, cd_procedimento_p, ie_origem_proced_w, dt_guia_p, ie_preco_w, ie_tipo_contratacao_p, ie_tipo_segurado_w, nr_seq_contrato_p, nr_seq_prestador_p, nr_seq_congenere_w, nr_seq_tipo_prestador_w, nr_seq_grupo_intercambio_w, nr_seq_classificacao_w, nr_seq_classificacao_prest_p, nr_seq_contrato_intercambio_p, nr_seq_congenere_prot_w, nr_seq_excecao_preco_proc_w, dados_prestador_prot_p.nr_seq_tipo_prestador, ie_origem_protocolo_w, ie_tipo_intercambio_p, dados_conta_p.nr_seq_tipo_atendimento, ie_tipo_guia_p, nr_seq_prest_inter_w, ie_regime_atendimento_princ_p, ie_saude_ocupacional_p);
				end if;
				if (coalesce(nr_seq_excecao_preco_proc_w,0)	= 0) then	
					nr_seq_regra_w		:= r_c04_w.nr_sequencia;
				end if;	
			end if;

			nr_seq_grupo_servico_ant_w	:= nr_seq_grupo_servico_w;
			ie_grupo_servico_ant_w		:= ie_grupo_servico_w;
			end;
		end loop;
	else

		for r_c02_w in C02() loop
			begin
			
			nr_seq_grupo_servico_w	:= r_c02_w.nr_seq_grupo_servico;
			nr_seq_grupo_prestador_w:= r_c02_w.nr_seq_grupo_prestador;
			nr_seq_grupo_contrato_w	:= r_c02_w.nr_seq_grupo_contrato;
			nr_seq_grupo_produto_w	:= r_c02_w.nr_seq_grupo_produto;
			nr_seq_cbhpm_edicao_ww	:= r_c02_w.nr_seq_cbhpm_edicao;
			ie_proc_tabela_w	:= r_c02_w.ie_proc_tabela;
			nr_seq_categoria_w	:= r_c02_w.nr_seq_categoria_plano;
			nr_seq_grupo_med_exec_w	:= r_c02_w.nr_seq_grupo_med_exec;
					
			ie_grupo_produto_w		:= 'S';
			ie_grupo_contrato_w		:= 'S';
			ie_grupo_prestador_w		:= 'S';
			ie_grupo_servico_w		:= 'S';
			nr_seq_excecao_preco_proc_w	:= 0;
			ie_existe_proc_tabela_w		:= 'S';
			ie_categoria_w			:= 'S';
			ie_carteira_valida_w		:= 'S';
			ie_especialidade_prest_w	:= 'S';
			ie_grupo_operadora_w		:= 'S';
			ie_grupo_med_exec_w		:= 'S';
			ie_benef_remido_ok_w		:= 'S';
			
			--Se tem prestador participante informado na regra, precisa verificar se existe algum participante com esse codigo de prestador
			ie_prest_partic_ok_w := 'S';
			if (r_c02_w.cd_prestador_partic IS NOT NULL AND r_c02_w.cd_prestador_partic::text <> '') then
			
				select 	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_prest_partic_ok_w
				from	pls_proc_participante a,
						pls_prestador b
				where	a.nr_seq_prestador 	= b.nr_sequencia
				and		a.nr_seq_conta_proc = nr_seq_procedimento_p
				and		b.cd_prestador		= r_c02_w.cd_prestador_partic;
			
			end if;
			
			if (ie_grupo_prestador_w = 'S') then
				/* Grupo de contratos */
				if (coalesce(nr_seq_grupo_contrato_w,0) > 0) then
					if	((coalesce(nr_seq_contrato_p,0)	> 0) or (coalesce(nr_seq_contrato_intercambio_p,0) > 0)) then                         
						ie_grupo_contrato_w	:= pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_p, nr_seq_contrato_intercambio_p);
					else                          
						ie_grupo_contrato_w	:= 'N';
					end if;
				end if;
				
				if (ie_grupo_contrato_w = 'S') then
				
					/* Grupo de produtos */
					if (coalesce(nr_seq_grupo_produto_w,0) > 0) then 
						ie_grupo_produto_w	:= pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_p);
					end if;

					if (ie_grupo_produto_w = 'S') then
					
						if (ie_proc_tabela_w	= 'S') then
							ie_existe_proc_tabela_w	:= pls_obter_se_proc_tabela(r_c02_w.nr_sequencia,cd_procedimento_p, ie_origem_proced_w, dt_guia_p, r_c02_w.cd_moeda_tabela);
						end if;
						
						if (ie_existe_proc_tabela_w	= 'S') then
							if (r_c02_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c02_w.nr_seq_regra_atend_cart::text <> '') then
								ie_carteira_valida_w	:= pls_valida_regra_cart(nr_seq_segurado_p, r_c02_w.nr_seq_regra_atend_cart);
							end if;
							
							if (ie_carteira_valida_w	= 'S') then
								if (r_c02_w.cd_especialidade_prest	> 0) then
									if	not(cd_especialidade_prest_w like('%'||r_c02_w.cd_especialidade_prest||',%')) then
										ie_especialidade_prest_w	:= 'N';
									end if;
								end if;
								
								if (ie_especialidade_prest_w	= 'S') and (r_c02_w.nr_seq_grupo_operadora IS NOT NULL AND r_c02_w.nr_seq_grupo_operadora::text <> '') then
									ie_grupo_operadora_w := pls_se_grupo_preco_operadora(r_c02_w.nr_seq_grupo_operadora,coalesce(nr_seq_congenere_w,nr_seq_congenere_prot_w));
								end if;

								if (nr_seq_grupo_med_exec_w IS NOT NULL AND nr_seq_grupo_med_exec_w::text <> '') then
			
									select 	count(1)
									into STRICT 	ie_nr_seq_grupo_exist_w
									from 	pls_regra_grupo_medico
									where 	exists ( SELECT 	1 
											from 	pls_medico_grupo
											where 	nr_seq_grupo = nr_seq_grupo_med_exec_w
											and  	cd_pessoa_fisica = cd_medico_p);

									if ( 	ie_nr_seq_grupo_exist_w = 0) then

										ie_grupo_med_exec_w := 'N';

									end if;

								end if;
							end if;
						end if;
					end if;
				end if;
			end if;

			if (coalesce(nr_seq_categoria_w,0) <> 0) then
				ie_categoria_w	:= pls_obter_se_categoria_plano(nr_seq_plano_p,nr_seq_categoria_w);
			end if;		
			
			-- se a regra deve limitar aos benef remidos
			if (r_c02_w.ie_gerar_remido = 'S') then
			
				-- aqui verifica se ja buscado se o benef e remido, como a execucao desta rotina e feita por procedimento, entao so precisa levantar essa informacao uma unica vez
				if (coalesce(ie_benef_remido_w::text, '') = '') then
				
					ie_benef_remido_w := pls_obter_se_benef_remido(nr_seq_segurado_p, coalesce(dt_procedimento_p, dt_guia_w));
				end if;
				
				ie_benef_remido_ok_w := ie_benef_remido_w;
			end if;


			if (ie_grupo_servico_w	= 'S') and (ie_grupo_prestador_w	= 'S') and (ie_grupo_contrato_w	= 'S') and (ie_existe_proc_tabela_w = 'S') and (ie_grupo_produto_w	= 'S') and (ie_categoria_w		= 'S') and (ie_carteira_valida_w	= 'S') and (ie_grupo_operadora_w	= 'S') and (ie_grupo_med_exec_w	= 'S') and (ie_especialidade_prest_w = 'S') and (ie_prest_partic_ok_w	= 'S')	and (ie_benef_remido_ok_w	= 'S')	then
				nr_seq_excecao_preco_proc_w	:= 0;
				
				select	count(1)
				into STRICT	qt_excecao_preco_proc_w  
				from	pls_excecao_preco_proc   
				where	nr_seq_regra	= r_c02_w.nr_sequencia
				and	ie_situacao	= 'A';
			
				if (qt_excecao_preco_proc_w > 0) then      
					nr_seq_excecao_preco_proc_w := pls_obter_excecao_preco_proc(	r_c02_w.nr_sequencia, cd_procedimento_p, ie_origem_proced_w, dt_guia_p, ie_preco_w, ie_tipo_contratacao_p, ie_tipo_segurado_w, nr_seq_contrato_p, nr_seq_prestador_p, nr_seq_congenere_w, nr_seq_tipo_prestador_w, nr_seq_grupo_intercambio_w, nr_seq_classificacao_w, nr_seq_classificacao_prest_p, nr_seq_contrato_intercambio_p, nr_seq_congenere_prot_w, nr_seq_excecao_preco_proc_w, dados_prestador_prot_p.nr_seq_tipo_prestador, ie_origem_protocolo_w, ie_tipo_intercambio_p, dados_conta_p.nr_seq_tipo_atendimento, ie_tipo_guia_p, nr_seq_prest_inter_w, ie_regime_atendimento_princ_p, ie_saude_ocupacional_p);
				end if;
				if (coalesce(nr_seq_excecao_preco_proc_w,0)	= 0) then	
					nr_seq_regra_w		:= r_c02_w.nr_sequencia;
				end if;	
			end if;

			nr_seq_grupo_servico_ant_w	:= nr_seq_grupo_servico_w;
			ie_grupo_servico_ant_w		:= ie_grupo_servico_w;
			end;
		end loop;
	end if;

else
	if (pls_util_cta_pck.usar_novo_agrup = 'S') then
		for r_c03_w in C03() loop
			begin
			
			nr_seq_regra_ww		:= r_c03_w.nr_sequencia;
			nr_seq_grupo_servico_w	:= r_c03_w.nr_seq_grupo_servico;
			nr_seq_grupo_prestador_w:= r_c03_w.nr_seq_grupo_prestador;
			nr_seq_grupo_contrato_w	:= r_c03_w.nr_seq_grupo_contrato;
			nr_seq_grupo_produto_w	:= r_c03_w.nr_seq_grupo_produto;
			nr_seq_cbhpm_edicao_ww	:= r_c03_w.nr_seq_cbhpm_edicao;
			ie_proc_tabela_w	:= r_c03_w.ie_proc_tabela;
			nr_seq_categoria_w	:= r_c03_w.nr_seq_categoria_plano;
			nr_seq_grupo_med_exec_w	:= r_c03_w.nr_seq_grupo_med_exec;
			
			ie_grupo_produto_w		:= 'S';
			ie_grupo_contrato_w		:= 'S';
			ie_grupo_prestador_w		:= 'S';
			ie_grupo_servico_w		:= 'S';
			nr_seq_excecao_preco_proc_w	:= 0;
			ie_existe_proc_tabela_w		:= 'S';
			ie_categoria_w			:= 'S';
			ie_carteira_valida_w		:= 'S';
			ie_especialidade_prest_w	:= 'S';
			ie_grupo_operadora_w		:= 'S';
			ie_grupo_med_exec_w		:= 'S';
			ie_benef_remido_ok_w		:= 'S';
			
			--Se tem prestador participante informado na regra, precisa verificar se existe algum participante com esse codigo de prestador
			ie_prest_partic_ok_w := 'S';
			if (r_c03_w.cd_prestador_partic IS NOT NULL AND r_c03_w.cd_prestador_partic::text <> '') then
			
				select 	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_prest_partic_ok_w
				from	pls_proc_participante a,
						pls_prestador b
				where	a.nr_seq_prestador 	= b.nr_sequencia
				and		a.nr_seq_conta_proc = nr_seq_procedimento_p
				and		b.cd_prestador		= r_c03_w.cd_prestador_partic;
			
			end if;
			
			if (ie_grupo_prestador_w = 'S') then
				/* Grupo de contratos */
				if (coalesce(nr_seq_grupo_contrato_w,0) > 0) then
					if	((coalesce(nr_seq_contrato_p,0)	> 0) or (coalesce(nr_seq_contrato_intercambio_p,0) > 0)) then                         
						ie_grupo_contrato_w	:= pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_p, nr_seq_contrato_intercambio_p);
					else                          
						ie_grupo_contrato_w	:= 'N';
					end if;
				end if;
				
				if (ie_grupo_contrato_w = 'S') then
				
					/* Grupo de produtos */
					if (coalesce(nr_seq_grupo_produto_w,0) > 0) then 
						ie_grupo_produto_w	:= pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_p);
					end if;

					if (ie_grupo_produto_w = 'S') then
					
						if (ie_proc_tabela_w	= 'S') then
							ie_existe_proc_tabela_w	:= pls_obter_se_proc_tabela(r_c03_w.nr_sequencia,cd_procedimento_p, ie_origem_proced_w, dt_guia_p, r_c03_w.cd_moeda_tabela);

						end if;
						
						if (ie_existe_proc_tabela_w	= 'S') then
							if (r_c03_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c03_w.nr_seq_regra_atend_cart::text <> '') then
								ie_carteira_valida_w	:= pls_valida_regra_cart(nr_seq_segurado_p, r_c03_w.nr_seq_regra_atend_cart);
							end if;
							if (ie_carteira_valida_w	= 'S') then
								if (r_c03_w.cd_especialidade_prest	> 0) then
									if	not(cd_especialidade_prest_w like('%'||r_c03_w.cd_especialidade_prest||',%')) then
										ie_especialidade_prest_w	:= 'N';
									end if;
								end if;
								
								if (ie_especialidade_prest_w	= 'S') and (r_c03_w.nr_seq_grupo_operadora IS NOT NULL AND r_c03_w.nr_seq_grupo_operadora::text <> '') then
									ie_grupo_operadora_w := pls_se_grupo_preco_operadora(r_c03_w.nr_seq_grupo_operadora,coalesce(nr_seq_congenere_w,nr_seq_congenere_prot_w));
								end if;
								
								if (nr_seq_grupo_med_exec_w IS NOT NULL AND nr_seq_grupo_med_exec_w::text <> '') then
			
									select 	count(1)
									into STRICT 	ie_nr_seq_grupo_exist_w
									from 	pls_regra_grupo_medico
									where 	exists ( SELECT 	1 
											from 	pls_medico_grupo
											where 	nr_seq_grupo = nr_seq_grupo_med_exec_w
											and  	cd_pessoa_fisica = cd_medico_p);

									if ( 	ie_nr_seq_grupo_exist_w = 0) then

										ie_grupo_med_exec_w := 'N';

									end if;

								end if;
								
							end if;
						end if;

					end if;
				end if;
			end if;
			
			if (coalesce(nr_seq_categoria_w,0) <> 0) then
				ie_categoria_w	:= pls_obter_se_categoria_plano(nr_seq_plano_p,nr_seq_categoria_w);
			end if;
			
			-- se a regra deve limitar aos benef remidos
			if (r_c03_w.ie_gerar_remido = 'S') then
			
				-- aqui verifica se ja buscado se o benef e remido, como a execucao desta rotina e feita por procedimento, entao so precisa levantar essa informacao uma unica vez
				if (coalesce(ie_benef_remido_w::text, '') = '') then
				
					ie_benef_remido_w := pls_obter_se_benef_remido(nr_seq_segurado_p, coalesce(dt_procedimento_p, dt_guia_w));
				end if;
				
				ie_benef_remido_ok_w := ie_benef_remido_w;
			end if;
			
			if (ie_grupo_servico_w	= 'S') and (ie_grupo_prestador_w	= 'S') and (ie_grupo_contrato_w	= 'S') and (ie_existe_proc_tabela_w = 'S')and (ie_grupo_produto_w	= 'S') and (ie_categoria_w		= 'S') and (ie_carteira_valida_w	= 'S') and (ie_grupo_operadora_w	= 'S') and (ie_grupo_med_exec_w	= 'S') and (ie_especialidade_prest_w = 'S')  and (ie_prest_partic_ok_w	= 'S')	and (ie_benef_remido_ok_w	= 'S') then
				nr_seq_excecao_preco_proc_w	:= 0;
				
				select	count(1)
				into STRICT	qt_excecao_preco_proc_w  
				from	pls_excecao_preco_proc   
				where	nr_seq_regra	= nr_seq_regra_ww
				and	ie_situacao	= 'A';
				
				if (qt_excecao_preco_proc_w > 0) then      
					nr_seq_excecao_preco_proc_w := pls_obter_excecao_preco_proc(	nr_seq_regra_ww, cd_procedimento_p, ie_origem_proced_w, dt_guia_p, ie_preco_w, ie_tipo_contratacao_p, ie_tipo_segurado_w, nr_seq_contrato_p, nr_seq_prestador_p, nr_seq_congenere_w, nr_seq_tipo_prestador_w, nr_seq_grupo_intercambio_w, nr_seq_classificacao_w, nr_seq_classificacao_prest_p, nr_seq_contrato_intercambio_p, nr_seq_congenere_prot_w, nr_seq_excecao_preco_proc_w, dados_prestador_prot_p.nr_seq_tipo_prestador, ie_origem_protocolo_w, ie_tipo_intercambio_p, dados_conta_p.nr_seq_tipo_atendimento, ie_tipo_guia_p, nr_seq_prest_inter_w, ie_regime_atendimento_princ_p, ie_saude_ocupacional_p);
				end if;
				if (coalesce(nr_seq_excecao_preco_proc_w,0)	= 0) then	
					nr_seq_regra_w		:= nr_seq_regra_ww;
				end if;	
			end if;

			nr_seq_grupo_servico_ant_w	:= nr_seq_grupo_servico_w;
			ie_grupo_servico_ant_w		:= ie_grupo_servico_w;
			
			end;
		end loop;
	
	else
	
		for r_c01_w in C01() loop
			begin

			nr_seq_regra_ww		:= r_c01_w.nr_sequencia;
			nr_seq_grupo_servico_w	:= r_c01_w.nr_seq_grupo_servico;
			nr_seq_grupo_prestador_w:= r_c01_w.nr_seq_grupo_prestador;
			nr_seq_grupo_contrato_w	:= r_c01_w.nr_seq_grupo_contrato;
			nr_seq_grupo_produto_w	:= r_c01_w.nr_seq_grupo_produto;
			nr_seq_cbhpm_edicao_ww	:= r_c01_w.nr_seq_cbhpm_edicao;
			ie_proc_tabela_w	:= r_c01_w.ie_proc_tabela;
			nr_seq_categoria_w	:= r_c01_w.nr_seq_categoria_plano;
			nr_seq_grupo_med_exec_w	:= r_c01_w.nr_seq_grupo_med_exec;
			
			ie_grupo_produto_w		:= 'S';
			ie_grupo_contrato_w		:= 'S';
			ie_grupo_prestador_w		:= 'S';
			ie_grupo_servico_w		:= 'S';
			nr_seq_excecao_preco_proc_w	:= 0;
			ie_existe_proc_tabela_w		:= 'S';
			ie_categoria_w			:= 'S';
			ie_carteira_valida_w		:= 'S';
			ie_especialidade_prest_w	:= 'S';
			ie_grupo_operadora_w		:= 'S';
			ie_grupo_med_exec_w		:= 'S';
			ie_benef_remido_ok_w		:= 'S';
			
			--Se tem prestador participante informado na regra, precisa verificar se existe algum participante com esse codigo de prestador
			ie_prest_partic_ok_w := 'S';
			if (r_c01_w.cd_prestador_partic IS NOT NULL AND r_c01_w.cd_prestador_partic::text <> '') then
			
				select 	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END
				into STRICT	ie_prest_partic_ok_w
				from	pls_proc_participante a,
						pls_prestador b
				where	a.nr_seq_prestador 	= b.nr_sequencia
				and		a.nr_seq_conta_proc = nr_seq_procedimento_p
				and		b.cd_prestador		= r_c01_w.cd_prestador_partic;
			
			end if;
			
			if (ie_grupo_prestador_w = 'S') then
				/* Grupo de contratos */
				if (coalesce(nr_seq_grupo_contrato_w,0) > 0) then
					if	((coalesce(nr_seq_contrato_p,0)	> 0) or (coalesce(nr_seq_contrato_intercambio_p,0) > 0)) then                         
						ie_grupo_contrato_w	:= pls_se_grupo_preco_contrato(nr_seq_grupo_contrato_w, nr_seq_contrato_p, nr_seq_contrato_intercambio_p);
					else                          
						ie_grupo_contrato_w	:= 'N';
					end if;
				end if;
				
				if (ie_grupo_contrato_w = 'S') then
				
					/* Grupo de produtos */
					if (coalesce(nr_seq_grupo_produto_w,0) > 0) then 
						ie_grupo_produto_w	:= pls_se_grupo_preco_produto(nr_seq_grupo_produto_w, nr_seq_plano_p);
					end if;

					if (ie_grupo_produto_w = 'S') then
					
						if (ie_proc_tabela_w	= 'S') then
							ie_existe_proc_tabela_w	:= pls_obter_se_proc_tabela(r_c01_w.nr_sequencia,cd_procedimento_p, ie_origem_proced_w, dt_guia_p, r_c01_w.cd_moeda_tabela);

						end if;
						
						if (ie_existe_proc_tabela_w	= 'S') then
							if (r_c01_w.nr_seq_regra_atend_cart IS NOT NULL AND r_c01_w.nr_seq_regra_atend_cart::text <> '') then
								ie_carteira_valida_w	:= pls_valida_regra_cart(nr_seq_segurado_p, r_c01_w.nr_seq_regra_atend_cart);
							end if;
							if (ie_carteira_valida_w	= 'S') then
								if (r_c01_w.cd_especialidade_prest	> 0) then
									if	not(cd_especialidade_prest_w like('%'||r_c01_w.cd_especialidade_prest||',%')) then
										ie_especialidade_prest_w	:= 'N';
									end if;
								end if;
								
								if (ie_especialidade_prest_w	= 'S') and (r_c01_w.nr_seq_grupo_operadora IS NOT NULL AND r_c01_w.nr_seq_grupo_operadora::text <> '') then
									ie_grupo_operadora_w := pls_se_grupo_preco_operadora(r_c01_w.nr_seq_grupo_operadora,coalesce(nr_seq_congenere_w,nr_seq_congenere_prot_w));
								end if;
														
								if (nr_seq_grupo_med_exec_w IS NOT NULL AND nr_seq_grupo_med_exec_w::text <> '') then
			
									select 	count(1)
									into STRICT 	ie_nr_seq_grupo_exist_w
									from 	pls_regra_grupo_medico
									where 	exists ( SELECT 	1 
											from 	pls_medico_grupo
											where 	nr_seq_grupo = nr_seq_grupo_med_exec_w
											and  	cd_pessoa_fisica = cd_medico_p);

									if ( 	ie_nr_seq_grupo_exist_w = 0) then

										ie_grupo_med_exec_w := 'N';

									end if;

								end if;
									
							end if;
						end if;

					end if;
				end if;
			end if;
			
			-- se a regra deve limitar aos benef remidos
			if (r_c01_w.ie_gerar_remido = 'S') then
			
				-- aqui verifica se ja buscado se o benef e remido, como a execucao desta rotina e feita por procedimento, entao so precisa levantar essa informacao uma unica vez
				if (coalesce(ie_benef_remido_w::text, '') = '') then
				
					ie_benef_remido_w := pls_obter_se_benef_remido(nr_seq_segurado_p, coalesce(dt_procedimento_p, dt_guia_w));
				end if;
				
				ie_benef_remido_ok_w := ie_benef_remido_w;
			end if;
			
			if (coalesce(nr_seq_categoria_w,0) <> 0) then
				ie_categoria_w	:= pls_obter_se_categoria_plano(nr_seq_plano_p,nr_seq_categoria_w);
			end if;
													
			if (ie_grupo_servico_w	= 'S') and (ie_grupo_prestador_w	= 'S') and (ie_grupo_contrato_w	= 'S') and (ie_existe_proc_tabela_w = 'S')and (ie_grupo_produto_w	= 'S') and (ie_categoria_w		= 'S') and (ie_carteira_valida_w	= 'S') and (ie_grupo_operadora_w	= 'S') and (ie_grupo_med_exec_w	= 'S') and (ie_especialidade_prest_w = 'S') and (ie_prest_partic_ok_w	= 'S')	and (ie_benef_remido_ok_w	= 'S')	then
				nr_seq_excecao_preco_proc_w	:= 0;
				
				select	count(1)
				into STRICT	qt_excecao_preco_proc_w  
				from	pls_excecao_preco_proc   
				where	nr_seq_regra	= nr_seq_regra_ww
				and	ie_situacao	= 'A';

				if (qt_excecao_preco_proc_w > 0) then      
					nr_seq_excecao_preco_proc_w := pls_obter_excecao_preco_proc(	nr_seq_regra_ww, cd_procedimento_p, ie_origem_proced_w, dt_guia_p, ie_preco_w, ie_tipo_contratacao_p, ie_tipo_segurado_w, nr_seq_contrato_p, nr_seq_prestador_p, nr_seq_congenere_w, nr_seq_tipo_prestador_w, nr_seq_grupo_intercambio_w, nr_seq_classificacao_w, nr_seq_classificacao_prest_p, nr_seq_contrato_intercambio_p, nr_seq_congenere_prot_w, nr_seq_excecao_preco_proc_w, dados_prestador_prot_p.nr_seq_tipo_prestador, ie_origem_protocolo_w, ie_tipo_intercambio_p, dados_conta_p.nr_seq_tipo_atendimento, ie_tipo_guia_p, nr_seq_prest_inter_w, ie_regime_atendimento_princ_p, ie_saude_ocupacional_p);
				end if;
				if (coalesce(nr_seq_excecao_preco_proc_w,0)	= 0) then	
					nr_seq_regra_w		:= nr_seq_regra_ww;
				end if;	
			end if;

			nr_seq_grupo_servico_ant_w	:= nr_seq_grupo_servico_w;
			ie_grupo_servico_ant_w		:= ie_grupo_servico_w;
			
			end;
		end loop;
	end if;
end if;	

if (coalesce(nr_seq_regra_w,0) > 0) then
	select	a.cd_edicao_amb,
		a.dt_inicio_vigencia,         
		coalesce(a.vl_ch_honorarios,1),    
		coalesce(a.vl_ch_custo_oper,1),    
		cd_moeda_ch_medico,           
		cd_moeda_ch_co,               
		cd_moeda_filme,               
		cd_moeda_anestesista,         
		a.tx_ajuste_geral,            
		a.vl_filme,                   
		a.tx_ajuste_filme,            
		a.tx_ajuste_custo_oper,       
		a.tx_ajuste_partic,           
		a.tx_ajuste_ch_honor,         
		coalesce(a.vl_proc_negociado,0),   
		coalesce(a.vl_medico,0),           
		coalesce(a.vl_auxiliares,0),       
		coalesce(a.vl_anestesista,0),      
		coalesce(a.vl_custo_operacional,0),
		coalesce(a.ie_preco_informado,'N'),
		ie_autogerado,
		coalesce(a.vl_materiais, 0),
		nr_seq_cbhpm_edicao,
		ie_ch_padrao_anestesista,
		nr_seq_edicao_tuss,
		ie_valor_autorizado
	into STRICT	cd_edicao_amb_w,          
		dt_inicio_vigencia_w,         
		vl_ch_honorarios_w,           
		vl_ch_custo_oper_w,           
		cd_moeda_ch_medico_w,         
		cd_moeda_ch_co_w,             
		cd_moeda_filme_w,             
		cd_moeda_anestesista_w,       
		tx_ajuste_geral_w,            
		vl_filme_w,                   
		tx_ajuste_filme_w,            
		tx_ajuste_custo_oper_w,       
		tx_ajuste_partic_w,           
		tx_ajuste_ch_honor_w,         
		vl_proc_negociado_w,          
		vl_medico_neg_w,              
		vl_auxiliares_neg_w,          
		vl_anestesista_neg_w,         
		vl_custo_oper_neg_w,          
		ie_preco_informado_w,         
		ie_autogerado_w,
		vl_materiais_w,
		nr_seq_cbhpm_edicao_w,
		ie_ch_padrao_anestesista_w,
		nr_seq_edicao_tuss_w,
		ie_valor_autorizado_w
	from	pls_regra_preco_proc a    
	where	a.nr_sequencia	= nr_seq_regra_w;
	
	ds_log_calculo_w	:= 'Preco x CH';

	if (coalesce(ie_autogerado_w,'N') = 'S') and (ie_tipo_tabela_p	 	<> 'A') and (ie_autogerado_proc_w	= 'S')then
			
		SELECT * FROM pls_gerencia_autogerado_pck.pls_define_moeda_autogerado( dt_mes_competencia_w, dt_guia_p, nr_seq_prestador_p, cd_estabelecimento_p, nr_seq_regra_autogerado_w, vl_autogerado_w, cd_moeda_autogerado_w, cd_prestador_w, nr_seq_lote_w, dt_lote_w, cd_procedimento_p, ie_origem_proced_p) INTO STRICT nr_seq_regra_autogerado_w, vl_autogerado_w, cd_moeda_autogerado_w, nr_seq_lote_w, dt_lote_w;
	
	else
		cd_moeda_autogerado_w	:= cd_moeda_ch_medico_w;
	end if;
	
	if (cd_moeda_ch_medico_w IS NOT NULL AND cd_moeda_ch_medico_w::text <> '') then
		vl_ch_honorarios_w	:= obter_valor_cotacao_moeda_data(cd_moeda_ch_medico_w, dt_guia_p);
		ds_log_calculo_w	:= 'Preco x Moeda';
	end if;
	if (cd_moeda_ch_co_w IS NOT NULL AND cd_moeda_ch_co_w::text <> '') then     
		vl_ch_custo_oper_w	:= obter_valor_cotacao_moeda_data(cd_moeda_ch_co_w, dt_guia_p);
		ds_log_calculo_w	:= 'Preco x Moeda';
	end if;
	
	if (vl_autogerado_w	<> 0) and (ie_autogerado_proc_w	= 'S') and (vl_autogerado_w	<= coalesce(vl_ch_custo_oper_w,0)) and (vl_autogerado_w	<= coalesce(vl_ch_honorarios_w,0)) then       
		vl_ch_honorarios_w	:= vl_autogerado_w;
		vl_ch_custo_oper_w	:= vl_autogerado_w;
		vl_ch_anestesista_w	:= vl_autogerado_w;
		ds_log_calculo_w	:= 'Preco x Autogerado';
		if (cd_moeda_filme_w IS NOT NULL AND cd_moeda_filme_w::text <> '') then
			vl_ch_custo_filme_w	:= obter_valor_cotacao_moeda_data(cd_moeda_filme_w, dt_guia_p);
		end if;
	else
		
		cd_moeda_autogerado_w := cd_moeda_ch_medico_w;
		
		if (cd_moeda_filme_w IS NOT NULL AND cd_moeda_filme_w::text <> '') then
			vl_ch_custo_filme_w	:= obter_valor_cotacao_moeda_data(cd_moeda_filme_w, dt_guia_p);
			ds_log_calculo_w	:= 'Preco x Moeda';
		end if;
		if (cd_moeda_anestesista_w IS NOT NULL AND cd_moeda_anestesista_w::text <> '') then                              
			vl_ch_anestesista_w	:= obter_valor_cotacao_moeda_data(cd_moeda_anestesista_w, dt_guia_p);
			ds_log_calculo_w	:= 'Preco x Moeda';
		end if;
	end if;
	
	/* Obter a origem da edicao */
	begin                          
		select	coalesce(ie_origem_proced, ie_origem_proced_w),                          
			ie_calculo_tuss               
		into STRICT	ie_origem_proced_w,       
			ie_calculo_tuss_w             
		from	edicao_amb                
		where	cd_edicao_amb	= cd_edicao_amb_w;
	exception                      
	when others then               
		ie_origem_proced_w	:= ie_origem_proced_w;
	end;
	
	if (ie_valor_autorizado_w	= 'S') then
	
		if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
			select 	coalesce(sum(vl_procedimento),0),
				coalesce(sum(qt_autorizada),0)
			into STRICT	vl_proc_autorizado_w,
				qt_proc_autorizado_w
			from	pls_guia_plano_proc
			where 	nr_seq_guia	= nr_seq_guia_w
			and	cd_procedimento	= cd_procedimento_p
			and	ie_origem_proced = ie_origem_proced_p
			and	ie_status	in ('L','S','P');
			
                        /*A variavel vl_proc_autorizado_w sera comentada pelo fato de receber uma divisao do valor obtido em autorizacao juntamente com a quantidade autorizada.
                          Ocorre que conceitualmente, dentro da autorizacao (ou requisicao), isso ja e tratado, sendo justamente o campo vl_procedimento o valor para 1 quantidade.
                        OS 2850706
			vl_proc_autorizado_w	:= dividir(vl_proc_autorizado_w,qt_proc_autorizado_w);*/
		else
			vl_proc_autorizado_w := 0;
		end if;
		vl_procedimento_w 	:= vl_proc_autorizado_w;
		vl_custo_operacional_w	:= 0;
		vl_medico_w		:= vl_proc_autorizado_w;
		vl_anestesista_w	:= 0;
		vl_auxiliares_amb_w	:= 0;
		ds_observacao_log_w	:= 'Preco autorizado!';
		vl_proc_negociado_w	:= vl_proc_autorizado_w;
	elsif (ie_preco_informado_w	= 'S') then
		vl_procedimento_w 	:= vl_proc_negociado_w;
		vl_custo_operacional_w	:= vl_custo_oper_neg_w;
		vl_medico_w		:= vl_medico_neg_w;
		vl_anestesista_w	:= vl_anestesista_neg_w;
		vl_auxiliares_amb_w	:= vl_auxiliares_neg_w;
		ds_observacao_log_w	:= 'Preco informado!';
	else                           
		if (ie_origem_proced_w = 1) or (ie_origem_proced_w = 4) or  
			(ie_origem_proced_w = 8 AND ie_calculo_tuss_w = 'A') then            
			if (ie_origem_proced_w = 8) then
				SELECT * FROM pls_define_preco_tuss(ie_calculo_tuss_w, cd_edicao_amb_w, cd_procedimento_p, ie_origem_proced_p, dt_guia_p, cd_estabelecimento_p, nr_seq_prestador_p, nr_seq_edicao_tuss_w, nr_seq_plano_p, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_amb_w, vl_custo_operacional_w, vl_filme_ww, vl_porte_anest_cbhpm_w, qt_filme_w, nr_auxiliares_w, nr_porte_anestesico_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, qt_incidencia_amb_w) INTO STRICT vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_amb_w, vl_custo_operacional_w, vl_filme_ww, vl_porte_anest_cbhpm_w, qt_filme_w, nr_auxiliares_w, nr_porte_anestesico_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, qt_incidencia_amb_w;
			vl_base_filme_w := vl_filme_w; -- aldellandrea os 774659
			vl_filme_w := vl_filme_w * qt_filme_w;
			else
				--obtem os valores para a tabela amb
				val_tab_amb_w := pls_obter_val_tab_amb(cd_edicao_amb_w, dt_guia_p, cd_procedimento_p, vl_filme_w);
				
				vl_procedimento_w := val_tab_amb_w.vl_procedimento;
				vl_custo_operacional_w := val_tab_amb_w.vl_custo_operacional;
				vl_medico_w := val_tab_amb_w.vl_medico;
				vl_filme_w := val_tab_amb_w.vl_filme;
				nr_porte_anestesico_w := val_tab_amb_w.nr_porte_anestesico;
				vl_anestesista_w := val_tab_amb_w.vl_anestesista;
				nr_auxiliares_w := val_tab_amb_w.nr_auxiliares;
				vl_auxiliares_amb_w := val_tab_amb_w.vl_auxiliares_amb;
				qt_filme_w := val_tab_amb_w.qt_filme;
				vl_base_filme_w := vl_filme_w; --aldellandrea os 774659
			end if;
			
			cd_porte_anestesico_w	:= nr_porte_anestesico_w;
			if (ie_gravar_log_p = 'S') then
				ds_observacao_log_w	:= 'Regra: ' || nr_seq_regra_w || ' / Edicao AMB: ' || cd_edicao_amb_w ||
							' / Data: ' || dt_guia_p ||
							' / Porte Anest.: ' || nr_porte_anestesico_w || ' / Auxiliares ' || nr_auxiliares_w ||                                                                                                            
							' / Vl. auxiliares ' || vl_auxiliares_amb_w;
				CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,                                                                                                            
					'Tabela de preco', ds_observacao_log_w, 'pls_define_preco_proc',        
					0, vl_filme_w, vl_custo_operacional_w,   
					vl_medico_w, vl_auxiliares_w, vl_anestesista_w,                         
					1, nr_seq_regra_w, nr_porte_anestesico_w,
					nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC',coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
			end if;
			vl_custo_operacional_w	:= vl_custo_operacional_w * vl_ch_custo_oper_w;
			vl_medico_w		:= vl_medico_w * vl_ch_honorarios_w;
			if (vl_ch_custo_filme_w	<> 0) then
				vl_filme_w		:= vl_filme_w * vl_ch_custo_filme_w;
			end if;
			if (ie_gravar_log_p = 'S') then
				ds_observacao_log_w	:= 'vl_autogerado_w: ' || vl_autogerado_w  ||' /lote autogerado: '||  nr_seq_lote_w||
						' /data lote:' || dt_lote_w|| ' / vl_ch_honorarios_w: ' || vl_ch_honorarios_w ||
						' / vl_ch_custo_oper_w: ' || vl_ch_custo_oper_w  || ' / vl_ch_filme_w: ' || vl_ch_custo_filme_w || 
						' / vl_ch_anestesista_w: '|| vl_ch_anestesista_w ||' / vl_filme_w: ' || vl_filme_w ||                                                                                                             
						' / tx_ajuste_partic_w:'  || tx_ajuste_partic_w;
				CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,                                                                                                            
					ds_log_calculo_w, ds_observacao_log_w, 'pls_define_preco_proc',         
					0, vl_filme_w, vl_custo_operacional_w,   
					vl_medico_w, vl_auxiliares_w, vl_anestesista_w,                         
					2, nr_seq_regra_w, nr_porte_anestesico_w,
					nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC',coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
			end if;
			vl_custo_operacional_w	:= vl_custo_operacional_w * tx_ajuste_custo_oper_w;
			vl_medico_w		:= vl_medico_w * tx_ajuste_ch_honor_w;
			vl_filme_w		:= vl_filme_w * tx_ajuste_filme_w;
			if (ie_gravar_log_p = 'S') then
				ds_observacao_log_w	:= 'Regra: ' || nr_seq_regra_w || ' / CH CO.: ' || vl_ch_custo_oper_w ||
							' / Tx. ajuste CO.: ' || tx_ajuste_custo_oper_w ||  ' / CH medico: ' || vl_ch_honorarios_w ||                                                                                                     
							' / Tx. ajuste HM. ' || tx_ajuste_ch_honor_w || ' / Tx. ajuste filme  ' || tx_ajuste_filme_w;
				CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,                                                                                                            
					'Preco x Tx. Ajuste', ds_observacao_log_w, 'pls_define_preco_proc',     
					0, vl_filme_w, vl_custo_operacional_w,   
					vl_medico_w, vl_auxiliares_w, vl_anestesista_w,                         
					3, nr_seq_regra_w, nr_porte_anestesico_w,
					nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC', coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
			end if;
		elsif (ie_origem_proced_w = 5) or
			(ie_origem_proced_w = 8 AND ie_calculo_tuss_w = 'C') then
			if (ie_origem_proced_w = 8) then
				SELECT * FROM pls_define_preco_tuss(ie_calculo_tuss_w, cd_edicao_amb_w, cd_procedimento_p, ie_origem_proced_p, dt_guia_p, cd_estabelecimento_p, nr_seq_prestador_p, nr_seq_edicao_tuss_w, nr_seq_plano_p, vl_procedimento_w, vl_medico_cbhpm_w, vl_anestesista_w, vl_auxiliares_amb_w, vl_custo_operacional_w, vl_filme_ww, vl_porte_anest_cbhpm_w, qt_filme_cbhpm_w, nr_auxiliar_cbhpm_w, nr_porte_anest_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, qt_incidencia_cbhpm_w) INTO STRICT vl_procedimento_w, vl_medico_cbhpm_w, vl_anestesista_w, vl_auxiliares_amb_w, vl_custo_operacional_w, vl_filme_ww, vl_porte_anest_cbhpm_w, qt_filme_cbhpm_w, nr_auxiliar_cbhpm_w, nr_porte_anest_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, qt_incidencia_cbhpm_w;
			else                         
				/* obter os valores da tabela CBHPM */
   
				
				select	max(dt_vigencia)
				into STRICT	dt_inicio_vig_edicao_w 
				from	cbhpm_edicao           
				where	nr_sequencia	= nr_seq_cbhpm_edicao_w;
			 
				if ( coalesce(dt_inicio_vig_edicao_w::text, '') = '') then
					dt_inicio_vig_edicao_w	:= dt_inicio_vigencia_w;
				end if;
				
				ie_credenciado_w  := obter_se_medico_credenciado(cd_estabelecimento_p, cd_medico_p, cd_convenio_p, null, cd_especialidade_w,
					cd_categoria_p, null, null, null, null, null, null);
				
				SELECT * FROM pls_obter_preco_cbhpm(          
					cd_estabelecimento_p, dt_guia_p, cd_procedimento_p, ie_origem_proced_w, dt_inicio_vig_edicao_w, nr_seq_prestador_p, null, vl_medico_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w, qt_incidencia_cbhpm_w, ie_unid_ra_cbhpm_w, vl_porte_cbhpm_w, dt_vig_porte_cbhpm_w, dt_vig_preco_cbhpm_w, vl_porte_anest_cbhpm_w, cd_categoria_p, ie_credenciado_w, coalesce(nr_seq_congenere_w, nr_seq_congenere_prot_w), nr_seq_plano_p) INTO STRICT vl_medico_cbhpm_w, cd_porte_cbhpm_w, tx_porte_cbhpm_w, qt_uco_cbhpm_w, nr_porte_anest_cbhpm_w, nr_auxiliar_cbhpm_w, qt_filme_cbhpm_w, qt_incidencia_cbhpm_w, ie_unid_ra_cbhpm_w, vl_porte_cbhpm_w, dt_vig_porte_cbhpm_w, dt_vig_preco_cbhpm_w, vl_porte_anest_cbhpm_w;
			end if;
			cd_porte_anestesico_w	:= nr_porte_anest_cbhpm_w;
			
			if (ie_gravar_log_p = 'S') then
				ds_observacao_log_w	:= 'Regra: ' || nr_seq_regra_w || ' / Edicao AMB: ' || cd_edicao_amb_w ||
							' / Data: ' || dt_guia_p || ' / Porte Anest.: ' || nr_porte_anest_cbhpm_w ||  
							' / Auxiliares ' || nr_auxiliar_cbhpm_w || ' / Vl. auxiliares ' || vl_auxiliares_amb_w;
				CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,
					'Tabela de preco', ds_observacao_log_w, 'pls_define_preco_proc',        
					0, vl_filme_w, 0,           
					vl_medico_cbhpm_w, 0, vl_porte_anest_cbhpm_w,                           
					1, nr_seq_regra_w, nr_porte_anestesico_w,
					nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC',coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
			end if;
			vl_custo_operacional_w	:= coalesce((qt_uco_cbhpm_w * vl_ch_custo_oper_w),0);
			vl_medico_w		:= (vl_medico_cbhpm_w * vl_ch_honorarios_w);
			vl_filme_w		:= (qt_filme_cbhpm_w * vl_filme_w);
			if (vl_ch_custo_filme_w	<> 0) then
				vl_filme_w		:= vl_filme_w * vl_ch_custo_filme_w;
			end if;
			if (ie_gravar_log_p = 'S') then
				ds_observacao_log_w	:= 'vl_autogerado_w: ' || vl_autogerado_w  ||' /lote autogerado: '||  nr_seq_lote_w||
						' /data lote:' || dt_lote_w|| ' / vl_ch_honorarios_w: ' || vl_ch_honorarios_w ||
						' / vl_ch_custo_oper_w: ' || vl_ch_custo_oper_w ||  ' / vl_filme_w: ' || vl_filme_w ||                                                                                                             
						' / tx_ajuste_partic_w:' || tx_ajuste_partic_w;
				CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,                                                                                                            
					ds_log_calculo_w, ds_observacao_log_w, 'pls_define_preco_proc',         
					0, vl_filme_w, vl_custo_operacional_w,   
					vl_medico_w, vl_auxiliares_amb_w, vl_anestesista_w,                     
					2, nr_seq_regra_w, nr_porte_anestesico_w,
					nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC',coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
			end if;
			
			vl_custo_operacional_w	:= vl_custo_operacional_w * tx_ajuste_custo_oper_w;
			vl_medico_w		:= vl_medico_w * tx_ajuste_ch_honor_w;
			vl_filme_w		:= vl_filme_w * tx_ajuste_filme_w;
			nr_porte_anestesico_w	:= nr_porte_anest_cbhpm_w;
			vl_anestesista_w	:= 0;
			nr_auxiliares_w		:= coalesce(nr_auxiliar_cbhpm_w,0);
			vl_auxiliares_amb_w	:= 0;
			if (ie_gravar_log_p = 'S') then
				ds_observacao_log_w	:= 'Regra: ' || nr_seq_regra_w || ' / CH CO.: ' || vl_ch_custo_oper_w ||
							' / Tx. ajuste CO.: ' || tx_ajuste_custo_oper_w || ' / CH medico: ' || vl_ch_honorarios_w ||                                                                                                      
							' / Tx. ajuste HM. ' || tx_ajuste_ch_honor_w || ' / Tx. ajuste filme  ' || tx_ajuste_filme_w;
				CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,                                                                                                            
					'Preco x Tx. Ajuste', ds_observacao_log_w, 'pls_define_preco_proc',     
					0, vl_filme_w, vl_custo_operacional_w,   
					vl_medico_w, vl_auxiliares_amb_w, vl_anestesista_w,                     
					3, nr_seq_regra_w, nr_porte_anestesico_w,
					nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC', coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
			end if;
		end if;
	end if;
	
	if (vl_auxiliares_amb_w > 0) then 
	
		vl_auxiliares_w		:= vl_auxiliares_amb_w;
		
	elsif (ie_origem_proced_w = 5) or
		(ie_origem_proced_w = 8 AND ie_calculo_tuss_w = 'C') then
	
		/* Para CBHPM sempre paga 30% para o 1o auxiliar e 20% para o 2o auxiliar */
      
		if (nr_auxiliares_w > 0) then 
			vl_auxiliares_w	:= ((vl_medico_w * .3) + (vl_medico_w * (nr_auxiliares_w -1) * .2));
			ds_observacao_log_w	:= ds_observacao_log_w || ' / Auxiliares: ' || nr_auxiliares_w;
		end if;
	end if;
	if (ie_origem_proced_w = 1) or (ie_origem_proced_w = 4) or
		(ie_origem_proced_w = 8 AND ie_calculo_tuss_w = 'A' AND ie_porte_amb_tuss_w = 'A') then 
		/* obter valor do porte anestesico */
      
		begin                         
			select	vl_porte_anestesico    
			into STRICT	vl_porte_anestesico_w    
			from	porte_anestesico         
			where	cd_edicao_amb		= cd_edicao_amb_w     
			and	nr_porte_anestesico	= nr_porte_anestesico_w                           
			and	dt_inicio_vigencia	=      
					(	SELECT	max(b.dt_inicio_vigencia)       
						from	porte_anestesico b    
						where	b.cd_edicao_amb		= cd_edicao_amb_w
						and	b.nr_porte_anestesico	= nr_porte_anestesico_w                      
						and	b.dt_inicio_vigencia	<= dt_guia_p);
		exception                     
			when others then             
				vl_porte_anestesico_w	:= 0;
		end;
		/* calcular valor do anestesista */

	
		if (vl_porte_anestesico_w 	= 0) and (vl_anestesista_w	> 0) then  
			if (ie_ch_padrao_anestesista_w	= 'C') then
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_anestesista_w * vl_ch_anestesista_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w);
			elsif (ie_ch_padrao_anestesista_w	= 'M') then
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			else
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_anestesista_w * vl_ch_anestesista_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			end if;
		end if;
		if (vl_porte_anestesico_w > 0) then  
			if (ie_ch_padrao_anestesista_w	= 'C') then
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_porte_anestesico_w * vl_ch_anestesista_w );
				else
					vl_anestesista_w	:= (vl_porte_anestesico_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w);
			elsif (ie_ch_padrao_anestesista_w	= 'M') then
				vl_anestesista_w	:= (vl_porte_anestesico_w);
				
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			else
					
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_porte_anestesico_w * vl_ch_anestesista_w );
				else
					vl_anestesista_w	:= (vl_porte_anestesico_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			end if;			
			
		end if;
	elsif (ie_origem_proced_w = 5) or
		(ie_origem_proced_w = 8 AND ie_calculo_tuss_w = 'C')then 
	
		-- Quando for para buscar do preco informado nao olha para a tabela de preco.
		if (ie_ch_padrao_anestesista_w	= 'C') then
			if (ie_preco_informado_w = 'N' or coalesce(ie_preco_informado_w::text, '') = '') then
		
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (coalesce(vl_porte_anest_cbhpm_w,0)  * vl_ch_anestesista_w );
				else
					vl_anestesista_w	:= (coalesce(vl_porte_anest_cbhpm_w,0));
				end if;
			end if;
			vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w);

		elsif (ie_ch_padrao_anestesista_w	= 'M') then
			
			if (ie_preco_informado_w = 'N' or coalesce(ie_preco_informado_w::text, '') = '') then
			
				vl_anestesista_w	:= (coalesce(vl_porte_anest_cbhpm_w,0));
			
			end if;
			vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
		else
				
			if (ie_preco_informado_w = 'N' or coalesce(ie_preco_informado_w::text, '') = '') then
			
				vl_anestesista_w	:= (coalesce(vl_porte_anest_cbhpm_w,0) * vl_ch_anestesista_w * tx_ajuste_partic_w);
		
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (coalesce(vl_porte_anest_cbhpm_w,0)  * vl_ch_anestesista_w );
				else
					vl_anestesista_w	:= (coalesce(vl_porte_anest_cbhpm_w,0));
				end if;
			end if;
			vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
		end if;			
		
	elsif	(ie_origem_proced_w = 8 AND ie_calculo_tuss_w = 'A') then
		 
		begin                         
			select	vl_porte    
			into STRICT	vl_porte_anestesico_w    
			from	tuss_porte         
			where	cd_porte	= nr_porte_anestesico_w                           
			and	dt_vigencia	<= dt_guia_p;
		exception                     
			when others then             
				vl_porte_anestesico_w	:= 0;
		end;
		
		if (ie_ch_padrao_anestesista_w	= 'C') then
			if (vl_porte_anestesico_w 	= 0) and (vl_anestesista_w	> 0) then  
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_anestesista_w * vl_ch_anestesista_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w);
			end if;
			
			if (vl_porte_anestesico_w > 0) then       
				vl_anestesista_w	:= (vl_porte_anestesico_w);
				
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			end if;

		elsif (ie_ch_padrao_anestesista_w	= 'M') then
			if (vl_porte_anestesico_w 	= 0) and (vl_anestesista_w	> 0) then
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_anestesista_w * vl_ch_anestesista_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			end if;
			
			if (vl_porte_anestesico_w > 0) then       
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_porte_anestesico_w * vl_ch_anestesista_w );
				else
					vl_anestesista_w	:= (vl_porte_anestesico_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			end if;
		else
				
			if (vl_porte_anestesico_w 	= 0) and (vl_anestesista_w	> 0) then
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_anestesista_w * vl_ch_anestesista_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			end if;
			
			if (vl_porte_anestesico_w > 0) then       
				if (vl_ch_anestesista_w > 0 ) then
					vl_anestesista_w	:= (vl_porte_anestesico_w * vl_ch_anestesista_w );
				else
					vl_anestesista_w	:= (vl_porte_anestesico_w);
				end if;
				vl_anestesista_w	:= (vl_anestesista_w * tx_ajuste_partic_w * vl_ch_honorarios_w);
			end if;
		end if;			
		
		
	end if;
	--Vl proc tabela e um campo utilizado por hora somente para relatorio deve ser armazerado neste momento para que nao sofra allteracao OS 732043
	vl_proc_tabela_w		:= coalesce(vl_medico_w,0);
	vl_custo_operacional_tab_w	:= coalesce(vl_custo_operacional_w,0);
	qt_filme_tab_w			:= coalesce(qt_filme_w,0);
	/* calcular valor do procedimento */

	if (coalesce(vl_proc_negociado_w,0) > 0) and
		((ie_preco_informado_w	= 'S') or (ie_valor_autorizado_w = 'S'))then
		/* Felipe - OS 111739 - Retirei o vl_filme_w da somatoria do vl_soma_proc_w */
    
		vl_soma_proc_w		:= (vl_custo_operacional_w + vl_medico_w +
					   vl_auxiliares_w + vl_anestesista_w + vl_materiais_w);
		if (vl_soma_proc_w = 0) then  
			pr_ajuste_w	:= 1;
		else
			pr_ajuste_w	:= dividir_sem_round(vl_proc_negociado_w,vl_soma_proc_w);
		end if;
		if (ie_gravar_log_p = 'S') then
			ds_observacao_log_w	:= 'Regra: ' || nr_seq_regra_w || ' / Preco informado na tabela! / Data: ' || dt_guia_p ||
							'Vl. proc. negociado: ' || vl_proc_negociado_w;
			CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,
				'Preco informado', ds_observacao_log_w, 'pls_define_preco_proc',
				vl_soma_proc_w, vl_materiais_w, vl_custo_operacional_w,
				vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
				2, nr_seq_regra_w, nr_porte_anestesico_w,
				nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC', coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
		end if;
		vl_base_filme_w		:= vl_materiais_w; -- aldellandrea os 774659
		vl_medico_w		:= vl_medico_w * pr_ajuste_w;
		vl_anestesista_w	:= vl_anestesista_w * pr_ajuste_w;
		vl_auxiliares_w		:= vl_auxiliares_w * pr_ajuste_w;
		vl_materiais_w		:= vl_materiais_w * pr_ajuste_w;
		if (vl_custo_operacional_w <> 0) then      
			vl_custo_operacional_w :=	vl_proc_negociado_w - vl_medico_w - vl_auxiliares_w -  
							vl_anestesista_w - vl_materiais_w;
		end if;
		vl_soma_proc_w		:= (vl_custo_operacional_w + vl_medico_w +
					   vl_auxiliares_w + vl_anestesista_w + vl_materiais_w);
		vl_saldo_w		:= vl_procedimento_w - vl_soma_proc_w;
		if (vl_saldo_w <> 0) then
			if (vl_custo_operacional_w	> 0) then      
				vl_custo_operacional_w	:= vl_custo_operacional_w + vl_saldo_w;
			elsif (vl_materiais_w	> 0) then  
				vl_materiais_w	:= vl_materiais_w + vl_saldo_w;
			elsif (vl_medico_w	> 0) then 
				vl_medico_w	:= vl_medico_w + vl_saldo_w;
			end if;
		end if;
		if (ie_gravar_log_p = 'S') then
			ds_observacao_log_w	:= 'Regra: ' || nr_seq_regra_w || ' / Ajuste: ' || pr_ajuste_w || ' / Vl. saldo: ' || vl_saldo_w;
			CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,
				'Preco informado x Tx. Ajuste', ds_observacao_log_w, 'pls_define_preco_proc',
				vl_soma_proc_w, vl_materiais_w, vl_custo_operacional_w,
				vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
				3, nr_seq_regra_w, nr_porte_anestesico_w,
				nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC',coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
		end if;
		vl_filme_w := vl_materiais_w;
	else
		vl_procedimento_w 	:= (	coalesce(vl_custo_operacional_w,0) + coalesce(vl_anestesista_w,0) + coalesce(vl_medico_w,0) +
						coalesce(vl_filme_w,0) + coalesce(vl_auxiliares_w,0));      	
		if (ie_gravar_log_p = 'S') then
			ds_observacao_log_w	:= 'Regra: ' || nr_seq_regra_w || ' / Ajuste: ' || pr_ajuste_w || ' / Vl. saldo: ' || vl_saldo_w;
			CALL pls_gravar_log_calculo_proc(ie_gravar_log_p, nr_seq_procedimento_p, cd_estabelecimento_p,
				'Final define preco proc', ds_observacao_log_w, 'pls_define_preco_proc',
				vl_soma_proc_w, vl_materiais_w, vl_custo_operacional_w,
				vl_medico_w, vl_auxiliares_w, vl_anestesista_w,
				3, nr_seq_regra_w, nr_porte_anestesico_w, 
				nr_auxiliares_w, ie_tipo_tabela_p, 'PLS_REGRA_PRECO_PROC',coalesce(wheb_usuario_pck.get_nm_usuario,'Log'));
		end if;

	end if;
	if (tx_ajuste_geral_w	<> 1) then
		vl_procedimento_w	:= vl_procedimento_w * tx_ajuste_geral_w;
		vl_custo_operacional_w	:= vl_custo_operacional_w * tx_ajuste_geral_w;
		vl_anestesista_w	:= vl_anestesista_w * tx_ajuste_geral_w;
		vl_medico_w	:= vl_medico_w * tx_ajuste_geral_w;
		vl_filme_w	:= vl_filme_w * tx_ajuste_geral_w;


		vl_auxiliares_w	:= vl_auxiliares_w * tx_ajuste_geral_w;
	end if;
end if;

dados_regra_preco_proc_p.nr_sequencia			:= nr_seq_regra_w;
dados_regra_preco_proc_p.vl_procedimento		:= vl_procedimento_w;
dados_regra_preco_proc_p.vl_custo_operacional		:= vl_custo_operacional_w;
dados_regra_preco_proc_p.vl_anestesista			:= vl_anestesista_w;
dados_regra_preco_proc_p.vl_medico			:= vl_medico_w;
dados_regra_preco_proc_p.vl_filme			:= vl_filme_w;
dados_regra_preco_proc_p.vl_auxiliares			:= vl_auxiliares_w;
dados_regra_preco_proc_p.cd_edicao_amb			:= cd_edicao_amb_w;
dados_regra_preco_proc_p.ie_valor_informado		:= ie_preco_informado_w;
dados_regra_preco_proc_p.cd_porte_anestesico		:= cd_porte_anestesico_w;
dados_regra_preco_proc_p.nr_auxiliares			:= nr_auxiliares_w;
dados_regra_preco_proc_p.nr_seq_regra_autogerado	:= nr_seq_regra_autogerado_w;
dados_regra_preco_proc_p.cd_moeda_autogerado		:= cd_moeda_autogerado_w;
dados_regra_preco_proc_p.vl_ch_honorarios		:= vl_ch_honorarios_w;
dados_regra_preco_proc_p.vl_ch_custo_oper		:= vl_ch_custo_oper_w;
dados_regra_preco_proc_p.vl_ch_custo_filme		:= vl_ch_custo_filme_w;
dados_regra_preco_proc_p.vl_ch_anestesista		:= vl_ch_anestesista_w;
dados_regra_preco_proc_p.vl_proc_tabela			:= vl_proc_tabela_w;
dados_regra_preco_proc_p.vl_custo_operacional_tab	:= vl_custo_operacional_tab_w;
dados_regra_preco_proc_p.qt_filme_tab			:= qt_filme_tab_w;
dados_regra_preco_proc_p.vl_base_filme			:= vl_base_filme_w; -- aldellandrea os 774659
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_define_preco_proc ((cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_categoria_p bigint, dt_guia_p timestamp, cd_edicao_p bigint, cd_procedimento_p procedimento.cd_procedimento%type, ie_origem_proced_p procedimento.ie_origem_proced%type, nr_seq_tipo_acomodacao_p bigint, nr_seq_tipo_atendimento_p bigint, nr_seq_clinica_p bigint, nr_seq_plano_p bigint, ie_tipo_tabela_p text, nr_seq_contrato_p bigint, nr_seq_outorgante_p bigint, nr_seq_procedimento_p bigint, ie_gravar_log_p text, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_contratacao_p text, qt_dias_internacao_p bigint, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_contrato_intercambio_p text, ds_parametro_tres_p text, nr_seq_classificacao_prest_p bigint, cd_medico_p text, ie_internado_p text, ie_tecnica_utilizada_p text, ie_tipo_guia_p text, ie_tipo_intercambio_p text, sg_uf_operadora_intercambio_p text, nr_seq_cbo_saude_p bigint, ie_carater_internacao_p text, dt_procedimento_p timestamp, ie_tipo_acomodacao_ptu_p text, nr_seq_rp_combinada_p pls_rp_cta_combinada.nr_sequencia%type, dados_prestador_prot_p pls_cta_valorizacao_pck.dados_prestador_prot, dados_guia_req_p pls_cta_valorizacao_pck.dados_guia, dados_conta_p pls_cta_valorizacao_pck.dados_conta, dados_regra_preco_proc_p INOUT pls_cta_valorizacao_pck.dados_regra_preco_proc, ie_tipo_beneficiario_p pls_regra_preco_proc.ie_tipo_segurado%type default null, nr_seq_cbo_saude_solic_p pls_regra_preco_proc.nr_seq_cbo_saude_solic%type default null, ie_regime_atendimento_p pls_regra_preco_proc.ie_regime_atendimento%type default null, ie_regime_atendimento_princ_p pls_regra_preco_proc.ie_regime_atendimento_princ%type default null, ie_saude_ocupacional_p pls_regra_preco_proc.ie_saude_ocupacional%type default null) is  ie_origem_proced_w procedimento.ie_origem_proced%type) FROM PUBLIC;

