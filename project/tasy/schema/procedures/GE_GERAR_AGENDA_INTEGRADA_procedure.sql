-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ge_gerar_agenda_integrada (CD_PESSOA_FISICA_P text, DT_PRESCRICAO_P timestamp, NM_USUARIO_P text, NR_SEQUENCIA_P bigint, NR_PRESCRICAO_P bigint, NR_SEQ_CHECKLIST_P INOUT bigint, NR_SEQ_AGEINT_P INOUT bigint) AS $body$
DECLARE

					
					
					
NR_SEQ_PROC_INTERNO_W		bigint;					
NR_SEQ_AGENDA_INT_W		  bigint;
NR_SEQ_STATUS_W			    bigint;
CD_CONVENIO_W			      bigint;
CD_ESTABELECIMENTO_W		bigint;
CD_PESSOA_FISICA_W		  varchar(10);
NM_PESSOA_FISICA_W	 	  varchar(60);
DT_INICIO_AGENDAMENTO_W	timestamp;
IE_SEXO_W			      varchar(1);
DT_NASCIMENTO_W			timestamp;
DT_PREVISTA_ITEM_W	timestamp;
CD_PROCEDIMENTO_W		bigint;
IE_ORIGEM_PROCED_W	bigint;
NR_SEQ_AGENDA_INTEGRADA_ITEM_W	bigint;
IE_LADO_W			                  varchar(10);
NR_PRESCRICAO_W		        bigint;
NR_SEQUENCIA_PRESCRICAO_W	bigint;
IE_TIPO_ATENDIMENTO_W		  smallint;
NR_MINUTO_DURACAO_W		  	bigint;
NR_COUNT_W					    bigint;
NR_COUNT_AUX_W			    bigint;
CD_CATEGORIA_W				  varchar(10);
CD_PLANO_W					    varchar(10);
NR_DOC_CONVENIO_W			  varchar(20);
CD_USUARIO_CONVENIO_W		varchar(30);
NR_SEQ_EXAME_W				  bigint;
CD_MEDICO_EXEC_W			  varchar(10);
QT_IDADE_PAC_W				  bigint;
AGEINT_SEQ_LAB_W			  bigint;
IE_ASSOCIADO_W				  varchar(10);
NR_SEQ_INTERNO_W			  numeric(20);
NR_AUTORIZACAO_W				bigint;
CD_PROCEDENCIA_W          smallint;
NR_SEQ_TIPO_CLASSIF_PAC_W smallint;
IE_TIPO_ACOMOD_W          smallint;
QT_PESO_W                 smallint;
QT_ALTURA_CM_W            smallint;
CD_MEDICO_SOLICITANTE_W   bigint;
NR_TELEFONE_W             varchar(60);
IE_GERAR_CHECKLIST_P		varchar(1);
COUNT_ITEM_W              smallint;
qt_prescr_agenda_w		 smallint;


BEGIN

  NR_SEQ_CHECKLIST_P := 0;

  SELECT coalesce(IE_EXAME_ASSOC,'N')
  INTO STRICT	 IE_ASSOCIADO_W
  FROM   PRESCR_PROCEDIMENTO 
  WHERE  NR_PRESCRICAO = NR_PRESCRICAO_P
  AND    NR_SEQUENCIA = NR_SEQUENCIA_P;

  SELECT coalesce(MAX(B.NR_SEQUENCIA),0)
   INTO STRICT	 NR_SEQ_AGENDA_INT_W
   FROM	 AGENDA_INTEGRADA_ITEM A,
         AGENDA_INTEGRADA B,
        AGENDA_INTEGRADA_STATUS C
  WHERE	A.NR_PRESCRICAO = NR_PRESCRICAO_P
  AND		A.NR_SEQUENCIA_PRESCRICAO = NR_SEQUENCIA_P
  AND		A.NR_SEQ_AGENDA_INT = B.NR_SEQUENCIA
  AND		B.NR_SEQ_STATUS = C.NR_SEQUENCIA
  AND		C.IE_STATUS_TASY = 'AG';

  select coalesce(max(1),0)
  into STRICT qt_prescr_agenda_w
  from prescr_procedimento a
  where a.nr_prescricao = NR_PRESCRICAO_P
  and a.nr_sequencia = NR_SEQUENCIA_P
  and (
	(a.nr_seq_agenda IS NOT NULL AND a.nr_seq_agenda::text <> '')
	or exists (SELECT 1 
		from agenda_integrada_item b 
		where b.nr_sequencia_prescricao = a.nr_sequencia 
		and a.nr_prescricao = b.nr_prescricao)
  );

  

IF (CD_PESSOA_FISICA_P IS NOT NULL AND CD_PESSOA_FISICA_P::text <> '') AND (DT_PRESCRICAO_P IS NOT NULL AND DT_PRESCRICAO_P::text <> '') AND (NM_USUARIO_P IS NOT NULL AND NM_USUARIO_P::text <> '') AND (NR_PRESCRICAO_P IS NOT NULL AND NR_PRESCRICAO_P::text <> '') AND (NR_SEQUENCIA_P IS NOT NULL AND NR_SEQUENCIA_P::text <> '') AND (IE_ASSOCIADO_W = 'N') AND (NR_SEQ_AGENDA_INT_W = 0) THEN
BEGIN

-- VERIFICA SE JA EXISTE AGENDAMENTO PARA A PRESCRICAO
	SELECT coalesce(MAX(B.NR_SEQUENCIA),0)
	  INTO STRICT NR_SEQ_AGENDA_INT_W
	  FROM AGENDA_INTEGRADA_ITEM A,
			   AGENDA_INTEGRADA B,
			   AGENDA_INTEGRADA_STATUS C
	WHERE	A.NR_PRESCRICAO = NR_PRESCRICAO_P
    AND	A.NR_SEQ_AGENDA_INT = B.NR_SEQUENCIA
	  AND	B.NR_SEQ_STATUS = C.NR_SEQUENCIA
    AND	C.IE_STATUS_TASY = 'EA';
	
	
	IF (NR_SEQ_AGENDA_INT_W = 0) THEN
		BEGIN

		SELECT coalesce(MAX(A.NR_SEQ_AGEINT),0)
		  INTO STRICT NR_SEQ_AGENDA_INT_W
		  FROM AGEINT_EXAME_LAB A,
				   AGENDA_INTEGRADA B,
				   AGENDA_INTEGRADA_STATUS C,
				   PRESCR_PROCEDIMENTO D
		 WHERE A.NR_SEQ_INTERNO_PRESCR = D.NR_SEQ_INTERNO
       AND A.NR_SEQ_AGEINT = B.NR_SEQUENCIA
       AND B.NR_SEQ_STATUS = C.NR_SEQUENCIA
       AND C.IE_STATUS_TASY = 'EA'
       AND D.NR_PRESCRICAO = NR_PRESCRICAO_P;
		END;
	END IF;

-- Busca os dados	
	
	SELECT	MAX(OBTER_CONVENIO_ATENDIMENTO(B.NR_ATENDIMENTO)),
			MAX(B.CD_ESTABELECIMENTO),
			MAX(P.CD_PESSOA_FISICA),
			MAX(SUBSTR(OBTER_NOME_PF(P.CD_PESSOA_FISICA), 0, 255)),
			MAX(P.IE_SEXO),
			MAX(P.DT_NASCIMENTO),
			MAX(A.NR_PRESCRICAO),
			MAX(A.NR_SEQUENCIA),
			MAX(C.IE_TIPO_ATENDIMENTO),
			MAX(D.CD_CATEGORIA),
			MAX(D.CD_PLANO_CONVENIO),
			MAX(D.NR_DOC_CONVENIO),
			MAX(D.CD_USUARIO_CONVENIO),
			MAX(B.CD_MEDICO),
			MAX((OBTER_IDADE(DT_NASCIMENTO,clock_timestamp(),'A'))::numeric ),
      OBTER_REGRA_ATRIBUTO2('AGENDA_INTEGRADA', 'NR_SEQ_TIPO_CLASSIF_PAC',0,'VLD',WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO,OBTER_PERFIL_ATIVO, 869, NM_USUARIO_P),
      OBTER_REGRA_ATRIBUTO2('AGENDA_INTEGRADA', 'CD_PROCEDENCIA',0,'VLD',WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO,OBTER_PERFIL_ATIVO, 869, NM_USUARIO_P),
      OBTER_REGRA_ATRIBUTO2('AGENDA_INTEGRADA', 'IE_TIPO_ACOMOD',0,'VLD',WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO,OBTER_PERFIL_ATIVO, 869, NM_USUARIO_P),
      MAX(OBTER_PESO_PF(P.CD_PESSOA_FISICA)),
      MAX(P.QT_ALTURA_CM),
      MAX(B.CD_MEDICO),
      MAX(OBTER_TELEFONE_PF(P.CD_PESSOA_FISICA,12))
	INTO STRICT	
      CD_CONVENIO_W,
			CD_ESTABELECIMENTO_W,
			CD_PESSOA_FISICA_W,
			NM_PESSOA_FISICA_W,
			IE_SEXO_W,
			DT_NASCIMENTO_W,
			NR_PRESCRICAO_W,
			NR_SEQUENCIA_PRESCRICAO_W,
			IE_TIPO_ATENDIMENTO_W,
			CD_CATEGORIA_W,		
			CD_PLANO_W,
			NR_DOC_CONVENIO_W,
			CD_USUARIO_CONVENIO_W,
			CD_MEDICO_EXEC_W,
			QT_IDADE_PAC_W,
      NR_SEQ_TIPO_CLASSIF_PAC_W,
      CD_PROCEDENCIA_W,
      IE_TIPO_ACOMOD_W,
      QT_PESO_W,
      QT_ALTURA_CM_W,
      CD_MEDICO_SOLICITANTE_W,
      NR_TELEFONE_W
	FROM	PESSOA_FISICA P,
			PRESCR_MEDICA  B,
			PRESCR_PROCEDIMENTO A,
			ATENDIMENTO_PACIENTE C,
			ATEND_CATEGORIA_CONVENIO D
	WHERE	A.NR_PRESCRICAO 	= B.NR_PRESCRICAO
	AND		B.CD_PESSOA_FISICA	= P.CD_PESSOA_FISICA
	AND		B.NR_ATENDIMENTO = C.NR_ATENDIMENTO
	AND		C.NR_ATENDIMENTO = D.NR_ATENDIMENTO
	AND		D.NR_SEQ_INTERNO = OBTER_ATECACO_ATENDIMENTO(C.NR_ATENDIMENTO)
	AND		P.CD_PESSOA_FISICA	= CD_PESSOA_FISICA_P
	AND		B.DT_PRESCRICAO = DT_PRESCRICAO_P;

--	GERAR O AGENDAMENTO	
	
	IF (NR_SEQ_AGENDA_INT_W = 0) and (qt_prescr_agenda_w = 0) THEN

		SELECT	nextval('agenda_integrada_seq')
		INTO STRICT	NR_SEQ_AGENDA_INT_W
		;

		DT_INICIO_AGENDAMENTO_W := clock_timestamp();

		SELECT	MIN(NR_SEQUENCIA)
		  INTO STRICT	NR_SEQ_STATUS_W
		  FROM	AGENDA_INTEGRADA_STATUS
		 WHERE	IE_STATUS_TASY = 'EA';

		INSERT INTO AGENDA_INTEGRADA(	
				NR_SEQUENCIA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,	
				DT_INICIO_AGENDAMENTO,
				NR_SEQ_STATUS,
				CD_CONVENIO,	
				CD_ESTABELECIMENTO,
				CD_PESSOA_FISICA,
				IE_TURNO,
				IE_BLOQUEIO_CHECKLIST,
				NM_PACIENTE,
				DT_NASCIMENTO,
				IE_SEXO,
				IE_TIPO_ATENDIMENTO,
				CD_CATEGORIA,
				CD_PLANO,
				NR_DOC_CONVENIO,
				CD_USUARIO_CONVENIO,
        NR_SEQ_TIPO_CLASSIF_PAC,
        CD_PROCEDENCIA,
        IE_TIPO_ACOMOD,
        QT_IDADE_PAC,
        QT_PESO,
        QT_ALTURA_CM,
        CD_MEDICO_SOLICITANTE,
        NR_TELEFONE)
			VALUES (	NR_SEQ_AGENDA_INT_W,
					clock_timestamp(),
					NM_USUARIO_P,
					clock_timestamp(),
					NM_USUARIO_P,
					DT_INICIO_AGENDAMENTO_W,
					NR_SEQ_STATUS_W,
					CD_CONVENIO_W,	
					CD_ESTABELECIMENTO_W,
					CD_PESSOA_FISICA_W,
					2,
					'N',
					NM_PESSOA_FISICA_W,
					DT_NASCIMENTO_W,
					IE_SEXO_W,
					IE_TIPO_ATENDIMENTO_W,
					CD_CATEGORIA_W,		
					CD_PLANO_W,
					NR_DOC_CONVENIO_W,
					CD_USUARIO_CONVENIO_W,
          NR_SEQ_TIPO_CLASSIF_PAC_W,
          CD_PROCEDENCIA_W,
          IE_TIPO_ACOMOD_W,
          QT_IDADE_PAC_W,
          QT_PESO_W,
          QT_ALTURA_CM_W,
          CD_MEDICO_SOLICITANTE_W,
          NR_TELEFONE_W);

		COMMIT;			
		
	END IF;

-- 	BUSCAR PROCEDIMENTO 
	SELECT	A.NR_SEQ_PROC_INTERNO,
			A.CD_PROCEDIMENTO,
			A.IE_ORIGEM_PROCED,
			A.IE_LADO,
			A.DT_PREV_EXECUCAO,
			A.NR_PRESCRICAO,
			A.NR_SEQUENCIA,
			coalesce(A.NR_SEQ_EXAME,0),
			A.NR_SEQ_INTERNO
	INTO STRICT	NR_SEQ_PROC_INTERNO_W,
			CD_PROCEDIMENTO_W,
			IE_ORIGEM_PROCED_W,
			IE_LADO_W,
			DT_PREVISTA_ITEM_W,
			NR_PRESCRICAO_W,
			NR_SEQUENCIA_PRESCRICAO_W,
			NR_SEQ_EXAME_W,
			NR_SEQ_INTERNO_W
	FROM	PESSOA_FISICA P,
			PRESCR_MEDICA  B,
			PRESCR_PROCEDIMENTO A
	WHERE	A.NR_PRESCRICAO 	= B.NR_PRESCRICAO
	AND		B.CD_PESSOA_FISICA	= P.CD_PESSOA_FISICA
	AND		A.NR_PRESCRICAO = NR_PRESCRICAO_P
	AND		A.NR_SEQUENCIA = NR_SEQUENCIA_P;
	
-- Verifica se o procedimento possui duracao cadastrada.
	SELECT  COUNT(A.NR_SEQUENCIA)
	INTO STRICT	NR_COUNT_W
	FROM	AGENDA_INT_GRUPO_ITEM A,
			AGENDA_INT_AREA C,
			AGENDA_INT_GRUPO B
	WHERE   A.NR_SEQ_PROC_INTERNO = NR_SEQ_PROC_INTERNO_W
	AND		A.NR_SEQ_GRUPO = B.NR_SEQUENCIA
	AND	    B.NR_SEQ_AREA = C.NR_SEQUENCIA
	AND		C.CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_W;
			
	IF (NR_COUNT_W = 1) and (qt_prescr_agenda_w = 0) THEN
	
		SELECT 	A.NR_MINUTO_DURACAO
		INTO STRICT	NR_MINUTO_DURACAO_W
		FROM	AGENDA_INT_GRUPO_ITEM A,
				AGENDA_INT_AREA C,
				AGENDA_INT_GRUPO B
		WHERE   A.NR_SEQ_PROC_INTERNO = NR_SEQ_PROC_INTERNO_W
		AND		A.NR_SEQ_GRUPO = B.NR_SEQUENCIA
		AND	    B.NR_SEQ_AREA = C.NR_SEQUENCIA
		AND		C.CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_W;
				
	END IF;
	
	IF (NR_COUNT_W > 1)  and (qt_prescr_agenda_w = 0)THEN
	
		SELECT 	MAX(A.NR_MINUTO_DURACAO)
		INTO STRICT	NR_MINUTO_DURACAO_W
		FROM	AGENDA_INT_GRUPO_ITEM A,
				AGENDA_INT_AREA C,
				AGENDA_INT_GRUPO B
		WHERE   A.NR_SEQ_PROC_INTERNO = NR_SEQ_PROC_INTERNO_W
		AND		A.NR_SEQ_GRUPO = B.NR_SEQUENCIA
		AND	    B.NR_SEQ_AREA = C.NR_SEQUENCIA
		AND		C.CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_W;
		
		SELECT COUNT(*)
		INTO STRICT  NR_COUNT_AUX_W
		FROM	AGENDA_INT_GRUPO_ITEM A,
				AGENDA_INT_AREA C,
				AGENDA_INT_GRUPO B
		WHERE   A.NR_SEQ_PROC_INTERNO = NR_SEQ_PROC_INTERNO_W
		AND		A.NR_SEQ_GRUPO = B.NR_SEQUENCIA
		AND	    B.NR_SEQ_AREA = C.NR_SEQUENCIA
		AND		C.CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_W
		AND    A.NR_MINUTO_DURACAO = NR_MINUTO_DURACAO_W;
		
		IF (NR_COUNT_AUX_W <> NR_COUNT_W) THEN
			NR_MINUTO_DURACAO_W := NULL;
		END IF;
	
	END IF;

--	Inserir exames
	IF (NR_SEQ_EXAME_W > 0 ) and (qt_prescr_agenda_w = 0) THEN
		BEGIN	
				--	INSERIR EXAMES DE LABORATORIO
				SELECT	nextval('ageint_exame_lab_seq')
				INTO STRICT	AGEINT_SEQ_LAB_W
				;
				
				INSERT INTO AGEINT_EXAME_LAB(
								 NR_SEQUENCIA,
								 DT_ATUALIZACAO,
								 NM_USUARIO,
								 DT_ATUALIZACAO_NREC,
								 NM_USUARIO_NREC,
								 NR_SEQ_PROC_INTERNO,
								 NR_SEQ_AGEINT,
								 CD_PROCEDIMENTO,
								 IE_ORIGEM_PROCED,
								 NR_SEQ_EXAME,
								 NR_SEQ_INTERNO_PRESCR
								 )
				VALUES (
								 AGEINT_SEQ_LAB_W,
								 clock_timestamp(),
								 NM_USUARIO_P,
								 clock_timestamp(),
								 NM_USUARIO_P,
								 NR_SEQ_PROC_INTERNO_W,
								 NR_SEQ_AGENDA_INT_W,
								 CD_PROCEDIMENTO_W,
								 IE_ORIGEM_PROCED_W,
								 NR_SEQ_EXAME_W,
								 NR_SEQ_INTERNO_W
								 );
								
				COMMIT;
				
						SELECT COUNT(*)
						INTO STRICT   NR_AUTORIZACAO_W
						FROM   PROCEDIMENTO_AUTORIZADO
						WHERE   NR_PRESCRICAO = NR_PRESCRICAO_P
						AND		NR_SEQ_PRESCRICAO = NR_SEQUENCIA_P;
						
						IF (NR_AUTORIZACAO_W > 0) THEN
							BEGIN

							UPDATE	PROCEDIMENTO_AUTORIZADO
							SET		NR_SEQ_AGEINT_EXAME_LAB = AGEINT_SEQ_LAB_W
							WHERE   NR_PRESCRICAO = NR_PRESCRICAO_P
							AND		NR_SEQ_PRESCRICAO = NR_SEQUENCIA_P;

							END;

						END IF;				
											  
		END;
	END IF;		
		
	IF (qt_prescr_agenda_w = 0)  then
		BEGIN			
		-- INSERIR PROCEDIMENTO NO AGENDAMENTO
				
        SELECT COUNT(*)
        INTO STRICT COUNT_ITEM_W
        FROM agenda_integrada_item
        WHERE nr_prescricao = NR_PRESCRICAO_W 
        AND nr_sequencia_prescricao = NR_SEQUENCIA_PRESCRICAO_W
        AND nr_seq_agenda_int = NR_SEQ_AGENDA_INT_W;

        IF (COUNT_ITEM_W = 0) THEN
        BEGIN
        
				
          SELECT	nextval('agenda_integrada_item_seq')
          INTO STRICT	NR_SEQ_AGENDA_INTEGRADA_ITEM_W	
;

          INSERT INTO AGENDA_INTEGRADA_ITEM(	NR_SEQUENCIA,
              				NR_SEQ_AGENDA_INT,
                  		DT_ATUALIZACAO,
                      NM_USUARIO,
                      DT_ATUALIZACAO_NREC,
                  		NM_USUARIO_NREC,
                  		NR_SEQ_PROC_INTERNO,
                  		IE_TIPO_AGENDAMENTO,
                  		IE_LADO,
                  		CD_PROCEDIMENTO,
                  		IE_ORIGEM_PROCED,
                    	CD_ESTABELECIMENTO,
                    	NR_PRESCRICAO,
                    	NR_SEQUENCIA_PRESCRICAO,
                    	NR_MINUTO_DURACAO,
                    	IE_DUPLICADO_ESTAB,
						IE_GESTAO_EXAME)
                  	VALUES (	NR_SEQ_AGENDA_INTEGRADA_ITEM_W,
                          	NR_SEQ_AGENDA_INT_W,
                            clock_timestamp(),
                          	NM_USUARIO_P,
                            clock_timestamp(),
                            NM_USUARIO_P,
                          	NR_SEQ_PROC_INTERNO_W,
                          	'E',
                          	IE_LADO_W,
                          	CD_PROCEDIMENTO_W,
                          	IE_ORIGEM_PROCED_W,
                          	CD_ESTABELECIMENTO_W,
                          	NR_PRESCRICAO_W,
                        		NR_SEQUENCIA_PRESCRICAO_W,
                        		NR_MINUTO_DURACAO_W,
                        		'N',
								'S');		

          COMMIT;
			
      	CALL AGEINT_GERAR_PROC_ASSOC(NR_SEQ_AGENDA_INT_W, NR_SEQ_AGENDA_INTEGRADA_ITEM_W, NR_SEQ_PROC_INTERNO_W, NM_USUARIO_P, 0);
		
        CALL AGEINT_ATUALIZA_DUR_EX_ADIC(NR_SEQ_AGENDA_INTEGRADA_ITEM_W,'E','');
		
        CALL AGEINT_GERAR_ANEXOS_PROC(NR_SEQ_AGENDA_INT_W, NR_SEQ_PROC_INTERNO_W, CD_ESTABELECIMENTO_W, NM_USUARIO_P);
		
        --Ageint_atualiza_convenio_itens(cd_convenio_w, cd_categoria_w, cd_plano_w, nr_seq_agenda_int_w, nm_usuario_p, cd_estabelecimento_w);
		
        CALL AGEINT_GERAR_EQUIP_ITEM(NR_SEQ_PROC_INTERNO_W, NR_SEQ_AGENDA_INTEGRADA_ITEM_W, CD_ESTABELECIMENTO_W, NM_USUARIO_P);
		
        END;
        END IF;		
		END;
	END IF;
	
	IF (qt_prescr_agenda_w = 0)  then
	
	IE_GERAR_CHECKLIST_P := AGEINT_OBTER_SE_PROC_CHECK(NR_SEQ_PROC_INTERNO_W, NR_SEQ_AGENDA_INT_W, CD_ESTABELECIMENTO_W);
	
	
	IF (coalesce(IE_GERAR_CHECKLIST_P,'N') = 'S') THEN
	
		SELECT  nextval('ageint_check_list_paciente_seq')
		INTO STRICT	NR_SEQ_CHECKLIST_P
		;
	
	
		INSERT INTO AGEINT_CHECK_LIST_PACIENTE(	
			NR_SEQUENCIA,
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DT_ATUALIZACAO_NREC, 
			NM_USUARIO_NREC, 
			NR_SEQ_AGEINT,
			IE_TIPO_CHECK_LIST)
		VALUES (	NR_SEQ_CHECKLIST_P,
			clock_timestamp(),
			NM_USUARIO_P,
			clock_timestamp(),
			NM_USUARIO_P,
			NR_SEQ_AGENDA_INT_W,
			'I');
			
		CALL AGEINT_GERAR_CHECK_LIST(NR_SEQ_CHECKLIST_P, NR_SEQ_PROC_INTERNO_W, NR_SEQ_AGENDA_INT_W, NM_USUARIO_P, CD_ESTABELECIMENTO_W);
		
	END IF;
end if;
		
END;
END IF;	

NR_SEQ_AGEINT_P := NR_SEQ_AGENDA_INT_W;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ge_gerar_agenda_integrada (CD_PESSOA_FISICA_P text, DT_PRESCRICAO_P timestamp, NM_USUARIO_P text, NR_SEQUENCIA_P bigint, NR_PRESCRICAO_P bigint, NR_SEQ_CHECKLIST_P INOUT bigint, NR_SEQ_AGEINT_P INOUT bigint) FROM PUBLIC;

