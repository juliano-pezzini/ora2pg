-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_sauber_atualiza_lab_item ( nr_prescricao_p bigint, cd_exame_p text, cd_analito_p text, ds_resultado_p text, ds_observacao_p text, nm_usuario_p text, ds_referencia_p text, ds_unidade_medida_p text, ds_erro_p INOUT text) AS $body$
DECLARE

					 
nr_seq_prescricao_w	bigint;
nr_seq_exame_w		bigint;
cd_analito_w		varchar(20);
nr_seq_resultado_w	bigint;
nr_seq_exame_w2		bigint;
qt_resultado_ww		varchar(4000);

ie_formato_resultado_w	varchar(3);
ds_resultado_w		varchar(4000)	:= null;
qt_resultado_w		double precision	:= null;
pr_resultado_w		double precision		:= null;
cd_estabelecimento_w 	smallint;
					

BEGIN 
 
 
-- Busca pela sequência da prescrição 
select 	coalesce(max(a.nr_sequencia),0), 
	coalesce(max(a.nr_seq_exame),0), 
	coalesce(max(c.cd_estabelecimento),0) 
into STRICT 	nr_seq_prescricao_w, 
	nr_seq_exame_w, 
	cd_estabelecimento_w	 
from 	prescr_procedimento a, 
	exame_laboratorio b, 
	prescr_medica c 
where 	a.nr_seq_exame = b.nr_seq_exame 
and 	c.nr_prescricao = a.nr_prescricao 
and	b.ie_situacao <> 'I' 
and	a.nr_prescricao = nr_prescricao_p 
and	upper(coalesce(b.cd_exame_integracao,b.cd_exame)) = upper(cd_exame_p);
 
 
 
-- Busca pelo código do analito 
select	max(coalesce(e.cd_exame_integracao, e.cd_exame)) 
into STRICT	cd_analito_w 
from	exame_laboratorio e 
where	e.nr_seq_exame = (SELECT max(nr_seq_exame) 
			 FROM equipamento_lab b, lab_exame_equip a
LEFT OUTER JOIN exame_lab_equip_regra c ON (a.nr_sequencia = c.nr_seq_exame_equip)
WHERE a.cd_equipamento = b.cd_equipamento  AND coalesce(c.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w AND a.cd_exame_equip = cd_analito_p AND upper(b.ds_sigla) = 'SAUBER' AND a.nr_seq_exame = nr_seq_exame_w );WITH RECURSIVE cte AS (
			 			
 
 
if (coalesce(cd_analito_w::text, '') = '') then 
 
	select	max(coalesce(e.cd_exame_integracao, e.cd_exame)) 
	into STRICT	cd_analito_w 
	from	exame_laboratorio e WHERE nr_seq_superior = nr_seq_exame_w
  UNION ALL
			 			 
 
 
if (coalesce(cd_analito_w::text, '') = '') then 
 
	select	max(coalesce(e.cd_exame_integracao, e.cd_exame)) 
	into STRICT	cd_analito_w 
	from	exame_laboratorio e JOIN cte c ON (c.prior nr_seq_exame = e.nr_seq_superior)

) SELECT * FROM cte WHERE nr_seq_exame = (SELECT max(nr_seq_exame) 
				FROM equipamento_lab b, lab_exame_equip a
LEFT OUTER JOIN exame_lab_equip_regra c ON (a.nr_sequencia = c.nr_seq_exame_equip)
WHERE a.cd_equipamento = b.cd_equipamento  AND coalesce(c.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w AND a.cd_exame_equip = cd_analito_p AND upper(b.ds_sigla) = 'SAUBER' AND a.nr_seq_exame = e.nr_seq_exame );
;
 
 
end if;
 
/* 
qt_resultado_ww 	:= trim(replace(ds_resultado_p, '.', ',')); 
ds_resultado_w		:= null; 
 
/*begin 
select 	to_number(nvl(qt_resultado_ww,0)) 
into 	qt_resultado_w 
from 	dual; 
 
exception 
	when others then 
	begin 
	 
	select to_number(nvl(replace(qt_resultado_ww, ',', '.'),0)) 
	into qt_resultado_w 
	from dual; 
	 
	exception 
	when others then	 
		ds_resultado_w := ds_resultado_p; 
	end; 
end;*/
 
 
  
select	max(ie_formato_resultado) 
into STRICT	ie_formato_resultado_w 
from	exame_laboratorio a 
where	coalesce(a.cd_exame_integracao, a.cd_exame) = cd_analito_w;
 
/* 
ds_resultado_w	:= ds_resultado_p; 
begin 
	if	(ie_formato_resultado_w = 'V') then 
		qt_resultado_w	:= to_number(ds_resultado_w); 
		ds_resultado_w	:= ''; 
	elsif	(ie_formato_resultado_w = 'P') then 
		pr_resultado_w	:= to_number(ds_resultado_w); 
		ds_resultado_w	:= ''; 
	end if; 
exception 
	when value_error then 
		gravar log tasy(89,'Exceção '||sqlerrm||' cd_analito_w '||cd_analito_w,'SAUBER'); 
		commit; 
		ds_resultado_w	:= ds_resultado_p; 
end; 
 
*/
 
 
--qt_resultado_ww := trim(replace(ds_resultado_p, '.', ',')); 
qt_resultado_ww := trim(both ds_resultado_p);
ds_resultado_w	:= null;
 
begin 
 
select (coalesce(qt_resultado_ww,0))::numeric  
into STRICT qt_resultado_w
;
 
exception 
	when others then 
	begin 
	 
	select (coalesce(replace(replace(qt_resultado_ww,'.',''), ',', '.'),0))::numeric  
	into STRICT qt_resultado_w 
	;
	 
	if (ie_formato_resultado_w = 'P') then 
		pr_resultado_w	:= qt_resultado_w;
		ds_resultado_w	:= '';
	end if;
	 
	exception 
	when others then	 
		ds_resultado_w := ds_resultado_p;
	end;
end;
 
if (cd_analito_w IS NOT NULL AND cd_analito_w::text <> '') then 
 
	/*gravar log tasy(89, 'Prescricao: '		||nr_prescricao_p		||' - '|| 
						'Seq. Prescr: '		||nr_seq_prescricao_w	||' - '|| 
						'cd_analito_w: '	||cd_analito_w		||' - '|| 
						'qt_resultado_w: '	||qt_resultado_w		||' - '|| 
						'ds_resultado_w: '	||ds_resultado_w		||' - '|| 
						'ds_observacao_p: '	||ds_observacao_p		||' - '|| 
						'nm_usuario_p: '	||nm_usuario_p		||' - '|| 
						'ds_referencia_p: ' ||ds_referencia_p		||' - '|| 
						'ds_unidade_medida_p: '||ds_unidade_medida_p, 'SAUBER'); 
	commit;*/
 
	 
	ds_erro_p := Atualizar_Lab_Result_Item(	nr_prescricao_p, nr_seq_prescricao_w, cd_analito_w, qt_resultado_w, pr_resultado_w, ds_resultado_w, ds_observacao_p, null, null, nm_usuario_p, null, ds_referencia_p, ds_unidade_medida_p, null, null, ds_erro_p);
 
	commit;
 
else 
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279972,'CD_EXAME='||cd_exame_p);
 
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_sauber_atualiza_lab_item ( nr_prescricao_p bigint, cd_exame_p text, cd_analito_p text, ds_resultado_p text, ds_observacao_p text, nm_usuario_p text, ds_referencia_p text, ds_unidade_medida_p text, ds_erro_p INOUT text) FROM PUBLIC;

