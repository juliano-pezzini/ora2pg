-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_preco_cbhpm ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_edicao_p timestamp, cd_convenio_p bigint, nr_seq_prestador_p bigint, ie_video_p text, vl_medico_p INOUT bigint, cd_porte_p INOUT text, tx_porte_p INOUT bigint, qt_uco_p INOUT bigint, nr_porte_anest_p INOUT bigint, nr_auxiliar_p INOUT bigint, qt_filme_p INOUT bigint, qt_incidencia_p INOUT bigint, ie_unid_ra_p INOUT text, vl_porte_p INOUT bigint, dt_vigencia_porte_p INOUT timestamp, dt_vigencia_preco_p INOUT timestamp, vl_porte_anestesista_p INOUT bigint, cd_categoria_p text, ie_credenciado_p text, nr_seq_congenere_p bigint) AS $body$
DECLARE


vl_custo_operacional_w	double precision;
vl_medico_w		double precision;
vl_anestesista_w	double precision;
cd_porte_w		varchar(10);
tx_porte_w		double precision;
tx_porte_orig_w		double precision;
tx_porte_convenio_w	double precision;
qt_uco_w		double precision;
nr_porte_anest_w	smallint;
nr_auxiliar_w		smallint;
qt_filme_w		double precision;
qt_incidencia_w		double precision;
ie_unid_ra_w		varchar(1);
vl_porte_w		double precision;
dt_vigencia_porte_w	timestamp;
dt_vigencia_preco_w	timestamp;
cd_porte_anestesista_w	varchar(8);
vl_porte_anestesista_w	double precision;
cd_grupo_w		bigint	:= 0;
cd_especialidade_w	bigint	:= 0;
cd_area_w		bigint	:= 0;
IE_DATA_VIG_CBHPM_w	varchar(01);
tx_porte_anest_w	double precision;
IE_DESPREZA_CASA_CBHPM_w 	varchar(1);
vl_medico_arred_w	double precision;
vl_anest_arred_w	double precision;
VL_PORTE_NEGOCIADO_w	double precision:= 0;
ie_preco_cbhpm_data_w	varchar(1)	:= 'N';
ie_preco_cbhpm_data_ww	varchar(1)	:= 'N';
qt_ajuste_uco_cbhpm_w	bigint;
qt_uco_ajuste_w		double precision;
nr_porte_anest_cobranca_w	smallint;

C01 CURSOR FOR
	SELECT	coalesce(tx_ajuste,1),
		VL_PORTE_NEGOCIADO
	from	conv_ajuste_porte_cbhpm	a
	where	a.cd_convenio	= cd_convenio_p	
	and	a.cd_porte	= substr(cd_porte_w,1,8)
	and (cd_procedimento 	= cd_procedimento_p 	or coalesce(cd_procedimento::text, '') = '')
	and (ie_origem_proced 	= ie_origem_proced_p 	or coalesce(ie_origem_proced::text, '') = '')
	and (cd_grupo_proc 	= cd_grupo_w 		or coalesce(cd_grupo_proc::text, '') = '')
	and (cd_especialidade 	= cd_especialidade_w 	or coalesce(cd_especialidade::text, '') = '')
	and (cd_area_procedimento 	= cd_area_w 		or coalesce(cd_area_procedimento::text, '') = '')
	and 	((coalesce(a.ie_tipo_ajuste,'M') = 'M') or (coalesce(a.ie_tipo_ajuste,'M') = 'T'))
	and	((coalesce(ie_video_p::text, '') = '') or (coalesce(ie_video,'A') = 'A') or (coalesce(ie_video,'N') = ie_video_p))
	and	((coalesce(a.cd_categoria::text, '') = '') or (a.cd_categoria = coalesce(cd_categoria_p, a.cd_categoria)))
	and 	((coalesce(a.ie_credenciado,'T') = 'T') or (a.ie_credenciado = ie_credenciado_p))
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
	and	a.dt_vigencia	=
		(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
		from	conv_ajuste_porte_cbhpm	x
		where	x.cd_porte 	= substr(cd_porte_w,1,8)
		and	x.dt_vigencia	<= dt_referencia_p
		and	x.cd_convenio	= cd_convenio_p
		and	coalesce(x.cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0))
	and	a.dt_vigencia	=
		(select	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
		from	conv_ajuste_porte_cbhpm	x
		where	x.cd_porte 	= substr(cd_porte_w,1,8)
		and	dt_referencia_p between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(x.dt_vigencia) and coalesce(x.dt_vigencia_final, dt_referencia_p)
		and	x.cd_convenio	= cd_convenio_p
		and	coalesce(x.cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0))
	order by	coalesce(cd_procedimento,0),
			coalesce(ie_origem_proced,0),
			coalesce(cd_grupo_proc,0),
			coalesce(cd_especialidade,0),
			coalesce(cd_area_procedimento,0),			
			coalesce(cd_categoria,'0'),
			coalesce(cd_estabelecimento,0);

C02 CURSOR FOR
	SELECT	coalesce(tx_ajuste,1),
		VL_PORTE_NEGOCIADO
	from	conv_ajuste_porte_cbhpm	a
	where	a.cd_convenio	= cd_convenio_p	
	and	a.cd_porte	= substr(cd_porte_anestesista_w,1,8)
	and (cd_procedimento 	= cd_procedimento_p 	or coalesce(cd_procedimento::text, '') = '')
	and (ie_origem_proced 	= ie_origem_proced_p 	or coalesce(ie_origem_proced::text, '') = '')
	and (cd_grupo_proc 	= cd_grupo_w 		or coalesce(cd_grupo_proc::text, '') = '')
	and (cd_especialidade 	= cd_especialidade_w 	or coalesce(cd_especialidade::text, '') = '')
	and (cd_area_procedimento 	= cd_area_w 		or coalesce(cd_area_procedimento::text, '') = '')
	and 	((coalesce(a.ie_tipo_ajuste,'M') = 'A') or (coalesce(a.ie_tipo_ajuste,'M') = 'T'))
	and	((coalesce(ie_video_p::text, '') = '') or (coalesce(ie_video,'A') = 'A') or (coalesce(ie_video,'N') = ie_video_p))
	and	((coalesce(a.cd_categoria::text, '') = '') or (a.cd_categoria = coalesce(cd_categoria_p, a.cd_categoria)))
	and 	((coalesce(a.ie_credenciado,'T') = 'T') or (a.ie_credenciado = ie_credenciado_p))
	and	coalesce(cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
	and	a.dt_vigencia	=
		(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
		from	conv_ajuste_porte_cbhpm	x
		where	x.cd_porte 	= substr(cd_porte_anestesista_w,1,8)
		and	x.dt_vigencia	<= dt_referencia_p
		and	x.cd_convenio	= cd_convenio_p
		and	coalesce(x.cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0))
	and	a.dt_vigencia	=
		(select	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
		from	conv_ajuste_porte_cbhpm	x
		where	x.cd_porte 	= substr(cd_porte_anestesista_w,1,8)
		and	dt_referencia_p between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(x.dt_vigencia) and coalesce(x.dt_vigencia_final, dt_referencia_p)
		and	x.cd_convenio	= cd_convenio_p
		and	coalesce(x.cd_estabelecimento, coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0))
	order by	coalesce(cd_procedimento,0),
			coalesce(ie_origem_proced,0),
			coalesce(cd_grupo_proc,0),
			coalesce(cd_especialidade,0),
			coalesce(cd_area_procedimento,0),
			coalesce(cd_categoria,'0'),
			coalesce(cd_estabelecimento,0);

C03 CURSOR FOR
	SELECT	coalesce(a.tx_ajuste,1),
		a.vl_porte_negociado
	from	pls_ajuste_porte_cbhpm	a
	where	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = nr_seq_prestador_p))
	and	a.cd_porte		= substr(cd_porte_w,1,8)
	and (cd_procedimento 	= cd_procedimento_p 	or coalesce(cd_procedimento::text, '') = '')
	and (ie_origem_proced 	= ie_origem_proced_p 	or coalesce(ie_origem_proced::text, '') = '')
	and (cd_grupo_proc 	= cd_grupo_w 		or coalesce(cd_grupo_proc::text, '') = '')
	and (cd_especialidade 	= cd_especialidade_w 	or coalesce(cd_especialidade::text, '') = '')
	and (cd_area_procedimento 	= cd_area_w 		or coalesce(cd_area_procedimento::text, '') = '')
	and (coalesce(a.ie_tipo_ajuste,'M') = 'M')
	and	a.ie_situacao	= 'A'
	and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from	pls_ajuste_porte_cbhpm	x
			where	x.cd_porte 	= substr(cd_porte_w,1,8)
			and	x.dt_vigencia	<= dt_referencia_p
			and	x.ie_situacao	= 'A'
			and	((coalesce(x.nr_seq_prestador::text, '') = '') or (x.nr_seq_prestador = nr_seq_prestador_p)))
	order by
		coalesce(cd_procedimento,0),
		coalesce(ie_origem_proced,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0),
		coalesce(nr_seq_prestador,0);

C04 CURSOR FOR
	SELECT	coalesce(a.tx_ajuste,1),
		a.vl_porte_negociado
	from	pls_ajuste_porte_cbhpm	a
	where	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = nr_seq_prestador_p))
	and	a.cd_porte		= substr(cd_porte_anestesista_w,1,8)
	and (cd_procedimento 	= cd_procedimento_p 	or coalesce(cd_procedimento::text, '') = '')
	and (ie_origem_proced 	= ie_origem_proced_p 	or coalesce(ie_origem_proced::text, '') = '')
	and (cd_grupo_proc 	= cd_grupo_w 		or coalesce(cd_grupo_proc::text, '') = '')
	and (cd_especialidade 	= cd_especialidade_w 	or coalesce(cd_especialidade::text, '') = '')
	and (cd_area_procedimento 	= cd_area_w 		or coalesce(cd_area_procedimento::text, '') = '')
	and (coalesce(a.ie_tipo_ajuste,'M') = 'A')
	and	a.ie_situacao	= 'A'
	and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from	pls_ajuste_porte_cbhpm	x
			where	x.cd_porte 	= substr(cd_porte_anestesista_w,1,8)
			and	x.dt_vigencia	<= dt_referencia_p
			and	x.ie_situacao	= 'A'
			and	((coalesce(x.nr_seq_prestador::text, '') = '') or (x.nr_seq_prestador = nr_seq_prestador_p)))
	order by
		coalesce(cd_procedimento,0),
		coalesce(ie_origem_proced,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0),		
		coalesce(nr_seq_prestador,0);

C05 CURSOR FOR
	SELECT	qt_uco
	from	conv_ajuste_uco_cbhpm
	where	cd_convenio = cd_convenio_p
	and	cd_estabelecimento = cd_estabelecimento_p
	and	coalesce(cd_procedimento, coalesce(cd_procedimento_p,0))		= coalesce(cd_procedimento_p,0)
	and	coalesce(ie_origem_proced, coalesce(ie_origem_proced_p,0))	= coalesce(ie_origem_proced_p,0)
	and	coalesce(cd_grupo_proc, coalesce(cd_grupo_w,0))			= coalesce(cd_grupo_w,0)
	and	coalesce(cd_especialidade, coalesce(cd_especialidade_w,0))	= coalesce(cd_especialidade_w,0)
	and	coalesce(cd_area_procedimento, coalesce(cd_area_w,0))		= coalesce(cd_area_w,0)
	and	dt_referencia_p between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_vigencia_inicial) and coalesce(dt_vigencia_final, dt_referencia_p)
	and	ie_situacao = 'A'
	order by	dt_vigencia_inicial,
		coalesce(cd_procedimento,0),
		coalesce(ie_origem_proced,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);
		
		
C06 CURSOR FOR
	SELECT	nr_porte_anest_cobranca
	from	regra_porte_anest_cbhpm
	where	nr_porte_anest = nr_porte_anest_w
	and	coalesce(cd_procedimento, coalesce(cd_procedimento_p,0))	= coalesce(cd_procedimento_p,0)
	and	((coalesce(cd_procedimento::text, '') = '') or (coalesce(ie_origem_proced, coalesce(ie_origem_proced_p,0)) = coalesce(ie_origem_proced_p,0)))
	and	coalesce(cd_area_procedimento, cd_area_w) = cd_area_w
	and	coalesce(cd_especialidade, cd_especialidade_w) = cd_especialidade_w
	and	coalesce(cd_grupo_proc, cd_grupo_w) = cd_grupo_w
	order by nr_porte_anest;		
			


BEGIN

select	coalesce(max(IE_DATA_VIG_CBHPM), 'N'),
	coalesce(max(IE_DESPREZA_CASA_CBHPM), 'N'),
	coalesce(max(IE_PRECO_CBHPM_DATA), 'N')
into STRICT	IE_DATA_VIG_CBHPM_w,
	IE_DESPREZA_CASA_CBHPM_w,
	ie_preco_cbhpm_data_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

if (ie_data_vig_cbhpm_w	= 'R') then	
	select	coalesce(max(ie_data_vig_cbhpm), 'N')
	into STRICT	ie_data_vig_cbhpm_w
	from	convenio_estabelecimento
	where	cd_convenio		= cd_convenio_p
	and	cd_estabelecimento 	= cd_estabelecimento_p;
end if;

/* Obter Estrutura do procedimento */

select	coalesce(max(cd_grupo_proc),0),
	coalesce(max(cd_especialidade),0),
	coalesce(max(cd_area_procedimento),0)
into STRICT	cd_grupo_w,
	cd_especialidade_w,
	cd_area_w
from	Estrutura_Procedimento_V
where	cd_procedimento		= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_p;

/* Felipe - 16/09/2011 - OS 301610 - Se o parametro estiver como Ambos ou Prestador e o calculo for para o Tasy/Hospital ou 
	como Ambos ou Operadora e o calculo for para Tasy/OPS */
if	(((ie_preco_cbhpm_data_w in ('A','P')) and (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '')) or
	((ie_preco_cbhpm_data_w in ('A','O')) and
	((nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') or (nr_seq_congenere_p IS NOT NULL AND nr_seq_congenere_p::text <> '')))) then
	ie_preco_cbhpm_data_ww	:= 'S';
end if;

begin

/* Felipe - 16/09/2011 - OS 301610 */

if (ie_preco_cbhpm_data_ww = 'S') then
	select	a.dt_vigencia,
		coalesce(a.cd_porte,'X'),
	 	coalesce(a.tx_porte,1),
		coalesce(a.qt_uco,0),
		coalesce(a.nr_porte_anest,0),
		coalesce(a.nr_auxiliar,0),
		coalesce(a.qt_filme,0),
		coalesce(a.qt_incidencia,0),
		a.ie_unid_ra
	into STRICT	dt_vigencia_preco_w,
		cd_porte_w,
		tx_porte_w,
		qt_uco_w,
		nr_porte_anest_w,
		nr_auxiliar_w,
		qt_filme_w,
		qt_incidencia_w,
		ie_unid_ra_w
	from	cbhpm_preco a
	where	a.cd_procedimento	= cd_procedimento_p
	and	a.ie_origem_proced	= ie_origem_proced_p
	and	a.dt_vigencia		=
		(SELECT max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from 	cbhpm_preco x
			where x.cd_procedimento		= cd_procedimento_p
			and	x.ie_origem_proced	= ie_origem_proced_p
			and	x.dt_vigencia		<= dt_referencia_p);
elsif (IE_DATA_VIG_CBHPM_w	= 'N') then
	select	a.dt_vigencia,
		coalesce(a.cd_porte,'X'),
	 	coalesce(a.tx_porte,1),
		 coalesce(a.qt_uco,0),
		 coalesce(a.nr_porte_anest,0),
		 coalesce(a.nr_auxiliar,0),
		 coalesce(a.qt_filme,0),
		 coalesce(a.qt_incidencia,0),
		 a.ie_unid_ra
	into STRICT	 dt_vigencia_preco_w,
		 cd_porte_w,
		 tx_porte_w,
		 qt_uco_w,
		 nr_porte_anest_w,
		 nr_auxiliar_w,
		 qt_filme_w,
		 qt_incidencia_w,
		 ie_unid_ra_w
	from	 cbhpm_preco a
	where	 a.cd_procedimento	= cd_procedimento_p
	and	 a.ie_origem_proced	= ie_origem_proced_p
	and	 a.dt_vigencia		=
		(SELECT max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from 	cbhpm_preco x
			where x.cd_procedimento		= cd_procedimento_p
			and	x.ie_origem_proced	= ie_origem_proced_p
			and	x.dt_vigencia		<= dt_referencia_p
			and	x.dt_vigencia		<= coalesce(dt_vigencia_edicao_p, dt_referencia_p));
else
	select	a.dt_vigencia,
		coalesce(a.cd_porte,'X'),
	 	coalesce(a.tx_porte,1),
		 coalesce(a.qt_uco,0),
		 coalesce(a.nr_porte_anest,0),
		 coalesce(a.nr_auxiliar,0),
		 coalesce(a.qt_filme,0),
		 coalesce(a.qt_incidencia,0),
		 a.ie_unid_ra
	into STRICT	 dt_vigencia_preco_w,
		 cd_porte_w,
		 tx_porte_w,
		 qt_uco_w,
		 nr_porte_anest_w,
		 nr_auxiliar_w,
		 qt_filme_w,
		 qt_incidencia_w,
		 ie_unid_ra_w
	from	 cbhpm_preco a
	where	 a.cd_procedimento	= cd_procedimento_p
	and	 a.ie_origem_proced	= ie_origem_proced_p
	and	 a.dt_vigencia		=
		(SELECT min(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from 	cbhpm_preco x
			where x.cd_procedimento		= cd_procedimento_p
			and	x.ie_origem_proced	= ie_origem_proced_p
			and	x.dt_vigencia		<= dt_referencia_p
			and	x.dt_vigencia		<= coalesce(dt_vigencia_edicao_p, dt_referencia_p)
			and	x.dt_vigencia		= dt_vigencia_edicao_p);
end if;
exception
     	when others then
	begin
	dt_vigencia_preco_w	:= null;
	cd_porte_w		:= 'X';
	tx_porte_w		:= 1;
	qt_uco_w		:= 0;
	nr_porte_anest_w	:= 0;
	nr_auxiliar_w		:= 0;
	qt_filme_w		:= 0;
	qt_incidencia_w		:= null;
	end;
end;		

if (tx_porte_w	= 0) then
	tx_porte_w	:= 1;
end if;

tx_porte_orig_w		:= tx_porte_w;

if (cd_porte_w	<> 'X') then
	begin
	if (coalesce(cd_convenio_p,0) > 0) then
		OPEN C01;
		LOOP
		FETCH C01 into	
			tx_porte_convenio_w,
			VL_PORTE_NEGOCIADO_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			/*Andre e Felipe OS71939*/

			if (tx_porte_convenio_w <> 1) then
				tx_porte_W	:= tx_porte_convenio_w;
			else	
				tx_porte_w	:= tx_porte_orig_w;
			end if;
		
		END LOOP;
		CLOSE C01;
	elsif (coalesce(nr_seq_prestador_p,0) > 0) or (coalesce(nr_seq_congenere_p,0) > 0) then
		open C03;
		loop
		fetch C03 into	
			tx_porte_convenio_w,
			vl_porte_negociado_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin			
			if (tx_porte_convenio_w <> 1) then
				tx_porte_w	:= tx_porte_convenio_w;
			else	
				tx_porte_w	:= tx_porte_orig_w;
			end if;
			end;
		end loop;
		close C03;
	
	end if;

	/* Felipe e Fabricio - OS 194603 - Colocamos a ultima linha do comando abaixo*/

	if (IE_DATA_VIG_CBHPM_w	= 'N') then
		select	a.vl_porte,
			a.dt_vigencia
		into STRICT	vl_porte_w,
			dt_vigencia_porte_w
		from	cbhpm_porte	a
		where	a.cd_porte	= substr(cd_porte_w,1,8)
		and	a.dt_vigencia	=
			(SELECT	max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from cbhpm_porte x
				where x.cd_porte = substr(cd_porte_w,1,8)
				and	x.dt_vigencia <= dt_referencia_p
				and	x.dt_vigencia <= coalesce(dt_vigencia_edicao_p, dt_referencia_p));
	else
		select	a.vl_porte,
			a.dt_vigencia
		into STRICT	vl_porte_w,
			dt_vigencia_porte_w
		from	cbhpm_porte	a
		where	a.cd_porte	= substr(cd_porte_w,1,8)
		and	a.dt_vigencia	=
			(SELECT	min(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from cbhpm_porte x
				where x.cd_porte = substr(cd_porte_w,1,8)
				and	x.dt_vigencia 	<= dt_referencia_p
				and	x.dt_vigencia	= dt_vigencia_edicao_p);
	end if;
	exception
     		when others then
		begin
		vl_porte_w		:= 0;
		dt_vigencia_porte_w	:= null;
		end;
	end;
end if;

select	count(*)
into STRICT	qt_ajuste_uco_cbhpm_w
from	conv_ajuste_uco_cbhpm
where	cd_convenio = cd_convenio_p
and	cd_estabelecimento = cd_estabelecimento_p;

if (coalesce(qt_ajuste_uco_cbhpm_w,0) > 0) then

	open C05;
	loop
	fetch C05 into	
		qt_uco_ajuste_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		qt_uco_w	:= qt_uco_ajuste_w;
		end;
	end loop;
	close C05;

end if;

/*Define valor do medico */

if (IE_DESPREZA_CASA_CBHPM_w = 'S') then	

	/*Fabricio OS 189016 e 187019*/

	if (coalesce(VL_PORTE_NEGOCIADO_w,0) <> 0) then
		vl_medico_arred_w:= VL_PORTE_NEGOCIADO_w * tx_porte_orig_w;
		vl_medico_arred_w := arredondamento(vl_medico_arred_w, 2, 'D');
		vl_medico_w:= vl_medico_arred_w;
	else
		vl_medico_arred_w:= vl_porte_w * tx_porte_w;
		vl_medico_arred_w := arredondamento(vl_medico_arred_w, 2, 'D');
		vl_medico_w:= vl_medico_arred_w;
	end if;
	
else
	/*Fabricio OS 189016 e 187019*/

	if (coalesce(VL_PORTE_NEGOCIADO_w,0) <> 0) then
		vl_medico_w	:= (VL_PORTE_NEGOCIADO_w * tx_porte_orig_w);
	else
		vl_medico_w	:= (vl_porte_w * tx_porte_w);
	end if;		
	
end if;

nr_porte_anest_cobranca_w:= null;
open C06;
loop
fetch C06 into	
	nr_porte_anest_cobranca_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin
	nr_porte_anest_cobranca_w:= nr_porte_anest_cobranca_w;
	end;
end loop;
close C06;

if (nr_porte_anest_cobranca_w IS NOT NULL AND nr_porte_anest_cobranca_w::text <> '') then
	nr_porte_anest_w:= nr_porte_anest_cobranca_w;
end if;

/*	Define porte do anestesista */

if (nr_porte_anest_w	= 1) then
	cd_porte_anestesista_w	:= '3A';
elsif (nr_porte_anest_w	= 2) then
	cd_porte_anestesista_w	:= '3C';
elsif (nr_porte_anest_w	= 3) then
	cd_porte_anestesista_w	:= '4C';
elsif (nr_porte_anest_w	= 4) then
	cd_porte_anestesista_w	:= '6B';
elsif (nr_porte_anest_w	= 5) then
	cd_porte_anestesista_w	:= '7C';
elsif (nr_porte_anest_w	= 6) then
	cd_porte_anestesista_w	:= '9B';
elsif (nr_porte_anest_w	= 7) then
	cd_porte_anestesista_w	:= '10C';
elsif (nr_porte_anest_w	= 8) then
	cd_porte_anestesista_w	:= '12A';
else
	cd_porte_anestesista_w	:= 'X';
end if;

vl_porte_anestesista_w	:= 0;
if (cd_porte_anestesista_w <> 'X') then
	begin
	
	if (IE_DATA_VIG_CBHPM_w	= 'N') then
		select 	coalesce(max(a.vl_porte),0)
		into STRICT	vl_porte_anestesista_w
		from	cbhpm_porte a
		where	a.cd_porte		= cd_porte_anestesista_w
		and	a.dt_vigencia	=
		(SELECT max(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
			from cbhpm_porte x
			where x.cd_porte = cd_porte_anestesista_w
			and	x.dt_vigencia <= dt_referencia_p
			and	x.dt_vigencia <= coalesce(dt_vigencia_edicao_p, dt_referencia_p));
	else
		select 	coalesce(max(a.vl_porte),0)
		into STRICT	vl_porte_anestesista_w
		from	cbhpm_porte a
		where	a.cd_porte	= cd_porte_anestesista_w
		and	a.dt_vigencia	=
		(SELECT	min(coalesce(x.dt_vigencia,clock_timestamp() - interval '3650 days'))
				from cbhpm_porte x
				where x.cd_porte = cd_porte_anestesista_w
				and	x.dt_vigencia 	<= dt_referencia_p
				and	x.dt_vigencia	= dt_vigencia_edicao_p);
	end if;
	
	tx_porte_anest_w:= 1;
	
	if (coalesce(cd_convenio_p,0) > 0) then
		OPEN C02;
		LOOP
		FETCH C02 into	
			tx_porte_convenio_w,
			VL_PORTE_NEGOCIADO_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			tx_porte_anest_w	:= tx_porte_convenio_w;
			end;		
		END LOOP;
		CLOSE C02;
	elsif (coalesce(nr_seq_prestador_p,0) > 0) or (coalesce(nr_seq_congenere_p,0) > 0) then
		open C04;
		loop
		fetch C04 into	
			tx_porte_convenio_w,
			vl_porte_negociado_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			tx_porte_anest_w	:= tx_porte_convenio_w;
			end;
		end loop;
		close C04;
	end if;

	/*	Define valor do Anestesista */

	if (IE_DESPREZA_CASA_CBHPM_w = 'S') then	

		/*Fabricio OS 189016 e 187019*/

		if (coalesce(VL_PORTE_NEGOCIADO_w,0) <> 0) then
			vl_anest_arred_w:= VL_PORTE_NEGOCIADO_w * 1;
			vl_anest_arred_w := arredondamento(vl_anest_arred_w, 2, 'D');
			vl_porte_anestesista_w:= vl_anest_arred_w;
		else
			vl_anest_arred_w:= vl_porte_anestesista_w * tx_porte_anest_w;
			vl_anest_arred_w := arredondamento(vl_anest_arred_w, 2, 'D');
			vl_porte_anestesista_w:= vl_anest_arred_w;
		end if;
	
	else

		/*Fabricio OS 189016 e 187019*/

		if (coalesce(VL_PORTE_NEGOCIADO_w,0) <> 0) then
			vl_porte_anestesista_w	:= (VL_PORTE_NEGOCIADO_w * 1);
		else
			vl_porte_anestesista_w	:= (vl_porte_anestesista_w * tx_porte_anest_w);
		end if;
		
	end if;

		
	end;
end if;

/*	Define valor custo operacional */

vl_custo_operacional_w	:= 0;


/*	Retorno dos valores */

vl_medico_p		:= vl_medico_w;
cd_porte_p		:= cd_porte_w;
tx_porte_p		:= tx_porte_w;
qt_uco_p		:= qt_uco_w;
nr_porte_anest_p	:= nr_porte_anest_w;
nr_auxiliar_p		:= nr_auxiliar_w;
qt_filme_p		:= qt_filme_w;
qt_incidencia_p		:= qt_incidencia_w;
ie_unid_ra_p		:= ie_unid_ra_w;
vl_porte_p		:= vl_porte_w;
dt_vigencia_porte_p	:= dt_vigencia_porte_w;
dt_vigencia_preco_p	:= dt_vigencia_preco_w;
vl_porte_anestesista_p	:= vl_porte_anestesista_w;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_preco_cbhpm ( cd_estabelecimento_p bigint, dt_referencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_edicao_p timestamp, cd_convenio_p bigint, nr_seq_prestador_p bigint, ie_video_p text, vl_medico_p INOUT bigint, cd_porte_p INOUT text, tx_porte_p INOUT bigint, qt_uco_p INOUT bigint, nr_porte_anest_p INOUT bigint, nr_auxiliar_p INOUT bigint, qt_filme_p INOUT bigint, qt_incidencia_p INOUT bigint, ie_unid_ra_p INOUT text, vl_porte_p INOUT bigint, dt_vigencia_porte_p INOUT timestamp, dt_vigencia_preco_p INOUT timestamp, vl_porte_anestesista_p INOUT bigint, cd_categoria_p text, ie_credenciado_p text, nr_seq_congenere_p bigint) FROM PUBLIC;

