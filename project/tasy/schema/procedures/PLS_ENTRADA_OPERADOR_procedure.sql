-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_entrada_operador (nm_usuario_p text, nr_ramal_p text, retorno_ramal_p INOUT text, retorno_operador_p INOUT text, retorno_filas_p INOUT text, ds_motivo_p INOUT text, tipo_evento_p INOUT integer) AS $body$
DECLARE


dt_saida_w		timestamp;
nr_operador_w           pls_operador.nr_sequencia%type;
nr_seq_ausencia_w	bigint;
cd_pf_w                 usuario.cd_pessoa_fisica%type;
nr_seq_fila_w           pls_operador_filas.nr_seq_fila%type;
nr_seq_op_ctr_w         pls_operador_controle.nr_seq_fila%type;
nr_ramal_w              pls_operador_controle.nr_ramal%type;
ds_fila_w               pls_filas_call_center.ds_fila%type;
nr_ult_seq_op_w         pls_operador_controle.nr_sequencia%type;
nr_ult_seq_aus_w        pls_atendimento_ausencia.nr_sequencia%type;

  fila RECORD;
  i RECORD;
  ausencia RECORD;

BEGIN

select  cd_pessoa_fisica
into STRICT    cd_pf_w
from    usuario
where   nm_usuario = nm_usuario_p;

select  nr_sequencia
into STRICT    nr_operador_w
from    pls_operador
where   cd_pessoa_fisica = cd_pf_w and ie_situacao = 'A';

select  max(nr_sequencia)
into STRICT    nr_ult_seq_op_w
from    pls_operador_controle
where   nr_seq_operador = nr_operador_w;

select  nr_ramal
into STRICT    nr_ramal_w
from    pls_operador_controle
where   nr_seq_operador = nr_operador_w
and     nr_sequencia = nr_ult_seq_op_w;

select  max(nr_sequencia)
into STRICT    nr_seq_op_ctr_w
from    pls_operador_controle
where   nr_seq_operador = nr_operador_w
and     coalesce(dt_saida::text, '') = '';

select  max(a.nr_sequencia)
into STRICT    nr_ult_seq_aus_w
from    pls_atendimento_ausencia a, pls_operador_controle b, pls_operador c
where   a.nr_seq_operador = nr_operador_w
and     b.nr_seq_operador = c.nr_sequencia
and     c.ie_situacao = 'A';

begin
    select  b.ie_tipo_evento, b.ds_motivo
    into STRICT    tipo_evento_p, ds_motivo_p
    from    PLS_ATENDIMENTO_AUSENCIA a, PLS_ATEND_MOTIVO_AUSENCIA b
    where   a.nr_seq_operador =  nr_operador_w
      and   coalesce(a.dt_fim::text, '') = ''
      and   a.nr_seq_motivo = b.nr_sequencia
      and   a.nr_sequencia = nr_ult_seq_aus_w;
    exception
    when    no_data_found then
            tipo_evento_p:= 0;
            ds_motivo_p:= '';
end;

  if (tipo_evento_p in (0,1,2)) then
        for fila in (
        SELECT DISTINCT NR_SEQ_FILA
        from PLS_OPERADOR_FILAS
        where nr_seq_operador = nr_operador_w
        and ie_situacao = 'A'
        )
        
        loop
        
        for i in (SELECT a.ds_fila || ';' ds_fila
            from pls_filas_call_center a, pls_operador_filas b
            where a.nr_sequencia = b.nr_seq_fila
            and b.ie_situacao = 'A' and b.nr_seq_operador = nr_operador_w)
        loop
          retorno_filas_p:= retorno_filas_p || i.ds_fila;
        end loop;

        if (nr_ult_seq_aus_w IS NOT NULL AND nr_ult_seq_aus_w::text <> '') then
            for ausencia in (
            SELECT a.nr_seq_ausencia
            from PLS_OPERADOR_CONTROLE a, PLS_ATENDIMENTO_AUSENCIA b
            where a.nr_seq_operador = nr_operador_w 
            and a.nr_seq_ausencia = b.nr_sequencia
            and (a.dt_saida IS NOT NULL AND a.dt_saida::text <> '')
            and (a.nr_seq_ausencia IS NOT NULL AND a.nr_seq_ausencia::text <> '')
            and coalesce(b.dt_fim::text, '') = ''
            order by nr_seq_ausencia desc
            )
            loop
                    update PLS_ATENDIMENTO_AUSENCIA
                    set     dt_fim = clock_timestamp(),
                            dt_atualizacao = clock_timestamp(),
                            dt_atualizacao_nrec = clock_timestamp(),
                            nm_usuario = nm_usuario_p,
                            nm_usuario_nrec = nm_usuario_p
                    where   nr_sequencia = ausencia.nr_seq_ausencia;
            end loop;
        end if;
        
        select  nextval('pls_operador_controle_seq')
        into STRICT  nr_seq_ausencia_w
;

        if (fila.nr_seq_fila IS NOT NULL AND fila.nr_seq_fila::text <> '') then
            insert into PLS_OPERADOR_CONTROLE(
            NR_SEQUENCIA, DT_ENTRADA, DT_ATUALIZACAO, NM_USUARIO, DT_ATUALIZACAO_NREC, 
            NM_USUARIO_NREC, NR_SEQ_OPERADOR, NR_SEQ_FILA, NR_RAMAL, IE_PAUSA_CENTRAL)
            
            values (
            nr_seq_ausencia_w, clock_timestamp(), clock_timestamp(), nm_usuario_p, clock_timestamp(), 
            nm_usuario_p, nr_operador_w, fila.NR_SEQ_FILA, nr_ramal_p, 'N');

            SELECT ds_fila 
            into STRICT ds_fila_w
            FROM PLS_FILAS_CALL_CENTER
            where nr_sequencia = fila.nr_seq_fila;

        end if;
        end loop;

        retorno_ramal_p := nr_ramal_p;
        retorno_operador_p:= nr_operador_w;

end if;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_entrada_operador (nm_usuario_p text, nr_ramal_p text, retorno_ramal_p INOUT text, retorno_operador_p INOUT text, retorno_filas_p INOUT text, ds_motivo_p INOUT text, tipo_evento_p INOUT integer) FROM PUBLIC;

