-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_atualizar_dur_ciclo (nr_seq_paciente_p bigint, nr_seq_atendimento_p bigint, ie_todos_ciclos_p text, nr_duracao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

                    nr_seq_atendimento_w  bigint;
                    qt_agendado_w  bigint;
                    nr_ciclo_w    smallint;
                    nr_ciclo1_w smallint;
                    nr_ciclo2_w smallint;

C01 CURSOR FOR
  SELECT  nr_seq_atendimento
  from  paciente_atendimento
  where  nr_seq_paciente = nr_seq_paciente_p
  and    nr_ciclo    = nr_ciclo_w
  and    coalesce(dt_cancelamento::text, '') = ''
 and coalesce(dt_real,dt_prevista) >= clock_timestamp();

C02 CURSOR FOR
  SELECT  distinct
      nr_ciclo
  from  paciente_atendimento
  where  nr_seq_paciente = nr_seq_paciente_p
  and    coalesce(dt_cancelamento::text, '') = ''
  and coalesce(dt_real,dt_prevista) >= clock_timestamp()	
  order by 1;


BEGIN

if (ie_todos_ciclos_p = 'S') then

  /*select  max(nr_ciclo)
  into  nr_ciclo_w
  from  paciente_atendimento
  where  nr_seq_atendimento = nr_seq_atendimento_p;*/
  open C02;
  loop
  fetch C02 into
    nr_ciclo_w;
  EXIT WHEN NOT FOUND; /* apply on C02 */
    begin

    open C01;
    loop
    fetch C01 into
      nr_seq_atendimento_w;
    EXIT WHEN NOT FOUND; /* apply on C01 */
      begin
      select  count(*)
      into STRICT  qt_agendado_w
      from  agenda_quimio
      where  nr_seq_atendimento  = nr_seq_atendimento_w
      and    ie_status_agenda not in ('C');

      if (qt_agendado_w  = 0) then
        update  paciente_atendimento
        set    qt_tempo_agenda    = nr_duracao_p,
            nm_usuario      = nm_usuario_p,
            dt_atualizacao    = clock_timestamp()
        where  nr_seq_atendimento   = nr_seq_atendimento_w;

        update  paciente_setor
        set    qt_tempo_medic   = nr_duracao_p,
            nm_usuario    = nm_usuario_p,
            dt_atualizacao  = clock_timestamp()
        where  nr_seq_paciente = nr_seq_paciente_p;
      end if;
      end;
    end loop;
    close C01;

    end;
  end loop;
  close C02;

else
  select  count(*)
  into STRICT  qt_agendado_w
  from  agenda_quimio
  where  nr_seq_atendimento  = nr_seq_atendimento_p
  and  ie_status_agenda not in ('C');

  if (qt_agendado_w  = 0) then
    update  paciente_atendimento
    set  qt_tempo_agenda    = nr_duracao_p,
      nm_usuario    = nm_usuario_p,
      dt_atualizacao    = clock_timestamp()
    where  nr_seq_atendimento   = nr_seq_atendimento_p;
  end if;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_atualizar_dur_ciclo (nr_seq_paciente_p bigint, nr_seq_atendimento_p bigint, ie_todos_ciclos_p text, nr_duracao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

