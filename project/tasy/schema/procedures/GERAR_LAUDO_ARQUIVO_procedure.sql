-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_laudo_arquivo ( nr_prescricao_p bigint, nr_seq_proced_p bigint, nr_controle_p bigint, cd_medico_p text, nr_seq_procpaci_p text, ds_arquivo_imagem_p text, dt_laudo_p timestamp, ie_libera_laudo_p text, nm_usuario_p text, nr_seq_laudo_p INOUT bigint) AS $body$
DECLARE

 
nr_laudo_w		bigint;
nr_seq_laudo_w		bigint;
nr_atendimento_w	bigint;
dt_entrada_w		timestamp;
dt_liberacao_w		timestamp := null;
ds_titulo_laudo_w	varchar(255);
ie_status_execucao_w	varchar(3) := '30';


BEGIN 
 
select	nextval('laudo_paciente_seq') 
into STRICT	nr_seq_laudo_w
;
 
nr_seq_laudo_p	:= nr_seq_laudo_w;
 
select	obter_atendimento_prescr(nr_prescricao_p) 
into STRICT	nr_atendimento_w
;
 
if (nr_atendimento_w > 0) then 
	begin 
 
	select	dt_entrada 
	into STRICT	dt_entrada_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_w;
 
	select	coalesce(max(nr_laudo),0) + 1 
	into STRICT	nr_laudo_w 
	from	laudo_paciente 
	where	nr_atendimento = nr_atendimento_w;
 
	select	'('|| cd_procedimento ||') '|| substr(obter_descricao_procedimento(cd_procedimento, ie_origem_proced),1,80) 
	into STRICT	ds_titulo_laudo_w 
	from	prescr_procedimento 
	where	nr_prescricao	= nr_prescricao_p 
	and	nr_sequencia	= nr_seq_proced_p;
 
	if (ie_libera_laudo_p = 'S') then 
		ie_status_execucao_w	:= '40';
		dt_liberacao_w		:= clock_timestamp();
	end if;
 
	insert into laudo_paciente(	 
		NR_SEQUENCIA, 
		NR_ATENDIMENTO, 
		NR_CONTROLE, 
		DT_ENTRADA_UNIDADE, 
		NR_LAUDO, 
		NM_USUARIO, 
		DT_ATUALIZACAO, 
		CD_MEDICO_RESP, 
		DS_TITULO_LAUDO, 
		DT_LAUDO, 
		IE_NORMAL, 
		DT_EXAME, 
		NR_PRESCRICAO, 
		DS_LAUDO, 
		NR_SEQ_PRESCRICAO, 
		QT_IMAGEM, 
		DT_LIBERACAO, 
  		NR_SEQ_PROC) 
	Values (	nr_seq_laudo_w, 
		nr_atendimento_w, 
		nr_controle_p, 
		dt_entrada_w, 
		nr_laudo_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		cd_medico_p, 
		ds_titulo_laudo_w, 
		dt_laudo_p, 
		'N', 
		dt_laudo_p, 
		nr_prescricao_p, 
		' ', 
		nr_seq_proced_p, 
		1, 
		dt_liberacao_w, 
  		nr_seq_procpaci_p);
 
	CALL Vincular_Procedimento_Laudo(nr_seq_laudo_w,'N',nm_usuario_p);	
		 
	Insert into laudo_paciente_imagem( 
		nr_sequencia, 
		nr_seq_imagem, 
		dt_atualizacao, 
		nm_usuario, 
		ds_arquivo_imagem) 
	Values (	 
		nr_seq_laudo_w, 
		1, 
		clock_timestamp(), 
		nm_usuario_p, 
		ds_arquivo_imagem_p);
 
	update	prescr_procedimento 
	set	ie_status_execucao	= ie_status_execucao_w 
	where	nr_prescricao		= nr_prescricao_p 
	and	nr_sequencia		= nr_seq_proced_p;
	 
	end;
end if;
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_laudo_arquivo ( nr_prescricao_p bigint, nr_seq_proced_p bigint, nr_controle_p bigint, cd_medico_p text, nr_seq_procpaci_p text, ds_arquivo_imagem_p text, dt_laudo_p timestamp, ie_libera_laudo_p text, nm_usuario_p text, nr_seq_laudo_p INOUT bigint) FROM PUBLIC;

