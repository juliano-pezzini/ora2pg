-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_cota_munic_agepac ( nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_exec_p text, ie_novo_registro_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_proximo_mes_p text, nr_seq_proc_adic_p bigint ) AS $body$
DECLARE

 
dt_agenda_w		timestamp;
cd_municipio_ibge_w	varchar(06);
cd_area_proced_w	bigint;
cd_espec_proced_w	bigint;
cd_grupo_proced_w	bigint;
nr_seq_regra_w		bigint;
ie_perm_agenda_w	varchar(01);
qt_regra_w		smallint;
qt_agenda_w		integer;
qt_saldo_w		integer;
ie_novo_w		varchar(01);
qt_proc_adic_w		integer;
nr_seq_forma_org_w	bigint;
nr_seq_grupo_w 		bigint;
nr_seq_subgrupo_w	bigint;
ie_utiliza_med_ant_w	varchar(1)	:= 'S';
qt_saldo_ant_w		integer;
qt_saldo_proximo_w	integer;
qt_agenda_cota_munic_w	integer;
				
C01 CURSOR FOR 
	SELECT	coalesce(nr_sequencia,0) 
	from	agenda_regra 
	where	cd_agenda		= cd_agenda_p 
	and	cd_estabelecimento	= cd_estabelecimento_p 
	and	((cd_convenio	= cd_convenio_p) or (coalesce(cd_convenio::text, '') = '')) 
	and	((cd_area_proc	= cd_area_proced_w) or (coalesce(cd_area_proc::text, '') = '')) 
	and	((cd_especialidade	= cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = '')) 
	and	((cd_grupo_proc	= cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = '')) 
	and	coalesce(nr_seq_forma_org, nr_seq_forma_org_w)	= nr_seq_forma_org_w 	 
	and	coalesce(nr_seq_grupo, nr_seq_grupo_w)		= nr_seq_grupo_w 	 
	and	coalesce(nr_seq_subgrupo, nr_seq_subgrupo_w)		= nr_seq_subgrupo_w 
	and	((cd_procedimento	= cd_procedimento_p) or (coalesce(cd_procedimento::text, '') = '')) 
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_p) or (coalesce(ie_origem_proced::text, '') = ''))) 
	and	((nr_seq_proc_interno	= nr_seq_proc_interno_p) or (coalesce(nr_seq_proc_interno::text, '') = '')) 
	and	((cd_medico		= cd_medico_exec_p) or (coalesce(cd_medico::text, '') = '')) 
	and	((cd_municipio_ibge	= coalesce(cd_municipio_ibge_w, 'X')) or (coalesce(cd_municipio_ibge::text, '') = ''))	 
	order by	coalesce(cd_procedimento,0), 
		coalesce(nr_seq_proc_interno,0), 
		coalesce(cd_grupo_proc,0), 
		coalesce(cd_especialidade,0), 
		coalesce(cd_area_proc,0), 
		coalesce(nr_seq_forma_org,0), 
		coalesce(nr_seq_subgrupo,0), 
		coalesce(nr_seq_grupo,0), 
		coalesce(cd_medico,'0');
				

BEGIN 
 
select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
into STRICT	ie_novo_w 
from	agenda_paciente 
where	nr_sequencia	= nr_seq_agenda_p 
and	coalesce(cd_pessoa_fisica::text, '') = '';
 
/* Obter os dados da agenda */
 
select	pkg_date_utils.start_of(CASE WHEN ie_proximo_mes_p='S' THEN  pkg_date_utils.add_month(dt_agenda_p,1,0)  ELSE dt_agenda_p END , 'MONTH',0), 
	substr(obter_compl_pf(cd_pessoa_fisica_p, 1,'CDM'),1,6)		 
into STRICT	dt_agenda_w, 
	cd_municipio_ibge_w
;
 
/* obter informação do procedimento */
 
select	coalesce(max(cd_area_procedimento),0), 
	coalesce(max(cd_especialidade),0), 
	coalesce(max(cd_grupo_proc),0), 
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'F'),'F'),1,10)),0), 
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'G'),'G'),1,10)),0), 
	coalesce(max(substr(sus_obter_seq_estrut_proc(sus_obter_estrut_proc(cd_procedimento, ie_origem_proced, 'C', 'S'),'S'),1,10)),0) 
into STRICT	cd_area_proced_w, 
	cd_espec_proced_w, 
	cd_grupo_proced_w, 
	nr_seq_forma_org_w, 
	nr_seq_grupo_w, 
	nr_seq_subgrupo_w 
from	estrutura_procedimento_v 
where	cd_procedimento	= cd_procedimento_p 
and	ie_origem_proced	= ie_origem_proced_p;
	 
/* Verifica se possui regra conforme os dados da agenda */
 
open C01;
loop 
fetch C01 into	 
	nr_seq_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	nr_seq_regra_w	:= nr_seq_regra_w;		
	end;
end loop;
close C01;
 
select	count(*) 
into STRICT	qt_agenda_cota_munic_w 
from	agenda_paciente_cota_munic 
where	nr_seq_agenda		= nr_Seq_agenda_p 
and	coalesce(nr_seq_proc_adic,0)	= nr_seq_proc_adic_p 
and	ie_situacao		= 'A';
 
if (nr_seq_regra_w > 0) then	 
	/* Verifica se a regra permite agendamento */
 
	select	coalesce(max(ie_permite),'S') 
	into STRICT	ie_perm_agenda_w 
	from	agenda_regra 
	where	nr_sequencia = nr_seq_regra_w;
	 
	/* Se permite agendamento */
 
	if (ie_perm_agenda_w = 'S') then 
		/* Obtém a quantidade mensal da cota por municipio */
 
		select	coalesce(max(qt_regra),0) 
		into STRICT	qt_regra_w 
		from	agenda_regra 
		where	nr_sequencia = nr_seq_regra_w;
		 
		if (qt_agenda_cota_munic_w = 0) then 
			/* Se possui agendamentos conforme as restrições */
 
			insert into agenda_paciente_cota_munic( 
					nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_mes_referencia, 
					qt_agendada, 
					qt_saldo, 
					cd_convenio, 
					cd_municipio_ibge, 
					qt_mensal, 
					cd_procedimento, 
					ie_origem_proced, 
					nr_seq_proc_interno, 
					qt_saldo_proximo, 
					nr_seq_agenda, 
					ie_situacao, 
					nr_seq_proc_adic) 
			values (		nextval('agenda_paciente_cota_munic_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					dt_agenda_w, 
					1, 
					1, 
					cd_convenio_p, 
					cd_municipio_ibge_w, 
					qt_regra_w, 
					cd_procedimento_p, 
					ie_origem_proced_p, 
					nr_seq_proc_interno_p, 
					0, 
					nr_seq_agenda_p, 
					'A', 
					nr_seq_proc_adic_p);
		end if;
	end if;/* Final - Se permite agendamento */
elsif (qt_agenda_cota_munic_w > 0) then 
	update 	agenda_paciente_cota_munic 
	set	ie_situacao	= 'I' 
	where	nr_seq_agenda	= nr_seq_agenda_p;
end if;/* Final - Se possuir regra */
	
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_cota_munic_agepac ( nr_seq_agenda_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, cd_pessoa_fisica_p text, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_medico_exec_p text, ie_novo_registro_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_proximo_mes_p text, nr_seq_proc_adic_p bigint ) FROM PUBLIC;

