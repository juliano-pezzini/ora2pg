-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE encerr_conta_lib_resu_exam ( nr_seq_prescr_p bigint, nr_seq_resultado_p text, nm_usuario_p text, ds_error_p INOUT text) AS $body$
DECLARE

 
nr_interno_conta_w	bigint;
nr_atendimento_w	bigint;
qt_aprovados_w		bigint := 99;
ds_error_w		varchar(255) := '';
ds_error_fim_atend_w	varchar(255) := '';
nr_seq_prescr_w		bigint;
nr_prescricao_w		bigint;
ie_exame_resultado_item_w varchar(1);

C01 CURSOR FOR 
	SELECT c.nr_interno_conta, 
		c.nr_atendimento 
	from 	exame_lab_result_item g, 
		exame_lab_resultado  f, 
		prescr_procedimento  e, 
		procedimento_paciente d, 
		conta_paciente    c 
	where 	f.nr_seq_resultado  		= g.nr_seq_resultado 
	and  	e.nr_sequencia    		= g.nr_seq_prescr 
	and  	e.nr_prescricao   		= f.nr_prescricao 
	and   e.ie_suspenso      	= 'N' 
	and  	d.nr_prescricao   		= f.nr_prescricao 
	and  	d.nr_sequencia_prescricao 	= e.nr_sequencia 
	and  	c.nr_interno_conta    	= d.nr_interno_conta 
	and  	g.nr_seq_prescr   		= nr_seq_prescr_p 
	and  	g.nr_seq_resultado  		= nr_seq_resultado_p 
	and   (g.nr_seq_material IS NOT NULL AND g.nr_seq_material::text <> '')	 
	and   exists (SELECT 1 
						from  atendimento_paciente x 
						where d.nr_atendimento      = x.nr_atendimento 
						and  x.ie_tipo_atendimento    = 7)	 
	order	by 1;

C02 CURSOR FOR 
	SELECT 	s.nr_sequencia, 
		t.nr_prescricao 
	from  	prescr_medica t, 
		prescr_procedimento s 
	where 	t.nr_atendimento = nr_atendimento_w 
	and  	t.nr_prescricao = s.nr_prescricao 
	order 	by 2;


BEGIN 
 
open C01;
loop 
fetch 	C01	into	 
	nr_interno_conta_w, 
	nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	CALL gravar_log_tasy( 
		82821, 
		WHEB_MENSAGEM_PCK.get_texto(298784,'NR_SEQ_PRESCR_P='||NR_SEQ_PRESCR_P||';NR_SEQ_RESULTADO_P='||NR_SEQ_RESULTADO_P||';NR_ATENDIMENTO_W='||NR_ATENDIMENTO_W||';NR_INTERNO_CONTA_W='||NR_INTERNO_CONTA_W), 
		nm_usuario_p);
		/*1 - Exames Pendentes - fechamento de conta. 
		nr_seq_prescr_p= #@NR_SEQ_PRESCR_P#@ 
		nr_seq_resultado_p= #@NR_SEQ_RESULTADO_P#@ 
		nr_atendimento_w= #@NR_ATENDIMENTO_W#@ 
		nr_interno_conta_w= #@NR_INTERNO_CONTA_W#@*/
 
	 
	if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
		begin 
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_prescr_w, 
			nr_prescricao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			--VERIFICA SE TODOS OS EXAMES DO ATENDIMENTO FORAM EXECUTADOS E EST√ÉO COM RESULTADOS 
			select 	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_exame_resultado_item_w 
			from  	exame_lab_result_item a, 
				exame_lab_resultado b 
			where 	b.nr_prescricao  = nr_prescricao_w 
			and  	a.nr_seq_prescr  = nr_seq_prescr_w 
			and  	a.nr_seq_resultado = b.nr_seq_resultado 
			and  	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '');
			 
			if (ie_exame_resultado_item_w <> 'S') then 
				exit;
			end if;
			end;
		end loop;
		close C02;
 
		if (ie_exame_resultado_item_w = 'S') then 
			begin 
			select	count(*) 
			into STRICT	qt_aprovados_w 
			from  conta_paciente g, 
				procedimento_paciente f, 
				prescr_procedimento e, 
				prescr_medica d, 
				exame_lab_resultado c, 
				exame_lab_result_item b 
			where  g.nr_atendimento  = nr_atendimento_w 
			and   g.nr_interno_conta = nr_interno_conta_w 
			and   f.nr_interno_conta = g.nr_interno_conta 
			and   f.nr_atendimento  = g.nr_atendimento 
			and   e.nr_prescricao   = f.nr_prescricao 
			and   e.nr_sequencia   = f.nr_sequencia_prescricao 
			and   e.ie_suspenso    = 'N' 
			and   d.nr_prescricao   = e.nr_prescricao 
			and   c.nr_prescricao   = d.nr_prescricao 
			and   b.nr_seq_resultado = c.nr_seq_resultado 
			and   coalesce(b.dt_aprovacao::text, '') = '' 
			and   (b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '') 
			and   exists (SELECT 1 
								from  atendimento_paciente x 
								where f.nr_atendimento      = x.nr_atendimento 
								and  x.ie_tipo_atendimento    = 7);
 
			CALL gravar_log_tasy( 
				8282, 
				WHEB_MENSAGEM_PCK.get_texto(298785,'QT_APROVADOS_W='||QT_APROVADOS_W||';NR_ATENDIMENTO_W='||NR_ATENDIMENTO_W||';NR_INTERNO_CONTA_W='||NR_INTERNO_CONTA_W), 
				nm_usuario_p);						
				/*2 - Exames Pendentes - fechamento de conta 
				qt_aprovados_w= #@QT_APROVADOS_W#@ 
				nr_atendimento_w= #@NR_ATENDIMENTO_W#@ 
				nr_interno_conta_w= #@NR_INTERNO_CONTA_W#@*/
 
								 
			if (qt_aprovados_w = 0) then 
				begin 
				CALL gravar_log_tasy( 
					8282, 
					WHEB_MENSAGEM_PCK.get_texto(298787,'QT_APROVADOS_W='||QT_APROVADOS_W||';NR_ATENDIMENTO_W='||NR_ATENDIMENTO_W||';NR_INTERNO_CONTA_W='||NR_INTERNO_CONTA_W), 
					nm_usuario_p);
				/*3 - Exames Pendentes - fechamento de conta 
				ie_aprovados_w= #@QT_APROVADOS_W#@ 
				nr_atendimento_w= #@NR_ATENDIMENTO_W#@ 
				nr_interno_conta_w= #@NR_INTERNO_CONTA_W#@*/
 
														 
				ds_error_w := fechar_conta_paciente(	nr_interno_conta_w, nr_atendimento_w, 2, nm_usuario_p, ds_error_w);
				ds_error_fim_atend_w := Finalizar_Atendimento(nr_atendimento_w, 'S', nm_usuario_p, ds_error_fim_atend_w);
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
end loop;
close C01;
if (ds_error_w IS NOT NULL AND ds_error_w::text <> '')	then 
	ds_error_p	:=	nr_interno_conta_w;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE encerr_conta_lib_resu_exam ( nr_seq_prescr_p bigint, nr_seq_resultado_p text, nm_usuario_p text, ds_error_p INOUT text) FROM PUBLIC;

