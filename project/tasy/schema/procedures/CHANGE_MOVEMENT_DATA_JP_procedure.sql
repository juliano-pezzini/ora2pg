-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE change_movement_data_jp ( nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, nr_seq_classif_esp_p classif_especial_paciente.nr_sequencia%TYPE, cd_depart_destino_p departamento_medico.cd_departamento%TYPE, cd_motivo_transfer_p motivo_transf_pac.nr_sequencia%TYPE, dt_transfer_p timestamp, ie_novo_registro_p text DEFAULT 'N') AS $body$
DECLARE


    nr_sequencia_w         atend_paciente_unidade.nr_sequencia%TYPE;
    nr_seq_interno_w       atend_paciente_unidade.nr_seq_interno%TYPE;
    cd_depart_original_w   atend_paciente_unidade.cd_departamento%TYPE;
    nr_seq_classif_esp_w   atendimento_paciente.nr_seq_classif_esp%TYPE;
    ie_gerar_clinical_notes_w varchar(1) := 'N';
    cd_departamento_w            atend_paciente_unidade.cd_setor_atendimento%type;
    cd_evolucao_w                evolucao_paciente.cd_evolucao%type;
    cd_pessoa_fisica_w           atendimento_paciente.cd_pessoa_fisica%type;
    ie_dept_transfer_w           clinical_note_settings.ie_med_rec_type%type := 'DEPT_TRANSFER';
    ie_soap_type_w               clinical_note_settings.ie_soap_type%type := 'P';
    ie_stage_w                   clinical_note_settings.ie_stage%type := 1;
    ie_cpoe_item_type_w          clinical_note_settings.ie_cpoe_item_type%type := null;
    ie_option_w                  clinical_note_settings.ie_cpoe_item_type%type := null;
	nr_seq_interno_new_w         atend_paciente_unidade.nr_seq_interno%TYPE;
	cd_exp_title_w               dic_expressao.cd_expressao%type := 1068391;

BEGIN
    nr_seq_classif_esp_w := nr_seq_classif_esp_p;
    IF ( coalesce(nr_seq_classif_esp_w::text, '') = '' ) THEN
        SELECT
            MAX(nr_seq_classif_esp)
        INTO STRICT nr_seq_classif_esp_w
        FROM
            atendimento_paciente
        WHERE
            nr_atendimento = nr_atendimento_p;

    END IF;
    SELECT
    MAX(cd_pessoa_fisica)
    INTO STRICT cd_pessoa_fisica_w
    FROM
    atendimento_paciente
    WHERE
    nr_atendimento = nr_atendimento_p;
    SELECT
        MAX(nr_sequencia),max(nr_seq_interno)
    INTO STRICT nr_sequencia_w,nr_seq_interno_w
    FROM
        atend_paciente_unidade
    WHERE
        nr_atendimento = nr_atendimento_p;

    IF (cd_depart_destino_p IS NOT NULL AND cd_depart_destino_p::text <> '') THEN
        SELECT
            cd_departamento,
            nr_seq_interno
        INTO STRICT
            cd_depart_original_w,
            nr_seq_interno_w
        FROM
            atend_paciente_unidade
        WHERE
            nr_atendimento = nr_atendimento_p
            AND nr_sequencia = nr_sequencia_w;

        INSERT INTO transf_departamento_medico(
            nr_sequencia,
            dt_atualizacao,
            nm_usuario,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            dt_transferencia,
            nr_atendimento,
            nr_atend_paciente_unidade,
            cd_depart_destino,
            cd_depart_origem,
            cd_motivo_transf
        ) VALUES (
            nextval('transf_departamento_medico_seq'),
            clock_timestamp(),
            wheb_usuario_pck.get_nm_usuario,
            clock_timestamp(),
            wheb_usuario_pck.get_nm_usuario,
            dt_transfer_p,
            nr_atendimento_p,
            nr_seq_interno_w,
            cd_depart_destino_p,
            cd_depart_original_w,
            cd_motivo_transfer_p
        );

    END IF;

    IF (nr_seq_classif_esp_w IS NOT NULL AND nr_seq_classif_esp_w::text <> '') THEN
        CALL atualizar_classif_especial(nr_seq_classif_esp_w, nr_atendimento_p);
    END IF;
    IF ( ie_novo_registro_p = 'S' ) THEN
        UPDATE atend_paciente_unidade
        SET
            dt_saida_unidade = clock_timestamp()
        WHERE
            nr_atendimento = nr_atendimento_p
            AND nr_sequencia = nr_sequencia_w;

		select nextval('atend_paciente_unidade_seq')
        into STRICT nr_seq_interno_new_w;

        INSERT INTO atend_paciente_unidade(
            nr_atendimento,
            nr_sequencia,
            cd_setor_atendimento,
            cd_unidade_basica,
            cd_unidade_compl,
            dt_entrada_unidade,
            dt_atualizacao,
            nm_usuario,
            nr_atend_dia,
            ds_observacao,
            nm_usuario_original,
            ie_passagem_setor,
            nr_acompanhante,
            nr_seq_interno,
            ie_calcular_dif_diaria,
            nr_seq_motivo_transf,
            dt_entrada_real,
            nm_usuario_real,
            ie_radiacao,
            nr_seq_motivo_dif,
            nr_seq_mot_dif_diaria,
            cd_unidade_externa,
            dt_alta_medico_setor,
            cd_motivo_alta_setor,
            cd_procedencia_setor,
            nr_seq_motivo_int,
            nr_seq_motivo_int_sub,
            nr_seq_motivo_perm,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            nr_cirurgia,
            nr_seq_pepo,
            nr_seq_agrupamento,
            cd_tipo_acomodacao,
            qt_tempo_prev,
            nr_seq_unid_ant,
            id_leito_temp_cross,
            cd_departamento,
            cd_procedencia_atend,
            nr_seq_classif_esp
        )
            SELECT
                nr_atendimento_p,
                nr_sequencia_w + 1,
                cd_setor_atendimento,
                cd_unidade_basica,
                cd_unidade_compl,
                clock_timestamp(),
                clock_timestamp(),
                wheb_usuario_pck.get_nm_usuario,
                nr_atend_dia,
                ds_observacao,
                nm_usuario_original,
                ie_passagem_setor,
                nr_acompanhante,
                nr_seq_interno_new_w,
                ie_calcular_dif_diaria,
                nr_seq_motivo_transf,
                clock_timestamp(),
                wheb_usuario_pck.get_nm_usuario,
                ie_radiacao,
                nr_seq_motivo_dif,
                nr_seq_mot_dif_diaria,
                cd_unidade_externa,
                dt_alta_medico_setor,
                cd_motivo_alta_setor,
                cd_procedencia_setor,
                nr_seq_motivo_int,
                nr_seq_motivo_int_sub,
                nr_seq_motivo_perm,
                clock_timestamp(),
                wheb_usuario_pck.get_nm_usuario,
                nr_cirurgia,
                nr_seq_pepo,
                nr_seq_agrupamento,
                cd_tipo_acomodacao,
                qt_tempo_prev,
                nr_seq_unid_ant,
                id_leito_temp_cross,
                coalesce(cd_depart_destino_p, cd_departamento),
                cd_procedencia_atend,
                coalesce(nr_seq_classif_esp_w, nr_seq_classif_esp)
            FROM
                atend_paciente_unidade
            WHERE
                nr_atendimento = nr_atendimento_p
                AND nr_sequencia = nr_sequencia_w;

    ELSE
        UPDATE atend_paciente_unidade
        SET
            nr_seq_classif_esp = coalesce(nr_seq_classif_esp_w, nr_seq_classif_esp),
            cd_departamento = coalesce(cd_depart_destino_p, cd_departamento)
        WHERE
            nr_atendimento = nr_atendimento_p
            AND nr_sequencia = nr_sequencia_w;

    END IF;

	ie_gerar_clinical_notes_w := obter_param_usuario(281, 1596, Obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_gerar_clinical_notes_w);
	if (ie_gerar_clinical_notes_w = 'S' and coalesce(pkg_i18n.get_user_locale, 'pt_BR')='ja_JP') then
        begin
		select max(cd_evolucao)
		into STRICT cd_evolucao_w
		from atend_paciente_unidade where nr_seq_interno=nr_seq_interno_w;
                if (ie_novo_registro_p = 'S') then
                cd_evolucao_w := clinical_notes_pck.gerar_soap(nr_atendimento_p, nr_seq_interno_new_w, ie_dept_transfer_w, ie_cpoe_item_type_w, ie_soap_type_w, ie_stage_w, cd_evolucao_w, ie_option_w, cd_pessoa_fisica_w, cd_exp_title_w);
                update atend_paciente_unidade
                set cd_evolucao = cd_evolucao_w
                where nr_seq_interno = nr_seq_interno_new_w;
                else
                if (coalesce(cd_evolucao_w,0) > 0) then
                CALL clinical_notes_pck.soap_data_after_delete(cd_evolucao_w,cd_exp_title_w);
                end if;
                end if;
        exception
        when others then
        null;
        end;
    end if;

    COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE change_movement_data_jp ( nr_atendimento_p atendimento_paciente.nr_atendimento%TYPE, nr_seq_classif_esp_p classif_especial_paciente.nr_sequencia%TYPE, cd_depart_destino_p departamento_medico.cd_departamento%TYPE, cd_motivo_transfer_p motivo_transf_pac.nr_sequencia%TYPE, dt_transfer_p timestamp, ie_novo_registro_p text DEFAULT 'N') FROM PUBLIC;

