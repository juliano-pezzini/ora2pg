-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE autorizar_laudo_paciente ( nr_sequencia_p bigint, ie_tipo_p bigint, ie_forma_aprovacao_p text, qt_caracteres_p bigint, nm_usuario_aprov_p text, nr_seq_prescr_proc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_arquivo_p INOUT text) AS $body$
DECLARE

					 
pede_senha_w			varchar(1) := 'N';
dir_salvar_laudo_w			varchar(1) := '';
alterar_medico_exec_conta_w	varchar(1) := 'N';
alt_medico_exec_conta_seg_et_w	varchar(1) := 'N';
alterar_medico_conta_w		varchar(1) := 'N';
nm_usuario_w			varchar(60);
ds_arquivo_w			varchar(255) := '';
copia_laudo_ant_desaprovar_w	varchar(1) := 'N';
					

BEGIN 
 
pede_senha_w := obter_param_usuario(28, 39, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, pede_senha_w);
copia_laudo_ant_desaprovar_w := obter_param_usuario(28, 197, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, copia_laudo_ant_desaprovar_w);
 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (qt_caracteres_p IS NOT NULL AND qt_caracteres_p::text <> '') then 
	begin 
		 
	nm_usuario_w := coalesce(nm_usuario_aprov_p, nm_usuario_p);
	 
	if (ie_tipo_p = 2) and (copia_laudo_ant_desaprovar_w = 'S') then 
		begin 
		CALL gerar_copia_laudo_java(nr_sequencia_p,nm_usuario_w,'');
		end;
	end if;
	 
	 
	CALL autorizacao_laudo(nr_sequencia_p,ie_tipo_p,ie_forma_aprovacao_p,qt_caracteres_p,nm_usuario_w);	
	 
	dir_salvar_laudo_w := obter_param_usuario(28, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, dir_salvar_laudo_w);
	 
	if	((ie_tipo_p = 0) or (ie_tipo_p = 1)) and (dir_salvar_laudo_w <> '') then 
		begin 
		 
		select	max(ds_arquivo) 
		into STRICT	ds_arquivo_w 
		from	prescr_proc_ditado 
		where	nr_seq_prescr_proc = nr_seq_prescr_proc_p;		
		end;
	end if;
	 
	if (ie_tipo_p = 2) and (copia_laudo_ant_desaprovar_w <> 'S') then 
		begin 
		CALL gerar_copia_laudo_java(nr_sequencia_p,nm_usuario_w,'');
		end;
	end if;
	 
	alterar_medico_conta_w := obter_param_usuario(28, 101, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, alterar_medico_conta_w);
	alterar_medico_exec_conta_w := obter_param_usuario(28, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, alterar_medico_exec_conta_w);
	alt_medico_exec_conta_seg_et_w := obter_param_usuario(28, 137, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, alt_medico_exec_conta_seg_et_w);
	 
	if (alterar_medico_exec_conta_w = 'S') or 
		(alt_medico_exec_conta_seg_et_w = 'T' AND ie_tipo_p = 0) or 
		(alt_medico_exec_conta_seg_et_w = 'S' AND ie_tipo_p = 1) then 
		begin 
		CALL atualizar_propaci_medico_laudo(nr_sequencia_p,'EXC',nm_usuario_p);
		end;
	end if;
	 
	if (alterar_medico_conta_w = 'A') and (ie_tipo_p= 0) then 
		begin 
		CALL atualizar_propaci_medico_laudo(nr_sequencia_p,'EX',nm_usuario_p);
		end;
	end if;
		 
	 
	end;
end if;
 
ds_arquivo_p:= ds_arquivo_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE autorizar_laudo_paciente ( nr_sequencia_p bigint, ie_tipo_p bigint, ie_forma_aprovacao_p text, qt_caracteres_p bigint, nm_usuario_aprov_p text, nr_seq_prescr_proc_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_arquivo_p INOUT text) FROM PUBLIC;

