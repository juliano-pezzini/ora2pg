-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_referencia_convenio (DT_PARAMETRO_P timestamp, CD_ESTABELECIMENTO_P text default null) AS $body$
DECLARE

dt_atualizacao_w			timestamp		:= clock_timestamp();
cd_convenio_w			integer;
dt_dia_vcto_w			smallint;
dt_ref_valida_w			timestamp;
qt_dias_tolerancia_w		smallint;
dt_virada_w				timestamp;
qt_dia_w				smallint;
ie_calendario_w			varchar(1);
qt_reg_tipo_protocolo_w		bigint;
qt_regra_w			bigint;
ie_tipo_protocolo_w		varchar(03);
ie_regra_dia_w			varchar(01);
ie_dia_w			varchar(01);
dt_dia_entrega_w		bigint;
dt_entrega_w			timestamp;
cd_estabelecimento_w		smallint;
ie_update_tabela_w 		varchar(30);

C01 CURSOR FOR
	SELECT	a.cd_convenio,
             	coalesce(CASE WHEN coalesce(a.ie_venc_ultimo_dia,'N')='S' THEN		PKG_DATE_UTILS.extract_field('DAY', PKG_DATE_UTILS.END_OF(dt_parametro_p,'MONTH', 0))  ELSE a.dt_dia_vencimento END , 
		PKG_DATE_UTILS.extract_field('DAY', dt_parametro_p) + 1),
             	PKG_DATE_UTILS.start_of(coalesce(a.dt_ref_valida, PKG_DATE_UTILS.ADD_MONTH(clock_timestamp(),-1,0)),'dd',0),
			coalesce(a.qt_dias_tolerancia,0)
	from		convenio a
	where 	a.ie_situacao	= 'A'
	and		trunc(dt_parametro_p,'mi') > PKG_DATE_UTILS.start_of((coalesce(a.dt_ref_valida, PKG_DATE_UTILS.ADD_MONTH(clock_timestamp(),-1,0)) + 
			(coalesce(a.qt_dias_tolerancia,0) + 1)), 'dd', 0);
			
			
C03 CURSOR FOR
    SELECT	a.cd_convenio,
            a.dt_dia_entrega,
            PKG_DATE_UTILS.start_of(coalesce(a.dt_entrega_prot, clock_timestamp() - interval '30 days'), 'dd', 0),
            'convenio_estabelecimento'
	from	convenio_estabelecimento a
	where (dt_dia_entrega IS NOT NULL AND dt_dia_entrega::text <> '')
	and	dt_parametro_p + 1/1440 > (coalesce(a.dt_entrega_prot, clock_timestamp() - interval '30 days') + coalesce(a.qt_dias_tol_entrega,0))
    
union all

    SELECT	a.cd_convenio,
            a.dt_dia_entrega, 
            PKG_DATE_UTILS.start_of(coalesce(a.dt_entrega_prot, clock_timestamp() - interval '30 days'), 'dd', 0),
            'convenio'
	from	convenio a
	where a.ie_situacao = 'A'
	and	(dt_dia_entrega IS NOT NULL AND dt_dia_entrega::text <> '')
    	and	dt_parametro_p + 1/1440 > (coalesce(a.dt_entrega_prot, clock_timestamp() - interval '30 days') + coalesce(a.qt_dias_tol_entrega,0))
    	and not exists( select	b.cd_convenio
                    from	convenio_estabelecimento b
                    where (b.dt_dia_entrega IS NOT NULL AND b.dt_dia_entrega::text <> '')
                    and	clock_timestamp() + interval '1 days'/1440 > (coalesce(b.dt_entrega_prot, clock_timestamp() - interval '30 days') + coalesce(b.qt_dias_tol_entrega,0))
                    and a.cd_convenio = b.cd_convenio);

c02 CURSOR FOR
	SELECT	vl_dominio /* Tipo de protocolo */
	from	valor_dominio
	where	cd_dominio	= 73;


BEGIN

if (cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then
    cd_estabelecimento_w := cd_estabelecimento_p;
else
    select 	coalesce(max(wheb_usuario_pck.get_cd_estabelecimento),1)
    into STRICT	cd_estabelecimento_w
;
end if;

OPEN C01;
LOOP
	FETCH C01 into
		cd_convenio_w,
		dt_dia_vcto_w,
		dt_ref_valida_w,
		qt_dias_tolerancia_w;
      EXIT WHEN NOT FOUND; /* apply on C01 */
      BEGIN

	begin
	dt_virada_w := null;
	select 	min(a.dt_fechamento),
		min(a.ie_regra_dia)
	into STRICT	dt_virada_w,
		ie_regra_dia_w
	from	convenio_fechamento a
	where	a.cd_convenio		= cd_convenio_w
	and	a.dt_fechamento		> dt_parametro_p
	and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and	coalesce(a.ie_tipo_protocolo::text, '') = '';
	exception
    		when others then
      		dt_virada_w := null;
	end;

	if (coalesce(dt_virada_w::text, '') = '')	then
		begin
		begin
		select 	min(qt_dia),
			min(a.ie_regra_dia)
		into STRICT	qt_dia_w,
			ie_regra_dia_w
		from	convenio_fechamento a
		where	a.cd_convenio	= cd_convenio_w
		and	coalesce(a.qt_dia,0)	> PKG_DATE_UTILS.extract_field('DAY', dt_parametro_p)
		and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
		and	coalesce(a.ie_tipo_protocolo::text, '') = '';
		exception
			when others then
				qt_dia_w := null;
		end;
		if (coalesce(qt_dia_w::text, '') = '') then	
			begin
			select 	min(qt_dia),
				min(ie_regra_dia)
			into STRICT	qt_dia_w,
				ie_regra_dia_w
			from	convenio_fechamento a
			where	a.cd_convenio	= cd_convenio_w
			and	(a.qt_dia IS NOT NULL AND a.qt_dia::text <> '')
			and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
			and	coalesce(a.ie_tipo_protocolo::text, '') = '';
			exception
				when others then
    					qt_dia_w := null;
			end;
		end if;
		dt_dia_vcto_w	:= coalesce(qt_dia_w,dt_dia_vcto_w);
		if (coalesce(dt_dia_vcto_w::text, '') = '') or (dt_dia_vcto_w < 1) or (dt_dia_vcto_w > 31) then
			dt_dia_vcto_w	:= 31;
		end if;
		end;
	end if;

	if (coalesce(dt_virada_w::text, '') = '') then
		begin
		if (dt_dia_vcto_w <= PKG_DATE_UTILS.extract_field('DAY', dt_parametro_p)) then
			dt_virada_w       := PKG_DATE_UTILS.ADD_MONTH(dt_parametro_p,1,0);
		else
			dt_virada_w       := dt_parametro_p;
      		end if;

		if (dt_dia_vcto_w = 31) then
				dt_virada_w := PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0);
      elsif (dt_dia_vcto_w > PKG_DATE_UTILS.extract_field('DAY', PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0))) and (PKG_DATE_UTILS.extract_field('MONTH', dt_virada_w) = 2) then
					dt_virada_w := PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0);
		else
		        	dt_virada_w := PKG_DATE_UTILS.get_Date(PKG_DATE_UTILS.extract_field('YEAR', dt_virada_w), PKG_DATE_UTILS.extract_field('MONTH', dt_virada_w), dt_dia_vcto_w);
		end if;
		end;
	end if;

	select	pkg_date_utils.get_WeekDay(dt_virada_w)
	into STRICT	ie_dia_w
	;
			
			
	if (ie_regra_dia_w	= 'A') then
		begin
		if (ie_dia_w = '1') then
			dt_virada_w	:= dt_virada_w - 2;
		elsif (ie_dia_w = '7') then
			dt_virada_w	:= dt_virada_w - 1;
		end if;
		end;
	elsif (ie_regra_dia_w	= 'P') then
		begin
		if (ie_dia_w = '1') then
			dt_virada_w	:= dt_virada_w + 1;
		elsif (ie_dia_w = '7') then
			dt_virada_w	:= dt_virada_w + 2;
		end if;
		end;
	end if;
	
	update 	convenio
	set		dt_ref_valida = PKG_DATE_UTILS.start_of(dt_virada_w, 'dd', 0)
	where		cd_convenio	= cd_convenio_w;
	commit;

	/* Inicio da rotina para tratamento de regras por tipo de protocolo */

	open	c02;
	loop
	fetch	c02 into
		ie_tipo_protocolo_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	count(*)
		into STRICT	qt_reg_tipo_protocolo_w
		from	convenio_fechamento a
		where	a.cd_convenio		= cd_convenio_w
		and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
		and	a.ie_tipo_protocolo	= ie_tipo_protocolo_w;	

		if (qt_reg_tipo_protocolo_w > 0) then
			begin
			dt_virada_w := null;
			select 		min(a.dt_fechamento),
					min(a.ie_regra_dia)
			into STRICT		dt_virada_w,
					ie_regra_dia_w
			from		convenio_fechamento a
			where		a.cd_convenio		= cd_convenio_w
			and		a.dt_fechamento		> dt_parametro_p
			and 		coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
			and		a.ie_tipo_protocolo	= ie_tipo_protocolo_w;
			exception
    				when others then
	      			dt_virada_w := null;
			end;

			if (coalesce(dt_virada_w::text, '') = '')	then
				begin
				begin
				select 	min(qt_dia),
					min(ie_regra_dia)
				into STRICT		qt_dia_w,
						ie_regra_dia_w
				from		convenio_fechamento a
				where		a.cd_convenio	= cd_convenio_w
				and		coalesce(a.qt_dia,0)	> PKG_DATE_UTILS.extract_field('DAY', dt_parametro_p)
				and 		coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
				and		a.ie_tipo_protocolo	= ie_tipo_protocolo_w;
				exception
					when others then
						qt_dia_w := null;
				end;
				if (coalesce(qt_dia_w::text, '') = '') then	
					begin
					select 	min(qt_dia),
						min(ie_regra_dia)
					into STRICT		qt_dia_w,
							ie_regra_dia_w
					from		convenio_fechamento a
					where		a.cd_convenio	= cd_convenio_w
					and		(a.qt_dia IS NOT NULL AND a.qt_dia::text <> '')
					and 		coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
					and		a.ie_tipo_protocolo	= ie_tipo_protocolo_w;
					exception
					when others then
    							qt_dia_w := null;
					end;
				end if;
				dt_dia_vcto_w	:= coalesce(qt_dia_w,dt_dia_vcto_w);
				if (coalesce(dt_dia_vcto_w::text, '') = '') or (dt_dia_vcto_w < 1) or (dt_dia_vcto_w > 31) then
					dt_dia_vcto_w	:= 31;
				end if;
				end;
			end if;
	
			if (coalesce(dt_virada_w::text, '') = '') then
				begin
				if (dt_dia_vcto_w <= PKG_DATE_UTILS.extract_field('DAY', dt_parametro_p)) then
					dt_virada_w       := PKG_DATE_UTILS.ADD_MONTH(dt_parametro_p,1,0);
				else
					dt_virada_w       := dt_parametro_p;
	      	end if;
	
				if (dt_dia_vcto_w = 31) then
						dt_virada_w := PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0);
	      	elsif (dt_dia_vcto_w > PKG_DATE_UTILS.extract_field('DAY', PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0))) and (PKG_DATE_UTILS.extract_field('MONTH', dt_virada_w) = 2) then
							dt_virada_w := PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0);
				else
				      	dt_virada_w := PKG_DATE_UTILS.get_Date(PKG_DATE_UTILS.extract_field('YEAR', dt_virada_w), PKG_DATE_UTILS.extract_field('MONTH', dt_virada_w), dt_dia_vcto_w);
				end if;	
				end;
			end if;

		select	pkg_date_utils.get_WeekDay(dt_virada_w)
		into STRICT	ie_dia_w
		;
			
			
		if (ie_regra_dia_w	= 'A') then
			begin
			if (ie_dia_w = '1') then
				dt_virada_w	:= dt_virada_w - 2;
			elsif (ie_dia_w = '7') then
				dt_virada_w	:= dt_virada_w - 1;
			end if;
			end;
		elsif (ie_regra_dia_w	= 'P') then
			begin
			if (ie_dia_w = '1') then
				dt_virada_w	:= dt_virada_w + 1;
			elsif (ie_dia_w = '7') then
				dt_virada_w	:= dt_virada_w + 2;
			end if;
			end;
		end if;
			
		select	count(*)
		into STRICT	qt_regra_w
		from	conv_fechamento_tipo_prot
		where	cd_convenio		= cd_convenio_w
		and	ie_tipo_protocolo	= ie_tipo_protocolo_w;

		if (qt_regra_w > 0) then
			update 	conv_fechamento_tipo_prot
			set	dt_ref_valida		= PKG_DATE_UTILS.start_of(dt_virada_w, 'dd', 0)
			where	cd_convenio		= cd_convenio_w
			and	ie_tipo_protocolo	= ie_tipo_protocolo_w;
		else
			insert into conv_fechamento_tipo_prot(NR_SEQUENCIA          ,
				CD_CONVENIO            ,
				IE_TIPO_PROTOCOLO      ,
				DT_REF_VALIDA          ,
				DT_ATUALIZACAO         ,
				NM_USUARIO             ,
				DT_ATUALIZACAO_NREC    ,
				NM_USUARIO_NREC        )
			values (nextval('conv_fechamento_tipo_prot_seq'),
				cd_convenio_w,
				ie_tipo_protocolo_w,
				PKG_DATE_UTILS.start_of(dt_virada_w, 'dd', 0),
				clock_timestamp(),
				'Job',
				clock_timestamp(),
				'Job');
		end if;


		end if;

		commit;

		end;
		end loop;
		close c02;
	end;
END LOOP;
CLOSE C01;

/*Rotina de atualizacao da Data de Entrega dos protocolos*/

open C03;
loop
fetch C03 into	
	cd_convenio_w,
	dt_dia_entrega_w,
	dt_entrega_w,
   	ie_update_tabela_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	cd_convenio_w:=cd_convenio_w;
	ie_regra_dia_w:= 'M';
		
	/* Inicio Rotina para convenio com mais de 1 data de entrega no mes*/

	dt_virada_w := null;
	begin
	select 	min(a.dt_entrega),
		min(a.ie_regra_dia)
	into STRICT	dt_virada_w,
		ie_regra_dia_w
	from	convenio_regra_entrega a
	where	a.cd_convenio		= cd_convenio_w
	and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and	a.dt_entrega		> dt_parametro_p;
	exception
    		when others then
      		dt_virada_w := null;
	end;

	if (coalesce(dt_virada_w::text, '') = '')	then
		begin
		begin
		select 	min(qt_dia),
			min(a.ie_regra_dia)
		into STRICT	qt_dia_w,
			ie_regra_dia_w
		from	convenio_regra_entrega a
		where	a.cd_convenio	= cd_convenio_w
		and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
		and	coalesce(a.qt_dia,0)	> PKG_DATE_UTILS.extract_field('DAY', dt_parametro_p);
		exception
			when others then
				qt_dia_w := null;
		end;
		if (coalesce(qt_dia_w::text, '') = '') then	
			begin
			select 	min(qt_dia),
				min(a.ie_regra_dia)
			into STRICT	qt_dia_w,
				ie_regra_dia_w
			from	convenio_regra_entrega a
			where	a.cd_convenio	= cd_convenio_w
			and 	coalesce(a.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
			and	(a.qt_dia IS NOT NULL AND a.qt_dia::text <> '');
			exception
				when others then
    					qt_dia_w := null;
			end;
		end if;
		dt_dia_entrega_w:= coalesce(qt_dia_w,dt_dia_entrega_w);
		if (coalesce(dt_dia_entrega_w::text, '') = '') or (dt_dia_entrega_w < 1) or (dt_dia_entrega_w > 31) then
			dt_dia_entrega_w:= 31;
		end if;
		end;
	end if;
	/* Fim Rotina para convenio com mais de 1 data de entrega no mes*/


	

	--dt_virada_w	:=  null;
	if (coalesce(dt_virada_w::text, '') = '') then
		begin
		if (dt_dia_entrega_w <= PKG_DATE_UTILS.extract_field('DAY', dt_parametro_p)) then
			dt_virada_w       := PKG_DATE_UTILS.ADD_MONTH(dt_parametro_p,1,0);
		else
			dt_virada_w       := dt_parametro_p;
      		end if;

		if (dt_dia_entrega_w = 31) then
				dt_virada_w := PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0);
		elsif (dt_dia_entrega_w > PKG_DATE_UTILS.extract_field('DAY', PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0))) and (PKG_DATE_UTILS.extract_field('MONTH', dt_virada_w) = 2) then
					dt_virada_w := PKG_DATE_UTILS.END_OF(dt_virada_w, 'MONTH', 0);
		else
		        	dt_virada_w := PKG_DATE_UTILS.get_Date(PKG_DATE_UTILS.extract_field('YEAR', dt_virada_w), PKG_DATE_UTILS.extract_field('MONTH', dt_virada_w), dt_dia_entrega_w);
		end if;
		end;
	end if;
	
	select	pkg_date_utils.get_WeekDay(dt_virada_w)
	into STRICT	ie_dia_w
	;			
			
	if (coalesce(ie_regra_dia_w,'M') = 'A') then
		begin
		if (ie_dia_w = '1') then
			dt_virada_w	:= dt_virada_w - 2;
		elsif (ie_dia_w = '7') then
			dt_virada_w	:= dt_virada_w - 1;
		end if;
		end;
	elsif (coalesce(ie_regra_dia_w,'M') = 'P') then
		begin
		if (ie_dia_w = '1') then
			dt_virada_w	:= dt_virada_w + 1;
		elsif (ie_dia_w = '7') then
			dt_virada_w	:= dt_virada_w + 2;
		end if;
		end;
	end if;
	
    if (ie_update_tabela_w like 'convenio_estabelecimento') then
        update	convenio_estabelecimento
        set	dt_entrega_prot	   = dt_virada_w
        where cd_convenio	   = cd_convenio_w
        and cd_estabelecimento = coalesce(cd_estabelecimento_p, cd_estabelecimento);
    else
        update convenio
        set	dt_entrega_prot	= dt_virada_w
        where  cd_convenio	= cd_convenio_w;
    end if;

	end;
end loop;
close C03;


COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_referencia_convenio (DT_PARAMETRO_P timestamp, CD_ESTABELECIMENTO_P text default null) FROM PUBLIC;

