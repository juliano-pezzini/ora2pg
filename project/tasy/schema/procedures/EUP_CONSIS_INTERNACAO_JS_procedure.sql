-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_consis_internacao_js ( cd_medico_atendimento_p text, ie_medico_ciente_p text, nr_gestao_vaga_chamada_p bigint, ie_manter_setor_origem_p text, cd_setor_usuario_p bigint, nr_seq_regra_funcao_p bigint, nr_seq_regra_atual_p bigint, ie_tipo_atendimento_p bigint, nr_seq_classif_medico_p bigint, nr_seq_grau_parentesco_p bigint, ie_responsavel_p text, cd_motivo_alta_p bigint, cd_tipo_acomodacao_p bigint, ie_atend_tiss_p bigint, ie_gerar_alta_atend_p text, nr_seq_classificacao_p bigint, ie_carater_inter_sus_p text, cd_procedencia_p bigint, ie_atend_novo_p text, cd_responsavel_p text, cd_medico_resp_p text, ie_apos_int_p text, ie_clinica_p bigint, nr_doc_convenio_p text, cd_unidade_compl_p text, cd_unidade_basica_p text, nr_seq_interno_p bigint, cd_pessoa_fisica_p text, cd_setor_p bigint, nr_classificacao_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, dt_internacao_p timestamp, ie_internacao_bpa_p text, dt_ving_ini_p timestamp, dt_ving_fim_p timestamp, qt_dia_int_p bigint, nm_usuario_p text, nr_atend_bpa_novo_p INOUT bigint, NR_NOVO_ATEND_P INOUT bigint, ds_erro_fecha_conta_p INOUT text, ds_msg_vinc_atend_p INOUT text, nr_seq_age_p INOUT bigint, ds_msg_leito_radio_p INOUT text, ie_gerar_gv_internacao_p INOUT text, ie_permit_esp_p INOUT text, ds_msg_esp_quest_p INOUT text, ie_regime_internacao_p text default null, nr_seq_tipo_episodio_p bigint default null, nr_seq_tipo_admissao_fat_p bigint default null, nr_seq_queixa_p bigint default null, cd_departamento_medico_p bigint default null) AS $body$
DECLARE


ie_obriga_classificacao_w	varchar(3);
ie_considerar_prescr_w		varchar(1);
ie_prescricao_w			varchar(10);
ie_permite_troca_leito_w	varchar(1);
ie_necessita_vaga_w		varchar(1);
nr_seq_vaga_w			bigint;
cd_setor_internacao_w		integer;
cd_setor_internar_w		integer;
cd_unid_basica_internacao_w	varchar(10);
cd_unid_compl_internacao_w	varchar(10);
nr_seq_vaga_acomodado_w		bigint;
cd_motivo_cancel_padrao_w	bigint;
ie_tipo_guia_w			varchar(3);
ie_obriga_classif_medico_w	varchar(1);
ie_obriga_tiss_w		varchar(1);
dt_entrada_unidade_w		timestamp;
cd_setor_anterior_w		integer;
cd_classif_setor_w		varchar(2);
ie_classif_setor_w		varchar(255);
ie_classif_contida_w		varchar(1) := 'N';
ie_considera_regra_atual_w	varchar(1);
nr_seq_regra_funcao_w		bigint;
ds_msg_consiste_clinica_w	varchar(255);
ie_tipo_atend_age_cir_w		varchar(255);
ds_msg_vinc_atend_w		varchar(255);
nr_seq_age_w			agenda_paciente.nr_sequencia%type;
ie_leito_radio_w		varchar(1);
ie_atualiza_status_gv_w		varchar(1);
ie_permite_escolher_esp_w	varchar(3);



BEGIN

ie_gerar_gv_internacao_p := 'N';

ie_tipo_guia_w := obter_param_usuario(916, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tipo_guia_w);
ie_obriga_classif_medico_w := obter_param_usuario(916, 237, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_classif_medico_w);
ie_considera_regra_atual_w := obter_param_usuario(916, 403, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_considera_regra_atual_w);
ie_considerar_prescr_w := obter_param_usuario(916, 490, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_considerar_prescr_w);
ie_atualiza_status_gv_w := obter_param_usuario(916, 555, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_status_gv_w);
ie_classif_setor_w := obter_param_usuario(916, 576, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_classif_setor_w);
ie_obriga_classificacao_w := obter_param_usuario(916, 580, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_classificacao_w);
ie_permite_troca_leito_w := obter_param_usuario(916, 588, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_troca_leito_w);
cd_motivo_cancel_padrao_w := obter_param_usuario(916, 596, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_motivo_cancel_padrao_w);
ie_obriga_tiss_w := obter_param_usuario(916, 636, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_tiss_w);
ie_tipo_atend_age_cir_w := obter_param_usuario(916, 736, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tipo_atend_age_cir_w);
ie_permite_escolher_esp_w := Obter_param_Usuario(916, 909, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_escolher_esp_w);

cd_setor_internacao_w := cd_setor_p;
cd_unid_basica_internacao_w := cd_unidade_basica_p;
cd_unid_compl_internacao_w := cd_unidade_compl_p;

SELECT * FROM permite_escol_esp_medico_js(nr_atendimento_p, 'I', ie_permite_escolher_esp_w, cd_medico_resp_p, nm_usuario_p, ds_msg_esp_quest_p, ie_permit_esp_p) INTO STRICT ds_msg_esp_quest_p, ie_permit_esp_p;

IF (ie_permite_troca_leito_w <> 'S')  AND (coalesce(cd_setor_p,0) > 0) THEN
	ie_necessita_vaga_w := 'S';
ELSE
	ie_necessita_vaga_w := 'N';
END IF;

IF (ie_necessita_vaga_w = 'S') THEN

	nr_seq_vaga_w := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'V','L','PS',nr_atendimento_p);
	IF (coalesce(nr_seq_vaga_w,0) > 0) THEN

		cd_setor_internacao_w := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'S','L','PS',nr_atendimento_p);
		cd_unid_basica_internacao_w := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'UB','L','PS',nr_atendimento_p);
		cd_unid_compl_internacao_w := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'UC','L','PS',nr_atendimento_p);
		CALL atualizar_registro_pac_gv(nr_seq_vaga_w, nr_atendimento_p, nm_usuario_p, 'L');
	ELSE
		nr_seq_vaga_acomodado_w := obter_se_leito_livre_reservado(cd_pessoa_fisica_p,'V','AB','PS',nr_atendimento_p);
		IF (coalesce(nr_seq_vaga_acomodado_w,0) > 0) THEN
			CALL cancelar_gv_internacao(coalesce(cd_motivo_cancel_padrao_w,0), nr_seq_vaga_acomodado_w);
		END IF;
		ie_gerar_gv_internacao_p := 'S';
	END IF;
END IF;


IF (ie_internacao_bpa_p = 'S') THEN
	IF (coalesce(dt_internacao_p::text, '') = '') THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(89320);
	END IF;

	IF	((ie_obriga_classificacao_w = 'I') OR (ie_obriga_classificacao_w = 'A')) AND (coalesce(nr_classificacao_p,0) = 0) THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(89453);
	END IF;

	IF (ie_considerar_prescr_w = 'S') THEN
		ie_prescricao_w := obter_se_interna_prescr(nr_atendimento_p);
		IF (ie_prescricao_w IS NOT  NULL) THEN
			CALL wheb_mensagem_pck.exibir_mensagem_abort(318133, 'NR_PRESCRICOES='||ie_prescricao_w);
		END IF;
	END IF;
	nr_atend_bpa_novo_p := duplicar_atend_bpa_aih(nr_atendimento_p, nr_seq_interno_p, ie_tipo_guia_w, dt_internacao_p, cd_setor_internacao_w, cd_unid_basica_internacao_w, cd_unid_compl_internacao_w, nr_doc_convenio_p, ie_clinica_p, nm_usuario_p, ie_apos_int_p, cd_medico_resp_p, cd_responsavel_p, ie_atend_novo_p, cd_procedencia_p, cd_estabelecimento_p, nr_atend_bpa_novo_p, ie_carater_inter_sus_p, nr_seq_classificacao_p, ie_gerar_alta_atend_p, ie_atend_tiss_p, cd_tipo_acomodacao_p, cd_motivo_alta_p, ie_responsavel_p, nr_seq_grau_parentesco_p, nr_seq_classif_medico_p, dt_ving_ini_p, dt_ving_fim_p, qt_dia_int_p, ie_regime_internacao_p);

ELSE

	SELECT	MAX(dt_entrada_unidade)
	INTO STRICT	dt_entrada_unidade_w
	FROM 	atend_paciente_unidade
	WHERE  	nr_atendimento = nr_atendimento_p;

	IF (ie_obriga_classif_medico_w = 'S') AND (coalesce(nr_seq_classif_medico_p,0) = 0) THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(89452);
	END IF;
	IF	((ie_obriga_classificacao_w = 'S') OR (ie_obriga_classificacao_w = 'A')) AND (coalesce(nr_classificacao_p,0) = 0) THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(89453);
	END IF;
	IF (ie_obriga_tiss_w = 'S') AND (coalesce(ie_atend_tiss_p,0) = 0) THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(89455);
	END IF;
	IF (dt_entrada_unidade_w >= dt_internacao_p) THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(89467);
	END IF;

	SELECT	MAX(cd_classif_setor)
	INTO STRICT	cd_classif_setor_w
	FROM	setor_atendimento
	WHERE 	cd_setor_atendimento = cd_setor_p;

	ie_classif_contida_w := obter_se_contido(cd_classif_setor_w, ie_classif_setor_w);
	IF (ie_classif_contida_w = 'S') THEN
		cd_setor_anterior_w := obter_unidade_atendimento(nr_atendimento_p,'A','CS');
		CALL Atualizar_setor_prescricao(nr_atendimento_p, cd_setor_p, coalesce(cd_setor_anterior_w,0), nm_usuario_p);
	END IF;
	IF (ie_considera_regra_atual_w = 'S') THEN
		nr_seq_regra_funcao_w := nr_seq_regra_atual_p;
	ELSE
		IF (coalesce(nr_seq_regra_funcao_p,0) > 0) THEN
			nr_seq_regra_funcao_w := nr_seq_regra_funcao_p;
		ELSE
			nr_seq_regra_funcao_w := nr_seq_regra_atual_p;
		END IF;
	END IF;
	ds_msg_consiste_clinica_w := Consiste_clinica_tipo_atend(cd_estabelecimento_p, ie_clinica_p, ie_tipo_atendimento_p, nr_seq_regra_funcao_w, cd_setor_usuario_p, ds_msg_consiste_clinica_w);
	IF (ds_msg_consiste_clinica_w IS NOT NULL AND ds_msg_consiste_clinica_w::text <> '') THEN
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183208, 'DS_ERRO_P='||ds_msg_consiste_clinica_w);
	END IF;

	SELECT * FROM gerar_internacao_atendimento(nr_atendimento_p, nr_seq_interno_p, ie_tipo_guia_w, dt_internacao_p, cd_setor_p, cd_unidade_basica_p, cd_unidade_compl_p, nr_doc_convenio_p, ie_tipo_atendimento_p, ie_clinica_p, ie_atend_novo_p, cd_medico_resp_p, cd_responsavel_p, nr_seq_classif_medico_p, nm_usuario_p, ie_manter_setor_origem_p, cd_motivo_alta_p, cd_procedencia_p, ie_carater_inter_sus_p, nr_seq_classificacao_p, cd_tipo_acomodacao_p, ie_atend_tiss_p, ie_responsavel_p, nr_seq_grau_parentesco_p, nr_novo_atend_p, ds_erro_fecha_conta_p, dt_ving_ini_p, dt_ving_fim_p, qt_dia_int_p, ie_regime_internacao_p, nr_seq_tipo_episodio_p, nr_seq_tipo_admissao_fat_p, nr_seq_queixa_p, cd_departamento_medico_p) INTO STRICT nr_novo_atend_p, ds_erro_fecha_conta_p;

	IF (ie_tipo_atend_age_cir_w IS NOT NULL AND ie_tipo_atend_age_cir_w::text <> '') AND (Obter_Se_Contido_char('1',ie_tipo_atend_age_cir_w) = 'S') AND (coalesce(nr_novo_atend_p,0) > 0) THEN
		ds_msg_vinc_atend_w := obter_se_vinc_atendimento(nr_novo_atend_p, 'D');
		nr_seq_age_w := obter_se_vinc_atendimento(nr_novo_atend_p, 'C');
		IF (ds_msg_vinc_atend_w IS NOT NULL AND ds_msg_vinc_atend_w::text <> '') THEN
			ds_msg_vinc_atend_p := ds_msg_vinc_atend_w;
			nr_seq_age_p := nr_seq_age_w;
		END IF;
	END IF;

	SELECT  coalesce(MAX(ie_radioterapia),'N')
	INTO STRICT	ie_leito_radio_w
        FROM    unidade_atendimento
	WHERE   cd_setor_atendimento = cd_setor_p
        AND     cd_unidade_basica = cd_unidade_basica_p
        AND     cd_unidade_compl = cd_unidade_compl_p;
	IF (ie_leito_radio_w = 'S') THEN
		ds_msg_leito_radio_p := SUBSTR(obter_texto_tasy(89600, wheb_usuario_pck.get_nr_seq_idioma),1,255);
	END IF;

	IF	((coalesce(nr_gestao_vaga_chamada_p,0) > 0) AND (ie_atualiza_status_gv_w = 'S'))THEN

		CALL atualizar_status_acomod_intern('F', nm_usuario_p, nr_gestao_vaga_chamada_p, nm_usuario_p);
	END IF;

END IF;

IF (ie_medico_ciente_p = 'S') AND (cd_medico_resp_p <> cd_medico_atendimento_p) THEN
	CALL Atualiza_medico_ciente(nr_atendimento_p, cd_medico_resp_p, 'T', nm_usuario_p);
END IF;



COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_consis_internacao_js ( cd_medico_atendimento_p text, ie_medico_ciente_p text, nr_gestao_vaga_chamada_p bigint, ie_manter_setor_origem_p text, cd_setor_usuario_p bigint, nr_seq_regra_funcao_p bigint, nr_seq_regra_atual_p bigint, ie_tipo_atendimento_p bigint, nr_seq_classif_medico_p bigint, nr_seq_grau_parentesco_p bigint, ie_responsavel_p text, cd_motivo_alta_p bigint, cd_tipo_acomodacao_p bigint, ie_atend_tiss_p bigint, ie_gerar_alta_atend_p text, nr_seq_classificacao_p bigint, ie_carater_inter_sus_p text, cd_procedencia_p bigint, ie_atend_novo_p text, cd_responsavel_p text, cd_medico_resp_p text, ie_apos_int_p text, ie_clinica_p bigint, nr_doc_convenio_p text, cd_unidade_compl_p text, cd_unidade_basica_p text, nr_seq_interno_p bigint, cd_pessoa_fisica_p text, cd_setor_p bigint, nr_classificacao_p bigint, nr_atendimento_p bigint, cd_estabelecimento_p bigint, dt_internacao_p timestamp, ie_internacao_bpa_p text, dt_ving_ini_p timestamp, dt_ving_fim_p timestamp, qt_dia_int_p bigint, nm_usuario_p text, nr_atend_bpa_novo_p INOUT bigint, NR_NOVO_ATEND_P INOUT bigint, ds_erro_fecha_conta_p INOUT text, ds_msg_vinc_atend_p INOUT text, nr_seq_age_p INOUT bigint, ds_msg_leito_radio_p INOUT text, ie_gerar_gv_internacao_p INOUT text, ie_permit_esp_p INOUT text, ds_msg_esp_quest_p INOUT text, ie_regime_internacao_p text default null, nr_seq_tipo_episodio_p bigint default null, nr_seq_tipo_admissao_fat_p bigint default null, nr_seq_queixa_p bigint default null, cd_departamento_medico_p bigint default null) FROM PUBLIC;

