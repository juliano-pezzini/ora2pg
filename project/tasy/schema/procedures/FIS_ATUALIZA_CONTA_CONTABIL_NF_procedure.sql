-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_atualiza_conta_contabil_nf ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_tipo_nota_w		nota_fiscal.ie_tipo_nota%type;
cd_cgc_emitente_w	nota_fiscal.cd_cgc_emitente%type;
cd_cgc_w		nota_fiscal.cd_cgc%type;
cd_pessoa_fisica_w	nota_fiscal.cd_pessoa_fisica%type;
cd_cnpj_w		nota_fiscal.cd_cgc%type;
ie_conta_dif_nf_w	pessoa_juridica_estab.ie_conta_dif_nf%type;
cd_estabelecimento_w	nota_fiscal.cd_estabelecimento%type;
ie_conta_emitente_w	varchar(10);
ie_regra_pf_w		bigint;


BEGIN 
 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then 
 
	select 	max(ie_tipo_nota), 
		max(cd_cgc_emitente), 
		max(cd_cgc), 
		max(cd_pessoa_fisica), 
		max(cd_estabelecimento) 
	into STRICT	ie_tipo_nota_w, 
		cd_cgc_emitente_w, 
		cd_cgc_w, 
		cd_pessoa_fisica_w, 
		cd_estabelecimento_w 
	from  	nota_fiscal 
	where 	nr_sequencia = nr_sequencia_p;
	 
	 
	if (ie_tipo_nota_w in ('EN', 'EF', 'EP', 'NC')) then -- Entrada 
		ie_tipo_nota_w := 'E';
		 
		select	coalesce(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_cgc_emitente_w, 'ECD'), 'N') 
		into STRICT	ie_conta_dif_nf_w 
		;	
		 
	elsif (ie_tipo_nota_w in ('SD', 'SE', 'SF', 'ST')) then -- Sa√≠da 
		ie_tipo_nota_w := 'S';
		 
		if (coalesce(cd_cgc_w::text, '') = '') and (cd_cgc_emitente_w IS NOT NULL AND cd_cgc_emitente_w::text <> '') then 
		 
			select	coalesce(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_cgc_emitente_w, 'ECD'), 'N') 
			into STRICT	ie_conta_dif_nf_w 
			;		
		else		 
			cd_cnpj_w := cd_cgc_w;
		 
			ie_conta_emitente_w := obter_param_usuario(40, 469, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_conta_emitente_w);			
			 
			if (coalesce(ie_conta_emitente_w, 'N') = 'S') then 
				cd_cnpj_w := cd_cgc_emitente_w;
			end if;
			 
			select	coalesce(obter_dados_pf_pj_estab(cd_estabelecimento_w, null, cd_cnpj_w, 'ECD'), 'N') 
			into STRICT	ie_conta_dif_nf_w 
			;			
		 
		end if;
	end if;
	 
	if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
	 
		select 	count(*) 
		into STRICT	ie_regra_pf_w 
		from  	pessoa_fis_conta_nf 
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;		
 
		if (ie_regra_pf_w > 0) then 
			ie_conta_dif_nf_w := 'S';
		end if;		
	end if;	
	 
	if ((ie_conta_dif_nf_w = 'S') or 
	  (ie_conta_dif_nf_w = 'E' AND ie_tipo_nota_w = 'E') or 
	  (ie_conta_dif_nf_w = 'A' AND ie_tipo_nota_w = 'S')) then 
		CALL gerar_conta_contabil_nf(nr_sequencia_p, nm_usuario_p);
	end if;
 
end if;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_atualiza_conta_contabil_nf ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

