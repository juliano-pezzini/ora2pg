-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_mapa_dieta ( nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

dt_alta_w			timestamp;
dt_entrada_unidade_w		timestamp;
dt_saida_unidade_w		timestamp;
cd_setor_atendimento_w		integer;
cd_pessoa_fisica_w		varchar(10);
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
ie_status_unidade_w		varchar(3);

c01 CURSOR FOR
	SELECT	a.dt_entrada_unidade,
		a.dt_saida_unidade,
		b.cd_setor_atendimento,
		c.ie_status_unidade,
		c.cd_unidade_basica,
		c.cd_unidade_compl
	from 	unidade_atendimento c,
		setor_atendimento b,
		atend_paciente_unidade a
	where 	a.nr_atendimento	= nr_atendimento_p
	and 	b.cd_setor_atendimento 	= c.cd_setor_atendimento
	and 	a.cd_setor_atendimento 	= c.cd_setor_atendimento
	and 	a.cd_unidade_basica	= c.cd_unidade_basica
	and 	a.cd_unidade_compl	= c.cd_unidade_compl
	and 	b.cd_classif_setor	in (3,4,8)
	order by 	a.dt_saida_unidade,
			a.dt_entrada_unidade;

BEGIN

select dt_alta, cd_pessoa_fisica
into STRICT dt_alta_w, cd_pessoa_fisica_w
from atendimento_paciente
where nr_atendimento 		= nr_atendimento_p;

OPEN C01;
LOOP
FETCH C01 into
		dt_entrada_unidade_w,
		dt_saida_unidade_w,
		cd_setor_atendimento_w,
		ie_status_unidade_w,
		cd_unidade_basica_w,
		cd_unidade_compl_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	dt_entrada_unidade_w	:= dt_entrada_unidade_w;
END LOOP;
Close C01;

if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') then
	begin
	if (ie_status_unidade_w <> 'A') or (dt_alta_w > clock_timestamp() - interval '34560 seconds') then
		begin
		delete from mapa_dieta
		where cd_pessoa_fisica = cd_pessoa_fisica_w
		  and dt_dieta > ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp());
		delete from mapa_dieta
		where cd_pessoa_fisica = cd_pessoa_fisica_w
		  and dt_dieta = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
		  and cd_refeicao in (SELECT 'X'
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 23)
			
UNION

			SELECT 'J' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 18)
			
UNION

			SELECT 'C' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 18)
			
UNION

			SELECT 'T' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 14)
			
UNION

			SELECT 'A' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 11)
			
UNION

			SELECT 'L' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 7)
			
UNION

			SELECT 'D' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 7));
		end;
	end if;
	end;
else
	begin
	if (coalesce(dt_saida_unidade_w::text, '') = '') and (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '') and (cd_unidade_basica_w IS NOT NULL AND cd_unidade_basica_w::text <> '') then
		update mapa_dieta
		set 	cd_setor_atendimento	= cd_setor_atendimento_w,
			cd_unidade_basica	= cd_unidade_basica_w,
			cd_unidade_compl	= cd_unidade_compl_w
		where cd_pessoa_fisica		= cd_pessoa_fisica_w
		  and dt_dieta			= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
		  and cd_refeicao in (SELECT 'X'
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 23)
			
UNION

			SELECT 'J' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 18)
			
UNION

			SELECT 'C' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 18)
			
UNION

			SELECT 'T' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 14)
			
UNION

			SELECT 'A' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 11)
			
UNION

			SELECT 'L' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 7)
			
UNION

			SELECT 'D' 
			WHERE (PKG_DATE_UTILS.extract_field('HOUR', clock_timestamp()) < 7));
	end if;
	end;
end if;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_mapa_dieta ( nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

