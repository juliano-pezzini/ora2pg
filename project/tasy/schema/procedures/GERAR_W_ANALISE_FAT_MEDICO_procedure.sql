-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_analise_fat_medico ( dt_inicial_p timestamp, dt_final_p timestamp, ie_tipos_atendimento_p text, cd_medico_resp_p text, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE



ie_tipo_atendimento_w	smallint;
cd_medico_resp_w	varchar(10);
nm_medico_resp_w	varchar(255);
cd_convenio_w		integer;
ds_convenio_w		varchar(255);
dt_emissao_w		timestamp;
vl_fat_bruto_w		double precision;
vl_fat_bruto_desc_w	double precision;
vl_custo_w		double precision;
vl_recebimento_w	double precision;
vl_aberto_w		double precision;
vl_desconto_w		double precision;
vl_desconto_nota_w	double precision;
vl_abatimento_w		double precision;
vl_desc_medico_w	double precision;
vl_total_descontos_w	double precision;
vl_glosa_auditoria_w	double precision;
vl_glosa_ret_conv_w	double precision;
vl_perda_w		double precision;
vl_margem_bruta_w	double precision;
pr_margem_bruta_w	double precision;
vl_margem_liq_w		double precision;
pr_margem_liq_w		double precision;
nr_interno_conta_w	bigint;
nr_atendimento_w	bigint;
qt_reg_conta_w		integer;
nr_seq_protocolo_w	bigint;
vl_desc_medico_apos_nf_w	double precision;

ie_medico_w		varchar(1);
dt_emissao_nota_w	timestamp;
ie_insere_w		varchar(1);
cd_estab_logado_w	smallint;
ie_restringe_estab_w	varchar(1);
ie_opcao_w		bigint;
cd_estabelecimento_w	varchar(4000);

vl_total_nota_w		double precision;
vl_descontos_w		double precision;
vl_desc_w		double precision;
nr_seq_nota_protocolo_w bigint;
nr_titulo_w		bigint;
nr_sequencia_w		bigint;
vl_conta_w		double precision;

nr_seq_lote_protocolo_w	bigint;

/* Faturamento = CATE 963 */

C01 CURSOR FOR
	SELECT	a.cd_medico_resp,
		c.nr_interno_conta,
		c.nr_seq_protocolo,
		a.nr_atendimento,
		c.cd_convenio_parametro,
		n.dt_emissao,
		sum(n.vl_total_nota),
		sum(n.vl_descontos),
		sum(x.vl_desconto),
		sum(coalesce(n.vl_descontos,0) + coalesce(x.vl_desconto,0)) vl_desconto_nota,
		0 vl_glosa_aditoria,
		n.nr_seq_protocolo,
		sum(c.vl_conta),
		null nr_seq_lote_protocolo
	FROM nota_fiscal n, atendimento_paciente a, conta_paciente c
LEFT OUTER JOIN conta_paciente_desconto x ON (c.nr_interno_conta = x.nr_interno_conta)
WHERE n.dt_emissao between dt_inicial_p and dt_final_p and c.nr_atendimento = a.nr_atendimento and ((coalesce(ie_restringe_estab_w,'N') = 'N') or ((coalesce(ie_restringe_estab_w,'N') = 'S') and ((c.cd_estabelecimento = cd_estab_logado_w) or (obter_se_estab_financeiro(cd_estab_logado_w, c.cd_estabelecimento) = 'S'))))  and to_char(n.ie_situacao) = '1' and (c.nr_interno_conta = n.nr_interno_conta) and ((coalesce(ie_tipos_atendimento_p::text, '') = '') or (obter_se_contido(a.ie_tipo_atendimento, elimina_aspas(ie_tipos_atendimento_p)) = 'S')) and ((coalesce(cd_estabelecimento_w::text, '') = '') or (((obter_se_contido(c.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w = 0)) or
						    ((not obter_se_contido(c.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w > 1)))) and ((coalesce(cd_medico_resp_p::text, '') = '') or (obter_se_contido(a.cd_medico_resp, elimina_aspas(cd_medico_resp_p)) = 'S')) group by a.cd_medico_resp,
		a.nr_atendimento,
		c.nr_interno_conta,
		c.nr_seq_protocolo,
		c.cd_convenio_parametro,
		n.dt_emissao,
		n.nr_seq_protocolo
	
union all

	SELECT	a.cd_medico_resp,
		c.nr_interno_conta,
		c.nr_seq_protocolo,
		a.nr_atendimento,
		c.cd_convenio_parametro,
		n.dt_emissao,
		sum(n.vl_total_nota),
		sum(n.vl_descontos),
		sum(x.vl_desconto),
		sum(coalesce(n.vl_descontos,0) + coalesce(x.vl_desconto,0)) vl_desconto_nota,
		0 vl_glosa_aditoria,
		n.nr_seq_protocolo,
		sum(c.vl_conta),
		null nr_seq_lote_protocolo
	FROM nota_fiscal n, atendimento_paciente a, conta_paciente c
LEFT OUTER JOIN conta_paciente_desconto x ON (c.nr_interno_conta = x.nr_interno_conta)
WHERE n.dt_emissao between dt_inicial_p and dt_final_p and c.nr_atendimento = a.nr_atendimento and ((coalesce(ie_restringe_estab_w,'N') = 'N') or ((coalesce(ie_restringe_estab_w,'N') = 'S') and ((c.cd_estabelecimento = cd_estab_logado_w) or (obter_se_estab_financeiro(cd_estab_logado_w, c.cd_estabelecimento) = 'S'))))  and to_char(n.ie_situacao) = '1' and (c.nr_seq_protocolo = n.nr_seq_protocolo) and ((coalesce(ie_tipos_atendimento_p::text, '') = '') or (obter_se_contido(a.ie_tipo_atendimento, elimina_aspas(ie_tipos_atendimento_p)) = 'S')) and ((coalesce(cd_estabelecimento_w::text, '') = '') or (((obter_se_contido(c.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w = 0)) or
						    ((not obter_se_contido(c.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w > 1)))) and ((coalesce(cd_medico_resp_p::text, '') = '') or (obter_se_contido(a.cd_medico_resp, elimina_aspas(cd_medico_resp_p)) = 'S')) group by a.cd_medico_resp,
		a.nr_atendimento,
		c.nr_interno_conta,
		c.nr_seq_protocolo,
		c.cd_convenio_parametro,
		n.dt_emissao,
		n.nr_seq_protocolo
	
union all

	select	a.cd_medico_resp,
		c.nr_interno_conta,
		c.nr_seq_protocolo,
		a.nr_atendimento,
		c.cd_convenio_parametro,
		n.dt_emissao,
		sum(n.vl_total_nota),
		sum(n.vl_descontos),
		sum(x.vl_desconto),
		sum(coalesce(n.vl_descontos,0) + coalesce(x.vl_desconto,0)) vl_desconto_nota,
		0 vl_glosa_aditoria,
		n.nr_seq_protocolo,
		sum(c.vl_conta),
		Obter_Seq_Lote_Protocolo(c.nr_seq_protocolo) nr_seq_lote_protocolo
	FROM nota_fiscal n, atendimento_paciente a, conta_paciente c
LEFT OUTER JOIN conta_paciente_desconto x ON (c.nr_interno_conta = x.nr_interno_conta)
WHERE n.dt_emissao between dt_inicial_p and dt_final_p and c.nr_atendimento = a.nr_atendimento and ((coalesce(ie_restringe_estab_w,'N') = 'N') or ((coalesce(ie_restringe_estab_w,'N') = 'S') and ((c.cd_estabelecimento = cd_estab_logado_w) or (obter_se_estab_financeiro(cd_estab_logado_w, c.cd_estabelecimento) = 'S'))))  and to_char(n.ie_situacao) = '1' and (Obter_Seq_Lote_Protocolo(c.nr_seq_protocolo) = n.nr_seq_lote_prot) and ((coalesce(ie_tipos_atendimento_p::text, '') = '') or (obter_se_contido(a.ie_tipo_atendimento, elimina_aspas(ie_tipos_atendimento_p)) = 'S')) and ((coalesce(cd_estabelecimento_w::text, '') = '') or (((obter_se_contido(c.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w = 0)) or
						    ((not obter_se_contido(c.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w > 1)))) and ((coalesce(cd_medico_resp_p::text, '') = '') or (obter_se_contido(a.cd_medico_resp, elimina_aspas(cd_medico_resp_p)) = 'S')) group by a.cd_medico_resp,
		a.nr_atendimento,
		c.nr_interno_conta,
		c.nr_seq_protocolo,
		c.cd_convenio_parametro,
		n.dt_emissao,
		n.nr_seq_protocolo,
		Obter_Seq_Lote_Protocolo(c.nr_seq_protocolo);

C02 CURSOR FOR
	SELECT	a.nr_titulo,
		a.nr_sequencia,
		e.nr_interno_conta,
		e.nr_atendimento,
		e.cd_convenio_conta,
		trunc(a.dt_recebimento),
		sum(0) vl_fat_bruto,
		sum(0) vl_fat_bruto_desc,
		sum(0) vl_custo,
		sum(0) vl_recebimento,
		sum(0) vl_aberto,
		sum(0) vl_desconto,
		sum(0) vl_desconto_nota,
		sum(0) vl_total_descontos,
		sum(0) vl_abatimento,
		sum(CASE WHEN a.cd_tipo_recebimento=20 THEN 0 WHEN a.cd_tipo_recebimento=21 THEN 0 WHEN a.cd_tipo_recebimento=14 THEN 0 WHEN a.cd_tipo_recebimento=4 THEN 0 WHEN a.cd_tipo_recebimento=8 THEN 0  ELSE a.vl_descontos END ) vl_desc_medico_apos_nf,
		0 vl_glosa_aditoria,
		sum(0)  vl_glosa_ret_conv,
		sum(0) vl_perda,
		sum(0) vl_margem_bruta,
		sum(0) pr_margem_bruta,
		sum(0) vl_margem_liq,
		sum(0) pr_margem_liq
	from	titulo_receber e,
		titulo_receber_liq a
	where	e.nr_titulo 		= a.nr_titulo
	and 	e.ie_situacao		<> '3'
	and	e.ie_situacao		<> '5'
	and	(e.nr_nota_fiscal IS NOT NULL AND e.nr_nota_fiscal::text <> '')
	and 	(e.nr_interno_conta IS NOT NULL AND e.nr_interno_conta::text <> '')
	and 	((coalesce(ie_restringe_estab_w,'N') = 'N') or ((coalesce(ie_restringe_estab_w,'N') = 'S') and ((e.cd_estabelecimento = cd_estab_logado_w) or (obter_se_estab_financeiro(cd_estab_logado_w, e.cd_estabelecimento) = 'S'))))
	and 	a.dt_recebimento between trunc(dt_inicial_p) and fim_dia(dt_final_p)
	and	((coalesce(ie_tipos_atendimento_p::text, '') = '') or (obter_se_contido(obter_tipo_atendimento(e.nr_atendimento), elimina_aspas(ie_tipos_atendimento_p)) = 'S'))
	and 	((coalesce(cd_estabelecimento_w::text, '') = '') or (((obter_se_contido(e.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w = 0)) or
						    ((not obter_se_contido(e.cd_estabelecimento, elimina_aspas(cd_estabelecimento_w)) = 'S') and (ie_opcao_w > 1))))
	and	((coalesce(cd_medico_resp_p::text, '') = '') or (obter_se_contido(substr(hsl_obter_solic_desc(a.nr_titulo,a.nr_sequencia,'C'),1,10), elimina_aspas(cd_medico_resp_p)) = 'S'))
	group by e.nr_atendimento,
		e.nr_interno_conta,
		e.cd_convenio_conta,
		trunc(a.dt_recebimento),
		a.nr_titulo,
		a.nr_sequencia;


BEGIN

delete 	from w_analise_fat_medico
where	nm_usuario = nm_usuario_p;
commit;

select 	wheb_usuario_pck.get_cd_estabelecimento
into STRICT	cd_estab_logado_w
;

ie_restringe_estab_w:= coalesce(obter_valor_param_usuario(7048,3,obter_perfil_ativo,nm_usuario_p, cd_estab_logado_w),'N');

cd_estabelecimento_w:= cd_estabelecimento_p;
ie_opcao_w:= position('<>' in cd_estabelecimento_p);
if (coalesce(ie_opcao_w,0) > 0) then
	cd_estabelecimento_w:= replace(cd_estabelecimento_p,'<>','');
end if;

open C01;
loop
fetch C01 into
	cd_medico_resp_w,
	nr_interno_conta_w,
	nr_seq_protocolo_w,
	nr_atendimento_w,
	cd_convenio_w,
	dt_emissao_w,
	vl_total_nota_w,
	vl_descontos_w,
	vl_desc_w,
	vl_desconto_nota_w,
	vl_glosa_auditoria_w,
	nr_seq_nota_protocolo_w,
	vl_conta_w,
	nr_seq_lote_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select 	initcap(substr(obter_nome_pf(cd_medico_resp_w),1,255)),
		substr(obter_nome_convenio(cd_convenio_w),1,255),
		obter_tipo_atendimento(nr_atendimento_w)
	into STRICT	nm_medico_resp_w,
		ds_convenio_w,
		ie_tipo_atendimento_w
	;

	select 	sum(hsl_Obter_valores_titulo(nr_interno_conta_w,'R')) vl_recebimento,
		sum(hsl_Obter_valores_titulo(nr_interno_conta_w,'S')) vl_aberto,
		sum(coalesce(hsl_Obter_valores_titulo(nr_interno_conta_w,'D'),0)) vl_desconto,
		sum(coalesce(hsl_Obter_valores_titulo(nr_interno_conta_w,'G'),0)) vl_glosa_ret_conv,
		sum(hsl_Obter_valores_titulo(nr_interno_conta_w,'P')) vl_perda,
		sum(CASE WHEN coalesce(nr_seq_lote_protocolo_w::text, '') = '' THEN  CASE WHEN coalesce(nr_seq_nota_protocolo_w::text, '') = '' THEN  vl_total_nota_w  ELSE coalesce(vl_conta_w,0) END   ELSE coalesce(vl_conta_w,0) END )  vl_fat_bruto,
		sum(Obter_custo_resumo_conta(nr_interno_conta_w)) vl_custo,
		sum(hsl_Obter_valores_titulo(nr_interno_conta_w,'A')) vl_abatimento,
		sum(CASE WHEN coalesce(nr_Seq_lote_protocolo_w::text, '') = '' THEN  CASE WHEN coalesce(nr_seq_nota_protocolo_w::text, '') = '' THEN  vl_total_nota_w  ELSE coalesce(vl_conta_w,0) END   ELSE coalesce(vl_conta_w,0) END  + vl_descontos_w + coalesce(vl_desc_w,0)) vl_fat_bruto_desc,
		sum(coalesce(hsl_Obter_valores_titulo(nr_interno_conta_w,'D'),0) + coalesce(vl_descontos_w,0) + coalesce(vl_desc_w,0)) vl_total_descontos
	into STRICT	vl_recebimento_w,
		vl_aberto_w,
		vl_desconto_w,
		vl_glosa_ret_conv_w,
		vl_perda_w,
		vl_fat_bruto_w,
		vl_custo_w,
		vl_abatimento_w,
		vl_fat_bruto_desc_w,
		vl_total_descontos_w
	;

	--Desconto Anterior NF (CFIN 256)
	select	coalesce(sum(a.vl_desconto),0) vl_desconto
	into STRICT	vl_desc_medico_w
	from	(SELECT	a.vl_desconto vl_desconto
		from	conta_paciente z,
			conta_paciente_desconto a
		where	a.nr_interno_conta = z.nr_interno_conta
		and 	a.nr_interno_conta = nr_interno_conta_w
		and 	((coalesce(ie_restringe_estab_w,'N') = 'N') or ((coalesce(ie_restringe_estab_w,'N') = 'S') and ((z.cd_estabelecimento = cd_estab_logado_w) or (obter_se_estab_financeiro(cd_estab_logado_w, z.cd_estabelecimento) = 'S'))))
		and	coalesce(z.dt_cancelamento::text, '') = ''
		and	a.cd_pessoa_solicitante = cd_medico_resp_w
		and 	z.cd_convenio_parametro = cd_convenio_w
		AND 	a.dt_desconto between trunc(dt_inicial_P) and fim_dia(dt_final_p)
		and	(obter_nf_conta(z.nr_interno_conta, 2))::(numeric IS NOT NULL AND numeric::text <> '')) a;

	/*
	Margem de Contribuição Bruta - Corresponde ao cálculo: Valor do Faturamento Bruto - Valor do Custo = Margem de Contribuição
	% Margem Bruta - Corresponde ao cálculo: Valor da Margem de Contribuição Bruta / Valor do Faturamento Bruto = % Margem Bruta  (Apresentar em porcentagem)
	Margem de Contribuição Liquida - Corresponde ao cálculo: Valor do Faturamento Bruto - (Valor do Custo+Valor Total do Desconto Médico+Perda+Valor da Glosa Retorno de Convênio) = Margem de Contribuição.
	% Margem Liquida - Corresponde ao cálculo: Valor da Margem de Contribuição Liquida / Valor do Faturamento Bruto = % Margem Liquida 	(Apresentar e porcentagem)
	*/
	vl_margem_bruta_w	:= vl_fat_bruto_desc_w - vl_custo_w;
	pr_margem_bruta_w	:= dividir(vl_margem_bruta_w, vl_fat_bruto_desc_w) * 100;
	vl_margem_liq_w		:= vl_fat_bruto_desc_w - (vl_custo_w + vl_desc_medico_w + vl_perda_w + vl_glosa_ret_conv_w);
	pr_margem_liq_w		:= dividir(vl_margem_liq_w , vl_fat_bruto_desc_w) * 100;

	insert into w_analise_fat_medico(
		ie_tipo_atendimento,
		cd_medico_resp,
		nm_medico_resp,
		cd_convenio,
		ds_convenio,
		dt_emissao,
		vl_fat_bruto,
		vl_fat_bruto_desc,
		vl_custo,
		vl_recebimento,
		vl_aberto,
		vl_desconto,
		vl_desconto_nota,
		vl_total_descontos,
		vl_abatimento,
		vl_desc_medico,
		vl_glosa_auditoria,
		vl_glosa_ret_conv,
		vl_perda,
		vl_margem_bruta,
		pr_margem_bruta,
		vl_margem_liq,
		pr_margem_liq,
		dt_atualizacao,
		nm_usuario,
		nr_interno_conta,
		nr_atendimento,
		nr_seq_protocolo,
		vl_desc_medico_apos_nf,
		nr_seq_lote_protocolo)
	values (	ie_tipo_atendimento_w,
		cd_medico_resp_w,
		nm_medico_resp_w,
		cd_convenio_w,
		ds_convenio_w,
		dt_emissao_w,
		vl_fat_bruto_w,
		vl_fat_bruto_desc_w,
		vl_custo_w,
		vl_recebimento_w,
		vl_aberto_w,
		vl_desconto_w,
		vl_desconto_nota_w,
		vl_total_descontos_w,
		vl_abatimento_w,
		vl_desc_medico_w,
		vl_glosa_auditoria_w,
		vl_glosa_ret_conv_w,
		vl_perda_w,
		vl_margem_bruta_w,
		pr_margem_bruta_w,
		vl_margem_liq_w,
		pr_margem_liq_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_interno_conta_w,
		nr_atendimento_w,
		nr_seq_protocolo_w,
		0,
		nr_seq_lote_protocolo_w);
end;
end loop;
close C01;

--Desconto Após NF (CFIN 256)
open C02;
loop
fetch C02 into
	nr_titulo_w,
	nr_sequencia_w,
	nr_interno_conta_w,
	nr_atendimento_w,
	cd_convenio_w,
	dt_emissao_w,
	vl_fat_bruto_w,
	vl_fat_bruto_desc_w,
	vl_custo_w,
	vl_recebimento_w,
	vl_aberto_w,
	vl_desconto_w,
	vl_desconto_nota_w,
	vl_total_descontos_w,
	vl_abatimento_w,
	vl_desc_medico_apos_nf_w,
	vl_glosa_auditoria_w,
	vl_glosa_ret_conv_w,
	vl_perda_w,
	vl_margem_bruta_w,
	pr_margem_bruta_w,
	vl_margem_liq_w,
	pr_margem_liq_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	max(n.dt_emissao)
	into STRICT	dt_emissao_nota_w
	from	nota_fiscal n,
		titulo_receber e
	where	n.nr_interno_conta	= nr_interno_conta_w
	and 	e.nr_interno_conta = n.nr_interno_conta
	and 	e.nr_titulo = nr_titulo_w
	and 	n.ie_situacao = '1';

	select 	substr(hsl_obter_solic_desc(nr_titulo_w,nr_sequencia_w,'C'),1,10),
		obter_tipo_atendimento(nr_atendimento_w) ie_tipo_atendimento,
		initcap(substr(obter_nome_pf(substr(hsl_obter_solic_desc(nr_titulo_w,nr_sequencia_w,'C'),1,10)),1,255)) nm_medico_resp,
		substr(obter_nome_convenio(cd_convenio_w),1,255) ds_convenio
	into STRICT	cd_medico_resp_w,
		ie_tipo_atendimento_w,
		nm_medico_resp_w,
		ds_convenio_w
	;


	ie_insere_w:= 'S';

	select 	obter_se_medico(cd_medico_resp_w,'M')
	into STRICT	ie_medico_w
	;

	if (ie_medico_w = 'N') then

		-- Em conexão com Cláudia OS 153518
		-- Se o solicitante do desconto não for um médico, então soma-se para o médico do atendimento (Somente se o solicitante do desconto não for médico)
		-- Se o desconto não foi concedido por um médico e não for no mês de emissão da NF então não aparece o registro naquele mês (Somente se o solicitante do desconto não for médico)
		-- Se o mês do recebimento for no mesmo mês da emissão da NF então não deve somar o Total Desconto médico. (Pois não é um médico que concedeu o desconto)
		select 	coalesce(max(cd_medico_resp),cd_medico_resp_w)
		into STRICT	cd_medico_resp_w
		from 	atendimento_paciente
		where 	nr_atendimento = nr_atendimento_w;

		select 	initcap(substr(obter_nome_pf(cd_medico_resp_w),1,255))
		into STRICT	nm_medico_resp_w
		;

		if (trunc(dt_emissao_nota_w, 'month') <> trunc(dt_emissao_w, 'month')) then
			ie_insere_w:= 'N';
		else
			vl_desc_medico_apos_nf_w:= 0;
		end if;

	end if;

	if (ie_insere_w = 'S') and (dt_emissao_nota_w IS NOT NULL AND dt_emissao_nota_w::text <> '') then

		insert into w_analise_fat_medico(
			ie_tipo_atendimento,
			cd_medico_resp,
			nm_medico_resp,
			cd_convenio,
			ds_convenio,
			dt_emissao,
			vl_fat_bruto,
			vl_fat_bruto_desc,
			vl_custo,
			vl_recebimento,
			vl_aberto,
			vl_desconto,
			vl_desconto_nota,
			vl_total_descontos,
			vl_abatimento,
			vl_desc_medico,
			vl_glosa_auditoria,
			vl_glosa_ret_conv,
			vl_perda,
			vl_margem_bruta,
			pr_margem_bruta,
			vl_margem_liq,
			pr_margem_liq,
			dt_atualizacao,
			nm_usuario,
			nr_interno_conta,
			nr_atendimento,
			nr_seq_protocolo,
			vl_desc_medico_apos_nf,
			nr_seq_lote_protocolo)
		values (	ie_tipo_atendimento_w,
			cd_medico_resp_w,
			nm_medico_resp_w,
			cd_convenio_w,
			ds_convenio_w,
			dt_emissao_w,
			vl_fat_bruto_w,
			vl_fat_bruto_desc_w,
			vl_custo_w,
			vl_recebimento_w,
			vl_aberto_w,
			vl_desconto_w,
			vl_desconto_nota_w,
			vl_total_descontos_w,
			vl_abatimento_w,
			0,
			vl_glosa_auditoria_w,
			vl_glosa_ret_conv_w,
			vl_perda_w,
			vl_margem_bruta_w,
			pr_margem_bruta_w,
			vl_margem_liq_w,
			pr_margem_liq_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_interno_conta_w,
			nr_atendimento_w,
			null,
			vl_desc_medico_apos_nf_w,
			null);

	end if;
end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_analise_fat_medico ( dt_inicial_p timestamp, dt_final_p timestamp, ie_tipos_atendimento_p text, cd_medico_resp_p text, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

