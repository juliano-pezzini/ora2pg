-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_gerar_doadores_corresp ( nr_seq_envio_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
dt_inicial_w		timestamp;
dt_final_w		timestamp;
ie_opcao_w		varchar(1);
cd_doador_w		varchar(20);

C01 CURSOR FOR
	SELECT	distinct b.cd_pessoa_fisica
	from	san_doacao b
	where	b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
	and	ie_opcao_w = '1'
	and	coalesce(b.nr_seq_doacao_amostra::text, '') = ''
	and	b.dt_doacao between dt_inicial_w and fim_dia(dt_final_w)
	and	b.nr_sequencia = (SELECT max(nr_sequencia)
			 	  from 	 san_doacao x
				  where  x.cd_pessoa_fisica = b.cd_pessoa_fisica)
	and	not exists (select 1
			from san_doacao e
			where	b.cd_pessoa_fisica = e.cd_pessoa_fisica
			and	e.dt_doacao >= b.dt_doacao
			and	(e.nr_seq_doacao_amostra IS NOT NULL AND e.nr_seq_doacao_amostra::text <> ''))
	and 	exists (select 	1
			from 	san_exame_realizado c,
				san_exame_lote d,
				san_exame e
			where	d.nr_sequencia = c.nr_seq_exame_lote
			and	d.nr_seq_doacao = b.nr_sequencia
			and	c.nr_seq_exame = e.nr_sequencia
			and e.ie_exige_senha = 'S'
			and	upper(c.ds_resultado) in ('POSITIVO','REAGENTE','INDETERMINADO')
			and	coalesce(e.ie_fator_rh,'N') = 'N'
			and not exists (select 	1
					from	san_parametro p
					where	p.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
					and	p.nr_seq_exame_rh = c.nr_seq_exame))
	and	not exists (select 1
			from	san_envio_corresp_item f
			where	f.nr_seq_envio = nr_seq_envio_p
			and	f.cd_pessoa_fisica = b.cd_pessoa_fisica)
	
union

	select	distinct b.cd_pessoa_fisica
	from	san_doacao b
	where	b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
	and	ie_opcao_w = '2'
	and	(b.nr_seq_doacao_amostra IS NOT NULL AND b.nr_seq_doacao_amostra::text <> '')
	and	b.dt_doacao between dt_inicial_w and fim_dia(dt_final_w)
	and	b.nr_sequencia = (select max(nr_sequencia)
			 	  from 	 san_doacao x
				  where  x.cd_pessoa_fisica = b.cd_pessoa_fisica)
	and 	exists (select 	1
			from 	san_exame_realizado c,
				san_exame_lote d,
				san_exame e
			where	d.nr_sequencia = c.nr_seq_exame_lote
			and	d.nr_seq_doacao = b.nr_sequencia
			and	c.nr_seq_exame = e.nr_sequencia
			and e.ie_exige_senha = 'S'
			and	upper(c.ds_resultado) in ('POSITIVO','REAGENTE','INDETERMINADO')
			and	coalesce(e.ie_fator_rh,'N') = 'N'
			and not exists (select 	1
					from	san_parametro p
					where	p.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
					and	p.nr_seq_exame_rh = c.nr_seq_exame))
	and	not exists (select 1
			from	san_envio_corresp_item f
			where	f.nr_seq_envio = nr_seq_envio_p
			and	f.cd_pessoa_fisica = b.cd_pessoa_fisica)
	
union

	select 	distinct b.cd_pessoa_fisica
	from   	san_doacao b
	where  	ie_avaliacao_final = 'A'
	and	b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
	and	ie_opcao_w = '3'
	and	b.dt_doacao between dt_inicial_w and fim_dia(dt_final_w)
	and	b.nr_sequencia = (select max(nr_sequencia)
			 	  from 	 san_doacao x
				  where  x.cd_pessoa_fisica = b.cd_pessoa_fisica)
	and 	not exists (select 1
			from 	san_exame_realizado c,
				san_exame_lote d,
				san_exame e
			where	d.nr_sequencia = c.nr_seq_exame_lote
			and	d.nr_seq_doacao = b.nr_sequencia
			and	c.nr_seq_exame = e.nr_sequencia
			and	upper(c.ds_resultado) in ('POSITIVO','REAGENTE','INDETERMINADO')
			and	coalesce(e.ie_fator_rh,'N') = 'N'
			and not exists (select 	1
					from	san_parametro p
					where	p.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
					and	p.nr_seq_exame_rh = c.nr_seq_exame))
	and	not exists (select 1
			from	san_envio_corresp_item f
			where	f.nr_seq_envio = nr_seq_envio_p
			and	f.cd_pessoa_fisica = b.cd_pessoa_fisica)
	
union

	select 	distinct b.cd_pessoa_fisica
	from   	san_impedimento c,
		san_doacao_impedimento d,
		san_doacao b
	where  	b.nr_sequencia = d.nr_seq_doacao
	and    	d.nr_seq_impedimento = c.nr_sequencia
	and	b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
	and	ie_opcao_w = '3'
	and	b.dt_doacao between dt_inicial_w and fim_dia(dt_final_w)
	and    	b.ie_avaliacao_final <> 'A'
	and    	c.ie_definitivo = 'N'
	and    ((coalesce(dt_ocorrencia::text, '') = '') or ((dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '') and (trunc(dt_ocorrencia + coalesce(nr_dias_inaptidao,0))) <= trunc(dt_final_w)))
	and    	(dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '')
	and    	nr_dias_inaptidao > 0
	and	b.nr_sequencia = (select max(nr_sequencia)
				  from 	 san_doacao x
				  where  x.cd_pessoa_fisica = b.cd_pessoa_fisica)
	and 	not exists (select 1
			from 	san_exame_realizado c,
				san_exame_lote d,
				san_exame e
			where	d.nr_sequencia = c.nr_seq_exame_lote
			and	d.nr_seq_doacao = b.nr_sequencia
			and	c.nr_seq_exame = e.nr_sequencia
			and	upper(c.ds_resultado) in ('POSITIVO','REAGENTE','INDETERMINADO')
			and	coalesce(e.ie_fator_rh,'N') = 'N'
			and not exists (select 	1
					from	san_parametro p
					where	p.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
					and	p.nr_seq_exame_rh = c.nr_seq_exame))
	and	not exists (select 1
			from	san_envio_corresp_item f
			where	f.nr_seq_envio = nr_seq_envio_p
			and	f.cd_pessoa_fisica = b.cd_pessoa_fisica)
	
union

	select 	distinct b.cd_pessoa_fisica
	from   	san_impedimento c,
		san_questionario d,
		san_doacao b
	where  	b.nr_sequencia = d.nr_seq_doacao
	and    	d.nr_seq_impedimento = c.nr_sequencia
	and	b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
	and	ie_opcao_w = '3'
	and	b.dt_doacao between dt_inicial_w and fim_dia(dt_final_w)
	and    	b.ie_avaliacao_final <> 'A'
	and    	c.ie_definitivo = 'N'
	and    ((coalesce(dt_ocorrencia::text, '') = '') or ((dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '') and (trunc(dt_ocorrencia + coalesce(nr_dias_inaptidao,0))) <= trunc(dt_final_w)))
	and    	(dt_ocorrencia IS NOT NULL AND dt_ocorrencia::text <> '')
	and    	nr_dias_inaptidao > 0
	and	b.nr_sequencia = (select max(nr_sequencia)
				  from 	 san_doacao x
				  where  x.cd_pessoa_fisica = b.cd_pessoa_fisica)
	and 	not exists (select 1
			from 	san_exame_realizado c,
				san_exame_lote d,
				san_exame e
			where	d.nr_sequencia = c.nr_seq_exame_lote
			and	d.nr_seq_doacao = b.nr_sequencia
			and	c.nr_seq_exame = e.nr_sequencia
			and	upper(c.ds_resultado) in ('POSITIVO','REAGENTE','INDETERMINADO')
			and	coalesce(e.ie_fator_rh,'N') = 'N'
			and not exists (select 	1
					from	san_parametro p
					where	p.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
					and	p.nr_seq_exame_rh = c.nr_seq_exame))
	and    	coalesce(d.ie_impede_doacao,'N') = 'S'
	and	not exists (select 1
			from	san_envio_corresp_item f
			where	f.nr_seq_envio = nr_seq_envio_p
			and	f.cd_pessoa_fisica = b.cd_pessoa_fisica)
	
union

	select	distinct b.cd_pessoa_fisica
	from	san_doacao b
	where	b.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
	and	ie_opcao_w = '4'
	and	b.dt_doacao between dt_inicial_w and fim_dia(dt_final_w)
	and	b.nr_sequencia = (select max(nr_sequencia)
			 	  from 	 san_doacao x
				  where  x.cd_pessoa_fisica = b.cd_pessoa_fisica)
	and 	exists (select 	1
			from 	san_exame_realizado c,
				san_exame_lote d
			where	d.nr_sequencia = c.nr_seq_exame_lote
			and	d.nr_seq_doacao = b.nr_sequencia
			and	c.ie_andamento = 'S')
	and	not exists (select 1
			from	san_envio_corresp_item f
			where	f.nr_seq_envio = nr_seq_envio_p
			and	f.cd_pessoa_fisica = b.cd_pessoa_fisica)
	order by 1;


BEGIN

if (nr_seq_envio_p IS NOT NULL AND nr_seq_envio_p::text <> '') then

	select	dt_inicial,
		dt_final,
		ie_opcao,
		cd_doador
	into STRICT	dt_inicial_w,
		dt_final_w,
		ie_opcao_w,
		cd_doador_w
	from	san_envio_correspondencia
	where	nr_sequencia = nr_seq_envio_p;

	if (dt_inicial_w IS NOT NULL AND dt_inicial_w::text <> '') and (dt_final_w IS NOT NULL AND dt_final_w::text <> '') and (coalesce(cd_doador_w::text, '') = '') then

		open C01;
		loop
		fetch C01 into
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin

			insert into san_envio_corresp_item(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_envio,
				cd_pessoa_fisica)
			values (	nextval('san_envio_corresp_item_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_envio_p,
				cd_pessoa_fisica_w);

			end;
		end loop;
		close C01;

	elsif (cd_doador_w IS NOT NULL AND cd_doador_w::text <> '') then
			insert into san_envio_corresp_item(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_envio,
				cd_pessoa_fisica)
			values (	nextval('san_envio_corresp_item_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_envio_p,
				cd_doador_w);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_gerar_doadores_corresp ( nr_seq_envio_p bigint, nm_usuario_p text) FROM PUBLIC;

