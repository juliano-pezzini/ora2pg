-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_protocolo_padrao ( nm_usuario_p text, cd_tipo_protocolo_p INOUT bigint, cd_protocolo_p INOUT bigint, cd_sub_tipo_protocolo_p INOUT bigint) AS $body$
DECLARE

 
cd_pessoa_fisica_w	bigint;
cd_perfil_w		bigint;
cd_sub_tipo_protocolo_w	bigint;
cd_protocolo_w		bigint;
cd_tipo_protocolo_w	bigint;

C01 CURSOR FOR 
	SELECT	cd_protocolo, 
		nr_seq_medicacao 
	from	protocolo_medic_lib 
	where	coalesce(cd_pessoa_fisica, cd_pessoa_fisica_w) = cd_pessoa_fisica_w 
	and	((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_pessoa_fisica_w,cd_especialidade) = 'S')) 
	and	coalesce(cd_perfil, cd_perfil_w) = cd_perfil_w 
	and	ie_regra = 'U' 
	and	ie_padrao = 'S' 
	order by coalesce(cd_pessoa_fisica,0), coalesce(cd_perfil,0), coalesce(cd_especialidade,0);

C02 CURSOR FOR 
	SELECT	cd_protocolo 
	from	protocolo_lib 
	where	coalesce(cd_pessoa_fisica, cd_pessoa_fisica_w) = cd_pessoa_fisica_w 
	and	((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_pessoa_fisica_w,cd_especialidade) = 'S')) 
	and	coalesce(cd_perfil, cd_perfil_w) = cd_perfil_w 
	and	ie_regra = 'U' 
	and	ie_padrao = 'S' 
	order by coalesce(cd_pessoa_fisica,0), coalesce(cd_perfil,0), coalesce(cd_especialidade,0);
	
C03 CURSOR FOR 
	SELECT	cd_tipo_protocolo 
	from	tipo_protocolo_lib 
	where	coalesce(cd_pessoa_fisica, cd_pessoa_fisica_w) = cd_pessoa_fisica_w 
	and	((coalesce(cd_especialidade::text, '') = '') or (obter_se_especialidade_medico(cd_pessoa_fisica_w,cd_especialidade) = 'S')) 
	and	coalesce(cd_perfil, cd_perfil_w) = cd_perfil_w 
	and	ie_regra = 'U' 
	and	ie_padrao = 'S' 
	order by coalesce(cd_pessoa_fisica,0), coalesce(cd_perfil,0), coalesce(cd_especialidade,0);


BEGIN 
 
cd_pessoa_fisica_w	:= obter_pf_usuario(nm_usuario_p,'C');
cd_perfil_w		:= obter_perfil_ativo;
 
open C01;
loop 
fetch C01 into 
	cd_protocolo_w, 
	cd_sub_tipo_protocolo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	null;
	end;
end loop;
close C01;
 
if (coalesce(cd_protocolo_w::text, '') = '') then 
	open C02;
	loop 
	fetch C02 into	 
		cd_protocolo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		null;
		end;
	end loop;
	close C02;
end if;
 
if (coalesce(cd_protocolo_w::text, '') = '') then 
	open C03;
	loop 
	fetch C03 into	 
		cd_tipo_protocolo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		null;
		end;
	end loop;
	close C03;
else 
	select	cd_tipo_protocolo 
	into STRICT	cd_tipo_protocolo_w 
	from	protocolo 
	where	cd_protocolo = cd_protocolo_w;
end if;
 
cd_tipo_protocolo_p	:= cd_tipo_protocolo_w;
cd_protocolo_p		:= cd_protocolo_w;
cd_sub_tipo_protocolo_p	:= cd_sub_tipo_protocolo_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_protocolo_padrao ( nm_usuario_p text, cd_tipo_protocolo_p INOUT bigint, cd_protocolo_p INOUT bigint, cd_sub_tipo_protocolo_p INOUT bigint) FROM PUBLIC;

