-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_laudo ( nr_seq_laudo_p bigint, nm_usuario_p text) AS $body$
DECLARE



nr_atendimento_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
cd_cid_principal_w	varchar(4);
ie_classificacao_w	smallint;
ie_sexo_w		varchar(1);
ie_sexo_cid_w		varchar(1);
ie_finalidade_w		varchar(3);
qt_meses_prev_w		smallint	:= 0;
qt_meses_prev_ww	smallint	:= 0;
dt_diag_cito_hist_w	timestamp;
dt_inicio_trat_solic_w	timestamp;
dt_pri_tratamento_w	timestamp;
dt_seg_tratamento_w	timestamp;
dt_ter_tratamento_w	timestamp;
cd_estabelecimento_w	smallint;
ie_tipo_atendimento_w	smallint;
nr_seq_geral_w		bigint	:= 0;
ds_detalhe_w		varchar(255)	:= '';
ie_apac_inicial_w	varchar(1);
ie_apac_continuidade_w	varchar(1);
qt_maxima_w		smallint;
ie_maxima_w		varchar(4);
cd_proc_secundario_w	bigint;
qt_min_meses_w		smallint;
qt_max_meses_w		smallint;
cd_subgrupo_bpa_w	bigint;
cd_grupo_bpa_w		bigint;
nr_laudo_sus_w		smallint;
ie_origem_laudo_apac_w	bigint;
ie_continuidade_trat_w	varchar(1);
qt_meses_autorizado_w	integer;
ie_tipo_laudo_apac_w	varchar(3);
cd_grau_histopat_w	integer;
cd_cid_topografia_w	varchar(10);
qt_meses_planejados_w	smallint;
qt_meses_autorizados_w	integer;
dt_inicio_tratamento_w	timestamp;
ie_linfonodos_reg_inv_w	varchar(1);
ie_estadio_w		varchar(1);
cd_estadio_w		smallint;
ie_tratamento_ant_w	varchar(1);
ds_sigla_esquema_w	varchar(40);
cd_medico_w             varchar(10);
qt_cbo_profissional_w   integer;
qt_cbo_proc_w           integer;
qt_cbo_compativel_w     integer;
ie_diaria_uti_w		varchar(4);
qt_diaria_uti_w		integer;
nr_cartao_nac_sus_w	varchar(20);
cd_forma_organizacao_w	integer;
ds_local_metastase_w	varchar(80);
ie_tipo_laudo_sus_w	smallint;
qt_registros_w		bigint 	:= 0;
qt_cid_compat_w		bigint	:= 0;
qt_proc_compat_w	bigint	:= 0;
qt_proc_incompativel_w	bigint	:= 0;
ie_origem_proc_adic_w	bigint;
dt_emissao_w		timestamp;
cd_cep_w		varchar(15);
cd_cid_secundario_w	varchar(4);
ie_habilitacao_w	varchar(1);
cd_pessoa_fisica_w	varchar(10);
qt_proc_adic_w		bigint 	:= 0;
cd_cns_requisitante_w	varchar(20);
cd_cid_prim_trat_w	varchar(4);
cd_cid_seg_trat_w	varchar(4);
cd_cid_terc_trat_w	varchar(4);
cd_procedimento_princ_w	sus_laudo_paciente.cd_procedimento_solic%type;
ie_origem_proced_princ_w	sus_laudo_paciente.ie_origem_proced%type;
nr_seq_interno_w	sus_laudo_paciente.nr_seq_interno%type;
dt_liberacao_w		sus_laudo_paciente.dt_liberacao%type;
dt_transplante_w	timestamp;

ds_msg_nr_laudo_w	varchar(255) := wheb_mensagem_pck.get_texto(311099); --Nr laudo: 
ds_msg_cd_proced_w	varchar(255) := wheb_mensagem_pck.get_texto(311102); --Proced:
ds_msg_orig_laudo_w	varchar(255) := wheb_mensagem_pck.get_texto(311119); --Origem laudo: 
ds_msg_dt_inicial_w	varchar(255) := wheb_mensagem_pck.get_texto(304192); --Dt inicio valid:
ds_msg_dt_final_w	varchar(255) := wheb_mensagem_pck.get_texto(304197); --Dt fim vald:
qt_reg_prim_cid_w	bigint 	:= 999;
qt_reg_seg_cid_w	bigint 	:= 999;
qt_reg_terc_cid_w	bigint 	:= 999;
qt_reg_cid_area_w	bigint 	:= 999;
qt_controle_w		bigint 		:= 0;
cd_doenca_cid_area_w	sus_laudo_area_irradiada.cd_doenca_cid%type;
qt_proc_ativo_w		bigint	:= 0;
qt_diametro_veia_w	bigint;
qt_diametro_arteria_w	bigint;
ie_fremito_traj_fav_w	bigint;
qt_idade_pac_w		real	:= 0;
qt_idade_minima_w	real	:= 0;
ds_idade_minima_w	varchar(15)	:= '';
qt_idade_maxima_w	real	:= 0;
ds_idade_maxima_w	varchar(15)	:= '';
dt_nascimento_w		timestamp;
dt_inicio_w		sus_laudo_area_irradiada.dt_inicio%type		:= clock_timestamp();
dt_termino_w		sus_laudo_area_irradiada.dt_termino%type	:= clock_timestamp();
qt_procedimento_w   sus_laudo_proced_adic.qt_procedimento%type;
qt_proc_permitida_w   sus_proc_compativel.qt_proc_permitida%type;
cd_procedimento_ww  sus_laudo_proced_adic.cd_procedimento%type;

c01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	sus_laudo_proced_adic
	where	nr_seq_laudo	= nr_seq_laudo_p;


C02 CURSOR FOR
	SELECT	cd_doenca_cid
	from	sus_laudo_area_irradiada
	where	nr_seq_laudo = nr_seq_laudo_p
	order by nr_sequencia;	
	
BEGIN

delete	from sus_inco_reg_laudo
where	nr_seq_laudo	= nr_seq_laudo_p;

/* obter dados do laudo	*/

begin
select	a.nr_atendimento,
	a.cd_procedimento_solic,
	a.ie_origem_proced,
	a.cd_cid_principal,
	a.cd_cid_secundario,
	coalesce(a.ie_classificacao,0),
 	c.ie_sexo,
	a.ie_finalidade,
	a.qt_meses_prev,
	a.dt_diag_cito_hist,
	a.dt_inicio_trat_solic,
	a.dt_pri_tratamento,
	a.dt_seg_tratamento,
	a.dt_ter_tratamento,
	b.cd_estabelecimento,
	b.ie_tipo_atendimento,
	a.nr_laudo_sus,
	a.ie_origem_laudo_apac,
	a.ie_continuidade_trat,
	a.qt_meses_autorizado,
	a.cd_grau_histopat,
	a.cd_cid_topografia,
	a.qt_meses_prev,
	a.qt_meses_autorizado,
	a.dt_inicio_trat_solic,
	a.ie_lifonodos_reg_inval,
	a.ie_tratamento_ant,
	a.ds_sigla_esquema,
	a.ie_diaria_uti,
	coalesce(a.cd_medico_requisitante,a.cd_profis_requisitante),
	a.ie_diaria_uti,
	c.nr_cartao_nac_sus,
	a.ds_localizacao_metastase,
	coalesce(a.ie_tipo_laudo_sus,0),
	dt_emissao,
	substr(obter_compl_pf(c.cd_pessoa_fisica,1,'CEP'),1,15),
	b.cd_pessoa_fisica,
	substr(obter_dados_pf(coalesce(a.cd_medico_requisitante,a.cd_profis_requisitante),'CNS'),1,20),
	cd_cid_prim_trat,
	cd_cid_seg_trat,
	cd_cid_terc_trat,
	a.dt_transplante
into STRICT	nr_atendimento_w,
 	cd_procedimento_w,
	ie_origem_proced_w,
 	cd_cid_principal_w,
 	cd_cid_secundario_w,
 	ie_classificacao_w,
 	ie_sexo_w,
	ie_finalidade_w,
	qt_meses_prev_w,
	dt_diag_cito_hist_w,
	dt_inicio_trat_solic_w,
	dt_pri_tratamento_w,
	dt_seg_tratamento_w,
	dt_ter_tratamento_w,
	cd_estabelecimento_w,
	ie_tipo_atendimento_w,
	nr_laudo_sus_w,
	ie_origem_laudo_apac_w,
	ie_continuidade_trat_w,
	qt_meses_autorizado_w,
	cd_grau_histopat_w,
	cd_cid_topografia_w,
	qt_meses_planejados_w,
	qt_meses_autorizados_w,
	dt_inicio_tratamento_w,
	ie_linfonodos_reg_inv_w,
	ie_tratamento_ant_w,
	ds_sigla_esquema_w,
	ie_diaria_uti_w,
	cd_medico_w,
	ie_diaria_uti_w,
	nr_cartao_nac_sus_w,
	ds_local_metastase_w,
	ie_tipo_laudo_sus_w,
	dt_emissao_w,
	cd_cep_w,
	cd_pessoa_fisica_w,
	cd_cns_requisitante_w,
	cd_cid_prim_trat_w,
	cd_cid_seg_trat_w,
	cd_cid_terc_trat_w,
	dt_transplante_w
from	pessoa_fisica		c,
 	atendimento_paciente	b,
 	sus_laudo_paciente 	a
where	a.nr_seq_interno	= nr_seq_laudo_p
and	a.nr_atendimento	= b.nr_atendimento
and	b.cd_pessoa_fisica	= c.cd_pessoa_fisica;
exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(191705,'NR_SEQ_LAUDO='|| nr_seq_laudo_p);
	/* Problema na leitura dos dados do paciente, ao consistir o laudo #@NR_SEQ_LAUDO#@ . */

end;

begin
select	max((ds_estadio_uicc)::numeric )
into STRICT	cd_estadio_w
from	sus_laudo_paciente
where	nr_seq_interno = nr_seq_laudo_p;
exception
when others then
	select	max(CASE WHEN upper(ds_estadio_uicc)='I' THEN 1 WHEN upper(ds_estadio_uicc)='II' THEN 2 WHEN upper(ds_estadio_uicc)='III' THEN 3 WHEN upper(ds_estadio_uicc)='IV' THEN 4 END )
	into STRICT	cd_estadio_w
	from	sus_laudo_paciente
	where	nr_seq_interno = nr_seq_laudo_p;
end;

qt_meses_prev_ww	:= qt_meses_prev_w;

select	coalesce(max(ie_tipo_laudo_apac),'00')
into STRICT	ie_tipo_laudo_apac_w
from	sus_procedimento
where	cd_procedimento		= cd_procedimento_w
and	ie_origem_proced	= ie_origem_proced_w;

/* 1 - Falta informar CID diagnostico principal para o laudo APAC */

if (sus_obter_incolaudo_ativa(1)) and (ie_classificacao_w in (11,12,13)) and (coalesce(cd_cid_principal_w::text, '') = '') then
	ds_detalhe_w	:= substr(ds_msg_cd_proced_w || cd_procedimento_w || ','||wheb_mensagem_pck.get_texto(311109)|| cd_cid_principal_w ||','||wheb_mensagem_pck.get_texto(311110)|| ie_classificacao_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 1, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

/* 2 - CID diagnostico principal incorreto */

if (sus_obter_incolaudo_ativa(2)) and (ie_classificacao_w in (1,11,12,13,14,15)) and (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') then
	begin

	select	count(*)
	into STRICT	qt_cid_compat_w
	from	sus_procedimento_cid
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_geral_w
	from	sus_procedimento_cid
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	cd_doenca_cid		= cd_cid_principal_w;
	if (nr_seq_geral_w		= 0) and (qt_cid_compat_w 	<> 0) then
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w||cd_procedimento_w || ',' || wheb_mensagem_pck.get_texto(311109) || cd_cid_principal_w ||','||wheb_mensagem_pck.get_texto(311110)|| ie_classificacao_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 2, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;

/* 3 - CID incompativel com sexo do paciente */

if (sus_obter_incolaudo_ativa(3)) and (ie_classificacao_w in (1,11,12,13)) and (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') then
	begin
	select	coalesce(max(ie_sexo),' ')
	into STRICT	ie_sexo_cid_w
	from	cid_doenca
	where	cd_doenca_cid	= cd_cid_principal_w;

	ds_detalhe_w	:= 	substr(wheb_mensagem_pck.get_texto(311110) || ie_classificacao_w ||
				','|| wheb_mensagem_pck.get_texto(311109) || cd_cid_principal_w || 
				', '||wheb_mensagem_pck.get_texto(311111) || ie_sexo_w || 
				', '||wheb_mensagem_pck.get_texto(311112) || ie_sexo_cid_w,1,255);

	if (ie_sexo_cid_w	= 'M') and (ie_sexo_w	<> 'M') then
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 3, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;

	if (ie_sexo_cid_w	= 'F')	and (ie_sexo_w	<> 'F')		then
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 3, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;

/* 4 - Procedimento secundario incompativel p/principal */

if (sus_obter_incolaudo_ativa(4)) then
	open c01;
		loop
		fetch c01 into
			cd_proc_secundario_w,
			ie_origem_proc_adic_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			select 	count(*)
			into STRICT	qt_registros_w
			from	sus_apac_regra_tela
			where	cd_proc_principal	= cd_procedimento_w
			and	cd_proc_secundario	= cd_proc_secundario_w;

			if (qt_registros_w > 0) then
				begin
				select	ie_apac_inicial,
					ie_apac_continuidade,
					CASE WHEN ie_maxima='C2' THEN 13 WHEN ie_maxima='C3' THEN 9  ELSE somente_numero(coalesce(ie_maxima,'0')) END ,
					ie_maxima
				into STRICT	ie_apac_inicial_w,
					ie_apac_continuidade_w,
					qt_maxima_w,
					ie_maxima_w
				from	sus_apac_regra_tela
				where	cd_proc_principal	= cd_procedimento_w
				and	cd_proc_secundario	= cd_proc_secundario_w;
				exception
					when others then
					begin
					ie_apac_inicial_w	:= 'X';
					ie_apac_continuidade_w	:= 'X';
					end;
				end;

				if (ie_apac_inicial_w	= 'X') and (ie_apac_continuidade_w	= 'X') then
					ds_detalhe_w	:= substr(wheb_mensagem_pck.get_texto(311113) || cd_procedimento_w || ', '||wheb_mensagem_pck.get_texto(311114)|| cd_proc_secundario_w,1,255);
					CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 4, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end if;
			end if;

			if ( cd_proc_secundario_w = 0304080071) then
				begin
				select	max(f.cd_forma_organizacao)
				into STRICT	cd_forma_organizacao_w
				from	sus_forma_organizacao f,
					sus_procedimento s
				where	s.cd_procedimento = cd_procedimento_w
				and	s.ie_origem_proced = ie_origem_proced_w
				and	s.nr_seq_forma_org = f.nr_sequencia;
				exception
					when others then
					begin
					cd_forma_organizacao_w := null;
					end;
				end;

				if (ds_local_metastase_w IS NOT NULL AND ds_local_metastase_w::text <> '') and (cd_forma_organizacao_w not in (30402,30407)) then
					ds_detalhe_w	:= substr(wheb_mensagem_pck.get_texto(311113) || cd_procedimento_w || ', '||wheb_mensagem_pck.get_texto(311114)|| cd_proc_secundario_w||
								', '|| wheb_mensagem_pck.get_texto(311115),1,255);
					CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 4, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end if;
			end if;

			if ( cd_proc_secundario_w = 0304080055) then
				begin
				select	max(f.cd_forma_organizacao)
				into STRICT	cd_forma_organizacao_w
				from	sus_forma_organizacao f,
					sus_procedimento s
				where	s.cd_procedimento = cd_procedimento_w
				and	s.ie_origem_proced = ie_origem_proced_w
				and	s.nr_seq_forma_org = f.nr_sequencia;
				exception
					when others then
					begin
					cd_forma_organizacao_w := null;
					end;
				end;

				if (ds_local_metastase_w IS NOT NULL AND ds_local_metastase_w::text <> '') and (cd_forma_organizacao_w not in (30402,30406,30407)) then
					ds_detalhe_w	:= substr(wheb_mensagem_pck.get_texto(311113) || cd_procedimento_w || ', '|| wheb_mensagem_pck.get_texto(311114) || cd_proc_secundario_w||
							', '|| wheb_mensagem_pck.get_texto(311115),1,255);
					CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 4, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end if;
			end if;

			end;
		end loop;
	close c01;
end if;

/* 5 - Quantidade de meses previstos fora do permitido */

begin
select	qt_min_meses,
	qt_max_meses
into STRICT	qt_min_meses_w,
	qt_max_meses_w
from	sus_proc_finalidade
where	ie_finalidade		= ie_finalidade_w
and	ie_origem_proced	= ie_origem_proced_w
and (coalesce(cd_procedimento,cd_procedimento_w)	= cd_procedimento_w	or coalesce(cd_procedimento_w::text, '') = '')
and (coalesce(cd_subgrupo_bpa,cd_subgrupo_bpa_w)	= cd_subgrupo_bpa_w 	or coalesce(cd_subgrupo_bpa_w::text, '') = '')
and (coalesce(cd_grupo_bpa,cd_grupo_bpa_w) 	= cd_grupo_bpa_w 	or coalesce(cd_grupo_bpa_w::text, '') = '');
exception
	when others then
		qt_meses_prev_w	:= 0;
end;

if (sus_obter_incolaudo_ativa(5)) and (qt_meses_prev_w	> 0) and
	((qt_meses_prev_w	< qt_min_meses_w) or (qt_meses_prev_w	> qt_max_meses_w)) then
	ds_detalhe_w	:= 	substr(wheb_mensagem_pck.get_texto(311116,'ie_finalidade_w='|| ie_finalidade_w ||';'||
									'cd_grupo_bpa_w='|| cd_grupo_bpa_w ||';'||
									'cd_subgrupo_bpa_w='|| cd_subgrupo_bpa_w ||';'||
									'cd_procedimento_w='|| cd_procedimento_w ),1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 5, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

/* 6 - Data diagnostico maior que inicio do tratamento */

if (sus_obter_incolaudo_ativa(6)) and (ie_classificacao_w in (11,12,13)) then
	if (dt_diag_cito_hist_w	> dt_inicio_trat_solic_w) 	or (dt_pri_tratamento_w	> dt_seg_tratamento_w)		or (dt_pri_tratamento_w	> dt_ter_tratamento_w)		or (dt_seg_tratamento_w	> dt_ter_tratamento_w)		or
		((coalesce(dt_pri_tratamento_w::text, '') = '') and (dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> ''))	or
		((coalesce(dt_pri_tratamento_w::text, '') = '') and (dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> ''))	or
		((coalesce(dt_seg_tratamento_w::text, '') = '') and (dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> ''))	then
		ds_detalhe_w	:= 	substr(wheb_mensagem_pck.get_texto(311117,'ie_classificacao_w='|| ie_classificacao_w ||';'||
										'dt_diag_cito_hist_w='|| dt_diag_cito_hist_w ||';'||
										'dt_inicio_trat_solic_w='|| dt_inicio_trat_solic_w ||';'||
										'dt_pri_tratamento_w='|| dt_pri_tratamento_w ||';'||
										'dt_seg_tratamento_w='|| dt_seg_tratamento_w ||';'||
										'dt_ter_tratamento_w='|| dt_ter_tratamento_w ),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 6, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

/* 7 - Informado numero de meses realizados para primeiro laudo ou mudanca de procedimento */

if (sus_obter_incolaudo_ativa(7)) and (ie_classificacao_w in (11,12,13)) then
	if	((nr_laudo_sus_w = 1) or (ie_origem_laudo_apac_w = 1)) and (qt_meses_autorizado_w > 0) then
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w ||
				', '|| ds_msg_orig_laudo_w || ie_origem_laudo_apac_w || 
				', '|| wheb_mensagem_pck.get_texto(311123) || qt_meses_autorizado_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 7, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

/* 8 - Continuidade do tratamento informado para primeiro laudo ou mudanca de procedimento */

if (sus_obter_incolaudo_ativa(8)) and (ie_classificacao_w in (11,12,13)) then
	if	((nr_laudo_sus_w = 1) or (ie_origem_laudo_apac_w = 1)) and (ie_continuidade_trat_w = 'S') then
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w ||
					', '|| ds_msg_orig_laudo_w || ie_origem_laudo_apac_w || 
					', '|| wheb_mensagem_pck.get_texto(311134) || ie_continuidade_trat_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 8, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
end if;

/* 9 - Quantidade de meses realizados maior ou igual do que os meses autorizados */

if (sus_obter_incolaudo_ativa(9)) and (ie_classificacao_w in (11,12,13)) and (qt_meses_autorizado_w	>= qt_meses_prev_ww) then
	ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w ||
				', '|| wheb_mensagem_pck.get_texto(311135,'qt_meses_autorizado_w='|| qt_meses_autorizado_w ||';'||'qt_meses_prev_ww='|| qt_meses_prev_ww ),1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 9, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(10)) then
	begin
	if	((ie_tipo_laudo_apac_w = '03') or (ie_tipo_laudo_apac_w = '04')) and (coalesce(cd_grau_histopat_w::text, '') = '') then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 10, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(11)) then
	begin
	if (ie_tipo_laudo_apac_w = '03') and (coalesce(cd_cid_topografia_w::text, '') = '') then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 11, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(12)) then
	begin
	if (ie_tipo_laudo_apac_w = '03') and (coalesce(qt_meses_planejados_w::text, '') = '') then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 12, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(13)) then
		begin
	if (ie_tipo_laudo_apac_w = '03') and (coalesce(qt_meses_autorizados_w::text, '') = '') then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 13, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(14)) then
	begin
	if	((ie_tipo_laudo_apac_w = '03') or (ie_tipo_laudo_apac_w = '04')) and (coalesce(dt_inicio_tratamento_w::text, '') = '') then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 14, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(15)) then
	begin
	if	((ie_tipo_laudo_apac_w = '03') or (ie_tipo_laudo_apac_w = '04')) and
		((coalesce(ie_linfonodos_reg_inv_w::text, '') = '') or (ie_linfonodos_reg_inv_w ='')) then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 15, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(16)) and (cd_cid_topografia_w IS NOT NULL AND cd_cid_topografia_w::text <> '') then
	begin
	select	coalesce(max(ie_estadio), 'N')
	into STRICT	ie_estadio_w
	from	cid_doenca
	where	cd_doenca_cid	= cd_cid_topografia_w;

	if	((ie_estadio_w	= 'N') and
		not(coalesce(cd_estadio_w::text, '') = '')) or
		((ie_estadio_w	= 'S') and (coalesce(cd_estadio_w::text, '') = '')) then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 16, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(17)) then
	begin
	if (ie_tipo_laudo_apac_w = '04') and (coalesce(ie_finalidade_w::text, '') = '') then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 17, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(18)) then
	begin
	if (ie_tipo_laudo_apac_w = '03') and
		((coalesce(cd_cid_principal_w::text, '') = '') or (coalesce(cd_cid_topografia_w::text, '') = '') or (coalesce(ie_linfonodos_reg_inv_w::text, '') = '') or (coalesce(cd_grau_histopat_w::text, '') = '') or (coalesce(dt_diag_cito_hist_w::text, '') = '') or (coalesce(ie_tratamento_ant_w::text, '') = '') or (coalesce(dt_inicio_tratamento_w::text, '') = '') or (coalesce(ds_sigla_esquema_w::text, '') = '')) then
		begin
		ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w|| ie_origem_laudo_apac_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 18, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;
if (sus_obter_incolaudo_ativa(19)) and (dt_pri_tratamento_w IS NOT NULL AND dt_pri_tratamento_w::text <> '') and (dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '') and (dt_seg_tratamento_w  <= dt_pri_tratamento_w) then
	ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 19, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(20)) and (dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '') and (dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> '') and (dt_pri_tratamento_w IS NOT NULL AND dt_pri_tratamento_w::text <> '') and
	((dt_ter_tratamento_w	<=dt_seg_tratamento_w) or (dt_ter_tratamento_w	<=dt_pri_tratamento_w)) then
	ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p,20, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(21)) and (dt_pri_tratamento_w IS NOT NULL AND dt_pri_tratamento_w::text <> '') and (dt_diag_cito_hist_w IS NOT NULL AND dt_diag_cito_hist_w::text <> '') and (dt_diag_cito_hist_w > dt_pri_tratamento_w) then
	ds_detalhe_w	:= substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p,21, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(22)) and (ie_tipo_atendimento_w  = 1) then
        select  count(*)
        into STRICT    qt_cbo_profissional_w
        from    sus_cbo_pessoa_fisica
        where   cd_pessoa_fisica        = cd_medico_w;

        select  count(*)
        into STRICT    qt_cbo_proc_w
        from    sus_procedimento_cbo
        where   cd_procedimento         = cd_procedimento_w
        and     ie_origem_proced        = ie_origem_proced_w;

        select  count(*)
        into STRICT    qt_cbo_compativel_w
        from    sus_cbo_pessoa_fisica   a
        where   a.cd_pessoa_fisica      = cd_medico_w
	and	dt_emissao_w between coalesce(a.dt_inicio_vigencia,dt_emissao_w) and coalesce(a.dt_fim_vigencia,dt_emissao_w)
	and	coalesce(a.cd_estab_exclusivo,cd_estabelecimento_w) = cd_estabelecimento_w
        and     exists (SELECT 1 from sus_procedimento_cbo x where a.cd_cbo = x.cd_cbo and cd_procedimento = cd_procedimento_w and ie_origem_proced = ie_origem_proced_w);

        if (qt_cbo_profissional_w  > 0) and (qt_cbo_proc_w  > 0) and (qt_cbo_compativel_w = 0) then
                begin
                ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p,22, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
                end;
        end if;
end if;

if (sus_obter_incolaudo_ativa(23)) and (ie_diaria_uti_w <> 'N') then
	begin
	if (ie_diaria_uti_w	= 'UTI1') then
		begin
		select	count(*)
		into STRICT	qt_diaria_uti_w
		from	sus_habilitacao_hospital
		where	cd_habilitacao in (2699)
		and	cd_estabelecimento	= cd_estabelecimento_w;
		end;
	elsif (ie_diaria_uti_w	= 'UTI2') then
		begin
		select	count(*)
		into STRICT	qt_diaria_uti_w
		from	sus_habilitacao_hospital
		where	cd_habilitacao in (2601,2602,2603)
		and	cd_estabelecimento	= cd_estabelecimento_w;
		end;
	else
		begin
		select	count(*)
		into STRICT	qt_diaria_uti_w
		from	sus_habilitacao_hospital
		where	cd_habilitacao in (2604,2605,2606)
		and	cd_estabelecimento	= cd_estabelecimento_w;
		end;
	end if;
	if (qt_diaria_uti_w	= 0) then
		begin
		ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p,23, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(24)) and (cd_estadio_w IS NOT NULL AND cd_estadio_w::text <> '') 	and (sus_validar_regra(63,cd_procedimento_w,ie_origem_proced_w,dt_emissao_w)	> 0) and (cd_estadio_w		<> 1) then
	ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p,24, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(25)) and (cd_estadio_w IS NOT NULL AND cd_estadio_w::text <> '') 	and (sus_validar_regra(66,cd_procedimento_w,ie_origem_proced_w,dt_emissao_w)	> 0) and (cd_estadio_w		<> 2) then
	ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p,25, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;


if (sus_obter_incolaudo_ativa(26)) and (cd_estadio_w IS NOT NULL AND cd_estadio_w::text <> '') 	and (sus_validar_regra(67,cd_procedimento_w,ie_origem_proced_w,dt_emissao_w)	> 0) and (cd_estadio_w		<> 3) then
	ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p,26, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(27)) and
	((coalesce(nr_cartao_nac_sus_w,'X') = 'X') or (nr_cartao_nac_sus_w = '')) then
	ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p,27, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(28)) and (cd_procedimento_w = 0304080012) then
	ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p,28, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(29)) and (cd_cid_topografia_w  <> cd_cid_principal_w) then
	ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p,29, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;

if (sus_obter_incolaudo_ativa(60)) then
	begin

	select	count(*)
	into STRICT	qt_proc_compat_w
	from	sus_proc_compativel b
	where	b.cd_proc_principal		= cd_procedimento_w
	and	b.ie_origem_proc_princ	= ie_origem_proced_w;

	if (coalesce(qt_proc_compat_w,0) > 0) then
		begin

		open c01;
		loop
		fetch c01 into
			cd_proc_secundario_w,
			ie_origem_proc_adic_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			select	count(*)
			into STRICT	qt_proc_incompativel_w
			from	sus_proc_compativel b
			where	b.cd_proc_principal		= cd_procedimento_w
			and	b.ie_origem_proc_princ	= ie_origem_proced_w
			and	b.cd_proc_secundario	= cd_proc_secundario_w
			and	b.ie_origem_proc_sec	= ie_origem_proc_adic_w
			and	b.ie_tipo_compatibilidade 	= 2;

			if (qt_proc_incompativel_w = 0) then
				begin
				select	count(*)
				into STRICT	qt_proc_incompativel_w
				
				where	not exists (	SELECT	1
						from	sus_proc_compativel b
						where	b.cd_proc_principal		= cd_procedimento_w
						and	b.ie_origem_proc_princ	= ie_origem_proced_w
						and	b.cd_proc_secundario	= cd_proc_secundario_w
						and	b.ie_origem_proc_sec	= ie_origem_proc_adic_w);
				end;
			end if;

			if (qt_proc_incompativel_w > 0) then
				begin
				ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w ||
							', '|| ds_msg_orig_laudo_w || ie_origem_laudo_apac_w|| 
							','|| wheb_mensagem_pck.get_texto(311136,'cd_procedimento_w='||cd_procedimento_w||';'||'cd_proc_secundario_w='||cd_proc_secundario_w),1,255);
				CALL sus_laudo_gravar_inco(nr_seq_laudo_p,60, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
				end;
			end if;

			end;
		end loop;
		close c01;

		end;
	end if;

	end;
end if;
/* 61 - Falta informar CID diagnostico principal para o laudo AIH */

if (sus_obter_incolaudo_ativa(61)) and (ie_classificacao_w = 1) and (coalesce(cd_cid_principal_w::text, '') = '') then
	ds_detalhe_w	:= substr(ds_msg_cd_proced_w||cd_procedimento_w || ','||wheb_mensagem_pck.get_texto(311109)|| cd_cid_principal_w ||','||wheb_mensagem_pck.get_texto(311110) || ie_classificacao_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 61, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;
/* 67 - CEP de residencia do paciente nao informado. */

if (sus_obter_incolaudo_ativa(67)) and
	((coalesce(cd_cep_w,'X') = 'X') or (cd_cep_w = '')) then
	ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || ', '||ds_msg_orig_laudo_w || ie_origem_laudo_apac_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p,67, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
end if;
/* 61 - Falta informar CID diagnostico secundario para o laudo AIH */

if (sus_obter_incolaudo_ativa(68)) and (ie_classificacao_w = 1) then
	begin
	
	select	count(*)
	into STRICT	qt_registros_w
	from	sus_procedimento_cid_sec
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;
	
	if (qt_registros_w > 0) then
		begin
		
		select	count(*)
		into STRICT	qt_registros_w
		from	sus_procedimento_cid_sec
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	cd_doenca_cid_sec	= coalesce(cd_cid_secundario_w,'X');
		
		if (qt_registros_w = 0) then
			begin
			ds_detalhe_w	:= substr(ds_msg_cd_proced_w||cd_procedimento_w || ','||wheb_mensagem_pck.get_texto(311137)|| cd_cid_secundario_w ||','||wheb_mensagem_pck.get_texto(311110) || ie_classificacao_w,1,255);
			CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 68, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
			end;
		end if;
		
		end;
	end if;
	
	end;
end if;

/* 70 Procedimento solicitado incompativel com a habilitacao do Hospital */

if (sus_obter_incolaudo_ativa(70)) then
	begin
	select	coalesce(max(sus_consiste_habilitacao_proc(cd_procedimento_w,ie_origem_proced_w,clock_timestamp(),cd_estabelecimento_w)),'S')
	into STRICT	ie_habilitacao_w
	;
	if (ie_habilitacao_w = 'N') then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '||ds_msg_nr_laudo_w|| nr_seq_laudo_p,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 70, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
		end;
	end if;
	end;
	open C01;
	loop
	fetch C01 into	
		cd_proc_secundario_w,
		ie_origem_proc_adic_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	coalesce(max(sus_consiste_habilitacao_proc(cd_proc_secundario_w,ie_origem_proc_adic_w,clock_timestamp(),cd_estabelecimento_w)),'S')
		into STRICT	ie_habilitacao_w
		;
		if (ie_habilitacao_w = 'N') then
			begin
			ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '||wheb_mensagem_pck.get_texto(311138)||cd_proc_secundario_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p,1,255);
			CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 70, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
			end;
		end if;		
		end;
	end loop;
	close C01;		
end if;

/*Ja existe um laudo para acompanhamento pos-transplante com o mesmo CID*/

if (sus_obter_incolaudo_ativa(71)) then
	begin
	
	select	count(*)
	into STRICT	qt_registros_w
	from	sus_laudo_paciente a,
		atendimento_paciente b
	where	a.nr_seq_interno <> nr_seq_laudo_p
	and	a.cd_procedimento_solic = 506010023
	and	a.nr_atendimento = b.nr_atendimento
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
	and	a.cd_cid_principal = cd_cid_principal_w
	and	exists (SELECT	1
			from 	sus_apac_unif x
			where	x.nr_atendimento = b.nr_atendimento
			and	x.cd_procedimento = a.cd_procedimento_solic
			and	x.cd_cid_principal = a.cd_cid_principal
			and	clock_timestamp() <= x.dt_fim_validade)
	and	not exists (select	1
			from 	sus_apac_unif x
			where	x.nr_atendimento = b.nr_atendimento
			and	x.cd_procedimento = a.cd_procedimento_solic
			and	x.cd_cid_principal = a.cd_cid_principal
			and	clock_timestamp() <= x.dt_fim_validade
			and	(x.dt_ocorrencia IS NOT NULL AND x.dt_ocorrencia::text <> ''));
	
	if (qt_registros_w > 0) then
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p || ', '||wheb_mensagem_pck.get_texto(311139)||obter_nome_pf(cd_pessoa_fisica_w),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 71, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(72)) then
	begin
	
	select	count(*)
	into STRICT	qt_registros_w
	from	sus_laudo_paciente a,
		atendimento_paciente b
	where	a.nr_seq_interno <> nr_seq_laudo_p
	and	a.cd_procedimento_solic <> 506010023
	and	a.cd_procedimento_solic = cd_procedimento_w
	and	a.nr_atendimento = b.nr_atendimento
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
	and	exists (SELECT	1
			from 	sus_apac_unif x
			where	x.nr_atendimento = b.nr_atendimento
			and	x.cd_procedimento = a.cd_procedimento_solic
			and	x.ie_tipo_apac <> 1
			and	clock_timestamp() <= x.dt_fim_validade)
	and	not exists ( select	1
			from 	sus_apac_unif x
			where	x.nr_atendimento = b.nr_atendimento
			and	x.cd_procedimento = a.cd_procedimento_solic
			and	clock_timestamp() <= x.dt_fim_validade
			and	(x.dt_ocorrencia IS NOT NULL AND x.dt_ocorrencia::text <> ''));
		
	if (qt_registros_w > 0) then
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p || ', '||wheb_mensagem_pck.get_texto(311139)||obter_nome_pf(cd_pessoa_fisica_w),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 72, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
	end if;
	
	end;
end if;

if (sus_obter_incolaudo_ativa(73)) and (ie_tipo_laudo_apac_w = '03') then
	begin
	
	begin
	select	coalesce(sum(l.qt_procedimento),0),
		l.cd_procedimento
	into STRICT	qt_proc_adic_w,
		cd_proc_secundario_w
	from	sus_laudo_proced_adic l
	where	sus_obter_estrut_proc(l.cd_procedimento,l.ie_origem_proced,'C','S') = '304'
	and	sus_obter_estrut_proc(l.cd_procedimento,l.ie_origem_proced,'C','S') <> '30401'
	and	l.nr_seq_laudo = nr_seq_laudo_p
	group	by cd_procedimento;	
	exception
	when others then
		qt_proc_adic_w	:= 0;
		cd_proc_secundario_w := 0;
	end;
	
	if (qt_proc_adic_w > 1) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '||wheb_mensagem_pck.get_texto(311138)|| cd_proc_secundario_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 73, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

/* O tipo de registro do procedimento nao corresponde a classificacao do laudo */

if (sus_obter_incolaudo_ativa(74)) then
	begin
	if (ie_classificacao_w = 1) and (sus_obter_tiporeg_proc(cd_procedimento_w, ie_origem_proced_w, 'C', 2) not in (3,4,5)) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ||', '|| wheb_mensagem_pck.get_texto(311149),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 74, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	elsif (ie_classificacao_w in (11,12,13,14)) and (sus_obter_tiporeg_proc(cd_procedimento_w, ie_origem_proced_w, 'C', 3) not in (6,7)) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ||', '|| wheb_mensagem_pck.get_texto(311150),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 74, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	elsif (ie_classificacao_w = 15) and (sus_obter_tiporeg_proc(cd_procedimento_W, ie_origem_proced_w, 'C', 1) not in (1,2)) then	
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ||', '|| wheb_mensagem_pck.get_texto(311151),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 74, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(90)) and (Sus_Obter_Se_Detalhe_Proc(cd_procedimento_w, ie_origem_proced_w, '023',dt_emissao_w) > 0) then
	begin	
	ds_detalhe_w := substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 90, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;

if (sus_obter_incolaudo_ativa(91)) and (Sus_Obter_Se_Detalhe_Proc(cd_procedimento_w, ie_origem_proced_w, '025',dt_emissao_w) > 0) then
	begin
	ds_detalhe_w := substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 91, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;

if (sus_obter_incolaudo_ativa(92))	and (coalesce(cd_cns_requisitante_w,'X') = 'X') then
	begin
	ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_laudo_sus_w ||', '|| wheb_mensagem_pck.get_texto(311152) || cd_medico_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 92, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;

/*93 - Divergencia de informacao de CID e data dos tratamentos no laudo*/

if (sus_obter_incolaudo_ativa(93)) then
	begin
	if	((coalesce(cd_cid_prim_trat_w,'X') = 'X') and (dt_pri_tratamento_w IS NOT NULL AND dt_pri_tratamento_w::text <> '')) or
		((coalesce(cd_cid_prim_trat_w,'X') <> 'X') and (coalesce(dt_pri_tratamento_w::text, '') = '')) then
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ,1,255);
		CALL sus_laudo_gravar_inco( nr_seq_laudo_p, 93, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if	((coalesce(cd_cid_seg_trat_w,'X') = 'X') and (dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '')) or
		((coalesce(cd_cid_seg_trat_w,'X') <> 'X') and (coalesce(dt_seg_tratamento_w::text, '') = '')) then
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ,1,255);
		CALL sus_laudo_gravar_inco( nr_seq_laudo_p, 93, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	
	if	((coalesce(cd_cid_terc_trat_w,'X') = 'X') and (dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> '')) or
		((coalesce(cd_cid_terc_trat_w,'X') <> 'X') and (coalesce(dt_ter_tratamento_w::text, '') = '')) then
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ,1,255);
		CALL sus_laudo_gravar_inco( nr_seq_laudo_p, 93, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end if;
	end;
end if;

if (sus_obter_incolaudo_ativa(94))	and (cd_procedimento_w in (506010015,506010023,506010031)) and (coalesce(dt_transplante_w::text, '') = '') then
	begin
	ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_laudo_sus_w ||', '|| wheb_mensagem_pck.get_texto(311153)|| dt_transplante_w,1,255);
	CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 94, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
	end;
end if;


if (sus_obter_incolaudo_ativa(94)) then
	begin
	
	qt_reg_prim_cid_w	 	:= 999;
	qt_reg_seg_cid_w	 	:= 999;
	qt_reg_terc_cid_w		:= 999;	
	
	
	select	count(*)
	into STRICT	qt_registros_w
	from	sus_procedimento_cid
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;
	
	if (qt_registros_w > 0) and (coalesce(cd_cid_prim_trat_w,'X') <> 'X') then
		
		select	count(*)
		into STRICT	qt_reg_prim_cid_w
		from	sus_procedimento_cid
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	cd_doenca_cid		= coalesce(cd_cid_prim_trat_w,'X');
	
	end if;
	
	if (qt_registros_w > 0) and (coalesce(cd_cid_seg_trat_w,'X') <> 'X') then
			
		select	count(*)
		into STRICT	qt_reg_seg_cid_w
		from	sus_procedimento_cid
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	cd_doenca_cid		= coalesce(cd_cid_seg_trat_w,'X');
		
	end if;
	
		
	if (qt_registros_w > 0 ) and (coalesce(cd_cid_terc_trat_w,'X') <> 'X')then
	
		select	count(*)
		into STRICT	qt_reg_terc_cid_w
		from	sus_procedimento_cid
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	cd_doenca_cid		= coalesce(cd_cid_terc_trat_w,'X');
		
	end if;
		
	if (qt_reg_prim_cid_w = 0) then

		ds_detalhe_w	:= substr(ds_msg_cd_proced_w||cd_procedimento_w || ', '||wheb_mensagem_pck.get_texto(327637)|| ' ' || cd_cid_prim_trat_w ||', '||wheb_mensagem_pck.get_texto(327640),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 95, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	

	elsif (qt_reg_seg_cid_w = 0) then
		
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w||cd_procedimento_w || ', '||wheb_mensagem_pck.get_texto(327638)|| ' ' ||cd_cid_seg_trat_w ||', '||wheb_mensagem_pck.get_texto(327640),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 95, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
	elsif (qt_reg_terc_cid_w = 0) then
		
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w||cd_procedimento_w || ', '||wheb_mensagem_pck.get_texto(327639)|| ' ' ||cd_cid_terc_trat_w ||', '||wheb_mensagem_pck.get_texto(327640),1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 95, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);	
		
	end if;
	
	end;
end if;

if (sus_obter_incolaudo_ativa(95)) then
	
	qt_reg_cid_area_w		:= 999;
	qt_controle_w			:= 0;

	select	count(*)
	into STRICT	qt_registros_w
	from	sus_procedimento_cid
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;
	
	if (qt_registros_w > 0) then
	
	open C02;
	loop
	fetch C02 into	
		cd_doenca_cid_area_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
	
		select	count(*)
		into STRICT	qt_reg_cid_area_w
		from	sus_procedimento_cid
		where	cd_procedimento		= cd_procedimento_w
		and	ie_origem_proced	= ie_origem_proced_w
		and	cd_doenca_cid		= coalesce(cd_doenca_cid_area_w,'X');
		
		if (qt_reg_cid_area_w = 0) and (qt_controle_w = 0) then
			
			ds_detalhe_w	:= substr(ds_msg_cd_proced_w||cd_procedimento_w || ', '||wheb_mensagem_pck.get_texto(327648)||' ' || cd_doenca_cid_area_w ||', '||wheb_mensagem_pck.get_texto(327640),1,255);
			CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 96, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
			qt_controle_w := qt_controle_w + 1;
		end if;

		
		
		end;
	end loop;
	close C02;
	
	end if;
	
end if;

if (sus_obter_incolaudo_ativa(97)) then
	begin
	
	begin
	select	count(1)
	into STRICT	qt_proc_ativo_w
	from	procedimento
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	ie_situacao		= 'A'  LIMIT 1;	
	exception
	when others then
		qt_proc_ativo_w := 0;
	end;
	
	if (qt_proc_ativo_w = 0) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_laudo_sus_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 97, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;

if	((sus_obter_incolaudo_ativa(98)) and (ie_tipo_laudo_apac_w	= '12')) then
	begin

	begin
	select	coalesce(qt_diametro_veia,0)
	into STRICT	qt_diametro_veia_w
	from	sus_laudo_paciente a
	where	a.nr_seq_interno	= nr_seq_laudo_p;
	exception
	when others then
		qt_diametro_veia_w := 0;
	end;
	if (qt_diametro_veia_w = 0) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_laudo_sus_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 98, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;	

if	((sus_obter_incolaudo_ativa(99)) and (ie_tipo_laudo_apac_w	= '12')) then
	begin

	begin
	select	coalesce(qt_diametro_arteria,0)
	into STRICT	qt_diametro_arteria_w
	from	sus_laudo_paciente a
	where	a.nr_seq_interno	= nr_seq_laudo_p;
	exception
	when others then
		qt_diametro_arteria_w := 0;
	end;

	if (qt_diametro_arteria_w = 0) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_laudo_sus_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 99, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;	

if	((sus_obter_incolaudo_ativa(100)) and (ie_tipo_laudo_apac_w	= '12')) then
	begin

	begin
	select	coalesce(ie_fremito_traj_fav,0)
	into STRICT	ie_fremito_traj_fav_w
	from	sus_laudo_paciente a
	where	a.nr_seq_interno	= nr_seq_laudo_p;
	exception
	when others then
		ie_fremito_traj_fav_w := 0;
	end;
	if (ie_fremito_traj_fav_w = 0) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_laudo_sus_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 100, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;

if (sus_obter_incolaudo_ativa(101)) then
	begin

	begin
	select	a.dt_nascimento
	into STRICT	dt_nascimento_w
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;	
	exception
	when others then
		dt_nascimento_w := null;
	end;
	
	begin
	qt_idade_pac_w	:= sus_obter_idade_pac_proc(dt_emissao_w,dt_nascimento_w);	
	exception
	when others then
		qt_idade_pac_w	:= 0;
	end;

	/* Obter dados do procedimento */

	begin
	select	substr(sus_converte_idade_anos(b.qt_idade_minima,'C'),1,10),
		substr(sus_converte_idade_anos(b.qt_idade_minima,'D'),1,15),
		substr(sus_converte_idade_anos(b.qt_idade_maxima,'C'),1,10),
		substr(sus_converte_idade_anos(b.qt_idade_maxima,'D'),1,15)
	into STRICT	qt_idade_minima_w,
		ds_idade_minima_w,
		qt_idade_maxima_w,
		ds_idade_maxima_w
	from	sus_procedimento	b,
		procedimento		a
	where	a.cd_procedimento	= cd_procedimento_w
	and	a.ie_origem_proced	= ie_origem_proced_w
	and	a.cd_procedimento	= b.cd_procedimento
	and	a.ie_origem_proced	= b.ie_origem_proced;
	exception
	when others then
		qt_idade_minima_w	:= 0;
		qt_idade_maxima_w	:= 0;
	end;
	
	if (qt_idade_pac_w > 0) and
		((qt_idade_maxima_w > 0 AND qt_idade_pac_w > qt_idade_maxima_w) or
		(qt_idade_minima_w > 0 AND qt_idade_pac_w < qt_idade_minima_w)) then
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '
					|| ds_msg_nr_laudo_w || nr_laudo_sus_w
					|| WHEB_MENSAGEM_PCK.get_texto(279032)||REPLACE(REPLACE(REPLACE(Obter_Idade(dt_nascimento_w,dt_emissao_w,'S'),'a', WHEB_MENSAGEM_PCK.get_texto(279033)),'m', WHEB_MENSAGEM_PCK.get_texto(279034)),'d', WHEB_MENSAGEM_PCK.get_texto(279036))
					|| WHEB_MENSAGEM_PCK.get_texto(279037)|| ds_idade_minima_w
					|| WHEB_MENSAGEM_PCK.get_texto(279038)|| ds_idade_maxima_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 101, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		
	end if;

	end;
end if;	

if (sus_obter_incolaudo_ativa(102)) then
	begin
	
	begin
	select	dt_inicio,
		dt_termino
	into STRICT	dt_inicio_w,
		dt_termino_w
	from	sus_laudo_area_irradiada
	where	nr_seq_laudo = nr_seq_laudo_p;	
	exception
	when others then
		dt_inicio_w	:= clock_timestamp();
		dt_termino_w	:= clock_timestamp();
	end;
	
	if (dt_inicio_w > dt_termino_w) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p ||', '|| ds_msg_dt_inicial_w || dt_inicio_w ||', '|| ds_msg_dt_final_w || dt_termino_w,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 102, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;

/* 103 - Procedimento adicional incompativel com o procedimento principal do laudo */

if (sus_obter_incolaudo_ativa(103)) then
	begin
		if (ie_tipo_laudo_sus_w = 2) then

			select	max(dt_liberacao)
			into STRICT	dt_liberacao_w
			from 	sus_laudo_paciente
			where 	nr_atendimento 		= nr_atendimento_w
			and  	ie_tipo_laudo_sus 	= 0;

			select	max(nr_seq_interno)
			into STRICT    nr_seq_interno_w
			from 	sus_laudo_paciente
			where 	nr_atendimento 		= nr_atendimento_w
			and  	ie_tipo_laudo_sus 	= 0
			and  	dt_liberacao 		= dt_liberacao_w;

			select	cd_procedimento_solic,
				ie_origem_proced
			into STRICT	cd_procedimento_princ_w,
				ie_origem_proced_princ_w
			from 	sus_laudo_paciente
			where 	nr_seq_interno	= nr_seq_interno_w;

			begin

			select	count(*)
			into STRICT	qt_proc_compat_w
			from	sus_proc_compativel b
			where	b.cd_proc_principal 	= cd_procedimento_princ_w
			and	b.ie_origem_proc_princ	= ie_origem_proced_w;

			if (coalesce(qt_proc_compat_w,0) > 0) then
				begin

				select	count(*)
				into STRICT	qt_proc_incompativel_w
				from	sus_proc_compativel b
				where	b.cd_proc_principal		= cd_procedimento_princ_w
				and	b.ie_origem_proc_princ		= ie_origem_proced_princ_w
				and	b.cd_proc_secundario		= cd_procedimento_w
				and	b.ie_origem_proc_sec		= ie_origem_proced_w
				and	b.ie_tipo_compatibilidade	= 2;

				if (qt_proc_incompativel_w = 0) then
					begin
					
					select	count(1)
					into STRICT	qt_proc_compat_w
					from	sus_proc_compativel b
					where	b.cd_proc_principal		= cd_procedimento_princ_w
					and	b.ie_origem_proc_princ		= ie_origem_proced_w
					and	b.ie_tipo_compatibilidade	= 1;
					
					if (qt_proc_compat_w > 0) then
						select	count(*)
						into STRICT	qt_proc_incompativel_w
						
						where	not exists (	SELECT	1
								from	sus_proc_compativel b
								where	b.cd_proc_principal	= cd_procedimento_princ_w
								and	b.ie_origem_proc_princ	= ie_origem_proced_princ_w
								and	b.cd_proc_secundario	= cd_procedimento_w
								and	b.ie_origem_proc_sec	= ie_origem_proced_w);						
					end if;

					end;
				end if;

				if (qt_proc_incompativel_w > 0) then
					begin
					ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w ||
								', '|| wheb_mensagem_pck.get_texto(311136,'cd_procedimento_w='||cd_procedimento_princ_w||';'||'cd_proc_secundario_w='||cd_procedimento_w),1,255);
					CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 103, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
					end;
				end if;

				end;
			end if;

			end;
		end if;

	end;
end if;

/* 104 - A quantidade de procedimentos especiais ultrapassa o maximo para a compatibilidade com o procedimento principal */

if (sus_obter_incolaudo_ativa(104)) then
    begin
        for c01_w in c01 loop
            cd_procedimento_ww := c01_w.cd_procedimento;

        begin
            select  sum(a.qt_procedimento)
            into STRICT    qt_procedimento_w
            from    sus_laudo_proced_adic a,
                    sus_laudo_paciente b
            where   b.nr_seq_interno = a.nr_seq_laudo
            and     a.cd_procedimento = cd_procedimento_ww
            and     b.cd_procedimento_solic = cd_procedimento_w
            and     coalesce(b.nr_aih::text, '') = ''
            and     trunc(b.dt_emissao,'month') = trunc(dt_emissao_w,'month')
            and     b.nr_atendimento = nr_atendimento_w;
                exception
                when others then
                qt_procedimento_w := 0;
        end;
        begin
            select  qt_proc_permitida
            into STRICT    qt_proc_permitida_w
            from    sus_proc_compativel
            where   cd_proc_principal = cd_procedimento_w
            and     cd_proc_secundario = cd_procedimento_ww
            and     ie_tipo_compatibilidade = 1;
            exception
                when others then
                qt_proc_permitida_w := 0;
    	end;

            if (qt_procedimento_w > qt_proc_permitida_w) then
                begin
                ds_detalhe_w    := substr(ds_msg_nr_laudo_w || nr_laudo_sus_w || 
                                ', '|| wheb_mensagem_pck.get_texto(311136,'cd_procedimento_w='||cd_procedimento_w||';'||'cd_proc_secundario_w='||cd_procedimento_ww),1,255);
                CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 104, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
                end;
            end if;
        end loop;
    end;
end if;

/* 105 - O procedimento solicitado no laudo nao e do tipo de registro AIH principal. */

if (sus_obter_incolaudo_ativa(105)) and (ie_classificacao_w = 1) and (ie_tipo_laudo_sus_w = 0) then
	begin

	if (sus_obter_tiporeg_proc(cd_procedimento_w,ie_origem_proced_w,'C',13) <> 3) then
		begin
		ds_detalhe_w	:= substr(ds_msg_cd_proced_w|| cd_procedimento_w ||', '|| ds_msg_nr_laudo_w || nr_seq_laudo_p,1,255);
		CALL sus_laudo_gravar_inco(nr_seq_laudo_p, 105, ds_detalhe_w, cd_estabelecimento_w, nm_usuario_p);
		end;
	end if;
	
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_laudo ( nr_seq_laudo_p bigint, nm_usuario_p text) FROM PUBLIC;

