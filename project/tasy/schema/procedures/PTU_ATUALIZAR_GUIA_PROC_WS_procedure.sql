-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_atualizar_guia_proc_ws ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Ao receber uma solicitação de procedimento via WebService, e a função autorizadora é a
OPS - Requisições para autorização, a requisição gerada é executada no momento em que é recebida. Assim, no processo
de requisição, é necessário atualizar a guia gerada quando a requisição sofreu alguma alteração na unimed de origem.
Portanto, essa rotina verifica se a requisição passada por parametro foi recebida via WebService (TISS)
e atualiza a guia conforme os dados da requisição.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X ]  Objetos do dicionário [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ie_origem_solic_w	pls_requisicao.ie_origem_solic%type;
ie_estagio_w		pls_requisicao.ie_estagio%type;

nr_seq_guia_w		pls_guia_plano.nr_sequencia%type;

procedure atualizar_glosa_cabecalho_guia is

qt_glosa_guia_w		smallint;

cRequisicaoGlosa CURSOR(nr_seq_requisicao_c_p	pls_requisicao.nr_sequencia%type) FOR
	SELECT	ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,
		nm_usuario,		nm_usuario_nrec,	nr_seq_exec_mat,
		nr_seq_exec_proc,	nr_seq_execucao,	nr_seq_motivo_glosa,
		nr_seq_ocorrencia,	nr_seq_req_mat,		nr_seq_req_proc,
		nr_seq_requisicao,	nr_sequencia
	from	pls_requisicao_glosa
	where	nr_seq_requisicao	= nr_seq_requisicao_c_p;
BEGIN

	for	r_cRequisicaoGlosa_w in cRequisicaoGlosa(nr_seq_requisicao_p) loop
		select	count(1)
		into STRICT	qt_glosa_guia_w
		from	pls_guia_glosa
		where	nr_seq_guia		= nr_seq_guia_w
		and	coalesce(nr_seq_guia_proc::text, '') = ''
		and	coalesce(nr_seq_guia_mat::text, '') = ''
		and	nr_seq_motivo_glosa	= r_cRequisicaoGlosa_w.nr_seq_motivo_glosa;

		-- Se a glosa já existir na guia, não é necessário inserir novamente.
		if	qt_glosa_guia_w	= 0 then
			insert	into	pls_guia_glosa(nr_sequencia,
					ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,
					nm_usuario,		nm_usuario_nrec,	nr_seq_guia,
					nr_seq_motivo_glosa,	nr_seq_ocorrencia)
				values (nextval('pls_guia_glosa_seq'),
					r_cRequisicaoGlosa_w.ds_observacao,	r_cRequisicaoGlosa_w.dt_atualizacao,	r_cRequisicaoGlosa_w.dt_atualizacao_nrec,
					r_cRequisicaoGlosa_w.nm_usuario,		r_cRequisicaoGlosa_w.nm_usuario_nrec,	nr_seq_guia_w,
					r_cRequisicaoGlosa_w.nr_seq_motivo_glosa,	r_cRequisicaoGlosa_w.nr_seq_ocorrencia);
		end if;
	end loop;

end;

procedure atualizar_cabecalho_guia(ie_estagio_p		pls_requisicao.ie_estagio%type) is
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Atualizar o cabeçalho da guia conforme a requisição.
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
begin
	-- Atualizando a guia
	update	pls_guia_plano
	set	ie_status	= CASE WHEN ie_estagio_p=1 THEN  2 WHEN ie_estagio_p=	-- Aberta				- Em análise
					2 THEN  1 WHEN ie_estagio_p=	-- Aprovada				- Autorizado
					3 THEN  3 WHEN ie_estagio_p=	-- Cancelada				- Negado
					4 THEN  2 WHEN ie_estagio_p=	-- Auditoria				- Em análise
					5 THEN  2 WHEN ie_estagio_p=	-- Auditoria Intercâmbio		- Em análise
					6 THEN  1 WHEN ie_estagio_p=	-- Parcialmente Aprovada		- Autorizado
					7 THEN  3 WHEN ie_estagio_p=	-- Reprovada				- Negado
					8 THEN  2 WHEN ie_estagio_p=	-- Aguardando autorização do contratante- Em análise
					9 THEN  1 WHEN ie_estagio_p=	-- Autorizada pelo contratante		- Autorizado
					10 THEN  2  ELSE 	-- Aguardando envio Intercâmbio		- Em análise
					ie_estagio_p END ,
		ie_estagio	= CASE WHEN ie_estagio_p=1 THEN  7 WHEN ie_estagio_p=	-- Aberta				- Usuário (aguardando ação)
					2 THEN  6 WHEN ie_estagio_p=	-- Aprovada				- Autorizado sem glosa
					3 THEN  8 WHEN ie_estagio_p=	-- Cancelada				- Cancelada
					4 THEN  11 WHEN ie_estagio_p=	-- Auditoria				- Auditoria intercâmbio
					5 THEN  11 WHEN ie_estagio_p=	-- Auditoria Intercâmbio		- Auditoria intercâmbio
					6 THEN  10 WHEN ie_estagio_p=	-- Parcialmente Aprovada		- Autorizado sem glosa
					7 THEN  4 WHEN ie_estagio_p=	-- Reprovada				- Negado
					8 THEN  9 WHEN ie_estagio_p=	-- Aguardando autorização do contratante- Aguardando autorização do contratante
					9 THEN  6 WHEN ie_estagio_p=	-- Autorizada				- Autorizado sem glosa
					10 THEN  12  ELSE 	-- Aguardando envio Intercâmbio		- Aguardando autorização intercâmbio
					ie_estagio_p END ,
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_guia_w;
	-- Inserindo as glosas do cabeçalho.
	atualizar_glosa_cabecalho_guia;

end;

procedure atualizar_glosa_item_guia(	nr_seq_guia_proc_p	pls_guia_plano_proc.nr_sequencia%type,
					nr_seq_guia_mat_p	pls_guia_plano_mat.nr_sequencia%type,
					nr_seq_req_proc_p	pls_requisicao_proc.nr_sequencia%type,
					nr_seq_req_mat_p	pls_requisicao_mat.nr_sequencia%type) is
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Atualiza as glosas dos itens da guia conforme a requisição.
-------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_glosa_guia_w		number(1);

-- Percorre pelas glosas dos itens da requisição.
cRequisicaoGlosaItem CURSOR(	nr_seq_requisicao_c_p	pls_requisicao.nr_sequencia%type,
				nr_seq_proc_c_p		pls_requisicao_mat.nr_sequencia%type,
				nr_seq_mat_c_p		pls_requisicao_proc.nr_sequencia%type) FOR

	SELECT	ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,-- procedimentos
		nm_usuario,		nm_usuario_nrec,	nr_seq_exec_mat,
		nr_seq_exec_proc,	nr_seq_execucao,	nr_seq_motivo_glosa,
		nr_seq_ocorrencia,	nr_seq_req_mat,		nr_seq_req_proc,
		nr_seq_requisicao,	nr_sequencia
		--Restringe o nr_seq_requisicao
	from (	SELECT	ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,-- procedimentos
			nm_usuario,		nm_usuario_nrec,	nr_seq_exec_mat,
			nr_seq_exec_proc,	nr_seq_execucao,	nr_seq_motivo_glosa,
			nr_seq_ocorrencia,	nr_seq_req_mat,		nr_seq_req_proc,
			nr_seq_requisicao,	nr_sequencia
		from	pls_requisicao_glosa
		where	nr_seq_requisicao	= nr_seq_requisicao_c_p
		and	nr_seq_req_proc		= nr_seq_proc_c_p
		
union all

		select	ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,-- materiais
			nm_usuario,		nm_usuario_nrec,	nr_seq_exec_mat,
			nr_seq_exec_proc,	nr_seq_execucao,	nr_seq_motivo_glosa,
			nr_seq_ocorrencia,	nr_seq_req_mat,		nr_seq_req_proc,
			nr_seq_requisicao,	nr_sequencia
		from	pls_requisicao_glosa
		where	nr_seq_requisicao	= nr_seq_requisicao_c_p
		and	nr_seq_req_mat		= nr_seq_mat_c_p) alias1
	
union all

	select	ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,-- procedimentos
		nm_usuario,		nm_usuario_nrec,	nr_seq_exec_mat,
		nr_seq_exec_proc,	nr_seq_execucao,	nr_seq_motivo_glosa,
		nr_seq_ocorrencia,	nr_seq_req_mat,		nr_seq_req_proc,
		nr_seq_requisicao,	nr_sequencia
		--Executado caso o nr_seq_requisicao is null
	from (	select	ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,-- procedimentos
			nm_usuario,		nm_usuario_nrec,	nr_seq_exec_mat,
			nr_seq_exec_proc,	nr_seq_execucao,	nr_seq_motivo_glosa,
			nr_seq_ocorrencia,	nr_seq_req_mat,		nr_seq_req_proc,
			nr_seq_requisicao,	nr_sequencia
		from	pls_requisicao_glosa
		where	coalesce(nr_seq_requisicao::text, '') = ''
		and	nr_seq_req_proc		= nr_seq_proc_c_p
		
union all

		select	ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,-- materiais
			nm_usuario,		nm_usuario_nrec,	nr_seq_exec_mat,
			nr_seq_exec_proc,	nr_seq_execucao,	nr_seq_motivo_glosa,
			nr_seq_ocorrencia,	nr_seq_req_mat,		nr_seq_req_proc,
			nr_seq_requisicao,	nr_sequencia
		from	pls_requisicao_glosa
		where	coalesce(nr_seq_requisicao::text, '') = ''
		and	nr_seq_req_mat		= nr_seq_mat_c_p) alias4;
begin
	-- Inserindo as glosas nos itens.
	for	r_cRequisicaoGlosaItem_w in cRequisicaoGlosaItem(nr_seq_requisicao_p, nr_seq_req_proc_p, nr_seq_req_mat_p) loop
		--Verificando quantas glosa tem no item
		select	qt_req
		into STRICT	qt_glosa_guia_w
		from (
			SELECT	qt_req
			from (	SELECT	count(1) qt_req
				from	pls_guia_glosa
				where	nr_seq_guia		= nr_seq_guia_w
				and	nr_seq_guia_proc	= nr_seq_guia_proc
				and	nr_seq_motivo_glosa	= r_cRequisicaoGlosaItem_w.nr_seq_motivo_glosa
				
union all

				select	count(1) qt_req
				from	pls_guia_glosa
				where	nr_seq_guia		= nr_seq_guia_w
				and	nr_seq_guia_mat		= nr_seq_guia_mat
				and	nr_seq_motivo_glosa	= r_cRequisicaoGlosaItem_w.nr_seq_motivo_glosa) alias3
			
union all

			select	qt_req --Caso o nr_seq_guia for null
			from (	select	count(1) qt_req
				from	pls_guia_glosa
				where	coalesce(nr_seq_guia::text, '') = ''
				and	nr_seq_guia_proc	= nr_seq_guia_proc
				and	nr_seq_motivo_glosa	= r_cRequisicaoGlosaItem_w.nr_seq_motivo_glosa
				
union all

				select	count(1) qt_req
				from	pls_guia_glosa
				where	coalesce(nr_seq_guia::text, '') = ''
				and	nr_seq_guia_mat		= nr_seq_guia_mat
				and	nr_seq_motivo_glosa	= r_cRequisicaoGlosaItem_w.nr_seq_motivo_glosa) alias8
		) alias9;

		-- Se a glosa já existir na guia, não é necessário inserir novamente.
		if	qt_glosa_guia_w	= 0 then
			insert	into	pls_guia_glosa(nr_sequencia,
					ds_observacao,		dt_atualizacao,		dt_atualizacao_nrec,
					nm_usuario,		nm_usuario_nrec,	nr_seq_guia,
					nr_seq_motivo_glosa,	nr_seq_ocorrencia,	nr_seq_guia_proc,
					nr_seq_guia_mat)
				values (nextval('pls_guia_glosa_seq'),
					r_cRequisicaoGlosaItem_w.ds_observacao,	r_cRequisicaoGlosaItem_w.dt_atualizacao,	r_cRequisicaoGlosaItem_w.dt_atualizacao_nrec,
					r_cRequisicaoGlosaItem_w.nm_usuario,		r_cRequisicaoGlosaItem_w.nm_usuario_nrec,	nr_seq_guia_w,
					r_cRequisicaoGlosaItem_w.nr_seq_motivo_glosa,	r_cRequisicaoGlosaItem_w.nr_seq_ocorrencia,	nr_seq_guia_proc_p,
					nr_seq_guia_mat_p);
		end if;
	end loop;

end;

function converter_status_item_guia_req(ie_estagio	pls_requisicao_mat.ie_estagio%type) return;
end;

procedure atualizar_itens_guia is
/*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Atualiza os itens da guia conforme os itens da requisição.
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_guia_mat_w	pls_guia_plano_mat.nr_sequencia%type;
nr_seq_guia_proc_w	pls_guia_plano_proc.nr_sequencia%type;
ie_status_w		pls_guia_plano_proc.ie_status%type;

-- Cursor usado para percorrer os procedimentos da requisição e atualizar na guia, caso a origem da requisição for Eletrônico (WebService TISS)
cRequisicaoProc CURSOR(nr_seq_requisicao_c_p	pls_requisicao.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		ie_origem_proced,
		cd_procedimento,
		qt_solicitado,
		qt_procedimento,
		ie_tipo_anexo,
		ie_estagio,
		ie_status
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_c_p;

-- Cursor usado para percorrer os materiais da requisição e atualizar na guia, caso a origem da requisição for Eletrônico (WebService TISS)
cRequisicaoMat CURSOR(nr_seq_requisicao_c_p	pls_requisicao.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		nr_seq_material,
		qt_solicitado,
		qt_material,
		ie_tipo_anexo,
		ie_estagio,
		ie_status
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_c_p;
begin
	-- Atualização dos itens:
	--	Para atualizar os itens da guia conforme a requisição, a única integridade entre eles é a execução e o código dos itens,
	--	caso venha duas vezes um item com mesmo código, não é possível saber qual item da requisição esse item da guia está referenciando.
	--	Por isso, estamos percorrendo os itens da requisição e atualizando o primeiro item da guia item que possuir o mesmo código
	--	e origem que o da requisição e que tenha quantidade solicitada "0".
	for	requisicao_proc_w in cRequisicaoProc(nr_seq_requisicao_p) loop
		begin
			select	nr_sequencia
			into STRICT	nr_seq_guia_proc_w
			from (
				SELECT	nr_sequencia
				from	pls_guia_plano_proc
				where	cd_procedimento		= requisicao_proc_w.cd_procedimento
				and	ie_origem_proced	= requisicao_proc_w.ie_origem_proced
				and	qt_solicitada		= 0
				and	nr_seq_guia		= nr_seq_guia_w
				and	ie_tipo_anexo		= requisicao_proc_w.ie_tipo_anexo
				
union all

				SELECT	nr_sequencia
				from	pls_guia_plano_proc
				where	cd_procedimento		= requisicao_proc_w.cd_procedimento
				and	ie_origem_proced	= requisicao_proc_w.ie_origem_proced
				and	qt_solicitada		= 0
				and	nr_seq_guia		= nr_seq_guia_w
				and	coalesce(ie_tipo_anexo::text, '') = ''
				and	coalesce(requisicao_proc_w.ie_tipo_anexo::text, '') = '' 
				 LIMIT 1 OFFSET -1) alias3;
		exception
			when no_data_found then
			nr_seq_guia_proc_w	:= null;
		end;
		ie_status_w	:= converter_status_item_guia_req(requisicao_proc_w.ie_estagio);
		if (nr_seq_guia_proc_w IS NOT NULL AND nr_seq_guia_proc_w::text <> '') then
			update	pls_guia_plano_proc
			set	qt_solicitada		= CASE WHEN requisicao_proc_w.ie_status= -- Só atualizará a quantidade solicitada se o item estiver autorizado
									'P' THEN  requisicao_proc_w.qt_solicitado WHEN requisicao_proc_w.ie_status= -- Liberado pelo usuário
									'S' THEN  requisicao_proc_w.qt_solicitado  ELSE  -- Liberado pelo sistema
									0 END ,
				qt_autorizada		= requisicao_proc_w.qt_procedimento,
				dt_liberacao		= clock_timestamp(),
				nm_usuario_liberacao	= nm_usuario_p,
				ie_status		= ie_status_w
			where	nr_sequencia		= nr_seq_guia_proc_w;
			--Atualizando as glosas para o procedimento.
			atualizar_glosa_item_guia(nr_seq_guia_proc_w, null, requisicao_proc_w.nr_sequencia, null);
		end if;
	end loop;

	for	requisicao_mat_w in cRequisicaoMat(nr_seq_requisicao_p) loop
		begin
			select	nr_sequencia
			into STRICT	nr_seq_guia_mat_w
			from (SELECT	nr_sequencia
				from	pls_guia_plano_mat
				where	nr_seq_material		= requisicao_mat_w.nr_seq_material
				and	qt_solicitada		= 0
				and	nr_seq_guia		= nr_seq_guia_w
				and	ie_tipo_anexo		= requisicao_mat_w.ie_tipo_anexo
				
union all

				SELECT	nr_sequencia
				from	pls_guia_plano_mat
				where	nr_seq_material		= requisicao_mat_w.nr_seq_material
				and	qt_solicitada		= 0
				and	nr_seq_guia		= nr_seq_guia_w
				and	coalesce(ie_tipo_anexo::text, '') = ''
				and	coalesce(requisicao_mat_w.ie_tipo_anexo::text, '') = '' 
				 LIMIT 1 OFFSET -1) alias3;
		exception
			when no_data_found then
			nr_seq_guia_mat_w	:= null;
		end;
		ie_status_w	:= converter_status_item_guia_req(requisicao_mat_w.ie_estagio);
		if (nr_seq_guia_mat_w IS NOT NULL AND nr_seq_guia_mat_w::text <> '') then
			update	pls_guia_plano_mat
			set	qt_solicitada		= CASE WHEN requisicao_mat_w.ie_status= -- Só atualizará a quantidade solicitada se o item estiver autorizado
									'P' THEN  requisicao_mat_w.qt_solicitado WHEN requisicao_mat_w.ie_status= -- Liberado pelo usuário
									'S' THEN  requisicao_mat_w.qt_solicitado  ELSE  -- Liberado pelo sistema
									0 END ,
				qt_autorizada		= requisicao_mat_w.qt_material,
				dt_liberacao		= clock_timestamp(),
				nm_usuario_liberacao	= nm_usuario_p,
				ie_status		= ie_status_w
			where	nr_sequencia		= nr_seq_guia_mat_w;
			--Atualizando as glosas para o material.
			atualizar_glosa_item_guia(null, nr_seq_guia_mat_w, null, requisicao_mat_w.nr_sequencia);
		end if;
	end loop;
end;

begin

	begin
		select	ie_origem_solic,
			ie_estagio
		into STRICT	ie_origem_solic_w,
			ie_estagio_w
		from	pls_requisicao
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception
	when others then
		ie_origem_solic_w	:= null;
		ie_estagio_w		:= null;
	end;

	-- Quando uma solicitação vem por WebService (TISS), a mesma é executada no momento em que chega, mesmo que não seja
	--	autorizada, nesse caso, a guia é gerada, e os itens não autorizados ficam com quantidade solicitada "0".
	if (coalesce(ie_origem_solic_w,'X') = 'E') then

		select	nr_seq_guia
		into STRICT	nr_seq_guia_w
		from	pls_execucao_requisicao
		where	nr_seq_requisicao	= nr_seq_requisicao_p;

		atualizar_cabecalho_guia(ie_estagio_w);
		atualizar_itens_guia;
	end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_atualizar_guia_proc_ws ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

