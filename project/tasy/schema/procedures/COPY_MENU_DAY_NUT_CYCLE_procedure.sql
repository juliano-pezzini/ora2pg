-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copy_menu_day_nut_cycle ( nr_seq_cardapio_p bigint, nr_seq_serv_destino_p bigint, ie_tipo_copia_p text, nr_seq_local_p bigint, ie_substituir_p text, nr_seq_cycle_day_p text, nr_seq_cycle_p NUT_CARDAPIO_DIA.NR_SEQ_CYCLE%type ) AS $body$
DECLARE


  nr_sequencia_w          	bigint;

  nr_seq_comp_w           	bigint;

  nr_seq_receita_w        	bigint;

  nr_seq_card_dia_w       	bigint;

  dt_ini_destino_w        	timestamp;

  dt_fim_destino_w        	timestamp;

  ie_dia_semana_w         	smallint;

  ie_semana_w             	smallint;

  qt_refeicao_w           	bigint;

  nr_seq_grupo_producao_w 	bigint;

  cd_dieta_w              	bigint;

  nr_seq_opcao_w          	bigint;

  nr_seq_local_w          	bigint;

  nr_seq_servico_w        	bigint;

  day_w                     	integer;



  c_new_copy CURSOR(nr_seq_source_day_p bigint)

  FOR

    SELECT a.nr_seq_comp,

      a.nr_seq_receita,

      a.qt_refeicao

    FROM nut_cardapio a

    WHERE a.nr_seq_card_dia = nr_seq_source_day_p

    AND ((ie_substituir_p   = 'N')

    OR NOT EXISTS (SELECT 1

      FROM nut_cardapio b

      WHERE b.nr_seq_card_dia = nr_sequencia_w

      AND b.nr_seq_comp       = a.nr_seq_comp

      AND b.nr_seq_receita    = a.nr_seq_receita

      ))

    ORDER BY nr_seq_comp;

    
    
    C01 CURSOR FOR

    SELECT a.nr_seq_comp,

      a.nr_seq_receita,

      a.qt_refeicao

    FROM nut_cardapio a

    WHERE a.nr_seq_card_dia = nr_seq_cardapio_p

    AND ((ie_substituir_p   = 'N')

    OR NOT EXISTS (SELECT 1

      FROM nut_cardapio b

      WHERE b.nr_seq_card_dia = nr_sequencia_w

      AND b.nr_seq_comp       = a.nr_seq_comp

      AND b.nr_seq_receita    = a.nr_seq_receita

      ))

    ORDER BY nr_seq_comp;



    C02 CURSOR FOR

      SELECT DISTINCT b.NR_SEQUENCIA

      FROM nut_cardapio_dia a,

        nut_cardapio_dia b

      WHERE a.NR_SEQUENCIA   = nr_seq_cardapio_p

      AND a.NR_SEQ_CYCLE     = b.NR_SEQ_CYCLE

      AND a.nr_seq_cycle_day = b.nr_seq_cycle_day

      AND a.NR_SEQ_SERVICO   = b.NR_SEQ_SERVICO

      AND a.nr_seq_local     = b.nr_seq_local;



    c03 CURSOR FOR



	SELECT cycle_day FROM (WITH RECURSIVE cte AS (
WITH comma_separated AS (SELECT nr_seq_cycle_day_p cycle_day )

	SELECT substr(str,

                     instr(str, ',', 1, 1) + 1,

                     instr(str, ',', 1, LEVEL + 1) -

                     instr(str, ',', 1, LEVEL) - 1) cycle_day

	FROM (SELECT row_number() OVER () AS r,

                      ','|| cycle_day ||',' AS STR

                 FROM   comma_separated ) alias5  UNION ALL
WITH comma_separated AS (SELECT nr_seq_cycle_day_p cycle_day )

	SELECT substr(str,

                     instr(str, ',', 1, (c.level+1)) + 1,

                     instr(str, ',', 1, (c.level+1) + 1) -

                     instr(str, ',', 1, (c.level+1)) - 1) cycle_day

	FROM (SELECT row_number() OVER () AS r,

                      ','|| cycle_day ||',' AS STR

                 FROM   comma_separated ) JOIN cte c ON (c.r = r)

) SELECT * FROM cte AND instr(str, ',', 1, LEVEL + 1) > 0;
) alias11;



  d RECORD;
BEGIN



      SELECT dt_validity_start, dt_validity_end

      into STRICT dt_ini_destino_w, dt_fim_destino_w

      FROM cycle_menu

      WHERE  nr_sequencia = nr_seq_cycle_p;



    IF (ie_tipo_copia_p   = 'O') AND (nr_seq_cardapio_p IS NOT NULL AND nr_seq_cardapio_p::text <> '') THEN

    

      IF (ie_substituir_p = 'S') THEN

        SELECT nr_seq_grupo_producao,

          cd_dieta,

          nr_seq_opcao,

          nr_seq_local,

          nr_seq_servico

        INTO STRICT nr_seq_grupo_producao_w,

          cd_dieta_w,

          nr_seq_opcao_w,

          nr_seq_local_w,

          nr_seq_servico_w

        FROM nut_cardapio_dia

        WHERE nr_sequencia = nr_seq_cardapio_p;

      END IF;



      

     FOR d IN (SELECT cycle_day FROM (WITH RECURSIVE cte AS (
WITH comma_separated AS (SELECT nr_seq_cycle_day_p cycle_day )

	SELECT substr(str,

                     instr(str, ',', 1, 1) + 1,

                     instr(str, ',', 1, LEVEL + 1) -

                     instr(str, ',', 1, LEVEL) - 1) cycle_day

       FROM (SELECT row_number() OVER () AS r,

                      ','|| cycle_day ||',' AS STR

                 FROM   comma_separated ) alias5  UNION ALL
WITH comma_separated AS (SELECT nr_seq_cycle_day_p cycle_day )

	SELECT substr(str,

                     instr(str, ',', 1, (c.level+1)) + 1,

                     instr(str, ',', 1, (c.level+1) + 1) -

                     instr(str, ',', 1, (c.level+1)) - 1) cycle_day

       FROM (SELECT row_number() OVER () AS r,

                      ','|| cycle_day ||',' AS STR

                 FROM   comma_separated ) JOIN cte c ON (c.r = r)

) SELECT * FROM cte AND instr(str, ',', 1, LEVEL + 1) > 0;
))



      LOOP

      

        SELECT MAX(nr_sequencia)

        INTO STRICT nr_sequencia_w

        FROM nut_cardapio_dia

        WHERE nr_seq_servico             = coalesce(nr_seq_serv_destino_p,nr_seq_servico_w)

        AND coalesce(nr_seq_grupo_producao,0) = coalesce(nr_seq_grupo_producao_w,0)

        AND coalesce(cd_dieta,0)              = coalesce(cd_dieta_w,0)

        AND coalesce(nr_seq_opcao,0)          = coalesce(nr_seq_opcao_w,0)

        AND coalesce(nr_seq_local,0)          = coalesce(nr_seq_local_w,0)

        AND coalesce(nr_seq_cycle,0)          = coalesce(nr_seq_cycle_p,0)

        AND coalesce(nr_seq_cycle_day,0)      = coalesce(d.cycle_day,0);



        IF (coalesce(nr_sequencia_w::text, '') = '') THEN

          SELECT nextval('nut_cardapio_dia_seq') INTO STRICT nr_sequencia_w;



          INSERT

          INTO nut_cardapio_dia(

              nr_sequencia,

              cd_estabelecimento,

              dt_atualizacao,

              nm_usuario,

              nr_seq_servico,

              dt_cardapio,

              qt_pessoa_atend,

              dt_atualizacao_nrec,

              nm_usuario_nrec,

              nr_seq_opcao,

              ie_dia_semana,

              ie_semana,

              dt_vigencia_inicial,

              dt_vigencia_final,

              cd_dieta,

              nr_seq_local,

              nr_seq_grupo_producao,

              nr_seq_cycle,

              NR_SEQ_CYCLE_DAY

            ) 

            (SELECT nr_sequencia_w,

                cd_estabelecimento,

                clock_timestamp(),

                wheb_usuario_pck.get_nm_usuario,

                coalesce(nr_seq_serv_destino_p,nr_seq_servico),

                dt_cardapio,

                qt_pessoa_atend,

                clock_timestamp(),

                wheb_usuario_pck.get_nm_usuario,

                nr_seq_opcao,

                ie_dia_semana_w,

                ie_semana_w,

                dt_ini_destino_w,

                dt_fim_destino_w,

                cd_dieta,

                nr_seq_local,

                nr_seq_grupo_producao,

                nr_seq_cycle_p,

                d.cycle_day

              FROM nut_cardapio_dia

              WHERE nr_sequencia = nr_seq_cardapio_p

            );

        END IF;



        OPEN C01;

        LOOP

          FETCH C01 INTO nr_seq_comp_w, nr_seq_receita_w, qt_refeicao_w;

          EXIT WHEN NOT FOUND; /* apply on C01 */

          BEGIN

            INSERT

            INTO nut_cardapio(

                nr_sequencia,

                nr_seq_card_dia,

                dt_atualizacao,

                nm_usuario,

                nr_seq_comp,

                nr_seq_receita,

                dt_atualizacao_nrec,

                nm_usuario_nrec,

                qt_refeicao

              )

              VALUES (

                nextval('nut_cardapio_seq'),

                nr_sequencia_w,

                clock_timestamp(),

                wheb_usuario_pck.get_nm_usuario,

                nr_seq_comp_w,

                nr_seq_receita_w,

                clock_timestamp(),

                wheb_usuario_pck.get_nm_usuario,

                qt_refeicao_w

              );

          END;

        END LOOP;

        CLOSE C01;

      END LOOP;

    elsif (ie_tipo_copia_p = 'D') THEN

      OPEN c02;

      LOOP

        FETCH C02 INTO nr_seq_card_dia_w;

        EXIT WHEN NOT FOUND; /* apply on C02 */

        BEGIN

          nr_sequencia_w := NULL;



          IF (ie_substituir_p = 'S') THEN

            SELECT nr_seq_grupo_producao,

              cd_dieta,

              nr_seq_opcao,

              nr_seq_local,

              nr_seq_servico

            INTO STRICT nr_seq_grupo_producao_w,

              cd_dieta_w,

              nr_seq_opcao_w,

              nr_seq_local_w,

              nr_seq_servico_w

            FROM nut_cardapio_dia

            WHERE nr_sequencia = nr_seq_card_dia_w;

          END IF;

          open c03;

          LOOP

          fetch c03 into day_w;

           EXIT WHEN NOT FOUND; /* apply on C03 */

          if (ie_substituir_p = 'S') then

            SELECT MAX(nr_sequencia)

            INTO STRICT nr_sequencia_w

            FROM nut_cardapio_dia

            WHERE nr_seq_servico             = nr_seq_servico_w

            AND coalesce(nr_seq_grupo_producao,0) = coalesce(nr_seq_grupo_producao_w,0)

            AND coalesce(cd_dieta,0)              = coalesce(cd_dieta_w,0)

            AND coalesce(nr_seq_opcao,0)          = coalesce(nr_seq_opcao_w,0)

            AND coalesce(nr_seq_local,0)          = coalesce(nr_seq_local_p,0)

            AND coalesce(nr_seq_cycle,0)          = coalesce(nr_seq_cycle_p,0)

            AND coalesce(nr_seq_cycle_day,0)      = coalesce(day_w,0);

            else

            nr_sequencia_w:=null;

            end if;

            IF (coalesce(nr_sequencia_w::text, '') = '') THEN

              SELECT nextval('nut_cardapio_dia_seq') INTO STRICT nr_sequencia_w;

              INSERT

              INTO nut_cardapio_dia(

                  nr_sequencia,

                  cd_estabelecimento,

                  dt_atualizacao,

                  nm_usuario,

                  nr_seq_servico,

                  dt_cardapio,

                  qt_pessoa_atend,

                  dt_atualizacao_nrec,

                  nm_usuario_nrec,

                  nr_seq_opcao,

                  ie_dia_semana,

                  ie_semana,

                  dt_vigencia_inicial,

                  dt_vigencia_final,

                  cd_dieta,

                  nr_seq_local,

                  nr_seq_grupo_producao,

                  nr_seq_cycle,

                  nr_seq_cycle_day

                )

                (SELECT nr_sequencia_w,

                    cd_estabelecimento,

                    clock_timestamp(),

		    wheb_usuario_pck.get_nm_usuario,

                    nr_seq_servico,

                    dt_cardapio,

                    qt_pessoa_atend,

                    clock_timestamp(),

                    wheb_usuario_pck.get_nm_usuario,

                    nr_seq_opcao,

                    ie_dia_semana_w,

                    ie_semana_w,

                    dt_ini_destino_w,

                    dt_fim_destino_w,

                    cd_dieta,

                    nr_seq_local_p,

                    nr_seq_grupo_producao,

                    nr_seq_cycle_p,

                    day_w

                  FROM nut_cardapio_dia

                  WHERE nr_sequencia = nr_seq_card_dia_w

                );

            END IF;

            FOR rec in c_new_copy(nr_seq_card_dia_w)

            LOOP

              nr_seq_comp_w := rec.nr_seq_comp;
              nr_seq_receita_w := rec.nr_seq_receita;
              qt_refeicao_w := rec.nr_seq_receita;

              EXIT WHEN NOT FOUND; /* apply on c_new_copy */

              BEGIN

                INSERT

                INTO nut_cardapio(

                    nr_sequencia,

                    nr_seq_card_dia,

                    dt_atualizacao,

                    nm_usuario,

                    nr_seq_comp,

                    nr_seq_receita,

                    dt_atualizacao_nrec,

                    nm_usuario_nrec,

                    qt_refeicao

                  )

                  VALUES (

                    nextval('nut_cardapio_seq'),

                    nr_sequencia_w,

                    clock_timestamp(),

                    wheb_usuario_pck.get_nm_usuario,

                    nr_seq_comp_w,

                    nr_seq_receita_w,

                    clock_timestamp(),

                    wheb_usuario_pck.get_nm_usuario,

                    qt_refeicao_w

                  );

              END;

            END LOOP;

          END LOOP; -- end of d2
          CLOSE C03;

        END;

      END LOOP;

      CLOSE C02;

    END IF;

    commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copy_menu_day_nut_cycle ( nr_seq_cardapio_p bigint, nr_seq_serv_destino_p bigint, ie_tipo_copia_p text, nr_seq_local_p bigint, ie_substituir_p text, nr_seq_cycle_day_p text, nr_seq_cycle_p NUT_CARDAPIO_DIA.NR_SEQ_CYCLE%type ) FROM PUBLIC;

