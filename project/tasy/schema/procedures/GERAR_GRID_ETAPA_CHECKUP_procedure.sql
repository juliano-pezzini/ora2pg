-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE colunas AS (nm_coluna_w varchar(255), 
			nr_seq_etapa_w	bigint);


CREATE OR REPLACE PROCEDURE gerar_grid_etapa_checkup ( nm_usuario_p text, dt_referencia_p timestamp) AS $body$
DECLARE

 
/* vetor */
type vetor is table of colunas index by integer;

 
 
/* globais */
 
vetor_w			vetor;
contador_w		bigint := 0;
ivet			bigint := 0;
ind			integer;
nm_coluna_w 		varchar(255);
ds_etapa_w		varchar(100);
nr_sequencia_w		bigint;
nr_atendimento_w	bigint;
nr_seq_etapa_w		bigint;
nr_seq_etapa_ckup_w	bigint;
nr_seq_tipo_checkup_etapa_w	bigint;
ie_situacao_w		varchar(100);
ds_comando_w		varchar(3000);
ds_parametro_w		varchar(3000);
dt_prevista_w		timestamp;
dt_confirmacao_w	timestamp;
dt_inicio_real_w	timestamp;
dt_final_etapa_w	timestamp;
dt_cancel_checkup_w 	timestamp;
dt_cancel_etapa_w  	timestamp;
qt_etapa_requerida_w	bigint := 0;
dt_ini_etapa_ideal_w	timestamp;
dt_final_etapa_ideal_w	timestamp;
dt_cancel_etapa_ideal_w timestamp;
cd_estabelecimento_w	bigint;
ds_erro_w		varchar(255);
ie_ordenacao_w		varchar(10)	:= 'S';
dt_referencia_w		timestamp;
qt_maxima_paciente_w	bigint;
qt_min_prev_w		bigint;
ie_leito_pac_w		varchar(1);
nm_pessoa_fisica_w	varchar(255);

C01 CURSOR FOR 
	SELECT substr(coalesce(DS_ETAPA_ABREV,DS_ETAPA),1,100), 
		b.nr_seq_etapa 
	from  	checkup a, 
		checkup_etapa b, 
		ETAPA_CHECKUP c 
	where 	a.dt_previsto between trunc(dt_referencia_w) and fim_dia(dt_referencia_w) 
	and  	(a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> '') 
	and	b.nr_seq_checkup = a.nr_sequencia 
	and	c.nr_sequencia	= b.nr_seq_etapa 
	and	a.cd_estabelecimento	= cd_estabelecimento_w 
	group by b.nr_seq_etapa,substr(coalesce(DS_ETAPA_ABREV,DS_ETAPA),1,100),c.nr_seq_apres 
	order by coalesce(c.nr_seq_apres,9999999),1;

C02 CURSOR FOR 
	SELECT a.nr_atendimento 
	FROM atendimento_paciente c, checkup_etapa b, checkup a
LEFT OUTER JOIN checkup_prioridade d ON (a.nr_seq_prioridade = d.nr_sequencia)
WHERE a.dt_previsto between trunc(dt_referencia_w) and fim_dia(dt_referencia_w) and (a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> '') and b.nr_seq_checkup = a.nr_sequencia and c.nr_atendimento = a.nr_atendimento  and a.cd_estabelecimento	= cd_estabelecimento_w group by a.nr_atendimento,d.NR_SEQ_APRES,c.dt_entrada,c.cd_pessoa_fisica 
	order by CASE WHEN ie_ordenacao_w='S' THEN coalesce(d.NR_SEQ_APRES,99999) END ,CASE WHEN ie_ordenacao_w='S' THEN c.dt_entrada END ,obter_nome_pf(c.cd_pessoa_fisica);

C03 CURSOR FOR 
	SELECT a.nr_atendimento, 
		a.dt_cancelamento, 
		b.dt_prevista, 
		b.dt_inicio_real, 
		b.dt_fim_etapa, 
		b.dt_confirmacao, 
		b.nr_sequencia, 
  b.dt_cancelamento 
	from  checkup a, 
		checkup_etapa b, 
		atendimento_paciente c 
	where 	a.dt_previsto between trunc(dt_referencia_w) and fim_dia(dt_referencia_w) 
	and  	(a.nr_atendimento IS NOT NULL AND a.nr_atendimento::text <> '') 
	and	b.nr_seq_checkup = a.nr_sequencia 
	and	c.nr_atendimento = a.nr_atendimento 
	and	b.nr_seq_etapa	 = nr_seq_etapa_w 
	and	a.cd_estabelecimento	= cd_estabelecimento_w 
	order by CASE WHEN ie_ordenacao_w='S' THEN coalesce(a.nr_seq_prioridade,9999)  ELSE 0 END  asc, CASE WHEN ie_ordenacao_w='S' THEN c.dt_entrada  ELSE clock_timestamp() END , obter_nome_pf(c.cd_pessoa_fisica);

C04 CURSOR FOR 
	SELECT i.nr_atendimento, 
		t.nr_seq_etapa 
	from  checkup_etapa f, 
		checkup    i, 
		empresa_pessoa_checkup l, 
		contrato_tipo_checkup_pf n, 
		tipo_checkup p, 
		tipo_checkup_etapa r, 
		etapa_checkup_requerida t 
	where  f.nr_sequencia   	= nr_seq_etapa_ckup_w 
	and   f.nr_seq_checkup  	= i.nr_sequencia 
	and   i.cd_pessoa_fisica  	= l.cd_pessoa_fisica 
	and   l.nr_sequencia    	= n.nr_seq_pessoa_checkup 
	and   n.nr_seq_tipo_checkup  = p.nr_sequencia 
	and   p.nr_sequencia     = r.nr_seq_tipo_checkup 
	and   r.nr_seq_etapa     = f.nr_seq_etapa 
	and	i.cd_estabelecimento	= cd_estabelecimento_w 
	and   r.nr_sequencia     = t.nr_seq_checkup_etapa;

C05 CURSOR FOR 
	SELECT 	b.nr_atendimento, 
		e.nr_seq_etapa 
	from  	checkup_etapa a, 
		checkup b, 
		tipo_checkup c, 
		tipo_checkup_etapa d, 
		etapa_checkup_requerida e 
	where 	a.nr_sequencia 		= nr_seq_etapa_ckup_w 
	and  	a.nr_seq_checkup 	= b.nr_sequencia 
	and  	b.nr_seq_tipo_checkup  = c.nr_sequencia 
	and  	c.nr_sequencia     = d.nr_seq_tipo_checkup 
	and  	d.nr_seq_etapa     = a.nr_seq_etapa 
	and  	d.nr_sequencia     = e.nr_seq_checkup_etapa 
	and	exists (	SELECT	1 
				from	checkup_etapa x 
				where	x.nr_seq_checkup	= b.nr_sequencia 
				and	e.nr_seq_etapa		= x.nr_seq_etapa);

 
	 

BEGIN 
begin 
 
ie_ordenacao_w	:= obter_valor_param_usuario(996, 24, Obter_perfil_ativo, nm_usuario_p, Wheb_usuario_pck.get_cd_estabelecimento);
ie_leito_pac_w	:= obter_valor_param_usuario(996, 55, Obter_perfil_ativo, nm_usuario_p, Wheb_usuario_pck.get_cd_estabelecimento);
dt_referencia_w	:= coalesce(dt_referencia_p,clock_timestamp());
 
delete from w_result_check_etapa 
where nm_usuario	= nm_usuario_p;
commit;
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
ivet	:= 0;
open C01;
loop 
fetch C01 into 
	ds_etapa_w, 
	nr_seq_etapa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	ivet := ivet + 1;
	vetor_w[ivet].nm_coluna_w 	:= ds_etapa_w;
	vetor_w[ivet].nr_seq_etapa_w 	:= nr_seq_etapa_w;
	end;
end loop;
close C01;
 
/* completar vetor se necess√°rio */
 
ind := ivet;
while(ind < 50) loop 
	begin 
	ind := ind + 1;
	vetor_w[ind].nm_coluna_w := null;
	vetor_w[ind].nr_seq_etapa_w := null;
	end;
end loop;
 
select	coalesce(max(nr_sequencia),0)+1 
into STRICT	nr_sequencia_w 
from	w_result_check_etapa;
 
 
insert into w_result_check_etapa( 
	nr_sequencia, 
	nm_usuario, 
	dt_atualizacao, 
	ie_ordem, 
	ds_result1, 
	ds_result2, 
	ds_result3, 
	ds_result4, 
	ds_result5, 
	ds_result6, 
	ds_result7, 
	ds_result8, 
	ds_result9, 
	ds_result10, 
	ds_result11, 
	ds_result12, 
	ds_result13, 
	ds_result14, 
	ds_result15, 
	ds_result16, 
	ds_result17, 
	ds_result18, 
	ds_result19, 
	ds_result20, 
	ds_result21, 
	ds_result22, 
	ds_result23, 
	ds_result24, 
	ds_result25, 
	ds_result26, 
	ds_result27, 
	ds_result28, 
	ds_result29, 
	ds_result30, 
	ds_result31, 
	ds_result32, 
	ds_result33, 
	ds_result34, 
	ds_result35, 
	ds_result36, 
	ds_result37, 
	ds_result38, 
	ds_result39, 
	ds_result40, 
	ds_result41, 
	ds_result42, 
	ds_result43, 
	ds_result44, 
	ds_result45, 
	ds_result46, 
	ds_result47, 
	ds_result48, 
	ds_result49, 
	ds_result50 ) 
Values ( nr_sequencia_w, 
	nm_usuario_p, 
	clock_timestamp(), 
	-3, 
	vetor_w[1].nm_coluna_w, 
	vetor_w[2].nm_coluna_w, 
	vetor_w[3].nm_coluna_w, 
	vetor_w[4].nm_coluna_w, 
	vetor_w[5].nm_coluna_w, 
	vetor_w[6].nm_coluna_w, 
	vetor_w[7].nm_coluna_w, 
	vetor_w[8].nm_coluna_w, 
	vetor_w[9].nm_coluna_w, 
	vetor_w[10].nm_coluna_w, 
	vetor_w[11].nm_coluna_w, 
	vetor_w[12].nm_coluna_w, 
	vetor_w[13].nm_coluna_w, 
	vetor_w[14].nm_coluna_w, 
	vetor_w[15].nm_coluna_w, 
	vetor_w[16].nm_coluna_w, 
	vetor_w[17].nm_coluna_w, 
	vetor_w[18].nm_coluna_w, 
	vetor_w[19].nm_coluna_w, 
	vetor_w[20].nm_coluna_w, 
	vetor_w[21].nm_coluna_w, 
	vetor_w[22].nm_coluna_w, 
	vetor_w[23].nm_coluna_w, 
	vetor_w[24].nm_coluna_w, 
	vetor_w[25].nm_coluna_w, 
	vetor_w[26].nm_coluna_w, 
	vetor_w[27].nm_coluna_w, 
	vetor_w[28].nm_coluna_w, 
	vetor_w[29].nm_coluna_w, 
	vetor_w[30].nm_coluna_w, 
	vetor_w[31].nm_coluna_w, 
	vetor_w[32].nm_coluna_w, 
	vetor_w[33].nm_coluna_w, 
	vetor_w[34].nm_coluna_w, 
	vetor_w[35].nm_coluna_w, 
	vetor_w[36].nm_coluna_w, 
	vetor_w[37].nm_coluna_w, 
	vetor_w[38].nm_coluna_w, 
	vetor_w[39].nm_coluna_w, 
	vetor_w[40].nm_coluna_w, 
	vetor_w[41].nm_coluna_w, 
	vetor_w[42].nm_coluna_w, 
	vetor_w[43].nm_coluna_w, 
	vetor_w[44].nm_coluna_w, 
	vetor_w[45].nm_coluna_w, 
	vetor_w[46].nm_coluna_w, 
	vetor_w[47].nm_coluna_w, 
	vetor_w[48].nm_coluna_w, 
	vetor_w[49].nm_coluna_w, 
	vetor_w[50].nm_coluna_w );
commit;
 
open C02;
loop 
fetch C02 into 
	nr_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
 
	select	coalesce(max(nr_sequencia),0)+1 
	into STRICT	nr_sequencia_w 
	from	w_result_check_etapa;
	 
	if (ie_leito_pac_w = 'S') then 
		select	max(cd_unidade||' - '||nm_paciente) 
		into STRICT	nm_pessoa_fisica_w 
		from	atendimento_paciente_v 
		where	nr_atendimento	= nr_atendimento_w;
		 
	elsif (ie_leito_pac_w = 'N') then 
		select	max(substr(obter_nome_pf(cd_pessoa_fisica), 1, 255)) 
		into STRICT	nm_pessoa_fisica_w 
		from	checkup 
		where	nr_atendimento = nr_atendimento_w;
	end if;
 
	insert into w_result_check_etapa( 
		nr_sequencia, 
		nm_usuario, 
		dt_atualizacao, 
		ie_ordem, 
		nr_atendimento, 
		nm_pessoa_fisica) 
	values (	nr_sequencia_w, 
		nm_usuario_p, 
		clock_timestamp(), 
		1, 
		nr_atendimento_w, 
		nm_pessoa_fisica_w);
	end;
end loop;
close C02;
 
ind := 0;
while(ind < 50) loop 
	begin 
	ind := ind + 1;
	nr_seq_etapa_w	:= coalesce(vetor_w[ind].nr_seq_etapa_w,0);
 
	select	qt_maxima_paciente, 
		qt_min_prev 
	into STRICT	qt_maxima_paciente_w, 
		qt_min_prev_w 
	from	etapa_checkup 
	where	nr_sequencia = nr_seq_etapa_w;
	 
	open C03;
	loop 
	fetch C03 into 
		nr_atendimento_w, 
		dt_cancel_checkup_w, 
		dt_prevista_w, 
		dt_inicio_real_w, 
		dt_final_etapa_w, 
		dt_confirmacao_w, 
		nr_seq_etapa_ckup_w, 
		dt_cancel_etapa_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ds_comando_w	:= ' update w_result_check_etapa ' || 
				 ' set ds_result' || to_char(ind) ||' = :ds_valor '|| 
				 ' where nm_usuario = :nm_usuario ' || 
				 ' and	nr_atendimento = :nr_atendimento ';
 
		ie_situacao_w	:= ' ';
		 
		select 	coalesce(max(b.nr_seq_tipo_checkup),0) 
		into STRICT	nr_seq_tipo_checkup_etapa_w 
		from  	checkup_etapa a, 
			checkup b 
		where 	a.nr_sequencia 		= nr_seq_etapa_ckup_w 
		and  	a.nr_seq_checkup 	= b.nr_sequencia;
 
		if (coalesce(nr_seq_tipo_checkup_etapa_w,0) = 0) then 
			begin 
			select count(*) 
			into STRICT	qt_etapa_requerida_w 
			from  checkup_etapa f, 
				checkup    i, 
				empresa_pessoa_checkup l, 
				contrato_tipo_checkup_pf n, 
				tipo_checkup p, 
				tipo_checkup_etapa r, 
				etapa_checkup_requerida t 
			where  f.nr_sequencia   	= nr_seq_etapa_ckup_w 
			and   f.nr_seq_checkup  	= i.nr_sequencia 
			and   i.cd_pessoa_fisica  	= l.cd_pessoa_fisica 
			and   l.nr_sequencia    	= n.nr_seq_pessoa_checkup 
			and   n.nr_seq_tipo_checkup  = p.nr_sequencia 
			and   p.nr_sequencia     = r.nr_seq_tipo_checkup 
			and   r.nr_seq_etapa     = f.nr_seq_etapa 
			and	i.cd_estabelecimento	= cd_estabelecimento_w 
			and   r.nr_sequencia     = t.nr_seq_checkup_etapa;		
			 
			 
			if ( qt_etapa_requerida_w = 0 ) and (Obter_se_etapa_lib(nr_seq_etapa_w) = 'N')and (contador_w = 0)then 
				begin 
				ie_situacao_w	:= 'EI';
				end;
			else 
				begin 
				open C04;
				loop 
				fetch C04 into 
					nr_atendimento_w, 
					nr_seq_etapa_w;	
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin 
					select max(g.dt_inicio_real), 
						max(g.dt_fim_etapa),  
						max(g.dt_cancelamento) 
					into STRICT 	dt_ini_etapa_ideal_w, 
						dt_final_etapa_ideal_w, 
						dt_cancel_etapa_ideal_w 
					from checkup_etapa g, 
					   checkup h 
					where h.nr_atendimento = nr_atendimento_w 
					and  h.nr_sequencia  = g.nr_seq_checkup 
					and  g.nr_seq_etapa  = nr_seq_etapa_w;
					 
					if (dt_ini_etapa_ideal_w IS NOT NULL AND dt_ini_etapa_ideal_w::text <> '' AND dt_final_etapa_ideal_w IS NOT NULL AND dt_final_etapa_ideal_w::text <> '') or (dt_cancel_etapa_ideal_w IS NOT NULL AND dt_cancel_etapa_ideal_w::text <> '') and (Obter_se_etapa_lib(nr_seq_etapa_w) = 'N') and (contador_w = 0)	then 
						ie_situacao_w	:= 'EI';				
					end if;
 
					end;
				end loop;
				close C04;
				end;
			end if;
			end;
		elsif (nr_seq_tipo_checkup_etapa_w > 0) then 
			begin 
			select 	count(*) 
			into STRICT	qt_etapa_requerida_w 
			from  	checkup_etapa a, 
				checkup b, 
				tipo_checkup c, 
				tipo_checkup_etapa d, 
				etapa_checkup_requerida e 
			where 	a.nr_sequencia 		= nr_seq_etapa_ckup_w 
			and  	a.nr_seq_checkup 	= b.nr_sequencia 
			and  	b.nr_seq_tipo_checkup  = c.nr_sequencia 
			and  	c.nr_sequencia     = d.nr_seq_tipo_checkup 
			and  	d.nr_seq_etapa     = a.nr_seq_etapa 
			and  	d.nr_sequencia     = e.nr_seq_checkup_etapa 
			and	exists (	SELECT	1 
						from	checkup_etapa x 
						where	x.nr_seq_checkup	= b.nr_sequencia 
						and	e.nr_seq_etapa		= x.nr_seq_etapa);
 
			if ( qt_etapa_requerida_w = 0 ) and (Obter_se_etapa_lib(nr_seq_etapa_w) = 'N') and (contador_w = 0)then 
				begin 
				ie_situacao_w	:= 'EI';
				end;
			else 
				begin 
				open C05;
				loop 
				fetch C05 into 
					nr_atendimento_w, 
					nr_seq_etapa_w;	
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin 
					select max(g.dt_inicio_real), 
						max(g.dt_fim_etapa),  
						max(g.dt_cancelamento) 
					into STRICT 	dt_ini_etapa_ideal_w, 
						dt_final_etapa_ideal_w, 
						dt_cancel_etapa_ideal_w 
					from checkup_etapa g, 
					   checkup h 
					where h.nr_atendimento = nr_atendimento_w 
					and  h.nr_sequencia  = g.nr_seq_checkup 
					and  g.nr_seq_etapa  = nr_seq_etapa_w;
					 
					if (dt_ini_etapa_ideal_w IS NOT NULL AND dt_ini_etapa_ideal_w::text <> '' AND dt_final_etapa_ideal_w IS NOT NULL AND dt_final_etapa_ideal_w::text <> '') or (dt_cancel_etapa_ideal_w IS NOT NULL AND dt_cancel_etapa_ideal_w::text <> '') and (Obter_se_etapa_lib(nr_seq_etapa_w) = 'N') and (contador_w = 0)then 
						ie_situacao_w	:= 'EI';				
					end if;
 
					end;
				end loop;
				close C05;
				end;
			end if;
			end;
		end if;
 
		if (dt_inicio_real_w IS NOT NULL AND dt_inicio_real_w::text <> '') and (coalesce(dt_final_etapa_w::text, '') = '') then 
			begin 
			ie_situacao_w	:= 'IN';
			end;
		elsif (dt_inicio_real_w IS NOT NULL AND dt_inicio_real_w::text <> '') and (dt_final_etapa_w IS NOT NULL AND dt_final_etapa_w::text <> '') then 
			begin 
			ie_situacao_w	:= 'EN';
			end;
		end if;
		if (dt_cancel_checkup_w IS NOT NULL AND dt_cancel_checkup_w::text <> '') then 
			ie_situacao_w	:= 'CC';
		end if;
		if (dt_cancel_etapa_w IS NOT NULL AND dt_cancel_etapa_w::text <> '') then 
			ie_situacao_w	:= 'CE';
		end if;
		 
		if (dt_inicio_real_w IS NOT NULL AND dt_inicio_real_w::text <> '') and (coalesce(dt_final_etapa_w::text, '') = '') and (coalesce(dt_cancel_etapa_w::text, '') = '') and		 
			(clock_timestamp() > (dt_inicio_real_w + (qt_min_prev_w/1440))) then 
			ie_situacao_w := 'EA';
		end if;
		 
		if (ie_situacao_w = 'EI') then 
			contador_w := contador_w+1;
			 if (contador_w > 1) then 
				ie_situacao_w := ' ';
			  end if;
		end if;
		 
			 
		ie_situacao_w	:= ie_situacao_w || ';'|| to_char(nr_seq_etapa_ckup_w);
		ds_parametro_w	:= 'ds_valor='||ie_situacao_w|| 
				  '#@#@nm_usuario='||nm_usuario_p|| 
				  '#@#@nr_atendimento='||to_char(nr_atendimento_w)||'#@#@';
		if (nr_seq_etapa_w IS NOT NULL AND nr_seq_etapa_w::text <> '') then 
			CALL exec_sql_dinamico_bv('TASY', ds_comando_w, ds_parametro_w);
		end if;
		end;
	end loop;
	close C03;
	end;
end loop;
 
exception 
	when others then 
	ds_erro_w		:= sqlerrm(SQLSTATE);
 
	end;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_grid_etapa_checkup ( nm_usuario_p text, dt_referencia_p timestamp) FROM PUBLIC;

