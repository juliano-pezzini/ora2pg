-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE alterar_status_atend_agenda ( ie_status_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, cd_perfil_p bigint, cd_agenda_p bigint default null, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE

					
nr_seq_agenda_w		agenda_consulta.nr_sequencia%type;
ie_status_agenda_w	varchar(15);
cd_tipo_agenda_w	bigint;
dt_alta_w		timestamp;
ie_mantem_status_alta_w	varchar(15);
ie_atualizar_dt_fim_cons_w	varchar(1);
cd_estabelecimento_w	smallint;
IE_FIM_OUT_AGENDAS_w	varchar(1);
ie_gerar_lanc_aut_exec_w	varchar(1) := 'N';
ie_classif_agenda_w		varchar(5);
ie_status_w varchar(15);
					
c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.ie_status_agenda,
	b.cd_tipo_agenda,
	coalesce(b.ie_lanc_aut_exec,'N'),
	a.ie_classif_agenda
from	agenda b,
	agenda_consulta a
where	a.cd_agenda		= b.cd_agenda
and	a.nr_atendimento	= nr_atendimento_p
and	a.cd_agenda		= cd_agenda_p;


BEGIN

ie_status_w := ie_status_p;
if (ie_status_p = 'EX') then
	ie_status_w := 'E';
end if;

if (nr_atendimento_p > 0) then
	if (ie_status_p in ('A', 'EX')) then
		update	atendimento_paciente
		set	ie_status_atendimento	= ie_status_w
		where	nr_atendimento		= nr_atendimento_p;
		
		select	max(dt_alta),
			max(cd_estabelecimento)
		into STRICT	dt_alta_w,
			cd_estabelecimento_w
		from	atendimento_paciente
		where	nr_atendimento = nr_atendimento_p;
		
		ie_mantem_status_alta_w := obter_param_usuario(898, 11, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_mantem_status_alta_w);
		
		ie_atualizar_dt_fim_cons_w := obter_param_usuario(281, 817, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_dt_fim_cons_w);
		
		select	coalesce(max(IE_FIM_OUT_AGENDAS),'S')
		into STRICT	IE_FIM_OUT_AGENDAS_w
		from	PARAMETRO_AGENDA
		where	cd_estabelecimento = cd_estabelecimento_w;
		
		if (ie_status_p	= 'C') then
			update	atendimento_paciente
			set	dt_atend_medico	= clock_timestamp()
			where	nr_atendimento	= nr_atendimento_p;
		end if;
		
		if (ie_status_p in ('A', 'EX')) and (ie_atualizar_dt_fim_cons_w = 'S') then
			update	atendimento_paciente
			set	dt_fim_consulta	= clock_timestamp()
			where	nr_atendimento	= nr_atendimento_p;
		end if;
		
		if (IE_FIM_OUT_AGENDAS_w	= 'S') then
			open c02;
			loop
			fetch c02 into	nr_seq_agenda_w,
					ie_status_agenda_w,
					cd_tipo_agenda_w,
					ie_gerar_lanc_aut_exec_w,
					ie_classif_agenda_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */										
				if (ie_status_agenda_w not in ('C','B','F','I','II','E','O')) and (ie_mantem_status_alta_w = 'S') and (cd_tipo_agenda_w = 3) then
					update	agenda_consulta
					set	ie_status_agenda	= 'A',
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_seq_agenda_w;
				elsif	((ie_status_agenda_w = 'O') or (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') or (cd_tipo_agenda_w = 5)) and (ie_status_agenda_w not in ('C','B')) then
					update	agenda_consulta
					set	ie_status_agenda	= 'E',
						nm_usuario		= nm_usuario_p,
						NM_USUARIO_ATENDIDO = nm_usuario_p
					where	nr_sequencia		= nr_seq_agenda_w;
					
					if (ie_gerar_lanc_aut_exec_w	= 'S') and (coalesce(nr_atendimento_p,0) > 0) then
						CALL gerar_lancamento_automatico(nr_atendimento_p, null, 539, nm_usuario_p, nr_seq_agenda_p, null, null, null, ie_classif_agenda_w, null);
					end if;
					
				end if;
			end loop;
			close c02; 		

		else
			Select max(b.cd_tipo_agenda)
			into STRICT	cd_tipo_agenda_w
			from	agenda b,
				agenda_consulta a
			where	a.cd_agenda		= b.cd_agenda
			and	a.nr_sequencia = nr_seq_agenda_p;
		
			if (coalesce(cd_tipo_agenda_w,0) = 5) then
			
				update	agenda_consulta
				set	ie_status_agenda	= 'E',
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_seq_agenda_p;		
			
			else
			
				update	agenda_consulta
				set	ie_status_agenda	= ie_status_w,
					nm_usuario		= nm_usuario_p
				where	nr_sequencia		= nr_seq_agenda_p;			
			
			end if;
		
		end if;		
	else
		if (ie_status_p	= 'C') then
			update	atendimento_paciente
			set	dt_atend_medico	= clock_timestamp()
			where	nr_atendimento	= nr_atendimento_p;
		end if;
	
		update	atendimento_paciente
		set	ie_status_atendimento	= ie_status_w
		where	nr_atendimento		= nr_atendimento_p
		and (ie_status_atendimento <> 'A'
                or	coalesce(ie_status_atendimento::text, '') = '');
	end if;
end if;

if (nr_seq_agenda_p > 0) and (ie_status_p = 'C') then
	update	agenda_consulta
	set	ie_status_agenda  	= 'O',
		nm_usuario		= nm_usuario_p
	where	nr_sequencia 		= nr_seq_agenda_p;
elsif (nr_seq_agenda_p > 0 and ie_status_p in ('E', 'EX')) then
	update	agenda_consulta
	set	ie_status_agenda  	= 'E',
      nm_usuario		= nm_usuario_p
	where	nr_sequencia 		= nr_seq_agenda_p;
end if;


commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE alterar_status_atend_agenda ( ie_status_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, cd_perfil_p bigint, cd_agenda_p bigint default null, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

