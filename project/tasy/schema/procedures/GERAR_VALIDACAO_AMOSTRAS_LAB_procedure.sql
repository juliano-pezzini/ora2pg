-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_validacao_amostras_lab ( ID_PACIENTE_P bigint, NR_PRESCRICAO_P text, NR_PRESCR_SEQ_ITEM_P text, NR_PRESCR_PROC_MATERIAL_SEQ_P text, CD_BARRAS_P text, CD_PARAM_734_P text, CD_PARAM_733_P text, CD_PARAM_732_P text, DATA_TYPE_P text, NM_USUARIO_P text, NR_SEQ_CPOE_P bigint, CD_MESSAGE_EXP_P INOUT text, CD_MESSAGE_TYPE_P INOUT text) AS $body$
DECLARE


	ERROR_CODE_W	varchar(250);
	ID_PACIENTE_W	varchar(16);
	CD_BARRAS_W	varchar(100);
	QTD_PACIENTE_W	smallint;
	NR_PRESCRICAO_W	varchar(16);
	NR_PRESCR_SEQ_ITEM_W	varchar(4);
	
	
	NR_ATENDIMENTO_W	varchar(16);
	CD_PESSOA_FISICA_W	varchar(16);
	PATIENT_NAME_W	varchar(150);
	NB_PRESCRIPTION_W	varchar(16);
	NR_SEQ_EXAME_W	bigint;
	EXAM_NAME_W	varchar(150);
	NR_SEQ_FRASCO_W varchar(10);
	DS_FRASCO_W	varchar(100);
	NR_SEQ_MATERIAL_EXAM_W	bigint;
	DS_MATERIAL_EXAM_W	varchar(30);
	SAMPLE_CONTAINER	varchar(100);
	NR_SEQ_INT_PRESCR_W	smallint;
	CD_PRESCRITOR_W	bigint;
	CD_MED_SOLICITANTE_W	bigint;
	REQUESTING_DR_W	varchar(150);
	IE_SUSPENSO_W	varchar(4);
	DT_LIBERACAO_W	timestamp;
	NR_SEQ_AMOSTRA_W	bigint;
	DT_PRESCR_W	timestamp;
	DT_HR_W	timestamp;
	DT_VALIDATE_W	varchar(2);
	
	
	
	CD_PESSOA_FISICA_ESC_W	varchar(10);
	DT_AMOSTRA_COLLECT_ESC_W	timestamp;
	DS_BARCODE_ESC_W	varchar(100);
	DS_VERIFICATION_RESULT_ESC_W	varchar(50);
	CD_MEDICO_SOLICITANTE_ESC_W	varchar(10);
	NR_PRESCRICAO_ESC_W	bigint;
	NR_ITEM_PRESCR_ESC_W	bigint;
	NR_SEQ_EXAME_LAB_ESC_W	bigint;
	NR_SEQ_MATERIAL_EXAME_ESC_W	bigint;
	DS_MATERIAL_EXAME_ESC_W	varchar(50);
	NR_SEQ_FRASCO_ESC_W	bigint;
	DS_FRASCO_ESC_W	varchar(100);
	NR_SEQ_AMOSTRA_ESC_W	bigint;
	IS_ACKNOWLEDGED_W funcao_parametro.ie_consistir_valor%type;
	IS_DATE_FAILED_W varchar(2);
	
	
	QTD_QRY_RETURN	smallint;
	QTD_QRY_ESC_RETURN	smallint;



BEGIN

	ID_PACIENTE_W := ID_PACIENTE_P;
	CD_BARRAS_W := CD_BARRAS_P;
	
	IF (ID_PACIENTE_W IS NOT NULL AND ID_PACIENTE_W::text <> '') THEN
	
		
		
		SELECT count(*) 
		INTO STRICT QTD_PACIENTE_W 
		FROM PESSOA_FISICA pf WHERE pf.CD_PESSOA_FISICA = ID_PACIENTE_W;
		
		IF (QTD_PACIENTE_W < 1) THEN
		
			
			CD_MESSAGE_EXP_P := 1052511;
			CD_MESSAGE_TYPE_P := 'AB';
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(1165368);
		
		ELSE
		
		
	
		IF (CD_BARRAS_W IS NOT NULL AND CD_BARRAS_W::text <> '') THEN
		
			IF (NR_PRESCRICAO_P IS NOT NULL AND NR_PRESCRICAO_P::text <> '' AND NR_PRESCR_SEQ_ITEM_P IS NOT NULL AND NR_PRESCR_SEQ_ITEM_P::text <> '') OR (NR_PRESCR_PROC_MATERIAL_SEQ_P IS NOT NULL AND NR_PRESCR_PROC_MATERIAL_SEQ_P::text <> '') THEN 
			
				
				IF ((NR_PRESCRICAO_P IS NOT NULL AND NR_PRESCRICAO_P::text <> '') AND (NR_PRESCR_SEQ_ITEM_P IS NOT NULL AND NR_PRESCR_SEQ_ITEM_P::text <> '') AND (NR_PRESCRICAO_P != 'N/A')) THEN 
				
					NR_PRESCRICAO_W := NR_PRESCRICAO_P;
					NR_PRESCR_SEQ_ITEM_W := NR_PRESCR_SEQ_ITEM_P;
				
					SELECT count(*)
					INTO STRICT QTD_QRY_RETURN   
					FROM PRESCR_MEDICA pm 
					INNER JOIN PRESCR_PROCEDIMENTO pc ON pc.NR_PRESCRICAO = pm.NR_PRESCRICAO 
                    INNER JOIN PRESCR_PROC_MATERIAL prm ON prm.NR_PRESCRICAO = pm.NR_PRESCRICAO AND prm.NR_SEQ_INT_PRESCR = pc.NR_SEQUENCIA
					WHERE 
						pm.NR_PRESCRICAO = NR_PRESCRICAO_W
						AND pc.NR_SEQUENCIA = NR_PRESCR_SEQ_ITEM_W;
						
					IF ((QTD_QRY_RETURN < 1) OR (QTD_QRY_RETURN > 2)) THEN
					
						
						CD_MESSAGE_EXP_P := 1052513;
						CD_MESSAGE_TYPE_P := 'AB';
						CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164094);
					
					ELSE
					
						SELECT 
                            pm.NR_ATENDIMENTO, pm.CD_PESSOA_FISICA AS PATIENT_ID,  
                            pm.DT_PRESCRICAO AS DT_PRESCR, prh.DT_HORARIO AS DT_HR, pm.NR_PRESCRICAO AS NB_PRESCRIPTION, pc.NR_SEQ_EXAME, OBTER_DESC_EXAME(pc.NR_SEQ_EXAME) AS EXAM_NAME, 
                            (
                                SELECT elf.NR_SEQ_FRASCO FROM  EXAME_LAB_FRASCO elf WHERE elf.NR_SEQ_EXAME = pc.NR_SEQ_EXAME 
                                AND elf.NR_SEQ_MATERIAL = (select mel.NR_SEQUENCIA from MATERIAL_EXAME_LAB mel 
                                WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME))
                            ) AS NR_SEQ_FRASCO,
                            (
                                SELECT OBTER_DESC_FRASCO(elf.NR_SEQ_FRASCO) FROM  EXAME_LAB_FRASCO elf WHERE elf.NR_SEQ_EXAME = pc.NR_SEQ_EXAME 
                                AND elf.NR_SEQ_MATERIAL = (select mel.NR_SEQUENCIA from MATERIAL_EXAME_LAB mel 
                                WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME))
                            ) AS DS_FRASCO,
                            (
                                select mel.NR_SEQUENCIA from MATERIAL_EXAME_LAB mel 
                                WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME)
                            ) AS NR_SEQ_MATERIAL_EXAM,
                            (
                                select mel.DS_MATERIAL_EXAME from MATERIAL_EXAME_LAB mel 
                                WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME)
                            ) AS MATERIAL_EXAME,
                            pc.NR_SEQUENCIA AS NR_SEQ_INT_PRESCR, pm.CD_PRESCRITOR, coalesce(pc.CD_MEDICO_SOLICITANTE, pm.CD_PRESCRITOR) as CD_MEDICO_SOLICITANTE, 
                            pc.IE_SUSPENSO, pm.DT_LIBERACAO, prm.NR_SEQUENCIA AS NR_SEQ_AMOSTRA 
                            INTO STRICT NR_ATENDIMENTO_W, CD_PESSOA_FISICA_W, DT_PRESCR_W, DT_HR_W, NB_PRESCRIPTION_W, NR_SEQ_EXAME_W, EXAM_NAME_W, NR_SEQ_FRASCO_W, DS_FRASCO_W, 
                            NR_SEQ_MATERIAL_EXAM_W, DS_MATERIAL_EXAM_W, NR_SEQ_INT_PRESCR_W, CD_PRESCRITOR_W, CD_MED_SOLICITANTE_W, IE_SUSPENSO_W, DT_LIBERACAO_W, NR_SEQ_AMOSTRA_W
						FROM PRESCR_MEDICA pm 
                            INNER JOIN PRESCR_PROCEDIMENTO pc ON pc.NR_PRESCRICAO = pm.NR_PRESCRICAO 
                            INNER JOIN PRESCR_PROC_MATERIAL prm ON prm.NR_PRESCRICAO = pm.NR_PRESCRICAO AND prm.NR_SEQ_INT_PRESCR = pc.NR_SEQUENCIA
                            INNER JOIN PRESCR_PROC_HOR prh ON prh.NR_PRESCRICAO = pm.NR_PRESCRICAO AND prh.NR_SEQ_PROCEDIMENTO = pc.NR_SEQUENCIA 
						WHERE 
							pm.NR_PRESCRICAO = NR_PRESCRICAO_W 
							AND pc.NR_SEQUENCIA = NR_PRESCR_SEQ_ITEM_W  LIMIT 1;
						
							
						
						IF (coalesce(CD_MED_SOLICITANTE_W::text, '') = '') THEN
						
							REQUESTING_DR_W := CD_PRESCRITOR_W;
						
						ELSE
						
							REQUESTING_DR_W := CD_MED_SOLICITANTE_W;
						
						END IF;
							
						
						IF (CD_PESSOA_FISICA_W = ID_PACIENTE_W) THEN
						
							IF (IE_SUSPENSO_W = 'S') THEN 
							
								
								CD_MESSAGE_EXP_P := 1052517;
								CD_MESSAGE_TYPE_P := 'AB';
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164095);
							
							ELSE
							
									SELECT count(*)
									INTO STRICT QTD_QRY_ESC_RETURN 
									FROM EMAR_SPECIMEN_CHECK esc 
									WHERE 
									esc.NR_SEQ_AMOSTRA = NR_SEQ_AMOSTRA_W;
									
									IF (QTD_QRY_ESC_RETURN > 0) THEN
									
										
										CD_MESSAGE_EXP_P := 1052519;
										CD_MESSAGE_TYPE_P := 'AB';
										CALL Wheb_mensagem_pck.exibir_mensagem_abort(1165367);
									
									ELSE
									
									
										SELECT adep_obtain_acknowledged('P', NR_SEQ_CPOE_P)
										INTO STRICT IS_ACKNOWLEDGED_W
										;
										
										IF (IS_ACKNOWLEDGED_W = 'N') THEN
										
											IF (CD_PARAM_734_P = 'DA') THEN 
									
												IF (TRUNC(DT_PRESCR_W) BETWEEN TRUNC(clock_timestamp() - interval '1 days') AND TRUNC(clock_timestamp())) THEN 
												
													
													IF (CD_PARAM_732_P = 'AL') THEN

														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1204369);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;

													ELSE

														DT_VALIDATE_W := 'N';

													END IF;
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361)||' '||wheb_mensagem_pck.get_texto(1204369);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														IS_DATE_FAILED_W := 'S';
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
												
											ELSIF (CD_PARAM_734_P = 'DP') THEN
											
												IF (TRUNC(DT_PRESCR_W) BETWEEN TRUNC(clock_timestamp()) AND TRUNC(clock_timestamp() + interval '1 days')) THEN
												
													
													IF (CD_PARAM_732_P = 'AL') THEN

														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1204369);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;

													ELSE

														DT_VALIDATE_W := 'N';

													END IF;
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361)||' '||wheb_mensagem_pck.get_texto(1204369);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														IS_DATE_FAILED_W := 'S';
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											ELSIF (CD_PARAM_734_P = 'SA') THEN
											
												IF (TRUNC(DT_PRESCR_W) = TRUNC(clock_timestamp())) THEN
												
													
													IF (CD_PARAM_732_P = 'AL') THEN

														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1204369);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;

													ELSE

														DT_VALIDATE_W := 'N';

													END IF;
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361)||' '||wheb_mensagem_pck.get_texto(1204369);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
														
														IS_DATE_FAILED_W := 'S';
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											END IF;
										
										ELSE
										
											IF (CD_PARAM_734_P = 'DA') THEN 
									
												IF (TRUNC(DT_HR_W) BETWEEN TRUNC(clock_timestamp() - interval '1 days') AND TRUNC(clock_timestamp())) THEN 
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
												
											ELSIF (CD_PARAM_734_P = 'DP') THEN
											
												IF (TRUNC(DT_HR_W) BETWEEN TRUNC(clock_timestamp()) AND TRUNC(clock_timestamp() + interval '1 days')) THEN
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											ELSIF (CD_PARAM_734_P = 'SA') THEN
											
												IF (TRUNC(DT_HR_W) = TRUNC(clock_timestamp())) THEN
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											END IF;
										
										END IF;
										
										IF (DT_VALIDATE_W = 'S') THEN
										
											
											
												IF (coalesce(DT_LIBERACAO_W::text, '') = '') THEN 
												
													CD_MESSAGE_EXP_P := 719039;
													CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
													CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164451);
												
												ELSIF (CD_MESSAGE_TYPE_P != 'AB') THEN
													
													INSERT INTO EMAR_SPECIMEN_CHECK(NR_SEQUENCIA, DT_ATUALIZACAO, DT_ATUALIZACAO_NREC, NM_USUARIO, NM_USUARIO_NREC, CD_PESSOA_FISICA, NR_PRESCRICAO, NR_SEQ_EXAME, NR_SEQ_FRASCO, 
													NR_SEQ_MATERIAL_EXAME, NR_ITEM_PRESCR, CD_MEDICO_PRESCRICAO, NR_SEQ_AMOSTRA, DS_BARCODE) 
													VALUES (nextval('emar_specimen_check_seq'), clock_timestamp(), clock_timestamp(), NM_USUARIO_P, NM_USUARIO_P, CD_PESSOA_FISICA_W, NB_PRESCRIPTION_W, NR_SEQ_EXAME_W, 
													NR_SEQ_FRASCO_W, NR_SEQ_MATERIAL_EXAM_W, NR_SEQ_INT_PRESCR_W, REQUESTING_DR_W, NR_SEQ_AMOSTRA_W, CD_BARRAS_P);
													
												
												END IF;
											
											
										
										ELSE
										
											IF (IS_ACKNOWLEDGED_W = 'N') THEN
												CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1204369);
												IF (IS_DATE_FAILED_W = 'S') THEN
													CD_MESSAGE_EXP_P := CD_MESSAGE_EXP_P||' '||wheb_mensagem_pck.get_texto(1164361);
												END IF;
												CD_MESSAGE_TYPE_P := CD_PARAM_732_P;
												CALL Wheb_mensagem_pck.exibir_mensagem_abort(CD_MESSAGE_EXP_P);
											END IF;
											CD_MESSAGE_EXP_P := 1052551;
											CD_MESSAGE_TYPE_P := CD_PARAM_732_P;
											CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164097);
										
										END IF;
										
									
									END IF;

								
							END IF;
							
						ELSE
						
							
							CD_MESSAGE_EXP_P := 1052521;
							CD_MESSAGE_TYPE_P := 'AB';
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164097);
						
						END IF;
					
					END IF;
				
				ELSE

					IF (NR_PRESCR_PROC_MATERIAL_SEQ_P IS NOT NULL AND NR_PRESCR_PROC_MATERIAL_SEQ_P::text <> '' AND NR_PRESCR_PROC_MATERIAL_SEQ_P != 'N/A') THEN
					
						NR_SEQ_AMOSTRA_W := NR_PRESCR_PROC_MATERIAL_SEQ_P;
						
						
						SELECT count(*)
						INTO STRICT QTD_QRY_RETURN   
						FROM PRESCR_PROC_MATERIAL prm 
						WHERE 
							prm.NR_SEQUENCIA = NR_SEQ_AMOSTRA_W;
							
						
						IF ((QTD_QRY_RETURN < 1) OR (QTD_QRY_RETURN > 2)) THEN
					
							CD_MESSAGE_EXP_P := 1052523;
							CD_MESSAGE_TYPE_P := 'AB';
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164112);
						
						ELSE
						
                            SELECT 
                                pm.NR_ATENDIMENTO, pm.CD_PESSOA_FISICA AS PATIENT_ID,  
                                pm.DT_PRESCRICAO AS DT_PRESCR, prh.DT_HORARIO AS DT_HR, pm.NR_PRESCRICAO AS NB_PRESCRIPTION, pc.NR_SEQ_EXAME, OBTER_DESC_EXAME(pc.NR_SEQ_EXAME) AS EXAM_NAME, 
                                (
                                    SELECT elf.NR_SEQ_FRASCO FROM  EXAME_LAB_FRASCO elf WHERE elf.NR_SEQ_EXAME = pc.NR_SEQ_EXAME 
                                    AND elf.NR_SEQ_MATERIAL = (select mel.NR_SEQUENCIA from MATERIAL_EXAME_LAB mel 
                                    WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME))
                                ) AS NR_SEQ_FRASCO,
                                (
                                    SELECT OBTER_DESC_FRASCO(elf.NR_SEQ_FRASCO) FROM  EXAME_LAB_FRASCO elf WHERE elf.NR_SEQ_EXAME = pc.NR_SEQ_EXAME 
                                    AND elf.NR_SEQ_MATERIAL = (select mel.NR_SEQUENCIA from MATERIAL_EXAME_LAB mel 
                                    WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME))
                                ) AS DS_FRASCO,
                                (
                                    select mel.NR_SEQUENCIA from MATERIAL_EXAME_LAB mel 
                                    WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME)
                                ) AS NR_SEQ_MATERIAL_EXAM,
                                (
                                    select mel.DS_MATERIAL_EXAME from MATERIAL_EXAME_LAB mel 
                                    WHERE mel.CD_MATERIAL_EXAME = OBTER_CD_MATERIAL_EXAME_LAB(pc.NR_SEQ_EXAME)
                                ) AS MATERIAL_EXAME,
                                pc.NR_SEQUENCIA AS NR_SEQ_INT_PRESCR, pm.CD_PRESCRITOR, coalesce(pc.CD_MEDICO_SOLICITANTE, pm.CD_PRESCRITOR) as CD_MEDICO_SOLICITANTE, 
                                pc.IE_SUSPENSO, pm.DT_LIBERACAO, prm.NR_SEQUENCIA AS NR_SEQ_AMOSTRA 
                                INTO STRICT NR_ATENDIMENTO_W, CD_PESSOA_FISICA_W, DT_PRESCR_W, DT_HR_W, NB_PRESCRIPTION_W, NR_SEQ_EXAME_W, EXAM_NAME_W, NR_SEQ_FRASCO_W, DS_FRASCO_W, 
                                NR_SEQ_MATERIAL_EXAM_W, DS_MATERIAL_EXAM_W, NR_SEQ_INT_PRESCR_W, CD_PRESCRITOR_W, CD_MED_SOLICITANTE_W, IE_SUSPENSO_W, DT_LIBERACAO_W, NR_SEQ_AMOSTRA_W
                            FROM PRESCR_MEDICA pm 
                                INNER JOIN PRESCR_PROCEDIMENTO pc ON pc.NR_PRESCRICAO = pm.NR_PRESCRICAO 
                                INNER JOIN PRESCR_PROC_MATERIAL prm ON prm.NR_PRESCRICAO = pm.NR_PRESCRICAO AND prm.NR_SEQ_INT_PRESCR = pc.NR_SEQUENCIA
                                INNER JOIN PRESCR_PROC_HOR prh ON prh.NR_PRESCRICAO = pm.NR_PRESCRICAO AND prh.NR_SEQ_PROCEDIMENTO = pc.NR_SEQUENCIA 
                            WHERE 
								prm.NR_SEQUENCIA = NR_SEQ_AMOSTRA_W;
							
						
							IF (coalesce(CD_MED_SOLICITANTE_W::text, '') = '') THEN
							
								REQUESTING_DR_W := CD_PRESCRITOR_W;
							
							ELSE
							
								REQUESTING_DR_W := CD_MED_SOLICITANTE_W;
							
							END IF;
							
							
							IF (CD_PESSOA_FISICA_W = ID_PACIENTE_W) THEN
						
								IF (IE_SUSPENSO_W = 'S') THEN 
								
									CD_MESSAGE_EXP_P := 1052517;
									CD_MESSAGE_TYPE_P := 'AB';
									CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164095);
								
								ELSE
								
									SELECT count(*)
									INTO STRICT QTD_QRY_ESC_RETURN 
									FROM EMAR_SPECIMEN_CHECK esc 
									WHERE 
									esc.NR_SEQ_AMOSTRA = NR_SEQ_AMOSTRA_W;
									
									IF (QTD_QRY_ESC_RETURN > 0) THEN
									
										CD_MESSAGE_EXP_P := 1052519;
										CD_MESSAGE_TYPE_P := 'AB';
										CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164096);
									
									ELSE
									
										IF (DATA_TYPE_P = 'PRESCR') THEN 
										
											IF (CD_PARAM_734_P = 'DA') THEN 
									
												IF (TRUNC(DT_PRESCR_W) BETWEEN TRUNC(clock_timestamp() - interval '1 days') AND TRUNC(clock_timestamp())) THEN 
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
												
											ELSIF (CD_PARAM_734_P = 'DP') THEN
											
												IF (TRUNC(DT_PRESCR_W) BETWEEN TRUNC(clock_timestamp()) AND TRUNC(clock_timestamp() + interval '1 days')) THEN
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											ELSIF (CD_PARAM_734_P = 'SA') THEN
											
												IF (TRUNC(DT_PRESCR_W) = TRUNC(clock_timestamp())) THEN
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											END IF;
										
										ELSE
										
											IF (CD_PARAM_734_P = 'DA') THEN 
									
												IF (TRUNC(DT_HR_W) BETWEEN TRUNC(clock_timestamp() - interval '1 days') AND TRUNC(clock_timestamp())) THEN 
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
												
											ELSIF (CD_PARAM_734_P = 'DP') THEN
											
												IF (TRUNC(DT_HR_W) BETWEEN TRUNC(clock_timestamp()) AND TRUNC(clock_timestamp() + interval '1 days')) THEN
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											ELSIF (CD_PARAM_734_P = 'SA') THEN
											
												IF (TRUNC(DT_HR_W) = TRUNC(clock_timestamp())) THEN
												
													
													DT_VALIDATE_W := 'S';
													
												ELSE
													
													IF (CD_PARAM_732_P = 'AL') THEN
													
														DT_VALIDATE_W := 'S';
														CD_MESSAGE_EXP_P := wheb_mensagem_pck.get_texto(1164361);
														CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
														
													ELSE
													
														DT_VALIDATE_W := 'N';
													
													END IF;
													
												END IF;
											
											END IF;
										
										END IF;
										
										IF (DT_VALIDATE_W = 'S') THEN
										
											
												IF (coalesce(DT_LIBERACAO_W::text, '') = '') THEN 
												
													CD_MESSAGE_EXP_P := 719039;
													CD_MESSAGE_TYPE_P := CD_PARAM_733_P;
													CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164451);
												
												ELSIF (CD_MESSAGE_TYPE_P != 'AB') THEN
												
													INSERT INTO EMAR_SPECIMEN_CHECK(NR_SEQUENCIA, DT_ATUALIZACAO, DT_ATUALIZACAO_NREC, NM_USUARIO, NM_USUARIO_NREC, CD_PESSOA_FISICA, NR_PRESCRICAO, NR_SEQ_EXAME, NR_SEQ_FRASCO, 
													NR_SEQ_MATERIAL_EXAME, NR_ITEM_PRESCR, CD_MEDICO_PRESCRICAO, NR_SEQ_AMOSTRA, DS_BARCODE) 
													VALUES (nextval('emar_specimen_check_seq'), clock_timestamp(), clock_timestamp(), NM_USUARIO_P, NM_USUARIO_P, CD_PESSOA_FISICA_W, NB_PRESCRIPTION_W, NR_SEQ_EXAME_W, 
													NR_SEQ_FRASCO_W, NR_SEQ_MATERIAL_EXAM_W, NR_SEQ_INT_PRESCR_W, REQUESTING_DR_W, NR_SEQ_AMOSTRA_W, CD_BARRAS_P);
													
												
												END IF;
											
										
										ELSE
										
											CD_MESSAGE_EXP_P := 1052551;
											CD_MESSAGE_TYPE_P := CD_PARAM_732_P;
											CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164361);
										
										END IF;
									
									END IF;
									
								END IF;
								
							ELSE
							
								CD_MESSAGE_EXP_P := 1052529;
								CD_MESSAGE_TYPE_P := 'AB';
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164115);
							
							END IF;
							
						
						END IF;
						
					ELSE

						CD_MESSAGE_EXP_P := 1052531;
						CD_MESSAGE_TYPE_P := 'AB';
						CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164116);
					
					END IF;
				
				END IF;
			
			ELSE
			
				CD_MESSAGE_EXP_P := 1052533;
				CD_MESSAGE_TYPE_P := 'AB';
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164117);
			
			END IF;
		
		ELSE
		
			CD_MESSAGE_EXP_P := 1052535;
			CD_MESSAGE_TYPE_P := 'AB';
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164118);
		
		END IF;
		
		END IF;
	
	ELSE
	
	CD_MESSAGE_EXP_P := 1052537;
	CD_MESSAGE_TYPE_P := 'AB';
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(1164119);
	
	END IF;
	
	commit;
	
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_validacao_amostras_lab ( ID_PACIENTE_P bigint, NR_PRESCRICAO_P text, NR_PRESCR_SEQ_ITEM_P text, NR_PRESCR_PROC_MATERIAL_SEQ_P text, CD_BARRAS_P text, CD_PARAM_734_P text, CD_PARAM_733_P text, CD_PARAM_732_P text, DATA_TYPE_P text, NM_USUARIO_P text, NR_SEQ_CPOE_P bigint, CD_MESSAGE_EXP_P INOUT text, CD_MESSAGE_TYPE_P INOUT text) FROM PUBLIC;

