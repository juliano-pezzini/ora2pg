-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_taxa_custo ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nm_usuario_p text, nr_seq_tabela_p bigint) AS $body$
DECLARE


vl_orcado_w				double precision	:= 0;
qt_disponibilidade_w       		double precision	:= 0;
vl_taxa_custo_w 			double precision	:= 0;
cd_centro_controle_w			integer	:= 0;
cd_empresa_w				bigint;
cd_grupo_natureza_gasto_w		integer	:= 0;
cd_natureza_gasto_w			numeric(20)	:= 0;
cd_tabela_orc_w				integer	:= 0;
cd_tabela_cap_w				integer	:= 0;
nr_sequencia_w				bigint;
ie_natureza_gasto_w			varchar(2);
ie_tipo_redutor_w			varchar(2);
cd_centro_orig_w			bigint	:= 0;
vl_taxa_origem_w			double precision	:= 0;
vl_origem_w				double precision	:= 0;
vl_recebido_w				double precision	:= 0;
nr_sequencia_cc_w			bigint;
qt_reducao_w				double precision;
cd_redutor_w				bigint;
vl_reducao_w				double precision;
nr_sequencia_ocio_w			bigint;
qt_disp_teorica_w			double precision;
nr_seq_gng_w				bigint;
nr_seq_ng_w				bigint;
ie_capac_calc_ociosidade_w		varchar(1);
vl_taxa_teorica_w 			double precision	:= 0;
vl_taxa_pratica_w 			double precision	:= 0;
vl_taxa_atend_w 			double precision	:= 0;
qt_disp_aux_w       			double precision	:= 0;
qt_contador_w				bigint	:= 0;
nr_seq_tabela_orc_w			bigint;
cd_estabelecimento_w			bigint;
nr_seq_tabela_capac_w			bigint;
cd_estabelecimento_custo_w		estabelecimento.cd_estabelecimento%type;


C01 CURSOR FOR
	SELECT	a.cd_estabelecimento,
		a.cd_centro_controle,
		c.cd_grupo_natureza_gasto,
		c.nr_sequencia,
		b.cd_natureza_gasto,
		b.nr_sequencia nr_seq_ng,
		sum(coalesce(a.vl_avista,0) + coalesce(vl_receb_distrib,0)),
		sum(coalesce(vl_receb_distrib,0)),
		b.ie_natureza_gasto
	from	grupo_natureza_gasto c,
		natureza_gasto b,
		orcamento_custo a
	where	a.nr_seq_tabela			= nr_seq_tabela_orc_w
	and	a.nr_seq_ng  			= b.nr_sequencia
	and	a.cd_estabelecimento		= coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
	and	b.nr_seq_gng		 	= c.nr_sequencia
	and	c.nr_sequencia			= b.nr_seq_gng
	and	a.cd_estabelecimento		= coalesce(c.cd_estabelecimento,a.cd_estabelecimento)
	and	b.cd_empresa			= c.cd_empresa
	and	substr(cus_obter_se_gng_taxa(a.cd_estabelecimento, c.nr_sequencia, a.cd_centro_controle),1,1) = 'S'
	and	substr(cus_obter_se_ng_taxa(a.cd_estabelecimento, c.nr_sequencia, b.nr_sequencia, a.cd_centro_controle),1,1) = 'S'
	and	exists (	SELECT	1
			from	tabela_custo_acesso_v tca
			where	tca.nr_sequencia	= nr_seq_tabela_p
			and	tca.cd_empresa		= c.cd_empresa
			and	tca.cd_estabelecimento	= a.cd_estabelecimento)
	group by
		a.cd_estabelecimento,
		a.cd_centro_controle,
		c.nr_sequencia,
		c.cd_grupo_natureza_gasto,
		b.cd_natureza_gasto,
		b.nr_sequencia,
		b.ie_natureza_gasto;

C02 CURSOR FOR
	SELECT	cd_centro_controle,
		sum(vl_distribuido)
	from	orcamento_distribuido a
	where	a.cd_estabelecimento 		= cd_estabelecimento_w
	and	a.nr_seq_tabela			= nr_seq_tabela_orc_w
	and	a.nr_seq_ng_dest  		= nr_seq_ng_w
	and	a.cd_centro_controle_dest	= cd_centro_controle_w
	group by
		cd_centro_controle;

C03 CURSOR FOR
	SELECT	a.cd_centro_controle,
		a.cd_estabelecimento,
		a.vl_custo,
		b.qt_disponibilidade
	from	capac_centro_controle b,
		taxa_custo a
	where	a.cd_estabelecimento	= b.cd_estabelecimento
	and	a.cd_centro_controle	= b.cd_centro_controle
	and	a.nr_seq_tabela		= nr_seq_tabela_p
	and	b.nr_seq_tabela		= nr_seq_tabela_capac_w
	and	b.nr_sequencia_nivel	= ie_capac_calc_ociosidade_w;

C04 CURSOR FOR
	SELECT	a.cd_redutor_capacidade,
		a.qt_reducao,
		b.ie_tipo_redutor
	from	reduc_capac_centro_controle a,
		redutor_capacidade b
	where	a.cd_redutor_capacidade	= b.cd_redutor_capacidade
	and	a.cd_estabelecimento	= cd_estabelecimento_custo_w
	and	a.nr_seq_tabela		= nr_seq_tabela_capac_w
	and	a.cd_centro_controle	= cd_centro_controle_w;


BEGIN
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(299128) || qt_contador_w,'CALCULAR_TAXA_CUSTO',qt_contador_w);
cd_empresa_w	:= obter_empresa_estab(cd_estabelecimento_p);


select	coalesce(max(ie_capac_calc_ociosidade),'1')
into STRICT	ie_capac_calc_ociosidade_w
from	parametro_custo
where	cd_estabelecimento	= cd_estabelecimento_p;

begin
select	cd_tabela_parametro,
	nr_seq_tabela_param
into STRICT	cd_tabela_orc_w,
	nr_seq_tabela_orc_w
from	tabela_parametro
where	nr_seq_tabela		= nr_seq_tabela_p
and	nr_seq_parametro     	= 1;
exception when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184213);
end;
qt_contador_w	:= qt_contador_w + 1;

CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(299128) || qt_contador_w,'CALCULAR_TAXA_CUSTO',qt_contador_w);
CALL atualizar_util_tabela(	cd_estabelecimento_p,
			cd_tabela_custo_p,
			cd_tabela_orc_w,
			nm_usuario_p);

begin
select	cd_tabela_parametro,
	nr_seq_tabela_param
into STRICT	cd_tabela_cap_w,
	nr_seq_tabela_capac_w
from	tabela_parametro
where	nr_seq_tabela		= nr_seq_tabela_p
and	nr_seq_parametro     	= 2;
exception when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184214);
end;


CALL atualizar_util_tabela(	cd_estabelecimento_p,
			cd_tabela_custo_p,
			cd_tabela_cap_w,
			nm_usuario_p);

delete	from taxa_custo
where	nr_seq_tabela		= nr_seq_tabela_p;

delete	from taxa_custo_nat
where	nr_seq_tabela		= nr_seq_tabela_p;

delete	from taxa_custo_ocio
where	nr_seq_tabela		= nr_seq_tabela_p;


open c01;
LOOP
FETCH C01 into
	cd_estabelecimento_w,
	cd_centro_controle_w,
	cd_grupo_natureza_gasto_w,
	nr_seq_gng_w,
	cd_natureza_gasto_w,
	nr_seq_ng_w,
	vl_orcado_w,
	vl_recebido_w,
	ie_natureza_gasto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	qt_contador_w	:= qt_contador_w + 1;
	CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(299130) || qt_contador_w,'CALCULAR_TAXA_CUSTO',qt_contador_w);

	select	coalesce(sum(qt_disponibilidade),0)
	into STRICT	qt_disponibilidade_w
	from	capac_centro_controle
	where	cd_estabelecimento		= cd_estabelecimento_w
	and	nr_seq_tabela			= nr_seq_tabela_capac_w
	and	cd_centro_controle		= cd_centro_controle_w
	and	nr_sequencia_nivel		=	(SELECT	max(nr_sequencia_nivel)
							from	capac_centro_controle
							where	cd_estabelecimento	= cd_estabelecimento_w
							and	nr_seq_tabela		= nr_seq_tabela_capac_w
							and	cd_centro_controle	= cd_centro_controle_w);

	if (qt_disponibilidade_w > 0) then
		vl_taxa_custo_w		:= dividir(vl_orcado_w, qt_disponibilidade_w);

		select	nextval('taxa_custo_nat_seq')
		into STRICT	nr_sequencia_w
		;

		--if	(vl_taxa_custo_w <> 0) then
			begin
			qt_disp_aux_w		:= cus_obter_capac_centro(cd_estabelecimento_w, nr_seq_tabela_capac_w, cd_centro_controle_w , 1);
			vl_taxa_teorica_w	:= dividir(vl_orcado_w, qt_disp_aux_w);
			qt_disp_aux_w		:= cus_obter_capac_centro(cd_estabelecimento_w, nr_seq_tabela_capac_w, cd_centro_controle_w , 2);
			vl_taxa_pratica_w	:= dividir(vl_orcado_w, qt_disp_aux_w);
			qt_disp_aux_w		:= cus_obter_capac_centro(cd_estabelecimento_w, nr_seq_tabela_capac_w, cd_centro_controle_w , 3);
			vl_taxa_atend_w		:= dividir(vl_orcado_w, qt_disp_aux_w);
			exception when others then
				qt_disp_aux_w		:= 0;
				vl_taxa_teorica_w	:= 0;
				vl_taxa_pratica_w	:= 0;
				vl_taxa_atend_w		:= 0;
			end;

			insert into Taxa_custo_nat(nr_sequencia,
				cd_estabelecimento,
				cd_tabela_custo,
				cd_centro_controle,
				cd_grupo_natureza_gasto,
				nr_seq_gng,
				cd_natureza_gasto,
				nr_seq_ng,
				nm_usuario,
				dt_atualizacao,
				vl_taxa_custo,
				qt_disponibilidade,
				vl_custo,
				vl_taxa_teorica,
				vl_taxa_pratica,
				vl_taxa_atend,
				nr_seq_tabela)
			values (nr_sequencia_w,
				cd_estabelecimento_w,
				cd_tabela_custo_p,
				cd_centro_controle_w,
				cd_grupo_natureza_gasto_w,
				nr_seq_gng_w,
				cd_natureza_gasto_w,
				nr_seq_ng_w,
				nm_usuario_p,
				clock_timestamp(),
				vl_taxa_custo_w,
				qt_disponibilidade_w,
				vl_orcado_w,
				vl_taxa_teorica_w,
				vl_taxa_pratica_w,
				vl_taxa_atend_w,
				nr_seq_tabela_p);

			if (ie_natureza_gasto_w = 'T') and (vl_recebido_w <> 0) then
				OPEN C02;
				LOOP
				FETCH C02 into
					cd_centro_orig_w,
					vl_origem_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					select	nextval('taxa_custo_cc_orig_seq')
					into STRICT	nr_sequencia_cc_w
					;
					vl_taxa_origem_w	:= dividir(vl_origem_w, qt_disponibilidade_w);
					insert into Taxa_custo_cc_orig(nr_sequencia,
						nr_seq_taxa,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_centro_controle,
						vl_taxa_custo,
						vl_custo)
					values (nr_sequencia_cc_w,
						nr_sequencia_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_centro_orig_w,
						vl_taxa_origem_w,
						vl_origem_w);
				END LOOP;
				CLOSE C02;
			end if;
		--end if;
	end if;
END LOOP;
CLOSE C01;

qt_contador_w	:= qt_contador_w + 1;
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(299130) || qt_contador_w,'CALCULAR_TAXA_CUSTO',qt_contador_w);

commit;
insert into Taxa_custo(cd_estabelecimento,
	cd_tabela_custo,
	cd_centro_controle,
	cd_grupo_natureza_gasto,
	nr_seq_gng,
	nm_usuario,
	dt_atualizacao,
	vl_taxa_custo,
	qt_disponibilidade,
	vl_custo,
	vl_taxa_teorica,
	vl_taxa_pratica,
	vl_taxa_atend,
	nr_seq_tabela)
SELECT	cd_estabelecimento,
	cd_tabela_custo,
	cd_centro_controle,
	cd_grupo_natureza_gasto,
	nr_seq_gng,
	nm_usuario_p,
	clock_timestamp(),
	sum(vl_taxa_custo),
	avg(qt_disponibilidade),
	sum(vl_custo),
	sum(vl_taxa_teorica),
	sum(vl_taxa_pratica),
	sum(vl_taxa_atend),
	nr_seq_tabela_p
from	Taxa_custo_nat
where	nr_seq_tabela		= nr_seq_tabela_p
group by
	cd_estabelecimento,
	cd_tabela_custo,
	cd_centro_controle,
	nr_seq_gng,
	cd_grupo_natureza_gasto;

qt_contador_w	:= qt_contador_w + 1;
CALL gravar_processo_longo(wheb_mensagem_pck.get_texto(299132) || qt_contador_w,'CALCULAR_TAXA_CUSTO',qt_contador_w);

OPEN C03;
LOOP
FETCH C03 into
	cd_centro_controle_w,
	cd_estabelecimento_custo_w,
	vl_orcado_w,
	qt_disp_teorica_w;
EXIT WHEN NOT FOUND; /* apply on C03 */

	vl_taxa_custo_w	:= dividir(vl_orcado_w,qt_disp_teorica_w);


	OPEN C04;
	LOOP
	FETCH C04 into
		cd_redutor_w,
		qt_reducao_w,
		ie_tipo_redutor_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */

		if (ie_tipo_redutor_w = '1') then
			vl_reducao_w			:= dividir((qt_reducao_w * vl_taxa_custo_w),100);
		elsif (ie_tipo_redutor_w = '2') then
			vl_reducao_w			:= qt_reducao_w * vl_taxa_custo_w;
		end if;

		select	nextval('taxa_custo_ocio_seq')
		into STRICT	nr_sequencia_ocio_w
		;


		insert into taxa_custo_ocio(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			cd_estabelecimento,
			cd_tabela_custo,
			cd_centro_controle,
			cd_redutor_capacidade,
			vl_ociosidade,
			qt_reducao,
			nr_seq_tabela)
		values (nr_sequencia_ocio_w,
			nm_usuario_p,
			clock_timestamp(),
			cd_estabelecimento_custo_w,
			cd_tabela_custo_p,
			cd_centro_controle_w,
			cd_redutor_w,
			vl_reducao_w,
			qt_reducao_w,
			nr_seq_tabela_p);
	END LOOP;
	CLOSE C04;
END LOOP;
CLOSE C03;
COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_taxa_custo ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nm_usuario_p text, nr_seq_tabela_p bigint) FROM PUBLIC;

