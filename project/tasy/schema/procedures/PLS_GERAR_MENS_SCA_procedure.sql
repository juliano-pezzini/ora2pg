-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_mens_sca ( nr_seq_mensalidade_seg_p bigint, ie_gerar_mens_rescisao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
vl_preco_sca_w			double precision;
dt_mesano_referencia_w		timestamp;
nm_segurado_w			varchar(255);
qt_mensalidade_sca_w		bigint;
nr_seq_sca_vinculo_w		bigint;
qt_sca_mens_seg_w		integer;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
ie_embutido_produto_w		varchar(2);
nr_seq_mens_item_w		bigint;
nr_seq_pagador_mens_w		bigint;
nr_seq_pagador_sca_w		bigint;
ie_lancamento_mensalidade_w	varchar(2);
ds_observacao_w			varchar(4000);
nm_sca_w			varchar(4000);
nr_parcela_w			bigint;
qt_parcelas_cobranca_w		bigint;
ie_parcelas_sca_w		varchar(1);
ie_calc_primeira_mens_w		varchar(1);
ie_calculo_proporcional_w	varchar(1);
dt_primeira_mensalidade_w	timestamp;
dt_inicio_vigencia_sca_w	timestamp;
dt_vencimento_mens_w		timestamp;
dt_ultimo_dia_mes_w		smallint;
qt_dias_w			bigint;
dt_mes_anterior_w		timestamp;
qt_sca_mes_anterior_w		bigint;
ie_cobr_mes_ant_w		varchar(1);
vl_sca_mes_ant_w		double precision;
ie_lancamento_mensalidade_ww	varchar(2);
nr_seq_mensalidade_sca_w	bigint;
cd_estabelecimento_w		smallint;
qt_mensalidade_mes_anterior_w	bigint;
nr_seq_lote_w			bigint;
nr_seq_segurado_preco_w		bigint;
dt_rescisao_w			timestamp;
ie_gerar_sca_w			varchar(1);
ie_data_base_proporcional_w	varchar(1);
qt_idade_sca_w			bigint;
qt_idade_w			bigint;
nr_seq_contrato_w		bigint;
nr_seq_intercambio_w		bigint;
dt_lote_w			timestamp;
nr_seq_regra_w			bigint;
qt_sca_regra_w			bigint;
qt_idade_min_sca_w		bigint;
ds_observacao_plano_w		varchar(4000);
qt_primeira_mens_sca_w		bigint;
dt_primeira_parcela_w		timestamp;
ds_observacao_2_w		varchar(255);
ie_importacao_w			varchar(1);
vl_preco_sca_aux_w		double precision;
nr_seq_preco_indice_w		bigint;
qt_registros_w			bigint;
vl_reajuste_indice_w		double precision;
nr_seq_reajuste_preco_w		bigint;
nr_seq_mens_item_reaj_w		bigint;
ie_destacar_reajuste_sca_w	pls_parametros.ie_destacar_reajuste_sca%type;
nr_seq_regra_resc_proporc_w	pls_regra_mens_contrato.nr_sequencia%type;
ie_rescisao_proporcional_w	pls_regra_mens_contrato.ie_rescisao_proporcional%type;
dt_periodo_resc_inicial_w	timestamp;
dt_montar_data_aux_w		timestamp;
dt_adesao_w			timestamp;
ie_tipo_contrato_w		varchar(2);
nr_parcela_segurado_w		bigint;
dt_inicio_cobertura_w		timestamp;
dt_fim_cobertura_w		timestamp;
ie_mensalidade_proporcional_w	varchar(1);
tx_proporcional_rescisao_w	double precision := 0;
dt_fim_cobertura_sca_w		timestamp;
dt_fim_cobertura_sca_2_w	timestamp;
dt_inicio_cobertura_2_w		timestamp;
nr_seq_segurado_preco_ant_w	bigint;
vl_sca_mes_ant_ww		double precision;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;
nr_seq_item_mens_w 		pls_mensalidade_seg_item.nr_sequencia%type;
ie_consistir_idade_sca_mens_w	pls_plano.ie_consistir_idade_sca_mens%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_plano,
		a.nr_seq_tabela,
		coalesce(a.ie_embutido_produto,'N'),
		a.ie_lancamento_mensalidade,
		a.nr_seq_pagador,
		a.dt_inicio_vigencia,
		a.dt_fim_vigencia,
		d.qt_idade_sca,
		trunc(months_between(dt_mesano_referencia_w, c.dt_nascimento) / 12) qt_idade,
		c.nm_pessoa_fisica,
		a.ie_importacao,
		d.qt_idade_min_sca,
		b.dt_contratacao dt_adesao,
		d.ds_plano,
		coalesce(d.ie_lancamento_mensalidade,'D'),
		d.qt_parcelas_cobranca,
		coalesce(d.ie_consistir_idade_sca_mens,'N') ie_consistir_idade_sca_mens
	from	pls_sca_vinculo a,
		pls_segurado	b,
		pessoa_fisica	c,
		pls_plano	d
	where	b.cd_pessoa_fisica	= c.cd_pessoa_fisica
	and	a.nr_seq_segurado	= b.nr_sequencia
	and	a.nr_seq_plano		= d.nr_sequencia
	and	b.nr_sequencia		= nr_seq_segurado_w
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	(a.nr_seq_tabela IS NOT NULL AND a.nr_seq_tabela::text <> '')
	and	dt_mesano_referencia_w	between trunc(a.dt_inicio_vigencia,'month') and fim_dia(coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w));


BEGIN

nr_seq_pagador_mens_w		:= pls_store_data_mens_pck.get_nr_seq_pagador;
nr_seq_lote_w			:= pls_store_data_mens_pck.get_nr_seq_lote_mensalidade;
dt_lote_w			:= pls_store_data_mens_pck.get_dt_final_lote;
nr_seq_segurado_w		:= pls_store_data_mens_pck.get_nr_seq_segurado;
dt_mesano_referencia_w		:= pls_store_data_mens_pck.get_dt_mesano_referencia;
cd_estabelecimento_w		:= pls_store_data_mens_pck.get_cd_estabelecimento;
nr_seq_contrato_w		:= pls_store_data_mens_pck.get_nr_seq_contrato;
nr_seq_intercambio_w		:= pls_store_data_mens_pck.get_nr_seq_intercambio;
ie_data_base_proporcional_w	:= pls_store_data_mens_pck.get_ie_data_base_proporcional;
ie_destacar_reajuste_sca_w	:= pls_store_data_mens_pck.get_ie_destacar_reajuste_sca;

select	count(1)
into STRICT	qt_sca_mens_seg_w

where	exists (SELECT	1
		from	pls_sca_vinculo
		where	nr_seq_segurado	= nr_seq_segurado_w);

if (qt_sca_mens_seg_w > 0) then
	if (dt_mesano_referencia_w < dt_lote_w) then
		if (coalesce(nr_seq_contrato_w,0) <> 0) then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_regra_mens_cont_sca	a,
				pls_regra_mens_contrato	b
			where	a.nr_seq_regra	= b.nr_sequencia
			and	b.nr_seq_contrato	= nr_seq_contrato_w
			and	b.ie_tipo_regra		= 'L'
			and	dt_mesano_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_mesano_referencia_w);
		elsif (coalesce(nr_seq_intercambio_w,0) <> 0) then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_regra_mens_cont_sca	a,
				pls_regra_mens_contrato	b
			where	a.nr_seq_regra	= b.nr_sequencia
			and	b.nr_seq_intercambio	= nr_seq_intercambio_w
			and	b.ie_tipo_regra		= 'L'
			and	dt_mesano_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_mesano_referencia_w);
		end if;

		if (coalesce(nr_seq_regra_w,0) = 0) then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_regra_w
			from	pls_regra_mens_cont_sca	a,
				pls_regra_mens_contrato	b
			where	a.nr_seq_regra	= b.nr_sequencia
			and	coalesce(b.nr_seq_contrato::text, '') = ''
			and	coalesce(b.nr_seq_intercambio::text, '') = ''
			and	b.ie_tipo_regra		= 'L'
			and	b.cd_estabelecimento	= cd_estabelecimento_w
			and	dt_mesano_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_mesano_referencia_w);
		end if;
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_sca_vinculo_w,
		nr_seq_plano_w,
		nr_seq_tabela_w,
		ie_embutido_produto_w,
		ie_lancamento_mensalidade_w,
		nr_seq_pagador_sca_w,
		dt_inicio_vigencia_sca_w,
		dt_rescisao_w,
		qt_idade_sca_w,
		qt_idade_w,
		nm_segurado_w,
		ie_importacao_w,
		qt_idade_min_sca_w,
		dt_adesao_w,
		nm_sca_w,
		ie_lancamento_mensalidade_ww,
		qt_parcelas_cobranca_w,
		ie_consistir_idade_sca_mens_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ie_parcelas_sca_w	:= '';
		ie_cobr_mes_ant_w	:= 'N';
		vl_reajuste_indice_w	:= 0;
		nr_seq_preco_indice_w	:= null;

		if (coalesce(nr_seq_pagador_sca_w::text, '') = '') then
			nr_seq_pagador_sca_w	:= pls_store_data_mens_pck.get_nr_seq_pagador_benef;
		end if;

		if (trunc(dt_inicio_vigencia_sca_w, 'dd') <> trunc(dt_rescisao_w,'dd'))  or (coalesce(dt_rescisao_w::text, '') = '') then
			if	((coalesce(dt_rescisao_w::text, '') = '') or 	(	((ie_gerar_mens_rescisao_p = 'N') and (trunc(dt_rescisao_w,'month') > dt_mesano_referencia_w))  or
									((ie_gerar_mens_rescisao_p = 'S') and (trunc(dt_rescisao_w,'month') >= dt_mesano_referencia_w))
								)) then
				ie_gerar_sca_w	:= 'S';

				if (ie_consistir_idade_sca_mens_w = 'N') or
					(((coalesce(qt_idade_sca_w::text, '') = '') or (qt_idade_w <= qt_idade_sca_w)) and
					 ((coalesce(qt_idade_min_sca_w::text, '') = '') or (qt_idade_w >= qt_idade_min_sca_w))) then
					ie_gerar_sca_w	:= 'S';

					if (coalesce(nr_seq_regra_w::text, '') = '') then
						ie_gerar_sca_w	:= 'S';
					else
						select	count(1)
						into STRICT	qt_sca_regra_w
						from	pls_regra_mens_cont_sca
						where	nr_seq_regra	= nr_seq_regra_w
						and	nr_seq_plano_sca = nr_seq_plano_w;

						if (qt_sca_regra_w > 0) then
							ie_gerar_sca_w	:= 'S';
						else
							ie_gerar_sca_w	:= 'N';
						end if;
					end if;
				else
					ie_gerar_sca_w	:= 'N';
				end if;
			else
				ie_gerar_sca_w	:= 'N';
			end if;

			if	(nr_seq_pagador_mens_w = nr_seq_pagador_sca_w AND ie_gerar_sca_w = 'S') then

				select	coalesce(ie_calc_primeira_mens,'I'),
					ie_calculo_proporcional,
					dt_primeira_mensalidade
				into STRICT	ie_calc_primeira_mens_w,
					ie_calculo_proporcional_w,
					dt_primeira_mensalidade_w
				from	pls_contrato_pagador
				where	nr_sequencia	= nr_seq_pagador_mens_w;

				nr_parcela_segurado_w	:= pls_obter_parcela_segurado(nr_seq_segurado_w,dt_mesano_referencia_w,dt_mesano_referencia_w);
				if (nr_parcela_segurado_w = 1) and (ie_calc_primeira_mens_w = 'P') then
					dt_inicio_cobertura_w	:= dt_inicio_vigencia_sca_w;
					dt_fim_cobertura_w	:= last_day(dt_inicio_vigencia_sca_w);
				elsif (nr_parcela_segurado_w = 1) and (ie_calc_primeira_mens_w = 'I') then
					dt_inicio_cobertura_w	:= dt_inicio_vigencia_sca_w;
					dt_fim_cobertura_w	:= add_months(dt_inicio_vigencia_sca_w,1)-1;
				elsif (nr_parcela_segurado_w > 1) then
					if (ie_mensalidade_proporcional_w = 'S') then
						dt_inicio_cobertura_w	:= trunc(dt_mesano_referencia_w,'month');
						dt_fim_cobertura_w	:= last_day(dt_mesano_referencia_w);
					else
						begin
						dt_inicio_cobertura_w	:= to_date(to_char(dt_inicio_vigencia_sca_w,'dd') || '/'|| to_char(dt_mesano_referencia_w,'mm/yyyy'));
						exception
						when others then
							dt_inicio_cobertura_w	:= last_day(dt_mesano_referencia_w);
						end;

						dt_fim_cobertura_w	:= add_months(dt_inicio_cobertura_w,1)-1;
					end if;
				end if;

				nr_parcela_w	:= trunc(months_between(dt_mesano_referencia_w,trunc(dt_inicio_vigencia_sca_w,'month'))) + 1;

				select	max(nr_sequencia)
				into STRICT	nr_seq_segurado_preco_w
				from	pls_segurado_preco_origem
				where	nr_seq_vinculo_sca = nr_seq_sca_vinculo_w
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	(((dt_mesano_referencia_w >= trunc(dt_reajuste, 'month')) and (cd_motivo_reajuste	<> 'E'))
					or	((cd_motivo_reajuste	= 'E') and (dt_mesano_referencia_w >= trunc(add_months(dt_reajuste,1), 'month'))));

				/*aaschlote 20/04/2011 OS - 308210 - Buscar a maior sequência do preço da SCA e depois buscar o preço*/

				if (nr_seq_segurado_preco_w IS NOT NULL AND nr_seq_segurado_preco_w::text <> '') then
					begin
					select	max(vl_preco_atual)
					into STRICT	vl_preco_sca_w
					from	pls_segurado_preco_origem
					where	nr_sequencia	= nr_seq_segurado_preco_w;
					exception
					when others then
						vl_preco_sca_w := 0;
					end;
				else
					vl_preco_sca_w	:= 0;
				end if;

				if (coalesce(vl_preco_sca_w::text, '') = '') then
					vl_preco_sca_w	:= 0;
				end if;

				/*aaschlote - 24/01/2011 - OS - 281598*/

				if (coalesce(ie_lancamento_mensalidade_w::text, '') = '') and (ie_embutido_produto_w = 'N') then
					ie_lancamento_mensalidade_w	:= ie_lancamento_mensalidade_ww;
				elsif (coalesce(ie_lancamento_mensalidade_w::text, '') = '') and (ie_embutido_produto_w = 'S') then
					ie_lancamento_mensalidade_w	:= 'E';
				end if;

				/*aaschlote 21/10/2013 - Gerar reajuste apenas para SCA acrescidos ou destacados na mensalidade*/

				if (coalesce(ie_destacar_reajuste_sca_w,'N') = 'S') and (ie_lancamento_mensalidade_w <> 'E') then
					/* Valor reajuste por índice de correção */

					select	max(nr_sequencia)
					into STRICT	nr_seq_preco_indice_w
					from	pls_segurado_preco_origem
					where	nr_seq_vinculo_sca		= nr_seq_sca_vinculo_w
					and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
					and	cd_motivo_reajuste	= 'I'
					and	trunc(dt_reajuste, 'month')	= dt_mesano_referencia_w;

					/*Caso não tiver reajuste no mês atual, verifica se no mês anterior teve valor*/

					if (coalesce(nr_seq_preco_indice_w::text, '') = '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_preco_indice_w
						from	pls_segurado_preco_origem
						where	nr_seq_vinculo_sca		= nr_seq_sca_vinculo_w
						and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
						and	cd_motivo_reajuste	= 'I'
						and	trunc(dt_reajuste, 'month')	= add_months(dt_mesano_referencia_w,-1);

						if (ie_lancamento_mensalidade_w = 'C') then
							/*Caso tenha reajuste no mês passado, verifica se já foi colocado o item 25, se foi então não é necessário gerar novamente*/

							if (nr_seq_preco_indice_w IS NOT NULL AND nr_seq_preco_indice_w::text <> '') then
								select	count(1)
								into STRICT	qt_registros_w
								from	pls_mensalidade_seg_item	c,
									pls_mensalidade_segurado	b,
									pls_mensalidade			a
								where	c.nr_seq_mensalidade_seg		= b.nr_sequencia
								and	b.nr_seq_mensalidade		= a.nr_sequencia
								and	b.nr_seq_segurado		= nr_seq_segurado_w
								and	coalesce(a.ie_cancelamento::text, '') = ''
								and	c.ie_tipo_item			= '25'
								and	trunc(b.dt_mesano_referencia, 'month')	= add_months(dt_mesano_referencia_w,-1)  LIMIT 1;
							end if;
						elsif (ie_lancamento_mensalidade_w = 'D') then
							select	count(1)
							into STRICT	qt_registros_w
							from	pls_mensalidade_seg_item	c,
								pls_mensalidade_segurado	b,
								pls_mensalidade			a
							where	c.nr_seq_mensalidade_seg	= b.nr_sequencia
							and	b.nr_seq_mensalidade		= a.nr_sequencia
							and	b.nr_seq_segurado		= nr_seq_segurado_w
							and	coalesce(a.ie_cancelamento::text, '') = ''
							and	c.ie_tipo_item			= '35'
							and	c.nr_seq_vinculo_sca		= nr_seq_sca_vinculo_w
							and	trunc(b.dt_mesano_referencia, 'month')	= add_months(dt_mesano_referencia_w,-1)  LIMIT 1;
						end if;

						if (qt_registros_w > 0) then
							nr_seq_preco_indice_w	:= null;
						end if;
					end if;

					if (coalesce(nr_seq_preco_indice_w,0) <> 0) then
						begin
						select	vl_preco_atual - vl_preco_ant,
							nr_seq_reajuste_preco
						into STRICT	vl_reajuste_indice_w,
							nr_seq_reajuste_preco_w
						from	pls_segurado_preco_origem
						where	nr_sequencia	= nr_seq_preco_indice_w;
						exception
						when others then
							vl_reajuste_indice_w	:= 0;
						end;

						if (vl_reajuste_indice_w > 0) then
							vl_preco_sca_w	:= coalesce(vl_preco_sca_w,0) - coalesce(vl_reajuste_indice_w,0);
						end if;
					end if;
				end if;

				/* Calcular o valor proporcional da primeira mensalidade quando gerado pelo contrato */

				if (nr_parcela_w = 1) and (ie_calc_primeira_mens_w = 'P') and (ie_lancamento_mensalidade_w <> 'E') then /* Quando é embutido no preço pré, e não soma o valor ao mesmo, deve exibir o valor integral */
					/* Mês calendario adesão */

					if (ie_calculo_proporcional_w	= 'A') then
						dt_vencimento_mens_w	:= last_day(dt_inicio_vigencia_sca_w);
					else
						dt_vencimento_mens_w	:= to_date(to_char(pls_store_data_mens_pck.get_dt_dia_vencimento) || '/' || to_char(dt_inicio_vigencia_sca_w,'mm/yyyy'));
					end if;

					if (ie_data_base_proporcional_w = 'T') then
						dt_ultimo_dia_mes_w	:= 30;

					if (to_char(dt_mesano_referencia_w,'mm') = 02) then
							dt_ultimo_dia_mes_w := to_char(last_day(dt_mesano_referencia_w),'dd');
						end if;
					else
						dt_ultimo_dia_mes_w	:= to_char(last_day(dt_vencimento_mens_w),'dd');
					end if;

					if (dt_vencimento_mens_w < dt_inicio_vigencia_sca_w) then
						dt_vencimento_mens_w	:=	last_day(dt_vencimento_mens_w);
					end if;

					select	obter_dias_entre_datas(dt_inicio_vigencia_sca_w,dt_vencimento_mens_w) + 1
					into STRICT	qt_dias_w
					;

					vl_preco_sca_aux_w := coalesce(((qt_dias_w/(dt_ultimo_dia_mes_w)::numeric ) * vl_preco_sca_w),0);

					/*aaschlote 24/09/2013 - OS - 642287*/

					if (vl_preco_sca_aux_w > vl_preco_sca_w) then
						vl_preco_sca_aux_w	:= vl_preco_sca_w;
					end if;

					vl_preco_sca_w	:= vl_preco_sca_aux_w;
				end if;

				if (nr_parcela_w = 2) and (coalesce(ie_importacao_w,'N') = 'N') and (coalesce(vl_preco_sca_w,0) <> 0) then
					select	add_months(dt_mesano_referencia_w,-1)
					into STRICT	dt_mes_anterior_w
					;

					if (ie_lancamento_mensalidade_w = 'D') then
						select	count(1)
						into STRICT	qt_sca_mes_anterior_w
						from	pls_mensalidade_seg_item	a,
							pls_mensalidade_segurado	b,
							pls_mensalidade			c
						where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
						and	b.nr_seq_mensalidade		= c.nr_sequencia
						and	coalesce(c.ie_cancelamento::text, '') = ''
						and	b.dt_mesano_referencia	< dt_mesano_referencia_w
						and	b.nr_seq_segurado		= nr_seq_segurado_w
						and	a.nr_seq_vinculo_sca		= nr_seq_sca_vinculo_w
						and	b.dt_mesano_referencia		= dt_mes_anterior_w;
					else
						select	count(1)
						into STRICT	qt_sca_mes_anterior_w
						from	pls_mensalidade_seg_item	a,
							pls_mensalidade_segurado	b,
							pls_mensalidade_sca		c,
							pls_mensalidade			d
						where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
						and	c.nr_seq_item_mens		= a.nr_sequencia
						and	b.nr_seq_mensalidade		= d.nr_sequencia
						and	coalesce(d.ie_cancelamento::text, '') = ''
						and	b.dt_mesano_referencia	< dt_mesano_referencia_w
						and	b.nr_seq_segurado		= nr_seq_segurado_w
						and	c.nr_seq_vinculo_sca		= nr_seq_sca_vinculo_w
						and	b.dt_mesano_referencia		= dt_mes_anterior_w;
					end if;

					if (qt_sca_mes_anterior_w = 0) and /* Se o SCA não foi cobrado no mês anterior e se foi liberado no mês anterior */
						(trunc(dt_inicio_vigencia_sca_w,'month') = dt_mes_anterior_w) then
						select	count(1)
						into STRICT	qt_primeira_mens_sca_w
						from	pls_mensalidade_seg_item a,
							pls_mensalidade_segurado b,
							pls_segurado		d,
							pls_mensalidade		c
						where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
						and	b.nr_seq_segurado		= d.nr_sequencia
						and	b.nr_seq_mensalidade		= c.nr_sequencia
						and	b.dt_mesano_referencia	= dt_mesano_referencia_w
						and	d.nr_sequencia		= nr_seq_segurado_w
						and	coalesce(c.ie_cancelamento::text, '') = ''
						and	a.ie_tipo_item		= '15'
						and	a.nr_seq_vinculo_sca 	= nr_seq_sca_vinculo_w
						and	nr_parcela_sca		= 1;

						if (qt_primeira_mens_sca_w = 0) then
							ds_observacao_w	:= 'Cobrança referente a 1° parcela do SCA '||nm_sca_w;

							vl_sca_mes_ant_w	:= coalesce(vl_preco_sca_w,0);

							select	max(nr_sequencia)
							into STRICT	nr_seq_segurado_preco_ant_w
							from	pls_segurado_preco_origem
							where	nr_seq_segurado 	= nr_seq_segurado_w
							and	nr_seq_plano		= nr_seq_plano_w
							and (nr_seq_vinculo_sca = nr_seq_sca_vinculo_w or coalesce(nr_seq_vinculo_sca::text, '') = '')
							and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
							and	(((dt_mes_anterior_w >= trunc(dt_reajuste, 'month')) and (cd_motivo_reajuste	<> 'E'))
								or	((cd_motivo_reajuste	= 'E') and (dt_mes_anterior_w >= trunc(add_months(dt_reajuste,1), 'month'))));

							if (nr_seq_segurado_preco_ant_w IS NOT NULL AND nr_seq_segurado_preco_ant_w::text <> '') then
								begin
								select	max(vl_preco_atual)
								into STRICT	vl_sca_mes_ant_ww
								from	pls_segurado_preco_origem
								where	nr_sequencia	= nr_seq_segurado_preco_ant_w;
								exception
								when others then
									vl_sca_mes_ant_ww := 0;
								end;
							else
								vl_sca_mes_ant_ww	:= 0;
							end if;

							if (ie_calc_primeira_mens_w = 'P') and (ie_lancamento_mensalidade_w <> 'E') then /* Quando é embutido no preço pré, e não soma o valor ao mesmo, deve exibir o valor integral */
								/*Mês calendario adesão*/

								if (ie_calculo_proporcional_w	= 'A') then
									dt_vencimento_mens_w	:= last_day(dt_inicio_vigencia_sca_w);
								else
									dt_vencimento_mens_w	:= to_date(to_char(pls_store_data_mens_pck.get_dt_dia_vencimento) || '/' || to_char(dt_inicio_vigencia_sca_w,'mm/yyyy'));
								end if;

								dt_ultimo_dia_mes_w := to_char(last_day(dt_vencimento_mens_w),'dd');

								if (dt_vencimento_mens_w < dt_inicio_vigencia_sca_w) then
									dt_vencimento_mens_w	:= last_day(dt_vencimento_mens_w);
								end if;

								select	obter_dias_entre_datas(dt_inicio_vigencia_sca_w,dt_vencimento_mens_w) + 1
								into STRICT	qt_dias_w
								;

								vl_sca_mes_ant_w := coalesce(((qt_dias_w/(dt_ultimo_dia_mes_w)::numeric ) * vl_sca_mes_ant_w),0);
								vl_sca_mes_ant_ww := coalesce(((qt_dias_w/(dt_ultimo_dia_mes_w)::numeric ) * vl_sca_mes_ant_ww),0);
							end if;

							nr_seq_item_mensalidade_w := null;
							nr_seq_mens_item_w	:= null;

							if (ie_lancamento_mensalidade_w = 'D') then /* Destacado na mensalidade */
								dt_fim_cobertura_sca_w	:= add_months(dt_inicio_vigencia_sca_w,1)-1;

								if (coalesce(vl_sca_mes_ant_ww,0) <> 0) and (nr_seq_segurado_preco_ant_w <> nr_seq_segurado_preco_w) then

									nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('15', nm_usuario_p, null, null, ds_observacao_w, dt_fim_cobertura_sca_w, dt_inicio_vigencia_sca_w, null, null, 'N', 1, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, nr_seq_segurado_preco_ant_w, null, null, nr_seq_sca_vinculo_w, null, null, null, vl_sca_mes_ant_ww, nr_seq_item_mensalidade_w);
								else
									nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('15', nm_usuario_p, null, null, ds_observacao_w, dt_fim_cobertura_sca_w, dt_inicio_vigencia_sca_w, null, null, 'N', 1, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, nr_seq_segurado_preco_w, null, null, nr_seq_sca_vinculo_w, null, null, null, vl_sca_mes_ant_w, nr_seq_item_mensalidade_w);
								end if;

							elsif (ie_lancamento_mensalidade_w	= 'C') then /* Embutido acrescendo o preço pré-estabelecido */
								nr_seq_mens_item_w	:= pls_store_data_mens_pck.get_nr_seq_mens_item_pre;
								ds_observacao_plano_w	:= pls_store_data_mens_pck.get_ds_observacao_item_pre;

								if (coalesce(nr_seq_mens_item_w,0)	<> 0) then
									if (ds_observacao_plano_w IS NOT NULL AND ds_observacao_plano_w::text <> '') then
										ds_observacao_w	:= ds_observacao_plano_w || chr(13) || ds_observacao_w;
									end if;

									update	pls_mensalidade_seg_item
									set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_sca_mes_ant_w,
										ds_observacao	= ds_observacao_w,
										vl_item		= vl_item + vl_sca_mes_ant_w,
										nr_parcela_sca	= nr_parcela_w,
										nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
									where	nr_sequencia	= nr_seq_mens_item_w;
								end if;
							elsif (ie_lancamento_mensalidade_w	= 'E') then /* Embutido no preço pré-estabelecido */
								nr_seq_mens_item_w	:= pls_store_data_mens_pck.get_nr_seq_mens_item_pre;
								ds_observacao_plano_w	:= pls_store_data_mens_pck.get_ds_observacao_item_pre;

								if (coalesce(nr_seq_mens_item_w,0)	<> 0) then
									if (ds_observacao_plano_w IS NOT NULL AND ds_observacao_plano_w::text <> '') then
										ds_observacao_w	:= ds_observacao_plano_w || chr(13) || ds_observacao_w;
									end if;

									update	pls_mensalidade_seg_item
									set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_sca_mes_ant_w,
										ds_observacao	= ds_observacao_w,
										nr_parcela_sca	= nr_parcela_w,
										nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
									where	nr_sequencia	= nr_seq_mens_item_w;
								end if;
							end if;
							ie_cobr_mes_ant_w	:= 'S';

							if	((coalesce(nr_seq_mens_item_w,0) <> 0) or (coalesce(nr_seq_item_mensalidade_w,0) <> 0)) then
								select	nextval('pls_mensalidade_sca_seq')
								into STRICT	nr_seq_mensalidade_sca_w
								;

								insert	into	pls_mensalidade_sca(	nr_sequencia, nr_seq_item_mens, cd_estabelecimento,
										nr_seq_vinculo_sca, nr_parcela, vl_parcela,
										dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
										nm_usuario_nrec, nr_seq_segurado, nr_seq_segurado_preco)
									values (	nr_seq_mensalidade_sca_w, coalesce(nr_seq_mens_item_w,nr_seq_item_mensalidade_w), cd_estabelecimento_w,
										nr_seq_sca_vinculo_w, 1, vl_sca_mes_ant_w,
										clock_timestamp(), nm_usuario_p, clock_timestamp(),
										nm_usuario_p, nr_seq_segurado_w, nr_seq_segurado_preco_w);
							end if;
						end if;
					end if;
				end if;

				/* Tratamneto para gerar da 1ª a 3ª parcela, quando as anteriores não foram geradas */

				if (nr_parcela_w = 3) and (coalesce(ie_importacao_w,'N') = 'N') and (coalesce(vl_preco_sca_w,0) <> 0) then

					select	add_months(dt_mesano_referencia_w,-2)
					into STRICT	dt_primeira_parcela_w
					;

					if (ie_lancamento_mensalidade_w = 'D') then
						select	count(1)
						into STRICT	qt_sca_mes_anterior_w
						from	pls_mensalidade_seg_item	a,
							pls_mensalidade_segurado	b,
							pls_mensalidade			c
						where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
						and	b.nr_seq_mensalidade		= c.nr_sequencia
						and	coalesce(c.ie_cancelamento::text, '') = ''
						and	b.dt_mesano_referencia	< dt_mesano_referencia_w
						and	b.nr_seq_segurado		= nr_seq_segurado_w
						and	a.nr_seq_vinculo_sca		= nr_seq_sca_vinculo_w;
					else
						select	count(1)
						into STRICT	qt_sca_mes_anterior_w
						from	pls_mensalidade_seg_item	a,
							pls_mensalidade_segurado	b,
							pls_mensalidade_sca		c,
							pls_mensalidade			d
						where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
						and	c.nr_seq_item_mens		= a.nr_sequencia
						and	b.nr_seq_mensalidade		= d.nr_sequencia
						and	coalesce(d.ie_cancelamento::text, '') = ''
						and	b.dt_mesano_referencia	< dt_mesano_referencia_w
						and	b.nr_seq_segurado		= nr_seq_segurado_w
						and	c.nr_seq_vinculo_sca		= nr_seq_sca_vinculo_w;
					end if;

					if (qt_sca_mes_anterior_w = 0) and /* Se o SCA não foi cobrado no mês anterior e se foi liberado no mês anterior */
						(trunc(dt_inicio_vigencia_sca_w,'month') = dt_primeira_parcela_w) then

						select	count(1)
						into STRICT	qt_primeira_mens_sca_w
						from	pls_mensalidade_seg_item a,
							pls_mensalidade_segurado b,
							pls_segurado		d,
							pls_mensalidade		c
						where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
						and	b.nr_seq_segurado		= d.nr_sequencia
						and	b.nr_seq_mensalidade		= c.nr_sequencia
						and	b.dt_mesano_referencia	= dt_mesano_referencia_w
						and	d.nr_sequencia		= nr_seq_segurado_w
						and	coalesce(c.ie_cancelamento::text, '') = ''
						and	a.ie_tipo_item		= '15'
						and	a.nr_seq_vinculo_sca 	= nr_seq_sca_vinculo_w
						and	nr_parcela_sca		= 1  LIMIT 1;

						if (qt_primeira_mens_sca_w = 0) then
							ds_observacao_w		:= 'Cobrança referente a 1° parcela do SCA '||nm_sca_w;
							ds_observacao_2_w	:= 'Cobrança referente a 2° parcela do SCA '||nm_sca_w;

							vl_sca_mes_ant_w	:= coalesce(vl_preco_sca_w,0);
							if (ie_calc_primeira_mens_w = 'P') and (ie_lancamento_mensalidade_w <> 'E') then /* Quando é embutido no preço pré, e não soma o valor ao mesmo, deve exibir o valor integral */
								/*Mês calendario adesão*/

								if (ie_calculo_proporcional_w	= 'A') then
									dt_vencimento_mens_w	:= last_day(dt_inicio_vigencia_sca_w);
								else
									dt_vencimento_mens_w	:= to_date(to_char(pls_store_data_mens_pck.get_dt_dia_vencimento) || '/' || to_char(dt_inicio_vigencia_sca_w,'mm/yyyy'));
								end if;

								dt_ultimo_dia_mes_w := to_char(last_day(dt_vencimento_mens_w),'dd');

								if (dt_vencimento_mens_w < dt_inicio_vigencia_sca_w) then
									dt_vencimento_mens_w	:= last_day(dt_vencimento_mens_w);
								end if;

								select	obter_dias_entre_datas(dt_inicio_vigencia_sca_w,dt_vencimento_mens_w) + 1
								into STRICT	qt_dias_w
								;

								vl_sca_mes_ant_w := coalesce(((qt_dias_w/(dt_ultimo_dia_mes_w)::numeric ) * vl_sca_mes_ant_w),0);
							end if;

							nr_seq_mens_item_w := null;
							nr_seq_item_mensalidade_w := null;

							if (ie_lancamento_mensalidade_w = 'D') then /* Destacado na mensalidade */
								dt_fim_cobertura_sca_w		:= add_months(dt_inicio_vigencia_sca_w,1)-1;
								dt_inicio_cobertura_2_w		:= add_months(dt_inicio_vigencia_sca_w,1);
								dt_fim_cobertura_sca_2_w	:= add_months(dt_inicio_vigencia_sca_w,2)-1;

								nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('15', nm_usuario_p, null, null, ds_observacao_w, dt_fim_cobertura_sca_w, dt_inicio_vigencia_sca_w, null, null, 'N', 1, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, nr_seq_segurado_preco_w, null, null, nr_seq_sca_vinculo_w, null, null, null, vl_sca_mes_ant_w, nr_seq_item_mensalidade_w);

								nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('15', nm_usuario_p, null, null, ds_observacao_2_w, dt_fim_cobertura_sca_2_w, dt_inicio_cobertura_2_w, null, null, 'N', 2, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, nr_seq_segurado_preco_w, null, null, nr_seq_sca_vinculo_w, null, null, null, vl_preco_sca_w, nr_seq_item_mensalidade_w);

							elsif (ie_lancamento_mensalidade_w	= 'C') then /* Embutido acrescendo o preço pré-estabelecido */
								nr_seq_mens_item_w	:= pls_store_data_mens_pck.get_nr_seq_mens_item_pre;
								ds_observacao_plano_w	:= pls_store_data_mens_pck.get_ds_observacao_item_pre;

								if (coalesce(nr_seq_mens_item_w,0)	<> 0) then
									if (ds_observacao_plano_w IS NOT NULL AND ds_observacao_plano_w::text <> '') then
										ds_observacao_w	:= ds_observacao_plano_w || chr(13) || ds_observacao_w;
									end if;

									update	pls_mensalidade_seg_item
									set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_sca_mes_ant_w,
										ds_observacao	= ds_observacao_w,
										vl_item		= vl_item + vl_sca_mes_ant_w,
										nr_parcela_sca	= nr_parcela_w,
										nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
									where	nr_sequencia	= nr_seq_mens_item_w;

									update	pls_mensalidade_seg_item
									set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_preco_sca_w,
										ds_observacao	= ds_observacao_w,
										vl_item		= vl_item + vl_preco_sca_w,
										nr_parcela_sca	= nr_parcela_w,
										nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
									where	nr_sequencia	= nr_seq_mens_item_w;
								end if;
							elsif (ie_lancamento_mensalidade_w	= 'E') then /* Embutido no preço pré-estabelecido */
								nr_seq_mens_item_w	:= pls_store_data_mens_pck.get_nr_seq_mens_item_pre;
								ds_observacao_plano_w	:= pls_store_data_mens_pck.get_ds_observacao_item_pre;

								if (coalesce(nr_seq_mens_item_w,0)	<> 0) then
									if (ds_observacao_plano_w IS NOT NULL AND ds_observacao_plano_w::text <> '') then
										ds_observacao_w	:= ds_observacao_plano_w || chr(13) || ds_observacao_w;
									end if;

									update	pls_mensalidade_seg_item
									set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_sca_mes_ant_w,
										ds_observacao	= ds_observacao_w,
										nr_parcela_sca	= nr_parcela_w,
										nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
									where	nr_sequencia	= nr_seq_mens_item_w;

									update	pls_mensalidade_seg_item
									set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_preco_sca_w,
										ds_observacao	= ds_observacao_w,
										nr_parcela_sca	= nr_parcela_w,
										nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
									where	nr_sequencia	= nr_seq_mens_item_w;
								end if;
							end if;
							ie_cobr_mes_ant_w	:= 'S';

							if	((coalesce(nr_seq_mens_item_w,0) <> 0) or (coalesce(nr_seq_item_mensalidade_w,0) <> 0)) then
								select	nextval('pls_mensalidade_sca_seq')
								into STRICT	nr_seq_mensalidade_sca_w
								;

								insert	into	pls_mensalidade_sca(	nr_sequencia, nr_seq_item_mens, cd_estabelecimento,
										nr_seq_vinculo_sca, nr_parcela, vl_parcela,
										dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
										nm_usuario_nrec, nr_seq_segurado, nr_seq_segurado_preco)
									values (	nr_seq_mensalidade_sca_w, coalesce(nr_seq_mens_item_w,nr_seq_item_mensalidade_w), cd_estabelecimento_w,
										nr_seq_sca_vinculo_w, 1, vl_sca_mes_ant_w,
										clock_timestamp(), nm_usuario_p, clock_timestamp(),
										nm_usuario_p, nr_seq_segurado_w, nr_seq_segurado_preco_w);

								select	nextval('pls_mensalidade_sca_seq')
								into STRICT	nr_seq_mensalidade_sca_w
								;

								insert	into	pls_mensalidade_sca(	nr_sequencia, nr_seq_item_mens, cd_estabelecimento,
										nr_seq_vinculo_sca, nr_parcela, vl_parcela,
										dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
										nm_usuario_nrec, nr_seq_segurado, nr_seq_segurado_preco)
									values (	nr_seq_mensalidade_sca_w, coalesce(nr_seq_mens_item_w,nr_seq_item_mensalidade_w), cd_estabelecimento_w,
										nr_seq_sca_vinculo_w, 2, vl_preco_sca_w,
										clock_timestamp(), nm_usuario_p, clock_timestamp(),
										nm_usuario_p, nr_seq_segurado_w, nr_seq_segurado_preco_w);
							end if;
						end if;
					end if;
				end if;
				/* Fim tratamneto para gerar da 1ª a 3ª parcela */

				ie_rescisao_proporcional_w	:= 'N';
				if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
					begin
					dt_periodo_resc_inicial_w	:= to_char(dt_inicio_vigencia_sca_w,'dd') ||'/'|| to_char(dt_mesano_referencia_w,'mm/yyyy');
					exception
					when others then
						dt_periodo_resc_inicial_w	:= last_day(dt_mesano_referencia_w);
					end;
					--aaschlote 02/07/2012 - OS 456034 - Verificar se o pagador é proporcional a primeira mensalidade, caso for então paga conforme a sua data de rescisão, senão paga conforme sua data de adesão
					if	((((dt_rescisao_w > dt_periodo_resc_inicial_w) and (dt_rescisao_w < add_months(dt_periodo_resc_inicial_w,1))) or (ie_calc_primeira_mens_w = 'P') or (dt_rescisao_w < dt_periodo_resc_inicial_w)) and
						((trunc(dt_rescisao_w,'mm') = trunc(dt_mesano_referencia_w,'mm')) or
						((trunc(dt_rescisao_w, 'mm') = trunc(add_months(dt_mesano_referencia_w, 1),'mm')) and (ie_calc_primeira_mens_w = 'I')))) then

						if (coalesce(nr_seq_intercambio_w::text, '') = '') then
							select	max(a.nr_sequencia)
							into STRICT	nr_seq_regra_resc_proporc_w
							from	pls_regra_mens_contrato	a
							where	a.nr_seq_contrato	= nr_seq_contrato_w
							and	a.ie_tipo_regra		= 'G'
							and	trunc(dt_mesano_referencia_w,'dd') between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w);
						else
							select	max(a.nr_sequencia)
							into STRICT	nr_seq_regra_resc_proporc_w
							from	pls_regra_mens_contrato	a
							where	a.nr_seq_intercambio	= nr_seq_intercambio_w
							and	a.ie_tipo_regra		= 'G'
							and	trunc(dt_mesano_referencia_w,'dd') between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w);
						end if;

						if (coalesce(nr_seq_regra_resc_proporc_w,0) = 0) then
							select	max(nr_sequencia)
							into STRICT	nr_seq_regra_resc_proporc_w
							from	pls_regra_mens_contrato
							where	coalesce(nr_seq_contrato::text, '') = ''
							and	coalesce(nr_seq_intercambio::text, '') = ''
							and	ie_tipo_regra		= 'G'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	trunc(dt_mesano_referencia_w,'dd') between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_mesano_referencia_w)
							and	((coalesce(ie_pessoa_contrato,'A') = ie_tipo_contrato_w) or (ie_pessoa_contrato = 'A'));
						end if;

						if (coalesce(nr_seq_regra_resc_proporc_w::text, '') = '') then
							ie_rescisao_proporcional_w	:= 'N';
						else
							select	coalesce(ie_rescisao_proporcional,'N')
							into STRICT	ie_rescisao_proporcional_w
							from	pls_regra_mens_contrato
							where	nr_sequencia	= nr_seq_regra_resc_proporc_w;
						end if;
					end if;
				end if;

				if (ie_rescisao_proporcional_w = 'S') then
					begin
					dt_periodo_resc_inicial_w	:= to_char(dt_inicio_vigencia_sca_w,'dd') ||'/'|| to_char(dt_mesano_referencia_w,'mm/yyyy');
					exception
					when others then
						dt_periodo_resc_inicial_w	:= last_day(dt_mesano_referencia_w);
					end;

					if (dt_rescisao_w > dt_periodo_resc_inicial_w) and (dt_rescisao_w < add_months(dt_periodo_resc_inicial_w,1)) and (ie_calc_primeira_mens_w = 'I') then

						/*aaschlote 31/07/2012 - Criei essa variavel auxiliar para não ter problemas com os dias dos meses*/

						begin
						dt_montar_data_aux_w	:= to_date(to_char(dt_adesao_w,'dd')||'/'||to_char(dt_mesano_referencia_w,'mm/yyyy'),'dd/mm/yyyy');
						exception
						when others then
							dt_montar_data_aux_w	:= last_day(dt_mesano_referencia_w);
						end;

						qt_dias_w	:= obter_dias_entre_datas(dt_montar_data_aux_w,dt_rescisao_w) + 1;
					elsif (ie_calc_primeira_mens_w = 'P') and (trunc(dt_rescisao_w,'mm') = trunc(dt_mesano_referencia_w,'mm')) then
						qt_dias_w	:= obter_dias_entre_datas(dt_mesano_referencia_w,dt_rescisao_w)+1;
					elsif (dt_rescisao_w < dt_periodo_resc_inicial_w) then
						qt_dias_w	:= 0;
					elsif	(dt_rescisao_w > (add_months(dt_periodo_resc_inicial_w,1)-1)) then
						qt_dias_w	:= -1;
					end if;

					if (qt_dias_w >= 0) then
						if (ie_data_base_proporcional_w = 'T') then
							dt_ultimo_dia_mes_w	:= 30;
						else
							dt_ultimo_dia_mes_w	:= to_char(last_day(dt_mesano_referencia_w),'dd');
						end if;

						vl_preco_sca_w := ((qt_dias_w/(dt_ultimo_dia_mes_w)::numeric ) * vl_preco_sca_w);

						dt_fim_cobertura_w := dt_rescisao_w;

						update	pls_mensalidade_seg_item
						set	dt_fim_cobertura = dt_rescisao_w
						where	nr_sequencia = nr_seq_mens_item_w;
					end if;
				end if;

				if (ie_cobr_mes_ant_w = 'S') then
					select	count(1)
					into STRICT	qt_mensalidade_sca_w
					from	pls_mensalidade_seg_item a,
						pls_mensalidade_segurado b,
						pls_mensalidade		c
					where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
					and	b.nr_seq_mensalidade		= c.nr_sequencia
					and	coalesce(c.ie_cancelamento::text, '') = ''
					and	a.ie_tipo_item			= '15'
					and	a.nr_seq_vinculo_sca 		= nr_seq_sca_vinculo_w
					and	b.dt_mesano_referencia		= dt_mesano_referencia_w
					and	nr_parcela_sca	not in (1,2)  LIMIT 1;
				else
					select	count(1)
					into STRICT	qt_mensalidade_sca_w
					from	pls_mensalidade_seg_item a,
						pls_mensalidade_segurado b,
						pls_mensalidade		c
					where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
					and	b.nr_seq_mensalidade		= c.nr_sequencia
					and	a.nr_seq_vinculo_sca 		= nr_seq_sca_vinculo_w
					and	b.dt_mesano_referencia		= dt_mesano_referencia_w
					and	coalesce(c.ie_cancelamento::text, '') = ''
					and	a.ie_tipo_item			= '15'  LIMIT 1;
				end if;

				if (coalesce(qt_parcelas_cobranca_w,nr_parcela_w) >= nr_parcela_w) then
					ie_parcelas_sca_w	:= 'S';
				end if;

				ds_observacao_w	:= 'SCA -> ' || chr(39) || nm_sca_w || chr(39) ||' vinculado ao beneficiário ' || nr_seq_segurado_w || ' - ' || nm_segurado_w;
				if (qt_mensalidade_sca_w = 0) and (ie_parcelas_sca_w = 'S') and (coalesce(vl_preco_sca_w,0) <> 0) then
					if (coalesce(vl_preco_sca_w::text, '') = '') then
						vl_preco_sca_w := 0;
					end if;

					nr_seq_mens_item_w := null;
					nr_seq_item_mensalidade_w := null;

					if (ie_lancamento_mensalidade_w	= 'D') then /* Destacado na mensalidade */
						nr_seq_item_mensalidade_w := pls_insert_mens_seg_item('15', nm_usuario_p, null, null, ds_observacao_w, dt_fim_cobertura_w, dt_inicio_cobertura_w, null, null, 'N', nr_parcela_w, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, null, null, nr_seq_segurado_preco_w, null, null, nr_seq_sca_vinculo_w, null, null, null, vl_preco_sca_w, nr_seq_item_mensalidade_w);

						if (coalesce(vl_reajuste_indice_w,0) > 0) then

							nr_seq_item_mens_w := null;

							nr_seq_item_mens_w := pls_insert_mens_seg_item('35', nm_usuario_p, null, null, null, dt_fim_cobertura_w, dt_inicio_cobertura_w, null, null, 'N', nr_parcela_w, null, null, null, null, null, null, nr_seq_mensalidade_seg_p, null, null, null, null, nr_seq_reajuste_preco_w, null, nr_seq_preco_indice_w, null, null, nr_seq_sca_vinculo_w, null, null, null, vl_reajuste_indice_w, nr_seq_item_mens_w);

							if (nr_seq_item_mens_w IS NOT NULL AND nr_seq_item_mens_w::text <> '') then
								CALL pls_inserir_apropriacao_preco('35', nr_seq_item_mens_w, nr_seq_segurado_preco_w, vl_reajuste_indice_w, 0, 0, 0, nm_usuario_p);
							end if;
						end if;
					elsif (ie_lancamento_mensalidade_w	= 'C') then /* Embutido acrescendo o preço pré-estabelecido */
						nr_seq_mens_item_w	:= pls_store_data_mens_pck.get_nr_seq_mens_item_pre;
						ds_observacao_plano_w	:= pls_store_data_mens_pck.get_ds_observacao_item_pre;

						if (coalesce(nr_seq_mens_item_w,0)	<> 0) then
							if (coalesce(vl_reajuste_indice_w,0) > 0) then
								select	max(a.nr_sequencia)
								into STRICT	nr_seq_mens_item_reaj_w
								from	pls_mensalidade_seg_item	a,
									pls_mensalidade_segurado	b
								where	a.nr_seq_mensalidade_seg	= b.nr_sequencia
								and	b.nr_sequencia			= nr_seq_mensalidade_seg_p
								and	a.ie_tipo_item			= '25';

								if (coalesce(nr_seq_mens_item_w,0)	<> 0) then
									if (nr_parcela_w = 1) and (ie_calc_primeira_mens_w = 'P') and (ie_lancamento_mensalidade_w <> 'E') then
										vl_reajuste_indice_w := coalesce(((qt_dias_w/(dt_ultimo_dia_mes_w)::numeric ) * vl_reajuste_indice_w),0);
									end if;

									update	pls_mensalidade_seg_item
									set	vl_sca_embutido		= coalesce(vl_sca_embutido,0) + vl_reajuste_indice_w,
										vl_item			= vl_item + vl_reajuste_indice_w,
										nr_parcela_sca		= nr_parcela_w,
										nr_seq_seg_preco_origem = nr_seq_preco_indice_w
									where	nr_sequencia		= nr_seq_mens_item_reaj_w;
								else
									vl_preco_sca_w	:= vl_preco_sca_w + coalesce(vl_reajuste_indice_w,0);
								end if;
							end if;

							if (ds_observacao_plano_w IS NOT NULL AND ds_observacao_plano_w::text <> '') then
								ds_observacao_w	:= ds_observacao_plano_w || chr(13) || ds_observacao_w;
							end if;

							if	((coalesce(nr_seq_mens_item_reaj_w::text, '') = '') and (coalesce(vl_reajuste_indice_w,0) > 0)) then
								update	pls_mensalidade_seg_item
								set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_preco_sca_w + coalesce(vl_reajuste_indice_w,0),
									ds_observacao	= ds_observacao_w,
									vl_item		= vl_item + vl_preco_sca_w + coalesce(vl_reajuste_indice_w,0),
									nr_parcela_sca	= nr_parcela_w,
									nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
								where	nr_sequencia	= nr_seq_mens_item_w;
							else
								update	pls_mensalidade_seg_item
								set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_preco_sca_w,
									ds_observacao	= ds_observacao_w,
									vl_item		= vl_item + vl_preco_sca_w,
									nr_parcela_sca	= nr_parcela_w,
									nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
								where	nr_sequencia	= nr_seq_mens_item_w;
							end if;
						end if;
					elsif (ie_lancamento_mensalidade_w	= 'E') then /* Embutido no preço pré-estabelecido */
						nr_seq_mens_item_w	:= pls_store_data_mens_pck.get_nr_seq_mens_item_pre;
						ds_observacao_plano_w	:= pls_store_data_mens_pck.get_ds_observacao_item_pre;

						if (coalesce(nr_seq_mens_item_w,0)	<> 0) then
							if (ds_observacao_plano_w IS NOT NULL AND ds_observacao_plano_w::text <> '') then
								ds_observacao_w	:= ds_observacao_plano_w || chr(13) || ds_observacao_w;
							end if;

							update	pls_mensalidade_seg_item
							set	vl_sca_embutido	= coalesce(vl_sca_embutido,0) + vl_preco_sca_w,
								ds_observacao	= ds_observacao_w,
								nr_parcela_sca	= nr_parcela_w,
								nr_seq_seg_preco_origem = nr_seq_segurado_preco_w
							where	nr_sequencia	= nr_seq_mens_item_w;
						end if;
					end if;

					if	((coalesce(nr_seq_mens_item_w,0) <> 0) or (coalesce(nr_seq_item_mensalidade_w,0) <> 0))then
						select	nextval('pls_mensalidade_sca_seq')
						into STRICT	nr_seq_mensalidade_sca_w
						;

						insert	into	pls_mensalidade_sca(	nr_sequencia, nr_seq_item_mens, cd_estabelecimento,
								nr_seq_vinculo_sca, nr_parcela, vl_parcela,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, nr_seq_segurado, nr_seq_segurado_preco)
							values (	nr_seq_mensalidade_sca_w, coalesce(nr_seq_mens_item_w,nr_seq_item_mensalidade_w), cd_estabelecimento_w,
								nr_seq_sca_vinculo_w, nr_parcela_w, vl_preco_sca_w,
								clock_timestamp(), nm_usuario_p, clock_timestamp(),
								nm_usuario_p, nr_seq_segurado_w, nr_seq_segurado_preco_w);
					end if;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

/* Não pode dar commit */

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_mens_sca ( nr_seq_mensalidade_seg_p bigint, ie_gerar_mens_rescisao_p text, nm_usuario_p text) FROM PUBLIC;

