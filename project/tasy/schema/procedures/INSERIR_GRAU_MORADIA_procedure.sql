-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_grau_moradia ( cd_pessoa_fisica_p text, cd_pessoa_familia_p text DEFAULT NULL, nr_seq_grau_parentesco_p bigint DEFAULT '0', grau_parentesco_inverso_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_domicilio_p bigint DEFAULT NULL, ie_operacao_p text DEFAULT 'other') AS $body$
DECLARE


     existe_relacao_w bigint;


  reg RECORD;

BEGIN

     existe_relacao_w:=0;


		IF (ie_operacao_p = 'insert_converse') THEN

            SELECT CASE WHEN coalesce(MAX(nr_sequencia)::text, '') = '' THEN '0'  ELSE MAX(nr_sequencia) END
			INTO STRICT existe_relacao_w
			FROM pessoa_domicilio_moradia
			WHERE cd_pessoa_fisica = cd_pessoa_familia_p
			AND  cd_pessoa_familia = cd_pessoa_fisica_p;

                IF (existe_relacao_w > 0 ) THEN
					UPDATE pessoa_domicilio_moradia
					SET nr_seq_grau_parent = grau_parentesco_inverso_p
					WHERE cd_pessoa_fisica = cd_pessoa_familia_p
					AND  cd_pessoa_familia = cd_pessoa_fisica_p;
                ELSE
				BEGIN
					INSERT INTO pessoa_domicilio_moradia(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_pessoa_fisica,
						cd_pessoa_familia,
						nr_seq_grau_parent,
						nr_seq_domicilio,
						ie_mudou_se)
					VALUES (
						nextval('pessoa_domicilio_moradia_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_familia_p,
						cd_pessoa_fisica_p,
						grau_parentesco_inverso_p,
						cd_domicilio_p,
						'n');


                    FOR reg IN (
						SELECT DISTINCT cd_pessoa_familia
						FROM pessoa_domicilio_moradia
						WHERE nr_seq_domicilio = cd_domicilio_p
						AND (cd_pessoa_familia IS NOT NULL AND cd_pessoa_familia::text <> '')
						EXCEPT
						SELECT DISTINCT cd_pessoa_familia
						FROM pessoa_domicilio_moradia
						WHERE cd_pessoa_fisica = cd_pessoa_familia_p
						OR cd_pessoa_familia = cd_pessoa_familia_p
					) LOOP
                         INSERT INTO pessoa_domicilio_moradia(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_domicilio,
							cd_pessoa_fisica,
							cd_pessoa_familia,
							nr_seq_grau_parent,
							ie_mudou_se)
						VALUES (
							nextval('pessoa_domicilio_moradia_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_domicilio_p,
							cd_pessoa_familia_p,
							reg.cd_pessoa_familia,
							'0',
							'n');

						INSERT INTO pessoa_domicilio_moradia(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_domicilio,
							cd_pessoa_fisica,
							cd_pessoa_familia,
							nr_seq_grau_parent,
							ie_mudou_se)
						VALUES (
							nextval('pessoa_domicilio_moradia_seq'),
							clock_timestamp(),  nm_usuario_p,
							clock_timestamp(),  nm_usuario_p,
							cd_domicilio_p,
							reg.cd_pessoa_familia,
							cd_pessoa_familia_p,
							'0',
							'n');

                    END LOOP;

                END;
                END IF;
		ELSIF (ie_operacao_p = 'insert_domicilio_vinculado') THEN
        BEGIN
            FOR reg IN (
				SELECT DISTINCT cd_pessoa_familia
				FROM pessoa_domicilio_moradia
				WHERE nr_seq_domicilio = cd_domicilio_p
				AND (cd_pessoa_familia IS NOT NULL AND cd_pessoa_familia::text <> '')
				EXCEPT
				SELECT DISTINCT cd_pessoa_familia
				FROM pessoa_domicilio_moradia
				WHERE cd_pessoa_fisica = cd_pessoa_fisica_p
				OR cd_pessoa_familia = cd_pessoa_fisica_p
            ) LOOP

                INSERT INTO pessoa_domicilio_moradia(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_domicilio,
					cd_pessoa_fisica,
					cd_pessoa_familia,
					nr_seq_grau_parent)
				VALUES (
					nextval('pessoa_domicilio_moradia_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_domicilio_p,
					cd_pessoa_fisica_p,
					reg.cd_pessoa_familia,
					'0');

                INSERT INTO pessoa_domicilio_moradia(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_domicilio,
					cd_pessoa_fisica,
					cd_pessoa_familia,
					nr_seq_grau_parent)
				VALUES (
					nextval('pessoa_domicilio_moradia_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_domicilio_p,
					reg.cd_pessoa_familia,
					cd_pessoa_fisica_p,
					'0');
				COMMIT;

            END LOOP;

        END;
		END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_grau_moradia ( cd_pessoa_fisica_p text, cd_pessoa_familia_p text DEFAULT NULL, nr_seq_grau_parentesco_p bigint DEFAULT '0', grau_parentesco_inverso_p bigint DEFAULT NULL, nm_usuario_p text DEFAULT NULL, cd_domicilio_p bigint DEFAULT NULL, ie_operacao_p text DEFAULT 'other') FROM PUBLIC;

