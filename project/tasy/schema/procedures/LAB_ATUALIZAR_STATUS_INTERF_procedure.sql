-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_atualizar_status_interf ( nr_prescricao_p bigint, cd_interface_p bigint, ie_status_envio_p bigint, ie_status_pos_envio_p bigint, sigla_equip_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_limpar_tabela_p text default 'N') AS $body$
DECLARE


qt_etapa_amostra_w          integer;
qt_total_amostra_w          integer;
sigla_equip_w               valor_dominio_v.ds_valor_dominio%type;
ds_exames_w                 w_dados_interf.ds_exames%type;
cd_material_w               w_dados_interf.cd_material%type;
cd_exame_w                  exame_laboratorio.cd_exame_integracao%type;
nr_seq_exame_w              exame_laboratorio.nr_seq_exame%type;
ie_solicitacao_W            exame_laboratorio.ie_solicitacao%type;
nr_seq_superior_w           exame_laboratorio.nr_seq_superior%type;
nr_ordem_amostra_w          exame_laboratorio.nr_ordem_amostra%type;
nr_seq_material_w           material_exame_lab.nr_sequencia%type;
ie_exame_amostra_w          lab_parametro.ie_exame_amostra%type;
ie_gerar_result_prescr_w    lab_parametro.ie_gerar_result_prescr%type;
nr_seq_prescr_proc_mat_w    prescr_proc_mat_item.nr_sequencia%type;
nr_seq_prescr_w             prescr_procedimento.nr_sequencia%type;
ie_material_equip_w         lab_parametro.ie_gerar_result_prescr%type;
nr_sequencia_w              w_dados_interf.nr_sequencia%type;

nr_order_log_w              integer := 0;
dt_base_log_w               timestamp := clock_timestamp();
ie_gera_log_interf_w        lab_parametro.ie_gera_log_interf%type := null;

c01 CURSOR FOR
    SELECT  ds_exames,
            cd_material,
            nr_sequencia
    from    w_dados_interf
    where   nr_prescricao = nr_prescricao_p
      and   cd_interface = cd_interface_p
      and   cd_estabelecimento = cd_estabelecimento_p
      and   nm_usuario = nm_usuario_p
      and   (ds_exames IS NOT NULL AND ds_exames::text <> '');

c02 CURSOR FOR
    SELECT  ppmi.nr_sequencia,
            pp.nr_sequencia
    from    prescr_proc_material ppm
            inner join prescr_proc_mat_item ppmi on (ppm.nr_prescricao = ppmi.nr_prescricao and ppm.nr_sequencia = ppmi.nr_seq_prescr_proc_mat)
            inner join prescr_procedimento pp ON (pp.nr_prescricao = ppmi.nr_prescricao and pp.nr_sequencia = ppmi.nr_seq_prescr)
    where   pp.nr_seq_exame = nr_seq_exame_w
      and   pp.cd_material_exame = Obter_Material_Exame_Lab(nr_seq_material_W, null, 2)
      and   ppm.nr_prescricao = nr_prescricao_p
      and   ppm.nr_seq_material = nr_seq_material_w
      and   ppm.nr_amostra = coalesce(nr_ordem_amostra_w, 1)
      and   coalesce(ppmi.dt_integracao::text, '') = ''
      and   ppmi.ie_status = ie_status_envio_p;

    procedure gravar_log_interno(
            nr_id_log_pp in text
        ) is
;
BEGIN

        if (coalesce(ie_gera_log_interf_w::text, '') = '') then
            begin
                select
                    coalesce(lp.ie_gera_log_interf, 'S')
                into STRICT
                    ie_gera_log_interf_w
                from
                    lab_parametro lp
                where
                    lp.cd_estabelecimento = cd_estabelecimento_p;
            exception
                when no_data_found or too_many_rows then
                    ie_gera_log_interf_w := 'S';
                when OTHERS then
                    ie_gera_log_interf_w := 'S';
                    CALL gravar_log_lab_pragma(
                        cd_log_p =>  42,
                        nm_usuario_p => coalesce(nm_usuario_p, 'interface'),
                        ds_log_p => 'Cannot fetch lab parameters ' || sqlerrm()
                    );
            end;
        end if;

        if (ie_gera_log_interf_w <> 'N') then
        nr_order_log_w :=  nr_order_log_w + 1;

        CALL gravar_log_lab_pragma(
            cd_log_p =>  42,
            nm_usuario_p => coalesce(nm_usuario_p, 'interface'),
            ds_log_p => to_char(dt_base_log_w, 'yyyymmddhh24miss')
                    || ' - lab_atualizar_status_interf - '||chr(13)||';'
                    || to_char(nr_order_log_w, 'FM00000') || ' - ' || to_char(nr_id_log_pp, 'FM00000')||chr(13)||';'
                    || 'qt_etapa_amostra_w: ' || to_char(qt_etapa_amostra_w)||chr(13)||';'
                    || 'qt_total_amostra_w: ' || to_char(qt_total_amostra_w)||chr(13)||';'
                    || 'cd_estabelecimento_p: ' || to_char(cd_estabelecimento_p)||chr(13)||';'
                    || 'nr_sequencia_w: ' || to_char(nr_sequencia_w)||chr(13)||';'
                    || 'nr_seq_exame_w: ' || to_char(nr_seq_exame_w)||chr(13)||';'
                    || 'nr_seq_superior_w: ' || to_char(nr_seq_superior_w)||chr(13)||';'
                    || 'nr_ordem_amostra_w: ' || to_char(nr_ordem_amostra_w)||chr(13)||';'
                    || 'nr_seq_material_w: ' || to_char(nr_seq_material_w)||chr(13)||';'
                    || 'nr_seq_prescr_proc_mat_w: ' || to_char(nr_seq_prescr_proc_mat_w)||chr(13)||';'
                    || 'nr_seq_prescr_w: ' || to_char(nr_seq_prescr_w)||chr(13)||';'
                    || 'sigla_equip_w: ' || to_char(sigla_equip_w)||chr(13)||';'
                    || 'cd_exame_w: ' || to_char(cd_exame_w)||chr(13)||';'
                    || 'ds_exames_w: ' || to_char(ds_exames_w)||chr(13)||';'
                    || 'cd_material_w: ' || to_char(cd_material_w)||chr(13)||';'
                    || 'ie_solicitacao_W: ' || to_char(ie_solicitacao_W)||chr(13)||';'
                    || 'ie_exame_amostra_w: ' || to_char(ie_exame_amostra_w)||chr(13)||';'
                    || 'ie_gerar_result_prescr_w: ' || to_char(ie_gerar_result_prescr_w)||chr(13)||';'
                    || 'ie_material_equip_w: ' || to_char(ie_material_equip_w)||chr(13)||';'
                    || 'ie_status_envio_p: '|| to_char(ie_status_envio_p),
            nr_prescricao_p => nr_prescricao_p
        );
        end if;
    end;

begin

gravar_log_interno(10);

select  coalesce(max(ds_valor_dominio),sigla_equip_p)
into STRICT    sigla_equip_w
from    valor_dominio_v
where   cd_dominio = 1638
and vl_dominio = cd_interface_p;

select  coalesce(max(ie_exame_amostra),'N'),
    coalesce(max(ie_gerar_result_prescr),'N'),
    coalesce(max(ie_material_equip), 'N')
into STRICT    ie_exame_amostra_w,
    ie_gerar_result_prescr_w,
    ie_material_equip_w
from    lab_parametro
where   cd_estabelecimento = cd_estabelecimento_p;

gravar_log_interno(40);

open c01;
loop
fetch c01 into
    ds_exames_w,
    cd_material_w,
    nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

    nr_seq_material_w := 0;
    if (ie_gerar_result_prescr_w = 'S') then
        select  lab_obter_nr_seq_material_int(nr_prescricao_p,cd_material_w)
        into STRICT    nr_seq_material_w
;
    end if;

    gravar_log_interno(60);

    if (coalesce(nr_seq_material_w, 0) = 0) then
        select  coalesce(MAX(a.nr_sequencia),0)
        into STRICT    nr_seq_material_w
        from    material_exame_lab a,
            prescr_procedimento b
        where   a.cd_material_exame = b.cd_material_exame
        and     coalesce(a.cd_material_integracao, a.cd_material_exame) = cd_material_w
        and     b.nr_prescricao = nr_prescricao_p;
    end if;

    gravar_log_interno(70);

    if (coalesce(nr_seq_material_w, 0) = 0) then
        -- Material nao encontrado na prescricao
        select  coalesce(max(nr_sequencia),0)
        into STRICT    nr_seq_material_w
        from    material_exame_lab
        where   coalesce(cd_material_integracao, cd_material_exame) = cd_material_w;
    end if;

    gravar_log_interno(80);

    while(ds_exames_w IS NOT NULL AND ds_exames_w::text <> '') loop
        cd_exame_w := trim(both substr(ds_exames_w, 1, 8));

        if (length(ds_exames_w) > 8) then
            ds_exames_w := substr(ds_exames_w, 9, length(ds_exames_w));
        else
            ds_exames_w := null;
        end if;

        gravar_log_interno(100);

        if (ie_material_equip_w = 'S') then
            select  coalesce(max(a.nr_sequencia), nr_seq_material_w)
            into STRICT    nr_seq_material_w
            from    material_exame_lab a,
                prescr_procedimento b,
                exame_laboratorio c
            where   a.cd_material_exame = b.cd_material_exame
            and coalesce(obter_cd_material_int(a.nr_sequencia, c.nr_seq_exame, sigla_equip_p),
                a.cd_material_integracao, a.cd_material_exame) = cd_material_w
            and b.nr_prescricao = nr_prescricao_p
            and c.nr_seq_exame = b.nr_seq_exame
            and ((coalesce(Obter_Equip_Exame_integracao(cd_exame_w, sigla_equip_p,1), c.nr_seq_exame) = c.nr_seq_exame) or (cd_exame_w = coalesce(c.CD_EXAME_INTEGRACAO, c.cd_exame)));
        end if;

        gravar_log_interno(110);

        -- O codigo de integracao do exame deve ser unico! Sujeito a problemas com o comando MAX
        select  coalesce(max(nr_seq_exame),0),
            coalesce(max(ie_solicitacao),'S'),
            coalesce(max(nr_seq_superior),0),
            max(nr_ordem_amostra)
        into STRICT    nr_seq_exame_w,
            ie_solicitacao_W,
            nr_seq_superior_w,
            nr_ordem_amostra_w
        from    exame_laboratorio
        where   nr_seq_exame = Obter_Equip_Exame_Integracao(cd_exame_w, sigla_equip_w, 1);

        gravar_log_interno(120);

        if (nr_seq_exame_w = 0) then
            select  coalesce(max(nr_seq_exame),0),
                coalesce(max(ie_solicitacao),'S'),
                coalesce(max(nr_seq_superior),0),
                max(nr_ordem_amostra)
            into STRICT    nr_seq_exame_w,
                ie_solicitacao_W,
                nr_seq_superior_w,
                nr_ordem_amostra_w
            from    exame_laboratorio
            where   coalesce(cd_exame_integracao, cd_exame) = cd_exame_w;
        end if;

        gravar_log_interno(130);

        if (ie_solicitacao_w = 'N' and nr_seq_superior_w > 0) then
            nr_seq_exame_w := nr_seq_superior_w;
        end if;

        if (nr_seq_exame_w = 0 and regexp_like(cd_exame_w, '_\d+$')) then

             -- Tratamento para casos em que o exame possui quantidade de amostra maior que 1 (Exames de Laboratorio >> Dados Exame >> Materiais >> Qt. Coleta)

             -- e nao possui analito cadastrado correspondente a amostra gerada. (CD_EXAME + '_' + NR_ORDEM_AMOSTRA) .

             -- Feito para conseguir atribuir data de integracao ao exame na tabela PRESCR_PROCEDIMENTO e PRESCR_PROC_MAT_ITEM.

             -- Ordem de servico: 1412083
            select  coalesce(max(nr_seq_exame),0),
                coalesce(max(ie_solicitacao),'S'),
                coalesce(max(nr_seq_superior),0),
                max((regexp_replace(cd_exame_w, '^.*_(\d+)$', '\1'))::numeric )
            into STRICT    nr_seq_exame_w,
                ie_solicitacao_W,
                nr_seq_superior_w,
                nr_ordem_amostra_w
            from    exame_laboratorio
            where   nr_seq_exame = Obter_Equip_Exame_Integracao(regexp_replace(cd_exame_w, '_\d+$', ''), sigla_equip_w, 1);

            gravar_log_interno(150);

            if (nr_seq_exame_w = 0) then
                select  coalesce(max(nr_seq_exame),0),
                    coalesce(max(ie_solicitacao),'S'),
                    coalesce(max(nr_seq_superior),0),
                    max((regexp_replace(cd_exame_w, '^.*_(\d+)$', '\1'))::numeric )
                into STRICT    nr_seq_exame_w,
                    ie_solicitacao_W,
                    nr_seq_superior_w,
                    nr_ordem_amostra_w
                from    exame_laboratorio
                where   coalesce(cd_exame_integracao, cd_exame) = regexp_replace(cd_exame_w, '_\d+$', '');
            end if;

            gravar_log_interno(160);

            if (ie_solicitacao_w = 'N' and nr_seq_superior_w > 0) then
                nr_seq_exame_w := nr_seq_superior_w;
            end if;

        end if;

        gravar_log_interno(180);

        if (ie_exame_amostra_w = 'N') then
            update  prescr_procedimento set
                dt_integracao = clock_timestamp(),
                nm_usuario = nm_usuario_p,
                ie_status_atend = ie_status_pos_envio_p,
                dt_atualizacao = clock_timestamp()
            where   nr_prescricao = nr_prescricao_p
            and     nr_seq_exame = nr_seq_exame_w
            and ie_status_atend = ie_status_envio_p
            and cd_material_exame = Obter_Material_Exame_Lab(nr_seq_material_w, null, 2)
            and coalesce(dt_integracao::text, '') = '';
            if coalesce(ie_limpar_tabela_p, 'N') = 'S' then
                delete
                from    w_dados_interf
                where   nr_sequencia = nr_sequencia_w;
            end if;
        else

            open c02;
            loop
            fetch c02 into
                nr_seq_prescr_proc_mat_w,
                nr_seq_prescr_w;
            EXIT WHEN NOT FOUND; /* apply on c02 */

                gravar_log_interno(200);

                update  prescr_proc_mat_item
                set ie_status = ie_status_pos_envio_p,
                    dt_integracao = clock_timestamp(),
                    dt_atualizacao = clock_timestamp(),
                    nm_usuario = nm_usuario_p
                where   nr_sequencia = nr_seq_prescr_proc_mat_w;

                if coalesce(ie_limpar_tabela_p, 'N') = 'S' then
                    delete
                    from    w_dados_interf
                    where   nr_sequencia = nr_sequencia_w;
                end if;

                select  count(*)
                into STRICT    qt_total_amostra_w
                from    prescr_proc_mat_item
                where   nr_prescricao = nr_prescricao_p
                and nr_seq_prescr = nr_seq_prescr_w;

                select count(*)
                into STRICT    qt_etapa_amostra_w
                from    prescr_proc_mat_item
                where   nr_prescricao   = nr_prescricao_p
                and ie_status   = ie_status_pos_envio_p
                and nr_seq_prescr   = nr_seq_prescr_w;

                gravar_log_interno(210);

                if (qt_total_amostra_w = qt_etapa_amostra_w) and (qt_etapa_amostra_w > 0) then

                    update  prescr_procedimento
                    set ie_status_atend = ie_status_pos_envio_p,
                        dt_integracao = clock_timestamp(),
                        nm_usuario = nm_usuario_p,
                        dt_atualizacao = clock_timestamp()
                    where   nr_prescricao = nr_prescricao_p
                    and nr_sequencia = nr_seq_prescr_w
                    and coalesce(dt_integracao::text, '') = ''
                    and ie_status_atend <= ie_status_pos_envio_p;

                end if;

            end loop;
            close c02;
        end if;
    end loop;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_atualizar_status_interf ( nr_prescricao_p bigint, cd_interface_p bigint, ie_status_envio_p bigint, ie_status_pos_envio_p bigint, sigla_equip_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_limpar_tabela_p text default 'N') FROM PUBLIC;

