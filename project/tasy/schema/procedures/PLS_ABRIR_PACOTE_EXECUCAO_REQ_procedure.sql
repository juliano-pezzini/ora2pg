-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_abrir_pacote_execucao_req ( nr_seq_execucao_p bigint, nr_seq_prestador_P bigint, dt_execucao_p timestamp, nm_usuario_p text, nr_seq_retorno_p INOUT text) AS $body$
DECLARE

				
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Abre pacote na execucao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ x]    Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_requisicao_w		bigint;
nr_seq_pacote_w			bigint;
nr_seq_execucao_w		bigint;
ie_tipo_guia_w			varchar(255);
nr_seq_grupo_exec_w		bigint;
nr_seq_segurado_w		bigint;
qt_item_w			pls_execucao_req_item.qt_item%type;
nr_seq_req_proc_w		bigint;
nr_seq_req_mat_w		bigint;
cd_medico_requisitante_w	varchar(255);
ie_tipo_processo_w		varchar(255);
vl_negociado_w			double precision;
cd_proced_pacote_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_situacao_w			varchar(255);
qt_proc_mat_pac_w		pls_execucao_req_item.qt_item%type;
nr_seq_exec_item_w		bigint;
nr_seq_composicao_w		bigint;
ie_abrir_exec_requisicao_w	varchar(255);
nr_seq_preco_pacote_w		bigint;
ie_origem_pacote_w		bigint;
nr_seq_material_w		bigint;
ie_excluir_proc_pacote_w	varchar(255);
cd_medico_executor_w		varchar(255);
ie_lanca_comp_existente_w	varchar(1);
qt_material_w			bigint;
qt_procedimento_w		bigint;
nr_seq_congenere_w			pls_segurado.nr_seq_congenere%type;
nr_seq_intercambio_w		pls_segurado.nr_seq_intercambio%type;
ie_excessao_pacote_w		varchar(1);

C01 CURSOR FOR
	SELECT	b.vl_negociado,
		b.cd_procedimento,
		b.ie_origem_proced,
		b.ie_situacao,
		b.qt_procedimento
	from	pls_pacote_composicao	a,
		pls_pacote_procedimento	b
	where	a.nr_sequencia		= nr_seq_composicao_w
	and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (a.dt_inicio_vigencia <= dt_execucao_p))
	and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (a.dt_fim_vigencia >= dt_execucao_p))
	and	b.nr_seq_composicao	= a.nr_sequencia
	and 	b.ie_situacao	= 'A'
	and	b.ie_estrutura	= 'S'
	and	((coalesce(b.nr_seq_prestador,0)	= 0) 	or (b.nr_seq_prestador = nr_seq_prestador_p))
	and	((coalesce(b.ie_tipo_guia,0)		= 0)	or (b.ie_tipo_guia = ie_tipo_guia_w));

C02 CURSOR FOR
	SELECT	b.vl_negociado,
		b.nr_seq_material,
		b.ie_situacao,
		b.qt_material
	from	pls_pacote_composicao	a,
		pls_pacote_material	b
	where	a.nr_sequencia		= nr_seq_composicao_w
	and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (a.dt_inicio_vigencia <= dt_execucao_p))
	and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (a.dt_fim_vigencia >= dt_execucao_p))
	and	b.nr_seq_composicao	= a.nr_sequencia
	and 	b.ie_situacao	= 'A'
	and	((coalesce(b.nr_seq_prestador,0)	= 0) 	or (b.nr_seq_prestador = nr_seq_prestador_p))
	and	((coalesce(b.ie_tipo_guia,0)		= 0)	or (b.ie_tipo_guia = ie_tipo_guia_w));


BEGIN

begin
select	nr_seq_execucao,
	ie_tipo_guia,
	nr_seq_grupo_exec,
	nr_seq_segurado,
	qt_item,
	nr_seq_req_proc,
	nr_seq_req_mat,
	cd_medico_requisitante,
	cd_medico_executor,
	ie_tipo_processo,
	nr_seq_requisicao,
	nr_seq_preco_pacote
into STRICT	nr_seq_execucao_w,
	ie_tipo_guia_w,
	nr_seq_grupo_exec_w,
	nr_seq_segurado_w,
	qt_item_w,
	nr_seq_req_proc_w,
	nr_seq_req_mat_w,
	cd_medico_requisitante_w,
	cd_medico_executor_w,
	ie_tipo_processo_w,
	nr_seq_requisicao_w,
	nr_seq_preco_pacote_w
from	pls_execucao_req_item
where	nr_sequencia		= nr_seq_execucao_p
and	(nr_seq_preco_pacote IS NOT NULL AND nr_seq_preco_pacote::text <> '');
exception
when others then
	nr_seq_preco_pacote_w	:= 0;
end;

begin
select	nr_seq_pacote,
	nr_seq_composicao,
	ie_abrir_exec_requisicao,
	ie_excluir_proc_pacote,
	ie_lanca_comp_existente
into STRICT	nr_seq_pacote_w,
	nr_seq_composicao_w,
	ie_abrir_exec_requisicao_w,
	ie_excluir_proc_pacote_w,
	ie_lanca_comp_existente_w
from 	pls_pacote_tipo_acomodacao	
where 	nr_sequencia	= nr_seq_preco_pacote_w;
exception
when others then
	ie_abrir_exec_requisicao_w	:= 'N';
end;

begin
	select	nr_seq_congenere,
		nr_seq_intercambio
	into STRICT	nr_seq_congenere_w,
		nr_seq_intercambio_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_congenere_w	:= null;
	nr_seq_intercambio_w	:= null;
end;

ie_excessao_pacote_w := pls_excecao_preco_pacote( nr_seq_preco_pacote_w, nr_seq_congenere_w, nm_usuario_p, nr_seq_intercambio_w, nr_seq_prestador_p, ie_excessao_pacote_w, null);

if (ie_abrir_exec_requisicao_w	= 'S') and (ie_excessao_pacote_w = 'N') then
	open C01;
	loop
	fetch C01 into
		vl_negociado_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		ie_situacao_w,
		qt_proc_mat_pac_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
			if (ie_lanca_comp_existente_w	= 'S') then
				select	count(1)
				into STRICT	qt_procedimento_w
				from	pls_execucao_req_item
				where	nr_seq_execucao		= nr_seq_execucao_w
				and	cd_procedimento		= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;

				if (qt_procedimento_w = 0) then
					select	nextval('pls_execucao_req_item_seq')
					into STRICT	nr_seq_exec_item_w
					;
					
					begin
					select	cd_procedimento,
						ie_origem_proced
					into STRICT	cd_proced_pacote_w,
						ie_origem_pacote_w
					from	pls_pacote
					where	nr_sequencia	= nr_seq_pacote_w;
					exception
					when others then
						cd_proced_pacote_w	:= null;
						ie_origem_pacote_w	:= null;
					end;
					
					insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia, nr_seq_grupo_exec,
						nr_seq_segurado, dt_atualizacao, nm_usuario,
						cd_procedimento, ie_origem_proced, nr_seq_material,
						qt_item, nr_seq_req_proc, nr_seq_req_mat,
						cd_medico_requisitante, ie_tipo_processo, nr_seq_requisicao,
						nr_seq_execucao, cd_pacote_item, ie_situacao,
						cd_medico_executor, nr_seq_preco_pacote)
					values (nr_seq_exec_item_w, ie_tipo_guia_w, nr_seq_grupo_exec_w,
						nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
						cd_procedimento_w, ie_origem_proced_w, null,
						coalesce(qt_proc_mat_pac_w,qt_item_w), null, null,
						cd_medico_requisitante_w, ie_tipo_processo_w, nr_seq_requisicao_w,
						nr_seq_execucao_w, cd_proced_pacote_w,'U',
						cd_medico_executor_w, nr_seq_preco_pacote_w);
						
					/* Adicionar o item selecionada na lista temporaria de execucao */

					CALL pls_carregar_itens_exec(nr_seq_segurado_w, nr_seq_exec_item_w, nr_seq_execucao_w, nm_usuario_p);
						
					nr_seq_retorno_p	:= substr(nr_seq_retorno_p||' '||nr_seq_exec_item_w||' ', 1, 255);
				end if;
			else	
				select	nextval('pls_execucao_req_item_seq')
				into STRICT	nr_seq_exec_item_w
				;
				
				begin
				select	cd_procedimento,
					ie_origem_proced
				into STRICT	cd_proced_pacote_w,
					ie_origem_pacote_w
				from	pls_pacote
				where	nr_sequencia	= nr_seq_pacote_w;
				exception
				when others then
					cd_proced_pacote_w	:= null;
					ie_origem_pacote_w	:= null;
				end;
				
				insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia, nr_seq_grupo_exec,
					nr_seq_segurado, dt_atualizacao, nm_usuario,
					cd_procedimento, ie_origem_proced, nr_seq_material,
					qt_item, nr_seq_req_proc, nr_seq_req_mat,
					cd_medico_requisitante, ie_tipo_processo, nr_seq_requisicao,
					nr_seq_execucao, cd_pacote_item, ie_situacao,
					cd_medico_executor, nr_seq_preco_pacote)
				values (nr_seq_exec_item_w, ie_tipo_guia_w, nr_seq_grupo_exec_w,
					nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
					cd_procedimento_w, ie_origem_proced_w, null,
					coalesce(qt_proc_mat_pac_w,qt_item_w), null, null,
					cd_medico_requisitante_w, ie_tipo_processo_w, nr_seq_requisicao_w,
					nr_seq_execucao_w, cd_proced_pacote_w,'U',
					cd_medico_executor_w, nr_seq_preco_pacote_w);
					
				/* Adicionar o item selecionada na lista temporaria de execucao */

				CALL pls_carregar_itens_exec(nr_seq_segurado_w, nr_seq_exec_item_w, nr_seq_execucao_w, nm_usuario_p);
					
				nr_seq_retorno_p	:= substr(nr_seq_retorno_p||' '||nr_seq_exec_item_w||' ', 1, 255);
			end if;
		end;
	end loop;
	close C01;
	
	open C02;
	loop
	fetch C02 into	
		vl_negociado_w,
		nr_seq_material_w,
		ie_situacao_w,
		qt_proc_mat_pac_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (ie_lanca_comp_existente_w	= 'S') then
			select	count(1)
			into STRICT	qt_material_w
			from	pls_execucao_req_item
			where	nr_sequencia		= nr_seq_execucao_p
			and	nr_seq_material		= nr_seq_material_w;
		
			if (qt_material_w = 0) then
				select	nextval('pls_execucao_req_item_seq')
				into STRICT	nr_seq_exec_item_w
				;
				
				begin
				select	cd_procedimento,
					ie_origem_proced
				into STRICT	cd_proced_pacote_w,
					ie_origem_pacote_w
				from	pls_pacote
				where	nr_sequencia	= nr_seq_pacote_w;
				exception
				when others then
					cd_proced_pacote_w	:= null;
					ie_origem_pacote_w	:= null;
				end;
				
				insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia, nr_seq_grupo_exec,
					nr_seq_segurado, dt_atualizacao, nm_usuario,
					cd_procedimento, ie_origem_proced, nr_seq_material,
					qt_item, nr_seq_req_proc, nr_seq_req_mat,
					cd_medico_requisitante, ie_tipo_processo, nr_seq_requisicao,
					nr_seq_execucao, cd_pacote_item, ie_situacao,
					cd_medico_executor, nr_seq_preco_pacote)
				values (nr_seq_exec_item_w, ie_tipo_guia_w, nr_seq_grupo_exec_w,
					nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
					null, null,nr_seq_material_w,
					coalesce(qt_proc_mat_pac_w,qt_item_w), null, null,
					cd_medico_requisitante_w, ie_tipo_processo_w, nr_seq_requisicao_w,
					nr_seq_execucao_w, cd_proced_pacote_w,'U',
					cd_medico_executor_w, nr_seq_preco_pacote_w);
					
				/* Adicionar o item selecionada na lista temporaria de execucao */

				CALL pls_carregar_itens_exec(nr_seq_segurado_w, nr_seq_exec_item_w, nr_seq_execucao_w, nm_usuario_p);
					
				nr_seq_retorno_p	:= substr(nr_seq_retorno_p||' '||nr_seq_exec_item_w||' ', 1, 255);
			end if;
		else
			select	nextval('pls_execucao_req_item_seq')
			into STRICT	nr_seq_exec_item_w
			;
			
			begin
			select	cd_procedimento,
				ie_origem_proced
			into STRICT	cd_proced_pacote_w,
				ie_origem_pacote_w
			from	pls_pacote
			where	nr_sequencia	= nr_seq_pacote_w;
			exception
			when others then
				cd_proced_pacote_w	:= null;
				ie_origem_pacote_w	:= null;
			end;
			
			insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia, nr_seq_grupo_exec,
				nr_seq_segurado, dt_atualizacao, nm_usuario,
				cd_procedimento, ie_origem_proced, nr_seq_material,
				qt_item, nr_seq_req_proc, nr_seq_req_mat,
				cd_medico_requisitante, ie_tipo_processo, nr_seq_requisicao,
				nr_seq_execucao, cd_pacote_item, ie_situacao,
				cd_medico_executor, nr_seq_preco_pacote)
			values (nr_seq_exec_item_w, ie_tipo_guia_w, nr_seq_grupo_exec_w,
				nr_seq_segurado_w, clock_timestamp(), nm_usuario_p,
				null, null,nr_seq_material_w,
				coalesce(qt_proc_mat_pac_w,qt_item_w), null, null,
				cd_medico_requisitante_w, ie_tipo_processo_w, nr_seq_requisicao_w,
				nr_seq_execucao_w, cd_proced_pacote_w,'U',
				cd_medico_executor_w, nr_seq_preco_pacote_w);
				
			/* Adicionar o item selecionada na lista temporaria de execucao */

			CALL pls_carregar_itens_exec(nr_seq_segurado_w, nr_seq_exec_item_w, nr_seq_execucao_w, nm_usuario_p);
				
			nr_seq_retorno_p	:= substr(nr_seq_retorno_p||' '||nr_seq_exec_item_w||' ', 1, 255);
		end if;
		end;
	end loop;
	close C02;
	
	if (coalesce(ie_excluir_proc_pacote_w,'X')	= 'S') then
		update	pls_execucao_req_item
		set	ie_situacao	= 'C'
		where	nr_sequencia	= nr_seq_execucao_p;
		
		/*Inserido o nr_seq_requisicao no campo nr_seq_guia pois deve ser feito o update da guia para nao poder executar novamente o item quando ele for excluido na execucao*/

		update	pls_requisicao_proc
		set	nr_seq_guia	= nr_seq_requisicao_w
		where	nr_sequencia	= nr_seq_req_proc_w
		and	nr_seq_requisicao	= nr_seq_requisicao_w;
		
		commit;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_abrir_pacote_execucao_req ( nr_seq_execucao_p bigint, nr_seq_prestador_P bigint, dt_execucao_p timestamp, nm_usuario_p text, nr_seq_retorno_p INOUT text) FROM PUBLIC;

