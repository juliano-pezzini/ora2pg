-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alteracao_horario_sne ( nr_prescricao_p bigint, nr_seq_SNE_p bigint, nr_etapa_atual_p bigint, ie_alteracao_p text, nm_usuario_p text) AS $body$
DECLARE

/*

Esta procedure apenas realiza a alteracao nos horarios do SNE, 
para que a alteracao seja refletida na solucao, deve ser gerado evento e alterado na prescr_material

I		- Instalacao
INT		- Interrupcao
R		- Reinicio
T		- Terminio
S		- Suspensao de Etapa
RIR		- Reverter Evento Inicio/Reinicio
RINTT	- Reverter Evento Interrupcao/Termino
RT		- Reverter Evento Termino (Se o status anterior era interrompido)
*/
nr_etapa_atual_w	bigint;
ie_troca_w			varchar(20);
ie_status_atual_w	varchar(5);
ie_param8_cpoe_w	varchar(50);
dt_fim_w			cpoe_dieta.dt_fim%type;
nr_seq_item_cpoe_w	cpoe_dieta.nr_sequencia%type;
cd_funcao_origem_w	prescr_medica.cd_funcao_origem%type;
dt_horario_w		prescr_mat_hor.dt_horario%type;
nr_seq_processo_w	prescr_mat_hor.nr_seq_processo%type;


BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_SNE_p IS NOT NULL AND nr_seq_SNE_p::text <> '') and (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	if (ie_alteracao_p = 'I') then
		Select	Min(nr_etapa_sol)
		into STRICT		nr_etapa_atual_w
		from		prescr_mat_hor
		where	nr_prescricao		= nr_prescricao_p
		and 		nr_seq_material		= nr_seq_SNE_p
		and 		coalesce(dt_suspensao::text, '') = ''
		and 		coalesce(dt_inicio_horario::text, '') = ''
		and (coalesce(ie_horario_especial,'N') = 'N');
		
		if (coalesce(nr_etapa_atual_p,0) > 0) then
			nr_etapa_atual_w	:= nr_etapa_atual_p;
		end if;		
		
		update	prescr_mat_hor
		set		dt_inicio_horario		= clock_timestamp(),
				nm_usuario_inicio		= nm_usuario_p,
				dt_primeira_checagem	 = NULL
		where	nr_prescricao			= nr_prescricao_p
		and 		nr_seq_material			= nr_seq_SNE_p
		and 		nr_etapa_sol 			= nr_etapa_atual_w
		and 		coalesce(dt_inicio_horario::text, '') = ''
		and (coalesce(ie_horario_especial,'N') = 'N');
		
	elsif (ie_alteracao_p = 'INT') then	
		select	coalesce(max(obter_se_motivo_troca_frasco(a.nr_seq_motivo)),'N')
		into STRICT	ie_troca_w
		from	prescr_solucao_evento a
		where	a.ie_tipo_solucao 		= 2
		and	a.nr_prescricao 		= nr_prescricao_p
		and	a.nr_seq_material		= nr_seq_SNE_p
		and	a.ie_alteracao 			= 2
		and	a.nr_sequencia			= 	(
								SELECT	max(b.nr_sequencia)
								from	prescr_solucao_evento b
								where	b.nr_prescricao 		= nr_prescricao_p
								and	b.nr_seq_material		= a.nr_seq_material
								and	b.nr_seq_material 		= nr_seq_SNE_p
								and	b.ie_alteracao 			= 2
								and	coalesce(b.ie_evento_valido,'S') 	= 'S'
								)
		and	coalesce(a.ie_evento_valido,'S')	= 'S';
		if (ie_troca_w = 'S') then
			/*
			*** Interrupcao para troca de frasco
				O horario interrompido por troca de frasco e dado como administrado
				para que no reinicio do item, seja iniciada sua proxima etapa.
			*/
			
			update	prescr_mat_hor
			set		dt_interrupcao			= clock_timestamp(),
					nm_usuario_inter		= nm_usuario_p,
					nm_usuario_adm			= nm_usuario_p,
					dt_atualizacao 			= clock_timestamp(),
					dt_fim_horario			= clock_timestamp(),
					dt_primeira_checagem	 = NULL
			where	nr_prescricao			= nr_prescricao_p
			and 	nr_seq_material			= nr_seq_sne_p
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
		else			
			update	prescr_mat_hor
			set		dt_interrupcao			= clock_timestamp(),
					nm_usuario_inter		= nm_usuario_p,
					dt_primeira_checagem	 = NULL
			where	nr_prescricao			= nr_prescricao_p
			and 		nr_seq_material			= nr_seq_SNE_p
			and 		(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 		coalesce(dt_fim_horario::text, '') = ''
			and 		coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
		end if;
	elsif (ie_alteracao_p = 'R') then
	
		select	coalesce(max(obter_se_motivo_troca_frasco(a.nr_seq_motivo)),'N')
		into STRICT	ie_troca_w
		from	prescr_solucao_evento a
		where	a.ie_tipo_solucao 		= 2
		and	a.nr_prescricao 		= nr_prescricao_p
		and	a.nr_seq_material		= nr_seq_SNE_p	
		and	a.ie_alteracao 			= 2
		and	a.nr_sequencia			= 	(
								SELECT	max(b.nr_sequencia)
								from	prescr_solucao_evento b
								where	b.nr_prescricao 		= nr_prescricao_p
								and	b.nr_seq_material		= a.nr_seq_material
								and	b.nr_seq_material 		= nr_seq_SNE_p
								and	b.ie_alteracao 			= 2
								and	coalesce(b.ie_evento_valido,'S') 	= 'S'
								)
		and	coalesce(a.ie_evento_valido,'S')	= 'S';
		
		select	coalesce(max(ie_status),'N')
		into STRICT	ie_status_atual_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia = nr_seq_SNE_p
		and 	ie_agrupador = 8;
			
		if (ie_troca_w = 'S') then

			Select	Min(nr_etapa_sol)
			into STRICT	nr_etapa_atual_w
			from	prescr_mat_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_material		= nr_seq_sne_p
			and 	coalesce(dt_suspensao::text, '') = ''
			and 	coalesce(dt_inicio_horario::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			if (coalesce(nr_etapa_atual_p,0) > 0) then
				nr_etapa_atual_w	:= nr_etapa_atual_p;
			end if;		
			
			update	prescr_mat_hor
			set		dt_inicio_horario		= clock_timestamp(),
					nm_usuario_inicio		= nm_usuario_p,
					dt_primeira_checagem	 = NULL
			where	nr_prescricao			= nr_prescricao_p
			and 	nr_seq_material			= nr_seq_sne_p
			and 	nr_etapa_sol 			= nr_etapa_atual_w
			and 	coalesce(dt_inicio_horario::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
		else
		
			Select	min(nr_etapa_sol)
			into STRICT		nr_etapa_atual_w
			from		prescr_mat_hor
			where	nr_prescricao		= nr_prescricao_p
			and 		nr_seq_material		= nr_seq_sne_p
			and 		coalesce(dt_suspensao::text, '') = ''
			and		(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
			and		coalesce(dt_fim_horario::text, '') = ''
			and 		(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			if (coalesce(nr_etapa_atual_p,0) > 0) then
				nr_etapa_atual_w	:= nr_etapa_atual_p;
			end if;		
		
			/*
			*** Reinicio sem troca de frasco
				Para realizar esta acao, a interrupcao sera apagada e a data de reinicio registrada.
			*/
			update	prescr_mat_hor
			set		dt_fim_horario			 = NULL,
					nm_usuario_adm			 = NULL,
					dt_atualizacao 			= clock_timestamp(),
					dt_reinicio				= clock_timestamp(),
					dt_interrupcao			 = NULL,
					dt_primeira_checagem	 = NULL
			where	nr_prescricao			= nr_prescricao_p
			and 		nr_seq_material			= nr_seq_SNE_p
			and 		(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and		nr_etapa_sol			= nr_etapa_atual_w
			and 		(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
			and 		coalesce(dt_fim_horario::text, '') = ''
			and 		coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
		end if;
		
	elsif (ie_alteracao_p = 'T') then		
		
		update	prescr_mat_hor
		set		dt_fim_horario			= clock_timestamp(),
				nm_usuario_adm			= nm_usuario_p,
				dt_primeira_checagem	 = NULL
		where	nr_prescricao			= nr_prescricao_p
		and 	nr_seq_material			= nr_seq_sne_p
		and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
		and 	coalesce(dt_fim_horario::text, '') = ''
		and 	coalesce(dt_suspensao::text, '') = ''
		and (coalesce(ie_horario_especial,'N') = 'N');
		
		select	max(cd_funcao_origem)
		into STRICT	cd_funcao_origem_w
		from	prescr_medica
		where	nr_prescricao = nr_prescricao_p;
		
		if (cd_funcao_origem_w = 2314) then
			
			select	max(nr_seq_dieta_cpoe)
			into STRICT	nr_seq_item_cpoe_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_SNE_p
			and 	ie_agrupador = 8
			and		(nr_seq_dieta_cpoe IS NOT NULL AND nr_seq_dieta_cpoe::text <> '');
			
			if (coalesce(nr_seq_item_cpoe_w,0) > 0) then
			
				ie_param8_cpoe_w := obter_param_usuario(2314, 8, obter_perfil_ativo, nm_usuario_p, coalesce(wheb_usuario_pck.get_cd_estabelecimento, 1), ie_param8_cpoe_w);
				
				dt_fim_w :=	clock_timestamp();
				
				select	max(dt_horario)
				into STRICT	dt_horario_w
				from	prescr_mat_hor
				where	nr_prescricao			= nr_prescricao_p
				and 	nr_seq_material			= nr_seq_sne_p
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
				
				if (dt_fim_w < dt_horario_w) then	
					dt_fim_w :=	dt_horario_w;
				end if;
				
				
				if (ie_param8_cpoe_w = 'A') then
				
					update	cpoe_dieta
					set 	dt_fim =  trunc(dt_fim_w + 1/24,'hh24') - 1/1440,
							nm_usuario = nm_usuario_p,
							dt_atualizacao = clock_timestamp()
					where	nr_sequencia = nr_seq_item_cpoe_w
					and 	coalesce(ie_evento_unico,'N') = 'S'
					and		ie_administracao = 'P';
				end if;						
			end if;	
		end if;
		
	elsif (ie_alteracao_p	= 'S') then
		if (nr_etapa_atual_p IS NOT NULL AND nr_etapa_atual_p::text <> '') then

			/*
			*** Ao Suspender o Item
				Marca como Administrados os horarios que estiverem como Interrompidos
			*/
			update	prescr_mat_hor
			set		dt_fim_horario			= clock_timestamp(),
					nm_usuario_adm			= nm_usuario_p,
					dt_primeira_checagem	 = NULL
			where	nr_prescricao			= nr_prescricao_p
			and 	nr_seq_material			= nr_seq_sne_p
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
			and 	coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');

			update	prescr_mat_hor
			set		dt_suspensao			= clock_timestamp(),
					nm_usuario_susp			= nm_usuario_p,
					dt_primeira_checagem	 = NULL
			where	nr_prescricao			= nr_prescricao_p
			and 		nr_seq_material			= nr_seq_SNE_p
			and 		nr_etapa_sol 			= nr_etapa_atual_p
			and 		coalesce(dt_inicio_horario::text, '') = ''
			and		coalesce(dt_suspensao::text, '') = ''
			and 		coalesce(dt_fim_horario::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
		end if;
	elsif (ie_alteracao_p	= 'RIR') then
		Select	max(nr_etapa_sol),
				max(nr_seq_processo)
		into STRICT		nr_etapa_atual_w,
            nr_seq_processo_w
		from		prescr_mat_hor
		where	nr_prescricao		= nr_prescricao_p
		and 		nr_seq_material		= nr_seq_SNE_p
		and 		coalesce(dt_suspensao::text, '') = ''
		and 		(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
		and 		coalesce(dt_fim_horario::text, '') = ''
		and 		coalesce(dt_suspensao::text, '') = ''
		and (coalesce(ie_horario_especial,'N') = 'N');
		
		update	prescr_mat_hor		-- Reverte o inicio;
		set		nm_usuario				= nm_usuario_p,
				dt_inicio_horario		 = NULL,
				nm_usuario_inicio		 = NULL,
				dt_reinicio				 = NULL,
				dt_primeira_checagem	 = NULL
		where	nr_prescricao			= nr_prescricao_p
		and 		nr_seq_material			= nr_seq_SNE_p
		and 		nr_etapa_sol 			= nr_etapa_atual_w
		and 		coalesce(dt_suspensao::text, '') = ''
		and 		(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
		and (coalesce(ie_horario_especial,'N') = 'N');

		CALL atualiza_status_processo_adep(nr_seq_processo_w, null, 'A', 'RA', clock_timestamp(), nm_usuario_p);	

	elsif (ie_alteracao_p	in ('RINTT','RT')) then	
		Select	max(nr_etapa_sol)
		into STRICT		nr_etapa_atual_w
		from		prescr_mat_hor
		where	nr_prescricao		= nr_prescricao_p
		and 		nr_seq_material		= nr_seq_SNE_p
		and 		coalesce(dt_suspensao::text, '') = ''
		and 		(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
		and 		coalesce(coalesce(dt_interrupcao, dt_fim_horario),dt_reinicio) is not null
		and 		coalesce(dt_suspensao::text, '') = ''
		and 		coalesce(ie_horario_especial,'N') = 'N';
		
		if (coalesce(nr_etapa_atual_p,0) > 0) then
			nr_etapa_atual_w	:= nr_etapa_atual_p;
		end if;		
		
		if (nr_etapa_atual_w IS NOT NULL AND nr_etapa_atual_w::text <> '') then
		
			select	coalesce(max(ie_status),'N')
			into STRICT		ie_status_atual_w
			from		prescr_material
			where	nr_prescricao = nr_prescricao_p
			and		nr_sequencia = nr_seq_SNE_p
			and 		ie_agrupador = 8;

			/*
			***Reverte a administracao do horario anterior;
				Caso o item tenha sido iniciado, interrompido e iniciado novamente,  ou apenas interrompido,  a data de interrupcao deve ser utilizada.
				Em quaisquer outros casos, nao possui interrupcao.
			*/
			update	prescr_mat_hor
			set		dt_fim_horario			 = NULL,
					nm_usuario_adm			 = NULL,
					dt_interrupcao			= CASE WHEN ie_status_atual_w='I' THEN null WHEN ie_status_atual_w='II' THEN coalesce(dt_interrupcao,dt_reinicio) WHEN ie_status_atual_w='INT' THEN coalesce(dt_interrupcao,dt_reinicio)  ELSE null END ,
					nm_usuario_inter		= CASE WHEN ie_status_atual_w='INT' THEN nm_usuario_p WHEN ie_status_atual_w='II' THEN nm_usuario_p  ELSE nm_usuario_inter END ,
					nm_usuario				= nm_usuario_p,
					dt_reinicio				= CASE WHEN dt_interrupcao = NULL THEN null  ELSE CASE WHEN dt_reinicio = NULL THEN clock_timestamp()  ELSE dt_reinicio END  END ,
					dt_primeira_checagem	 = NULL
			where	nr_prescricao			= nr_prescricao_p
			and 		nr_seq_material			= nr_seq_SNE_p
			and 		nr_etapa_sol 			= nr_etapa_atual_w
			and 		(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 		coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');

		end if;
		
	
	end if;

	CALL Atualiza_ie_horario_susp(nr_prescricao_p, nr_seq_SNE_p, 'PRESCR_MATERIAL');
	
	update	prescr_solucao_evento
	set		ie_evento_valido = 'N'
	where	nr_prescricao = nr_prescricao_p
	and		nr_seq_material = nr_seq_SNE_p
	and		nr_etapa_evento = coalesce(nr_etapa_atual_p,nr_etapa_atual_w)
	and		ie_tipo_solucao = 2
	and		ie_alteracao = 37
	and		coalesce(ie_evento_valido,'S') = 'S';
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alteracao_horario_sne ( nr_prescricao_p bigint, nr_seq_SNE_p bigint, nr_etapa_atual_p bigint, ie_alteracao_p text, nm_usuario_p text) FROM PUBLIC;

