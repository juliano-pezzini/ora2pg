-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_ageint_item_wint ( nr_seq_ageint_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_convenio_w		integer;
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
nr_sequencia_w		procedimento_guia_wint.nr_sequencia%type;
cd_estabelecimento_w		agenda_integrada.cd_estabelecimento%type;
nr_seq_ageint_item_w		agenda_integrada_item.nr_sequencia%type;
cd_procedimento_w		agenda_integrada_item.cd_procedimento%type;
nr_seq_proc_interno_w		agenda_integrada_item.nr_seq_proc_interno%type;
ie_origem_proced_w		agenda_integrada_item.ie_origem_proced%type;
ie_lado_w		agenda_integrada_item.ie_lado%type;
vl_coparticipacao_w		agenda_integrada_item.vl_coparticipacao%type;
ie_forma_agendamento_w		agenda_integrada_item.ie_forma_agendamento%type;
nr_seq_ageint_item_guia_w	procedimento_guia_wint.nr_seq_ageint_item%type;
nr_sequencia_agen_int_item_w agenda_integrada.nr_sequencia%type;
nr_seq_doc_convenio_w		procedimento_guia_wint.nr_seq_doc_convenio%type;
nr_seq_topografia_w		procedimento_guia_wint.nr_seq_topografia%type;
nr_crm_w			procedimento_guia_wint.nr_crm%type;
nr_ano_guia_w			procedimento_guia_wint.nr_ano_guia%type;	

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_interno,
		ie_lado,
		vl_coparticipacao,
		nr_seq_ageint_item,
		nr_seq_doc_convenio,
		nr_seq_topografia,
		nr_crm,
		nr_ano_guia
	from	procedimento_guia_wint
	where	nr_seq_ageint = nr_seq_ageint_p
	and	coalesce(ds_erro::text, '') = ''
	and	upper(coalesce(ds_status, 'AUTORIZADO')) <> 'ERRO'	
	and	ie_gerar = 'S';


BEGIN
-- Obter informacoes AGEINT
select	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano),
	max(cd_estabelecimento),
	max(ie_forma_agendamento)
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_estabelecimento_w,
	ie_forma_agendamento_w
from	agenda_integrada
where	nr_sequencia = nr_seq_ageint_p;

open C01;
loop
fetch C01 into
	nr_sequencia_w,
	nr_seq_proc_interno_w,
	ie_lado_w,
	vl_coparticipacao_w,
	nr_seq_ageint_item_guia_w,
	nr_seq_doc_convenio_w,
	nr_seq_topografia_w,
	nr_crm_w,
	nr_ano_guia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select  max(nr_sequencia)
	into STRICT    nr_sequencia_agen_int_item_w
	from    agenda_integrada_item
	where nr_sequencia = nr_seq_ageint_item_guia_w
	and nr_seq_agenda_int = nr_seq_ageint_p
	and nr_seq_proc_interno = nr_seq_proc_interno_w
	and coalesce(ie_lado, 'E') = coalesce(ie_lado_w,'E');
	
	if (coalesce(nr_sequencia_agen_int_item_w::text, '') = '') then 
	
		-- Obter dados procedimento 
		SELECT * FROM obter_proc_tab_interno_conv(
				nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
			
		select 	nextval('agenda_integrada_item_seq')
		into STRICT	nr_seq_ageint_item_w
		;
		
		-- Inserir item de Exame/Procedimento
		insert into agenda_integrada_item(
			nr_sequencia,
			nr_seq_agenda_int,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_procedimento,
			nr_seq_proc_interno,
			ie_origem_proced,
			ie_tipo_agendamento,
			cd_medico,
			cd_especialidade,
			nr_minuto_duracao,
			ie_classif_agenda,
			nr_seq_grupo_selec,
			nr_seq_regra_ex_adic,
			nr_seq_item_selec,
			ie_anestesia,
			ie_lado,
			ie_forma_agendamento,
			nr_classificacao_agend,
			nr_seq_agrupamento,
			nr_seq_motivo_agendamento,
			nr_seq_area_atuacao,
			nr_seq_classif_agenda,
			nr_seq_topografia,
			vl_coparticipacao,
			nr_doc_convenio,
			crm_medico_externo,
			nr_ano_guia)
		values (
			nr_seq_ageint_item_w,
			nr_seq_ageint_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_procedimento_w,
			nr_seq_proc_interno_w,
			ie_origem_proced_w,
			'E', -- Exame,
			null,--decode(ie_tipo_agendamento_w, 'C', cd_medico_w, null),
			null,--cd_especialidade_w,
			0,--decode(nr_minuto_duracao_w,0,'',nr_minuto_duracao_w),
			null,--nvl(ie_classif_agenda_p,ie_classif_agenda_w),
			null,--nr_seq_grupo_w,
			null,--nr_seq_regra_w,
			null,--nr_seq_item_w,
			'N',--ie_anestesia_w,
			ie_lado_w,
			ie_forma_agendamento_w,
			null,--nr_classif_agend_p,
			null,--nr_seq_agrupamento_w,
			null,--nr_seq_motivo_agend_p,
			null,--NR_SEQ_AREA_ATUACAO_W,
			null,--nr_seq_classif_agenda_w,
			nr_seq_topografia_w,
			vl_coparticipacao_w,
			nr_seq_doc_convenio_w,
			nr_crm_w,
			nr_ano_guia_w
			);

		update	procedimento_guia_wint
		set		nr_seq_ageint_item = nr_seq_ageint_item_w
		where	nr_sequencia = nr_sequencia_w;
		
		-- Atualizar procedimento_guia_wint como Gerado
		CALL update_status_proc_wint(to_char(nr_sequencia_w), 'G');
	
	else
		
		update	agenda_integrada_item
		set		vl_coparticipacao = coalesce(vl_coparticipacao_w, vl_coparticipacao),
				nr_doc_convenio = coalesce(nr_seq_doc_convenio_w, nr_doc_convenio),
				nr_seq_topografia = coalesce(nr_seq_topografia_w, nr_seq_topografia)
		where	nr_sequencia = nr_seq_ageint_item_guia_w;
		
		-- Atualizar procedimento_guia_wint como Gerado
		CALL update_status_proc_wint(to_char(nr_seq_ageint_item_guia_w), 'G');
		
	end if;
	
	end;
end loop;
close C01;
		
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_ageint_item_wint ( nr_seq_ageint_p bigint, nm_usuario_p text) FROM PUBLIC;

