-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_laudo_paciente ( nr_sequencia_p bigint, nr_atendimento_p bigint, nr_atendimento_dbp_p bigint, nr_seq_proc_p bigint, nr_prescricao_p bigint, ie_tipo_atend_p text, dt_liberacao_p timestamp, dir_padrao_p text, cd_setor_atend_usu_p bigint, nr_seq_prescr_proc_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ds_arquivo_p INOUT text, ds_arquivo_dir_p INOUT text, ds_arquivo_audio_p INOUT text) AS $body$
DECLARE

 
ie_aprov_laudo_w		varchar(1) := 'N';
cd_setor_atendimento_w		integer;
liberar_alta_w			varchar(1) := 'N';
alta_laudo_pendente_w		varchar(1) := 'N';
qt_laudo_pendentes_w		integer;
dt_liberacao_w			timestamp;
alterar_medico_conta_w		varchar(1) := 'N';
alterar_medico_exec_conta_w	varchar(1) := 'N';
anestesista_conta_w		varchar(1) := 'N';
ds_caminho_pdf_w		varchar(1) := '';
ds_arquivo_w			varchar(200) := '';
ds_arquivo_dir_w		varchar(200) := '';
ds_arquivo_audio_w		varchar(200) := '';


BEGIN 
	 
ie_aprov_laudo_w := obter_se_aprov_laudo(nr_sequencia_p,nm_usuario_p);
 
if (ie_aprov_laudo_w = 'N') then 
	begin 
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(41077,null);
	end;
end if;
 
if (coalesce(dt_liberacao_p::text, '') = '') then 
	begin 
	CALL liberar_laudo(nr_sequencia_p,cd_perfil_p,nr_atendimento_p,cd_estabelecimento_p,nm_usuario_p);
 
	if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
		begin 
		select	cd_setor_entrega 
		into STRICT 	cd_setor_atendimento_w		 
		from	prescr_medica 
		where 	nr_prescricao = nr_prescricao_p;
		end;
	end if;
	 
	liberar_alta_w := obter_param_usuario(28, 52, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, liberar_alta_w);
	alta_laudo_pendente_w := obter_param_usuario(28, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, alta_laudo_pendente_w);
	qt_laudo_pendentes_w := obter_qt_laudos_pendente(nr_atendimento_p, nr_sequencia_p, nr_seq_proc_p);
	 
	if (liberar_alta_w = 'S') and (ie_tipo_atend_p = '7') and (alta_laudo_pendente_w = 'S') and (qt_laudo_pendentes_w = '0') then 
		begin 
		if (cd_setor_atendimento_w = '') then 
			begin 
			CALL saida_setor_servico(nr_atendimento_dbp_p,cd_setor_atend_usu_p,'','',nm_usuario_p);
			end;
		else			 
			begin 
			CALL saida_setor_servico(nr_atendimento_dbp_p,cd_setor_atendimento_w,'','',nm_usuario_p);
			end;
		end if;
		end;
	end if;
	 
	end;
end if;
 
select	max(a.dt_liberacao) 
into STRICT	dt_liberacao_w 
from	laudo_paciente a 
where	a.nr_atendimento = nr_atendimento_p 
and	a.nr_sequencia = nr_sequencia_p;
 
if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then 
	begin 
	alterar_medico_conta_w := obter_param_usuario(28, 101, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, alterar_medico_conta_w);
	alterar_medico_exec_conta_w := obter_param_usuario(28, 112, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, alterar_medico_exec_conta_w);
	anestesista_conta_w := obter_param_usuario(28, 148, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, anestesista_conta_w);
	if	((alterar_medico_conta_w = 'S') or (alterar_medico_conta_w = 'R')) then 
		begin 
		CALL atualizar_propaci_medico_laudo(nr_sequencia_p,'EX',nm_usuario_p);
		end;
	end if;
	 
	if (alterar_medico_exec_conta_w = 'S') then 
		begin 
		CALL atualizar_propaci_medico_laudo(nr_sequencia_p,'EXC',nm_usuario_p);
		end;
	end if;
	 
	if (anestesista_conta_w = 'S') then 
		begin 
		CALL atualizar_propaci_medico_laudo(nr_sequencia_p,'AN',nm_usuario_p);
		end;
	end if;
 
	end;
end if;
 
ds_caminho_pdf_w := obter_param_usuario(28, 141, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ds_caminho_pdf_w);
 
if (ds_caminho_pdf_w <> '') then 
	begin 
	SELECT * FROM gerar_nome_arquivo_laudo(nr_seq_proc_p, nr_prescricao_p, dir_padrao_p, nm_usuario_p, cd_estabelecimento_p, ds_arquivo_w, ds_arquivo_dir_w) INTO STRICT ds_arquivo_w, ds_arquivo_dir_w;
	end;
end if;
 
select	max(ds_arquivo) 
into STRICT	ds_arquivo_audio_w 
from 	prescr_proc_ditado 
where 	nr_seq_prescr_proc = nr_seq_prescr_proc_p;
 
ds_arquivo_p 		:= ds_arquivo_w;
ds_arquivo_dir_p 	:= ds_arquivo_dir_w;
ds_arquivo_audio_p 	:= ds_arquivo_audio_w;
 
commit;	
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_laudo_paciente ( nr_sequencia_p bigint, nr_atendimento_p bigint, nr_atendimento_dbp_p bigint, nr_seq_proc_p bigint, nr_prescricao_p bigint, ie_tipo_atend_p text, dt_liberacao_p timestamp, dir_padrao_p text, cd_setor_atend_usu_p bigint, nr_seq_prescr_proc_p bigint, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ds_arquivo_p INOUT text, ds_arquivo_dir_p INOUT text, ds_arquivo_audio_p INOUT text) FROM PUBLIC;

