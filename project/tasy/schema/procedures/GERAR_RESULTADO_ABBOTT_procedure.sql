-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_resultado_abbott ( nr_seq_interno_p text, cd_exame_prescricao_p text, cd_exame_p text, ds_tipo_resultado_p text, ds_resultado_p text, ds_units_p text, nm_usuario_p text, cd_barras_p text, ds_observacao_p text, ds_referencia_p exame_lab_result_item.ds_referencia%type, cd_exame_princ_p INOUT text) AS $body$
DECLARE


nr_prescricao_w           prescr_procedimento.nr_prescricao%type;
nr_seq_prescr_w           prescr_procedimento.nr_sequencia%type;
ie_status_atend_w         prescr_procedimento.ie_status_atend%type;

cd_exame_princ_w          exame_laboratorio.cd_exame%type;
cd_estabelecimento_w      estabelecimento.cd_estabelecimento%type;
ie_sexo_w                 pessoa_fisica.ie_sexo%type;
nr_seq_resultado_w        exame_lab_resultado.nr_seq_resultado%type;
nr_seq_exame_princ_w      exame_laboratorio.nr_seq_exame%type;

cd_analito_w              exame_laboratorio.cd_exame%type;
nr_seq_analito_w          exame_laboratorio.nr_seq_exame%type;

nr_seq_material_w         material_exame_lab.nr_sequencia%type;

ds_resultado_w            exame_lab_result_item.ds_resultado%type;
qt_resultado_w            exame_lab_result_item.qt_resultado%type;
pr_resultado_w            exame_lab_result_item.pr_resultado%type;

nr_anos_w                 smallint;
ds_erro_w                 varchar(4000);

ie_campo_calculo_w        varchar(1);
ie_formato_resultado_w    varchar(3);
cd_barras_w               numeric(38);
ds_w                      varchar(2000);
cd_exame_sigla_equip_w    varchar(2000);

cd_pessoa_fisica_w        pessoa_fisica.cd_pessoa_fisica%type;
nm_usuario_w              usuario.nm_usuario%type;
ie_atual_ref_ger_laudo_w  lab_parametro.ie_atual_ref_ger_laudo%type;
ds_referencia_w           exame_lab_result_item.ds_referencia%type;


BEGIN

    select   coalesce(max(nm_usuario), nm_usuario_p)
    into STRICT     nm_usuario_w
    from     usuario
    where    ds_login = nm_usuario_p;

    CALL wheb_usuario_pck.set_nm_usuario(nm_usuario_w);

    cd_barras_w := obter_somente_numero(cd_barras_p);

    select  max(c.nr_sequencia),
            max(c.ie_status_atend),
            max(coalesce(e.cd_exame_integracao, e.cd_exame)),
            max(lab_obter_codigo_exame_equip('ABBOTT', e.nr_seq_exame, a.ie_tipo_atendimento, null, null, 'CEX')),
            max(c.nr_seq_exame),
            max(c.nr_prescricao),
            max(b.cd_estabelecimento)
    into STRICT    nr_seq_prescr_w,
            ie_status_atend_w,
            cd_exame_princ_w,
            cd_exame_sigla_equip_w,
            nr_seq_exame_princ_w,
            nr_prescricao_w,
            cd_estabelecimento_w
    from    atendimento_paciente a,
            prescr_medica b,
            prescr_procedimento c,
            prescr_proc_material d,
            prescr_proc_mat_item d1,
            exame_laboratorio e,
            material_exame_lab f
    where   a.nr_atendimento = b.nr_atendimento
        and b.nr_prescricao = c.nr_prescricao
        and c.nr_prescricao = d.nr_prescricao
        and c.nr_seq_exame = e.nr_seq_exame
        and f.cd_material_exame = c.cd_material_exame
        and d.nr_seq_material = f.nr_sequencia
        and d1.nr_seq_prescr_proc_mat = d.nr_sequencia
        and d1.nr_seq_prescr = c.nr_sequencia
        and b.nr_prescricao = nr_seq_interno_p
        and d.cd_barras = cd_barras_w
        and coalesce(c.ie_suspenso,'N') = 'N'
        and coalesce(e.ie_situacao,'A') = 'A'
        and c.nr_seq_exame in (WITH RECURSIVE cte AS (

            SELECT  coalesce(x.nr_seq_exame,0)
            from    exame_laboratorio x,
                    equipamento_lab x1,
                    lab_exame_equip x2 WHERE x2.cd_exame_equip = cd_exame_prescricao_p
  UNION ALL

            SELECT  coalesce(x.nr_seq_exame,0)
            from    exame_laboratorio x,
                    equipamento_lab x1,
                    lab_exame_equip x2 JOIN cte c ON (c.prior nr_seq_superior = x.x.nr_seq_exame)

) SELECT * FROM cte WHERE x1.ds_sigla = 'ABBOTT'
                and x1.cd_equipamento = x2.cd_equipamento
                and x2.nr_seq_exame = nr_seq_exame;
);

    CALL gravar_log_lab(1234,
            case when coalesce(nr_prescricao_w::text, '') = '' then 'Falha' else 'Sucesso' end ||' - '||
            nr_seq_interno_p        ||' - '||
            cd_exame_prescricao_p   ||' - '||
            cd_exame_p              ||' - '||
            ds_tipo_resultado_p     ||' - '||
            ds_resultado_p          ||' - '||
            ds_units_p              ||' - '||
            nm_usuario_p            ||' - '||
            cd_barras_p             ||' - '||
            nr_seq_prescr_w         ||' - '||
            ds_observacao_p,
            nm_usuario_w,
            nr_seq_interno_p,
            'Abbott');

    if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') and (ie_status_atend_w < 35)  then

        cd_exame_princ_p := cd_exame_sigla_equip_w;

        select  trunc((clock_timestamp() - dt_nascimento)/ 365.25),
                b.cd_pessoa_fisica,
                b.ie_sexo
        into STRICT    nr_anos_w,
                cd_pessoa_fisica_w,
                ie_sexo_w
        from    prescr_medica a,
                pessoa_fisica b
        where   a.cd_pessoa_fisica = b.cd_pessoa_fisica
            and a.nr_prescricao = nr_prescricao_w;

        select  max(a.nr_seq_resultado),
                max(b.nr_seq_material)
        into STRICT    nr_seq_resultado_w,
                nr_seq_material_w
        from    exame_lab_resultado a,
                exame_lab_result_item b
        where   a.nr_seq_resultado = b.nr_seq_resultado
            and a.nr_prescricao = nr_prescricao_w
            and b.nr_seq_prescr = nr_seq_prescr_w
            and (b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '');

        if (coalesce(nr_seq_resultado_w::text, '') = '') then
            CALL gera_exame_result_lab(nr_prescricao_w, nr_seq_prescr_w, 'N', 'N', 'S', nm_usuario_w);

            select  max(a.nr_seq_resultado),
                    max(b.nr_seq_material)
            into STRICT    nr_seq_resultado_w,
                    nr_seq_material_w
            from    exame_lab_resultado a,
                    exame_lab_result_item b
            where   a.nr_seq_resultado = b.nr_seq_resultado
                and a.nr_prescricao = nr_prescricao_w
                and b.nr_seq_prescr = nr_seq_prescr_w
                and (b.nr_seq_material IS NOT NULL AND b.nr_seq_material::text <> '');

        end if;

        if (ie_status_atend_w < 35) then

            update  prescr_proc_mat_item
            set     ie_status = 30,
                    nm_usuario = nm_usuario_w,
                    dt_atualizacao = clock_timestamp()
            where   nr_prescricao = nr_seq_interno_p
            and     nr_seq_prescr = nr_seq_prescr_w
            and     ie_status = 25
            and     nr_seq_prescr_proc_mat in (SELECT nr_sequencia from prescr_proc_material x where x.nr_prescricao = nr_seq_interno_p and cd_barras = cd_barras_w);

            update  prescr_procedimento
            set     ie_status_atend = 30,
                    nm_usuario = nm_usuario_w,
                    dt_atualizacao = clock_timestamp()
            where   nr_prescricao = nr_seq_interno_p
            and     nr_sequencia = nr_seq_prescr_w
            and     ie_status_atend = 25
            and     not exists ( SELECT  1
                                from    prescr_proc_material a, prescr_proc_mat_item b
                                where   a.nr_sequencia = b.nr_seq_prescr_proc_mat
                                and     a.nr_prescricao = nr_prescricao_w
                                and     b.nr_seq_prescr = nr_seq_prescr_w
                                and     b.ie_status < 25);

        end if;

        select  max(coalesce(x.cd_exame_integracao, x.cd_exame)),
                max(x.nr_seq_exame)
        into STRICT    cd_analito_w,
                nr_seq_analito_w
        from    exame_laboratorio x,
                equipamento_lab x1,
                lab_exame_equip x2
        where   x1.ds_sigla = 'ABBOTT'
            and x1.cd_equipamento = x2.cd_equipamento
            and x2.nr_seq_exame = x.nr_seq_exame
            and x2.cd_exame_equip = cd_exame_prescricao_p;

        select  max(ie_formato_resultado)
        into STRICT    ie_formato_resultado_w
        from    exame_laboratorio
        where   nr_seq_exame     = coalesce(nr_seq_analito_w, nr_seq_exame_princ_w);

        if (substr(ie_formato_resultado_w,1,1) = 'P') then
            select  (coalesce(replace(ds_resultado_p, '.', ','),0))::numeric
            into STRICT    pr_resultado_w
;
        elsif (substr(ie_formato_resultado_w,1,1) = 'V') or (substr(ie_formato_resultado_w,2,1) = 'V') then
            begin
                select  (coalesce(ds_resultado_p,0))::numeric
                into STRICT    qt_resultado_w
;
            exception
                when others then
                begin
                    select (coalesce(replace(ds_resultado_p, '.', ','),0))::numeric 
                    into STRICT   qt_resultado_w
;
                exception
                    when others then
                    begin
                        select   (coalesce(replace(ds_resultado_p, ',', '.'),0))::numeric 
                        into STRICT     qt_resultado_w
;
                    exception
                        when others then
                            ds_resultado_w := trim(both ds_resultado_p);
                    end;
                end;
            end;
        else
            ds_resultado_w := trim(both ds_resultado_p);
        end if;

        CALL gravar_log_lab(1234,
                'atualizar_lab_result_item (' ||
                nr_prescricao_w                    || ', ' ||
                nr_seq_prescr_w                    || ', ' ||
                coalesce(cd_analito_w,cd_exame_princ_w) || ', ' ||
                qt_resultado_w                     || ', ' ||
                pr_resultado_w                     || ', ' ||
                ds_resultado_w                     || ', ' ||
                ds_observacao_p                    || ', null, ''N'', ''ABBOTT'', sysdate, '''', ' ||
                ds_units_p                         || ', null, null, ' ||
                ds_erro_w                          || ', ' ||
                nr_seq_analito_w                   || ');', 
                nm_usuario_w, nr_prescricao_w);

        CALL gera_resultado_lab(nr_seq_resultado_w, nr_prescricao_w, nr_seq_prescr_w, nr_seq_exame_princ_w, nr_seq_material_w, obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A'),         obter_dados_pf(cd_pessoa_fisica_w, 'SE'), nm_usuario_w);

        select 	coalesce(max(ie_atual_ref_ger_laudo),'N')
        into STRICT	ie_atual_ref_ger_laudo_w
        from    lab_parametro
        where   cd_estabelecimento = cd_estabelecimento_w;

        ds_referencia_w := ds_referencia_p;
        if (ie_atual_ref_ger_laudo_w = 'S') then
            ds_referencia_w := null;
        end if;

        ds_erro_w := atualizar_lab_result_item(nr_prescricao_w, nr_seq_prescr_w, coalesce(cd_analito_w,cd_exame_princ_w), qt_resultado_w, pr_resultado_w, ds_resultado_w, ds_observacao_p, null, 'N', nm_usuario_w, clock_timestamp(), ds_referencia_w, ds_units_p, null, null, ds_erro_w, nr_seq_analito_w);

        update  exame_lab_result_item
        set     ie_status = 1
        where   nr_seq_resultado = (SELECT max(nr_seq_resultado) from exame_lab_resultado where nr_prescricao = nr_prescricao_w)
        and     nr_seq_prescr = nr_seq_prescr_w
        and     nr_seq_exame = nr_seq_analito_w;

        commit;

    end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_resultado_abbott ( nr_seq_interno_p text, cd_exame_prescricao_p text, cd_exame_p text, ds_tipo_resultado_p text, ds_resultado_p text, ds_units_p text, nm_usuario_p text, cd_barras_p text, ds_observacao_p text, ds_referencia_p exame_lab_result_item.ds_referencia%type, cd_exame_princ_p INOUT text) FROM PUBLIC;

