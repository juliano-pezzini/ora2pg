-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE receita_amb_record AS (
  NR_SEQ_RECEITA_AMB      FA_RECEITA_FARMACIA.NR_SEQUENCIA%TYPE,
  NR_SEQ_ITEM_RECEITA_AMB FA_RECEITA_FARMACIA_ITEM.NR_SEQUENCIA%TYPE
);


CREATE OR REPLACE PROCEDURE insert_rec_amb_prescr_mipres ( nr_sequencia_p FA_RECEITA_FARMACIA.NR_SEQUENCIA%TYPE) AS $body$
DECLARE

TYPE receita_amb_type     IS TABLE OF receita_amb_record INDEX BY integer;
TYPE prescr_mipres_type   IS TABLE OF PRESCR_MIPRES%rowtype INDEX BY integer;
receita_amb_row           receita_amb_type;
prescr_mipres_row         prescr_mipres_type;
dt_atual_s                CONSTANT PRESCR_MIPRES.DT_ATUALIZACAO%TYPE := clock_timestamp();
ie_eps_w                  CONVENIO_PLANO.IE_EPS%TYPE;
nr_atendimento_w          FA_RECEITA_FARMACIA.NR_ATENDIMENTO%TYPE;

BEGIN

  SELECT max(a.nr_atendimento)
  INTO STRICT   nr_atendimento_w
  FROM   FA_RECEITA_FARMACIA a
  WHERE  a.nr_sequencia = nr_sequencia_p;

  SELECT coalesce(max(a.IE_EPS),'N')
  INTO STRICT   ie_eps_w
  FROM   CONVENIO_PLANO a
  WHERE  a.cd_plano = obter_plano_convenio_atend(nr_atendimento_w,'C')
  AND    a.cd_convenio = obter_convenio_atendimento(nr_atendimento_w);

  IF (ie_eps_w = 'S') THEN

    SELECT a.nr_sequencia nr_seq_receita_amb,
           b.nr_sequencia nr_seq_item_receita_amb
    BULK   COLLECT INTO STRICT receita_amb_row
    FROM   FA_RECEITA_FARMACIA a,
           FA_RECEITA_FARMACIA_ITEM b,
           MATERIAL c
    WHERE  b.nr_seq_receita = a.nr_sequencia
    AND    b.cd_material = c.cd_material
    AND    a.nr_sequencia = nr_sequencia_p
    AND    coalesce(c.ie_nopbs,'N') = 'S';

    IF (receita_amb_row.FIRST IS NOT NULL AND receita_amb_row.FIRST::text <> '') THEN
      FOR i IN receita_amb_row.FIRST..receita_amb_row.LAST LOOP
          prescr_mipres_row[i].nr_sequencia            := obter_nextval_sequence('PRESCR_MIPRES');
          prescr_mipres_row[i].dt_atualizacao          := dt_atual_s;
          prescr_mipres_row[i].dt_atualizacao_nrec     := dt_atual_s;
          prescr_mipres_row[i].nm_usuario              := wheb_usuario_pck.get_nm_usuario;
          prescr_mipres_row[i].nm_usuario_nrec         := wheb_usuario_pck.get_nm_usuario;
          prescr_mipres_row[i].ie_status               := '1';
          prescr_mipres_row[i].nr_atendimento          := nr_atendimento_w;
          prescr_mipres_row[i].ie_tipo_item_presc      := 'M';
          prescr_mipres_row[i].nr_seq_receita_amb      := receita_amb_row[i].nr_seq_receita_amb;
          prescr_mipres_row[i].nr_seq_item_receita_amb := receita_amb_row[i].nr_seq_item_receita_amb;
      END LOOP;
    END IF;

    IF (prescr_mipres_row.FIRST IS NOT NULL AND prescr_mipres_row.FIRST::text <> '') THEN

      FORALL i IN prescr_mipres_row.FIRST..prescr_mipres_row.LAST
        INSERT INTO PRESCR_MIPRES VALUES prescr_mipres_row(i);

    END IF;

  END IF;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_rec_amb_prescr_mipres ( nr_sequencia_p FA_RECEITA_FARMACIA.NR_SEQUENCIA%TYPE) FROM PUBLIC;

