-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE Doses AS (ds_dose		varchar(255));
CREATE TYPE Material AS (cd_material		integer);
CREATE TYPE UnidMed AS (cd_unidMed		varchar(30));
CREATE TYPE Horario AS (ds_horario	varchar(2000));


CREATE OR REPLACE PROCEDURE calcular_etapas_esquema ( nr_prescricao_p bigint, nr_seq_solucao_p bigint) AS $body$
DECLARE

type VetDose is table of Doses index by integer;
Etapas_w		VetDose;
type VetMaterial is table of Material index by integer;
cd_material_w		VetMaterial;
type VetUnidMed is table of UnidMed index by integer;
cd_unidMed_w		VetUnidMed;
type VetHorario is table of Horario index by integer;
Horarios_w		VetHorario;

i			integer := 0;
x			integer := 0;
y			integer := 0;

nm_usuario_w			usuario.nm_usuario%type;

nr_etapas_w				prescr_solucao.nr_etapas%type;
vl_etapa_w				prescr_solucao_esquema.qt_volume%type;
qt_tempo_aplicacao_w	prescr_solucao.qt_tempo_aplicacao%type;
ie_tipo_dosagem_w		prescr_solucao.ie_tipo_dosagem%type;
qt_solucao_total_w		prescr_solucao.qt_solucao_total%type;
qt_dosagem_w			prescr_solucao.qt_dosagem%type;

ds_dose_dif_w			prescr_material.ds_dose_diferenciada%type;
cd_mat_w				prescr_material.cd_material%type;
cd_unid_med_dose_w		unidade_medida.cd_unidade_medida%type;

ds_valor_w				varchar(10) := '';
ds_valor_horario_w		varchar(60) := '';
vl_retorno_w			double precision;
ds_horarios_w			varchar(4000);
nr_etapa_w				smallint;
ie_pais_w				valor_dominio.vl_dominio%type;
sql_w                   varchar(200);
ds_horario_w            varchar(4000);

C01 CURSOR FOR
	SELECT	ds_dose_diferenciada,
			cd_material,
			cd_unidade_medida_dose
	from	prescr_material
	where	nr_sequencia_solucao = nr_seq_solucao_p
	and		nr_prescricao = nr_prescricao_p;


BEGIN

delete	FROM prescr_solucao_esquema
where	nr_seq_solucao = nr_seq_solucao_p
and		nr_prescricao = nr_prescricao_p;

Select	max(nm_usuario),
		coalesce(max(qt_tempo_aplicacao),24),
		max(upper(ie_tipo_dosagem)),
		max(qt_solucao_total),
		max(qt_dosagem),
		max(ds_horarios),
		coalesce(max(nr_etapas),1)
into STRICT	nm_usuario_w,
		qt_tempo_aplicacao_w,
		ie_tipo_dosagem_w,
		qt_solucao_total_w,
		qt_dosagem_w,
		ds_horarios_w,
		nr_etapas_w
from	prescr_solucao
where	nr_seq_solucao	= nr_seq_solucao_p
and		nr_prescricao = nr_prescricao_p;

select 	coalesce(pkg_i18n.get_user_locale, 'pt_BR')
into STRICT 	ie_pais_w
;

ds_horarios_w	:= replace(replace(replace(replace(ds_horarios_w,'  ',' '),'  ',' '),'  ',' '),'  ',' ');

if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
	if (position(';' in ds_horarios_w) = 0) then
		ds_horarios_w	:= replace(ds_horarios_w,' ','; ');
	end if;

	if (substr(ds_horarios_w,length(ds_horarios_w)-1) <> '; ') then
		ds_horarios_w	:= ds_horarios_w || '; ';
	end if;

	ds_horarios_w	:= replace(replace(ds_horarios_w,';;',';'),';;',';');
end if;

Horarios_w[y].ds_horario	:= ds_horarios_w;

open C01;
loop
fetch C01 into	
	ds_dose_dif_w,
	cd_mat_w,
	cd_unid_med_dose_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	i	:= i + 1;

	Etapas_w[i].ds_dose		:= ds_dose_dif_w||'-';
	cd_material_w[i].cd_material	:= cd_mat_w;
	cd_unidMed_w[i].cd_unidMed	:= cd_unid_med_dose_w;

	end;
end loop;
close c01;

nr_etapa_w	:= 1;

For i in 1.. nr_etapas_w LOOP
	begin	
	ds_valor_w	:= '';
	vl_etapa_w	:= 0;	

	for	x in 1.. Etapas_w.count loop
		begin

		select	substr(Etapas_w[x].ds_dose, 1, position('-' in Etapas_w[x].ds_dose) - 1)
		into STRICT	ds_valor_w
		;

    BEGIN
        sql_w := 'begin OBTER_DOSE_ETAPA_MD  (:1, :2, :3); end;';
        EXECUTE sql_w
            USING IN ie_pais_w, IN OUT ds_valor_w, IN OUT Etapas_w[x].ds_dose;

    EXCEPTION
        WHEN OTHERS THEN
            ds_valor_w := NULL;
            Etapas_w[x].ds_dose := NULL;
    END;

		select	obter_conversao_ml(cd_material_w[x].cd_material,ds_valor_w,cd_unidMed_w[x].cd_unidMed)
		into STRICT	ds_valor_w
		;

    BEGIN
        sql_w := 'begin OBTER_VL_ETAPA_MD(:1, :2, :3); end;';
        EXECUTE sql_w
            USING IN ie_pais_w, IN OUT ds_valor_w, IN OUT vl_etapa_w;

    EXCEPTION
        WHEN OTHERS THEN
            ds_valor_w := NULL;
            vl_etapa_w := NULL;
    END;

		end;
	end loop;

	vl_retorno_w := Calcular_Volume_Total_Solucao(ie_tipo_dosagem_w, qt_tempo_aplicacao_w/nr_etapas_w, vl_etapa_w, null, nr_prescricao_p, nr_seq_solucao_p, 1, vl_retorno_w, 'N');


	select	substr(Horarios_w[y].ds_horario, 1, position(';' in Horarios_w[y].ds_horario) - 1)
	into STRICT	ds_valor_Horario_w
	;


    BEGIN
        sql_w := 'CALL OBTER_HORARIO_ETAPA_MD(:1) INTO :ds_horario_w';
        EXECUTE sql_w
            USING IN Horarios_w[y].ds_horario ,OUT ds_horario_w;
    EXCEPTION
        WHEN OTHERS THEN
            ds_horario_w := NULL;
    END;
    Horarios_w[y].ds_horario	:= ds_horario_w;


	insert into prescr_solucao_esquema(
					nr_sequencia,
					nr_prescricao,
					nr_seq_solucao,
					dt_atualizacao,
					nm_usuario,
					qt_volume,
					qt_dosagem,
					ds_horario,
					nr_etapa
				) values (
					nextval('prescr_solucao_esquema_seq'),
					nr_prescricao_p,
					nr_seq_solucao_p,
					clock_timestamp(),
					nm_usuario_w,
					coalesce(vl_etapa_w,0),
					coalesce(vl_retorno_w,0),
					substr(ds_valor_Horario_w,1,60),
					nr_etapa_w);

	nr_etapa_w	:= nr_etapa_w + 1;

	end;
end loop;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_etapas_esquema ( nr_prescricao_p bigint, nr_seq_solucao_p bigint) FROM PUBLIC;

