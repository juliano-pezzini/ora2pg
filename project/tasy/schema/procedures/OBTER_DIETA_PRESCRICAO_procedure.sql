-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_dieta_prescricao ( cd_setor_p bigint, qt_hora_p bigint, dt_dieta_p timestamp, cd_refeicao_p text, nm_usuario_p text) AS $body$
DECLARE

 
/* AO ALTERAR ESTA PROCEDURE, DEVE SER VERIFICADO SE A PROCEDURE Obter_Dieta_Prescricao_pac PRECISA SER ALTERADA TAMBÉM */
 
			 
cd_pessoa_fisica_w		varchar(10);
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
ie_destino_Dieta_w		varchar(02);
nr_atendimento_w		bigint;
nr_prescricao_w			bigint;
nr_prescr_w			bigint;
nr_sequencia_w			bigint;
cd_dieta_w			bigint;
ds_observacao_w			varchar(4000);
qt_parametro_w			double precision;
nr_seq_superior_W		bigint;
nr_seq_superior_c04_W		bigint;
nr_seq_controle_w		bigint := 0;
varPrescrRN_w			varchar(1);
dt_final_w			timestamp;
ds_observacao_tecnica_w		varchar(2000);
varManterObsTecnica_w		varchar(1);
varDadosJejum_w			varchar(1);
nr_prescricao_jejum_w		bigint;
NR_SEQ_TIPO_w			bigint;
DT_INICIO_w			timestamp;
DT_FIM_w			timestamp;
DS_OBSERVACAO_jejum_w		varchar(255);
ie_excluir_w			varchar(1);
ds_horarios_w			varchar(5);
dt_dieta_w			timestamp;
cd_setor_atendimento_w		integer;
ie_excluir_dieta_ant_jejum_w	varchar(1);
ie_excluir_dietas_w		varchar(1);
nr_seq_mapa_w			bigint;
ie_ultima_prescricao_pac_w	varchar(1);
nr_atend_alta_w			bigint;
ie_considera_alter_dieta_w	varchar(1);
dt_alteracao_w			timestamp;
ie_gerar_dieta_prescr_w		varchar(1) := 'S';
ie_todas_prescr_dietas_w 	varchar(1);
ie_prescr_liberadas_enferm_w	varchar(1);
ie_manter_observacao_w		varchar(1);
ds_observacao_orig_w		varchar(2000);
ds_observacao_tec_orig_w	varchar(2000);
nm_usuario_original_w		varchar(15);
ie_tipo_evolucao_w		varchar(3);
ie_recem_nato_w			varchar(1);
ie_liberado_w			varchar(1);
cd_dieta_sup_c04_w		bigint;
ie_verifica_se_dieta_c04_w	varchar(1);
ie_regra_proced_w		varchar(1);
ie_util_dt_inicio_presc_w	varchar(1);

c01 CURSOR FOR 
	SELECT	a.cd_unidade_basica, 
		a.cd_unidade_compl, 
		a.nr_atendimento, 
		b.cd_pessoa_fisica, 
		a.cd_setor_atendimento 
	from 	Atendimento_Paciente b, 
		unidade_atendimento a 
	where	((a.cd_setor_atendimento 	= cd_setor_p) or (cd_setor_p = 0)) 
	and	a.nr_atendimento	= b.nr_atendimento 
	
union all
 
	SELECT	a.cd_unidade_basica, 
		a.cd_unidade_compl, 
		b.nr_atendimento, 
		b.cd_pessoa_fisica, 
		a.cd_setor_atendimento	 
	from 	setor_atendimento c, 
		atend_paciente_unidade d, 
		atendimento_paciente b, 
		unidade_atendimento a 
	where b.nr_atendimento = d.nr_atendimento 
	 and d.cd_setor_atendimento = a.cd_setor_atendimento 
	 and d.cd_unidade_basica = a.cd_unidade_basica 
	 and d.cd_unidade_compl = a.cd_unidade_compl 
	 and (d.nr_seq_interno = obter_atepacu_paciente(d.nr_atendimento, 'A')) 
	 and c.cd_setor_atendimento = a.cd_setor_atendimento 
	 and c.cd_classif_setor in ('1','9') 
	 and ((a.cd_setor_atendimento = cd_setor_p) or (cd_setor_p = 0)) 
	 and coalesce(dt_alta::text, '') = '';

c02 CURSOR FOR 
	SELECT	a.cd_dieta, 
		substr(a.ds_observacao,1,2000), 
		coalesce(a.ie_destino_dieta,'P'), 
		a.qt_parametro, 
		b.nm_usuario_original, 
		coalesce(b.ie_recem_nato,'N') 
	from	prescr_dieta a, 
		prescr_medica b 
	where	a.nr_prescricao = b.nr_prescricao 
	and  	a.nr_prescricao = nr_prescricao_w 
	and	(((coalesce(b.dt_liberacao,b.dt_liberacao_medico) IS NOT NULL AND (coalesce(b.dt_liberacao,b.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N') 
	or	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')) 
	and 	cd_refeicao_p	= CASE WHEN coalesce(a.ie_refeicao,'T')='T' THEN  cd_refeicao_p  ELSE coalesce(a.ie_refeicao,'T') END  
	and 	coalesce(a.ie_suspenso,'N')	= 'N'	  
	and	((coalesce(b.ie_recem_nato,'N') = 'N') or (b.ie_recem_nato = varPrescrRN_w)) 
	and	not exists (	SELECT 	1 
				from 	mapa_dieta z 
				where	z.cd_pessoa_fisica		= b.cd_pessoa_fisica 
				and 	z.dt_dieta			= dt_dieta_p 
				and 	z.cd_dieta			= a.cd_dieta 
				and	z.cd_refeicao			= cd_refeicao_p 
				and	(z.dt_liberacao IS NOT NULL AND z.dt_liberacao::text <> '')) 
	and 	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN  CASE WHEN coalesce(a.hr_dose_especial,'X')='X' THEN  b.dt_inicio_prescr  ELSE to_date(to_char(b.dt_inicio_prescr,'dd/mm/yyyy')||' '||a.hr_dose_especial,'dd/mm/yyyy hh24:mi:ss') END   ELSE b.dt_prescricao END  > clock_timestamp() - (qt_hora_p / 24) 
	and	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN  CASE WHEN coalesce(a.hr_dose_especial,'X')='X' THEN b.dt_inicio_prescr  ELSE to_date(to_char(b.dt_inicio_prescr,'dd/mm/yyyy')||' '||a.hr_dose_especial,'dd/mm/yyyy hh24:mi:ss') END   ELSE b.dt_prescricao END  <= dt_final_w	 
	order by a.hr_dose_especial;
	
C03 CURSOR FOR 
	SELECT b.NR_SEQ_TIPO, 
		b.DT_INICIO, 
		b.DT_FIM, 
		substr(b.DS_OBSERVACAO,1,2000), 
		a.ie_recem_nato 
	from 	rep_jejum b, prescr_medica a 
	where 	a.nr_prescricao 	= b.nr_prescricao 
	and 	a.nr_atendimento	= nr_atendimento_w 
	and	(((coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N') 
	or	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')) 
	and 	coalesce(b.ie_suspenso,'N')	= 'N' 
	and 	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN a.dt_inicio_prescr  ELSE a.dt_prescricao END  > clock_timestamp() - (qt_hora_p / 24) 
	and	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN a.dt_inicio_prescr  ELSE a.dt_prescricao END  <= dt_final_w 
	and	((dt_dieta_w between coalesce(dt_inicio,dt_dieta_w) and coalesce(dt_fim,dt_dieta_w)) or (coalesce(dt_dieta_w::text, '') = '')) 
	and	((coalesce(a.ie_recem_nato,'N') = 'N') or (a.ie_recem_nato = varprescrrn_w));
	
C04 CURSOR FOR 
	SELECT	a.cd_dieta, 
		substr(a.ds_observacao,1,2000), 
		coalesce(a.ie_destino_dieta,'P'), 
		a.qt_parametro, 
		a.nr_prescricao, 
		b.nm_usuario_original, 
		coalesce(b.ie_recem_nato,'N') 
	from	prescr_dieta a, 
		prescr_medica b 
	where	a.nr_prescricao = b.nr_prescricao 
	 and  a.nr_prescricao <> nr_prescricao_w 
	 and	b.nr_atendimento = nr_atendimento_w 
	 and	(((coalesce(b.dt_liberacao,b.dt_liberacao_medico) IS NOT NULL AND (coalesce(b.dt_liberacao,b.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N') 
	 or	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')) 
	 and	coalesce(b.dt_validade_prescr,clock_timestamp()) >= clock_timestamp() 
	 and 	cd_refeicao_p	= CASE WHEN coalesce(a.ie_refeicao,'T')='T' THEN  cd_refeicao_p  ELSE coalesce(a.ie_refeicao,'T') END  
	 and 	coalesce(a.ie_suspenso,'N')	= 'N'	  
	 and	((coalesce(b.ie_recem_nato,'N') = 'N') or (b.ie_recem_nato = varPrescrRN_w) or (varPrescrRN_w = 'R')) 
	 and	not exists (	SELECT 	1 
				from 	mapa_dieta z 
				where	z.cd_pessoa_fisica		= b.cd_pessoa_fisica 
				and 	z.dt_dieta			= dt_dieta_p 
				and 	z.cd_dieta			= a.cd_dieta 
				and	z.cd_refeicao			= cd_refeicao_p 
				and	(z.dt_liberacao IS NOT NULL AND z.dt_liberacao::text <> ''));
				

BEGIN 
 
varPrescrRN_w := obter_param_usuario(1000, 19, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, varPrescrRN_w);
varManterObsTecnica_w := obter_param_usuario(1000, 34, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, varManterObsTecnica_w);
varDadosJejum_w := obter_param_usuario(1000, 42, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, varDadosJejum_w);
ie_excluir_dieta_ant_jejum_w := obter_param_usuario(1000, 73, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_excluir_dieta_ant_jejum_w);
ie_excluir_dietas_w := obter_param_usuario(1000, 93, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_excluir_dietas_w);
ie_ultima_prescricao_pac_w := obter_param_usuario(1000, 105, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_ultima_prescricao_pac_w);
ie_considera_alter_dieta_w := obter_param_usuario(1000, 106, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_considera_alter_dieta_w);
ie_prescr_liberadas_enferm_w := obter_param_usuario(1000, 114, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_prescr_liberadas_enferm_w);
ie_manter_observacao_w := obter_param_usuario(1000, 116, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_manter_observacao_w);
ie_todas_prescr_dietas_w := obter_param_usuario(1000, 118, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_todas_prescr_dietas_w);
/*Utiliza data de início da prescriçao para obter a dieta. Caso estiver 'S' vai considerar a data de incio da validade da prescriçao para obter o número da prescriçao*/
 
ie_util_dt_inicio_presc_w := obter_param_usuario(1000, 136, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_util_dt_inicio_presc_w);
 
 
if (trunc(dt_dieta_p, 'dd') = trunc(clock_timestamp(), 'dd')) then 
	dt_final_w	:= clock_timestamp();
else 
	dt_final_w	:= fim_dia(dt_dieta_p);
end if;
 
OPEN C01;
LOOP 
FETCH C01 into 
		cd_unidade_basica_w, 
		cd_unidade_compl_w, 
		nr_atendimento_w, 
		cd_pessoa_fisica_w, 
		cd_setor_atendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	nr_seq_superior_W	:= null;
	nr_seq_superior_c04_W 	:= null;
	nr_seq_mapa_w := 0;
	 
	select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END  
	into STRICT	ie_liberado_w 
	from 	mapa_dieta 
	where 	cd_pessoa_fisica	= cd_pessoa_fisica_w 
	and 	dt_dieta		= dt_dieta_p 
	and 	cd_refeicao		= cd_refeicao_p 
	and 	ie_destino_dieta	= 'P' 
	and	coalesce(nr_seq_superior::text, '') = '' 
	and	coalesce(dt_liberacao::text, '') = '';
	 
	if (ie_liberado_w = 'N') then 
	 
		select	coalesce(max(a.nr_prescricao),0) 
		into STRICT	nr_prescricao_w 
		from 	prescr_dieta b, 
			prescr_medica a 
		where 	a.nr_prescricao 	= b.nr_prescricao 
		and 	a.nr_atendimento	= nr_atendimento_w 
		and 	cd_refeicao_p	= CASE WHEN coalesce(b.ie_refeicao,'T')='T' THEN  cd_refeicao_p  ELSE coalesce(b.ie_refeicao,'T') END  
		and	(((coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N') 
		or	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')) 
		and 	coalesce(b.ie_suspenso,'N') = 'N'		 
		and 	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN  CASE WHEN coalesce(b.hr_dose_especial,'X')='X' THEN  a.dt_inicio_prescr  ELSE to_date(to_char(a.dt_inicio_prescr,'dd/mm/yyyy')||' '||b.hr_dose_especial,'dd/mm/yyyy hh24:mi:ss') END   ELSE a.dt_prescricao END  > clock_timestamp() - (qt_hora_p / 24) 
		and	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN  CASE WHEN coalesce(b.hr_dose_especial,'X')='X' THEN a.dt_inicio_prescr  ELSE to_date(to_char(a.dt_inicio_prescr,'dd/mm/yyyy')||' '||b.hr_dose_especial,'dd/mm/yyyy hh24:mi:ss') END   ELSE a.dt_prescricao END  <= dt_final_w			 
		and	((coalesce(a.ie_recem_nato,'N') = 'N') or (a.ie_recem_nato = varPrescrRN_w)) -- Dalcastagne em 20/05/2008 OS 92019 
		and	not exists (	SELECT 	1 
					from 	mapa_dieta z 
					where	z.cd_pessoa_fisica		= a.cd_pessoa_fisica 
					and 	z.dt_dieta			= dt_dieta_p 
					and 	z.cd_dieta			= b.cd_dieta 
					and	z.cd_refeicao			= cd_refeicao_p 
					and	(z.dt_liberacao IS NOT NULL AND z.dt_liberacao::text <> ''));
					 
		ie_excluir_w	:= 'S';
			 
		if (nr_prescricao_w = 0) and (ie_ultima_prescricao_pac_w = 'S') then 
						 
			 
			select	max(a.nr_atend_alta) 
			into STRICT	nr_atend_alta_w 
			from	atendimento_paciente a 
			where	a.nr_atendimento = nr_atendimento_w;				
			 
			if (nr_atend_alta_w IS NOT NULL AND nr_atend_alta_w::text <> '') then				 
				 
				select	coalesce(max(a.nr_prescricao),0) 
				into STRICT	nr_prescricao_w 
				from 	prescr_dieta b, 
					prescr_medica a 
				where 	a.nr_prescricao		= b.nr_prescricao	 
				and	a.nr_atendimento	= nr_atend_alta_w 
				and	obter_tipo_atendimento(a.nr_atendimento) = 3 
				and 	cd_refeicao_p	= CASE WHEN coalesce(b.ie_refeicao,'T')='T' THEN  cd_refeicao_p  ELSE coalesce(b.ie_refeicao,'T') END  
				and	(((coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N') 
				or	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')) 
				and 	coalesce(b.ie_suspenso,'N')	= 'N' 
				and	((coalesce(a.ie_recem_nato,'N') = 'N') or (a.ie_recem_nato = varPrescrRN_w)) 
				and	not exists (	SELECT 	1 
						from 	mapa_dieta z 
						where	z.cd_pessoa_fisica		= a.cd_pessoa_fisica 
						and 	z.dt_dieta			= dt_dieta_p 
						and 	z.cd_dieta			= b.cd_dieta 
						and	z.cd_refeicao			= cd_refeicao_p 
						and	(z.dt_liberacao IS NOT NULL AND z.dt_liberacao::text <> ''));
			end if;			
		end if;
		 
		select	max(dt_alteracao) 
		into STRICT	dt_alteracao_w 
		from	md_alterar_dieta a, 
			mapa_dieta b 
		where	a.nr_seq_mapa = b.nr_sequencia 
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w 
		and	b.ie_destino_dieta = 'P' 
		and	b.nr_atendimento = nr_atendimento_w;
		 
		if (ie_considera_alter_dieta_w = 'S') and (dt_alteracao_w IS NOT NULL AND dt_alteracao_w::text <> '') and (nr_prescricao_w > 0) then		 
			begin 
			select	'S' 
			into STRICT	ie_gerar_dieta_prescr_w 
			from	prescr_medica 
			where	nr_prescricao = nr_prescricao_w 
			and	dt_prescricao > dt_alteracao_w;
			exception 
			when others then 
				ie_gerar_dieta_prescr_w := 'N';
			end;
		end if;
		 
		if (nr_prescricao_w > 0) and (ie_gerar_dieta_prescr_w = 'S') then 
			 
			begin 
				 
			select 	max(DS_OBSERVACAO_TEC), 
				max(ds_observacao) 
			into STRICT	ds_observacao_tec_orig_w, 
				ds_observacao_orig_w 
			from	mapa_dieta 
			where 	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and 	dt_dieta		= dt_dieta_p 
			and 	ie_destino_dieta	= 'P' 
			and 	cd_refeicao		= cd_refeicao_p 
			and 	coalesce(dt_liberacao::text, '') = '' 
			and 	coalesce(nr_seq_superior::text, '') = '';
			 
			if (ie_excluir_dietas_w = 'S') then 
				delete from mapa_dieta 
				where cd_pessoa_fisica		= cd_pessoa_fisica_w 
				and dt_dieta			= dt_dieta_p 
				and cd_refeicao			= cd_refeicao_p 
				and ie_destino_dieta		= 'P' 
				and coalesce(dt_liberacao::text, '') = '';
				  
				ie_excluir_w	:= 'N';
			else 
				delete from mapa_dieta 
				where cd_pessoa_fisica		= cd_pessoa_fisica_w 
				and dt_dieta			= dt_dieta_p 
				and cd_refeicao			= cd_refeicao_p 
				and ie_destino_dieta		= 'P' 
				and coalesce(dt_liberacao::text, '') = '' 
				and (ie_tipo_dieta <> 'N' or coalesce(ie_tipo_dieta::text, '') = '') 
				and (nr_seq_superior IS NOT NULL AND nr_seq_superior::text <> '');
				 
				select max(nr_sequencia) 
				into STRICT	nr_seq_mapa_w 
				from 	mapa_dieta 
				where 	cd_pessoa_fisica	= cd_pessoa_fisica_w 
				and 	dt_dieta		= dt_dieta_p 
				and 	cd_refeicao		= cd_refeicao_p 
				and 	ie_destino_dieta	= 'P' 
				and	coalesce(nr_seq_superior::text, '') = '';
			end if;
 
			OPEN C02;
			LOOP 
			FETCH C02 into 
				cd_dieta_w, 
				ds_observacao_w, 
				ie_destino_dieta_w, 
				qt_parametro_w, 
				nm_usuario_original_w, 
				ie_recem_nato_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin 
 
				select nextval('mapa_dieta_seq') 
				into STRICT nr_sequencia_w 
				;
				 
				nr_seq_controle_w	:= nr_seq_controle_w + 1;
				if (nr_seq_controle_w = 1) then 
					nr_seq_superior_W	:= nr_sequencia_w;
				end if;
				 
				-- Início: Tratamento das Observaçoes 
				select	max(ie_tipo_evolucao) 
				into STRICT	ie_tipo_evolucao_w 
				from	usuario 
				where	nm_usuario = nm_usuario_original_w;
 
					-- nr_sequencia_w = nr_seq_superior_w : significa que só irá entrar se for a dieta principal, pois para outras dietas nao deverá copiar a observaçao tec. obtida da dieta principal 
				if (varManterObsTecnica_w = 'S') and (nr_sequencia_w = nr_seq_superior_w) then 
					ds_observacao_tecnica_w := ds_observacao_tec_orig_w;
				elsif (ie_tipo_evolucao_w = '4') and (varManterObsTecnica_w = 'N') then 
					ds_observacao_tecnica_w := ds_observacao_w;
				else 
					ds_observacao_tecnica_w	:= '';
				end if;
				 
				if (ie_manter_observacao_w = 'S') or (ie_tipo_evolucao_w = '4') then 
					ds_observacao_w := ds_observacao_orig_w;
				end if;
				-- Fim: Tratamento das Observaçoes 
				 
				if (nr_seq_controle_w > 1) or (ie_excluir_dietas_w = 'S') then 
					insert into mapa_dieta( 
						nr_sequencia, cd_pessoa_fisica, dt_dieta, cd_refeicao, 
						ie_destino_dieta, ie_status, dt_atualizacao, nm_usuario, 
						cd_setor_atendimento, cd_unidade_basica, cd_unidade_compl, 
						cd_dieta, ds_observacao, nr_atendimento, qt_parametro, 
						nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_superior, 
						ds_observacao_tec, nr_prescricao, ie_recem_nato,dt_dieta_prescr, 
						nm_usuario_prescr) 
					values (nr_sequencia_w, cd_pessoa_fisica_w, dt_dieta_p, cd_refeicao_P, 
						ie_destino_dieta_w, 'A', clock_timestamp(), nm_usuario_p, 
						cd_setor_atendimento_w, cd_unidade_basica_w, cd_unidade_compl_w, 
						cd_dieta_w, substr(ds_observacao_w,1,2000), nr_atendimento_w,qt_parametro_w, 
						nm_usuario_p, clock_timestamp(), CASE WHEN nr_sequencia_w=nr_seq_superior_W THEN  null  ELSE nr_seq_superior_W END , 
						ds_observacao_tecnica_w, nr_prescricao_w, ie_recem_nato_w,clock_timestamp(), nm_usuario_p);
				else 
					update 	mapa_dieta 
					set	cd_dieta 	= cd_dieta_w, 
						ds_observacao	= substr(ds_observacao_w,1,2000), 
						qt_parametro 	= qt_parametro_w, 
						ds_observacao_tec = CASE WHEN varManterObsTecnica_w='S' THEN ds_observacao_tec  ELSE ds_observacao_tecnica_w END , 
						ie_recem_nato	= ie_recem_nato_w, 
						dt_dieta_prescr = clock_timestamp(), 
						nm_usuario_prescr = nm_usuario_p, 
						nr_prescricao	= nr_prescricao_w 
					where 	nr_sequencia 	= nr_seq_mapa_w;
 
					nr_seq_superior_W	:= nr_seq_mapa_w;
				end if;
				end;
 
 
			END LOOP;
			Close C02;
			end;		
 
			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
			into STRICT	ie_regra_proced_w 
			from	mapa_regra_proced;
 
			if (ie_regra_proced_w = 'S') then		 
				CALL md_atualizar_obs_proced(nr_prescricao_w, nr_seq_superior_W, nr_atendimento_w, qt_hora_p, dt_final_w, dt_dieta_p, cd_refeicao_p, cd_pessoa_fisica_w, nm_usuario_p, 'T');
			end if;
			 
		end if;
		 
		select	max(ds_horarios) 
		into STRICT	ds_horarios_w 
		from	HORARIO_REFEICAO_DIETA 
		where	cd_refeicao = cd_refeicao_p;
		 
		dt_dieta_w	:= null;
		 
		if (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then 
			dt_dieta_w	:= to_date(to_char(dt_dieta_p,'dd/mm/yyyy') || ' ' || ds_horarios_w || ':00','dd/mm/yyyy hh24:mi:ss');
		end if;
 
		select	coalesce(max(a.nr_prescricao),0) 
		into STRICT	nr_prescricao_jejum_w 
		from 	rep_jejum b, 
			prescr_medica a 
		where 	a.nr_prescricao 	= b.nr_prescricao 
		and 	a.nr_atendimento	= nr_atendimento_w 
		and	(((coalesce(a.dt_liberacao,a.dt_liberacao_medico) IS NOT NULL AND (coalesce(a.dt_liberacao,a.dt_liberacao_medico))::text <> '') and ie_prescr_liberadas_enferm_w = 'N') 
		or	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')) 
		and 	coalesce(b.ie_suspenso,'N') = 'N' 
		and 	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN a.dt_inicio_prescr  ELSE a.dt_prescricao END  > clock_timestamp() - (qt_hora_p / 24) 
		and	CASE WHEN ie_util_dt_inicio_presc_w='S' THEN a.dt_inicio_prescr  ELSE a.dt_prescricao END  <= dt_final_w 
		and	((dt_dieta_w between coalesce(dt_inicio,dt_dieta_w) and coalesce(dt_fim,dt_dieta_w)) or (coalesce(dt_dieta_w::text, '') = '')) 
		and	((coalesce(a.ie_recem_nato,'N') = 'N') or (a.ie_recem_nato = varprescrrn_w));	
		 
		nr_seq_controle_w	:= 0;
		 
		if (nr_prescricao_jejum_w > 0) and (varDadosJejum_w = 'S') then 
			begin 
			 
			select 	max(DS_OBSERVACAO_TEC), 
				max(ds_observacao) 
			into STRICT	ds_observacao_tec_orig_w, 
				ds_observacao_orig_w 
			from	mapa_dieta 
			where 	cd_pessoa_fisica	= cd_pessoa_fisica_w 
			and 	dt_dieta		= dt_dieta_p 
			and 	ie_destino_dieta	= 'P' 
			and 	cd_refeicao		= cd_refeicao_p 
			and 	coalesce(dt_liberacao::text, '') = '' 
			and 	coalesce(nr_seq_superior::text, '') = '';
			 
			if (ie_excluir_w = 'S') or (ie_excluir_dieta_ant_jejum_w = 'S') then 
				delete from mapa_dieta 
				where cd_pessoa_fisica		= cd_pessoa_fisica_w 
				and dt_dieta			= dt_dieta_p 
				and cd_refeicao			= cd_refeicao_p 
				and coalesce(dt_liberacao::text, '') = '';
			end if;
			 
			OPEN C03;
			LOOP 
			FETCH C03 into 
				NR_SEQ_TIPO_w, 
				DT_INICIO_w, 
				DT_FIM_w, 
				ds_observacao_jejum_w, 
				ie_recem_nato_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin		 
				 
				select nextval('mapa_dieta_seq') 
				into STRICT nr_sequencia_w 
				;
				 
				nr_seq_controle_w	:= nr_seq_controle_w + 1;
				 
				if (nr_seq_controle_w = 1) then 
					nr_seq_superior_W	:= nr_sequencia_w;
				end if;				
				 
				-- nr_sequencia_w = nr_seq_superior_w : significa que só irá entrar se for a dieta principal, pois para outras dietas nao deverá copiar a observaçao tec. obtida da dieta principal 
				if (varManterObsTecnica_w = 'S') and (nr_sequencia_w = nr_seq_superior_w) then 
					ds_observacao_tecnica_w := ds_observacao_tec_orig_w;
				else 
					ds_observacao_tecnica_w	:= '';
				end if;
				 
				if (ie_manter_observacao_w = 'S') then 
					ds_observacao_jejum_w := ds_observacao_orig_w;
				end if;				
 
				insert into mapa_dieta( 
					nr_sequencia, cd_pessoa_fisica, dt_dieta, cd_refeicao, 
					ie_destino_dieta, ie_status, dt_atualizacao, nm_usuario, 
					cd_setor_atendimento, cd_unidade_basica, cd_unidade_compl, 
					cd_dieta, ds_observacao, nr_atendimento, qt_parametro, 
					nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_superior, 
					ds_observacao_tec, nr_seq_tipo_jejum, dt_inicio_jejum, dt_fim_jejum, 
					nr_prescricao, ie_recem_nato,dt_dieta_prescr, nm_usuario_prescr) 
				values (nr_sequencia_w, cd_pessoa_fisica_w, dt_dieta_p, cd_refeicao_P, 
					'P', 'A', clock_timestamp(), nm_usuario_p, 
					cd_setor_atendimento_w, cd_unidade_basica_w, cd_unidade_compl_w, 
					null, ds_observacao_jejum_w, nr_atendimento_w,null, 
					nm_usuario_p, clock_timestamp(), CASE WHEN nr_sequencia_w=nr_seq_superior_w THEN  null  ELSE nr_seq_superior_w END , 
					ds_observacao_tecnica_w, nr_seq_tipo_w, dt_inicio_w, dt_fim_w, nr_prescricao_jejum_w, ie_recem_nato_w, 
					clock_timestamp(), nm_usuario_p);
				end;
 
				END LOOP;
				Close C03;	
			end;
		end if;
 
		nr_seq_controle_w	:= 0;
 
		if (ie_todas_prescr_dietas_w = 'S') or (varPrescrRN_w = 'R') then 
			OPEN C04;
			LOOP 
			FETCH C04 into 
				cd_dieta_w, 
				ds_observacao_w, 
				ie_destino_dieta_w, 
				qt_parametro_w, 
				nr_prescr_w, 
				nm_usuario_original_w, 
				ie_recem_nato_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin 
			 
				if (ie_recem_nato_w = 'S') or (ie_todas_prescr_dietas_w = 'S') then 
				 
					select nextval('mapa_dieta_seq') 
					into STRICT nr_sequencia_w 
					;
					 
					select 	coalesce(max(nr_Sequencia),0) 
					into STRICT	nr_seq_superior_c04_W 
					from	mapa_dieta 
					where	cd_pessoa_fisica = cd_pessoa_fisica_w 
					and	nr_atendimento = nr_atendimento_w 
					and 	dt_dieta = dt_dieta_p 
					and	coalesce(nr_seq_superior::text, '') = '' 
					and	cd_refeicao = cd_refeicao_p 
					and 	coalesce(dt_liberacao::text, '') = '';
					 
					cd_dieta_sup_c04_w := null;
					ie_verifica_se_dieta_c04_w := 'N';
					if (nr_seq_superior_c04_W > 0) then 
						select	max(cd_dieta) 
						into STRICT	cd_dieta_sup_c04_w 
						from	mapa_dieta 
						where	nr_sequencia = nr_seq_superior_c04_W;
						 
						ie_verifica_se_dieta_c04_w := 'S';
					end if;
					 
					nr_seq_controle_w	:= nr_seq_controle_w + 1;
					 
					if (nr_seq_controle_w = 1) and (nr_seq_superior_c04_W = 0) then 
						nr_seq_superior_c04_W := nr_sequencia_w;
					end if;
 
					-- Início: Tratamento das Observaçoes 
					select	max(ie_tipo_evolucao) 
					into STRICT	ie_tipo_evolucao_w 
					from	usuario 
					where	nm_usuario = nm_usuario_original_w;
					 
						-- nr_sequencia_w = nr_seq_superior_c04_W : significa que só irá entrar se for a dieta principal, pois para outras dietas nao deverá copiar a observaçao tec. obtida da dieta principal 
					if (varManterObsTecnica_w = 'S') and (nr_sequencia_w = nr_seq_superior_c04_W) then 
						ds_observacao_tecnica_w := ds_observacao_tec_orig_w;
					elsif (ie_tipo_evolucao_w = '4') and (varManterObsTecnica_w = 'N') then 
						ds_observacao_tecnica_w := ds_observacao_w;
					else 
						ds_observacao_tecnica_w	:= '';
					end if;
					 
					if (ie_manter_observacao_w = 'S') or (ie_tipo_evolucao_w = '4') then 
						ds_observacao_w := ds_observacao_orig_w;
					end if;			
					-- Fim: Tratamento das Observaçoes 
					 
					if (coalesce(cd_dieta_sup_c04_w::text, '') = '') and (ie_verifica_se_dieta_c04_w = 'S') then 
						update 	mapa_dieta 
						set	cd_dieta 	= cd_dieta_w, 
							ds_observacao	= ds_observacao_w, 
							qt_parametro 	= qt_parametro_w, 
							ds_observacao_tec = CASE WHEN varManterObsTecnica_w='S' THEN ds_observacao_tec  ELSE ds_observacao_tecnica_w END , 
							ie_recem_nato	= ie_recem_nato_w, 
							nm_usuario	= nm_usuario_p, 
							dt_atualizacao	= clock_timestamp(), 
							dt_dieta_prescr = clock_timestamp(), 
							nm_usuario_prescr = nm_usuario_p, 
							nr_prescricao	= nr_prescr_w 
						where 	nr_sequencia 	= nr_seq_superior_c04_W;
					else 
						insert into mapa_dieta( 
							nr_sequencia, cd_pessoa_fisica, dt_dieta, cd_refeicao, 
							ie_destino_dieta, ie_status, dt_atualizacao, nm_usuario, 
							cd_setor_atendimento, cd_unidade_basica, cd_unidade_compl, 
							cd_dieta, ds_observacao, nr_atendimento, qt_parametro, 
							nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_superior, 
							ds_observacao_tec, nr_prescricao, ie_recem_nato,dt_dieta_prescr, nm_usuario_prescr) 
						values (nr_sequencia_w, cd_pessoa_fisica_w, dt_dieta_p, cd_refeicao_P, 
							ie_destino_dieta_w, 'A', clock_timestamp(), nm_usuario_p, 
							cd_setor_atendimento_w, cd_unidade_basica_w, cd_unidade_compl_w, 
							cd_dieta_w, substr(ds_observacao_w,1,2000), nr_atendimento_w,qt_parametro_w, 
							nm_usuario_p, clock_timestamp(), CASE WHEN nr_sequencia_w=nr_seq_superior_c04_W THEN  null  ELSE nr_seq_superior_c04_W END , 
							ds_observacao_tecnica_w, nr_prescr_w, ie_recem_nato_w,clock_timestamp(), nm_usuario_p);
					end if;
				end if;
				 
				end;
			END LOOP;
			Close C04;
		end if;
	end if;
	 
	nr_seq_controle_w	:= 0;
	 
	end;
END LOOP;
Close C01;
commit;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_dieta_prescricao ( cd_setor_p bigint, qt_hora_p bigint, dt_dieta_p timestamp, cd_refeicao_p text, nm_usuario_p text) FROM PUBLIC;

