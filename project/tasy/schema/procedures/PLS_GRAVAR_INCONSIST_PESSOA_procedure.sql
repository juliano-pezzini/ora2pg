-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_inconsist_pessoa ( cd_pessoa_fisica_p text, cd_cgc_p text, cd_inconsistencia_p bigint, nr_seq_tipo_doc_pf_p bigint, nr_seq_tipo_doc_pj_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_inconsistencia_w		bigint;
ds_acao_usuario_w		varchar(4000);
ie_situacao_w			varchar(1);
ie_tipo_pessoa_w		varchar(2);
ie_pagador_w			varchar(1);
ie_beneficiario_w		varchar(1);
ie_estipulante_w		varchar(1);
ie_prestador_w			varchar(1);
ie_pessoa_fisica_w		varchar(1);
ie_operadoras_w			varchar(1);
qt_pagador_w			integer	:= 0;
qt_beneficiario_w		integer	:= 0;
qt_estipulante_w		integer	:= 0;
qt_prestador_w			integer	:= 0;
qt_pessoa_fisica_w		integer	:= 0;
qt_operadora_w			integer	:= 0;
qt_congenere_w			integer	:= 0;



BEGIN
select	nr_sequencia,
	coalesce(ds_acao_usuario,''),
	coalesce(ie_situacao,'N'),
	coalesce(ie_tipo_pessoa,'N'),
	coalesce(ie_pagador,'N'),
	coalesce(ie_beneficiario,'N'),
	coalesce(ie_estipulante,'N'),
	coalesce(ie_prestador,'N'),
	coalesce(ie_pessoa_fisica,'N'),
	coalesce(ie_operadora,'N')
into STRICT	nr_seq_inconsistencia_w,
	ds_acao_usuario_w,
	ie_situacao_w,
	ie_tipo_pessoa_w,
	ie_pagador_w,
	ie_beneficiario_w,
	ie_estipulante_w,
	ie_prestador_w,
	ie_pessoa_fisica_w,
	ie_operadoras_w
from	pls_cad_inconsist_pessoa
where	cd_inconsistencia	= cd_inconsistencia_p;

if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	if (ie_tipo_pessoa_w in ('A','PF')) then
		select	count(1)
		into STRICT	qt_pagador_w
		from	pls_contrato_pagador
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p  LIMIT 1;

		select	count(1)
		into STRICT	qt_beneficiario_w
		from	pls_segurado
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p  LIMIT 1;

		select	count(1)
		into STRICT	qt_estipulante_w
		from	pls_contrato
		where	cd_pf_estipulante	= cd_pessoa_fisica_p  LIMIT 1;

		select	count(1)
		into STRICT	qt_prestador_w
		from	pls_prestador
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p  LIMIT 1;

		qt_pessoa_fisica_w		:= 1;
	end if;
elsif (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
	if (ie_tipo_pessoa_w in ('A','PJ')) then
		select	count(1)
		into STRICT	qt_pagador_w
		from	pls_contrato_pagador
		where	cd_cgc	= cd_cgc_p  LIMIT 1;

		select	count(1)
		into STRICT	qt_estipulante_w
		from	pls_contrato
		where	cd_cgc_estipulante	= cd_cgc_p  LIMIT 1;

		select	count(1)
		into STRICT	qt_prestador_w
		from	pls_prestador
		where	cd_cgc	= cd_cgc_p  LIMIT 1;

		select	count(1)
		into STRICT	qt_operadora_w
		from	pls_outorgante
		where	cd_cgc_outorgante	= cd_cgc_p  LIMIT 1;

		select	count(1)
		into STRICT	qt_congenere_w
		from	pls_congenere
		where	cd_cgc	= cd_cgc_p  LIMIT 1;
	end if;
end if;

if (ie_situacao_w = 'A') and
	((ie_pagador_w = 'S' AND qt_pagador_w > 0) or
	(ie_beneficiario_w = 'S' AND qt_beneficiario_w > 0) or
	(ie_estipulante_w = 'S' AND qt_estipulante_w > 0) or
	(ie_prestador_w = 'S' AND qt_prestador_w > 0) or
	(ie_pessoa_fisica_w = 'S' AND qt_pessoa_fisica_w > 0) or
	((ie_operadoras_w = 'S') and ((qt_operadora_w > 0) or (qt_congenere_w > 0)))) then

	insert into pls_inconsistencia_pessoa(nr_sequencia, nr_seq_inconsistencia, dt_atualizacao,
		nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
		ds_acao_usuario, cd_pessoa_fisica, cd_cgc,
		nr_seq_tipo_doc, nr_seq_pls_tipo_doc)
	values (	nextval('pls_inconsistencia_pessoa_seq'), nr_seq_inconsistencia_w, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), nm_usuario_p,
		ds_acao_usuario_w, cd_pessoa_fisica_p, cd_cgc_p,
		nr_seq_tipo_doc_pf_p, nr_seq_tipo_doc_pj_p);
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_inconsist_pessoa ( cd_pessoa_fisica_p text, cd_cgc_p text, cd_inconsistencia_p bigint, nr_seq_tipo_doc_pf_p bigint, nr_seq_tipo_doc_pj_p bigint, nm_usuario_p text) FROM PUBLIC;

