-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comunic_solic_mat ( DS_MATERIAL_P text, IE_TIPO_MATERIAL_P text, CD_UNIDADE_MEDIDA_COMPRA_P text, CD_UNIDADE_MEDIDA_ESTOQUE_P text, CD_UNIDADE_MEDIDA_CONSUMO_P text, DS_MATERIAL_ESTOQUE_P text, DS_CLASSE_MATERIAL_P text, nm_usuario_p text, nm_usuario_dest_p text, ds_observacao_p text, ie_enviar_email_p text) AS $body$
DECLARE


texto_comunic_w		varchar(32000);
ie_visualiza_campos_w	varchar(1);
cd_estabelecimento_w	smallint;
ds_email_origem_w	varchar(255);
ds_email_destino_w      varchar(255);
ds_titulo_w             varchar(80) := wheb_mensagem_pck.get_texto(141355);


BEGIN

select	substr(coalesce(obter_valor_param_usuario(913, 194, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S'),1,1)
into STRICT ie_visualiza_campos_w
;

if (coalesce(ds_email_origem_w::text, '') = '') then
	select	max(ds_email)
	into STRICT	ds_email_origem_w
	from	usuario a
 	where	upper(a.nm_usuario) = upper(nm_usuario_p);
end if;

if (coalesce(ds_email_destino_w::text, '') = '') then
	select	max(ds_email)
	into STRICT	ds_email_destino_w
	from	usuario a
	where	upper(a.nm_usuario) = upper(nm_usuario_dest_p);
end if;

if 	ie_visualiza_campos_w = 'N' then
	begin
	texto_comunic_w	:=	wheb_mensagem_pck.get_texto(311901,'DS_MATERIAL_P='|| DS_MATERIAL_P ||';DS_OBSERVACAO_P='|| DS_OBSERVACAO_P);
				/*Favor cadastrar o material com os seguintes dados:
				Material: #@DS_MATERIAL_P#@
				Observação: #@DS_OBSERVACAO_P#@*/
	end;
else
	begin
	texto_comunic_w	:=	wheb_mensagem_pck.get_texto(311902,
					'DS_MATERIAL_P='|| DS_MATERIAL_P ||
					';IE_TIPO_MATERIAL_P='|| IE_TIPO_MATERIAL_P ||
					';CD_UNIDADE_MEDIDA_COMPRA_P='|| CD_UNIDADE_MEDIDA_COMPRA_P ||
					';CD_UNIDADE_MEDIDA_ESTOQUE_P='|| CD_UNIDADE_MEDIDA_ESTOQUE_P ||
					';CD_UNIDADE_MEDIDA_CONSUMO_P='|| CD_UNIDADE_MEDIDA_CONSUMO_P ||
					';DS_MATERIAL_ESTOQUE_P='|| DS_MATERIAL_ESTOQUE_P ||
					';DS_CLASSE_MATERIAL_P='|| DS_CLASSE_MATERIAL_P ||
					';DS_OBSERVACAO_P='|| DS_OBSERVACAO_P);
					/*Favor cadastrar o material com os seguintes dados:
					Material: #@DS_MATERIAL_P#@
					Tipo de material: #@IE_TIPO_MATERIAL_P#@
					UM compra: #@CD_UNIDADE_MEDIDA_COMPRA_P#@
					UM estoque: #@CD_UNIDADE_MEDIDA_ESTOQUE_P#@
					UM consumo: #@CD_UNIDADE_MEDIDA_CONSUMO_P#@
					Material de estoque: #@DS_MATERIAL_ESTOQUE_P#@
					Classe: #@DS_CLASSE_MATERIAL_P#@
					Observação: #@DS_OBSERVACAO_P#@*/
	end;
end if;
if (ie_enviar_email_p = 'C') then
INSERT	INTO 	comunic_interna(nr_sequencia,
			dt_comunicado,
			ds_titulo,
			ds_comunicado,
			nm_usuario,
			nm_usuario_destino,
			dt_atualizacao,
			ie_geral,
			ie_gerencial,
			dt_liberacao)
VALUES (nextval('comunic_interna_seq'),
			 clock_timestamp(),
			 wheb_mensagem_pck.get_Texto(311903), /*'Solicitação de cadastro de material.',*/
			 texto_comunic_w,
			 nm_usuario_p,
			 nm_usuario_dest_p,
			 clock_timestamp(),
			 'N',
			 'N',
			 clock_timestamp());
elsif (ie_enviar_email_p = 'O') and (ds_email_origem_w IS NOT NULL AND ds_email_origem_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then

	CALL enviar_email(ds_titulo_w,texto_comunic_w,ds_email_origem_w,ds_email_destino_w,nm_usuario_p,'M',null);
else
INSERT	INTO 	comunic_interna(nr_sequencia,
			dt_comunicado,
			ds_titulo,
			ds_comunicado,
			nm_usuario,
			nm_usuario_destino,
			dt_atualizacao,
			ie_geral,
			ie_gerencial,
			dt_liberacao)
VALUES (nextval('comunic_interna_seq'),
			 clock_timestamp(),
			 wheb_mensagem_pck.get_Texto(311903), /*'Solicitação de cadastro de material.',*/
			 texto_comunic_w,
			 nm_usuario_p,
			 nm_usuario_dest_p,
			 clock_timestamp(),
			 'N',
			 'N',
			 clock_timestamp());
		if (ie_enviar_email_p = 'D') and (ds_email_origem_w IS NOT NULL AND ds_email_origem_w::text <> '') and (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then
		CALL enviar_email(ds_titulo_w,texto_comunic_w,ds_email_origem_w,ds_email_destino_w,nm_usuario_p,'M',null);
		end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comunic_solic_mat ( DS_MATERIAL_P text, IE_TIPO_MATERIAL_P text, CD_UNIDADE_MEDIDA_COMPRA_P text, CD_UNIDADE_MEDIDA_ESTOQUE_P text, CD_UNIDADE_MEDIDA_CONSUMO_P text, DS_MATERIAL_ESTOQUE_P text, DS_CLASSE_MATERIAL_P text, nm_usuario_p text, nm_usuario_dest_p text, ds_observacao_p text, ie_enviar_email_p text) FROM PUBLIC;

