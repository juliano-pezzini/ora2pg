-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_copia_solucao ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, dt_prescricao_p timestamp, nr_seq_solucao_p bigint, ie_modificar_p text, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text, ie_copia_agora_p text) AS $body$
DECLARE


nr_agrup_acum_w				bigint;
nr_agrup_acum_sol_w			bigint;
nr_seq_solucao_ant_w		bigint;
nr_seq_material_w			bigint;
nr_horas_validade_w			integer;
qt_itens_w					bigint;
qt_w						bigint;
qt_operacao_w				bigint;
	
qt_operacao_orig_w			bigint;
ie_via_aplicacao_w			varchar(5);
ie_tipo_dosagem_w			varchar(3);
ie_acm_w					varchar(1);
ie_loop_w					varchar(1);
ie_esquema_alternado_w		varchar(1);
ie_calc_aut_w				varchar(1);
ie_hemodialise_w			varchar(1);
ie_tipo_solucao_w			varchar(15);
ie_pos_dialisador_w			varchar(1);
ie_unid_vel_inf_w			varchar(3);
ds_horarios_2w				varchar(255);
ie_apap_w					varchar(15);
ie_solucao_pca_w			varchar(1);
ie_tipo_analgesia_w			varchar(15);
ie_pca_modo_prog_w			varchar(15);
ie_se_necessario_w			varchar(1);
ie_recalc_total_w			varchar(5);
ie_manter_intervalo_w		varchar(1);
ie_limpa_prim_hor_w			varchar(1);
ie_intervalo_solucao_w  	varchar(1);
ie_prim_hor_sol_w			varchar(10);
ie_prim_hor_copia_w			varchar(1);
ie_arredondar_etapa_w		varchar(1);
ie_calcula_tempo_solucao_w	varchar(1);
ie_vol_total_sem_calc_aut_w	varchar(1);

cd_intervalo_w				varchar(7);

cd_unidade_medida_w		unidade_medida.cd_unidade_medida%type;
qt_volume_ww			prescr_solucao_esquema.qt_volume%type;
qt_dosagem_ww			prescr_solucao_esquema.qt_dosagem%type;
ds_horario_ww			prescr_solucao_esquema.ds_horario%type;
nr_seq_sol_esq_w		prescr_solucao_esquema.nr_sequencia%type;


ds_solucao_w			varchar(100);
ds_horarios_w			varchar(2000);
ds_horarios_w2			varchar(255);
ds_prim_hor_w			varchar(6);	
hr_prim_horario_w2		varchar(6);
ds_orientacao_w			varchar(2000);

qt_dosagem_w				double precision;
qt_solucao_total_w			double precision;
qt_tempo_aplicacao_w		double precision;
qt_volume_w					double precision;
qt_hora_fase_w				double precision;
qt_temp_solucao_w			real;
qt_dose_ataque_w			double precision;
qt_vol_infusao_pca_w		double precision;
qt_bolus_pca_w				double precision;
qt_intervalo_bloqueio_w		bigint;
qt_limite_quatro_hora_w		double precision;
qt_limite_uma_hora_w		double precision;
qt_dose_inicial_pca_w		double precision;
ie_um_limite_hora_pca_w		varchar(15);
ie_um_limite_pca_w			varchar(15);
ie_um_dose_inicio_pca_w		varchar(15);
ie_um_fluxo_pca_w			varchar(15);
ie_um_bolus_pca_w			varchar(15);

nr_etapas_w					smallint;
nr_agrupamento_w			integer;
nr_seq_protocolo_w			bigint;
nr_seq_solucao_w			bigint;
hr_prim_horario_w			varchar(5);
	
nr_sequencia_w				bigint;
ie_origem_inf_w				varchar(1);
cd_material_w				bigint;
qt_dose_w					double precision;
qt_unitaria_w				double precision;
qt_material_w				double precision;
ds_observacao_w				varchar(4000);
ds_observacao_enf_w			varchar(2000);
ie_cobra_paciente_w			varchar(1);
cd_motivo_baixa_w			bigint;
dt_baixa_w					timestamp;
ie_utiliza_kit_w			varchar(5);
cd_unidade_medida_dose_w	varchar(50);
qt_conversao_dose_w			double precision;
nr_ocorrencia_w				double precision;
ie_mesmo_zerado_w			varchar(1);
qt_total_dispensar_w		double precision;
cd_fornec_consignado_w		varchar(255);
nr_sequencia_proc_w			bigint;
qt_solucao_w				double precision;
ds_dose_diferenciada_w		varchar(255);
ie_medicacao_paciente_w		varchar(2);
nr_sequencia_diluicao_w		bigint;
nr_sequencia_dieta_w		bigint;
ie_agrupador_w				smallint;
nr_dia_util_w				bigint;
ie_situacao_w				varchar(5);
qt_min_aplicacao_w			bigint;
ie_bomba_infusao_w			varchar(5);
IE_APLIC_BOLUS_w			varchar(5);
IE_APLIC_LENTA_w			varchar(5);
ie_objetivo_w				varchar(5);
cd_topografia_cih_w			bigint;
ie_origem_infeccao_w		varchar(5);
cd_amostra_cih_w			bigint;
cd_microorganismo_cih_w		bigint;
ie_uso_antimicrobiano_w		varchar(5);
cd_protocolo_w				bigint;
nr_seq_mat_protocolo_w		bigint;
qt_hora_aplicacao_w			bigint;
QT_VEL_INFUSAO_w			double precision;
ds_justificativa_w			varchar(4000);
ie_sem_aprazamento_w		varchar(5);
ie_indicacao_w				varchar(5);
dt_proxima_dose_w			timestamp;
qt_total_dias_lib_w			integer;
nr_seq_substituto_w			integer;
ie_lado_w					varchar(5);
dt_inicio_medic_w			timestamp;
dt_inicio_w					timestamp;
dt_final_w					timestamp;
qt_dia_prim_hor_w			bigint;
ie_regra_disp_w				varchar(5);
qt_vol_adic_reconst_w		double precision;
qt_hora_intervalo_w			smallint;
qt_min_intervalo_w			integer;
ie_nao_padronizado_w		varchar(1);
VarCopiaJust_w				varchar(1);
dt_primeiro_horario_w		timestamp;
dt_primeiro_horario_orig_w	prescr_medica.dt_primeiro_horario%type;
dt_inicio_prescr_w			timestamp;
dt_validade_prescr_w		timestamp;
nr_prescr_estendido_w		bigint;
nr_prescricao_original_w	bigint;
nr_seq_anterior_w			bigint;
qt_inconsistencia_w			bigint;
ds_erro_w					varchar(2000);
ie_urgencia_w				varchar(1);
ie_consiste_w				varchar(1);
ie_consiste_sol_w			varchar(1);
hr_prim_hora_solucao_w		varchar(5);
ie_operacao_w				varchar(3);
dt_prim_hor_sol_w			timestamp;
ie_recalcular_hor_sol_w		varchar(5);
cd_setor_atendimento_w		bigint;
cd_estabelecimento_w		bigint;
nr_atendimento_w			bigint;
ie_horario_rep_ant_w		varchar(1);
ie_fator_correcao_w			varchar(1);
ie_etapa_especial_w			varchar(1);
ie_solucao_especial_w		prescr_solucao.ie_solucao_especial%type;
cd_protocolo_sol_w			prescr_solucao.cd_protocolo%type;
nr_seq_prot_rotina_w 		prescr_solucao.nr_seq_prot_rotina%type;
qt_total_aplic_prot_w		protocolo_medic_solucao.qt_tempo_aplicacao%type;

C02 CURSOR FOR
SELECT	coalesce(ie_horario_rep_ant,'N'),
		coalesce(ie_manter_intervalo,'N'),
		coalesce(ie_limpa_prim_hor, 'N')
from	rep_regra_copia_crit
where	nr_seq_regra	= nr_seq_regra_p
and	ie_tipo_item	= 'SOL'
and	((coalesce(ie_pca, 'S') = 'S') or (coalesce(ie_solucao_pca_w, 'N') =  coalesce(ie_pca, 'S')))
and	((coalesce(ie_se_necessario, 'S') = 'S') or (coalesce(ie_se_necessario_w, 'N') =  coalesce(ie_se_necessario, 'S')))
and	((coalesce(ie_ACM, 'S') = 'S') or (coalesce(ie_acm_w, 'N') =  coalesce(ie_ACM, 'S')))
and	((coalesce(ie_agora, 'S') = 'S') or (coalesce(ie_urgencia_w, 'N') =  coalesce(ie_agora, 'S')))
and	((coalesce(ie_esquema_alternado, 'S') = 'S') or (coalesce(ie_esquema_alternado_w, 'N') =  coalesce(ie_esquema_alternado, 'S')))
order by coalesce(nr_seq_apres, 99);

c03 CURSOR FOR
SELECT  a.ie_origem_inf,
	a.cd_material,
	a.cd_unidade_medida,
	a.qt_dose,
	a.qt_unitaria,
	a.qt_material,
	--a.cd_intervalo,
	a.ds_horarios,
	a.ds_observacao,
	a.ds_observacao_enf,
	a.ie_via_aplicacao,
	a.nr_agrupamento,
	coalesce(a.ie_cobra_paciente,'S'),
	CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.cd_motivo_baixa  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  0  ELSE a.cd_motivo_baixa END  END ,
	CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  clock_timestamp()  ELSE CASE WHEN coalesce(a.ie_cobra_paciente,'S')='S' THEN  null  ELSE clock_timestamp() END  END ,
	a.ie_utiliza_kit,
	a.cd_unidade_medida_dose,
	a.qt_conversao_dose,
	coalesce(a.nr_ocorrencia,nr_etapas_w),
	a.qt_total_dispensar,
	a.cd_fornec_consignado,
	CASE WHEN coalesce(a.nr_sequencia_proc::text, '') = '' THEN  null  ELSE a.nr_sequencia_proc END ,
	a.qt_solucao,
	a.ds_dose_diferenciada,
	a.ie_medicacao_paciente,
	CASE WHEN coalesce(a.nr_sequencia_diluicao::text, '') = '' THEN  null  ELSE a.nr_sequencia_diluicao END ,
	--a.HR_PRIM_HORARIO,
	CASE WHEN coalesce(a.nr_sequencia_dieta::text, '') = '' THEN null  ELSE a.nr_sequencia_dieta END ,
	a.ie_agrupador,
	a.nr_dia_util,
	CASE WHEN b.ie_situacao='A' THEN  'N'  ELSE 'S' END ,
	a.ie_se_necessario,
	a.qt_min_aplicacao,
	a.ie_bomba_infusao,
	coalesce(a.IE_APLIC_BOLUS,'N'),
	coalesce(a.IE_APLIC_LENTA,'N'),
	coalesce(a.ie_acm,'N'),
	a.ie_objetivo,
	a.cd_topografia_cih,
	a.ie_origem_infeccao,
	a.cd_amostra_cih,
	a.cd_microorganismo_cih,
	coalesce(a.ie_uso_antimicrobiano,'N'),
	a.cd_protocolo,
	a.nr_seq_protocolo,
	a.nr_seq_mat_protocolo,
	a.qt_hora_aplicacao,
	A.QT_VEL_INFUSAO,
	CASE WHEN VarCopiaJust_w='S' THEN a.ds_justificativa  ELSE '' END ,
	a.ie_sem_aprazamento,
	a.ie_indicacao,
	a.dt_proxima_dose,
	a.qt_total_dias_lib,
	a.nr_seq_substituto,
	a.ie_lado,
	a.dt_inicio_medic,
	a.qt_dia_prim_hor,
	CASE WHEN coalesce(a.ie_regra_disp,'X')='D' THEN  a.ie_regra_disp  ELSE null END ,
	a.qt_vol_adic_reconst,
	a.qt_hora_intervalo,
	a.qt_min_intervalo
From	Material b,
	Prescr_Material a
where	a.nr_prescricao 	= nr_prescricao_orig_p
  and	b.ie_situacao		= 'A'
  and	a.ie_origem_inf		<> 'K'
  and	a.ie_agrupador = 4
  and 	a.nr_sequencia_solucao = nr_seq_solucao_p
  and	((a.nr_sequencia <> a.nr_sequencia_diluicao) or (coalesce(a.nr_sequencia_diluicao::text, '') = ''))
  and	a.cd_material 	= b.cd_material
  and	(((coalesce(a.ie_suspenso,'N') 	<> 'S')
	and	((coalesce(substr(obter_se_material_padronizado(cd_estabelecimento_p, b.cd_material),1,1) ,'S') = 'S') or (ie_nao_padronizado_w = 'S'))
	and	((coalesce(a.NR_SEQUENCIA_DILUICAO::text, '') = '') or
			a.NR_SEQUENCIA_DILUICAO not in (
				SELECT	x.nr_sequencia
				from	material y,
					prescr_material x
				where	y.cd_material = x.cd_material
				and	((y.ie_situacao <> 'A') or
					 ((ie_nao_padronizado_w = 'N') and (coalesce(substr(obter_se_material_padronizado(cd_estabelecimento_p, y.cd_material),1,1) ,'S') = 'N')))
				and	x.nr_prescricao = nr_prescricao_orig_p))
	and (not exists (
				select	nr_prescricao
				from	prescr_dieta b
				where	a.nr_prescricao	= b.nr_prescricao
				and	a.nr_sequencia_dieta = b.nr_sequencia
				and	b.ie_suspenso		= 'S') and
		not exists (
				select nr_prescricao
				from	prescr_solucao c
				where	a.nr_prescricao	= c.nr_prescricao
				and	a.nr_sequencia_solucao = c.nr_seq_solucao
				and	c.ie_suspenso		= 'S') and
		not exists (
				select	nr_prescricao
				from	prescr_procedimento d
				where	a.nr_prescricao	= d.nr_prescricao
				and	a.nr_sequencia_proc	= d.nr_sequencia
				and	d.ie_suspenso		= 'S') and
		not exists (
				select	nr_prescricao
				from	prescr_material e
				where	a.nr_prescricao	= e.nr_prescricao
				and	a.nr_sequencia_diluicao = e.nr_sequencia
				and	e.ie_suspenso		= 'S'))) or (ie_modificar_p = 'S'))
order by  a.nr_sequencia, a.nr_agrupamento;

c05 CURSOR FOR
	SELECT	a.nr_seq_solucao,
			b.qt_volume,
			b.qt_dosagem,
			b.ds_horario
	from	prescr_solucao_esquema b,
			prescr_solucao a
	where	a.nr_prescricao = nr_prescricao_orig_p
	and		a.nr_prescricao	 = b.nr_prescricao
	and		a.nr_seq_solucao = b.nr_seq_solucao
	and		a.nr_seq_solucao = nr_seq_solucao_ant_w;


BEGIN

CALL Wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_p, cd_perfil_p, nm_usuario_p);

ie_intervalo_solucao_w := wheb_assist_pck.obterValorParametroREP_PT(42, ie_intervalo_solucao_w);
ie_recalc_total_w := wheb_assist_pck.obterValorParametroREP(322, ie_recalc_total_w);
ie_prim_hor_sol_w := wheb_assist_pck.obterValorParametroREP(332, ie_prim_hor_sol_w);
ie_calcula_tempo_solucao_w := wheb_assist_pck.obterValorParametroREP(394, ie_calcula_tempo_solucao_w);
ie_arredondar_etapa_w := wheb_assist_pck.obterValorParametroREP(742, ie_arredondar_etapa_w);
ie_prim_hor_copia_w := wheb_assist_pck.obterValorParametroREP(790, ie_prim_hor_copia_w);
ie_vol_total_sem_calc_aut_w := wheb_assist_pck.obterValorParametroREP(805, ie_vol_total_sem_calc_aut_w);

select	dt_inicio_prescr,
		dt_validade_prescr,
		cd_setor_atendimento,
		cd_estabelecimento,
		nr_horas_validade,
		nr_atendimento
into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w,
		cd_setor_atendimento_w,
		cd_estabelecimento_w,
		nr_horas_validade_w,
		nr_atendimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;
	
select	nr_seq_solucao,
	ie_via_aplicacao,
	cd_intervalo,
	cd_unidade_medida,
	ie_tipo_dosagem,
	qt_dosagem,
	qt_solucao_total,
	qt_tempo_aplicacao,
	ds_solucao,
	CASE WHEN coalesce(ie_acm,'N')='S' THEN qt_volume  ELSE dividir(qt_solucao_total,nr_etapas) END ,
	nr_etapas,
	ds_horarios,
	ie_bomba_infusao,
	nr_agrupamento,
	ie_esquema_alternado,
	coalesce(ie_calc_aut,'N'),
	coalesce(ie_acm,'N'),
	hr_prim_horario,
	qt_hora_fase,
	ds_orientacao,
	ie_hemodialise,
	ie_tipo_solucao,
	ie_pos_dialisador,
	nr_seq_protocolo,
	ie_unid_vel_inf,
	qt_temp_solucao,
	ie_apap,
	qt_dose_ataque,
	ie_solucao_pca,
	ie_tipo_analgesia,
	ie_pca_modo_prog,
	qt_vol_infusao_pca,
	ie_um_fluxo_pca,
	qt_bolus_pca,
	ie_um_bolus_pca,
	qt_intervalo_bloqueio,
	qt_limite_quatro_hora,
	ie_um_limite_pca,
	qt_limite_uma_hora,
	ie_um_limite_hora_pca,
	qt_dose_inicial_pca,
	ie_um_dose_inicio_pca,
	coalesce(ie_se_necessario,'N'),
	coalesce(nr_prescricao_original,nr_prescricao),
	coalesce(nr_seq_anterior,nr_seq_solucao),
	coalesce(ie_urgencia,'N'),
	cd_protocolo,
	nr_seq_prot_rotina,
	ie_etapa_especial,
	ie_solucao_especial
into STRICT	nr_seq_solucao_ant_w,
	ie_via_aplicacao_w,
	cd_intervalo_w,
	cd_unidade_medida_w,
	ie_tipo_dosagem_w,
	qt_dosagem_w,
	qt_solucao_total_w,
	qt_tempo_aplicacao_w,
	ds_solucao_w,
	qt_volume_w,
	nr_etapas_w,
	ds_horarios_w,
	ie_bomba_infusao_w,
	nr_agrupamento_w,
	ie_esquema_alternado_w,
	ie_calc_aut_w,
	ie_acm_w,
	hr_prim_horario_w,
	qt_hora_fase_w,
	ds_orientacao_w,
	ie_hemodialise_w,
	ie_tipo_solucao_w,
	ie_pos_dialisador_w,
	nr_seq_protocolo_w,
	ie_unid_vel_inf_w,
	qt_temp_solucao_w,
	ie_apap_w,
	qt_dose_ataque_w,
	ie_solucao_pca_w,
	ie_tipo_analgesia_w,
	ie_pca_modo_prog_w,
	qt_vol_infusao_pca_w,
	ie_um_fluxo_pca_w,
	qt_bolus_pca_W,
	ie_um_bolus_pca_w,
	qt_intervalo_bloqueio_w,
	qt_limite_quatro_hora_w,
	ie_um_limite_pca_w,
	qt_limite_uma_hora_w,
	ie_um_limite_hora_pca_w,
	qt_dose_inicial_pca_w,
	ie_um_dose_inicio_pca_w,
	ie_se_necessario_w,
	nr_prescricao_original_w,
	nr_seq_anterior_w,
	ie_urgencia_w,
	cd_protocolo_sol_w,
	nr_seq_prot_rotina_w,
	ie_etapa_especial_w,
	ie_solucao_especial_w
from	prescr_solucao
where	nr_prescricao = nr_prescricao_orig_p
and	nr_seq_solucao = nr_seq_solucao_p;

select	coalesce(max(qt_tempo_aplicacao),0)
into STRICT	qt_total_aplic_prot_w
from	protocolo_medic_solucao
where 	cd_protocolo = cd_protocolo_sol_w
and		nr_seq_interno = nr_seq_prot_rotina_w;
	
if (ie_recalc_total_w = 'S') or (ie_recalc_total_w = 'A') or
   (ie_recalc_total_w = 'C' AND qt_total_aplic_prot_w = 0) then
	qt_tempo_aplicacao_w	:= coalesce(nr_horas_validade_w, 24);
end if;

dt_primeiro_horario_w := dt_inicio_prescr_w;

CALL PLT_consiste_extensao_item(dt_inicio_prescr_w, dt_validade_prescr_w, nr_prescricao_orig_p, nr_seq_solucao_p, 'SOL', nr_seq_regra_p, nm_usuario_p, cd_perfil_p, cd_estabelecimento_p);

select	count(nr_sequencia)
into STRICT	qt_inconsistencia_w
from	w_copia_plano
where	nr_prescricao	= nr_prescricao_orig_p
and		nr_seq_item	= nr_seq_solucao_p
and		ie_tipo_item	= 'SOL'
and		nm_usuario	= nm_usuario_p
and		((ie_permite	= 'N') or (ie_estende_inc_p = 'N'))  LIMIT 1;
	
select	count(nr_prescricao)
into STRICT	qt_w
from	prescr_solucao
where	nr_prescricao = nr_prescricao_orig_p
and		nr_seq_solucao = nr_seq_solucao_p
and		((coalesce(ie_copia_agora_p,'S')	= 'S') or
		 ((ie_copia_agora_p = 'N') and (coalesce(ie_urgencia,'N') = 'N')))  LIMIT 1;
	
if	((qt_inconsistencia_w	= 0) or (ie_modificar_p 	= 'S')) and (qt_w > 0) then
	
	ie_fator_correcao_w		 := Wheb_assist_pck.obterParametroFuncao(924,1082);
	select	coalesce(max(nr_agrupamento),0) + 1
	into STRICT	nr_agrup_acum_sol_w
	from	prescr_solucao
	where	nr_prescricao = nr_prescricao_p;
	
	if (position('/' in hr_prim_horario_w) > 0) then
		hr_prim_horario_w := to_char(dt_inicio_prescr_w,'hh24:mi');
	end if;
		
	select	coalesce(max(nr_seq_solucao),0) + 1
	into STRICT	nr_seq_solucao_w
	from	prescr_solucao
	where	nr_prescricao = nr_prescricao_p;
	
	if (coalesce(ie_limpa_prim_hor_w, 'N') = 'S') then			
			ie_manter_intervalo_w := 'N';
			ie_horario_rep_ant_w := 'N';
			hr_prim_horario_w := null;
			ds_horarios_w := null;
	end if;
	
	Insert into Prescr_Solucao(
			nr_prescricao,
			nr_seq_solucao,
			ie_via_aplicacao,
			cd_intervalo,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			ie_tipo_dosagem,
			qt_dosagem,
			qt_solucao_total,
			qt_tempo_aplicacao,
			ds_solucao,
			qt_volume,
			nr_etapas,
			ds_horarios,
			ie_bomba_infusao,
			ie_suspenso,
			nr_agrupamento,
			ie_esquema_alternado,
			ie_calc_aut,
			ie_acm,
			hr_prim_horario,
			qt_hora_fase,
			ie_urgencia,
			ds_orientacao,
			ie_hemodialise,
			ie_tipo_solucao,
			ie_pos_dialisador,
			nr_seq_protocolo,
			ie_unid_vel_inf,
			qt_temp_solucao,
			ie_apap,
			qt_dose_ataque,
			ie_solucao_pca,
			ie_tipo_analgesia,
			ie_pca_modo_prog,
			qt_vol_infusao_pca,
			ie_um_fluxo_pca,
			qt_bolus_pca,
			ie_um_bolus_pca,
			qt_intervalo_bloqueio,
			qt_limite_quatro_hora,
			ie_um_limite_pca,
			qt_limite_uma_hora,
			ie_um_limite_hora_pca,
			qt_dose_inicial_pca,
			ie_um_dose_inicio_pca,
			ie_etapa_especial,
			ie_solucao_especial,
			ie_se_necessario,
			ie_status,
			dt_status,
			nr_prescricao_original,
			nr_seq_anterior,
			nr_prescricao_anterior,
			nr_sequencia_anterior,
			ie_fator_correcao,
			cd_protocolo,
			nr_seq_prot_rotina)
	values (
			nr_prescricao_p,
			nr_seq_solucao_w,
			ie_via_aplicacao_w,
			cd_intervalo_w,
			dt_prescricao_p,
			nm_usuario_p,
			cd_unidade_medida_w,
			ie_tipo_dosagem_w,
			CASE WHEN coalesce(ie_recalc_total_w, 'N')='S' THEN  Calcular_Vol_Total_Solucao(ie_tipo_dosagem_w,qt_tempo_aplicacao_w, coalesce(qt_solucao_total_w,0) - coalesce(qt_dose_ataque_w,0), qt_dosagem_w, nr_prescricao_p, nr_seq_solucao_w, 1)  ELSE qt_dosagem_w END ,
			qt_solucao_total_w,
			qt_tempo_aplicacao_w,
			ds_solucao_w,
			qt_volume_w,
			nr_etapas_w,
			ds_horarios_w,
			ie_bomba_infusao_w,
			'N',
			nr_agrup_acum_sol_w,
			ie_esquema_alternado_w,
			ie_calc_aut_w,
			ie_acm_w,
			hr_prim_horario_w,
			qt_hora_fase_w,
			CASE WHEN coalesce(ie_modificar_p,'N')='S' THEN ie_urgencia_w WHEN coalesce(ie_modificar_p,'N')='N' THEN 'N' END ,
			ds_orientacao_w,
			ie_hemodialise_w,
			ie_tipo_solucao_w,
			ie_pos_dialisador_w,
			nr_seq_protocolo_w,
			ie_unid_vel_inf_w,
			qt_temp_solucao_w,
			ie_apap_w,
			qt_dose_ataque_w,
			ie_solucao_pca_w,
			ie_tipo_analgesia_w,
			ie_pca_modo_prog_w,
			qt_vol_infusao_pca_w,
			ie_um_fluxo_pca_w,
			qt_bolus_pca_w,
			ie_um_bolus_pca_w,
			qt_intervalo_bloqueio_w,
			qt_limite_quatro_hora_w,
			ie_um_limite_pca_w,
			qt_limite_uma_hora_w,
			ie_um_limite_hora_pca_w,
			qt_dose_inicial_pca_w,
			ie_um_dose_inicio_pca_w,
			ie_etapa_especial_w,
			ie_solucao_especial_w,
			ie_se_necessario_w,
			'P',
			clock_timestamp(),
			nr_prescricao_original_w,
			nr_seq_anterior_w,
			nr_prescricao_orig_p,
			nr_seq_solucao_ant_w,
			ie_fator_correcao_w,
			cd_protocolo_sol_w,
			nr_seq_prot_rotina_w);			
	
	open c05;
	loop
	fetch c05 into	
		nr_seq_sol_esq_w,
		qt_volume_ww,
		qt_dosagem_ww,
		ds_horario_ww;
	EXIT WHEN NOT FOUND; /* apply on c05 */
		begin					
			insert into prescr_solucao_esquema(
					nr_sequencia,
					nr_prescricao,
					nr_seq_solucao,
					dt_atualizacao,
					nm_usuario,
					qt_volume,
					qt_dosagem,
					ds_horario)
			values (
					 nextval('prescr_solucao_esquema_seq'),
					 nr_prescricao_p,
					 nr_seq_solucao_w,
					 clock_timestamp(),
					 nm_usuario_p,
					 qt_volume_ww,
					 qt_dosagem_ww,
					 ds_horario_ww);
		end;
	end loop;
	close c05;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

	open C02;
	loop
	fetch C02 into	
		ie_horario_rep_ant_w,
		ie_manter_intervalo_w,
		ie_limpa_prim_hor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		ie_horario_rep_ant_w := ie_horario_rep_ant_w;
		ie_manter_intervalo_w := ie_manter_intervalo_w;
		ie_limpa_prim_hor_w := ie_limpa_prim_hor_w;
	end loop;
	close C02;
	
	
	if (ie_limpa_prim_hor_w = 'N') then	
		if (ie_horario_rep_ant_w = 'S') then
				begin
				qt_operacao_orig_w := null;
				if (hr_prim_horario_w = '') then
					hr_prim_horario_w	:= obter_primeiro_horario(cd_intervalo_w,nr_prescricao_orig_p,0,null);
				end if;
				if (coalesce(ie_manter_intervalo_w,'N') = 'S') then
					qt_operacao_orig_w	:= dividir(coalesce(qt_tempo_aplicacao_w, coalesce(nr_horas_validade_w, 24)), coalesce(nr_etapas_w,0));
				end if;	
				
				select	max(ie_operacao),
					max(qt_operacao)
				into STRICT	ie_operacao_w,
					qt_operacao_w
				from	intervalo_prescricao
				where	cd_intervalo	= cd_intervalo_w  LIMIT 1;
				
				if (ie_operacao_w = 'X') then
					qt_operacao_w	:= dividir(24,qt_operacao_w);
				end if;
		
				if (ie_operacao_w in ('F','V')) then
					hr_prim_horario_w	:= obter_primeiro_horario(cd_intervalo_w,nr_prescricao_orig_p,0,null);
				end if;
				
				
				dt_prim_hor_sol_w := PKG_DATE_UTILS.get_Time(dt_inicio_prescr_w, hr_prim_horario_w);
				
				select	coalesce(max(hr_prim_horario),''),
					coalesce(max(ds_horarios),'')
				into STRICT	hr_prim_horario_w2,
					ds_horarios_w2
				from	prescr_solucao
				where	((ie_copia_agora_p	= 'S') or (ie_urgencia		= 'N'))
				and		ie_etapa_especial	= 'S'
				and		nr_prescricao		= nr_prescricao_orig_p
				and		nr_seq_solucao		= nr_seq_solucao_p  LIMIT 1;
				
				if (hr_prim_horario_w2 IS NOT NULL AND hr_prim_horario_w2::text <> '') then
					if (position(':' in ds_horarios_w2) = 0) then
						if (trim(both substr(ds_horarios_w2,1,2)) <> trim(both substr(ds_horarios_w2,4,5))) then
							ds_horarios_w := replace(substr(ds_horarios_w2,1,6),substr(hr_prim_horario_w2,1,2),'');
						end if;	
					else
						if (trim(both substr(ds_horarios_w2,1,5)) <> trim(both substr(ds_horarios_w2,7,11))) then
							ds_horarios_w := replace(substr(ds_horarios_w2,1,12),substr(hr_prim_horario_w2,1,5),'');
						end if;		
					end if;
					ds_prim_hor_w := Obter_prim_DsHorarios(ds_horarios_w);
					dt_prim_hor_sol_w := PKG_DATE_UTILS.get_Time(dt_inicio_prescr_w, ds_prim_hor_w);
					ds_horarios_w	  := '';	
				elsif not(obter_se_lib_prescr_vig_disp(dt_inicio_prescr_w, dt_validade_prescr_w, PKG_DATE_UTILS.get_Time(clock_timestamp(), hr_prim_horario_w)) = 'S') and (ie_recalcular_hor_sol_w = 'S') then
					dt_prim_hor_sol_w := dt_inicio_prescr_w;
				elsif (dt_prim_hor_sol_w < dt_inicio_prescr_w )then
					dt_prim_hor_sol_w := dt_prim_hor_sol_w +1;
				end if;	
		
				if (ie_manter_intervalo_w = 'S') then
					dt_inicio_w := dt_inicio_prescr_w - 5;
					dt_final_w := clock_timestamp() + interval '5 days';
					
					if (coalesce(cd_intervalo_w::text, '') = '') then
						qt_operacao_w	:= qt_operacao_orig_w;
					end if;
		
					dt_prim_hor_sol_w := dt_inicio_prescr_w - qt_operacao_w / 24;
		
					select	max(d.dt_horario)
					into STRICT	dt_prim_hor_sol_w
					from	prescr_mat_hor d,
						prescr_material c,
						prescr_solucao b,
						prescr_medica a
					where	coalesce(d.ie_situacao,'A') = 'A'
					and	coalesce(d.ie_dose_especial,'N') <> 'S'
					and	d.dt_horario >= dt_prim_hor_sol_w - 220/24
					and	d.nr_seq_material = c.nr_sequencia
					and	d.nr_prescricao = c.nr_prescricao
					and	coalesce(c.dt_suspensao::text, '') = ''
					and	c.ie_agrupador = 4
					and	coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_w, coalesce(b.cd_intervalo, 'XPTO'))
					and	c.nr_sequencia_solucao = b.nr_seq_solucao
					and	c.nr_prescricao = b.nr_prescricao
					and	coalesce(b.dt_suspensao::text, '') = ''
					and	b.nr_etapas = nr_etapas_w
					and	b.nr_prescricao = a.nr_prescricao
					and	coalesce(a.dt_suspensao::text, '') = ''
					and	(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')
					and	a.dt_inicio_prescr between dt_inicio_w and dt_final_w
					and b.nr_prescricao = nr_prescricao_orig_p
					and b.nr_seq_solucao = nr_seq_solucao_ant_w
					and	a.nr_atendimento = nr_atendimento_w;
		
					if (coalesce(dt_prim_hor_sol_w::text, '') = '') then
						select	max(d.dt_horario)
						into STRICT	dt_prim_hor_sol_w
						from	prescr_mat_hor d,
							prescr_material c,
							prescr_solucao b,
							prescr_medica a
						where	coalesce(d.ie_situacao,'A') = 'A'
						and	coalesce(d.ie_dose_especial,'N') <> 'S'
						and	d.dt_horario >= dt_prim_hor_sol_w - 220/24
						and	d.nr_seq_material = c.nr_sequencia
						and	d.nr_prescricao = c.nr_prescricao
						and	coalesce(c.dt_suspensao::text, '') = ''
						and	c.ie_agrupador = 4
						and	coalesce(b.cd_intervalo,'XPTO') = coalesce(cd_intervalo_w, coalesce(b.cd_intervalo, 'XPTO'))
						and	c.nr_sequencia_solucao = b.nr_seq_solucao
						and	c.nr_prescricao = b.nr_prescricao
						and	coalesce(b.dt_suspensao::text, '') = ''
						and	b.nr_etapas = nr_etapas_w
						and	b.nr_prescricao = a.nr_prescricao
						and	coalesce(a.dt_suspensao::text, '') = ''
						and	(coalesce(a.dt_liberacao_medico, a.dt_liberacao) IS NOT NULL AND (coalesce(a.dt_liberacao_medico, a.dt_liberacao))::text <> '')
						and	a.dt_inicio_prescr between dt_inicio_w and dt_final_w
						and	a.nr_atendimento = nr_atendimento_w;
					end if;
					
					if (coalesce(dt_prim_hor_sol_w::text, '') = '') and (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
						dt_prim_hor_sol_w	:= PKG_DATE_UTILS.get_Time(dt_inicio_prescr_w-1,hr_prim_horario_w);
					end if;
					
				
					if (dt_prim_hor_sol_w IS NOT NULL AND dt_prim_hor_sol_w::text <> '') and (ie_operacao_w	= 'X') then
							dt_prim_hor_sol_w := dt_prim_hor_sol_w + qt_operacao_w/24;
						
					end if;
					
					dt_prim_hor_sol_w := coalesce(dt_prim_hor_sol_w,dt_inicio_prescr_w);
					
					if (coalesce(qt_operacao_w,0) > 0) and (dt_prim_hor_sol_w IS NOT NULL AND dt_prim_hor_sol_w::text <> '') then
						
						if (ie_operacao_w in ('H')) and (dt_prim_hor_sol_w not between dt_inicio_prescr_w and (dt_prim_hor_sol_w + qt_operacao_w)) then
		
							while(dt_prim_hor_sol_w not between dt_inicio_prescr_w and (dt_prim_hor_sol_w + qt_operacao_w)) loop
								dt_prim_hor_sol_w := dt_prim_hor_sol_w + qt_operacao_w/24;
							end loop;
						end if;
					end if;
					
				
				end if;
		
				if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
					SELECT * FROM Calcula_Horarios_Etapas(dt_prim_hor_sol_w, nr_etapas_w, qt_operacao_w, nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
				else
					SELECT * FROM Calcula_Horarios_Etapas(dt_prim_hor_sol_w, nr_etapas_w, dividir(qt_tempo_aplicacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
				end if;
		
				ds_horarios_w	:= ds_horarios_w || ds_horarios_2w;
				
				if (ie_se_necessario_w = 'S') then
		
					select	coalesce(max(b.qt_se_necessario),0),
							coalesce(max(b.ie_mesmo_zerado),'N')
					into STRICT	nr_ocorrencia_w,
							ie_mesmo_zerado_w
					from	intervalo_prescricao a,
							intervalo_setor b
					where	a.cd_intervalo 		= b.cd_intervalo
					and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
					and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
					and		a.cd_intervalo 		= cd_intervalo_w
					and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = ''))
					and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = ''))
					and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''))  LIMIT 1;
		
					if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then
						select	coalesce(max(qt_se_necessario),1)
						into STRICT	nr_ocorrencia_w
						from	intervalo_prescricao
						where	cd_intervalo	= cd_intervalo_w  LIMIT 1;
					end if;
		
					ds_horarios_w	:= wheb_mensagem_pck.get_texto(309808); -- SN
		
				elsif (ie_acm_w = 'S') then
					select	coalesce(max(b.qt_se_necessario),0),
							coalesce(max(b.ie_mesmo_zerado),'N')
					into STRICT		nr_ocorrencia_w,
							ie_mesmo_zerado_w
					from		intervalo_prescricao a,
							intervalo_setor b
					where	a.cd_intervalo 		= b.cd_intervalo
					and		coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w)	= cd_setor_atendimento_w
					and		coalesce(b.cd_estab, cd_estabelecimento_w)			= cd_estabelecimento_w
					and		a.cd_intervalo 		= cd_intervalo_w
					and		((b.cd_material = cd_material_w) or (coalesce(b.cd_material::text, '') = ''))
					and		((b.ie_via_aplicacao = coalesce(ie_via_aplicacao_w,b.ie_via_aplicacao)) or (coalesce(b.ie_via_aplicacao::text, '') = ''))
					and		((b.cd_unidade_basica = coalesce(obter_unid_atend_setor_atual(nr_atendimento_w,cd_setor_atendimento_w,'UB'),b.cd_unidade_basica)) or (coalesce(b.cd_unidade_basica::text, '') = ''))  LIMIT 1;
					
					if (coalesce(nr_ocorrencia_w,0) = 0) and (ie_mesmo_zerado_w = 'N') then
				
						select	coalesce(max(qt_se_necessario),1)
						into STRICT	nr_ocorrencia_w
						from	intervalo_prescricao
						where	cd_intervalo	= cd_intervalo_w  LIMIT 1;
					end if;
		
					ds_horarios_w	:= wheb_mensagem_pck.get_texto(309807); -- ACM
				end if;
				
				if	(((ds_horarios_w <> wheb_mensagem_pck.get_texto(309807)) and (ds_horarios_w <> wheb_mensagem_pck.get_texto(309808))) or
					((coalesce(ds_horarios_w::text, '') = '') and (coalesce(ie_etapa_especial_w, 'N') = 'S')))	then
					hr_prim_horario_w := to_char(dt_prim_hor_sol_w,'hh24:mi');
					
				end if;	
				
				update	prescr_solucao
				set	ds_horarios	= substr(ds_horarios_w,1,255),
					hr_prim_horario	= hr_prim_horario_w
				where	nr_prescricao	 = nr_prescricao_p
				and	nr_seq_solucao 	 = nr_seq_solucao_w;
				end;	
		
			elsif (ie_prim_hor_sol_w <> 'N') then
			begin
			if (ie_prim_hor_sol_w = 'P') then
				dt_primeiro_horario_w := dt_inicio_prescr_w;
				hr_prim_horario_w			:= Obter_prim_horario_solucao(to_char(dt_inicio_prescr_w,'dd/mm/yyyy hh24:mi:ss'));
				if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then
					dt_primeiro_horario_w	:= PKG_DATE_UTILS.get_Time(dt_inicio_prescr_w, hr_prim_horario_w);
				end if;
			end if;
			if (ie_prim_hor_sol_w <> 'C') and (ie_prim_hor_sol_w <> 'T') then
				begin
					
				if (ie_prim_hor_copia_w = 'S') then
				
					select	max(PKG_DATE_UTILS.get_Time(dt_inicio_prescr, dt_primeiro_horario_orig_w))
					into STRICT	dt_primeiro_horario_w
					from	prescr_medica
					where	nr_prescricao = nr_prescricao_p;
				
				elsif	(ie_prim_hor_sol_w = 'I' AND cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
					
					select	to_date(to_char(dt_inicio_prescr,'dd/mm/yyyy')||' '||substr(Obter_primeiro_horario(cd_intervalo_w,nr_prescricao,null,null),1,20),'dd/mm/yyyy hh24:mi:ss')
					into STRICT	dt_primeiro_horario_w
					from	prescr_medica
					where	nr_prescricao = nr_prescricao_p;

				else
					select	max(dt_inicio_prescr)
					into STRICT	dt_primeiro_horario_w
					from	prescr_medica
					where	nr_prescricao = nr_prescricao_p;
				end if;
				hr_prim_horario_w := Obter_prim_horario_solucao(to_char(dt_primeiro_horario_w, 'dd/mm/yyyy hh24:mi:ss'));
				hr_prim_horario_w := to_char(dt_primeiro_horario_w, 'hh24:mi');
				SELECT * FROM Calcula_Horarios_Etapas(dt_primeiro_horario_w, nr_etapas_w, coalesce(qt_hora_fase_w, dividir(qt_tempo_aplicacao_w, nr_etapas_w)), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
										
				if (coalesce(ie_acm_w,'N') = 'N')  and (coalesce(ie_se_necessario_w,'N') = 'N') then
					
					update	prescr_solucao
					set	ds_horarios	= substr(ds_horarios_w,1,255),
						qt_tempo_aplicacao = qt_tempo_aplicacao_w,
						hr_prim_horario	= to_char(dt_primeiro_horario_w,'hh24:mi')
					where	nr_seq_solucao	= nr_seq_Solucao_w
					and	nr_prescricao	= nr_prescricao_p;	
				end if;
				
				end;
			end if;			
			
			end;
		else
			begin
			select	max(a.dt_primeiro_horario)
			into STRICT	dt_primeiro_horario_w
			from	prescr_solucao b,
					prescr_medica a
			where	a.nr_prescricao	= b.nr_prescricao
			and		b.nr_prescricao	= nr_prescricao_p
			and		b.nr_seq_solucao = nr_seq_solucao_w  LIMIT 1;
				
			SELECT * FROM Calcula_Horarios_Etapas(dt_primeiro_horario_w, nr_etapas_w, dividir(qt_tempo_aplicacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
			
			
			
			if (coalesce(ie_acm_w,'N') = 'N')  and (coalesce(ie_se_necessario_w,'N') = 'N') then				
				
				update	prescr_solucao
				set	ds_horarios	= substr(ds_horarios_w,1,255),
					hr_prim_horario	= to_char(dt_primeiro_horario_w,'hh24:mi')
				where	nr_prescricao	= nr_prescricao_p
				and	nr_seq_solucao	= nr_seq_Solucao_w;
			
			end if;	
			end;
		end if;
	else
		update	prescr_solucao
		set ds_horarios  = NULL,
			hr_prim_horario  = NULL
		where	nr_prescricao	= nr_prescricao_p
		and nr_seq_solucao	= nr_seq_solucao_w;	
	end if;

	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;	
	
	select	coalesce(max('S'),'N')
	into STRICT	ie_consiste_sol_w
	from	prescr_solucao
	where	nr_prescricao = nr_prescricao_p
	and		nr_seq_solucao = nr_seq_solucao_w  LIMIT 1;
	
	if (ie_consiste_sol_w = 'S') then
		ds_erro_w := Consistir_prescr_solucao(nr_prescricao_p, nr_seq_solucao_w, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, ds_erro_w);
	end if;

	
	nr_seq_material_w	:= 0;
	
	ie_nao_padronizado_w := Wheb_assist_pck.obterParametroFuncao(924,111);
	VarCopiaJust_w		 := Wheb_assist_pck.obterParametroFuncao(924,135);
		
	open C03;
	loop
	fetch C03 into	
		ie_origem_inf_w,
		cd_material_w,
		cd_unidade_medida_w,
		qt_dose_w,
		qt_unitaria_w,
		qt_material_w,
		--cd_intervalo_w,
		ds_horarios_w,
		ds_observacao_w,
		ds_observacao_enf_w,
		ie_via_aplicacao_w,
		nr_agrupamento_w,
		ie_cobra_paciente_w,
		cd_motivo_baixa_w,
		dt_baixa_w,
		ie_utiliza_kit_w,
		cd_unidade_medida_dose_w,
		qt_conversao_dose_w,
		nr_ocorrencia_w,
		qt_total_dispensar_w,
		cd_fornec_consignado_w,
		nr_sequencia_proc_w,
		qt_solucao_w,
		ds_dose_diferenciada_w,
		ie_medicacao_paciente_w,
		nr_sequencia_diluicao_w,
		--HR_PRIM_HORARIO_w,
		nr_sequencia_dieta_w,
		ie_agrupador_w,
		nr_dia_util_w,
		ie_situacao_w,
		ie_se_necessario_w,
		qt_min_aplicacao_w,
		ie_bomba_infusao_w,
		IE_APLIC_BOLUS_w,
		IE_APLIC_LENTA_w,
		ie_acm_w,
		ie_objetivo_w,
		cd_topografia_cih_w,
		ie_origem_infeccao_w,
		cd_amostra_cih_w,
		cd_microorganismo_cih_w,
		ie_uso_antimicrobiano_w,
		cd_protocolo_w,
		nr_seq_protocolo_w,
		nr_seq_mat_protocolo_w,
		qt_hora_aplicacao_w,
		QT_VEL_INFUSAO_w,
		ds_justificativa_w,
		ie_sem_aprazamento_w,
		ie_indicacao_w,
		dt_proxima_dose_w,
		qt_total_dias_lib_w,
		nr_seq_substituto_w,
		ie_lado_w,
		dt_inicio_medic_w,
		qt_dia_prim_hor_w,
		ie_regra_disp_w,
		qt_vol_adic_reconst_w,
		qt_hora_intervalo_w,
		qt_min_intervalo_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p;

		select	coalesce(max(nr_agrupamento),0) + 1
		into STRICT	nr_agrup_acum_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p;
			
		Insert  into Prescr_Material(
				nr_prescricao,
				nr_sequencia,
				ie_origem_inf,
				cd_material,
				cd_unidade_medida,
				qt_dose,
				qt_unitaria,
				qt_material,
				dt_atualizacao,
				nm_usuario,
				cd_intervalo,
				ds_horarios,
				ds_observacao,
				ds_observacao_enf,
				ie_via_aplicacao,
				nr_agrupamento,
				ie_cobra_paciente,
				cd_motivo_baixa,
				dt_baixa,
				ie_utiliza_kit,
				cd_unidade_medida_dose,
				qt_conversao_dose,
				ie_urgencia,
				nr_ocorrencia,
				qt_total_dispensar,
				cd_fornec_consignado,
				nr_sequencia_solucao,
				nr_sequencia_proc,
				qt_solucao,
				hr_dose_especial,
				qt_dose_especial,
				ds_dose_diferenciada,
				ie_medicacao_paciente,
				nr_sequencia_diluicao,
				hr_prim_horario,
				nr_sequencia_dieta,
				ie_agrupador,
				nr_dia_util,
				ie_suspenso,
				ie_se_necessario,
				qt_min_aplicacao,
				ie_bomba_infusao,
				ie_aplic_bolus,
				ie_aplic_lenta,
				ie_acm,
				ie_objetivo,
				cd_topografia_cih,
				ie_origem_infeccao,
				cd_amostra_cih,
				cd_microorganismo_cih,
				ie_uso_antimicrobiano,
				cd_protocolo,
				nr_seq_protocolo,
				nr_seq_mat_protocolo,
				qt_hora_aplicacao,
				ie_recons_diluente_fixo,
				qt_vel_infusao,
				ds_justificativa,
				ie_sem_aprazamento,
				ie_indicacao,
				dt_proxima_dose,
				qt_total_dias_lib,
				nr_seq_substituto,
				ie_lado,
				dt_inicio_medic,
				qt_dia_prim_hor,
				ie_regra_disp,
				qt_vol_adic_reconst,
				qt_hora_intervalo,
				qt_min_intervalo)
		values (nr_prescricao_p,
				nr_sequencia_w,
				ie_origem_inf_w,
				cd_material_w,
				cd_unidade_medida_w,
				qt_dose_w,
				qt_unitaria_w,
				qt_material_w,
				dt_prescricao_p,
				nm_usuario_p,
				cd_intervalo_w,
				ds_horarios_w,
				ds_observacao_w,
				ds_observacao_enf_w,
				ie_via_aplicacao_w,
				nr_agrup_acum_w,
				ie_cobra_paciente_w,
				cd_motivo_baixa_w,
				dt_baixa_w,
				ie_utiliza_kit_w,
				cd_unidade_medida_dose_w,
				qt_conversao_dose_w,
				CASE WHEN coalesce(ie_modificar_p,'N')='S' THEN ie_urgencia_w WHEN coalesce(ie_modificar_p,'N')='N' THEN 'N' END ,

				nr_ocorrencia_w,
				qt_total_dispensar_w,
				cd_fornec_consignado_w,
				nr_seq_solucao_w,
				nr_sequencia_proc_w,
				qt_solucao_w,
				null,
				null,
				ds_dose_diferenciada_w,
				ie_medicacao_paciente_w,
				nr_sequencia_diluicao_w,
				HR_PRIM_HORARIO_w,
				nr_sequencia_dieta_w,
				ie_agrupador_w,
				nr_dia_util_w,
				ie_situacao_w,
				ie_se_necessario_w,
				qt_min_aplicacao_w,
				ie_bomba_infusao_w,
				IE_APLIC_BOLUS_w,
				IE_APLIC_LENTA_w,
				ie_acm_w,
				ie_objetivo_w,
				cd_topografia_cih_w,
				ie_origem_infeccao_w,
				cd_amostra_cih_w,
				cd_microorganismo_cih_w,
				ie_uso_antimicrobiano_w,
				cd_protocolo_w,
				nr_seq_protocolo_w,
				nr_seq_mat_protocolo_w,
				qt_hora_aplicacao_w,
				'N',
				QT_VEL_INFUSAO_w,
				ds_justificativa_w,
				ie_sem_aprazamento_w,
				ie_indicacao_w,
				dt_proxima_dose_w,
				qt_total_dias_lib_w,
				nr_seq_substituto_w,
				ie_lado_w,
				dt_inicio_medic_w,
				qt_dia_prim_hor_w,
				ie_regra_disp_w,
				qt_vol_adic_reconst_w,
				qt_hora_intervalo_w,
				qt_min_intervalo_w);

		SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_p, cd_material_w, nr_prescricao_p, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, null, nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_w;
					
		update	prescr_material
		set 	NR_OCORRENCIA		= nr_ocorrencia_w,
			qt_total_dispensar	= qt_total_dispensar_w,
			qt_material		= coalesce(qt_material_w,0),
			ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END
		where	nr_prescricao 		= nr_prescricao_p
		and	nr_sequencia		= nr_sequencia_w;
		
		select	coalesce(max('S'),'N')
		into STRICT	ie_consiste_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_sequencia_w  LIMIT 1;
		
		if (ie_consiste_w	= 'S') then
			ds_erro_w := consistir_prescr_material(nr_prescricao_p, nr_sequencia_w, nm_usuario_p, cd_perfil_p, ds_erro_w);
		end if;		
		
	
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
		
	end loop;
	close C03;
		
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
	if 	((ie_recalc_total_w = 'S') or (ie_recalc_total_w = 'A') or
		 (ie_recalc_total_w = 'C' AND qt_total_aplic_prot_w = 0)) and (coalesce(ie_acm_w,'N') = 'N')  and (coalesce(ie_se_necessario_w,'N') = 'N') then
		begin

		select	coalesce(sum(qt_solucao), 0)
		into STRICT	qt_volume_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_p
		and		nr_sequencia_solucao = nr_seq_solucao_w;
		
		select	cd_intervalo
		into STRICT	cd_intervalo_w
		from	prescr_solucao
		where	nr_prescricao = nr_prescricao_p
		and		nr_seq_solucao = nr_seq_solucao_w;
		
		qt_tempo_aplicacao_w	:= coalesce(nr_horas_validade_w, 24);
		
		if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
			SELECT * FROM Calcular_etapas_interv_solucao(cd_intervalo_w, qt_tempo_aplicacao_w, ie_arredondar_etapa_w, qt_hora_fase_w, nr_etapas_w, null, null) INTO STRICT qt_hora_fase_w, nr_etapas_w;
		end if;
		
		if (ie_calc_aut_w = 'S') and (ie_esquema_alternado_w <> 'S') then
			qt_solucao_total_w := qt_volume_w * nr_etapas_w;
		end if;

		
		if (ie_limpa_prim_hor_w <> 'S') then
			if (ie_horario_rep_ant_w <> 'S') then
				dt_prim_hor_sol_w := dt_primeiro_horario_w;
			end if;
			
			if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
				SELECT * FROM Calcula_Horarios_Etapas(dt_prim_hor_sol_w, nr_etapas_w, coalesce(qt_operacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
			else
				SELECT * FROM Calcula_Horarios_Etapas(dt_prim_hor_sol_w, nr_etapas_w, dividir(qt_tempo_aplicacao_w,nr_etapas_w), nm_usuario_p, 'N', qt_tempo_aplicacao_w, ds_horarios_w, ds_horarios_2w, 'N', 'N') INTO STRICT ds_horarios_w, ds_horarios_2w;
			end if;
		else	
			ds_horarios_w := null;
		end if;
		
		ds_horarios_w	:= ds_horarios_w || ds_horarios_2w;

		qt_dosagem_w := Calcular_Vol_Total_Solucao(ie_tipo_dosagem_w,qt_tempo_aplicacao_w, coalesce(qt_solucao_total_w,0) - coalesce(qt_dose_ataque_w,0), qt_dosagem_w, nr_prescricao_p, nr_seq_solucao_w, 1);
		
		update	prescr_solucao
		set		qt_volume = qt_volume_w,
				qt_solucao_total = qt_solucao_total_w,
				nr_etapas = nr_etapas_w,
				ds_horarios = ds_horarios_w,
				qt_hora_fase = qt_hora_fase_w,
				qt_dosagem = qt_dosagem_w
		where	nr_prescricao = nr_prescricao_p
		and		nr_seq_solucao = nr_seq_solucao_w;
		end;
		CALL Ajustar_Prescr_Mat_Solucao(nr_prescricao_p, nr_seq_solucao_w);
	end if;

end if;
	
if	((qt_inconsistencia_w	= 0) or (ie_modificar_p 	= 'S')) then

	update	prescr_solucao
	set	dt_atualizacao	= dt_atualizacao
	where	nr_prescricao	= nr_prescricao_p;
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
end if;	
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_copia_solucao ( nr_prescricao_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, dt_prescricao_p timestamp, nr_seq_solucao_p bigint, ie_modificar_p text, nm_usuario_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text, ie_copia_agora_p text) FROM PUBLIC;

