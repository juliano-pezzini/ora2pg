-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nut_duplicar_receita (nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_seq_comp_w		bigint;
nr_seq_comp_origem_w	bigint;
ds_modo_preparo_w	varchar(32000);
qt_reg_preparo_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	nut_receita_comp
	where	nr_seq_receita = nr_sequencia_p
	order by 1;

C02 CURSOR FOR
	SELECT	ds_modo_preparo
	from	nut_modo_preparo
	where	nr_seq_receita = nr_sequencia_p;


BEGIN

select	nextval('nut_receita_seq')
into STRICT	nr_sequencia_w
;

insert into nut_receita(nr_sequencia,
			ds_receita,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			qt_refeicao,
			ie_situacao,
			qt_g_pessoa,
			ds_preparo,
			nr_seq_grupo,
			nr_seq_composicao,
			qt_rendimento)
		SELECT	nr_sequencia_w,
			ds_receita,
			cd_estabelecimento,
			clock_timestamp(),
			nm_usuario_p,
			qt_refeicao,
			ie_situacao,
			qt_g_pessoa,
			ds_preparo,
			nr_seq_grupo,
			nr_seq_composicao,
			qt_rendimento
		from	nut_receita
		where	nr_sequencia = nr_sequencia_p;
	commit;

select	count(*)
into STRICT	qt_reg_preparo_w
from	nut_modo_preparo
where	nr_seq_receita = nr_sequencia_p;

if (qt_reg_preparo_w > 0) then

	open C02;
	loop
	fetch C02 into
		ds_modo_preparo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		insert into nut_modo_preparo(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_receita,
					ds_modo_preparo)
				values (nextval('nut_modo_preparo_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_w,
					ds_modo_preparo_w);

		end;
	end loop;
	close C02;

end if;

open C01;
loop
fetch C01 into
	nr_seq_comp_origem_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	nextval('nut_receita_comp_seq')
	into STRICT	nr_seq_comp_w
	;

	insert into nut_receita_comp(nr_sequencia,
				nr_seq_receita,
				nr_seq_gen_alim,
				dt_atualizacao,
				nm_usuario,
				qt_componente,
				qt_fator_correcao,
				qt_fator_coccao,
				nr_seq_gen_alim_calc,
				qt_componente_calc,
				nr_seq_tipo_preparo)
			SELECT	nr_seq_comp_w,
				nr_sequencia_w,
				nr_seq_gen_alim,
				clock_timestamp(),
				nm_usuario_p,
				qt_componente,
				qt_fator_correcao,
				qt_fator_coccao,
				nr_seq_gen_alim_calc,
				qt_componente_calc,
				nr_seq_tipo_preparo
			from	nut_receita_comp
			where	nr_sequencia = nr_seq_comp_origem_w;

	insert into nut_receita_med_cas(nr_sequencia,
				nr_seq_receita,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_medida,
				qt_medida,
				nr_seq_comp_rec,
				qt_unidade,
				ds_observacao,
				cd_dieta)
			SELECT	nextval('nut_receita_med_cas_seq'),
				nr_sequencia_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_medida,
				qt_medida,
				nr_seq_comp_w,
				qt_unidade,
				ds_observacao,
				cd_dieta
			from	nut_receita_med_cas
			where	nr_seq_receita = nr_sequencia_p
			and (nr_seq_comp_rec = nr_seq_comp_origem_w or coalesce(nr_seq_comp_rec::text, '') = '');

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nut_duplicar_receita (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

