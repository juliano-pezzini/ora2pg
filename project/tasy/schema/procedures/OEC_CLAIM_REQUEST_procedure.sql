-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE oec_claim_request (nm_usuario_p text, cd_establishmento_p bigint, nr_sequencia_p bigint, error_string_p INOUT text, cd_transaction_p INOUT text) AS $body$
DECLARE

  nr_attendimento_w          bigint;
  cd_oec_type_cde_w          varchar(3);
  ie_sub_aut_ind_w           varchar(1);
  dt_accident_date_w         timestamp;
  ie_duplicate_w             varchar(1);
  ie_claim_type_w            varchar(2);
  qt_service_w               smallint;
  vl_rate_w                  double precision;
  nr_service_num             varchar(4);
  service_count              bigint;
  dt_admission_w             timestamp;
  ie_accident_ind_w          varchar(100);
  cd_acc_ref_id              varchar(20);
  cd_claim_type_cde_w        varchar(2);
  ie_emergency_adm_ind_w     varchar(200);
  cd_facility_id_w           varchar(8);
  cd_fund_brand_id_w         varchar(3);
  nr_length_of_stay_w        smallint;
  ie_pearequest_ind_w        varchar(1);
  -- This field need to be check with PAS or martini 
  cd_illness_item_w          bigint;
  cd_presnt_ill_code_w       smallint;
  nr_sequencia_w             bigint;
  ie_compensasion_id_w       varchar(1);
  dt_discharge_date_w        timestamp;
  cd_presnt_ill_itm_num_w    integer;
  cd_prnc_provider_num_w     varchar(800);
  ie_same_day_w              varchar(1);
  ds_send_contat_email_w     varchar(128);
  nm_send_contact_name_w     varchar(40);
  nr_sender_phone_w          bigint;
  nm_pat_ali_fmly_name_w     varchar(40);
  nm_pat_ali_first_nam_w     varchar(40);
  dt_dob_w                   timestamp;
  nm_pat_family_nam_w        varchar(40);
  nm_pat_first_nam_w         varchar(40);
  nm_pat_mid_nam_w           varchar(40);
  cd_pat_fund_mem_num_w      varchar(19);
  cd_pat_med_mem_num_w       varchar(19);
  cd_pat_fund_upi_w          smallint;
  cd_med_ref_num             smallint;
  ie_gender_w                varchar(1);
  nr_pat_medicare_card_num_w varchar(19);
  nr_pat_ref_num_w           smallint;
  cd_ser_provider_num_w      varchar(800);
  cd_pesso_fissica_w         varchar(10);
  nr_seq_persion_name_w      bigint;
  cd_fund_payee_id_w         varchar(12);
  nr_days_in_hosp_w          varchar(10);
  nr_oec_claim_seq_w         bigint;
  nr_oec_voucher_seq_w       bigint;
  nr_ie_origem_proced_w      smallint;
  cd_attribute_w             varchar(50);
  cd_field_name_w            varchar(40);
  cd_transaction_id          varchar(25);
  ie_service_type_w          varchar(1);
  cd_eclipse_w               varchar(100);
  nm_second_w                varchar(1);
  cd_mbs_code_w              varchar(5);
  cd_service_code_w          varchar(11);
  request_sts                varchar(500);
  error_string_w             varchar(2000);
  curr_cd_medico_resp_w      varchar(10);
  nr_voucher_w               varchar(2);
  nr_voucher_count_w         smallint;
  new_voucher_ind_w          smallint;
  DT_ENTRADA_PREVISTA_W      timestamp;

  c01 CURSOR FOR 
    SELECT a.vl_autorizado, 
           a.dt_atualizacao, 
           a.qt_autorizada, 
           a.cd_procedimento, 
           a.ie_origem_proced, 
          (SELECT max(Lpad(substr(k.NR_PROVIDER, 1,8),8,'0')) from MEDICAL_PROVIDER_NUMBER k where k.CD_MEDICO = a.cd_medico_resp) as cd_medico_resp
    FROM   autorizacao_convenio c, 
           procedimento_autorizado a 
    WHERE  a.nr_sequencia_autor = c.nr_sequencia 
           AND c.nr_sequencia = nr_sequencia_p 
    ORDER  BY a.cd_medico_resp;
  c03 CURSOR FOR
    SELECT nm_eclipse_field, 
           nm_atributo 
    FROM   eclipse_attribute 
    WHERE  ie_condition = 'M' 
           AND ie_oec = 'S';
BEGIN
    cd_transaction_id := Generaterandomnumber();

    ie_accident_ind_w := 'F';

    SELECT Max(nr_atendimento), 
           Max(cd_proc_principal_loc), 
           Max(ie_origem_proced),
           max(DT_ENTRADA_PREVISTA)
    INTO STRICT   nr_attendimento_w, cd_illness_item_w, nr_ie_origem_proced_w , DT_ENTRADA_PREVISTA_W
    FROM   autorizacao_convenio 
    WHERE  nr_sequencia = nr_sequencia_p;
    -------------  Encounter Number , origem , 

    --(Conditional check Either PresentingIllnesscode / PresentingIllnessITemNumber) 
    IF ( nr_ie_origem_proced_w = '20' ) THEN 
      cd_presnt_ill_code_w := NULL;

      cd_presnt_ill_itm_num_w := cd_illness_item_w;
    ELSE 
      cd_presnt_ill_code_w := cd_illness_item_w;

      cd_presnt_ill_itm_num_w := NULL;
    END IF;

    SELECT Max(a.cd_pessoa_fisica), 
           Max(a.cd_medico_atendimento), 
           Max(a.nr_seq_tipo_acidente), 
           Max(a.dt_entrada), 
           Max(a.ie_tipo_atendimento), 
           Max(a.dt_alta), 
    pkg_date_utils.Get_diffdate(Max(a.dt_alta), Max(a.dt_previsto_alta), 'DAY') 
    INTO STRICT   cd_pesso_fissica_w, cd_ser_provider_num_w, ie_accident_ind_w, 
           dt_accident_date_w 
    , 
    ie_emergency_adm_ind_w, dt_discharge_date_w, nr_length_of_stay_w 
    FROM   atendimento_paciente a 
    WHERE  nr_atendimento = nr_attendimento_w; ------------  pessoa_fisica 
    SELECT Max(cd_facility)   facility,
           Max(ie_claim_type) Claim 
    INTO STRICT   cd_facility_id_w, ie_claim_type_w 
    FROM   eclipse_parameters;

    SELECT Max(cd_externo) 
    INTO STRICT   cd_fund_brand_id_w 
    FROM   convenio c, 
           atend_categoria_convenio j, 
           atendimento_paciente a 
    WHERE  c.cd_convenio = j.cd_convenio 
           AND a.nr_atendimento = j.nr_atendimento 
           AND a.nr_atendimento = nr_attendimento_w; --------------  FundBrandId 
    SELECT Max(CASE WHEN g.qt_dia=0 THEN  'Y'  ELSE 'N' END )
    INTO STRICT   nr_days_in_hosp_w 
    FROM   gestao_vaga g 
    WHERE  g.nr_atendimento = nr_attendimento_w  LIMIT 1;

    SELECT Max(Lpad(Substr(k.nr_provider, 1, 8), 8, '0')) 
    INTO STRICT   cd_prnc_provider_num_w 
    FROM   atendimento_paciente a, 
           medical_provider_number k 
    WHERE  a.nr_atendimento = nr_attendimento_w 
           AND a.cd_medico_resp = k.cd_medico  LIMIT 1;

    SELECT Max(b.ds_email), 
           Max(b.ds_usuario), 
           Max(c.nr_telefone_celular) 
    INTO STRICT   ds_send_contat_email_w, nm_send_contact_name_w, nr_sender_phone_w 
    FROM   autorizacao_convenio a, 
           usuario b, 
           pessoa_fisica c 
    WHERE  a.nm_usuario_resp = b.nm_usuario 
           AND b.cd_pessoa_fisica = c.cd_pessoa_fisica 
           AND a.nr_sequencia = nr_sequencia_p  LIMIT 1;
    ------------  senderContactEmail,senderContact name,senderphone (pessoa fisica intermediate table between compl_pessoa_fisica)
    SELECT Max(nr_seq_person_name), 
           Max(dt_nascimento), 
           Max(ie_sexo) 
    INTO STRICT   nr_seq_persion_name_w, dt_dob_w, ie_gender_w 
    FROM   pessoa_fisica 
    WHERE  cd_pessoa_fisica = cd_pesso_fissica_w;
    ----------  sender,date of birth, gender 
    SELECT pkg_name_utils.Get_person_name(nr_seq_persion_name_w, 
           cd_establishmento_p 
           , 
                  'familyName'),------ patientFamilyName 
           pkg_name_utils.Get_person_name(nr_seq_persion_name_w, 
           cd_establishmento_p 
           , 
           'givenName'),-------  patientFirstName 
           pkg_name_utils.Get_person_name(nr_seq_persion_name_w, 
           cd_establishmento_p 
           , 
           'middleName'), 
           pkg_name_utils.Get_person_name(nr_seq_persion_name_w, 
           cd_establishmento_p 
           , 
           'familyName', 'social'), 
           pkg_name_utils.Get_person_name(nr_seq_persion_name_w, 
           cd_establishmento_p 
           , 
           'givenName', 'social') 
    INTO STRICT   nm_pat_family_nam_w, nm_pat_first_nam_w, nm_pat_mid_nam_w, 
           nm_pat_ali_fmly_name_w, nm_pat_ali_first_nam_w 
;

    SELECT CASE WHEN coalesce(nm_pat_first_nam_w::text, '') = '' THEN  NULL  ELSE Substr(nm_pat_first_nam_w, 0, 1) END  
    INTO STRICT   nm_second_w 
;

    SELECT Max(a.cd_usuario_convenio), 
           Max(a.cd_complemento) 
    INTO STRICT   cd_pat_fund_mem_num_w, cd_pat_fund_upi_w 
    FROM   atend_categoria_convenio a, 
           convenio b 
    WHERE  a.nr_atendimento = nr_attendimento_w 
           ----- patient fund membership number , patient medicare card number 
           AND a.cd_convenio = b.cd_convenio 
           AND b.ie_tipo_convenio = 2;

    SELECT Max(a.cd_usuario_convenio), 
           Max(a.cd_complemento) 
    INTO STRICT   cd_pat_med_mem_num_w, cd_med_ref_num 
    FROM   atend_categoria_convenio a, 
           convenio b 
    WHERE  a.nr_atendimento = nr_attendimento_w 
           AND a.cd_convenio = b.cd_convenio 
           AND b.ie_tipo_convenio = 12;
    ----- patient fund membership number , patient medicare card number 
    SELECT Max(a.cd_medico_atendimento), 
           Max(a.nr_seq_tipo_acidente), 
           Max(a.dt_entrada), 
           Max(a.dt_ocorrencia), 
           Max(a.ie_tipo_atendimento), 
           Max(a.dt_alta), 
    pkg_date_utils.Get_diffdate(Max(a.dt_alta), Max(a.dt_previsto_alta), 'DAY') 
    INTO STRICT   cd_ser_provider_num_w, ie_accident_ind_w, dt_admission_w, 
           dt_accident_date_w, 
    ie_emergency_adm_ind_w, dt_discharge_date_w, nr_length_of_stay_w 
    FROM   atendimento_paciente a 
    WHERE  a.nr_atendimento = nr_attendimento_w;
    ---- service provider number, AccidentInd, admissionDate, emergencyadmissionind,dischargeDate; 
    SELECT Max(cd_medico_convenio) 
    INTO STRICT   cd_fund_payee_id_w 
    FROM   medico_convenio a, 
           atend_categoria_convenio b
    WHERE  a.cd_convenio = b.cd_convenio -- fundPayeeeId 
           AND a.cd_pessoa_fisica = cd_pesso_fissica_w;

    IF ( coalesce(ie_accident_ind_w::text, '') = '' ) THEN 
      ie_accident_ind_w := 'F';
    END IF;

    cd_oec_type_cde_w := 'OEC';

    ie_sub_aut_ind_w := 'S';

    ie_compensasion_id_w := 'N';

    ie_service_type_w := 'O';

    ie_pearequest_ind_w := 'N'; -- 
    SELECT nextval('oec_claim_seq')
    INTO STRICT   nr_oec_claim_seq_w 
;

    -- Logic to validate fields 
    FOR r03 IN c03 LOOP 
        cd_attribute_w := r03.nm_atributo;

        cd_field_name_w := r03.nm_eclipse_field;

        IF ( cd_field_name_w = 'AccountReferenceId' ) THEN 
          IF ( coalesce(nr_sequencia_p::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100181) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'AccidentInd' ) THEN 
          IF ( coalesce(ie_accident_ind_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100182) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'OECTypeCde' ) THEN 
          IF ( coalesce(cd_oec_type_cde_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100183) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'SubmissionAuthorisedInd' ) THEN 
          IF ( coalesce(ie_sub_aut_ind_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100184) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'FacilityId' ) THEN 
          IF ( coalesce(cd_facility_id_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100185) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'ClaimTypeCde' ) THEN 
          IF ( coalesce(ie_claim_type_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || 'Claim Type Code cannot be null' 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'FundBrandId' ) THEN 
          IF ( coalesce(cd_fund_brand_id_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100186) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PEARequestInd' ) THEN 
          IF ( coalesce(ie_pearequest_ind_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100187) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PrincipalProviderNum' ) THEN 
          IF ( coalesce(cd_prnc_provider_num_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100188) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'SameDayInd' ) THEN 
          IF ( coalesce(nr_days_in_hosp_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100189) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'ServiceTypeCde' ) THEN 
          IF ( coalesce(ie_service_type_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100190) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'AdmissionDate' ) THEN 
          IF (coalesce(dt_admission_w::text, '') = '') THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100191) 
                              ||',';
          ELSIF ( ( clock_timestamp() - dt_admission_w ) > 7 ) THEN 
            error_string_w := error_string_w 
                              || 'Admission Date is older than 7 days' 
                              ||',';
          ELSIF ( dt_admission_w < dt_dob_w ) THEN 
            error_string_w := error_string_w 
                              || 'Admission Date is Before the date of service ' 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'CompensationClaimInd' ) THEN 
          IF ( coalesce(ie_compensasion_id_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100194) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PatientFundMembershipNum' ) THEN 
          IF ( coalesce(cd_pat_fund_mem_num_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100196) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PatientMedicareCardNum' ) THEN 
          IF ( coalesce(cd_pat_med_mem_num_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100197) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PatientReferenceNum' ) THEN 
          IF ( coalesce(cd_pat_fund_upi_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100195) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'ServicingProviderNum' ) THEN 
          IF ( coalesce(cd_ser_provider_num_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1100198) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PatientDateOfBirth' ) THEN 
          IF ( coalesce(dt_dob_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1101291) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PatientFamilyName' ) THEN 
          IF ( coalesce(nm_pat_family_nam_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1101292) 
                              ||',';
          END IF;
        ELSIF ( cd_field_name_w = 'PatientFirstName' ) THEN 
          IF ( coalesce(nm_pat_first_nam_w::text, '') = '' ) THEN 
            error_string_w := error_string_w 
                              || wheb_mensagem_pck.Get_texto(1101293) 
                              ||',';
          END IF;
        END IF;
    END LOOP;

    FOR r01 IN c01 LOOP 
        FOR r03 IN c03 LOOP 
            cd_attribute_w := r03.nm_atributo;

            cd_field_name_w := r03.nm_eclipse_field;

            IF ( cd_field_name_w = 'ChargeAmount' ) THEN 
              IF ( coalesce(r01.vl_autorizado::text, '') = '' ) THEN 
                error_string_w := error_string_w 
                                  || wheb_mensagem_pck.Get_texto(1100199) 
                                  ||',';
              END IF;
            ELSIF ( cd_field_name_w = 'DateOfService' ) THEN 
              IF ( coalesce(r01.dt_atualizacao::text, '') = '' ) THEN 
                error_string_w := error_string_w 
                                  || wheb_mensagem_pck.Get_texto(1100200) 
                                  ||',';
              END IF;
            END IF;
        END LOOP;
    END LOOP;

    -- Conditional checks 
    FOR r01 IN c01 LOOP 
        -- AccidentDate 
        IF ( ie_accident_ind_w = 'T' 
            AND coalesce(dt_accident_date_w::text, '') = '' ) THEN 
          error_string_w := error_string_w 
                            || 'accident date cannot be null';
        ELSIF ( ie_accident_ind_w = 'T' 
               AND To_char(ie_accident_ind_w) > clock_timestamp() )THEN 
          error_string_w := error_string_w 
                            || 'Invalid date';
        ELSIF ( ie_accident_ind_w != 'T' ) THEN 
          dt_accident_date_w := NULL;
        ELSE 
          IF ( dt_accident_date_w > r01.dt_atualizacao ) THEN 
            error_string_w := error_string_w 
                              || 'invalid date';
          END IF;
        END IF;
    END LOOP;

    -- LengthOFStay (checking if it sameday patient or not..) 
    IF ( nr_days_in_hosp_w = 'Y' ) THEN 
	nr_length_of_stay_w := NULL;
    END IF;

    FOR r01 IN c01 LOOP 
        cd_eclipse_w := 
        Get_key_values(r01.ie_origem_proced, 'ie_origem_proced', 'OEC');

        IF ( (r01.cd_procedimento IS NOT NULL AND r01.cd_procedimento::text <> '') 
            AND cd_eclipse_w <> 'C' ) THEN 
          error_string_w := error_string_w 
                            || 'Invalid MBS CODE';
        END IF;

        IF ( coalesce(r01.cd_procedimento::text, '') = '' 
            AND cd_eclipse_w IN ( 'P', 'M', 'O' ) ) THEN 
          error_string_w := error_string_w 
                            || 'Invalid Service code';
        END IF;

        IF( ( (r01.qt_autorizada IS NOT NULL AND r01.qt_autorizada::text <> '') 
              AND cd_eclipse_w = 'C' ) 
             OR ( coalesce(r01.qt_autorizada::text, '') = '' 
                  AND cd_eclipse_w IN ( 'M', 'P' ) ) ) THEN 
          error_string_w := error_string_w 
                            || 'invalid service quantiity';
        END IF;

        IF ( (r01.vl_autorizado IS NOT NULL AND r01.vl_autorizado::text <> '') 
            AND ( cd_eclipse_w IN ( 'P', 'M' ) ) ) THEN 
          error_string_w := error_string_w 
                            || 'invalid service rate';
        END IF;
    END LOOP;

    error_string_p := error_string_w;

    IF ( coalesce(error_string_p::text, '') = '' ) THEN 
      INSERT INTO oec_claim(nr_sequencia, 
                   nr_sequencia_autor, 
                   cd_seq_transaction, 
                   ie_oec_type, 
                   ie_submission, 
                   ie_accident, 
                   nr_account, 
                   ie_claim_type, 
                   ie_emergency_adm, 
                   cd_facility, 
                   cd_fund_brand, 
                   qt_length_stay, 
                   ie_pea_request, 
                   cd_illness, 
                   cd_illness_item, 
                   cd_principal_provider, 
                   ie_same_day, 
                   ds_email, 
                   nm_contact, 
                   nr_phone, 
                   ie_service_type, 
                   ie_status_tasy, 
                   dt_atualizacao, 
                   nm_usuario) 
      VALUES ( nr_oec_claim_seq_w, 
                   nr_sequencia_p, 
                   cd_transaction_id,-- transaction 
                   cd_oec_type_cde_w, 
                   ie_sub_aut_ind_w, 
                   ie_accident_ind_w, 
                   nr_sequencia_p, 
                   ie_claim_type_w,-- should revisit KEY 
                   ie_emergency_adm_ind_w, 
                   cd_facility_id_w, 
                   cd_fund_brand_id_w, 
                   1,-- Estimated length of Stay 
                   ie_pearequest_ind_w,-- Hard coded to N, 
                   cd_presnt_ill_code_w, 
                   cd_presnt_ill_itm_num_w, 
                   cd_prnc_provider_num_w, 
                   nr_days_in_hosp_w,--nr_days_in_hosp_w 
                   ds_send_contat_email_w, 
                   nm_send_contact_name_w, 
                   nr_sender_phone_w, 
                   ie_service_type_w, 
                   'Pending', 
                   clock_timestamp(), 
                   nm_usuario_p );

		      service_count := 0;

		      nr_voucher_count_w := 0;
			  cd_transaction_p:= cd_transaction_id;

		      curr_cd_medico_resp_w := cd_prnc_provider_num_w;
		      
	FOR r01 IN c01 LOOP 
		IF (r01.cd_medico_resp IS NOT NULL AND r01.cd_medico_resp::text <> '' AND  r01.cd_medico_resp <> curr_cd_medico_resp_w ) THEN 
			curr_cd_medico_resp_w :=r01.cd_medico_resp;
			new_voucher_ind_w := 1;

		ELSIF ( coalesce(r01.cd_medico_resp::text, '') = '' ) THEN 
			if (curr_cd_medico_resp_w <> cd_prnc_provider_num_w) then
				new_voucher_ind_w := 1;
				curr_cd_medico_resp_w := cd_prnc_provider_num_w;
			end if;

		END IF;

          IF( ( MOD(service_count, 14) = 0 ) 
               OR new_voucher_ind_w = 1 ) THEN 
		service_count := 0;
		
			nr_voucher_count_w := nr_voucher_count_w + 1;

			new_voucher_ind_w := 0;

			SELECT nextval('oec_voucher_seq'), 
			Lpad(nr_voucher_count_w, 2, '0') 
			INTO STRICT   nr_oec_voucher_seq_w, nr_voucher_w 
			;

		    -- adding a voucher  
			INSERT INTO oec_voucher(nr_sequencia, 
				 dt_admission, 
				 ie_compensation, 
				 dt_discharge, 
				 cd_fund_payment, 
				 nm_alias_family, 
				 nm_alias_first, 
				 dt_birth, 
				 nm_family, 
				 nm_first, 
				 cd_fund_card, 
				 cd_upi, 
				 ie_gender, 
				 cd_medicare_card, 
				 nr_patient_ref, 
				 nm_second, 
				 cd_provider, 
				 nr_seq_claim, 
				 dt_atualizacao, 
				 nm_usuario, 
				 nr_voucher) 
			VALUES ( nr_oec_voucher_seq_w, 
				 dt_admission_w, 
				 'N', 
				 dt_discharge_date_w, 
				 cd_fund_payee_id_w, 
				 nm_pat_ali_fmly_name_w, 
				 -- Alias family name will be null 
				 nm_pat_ali_first_nam_w,-- Alias first name will be null 
				 dt_dob_w, 
				 nm_pat_family_nam_w, 
				 nm_pat_first_nam_w, 
				 cd_pat_fund_mem_num_w, 
				 cd_pat_fund_upi_w, 
				 ie_gender_w, 
				 cd_pat_med_mem_num_w, 
				 cd_med_ref_num, 
				 nm_second_w, 
				 curr_cd_medico_resp_w, 
				 nr_oec_claim_seq_w, 
				 clock_timestamp(), 
				 nm_usuario_p, 
				 nr_voucher_w );
          END IF;

          -- adding a service 
          service_count := service_count + 1;

          SELECT cd_procedimento_loc, 
                 Lpad(service_count, 4, '0') 
          INTO STRICT   cd_mbs_code_w, nr_service_num 
          FROM   procedimento 
          WHERE  cd_procedimento = r01.cd_procedimento 
                 AND ie_origem_proced = r01.ie_origem_proced;

          ie_duplicate_w := 'N';
          
          if ( coalesce(DT_ENTRADA_PREVISTA_W::text, '') = '') then 
            DT_ENTRADA_PREVISTA_W :=r01.dt_atualizacao;
          end if;

          cd_eclipse_w :=
          Get_key_values('IE_ORIGEM_PROCED', r01.ie_origem_proced, 'OEC');

          qt_service_w := r01.qt_autorizada;

          vl_rate_w := r01.vl_autorizado;

          IF ( cd_eclipse_w = 'C' ) THEN 
            qt_service_w := NULL;

            vl_rate_w := NULL;
          ELSIF ( cd_eclipse_w = 'P' ) THEN 
            ie_duplicate_w := NULL;
          END IF;
 

          INSERT INTO oec_item(nr_sequencia, 
                       ie_aftercare, 
                       vl_charge, 
                       dt_service, 
                       ie_duplicate, 
                       qt_service, 
                       cd_item, 
                       qt_patients, 
                       ie_restriction, 
                       cd_service, 
                       ie_service_type, 
                       tx_service, 
                       ie_time_dependent, 
                       nr_seq_voucher, 
                       dt_atualizacao, 
                       nm_usuario) 
          VALUES ( nextval('oec_item_seq'), 
                       'N', 
                       r01.vl_autorizado, 
                       DT_ENTRADA_PREVISTA_W,--r01.dt_atualizacao, 
                       ie_duplicate_w, 
                       qt_service_w, 
                       cd_mbs_code_w, 
                       NULL, 
                       'N', 
                       nr_service_num,--cd_service_code_w  , 
                       cd_eclipse_w, 
                       vl_rate_w, 
                       'false', 
                       nr_oec_voucher_seq_w, 
                       clock_timestamp(), 
                       nm_usuario_p );
      END LOOP;
		     
      COMMIT;

    END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE oec_claim_request (nm_usuario_p text, cd_establishmento_p bigint, nr_sequencia_p bigint, error_string_p INOUT text, cd_transaction_p INOUT text) FROM PUBLIC;

