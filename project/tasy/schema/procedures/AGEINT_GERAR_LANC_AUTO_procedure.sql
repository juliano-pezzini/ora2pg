-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_lanc_auto ( nr_Seq_Ageint_p bigint, NR_SEQ_EVENTO_P bigint, nr_seq_item_p bigint, ie_pacote_p text, NM_USUARIO_P text) AS $body$
DECLARE


/*
Se evento for diferente de Evolução Médica (10)
nr_sequencia_p - sequência do ProPaci;
senão
nr_sequencia_p - sequência da Evolução;
*/
qt_pontos_w			preco_amb.qt_pontuacao%type;
ds_erro_w      varchar(255);
cd_estabelecimento_w    smallint;
cd_convenio_w      integer;
cd_categoria_w    varchar(10);
ie_Medico_atendimento_w  varchar(1);
ie_Local_Estoque_w    varchar(1);
cd_cgc_w      varchar(14);
cd_procedimento_w            bigint    := 0;
ie_origem_proced_w    bigint    := 0;
cd_material_w          integer    := 0;
nr_sequencia_w           bigint    := 0;
nr_seq_regra_w           bigint    := 0;
nr_seq_exame_propaci_w       bigint    := 0;
cd_unid_medida_w    varchar(30);
cd_medico_executor_w    varchar(10);
cd_setor_regra_w    integer  := 0;
qt_lancamento_w    double precision  := 0;
qt_registro_w      bigint  := 0;
qt_passagem_setor_w    bigint  := 0;

cd_proc_propaci_w    bigint;
dt_proc_propaci_w    timestamp;
ie_origem_propaci_w    bigint;
nr_seq_exame_w    bigint;
cd_medico_propaci_w    varchar(10);
cd_area_proc_w    bigint;
cd_especial_proc_w    bigint;
cd_grupo_proc_w    bigint;
tx_proc_propaci_w    double precision  := 100;
dt_execucao_w      timestamp;
qt_porte_anestesico_w  smallint;
cd_edicao_amb_w    integer;
qt_proc_alta_w    integer;
qt_mat_alta_w      integer;
qt_procedimento_w    double precision := 1;
ie_tipo_convenio_w    smallint;
qt_reg_w      bigint;
ie_funcao_medico_w    smallint;
ie_origem_proc_w    bigint;
qt_material_w      integer;
tx_procedimento_w    double precision;
nr_seq_proc_interno_w    bigint;
ie_dispara_kit_w    varchar(01);
cd_kit_material_w    bigint;
cd_medico_w      varchar(10);
ie_tipo_atendimento_w    smallint:= 0;
nr_seq_item_w      bigint;
nr_seq_proc_int_w    bigint;
dt_atual_trunc_w    timestamp  := trunc(clock_timestamp());

ie_lado_w      varchar(01)  := 'X';
ie_adic_orcamento_w    varchar(1);
cd_plano_w    varchar(10);
ds_aux_w    varchar(10);
ie_regra_w    integer;
nr_seq_regra_proc_w  bigint;
ie_glosa_w    varchar(1);
vl_aux_w    double precision;
ie_sexo_w    varchar(1);
cd_usuario_convenio_w  varchar(30);
dt_nascimento_w    timestamp;
cd_pessoa_fisica_w  varchar(10);
qt_idade_w    smallint;
VL_PROCEDIMENTO_w  double precision  := 0;
vl_custo_operacional_w  double precision;
vl_anestesista_w  double precision;
vl_medico_w    double precision;
vl_auxiliares_w    double precision;
vl_materiais_w    double precision;
cd_convenio_ww    integer;
cd_categoria_ww    varchar(10);
cd_plano_ww    varchar(10);
vl_material_w    double precision  := 0;

cd_convenio_part_w  integer;
cd_categoria_part_w  varchar(10);
vl_procedimento_part_w  double precision;
ie_vl_particular_w  varchar(1);
vl_material_part_w  double precision;
nr_seq_bras_preco_w  bigint;
nr_seq_mat_bras_w  bigint;
nr_seq_conv_bras_w  bigint;
nr_seq_conv_simpro_w  bigint;
nr_seq_mat_simpro_w  bigint;
nr_seq_simpro_preco_w  bigint;
nr_seq_ajuste_proc_w  bigint;
nr_seq_ajuste_mat_w  bigint;
ie_situacao_w  varchar(1);

c00 CURSOR FOR
  SELECT  distinct
    b.cd_grupo_proc,
    b.cd_especialidade,
    b.cd_area_procedimento,
    a.cd_procedimento,
    a.ie_origem_proced,
    --a.nr_seq_exame,
    coalesce(a.nr_seq_proc_interno, 0),
    a.nr_sequencia,
    coalesce(a.ie_lado,'X')
  from  estrutura_procedimento_v b,
    agenda_integrada_item a
  where  a.nr_seq_agenda_int    = nr_seq_ageint_p
  and  a.cd_procedimento    = b.cd_procedimento
  and  a.ie_origem_proced    = b.ie_origem_proced
  and  a.nr_sequencia      = coalesce(nr_seq_item_p, a.nr_sequencia)
  and  ie_pacote_p      = 'N'
  
union

  SELECT  distinct
    b.cd_grupo_proc,
    b.cd_especialidade,
    b.cd_area_procedimento,
    a.cd_procedimento,
    a.ie_origem_proced, 
    --a.nr_seq_exame,
    coalesce(a.nr_seq_proc_interno, 0),
    a.nr_sequencia,
    'X' 
    --nvl(a.ie_lado,'X')
  from  estrutura_procedimento_v b,
    ageint_proc_pacote a,
    agenda_integrada_item c
  where  c.nr_seq_agenda_int    = nr_seq_ageint_p
  and  a.nr_Sequencia      = c.nr_seq_proc_pacote
  and  a.cd_procedimento    = b.cd_procedimento
  and  a.ie_origem_proced    = b.ie_origem_proced
  and  a.nr_sequencia      = coalesce(nr_seq_item_p, a.nr_sequencia)
  and  ie_pacote_p      = 'S';

C01 CURSOR FOR
SELECT a.nr_sequencia,
  a.cd_setor_atendimento
from   regra_Lanc_Automatico a
where  a.cd_estabelecimento        = cd_estabelecimento_w
and  coalesce(a.cd_convenio, cd_convenio_w)    = cd_convenio_w
and  coalesce(a.ie_tipo_convenio, ie_tipo_convenio_w)  = ie_tipo_convenio_w
and (a.nr_seq_evento        = nr_seq_evento_p)
and (coalesce(a.cd_procedimento,cd_proc_propaci_w)  = cd_proc_propaci_w or coalesce(cd_proc_propaci_w::text, '') = '')
and (coalesce(a.ie_origem_proced,ie_origem_proc_w)  = ie_origem_proc_w or coalesce(ie_origem_proc_w::text, '') = '')
and (coalesce(a.cd_area_procedimento,cd_area_proc_w)  = cd_area_proc_w   or coalesce(cd_area_proc_w::text, '') = '')
and (coalesce(a.cd_especialidade_proc,cd_especial_proc_w)= cd_especial_proc_w or coalesce(cd_especial_proc_w::text, '') = '')
and (coalesce(a.cd_grupo_proc,cd_grupo_proc_w)    = cd_grupo_proc_w or coalesce(cd_grupo_proc_w::text, '') = '')
and  ((coalesce(a.cd_edicao_amb,cd_edicao_amb_w)    = cd_edicao_amb_w) or (coalesce(cd_edicao_amb_w::text, '') = ''))
and  coalesce(a.nr_seq_exame,coalesce(nr_seq_exame_w,0))  = coalesce(nr_seq_exame_w,0)
and  coalesce(a.cd_categoria, cd_categoria_w)    = cd_categoria_w
and (coalesce(a.nr_seq_proc_interno, nr_seq_proc_interno_w)   = nr_seq_proc_interno_w)
--and   (nvl(a.cd_medico, nvl(cd_medico_w,'0')) =  nvl(cd_medico_w,'0'))
and (coalesce(a.ie_tipo_atendimento, coalesce(ie_tipo_atendimento_w,0)) =  coalesce(ie_tipo_atendimento_w,0))
and  ((coalesce(ie_lado_w, 'X')  = 'X') or (coalesce(ie_lado, ie_lado_w) = ie_lado_w))
and  qt_reg_w          = 0
and  ie_situacao          = 'A'
and  dt_atual_trunc_w between coalesce(dt_inicio_vigencia,dt_atual_trunc_w) and fim_dia(coalesce(dt_final_vigencia,dt_atual_trunc_w))
order by
  coalesce(a.cd_medico,0),
  coalesce(a.cd_setor_atendimento,0),
  coalesce(a.ie_tipo_atendimento,0),
  coalesce(a.cd_convenio,0),
  coalesce(a.ie_tipo_convenio,0),
  coalesce(a.cd_edicao_amb,0),
  coalesce(a.nr_Seq_proc_interno,0),
  coalesce(a.cd_procedimento,0),
  coalesce(a.cd_grupo_proc,0),
  coalesce(a.cd_especialidade_proc,0),
  coalesce(a.cd_area_procedimento,0),
  coalesce(a.nr_seq_exame,0),
  coalesce(a.ie_lado,' ');

C02 CURSOR FOR
  SELECT   a.cd_procedimento,
    a.ie_origem_proced,
    a.nr_seq_exame,
    a.cd_material,
    substr(obter_dados_material_estab(b.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
    CASE WHEN a.ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
    coalesce(ie_medico_atendimento,'N'),
    coalesce(ie_local_estoque,'N'),
    coalesce(a.ie_funcao_medico,0),
    coalesce(a.tx_procedimento,100),
    0,
    coalesce(a.ie_adic_orcamento,'N')
  from   material b, regra_Lanc_Aut_pac a
  where  a.nr_seq_regra    = nr_seq_regra_w
  and  nr_seq_regra_w   <> 0
  and  b.ie_situacao   = 'A'
  and  (a.cd_material IS NOT NULL AND a.cd_material::text <> '')
  and  a.cd_material   = b.cd_material
  and  qt_reg_w    = 0
  and  coalesce(a.ie_adic_orcamento,'N')  = 'S'

union all

  SELECT  cd_procedimento,
    ie_origem_proced,
    nr_seq_exame,
    cd_material,
    'XX',
    CASE WHEN ie_quantidade='I' THEN  coalesce(qt_lancamento,1)  ELSE coalesce(qt_lancamento,1) * qt_procedimento_w END ,
    coalesce(ie_medico_atendimento,'N'),
    coalesce(ie_local_estoque,'N'),
    coalesce(ie_funcao_medico,0),
    coalesce(tx_procedimento,100),
    nr_seq_proc_interno,
    coalesce(ie_adic_orcamento,'N')
  from   regra_Lanc_Aut_pac
  where  nr_seq_regra    = nr_seq_regra_w
  and  nr_seq_regra_w <> 0
  and  ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '' AND ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''))
  and  qt_reg_w    = 0
  and  coalesce(ie_adic_orcamento,'N')  = 'S';


BEGIN

nr_seq_regra_w      := 0;
ie_lado_w      := 'X';

begin
select   a.cd_estabelecimento,
  b.cd_cgc,
  a.cd_convenio,
  c.ie_tipo_convenio,
  a.cd_categoria,
  a.cd_plano,
  a.ie_tipo_atendimento,
  a.cd_usuario_convenio,
  a.cd_pessoa_fisica
  --,  a.cd_medico
into STRICT  cd_estabelecimento_w,
  cd_cgc_w,
  cd_convenio_w,
  ie_tipo_convenio_w,
  cd_categoria_w,
  cd_plano_w,
  ie_tipo_atendimento_w,
  cd_usuario_convenio_w,
  cd_pessoa_fisica_w
  --,  cd_medico_w
from   estabelecimento b,
  convenio c,
  agenda_integrada a
where  a.cd_estabelecimento  = b.cd_estabelecimento
and  c.cd_convenio    = a.cd_convenio
and  a.nr_sequencia    = nr_seq_ageint_p;
exception
  when others then
    cd_estabelecimento_w := 9999;
end;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
  select  max(ie_Sexo),
    max(dt_nascimento)
  into STRICT  ie_Sexo_w,
    dt_nascimento_w
  from  pessoa_fisica
  where  cd_pessoa_fisica  = cd_pessoa_fisica_w;
end if;

qt_idade_w  := obter_idade(dt_nascimento_w, clock_timestamp(), 'A');

/*  Entrada do paciente no setor */

qt_reg_w    := 0;

dt_execucao_w  := clock_timestamp();


ie_vl_particular_w := Obter_Param_Usuario(869, 331, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_vl_particular_w);

/*select  nvl(max(Obter_Valor_Param_Usuario(106, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'N')
into  ie_dispara_kit_w
from  dual;*/
begin
select  obter_edicao(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, dt_execucao_w, null)
into STRICT  cd_edicao_amb_w
;
exception
  when others then
    select  max(cd_edicao_amb)
    into STRICT  cd_edicao_amb_w
    from  convenio_amb
    where  cd_estabelecimento  = cd_estabelecimento_w
      and  cd_convenio    = cd_convenio_w
      and  cd_categoria    = cd_categoria_w
      and (coalesce(ie_situacao,'A')  = 'A')
      and  dt_inicio_vigencia  =
      (SELECT  max(dt_inicio_vigencia)
      from  convenio_amb a
      where  a.cd_estabelecimento  = cd_estabelecimento_w
      and  a.cd_convenio         = cd_convenio_w
      and  a.cd_categoria        = cd_categoria_w
      and (coalesce(a.ie_situacao,'A')= 'A')
      and  a.dt_inicio_vigencia <=  dt_execucao_w);
end;

open  c00;
  loop
  fetch  c00 into
    cd_grupo_proc_w,
    cd_especial_proc_w,
    cd_area_proc_w,
    cd_proc_propaci_w,
    ie_origem_proc_w,
    --nr_seq_exame_w,
    nr_seq_proc_interno_w,
    nr_seq_item_w,
    ie_lado_w;
  EXIT WHEN NOT FOUND; /* apply on c00 */
  BEGIN

  OPEN C01;
  LOOP
  FETCH C01 into
    nr_sequencia_w,
    cd_setor_regra_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
    BEGIN

    nr_seq_regra_w  := nr_sequencia_w;

    END;
  END LOOP;
  CLOSE C01;

  end;
end loop;
close c00;

RAISE NOTICE '%', nr_seq_regra_w;

OPEN C02;
LOOP
FETCH C02 into
    cd_procedimento_w,
    ie_origem_proced_w,
    nr_seq_exame_w,
    cd_material_w,
    cd_unid_medida_w,
    qt_lancamento_w,
    ie_Medico_atendimento_w,
    ie_Local_Estoque_w,
    ie_funcao_medico_w,
    tx_procedimento_w,
    nr_seq_proc_int_w,
    ie_adic_orcamento_w;
  EXIT WHEN NOT FOUND; /* apply on c02 */
  BEGIN

  /* Inicializa medico quando ie_medico_atendimento = 'S' */



  /* Primeiro = medico executor, Segundo = medico do atendimento */

  cd_medico_executor_w    := '';

  /* Verifica se procedimento de alta ja foi executado    Bola 08072002 */

  qt_proc_alta_w  := 0;
  /*if  (nr_seq_evento_p = 36) then
    begin
    select   count(*)
    into  qt_proc_alta_w
    from  procedimento_paciente
    where  nr_atendimento  = nr_atendimento_p
    and  cd_procedimento  = cd_procedimento_w;
    exception
      when others then
      qt_proc_alta_w  := 0;
    end;
  end if;*/

  
  /*tratar para ir para o final caso o proc interno da ação da regra esteja inativo*/

  if (nr_seq_proc_int_w IS NOT NULL AND nr_seq_proc_int_w::text <> '') then
			select	coalesce(max(ie_situacao),'A')
			into STRICT	ie_situacao_w
			from	proc_interno
			where	nr_sequencia = nr_seq_proc_int_w;

			if (ie_situacao_w = 'I') then
				goto continue_loop;
			end if;
    end if;

  if (nr_seq_proc_int_w IS NOT NULL AND nr_seq_proc_int_w::text <> '') then
    SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_int_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
  end if;

     /*Após obter o código do procedimento através do proc interno ou exame de laboratório testar novamente para ver se o código está ativo.*/

    if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
      select 	coalesce(max(ie_situacao),'A')
      into STRICT	ie_situacao_w
      from	procedimento
      where	cd_procedimento	 = cd_procedimento_w
      and	ie_origem_proced = ie_origem_proced_w;
		
      if (ie_situacao_w = 'I') then
        goto continue_loop;
      end if;
    end if;

  if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (qt_proc_alta_w  = 0)     then
    begin

    SELECT * FROM Consiste_Plano_mat_proc(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, coalesce(ie_tipo_atendimento_w,0), 0, 0, null, nr_seq_proc_int_w, ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_proc_w) INTO STRICT ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_proc_w;
    SELECT * FROM obter_regra_Ajuste_proc(
            cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, coalesce(ie_tipo_atendimento_w,0), null, null, null, qt_idade_w, NULL, nr_seq_proc_int_w, cd_usuario_convenio_w, cd_plano_w, null, null, ie_sexo_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, ie_glosa_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, null, null, ds_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, null, null, null, null, null, null, null, null, vl_aux_w, null, null, null, null, null, null, null, null, null, null) INTO STRICT vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, ie_glosa_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, ds_aux_w, vl_aux_w, vl_aux_w;

    if  ((coalesce(ie_Regra_w,0) in (1,2,5)) or (coalesce(ie_glosa_w,'') in ('T','E','R','B','H','Z',''))) then
      select  max(cd_convenio_partic),
        max(cd_categoria_partic)
      into STRICT  cd_convenio_ww,
        cd_categoria_ww
      from  parametro_faturamento
      where  cd_estabelecimento  = cd_estabelecimento_w;

      if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
        select  max(cd_plano)
        into STRICT  cd_plano_ww
        from  convenio_plano
        where  cd_convenio  = cd_convenio_w
        and  ie_situacao  = 'A';
      end if;

      SELECT * FROM Define_Preco_Procedimento(
        CD_ESTABELECIMENTO_w, cd_convenio_ww, cd_categoria_ww, clock_timestamp(), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_atendimento_w,0), 0, null, --medico 
        0, 0, 0, nr_seq_proc_int_w, null, --usuario convenio
        cd_plano_ww, 0, 0, null, VL_PROCEDIMENTO_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;
    end if;

    if (ie_vl_particular_w = 'S') then
      SELECT * FROM Define_Preco_Procedimento(
        CD_ESTABELECIMENTO_w, cd_convenio_part_w, cd_categoria_part_w, clock_timestamp(), CD_PROCEDIMENTO_w, 0, coalesce(ie_tipo_atendimento_w,0), 0, null, --medico 
        0, 0, 0, nr_seq_proc_int_w, null, --usuario convenio
        null, 0, 0, null, VL_PROCEDIMENTO_part_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w, 0, null, 0, 'N', null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null) INTO STRICT VL_PROCEDIMENTO_part_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, vl_aux_w, qt_pontos_w, CD_EDICAO_AMB_w, ds_aux_w, nr_seq_ajuste_proc_w;
    end if;

    select  nextval('orcamento_paciente_proc_seq')
    into STRICT  nr_sequencia_w
;

    insert into ageint_itens_adicionais(nr_sequencia,
      dt_Atualizacao,
      nm_usuario,
      dt_atualizacao_nrec,
      nm_usuario_nrec,
      nr_seq_proc_interno,
      cd_procedimento,
      ie_origem_proced,
      nr_seq_ageint_item,
      vl_item,
      nr_seq_ageint_pacote,
      ie_regra,
      ie_glosa,
      vl_item_particular)
    values (nextval('ageint_itens_adicionais_seq'),
      clock_timestamp(),
      nm_usuario_p,
      clock_timestamp(),
      nm_usuario_p,
      nr_seq_proc_int_w,
      cd_procedimento_w,
      ie_origem_proced_w,
      CASE WHEN ie_pacote_p='N' THEN  nr_seq_item_p  ELSE null END ,
      VL_PROCEDIMENTO_w,
      CASE WHEN ie_pacote_p='S' THEN  nr_seq_item_p  ELSE null END ,
      ie_regra_w,
      ie_glosa_w,
      VL_PROCEDIMENTO_part_w);
    /*insert into ORCAMENTO_PACIENTE_PROC (
      NR_SEQUENCIA_ORCAMENTO           ,
      CD_PROCEDIMENTO                  ,
      IE_ORIGEM_PROCED                 ,
      QT_PROCEDIMENTO                  ,
      DT_ATUALIZACAO                   ,
      NM_USUARIO                       ,
      VL_PROCEDIMENTO                  ,
      VL_MEDICO                        ,
      VL_ANESTESISTA                   ,
      VL_FILME                         ,
      VL_AUXILIARES                    ,
      VL_CUSTO_OPERACIONAL             ,
      VL_DESCONTO                      ,
      CD_MEDICO                        ,
      IE_PROCEDIMENTO_PRINCIPAL        ,
      QT_DIA_INTERNACAO           ,     
      IE_VALOR_INFORMADO               ,
      NR_SEQ_EXAME                     ,
      NR_SEQUENCIA             ,
      nr_seq_regra_lanc                ,
      nr_seq_proc_princ    ,
      nr_seq_proc_interno    ,
      ie_adicional)
    values (
      nr_seq_orcamento_p  ,
      cd_procedimento_w       ,       
      ie_origem_proced_w,       
      qt_lancamento_w,       
      sysdate                 ,       
      nm_usuario_p            ,       
      0, 0, 0, 0, 0, 0, 0,
      cd_medico_executor_w    ,       
      'N',
      null,
      'N',
      nr_seq_exame_w,
      nr_sequencia_w,
      nr_seq_regra_w,
      nvl(nr_seq_item_p, nr_seq_item_w),
      nr_seq_proc_int_w,
      nvl(ie_adic_orcamento_w,'N'));*/
    end;
  else
    begin
    /* Verifica se procedimento de alta ja foi executado    Bola 08072002 */

    qt_mat_alta_w  := 0;

    if (qt_mat_alta_w  = 0)     then
      begin

      SELECT * FROM consiste_plano_mat_proc(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_material_w, null, null, null, coalesce(ie_tipo_atendimento_w,0), 0, 0, null, null, ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_proc_w) INTO STRICT ds_aux_w, ds_aux_w, ie_regra_w, nr_seq_regra_proc_w;

      SELECT * FROM obter_regra_Ajuste_mat(
		cd_estabelecimento_w, 		--cd_estabelecimento_p
		cd_convenio_w,                   --cd_convenio_p
		cd_categoria_w,                  --cd_categoria_p
		cd_material_w,                   --cd_material_p
		clock_timestamp(),                         --dt_vigencia_p
		null,                            --cd_tipo_acomodacao_p
		coalesce(ie_tipo_atendimento_w,0),    --ie_tipo_atendimento_p
		null,                            --cd_setor_atendimento_p
		qt_idade_w,                      --qt_idade_p
		NULL,                            --nr_sequencia_p
		cd_plano_w,                      --cd_plano_p
		null,                            --cd_proc_referencia_p
		null,                            --ie_origem_proced_p
		null,                            --nr_seq_proc_interno_p
		clock_timestamp(),                         --dt_entrada_p
		vl_aux_w,                        --OUT tx_ajuste_p
		vl_aux_w,                        --OUT vl_negociado_p
		ds_aux_w,                        --OUT ie_preco_informado_p
		ie_glosa_w,                      --OUT ie_glosa_p
		vl_aux_w,                        --OUT tx_brasindice_pfb_p
		vl_aux_w,                        --OUT tx_brasindice_pmc_p
		vl_aux_w,                        --OUT tx_pmc_neg_p
		vl_aux_w,                        --OUT tx_pmc_pos_p
		vl_aux_w,                        --OUT tx_afaturar_p
		vl_aux_w,                        --OUT tx_simpro_pfb_p
		vl_aux_w,                        --OUT tx_simpro_pmc_p
		ds_aux_w,                        --OUT ie_origem_preco_p
		ds_aux_w,                        --OUT ie_precedencia_p
		vl_aux_w,                        --OUT pr_glosa_p
		vl_aux_w, 			--OUT vl_glosa_p
		vl_aux_w,                        --OUT cd_tabela_preco_p
		vl_aux_w,                        --OUT cd_motivo_exc_conta_p
		vl_aux_w,                        --OUT nr_seq_regra_p
		ds_aux_w,                        --OUT ie_autor_particular_p
		vl_aux_w,                        --OUT cd_convenio_glosa_p
		ds_aux_w,                        --OUT cd_categoria_glosa_p
		null,                            --ie_atend_retorno_p
		vl_aux_w,                        --OUT tx_pfb_neg_p 
		vl_aux_w,                        --OUT tx_pfb_pos_p
		ds_aux_w,                        --OUT ie_ignora_preco_venda_p
		vl_aux_w,                        --OUT tx_simpro_pos_pfb_p
		vl_aux_w,                        --OUT tx_simpro_neg_pfb_p
		vl_aux_w,                        --OUT tx_simpro_pos_pmc_p
		vl_aux_w,                        --OUT tx_simpro_neg_pmc_p
		null,                            --nr_seq_origem_p
		null,                            --nr_seq_cobertura_p
		0,                               --qt_dias_internacao_p
		nr_seq_regra_w,                  --nr_seq_regra_lanc_p
		null,                            --nr_seq_lib_dieta_conv_p
		null,                            --ie_clinica_p
		cd_usuario_convenio_w,           --cd_usuario_convenio_p
		null) INTO STRICT 
		vl_aux_w, 
		vl_aux_w, 
		ds_aux_w, 
		ie_glosa_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		ds_aux_w, 
		ds_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		ds_aux_w, 
		vl_aux_w, 
		ds_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		ds_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w, 
		vl_aux_w;                          --nr_seq_classif_atend_p
      if  ((coalesce(ie_Regra_w,0) in (1,2,5)) or (coalesce(ie_glosa_w,'') in ('T','E','R','B','H','Z',''))) then
        select  max(cd_convenio_partic),
          max(cd_categoria_partic)
        into STRICT  cd_convenio_ww,
          cd_categoria_ww
        from  parametro_faturamento
        where  cd_estabelecimento  = cd_estabelecimento_w;

        if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') then
          select  max(cd_plano)
          into STRICT  cd_plano_ww
          from  convenio_plano
          where  cd_convenio  = cd_convenio_w
          and  ie_situacao  = 'A';
        end if;

        SELECT * FROM Define_Preco_material(
          CD_ESTABELECIMENTO_w, cd_convenio_ww, cd_categoria_ww, clock_timestamp(), cd_material_w, 0, coalesce(ie_tipo_atendimento_w,0), 0, null, qt_idade_w, null, cd_plano_ww, null, null, null, null, null, null, null, vl_material_w, ds_aux_w, vl_aux_w, vl_aux_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_w, ds_aux_w, vl_aux_w, vl_aux_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
      end if;

      if (ie_vl_particular_w = 'S') then
        SELECT * FROM Define_Preco_material(
          CD_ESTABELECIMENTO_w, cd_convenio_part_w, cd_categoria_part_w, clock_timestamp(), cd_material_w, 0, coalesce(ie_tipo_atendimento_w,0), 0, null, qt_idade_w, null, null, null, null, null, null, null, null, null, vl_material_part_w, ds_aux_w, vl_aux_w, vl_aux_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_material_part_w, ds_aux_w, vl_aux_w, vl_aux_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;
      end if;

      /*
      select  count(*)
      into  qt_material_w
      from  orcamento_paciente_mat
      where  nr_sequencia_orcamento  = nr_seq_orcamento_p
      and  cd_material    = cd_material_w;
      */
      qt_material_w  := 0;
      insert into ageint_itens_adicionais(nr_sequencia,
        dt_Atualizacao,
        nm_usuario,
        dt_atualizacao_nrec,
        nm_usuario_nrec,
        cd_material,
        nr_seq_ageint_item,
        vl_item,
        nr_seq_ageint_pacote,
        ie_regra,
        ie_glosa,
        vl_item_particular)
      values (nextval('ageint_itens_adicionais_seq'),
        clock_timestamp(),
        nm_usuario_p,
        clock_timestamp(),
        nm_usuario_p,
        cd_material_w,
        CASE WHEN ie_pacote_p='N' THEN  nr_seq_item_p  ELSE null END ,
        vl_material_w,
        CASE WHEN ie_pacote_p='S' THEN  nr_seq_item_p  ELSE null END ,
        ie_regra_w,
        ie_glosa_w,
        vl_material_part_w);

      /*if  (qt_material_w = 0) then

        /*insert into orcamento_paciente_mat (
          NR_SEQuencia_ORCAMENTO       ,              
          CD_MATERIAL             ,       
          QT_MATERIAL             ,       
          VL_MATERIAL    ,
          DT_ATUALIZACAO    ,
          NM_USUARIO    ,
          IE_VALOR_INFORMADO,
          nr_sequencia,
          nr_seq_regra_lanc,
          nr_seq_proc_princ,
          ie_adicional)
        values (nr_seq_orcamento_p  ,
          cd_material_w           ,       
           qt_lancamento_w    ,       
          0,       
          sysdate                 ,       
          nm_usuario_p            ,       
          'N',
          orcamento_paciente_mat_seq.NextVal,
          nr_seq_regra_w,
          nvl(nr_seq_item_p, nr_seq_item_w),
          nvl(ie_adic_orcamento_w,'N'));
      
        /*if  (ie_dispara_kit_w  = 'S') then
          
          SELECT  nvl(max(cd_kit_material),0)
          into  cd_kit_material_w
          FROM   MATERIAL_ESTAB 
          WHERE   CD_MATERIAL    = cd_material_w
          AND   CD_ESTABELECIMENTO  = cd_estabelecimento_w;
        
          if  (cd_kit_material_w  <> 0) then
  
            gerar_kit_material_orc
              (nr_seq_orcamento_p, qt_lancamento_w, cd_kit_material_w, nvl(nr_seq_item_p, nr_seq_item_w) ,nm_usuario_p);
          
          end if;
        end if;*/

          
      --end if;*/
      end;
    end if;
    end;
  end if;
  END;
  <<continue_loop>>
  ie_situacao_w := null;
END LOOP;
CLOSE C02;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_lanc_auto ( nr_Seq_Ageint_p bigint, NR_SEQ_EVENTO_P bigint, nr_seq_item_p bigint, ie_pacote_p text, NM_USUARIO_P text) FROM PUBLIC;

