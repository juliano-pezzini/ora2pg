-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_trib_prest_mes ( cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_trib_prest_p pls_lote_ret_trib_prest.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


ds_irrelevante_w		varchar(4000);
ds_venc_w			varchar(2000);
ds_erro_w			varchar(255);
ie_tipo_tributacao_w		varchar(255);
ds_emp_retencao_ret_w		varchar(255);
cd_variacao_w			varchar(50);
ie_periodicidade_w		varchar(50);
ie_cnpj_w			varchar(50);
cd_darf_w			varchar(20);
cd_conta_contabil_w		varchar(20);
ie_tipo_tributo_w		varchar(15);
cd_beneficiario_w		varchar(14);
cd_cgc_w			varchar(14);
cd_tributo_pf_w			varchar(10);
cd_pessoa_fisica_pf_w		varchar(10);
ie_tipo_contrat_a_maior_w	varchar(10);
cd_pessoa_fisica_w		varchar(10);
ie_forma_retencao_inss_ir_w	pls_parametro_pagamento.ie_forma_retencao_inss_ir%type;
ie_apuracao_piso_w		varchar(3);
ie_filantropia_w		varchar(3);
ie_tipo_contratacao_w		varchar(2);
ie_vencimento_w			varchar(1);
ie_acumulativo_w		varchar(1);
ie_restringe_estab_w		varchar(1);
pr_aliquota_w			double precision;
vl_nao_retido_w			double precision	:= 0;
vl_menor_minimo_w		double precision	:= 0;
vl_total_trib_w			double precision	:= 0;
vl_inss_w			double precision	:= 0;
vl_tributo_w			double precision;
vl_base_calculo_w		double precision;
vl_minimo_tributo_w		double precision;
vl_base_retido_outro_w		double precision;
vl_trib_acum_w			double precision	:= 0;
vl_pago_w			double precision;
vl_base_calculo_paga_w		double precision;
vl_soma_trib_nao_retido_w	double precision;
vl_soma_base_nao_retido_w	double precision;
vl_soma_trib_adic_w		double precision;
vl_soma_base_adic_w		double precision;
vl_tributo_a_reter_w		double precision;
vl_minimo_base_w		double precision;
vl_trib_adic_w			double precision;
vl_base_a_reter_w		double precision;
vl_trib_nao_retido_w		double precision;
vl_base_adic_w			double precision;
vl_base_nao_retido_w		double precision;
vl_teto_base_w			double precision;
vl_trib_anterior_w		double precision;
vl_reducao_w			double precision;
vl_desc_dependente_w		double precision;
vl_total_base_w			double precision;
vl_base_pago_adic_base_w	double precision;
vl_base_tributo_pf_w		double precision;
vl_tributo_pf_w			double precision;
vl_tributo_ret_w		double precision;
vl_base_calculo_ret_w		double precision;
nr_seq_pag_prest_w		double precision;
vl_base_calculo_a_maior_w	double precision;
vl_estornado_base_maior_w	double precision;
vl_saldo_a_maior_w		double precision;
vl_base_restante_w		double precision;
vl_base_tributo_pf_ww		double precision;
vl_base_nao_ret_w		double precision;
vl_base_calculo_acum_w		double precision	:= 0;
vl_teto_original_w		double precision	:= null;
vl_base_outros_w		double precision	:= 0;
nr_seq_ret_valor_w		bigint;
cd_tributo_w			bigint;
nr_seq_venc_trib_w		bigint;
cd_cond_pagto_w			bigint;
nr_seq_trans_reg_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_conta_financ_w		bigint;
nr_seq_prestador_w		bigint;
qt_imposto_mes_w		bigint;
cd_tributo_ret_w		bigint;
nr_seq_regra_trib_w		bigint;
ie_ordem_w			bigint;
nr_seq_venc_trib_a_maior_w	bigint;
nr_seq_classe_w			bigint;
nr_seq_vencimento_w		bigint;
pr_fator_w			double precision;
pr_tributo_w			double precision;
qt_venc_w			integer;
cd_estabelecimento_w		integer;
qt_registro_w			integer;
cd_tipo_baixa_neg_w		integer;
cont_w				smallint;
qt_dependente_w			smallint;
dt_emissao_w			timestamp;
dt_emissao_comp_w		timestamp;
dt_emissao_venc_w		timestamp;
dt_vencimento_w			timestamp;
dt_venc_titulo_w		timestamp;
dt_venc_titulo_comp_w		timestamp;
dt_venc_titulo_venc_w		timestamp;
dt_tributo_w			timestamp;
dt_tributo_comp_w		timestamp;
dt_tributo_venc_w		timestamp;
dt_referencia_w			timestamp;
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w		timestamp;
dt_ref_tributo_w		timestamp;
dt_imposto_w			timestamp;
nr_seq_tipo_prestador_w		pls_tipo_prestador.nr_sequencia%type;
nr_seq_classificacao_w		pls_prestador.nr_seq_classificacao%type;
nr_seq_regra_w			tributo_conta_pagar.nr_sequencia%type;
vl_base_producao_w		double precision;
dt_atual_w			timestamp := trunc(clock_timestamp());
ie_venc_pls_pag_prod_w		tributo.ie_venc_pls_pag_prod%type;

C01 CURSOR FOR
	SELECT	cd_tributo,
		ie_vencimento,
		ie_tipo_tributo,
		ie_apuracao_piso,
		ie_cnpj,
		ie_restringe_estab,
		ie_venc_pls_pag_prod
	from	tributo
	where	ie_conta_pagar	= 'S'
	and	ie_situacao 	= 'A'
	and	((ie_pf_pj = 'A') or
		(ie_pf_pj = 'PF' AND cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') or
		(ie_pf_pj = 'PJ' AND cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> ''))
	and	((coalesce(ie_tipo_tributacao_w, 'X') <> '0') or (coalesce(ie_super_simples, 'S') = 'S'))
	and	ie_tipo_tributo	in ('INSS','IR')
	order	by CASE WHEN ie_tipo_tributo='INSS' THEN 1  ELSE 2 END;

C02 CURSOR FOR
	SELECT 	b.cd_tributo,
		b.vl_base_calculo,
		b.vl_tributo,
		b.dt_inicio_vigencia,
		b.dt_fim_vigencia,
		b.cd_pessoa_fisica,
		a.ie_vencimento,
		b.ds_emp_retencao,
		b.ie_tipo_data,
		coalesce(b.ie_pago_prev_lote_pag_ops, 'P') ie_pago_prev_lote_pag_ops,
		a.ie_restringe_estab,
		a.ie_tipo_tributo,
		coalesce(a.ie_venc_pls_pag_prod, 'C') ie_venc_pls_pag_prod
	from	pessoa_fisica_trib 	b,
		tributo 		a
	where	b.cd_tributo 		= a.cd_tributo
	and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_p
	and	coalesce(b.cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and	b.ie_pago_prev_lote_pag_ops	= 'R'
	and	dt_referencia_w between trunc(b.dt_inicio_vigencia) and fim_dia(dt_fim_vigencia);

C03 CURSOR FOR
	SELECT	sum(coalesce(a.vl_base_calculo,0)) vl_base_calculo,
		sum(coalesce(a.vl_imposto,0)) vl_retido,
		sum(coalesce(a.vl_nao_retido,0)) vl_nao_retido,
		sum(coalesce(a.vl_base_nao_retido,0)) vl_base_nao_ret,
		sum(coalesce(a.vl_base_adic,0)) vl_base_adic,
		sum(coalesce(a.vl_trib_adic,0)) vl_trib_adic,
		CASE WHEN coalesce(a.pr_tributo::text, '') = '' THEN 999 WHEN a.pr_tributo=11 THEN 1 WHEN a.pr_tributo=20 THEN 2 WHEN a.pr_tributo=0 THEN 3 END  ie_ordem,
		a.pr_tributo,
		max(a.dt_imposto) dt_imposto,
		max(a.nr_seq_regra),
		sum(coalesce(a.vl_base_producao,0)) vl_base_producao
	from	pls_prestador			e,
		pls_lote_pagamento		d,
		pls_pagamento_prestador		c,
		pls_pag_prest_vencimento	b,
		pls_pag_prest_venc_trib		a,
		tributo				z
	where	a.nr_seq_vencimento	= b.nr_sequencia
	and	b.nr_seq_pag_prestador	= c.nr_sequencia
	and	c.nr_seq_lote		= d.nr_sequencia
	and	e.nr_sequencia		= c.nr_seq_prestador
	and	a.cd_tributo		= cd_tributo_w
	and	e.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	z.cd_tributo		= a.cd_tributo
	and	(d.dt_geracao_titulos IS NOT NULL AND d.dt_geracao_titulos::text <> '')
	and	a.ie_pago_prev		= 'V'
	and	a.vl_imposto > 0
	and	(((z.ie_venc_pls_pag_prod IS NOT NULL AND z.ie_venc_pls_pag_prod::text <> '') and (CASE WHEN ie_venc_pls_pag_prod='V' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w)))) or
		CASE WHEN z.ie_vencimento='V' THEN b.dt_vencimento WHEN z.ie_vencimento='C' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w)))
	group by a.pr_tributo
	
union all

	SELECT	sum(coalesce(a.vl_base_calculo,0)) vl_base_calculo,
		sum(a.vl_imposto) vl_retido,
		sum(a.vl_nao_retido) vl_nao_retido,
		sum(a.vl_base_nao_retido) vl_base_nao_ret,
		sum(a.vl_base_adic) vl_base_adic,
		sum(a.vl_trib_adic) vl_trib_adic,
		CASE WHEN coalesce(a.pr_tributo::text, '') = '' THEN 999 WHEN a.pr_tributo=11 THEN 1 WHEN a.pr_tributo=20 THEN 2 WHEN a.pr_tributo=0 THEN 3 END  ie_ordem,
		a.pr_tributo,
		max(a.dt_imposto) dt_imposto,
		max(a.nr_seq_regra),
		sum(coalesce(a.vl_base_producao,0)) vl_base_producao
	from	pls_prestador			e,
		pls_lote_pagamento		d,
		pls_pagamento_prestador		c,
		pls_pag_prest_vencimento	b,
		pls_pag_prest_venc_trib		a,
		tributo				z
	where	a.nr_seq_vencimento	= b.nr_sequencia
	and	b.nr_seq_pag_prestador	= c.nr_sequencia
	and	c.nr_seq_lote		= d.nr_sequencia
	and	e.nr_sequencia		= c.nr_seq_prestador
	and	a.cd_tributo		= cd_tributo_w
	and	e.cd_cgc		= cd_cgc_p
	and	z.cd_tributo		= a.cd_tributo
	and	(d.dt_geracao_titulos IS NOT NULL AND d.dt_geracao_titulos::text <> '')
	and	a.ie_pago_prev		= 'V'
	and	a.vl_imposto > 0
	and	(((z.ie_venc_pls_pag_prod IS NOT NULL AND z.ie_venc_pls_pag_prod::text <> '') and (CASE WHEN ie_venc_pls_pag_prod='V' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w)))) or
		CASE WHEN z.ie_vencimento='V' THEN b.dt_vencimento WHEN z.ie_vencimento='C' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w)))
	group by a.pr_tributo
	order by ie_ordem;

C04 CURSOR FOR
	/* Para INSS a alíquota varia conforme o tipo de contratação */

	SELECT	coalesce(sum(a.vl_base_nao_retido),0),
		a.pr_tributo,
		a.ie_tipo_contratacao,
		CASE WHEN coalesce(a.pr_tributo::text, '') = '' THEN 999 WHEN a.pr_tributo=11 THEN 1 WHEN a.pr_tributo=20 THEN 2 WHEN a.pr_tributo=0 THEN 3 END  ie_ordem
	from	pls_prestador 			e,
		pls_lote_pagamento 		d,
		pls_pagamento_prestador 	c,
		pls_pag_prest_vencimento 	b,
		pls_pag_prest_venc_trib 	a,
		tributo				z
	where	a.nr_seq_vencimento	= b.nr_sequencia
	and	b.nr_seq_pag_prestador	= c.nr_sequencia
	and	c.nr_seq_lote		= d.nr_sequencia
	and	c.nr_seq_prestador	= e.nr_sequencia
	and	e.cd_pessoa_fisica	= cd_pessoa_fisica_p
	and	a.cd_tributo		= cd_tributo_w
	and	(d.dt_geracao_titulos IS NOT NULL AND d.dt_geracao_titulos::text <> '')
	and	((ie_forma_retencao_inss_ir_w <> 'LM') or (ie_forma_retencao_inss_ir_w = 'LM' AND d.dt_geracao_titulos IS NOT NULL AND d.dt_geracao_titulos::text <> ''))
	and	z.cd_tributo		= a.cd_tributo
	and	(((z.ie_venc_pls_pag_prod IS NOT NULL AND z.ie_venc_pls_pag_prod::text <> '') and (CASE WHEN ie_venc_pls_pag_prod='V' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w)))) or
		CASE WHEN z.ie_vencimento='V' THEN b.dt_vencimento WHEN z.ie_vencimento='C' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w)))
	and	ie_tipo_tributo_w	= 'INSS'
	--and	a.vl_imposto > 0	-- Quando a forma de retenção de IR e INSS é configurada como 'Lote de retenção mensal', a tributação no pagamento fica zerada, portanto, não pode conter esta restrição
	group 	by a.pr_tributo,
		a.ie_tipo_contratacao
	order 	by ie_ordem;

BEGIN

update	pls_pag_prest_venc_trib
set 	nr_seq_lote_ret_trib_valor  = NULL
where	nr_seq_lote_ret_trib_valor in (	SELECT	nr_sequencia
					from	pls_lote_ret_trib_valor
					where	nr_seq_trib_prest = nr_seq_trib_prest_p);

delete FROM pls_lote_ret_trib_val_dif where nr_seq_trib_prest = nr_seq_trib_prest_p;
delete FROM pls_lote_ret_trib_valor where nr_seq_trib_prest = nr_seq_trib_prest_p;

update	pls_lote_ret_trib_prest
set	dt_calculo	= clock_timestamp()
where	nr_sequencia	= nr_seq_trib_prest_p;

select	dt_mes_referencia,
	cd_estabelecimento
into STRICT	dt_referencia_w,
	cd_estabelecimento_w
from	pls_lote_ret_trib_prest	b,
	pls_lote_retencao_trib	a
where	a.nr_sequencia	= b.nr_seq_lote
and	b.nr_sequencia	= nr_seq_trib_prest_p;

select	max(ie_forma_retencao_inss_ir)
into STRICT	ie_forma_retencao_inss_ir_w
from	pls_parametro_pagamento
where	cd_estabelecimento	= cd_estabelecimento_w;

select	max(ie_tipo_tributacao)
into STRICT	ie_tipo_tributacao_w
from	pessoa_juridica
where	cd_cgc	= cd_cgc_p;

-- pego as datas por competência
select	max(coalesce(trunc(c.dt_ref_tributo, 'mm'), trunc(c.dt_mes_competencia, 'mm'))),
	max(trunc(c.dt_venc_lote, 'mm')),
	max(trunc(c.dt_ref_tributo, 'mm')),
	max(a.nr_seq_tipo_prestador),
	max(a.nr_seq_classificacao)
into STRICT	dt_emissao_comp_w,
	dt_venc_titulo_comp_w,
	dt_tributo_comp_w,
	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_w
from	pls_prestador		a,
	pls_pagamento_prestador	b,
	pls_lote_pagamento	c
where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
and	b.nr_seq_prestador	= a.nr_sequencia
and	c.nr_sequencia		= b.nr_seq_lote
and	trunc(c.dt_ref_tributo, 'mm') = trunc(dt_referencia_w, 'mm');

-- e aqui por vencimento para serem utilizadas mais tarde

-- feito desta forma pois o que define se será por vencimento ou competência é o tributo

-- e para não fazer um select a cada tributo faço aqui e lá só verifico qual dos campos de

-- data é o correto para ser utilizado
select	max(coalesce(trunc(c.dt_ref_tributo, 'mm'), trunc(c.dt_mes_competencia, 'mm'))),
	max(trunc(c.dt_venc_lote, 'mm')),
	max(trunc(c.dt_ref_tributo, 'mm')),
	coalesce(nr_seq_tipo_prestador_w, max(a.nr_seq_tipo_prestador)),
	coalesce(nr_seq_classificacao_w,max(a.nr_seq_classificacao))
into STRICT	dt_emissao_venc_w,
	dt_venc_titulo_venc_w,
	dt_tributo_venc_w,
	nr_seq_tipo_prestador_w,
	nr_seq_classificacao_w
from	pls_prestador		a,
	pls_pagamento_prestador	b,
	pls_lote_pagamento	c
where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p
and	b.nr_seq_prestador	= a.nr_sequencia
and	c.nr_sequencia		= b.nr_seq_lote
and	trunc(c.dt_venc_lote, 'mm') = trunc(dt_referencia_w, 'mm');

for r_c02_w in C02 loop

	vl_base_adic_w	:= 0;
	pr_aliquota_w	:= 0;
	-- se for pagamento semanal e tipo de tributo INSS busca os valores de teto e aliquota
	if (ie_forma_retencao_inss_ir_w = 'SE') and (r_c02_w.ie_tipo_tributo = 'INSS') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

		select	coalesce(max(vl_teto_base_calculo),0),
			coalesce(max(pr_aliquota),0)
		into STRICT	vl_base_adic_w,
			pr_aliquota_w
		from	tributo_conta_pagar
		where	cd_tributo = r_c02_w.cd_tributo
		and	cd_estabelecimento = cd_estabelecimento_w
		and	ie_tipo_pessoa in ('F','A')
		and	dt_atual_w between dt_inicio_vigencia_ref and fim_dia(dt_fim_vigencia_ref);
	end if;

	-- busca a informação pela competência, senão vai pelo vencimento
	if (r_c02_w.ie_venc_pls_pag_prod = 'C') then

		dt_emissao_w := dt_emissao_comp_w;
		dt_venc_titulo_w := dt_venc_titulo_venc_w;
	else

		dt_emissao_w := dt_emissao_venc_w;
		dt_venc_titulo_w := dt_venc_titulo_venc_w;
	end if;
	
	if (r_c02_w.ie_tipo_data = 'E') then
		dt_imposto_w := dt_emissao_w;
	elsif (r_c02_w.ie_tipo_data = 'V') then
		dt_imposto_w := dt_venc_titulo_w;
	end if;
	
	insert into pls_lote_ret_trib_valor(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_trib_prest,
		cd_tributo,
		dt_imposto,
		vl_base_calculo,
		vl_imposto,
		pr_tributo,
		vl_nao_retido,
		vl_trib_adic,
		vl_base_adic,
		vl_base_nao_retido,
		ie_pago_prev,
		vl_saldo_trib)
	values (nextval('pls_lote_ret_trib_valor_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_trib_prest_p,
		r_c02_w.cd_tributo,
		trunc(coalesce(dt_imposto_w,dt_referencia_w),'dd'),
		r_c02_w.vl_base_calculo,
		r_c02_w.vl_tributo,
		pr_aliquota_w,
		0,
		0,
		vl_base_adic_w,
		0,
		r_c02_w.ie_pago_prev_lote_pag_ops,
		r_c02_w.vl_tributo);
end loop;

select	coalesce(sum(a.vl_imposto),0)
into STRICT	vl_tributo_pf_w
from	pls_lote_ret_trib_valor	a
where	a.nr_seq_trib_prest	= nr_seq_trib_prest_p;

vl_trib_acum_w	:= vl_trib_acum_w + vl_tributo_pf_w;

if (ie_forma_retencao_inss_ir_w = 'LM') then -- Lote de retenção mensal
	open C01;
	loop
	fetch C01 into
		cd_tributo_w,
		ie_vencimento_w,
		ie_tipo_tributo_w,
		ie_apuracao_piso_w,
		ie_cnpj_w,
		ie_restringe_estab_w,
		ie_venc_pls_pag_prod_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		-- o cursor c04 está retornando apenas INSS então não tem sentido processar quando for outro tributo
		if (ie_tipo_tributo_w = 'INSS') then

			select	coalesce(sum(c.vl_base_calculo),0)
			into STRICT	vl_base_outros_w
			from	pls_lote_ret_trib_valor c,
				pls_lote_ret_trib_prest b
			where	b.nr_sequencia			= c.nr_seq_trib_prest
			and	c.cd_tributo			= cd_tributo_w
			and	b.nr_sequencia			= nr_seq_trib_prest_p
			and	c.ie_pago_prev			= 'R';

			open C04;
			loop
			fetch C04 into
				vl_base_calculo_w,
				pr_tributo_w,
				ie_tipo_contratacao_w,
				ie_ordem_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */

				if (vl_base_calculo_w > 0) then

					-- busca a informação pela competência, senão vai pelo vencimento
					if (ie_venc_pls_pag_prod_w = 'C') then

						dt_emissao_w := dt_emissao_comp_w;
						dt_venc_titulo_w := dt_venc_titulo_venc_w;
						dt_tributo_w := dt_tributo_comp_w;
					else

						dt_emissao_w := dt_emissao_venc_w;
						dt_venc_titulo_w := dt_venc_titulo_venc_w;
						dt_tributo_w := dt_tributo_venc_w;
					end if;


					SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_w, cd_estabelecimento_w, cd_cgc_p, cd_pessoa_fisica_p, cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, dt_tributo_w, cd_variacao_w, ie_periodicidade_w, null, null, null, null, ie_tipo_contratacao_w, null, nr_seq_regra_trib_w, null, 0, nr_seq_classe_w, cd_tipo_baixa_neg_w, vl_base_calculo_w, 'S', null, null, nr_seq_tipo_prestador_w, nr_seq_classificacao_w) INTO STRICT cd_beneficiario_w, pr_aliquota_w, cd_cond_pagto_w, cd_conta_financ_w, nr_seq_trans_reg_w, nr_seq_trans_baixa_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_darf_w, cd_variacao_w, ie_periodicidade_w, nr_seq_regra_trib_w, nr_seq_classe_w, cd_tipo_baixa_neg_w;

					if (coalesce(vl_teto_original_w::text, '') = '') then
						vl_teto_original_w		:= vl_teto_base_w - vl_base_outros_w;
					end if;

					if (vl_base_calculo_w > vl_teto_original_w) then
						vl_base_calculo_w	:= vl_teto_original_w;
					end if;

					vl_teto_original_w	:= vl_teto_original_w - vl_base_calculo_w;

					if (pr_aliquota_w > 0) then

						vl_tributo_w := vl_base_calculo_w * pr_aliquota_w / 100;

						if (ie_vencimento_w = 'V') then

							dt_vencimento_w	:= coalesce(dt_venc_titulo_w,clock_timestamp());

						elsif (ie_vencimento_w = 'C') then

							dt_vencimento_w	:= coalesce(dt_venc_titulo_w,coalesce(dt_emissao_w,clock_timestamp()));
						else
							dt_vencimento_w	:= coalesce(dt_emissao_w,clock_timestamp());
						end if;

						dt_tributo_w := dt_vencimento_w;

						if (cd_cond_pagto_w IS NOT NULL AND cd_cond_pagto_w::text <> '') then
							SELECT * FROM calcular_vencimento(cd_estabelecimento_w, cd_cond_pagto_w, dt_vencimento_w, qt_venc_w, ds_venc_w) INTO STRICT qt_venc_w, ds_venc_w;

							if (qt_venc_w = 1) then
								dt_vencimento_w	:= to_date(substr(ds_venc_w,1,10),'dd/mm/yyyy');
							end if;
						end if;

						if (vl_tributo_w > 0) then
							insert into pls_lote_ret_trib_valor(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_seq_trib_prest,
								cd_tributo,
								dt_imposto,
								vl_base_calculo,
								vl_imposto,
								pr_tributo,
								vl_nao_retido,
								vl_trib_adic,
								vl_base_adic,
								vl_base_nao_retido,
								ie_pago_prev,
								vl_reducao,
								cd_darf,
								vl_saldo_trib)
							values (nextval('pls_lote_ret_trib_valor_seq'),
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_trib_prest_p,
								cd_tributo_w,
								clock_timestamp(),
								vl_base_calculo_w,
								vl_tributo_w,
								pr_aliquota_w,
								0,
								0,
								vl_teto_base_w,
								0,
								'V',
								0,
								cd_darf_w,
								vl_tributo_w);
						end if;
					end if;
				end if;
			end loop;
			close C04;
		end if;
	end loop;
	close C01;
else
	open C01;
	loop
	fetch C01 into
		cd_tributo_w,
		ie_vencimento_w,
		ie_tipo_tributo_w,
		ie_apuracao_piso_w,
		ie_cnpj_w,
		ie_restringe_estab_w,
		ie_venc_pls_pag_prod_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		open C03;
		loop
		fetch C03 into
			vl_base_calculo_w,
			vl_tributo_w,
			vl_nao_retido_w,
			vl_base_nao_ret_w,
			vl_base_adic_w,
			vl_trib_adic_w,
			ie_ordem_w,
			pr_tributo_w,
			dt_tributo_w,
			nr_seq_regra_w,
			vl_base_producao_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			if (vl_base_producao_w > 0) then
				select	coalesce(max(vl_teto_base_calculo),0)
				into STRICT	vl_base_adic_w
				from	tributo_conta_pagar
				where	nr_sequencia	= nr_seq_regra_w;

				insert into pls_lote_ret_trib_valor(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_trib_prest,
					cd_tributo,
					dt_imposto,
					vl_base_calculo,
					vl_imposto,
					pr_tributo,
					vl_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					vl_base_nao_retido,
					ie_pago_prev,
					vl_reducao,
					vl_saldo_trib)
				values (nextval('pls_lote_ret_trib_valor_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_trib_prest_p,
					cd_tributo_w,
					dt_tributo_w,
					vl_base_calculo_w,
					vl_tributo_w,
					pr_tributo_w,
					vl_nao_retido_w,
					vl_trib_adic_w,
					vl_base_adic_w,
					vl_base_nao_ret_w,
					'V',
					vl_reducao_w,
					vl_tributo_w) returning nr_sequencia into nr_seq_ret_valor_w;

				update	pls_pag_prest_venc_trib x
				set	nr_seq_lote_ret_trib_valor	= nr_seq_ret_valor_w,
					nm_usuario			= nm_usuario_p,
					dt_atualizacao			= clock_timestamp()
				where	exists (SELECT	1
						from	pls_prestador			e,
							pls_lote_pagamento		d,
							pls_pagamento_prestador		c,
							pls_pag_prest_vencimento	b,
							pls_pag_prest_venc_trib		a,
							tributo				z
						where	a.nr_seq_vencimento	= b.nr_sequencia
						and	b.nr_seq_pag_prestador	= c.nr_sequencia
						and	c.nr_seq_lote		= d.nr_sequencia
						and	e.nr_sequencia		= c.nr_seq_prestador
						and	a.nr_sequencia		= x.nr_sequencia
						and	a.cd_tributo		= cd_tributo_w
						and	a.pr_tributo		= pr_tributo_w
						and	e.cd_pessoa_fisica	= cd_pessoa_fisica_p
						and	(d.dt_geracao_titulos IS NOT NULL AND d.dt_geracao_titulos::text <> '')
						and	z.cd_tributo		= a.cd_tributo
						and	(((z.ie_venc_pls_pag_prod IS NOT NULL AND z.ie_venc_pls_pag_prod::text <> '') and (CASE WHEN ie_venc_pls_pag_prod='V' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w)))) or
							CASE WHEN z.ie_vencimento='V' THEN b.dt_vencimento WHEN z.ie_vencimento='C' THEN b.dt_vencimento  ELSE d.dt_mes_competencia END  between trunc(dt_referencia_w,'month') and fim_dia(last_day(dt_referencia_w))));
			end if;
			end;
		end loop;
		close C03;
		end;
	end loop;
	close C01;
end if;

if (ie_forma_retencao_inss_ir_w = 'SE') then
	CALL pls_gerar_diferenca_trib_prest( nr_seq_trib_prest_p, nm_usuario_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_trib_prest_mes ( cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_trib_prest_p pls_lote_ret_trib_prest.nr_sequencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

