-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_obter_hemoterap ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, nr_seq_regra_p bigint) AS $body$
DECLARE


nr_seq_wadep_w			bigint;
nr_prescricao_w			bigint;
nr_seq_procedimento_w		integer;
cd_procedimento_w		bigint;
ds_procedimento_w		varchar(255);
nr_seq_lab_w			varchar(20);
ie_acm_sn_w			varchar(1);
cd_intervalo_w			varchar(7);
qt_procedimento_w		double precision;
ds_prescricao_w			varchar(100);
ie_status_solucao_w		varchar(3);
ie_status_w			varchar(1);
nr_seq_proc_interno_w		bigint;
ie_classif_adep_w		varchar(15);
ie_lib_pend_rep_w		varchar(1);
ie_liberado_w			varchar(1);
ds_interv_prescr_w		varchar(15);
nr_seq_solic_sangue_w		bigint;
ie_origem_proced_w		bigint;
ie_erro_w			integer;
ie_copiar_w			varchar(1);
ds_cor_titulo_w			varchar(20);

c01 CURSOR FOR
SELECT	nr_prescricao,
	nr_seq_procedimento,
	cd_procedimento,
	ds_procedimento,
	ie_acm_sn,
	cd_intervalo,
	qt_procedimento,
	ds_prescricao,
	ie_status_solucao,
	ie_suspenso,
	nr_seq_proc_interno,
	ie_classif_adep,
	nr_seq_lab,
	ds_intervalo,
	nr_seq_solic_sangue,
	ie_origem_proced,
	ie_lib_pend_rep,
	ie_liberado,
	ie_erro
from	(
	SELECT	a.nr_prescricao,
		x.nr_sequencia nr_seq_procedimento,
		x.cd_procedimento,
		z.ds_derivado ds_procedimento,
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
		x.cd_intervalo,
		x.qt_procedimento,
		substr(adep_obter_dados_prescr_proc(a.nr_prescricao,x.nr_sequencia,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
		CASE WHEN x.ie_status='P' THEN  'W'  ELSE substr(obter_status_solucao_prescr(3,a.nr_prescricao,x.nr_sequencia),1,3) END  ie_status_solucao,
		coalesce(x.ie_suspenso,'N') ie_suspenso,
		coalesce(x.nr_seq_proc_interno,0) nr_seq_proc_interno,
		'P' ie_classif_adep,
		x.nr_seq_lab,
		substr(obter_desc_intervalo_prescr(x.cd_intervalo),1,15) ds_intervalo,
		x.nr_seq_solic_sangue,
		x.ie_origem_proced,
		substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1) ie_lib_pend_rep,
		CASE WHEN coalesce(coalesce(a.dt_liberacao,a.dt_liberacao_medico),a.dt_liberacao_farmacia) IS NULL THEN 'N'  ELSE 'S' END  ie_liberado,
		x.ie_erro
	from	san_derivado z,
		procedimento y,
		prescr_procedimento x,
		prescr_medica a
	where	z.nr_sequencia = x.nr_seq_derivado
	and	y.cd_procedimento = x.cd_procedimento
	and	y.ie_origem_proced = x.ie_origem_proced
	and	x.nr_prescricao = a.nr_prescricao
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr > dt_validade_limite_p
	and	coalesce(x.nr_seq_proc_interno::text, '') = ''
	and	coalesce(x.nr_seq_exame::text, '') = ''
	and	(x.nr_seq_solic_sangue IS NOT NULL AND x.nr_seq_solic_sangue::text <> '')
	and	(x.nr_seq_derivado IS NOT NULL AND x.nr_seq_derivado::text <> '')
	and	coalesce(x.nr_seq_exame_sangue::text, '') = ''
	and	coalesce(a.ie_adep,'S') = 'S'
	and	((x.ie_status in ('I','INT')) or
		 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'N') and (x.dt_status between dt_inicial_horarios_p and dt_final_horarios_p)) or
		 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
	and	((a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_original = nm_usuario_p))
	group by
		a.nr_prescricao,
		x.nr_sequencia,
		x.cd_procedimento,
		z.ds_derivado,
		x.ie_acm,
		x.ie_se_necessario,
		x.cd_intervalo,
		x.qt_procedimento,
		x.ie_suspenso,
		x.nr_seq_proc_interno,
		'P',
		x.nr_seq_lab,
		x.ie_status,
		x.nr_seq_solic_sangue,
		x.ie_origem_proced,
		a.dt_liberacao_medico,
		a.dt_liberacao,
		a.dt_liberacao_farmacia,
		x.ie_erro
	
union all

	select	a.nr_prescricao,
		x.nr_sequencia,
		x.cd_procedimento,
		z.ds_derivado ds_procedimento,
		obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) ie_acm_sn,
		x.cd_intervalo,
		x.qt_procedimento,
		substr(adep_obter_dados_prescr_proc(a.nr_prescricao,x.nr_sequencia,'QIL','S',x.ie_acm,x.ie_se_necessario),1,100) ds_prescricao,
		CASE WHEN x.ie_status='P' THEN  'W'  ELSE substr(obter_status_solucao_prescr(3,a.nr_prescricao,x.nr_sequencia),1,3) END  ie_status_solucao,
		coalesce(x.ie_suspenso,'N') ie_suspenso,
		x.nr_seq_proc_interno,
		w.ie_classif_adep,
		x.nr_seq_lab,
		substr(obter_desc_intervalo_prescr(x.cd_intervalo),1,15) ds_intervalo,
		x.nr_seq_solic_sangue,
		x.ie_origem_proced,
		substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1) ie_lib_pend_rep,
		CASE WHEN coalesce(coalesce(a.dt_liberacao,a.dt_liberacao_medico),a.dt_liberacao_farmacia) IS NULL THEN 'N'  ELSE 'S' END  ie_liberado,
		x.ie_erro
	from	san_derivado z,
		procedimento y,
		proc_interno w,
		prescr_procedimento x,
		prescr_medica a
	where	z.nr_sequencia = x.nr_seq_derivado
	and	y.cd_procedimento = x.cd_procedimento
	and	y.ie_origem_proced = x.ie_origem_proced
	and	w.nr_sequencia = x.nr_seq_proc_interno
	and	x.nr_prescricao = a.nr_prescricao
	and	a.nr_atendimento = nr_atendimento_p
	and	a.dt_validade_prescr > dt_validade_limite_p
	and	w.ie_tipo <> 'G'
	and	w.ie_tipo <> 'BS'
	and	coalesce(w.ie_ivc,'N') <> 'S'
	and	coalesce(w.ie_ctrl_glic,'NC') = 'NC'
	and	(x.nr_seq_proc_interno IS NOT NULL AND x.nr_seq_proc_interno::text <> '')
	and	coalesce(x.nr_seq_prot_glic::text, '') = ''
	and	coalesce(x.nr_seq_exame::text, '') = ''
	and	(x.nr_seq_solic_sangue IS NOT NULL AND x.nr_seq_solic_sangue::text <> '')
	and	(x.nr_seq_derivado IS NOT NULL AND x.nr_seq_derivado::text <> '')
	and	coalesce(x.nr_seq_exame_sangue::text, '') = ''
	and	coalesce(a.ie_adep,'S') = 'S'
	and	((x.ie_status in ('I','INT')) or
		 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'N') and (x.dt_status between dt_inicial_horarios_p and dt_final_horarios_p)) or
		 ((obter_se_acm_sn(x.ie_acm,x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S')))
	and	((a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_original = nm_usuario_p))
	group by
		a.nr_prescricao,
		x.nr_sequencia,
		x.cd_procedimento,
		z.ds_derivado,
		x.ie_acm,
		x.ie_se_necessario,
		x.cd_intervalo,
		x.qt_procedimento,
		x.ie_suspenso,
		x.nr_seq_proc_interno,
		w.ie_classif_adep,
		x.nr_seq_lab,
		x.ie_status,
		x.nr_seq_solic_sangue,
		x.ie_origem_proced,
		a.dt_liberacao_medico,
		a.dt_liberacao,
		a.dt_liberacao_farmacia,
		x.ie_erro
	) alias70
group by
	nr_prescricao,
	nr_seq_procedimento,
	cd_procedimento,
	ds_procedimento,
	ie_acm_sn,
	cd_intervalo,
	qt_procedimento,
	ds_prescricao,
	ie_status_solucao,
	ie_suspenso,
	nr_seq_proc_interno,
	ie_classif_adep,
	nr_seq_lab,
	ds_intervalo,
	nr_seq_solic_sangue,
	ie_origem_proced,
	ie_lib_pend_rep,
	ie_liberado,
	ie_erro;


BEGIN

ie_copiar_w 	:= plt_obter_se_item_marcado('HM', nr_seq_regra_p);
ds_cor_titulo_w	:= plt_obter_se_item_marcado('HM', nr_seq_regra_p);

open c01;
loop
fetch c01 into	nr_prescricao_w,
		nr_seq_procedimento_w,
		cd_procedimento_w,
		ds_procedimento_w,
		ie_acm_sn_w,
		cd_intervalo_w,
		qt_procedimento_w,
		ds_prescricao_w,
		ie_status_solucao_w,
		ie_status_w,
		nr_seq_proc_interno_w,
		ie_classif_adep_w,
		nr_seq_lab_w,
		ds_interv_prescr_w,
		nr_seq_solic_sangue_w,
		ie_origem_proced_w,
		ie_lib_pend_rep_w,
		ie_liberado_w,
		ie_erro_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	nextval('w_rep_t_seq')
	into STRICT	nr_seq_wadep_w
	;

	insert into w_rep_t(
		nr_sequencia,
		nm_usuario,
		ie_tipo_item,
		nr_prescricao,
		nr_seq_item,
		cd_item,
		ds_item,
		ie_acm_sn,
		cd_intervalo,
		qt_item,
		ds_prescricao,
		ie_status_item,
		nr_seq_proc_interno,
		ie_classif_adep,
		nr_agrupamento,
		ie_diferenciado,
		nr_seq_lab,
		ds_interv_prescr,
		nr_seq_solic_sangue,
		ie_origem_proced,
		ie_pendente_liberacao,
		ie_liberado,
		ie_erro,
		ie_copiar,
		ds_cor_titulo)
	values (
		nr_seq_wadep_w,
		nm_usuario_p,
		'HM',
		nr_prescricao_w,
		nr_seq_procedimento_w,
		cd_procedimento_w,
		ds_procedimento_w,
		ie_acm_sn_w,
		cd_intervalo_w,
		qt_procedimento_w,
		ds_prescricao_w,
		ie_status_solucao_w,
		nr_seq_proc_interno_w,
		ie_classif_adep_w,
		0,
		'N',
		nr_seq_lab_w,
		ds_interv_prescr_w,
		nr_seq_solic_sangue_w,
		ie_origem_proced_w,
		ie_lib_pend_rep_w,
		ie_liberado_w,
		ie_erro_w,
		ie_copiar_w,
		ds_cor_titulo_w);
	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_obter_hemoterap ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_prescr_usuario_p text, nr_seq_regra_p bigint) FROM PUBLIC;

