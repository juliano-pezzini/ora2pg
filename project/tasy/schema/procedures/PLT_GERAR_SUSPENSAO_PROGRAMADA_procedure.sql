-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_gerar_suspensao_programada ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_tabela_p text, ie_tipo_item_p text, nm_usuario_p text, dt_suspensao_programada_p timestamp) AS $body$
DECLARE


ie_agrupador_w			smallint;
nr_agrupamento_w		double precision;
nr_sequencia_autor_w	bigint;
nr_seq_autor_destino_w	bigint;
qt_solicitada_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_estagio_w		bigint;
cd_material_w			bigint;
nr_seq_dieta_hor_w		bigint;
cd_estabelecimento_w	smallint;

nr_atendimento_w		bigint;
ie_ctrl_glic_w			varchar(15);
nr_seq_solic_sangue_w	bigint;
nr_seq_derivado_w		bigint;
ie_se_necessario_w		varchar(1);
cd_intervalo_w			varchar(7);
qt_dose_w				prescr_material.qt_dose%type;
ie_inconsistencia_w		varchar(10);
ds_inconsistentes_w		varchar(10);
dt_primeiro_horario_w	timestamp;
ie_acm_w				varchar(2);
cd_refeicao_w			varchar(20);
nr_horas_validade_w		integer;
cd_dieta_w				bigint;
ie_ds_w					varchar(1);
ie_alteracao_w			smallint:= 13;
cd_motivo_susp_w		bigint;
nr_prescricao_w			bigint;
nr_sequencia_w			bigint;
ds_erro_w				varchar(255);
nr_seq_item_w			bigint;
dt_horario_w			timestamp;
nr_seq_tipo_w			bigint;
nr_seq_solucao_w		bigint;
ds_solucao_w			varchar(100);
cd_solucao_w			varchar(1000);
nr_seq_proc_interno_w	bigint;
cd_procedimento_w		bigint;
ds_recomendacao_w		varchar(4000);
nr_seq_evento_w			bigint;
nr_seq_proc_w			bigint;
ie_tipo_item_w			varchar(15);
ds_item_w				varchar(255);
qt_registros_w			bigint := 0;
ie_npt_adulta_w			varchar(1);
dt_suspensao_w			timestamp;
dt_suspensao_progr_w	timestamp;
ie_evento_solucao_w		varchar(1) := 'n';
qt_horarios_w			bigint;
nr_seq_prot_glic_w		bigint;
cd_evolucao_w			bigint;
ie_susp_mat_exec_w		varchar(1);
qt_registro_w			bigint;
cd_perfil_w				integer	:= obter_perfil_ativo;
ds_msg_w				varchar(255);
cd_item_w				varchar(255);
nr_seq_alteracao_w		bigint;

c01 CURSOR FOR
SELECT	coalesce(a.cd_refeicao,b.cd_dieta),
		a.nr_sequencia,
		b.nr_prescricao
from	prescr_medica c,
		prescr_dieta b,
		prescr_dieta_hor a
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_prescricao	= c.nr_prescricao
and		c.nr_atendimento = nr_atendimento_w
and		a.nr_seq_dieta 	= b.nr_sequencia
and		coalesce(a.dt_suspensao::text, '') = ''
and		b.cd_dieta 	= cd_dieta_w
and		a.dt_horario 	>= dt_suspensao_programada_p
and		Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';

C02 CURSOR FOR
SELECT	a.nr_sequencia,
		a.nr_prescricao,
		b.nr_sequencia,
		a.dt_horario
from	prescr_medica c,
		prescr_material b,
		prescr_mat_hor a
where	b.nr_prescricao	= a.nr_prescricao
and		b.nr_prescricao	= c.nr_prescricao
and		c.nr_atendimento = nr_atendimento_w
and		b.nr_sequencia 	= a.nr_seq_material
and		coalesce(b.cd_intervalo,cd_intervalo_w) = cd_intervalo_w
and		coalesce(b.qt_dose,qt_dose_w) = qt_dose_w
and		b.cd_material = cd_material_w
and		coalesce(b.ie_se_necessario,ie_se_necessario_w) = ie_se_necessario_w
and		coalesce(b.ie_acm,ie_acm_w) = ie_acm_w
and		a.dt_horario >= dt_suspensao_programada_p
and		coalesce(a.dt_suspensao::text, '') = '';

c03 CURSOR FOR
SELECT	a.nr_prescricao,
		a.nr_sequencia
from	prescr_medica c,
		rep_jejum a
where	a.nr_prescricao	= c.nr_prescricao
and		c.nr_atendimento = nr_atendimento_w
and		a.nr_seq_tipo	= nr_seq_tipo_w
and		a.dt_inicio 	>= dt_suspensao_programada_p;

c05 CURSOR FOR
SELECT	a.nr_sequencia,
		b.nr_seq_solucao,
		b.nr_prescricao
from	prescr_medica c,
		prescr_solucao b,
		prescr_mat_hor a
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_prescricao	= c.nr_prescricao
and		c.nr_atendimento = nr_atendimento_w
and		a.nr_seq_solucao = b.nr_seq_solucao
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(a.dt_fim_horario::text, '') = ''
and		obter_cd_solucao(b.nr_prescricao,b.nr_seq_solucao) = cd_solucao_w
and		a.dt_horario 	>= dt_suspensao_programada_p
and		((obter_se_sol_continua(b.nr_prescricao, b.nr_seq_solucao, b.ds_solucao) = 'S') or
		 (b.nr_prescricao	= nr_prescricao_p AND b.nr_seq_solucao 	= nr_sequencia_p));

c06 CURSOR FOR
SELECT	a.nr_sequencia,
		b.nr_prescricao,
		b.nr_sequencia,
		a.dt_horario
from	prescr_medica c,
		prescr_procedimento b,
		prescr_proc_hor a
where	a.nr_prescricao		= b.nr_prescricao
and		a.nr_prescricao		= c.nr_prescricao
and		c.nr_atendimento	= nr_atendimento_w
and		a.nr_seq_procedimento	= b.nr_sequencia
and		coalesce(a.dt_suspensao::text, '') = ''
and		b.cd_procedimento	= cd_procedimento_w
and		b.ie_origem_proced	= ie_origem_proced_w
and		coalesce(b.nr_seq_proc_interno,nr_seq_proc_interno_w) = nr_seq_proc_interno_w
and		coalesce(b.nr_seq_prot_glic,0)	= coalesce(nr_seq_prot_glic_w,0)
and		coalesce(b.cd_intervalo,'XPTO')	= coalesce(cd_intervalo_w,'XPTO')
and		a.dt_horario 	>= dt_suspensao_programada_p;

c07 CURSOR FOR
SELECT	a.nr_sequencia,
		b.nr_prescricao,
		b.nr_sequencia,
		a.dt_horario
from	prescr_medica c,
		prescr_recomendacao b,
		prescr_rec_hor a
where	a.nr_prescricao = b.nr_prescricao
and		a.nr_prescricao	= c.nr_prescricao
and		c.nr_atendimento = nr_atendimento_w
and		a.nr_seq_recomendacao = b.nr_sequencia
and		coalesce(a.dt_suspensao::text, '') = ''
and		coalesce(to_char(b.cd_recomendacao),b.ds_recomendacao) = ds_recomendacao_w
and		a.dt_horario 	>= dt_suspensao_programada_p;

c08 CURSOR FOR
SELECT	c.nr_sequencia,
		a.nr_sequencia,
		x.nr_sequencia,
		c.dt_horario
from	pe_prescr_proc x,
		pe_prescr_proc_hor c,
		pe_prescricao a
where	c.nr_seq_proc 	= x.nr_seq_proc
and		x.nr_seq_prescr = c.nr_seq_pe_prescr
and		x.nr_sequencia 	= c.nr_seq_pe_proc
and		x.nr_seq_prescr = a.nr_sequencia
and		c.nr_seq_pe_prescr = a.nr_sequencia
and		x.nr_seq_proc	= nr_seq_proc_w
and		a.nr_atendimento = nr_atendimento_w
and		coalesce(c.dt_suspensao::text, '') = ''
and		c.dt_horario 	>= dt_suspensao_programada_p;


BEGIN

if (ie_tipo_item_p = 'L') then
	ie_tipo_item_w := 'P';
else
	ie_tipo_item_w := ie_tipo_item_p;
end if;	

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao	= nr_prescricao_p;

ie_susp_mat_exec_w := Obter_Param_Usuario(924, 57, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_susp_mat_exec_w);
ie_ds_w := obter_param_usuario(1113, 148, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_ds_w);

if (ie_tipo_item_w <> 'E') then

	select	obter_atendimento_prescr(nr_prescricao_p)
	into STRICT	nr_atendimento_w
	;
else
	select	coalesce(max(nr_atendimento),obter_atend_sem_alta(cd_pessoa_fisica))
	into STRICT	nr_atendimento_w
	from	pe_prescricao
	where	nr_sequencia = nr_prescricao_p
	group by cd_pessoa_fisica;
end if;	

if (upper(nm_tabela_p) = 'PRESCR_MATERIAL') then

	if (ie_susp_mat_exec_w = 'N') then
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	prescr_material
		where	nr_prescricao	= nr_prescricao_p
		and		nr_sequencia	= nr_sequencia_p
		and		cd_motivo_baixa <> 0;

		if (qt_registro_w > 0) then
			--Esse item nao pode ser suspenso. Ja foi atendido pela farmacia. Parametro[57].
			CALL wheb_mensagem_pck.exibir_mensagem_abort(177249);
		end if;
		end;
	end if;

	select	coalesce(ie_se_necessario, 'N'),
			coalesce(qt_dose,0),
			coalesce(cd_intervalo,'XPTO'),
			cd_material,
			coalesce(ie_acm,'N'),
			substr((obter_desc_material(cd_material)),1,255),
			dt_suspensao_progr,
			ie_agrupador
	into STRICT	ie_se_necessario_w,
			qt_dose_w,
			cd_intervalo_w,
			cd_material_w,
			ie_acm_w,
			ds_item_w,
			dt_suspensao_progr_w,
			ie_agrupador_w
	from	prescr_material
	where	nr_prescricao	= nr_prescricao_p
	and		nr_sequencia	= nr_sequencia_p;

	if (coalesce(dt_suspensao_progr_w::text, '') = '') and (ie_agrupador_w <> 8) then
	
		update	prescr_material
		set		dt_suspensao_progr	= dt_suspensao_programada_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
		where	nr_prescricao		= nr_prescricao_p
		and		nr_sequencia		= nr_sequencia_p;	
		
		update	prescr_material
		set		dt_suspensao_progr	= dt_suspensao_programada_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
		where	nr_prescricao		= nr_prescricao_p
		and		nr_sequencia_diluicao	= nr_sequencia_p;	

		update	prescr_material
		set		dt_suspensao_progr	= dt_suspensao_programada_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
		where	nr_prescricao		= nr_prescricao_p
		and		nr_seq_kit		= nr_sequencia_p;	
	
		select	count(a.nr_sequencia)
		into STRICT	qt_horarios_w
		from	prescr_medica c,
				prescr_material b,
				prescr_mat_hor a
		where	b.nr_prescricao	= a.nr_prescricao
		and		b.nr_prescricao	= c.nr_prescricao
		and		c.nr_atendimento = nr_atendimento_w
		and		b.nr_sequencia 	= a.nr_seq_material
		and		coalesce(b.cd_intervalo,cd_intervalo_w) = cd_intervalo_w
		and		coalesce(b.qt_dose,qt_dose_w) = qt_dose_w
		and		b.cd_material = cd_material_w
		and		coalesce(b.ie_se_necessario,ie_se_necessario_w) = ie_se_necessario_w
		and		coalesce(b.ie_acm,ie_acm_w) = ie_acm_w
		and		a.dt_horario >= dt_suspensao_programada_p
		and		coalesce(a.dt_suspensao::text, '') = '';
	
		if (qt_horarios_w	= 0) then
		
			CALL gerar_alter_item_prescr_adep(nr_atendimento_w, ie_tipo_item_w, cd_material_w, nr_prescricao_p, nr_sequencia_p, 29, '', nm_usuario_p, null, null);
		
		end if;
	
	end if;
	
	open C02;
	loop
	fetch C02 into	
		nr_sequencia_w,
		nr_prescricao_w,
		nr_seq_item_w,
		dt_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		if (ie_tipo_item_w = 'M') or (ie_tipo_item_w = 'LD') or (ie_tipo_item_w = 'S') then
			begin
			CALL suspender_prescr_mat_hor(nr_sequencia_w,nm_usuario_p,null,'','N',null);
			CALL gerar_alter_hor_prescr_adep(nr_atendimento_w,ie_tipo_item_w,cd_material_w,nr_prescricao_w,nr_seq_item_w,nr_sequencia_w,dt_horario_w,29,'','',null,nm_usuario_p);
			qt_registros_w := qt_registros_w + 1;
			end;
		else
			update	prescr_mat_hor
			set		dt_suspensao		= clock_timestamp(),
					nm_usuario_susp		= nm_usuario_p
			where	nr_sequencia		= nr_sequencia_w
			and		coalesce(dt_suspensao::text, '') = ''
			and		coalesce(dt_fim_horario::text, '') = '';
			
			qt_registros_w := qt_registros_w + 1;
			
			if (ie_tipo_item_w = 'MAT') then
				CALL gerar_alter_hor_prescr_adep(nr_atendimento_w,ie_tipo_item_w,cd_material_w,nr_prescricao_w,nr_seq_item_w,nr_sequencia_w,dt_horario_w,29,'','',null,nm_usuario_p);			
			elsif (ie_tipo_item_w		= 'SNE') and (ie_evento_solucao_w	= 'N') then
			
				select	nextval('prescr_solucao_evento_seq')
				into STRICT	nr_seq_evento_w
				;
		
				insert into prescr_solucao_evento(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_solucao,
								nr_seq_material,
								nr_seq_procedimento,
								nr_seq_nut,
								nr_seq_nut_neo,
								ie_tipo_dosagem,
								qt_dosagem,
								qt_vol_infundido,
								qt_vol_desprezado,
								cd_pessoa_fisica,
								ie_alteracao,
								dt_alteracao,
								ie_evento_valido,
								nr_seq_motivo,
								ds_observacao,
								ds_justificativa,
								ie_tipo_solucao
									)
				values (
								nr_seq_evento_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_prescricao_w,
								null,
								nr_seq_item_w,
								null,
								null,
								null,
								null,
								null,
								null,
								null,
								obter_dados_usuario_opcao(nm_usuario_p, 'C'),
								23,
								clock_timestamp(),
								'S',
								null,
								null,
								'',
								2
								);
								
				ie_evento_solucao_w	:= 'S';
			end if;			
		end if;			
		end;
	end loop;
	close C02;

	CALL Atualiza_ie_horario_susp(nr_prescricao_p, nr_sequencia_p, nm_tabela_p);

elsif (upper(nm_tabela_p) = 'PRESCR_DIETA') then

	select	a.cd_dieta,
		b.nr_horas_validade,
		a.dt_suspensao_progr
	into STRICT	cd_dieta_w,
		nr_horas_validade_w,
		dt_suspensao_progr_w
	from	prescr_dieta a,
		prescr_medica b
	where	a.nr_prescricao = nr_prescricao_p
	and	a.nr_sequencia 	= nr_sequencia_p
	and	a.nr_prescricao	= b.nr_prescricao;

	select	obter_desc_expressao(287903)||' '||max(nm_dieta)
	into STRICT	ds_item_w
	from	dieta
	where	cd_dieta = cd_dieta_w;

	if (coalesce(dt_suspensao_progr_w::text, '') = '') then
	
		update	prescr_dieta
		set	dt_suspensao_progr	= dt_suspensao_programada_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_p;	
	
		select	count(a.nr_sequencia)
		into STRICT	qt_horarios_w
		from	prescr_medica c,
			prescr_dieta b,
			prescr_dieta_hor a
		where	a.nr_prescricao = b.nr_prescricao
		and	a.nr_prescricao	= c.nr_prescricao
		and	c.nr_atendimento = nr_atendimento_w
		and	a.nr_seq_dieta 	= b.nr_sequencia
		and	coalesce(a.dt_suspensao::text, '') = ''
		and	b.cd_dieta 	= cd_dieta_w
		and	a.dt_horario 	>= dt_suspensao_programada_p
		and	Obter_se_horario_liberado(a.dt_lib_horario, a.dt_horario) = 'S';	
	
		if (qt_horarios_w	= 0) then
		
			CALL gerar_alter_item_prescr_adep(nr_atendimento_w, ie_tipo_item_w, cd_dieta_w, nr_prescricao_p, nr_sequencia_p, 29, '', nm_usuario_p, null, null);
		
		end if;	
	
	end if;
	
	open c01;
	loop
	fetch c01 into
		cd_refeicao_w,
		nr_seq_dieta_hor_w,
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		if (ie_ds_w = 'S') then
			begin
			SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_w, nr_atendimento_w, 'D', cd_refeicao_w, null, null, nr_horas_validade_w, null, nr_seq_dieta_hor_w, null, nr_prescricao_w, nr_prescricao_w, null, 'N', 5, null, null, null, null, null, null, nm_usuario_p, 'N', null, null, null, 'N', null, 'N', null, 'N', cd_perfil_w, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
			end;
		else
			begin
			SELECT * FROM gerar_alteracao_horario_prescr(cd_estabelecimento_w, nr_atendimento_w, 'DS', cd_dieta_w, null, null, nr_horas_validade_w, null, nr_seq_dieta_hor_w, null, nr_prescricao_w, nr_prescricao_w, null, 'N', 5, null, null, null, null, null, null, nm_usuario_p, 'N', null, null, null, 'N', null, 'N', null, 'N', cd_perfil_w, null, 'N', null, null, null, null, null, 'N', null, null, null, null, '', '', cd_evolucao_w, null, null, ds_msg_w) INTO STRICT cd_evolucao_w, ds_msg_w;
			end;
		end if;
		qt_registros_w := qt_registros_w + 1;	
	end loop;
	close c01;
	
	CALL Atualiza_ie_horario_susp(nr_prescricao_p, nr_sequencia_p, nm_tabela_p);	
	
elsif (upper(nm_tabela_p) = 'REP_JEJUM') then
	
	select	nr_seq_tipo
	into STRICT	nr_seq_tipo_w
	from	rep_jejum
	where	nr_prescricao	= nr_prescricao_p
	and	nr_sequencia	= nr_sequencia_p;
	
	select	max(ds_tipo)
	into STRICT	ds_item_w
	from	rep_tipo_jejum
	where	nr_sequencia = nr_seq_tipo_w;	
	
	open C03;
	loop
	fetch C03 into	
		nr_prescricao_w,
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		update	rep_jejum
		set	ie_suspenso	= 'S',
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_w
		and	nr_sequencia	= nr_sequencia_w;		
		
		select	max(PKG_DATE_FORMATERS.to_varchar(c.dt_inicio, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p) || '-' || PKG_DATE_FORMATERS.to_varchar(c.dt_fim, 'timestamp', WHEB_USUARIO_PCK.GET_CD_ESTABELECIMENTO, nm_usuario_p))
		into STRICT	cd_item_w
		from	rep_jejum c
		where	nr_prescricao	= nr_prescricao_w
		and		nr_sequencia	= nr_sequencia_p;
		
		SELECT	nextval('prescr_mat_alteracao_seq')
		INTO STRICT	nr_seq_alteracao_w
		;
		
		INSERT	INTO	prescr_mat_alteracao(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_prescricao,
			nr_seq_prescricao,
			nr_seq_horario,
			dt_alteracao,
			cd_pessoa_fisica,
			ie_alteracao,
			ds_justificativa,
			ie_tipo_item,
			dt_horario,
			nr_atendimento,
			cd_item,
			qt_dose_adm,
			cd_um_dose_adm,
			qt_dose_original,
			nr_agrupamento,
			ie_acm_sn,
			cd_medico_solic,
			ds_observacao,
			nr_seq_motivo_susp,
			ie_mostra_adep,
			nr_seq_assinatura,
			nr_seq_lote
			)
		VALUES (
			nr_seq_alteracao_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_prescricao_w,
			null,
			null,
			clock_timestamp(),
			obter_dados_usuario_opcao(nm_usuario_p,'C'),
			13,
			null,
			'J',
			clock_timestamp(),
			nr_atendimento_w,
			cd_item_w,
			null,
			null,
			null,
			null,
			'N',
			null,
			null,
			cd_motivo_susp_w,
			'S',
			null,
			null
			);
		qt_registros_w := qt_registros_w + 1;			
		end;
	end loop;
	close C03;
	
elsif (upper(nm_tabela_p) = 'NUT_PAC') then

	select	max(dt_suspensao)
	into STRICT	dt_suspensao_w
	from	nut_pac
	where	nr_sequencia = nr_sequencia_p;
	
	if (coalesce(dt_suspensao_w::text, '') = '') then

		update	NUT_PAC
		set	ie_suspenso	= 'S',
			dt_suspensao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_sequencia_p;

		select	max(ie_npt_adulta)
		into STRICT	ie_npt_adulta_w
		from	nut_pac
		where	nr_sequencia = nr_sequencia_p;
		
		if (ie_npt_adulta_w = 'N') then
			ds_item_w := wheb_mensagem_pck.get_texto(308551); -- NPT Neonatal
		elsif (ie_npt_adulta_w = 'S') then
			select	coalesce(max(CASE WHEN x.ie_forma='P' THEN  wheb_mensagem_pck.get_texto(308606) ||' ' || y.ds_npt  ELSE obter_valor_dominio(1988,x.ie_forma) END ),wheb_mensagem_pck.get_texto(308552)) -- Protocolo	-- NPT Adulta
			into STRICT	ds_item_w
			FROM nut_pac x
LEFT OUTER JOIN protocolo_npt y ON (x.nr_seq_protocolo = y.nr_sequencia)
WHERE x.nr_sequencia = nr_sequencia_p;
		else
			ds_item_w := wheb_mensagem_pck.get_texto(308913); -- NPT
		end if;		

		qt_registros_w := qt_registros_w + 1;			
		
		select	nextval('prescr_solucao_evento_seq')
		into STRICT	nr_seq_evento_w
		;
		
		insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							nr_seq_material,
							nr_seq_procedimento,
							nr_seq_nut,
							nr_seq_nut_neo,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ds_justificativa,
							ie_tipo_solucao
							)
						values (
							nr_seq_evento_w,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_prescricao_p,
							null,
							null,
							null,
							null,
							nr_sequencia_p,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							23,
							clock_timestamp(),
							'S',
							null,
							null,
							'',
							5
							);
	end if;
	
elsif (upper(nm_tabela_p) = 'PRESCR_SOLUCAO') then

	select	obter_cd_solucao(nr_prescricao_p, nr_sequencia_p),
		substr(coalesce(ds_solucao,obter_prim_comp_sol(nr_prescricao,nr_seq_solucao)),1,255)
	into STRICT	cd_solucao_w,
		ds_item_w
	from	prescr_solucao
	where	nr_prescricao = nr_prescricao_p
	and	nr_seq_solucao = nr_sequencia_p;

	open C05;
	loop
	fetch C05 into	
		nr_sequencia_w,
		nr_seq_item_w,
		nr_prescricao_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin
		update	prescr_mat_hor
		set	dt_suspensao 	= clock_timestamp(),
			nm_usuario_adm 	= nm_usuario_p,
			dt_atualizacao 	= clock_timestamp(),
			nm_usuario 	= nm_usuario_p
		where	nr_sequencia 	= nr_sequencia_w;
		
		qt_registros_w := qt_registros_w + 1;					
		
		if (ie_evento_solucao_w	= 'N') then

			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_seq_evento_w
			;
		
			insert into prescr_solucao_evento(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_solucao,
					nr_seq_material,
					nr_seq_procedimento,
					nr_seq_nut,
					nr_seq_nut_neo,
					ie_tipo_dosagem,
					qt_dosagem,
					qt_vol_infundido,
					qt_vol_desprezado,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					nr_seq_motivo,
					ds_observacao,
					ds_justificativa,
					ie_tipo_solucao
					)
			values (
					nr_seq_evento_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_w,
					nr_seq_item_w,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					23,
					clock_timestamp(),
					'S',
					null,
					null,
					'',
					1
					);	
		
			ie_evento_solucao_w	:= 'S';
		
		end if;
	
		end;
	end loop;
	close C05;

elsif (upper(nm_tabela_p) = 'PRESCR_GASOTERAPIA') then

	select	max(a.dt_suspensao),
		max(a.dt_suspensao_progr),
		coalesce(max(a.dt_prev_execucao),max(b.dt_inicio_prescr))
	into STRICT	dt_suspensao_w,
		dt_suspensao_progr_w,
		dt_horario_w
	from	prescr_medica b,
		prescr_gasoterapia a
	where	a.nr_prescricao = nr_prescricao_p
	and	a.nr_sequencia	= nr_sequencia_p
	and	a.nr_prescricao	= b.nr_prescricao
	and	b.nr_prescricao	= nr_prescricao_p;
	
	if (coalesce(dt_suspensao_progr_w::text, '') = '') then

		update	prescr_gasoterapia
		set	dt_suspensao_progr	= dt_suspensao_programada_p,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_p;

	end if;	
	
	if (coalesce(dt_suspensao_w::text, '') = '') and (dt_horario_w	> dt_suspensao_programada_p) then

		update	prescr_gasoterapia
		set	ie_suspenso	= 'S',
			dt_suspensao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_p;
		
		select	max(a.ds_gas)
		into STRICT	ds_item_w
		from	gas a,
			prescr_gasoterapia b
		where	a.nr_sequencia = b.nr_seq_gas
		and	b.nr_prescricao = nr_prescricao_p
		and	b.nr_sequencia  = nr_sequencia_p;

		qt_registros_w := qt_registros_w + 1;					
		
		update	prescr_gasoterapia_hor
		set		dt_suspensao		= clock_timestamp(),
				nm_usuario_susp		= nm_usuario_p
		where	nr_prescricao		= nr_prescricao_p
		and		nr_seq_gasoterapia	= nr_sequencia_p
		and		dt_horario			>= dt_suspensao_programada_p
		and		coalesce(dt_suspensao::text, '') = ''
		and		coalesce(dt_fim_horario::text, '') = '';
		
		select	nextval('prescr_gasoterapia_evento_seq')
		into STRICT	nr_seq_evento_w
		;

		insert into prescr_gasoterapia_evento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_gasoterapia,
			ie_evento,
			dt_evento,
			ie_evento_valido)
		values (nr_seq_evento_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_sequencia_p,
			'SP',
			clock_timestamp(),
			'S');	
	end if;
	
elsif (upper(nm_tabela_p) = 'PRESCR_PROCEDIMENTO') then
	
	select	cd_procedimento,
		ie_origem_proced,
		coalesce(nr_seq_proc_interno,0),
		substr(obter_desc_proced_prescr(nr_prescricao, nr_sequencia),1,255),
		dt_suspensao_progr,
		nr_seq_prot_glic,
		cd_intervalo
	into STRICT	cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		ds_item_w,
		dt_suspensao_progr_w,
		nr_seq_prot_glic_w,
		cd_intervalo_w
	from	prescr_procedimento
	where	nr_prescricao 	= nr_prescricao_p
	and	nr_sequencia 	= nr_sequencia_p;
	
	if (coalesce(dt_suspensao_progr_w::text, '') = '') then
	
		update	prescr_procedimento
		set	dt_suspensao_progr	= dt_suspensao_programada_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_p;	
	
		select	count(a.nr_sequencia)
		into STRICT	qt_horarios_w
		from	prescr_medica c,
			prescr_procedimento b,
			prescr_proc_hor a
		where	a.nr_prescricao = b.nr_prescricao
		and	a.nr_prescricao	= c.nr_prescricao
		and	c.nr_atendimento = nr_atendimento_w
		and	a.nr_seq_procedimento = b.nr_sequencia
		and	coalesce(a.dt_suspensao::text, '') = ''
		and	b.cd_procedimento = cd_procedimento_w
		and	b.ie_origem_proced = ie_origem_proced_w
		and	coalesce(b.nr_seq_proc_interno,nr_seq_proc_interno_w) = nr_seq_proc_interno_w
		and	coalesce(b.nr_seq_prot_glic,0)	= coalesce(nr_seq_prot_glic_w,0)
		and	coalesce(b.cd_intervalo,'XPTO')	= coalesce(cd_intervalo_w,'XPTO')
		and	a.dt_horario 	>= dt_suspensao_programada_p;	
	
		if (qt_horarios_w	= 0) then
		
			CALL gerar_alter_item_prescr_adep(nr_atendimento_w, ie_tipo_item_w, cd_procedimento_w, nr_prescricao_p, nr_sequencia_p, 29, '', nm_usuario_p, null, null);
		
		end if;		
	
	end if;	
	
	open C06;
	loop
	fetch C06 into	
		nr_sequencia_w,
		nr_prescricao_w,
		nr_seq_item_w,
		dt_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin
		CALL suspender_prescr_proc_hor(nr_sequencia_w,nm_usuario_p);

		qt_registros_w := qt_registros_w + 1;							

		if (ie_tipo_item_w = 'P') then
			CALL gerar_alter_hor_prescr_adep(nr_atendimento_w,ie_tipo_item_w,cd_procedimento_w,nr_prescricao_w,nr_seq_item_w,nr_sequencia_w,dt_horario_w,29,'','',null,nm_usuario_p);
		elsif (ie_tipo_item_w		= 'HM') and (ie_evento_solucao_w	= 'N') then	
			
			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_seq_evento_w
			;
	
			insert into prescr_solucao_evento(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_solucao,
								nr_seq_material,
								nr_seq_procedimento,
								nr_seq_nut,
								nr_seq_nut_neo,
								ie_tipo_dosagem,
								qt_dosagem,
								qt_vol_infundido,
								qt_vol_desprezado,
								cd_pessoa_fisica,
								ie_alteracao,
								dt_alteracao,
								ie_evento_valido,
								nr_seq_motivo,
								ds_observacao,
								ds_justificativa,
								ie_tipo_solucao
								)
							values (
								nr_seq_evento_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_prescricao_w,
								null,
								null,
								nr_seq_item_w,
								null,
								null,
								null,
								null,
								null,
								null,
								obter_dados_usuario_opcao(nm_usuario_p, 'C'),
								23,
								clock_timestamp(),
								'S',
								null,
								null,
								'',
								3
								);
								
			ie_evento_solucao_w	:= 'S';
			
		elsif (ie_tipo_item_w in ('G','C','I')) then
			select	nextval('prescr_mat_alteracao_seq')
			into STRICT	nr_seq_evento_w
			;

			insert into prescr_mat_alteracao(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								dt_atualizacao_nrec,
								nm_usuario_nrec,
								nr_prescricao,
								nr_seq_procedimento,
								dt_alteracao,
								cd_pessoa_fisica,
								ie_alteracao,
								nr_seq_motivo,
								ds_justificativa,
								ie_tipo_item,
								nr_atendimento,
								cd_item,
								nr_seq_proc_interno,
								nr_seq_motivo_susp
								)
							values (
								nr_seq_evento_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_prescricao_w,
								nr_seq_item_w,
								clock_timestamp(),
								obter_dados_usuario_opcao(nm_usuario_p,'C'),
								29,
								null,
								'',
								ie_tipo_item_w,
								nr_atendimento_w,
								cd_procedimento_w,
								nr_seq_proc_interno_w,
								null
								);								
		end if;		
		end;
	end loop;
	close C06;
	
	CALL Atualiza_ie_horario_susp(nr_prescricao_p, nr_sequencia_p, nm_tabela_p);	
	
elsif (upper(nm_tabela_p) = 'PRESCR_RECOMENDACAO') then

	select	coalesce(to_char(a.cd_recomendacao), a.ds_recomendacao),
		substr(coalesce(b.ds_tipo_recomendacao,a.ds_recomendacao),1,255),
		a.dt_suspensao_progr
	into STRICT	ds_recomendacao_w,
		ds_item_w,
		dt_suspensao_progr_w
	FROM prescr_recomendacao a
LEFT OUTER JOIN tipo_recomendacao b ON (a.cd_recomendacao = b.cd_tipo_recomendacao)
WHERE a.nr_prescricao = nr_prescricao_p and a.nr_sequencia = nr_sequencia_p;
	
	if (coalesce(dt_suspensao_progr_w::text, '') = '') then
	
		update	prescr_recomendacao
		set	dt_suspensao_progr	= dt_suspensao_programada_p,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_prescricao	= nr_prescricao_p
		and	nr_sequencia	= nr_sequencia_p;	
	
		select	count(a.nr_sequencia)
		into STRICT	qt_horarios_w
		from	prescr_medica c,
			prescr_recomendacao b,
			prescr_rec_hor a
		where	a.nr_prescricao = b.nr_prescricao
		and	a.nr_prescricao	= c.nr_prescricao
		and	c.nr_atendimento = nr_atendimento_w
		and	a.nr_seq_recomendacao = b.nr_sequencia
		and	coalesce(a.dt_suspensao::text, '') = ''
		and	coalesce(to_char(b.cd_recomendacao),b.ds_recomendacao) = ds_recomendacao_w
		and	a.dt_horario 	>= dt_suspensao_programada_p;	
	
		if (qt_horarios_w	= 0) then
		
			CALL gerar_alter_item_prescr_adep(nr_atendimento_w, ie_tipo_item_w, ds_recomendacao_w, nr_prescricao_p, nr_sequencia_p, 29, '', nm_usuario_p, null, null);
		
		end if;			
	
	end if;		
	
	open C07;
	loop
	fetch C07 into	
		nr_sequencia_w,
		nr_prescricao_w,
		nr_seq_item_w,
		dt_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin
		CALL suspender_prescr_rec_hor(nr_sequencia_w,nm_usuario_p);	
		qt_registros_w := qt_registros_w + 1;									
		if (ie_tipo_item_w = 'R') then
			CALL gerar_alter_hor_prescr_adep(nr_atendimento_w,ie_tipo_item_w,ds_recomendacao_w,nr_prescricao_w,nr_seq_item_w,nr_sequencia_w,dt_horario_w,29,'','',null,nm_usuario_p);
		end if;	
		end;
	end loop;
	close C07;
	
	CALL Atualiza_ie_horario_susp(nr_prescricao_p, nr_sequencia_p, nm_tabela_p);	
	
elsif (upper(nm_tabela_p) = 'PE_PRESCR_PROC_HOR') then

	select	a.nr_sequencia,
		a.ds_procedimento
	into STRICT	nr_seq_proc_w,
		ds_item_w
	from	pe_procedimento a,
		pe_prescr_proc b
	where	b.nr_sequencia 	= nr_sequencia_p
	and	b.nr_seq_prescr	= nr_prescricao_p
	and	a.nr_sequencia	= b.nr_seq_proc;
	
	
	open C08;
	loop
	fetch C08 into	
		nr_sequencia_w,
		nr_prescricao_w,
		nr_seq_item_w,
		dt_horario_w;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin
		CALL suspender_pe_prescr_proc_hor(nr_sequencia_w,nm_usuario_p);

		qt_registros_w := qt_registros_w + 1;									

		select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_evento_w
		;

		insert into prescr_mat_alteracao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_prescricao,
						nr_seq_item_sae,
						dt_alteracao,
						cd_pessoa_fisica,
						ie_alteracao,
						nr_seq_motivo,
						ds_justificativa,
						ie_tipo_item,
						nr_atendimento,
						cd_item,
						nr_seq_horario_sae
						)
					values (
						nr_seq_evento_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_prescricao_w,
						nr_seq_item_w,
						clock_timestamp(),
						obter_dados_usuario_opcao(nm_usuario_p,'C'),
						29,
						null,
						'',
						ie_tipo_item_w,
						nr_atendimento_w,
						to_char(nr_seq_proc_w),
						nr_sequencia_w
						);		
		end;
	end loop;
	close C08;
	
end if;

if (ds_item_w IS NOT NULL AND ds_item_w::text <> '') then
	CALL plt_avisar_nao_copiado(ds_item_w,'',ie_tipo_item_p,nr_prescricao_p,qt_registros_w,nm_usuario_p,null,null,null, null,cd_perfil_w,cd_estabelecimento_w);
end if;	

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_gerar_suspensao_programada ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_tabela_p text, ie_tipo_item_p text, nm_usuario_p text, dt_suspensao_programada_p timestamp) FROM PUBLIC;

