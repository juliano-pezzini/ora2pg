-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE reg_benef_prop AS (nr_seq_benef_prop bigint, ie_tipo_benef varchar(10));


CREATE OR REPLACE PROCEDURE pls_adicionar_sca_prop_benef ( ds_conteudo_p text, nr_seq_proposta_p bigint, nr_seq_canal_venda_p bigint, nr_seq_vendedor_pf_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_conteudo_aux_w		varchar(4000);
nr_posicao_separacao_w		bigint;
nr_posicao_separacao_ww		bigint;
ds_dados_w			varchar(4000);
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_benef_prop_w		bigint;
nr_vetor_w			bigint;
ds_erro_w			varchar(4000);
i				bigint;
qt_registros_w			bigint;
dt_inicio_proposta_w		timestamp;
ie_tipo_benef_w			varchar(10);
ie_tipo_benef_sca_w		bigint;
type vetor is table of reg_benef_prop index by integer;
vetor_w				vetor;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END
	from	pls_proposta_beneficiario
	where	nr_seq_proposta = nr_seq_proposta_p
	and	coalesce(dt_cancelamento::text, '') = '';


BEGIN

select	dt_inicio_proposta
into STRICT	dt_inicio_proposta_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

open C01;
loop
fetch C01 into
	nr_seq_benef_prop_w,
	ie_tipo_benef_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	nr_vetor_w	:= vetor_w.count+1;
	vetor_w[nr_vetor_w].nr_seq_benef_prop	:= nr_seq_benef_prop_w;
	vetor_w[nr_vetor_w].ie_tipo_benef	:= ie_tipo_benef_w;

	end;
end loop;
close C01;

ds_conteudo_aux_w	:= ds_conteudo_p;

while(ds_conteudo_aux_w IS NOT NULL AND ds_conteudo_aux_w::text <> '') loop
	nr_posicao_separacao_w	:= position(';' in ds_conteudo_aux_w);

	if (nr_posicao_separacao_w	> 0) then
		ds_dados_w		:= substr(ds_conteudo_aux_w,1,nr_posicao_separacao_w-1);
		nr_posicao_separacao_ww	:= position(',' in ds_dados_w);

		nr_seq_plano_w		:= (substr(ds_dados_w,1,nr_posicao_separacao_ww-1))::numeric;

		ds_dados_w		:= substr(ds_dados_w,nr_posicao_separacao_ww+1,length(ds_dados_w));
		nr_posicao_separacao_ww	:= position(',' in ds_dados_w);

		nr_seq_tabela_w		:= (substr(ds_dados_w,1,nr_posicao_separacao_ww-1))::numeric;

		ie_tipo_benef_sca_w	:= (substr(ds_dados_w,nr_posicao_separacao_ww+1,length(ds_dados_w)))::numeric;


		ds_conteudo_aux_w	:= substr(ds_conteudo_aux_w,nr_posicao_separacao_w+1,length(ds_conteudo_aux_w));

		if (ie_tipo_benef_sca_w = 0) then
			ie_tipo_benef_w	:= 'A';
		elsif (ie_tipo_benef_sca_w = 1) then
			ie_tipo_benef_w	:= 'T';
		elsif (ie_tipo_benef_sca_w = 2) then
			ie_tipo_benef_w	:= 'D';
		end if;

		i			:= 0;
		for i in 1..vetor_w.count loop
			if	((ie_tipo_benef_w = 'A') or (vetor_w[i].ie_tipo_benef = ie_tipo_benef_w)) then
				ds_erro_w := pls_consistir_sca_proposta(vetor_w[i].nr_seq_benef_prop, nr_seq_plano_w, nr_seq_tabela_w, cd_estabelecimento_p, ds_erro_w, nm_usuario_p);

				if (coalesce(ds_erro_w::text, '') = '') then
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_sca_vinculo
					where	NR_SEQ_BENEF_PROPOSTA	= vetor_w[i].nr_seq_benef_prop
					and	nr_seq_plano		= nr_seq_plano_w;

					if (qt_registros_w = 0) then
						insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								nr_seq_benef_proposta,nr_seq_plano,nr_seq_tabela,DT_INICIO_VIGENCIA,NR_SEQ_VENDEDOR_CANAL,
								nr_seq_vendedor_pf)
						values (	nextval('pls_sca_vinculo_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
								vetor_w[i].nr_seq_benef_prop,nr_seq_plano_w,nr_seq_tabela_w,dt_inicio_proposta_w,nr_seq_canal_venda_p,
								nr_seq_vendedor_pf_p);
					end if;
				end if;
			end if;
		end loop;
	else
		ds_conteudo_aux_w	:= null;
	end if;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_adicionar_sca_prop_benef ( ds_conteudo_p text, nr_seq_proposta_p bigint, nr_seq_canal_venda_p bigint, nr_seq_vendedor_pf_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

