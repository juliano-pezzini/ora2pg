-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_get_patients_symptoms ( cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_atributo_rest_w	varchar(50);
qt_registros_w	bigint;
qt_regra_w	bigint;
nr_seq_classif_w	bigint;
ie_sintomas_w	varchar(1);
ds_classif_w	varchar(60);
qt_commit_w	integer := 0;
nr_seq_detail_w	bigint;
qt_com_sintoma_w	bigint := 0;
qt_sem_sintoma_w	bigint := 0;
ds_sintomas_w	varchar(500) := '';
SQLRegraCadastro	varchar(2000) := null;
nr_Seq_panel_W  bigint;
ie_lib_w varchar(1);

C01 CURSOR FOR
	SELECT	a.nr_atendimento,
			a.cd_pessoa_fisica,
			substr(obter_sexo_pf(a.cd_pessoa_fisica,'D'),1,255) ds_sexo,
			substr(obter_leito_atual_pac(a.nr_atendimento),1,50) ds_leito,
			(SELECT max(x.ds_queixa) from queixa_paciente x where x.nr_sequencia = a.nr_seq_queixa) ds_queixa,
			(select max(y.nr_sequencia) from triagem_pronto_atend y where y.nr_atendimento = a.nr_atendimento) nr_seq_triagem,
			OBTER_IDADE(p.dt_nascimento,clock_timestamp(),'E') ds_age,
			obter_setor_pf(p.cd_pessoa_fisica) ds_setor
	from	atendimento_paciente a, pessoa_Fisica p
	where	a.cd_pessoa_fisica = p.cd_pessoa_fisica
	and     coalesce(a.dt_alta::text, '') = ''
	and 	coalesce(a.dt_cancelamento::text, '') = ''
	and	    a.cd_estabelecimento = cd_estabelecimento_p
	and     a.dt_entrada > to_date('01/01/2020','dd/mm/yyyy');

C02 CURSOR FOR
	SELECT	a.nm_tabela,
		a.nm_atributo,
		a.nr_seq_template,
		a.nr_seq_item_temp,
		a.nr_seq_aval,
		a.nr_seq_item_aval,
		a.ds_valor,
		a.ie_operacao,
		a.ds_sintomas,
		(	SELECT	coalesce(max('S'),'N')
			from	tabela_atributo b
			where	b.nm_tabela = a.nm_tabela
			and	    b.nm_atributo = 'NR_ATENDIMENTO') ie_nr_atendimento,
		(	select	coalesce(max('S'),'N')
			from	tabela_atributo b
			where	b.nm_tabela = a.nm_tabela
			and	    b.nm_atributo = 'CD_PACIENTE') ie_cd_paciente,
		(	select	coalesce(max('S'),'N')
			from	tabela_atributo b
			where	b.nm_tabela = a.nm_tabela
			and	    b.nm_atributo = 'CD_PESSOA_FISICA') ie_cd_pessoa_fisica,
		( 	select  coalesce(max('S'),'N')
			from	tabela_atributo b
			where	b.nm_tabela = a.nm_tabela
			and	    b.nm_atributo = 'DT_LIBERACAO') ie_dt_liberacao,
		( 	select  coalesce(max('S'),'N')
			from	tabela_atributo b
			where	b.nm_tabela = a.nm_tabela
			and	    b.nm_atributo = 'DT_INATIVACAO') ie_dt_inativacao 
	from	pfcs_clinical_control a;
BEGIN

select nextval('pfcs_panel_seq')
into STRICT   nr_Seq_panel_W
;

insert into pfcs_panel(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ie_situation,
	nr_seq_indicator,
	vl_indicator,
	nr_seq_operational_level)
values (
	nr_Seq_panel_W,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	'T',
	75,
	0,
	cd_estabelecimento_p);

commit;

select	count(*)
into STRICT	qt_regra_w
from	pfcs_clinical_control;

for reg_atendimentos in C01 loop
	begin
	ds_sintomas_w := '';

	if (qt_regra_w > 0) then
		begin
		for reg_cadastros in C02 loop
			begin
			if (reg_cadastros.ie_nr_atendimento = 'S') then
				ds_atributo_rest_w := 'NR_ATENDIMENTO = ' || reg_atendimentos.nr_atendimento;
			elsif (reg_cadastros.ie_cd_paciente = 'S') then
				ds_atributo_rest_w := 'CD_PACIENTE = ' || reg_atendimentos.cd_pessoa_fisica;
			elsif (reg_cadastros.ie_cd_pessoa_fisica = 'S') then
				ds_atributo_rest_w := 'CD_PESSOA_FISICA = ' || reg_atendimentos.cd_pessoa_fisica;
			end if;

--			Cadastro Tabela e Atributo
			if (reg_cadastros.nm_tabela IS NOT NULL AND reg_cadastros.nm_tabela::text <> '' AND reg_cadastros.nm_atributo IS NOT NULL AND reg_cadastros.nm_atributo::text <> '') then
				begin
				if (reg_cadastros.nm_tabela = 'PE_PRESCR_ITEM_RESULT') then
					begin
					SQLRegraCadastro :=	' select	count(*) qt_registro' ||
							' from	pe_prescricao a' ||
							' where	a.nr_atendimento = ' || reg_atendimentos.nr_atendimento ||
							' and	a.dt_liberacao is not null' ||
							' and   a.dt_inativacao is null '||
							' and	exists (	select	1' ||
							' 		from	pe_prescr_item_result b' ||
							' 		where	b.nr_seq_prescr = a.nr_sequencia' ||
							' 		and	' || reg_cadastros.nm_atributo || ' ' || reg_cadastros.ie_operacao || ' ' || chr(39) || reg_cadastros.ds_valor || chr(39) || ')';

					EXECUTE SQLRegraCadastro
					into STRICT    qt_registros_w;

					if (coalesce(qt_registros_w,0) > 0) then
						ds_sintomas_w := ds_sintomas_w || ', ' || reg_cadastros.ds_sintomas;
					end if;
					end;
				else
					begin
					SQLRegraCadastro :=	' select	count(*) qt_registro' ||
							' from	' || reg_cadastros.nm_tabela || ' a' ||
							' where	a.' || ds_atributo_rest_w ||
							' and	' || reg_cadastros.nm_atributo || ' ' || reg_cadastros.ie_operacao || ' ' || chr(39) || reg_cadastros.ds_valor || chr(39);
						
					ie_lib_w := reg_cadastros.ie_dt_liberacao;
					
					if (reg_cadastros.nm_tabela = 'ATENDIMENTO_SINAL_VITAL') then
						select coalesce(max(IE_LIB_SINAL_VITAL),'N')
						into STRICT   ie_lib_w
						from   parametro_medico
						where  cd_estabelecimento = cd_estabelecimento_p;
					end if;
						
					if (ie_lib_w = 'S') then
						SQLRegraCadastro :=	SQLRegraCadastro || ' and dt_liberacao is not null ';
						
						if (reg_cadastros.ie_dt_inativacao = 'S') then
							SQLRegraCadastro :=	SQLRegraCadastro || ' and dt_inativacao is null ';
						end if;
					end if;
					
					EXECUTE SQLRegraCadastro
					into STRICT    qt_registros_w;

					if (coalesce(qt_registros_w,0) > 0) then
						ds_sintomas_w := ds_sintomas_w || ', ' || reg_cadastros.ds_sintomas;
					end if;
					end;
				end if;
				end;
--			Cadastro Template
			elsif (reg_cadastros.nr_seq_template IS NOT NULL AND reg_cadastros.nr_seq_template::text <> '' AND reg_cadastros.nr_seq_item_temp IS NOT NULL AND reg_cadastros.nr_seq_item_temp::text <> '') then
				begin
				SQLRegraCadastro :=	' select	count(*) qt_registro' ||
						' from (	select	substr(get_ehr_vlr(a.nr_sequencia,' || reg_cadastros.nr_seq_item_temp || ',null,null,' || chr(39) || 'N' || chr(39) || '),1,50) ds_resultado' ||
						' 	from	ehr_reg_template a,' ||
						' 		ehr_registro b' ||
						' 	where	a.nr_seq_reg = b.nr_sequencia' ||
						' 	and	b.nr_atendimento = ' || reg_atendimentos.nr_atendimento ||
						' 	and	b.dt_liberacao is not null ' ||
						'   and b.dt_inativacao is null ) x' ||
						' where	x.ds_resultado ' || reg_cadastros.ie_operacao || ' ' || chr(39) || reg_cadastros.ds_valor || chr(39);

				EXECUTE SQLRegraCadastro
				into STRICT    qt_registros_w;

				if (coalesce(qt_registros_w,0) > 0) then
					ds_sintomas_w := ds_sintomas_w || ', ' || reg_cadastros.ds_sintomas;
				end if;
				end;
--			Cadastro Avaliacao
			elsif (reg_cadastros.nr_seq_aval IS NOT NULL AND reg_cadastros.nr_seq_aval::text <> '' AND reg_cadastros.nr_seq_item_aval IS NOT NULL AND reg_cadastros.nr_seq_item_aval::text <> '') then
				begin
				SQLRegraCadastro :=	' select	count(*) qt_registro' ||
						' from (	select	substr(obter_result_avaliacao(b.nr_sequencia,a.nr_sequencia),1,50) ds_resultado' ||
						' 	from	med_avaliacao_paciente b,' ||
						' 			med_item_avaliar a' ||
						' 			where	a.nr_seq_tipo = b.nr_seq_tipo_avaliacao' ||
						' 			and	b.nr_atendimento = ' || reg_atendimentos.nr_atendimento ||
						' 			and	b.nr_seq_tipo_avaliacao = ' || reg_cadastros.nr_seq_aval ||
						' 			and	a.nr_sequencia = ' || reg_cadastros.nr_seq_item_aval ||
						'   		and b.dt_liberacao is not null ' ||
						'   		and b.dt_inativacao is null ) x' ||
						' where	x.ds_resultado ' || reg_cadastros.ie_operacao || ' ' || chr(39) || reg_cadastros.ds_valor || chr(39);

				EXECUTE SQLRegraCadastro
				into STRICT    qt_registros_w;

				if (coalesce(qt_registros_w,0) > 0) then
					ds_sintomas_w := ds_sintomas_w || ', ' || reg_cadastros.ds_sintomas;
				end if;
				end;
			end if;
			end;
		end loop;
		end;
	else
		begin
		if (position('COVID' in upper(reg_atendimentos.ds_queixa)) > 0) then
			ds_sintomas_w := reg_atendimentos.ds_queixa;
		end if;

		if (coalesce(reg_atendimentos.nr_seq_triagem,0) > 0) then
			begin
			select	max(a.nr_seq_classif)
			into STRICT	nr_seq_classif_w
			from	triagem_pronto_atend a
			where	a.nr_sequencia = reg_atendimentos.nr_seq_triagem;

			if (coalesce(nr_seq_classif_w,0) > 0) then
				begin
				select	max(a.ds_classificacao)
				into STRICT	ds_classif_w
				from	triagem_classif_risco a
				where	a.nr_sequencia = nr_seq_classif_w;

				if (position('COVID' in upper(ds_classif_w)) > 0) then
					ds_sintomas_w := ds_sintomas_w || ', ' || ds_classif_w;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	end if;

	select	CASE WHEN substr(ds_sintomas_w,1,2)=', ' THEN substr(ds_sintomas_w,3)  ELSE ds_sintomas_w END
	into STRICT	ds_sintomas_w
	;

	select	CASE WHEN coalesce(length(trim(both ds_sintomas_w)),0)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_sintomas_w
	;

	if (ie_sintomas_w = 'N') then
		begin
		qt_sem_sintoma_w := qt_sem_sintoma_w + 1;
		
		if (length(trim(both reg_atendimentos.ds_queixa)) > 0) then
			ds_sintomas_w := reg_atendimentos.ds_queixa;
		end if;

		if (coalesce(reg_atendimentos.nr_seq_triagem,0) > 0) then
			begin
			select	max(a.nr_seq_classif)
			into STRICT	nr_seq_classif_w
			from	triagem_pronto_atend a
			where	a.nr_sequencia = reg_atendimentos.nr_seq_triagem;

			if (coalesce(nr_seq_classif_w,0) > 0) then
				begin
				select	max(a.ds_classificacao)
				into STRICT	ds_classif_w
				from	triagem_classif_risco a
				where	a.nr_sequencia = nr_seq_classif_w;

				if (length(trim(both ds_classif_w)) > 0) then
					ds_sintomas_w := ds_sintomas_w || ', ' || ds_classif_w;
				end if;
				end;
			end if;
			end;
		end if;
		end;
	else
		qt_com_sintoma_w := qt_com_sintoma_w + 1;
	end if;

	select	CASE WHEN substr(ds_sintomas_w,1,2)=', ' THEN substr(ds_sintomas_w,3)  ELSE ds_sintomas_w END
	into STRICT	ds_sintomas_w
	;

	qt_commit_w := qt_commit_w + 1;

	select	nextval('pfcs_panel_detail_seq')
	into STRICT	nr_seq_detail_w
	;

	insert into pfcs_panel_detail(
		nr_sequencia,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario,
		nm_usuario_nrec,
		ie_situation,
		nr_seq_panel,
		nr_seq_indicator,
		nr_seq_operational_level)
	values (
		nr_seq_detail_w,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		'T',
		nr_Seq_panel_W,
		75,
		cd_estabelecimento_p);

	insert into pfcs_detail_patient(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		id_patient,
		nr_encounter,
		ds_gender,
		ds_current_location,
		ds_bed_assigned,
		ds_age_range,
		nr_seq_detail,
		ie_symptoms,
		ds_symptoms)
	values (
		nextval('pfcs_detail_patient_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		reg_atendimentos.cd_pessoa_fisica,
		reg_atendimentos.nr_atendimento,
		reg_atendimentos.ds_sexo,
		reg_atendimentos.ds_setor,
		reg_atendimentos.ds_leito,
		reg_atendimentos.ds_age,
		nr_seq_detail_w,
		ie_sintomas_w,
		ds_sintomas_w);
	
	if (qt_commit_w > 500) then
		begin
		qt_commit_w := 0;
		commit;
		end;
	end if;
	end;
end loop;

update pfcs_panel
set    vl_indicator = qt_com_sintoma_w
where  nr_sequencia = nr_Seq_panel_W;

commit;

insert into pfcs_panel(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	ie_situation,
	nr_seq_indicator,
	vl_indicator,
	nr_seq_operational_level)
values (
	nextval('pfcs_panel_seq'),
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	'T',
	76,
	qt_sem_sintoma_w,
	cd_estabelecimento_p);

commit;

CALL pfcs_pck.pfcs_activate_records(
		nr_seq_indicator_p => 75,
		nr_seq_operational_level_p => cd_estabelecimento_p,
		nm_usuario_p => nm_usuario_p);
		
CALL pfcs_pck.pfcs_activate_records(
		nr_seq_indicator_p => 76,
		nr_seq_operational_level_p => cd_estabelecimento_p,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_get_patients_symptoms ( cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

