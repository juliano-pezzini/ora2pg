-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_devolucao ( nr_seq_nota_p bigint, ds_lista_item_p text, nr_nota_fiscal_p bigint, cd_serie_nf_p text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, dt_emissao_p timestamp, dt_entrada_saida_p timestamp, nr_seq_motivo_devol_p bigint, cd_condicao_pagto_p bigint, nr_sequencia_p INOUT bigint, ie_venc_nf_entrada text, cd_setor_atendimento_p bigint) AS $body$
DECLARE


nr_sequencia_nf_w			bigint;
cd_natureza_operacao_w		smallint;
cd_natureza_operacao_ne_w		smallint;
cd_natureza_operacao_cad_w	smallint;
nr_nota_fiscal_w			varchar(255);
nr_ordem_compra_w		bigint;
nr_item_oci_w			bigint;
nr_item_nf_w			bigint;
cd_estabelecimento_w		smallint;
cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
cd_cgc_estabelecimento_w		varchar(14);
ie_tipo_nota_w			varchar(3);
cd_material_w			integer;
cd_cgc_emitente_w		varchar(14);
cd_centro_custo_w			integer;
nr_seq_conta_financeira_w		bigint	:= null;
nr_seq_proj_rec_w			bigint;
vl_vencimento_w			double precision;
dt_vencimento_w			timestamp;
dt_entrega_ordem_w		timestamp;
ds_historico_w			varchar(2000);
ie_origem_titulo_w			varchar(10);
dt_entrada_saida_w		timestamp;
nr_seq_classe_tit_rec_w		bigint;
nr_seq_lote_item_w			bigint;
nr_seq_lote_item_devol_w		bigint;
cd_local_estoque_w		smallint;
qt_registro_w			bigint;
ie_ipi_w				bigint;
vl_tributo_w			double precision;
vl_ipi_w				double precision;
ds_obs_padrao_nf_dev_w		varchar(4000);
ds_motivo_dev_w			varchar(255);
cd_perfil_ativo_w			bigint;
vl_total_item_nf_w			double precision;
vl_unitario_item_nf_w		double precision;
qt_item_nf_w			double precision;
qt_item_estoque_w			double precision;
qt_conv_compra_estoque_w		double precision;
cd_lote_fabricacao_w		varchar(20);
dt_validade_w			timestamp;
ie_somar_ipi_w			varchar(1) := 'N';
ie_param_371_w			varchar(1);
ie_ratear_ipi_nf_devol_w		varchar(1);
dt_emissao_ww			timestamp;
dt_entrada_saida_ww		timestamp;
ie_lote_fornec_nf_dev_w		varchar(1);
ie_gera_w			varchar(1);
ie_gerar_desdobrado_w		varchar(1);
ie_quantidade_w			varchar(1);
qt_gerar_w			double precision;
ie_indeterminado_w			varchar(1);
nr_seq_marca_w			bigint;
ie_tipo_titulo_rec_w			titulo_receber.ie_tipo_titulo%type;
nr_danfe_referencia_w		nota_fiscal.nr_danfe_referencia%type;
ie_agrupar_lote_w 		regra_nf_lote_fornec.ie_agrupar_lote%type;


/* Gravar lotes da pasta Lote Fornecedor */

C00 CURSOR FOR
SELECT	nr_sequencia
from	nota_fiscal_item_lote
where	nr_seq_nota = nr_seq_nota_p;

C01 CURSOR FOR
SELECT	a.nr_ordem_compra,
	a.nr_item_oci,
	a.cd_material,
	a.cd_centro_custo,
	a.dt_entrega_ordem
from	nota_fiscal_item a
where	a.nr_sequencia	= nr_sequencia_p
and	(a.nr_ordem_compra IS NOT NULL AND a.nr_ordem_compra::text <> '');

/*Ajustes finais dos itens*/

C02 CURSOR FOR
SELECT	a.nr_item_nf,
	a.cd_material,
	a.cd_centro_custo,
	a.nr_seq_proj_rec,
	a.cd_local_estoque
from	nota_fiscal_item a
where	a.nr_sequencia	= nr_sequencia_p;

c03 CURSOR FOR
SELECT	nr_item_nf,
	vl_total_item_nf,
	vl_unitario_item_nf,
	qt_item_nf
from	nota_fiscal_item
where	nr_sequencia = nr_seq_nota_p
and	' ' || ds_lista_item_p || ' ' like '% ' || nr_item_nf || ' %';

c04 CURSOR FOR
SELECT	nr_item_nf,
	cd_material,
	cd_lote_fabricacao,
	dt_validade,
	ie_indeterminado,
	qt_item_nf,
	qt_item_estoque,
	dividir(qt_item_estoque,qt_item_nf),
	nr_seq_marca
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_p
and	(cd_lote_fabricacao IS NOT NULL AND cd_lote_fabricacao::text <> '');	


BEGIN

if (dt_entrada_saida_p IS NOT NULL AND dt_entrada_saida_p::text <> '') then
	dt_entrada_saida_w	:= to_date(to_char(dt_entrada_saida_p, 'dd/mm/yyyy') || ' ' ||  to_char(clock_timestamp(),'hh24:mi:ss') ,'dd/mm/yyyy hh24:mi:ss');
end if;

select	nr_nota_fiscal,
	cd_estabelecimento,
	cd_pessoa_fisica,
	cd_cgc,
	dt_emissao,
	dt_entrada_saida,
	nr_danfe_referencia
into STRICT	nr_nota_fiscal_w,
	cd_estabelecimento_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	dt_emissao_ww,
	dt_entrada_saida_ww,
	nr_danfe_referencia_w
from	nota_fiscal
where	nr_sequencia = nr_seq_nota_p;

select	max(a.ie_origem_titulo),
	max(a.nr_seq_classe),
	max(a.ie_tipo_titulo)
into STRICT	ie_origem_titulo_w,
	nr_seq_classe_tit_rec_w,
	ie_tipo_titulo_rec_w
from	titulo_receber a
where	a.nr_seq_nf_saida	= nr_seq_nota_p;

select	cd_cgc
into STRICT	cd_cgc_estabelecimento_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_w;

cd_cgc_emitente_w	:= coalesce(cd_cgc_estabelecimento_w, cd_cgc_w);

select	coalesce(max(cd_natureza_operacao),0),
	coalesce(max(ie_ratear_ipi_nf_devol),'S')
into STRICT	cd_natureza_operacao_ne_w,
	ie_ratear_ipi_nf_devol_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nota_p;

cd_natureza_operacao_w	:= cd_natureza_operacao_ne_w;
select	coalesce(max(cd_natureza_operacao),0)
into STRICT	cd_natureza_operacao_cad_w
from	natureza_operacao
where	cd_natureza_operacao	= cd_natureza_operacao_w;
if (cd_natureza_operacao_cad_w = 0) and (cd_natureza_operacao_p = 0) then
	/*(-20011,	'Nao foi selecionado nenhuma natureza operacao ou a operacao da nota utilizada nao' || chr(13) || chr(10) ||
					'possui uma natureza de operacao  padrao! Verifique o cadastro desta operacao.');*/
	CALL wheb_mensagem_pck.exibir_mensagem_abort(181285);
end if;

cd_perfil_ativo_w	:= obter_perfil_ativo;

ie_tipo_nota_w		:= coalesce((obter_valor_param_usuario(40, 335, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w)), 'SD');
ie_param_371_w		:= coalesce((obter_valor_param_usuario(40, 371, cd_perfil_ativo_w, nm_usuario_p, cd_estabelecimento_w)), 'N');

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	ie_tipo_nota_w	:= 'SF';
end if;

if (ie_ratear_ipi_nf_devol_w = 'S') and (ie_param_371_w = 'S') then
	ie_somar_ipi_w := 'S';
end if;

select (coalesce(max(nr_sequencia_nf),0)+1)
into STRICT	nr_sequencia_nf_w
from	nota_fiscal
where	cd_estabelecimento = cd_estabelecimento_w
and	cd_cgc_emitente	   = coalesce(cd_cgc_estabelecimento_w, cd_cgc_w)
and	nr_nota_fiscal     = nr_nota_fiscal_p
and	cd_serie_nf        = cd_serie_nf_p;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_p
;

select	count(*)
into STRICT	qt_registro_w
from	nota_fiscal
where	cd_estabelecimento = cd_estabelecimento_w
and	cd_cgc_emitente = cd_cgc_emitente_w
and	cd_serie_nf = cd_serie_nf_p
and	nr_nota_fiscal = nr_nota_fiscal_p
and	nr_sequencia_nf = nr_sequencia_nf_w

and	ie_situacao = '1';

if (qt_registro_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(190909);
end if;

select	count(*)
into STRICT	qt_registro_w
from	nota_fiscal
where	cd_estabelecimento = cd_estabelecimento_w
and	cd_cgc_emitente = cd_cgc_emitente_w
and	cd_serie_nf = cd_serie_nf_p
and	nr_nota_fiscal = nr_nota_fiscal_p
and	nr_sequencia_nf = nr_sequencia_nf_w
and	ie_situacao <> '1';

if (qt_registro_w > 0) then
	select (coalesce(max(nr_sequencia_nf),0)+1)
	into STRICT	nr_sequencia_nf_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estabelecimento_w
	and	cd_cgc_emitente = cd_cgc_emitente_w
	and	cd_serie_nf = cd_serie_nf_p
	and	nr_nota_fiscal = nr_nota_fiscal_p
	and	ie_situacao <> '1';
end if;

select	coalesce(ds_motivo,'')
into STRICT	ds_motivo_dev_w
from	motivo_devolucao_nota
where	nr_sequencia = nr_seq_motivo_devol_p;

select	ie_lote_fornec_nf_dev,
	substr(	replace(
		replace(
		replace(
		replace(
		replace(ds_obs_padrao_nf_dev,
			'@nr_nota_fiscal', nr_nota_fiscal_w),
			'@dt_emissao', coalesce(dt_emissao_ww, trunc(clock_timestamp()))),
			'@dt_entrada_saida', coalesce(dt_entrada_saida_ww, clock_timestamp())),
			'@ds_motivo_dev', ds_motivo_dev_w),
			'@nr_danfe_referencia', nr_danfe_referencia_w),1,4000)
into STRICT	ie_lote_fornec_nf_dev_w,
	ds_obs_padrao_nf_dev_w	
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_w;

insert into nota_fiscal(
	cd_estabelecimento,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_nota_fiscal,
	nr_sequencia_nf,
	cd_operacao_nf,
	dt_emissao,
	dt_entrada_saida,
	ie_acao_nf,
	ie_emissao_nf,
	ie_tipo_frete,
	vl_mercadoria,
	vl_total_nota,
	qt_peso_bruto,
	qt_peso_liquido,
	dt_atualizacao,
	nm_usuario,
	cd_condicao_pagamento,
	cd_cgc,
	vl_ipi,
	vl_descontos,
	vl_frete,
	vl_seguro,
	vl_despesa_acessoria,
	cd_natureza_operacao,
	vl_desconto_rateio,
	ie_situacao,
	nr_lote_contabil,
	nr_sequencia,
	cd_pessoa_fisica,
	nr_seq_motivo_devol,
	ie_tipo_nota,
	nr_sequencia_ref,
	cd_setor_digitacao,
	ds_observacao)
values ( cd_estabelecimento_w,
	cd_cgc_emitente_w,
	cd_serie_nf_p,
	nr_nota_fiscal_p,
	nr_sequencia_nf_w,
	cd_operacao_nota_p,
 	coalesce(dt_emissao_p, trunc(clock_timestamp())),
 	coalesce(dt_entrada_saida_w, clock_timestamp()),
 	'1',
 	'0',
 	0,
 	0,
 	0,
 	0,
 	0,
 	clock_timestamp(),
 	nm_usuario_p,
 	cd_condicao_pagto_p,
 	cd_cgc_w,
 	0,
 	0,
	0,
 	0,
 	0,
 	CASE WHEN cd_natureza_operacao_p=0 THEN cd_natureza_operacao_w  ELSE cd_natureza_operacao_p END ,
 	0,
 	'1',
 	0,
	nr_sequencia_p,
	cd_pessoa_fisica_w,
	nr_seq_motivo_devol_p,
	ie_tipo_nota_w,
	nr_seq_nota_p,
	cd_setor_atendimento_p,
	coalesce(ds_obs_padrao_nf_dev_w, wheb_mensagem_pck.get_Texto(310531, 'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W)));
					/*Nota Fiscal de origem: #@NR_NOTA_FISCAL_W#@*/

open C03;
loop
fetch C03 into	
	nr_item_nf_w,
	vl_total_item_nf_w,
	vl_unitario_item_nf_w,
	qt_item_nf_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin	

	if (ie_somar_ipi_w = 'S') then
		
		select  coalesce(sum(vl_tributo),0)
		into STRICT	vl_ipi_w
		from	nota_fiscal_item_trib
		where	nr_sequencia = nr_seq_nota_p
		and	nr_item_nf = nr_item_nf_w
		and	substr(obter_tipo_tributo(cd_tributo),1,255) = 'IPI';
		
		vl_ipi_w		:= dividir(vl_ipi_w, qt_item_nf_w);
		
		vl_unitario_item_nf_w	:= vl_unitario_item_nf_w + vl_ipi_w;
		vl_total_item_nf_w	:= vl_total_item_nf_w + (qt_item_nf_w * vl_ipi_w);
	end if;
	
	insert into nota_fiscal_item(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_procedimento,
		cd_setor_atendimento,
		cd_conta,
		cd_local_estoque,
		ds_observacao,
		qt_peso_bruto,
		qt_peso_liquido,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_lote_fabricacao,
		dt_validade,
		dt_atualizacao_estoque,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_centro_custo,
		cd_material_estoque,
		ie_origem_proced,
		nr_ordem_compra,
		nr_item_oci,
		nr_sequencia,
		vl_liquido,
		nr_seq_ordem_serv,
		nr_seq_lote_fornec,
		nr_seq_proj_rec,
		dt_inicio_garantia,
		dt_fim_garantia,
		dt_entrega_ordem,
		ds_complemento,
		cd_imobilizado,
		nr_seq_conta_financ,
		nr_seq_nf_orig,
		nr_seq_item_nf_orig,
		cd_sequencia_parametro)
	SELECT	cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf_w,
		nr_item_nf_w,
		CASE WHEN cd_natureza_operacao_p=0 THEN cd_natureza_operacao_w  ELSE cd_natureza_operacao_p END ,
		qt_item_nf,
		vl_unitario_item_nf_w,
		vl_total_item_nf_w,
		clock_timestamp(),
		nm_usuario_p,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_procedimento,
		cd_setor_atendimento,
		cd_conta,
		cd_local_estoque,
		substr(wheb_mensagem_pck.get_Texto(310531, 'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W) || chr(13) || chr(10) || ds_observacao, 1, 255),
		qt_peso_bruto,
		qt_peso_liquido,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_lote_fabricacao,
		dt_validade,
		dt_atualizacao_estoque,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_centro_custo,
		cd_material_estoque,
		ie_origem_proced,
		nr_ordem_compra,
		nr_item_oci,
		nr_sequencia_p,
		vl_total_item_nf_w,
		nr_seq_ordem_serv,
		nr_seq_lote_fornec,
		nr_seq_proj_rec,
		dt_inicio_garantia,
		dt_fim_garantia,
		dt_entrega_ordem,
		ds_complemento,
		cd_imobilizado,
		nr_seq_conta_financ,
		nr_seq_nota_p,
		nr_item_nf_w,
		cd_sequencia_parametro
	from	nota_fiscal_item
	where	nr_sequencia = nr_seq_nota_p
	and	nr_item_nf = nr_item_nf_w;
		
	end;
end loop;
close C03;

insert into nota_fiscal_item_trib(
	nr_sequencia,
	cd_estabelecimento,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_sequencia_nf,
	nr_item_nf,
	cd_tributo,
	vl_tributo,
	dt_atualizacao,
	nm_usuario,
	vl_base_calculo,
	tx_tributo,
	vl_reducao_base,
	ie_rateio,
	vl_trib_nao_retido,
	vl_base_nao_retido,
	vl_trib_adic,
	vl_base_adic,
	nr_seq_sit_trib,
	nr_nota_fiscal,
	IE_TRIBUTACAO_CST)
SELECT	nr_sequencia_p,
	cd_estabelecimento,
	cd_cgc_emitente,
	cd_serie_nf,
	nr_sequencia_nf,
	nr_item_nf,
	cd_tributo,
	vl_tributo,
	clock_timestamp(),
	nm_usuario_p,
	vl_base_calculo,
	tx_tributo,
	vl_reducao_base,
	ie_rateio,
	vl_trib_nao_retido,
	vl_base_nao_retido,
	vl_trib_adic,
	vl_base_adic,
	nr_seq_sit_trib,
	nr_nota_fiscal,
	IE_TRIBUTACAO_CST
from	nota_fiscal_item_trib
where	nr_sequencia = nr_seq_nota_p
and	((ie_somar_ipi_w = 'N') or
	((ie_somar_ipi_w = 'S') and (substr(obter_tipo_tributo(cd_tributo),1,255) <> 'IPI')))
and	' ' || ds_lista_item_p || ' ' like '% ' || nr_item_nf || ' %';	

select  count(*),
	sum(VL_TRIBUTO)
into STRICT	ie_ipi_w,
	vl_tributo_w
from	nota_fiscal_item_trib
where	nr_sequencia = nr_seq_nota_p
and	substr(obter_tipo_tributo(cd_tributo),1,255) = 'IPI';


if (ie_ipi_w > 0) then

    update 	nota_fiscal
    set		ds_observacao	= wheb_mensagem_pck.get_Texto(310535, 'VL_TRIBUTO_W='|| campo_mascara_virgula(vl_tributo_w)) /*IPI no valor de #@VL_TRIBUTO_W#@*/
    where	nr_sequencia 	= nr_sequencia_p;

end if;





open C00;
loop
fetch C00 into
	nr_seq_lote_item_devol_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin

	select	nextval('nota_fiscal_item_lote_seq')
	into STRICT	nr_seq_lote_item_w
	;

	insert into nota_fiscal_item_lote(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_nota,
		nr_item_nf,
		dt_validade,
		qt_material,
		cd_lote_fabricacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_marca,
		nr_seq_lote_fornec,
		cd_barra_material,
		ds_barras,
		ie_indeterminado,
		qt_compra,
		dt_fabricacao)
	SELECT	nr_seq_lote_item_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_p,
		nr_item_nf,
		dt_validade,
		qt_material,
		cd_lote_fabricacao,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_marca,
		nr_seq_lote_fornec,
		cd_barra_material,
		ds_barras,
		ie_indeterminado,
		qt_compra,
		dt_fabricacao
	from	nota_fiscal_item_lote
	where	nr_sequencia = nr_seq_lote_item_devol_w
	and	' ' || ds_lista_item_p || ' ' like '% ' || nr_item_nf || ' %';		

	end;
end loop;
close C00;
	

CALL gerar_historico_nota_fiscal(nr_sequencia_p, nm_usuario_p, '3', wheb_mensagem_pck.get_Texto(310537, 'NR_NOTA_FISCAL_W='|| NR_NOTA_FISCAL_W));
								/*Devolucao a partir da nota fiscal #@NR_NOTA_FISCAL_W#@*/

open C02;
loop
fetch C02 into	
	nr_item_nf_w,
	cd_material_w,
	cd_centro_custo_w,
	nr_seq_proj_rec_w,
	cd_local_estoque_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	/*Ajuste da conta financeira*/

	nr_seq_conta_financeira_w := obter_conta_financeira('S', cd_estabelecimento_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, null, null, null, nr_seq_proj_rec_w, null, cd_pessoa_fisica_w, ie_origem_titulo_w, null, nr_seq_classe_tit_rec_w, null, cd_local_estoque_w, null, null, null, null, ie_tipo_titulo_rec_w, null);

	if (nr_seq_conta_financeira_w = 0) then
		nr_seq_conta_financeira_w := null;
	end if;


	if (coalesce(nr_seq_conta_financeira_w, 0) > 0) then

		update	nota_fiscal_item
		set	nr_seq_conta_financ	= nr_seq_conta_financeira_w
		where	nr_sequencia		= nr_sequencia_p
		and	nr_item_nf		= nr_item_nf_w
		and	coalesce(nr_seq_conta_financ::text, '') = '';
	end if;

	end;
end loop;
close c02;

if (coalesce(ie_venc_nf_entrada,'N') = 'S') then
	begin
	CALL ATUALIZA_TOTAL_NOTA_FISCAL(nr_sequencia_p,nm_usuario_p);
	
	select 	vl_total_nota
	into STRICT	vl_vencimento_w
	from	nota_fiscal
	where	nr_sequencia = nr_sequencia_p;
	
	select 	coalesce(min(dt_vencimento),clock_timestamp())
	into STRICT	dt_vencimento_w
	from	nota_fiscal_venc
	where	nr_sequencia = nr_seq_nota_p
	and	trunc(dt_vencimento) >= trunc(clock_timestamp());
	
	insert into nota_fiscal_venc(	
		nr_sequencia,
		cd_estabelecimento,
		cd_serie_nf,
		nr_sequencia_nf,
		dt_vencimento,
		vl_vencimento,
		dt_atualizacao,
		nm_usuario,
		cd_cgc_emitente,
		nr_nota_fiscal,
		ie_origem)
	values (nr_sequencia_p,
		cd_estabelecimento_w,
		cd_serie_nf_p,
		nr_sequencia_nf_w,
		dt_vencimento_w,
		vl_vencimento_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_cgc_emitente_w,
		nr_nota_fiscal_p,
		'N');
	end;
end if;

if (ie_lote_fornec_nf_dev_w = 'S') then
	
	open C04;
	loop
	fetch C04 into	
		nr_item_nf_w,
		cd_material_w,
		cd_lote_fabricacao_w,
		dt_validade_w,
		ie_indeterminado_w,
		qt_item_nf_w,
		qt_item_estoque_w,
		qt_conv_compra_estoque_w,
		nr_seq_marca_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		
		SELECT * FROM obter_regra_nf_lote_fornec(cd_material_w, cd_estabelecimento_w, ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w, nr_seq_marca_w) INTO STRICT ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w, ie_agrupar_lote_w;
		
		if (ie_gera_w in ('S','O')) then
							
			if (ie_quantidade_w = 'E') then
				qt_gerar_w	:= qt_item_estoque_w;
			else
				qt_gerar_w	:= dividir(qt_item_estoque_w,qt_conv_compra_estoque_w);
			end if;
		
			update	nota_fiscal_item
			set	cd_lote_fabricacao	= '',
				dt_validade		 = NULL,
				ie_indeterminado	= 'N'
			where	nr_sequencia		= nr_sequencia_p
			and	nr_item_nf		= nr_item_nf_w;
			
			select	nextval('nota_fiscal_item_lote_seq')
			into STRICT	nr_seq_lote_item_w
			;

			insert into nota_fiscal_item_lote(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nr_seq_nota,
				nr_item_nf,
				dt_validade,
				qt_material,
				cd_lote_fabricacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_marca,			
				ie_indeterminado)
			values (	nr_seq_lote_item_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_sequencia_p,
				nr_item_nf_w,
				dt_validade_w,
				qt_gerar_w,
				cd_lote_fabricacao_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_marca_w,
				ie_indeterminado_w);
		
		end if;
		end;
	end loop;
	close C04;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_devolucao ( nr_seq_nota_p bigint, ds_lista_item_p text, nr_nota_fiscal_p bigint, cd_serie_nf_p text, nm_usuario_p text, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, dt_emissao_p timestamp, dt_entrada_saida_p timestamp, nr_seq_motivo_devol_p bigint, cd_condicao_pagto_p bigint, nr_sequencia_p INOUT bigint, ie_venc_nf_entrada text, cd_setor_atendimento_p bigint) FROM PUBLIC;

