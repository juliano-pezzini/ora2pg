-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_san_apto_inapto ( nr_seq_doacao_p bigint, cd_estebelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_impedimento_w	smallint	:= 0;
ie_novo_questionario_w	varchar(1) := 'N';
qt_impedimento_regra_w	smallint;
nr_seq_tipo_w		bigint;


BEGIN

if (nr_seq_doacao_p IS NOT NULL AND nr_seq_doacao_p::text <> '') then

	Select 	max(ie_novo_questionario)
	into STRICT	ie_novo_questionario_w
	from 	san_parametro
	where 	cd_estabelecimento = cd_estebelecimento_p;

	select	max(nr_seq_tipo)
	into STRICT	nr_seq_tipo_w
	from 	san_doacao
	where	nr_sequencia = nr_seq_doacao_p;

	if (ie_novo_questionario_w = 'S') then

		select count(*)
		into STRICT	qt_impedimento_regra_w
		from	san_regra_impedimento c,
			san_impedimento b,
			san_questionario a
		where 	a.nr_seq_impedimento = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_impedimento
		and 	nr_seq_doacao 	   = nr_seq_doacao_p
		and	c.nr_seq_tipo = nr_seq_tipo_w
		and 	b.ie_impede_doacao = 'R'
		and 	c.ie_impede_doacao = 'S'
		and	coalesce(a.ie_impede_doacao,'N') = 'S';
	else
		select count(*)
		into STRICT	qt_impedimento_regra_w
		from	san_regra_impedimento c,
			san_impedimento b,
			san_doacao_impedimento a
		where 	a.nr_seq_impedimento = b.nr_sequencia
		and	b.nr_sequencia = c.nr_seq_impedimento
		and 	nr_seq_doacao = nr_seq_doacao_p
		and	c.nr_seq_tipo = nr_seq_tipo_w
		and 	b.ie_impede_doacao = 'R'
		and 	c.ie_impede_doacao = 'S';
	end if;

	if (ie_novo_questionario_w = 'S') then

		select count(*)
		into STRICT	qt_impedimento_w
		from	san_impedimento b,
			san_questionario a
		where 	a.nr_seq_impedimento = b.nr_sequencia
		and 	nr_seq_doacao 	   = nr_seq_doacao_p
		and 	b.ie_impede_doacao = 'S'
		and	coalesce(a.ie_impede_doacao,'N') = 'S';
	else
		select count(*)
		into STRICT	qt_impedimento_w
		from	san_impedimento b,
			san_doacao_impedimento a
		where 	a.nr_seq_impedimento = b.nr_sequencia
		and 	nr_seq_doacao = nr_seq_doacao_p
		and 	ie_impede_doacao = 'S';
	end if;

	qt_impedimento_w := qt_impedimento_w + qt_impedimento_regra_w;

	update san_doacao
	set	ie_avaliacao_final	= CASE WHEN qt_impedimento_w=0 THEN  'A'  ELSE 'I' END ,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao	= clock_timestamp()
	where 	nr_sequencia = nr_seq_doacao_p
	and	ie_avaliacao_final	<> 'I';

end if;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_san_apto_inapto ( nr_seq_doacao_p bigint, cd_estebelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

