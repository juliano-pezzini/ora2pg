-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_proc_plano_convenio (cd_convenio_p bigint, cd_plano_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, ds_retorno_p INOUT text, ie_bloqueia_agenda_p INOUT text) AS $body$
DECLARE

 
 
/* 
 
------------------ 
 
		ATENÇÃO ! NÃO UTILIZAR MAIS ESTA PROCEDURE ! 
		A PROCEDURE QUE DEVE SER UTILIZADA É A CONSISTE_PLANO_CONVENIO 
		FRANCISCO/EDGAR OS 30405 
 
------------------ 
 
*/
 
 
 
 
ie_regra_w		smallint 	:= 0;
ds_retorno_w		varchar(255)	:= '';
ie_bloqueia_agenda_w	varchar(01)	:= 'N';
cd_grupo_w		bigint	:= 0;
cd_especialidade_w	bigint	:= 0;
cd_area_w		bigint	:= 0;
ie_tipo_atendimento_w	smallint;
cd_tipo_acomodacao_w	bigint;
ie_valor_w		varchar(4);
qt_ponto_min_w		double precision;
qt_ponto_max_w		double precision;
cd_categoria_w		varchar(10);
cd_estabelecimento_w	integer;

C01 CURSOR FOR 
SELECT 	ie_regra, 
	ie_valor, 
	coalesce(qt_ponto_min,0), 
	coalesce(qt_ponto_max,0) 
from 	regra_Convenio_Plano 
where	cd_convenio					= cd_convenio_p 
and 	((coalesce(cd_plano, cd_plano_p)			= cd_plano_p) or (coalesce(cd_plano_p, 0) = 0)) 
and	coalesce(cd_procedimento,cd_procedimento_p)		= cd_procedimento_p 
and	coalesce(ie_origem_proced,ie_origem_proced_p)	= ie_origem_proced_p 
and	coalesce(nr_seq_exame,nr_seq_exame_p)		= nr_seq_exame_p  -- Rafael em 13/04/2006 OS32186; 
and	coalesce(cd_area_procedimento,cd_area_w)		= cd_area_w	 
and	coalesce(cd_especialidade_proc,cd_especialidade_w)	= cd_especialidade_w 
and	coalesce(cd_grupo_proc,cd_grupo_w)			= cd_grupo_w 
and	coalesce(cd_tipo_acomodacao,cd_tipo_acomodacao_w)	= cd_tipo_acomodacao_w 
and	((coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w) or (ie_tipo_atendimento_w = 0)) 
and	((coalesce(cd_setor_atendimento, cd_setor_atendimento_p) = cd_setor_atendimento_p) or (cd_setor_atendimento_p = 0)) 
and	coalesce(ie_situacao,'A') = 'A';


BEGIN 
 
select	coalesce(max(ie_tipo_atendimento),0), 
	coalesce(max(cd_estabelecimento),0) 
into STRICT	ie_tipo_atendimento_w, 
	cd_estabelecimento_w 
from	atendimento_paciente 
where	nr_atendimento		= nr_atendimento_p;
 
/* Obter o tipo de acomodação */
 
begin 
select	coalesce(cd_tipo_acomodacao,0), 
	cd_categoria 
into STRICT	cd_tipo_acomodacao_w, 
	cd_categoria_w 
from	atend_categoria_convenio 
where	nr_atendimento	= nr_atendimento_p 
and	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento);
exception 
	when others then 
		cd_tipo_acomodacao_w	:= 0;
		cd_categoria_w		:= null;
end;
 
/* Obter Estrutura do procedimento */
 
begin 
select	cd_grupo_proc, 
	cd_especialidade, 
	cd_area_procedimento 
into STRICT	cd_grupo_w, 
	cd_especialidade_w, 
	cd_area_w 
from	Estrutura_Procedimento_v 
where	cd_procedimento 	= coalesce(cd_procedimento_p,0) 
and	ie_origem_proced	= coalesce(ie_origem_proced_p,0) 
and	(cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '');
exception when others then 
	begin 
	cd_grupo_w		:= 0;
	cd_especialidade_w	:= 0;
	cd_area_w		:= 0;
	end;
end;
 
open c01;
loop 
fetch c01 into 
	ie_regra_w, 
	ie_valor_w, 
	qt_ponto_min_w, 
	qt_ponto_max_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	ie_regra_w		:= ie_regra_w;
 
	-- Edgar 02/11/2005, OS 23134, tratamento de consistência de valor 
	if (ie_valor_w <> 'N') then		-- se consiste valor 
 
		if (ie_origem_proced_p = 1) then 	-- se é amb 
 
			/* 
			-- se não estiver dentro da faixa de valores da regra, então não considerar a regra 
			if	not(obter_preco_amb(cd_procedimento_p, 
						cd_convenio_p, 
						cd_categoria_w, 
						cd_estabelecimento_w, 
						ie_valor_w) 		between qt_ponto_min_w and qt_ponto_max_w) then 
				ie_regra_w		:= null; 
			end if; 
			Rafael em 13/04/2006 OS32586. Substituí a rotina acima pela rotina abaixo; 
			*/
 
			-- se estiver dentro da faixa de valores da regra, então não considerar a regra; 
			if (obter_preco_amb(cd_procedimento_p, 
						cd_convenio_p, 
						cd_categoria_w, 
						cd_estabelecimento_w, 
						ie_valor_w) 		between qt_ponto_min_w and qt_ponto_max_w) then 
				ie_regra_w	:= null;
			end if;
 
		end if;
 
	end if;
end loop;
close c01;
 
 
if (ie_regra_w in (1,2)) then /* Bloqueio Atendimento (Quando a Chamada é no Atendimento: Proc = null) */
 
 
	ds_retorno_w 		:= wheb_mensagem_pck.get_texto(802232);
	ie_bloqueia_agenda_w	:= 'S';
 
elsif (ie_regra_w = 3) then	/* Libera com Autorização */
 
 
	ds_retorno_w 		:= wheb_mensagem_pck.get_texto(802233);
 
end if;
 
ds_retorno_p		:= ds_retorno_w;
ie_bloqueia_agenda_p	:= ie_bloqueia_agenda_w;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_proc_plano_convenio (cd_convenio_p bigint, cd_plano_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nr_seq_exame_p bigint, ds_retorno_p INOUT text, ie_bloqueia_agenda_p INOUT text) FROM PUBLIC;

