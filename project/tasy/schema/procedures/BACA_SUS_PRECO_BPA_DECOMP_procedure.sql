-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_sus_preco_bpa_decomp ( dt_comp_unif_p timestamp) AS $body$
DECLARE



dt_comp_antigo_w		timestamp;
dt_comp_unif_w			timestamp;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_proc_unif_w			bigint;
ie_origem_proc_unif_w		bigint;
vl_preco_proc_sus_w		double precision	:= 0;
vl_tph_w			double precision	:= 0;
vl_taxa_sala_w			double precision	:= 0;
vl_honorario_medico_w		double precision	:= 0;
vl_anestesia_w			double precision	:= 0;
vl_matmed_w			double precision	:= 0;
vl_contraste_w			double precision	:= 0;
vl_filme_rx_w			double precision	:= 0;
vl_gesso_w			double precision	:= 0;
vl_quimioterapia_w		double precision	:= 0;
vl_dialise_w			double precision	:= 0;
vl_sadt_rx_w			double precision	:= 0;
vl_sadt_pc_w			double precision	:= 0;
vl_sadt_outros_w		double precision	:= 0;
vl_filme_ressonancia_w		double precision	:= 0;
vl_outros_w			double precision	:= 0;
vl_procedimento_w		double precision	:= 0;
vl_plantonista_w		double precision	:= 0;
qt_registros_w			bigint	:= 0;


C01 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		vl_tph,
		vl_taxa_sala,
		vl_honorario_medico,
		vl_anestesia,
		vl_matmed,
		vl_contraste,
		vl_filme_rx,
		vl_gesso,
		vl_quimioterapia,
		vl_dialise,
		vl_sadt_rx,
		vl_sadt_pc,
		vl_sadt_outros,
		vl_filme_ressonancia,
		vl_outros,
		vl_procedimento,
		vl_plantonista
	from	sus_preco_procbpa
	where	dt_competencia	= dt_comp_antigo_w;


BEGIN

select	coalesce(max(dt_competencia),'')
into STRICT	dt_comp_antigo_w
from	sus_preco_procbpa;

select	min(coalesce(dt_comp_unif_p,dt_competencia))
into STRICT	dt_comp_unif_w
from	sus_preco;

OPEN C01;
LOOP
FETCH C01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	vl_tph_w,
	vl_taxa_sala_w,
	vl_honorario_medico_w,
	vl_anestesia_w,
	vl_matmed_w,
	vl_contraste_w,
	vl_filme_rx_w,
	vl_gesso_w,
	vl_quimioterapia_w,
	vl_dialise_w,
	vl_sadt_rx_w,
	vl_sadt_pc_w,
	vl_sadt_outros_w,
	vl_filme_ressonancia_w,
	vl_outros_w,
	vl_procedimento_w,
	vl_plantonista_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	begin
	select	a.cd_proc_unif
	into STRICT	cd_proc_unif_w
	from	sus_origem a,
		procedimento b
	where	a.cd_procedimento	= cd_procedimento_w
	and	a.ie_origem_proced	= ie_origem_proced_w
	and	a.cd_proc_unif		= b.cd_procedimento
	and	a.ie_origem_proc_unif	= b.ie_origem_proced
	and	b.ie_situacao		= 'A';
	exception
		when others then
		cd_proc_unif_w	:= 0;
	end;

	if (cd_proc_unif_w	> 0) then

		select	coalesce(max(vl_total_amb),0)
		into STRICT	vl_preco_proc_sus_w
		from	sus_preco
		where	cd_procedimento		= cd_proc_unif_w
		and	ie_origem_proced	= 7;

		vl_tph_w		:= dividir((dividir((vl_tph_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_taxa_sala_w		:= dividir((dividir((vl_taxa_sala_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_honorario_medico_w	:= dividir((dividir((vl_honorario_medico_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_anestesia_w		:= dividir((dividir((vl_anestesia_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_matmed_w		:= dividir((dividir((vl_matmed_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_contraste_w		:= dividir((dividir((vl_contraste_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_filme_rx_w		:= dividir((dividir((vl_filme_rx_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_gesso_w		:= dividir((dividir((vl_gesso_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_quimioterapia_w	:= dividir((dividir((vl_quimioterapia_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_dialise_w		:= dividir((dividir((vl_dialise_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_sadt_rx_w		:= dividir((dividir((vl_sadt_rx_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_sadt_pc_w		:= dividir((dividir((vl_sadt_pc_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_sadt_outros_w	:= dividir((dividir((vl_sadt_outros_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_filme_ressonancia_w	:= dividir((dividir((vl_filme_ressonancia_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_outros_w		:= dividir((dividir((vl_outros_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);
		vl_plantonista_w	:= dividir((dividir((vl_plantonista_w * 100),vl_procedimento_w) * vl_preco_proc_sus_w),100);

		select	count(*)
		into STRICT	qt_registros_w
		from	sus_preco
		where	dt_competencia	= dt_comp_unif_w;
		if (qt_registros_w	> 0) then
			update	sus_preco
			set	vl_tph			= vl_tph_w,
				vl_taxa_sala		= vl_taxa_sala_w,
				vl_honorario_medico	= vl_honorario_medico_w,
				vl_anestesia		= vl_anestesia_w,
				vl_matmed		= vl_matmed_w,
				vl_contraste		= vl_contraste_w,
				vl_filme_rx		= vl_filme_rx_w,
				vl_gesso		= vl_gesso_w,
				vl_quimioterapia	= vl_quimioterapia_w,
				vl_dialise		= vl_dialise_w,
				vl_sadt_rx		= vl_sadt_rx_w,
				vl_sadt_pc		= vl_sadt_pc_w,
				vl_sadt_outros		= vl_sadt_outros_w,
				vl_filme_ressonancia	= vl_filme_ressonancia_w,
				vl_outros		= vl_outros_w,
				vl_plantonista		= vl_plantonista_w
			where	cd_procedimento		= cd_proc_unif_w
			and	dt_competencia		= dt_comp_unif_w;
		end if;
	end if;
	end;
END LOOP;
CLOSE C01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_sus_preco_bpa_decomp ( dt_comp_unif_p timestamp) FROM PUBLIC;

