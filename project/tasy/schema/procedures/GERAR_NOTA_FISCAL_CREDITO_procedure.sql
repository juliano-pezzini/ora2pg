-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nota_fiscal_credito ( nr_seq_nf_credito_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*Informacoes da nota de credito*/

nr_nota_fiscal_w			nota_fiscal.nr_nota_fiscal%TYPE;
nr_nota_nf_w				nota_fiscal.nr_nota_fiscal%TYPE;
cd_serie_nf_w				nota_fiscal.cd_serie_nf%TYPE;
cd_operacao_nf_w			nota_fiscal.cd_operacao_nf%TYPE;
nr_seq_nf_orig_w			nota_fiscal.nr_nota_fiscal%TYPE;
ie_acao_nf_credito_w			nf_credito.ie_acao%type;
vl_itens_sem_imposto_w			nf_credito_item.vl_itens_sem_imposto%type;
vl_itens_imposto_w			nf_credito_item.vl_itens_imposto%type;
vl_itens_imposto_orig_w			nf_credito_item.vl_itens_imposto_orig%type;
vl_itens_sem_imposto_orig_w		nf_credito_item.vl_itens_sem_imposto_orig%type;
qt_diminuido_w				nf_credito_item.qt_aplicacao%type;
qt_aumentado_w				nf_credito_item.qt_aplicacao%type;
qt_item_aplicacao_w			nf_credito_item.qt_aplicacao%type;

/*Informacoes do cadastro da serie*/

ie_numero_nota_w			serie_nota_fiscal.ie_numero_nota%TYPE;
nr_ultima_nf_w				serie_nota_fiscal.nr_ultima_nf%TYPE;

/*Informacoes da nota fiscal original*/

ie_tipo_nota_w				nota_fiscal.ie_tipo_nota%TYPE;
cd_natureza_operacao_w			nota_fiscal.cd_natureza_operacao%TYPE;
cd_condicao_pagamento_w			nota_fiscal.cd_condicao_pagamento%TYPE;
cd_cgc_emitente_w			nota_fiscal.cd_cgc_emitente%TYPE;
cd_cgc_w				nota_fiscal.cd_cgc%TYPE;
cd_pessoa_fisica_w			nota_fiscal.cd_pessoa_fisica%TYPE;
nr_sequencia_nf_w			nota_fiscal.nr_sequencia_nf%TYPE;
ie_tipo_frete_w				nota_fiscal.ie_tipo_frete%TYPE;
cd_moeda_w				nota_fiscal.cd_moeda%TYPE;
vl_cotacao_w				cotacao_moeda.vl_cotacao%type;
nr_sequencia_nf_ref_w			nota_fiscal.nr_sequencia%type;

nr_interno_conta_w			nota_fiscal.nr_interno_conta%type;
nr_seq_protocolo_w     		nota_fiscal.nr_seq_protocolo%type;
nr_seq_lote_prot_w         	nota_fiscal.nr_seq_lote_prot%type;

/*Sequencia da nota fiscal*/

nr_sequencia_w				nota_fiscal.nr_sequencia%TYPE;

/*Quantidade de notas de credito*/

qt_nf_cred_w				bigint;

/*Informacoes da nota fiscal item original*/

nr_item_nf_w				nota_fiscal_item.nr_item_nf%TYPE;
qt_item_nf_w				nota_fiscal_item.qt_item_nf%type;
vl_unitario_item_nf_w			nota_fiscal_item.vl_unitario_item_nf%TYPE;
vl_total_item_nf_w			nota_fiscal_item.vl_total_item_nf%TYPE;
vl_total_item_nf_ref_w			nota_fiscal_item.VL_TOTAL_ITEM_NF%TYPE;
cd_material_w				nota_fiscal_item.cd_material%TYPE;
cd_procedimento_w			nota_fiscal_item.cd_procedimento%TYPE;
ie_origem_proced_w			nota_fiscal_item.ie_origem_proced%TYPE;
vl_frete_w				nota_fiscal_item.vl_frete%TYPE;
vl_desconto_w				nota_fiscal_item.vl_desconto%TYPE;
vl_despesa_acessoria_w			nota_fiscal_item.vl_despesa_acessoria%TYPE;
cd_setor_atendimento_w			nota_fiscal_item.cd_setor_atendimento%TYPE;
cd_conta_w				nota_fiscal_item.cd_conta%TYPE;
cd_local_estoque_w			nota_fiscal_item.cd_local_estoque%TYPE;
ds_observacao_item_w			nota_fiscal_item.ds_observacao%TYPE;
ds_complemento_w			nota_fiscal_item.ds_complemento%TYPE;
qt_peso_bruto_w				nota_fiscal_item.qt_peso_bruto%TYPE;
qt_peso_liquido_w			nota_fiscal_item.qt_peso_liquido%TYPE;
cd_unidade_medida_compra_w		nota_fiscal_item.cd_unidade_medida_compra%TYPE;
qt_item_estoque_w			nota_fiscal_item.qt_item_estoque%TYPE;
cd_unidade_medida_estoque_w		nota_fiscal_item.cd_unidade_medida_estoque%TYPE;
cd_lote_fabricacao_w			nota_fiscal_item.cd_lote_fabricacao%TYPE;
dt_validade_w				nota_fiscal_item.dt_validade%TYPE;
nr_seq_lote_fornec_w			nota_fiscal_item.nr_seq_lote_fornec%TYPE;
dt_atualizacao_estoque_w		nota_fiscal_item.dt_atualizacao_estoque%TYPE;
cd_conta_contabil_w			nota_fiscal_item.cd_conta_contabil%TYPE;
vl_desconto_rateio_w			nota_fiscal_item.vl_desconto_rateio%TYPE;
vl_seguro_w				nota_fiscal_item.vl_seguro%TYPE;
cd_centro_custo_w			nota_fiscal_item.cd_centro_custo%TYPE;
cd_material_estoque_w			nota_fiscal_item.cd_material_estoque%TYPE;
nr_ordem_compra_w			nota_fiscal_item.nr_ordem_compra%TYPE;
vl_liquido_w				nota_fiscal_item.vl_liquido%TYPE;
vl_liquido_ref_w			nota_fiscal_item.vl_liquido%TYPE;
pr_desconto_w				nota_fiscal_item.pr_desconto%TYPE;
nr_item_oci_w				nota_fiscal_item.nr_item_oci%TYPE;
dt_entrega_ordem_w			nota_fiscal_item.dt_entrega_ordem%TYPE;
nr_seq_conta_financ_w			nota_fiscal_item.nr_seq_conta_financ%TYPE;
nr_seq_proj_rec_w			nota_fiscal_item.nr_seq_proj_rec%TYPE;
pr_desc_financ_w			nota_fiscal_item.pr_desc_financ%TYPE;
nr_seq_ordem_serv_w			nota_fiscal_item.nr_seq_ordem_serv%TYPE;
nr_atendimento_w			nota_fiscal_item.nr_atendimento%TYPE;
nr_seq_unidade_adic_w			nota_fiscal_item.nr_seq_unidade_adic%TYPE;
nr_seq_proj_gpi_w			nota_fiscal_item.nr_seq_proj_gpi%TYPE;
nr_seq_etapa_gpi_w			nota_fiscal_item.nr_seq_etapa_gpi%TYPE;
nr_seq_conta_gpi_w			nota_fiscal_item.nr_seq_conta_gpi%TYPE;
nr_contrato_w				nota_fiscal_item.nr_contrato%TYPE;
dt_inicio_garantia_w			nota_fiscal_item.dt_inicio_garantia%TYPE;
dt_fim_garantia_w			nota_fiscal_item.dt_fim_garantia%TYPE;
nr_seq_marca_w				nota_fiscal_item.nr_seq_marca%TYPE;
nr_seq_orc_item_gpi_w			nota_fiscal_item.nr_seq_orc_item_gpi%TYPE;
nr_solic_compra_w			nota_fiscal_item.nr_solic_compra%TYPE;
nr_item_solic_compra_w			nota_fiscal_item.nr_item_solic_compra%TYPE;
nr_seq_regra_contrato_w			nota_fiscal_item.nr_seq_regra_contrato%TYPE;
nr_seq_preco_pj_w			nota_fiscal_item.nr_seq_preco_pj%TYPE;
vl_unitario_liquido_w			nota_fiscal_item.vl_liquido%type;

/*Informacoes da nota fiscal item tributos original*/

cd_tributo_w				nota_fiscal_item_trib.cd_tributo%TYPE;
tx_tributo_w				nota_fiscal_item_trib.tx_tributo%TYPE;
vl_reducao_base_w			nota_fiscal_item_trib.vl_reducao_base%TYPE;
ie_rateio_w				nota_fiscal_item_trib.ie_rateio%TYPE;
vl_trib_nao_retido_w			nota_fiscal_item_trib.vl_trib_nao_retido%TYPE;
vl_base_nao_retido_w			nota_fiscal_item_trib.vl_base_nao_retido%TYPE;
vl_trib_adic_w				nota_fiscal_item_trib.vl_trib_adic%TYPE;
vl_base_adic_w				nota_fiscal_item_trib.vl_base_adic%TYPE;
nr_seq_sit_trib_w			nota_fiscal_item_trib.nr_seq_sit_trib%TYPE;
ie_tributacao_csosn_w			nota_fiscal_item_trib.ie_tributacao_csosn%TYPE;
ie_tributacao_cst_w			nota_fiscal_item_trib.ie_tributacao_cst%TYPE;
dt_conferencia_w			nota_fiscal_item_trib.dt_conferencia%TYPE;
nm_usuario_conf_w			nota_fiscal_item_trib.nm_usuario_conf%TYPE;
ie_exporta_xml_w			nota_fiscal_item_trib.ie_exporta_xml%TYPE;
vl_base_calculo_w			nota_fiscal_item_trib.vl_base_calculo%TYPE;
vl_base_calculo_ref_w			nota_fiscal_item_trib.vl_base_calculo%TYPE;
vl_tributo_w				nota_fiscal_item_trib.vl_tributo%TYPE;
vl_trib_cred_w				double precision;
vl_base_calculo_cred_w			double precision;
ie_estab_serie_nf_w			parametro_compras.ie_estab_serie_nf%TYPE;
cd_cgc_emitente_ww			estabelecimento.cd_cgc%TYPE;
ds_observacao_w				nf_credito.ds_observacao%TYPE;
nr_item_nf_orig_w			nf_credito_item.nr_item_nf_orig%TYPE;

/*Informacoes dos titulos Pagar/Receber */

cd_tipo_baixa_w				tipo_baixa_cpa.cd_tipo_baixa%TYPE;
cd_moeda_padrao_w			parametros_contas_pagar.cd_moeda_padrao%TYPE;
vl_total_nota_w				nota_fiscal.vl_total_nota%TYPE;
nr_titulo_w				titulo_pagar.nr_titulo%TYPE;
nr_seq_baixa_w				titulo_pagar_baixa.nr_sequencia%TYPE;
nr_seq_trans_fin_nf_w			parametro_contas_receber.nr_seq_trans_fin_nf%TYPE;
cd_tipo_recebimento_w			fis_metodo_pagamento.cd_tipo_recebimento%TYPE;

/*Dados da NF de credito */

cd_estabelecimento_w			nf_credito.cd_estabelecimento%TYPE;
ie_entrada_saida_w				natureza_operacao.ie_entrada_saida%TYPE;

cont_w					integer;
vl_rateio_w				nota_fiscal_item_rateio.vl_rateio%TYPE;
nr_item_nf_ww				nota_fiscal_item_rateio.nr_item_nf%TYPE;
vl_diferencia_w				double precision;
ds_erro_w				varchar(2000);
vl_diferenca_w                          double precision;
vl_total_item_w                         nota_fiscal_item.vl_total_item_nf%TYPE;
vl_total_rateio_w                       nota_fiscal_item_rateio.vl_rateio%TYPE;
cd_natureza_oper_nc_w			natureza_operacao.cd_natureza_operacao%TYPE;
ie_tipo_relacao_w                       nf_credito.ie_tipo_relacao%TYPE;
ie_uso_cfdi_w                           nf_credito.ie_uso_cfdi%TYPE;
ie_acao_W				nf_credito.ie_acao%TYPE;

vl_taxa_w				double precision;--nota_fiscal_item_trib.tx_tributo%TYPE;	
ie_cfdi_w				varchar(2);
vl_liquido_oring_w			nota_fiscal_item.vl_liquido%TYPE;
vl_base_calculo_ajust_w 		nota_fiscal_item_trib.vl_base_calculo%TYPE;
nr_item_nf_isento_w			nota_fiscal_item.nr_item_nf%TYPE;
cd_tributo_isento_w			tributo.cd_tributo%TYPE;
vl_total_item_nf_ww			nota_fiscal_item.vl_total_item_nf%TYPE;
vl_total_estrangeiro_w                  nota_fiscal_item.vl_total_estrangeiro%type;
vl_unit_estrangeiro_w                   nota_fiscal_item.vl_unit_estrangeiro%type;
cd_moeda_ww                             nf_credito.cd_moeda%type;
vl_cotacao_ww                           cotacao_moeda.vl_cotacao%type;
vl_liquido_ww				nota_fiscal_item.vl_liquido%TYPE;
vl_liquido_orig_w                       nota_fiscal_item.vl_liquido%TYPE;
ie_forma_aplicacao_w                    nf_credito.ie_forma_aplicacao%type;
ie_possui_trib_w                        varchar(1);
vl_aplicacao_w                          nf_credito_item.vl_aplicacao%type;
vl_aumentado_w                        	nf_credito_item.vl_aplicacao%type;
vl_diminuido_w                          nf_credito_item.vl_aplicacao%type;
ie_moeda_estrang_w                     	varchar(1);
cd_conta_contabil_ww                    conta_contabil.cd_conta_contabil%type;
cd_centro_custo_ww                     	centro_custo.cd_centro_custo%type;
nr_seq_nc_item_w                        nf_credito_item.nr_sequencia%type;
ie_sinal_operacao_w 			varchar(1);
pr_aplicacao_w				nf_credito_item.pr_aplicacao%type;
vl_liquido_nf_w                     	nota_fiscal_item.vl_liquido%type;

c01 CURSOR FOR
SELECT	b.nr_item_nf_orig,
	a.qt_item_nf,
	a.vl_unitario_item_nf,
	a.vl_total_item_nf,
	a.cd_material,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.vl_frete,
	a.vl_desconto,
	a.vl_despesa_acessoria,
	a.cd_setor_atendimento,
	a.cd_conta,
	a.cd_local_estoque,
	a.ds_observacao,
	a.ds_complemento,
	a.qt_peso_bruto,
	a.qt_peso_liquido,
	a.cd_unidade_medida_compra,
	a.qt_item_estoque,
	a.cd_unidade_medida_estoque,
	a.cd_lote_fabricacao,
	a.dt_validade,
	a.nr_seq_lote_fornec,
	a.dt_atualizacao_estoque,
	a.cd_conta_contabil,
	a.vl_desconto_rateio,
	a.vl_seguro,
	a.cd_centro_custo,
	a.cd_material_estoque,
	a.nr_ordem_compra,
	a.vl_liquido,
	a.pr_desconto,
	a.nr_item_oci,
	a.dt_entrega_ordem,
	a.nr_seq_conta_financ,
	a.nr_seq_proj_rec,
	a.pr_desc_financ,
	a.nr_seq_ordem_serv,
	a.nr_atendimento,
	a.nr_seq_unidade_adic,
	a.nr_seq_proj_gpi,
	a.nr_seq_etapa_gpi,
	a.nr_seq_conta_gpi,
	a.nr_contrato,
	a.dt_inicio_garantia,
	a.dt_fim_garantia,
	a.nr_seq_marca,
	a.nr_seq_orc_item_gpi,
	a.nr_solic_compra,
	a.nr_item_solic_compra,
	a.nr_seq_regra_contrato,
	a.nr_seq_preco_pj,
	coalesce(b.vl_aplicacao,0),
	b.nr_sequencia,
	coalesce(b.qt_aplicacao,0)
FROM	nota_fiscal_item a,
	nf_credito_item b
WHERE	b.nr_seq_nf_orig = a.nr_sequencia
AND	b.nr_item_nf_orig = a.nr_item_nf
AND	((b.vl_itens_imposto <> b.vl_itens_imposto_orig) OR (b.vl_itens_sem_imposto <> b.vl_itens_sem_imposto_orig))
AND	b.nr_seq_nf_credito = nr_seq_nf_credito_p
ORDER BY nr_item_nf_orig;

c02 CURSOR FOR
SELECT	a.cd_tributo,
	a.tx_tributo,
	a.vl_reducao_base,
	a.ie_rateio,
	a.vl_trib_nao_retido,
	a.vl_base_nao_retido,
	a.vl_trib_adic,
	a.vl_base_adic,
	a.nr_seq_sit_trib,
	a.ie_tributacao_csosn,
	a.ie_tributacao_cst,
	a.dt_conferencia,
	a.nm_usuario_conf,
	a.ie_exporta_xml,
	a.vl_base_calculo,
	a.vl_tributo
FROM	nota_fiscal_item_trib a,
	nf_credito_item b
WHERE a.nr_item_nf = nr_item_nf_orig_w
AND	b.nr_seq_nf_orig = a.nr_sequencia
AND	b.nr_item_nf_orig = a.nr_item_nf
AND	b.nr_seq_nf_credito = nr_seq_nf_credito_p
AND     a.vl_tributo > 0;

c03 CURSOR FOR
SELECT  nr_titulo
FROM    titulo_pagar
WHERE   nr_seq_nota_fiscal = nr_seq_nf_orig_w;

c04 CURSOR FOR
SELECT 	i.nr_item_nf,
	i.vl_total_item_nf - coalesce(i.vl_desconto,0),
	i.vl_liquido,
	nr_seq_item_nf_orig
FROM 	nota_fiscal_item i
WHERE	i.nr_sequencia = nr_sequencia_w;

c05 CURSOR FOR
SELECT  cd_tipo_recebimento
FROM	fis_metodo_pagamento
WHERE   nr_seq_nota = nr_seq_nf_orig_w;

c06 CURSOR FOR  --este cursor ira gerar um tributo zerado para os itens que nao possuem tributacao. - Feito a pedido de Arlete, em visita ao San javier.
SELECT	a.nr_item_nf
FROM	nota_fiscal_item a
WHERE	a.nr_sequencia = nr_sequencia_w
AND	NOT EXISTS (	SELECT 1
			FROM	nota_fiscal_item_trib x
			WHERE	x.nr_sequencia = a.nr_sequencia
			AND	x.nr_item_nf = a.nr_item_nf);
			
c07 CURSOR FOR
SELECT 	i.vl_liquido,
	r.vl_rateio,
	r.cd_conta_contabil,
	r.cd_centro_custo,
	r.vl_tributo
FROM 	nota_fiscal_item i,
	nota_fiscal_item_rateio r
WHERE	i.nr_sequencia	= r.nr_seq_nota
and	i.nr_item_nf 	= r.nr_item_nf
and	r.nr_seq_nota 	= nr_seq_nf_orig_w
and   	r.nr_item_nf 	= nr_item_nf_orig_w;

c06_w		c06%ROWTYPE;

c08 CURSOR FOR
SELECT 	b.nr_item_nf,
	null cd_material,
	a.cd_procedimento,
	a.ie_origem_proced,
	coalesce(a.cd_centro_custo_receita,
		(SELECT	max(coalesce(x.cd_centro_custo_receita,x.cd_centro_custo))
		from	conta_contabil y,
			setor_atendimento x
		where	y.cd_conta_contabil = a.cd_conta_contabil
		and	x.cd_setor_atendimento = a.cd_setor_atendimento
		and	y.ie_centro_custo = 'S')) cd_centro_custo,
	sum(a.vl_procedimento) vl_item,
	a.nr_seq_proc_interno
from   	procedimento_paciente a,
	conta_pac_nf_item b
where  	a.nr_sequencia = b.nr_seq_propaci
and	nr_sequencia_nf = nr_seq_nf_orig_w
group by nr_item_nf,
	a.nr_interno_conta,
	a.cd_procedimento,
	a.ie_origem_proced,
	a.cd_centro_custo_receita,
	a.cd_setor_atendimento,
	a.cd_conta_contabil,
	a.nr_seq_proc_interno

union all

select 	b.nr_item_nf,
	a.cd_material,
	null cd_procedimento,
	null ie_origem_proced,
	coalesce(a.cd_centro_custo_receita,
		(select	max(coalesce(x.cd_centro_custo_receita,x.cd_centro_custo))
		from	conta_contabil y,
			setor_atendimento x
		where	y.cd_conta_contabil = a.cd_conta_contabil
		and	x.cd_setor_atendimento = a.cd_setor_atendimento
		and	y.ie_centro_custo = 'S')) cd_centro_custo,
	sum(a.vl_material) vl_item,
	null
from   	material_atend_paciente a,
	conta_pac_nf_item b
where  	a.nr_sequencia = b.nr_seq_matpaci
and	nr_sequencia_nf = nr_seq_nf_orig_w
group by nr_item_nf,
	a.nr_interno_conta,
	a.cd_material,
	a.cd_centro_custo_receita,
	a.cd_setor_atendimento,
	a.cd_conta_contabil,
	null;

c08_w	c08%rowtype;

c09 CURSOR FOR
SELECT 	a.nr_sequencia
from 	nota_fiscal a
where 	a.nr_sequencia_ref = nr_seq_nf_orig_w
and 	a.nr_sequencia <> nr_sequencia_w
and     coalesce(a.nr_seq_baixa_tit::text, '') = ''
and     a.ie_situacao = '1';


BEGIN

IF (nr_seq_nf_credito_p IS NOT NULL AND nr_seq_nf_credito_p::text <> '') THEN
	BEGIN

	SELECT	nr_nota_credito,
		cd_serie_nf,
		cd_operacao_nf,
		nr_seq_nf_orig,
		cd_estabelecimento,
		ds_observacao,
		ie_tipo_relacao,
		ie_uso_cfdi,
		cd_moeda,
		vl_cotacao,
		ie_forma_aplicacao,
		ie_acao
	INTO STRICT	nr_nota_fiscal_w,
		cd_serie_nf_w,
		cd_operacao_nf_w,
		nr_seq_nf_orig_w,
		cd_estabelecimento_w,
		ds_observacao_w,
		ie_tipo_relacao_w,
		ie_uso_cfdi_w,
		cd_moeda_ww,
		vl_cotacao_ww,
		ie_forma_aplicacao_w,
		ie_acao_w
	FROM	nf_credito
	WHERE	nr_sequencia = nr_seq_nf_credito_p;

	SELECT  cd_natureza_operacao
	INTO STRICT	cd_natureza_oper_nc_w
	FROM 	operacao_nota
	WHERE	cd_operacao_nf = cd_operacao_nf_w;

	SELECT	MAX(cd_cgc)
	INTO STRICT	cd_cgc_emitente_ww
	FROM	estabelecimento
	WHERE	cd_estabelecimento = cd_estabelecimento_w;

	/* obter se sera considerado estabelecimento no parametro de compras */

	SELECT	coalesce(MAX(ie_estab_serie_nf),'N')
	INTO STRICT	ie_estab_serie_nf_w
	FROM	parametro_compras
	WHERE	cd_estabelecimento = cd_estabelecimento_w;

	SELECT COUNT(*)
	INTO STRICT 	cont_w
	FROM	serie_nota_fiscal
	WHERE	cd_serie_nf 		= cd_serie_nf_w
	AND 	cd_estabelecimento 	= cd_estabelecimento_w;
	IF (cont_w = 0) THEN
		--(-20011, 'A Serie informada nao esta cadastrada!');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(173208);
	END IF;

	SELECT	nr_ultima_nf + 1,
		ie_numero_nota
	INTO STRICT	nr_nota_nf_w,
		ie_numero_nota_w
	FROM	serie_nota_fiscal
	WHERE	cd_serie_nf 		= cd_serie_nf_w
	AND	cd_estabelecimento 	= cd_estabelecimento_w;

	IF (ie_numero_nota_w = 'M') THEN
		nr_nota_nf_w := nr_nota_fiscal_w;
	END IF;


	SELECT	ie_tipo_nota,
		cd_natureza_operacao,
		cd_condicao_pagamento,
		cd_cgc_emitente,
		cd_cgc,
		cd_pessoa_fisica,
		ie_tipo_frete,
		cd_moeda,
		vl_conv_moeda,
		nr_interno_conta,	
		nr_seq_protocolo,
		nr_seq_lote_prot   
	INTO STRICT	ie_tipo_nota_w,
		cd_natureza_operacao_w,
		cd_condicao_pagamento_w,
		cd_cgc_emitente_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		ie_tipo_frete_w,
		cd_moeda_w,
		vl_cotacao_w,
		nr_interno_conta_w,	
		nr_seq_protocolo_w,    
		nr_seq_lote_prot_w    
	FROM	nota_fiscal
	WHERE	nr_sequencia = nr_seq_nf_orig_w;

	SELECT	coalesce(MAX(nr_sequencia_nf),0) +1
	INTO STRICT	nr_sequencia_nf_w
	FROM	nota_fiscal
	WHERE	cd_estabelecimento	= cd_estabelecimento_w
	AND	coalesce(cd_cgc_emitente,'0')= coalesce(cd_cgc_emitente_w,'0')
	AND	cd_serie_nf		= cd_serie_nf_w
	AND	nr_nota_fiscal		= nr_nota_nf_w;


	SELECT	nextval('nota_fiscal_seq')
	INTO STRICT	nr_sequencia_w
	;

	INSERT INTO nota_fiscal(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_condicao_pagamento,
		dt_contabil,
		cd_cgc,
		cd_pessoa_fisica,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		vl_despesa_doc,
		ds_observacao,
		cd_serie_referencia,
		cd_natureza_operacao,
		dt_atualizacao_estoque,
		vl_desconto_rateio,
		ie_situacao,
		nr_ordem_compra,
		nr_lote_contabil,
		nr_sequencia,
		nr_sequencia_ref,
		cd_moeda,
		vl_conv_moeda,
		ie_entregue_bloqueto,
		ie_tipo_nota,
		cd_setor_digitacao,
		nr_danfe,
		cd_moeda_estrangeira,
		vl_conv_estrangeiro,
		nr_interno_conta,
		nr_seq_protocolo,
		nr_seq_lote_prot)
	VALUES (
		cd_estabelecimento_p,			-- cd_estabelecimento
		cd_cgc_emitente_w,			-- cd_cgc_emitente
		cd_serie_nf_w,				-- cd_serie_nf
		nr_nota_nf_w,				-- nr_nota_fiscal
		nr_sequencia_nf_w,			-- nr_sequencia_nf
		cd_operacao_nf_w,			-- cd_operacao_nf
		clock_timestamp(),				-- dt_emissao
		clock_timestamp(),				-- dt_entrada_saida
		'1',					-- ie_acao_nf
		'0',					-- ie_emissao_nf
		ie_tipo_frete_w,			-- ie_tipo_frete
		0,					-- vl_mercadoria
		0,					-- vl_total_nota
		0,					-- qt_peso_bruto
		0,					-- qt_peso_liquido
		clock_timestamp(),				-- dt_atualizacao
		nm_usuario_p,				-- nm_usuario
		cd_condicao_pagamento_w,		-- cd_condicao_pagamento
		NULL,					-- dt_contabil
		cd_cgc_w,				-- cd_cgc
		cd_pessoa_fisica_w,			-- cd_pessoa_fisica
		NULL,					-- vl_ipi
		0,					-- vl_descontos
		0,					-- vl_frete
		0,					-- vl_seguro
		0,					-- vl_despesa_acessoria
		0,					-- vl_despesa_doc
		ds_observacao_w,			-- ds_observacao
		--nr_nota_referencia_w,			-- nr_nota_referencia
		null,					-- cd_serie_referencia
		cd_natureza_oper_nc_w,			--cd_natureza_operacao_w, -- cd_natureza_operacao
		NULL,					-- dt_atualizacao_estoque
		NULL,					-- vl_desconto_rateio
		'1',					-- ie_situacao
		NULL,					-- nr_ordem_compra
		0,					-- nr_lote_contabil
		nr_sequencia_w,				-- nr_sequencia
		nr_seq_nf_orig_w,			-- nr_sequencia_ref
		cd_moeda_w,				-- cd_moeda
		vl_cotacao_w,				-- vl_conv_moeda
		'N',					-- ie_entregue_bloqueto
		ie_tipo_nota_w,				-- ie_tipo_nota
		NULL,					-- cd_setor_digitacao
		NULL,					-- nr_danfe
		cd_moeda_ww,
		vl_cotacao_ww,
		nr_interno_conta_w,	
		nr_seq_protocolo_w,
		nr_seq_lote_prot_w );

	UPDATE	nf_credito
	SET	nr_seq_nf_gerada = nr_sequencia_w
	WHERE	nr_sequencia = nr_seq_nf_credito_p;

	OPEN	c01;
	LOOP
	FETCH	c01
	INTO	nr_item_nf_orig_w,
		qt_item_nf_w,
		vl_unitario_item_nf_w,
		vl_total_item_nf_w,
		cd_material_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		vl_frete_w,
		vl_desconto_w,
		vl_despesa_acessoria_w,
		cd_setor_atendimento_w,
		cd_conta_w,
		cd_local_estoque_w,
		ds_observacao_item_w,
		ds_complemento_w,
		qt_peso_bruto_w,
		qt_peso_liquido_w,
		cd_unidade_medida_compra_w,
		qt_item_estoque_w,
		cd_unidade_medida_estoque_w,
		cd_lote_fabricacao_w,
		dt_validade_w,
		nr_seq_lote_fornec_w,
		dt_atualizacao_estoque_w,
		cd_conta_contabil_w,
		vl_desconto_rateio_w,
		vl_seguro_w,
		cd_centro_custo_w,
		cd_material_estoque_w,
		nr_ordem_compra_w,
		vl_liquido_w,
		pr_desconto_w,
		nr_item_oci_w,
		dt_entrega_ordem_w,
		nr_seq_conta_financ_w,
		nr_seq_proj_rec_w,
		pr_desc_financ_w,
		nr_seq_ordem_serv_w,
		nr_atendimento_w,
		nr_seq_unidade_adic_w,
		nr_seq_proj_gpi_w,
		nr_seq_etapa_gpi_w,
		nr_seq_conta_gpi_w,
		nr_contrato_w,
		dt_inicio_garantia_w,
		dt_fim_garantia_w,
		nr_seq_marca_w,
		nr_seq_orc_item_gpi_w,
		nr_solic_compra_w,
		nr_item_solic_compra_w,
		nr_seq_regra_contrato_w,
		nr_seq_preco_pj_w,
		vl_aplicacao_w,
		nr_seq_nc_item_w,
		qt_item_aplicacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		BEGIN
		SELECT (coalesce(MAX(nr_item_nf),0)+1)
		INTO STRICT	nr_item_nf_w
		FROM	nota_fiscal_item
		WHERE	nr_sequencia = nr_sequencia_w;

		-- caso tiver nf credito antigas vai atualizar o valor liquido sem o desconto/aumento atual
		OPEN	c09;
		LOOP	
		FETCH	c09
		INTO 	nr_sequencia_nf_ref_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			BEGIN
				select count(*)
				into STRICT 		qt_nf_cred_w
				from 		nf_credito
				where 		nr_seq_nf_gerada = nr_sequencia_nf_ref_w;
				
				if (qt_nf_cred_w > 0) then
					select 	coalesce(max(ie_acao),'D')
					into STRICT 		ie_acao_nf_credito_w
					from 		nf_credito
					where 		nr_seq_nf_gerada = nr_sequencia_nf_ref_w;

					ie_sinal_operacao_w := '-';

					if (ie_acao_nf_credito_w = 'A') then
						ie_sinal_operacao_w := '+';
					end if;

					select	coalesce(max(a.vl_total_item_nf),0),
						coalesce(max(a.vl_liquido),0)
					into STRICT 	vl_total_item_nf_ref_w,
						vl_liquido_ref_w
					from	nota_fiscal_item a
					where	a.nr_sequencia = nr_sequencia_nf_ref_w
					and	a.nr_item_nf = nr_item_nf_orig_w;

					-- vai atualizar o valor do item e o valor liquido sequindo a operacao da nf_credito
					EXECUTE 'select ' || vl_total_item_nf_w || ' ' || ie_sinal_operacao_w || vl_total_item_nf_ref_w || ' from dual'
					into STRICT vl_total_item_nf_w;

					EXECUTE 'select ' || vl_liquido_w || ' ' || ie_sinal_operacao_w || vl_liquido_ref_w || ' from dual'
					into STRICT vl_liquido_w;
				end if;
			END;
		END LOOP;
		CLOSE c09;

		-- pega os valores da item da nf de credito para verificar a taxa
		SELECT 	max(vl_itens_sem_imposto),
			max(vl_itens_imposto),
			max(vl_itens_imposto_orig),
			max(vl_itens_sem_imposto_orig)
		into STRICT 	vl_itens_sem_imposto_w,
			vl_itens_imposto_w,
			vl_itens_imposto_orig_w,
			vl_itens_sem_imposto_orig_w
		FROM 	nf_credito_item a
		where 	a.nr_item_nf_orig = nr_item_nf_orig_w
		and	a.nr_seq_nf_credito = nr_seq_nf_credito_p;
		
		vl_taxa_w := 0;
		
		-- verificar de que valores calcular a taxa
		IF (coalesce(vl_itens_imposto_orig_w,0) > 0) THEN	
			vl_taxa_w := TRUNC(((vl_itens_imposto_orig_w - vl_itens_imposto_w) / vl_itens_imposto_orig_w),9);
		ELSIF (coalesce(vl_itens_sem_imposto_orig_w,0) > 0) THEN
			vl_taxa_w := TRUNC(((vl_itens_sem_imposto_orig_w - vl_itens_sem_imposto_w) / vl_itens_sem_imposto_orig_w),9);
		END IF;

		--calcula os valores do item conforme a taxa e o historico anterior das nf credito
		if (vl_taxa_w < 0) then
			vl_taxa_w := (vl_taxa_w * -1) + 1;
		end if;
		
		vl_liquido_orig_w 	:= vl_liquido_w;
		vl_liquido_oring_w 	:= vl_liquido_w;	
		vl_liquido_w		:= (vl_liquido_w * vl_taxa_w);
		vl_total_item_nf_w 	:= ((vl_total_item_nf_w - vl_desconto_w) * vl_taxa_w);
		
		if (ie_forma_aplicacao_w = 'V' or ie_forma_aplicacao_w = 'P') then

			vl_unitario_item_nf_w 	:= (vl_total_item_nf_w / qt_item_nf_w);

		elsif (ie_forma_aplicacao_w = 'Q') then

			select 	coalesce(sum(a.qt_aplicacao),0)
			into STRICT	qt_diminuido_w
			from 	nf_credito_item a,
				nf_credito b
			where 	a.nr_seq_nf_orig 	= nr_seq_nf_orig_w
			and 	a.nr_seq_nf_credito	= b.nr_sequencia
			and	ie_acao			= 'D'
			and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');

			select 	coalesce(sum(a.qt_aplicacao),0)
			into STRICT	qt_aumentado_w
			from  	nf_credito_item a,
				nf_credito b
			where 	a.nr_seq_nf_orig 	= nr_seq_nf_orig_w
			and 	a.nr_seq_nf_credito	= b.nr_sequencia
			and   	ie_acao 		= 'A'
			and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');

			if (ie_acao_w = 'D') then
				qt_item_nf_w	:= qt_item_aplicacao_w;
			else
				qt_item_nf_w	:= qt_item_nf_w + qt_item_aplicacao_w - qt_diminuido_w + qt_aumentado_w;
			end if;

			vl_total_item_nf_w := qt_item_nf_w * vl_unitario_item_nf_w;

			if (coalesce(qt_item_nf_w,0) > 0) then

				if (coalesce(nr_seq_unidade_adic_w,0) > 0) then

					select 	coalesce(max(qt_conversao),1)
					into STRICT	qt_item_estoque_w
					from 	unidade_medida_adic_compra				
					where 	nr_sequencia = nr_seq_unidade_adic_w;

				else

					select 	obter_qt_convertida_compra_est(cd_material_w,qt_item_nf_w,cd_unidade_medida_compra_w,nr_seq_marca_w,cd_cgc_w,cd_estabelecimento_p)
					into STRICT	qt_item_estoque_w
					;

				end if;

			end if;

		end if;

		vl_liquido_w 		:= (TRUNC(vl_liquido_w,2));
		vl_total_item_nf_w 	:= (TRUNC(vl_total_item_nf_w,4));
		vl_unitario_item_nf_w 	:= (TRUNC(vl_unitario_item_nf_w,4));

		if ((cd_moeda_ww IS NOT NULL AND cd_moeda_ww::text <> '') and (coalesce(vl_cotacao_ww,0) > 0) and (ie_forma_aplicacao_w = 'V')) then		
			ie_moeda_estrang_w := 'S';

		elsif ((cd_moeda_ww IS NOT NULL AND cd_moeda_ww::text <> '') and (coalesce(vl_cotacao_ww,0) > 0) and (ie_forma_aplicacao_w = 'P')) then
		        ie_moeda_estrang_w := 'P';
		else
			ie_moeda_estrang_w := 'N';
		end if;
		
		INSERT INTO nota_fiscal_item(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_natureza_operacao,
			qt_item_nf,
			vl_unitario_item_nf,
			vl_total_item_nf,
			dt_atualizacao,
			nm_usuario,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_material,
			cd_procedimento,
			cd_setor_atendimento,
			cd_conta,
			cd_local_estoque,
			ds_observacao,
			ds_complemento,
			qt_peso_bruto,
			qt_peso_liquido,
			cd_unidade_medida_compra,
			qt_item_estoque,
			cd_unidade_medida_estoque,
			cd_lote_fabricacao,
			dt_validade,
			nr_seq_lote_fornec,
			dt_atualizacao_estoque,
			cd_conta_contabil,
			vl_desconto_rateio,
			vl_seguro,
			cd_centro_custo,
			cd_material_estoque,
			ie_origem_proced,
			nr_ordem_compra,
			nr_sequencia,
			vl_liquido,
			pr_desconto,
			nr_item_oci,
			dt_entrega_ordem,
			nr_seq_conta_financ,
			nr_seq_proj_rec,
			pr_desc_financ,
			nr_seq_ordem_serv,
			nr_atendimento,
			nr_seq_unidade_adic,
			nr_seq_proj_gpi,
			nr_seq_etapa_gpi,
			nr_seq_conta_gpi,
			nr_contrato,
			dt_inicio_garantia,
			dt_fim_garantia,
			nr_seq_marca,
			nr_seq_orc_item_gpi,
			nr_solic_compra,
			nr_item_solic_compra,
			nr_seq_regra_contrato,
			nr_seq_preco_pj,
			vl_unit_estrangeiro,
			vl_total_estrangeiro,
			nr_seq_item_nf_orig,
			cd_sequencia_parametro)
		VALUES(	cd_estabelecimento_p,				-- cd_estabelecimento
			cd_cgc_emitente_w,				-- cd_cgc_emitente
			cd_serie_nf_w,					-- cd_serie_nf
			nr_nota_nf_w,					-- nr_nota_fiscal
			nr_sequencia_nf_w,				-- nr_sequencia_nf
			nr_item_nf_w,					-- nr_item_nf
			cd_natureza_operacao_w,				-- cd_natureza_operacao
			qt_item_nf_w,					-- qt_item_nf
			CASE WHEN ie_moeda_estrang_w='S' THEN (vl_unitario_item_nf_w * vl_cotacao_ww)  ELSE vl_unitario_item_nf_w END ,-- vl_unitario_item_nf
			CASE WHEN ie_moeda_estrang_w='S' THEN (vl_total_item_nf_w * vl_cotacao_ww)  ELSE vl_total_item_nf_w END ,-- vl_total_item_nf
			clock_timestamp(),					-- dt_atualizacao
			nm_usuario_p,					-- nm_usuario
			vl_frete_w,					-- vl_frete
			0, 						--vl_desconto_w, -- vl_desconto ------- RETIRADO PORQUE ESTAVA TRAZENDO O VALOR DE DESCONTO DA NOTA ORIGINAL
			vl_despesa_acessoria_w,				-- vl_despesa_acessoria
			cd_material_w,					-- cd_material
			cd_procedimento_w,				-- cd_procedimento
			cd_setor_atendimento_w,				-- cd_setor_atendimento
			cd_conta_w,					-- cd_conta
			cd_local_estoque_w,				-- cd_local_estoque
			ds_observacao_item_w,				-- ds_observacao
			ds_complemento_w,				-- ds_complemento
			qt_peso_bruto_w,				-- qt_peso_bruto
			qt_peso_liquido_w,				-- qt_peso_liquido
			cd_unidade_medida_compra_w,			-- cd_unidade_medida_compra
			qt_item_estoque_w,				-- qt_item_estoque
			cd_unidade_medida_estoque_w,			-- cd_unidade_medida_estoque
			cd_lote_fabricacao_w,				-- cd_lote_fabricacao
			dt_validade_w,					-- dt_validade
			nr_seq_lote_fornec_w,				-- nr_seq_lote_fornec
			dt_atualizacao_estoque_w,			-- dt_atualizacao_estoque
			cd_conta_contabil_w,				-- cd_conta_contabil
			0,						--vl_desconto_rateio_w, -- vl_desconto_rateio
			vl_seguro_w,					-- vl_seguro
			cd_centro_custo_w,				-- cd_centro_custo
			cd_material_estoque_w,				-- cd_material_estoque
			ie_origem_proced_w,				-- ie_origem_proced
			nr_ordem_compra_w,				-- nr_ordem_compra
			nr_sequencia_w,					-- nr_sequencia
			CASE WHEN ie_moeda_estrang_w='S' THEN (vl_liquido_w * vl_cotacao_ww)  ELSE vl_liquido_w END ,-- vl_liquido
			0,						--pr_desconto_w, -- pr_desconto
			nr_item_oci_w,					-- nr_item_oci
			dt_entrega_ordem_w,				-- dt_entrega_ordem
			nr_seq_conta_financ_w,				-- nr_seq_conta_financ
			nr_seq_proj_rec_w,				-- nr_seq_proj_rec
			pr_desc_financ_w,				-- pr_desc_financ
			nr_seq_ordem_serv_w,				-- nr_seq_ordem_serv
			nr_atendimento_w,				-- nr_atendimento
			nr_seq_unidade_adic_w,				-- nr_seq_unidade_adic
			nr_seq_proj_gpi_w,				-- nr_seq_proj_gpi
			nr_seq_etapa_gpi_w,				-- nr_seq_etapa_gpi
			nr_seq_conta_gpi_w,				-- nr_seq_conta_gpi
			nr_contrato_w,					-- nr_contrato
			dt_inicio_garantia_w,				-- dt_inicio_garantia
			dt_fim_garantia_w,				-- dt_fim_garantia
			nr_seq_marca_w,					-- nr_seq_marca
			nr_seq_orc_item_gpi_w,				-- nr_seq_orc_item_gpi
			nr_solic_compra_w,				-- nr_solic_compra
			nr_item_solic_compra_w,				-- nr_item_solic_compra
			nr_seq_regra_contrato_w,			-- nr_seq_regra_contrato
			nr_seq_preco_pj_w,				-- nr_seq_preco_pj
			CASE WHEN ie_moeda_estrang_w='S' THEN (vl_total_item_nf_w/qt_item_nf_w) WHEN ie_moeda_estrang_w='P' THEN ((vl_total_item_nf_w/qt_item_nf_w)/vl_cotacao_ww)  ELSE 0 END , -- vl_unit_estrangeiro
			CASE WHEN ie_moeda_estrang_w='S' THEN vl_liquido_orig_w WHEN ie_moeda_estrang_w='P' THEN (vl_liquido_orig_w/vl_cotacao_ww)  ELSE 0 END , -- vl_total_estrangeiro
			nr_item_nf_orig_w,
			philips_contabil_pck.get_parametro_conta_contabil);

		OPEN	c02;
		LOOP
		FETCH	c02
		INTO	cd_tributo_w,
			tx_tributo_w,
			vl_reducao_base_w,
			ie_rateio_w,
			vl_trib_nao_retido_w,
			vl_base_nao_retido_w,
			vl_trib_adic_w,
			vl_base_adic_w,
			nr_seq_sit_trib_w,
			ie_tributacao_csosn_w,
			ie_tributacao_cst_w,
			dt_conferencia_w,
			nm_usuario_conf_w,
			ie_exporta_xml_w,
			vl_base_calculo_w,
			vl_tributo_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			BEGIN
			
			vl_base_calculo_cred_w := round((vl_base_calculo_w)::numeric, 4);

			OPEN	c09;
			LOOP	
			FETCH	c09
			INTO 	nr_sequencia_nf_ref_w;
			EXIT WHEN NOT FOUND; /* apply on c09 */
				BEGIN
					select	count(*)
					into STRICT 		qt_nf_cred_w
					from 		nf_credito
					where 		nr_seq_nf_gerada = nr_sequencia_nf_ref_w;
					
					if (qt_nf_cred_w > 0) then
						select 	coalesce(max(ie_acao),'D')
						into STRICT 		ie_acao_nf_credito_w
						from 		nf_credito
						where 	nr_seq_nf_gerada = nr_sequencia_nf_ref_w;

						ie_sinal_operacao_w := '-';

						if (ie_acao_nf_credito_w = 'A') then
							ie_sinal_operacao_w := '+';
						end if;

						select	coalesce(max(a.vl_base_calculo),0)
						into STRICT 		vl_base_calculo_ref_w
						from		nota_fiscal_item_trib a
						where		a.nr_sequencia = nr_sequencia_nf_ref_w
						and		a.nr_item_nf = nr_item_nf_orig_w
						and 		a.cd_tributo = cd_tributo_w;

						-- vai atualizar a base de calculo do tributo com base nas nf credito anterior
						EXECUTE 'select round(' || vl_base_calculo_w || ' ' || ie_sinal_operacao_w || vl_base_calculo_ref_w || ', 4) from dual'
						into STRICT vl_base_calculo_cred_w;
					end if;
				END;
			END LOOP;
			CLOSE c09;
			
			if ( ie_forma_aplicacao_w = 'Q' ) then
				vl_base_calculo_cred_w := vl_total_item_nf_w;
			else
				vl_base_calculo_cred_w := vl_base_calculo_cred_w * vl_taxa_w;
			end if;
			
			vl_trib_cred_w :=  (vl_base_calculo_cred_w * (tx_tributo_w / 100));
			vl_base_calculo_ajust_w := vl_base_calculo_cred_w + vl_trib_cred_w;
			vl_diferencia_w := (trunc((vl_liquido_oring_w * ((tx_tributo_w / 100) + 1)), 2) - vl_base_calculo_ajust_w);

			IF (vl_diferencia_w >= -0.02) AND (vl_diferencia_w <=  0.02) THEN
				vl_trib_cred_w := vl_trib_cred_w + vl_diferencia_w;
			END IF;
			
			if ( ie_moeda_estrang_w = 'S') then
				vl_tributo_w := vl_trib_cred_w * vl_cotacao_ww;
				vl_base_calculo_w := vl_base_calculo_cred_w * vl_cotacao_ww;
			else
				vl_tributo_w := vl_trib_cred_w;
				vl_base_calculo_w := vl_base_calculo_cred_w;
			end if;
			
			INSERT INTO nota_fiscal_item_trib(
				nr_sequencia,
				cd_estabelecimento,
				cd_cgc_emitente,
				cd_serie_nf,
				nr_sequencia_nf,
				nr_item_nf,
				cd_tributo,
				vl_tributo,
				dt_atualizacao,
				nm_usuario,
				vl_base_calculo,
				tx_tributo,
				vl_reducao_base,
				ie_rateio,
				vl_trib_nao_retido,
				vl_base_nao_retido,
				vl_trib_adic,
				vl_base_adic,
				nr_seq_sit_trib,
				nr_nota_fiscal,
				ie_tributacao_csosn,
				ie_tributacao_cst,
				dt_conferencia,
				nm_usuario_conf,
				ie_exporta_xml)
			VALUES (
				nr_sequencia_w,		--nr_sequencia,
				cd_estabelecimento_p,	--cd_estabelecimento,
				cd_cgc_emitente_w,	--cd_cgc_emitente,
				cd_serie_nf_w,		--cd_serie_nf,
				nr_sequencia_nf_w,	--nr_sequencia_nf,
				nr_item_nf_w,		--nr_item_nf,
				cd_tributo_w,		--cd_tributo,
				vl_tributo_w,--vl_tributo,
				clock_timestamp(),		--dt_atualizacao,
				nm_usuario_p,		--nm_usuario,
				vl_base_calculo_w,--vl_base_calculo,
				tx_tributo_w,		--tx_tributo,
				vl_reducao_base_w,	--vl_reducao_base,
				ie_rateio_w,		--ie_rateio,
				vl_trib_nao_retido_w,	--vl_trib_nao_retido,
				vl_base_nao_retido_w,	--vl_base_nao_retido,
				vl_trib_adic_w,		--vl_trib_adic,
				vl_base_adic_w,		--vl_base_adic,
				nr_seq_sit_trib_w,	--nr_seq_sit_trib,
				nr_nota_nf_w,		--nr_nota_fiscal,
				ie_tributacao_csosn_w,	--ie_tributacao_csosn,
				ie_tributacao_cst_w,	--ie_tributacao_cst,
				dt_conferencia_w,	--dt_conferencia,
				nm_usuario_conf_w,	--nm_usuario_conf,
				ie_exporta_xml_w	--ie_exporta_xml
			);
			END;
		END LOOP;
		CLOSE c02;
		
		END;
	END LOOP;
	CLOSE	c01;

	END;
END IF;

IF (ie_tipo_relacao_w IS NOT NULL AND ie_tipo_relacao_w::text <> '') THEN

INSERT  INTO fis_tipo_relacao(nr_sequencia,
	nr_seq_nota,
	dt_atualizacao,
	nm_usuario,
	cd_tipo_relacao,
	cd_estabelecimento)
VALUES (	nextval('fis_tipo_relacao_seq'),
	nr_sequencia_w,
	clock_timestamp(),
	nm_usuario_p,
	ie_tipo_relacao_w,
	cd_estabelecimento_p);

END IF;

IF (ie_uso_cfdi_w IS NOT NULL AND ie_uso_cfdi_w::text <> '') THEN

INSERT	INTO fis_uso_cfdi(nr_sequencia,
		nr_seq_nota,
		dt_atualizacao,
		nm_usuario,
		cd_uso_cfdi,
		cd_estabelecimento)
VALUES (	nextval('fis_uso_cfdi_seq'),
		nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		ie_uso_cfdi_w,
		cd_estabelecimento_p);


END IF;

COMMIT;

select	coalesce(max(ie_entrada_saida),'N')
into STRICT	ie_entrada_saida_w
from	natureza_operacao
where	cd_natureza_operacao	= cd_natureza_operacao_w;
	
CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);
CALL gerar_vencimento_nota_fiscal(nr_sequencia_w,nm_usuario_p);

if (ie_entrada_saida_w = 'S') then
	CALL gerar_imposto_nf(nr_sequencia_w,nm_usuario_p,0,0,'N','A');
end if;

CALL atualizar_nota_fiscal(nr_sequencia_w,'I',nm_usuario_p,3);

OPEN c06; -- HSJ 2018 -- ADICIONADO PARA QUE SEJA CRIADO O IMPOSTO 0%
LOOP
FETCH c06 INTO
	nr_item_nf_isento_w;
EXIT WHEN NOT FOUND; /* apply on c06 */
	BEGIN
	SELECT	MAX(cd_tributo)
	INTO STRICT	cd_tributo_isento_w
	FROM	tributo
	WHERE	ie_tipo_tributo = 'IVA'
	AND	cd_tributo = 32; --- FEITO PALIATIVAMENTE ATE ENCONTRAR UMA FORMA DE DIFERENCIAR IMPOSTO ZERO DO ISENTO
	SELECT VL_TOTAL_ITEM_NF
	INTO STRICT   vl_total_item_nf_ww
	FROM	nota_fiscal_item
	WHERE	nr_sequencia = nr_sequencia_w
	AND	nr_item_nf = nr_item_nf_isento_w;
	
	if (cd_tributo_isento_w IS NOT NULL AND cd_tributo_isento_w::text <> '') then

	insert into nota_fiscal_item_trib(	nr_sequencia,
						cd_estabelecimento,
						cd_serie_nf,
						nr_sequencia_nf,
						nr_item_nf,
						cd_tributo,
						vl_tributo,
						dt_atualizacao,
						nm_usuario,
						ie_rateio,
						vl_trib_nao_retido,
						vl_base_nao_retido,
						vl_trib_adic,
						vl_base_adic,
						vl_base_calculo,
						tx_tributo)
				VALUES (	nr_sequencia_w,
					cd_estabelecimento_p,
					cd_serie_nf_w,
					nr_sequencia_nf_w,
					nr_item_nf_isento_w,
					cd_tributo_isento_w,
					0,
					clock_timestamp(),
					nm_usuario_p,
					'N',
					0,
					0,
					0,
					0,
					vl_total_item_nf_ww,
					0);
	end if;			


	END;
END LOOP;
CLOSE c06;


BEGIN
for c08_w in	c08 LOOP
	BEGIN
			
	if (c08_w.nr_item_nf IS NOT NULL AND c08_w.nr_item_nf::text <> '') then
		nr_item_nf_ww := c08_w.nr_item_nf;
	else
		select max(nr_item_nf)
		into STRICT   nr_item_nf_ww
		from   nota_fiscal_item
		where  nr_sequencia = nr_sequencia_w;
	end if;
	
	if (c08_w.cd_procedimento IS NOT NULL AND c08_w.cd_procedimento::text <> '') then
	
		SELECT * FROM define_conta_procedimento(
		cd_estabelecimento_p, c08_w.cd_procedimento, c08_w.ie_origem_proced, '1', null, null, null, null, null, null, null, clock_timestamp(), cd_conta_contabil_ww,    -- variavel (out) cd_conta_contabil_ww
		cd_centro_custo_ww,   	--variavel( out mas nao deve ser utilizado no insert)
		null, 'N', null, null, null, null, cd_operacao_nf_w, null, null, c08_w.nr_seq_proc_interno) INTO STRICT cd_conta_contabil_ww, 
		cd_centro_custo_ww;
		
	elsif (c08_w.cd_material IS NOT NULL AND c08_w.cd_material::text <> '') then
		
		SELECT * FROM define_conta_material(
		cd_estabelecimento_p, c08_w.cd_material, '1', null, null, null, null, null, null, null, null, null, clock_timestamp(), cd_conta_contabil_ww,   	-- variavel (out) cd_conta_contabil_ww     
		cd_centro_custo_ww,    	--variavel( out mas nao deve ser utilizado no insert)            
		null, 'N', null, null, null, cd_operacao_nf_w, null) INTO STRICT cd_conta_contabil_ww, 
		cd_centro_custo_ww;
		
	end if;		
	--------- nota original
	select  coalesce(max(b.vl_total_item_nf) - coalesce(max(b.vl_desconto),0),0)
	into STRICT    vl_total_item_nf_ww
	from    nota_fiscal a,
		nota_fiscal_item b				
	where   a.nr_sequencia = nr_seq_nf_orig_w
	and     a.nr_sequencia = b.nr_sequencia
	and     b.nr_item_nf = nr_item_nf_ww;
		
	----------- nota atual
	select  coalesce(max(b.vl_total_item_nf) - coalesce(max(b.vl_desconto),0),0)
	into STRICT    vl_total_item_nf_w
	from    nota_fiscal a,
		nota_fiscal_item b				
	where   a.nr_sequencia = nr_sequencia_w
	and     a.nr_sequencia = b.nr_sequencia
	and     b.nr_seq_item_nf_orig = nr_item_nf_ww;
	
	if (vl_total_item_nf_w > 0) then

		select  b.nr_item_nf
		into STRICT    nr_item_nf_ww
		from    nota_fiscal a,
			nota_fiscal_item b				
		where   a.nr_sequencia = nr_sequencia_w
		and     a.nr_sequencia = b.nr_sequencia
		and     b.nr_seq_item_nf_orig = nr_item_nf_ww;
		
		INSERT	INTO nota_fiscal_item_rateio(nr_sequencia,
			nr_seq_nota,
			nr_item_nf,
			dt_atualizacao,
			nm_usuario,
			cd_centro_custo,
			vl_rateio,
			ie_situacao,
			vl_desconto,
			vl_frete,
			vl_seguro,
			vl_despesa_acessoria,
			vl_tributo,
			cd_conta_contabil,
			ds_observacao)
		VALUES 	(nextval('nota_fiscal_item_rateio_seq'),
			nr_sequencia_w,
			nr_item_nf_ww,
			clock_timestamp(),
			nm_usuario_p,
			c08_w.cd_centro_custo,
			round((vl_total_item_nf_w / vl_total_item_nf_ww) * c08_w.vl_item, 2),
			'A',
			0,
			0,
			0,
			0,
			0,
			cd_conta_contabil_ww,
			philips_contabil_pck.get_parametro_conta_contabil);
		
	end if;	
		

	END;
END LOOP;


	OPEN	c04;
	LOOP
	FETCH 	c04 INTO
		nr_item_nf_w,
		vl_total_item_nf_w,
		vl_liquido_w,
		nr_item_nf_orig_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		BEGIN

		SELECT 	coalesce(SUM(vl_rateio),0)
		INTO STRICT	vl_rateio_w
		FROM	nota_fiscal_item_rateio
		WHERE	nr_seq_nota = nr_sequencia_w
		AND	nr_item_nf = nr_item_nf_w;

		vl_diferencia_w :=  vl_total_item_nf_w - vl_rateio_w;

		IF (vl_diferencia_w >= -0.08) AND (vl_diferencia_w <=  0.08) THEN

			SELECT 	MAX(nr_item_nf)
			INTO STRICT	nr_item_nf_ww
			FROM 	nota_fiscal_item_rateio
			WHERE	nr_seq_nota = nr_sequencia_w
			AND	nr_item_nf = nr_item_nf_w
			AND	vl_rateio	 >=	(SELECT	MAX(vl_rateio)
							FROM	nota_fiscal_item_rateio
							WHERE	nr_seq_nota = nr_sequencia_w
							AND	nr_item_nf = nr_item_nf_w);

			UPDATE	nota_fiscal_item_rateio
			SET	vl_rateio = vl_rateio + vl_diferencia_w
			WHERE	nr_seq_nota = nr_sequencia_w
			AND 	nr_item_nf = nr_item_nf_ww  LIMIT 1;
		END IF;

		END;
		END LOOP;

	CLOSE c04;

EXCEPTION WHEN OTHERS THEN
	ds_erro_w := SUBSTR(SQLERRM(SQLSTATE),1,1000);
	CALL gravar_log_tasy(1390,'Erro ao gerar o rateio do centro de custo da nota de credito: ' || ds_erro_w, nm_usuario_p);
END;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nota_fiscal_credito ( nr_seq_nf_credito_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

