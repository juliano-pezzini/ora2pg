-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_gerar_exame_proc_rotina ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_produto_p bigint, ie_tipo_rotina_p char, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, cd_paciente_p cpoe_procedimento.cd_pessoa_fisica%type, nr_seq_item_gerado_p INOUT text, nr_seq_transcricao_p bigint default null, ie_item_alta_p text default 'N', ie_prescritor_aux_p text default 'N', cd_medico_p bigint default null, ie_retrogrado_p text default 'N', dt_inicio_p timestamp default null, nr_seq_pepo_p bigint default null, nr_cirurgia_p bigint default null, nr_cirurgia_patologia_p bigint default null, nr_seq_agenda_p bigint default null, nr_prescricao_p bigint default null, ie_urgencia_p text default null, ie_oncologia_p text default 'N', nr_seq_conclusao_apae_p bigint default null, hr_prim_hor_setor_p text default null, dt_prev_execucao_p timestamp default null, ie_lado_p text default null, ie_condicao_p bigint default null, nr_seq_contraste_p bigint default null, nr_seq_material_exame_p text default null, ie_futuro_p text default 'N', ie_dia_seguinte_p text default 'N', cd_setor_atendimento_p bigint default null, ds_dado_clinico_p text default null, lst_cd_kit_material_p text default null, cd_microorganismo_p bigint default null, nr_seq_cpoe_rp_p cpoe_rp.nr_sequencia%type default null, nr_seq_cpoe_order_unit_p cpoe_order_unit.nr_sequencia%type default null) AS $body$
DECLARE


cd_setor_atendimento_w  setor_atendimento.cd_setor_atendimento%type;
cd_classif_setor_w    setor_atendimento.cd_classif_setor%type;
cd_setor_usuario_w    setor_atendimento.cd_setor_atendimento%type;

cd_convenio_w      convenio.cd_convenio%type;
ie_tipo_convenio_w    convenio.ie_tipo_convenio%type := 0;

cd_categoria_w      atend_categoria_convenio.cd_categoria%type;
cd_plano_convenio_w    atend_categoria_convenio.cd_plano_convenio%type;

cd_medico_w        pessoa_fisica.cd_pessoa_fisica%type;
cd_prescritor_w      pessoa_fisica.cd_pessoa_fisica%type;
cd_paciente_w      pessoa_fisica.cd_pessoa_fisica%type;

cd_especialidade_w    especialidade_medica.cd_especialidade%type;

ie_tipo_atendimento_w  atendimento_paciente.ie_tipo_atendimento%type;

dt_prescricao_w    prescr_medica.dt_prescricao%type;
cd_funcao_origem_w  prescr_medica.cd_funcao_origem%type;

nr_seq_item_cpoe_w    cpoe_procedimento.nr_sequencia%type;
ie_retrogrado_w      cpoe_procedimento.ie_retrogrado%type;

nr_seq_proc_rep_w    prescr_procedimento.nr_sequencia%type;
dt_prev_execucao_w    prescr_procedimento.dt_prev_execucao%type;

dt_base_proc_w      timestamp;
ie_gerar_associado_w  char(1);
qt_idade_dia_w      double precision;
qt_idade_mes_w      double precision;
qt_idade_ano_w      double precision;
qt_peso_w        double precision;
ds_item_w        varchar(255);
ie_data_prescricao_ww  varchar(50);
nr_seq_item_gerado_w	varchar(4000);

procedure gerar_itens_ce is
;
BEGIN
	if (coalesce(nr_seq_item_cpoe_w,0) > 0) then
	
		CALL cpoe_gerar_itens_rep_CE(nr_atendimento_p, nr_prescricao_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, cd_paciente_p, cd_setor_atendimento_w, dt_prescricao_w, nr_seq_item_cpoe_w );

		select  max(nr_sequencia)
		into STRICT nr_seq_proc_rep_w
		from   prescr_procedimento
		where  nr_prescricao = nr_prescricao_p
		and nr_seq_proc_cpoe = nr_seq_item_cpoe_w;
		
		if (coalesce(nr_seq_proc_rep_w,0) > 0) then
	
			update cpoe_procedimento
			set cd_funcao_origem = 916
			where nr_sequencia = nr_seq_item_cpoe_w
			and cd_funcao_origem = 2314
   		        and nm_usuario = nm_usuario_p;
		end if;
	end if;
end;

begin

cd_setor_atendimento_w  := cpoe_obter_setor_atend_prescr( nr_atendimento_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p );
cd_classif_setor_w    := obter_classif_setor(cd_setor_atendimento_w);
dt_base_proc_w      := coalesce(dt_prev_execucao_p,trunc(clock_timestamp(), 'hh24') + 1/24);
cd_prescritor_w      := Obter_pessoa_fisica_usuario( nm_usuario_p, 'C');
cd_especialidade_w    := obter_especialidade_medico(cd_prescritor_w, 'C');

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_prescricao_p > 0) then

   select  max(dt_prescricao),
      max(cd_funcao_origem)
   into STRICT    dt_prescricao_w,
      cd_funcao_origem_w
   from    prescr_medica
   where  nr_prescricao = nr_prescricao_p;

  if (cd_funcao_origem_w = 916) then
    
    ie_data_prescricao_ww := Obter_Param_Usuario(916, 433, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_data_prescricao_ww);
    
    if (ie_data_prescricao_ww = 'SA') and (dt_prescricao_w IS NOT NULL AND dt_prescricao_w::text <> '') and (to_char(dt_base_proc_w,'dd/mm/yyyy hh24:mi:ss') <> to_char(dt_prescricao_w,'dd/mm/yyyy hh24:mi:ss')) then 
  
      if (dt_prescricao_w < dt_base_proc_w) then
        ie_retrogrado_w := 'S';
      end if;

      dt_prev_execucao_w := dt_prescricao_w;
    end if;
  end if;
end if;

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
  begin
    select  max(cd_convenio),
        max(cd_categoria),
        max(cd_plano_convenio)
    into STRICT  cd_convenio_w,
        cd_categoria_w,
        cd_plano_convenio_w
    from  atend_categoria_convenio
    where  nr_atendimento = nr_atendimento_p
    and    nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_p);

    select  coalesce(max(ie_tipo_convenio),0)
    into STRICT  ie_tipo_convenio_w
    from  convenio
    where  cd_convenio = cd_convenio_w;
  exception
  when others then
    cd_convenio_w := null;
  end;

    select  max(cd_medico_resp),
        max(cd_pessoa_fisica),
        coalesce(max(ie_tipo_atendimento),1)
    into STRICT  cd_medico_w,
        cd_paciente_w,
        ie_tipo_atendimento_w
    from  atendimento_paciente
    where  nr_atendimento  = nr_atendimento_p;

  qt_peso_w  := coalesce(obter_sinal_vital(nr_atendimento_p,'Peso'),0);

else
  cd_paciente_w  := cd_paciente_p;
  qt_peso_w    := obter_peso_pf(cd_paciente_p);
end if;

if (obter_se_usuario_medico(nm_usuario_p) <> 'S') then
	cd_medico_w := null;
end if;

select  coalesce((obter_idade(dt_nascimento, clock_timestamp(), 'A'))::numeric ,0),
    coalesce((obter_idade(dt_nascimento, clock_timestamp(), 'M'))::numeric ,0),
    coalesce((obter_idade(dt_nascimento, clock_timestamp(), 'DIA'))::numeric ,0)
into STRICT  qt_idade_ano_w,
    qt_idade_mes_w,
    qt_idade_dia_w
from  pessoa_fisica
where  cd_pessoa_fisica = cd_paciente_w;

if (ie_futuro_p = 'S') then
  dt_prev_execucao_w := dt_inicio_p;
end if;

select  coalesce(max(ie_gera_associado),'S')
into STRICT  ie_gerar_associado_w
from  setor_atendimento
where  cd_setor_atendimento=  cd_setor_atendimento_w;

case ie_tipo_rotina_p
  -- Exames laboratoriais de rotina, da tabela EXAME_LAB_ROTINA
  when 'E' then
    nr_seq_item_gerado_p := CPOE_gerar_exame_lab_rotina(  nr_atendimento_p, nr_seq_produto_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, coalesce(cd_setor_atendimento_p, cd_setor_atendimento_w), ie_tipo_atendimento_w, cd_convenio_w, ie_tipo_convenio_w, cd_plano_convenio_w, cd_categoria_w, dt_base_proc_w, cd_paciente_w, qt_idade_dia_w, qt_idade_mes_w, qt_idade_ano_w, qt_peso_w, cd_prescritor_w, cd_setor_usuario_w, coalesce(cd_medico_p, cd_medico_w), cd_especialidade_w, null, ie_gerar_associado_w, nr_seq_item_gerado_p, nr_seq_transcricao_p, ie_item_alta_p, ie_prescritor_aux_p, coalesce(ie_retrogrado_w,ie_retrogrado_p), coalesce(dt_prev_execucao_w,dt_inicio_p), nr_seq_pepo_p, nr_cirurgia_p, nr_cirurgia_patologia_p, nr_seq_agenda_p, ie_urgencia_p, ie_oncologia_p, nr_seq_conclusao_apae_p, hr_prim_hor_setor_p, ie_lado_p, nr_seq_material_exame_p, ie_futuro_p, ie_dia_seguinte_p, nr_seq_contraste_p, ds_dado_clinico_p, cd_microorganismo_p, null, nr_seq_cpoe_order_unit_p);
  -- Exames/Procedimentos nao laboratoriais de rotina, da tabela PROCEDIMENTO_ROTINA
  when 'P' then
    nr_seq_item_gerado_p := CPOE_gerar_procedimento_rotina(  nr_atendimento_p, nr_seq_produto_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, coalesce(cd_setor_atendimento_p, cd_setor_atendimento_w), ie_tipo_atendimento_w, cd_convenio_w, ie_tipo_convenio_w, dt_base_proc_w, cd_paciente_w, qt_idade_dia_w, qt_idade_mes_w, qt_idade_ano_w, qt_peso_w, cd_prescritor_w, cd_setor_usuario_w, coalesce(cd_medico_p, cd_medico_w), cd_especialidade_w, null, ie_gerar_associado_w, nr_seq_item_gerado_p, nr_seq_transcricao_p, ie_item_alta_p, ie_prescritor_aux_p, coalesce(ie_retrogrado_w,ie_retrogrado_p), coalesce(dt_prev_execucao_w,dt_inicio_p), nr_seq_pepo_p, nr_cirurgia_p, nr_cirurgia_patologia_p, nr_seq_agenda_p, ie_urgencia_p, ie_oncologia_p, nr_seq_conclusao_apae_p, null, ie_lado_p, ie_condicao_p, nr_seq_contraste_p, ie_futuro_p, ie_dia_seguinte_p, ds_dado_clinico_p, lst_cd_kit_material_p, cd_microorganismo_p, nr_seq_cpoe_order_unit_p);
  -- Rotinas especiais, da tabela ROTINA_EXAME
  when 'R' then
    nr_seq_item_gerado_p := CPOE_gerar_rotina_espec_proc(  nr_atendimento_p, nr_seq_produto_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, null, ie_tipo_atendimento_w, cd_convenio_w, ie_tipo_convenio_w, cd_plano_convenio_w, cd_categoria_w, dt_base_proc_w, cd_paciente_w, qt_idade_dia_w, qt_idade_mes_w, qt_idade_ano_w, qt_peso_w, cd_prescritor_w, cd_setor_usuario_w, coalesce(cd_medico_p, cd_medico_w), cd_especialidade_w, ie_gerar_associado_w, nr_seq_item_gerado_p, nr_seq_transcricao_p, ie_item_alta_p, ie_prescritor_aux_p, ie_retrogrado_p, dt_inicio_p, nr_seq_pepo_p, nr_cirurgia_p, nr_cirurgia_patologia_p, nr_seq_agenda_p, ie_urgencia_p, ie_oncologia_p, nr_seq_conclusao_apae_p, hr_prim_hor_setor_p, ie_lado_p, nr_seq_material_exame_p, ie_futuro_p, ie_dia_seguinte_p, ds_dado_clinico_p, nr_seq_cpoe_order_unit_p);
  else null;
end case;

--Chamadas externas que precisam gerar prescricoes.
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (coalesce(nr_prescricao_p,0) > 0) and (nr_seq_item_gerado_p IS NOT NULL AND nr_seq_item_gerado_p::text <> '') then

	if (ie_tipo_rotina_p = 'R') then

		nr_seq_item_gerado_w := nr_seq_item_gerado_p;

		while (nr_seq_item_gerado_w IS NOT NULL AND nr_seq_item_gerado_w::text <> '') loop

			if (position(';' in nr_seq_item_gerado_w) > 0) then
			
				ds_item_w := substr(nr_seq_item_gerado_w, 1, position(';' in nr_seq_item_gerado_w) - 1);
			
				if ((length(nr_seq_item_gerado_w) - length(replace(nr_seq_item_gerado_w, ';', ''))) = 1) then
					nr_seq_item_gerado_w := null;
				else
					nr_seq_item_gerado_w := substr(nr_seq_item_gerado_w, position(',' in nr_seq_item_gerado_w) + 1, length(nr_seq_item_gerado_w));
				end if;

				nr_seq_item_cpoe_w := (substr(ds_item_w, position(';' in ds_item_w) + 1, length(ds_item_w)))::numeric;
			else
				nr_seq_item_cpoe_w := nr_seq_item_gerado_p;
				nr_seq_item_gerado_w := null;
			end if;

			gerar_itens_ce;
		end loop;
	else
	
		if (position(';' in nr_seq_item_gerado_p) > 0) then
			ds_item_w := substr(nr_seq_item_gerado_p, 1, position(';' in nr_seq_item_gerado_p) - 1);
			nr_seq_item_cpoe_w := (substr(ds_item_w, position(',' in ds_item_w) + 1, length(ds_item_w)))::numeric;
		else
			nr_seq_item_cpoe_w := nr_seq_item_gerado_p;
		end if;

		gerar_itens_ce;
	end if;

	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_exame_proc_rotina ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, nr_seq_produto_p bigint, ie_tipo_rotina_p char, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, cd_paciente_p cpoe_procedimento.cd_pessoa_fisica%type, nr_seq_item_gerado_p INOUT text, nr_seq_transcricao_p bigint default null, ie_item_alta_p text default 'N', ie_prescritor_aux_p text default 'N', cd_medico_p bigint default null, ie_retrogrado_p text default 'N', dt_inicio_p timestamp default null, nr_seq_pepo_p bigint default null, nr_cirurgia_p bigint default null, nr_cirurgia_patologia_p bigint default null, nr_seq_agenda_p bigint default null, nr_prescricao_p bigint default null, ie_urgencia_p text default null, ie_oncologia_p text default 'N', nr_seq_conclusao_apae_p bigint default null, hr_prim_hor_setor_p text default null, dt_prev_execucao_p timestamp default null, ie_lado_p text default null, ie_condicao_p bigint default null, nr_seq_contraste_p bigint default null, nr_seq_material_exame_p text default null, ie_futuro_p text default 'N', ie_dia_seguinte_p text default 'N', cd_setor_atendimento_p bigint default null, ds_dado_clinico_p text default null, lst_cd_kit_material_p text default null, cd_microorganismo_p bigint default null, nr_seq_cpoe_rp_p cpoe_rp.nr_sequencia%type default null, nr_seq_cpoe_order_unit_p cpoe_order_unit.nr_sequencia%type default null) FROM PUBLIC;

