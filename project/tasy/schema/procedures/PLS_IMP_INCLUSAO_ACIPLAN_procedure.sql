-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_imp_inclusao_aciplan ( nr_seq_lote_inclusao_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_conteudo_w			varchar(4000);
ds_valor_w			varchar(4000);
nr_seq_plano_w			bigint;
nr_contrato_w			varchar(10000);
nm_beneficiario_w		varchar(60);
dt_nascimento_w			timestamp;
dt_nasc_aux_w			varchar(10);
dt_admissao_w			timestamp;
dt_admissao_aux_w		varchar(10);
nr_ctps_w			varchar(10);
nr_cpf_w			varchar(11);
cd_cbo_w			varchar(100);
nm_mae_w			varchar(60);
ie_sexo_w			varchar(20);
nr_seq_canal_venda_w		bigint;
qt_registros_w			bigint;
nr_seq_inclusao_benef_w		bigint;
cd_pessoa_fisica_w		varchar(10);
dt_contrato_w			timestamp;
qt_beneficiarios_w		bigint;
nr_seq_compl_w			bigint;

C01 CURSOR FOR
	SELECT	ds_conteudo
	from	w_pls_importacao;


BEGIN

CALL gravar_processo_longo('Inclusão de beneficiários','PLS_IMP_INCLUSAO_ACIPLAN',0);

select	dt_contrato
into STRICT	dt_contrato_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p;

qt_beneficiarios_w	:= 0;

open C01;
loop
fetch C01 into
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	qt_registros_w		:= 0;
	qt_beneficiarios_w	:= qt_beneficiarios_w + 1;

	CALL gravar_processo_longo('Beneficiários = ' || qt_beneficiarios_w,'PLS_IMP_INCLUSAO_ACIPLAN',-1);

	while(ds_conteudo_w IS NOT NULL AND ds_conteudo_w::text <> '') loop
		if (position(';' in ds_conteudo_w) = 0) then
			ds_valor_w	:= ds_conteudo_w;
			ds_conteudo_w	:= null;
		else
			ds_valor_w	:= substr(ds_conteudo_w,1,position(';' in ds_conteudo_w) - 1);
			ds_conteudo_w	:= substr(ds_conteudo_w,position(';' in ds_conteudo_w) + 1,length(ds_conteudo_w));
		end if;

		qt_registros_w := qt_registros_w + 1;

		/*Contrato*/

		if (qt_registros_w = 1) then
			nr_contrato_w		:= ds_valor_w;
		/*Produto*/

		elsif (qt_registros_w = 2) then
			nr_seq_plano_w		:= ds_valor_w;
			--nr_seq_plano_w		:= 4356;
		/*Beneficiário*/

		elsif (qt_registros_w = 3) then
			nm_beneficiario_w	:= ds_valor_w;
		/*Data de nascimento*/

		elsif (qt_registros_w = 4) then
			dt_nasc_aux_w		:= ds_valor_w;
			dt_nascimento_w		:= to_date(dt_nasc_aux_w,'dd/mm/yyyy');
		/*Data Admissão*/

		elsif (qt_registros_w = 5) then
			dt_admissao_aux_w	:= ds_valor_w;
			dt_admissao_w		:= to_date(dt_admissao_aux_w,'dd/mm/yyyy');
		/*CPF*/

		elsif (qt_registros_w = 6) then
			begin
			nr_cpf_w		:= ds_valor_w;
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(262349, 'NM_BENEFICIARIO=' || nm_beneficiario_w);
				/* Mensagem: NM_BENEFICIARIO */

			end;
		/*CTPS*/

		elsif (qt_registros_w = 7) then
			nr_ctps_w		:= substr(ds_valor_w,1,10);
			nr_ctps_w		:= somente_numero(nr_ctps_w);
		/*CBO*/

		elsif (qt_registros_w= 8) then
			cd_cbo_w		:= ds_valor_w;
		/*Mãe*/

		elsif (qt_registros_w = 9) then
			nm_mae_w		:= ds_valor_w;
		/*Sexo*/

		elsif (qt_registros_w = 10) then
			ie_sexo_w		:= ds_valor_w;
			ie_sexo_w		:= substr(ie_sexo_w,1,1);
		/*Canal de venda*/

		elsif (qt_registros_w = 11) then
			nr_seq_canal_venda_w	:= ds_valor_w;
		end if;
	end loop;

	ie_sexo_w	:= UPPER(ie_sexo_w);

	select	count(1)
	into STRICT	qt_registros_w
	from	pessoa_fisica
	where	upper(nm_pessoa_fisica) = upper(nm_beneficiario_w)
	and	dt_nascimento		= dt_nascimento_w
	and	nr_cpf			= nr_cpf_w;

	if (qt_registros_w = 0) then
		CALL wheb_usuario_pck.set_ie_executar_trigger('N');

		select	nextval('pessoa_fisica_seq')
		into STRICT	cd_pessoa_fisica_w
		;

		begin
		insert into pessoa_fisica(	cd_pessoa_fisica,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,ie_tipo_pessoa,
				cd_estabelecimento,nm_pessoa_fisica,dt_nascimento,ie_sexo,nr_cpf,
				dt_admissao_hosp,nr_ctps,ie_revisar,ie_funcionario,ie_emancipado)
		values (	cd_pessoa_fisica_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,2,
				cd_estabelecimento_p,nm_beneficiario_w,dt_nascimento_w,ie_sexo_w,nr_cpf_w,
				clock_timestamp(),nr_ctps_w,'N','N','N');
		exception
		when others then
			CALL wheb_usuario_pck.set_ie_executar_trigger('S');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(262362, 'DS_ERRO=' || sqlerrm(SQLSTATE));
			/* Mensagem: DS_ERRO */

		end;

		CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	else
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_w
		from	pessoa_fisica
		where	upper(nm_pessoa_fisica) = upper(nm_beneficiario_w)
		and	dt_nascimento		= dt_nascimento_w
		and	nr_cpf			= nr_cpf_w;
	end if;

	select	count(1)
	into STRICT	qt_registros_w
	from	compl_pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	ie_tipo_complemento	= 5;

	if (qt_registros_w = 0) then
		select	max(nr_sequencia)
		into STRICT	nr_seq_compl_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w;

		if (coalesce(nr_seq_compl_w::text, '') = '') then
			nr_seq_compl_w	:= 0;
		end if;

		nr_seq_compl_w	:= nr_seq_compl_w + 1;
		CALL wheb_usuario_pck.set_ie_executar_trigger('N');
		begin
		insert into compl_pessoa_fisica(	cd_pessoa_fisica,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_sequencia,ie_tipo_complemento,nm_contato)
		values (	cd_pessoa_fisica_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_compl_w,5,nm_mae_w);
		exception
		when others then
		CALL wheb_usuario_pck.set_ie_executar_trigger('S');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(262362, 'DS_ERRO=' || sqlerrm(SQLSTATE));
		/* Mensagem: DS_ERRO */

		end;
		CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	end if;

	select	nextval('pls_inclusao_beneficiario_seq')
	into STRICT	nr_seq_inclusao_benef_w
	;

	begin
	insert	into	pls_inclusao_beneficiario(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
			nr_seq_lote_inclusao,nm_pessoa_fisica,ie_status,dt_solicitacao,dt_nascimento,nm_mae,
			nr_cpf,ie_sexo,dt_admissao,cd_cbo,ie_tipo_operacao,
			ie_tipo_inclusao,ie_processo,nr_seq_contrato,nr_seq_plano,nr_seq_vendedor_canal,
			ie_etapa_solicitacao,cd_pessoa_fisica,dt_contratacao, ie_status_mov)
	values (	nr_seq_inclusao_benef_w,clock_timestamp(),nm_usuario_p,clock_timestamp(), nm_usuario_p,cd_estabelecimento_p,
			nr_seq_lote_inclusao_p,nm_beneficiario_w, 'P', null,dt_nascimento_w, nm_mae_w,
			nr_cpf_w, ie_sexo_w,dt_admissao_w,cd_cbo_w,'I',
			'P', 'M', nr_seq_contrato_p, nr_seq_plano_w,nr_seq_canal_venda_w,
			'CV',cd_pessoa_fisica_w,dt_contrato_w,'1');
	exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(262367, 'DS_ERRO=' || sqlerrm(SQLSTATE) || ';CD_CBO=' || cd_cbo_w);
	/* Mensagem: Erro: DS_ERRO - CD_CBO */

	end;
	end;
end loop;
close C01;

update	pls_lote_inclusao_benef
set	ie_situacao		= 'P',
	dt_importacao_arquivo	 = NULL
where	nr_sequencia		= nr_seq_lote_inclusao_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_inclusao_aciplan ( nr_seq_lote_inclusao_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

