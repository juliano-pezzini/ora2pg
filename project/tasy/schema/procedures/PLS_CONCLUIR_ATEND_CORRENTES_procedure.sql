-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_concluir_atend_correntes (nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Concluir atendimentos Call Center com o statis 'Em atendimento'
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
C01 CURSOR FOR
	SELECT	c.nr_sequencia nr_sequencia
	from	pls_atendimento c
	where	c.ie_status	= 'A'
	and	c.dt_inicio	< clock_timestamp() - interval '1 days'
	and	not exists (	SELECT	1
					from	pls_atend_evt_pend_resp a,
						pls_atendimento_evento b
					where	b.nr_seq_atendimento	= c.nr_sequencia
					and	a.nr_seq_atend_evento	= b.nr_sequencia
					and	coalesce(a.dt_solucao::text, '') = '');

C02 CURSOR(nr_seq_atendendimento_pc	bigint) FOR
	SELECT	nr_sequencia
	from	pls_atendimento_evento
	where	nr_seq_atendimento = nr_seq_atendendimento_pc;

nr_seq_tipo_historico_w		pls_tipo_historico_atend.nr_sequencia%type;
ie_tipo_pessoa_w		pls_atendimento.ie_tipo_pessoa%type;
BEGIN

	select	max(nr_sequencia)
	into STRICT	nr_seq_tipo_historico_w
	from	pls_tipo_historico_atend
	where	ie_gerado_sistema  = 'S'
	and	ie_situacao    = 'A';

for r_C01_w in C01 loop
	begin
		begin
			select	ie_tipo_pessoa
			into STRICT	ie_tipo_pessoa_w
			from	pls_atendimento
			where	nr_sequencia = r_C01_w.nr_sequencia;

		exception
		when others then
			ie_tipo_pessoa_w	:= null;
		end;

		if (coalesce(ie_tipo_pessoa_w::text, '') = '') then
			update	pls_atendimento
			set	ie_tipo_pessoa	= 'N'
			where	nr_sequencia	= r_C01_w.nr_sequencia;
		end if;

		for r_C02_w in C02(r_C01_w.nr_sequencia) loop
			begin
				update	pls_atendimento_evento
				set	ie_status	= 'C',
					dt_fim_evento	= dt_inicio,
					dt_conclusao	= dt_inicio
				where	nr_sequencia	= r_C02_w.nr_sequencia;
			end;
		end loop;

		update	pls_atendimento
		set	ie_status		= 'C',
			dt_fim_atendimento	= dt_inicio,
			dt_conclusao		= dt_inicio,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= r_C01_w.nr_sequencia;

		insert	into	pls_atendimento_historico(	nr_sequencia, nr_seq_atendimento, ds_historico_long,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nr_seq_tipo_historico, dt_historico,
					ie_gerado_sistema)
			values (	nextval('pls_atendimento_historico_seq'), r_C01_w.nr_sequencia,
					'O atendimento foi finalizado através da JOB: PLS_CONCLUIR_ATEND_CORRENTES_J, pelo usuário' ||
					nm_usuario_p || ', na data/hora '|| to_char(clock_timestamp(), 'MM-DD-YYYY HH24:MI:SS') ||'.',
					clock_timestamp(), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, nr_seq_tipo_historico_w, clock_timestamp(),
					'S');
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_concluir_atend_correntes (nm_usuario_p text) FROM PUBLIC;

