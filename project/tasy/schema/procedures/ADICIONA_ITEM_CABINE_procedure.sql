-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adiciona_item_cabine ( cd_material_p bigint, qt_material_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, nr_seq_cabine_p bigint, ie_sobra_overfill_w text default 'N', nr_seq_ordem_reaprov_p bigint default 0, cd_pessoa_fisica_p text default null) AS $body$
DECLARE


nr_sequencia_w	bigint;
cd_estab_w	smallint;
nr_seq_lote_w	bigint := null;
ie_existe_w	bigint;
ie_permite_mat_lote_w	varchar(1);
ds_lote_fornec_w	varchar(20);
ie_possui_registro_w	varchar(1);
ie_arredonda_dose_w	varchar(1);
ie_arredonda_dose_cabine_w varchar(1);
qt_material_W		double precision;
cd_unidade_medida_w	varchar(30);


BEGIN
qt_material_W := qt_material_P;
if (nr_seq_lote_p > 0) then
	nr_seq_lote_w	:= nr_seq_lote_p;
end if;

if (coalesce(nr_seq_cabine_p::text, '') = '') then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(186165);
end if;
if (cd_material_p > 0) and (coalesce(ie_sobra_overfill_w,'N') = 'N') and (coalesce(nr_seq_ordem_reaprov_p,0) = 0) then	

	select	cd_estabelecimento
	into STRICT	cd_estab_w
	from	far_cabine_seg_biol
	where	nr_sequencia = nr_seq_cabine_p;

	ie_permite_mat_lote_w := obter_param_usuario(3130, 135, obter_perfil_ativo, nm_usuario_p, cd_estab_w, ie_permite_mat_lote_w);
	ie_arredonda_dose_w := Obter_Param_Usuario(3130, 286, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_arredonda_dose_w);	
	ie_arredonda_dose_cabine_w := Obter_Param_Usuario(3130, 418, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_arredonda_dose_cabine_w);
	
if (ie_arredonda_dose_w = 'S') and (ie_arredonda_dose_cabine_w = 'S') then  
	qt_material_W := Obter_qt_dose_onco(cd_material_p,qt_material_P,0);
end if;
	if (coalesce(ie_permite_mat_lote_w,'N') = 'N') then 
		select	count(*)
		into STRICT	ie_existe_w
		from	far_estoque_cabine
		where	cd_estabelecimento 	= cd_estab_w	
		and	nr_seq_cabine 		= nr_seq_cabine_p
		and	cd_material		= cd_material_p
		and	nr_seq_lote_fornec	<> nr_seq_lote_w
		and	qt_estoque		> 0;
	end if;

	if (coalesce(ie_permite_mat_lote_w,'N') = 'D') then
		select	ds_lote_fornec
		into STRICT	ds_lote_fornec_w
		from	material_lote_fornec
		where 	nr_sequencia = nr_seq_lote_w;
	
		select	count(*)
		into STRICT	ie_existe_w
		from	material_lote_fornec b,
			far_estoque_cabine a
		where	a.nr_seq_lote_fornec 	= b.nr_sequencia
		and	a.cd_estabelecimento 	= cd_estab_w	
		and	a.nr_seq_cabine 	= nr_seq_cabine_p
		and	a.cd_material		= cd_material_p
		and 	b.ds_lote_fornec	<> ds_lote_fornec_w	
		and	a.qt_estoque		> 0;
	end if;
	
	
	if	((ie_permite_mat_lote_w = 'N') or (ie_permite_mat_lote_w = 'D')) and (ie_existe_w > 0) then
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(186164);
	end if;
	
	if (coalesce(nr_seq_lote_w::text, '') = '') then

		select	count(*)
		into STRICT	ie_existe_w
		from	far_estoque_cabine
		where	cd_estabelecimento 	= cd_estab_w
		and	nr_seq_cabine 		= nr_seq_cabine_p
		and	cd_material		= cd_material_p
		and (coalesce(cd_pessoa_fisica::text, '') = ''  or cd_pessoa_fisica = cd_pessoa_fisica_p)
		and	coalesce(nr_seq_lote_fornec::text, '') = '';
	else
		select	count(*)
		into STRICT	ie_existe_w
		from	far_estoque_cabine
		where	cd_estabelecimento 	= cd_estab_w
		and	nr_seq_cabine 		= nr_seq_cabine_p
		and	cd_material		= cd_material_p
		and	nr_seq_lote_fornec	= nr_seq_lote_w;
	end if;
	
	if (ie_existe_w = 0) then
		select	nextval('far_estoque_cabine_seq')
		into STRICT	nr_sequencia_w
		;
		
		insert into far_estoque_cabine(
			NR_SEQUENCIA,
			CD_ESTABELECIMENTO,
			NR_SEQ_CABINE,	
			DT_ATUALIZACAO,
			NM_USUARIO,
			CD_MATERIAL,
			NR_SEQ_LOTE_FORNEC,
			QT_ESTOQUE,
			CD_PESSOA_FISICA)
		Values (	nr_sequencia_w,
			cd_estab_w,
			nr_seq_cabine_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_material_p,
			nr_seq_lote_w,
			qt_material_W,
			cd_pessoa_fisica_p);
	elsif (coalesce(nr_seq_lote_w::text, '') = '') then
		update	far_estoque_cabine
		set	qt_estoque = qt_estoque + round((qt_material_W)::numeric,3)
		where	cd_estabelecimento 	= cd_estab_w
		and	nr_seq_cabine 		= nr_seq_cabine_p
		and	cd_material		= cd_material_p
		and (coalesce(cd_pessoa_fisica::text, '') = ''  or cd_pessoa_fisica = cd_pessoa_fisica_p)
		and	coalesce(nr_seq_lote_fornec::text, '') = '';
	else	
		update	far_estoque_cabine
		set	qt_estoque = qt_estoque + round((qt_material_W)::numeric,3)
		where	cd_estabelecimento 	= cd_estab_w
		and	nr_seq_cabine 		= nr_seq_cabine_p
		and	cd_material		= cd_material_p
		and	nr_seq_lote_fornec	= nr_seq_lote_w;
	end if;
elsif (cd_material_p > 0) and (coalesce(ie_sobra_overfill_w,'N') <> 'N') and (coalesce(nr_seq_ordem_reaprov_p,0) = 0) then	

	select	cd_estabelecimento
	into STRICT	cd_estab_w
	from	far_cabine_seg_biol
	where	nr_sequencia = nr_seq_cabine_p;
	
	select 	coalesce(max('S'),'N')
	into STRICT	ie_possui_registro_w
	from 	quimio_sobra_overfill
	where 	cd_material			=	cd_material_p	
	and		coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_p,0))  = 	coalesce(nr_seq_lote_p,0)
	and		ie_tipo				=	ie_sobra_overfill_w
	and		cd_estabelecimento 	=	cd_estab_w
	and		qt_saldo > 0;
	
	
	if (ie_possui_registro_w = 'S') then

		select max(cd_unidade_medida)
		into STRICT	cd_unidade_medida_w	
		from 	quimio_sobra_overfill
		where 	cd_material			=	cd_material_p	
		and		coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_p,0))  = 	coalesce(nr_seq_lote_p,0)
		and		ie_tipo				=	ie_sobra_overfill_w
		and		cd_estabelecimento 	=	cd_estab_w
		and		qt_saldo > 0;
		
		if (cd_unidade_medida_w <> substr(obter_dados_material_estab(cd_material_p,cd_estab_w,'UMS'),1,30)) then
			qt_material_W :=Obter_dose_convertida_quimio(	cd_material_p,qt_material_W,substr(obter_dados_material_estab(cd_material_p,cd_estab_w,'UMS'),1,30), cd_unidade_medida_w);
		end if;
		
		if (ie_arredonda_dose_w = 'S') and (ie_arredonda_dose_cabine_w = 'S') then
			qt_material_W := Obter_qt_dose_onco(cd_material_p,qt_material_W,0);
		end if;
	
		update	quimio_sobra_overfill
		set		qt_saldo = round((qt_saldo + qt_material_W)::numeric,3)
		where	cd_estabelecimento 	= cd_estab_w
		and		nr_seq_cabine 		= nr_seq_cabine_p
		and		cd_material		= cd_material_p
		and		coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_p,0))  = 	coalesce(nr_seq_lote_p,0)
		and		qt_saldo > 0;
		
	else
		
		select max(cd_unidade_medida)
		into STRICT	cd_unidade_medida_w	
		from 	quimio_sobra_overfill
		where 	cd_material			=	cd_material_p	
		and		coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_p,0))  = 	coalesce(nr_seq_lote_p,0)
		and		ie_tipo				=	ie_sobra_overfill_w
		and		cd_estabelecimento 	=	cd_estab_w
		and		nr_sequencia = (SELECT 	max(nr_sequencia)
								from 	quimio_sobra_overfill
								where	cd_estabelecimento 	= cd_estab_w
								and		nr_seq_cabine 		= nr_seq_cabine_p
								and		cd_material		= cd_material_p
								and		coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_p,0))  = 	coalesce(nr_seq_lote_p,0));
		
		if (cd_unidade_medida_w <> substr(obter_dados_material_estab(cd_material_p,cd_estab_w,'UMS'),1,30)) then
			qt_material_W :=Obter_dose_convertida_quimio(	cd_material_p,qt_material_W,substr(obter_dados_material_estab(cd_material_p,cd_estab_w,'UMS'),1,30), cd_unidade_medida_w);
		end if;
		if (ie_arredonda_dose_w = 'S') and (ie_arredonda_dose_cabine_w = 'S') then
		   qt_material_W := Obter_qt_dose_onco(cd_material_p,qt_material_W,0);
		end if;
	
		update	quimio_sobra_overfill
		set		qt_saldo =  round((qt_material_W)::numeric,3)
		where	cd_estabelecimento 	= cd_estab_w
		and		nr_seq_cabine 		= nr_seq_cabine_p
		and		cd_material		= cd_material_p
		and		coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_p,0))  = 	coalesce(nr_seq_lote_p,0)
		and		nr_sequencia = (SELECT 	max(nr_sequencia)
								from 	quimio_sobra_overfill
								where	cd_estabelecimento 	= cd_estab_w
								and		nr_seq_cabine 		= nr_seq_cabine_p
								and		cd_material		= cd_material_p
								and		coalesce(nr_seq_lote_fornec,coalesce(nr_seq_lote_p,0))  = 	coalesce(nr_seq_lote_p,0));
	end if;
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

elsif (cd_material_p > 0) and (coalesce(nr_seq_ordem_reaprov_p,0) > 0) then
	
	delete from 	can_reaproveitamento
	where			nr_seq_ordem_origem	= nr_seq_ordem_reaprov_p;
	
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adiciona_item_cabine ( cd_material_p bigint, qt_material_p bigint, nr_seq_lote_p bigint, nm_usuario_p text, nr_seq_cabine_p bigint, ie_sobra_overfill_w text default 'N', nr_seq_ordem_reaprov_p bigint default 0, cd_pessoa_fisica_p text default null) FROM PUBLIC;

