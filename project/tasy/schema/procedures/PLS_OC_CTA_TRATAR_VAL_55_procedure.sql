-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_55 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a validação referente a consistências das informações de regras de
	características conta X características do item.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------
Alterações:
------------------------------------------------------------------------------------------------------------------
dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_geraX.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dados_filtro_w		pls_tipos_ocor_pck.dados_filtro;

var_cur_w 		integer;
var_exec_w		integer;
var_retorno_w		integer;

tb_selecao_w		dbms_sql.number_table;
tb_valido_w		dbms_sql.varchar2_table;
tb_observacao_w		dbms_sql.varchar2_table;
i			integer;

C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_validar_acomodacao
	from	pls_oc_cta_val_item_conta a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

c_procs_gerar CURSOR(	nr_id_transacao_pc	pls_selecao_ocor_cta.nr_id_transacao%type,
			ie_validacao_pc		pls_oc_cta_val_item_conta.ie_validar_acomodacao%type) FOR
	SELECT	a.nr_sequencia
	from	pls_oc_cta_selecao_ocor_v a
	where	a.nr_id_transacao = nr_id_transacao_pc
	and	a.ie_valido = 'S'
	and	a.ie_tipo_registro = 'P'
	and	exists (	SELECT	1
			from	pls_lib_item_regra_grupo	x,
				pls_lib_item_regra		y,
				pls_conta_proc_regra_lib	z
			where	x.ie_tipo_validacao	= ie_validacao_pc
			and	x.ie_situacao		= 'A'
			and	y.nr_seq_grupo_regra	= x.nr_sequencia
			and	z.nr_seq_regra_carac	= y.nr_sequencia
			and	z.nr_seq_regra_lib	= x.nr_sequencia
			and	z.nr_seq_conta_proc	= a.nr_seq_conta_proc
			and	z.ie_liberado		= 'N');
BEGIN

if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	--Percorre a lista da seleção, criando select conforme restrições definidas na regra
	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

		i := 0;
		for	rw_procs_gerar in c_procs_gerar(nr_id_transacao_p, r_C01_w.ie_validar_acomodacao) loop

			tb_selecao_w(i)		:= rw_procs_gerar.nr_sequencia;
			tb_valido_w(i)		:= 'S';
			tb_observacao_w(i)	:= '';

			if (i = pls_cta_consistir_pck.qt_registro_transacao_w) then

				-- Será passado uma lista com todas a sequencias da seleção para a conta e para seus itens, estas sequências serão atualizadas com os mesmos dados da conta,
				-- conforme passado por parâmetro,
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(tb_selecao_w, pls_tipos_ocor_pck.clob_table_vazia,
									'SEQ', tb_observacao_w, tb_valido_w, nm_usuario_p);

				-- Zerar o índice
				i := 0;

				tb_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
				tb_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
				tb_selecao_w		:= pls_tipos_ocor_pck.num_table_vazia;
			else
				i := i + 1;
			end if;
		end loop; -- c_procs_gerar
		if (tb_selecao_w.count > 0) then

			CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(tb_selecao_w, pls_tipos_ocor_pck.clob_table_vazia,
									'SEQ', tb_observacao_w, tb_valido_w, nm_usuario_p);
		end if;

		-- seta os registros que serão válidos ou inválidos após o processamento
		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

	end loop; -- C01
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_55 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

