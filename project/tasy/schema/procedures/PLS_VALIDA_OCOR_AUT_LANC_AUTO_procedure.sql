-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE rc_itens_princ AS (nr_seq_proc_princ		bigint, 
				 nr_seq_mat_princ		bigint);


CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_lanc_auto ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: DOCUMENTAR AQUI 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: DOCUMENTAR AQUI 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
				 
type 	tb_itens_princ is table of rc_itens_princ index by integer;
	
tb_itens_princ_w	tb_itens_princ;
qt_itens_w		bigint;
	
ie_status_w		varchar(10);
ie_gerar_ocorrencia_w	varchar(2);
ie_tipo_ocorrencia_w	varchar(2);
ie_regra_w		varchar(2);
nr_seq_proc_w		bigint;
nr_seq_proc_princ_w	bigint;
nr_seq_proc_princ_ww	bigint;
nr_seq_mat_w		bigint;
nr_seq_mat_princ_w	bigint;
nr_seq_mat_princ_ww	bigint;
nr_seq_guia_proc_w	bigint;
nr_seq_guia_mat_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_oc_benef_w	bigint;
nr_seq_material_w	bigint;

C01 CURSOR FOR 
	SELECT 	nr_seq_proc_princ, 
		nr_seq_mat_princ 
	from 	pls_guia_plano_proc 
	where 	nr_seq_guia = nr_seq_guia_p 
	
union
 
	SELECT 	nr_seq_proc_princ, 
		nr_seq_mat_princ 
	from 	pls_guia_plano_mat 
	where 	nr_seq_guia = nr_seq_guia_p;
	
C02 CURSOR FOR 
	SELECT 	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from 	pls_guia_plano_proc 
	where 	ie_status <> 'N' 
	and	nr_seq_proc_princ	= nr_seq_proc_princ_ww 
	
union all
 
	SELECT 	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from 	pls_guia_plano_proc 
	where 	ie_status <> 'N' 
	and	nr_seq_mat_princ	= nr_seq_mat_princ_ww;
	
C03 CURSOR FOR 
	SELECT 	nr_sequencia, 
		nr_seq_material 
	from 	pls_guia_plano_mat 
	where 	ie_status <> 'N' 
	and	nr_seq_proc_princ	= nr_seq_proc_princ_ww 
	
union all
 
	SELECT 	nr_sequencia, 
		nr_seq_material 
	from 	pls_guia_plano_mat 
	where 	ie_status <> 'N' 
	and	nr_seq_mat_princ	= nr_seq_mat_princ_ww;
	
C11 CURSOR FOR 
	SELECT 	nr_seq_proc_princ, 
		nr_seq_mat_princ 
	from 	pls_requisicao_proc 
	where 	nr_seq_requisicao 	= nr_seq_requisicao_p 
	
union
 
	SELECT 	nr_seq_proc_princ, 
		nr_seq_mat_princ 
	from 	pls_requisicao_mat 
	where 	nr_seq_requisicao 	= nr_seq_requisicao_p;
	
C12 CURSOR FOR	 
	SELECT 	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from 	pls_requisicao_proc 
	where 	ie_status <> 'N' 
	and	nr_seq_proc_princ	= nr_seq_proc_princ_ww 
	
union all
 
	SELECT 	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from 	pls_requisicao_proc 
	where 	ie_status <> 'N' 
	and	nr_seq_mat_princ	= nr_seq_mat_princ_ww;
	
C13 CURSOR FOR 
	SELECT 	nr_sequencia, 
		nr_seq_material 
	from 	pls_requisicao_mat 
	where 	ie_status <> 'N' 
	and	nr_seq_proc_princ	= nr_seq_proc_princ_ww 
	
union all
 
	SELECT 	nr_sequencia, 
		nr_seq_material 
	from 	pls_requisicao_mat 
	where 	ie_status <> 'N' 
	and	nr_seq_mat_princ	= nr_seq_mat_princ_ww;
	
BEGIN 
 
begin 
	select	ie_gerar_ocor_item_princ_neg 
	into STRICT	ie_gerar_ocorrencia_w 
	from	pls_validacao_aut_lanc_aut 
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p 
	and	ie_situacao 	= 'A';
exception 
when others then 
	ie_gerar_ocorrencia_w	:= null;
end;
 
if (ie_gerar_ocorrencia_w = 'S') then 
	if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
	 
		qt_itens_w		:= 0;
		 
		tb_itens_princ_w.Delete;
		open C01;
		loop 
		fetch C01 into	 
			nr_seq_proc_princ_w, 
			nr_seq_mat_princ_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			tb_itens_princ_w[qt_itens_w].nr_seq_proc_princ	:= nr_seq_proc_princ_w;
			tb_itens_princ_w[qt_itens_w].nr_seq_mat_princ	:= nr_seq_mat_princ_w;
				 
			qt_itens_w := qt_itens_w + 1;
			end;
		end loop;
		close C01;
		 
		/* FILTRA O ARRAY DEIXANDO APENAS OS PROCEDIMENTOS E MATERIAIS QUE TEM OCORRÊNCIAS */
 
		qt_itens_w	:= qt_itens_w - 1;
		 
		for i in 0..qt_itens_w loop 
			begin 
			nr_seq_proc_princ_ww		:= tb_itens_princ_w[i].nr_seq_proc_princ;
			nr_seq_mat_princ_ww		:= tb_itens_princ_w[i].nr_seq_mat_princ;
			 
			begin 
				select	ie_status 
				into STRICT	ie_status_w 
				from	pls_guia_plano_proc 
				where	nr_sequencia		= nr_seq_proc_princ_ww;
			exception 
			when others then 
				ie_status_w	:= 'S';
			end;				
			 
			if (ie_status_w <> 'N') then 
				tb_itens_princ_w[i].nr_seq_proc_princ	:= null;
			end if;
			 
			begin 
				select	ie_status 
				into STRICT	ie_status_w 
				from	pls_guia_plano_mat 
				where	nr_sequencia		= nr_seq_mat_princ_ww;
			exception 
			when others then 
				ie_status_w	:= 'S';
			end;
			 
			if (ie_status_w <> 'N') then 
				tb_itens_princ_w[i].nr_seq_mat_princ	:= null;
			end if;
			 
			end;
		end loop;
 
		/* INSERI OCORRÊNCIAS NOS PROCEDIMENTO E MATERIAIS FILHOS DOS PROCEDIMENTOS E MATERIAIS PAIS QUE TEM OCORRÊNCIA */
 
		for i in 0..qt_itens_w loop 
			begin 
			nr_seq_proc_princ_ww		:= tb_itens_princ_w[i].nr_seq_proc_princ;
			nr_seq_mat_princ_ww		:= tb_itens_princ_w[i].nr_seq_mat_princ;
			 
			/* VERIFICA E ENTRA APENAS SE É UTILIZADO OS FILTROS */
 
			if (ie_utiliza_filtro_p = 'S') then 
				open C02;
				loop 
				fetch C02 into	 
					nr_seq_guia_proc_w, 
					cd_procedimento_w, 
					ie_origem_proced_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin 
					ie_regra_w := 'N';
				 
					/* TRATAMENTO PARA FILTROS */
 
					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, nr_seq_guia_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w ) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
					 
					/* AVALIA RETORNO DO TRATAMENTO DO FILTRO E INSERI A OCORRÊNCIA */
 
					if (ie_regra_w = 'S') then 
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_guia_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						 
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
									nr_seq_guia_p, null, null, 
									nr_seq_guia_proc_w, null, null, 
									null, null, null, 
									nm_usuario_p, cd_estabelecimento_p);
					end if;
					end;
				end loop;
				close C02;
				 
				open C03;
				loop 
				fetch C03 into	 
					nr_seq_guia_mat_w, 
					nr_seq_material_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin 
					ie_regra_w := 'N';
					 
					/* TRATAMENTO PARA FILTROS */
 
					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, null, null, null, nr_seq_guia_mat_w, null, null, null, null, null, nr_seq_material_w, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
					 
					/* AVALIA RETORNO DO TRATAMENTO DO FILTRO E INSERI A OCORRÊNCIA */
 
					if (ie_regra_w = 'S') then 
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_guia_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									 
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
									nr_seq_guia_p, null, null, 
									null, nr_seq_guia_mat_w, null, 
									null, null, null, 
									nm_usuario_p, cd_estabelecimento_p);
					end if;
					end;
				end loop;
				close C03;
			else				 
				open C02;
				loop 
				fetch C02 into	 
					nr_seq_guia_proc_w, 
					cd_procedimento_w, 
					ie_origem_proced_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin 
 
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, nr_seq_guia_proc_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								 
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
									nr_seq_guia_p, null, null, 
									nr_seq_guia_proc_w, null, null, 
									null, null, null, 
									nm_usuario_p, cd_estabelecimento_p);
					end;
				end loop;
				close C02;
				 
				open C03;
				loop 
				fetch C03 into	 
					nr_seq_guia_mat_w, 
					nr_seq_material_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin 
					 
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, nr_seq_guia_mat_w, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								 
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
									nr_seq_guia_p, null, null, 
									null, nr_seq_guia_mat_w, null, 
									null, null, null, 
									nm_usuario_p, cd_estabelecimento_p);
					end;
				end loop;
				close C03;
			end if;
			end;
		end loop;
		 
	elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
	 
		qt_itens_w		:= 0;
		 
		tb_itens_princ_w.Delete;
	 
		for r_C11_w in C11 loop 
			begin 
				tb_itens_princ_w[qt_itens_w].nr_seq_proc_princ	:= r_C11_w.nr_seq_proc_princ;
				tb_itens_princ_w[qt_itens_w].nr_seq_mat_princ	:= r_C11_w.nr_seq_mat_princ;	
				qt_itens_w := qt_itens_w + 1;
			end;
		end loop;
		 
		/* FILTRA O ARRAY DEIXANDO APENAS OS PROCEDIMENTOS E MATERIAIS QUE TEM OCORRÊNCIAS */
 
		qt_itens_w	:= qt_itens_w - 1;
		 
		for i in 0..qt_itens_w loop 
			begin 
			nr_seq_proc_princ_ww		:= tb_itens_princ_w[i].nr_seq_proc_princ;
			nr_seq_mat_princ_ww		:= tb_itens_princ_w[i].nr_seq_mat_princ;
			 
			begin 
				select	ie_status 
				into STRICT	ie_status_w 
				from	pls_requisicao_proc 
				where	nr_sequencia		= nr_seq_proc_princ_ww;
			exception 
			when others then 
				ie_status_w	:= 'S';
			end;				
			 
			if (ie_status_w <> 'N') then 
				tb_itens_princ_w[i].nr_seq_proc_princ	:= null;
			end if;	
 
			begin 
				select	ie_status 
				into STRICT	ie_status_w 
				from	pls_requisicao_mat 
				where	nr_sequencia		= nr_seq_mat_princ_ww;
			exception 
			when others then 
				ie_status_w	:= 'S';
			end;
			 
			if (ie_status_w <> 'N') then 
				tb_itens_princ_w[i].nr_seq_mat_princ	:= null;
			end if;					
			end;
		end loop;
 
		/* INSERI OCORRÊNCIAS NOS PROCEDIMENTO E MATERIAIS FILHOS DOS PROCEDIMENTOS E MATERIAIS PAIS QUE TEM OCORRÊNCIA */
 
		for i in 0..qt_itens_w loop 
			begin 
			nr_seq_proc_princ_ww		:= tb_itens_princ_w[i].nr_seq_proc_princ;
			nr_seq_mat_princ_ww		:= tb_itens_princ_w[i].nr_seq_mat_princ;
			 
			/* VERIFICA E ENTRA APENAS SE É UTILIZADO OS FILTROS */
 
			if (ie_utiliza_filtro_p = 'S') then 
				for r_C12_w in C12 loop 
					begin 
					ie_regra_w := 'N';
				 
					/* TRATAMENTO PARA FILTROS */
 
					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, r_C12_w.nr_sequencia, null, null, r_C12_w.cd_procedimento, r_C12_w.ie_origem_proced, null, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w ) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
					 
					/* AVALIA RETORNO DO TRATAMENTO DO FILTRO E INSERE A OCORRÊNCIA */
 
					if (ie_regra_w = 'S') then 
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, r_C12_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						 
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
										null, nr_seq_requisicao_p, null, 
										null, null, r_C12_w.nr_sequencia, 
										null, null, null, 
										nm_usuario_p, cd_estabelecimento_p);
					end if;
					end;
				end loop;
				 
				for r_C13_w in C13 loop 
					begin 
					ie_regra_w := 'N';
				 
					/* TRATAMENTO PARA FILTROS */
 
					SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, r_C13_w.nr_sequencia, null, null, null, r_C13_w.nr_seq_material, null, null, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w ) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
					 
					/* AVALIA RETORNO DO TRATAMENTO DO FILTRO E INSERE A OCORRÊNCIA */
 
					if (ie_regra_w = 'S') then 
						nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, r_C13_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
						 
						CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
										null, nr_seq_requisicao_p, null, 
										null, null, null, 
										r_C13_w.nr_sequencia, null, null, 
										nm_usuario_p, cd_estabelecimento_p);
					end if;
					end;
				end loop;
			else			 
				for r_C12_w in C12 loop 
					begin 
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, r_C12_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
								 
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
									null, nr_seq_requisicao_p, null, 
									null, null, r_C12_w.nr_sequencia, 
									null, null, null, 
									nm_usuario_p, cd_estabelecimento_p);
					end;
				end loop;
				 
				for r_C13_w in C13 loop 
					begin 
					nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, r_C13_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
					 
					CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
										null, nr_seq_requisicao_p, null, 
										null, null, null, 
										r_C13_w.nr_sequencia, null, null, 
										nm_usuario_p, cd_estabelecimento_p);
					end;
				end loop;
			end if;
			end;
		end loop;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_lanc_auto ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

