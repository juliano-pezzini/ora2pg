-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE verifica_maximo_dias_prev ( nr_prescricao_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text, ie_permite_liberar_p INOUT text) AS $body$
DECLARE


qt_dias_solicitado_w			bigint;
cd_setor_atendimento_w			integer;
qt_idade_w						bigint;
qt_peso_w						real;
qt_regra_w						bigint;
qt_dias_maximo_w				smallint;
ie_via_aplicacao_w				varchar(5);
ie_objetivo_w					varchar(5);
cd_material_w					integer;
ie_permite_liberar_w			varchar(1);
ds_justificativa_w				varchar(2000);
cd_estabelecimento_w			integer;
ie_agrupador_w					prescr_material.ie_agrupador%type;
nr_atendimento_w				prescr_medica.nr_atendimento%type;

c01 CURSOR FOR
	SELECT	coalesce(qt_dias_prev_maximo,0),
			coalesce(ie_permite_liberar,'N')
	from	material_prescr
	where	cd_material = cd_material_w
	and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
	and		coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_w,0)) = coalesce(ie_via_aplicacao_w,0)
	and		coalesce(ie_objetivo, coalesce(ie_objetivo_w,'XPTO')) = coalesce(ie_objetivo_w,'XPTO')
	and		(qt_dias_prev_maximo IS NOT NULL AND qt_dias_prev_maximo::text <> '')
	and		((coalesce(cd_doenca_cid::text, '') = '') or (obter_se_cid_atendimento(nr_atendimento_w,cd_doenca_cid) = 'S'))
	and		ie_tipo = '2'
	and		(((coalesce(ie_tipo_item,'TOD') = 'SOL') and (ie_agrupador_w = 4)) or
			 ((coalesce(ie_tipo_item,'TOD') = 'OUT') and (ie_agrupador_w <> 4)) or (coalesce(ie_tipo_item,'TOD') = 'TOD'))
	and 	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	order by
			nr_sequencia;


BEGIN

ds_erro_p	:= '';

/* Verifica se há informação do dia na prescrição */

select	cd_material,
		coalesce(qt_dias_solicitado,0),
		ie_via_aplicacao,
		ie_objetivo,
		ds_justificativa,
		ie_agrupador
into STRICT	cd_material_w,
		qt_dias_solicitado_w,
		ie_via_aplicacao_w,
		ie_objetivo_w,
		ds_justificativa_w,
		ie_agrupador_w
from	prescr_material
where	nr_prescricao	= nr_prescricao_p
and		nr_sequencia	= nr_sequencia_p;

if (qt_dias_solicitado_w > 0) then

	/* Pega o setor de atendimento da prescrição e a idade do paciente */

	select	cd_setor_atendimento,
			(obter_idade_pf(cd_pessoa_fisica, clock_timestamp(), 'A'))::numeric ,
			coalesce(qt_peso,0),
			cd_estabelecimento,
			nr_atendimento
	into STRICT	cd_setor_atendimento_w,
			qt_idade_w,
			qt_peso_w,
			cd_estabelecimento_w,
			nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao	= nr_prescricao_p;

	/* Verifica se tem alguma regra para os dados informados */

	select	count(*)
	into STRICT	qt_regra_w
	from	material_prescr
	where	cd_material = cd_material_w
	and		coalesce(cd_setor_atendimento, coalesce(cd_setor_atendimento_w,0)) = coalesce(cd_setor_atendimento_w,0)
	and		coalesce(ie_via_aplicacao, coalesce(ie_via_aplicacao_w,0)) = coalesce(ie_via_aplicacao_w,0)
	and		(qt_dias_prev_maximo IS NOT NULL AND qt_dias_prev_maximo::text <> '')
	and		ie_tipo = '2'
	and		coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and		(((coalesce(ie_tipo_item,'TOD') = 'SOL') and (ie_agrupador_w = 4)) or
			 ((coalesce(ie_tipo_item,'TOD') = 'OUT') and (ie_agrupador_w <> 4)) or (coalesce(ie_tipo_item,'TOD') = 'TOD'));

	/* Caso haja alguma regra, faz as consistências */

	if (qt_regra_w > 0) then
		open c01;
			loop
			fetch c01 into
				qt_dias_maximo_w,
				ie_permite_liberar_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */

				if (qt_dias_solicitado_w > qt_dias_maximo_w) then
					ds_erro_p	:= wheb_mensagem_pck.get_texto(278935, 'QT_DIAS_MAXIMO_P=' ||qt_dias_maximo_w);
					ie_permite_liberar_p := null;
					if (ie_permite_liberar_w = 'S') then
						ie_permite_liberar_p := 'S';
						if (coalesce(ds_justificativa_w::text, '') = '') then
							ie_permite_liberar_p := 'N';
						end if;
					end if;
				end if;

			end loop;
		close c01;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE verifica_maximo_dias_prev ( nr_prescricao_p bigint, nr_sequencia_p bigint, ds_erro_p INOUT text, ie_permite_liberar_p INOUT text) FROM PUBLIC;

