-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_autorizacao_mat ( nr_atendimento_p bigint, cd_convenio_p bigint, dt_atendimento_p timestamp, cd_material_p bigint, qt_material_p bigint, cd_autorizacao_p text, ds_aviso_p INOUT text, ds_erro_p INOUT text, nr_prescricao_p bigint default null, nr_seq_prescricao_p bigint default null) AS $body$
DECLARE


/*
ATENÇÃO !!! NÃO COLOCAR R_APPLICATION_ERROR NESTA PROCEDURE
*/
qt_autorizada_w          		double precision	:= 0;
qt_utilizada_w          		double precision	:= 0;
ds_erro_w			varchar(255)	:= '';
ds_aviso_w			varchar(255)	:= '';
qt_saldo_w			double precision	:= 0;
cd_estabelecimento_w		smallint;
ie_atual_qt_solic_autor_w		varchar(5);
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w			timestamp;
qt_material_w			bigint;
ie_autor_prescr_saldo_w		convenio_estabelecimento.ie_autor_prescr_saldo%type := 'N';
ie_autor_generico_w		convenio_estabelecimento.ie_autor_generico%type := 'N';
qt_autor_generico_w		double precision	:= 0;
qt_utilizada_gen_w		double precision	:= 0;
cd_material_generico_w		material.cd_material_generico%type;

BEGIN
if (coalesce(qt_material_p::text, '') = '') then
	begin
	qt_material_w := 1;
	end;
end if;

cd_estabelecimento_w	:= obter_estab_atend(nr_atendimento_p);

select	coalesce(max(ie_atual_qt_solic_autor),'N'),
	coalesce(max(ie_autor_prescr_saldo),'N'),
	coalesce(max(ie_autor_generico),'N')
into STRICT	ie_atual_qt_solic_autor_w,
	ie_autor_prescr_saldo_w,
	ie_autor_generico_w
from	convenio_estabelecimento
where	cd_convenio		= cd_convenio_p
and	cd_estabelecimento	= cd_estabelecimento_w;

/* Obter Materiais autorizados */

if (ie_autor_generico_w = 'S' )then

	cd_material_generico_w := obter_material_generico(cd_material_p);

	if (cd_material_generico_w <> cd_material_p) then

		select	coalesce(sum(a.qt_autorizada),0)
		into STRICT	qt_autor_generico_w
		from	material_autorizado a,
			autorizacao_convenio b
		where	b.nr_atendimento = nr_atendimento_p
		and  	a.nr_sequencia_autor = b.nr_sequencia
		and	b.cd_convenio = cd_convenio_p
		and	coalesce(dt_atendimento_p,clock_timestamp()) between coalesce(b.dt_inicio_vigencia, coalesce(dt_atendimento_p,clock_timestamp())) and coalesce(b.dt_fim_vigencia,clock_timestamp())
		and	a.cd_material	= cd_material_generico_w;

	end if;


	select 	coalesce(sum(coalesce(a.qt_autorizada,0)),0),
		min(b.dt_inicio_vigencia),
		max(b.dt_fim_vigencia)
	into STRICT	qt_autorizada_w,
		dt_inicio_vigencia_w,
		dt_fim_vigencia_w
	FROM material_autorizado a, autorizacao_convenio b
LEFT OUTER JOIN estagio_autorizacao c ON (b.nr_seq_estagio = c.nr_sequencia)
WHERE b.nr_atendimento 		= nr_atendimento_p and b.cd_convenio		= cd_convenio_p and coalesce(dt_atendimento_p,clock_timestamp()) between coalesce(b.dt_inicio_vigencia, coalesce(dt_atendimento_p,clock_timestamp())) and coalesce(b.dt_fim_vigencia,clock_timestamp()) and a.nr_sequencia_autor	= b.nr_sequencia  and cd_material		= cd_material_p and coalesce(c.ie_interno,'10')		= '10' and ((ie_autor_prescr_saldo_w = 'N') or (coalesce(nr_prescricao_p,0) = 0) or (a.nr_prescricao = nr_prescricao_p));

	qt_autorizada_w := qt_autorizada_w + qt_autor_generico_w;
else
	select 	coalesce(sum(coalesce(a.qt_autorizada,0)),0),
		min(b.dt_inicio_vigencia),
		max(b.dt_fim_vigencia)
	into STRICT	qt_autorizada_w,
		dt_inicio_vigencia_w,
		dt_fim_vigencia_w
	FROM material_autorizado a, autorizacao_convenio b
LEFT OUTER JOIN estagio_autorizacao c ON (b.nr_seq_estagio = c.nr_sequencia)
WHERE b.nr_atendimento 		= nr_atendimento_p and b.cd_convenio		= cd_convenio_p and coalesce(dt_atendimento_p,clock_timestamp()) between coalesce(b.dt_inicio_vigencia, coalesce(dt_atendimento_p,clock_timestamp())) and coalesce(b.dt_fim_vigencia,clock_timestamp()) /*and	a.nr_atendimento 		= b.nr_atendimento
	and	a.nr_seq_autorizacao 	= b.nr_seq_autorizacao*/
  and a.nr_sequencia_autor	= b.nr_sequencia  and cd_material		= cd_material_p and coalesce(c.ie_interno,'10')		= '10' and ((ie_autor_prescr_saldo_w = 'N') or (coalesce(nr_prescricao_p,0) = 0) or (a.nr_prescricao = nr_prescricao_p));
end if;

/* Obter Materiais lançados */

dt_fim_vigencia_w := coalesce(dt_fim_vigencia_w,clock_timestamp());

/*970634 - Pode-se ter varios materiais lançados na conta e estes possuirem o mesmo generico*/

if (ie_autor_generico_w = 'S' )then
	begin
	select	coalesce(sum(qt_material),0)
	into STRICT	qt_utilizada_w
	from	material_atend_paciente
	where	nr_atendimento 		= nr_atendimento_p
	and	cd_convenio		= cd_convenio_p
	and	cd_material		= cd_material_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
	and	dt_atendimento between coalesce(dt_inicio_vigencia_w, dt_atendimento) and dt_fim_vigencia_w
	and	((ie_autor_prescr_saldo_w = 'N') or (coalesce(nr_prescricao_p,0) = 0) or (nr_prescricao = nr_prescricao_p));
	exception
	when others then
		qt_utilizada_w := 0;
	end;

	if (cd_material_generico_w <>  cd_material_p) then

		begin
		select	coalesce(sum(qt_material),0)
		into STRICT	qt_utilizada_gen_w
		from	material_atend_paciente a,
			material m
		where	a.nr_atendimento 	= nr_atendimento_p
		and	a.cd_material		= m.cd_material
		and	a.cd_convenio		= cd_convenio_p
		and	m.cd_material_generico  = cd_material_generico_w
		and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
		and	(a.nr_interno_conta IS NOT NULL AND a.nr_interno_conta::text <> '')
		and	a.dt_atendimento between coalesce(dt_inicio_vigencia_w, a.dt_atendimento) and dt_fim_vigencia_w
		and	((ie_autor_prescr_saldo_w = 'N') or (coalesce(nr_prescricao_p,0) = 0) or (nr_prescricao = nr_prescricao_p));
		exception
		when others then
			qt_utilizada_gen_w := 0;
		end;

		if (qt_utilizada_gen_w > 0) then

			qt_utilizada_w := qt_utilizada_gen_w;

		end if;


	end if;

else
	begin
	select	coalesce(sum(qt_material),0)
	into STRICT	qt_utilizada_w
	from	material_atend_paciente
	where	nr_atendimento 		= nr_atendimento_p
	and	cd_convenio		= cd_convenio_p
	and	cd_material		= cd_material_p
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	(nr_interno_conta IS NOT NULL AND nr_interno_conta::text <> '')
	and	dt_atendimento between coalesce(dt_inicio_vigencia_w, dt_atendimento) and dt_fim_vigencia_w
	and	((ie_autor_prescr_saldo_w = 'N') or (coalesce(nr_prescricao_p,0) = 0) or (nr_prescricao = nr_prescricao_p));
	exception
		when others then
			qt_utilizada_w := 0;
	end;
end if;


qt_saldo_w:=	qt_autorizada_w - qt_utilizada_w;

if (qt_autorizada_w = 0) then
	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(278071);

elsif (ie_atual_qt_solic_autor_w = 'S') and (qt_autorizada_w <= qt_utilizada_w) then
	ds_erro_w	:=  WHEB_MENSAGEM_PCK.get_texto(278072);

elsif	(qt_autorizada_w =  (qt_utilizada_w + coalesce(qt_material_p,qt_material_w))) then -- Não é um erro
	ds_aviso_w	:= WHEB_MENSAGEM_PCK.get_texto(278073);

elsif	(qt_autorizada_w <  (qt_utilizada_w + coalesce(qt_material_p,qt_material_w))) then
	/* Substituída a msg abaixo em 13/06/2007 por Fabrício OS 55456 */

	/* ds_erro_w	:= 'A quantidade lançada supera a quantidade autorizada pelo convênio!'; */

	ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(278074) || qt_autorizada_w || WHEB_MENSAGEM_PCK.get_texto(278075) || qt_utilizada_w ||
			   WHEB_MENSAGEM_PCK.get_texto(278076) || qt_saldo_w;
/*elsif	(ie_atual_qt_solic_autor_w = 'S') and
	(qt_autorizada_w > qt_utilizada_w + nvl(qt_material_p,qt_material_w)) then
	ds_erro_w	:= substr('Quantidade liberada pelo convênio: ',1,200); || qt_autorizada_w || ', usado: ' || qt_utilizada_w + nvl(qt_material_p,qt_material_w) ||
			   ', disponível p/ utilização: ' || qt_saldo_w,1,254);
comentado if em questão, pois nos casos de ter quantidade autorizada 3, e for o primeiro item a ser lançado, sempre era maior e sempre bloqueava.
*/
end if;

ds_erro_p	:= ds_erro_w;
ds_aviso_p	:= ds_aviso_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_autorizacao_mat ( nr_atendimento_p bigint, cd_convenio_p bigint, dt_atendimento_p timestamp, cd_material_p bigint, qt_material_p bigint, cd_autorizacao_p text, ds_aviso_p INOUT text, ds_erro_p INOUT text, nr_prescricao_p bigint default null, nr_seq_prescricao_p bigint default null) FROM PUBLIC;

