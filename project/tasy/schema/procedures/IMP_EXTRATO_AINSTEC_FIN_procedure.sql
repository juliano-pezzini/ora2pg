-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE imp_extrato_ainstec_fin ( nr_seq_extrato_p bigint, nm_usuario_p text, ds_arquivo_p text) AS $body$
DECLARE

 
nr_seq_extrato_arq_w	extrato_cartao_cr_arq.nr_sequencia%type;
cd_estabelecimento_w	extrato_cartao_cr.cd_estabelecimento%type;
nr_seq_grupo_w			extrato_cartao_cr.nr_seq_grupo%type;

nr_parcela_w			varchar(10); -- No layout esta alfa de 100, mas como a parcela Ã© number 10 no Tasy, nao adianta pegar um valor maior. 
nr_nsu_w				varchar(30);
nr_autorizacao_w		varchar(40);
dt_pagamento_w			timestamp;
vl_pago_w				double precision;
ds_taxa_w				varchar(255);
vl_taxa_w				double precision;
nr_resumo_operacao_w	varchar(255);
nr_cartao_w				varchar(20);		
 
nr_resumo_w				varchar(255);	
nr_seq_extrato_res_w	extrato_cartao_cr_res.nr_sequencia%type;
cd_banco_w				varchar(255);
cd_agencia_w			varchar(255);
cd_conta_w				varchar(255);
nr_seq_conta_banco_w	banco_estabelecimento.nr_sequencia%type;
qt_cv_aceito_w			extrato_cartao_cr_res.qt_cv_aceito%type;
qt_cv_rejeitado_w		extrato_cartao_cr_res.qt_cv_rejeitado%type;
vl_bruto_w				extrato_cartao_cr_res.vl_bruto%type;
vl_comissao_w			extrato_cartao_cr_res.vl_comissao%type;
vl_liquido_w			extrato_cartao_cr_res.vl_liquido%type;
dt_pagto_w				extrato_cartao_cr_res.dt_prev_pagto%type;
						
/*Cursor para movimentos*/
 
C01 CURSOR FOR 
	SELECT	substr(obter_valor_campo_separador(ds_conteudo, 7, ';'),1,10) nr_parcela, 
			obter_valor_campo_separador(ds_conteudo, 12, ';') nr_nsu, 
			substr(obter_valor_campo_separador(ds_conteudo, 13, ';'),1,40) nr_autorizacao, 
			to_date(substr(obter_valor_campo_separador(ds_conteudo, 27, ';'),1,10),'dd/mm/yyyy') dt_pagamento, 
			obter_valor_campo_separador(ds_conteudo, 15, ';') vl_pago, 
			substr(obter_valor_campo_separador(ds_conteudo, 16, ';'),1,4) vl_taxa, 
			--obter_valor_campo_separador(ds_conteudo, 22, ';') cd_banco, 
			--obter_valor_campo_separador(ds_conteudo, 23, ';') cd_agencia, 
			--obter_valor_campo_separador(ds_conteudo, 24, ';') cd_conta, 
			obter_valor_campo_separador(ds_conteudo, 29, ';') nr_resumo_operacao, 
			substr(obter_valor_campo_separador(ds_conteudo, 28, ';'),1,20) nr_cartao 
	from	w_extrato_cartao_cr 
	where	nr_seq_extrato			= nr_seq_extrato_p 
	and		obter_valor_campo_separador(ds_conteudo, 1, ';') = 'C02' 
	and		obter_valor_campo_separador(ds_conteudo, 29, ';') = coalesce(nr_resumo_w, obter_valor_campo_separador(ds_conteudo, 29, ';'));

/*Cursor para resumos*/
	 
C02 CURSOR FOR 
	SELECT	distinct obter_valor_campo_separador(ds_conteudo, 29, ';') nr_resumo, 
			obter_valor_campo_separador(ds_conteudo, 22, ';') cd_banco, 
			obter_valor_campo_separador(ds_conteudo, 23, ';') cd_agencia, 
			obter_valor_campo_separador(ds_conteudo, 24, ';') cd_conta, 
			to_date(substr(obter_valor_campo_separador(ds_conteudo, 14, ';'),1,10),'dd/mm/yyyy') dt_pagto 
	from	w_extrato_cartao_cr 
	where	nr_seq_extrato			= nr_seq_extrato_p 
	and		obter_valor_campo_separador(ds_conteudo, 1, ';') = 'C02';

									 

BEGIN 
 
/*Criar Registro d oarquivo que esta sendo importado*/
 
select 	nextval('extrato_cartao_cr_arq_seq') 
into STRICT	nr_seq_extrato_arq_w
;
 
insert into EXTRATO_CARTAO_CR_ARQ(	nr_sequencia, 
									dt_atualizacao, 
									nm_usuario, 
									dt_atualizacao_nrec, 
									nm_usuario_nrec, 
									nr_seq_extrato, 
									ie_tipo_arquivo, 
									ds_arquivo) 
						values (	nr_seq_extrato_arq_w, 
									clock_timestamp(), 
									nm_usuario_p, 
									clock_timestamp(), 
									nm_usuario_p, 
									nr_seq_extrato_p, 
									'F', 
									ds_arquivo_p);
/*FIM - Criar Registro do arquivo que esta sendo importado*/
 
 
if (nr_seq_extrato_p IS NOT NULL AND nr_seq_extrato_p::text <> '') then 
 
	select	max(cd_estabelecimento), 
			max(nr_seq_grupo) 
	into STRICT	cd_estabelecimento_w, 
			nr_seq_grupo_w 
	from	extrato_cartao_cr 
	where	nr_sequencia	= nr_seq_extrato_p;	
	 
	open C02;
	loop 
	fetch C02 into	 
		nr_resumo_w, 
		cd_banco_w, 
		cd_agencia_w, 
		cd_conta_w, 
		dt_pagto_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		 
		/*Buscar conta no Tasy de acordo com retorno no arquivo*/
 
		select	max(nr_sequencia) 
		into STRICT	nr_seq_conta_banco_w 
		from	banco_estabelecimento_v 
		where	somente_numero(cd_banco)			= somente_numero(cd_banco_w)	 
		and		somente_numero(cd_agencia_bancaria)		= somente_numero(cd_agencia_w) 
		and		somente_numero(cd_conta || ie_digito_conta)	= somente_numero(cd_conta_w);
		 
		/*Inclusao do resumo*/
 
		select	nextval('extrato_cartao_cr_res_seq') 
		into STRICT	nr_seq_extrato_res_w 
		;		
 
		insert into extrato_cartao_cr_res( nr_sequencia, 
											dt_atualizacao_nrec, 
											nm_usuario_nrec, 
											dt_atualizacao, 
											nm_usuario, 
											nr_seq_extrato, 
											nr_resumo, 
											nr_seq_conta_banco, 
											qt_cv_aceito, 
											qt_cv_rejeitado, 
											vl_bruto, 
											vl_comissao, 
											vl_rejeitado, 
											vl_liquido, 
											dt_prev_pagto, 
											nr_seq_extrato_arq) 
								values ( nr_seq_extrato_res_w, 
											clock_timestamp(), 
											nm_usuario_p, 
											clock_timestamp(), 
											nm_usuario_p, 
											nr_seq_extrato_p, 
											nr_resumo_w, 
											nr_seq_conta_banco_w, 
											0,--t_cv_aceito_w, 
											0,--qt_cv_rejeitado_w, 
											0,--vl_bruto_w, 
											0,--vl_comissao_w, 
											0,--vl_rejeitado_w, 
											0,--vl_liquido_w, 
											dt_pagto_w, 
											nr_seq_extrato_arq_w);	
		 
		/*Movimentos do resumo*/
 
		open C01;
		loop 
		fetch C01 into	 
			nr_parcela_w,			 
			nr_nsu_w, 
			nr_autorizacao_w, 
			dt_pagamento_w, 
			vl_pago_w, 
			ds_taxa_w, 
			nr_resumo_operacao_w, 
			nr_cartao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			 
			vl_pago_w := substr(vl_pago_w, 1, length(vl_pago_w)-2) ||','|| substr(vl_pago_w, length(vl_pago_w)-1, length(vl_pago_w));
			vl_taxa_w := (substr(ds_taxa_w, 1, length(ds_taxa_w)-2) ||','|| substr(ds_taxa_w, length(ds_taxa_w)-1, length(ds_taxa_w)))::numeric;
			 
			begin 
				vl_pago_w := dividir_sem_round( coalesce(vl_pago_w,0) , (100 - coalesce(vl_taxa_w,0) ) / 100);
			exception when others then 
				vl_pago_w := vl_pago_w;
			end;
 
			/*Calcular o valor da taxa sobre o valor bruto para obter o valor liquido*/
 
			if (vl_taxa_w IS NOT NULL AND vl_taxa_w::text <> '') then 
				vl_liquido_w := coalesce(vl_pago_w,0) - dividir_sem_round((coalesce(vl_taxa_w,0) * coalesce(vl_pago_w,0))::numeric,100);				
			end if;
			 
			 
			insert into extrato_cartao_cr_movto(	 nr_sequencia, 
													 dt_atualizacao, 
													 nm_usuario, 
													 dt_atualizacao_nrec, 
													 nm_usuario_nrec, 
													 nr_seq_extrato, 
													 nr_seq_extrato_res, 
													 vl_parcela, 
													 dt_parcela, 
													 qt_parcelas, 
													 nr_cartao, 
													 nr_autorizacao, 
													 ds_comprovante, 
													 ds_rejeicao, 
													 dt_compra, 
													 nr_parcela,   
													 nr_seq_extrato_parcela, 
													 ie_pagto_indevido,  
													 vl_liquido, 
													 nr_seq_extrato_arq, 
													 nr_resumo,  
													 nr_seq_extrato_parc_cred, 
													 vl_saldo_concil_fin,   
													 vl_saldo_concil_cred,     
													 vl_aconciliar,  
													 nr_seq_origem,     
													 nr_seq_parcela,  
													 nr_documento,   
													 vl_ajuste,      
													 vl_ajuste_desp) 
											values (nextval('extrato_cartao_cr_movto_seq'), 
													 clock_timestamp(), 
													 nm_usuario_p, 
													 clock_timestamp(), 
													 nm_usuario_p, 
													 nr_seq_extrato_p, 
													 nr_seq_extrato_res_w, --nr_seq_resumo, ----- 
													 vl_pago_w, 
													 dt_pagamento_w, 
													 (substr(nr_parcela_w,3,2))::numeric , 
													 nr_cartao_w, 
													 nr_autorizacao_w, 
													 nr_nsu_w, 
													 null, -- ds_rejeicao 
													 dt_pagamento_w, --dt_compra 
													 (substr(nr_parcela_w,1,2))::numeric , 
													 null, --nr_seq_extrato_parcela, 
													 'N', --ie_pagto_indevido 
													 vl_liquido_w, --vl_liquido 
													 nr_seq_extrato_arq_w, 
													 nr_resumo_w, 
													 null, --nr_seq_extrato_parc_cred 
													 vl_liquido_w, 
													 null, --vl_saldo_concil_cred 
													 null, --vl_aconciliar 
													 null, --nr_seq_origem 
													 null, --nr_seq_parcela, 
													 null, --nr_documento 
													 null, --vl_ajuste 
													 null); --vl_ajuste_desp 
													
													 
													 
			end;	
		end loop;
		close C01;
		 
		select 	sum(a.vl_parcela), 
				(sum(a.vl_parcela) - sum(a.vl_liquido)), 
				count(*) 
		into STRICT	vl_bruto_w, 
				vl_comissao_w, 
				qt_cv_aceito_w 
		from	extrato_cartao_cr_movto a 
		where	a.nr_seq_extrato_res 	= nr_seq_extrato_res_w 
		and		a.nr_seq_extrato		= nr_seq_extrato_p;
 
		update	extrato_cartao_cr_res 
		set		vl_bruto	= vl_bruto_w, 
				vl_comissao	= vl_comissao_w, 
				vl_liquido	= coalesce(vl_bruto_w,0) - coalesce(vl_comissao_w,0), 
				qt_cv_aceito = qt_cv_aceito_w 
		where	nr_sequencia	= nr_seq_extrato_res_w 
		and		nr_seq_extrato	= nr_seq_extrato_p;
															 
		end;
	end loop;
	close C02;
	 
end if;	
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE imp_extrato_ainstec_fin ( nr_seq_extrato_p bigint, nm_usuario_p text, ds_arquivo_p text) FROM PUBLIC;

