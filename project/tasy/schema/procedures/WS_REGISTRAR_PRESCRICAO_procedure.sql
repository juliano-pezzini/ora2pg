-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ws_registrar_prescricao ( nr_prescricao_ext_w text, nr_atendimento_p bigint, dt_entrega_p timestamp, cd_medico_resp_p text, qt_peso_p bigint, qt_altura_cm_p bigint, dt_prescricao_p timestamp, dt_mestruacao_p timestamp, cd_setor_entrega_p bigint, nm_usuario_p text, nr_prescricao_p INOUT bigint, cd_erro_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE

 
nr_prescricao_w		bigint;

ie_existe_medico_w	varchar(1);
ie_existe_pf_w		varchar(1);
ie_existe_atendimento_w	varchar(1);
ie_existe_setor_entr_w	varchar(1);
cd_pessoa_fisica_w	varchar(10);
cd_estabelecimento_w	smallint;

 
/* Lista de erros 
0 - SUCESSO 
1 - Campo não informado 
	1.1 - Atendimento não informado 
	1.2 - Pessoa física não informada 
	1.3 - Médico não informado 
	1.4 - Data da prescrição não informado. 
2 - Registro não existe 
	2.1 - Médico não existe no sistema. 
	2.2 - Pessoa física não encontrada 
	2.3 - Atendimento não encontrado 
	2.4 - Setor de entrega não cadastrado 
3 - Erro ao criar a prescrição. 
	 
*/
 
					 

BEGIN 
 
cd_erro_p	:= 0;
 
if (coalesce(nr_atendimento_p::text, '') = '') then 
	cd_erro_p	:= 1.1;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277340,null);
elsif (coalesce(cd_medico_resp_p::text, '') = '') then 
	cd_erro_p	:= 1.3;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277341,null);
elsif (coalesce(dt_prescricao_p::text, '') = '') then 
	cd_erro_p	:= 1.4;
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277342,null);
end if;
	 
if (cd_erro_p = 0) then 
 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_existe_medico_w 
	from	medico a 
	where	a.cd_pessoa_fisica = cd_medico_resp_p;
		 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_existe_atendimento_w 
	from	atendimento_paciente a 
	where	a.nr_atendimento = nr_atendimento_p;
	 
	select	max(cd_pessoa_fisica), 
			max(cd_estabelecimento) 
	into STRICT	cd_pessoa_fisica_w, 
			cd_estabelecimento_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;	
		 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_existe_pf_w 
	from	pessoa_fisica a 
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	 
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_existe_setor_entr_w 
	from	setor_atendimento a 
	where	a.cd_setor_atendimento = cd_setor_entrega_p;
	 
	if (ie_existe_medico_w = 'N') then 
		cd_erro_p	:= 2.1;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277343,null)||cd_medico_resp_p;
	elsif (ie_existe_pf_w = 'N') then 
		cd_erro_p	:= 2.2;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277344,null)||cd_pessoa_fisica_w;
	elsif (ie_existe_atendimento_w = 'N') then 
		cd_erro_p	:= 2.3;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277345,null)||to_char(nr_atendimento_p);
	elsif (cd_setor_entrega_p IS NOT NULL AND cd_setor_entrega_p::text <> '') and (ie_existe_setor_entr_w = 'N') then 
		cd_erro_p	:= 2.4;
		ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(277346,null)||to_char(cd_setor_entrega_p);		
	end if;
	 
	 
	if (cd_erro_p = 0) then 
	 
	 
		select	nextval('prescr_medica_seq') 
		into STRICT	nr_prescricao_w 
		;
		 
		begin			 
		insert into prescr_medica(nr_atendimento, 
					nr_prescricao, 
					cd_pessoa_fisica, 
					cd_medico, 
					dt_prescricao, 
					dt_entrega, 
					cd_setor_entrega, 
					qt_peso, 
					qt_altura_cm, 
					dt_mestruacao, 
					cd_estabelecimento, 
					dt_atualizacao, 
					nm_usuario) 
		values (	nr_atendimento_p, 
					nr_prescricao_w, 
					cd_pessoa_fisica_w, 
					cd_medico_resp_p, 
					dt_prescricao_p, 
					dt_entrega_p, 
					cd_setor_entrega_p, 
					qt_peso_p, 
					qt_altura_cm_p, 
					dt_mestruacao_p, 
					cd_estabelecimento_w, 
					clock_timestamp(), 
					nm_usuario_p);
					 
		nr_prescricao_p		:= nr_prescricao_w;
		 
		exception 
		when others then 
			cd_erro_p	:= 3;
			ds_erro_p	:= substr(sqlerrm,1,2000);
		end;
	 
	end if;
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ws_registrar_prescricao ( nr_prescricao_ext_w text, nr_atendimento_p bigint, dt_entrega_p timestamp, cd_medico_resp_p text, qt_peso_p bigint, qt_altura_cm_p bigint, dt_prescricao_p timestamp, dt_mestruacao_p timestamp, cd_setor_entrega_p bigint, nm_usuario_p text, nr_prescricao_p INOUT bigint, cd_erro_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

