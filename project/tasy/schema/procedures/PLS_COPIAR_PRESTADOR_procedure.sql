-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_prestador ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_registro_w				bigint;
nr_seq_prestador_ant_w			bigint;
nr_seq_prestador_novo_w			bigint;
nr_seq_regra_novo_w			bigint;
nr_seq_prest_tipo_novo_w		bigint;
nr_seq_lote_novo_w			bigint;
nr_seq_prest_proc_ant_w			bigint;
nr_seq_prest_mat_ant_w			bigint;
nr_seq_reg_preco_proc_ant_w		bigint;
nr_seq_reg_preco_qt_proc_ant_w		bigint;
nr_seq_reg_preco_qt_proc_nov_w		bigint;
nr_seq_reg_preco_tx_proc_ant_w		bigint;
nr_seq_reg_preco_mat_ant_w		bigint;
nr_seq_reg_preco_serv_ant_w		bigint;
nr_seq_reg_pr_serv_adic_ant_w		bigint;
nr_seq_pct_ant_w			bigint;
nr_seq_pct_novo_w			bigint;
nr_seq_pct_tipo_acd_ant_w		bigint;
nr_seq_pct_proc_ant_w			bigint;
nr_seq_pct_mat_ant_w			bigint;
nr_seq_prest_area_ant_w			bigint;
nr_seq_prest_plano_ant_w		bigint;
nr_seq_prest_medico_ant_w		bigint;
nr_seq_prest_medico_novo_w		bigint;
nr_seq_prest_tributo_ant_w		bigint;
nr_seq_endereco_guia_med_ant_w		bigint;
nr_seq_prest_med_espec_ant_w		bigint;
nr_seq_prest_prof_pgto_ant_w		bigint;
nr_seq_prest_pagto_ant_w		bigint;
nr_seq_prest_tipo_ant_w			bigint;
nr_seq_usuario_web_ant_w		bigint;
nr_seq_usu_web_envio_ant_w		bigint;
nr_seq_usuario_web_novo_w		bigint;
nr_seq_ger_dados_proc_ant_w		bigint;
nr_seq_conver_proc_ant_w		bigint;
nr_seq_reg_qtde_proc_ant_w		bigint;
nr_seq_reg_prest_int_ant_w		bigint;
nr_seq_credenc_hist_ant_w		bigint;
nr_seq_prest_atend_cat_ant_w		bigint;
nr_seq_prest_tipo_doc_ant_w		bigint;
nr_seq_prest_tipo_doc_novo_w		bigint;
nr_seq_prest_documento_ant_w		bigint;
nr_seq_prest_orientacao_ant_w		bigint;
nr_seq_prest_historico_ant_w		bigint;
nr_seq_fornec_lote_rep_ant_w		bigint;
nr_seq_fornec_lote_rep_novo_w		bigint;
nr_seq_fornec_rep_ant_w			bigint;
nr_seq_plano_fornec_ant_w		bigint;
nr_seq_cat_novo_w			bigint;
nr_seq_cat_ant_w			bigint;
nr_seq_clin_ant_w			bigint;
nr_seq_contr_ant_w			bigint;
nr_seq_plano_ant_w			bigint;
nr_seq_tp_acmd_ant_w			bigint;
nr_seq_tp_atend_ant_w			bigint;
nr_seq_clin_novo_w			bigint;
nr_seq_contr_novo_w			bigint;
nr_seq_plano_novo_w			bigint;
nr_seq_tp_acmd_novo_w			bigint;
nr_seq_tp_atend_novo_w			bigint;
nr_seq_regiao_novo_w			bigint;
nr_seq_regiao_ant_w			bigint;
nr_seq_tipo_doc_ant_w			bigint;
nr_seq_tipo_doc_novo_w			bigint;
nr_seq_qdro_cl_ant_w			bigint;
nr_seq_qdro_cl_novo_w			bigint;
nr_seq_seg_novo_w			bigint;
nr_seq_seg_ant_w			bigint;
nr_seq_tp_prest_ant_w			bigint;
nr_seq_tp_prest_novo_w			bigint;
nr_seq_grau_part_ant_w			bigint;
nr_seq_grau_part_novo_w			bigint;
nr_seq_mtv_descred_ant_w		bigint;
nr_seq_mtv_descred_novo_w		bigint;
qt_tab_serv_w				bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador
	where	cd_estabelecimento	= cd_estab_origem_p
	order by nr_seq_prestador_receb;
	
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_proc
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_mat
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;
	
C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_preco_proc
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_preco_qtde_proc
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_preco_tx_proc
	where	nr_seq_regra	= nr_seq_reg_preco_qt_proc_ant_w;

C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_preco_mat
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;
	
C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_preco_servico
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;
	
C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_preco_serv_adic
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;
	
C10 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pacote
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;
	
C11 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pacote_tipo_acomodacao
	where	nr_seq_pacote		= nr_seq_pct_ant_w;

C12 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pacote_procedimento
	where	nr_seq_pacote		= nr_seq_pct_ant_w;
	
C13 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_pacote_material
	where	nr_seq_pacote		= nr_seq_pct_ant_w;
	
C14 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_area
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;
	
C15 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_plano
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C16 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_medico
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C17 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_tributo
	where	nr_seq_prestador_med	= nr_seq_prest_medico_ant_w;

C18 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_endereco_guia_medico
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C19 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_med_espec
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C20 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_prof_pgto
	where	nr_seq_prestador_pgto	= nr_seq_prestador_ant_w;

C21 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_pagto
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C22 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_tipo
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C23 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_usuario_web
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C24 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_usuario_web_envio
	where	nr_seq_usuario_web	= nr_seq_usuario_web_ant_w;

C25 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_gerar_dados_proc
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C26 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conversao_proc
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C27 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_qtde_proc
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C28 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_prest_integracao
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C29 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_credenciamento_hist
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C30 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_atend_cat
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C31 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_tipo_doc
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C32 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_documento
	where	nr_seq_prest_tipo	= nr_seq_prest_tipo_doc_ant_w;

C33 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_orientacao
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C34 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador_historico
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C35 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_fornec_lote_repasse
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;

C36 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_fornec_repasse
	where	nr_seq_lote		= nr_seq_fornec_lote_rep_ant_w;

C37 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_fornecedor
	where	nr_seq_prestador	= nr_seq_prestador_ant_w;
				

BEGIN
select  count(*)
into STRICT	qt_tab_serv_w
from	tabela_servico
where	cd_estabelecimento = cd_estab_destino_p;

if (qt_tab_serv_w	<> 0) then
	open C01;
	loop
	fetch C01 into	
		nr_seq_prestador_ant_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	pls_prestador
		where	nr_seq_anterior		= nr_seq_prestador_ant_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		
		if (qt_registro_w	= 0) then
			select	nextval('pls_prestador_seq')
			into STRICT	nr_seq_prestador_novo_w
			;

			insert	into pls_prestador(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, cd_cgc,
				cd_pessoa_fisica, ie_situacao, nr_seq_prestador_receb,
				ie_tipo_relacao, ie_abramge, dt_cadastro,                    
				nr_seq_contrato, nr_seq_tipo_prestador, cd_estabelecimento,
				dt_limite_integracao, ie_guia_medico, ie_tipo_complemento,
				ie_tipo_endereco, ie_tipo_vinculo, qt_dias_protocolo,
				ie_tipo_guia_medico, ie_regra_data_preco_proc, ie_regra_data_preco_mat,
				ie_tipo_validacao_aut_solic, qt_dias_envio_contas, ie_tipo_prestador,
				nr_seq_classificacao, nr_seq_anterior)
			(SELECT	nr_seq_prestador_novo_w, dt_atualizacao, nm_usuario,                     
				dt_atualizacao_nrec, nm_usuario_nrec, cd_cgc,
				cd_pessoa_fisica, ie_situacao, nr_seq_prestador_novo_w,
				ie_tipo_relacao, ie_abramge, dt_cadastro,                    
				nr_seq_contrato, nr_seq_tipo_prestador, cd_estab_destino_p,
				dt_limite_integracao, ie_guia_medico, ie_tipo_complemento,
				ie_tipo_endereco, ie_tipo_vinculo, qt_dias_protocolo,
				ie_tipo_guia_medico, ie_regra_data_preco_proc, ie_regra_data_preco_mat,
				ie_tipo_validacao_aut_solic, qt_dias_envio_contas, ie_tipo_prestador,
				nr_seq_classificacao, nr_seq_prestador_ant_w
			from	pls_prestador
			where	nr_sequencia	= nr_seq_prestador_ant_w);
			
			open C02;
			loop
			fetch C02 into	
				nr_seq_prest_proc_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				insert	into pls_prestador_proc(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador,
					cd_area_procedimento, cd_especialidade_proc, cd_grupo_proc,
					cd_procedimento, ie_origem_proced, ie_liberar,
					cd_especialidade, nr_seq_cbo_saude)
				(SELECT	nextval('pls_prestador_proc_seq'), dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador_novo_w,
					cd_area_procedimento, cd_especialidade_proc, cd_grupo_proc,
					cd_procedimento, ie_origem_proced, ie_liberar,
					cd_especialidade, nr_seq_cbo_saude
				from	pls_prestador_proc
				where	nr_sequencia	= nr_seq_prest_proc_ant_w);
				end;
			end loop;
			close C02;
			
			open C03;
			loop
			fetch C03 into	
				nr_seq_prest_mat_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				insert	into pls_prestador_mat(
					nr_sequencia,
					nr_seq_prestador,
					ie_liberar,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_material,
					nr_seq_estrutura_mat,
					nr_seq_prest_fornec,
					nr_seq_fornec_mat,
					nr_seq_grupo_material,
					nr_seq_tipo_prestador)
				(SELECT	nextval('pls_prestador_mat_seq'),
					nr_seq_prestador_novo_w,
					ie_liberar,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_material,
					nr_seq_estrutura_mat,
					nr_seq_prest_fornec,
					nr_seq_fornec_mat,
					nr_seq_grupo_material,
					nr_seq_tipo_prestador
				from	pls_prestador_mat
				where	nr_sequencia	= nr_seq_prest_mat_ant_w);
				end;
			end loop;
			close C03;
			
			open C04;
			loop
			fetch C04 into	
				nr_seq_reg_preco_proc_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				select	max(nr_seq_categoria),
					max(nr_seq_clinica),
					max(nr_seq_contrato),
					max(nr_seq_plano),
					max(nr_seq_tipo_acomodacao),
					max(nr_seq_tipo_atendimento)
				into STRICT	nr_seq_cat_ant_w,
					nr_seq_clin_ant_w,
					nr_seq_contr_ant_w,
					nr_seq_plano_ant_w,
					nr_seq_tp_acmd_ant_w,
					nr_seq_tp_atend_ant_w
				from	pls_regra_preco_proc
				where	nr_sequencia	= nr_seq_reg_preco_proc_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_cat_novo_w
				from	pls_categoria
				where	nr_seq_categoria_ant	= nr_seq_cat_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_cat_novo_w	:= nr_seq_cat_ant_w;
				end;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_clin_novo_w
				from	pls_clinica
				where	nr_seq_anterior		= nr_seq_clin_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_clin_novo_w	:= nr_seq_clin_ant_w;
				end;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_contr_novo_w
				from	pls_contrato
				where	nr_seq_contrato_ant	= nr_seq_contr_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_contr_novo_w	:= nr_seq_contr_ant_w;
				end;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_plano_novo_w
				from	pls_plano
				where	nr_seq_plano_ant	= nr_seq_plano_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_plano_novo_w	:= nr_seq_plano_ant_w;
				end;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_tp_acmd_novo_w
				from	pls_tipo_acomodacao
				where	nr_seq_tipo_acomod_ant	= nr_seq_tp_acmd_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_tp_acmd_novo_w	:= nr_seq_tp_acmd_ant_w;
				end;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_tp_atend_novo_w
				from	pls_tipo_atendimento
				where	nr_seq_anterior		= nr_seq_tp_atend_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_tp_atend_novo_w	:= nr_seq_tp_atend_ant_w;
				end;
				
				insert	into pls_regra_preco_proc(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador,
					nr_seq_plano, nr_seq_categoria, nr_seq_clinica,
					nr_seq_tipo_acomodacao, nr_seq_tipo_atendimento, cd_edicao_amb,
					cd_procedimento, ie_origem_proced, cd_area_procedimento,
					cd_especialidade, cd_grupo_proc, tx_ajuste_geral,
					vl_ch_honorarios, vl_ch_custo_oper, vl_filme,
					tx_ajuste_custo_oper, tx_ajuste_partic, vl_proc_negociado,
					ie_situacao, dt_inicio_vigencia, cd_estabelecimento,
					dt_fim_vigencia, tx_ajuste_filme, tx_ajuste_ch_honor,
					ie_tipo_tabela, vl_medico, vl_auxiliares, 
					vl_anestesista, vl_custo_operacional, vl_materiais,           
					ie_preco_informado, nr_seq_outorgante, nr_seq_contrato,
					ie_preco, nr_seq_congenere, cd_convenio,
					cd_categoria, ie_tipo_contratacao, qt_dias_inter_inicio, 
					qt_dias_inter_final, nr_seq_regra_ant,nr_seq_ops_congenere,
					ie_tipo_contrato, ie_tipo_consulta, nr_seq_grupo_med_exec,
                    ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
					ie_saude_ocupacional)
				(SELECT	nextval('pls_regra_preco_proc_seq'), dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador_novo_w,
					nr_seq_plano_novo_w, nr_seq_cat_novo_w, nr_seq_clin_novo_w,
					nr_seq_tp_acmd_novo_w, nr_seq_tp_atend_novo_w, cd_edicao_amb,
					cd_procedimento, ie_origem_proced, cd_area_procedimento,
					cd_especialidade, cd_grupo_proc, tx_ajuste_geral,
					vl_ch_honorarios, vl_ch_custo_oper, vl_filme,
					tx_ajuste_custo_oper, tx_ajuste_partic, vl_proc_negociado,
					ie_situacao, dt_inicio_vigencia, cd_estab_destino_p,
					dt_fim_vigencia, tx_ajuste_filme, tx_ajuste_ch_honor, 
					ie_tipo_tabela, vl_medico, vl_auxiliares, 
					vl_anestesista, vl_custo_operacional, vl_materiais,           
					ie_preco_informado, nr_seq_outorgante, nr_seq_contr_novo_w,
					ie_preco, nr_seq_congenere, cd_convenio,
					cd_categoria, ie_tipo_contratacao, qt_dias_inter_inicio, 
					qt_dias_inter_final, nr_seq_reg_preco_proc_ant_w,nr_seq_ops_congenere,
					ie_tipo_contrato, ie_tipo_consulta, nr_seq_grupo_med_exec,
                    ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
					ie_saude_ocupacional
				from	pls_regra_preco_proc
				where	nr_sequencia	= nr_seq_reg_preco_proc_ant_w);
				end;
			end loop;
			close C04;
			
			open C05;
			loop
			fetch C05 into	
				nr_seq_reg_preco_qt_proc_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				select	nextval('pls_regra_preco_qtde_proc_seq')
				into STRICT	nr_seq_reg_preco_qt_proc_nov_w
				;
				
				insert	into pls_regra_preco_qtde_proc(nr_sequencia, ie_situacao, cd_estabelecimento,
					dt_inicio_vigencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_procedimento, 
					ie_origem_proced, cd_area_procedimento, cd_especialidade, 
					cd_grupo_proc, nr_seq_prestador, dt_fim_vigencia,
					ie_origem_protocolo)
				(SELECT	nr_seq_reg_preco_qt_proc_nov_w, ie_situacao, cd_estab_destino_p, 
					dt_inicio_vigencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_procedimento, 
					ie_origem_proced, cd_area_procedimento, cd_especialidade, 
					cd_grupo_proc, nr_seq_prestador_novo_w, dt_fim_vigencia,
					ie_origem_protocolo
				from	pls_regra_preco_qtde_proc
				where	nr_sequencia	= nr_seq_reg_preco_qt_proc_ant_w);
				
				open C06;
				loop
				fetch C06 into	
					nr_seq_reg_preco_tx_proc_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C06 */
					begin
					insert	into pls_regra_preco_tx_proc(nr_sequencia, nr_seq_regra, qt_exec_min,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, ie_situacao, qt_exec_max, 
						tx_procedimento, tx_medico, tx_custo_operacional,
						nr_seq_taxa_item, ie_via_acesso)
					(SELECT	nextval('pls_regra_preco_tx_proc_seq'), nr_seq_reg_preco_qt_proc_nov_w, qt_exec_min, 
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, ie_situacao, qt_exec_max, 
						tx_procedimento, tx_medico, tx_custo_operacional,
						nr_seq_taxa_item, ie_via_acesso
					from	pls_regra_preco_tx_proc
					where	nr_sequencia	= nr_seq_reg_preco_tx_proc_ant_w);

					end;
				end loop;
				close C06;
				end;
			end loop;
			close C05;
			
			open C07;
			loop
			fetch C07 into	
				nr_seq_reg_preco_mat_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin
				select	max(nr_seq_contrato)
				into STRICT	nr_seq_contr_ant_w
				from	pls_regra_preco_mat
				where	nr_sequencia		= nr_seq_reg_preco_mat_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_contr_novo_w
				from	pls_contrato
				where	nr_seq_contrato_ant	= nr_seq_contr_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_contr_novo_w	:= nr_seq_contr_ant_w;
				end;
				
				insert	into pls_regra_preco_mat(nr_sequencia, cd_estabelecimento, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_prestador, dt_inicio_vigencia, dt_fim_vigencia,
					tx_ajuste, ie_situacao, vl_negociado,
					tx_ajuste_pfb, tx_ajuste_pmc_neut, tx_ajuste_pmc_pos,
					tx_ajuste_pmc_neg, tx_ajuste_simpro_pfb, tx_ajuste_simpro_pmc,
					ie_origem_preco, ie_tipo_despesa, nr_seq_material_preco,
					tx_ajuste_tab_propria, ie_tipo_tabela, nr_seq_outorgante,
					nr_seq_contrato, tx_ajuste_benef_lib, nr_seq_congenere,
					nr_seq_regra_ant, qt_idade_inicial, qt_idade_final,
                    ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
					ie_saude_ocupacional, nr_seq_tipo_atendimento)
				(SELECT	nextval('pls_regra_preco_mat_seq'), cd_estab_destino_p, dt_atualizacao, 
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_prestador_novo_w, dt_inicio_vigencia, dt_fim_vigencia,
					tx_ajuste, ie_situacao, vl_negociado,
					tx_ajuste_pfb, tx_ajuste_pmc_neut, tx_ajuste_pmc_pos,
					tx_ajuste_pmc_neg, tx_ajuste_simpro_pfb, tx_ajuste_simpro_pmc,
					ie_origem_preco, ie_tipo_despesa, nr_seq_material_preco,
					tx_ajuste_tab_propria, ie_tipo_tabela, nr_seq_outorgante,
					nr_seq_contr_novo_w, tx_ajuste_benef_lib, nr_seq_congenere,
					nr_seq_reg_preco_mat_ant_w, qt_idade_inicial, qt_idade_final,
                    ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
					ie_saude_ocupacional, nr_seq_tipo_atendimento
				from	pls_regra_preco_mat
				where	nr_sequencia	= nr_seq_reg_preco_mat_ant_w);
				end;
			end loop;
			close C07;
			
			open C08;
			loop
			fetch C08 into	
				nr_seq_reg_preco_serv_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin
				select	max(nr_seq_contrato)
				into STRICT	nr_seq_contr_ant_w
				from	pls_regra_preco_servico
				where	nr_sequencia	= nr_seq_reg_preco_serv_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_contr_novo_w
				from	pls_contrato
				where	nr_seq_contrato_ant	= nr_seq_contr_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_contr_novo_w	:= nr_seq_contr_ant_w;
				end;
				
				insert	into pls_regra_preco_servico(nr_sequencia, cd_estabelecimento, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_prestador, dt_inicio_vigencia, dt_fim_vigencia,
					cd_tabela_servico, tx_ajuste, cd_procedimento,
					ie_origem_proced, ie_situacao, cd_area_procedimento,
					cd_especialidade, cd_grupo_proc, vl_negociado,
					ie_tipo_tabela, nr_seq_outorgante, nr_seq_contrato,
					nr_seq_congenere, nr_seq_regra_ant, qt_idade_inicial,
					qt_idade_final, ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
					ie_saude_ocupacional, nr_seq_tipo_atendimento)
				(SELECT nextval('pls_regra_preco_servico_seq'), cd_estab_destino_p, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					nr_seq_prestador_novo_w, dt_inicio_vigencia, dt_fim_vigencia,
					cd_tabela_servico, tx_ajuste, cd_procedimento,
					ie_origem_proced, ie_situacao, cd_area_procedimento,
					cd_especialidade, cd_grupo_proc, vl_negociado,
					ie_tipo_tabela, nr_seq_outorgante, nr_seq_contr_novo_w,
					nr_seq_congenere, nr_seq_reg_preco_serv_ant_w, qt_idade_inicial,
					qt_idade_final, ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
					ie_saude_ocupacional, nr_seq_tipo_atendimento
				from	pls_regra_preco_servico
				where	nr_sequencia	= nr_seq_reg_preco_serv_ant_w);
				end;
			end loop;
			close C08;
			
			open C09;
			loop
			fetch C09 into	
				nr_seq_reg_pr_serv_adic_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C09 */
				begin
				select	max(nr_seq_plano)
				into STRICT	nr_seq_plano_ant_w
				from	pls_regra_preco_serv_adic
				where	nr_sequencia	= nr_seq_reg_pr_serv_adic_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_plano_novo_w
				from	pls_plano
				where	nr_seq_plano_ant	= nr_seq_plano_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_plano_novo_w	:= nr_seq_plano_ant_w;
				end;
				
				insert	into pls_regra_preco_serv_adic(nr_sequencia, cd_estabelecimento, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					ie_situacao, nr_seq_prestador, vl_repasse,
					dt_inicio_vigencia, dt_fim_vigencia, nr_seq_plano)
				(SELECT	nextval('pls_regra_preco_serv_adic_seq'), cd_estab_destino_p, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					ie_situacao, nr_seq_prestador_novo_w, vl_repasse,
					dt_inicio_vigencia, dt_fim_vigencia, nr_seq_plano_novo_w
				from	pls_regra_preco_serv_adic
				where	nr_sequencia	= nr_seq_reg_pr_serv_adic_ant_w);
				end;
			end loop;
			close C09;
			
			open C10;
			loop
			fetch C10 into	
				nr_seq_pct_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C10 */
				begin
				select	nextval('pls_pacote_seq')
				into STRICT	nr_seq_pct_novo_w
				;
				
				insert	into pls_pacote(nr_sequencia, cd_estabelecimento, ie_situacao,
					nr_seq_prestador, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_procedimento,
					ie_origem_proced, ds_observacao, vl_pacote)
				(SELECT	nr_seq_pct_novo_w, cd_estab_destino_p, ie_situacao,
					nr_seq_prestador_novo_w, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_procedimento,
					ie_origem_proced, ds_observacao, vl_pacote
				from	pls_pacote
				where	nr_sequencia	= nr_seq_pct_ant_w);
				
				open C11;
				loop
				fetch C11 into	
					nr_seq_pct_tipo_acd_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C11 */
					begin
					select	max(nr_seq_categoria_acomod),
						max(nr_seq_tipo_acomodacao)
					into STRICT	nr_seq_cat_ant_w,
						nr_seq_tp_acmd_ant_w
					from	pls_pacote_tipo_acomodacao
					where	nr_sequencia	= nr_seq_pct_tipo_acd_ant_w;
					
					begin
					select	nr_sequencia
					into STRICT	nr_seq_cat_novo_w
					from	pls_categoria
					where	nr_seq_categoria_ant	= nr_seq_cat_ant_w
					and	cd_estabelecimento	= cd_estab_destino_p;
					exception
					when others then
						nr_seq_cat_novo_w	:= nr_seq_cat_ant_w;
					end;
					
					begin
					select	nr_sequencia
					into STRICT	nr_seq_tp_acmd_novo_w
					from	pls_tipo_acomodacao
					where	nr_seq_tipo_acomod_ant	= nr_seq_tp_acmd_ant_w
					and	cd_estabelecimento	= cd_estab_destino_p;
					exception
					when others then
						nr_seq_tp_acmd_novo_w	:= nr_seq_tp_acmd_ant_w;
					end;
					
					insert	into pls_pacote_tipo_acomodacao(nr_sequencia, nr_seq_pacote, cd_estabelecimento,
						dt_inicio_vigencia, ie_situacao, dt_atualizacao,
						nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						dt_fim_vigencia, nr_seq_categoria_acomod, nr_seq_tipo_acomodacao,
						vl_pacote, vl_custo_operacional, vl_materiais,
						vl_medico, vl_auxiliares, vl_anestesista)
					(SELECT	nextval('pls_pacote_tipo_acomodacao_seq'), nr_seq_pct_novo_w, cd_estab_destino_p,
						dt_inicio_vigencia, ie_situacao, dt_atualizacao,
						nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						dt_fim_vigencia, nr_seq_cat_novo_w, nr_seq_tp_acmd_novo_w,
						vl_pacote, vl_custo_operacional, vl_materiais,
						vl_medico, vl_auxiliares, vl_anestesista
					from	pls_pacote_tipo_acomodacao
					where	nr_sequencia	= nr_seq_pct_tipo_acd_ant_w);
					end;
				end loop;
				close C11;
				
				open C12;
				loop
				fetch C12 into	
					nr_seq_pct_proc_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C12 */
					begin
					insert	into pls_pacote_procedimento(nr_sequencia, nr_seq_pacote, ie_situacao,
						ie_estrutura, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, ie_tipo_guia,
						cd_procedimento, ie_origem_proced, cd_area_procedimento,
						cd_especialidade, cd_grupo_proc)
					(SELECT	nextval('pls_pacote_procedimento_seq'), nr_seq_pct_novo_w, ie_situacao,
						ie_estrutura, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, ie_tipo_guia,
						cd_procedimento, ie_origem_proced, cd_area_procedimento,
						cd_especialidade, cd_grupo_proc
					from	pls_pacote_procedimento
					where	nr_sequencia	= nr_seq_pct_proc_ant_w);
					end;
				end loop;
				close C12;
				
				open C13;
				loop
				fetch C13 into	
					nr_seq_pct_mat_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C13 */
					begin
					insert	into pls_pacote_material(nr_sequencia, nr_seq_pacote, ie_situacao,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, ie_tipo_guia, nr_seq_material)
					(SELECT	nextval('pls_pacote_material_seq'), nr_seq_pct_novo_w, ie_situacao,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, ie_tipo_guia, nr_seq_material
					from	pls_pacote_material
					where	nr_sequencia	= nr_seq_pct_mat_ant_w);
					end;
				end loop;
				close C13;
				end;
			end loop;
			close C10;
			
			open C14;
			loop
			fetch C14 into	
				nr_seq_prest_area_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C14 */
				begin
				select	max(nr_seq_regiao)
				into STRICT	nr_seq_regiao_ant_w
				from	pls_prestador_area
				where	nr_sequencia	= nr_seq_prest_area_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_regiao_novo_w
				from	pls_regiao
				where	nr_seq_regiao_ant	= nr_seq_regiao_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_regiao_novo_w	:= nr_seq_regiao_ant_w;
				end;
				
				insert	into pls_prestador_area(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador,
					sg_estado, cd_municipio_ibge, nr_seq_regiao)
				(SELECT	nextval('pls_prestador_area_seq'), dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador_novo_w,
					sg_estado, cd_municipio_ibge, nr_seq_regiao_novo_w
				from	pls_prestador_area
				where	nr_sequencia	= nr_seq_prest_area_ant_w);
				end;
			end loop;
			close C14;
			
			open C15;
			loop
			fetch C15 into	
				nr_seq_prest_plano_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C15 */
				begin
				select	max(nr_seq_plano)
				into STRICT	nr_seq_plano_ant_w
				from	pls_prestador_plano
				where	nr_sequencia	= nr_seq_prest_plano_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_plano_novo_w
				from	pls_plano
				where	nr_seq_plano_ant	= nr_seq_plano_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_plano_novo_w	:= nr_seq_plano_ant_w;
				end;
				
				insert	into pls_prestador_plano(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_prestador,
					nr_seq_plano,
					ie_situacao,
					dt_inicio_vigencia,
					dt_fim_vigencia)
				(SELECT	 nextval('pls_prestador_plano_seq'),
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_prestador_novo_w,
					nr_seq_plano_novo_w,
					ie_situacao,
					dt_inicio_vigencia,
					dt_fim_vigencia
				from	pls_prestador_plano
				where	nr_sequencia	= nr_seq_prest_plano_ant_w);	
				end;
			end loop;
			close C15;
			
			open C16;
			loop
			fetch C16 into	
				nr_seq_prest_medico_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C16 */
				begin
				select	nextval('pls_prestador_medico_seq')
				into STRICT	nr_seq_prest_medico_novo_w
				;
				
				select	max(nr_seq_tipo_prestador)
				into STRICT	nr_seq_tp_prest_ant_w
				from	pls_prestador_medico
				where	nr_sequencia	= nr_seq_prest_medico_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_tp_prest_novo_w
				from	pls_tipo_prestador
				where	nr_seq_anterior        	= nr_seq_tp_prest_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_tp_prest_novo_w	:= nr_seq_tp_prest_ant_w;
				end;
				
				insert	into pls_prestador_medico(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador,
					cd_medico, ie_situacao, ie_guia_medico,
					ie_tipo_complemento, ie_tipo_endereco, ie_tipo_vinculo,
					nr_seq_tipo_prestador, nr_seq_prestador_pgto, dt_inclusao,
					dt_exclusao)
				(SELECT	nr_seq_prest_medico_novo_w, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_prestador_novo_w,
					cd_medico, ie_situacao, ie_guia_medico,
					ie_tipo_complemento, ie_tipo_endereco, ie_tipo_vinculo,
					nr_seq_tp_prest_novo_w, nr_seq_prestador_novo_w, dt_inclusao,
					dt_exclusao
				from	pls_prestador_medico
				where	nr_sequencia	= nr_seq_prest_medico_ant_w);
				
				open C17;
				loop
				fetch C17 into	
					nr_seq_prest_tributo_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C17 */
					begin
					insert	into pls_prestador_tributo(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_prestador,
						nr_seq_prestador_med,
						cd_tributo,
						vl_tributo,
						dt_referencia,
						vl_base_calculo,
						ds_observacao,
						ds_emp_retencao)
					(SELECT	nextval('pls_prestador_tributo_seq'),
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_prestador_novo_w,
						nr_seq_prest_medico_novo_w,
						cd_tributo,
						vl_tributo,
						dt_referencia,
						vl_base_calculo,
						ds_observacao,
						ds_emp_retencao
					from	pls_prestador_tributo
					where	nr_sequencia	= nr_seq_prest_tributo_ant_w);
					end;
				end loop;
				close C17;
				
				open C20;
				loop
				fetch C20 into	
					nr_seq_prest_prof_pgto_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C20 */
					begin	
					insert	into pls_prestador_prof_pgto(nr_sequencia,
						nr_seq_profissional,
						ie_situacao,
						nr_seq_prestador_pgto,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						dt_inicio_vigencia_ref,
						dt_fim_vigencia_ref)
					(SELECT nextval('pls_prestador_prof_pgto_seq'),
						nr_seq_prest_medico_novo_w,
						ie_situacao,
						nr_seq_prestador_novo_w,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						dt_inicio_vigencia_ref,
						dt_fim_vigencia_ref
					from	pls_prestador_prof_pgto
					where	nr_sequencia	= nr_seq_prest_prof_pgto_ant_w);
					end;
				end loop;
				close C20;
			
				end;
			end loop;
			close C16;

			open C18;
			loop
			fetch C18 into	
				nr_seq_endereco_guia_med_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C18 */
				begin
				insert	into pls_endereco_guia_medico(nr_sequencia,
					cd_pessoa_fisica,
					nr_seq_prestador,
					ie_tipo_endereco,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_municipio_ibge)
				(SELECT	nextval('pls_endereco_guia_medico_seq'),
					cd_pessoa_fisica,
					nr_seq_prestador_novo_w,
					ie_tipo_endereco,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_municipio_ibge
				from	pls_endereco_guia_medico
				where	nr_sequencia	= nr_seq_endereco_guia_med_ant_w);
				
				end;
			end loop;
			close C18;
			
			open C19;
			loop
			fetch C19 into	
				nr_seq_prest_med_espec_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C19 */
				begin
				insert	into pls_prestador_med_espec(nr_sequencia,
					nr_seq_prestador,
					cd_pessoa_fisica,
					cd_especialidade,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_inicio_vigencia,
					dt_fim_vigencia)
				(SELECT	nextval('pls_prestador_med_espec_seq'),
					nr_seq_prestador_novo_w,
					cd_pessoa_fisica, 
					cd_especialidade,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_inicio_vigencia,
					dt_fim_vigencia
				from	pls_prestador_med_espec
				where	nr_sequencia	= nr_seq_prest_med_espec_ant_w);
				end;
			end loop;
			close C19;
			
			open C21;
			loop
			fetch C21 into	
				nr_seq_prest_pagto_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C21 */
				begin
				insert	into pls_prestador_pagto(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_prestador,
					cd_condicao_pagamento,
					ie_forma_pagto,
					qt_dia_vencimento,
					ie_geracao_nota_titulo)
				(SELECT	nextval('pls_prestador_pagto_seq'),
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_prestador_novo_w,
					cd_condicao_pagamento,
					ie_forma_pagto,
					qt_dia_vencimento,
					ie_geracao_nota_titulo
				from	pls_prestador_pagto
				where	nr_sequencia	= nr_seq_prest_pagto_ant_w);
				end;
			end loop;
			close C21;
			
			open C22;
			loop
			fetch C22 into	
				nr_seq_prest_tipo_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C22 */
				begin
				select	max(nr_seq_tipo)
				into STRICT	nr_seq_tp_prest_ant_w
				from	pls_prestador_tipo
				where	nr_sequencia		= nr_seq_prest_tipo_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_tp_prest_novo_w
				from	pls_tipo_prestador
				where	nr_seq_anterior        	= nr_seq_tp_prest_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_tp_prest_novo_w	:= nr_seq_tp_prest_ant_w;
				end;
				
				insert	into pls_prestador_tipo(nr_sequencia,
					nr_seq_prestador,
					nr_seq_tipo,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_ptu,
					dt_inicio_vigencia,
					dt_fim_vigencia)
				(SELECT	nextval('pls_prestador_tipo_seq'),
					nr_seq_prestador_novo_w,
					nr_seq_tp_prest_novo_w,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec, 
					nm_usuario_nrec,
					ie_ptu,
					dt_inicio_vigencia,
					dt_fim_vigencia
				from	pls_prestador_tipo
				where	nr_sequencia	= nr_seq_prest_tipo_ant_w);
				end;
			end loop;
			close C22;
			
			open C23;
			loop
			fetch C23 into	
				nr_seq_usuario_web_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C23 */
				begin
				select	nextval('pls_usuario_web_seq')
				into STRICT	nr_seq_usuario_web_novo_w
				;
				
				insert	into pls_usuario_web(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_usuario_web,
					cd_pessoa_fisica_resp,
					ds_senha,
					ds_email,
					nr_seq_prestador,
					ie_contas_medicas_on_line,
					ie_upload_contas_medicas,
					ie_solicitacao_autorizacao,
					ds_observacao,
					ie_situacao,
					cd_estabelecimento)
				(SELECT	nr_seq_usuario_web_novo_w,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nm_usuario_web,
					cd_pessoa_fisica_resp,
					ds_senha,
					ds_email, 
					nr_seq_prestador_novo_w,
					ie_contas_medicas_on_line,
					ie_upload_contas_medicas,
					ie_solicitacao_autorizacao,
					ds_observacao,
					ie_situacao,
					cd_estab_destino_p
				from	pls_usuario_web
				where	nr_sequencia	= nr_seq_usuario_web_ant_w);
					
				open C24;
				loop
				fetch C24 into	
					nr_seq_usu_web_envio_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C24 */
					begin
					insert	into pls_usuario_web_envio(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_usuario_web,
						dt_envio,
						ds_destino,
						ds_observacao)
					(SELECT	nextval('pls_usuario_web_envio_seq'),
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_usuario_web_novo_w,
						dt_envio,
						ds_destino,
						ds_observacao
					from	pls_usuario_web_envio
					where	nr_sequencia	= nr_seq_usu_web_envio_ant_w);
					end;
				end loop;
				close C24;
				
				end;
			end loop;
			close C23;
			
			open C25;
			loop
			fetch C25 into	
				nr_seq_ger_dados_proc_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C25 */
				begin
				select	max(nr_seq_grau_partic)
				into STRICT	nr_seq_grau_part_ant_w
				from	pls_gerar_dados_proc
				where	nr_sequencia		= nr_seq_ger_dados_proc_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_grau_part_novo_w
				from	pls_grau_participacao
				where	nr_seq_anterior        	= nr_seq_grau_part_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_grau_part_novo_w	:= nr_seq_grau_part_ant_w;
				end;
				
				insert	into pls_gerar_dados_proc(nr_sequencia, nr_seq_prestador, cd_estabelecimento,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, cd_procedimento, ie_origem_proced,
					cd_area_procedimento, cd_especialidade, cd_grupo_proc,
					ie_tipo_guia, cd_medico_executor, nr_seq_grau_partic,
					ie_estrutura, ie_situacao)
				(SELECT	nextval('pls_gerar_dados_proc_seq'), nr_seq_prestador_novo_w, cd_estab_destino_p,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, cd_procedimento, ie_origem_proced,
					cd_area_procedimento, cd_especialidade, cd_grupo_proc,
					ie_tipo_guia, cd_medico_executor, nr_seq_grau_part_novo_w,
					ie_estrutura, ie_situacao
				from	pls_gerar_dados_proc
				where	nr_sequencia	= nr_seq_ger_dados_proc_ant_w);
				end;
			end loop;
			close C25;
			
			open C26;
			loop
			fetch C26 into	
				nr_seq_conver_proc_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C26 */
				begin
				insert	into pls_conversao_proc(nr_sequencia, cd_estabelecimento, cd_proc_conversao,
					ie_origem_conversao, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_procedimento,
					ie_origem_proced, cd_area_procedimento, cd_especialidade,
					cd_grupo_proc, nr_seq_prestador, ie_situacao,
					nr_seq_congenere, nr_seq_anterior, cd_proc_envio, ds_proc_envio, nr_seq_grupo_contrato)
				(SELECT	nextval('pls_conversao_proc_seq'), cd_estabelecimento, cd_proc_conversao,
					ie_origem_conversao, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, cd_procedimento,
					ie_origem_proced, cd_area_procedimento, cd_estab_destino_p,
					cd_grupo_proc, nr_seq_prestador_novo_w, ie_situacao, 
					nr_seq_congenere, nr_seq_conver_proc_ant_w, cd_proc_envio, ds_proc_envio, nr_seq_grupo_contrato
				from	pls_conversao_proc
				where	nr_sequencia	= nr_seq_conver_proc_ant_w);
				end;
			end loop;
			close C26;
			
			open C27;
			loop
			fetch C27 into	
				nr_seq_reg_qtde_proc_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C27 */
				begin
				insert	into pls_regra_qtde_proc(nr_sequencia, ie_situacao, qt_permitida,
					nr_seq_prestador, ie_tipo_quantidade, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					cd_procedimento, ie_origem_proced, cd_area_procedimento,
					cd_especialidade, cd_grupo_proc, cd_estabelecimento,
					ie_evento, ie_tipo_guia, qt_tipo_quantidade,
					ie_tipo_atendimento, nr_seq_anterior, dt_inicio_vigencia,
					dt_fim_vigencia)
				(SELECT	nextval('pls_regra_qtde_proc_seq'), ie_situacao, qt_permitida,
					nr_seq_prestador_novo_w, ie_tipo_quantidade, dt_atualizacao,
					nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					cd_procedimento, ie_origem_proced, cd_area_procedimento,
					cd_especialidade, cd_grupo_proc, cd_estab_destino_p,
					ie_evento, ie_tipo_guia, qt_tipo_quantidade,
					ie_tipo_atendimento, nr_seq_reg_qtde_proc_ant_w, dt_inicio_vigencia,
					dt_fim_vigencia
				from	pls_regra_qtde_proc
				where	nr_sequencia	= nr_seq_reg_qtde_proc_ant_w);
				end;
			end loop;
			close C27;
			
			open C28;
			loop
			fetch C28 into	
				nr_seq_reg_prest_int_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C28 */
				begin
				insert	into pls_regra_prest_integracao(nr_sequencia,
					nr_seq_prestador,
					ie_situacao,
					dt_limite_integracao,
					ie_referencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				(SELECT	nextval('pls_regra_prest_integracao_seq'),
					nr_seq_prestador_novo_w,
					ie_situacao,
					dt_limite_integracao,
					ie_referencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec
				from	pls_regra_prest_integracao
				where	nr_sequencia	= nr_seq_reg_prest_int_ant_w);
				end;
			end loop;
			close C28;
			
			open C29;
			loop
			fetch C29 into	
				nr_seq_credenc_hist_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C29 */
				begin
				select	max(nr_seq_motivo_descred)
				into STRICT	nr_seq_mtv_descred_ant_w
				from	pls_credenciamento_hist
				where	nr_sequencia		= nr_seq_credenc_hist_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_mtv_descred_novo_w
				from	pls_motivo_descred
				where	nr_seq_anterior		= nr_seq_mtv_descred_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_mtv_descred_novo_w	:= nr_seq_mtv_descred_ant_w;
				end;
				
				insert	into pls_credenciamento_hist(nr_sequencia,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_prestador,
					cd_pessoa_fisica,
					ie_tipo_historico,
					dt_historico,
					nr_seq_motivo_descred)
				(SELECT	nextval('pls_credenciamento_hist_seq'),
					cd_estab_destino_p,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_prestador_novo_w,
					cd_pessoa_fisica,
					ie_tipo_historico,
					dt_historico,
					nr_seq_mtv_descred_novo_w
				from	pls_credenciamento_hist
				where	nr_sequencia	= nr_seq_credenc_hist_ant_w);
				end;
			end loop;
			close C29;
			
			open C30;
			loop
			fetch C30 into	
				nr_seq_prest_atend_cat_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C30 */
				begin	
				select	max(nr_seq_segurado),
					max(nr_seq_quadro_clinico)
				into STRICT	nr_seq_seg_ant_w,
					nr_seq_qdro_cl_ant_w
				from	pls_prestador_atend_cat
				where	nr_sequencia		= nr_seq_prest_atend_cat_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_qdro_cl_novo_w
				from	pls_quadro_clinico
				where	nr_seq_anterior		= nr_seq_qdro_cl_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_qdro_cl_novo_w	:= nr_seq_qdro_cl_ant_w;
				end;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_seg_novo_w
				from	pls_segurado
				where	nr_seq_contrato_ant	= nr_seq_seg_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_seg_novo_w	:= nr_seq_seg_ant_w;
				end;
				
				insert	into pls_prestador_atend_cat(nr_sequencia, nr_seq_prestador, nr_seq_segurado,
					dt_atendimento, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, dt_alta_prevista,
					dt_alta, nr_atendimento, nr_cat,
					ie_tipo_atendimento, ie_clinica, ds_observacao,
					cd_motivo_alta, ds_unidade_basica, ds_unidade_compl,
					nr_seq_quadro_clinico, nr_seq_queixa, dt_proximo_atendimento,
					cd_guia)
				(SELECT	nextval('pls_prestador_atend_cat_seq'), nr_seq_prestador_novo_w, nr_seq_seg_novo_w,
					dt_atendimento, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, dt_alta_prevista,
					dt_alta, nr_atendimento, nr_cat,
					ie_tipo_atendimento, ie_clinica, ds_observacao,
					cd_motivo_alta, ds_unidade_basica, ds_unidade_compl,
					nr_seq_qdro_cl_novo_w, nr_seq_queixa, dt_proximo_atendimento,
					cd_guia
				from	pls_prestador_atend_cat
				where	nr_sequencia	= nr_seq_prest_atend_cat_ant_w);
				end;
			end loop;
			close C30;
			
			open C31;
			loop
			fetch C31 into	
				nr_seq_prest_tipo_doc_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C31 */
				begin
				
				select	nextval('pls_prestador_tipo_doc_seq')
				into STRICT	nr_seq_prest_tipo_doc_novo_w
				;
				
				select	max(nr_seq_tipo_documento)
				into STRICT	nr_seq_tipo_doc_ant_w
				from	pls_prestador_tipo_doc
				where	nr_sequencia		= nr_seq_prest_tipo_doc_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_tipo_doc_novo_w
				from	pls_tipo_documento
				where	nr_seq_anterior		= nr_seq_tipo_doc_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_tipo_doc_novo_w	:= nr_seq_tipo_doc_ant_w;
				end;
				
				insert	into pls_prestador_tipo_doc(nr_sequencia,
					nr_seq_prestador,
					nr_seq_tipo_documento,
					dt_inicio_vigencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				(SELECT	nr_seq_prest_tipo_doc_novo_w,
					nr_seq_prestador_novo_w,
					nr_seq_tipo_doc_novo_w,
					dt_inicio_vigencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec
				from	pls_prestador_tipo_doc
				where	nr_sequencia	= nr_seq_prest_tipo_doc_ant_w);
				
				open C32;
				loop
				fetch C32 into	
					nr_seq_prest_documento_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C32 */
					begin
					insert	into pls_prestador_documento(nr_sequencia,
						nr_seq_prest_tipo,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_arquivo,
						dt_documento)
					(SELECT	nextval('pls_prestador_documento_seq'),
						nr_seq_prest_tipo_doc_novo_w,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ds_arquivo,
						dt_documento
					from	pls_prestador_documento
					where	nr_sequencia	= nr_seq_prest_documento_ant_w);
					
					end;
				end loop;
				close C32;
				end;
			end loop;
			close C31;
			
			open C33;
			loop
			fetch C33 into	
				nr_seq_prest_orientacao_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C33 */
				begin
				select	max(nr_seq_plano)
				into STRICT	nr_seq_plano_ant_w
				from	pls_prestador_orientacao
				where	nr_sequencia		= nr_seq_prest_orientacao_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_plano_novo_w
				from	pls_plano
				where	nr_seq_plano_ant	= nr_seq_plano_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_plano_novo_w	:= nr_seq_plano_ant_w;
				end;
				
				insert	into pls_prestador_orientacao(nr_sequencia,
					nr_seq_prestador,
					ie_tipo_documento,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_plano,
					ds_titulo,
					ds_documento)
				(SELECT	nextval('pls_prestador_orientacao_seq'),
					nr_seq_prestador_novo_w,
					ie_tipo_documento,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_plano_novo_w,
					ds_titulo,
					null
				from	pls_prestador_orientacao
				where	nr_sequencia	= nr_seq_prest_orientacao_ant_w);
				end;
			end loop;
			close C33;
			
			open C34;
			loop
			fetch C34 into	
				nr_seq_prest_historico_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C34 */
				begin
				insert	into pls_prestador_historico(nr_sequencia,
					dt_historico,
					nm_usuario_historico,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_historico,
					dt_liberacao,
					nm_usuario_liberacao,
					nr_seq_prestador)
				(SELECT	nextval('pls_prestador_historico_seq'),
					dt_historico,
					nm_usuario_historico,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_historico,
					dt_liberacao,
					nm_usuario_liberacao,
					nr_seq_prestador_novo_w
				from	pls_prestador_historico
				where	nr_sequencia	= nr_seq_prest_historico_ant_w);
				end;
			end loop;
			close C34;

			
			open C35;
			loop
			fetch C35 into	
				nr_seq_fornec_lote_rep_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C35 */
				begin
				select	nextval('pls_fornec_lote_repasse_seq')
				into STRICT	nr_seq_fornec_lote_rep_novo_w
				;
				
				select	max(nr_seq_sca)
				into STRICT	nr_seq_plano_ant_w
				from	pls_fornec_lote_repasse
				where	nr_sequencia		= nr_seq_fornec_lote_rep_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_plano_novo_w
				from	pls_plano
				where	nr_seq_plano_ant	= nr_seq_plano_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_plano_novo_w	:= nr_seq_plano_ant_w;
				end;
				
				insert	into pls_fornec_lote_repasse(nr_sequencia,
					dt_movimentacao,
					cd_estabelecimento,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_titulo,
					nr_seq_prestador,
					nr_seq_sca)
				(SELECT	nr_seq_fornec_lote_rep_novo_w,
					dt_movimentacao,
					cd_estab_destino_p,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_titulo,
					nr_seq_prestador_novo_w,
					nr_seq_plano_novo_w
				from	pls_fornec_lote_repasse
				where	nr_sequencia	= nr_seq_fornec_lote_rep_ant_w);
				
				open C36;
				loop
				fetch C36 into	
					nr_seq_fornec_rep_ant_w;
				EXIT WHEN NOT FOUND; /* apply on C36 */
					begin
					insert	into pls_fornec_repasse(nr_sequencia,
						nr_seq_lote,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_vinculo_sca,
						vl_repasse)
					(SELECT	nextval('pls_fornec_repasse_seq'),
						nr_seq_fornec_lote_rep_novo_w,
						cd_estab_destino_p,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_vinculo_sca,
						vl_repasse
					from	pls_fornec_repasse
					where	nr_sequencia	= nr_seq_fornec_rep_ant_w);
					end;
				end loop;
				close C36;
				end;
			end loop;
			close C35;
			
			open C37;
			loop
			fetch C37 into	
				nr_seq_plano_fornec_ant_w;
			EXIT WHEN NOT FOUND; /* apply on C37 */
				begin
				select	max(nr_seq_plano)
				into STRICT	nr_seq_plano_ant_w
				from	pls_plano_fornecedor
				where	nr_sequencia		= nr_seq_plano_fornec_ant_w;
				
				begin
				select	nr_sequencia
				into STRICT	nr_seq_plano_novo_w
				from	pls_plano
				where	nr_seq_plano_ant	= nr_seq_plano_ant_w
				and	cd_estabelecimento	= cd_estab_destino_p;
				exception
				when others then
					nr_seq_plano_novo_w	:= nr_seq_plano_ant_w;
				end;
				
				insert	into pls_plano_fornecedor(nr_sequencia,
					nr_seq_plano,
					cd_estabelecimento,
					nr_seq_prestador,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec)
				(SELECT	nextval('pls_plano_fornecedor_seq'),
					nr_seq_plano_novo_w,
					cd_estab_destino_p,
					nr_seq_prestador_novo_w,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec
				from	pls_plano_fornecedor
				where	nr_sequencia	= nr_seq_plano_fornec_ant_w);
				end;
			end loop;
			close C37;
		end if;
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_prestador ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

