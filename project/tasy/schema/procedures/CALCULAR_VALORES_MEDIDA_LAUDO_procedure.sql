-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_valores_medida_laudo ( nr_seq_laudo_p bigint, nm_usuario_p text, nr_seq_medida_p bigint default null, nr_seq_peca_medida_p bigint default null) AS $body$
DECLARE


nr_sequencia_w		bigint;
nr_seq_medida_w		bigint;
ds_formula_w		varchar(255);
ds_medida_w		varchar(255);
qt_decimais_w		integer;

ie_formula_ok_w		smallint;
ds_formula_aux_w	varchar(255);
ie_tamanho_w		smallint;
i			smallint;

nr_medida_w		bigint;

qt_medida_w		double precision;
qt_medida_ww		varchar(20);

vl_resultado_w		double precision;

nr_seq_result_w		bigint;
ds_resultado_w		laudo_paciente_medida.ds_valor_medida%TYPE;
nr_seq_medida_cond_w	bigint;
ds_resultado_cond_w	varchar(500);

qt_existe_w		bigint;
ie_existe_w		varchar(1);

ds_result_minimo_w	varchar(100);
ds_result_maximo_w	varchar(100);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_medida,
		b.ds_medida,
		replace(b.ds_formula, ',', '.'),
		coalesce(b.qt_decimais,0)
	from	medida_exame_laudo b,
		laudo_paciente_medida a
	where	a.nr_seq_medida	= b.nr_sequencia
	  and	((coalesce(a.nr_seq_peca_medida::text, '') = '') or (coalesce(a.nr_seq_peca_medida, 0) = coalesce(nr_seq_peca_medida_p,coalesce(a.nr_seq_peca_medida, 0))))
	  and	a.nr_seq_laudo	= nr_seq_laudo_p	
	  and	(b.ds_formula IS NOT NULL AND b.ds_formula::text <> '');
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_medida
	from	medida_exame_laudo b,
		laudo_paciente_medida a
	where	a.nr_seq_medida	= b.nr_sequencia
	  and	a.nr_seq_laudo	= nr_seq_laudo_p
	  and	((coalesce(a.nr_seq_peca_medida::text, '') = '') or (coalesce(a.nr_seq_peca_medida, 0) = coalesce(nr_seq_peca_medida_p,coalesce(a.nr_seq_peca_medida, 0))))
	  and ((coalesce(b.nr_seq_medida_exame_laudo::text, '') = '') or (b.nr_seq_medida_exame_laudo  = coalesce(nr_seq_medida_p,b.nr_seq_medida_exame_laudo)));
	
c03 CURSOR FOR
	SELECT	nr_sequencia,
		ds_resultado
	from	medida_exame_result
	where	nr_seq_medida	= nr_seq_medida_w;
	
C04 CURSOR FOR
	SELECT	nr_seq_medida,
		ds_resultado,
		ds_result_minimo,
		ds_result_maximo
	from	medida_exame_result_cond
	where	nr_seq_result	= nr_seq_result_w;
	

BEGIN

open C01;
loop
	fetch C01 into	
			nr_sequencia_w,
			nr_seq_medida_w,
			ds_medida_w,
			ds_formula_w,
			qt_decimais_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

	ds_formula_w	:= replace(ds_formula_w, ';', ',');
	ie_formula_ok_w	:= position('@' in ds_formula_w);
	

	if (ie_formula_ok_w > 0) then
	
		ds_formula_aux_w 	:= ds_formula_w;
		while(position('@' in ds_formula_aux_w) > 0) loop
			ie_formula_ok_w := position('@' in ds_formula_aux_w);
			ie_tamanho_w := 0;

			for i in ie_formula_ok_w..length(ds_formula_aux_w) + 1 loop
				if	((substr(ds_formula_aux_w, i, 1) in (' ','/','*','+','-','(',')','@',',')) or (i = length(ds_formula_aux_w) + 1)) and
					(i > (ie_formula_ok_w + 1)) then
					ie_tamanho_w := i;
					exit;
				end if;
			end loop;

			RAISE NOTICE '%', substr(ds_formula_aux_w, ie_formula_ok_w + 1,
					ie_tamanho_w - (ie_formula_ok_w + 1));

			begin
			
			nr_medida_w	:= to_number(substr(ds_formula_aux_w, ie_formula_ok_w + 1,
					ie_tamanho_w - (ie_formula_ok_w + 1)));
			exception
				when others then
				
					begin
					nr_medida_w	:= to_number(replace(substr(ds_formula_aux_w,
						ie_formula_ok_w + 1, ie_tamanho_w - (ie_formula_ok_w +  1)),',','.'));
					exception
						when others then
						nr_medida_w	:= to_number(replace(substr(ds_formula_aux_w,
								ie_formula_ok_w + 1, ie_tamanho_w - (ie_formula_ok_w +  1)),'.',','));
						end;
					
			end;

			select	coalesce(max(qt_medida),null)
			into STRICT	qt_medida_w
			from	laudo_paciente_medida a
			where	nr_seq_laudo	= nr_seq_laudo_p
			  and	nr_seq_medida	= nr_medida_w
			  and	((coalesce(a.nr_seq_peca_medida::text, '') = '') or (coalesce(a.nr_seq_peca_medida, 0) = coalesce(nr_seq_peca_medida_p,coalesce(a.nr_seq_peca_medida, 0))));
			

			qt_medida_ww		:= replace(qt_medida_w,',','.');

/*			if 	(qt_medida_w is not null) then */

				ds_formula_aux_w := replace((replace(ds_formula_aux_w, '@' || nr_medida_w, qt_medida_ww)),' ',null);
				ds_formula_w 	 := ds_formula_aux_w;
/*			else
				
			end if; */
		end loop;
	end if;

	ie_formula_ok_w := position('@' in ds_formula_w);
	if (ie_formula_ok_w = 0) then
		if (position('SC' in upper(ds_formula_w)) > 0) then
			ds_formula_w	:= replace(upper(ds_formula_w),'SC','obter_superficie_corporea');
		end if;
		
		if (position('IGD' in upper(ds_formula_w)) > 0) then
			ds_formula_w	:= replace(upper(ds_formula_w),'IGD','obter_dias_idade_gestacional(' || nr_seq_laudo_p ||',0)');
		end if;

		if (position('IGS' in upper(ds_formula_w)) > 0) then
			ds_formula_w	:= replace(upper(ds_formula_w),'IGS','obter_dias_idade_gestacional(' || nr_seq_laudo_p ||',1)');
		end if;		
		
		i := position('MA(' in upper(ds_formula_w));
		if (i > 0) then
			ds_formula_aux_w:= substr(ds_formula_w,i + 3,length(ds_formula_w)-i);
			ds_formula_w 	:= substr(ds_formula_w,1,i - 1) || 'obter_media_aritmetica(' || chr(39) ||
					   substr(ds_formula_aux_w,1,position(')' in ds_formula_aux_w) - 1) || chr(39) || ',0' ||
					   substr(ds_formula_aux_w,position(')' in ds_formula_aux_w),length(ds_formula_aux_w));
		end if;
		i := position('MASEMZERO(' in upper(ds_formula_w));
		if (i > 0) then
			ds_formula_aux_w:= substr(ds_formula_w,i + 10,length(ds_formula_w)-i);
			ds_formula_w 	:= substr(ds_formula_w,1,i - 1) || 'obter_media_aritmetica(' || chr(39) ||
					   substr(ds_formula_aux_w,1,position(')' in ds_formula_aux_w) - 1) || chr(39) || ',1' ||
					   substr(ds_formula_aux_w,position(')' in ds_formula_aux_w),length(ds_formula_aux_w));
		end if;

		vl_resultado_w := obter_valor_dinamico_real('select ' || ds_formula_w || ' from dual', 'S', vl_resultado_w);

		if (coalesce(vl_resultado_w::text, '') = '') or (vl_resultado_w = 0) then
			vl_resultado_w := obter_valor_dinamico_real('select ' || replace(ds_formula_w, ',', '.') || ' from dual', 'S', vl_resultado_w);
		end if;

		--insert into donhini (ds) values (round(vl_resultado_w,2));
        if (coalesce(qt_decimais_w::text, '') = '' or qt_decimais_w = 0) then
            update laudo_paciente_medida
            set	qt_medida		= vl_resultado_w,
                dt_atualizacao		= clock_timestamp(),
                nm_usuario		= nm_usuario_p
            where nr_sequencia		= nr_sequencia_w;
        else
			update laudo_paciente_medida
			set	qt_medida		= round(vl_resultado_w,qt_decimais_w),
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where nr_sequencia		= nr_sequencia_w;
        end if;
	end if;

end loop;
close C01;

open C02;
loop
fetch C02 into	
	nr_sequencia_w,
	nr_seq_medida_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	ds_resultado_w	:= null;
	open C03;
	loop
	fetch C03 into	
		nr_seq_result_w,
		ds_resultado_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		ie_existe_w	:= 'N';
		open C04;
		loop
		fetch C04 into	
			nr_seq_medida_cond_w,
			ds_resultado_cond_w,
			ds_result_minimo_w,
			ds_result_maximo_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			ie_existe_w	:= 'S';
			if (ds_result_minimo_w IS NOT NULL AND ds_result_minimo_w::text <> '') and (ds_result_maximo_w IS NOT NULL AND ds_result_maximo_w::text <> '') then
				select	count(*)
				into STRICT	qt_existe_w
				from	laudo_paciente_medida a
				where	nr_seq_medida	= nr_seq_medida_cond_w
				and	nr_seq_laudo	= nr_seq_laudo_p
				and	qt_medida between ds_result_minimo_w and ds_result_maximo_w
				and	((coalesce(a.nr_seq_peca_medida::text, '') = '') or (coalesce(a.nr_seq_peca_medida, 0) = coalesce(nr_seq_peca_medida_p,coalesce(a.nr_seq_peca_medida, 0))));
			else					
				select	count(*)
				into STRICT	qt_existe_w
				from	laudo_paciente_medida a
				where	nr_seq_medida	= nr_seq_medida_cond_w
				and	nr_seq_laudo	= nr_seq_laudo_p
				and	coalesce(to_char(qt_medida),ds_valor_medida)	= ds_resultado_cond_w
				and	((coalesce(a.nr_seq_peca_medida::text, '') = '') or (coalesce(a.nr_seq_peca_medida, 0) = coalesce(nr_seq_peca_medida_p,coalesce(a.nr_seq_peca_medida, 0))));
			end if;
			
			if (qt_existe_w = 0) then
				begin
				ie_existe_w	:= 'N';
				ds_resultado_w	:= null;
				exit;
				end;
			end if;
			end;
		end loop;
		close C04;
		if (ie_existe_w = 'S') then
			exit;
		else
			ds_resultado_w	:= null;
		end if;
		end;
	end loop;
	close C03;
	
	if (ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') then
		begin
		begin
			update laudo_paciente_medida
			set	qt_medida		= ds_resultado_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where nr_sequencia		= nr_sequencia_w;
		exception
		when others then
			update laudo_paciente_medida
			set	ds_valor_medida		= ds_resultado_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where nr_sequencia		= nr_sequencia_w;
		end;
		end;
	end if;
	end;
end loop;
close C02;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_valores_medida_laudo ( nr_seq_laudo_p bigint, nm_usuario_p text, nr_seq_medida_p bigint default null, nr_seq_peca_medida_p bigint default null) FROM PUBLIC;

