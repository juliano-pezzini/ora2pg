-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_imp_inclusao_divicom ( nr_seq_lote_inclusao_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_lote_inclusao_w		bigint;
ds_conteudo_w			varchar(4000);
cd_cartao_identificacao_w	varchar(17);
nm_pessoa_fisica_w		varchar(80);
ie_sexo_w			varchar(1);
ie_estado_civil_w		varchar(2);
nr_identidade_w			varchar(11);
nr_cpf_w			varchar(11);
dt_nascimento_w			timestamp;
dt_movimentacao_w		timestamp;
cd_matricula_w			varchar(16);
dt_admissao_w			timestamp;
nm_mae_w			varchar(80);
nm_pai_w			varchar(80);
ds_endereco_w			varchar(35);
ds_bairro_w			varchar(25);
ds_municipio_w			varchar(30);
sg_uf_w				varchar(2);
cd_cep_w			varchar(8);
ds_email_w			varchar(40);
nr_ddi_telefone_w		varchar(3);
nr_ddd_telefone_w		varchar(3);
nr_telefone_w			varchar(8);
nr_ddi_celular_w		varchar(3);
nr_ddd_celular_w		varchar(3);
nr_celular_w			varchar(8);
nr_ddi_fax_w			varchar(3);
nr_ddd_fax_w			varchar(3);
nr_fax_w			varchar(8);
ds_endereco_corresp_w		varchar(35);
nr_caixa_postal_corresp_w	varchar(8);
ds_bairro_corresp_w		varchar(25);
ds_municipio_corresp_w		varchar(30);
sg_uf_corresp_w			varchar(2);
cd_cep_corresp_w		varchar(8);
qt_beneficiarios_w		bigint;
nr_seq_vendedor_canal_w		bigint;
nr_seq_vendedor_pf_w		bigint;
nr_cpf_titular_w		varchar(20);
nr_seq_titular_w		bigint;
nr_seq_titular_solicitacao_w	bigint;
ie_tipo_beneficiario_w		varchar(10);
cd_municipio_ibge_w		varchar(10);
ie_tipo_operacao_w		varchar(1);
ds_observacao_w			varchar(255);
ie_cpf_proprio_w		varchar(1);
nr_pis_pasep_w			varchar(11);
nr_seq_inclusao_benef_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_plano_aux_w		varchar(10);
nr_seq_plano_w			bigint;
nr_seq_motivo_cancelamento_w	bigint;
nr_seq_motiv_can_aux_w		varchar(10);
ds_site_w			varchar(255);
cd_nacionalidade_w		varchar(10);
nr_seq_parentesco_w		bigint;
qt_registros_w			bigint;
cd_cartao_sus_w			varchar(25);
cd_declaracao_nascido_w		varchar(20);

C01 CURSOR FOR
	SELECT	ds_conteudo
	from	w_pls_importacao
	order by CASE WHEN rpad(trim(both substr(ds_conteudo,64,11)),11,'0')=substr(ds_conteudo,44,11) THEN -1  ELSE 1 END;


BEGIN

CALL gravar_processo_longo('Inclusão de beneficiários','PLS_IMPORTAR_INCLUSAO_BENEF',0);

qt_beneficiarios_w	:= 0;

select	max(cd_nacionalidade)
into STRICT	cd_nacionalidade_w
from	nacionalidade
where	ie_brasileiro	= 'S'
and	coalesce(ie_situacao,'A') = 'A';

open C01;
loop
fetch C01 into
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	nr_seq_titular_w		:= null;
	nr_seq_titular_solicitacao_w	:= null;

	qt_beneficiarios_w	:= qt_beneficiarios_w + 1;

	CALL gravar_processo_longo('Beneficiários = ' || qt_beneficiarios_w,'PLS_IMPORTAR_INCLUSAO_BENEF',-1);

	ie_tipo_operacao_w		:= trim(both substr(ds_conteudo_w,1,1));
	if (ie_tipo_operacao_w = 'C') then
		ie_tipo_operacao_w	:= 'E';
	end if;

	nr_seq_plano_w			:= null;
	nr_seq_plano_aux_w		:= trim(both substr(ds_conteudo_w,771,2));

	if (nr_seq_plano_aux_w IS NOT NULL AND nr_seq_plano_aux_w::text <> '') then
		begin
		select	max(nr_seq_plano)
		into STRICT	nr_seq_plano_w
		from	pls_contrato_plano
		where	nr_seq_contrato	= nr_seq_contrato_p
		and	nr_seq_plano	= nr_seq_plano_aux_w
		and	ie_situacao	= 'A';
		exception
		when others then
			nr_seq_plano_w	:= null;
		end;

		if (coalesce(nr_seq_plano_w::text, '') = '') then
			select	max(nr_seq_plano)
			into STRICT	nr_seq_plano_w
			from	pls_contrato_plano
			where	nr_seq_contrato	= nr_seq_contrato_p
			and	ie_situacao	= 'A';
		end if;
	end if;

	nr_cpf_w			:= trim(both substr(ds_conteudo_w,64,11));
	nr_cpf_w			:= rpad(nr_cpf_w,11,'0');
	nm_pessoa_fisica_w		:= trim(both substr(ds_conteudo_w,76,80));

	begin
	dt_nascimento_w			:= to_date(substr(ds_conteudo_w,156,8),'ddmmyyyy');
	exception
	when others then
		dt_nascimento_w	:= null;
	end;

	ie_sexo_w			:= trim(both substr(ds_conteudo_w,164,1));
	nm_pai_w			:= trim(both substr(ds_conteudo_w,165,80));
	nm_mae_w			:= trim(both substr(ds_conteudo_w,245,80));
	ie_estado_civil_w		:= trim(both substr(ds_conteudo_w,330,1));

	if (ie_estado_civil_w = '1') then
		ie_estado_civil_w	:= 1;
	elsif (ie_estado_civil_w = '2') then
		ie_estado_civil_w	:= 2;
	elsif (ie_estado_civil_w = '3') then
		ie_estado_civil_w	:= 5;
	elsif (ie_estado_civil_w = '4') then
		ie_estado_civil_w	:= 4;
	else
		ie_estado_civil_w	:= 9;
	end if;

	nr_pis_pasep_w			:= trim(both substr(ds_conteudo_w,331,20));
	ds_observacao_w			:= substr(trim(both substr(ds_conteudo_w,393,400)),1,255);

	if (ie_tipo_operacao_w = 'I') then
		begin
		dt_movimentacao_w			:= to_date(substr(ds_conteudo_w,780,8),'ddmmyyyy');
		exception
		when others then
			dt_movimentacao_w	:= null;
		end;
	elsif (ie_tipo_operacao_w = 'E') then
		begin
		dt_movimentacao_w			:= to_date(substr(ds_conteudo_w,788,8),'ddmmyyyy');
		exception
		when others then
			dt_movimentacao_w	:= null;
		end;
	end if;

	begin
	dt_admissao_w			:= to_date(substr(ds_conteudo_w,804,8),'ddmmyyyy');
	exception
	when others then
		dt_admissao_w	:= null;
	end;

	cd_matricula_w			:= trim(both substr(ds_conteudo_w,830,20));
	nr_ddi_telefone_w		:= trim(both substr(ds_conteudo_w,964,3));
	nr_ddd_telefone_w		:= trim(both substr(ds_conteudo_w,967,3));
	nr_telefone_w			:= trim(both substr(ds_conteudo_w,970,20));
	nr_ddi_celular_w		:= trim(both substr(ds_conteudo_w,990,3));
	nr_ddd_celular_w		:= trim(both substr(ds_conteudo_w,993,3));
	nr_celular_w			:= trim(both substr(ds_conteudo_w,996,20));
	nr_ddi_fax_w			:= trim(both substr(ds_conteudo_w,1016,3));
	nr_ddd_fax_w			:= trim(both substr(ds_conteudo_w,1019,3));
	nr_fax_w			:= trim(both substr(ds_conteudo_w,1022,8));
	ds_email_w			:= trim(both substr(ds_conteudo_w,1042,50));
	ds_site_w			:= trim(both substr(ds_conteudo_w,1092,50));
	cd_cep_corresp_w		:= trim(both substr(ds_conteudo_w,1142,8));
	ds_endereco_corresp_w		:= trim(both substr(ds_conteudo_w,1150,80));
	ds_bairro_corresp_w		:= trim(both substr(ds_conteudo_w,1230,50));
	ds_municipio_corresp_w		:= trim(both substr(ds_conteudo_w,1280,50));
	sg_uf_corresp_w			:= trim(both substr(ds_conteudo_w,1330,2));
	nr_cpf_titular_w		:= trim(both substr(ds_conteudo_w,44,11));
	ie_tipo_beneficiario_w		:= trim(both substr(ds_conteudo_w,75,2));

	cd_cep_w			:= trim(both substr(ds_conteudo_w,1335,8));
	ds_endereco_w			:= trim(both substr(ds_conteudo_w,1343,80));
	ds_bairro_w			:= trim(both substr(ds_conteudo_w,1423,50));
	ds_municipio_w			:= trim(both substr(ds_conteudo_w,1473,50));
	sg_uf_w				:= trim(both substr(ds_conteudo_w,1523,2));
	nr_seq_vendedor_canal_w		:= trim(both substr(ds_conteudo_w,1685,10));
	nr_seq_vendedor_pf_w		:= trim(both substr(ds_conteudo_w,1695,10));
	nr_seq_motiv_can_aux_w		:= trim(both substr(ds_conteudo_w,962,2));
	nr_seq_parentesco_w		:= trim(both substr(ds_conteudo_w,325,3));
	cd_cartao_sus_w			:= trim(both substr(ds_conteudo_w,351,25));
	cd_declaracao_nascido_w		:= trim(both substr(ds_conteudo_w,372,20));

	if (nr_seq_parentesco_w = 0) then
		nr_seq_parentesco_w	:= null;
	else
		select	count(1)
		into STRICT	qt_registros_w
		from	grau_parentesco
		where	nr_sequencia	= nr_seq_parentesco_w;

		if (qt_registros_w = 0) then
			nr_seq_parentesco_w	:= null;
		end if;
	end if;


	if (nr_seq_motiv_can_aux_w IS NOT NULL AND nr_seq_motiv_can_aux_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_motivo_cancelamento_w
		from	pls_motivo_cancelamento
		where	cd_motivo_cancelamento	= nr_seq_motiv_can_aux_w
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	ie_situacao		= 'A';
	end if;

	if (nr_cpf_titular_w IS NOT NULL AND nr_cpf_titular_w::text <> '') then
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_titular_w
		from	pessoa_fisica	a,
			pls_segurado	b
		where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
		and	b.nr_seq_contrato	= nr_seq_contrato_p
		and	a.nr_cpf		= nr_cpf_titular_w;

		if (coalesce(nr_seq_titular_w::text, '') = '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_titular_solicitacao_w
			from	pls_inclusao_beneficiario
			where	nr_seq_lote_inclusao	= nr_seq_lote_inclusao_p
			and	nr_cpf			= nr_cpf_titular_w;
		end if;
	end if;

	select	max(cd_municipio_ibge)
	into STRICT	cd_municipio_ibge_w
	from	sus_municipio
	where	upper(ds_municipio)	= upper(ds_municipio_w)
	and	ds_unidade_federacao	= sg_uf_w;

	select	nextval('pls_inclusao_beneficiario_seq')
	into STRICT	nr_seq_inclusao_benef_w
	;

	insert	into	pls_inclusao_beneficiario(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			cd_estabelecimento,nr_seq_lote_inclusao,nm_pessoa_fisica,ie_status,dt_solicitacao,
			dt_nascimento,nm_mae,nr_cpf,ie_estado_civil,ie_sexo,
			ds_email,nr_identidade,cd_cep,ds_endereco,ds_bairro,
			ds_municipio,sg_estado,nr_ddd_telefone,nr_telefone,nr_telefone_celular,
			dt_admissao,cd_matricula_est,ie_processo,ie_tipo_operacao,ie_tipo_inclusao,
			cd_usuario_plano,nr_ddd_celular,nr_ddd_fax,nr_fax,ds_endereco_corresp,
			ds_bairro_corresp,ds_municipio_corresp,sg_uf_corresp,cd_cep_corresp,ds_observacao,
			nr_pis_pasep,nr_seq_contrato,nr_seq_plano,nr_seq_vendedor_canal,nr_seq_vendedor_pf,
			nr_seq_titular_contrato,nr_seq_motivo_cancelamento,cd_nacionalidade,nr_seq_titular_solic,
			cd_municipio_ibge,nr_seq_parentesco,nr_cartao_nac_sus,cd_declaracao_nasc_vivo,
			ie_status_mov)
		values (	nr_seq_inclusao_benef_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			cd_estabelecimento_p,nr_seq_lote_inclusao_p,nm_pessoa_fisica_w,'P',dt_movimentacao_w,
			dt_nascimento_w,nm_mae_w,nr_cpf_w,ie_estado_civil_w,ie_sexo_w,
			ds_email_w,nr_identidade_w,cd_cep_w,ds_endereco_w,ds_bairro_w,
			ds_municipio_w,sg_uf_w,nr_ddd_telefone_w,nr_telefone_w,nr_celular_w,
			dt_admissao_w,cd_matricula_w,'I',ie_tipo_operacao_w,'P',
			cd_cartao_identificacao_w,nr_ddd_celular_w,nr_ddd_fax_w,nr_fax_w,ds_endereco_corresp_w,
			ds_bairro_corresp_w,ds_municipio_corresp_w,sg_uf_corresp_w,cd_cep_corresp_w,ds_observacao_w,
			nr_pis_pasep_w,nr_seq_contrato_p,nr_seq_plano_w,nr_seq_vendedor_canal_w,nr_seq_vendedor_pf_w,
			nr_seq_titular_w,nr_seq_motivo_cancelamento_w,cd_nacionalidade_w,nr_seq_titular_solicitacao_w,
			cd_municipio_ibge_w,nr_seq_parentesco_w,cd_cartao_sus_w,cd_declaracao_nascido_w,
			'1');

	if (coalesce(ie_tipo_operacao_w,'I') = 'I') then
		pls_gerar_homonimo_pf(nm_pessoa_fisica_w,to_char(dt_nascimento_w, 'dd/mm/yyyy'),nr_cpf_w,nr_seq_inclusao_benef_w,nm_usuario_p);
	end if;
	end;
end loop;
close C01;

update	pls_lote_inclusao_benef
set	ie_situacao		= 'P',
	dt_importacao_arquivo	 = NULL
where	nr_sequencia		= nr_seq_lote_inclusao_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_inclusao_divicom ( nr_seq_lote_inclusao_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

