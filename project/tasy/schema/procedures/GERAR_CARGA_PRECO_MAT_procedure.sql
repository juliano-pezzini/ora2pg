-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_carga_preco_mat (cd_convenio_p bigint, cd_estabelecimento_p bigint, cd_tab_preco_mat_p bigint, dt_inicio_vigencia_p timestamp, cd_moeda_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
cd_unidade_medida_consumo_w	varchar(30);
cd_unid_med_convenio_w		varchar(20);
cd_material_w			integer;
vl_item_convenio_w		double precision;
qt_existe_w			bigint;
ds_itens_w			varchar(2000);
ie_converte_w			varchar(1):= 'N';
qt_conv_estoque_consumo_w	double precision	:= 0;
cd_unidade_medida_estoque_w	varchar(30);

IE_CONVERTE_ML_FR_w		varchar(1):= 'N';
nr_seq_regra_conv_w		bigint;
tx_conversao_qtde_w		double precision;

 
 
 
C01 CURSOR FOR 
	SELECT	a.cd_material, 
		a.vl_item_convenio, 
		substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo, 
		a.cd_unid_med_convenio, 
		substr(obter_dados_material_estab(c.cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque, 
		coalesce(a.nr_seq_regra_conv,0) 
	from	material c, 
		convenio_carga_preco a 
	where	a.cd_convenio = cd_convenio_p 
	and	a.cd_material = c.cd_material 
	and	a.ie_status = 'L' 
	and	not exists (	SELECT	1 
				from	preco_material b 
				where	b.cd_material = a.cd_material 
				and	trunc(b.dt_inicio_vigencia) = dt_inicio_vigencia_p 
				and	b.cd_tab_preco_mat = cd_tab_preco_mat_p 
				and 	b.cd_estabelecimento = cd_estabelecimento_p) 
	order by a.cd_material, a.vl_item_convenio desc;


BEGIN 
 
ie_converte_w:= obter_valor_param_usuario(921,28,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
 
select 	coalesce(max(IE_CONVERTE_ML_FR),'N') 
into STRICT	IE_CONVERTE_ML_FR_w 
from 	convenio_estabelecimento 
where 	cd_convenio = cd_convenio_p 
and 	cd_estabelecimento = cd_estabelecimento_p;
 
OPEN C01;
LOOP 
FETCH C01 into 
		cd_material_w, 
		vl_item_convenio_w, 
		cd_unidade_medida_consumo_w, 
		cd_unid_med_convenio_w, 
		cd_unidade_medida_estoque_w, 
		nr_seq_regra_conv_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	if (coalesce(ie_converte_w,'N') = 'S') and (cd_unid_med_convenio_w <> cd_unidade_medida_consumo_w) and (cd_unid_med_convenio_w = cd_unidade_medida_estoque_w)	then 
		 
		select	max(coalesce(qt_conv_estoque_consumo,1)) 
		into STRICT	qt_conv_estoque_consumo_w 
		from	material 
		where	cd_material = cd_material_w;
		 
		vl_item_convenio_w:= vl_item_convenio_w / qt_conv_estoque_consumo_w;
		 
	end if;	
	 
	-- FabrÃ­cio em 12/11/2009 OS 167210 
	if (coalesce(IE_CONVERTE_ML_FR_w,'N') = 'S') and (nr_seq_regra_conv_w > 0) /*and 
		(upper(cd_unid_med_convenio_w) = 'ML') and 
		(upper(cd_unidade_medida_consumo_w) = 'FR')*/
 then 
		 
		select 	coalesce(max(tx_conversao_qtde),-1) 
		into STRICT	tx_conversao_qtde_w 
		from 	conversao_material_convenio 
		where 	nr_sequencia = nr_seq_regra_conv_w;
		 
		if (tx_conversao_qtde_w <> -1) then 
			vl_item_convenio_w:= vl_item_convenio_w * tx_conversao_qtde_w;
		end if;
		 
	end if;
	 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	preco_material 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	cd_tab_preco_mat	= cd_tab_preco_mat_p 
	and	cd_material		= cd_material_w 
	and	dt_inicio_vigencia	= dt_inicio_vigencia_p;
 
	if (qt_existe_w = 0) then 
		insert into preco_material( 
			cd_estabelecimento, 
			cd_tab_preco_mat, 
			cd_material, 
			dt_inicio_vigencia, 
			vl_preco_venda, 
			cd_moeda, 
			ie_brasindice, 
			dt_atualizacao, 
			nm_usuario, 
			cd_unidade_medida, 
			ie_situacao) 
		values ( 
			cd_estabelecimento_p, 
			cd_tab_preco_mat_p, 
			cd_material_w, 
			dt_inicio_vigencia_p, 
			vl_item_convenio_w, 
			cd_moeda_p, 
			'N', 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_unidade_medida_consumo_w, 
			'A');
	end if;
	end;
END LOOP;
CLOSE C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_carga_preco_mat (cd_convenio_p bigint, cd_estabelecimento_p bigint, cd_tab_preco_mat_p bigint, dt_inicio_vigencia_p timestamp, cd_moeda_p bigint, nm_usuario_p text) FROM PUBLIC;

