-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_cheque_contab_hsl (dt_referencia_p timestamp, cd_estabelecimento_p bigint, dt_venc_inicial_p timestamp, ie_quebra_p text, ie_tipo_relatorio_p text, ie_somente_abertos_p text, ie_somente_depositados_p text, cd_pessoa_fisica_p text, cd_cgc_p text, ie_origem_cheque_p text, ie_considerar_cobranca_p text, cd_tipo_portador_p bigint, cd_portador_p bigint, ds_lista_portador_p text, nm_usuario_p text, ds_lista_grupo_prod_p text, ds_lista_subgrupo_prod_p text, ds_lista_prod_p text) AS $body$
DECLARE

 
 
/* 
ie_quebra_p 
	P - Paciente 
	RP - Responsável pagador 
	D - Dt depósito 
	V - Dt vencimento atual 
	E - Emissão do cheque 
	S - Status do Cheque 
 
 
ie_tipo_relatorio_p 
	P - Pré-datados 
	PC - Posição contábil 
*/
 
 
 
ie_status_w			bigint;
nr_seq_cheque_w			bigint;
vl_cheque_w			double precision;

dt_vencimento_w			timestamp;
dt_vencimento_atual_w		timestamp;
dt_emissao_titulo_w		timestamp;
dt_contabil_w			timestamp;
dt_registro_w			timestamp;
cd_banco_w			bigint;
ds_banco_w			varchar(255);
cd_agencia_bancaria_w		varchar(255);
nr_conta_w			varchar(255);
nr_cheque_w			varchar(255);
cd_pessoa_fisica_w		varchar(255);
cd_cgc_w			varchar(255);
ds_emitente_w			varchar(255);
nm_paciente_w			varchar(255);
ds_quebra_w			varchar(255);
cd_pessoa_fisica_atend_w	varchar(255);
ie_tipo_cheque_w		varchar(255);
ie_emite_portador_w		varchar(255) := 'N';
ds_lista_origem_cheque_w	varchar(4000);
ds_lista_portador_w		varchar(4000);
ds_lista_portador_relat_w	varchar(255);
ds_portador_w			varchar(255);
ds_lista_grupo_prod_w		varchar(255);
ds_lista_subgrupo_prod_w	varchar(255);
ds_lista_prod_w			varchar(255);

nr_seq_caixa_rec_w		bigint;
nr_titulo_w			bigint;
nr_titulo_cheque_w		bigint;
dt_deposito_w			timestamp;
dt_devolucao_pac_w		timestamp;
dt_devolucao_banco_w		timestamp;
dt_reapresentacao_w		timestamp;
dt_seg_devolucao_w		timestamp;
dt_seg_reapresentacao_w		timestamp;
dt_terc_devolucao_w		timestamp;

nr_atendimento_w		bigint;
dt_emissao_w			timestamp;

c01 CURSOR FOR 
SELECT	1 ie_status, /* À depositar */
 
	a.nr_seq_cheque, 
	a.vl_cheque, 
	a.nr_seq_caixa_rec, 
	a.nr_titulo, 
	a.cd_banco, 
	a.cd_agencia_bancaria, 
	a.nr_conta, 
	a.nr_cheque, 
	trunc(a.dt_contabil, 'dd'), 
	a.dt_vencimento, 
	trunc(obter_dt_venc_cheque_cr(a.nr_seq_cheque, dt_referencia_p), 'dd'), 
	a.dt_deposito, 
	a.dt_devolucao dt_devolucao_pac, 
	obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 
	coalesce(a.dt_registro, b.dt_recebimento), 
	a.cd_pessoa_fisica, 
	a.cd_cgc, 
	to_date(null) dt_devolucao_banco, 
	to_date(null) dt_reapresentacao, 
	to_date(null) dt_seg_devolucao, 
	to_date(null) dt_seg_reapresentacao, 
	to_date(null) dt_terc_devolucao 
FROM cheque_cr a
LEFT OUTER JOIN caixa_receb b ON (a.nr_seq_caixa_rec = b.nr_sequencia)
WHERE a.cd_estabelecimento						= cd_estabelecimento_p  and a.ie_lib_caixa = 'S' and trunc(a.dt_contabil, 'dd') 					<> trunc(coalesce(a.dt_vencimento_atual, a.dt_vencimento), 'dd') and trunc(a.dt_contabil, 'dd') 					<= trunc(dt_referencia_p, 'dd') and trunc(coalesce(a.dt_vencimento_atual, a.dt_vencimento), 'dd')	>= dt_venc_inicial_p and coalesce(obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 1)::text, '') = '' 		-- data de depósito deve ser nula 
  and coalesce(obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 2)::text, '') = '' 		-- data de devolução deve ser nula 
  and coalesce(obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 3)::text, '') = '' 		-- data de devolução ao paciente deve ser nula 
  and ie_tipo_relatorio_p					= 'P' and coalesce(a.cd_pessoa_fisica, 'X')				= coalesce(cd_pessoa_fisica_p, coalesce(a.cd_pessoa_fisica, 'X')) and coalesce(a.cd_cgc, 'X')					= coalesce(cd_cgc_p, coalesce(a.cd_cgc, 'X')) and ((ds_lista_origem_cheque_w				like '% ' || a.ie_origem_cheque || ' %') or (coalesce(ds_lista_origem_cheque_w::text, '') = '')) and ((obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CT')	= cd_tipo_portador_p) or (coalesce(cd_tipo_portador_p::text, '') = '')) and ((obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CP')	= cd_portador_p) or (coalesce(cd_portador_p::text, '') = '')) and ((ds_lista_portador_w	like '% ' || obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CP') || ' %') or (coalesce(ds_lista_portador_w::text, '') = '')) and ((ds_lista_grupo_prod_w		like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','G') || ' %') or (coalesce(ds_lista_grupo_prod_w::text, '') = '')) and ((ds_lista_subgrupo_prod_w	like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','S') || ' %') or (coalesce(ds_lista_subgrupo_prod_w::text, '') = '')) and ((ds_lista_prod_w		like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','P') || ' %') or (coalesce(ds_lista_prod_w::text, '') = '')) and obter_se_grupo_prod_perfil(a.nr_seq_grupo_prod,null,obter_perfil_ativo,null) = 'S' 
 
union all
 
SELECT	(obter_status_cheque_contabil(a.nr_seq_cheque, dt_referencia_p))::numeric , 
	a.nr_seq_cheque, 
	a.vl_cheque, 
	a.nr_seq_caixa_rec, 
	a.nr_titulo, 
	a.cd_banco, 
	a.cd_agencia_bancaria, 
	a.nr_conta, 
	a.nr_cheque, 
	trunc(a.dt_contabil, 'dd'), 
	a.dt_vencimento, 
	trunc(obter_dt_venc_cheque_cr(a.nr_seq_cheque, dt_referencia_p), 'dd'), 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 10) dt_deposito, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 70) dt_devolucao_pac, 
	obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 
	coalesce(a.dt_registro, b.dt_recebimento), 
	a.cd_pessoa_fisica, 
	a.cd_cgc, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 20) dt_devolucao_banco, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 30) dt_reapresentacao, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 40) dt_seg_devolucao, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 50) dt_seg_reapresentacao, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 60) dt_terc_devolucao 
FROM cheque_cr a
LEFT OUTER JOIN caixa_receb b ON (a.nr_seq_caixa_rec = b.nr_sequencia)
WHERE a.cd_estabelecimento					= cd_estabelecimento_p  and a.ie_lib_caixa = 'S' and trunc(a.dt_contabil, 'dd') 					<= trunc(dt_referencia_p, 'dd') and trunc(coalesce(a.dt_vencimento_atual, a.dt_vencimento), 'dd')		>= dt_venc_inicial_p and ie_tipo_relatorio_p						= 'PC' and ((ie_somente_depositados_p				= 'N') or ((obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 10) IS NOT NULL AND (obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 10))::text <> ''))) and ((ie_somente_abertos_p					= 'N') or (obter_status_cheque_contabil(a.nr_seq_cheque, dt_referencia_p)	in ('1','3','5','7','10'))) and coalesce(a.cd_pessoa_fisica, 'X')				= coalesce(cd_pessoa_fisica_p, coalesce(a.cd_pessoa_fisica, 'X')) and coalesce(a.cd_cgc, 'X')					= coalesce(cd_cgc_p, coalesce(a.cd_cgc, 'X')) and ((ds_lista_origem_cheque_w				like '% ' || a.ie_origem_cheque || ' %') or (coalesce(ds_lista_origem_cheque_w::text, '') = '')) and coalesce(ie_considerar_cobranca_p, 'S')			= 'S' and ((obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CT')	= cd_tipo_portador_p) or (coalesce(cd_tipo_portador_p::text, '') = '')) and ((obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CP')	= cd_portador_p) or (coalesce(cd_portador_p::text, '') = '')) and ((ds_lista_portador_w	like '% ' || obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CP') || ' %') or (coalesce(ds_lista_portador_w::text, '') = '')) and ((ds_lista_grupo_prod_w		like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','G') || ' %') or (coalesce(ds_lista_grupo_prod_w::text, '') = '')) and ((ds_lista_subgrupo_prod_w	like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','S') || ' %') or (coalesce(ds_lista_subgrupo_prod_w::text, '') = '')) and ((ds_lista_prod_w		like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','P') || ' %') or (coalesce(ds_lista_prod_w::text, '') = '')) and obter_se_grupo_prod_perfil(a.nr_seq_grupo_prod,null,obter_perfil_ativo,null) = 'S' 
 
union all
 
select	(obter_status_cheque_scob(a.nr_seq_cheque, dt_referencia_p))::numeric ,	-- Edgar 15/01/2009, OS 123662, criei este union para desconsiderar status de cobrança 
	a.nr_seq_cheque, 
	a.vl_cheque, 
	a.nr_seq_caixa_rec, 
	a.nr_titulo, 
	a.cd_banco, 
	a.cd_agencia_bancaria, 
	a.nr_conta, 
	a.nr_cheque, 
	trunc(a.dt_contabil, 'dd'), 
	a.dt_vencimento, 
	trunc(obter_dt_venc_cheque_cr(a.nr_seq_cheque, dt_referencia_p), 'dd'), 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 10) dt_deposito, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 70) dt_devolucao_pac, 
	obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc), 
	coalesce(a.dt_registro, b.dt_recebimento), 
	a.cd_pessoa_fisica, 
	a.cd_cgc, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 20) dt_devolucao_banco, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 30) dt_reapresentacao, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 40) dt_seg_devolucao, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 50) dt_seg_reapresentacao, 
	obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 60) dt_terc_devolucao 
FROM cheque_cr a
LEFT OUTER JOIN caixa_receb b ON (a.nr_seq_caixa_rec = b.nr_sequencia)
WHERE a.cd_estabelecimento					= cd_estabelecimento_p  and a.ie_lib_caixa = 'S' and trunc(a.dt_contabil, 'dd') 					<= trunc(dt_referencia_p, 'dd') and trunc(coalesce(a.dt_vencimento_atual, a.dt_vencimento), 'dd')		>= dt_venc_inicial_p and ie_tipo_relatorio_p						= 'PC' and ((ie_somente_depositados_p				= 'N') or ((obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 10) IS NOT NULL AND (obter_dt_cheque_cr(a.nr_seq_cheque, dt_referencia_p, 10))::text <> ''))) and ((ie_somente_abertos_p					= 'N') or (obter_status_cheque_scob(a.nr_seq_cheque, dt_referencia_p)	in ('1','3','5','10'))) and coalesce(a.cd_pessoa_fisica, 'X')				= coalesce(cd_pessoa_fisica_p, coalesce(a.cd_pessoa_fisica, 'X')) and coalesce(a.cd_cgc, 'X')					= coalesce(cd_cgc_p, coalesce(a.cd_cgc, 'X')) and ((ds_lista_origem_cheque_w				like '% ' || a.ie_origem_cheque || ' %') or (coalesce(ds_lista_origem_cheque_w::text, '') = '')) and coalesce(ie_considerar_cobranca_p, 'S')			= 'N' and ((obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CT')	= cd_tipo_portador_p) or (coalesce(cd_tipo_portador_p::text, '') = '')) and ((obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CP')	= cd_portador_p) or (coalesce(cd_portador_p::text, '') = '')) and ((ds_lista_portador_w	like '% ' || obter_portador_cheque_data(a.nr_seq_cheque, dt_referencia_p, 'CP') || ' %') or (coalesce(ds_lista_portador_w::text, '') = '')) and ((ds_lista_grupo_prod_w		like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','G') || ' %') or (coalesce(ds_lista_grupo_prod_w::text, '') = '')) and ((ds_lista_subgrupo_prod_w	like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','S') || ' %') or (coalesce(ds_lista_subgrupo_prod_w::text, '') = '')) and ((ds_lista_prod_w		like '% ' || OBTER_PROD_FINANC(a.nr_seq_cheque,'CH','P') || ' %') or (coalesce(ds_lista_prod_w::text, '') = '')) and obter_se_grupo_prod_perfil(a.nr_seq_grupo_prod,null,obter_perfil_ativo,null) = 'S'	;

c02 CURSOR FOR 
SELECT	ds_portador 
from	portador 
where	cd_tipo_portador	= cd_tipo_portador_p 
and	ds_lista_portador_w 	like '% ' || cd_portador || ' %' 
and	(ds_lista_portador_w IS NOT NULL AND ds_lista_portador_w::text <> '') 
and	(cd_tipo_portador_p IS NOT NULL AND cd_tipo_portador_p::text <> '');


BEGIN 
 
delete 	from W_CHEQUE_CONTAB_HSL 
where	nm_usuario	= nm_usuario_p 
or	dt_atualizacao	< clock_timestamp() - interval '1 days';
 
ds_lista_origem_cheque_w		:= replace(' ' || replace(replace(replace(ie_origem_cheque_p, ',', ' '), '(', ' '), ')', ' ') || ' ', ' ',' ');
if (coalesce(trim(both ds_lista_origem_cheque_w)::text, '') = '') then 
	ds_lista_origem_cheque_w	:= null;
end if;
 
ds_lista_portador_w			:= replace(' ' || replace(replace(replace(ds_lista_portador_p, ',', ' '), '(', ' '), ')', ' ') || ' ', ' ',' ');
if (coalesce(trim(both ds_lista_portador_w)::text, '') = '') then 
	ds_lista_portador_w		:= null;
end if;
 
ds_lista_grupo_prod_w			:= replace(' ' || replace(replace(replace(ds_lista_grupo_prod_p, ',', ' '), '(', ' '), ')', ' ') || ' ', ' ',' ');
if (coalesce(trim(both ds_lista_grupo_prod_w)::text, '') = '') then 
	ds_lista_grupo_prod_w		:= null;
end if;
 
ds_lista_subgrupo_prod_w		:= replace(' ' || replace(replace(replace(ds_lista_subgrupo_prod_p, ',', ' '), '(', ' '), ')', ' ') || ' ', ' ',' ');
if (coalesce(trim(both ds_lista_subgrupo_prod_w)::text, '') = '') then 
	ds_lista_subgrupo_prod_w		:= null;
end if;
 
ds_lista_prod_w				:= replace(' ' || replace(replace(replace(ds_lista_prod_p, ',', ' '), '(', ' '), ')', ' ') || ' ', ' ',' ');
if (coalesce(trim(both ds_lista_prod_w)::text, '') = '') then 
	ds_lista_prod_w		:= null;
end if;
 
--r.aise_application_error(-20011, 'cd_tipo_portador_p = "' || cd_tipo_portador_p || '"'); 
 
commit;
 
if (cd_tipo_portador_p IS NOT NULL AND cd_tipo_portador_p::text <> '') or (cd_portador_p IS NOT NULL AND cd_portador_p::text <> '') then 
	ie_emite_portador_w	:= 'S';
end if;
 
ds_portador_w			:= null;
ds_lista_portador_relat_w	:= null;
open c02;
loop 
fetch c02 into 
	ds_portador_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	if (ds_lista_portador_relat_w IS NOT NULL AND ds_lista_portador_relat_w::text <> '') then 
		ds_lista_portador_relat_w	:= substr(ds_lista_portador_relat_w || ', ' || ds_portador_w, 1, 255);
	else 
		ds_lista_portador_relat_w	:= substr(ds_portador_w, 1, 255);
	end if;
end loop;
close c02;
 
 
open c01;
loop 
fetch c01 into 
	ie_status_w, 
	nr_seq_cheque_w, 
	vl_cheque_w, 
	nr_seq_caixa_rec_w, 
	nr_titulo_cheque_w, 
	cd_banco_w, 
	cd_agencia_bancaria_w, 
	nr_conta_w, 
	nr_cheque_w, 
	dt_contabil_w, 
	dt_vencimento_w, 
	dt_vencimento_atual_w, 
	dt_deposito_w, 
	dt_devolucao_pac_w, 
	ds_emitente_w, 
	dt_registro_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w, 
	dt_devolucao_banco_w, 
	dt_reapresentacao_w, 
	dt_seg_devolucao_w, 
	dt_seg_reapresentacao_w, 
	dt_terc_devolucao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
 
	select	max(nr_titulo) 
	into STRICT	nr_titulo_w 
	from	titulo_receber_liq 
	where	nr_seq_caixa_rec	= nr_seq_caixa_rec_w;
 
	nr_titulo_w			:= coalesce(nr_titulo_cheque_w, nr_titulo_w);
 
	select	max(nr_atendimento), 
		max(dt_emissao) 
	into STRICT	nr_atendimento_w, 
		dt_emissao_titulo_w 
	from	titulo_receber 
	where	nr_titulo		= nr_titulo_w;
 
	nm_paciente_w			:= obter_pessoa_atendimento(nr_atendimento_w, 'N');
	cd_pessoa_fisica_atend_w	:= obter_pessoa_atendimento(nr_atendimento_w, 'C');
 
	if (dt_contabil_w <> dt_vencimento_atual_w) then 
		ie_tipo_cheque_w			:= 'P'; /* cheque pré-datado */
	else 
		ie_tipo_cheque_w			:= 'V'; /* cheque a vista */
	end if;
 
	if (ie_quebra_p = 'S') then 
		if (ie_status_w = 1) then 
			if (dt_contabil_w <> dt_vencimento_atual_w) then 
				ds_quebra_w	:= wheb_mensagem_pck.get_texto(303693);
			else 
				ds_quebra_w	:= wheb_mensagem_pck.get_texto(303695);
			end if;
		elsif (ie_status_w = 2) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303696);
		elsif (ie_status_w = 3) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303697);
		elsif (ie_status_w = 4) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303698);
		elsif (ie_status_w = 5) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303699);
		elsif (ie_status_w = 6) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303703);
		elsif (ie_status_w = 7) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303704);
		elsif (ie_status_w = 8) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303705);
		elsif (ie_status_w = 9) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303706);
		elsif (ie_status_w = 10) then 
			ds_quebra_w	:= wheb_mensagem_pck.get_texto(303707);
		end if;
	elsif (ie_quebra_p = 'P') then 
		ds_quebra_w	:= coalesce(nm_paciente_w, wheb_mensagem_pck.get_texto(303708));
	elsif (ie_quebra_p = 'RP') then 
		ds_quebra_w	:= ds_emitente_w;
	elsif (ie_quebra_p = 'D') then 
		ds_quebra_w	:= coalesce(to_char(dt_deposito_w, 'dd/mm/yyyy'), wheb_mensagem_pck.get_texto(303709));
	elsif (ie_quebra_p = 'V') then 
		ds_quebra_w	:= to_char(coalesce(dt_vencimento_atual_w, dt_vencimento_w), 'dd/mm/yyyy');
	elsif (ie_quebra_p = 'E') then 
		ds_quebra_w	:= to_char(dt_registro_w, 'dd/mm/yyyy');
	end if;
 
	insert into w_cheque_contab_hsl(nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_seq_cheque, 
		vl_cheque, 
		dt_vencimento, 
		dt_vencimento_atual, 
		dt_contabil, 
		cd_banco, 
		ds_banco, 
		cd_agencia, 
		nr_conta, 
		nr_cheque, 
		cd_pessoa_fisica, 
		cd_cgc, 
		ds_emitente, 
		nm_paciente, 
		nr_titulo, 
		dt_emissao_titulo, 
		dt_deposito, 
		dt_devolucao_pac, 
		dt_registro, 
		ds_quebra, 
		ie_status, 
		dt_devolucao_banco, 
		dt_reapresentacao, 
		dt_seg_devolucao, 
		dt_seg_reapresentacao, 
		dt_terc_devolucao, 
		ie_tipo_cheque, 
		cd_pessoa_fisica_atend, 
		ie_emite_portador, 
		ds_lista_portador_relat) 
	values (nextval('w_cheque_contab_hsl_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_cheque_w, 
		vl_cheque_w, 
		dt_vencimento_w, 
		dt_vencimento_atual_w, 
		dt_contabil_w, 
		cd_banco_w, 
		ds_banco_w, 
		cd_agencia_bancaria_w, 
		nr_conta_w, 
		nr_cheque_w, 
		cd_pessoa_fisica_w, 
		cd_cgc_w, 
		ds_emitente_w, 
		nm_paciente_w, 
		nr_titulo_w, 
		dt_emissao_titulo_w, 
		dt_deposito_w, 
		dt_devolucao_pac_w, 
		dt_registro_w, 
		ds_quebra_w, 
		ie_status_w, 
		dt_devolucao_banco_w, 
		dt_reapresentacao_w, 
		dt_seg_devolucao_w, 
		dt_seg_reapresentacao_w, 
		dt_terc_devolucao_w, 
		ie_tipo_cheque_w, 
		cd_pessoa_fisica_atend_w, 
		ie_emite_portador_w, 
		ds_lista_portador_relat_w);
 
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_cheque_contab_hsl (dt_referencia_p timestamp, cd_estabelecimento_p bigint, dt_venc_inicial_p timestamp, ie_quebra_p text, ie_tipo_relatorio_p text, ie_somente_abertos_p text, ie_somente_depositados_p text, cd_pessoa_fisica_p text, cd_cgc_p text, ie_origem_cheque_p text, ie_considerar_cobranca_p text, cd_tipo_portador_p bigint, cd_portador_p bigint, ds_lista_portador_p text, nm_usuario_p text, ds_lista_grupo_prod_p text, ds_lista_subgrupo_prod_p text, ds_lista_prod_p text) FROM PUBLIC;

