-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_res_item_simulacao ( nr_seq_proc_p bigint, nr_seq_partic_p bigint, nr_seq_mat_p bigint, ie_tipo_resumo_p text, nr_prest_pgto_coleta_p bigint, nm_usuario_p text, ds_log_p text) AS $body$
DECLARE

					

nr_seq_prestador_partic_w		pls_proc_participante.nr_seq_prestador%type;
ie_existe_prest_partic_w		varchar(1) := 'N';
nr_seq_conta_w					pls_conta.nr_sequencia%type;
nr_seq_item_w					pls_conta_proc.nr_sequencia%type;
ie_proc_mat_w					varchar(1);
nr_sequencia_w					pls_conta_proc.nr_sequencia%type;
cd_procedimento_w				pls_conta_proc.cd_procedimento%type;
ie_origem_proced_w				pls_conta_proc.ie_origem_proced%type;
nr_seq_material_w				pls_conta_mat.nr_seq_material%type;
qt_item_w						pls_conta_proc.qt_procedimento%type;
nr_seq_prestador_exec_w			pls_conta.nr_seq_prestador_exec%type;
nm_prestador_exec_w				varchar(255);
nr_seq_prest_pgto_proc_w		pls_conta.nr_seq_prestador_exec%type;
nr_seq_prest_pgto_medico_w		pls_conta.nr_seq_prestador_exec%type;
nr_seq_prest_fornec_w			pls_conta_mat.nr_seq_prest_fornec%type;
nr_seq_prestador_pgto_w			pls_conta.nr_seq_prestador_exec%type;
nr_seq_prest_pgto_partic_w		pls_proc_participante.nr_seq_prestador%type;
cd_pessoa_fisica_w				bigint;
cd_medico_executor_w			bigint;
nr_seq_competencia_w			bigint;
dt_mes_competencia_w			timestamp;
cd_medico_w						pls_conta.cd_medico_executor%type;
cd_estabelecimento_w			estabelecimento.cd_estabelecimento%type;
nr_seq_protocolo_w				pls_protocolo_conta.nr_sequencia%type;
vl_medico_w						pls_conta_proc.vl_medico%type		:=0;
vl_anestesista_w				pls_conta_proc.vl_anestesista%type	:=0;
vl_auxiliares_w					pls_conta_proc.vl_auxiliares%type	:=0;
vl_custo_operacional_w			pls_conta_proc.vl_custo_operacional%type:=0;
vl_materiais_w					pls_conta_mat.vl_material%type		:=0;
vl_procedimento_w				pls_conta_proc.vl_procedimento%type	:=0;
vl_procedimento_imp_w			pls_conta_proc.vl_procedimento_imp%type	:=0;
vl_calculado_w					pls_conta_proc.vl_procedimento%type	:=0;
vl_apresentado_w				pls_conta_proc.vl_procedimento_imp%type	:=0;
vl_liberado_w					pls_conta_proc.vl_liberado%type		:=0;
vl_liberado_ww					pls_conta_proc.vl_liberado%type		:=0;
vl_beneficiario_w				pls_conta_proc.vl_beneficiario%type	:=0;
vl_glosa_w						pls_conta_proc.vl_glosa%type		:=0;
vl_glosa_orig_w					pls_conta_proc.vl_glosa%type		:=0;
vl_unitario_w					pls_conta_proc.vl_unitario_imp%type	:=0;
vl_unitario_calculado_w			pls_conta_proc.vl_unitario%type		:=0;
vl_pag_medico_conta_w			pls_conta_proc.vl_pag_medico_conta%type	:=0;
vl_participante_w				pls_proc_participante.vl_participante%type :=0;
vl_co_ptu_w						pls_conta_proc.vl_co_ptu%type		:=0;
vl_material_ptu_w				pls_conta_proc.vl_material_ptu%type	:=0;
vl_procedimento_ptu_w			pls_conta_proc.vl_procedimento_ptu%type	:=0;
vl_prestador_w					pls_conta_proc.vl_prestador%type	:=0;
nr_seq_evento_w					pls_conta_mat.nr_seq_evento%type;
nr_seq_producao_w				pls_conta_mat.nr_seq_evento_prod%type;
nr_seq_segurado_w				pls_conta.nr_seq_segurado%type;
cd_guia_w						pls_conta.cd_guia%type;
cd_guia_referencia_w			pls_conta.cd_guia_referencia%type;
nr_seq_prestador_atend_w		pls_protocolo_conta.nr_seq_prestador%type;
nr_seq_grau_partic_w			pls_conta.nr_seq_grau_partic%type;
ie_status_w						pls_conta.ie_status%type;
ie_tipo_guia_w					pls_conta.ie_tipo_guia%type;
ie_origem_conta_w				pls_conta.ie_origem_conta%type;
ds_item_w						varchar(255);
ie_tipo_despesa_w				pls_conta_proc.ie_tipo_despesa%type;
ie_tipo_despesa_mat_w			pls_conta_mat.ie_tipo_despesa%type;
ie_tipo_despesa_proc_w			pls_conta_proc.ie_tipo_despesa%type;
nm_prestador_pgto_w				varchar(255);
ds_tipo_item_w					varchar(170);
nr_seq_tipo_atendimento_w		bigint;
ie_tipo_contratacao_w			varchar(2)	:= null;
nr_seq_periodo_pgto_w			bigint;
qt_registro_w					integer;
ie_contador_w					varchar(1);
nr_seq_prestador_prot_w			pls_protocolo_conta.nr_seq_prestador%type;
nr_seq_regra_w					bigint;
nr_protocolo_prestador_w		pls_protocolo_conta.nr_protocolo_prestador%type;
dt_procedimento_w				pls_conta_proc.dt_procedimento%type;
dt_item_w						timestamp;
cd_guia_prestador_w				varchar(20);
cd_cooperativa_w				varchar(10);
nr_seq_grupo_ans_w				pls_conta_mat.nr_seq_grupo_ans%type;
nr_seq_prot_referencia_w		bigint;
nr_seq_honorario_crit_w			bigint;
nr_seq_hon_crit_medico_w		bigint;
nr_seq_hon_crit_partic_w		bigint;
vl_taxa_adm_w					double precision	:= 0;
vl_taxa_adm_co_w				double precision	:= 0;
vl_taxa_adm_mat_w				double precision	:= 0;
pr_liberado_w					real;
pr_custo_operacional_w			real;
pr_materiais_w					real;
nr_seq_regra_valor_w			bigint;
nr_seq_exame_coleta_w			bigint;
vl_exame_coleta_w				double precision	:= 0;
ie_status_ww					pls_conta_mat.ie_status%type;
vl_provisorio_w					double precision	:= 0;
vl_total_partic_w				double precision	:= 0;
vl_pag_medico_w					double precision	:= 0;
ie_tipo_liberacao_w				varchar(2);
nr_seq_regra_evento_w			bigint;
nr_seq_contrato_w				bigint;
ie_filantropia_w				varchar(1);
ie_define_pagamento_w			varchar(1);
ie_cobrar_material_w			varchar(1);
ie_cobrar_co_w					varchar(1);
nr_seq_prestador_partic_pgto_w	bigint;
qt_item_regra_w					integer;
qt_participante_w				integer;
vl_lib_item_w					pls_conta_mat.vl_liberado%type;
ie_status_prot_w				pls_protocolo_conta.ie_status%type;
ie_glosa_w						pls_conta_mat.ie_glosa%type;
vl_hm_w							pls_conta_medica_resumo.vl_hm%type;
vl_co_pag_w						pls_conta_medica_resumo.vl_co_pag%type;
vl_materiais_pag_w				pls_conta_medica_resumo.vl_materiais_pag%type;
vl_calc_hi_w					pls_conta_proc.vl_calc_hi_util%type;
vl_calc_co_w					pls_conta_proc.vl_calc_co_util%type;
vl_calc_mat_w					pls_conta_proc.vl_calc_mat_util%type;
vl_taxa_adm_pag_w				pls_conta_medica_resumo.vl_taxa_adm_pag%type;
vl_dif_w						double precision;
vl_glosa_tot_w					double precision;
vl_liberado_tot_w				double precision;
nr_seq_prestador_solic_w		pls_prestador_medico.nr_seq_prestador%type;
dt_preco_w						timestamp := clock_timestamp();
dt_material_w					pls_conta_mat.dt_atendimento%type;
dt_conta_w						timestamp;
dt_protocolo_w					pls_protocolo_conta.dt_mes_competencia%type;
cd_medico_solicitante_w			pls_conta.cd_medico_solicitante%type;
ie_medico_solic_coope_w			varchar(10);
ie_medico_exec_coope_w			varchar(10);
ie_tipo_protocolo_w				pls_protocolo_conta.ie_tipo_protocolo%type;
nr_seq_regra_cooperado_w		pls_ato_cooperado.nr_sequencia%type;
ie_ato_cooperado_w				pls_ato_cooperado.ie_ato_cooperado%type;
vl_lib_orig_w					pls_conta_proc.vl_liberado%type;
vl_apres_ind_w					pls_conta_medica_resumo.vl_apres_ind%type;
dt_competencia_pgto_w			pls_conta_medica_resumo.dt_competencia_pgto%type;
dt_mesano_recebimento_w			timestamp;
ie_tipo_data_pagamento_w		varchar(10);
vl_total_partic_calc_w			double precision := 0;
nr_seq_prest_vinc_direto_w		pls_prestador.nr_sequencia%type;
ie_regime_atendimento_w      pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w      pls_conta.ie_saude_ocupacional%type;



BEGIN

if (nr_seq_proc_p IS NOT NULL AND nr_seq_proc_p::text <> '') then
	select	nr_seq_conta,
			cd_procedimento,
			ie_origem_proced,
			qt_procedimento,
			nr_seq_prestador_pgto,
			nr_seq_prest_pgto_medico,
			vl_medico,
			vl_anestesista,
			vl_auxiliares,
			vl_custo_operacional, 
			vl_materiais, 
			vl_procedimento,
			vl_procedimento_imp, 
			vl_prestador, 
			vl_beneficiario,
			0 ,  --zera o vl_glosa propositalmente, para que possa simular corretamente
			vl_unitario,
			vl_pag_medico_conta,
			vl_co_ptu, 
			vl_material_ptu, 
			vl_procedimento_ptu,
			nr_seq_evento,
			nr_seq_evento_prod,
			ie_tipo_despesa,
			dt_procedimento,
			nr_seq_grupo_ans,
			nr_seq_honorario_crit,
			nr_seq_hon_crit_medico,
			nr_seq_exame_coleta,
			coalesce(vl_exame_coleta,0),
			ie_status,
			ie_tipo_liberacao,
			coalesce(vl_procedimento,0), --aqui seta o vl_calculado como liberado propositalmente
			'N', --ie_glosa seta para N para simular corretamente
			vl_calc_hi_util,
			vl_calc_co_util,
			vl_calc_mat_util
	into STRICT	nr_seq_conta_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_item_w,
			nr_seq_prest_pgto_proc_w,
			nr_seq_prest_pgto_medico_w,
			vl_medico_w,
			vl_anestesista_w,
			vl_auxiliares_w,
			vl_custo_operacional_w, 
			vl_materiais_w,
			vl_procedimento_w,
			vl_procedimento_imp_w,
			vl_prestador_w, 
			vl_beneficiario_w,
			vl_glosa_w, 
			vl_unitario_w,
			vl_pag_medico_conta_w,
			vl_co_ptu_w,
			vl_material_ptu_w, 
			vl_procedimento_ptu_w,
			nr_seq_evento_w,
			nr_seq_producao_w,
			ie_tipo_despesa_w,
			dt_procedimento_w,
			nr_seq_grupo_ans_w,
			nr_seq_honorario_crit_w,
			nr_seq_hon_crit_medico_w,
			nr_seq_exame_coleta_w,
			vl_exame_coleta_w,
			ie_status_ww,
			ie_tipo_liberacao_w,
			vl_lib_item_w,
			ie_glosa_w,
			vl_calc_hi_w,
			vl_calc_co_w,
			vl_calc_mat_w
	from	pls_conta_proc
	where	nr_sequencia = nr_seq_proc_p;
	
	vl_liberado_w	:= vl_lib_item_w;
	vl_lib_orig_w	:= vl_lib_item_w;
	
	
	select	sum(p.vl_calculado)
	into STRICT	vl_total_partic_calc_w
	from	pls_conta_proc		a,
			pls_proc_participante	p
	where	a.nr_sequencia		= nr_seq_proc_p
	and		p.nr_seq_conta_proc	= a.nr_sequencia
	and		coalesce(p.ie_status,'U') <> 'C';
		
	vl_total_partic_w := vl_total_partic_calc_w;
		
	vl_total_partic_w 	:= coalesce(vl_total_partic_w,0) + coalesce(vl_pag_medico_w,0);
	vl_total_partic_calc_w	:= coalesce(vl_total_partic_calc_w,0) + coalesce(vl_pag_medico_w,0);
	
	if (coalesce(nr_seq_partic_p::text, '') = '') then
		nr_seq_prestador_partic_w := pls_obter_prestador_partic(nr_seq_proc_p);
	else
		select	b.nr_seq_prestador_pgto,
			b.cd_medico,
			b.vl_calculado,
			b.nr_seq_grau_partic,
			b.nr_seq_honorario_crit,
			b.nr_seq_prestador,
			a.ie_status
		into STRICT 	nr_seq_prest_pgto_partic_w,
			cd_medico_w,
			vl_participante_w,
			nr_seq_grau_partic_w,
			nr_seq_hon_crit_partic_w,
			nr_seq_prestador_partic_w,
			ie_status_ww
		from	pls_conta_proc		a,
			pls_proc_participante	b
		where 	a.nr_sequencia 		= b.nr_seq_conta_proc
		and	b.nr_sequencia		= nr_seq_partic_p;
	end if;
	
	nr_seq_item_w		:= nr_seq_proc_p;
	ie_proc_mat_w		:= 'P';
	ds_item_w		:= substr(obter_descricao_procedimento(cd_procedimento_w, ie_origem_proced_w),1,255);
	ie_tipo_despesa_proc_w	:= ie_tipo_despesa_w;

end if;

vl_liberado_ww	:= vl_liberado_w;
vl_glosa_orig_w	:= vl_glosa_w;

select	nr_seq_prestador_exec,
		cd_medico_executor,
		nr_seq_competencia,
		nr_seq_protocolo,
		cd_estabelecimento,
		nr_seq_segurado,
		cd_guia,
		cd_guia_referencia,
		cd_guia_prestador,
		ie_status,
		ie_tipo_guia,
		ie_origem_conta,
		nr_seq_tipo_atendimento,
		cd_cooperativa,
		coalesce(dt_atendimento_referencia, coalesce(dt_autorizacao, coalesce(dt_entrada, clock_timestamp()))) dt_conta,
		cd_medico_solicitante,
		ie_regime_atendimento,
		ie_saude_ocupacional
into STRICT	nr_seq_prestador_exec_w,
		cd_medico_executor_w,
		nr_seq_competencia_w,
		nr_seq_protocolo_w,
		cd_estabelecimento_w,
		nr_seq_segurado_w,
		cd_guia_w,
		cd_guia_referencia_w,
		cd_guia_prestador_w,
		ie_status_w,
		ie_tipo_guia_w,
		ie_origem_conta_w,
		nr_seq_tipo_atendimento_w,
		cd_cooperativa_w,
		dt_conta_w,
		cd_medico_solicitante_w,
		ie_regime_atendimento_w,
		ie_saude_ocupacional_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

select	dt_mes_competencia,
		nr_seq_prestador,
		nr_seq_periodo_pgto,
		nr_seq_prestador,
		nr_protocolo_prestador,
		nr_seq_prot_referencia,
		ie_status,
		dt_mes_competencia,
		coalesce(ie_tipo_protocolo,'C'),
		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_recebimento)
into STRICT 	dt_mes_competencia_w,
		nr_seq_prestador_atend_w,
		nr_seq_periodo_pgto_w,
		nr_seq_prestador_prot_w,
		nr_protocolo_prestador_w,
		nr_seq_prot_referencia_w,
		ie_status_prot_w,
		dt_protocolo_w,
		ie_tipo_protocolo_w,
		dt_mesano_recebimento_w
from	pls_protocolo_conta
where 	nr_sequencia = nr_seq_protocolo_w;

select	coalesce(max(ie_tipo_data_pagamento),'M')
into STRICT	ie_tipo_data_pagamento_w
from	pls_parametro_pagamento
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_tipo_data_pagamento_w = 'M') then
	dt_competencia_pgto_w := dt_protocolo_w;
elsif (ie_tipo_data_pagamento_w = 'P') then
	dt_competencia_pgto_w := clock_timestamp();
elsif (ie_tipo_data_pagamento_w = 'R') then
	dt_competencia_pgto_w := dt_mesano_recebimento_w;
end if;

if (coalesce(dt_competencia_pgto_w::text, '') = '') then
	dt_competencia_pgto_w := dt_mes_competencia_w;
end if;

if (nr_seq_proc_p IS NOT NULL AND nr_seq_proc_p::text <> '') then
	dt_preco_w := pls_obter_data_preco_item(nr_seq_proc_p, 'P');

	select	max(b.nr_seq_prestador)
	into STRICT	nr_seq_prestador_solic_w
	from	pls_conta_proc		c,
			pls_conta		a,
			pls_prestador_medico	b,
			pls_prestador		d
	where	a.cd_medico_solicitante	= b.cd_medico
	and		c.nr_seq_conta		= a.nr_sequencia
	and		b.nr_seq_prestador	= d.nr_sequencia
	and		d.cd_estabelecimento	= cd_estabelecimento_w
	and		c.nr_sequencia		= nr_seq_proc_p
	and		b.ie_situacao		= 'A'
	and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_preco_w) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(b.dt_inclusao,dt_preco_w)) and
                                                                    ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(b.dt_exclusao,dt_preco_w));
	
	if (coalesce(nr_seq_prestador_solic_w,0) = 0) then
		select	max(b.nr_seq_prestador)
		into STRICT	nr_seq_prestador_solic_w
		from	pls_conta		a,
				pls_prestador_medico	b,
				pls_guia_plano		c,
				pls_prestador		d
		where	a.cd_medico_solicitante = b.cd_medico
		and		a.cd_guia			= c.cd_guia
		and		b.nr_seq_prestador	= d.nr_sequencia
		and		d.cd_estabelecimento	= cd_estabelecimento_w
		and		a.nr_sequencia		= nr_seq_proc_p
		and		b.ie_situacao		= 'A'
		and	  ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_preco_w) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(b.dt_inclusao,dt_preco_w)) and
                                                                      ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(b.dt_exclusao,dt_preco_w));
	end if;

end if;


ie_medico_solic_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_solicitante_w, dt_material_w, null);

if (ie_medico_solic_coope_w = 'S') then
	ie_medico_solic_coope_w := 'C';
end if;


ie_medico_exec_coope_w	:= pls_obter_se_cooperado_ativo(cd_medico_executor_w,dt_material_w,null);
	
if (ie_medico_exec_coope_w = 'S') then
	ie_medico_exec_coope_w := 'C';
end if;

if (coalesce(nr_seq_competencia_w,0) = 0) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_competencia_w
	from	pls_competencia
	where	ESTABLISHMENT_TIMEZONE_UTILS.startOfmonth(dt_mes_competencia)	= ESTABLISHMENT_TIMEZONE_UTILS.startOfmonth(dt_mes_competencia_w)
	and		cd_estabelecimento			= cd_estabelecimento_w;
end if;

if (ie_tipo_resumo_p	= 'P') then

	if (ie_status_ww = 'P') or (ie_status_ww = 'A') then
		vl_liberado_w := 0;
		vl_provisorio_w := vl_liberado_ww - vl_total_partic_w;
	else
		vl_liberado_w		:= vl_liberado_ww - vl_total_partic_w;
		vl_provisorio_w		:= 0;
	end if;
		
	vl_calculado_w		:= vl_procedimento_w - vl_total_partic_calc_w;	
	nr_seq_prestador_pgto_w	:= coalesce(nr_seq_prest_pgto_proc_w, nr_seq_prestador_exec_w);
	cd_pessoa_fisica_w	:= cd_medico_executor_w;
	vl_apresentado_w	:= vl_procedimento_imp_w;
	dt_item_w		:= dt_procedimento_w;
	cd_cooperativa_w	:= '';
	
	if ( ie_tipo_despesa_proc_w	= '1' ) and ( vl_procedimento_w	> 0 )then
		vl_co_pag_w		:= dividir(( vl_calc_co_w * vl_lib_item_w ),vl_procedimento_w);
		vl_materiais_pag_w	:= dividir(( vl_calc_mat_w * vl_lib_item_w ), vl_procedimento_w );
		if ( vl_total_partic_w	> 0) then
			vl_hm_w	:= 0;
		else
			vl_hm_w	:= dividir(( vl_calc_hi_w * vl_lib_item_w ),vl_procedimento_w );
			
		end if;
	else
		vl_co_pag_w		:= vl_liberado_w;
		vl_materiais_pag_w	:= 0;
		vl_hm_w			:= 0;
	end if;
	
elsif (ie_tipo_resumo_p	= 'C') then
	
	if (ie_status_ww = 'P') or (ie_status_ww = 'A') then
		vl_liberado_w := 0;
		vl_provisorio_w := vl_pag_medico_conta_w;
	else
		vl_liberado_w		:= vl_pag_medico_conta_w;
		vl_provisorio_w		:= 0;
	end if;
	
	nr_seq_prestador_pgto_w	:= nr_seq_prest_pgto_medico_w;
	cd_pessoa_fisica_w		:= cd_medico_executor_w;
	vl_calculado_w			:= vl_pag_medico_conta_w;
	vl_apresentado_w		:= vl_procedimento_imp_w;
	vl_custo_operacional_w	:= 0;
	vl_materiais_w			:= 0;
	dt_item_w				:= dt_procedimento_w;
	cd_cooperativa_w		:= '';
	nr_seq_honorario_crit_w	:= nr_seq_hon_crit_medico_w;
	nr_seq_exame_coleta_w	:= null;
	vl_exame_coleta_w		:= 0;
	vl_co_pag_w				:= 0;
	vl_materiais_pag_w		:= 0;
	vl_hm_w					:= vl_liberado_w;
elsif (ie_tipo_resumo_p	= 'R') then
	
	if (ie_status_ww = 'P') or (ie_status_ww = 'A') then
		vl_liberado_w := 0;
		vl_provisorio_w 	:= vl_participante_w;
	else
		vl_liberado_w		:= vl_participante_w;
		vl_provisorio_w		:= 0;
	end if;
	
	nr_seq_prestador_pgto_w := coalesce(nr_seq_prest_pgto_partic_w, nr_seq_prestador_exec_w);
	cd_pessoa_fisica_w		:= cd_medico_w;
	vl_calculado_w			:= vl_participante_w;
	vl_apresentado_w		:= vl_procedimento_imp_w;
	vl_custo_operacional_w	:= 0;
	vl_materiais_w			:= 0;
	dt_item_w				:= dt_procedimento_w;
	cd_cooperativa_w		:= '';
	nr_seq_honorario_crit_w	:= nr_seq_hon_crit_partic_w;
	nr_seq_exame_coleta_w	:= null;
	vl_exame_coleta_w		:= 0;
	vl_co_pag_w				:= 0;
	vl_materiais_pag_w		:= 0;
	vl_hm_w					:= vl_liberado_w;

end if;


begin
select	a.nr_seq_contrato,
		b.ie_tipo_contratacao
into STRICT	nr_seq_contrato_w,
		ie_tipo_contratacao_w
from	pls_plano b,
		pls_segurado a
where	a.nr_seq_plano	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_segurado_w;
exception
	when others then

	select	max(a.nr_seq_contrato)
	into STRICT	nr_seq_contrato_w
	from	pls_segurado a
	where	a.nr_sequencia	= nr_seq_segurado_w;

end;

ie_filantropia_w	:= pls_obter_se_estip_filantropia(nr_seq_contrato_w, dt_mes_competencia_w);
if (ie_filantropia_w = 'S') then
	ie_tipo_contratacao_w	:= 'CI';
end if;

vl_unitario_calculado_w	:= dividir(vl_calculado_w, qt_item_w);
nm_prestador_exec_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_exec_w,'N'),1,255);
ds_tipo_item_w		:= substr(obter_valor_dominio(3963, ie_tipo_resumo_p),1,255);

vl_taxa_adm_w		:= 0;
vl_taxa_adm_co_w	:= 0;
vl_taxa_adm_mat_w	:= 0;

SELECT * FROM pls_define_valor_evento_pgto(	nr_seq_prestador_pgto_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_material_w, nm_usuario_p, cd_estabelecimento_w, dt_mes_competencia_w, ie_tipo_despesa_proc_w, ie_tipo_despesa_mat_w, ie_tipo_resumo_p, nr_seq_item_w, pr_liberado_w, pr_custo_operacional_w, pr_materiais_w, nr_seq_regra_valor_w) INTO STRICT pr_liberado_w, pr_custo_operacional_w, pr_materiais_w, nr_seq_regra_valor_w;	
				
if (vl_exame_coleta_w < 0) then
	vl_exame_coleta_w	:= 0;
end if;	

vl_liberado_ww	:= vl_liberado_w;
if (ie_proc_mat_w = 'P') then
	select	count(1)
	into STRICT	qt_participante_w
	from	pls_proc_participante
	where	nr_seq_conta_proc = nr_seq_item_w
	and	(nr_seq_prestador IS NOT NULL AND nr_seq_prestador::text <> '');
	
	if (qt_participante_w > 0) then
		ie_existe_prest_partic_w := 'S';
	end if;
end if;

if (coalesce(nr_prest_pgto_coleta_p,0) > 0) then
	nr_seq_prestador_pgto_w	:= nr_prest_pgto_coleta_p;
	
	if (vl_exame_coleta_w > 0) then
		SELECT * FROM pls_obter_evento_item(	cd_procedimento_w, ie_origem_proced_w, null, cd_estabelecimento_w, ie_tipo_guia_w, ie_origem_conta_w, nr_seq_tipo_atendimento_w, ie_tipo_despesa_w, nr_seq_segurado_w, nr_seq_conta_w, 'S', null, nr_seq_evento_w, nr_seq_regra_evento_w, 'C', ie_regime_atendimento_w, ie_saude_ocupacional_w) INTO STRICT nr_seq_evento_w, nr_seq_regra_evento_w;
	end if;
else
	SELECT * FROM pls_obter_prestador_pgto(	nr_seq_prestador_prot_w, nr_seq_prestador_exec_w, nr_seq_prestador_partic_w, vl_apresentado_w, vl_calculado_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_material_w, nr_seq_prest_fornec_w, nm_usuario_p, ie_origem_conta_w, ie_tipo_guia_w, ie_existe_prest_partic_w, dt_conta_w, 'CM', nr_seq_prestador_pgto_w, nr_seq_regra_w, ie_define_pagamento_w, ie_cobrar_material_w, ie_cobrar_co_w) INTO STRICT nr_seq_prestador_pgto_w, nr_seq_regra_w, ie_define_pagamento_w, ie_cobrar_material_w, ie_cobrar_co_w;
			
			
	if (coalesce(nr_seq_regra_w,0) > 0) and (ie_define_pagamento_w = 'A') and (ie_proc_mat_w = 'P') then

		select	max(nr_seq_prestador)
		into STRICT	nr_seq_prestador_partic_pgto_w
		from	pls_proc_participante
		where	nr_seq_conta_proc = nr_seq_item_w
		and		(nr_seq_prestador IS NOT NULL AND nr_seq_prestador::text <> '');
		
		select	count(1)
		into STRICT	qt_item_regra_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta_proc 	= nr_seq_item_w
		and		nr_seq_conta		= nr_seq_conta_w
		and		(nr_seq_regra_pgto IS NOT NULL AND nr_seq_regra_pgto::text <> '')
		and		ie_tipo_item 	= ie_tipo_resumo_p
		and		((ie_situacao != 'I') or (coalesce(ie_situacao::text, '') = ''));
		
		if (nr_seq_prestador_partic_pgto_w IS NOT NULL AND nr_seq_prestador_partic_pgto_w::text <> '') and (qt_item_regra_w = 0 )then
			nr_seq_prestador_pgto_w := nr_seq_prestador_partic_pgto_w;
		end if;

	elsif (coalesce(nr_seq_regra_w,0) > 0) and (ie_define_pagamento_w = 'M') and (ie_proc_mat_w = 'P') then
		
		
		if (cd_medico_executor_w IS NOT NULL AND cd_medico_executor_w::text <> '') then
			select max(nr_sequencia)
			into STRICT	nr_seq_prest_vinc_direto_w
			from	pls_prestador
			where 	cd_pessoa_fisica = cd_medico_executor_w;
		end if;
		
		select	count(1)
		into STRICT	qt_item_regra_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta_proc 	= nr_seq_item_w
		and		nr_seq_conta		= nr_seq_conta_w
		and		(nr_seq_regra_pgto IS NOT NULL AND nr_seq_regra_pgto::text <> '')
		and		ie_tipo_item 	= ie_tipo_resumo_p
		and		((ie_situacao != 'I') or (coalesce(ie_situacao::text, '') = ''));
		
		if (nr_seq_prest_vinc_direto_w IS NOT NULL AND nr_seq_prest_vinc_direto_w::text <> '') and (qt_item_regra_w = 0 )then
			nr_seq_prestador_pgto_w := nr_seq_prest_vinc_direto_w;
		end if;
		
	end if;
end if;

nm_prestador_pgto_w	:= substr(pls_obter_dados_prestador(nr_seq_prestador_pgto_w,'N'),1,255);


if (coalesce( nr_seq_exame_coleta_w,0) = 0) then
	/*Rotina que ira atualizar as taxas administrativas */

	SELECT * FROM pls_obter_valor_pagamento(	pr_liberado_w, vl_materiais_w, vl_custo_operacional_w, vl_taxa_adm_mat_w, vl_taxa_adm_co_w, pr_materiais_w, pr_custo_operacional_w, vl_liberado_w, vl_taxa_adm_w) INTO STRICT vl_taxa_adm_mat_w, vl_taxa_adm_co_w, pr_materiais_w, pr_custo_operacional_w, vl_liberado_w, vl_taxa_adm_w;
					
	vl_taxa_adm_pag_w	:=  coalesce(vl_taxa_adm_mat_w,0) + coalesce(vl_taxa_adm_co_w,0) + coalesce(vl_taxa_adm_w,0);
end if;	

if (ie_proc_mat_w	= 'P') then
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_conta_medica_resumo
	where	nr_seq_conta_proc	= nr_seq_item_w
	and		nr_seq_conta		= nr_seq_conta_w;

end if;

if (qt_registro_w	> 0) then
	ie_contador_w	:= 'N';
else
	ie_contador_w	:= 'S';
end if;

if (vl_glosa_w > 0) and (vl_lib_item_w > 0) 	then
	
	vl_glosa_w := dividir_sem_round((vl_glosa_w * vl_liberado_w ),vl_lib_item_w);
end if;

if (coalesce(nr_prest_pgto_coleta_p,0) > 0) then
	vl_medico_w		:= 0;
	vl_anestesista_w	:= 0;
	vl_auxiliares_w		:= 0;
	vl_custo_operacional_w	:= 0;
	vl_materiais_w		:= 0;
	vl_apresentado_w	:= 0;
	vl_beneficiario_w	:= 0;
end if;

nr_sequencia_w := pls_obter_seq_cmed_resumo(nr_seq_conta_w);

if (nr_prest_pgto_coleta_p	= 0) then
	nr_seq_exame_coleta_w	:= null;
end if;

if (coalesce(vl_liberado_ww,0) = 0) or (coalesce(vl_lib_item_w,0) = 0)then
	vl_liberado_w 		:= 0;
	vl_taxa_adm_pag_w	:= 0;
	vl_hm_w				:= 0;
	vl_co_pag_w			:= 0;
	vl_materiais_pag_w	:= 0;
	vl_taxa_adm_mat_w	:= 0;
	vl_taxa_adm_co_w	:= 0;
	vl_taxa_adm_w		:= 0;
end if;

if (coalesce(vl_provisorio_w,0) > 0) or (coalesce(vl_liberado_w,0) > 0) or ( ie_glosa_w = 'S') or
	((vl_lib_orig_w	= 0) and (ie_status_ww 	in ('S','L')) and (qt_item_w	> 0) and ( ie_tipo_resumo_p = 'P'))then
	
	SELECT * FROM pls_obter_tipo_ato_cooperado(	cd_procedimento_w, ie_origem_proced_w, nr_seq_item_w, ie_proc_mat_w, nr_seq_prestador_exec_w, nr_seq_prestador_solic_w, nr_seq_prestador_atend_w, nr_seq_prestador_pgto_w, ie_medico_solic_coope_w, ie_medico_exec_coope_w, nr_seq_material_w, ie_tipo_protocolo_w, ie_tipo_guia_w, ie_tipo_despesa_proc_w, ie_tipo_despesa_mat_w, nr_seq_regra_cooperado_w, ie_ato_cooperado_w) INTO STRICT nr_seq_regra_cooperado_w, ie_ato_cooperado_w;
		

	vl_apres_ind_w := vl_liberado_ww + vl_glosa_w;		
	
	insert into pls_conta_medica_resumo(nr_seq_conta, nr_sequencia, nr_seq_item,
		dt_atualizacao, nm_usuario, cd_procedimento,
		ie_origem_proced, nr_seq_material, qt_item,
		nr_seq_prestador_pgto, cd_pessoa_fisica, nr_seq_competencia,
		vl_medico, vl_anestesista, vl_auxiliares,
		vl_custo_operacional, vl_materiais, vl_calculado,
		vl_apresentado, vl_liberado, vl_beneficiario,
		nr_seq_lote_pgto, nr_seq_evento, nr_seq_producao,
		nr_seq_segurado, cd_guia, nr_seq_prestador_atend,
		nr_seq_participante, nr_seq_grau_partic, vl_glosa,
		vl_unitario, vl_unitario_calculado, cd_guia_referencia,
		dt_competencia, ie_status, ie_tipo_guia,
		ds_item, nm_prestador_pgto, ie_tipo_item,
		ds_tipo_item, nr_seq_prestador_exec, nm_prestador_exec,
		nr_seq_tipo_atendimento, ie_origem_conta, ie_tipo_despesa,
		nr_seq_pag_item, ie_tipo_contratacao, nr_seq_regra_valor,
		pr_liberado, nr_seq_prest_venc_trib, nr_seq_protocolo,
		ie_proc_mat, ie_status_protocolo, nr_seq_periodo_pgto,
		vl_taxa_adm, nr_seq_exame_coleta, nr_seq_honorario_crit,
		vl_taxa_adm_co, vl_taxa_adm_mat, pr_taxa_adm_co,
		pr_taxa_adm_mat, nr_seq_prot_referencia, nr_seq_grupo_ans,
		nr_seq_fatura, cd_cooperativa_pgto,
		cd_guia_prestador, dt_item, dt_competencia_pgto,
		nr_protocolo_prestador, vl_lib_original, nr_seq_regra_pgto,
		ie_contador, ds_log, vl_provisorio,
		nr_seq_conta_proc, nr_seq_conta_mat, nr_seq_conta_proc_partic,
		ie_situacao, vl_taxa_adm_pag, vl_hm, vl_co_pag, vl_materiais_pag,
		nr_seq_regra_cooperado, ie_ato_cooperado, vl_apres_ind,
		dt_atualizacao_nrec, ie_regime_atendimento, ie_saude_ocupacional)
	values (nr_seq_conta_w, nr_sequencia_w, nr_seq_item_w,
		clock_timestamp(), nm_usuario_p, cd_procedimento_w,
		ie_origem_proced_w, nr_seq_material_w, qt_item_w,
		nr_seq_prestador_pgto_w, cd_pessoa_fisica_w, nr_seq_competencia_w,
		vl_medico_w, vl_anestesista_w, vl_auxiliares_w,
		vl_custo_operacional_w, vl_materiais_w, vl_calculado_w,
		vl_apresentado_w, vl_liberado_w, vl_beneficiario_w,
		null, nr_seq_evento_w, nr_seq_producao_w,
		nr_seq_segurado_w, cd_guia_w, nr_seq_prestador_atend_w,
		nr_seq_partic_p, nr_seq_grau_partic_w, vl_glosa_w,
		vl_unitario_w, vl_unitario_calculado_w, cd_guia_referencia_w,
		dt_mes_competencia_w, ie_status_w, ie_tipo_guia_w,
		ds_item_w, nm_prestador_pgto_w, ie_tipo_resumo_p,
		ds_tipo_item_w, nr_seq_prestador_exec_w, nm_prestador_exec_w,
		nr_seq_tipo_atendimento_w, ie_origem_conta_w, ie_tipo_despesa_w,
		null, ie_tipo_contratacao_w, nr_seq_regra_valor_w,
		pr_liberado_w, null, nr_seq_protocolo_w,
		ie_proc_mat_w, ie_status_prot_w, nr_seq_periodo_pgto_w,
		vl_taxa_adm_w, nr_seq_exame_coleta_w, nr_seq_honorario_crit_w,
		vl_taxa_adm_co_w, vl_taxa_adm_mat_w, pr_custo_operacional_w,
		pr_materiais_w, nr_seq_prot_referencia_w, nr_seq_grupo_ans_w,
		null, cd_cooperativa_w,
		cd_guia_prestador_w, dt_item_w, dt_competencia_pgto_w,
		nr_protocolo_prestador_w, vl_liberado_ww, nr_seq_regra_w,
		ie_contador_w, ds_log_p, vl_provisorio_w,
		nr_seq_proc_p, nr_seq_mat_p, nr_seq_partic_p,
		'A', vl_taxa_adm_pag_w, vl_hm_w, vl_co_pag_w, vl_materiais_pag_w, 
		nr_seq_regra_cooperado_w, ie_ato_cooperado_w, vl_apres_ind_w,
		clock_timestamp(), ie_regime_atendimento_w, ie_saude_ocupacional_w);
		
	if (nr_seq_proc_p IS NOT NULL AND nr_seq_proc_p::text <> '') then
		select 	sum(vl_glosa),
				sum(vl_lib_original)
		into STRICT	vl_glosa_tot_w,
				vl_liberado_tot_w
		from	pls_conta_medica_resumo
		where	nr_seq_conta_proc	= nr_seq_proc_p
		and		nr_seq_conta		= nr_seq_conta_w
		and		ie_situacao			= 'A'
		and		ie_tipo_item		!= 'I';

	end if;
	
	if (vl_liberado_tot_w	= vl_lib_item_w) and (vl_glosa_tot_w	!= vl_glosa_orig_w)then
		
		vl_dif_w := vl_glosa_tot_w - vl_glosa_orig_w;		
		if (vl_dif_w <= vl_glosa_w) then
			update	pls_conta_medica_resumo
			set		vl_glosa		= vl_glosa - vl_dif_w,
					vl_apres_ind	= vl_liberado_ww + vl_glosa - vl_dif_w
			where	nr_sequencia	= nr_sequencia_w
			and		nr_seq_conta	= nr_seq_conta_w;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_res_item_simulacao ( nr_seq_proc_p bigint, nr_seq_partic_p bigint, nr_seq_mat_p bigint, ie_tipo_resumo_p text, nr_prest_pgto_coleta_p bigint, nm_usuario_p text, ds_log_p text) FROM PUBLIC;

