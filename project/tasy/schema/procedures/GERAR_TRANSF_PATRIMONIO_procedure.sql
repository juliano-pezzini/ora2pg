-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transf_patrimonio ( nr_seq_bem_p bigint, dt_transferencia_p timestamp, nr_seq_local_p bigint, cd_conta_contabil_p text, nr_seq_regra_conta_p bigint, nr_seq_trans_fin_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_observacao_p text default null, nr_seq_tipo_hist_p bigint default null, ie_commit_p text default 'S', cd_centro_custo_p bigint default null) AS $body$
DECLARE



cd_centro_custo_w	integer;
cd_estab_bem_w		bigint;
cd_estab_local_w	bigint;
cd_estab_origem_w	bigint;
cd_bem_w		varchar(20);
ds_bem_w		varchar(255);
ds_erro_w		varchar(255);
ie_tipo_valor_w		varchar(3);
ie_situacao_w		varchar(01);
nr_seq_princ_w		bigint;
nr_seq_bem_w		bigint;
nr_seq_hist_w		bigint;
nr_seq_ant_local_w	bigint;
nr_seq_tipo_historico_w	bigint;
qt_registro_w		bigint;
cd_centro_custo_ant_w	integer;


c01 CURSOR FOR
	SELECT	nr_sequencia
	from	pat_bem
	where	nr_seq_princ	= nr_seq_princ_w
	and	ie_situacao	= 'A';


BEGIN
ds_erro_w := null;

select	max(CASE WHEN a.ie_tipo_valor='O' THEN  a.nr_sequencia  ELSE a.nr_seq_princ END ),
	max(coalesce(a.ie_situacao,'I')),
	max(a.ie_tipo_valor),
	max(a.cd_bem),
	max(a.ds_bem),
	max(a.cd_centro_custo)
into STRICT	nr_seq_princ_w,
	ie_situacao_w,
	ie_tipo_valor_w,
	cd_bem_w,
	ds_bem_w,
	cd_centro_custo_ant_w
from	pat_bem a
where	a.nr_sequencia	= nr_seq_bem_p;

if (ie_tipo_valor_w in ('L','A')) and (coalesce(nr_seq_princ_w,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(230436,'CD_BEM_W='||cd_bem_w||';DS_BEM_W='||ds_bem_w);
end if;

if (ie_situacao_w <> 'A') then
	--_application_error(-20111, 'O bem principal esta inativo. || '(Bem: '|| cd_bem_w ||'  -  '|| ds_bem_w||')');
	CALL wheb_mensagem_pck.exibir_mensagem_abort(230439,'CD_BEM_W='||cd_bem_w||';DS_BEM_W='||ds_bem_w);
end if;

select	max(nr_seq_local),
	max(cd_estabelecimento)
into STRICT	nr_seq_ant_local_w,
	cd_estab_bem_w
from	pat_bem
where	nr_sequencia = nr_seq_princ_w;

nr_seq_tipo_historico_w	:= coalesce(nr_seq_tipo_hist_p,0);

if (coalesce(nr_seq_tipo_historico_w,0) = 0) then
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_tipo_historico_w
	from	pat_tipo_historico
	where	ie_situacao = 'A'
	and	ie_transferencia = 'S';
end if;

if (nr_seq_tipo_historico_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(230440);
end if;

begin
select	coalesce(max(cd_centro_custo),0),
	max(cd_estabelecimento)
into STRICT	cd_centro_custo_w,
	cd_estab_local_w
from	pat_local
where	nr_sequencia = nr_seq_local_p;

if (coalesce(cd_centro_custo_p,0) <> 0) then
	cd_centro_custo_w := cd_centro_custo_p;
end if;

select	max(cd_estabelecimento)
into STRICT	cd_estab_origem_w
from	pat_local
where	nr_sequencia	= nr_seq_ant_local_w;

if (cd_centro_custo_w = 0) then
	ds_erro_w := ds_erro_w || WHEB_MENSAGEM_PCK.get_texto(280703);
end if;
end;

if (cd_estab_local_w <> cd_estab_bem_w) then
	cd_estab_bem_w	:= cd_estab_local_w;
end if;

if (coalesce(ds_erro_w, 'X') = 'X') then
	begin
	open c01;
	loop
	fetch c01 into
		nr_seq_bem_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	nextval('pat_historico_bem_seq')
		into STRICT	nr_seq_hist_w
		;

		insert	into pat_historico_bem(nr_sequencia,
			nr_seq_bem,
			dt_atualizacao,
			nm_usuario,
			dt_historico,
			nr_seq_tipo,
			nr_seq_local_ant,
			nr_seq_local_atual,
			vl_historico,
			cd_estab_origem,
			cd_estab_destino,
			ds_observacao,
			cd_centro_custo_ant,
			cd_centro_custo_atual)
		values (nr_seq_hist_w,
			nr_seq_bem_w,
			clock_timestamp(),
			nm_usuario_p,
			dt_transferencia_p,
			nr_seq_tipo_historico_w,
			nr_seq_ant_local_w,
			nr_seq_local_p,
			0,
			cd_estab_origem_w,
			cd_estab_local_w,
			ds_observacao_p,
			cd_centro_custo_ant_w,
			cd_centro_custo_w);

		update	pat_bem
		set	nr_seq_local		= nr_seq_local_p,
			cd_centro_custo		= cd_centro_custo_w,
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			cd_estabelecimento	= cd_estab_bem_w
		where	nr_sequencia		= nr_seq_bem_w;

		/*
		Gerar movimento de transferencia dos bens vinculados
		*/
		pat_gerar_movto_transf(
			cd_estab_origem_w,
			cd_centro_custo_ant_w,
			cd_centro_custo_w,
			nr_seq_bem_w,
			nr_seq_ant_local_w,
			nr_seq_local_p,
			nr_seq_regra_conta_p,
			0,
			dt_transferencia_p,
			nm_usuario_p
			);
		end;
	end loop;
	close c01;

	select	nextval('pat_historico_bem_seq')
	into STRICT	nr_seq_hist_w
	;

	insert	into pat_historico_bem(nr_sequencia,
		nr_seq_bem,
		dt_atualizacao,
		nm_usuario,
		dt_historico,
		nr_seq_tipo,
		nr_seq_local_ant,
		nr_seq_local_atual,
		vl_historico,
		cd_estab_origem,
		cd_estab_destino,
		ds_observacao,
		cd_centro_custo_ant,
		cd_centro_custo_atual)
	values (nr_seq_hist_w,
		nr_seq_princ_w,
		clock_timestamp(),
		nm_usuario_p,
		dt_transferencia_p,
		nr_seq_tipo_historico_w,
		nr_seq_ant_local_w,
		nr_seq_local_p,
		0,
		cd_estab_origem_w,
		cd_estab_local_w,
		ds_observacao_p,
		cd_centro_custo_ant_w,
		cd_centro_custo_w);

	update	pat_bem
	set	nr_seq_local		= nr_seq_local_p,
		cd_centro_custo		= cd_centro_custo_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		cd_estabelecimento	= cd_estab_bem_w
	where	nr_sequencia		= nr_seq_princ_w;

	/*
	Gerar movimento de transferencia dos bens vinculados
	*/
	pat_gerar_movto_transf(
		cd_estab_origem_w,
		cd_centro_custo_ant_w,
		cd_centro_custo_w,
		nr_seq_princ_w,
		nr_seq_ant_local_w,
		nr_seq_local_p,
		nr_seq_regra_conta_p,
		0,
		dt_transferencia_p,
		nm_usuario_p
		);

	if (coalesce(cd_conta_contabil_p, '0') <> '0') then
		begin
		CALL pat_alterar_conta_contabil(	nr_seq_bem_p,
					cd_conta_contabil_p,
					dt_transferencia_p,
					nr_seq_trans_fin_p,
					nr_seq_regra_conta_p,
					nm_usuario_p,
					cd_centro_custo_p,
					cd_centro_custo_ant_w);
		end;
	end if;
	end;
end if;

ds_erro_p	:= ds_erro_w;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transf_patrimonio ( nr_seq_bem_p bigint, dt_transferencia_p timestamp, nr_seq_local_p bigint, cd_conta_contabil_p text, nr_seq_regra_conta_p bigint, nr_seq_trans_fin_p bigint, nm_usuario_p text, ds_erro_p INOUT text, ds_observacao_p text default null, nr_seq_tipo_hist_p bigint default null, ie_commit_p text default 'S', cd_centro_custo_p bigint default null) FROM PUBLIC;

