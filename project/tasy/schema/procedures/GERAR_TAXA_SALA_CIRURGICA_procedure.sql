-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_taxa_sala_cirurgica (CD_ESTABELECIMENTO_P bigint, NR_ATENDIMENTO_P bigint, DT_ENTRADA_UNIDADE_P timestamp, CD_SETOR_ATENDIMENTO_P bigint, NR_CIRURGIA_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text) AS $body$
DECLARE

dt_atualizacao_w    	timestamp			:= clock_timestamp();
cd_taxa_pri_horario_w    	bigint 		:= 0;
cd_taxa_seg_horario_w    	bigint 		:= 0;
qt_min_seghr_cirurgia_w    smallint 		:= 0;
qt_min_tolerancia_w    	smallint 		:= 0;
ie_origem_proced_w    	bigint 		:= 1;
dt_inicio_cirurgia_w		timestamp;
dt_final_cirurgia_w		timestamp;
qt_min_duracao_w			bigint		:= 0;		
ie_flag_ok       	varchar(1)  		:= 'S';
qt_min_restante_w			bigint		:= 0;		
qt_min_resto_w			bigint		:= 0;		
qt_seg_taxa_int_w			bigint		:= 0;		
nr_sequencia_w    		bigint   := 0;
ie_origem_proced_w2    	bigint 		:= 1;
nr_seq_atepacu_w			bigint;
nr_seq_proc_int_pri_w		bigint;
nr_seq_proc_int_seg_w		bigint;
cd_proc_int_w			bigint;
ie_origem_proc_int_w		bigint;
cd_plano_convenio_w		varchar(10);
cd_tipo_acomodacao_w		smallint;
ie_tipo_atendimento_w		smallint;
dt_procedimento_w		timestamp;
ie_situacao_w			varchar(1);


BEGIN 
/* Obter o codigo do servico da taxa de sala cirurgica(Primeiro Horario) */
 
begin 
select coalesce(max(nr_seq_interno),0) 
into STRICT	nr_seq_atepacu_w 
from 	atend_paciente_unidade 
where nr_atendimento 		= nr_atendimento_p 
 and dt_entrada_unidade	= dt_entrada_unidade_p;
  
select	obter_plano_atendimento(nr_atendimento,'C'), 
	obter_tipo_acomod_atend(nr_atendimento,'C'), 
	ie_tipo_atendimento 
into STRICT	cd_plano_convenio_w, 
	cd_tipo_acomodacao_w, 
	ie_tipo_atendimento_w 
from	atendimento_paciente_v 
where	nr_atendimento	= nr_atendimento_p;
  
select	max(dt_termino) 
into STRICT	dt_final_cirurgia_w 
from	cirurgia 
where	nr_cirurgia	= nr_cirurgia_p;
 
select	cd_taxa_servico, 
	qt_min_seghr_cirurgia, 
	qt_min_tolerancia, 
	ie_origem_proced, 
	nr_seq_proc_interno 
into STRICT	cd_taxa_pri_horario_w, 
	qt_min_seghr_cirurgia_w, 
	qt_min_tolerancia_w, 
	ie_origem_proced_w, 
	nr_seq_proc_int_pri_w 
from	convenio_taxa_servico 
where	cd_estabelecimento	= cd_estabelecimento_p 
and	cd_convenio		= cd_convenio_p 
and	cd_categoria		= cd_categoria_p 
and	ie_taxa_servico		= 3 
and	coalesce(ie_situacao, 'A')	= 'A';
exception 
   when others then 
     ie_flag_ok := 'N';
end;
 
if (coalesce(nr_seq_proc_int_pri_w,0) > 0) then 
	cd_proc_int_w		:= null;
	ie_origem_proc_int_w	:= null;
 
	SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_int_pri_w, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_plano_convenio_w, cd_setor_atendimento_p, cd_proc_int_w, ie_origem_proc_int_w, cd_setor_atendimento_p, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, null, null, null) INTO STRICT cd_proc_int_w, ie_origem_proc_int_w;
			 
		if (coalesce(cd_proc_int_w,0) > 0) and (coalesce(ie_origem_proc_int_w,0) > 0) then 
			cd_taxa_pri_horario_w	:= cd_proc_int_w;
			ie_origem_proced_w	:= ie_origem_proc_int_w;
		end if;
 
end if;
 
/* Obter o codigo do servico da taxa de sala cirurgica(Segundo Horario) */
 
if (ie_flag_ok = 'S') then 
	begin 
	select	cd_taxa_servico, 
		ie_origem_proced, 
		nr_seq_proc_interno 
	into STRICT	cd_taxa_seg_horario_w, 
		ie_origem_proced_w2, 
		nr_seq_proc_int_seg_w 
	from	convenio_taxa_servico 
	where	cd_estabelecimento	= cd_estabelecimento_p 
	and	cd_convenio		= cd_convenio_p 
	and	cd_categoria		= cd_categoria_p 
	and	ie_taxa_servico		= 4 
	and	coalesce(ie_situacao, 'A')	= 'A';
	exception 
   		when others then 
     	ie_flag_ok := 'N';
	end;
	 
	if (coalesce(nr_seq_proc_int_seg_w,0) > 0) then 
		cd_proc_int_w		:= null;
		ie_origem_proc_int_w	:= null;	
	 
		SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_int_seg_w, cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, cd_plano_convenio_w, cd_setor_atendimento_p, cd_proc_int_w, ie_origem_proc_int_w, cd_setor_atendimento_p, dt_procedimento_w, cd_tipo_acomodacao_w, null, null, null, ie_tipo_atendimento_w, null, null, null) INTO STRICT cd_proc_int_w, ie_origem_proc_int_w;
			 
		if (coalesce(cd_proc_int_w,0) > 0) and (coalesce(ie_origem_proc_int_w,0) > 0) then 
			cd_taxa_seg_horario_w	:= cd_proc_int_w;
			ie_origem_proced_w2	:= ie_origem_proc_int_w;
		end if;
 
	end if;
end if;
 
/* Obter dados da cirurgia */
 
if (ie_flag_ok = 'S') then 
	begin 
	select	dt_inicio_real, 
			dt_termino, 
			nr_min_duracao_real 
	into STRICT		dt_inicio_cirurgia_w, 
			dt_final_cirurgia_w, 
			qt_min_duracao_w 
	from		cirurgia 
	where		nr_cirurgia	= nr_cirurgia_p;
	exception 
   		when others then 
     	ie_flag_ok := 'N';
	end;
end if;
 
if (ie_flag_ok = 'S') then 
	begin 
	qt_min_restante_w := (qt_min_duracao_w - 60);
	end;
end if;
 
if (ie_flag_ok = 'S') 				and (qt_min_restante_w > qt_min_tolerancia_w) then 
	begin 
 	qt_seg_taxa_int_w := (qt_min_restante_w / qt_min_seghr_cirurgia_w);
 	qt_min_resto_w  := (qt_min_restante_w - (qt_min_seghr_cirurgia_w * qt_seg_taxa_int_w));
	if (qt_min_resto_w > qt_min_tolerancia_w) then 
		qt_seg_taxa_int_w := (qt_seg_taxa_int_w + 1);
	end if;
	end;
end if;
 
/* Gravar taxa cirurgia Primeiro Horario*/
 
if (ie_flag_ok = 'S') then 
   begin 
  	select 	nextval('procedimento_paciente_seq') 
	into STRICT 		nr_sequencia_w 
   			;
  
   insert into procedimento_paciente(nr_sequencia,nr_atendimento, dt_entrada_unidade, cd_procedimento, 
		 dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, cd_convenio, 
		 cd_categoria, vl_procedimento, vl_medico, vl_anestesista, vl_materiais, 
		 dt_acerto_conta, vl_auxiliares, vl_custo_operacional, tx_medico, 
		 tx_anestesia, nr_cirurgia, nr_doc_convenio, dt_conta, 
		 cd_setor_atendimento, ie_origem_proced, nr_seq_atepacu, nr_seq_proc_interno, ie_auditoria) 
   values (nr_sequencia_w,nr_atendimento_p, dt_entrada_unidade_p, cd_taxa_pri_horario_w, 
		 dt_final_cirurgia_w, 1,dt_atualizacao_w, 'Tasy', cd_convenio_p, 
		 cd_categoria_p, 0, 0, 0, 0, null, 0, 0, 0, 0, nr_cirurgia_p, null, 
       dt_final_cirurgia_w, cd_setor_atendimento_p,ie_origem_proced_w, nr_seq_atepacu_w, nr_seq_proc_int_pri_w, 'N');
 
   commit;	
 
   CALL Atualiza_Preco_Servico(nr_sequencia_w, 
       'Tasy');
   exception 
     when others then 
        ie_flag_ok := 'N';
   end;
end if;
 
/* Gravar taxa cirurgia Segundo Horario*/
 
if (ie_flag_ok = 'S')   and (qt_seg_taxa_int_w > 0) then 
   begin 
	select 	nextval('procedimento_paciente_seq') 
	into STRICT 		nr_sequencia_w 
   			;
  
   insert into procedimento_paciente(nr_sequencia,nr_atendimento, dt_entrada_unidade, cd_procedimento, 
		 dt_procedimento, qt_procedimento, dt_atualizacao, nm_usuario, cd_convenio, 
		 cd_categoria, vl_procedimento, vl_medico, vl_anestesista, vl_materiais, 
		 dt_acerto_conta, vl_auxiliares, vl_custo_operacional, 
       tx_medico, tx_anestesia, nr_cirurgia, nr_doc_convenio, dt_conta, 
		 cd_setor_atendimento, ie_origem_proced, nr_seq_atepacu, nr_seq_proc_interno, ie_auditoria) 
   values (nr_sequencia_w,nr_atendimento_p, dt_entrada_unidade_p, cd_taxa_seg_horario_w, 
		 dt_final_cirurgia_w, qt_seg_taxa_int_w, dt_atualizacao_w, 'Tasy', 
		 cd_convenio_p, cd_categoria_p, 0, 0, 0, 0, null, 0, 0, 0, 0, 
		 nr_cirurgia_p, null, dt_final_cirurgia_w, 
		 cd_setor_atendimento_p,ie_origem_proced_w2, nr_seq_atepacu_w, nr_seq_proc_int_seg_w, 'N');
 
   CALL Atualiza_Preco_Servico(nr_sequencia_w, 
       'Tasy');
   exception 
     when others then 
        ie_flag_ok := 'N';
   end;
end if;
 
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_taxa_sala_cirurgica (CD_ESTABELECIMENTO_P bigint, NR_ATENDIMENTO_P bigint, DT_ENTRADA_UNIDADE_P timestamp, CD_SETOR_ATENDIMENTO_P bigint, NR_CIRURGIA_P bigint, CD_CONVENIO_P bigint, CD_CATEGORIA_P text) FROM PUBLIC;

