-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_boleto_reenvio_escrit ( nr_titulo_p bigint, nr_seq_tit_reenvio_p bigint, cd_banco_p bigint, nr_seq_conta_banco_p bigint, nr_seq_carteira_cobr_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, ds_observacao_p text, ie_alterar_vencimento_p text, dt_vencimento_p timestamp, cd_motivo_portador_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


ds_historico_w			varchar(4000);
cd_banco_w			banco.cd_banco%type;
nr_seq_conta_banco_w		bigint;
nr_seq_carteira_cobr_w		bigint;
cd_tipo_portador_w			integer;
cd_portador_w			bigint;
ie_tipo_titulo_w			varchar(2);
ds_antigo_w			varchar(255);
ds_novo_w			varchar(255);
nr_seq_mensalidade_w		bigint;
dt_vencimento_w			timestamp;
nr_seq_alteracao_w		bigint;
dt_vencimento_novo_w		timestamp;
ds_obervacao_w			varchar(255);


BEGIN
	/* 'Alterado os seguintes dados do titulo: '*/

ds_historico_w	:= substr(wheb_mensagem_pck.get_texto(302450)||chr(13)||chr(10),1,4000);

select	max(cd_banco),
	max(nr_seq_conta_banco),
	max(nr_seq_carteira_cobr),
	max(cd_tipo_portador),
	max(cd_portador),
	max(ie_tipo_titulo),
	max(nr_seq_mensalidade),
	max(dt_vencimento)
into STRICT	cd_banco_w,
	nr_seq_conta_banco_w,
	nr_seq_carteira_cobr_w,
	cd_tipo_portador_w,
	cd_portador_w,
	ie_tipo_titulo_w,
	nr_seq_mensalidade_w,
	dt_vencimento_w
from	titulo_receber
where	nr_titulo	= nr_titulo_p;

if (ie_alterar_vencimento_p = 'S') then
	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_seq_alteracao_w
	from	alteracao_vencimento
	where	nr_titulo = nr_titulo_p;
	
	
	dt_vencimento_novo_w	:= trunc(dt_vencimento_p);
	/*'Data de vencimento alterada de '|| dt_vencimento_w ||' para '|| dt_vencimento_novo_w ||', pois o tipo do titulo foi alterado para "Bloqueto"!'*/

	ds_obervacao_w		:= substr(wheb_mensagem_pck.get_texto(302451, 'DT_VENCIMENTO_W=' || dt_vencimento_w || ';DT_VENCIMENTO_NOVO_W='||dt_vencimento_novo_w),1,255);
	
	
	insert into alteracao_vencimento(nr_sequencia, nr_titulo, dt_anterior,
		dt_vencimento, cd_motivo, dt_atualizacao,
		nm_usuario, dt_alteracao, ds_observacao)
	values (nr_seq_alteracao_w, nr_titulo_p, dt_vencimento_w,
		dt_vencimento_novo_w, 1, clock_timestamp(),
		nm_usuario_p, clock_timestamp(), ds_obervacao_w);

	update	titulo_receber
	set	dt_pagamento_previsto	= dt_vencimento_novo_w
	where	nr_titulo		= nr_titulo_p;
end if;

if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') then
	update	titulo_receber
	set	ds_observacao_titulo	= substr(CASE WHEN ds_observacao_titulo = NULL THEN ds_observacao_p  ELSE ds_observacao_titulo||chr(13)||chr(10)||ds_observacao_p END ,1,4000)
	where	nr_titulo	= nr_titulo_p;
end if;

if (cd_banco_w <> cd_banco_p) and (cd_banco_p IS NOT NULL AND cd_banco_p::text <> '') then
	update	titulo_receber
	set	cd_banco		= cd_banco_p
	where	nr_titulo		= nr_titulo_p;
	
	begin
	select	ds_banco
	into STRICT	ds_antigo_w
	from	banco
	where	cd_banco	= cd_banco_w;
	exception
	when others then
		ds_antigo_w	:= ' ';
	end;
	
	begin
	select	ds_banco
	into STRICT	ds_novo_w
	from	banco
	where	cd_banco	= cd_banco_w;
	exception
	when others then
		ds_novo_w	:= ' ';
	end;
	
	ds_historico_w	:= substr(ds_historico_w || wheb_mensagem_pck.get_texto(302452,'DS_ANTIGO_W='||ds_antigo_w||';DS_NOVO_W='||ds_novo_w) ||chr(13)||chr(10),1,4000);
				
end if;
	
if (nr_seq_conta_banco_w <> nr_seq_conta_banco_p) and (nr_seq_conta_banco_p IS NOT NULL AND nr_seq_conta_banco_p::text <> '') then
	update	titulo_receber
	set	nr_seq_conta_banco	= nr_seq_conta_banco_p
	where	nr_titulo		= nr_titulo_p;
	
	begin
	select	ds_conta
	into STRICT	ds_antigo_w
	from	banco_estabelecimento_v
	where	nr_sequencia	= nr_seq_conta_banco_w;
	exception
	when others then
		ds_antigo_w	:= ' ';
	end;
	
	begin
	select	ds_conta
	into STRICT	ds_novo_w
	from	banco_estabelecimento_v
	where	nr_sequencia	= nr_seq_conta_banco_p;
	exception
	when others then
		ds_novo_w	:= ' ';
	end;
	--'Agencia/Conta bancaria, de '||ds_antigo_w||' para '||ds_novo_w||'.'
	ds_historico_w	:= substr(ds_historico_w || wheb_mensagem_pck.get_texto(302520,'DS_ANTIGO_W=' || ds_antigo_w || ';DS_NOVO_W=' || ds_novo_w) ||chr(13)||chr(10),1,4000);
end if;	
	
if (nr_seq_carteira_cobr_w <> nr_seq_carteira_cobr_p) and (nr_seq_carteira_cobr_p IS NOT NULL AND nr_seq_carteira_cobr_p::text <> '') then
	update	titulo_receber
	set	nr_seq_carteira_cobr	= nr_seq_carteira_cobr_p
	where	nr_titulo		= nr_titulo_p;
	
	begin
	select	ds_carteira
	into STRICT	ds_antigo_w
	from	banco_carteira
	where	nr_sequencia		= nr_seq_carteira_cobr_w
	and	((cd_estabelecimento	= cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = ''));
	exception
	when others then
		ds_antigo_w	:= ' ';
	end;
	
	begin
	select	ds_carteira
	into STRICT	ds_novo_w
	from	banco_carteira
	where	nr_sequencia 		= nr_seq_carteira_cobr_p
	and	((cd_estabelecimento	= cd_estabelecimento_p) or (coalesce(cd_estabelecimento::text, '') = ''));
	exception
	when others then
		ds_novo_w	:= ' ';
	end;
	
	--'Carteira cobranca, de '||ds_antigo_w||' para '||ds_novo_w||'.'
	ds_historico_w	:= substr(ds_historico_w || wheb_mensagem_pck.get_texto(302521,'DS_ANTIGO_W=' || ds_antigo_w || ';DS_NOVO_W=' || ds_novo_w) ||chr(13)||chr(10),1,4000);
end if;

if	((cd_tipo_portador_w <> cd_tipo_portador_p AND cd_tipo_portador_p IS NOT NULL AND cd_tipo_portador_p::text <> '') or
	(cd_portador_w <> cd_portador_p AND cd_portador_p IS NOT NULL AND cd_portador_p::text <> '')) then	
	CALL alterar_portador_tit_rec(nr_titulo_p,
				cd_tipo_portador_p,
				cd_portador_p,
				cd_motivo_portador_p,
				null,
				null,
				'',
				nm_usuario_p);					
	
	select	obter_valor_dominio(703,cd_tipo_portador_w),
		obter_valor_dominio(703,cd_tipo_portador_p)
	into STRICT	ds_antigo_w,
		ds_novo_w
	;
	
	--Tipo portador, de '||ds_antigo_w||' para '||ds_novo_w||'.
	ds_historico_w	:= substr(ds_historico_w || wheb_mensagem_pck.get_texto(302522, 'DS_ANTIGO_W=' || ds_antigo_w || ';DS_NOVO_W=' || ds_novo_w) ||chr(13)||chr(10),1,4000);
	
	begin
	select	ds_portador
	into STRICT	ds_antigo_w
	from	portador
	where	cd_portador = cd_portador_w;
	exception
	when others then
		ds_antigo_w	:= ' ';
	end;
	
	begin
	select	ds_portador
	into STRICT	ds_novo_w
	from	portador
	where	cd_portador = cd_portador_p;
	exception
	when others then
		ds_novo_w	:= ' ';
	end;
	
	--'Portador, de '||ds_antigo_w||' para '||ds_novo_w||'.'
	ds_historico_w	:= substr(ds_historico_w || wheb_mensagem_pck.get_texto(302523, 'DS_ANTIGO_W=' || ds_antigo_w || ';DS_NOVO_W=' || ds_novo_w) ||chr(13)||chr(10),1,4000);
	
end if;

select	obter_valor_dominio(712,ie_tipo_titulo_w)
into STRICT	ds_antigo_w
;

--Tipo titulo, de '||ds_antigo_w||' para Bloqueto(Boleto Bancario).
ds_historico_w	:= substr(ds_historico_w || wheb_mensagem_pck.get_texto(302524,'DS_ANTIGO_W=' || ds_antigo_w),1,4000);

insert into cobr_esc_reenv_tit_hist(nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	dt_historico,
	nr_seq_tit_reenvio,
	ds_historico,
	dt_liberacao)
values (nextval('cobr_esc_reenv_tit_hist_seq'),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	clock_timestamp(),
	nr_seq_tit_reenvio_p,
	ds_historico_w,
	clock_timestamp());
		
update	titulo_receber
set	ie_tipo_titulo		= '1',
	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p
where	nr_titulo		= nr_titulo_p;

update	lote_cobr_esc_reenv_tit
set	dt_geracao_boleto	= clock_timestamp(),
	nm_usuario_boleto	= nm_usuario_p
where	nr_sequencia		= nr_seq_tit_reenvio_p;

CALL gerar_bloqueto_tit_rec(nr_titulo_p, 'CE');

/*Nao dar commit */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_boleto_reenvio_escrit ( nr_titulo_p bigint, nr_seq_tit_reenvio_p bigint, cd_banco_p bigint, nr_seq_conta_banco_p bigint, nr_seq_carteira_cobr_p bigint, cd_tipo_portador_p bigint, cd_portador_p bigint, ds_observacao_p text, ie_alterar_vencimento_p text, dt_vencimento_p timestamp, cd_motivo_portador_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

