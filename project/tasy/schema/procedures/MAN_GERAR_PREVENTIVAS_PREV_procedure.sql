-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_datas_rec_w AS (
		dt_preventiva		timestamp,
		ie_dia_util_prev	varchar(15),
		dt_inicio_desejado	timestamp,
		ie_dia_util_inicio	varchar(15));


CREATE OR REPLACE PROCEDURE man_gerar_preventivas_prev ( nr_seq_planej_prev_p bigint, nr_seq_tipo_equip_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_equipamento_w		bigint;
nr_seq_planej_prev_w		bigint;
dt_aquisicao_w			timestamp;
dt_programacao_w			timestamp;
ie_dt_inicio_geracao_w		varchar(1);
ie_dia_ultima_verif_w		varchar(1);
ie_dia_util_planej_w			varchar(15);
ie_dia_nao_util_planej_w		varchar(15);
dt_inicial_planej_w			timestamp;
qt_dia_previsto_w			integer;
qt_dia_gerar_ordem_w		integer;
qt_dia_freq_w			smallint := 0;
nr_seq_ult_os_prev_w		bigint;
dt_ordem_servico_w		timestamp;
dt_preventiva_w			timestamp;
dt_inicio_desejado_w		timestamp;
ie_dia_util_prev_w			varchar(15);
ie_dia_util_inicio_w			varchar(15);
ie_gravado_fixo_w			varchar(15) := 'N';
cd_estabelecimento_w		smallint := wheb_usuario_pck.get_cd_estabelecimento;
qt_data_prev_w			bigint;
qt_reg_w				bigint;
ie_freq_primeira_prev_w		varchar(255);
ie_qt_dia_ant_inicio_w		varchar(255);
ie_consid_prev_manual_w		varchar(255) := 'N';
ie_converter_mes_w		varchar(1);
type t_datas_tab_w is table of t_datas_rec_w;
v_datas_w	t_datas_tab_w := t_datas_tab_w();

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.nr_sequencia,
		b.dt_aquisicao,
		b.dt_prog_preventiva,
		coalesce(a.ie_data_inicio_geracao,'F'),
		coalesce(a.ie_dia_ultima_verif,'E'),
		a.ie_dia_util,
		a.ie_dia_nao_util,
		coalesce(a.dt_inicial,clock_timestamp()) - CASE WHEN coalesce(ie_qt_dia_ant_inicio_w,'S')='S' THEN a.qt_dia_previsto  ELSE 0 END ,
		a.qt_dia_previsto,
		a.qt_dia_gerar_ordem,
		c.qt_dia,
		c.ie_converter_mes
	from	man_localizacao d,
		man_freq_planej c,
		man_equipamento b,
		man_planej_prev a
	where	a.nr_seq_tipo_equip = b.nr_seq_tipo_equip
	and	a.nr_seq_frequencia = c.nr_sequencia
	and	b.nr_seq_local = d.nr_sequencia
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	coalesce(b.ie_situacao,'A') = 'A'
	and	coalesce(a.ie_contador,'N') = 'N'
	and (coalesce(a.ie_impacto,'T') = 'T' or a.ie_impacto = coalesce(b.cd_impacto,a.ie_impacto))
	and	coalesce(b.nr_seq_marca,0) = coalesce(a.nr_seq_marca,coalesce(b.nr_seq_marca,0))
	and	coalesce(b.nr_seq_modelo,0) = coalesce(a.nr_seq_modelo,coalesce(b.nr_seq_modelo,0))
	and	coalesce(b.cd_estab_contabil,0) = coalesce(a.cd_estabelecimento, coalesce(b.cd_estab_contabil,0))
	and 	d.cd_setor = coalesce(a.cd_setor_atendimento,d.cd_setor)
	and	b.nr_sequencia = coalesce(a.nr_seq_equip,b.nr_sequencia)
	and 	b.nr_seq_tipo_equip = coalesce(nr_seq_tipo_equip_p , b.nr_seq_tipo_equip)
	and	a.nr_sequencia = coalesce( nr_seq_planej_prev_p, a.nr_sequencia)
	and (coalesce(a.nr_seq_superior::text, '') = '' or coalesce(man_obter_sobrepos_planej(a.nr_sequencia,b.nr_sequencia),'N') = 'N')
	and	not exists (
		SELECT	1
		from	man_planej_prev x
		where	b.nr_sequencia	= x.nr_seq_equip
		and	coalesce(x.ie_situacao,'A') = 'A'
		and	coalesce(a.nr_seq_equip::text, '') = '')
	and	not exists (
		select	1
		from	unidade_atend_prev y
		where	y.nr_seq_planej = a.nr_sequencia)
	and 	not exists (
		select	1
		from	man_planej_prev_equip_excl x
		where	x.nr_seq_equipamento = b.nr_sequencia
		and	x.nr_seq_planej_prev = a.nr_sequencia)
	order by 1;

C02 CURSOR FOR
	SELECT	dt_geracao,
		obter_se_dia_util(dt_geracao,cd_estabelecimento_w),
		dt_geracao + qt_dia_gerar_ordem_w,
		obter_se_dia_util(dt_geracao + qt_dia_gerar_ordem_w,cd_estabelecimento_w)
	from (SELECT	trunc(dt_geracao) dt_geracao
		from	man_regra_data_frequencia
		where	coalesce(ie_data_hora,'D') = 'D'
		and	dt_geracao >= trunc(clock_timestamp())
		and	coalesce(nr_seq_equipamento,nr_seq_equipamento_w) = nr_seq_equipamento_w
		and	nr_seq_planej_prev = nr_seq_planej_prev_w
		order by dt_geracao) alias7 LIMIT 12;


BEGIN
ie_freq_primeira_prev_w := obter_param_usuario(298, 80, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_freq_primeira_prev_w);
ie_qt_dia_ant_inicio_w := obter_param_usuario(298, 90, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_qt_dia_ant_inicio_w);
ie_consid_prev_manual_w := obter_param_usuario(298, 103, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consid_prev_manual_w);

delete from man_planej_data_prev where nm_usuario = nm_usuario_p or dt_atualizacao < trunc(clock_timestamp());

open C01;
loop
fetch C01 into
	nr_seq_equipamento_w,
	nr_seq_planej_prev_w,
	dt_aquisicao_w,
	dt_programacao_w,
	ie_dt_inicio_geracao_w,
	ie_dia_ultima_verif_w,
	ie_dia_util_planej_w,
	ie_dia_nao_util_planej_w,
	dt_inicial_planej_w,
	qt_dia_previsto_w,
	qt_dia_gerar_ordem_w,
	qt_dia_freq_w,
	ie_converter_mes_w;

EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	v_datas_w.delete;
	v_datas_w.extend(12);

	select 	count(1)
	into STRICT	qt_reg_w
	from	man_regra_data_frequencia
	where	coalesce(ie_data_hora,'D') = 'D'
	and	dt_geracao >= trunc(clock_timestamp())
	and	coalesce(nr_seq_equipamento,nr_seq_equipamento_w) = nr_seq_equipamento_w
	and	nr_seq_planej_prev = nr_seq_planej_prev_w  LIMIT 1;

	if (qt_reg_w = 0) then
		begin
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_ult_os_prev_w
		from	man_ordem_servico
		where	nr_seq_equipamento = nr_seq_equipamento_w
		and	coalesce(nr_seq_planej,nr_seq_planej_prev_w) = nr_seq_planej_prev_w
		and	ie_tipo_ordem = 2;

		if (coalesce(ie_dt_inicio_geracao_w,'F') = 'P') and (coalesce(ie_consid_prev_manual_w,'N') = 'N') then
			begin
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_ult_os_prev_w
			from	man_ordem_servico
			where	nr_seq_equipamento = nr_seq_equipamento_w
			and	nr_seq_planej = nr_seq_planej_prev_w
			and	ie_tipo_ordem = 2;
			end;
		end if;

		if (nr_seq_ult_os_prev_w = 0) then
			begin
			if (coalesce(ie_dt_inicio_geracao_w,'F') = 'F') then
				begin
				if (coalesce(ie_freq_primeira_prev_w,'S') = 'S') then
					dt_preventiva_w	:= obter_data_prev_futura(dt_inicial_planej_w, qt_dia_freq_w, ie_converter_mes_w) - qt_dia_gerar_ordem_w;
				else
					dt_preventiva_w	:= dt_inicial_planej_w;
				end if;
				end;
			elsif (ie_dt_inicio_geracao_w = 'A') then
				begin
				if (coalesce(dt_aquisicao_w::text, '') = '') then
					goto continue_c01;
				end if;

				dt_preventiva_w	:= obter_data_prev_futura(dt_aquisicao_w, qt_dia_freq_w, ie_converter_mes_w) - qt_dia_gerar_ordem_w;
				end;
			elsif (ie_dt_inicio_geracao_w = 'P') then
				begin
				if (coalesce(dt_programacao_w::text, '') = '') then
					goto continue_c01;
				end if;

				dt_preventiva_w	:= obter_data_prev_futura(dt_programacao_w, qt_dia_freq_w, ie_converter_mes_w) - qt_dia_gerar_ordem_w;
				end;
			end if;
			end;
		else
			begin
			if (coalesce(ie_dia_ultima_verif_w,'E') = 'E') then
				select	coalesce(dt_fim_real,dt_ordem_servico + qt_dia_gerar_ordem_w + qt_dia_previsto_w)
				into STRICT 	dt_ordem_servico_w
				from 	man_ordem_servico
				where 	nr_sequencia = nr_seq_ult_os_prev_w;
			elsif (ie_dia_ultima_verif_w = 'G') then
				select	dt_ordem_servico
				into STRICT 	dt_ordem_servico_w
				from 	man_ordem_servico
				where 	nr_sequencia = nr_seq_ult_os_prev_w;
			elsif (ie_dia_ultima_verif_w = 'I') then
				select	coalesce(dt_inicio_desejado,dt_ordem_servico + qt_dia_gerar_ordem_w)
				into STRICT 	dt_ordem_servico_w
				from 	man_ordem_servico
				where 	nr_sequencia = nr_seq_ult_os_prev_w;
			end if;

			dt_preventiva_w	:= obter_data_prev_futura(dt_ordem_servico_w, qt_dia_freq_w, ie_converter_mes_w) - qt_dia_gerar_ordem_w;
			end;
		end if;

		dt_preventiva_w		:= trunc(greatest(dt_preventiva_w,dt_inicial_planej_w,clock_timestamp()));
		ie_gravado_fixo_w	:= 'N';
		qt_data_prev_w		:= 1;
		qt_reg_w		:= 1;

		while(qt_data_prev_w <= 12) loop
			begin
			if (qt_reg_w > 1) then
				dt_preventiva_w := greatest(obter_data_prev_futura(v_datas_w[qt_data_prev_w-1].dt_preventiva, qt_dia_freq_w, ie_converter_mes_w) - qt_dia_gerar_ordem_w, v_datas_w[qt_data_prev_w-1].dt_preventiva + 1);
			end if;

			if (coalesce(ie_dia_nao_util_planej_w,'M') <> 'M') and (obter_se_dia_util(dt_preventiva_w,cd_estabelecimento_w) = 'N') then
				begin
				if (ie_dia_nao_util_planej_w = 'A') then /* Antecipar */
					dt_preventiva_w := obter_dia_anterior_util(cd_estabelecimento_w,dt_preventiva_w);
				elsif (ie_dia_nao_util_planej_w = 'P') then /* Postergar */
					dt_preventiva_w := obter_proximo_dia_util(cd_estabelecimento_w,dt_preventiva_w);
				elsif (ie_dia_nao_util_planej_w = 'N') then /* Não gerar */
					begin
					dt_preventiva_w	:= dt_preventiva_w + 1;
					qt_reg_w	:= 1;
					goto continue_loop;
					end;
				end if;
				end;
			elsif (coalesce(ie_dia_util_planej_w,'M') <> 'M') and (obter_se_dia_util(dt_preventiva_w,cd_estabelecimento_w) = 'S') then
				begin
				if (ie_dia_util_planej_w = 'A') then /* Antecipar */
					dt_preventiva_w := obter_dia_anterior_util(cd_estabelecimento_w,dt_preventiva_w);
				elsif (ie_dia_util_planej_w = 'P') then /* Postergar */
					dt_preventiva_w := obter_dia_anterior_nao_util(cd_estabelecimento_w,dt_preventiva_w);
				elsif (ie_dia_util_planej_w = 'N') then /* Não gerar */
					begin
					dt_preventiva_w := dt_preventiva_w + 1;
					qt_reg_w	:= 1;
					goto continue_loop;
					end;
				end if;
				end;
			end if;

			v_datas_w[qt_data_prev_w].dt_preventiva		:= dt_preventiva_w;
			v_datas_w[qt_data_prev_w].ie_dia_util_prev	:= obter_se_dia_util(dt_preventiva_w,cd_estabelecimento_w);
			v_datas_w[qt_data_prev_w].dt_inicio_desejado	:= dt_preventiva_w + qt_dia_gerar_ordem_w;
			v_datas_w[qt_data_prev_w].ie_dia_util_inicio	:= obter_se_dia_util(dt_preventiva_w + qt_dia_gerar_ordem_w,cd_estabelecimento_w);

			qt_data_prev_w	:= qt_data_prev_w + 1;
			qt_reg_w	:= qt_data_prev_w;

			<<continue_loop>>
			null;
			end;
		end loop;
		end;
	else
		begin
		ie_gravado_fixo_w := 'S';

		open C02;
		loop
		fetch C02 into
			dt_preventiva_w,
			ie_dia_util_prev_w,
			dt_inicio_desejado_w,
			ie_dia_util_inicio_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			v_datas_w[C02%rowcount].dt_preventiva		:= dt_preventiva_w;
			v_datas_w[C02%rowcount].ie_dia_util_prev	:= ie_dia_util_prev_w;
			v_datas_w[C02%rowcount].dt_inicio_desejado	:= dt_inicio_desejado_w;
			v_datas_w[C02%rowcount].ie_dia_util_inicio	:= ie_dia_util_inicio_w;
			end;
		end loop;
		close C02;
		end;
	end if;

	if (v_datas_w.count < 12) then
		goto continue_c01;
	end if;

	insert into man_planej_data_prev(
			nr_sequencia,
			nr_seq_planej_prev,
			nr_seq_equipamento,
			nm_usuario,
			nm_usuario_nrec,
			dt_atualizacao,
			dt_atualizacao_nrec,
			dt_prevista1,
			ie_dia_util1,
			dt_prevista2,
			ie_dia_util2,
			dt_prevista3,
			ie_dia_util3,
			dt_prevista4,
			ie_dia_util4,
			dt_prevista5,
			ie_dia_util5,
			dt_prevista6,
			ie_dia_util6,
			dt_prevista7,
			ie_dia_util7,
			dt_prevista8,
			ie_dia_util8,
			dt_prevista9,
			ie_dia_util9,
			dt_prevista10,
			ie_dia_util10,
			dt_prevista11,
			ie_dia_util11,
			dt_prevista12,
			ie_dia_util12,
			dt_prevista13,
			ie_dia_util13,
			dt_prevista14,
			ie_dia_util14,
			dt_prevista15,
			ie_dia_util15,
			dt_prevista16,
			ie_dia_util16,
			dt_prevista17,
			ie_dia_util17,
			dt_prevista18,
			ie_dia_util18,
			dt_prevista19,
			ie_dia_util19,
			dt_prevista20,
			ie_dia_util20,
			dt_prevista21,
			ie_dia_util21,
			dt_prevista22,
			ie_dia_util22,
			dt_prevista23,
			ie_dia_util23,
			dt_prevista24,
			ie_dia_util24,
			ie_gravado)
		values (nextval('man_planej_data_prev_seq'),
			nr_seq_planej_prev_w,
			nr_seq_equipamento_w,
			nm_usuario_p,
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			v_datas_w[1].dt_preventiva,
			v_datas_w[1].ie_dia_util_prev,
			v_datas_w[1].dt_inicio_desejado,
			v_datas_w[1].ie_dia_util_inicio,
			v_datas_w[2].dt_preventiva,
			v_datas_w[2].ie_dia_util_prev,
			v_datas_w[2].dt_inicio_desejado,
			v_datas_w[2].ie_dia_util_inicio,
			v_datas_w[3].dt_preventiva,
			v_datas_w[3].ie_dia_util_prev,
			v_datas_w[3].dt_inicio_desejado,
			v_datas_w[3].ie_dia_util_inicio,
			v_datas_w[4].dt_preventiva,
			v_datas_w[4].ie_dia_util_prev,
			v_datas_w[4].dt_inicio_desejado,
			v_datas_w[4].ie_dia_util_inicio,
			v_datas_w[5].dt_preventiva,
			v_datas_w[5].ie_dia_util_prev,
			v_datas_w[5].dt_inicio_desejado,
			v_datas_w[5].ie_dia_util_inicio,
			v_datas_w[6].dt_preventiva,
			v_datas_w[6].ie_dia_util_prev,
			v_datas_w[6].dt_inicio_desejado,
			v_datas_w[6].ie_dia_util_inicio,
			v_datas_w[7].dt_preventiva,
			v_datas_w[7].ie_dia_util_prev,
			v_datas_w[7].dt_inicio_desejado,
			v_datas_w[7].ie_dia_util_inicio,
			v_datas_w[8].dt_preventiva,
			v_datas_w[8].ie_dia_util_prev,
			v_datas_w[8].dt_inicio_desejado,
			v_datas_w[8].ie_dia_util_inicio,
			v_datas_w[9].dt_preventiva,
			v_datas_w[9].ie_dia_util_prev,
			v_datas_w[9].dt_inicio_desejado,
			v_datas_w[9].ie_dia_util_inicio,
			v_datas_w[10].dt_preventiva,
			v_datas_w[10].ie_dia_util_prev,
			v_datas_w[10].dt_inicio_desejado,
			v_datas_w[10].ie_dia_util_inicio,
			v_datas_w[11].dt_preventiva,
			v_datas_w[11].ie_dia_util_prev,
			v_datas_w[11].dt_inicio_desejado,
			v_datas_w[11].ie_dia_util_inicio,
			v_datas_w[12].dt_preventiva,
			v_datas_w[12].ie_dia_util_prev,
			v_datas_w[12].dt_inicio_desejado,
			v_datas_w[12].ie_dia_util_inicio,
			ie_gravado_fixo_w);

	<<continue_c01>>
	null;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_gerar_preventivas_prev ( nr_seq_planej_prev_p bigint, nr_seq_tipo_equip_p bigint, nm_usuario_p text) FROM PUBLIC;

