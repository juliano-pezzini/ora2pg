-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_analise_cabecalho ( nr_seq_analise_p bigint, nr_seq_grupo_p bigint, nm_usuario_p text, nr_id_transacao_p INOUT bigint) AS $body$
DECLARE


nm_beneficiario_w		varchar(255);
cd_usuario_plano_w		varchar(255);
ds_idade_benef_w		varchar(255);
ds_tipo_guia_analise_w		varchar(255);
nm_prestador_solic_w		varchar(255);
ds_senha_w			varchar(255);
ds_mes_ref_lote_w		varchar(255);
ds_tipo_acomodacao_benef_w	varchar(255);
nm_profissional_solic_w		varchar(255);
ds_motivo_saida_w		varchar(255);
ds_origem_conta_w		varchar(255);
nm_profissional_w		varchar(255);
ds_formacao_preco_w		varchar(255);
ds_tipo_apres_guia_w		varchar(255);
nm_prestador_atend_w		varchar(255);
ds_carater_solicitacao_w	varchar(255);
ds_tipo_internacao_w		varchar(255);
ds_tipo_acomodacao_atend_w	varchar(255);
ds_tipo_saida_w			varchar(255);
ds_tipo_atendimento_w		varchar(255);
nm_operadora_interc_w		varchar(255);
ds_origem_analise_w		varchar(255);
nr_nota_credito_debito_w	ptu_fatura.nr_nota_credito_debito%type;
nr_seq_fatura_w			ptu_fatura.nr_sequencia%type;
cd_usuario_plano_aux_w		varchar(255);
ds_dados_produto_w		varchar(255);
cd_operadora_interc_w		varchar(30);
nr_lote_prestador_w		varchar(30);
ds_cid_principal_w		varchar(30);
ds_data_atend_w			varchar(30);
ds_criacao_analise_w		varchar(30);
ds_entrada_internacao_w		varchar(30);
ds_saida_internacao_w		varchar(30);
nr_fatura_ptu_w			ptu_fatura.nr_fatura%type;
cd_guia_principal_w		varchar(30);
cd_guia_w			varchar(20);
ie_tipo_guia_w			varchar(2);
ie_pre_analise_w		varchar(1);
nr_seq_prestador_exec_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_conta_w			bigint;
ie_origem_analise_w		bigint;
nr_seq_grupo_atual_w		bigint;
cd_estabelecimento_w		bigint;
vl_apresentado_w		double precision;
vl_procedimento_imp_w		double precision;
vl_material_imp_w		double precision;
nm_prest_solic_rec_w		varchar(255);
ie_tipo_conta_w			pls_conta.ie_tipo_conta%type;
ds_elegivel_w			varchar(255);
ds_tipo_conta_w			varchar(255);
ie_forma_apres_carteira_benef	varchar(1) := 'I';
ie_cart_pad_visualizacao_w	pls_param_analise_conta.ie_cart_pad_visualizacao%type;
dt_autorizacao_w		w_pls_analise_cabecalho.dt_autorizacao%type;
ds_tipo_faturamento_w		w_pls_analise_cabecalho.ds_tipo_faturamento%type;
ds_regime_internacao_w		w_pls_analise_cabecalho.ds_regime_internacao%type;
ds_indicacao_acidente_w		w_pls_analise_cabecalho.ds_indicacao_acidente%type;
cd_guia_prestador_w		pls_conta.cd_guia_prestador%type;
ds_atend_rn_sala_parto_w	varchar(5);
dt_fim_tratamento_w		w_pls_analise_cabecalho.dt_fim_tratamento%type;
cd_tipo_atend_odont_w		w_pls_analise_cabecalho.cd_tipo_atend_odont%type;
cd_versao_tiss_w		pls_protocolo_conta.cd_versao_tiss%type;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
ie_tipo_consulta_w		pls_conta.ie_tipo_consulta%type;	

-- expressoes
ds_expr_elegivel_w		dic_expressao.ds_expressao_br%type;
ds_expr_nao_w			dic_expressao.ds_expressao_br%type;
ds_expr_sim_w			dic_expressao.ds_expressao_br%type;
ds_expr_enfer_interc_w		dic_expressao.ds_expressao_br%type;
ds_expr_apart_interc_w		dic_expressao.ds_expressao_br%type;
ds_regime_atendimento_w		varchar(255);
ds_saude_ocupacional_w		varchar(255);
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar a visualizacao (tabela temporaria) do cabecalho da analise de contas
medicas.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN

-- carga nas expressoes
select	obter_desc_expressao(596750),
	obter_desc_expressao(327114),
	obter_desc_expressao(327113),
	obter_desc_expressao(973415),
	obter_desc_expressao(973417)
into STRICT	ds_expr_elegivel_w,
	ds_expr_nao_w,
	ds_expr_sim_w,
	ds_expr_enfer_interc_w,
	ds_expr_apart_interc_w
;


ie_forma_apres_carteira_benef	:= obter_parametro_funcao(1365,25, nm_usuario_p);

if (coalesce(ie_forma_apres_carteira_benef::text, '') = '') then
	ie_forma_apres_carteira_benef := 'I';
end if;

if (coalesce(nr_id_transacao_p,0)	=0) then
	select 	nextval('pls_id_analise_seq')
	into STRICT	nr_id_transacao_p
	;
else
	delete	from w_pls_analise_cabecalho
	where 	nr_id_transacao	= nr_id_transacao_p;
	
	delete 	FROM w_pls_analise_total
	where	nr_id_transacao	= nr_id_transacao_p;
	
	delete 	FROM w_pls_analise_glosa_ocor
	where	nr_id_transacao	= nr_id_transacao_p;
	
end if;

select	pls_obter_conta_principal(a.cd_guia, a.nr_sequencia, a.nr_seq_segurado, a.nr_seq_prestador),
	a.ie_origem_analise,
	substr(obter_valor_dominio(4572, coalesce(a.ie_origem_analise,1)),1,255),
	coalesce(ie_pre_analise,'N'),
	a.cd_estabelecimento
into STRICT	nr_seq_conta_w,
	ie_origem_analise_w,
	ds_origem_analise_w,
	ie_pre_analise_w,
	cd_estabelecimento_w
from	pls_analise_conta	a
where	a.nr_sequencia	= nr_seq_analise_p;

select	max(ie_cart_pad_visualizacao)
into STRICT	ie_cart_pad_visualizacao_w
from	pls_param_analise_conta
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(ie_cart_pad_visualizacao_w::text, '') = '') then
	ie_cart_pad_visualizacao_w	:= 'L';
end if;

/*So vai ter um registro mesmo. O max e para nao usar begin exception*/

select	max(a.ie_tipo_guia),
	max(a.nr_seq_protocolo)
into STRICT	ie_tipo_guia_w,
	nr_seq_protocolo_w
from	pls_conta	a
where	a.nr_sequencia	= nr_seq_conta_w;

select	max(a.cd_versao_tiss)
into STRICT	cd_versao_tiss_w
from	pls_protocolo_conta a
where	a.nr_sequencia = nr_seq_protocolo_w;

if (ie_tipo_guia_w = '3') then /* Consulta */
	
	select	substr('(' || CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'CR')::text, '') = '' THEN  cd_usuario_plano_imp  ELSE CASE WHEN ie_forma_apres_carteira_benef='I' THEN CASE WHEN ie_cart_pad_visualizacao_w='L' THEN pls_obter_dados_segurado(a.nr_seq_segurado,'C')  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'CR') END   ELSE cd_usuario_plano_imp END  END  || ') ',1,255) ,
		substr(CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),'X')='X' THEN  pls_desc_benef_intercambio(nr_seq_nota_cobranca)  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'N') END ,1,255),
		substr(pls_obter_idade_segurado(a.nr_seq_segurado, clock_timestamp(),'D'),1,30),
		substr('(' || trim(both pls_obter_dados_segurado(a.nr_seq_segurado, 'CON')) || ')  - ' ,1,30),
		substr(obter_valor_dominio(1746,a.ie_tipo_guia),1,255),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador, null) || ' - ' || pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,255),
		substr(a.cd_senha || ' / ' || a.cd_senha_externa,1,30),
		to_char(dt_mes_competencia,'mm/yyyy'),
		substr(pls_obter_acomodacoes_plano(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP')),1,255),
		substr(a.cd_medico_solicitante || ' - ' || obter_nome_medico(a.cd_medico_solicitante,'N'),1,255),  
		substr(b.nr_protocolo_prestador,1,30),
		(select	substr(coalesce(max(x.ds_motivo_saida),''),1,255)
		from	pls_motivo_saida_consulta	x
		where	x.nr_sequencia	= a.nr_seq_saida_consulta),
		substr(obter_desc_cid(pls_obter_cid_conta(a.nr_sequencia)),1,30),
		substr(obter_valor_dominio(3470, ie_origem_conta),1,255),
		to_char(a.dt_atendimento_referencia,'dd/mm/yyyy hh24:mi:ss'),
		substr(a.cd_medico_executor || ' - ' || obter_nome_medico(a.cd_medico_executor,'N'),1,255),
		substr(pls_obter_formacao_plano_seg(a.nr_seq_segurado),1,255),
		to_char(b.dt_atualizacao_nrec,'dd/mm/yy') dt_atualizacao,
		substr(pls_obter_se_conta_reapre(a.nr_sequencia),1,255),
		substr(coalesce(a.cd_guia_referencia,a.cd_guia),1,30),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador_exec, null) || ' - ' || pls_obter_dados_prestador(a.nr_seq_prestador_exec,'N'),1,255),
		substr(CASE WHEN coalesce(b.nr_seq_congenere::text, '') = '' THEN                 CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')::text, '') = '' THEN  null  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON') || ' - ' ||                        pls_obter_nome_congenere(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')) END   ELSE b.nr_seq_congenere || ' - '|| pls_obter_nome_congenere(b.nr_seq_congenere) END ,1,255),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'F'),1,255),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'NDC'),1,255),
		a.nr_seq_segurado,
		substr(pls_obter_desc_tipo_atend(a.nr_seq_tipo_atendimento),1,255),
		substr(obter_valor_dominio(10631, coalesce(a.ie_regime_atendimento,1)),1,200),
		substr(obter_valor_dominio((10632), coalesce(a.ie_saude_ocupacional,1)),1,200),
		substr(coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'ES'),'')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'NF')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'P'),1,255),
		substr(pls_obter_cod_prestador(pls_obter_prest_solic_rec(a.nr_sequencia), null) || ' - ' || pls_obter_dados_prestador(pls_obter_prest_solic_rec(a.nr_sequencia),'N'),1,255),
		ie_tipo_conta,
		CASE WHEN ie_tipo_conta='C' THEN CASE WHEN pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado)='S' THEN ds_expr_elegivel_w   ELSE pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado) END   ELSE null END ,		
		(select w.ds_tipo_conta from pls_tipo_conta w where w.nr_sequencia = a.nr_seq_tipo_conta )ds_tipo_conta,
		substr(obter_valor_dominio(1759, a.ie_indicacao_acidente),1,255) ds_indicacao_acidente,
		a.cd_guia_prestador,
		CASE WHEN coalesce(a.ie_recem_nascido::text, '') = '' THEN  CASE WHEN a.ie_atend_rn_sala_parto='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END   ELSE CASE WHEN a.ie_recem_nascido='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END  END  ds_atend_rn_sala_parto,
		a.dt_fim_tratamento,
		a.cd_tipo_atend_odont,
		a.ie_tipo_consulta
	into STRICT	cd_usuario_plano_w,
		nm_beneficiario_w,
		ds_idade_benef_w,
		cd_operadora_interc_w,
		ds_tipo_guia_analise_w,
		nm_prestador_solic_w,
		ds_senha_w,
		ds_mes_ref_lote_w,
		ds_tipo_acomodacao_benef_w,
		nm_profissional_solic_w,
		nr_lote_prestador_w,
		ds_motivo_saida_w,
		ds_cid_principal_w,
		ds_origem_conta_w,
		ds_data_atend_w,
		nm_profissional_w,
		ds_formacao_preco_w,
		ds_criacao_analise_w,
		ds_tipo_apres_guia_w,
		cd_guia_principal_w,
		nm_prestador_atend_w,
		nm_operadora_interc_w,
		nr_fatura_ptu_w,
		nr_nota_credito_debito_w,
		nr_seq_segurado_w,
		ds_tipo_atendimento_w,
		ds_regime_atendimento_w,	
		ds_saude_ocupacional_w,	
		ds_dados_produto_w,
		nm_prest_solic_rec_w,
		ie_tipo_conta_w,
		ds_elegivel_w,
		ds_tipo_conta_w,
		ds_indicacao_acidente_w,
		cd_guia_prestador_w,
		ds_atend_rn_sala_parto_w,
		dt_fim_tratamento_w,
		cd_tipo_atend_odont_w,
		ie_tipo_consulta_w
	from	pls_conta		a,
		pls_protocolo_conta	b
	where  	a.nr_seq_protocolo	= b.nr_sequencia 
	and    	a.nr_sequencia		= nr_seq_conta_w;
	
elsif (ie_tipo_guia_w = '4') then /* SP/SADT */
	select	substr('(' || CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'CR')::text, '') = '' THEN  cd_usuario_plano_imp  ELSE CASE WHEN ie_forma_apres_carteira_benef='I' THEN CASE WHEN ie_cart_pad_visualizacao_w='L' THEN pls_obter_dados_segurado(a.nr_seq_segurado,'C')  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'CR') END   ELSE cd_usuario_plano_imp END  END  || ') ',1,255) ,
		substr(CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),'X')='X' THEN  pls_desc_benef_intercambio(nr_seq_nota_cobranca)  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'N') END ,1,255),
		substr(pls_obter_idade_segurado(a.nr_seq_segurado, clock_timestamp(),'D'),1,30),
		substr(trim(both pls_obter_dados_segurado(a.nr_seq_segurado, 'CON')),1,30),
		substr(obter_valor_dominio(1746,a.ie_tipo_guia),1,255), 
		substr(pls_obter_cod_prestador(a.nr_seq_prestador, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,255) nm_prestador,
		substr(coalesce(a.cd_guia_referencia,a.cd_guia),1,30) nr_guia, 
		substr(obter_valor_dominio(2819, ie_carater_internacao),1,255) ds_carater_internacao, 
		substr(a.cd_senha ||' / '|| a.cd_senha_externa,1,30) cd_senha_externa,     
		to_char(dt_mes_competencia,'mm/yyyy'),
		substr(pls_obter_acomodac_plano_ptu(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP')),1,255),
		CASE WHEN a.ie_tipo_conta='I' THEN  CASE WHEN coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '' THEN ptu_obter_ds_acomo_nota_hos(a.nr_seq_nota_cobranca) WHEN a.ie_tipo_acomodacao_ptu='A' THEN ds_expr_enfer_interc_w WHEN a.ie_tipo_acomodacao_ptu='B' THEN ds_expr_apart_interc_w END   ELSE CASE WHEN substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255)='' THEN substr(pls_obter_tp_acomodacao_guia(a.nr_seq_guia),1,50)  ELSE substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255) END  END ,
		substr(pls_obter_desc_tipo_atend(a.nr_seq_tipo_atendimento),1,255),
		substr(obter_valor_dominio(10631, coalesce(a.ie_regime_atendimento,1)),1,200),
		substr(obter_valor_dominio((10632), coalesce(a.ie_saude_ocupacional,1)),1,200),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador_exec, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador_exec,'N'),1,255),
		substr(a.cd_medico_solicitante||' - '||obter_nome_medico(a.cd_medico_solicitante,'N'),1,255),  
		substr(b.nr_protocolo_prestador,1,30),
		substr(pls_obter_desc_motivo_saida(a.nr_seq_saida_spsadt),1,255),
		substr(obter_desc_cid(pls_obter_cid_conta(a.nr_sequencia)),1,30),
		CASE WHEN a.ie_tipo_conta='I' THEN substr(CASE WHEN coalesce(a.nr_seq_clinica::text, '') = '' THEN ptu_obter_desc_tipo_internacao(a.nr_seq_nota_cobranca)  ELSE pls_obter_desc_tipo_internacao(a.nr_seq_clinica) END ,1,255)  ELSE substr(pls_obter_desc_tipo_internacao(a.nr_seq_clinica),1,255) END ,
		substr(obter_valor_dominio(3470, ie_origem_conta),1,255),
		to_char(a.dt_atendimento_referencia,'dd/mm/yyyy hh24:mi:ss'),
		substr(CASE WHEN coalesce(b.nr_seq_congenere::text, '') = '' THEN                 CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')::text, '') = '' THEN  null  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON') || ' - ' ||                        pls_obter_nome_congenere(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')) END   ELSE b.nr_seq_congenere || ' - '|| pls_obter_nome_congenere(b.nr_seq_congenere) END ,1,255),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'F'),1,30),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'NDC'),1,255),
		substr(a.cd_medico_executor||' - '||obter_nome_medico(a.cd_medico_executor,'N'),1,255),
		substr(pls_obter_formacao_plano_seg(a.nr_seq_segurado),1,255),
		to_char(b.dt_atualizacao_nrec, 'dd/mm/yyyy'),
		substr(pls_obter_se_conta_reapre(a.nr_sequencia),1,255),
		a.nr_seq_segurado,
		substr(coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'ES'),'')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'NF')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'P'),1,255),
		substr(pls_obter_cod_prestador(pls_obter_prest_solic_rec(a.nr_sequencia), null) || ' - ' || pls_obter_dados_prestador(pls_obter_prest_solic_rec(a.nr_sequencia),'N'),1,255),
		ie_tipo_conta,
		CASE WHEN ie_tipo_conta='C' THEN CASE WHEN pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado)='S' THEN ds_expr_elegivel_w   ELSE pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado) END   ELSE null END ,
		(select w.ds_tipo_conta from pls_tipo_conta w where w.nr_sequencia = a.nr_seq_tipo_conta )ds_tipo_conta,
		substr(obter_valor_dominio(1759, a.ie_indicacao_acidente),1,255) ds_indicacao_acidente,
		a.cd_guia_prestador,
		CASE WHEN coalesce(a.ie_recem_nascido::text, '') = '' THEN  CASE WHEN a.ie_atend_rn_sala_parto='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END   ELSE CASE WHEN a.ie_recem_nascido='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END  END  ds_atend_rn_sala_parto,
		a.dt_fim_tratamento,
		a.cd_tipo_atend_odont,
		a.ie_tipo_consulta
	into STRICT	cd_usuario_plano_w,
		nm_beneficiario_w,
		ds_idade_benef_w,
		cd_operadora_interc_w,
		ds_tipo_guia_analise_w,
		nm_prestador_solic_w,
		cd_guia_principal_w,
		ds_carater_solicitacao_w,
		ds_senha_w,
		ds_mes_ref_lote_w,
		ds_tipo_acomodacao_benef_w,
		ds_tipo_acomodacao_atend_w,
		ds_tipo_atendimento_w,
		ds_regime_atendimento_w,	
		ds_saude_ocupacional_w,	
		nm_prestador_atend_w,
		nm_profissional_solic_w,
		nr_lote_prestador_w,
		ds_motivo_saida_w,
		ds_cid_principal_w,
		ds_tipo_internacao_w,
		ds_origem_conta_w,
		ds_data_atend_w,
		nm_operadora_interc_w,
		nr_fatura_ptu_w,
		nr_nota_credito_debito_w,
		nm_profissional_w,
		ds_formacao_preco_w,
		ds_criacao_analise_w,
		ds_tipo_apres_guia_w,
		nr_seq_segurado_w,
		ds_dados_produto_w,
		nm_prest_solic_rec_w,
		ie_tipo_conta_w,
		ds_elegivel_w,
		ds_tipo_conta_w,
		ds_indicacao_acidente_w,
		cd_guia_prestador_w,
		ds_atend_rn_sala_parto_w,
		dt_fim_tratamento_w,
		cd_tipo_atend_odont_w,
		ie_tipo_consulta_w
	from	pls_conta		a,
		pls_protocolo_conta	b
	where  	a.nr_seq_protocolo	= b.nr_sequencia 
	and    	a.nr_sequencia		= nr_seq_conta_w;
	null;
	
elsif (ie_tipo_guia_w = '11') then /* Tratamento Odontologico */
	select	substr('(' || CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'CR')::text, '') = '' THEN  cd_usuario_plano_imp  ELSE CASE WHEN ie_forma_apres_carteira_benef='I' THEN CASE WHEN ie_cart_pad_visualizacao_w='L' THEN pls_obter_dados_segurado(a.nr_seq_segurado,'C')  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'CR') END   ELSE cd_usuario_plano_imp END  END  || ') ',1,255) ,
		substr(CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),'X')='X' THEN  pls_desc_benef_intercambio(nr_seq_nota_cobranca)  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'N') END ,1,255),
		substr(pls_obter_idade_segurado(a.nr_seq_segurado, clock_timestamp(),'D'),1,30),
		substr(trim(both pls_obter_dados_segurado(a.nr_seq_segurado, 'CON')),1,30),
		substr(obter_valor_dominio(1746,a.ie_tipo_guia),1,255), 
		substr(pls_obter_cod_prestador(a.nr_seq_prestador, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,255) nm_prestador,
		substr(coalesce(a.cd_guia_referencia,a.cd_guia),1,30) nr_guia, 
		substr(obter_valor_dominio(2819, ie_carater_internacao),1,255) ds_carater_internacao, 
		substr(a.cd_senha ||' / '|| a.cd_senha_externa,1,30) cd_senha_externa,     
		to_char(dt_mes_competencia,'mm/yyyy'),
		substr(pls_obter_acomodac_plano_ptu(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP')),1,255),
		CASE WHEN a.ie_tipo_conta='I' THEN  CASE WHEN coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '' THEN ptu_obter_ds_acomo_nota_hos(a.nr_seq_nota_cobranca) WHEN a.ie_tipo_acomodacao_ptu='A' THEN ds_expr_enfer_interc_w WHEN a.ie_tipo_acomodacao_ptu='B' THEN ds_expr_apart_interc_w END   ELSE CASE WHEN substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255)='' THEN substr(pls_obter_tp_acomodacao_guia(a.nr_seq_guia),1,50)  ELSE substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255) END  END ,
		substr(pls_obter_desc_tipo_atend(a.nr_seq_tipo_atendimento),1,255),
		substr(obter_valor_dominio(10631, coalesce(a.ie_regime_atendimento,1)),1,200),
		substr(obter_valor_dominio((10632), coalesce(a.ie_saude_ocupacional,1)),1,200),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador_exec, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador_exec,'N'),1,255),
		substr(a.cd_medico_solicitante||' - '||obter_nome_medico(a.cd_medico_solicitante,'N'),1,255),  
		substr(b.nr_protocolo_prestador,1,30),
		substr(pls_obter_desc_motivo_saida(a.nr_seq_saida_spsadt),1,255),
		substr(obter_desc_cid(pls_obter_cid_conta(a.nr_sequencia)),1,30),
		CASE WHEN a.ie_tipo_conta='I' THEN substr(CASE WHEN coalesce(a.nr_seq_clinica::text, '') = '' THEN ptu_obter_desc_tipo_internacao(a.nr_seq_nota_cobranca)  ELSE pls_obter_desc_tipo_internacao(a.nr_seq_clinica) END ,1,255)  ELSE substr(pls_obter_desc_tipo_internacao(a.nr_seq_clinica),1,255) END ,
		substr(obter_valor_dominio(3470, ie_origem_conta),1,255),
		to_char(a.dt_atendimento_referencia,'dd/mm/yyyy hh24:mi:ss'),
		substr(CASE WHEN coalesce(b.nr_seq_congenere::text, '') = '' THEN                 CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')::text, '') = '' THEN  null  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON') || ' - ' ||                        pls_obter_nome_congenere(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')) END   ELSE b.nr_seq_congenere || ' - '|| pls_obter_nome_congenere(b.nr_seq_congenere) END ,1,255),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'F'),1,30),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'NDC'),1,255),
		substr(a.cd_medico_executor||' - '||obter_nome_medico(a.cd_medico_executor,'N'),1,255),
		substr(pls_obter_formacao_plano_seg(a.nr_seq_segurado),1,255),
		to_char(b.dt_atualizacao_nrec, 'dd/mm/yyyy'),
		substr(pls_obter_se_conta_reapre(a.nr_sequencia),1,255),
		a.nr_seq_segurado,
		substr(coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'ES'),'')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'NF')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'P'),1,255),
		substr(pls_obter_cod_prestador(pls_obter_prest_solic_rec(a.nr_sequencia), null) || ' - ' || pls_obter_dados_prestador(pls_obter_prest_solic_rec(a.nr_sequencia),'N'),1,255),
		ie_tipo_conta,
		CASE WHEN ie_tipo_conta='C' THEN CASE WHEN pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado)='S' THEN ds_expr_elegivel_w   ELSE pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado) END   ELSE null END ,
		(select w.ds_tipo_conta from pls_tipo_conta w where w.nr_sequencia = a.nr_seq_tipo_conta )ds_tipo_conta,
		substr(obter_valor_dominio(1759, a.ie_indicacao_acidente),1,255) ds_indicacao_acidente,
		a.cd_guia_prestador,
		CASE WHEN coalesce(a.ie_recem_nascido::text, '') = '' THEN  CASE WHEN a.ie_atend_rn_sala_parto='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END   ELSE CASE WHEN a.ie_recem_nascido='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END  END  ds_atend_rn_sala_parto,
		a.dt_fim_tratamento,
		a.cd_tipo_atend_odont,
		a.ie_tipo_consulta
	into STRICT	cd_usuario_plano_w,
		nm_beneficiario_w,
		ds_idade_benef_w,
		cd_operadora_interc_w,
		ds_tipo_guia_analise_w,
		nm_prestador_solic_w,
		cd_guia_principal_w,
		ds_carater_solicitacao_w,
		ds_senha_w,
		ds_mes_ref_lote_w,
		ds_tipo_acomodacao_benef_w,
		ds_tipo_acomodacao_atend_w,
		ds_tipo_atendimento_w,
		ds_regime_atendimento_w,	
		ds_saude_ocupacional_w,	
		nm_prestador_atend_w,
		nm_profissional_solic_w,
		nr_lote_prestador_w,
		ds_motivo_saida_w,
		ds_cid_principal_w,
		ds_tipo_internacao_w,
		ds_origem_conta_w,
		ds_data_atend_w,
		nm_operadora_interc_w,
		nr_fatura_ptu_w,
		nr_nota_credito_debito_w,
		nm_profissional_w,
		ds_formacao_preco_w,
		ds_criacao_analise_w,
		ds_tipo_apres_guia_w,
		nr_seq_segurado_w,
		ds_dados_produto_w,
		nm_prest_solic_rec_w,
		ie_tipo_conta_w,
		ds_elegivel_w,
		ds_tipo_conta_w,
		ds_indicacao_acidente_w,
		cd_guia_prestador_w,
		ds_atend_rn_sala_parto_w,
		dt_fim_tratamento_w,
		cd_tipo_atend_odont_w,
		ie_tipo_consulta_w
	from	pls_conta		a,
		pls_protocolo_conta	b
	where  	a.nr_seq_protocolo	= b.nr_sequencia 
	and    	a.nr_sequencia		= nr_seq_conta_w;
	
elsif (ie_tipo_guia_w = '6') then /* HI */
	
	select	substr('(' || CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'CR')::text, '') = '' THEN  cd_usuario_plano_imp  ELSE CASE WHEN ie_forma_apres_carteira_benef='I' THEN CASE WHEN ie_cart_pad_visualizacao_w='L' THEN pls_obter_dados_segurado(a.nr_seq_segurado,'C')  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'CR') END   ELSE cd_usuario_plano_imp END  END  || ') ',1,255) ,
		substr(CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),'X')='X' THEN  substr(pls_desc_benef_intercambio(nr_seq_nota_cobranca),1,255)  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'N') END ,1,255),
		substr(pls_obter_idade_segurado(a.nr_seq_segurado, clock_timestamp(),'D'),1,30),
		substr(trim(both pls_obter_dados_segurado(a.nr_seq_segurado, 'CON')),1,30),
		to_char(a.dt_entrada,'dd/mm/yyyy hh24:mi:ss'),
		to_char(a.dt_alta,'dd/mm/yyyy hh24:mi:ss'),
		substr(obter_valor_dominio(1746,a.ie_tipo_guia),1,255),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,255) nm_prestador,       
		substr(coalesce(a.cd_guia_referencia,a.cd_guia),1,30),  
		substr(obter_valor_dominio(2819, ie_carater_internacao),1,255),
		substr(a.cd_senha||' / '||a.cd_senha_externa,1,30),
		to_char(dt_mes_competencia,'mm/yyyy'),
		substr(pls_obter_acomodac_plano_ptu(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP')),1,255),
		CASE WHEN a.ie_tipo_conta='I' THEN  CASE WHEN coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '' THEN ptu_obter_ds_acomo_nota_hos(a.nr_seq_nota_cobranca) WHEN a.ie_tipo_acomodacao_ptu='A' THEN ds_expr_enfer_interc_w WHEN a.ie_tipo_acomodacao_ptu='B' THEN ds_expr_apart_interc_w END   ELSE CASE WHEN substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255)='' THEN substr(pls_obter_tp_acomodacao_guia(a.nr_seq_guia),1,50)  ELSE substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255) END  END ,
		substr(pls_obter_desc_tipo_atend(a.nr_seq_tipo_atendimento),1,255),
		substr(obter_valor_dominio(10631, coalesce(a.ie_regime_atendimento,1)),1,200),
		substr(obter_valor_dominio((10632), coalesce(a.ie_saude_ocupacional,1)),1,200),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador_exec, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador_exec,'N'),1,255),  
		substr(a.cd_medico_solicitante||' - '||obter_nome_medico(a.cd_medico_solicitante,'N'),1,255),  
		substr(b.nr_protocolo_prestador,1,30),
		substr(pls_obter_desc_mot_saida_int(a.nr_seq_saida_int),1,255),
		substr(obter_desc_cid(pls_obter_cid_conta(a.nr_sequencia)),1,30),
		CASE WHEN a.ie_tipo_conta='I' THEN substr(CASE WHEN coalesce(a.nr_seq_clinica::text, '') = '' THEN ptu_obter_desc_tipo_internacao(a.nr_seq_nota_cobranca)  ELSE pls_obter_desc_tipo_internacao(a.nr_seq_clinica) END ,1,255)  ELSE substr(pls_obter_desc_tipo_internacao(a.nr_seq_clinica),1,255) END ,
		substr(obter_valor_dominio(3470, ie_origem_conta),1,255),
		to_char(a.dt_atendimento_referencia,'dd/mm/yyyy hh24:mi:ss') dt_atendimento_referencia,
		substr(CASE WHEN coalesce(b.nr_seq_congenere::text, '') = '' THEN                 CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')::text, '') = '' THEN  null  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON') || ' - ' ||                        pls_obter_nome_congenere(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')) END   ELSE b.nr_seq_congenere || ' - '|| pls_obter_nome_congenere(b.nr_seq_congenere) END ,1,255),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'F'),1,255),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'NDC'),1,255),
		substr(pls_obter_formacao_plano_seg(a.nr_seq_segurado),1,255),
		to_char(b.dt_atualizacao_nrec) dt_atualizacao,
		pls_obter_se_conta_reapre(a.nr_sequencia),
		a.nr_seq_segurado,
		substr(coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'ES'),'')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'NF')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'P'),1,255),
		substr(pls_obter_cod_prestador(pls_obter_prest_solic_rec(a.nr_sequencia), null) || ' - ' || pls_obter_dados_prestador(pls_obter_prest_solic_rec(a.nr_sequencia),'N'),1,255),
		ie_tipo_conta,
		CASE WHEN ie_tipo_conta='C' THEN CASE WHEN pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado)='S' THEN ds_expr_elegivel_w   ELSE pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado) END   ELSE null END ,
		(select w.ds_tipo_conta from pls_tipo_conta w where w.nr_sequencia = a.nr_seq_tipo_conta )ds_tipo_conta,
		substr(obter_valor_dominio(1759, a.ie_indicacao_acidente),1,255) ds_indicacao_acidente,
		a.cd_guia_prestador,
		CASE WHEN coalesce(a.ie_recem_nascido::text, '') = '' THEN  CASE WHEN a.ie_atend_rn_sala_parto='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END   ELSE CASE WHEN a.ie_recem_nascido='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END  END  ds_atend_rn_sala_parto,
		a.dt_fim_tratamento,
		a.cd_tipo_atend_odont,
		a.ie_tipo_consulta
	into STRICT	cd_usuario_plano_w,
		nm_beneficiario_w,
		ds_idade_benef_w,
		cd_operadora_interc_w,
		ds_entrada_internacao_w,
		ds_saida_internacao_w,
		ds_tipo_guia_analise_w,
		nm_prestador_solic_w,
		cd_guia_principal_w,
		ds_carater_solicitacao_w,
		ds_senha_w,
		ds_mes_ref_lote_w,
		ds_tipo_acomodacao_benef_w,
		ds_tipo_acomodacao_atend_w,
		ds_tipo_atendimento_w,
		ds_regime_atendimento_w,	
		ds_saude_ocupacional_w,	
		nm_prestador_atend_w,
		nm_profissional_solic_w,
		nr_lote_prestador_w,
		ds_motivo_saida_w,
		ds_cid_principal_w,
		ds_tipo_internacao_w,
		ds_origem_conta_w,
		ds_data_atend_w,
		nm_operadora_interc_w,
		nr_fatura_ptu_w,
		nr_nota_credito_debito_w,
		ds_formacao_preco_w,
		ds_criacao_analise_w,
		ds_tipo_apres_guia_w,
		nr_seq_segurado_w,
		ds_dados_produto_w,
		nm_prest_solic_rec_w,
		ie_tipo_conta_w,
		ds_elegivel_w,
		ds_tipo_conta_w,
		ds_indicacao_acidente_w,
		cd_guia_prestador_w,
		ds_atend_rn_sala_parto_w,
		dt_fim_tratamento_w,
		cd_tipo_atend_odont_w,
		ie_tipo_consulta_w
	from	pls_conta		a,
		pls_protocolo_conta	b
	where  	a.nr_seq_protocolo	= b.nr_sequencia 
	and    	a.nr_sequencia		= nr_seq_conta_w;

elsif (ie_tipo_guia_w = '5') then /* Internacao */
	select	substr('(' || CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'CR')::text, '') = '' THEN  cd_usuario_plano_imp  ELSE CASE WHEN ie_forma_apres_carteira_benef='I' THEN CASE WHEN ie_cart_pad_visualizacao_w='L' THEN pls_obter_dados_segurado(a.nr_seq_segurado,'C')  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'CR') END   ELSE cd_usuario_plano_imp END  END  || ') ',1,255) ,
		substr(CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'N'),'X')='X' THEN  substr(pls_desc_benef_intercambio(nr_seq_nota_cobranca),1,255)  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'N') END ,1,255),
		substr(pls_obter_idade_segurado(a.nr_seq_segurado, clock_timestamp(),'D'),1,30),
		substr(trim(both pls_obter_dados_segurado(a.nr_seq_segurado, 'CON')),1,30),
		to_char(a.dt_entrada,'dd/mm/yyyy hh24:mi:ss'),
		to_char(a.dt_alta,'dd/mm/yyyy hh24:mi:ss'),
		substr(obter_valor_dominio(1746,a.ie_tipo_guia),1,255),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador,'N'),1,255) nm_prestador,       
		substr(coalesce(a.cd_guia_referencia,a.cd_guia),1,30),  
		substr(obter_valor_dominio(2819, ie_carater_internacao),1,255),
		substr(a.cd_senha||' / '||a.cd_senha_externa,1,30),
		to_char(dt_mes_competencia,'mm/yyyy'),
		substr(pls_obter_acomodac_plano_ptu(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP')),1,255),
		CASE WHEN a.ie_tipo_conta='I' THEN  CASE WHEN coalesce(a.ie_tipo_acomodacao_ptu::text, '') = '' THEN ptu_obter_ds_acomo_nota_hos(a.nr_seq_nota_cobranca) WHEN a.ie_tipo_acomodacao_ptu='A' THEN ds_expr_enfer_interc_w WHEN a.ie_tipo_acomodacao_ptu='B' THEN ds_expr_apart_interc_w END   ELSE CASE WHEN substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255)='' THEN substr(pls_obter_tp_acomodacao_guia(a.nr_seq_guia),1,50)  ELSE substr(pls_obter_desc_tipo_acomodacao(a.nr_seq_tipo_acomodacao),1,255) END  END ,
		substr(pls_obter_desc_tipo_atend(a.nr_seq_tipo_atendimento),1,255),
		substr(obter_valor_dominio(10631, coalesce(a.ie_regime_atendimento,1)),1,200),
		substr(obter_valor_dominio((10632), coalesce(a.ie_saude_ocupacional,1)),1,200),
		substr(pls_obter_cod_prestador(a.nr_seq_prestador_exec, null)||' - '||pls_obter_dados_prestador(a.nr_seq_prestador_exec,'N'),1,255),  
		substr(a.cd_medico_solicitante||' - '||obter_nome_medico(a.cd_medico_solicitante,'N'),1,255),  
		substr(b.nr_protocolo_prestador,1,30),
		substr(pls_obter_desc_mot_saida_int(a.nr_seq_saida_int),1,255),
		substr(obter_desc_cid(pls_obter_cid_conta(a.nr_sequencia)),1,30),
		CASE WHEN a.ie_tipo_conta='I' THEN substr(CASE WHEN coalesce(a.nr_seq_clinica::text, '') = '' THEN ptu_obter_desc_tipo_internacao(a.nr_seq_nota_cobranca)  ELSE pls_obter_desc_tipo_internacao(a.nr_seq_clinica) END ,1,255)  ELSE substr(pls_obter_desc_tipo_internacao(a.nr_seq_clinica),1,255) END ,--Tratamento realizado para que sempre mantenha o cabeallho atualizado mesmo quando a informao do campo for alterada manualmente OS - 597441 Demitrius
		substr(obter_valor_dominio(3470, ie_origem_conta),1,255),
		to_char(a.dt_atendimento_referencia,'dd/mm/yyyy hh24:mi:ss') dt_atendimento_referencia,
		substr(CASE WHEN coalesce(b.nr_seq_congenere::text, '') = '' THEN                 CASE WHEN coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')::text, '') = '' THEN  null  ELSE pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON') || ' - ' ||                        pls_obter_nome_congenere(pls_obter_dados_segurado(a.nr_seq_segurado,'NRCON')) END   ELSE b.nr_seq_congenere || ' - '|| pls_obter_nome_congenere(b.nr_seq_congenere) END ,1,255),
		substr(pls_obter_dados_ptu_fatura(a.nr_seq_fatura,'F'),1,255),
		substr(pls_obter_dados_ptu_fatura(nr_seq_fatura_w,'NDC'),1,30),
		substr(pls_obter_formacao_plano_seg(a.nr_seq_segurado),1,255),
		to_char(b.dt_atualizacao_nrec) dt_atualizacao,
		pls_obter_se_conta_reapre(a.nr_sequencia),
		a.nr_seq_segurado,
		substr(coalesce(pls_obter_dados_segurado(a.nr_seq_segurado,'ES'),'') ||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'NF')||' - '|| pls_obter_dados_produto(pls_obter_dados_segurado(a.nr_seq_segurado,'NRP'),'P'),1,255),
		substr(pls_obter_cod_prestador(pls_obter_prest_solic_rec(a.nr_sequencia), null) || ' - ' || pls_obter_dados_prestador(pls_obter_prest_solic_rec(a.nr_sequencia),'N'),1,255),
		ie_tipo_conta,
		CASE WHEN ie_tipo_conta='C' THEN CASE WHEN pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado)='S' THEN ds_expr_elegivel_w  ELSE pls_obter_se_benef_elegivel(a.nr_seq_analise,a.nr_seq_segurado) END   ELSE null END ,
		(select w.ds_tipo_conta from pls_tipo_conta w where w.nr_sequencia = a.nr_seq_tipo_conta )ds_tipo_conta,
		a.dt_autorizacao,
		CASE WHEN a.ie_tipo_faturamento='T' THEN 'Total' WHEN a.ie_tipo_faturamento='P' THEN 'Parcial' WHEN a.ie_tipo_faturamento='F' THEN 'Final' WHEN a.ie_tipo_faturamento='C' THEN 'Complementar' END ,
		substr(obter_valor_dominio(1757, a.ie_regime_internacao),1,255),	
		substr(obter_valor_dominio(1759, a.ie_indicacao_acidente),1,255) ds_indicacao_acidente,
		a.cd_guia_prestador,
		CASE WHEN coalesce(a.ie_recem_nascido::text, '') = '' THEN  CASE WHEN a.ie_atend_rn_sala_parto='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END   ELSE CASE WHEN a.ie_recem_nascido='S' THEN  ds_expr_sim_w  ELSE ds_expr_nao_w END  END  ds_atend_rn_sala_parto,
		a.dt_fim_tratamento,
		a.cd_tipo_atend_odont,
		a.ie_tipo_consulta,
		a.ie_tipo_segurado
	into STRICT	cd_usuario_plano_w,
		nm_beneficiario_w,
		ds_idade_benef_w,
		cd_operadora_interc_w,
		ds_entrada_internacao_w,
		ds_saida_internacao_w,
		ds_tipo_guia_analise_w,
		nm_prestador_solic_w,
		cd_guia_principal_w,
		ds_carater_solicitacao_w,
		ds_senha_w,
		ds_mes_ref_lote_w,
		ds_tipo_acomodacao_benef_w,
		ds_tipo_acomodacao_atend_w,
		ds_tipo_atendimento_w,
		ds_regime_atendimento_w,	
		ds_saude_ocupacional_w,	
		nm_prestador_atend_w,
		nm_profissional_solic_w,
		nr_lote_prestador_w,
		ds_motivo_saida_w,
		ds_cid_principal_w,
		ds_tipo_internacao_w,
		ds_origem_conta_w,
		ds_data_atend_w,
		nm_operadora_interc_w,
		nr_fatura_ptu_w,
		nr_nota_credito_debito_w,
		ds_formacao_preco_w,
		ds_criacao_analise_w,
		ds_tipo_apres_guia_w,
		nr_seq_segurado_w,
		ds_dados_produto_w,
		nm_prest_solic_rec_w,
		ie_tipo_conta_w,
		ds_elegivel_w,
		ds_tipo_conta_w,
		dt_autorizacao_w,
		ds_tipo_faturamento_w,
		ds_regime_internacao_w,
		ds_indicacao_acidente_w,
		cd_guia_prestador_w,
		ds_atend_rn_sala_parto_w,
		dt_fim_tratamento_w,
		cd_tipo_atend_odont_w,
		ie_tipo_consulta_w,
		ie_tipo_segurado_w
	from	pls_conta		a,
		pls_protocolo_conta	b
	where  	a.nr_seq_protocolo	= b.nr_sequencia 
	and    	a.nr_sequencia		= nr_seq_conta_w;
end if;

select	sum(b.vl_procedimento_imp)
into STRICT	vl_procedimento_imp_w
from	pls_conta	a,
	pls_conta_proc	b
where	a.nr_sequencia	= b.nr_seq_conta
and	a.nr_seq_analise = nr_seq_analise_p
and	b.vl_procedimento_imp > 0
and	b.ie_status not in ('M','D');

select	sum(b.vl_material_imp)
into STRICT	vl_material_imp_w
from	pls_conta	a,
	pls_conta_mat	b
where	a.nr_sequencia	= b.nr_seq_conta
and	a.nr_seq_analise = nr_seq_analise_p
and	b.vl_material_imp > 0
and	b.ie_status not in ('M','D');

vl_apresentado_w := coalesce(vl_material_imp_w,0) + coalesce(vl_procedimento_imp_w,0);

/*aaschlote 21/11/2012 OS - 510018*/

cd_usuario_plano_aux_w	:= replace(replace(cd_usuario_plano_w,')',''),'(','');
cd_usuario_plano_w	:= '(' || substr(pls_convert_masc_cart_usuario(cd_usuario_plano_aux_w,cd_estabelecimento_w),1,255) || ') ';

nr_seq_grupo_atual_w	:= nr_seq_grupo_p;

if ((nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') and coalesce(ie_tipo_segurado_w::text, '') = '') then
	ie_tipo_segurado_w 	:= pls_obter_dados_segurado(nr_seq_segurado_w, 'TP');
end if;	

insert into w_pls_analise_cabecalho(nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	nr_seq_analise,
	nr_lote_prestador,
	nm_prestador_solic,
	nm_prestador_atend,
	ds_carater_solicitacao,
	ds_mes_ref_lote,
	ds_tipo_internacao,
	ds_cid_principal,
	ds_formacao_preco,
	ds_tipo_apres_guia,
	ds_origem_conta,
	ds_entrada_internacao,
	ds_saida_internacao,
	ds_tipo_acomodacao_benef,
	ie_tipo_cabecalho,
	ds_tipo_acomodacao_atend,
	ds_tipo_saida,
	ds_senha,
	ds_criacao_analise,
	nm_profissional_solic,
	nm_profissional,
	ds_data_atend,
	ds_motivo_saida,
	nm_beneficiario,
	cd_usuario_plano,
	ds_idade_benef,
	ds_tipo_atendimento,
	ds_regime_atendimento,
	ds_saude_ocupacional,
	cd_operadora_interc,
	nm_operadora_interc,
	nr_fatura_ptu,
	nr_nota_credito_debito,
	ie_origem_analise,
	ie_tipo_guia,
	ds_origem_analise,
	ds_tipo_guia_analise,
	cd_guia_principal,
	nr_seq_grupo_aud_atual,
	nr_seq_segurado,
	ds_dados_cabecalho,
	nr_seq_conta,
	vl_apresentado,
	nm_prest_solic_rec,
	ie_tipo_conta,
	ds_elegibilidade,
	ds_tipo_conta,
	dt_autorizacao,
	ds_tipo_faturamento,
	ds_regime_internacao,
	ds_indicacao_acidente,
	cd_guia_prestador,
	ds_atend_rn_sala_parto,
	dt_fim_tratamento,
	cd_tipo_atend_odont,
	cd_versao_tiss,
	ie_tipo_segurado,
	ie_tipo_consulta,
	nr_id_transacao)
values (nextval('w_pls_analise_cabecalho_seq'),
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	nr_seq_analise_p,
	nr_lote_prestador_w,
	nm_prestador_solic_w,
	nm_prestador_atend_w,
	ds_carater_solicitacao_w,
	ds_mes_ref_lote_w,
	ds_tipo_internacao_w,
	ds_cid_principal_w,
	ds_formacao_preco_w,
	ds_tipo_apres_guia_w,
	ds_origem_conta_w,
	ds_entrada_internacao_w,
	ds_saida_internacao_w,
	ds_tipo_acomodacao_benef_w,
	CASE WHEN coalesce(coalesce(nr_fatura_ptu_w,nr_nota_credito_debito_w)::text, '') = '' THEN CASE WHEN ie_tipo_guia_w=3 THEN 'C' WHEN ie_tipo_guia_w=4 THEN 'S' WHEN ie_tipo_guia_w=5 THEN 'I' WHEN ie_tipo_guia_w=6 THEN 'HI' WHEN ie_tipo_guia_w=11 THEN 'TO' END   ELSE 'IN' END ,
	ds_tipo_acomodacao_atend_w,
	ds_tipo_saida_w,
	ds_senha_w,
	ds_criacao_analise_w,
	nm_profissional_solic_w,
	nm_profissional_w,
	ds_data_atend_w,
	ds_motivo_saida_w,
	nm_beneficiario_w,
	cd_usuario_plano_w,
	ds_idade_benef_w,
	ds_tipo_atendimento_w,
	ds_regime_atendimento_w,	
	ds_saude_ocupacional_w,	
	cd_operadora_interc_w,
	nm_operadora_interc_w,
	nr_fatura_ptu_w,
	nr_nota_credito_debito_w,ie_origem_analise_w,
	ie_tipo_guia_w,
	ds_origem_analise_w,
	ds_tipo_guia_analise_w,
	cd_guia_principal_w,
	nr_seq_grupo_atual_w,
	nr_seq_segurado_w,
	ds_dados_produto_w,
	nr_seq_conta_w,
	vl_apresentado_w,
	nm_prest_solic_rec_w,
	ie_tipo_conta_w,
	ds_elegivel_w,
	ds_tipo_conta_w,
	dt_autorizacao_w,
	ds_tipo_faturamento_w,
	ds_regime_internacao_w,
	ds_indicacao_acidente_w,
	cd_guia_prestador_w,
	ds_atend_rn_sala_parto_w,
	dt_fim_tratamento_w,
	cd_tipo_atend_odont_w,
	cd_versao_tiss_w,
	ie_tipo_segurado_w,
	ie_tipo_consulta_w,
	nr_id_transacao_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_analise_cabecalho ( nr_seq_analise_p bigint, nr_seq_grupo_p bigint, nm_usuario_p text, nr_id_transacao_p INOUT bigint) FROM PUBLIC;

