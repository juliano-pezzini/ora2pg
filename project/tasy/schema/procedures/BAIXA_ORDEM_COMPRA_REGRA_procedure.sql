-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixa_ordem_compra_regra (cd_estabelecimento_p bigint) AS $body$
DECLARE

 
cd_local_estoque_w		bigint;
qt_dias_w			bigint;
nr_ordem_compra_w		bigint;
ds_assunto_w			varchar(255);
ds_mensagem_w			varchar(255);
ds_email_origem_w		varchar(255);
ds_email_destino_w		varchar(255);
nm_usuario_w			varchar(255);
ie_param_email_w		varchar(1);
nr_seq_motivo_baixa_aut_w	bigint;

c01 CURSOR FOR 
SELECT	coalesce(cd_local_estoque,0), 
	qt_dias 
from	regra_baixa_ordem_compra 
where	cd_estabelecimento = cd_estabelecimento_p 
order by cd_local_estoque;

c02 CURSOR FOR 
/*baixa as ordens do local informado na regra*/
 
SELECT	distinct 
	a.nr_ordem_compra 
from 	ordem_compra a, 
	ordem_compra_item_entrega b 
where 	a.nr_ordem_compra = b.nr_ordem_compra 
and	a.cd_estabelecimento = cd_estabelecimento_p 
and	((coalesce(b.qt_prevista_entrega,0) > coalesce(b.qt_real_entrega,0)) and coalesce(b.dt_baixa::text, '') = '') 
and	trunc(b.dt_prevista_entrega,'dd') < (trunc(clock_timestamp(),'dd') - qt_dias_w) 
and	coalesce(b.dt_real_entrega::text, '') = '' 
and	coalesce(a.dt_baixa::text, '') = '' 
and	a.cd_local_entrega = cd_local_estoque_w 
and	cd_local_estoque_w > 0 

union
 
/*	Quando a regra não tem local informado, que significa que são as ordens de todos os locais 
	menos os locais que tem na regra, pois esses fará update no select acima*/
 
SELECT	distinct 
	a.nr_ordem_compra 
from 	ordem_compra a, 
	ordem_compra_item_entrega b 
where 	a.nr_ordem_compra = b.nr_ordem_compra 
and	a.cd_estabelecimento = cd_estabelecimento_p 
and	((coalesce(b.qt_prevista_entrega,0) > coalesce(b.qt_real_entrega,0)) and coalesce(b.dt_baixa::text, '') = '') 
and	trunc(b.dt_prevista_entrega,'dd') < (trunc(clock_timestamp(),'dd') - qt_dias_w) 
and	coalesce(b.dt_real_entrega::text, '') = '' 
and	coalesce(a.dt_baixa::text, '') = '' 
and	cd_local_estoque_w = 0 
and	((coalesce(a.cd_local_entrega::text, '') = '') or 
	((a.cd_local_entrega IS NOT NULL AND a.cd_local_entrega::text <> '') and (a.cd_local_entrega not in ( 
						select	coalesce(cd_local_estoque,0) 
						from	regra_baixa_ordem_compra 
						where	cd_estabelecimento = cd_estabelecimento_p))));/*Para fazer somente dos locais que nao tem regra*/
BEGIN 
 
open C01;
loop 
fetch C01 into 
	cd_local_estoque_w, 
	qt_dias_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	open C02;
	loop 
	fetch C02 into 
		nr_ordem_compra_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
 
		select	nr_seq_motivo_baixa_aut 
		into STRICT	nr_seq_motivo_baixa_aut_w 
		from	parametro_compras 
		where	cd_estabelecimento = cd_estabelecimento_p;
 
		update	ordem_compra 
		set	dt_baixa = clock_timestamp(), 
			nr_seq_motivo_baixa = nr_seq_motivo_baixa_aut_w 
		where	nr_ordem_compra = nr_ordem_compra_w;
 
		/*gnicoselli 28/03/2012 OS 419842*/
 
		select	ie_envia_email_baixa_oc 
		into STRICT	ie_param_email_w 
		from	parametro_compras 
		where	cd_estabelecimento = cd_estabelecimento_p;
 
		if (ie_param_email_w = 'S') then 
			select	substr(sup_obter_dados_comprador(cd_estabelecimento, cd_comprador, 'E'),1,255) 
			into STRICT 	ds_email_origem_w 
			from	ordem_compra 
			where 	nr_ordem_compra = nr_ordem_compra_w;
 
			begin 
			select	b.ds_email 
			into STRICT	ds_email_destino_w 
			from  	ordem_compra a, 
				pessoa_juridica_estab b 
			where 	a.cd_cgc_fornecedor = b.cd_cgc		 
			and	a.nr_ordem_compra = nr_ordem_compra_w 
			and	a.cd_estabelecimento = b.cd_estabelecimento;			
			exception 
			when others then 
				ds_email_destino_w := null;
			end;
			 
 
			select	substr(obter_usuario_pessoa(cd_comprador),1,255) 
			into STRICT	nm_usuario_w 
			from	ordem_compra 
			where	nr_ordem_compra = nr_ordem_compra_w;
 
			ds_assunto_w	:= wheb_mensagem_pck.get_texto(297976);
			 
			/*A ordem de compra número #@NR_ORDEM_COMPRA#@ foi baixada pois está pendente por mais de #@QT_DIAS#@ dias.*/
 
			ds_mensagem_w	:= wheb_mensagem_pck.get_texto(297977, 'NR_ORDEM_COMPRA='||nr_ordem_compra_w||';QT_DIAS='||qt_dias_w);
 
			if (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') and (ds_email_origem_w IS NOT NULL AND ds_email_origem_w::text <> '') then 
				begin 
				CALL enviar_email( 
					ds_assunto_w, 
					ds_mensagem_w, 
					ds_email_origem_w, 
					ds_email_destino_w, 
					nm_usuario_w, 
					'A');
				exception 
				when others then 
					ds_assunto_w := ds_assunto_w;
				end;
			end if;
		end if;
		CALL inserir_historico_ordem_compra( 
				nr_ordem_compra_w, 
				'S', 
				wheb_mensagem_pck.get_texto(297978) , 
				wheb_mensagem_pck.get_texto(297979), 
				'Tasy');
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixa_ordem_compra_regra (cd_estabelecimento_p bigint) FROM PUBLIC;

