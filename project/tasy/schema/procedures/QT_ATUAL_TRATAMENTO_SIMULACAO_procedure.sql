-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_atual_tratamento_simulacao ( nr_seq_atendimento_p bigint, nr_seq_pend_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


dt_prevista_sim_w	timestamp;
ds_dia_ciclo_sim_w	varchar(5);	
nr_seq_paciente_w	bigint;
ie_erro_tratamento_w	varchar(1)	:= 'N';
nr_seq_atend_sim_w	bigint;
nr_seq_atendimento_w	bigint;
cd_medico_resp_w	varchar(10);
nr_duracao_w		bigint;
ie_tipo_agendamento_w	varchar(15);
nr_seq_pac_sim_w	bigint;
cd_pessoa_fisica_w	varchar(10);
nr_seq_local_w		bigint;
nr_seq_agenda_w		bigint;
dt_agenda_w		timestamp;
nr_seq_pend_agenda_w	bigint;
cd_protocolo_w		bigint;			
C01 CURSOR FOR
	SELECT	dt_prevista,
		ds_dia_ciclo,
		nr_sequencia
	from	paciente_Atendimento_sim
	where	nr_seq_paciente	= nr_seq_pac_sim_w
	and	(dt_real IS NOT NULL AND dt_real::text <> '')
	and	ie_erro_tratamento_w	= 'N'
	order by 1;			
			

BEGIN
select	max(cd_pessoa_fisica),
	max(b.nr_seq_paciente),
	max(a.cd_medico_Resp),
	max(b.nr_seq_pend_agenda),
	max(a.cd_protocolo)
into STRICT	cd_pessoa_fisica_w,
	nr_seq_paciente_w,
	cd_medico_resp_w,
	nr_seq_pend_agenda_w,
	cd_protocolo_w
from	paciente_setor a,
	paciente_atendimento b
where	a.nr_seq_paciente	= b.nr_seq_paciente
and	b.nr_seq_atendimento	= nr_seq_atendimento_p;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_pac_sim_w
	from	paciente_setor_sim
	where	cd_pessoa_fisica	= cd_pessoa_Fisica_w
	and		cd_protocolo 	    = cd_protocolo_w
	and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_atualizacao_nrec) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp() - interval '30 days');
	
	if (nr_seq_pac_sim_w IS NOT NULL AND nr_seq_pac_sim_w::text <> '') then
		open C01;
		loop
		fetch C01 into	
			dt_prevista_sim_w,
			ds_dia_ciclo_sim_w,
			nr_seq_atend_sim_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			select	max(nr_seq_atendimento)
			into STRICT	nr_seq_atendimento_w
			from	paciente_atendimento
			where	nr_seq_paciente	= nr_seq_paciente_w
			and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prevista) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prevista_sim_w)
			and	ds_dia_ciclo	= ds_dia_ciclo_sim_w;
			
			if (coalesce(nr_seq_atendimento_w::text, '') = '') then
				ie_erro_tratamento_w	:= 'S';
			else
				select	max(nr_seq_local),	
					max(nr_minuto_duracao),
					max(dt_agenda),
					max(ie_tipo_agendamento)
				into STRICT	nr_seq_local_w,
					nr_duracao_w,
					dt_agenda_w,
					ie_tipo_agendamento_w
				from	agenda_quimio
				where	nr_seq_Atend_sim	= nr_seq_atend_sim_w;
			
				select	nextval('agenda_quimio_seq')
				into STRICT	nr_seq_Agenda_w
				;
			
				insert into agenda_quimio(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_pessoa_fisica,
					nr_seq_prof,
					nr_seq_local,
					nr_seq_atendimento,
					nr_minuto_duracao,
					dt_agenda,
					ie_tipo_pend_agenda,
					ie_status_agenda,
					ie_tipo_agendamento,
					ds_observacao,
					cd_estabelecimento,
					cd_medico_resp)
				values (nr_seq_Agenda_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_pessoa_fisica_w,
					null,
					nr_seq_local_w,
					nr_seq_atendimento_w,
					nr_duracao_w,
					dt_agenda_w,
					'Q',
					'N',
					ie_tipo_agendamento_w,
					'',
					cd_estabelecimento_p,
					cd_medico_resp_w);
					
				insert into agenda_quimio_marcacao(nr_sequencia,
					dt_agenda,
					nm_usuario,
					nr_seq_local,
					nr_duracao,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_transferencia,
					nr_seq_prof,
					ie_tipo_agendamento,
					ie_Gerado,
					nr_seq_pend_agenda,
					nr_seq_atendimento)
				values (nextval('agenda_quimio_marcacao_seq'),
					dt_agenda_w,
					nm_usuario_p,
					nr_seq_local_w,
					nr_duracao_w,
					clock_timestamp(),
					clock_timestamp(),
					nm_usuario_p,
					'N',
					null,
					ie_tipo_agendamento_w,
					'S',
					nr_seq_pend_agenda_p,
					nr_seq_atendimento_w);
					
				update	paciente_atendimento
				set	dt_real		= dt_agenda_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_Seq_atendimento	= nr_seq_atendimento_w
				and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_real,dt_prevista)) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_agenda_w);
			end if;
			
			end;
		end loop;
		close C01;
	end if;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_atual_tratamento_simulacao ( nr_seq_atendimento_p bigint, nr_seq_pend_agenda_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

