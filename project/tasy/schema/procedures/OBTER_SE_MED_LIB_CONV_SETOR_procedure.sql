-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_med_lib_conv_setor ( cd_medico_p text, cd_convenio_p bigint, cd_setor_atendimento_p bigint default null, cd_pessoa_fisica_p text default null) AS $body$
DECLARE


ie_permite_w            varchar(1);
nr_seq_regra_setor_w    bigint;
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;
cd_pessoa_w				pessoa_fisica.cd_pessoa_fisica%type;
qt_existe_regra_setor_w bigint;
qt_liberado_setor_w     bigint;
qt_liberado_pac_w	bigint;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;
qt_existe_regra_pac_w	bigint;
ie_passou_regra_setor_w	varchar(1);
ie_passou_regra_pf_w	varchar(1);
cd_setor_w		 bigint;

C01 CURSOR FOR
        SELECT  cd_setor_atendimento
        from    regra_perm_medico_setor
        where   NR_SEQ_REGRA_MED_CONV = nr_seq_regra_setor_w
        and     cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
        order by 1;

C02 CURSOR FOR
        SELECT  cd_pessoa_fisica
        from    regra_perm_medico_pf
        where   NR_SEQ_REGRA_MED_CONV = nr_seq_regra_setor_w
        and     cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
        order by 1;


BEGIN

ie_passou_regra_setor_w := 'N';
ie_passou_regra_pf_w := 'N';

cd_setor_w := cd_setor_atendimento_p;

        SELECT  coalesce(max(ie_permite_atender),'S'),
                max(a.nr_sequencia),
                coalesce(max(c.cd_pessoa_fisica),0)
        into STRICT    ie_permite_w,
                nr_seq_regra_setor_w,
                cd_pessoa_w
        FROM regra_perm_medico_conv a
LEFT OUTER JOIN regra_perm_medico_setor b ON (a.nr_sequencia = b.nr_seq_regra_med_conv)
LEFT OUTER JOIN regra_perm_medico_pf c ON (a.nr_sequencia = c.nr_seq_regra_med_conv)
WHERE cd_medico = cd_medico_p and coalesce(cd_convenio,coalesce(cd_convenio_p,0)) = coalesce(cd_convenio_p,0)   --and     ((c.cd_pessoa_fisica = cd_pessoa_fisica_p) or (c.cd_pessoa_fisica is null))
  and a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

        --Conversado com o Thiago (Thlima) referente a esta situação. OS 436294.
        --if (cd_pessoa_w = '0') then
        --      ie_permite_w := 'N';
        --end if;
	if (ie_permite_w IS NOT NULL AND ie_permite_w::text <> '') then

		if (coalesce(cd_setor_w,0) > 0) then

			select  count(*)
			into STRICT    qt_existe_regra_setor_w
			from    regra_perm_medico_setor a where		NR_SEQ_REGRA_MED_CONV = nr_seq_regra_setor_w
			and     cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento LIMIT 1;

			select  count(*)
			into STRICT    qt_liberado_setor_w
			from    regra_perm_medico_setor a where		NR_SEQ_REGRA_MED_CONV = nr_seq_regra_setor_w
			and     cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
			and     a.cd_setor_atendimento = cd_setor_w LIMIT 1;

			open C01;
			loop
			fetch C01 into
					cd_setor_atendimento_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				if (cd_setor_atendimento_w <> 0) then
						if (cd_setor_atendimento_w = cd_setor_w) and (ie_permite_w = 'N') then
								--O atendimento por este convênio para este médico neste setor não é permitido
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(185925);
						end if;

						if (qt_liberado_setor_w = 0) and (ie_permite_w = 'S') and (qt_existe_regra_setor_w > 0) then
								--'O atendimento para este médico neste setor não é permitido, conforme regra para atendimento de médicos. #@#@');
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(185927);
						end if;
				end if;
				ie_passou_regra_setor_w := 'S';
				end;
			end loop;
			close C01;
		end if;

		if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
			begin
			select  count(*)
			into STRICT    qt_existe_regra_pac_w
			from    regra_perm_medico_pf a where		NR_SEQ_REGRA_MED_CONV = nr_seq_regra_setor_w
			and     cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento LIMIT 1;

			select  count(*)
			into STRICT    qt_liberado_pac_w
			from    regra_perm_medico_pf a where		NR_SEQ_REGRA_MED_CONV = nr_seq_regra_setor_w
			and     cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento
			and     a.cd_pessoa_fisica = cd_pessoa_fisica_p LIMIT 1;

			open C02;
			loop
			fetch C02 into
				cd_pessoa_fisica_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				if (cd_pessoa_fisica_w = cd_pessoa_fisica_p) and (ie_permite_w = 'N') then
					--O atendimento por este convênio para este médico neste setor não é permitido
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(191783);
				end if;

				if (qt_liberado_pac_w = 0) and (ie_permite_w = 'S') and (qt_existe_regra_pac_w > 0) then
					--'O atendimento para este médico neste setor não é permitido, conforme regra para atendimento de médicos. #@#@');
					CALL Wheb_mensagem_pck.exibir_mensagem_abort(191785);
				end if;

				ie_passou_regra_pf_w := 'S';
				end;
			end loop;
			close C02;
			end;
		end if;

		if (ie_permite_w = 'N') then
			if (ie_passou_regra_setor_w = 'N') and (ie_passou_regra_pf_w = 'N') then
				--O atendimento por este convênio para este médico não é permitido
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(185932);
			end if;
		end if;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_med_lib_conv_setor ( cd_medico_p text, cd_convenio_p bigint, cd_setor_atendimento_p bigint default null, cd_pessoa_fisica_p text default null) FROM PUBLIC;

