-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_processo_gedipa ( nr_seq_horario_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text, nr_seq_processo_p bigint) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_prescricao_w			bigint;
cd_material_w			bigint;
nr_seq_mat_hor_w		bigint;
cd_unidade_medida_w		varchar(30);
qt_dispensar_w			double precision;
nr_seq_turno_w			bigint;
cd_setor_atendimento_w		integer;
cd_setor_regra_w		integer;
dt_horario_w			timestamp;
hr_inicio_turno_w		varchar(5);
hr_hora_w			varchar(5);
dt_inicio_turno_w		timestamp;
cd_estabelecimento_w		smallint;
ie_urgente_w			varchar(1);
ds_maq_user_w 			varchar(80);
cd_perfil_ativo_w		integer;
nr_seq_classif_w		bigint;
qt_min_antes_atend_w		bigint;
qt_min_receb_setor_w		bigint;
qt_min_entr_setor_w		bigint;
qt_min_disp_farm_w		bigint;
qt_min_atend_farm_w		bigint;
qt_min_inicio_atend_w		bigint;
cd_tipo_baixa_w			smallint;
ie_conta_paciente_w		varchar(1);
ie_atualiza_estoque_w		varchar(1);
cd_local_estoque_w		smallint;
cd_local_estoque_ant_w		smallint := 0;
ie_hora_antes_w			varchar(1);
qt_prioridade_w			smallint;
ie_gera_lote_orig_w		varchar(1);
ie_gera_lote_medic_pac_w	varchar(1);
ie_gerar_lote_area_w		varchar(1);
ie_termolabil_w			varchar(1);
nr_atendimento_w		bigint;
qt_existe_regra_w		bigint;
ie_gerar_lote_unico_w		bigint := 0;
nr_seq_prescr_mat_w		bigint;
ie_alto_risco_w			varchar(1);
ds_motivo_w			varchar(255);
ds_erro_w			varchar(2000);
ie_motivo_prescricao_w		varchar(5);
ie_regra_disp_w			varchar(1);
qt_total_dispensar_w		double precision;
qt_dispensar_hor_w		double precision;
nr_ocorrencia_w			double precision;
ie_gerar_lote_w			varchar(2);
nr_seq_processo_w		varchar(20);
nr_seq_empresa_w		empresa_integracao.nr_sequencia%type;
ie_existe_w			varchar(1) := 'N';
ie_quimio_w			varchar(1);
ds_param_integ_hl7_w		varchar(4000) := '';

c01 CURSOR FOR
	SELECT  b.cd_material,
		b.nr_sequencia,
		b.nr_seq_material,
		b.cd_unidade_medida,
		b.qt_dispensar,
		b.qt_dispensar_hor,
		coalesce(b.nr_seq_turno,-1),
		b.dt_horario,
		to_char(b.dt_horario,'hh24:mi'),
		coalesce(a.cd_estabelecimento,1),
		b.ie_urgente,
		b.nr_seq_classif,
		coalesce(b.cd_local_estoque,coalesce(c.cd_local_estoque,a.cd_local_estoque)) cd_local,
		c.ie_regra_disp,
		b.nr_seq_processo
	from	material x,
		prescr_mat_hor  b,
		prescr_material c,
		prescr_medica   a
	where	a.nr_prescricao = b.nr_prescricao
	and	((ie_gerar_lote_w = 'SI' and b.nr_sequencia = nr_seq_horario_p) 
	or (ie_gerar_lote_w = 'ST' and b.nr_seq_processo = nr_seq_processo_p))
	and	x.cd_material	= c.cd_material
	and	a.nr_prescricao	= c.nr_prescricao
	and	c.nr_sequencia	= b.nr_seq_material
	and	coalesce(x.ie_gerar_lote,'S') = 'S'
	and	coalesce(b.ie_situacao,'A') <> 'I'
	and	coalesce(c.ie_suspenso,'N') <> 'S'
	and	coalesce(b.ie_padronizado,'S') = 'S'	
	and	coalesce(a.dt_suspensao::text, '') = ''
	and	c.cd_motivo_baixa = 0
	and	coalesce(c.dt_baixa::text, '') = ''
	and	(b.nr_seq_turno IS NOT NULL AND b.nr_seq_turno::text <> '')
	and	((c.ie_regra_disp = 'E') or (coalesce(b.qt_dispensar_hor,0) > 0))
	and	((c.ie_regra_disp = 'E') or (coalesce(b.ie_gerar_lote,'S') = 'S'))
	and	coalesce(c.ie_gerar_lote,'S') = 'S'
	and	coalesce(b.nr_seq_lote::text, '') = ''
	and	obter_se_setor_lote(a.cd_setor_atendimento) = 'S'
	and	obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S'
	and	((ie_gera_lote_orig_w = 'N') or (coalesce(b.ie_aprazado,'N') = 'S'))
	and	((ie_gera_lote_medic_pac_w = 'S') or ((ie_gera_lote_medic_pac_w = 'N') and (coalesce(ie_medicacao_paciente,'N') = 'N')))
	and	((ie_gerar_lote_area_w = 'S') or (coalesce(b.nr_seq_area_prep::text, '') = ''))
	and	((coalesce(ie_termolabil_w,'N') = 'N') or ((coalesce(ie_termolabil_w,'N') = 'S') and (coalesce(x.ie_termolabil,'N') = 'N')))
	and	((coalesce(ie_alto_risco_w,'N') = 'N') or ((coalesce(ie_alto_risco_w,'N') = 'S') and (obter_se_material_risco(a.cd_setor_atendimento,b.cd_material) = 'N')))
	order by cd_local,
		dt_horario,
		nr_seq_classif;

c02 CURSOR FOR
	SELECT	to_char(b.hr_inicial,'hh24:mi')
	from	regra_turno_disp_param b,
		regra_turno_disp a
	where	a.nr_sequencia = b.nr_seq_turno
	and	a.cd_estabelecimento = cd_estabelecimento_w
	and	a.nr_sequencia = nr_seq_turno_w
	and (coalesce(b.cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w)
	order by coalesce(b.cd_setor_atendimento,0),
		to_char(b.hr_inicial,'hh24:mi');

c03 CURSOR FOR
	SELECT	cd_setor_atendimento,
		nr_seq_turno,
		nr_seq_classif,
		qt_min_antes_atend,
		qt_min_receb_setor,
		qt_min_entr_setor,
		qt_min_disp_farm,
		qt_min_atend_farm,
		qt_min_inicio_atend,
		coalesce(ie_hora_antes,'H')
	from	regra_tempo_disp
	where	cd_estabelecimento = cd_estabelecimento_w
	and	coalesce(ie_situacao, 'A') = 'A'
	order by coalesce(nr_seq_classif,0),
		coalesce(nr_seq_turno,0),
		coalesce(cd_setor_atendimento,0);

c04 CURSOR FOR
	SELECT	cd_tipo_baixa
	from	regra_disp_lote_farm
	where	((ie_motivo_prescricao = ie_motivo_prescricao_w) or (coalesce(ie_motivo_prescricao::text, '') = ''))
	and		clock_timestamp() between to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_inicio,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss') and
							to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' '||to_char(coalesce(dt_hora_fim,clock_timestamp()),'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss')
	and		coalesce(cd_setor_atendimento,cd_setor_atendimento_w) = cd_setor_atendimento_w
	and		trunc(clock_timestamp()) between trunc(dt_inicio_vigencia) and trunc(coalesce(dt_fim_vigencia,clock_timestamp()))
	and		ie_situacao = 'A'
	and 	((ie_quimio_w <> 'S' and coalesce(ie_quimioterapicas,'N') <> 'S') or (ie_quimio_w = 'S'))
	order by CASE WHEN ie_quimioterapicas='S' THEN 'Z'  ELSE CASE WHEN ie_quimioterapicas='N' THEN 'C'  ELSE 'B' END  END ,
		coalesce(cd_setor_atendimento,0), coalesce(ie_motivo_prescricao,0);
	


BEGIN

ie_gerar_lote_w := Obter_Valor_Param_Usuario(3112,54,obter_perfil_ativo,nm_usuario_p,wheb_usuario_pck.get_cd_estabelecimento);

begin
select	substr(obter_inf_sessao(0) ||' - ' || obter_inf_sessao(1),1,80)
into STRICT	ds_maq_user_w	
;

cd_perfil_ativo_w := obter_perfil_ativo;

select	coalesce(max(nr_prescricao),0)
into STRICT	nr_prescricao_w
from	prescr_mat_hor
where	nr_sequencia = nr_seq_horario_p;

select 	coalesce(max('S'),'N')
into STRICT	ie_quimio_w
from	paciente_atendimento
where	nr_prescricao = nr_prescricao_w;

select	max(cd_setor_atendimento),
		max(cd_estabelecimento),
		max(nr_atendimento),
		max(ie_motivo_prescricao)
into STRICT	cd_setor_atendimento_w,
		cd_estabelecimento_w,
		nr_atendimento_w,
		ie_motivo_prescricao_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_w;

select	coalesce(max(ie_gerar_lote_area),'S'),
	coalesce(max(ie_gerar_termo_separado),'S'),
	coalesce(max(ie_gerar_alto_risco_sep),'S')
into STRICT	ie_gerar_lote_area_w,
	ie_termolabil_w,
	ie_alto_risco_w
from	parametros_farmacia
where	cd_estabelecimento = cd_estabelecimento_w;

ie_gera_lote_orig_w      := coalesce(obter_valor_param_usuario(1113, 138, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');
ie_gera_lote_medic_pac_w := coalesce(obter_valor_param_usuario(924, 389, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

open c04;
loop
fetch c04 into
	cd_tipo_baixa_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
	begin
	cd_tipo_baixa_w := cd_tipo_baixa_w;
	end;
end loop;
close c04;

if (cd_tipo_baixa_w IS NOT NULL AND cd_tipo_baixa_w::text <> '') then
	select	max(ie_conta_paciente),
		max(ie_atualiza_estoque)
	into STRICT	ie_conta_paciente_w,
		ie_atualiza_estoque_w
	from	tipo_baixa_prescricao
	where	cd_tipo_baixa = cd_tipo_baixa_w
	and	ie_prescricao_devolucao = 'P';
end if;

open c01;
loop
fetch c01 into
	cd_material_w,
	nr_seq_mat_hor_w,
	nr_seq_prescr_mat_w,
	cd_unidade_medida_w,
	qt_dispensar_w,
	qt_dispensar_hor_w,
	nr_seq_turno_w,
	dt_horario_w,
	hr_hora_w,
	cd_estabelecimento_w,
	ie_urgente_w,
	nr_seq_classif_w,
	cd_local_estoque_w,
	ie_regra_disp_w,
	nr_seq_processo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/*
	insert into log_xxxtasy (dt_atualizacao,nm_usuario,cd_log,ds_log) values (sysdate,nm_usuario_p,55821,
			' gerar_lote_processo_gedipa ' ||
			' nr_seq_turno_w = '|| nr_seq_turno_w||
			' nr_seq_classif_w = '|| nr_seq_classif_w||
			' trunc(dt_horario_w,''dd'') = '|| trunc(dt_horario_w,'dd')||
			' cd_local_estoque_w = '|| cd_local_estoque_w||
			' cd_local_estoque_ant_w = '|| cd_local_estoque_ant_w||
			' nr_seq_mat_hor_w = '|| nr_seq_mat_hor_w||
			' nr_prescricao_w = '|| nr_prescricao_w||
			' nr_seq_lote =	'|| nr_sequencia_w||
			' ie_gerar_lote_unico_w = '|| ie_gerar_lote_unico_w);
	commit;
	*/
	
	if (coalesce(ie_regra_disp_w,'S') = 'E') then
		
		update	prescr_mat_hor
		set	ie_gerar_lote = 'S'
		where	nr_sequencia = nr_seq_mat_hor_w;
		
		select	coalesce(max(qt_total_dispensar),0),
			coalesce(max(nr_ocorrencia),0)
		into STRICT	qt_total_dispensar_w,
			nr_ocorrencia_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_w
		and	nr_sequencia = nr_seq_prescr_mat_w;
		
		if (qt_total_dispensar_w > 0) and (nr_ocorrencia_w IS NOT NULL AND nr_ocorrencia_w::text <> '') then		
			qt_dispensar_hor_w := coalesce(dividir(qt_total_dispensar_w, nr_ocorrencia_w),0);
			
			if (qt_dispensar_hor_w > 0) then				
				update	prescr_mat_hor
				set	qt_dispensar_hor = qt_dispensar_hor_w
				where	nr_sequencia = nr_seq_mat_hor_w;
			end if;
		end if;
		
	end if;
	
	if (ie_gerar_lote_unico_w = 0) or
		(cd_local_estoque_w <> cd_local_estoque_ant_w AND cd_local_estoque_ant_w <> 0) then
		begin

		open c02;
		loop
		fetch c02 into
			hr_inicio_turno_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			hr_inicio_turno_w	:= hr_inicio_turno_w;
			end;
		end loop;
		close c02;

		select	coalesce(max(qt_prioridade),999)
		into STRICT	qt_prioridade_w
		from	classif_lote_disp_far
		where	nr_sequencia	= nr_seq_classif_w;
		
		if (hr_hora_w < hr_inicio_turno_w) then
			dt_inicio_turno_w 	:= to_date(to_char(dt_horario_w - 1,'dd/mm/yyyy')||' '||replace(hr_inicio_turno_w,'24:','00:') ||':00','dd/mm/yyyy hh24:mi:ss');
		else
			dt_inicio_turno_w	:= to_date(to_char(dt_horario_w,'dd/mm/yyyy')||' '||replace(hr_inicio_turno_w,'24:','00:') ||':00','dd/mm/yyyy hh24:mi:ss');
		end if;
		
		select	nextval('ap_lote_seq')
		into STRICT	nr_sequencia_w
		;
		
		insert into ap_lote(nr_sequencia,
			dt_inicio_turno,
			dt_prim_horario,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_geracao_lote,
			nr_prescricao,
			nr_seq_turno,
			ie_status_lote,
			cd_setor_atendimento,
			nr_seq_classif,
			nm_usuario_geracao,
			ds_maquina_geracao,
			cd_perfil_geracao,
			qt_min_atraso_inicio_atend,
			qt_min_atraso_atend,
			qt_min_atraso_disp,
			qt_min_atraso_entrega,
			qt_min_atraso_receb,
			cd_tipo_baixa,
			ie_conta_paciente,
			ie_atualiza_estoque,
			cd_local_estoque,
			qt_prioridade,
			ie_origem_lote)
		values (nr_sequencia_w,
			dt_inicio_turno_w,
			dt_horario_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_prescricao_w,
			nr_seq_turno_w,
			'G',
			cd_setor_atendimento_w,
			nr_seq_classif_w,
			nm_usuario_p,
			ds_maq_user_w,
			cd_perfil_ativo_w,
			0,
			0,
			0,
			0,
			0,
			cd_tipo_baixa_w,
			ie_conta_paciente_w,
			ie_atualiza_estoque_w,
			cd_local_estoque_w,
			qt_prioridade_w,
			'GLPG');
		
		select	substr(ds_motivo,1,250)
		into STRICT	ds_motivo_w
		from	motivo_geracao_lote_gedipa
		where	nr_sequencia = nr_seq_motivo_p;
		
		insert into ap_lote_historico(
			nr_sequencia,				dt_atualizacao,
			nm_usuario,				nr_seq_lote,
			ds_evento,				ds_log)
		values (	nextval('ap_lote_historico_seq'),		clock_timestamp(),
			nm_usuario_p,				nr_sequencia_w,
			wheb_mensagem_pck.get_Texto(311470),	ds_motivo_w);
		
		end;
	end if;

	ie_gerar_lote_unico_w	:= nr_sequencia_w;
	cd_local_estoque_ant_w	:= cd_local_estoque_w;

	insert into ap_lote_item(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lote,
		nr_seq_mat_hor,
		ie_prescrito,
		qt_dispensar,
		qt_total_dispensar,
		cd_material,
		cd_unidade_medida,
		ie_urgente)
	values (nextval('ap_lote_item_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_w,
		nr_seq_mat_hor_w,
		'S',
		coalesce(qt_dispensar_hor_w,0),
		qt_dispensar_w,
		cd_material_w,
		cd_unidade_medida_w,
		ie_urgente_w);
		
	update	prescr_mat_hor
	set	nr_seq_lote = nr_sequencia_w
	where	nr_sequencia = nr_seq_mat_hor_w;

	end;
end loop;
close c01;

open c03;
loop
fetch c03 into
	cd_setor_regra_w,
	nr_seq_turno_w,
	nr_seq_classif_w,
	qt_min_antes_atend_w,
	qt_min_receb_setor_w,
	qt_min_entr_setor_w,
	qt_min_disp_farm_w,
	qt_min_atend_farm_w,
	qt_min_inicio_atend_w,
	ie_hora_antes_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	if (ie_hora_antes_w = 'H') then
		begin
		update	ap_lote
		set	dt_atend_lote		= round(dt_prim_horario - dividir(qt_min_antes_atend_w,1440),'mi'),
			dt_limite_inicio_atend	= round(dt_prim_horario - dividir(qt_min_inicio_atend_w,1440),'mi'),
			dt_limite_atend		= round(dt_prim_horario - dividir(qt_min_atend_farm_w,1440),'mi'),
			dt_limite_disp_farm	= round(dt_prim_horario - dividir(qt_min_disp_farm_w,1440),'mi'),
			dt_limite_entrega_setor	= round(dt_prim_horario - dividir(qt_min_entr_setor_w,1440),'mi'),
			dt_limite_receb_setor	= round(dt_prim_horario - dividir(qt_min_receb_setor_w,1440),'mi')
		where	nr_prescricao		= nr_prescricao_w
		and	((coalesce(cd_setor_regra_w::text, '') = '') or (cd_setor_regra_w = cd_setor_atendimento))
		and	((coalesce(nr_seq_turno_w::text, '') = '') or (nr_seq_turno_w = nr_seq_turno))
		and	((coalesce(nr_seq_classif_w::text, '') = '') or (nr_seq_classif_w = nr_seq_classif));
		end;
	elsif (ie_hora_antes_w = 'I') then
		begin
		update	ap_lote
		set	dt_atend_lote		= round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi'),
			dt_limite_inicio_atend	= round(dt_prim_horario - dividir(qt_min_inicio_atend_w,1440),'mi'),
			dt_limite_atend		= round(dt_prim_horario - dividir(qt_min_atend_farm_w,1440),'mi'),
			dt_limite_disp_farm	= round(dt_prim_horario - dividir(qt_min_disp_farm_w,1440),'mi'),
			dt_limite_entrega_setor	= round(dt_prim_horario - dividir(qt_min_entr_setor_w,1440),'mi'),
			dt_limite_receb_setor	= round(dt_prim_horario - dividir(qt_min_receb_setor_w,1440),'mi')
		where	nr_prescricao		= nr_prescricao_w
		and	((coalesce(cd_setor_regra_w::text, '') = '') or (cd_setor_regra_w = cd_setor_atendimento))
		and	((coalesce(nr_seq_turno_w::text, '') = '') or (nr_seq_turno_w = nr_seq_turno))
		and	((coalesce(nr_seq_classif_w::text, '') = '') or (nr_seq_classif_w = nr_seq_classif));
		end;
	elsif (ie_hora_antes_w = 'T') then
		begin
		update	ap_lote
		set	dt_atend_lote		= CASE WHEN to_char(round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi'), 'hh24:mi:ss')='00:00:00' THEN  --os186690
			round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi') + 1/86400  ELSE round(dt_inicio_turno - dividir(qt_min_antes_atend_w,1440),'mi') END ,
			dt_limite_inicio_atend	= CASE WHEN to_char(round(dt_inicio_turno - dividir(qt_min_inicio_atend_w,1440),'mi'), 'hh24:mi:ss')='00:00:00' THEN			round(dt_inicio_turno - dividir(qt_min_inicio_atend_w,1440),'mi') + 1/86400  ELSE round(dt_inicio_turno - dividir(qt_min_inicio_atend_w,1440),'mi') END , 
			dt_limite_atend		= round(dt_inicio_turno - dividir(qt_min_atend_farm_w,1440),'mi'),
			dt_limite_disp_farm	= round(dt_inicio_turno - dividir(qt_min_disp_farm_w,1440),'mi'),
			dt_limite_entrega_setor	= round(dt_inicio_turno - dividir(qt_min_entr_setor_w,1440),'mi'),
			dt_limite_receb_setor	= round(dt_inicio_turno - dividir(qt_min_receb_setor_w,1440),'mi')
		where	nr_prescricao		= nr_prescricao_w
		and	((coalesce(cd_setor_regra_w::text, '') = '') or (cd_setor_regra_w = cd_setor_atendimento))
		and	((coalesce(nr_seq_turno_w::text, '') = '') or (nr_seq_turno_w = nr_seq_turno))
		and	((coalesce(nr_seq_classif_w::text, '') = '') or (nr_seq_classif_w = nr_seq_classif));
		end;
	end if;
	end;
end loop;
close c03;

-- Rotina para envio da prescricao para integracao
begin
select	nr_sequencia
into STRICT	nr_seq_empresa_w
from	empresa_integracao
where	upper(nm_empresa) = 'SWISSLOG';

select	'S'
into STRICT	ie_existe_w
from	far_setores_integracao
where	nr_seq_empresa_int = nr_seq_empresa_w
and	cd_setor_atendimento = cd_setor_atendimento_w;
exception
when others then
	nr_seq_empresa_w := 0;
	ie_existe_w := 'N';
end;

if (ie_existe_w = 'S') then
	ds_param_integ_hl7_w := 'nr_prescricao=' || nr_prescricao_w || obter_separador_bv ||
				'nr_atendimento=' || nr_atendimento_w || obter_separador_bv ||
				'ie_aprazado=' || 'GPMH' || nr_seq_horario_p || obter_separador_bv ||
				'ie_origem=' || 'GLAP' || obter_separador_bv ||
				'nr_seq_horario_p=' || null || obter_separador_bv;
	
	-- Envio das informacoes do paciente internado para a integracao
	CALL swisslog_gerar_integracao(434, ds_param_integ_hl7_w);
	
	update	ap_lote
	set 	ie_integracao = 'W'
	where 	nr_prescricao = nr_prescricao_w;
	
end if;
-- Rotina para envio da prescricao para integracao
exception
when others then
	ds_erro_w := substr(sqlerrm(SQLSTATE),1,2000);
	/* insert into log_XXtasy(
		dt_atualizacao,
		nm_usuario,
		cd_log,
		ds_log)
	values(	sysdate,
		nm_usuario_p,
		4141,
		ds_erro_w);
	commit;
	*/
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_processo_gedipa ( nr_seq_horario_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text, nr_seq_processo_p bigint) FROM PUBLIC;

