-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_oc_conta_atrib ( nr_seq_conta_p bigint, nr_seq_ocorrencia_p bigint, ie_reconsistencia_p text, cd_estabelecimento_p text, nm_usuario_p text, ie_gerado_ocorrencia_p INOUT text, nr_seq_regra_atrib_p bigint) AS $body$
DECLARE


/*askono  25/07/11 OS 324811 */

ds_observacao_w			varchar(400);
ie_atributo_w			varchar(2);
ie_obrigatorio_w		varchar(1);
ie_campo_w			varchar(255);
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_regra_w			bigint;
nr_seq_motivo_glosa_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_segurado_w		bigint;
vl_atributo_w			varchar(255);
ie_qtd_parto_w			varchar(1);
qt_obito_precoce_w		varchar(1);
qt_nasc_vivos_termo_w		varchar(2);
qt_nasc_vivos_prematuros_w 	varchar(2);
qt_obito_tardio_w		varchar(1);
qt_total_w			bigint;
qt_minimo_caracter_w		bigint;
qt_caracter_w			bigint;
ie_tipo_guia_w			varchar(2);
ds_query_proc_w			varchar(400) := ''; -- testar inclusao de restricao  na pls_cojnta_proc
ie_origem_proced_w		varchar(2);
cd_procedimento_w		varchar(20);
ie_procedimento_w		varchar(2);
ie_alterado_analise_w 		varchar(1) := 'N';
qt_ocorrencia_w			bigint;
ie_gerado_ocorrencia_w		varchar(1) := 'N';
cd_matricula_estipulante_w	varchar(30);
nr_seq_plano_w			bigint := 0;
nr_seq_guia_w			numeric(30);
cd_guia_referencia_w		varchar(20);


BEGIN
/*dados da conta*/

begin
select 	nr_seq_segurado,
	qt_obito_precoce,
	qt_nasc_vivos_termo,
	qt_nasc_vivos_prematuros,
	qt_obito_tardio,
	ie_tipo_guia,
	nr_seq_plano,
	nr_seq_guia,
	coalesce(cd_guia_referencia, cd_guia)
into STRICT	nr_seq_segurado_w,
	qt_obito_precoce_w,
	qt_nasc_vivos_termo_w,
	qt_nasc_vivos_prematuros_w,
	qt_obito_tardio_w,
	ie_tipo_guia_w,
	nr_seq_plano_w,
	nr_seq_guia_w,
	cd_guia_referencia_w
from 	pls_conta
where	nr_sequencia = nr_seq_conta_p;
exception
when others then
	nr_seq_segurado_w	:= null;
end;

qt_total_w	:= coalesce(qt_obito_precoce_w,0) + coalesce(qt_nasc_vivos_termo_w,0) + coalesce(qt_nasc_vivos_prematuros_w,0) +
			coalesce(qt_obito_tardio_w,0);

select	a.nr_sequencia,
	a.ie_atributo,
	a.ie_obrigatorio,
	a.nr_seq_ocorrencia,
	a.ie_qtd_parto,
	a.qt_minimo_caracter,
	a.ie_origem_proced,
	a.cd_procedimento
into STRICT	nr_seq_regra_w,
	ie_atributo_w,
	ie_obrigatorio_w,
	nr_seq_ocorrencia_w,
	ie_qtd_parto_w,
	qt_minimo_caracter_w,
	ie_origem_proced_w,
	cd_procedimento_w
from 	pls_ocorrencia_conta_atrib	a
where	a.ie_situacao 		= 'A'
and	a.ie_tipo_ocorrencia	= 'C'
and	a.nr_sequencia 		= nr_seq_regra_atrib_p;

-----------------------------------/*VERIFICAÇÕES DO ATRIBUTO SELECIONADO NA REGRA*/-------------------------------------------------
if (coalesce(ie_atributo_w,0) <> 0) then
	if (coalesce(ie_atributo_w,0) = 1) then
		ie_campo_w := 'DT_ALTA';
	elsif (coalesce(ie_atributo_w,0) = 2) then
		ie_campo_w := 'CD_DOENCA'; --CID principal (CD_DOENCA) pls_diagnostico_conta
	elsif (coalesce(ie_atributo_w,0) = 3) then
		ie_campo_w := 'IE_OBITO_MULHER';
	elsif (coalesce(ie_atributo_w,0) = 4) then
		ie_campo_w := 'QT_OBITO_PRECOCE';
	elsif (coalesce(ie_atributo_w,0) = 5) then
		ie_campo_w := 'QT_OBITO_TARDIO';
	elsif (coalesce(ie_atributo_w,0) = 6) then
		ie_campo_w := 'QT_NASC_VIVOS_TERMO';
	elsif (coalesce(ie_atributo_w,0) = 7 ) then
		ie_campo_w := 'QT_NASC_MORTOS';
	elsif (coalesce(ie_atributo_w,0) = 8) then --CID Óbito(CD_DOENCA)  pls_diagnost_conta_obito
		ie_campo_w := 'CD_DOENCA';
	elsif (coalesce(ie_atributo_w,0) = 9) then
		ie_campo_w := 'NR_DECLARACAO_OBITO';
	elsif (coalesce(ie_atributo_w,0) = 12) then
		ie_campo_w := 'DS_INDICACAO_CLINICA';
	elsif (coalesce(ie_atributo_w,0) = 15) then
		ie_campo_w := 'DT_ENTRADA';
	elsif (coalesce(ie_atributo_w,0) = 16) then
		ie_campo_w := 'CD_GUIA_REFERENCIA';
	elsif (coalesce(ie_atributo_w,0) = 18) then
		ie_campo_w := 'CD_MATRICULA_ESTIPULANTE';
	elsif (coalesce(ie_atributo_w,0) = 19) then
		ie_campo_w := 'CD_MATRICULA_ESTIPULANTE';
	elsif (coalesce(ie_atributo_w,0) = 22) then
		ie_campo_w := 'NR_SEQ_SAIDA_CONSULTA';
	elsif (coalesce(ie_atributo_w,0) = 29) then
		ie_campo_w := 'CD_GUIA';
	elsif (coalesce(ie_atributo_w,0) = 30) then
		ie_campo_w := 'CD_GUIA_PRESTADOR';
	elsif (coalesce(ie_atributo_w,0) = 32) then
		ie_campo_w := 'CD_CNES';
	end if;

	/*pls_diagnostico_conta*/

	if (coalesce(ie_atributo_w,0) = 2) then

		vl_atributo_w := Obter_valor_Dinamico_char_bv('select max('||ie_campo_w||') from pls_diagnostico_conta where nr_seq_conta = :nr_seq_conta ', 'nr_seq_conta='||nr_seq_conta_p||';', vl_atributo_w);
	/*pls_diagnost_conta_obito*/

	elsif (coalesce(ie_atributo_w,0) in (8,9)) then

		vl_atributo_w := Obter_valor_Dinamico_char_bv('select max('||ie_campo_w||') from pls_diagnost_conta_obito where nr_seq_conta = :nr_seq_conta ', 'nr_seq_conta='||nr_seq_conta_p||';', vl_atributo_w);
	/*pls_requisicao*/

	elsif (coalesce(ie_atributo_w,0) = 18) then
		-- JJUNG-  OS 474896 - verificar se a guia existe, se não existe selecionar a guia de referencia do plano
		if (coalesce(nr_seq_guia_w::text, '') = '') then
			begin
			select 	nr_sequencia
			into STRICT	nr_seq_guia_w
			from	pls_guia_plano
			where 	cd_guia = cd_guia_referencia_w;
			exception
			when others then
				nr_seq_guia_w	:= null;
			end;
		end if;

		vl_atributo_w := Obter_valor_Dinamico_char_bv('select b.'||ie_campo_w||' from pls_execucao_requisicao a, pls_requisicao b where a.nr_seq_requisicao = b.nr_sequencia and a.nr_seq_guia = :nr_seq_guia', 'nr_seq_guia='||nr_seq_guia_w||';', vl_atributo_w);
	/*pls_segurado*/

	elsif (coalesce(ie_atributo_w,0) = 19) then

		vl_atributo_w := Obter_valor_Dinamico_char_bv('select '||ie_campo_w||' from pls_segurado where nr_sequencia = :nr_seq_segurado ', 'nr_seq_segurado='||nr_seq_segurado_w||';', vl_atributo_w);
	/*pls_conta*/

	elsif (coalesce(ie_atributo_w,0) in (1,3,4,5,6,7,12,15,16,22,29,30,32)) then

		vl_atributo_w := Obter_valor_Dinamico_char_bv('select '||ie_campo_w||' from pls_conta where nr_sequencia = :nr_seq_conta ', 'nr_seq_conta='||nr_seq_conta_p||';', vl_atributo_w);

		/*
		select 	max(cd_guia_referencia)
		into 	vl_atributo_w
		from 	pls_conta
		where	nr_sequencia = nr_seq_conta_p;
		*/
	end if;


	qt_caracter_w := coalesce(length(trim(both vl_atributo_w)),0);

	/*Consiste se o atributo é obrigatório*/

	/*Diego - Kono - A obrigatoriedade indica o que ocorre caso seja enviado o valor nulo.*/

	if (coalesce(ie_obrigatorio_w,'N') = 'S') then

		if (coalesce(qt_minimo_caracter_w,0) > 0) then

			if (qt_caracter_w = 0) then
				ie_gerado_ocorrencia_w	:= 'S';
				goto final;
			else
				if (qt_caracter_w >= qt_minimo_caracter_w) then
					ie_gerado_ocorrencia_w	:= 'N';
					goto final;
				else
					ie_gerado_ocorrencia_w	:= 'S';
					goto final;
				end if;
			end if;

		else


			if (qt_caracter_w = 0) then
				ie_gerado_ocorrencia_w	:= 'S';
				goto final;
			else
				ie_gerado_ocorrencia_w	:= 'N';
				goto final;
			end if;

		end if;


	elsif (coalesce(ie_obrigatorio_w,'N') = 'N') then

		if (coalesce(qt_minimo_caracter_w,0) > 0) then
			if (qt_caracter_w = 0) then
				ie_gerado_ocorrencia_w	:= 'N';
				goto final;
			else
				if (qt_caracter_w >= qt_minimo_caracter_w) then
					ie_gerado_ocorrencia_w	:= 'N';
					goto final;
				else
					ie_gerado_ocorrencia_w	:= 'S';
					goto final;
				end if;
			end if;
		end if;
	end if;


end if;/*FIM VERIFICAÇÃO DO ATRIBUTO*/
<<final>> /* Obrigatório uma linha após FINAL */
--------------------------------------------------------------------------------------/*OUTRAS VERIFICAÇÕES*/------------------------------------------------------------------------------------------------------------------------------------------------------
/*Consistir a quantidade total informado nos campos:
	- Qtd. óbito neonatal precoce QT_OBITO_PRECOCE
	- Nasc. vivos a termo QT_NASC_VIVOS_TERMO
	- Nasc. vivos prematuro	 QT_NASC_VIVOS_PREMATUROS
	- Qtd. óbito neonatal tardio QT_OBITO_TARDIO  */
if (coalesce(ie_qtd_parto_w,'N') = 'S') then
	if (qt_total_w > 0) then
		ie_gerado_ocorrencia_w := 'N';
	else
		ie_gerado_ocorrencia_w := 'S';
	end if;
end if;

ie_gerado_ocorrencia_p := ie_gerado_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_oc_conta_atrib ( nr_seq_conta_p bigint, nr_seq_ocorrencia_p bigint, ie_reconsistencia_p text, cd_estabelecimento_p text, nm_usuario_p text, ie_gerado_ocorrencia_p INOUT text, nr_seq_regra_atrib_p bigint) FROM PUBLIC;

