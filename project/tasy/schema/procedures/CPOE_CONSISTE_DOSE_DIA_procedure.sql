-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_consiste_dose_dia (( nr_atendimento_p bigint, cd_material_p bigint, qt_dose_p bigint, cd_unid_med_dose_p text, ds_horarios_p text, ie_urgencia_p text, qt_dose_limite_p bigint, cd_unid_med_limite_p text, dt_inicio_p timestamp, nr_seq_cpoe_p bigint default null, ie_tipo_item_p text default null, nr_ocorrencia_p bigint default null, qt_dose_adicional_p bigint default null, cd_materiais_ficha_tecnica_p text default null, ie_consiste_p OUT text, qt_dose_out_p OUT bigint, dt_adm_adicional_p cpoe_material.dt_adm_adicional%type default null, qt_dose_ataque_p cpoe_material.qt_dose_ataque%type default null) is qt_dose_adm_w double precision) AS $body$
DECLARE

qt_dose_extra_w	cpoe_material.qt_dose_adicional%type;

BEGIN
	qt_dose_extra_w := 0;
	if ((dt_adm_adicional_p >= dt_inicio_valida_w and dt_adm_adicional_p <= dt_fim_valida_w) or dt_adm_adicional_p >= dt_inicio_valida_w + 1) then
		qt_dose_extra_w := qt_dose_adicional_w;
	end if;
	if ((clock_timestamp() >= dt_inicio_valida_w) and (clock_timestamp() <= dt_fim_valida_w)) then
		qt_dose_extra_w := qt_dose_extra_w + qt_dose_ataque_w;
	end if;
	return;
end;

function somar_dose_total return;
	
	if (qt_dose_compare_w > qt_dose_total_out_w) then
		qt_dose_total_out_w := qt_dose_compare_w;
	end if;
	
	return;
end;
	
procedure obter_dose_total_nao_liberada(dt_inicio_valida_p	IN date,
										dt_fim_valida_p		IN date) is

begin
	if (nr_seq_cpoe_p IS NOT NULL AND nr_seq_cpoe_p::text <> '' AND ie_tipo_item_p IS NOT NULL AND ie_tipo_item_p::text <> '') then
		open c01;
		loop
		fetch c01 into
			qt_dose_adm_w,
			cd_unid_med_dose_adm_w,
			ds_horarios_nao_lib_w,
			dt_inicio_w,
			cd_material_item_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
			
			if (dt_inicio_w < dt_inicio_p -1 and trunc(dt_inicio_w, 'DD') < trunc(clock_timestamp(), 'DD')) then
				dt_inicio_w := dt_inicio_valida_w;
			end if;
			
			qt_dose_adm_w := qt_dose_adm_w * obter_qtd_horarios_periodo(ds_horarios_nao_lib_w, dt_inicio_w, dt_inicio_valida_p, dt_fim_valida_p);
		
			qt_total_dose_sem_lib_w	:= trunc(qt_total_dose_sem_lib_w, 3) + obter_dose_convertida(cd_material_item_w, qt_dose_adm_w, cd_unid_med_dose_adm_w, cd_unid_med_limite_p);
		end;
		end loop;
		close c01;
	end if;
end;

procedure obter_dose_total_liberada	is

qt_teste_w 	cpoe_material.qt_dose%type;

begin
	open c02;
	loop
	fetch c02 into
		qt_dose_adm_w,
		cd_unid_med_dose_adm_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
		qt_total_dose_adm_w	:= qt_total_dose_adm_w + obter_dose_convertida(cd_material_p, qt_dose_adm_w, cd_unid_med_dose_adm_w, cd_unid_med_limite_p);
				
		qt_dose_compare_w := (trunc(coalesce(qt_total_dose_pres_w,0),3) + trunc(coalesce(qt_total_dose_adm_w,0),3) + trunc(coalesce(qt_total_dose_sem_lib_w,0),3) + obter_dose_extra_vigencia);
								
		if (qt_dose_compare_w > trunc(qt_dose_limite_p,3)) then
			ds_retorno_w	:=  'S';
		else
			if (qt_dose_compare_w > qt_dose_total_out_w) then
				qt_dose_total_out_w := qt_dose_compare_w;
			end if;			
		end if;
		
	end;
	end loop;
	close c02;
end;

procedure consiste_limite_dose_dia(dt_horario_p IN date) is
begin
	qt_total_dose_adm_w := 0;
	qt_total_dose_sem_lib_w := 0;
	
	if (ds_horarios_p IS NOT NULL AND ds_horarios_p::text <> '') then
		qt_total_dose_pres_w := qt_total_dose_pres_w + obter_dose_convertida(cd_material_p, qt_dose_p, cd_unid_med_dose_p, cd_unid_med_limite_p);
	else
		qt_total_dose_pres_w := obter_dose_convertida(cd_material_p, (qt_dose_p * nr_ocorrencia_w), cd_unid_med_dose_p, cd_unid_med_limite_p);
	end if;

	dt_inicio_valida_w := dt_horario_p - 1;
	dt_fim_valida_w := dt_horario_p;

	-- 1 dia pra tras
	obter_dose_total_nao_liberada(dt_inicio_valida_w, dt_fim_valida_w);

	if (somar_dose_total > trunc(qt_dose_limite_p,3)) then
		ds_retorno_w	:= 	'S';
	else
		obter_dose_total_liberada;
		-- 1 dia a frente
		if (ds_retorno_w = 'N') then
			qt_total_dose_adm_w := 0;
			qt_total_dose_sem_lib_w := 0;
			dt_inicio_valida_w := dt_horario_p;
			dt_fim_valida_w := dt_horario_p + 1;
			
			obter_dose_total_nao_liberada(dt_inicio_valida_w, dt_fim_valida_w);
			
			if (somar_dose_total > trunc(qt_dose_limite_p,3)) then
				ds_retorno_w	:= 'S';
			else
				obter_dose_total_liberada;
				-- 12 horas antes e 12 horas depois de cada horario
				if (ds_retorno_w = 'N') then
					qt_total_dose_adm_w := 0;
					qt_total_dose_sem_lib_w := 0;
					dt_inicio_valida_w := dt_horario_p - (12/24);
					dt_fim_valida_w := dt_horario_p + (12/24);
					
					obter_dose_total_nao_liberada(dt_inicio_valida_w, dt_fim_valida_w);
					
					if (somar_dose_total > trunc(qt_dose_limite_p,3)) then
						ds_retorno_w	:= 'S';
					else							
						obter_dose_total_liberada;
					end if;
				end if;
			end if;
		end if;
	end if;
end;

begin
if (ie_tipo_item_p in ('MCOMP1', 'MCOMP2', 'MCOMP3', 'MCOMP4', 'MCOMP5', 'MCOMP6', 'MDIL', 'MAT', 'MRECONS')) then
	ie_tipo_item_w := 'M';
	
	select	max(nr_seq_cpoe_anterior)
	into STRICT	nr_seq_cpoe_atenrior_w
	from	cpoe_material
	where	nr_sequencia = nr_seq_cpoe_p;
elsif (ie_tipo_item_p in ('PMAT1', 'PMAT2', 'PMAT3', 'PMAT4', 'PMAT5')) then
	ie_tipo_item_w := 'P';
	
	select	max(nr_seq_cpoe_anterior)
	into STRICT	nr_seq_cpoe_atenrior_w
	from	cpoe_procedimento
	where	nr_sequencia = nr_seq_cpoe_p;
elsif (ie_tipo_item_p in ('GMAT1', 'GMAT2', 'GMAT3')) then
	ie_tipo_item_w := 'G';
	
	select	max(nr_seq_cpoe_anterior)
	into STRICT	nr_seq_cpoe_atenrior_w
	from	cpoe_gasoterapia
	where	nr_sequencia = nr_seq_cpoe_p;
end if;


nr_ocorrencia_w	:= coalesce(nr_ocorrencia_p,1);


if (cd_materiais_ficha_tecnica_p IS NOT NULL AND cd_materiais_ficha_tecnica_p::text <> '') then
    cd_material_w := cd_materiais_ficha_tecnica_p;
else
    cd_material_w := to_char(cd_material_p);
end if;

qt_dose_adicional_w := trunc(coalesce(obter_dose_convertida(cd_material_p, coalesce(qt_dose_adicional_p, 0), cd_unid_med_dose_p, cd_unid_med_limite_p), 0), 3);
qt_dose_ataque_w := trunc(coalesce(obter_dose_convertida(cd_material_p, coalesce(qt_dose_ataque_p, 0), cd_unid_med_dose_p, cd_unid_med_limite_p), 0), 3);

ds_horarios_w	:= replace(replace(replace(ds_horarios_p,'  ',' '),'  ',' '),'  ',' ');

if (ds_horarios_p <> 'ACM') and (ds_horarios_p <> 'SN') and (ds_horarios_p IS NOT NULL AND ds_horarios_p::text <> '')	then
	
	select	padroniza_horario_prescr(ds_horarios_w, to_char(dt_inicio_p,'dd/mm/yyyy hh24:mi')) || ' '
	into STRICT	ds_horarios_w
	;
	
	while (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') loop
	begin
				
		select	position(' ' in ds_horarios_w)
		into STRICT	k
		;
		
		if (k > 1) and ((substr(ds_horarios_w, 1, k -1) IS NOT NULL AND (substr(ds_horarios_w, 1, k -1))::text <> '')) then
		begin
				
			ds_hora_w		:= substr(ds_horarios_w, 1, k-1);
			ds_hora_w		:= replace(ds_hora_w, ' ', null);
			ds_horarios_w		:= substr(ds_horarios_w, k + 1, 2000);
			if (coalesce(ie_urgente_w,'N') = 'N') then
			
				if (position('A' in ds_hora_w) > 0) and (qt_dia_adic_w	= 0) then
					qt_dia_adic_w	:= 1;
				elsif (position('AA' in ds_hora_w) > 0) then
					qt_dia_adic_w	:= qt_dia_adic_w + 1;
				end if;
			
			end if;
			
			ds_hora_w	:= replace(ds_hora_w,'A',null);
			ds_hora_w	:= replace(ds_hora_w,'A',null);

			dt_horario_w	:= pkg_date_utils.get_time(dt_inicio_p + qt_dia_adic_w, replace(ds_hora_w, 'A', ''), 0);
			
			consiste_limite_dose_dia(dt_horario_w);

		end;
		elsif (ds_horarios_w IS NOT NULL AND ds_horarios_w::text <> '') then
			ds_horarios_w := '';
		end if;		
	end;
	end loop;
	
elsif (coalesce(ds_horarios_p::text, '') = '') then
	dt_horario_w := trunc(dt_inicio_p, 'DD');
	
	consiste_limite_dose_dia(dt_horario_w);
end if;

	ie_consiste_p := ds_retorno_w;
	qt_dose_out_p := qt_dose_total_out_w;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_consiste_dose_dia (( nr_atendimento_p bigint, cd_material_p bigint, qt_dose_p bigint, cd_unid_med_dose_p text, ds_horarios_p text, ie_urgencia_p text, qt_dose_limite_p bigint, cd_unid_med_limite_p text, dt_inicio_p timestamp, nr_seq_cpoe_p bigint default null, ie_tipo_item_p text default null, nr_ocorrencia_p bigint default null, qt_dose_adicional_p bigint default null, cd_materiais_ficha_tecnica_p text default null, ie_consiste_p OUT text, qt_dose_out_p OUT bigint, dt_adm_adicional_p cpoe_material.dt_adm_adicional%type default null, qt_dose_ataque_p cpoe_material.qt_dose_ataque%type default null) is qt_dose_adm_w double precision) FROM PUBLIC;

