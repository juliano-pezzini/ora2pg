-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_tx_preco_qtde_proc ( nr_sequencia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, dt_procedimento_p timestamp, nr_seq_prestador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_regra_p INOUT bigint, tx_procedimento_p INOUT bigint, tx_medico_p INOUT bigint, tx_custo_operacional_p INOUT bigint) AS $body$
DECLARE


cd_area_procedimento_w		bigint;
cd_especialidade_w		bigint;
cd_grupo_proc_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_regra_w			bigint;
ie_regra_execucao_w		varchar(1);
tx_procedimento_w		double precision;
tx_medico_w			double precision;
tx_custo_operacional_w		double precision;
qt_exec_w			double precision	:= 0;
qt_exec_ww			double precision	:= 0;
cd_area_procedimento_regra_w	bigint;
cd_especialidade_regra_w 	bigint;
cd_grupo_proc_regra_w		bigint;
cd_procedimento_regra_w 	bigint;
ie_origem_proced_regra_w	bigint;
nr_seq_conta_w			bigint;
qt_exec_min_w			double precision;
qt_exec_max_w			double precision;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_regra_execucao,
		a.cd_area_procedimento,
		a.cd_especialidade,
		a.cd_grupo_proc,
		a.cd_procedimento,
		a.ie_origem_proced
	from	pls_regra_preco_qtde_proc	a
	where	a.ie_situacao		= 'A'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	((coalesce(a.nr_seq_prestador::text, '') = '') or (a.nr_seq_prestador = coalesce(nr_seq_prestador_p,0)))
	and	coalesce(a.cd_procedimento, coalesce(cd_procedimento_p,0))		= coalesce(cd_procedimento_p,0)
	and	coalesce(a.ie_origem_proced, coalesce(ie_origem_proced_w,0))		= coalesce(ie_origem_proced_w,0)
	and	coalesce(a.cd_grupo_proc, coalesce(cd_grupo_proc_w,0))			= coalesce(cd_grupo_proc_w,0)
	and	coalesce(a.cd_especialidade, coalesce(cd_especialidade_w,0))		= coalesce(cd_especialidade_w,0)
	and	coalesce(a.cd_area_procedimento, coalesce(cd_area_procedimento_w,0)) 	= coalesce(cd_area_procedimento_w,0)
	order by coalesce(a.cd_procedimento,0),
		coalesce(a.cd_grupo_proc,0),
		coalesce(a.cd_especialidade,0),
		coalesce(a.cd_area_procedimento,0);

C02 CURSOR FOR
	SELECT	a.tx_procedimento,
		a.tx_medico,
		a.tx_custo_operacional,
		qt_exec_min,
		qt_exec_max
	from	pls_regra_preco_tx_proc	a
	where	a.ie_situacao		= 'A'
	and	a.nr_seq_regra	= nr_seq_regra_w;


BEGIN

/* Obter dados da conta */

select	nr_seq_conta
into STRICT	nr_seq_conta_w
from	pls_conta_proc
where	nr_sequencia	= nr_sequencia_p;

SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_p, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proced_w;

open C01;
loop
fetch C01 into
	nr_seq_regra_w,
	ie_regra_execucao_w,
	cd_area_procedimento_regra_w,
	cd_especialidade_regra_w,
	cd_grupo_proc_regra_w,
	cd_procedimento_regra_w,
	ie_origem_proced_regra_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

open C02;
loop
fetch C02 into
	tx_procedimento_w,
	tx_medico_w,
	tx_custo_operacional_w,
	qt_exec_min_w,
	qt_exec_max_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	if (ie_regra_execucao_w 	= 'C') then
		select	coalesce(sum(a.qt_procedimento_imp),0)
		into STRICT	qt_exec_w
		from	estrutura_procedimento_v	b,
			pls_conta_proc			a
		where	a.cd_procedimento		= b.cd_procedimento
		and	a.ie_origem_proced		= b.ie_origem_proced
		and	((coalesce(cd_area_procedimento_regra_w::text, '') = '') or (b.cd_area_procedimento = cd_area_procedimento_regra_w))
		and	((coalesce(cd_especialidade_regra_w::text, '') = '') or (b.cd_especialidade = cd_especialidade_regra_w))
		and	((coalesce(cd_grupo_proc_regra_w::text, '') = '') or (b.cd_grupo_proc = cd_grupo_proc_regra_w))
		and	((coalesce(cd_procedimento_regra_w::text, '') = '') or (a.cd_procedimento = cd_procedimento_regra_w))
		and	((coalesce(ie_origem_proced_regra_w::text, '') = '') or (a.ie_origem_proced = ie_origem_proced_regra_w))
		and	a.nr_seq_conta		= nr_seq_conta_w
		and	a.nr_sequencia		<= nr_sequencia_p;
	elsif (ie_regra_execucao_w 	= 'D') then
		select	coalesce(sum(a.qt_procedimento_imp),0)
		into STRICT	qt_exec_w
		from	estrutura_procedimento_v	b,
			pls_conta_proc			a
		where	a.cd_procedimento		= b.cd_procedimento
		and	a.ie_origem_proced		= b.ie_origem_proced
		and	((coalesce(cd_area_procedimento_regra_w::text, '') = '') or (b.cd_area_procedimento = cd_area_procedimento_regra_w))
		and	((coalesce(cd_especialidade_regra_w::text, '') = '') or (b.cd_especialidade = cd_especialidade_regra_w))
		and	((coalesce(cd_grupo_proc_regra_w::text, '') = '') or (b.cd_grupo_proc = cd_grupo_proc_regra_w))
		and	((coalesce(cd_procedimento_regra_w::text, '') = '') or (a.cd_procedimento = cd_procedimento_regra_w))
		and	((coalesce(ie_origem_proced_regra_w::text, '') = '') or (a.ie_origem_proced = ie_origem_proced_regra_w))
		and	a.nr_seq_conta		= nr_seq_conta_w
		and	a.nr_sequencia		<= nr_sequencia_p
		and	a.dt_procedimento between trunc(dt_procedimento_p, 'dd') and trunc(dt_procedimento_p, 'dd')  + 86399/86400;
	end if;

	if (qt_exec_w between qt_exec_min_w and coalesce(qt_exec_max_w, qt_exec_w)) then
		nr_seq_regra_p		:= nr_seq_regra_w;
		tx_procedimento_p	:= tx_procedimento_w;
		tx_custo_operacional_p	:= tx_custo_operacional_w;
		tx_medico_p		:= tx_medico_w;
	end if;

	end;
end loop;
close C02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_tx_preco_qtde_proc ( nr_sequencia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, dt_procedimento_p timestamp, nr_seq_prestador_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_regra_p INOUT bigint, tx_procedimento_p INOUT bigint, tx_medico_p INOUT bigint, tx_custo_operacional_p INOUT bigint) FROM PUBLIC;

