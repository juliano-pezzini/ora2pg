-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_qtd_ocorrencia ( nr_sequencia_p bigint, ie_tipo_item_p bigint, qt_liberada_p bigint, ie_tipo_qtde_p text, qt_tipo_quantidade_p bigint, ie_tipo_pessoa_qtde_p text, ie_regra_tipo_quant_p text, ie_somar_estrutura_p text, nr_seq_estrutura_p bigint, nr_seq_ocorrencia_p bigint, ie_qt_lib_posterior_p text, ie_somente_solicitacao_p text, ie_valida_ano_contratual_p text, ie_valida_cod_prestador_p text, ie_tipo_guia_p text, ie_valida_local_atend_p text, cd_estabelecimento_p text, nr_seq_grupo_servico_p bigint, ds_parametro1_p text, ds_parametro2_p text, ie_retorno_p INOUT text, ds_observacao_p INOUT text) AS $body$
DECLARE

 
/*Nõa utilizar mais a rotina pls_obter_se_qtd_ocorrencia 
 
/*PARA A CONTA UTILIZAR A PLS_OBTER_SE_QTD_OC_CONTA*/
 
 
/* IE_TIPO_ITEM_P 
	1 - Procedimento da Autorização 
	2 - Material da Autorização 
	3 - Procedimento da Conta 
	4 - Material da Conta 
	5 - Procedimento da Requisição 
	6 - Material da Requisição 
	7 - Procedimento da importação 
	8 - Material da Importação 
*/
 
 
/* IE_TIPO_QTDE_P - Domínio 3540 
	D - Dia 
	M - Mês 
	A - Ano 
	G - Guia 
	C - Conta 
	H - Hora 
*/
 
 
dt_requisicao_ww		timestamp;
dt_autorizacao_w		timestamp;
nm_medico_solic_w		varchar(255);

ie_retorno_w			varchar(1)	:= 'S';
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_guia_plano_w		bigint;
qt_solicitada_w			double precision	:= 0;
qt_liberacao_w			double precision	:= 0;
dt_liberacao_w			timestamp;
dt_liberacao_ww			timestamp;
cd_guia_w			varchar(20);
cd_medico_executor_w		bigint;
nr_seq_conta_w			bigint;
cd_medico_solic_w		bigint;
nr_seq_proc_ref_w		bigint;
nr_seq_req_proc_w		bigint;
cd_procedimento_ww		bigint;
ie_origem_proced_ww		bigint;
nr_seq_material_ww		bigint;
qt_procedimento_w		bigint;
qt_material_w			bigint;
nr_seq_requisicao_w		bigint;
qt_autorizada_w			pls_guia_plano_proc.qt_solicitada%type;
nr_seq_local_atend_w		bigint	:= 0;

qt_solicitacao_w		bigint := 0;
cd_prestador_w			varchar(30);
ie_cursor_valida_restricao_w	varchar(1) := 'N';
nr_seq_segurado_cursor_w	bigint;
nr_seq_prestador_cursor_w	bigint;
nr_seq_requisicao_cursor_w	bigint;
nr_seq_requisicao_cursor_ww	bigint;
nr_seq_guia_cursor_w		bigint;
nr_seq_guia_cursor_ww		bigint;
qt_item_w			bigint;
cd_medico_solicitante_w 	varchar(20);
dt_contratual_w			timestamp;
ie_tipo_guia_w			varchar(2);
nm_usuario_solic_w		varchar(255);
ie_tipo_processo_w		varchar(1);
ie_status_w			varchar(2);
dt_referencia_inicial_w		timestamp;
dt_referencia_final_w		timestamp;
dt_lib_hora_w			varchar(255);
dt_solicitacao_w		timestamp;
nr_seq_exec_req_w  		bigint;
ie_grupo_servico_w		varchar(2)	:= 'N';

C01 CURSOR FOR 
	/* Consistência por guia */
 
	SELECT	b.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_solicitada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.cd_medico_solicitante, 
		b.ie_tipo_guia 
	from	pls_guia_plano_proc	a, 
		pls_guia_plano		b 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	b.nr_sequencia 	= nr_seq_guia_plano_w 
	and	ie_tipo_qtde_p = 'G' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	
UNION ALL
 
	/* Consistência por beneficiário */
 
	SELECT	b.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_autorizada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.cd_medico_solicitante, 
		b.ie_tipo_guia 
	from	pls_guia_plano_proc	a, 
		pls_guia_plano		b 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	b.nr_seq_segurado	= nr_seq_segurado_w 
	and	ie_tipo_pessoa_qtde_p = 'B' 
	and (ie_tipo_qtde_p <> 'G') 
	and (b.nr_sequencia <> nr_seq_guia_plano_w) 
	and	b.ie_status <> 3 
	and	a.dt_liberacao between dt_referencia_inicial_w and dt_referencia_final_w 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	
UNION ALL
 
	/* Consistência por sequência do prestador ou Ambos */
 
	select	b.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_autorizada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.cd_medico_solicitante, 
		b.ie_tipo_guia 
	from	pls_guia_plano_proc	a, 
		pls_guia_plano		b 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	b.nr_seq_prestador	= nr_seq_prestador_w 
	and	ie_tipo_pessoa_qtde_p in ('P','A') 
	and (b.nr_seq_segurado	= nr_seq_segurado_w or 
		ie_tipo_pessoa_qtde_p = 'P') 
	and	ie_valida_cod_prestador_p	= 'N' 
	and (ie_tipo_qtde_p <> 'G') 
	and (b.nr_sequencia <> nr_seq_guia_plano_w) 
	and	b.ie_status <> 3 
	and	a.dt_liberacao between dt_referencia_inicial_w and dt_referencia_final_w 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	
UNION ALL
 
	/* Consistência por código do prestador */
 
	select	b.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_autorizada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.cd_medico_solicitante, 
		b.ie_tipo_guia 
	from	pls_prestador		c, 
		pls_guia_plano_proc	a, 
		pls_guia_plano		b 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	c.nr_sequencia		= b.nr_seq_prestador 
	and	ie_tipo_pessoa_qtde_p in ('P','A') 
	and (b.nr_seq_segurado	= nr_seq_segurado_w or	ie_tipo_pessoa_qtde_p = 'P') 
	and	ie_valida_cod_prestador_p	= 'S' 
	and	c.cd_prestador		= cd_prestador_w 
	and (ie_tipo_qtde_p <> 'G') 
	and (b.nr_sequencia <> nr_seq_guia_plano_w) 
	and	b.ie_status <> 3 
	and	a.dt_liberacao between dt_referencia_inicial_w and dt_referencia_final_w 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '';

C02 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		a.nr_seq_material, 
		a.qt_autorizada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.cd_medico_solicitante, 
		b.ie_tipo_guia 
	from	pls_guia_plano		b, 
		pls_guia_plano_mat	a 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	((((ie_valida_ano_contratual_p = 'N' and trunc(a.dt_liberacao) between dt_liberacao_ww and dt_liberacao_w) 
	or (ie_valida_ano_contratual_p = 'S' and trunc(a.dt_liberacao) between dt_contratual_w and dt_liberacao_w)) 
	and (b.ie_status <> 3) 
	and (ie_tipo_qtde_p <> 'G') 
	and (b.nr_sequencia <> nr_seq_guia_plano_w)) 
	or (b.nr_sequencia 	= nr_seq_guia_plano_w and ie_tipo_qtde_p = 'G')) 
	and	a.nr_seq_material	= nr_seq_material_w 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '';

C05 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		a.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_solicitado, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nm_usuario_solic, 
		b.ie_tipo_processo 
	from	pls_requisicao			b, 
		pls_requisicao_proc		a 
	where	a.nr_seq_requisicao		= b.nr_sequencia 
	and	b.nr_sequencia			= nr_seq_requisicao_w 
	and	ie_tipo_qtde_p 			= 'G' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and (coalesce(a.ie_cobranca_previa_servico::text, '') = '' or a.ie_cobranca_previa_servico <> 'S') 
	
union
 
	SELECT	b.nr_sequencia, 
		a.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_procedimento, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nm_usuario_solic, 
		b.ie_tipo_processo 
	from	pls_requisicao			b, 
		pls_requisicao_proc		a 
	where	a.nr_seq_requisicao		= b.nr_sequencia 
	and	((ie_tipo_pessoa_qtde_p		= 'B'	and	b.nr_seq_segurado		= nr_seq_segurado_w) 
	or	(ie_tipo_pessoa_qtde_p 	= 'A'	and	b.nr_seq_segurado		= nr_seq_segurado_w 
	and	((ie_valida_cod_prestador_p 	= 'N'	and	b.nr_seq_prestador		= nr_seq_prestador_w) 
	or (ie_valida_cod_prestador_p 	= 'S'	and	pls_obter_cod_prestador(b.nr_seq_prestador,null)	= cd_prestador_w)))) 
	and	ie_tipo_qtde_p 			<> 'G' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and	b.ie_estagio			= 2 
	and	trunc(b.dt_requisicao) 		between dt_liberacao_ww and dt_liberacao_w 
	and (coalesce(a.ie_cobranca_previa_servico::text, '') = '' or a.ie_cobranca_previa_servico <> 'S') 
	
union
 
	select	b.nr_sequencia, 
		a.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_procedimento, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nm_usuario_solic, 
		b.ie_tipo_processo 
	from	pls_requisicao			b, 
		pls_requisicao_proc		a 
	where	a.nr_seq_requisicao		= b.nr_sequencia 
	and	(ie_tipo_pessoa_qtde_p		= 'P' and ((ie_valida_cod_prestador_p 	= 'N'	and	b.nr_seq_prestador		= nr_seq_prestador_w) 
	or (ie_valida_cod_prestador_p 	= 'S'	and	pls_obter_cod_prestador(b.nr_seq_prestador,null)	= cd_prestador_w))) 
	and	ie_tipo_qtde_p 			<> 'G' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and	b.ie_estagio			= 2 
	and	trunc(b.dt_requisicao) 		between dt_liberacao_ww and trunc(dt_liberacao_w) 
	and (coalesce(a.ie_cobranca_previa_servico::text, '') = '' or a.ie_cobranca_previa_servico <> 'S');

C06 CURSOR FOR 
	SELECT 	b.nr_sequencia, 
		a.nr_seq_material, 
		a.qt_solicitado, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nm_usuario_solic, 
		b.ie_tipo_processo 
	from	pls_requisicao			b, 
		pls_requisicao_mat		a 
	where	a.nr_seq_requisicao		= b.nr_sequencia 
	and	b.nr_sequencia			= nr_seq_requisicao_w 
	and	ie_tipo_qtde_p 			= 'G' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and (coalesce(a.ie_cobranca_previa_servico::text, '') = '' or a.ie_cobranca_previa_servico <> 'S') 
	
union
 
	SELECT 	b.nr_sequencia, 
		a.nr_seq_material, 
		a.qt_material, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nm_usuario_solic, 
		b.ie_tipo_processo 
	from	pls_requisicao			b, 
		pls_requisicao_mat		a 
	where	a.nr_seq_requisicao		= b.nr_sequencia 
	and	((ie_tipo_pessoa_qtde_p		= 'B'	and	b.nr_seq_segurado		= nr_seq_segurado_w) 
	or	(ie_tipo_pessoa_qtde_p 	= 'A'	and	b.nr_seq_segurado		= nr_seq_segurado_w 
	and	((ie_valida_cod_prestador_p 	= 'N'	and	b.nr_seq_prestador		= nr_seq_prestador_w) 
	or (ie_valida_cod_prestador_p 	= 'S'	and	pls_obter_cod_prestador(b.nr_seq_prestador,null)	= cd_prestador_w)))) 
	and	ie_tipo_qtde_p 			<> 'G' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and	b.ie_estagio			= 2 
	and	trunc(b.dt_requisicao) 		between dt_liberacao_ww and trunc(dt_liberacao_w) 
	and (coalesce(a.ie_cobranca_previa_servico::text, '') = '' or a.ie_cobranca_previa_servico <> 'S') 
	
union
 
	select 	b.nr_sequencia, 
		a.nr_seq_material, 
		a.qt_material, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nm_usuario_solic, 
		b.ie_tipo_processo 
	from	pls_requisicao			b, 
		pls_requisicao_mat		a 
	where	a.nr_seq_requisicao		= b.nr_sequencia 
	and	(ie_tipo_pessoa_qtde_p		= 'P' and ((ie_valida_cod_prestador_p 	= 'N'	and	b.nr_seq_prestador		= nr_seq_prestador_w) 
	or (ie_valida_cod_prestador_p 	= 'S'	and	pls_obter_cod_prestador(b.nr_seq_prestador,null)	= cd_prestador_w))) 
	and	ie_tipo_qtde_p 			<> 'G' 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and	b.ie_estagio			= 2 
	and	trunc(b.dt_requisicao) 		between dt_liberacao_ww and trunc(dt_liberacao_w) 
	and (coalesce(a.ie_cobranca_previa_servico::text, '') = '' or a.ie_cobranca_previa_servico <> 'S');

C10 CURSOR FOR 
	/* Procedimento por beneficiário */
 
	SELECT 	a.nr_seq_guia, 
		a.qt_item, 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		a.ie_tipo_processo 
	from	pls_execucao_req_item		a, 
		pls_execucao_requisicao		b 
	where	a.nr_seq_execucao		= b.nr_sequencia 
	and b.nr_sequencia 		<> nr_seq_exec_req_w 
	and	ie_tipo_item_p			= 10 
	and	a.ie_situacao			not in ('C','G','N','U') 
	and	a.nr_seq_segurado 		= nr_seq_segurado_w 
	and	ie_tipo_pessoa_qtde_p 		= 'B' 
	and	trunc(b.dt_execucao) between dt_liberacao_ww and dt_liberacao_w 
	and	a.cd_procedimento 		= cd_procedimento_w 
	and	a.ie_origem_proced 		= ie_origem_proced_w 
	and	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') 
	and	not exists (	SELECT	1 
				from	pls_requisicao_proc			x 
				where	x.nr_seq_requisicao			= b.nr_seq_requisicao 
				and	x.ie_cobranca_previa_servico	= 'S') 
	
union all
 
	/* Procedimento por prestador ou ambos , pelo seq do prestador */
 
	select 	a.nr_seq_guia, 
		a.qt_item, 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		a.ie_tipo_processo 
	from	pls_execucao_req_item		a, 
		pls_execucao_requisicao		b 
	where	a.nr_seq_execucao		= b.nr_sequencia 
	and b.nr_sequencia 		<> nr_seq_exec_req_w 
	and	ie_tipo_item_p			= 10 
	and	a.ie_situacao			not in ('C','G','N','U') 
	and (a.nr_seq_segurado		= nr_seq_segurado_w or ie_tipo_pessoa_qtde_p = 'P') 
	and	b.nr_seq_prestador 		= nr_seq_prestador_w 
	and	ie_tipo_pessoa_qtde_p 		in ('P','A') 
	and	ie_valida_cod_prestador_p = 'N' 
	and	trunc(b.dt_execucao) between dt_liberacao_ww and dt_liberacao_w 
	and	a.cd_procedimento 		= cd_procedimento_w 
	and	a.ie_origem_proced 		= ie_origem_proced_w 
	and	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') 
	and	not exists (	select	1 
				from	pls_requisicao_proc			x 
				where	x.nr_seq_requisicao			= b.nr_seq_requisicao 
				and	x.ie_cobranca_previa_servico	= 'S') 
	
union all
 
	/* Procedimento por prestador ou ambos, pelo código do prestador */
 
	select 	a.nr_seq_guia, 
		a.qt_item, 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		a.ie_tipo_processo 
	from	pls_execucao_req_item		a, 
		pls_prestador			c, 
		pls_execucao_requisicao		b 
	where	a.nr_seq_execucao		= b.nr_sequencia 
	and b.nr_sequencia 		<> nr_seq_exec_req_w 
	and	b.nr_seq_prestador		= c.nr_sequencia 
	and	ie_tipo_item_p			= 10 
	and	a.ie_situacao			not in ('C','G','N','U') 
	and (a.nr_seq_segurado		= nr_seq_segurado_w or ie_tipo_pessoa_qtde_p = 'P') 
	and	c.cd_prestador = cd_prestador_w 
	and	ie_tipo_pessoa_qtde_p 		in ('P','A') 
	and	ie_valida_cod_prestador_p = 'S' 
	and	trunc(b.dt_execucao) between dt_liberacao_ww and dt_liberacao_w 
	and	a.cd_procedimento 		= cd_procedimento_w 
	and	a.ie_origem_proced 		= ie_origem_proced_w 
	and	(cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') 
	and	not exists (	select	1 
				from	pls_requisicao_proc			x 
				where	x.nr_seq_requisicao			= b.nr_seq_requisicao 
				and	x.ie_cobranca_previa_servico	= 'S') 
	
union all
 
	/* Material por beneficiário */
 
	select 	a.nr_seq_guia, 
		a.qt_item, 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		a.ie_tipo_processo 
	from	pls_execucao_req_item		a, 
		pls_execucao_requisicao		b 
	where	a.nr_seq_execucao		= b.nr_sequencia 
	and b.nr_sequencia 		<> nr_seq_exec_req_w 
	and	ie_tipo_item_p			= 11 
	and	a.ie_situacao			not in ('C','G','N','U') 
	and	a.nr_seq_segurado		= nr_seq_segurado_w 
	and	ie_tipo_pessoa_qtde_p 		= 'B' 
	and	trunc(b.dt_execucao) 	between dt_liberacao_ww and dt_liberacao_w 
	and	a.nr_seq_material		= nr_seq_material_w 
	and	(nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') 
	and	not exists (	select	1 
				from	pls_requisicao_mat			y 
				where	y.nr_seq_requisicao			= b.nr_seq_requisicao 
				and	y.ie_cobranca_previa_servico	= 'S') 
	
union all
 
	/* Material por beneficiário, por sequencia do prestador */
 
	select 	a.nr_seq_guia, 
		a.qt_item, 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		a.ie_tipo_processo 
	from	pls_execucao_req_item		a, 
		pls_execucao_requisicao		b 
	where	a.nr_seq_execucao		= b.nr_sequencia 
	and b.nr_sequencia 		<> nr_seq_exec_req_w 
	and	ie_tipo_item_p			= 11 
	and	a.ie_situacao			not in ('C','G','N','U') 
	and (a.nr_seq_segurado		= nr_seq_segurado_w or ie_tipo_pessoa_qtde_p = 'P') 
	and	b.nr_seq_prestador 		= nr_seq_prestador_w 
	and	ie_tipo_pessoa_qtde_p 		in ('P','A') 
	and	ie_valida_cod_prestador_p = 'N' 
	and	trunc(b.dt_execucao) between dt_liberacao_ww and dt_liberacao_w 
	and	a.nr_seq_material		= nr_seq_material_w 
	and	(nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') 
	and	not exists (	select	1 
				from	pls_requisicao_mat			y 
				where	y.nr_seq_requisicao			= b.nr_seq_requisicao 
				and	y.ie_cobranca_previa_servico	= 'S') 
	
union all
 
	/* Material por beneficiário, por codigo do prestador */
 
	select 	a.nr_seq_guia, 
		a.qt_item, 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		a.ie_tipo_processo 
	from	pls_execucao_req_item		a, 
		pls_execucao_requisicao		b 
	where	a.nr_seq_execucao		= b.nr_sequencia 
	and b.nr_sequencia 		<> nr_seq_exec_req_w 
	and	ie_tipo_item_p			= 11 
	and	a.ie_situacao			not in ('C','G','N','U') 
	and (a.nr_seq_segurado		= nr_seq_segurado_w or ie_tipo_pessoa_qtde_p = 'P') 
	and	pls_obter_cod_prestador(b.nr_seq_prestador,null) = cd_prestador_w 
	and	ie_tipo_pessoa_qtde_p 		in ('P','A') 
	and	ie_valida_cod_prestador_p = 'S' 
	and	trunc(b.dt_execucao)	between dt_liberacao_ww and dt_liberacao_w 
	and	a.nr_seq_material		= nr_seq_material_w 
	and	(nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') 
	and	not exists (	select	1 
				from	pls_requisicao_mat			y 
				where	y.nr_seq_requisicao			= b.nr_seq_requisicao 
				and	y.ie_cobranca_previa_servico	= 'S');

C11 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_solicitada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.cd_medico_solicitante, 
		b.ie_tipo_guia 
	from	pls_guia_plano_proc	a, 
		pls_guia_plano		b 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	b.ie_status 		<> '3' 
	and	b.nr_sequencia		<> nr_seq_guia_plano_w 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = '' 
	and	ie_tipo_qtde_p		= 'H' 
	and	((to_date(dt_lib_hora_w,'DD/MM/RRRR HH24:MI:SS') - to_date(to_char(b.dt_autorizacao,'DD/MM/RRRR HH24:MI:SS'),'DD/MM/RRRR HH24:MI:SS'))*24) < qt_tipo_quantidade_p;

C12 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		a.nr_seq_material, 
		a.qt_solicitada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.cd_medico_solicitante, 
		b.ie_tipo_guia 
	from	pls_guia_plano		b, 
		pls_guia_plano_mat	a 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and 	b.ie_status 		<> '3' 
	and	b.nr_sequencia 		<> nr_seq_guia_plano_w 
	and	coalesce(a.nr_seq_motivo_exc::text, '') = ''	 
	and	ie_tipo_qtde_p		= 'H' 
	and	((to_date(dt_lib_hora_w,'DD/MM/RRRR HH24:MI:SS') - to_date(to_char(b.dt_autorizacao,'DD/MM/RRRR HH24:MI:SS'),'DD/MM/RRRR HH24:MI:SS'))*24) < qt_tipo_quantidade_p;


BEGIN 
 
if (ie_tipo_item_p	= 1) then 
	select	a.cd_procedimento, 
		a.ie_origem_proced, 
		a.dt_liberacao, 
		a.qt_solicitada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nr_sequencia, 
		b.cd_medico_solicitante, 
		b.dt_solicitacao 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		dt_liberacao_w, 
		qt_solicitada_w, 
		nr_seq_segurado_w, 
		nr_seq_prestador_w, 
		nr_seq_guia_plano_w, 
		cd_medico_solic_w, 
		dt_solicitacao_w 
	from	pls_guia_plano		b, 
		pls_guia_plano_proc	a 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	a.nr_sequencia		= nr_sequencia_p;
elsif (ie_tipo_item_p	= 2) then 
	select	a.nr_seq_material, 
		a.dt_liberacao, 
		a.qt_solicitada, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nr_sequencia, 
		b.cd_medico_solicitante, 
		b.dt_solicitacao 
	into STRICT	nr_seq_material_w, 
		dt_liberacao_w, 
		qt_solicitada_w, 
		nr_seq_segurado_w, 
		nr_seq_prestador_w, 
		nr_seq_guia_plano_w, 
		cd_medico_solic_w, 
		dt_solicitacao_w 
	from	pls_guia_plano		b, 
		pls_guia_plano_mat	a 
	where	a.nr_seq_guia		= b.nr_sequencia 
	and	a.nr_sequencia		= nr_sequencia_p;
elsif (ie_tipo_item_p	= 5) then 
	select	a.cd_procedimento, 
		a.ie_origem_proced, 
		b.dt_requisicao, 
		a.qt_solicitado, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nr_sequencia, 
		b.NM_USUARIO_SOLIC 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		dt_liberacao_w, 
		qt_solicitada_w, 
		nr_seq_segurado_w, 
		nr_seq_prestador_w, 
		nr_seq_requisicao_w, 
		nm_usuario_solic_w 
	from	pls_requisicao		b, 
		pls_requisicao_proc	a 
	where	a.nr_seq_requisicao	= b.nr_sequencia 
	and	a.nr_sequencia		= nr_sequencia_p;
elsif (ie_tipo_item_p	= 6) then 
	select	a.nr_seq_material, 
		b.dt_requisicao, 
		a.qt_solicitado, 
		b.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nr_sequencia, 
		b.nm_usuario_solic 
	into STRICT	nr_seq_material_w, 
		dt_liberacao_w, 
		qt_solicitada_w, 
		nr_seq_segurado_w, 
		nr_seq_prestador_w, 
		nr_seq_requisicao_w, 
		nm_usuario_solic_w 
	from	pls_requisicao		b, 
		pls_requisicao_mat	a 
	where	a.nr_seq_requisicao	= b.nr_sequencia 
	and	a.nr_sequencia		= nr_sequencia_p;
elsif (ie_tipo_item_p	= 10) then 
	select	a.cd_procedimento, 
		a.ie_origem_proced, 
		a.qt_item, 
		clock_timestamp(), 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nr_seq_requisicao, 
		b.nr_sequencia 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		qt_solicitada_w, 
		dt_liberacao_w, 
		nr_seq_segurado_w, 
		nr_seq_prestador_w, 
		nr_seq_requisicao_w, 
		nr_seq_exec_req_w  
	from	pls_execucao_requisicao	b, 
		pls_execucao_req_item	a 
	where	a.nr_seq_execucao	= b.nr_sequencia 
	and	a.nr_sequencia = nr_sequencia_p;
elsif (ie_tipo_item_p	= 11) then 
	select	a.nr_seq_material, 
		a.qt_item, 
		clock_timestamp(), 
		a.nr_seq_segurado, 
		b.nr_seq_prestador, 
		b.nr_seq_requisicao, 
		b.nr_sequencia 
	into STRICT	nr_seq_material_w, 
		qt_solicitada_w, 
		dt_liberacao_w, 
		nr_seq_segurado_w, 
		nr_seq_prestador_w, 
		nr_seq_requisicao_w, 
		nr_seq_exec_req_w 
	from	pls_execucao_requisicao	b, 
		pls_execucao_req_item	a 
	where	a.nr_seq_execucao	= b.nr_sequencia 
	and	a.nr_sequencia = nr_sequencia_p;
end if;
 
 
if (ie_tipo_item_p in (10,11)) then 
	select	nm_usuario_solic 
	into STRICT	nm_usuario_solic_w 
	from	pls_requisicao 
	where	nr_sequencia = nr_seq_requisicao_w;
 
end if;
 
dt_liberacao_w	:= fim_dia(dt_liberacao_w);
begin 
	select	pls_obter_data_contratual(nr_seq_segurado_w) 
	into STRICT	dt_contratual_w 
	;
exception 
when others then 
	dt_contratual_w := clock_timestamp();
end;
 
begin 
	select	cd_prestador 
	into STRICT	cd_prestador_w 
	from	pls_prestador 
	where	nr_sequencia	= nr_seq_prestador_w;
exception 
when others then 
	cd_prestador_w := null;
end;
 
if (coalesce(nm_usuario_solic_w,'X') <> 'X') and (ie_valida_local_atend_p = 'S')then 
	nr_seq_local_atend_w := pls_obter_local_atend_usuario(nm_usuario_solic_w,cd_estabelecimento_p);
end if;
 
if (ie_tipo_qtde_p	= 'D') then 
	/*Diego OPS - OS 284525 - Tratamento realizado para que seja mantida uma lógica quanto a quantiade de dias. 
			    Ou seja anteriormente se quisese que o não pode-se repetir o proedimento duas vezes no mesmo dia eu teria que cadastrar 
			    a qt_dias como zero o que dificultava o entendimento do cliente. 
	dt_liberacao_ww	:= trunc(dt_liberacao_w - qt_tipo_quantidade_p);*/
 
	dt_liberacao_ww	:= trunc(dt_liberacao_w - (qt_tipo_quantidade_p - 1));
	if (ie_qt_lib_posterior_p	= 'S') then 
		dt_liberacao_w	:= trunc(dt_liberacao_w + (qt_tipo_quantidade_p - 1));
	end if;
elsif (ie_tipo_qtde_p	= 'M') then 
	/*Diego OPS - OS 284577 - Removi os truncs por month pois pela definição do cliente deve-se haver a lógica de ano precisa. 
	  Ou seja existindo a regra de 2º incidencia em 1 ano, eu posso executar hoje a exatamente 366 dias após.*/
 
	dt_liberacao_ww	:= (add_months(dt_liberacao_w, -qt_tipo_quantidade_p) + 1);
	if (ie_qt_lib_posterior_p	= 'S') then 
		dt_liberacao_w	:= (add_months(dt_liberacao_w, qt_tipo_quantidade_p) + 1);
	end if;
elsif (ie_tipo_qtde_p	= 'A') then 
	/*Diego OPS - OS 284577 - A lógica vista com o Srº Felipe Ambrósio é de que ao executar o procedimento dia 26/01/2011 poderei executa-lo exatamente dia 26/01/2012*/
 
	dt_liberacao_ww	:= (add_months(dt_liberacao_w, -qt_tipo_quantidade_p * 12) + 1); /* Vezes 12 meses ao ano */
	if (ie_qt_lib_posterior_p	= 'S') then 
		dt_liberacao_w	:= (add_months(dt_liberacao_w, qt_tipo_quantidade_p * 12) + 1); /* Vezes 12 meses ao ano */
	end if;
elsif (ie_tipo_qtde_p = 'G') then 
	dt_liberacao_ww := clock_timestamp();
	qt_solicitada_w := 0;
elsif (ie_tipo_qtde_p = 'H') then 
	dt_lib_hora_w	:= to_char(dt_solicitacao_w,'dd/mm/yyyy hh24:mi:ss');
end if;
 
 
dt_liberacao_ww	:= trunc(dt_liberacao_ww,'dd');
dt_liberacao_w	:= fim_dia(dt_liberacao_w);
 
if (ie_tipo_item_p	= 1) and (ie_tipo_qtde_p	<> 'H') then 
	if (ie_valida_ano_contratual_p = 'N') then 
		dt_referencia_inicial_w	:= dt_liberacao_ww;
		dt_referencia_final_w	:= dt_liberacao_w;
	elsif (ie_valida_ano_contratual_p = 'S') then 
		dt_referencia_inicial_w	:= dt_contratual_w;
		dt_referencia_final_w	:= dt_liberacao_w;
	end if;
 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_guia_cursor_w, 
		cd_procedimento_ww, 
		ie_origem_proced_ww, 
		qt_autorizada_w, 
		nr_seq_segurado_cursor_w, 
		nr_seq_prestador_cursor_w, 
		cd_medico_solicitante_w, 
		ie_tipo_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_p, cd_procedimento_ww, ie_origem_proced_ww);
 
		if (ie_grupo_servico_w	= 'S') then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	((ie_somar_estrutura_p = 'S') and (pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, cd_procedimento_ww, ie_origem_proced_ww, null) = 'S')) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_somar_estrutura_p = 'N' AND cd_procedimento_ww = cd_procedimento_w AND ie_origem_proced_ww = ie_origem_proced_w) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final1;
		end if;
 
		if	((ie_regra_tipo_quant_p = 'N') or (cd_medico_solicitante_w = cd_medico_solic_w)) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final1;
		end if;
 
		if	((ie_valida_ano_contratual_p = 'N') or (ie_tipo_guia_w = coalesce(ie_tipo_guia_p,ie_tipo_guia_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final1;
		end if;
 
 
		if (ie_cursor_valida_restricao_w = 'S') then 
			qt_liberacao_w	:= qt_liberacao_w + qt_autorizada_w;
			qt_solicitacao_w := qt_solicitacao_w + 1;
			nr_seq_guia_cursor_ww := nr_seq_guia_cursor_w;
		end if;
 
		<<final1>> 
		ie_cursor_valida_restricao_w := 'N';
		end;
	end loop;
	close C01;
elsif (ie_tipo_item_p	= 1) and (ie_tipo_qtde_p	= 'H') then 
	open C11;
	loop 
	fetch C11 into 
		nr_seq_guia_cursor_w, 
		cd_procedimento_ww, 
		ie_origem_proced_ww, 
		qt_autorizada_w, 
		nr_seq_segurado_cursor_w, 
		nr_seq_prestador_cursor_w, 
		cd_medico_solicitante_w, 
		ie_tipo_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C11 */
		begin 
		if (ie_tipo_pessoa_qtde_p = 'B' and nr_seq_segurado_cursor_w	= nr_seq_segurado_w) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_tipo_pessoa_qtde_p 	= 'P' and 
			((ie_valida_cod_prestador_p = 'N' and nr_seq_prestador_cursor_w	= nr_seq_prestador_w) or (ie_valida_cod_prestador_p = 'S' and pls_obter_cod_prestador(nr_seq_prestador_cursor_w,null) = cd_prestador_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_tipo_pessoa_qtde_p = 'A' and nr_seq_segurado_cursor_w	= nr_seq_segurado_w and 
			((ie_valida_cod_prestador_p = 'N' and nr_seq_prestador_cursor_w	= nr_seq_prestador_w) or (ie_valida_cod_prestador_p = 'S' and pls_obter_cod_prestador(nr_seq_prestador_cursor_w,null) = cd_prestador_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final11;
		end if;
 
 
		ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_p, cd_procedimento_ww, ie_origem_proced_ww);
 
		if (ie_grupo_servico_w	= 'S') then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	((ie_somar_estrutura_p = 'S') and (pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, cd_procedimento_ww, ie_origem_proced_ww, null) = 'S')) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_somar_estrutura_p = 'N' AND cd_procedimento_ww = cd_procedimento_w AND ie_origem_proced_ww = ie_origem_proced_w) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final11;
		end if;
 
		if	((ie_regra_tipo_quant_p = 'N') or (cd_medico_solicitante_w = cd_medico_solic_w)) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final11;
		end if;
 
		if	((ie_valida_ano_contratual_p = 'N') or (ie_tipo_guia_w = coalesce(ie_tipo_guia_p,ie_tipo_guia_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final11;
		end if;
 
		if (ie_cursor_valida_restricao_w = 'S') then 
			qt_liberacao_w	:= qt_liberacao_w + qt_autorizada_w;
			qt_solicitacao_w := qt_solicitacao_w + 1;
			nr_seq_guia_cursor_ww := nr_seq_guia_cursor_w;
		end if;
 
		<<final11>> 
		ie_cursor_valida_restricao_w := 'N';
		end;
	end loop;
	close C11;
elsif (ie_tipo_item_p	= 2) and (ie_tipo_qtde_p	<> 'H') then 
	open C02;
	loop 
	fetch C02 into 
		nr_seq_guia_cursor_w, 
		nr_seq_material_ww, 
		qt_autorizada_w, 
		nr_seq_segurado_cursor_w, 
		nr_seq_prestador_cursor_w, 
		cd_medico_solicitante_w, 
		ie_tipo_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		if (ie_tipo_pessoa_qtde_p = 'B' and nr_seq_segurado_cursor_w	= nr_seq_segurado_w) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_tipo_pessoa_qtde_p 	= 'P' and 
			((ie_valida_cod_prestador_p = 'N' and nr_seq_prestador_cursor_w	= nr_seq_prestador_w) or (ie_valida_cod_prestador_p = 'S' and pls_obter_cod_prestador(nr_seq_prestador_cursor_w,null) = cd_prestador_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_tipo_pessoa_qtde_p = 'A' and nr_seq_segurado_cursor_w	= nr_seq_segurado_w and 
			((ie_valida_cod_prestador_p = 'N' and nr_seq_prestador_cursor_w	= nr_seq_prestador_w) or (ie_valida_cod_prestador_p = 'S' and pls_obter_cod_prestador(nr_seq_prestador_cursor_w,null) = cd_prestador_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final2;
		end if;
 
		if	((ie_regra_tipo_quant_p = 'N') or (cd_medico_solicitante_w = cd_medico_solic_w)) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final2;
		end if;
 
		if	((ie_valida_ano_contratual_p = 'N') or (ie_tipo_guia_w = coalesce(ie_tipo_guia_p,ie_tipo_guia_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final2;
		end if;
 
		if (ie_cursor_valida_restricao_w = 'S') then 
			qt_liberacao_w	:= qt_liberacao_w + qt_autorizada_w;
			qt_solicitacao_w := qt_solicitacao_w + 1;
			nr_seq_guia_cursor_ww := nr_seq_guia_cursor_w;
		end if;
 
		<<final2>> 
		ie_cursor_valida_restricao_w := 'N';
		end;
	end loop;
	close C02;
elsif (ie_tipo_item_p	= 2) and (ie_tipo_qtde_p	= 'H') then 
	open C12;
	loop 
	fetch C12 into 
		nr_seq_guia_cursor_w, 
		nr_seq_material_ww, 
		qt_autorizada_w, 
		nr_seq_segurado_cursor_w, 
		nr_seq_prestador_cursor_w, 
		cd_medico_solicitante_w, 
		ie_tipo_guia_w;
	EXIT WHEN NOT FOUND; /* apply on C12 */
		begin 
		if (ie_tipo_pessoa_qtde_p = 'B' and nr_seq_segurado_cursor_w	= nr_seq_segurado_w) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_tipo_pessoa_qtde_p 	= 'P' and 
			((ie_valida_cod_prestador_p = 'N' and nr_seq_prestador_cursor_w	= nr_seq_prestador_w) or (ie_valida_cod_prestador_p = 'S' and pls_obter_cod_prestador(nr_seq_prestador_cursor_w,null) = cd_prestador_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	(ie_tipo_pessoa_qtde_p = 'A' and nr_seq_segurado_cursor_w	= nr_seq_segurado_w and 
			((ie_valida_cod_prestador_p = 'N' and nr_seq_prestador_cursor_w	= nr_seq_prestador_w) or (ie_valida_cod_prestador_p = 'S' and pls_obter_cod_prestador(nr_seq_prestador_cursor_w,null) = cd_prestador_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final12;
		end if;
 
		if	((ie_regra_tipo_quant_p = 'N') or (cd_medico_solicitante_w = cd_medico_solic_w)) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final12;
		end if;
 
		if	((ie_valida_ano_contratual_p = 'N') or (ie_tipo_guia_w = coalesce(ie_tipo_guia_p,ie_tipo_guia_w))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final12;
		end if;
 
		if (ie_cursor_valida_restricao_w = 'S') then 
			qt_liberacao_w	:= qt_liberacao_w + qt_autorizada_w;
			qt_solicitacao_w := qt_solicitacao_w + 1;
			nr_seq_guia_cursor_ww := nr_seq_guia_cursor_w;
		end if;
 
		<<final12>> 
		ie_cursor_valida_restricao_w := 'N';
		end;
	end loop;
	close C12;
elsif (ie_tipo_item_p	= 5) then 
	qt_liberacao_w	:= 0;
	open C05;
	loop 
	fetch C05 into 
		nr_seq_requisicao_cursor_w, 
		nr_seq_req_proc_w, 
		cd_procedimento_ww, 
		ie_origem_proced_ww, 
		qt_procedimento_w, 
		nr_seq_segurado_cursor_w, 
		nr_seq_prestador_cursor_w, 
		nm_usuario_solic_w, 
		ie_tipo_processo_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		ie_grupo_servico_w	:= pls_se_grupo_preco_servico(nr_seq_grupo_servico_p, cd_procedimento_ww, ie_origem_proced_ww);
 
		if (ie_grupo_servico_w	= 'S') then 
			ie_cursor_valida_restricao_w := 'S';
		elsif (cd_procedimento_w = cd_procedimento_ww and ie_origem_proced_ww = ie_origem_proced_w) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final5;
		end if;
			 
		if	((ie_somar_estrutura_p = 'S') and (pls_obter_se_estrut_ocorrencia(nr_seq_estrutura_p, cd_procedimento_ww, ie_origem_proced_ww, null) = 'S')) then 
			ie_cursor_valida_restricao_w := 'S';
		elsif	((ie_somar_estrutura_p = 'N') and ((cd_procedimento_ww = cd_procedimento_w AND ie_origem_proced_ww = ie_origem_proced_w) or (ie_grupo_servico_w	= 'S'))) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final5;
		end if;
 
		if (ie_valida_local_atend_p = 'N')	 then 
			ie_cursor_valida_restricao_w := 'S';
		elsif (ie_valida_local_atend_p = 'S')		and (nr_seq_local_atend_w <> 0)		and (ie_tipo_processo_w = 'P') and (coalesce(nm_usuario_solic_w,'X') <> 'X') 	and (pls_obter_local_atend_usuario(nm_usuario_solic_w,cd_estabelecimento_p) = nr_seq_local_atend_w) and (nr_seq_prestador_cursor_w <> nr_seq_prestador_w) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final5;
		end if;
 
		if (ie_cursor_valida_restricao_w = 'S') then 
			qt_liberacao_w	:= qt_liberacao_w + qt_procedimento_w;
			qt_solicitacao_w := qt_solicitacao_w + 1;
			nr_seq_requisicao_cursor_ww := nr_seq_requisicao_cursor_w;
		end if;
 
		<<final5>> 
		ie_cursor_valida_restricao_w := 'N';
		end;
	end loop;
	close C05;
 
	if (coalesce(qt_liberacao_w::text, '') = '') then 
		qt_liberacao_w	:= 0;
	end if;
elsif (ie_tipo_item_p	= 6) then 
	qt_liberacao_w	:= 0;
	open C06;
	loop 
	fetch C06 into 
		nr_seq_requisicao_cursor_w, 
		nr_seq_material_ww, 
		qt_material_w, 
		nr_seq_segurado_cursor_w, 
		nr_seq_prestador_cursor_w, 
		nm_usuario_solic_w, 
		ie_tipo_processo_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin 
 
		if (nr_seq_material_w = nr_seq_material_ww) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final6;
		end if;
		/* 
		if	(ie_tipo_pessoa_qtde_p in ('B','A')) then 
			if	(nr_seq_segurado_cursor_w = nr_seq_segurado_w) then 
				ie_cursor_valida_restricao_w := 'S'; 
			else 
				goto final6; 
			end if; 
		end if; 
 
		if	(ie_tipo_pessoa_qtde_p 	in ('P','A')) then 
			if	((ie_valida_cod_prestador_p = 'N' and nr_seq_prestador_cursor_w	= nr_seq_prestador_w) or 
				(ie_valida_cod_prestador_p = 'S' and pls_obter_cod_prestador(nr_seq_prestador_cursor_w,null) = cd_prestador_w)) then 
				ie_cursor_valida_restricao_w := 'S'; 
			else 
				goto final6; 
			end if; 
		end if; 
		*/
 
		if (ie_valida_local_atend_p = 'N')	 then 
			ie_cursor_valida_restricao_w := 'S';
		elsif (ie_valida_local_atend_p = 'S')		and (nr_seq_local_atend_w <> 0)		and (ie_tipo_processo_w = 'P') and (coalesce(nm_usuario_solic_w,'X') <> 'X') 	and (pls_obter_local_atend_usuario(nm_usuario_solic_w,cd_estabelecimento_p) = nr_seq_local_atend_w) and (nr_seq_prestador_cursor_w <> nr_seq_prestador_w) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final6;
		end if;
 
		if (ie_cursor_valida_restricao_w = 'S') then 
			qt_liberacao_w	:= qt_liberacao_w + qt_material_w;
			qt_solicitacao_w := qt_solicitacao_w + 1;
			nr_seq_requisicao_cursor_ww := nr_seq_requisicao_cursor_w;
		end if;
 
		<<final6>> 
		ie_cursor_valida_restricao_w := 'N';
		end;
	end loop;
	close C06;
 
	if (coalesce(qt_liberacao_w::text, '') = '') then 
		qt_liberacao_w	:= 0;
	end if;
 
elsif (ie_tipo_item_p	in (10,11)) then 
	qt_liberacao_w	:= 0;
	open C10;
	loop 
	fetch C10 into 
		nr_seq_guia_cursor_w, 
		qt_item_w, 
		nr_seq_segurado_cursor_w, 
		nr_seq_prestador_cursor_w, 
		ie_tipo_processo_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin 
 
		if (ie_valida_local_atend_p = 'N')	 then 
			ie_cursor_valida_restricao_w := 'S';
		elsif (ie_valida_local_atend_p = 'S')		and (nr_seq_local_atend_w <> 0)		and (ie_tipo_processo_w = 'P') and (coalesce(nm_usuario_solic_w,'X') <> 'X') 	and (pls_obter_local_atend_usuario(nm_usuario_solic_w,cd_estabelecimento_p) = nr_seq_local_atend_w) and (nr_seq_prestador_cursor_w <> nr_seq_prestador_w) then 
			ie_cursor_valida_restricao_w := 'S';
		else 
			goto final10;
		end if;
 
		if (coalesce(nr_seq_guia_cursor_w,0) > 0) then 
			begin 
				select	ie_status 
				into STRICT	ie_status_w 
				from	pls_guia_plano 
				where	nr_sequencia = nr_seq_guia_cursor_w;
 
				if (ie_status_w <> '3') then 
					ie_cursor_valida_restricao_w := 'S';
				else 
					goto final10;
				end if;
			exception 
			when others then 
				ie_cursor_valida_restricao_w := 'N';
			end;
		end if;
 
		if (ie_cursor_valida_restricao_w = 'S') then 
			qt_liberacao_w	:= qt_liberacao_w + qt_item_w;
			qt_solicitacao_w := qt_solicitacao_w + 1;
			nr_seq_guia_cursor_ww := nr_seq_guia_cursor_w;
		end if;
 
		<<final10>> 
		ie_cursor_valida_restricao_w := 'N';
		end;
	end loop;
	close C10;
 
end if;
 
qt_liberacao_w := qt_liberacao_w + qt_solicitada_w;
/*Diego /Alexandre - OS 264139 - Obs: retirado a verificação do qt_liberacao_w for igual ao qt_liberada_p */
 
/*Djavan - OS 277771 - Obs: Alterada a comparação "if (qt_liberacao_w	> qt_liberada_p) then", para "if (qt_liberacao_w	>= qt_liberada_p) then", por solicitação do Adriano*/
 
/*Alexandre - OS 383499 - Caso o valor do parametro "ie_somente_solicitacao_p " for "N", segue a verificação atual, caso o valor seja "S", então sera verificado a quantidade de solicitações do item(numero de registros existem do item) 
		e não a soma das quantidade do item. O campo "Valida somente solicitações" da regra de ocorrências é que determina o valor do parâmetro*/
 
 
if (qt_liberacao_w	>= qt_liberada_p) then 
	ie_retorno_w	:= 'N';
end if;
 
if (coalesce(ie_somente_solicitacao_p,'N') = 'S') and (ie_tipo_item_p in (5,6,10,11)) then 
	qt_solicitacao_w := qt_solicitacao_w + 1;
	if (qt_solicitacao_w >= qt_liberada_p) then 
		ie_retorno_w	:= 'N';
	else 
		ie_retorno_w	:= 'S';
	end if;
end if;
 
if (ie_retorno_w = 'N') then 
	if (nr_seq_requisicao_cursor_ww IS NOT NULL AND nr_seq_requisicao_cursor_ww::text <> '') then 
		select	dt_requisicao, 
			substr(obter_nome_pessoa_fisica(cd_medico_solicitante, null),1,255) 
		into STRICT	dt_requisicao_ww, 
			nm_medico_solic_w 
		from	pls_requisicao 
		where	nr_sequencia	= nr_seq_requisicao_cursor_ww;
 
		ds_observacao_p	:= substr('Requisição: '||nr_seq_requisicao_cursor_ww||'. Data:'||to_char(dt_requisicao_ww,'dd/mm/yyyy')||'. Médico solic: '||nm_medico_solic_w,1,400);
	elsif (nr_seq_guia_cursor_ww IS NOT NULL AND nr_seq_guia_cursor_ww::text <> '') then 
		select	cd_guia, 
			dt_autorizacao, 
			substr(obter_nome_pessoa_fisica(cd_medico_solicitante, null),1,255) 
		into STRICT	cd_guia_w, 
			dt_autorizacao_w, 
			nm_medico_solic_w 
		from	pls_guia_plano 
		where	nr_sequencia	= nr_seq_guia_cursor_ww;
 
		ds_observacao_p	:= substr('Guia: '||cd_guia_w||'. Data:'||to_char(dt_autorizacao_w,'dd/mm/yyyy')||'. Médico solic: '||nm_medico_solic_w,1,400);
	end if;
end if;
 
ie_retorno_p := ie_retorno_w;
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_qtd_ocorrencia ( nr_sequencia_p bigint, ie_tipo_item_p bigint, qt_liberada_p bigint, ie_tipo_qtde_p text, qt_tipo_quantidade_p bigint, ie_tipo_pessoa_qtde_p text, ie_regra_tipo_quant_p text, ie_somar_estrutura_p text, nr_seq_estrutura_p bigint, nr_seq_ocorrencia_p bigint, ie_qt_lib_posterior_p text, ie_somente_solicitacao_p text, ie_valida_ano_contratual_p text, ie_valida_cod_prestador_p text, ie_tipo_guia_p text, ie_valida_local_atend_p text, cd_estabelecimento_p text, nr_seq_grupo_servico_p bigint, ds_parametro1_p text, ds_parametro2_p text, ie_retorno_p INOUT text, ds_observacao_p INOUT text) FROM PUBLIC;

