-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_horario_agenda ( nr_seq_agenda_p bigint, nr_minuto_duracao_p bigint, cd_anestesista_p text, cd_profissional_p text, ie_opcao_p text, ds_erro_p INOUT text) AS $body$
DECLARE


dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_seq_agenda_w		        agenda_paciente.nr_sequencia%type;
nm_paciente_w		varchar(60);
ds_agenda_w		varchar(50);
dt_agenda_w		timestamp;
nm_medico_w		varchar(60);
nm_anestesista_w		varchar(60);
nm_profissional_w		varchar(60);
nr_seq_agenda_cons_w	    agenda_consulta.nr_sequencia%type := 0;
ie_agenda_consulta_w	varchar(1);
ie_agenda_exames_w	varchar(1);
nr_seq_agenda_exames_w	    agenda_paciente.nr_sequencia%type := 0;


BEGIN

ie_agenda_consulta_w := Obter_Param_Usuario(871, 545, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_agenda_consulta_w);
ie_agenda_exames_w := Obter_Param_Usuario(871, 551, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_agenda_exames_w);

begin
select	hr_inicio,
	hr_inicio + (coalesce(nr_minuto_duracao_p, nr_minuto_duracao) / 1440) - (1/86400)
into STRICT	dt_inicial_w,
	dt_final_w
from	agenda_paciente
where	nr_sequencia	= nr_seq_agenda_p;
exception
when others then
	dt_inicial_w	:= null;
	dt_final_w	:= null;
end;

nr_seq_agenda_w		:= 0;

/* Anestesista ou Ambos */

if (cd_anestesista_p IS NOT NULL AND cd_anestesista_p::text <> '') and
	((ie_opcao_p = 'A') or (ie_opcao_p = 'T')) then
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_agenda_w
	from	agenda_paciente
	where	((hr_inicio between dt_inicial_w and dt_final_w) or
		(hr_inicio + (nr_minuto_duracao / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
		((hr_inicio < dt_inicial_w) and (hr_inicio + (nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)))
	and	cd_anestesista	= cd_anestesista_p
	and	nr_sequencia	<> nr_seq_agenda_p
	and	ie_status_agenda <> 'C';
	
	if (nr_seq_agenda_w = 0) and (ie_agenda_consulta_w = 'S') then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_agenda_cons_w
		from	agenda_consulta a,
			agenda b
		where	a.cd_agenda 		= b.cd_agenda
		and	b.cd_pessoa_fisica 	= cd_anestesista_p
		and	a.ie_status_agenda not in ('C','L')
		and	((a.dt_agenda between dt_inicial_w and dt_final_w) or
			 (a.dt_agenda + (a.nr_minuto_duracao / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
			((a.dt_agenda < dt_inicial_w) and (a.dt_agenda + (a.nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)));
	end if;		
	if (nr_seq_agenda_w = 0) and (nr_seq_agenda_cons_w = 0) and (ie_agenda_exames_w = 'S') then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_agenda_exames_w
		from	agenda_paciente a,
			agenda b
		where	a.cd_agenda 		= b.cd_agenda
		and	coalesce(b.cd_pessoa_fisica,cd_medico_exec) 	= cd_anestesista_p
		and	a.ie_status_agenda not in ('C','L')
		and	b.cd_tipo_agenda = 2
		and	((a.dt_agenda between dt_inicial_w and dt_final_w) or
			 (a.dt_agenda + (a.nr_minuto_duracao / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
			((a.dt_agenda < dt_inicial_w) and (a.dt_agenda + (a.nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)));
	end if;		
end if;

 /* Profissional ou Ambos */

if (cd_profissional_p IS NOT NULL AND cd_profissional_p::text <> '') and
	((ie_opcao_p = 'P') or (ie_opcao_p = 'T')) then
	select	coalesce(max(a.nr_sequencia),0)
	into STRICT	nr_seq_agenda_w
	from	profissional_agenda b,
		agenda_paciente a
	where	a.nr_sequencia = b.nr_seq_agenda
	and	((a.hr_inicio between dt_inicial_w and dt_final_w) or  
		(a.hr_inicio + (a.nr_minuto_duracao / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
		((a.hr_inicio < dt_inicial_w) and (a.hr_inicio + (a.nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)))
	and	b.cd_profissional = cd_profissional_p
	and	a.nr_sequencia	<> nr_seq_agenda_p
	and	a.ie_status_agenda <> 'C';

	if (nr_seq_agenda_w = 0) and (ie_agenda_consulta_w = 'S') then
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_agenda_cons_w
		from	agenda_consulta a,
			agenda b,
			profissional_agenda c
		where	a.cd_agenda 		= b.cd_agenda
		and	b.cd_pessoa_fisica 	= c.cd_profissional
		and	c.cd_profissional 	= cd_profissional_p
		and	a.ie_status_agenda not in ('C','L')
		and	((a.dt_agenda between dt_inicial_w and dt_final_w) or
			 (a.dt_agenda + (a.nr_minuto_duracao / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
			((a.dt_agenda < dt_inicial_w) and (a.dt_agenda + (a.nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)));
	end if;	
	if (nr_seq_agenda_w = 0) and (nr_seq_agenda_cons_w = 0) and (ie_agenda_exames_w = 'S') then	
						
		select	coalesce(max(a.nr_sequencia),0)
		into STRICT	nr_seq_agenda_exames_w
		from	agenda_paciente a,
			agenda b,
			profissional_agenda c
		where	a.cd_agenda 				 = b.cd_agenda
		and	coalesce(b.cd_pessoa_fisica,a.cd_medico_exec) = c.cd_profissional
		and	c.cd_profissional 			 = cd_profissional_p
		and	b.cd_tipo_agenda = 2
		and	a.ie_status_agenda not in ('C','L')
		and	((a.hr_inicio between dt_inicial_w and dt_final_w) or
			 (a.hr_inicio + (a.nr_minuto_duracao / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
			((a.hr_inicio < dt_inicial_w) and (a.hr_inicio + (a.nr_minuto_duracao / 1440) - (1/86400) > dt_final_w)));
	end if;		
end if;

if (nr_seq_agenda_w > 0) or (nr_seq_agenda_cons_w > 0) or (nr_seq_agenda_exames_w > 0) then
	begin
	nm_profissional_w	:= null;
	if (cd_profissional_p IS NOT NULL AND cd_profissional_p::text <> '') then
		nm_profissional_w	:= substr(obter_nome_pf(cd_profissional_p),1,60);
	end if;
	
	if (nr_seq_agenda_w > 0) then
		select	substr(obter_nome_pf(cd_pessoa_fisica),1,60),
			hr_inicio,
			substr(obter_nome_agenda(cd_agenda),1,50),
			substr(obter_nome_pf(cd_anestesista),1,60)
		into STRICT	nm_paciente_w,
			dt_agenda_w,
			ds_agenda_w,
			nm_anestesista_w
		from	agenda_paciente
		where	nr_sequencia	= nr_seq_agenda_w;
	elsif (nr_seq_agenda_cons_w > 0) and (ie_agenda_consulta_w = 'S') then
		nm_anestesista_w := null;
		nm_profissional_w:= null;
		
		if (cd_profissional_p IS NOT NULL AND cd_profissional_p::text <> '') then
			nm_profissional_w	:= substr(obter_nome_pf(cd_profissional_p),1,60);
		end if;	
		
		if (cd_anestesista_p IS NOT NULL AND cd_anestesista_p::text <> '') then
			nm_anestesista_w	:= substr(obter_nome_pf(cd_anestesista_p),1,60);
		end if;	

		select	substr(obter_nome_pf(a.cd_pessoa_fisica),1,60),
			a.dt_agenda,
			substr(obter_nome_medico_combo_agcons(b.cd_estabelecimento, b.cd_agenda, b.cd_tipo_agenda, b.ie_ordenacao),1,240)
		into STRICT	nm_paciente_w,
			dt_agenda_w,
			ds_agenda_w
		from	agenda_consulta a,
			agenda b
		where	a.cd_agenda = b.cd_agenda
		and	a.nr_sequencia	= nr_seq_agenda_cons_w;	
	elsif (nr_seq_agenda_exames_w > 0) and (ie_agenda_exames_w = 'S') then
		nm_anestesista_w := null;
		nm_profissional_w:= null;
		
		if (cd_profissional_p IS NOT NULL AND cd_profissional_p::text <> '') then
			nm_profissional_w	:= substr(obter_nome_pf(cd_profissional_p),1,60);
		end if;	
		
		if (cd_anestesista_p IS NOT NULL AND cd_anestesista_p::text <> '') then
			nm_anestesista_w	:= substr(obter_nome_pf(cd_anestesista_p),1,60);
		end if;	

		select	substr(obter_nome_pf(a.cd_pessoa_fisica),1,60),
			a.hr_inicio,
			b.ds_agenda
		into STRICT	nm_paciente_w,
			dt_agenda_w,
			ds_agenda_w
		from	agenda_paciente a,
			agenda b
		where	a.cd_agenda = b.cd_agenda
		and	a.nr_sequencia	= nr_seq_agenda_exames_w;
	end if;	
	exception
	when others then
		nm_anestesista_w := null;
	end;
	
	if (cd_anestesista_p IS NOT NULL AND cd_anestesista_p::text <> '') and (nm_anestesista_w IS NOT NULL AND nm_anestesista_w::text <> '') and
		((ie_opcao_p = 'A') or (ie_opcao_p = 'T')) then
		ds_erro_p := wheb_mensagem_pck.get_texto(278567, ';NM_ANESTESISTA_P=' || nm_anestesista_w ||
								';NM_PACIENTE_P=' || nm_paciente_w ||
								';DT_AGENDA_P=' || to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') ||
								';DS_AGENDA_P=' || ds_agenda_w);
	end if;
	
	if (cd_profissional_p IS NOT NULL AND cd_profissional_p::text <> '') and (nm_profissional_w IS NOT NULL AND nm_profissional_w::text <> '') and
		((ie_opcao_p = 'P') or (ie_opcao_p = 'T')) then
		ds_erro_p := wheb_mensagem_pck.get_texto(278581, ';NM_PROFISSIONAL_P=' || nm_profissional_w ||
								';NM_PACIENTE_P=' || nm_paciente_w ||
								';DT_AGENDA_P=' || to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') ||
								';DS_AGENDA_P=' || ds_agenda_w);	
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_horario_agenda ( nr_seq_agenda_p bigint, nr_minuto_duracao_p bigint, cd_anestesista_p text, cd_profissional_p text, ie_opcao_p text, ds_erro_p INOUT text) FROM PUBLIC;

