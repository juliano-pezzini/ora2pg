-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cancel_exame_motivo ( nr_prescricao_p bigint, nr_seq_proced_p bigint, cd_obs_canc_exame_p bigint, ie_opcao_p text, nm_usuario_p text, lista_informacao_p text) AS $body$
DECLARE



/*
ie_opcao_p
'C' = Cancelar
'D' = Desfazer cancelamento
'J' = Justificar cancelamento
*/
dt_cancelamento_w	timestamp;
nr_seq_motivo_w	bigint;
ds_motivo_w			varchar(255);
nr_seq_canc_w		bigint;
qt_canc_w		bigint := 0;
lista_informacao_w		varchar(400);
ie_contador_w			bigint	:= 0;
tam_lista_w			bigint;
ie_pos_virgula_w		smallint;
ds_existente_w		varchar(255);
nr_prescricao_w		bigint;
nr_seq_proced_w		bigint;
ie_suspender_exame_w varchar(255);
cd_procedimento_w	prescr_procedimento.cd_procedimento%type;
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_proced_p IS NOT NULL AND nr_seq_proced_p::text <> '') then

lista_informacao_w	:= lista_informacao_p;
nr_prescricao_w		:= nr_prescricao_p;
nr_seq_proced_w		:= nr_seq_proced_p;

	begin
		while	(lista_informacao_w IS NOT NULL AND lista_informacao_w::text <> '') or
			ie_contador_w > 200 loop
			begin
			tam_lista_w		:= length(lista_informacao_w);
			ie_pos_virgula_w	:= position(',' in lista_informacao_w);

			if (ie_pos_virgula_w <> 0) then
				nr_seq_motivo_w		:= substr(lista_informacao_w,1,(ie_pos_virgula_w - 1));
				lista_informacao_w	:= substr(lista_informacao_w,(ie_pos_virgula_w + 1),tam_lista_w);
			end if;

			if (ie_opcao_p = 'C') then
				begin

					dt_cancelamento_w := clock_timestamp();

					select  ds_motivo_cancelamento
					into STRICT	ds_motivo_w
					from	motivo_cancelamento_proc
					where   nr_sequencia = nr_seq_motivo_w;

					select  count(*)
					into STRICT	qt_canc_w
					from	prescr_procedimento_cancel
					where   nr_prescricao = nr_prescricao_p
					and	    nr_seq_prescr = nr_seq_proced_p
					and		nr_seq_motivo_cancelamento = nr_seq_motivo_w;

					select  ds_observacao_canc_exame||'/'
					into STRICT	ds_existente_w
					from	prescr_procedimento
					where	nr_prescricao = nr_prescricao_p
					and		nr_sequencia = nr_seq_proced_p;

					if (ds_existente_w = '/') then
						ds_existente_w := null;
					end if;

				if (qt_canc_w > 0) then
						begin

							update	prescr_procedimento_cancel
							set		dt_atualizacao = dt_cancelamento_w,
									nm_usuario = nm_usuario_p,
									nr_seq_motivo_cancelamento = nr_seq_motivo_w
							where	nr_prescricao = nr_prescricao_p
							and		nr_seq_prescr = nr_seq_proced_p;

						end;
					else
						begin
							insert into prescr_procedimento_cancel(nr_sequencia,
												nr_seq_motivo_cancelamento,
												nr_prescricao,
												nr_seq_prescr,
												dt_atualizacao,
												nm_usuario) values (nextval('prescr_procedimento_cancel_seq'),
												nr_seq_motivo_w,
												nr_prescricao_w,
												nr_seq_proced_w,
												dt_cancelamento_w,
												nm_usuario_p);
						end;
					end if;
					
					ds_motivo_w := substr(ds_existente_w || ds_motivo_w,1,254);
											
					ie_suspender_exame_w := obter_param_usuario(942, 361, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_suspender_exame_w);

					if (coalesce(ie_suspender_exame_w,'N') = 'S') then
						CALL Suspender_item_Prescricao(nr_prescricao_p,nr_seq_proced_p,null,null,'PRESCR_PROCEDIMENTO',nm_usuario_p,'N',942,null);

						select	obter_atendimento_prescr(nr_prescricao_p),
								cd_procedimento
						into STRICT	nr_atendimento_w,
								cd_procedimento_w
						from	prescr_procedimento
						where	nr_prescricao				= nr_prescricao_p
						and		nr_sequencia				= nr_seq_proced_p;

						CALL gerar_alter_item_prescr_adep(nr_atendimento_w, 'P', cd_procedimento_w, nr_prescricao_p, nr_seq_proced_p, 13, null, nm_usuario_p, null, ds_motivo_w);
						
					end if;


					update	prescr_procedimento
					set 	dt_cancelamento 			= dt_cancelamento_w,
							ds_observacao_canc_exame	= ds_motivo_w,
							nm_usuario 					= nm_usuario_p
					where	nr_prescricao				= nr_prescricao_p
					and		nr_sequencia				= nr_seq_proced_p;



					commit;

				end;
			end if;
			end;
		end loop;

		if (ie_opcao_p = 'D') then
			begin

					update	prescr_procedimento
					set 	dt_cancelamento 			 = NULL,
            				ds_observacao_canc_exame	 = NULL,
							nm_usuario 					= nm_usuario_p
					where	nr_prescricao				= nr_prescricao_p
					and		nr_sequencia				= nr_seq_proced_p;

					update	prescr_procedimento_cancel
					set		dt_atualizacao 	= clock_timestamp(),
							nm_usuario 		= nm_usuario_p,
							nr_seq_motivo_cancelamento  = NULL
					where	nr_prescricao 	= nr_prescricao_p
					and		nr_seq_prescr = nr_seq_proced_p;

			end;
    	end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cancel_exame_motivo ( nr_prescricao_p bigint, nr_seq_proced_p bigint, cd_obs_canc_exame_p bigint, ie_opcao_p text, nm_usuario_p text, lista_informacao_p text) FROM PUBLIC;

