-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agrupa_movimento_contabil ( nr_lote_contabil_p bigint, nm_usuario_p text ) AS $body$
DECLARE


cd_estabelecimento_ant_w        ESTABELECIMENTO.CD_ESTABELECIMENTO%type;
cd_conta_contabil_ant_w         CONTA_CONTABIL.CD_CONTA_CONTABIL%type;
cd_historico_ant_w              HISTORICO_PADRAO.CD_HISTORICO%type;
cd_centro_custo_ant_w           CENTRO_CUSTO.CD_CENTRO_CUSTO%type;
nr_nfe_imp_w                    NOTA_FISCAL.NR_NFE_IMP%type;

ie_agrupa_pf_w                  TIPO_LOTE_CONTABIL.IE_AGRUPA_PF%type;
ie_agrupa_pj_w                  TIPO_LOTE_CONTABIL.IE_AGRUPA_PJ%type;

nr_seq_movimento_w              MOVIMENTO_CONTABIL.NR_SEQUENCIA%type;
ie_origem_documento_w           MOVIMENTO_CONTABIL.IE_ORIGEM_DOCUMENTO%type;
ds_compl_historico_w            MOVIMENTO_CONTABIL.DS_COMPL_HISTORICO%type;
nr_documento_w                  MOVIMENTO_CONTABIL.NR_DOCUMENTO%type;
nr_seq_movto_w                  MOVIMENTO_CONTABIL.NR_SEQUENCIA%type;
ds_compl_historico_ant_w        MOVIMENTO_CONTABIL.DS_COMPL_HISTORICO%type;
nr_seq_agrupamento_ant_w        MOVIMENTO_CONTABIL.NR_SEQ_AGRUPAMENTO%type;
nr_seq_trans_fin_ant_w          MOVIMENTO_CONTABIL.NR_SEQ_TRANS_FIN%type;
cd_cgc_ant_w                    MOVIMENTO_CONTABIL.CD_CGC%type;
cd_pessoa_fisica_ant_w          MOVIMENTO_CONTABIL.CD_PESSOA_FISICA%type;
nr_documento_ant_w              MOVIMENTO_CONTABIL.NR_DOCUMENTO%type;
cd_estab_movto_ant_w            MOVIMENTO_CONTABIL.CD_ESTABELECIMENTO%type;
ie_transitorio_ant_w            MOVIMENTO_CONTABIL.IE_TRANSITORIO%type;
ie_origem_documento_ant_w       MOVIMENTO_CONTABIL.IE_ORIGEM_DOCUMENTO%type;
nm_tabela_w                     MOVIMENTO_CONTABIL_DOC.NM_TABELA%type;
nm_atributo_w                   MOVIMENTO_CONTABIL_DOC.NM_ATRIBUTO%type;
nr_seq_tab_orig_w               MOVIMENTO_CONTABIL_DOC.NR_DOCUMENTO%type;
nr_seq_tab_compl_w              MOVIMENTO_CONTABIL_DOC.NR_SEQ_DOC_COMPL%type;
nr_seq_info_w                   MOVIMENTO_CONTABIL_DOC.NR_SEQ_INFO%type;
nr_seq_doc_compl_w              MOVIMENTO_CONTABIL_DOC.NR_SEQUENCIA%type;
ie_debito_credito_ant_w         MOVIMENTO_CONTABIL.IE_DEBITO_CREDITO%type;
vl_soma_movimento_w             MOVIMENTO_CONTABIL.VL_MOVIMENTO%type;
nr_seq_agrupamento_ww           MOVIMENTO_CONTABIL.NR_SEQ_AGRUPAMENTO%type;
nr_seq_agrup_old_w              MOVIMENTO_CONTABIL.NR_SEQ_AGRUPAMENTO%type;
nr_lancamento_w                 MOVIMENTO_CONTABIL.NR_LANCAMENTO%type;
nr_seq_regra_tf_w               MOVIMENTO_CONTABIL_DOC.NR_SEQ_REGRA_TF%type;
nr_seq_regra_tf_ant_w           MOVIMENTO_CONTABIL_DOC.NR_SEQ_REGRA_TF%type;
nr_doc_analitico_w              MOVIMENTO_CONTABIL_DOC.NR_DOC_ANALITICO%type;
nr_seq_classif_movto_w          MOVIMENTO_CONTABIL.NR_SEQ_CLASSIF_MOVTO%type;
ie_intercompany_w               MOVIMENTO_CONTABIL.IE_INTERCOMPANY%type;
cd_estab_intercompany_w         MOVIMENTO_CONTABIL.CD_ESTAB_INTERCOMPANY%type;
nr_codigo_controle_w            MOVIMENTO_CONTABIL.NR_CODIGO_CONTROLE%type;
nr_seq_proj_rec_w               MOVIMENTO_CONTABIL.nr_seq_proj_rec%type;

nr_seq_proj_rec_ant_w           bigint;
nr_sequencia_w                  bigint;
nr_seq_trans_fin_w              bigint;
nr_seq_agrupamento_w            bigint;
nr_vetor_doc_w                  bigint;
w_nr_vetor_doc_w                bigint;
cd_historico_w                  bigint;
cd_centro_custo_w               bigint;
cd_tipo_lote_contabil_w         bigint;
cd_estab_movto_w                bigint;
cd_estabelecimento_w            bigint;
cd_sequencia_parametro_w        bigint;
cd_sequencia_parametro_ant_w    bigint;
vl_debito_w                     double precision;
vl_movimento_w                  double precision;
vl_credito_w                    double precision;
qt_commit_w                     bigint;
m                               bigint;

dt_movimento_w                  timestamp;
dt_movimento_ant_w              timestamp;
dt_comparacao_w                 timestamp;

cd_conta_contabil_w             varchar(40);
ie_debito_credito_w             varchar(1);
ds_doc_agrupamento_w            varchar(255);
err_msg                         varchar(100);
cd_cgc_w                        varchar(14);
ds_ordem_w                      varchar(255);
cd_pessoa_fisica_w              varchar(10);
cd_classificacao_w              varchar(40);
ie_regra_data_completa_w        varchar(1);
ie_transitorio_w                varchar(1);
ds_erro_w                       varchar(4000);
ie_mantem_cc_w                  varchar(255);
ds_ordem_ant_w                  varchar(255);
ds_doc_agrupamento_ant_w        varchar(255);

nr_vetor_w                      bigint  := 0;
qt_registro_w                   bigint  := 0;
ie_situacao_w                   varchar(1) := 'A';
agrupar_projeto_param_w         varchar(1) := 'N';



registro_erro                   integer;

c000 CURSOR FOR
    SELECT  DS_ORDEM,
            CD_CONTA_CONTABIL,
            IE_DEBITO_CREDITO,
            CD_HISTORICO,
            DT_MOVIMENTO,
            VL_MOVIMENTO VL_MOVIMENTO,
            CD_CENTRO_CUSTO,
            DS_COMPL_HISTORICO,
            DS_DOC_AGRUPAMENTO,
            NR_SEQ_AGRUPAMENTO,
            NR_SEQ_TRANS_FIN,			
            NR_DOCUMENTO,
            CD_ESTAB_MOVTO,
            IE_TRANSITORIO,
            IE_ORIGEM_DOCUMENTO,
            CD_CGC,
            CD_PESSOA_FISICA,
            CD_ESTABELECIMENTO,
            NM_TABELA,
            NM_ATRIBUTO,
            NR_SEQ_TAB_ORIG,
            NR_SEQ_TAB_COMPL,
            NR_SEQ_INFO,
            NR_SEQ_REGRA_TF,
            NR_DOC_ANALITICO,
            NR_SEQ_CLASSIF_MOVTO,
            IE_INTERCOMPANY,
            CD_ESTAB_INTERCOMPANY,
            CD_SEQUENCIA_PARAMETRO,
            NR_CODIGO_CONTROLE,
            NR_SEQ_PROJ_REC
    FROM (SELECT CTB_DEFINE_ORDENACAO(
                    cd_estabelecimento_w,
                    cd_tipo_lote_contabil_w,
                    a.CD_CONTA_CONTABIL,
                    a.DT_MOVIMENTO,
                    a.CD_CGC,
                    a.CD_PESSOA_FISICA,
                    a.NR_DOCUMENTO,
                    a.IE_DEBITO_CREDITO,
                    a.DS_COMPL_HISTORICO,
                    a.VL_MOVIMENTO,
                    a.NR_SEQ_AGRUPAMENTO
                ) DS_ORDEM,
                cd_estabelecimento_w CD_ESTABELECIMENTO,
                a.CD_CONTA_CONTABIL,
                a.IE_DEBITO_CREDITO,
                a.CD_HISTORICO,
                CASE WHEN ie_regra_data_completa_w='N' THEN  TRUNC(a.DT_MOVIMENTO, 'dd') WHEN ie_regra_data_completa_w='S' THEN  a.DT_MOVIMENTO END  DT_MOVIMENTO,
                coalesce(a.VL_MOVIMENTO, 0) VL_MOVIMENTO,
                CASE WHEN ie_mantem_cc_w='S' THEN  a.CD_CENTRO_CUSTO  ELSE NULL END  CD_CENTRO_CUSTO,
                a.DS_COMPL_HISTORICO,
                a.DS_DOC_AGRUPAMENTO,
                a.NR_SEQ_AGRUPAMENTO,
                a.NR_SEQ_TRANS_FIN,
                CASE WHEN ie_agrupa_pj_w='S' THEN  a.CD_CGC  ELSE NULL END  CD_CGC,
                CASE WHEN ie_agrupa_pf_w='S' THEN  a.CD_PESSOA_FISICA  ELSE NULL END  CD_PESSOA_FISICA,
                a.NR_DOCUMENTO,
                coalesce(a.CD_ESTABELECIMENTO, cd_estabelecimento_w) CD_ESTAB_MOVTO,
                coalesce(a.IE_TRANSITORIO, 'N') IE_TRANSITORIO,
                a.IE_ORIGEM_DOCUMENTO,
                a.NM_TABELA,
                a.NM_ATRIBUTO,
                a.NR_SEQ_TAB_ORIG,
                a.NR_SEQ_TAB_COMPL,
                a.NR_SEQ_INFO,
                a.NR_SEQ_REGRA_TF,
                a.NR_DOC_ANALITICO,
                a.NR_SEQ_CLASSIF_MOVTO,
                a.IE_INTERCOMPANY,
                a.CD_ESTAB_INTERCOMPANY,
                a.CD_SEQUENCIA_PARAMETRO,
                a.NR_CODIGO_CONTROLE,
                CASE WHEN agrupar_projeto_param_w='S' THEN  a.NR_SEQ_PROJ_REC  ELSE null END  NR_SEQ_PROJ_REC
            FROM    W_MOVIMENTO_CONTABIL a
            WHERE   a.NR_LOTE_CONTABIL  = nr_lote_contabil_p
    ) alias5 ORDER BY
            DS_ORDEM,
            CD_CONTA_CONTABIL,
            IE_DEBITO_CREDITO,
            CD_historico,
            DT_MOVIMENTO,
            CD_CENTRO_CUSTO,
            DS_COMPL_historico,
            DS_DOC_AGRUPAMENTO,
            NR_SEQ_AGRUPAMENTO,
            NR_SEQ_TRANS_FIN,
            CD_CGC,
            CD_PESSOA_FISICA,
            NR_DOCUMENTO,
            CD_ESTAB_MOVTO,
            IE_TRANSITORIO,
            IE_ORIGEM_DOCUMENTO,
            NR_SEQ_REGRA_TF,
            NR_SEQ_PROJ_REC;

c_lancamento CURSOR FOR
    SELECT  NR_SEQ_AGRUPAMENTO,
            NR_SEQUENCIA
    FROM    MOVIMENTO_CONTABIL
    WHERE   NR_LOTE_CONTABIL = nr_lote_contabil_p
    ORDER BY NR_SEQ_AGRUPAMENTO;

    -- VETOR DO MOVIMENTO CONTABIL
    TYPE vetor_movimento_contabil       IS TABLE OF movimento_contabil%ROWTYPE INDEX BY integer;
    movimento_contabil_w                vetor_movimento_contabil;

    -- VETOR DO DOCUMENTO CONTABIL
    TYPE vetor_movimento_contabil_doc   IS TABLE OF movimento_contabil_doc%ROWTYPE INDEX BY integer;
    movimento_contabil_doc_w            vetor_movimento_contabil_doc;

    -- VETOR TEMPORARIO UTILIZADO ENQUANTO NAO SE SABE SE O MOVIMENTO CONTABIL E DIFERENTE DE 0
    TYPE w_vetor_movimento_contabil_doc IS TABLE OF movimento_contabil_doc%ROWTYPE INDEX BY integer;
    w_movimento_contabil_doc_w          w_vetor_movimento_contabil_doc;

    TYPE fetch_array    IS TABLE OF c000%ROWTYPE;
    s_array             fetch_array;
    i                   integer := 1;
    TYPE vetor          IS TABLE OF fetch_array INDEX BY integer;
    vetor_c01_w         VETOR;
BEGIN

    agrupar_projeto_param_w := obter_param_usuario(923, 125, wheb_usuario_pck.get_cd_perfil, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, agrupar_projeto_param_w);

    DELETE  FROM MOVIMENTO_CONTABIL_DOC
    WHERE   NR_LOTE_CONTABIL        = nr_lote_contabil_p;

    COMMIT;

    SELECT  a.CD_TIPO_LOTE_CONTABIL,
            a.CD_ESTABELECIMENTO
    INTO STRICT    cd_tipo_lote_contabil_w,
            cd_estabelecimento_w
    FROM    LOTE_CONTABIL a
    WHERE   a.NR_LOTE_CONTABIL      = nr_lote_contabil_p;

    SELECT  coalesce(MAX('S'), 'N')
    INTO STRICT    ie_regra_data_completa_w
    FROM    CTB_REGRA_AGRUP
    WHERE   IE_REGRA_ORDEM_01       = 'DH'
    AND     CD_TIPO_LOTE_CONTABIL   = cd_tipo_lote_contabil_w
    AND     CD_ESTABELECIMENTO      = cd_estabelecimento_w;

    SELECT  MAX(a.IE_AGRUPA_PF),
            MAX(a.IE_AGRUPA_PJ)
    INTO STRICT    ie_agrupa_pf_w,
            ie_agrupa_pj_w
    FROM    TIPO_LOTE_CONTABIL  a
    WHERE   a.CD_TIPO_LOTE_CONTABIL = cd_tipo_lote_contabil_w;

    nr_sequencia_w      := 0;
    vl_soma_movimento_w := 0;
    nr_vetor_doc_w      := 0;
    w_nr_vetor_doc_w    := 0;
    ie_mantem_cc_w      := CTB_OBTER_SE_MANTEM_CC(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
    dt_comparacao_w     := TRUNC(clock_timestamp(), 'dd');

    OPEN c000;
        LOOP
            FETCH c000 BULK COLLECT INTO s_array LIMIT 2000;
                vetor_c01_w(I)  := s_array;
                I               := I + 1;
            EXIT WHEN NOT FOUND; /* apply on c000 */
        END LOOP;
    CLOSE c000;

    FOR i IN 1..vetor_c01_w.COUNT LOOP
        BEGIN
            s_array := vetor_c01_w(i);
            FOR z IN 1..s_array.COUNT LOOP
                BEGIN
                    ds_ordem_w                  := s_array[z].ds_ordem;
                    cd_conta_contabil_w         := s_array[z].cd_conta_contabil;
                    ie_debito_credito_w         := s_array[z].ie_debito_credito;
                    cd_historico_w              := s_array[z].cd_historico;
                    dt_movimento_w              := s_array[z].dt_movimento;
                    vl_movimento_w              := s_array[z].vl_movimento;
                    cd_centro_custo_w           := s_array[z].cd_centro_custo;
                    ds_compl_historico_w        := s_array[z].ds_compl_historico;
                    ds_doc_agrupamento_w        := s_array[z].ds_doc_agrupamento;
                    nr_seq_agrupamento_w        := s_array[z].nr_seq_agrupamento;
                    nr_seq_trans_fin_w          := s_array[z].nr_seq_trans_fin;
                    cd_cgc_w                    := s_array[z].cd_cgc;
                    cd_pessoa_fisica_w          := s_array[z].cd_pessoa_fisica;
                    nr_documento_w              := s_array[z].nr_documento;
                    cd_estab_movto_w            := s_array[z].cd_estab_movto;
                    ie_transitorio_w            := s_array[z].ie_transitorio;
                    ie_origem_documento_w       := s_array[z].ie_origem_documento;
                    nm_tabela_w                 := s_array[z].nm_tabela;
                    nm_atributo_w               := s_array[z].nm_atributo;
                    nr_seq_tab_orig_w           := s_array[z].nr_seq_tab_orig;
                    nr_seq_tab_compl_w          := s_array[z].nr_seq_tab_compl;
                    nr_seq_info_w               := s_array[z].nr_seq_info;
                    nr_seq_regra_tf_w           := s_array[z].nr_seq_regra_tf;
                    nr_doc_analitico_w          := s_array[z].nr_doc_analitico;
                    nr_seq_classif_movto_w      := s_array[z].nr_seq_classif_movto;
                    ie_intercompany_w           := s_array[z].ie_intercompany;
                    cd_estab_intercompany_w     := s_array[z].cd_estab_intercompany;
                    cd_sequencia_parametro_w    := s_array[z].cd_sequencia_parametro;
                    nr_codigo_controle_w        := s_array[z].nr_codigo_controle;
                    nr_seq_proj_rec_w           := s_array[z].nr_seq_proj_rec;

                    -- CASO SEJA UM NOVO MOVIMENTO CONTABIL
                    IF (coalesce(ds_ordem_ant_w, ' ') != coalesce(ds_ordem_w, ' ')) OR (coalesce(cd_conta_contabil_ant_w, '0') != coalesce(cd_conta_contabil_w, '0')) OR (coalesce(cd_historico_ant_w, '0') != coalesce(cd_historico_w, '0')) OR (coalesce(dt_movimento_ant_w, dt_comparacao_w) != coalesce(dt_movimento_w, dt_comparacao_w)) OR (coalesce(cd_centro_custo_ant_w, 0) != coalesce(cd_centro_custo_w, 0)) OR (coalesce(ds_compl_historico_ant_w, ' ') != coalesce(ds_compl_historico_w, ' ')) OR (coalesce(ds_doc_agrupamento_ant_w, ' ') != coalesce(ds_doc_agrupamento_w, ' ')) OR (coalesce(nr_seq_agrupamento_ant_w, 0) != coalesce(nr_seq_agrupamento_w, 0)) OR (coalesce(nr_seq_trans_fin_ant_w, 0) != coalesce(nr_seq_trans_fin_w, 0)) OR (coalesce(cd_cgc_ant_w, '0') != coalesce(cd_cgc_w, '0')) OR (coalesce(cd_pessoa_fisica_ant_w, '0') != coalesce(cd_pessoa_fisica_w, '0')) OR (coalesce(nr_documento_ant_w, ' ') != coalesce(nr_documento_w, ' ')) OR (coalesce(cd_estab_movto_ant_w, 0) != coalesce(cd_estab_movto_w, 0)) OR (coalesce(ie_transitorio_ant_w, ' ') != coalesce(ie_transitorio_w, ' ')) OR (coalesce(ie_debito_credito_ant_w, ' ') != coalesce(ie_debito_credito_w, ' ')) OR (coalesce(ie_origem_documento_ant_w, 0) != coalesce(ie_origem_documento_w, 0)) OR (coalesce(nr_seq_proj_rec_ant_w, 0) != coalesce(nr_seq_proj_rec_w, 0)) THEN

                        -- SE JA TIVER ALGO NO VETOR ATUALIZA COM O VALOR SOMADO
                        IF (nr_vetor_w > 0) THEN
                            IF (vl_soma_movimento_w < 0) THEN
                                BEGIN
                                    IF (movimento_contabil_w[nr_vetor_w].ie_debito_credito = 'C') THEN
                                        movimento_contabil_w[nr_vetor_w].ie_debito_credito  := 'D';
                                    ELSE
                                        movimento_contabil_w[nr_vetor_w].ie_debito_credito  := 'C';
                                    END IF;

                                    vl_soma_movimento_w := vl_soma_movimento_w * -1;
                                END;
                            END IF;

                            movimento_contabil_w[nr_vetor_w].vl_movimento := vl_soma_movimento_w;

                            --TRANSFERENCIA_INFO
                            -- SE O VALOR FINAL DO MOVIMENTO CONTABIL FOR DIFERENTE DE ZERO, DEVE POPULAR O VETOR DOS DOCUMENTOS CONTABEIS
                            IF (movimento_contabil_w[nr_vetor_w].vl_movimento != 0) THEN
                                IF (w_movimento_contabil_doc_w.COUNT > 0) THEN
                                    
                                    FOR k IN w_movimento_contabil_doc_w.FIRST..w_movimento_contabil_doc_w.LAST LOOP
                                        BEGIN
                                            SELECT  nextval('movimento_contabil_doc_seq')
                                            INTO STRICT    nr_seq_doc_compl_w
;

                                            nr_vetor_doc_w  := nr_vetor_doc_w + 1;

                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_sequencia               := nr_seq_doc_compl_w;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_lote_contabil           := w_movimento_contabil_doc_w[k].nr_lote_contabil;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_movimento           := nr_sequencia_w;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_info                := w_movimento_contabil_doc_w[k].nr_seq_info;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_documento               := w_movimento_contabil_doc_w[k].nr_documento;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_doc_compl           := w_movimento_contabil_doc_w[k].nr_seq_doc_compl;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].vl_movimento               := w_movimento_contabil_doc_w[k].vl_movimento;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nm_tabela                  := w_movimento_contabil_doc_w[k].nm_tabela;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nm_atributo                := w_movimento_contabil_doc_w[k].nm_atributo;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nm_usuario_nrec            := w_movimento_contabil_doc_w[k].nm_usuario_nrec;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].dt_atualizacao_nrec        := w_movimento_contabil_doc_w[k].dt_atualizacao_nrec;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nm_usuario                 := w_movimento_contabil_doc_w[k].nm_usuario;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].dt_atualizacao             := w_movimento_contabil_doc_w[k].dt_atualizacao;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_regra_tf            := w_movimento_contabil_doc_w[k].nr_seq_regra_tf;
					    movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_trans_fin           := w_movimento_contabil_doc_w[k].nr_seq_trans_fin;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].ie_debito_credito          := w_movimento_contabil_doc_w[k].ie_debito_credito;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].cd_conta_contabil          := w_movimento_contabil_doc_w[k].cd_conta_contabil;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].dt_movimento               := w_movimento_contabil_doc_w[k].dt_movimento;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].nr_doc_analitico           := w_movimento_contabil_doc_w[k].nr_doc_analitico;
                                            movimento_contabil_doc_w[nr_vetor_doc_w].cd_sequencia_parametro     := w_movimento_contabil_doc_w[k].cd_sequencia_parametro;

                                            IF (PHILIPS_PARAM_PCK.GET_CD_PAIS = 2) THEN
                                                nr_nfe_imp_w := CTB_UUID_PCK.GET_UUID(
                                                    nr_lote_contabil_p      => w_movimento_contabil_doc_w[k].nr_lote_contabil,
                                                    nr_seq_info_p           => w_movimento_contabil_doc_w[k].nr_seq_info,
                                                    nr_documento_p          => w_movimento_contabil_doc_w[k].nr_documento,
                                                    nr_seq_doc_compl_p      => w_movimento_contabil_doc_w[k].nr_seq_doc_compl,
                                                    nr_doc_analitico_p      => w_movimento_contabil_doc_w[k].nr_doc_analitico,
                                                    cd_estabelecimento_p    => NULL
                                                );

                                                movimento_contabil_doc_w[nr_vetor_doc_w].nr_nfe_imp := nr_nfe_imp_w;
                                            END IF;

                                        END;
                                    END LOOP;
                                END IF;

                                w_movimento_contabil_doc_w.DELETE;
                                w_nr_vetor_doc_w    := 0;
                            ELSE
                                -- CASO CONTRARIO EXCLUI A POSICAO DO VETOR E DECREMENTA O INDICE
                                movimento_contabil_w.DELETE(nr_vetor_w);
                                nr_vetor_w  := nr_vetor_w - 1;

                                w_movimento_contabil_doc_w.DELETE;
                                w_nr_vetor_doc_w    := 0;
                            END IF;
                            -- TRANSFERENCIA_INFO FIM
                            
                            -- SE ATINGIR QUANTIDADE LIMITE DE MOVIMENTOS CONTABEIS, DEVE LEVAR EM CONTA A QUANTIDADE DE DOCUMENTOS CONTABEIS VINCULADOS AO MOVIMENTO
                            IF (nr_vetor_w = 200) THEN
                                BEGIN
                                    -- INSERE EM BLOCO OS MOVIMENTOS CONTABEIS
                                    FORALL m IN movimento_contabil_w.first..movimento_contabil_w.last SAVE EXCEPTIONS
                                        INSERT INTO MOVIMENTO_CONTABIL values movimento_contabil_w(m);

                                EXCEPTION WHEN SQLSTATE '50005' THEN
                                    FOR l IN 1..SQL%BULK_EXCEPTIONS.COUNT LOOP
                                        
                                        registro_erro   := SQL%BULK_EXCEPTIONS[l].ERROR_INDEX;
                                        err_msg         := SUBSTR(SQLERRM(-(SQL%BULK_EXCEPTIONS[l].ERROR_CODE)), 1, 100);
                                        ds_erro_w       := SUBSTR(err_msg || chr(10) ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809042)  || '=' || movimento_contabil_w[registro_erro].nr_sequencia ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809043)  || '=' || movimento_contabil_w[registro_erro].cd_conta_contabil ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809044)  || '=' || movimento_contabil_w[registro_erro].ie_debito_credito ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809045)  || '=' || movimento_contabil_w[registro_erro].cd_historico ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809046)  || '=' || movimento_contabil_w[registro_erro].dt_movimento || chr(10) ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809047)  || '=' || movimento_contabil_w[registro_erro].vl_movimento ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(818134)  || '=' || movimento_contabil_w[registro_erro].cd_centro_custo ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(818135)  || '=' || movimento_contabil_w[registro_erro].nr_seq_trans_fin ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809048)  || '=' || movimento_contabil_w[registro_erro].ds_compl_historico || chr(10) ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(818136)  || '=' || movimento_contabil_w[registro_erro].cd_estabelecimento || chr(10) ||
                                            ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(1065027) || '=' || movimento_contabil_w[registro_erro].nr_seq_agrupamento || chr(10) ||
                                                movimento_contabil_w[registro_erro].ds_ordem,1,4000);

                                        movimento_contabil_doc_w.DELETE;
                                        movimento_contabil_w.DELETE;
                                        CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(184609, 'DS_ERRO_W=' || ds_erro_w);
                                    END LOOP;

                                    movimento_contabil_doc_w.DELETE;
                                    movimento_contabil_w.DELETE;
                                END;

                                COMMIT;
                                movimento_contabil_w.DELETE;
                                nr_vetor_w  := 0;

                                -- INSERE EM BLOCO OS DOCUMENTOS CONTABEIS
                                FORALL md IN movimento_contabil_doc_w.FIRST..movimento_contabil_doc_w.LAST								
                                    INSERT INTO MOVIMENTO_CONTABIL_DOC VALUES movimento_contabil_doc_w(md);

                                COMMIT;
                                movimento_contabil_doc_w.DELETE;
                                nr_vetor_doc_w  := 0;
                            END IF;
                        END IF;

                        dt_movimento_w      := coalesce(dt_movimento_w, clock_timestamp());
                        cd_classificacao_w  := SUBSTR(CTB_OBTER_CLASSIF_CONTA(cd_conta_contabil_w, NULL, dt_movimento_w), 1, 40);
                        nr_vetor_w          := nr_vetor_w + 1;
                        nr_sequencia_w      := nr_sequencia_w + 1;
                        vl_soma_movimento_w := 0;

                        movimento_contabil_w[nr_vetor_w].nr_sequencia           := nr_sequencia_w;
                        movimento_contabil_w[nr_vetor_w].nr_lote_contabil       := nr_lote_contabil_p;
                        movimento_contabil_w[nr_vetor_w].cd_conta_contabil      := cd_conta_contabil_w;
                        movimento_contabil_w[nr_vetor_w].ie_debito_credito      := ie_debito_credito_w;
                        movimento_contabil_w[nr_vetor_w].cd_historico           := cd_historico_w;
                        movimento_contabil_w[nr_vetor_w].vl_movimento           := vl_movimento_w;
                        movimento_contabil_w[nr_vetor_w].dt_movimento           := dt_movimento_w;
                        movimento_contabil_w[nr_vetor_w].dt_atualizacao         := clock_timestamp();
                        movimento_contabil_w[nr_vetor_w].nm_usuario             := nm_usuario_p;
                        movimento_contabil_w[nr_vetor_w].cd_centro_custo        := cd_centro_custo_w;
                        movimento_contabil_w[nr_vetor_w].ds_compl_historico     := ds_compl_historico_w;
                        movimento_contabil_w[nr_vetor_w].nr_seq_trans_fin       := nr_seq_trans_fin_w;
                        movimento_contabil_w[nr_vetor_w].cd_cgc                 := cd_cgc_w;
                        movimento_contabil_w[nr_vetor_w].nr_seq_agrupamento     := nr_seq_agrupamento_w;
                        movimento_contabil_w[nr_vetor_w].nr_documento           := nr_documento_w;
                        movimento_contabil_w[nr_vetor_w].cd_estabelecimento     := cd_estab_movto_w;
                        movimento_contabil_w[nr_vetor_w].cd_classificacao       := cd_classificacao_w;
                        movimento_contabil_w[nr_vetor_w].cd_pessoa_fisica       := cd_pessoa_fisica_w;
                        movimento_contabil_w[nr_vetor_w].ie_transitorio         := ie_transitorio_w;
                        movimento_contabil_w[nr_vetor_w].ds_ordem               := ds_ordem_w;
                        movimento_contabil_w[nr_vetor_w].ie_origem_documento    := ie_origem_documento_w;
                        movimento_contabil_w[nr_vetor_w].nr_seq_classif_movto   := nr_seq_classif_movto_w;
                        movimento_contabil_w[nr_vetor_w].ie_intercompany        := ie_intercompany_w;
                        movimento_contabil_w[nr_vetor_w].cd_estab_intercompany  := cd_estab_intercompany_w;
                        movimento_contabil_w[nr_vetor_w].nr_codigo_controle     := nr_codigo_controle_w;
                        movimento_contabil_w[nr_vetor_w].nr_seq_proj_rec        := nr_seq_proj_rec_w;


                    END IF;

                    IF (nr_seq_info_w IS NOT NULL AND nr_seq_info_w::text <> '') THEN
                        -- INSERE NO VETOR TEMPORARIO
                        w_nr_vetor_doc_w    := w_nr_vetor_doc_w + 1;

                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_sequencia           := 1;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_lote_contabil       := nr_lote_contabil_p;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_seq_movimento       := nr_sequencia_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_seq_info            := nr_seq_info_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_documento           := nr_seq_tab_orig_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_seq_doc_compl       := nr_seq_tab_compl_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].vl_movimento           := vl_movimento_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nm_tabela              := nm_tabela_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nm_atributo            := nm_atributo_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nm_usuario_nrec        := nm_usuario_p;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].dt_atualizacao_nrec    := clock_timestamp();
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nm_usuario             := nm_usuario_p;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].dt_atualizacao         := clock_timestamp();
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_seq_regra_tf        := nr_seq_regra_tf_w;
			w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_seq_trans_fin       := nr_seq_trans_fin_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].ie_debito_credito      := ie_debito_credito_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].cd_conta_contabil      := cd_conta_contabil_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].dt_movimento           := dt_movimento_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].nr_doc_analitico       := nr_doc_analitico_w;
                        w_movimento_contabil_doc_w[w_nr_vetor_doc_w].cd_sequencia_parametro := cd_sequencia_parametro_w;
                    END IF;

                    ds_ordem_ant_w                  := ds_ordem_w;
                    cd_conta_contabil_ant_w         := cd_conta_contabil_w;
                    cd_historico_ant_w              := cd_historico_w;
                    dt_movimento_ant_w              := dt_movimento_w;
                    cd_centro_custo_ant_w           := cd_centro_custo_w;
                    ds_compl_historico_ant_w        := ds_compl_historico_w;
                    ds_doc_agrupamento_ant_w        := ds_doc_agrupamento_w;
                    nr_seq_agrupamento_ant_w        := nr_seq_agrupamento_w;
                    nr_seq_trans_fin_ant_w          := nr_seq_trans_fin_w;
                    cd_cgc_ant_w                    := cd_cgc_w;
                    cd_pessoa_fisica_ant_w          := cd_pessoa_fisica_w;
                    nr_documento_ant_w              := nr_documento_w;
                    cd_estab_movto_ant_w            := cd_estab_movto_w;
                    ie_transitorio_ant_w            := ie_transitorio_w;
                    ie_origem_documento_ant_w       := ie_origem_documento_w;
                    ie_debito_credito_ant_w         := ie_debito_credito_w;
                    nr_seq_regra_tf_ant_w           := nr_seq_regra_tf_w;
                    cd_sequencia_parametro_ant_w    := cd_sequencia_parametro_w;
                    vl_soma_movimento_w             := vl_soma_movimento_w + vl_movimento_w;
                    nr_seq_proj_rec_ant_w           := nr_seq_proj_rec_w;
                END;
            END LOOP;
        END;
    END LOOP;

    IF (vl_soma_movimento_w < 0) THEN
        BEGIN
        IF (movimento_contabil_w[nr_vetor_w].ie_debito_credito = 'C') THEN
            movimento_contabil_w[nr_vetor_w].ie_debito_credito  := 'D';
        ELSE
            movimento_contabil_w[nr_vetor_w].ie_debito_credito  := 'C';
        END IF;

        vl_soma_movimento_w := vl_soma_movimento_w * -1;
        END;
    END IF;

    movimento_contabil_w[nr_vetor_w].vl_movimento   := vl_soma_movimento_w;

    -- VIDE BLOCO DO CURSOR TRANSFERENCIA_INFO
    IF (movimento_contabil_w[nr_vetor_w].vl_movimento != 0) THEN
        IF (w_movimento_contabil_doc_w.COUNT > 0) THEN

            FOR w IN w_movimento_contabil_doc_w.FIRST..w_movimento_contabil_doc_w.LAST LOOP
                BEGIN
                    SELECT  nextval('movimento_contabil_doc_seq')
                    INTO STRICT    nr_seq_doc_compl_w
;

                    nr_vetor_doc_w  := nr_vetor_doc_w + 1;

                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_sequencia               := nr_seq_doc_compl_w;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_lote_contabil           := nr_lote_contabil_p;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_movimento           := w_movimento_contabil_doc_w[w].nr_seq_movimento;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_info                := w_movimento_contabil_doc_w[w].nr_seq_info;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_documento               := w_movimento_contabil_doc_w[w].nr_documento;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_doc_compl           := w_movimento_contabil_doc_w[w].nr_seq_doc_compl;
                    movimento_contabil_doc_w[nr_vetor_doc_w].vl_movimento               := w_movimento_contabil_doc_w[w].vl_movimento;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nm_tabela                  := w_movimento_contabil_doc_w[w].nm_tabela;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nm_atributo                := w_movimento_contabil_doc_w[w].nm_atributo;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nm_usuario_nrec            := w_movimento_contabil_doc_w[w].nm_usuario_nrec;
                    movimento_contabil_doc_w[nr_vetor_doc_w].dt_atualizacao_nrec        := w_movimento_contabil_doc_w[w].dt_atualizacao_nrec;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nm_usuario                 := w_movimento_contabil_doc_w[w].nm_usuario;
                    movimento_contabil_doc_w[nr_vetor_doc_w].dt_atualizacao             := w_movimento_contabil_doc_w[w].dt_atualizacao;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_regra_tf            := w_movimento_contabil_doc_w[w].nr_seq_regra_tf;
		    movimento_contabil_doc_w[nr_vetor_doc_w].nr_seq_trans_fin           := w_movimento_contabil_doc_w[w].nr_seq_trans_fin;
                    movimento_contabil_doc_w[nr_vetor_doc_w].ie_debito_credito          := w_movimento_contabil_doc_w[w].ie_debito_credito;
                    movimento_contabil_doc_w[nr_vetor_doc_w].cd_conta_contabil          := w_movimento_contabil_doc_w[w].cd_conta_contabil;
                    movimento_contabil_doc_w[nr_vetor_doc_w].dt_movimento               := w_movimento_contabil_doc_w[w].dt_movimento;
                    movimento_contabil_doc_w[nr_vetor_doc_w].nr_doc_analitico           := w_movimento_contabil_doc_w[w].nr_doc_analitico;
                    movimento_contabil_doc_w[nr_vetor_doc_w].cd_sequencia_parametro     := w_movimento_contabil_doc_w[w].cd_sequencia_parametro;
                    nr_seq_proj_rec_ant_w           := nr_seq_proj_rec_w;

                    IF (PHILIPS_PARAM_PCK.GET_CD_PAIS = 2) THEN
                        nr_nfe_imp_w := CTB_UUID_PCK.GET_UUID(
                            nr_lote_contabil_p      => nr_lote_contabil_p,
                            nr_seq_info_p           => w_movimento_contabil_doc_w[w].nr_seq_info,
                            nr_documento_p          => w_movimento_contabil_doc_w[w].nr_documento,
                            nr_seq_doc_compl_p      => w_movimento_contabil_doc_w[w].nr_seq_doc_compl,
                            nr_doc_analitico_p      => w_movimento_contabil_doc_w[w].nr_doc_analitico,
                            cd_estabelecimento_p    => NULL
                        );

                        movimento_contabil_doc_w[nr_vetor_doc_w].nr_nfe_imp := nr_nfe_imp_w;
                    END IF;

                END;
            END LOOP;
        END IF;
    ELSE
        movimento_contabil_w.DELETE(nr_vetor_w);
        nr_vetor_w  := nr_vetor_w - 1;

        w_movimento_contabil_doc_w.DELETE;
        w_nr_vetor_doc_w    := 0;
    END IF;

    w_movimento_contabil_doc_w.DELETE;
    w_nr_vetor_doc_w    := 0;

    BEGIN
        FORALL m IN movimento_contabil_w.FIRST..movimento_contabil_w.LAST SAVE EXCEPTIONS
            INSERT INTO MOVIMENTO_CONTABIL VALUES movimento_contabil_w(m);

    EXCEPTION WHEN SQLSTATE '50005' THEN
        FOR l IN 1..SQL%BULK_EXCEPTIONS.COUNT LOOP
                                
            registro_erro   := SQL%BULK_EXCEPTIONS[l].ERROR_INDEX;

            err_msg         := SUBSTR(SQLERRM(-(SQL%BULK_EXCEPTIONS[l].ERROR_CODE)), 1, 100);
            ds_erro_w       := SUBSTR(err_msg || chr(10) ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809042)  || '=' || movimento_contabil_w[registro_erro].nr_sequencia ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809043)  || '=' || movimento_contabil_w[registro_erro].cd_conta_contabil ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809044)  || '=' || movimento_contabil_w[registro_erro].ie_debito_credito ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809045)  || '=' || movimento_contabil_w[registro_erro].cd_historico ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809046)  || '=' || movimento_contabil_w[registro_erro].dt_movimento || chr(10) ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809047)  || '=' || movimento_contabil_w[registro_erro].vl_movimento ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(818134)  || '=' || movimento_contabil_w[registro_erro].cd_centro_custo ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(818135)  || '=' || movimento_contabil_w[registro_erro].nr_seq_trans_fin ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(809048)  || '=' || movimento_contabil_w[registro_erro].ds_compl_historico || chr(10) ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(818136)  || '=' || movimento_contabil_w[registro_erro].cd_estabelecimento || chr(10) ||
                ' ' || WHEB_MENSAGEM_PCK.GET_TEXTO(1065027) || '=' || movimento_contabil_w[registro_erro].nr_seq_agrupamento || chr(10) ||
                    movimento_contabil_w[registro_erro].ds_ordem,1,4000);

            movimento_contabil_doc_w.DELETE;
            movimento_contabil_w.DELETE;
            CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(184609, 'DS_ERRO_W=' || ds_erro_w);
        END LOOP;
    END;

    COMMIT;
    movimento_contabil_w.DELETE;

    FORALL md IN movimento_contabil_doc_w.FIRST..movimento_contabil_doc_w.LAST
	
        INSERT INTO MOVIMENTO_CONTABIL_DOC VALUES movimento_contabil_doc_w(md);		

    COMMIT;
    movimento_contabil_doc_w.DELETE;

    IF (vetor_c01_w.COUNT > 0) THEN
        vetor_c01_w.DELETE;
    END IF;

    nr_lancamento_w     := 0;
    nr_seq_agrup_old_w  := NULL;
    qt_commit_w         := 0;

    OPEN    c_lancamento;
        LOOP
        FETCH   c_lancamento INto
                nr_seq_agrupamento_ww,
                nr_seq_movto_w;
        EXIT WHEN NOT FOUND; /* apply on c_lancamento */
            BEGIN
                qt_commit_w := qt_commit_w + 1;

                IF (coalesce(nr_seq_agrup_old_w::text, '') = '') OR (nr_seq_agrup_old_w <> nr_seq_agrupamento_ww)
                THEN
                    nr_lancamento_w := nr_lancamento_w + 1;
                END IF;

                UPDATE  MOVIMENTO_CONTABIL
                SET     NR_LANCAMENTO    = nr_lancamento_w
                WHERE   NR_SEQUENCIA     = nr_seq_movto_w
                AND     NR_LOTE_CONTABIL = nr_lote_contabil_p;

                nr_seq_agrup_old_w := nr_seq_agrupamento_ww;

                IF (qt_commit_w >= 500) THEN
                    COMMIT;
                    qt_commit_w := 0;
                END IF;
            END;
        END LOOP;
    CLOSE c_lancamento;
    COMMIT;

    BEGIN
        SELECT  SUM(CASE WHEN IE_DEBITO_CREDITO='D' THEN  VL_MOVIMENTO END ) VL_DEBITO_W,
                SUM(CASE WHEN IE_DEBITO_CREDITO='C' THEN  VL_MOVIMENTO END ) VL_CREDITO_W
        INTO STRICT    vl_debito_w,
                vl_credito_w
        FROM    MOVIMENTO_CONTABIL
        WHERE   NR_LOTE_CONTABIL = nr_lote_contabil_p;
    EXCEPTION WHEN OTHERS THEN
        CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(353472);
    END;

    IF (vl_debito_w <> vl_credito_w) THEN
        ie_situacao_w   := 'I';
    ELSE
        ie_situacao_w   := 'A';
    END IF;

    UPDATE  LOTE_CONTABIL
    SET     IE_SITUACAO         = ie_situacao_w,
            DT_GERACAO_LOTE     = clock_timestamp(),
            VL_DEBITO           = vl_debito_w,
            VL_CREDITO          = vl_credito_w
    WHERE   NR_LOTE_CONTABIL    = nr_lote_contabil_p;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agrupa_movimento_contabil ( nr_lote_contabil_p bigint, nm_usuario_p text ) FROM PUBLIC;

