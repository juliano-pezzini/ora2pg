-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_peona ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_esquema_w		bigint;
nr_seq_peona_w			bigint;
dt_lote_w			timestamp;
ie_debito_credito_w		varchar(1);
cd_historico_w			bigint;
ie_existe_valor_w		varchar(1);
ie_codificacao_w		varchar(2);
cd_conta_contabil_w		varchar(20);
cd_conta_credito_w		varchar(20);
cd_conta_debito_w		varchar(20);
nr_seq_peona_conta_contab_w	bigint;
vl_peona_w			pls_peona.vl_peona%type;
vl_peona_ww			pls_peona_conta_contab.vl_peona%type;
vl_base_w			pls_peona.vl_base%type;
vl_base_receita_w		pls_peona.vl_base_receita%type;
vl_base_despesa_w		pls_peona.vl_base_despesa%type;
ie_tipo_plano_w			pls_valores_peona.ie_tipo_plano%type;
vl_receita_w			pls_valores_peona.vl_receita%type;
vl_despesa_w			pls_valores_peona.vl_despesa%type;
vl_odontologico_w		double precision;
vl_plano_w			double precision;
vl_total_receita_w		double precision;
vl_total_despesa_w		double precision;
ie_tipo_movimentacao_w		pls_esquema_contabil.ie_tipo_movimentacao%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		dt_competencia,
		vl_peona,
		vl_base,
		vl_base_receita,
		vl_base_despesa,
		vl_total_receita,
		vl_total_despesa
	from	pls_peona
	where	nr_sequencia	= nr_seq_lote_p;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		cd_historico_padrao,
		ie_tipo_movimentacao
	from	pls_esquema_contabil
	where	ie_tipo_regra = 'PT'
	and	ie_tipo_movimentacao in ('6','19')
	and	trunc(dt_lote_w,'dd') between trunc(dt_inicio_vigencia,'dd') and coalesce(trunc(dt_fim_vigencia,'dd'),trunc(dt_lote_w,'dd'));

C03 CURSOR FOR
	SELECT	ie_codificacao,
		cd_conta_contabil,
		ie_debito_credito
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema = nr_seq_esquema_w
	order by	ie_debito_credito,
			nr_seq_apresentacao;


BEGIN

select	coalesce(max(ie_concil_contab), 'N')
into STRICT	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_p;

if (ie_concil_contab_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_desf_calc_peona(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);
end if;

open C01;
loop
fetch C01 into	
	nr_seq_peona_w,
	dt_lote_w,
	vl_peona_w,
	vl_base_w,
	vl_base_receita_w,
	vl_base_despesa_w,
	vl_total_receita_w,
	vl_total_despesa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	delete	from	pls_peona_conta_contab
	where	nr_seq_peona	= nr_seq_peona_w;
	
	open C02;
	loop
	fetch C02 into	
		nr_seq_esquema_w,
		cd_historico_w,
		ie_tipo_movimentacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	coalesce(max('S'),'N')
		into STRICT	ie_existe_valor_w
		from	pls_valores_peona a
		where	a.nr_seq_peona = nr_seq_peona_w
		and	a.ie_tipo_plano = CASE WHEN ie_tipo_movimentacao_w=6 THEN 'PS' WHEN ie_tipo_movimentacao_w=19 THEN 'OD' END;
		
		if (ie_existe_valor_w = 'S') then
		
			open C03;
			loop
			fetch C03 into	
				ie_codificacao_w,
				cd_conta_contabil_w,
				ie_debito_credito_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */	
				begin
				if (ie_codificacao_w = 'CR') then
					if (ie_debito_credito_w	= 'C') then
						cd_conta_credito_w	:= cd_conta_contabil_w;
					elsif (ie_debito_credito_w	= 'D') then
						cd_conta_debito_w	:= cd_conta_contabil_w;
					end if;
				end if;		
				end;
			end loop;
			close C03;
			
			select	a.ie_tipo_plano,
				sum(a.vl_receita),
				sum(a.vl_despesa)
			into STRICT	ie_tipo_plano_w,
				vl_receita_w,
				vl_despesa_w
			from	pls_valores_peona a
			where	a.nr_seq_peona = nr_seq_peona_w
			and	a.ie_tipo_plano = CASE WHEN ie_tipo_movimentacao_w=6 THEN 'PS' WHEN ie_tipo_movimentacao_w=19 THEN 'OD' END
			group by a.ie_tipo_plano;
			
			if (vl_base_w = vl_base_receita_w) then
				if (ie_tipo_plano_w = 'OD') then
					vl_odontologico_w	:= vl_receita_w;
					vl_peona_ww		:= vl_peona_w * vl_odontologico_w / vl_total_receita_w;
				elsif (ie_tipo_plano_w = 'PS') then
					vl_plano_w		:= vl_receita_w;
					vl_peona_ww		:= vl_peona_w * vl_plano_w / vl_total_receita_w;	
				end if;
			elsif (vl_base_w = vl_base_despesa_w) then
				if (ie_tipo_plano_w = 'OD') then
					vl_odontologico_w	:= vl_despesa_w;
					vl_peona_ww		:= vl_peona_w * vl_odontologico_w / vl_total_despesa_w;					
				elsif (ie_tipo_plano_w = 'PS') then
					vl_plano_w		:= vl_despesa_w;
					vl_peona_ww		:= vl_peona_w * vl_plano_w / vl_total_despesa_w;				
				end if;
			end if;	
			select	nextval('pls_peona_conta_contab_seq')
			into STRICT	nr_seq_peona_conta_contab_w
			;
			
			insert into pls_peona_conta_contab(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_peona,
				cd_conta_credito,
				cd_conta_debito,
				nr_seq_esquema,
				cd_historico_credito,
				cd_historico_debito,
				vl_peona)
			values (nr_seq_peona_conta_contab_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_peona_w,
				cd_conta_credito_w,
				cd_conta_debito_w,
				nr_seq_esquema_w,
				cd_historico_w,
				cd_historico_w,
				vl_peona_ww);
		end if;
		
		end;
	end loop;
	close C02;	
	
	end;
end loop;
close C01;

if (ie_concil_contab_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_calcular_peona(nr_seq_lote_p, cd_estabelecimento_p, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_peona ( nr_seq_lote_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

