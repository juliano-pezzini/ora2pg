-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_produto_diferent ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_seq_titular%type, nr_contrato_p pls_contrato.nr_contrato%type, nr_seq_plano_p pls_plano.nr_sequencia%type, ie_produto_diferente_p text, dt_consistir_regra_p timestamp, ie_retornar_erro_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_erro_p INOUT text) AS $body$
DECLARE


ie_produto_diferente_w		varchar(255);
ds_erro_w			varchar(4000);
ie_regulamentacao_w		pls_plano.ie_regulamentacao%type;
qt_produto_diferente_w		integer;

c01 CURSOR(	nr_contrato_pc		pls_contrato.nr_contrato%type,
		ie_regulamentacao_pc	pls_plano.ie_regulamentacao%type) FOR
	SELECT	ie_permite_plano_diferente
	from	pls_regra_contrato
	where	((ie_regulamentacao = ie_regulamentacao_pc) or (coalesce(ie_regulamentacao::text, '') = ''))
	and	((nr_contrato = nr_contrato_pc) or (coalesce(nr_contrato::text, '') = ''))
	order by
		coalesce(nr_contrato, 0),
		coalesce(ie_regulamentacao, ' ');

BEGIN

ds_erro_w	:= null;
ie_produto_diferente_w	:= ie_produto_diferente_p;

if (ie_produto_diferente_w = 'D') then
	select	max(ie_regulamentacao)
	into STRICT	ie_regulamentacao_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_p;
	
	for r_c01_w in c01(nr_contrato_p, ie_regulamentacao_w) loop
		begin
		ie_produto_diferente_w	:= r_c01_w.ie_permite_plano_diferente;
		end;
	end loop;
end if;

if (coalesce(ie_produto_diferente_w,'N') = 'N') then
	if (coalesce(nr_seq_titular_p,0) <> 0) then
		select	count(1)
		into STRICT	qt_produto_diferente_w
		from	pls_segurado
		where	nr_sequencia = nr_seq_titular_p
		and	coalesce(dt_cancelamento::text, '') = ''
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	nr_seq_plano <> nr_seq_plano_p;
		
		if (qt_produto_diferente_w > 0) then
			if (ie_retornar_erro_p = 'S') then
				ds_erro_w	:= wheb_mensagem_pck.get_texto(280765);
			else
				CALL wheb_mensagem_pck.exibir_mensagem_abort(280765);
			end if;
		end if;
	else
		select	count(1)
		into STRICT	qt_produto_diferente_w
		from	pls_segurado
		where	nr_seq_titular	= nr_seq_segurado_p
		and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_consistir_regra_p))
		and	coalesce(dt_cancelamento::text, '') = ''
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	nr_seq_plano <> nr_seq_plano_p;
		
		if (qt_produto_diferente_w > 0) then
			if (ie_retornar_erro_p = 'S') then
				ds_erro_w	:= wheb_mensagem_pck.get_texto(280766);
			else
				CALL wheb_mensagem_pck.exibir_mensagem_abort(280766);
			end if;
		end if;
	end if;
end if;

ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_produto_diferent ( nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_seq_titular%type, nr_contrato_p pls_contrato.nr_contrato%type, nr_seq_plano_p pls_plano.nr_sequencia%type, ie_produto_diferente_p text, dt_consistir_regra_p timestamp, ie_retornar_erro_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, ds_erro_p INOUT text) FROM PUBLIC;

