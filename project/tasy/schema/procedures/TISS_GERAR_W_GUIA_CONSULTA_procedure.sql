-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_w_guia_consulta ( nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_atend_conta_tiss_p text, ds_dir_padrao_p text, nm_usuario_p text) AS $body$
DECLARE


cd_ans_w		varchar(100);
cd_ans_aux_w		varchar(100);
cd_autorizacao_w		varchar(100);
cd_senha_w		varchar(100);
ie_tipo_atendimento_w	varchar(20);
ie_tipo_saida_w		varchar(20);
cd_categoria_conv_w	varchar(20);
ie_trazer_executor_w	varchar(10);
ds_arquivo_logo_w		varchar(140);
ds_carater_internacao_w	varchar(1);
cd_usuario_convenio_w	varchar(50);
ie_tiss_tipo_guia_w		varchar(50);
cd_pessoa_fisica_w	varchar(10);
nm_pessoa_fisica_w	varchar(100);
ds_plano_w		varchar(100);
ds_observacao_w		varchar(255);
cd_convenio_w		integer;
nr_sequencia_autor_w	bigint;
cd_estabelecimento_w	smallint;
nr_seq_conta_guia_w	bigint;
nr_atendimento_w		bigint;
nr_interno_conta_w	bigint;
nr_seq_guia_w		bigint;
nr_seq_beneficiario_w	bigint;
nr_cartao_nac_sus_w	numeric(20);
dt_atendimento_w	timestamp;
dt_validade_senha_w	timestamp;
dt_emissao_guia_w	timestamp;
dt_autorizacao_w	timestamp;
dt_validade_carteira_w	timestamp;

cd_autorizacao_princ_w	varchar(255);
cd_cgc_prestador_w	varchar(255);
ie_agrupar_proc_w		varchar(40);
cd_prestador_convenio_w	varchar(255) := '';
ie_honorario_w		varchar(30)  := '';
ie_status_acerto_w		bigint;
ds_data_assin_benef_w	varchar(255);
ds_data_assin_med_w	varchar(255);
dt_ult_atualizacao_w	timestamp;
dt_geracao_tiss_w		timestamp;
ie_clinica_w		bigint;
ds_arquivo_logo_comp_w	varchar(255);
ie_gerar_tiss_w		varchar(10);
nr_seq_classif_atend_w	bigint;
cd_setor_entrada_w	bigint;
ie_cons_atend_retorno_w	varchar(10);

qt_tempo_cid_w		bigint;
ie_unidade_tempo_cid_w	varchar(40);
ie_tipo_cid_w		varchar(40);
ie_tipo_acidente_w		varchar(40);
cd_cid_w		varchar(10);
nr_guia_prestador_w	varchar(100);
ie_atendimento_rn_w	varchar(10);
ds_versao_w		varchar(20);
dt_mesano_referencia_w	timestamp;
ds_posicao_w		integer;
ds_dir_padrao_w		varchar(255);
im_logo_convenio_w	tiss_logo_convenio.im_logo_convenio%type;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta,
	a.cd_autorizacao,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	'3' ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.dt_autorizacao,
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_emissao_guia,
	b.dt_entrada,
	b.ie_carater_internacao,
	a.ie_honorario,
	a.nr_sequencia_autor,
	b.cd_usuario_convenio,
	b.cd_pessoa_fisica,
	b.nm_pessoa_fisica,
	b.nr_cartao_nac_sus,
	b.ds_plano,
	b.dt_validade_carteira,
	a.ds_observacao,
	a.ds_data_assin_benef,
	a.ds_data_assin_med,
	a.qt_tempo_cid,
	a.ie_unidade_tempo_cid,
	a.ie_tipo_cid,
	a.ie_tipo_acidente,
	a.cd_ans,
	a.cd_cid,
	a.nr_guia_prestador
from	tiss_conta_guia a,
	tiss_conta_atend b	
where	a.nr_interno_conta	= b.nr_interno_conta
and	a.nr_interno_conta	= nr_interno_conta_p
and	a.ie_tiss_tipo_guia	= '3'

union

SELECT	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta,
	a.cd_autorizacao,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	'3' ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.dt_autorizacao,
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_emissao_guia,
	b.dt_entrada,
	b.ie_carater_internacao,
	a.ie_honorario,
	a.nr_sequencia_autor,
	b.cd_usuario_convenio,
	b.cd_pessoa_fisica,
	b.nm_pessoa_fisica,
	b.nr_cartao_nac_sus,
	b.ds_plano,
	b.dt_validade_carteira,
	a.ds_observacao,
	a.ds_data_assin_benef,
	a.ds_data_assin_med,
	a.qt_tempo_cid,
	a.ie_unidade_tempo_cid,
	a.ie_tipo_cid,
	a.ie_tipo_acidente,
	a.cd_ans,
	a.cd_cid,
	a.nr_guia_prestador
from	tiss_conta_guia a,
	TISS_PROTOCOLO_GUIA c,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	c.nr_sequencia	= a.nr_seq_prot_guia
and	c.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.ie_tiss_tipo_guia	= '3'

union

select	a.nr_sequencia,
	b.nr_atendimento,
	a.nr_interno_conta,
	a.cd_autorizacao,
	a.ie_tipo_atend_tiss,
	a.ie_tipo_saida,
	'3' ie_tiss_tipo_guia,
	a.cd_autorizacao_princ,
	a.cd_cgc_prestador,
	a.dt_autorizacao,
	a.cd_senha,
	a.dt_validade_senha,
	a.dt_emissao_guia,
	b.dt_entrada,
	b.ie_carater_internacao,
	a.ie_honorario,
	a.nr_sequencia_autor,
	b.cd_usuario_convenio,
	b.cd_pessoa_fisica,
	b.nm_pessoa_fisica,
	b.nr_cartao_nac_sus,
	b.ds_plano,
	b.dt_validade_carteira,
	a.ds_observacao,
	a.ds_data_assin_benef,
	a.ds_data_assin_med,
	a.qt_tempo_cid,
	a.ie_unidade_tempo_cid,
	a.ie_tipo_cid,
	a.ie_tipo_acidente,
	a.cd_ans,
	a.cd_cid,
	a.nr_guia_prestador
from	tiss_conta_guia a,
	tiss_conta_atend b
where	a.nr_interno_conta	= b.nr_interno_conta
and	b.nr_atendimento	= nr_atend_conta_tiss_p
and	a.ie_tiss_tipo_guia	= '3';

c02 CURSOR FOR
SELECT	nr_interno_conta
from	conta_paciente
where	((nr_interno_conta	= nr_interno_conta_p) or
	 ((coalesce(nr_interno_conta_p,0) <= 0) and (nr_atendimento = nr_atend_conta_tiss_p)));



BEGIN

delete	from w_tiss_guia
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_dados_atendimento
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_beneficiario
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_paciente
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_exec
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_totais
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_proc_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_solicitacao
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_contratado_solic
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_relatorio
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm
where	nm_usuario		= nm_usuario_p;

delete	from w_tiss_opm_exec
where	nm_usuario		= nm_usuario_p;

commit;

CALL tiss_convenio_pck.set_dt_referencia_tiss(null);

if (coalesce(nr_seq_protocolo_p,0) > 0) or (coalesce(nr_interno_conta_p,0) > 0) or (coalesce(nr_atend_conta_tiss_p,0) > 0) then
	
	if (coalesce(nr_seq_protocolo_p,0) > 0) then

		select	max(c.cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(b.cd_convenio),
			max(a.cd_estabelecimento),
			max(a.cd_prestador_convenio),
			max(coalesce(a.dt_referencia_tiss,a.dt_mesano_referencia))
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w,
			cd_prestador_convenio_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			protocolo_convenio a
		where	a.cd_convenio		= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_seq_protocolo	= nr_seq_protocolo_p;
		
		CALL tiss_convenio_pck.set_dt_referencia_tiss(dt_mesano_referencia_w);

	elsif (coalesce(nr_interno_conta_p,0) > 0) then

		select	max(cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(b.cd_convenio),
			max(a.cd_estabelecimento),
			max(a.dt_mesano_referencia)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			conta_paciente a
		where	a.cd_convenio_parametro	= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_interno_conta	= nr_interno_conta_p;

	elsif (coalesce(nr_atend_conta_tiss_p,0) > 0) then	

		select	max(cd_ans),
			max(b.ds_arquivo_logo_tiss),
			max(b.cd_convenio),
			max(a.cd_estabelecimento),
			max(a.dt_mesano_referencia)
		into STRICT	cd_ans_w,
			ds_arquivo_logo_w,
			cd_convenio_w,
			cd_estabelecimento_w,
			dt_mesano_referencia_w
		from	pessoa_juridica c,
			convenio b,
			conta_paciente a
		where	a.cd_convenio_parametro	= b.cd_convenio
		and	b.cd_cgc		= c.cd_cgc
		and	a.nr_atendimento	= nr_atend_conta_tiss_p;	

	end if;
	
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_p;

	select	max(ds_arquivo_logo_comp),
		coalesce(max(ie_gerar_tiss), 'S'),
		coalesce(max(ie_cons_atend_retorno),'S')
	into STRICT	ds_arquivo_logo_comp_w,
		ie_gerar_tiss_w,
		ie_cons_atend_retorno_w
	from	tiss_parametros_convenio
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	cd_convenio		= cd_convenio_w;
	
	
	select	coalesce(max(tiss_obter_versao(cd_convenio_w,cd_estabelecimento_w,dt_mesano_referencia_w)),'2.02.03')
	into STRICT	ds_versao_w
	;
	
	-- Douglas - OS 343565 - Criado o parametro emitir guia consulta retorno, para não trazer na guia os atendimentos do retorno.
	if 	((coalesce(ie_cons_atend_retorno_w,'S') = 'S') or (coalesce(obter_se_atend_retorno(nr_atendimento_w),'N') = 'N')) then	
		
		-- dsantos 28/07/2009, OS 152094, tratamento para recalcular a conta TISS qdo emitir o relatório
		open c02;
		loop
		fetch c02 into
			nr_interno_conta_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			select	max(dt_atualizacao)
			into STRICT	dt_ult_atualizacao_w
			from (SELECT	dt_atualizacao
				from	procedimento_paciente
				where	nr_interno_conta	= nr_interno_conta_w
				
union

				SELECT	dt_atualizacao
				from	material_atend_paciente
				where	nr_interno_conta	= nr_interno_conta_w) alias1;

			select	coalesce(max(dt_geracao_tiss), dt_ult_atualizacao_w - 1),
				max(ie_status_acerto)
			into STRICT	dt_geracao_tiss_w,
				ie_status_acerto_w
			from	conta_paciente
			where	nr_interno_conta	= nr_interno_conta_w;

			if (ie_status_acerto_w = 1) and (dt_ult_atualizacao_w > dt_geracao_tiss_w) then
				CALL tiss_atualizar_prot_conta(null, nr_interno_conta_w, null, null, 'N', null, nm_usuario_p);
			end if;
			commit;
		end loop;
		close c02;
		
		begin
			select	im_logo_convenio
			into STRICT	im_logo_convenio_w
			from	tiss_logo_convenio
			where	cd_convenio	   = cd_convenio_w
			and 	coalesce(ie_situacao,'N') = 'A';
		exception
		when others then
			im_logo_convenio_w := null;
		end;
		
		if (coalesce(im_logo_convenio_w::text, '') = '') and (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') then
			ds_arquivo_logo_w := tiss_diretorio_logo(ds_arquivo_logo_comp_w, ds_dir_padrao_p) || ds_arquivo_logo_w;
		end if;
		
		if (coalesce(ie_gerar_tiss_w,'S') = 'S') then
		
			if (ds_arquivo_logo_w IS NOT NULL AND ds_arquivo_logo_w::text <> '') and (coalesce(im_logo_convenio_w::text, '') = '') then	

				insert	into w_tiss_relatorio(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_arquivo_logo)
				values (nextval('w_tiss_relatorio_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					ds_arquivo_logo_w);
			else
				insert	into w_tiss_relatorio(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ds_arquivo_logo,
					im_logo_convenio)
				values (nextval('w_tiss_relatorio_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					null,
					im_logo_convenio_w);
			end if;

			open c01;
			loop
			fetch c01 into
				nr_seq_conta_guia_w,
				nr_atendimento_w,
				nr_interno_conta_w,
				cd_autorizacao_w,
				ie_tipo_atendimento_w,
				ie_tipo_saida_w,
				ie_tiss_tipo_guia_w,
				cd_autorizacao_princ_w,
				cd_cgc_prestador_w,
				dt_autorizacao_w,
				cd_senha_w,
				dt_validade_senha_w,
				dt_emissao_guia_w,
				dt_atendimento_w,
				ds_carater_internacao_w,
				ie_honorario_w,
				nr_sequencia_autor_w,
				cd_usuario_convenio_w,
				cd_pessoa_fisica_w,
				nm_pessoa_fisica_w,
				nr_cartao_nac_sus_w,
				ds_plano_w,
				dt_validade_carteira_w,
				ds_observacao_w,
				ds_data_assin_benef_w,
				ds_data_assin_med_w,
				qt_tempo_cid_w,
				ie_unidade_tempo_cid_w,
				ie_tipo_cid_w,
				ie_tipo_acidente_w,
				cd_ans_aux_w,
				cd_cid_w,
				nr_guia_prestador_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */

				select	max((obter_clinica_atend(nr_atendimento_w, 'C'))::numeric ),
					max((Obter_Classificacao_Atend(nr_atendimento_w,'C'))::numeric ),
					max(obter_setor_atendimento(nr_atendimento_w)),
					max(tiss_obter_se_atend_rn(nr_atendimento_w))
				into STRICT	ie_clinica_w,
					nr_seq_classif_atend_w,
					cd_setor_entrada_w,
					ie_atendimento_rn_w
				;
				
				if (cd_ans_aux_w IS NOT NULL AND cd_ans_aux_w::text <> '') then
					cd_ans_w	:= cd_ans_aux_w;
				end if;
	
				select	coalesce(max(ie_agrupar_proc), 'S'),
					coalesce(max(ie_exec_spsadt),'N')
				into STRICT	ie_agrupar_proc_w,
					ie_trazer_executor_w
				from	tiss_parametros_convenio
				where	cd_estabelecimento	= cd_estabelecimento_w
				and	cd_convenio		= cd_convenio_w;	

				select	nextval('w_tiss_guia_seq')
				into STRICT	nr_seq_guia_w
				;
		
				insert	into w_tiss_guia(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_ans,
					cd_autorizacao,
					dt_autorizacao,
					cd_senha,
					dt_validade_senha,
					dt_emissao_guia,
					nr_interno_conta,
					nr_atendimento,
					cd_autorizacao_princ,
					ie_tiss_tipo_guia,
					dt_entrada,
					ds_observacao,
					ds_data_assin_benef,
					ds_data_assin_med,
					nr_guia_prestador,
					nr_guia_operadora,
					ie_atendimento_rn,
					ds_versao)
				values (nr_seq_guia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_ans_w,
					cd_autorizacao_w,
					dt_autorizacao_w,
					cd_senha_w,
					dt_validade_senha_w,
					dt_emissao_guia_w,
					nr_interno_conta_w,
					nr_atendimento_w,
					cd_autorizacao_princ_w,
					'3',
					dt_atendimento_w,
					coalesce(ds_observacao_w, tiss_obter_regra_campo(3, 'DS_OBSERVACAO', cd_convenio_w, ds_observacao_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null)),
					ds_data_assin_benef_w,
					ds_data_assin_med_w,
					nr_guia_prestador_w,
					cd_autorizacao_w,
					ie_atendimento_rn_w,
					ds_versao_w);

				select	nextval('w_tiss_beneficiario_seq')
				into STRICT	nr_seq_beneficiario_w
				;

				insert 	into w_tiss_solicitacao( nr_sequencia,
					nr_seq_guia,
					nm_usuario,
					dt_atualizacao,
					ie_tipo_acidente,
					ie_tipo_doenca,
					ie_unidade_tempo,
					qt_tempo,
					cd_cid)
				values ( nextval('w_tiss_solicitacao_seq'),
					nr_seq_guia_w,
					nm_usuario_p,
					clock_timestamp(),
					tiss_obter_regra_campo(3, 'IE_TIPO_ACIDENTE', cd_convenio_w, ie_tipo_acidente_w, ie_tipo_atendimento_w, cd_categoria_conv_w,'N', 0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),					
					ie_tipo_cid_w,
					ie_unidade_tempo_cid_w,
					qt_tempo_cid_w,
					cd_cid_w);

				insert	into w_tiss_beneficiario(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_seq_guia,
					cd_pessoa_fisica,
					nm_pessoa_fisica,
					nr_cartao_nac_sus,
					ds_plano,
					dt_validade_carteira,
					cd_usuario_convenio)
				values (nr_seq_beneficiario_w,
					 clock_timestamp(),
					 nm_usuario_p,
					 nr_seq_guia_w,
					 cd_pessoa_fisica_w,
					 nm_pessoa_fisica_w,
					 nr_cartao_nac_sus_w,
					 ds_plano_w,
					 dt_validade_carteira_w,
					 cd_usuario_convenio_w);
	
				-- ie_trazer_executor_w

				-- 'S' médico executor

					-- 'MC' médico executor se conveniado

				-- 'N' médico do atendimento

		
				--OS83287 - O parâmetro é da guia de SP/SADT não da guia de consulta

				--if	(ie_trazer_executor_w	in ('MC','S','N')) then
		
					insert	into w_tiss_contratado_exec(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						ds_tipo_logradouro,
						ds_logradouro,
						nm_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes,
						nm_medico_executor,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude,
						ds_funcao_medico)
					SELECT	nextval('w_tiss_contratado_exec_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_guia_w,
						cd_cgc,
						coalesce(cd_prestador_convenio_w, cd_interno),
						tiss_obter_regra_campo(3, 'CD_INTERNO', cd_convenio_w, coalesce(cd_interno_compl, nr_cpf), ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),
						nm_contratado,
						ie_tipo_acomodacao,
						ds_logradouro,
						nm_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes,
						tiss_obter_regra_campo(3, 'NM_EXECUTOR', cd_convenio_w, nm_exec_compl, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),
						tiss_obter_regra_campo(3, 'SG_CONSELHO', cd_convenio_w, sg_conselho_compl, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),
						tiss_obter_regra_campo(3, 'NR_CRM', cd_convenio_w, nr_crm_compl, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),
						tiss_obter_regra_campo(3, 'UF_CRM', cd_convenio_w, uf_conselho_compl, ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),
						cd_cbos_compl,
						ie_funcao_medico_compl
					from	tiss_conta_contrat_exec
					where	nr_seq_guia		= nr_seq_conta_guia_w;
				/*else
					insert	into w_tiss_contratado_exec
						(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nr_seq_guia,
						cd_cgc,
						cd_interno,
						nr_cpf,
						nm_contratado,
						ds_tipo_logradouro,
						ds_logradouro,
						nm_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes,
						nm_medico_executor,
						sg_conselho,
						nr_crm,
						uf_crm,
						cd_cbo_saude)
					select	w_tiss_contratado_exec_seq.nextval,
						sysdate,
						nm_usuario_p,
						nr_seq_guia_w,
						cd_cgc,
						nvl(cd_prestador_convenio_w, cd_interno),
						null,
						nm_contratado,
						ie_tipo_acomodacao,
						ds_logradouro,
						nm_municipio,
						sg_estado,
						cd_municipio_ibge,
						cd_cep,
						cd_cnes,
						null,
						null,
						null,
						null,
						null
					from	tiss_conta_contrat_exec
					where	nr_seq_guia		= nr_seq_conta_guia_w;
	
				end if;*/
				insert into w_tiss_proc_paciente(nr_sequencia,
					 nr_seq_guia,
					 nm_usuario,
					 dt_atualizacao,
					 cd_procedimento,
					 cd_edicao_amb,
					 dt_entrada,
					 vl_procedimento)
				SELECT	nextval('w_tiss_proc_paciente_seq'),
					nr_seq_guia_w,
					nm_usuario_p,
					clock_timestamp(),
					cd_procedimento,
					cd_edicao_amb,
					to_date(tiss_obter_regra_campo(3, 'DT_ATENDIMENTO', cd_convenio_w, to_char(dt_atendimento_w,'dd/mm/yyyy'), ie_tipo_atendimento_w, cd_categoria_conv_w,'N',0, cd_estabelecimento_w, ie_clinica_w, nr_seq_classif_atend_w, cd_setor_entrada_w, null),'dd/mm/yyyy'),
					vl_procedimento
				from	tiss_conta_proc
				where	nr_seq_guia	= nr_seq_conta_guia_w;

			end loop;
			close c01;
		
		end if;

	end if;	

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_w_guia_consulta ( nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, nr_atend_conta_tiss_p text, ds_dir_padrao_p text, nm_usuario_p text) FROM PUBLIC;

