-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_pls_fatura AS (	nr_id	t_rowid);
CREATE TYPE t_pls_conta_pos_estab_contab AS (	nr_id	t_rowid);
CREATE TYPE t_pls_conta_pos_taxa_contab AS (	nr_id	t_rowid);
CREATE TYPE tipo_cobranca AS (	vl_dominio	varchar(15),
				ds_valor	varchar(255));


CREATE OR REPLACE PROCEDURE ctb_pls_contab_faturamento ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Contabilizar os valores de receitas com faturamento
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_referencia_w			timestamp;
dt_referencia_fatura_w		timestamp;
dt_referencia_month_w		timestamp;
dt_referencia_anterior_w	timestamp;
dt_mesano_referencia_fat_w	timestamp;
dt_mes_competencia_w		timestamp;
nr_nota_fiscal_w		numeric(20);
cd_procedimento_w		bigint;
nr_seq_w_movto_cont_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_item_w			bigint;
nr_lote_contabil_w		bigint;
nr_seq_prestador_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_regra_cc_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
nr_seq_lote_fat_w		bigint;
nr_seq_prot_conta_w		bigint;
nr_titulo_fat_w 		bigint;
qt_param_item_w			bigint;
cd_centro_custo_deb_w		integer;
cd_centro_custo_cred_w		integer;
cd_estabelecimento_w		smallint;
ds_conteudo_w			varchar(4000);
vl_retorno_w			varchar(2000);
ds_item_w			varchar(255);
nm_prestador_w			varchar(255);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
ie_tipo_cobranca_fat_w		varchar(255);
nm_pagador_fat_w 		varchar(255);
nr_nota_fiscal_fat_w		varchar(255);
cd_conta_contabil_w		varchar(20);
cd_conta_debito_w		varchar(20);
cd_conta_credito_w		varchar(20);
cd_pessoa_fisica_w		varchar(20);
cd_cgc_prestador_w		varchar(14);
cd_cpf_prestador_w		varchar(11);
ie_tipo_item_w			varchar(10);
ie_proc_mat_w			varchar(2);
ie_compl_hist_w			varchar(2);
ie_regulamentacao_w		varchar(2);
ie_centro_custo_deb_w		varchar(1);
ie_centro_custo_cred_w		varchar(1);
cd_centro_custo_fixo_deb_w	integer;
cd_centro_custo_fixo_cred_w	integer;
nr_seq_fatura_w			bigint;
nm_agrupador_w			varchar(255);
nr_seq_agrupamento_w		bigint;
dt_contabil_w			timestamp;
ds_tipo_cobranca_fat_w		varchar(255);
nr_seq_fatura_conta_w		bigint;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
nr_seq_pagador_w		pls_fatura.nr_seq_pagador%type;
cd_pf_pag_w			pls_contrato_pagador.cd_pessoa_fisica%type;
cd_cgc_pag_w			pls_contrato_pagador.cd_cgc%type;
dt_referencia_fm_w		timestamp;
dt_referencia_afm_w		timestamp;
dt_emissao_w			timestamp;
dt_emissao_titulo_w		timestamp;
nr_rowid_w			oid;
nr_rowid_tx_w			oid;
nr_id_fatura_w			oid;
nr_vetor_w			bigint	:= 0;
vl_dominio_w			varchar(15);
ds_valor_w			varchar(255);
ie_data_rec_faturamento_w	pls_parametro_contabil.ie_data_rec_faturamento%type;
nr_seq_lote_fatur_w		pls_lote_faturamento.nr_sequencia%type;
cd_historico_w			pls_conta_pos_estab_contab.cd_historico%type;
vl_contabil_w			pls_conta_pos_estab_contab.vl_administracao%type;
ie_movimento_w			varchar(3);
ie_cancelamento_w		pls_fatura.ie_cancelamento%type;
nr_seq_fat_nova_w		pls_fatura.nr_sequencia%type;
nr_titulo_fat_taxa_w		pls_fatura.nr_titulo%type;
nr_seq_regra_fat_w		pls_lote_faturamento.nr_seq_regra_fat%type;
ie_div_fat_taxa_w		pls_regra_faturamento.ie_div_fat_taxa%type;
ie_lote_ajuste_fat_w		pls_parametro_contabil.ie_lote_ajuste_fat%type;
ie_lote_reembolso_fat_w		pls_parametro_contabil.ie_lote_reembolso_fat%type;	
ie_lote_taxa_fat_w		pls_parametro_contabil.ie_lote_taxa_fat%type;
cd_conta_deb_ndc_w		pls_conta_pos_estab_contab.cd_conta_deb_ndc%type;
cd_conta_deb_dif_w		pls_conta_pos_estab_contab.cd_conta_deb_dif%type;
cd_conta_deb_taxa_w		pls_conta_pos_estab_contab.cd_conta_deb_taxa%type;
cd_conta_deb_taxa_adm_w 	pls_conta_pos_taxa_contab.cd_conta_deb%type;
cd_conta_deb_ajuste_w		pls_conta_pos_estab_contab.cd_conta_deb_provisao%type;
cd_conta_cred_ndc_w		pls_conta_pos_estab_contab.cd_conta_deb_ndc%type;
cd_conta_cred_dif_w		pls_conta_pos_estab_contab.cd_conta_deb_dif%type;
cd_conta_cred_taxa_w		pls_conta_pos_estab_contab.cd_conta_deb_taxa%type;
cd_conta_cred_taxa_adm_w 	pls_conta_pos_taxa_contab.cd_conta_deb%type;
cd_conta_cred_ajuste_w		pls_conta_pos_estab_contab.cd_conta_deb_provisao%type;
vl_contab_ndc_w			pls_conta_pos_estab_contab.vl_administracao%type;
vl_contab_dif_w			pls_conta_pos_estab_contab.vl_administracao%type;
vl_contab_taxa_w		pls_conta_pos_estab_contab.vl_administracao%type;
vl_contab_ajuste_w		pls_conta_pos_estab_contab.vl_administracao%type;
vl_contab_taxa_adm_w		pls_conta_pos_taxa_contab.vl_taxa%type;
vl_provisao_taxa_adm_w		pls_conta_pos_taxa_contab.vl_provisao%type;
cd_historico_ndc_w		pls_conta_pos_estab_contab.cd_historico_ndc%type;
cd_historico_dif_w		pls_conta_pos_estab_contab.cd_historico_dif%type;
cd_historico_taxa_w		pls_conta_pos_estab_contab.cd_historico_taxa%type;
cd_historico_ajuste_w		pls_conta_pos_estab_contab.cd_historico_ajuste%type;
cd_historico_taxa_adm_w		pls_conta_pos_taxa_contab.cd_historico%type;
ie_status_w			pls_conta_proc.ie_status%type;
nr_seq_lote_tit_w		pls_lote_faturamento.nr_sequencia%type;
ie_consiste_tit_faturamento_w	pls_parametro_contabil.ie_consiste_tit_faturamento%type;
ds_lote_sem_titulo_w		varchar(4000);
dt_geracao_titulos_w		pls_lote_faturamento.dt_geracao_titulos%type;
ie_lote_dif_fat_w		pls_parametro_contabil.ie_lote_dif_fat%type;
ie_gerar_fat_contab_w		pls_parametro_faturamento.ie_gerar_fat_contab%type;
ie_lote_taxa_adm_w		pls_parametro_contabil.ie_lote_taxa_adm%type;

nr_seq_prestador_pag_w		pls_conta_medica_resumo.nr_seq_prestador_pgto%type;
nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;
nr_seq_prestador_solic_w	pls_conta.nr_seq_prestador%type;
nr_seq_prestador_atend_w	pls_protocolo_conta.nr_seq_prestador%type;

type t_rowid is table of varchar(18) index by integer;
pls_fatura_w		t_pls_fatura;
pls_conta_pos_estab_contab_w		t_pls_conta_pos_estab_contab;
pls_conta_pos_taxa_contab_w		t_pls_conta_pos_taxa_contab;

type t_movimento_contabil is table
	of w_movimento_contabil%rowtype index by integer;
movimento_contabil_w	t_movimento_contabil;
item_mov_contabil_w	w_movimento_contabil%rowtype;

C01 CURSOR FOR
	SELECT	'P' ie_proc_mat,
		e.oid nr_rowid,
		p.nr_seq_conta_pos_estab nr_seq_item,		
		e.cd_conta_deb_ndc,
		e.cd_conta_deb_dif,
		e.cd_conta_deb_taxa,
		h.cd_conta_deb cd_conta_deb_taxa_adm,
		e.cd_conta_deb_provisao cd_conta_deb_ajuste,	
		e.cd_conta_cred_ndc,
		e.cd_conta_cred_dif,
		e.cd_conta_cred_taxa,
		h.cd_conta_cred cd_conta_cred_taxa_adm,
		e.cd_conta_cred_provisao cd_conta_cred_ajuste,
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0) vl_contab_ndc,
		CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='H' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='T' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric   ELSE 0 END  vl_contab_dif,
		e.vl_administracao vl_contab_taxa,
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0) vl_contab_ajuste,
		coalesce(h.vl_taxa,0) vl_contab_taxa_adm,
		coalesce(h.vl_provisao,0) vl_provisao_taxa_adm,
		trunc(f.dt_mes_competencia,'month') dt_mes_competencia,
		e.cd_historico_ndc,
		e.cd_historico_dif,
		e.cd_historico_taxa,
		e.cd_historico_ajuste,
		h.cd_historico cd_historico_taxa_adm,
		t.nr_sequencia nr_seq_conta,
		t.nr_seq_segurado,
		t.nr_seq_protocolo,
		t.nr_seq_prestador_exec nr_seq_prestador,
		t.nr_seq_prot_conta,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_material,
		f.nr_sequencia nr_seq_fatura,
		f.nr_seq_lote nr_seq_lote_fat,
		p.ie_tipo_cobranca ie_tipo_cobranca_fat,
		c.nr_sequencia nr_seq_fatura_conta,
		'PLS_FATURA_PROC' nm_tabela,
		'VL_FATURADO_NDC' nm_atributo,
		30 nr_seq_info_ctb,
		t.nr_seq_plano,
		f.nr_seq_pagador,
		f.nr_titulo nr_titulo_fat,
		l.dt_mesano_referencia dt_mesano_referencia_fat,
		f.dt_emissao,
		l.nr_sequencia nr_seq_lote_fatur,
		r.dt_emissao dt_emissao_titulo,
		f.ie_cancelamento,
		h.oid nr_rowid_tx,
		(SELECT	x.ie_status
		from	pls_conta_proc x
		where	a.nr_seq_conta_proc	= x.nr_sequencia) ie_status,
		l.dt_geracao_titulos,
		t.nr_seq_prestador nr_seq_prestador_solic,
		t.nr_seq_prestador_exec nr_seq_prestador_exec,
		(select	x.nr_seq_prestador_pgto
		from	pls_conta_medica_resumo x
		where	x.nr_seq_conta = t.nr_sequencia
		and	x.nr_sequencia = e.nr_seq_conta_resumo) nr_seq_prestador_pag,
		j.nr_seq_prestador nr_seq_prestador_atend,
		f.oid nr_id_fatura,
		l.nr_seq_regra_fat nr_seq_regra_fat
	FROM pls_conta t, pls_segurado s, pls_lote_faturamento l, pls_protocolo_conta j, pls_conta_pos_estab_contab e, pls_fatura_evento d, pls_fatura_conta c, pls_conta_pos_estabelecido a, pls_fatura f
LEFT OUTER JOIN titulo_receber r ON (f.nr_titulo = r.nr_titulo)
, pls_fatura_proc p
LEFT OUTER JOIN pls_conta_pos_taxa_contab h ON (p.nr_seq_pos_taxa_contab = h.nr_sequencia)
WHERE t.nr_sequencia 		= a.nr_seq_conta and a.nr_sequencia 		= e.nr_seq_conta_pos and s.nr_sequencia 		= t.nr_seq_segurado and a.nr_sequencia 		= p.nr_seq_conta_pos_estab and c.nr_sequencia 		= p.nr_seq_fatura_conta and d.nr_sequencia 		= c.nr_seq_fatura_evento and f.nr_sequencia 		= d.nr_seq_fatura and l.nr_sequencia 		= f.nr_seq_lote and j.nr_sequencia		= t.nr_seq_protocolo and coalesce(f.ie_impedimento_cobranca,'X') not in ('NF','BP')   and coalesce(f.nr_seq_cancel_fat::text, '') = '' and coalesce(f.nr_lote_contabil,0)	= 0 and (((ie_data_rec_faturamento_w	= 'TI' -- Emissao do titulo
	and 	coalesce(f.ie_cancelamento,'C')	<> 'E'
	and (r.dt_emissao between dt_inicial_w and dt_final_w
	or (coalesce(f.nr_titulo,0)	= 0
	and	f.ie_cancelamento 	= 'C'
	and	coalesce(l.dt_geracao_titulos,f.dt_mes_competencia) between dt_inicial_w and dt_final_w)))
	or (ie_data_rec_faturamento_w	= 'EF' -- Emissao da fatura
	and	f.dt_emissao between dt_inicial_w and dt_final_w
	and	coalesce(f.ie_cancelamento,'C') = 'C') 	
	or (ie_data_rec_faturamento_w	= 'MC' -- Mes competencia
	and	f.dt_mes_competencia between dt_inicial_w and dt_final_w
	and	coalesce(f.ie_cancelamento,'C') = 'C'))
	or (f.dt_mes_competencia between dt_inicial_w and dt_final_w
	and	coalesce(f.ie_cancelamento,'C') = 'E'))  -- Estorno
  and ((qt_param_item_w	= 0)
	or (exists (	select	1
				from	lote_contabil_param_item x
				where	x.nr_lote_contabil 	= nr_lote_contabil_p
				and	x.nr_documento		= f.nr_seq_lote
				
union

				select	1
				from	lote_contabil_parametro x
				where	x.nr_lote_contabil 	= nr_lote_contabil_p
				and	f.nr_seq_lote		= x.vl_parametro))) and coalesce(a.ie_status_faturamento, 'A') <> 'A' and (e.nr_sequencia  = p.nr_seq_conta_pos_contab or coalesce(p.nr_seq_conta_pos_contab, 0) = 0)
	 
union all

	select	'M' ie_proc_mat,
		e.oid nr_rowid,
		m.nr_seq_conta_pos_estab nr_seq_item,
		e.cd_conta_deb_ndc,
		e.cd_conta_deb_dif,
		e.cd_conta_deb_taxa,
		h.cd_conta_deb cd_conta_deb_taxa_adm,
		e.cd_conta_deb_provisao cd_conta_deb_ajuste,		
		e.cd_conta_cred_ndc,
		e.cd_conta_cred_dif,
		e.cd_conta_cred_taxa,
		h.cd_conta_cred cd_conta_cred_taxa_adm,
		e.cd_conta_cred_provisao cd_conta_cred_ajuste,		
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0) vl_contab_ndc,
		CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='H' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric  WHEN s.ie_tipo_segurado='T' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric   ELSE 0 END  vl_contab_dif,
		e.vl_administracao vl_contab_taxa,
		coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0) vl_contab_ajuste,
		coalesce(h.vl_taxa,0) vl_contab_taxa_adm,
		coalesce(h.vl_provisao,0) vl_provisao_taxa_adm,
		trunc(f.dt_mes_competencia,'month') dt_mes_competencia,
		e.cd_historico_ndc,
		e.cd_historico_dif,
		e.cd_historico_taxa,
		e.cd_historico_ajuste,
		h.cd_historico cd_historico_taxa_adm,
		t.nr_sequencia nr_seq_conta,
		t.nr_seq_segurado,
		t.nr_seq_protocolo,
		t.nr_seq_prestador_exec nr_seq_prestador,
		t.nr_seq_prot_conta,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_seq_material,
		f.nr_sequencia nr_seq_fatura,
		f.nr_seq_lote nr_seq_lote_fat,
		m.ie_tipo_cobranca ie_tipo_cobranca_fat,
		c.nr_sequencia nr_seq_fatura_conta,
		'PLS_FATURA_MAT' nm_tabela,
		'VL_FATURADO_NDC' nm_atributo,
		30 nr_seq_info_ctb,
		t.nr_seq_plano,
		f.nr_seq_pagador,
		f.nr_titulo nr_titulo_fat,
		l.dt_mesano_referencia dt_mesano_referencia_fat,
		f.dt_emissao,
		l.nr_sequencia nr_seq_lote_fatur,
		r.dt_emissao dt_emissao_titulo,
		f.ie_cancelamento,
		h.oid,
		(select	x.ie_status
		from	pls_conta_mat x
		where	a.nr_seq_conta_mat	= x.nr_sequencia) ie_status,
		l.dt_geracao_titulos,
		t.nr_seq_prestador nr_seq_prestador_solic,
		t.nr_seq_prestador_exec nr_seq_prestador_exec,
		(select	x.nr_seq_prestador_pgto
		from	pls_conta_medica_resumo x
		where	x.nr_seq_conta = t.nr_sequencia
		and	x.nr_sequencia = e.nr_seq_conta_resumo) nr_seq_prestador_pag,
		j.nr_seq_prestador nr_seq_prestador_atend,
		f.oid nr_id_fatura,
		l.nr_seq_regra_fat nr_seq_regra_fat
	FROM pls_conta t, pls_segurado s, pls_lote_faturamento l, pls_protocolo_conta j, pls_conta_pos_estab_contab e, pls_fatura_evento d, pls_fatura_conta c, pls_conta_pos_estabelecido a, pls_fatura f
LEFT OUTER JOIN titulo_receber r ON (f.nr_titulo = r.nr_titulo)
, pls_fatura_mat m
LEFT OUTER JOIN pls_conta_pos_taxa_contab h ON (m.nr_seq_pos_taxa_contab = h.nr_sequencia)
WHERE t.nr_sequencia 		= a.nr_seq_conta and a.nr_sequencia 		= e.nr_seq_conta_pos and s.nr_sequencia 		= t.nr_seq_segurado and a.nr_sequencia 		= m.nr_seq_conta_pos_estab and c.nr_sequencia 		= m.nr_seq_fatura_conta and d.nr_sequencia 		= c.nr_seq_fatura_evento and f.nr_sequencia 		= d.nr_seq_fatura and l.nr_sequencia 		= f.nr_seq_lote and j.nr_sequencia		= t.nr_seq_protocolo and coalesce(f.ie_impedimento_cobranca,'X') not in ('NF','BP')   and coalesce(f.nr_seq_cancel_fat::text, '') = '' and coalesce(f.nr_lote_contabil,0)	= 0 and (((ie_data_rec_faturamento_w	= 'TI' -- Emissao do titulo
	and 	coalesce(f.ie_cancelamento,'C')	<> 'E'
	and (r.dt_emissao between dt_inicial_w and dt_final_w
	or (coalesce(f.nr_titulo,0)	= 0
	and	f.ie_cancelamento 	= 'C'
	and	coalesce(l.dt_geracao_titulos,f.dt_mes_competencia) between dt_inicial_w and dt_final_w))) 
	or (ie_data_rec_faturamento_w	= 'EF' -- Emissao da fatura
	and	f.dt_emissao between dt_inicial_w and dt_final_w
	and	coalesce(f.ie_cancelamento,'C') = 'C') 	
	or (ie_data_rec_faturamento_w	= 'MC' -- Mes competencia
	and	f.dt_mes_competencia between dt_inicial_w and dt_final_w
	and	coalesce(f.ie_cancelamento,'C') = 'C'))
	or (f.dt_mes_competencia between dt_inicial_w and dt_final_w
	and	coalesce(f.ie_cancelamento,'C') = 'E'))  -- Estorno
  and ((qt_param_item_w	= 0)
	or (exists (	select	1
				from	lote_contabil_param_item x
				where	x.nr_lote_contabil 	= nr_lote_contabil_p
				and	x.nr_documento		= f.nr_seq_lote
				
union

				select	1
				from	lote_contabil_parametro x
				where	x.nr_lote_contabil 	= nr_lote_contabil_p
				and	f.nr_seq_lote		= x.vl_parametro))) and coalesce(a.ie_status_faturamento, 'A') <> 'A' and (e.nr_sequencia  = m.nr_seq_conta_pos_contab or coalesce(m.nr_seq_conta_pos_contab, 0) = 0);
		
type 		fetch_array is table of C01%rowtype;
s_array 	fetch_array;
i		integer := 1;
type vetor is table of fetch_array index by integer;
vetor_movimentacao_w	vetor;
	
c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_tipo_cobr_fat CURSOR FOR
	SELECT	substr(obter_desc_expressao(a.cd_exp_valor_dominio, a.ds_valor_dominio),1,255) ds_valor,
		vl_dominio
	from 	valor_dominio_v	a			
	where 	a.cd_dominio	= 4774;
					
type vetor_tipo_cobranca is table of tipo_cobranca index by integer;
vetor_tipo_cobranca_w	vetor_tipo_cobranca;

c_tipo_movimento CURSOR FOR
	SELECT	'NDR'
	
	where	ie_lote_reembolso_fat_w in ('R','A')
	and 	ie_tipo_cobranca_fat_w not in ('3','4')
	
union

	SELECT	'DIF'
	
	where (ie_lote_dif_fat_w = 'R'
	or (coalesce(ie_lote_dif_fat_w,'X') = 'X'
	and	ie_lote_ajuste_fat_w	= 'R'))
	and 	ie_tipo_cobranca_fat_w not in ('3','4')
	and	coalesce(ie_status_w,'X') <> 'M'
	
union

	select	'VTX'
	
	where	ie_lote_taxa_fat_w in ('R','A')
	and 	ie_tipo_cobranca_fat_w not in ('3','4')
	
union

	select	'VLA'
	
	where	vl_contab_ajuste_w <> 0
	and	ie_lote_ajuste_fat_w = 'R'
	and 	ie_tipo_cobranca_fat_w not in ('3','4')
	
union

	select	'VTA'
	
	where	ie_tipo_cobranca_fat_w in ('3','4');

c_lote_sem_titulo CURSOR FOR
	SELECT	distinct(l.nr_sequencia)
	from	pls_fatura 		f,
		pls_lote_faturamento	l
	where	l.nr_sequencia 		= f.nr_seq_lote
	and	f.nr_lote_contabil	= nr_lote_contabil_p
	and	coalesce(f.nr_seq_cancel_fat::text, '') = ''
	and	coalesce(f.nr_titulo::text, '') = ''
	and	coalesce(f.nr_titulo_ndc::text, '') = ''
	and	coalesce(f.ie_cancelamento,'X') not in ('C','E');
	
BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 44) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	dt_referencia,
	cd_estabelecimento,
	nr_lote_contabil,
	cd_tipo_lote_contabil
into STRICT	dt_referencia_w,
	cd_estabelecimento_w,
	nr_lote_contabil_w,
	cd_tipo_lote_contabil_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

dt_referencia_month_w		:= trunc(dt_referencia_w,'month');
dt_referencia_fm_w		:= fim_dia(fim_mes(dt_referencia_month_w));
dt_referencia_anterior_w	:= add_months(dt_referencia_month_w,-1);
dt_referencia_afm_w		:= fim_dia(fim_mes(dt_referencia_anterior_w));

dt_inicial_w		:= dt_referencia_month_w;
dt_final_w		:= fim_dia(fim_mes(dt_inicial_w));

delete	from w_pls_movimento_sem_conta
where	ie_tipo_item in ('PCM','MCM')
and	dt_referencia between dt_referencia_month_w and dt_referencia_fm_w;

select	max(a.ie_data_rec_faturamento),
	max(coalesce(a.ie_lote_ajuste_fat,'R')),
	max(coalesce(a.ie_lote_reembolso_fat,'R')),
	max(coalesce(a.ie_lote_taxa_fat,'R')),
	max(coalesce(a.ie_consiste_tit_faturamento,'N')),
	max(ie_lote_dif_fat),
	max(coalesce(ie_lote_taxa_adm,'R'))
into STRICT	ie_data_rec_faturamento_w,
	ie_lote_ajuste_fat_w,
	ie_lote_reembolso_fat_w,
	ie_lote_taxa_fat_w,
	ie_consiste_tit_faturamento_w,
	ie_lote_dif_fat_w,
	ie_lote_taxa_adm_w
from	pls_parametro_contabil	a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

select	coalesce(max(a.ie_gerar_fat_contab),'N')
into STRICT	ie_gerar_fat_contab_w
from	pls_parametro_faturamento	a
where	a.cd_estabelecimento	= cd_estabelecimento_w;

if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento
		loop
		delete	from movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	update	pls_conta_pos_estabelecido
	set	nr_lote_contab_faturamento	 = NULL,
		dt_atualizacao			= clock_timestamp(),
		nm_usuario			= nm_usuario_p
	where	nr_lote_contab_faturamento	= nr_lote_contabil_p;
	commit;
	
	update	pls_conta_pos_estab_contab
	set	nr_lote_contabil		 = NULL,
		dt_atualizacao			= clock_timestamp(),
		nm_usuario			= nm_usuario_p
	where	nr_lote_contabil		= nr_lote_contabil_p;
	commit;
	
	update	pls_fatura a
	set	a.nr_lote_contabil	= 0
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	commit;
	
	update	pls_conta_pos_taxa_contab
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	commit;
	
	update	lote_contabil
	set	vl_credito	= 0,
		vl_debito	= 0,
		dt_geracao_lote	 = NULL
	where	nr_lote_contabil	= nr_lote_contabil_p;
	commit;	
	
	ds_retorno_p := ctb_pls_contab_tributo_fat(nr_lote_contabil_p, nm_usuario_p, ie_exclusao_p, ds_retorno_p);
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);

	for reg in c_movimento_w
		loop
		delete	from w_movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
	
	select	count(*)
	into STRICT	qt_param_item_w
	from (
		SELECT	1
		from	lote_contabil_param_item
		where	nr_lote_contabil	= nr_lote_contabil_p
		
union all

		SELECT	1
		from	lote_contabil_parametro
		where	nr_lote_contabil	= nr_lote_contabil_p
		and	coalesce(vl_parametro,0) 	<> 0) alias2;
	
	if (ie_consiste_tit_faturamento_w = 'S')then
		ds_lote_sem_titulo_w	:= null;
		open c_lote_sem_titulo;
		loop
		fetch c_lote_sem_titulo into	
			nr_seq_lote_tit_w;
		EXIT WHEN NOT FOUND; /* apply on c_lote_sem_titulo */
			begin
			if (coalesce(ds_lote_sem_titulo_w::text, '') = '') then
				ds_lote_sem_titulo_w	:= nr_seq_lote_tit_w;
			else
				ds_lote_sem_titulo_w	:= ds_lote_sem_titulo_w || ' ,' || nr_seq_lote_tit_w;
			end if;
			
			end;
		end loop;
		close c_lote_sem_titulo;

		if (coalesce(ds_lote_sem_titulo_w,'X') != 'X') then
			/*Os seguintes lotes de faturamento nao possuem titulo a receber gerado:*/


			--wheb_mensagem_pck.exibir_mensagem_abort(288135, 'DS_LOTE_SEM_TITULO=' || ds_lote_sem_titulo_w);
			CALL wheb_mensagem_pck.exibir_mensagem_abort(668796, 'DS_LOTE_SEM_TITULO=' || ds_lote_sem_titulo_w);
		end if;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)), 'NR_SEQ_FATURA');
	
	/*  Paulo 29/09/2009 - OS 168594 */

	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= 'N';
	end;
	
	open c_tipo_cobr_fat;
	loop
	fetch c_tipo_cobr_fat into	
		ds_valor_w,
		vl_dominio_w;
	EXIT WHEN NOT FOUND; /* apply on c_tipo_cobr_fat */
		begin
		nr_vetor_w					:= nr_vetor_w + 1;
		
		vetor_tipo_cobranca_w[nr_vetor_w].vl_dominio	:= vl_dominio_w;
		vetor_tipo_cobranca_w[nr_vetor_w].ds_valor	:= ds_valor_w;
		end;
	end loop;
	close c_tipo_cobr_fat;
	
	nr_seq_w_movto_cont_w	:= 0;
	
	open C01;
	loop
	fetch C01 bulk collect into s_array limit 10000;
		vetor_movimentacao_w(i)	:= s_array;
		i			:= i + 1;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	for i in 1..vetor_movimentacao_w.count loop
		begin
		s_array := vetor_movimentacao_w(i);
		for z in 1..s_array.count loop
			ie_proc_mat_w			:= s_array[z].ie_proc_mat;
			nr_rowid_w			:= s_array[z].nr_rowid;
			nr_seq_item_w			:= s_array[z].nr_seq_item;			
			cd_conta_deb_ndc_w		:= s_array[z].cd_conta_deb_ndc;
			cd_conta_deb_dif_w		:= s_array[z].cd_conta_deb_dif;
			cd_conta_deb_taxa_w		:= s_array[z].cd_conta_deb_taxa;
			cd_conta_deb_taxa_adm_w		:= s_array[z].cd_conta_deb_taxa_adm;
			cd_conta_deb_ajuste_w		:= s_array[z].cd_conta_deb_ajuste;			
			cd_conta_cred_ndc_w		:= s_array[z].cd_conta_cred_ndc;
			cd_conta_cred_dif_w		:= s_array[z].cd_conta_cred_dif;
			cd_conta_cred_taxa_w		:= s_array[z].cd_conta_cred_taxa;
			cd_conta_cred_taxa_adm_w	:= s_array[z].cd_conta_cred_taxa_adm;
			cd_conta_cred_ajuste_w		:= s_array[z].cd_conta_cred_ajuste;			
			vl_contab_ndc_w			:= s_array[z].vl_contab_ndc;
			vl_contab_dif_w			:= s_array[z].vl_contab_dif;
			vl_contab_taxa_w		:= s_array[z].vl_contab_taxa;
			vl_contab_ajuste_w		:= s_array[z].vl_contab_ajuste;
			vl_contab_taxa_adm_w		:= s_array[z].vl_contab_taxa_adm;
			vl_provisao_taxa_adm_w		:= s_array[z].vl_provisao_taxa_adm;
			dt_referencia_fatura_w		:= s_array[z].dt_mes_competencia;
			cd_historico_ndc_w		:= s_array[z].cd_historico_ndc;
			cd_historico_dif_w		:= s_array[z].cd_historico_dif;
			cd_historico_taxa_w		:= s_array[z].cd_historico_taxa;
			cd_historico_ajuste_w		:= s_array[z].cd_historico_ajuste;
			cd_historico_taxa_adm_w		:= s_array[z].cd_historico_taxa_adm;
			nr_seq_conta_w			:= s_array[z].nr_seq_conta;
			nr_seq_segurado_w		:= s_array[z].nr_seq_segurado;
			nr_seq_protocolo_w		:= s_array[z].nr_seq_protocolo;
			nr_seq_prestador_w		:= s_array[z].nr_seq_prestador;
			nr_seq_prot_conta_w		:= s_array[z].nr_seq_prot_conta;
			cd_procedimento_w		:= s_array[z].cd_procedimento;
			ie_origem_proced_w		:= s_array[z].ie_origem_proced;
			nr_seq_material_w		:= s_array[z].nr_seq_material;
			nr_seq_fatura_w			:= s_array[z].nr_seq_fatura;
			nr_seq_lote_fat_w		:= s_array[z].nr_seq_lote_fat;
			ie_tipo_cobranca_fat_w		:= s_array[z].ie_tipo_cobranca_fat;
			nr_seq_fatura_conta_w		:= s_array[z].nr_seq_fatura_conta;
			nm_tabela_w			:= s_array[z].nm_tabela;
			nm_atributo_w			:= s_array[z].nm_atributo;
			nr_seq_info_ctb_w		:= s_array[z].nr_seq_info_ctb;
			nr_seq_plano_w			:= s_array[z].nr_seq_plano;
			nr_seq_pagador_w		:= s_array[z].nr_seq_pagador;
			nr_titulo_fat_w			:= s_array[z].nr_titulo_fat;
			dt_mesano_referencia_fat_w	:= s_array[z].dt_mesano_referencia_fat;
			dt_emissao_w			:= s_array[z].dt_emissao;
			nr_seq_lote_fatur_w		:= s_array[z].nr_seq_lote_fatur;
			dt_emissao_titulo_w		:= s_array[z].dt_emissao_titulo;
			ie_cancelamento_w		:= s_array[z].ie_cancelamento;
			nr_rowid_tx_w			:= s_array[z].nr_rowid_tx;
			ie_status_w			:= s_array[z].ie_status;
			dt_geracao_titulos_w		:= s_array[z].dt_geracao_titulos;
			nr_id_fatura_w			:= s_array[z].nr_id_fatura;
			nr_seq_prestador_pag_w		:= s_array[z].nr_seq_prestador_pag;
			nr_seq_prestador_exec_w		:= s_array[z].nr_seq_prestador_exec;
			nr_seq_prestador_solic_w	:= s_array[z].nr_seq_prestador_solic;
			nr_seq_prestador_atend_w	:= s_array[z].nr_seq_prestador_atend;
			nr_seq_regra_fat_w		:= s_array[z].nr_seq_regra_fat;
			
			begin
			cd_centro_custo_deb_w	:= null;
			cd_centro_custo_cred_w	:= null;
			ds_compl_historico_w	:= null;
			dt_contabil_w		:= dt_referencia_fatura_w;
			
			if (coalesce(nr_seq_protocolo_w,0) > 0) then
				select	dt_mes_competencia
				into STRICT	dt_mes_competencia_w
				from	pls_protocolo_conta
				where	nr_sequencia = nr_seq_protocolo_w;
			end if;
					
			if (ie_data_rec_faturamento_w = 'MC') then
				dt_contabil_w	:= dt_referencia_fatura_w;
			elsif (ie_data_rec_faturamento_w = 'EF') then
				dt_contabil_w	:= dt_emissao_w;
			elsif (ie_data_rec_faturamento_w = 'TI') then
				dt_contabil_w	:= dt_emissao_titulo_w;
				if (coalesce(nr_titulo_fat_w,0) = 0) and (ie_cancelamento_w = 'C') then
					dt_contabil_w	:= coalesce(dt_geracao_titulos_w,dt_referencia_fatura_w);
				end if;
			end if;
			
			if (ie_cancelamento_w = 'E') then
				dt_contabil_w	:= dt_referencia_fatura_w;
			end if;
			
			if (coalesce(nr_seq_plano_w::text, '') = '') then
				begin
				select	b.ie_regulamentacao,
					b.nr_sequencia
				into STRICT	ie_regulamentacao_w,
					nr_seq_plano_w
				from	pls_segurado	a,
					pls_plano	b
				where	b.nr_sequencia	= a.nr_seq_plano
				and	a.nr_sequencia	= nr_seq_segurado_w;
				exception
				when others then
					ie_regulamentacao_w	:= null;
					nr_seq_plano_w		:= null;
				end;
			else
				begin
				select	b.ie_regulamentacao
				into STRICT	ie_regulamentacao_w
				from	pls_plano	b
				where	b.nr_sequencia	= nr_seq_plano_w;
				exception
				when others then
					ie_regulamentacao_w	:= null;
				end;
			end if;
			
			open c_tipo_movimento;
			loop
			fetch c_tipo_movimento into
				ie_movimento_w;
			EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
				begin
				cd_centro_custo_deb_w	:= null;
				cd_centro_custo_cred_w	:= null;
				ds_compl_historico_w	:= null;
				ds_item_w		:= null;
				nr_titulo_fat_taxa_w	:= null;
				
				if (ie_movimento_w = 'NDR') then
					cd_conta_debito_w	:= cd_conta_deb_ndc_w;
					cd_conta_credito_w	:= cd_conta_cred_ndc_w;
					cd_historico_w		:= cd_historico_ndc_w;
					vl_contabil_w		:= vl_contab_ndc_w;
					nm_atributo_w		:= 'VL_FATURADO_NDC';
					
				elsif (ie_movimento_w = 'DIF') then
					cd_conta_debito_w	:= cd_conta_deb_dif_w;
					cd_conta_credito_w	:= cd_conta_cred_dif_w;
					cd_historico_w		:= cd_historico_dif_w;
					vl_contabil_w		:= vl_contab_dif_w;
					nm_atributo_w		:= 'VL_FATURADO_DIF';
					
				elsif (ie_movimento_w = 'VTX') then
					cd_conta_debito_w	:= cd_conta_deb_taxa_w;
					cd_conta_credito_w	:= cd_conta_cred_taxa_w;
					cd_historico_w		:= cd_historico_taxa_w;
					vl_contabil_w		:= vl_contab_taxa_w;
					nm_atributo_w		:= 'VL_TAXA';

					select	coalesce(max(ie_div_fat_taxa), 'N')
					into STRICT	ie_div_fat_taxa_w
					from	pls_regra_faturamento
					where	nr_sequencia = nr_seq_regra_fat_w;

					if (ie_div_fat_taxa_w = 'S') then
						
						-- Tratamento criado para a divisao da fatura, criando uma fatura especifica para a taxa, que tera outro titulo gerado
						select 	coalesce(max(nr_sequencia), 0)
						into STRICT 	nr_seq_fat_nova_w
						from 	pls_fatura
						where 	nr_seq_fat_divisao 	= nr_seq_fatura_w
						and	nr_seq_lote 		= nr_seq_lote_fatur_w
						and	ie_fatura_taxa 		= 'S';
						
						if (nr_seq_fat_nova_w <> 0) then
							select 	coalesce(nr_titulo, 0)
							into STRICT 	nr_titulo_fat_taxa_w
							from 	pls_fatura
							where	nr_sequencia = nr_seq_fat_nova_w;
						end if;
					end if;
					
				elsif (ie_movimento_w = 'VLA') then
					cd_conta_debito_w	:= cd_conta_deb_ajuste_w;
					cd_conta_credito_w	:= cd_conta_cred_ajuste_w;
					cd_historico_w		:= cd_historico_ajuste_w;
					vl_contabil_w		:= vl_contab_ajuste_w;
					nm_atributo_w		:= 'VL_AJUSTE';
					
				elsif (ie_movimento_w = 'VTA') then
					cd_conta_debito_w	:= cd_conta_deb_taxa_adm_w;
					cd_conta_credito_w	:= cd_conta_cred_taxa_adm_w;
					cd_historico_w		:= cd_historico_taxa_adm_w;
					
					if (ie_lote_taxa_adm_w = 'P') then
						vl_contabil_w		:= vl_contab_taxa_adm_w - vl_provisao_taxa_adm_w;
						nm_atributo_w		:= 'VL_AJUSTE_TAXA_ADM';
					else
						vl_contabil_w		:= vl_contab_taxa_adm_w;
						nm_atributo_w		:= 'VL_TAXA_ADM';
					end if;
				end if;
				
				if (ie_cancelamento_w = 'E') then
					vl_contabil_w := vl_contabil_w * (-1);
				end if;
				
				if (coalesce(cd_conta_debito_w::text, '') = '') or (coalesce(cd_conta_credito_w::text, '') = '') then
					
					if (ie_proc_mat_w	= 'P') then
						ie_tipo_item_w	:= 'PCM';
						ds_item_w	:= substr(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,255);
					else
						ie_tipo_item_w	:= 'MCM';
						ds_item_w	:= substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',nr_seq_material_w),1,255);
					end if;
					
					if (coalesce(cd_conta_debito_w::text, '') = '') then
						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao)
						values (nextval('w_pls_movimento_sem_conta_seq'),
							nr_seq_item_w,
							ds_item_w,
							ie_tipo_item_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_contabil_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							ie_proc_mat_w,
							'D',
							--'Provisao de producao medica'
							wheb_mensagem_pck.get_texto(299166));
					end if;
					
					if (coalesce(cd_conta_credito_w::text, '') = '') then
						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao)
						values (nextval('w_pls_movimento_sem_conta_seq'),
							nr_seq_item_w,
							ds_item_w,
							ie_tipo_item_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_contabil_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							ie_proc_mat_w,
							'C',
							--'Provisao de producao medica'
							wheb_mensagem_pck.get_texto(299166));						
					end if;
				end if;
				
				if (cd_conta_debito_w IS NOT NULL AND cd_conta_debito_w::text <> '') or (cd_conta_credito_w IS NOT NULL AND cd_conta_credito_w::text <> '') then
					
					if (nm_agrupador_w = 'NR_SEQ_FATURA') then
						nr_seq_agrupamento_w	:= nr_seq_fatura_w;
					elsif (nm_agrupador_w = 'NR_SEQ_LOTE_FATUR') then
						nr_seq_agrupamento_w	:= nr_seq_lote_fatur_w;
					end if;
					
					if (ie_compl_hist_w = 'S') then
						if (coalesce(nr_seq_prestador_w,0) > 0) then
							select	a.cd_pessoa_fisica,
								a.cd_cgc
							into STRICT	cd_pessoa_fisica_w,
								cd_cgc_prestador_w
							from	pls_prestador	a
							where	a.nr_sequencia	= nr_seq_prestador_w;
							
							begin
							if (cd_cgc_prestador_w IS NOT NULL AND cd_cgc_prestador_w::text <> '') then
								select	substr(a.ds_razao_social,1,255)
								into STRICT	nm_prestador_w
								from	pessoa_juridica	a
								where	a.cd_cgc	= cd_cgc_prestador_w;
							else
								select	substr(a.nm_pessoa_fisica,1,80)
								into STRICT	nm_prestador_w
								from	pessoa_fisica	a
								where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
							end if;
							exception
							when others then
								nm_prestador_w	:= null;
							end;
							
							cd_cpf_prestador_w	:= null;
							
							if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
								select	nr_cpf
								into STRICT	cd_cpf_prestador_w
								from	pessoa_fisica
								where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
							end if;
						end if;
						
						select	max(nr_nota_fiscal)
						into STRICT	nr_nota_fiscal_w
						from	pls_prot_conta_titulo
						where	nr_sequencia	= nr_seq_prot_conta_w;
						
						if (coalesce(nr_seq_fatura_conta_w, 0) > 0) then
							nm_pagador_fat_w	:= null;
							cd_pf_pag_w		:= null;
							cd_cgc_pag_w		:= null;
							
							if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
								select	a.cd_pessoa_fisica,
									a.cd_cgc
								into STRICT	cd_pf_pag_w,
									cd_cgc_pag_w
								from	pls_contrato_pagador	a
								where	a.nr_sequencia		= nr_seq_pagador_w;
								
								begin
								if (cd_cgc_pag_w IS NOT NULL AND cd_cgc_pag_w::text <> '') then
									select	substr(a.nm_fantasia,1,80)
									into STRICT	nm_pagador_fat_w
									from	pessoa_juridica	a
									where	a.cd_cgc	= cd_cgc_pag_w;
								else
									select	substr(a.nm_pessoa_fisica,1,80)
									into STRICT	nm_pagador_fat_w
									from	pessoa_fisica	a
									where	a.cd_pessoa_fisica	= cd_pf_pag_w;
								end if;
								exception
								when others then
									nm_pagador_fat_w	:= null;
								end;
							end if;
						end if;
						
						ds_tipo_cobranca_fat_w	:= null;
						
						for w in 1..vetor_tipo_cobranca_w.count loop
							begin
							if (vetor_tipo_cobranca_w[w].vl_dominio = ie_tipo_cobranca_fat_w) then
								ds_tipo_cobranca_fat_w	:= vetor_tipo_cobranca_w[w].ds_valor;
							end if;
							end;
						end loop;
						
						begin
						select	a.nr_nota_fiscal
						into STRICT	nr_nota_fiscal_fat_w
						from	nota_fiscal	a
						where	a.nr_seq_fatura	= nr_seq_fatura_w;
						exception
						when others then
							nr_nota_fiscal_fat_w	:= null;
						end;
						
						ds_conteudo_w	:= substr(	nr_seq_prestador_w						||'#@'||
										nm_prestador_w							||'#@'||
										nr_seq_protocolo_w						||'#@'||
										nr_seq_conta_w							||'#@'||
										cd_cgc_prestador_w						||'#@'||
										cd_cpf_prestador_w						||'#@'||
										nr_nota_fiscal_w						||'#@'||
										nr_seq_lote_fat_w						||'#@'||
										dt_mesano_referencia_fat_w					||'#@'||
										ds_tipo_cobranca_fat_w						||'#@'||
										nm_pagador_fat_w						||'#@'||
										coalesce(nr_titulo_fat_taxa_w, nr_titulo_fat_w)			||'#@'||
										nr_nota_fiscal_fat_w						||'#@'||
										dt_mes_competencia_w,1,4000);
						
						begin
						ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
						exception
						when others then
							ds_compl_historico_ww	:= null;
						end;

						ds_compl_historico_w	:= substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
					end if;
					
					if (cd_conta_debito_w IS NOT NULL AND cd_conta_debito_w::text <> '') then
					
						select	ie_centro_custo,
							cd_centro_custo
						into STRICT	ie_centro_custo_deb_w,
							cd_centro_custo_fixo_deb_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_debito_w;
						
						if (ie_centro_custo_deb_w = 'S') then
							if (cd_centro_custo_fixo_deb_w IS NOT NULL AND cd_centro_custo_fixo_deb_w::text <> '') then
								cd_centro_custo_deb_w	:= cd_centro_custo_fixo_deb_w;
							else
								SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_deb_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
											null, 				--nr_seq_bonificacao_p
											null, 				--nr_seq_sca_p
											nr_seq_prestador_pag_w, nr_seq_prestador_exec_w, nr_seq_prestador_atend_w, nr_seq_prestador_solic_w, null				-- nr_seq_evento_p
											) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;
							end if;
						end if;
						
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					
						item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
						item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
						item_mov_contabil_w.cd_conta_contabil	:= cd_conta_debito_w;
						item_mov_contabil_w.ie_debito_credito	:= 'D';
						item_mov_contabil_w.cd_historico	:= cd_historico_w;
						item_mov_contabil_w.dt_movimento	:= dt_contabil_w;
						item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
						item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
						item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_deb_w;
						item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
						item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_item_w;
						item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
						item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
						item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
						
						movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
						
					end if;
					
					if (cd_conta_credito_w IS NOT NULL AND cd_conta_credito_w::text <> '') then
						select	ie_centro_custo,
							cd_centro_custo
						into STRICT	ie_centro_custo_cred_w,
							cd_centro_custo_fixo_cred_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_credito_w;
						
						if (ie_centro_custo_cred_w = 'S') then
							if (cd_centro_custo_fixo_cred_w IS NOT NULL AND cd_centro_custo_fixo_cred_w::text <> '') then
								cd_centro_custo_cred_w	:= cd_centro_custo_fixo_cred_w;
							else
								SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_cred_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
											null, 				--nr_seq_bonificacao_p
											null, 				--nr_seq_sca_p
											nr_seq_prestador_pag_w, nr_seq_prestador_exec_w, nr_seq_prestador_atend_w, nr_seq_prestador_solic_w, null				-- nr_seq_evento_p
											) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
							end if;
						end if;
						
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					
						item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
						item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
						item_mov_contabil_w.cd_conta_contabil	:= cd_conta_credito_w;
						item_mov_contabil_w.ie_debito_credito	:= 'C';
						item_mov_contabil_w.cd_historico	:= cd_historico_w;
						item_mov_contabil_w.dt_movimento	:= dt_contabil_w;
						item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
						item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
						item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_cred_w;
						item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
						item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_item_w;
						item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
						item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
						item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
						
						movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
					end if;
					
					if (movimento_contabil_w.count >= 1000) then
						begin						
						forall i in movimento_contabil_w.first .. movimento_contabil_w.last
							insert into w_movimento_contabil values movimento_contabil_w(i);
						commit;
						movimento_contabil_w.delete;
						end;
					end if;
				end if;
				end;
			end loop;
			close c_tipo_movimento;
			
			CALL wheb_usuario_pck.set_ie_lote_contabil('S');
			
			if (not pls_fatura_w.nr_id.exists(nr_seq_fatura_w)) then
				pls_fatura_w.nr_id(nr_seq_fatura_w)	:= nr_id_fatura_w;
			end if;
			
			if (pls_fatura_w.nr_id.count >= 1000) then
				begin
				forall i in indices of pls_fatura_w.nr_id
					update	pls_fatura a
					set	a.nr_lote_contabil	= nr_lote_contabil_p
					where	rowid			= pls_fatura_w.nr_id(i);
				commit;
				pls_fatura_w.nr_id.delete;
				end;
			end if;
			
			pls_conta_pos_estab_contab_w.nr_id(pls_conta_pos_estab_contab_w.nr_id.count)	:= nr_rowid_w;
			
			if (pls_conta_pos_estab_contab_w.nr_id.count >= 1000) then
				begin
				forall i in pls_conta_pos_estab_contab_w.nr_id.first .. pls_conta_pos_estab_contab_w.nr_id.last
					update	pls_conta_pos_estab_contab 	
					set	nr_lote_contabil	= nr_lote_contabil_p,
						nm_usuario		= nm_usuario_p,
						dt_atualizacao		= clock_timestamp()
					where	rowid			= pls_conta_pos_estab_contab_w.nr_id(i);
				commit;
				pls_conta_pos_estab_contab_w.nr_id.delete;
				end;
			end if;
			
			pls_conta_pos_taxa_contab_w.nr_id(pls_conta_pos_taxa_contab_w.nr_id.count)	:= nr_rowid_tx_w;
			
			if (pls_conta_pos_taxa_contab_w.nr_id.count >= 1000) then
				begin
				forall i in pls_conta_pos_taxa_contab_w.nr_id.first .. pls_conta_pos_taxa_contab_w.nr_id.last
					update	pls_conta_pos_taxa_contab 	
					set	nr_lote_contabil	= nr_lote_contabil_p
					where	rowid			= pls_conta_pos_taxa_contab_w.nr_id(i);
				commit;
				pls_conta_pos_taxa_contab_w.nr_id.delete;
				end;
			end if;
			
			CALL wheb_usuario_pck.set_ie_lote_contabil('N');
			
			end;
		end loop;
		end;
	end loop;
	
	if (movimento_contabil_w.count > 0) then
		forall i in movimento_contabil_w.first .. movimento_contabil_w.last
			insert into w_movimento_contabil values movimento_contabil_w(i);
		commit;
		movimento_contabil_w.delete;
	end if;	
		
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		
	if (pls_fatura_w.nr_id.count > 0) then
		forall i in indices of pls_fatura_w.nr_id
			update	pls_fatura a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid			= pls_fatura_w.nr_id(i);
		commit;
		pls_fatura_w.nr_id.delete;
	end if;
	
	if (pls_conta_pos_estab_contab_w.nr_id.count > 0) then
		forall i in pls_conta_pos_estab_contab_w.nr_id.first .. pls_conta_pos_estab_contab_w.nr_id.last
			update	pls_conta_pos_estab_contab
			set	nr_lote_contabil	= nr_lote_contabil_p,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	rowid			= pls_conta_pos_estab_contab_w.nr_id(i);
		commit;
		pls_conta_pos_estab_contab_w.nr_id.delete;
	end if;
	
	if (pls_conta_pos_taxa_contab_w.nr_id.count > 0) then
		forall i in pls_conta_pos_taxa_contab_w.nr_id.first .. pls_conta_pos_taxa_contab_w.nr_id.last
			update	pls_conta_pos_taxa_contab
			set	nr_lote_contabil	= nr_lote_contabil_p
			where	rowid			= pls_conta_pos_taxa_contab_w.nr_id(i);
		commit;
		pls_conta_pos_taxa_contab_w.nr_id.delete;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	ds_retorno_p := ctb_pls_contab_tributo_fat(nr_lote_contabil_p, nm_usuario_p, ie_exclusao_p, ds_retorno_p);
				
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	update	lote_contabil
	set	ie_situacao		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	if (ie_exclusao_p	= 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;
	
	commit;
else
	rollback;
end if;

				
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_faturamento ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

