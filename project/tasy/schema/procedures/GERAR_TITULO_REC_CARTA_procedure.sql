-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_rec_carta ( nr_seq_carta_p carta_compromisso.nr_sequencia%type, ie_commit_p text default 'N', cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL) AS $body$
DECLARE

	
vl_carta_w		carta_compromisso.vl_editado%type;
cd_cgc_w		carta_compromisso.cd_cgc_emitente%type;
cd_moeda_padrao_w	parametro_contas_receber.cd_moeda_padrao%type;
nr_seq_trans_fin_baixa_w	parametro_contas_receber.nr_seq_trans_fin_baixa%type;
nr_seq_trans_fin_carta_w	parametro_contas_receber.nr_seq_trans_fin_contab%type;
cd_portador_w		parametro_contas_receber.cd_portador%type;
cd_tipo_portador_w		parametro_contas_receber.cd_tipo_portador%type;
pr_juro_padrao_w			parametro_contas_receber.pr_juro_padrao%type;
pr_multa_padrao_w			parametro_contas_receber.pr_multa_padrao%type;
cd_tipo_taxa_juro_w			parametro_contas_receber.cd_tipo_taxa_juro%type;
cd_tipo_taxa_multa_w		parametro_contas_receber.cd_tipo_taxa_multa%type;
cd_estab_financeiro_w		estabelecimento.cd_estab_financeiro%type;
nr_titulo_w					titulo_receber.nr_titulo%type;
cd_condicao_pagamento_w 	pessoa_juridica_estab.cd_cond_pagto%type;
qt_vencimentos_w 			integer := 1;
ds_vencimentos_w 			varchar(2000);
dt_vencimento_w 			titulo_receber.dt_vencimento%type;
cd_conta_financ_w 			transacao_financeira.CD_CONTA_FINANC%type;


BEGIN

select	max(a.cd_moeda_padrao),
		max(a.nr_seq_trans_fin_baixa),
		max(a.nr_seq_trans_fin_carta),
		max(a.cd_portador),
		max(a.cd_tipo_portador),
		max(a.pr_juro_padrao),
		max(a.pr_multa_padrao),
		max(a.cd_tipo_taxa_juro),
		max(a.cd_tipo_taxa_multa)
into STRICT	cd_moeda_padrao_w,
		nr_seq_trans_fin_baixa_w,
		nr_seq_trans_fin_carta_w,
		cd_portador_w,
		cd_tipo_portador_w,
		pr_juro_padrao_w,
		pr_multa_padrao_w,
		cd_tipo_taxa_juro_w,
		cd_tipo_taxa_multa_w
from	parametro_contas_receber a
where	a.cd_estabelecimento = cd_estabelecimento_p;	

select	max(a.cd_estab_financeiro)
into STRICT	cd_estab_financeiro_w
from	estabelecimento a
where	a.cd_estabelecimento = cd_estabelecimento_p;

if (nr_seq_carta_p IS NOT NULL AND nr_seq_carta_p::text <> '') then
	begin
			
		select 	max(coalesce(vl_editado, vl_original)),
				max(cd_cgc_emitente)
		into STRICT	vl_carta_w,
				cd_cgc_w
		from	carta_compromisso
		where	nr_sequencia = nr_seq_carta_p;

		select 	max(cd_cond_pagto)
		into STRICT	cd_condicao_pagamento_w
		from 	pessoa_juridica_estab
		where 	cd_estabelecimento = cd_estabelecimento_p
		and		cd_cgc = cd_cgc_w;

		if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') then
			
			SELECT * FROM Calcular_Vencimento(cd_estabelecimento_p, cd_condicao_pagamento_w, clock_timestamp(), qt_vencimentos_w, ds_vencimentos_w) INTO STRICT qt_vencimentos_w, ds_vencimentos_w;
				
			if (qt_vencimentos_w = 1) then
				dt_vencimento_w	:= To_Date(substr(ds_vencimentos_w,1,10),'dd/mm/yyyy');
			end if;
			
		end if;
		
		select	nextval('titulo_seq')
		into STRICT	nr_titulo_w
		;

		insert into titulo_receber(	nr_titulo,
									cd_cgc,
									dt_emissao,
									dt_vencimento,
									dt_pagamento_previsto,
									vl_titulo,
									vl_saldo_titulo,
									vl_saldo_juros,
									vl_saldo_multa,
									tx_desc_antecipacao,
									tx_juros,
									tx_multa,
									cd_tipo_taxa_juro,
									cd_tipo_taxa_multa,
									cd_moeda,
									cd_portador,
									cd_tipo_portador,
									nr_seq_carta,		
									ie_origem_titulo,
									ie_situacao,
									ie_tipo_emissao_titulo,
									ie_tipo_titulo,
									ie_tipo_inclusao,
									nr_seq_trans_fin_contab,
									nr_seq_trans_fin_baixa,
									ds_observacao_titulo,
									cd_estabelecimento,
									cd_estab_financeiro,
									dt_atualizacao,
									nm_usuario) 
							values (	nr_titulo_w,
									cd_cgc_w,
									clock_timestamp(),
									coalesce(dt_vencimento_w, clock_timestamp() + interval '30 days'),
									coalesce(dt_vencimento_w, clock_timestamp() + interval '30 days'),
									vl_carta_w,
									vl_carta_w,
									0, --Saldo de juros padrão 0, pois o título está sendo gerado na data atual, sysdate
									0, --Saldo de multa padrão 0, pois o título está sendo gerado na data atual, sysdate
									0, --Taxa desconto antecipação não se aplica ao processo de cartas
									coalesce(pr_juro_padrao_w, 0),
									coalesce(pr_multa_padrao_w, 0),
									cd_tipo_taxa_juro_w,
									cd_tipo_taxa_multa_w,
									cd_moeda_padrao_w,
									cd_portador_w,
									cd_tipo_portador_w,
									nr_seq_carta_p,					
									'9', --IE_ORIGEM_TITULO: Outros (dominio 709)
									'1', --IE_SITUACAO: aberto
									'1', --IE_TIPO_EMISSAO_TITULO: sin emisión de boleto bancario (dominio 702)
									'16', --IE_TIPO_TITULO: "Outros" (dominio 712)
									'2', --IE_TIPO_INCLUSAO: Automática
									nr_seq_trans_fin_carta_w,
									nr_seq_trans_fin_baixa_w,
									expressao_pck.obter_desc_expressao(948270) || ' ' || nr_seq_carta_p, --Título a receber gerado automaticamente para a carta de compromisso de pagamento NR_SEQ_CARTA
									cd_estabelecimento_p,
									coalesce(cd_estab_financeiro_w, cd_estabelecimento_p),
									clock_timestamp(),
									nm_usuario_p);
		
		select	max(cd_conta_financ)
		into STRICT	cd_conta_financ_w
		from	transacao_financeira
		where	nr_sequencia = nr_seq_trans_fin_carta_w;
		
		CALL inserir_classif_tit_rec(nr_titulo_w, cd_conta_financ_w, null, null, null, vl_carta_w, nm_usuario_p);
							
		update	carta_compromisso
		set		nr_titulo_gerado = nr_titulo_w 
		where	nr_sequencia = nr_seq_carta_p;
		
	end;
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;										
		
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_rec_carta ( nr_seq_carta_p carta_compromisso.nr_sequencia%type, ie_commit_p text default 'N', cd_estabelecimento_p estabelecimento.cd_estabelecimento%type DEFAULT NULL, nm_usuario_p usuario.nm_usuario%type DEFAULT NULL) FROM PUBLIC;

