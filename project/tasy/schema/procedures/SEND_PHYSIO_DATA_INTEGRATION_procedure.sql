-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE send_physio_data_integration (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_sequencia_p bigint, dt_sinal_vital_p timestamp, qt_pa_sistolica_p bigint, qt_pa_diastolica_p bigint, qt_freq_cardiaca_p bigint, qt_temp_p bigint, dt_atualizacao_p timestamp ) AS $body$
DECLARE

				
patient_id_w 				atendimento_sinal_vital.cd_pessoa_fisica%type;
id_w						atendimento_sinal_vital.nr_sequencia%type;
exam_code_w					varchar(40);
exam_date_w					varchar(40);
exame_date_request_w		varchar(40);
exam_value_w				varchar(50);
unit_of_measure_w			varchar(50);
aux_exam_code_w				varchar(500);
aux_exam_value_w			varchar(500);
aux_unit_of_measure_w		varchar(500);
separator_w					varchar(1) := '@';
ds_integracao_w				text;
updatetimestamp_w			varchar(40);
nr_atendimento_w			prescr_medica.nr_atendimento%type;
nm_user_w					atendimento_sinal_vital.nm_usuario%type;
establishment_id_w   smallint;

c01 CURSOR FOR		
SELECT 	cd_pessoa_fisica_p PATIENTID,
		to_char(dt_sinal_vital_p ,'yyyymmddhh24miss') EXAM_DATE, -- Data do sinal vital
		to_char(dt_sinal_vital_p ,'yyyymmddhh24miss') requestedDateTime,
		nr_sequencia_p ID,
		obter_conversao_externa(null,'ATENDIMENTO_SINAL_VITAL','EXAM_CODE1', 'QT_FREQ_RESP') EXAM_CODE ,
        (qt_pa_sistolica_p||'/'||qt_pa_diastolica_p) EXAM_VALUE,
        obter_conversao_externa(null,'ATENDIMENTO_SINAL_VITAL','UNIT_OF_MEASURE', 1) UNIT_OF_MEASURE

where (qt_pa_sistolica_p IS NOT NULL AND qt_pa_sistolica_p::text <> '')
and (qt_pa_diastolica_p IS NOT NULL AND qt_pa_diastolica_p::text <> '')

union all

SELECT 	cd_pessoa_fisica_p PATIENTID,
		to_char(dt_sinal_vital_p ,'yyyymmddhh24miss') EXAM_DATE, -- Data do sinal vital
		to_char(dt_sinal_vital_p ,'yyyymmddhh24miss') requestedDateTime,
		nr_sequencia_p ID,
		obter_conversao_externa(null,'ATENDIMENTO_SINAL_VITAL','EXAM_CODE2', 'QT_FREQ_CARDIACA') EXAM_CODE ,
		to_char(qt_freq_cardiaca_p) EXAM_VALUE,
		obter_conversao_externa(null,'ATENDIMENTO_SINAL_VITAL','UNIT_OF_MEASURE', 2) UNIT_OF_MEASURE

where (qt_freq_cardiaca_p IS NOT NULL AND qt_freq_cardiaca_p::text <> '')

union all

select 	cd_pessoa_fisica_p PATIENTID,
		to_char(dt_sinal_vital_p ,'yyyymmddhh24miss') EXAM_DATE, -- Data do sinal vital
		to_char(dt_sinal_vital_p ,'yyyymmddhh24miss') requestedDateTime,
		nr_sequencia_p ID,
		obter_conversao_externa(null,'ATENDIMENTO_SINAL_VITAL','EXAM_CODE3', 'QT_TEMP') EXAM_CODE ,
		to_char(qt_temp_p) EXAM_VALUE,
		chr(176)||obter_conversao_externa(null,'ATENDIMENTO_SINAL_VITAL','UNIT_OF_MEASURE', 3) UNIT_OF_MEASURE

where (qt_temp_p IS NOT NULL AND qt_temp_p::text <> '')

union all

select 	cd_pessoa_fisica_p PATIENTID,
		to_char(c.DT_LIBERACAO ,'yyyymmddhh24miss') EXAM_DATE, -- Data da escala de glasgow
		to_char(c.DT_LIBERACAO ,'yyyymmddhh24miss') requestedDateTime,
		c.nr_sequencia ID,
		'QT_GLASGOW' EXAM_CODE ,
		to_char(c.QT_GLASGOW) EXAM_VALUE,
		'Pontos (Total)' UNIT_OF_MEASURE
from  atend_escala_indice c
where (c.QT_GLASGOW IS NOT NULL AND c.QT_GLASGOW::text <> '')
and (c.DT_LIBERACAO IS NOT NULL AND c.DT_LIBERACAO::text <> '') 
and trunc(c.DT_LIBERACAO) > trunc(clock_timestamp() - interval '10 days')
and (c.QT_GLASGOW IS NOT NULL AND c.QT_GLASGOW::text <> '')
and c.nr_atendimento = nr_atendimento_p
and c.ie_situacao <> 'I'

union all

select b.cd_pessoa_fisica PATIENTID,
       to_char(elri.dt_coleta ,'yyyymmddhh24miss') EXAM_DATE,
	   to_char(b.dt_prescricao ,'yyyymmddhh24miss') requestedDateTime,
       elab.nr_seq_exame ID,
       lee.cd_exame_equip EXAM_CODE ,
       lab_obter_resultado_exame(elri.nr_seq_resultado,elri.nr_sequencia) EXAM_VALUE,
       lab_obter_unidade_medida(elab.nr_seq_unid_med) UNIT_OF_MEASURE
from prescr_procedimento a
inner join prescr_medica b on a.nr_prescricao = b.nr_prescricao
inner join lab_exame_equip lee on lee.nr_seq_exame = a.nr_seq_exame
inner join equipamento_lab el on el.cd_equipamento = lee.cd_equipamento and el.ds_sigla = obter_conversao_externa(null,'EQUIPAMENTO_LAB','DS_SIGLA', 1)
inner join exame_lab_resultado elr on elr.nr_prescricao = a.nr_prescricao
inner join exame_lab_result_item elri on elri.nr_seq_resultado = elr.nr_seq_resultado  and elri.nr_seq_prescr = a.nr_sequencia
inner join material_exame_lab mel on mel.nr_sequencia = elri.nr_seq_material
inner join exame_laboratorio elab on elab.nr_seq_exame = a.nr_seq_exame
where  a.ie_status_atend>=35
and  a.nr_prescricao = nr_prescricao_p
and  a.nr_sequencia = nr_seq_prescr_p
and  (elri.nr_seq_material IS NOT NULL AND elri.nr_seq_material::text <> '');


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
	select	max(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
else
	select 	max(nr_atendimento_p)
	into STRICT	nr_atendimento_w
	;
end if;

if (obter_setor(obter_setor_atual_paciente(nr_atendimento_w)) is not null) then

	nm_user_w := WHEB_USUARIO_PCK.GET_NM_USUARIO;
	updatetimestamp_w := to_char(dt_atualizacao_p, 'yyyymmddhh24miss');

	open c01;
	loop
	fetch c01 into
		patient_id_w,	
		exam_date_w,
		exame_date_request_w,
		id_w,
		exam_code_w,
		exam_value_w,
		unit_of_measure_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		if (coalesce(aux_exam_code_w::text, '') = '') then
			aux_exam_code_w := exam_code_w;
			aux_exam_value_w := exam_value_w;
			aux_unit_of_measure_w := unit_of_measure_w;
		else
			aux_exam_code_w := aux_exam_code_w||separator_w||exam_code_w;
			aux_exam_value_w := aux_exam_value_w||separator_w||exam_value_w;
			aux_unit_of_measure_w := aux_unit_of_measure_w||separator_w||unit_of_measure_w;
		end if;
	end;
	end loop;
	close c01;
	
	if (coalesce(patient_id_w, 0) > 0 ) and (coalesce(nr_atendimento_w, 0) > 0) then

    select
      obter_estabelecimento_setor(obter_setor_atual_paciente(nr_atendimento_w))
    into STRICT
      establishment_id_w
;
	
		SELECT BIFROST.SEND_INTEGRATION( 'patientinformation.physiologicalData',
									'com.philips.tasy.integration.atepac.patientinformation.physiologicaldata.PhysiologicalData',
									'{ "patientId" : "' ||patient_id_w || '",'
									||'"visitId" : "' ||nr_atendimento_w || '",'
                  ||'"establishmentId" : "'||establishment_id_w||'",'
									||'"iD" : "' ||id_w || '",'
									||'"requestedDateTime" : "' || exame_date_request_w ||'",'
									||'"examCode" : "' || aux_exam_code_w ||'" ,'
									||'"examValue" : "' || aux_exam_value_w ||'" ,'
									||'"unitMeasure" : "' || aux_unit_of_measure_w ||'" ,'
									||'"collectionDate" : "' || exam_date_w ||'" ,'
									||'"updateTimeStamp" : "' || updatetimestamp_w ||'"'
									||'}',
									nm_user_w)
		INTO STRICT DS_INTEGRACAO_W
		;
	
	end if;
	
	
end if;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE send_physio_data_integration (nr_prescricao_p bigint, nr_seq_prescr_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nr_sequencia_p bigint, dt_sinal_vital_p timestamp, qt_pa_sistolica_p bigint, qt_pa_diastolica_p bigint, qt_freq_cardiaca_p bigint, qt_temp_p bigint, dt_atualizacao_p timestamp ) FROM PUBLIC;

