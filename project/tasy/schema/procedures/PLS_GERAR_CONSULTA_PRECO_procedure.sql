-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_consulta_preco ( cd_estabelecimento_p bigint, nr_seq_prestador_p bigint, nr_seq_material_p bigint, dt_vigencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_item_p bigint, nm_usuario_p text, nr_seq_categoria_p bigint, nr_seq_tipo_acomodacao_p bigint, nr_seq_tipo_atendimento_p bigint, nr_seq_clinica_p bigint, ie_tipo_conta_p bigint, ie_todos_prestadores_p text, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_contratacao_p text, nr_seq_outorgante_p bigint, ie_tipo_class_prest_p bigint, nr_seq_plano_p bigint, ie_liberados_prestador_p text, ie_tipo_beneficiario_p text, ie_tipo_guia_p pls_conta.ie_tipo_guia%type default null, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) AS $body$
DECLARE

				
_ora2pg_r RECORD;
/* IE_TIPO_ITEM_P
	1 - procedimento
	2 - material
	3 - servico
	4 - Pacotes
*/
nr_seq_categoria_w		bigint;
nr_seq_clinica_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_tipo_atendimento_w	bigint;
cd_edicao_amb_w			integer;
cd_edicao_w			integer;
vl_procedimento_w		double precision;
vl_custo_operacional_w		double precision;
vl_anestesista_w		double precision;
vl_medico_w			double precision;
vl_filme_w			double precision;
vl_auxiliares_w			double precision;
ie_origem_proced_w		bigint;
nr_seq_regra_w			bigint;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
qt_registros_w			bigint	:= 0;
dt_inicio_vigencia_w		timestamp;
ie_insere_reg_w			varchar(1);
vl_material_w			double precision;
dt_ult_vigencia_w		timestamp;
vl_material_simpro_w		double precision;
vl_material_brasindice_w	double precision;
vl_material_tabela_w		double precision;
ie_origem_preco_w		smallint := 0;
cd_unidade_medida_consumo_w	varchar(30);
ie_tipo_tabela_w		smallint;
cd_tabela_servico_w		smallint;
ie_tipo_despesa_w		varchar(2);
nr_seq_material_preco_w		bigint;
ie_origem_w			smallint;
ie_valor_informado_w		varchar(1)	:= 'N';
ie_tipo_conta_w			varchar(10);
nr_seq_prestador_w		bigint;
cd_porte_anestesico_w		varchar(10);
ds_retorno_w			varchar(255);
nr_seq_classif_prestador_w	bigint;
nr_aux_regra_w			bigint;
ie_tipo_vinculo_w		varchar(10);
nr_seq_classificacao_w		bigint;
nr_seq_regra_autogerado_w	bigint;
dt_procedimento_w		timestamp	:= null;
cd_moeda_autogerado_w		smallint;
vl_ch_honorarios_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_oper_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_filme_w		cotacao_moeda.vl_cotacao%type;
vl_ch_anestesista_w		cotacao_moeda.vl_cotacao%type;
dados_regra_preco_proc_w	pls_cta_valorizacao_pck.dados_regra_preco_proc;
dados_regra_preco_servico_w	pls_cta_valorizacao_pck.dados_regra_preco_servico;
dados_regra_preco_material_w	pls_cta_valorizacao_pck.dados_regra_preco_material;
NR_SEQ_PACOTE_W			pls_pacote.nr_sequencia%type;
nr_seq_regra_pacote_w		pls_pacote_tipo_acomodacao.nr_sequencia%type;
cd_proc_pacote_w		procedimento.cd_procedimento%type;
ie_origem_pacote_w		procedimento.ie_origem_proced%type;
ie_liberar_w			varchar(1) := 'N';

C00 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_prestador
	where	((nr_sequencia = nr_seq_prestador_p) or (ie_todos_prestadores_p = 'S'))
	and	cd_estabelecimento = cd_estabelecimento_p
	and	ie_tipo_conta_w	= 'P'
	
union

	SELECT	null
	
	where	ie_tipo_conta_w	in ('R','CO','I','O');

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_categoria
	where	((nr_sequencia = nr_seq_categoria_p) or (coalesce(nr_seq_categoria_p,0) = 0))
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_situacao	= 'A';	

C03 CURSOR FOR
	SELECT	1  -- brasindice
	
	
union

	SELECT	2  -- simpro
	
	
union

	select	3  -- tabela
	
	order by 1;	


BEGIN

CALL exec_sql_dinamico(nm_usuario_p,'truncate table pls_w_consulta_preco');

if (ie_tipo_conta_p	= 0) then
	ie_tipo_conta_w		:= 'P';
elsif (ie_tipo_conta_p	= 1) then
	ie_tipo_conta_w		:= 'R';
elsif (ie_tipo_conta_p	= 2) then
	ie_tipo_conta_w		:= 'CO';
elsif (ie_tipo_conta_p	= 3) then
	ie_tipo_conta_w		:= 'I';
elsif (ie_tipo_conta_p	= 4) then
	ie_tipo_conta_w		:= 'O';
end if;

open C00;
loop
fetch C00 into	
	nr_seq_prestador_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
	begin	
	
	if (coalesce(ie_tipo_class_prest_p,0) = 0) then
		begin
		select	ie_tipo_vinculo,
			nr_seq_classificacao
		into STRICT	ie_tipo_vinculo_w,
			nr_seq_classificacao_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
		exception
		when others then
			ie_tipo_vinculo_w	:= null;
			nr_seq_classificacao_w	:= null;
		end;
	else
		select	max(ie_tipo_vinculo)
		into STRICT	ie_tipo_vinculo_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w;
		nr_seq_classificacao_w := ie_tipo_class_prest_p;
	end if;
	
	if (ie_tipo_item_p = 1) then
		ie_origem_proced_w	:= ie_origem_proced_p;

		/* Obter estrutura do procedimento */

		SELECT * FROM pls_obter_estrut_proc(cd_procedimento_p, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_w;
			
		open C01;
		loop
		fetch C01 into	
			nr_seq_categoria_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			dados_regra_preco_proc_w := pls_define_preco_proc(cd_estabelecimento_p, nr_seq_prestador_w, nr_seq_categoria_w, dt_vigencia_p, null, cd_procedimento_p, ie_origem_w, nr_seq_tipo_acomodacao_p, nr_seq_tipo_atendimento_p, nr_seq_clinica_p, nr_seq_plano_p, ie_tipo_conta_w, 0, nr_seq_outorgante_p, null, 'N', cd_convenio_p, cd_categoria_p, ie_tipo_contratacao_p, '', '', '', '', ie_tipo_class_prest_p, '', 'S', '', ie_tipo_guia_p, 'A', 'X', null, null, dt_procedimento_w, null, null, null, null, null, dados_regra_preco_proc_w, ie_tipo_beneficiario_p, null, ie_regime_atendimento_p, null, ie_saude_ocupacional_p);
				
				vl_procedimento_w		:= dados_regra_preco_proc_w.vl_procedimento;
				vl_custo_operacional_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
				vl_anestesista_w		:= dados_regra_preco_proc_w.vl_anestesista;
				vl_medico_w			:= dados_regra_preco_proc_w.vl_medico;
				vl_filme_w			:= dados_regra_preco_proc_w.vl_filme;
				vl_auxiliares_w			:= dados_regra_preco_proc_w.vl_auxiliares;
				nr_seq_regra_w			:= dados_regra_preco_proc_w.nr_sequencia;
				cd_edicao_amb_w			:= dados_regra_preco_proc_w.cd_edicao_amb;
				cd_porte_anestesico_w		:= dados_regra_preco_proc_w.cd_porte_anestesico;
				nr_aux_regra_w			:= dados_regra_preco_proc_w.nr_auxiliares;
				nr_seq_regra_autogerado_w	:= dados_regra_preco_proc_w.nr_seq_regra_autogerado;
				cd_moeda_autogerado_w		:= dados_regra_preco_proc_w.cd_moeda_autogerado;
				vl_ch_honorarios_w		:= dados_regra_preco_proc_w.vl_ch_honorarios;
				vl_ch_custo_oper_w		:= dados_regra_preco_proc_w.vl_ch_custo_oper;
				vl_ch_custo_filme_w		:= dados_regra_preco_proc_w.vl_ch_custo_filme;
				vl_ch_anestesista_w		:= dados_regra_preco_proc_w.vl_ch_anestesista;
				
				begin
					select	nr_seq_classificacao
					into STRICT	nr_seq_classif_prestador_w
					from	pls_regra_preco_proc
					where	nr_sequencia = nr_seq_regra_w;
				exception
				when others then
					nr_seq_classif_prestador_w := null;
				end;
				
				ie_liberar_w :=		pls_obter_se_proc_prestador(	nr_seq_prestador_p, -- No caso da consulta de preco so tenho um prestador para passar para os dois parametros 
											nr_seq_prestador_p,
											cd_procedimento_p,
											ie_origem_proced_w,
											null,
											clock_timestamp(),
											null,  -- Passando esses campos null, pois nao tem como obter essas informacoes aqui na consulta de precos
											null,
											null,
											null,
											null,
											'CM');
				
				if	((ie_liberados_prestador_p = 'N') or (ie_liberados_prestador_p = 'S' AND ie_liberar_w = 'S') ) then
					
					if (nr_seq_regra_w	> 0) then
						insert into pls_w_consulta_preco(nr_sequencia, dt_atualizacao, nm_usuario,
							nr_seq_prestador, nr_seq_plano, nr_seq_categoria,
							nr_seq_clinica, nr_seq_tipo_acomodacao, nr_seq_tipo_atendimento,
							cd_edicao_amb, vl_procedimento, vl_custo_operacional,
							vl_anestesista, vl_medico, vl_materiais,
							vl_auxiliares, cd_procedimento, ie_origem_proced,
							nr_seq_regra, cd_estabelecimento, ie_tipo_tabela,
							ie_tipo_item, nr_seq_classif_prestador, ie_regime_atendimento, 
							ie_saude_ocupacional)
						values (nextval('pls_w_consulta_preco_seq'), clock_timestamp(), nm_usuario_p,
							nr_seq_prestador_w, nr_seq_plano_p, nr_seq_categoria_w,
							nr_seq_clinica_p, nr_seq_tipo_acomodacao_p, nr_seq_tipo_atendimento_p,
							cd_edicao_w, vl_procedimento_w, vl_custo_operacional_w,
							vl_anestesista_w, vl_medico_w, vl_filme_w,
							vl_auxiliares_w, cd_procedimento_p, ie_origem_w,
							nr_seq_regra_w, cd_estabelecimento_p, ie_tipo_conta_w,
							'P', nr_seq_classif_prestador_w, ie_regime_atendimento_p,
							ie_saude_ocupacional_p);
					end if;	
				end if;
			end;
		end loop;
		close C01;
	elsif (ie_tipo_item_p = 2) then
		
		open c03;
		loop
		fetch c03 into	
			ie_tipo_tabela_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			
			ie_insere_reg_w	:= 'S';
			if (ie_origem_preco_w = 3) then
				ie_insere_reg_w	:= 'N';
			end if;

			begin
			select 	cd_unidade_medida,
				ie_tipo_despesa
			into STRICT	cd_unidade_medida_consumo_w,
				ie_tipo_despesa_w
			from 	pls_material
			where	nr_sequencia	= nr_seq_material_p;
			exception
				when others then
				ie_tipo_despesa_w	:= '1';
			end;

			if (ie_tipo_despesa_w = '1') then
				ie_origem_w	:= 5;
			elsif (ie_tipo_despesa_w = '2') then
				ie_origem_w	:= 12;
			else
				ie_origem_w	:= 95;
			end if;
			
			SELECT * FROM pls_define_preco_material(cd_estabelecimento_p, nr_seq_prestador_w, dt_vigencia_p, nr_seq_material_p, ie_tipo_tabela_w, ie_tipo_despesa_w, ie_origem_w, ie_tipo_conta_w, nr_seq_outorgante_p, '', '', nr_seq_prestador_w, '', '', '', '', '', '', '', 'S', nm_usuario_p, '', '', ie_tipo_beneficiario_p, null, null, null, null, null, null, null, null, null, null, null, null, null, null, vl_material_w, dt_ult_vigencia_w, nr_seq_material_preco_w, vl_material_simpro_w, vl_material_brasindice_w, vl_material_tabela_w, dados_regra_preco_material_w, null, ie_regime_atendimento_p, ie_saude_ocupacional_p) INTO STRICT _ora2pg_r;
 vl_material_w := _ora2pg_r.vl_material_p; dt_ult_vigencia_w := _ora2pg_r.dt_ult_vigencia_p; nr_seq_material_preco_w := _ora2pg_r.nr_seq_material_preco_p; vl_material_simpro_w := _ora2pg_r.vl_material_simpro_p; vl_material_brasindice_w := _ora2pg_r.vl_material_brasindice_p; vl_material_tabela_w := _ora2pg_r.vl_material_tabela_p; dados_regra_preco_material_w := _ora2pg_r.dados_regra_preco_material_p;
			
			nr_seq_regra_w	:= dados_regra_preco_material_w.nr_sequencia;	
			
			if (coalesce(ie_origem_preco_w,0) <> 3) then	
				if (ie_tipo_tabela_w = 1) then
					vl_material_w		:= vl_material_brasindice_w;
					ie_origem_preco_w	:= 1;
					if (coalesce(vl_material_brasindice_w::text, '') = '') or (coalesce(vl_material_brasindice_w,0) = 0) then
						ie_insere_reg_w	:= 'N';
					end if;
				elsif (ie_tipo_tabela_w = 2) then
					vl_material_w		:= vl_material_simpro_w;
					ie_origem_preco_w	:= 4;
					if (coalesce(vl_material_simpro_w::text, '') = '') or (coalesce(vl_material_simpro_w,0) = 0) then
						ie_insere_reg_w	:= 'N';
					end if;
				elsif (ie_tipo_tabela_w = 3) then
					vl_material_w		:= vl_material_tabela_w;
					ie_origem_preco_w	:= 2;
					if (coalesce(vl_material_tabela_w::text, '') = '') or (coalesce(vl_material_tabela_w,0) = 0) then
						ie_insere_reg_w	:= 'N';
					end if;
				end if;
			end if;


			if (ie_insere_reg_w	= 'S') and (nr_seq_regra_w		> 0) then
				select	count(1)
				into STRICT	qt_registros_w
				from	pls_w_consulta_preco
				where	nr_seq_regra	= nr_seq_regra_w
				and	nm_usuario	= nm_usuario_p;

				if (qt_registros_w = 0) then
						
					ie_liberar_w := pls_obter_se_mat_prestador(	nr_seq_prestador_p,
											null, 
											nr_seq_material_p,
											clock_timestamp(),
											null,
											null,
											cd_estabelecimento_p,
											null);
						
					if	((ie_liberados_prestador_p = 'N') or (ie_liberados_prestador_p = 'S' AND ie_liberar_w = 'S') ) then
						insert into pls_w_consulta_preco(nr_sequencia, dt_atualizacao, nm_usuario,
							nr_seq_prestador, nr_seq_material, vl_materiais,
							cd_unidade_medida, dt_vigencia, ie_origem_preco,
							nr_seq_regra, nr_seq_material_preco, cd_estabelecimento,
							ie_tipo_tabela, ie_tipo_item)
						values (nextval('pls_w_consulta_preco_seq'), clock_timestamp(), nm_usuario_p,
							nr_seq_prestador_w, nr_seq_material_p, vl_material_w,
							cd_unidade_medida_consumo_w, dt_ult_vigencia_w, CASE WHEN ie_origem_preco_w=0 THEN  null  ELSE ie_origem_preco_w END ,
							nr_seq_regra_w, CASE WHEN nr_seq_material_preco_w=0 THEN null  ELSE nr_seq_material_preco_w END , cd_estabelecimento_p,
							ie_tipo_conta_w, 'M');
					end if;
				end if;
			end if;
			end;
		end loop;
		close c03;
	elsif (ie_tipo_item_p = 3) then
		ie_origem_w	:= ie_origem_proced_p;
		
		/* Verificar se o procedimento e um pacote */

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_pacote_w
		from	pls_pacote
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_w
		and	ie_situacao		= 'A';
		
		ie_liberar_w :=		pls_obter_se_proc_prestador(	nr_seq_prestador_p, -- No caso da consulta de preco so tenho um prestador para passar para os dois parametros 
							nr_seq_prestador_p,
							cd_procedimento_p,
							ie_origem_proced_w,
							null,
							clock_timestamp(),
							null,  -- Passando esses campos null, pois nao tem como obter essas informacoes aqui na consulta de precos
							null,
							null,
							null,
							null,
							'CM');
		
		dados_regra_preco_servico_w := pls_define_preco_servico(cd_estabelecimento_p, nr_seq_prestador_w, dt_vigencia_p, cd_procedimento_p, ie_origem_w, ie_tipo_conta_w, null, 'N', ie_tipo_contratacao_p, nr_seq_plano_p, '', '', '', 0, nr_seq_classificacao_w, nr_seq_categoria_w, 'N', ie_tipo_vinculo_w, '', '', null, null, null, null, nr_seq_clinica_p, nr_seq_tipo_atendimento_p, nr_seq_tipo_acomodacao_p, null, null, dados_regra_preco_servico_w, ie_tipo_beneficiario_p, null, ie_regime_atendimento_p, ie_saude_ocupacional_p);
		
		
		
			nr_seq_regra_w			:= dados_regra_preco_servico_w.nr_sequencia;
			vl_procedimento_w 		:= dados_regra_preco_servico_w.vl_servico;
			cd_tabela_servico_w		:= dados_regra_preco_servico_w.cd_tabela_servico;
			dt_inicio_vigencia_w		:= dados_regra_preco_servico_w.dt_vigencia;
	
		if (nr_seq_regra_w > 0) and (vl_procedimento_w > 0) then
			
			
			if	((ie_liberados_prestador_p = 'N') or (ie_liberados_prestador_p = 'S' AND ie_liberar_w = 'S') ) then
					
					insert into pls_w_consulta_preco(nr_sequencia, dt_atualizacao, nm_usuario,
						nr_seq_prestador, cd_procedimento, vl_procedimento,
						dt_vigencia, nr_seq_regra, cd_tabela_servico,
						cd_estabelecimento, ie_tipo_tabela, ie_tipo_item,
						ie_origem_proced)
					values (nextval('pls_w_consulta_preco_seq'), clock_timestamp(), nm_usuario_p,
						nr_seq_prestador_w, cd_procedimento_p, vl_procedimento_w,
						dt_inicio_vigencia_w, nr_seq_regra_w, cd_tabela_servico_w,
						cd_estabelecimento_p, ie_tipo_conta_w, 'S',
						ie_origem_w
						);
			end if;
		end if;
		
		if (nr_seq_pacote_w IS NOT NULL AND nr_seq_pacote_w::text <> '') then
			SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_p, nr_seq_prestador_w, nr_seq_tipo_acomodacao_p, clock_timestamp(), cd_procedimento_p, ie_origem_w, 'N', nr_seq_plano_p, null, null, nm_usuario_p, '', 'A', nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_material_w, null, nr_seq_classificacao_w, null, null, 'N', 'S', null, 1) INTO STRICT nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_material_w;
						
			if	((ie_liberados_prestador_p = 'N') or (ie_liberados_prestador_p = 'S' AND ie_liberar_w = 'S') ) then
				
				if (nr_seq_regra_pacote_w	> 0) then
					insert into pls_w_consulta_preco(nr_sequencia, dt_atualizacao, nm_usuario,
						nr_seq_prestador, nr_seq_plano, nr_seq_categoria,
						nr_seq_clinica, nr_seq_tipo_acomodacao, nr_seq_tipo_atendimento,
						cd_edicao_amb, vl_procedimento, vl_custo_operacional,
						vl_anestesista, vl_medico, vl_materiais,
						vl_auxiliares, cd_procedimento, ie_origem_proced,
						nr_seq_regra, cd_estabelecimento, ie_tipo_tabela,
						ie_tipo_item, nr_seq_classif_prestador, ie_regime_atendimento, 
						ie_saude_ocupacional)
					values (nextval('pls_w_consulta_preco_seq'), clock_timestamp(), nm_usuario_p,
						nr_seq_prestador_w, nr_seq_plano_p, nr_seq_categoria_w,
						nr_seq_clinica_p, nr_seq_tipo_acomodacao_p, nr_seq_tipo_atendimento_p,
						cd_edicao_w, vl_procedimento_w, vl_custo_operacional_w,
						vl_anestesista_w, vl_medico_w, vl_filme_w,
						vl_auxiliares_w, cd_procedimento_p, ie_origem_w,
						nr_seq_regra_pacote_w, cd_estabelecimento_p, ie_tipo_conta_w,
						'P', nr_seq_classif_prestador_w, ie_regime_atendimento_p, 
						ie_saude_ocupacional_p);
				end if;	
			end if;
		
		end if;
	elsif (ie_tipo_item_p = 4) then
		ie_origem_proced_w	:= ie_origem_proced_p;
		
		SELECT * FROM pls_define_preco_pacote(cd_estabelecimento_p, nr_seq_prestador_w, nr_seq_tipo_acomodacao_p, clock_timestamp(), cd_procedimento_p, ie_origem_proced_w, 'N', nr_seq_plano_p, null, null, nm_usuario_p, '', '', nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_material_w, null, nr_seq_classificacao_w, null, null, 'N', 'S', null, 1) INTO STRICT nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_procedimento_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_material_w;
				
		ie_liberar_w :=		pls_obter_se_proc_prestador(	nr_seq_prestador_p, -- No caso da consulta de preco so tenho um prestador para passar para os dois parametros 
									nr_seq_prestador_p,
									cd_procedimento_p,
									ie_origem_proced_w,
									null,
									clock_timestamp(),
									null,  -- Passando esses campos null, pois nao tem como obter essas informacoes aqui na consulta de precos
									null,
									null,
									null,
									null,
									'CM');

			if	((ie_liberados_prestador_p = 'N') or (ie_liberados_prestador_p = 'S' AND ie_liberar_w = 'S') ) then
				
				if (nr_seq_regra_pacote_w	> 0) then
					insert into pls_w_consulta_preco(nr_sequencia, dt_atualizacao, nm_usuario,
						nr_seq_prestador, nr_seq_plano, nr_seq_categoria,
						nr_seq_clinica, nr_seq_tipo_acomodacao, nr_seq_tipo_atendimento,
						cd_edicao_amb, vl_procedimento, vl_custo_operacional,
						vl_anestesista, vl_medico, vl_materiais,
						vl_auxiliares, cd_procedimento, ie_origem_proced,
						nr_seq_regra, cd_estabelecimento, ie_tipo_tabela,
						ie_tipo_item, nr_seq_classif_prestador, ie_regime_atendimento, 
						ie_saude_ocupacional)
					values (nextval('pls_w_consulta_preco_seq'), clock_timestamp(), nm_usuario_p,
						nr_seq_prestador_w, nr_seq_plano_p, nr_seq_categoria_w,
						nr_seq_clinica_p, nr_seq_tipo_acomodacao_p, nr_seq_tipo_atendimento_p,
						cd_edicao_w, vl_procedimento_w, vl_custo_operacional_w,
						vl_anestesista_w, vl_medico_w, vl_filme_w,
						vl_auxiliares_w, cd_procedimento_p, ie_origem_w,
						nr_seq_regra_pacote_w, cd_estabelecimento_p, ie_tipo_conta_w,
						'P', nr_seq_classif_prestador_w, ie_regime_atendimento_p, 
						ie_saude_ocupacional_p);
				end if;	
			end if;
	end if;
	end;
end loop;
close C00;

commit;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_consulta_preco ( cd_estabelecimento_p bigint, nr_seq_prestador_p bigint, nr_seq_material_p bigint, dt_vigencia_p timestamp, cd_procedimento_p bigint, ie_origem_proced_p bigint, ie_tipo_item_p bigint, nm_usuario_p text, nr_seq_categoria_p bigint, nr_seq_tipo_acomodacao_p bigint, nr_seq_tipo_atendimento_p bigint, nr_seq_clinica_p bigint, ie_tipo_conta_p bigint, ie_todos_prestadores_p text, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_contratacao_p text, nr_seq_outorgante_p bigint, ie_tipo_class_prest_p bigint, nr_seq_plano_p bigint, ie_liberados_prestador_p text, ie_tipo_beneficiario_p text, ie_tipo_guia_p pls_conta.ie_tipo_guia%type default null, ie_regime_atendimento_p pls_conta.ie_regime_atendimento%type default null, ie_saude_ocupacional_p pls_conta.ie_saude_ocupacional%type default null) FROM PUBLIC;

