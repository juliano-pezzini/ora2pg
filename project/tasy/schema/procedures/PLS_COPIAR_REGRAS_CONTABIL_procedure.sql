-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_regras_contabil ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_contas_w		bigint;
qt_registros_w		bigint;
cd_empresa_origem_w	bigint;
cd_empresa_destino_w	bigint;
nr_seq_ctb_imp_result_w	bigint;
cd_conta_ctb_imp_res_w	varchar(20);
cd_nova_conta_w		varchar(20);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_conta_contabil
	from	pls_ctb_imposto_resultado
	where	cd_estabelecimento	= cd_estab_origem_p;


BEGIN

select	max(cd_empresa)
into STRICT	cd_empresa_origem_w
from	estabelecimento
where	cd_estabelecimento	= cd_estab_origem_p;

select	max(cd_empresa)
into STRICT	cd_empresa_destino_w
from	estabelecimento
where	cd_estabelecimento	= cd_estab_destino_p;

if (coalesce(cd_empresa_origem_w,0) > 0) and (coalesce(cd_empresa_destino_w,0) > 0) then
	if (cd_empresa_origem_w	= cd_empresa_destino_w) then
		open C01;
		loop
		fetch C01 into
			nr_seq_ctb_imp_result_w,
			cd_conta_ctb_imp_res_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			select	count(*)
			into STRICT	qt_registros_w
			from	pls_ctb_imposto_resultado
			where	nr_seq_anterior	= nr_seq_ctb_imp_result_w;

			if (qt_registros_w	= 0) then
				insert into pls_ctb_imposto_resultado(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						cd_estabelecimento,cd_conta_contabil,ie_tipo_operacao,nr_seq_anterior)
					(SELECT	nextval('pls_ctb_imposto_resultado_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						cd_estab_destino_p, cd_conta_ctb_imp_res_w,ie_tipo_operacao,nr_seq_ctb_imp_result_w
					from	pls_ctb_imposto_resultado
					where	nr_sequencia	= nr_seq_ctb_imp_result_w);
			end if;
			end;
		end loop;
		close C01;
	elsif (cd_empresa_origem_w	<> cd_empresa_destino_w) then

		open C01;
		loop
		fetch C01 into
			nr_seq_ctb_imp_result_w,
			cd_conta_ctb_imp_res_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			select	count(*)
			into STRICT	qt_registros_w
			from	pls_ctb_imposto_resultado
			where	nr_seq_anterior		= nr_seq_ctb_imp_result_w
			and	cd_estabelecimento	= cd_estab_destino_p;

			if (qt_registros_w	= 0) then
				cd_nova_conta_w	:= cd_empresa_destino_w || '.' || cd_conta_ctb_imp_res_w;

				select	count(*)
				into STRICT	qt_contas_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_nova_conta_w;

				if (qt_contas_w = 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(262201, 'CD_NOVA_CONTA=' || cd_nova_conta_w);
					/* Mensagem: Não existe a conta contábil CD_NOVA_CONTA no plano de contas da empresa do novo estabelecimento! */

				else
					insert into pls_ctb_imposto_resultado(nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
						cd_estabelecimento,cd_conta_contabil,ie_tipo_operacao,nr_seq_anterior)
					(SELECT	nextval('pls_ctb_imposto_resultado_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
						cd_estab_destino_p, cd_nova_conta_w, ie_tipo_operacao,nr_seq_ctb_imp_result_w
					from	pls_ctb_imposto_resultado
					where	nr_sequencia	= nr_seq_ctb_imp_result_w);
				end if;
			end if;
			end;
		end loop;
		close C01;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_regras_contabil ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

