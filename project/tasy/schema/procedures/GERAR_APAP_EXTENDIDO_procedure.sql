-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE registros AS (
	nm_atributo		varchar(50),
	ds_label		varchar(60),
	nr_seq_origem		bigint,
	ds_resultado		varchar(255),
	vl_resultado		double precision,
	dt_registro		timestamp,
	ie_grupo		varchar(15),
	nr_seq_inf		bigint,
	ie_escala		varchar(15),
	dt_apap			timestamp);


CREATE OR REPLACE PROCEDURE gerar_apap_extendido ( nr_seq_apap_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_setor_atendimento_p bigint, cd_intervalo_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

type vetor is table of registros index by integer;
vt_registro_w			vetor;

nr_indice_w			integer := 0;
dt_apap_w			timestamp;

sql_errm_w			varchar(4000);

ie_tipo_grupo_w			varchar(15);
ds_grupo_w			varchar(100);
qt_dias_w			bigint;
qt_reg_2_w			bigint;

nr_seq_inf_w			bigint;
ie_origem_w			varchar(15);
ie_balanco_hidrico_w		varchar(15);
ie_controla_adep_w		varchar(1);
ds_informacao_w			varchar(100);
ie_apresenta_zero_w		varchar(1);
nr_seq_tipo_pg_w		bigint;
nr_seq_grupo_pg_w		bigint;
nr_ficha_tecnica_w		bigint;
nr_seq_gas_w			bigint;
nr_seq_soluc_evento_w		bigint;
qt_acumulado_dia_w		double precision;
dt_entrada_setor_w		timestamp;
ie_manter_nulo_w		varchar(1);
ie_informacao_w			varchar(1);

nr_prescricao_w			bigint;
ie_cursor_w			varchar(1);
ie_numerico_w			varchar(1);
qt_dose_terap_w			double precision := 0;
qt_peso_prescr_w		real;
cd_material_w			bigint;
cd_material_ww			integer;
cd_grupo_material_w		smallint;
cd_subgrupo_material_w		smallint;
cd_classe_material_w		integer;
qt_dose_w			double precision;
cd_unidade_medida_dose_w	varchar(30);
qt_solucao_w			double precision;
qt_dose_total_w			double precision;
qt_dose_interv_w		double precision;
qt_dose_medic_w			double precision;
qt_dosagem_ant_w		double precision;

ds_dosagem_w			varchar(100);
qt_hora_w			smallint;
ind				smallint;
dias_w				smallint;
ind_dia_w			smallint;
nr_hora_ant_w			smallint;
ds_dosagem_ant_w		varchar(100);
qt_gasoterapia_ant_w		double precision;
qt_dosagem_w			double precision;
nr_hora_dif_w			smallint;
nr_hora_w			smallint;
dt_alteracao_w			timestamp;
dt_customizada_w		timestamp;
dt_customizada2_w		timestamp;

nr_hora_ww			smallint;
dt_alteracao_ww			timestamp;
qt_dosagem_ww			double precision;
qt_dosagem_www			double precision;
ie_tipo_dosagem_ww		varchar(5);
ie_alteracao_w			double precision;
ie_alteracao_ww			double precision;
nr_prescricao_ww		bigint;
nr_seq_solucao_ww		integer;

nr_seq_sinal_vital_w		bigint;
dt_sinal_vital_w		timestamp;
ds_pupila_lado_w		varchar(255);
qt_altura_cm_w			double precision;
qt_bcf_w			double precision;
qt_bcf_2_w			smallint;
qt_bcf_3_w			smallint;
qt_circunf_braco_w		double precision;
qt_circunf_panturrilha_w	double precision;
ie_decubito_w			varchar(15);
ds_escala_dor_w			varchar(255);
qt_freq_cardiaca_w		double precision;
qt_freq_resp_w			double precision;
qt_glicemia_capilar_w		double precision;
ds_glic_extrapol_w		varchar(255);
ie_glic_extrapol_w		varchar(1);
qt_angulo_cabeceira_w		bigint;
qt_imc_w			real;
qt_insulina_w			double precision;
qt_irradiancia_w		real;
ds_sinal_focal_local_w		varchar(255);
qt_maec_w			double precision;
ie_membro_sat_o2_w		varchar(10);
ie_membro_pa_w			varchar(3);
qt_perimetro_abdominal_w	real;
qt_perimetro_cefalico_w		real;
qt_perimetro_toracico_w		real;
qt_pa_sistolica_w		double precision;
qt_pam_w			double precision;
qt_pa_diastolica_w		double precision;
qt_pae_w			double precision;
qt_peso_w			double precision;
qt_pressao_intra_abd_w		double precision;
qt_pressao_intra_abd_h2o_w	double precision;
qt_pressao_intra_cranio_w	double precision;
qt_escala_dor_w			double precision;
qt_ppa_w			real;
qt_ppc_w			real;
qt_pvc_h2o_w			real;
qt_pvc_w			real;
ds_pupila_reacao_luz_w		varchar(255);
ds_pupila_reacao_luz_e_w	varchar(255);
ds_pupila_alteracao_w		varchar(255);
ds_ritmo_ecg_w			varchar(255);
qt_saturacao_o2_w		double precision;
qt_superf_corporia_w		double precision;
ds_sinal_focal_w		varchar(255);
ds_sitio_w			varchar(255);
qt_segmento_st_w		double precision;
qt_o2_suplementar_w		double precision;
qt_temp_incubadora_w		double precision;
qt_tamanho_pupila_w		bigint;
qt_pupila_tam_esq_w		bigint;
qt_temp_w			real;
qt_pic_temp_w			real;
ds_aparelho_pa_w		varchar(50);
ds_lado_w			varchar(50);
ds_manguito_w			varchar(50);
ds_pressao_w			varchar(50);
ds_topografia_dor_w		varchar(60);
ie_unid_med_o2_suplem_w		varchar(10);

nr_seq_anal_bio_w		bigint;
qt_tca_w			bigint;
dt_analise_anal_bio_w		timestamp;

nr_seq_apache_w			bigint;
ie_ira_w			varchar(1);
ie_po_urgencia_w		varchar(1);
qt_temp_axilar_w		real;
qt_bicarbonato_serico_w		real;
qt_pas_w			smallint;
qt_ph_arterial_w		real;
qt_pad_w			smallint;
qt_sodio_serico_w		real;
qt_pal_media_w			real;
qt_potassio_serico_w		real;
qt_freq_card_w			real;
qt_creatinina_w			real;
qt_freq_resp_apache_w		real;
qt_hematocrito_w		real;
qt_oxigenacao_fio2_w		real;
qt_globulos_brancos_w		double precision;
qt_oxigenacao_pco2_w		real;
qt_pb_w				double precision;
qt_oxigenacao_pao2_w		real;
qt_escala_glasgow_w		real;
qt_oxigenacao_paao2_w		double precision;
ie_tipo_categoria_w		smallint;
nr_seq_cat_diag_w		bigint;
qt_pont_var_fisiologicas_w	double precision;
qt_apache_ii_w			double precision;
qt_pont_idade_w			double precision;
qt_risco_calculado_w		double precision;
qt_pont_doenca_cronica_w	double precision;
pr_risco_w			double precision;
qt_peso_cat_diag_w		double precision;
dt_apache_w			timestamp;
ie_evolucao_clinica_w		varchar(3);
ds_tipo_evolucao_w		varchar(80);
qt_glicemia_mmol_w		double precision;
qt_daily_dose_w			double precision;

ds_itens_mat_comp_w		estrutura_material_v.ds_material%type;
ds_itens_adic_w			estrutura_material_v.ds_material%type;

nr_seq_aiv_w			escala_apache_iv.nr_sequencia%type;
qt_temp_aiv_w			escala_apache_iv.qt_temp%type;
qt_na_aiv_w			escala_apache_iv.qt_na%type;
qt_pa_sist_aiv_w		escala_apache_iv.qt_pa_sist%type;
qt_glicose_aiv_w		escala_apache_iv.qt_glicose%type;
qt_pa_diast_aiv_w		escala_apache_iv.qt_pa_diast%type;
qt_creatinina_aiv_w		escala_apache_iv.qt_creatinina%type;
qt_fc_aiv_w			escala_apache_iv.qt_fc%type;
qt_ureia_aiv_w			escala_apache_iv.qt_ureia%type;
qt_freq_resp_aiv_w		escala_apache_iv.qt_freq_resp%type;
qt_diurese_aiv_w		escala_apache_iv.qt_diurese%type;
qt_altitude_aiv_w		escala_apache_iv.qt_altitude%type;
qt_albumina_aiv_w		escala_apache_iv.qt_albumina%type;
qt_fio2_aiv_w			escala_apache_iv.qt_fio2%type;
qt_bilirrubina_aiv_w		escala_apache_iv.qt_bilirrubina%type;
qt_ph_aiv_w			escala_apache_iv.qt_ph%type;
qt_glob_vermelhos_aiv_w		escala_apache_iv.qt_glob_vermelhos%type;
qt_po2_aiv_w			escala_apache_iv.qt_po2%type;
qt_glob_brancos_aiv_w		escala_apache_iv.qt_glob_brancos%type;
qt_pco2_aiv_w			escala_apache_iv.qt_pco2%type;
qt_escala_glasgow_aiv_w		escala_apache_iv.qt_escala_glasgow%type;
qt_idade_aiv_w			escala_apache_iv.qt_idade%type;
qt_dias_antes_uti_aiv_w		escala_apache_iv.qt_dias_antes_uti%type;
qt_pontuacao_aiv_w		escala_apache_iv.qt_pontuacao%type;
qt_pontos_aps_aiv_w		escala_apache_iv.qt_pontos_aps%type;
qt_pontos_logit_aiv_w		escala_apache_iv.qt_pontos_logit%type;
pr_mortalidade_aiv_w		escala_apache_iv.pr_mortalidade%type;
qt_dias_uti_aiv_w		escala_apache_iv.qt_dias_uti%type;
ie_glasgow_indis_aiv_w		escala_apache_iv.ie_glasgow_indis%type;
ie_glasgow_ocular_aiv_w		escala_apache_iv.ie_glasgow_ocular%type;
ie_glasgow_verbal_aiv_w		escala_apache_iv.ie_glasgow_verbal%type;
ie_glasgow_motora_aiv_w		escala_apache_iv.ie_glasgow_motora%type;
ie_renal_aiv_w			escala_apache_iv.ie_renal%type;
ie_cancer_metastatico_aiv_w	escala_apache_iv.ie_cancer_metastatico%type;
ie_aids_aiv_w			escala_apache_iv.ie_aids%type;
ie_leuc_mileoma_mult_aiv_w	escala_apache_iv.ie_leuc_mileoma_mult%type;
ie_hepatica_aiv_w		escala_apache_iv.ie_hepatica%type;
ie_imunosupressao_aiv_w		escala_apache_iv.ie_imunosupressao%type;
ie_linfoma_aiv_w		escala_apache_iv.ie_linfoma%type;
ie_cirrose_aiv_w		escala_apache_iv.ie_cirrose%type;
ie_origem_paciente_aiv_w	escala_apache_iv.ie_origem_paciente%type;
ie_emergencia_aiv_w		escala_apache_iv.ie_emergencia%type;
ie_readmissao_aiv_w		escala_apache_iv.ie_readmissao%type;
ie_ventilacao_aiv_w		escala_apache_iv.ie_ventilacao%type;
ie_terapia_trombo_aiv_w		escala_apache_iv.ie_terapia_trombo%type;
cd_diag_map_aiv_w		varchar(20);
ds_diagnostico_aiv_w		varchar(300);
dt_avaliacao_aiv_w		escala_apache_iv.dt_avaliacao%type;

qt_gasoterapia_w		prescr_gasoterapia_evento.qt_gasoterapia%type;
ie_evento_w			prescr_gasoterapia_evento.ie_evento%type;
nr_seq_gasoterapia_w		prescr_gasoterapia.nr_sequencia%type;
ie_unidade_medida_w		prescr_gasoterapia_evento.ie_unidade_medida%type;

nr_seq_perda_ganho_w		atendimento_perda_ganho.nr_sequencia%type;
nr_hora_bh_w			atendimento_perda_ganho.nr_hora%type;
qt_perda_bh_w			atendimento_perda_ganho.qt_volume%type;
qt_ganho_bh_w			atendimento_perda_ganho.qt_volume%type;
dt_perda_ganho_bh_w		atendimento_perda_ganho.dt_medida%type;
qt_volume_w			double precision;

nr_seq_grupo_w			bigint;
cd_estabelecimento_w		smallint;
nr_seq_apap_pac_w		bigint;
nr_seq_apap_pac_grupo_w		bigint;
nr_seq_apap_pac_informacao_w	bigint;
ie_rn_w				varchar(10);

hr_inicio_apap_w		timestamp;
ie_lib_sinal_vital_w		varchar(1);
ie_lib_ganho_perda_w	varchar(1);
vl_param_decub_w		varchar(1);
ds_unid_med_w			varchar(40);


ie_minima_w			varchar(1);
ie_maxima_w			varchar(1);
ie_media_w			varchar(1);
ie_total_w			varchar(1);
ie_grafico_w			varchar(1);
ds_info_w			varchar(255);
nr_seq_exame_w			bigint;
/*Escala AKIN */

IE_NIVEL_SERICO_AKIN_W		varchar(255);
IE_DEBITO_URINARIO_AKIN_W	varchar(255);
QT_PONTUACAO_AKIN_W		double precision;
DS_PONTUACAO_AKIN_W		varchar(255);
hr_akin_w			smallint;
nr_seq_akin_w			bigint;
dt_aval_akin_w			timestamp;

nr_seq_registro_w		bigint;
dt_registro_w			timestamp;

/*Escala Aldrete*/

qt_aldrete_w			double precision;
hr_Aldrete_w			smallint;


/*Escala Braden*/

QT_PONTO_w			double precision;
hr_braden_w			smallint;
IE_PERCEPCAO_SENSORIAL_w	varchar(255);
IE_UMIDADE_w			varchar(255);
IE_ATIVIDADE_FISICA_w		varchar(255);
IE_MOBILIDADE_w			varchar(255);
IE_NUTRICAO_w			varchar(255);
IE_FRICCAO_CISALHAMENTO_w	varchar(255);
dt_inicial_w			timestamp := trunc(dt_inicial_p);
dt_final_w			timestamp := fim_dia(dt_final_p);
ds_qt_ponto_w			varchar(255);

/*Score Flex II*/

qt_score_flex2_w			smallint;
hr_score_flex2_w			smallint;
ds_score_flex2_w		varchar(255);
nr_seq_score_flex_w bigint;


ie_glicemia_confirmada_w	varchar(1);
nr_seq_inf_adic_w		bigint;

ie_exibir_topografia_w		varchar(10);
ie_exibir_lado_w		varchar(10);
ie_lado_w 			varchar(1);
nr_seq_topografia_w		bigint;
ds_informacao_ganho_perda_w 	varchar(4000);

IE_MEMBRO_w			varchar(10);
ie_pupila_lado_w		varchar(10);

/* Solucoes (volumes previstos) */

solucao_item_nr_seq_solucao_w	prescr_solucao.nr_seq_solucao%type;
solucao_item_nr_prescricao_w	prescr_medica.nr_prescricao%type;
dt_inicial_solucao_w            timestamp := trunc(dt_inicial_p);
dt_final_solucao_w              timestamp := fim_dia(dt_final_p);

-- Cursor que busca os grupos do APAP referente ao modelo passado por parametro
C00 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo,
		a.ds_grupo,
		a.ie_manter_nulo,
		coalesce(a.ie_informacao,'S')
	from	pep_apap_grupo a
	where	a.nr_seq_apap = nr_seq_apap_p
	order by	a.nr_seq_apres;

-- Cursor que busca as informacoes do grupo passado por parametro
C01 CURSOR FOR
	SELECT	a.nr_seq_inf,
		a.ie_escala,
		a.ie_balanco_hidrico,
		coalesce(a.ie_controla_adep,'N'),
		a.ie_apresenta_zero,
		a.cd_material,
		a.nr_seq_tipo_pg,
		a.nr_seq_grupo_pg,
		a.nr_ficha_tecnica,
		a.nr_seq_gas,
		a.ie_tipo_dosagem,
		a.ie_grafico,
		a.ie_maxima,
		a.ie_minima,
		a.ie_media,
		a.ie_total,
		coalesce(DS_INFORMACAO_INST,coalesce(substr(Obter_Desc_informacao(nr_seq_inf),1,100), substr(Obter_Desc_exame(nr_seq_exame),1,100))),
		nr_seq_exame,
		a.nr_seq_inf_adic,
		a.ie_membro,
		a.ie_pupila_lado,
		a.ie_manter_nulo,
		a.cd_grupo_material,
		a.cd_subgrupo_material,
		a.cd_classe_material,
		ie_evolucao_clinica,
		nr_seq_score_flex
	from	pep_apap_inf a
	where	a.nr_seq_grupo_apap = nr_seq_grupo_w
	order by	nr_seq_apres;

-- Cursor que busca as informacoes de Sinais Vitais
C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_sinal_vital,
		substr(obter_valor_dominio(1372,a.ie_pupila_lado),1,255),
		a.qt_altura_cm,
		a.qt_bcf,
		a.qt_bcf_2,
		a.qt_bcf_3,
		a.qt_circunf_braco,
		a.qt_circunf_panturrilha,
		a.ie_decubito,
		substr(obter_valor_dominio(1298,a.cd_escala_dor),1,255),
		a.qt_freq_cardiaca,
		a.qt_freq_resp,
		a.qt_glicemia_capilar,
		substr(obter_valor_dominio(4398,a.ie_glic_extrapol),1,255),
		CASE WHEN a.ie_glic_extrapol='S' THEN '+' WHEN a.ie_glic_extrapol='E' THEN '-' END ,
		a.qt_angulo_cabeceira,
		a.qt_imc,
		a.qt_insulina,
		a.qt_irradiancia,
		substr(obter_valor_dominio(2928,a.ie_sinal_focal_local),1,255),
		a.qt_maec,
		a.ie_membro_sat_o2,
		a.ie_membro,
		a.qt_perimitro_abdominal,
		a.qt_perimetro_cefalico,
		a.qt_perimetro_toracico,
		a.qt_pa_sistolica,
		a.qt_pam,
		a.qt_pa_diastolica,
		a.qt_pae,
		a.qt_peso,
		a.qt_pressao_intra_abd,
		a.qt_pressao_intra_abd_h2o,
		a.qt_pressao_intra_cranio,
		a.qt_escala_dor,
		a.qt_ppa,
		a.qt_ppc,
		a.qt_pvc_h2o,
		a.qt_pvc,
		substr(obter_valor_dominio(2925,a.ie_pupila_reacao_luz),1,255),
		substr(obter_valor_dominio(2925,a.ie_pupila_reacao_luz_e),1,255),
		substr(obter_valor_dominio(2926,a.ie_pupila_alteracao),1,255),
		substr(obter_valor_dominio(1557,a.ie_ritmo_ecg),1,255),
		a.qt_saturacao_o2,
		a.qt_superf_corporia,
		substr(obter_valor_dominio(2927,a.ie_sinal_focal),1,255),
		substr(obter_valor_dominio(1558,a.ie_sitio),1,255),
		a.qt_segmento_st,
		a.qt_o2_suplementar,
		a.qt_temp_incubadora,
		a.qt_pupila_tamanho,
		a.qt_pupila_tam_esq,
		a.qt_temp,
		a.qt_pic_temp,
		substr(obter_valor_dominio(1306,a.ie_aparelho_pa),1,50),
		substr(obter_valor_dominio(1372,a.ie_lado),1,50),
		substr(obter_valor_dominio(1305,a.ie_manguito),1,50),
		substr(obter_valor_dominio(1303,a.ie_pressao),1,50),
		substr(obter_desc_topografia_dor(a.nr_seq_topografia_dor),1,60),
		a.ie_unid_med_o2_suplem,
		pkg_date_utils.get_time(a.dt_sinal_vital,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_sinal_vital,'hh24'),'hh24:mi:ss'))),
		qt_glicemia_mmol
	from	atendimento_sinal_vital a
	where	a.nr_atendimento = nr_atendimento_p
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(a.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	a.dt_sinal_vital between dt_inicial_w and dt_final_w
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((ie_lib_sinal_vital_w = 'N') or (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''))
	and	((ie_rn_w = 'A') or (a.ie_rn = ie_rn_w))
	and	apap_obter_se_exibe_grupo(nr_seq_grupo_w,a.nm_usuario) = 'S'
	order by	coalesce(a.ie_relevante_apap,'N'),
		a.dt_sinal_vital;

-- Cursor que busca as informacoes de Analizador Bioquimico Portatil
C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.qt_tca,
		a.dt_analise,
		pkg_date_utils.get_time(a.dt_analise,to_char(round(a.dt_analise,'hh24'),'hh24:mi:ss'))
	from	atend_anal_bioq_port a
	where	a.nr_atendimento = nr_atendimento_p
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((ie_lib_sinal_vital_w = 'N') or (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''))
	and	coalesce(a.dt_inativacao::text, '') = ''
	and	a.dt_analise between dt_inicial_w and dt_final_w;

-- Cursor que busca as informacoes de Apache II
C04 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_ira,
		a.ie_po_urgencia,
		a.qt_temp_axilar,
		a.qt_bicarbonato_serico,
		a.qt_pas,
		a.qt_ph_arterial,
		a.qt_pad,
		a.qt_sodio_serico,
		a.qt_pal_media,
		a.qt_potassio_serico,
		a.qt_freq_card,
		a.qt_creatinina,
		a.qt_freq_resp,
		a.qt_hematocrito,
		a.qt_oxigenacao_fio2,
		a.qt_globulos_brancos,
		a.qt_oxigenacao_pco2,
		a.qt_pb,
		a.qt_oxigenacao_pao2,
		a.qt_escala_glasgow,
		a.qt_oxigenacao_paao2,
		a.ie_tipo_categoria,
		a.nr_seq_cat_diag,
		a.qt_pont_var_fisiologicas,
		a.qt_apache_ii,
		a.qt_pont_idade,
		a.qt_risco_calculado,
		a.qt_pont_doenca_cronica,
		a.pr_risco,
		a.qt_peso_cat_diag,
		a.dt_apache,
		pkg_date_utils.get_time(a.dt_apache,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_apache,'hh24'),'hh24:mi:ss')))
	from	apache a
	where	a.nr_atendimento = nr_atendimento_p
	and	a.dt_apache between dt_inicial_w and dt_final_w
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

-- Cursor que busca as informacoes de Apache IV
C05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.qt_temp,
		a.qt_na,
		a.qt_pa_sist,
		a.qt_glicose,
		a.qt_pa_diast,
		a.qt_creatinina,
		a.qt_fc,
		a.qt_ureia,
		a.qt_freq_resp,
		a.qt_diurese,
		a.qt_altitude,
		a.qt_albumina,
		a.qt_fio2,
		a.qt_bilirrubina,
		a.qt_ph,
		a.qt_glob_vermelhos,
		a.qt_po2,
		a.qt_glob_brancos,
		a.qt_pco2,
		a.qt_escala_glasgow,
		a.qt_idade,
		a.qt_dias_antes_uti,
		a.qt_pontuacao,
		a.qt_pontos_aps,
		a.qt_pontos_logit,
		a.pr_mortalidade,
		a.qt_dias_uti,
		a.ie_glasgow_indis,
		a.ie_glasgow_ocular,
		a.ie_glasgow_verbal,
		a.ie_glasgow_motora,
		a.ie_renal,
		a.ie_cancer_metastatico,
		a.ie_aids,
		a.ie_leuc_mileoma_mult,
		a.ie_hepatica,
		a.ie_imunosupressao,
		a.ie_linfoma,
		a.ie_cirrose,
		a.ie_origem_paciente,
		a.ie_emergencia,
		a.ie_readmissao,
		a.ie_ventilacao,
		a.ie_terapia_trombo,
		substr(obter_dados_apache_iv('DMC',a.nr_seq_diag),1,20),
		(	SELECT	substr(b.ds_diagnostico,1,300)
			from	diag_doenca_apache_iv b
			where	b.nr_sequencia = a.nr_seq_diag),
		a.dt_avaliacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')))
	from	escala_apache_iv a
	where	a.nr_atendimento = nr_atendimento_p
	and	a.dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

-- Cursor que busca as informacoo da Circulacao extracorporea por membrana
C07 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.qt_flixo_sanguineo,
		a.qt_ultra_filtracao,
		a.qt_rotacao_bomba,
		a.qt_fluxo_gas,
		a.qt_fio2,
		a.qt_pressao_acesso,
		a.qt_pressao_pre_membrana,
		a.qt_pressao_pos_membrana,
		a.qt_temperatura,
		a.dt_registro,
		pkg_date_utils.get_time(a.dt_registro,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_registro,'hh24'),'hh24:mi:ss'))) dt_apap
	from	circulacao_extracorporea a
	where	a.nr_atendimento = nr_atendimento_p
	and	a.dt_registro between dt_inicial_w and dt_final_w
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	coalesce(a.ie_apap,'N') = 'S'
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

-- Cursor que busca as Prescricoes
C08 CURSOR FOR
	SELECT	nr_prescricao
	from	prescr_medica
	where	nr_atendimento = nr_atendimento_p
	and	coalesce(dt_suspensao::text, '') = ''
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by	nr_prescricao;

-- Cursor que busca as informacoes de Drogas especiais
C09 CURSOR FOR
	SELECT	somente_numero(to_char(a.dt_alteracao,'hh24')) nr_hora,
		a.dt_alteracao,
		a.qt_dosagem,
		b.ie_tipo_dosagem,
		a.ie_alteracao,
		b.nr_prescricao,
		b.nr_seq_solucao,
		a.nr_sequencia
	from	prescr_medica d,
		prescr_solucao b,
		prescr_solucao_evento a
	where	a.ie_evento_valido = 'S'
	and	a.nr_prescricao = b.nr_prescricao
	and	a.nr_seq_solucao = b.nr_seq_solucao
	and	b.nr_prescricao = d.nr_prescricao
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(d.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	(a.nr_seq_solucao IS NOT NULL AND a.nr_seq_solucao::text <> '')
	and	a.nr_atendimento = nr_atendimento_p
	and	d.nr_prescricao = nr_prescricao_w
	and	a.ie_alteracao in (1,2,3,4,5)
	and	((ie_controla_adep_w = 'N') or (coalesce(b.ie_apap,'SV') = 'SV'))
	and	((a.dt_alteracao between dt_inicial_w and dt_final_w) or
		 ((obter_status_solucao_prescr(1,b.nr_prescricao,b.nr_seq_solucao) IN ('I','R')) and (a.dt_alteracao <= dt_final_w)))
	and	obter_se_solucao_apap(a.nr_prescricao,a.nr_seq_solucao,nr_ficha_tecnica_w) = 'S'
	and	((ie_rn_w = 'A') or (d.ie_recem_nato = ie_rn_w))
	and	coalesce(d.dt_suspensao::text, '') = ''
	and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
	order by	a.dt_alteracao,
		a.nr_prescricao;

-- Cursor que busca as informacoes de Gasoterapia
C10 CURSOR FOR
	SELECT	somente_numero(to_char(a.dt_evento,'hh24')),
		a.dt_evento,
		a.qt_gasoterapia,
		a.ie_evento,
		b.nr_prescricao,
		b.nr_sequencia,
		coalesce(a.ie_unidade_medida,b.ie_unidade_medida)
	from	prescr_medica d,
		prescr_gasoterapia b,
		prescr_gasoterapia_evento a
	where	a.ie_evento_valido = 'S'
	and	a.nr_seq_gasoterapia = b.nr_sequencia
	and	b.nr_prescricao = d.nr_prescricao
	and	b.nr_seq_gas = nr_seq_gas_w
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(d.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	(b.nr_seq_gas IS NOT NULL AND b.nr_seq_gas::text <> '')
	and	d.nr_atendimento = nr_atendimento_p
	and	a.ie_evento in ('I','IN','R','T','V')
	and	coalesce(d.dt_suspensao::text, '') = ''
	and 	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
	and	((a.dt_evento between dt_inicial_w -1 and dt_final_w) or
		 ((obter_status_gasot_prescr(b.nr_prescricao,b.nr_sequencia) in ('I','R')) and (a.dt_evento <= dt_final_w)))
	order by	a.dt_evento, d.nr_prescricao;

-- Cursor que busca as informacoes de Ganhos e Perdas
C11 CURSOR FOR
	SELECT	c.dt_medida,
		c.qt_volume,
		c.nr_sequencia,
		coalesce(c.qt_ocorrencia,0) qt_ocorrencia,
		pkg_date_utils.get_time(c.dt_medida,coalesce(to_char(c.nr_hora,'00'),to_char(round(c.dt_medida,'hh24'),'hh24:mi:ss'))) dt_apap
	from	tipo_perda_ganho b,
		grupo_perda_ganho a,
		atendimento_perda_ganho c
	where	c.nr_atendimento = nr_atendimento_p
	and	b.nr_sequencia = c.nr_seq_tipo
	and	b.nr_seq_grupo = a.nr_sequencia
	and	b.nr_seq_grupo = nr_seq_grupo_pg_w
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(c.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(nr_seq_tipo_pg_w::text, '') = ''
	and	coalesce(c.dt_apap,c.dt_medida) between dt_inicial_w and dt_final_w
	and	coalesce(c.ie_situacao,'A')	= 'A'
	and	((ie_lib_ganho_perda_w = 'N') or (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> ''))
	and 	((ie_tipo_grupo_w = 'OC' and b.ie_volume_ocorrencia = 'O') or (ie_tipo_grupo_w = 'CH' and 	b.ie_volume_ocorrencia in ('V','P') ) )
	and	((ie_rn_w = 'A') or (c.ie_recem_nato = ie_rn_w))
	order by c.dt_medida;

-- Cursor que busca os medicamentos de Itens Administrados
C12 CURSOR FOR
	SELECT	distinct
		d.cd_material,
		d.ds_material,
		substr(obter_desc_unidade_medida(coalesce(b.cd_unidade_medida_dose,b.cd_unidade_medida)),1,50) ds_unidade_medida
	from	prescr_mat_hor a,
		prescr_material b,
		prescr_medica c,
		estrutura_material_v d
	where	c.nr_prescricao	= b.nr_prescricao
	and	b.nr_prescricao	= a.nr_prescricao
	and	b.nr_sequencia = a.nr_seq_material
	and	d.cd_material = b.cd_material
	and	c.nr_atendimento = nr_atendimento_p
	and	a.dt_fim_horario between dt_inicial_w and dt_final_w
	and	coalesce(c.dt_suspensao::text, '') = ''
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	coalesce(a.dt_suspensao::text, '') = ''
	and (d.cd_material = cd_material_w or coalesce(cd_material_w::text, '') = '')
	and (d.cd_grupo_material = cd_grupo_material_w or coalesce(cd_grupo_material_w::text, '') = '')
	and (d.cd_subgrupo_material = cd_subgrupo_material_w or coalesce(cd_subgrupo_material_w::text, '') = '')
	and (d.cd_classe_material = cd_classe_material_w or coalesce(cd_classe_material_w::text, '') = '')
	and (d.nr_seq_ficha_tecnica = nr_ficha_tecnica_w or coalesce(nr_ficha_tecnica_w::text, '') = '')
	and	coalesce(c.dt_suspensao::text, '') = ''
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
	order by	d.ds_material;

-- Cursor que busca as informacoes de Itens Administrados
C13 CURSOR(cd_material_c13 bigint) FOR
	SELECT	a.nr_sequencia,
		a.dt_fim_horario,
		pkg_date_utils.get_time(a.dt_fim_horario,to_char(round(a.dt_fim_horario,'hh24'),'hh24:mi:ss')) dt_apap,
		a.qt_dose,
		d.cd_material,
		d.ds_material
	from	prescr_mat_hor a,
		prescr_material b,
		prescr_medica c,
		estrutura_material_v d
	where	c.nr_prescricao	= b.nr_prescricao
	and	b.nr_prescricao	= a.nr_prescricao
	and	b.nr_sequencia = a.nr_seq_material
	and	c.nr_atendimento = nr_atendimento_p
	and	a.dt_fim_horario between dt_inicial_w and dt_final_w
	and	b.cd_material = cd_material_c13
	and	d.cd_material = b.cd_material
	and	coalesce(c.dt_suspensao::text, '') = ''
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	coalesce(a.dt_suspensao::text, '') = '';

-- Cursor que busca as informacoes de Balanco Hidrico
C14 CURSOR FOR
	SELECT	pkg_date_utils.get_time(coalesce(a.dt_apap,a.dt_medida),to_char(round(coalesce(a.dt_apap,a.dt_medida),'hh24'),'hh24:mi:ss')) dt_apap,
		sum(CASE WHEN c.ie_perda_ganho='P' THEN a.qt_volume  ELSE 0 END ) qt_perda,
		sum(CASE WHEN c.ie_perda_ganho='G' THEN a.qt_volume  ELSE 0 END ) qt_ganho
	from	grupo_perda_ganho c,
		tipo_perda_ganho b,
		atendimento_perda_ganho a
	where	a.nr_seq_tipo = b.nr_sequencia
	and	b.nr_seq_grupo = c.nr_sequencia
	and	a.nr_atendimento = nr_atendimento_p
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(a.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(b.ie_soma_bh,'S') = 'S'
	and	coalesce(a.dt_apap,a.dt_medida) between dt_inicial_w and dt_final_w
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	((ie_lib_ganho_perda_w = 'N') or (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''))
	and	((ie_rn_w = 'A') or (a.ie_recem_nato = ie_rn_w))
	group by	pkg_date_utils.get_time(coalesce(a.dt_apap,a.dt_medida),to_char(round(coalesce(a.dt_apap,a.dt_medida),'hh24'),'hh24:mi:ss')),
		trunc(coalesce(a.dt_apap,a.dt_medida),'hh24')
	order by	dt_apap;

-- Cursor que traz um hash de datas do periodo passado por parametro
C15 CURSOR FOR
	SELECT	a.dt_referencia
	from	(WITH RECURSIVE cte AS (
	SELECT	trunc((pkg_date_utils.start_of(dt_inicial_w,'MONTH')) + (level - 1)) dt_referencia
			
			connect	by ((pkg_date_utils.start_of(dt_inicial_w,'MONTH')) + (level - 1)) < pkg_date_utils.end_of(dt_inicial_w,'MONTH')  UNION ALL
	SELECT	trunc((pkg_date_utils.start_of(dt_inicial_w,'MONTH')) + (level - 1)) dt_referencia
			
			connect	by ((pkg_date_utils.start_of(dt_inicial_w,'MONTH')) + (level - 1)) < pkg_date_utils.end_of(dt_inicial_w,'MONTH') JOIN cte c ON ()

) SELECT * FROM cte;
) a
	where	dt_referencia between dt_inicial_w and dt_final_w;

-- Cursor que busca as informacoes de Evolucao
C16 CURSOR FOR
	SELECT	a.cd_evolucao,
		a.dt_evolucao,
		pkg_date_utils.get_time(a.dt_evolucao,to_char(round(a.dt_evolucao,'hh24'),'hh24:mi:ss')) dt_apap
	from	evolucao_paciente a
	where	a.nr_atendimento = nr_atendimento_p
	and	coalesce(a.ie_situacao,'A') = 'A'
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_inativacao::text, '') = ''
	and	a.dt_evolucao between dt_inicial_w and dt_final_w
	and	((a.ie_evolucao_clinica = ie_evolucao_clinica_w) or (coalesce(ie_evolucao_clinica_w::text, '') = ''))
	order by	a.dt_evolucao;

-- Cursor que busca os medicamentos de Itens Pendentes
C17 CURSOR FOR
	SELECT	distinct
		d.cd_material,
		d.ds_material,
		substr(obter_desc_unidade_medida(coalesce(b.cd_unidade_medida_dose,b.cd_unidade_medida)),1,50) ds_unidade_medida,
		e.CD_MAT_COMP1,
        e.CD_MAT_COMP2,
        e.CD_MAT_COMP3,
        e.CD_MAT_COMP4,
        e.CD_MAT_COMP5,
        e.CD_MAT_COMP6,
        e.CD_MAT_COMP7
	FROM estrutura_material_v d, prescr_medica c, prescr_mat_hor a, prescr_material b
LEFT OUTER JOIN cpoe_material e ON (b.cd_material = e.cd_material AND b.nr_seq_mat_cpoe = e.nr_sequencia)
WHERE c.nr_prescricao	= b.nr_prescricao and b.nr_prescricao	= a.nr_prescricao and b.nr_sequencia = a.nr_seq_material and d.cd_material = b.cd_material   and c.nr_atendimento = nr_atendimento_p and coalesce(a.dt_inicio_horario,a.dt_horario) between dt_inicial_w and dt_final_w and coalesce(a.dt_fim_horario::text, '') = '' and coalesce(c.dt_suspensao::text, '') = '' and coalesce(b.dt_suspensao::text, '') = '' and coalesce(a.dt_suspensao::text, '') = '' and b.ie_agrupador not in (3,7,9) and (d.cd_material = cd_material_w or coalesce(cd_material_w::text, '') = '') and (d.cd_grupo_material = cd_grupo_material_w or coalesce(cd_grupo_material_w::text, '') = '') and (d.cd_subgrupo_material = cd_subgrupo_material_w or coalesce(cd_subgrupo_material_w::text, '') = '') and (d.cd_classe_material = cd_classe_material_w or coalesce(cd_classe_material_w::text, '') = '') and (d.nr_seq_ficha_tecnica = nr_ficha_tecnica_w or coalesce(nr_ficha_tecnica_w::text, '') = '') and coalesce(c.dt_suspensao::text, '') = '' and (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '') order by	d.ds_material;

-- Cursor que busca as informacoes de Itens Pendentes
C18 CURSOR(cd_material_c18 bigint) FOR
	SELECT	a.nr_sequencia,
		coalesce(a.dt_inicio_horario,a.dt_horario) dt_inicio_horario,
		pkg_date_utils.get_time(coalesce(a.dt_inicio_horario,a.dt_horario),to_char(round(coalesce(a.dt_inicio_horario,a.dt_horario),'hh24'),'hh24:mi:ss')) dt_apap,
		a.qt_dose,
		d.cd_material,
		d.ds_material
	from	prescr_mat_hor a,
		prescr_material b,
		prescr_medica c,
		estrutura_material_v d
	where	c.nr_prescricao	= b.nr_prescricao
	and	b.nr_prescricao	= a.nr_prescricao
	and	b.nr_sequencia = a.nr_seq_material
	and	c.nr_atendimento = nr_atendimento_p
	and	coalesce(a.dt_inicio_horario,a.dt_horario) between dt_inicial_w and dt_final_w
	and	coalesce(a.dt_fim_horario::text, '') = ''
	and	b.cd_material = cd_material_c18
	and	d.cd_material = b.cd_material
	and	b.ie_agrupador not in (3,7,9)
	and	coalesce(c.dt_suspensao::text, '') = ''
	and	coalesce(b.dt_suspensao::text, '') = ''
	and	coalesce(a.dt_suspensao::text, '') = '';

-- Cursor que busca as informacoes de Controle Intensivo da Glicemia
c35 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_controle dt_avaliacao,
		a.qt_hgt,
		a.qt_glicose_adm,
		a.qt_bolus_adm,
		a.qt_veloc_adm,
		pkg_date_utils.get_time(a.dt_controle,to_char(round(a.dt_controle,'hh24'),'hh24:mi:ss')) dt_apap
	from	atendimento_cig a
	where	a.nr_atendimento	= nr_atendimento_p
	and	dt_controle between dt_inicial_w and dt_final_w
	and	((ie_glicemia_confirmada_w = 'N') or (ie_adm_confirmada = 'S'))
	order by a.dt_controle;


c36 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_controle dt_avaliacao,
		a.qt_glicemia,
		a.qt_ui_insulina_adm,
		a.qt_glicose_adm,
		a.qt_glicemia_mmol,
		pkg_date_utils.get_time(a.dt_controle,to_char(round(a.dt_controle,'hh24'),'hh24:mi:ss')) dt_apap
	from	atendimento_glicemia a
	where	a.nr_atendimento	= nr_atendimento_p
	and	dt_controle between dt_inicial_w and dt_final_w
	and	((ie_glicemia_confirmada_w = 'N') or (ie_adm_confirmada = 'S'))
	order by a.dt_controle;


c37 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_controle dt_avaliacao,
		a.qt_glicemia,
		a.dt_controle dt_glicemia,
		pkg_date_utils.get_time(a.dt_controle,to_char(round(a.dt_controle,'hh24'),'hh24:mi:ss')) dt_apap
	from	atendimento_glicemia a
	where	a.nr_atendimento = nr_atendimento_p
	and	dt_controle between dt_inicial_w and dt_final_w
	and	((ie_glicemia_confirmada_w = 'N') or (ie_adm_confirmada = 'S'))
	
union

	SELECT	a.nr_sequencia,
		a.dt_controle dt_avaliacao,
		a.qt_hgt,
		a.dt_controle dt_glicemia,
		pkg_date_utils.get_time(a.dt_controle,to_char(round(a.dt_controle,'hh24'),'hh24:mi:ss')) dt_apap
	from	atendimento_cig a
	where	a.nr_atendimento = nr_atendimento_p
	and	a.dt_controle between dt_inicial_w and dt_final_w
	and	((ie_glicemia_confirmada_w = 'N') or (ie_adm_confirmada = 'S'))
	
union

	select	a.nr_sequencia,
		a.dt_sinal_vital dt_avaliacao,
		a.qt_glicemia_capilar,
		coalesce(dt_referencia,dt_sinal_vital) dt_glicemia,
		pkg_date_utils.get_time(a.dt_sinal_vital,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_sinal_vital,'hh24'),'hh24:mi:ss'))) dt_apap
	from	atendimento_sinal_vital a
	where	nr_atendimento = nr_atendimento_p
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(dt_referencia,dt_sinal_vital) between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	((ie_lib_sinal_vital_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
	order by dt_glicemia;


C40 CURSOR FOR
	SELECT	dt_monitorizacao dt_avaliacao,
		nr_sequencia,
		somente_numero(coalesce(nr_hora,to_char(round(dt_monitorizacao,'hh24'),'hh24'))),
		qt_rel_pao2_fio2,
		qt_rima_labial,
		qt_fluxo_oxigenio,
		qt_fio2,
		qt_freq_vent,
		qt_amplitude,
		qt_freq_prog,
		qt_freq_resp,
		qt_vc_prog,
		qt_vci,
		qt_vmin,
		qt_pip,
		qt_pplato,
		qt_peep,
		qt_ps,
		qt_pva,
		qt_auto_peep,
		qt_co2,
		qt_cst,
		qt_rsr,
		qt_fluxo_insp,
		qt_tempo_insp,
		qt_ti_te,
		qt_vce,
		qt_sensib_resp,
		QT_SENSIB_FLUXO,
		qt_limite_pa_max,
		qt_limite_pa_min,
		qt_pressao_cuff,
		qt_pressao_cuff_CMH2O,
		qt_grad_aao2,
		qt_sat_venosa_o2,
		qt_saturacao_o2,
		substr(obter_valor_dominio(1299,ie_respiracao),1,255) ds_respiracao,
		cd_mod_vent,
		substr(obter_valor_dominio(1612,ie_disp_resp_esp),1,255) ds_disp_resp_esp,
		ie_respiracao,
		qt_ti,
		qt_te,
		QT_PC,
		substr(obter_descricao_padrao('EQUIPAMENTO_RESP','DS_EQUIPAMENTO',NR_SEQ_EQUIPAMENTO),1,255) ds_equipamento,
		qt_fluxo_ar_compr,
		QT_OXIDO_NITRICO,
		CASE WHEN ie_muscul_acess=1 THEN '+' WHEN ie_muscul_acess=2 THEN '++' WHEN ie_muscul_acess=3 THEN '+++' END  ie_muscul_acess,
		qt_temp_humidifier,
		substr(obter_valor_dominio(9306,ie_air_entry),1,255) ie_air_entry,
		pkg_date_utils.get_time(a.dt_monitorizacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_monitorizacao,'hh24'),'hh24:mi:ss'))) dt_apap,
		(SELECT ds_modalidade from modalidade_ventilatoria where cd_modalidade = cd_mod_vent) ds_mod_vent
	from	atendimento_monit_resp a
	where	nr_atendimento	= nr_atendimento_p
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(dt_referencia,dt_monitorizacao) between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A')	= 'A'
	and	((ie_lib_sinal_vital_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
	and	Apap_Obter_Se_Exibe_Grupo(nr_seq_grupo_w,nm_usuario) = 'S'
	order by coalesce(ie_relevante_apap,'N'), coalesce(dt_referencia,dt_monitorizacao),dt_monitorizacao;

C41 CURSOR FOR
	SELECT	dt_monitoracao dt_avaliacao,
		nr_sequencia,
		somente_numero(coalesce(nr_hora,to_char(round(dt_monitoracao,'hh24'),'hh24'))),
		trunc(qt_pa_sist_ap,1) qt_pa_sist_ap,
		trunc(qt_pa_diast_ap,1) qt_pa_diast_ap,
		trunc(qt_pa_media_ap,1) qt_pa_media_ap,
		trunc(qt_pa_ocluida_ap,1) qt_pa_ocluida_ap,
		trunc(qt_pvd_sist,1) qt_pvd_sist,
		trunc(qt_pvd_diast_final,1)qt_pvd_diast_final,
		trunc(qt_debito_card,1) qt_debito_card,
		trunc(tx_indice_card,1) tx_indice_card,
		trunc(qt_volume_sist,1) qt_volume_sist,
		trunc(tx_indice_sist,1) tx_indice_sist,
		trunc(qt_rv_sistemica,1) qt_rv_sistemica,
		trunc(tx_rv_sistemica,1) tx_rv_sistemica,
		trunc(qt_rv_pulmonar,1) qt_rv_pulmonar,
		trunc(tx_rv_pulmonar,1) tx_rv_pulmonar,
		trunc(qt_trab_sist_ve,1) qt_trab_sist_ve,
		trunc(tx_trab_sist_ve,1) tx_trab_sist_ve,
		trunc(qt_trab_sist_vd,1) qt_trab_sist_vd,
		trunc(tx_trab_sist_vd,1) tx_trab_sist_vd,
		trunc(qt_satur_ven_mista_oxigenio,1) qt_satur_ven_mista_oxigenio,
		QT_DELTA_PP_MMHG,
		pkg_date_utils.get_time(a.dt_monitoracao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_monitoracao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	atend_monit_hemod a
	where	nr_atendimento	= nr_atendimento_p
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(dt_referencia,dt_monitoracao) between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A')	= 'A'
	and	((ie_lib_sinal_vital_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
	order by coalesce(ie_relevante_apap,'N'), coalesce(dt_referencia,dt_monitoracao),dt_monitoracao;

C42 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		somente_numero(coalesce(nr_hora,to_char(round(dt_avaliacao,'hh24'),'hh24'))),
		ie_ramsay,
		ie_rass,
		ie_prurido,
		ie_nausea,
		ie_bloqueio_motor,
		ie_cateter_peridural,
		ie_ricker,
		ie_maas,
		qt_cook_pontuacao,
		obter_desc_pontuacao_cook(qt_cook_pontuacao) ds_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	atend_aval_analgesia a
	where	nr_atendimento	= nr_atendimento_p
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(dt_referencia,dt_avaliacao) between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A')	= 'A'
	and	((ie_lib_sinal_vital_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
	order by coalesce(ie_relevante_apap,'N'), coalesce(dt_referencia,dt_avaliacao),dt_avaliacao;

c43 CURSOR FOR
	SELECT	nr_sequencia,
		dt_registro dt_avaliacao,
		obter_valor_dominio(2950,ie_interv_contracoes) ie_interv_contracoes,
		qt_bcf,
		obter_valor_dominio(2951,ie_bolsa) ie_bolsa,
		obter_valor_dominio(2952,ie_aspecto_liquido) ie_aspecto_liquido,
		CASE WHEN ie_ocitocina='S' THEN Wheb_mensagem_pck.get_texto(308469)/*'Sim'*/  ELSE Wheb_mensagem_pck.get_texto(308470) /*'Nao'*/ END  ie_ocitocina,
		pkg_date_utils.get_time(a.dt_registro,to_char(round(a.dt_registro,'hh24'),'hh24:mi:ss')) dt_apap
	from	partograma a
	where	nr_atendimento = nr_atendimento_p
	and	dt_registro between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_registro;

C44 CURSOR FOR
	SELECT	max(a.dt_alteracao) dt_avaliacao,
		sum(a.nr_disparo_pca) nr_disparo_pca,
		sum(a.nr_disparo_efetivo) nr_disparo_efetivo,
		sum(a.qt_vol_infundido) qt_vol_infundido,
		pkg_date_utils.get_time(a.dt_alteracao,to_char(trunc(a.dt_alteracao,'hh24'),'hh24:mi:ss')) dt_apap
	from	prescr_medica d,
		prescr_solucao b,
		prescr_solucao_evento a
	where	a.ie_evento_valido	= 'S'
	and	a.nr_prescricao		= b.nr_prescricao
	and	a.nr_seq_solucao	= b.nr_seq_solucao
	and	b.nr_prescricao		= d.nr_prescricao
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(d.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	(a.nr_seq_solucao IS NOT NULL AND a.nr_seq_solucao::text <> '')
	and	a.nr_atendimento	= nr_atendimento_p
	and	a.ie_alteracao in (22)
	and	((ie_controla_adep_w = 'N') or (coalesce(b.ie_apap,'SV') = 'SV'))
	and	a.dt_alteracao between dt_inicial_w -1 and dt_final_w
	and	((ie_rn_w	= 'A') or (d.ie_recem_nato	= ie_rn_w))
	and	coalesce(d.dt_suspensao::text, '') = ''
	and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
	group by pkg_date_utils.get_time(a.dt_alteracao,to_char(trunc(a.dt_alteracao,'hh24'),'hh24:mi:ss'))
	order by 2;

C45 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		IE_LACTANTE,
		QT_IDADE,
		QT_PA_SISTOLICA,
		QT_PTO_PAS,
		QT_BILIRRUBINA_TOTAL,
		QT_PTO_BILIRRUBINA,
		QT_PA_DIASTOLICA,
		QT_PTO_PAD,
		QT_CALCIO,
		QT_PTO_CALCIO,
		QT_FREQ_CARDIACA,
		QT_PTO_FC,
		QT_POTASSIO,
		QT_PTO_POTASSIO,
		QT_FREQ_RESP,
		QT_PTO_FR,
		QT_GLICEMIA,
		QT_PTO_GLICEMIA,
		IE_APNEIA,
		QT_BICARBONATO,
		QT_PTO_BICARBONATO,
		QT_REL_PAO2_FIO2,
		QT_PTO_REL_PAO2_FIO2,
		QT_ESCALA_GLASGOW,
		QT_PTO_GLASGOW,
		QT_PACO2,
		QT_PTO_PACO2,
		IE_TEMPO_TP_TTP,
		QT_PTO_TP_TTP,
		IE_REACOES_PUPILARES,
		QT_PTO_REAC_PUP,
		QT_PTO_TOTAL,
		PR_MORTALIDADE,
		PR_MORTALIDADE_POS_OP,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_PRISM a
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C46 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		CASE WHEN ie_tipo_admissao='1' THEN  wheb_mensagem_pck.get_texto(308458) /*'cirurgia programada'*/ WHEN ie_tipo_admissao='2' THEN  wheb_mensagem_pck.get_texto(308459) /*'cirurgia Nao programada'*/ WHEN ie_tipo_admissao='3' THEN  wheb_mensagem_pck.get_texto(308460) /*'clinica'*/ END  ie_tipo_admissao,
		qt_bicarbonato,
		qt_bilirrubina,
		ie_cancro_metastatico,
		CASE WHEN ie_categoria_clinica='1' THEN  wheb_mensagem_pck.get_texto(308461) /*'paciente clinico'*/ WHEN ie_categoria_clinica='2' THEN  wheb_mensagem_pck.get_texto(308462) /*'outros'*/ END  ie_categoria_clinica,
		qt_dias_antes_uti,
		qt_diurese,
		qt_glasgow,
		qt_freq_cardiaca,
		qt_globulos_brancos,
		ie_aids,
		qt_idade,
		ie_intoxicacao,
		ie_malig_hematologica,
		pr_mortalidade,
		pr_mort_expand,
		CASE WHEN ie_origem_paciente='1' THEN  wheb_mensagem_pck.get_texto(308463) /*'sala de emergencia ou uti movel'*/ WHEN ie_origem_paciente='2' THEN  wheb_mensagem_pck.get_texto(308464) /*'enfermaria neste hospital'*/ WHEN ie_origem_paciente='3' THEN  wheb_mensagem_pck.get_texto(308465)/*'outro hospital'*/ END  ie_origem_paciente,
		qt_pa_sistolica,
		qt_rel_pao2_fio2,
		qt_potassio,
		qt_saps_expand,
		qt_saps,
		substr(obter_sexo_pf(obter_pessoa_atendimento(nr_atendimento,'C'),'D'),1,100) ds_sexo,
		qt_sodio,
		qt_temp,
		qt_ureia,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	escala_saps a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;


c57 CURSOR FOR
	SELECT	nr_sequencia,
		dt_analise dt_avaliacao,
		substr(obter_valor_dominio(2571,ie_leucocitos),1,30) ie_leucocitos,
		substr(obter_valor_dominio(2573,ie_urobilinogenio),1,30) ie_urobilinogenio,
		substr(obter_valor_dominio(2575,ie_ph),1,30) ie_ph,
		substr(obter_valor_dominio(2577,ie_densidade),1,30) ie_densidade,
		substr(obter_valor_dominio(2579,ie_bilirrubina),1,30) ie_bilirrubina,
		substr(obter_valor_dominio(2574,ie_proteina),1,30) ie_proteina,
		substr(obter_valor_dominio(2572,ie_nitrito),1,30) ie_nitrito,
		substr(obter_valor_dominio(2576,ie_sangue),1,30) ie_sangue,
		substr(obter_valor_dominio(2578,ie_cetona),1,30) ie_cetona,
		substr(obter_valor_dominio(2580,ie_glicose),1,30) ie_glicose,
		pkg_date_utils.get_time(a.dt_analise,to_char(round(a.dt_analise,'hh24'),'hh24:mi:ss')) dt_apap
	from	atend_uroanalise a
	where	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	nr_atendimento	= nr_atendimento_p
	and	coalesce(dt_analise,clock_timestamp()) between dt_inicial_w and dt_final_w
	order by dt_analise;

C58 CURSOR FOR
	SELECT	nr_sequencia,
		dt_analise dt_avaliacao,
		substr(obter_valor_dominio(7701,ie_leucocitos),1,30) ie_leucocitos,
		substr(obter_valor_dominio(7706,ie_urobilinogenio),1,30) ie_urobilinogenio,
		substr(obter_valor_dominio(7700,ie_ph),1,30) ie_ph,
		substr(obter_valor_dominio(7699,ie_densidade),1,30) ie_densidade,
		substr(obter_valor_dominio(7705,ie_bilirrubina),1,30) ie_bilirrubina,
		substr(obter_valor_dominio(7707,ie_proteina),1,30) ie_proteina,
		substr(obter_valor_dominio(7703,ie_nitrito),1,30) ie_nitrito,
		substr(obter_valor_dominio(7702,ie_sangue),1,30) ie_sangue,
		substr(obter_valor_dominio(7704,ie_cetona),1,30) ie_cetona,
		substr(obter_valor_dominio(7708,ie_glicose),1,30) ie_glicose,
		pkg_date_utils.get_time(a.dt_analise,to_char(round(a.dt_analise,'hh24'),'hh24:mi:ss')) dt_apap
	from	atend_uro_choice a
	where	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	nr_atendimento	= nr_atendimento_p
	and	coalesce(dt_analise,clock_timestamp()) between dt_inicial_w and dt_final_w
	order by dt_analise;

-- Exames de laboratorio
c59 CURSOR FOR
	SELECT	b.NR_SEQ_RESULTADO,
		b.NR_SEQUENCIA,
		b.nr_seq_exame,
		a.dt_resultado,
		substr(obter_formato_result_exame(b.nr_seq_exame, b.nr_seq_material),1,1) ds_formato,
		b.qt_resultado,
		substr(b.ds_resultado,1,30) ds_resultado,
		pr_resultado,
		pkg_date_utils.get_time(a.dt_resultado,to_char(round(a.dt_resultado,'hh24'),'hh24:mi:ss')) dt_apap
	from	exame_lab_result_item b,
		prescr_procedimento x,
		prescr_medica d,
		exame_lab_resultado a
	where	a.nr_seq_resultado	= b.nr_seq_resultado
	and	d.nr_prescricao 	= a.nr_prescricao
	and	d.nr_prescricao		= x.nr_prescricao
	and	x.nr_sequencia		= b.nr_seq_prescr
	and 	d.nr_atendimento = nr_atendimento_p
	and 	a.dt_resultado between dt_inicial_w and dt_final_w
	and	coalesce(d.dt_suspensao::text, '') = ''
	and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '');


-- Cursor que busca as informacoes de AKIN
C60 CURSOR FOR
	SELECT	nr_sequencia,
		DT_AVALIACAO,
		obter_valor_dominio(3547, IE_NIVEL_SERICO) IE_NIVEL_SERICO,
		obter_valor_dominio(3548, IE_DEBITO_URINARIO) IE_DEBITO_URINARIO,
		QT_PONTUACAO,
		substr(obter_descr_escala_akin(QT_PONTUACAO),1,255),
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_AKIN a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

-- Cursor que busca as informacoes de Aldrete
C61 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_ALDRETE,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_ALDRETE a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

-- Cursor que busca as informacoes de Braden
C62 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		QT_PONTO,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap,
		obter_valor_dominio(1399,IE_PERCEPCAO_SENSORIAL) IE_PERCEPCAO_SENSORIAL,
		obter_valor_dominio(1400,IE_UMIDADE) IE_UMIDADE,
		obter_valor_dominio(1401,IE_ATIVIDADE_FISICA) IE_ATIVIDADE_FISICA,
		obter_valor_dominio(1402,IE_MOBILIDADE) IE_MOBILIDADE,
		obter_valor_dominio(1403,IE_NUTRICAO) IE_NUTRICAO,
		obter_valor_dominio(1404,IE_FRICCAO_CISALHAMENTO) IE_FRICCAO_CISALHAMENTO,
    substr(obter_resultado_braden(QT_PONTO),1,100) DS_QT_PONTO
	from	ATEND_ESCALA_BRADEN a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

-- Cursor que busca as informacoes de Braden Q
C63 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		obter_valor_dominio(1402,IE_MOBILIDADE) IE_MOBILIDADE,
		obter_valor_dominio(1401,IE_ATIVIDADE_FISICA) IE_ATIVIDADE_FISICA,
		obter_valor_dominio(1399,IE_PERCEPCAO_SENSORIAL) IE_PERCEPCAO_SENSORIAL,
		obter_valor_dominio(1400,IE_UMIDADE) IE_UMIDADE,
		obter_valor_dominio(3198,IE_FRICCAO_CISALHAMENTO) IE_FRICCAO_CISALHAMENTO,
		obter_valor_dominio(1403,IE_NUTRICAO) IE_NUTRICAO,
		obter_valor_dominio(3174,IE_PERFUSAO) IE_PERFUSAO,
		QT_PONTO,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ATEND_ESCALA_BRADEN_Q a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C64 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		substr(obter_result_CAM_ICU(ie_alt_estado_mental,ie_comport_anormal,ie_focar_atencao,ie_distraido,ie_desorganizado,ie_consiencia,IE_CAM_ICU_MODIFICADA,ie_pedra_flutuam,ie_peixe_mar,ie_quilograma,ie_martelo_madeira,ie_agitado,ie_letagico,ie_estuporoso,ie_camatoso),1,255) ds_resultado,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	escala_cam_icu a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C65 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_cockcroft_gault,
		qt_mdrd,
		qt_schwartz,
		qt_counhahan_barratt,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	PAC_CLEREANCE_CREATININA a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C66 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		pr_score,
		qt_score,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_CRIB_II a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C67 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_earq a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

c68 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_DINI a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C69 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	GCA_ATENDIMENTO a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C70 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		ie_dor,
		ie_cansaco,
		ie_nausea,
		ie_depressao,
		ie_ansiedade,
		ie_sonolencia,
		ie_bom_apetite,
		ie_sensacao_bem_estar,
		ie_falta_ar,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_EDMONTON a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C71 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		ie_intensidade,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap,
    substr(Obter_valor_dominio(3341, ie_intensidade), 1, 255) ds_ie_intensidade
	from	escala_flebite a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C72 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		ie_flebite,
		obter_valor_dominio(3668,ie_flebite) ds_flebite,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_FLEBITE_INS a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C73 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_glasgow,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap,
		ie_resposta_motora,
		ie_resposta_verbal,
		ie_abertura_ocular,
    substr(obter_resultado_glasgow(qt_glasgow),1, 255) ds_qt_glasgow
	from	atend_escala_indice a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C74 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		ie_karnofsky,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_KARNOFSKY a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C75 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		QT_FREQ_CARDIACA,
		QT_FREQ_RESP,
		QT_PA_SISTOLICA,
		QT_TEMP,
		IE_NIVEL_CONSCIENCIA,
		QT_PONTUACAO,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_MEWS a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C76 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		qt_pto_resp,
		qt_pto_snc,
		qt_pto_cardio,
		qt_pto_hepatica,
		qt_pto_coag,
		qt_pto_renal,
		pr_mortalidade,
		pr_mortalidade_uti,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_MODS a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C77 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		QT_PONTUACAO,
		substr(Obter_desc_escala_morse(qt_pontuacao),1,255) ie_risco,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_morse a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C78 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_nas a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

c79 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		QT_PTO_TOTAL,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_NTISS a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by dt_avaliacao;

C80 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		substr(obter_valor_dominio(1509,ie_ramsay),1,240) ds_ramsay,
		ie_ramsay,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_ramsay a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	
union all

	SELECT	nr_sequencia,
		dt_avaliacao,
		substr(obter_valor_dominio(1509,ie_ramsay),1,240) ds_ramsay,
		ie_ramsay,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	atend_aval_analgesia a
	where	nr_atendimento	= nr_atendimento_p
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(dt_referencia,dt_avaliacao) between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A')	= 'A'
	and	((ie_lib_sinal_vital_w = 'N') or (dt_liberacao IS NOT NULL AND dt_liberacao::text <> ''))
	order by  dt_avaliacao;

C81 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		ie_rass,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_richmond a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C82 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_saps3 a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C83 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_snap_ii,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_snapii_snappeii a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C84 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_snappe_ii,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_snapii_snappeii a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C85 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		pr_mortalidade,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_snapii_snappeii a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C86 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_sofa a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C87 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_score,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap,
		substr(obter_desc_escala_stratify(qt_score),1,255) ds_score
	from	escala_stratify a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C88 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		substr(obter_valor_dominio(2900,ie_risco),1,150) ds_risco,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	escala_tev a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C89 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	escala_tenetti a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

 C90 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		qt_pontuacao,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	TISS_INTERV_TERAPEUTICA a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C91 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		QT_IDADE,
		QT_FREQ_CARDIACA,
		QT_PA_SISTOLICA,
		QT_CREATININA,
		obter_valor_dominio(3067,IE_KILLIP) DS_KILLIP,
		IE_PARADA_CARDIACA_ADM,
		IE_MARCADOR_CARDIACO_ELE,
		IE_DESVIO_SEG_ST,
		QT_PONTUACAO,
		substr(obter_desc_grace(qt_pontuacao),1,255) ds_resultado,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_GRACE A
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C92 CURSOR FOR
	SELECT	nr_sequencia,
		dt_avaliacao,
		IE_ADM_ELETIVA,
		QT_PTO_ADM_ELETIVA,
		IE_PROC_RECUPERACAO,
		QT_PTO_PROC_RECUP,
		IE_CIRURGIA_CARDIACA,
		QT_PTO_CIRUR_CARD,
		obter_valor_dominio(2112, IE_DIAG_ALTO_RISCO) IE_DIAG_ALTO_RISCO,
		QT_PTO_DIAG_ALTO_RISCO,
		obter_valor_dominio(2113, IE_DIAG_BAIXO_RISCO) IE_DIAG_BAIXO_RISCO,
		IE_RESPOSTA_PUPILAS,
		QT_PTO_RESP_PUPILAS,
		IE_VENTILACAO_MECANICA,
		QT_PTO_VENT_MEC,
		QT_PA_SITOLICA,
		QT_PTO_PA_SISTOLICA,
		QT_PH_SANGUE,
		QT_PTO_PH_SANGUE,
		QT_REL_PAO2,
		QT_REL_FIO2,
		QT_PTO_PAO2_FIO2,
		QT_TX_MORTALIDADE,
		pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_PIM2 a
	where	nr_atendimento = nr_atendimento_p
	and	dt_avaliacao between dt_inicial_w and dt_final_w
	and	coalesce(ie_situacao,'A') = 'A'
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C93 CURSOR FOR
	SELECT	c.dt_medida,
		c.qt_volume,
		c.nr_sequencia,
		coalesce(c.qt_ocorrencia,0) qt_ocorrencia,
		pkg_date_utils.get_time(c.dt_medida,coalesce(to_char(c.nr_hora,'00'),to_char(round(c.dt_medida,'hh24'),'hh24:mi:ss'))) dt_apap
	from	tipo_perda_ganho b,
		grupo_perda_ganho a,
		atendimento_perda_ganho c
	where	c.nr_atendimento = nr_atendimento_p
	and	b.nr_sequencia = c.nr_seq_tipo
	and	b.nr_seq_grupo = a.nr_sequencia
	and	c.nr_seq_tipo = nr_seq_tipo_pg_w
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(c.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(c.dt_apap,c.dt_medida) between dt_inicial_w and dt_final_w
	and	coalesce(c.ie_situacao,'A') = 'A'
	and	((ie_lib_ganho_perda_w = 'N') or (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> ''))
	and 	((ie_tipo_grupo_w = 'OC' and b.ie_volume_ocorrencia = 'O') or (ie_tipo_grupo_w = 'CH' and b.ie_volume_ocorrencia in ('V','P')))
	and	((ie_rn_w = 'A') or (c.ie_recem_nato = ie_rn_w))
	and	((coalesce(nr_seq_topografia_w::text, '') = '') or (coalesce(c.nr_seq_topografia,0) = nr_seq_topografia_w))
	and	(((coalesce(ie_lado_w::text, '') = '')  and (coalesce(c.ie_lado::text, '') = '')) or ( ie_lado_w = c.ie_lado ));


C94 CURSOR FOR
	SELECT	c.dt_medida,
		substr(obter_dados_pg_inf_adic_item(d.nr_seq_inf_adic_item, 'D'),1,255) ds_dados,
		d.nr_sequencia
	from	tipo_perda_ganho b,
		grupo_perda_ganho a,
		atend_perda_ganho_inf_adic d,
		atendimento_perda_ganho c
	where	c.nr_atendimento	= nr_atendimento_p
	and	b.nr_sequencia		= c.nr_seq_tipo
	and	b.nr_seq_grupo		= a.nr_sequencia
	and	c.nr_sequencia		= d.NR_SEQ_ATEND_PG
	and	c.nr_seq_tipo		= nr_seq_tipo_pg_w
	and	d.NR_SEQ_INF_ADIC	= nr_seq_inf_adic_w
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(c.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(c.dt_apap,c.dt_medida) between dt_inicial_w and dt_final_w
	and	coalesce(c.ie_situacao,'A')	= 'A'
	and	((ie_rn_w	= 'A') or (c.ie_recem_nato	= ie_rn_w))
	and	((ie_lib_ganho_perda_w = 'N') or (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> ''));

c95 CURSOR FOR
	SELECT	c.nr_seq_topografia nr_seq_topografia,
		substr(obter_valor_dominio( 1372, c.ie_lado),1,255) ds_lado,
		c.ie_lado
	from	tipo_perda_ganho b,
		grupo_perda_ganho a,
		atendimento_perda_ganho c
	where	c.nr_atendimento	= nr_atendimento_p
	and	b.nr_sequencia		= c.nr_seq_tipo
	and	b.nr_seq_grupo		= a.nr_sequencia
	and	c.nr_seq_tipo		= nr_seq_tipo_pg_w
	and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(c.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
	and	coalesce(b.ie_soma_bh,'S')	= 'S'
	and	coalesce(c.dt_apap,c.dt_medida) between dt_inicial_w and dt_final_w
	and	coalesce(c.ie_situacao,'A')	= 'A'
	and	((ie_lib_ganho_perda_w = 'N') or (c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> ''))
	and 	b.ie_volume_ocorrencia in ('V','P')
	and	((ie_rn_w	= 'A') or (c.ie_recem_nato	= ie_rn_w))
	group by c.NR_SEQ_TOPOGRAFIA,c.ie_lado;

C96 CURSOR FOR
	SELECT	c.nr_sequencia
	from	w_apap_pac              a,
            w_apap_pac_grupo        b,
            w_apap_pac_informacao   c
	where	a.nr_atendimento = nr_atendimento_p
	and	a.nm_usuario = nm_usuario_p
	and	a.nr_Sequencia = b.nr_seq_mod_apap
	and	b.nr_sequencia = c.nr_seq_apap_grupo
	and	c.ie_manter_nulo = 'N'
	and	not exists (	SELECT	1
			from	w_apap_pac_registro x
			where	x.nr_seq_apap_inf = c.nr_sequencia);

C97 CURSOR FOR
	SELECT	b.nr_sequencia
	from	w_apap_pac a,
		w_apap_pac_grupo b
	where	a.nr_atendimento = nr_atendimento_p
	and	a.nm_usuario = nm_usuario_p
	and	a.nr_Sequencia = b.nr_seq_mod_apap
	and	b.ie_manter_nulo = 'N'
	and not exists (	SELECT	1
				from	w_apap_pac_informacao x
				where	x.nr_seq_apap_grupo = b.nr_sequencia);

C98 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			substr(obter_desc_escala_barthel(qt_pontuacao),1,100) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_BARTHEL A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C99 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			DS_PONTUACAO ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_MADDREY A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C100 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_HELIOS A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C101 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	TISS_INTERV_TERAPEUTICA_10 A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C102 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			substr(Obter_Resul_nrs(qt_pontuacao),1,255) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_NRS A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C103 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			substr(obter_result_child_pugh(qt_pontuacao),1,255) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_CHILD_PUGH A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C104 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			IE_GRUPO,
			obter_result_gold(nr_sequencia) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_GOLD A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C105 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			IE_FORREST,
			substr(obter_valor_dominio(8627,IE_FORREST),1,255) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_FORREST A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C106 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			substr(get_bishop_scale_info(nr_sequencia,'G'),1,255) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_BISHOP A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C107 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			IE_RISCO,
			substr(obter_valor_dominio(8636,IE_RISCO),1,255) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_CAPRINI A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C108 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			IE_PULS,
			substr(obter_valor_dominio(8637,IE_PULS),1,255) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap
	from	ESCALA_PULS A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C109 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			QT_PONTUACAO,
			pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_APGAR A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

C110 CURSOR FOR
	SELECT	nr_sequencia,
			dt_avaliacao,
			IE_NIVEL_ECOG,
			substr(Obter_desc_nivel_capacid_ecog(ie_nivel_ecog),1,250) ds_resultado,
			pkg_date_utils.get_time(a.dt_avaliacao,coalesce(to_char(a.nr_hora,'00'),to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss'))) dt_apap
	from	ESCALA_ECOG A
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	order by  dt_avaliacao;

  C111 CURSOR FOR
	SELECT	nr_sequencia,
      dt_avaliacao,
      qt_pontos,
      pkg_date_utils.get_time(a.dt_avaliacao,to_char(round(a.dt_avaliacao,'hh24'),'hh24:mi:ss')) dt_apap,
      substr(obter_desc_resul_score_flex_2(qt_pontos,nr_seq_escala),1,255) ds_resultado
	from	escala_eif_ii a
	where	nr_atendimento = nr_atendimento_p
	and		dt_avaliacao between dt_inicial_w and dt_final_w
	and		coalesce(ie_situacao,'A') = 'A'
	and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
  and  nr_seq_escala  = nr_seq_score_flex_w
  order by  dt_avaliacao;

C112 CURSOR FOR
	SELECT NR_SEQUENCIA,
	DT_REGISTRO,
	QT_VEF1,
	QT_VEF1_PREV,
	QT_CAPACI_VITAL,
	QT_CAPAC_PUL_TOTAL,
	QT_CAPAC_VITAL_FORC,
	QT_CAPA_RES_FUN,
	QT_FLUX_EXP_MED,
	QT_INDICE_TIFFENEAU,
	QT_PICO_FLUX_EXP,
	QT_PICO_FLUXO_RESP_PREV,
	QT_TEF,
	QT_CAPAC_INSP,
	QT_VOL_RES,
	QT_VOL_RES_EXP,
	QT_VOL_CORRENTE,
	QT_VOL_RES_INSP,
	--somente_numero(to_char(round(dt_registro,'hh24'),'hh24')) NR_HORA_FP,
	pkg_date_utils.get_time(dt_registro,to_char(round(dt_registro,'hh24'),'hh24:mi:ss')) dt_apap
	from	ATENDIMENTO_CAPAC_PULMONAR
	where	nr_atendimento	= nr_atendimento_p
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	coalesce(dt_inativacao::text, '') = ''
	and	dt_registro between dt_inicial_w and dt_final_w
	and	Apap_Obter_Se_Exibe_Grupo(nr_seq_grupo_w,nm_usuario) = 'S';

solucao_item CURSOR FOR
	SELECT	a.nr_prescricao,
			x.nr_seq_solucao,
			SUBSTR(coalesce(trim(both x.ds_solucao),obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240) ds_solucao
	FROM	prescr_solucao x,
			prescr_medica a,
			prescr_material b
	WHERE	a.nr_prescricao = x.nr_prescricao
	AND		x.nr_prescricao = b.nr_prescricao
	AND		x.nr_seq_solucao = b.nr_sequencia_solucao
    AND     nr_atendimento = nr_atendimento_p
	AND 	a.dt_validade_prescr > clock_timestamp()
	AND 	coalesce(a.dt_suspensao::text, '') = ''
	AND		coalesce(x.dt_suspensao::text, '') = ''
	AND		coalesce(x.nr_seq_dialise::text, '') = ''
	AND		obter_status_solucao_prescr(1,a.nr_prescricao, x.nr_seq_solucao) NOT IN ('T', 'N')
    GROUP BY a.nr_prescricao, x.nr_seq_solucao, SUBSTR(coalesce(trim(both x.ds_solucao),obter_prim_comp_sol(a.nr_prescricao,x.nr_seq_solucao)),1,240);

solucao_valores CURSOR FOR
	SELECT	MAX(a.qt_volume) qt_volume,
			a.dt_apap
	FROM	atendimento_perda_ganho a
	WHERE	a.nr_seq_evento_adep IN (
										SELECT	b.nr_sequencia
										FROM	prescr_solucao_evento b,
												prescr_solucao a
										WHERE	b.nr_prescricao = a.nr_prescricao
										AND		b.nr_seq_solucao = a.nr_seq_solucao
										AND		b.nr_seq_solucao = solucao_item_nr_seq_solucao_w
										AND		b.nr_prescricao = solucao_item_nr_prescricao_w
									)
    AND     dt_apap BETWEEN dt_inicial_solucao_w AND dt_final_solucao_w
	AND		a.ie_situacao = 'A'
    GROUP BY a.dt_apap;

procedure insert_data(
	nr_seq_registro_p		bigint,
	dt_registro_p			timestamp,
	vl_resultado_p			bigint,
	ds_resultado_p			text,
	nr_seq_apap_inf_p		bigint,
	dt_apap_p			timestamp := null) is

;
BEGIN

    if (nr_seq_registro_p IS NOT NULL AND nr_seq_registro_p::text <> '') then

        select 	count(1)
        into STRICT	qt_reg_2_w
        from	w_apap_pac_registro
        where	coalesce(dt_medicao,dt_registro) = coalesce(dt_apap_p,dt_registro_p)
        and		nr_seq_apap_inf = nr_seq_apap_inf_p
        and		nm_usuario = nm_usuario_p
        and		coalesce(vl_resultado,0) = coalesce(vl_resultado_p,0)
        and		coalesce(ds_resultado,'X') = coalesce(ds_resultado_p,'X');


        if (qt_reg_2_w = 0) then

            insert into w_apap_pac_registro(
                nr_sequencia,
                dt_atualizacao,
                nm_usuario,
                dt_atualizacao_nrec,
                nm_usuario_nrec,
                nr_seq_origem,
                dt_registro,
                vl_resultado,
                ds_resultado,
                nr_seq_apap_inf,
                dt_medicao)
            values (
                nextval('w_apap_pac_registro_seq'),
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                nr_seq_registro_p,
                dt_registro_p,
                vl_resultado_p,
                ds_resultado_p,
                nr_seq_apap_inf_p,
                coalesce(dt_apap_p,dt_registro_p));

        end if;

    end if;
    end;

procedure add_vector_data(
	nm_atributo_p			varchar2,
	cd_exp_label_p			varchar2,
	nr_seq_origem_p			number,
	ds_resultado_p			varchar2,
	vl_resultado_p			number,
	dt_registro_p			date,
	ie_grupo_p			varchar2,
	nr_seq_inf_p			number,
	ie_escala_p			varchar2,
	dt_apap_p			date,
	nr_seq_origem_aux_p		number ) is

    begin

        nr_indice_w := nr_indice_w + 1;

        vt_registro_w[nr_indice_w].nm_atributo := nm_atributo_p;
        vt_registro_w[nr_indice_w].ds_label := substr(obter_desc_expressao(cd_exp_label_p),1,60);
        vt_registro_w[nr_indice_w].nr_seq_origem := nr_seq_origem_p;
        vt_registro_w[nr_indice_w].ds_resultado := ds_resultado_p;
        vt_registro_w[nr_indice_w].vl_resultado := vl_resultado_p;
        vt_registro_w[nr_indice_w].dt_registro := dt_registro_p;
        vt_registro_w[nr_indice_w].ie_grupo := ie_grupo_p;
        vt_registro_w[nr_indice_w].nr_seq_inf := nr_seq_inf_p;
        vt_registro_w[nr_indice_w].ie_escala := ie_escala_p;
        vt_registro_w[nr_indice_w].dt_apap := dt_apap_p;
    end;

BEGIN
begin

delete	from w_apap_pac
where	nr_atendimento	= nr_atendimento_p
and	nm_usuario	= nm_usuario_p;

commit;

ie_rn_w := 'A';
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;

vl_param_decub_w := obter_param_usuario(1355, 6, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, vl_param_decub_w);

select	to_date(to_char(clock_timestamp(),'dd/mm/yyyy') || ' ' || coalesce(max(to_char(hr_inicio_apap,'hh24:mi:ss')),'06:00:01'),'dd/mm/yyyy hh24:mi:ss'),
	coalesce(max(ie_lib_sinal_vital),'N'),
	coalesce(max(ie_liberar_ganho_perda),'N'),
	coalesce(max(ie_glicemia_confirmada),'N')
into STRICT	hr_inicio_apap_w,
	ie_lib_sinal_vital_w,
	ie_lib_ganho_perda_w,
	ie_glicemia_confirmada_w
from	parametro_medico
where	cd_estabelecimento = cd_estabelecimento_w;

qt_hora_w := somente_numero(to_char(hr_inicio_apap_w,'hh24'));

if (nr_seq_apap_p IS NOT NULL AND nr_seq_apap_p::text <> '') then

	select nextval('w_apap_pac_seq')
	into STRICT	nr_seq_apap_pac_w
	;

	insert into w_apap_pac(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_fisica,
		nr_atendimento,
		nr_seq_modelo)
	values (
		nr_seq_apap_pac_w,
		cd_estabelecimento_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_p,
		nr_atendimento_p,
		nr_seq_apap_p);

	commit;


	open C00;
	loop
	fetch C00 into
		nr_seq_grupo_w,
		ie_tipo_grupo_w,
		ds_grupo_w,
		ie_manter_nulo_w,
		ie_informacao_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
		begin

		select nextval('w_apap_pac_grupo_seq')
		into STRICT	nr_seq_apap_pac_grupo_w
		;

		insert into w_apap_pac_grupo(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_grupo_inf,
			ds_grupo_informacao,
			nr_seq_item_pront,
			cd_funcao,
			nr_seq_mod_apap,
			ie_manter_nulo,
			ie_informacao)
		values (
			nr_seq_apap_pac_grupo_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ie_tipo_grupo_w,
			ds_grupo_w,
			null,
			null,
			nr_seq_apap_pac_w,
			ie_manter_nulo_w,
			ie_informacao_w);

--		Inicio do tratamento de insercao no VECTOR
		if (ie_tipo_grupo_w = 'SV') then
			open C02;
			loop
			fetch C02 into
				nr_seq_sinal_vital_w,
				dt_sinal_vital_w,
				ds_pupila_lado_w,
				qt_altura_cm_w,
				qt_bcf_w,
				qt_bcf_2_w,
				qt_bcf_3_w,
				qt_circunf_braco_w,
				qt_circunf_panturrilha_w,
				ie_decubito_w,
				ds_escala_dor_w,
				qt_freq_cardiaca_w,
				qt_freq_resp_w,
				qt_glicemia_capilar_w,
				ds_glic_extrapol_w,
				ie_glic_extrapol_w,
				qt_angulo_cabeceira_w,
				qt_imc_w,
				qt_insulina_w,
				qt_irradiancia_w,
				ds_sinal_focal_local_w,
				qt_maec_w,
				ie_membro_sat_o2_w,
				ie_membro_pa_w,
				qt_perimetro_abdominal_w,
				qt_perimetro_cefalico_w,
				qt_perimetro_toracico_w,
				qt_pa_sistolica_w,
				qt_pam_w,
				qt_pa_diastolica_w,
				qt_pae_w,
				qt_peso_w,
				qt_pressao_intra_abd_w,
				qt_pressao_intra_abd_h2o_w,
				qt_pressao_intra_cranio_w,
				qt_escala_dor_w,
				qt_ppa_w,
				qt_ppc_w,
				qt_pvc_h2o_w,
				qt_pvc_w,
				ds_pupila_reacao_luz_w,
				ds_pupila_reacao_luz_e_w,
				ds_pupila_alteracao_w,
				ds_ritmo_ecg_w,
				qt_saturacao_o2_w,
				qt_superf_corporia_w,
				ds_sinal_focal_w,
				ds_sitio_w,
				qt_segmento_st_w,
				qt_o2_suplementar_w,
				qt_temp_incubadora_w,
				qt_tamanho_pupila_w,
				qt_pupila_tam_esq_w,
				qt_temp_w,
				qt_pic_temp_w,
				ds_aparelho_pa_w,
				ds_lado_w,
				ds_manguito_w,
				ds_pressao_w,
				ds_topografia_dor_w,
				ie_unid_med_o2_suplem_w,
				dt_apap_w,
				qt_glicemia_mmol_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				if ((qt_peso_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_peso_w',nr_seq_sinal_vital_w,295698,null,qt_peso_w,dt_sinal_vital_w,'SV',12,null,dt_apap_w);
				end if;
				if ((qt_altura_cm_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_altura_cm_w',nr_seq_sinal_vital_w,283402,null,qt_altura_cm_w,dt_sinal_vital_w,'SV',13,null,dt_apap_w);
				end if;
				if (((qt_pa_sistolica_w > 0) or (ie_apresenta_zero_w = 'S')) and
					 ((qt_pa_diastolica_w > 0) or (ie_apresenta_zero_w = 'S'))) then
					add_vector_data('qt_pa_sistolica_w',nr_seq_sinal_vital_w,295132,null,qt_pa_sistolica_w,dt_sinal_vital_w,'SV',14,null,dt_apap_w);
				end if;
				if ((qt_freq_cardiaca_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_freq_cardiaca_w',nr_seq_sinal_vital_w,311848,null,qt_freq_cardiaca_w,dt_sinal_vital_w,'SV',15,null,dt_apap_w);
				end if;
				if ((qt_freq_resp_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_freq_resp_w',nr_seq_sinal_vital_w,558642,null,qt_freq_resp_w,dt_sinal_vital_w,'SV',16,null,dt_apap_w);
				end if;
				if ((qt_temp_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_temp_w',nr_seq_sinal_vital_w,299180,null,qt_temp_w,dt_sinal_vital_w,'SV',17,null,dt_apap_w);
				end if;
				if ((qt_pvc_h2o_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_pvc_h2o_w',nr_seq_sinal_vital_w,296667,null,qt_pvc_h2o_w,dt_sinal_vital_w,'SV',21,null,dt_apap_w);
				end if;
				if ((qt_pa_diastolica_w > 0) or (ie_apresenta_zero_w = 'S')) and
					((qt_pa_sistolica_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_pa_diastolica_w',nr_seq_sinal_vital_w,305525,null,qt_pa_diastolica_w,dt_sinal_vital_w,'SV',23,null,dt_apap_w);
				end if;
				if ((qt_pam_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_pam_w',nr_seq_sinal_vital_w,310722,null,qt_pam_w,dt_sinal_vital_w,'SV',24,null,dt_apap_w);
				end if;
				if (ds_ritmo_ecg_w IS NOT NULL AND ds_ritmo_ecg_w::text <> '') then
					add_vector_data('ds_ritmo_ecg_w',nr_seq_sinal_vital_w,297915,ds_ritmo_ecg_w,null,dt_sinal_vital_w,'SV',43,null,dt_apap_w);
				end if;
				if (ds_escala_dor_w IS NOT NULL AND ds_escala_dor_w::text <> '') then
					add_vector_data('ds_escala_dor_w',nr_seq_sinal_vital_w,289382,ds_escala_dor_w,null,dt_sinal_vital_w,'SV',44,null,dt_apap_w);
				end if;
				if (qt_escala_dor_w >= 0) then
					add_vector_data('qt_escala_dor_w',nr_seq_sinal_vital_w,683498,null,qt_escala_dor_w,dt_sinal_vital_w,'SV',45,null,dt_apap_w);
				end if;
				if ((qt_pressao_intra_cranio_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_pressao_intra_cranio_w',nr_seq_sinal_vital_w,603560,null,qt_pressao_intra_cranio_w,dt_sinal_vital_w,'SV',47,null,dt_apap_w);
				end if;
				if ((qt_temp_incubadora_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_temp_incubadora_w',nr_seq_sinal_vital_w,683508,null,qt_temp_incubadora_w,dt_sinal_vital_w,'SV',48,null,dt_apap_w);
				end if;
				if ((qt_pressao_intra_abd_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_pressao_intra_abd_w',nr_seq_sinal_vital_w,603558,null,qt_pressao_intra_abd_w,dt_sinal_vital_w,'SV',49,null,dt_apap_w);
				end if;
				if ((qt_glicemia_capilar_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_glicemia_capilar_w',nr_seq_sinal_vital_w,304479,null,qt_glicemia_capilar_w,dt_sinal_vital_w,'SV',51,null,dt_apap_w);
				end if;
				if ((qt_insulina_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_insulina_w',nr_seq_sinal_vital_w,492845,null,qt_insulina_w,dt_sinal_vital_w,'SV',52,null,dt_apap_w);
				end if;
				if ((qt_maec_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_maec_w',nr_seq_sinal_vital_w,292819,null,qt_maec_w,dt_sinal_vital_w,'SV',53,null,dt_apap_w);
				end if;
				if ((qt_saturacao_o2_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_saturacao_o2_w',nr_seq_sinal_vital_w,306254,null,qt_saturacao_o2_w,dt_sinal_vital_w,'SV',54,null,dt_apap_w);
				end if;
				if ((qt_pae_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_pae_w',nr_seq_sinal_vital_w,305546,null,qt_pae_w,dt_sinal_vital_w,'SV',55,null,dt_apap_w);
				end if;
				if ((qt_bcf_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_bcf_w',nr_seq_sinal_vital_w,284274,null,qt_bcf_w,dt_sinal_vital_w,'SV',56,null,dt_apap_w);
				end if;
				if ((qt_pvc_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_pvc_w',nr_seq_sinal_vital_w,296668,null,qt_pvc_w,dt_sinal_vital_w,'SV',129,null,dt_apap_w);
				end if;
				if ((qt_perimetro_cefalico_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_perimetro_cefalico_w',nr_seq_sinal_vital_w,295112,null,qt_perimetro_cefalico_w,dt_sinal_vital_w,'SV',130,null,dt_apap_w);
				end if;
				if ((qt_perimetro_toracico_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_perimetro_toracico_w',nr_seq_sinal_vital_w,623035,null,qt_perimetro_toracico_w,dt_sinal_vital_w,'SV',131,null,dt_apap_w);
				end if;
				if ((qt_perimetro_abdominal_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_perimetro_abdominal_w',nr_seq_sinal_vital_w,683496,null,qt_perimetro_abdominal_w,dt_sinal_vital_w,'SV',132,null,dt_apap_w);
				end if;
				if ((qt_segmento_st_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_segmento_st_w',nr_seq_sinal_vital_w,683504,null,qt_segmento_st_w,dt_sinal_vital_w,'SV',133,null,dt_apap_w);
				end if;
				if ((qt_superf_corporia_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_superf_corporia_w',nr_seq_sinal_vital_w,558624,null,qt_superf_corporia_w,dt_sinal_vital_w,'SV',134,null,dt_apap_w);
				end if;
				if ((qt_imc_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_imc_w',nr_seq_sinal_vital_w,291697,null,qt_imc_w,dt_sinal_vital_w,'SV',135,null,dt_apap_w);
				end if;
				if (ie_membro_pa_w IS NOT NULL AND ie_membro_pa_w::text <> '') then
					add_vector_data('ie_membro_pa_w',nr_seq_sinal_vital_w,293184,ie_membro_pa_w,null,dt_sinal_vital_w,'SV',141,null,dt_apap_w);
				end if;
				if (ie_decubito_w IS NOT NULL AND ie_decubito_w::text <> '') then
					if (vl_param_decub_w = 'S') then
						add_vector_data('ie_decubito_w',nr_seq_sinal_vital_w,287353,ie_decubito_w,null,dt_sinal_vital_w,'SV',162,null,dt_apap_w);
					else
						add_vector_data('ie_decubito_w',nr_seq_sinal_vital_w,287353,substr(obter_valor_dominio(2279,ie_decubito_w),1,50),null,dt_sinal_vital_w,'SV',162,null,dt_apap_w);
					end if;
				end if;
				if (qt_tamanho_pupila_w IS NOT NULL AND qt_tamanho_pupila_w::text <> '') then
					add_vector_data('qt_tamanho_pupila_w',nr_seq_sinal_vital_w,683510,null,qt_tamanho_pupila_w,dt_sinal_vital_w,'SV',190,null,dt_apap_w);
				end if;
				if (ds_pupila_reacao_luz_w IS NOT NULL AND ds_pupila_reacao_luz_w::text <> '') then
					add_vector_data('ds_pupila_reacao_luz_w',nr_seq_sinal_vital_w,683500,ds_pupila_reacao_luz_w,null,dt_sinal_vital_w,'SV',191,null,dt_apap_w);
				end if;
				if (ds_pupila_alteracao_w IS NOT NULL AND ds_pupila_alteracao_w::text <> '') then
					add_vector_data('ds_pupila_alteracao_w',nr_seq_sinal_vital_w,683488,ds_pupila_alteracao_w,null,dt_sinal_vital_w,'SV',192,null,dt_apap_w);
				end if;
				if (ds_pupila_lado_w IS NOT NULL AND ds_pupila_lado_w::text <> '') then
					add_vector_data('ds_pupila_lado_w',nr_seq_sinal_vital_w,292421,ds_pupila_lado_w,null,dt_sinal_vital_w,'SV',193,null,dt_apap_w);
				end if;
				if (ds_sinal_focal_w IS NOT NULL AND ds_sinal_focal_w::text <> '') then
					add_vector_data('ds_sinal_focal_w',nr_seq_sinal_vital_w,298524,ds_sinal_focal_w,null,dt_sinal_vital_w,'SV',194,null,dt_apap_w);
				end if;
				if (ds_sinal_focal_local_w IS NOT NULL AND ds_sinal_focal_local_w::text <> '') then
					add_vector_data('ds_sinal_focal_local_w',nr_seq_sinal_vital_w,292715,ds_sinal_focal_local_w,null,dt_sinal_vital_w,'SV',195,null,dt_apap_w);
				end if;
				if (qt_ppc_w IS NOT NULL AND qt_ppc_w::text <> '') then
					add_vector_data('qt_ppc_w',nr_seq_sinal_vital_w,603561,null,qt_ppc_w,dt_sinal_vital_w,'SV',207,null,dt_apap_w);
				end if;
				if (qt_ppa_w IS NOT NULL AND qt_ppa_w::text <> '') then
					add_vector_data('qt_ppa_w',nr_seq_sinal_vital_w,603559,null,qt_ppa_w,dt_sinal_vital_w,'SV',208,null,dt_apap_w);
				end if;
				if (qt_pupila_tam_esq_w IS NOT NULL AND qt_pupila_tam_esq_w::text <> '') then
					add_vector_data('qt_pupila_tam_esq_w',nr_seq_sinal_vital_w,683512,null,qt_pupila_tam_esq_w,dt_sinal_vital_w,'SV',210,null,dt_apap_w);
				end if;
				if (qt_o2_suplementar_w IS NOT NULL AND qt_o2_suplementar_w::text <> '') then
					add_vector_data('qt_o2_suplementar_w',nr_seq_sinal_vital_w,683506,null,qt_o2_suplementar_w,dt_sinal_vital_w,'SV',217,null,dt_apap_w);
					if (ie_unid_med_o2_suplem_w IS NOT NULL AND ie_unid_med_o2_suplem_w::text <> '') then
						ds_unid_med_w := obter_valor_dominio(3574,ie_unid_med_o2_suplem_w);
					end if;
				end if;
				if (ds_sitio_w IS NOT NULL AND ds_sitio_w::text <> '') then
					add_vector_data('ds_sitio_w',nr_seq_sinal_vital_w,298560,ds_sitio_w,null,dt_sinal_vital_w,'SV',227,null,dt_apap_w);
				end if;
				if (qt_angulo_cabeceira_w > 0) then
					add_vector_data('qt_angulo_cabeceira_w',nr_seq_sinal_vital_w,291001,null,qt_angulo_cabeceira_w,dt_sinal_vital_w,'SV',238,null,dt_apap_w);
				end if;
				if (ie_membro_sat_o2_w IS NOT NULL AND ie_membro_sat_o2_w::text <> '') then
					add_vector_data('ie_membro_sat_o2_w',nr_seq_sinal_vital_w,683494,ie_membro_sat_o2_w,null,dt_sinal_vital_w,'SV',239,null,dt_apap_w);
				end if;
				if (qt_pic_temp_w > 0) then
					add_vector_data('qt_pic_temp_w',nr_seq_sinal_vital_w,683514,null,qt_pic_temp_w,dt_sinal_vital_w,'SV',240,null,dt_apap_w);
				end if;
				if (qt_circunf_panturrilha_w > 0) then
					add_vector_data('qt_circunf_panturrilha_w',nr_seq_sinal_vital_w,657948,null,qt_circunf_panturrilha_w,dt_sinal_vital_w,'SV',241,null,dt_apap_w);
				end if;
				if (qt_circunf_braco_w > 0) then
					add_vector_data('qt_circunf_braco_w',nr_seq_sinal_vital_w,657951,null,qt_circunf_braco_w,dt_sinal_vital_w,'SV',242,null,dt_apap_w);
				end if;
				if (qt_bcf_2_w > 0) then
					add_vector_data('qt_bcf_2_w',nr_seq_sinal_vital_w,302702,null,qt_bcf_2_w,dt_sinal_vital_w,'SV',243,null,dt_apap_w);
				end if;
				if (ie_glic_extrapol_w IS NOT NULL AND ie_glic_extrapol_w::text <> '') then
					add_vector_data('ie_glic_extrapol_w',nr_seq_sinal_vital_w,683490,ie_glic_extrapol_w,null,dt_sinal_vital_w,'SV',244,null,dt_apap_w);
				end if;
				if (ds_pupila_reacao_luz_e_w IS NOT NULL AND ds_pupila_reacao_luz_e_w::text <> '') then
					add_vector_data('ds_pupila_reacao_luz_e_w',nr_seq_sinal_vital_w,683502,ds_pupila_reacao_luz_e_w,null,dt_sinal_vital_w,'SV',246,null,dt_apap_w);
				end if;
				if (qt_bcf_3_w > 0) then
					add_vector_data('qt_bcf_3_w',nr_seq_sinal_vital_w,302703,null,qt_bcf_3_w,dt_sinal_vital_w,'SV',247,null,dt_apap_w);
				end if;
				if (qt_pressao_intra_abd_h2o_w > 0) then
					add_vector_data('qt_pressao_intra_abd_h2o_w',nr_seq_sinal_vital_w,603558,null,qt_pressao_intra_abd_h2o_w,dt_sinal_vital_w,'SV',264,null,dt_apap_w);
				end if;
				if (ds_glic_extrapol_w IS NOT NULL AND ds_glic_extrapol_w::text <> '') then
					add_vector_data('ds_glic_extrapol_w',nr_seq_sinal_vital_w,705328,ds_glic_extrapol_w,null,dt_sinal_vital_w,'SV',279,null,dt_apap_w);
				end if;
				if (qt_irradiancia_w > 0) then
					add_vector_data('qt_irradiancia_w',nr_seq_sinal_vital_w,292248,null,qt_irradiancia_w,dt_sinal_vital_w,'SV',281,null,dt_apap_w);
				end if;
				if ((qt_glicemia_mmol_w > 0) or (ie_apresenta_zero_w = 'S')) then
					add_vector_data('qt_irradiancia_w',nr_seq_sinal_vital_w,925420,null,qt_glicemia_mmol_w,dt_sinal_vital_w,'SV',358,null,dt_apap_w);
				end if;

				end;
			end loop;
			close C02;
		elsif (ie_tipo_grupo_w = 'ABP') then
			open C03;
			loop
			fetch C03 into
				nr_seq_anal_bio_w,
				qt_tca_w,
				dt_analise_anal_bio_w,
				dt_apap_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				add_vector_data('nr_seq_anal_bio_w',nr_seq_anal_bio_w,299128,null,qt_tca_w,dt_analise_anal_bio_w,'ABP',null,'1',dt_apap_w);
				end;
			end loop;
			close C03;
		elsif (ie_tipo_grupo_w = 'AP') then
			open C04;
			loop
			fetch C04 into
				nr_seq_apache_w,
				ie_ira_w,
				ie_po_urgencia_w,
				qt_temp_axilar_w,
				qt_bicarbonato_serico_w,
				qt_pas_w,
				qt_ph_arterial_w,
				qt_pad_w,
				qt_sodio_serico_w,
				qt_pal_media_w,
				qt_potassio_serico_w,
				qt_freq_card_w,
				qt_creatinina_w,
				qt_freq_resp_apache_w,
				qt_hematocrito_w,
				qt_oxigenacao_fio2_w,
				qt_globulos_brancos_w,
				qt_oxigenacao_pco2_w,
				qt_pb_w,
				qt_oxigenacao_pao2_w,
				qt_escala_glasgow_w,
				qt_oxigenacao_paao2_w,
				ie_tipo_categoria_w,
				nr_seq_cat_diag_w,
				qt_pont_var_fisiologicas_w,
				qt_apache_ii_w,
				qt_pont_idade_w,
				qt_risco_calculado_w,
				qt_pont_doenca_cronica_w,
				pr_risco_w,
				qt_peso_cat_diag_w,
				dt_apache_w,
				dt_apap_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				if (ie_ira_w IS NOT NULL AND ie_ira_w::text <> '') then
					add_vector_data('ie_ira_w',nr_seq_apache_w,292244,ie_ira_w,null,dt_apache_w,'AP',null,'1',dt_apap_w);
				end if;
				if (ie_po_urgencia_w IS NOT NULL AND ie_po_urgencia_w::text <> '') then
					add_vector_data('ie_po_urgencia_w',nr_seq_apache_w,295997,ie_po_urgencia_w,null,dt_apache_w,'AP',null,'2',dt_apap_w);
				end if;
				if (qt_temp_axilar_w > 0) then
					add_vector_data('qt_temp_axilar_w',nr_seq_apache_w,299209,null,qt_temp_axilar_w,dt_apache_w,'AP',null,'3',dt_apap_w);
				end if;
				if (qt_bicarbonato_serico_w > 0) then
					add_vector_data('qt_bicarbonato_serico_w',nr_seq_apache_w,284303,null,qt_bicarbonato_serico_w,dt_apache_w,'AP',null,'4',dt_apap_w);
				end if;
				if (qt_pas_w > 0) then
					add_vector_data('qt_pas_w',nr_seq_apache_w,295152,null,qt_pas_w,dt_apache_w,'AP',null,'5',dt_apap_w);
				end if;
				if (qt_ph_arterial_w > 0) then
					add_vector_data('qt_ph_arterial_w',nr_seq_apache_w,295904,null,qt_ph_arterial_w,dt_apache_w,'AP',null,'6',dt_apap_w);
				end if;
				if (qt_pad_w > 0) then
					add_vector_data('qt_pad_w',nr_seq_apache_w,295131,null,qt_pad_w,dt_apache_w,'AP',null,'7',dt_apap_w);
				end if;
				if (qt_sodio_serico_w > 0) then
					add_vector_data('qt_sodio_serico_w',nr_seq_apache_w,298627,null,qt_sodio_serico_w,dt_apache_w,'AP',null,'8',dt_apap_w);
				end if;
				if (qt_pal_media_w > 0) then
					add_vector_data('qt_pal_media_w',nr_seq_apache_w,296234,null,qt_pal_media_w,dt_apache_w,'AP',null,'9',dt_apap_w);
				end if;
				if (qt_potassio_serico_w > 0) then
					add_vector_data('qt_potassio_serico_w',nr_seq_apache_w,296129,null,qt_potassio_serico_w,dt_apache_w,'AP',null,'10',dt_apap_w);
				end if;
				if (qt_freq_card_w > 0) then
					add_vector_data('qt_freq_card_w',nr_seq_apache_w,290491,null,qt_freq_card_w,dt_apache_w,'AP',null,'11',dt_apap_w);
				end if;
				if (qt_creatinina_w > 0) then
					add_vector_data('qt_creatinina_w',nr_seq_apache_w,286348,null,qt_creatinina_w,dt_apache_w,'AP',null,'12',dt_apap_w);
				end if;
				if (qt_freq_resp_apache_w > 0) then
					add_vector_data('qt_freq_resp_apache_w',nr_seq_apache_w,290497,null,qt_freq_resp_apache_w,dt_apache_w,'AP',null,'13',dt_apap_w);
				end if;
				if (qt_hematocrito_w > 0) then
					add_vector_data('qt_hematocrito_w',nr_seq_apache_w,291234,null,qt_hematocrito_w,dt_apache_w,'AP',null,'14',dt_apap_w);
				end if;
				if (qt_oxigenacao_fio2_w > 0) then
					add_vector_data('qt_oxigenacao_fio2_w',nr_seq_apache_w,295101,null,qt_oxigenacao_fio2_w,dt_apache_w,'AP',null,'15',dt_apap_w);
				end if;
				if (qt_globulos_brancos_w > 0) then
					add_vector_data('qt_globulos_brancos_w',nr_seq_apache_w,290934,null,qt_globulos_brancos_w,dt_apache_w,'AP',null,'16',dt_apap_w);
				end if;
				if (qt_oxigenacao_pco2_w > 0) then
					add_vector_data('qt_oxigenacao_pco2_w',nr_seq_apache_w,295103,null,qt_oxigenacao_pco2_w,dt_apache_w,'AP',null,'17',dt_apap_w);
				end if;
				if (qt_pb_w > 0) then
					add_vector_data('qt_pb_w',nr_seq_apache_w,296237,null,qt_pb_w,dt_apache_w,'AP',null,'18',dt_apap_w);
				end if;
				if (qt_oxigenacao_pao2_w > 0) then
					add_vector_data('qt_oxigenacao_pao2_w',nr_seq_apache_w,295104,null,qt_oxigenacao_pao2_w,dt_apache_w,'AP',null,'19',dt_apap_w);
				end if;
				if (qt_escala_glasgow_w > 0) then
					add_vector_data('qt_escala_glasgow_w',nr_seq_apache_w,289380,null,qt_escala_glasgow_w,dt_apache_w,'AP',null,'20',dt_apap_w);
				end if;
				if (qt_oxigenacao_paao2_w > 0) then
					add_vector_data('qt_oxigenacao_paao2_w',nr_seq_apache_w,295102,null,qt_oxigenacao_paao2_w,dt_apache_w,'AP',null,'21',dt_apap_w);
				end if;
				if (ie_tipo_categoria_w > 0) then
					add_vector_data('ie_tipo_categoria_w',nr_seq_apache_w,299464,null,ie_tipo_categoria_w,dt_apache_w,'AP',null,'22',dt_apap_w);
				end if;
				if (nr_seq_cat_diag_w > 0) then
					add_vector_data('nr_seq_cat_diag_w',nr_seq_apache_w,284687,null,nr_seq_cat_diag_w,dt_apache_w,'AP',null,'23',dt_apap_w);
				end if;
				if (qt_pont_var_fisiologicas_w > 0) then
					add_vector_data('qt_pont_var_fisiologicas_w',nr_seq_apache_w,301571,null,qt_pont_var_fisiologicas_w,dt_apache_w,'AP',null,'24',dt_apap_w);
				end if;
				if (qt_apache_ii_w > 0) then
					add_vector_data('qt_apache_ii_w',nr_seq_apache_w,283578,null,qt_apache_ii_w,dt_apache_w,'AP',null,'25',dt_apap_w);
				end if;
				if (qt_pont_idade_w > 0) then
					add_vector_data('qt_pont_idade_w',nr_seq_apache_w,296054,null,qt_pont_idade_w,dt_apache_w,'AP',null,'26',dt_apap_w);
				end if;
				if (qt_risco_calculado_w > 0) then
					add_vector_data('qt_risco_calculado_w',nr_seq_apache_w,283008,null,qt_risco_calculado_w,dt_apache_w,'AP',null,'27',dt_apap_w);
				end if;
				if (qt_pont_doenca_cronica_w > 0) then
					add_vector_data('qt_pont_doenca_cronica_w',nr_seq_apache_w,288159,null,qt_pont_doenca_cronica_w,dt_apache_w,'AP',null,'28',dt_apap_w);
				end if;
				if (pr_risco_w > 0) then
					add_vector_data('pr_risco_w',nr_seq_apache_w,283007,null,pr_risco_w,dt_apache_w,'AP',null,'29',dt_apap_w);
				end if;
				if (qt_peso_cat_diag_w IS NOT NULL AND qt_peso_cat_diag_w::text <> '') then
					add_vector_data('qt_peso_cat_diag_w',nr_seq_apache_w,295712,null,qt_peso_cat_diag_w,dt_apache_w,'AP',null,'30',dt_apap_w);
				end if;
				end;
			end loop;
			close C04;
		elsif (ie_tipo_grupo_w = 'AIV') then
			open C05;
			loop
			fetch C05 into
				nr_seq_aiv_w,
				qt_temp_aiv_w,
				qt_na_aiv_w,
				qt_pa_sist_aiv_w,
				qt_glicose_aiv_w,
				qt_pa_diast_aiv_w,
				qt_creatinina_aiv_w,
				qt_fc_aiv_w,
				qt_ureia_aiv_w,
				qt_freq_resp_aiv_w,
				qt_diurese_aiv_w,
				qt_altitude_aiv_w,
				qt_albumina_aiv_w,
				qt_fio2_aiv_w,
				qt_bilirrubina_aiv_w,
				qt_ph_aiv_w,
				qt_glob_vermelhos_aiv_w,
				qt_po2_aiv_w,
				qt_glob_brancos_aiv_w,
				qt_pco2_aiv_w,
				qt_escala_glasgow_aiv_w,
				qt_idade_aiv_w,
				qt_dias_antes_uti_aiv_w,
				qt_pontuacao_aiv_w,
				qt_pontos_aps_aiv_w,
				qt_pontos_logit_aiv_w,
				pr_mortalidade_aiv_w,
				qt_dias_uti_aiv_w,
				ie_glasgow_indis_aiv_w,
				ie_glasgow_ocular_aiv_w,
				ie_glasgow_verbal_aiv_w,
				ie_glasgow_motora_aiv_w,
				ie_renal_aiv_w,
				ie_cancer_metastatico_aiv_w,
				ie_aids_aiv_w,
				ie_leuc_mileoma_mult_aiv_w,
				ie_hepatica_aiv_w,
				ie_imunosupressao_aiv_w,
				ie_linfoma_aiv_w,
				ie_cirrose_aiv_w,
				ie_origem_paciente_aiv_w,
				ie_emergencia_aiv_w,
				ie_readmissao_aiv_w,
				ie_ventilacao_aiv_w,
				ie_terapia_trombo_aiv_w,
				cd_diag_map_aiv_w,
				ds_diagnostico_aiv_w,
				dt_avaliacao_aiv_w,
				dt_apap_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin
				if (qt_temp_aiv_w > 0) then
					add_vector_data('qt_temp_aiv_w',nr_seq_aiv_w,299184,null,qt_temp_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'1',dt_apap_w);
				end if;
				if (qt_na_aiv_w > 0) then
					add_vector_data('qt_na_aiv_w',nr_seq_aiv_w,293903,null,qt_na_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'2',dt_apap_w);
				end if;
				if (qt_pa_sist_aiv_w > 0) then
					add_vector_data('qt_pa_sist_aiv_w',nr_seq_aiv_w,295152,null,qt_pa_sist_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'3',dt_apap_w);
				end if;
				if (qt_glicose_aiv_w > 0) then
					add_vector_data('qt_glicose_aiv_w',nr_seq_aiv_w,290926,null,qt_glicose_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'4',dt_apap_w);
				end if;
				if (qt_pa_diast_aiv_w > 0) then
					add_vector_data('qt_pa_diast_aiv_w',nr_seq_aiv_w,295131,null,qt_pa_diast_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'5',dt_apap_w);
				end if;
				if (qt_creatinina_aiv_w > 0) then
					add_vector_data('qt_creatinina_aiv_w',nr_seq_aiv_w,286348,null,qt_creatinina_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'6',dt_apap_w);
				end if;
				if (qt_fc_aiv_w > 0) then
					add_vector_data('qt_fc_aiv_w',nr_seq_aiv_w,290479,null,qt_fc_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'7',dt_apap_w);
				end if;
				if (qt_ureia_aiv_w > 0) then
					add_vector_data('qt_ureia_aiv_w',nr_seq_aiv_w,284379,null,qt_ureia_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'8',dt_apap_w);
				end if;
				if (qt_freq_resp_aiv_w > 0) then
					add_vector_data('qt_freq_resp_aiv_w',nr_seq_aiv_w,290497,null,qt_freq_resp_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'9',dt_apap_w);
				end if;
				if (qt_diurese_aiv_w > 0) then
					add_vector_data('qt_diurese_aiv_w',nr_seq_aiv_w,288064,null,qt_diurese_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'10',dt_apap_w);
				end if;
				if (qt_altitude_aiv_w > 0) then
					add_vector_data('qt_altitude_aiv_w',nr_seq_aiv_w,283398,null,qt_altitude_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'11',dt_apap_w);
				end if;
				if (qt_albumina_aiv_w > 0) then
					add_vector_data('qt_albumina_aiv_w',nr_seq_aiv_w,283334,null,qt_albumina_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'12',dt_apap_w);
				end if;
				if (qt_fio2_aiv_w > 0) then
					add_vector_data('qt_fio2_aiv_w',nr_seq_aiv_w,290163,null,qt_fio2_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'13',dt_apap_w);
				end if;
				if (qt_bilirrubina_aiv_w > 0) then
					add_vector_data('qt_bilirrubina_aiv_w',nr_seq_aiv_w,284306,null,qt_bilirrubina_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'14',dt_apap_w);
				end if;
				if (qt_ph_aiv_w > 0) then
					add_vector_data('qt_ph_aiv_w',nr_seq_aiv_w,683518,null,qt_ph_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'15',dt_apap_w);
				end if;
				if (qt_glob_vermelhos_aiv_w > 0) then
					add_vector_data('qt_glob_vermelhos_aiv_w',nr_seq_aiv_w,291232,null,qt_glob_vermelhos_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'16',dt_apap_w);
				end if;
				if (qt_po2_aiv_w > 0) then
					add_vector_data('qt_po2_aiv_w',nr_seq_aiv_w,295996,null,qt_po2_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'17',dt_apap_w);
				end if;
				if (qt_glob_brancos_aiv_w > 0) then
					add_vector_data('qt_glob_brancos_aiv_w',nr_seq_aiv_w,290930,null,qt_glob_brancos_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'18',dt_apap_w);
				end if;
				if (qt_pco2_aiv_w > 0) then
					add_vector_data('qt_pco2_aiv_w',nr_seq_aiv_w,295361,null,qt_pco2_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'19',dt_apap_w);
				end if;
				if (qt_escala_glasgow_aiv_w > 0) then
					add_vector_data('qt_escala_glasgow_aiv_w',nr_seq_aiv_w,290908,null,qt_escala_glasgow_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'24',dt_apap_w);
				end if;
				if (qt_idade_aiv_w > 0) then
					add_vector_data('qt_idade_aiv_w',nr_seq_aiv_w,291547,null,qt_idade_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'25',dt_apap_w);
				end if;
				if (qt_dias_antes_uti_aiv_w > 0) then
					add_vector_data('qt_dias_antes_uti_aiv_w',nr_seq_aiv_w,287762,null,qt_dias_antes_uti_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'35',dt_apap_w);
				end if;
				if (qt_pontuacao_aiv_w > 0) then
					add_vector_data('qt_pontuacao_aiv_w',nr_seq_aiv_w,296048,null,qt_pontuacao_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'41',dt_apap_w);
				end if;
				if (qt_pontos_aps_aiv_w > 0) then
					add_vector_data('qt_pontos_aps_aiv_w',nr_seq_aiv_w,296049,null,qt_pontos_aps_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'42',dt_apap_w);
				end if;
				if (qt_pontos_logit_aiv_w > 0) then
					add_vector_data('qt_pontos_logit_aiv_w',nr_seq_aiv_w,292760,null,qt_pontos_logit_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'43',dt_apap_w);
				end if;
				if (pr_mortalidade_aiv_w > 0) then
					add_vector_data('pr_mortalidade_aiv_w',nr_seq_aiv_w,293434,null,pr_mortalidade_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'45',dt_apap_w);
				end if;
				if (qt_dias_uti_aiv_w > 0) then
					add_vector_data('qt_dias_uti_aiv_w',nr_seq_aiv_w,287886,null,qt_dias_uti_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'46',dt_apap_w);
				end if;
				if (ie_glasgow_indis_aiv_w IS NOT NULL AND ie_glasgow_indis_aiv_w::text <> '') then
					add_vector_data('ie_glasgow_indis_aiv_w',nr_seq_aiv_w,290908,ie_glasgow_indis_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'20',dt_apap_w);
				end if;
				if (ie_glasgow_ocular_aiv_w > 0) then
					add_vector_data('ie_glasgow_ocular_aiv_w',nr_seq_aiv_w,283058,null,ie_glasgow_ocular_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'21',dt_apap_w);
				end if;
				if (ie_glasgow_verbal_aiv_w > 0) then
					add_vector_data('ie_glasgow_verbal_aiv_w',nr_seq_aiv_w,297786,null,ie_glasgow_verbal_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'22',dt_apap_w);
				end if;
				if (ie_glasgow_motora_aiv_w > 0) then
					add_vector_data('ie_glasgow_motora_aiv_w',nr_seq_aiv_w,297784,null,ie_glasgow_motora_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'23',dt_apap_w);
				end if;
				if (ie_renal_aiv_w IS NOT NULL AND ie_renal_aiv_w::text <> '') then
					add_vector_data('ie_renal_aiv_w',nr_seq_aiv_w,296069,ie_renal_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'26',dt_apap_w);
				end if;
				if (ie_cancer_metastatico_aiv_w IS NOT NULL AND ie_cancer_metastatico_aiv_w::text <> '') then
					add_vector_data('ie_cancer_metastatico_aiv_w',nr_seq_aiv_w,296067,ie_cancer_metastatico_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'27',dt_apap_w);
				end if;
				if (ie_aids_aiv_w IS NOT NULL AND ie_aids_aiv_w::text <> '') then
					add_vector_data('ie_aids_aiv_w',nr_seq_aiv_w,296071,ie_aids_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'28',dt_apap_w);
				end if;
				if (ie_leuc_mileoma_mult_aiv_w IS NOT NULL AND ie_leuc_mileoma_mult_aiv_w::text <> '') then
					add_vector_data('ie_leuc_mileoma_mult_aiv_w',nr_seq_aiv_w,296073,ie_leuc_mileoma_mult_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'29',dt_apap_w);
				end if;
				if (ie_hepatica_aiv_w IS NOT NULL AND ie_hepatica_aiv_w::text <> '') then
					add_vector_data('ie_hepatica_aiv_w',nr_seq_aiv_w,296070,ie_hepatica_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'30',dt_apap_w);
				end if;
				if (ie_imunosupressao_aiv_w IS NOT NULL AND ie_imunosupressao_aiv_w::text <> '') then
					add_vector_data('ie_imunosupressao_aiv_w',nr_seq_aiv_w,296072,ie_imunosupressao_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'31',dt_apap_w);
				end if;
				if (ie_linfoma_aiv_w IS NOT NULL AND ie_linfoma_aiv_w::text <> '') then
					add_vector_data('ie_linfoma_aiv_w',nr_seq_aiv_w,296074,ie_linfoma_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'32',dt_apap_w);
				end if;
				if (ie_cirrose_aiv_w IS NOT NULL AND ie_cirrose_aiv_w::text <> '') then
					add_vector_data('ie_cirrose_aiv_w',nr_seq_aiv_w,296068,ie_cirrose_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'33',dt_apap_w);
				end if;
				if (ie_origem_paciente_aiv_w > 0) then
					add_vector_data('ie_origem_paciente_aiv_w',nr_seq_aiv_w,294947,null,ie_origem_paciente_aiv_w,dt_avaliacao_aiv_w,'AIV',null,'34',dt_apap_w);
				end if;
				if (ie_emergencia_aiv_w IS NOT NULL AND ie_emergencia_aiv_w::text <> '') then
					add_vector_data('ie_emergencia_aiv_w',nr_seq_aiv_w,284986,ie_emergencia_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'36',dt_apap_w);
				end if;
				if (ie_readmissao_aiv_w IS NOT NULL AND ie_readmissao_aiv_w::text <> '') then
					add_vector_data('ie_readmissao_aiv_w',nr_seq_aiv_w,297254,ie_readmissao_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'37',dt_apap_w);
				end if;
				if (ie_ventilacao_aiv_w IS NOT NULL AND ie_ventilacao_aiv_w::text <> '') then
					add_vector_data('ie_ventilacao_aiv_w',nr_seq_aiv_w,301622,ie_ventilacao_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'38',dt_apap_w);
				end if;
				if (ie_terapia_trombo_aiv_w IS NOT NULL AND ie_terapia_trombo_aiv_w::text <> '') then
					add_vector_data('ie_terapia_trombo_aiv_w',nr_seq_aiv_w,287700,ie_terapia_trombo_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'40',dt_apap_w);
				end if;
				if (cd_diag_map_aiv_w IS NOT NULL AND cd_diag_map_aiv_w::text <> '') then
					add_vector_data('cd_diag_map_aiv_w',nr_seq_aiv_w,287700,cd_diag_map_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'39',dt_apap_w);
				end if;
				if (ds_diagnostico_aiv_w IS NOT NULL AND ds_diagnostico_aiv_w::text <> '') then
					add_vector_data('ds_diagnostico_aiv_w',nr_seq_aiv_w,291705,ds_diagnostico_aiv_w,null,dt_avaliacao_aiv_w,'AIV',null,'39',dt_apap_w);
				end if;
				end;
			end loop;
			close C05;
		elsif (ie_tipo_grupo_w = 'CEM') then
			for r_C07 in C07 loop
				begin
				if (r_C07.qt_flixo_sanguineo > 0) then
					add_vector_data('qt_flixo_sanguineo',r_C07.nr_sequencia,778376,null,r_C07.qt_flixo_sanguineo,r_C07.dt_registro,'CEM',null,'1',r_C07.dt_apap);
				end if;
				if (r_C07.qt_ultra_filtracao > 0) then
					add_vector_data('qt_ultra_filtracao',r_C07.nr_sequencia,778384,null,r_C07.qt_ultra_filtracao,r_C07.dt_registro,'CEM',null,'2',r_C07.dt_apap);
				end if;
				if (r_C07.qt_rotacao_bomba > 0) then
					add_vector_data('qt_rotacao_bomba',r_C07.nr_sequencia,778386,null,r_C07.qt_rotacao_bomba,r_C07.dt_registro,'CEM',null,'3',r_C07.dt_apap);
				end if;
				if (r_C07.qt_fluxo_gas > 0) then
					add_vector_data('qt_fluxo_gas',r_C07.nr_sequencia,778388,null,r_C07.qt_fluxo_gas,r_C07.dt_registro,'CEM',null,'4',r_C07.dt_apap);
				end if;
				if (r_C07.qt_fio2 > 0) then
					add_vector_data('qt_fio2',r_C07.nr_sequencia,683549,null,r_C07.qt_fio2,r_C07.dt_registro,'CEM',null,'5',r_C07.dt_apap);
				end if;
				if (r_C07.qt_pressao_acesso > 0) then
					add_vector_data('qt_pressao_acesso',r_C07.nr_sequencia,778390,null,r_C07.qt_pressao_acesso,r_C07.dt_registro,'CEM',null,'6',r_C07.dt_apap);
				end if;
				if (r_C07.qt_pressao_pre_membrana > 0) then
					add_vector_data('qt_pressao_pre_membrana',r_C07.nr_sequencia,778392,null,r_C07.qt_pressao_pre_membrana,r_C07.dt_registro,'CEM',null,'7',r_C07.dt_apap);
				end if;
				if (r_C07.qt_pressao_pos_membrana > 0) then
					add_vector_data('qt_pressao_pos_membrana',r_C07.nr_sequencia,778394,null,r_C07.qt_pressao_pos_membrana,r_C07.dt_registro,'CEM',null,'8',r_C07.dt_apap);
				end if;
				if (r_C07.qt_temperatura > 0) then
					add_vector_data('qt_temperatura',r_C07.nr_sequencia,299210,null,r_C07.qt_temperatura,r_C07.dt_registro,'CEM',null,'9',r_C07.dt_apap);
				end if;
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'GL') then
			for r_C35 in C35 loop
				begin
				if (r_C35.qt_hgt > 0) then
					add_vector_data('qt_hgt',r_C35.nr_sequencia,778376,null,r_C35.qt_hgt,r_C35.dt_avaliacao,ie_tipo_grupo_w,181,'1',r_C35.dt_apap);
				end if;
				if (r_C35.qt_glicose_adm > 0) then
					add_vector_data('qt_glicose_adm',r_C35.nr_sequencia,778376,null,r_C35.qt_glicose_adm,r_C35.dt_avaliacao,ie_tipo_grupo_w,189,'1',r_C35.dt_apap);
				end if;
				add_vector_data('qt_bolus_adm',r_C35.nr_sequencia,778376,null,r_C35.qt_bolus_adm,r_C35.dt_avaliacao,ie_tipo_grupo_w,212,'1',r_C35.dt_apap);
				add_vector_data('qt_veloc_adm',r_C35.nr_sequencia,778376,null,r_C35.qt_veloc_adm,r_C35.dt_avaliacao,ie_tipo_grupo_w,213,'1',r_C35.dt_apap);
				end;
			end loop;

			for r_C36 in C36 loop
				begin
				if (r_C36.qt_glicemia > 0) then
					add_vector_data('qt_glicemia',r_C36.nr_sequencia,778376,null,r_C36.qt_glicemia,r_C36.dt_avaliacao,ie_tipo_grupo_w,182,'1',r_C36.dt_apap);
				end if;
				if (r_C36.QT_GLICEMIA_MMOL > 0) then
					add_vector_data('QT_GLICEMIA_MMOL',r_C36.nr_sequencia,929936,null,r_C36.QT_GLICEMIA_MMOL,r_C36.dt_avaliacao,ie_tipo_grupo_w,369,'1',r_C36.dt_apap);
				end if;
				if (r_C36.qt_ui_insulina_adm > 0) then
					add_vector_data('qt_ui_insulina_adm',r_C36.nr_sequencia,778376,null,r_C36.qt_ui_insulina_adm,r_C36.dt_avaliacao,ie_tipo_grupo_w,187,'1',r_C36.dt_apap);
				end if;
				if (r_C36.qt_glicose_adm > 0) then
					add_vector_data('qt_glicose_adm',r_C36.nr_sequencia,778376,null,r_C36.qt_glicose_adm,r_C36.dt_avaliacao,ie_tipo_grupo_w,188,'1',r_C36.dt_apap);
				end if;
				end;
			end loop;

			for r_C37 in C37 loop
				begin
				if (r_C37.qt_glicemia > 0) then
					add_vector_data('qt_glicemia',r_C37.nr_sequencia,778376,null,r_C37.qt_glicemia,r_C37.dt_avaliacao,ie_tipo_grupo_w,184,'1',R_C37.dt_apap);
				end if;
				end;
			end loop;


		elsif (ie_tipo_grupo_w = 'MR') then
			for r_c40 in c40 loop
				begin
				if (r_c40.qt_rel_pao2_fio2 IS NOT NULL AND r_c40.qt_rel_pao2_fio2::text <> '') then
					add_vector_data('qt_rel_pao2_fio2',r_c40.nr_sequencia,294152,null,R_C40.qt_rel_pao2_fio2,r_c40.dt_avaliacao,ie_tipo_grupo_w,18,'1',R_C40.dt_apap);
				end if;
				if (r_c40.ds_respiracao IS NOT NULL AND r_c40.ds_respiracao::text <> '') then
					add_vector_data('ds_respiracao',r_c40.nr_sequencia,294152,r_c40.ds_respiracao,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,89,'1',R_C40.dt_apap);
				end if;
				if (r_c40.ds_disp_resp_esp IS NOT NULL AND r_c40.ds_disp_resp_esp::text <> '') then
					add_vector_data('ds_disp_resp_esp_w',r_c40.nr_sequencia,294152,null,r_c40.ds_disp_resp_esp,r_c40.dt_avaliacao,ie_tipo_grupo_w,90,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_rima_labial IS NOT NULL AND r_c40.qt_rima_labial::text <> '') then
					add_vector_data('qt_rima_labial',r_c40.nr_sequencia,294152,null,r_c40.qt_rima_labial,r_c40.dt_avaliacao,ie_tipo_grupo_w,91,'1',R_C40.dt_apap);
				end if;
				if (r_c40.cd_mod_vent IS NOT NULL AND r_c40.cd_mod_vent::text <> '') then
					add_vector_data('cd_mod_vent',r_c40.nr_sequencia,294152,r_c40.cd_mod_vent,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,93,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_fluxo_oxigenio IS NOT NULL AND r_c40.qt_fluxo_oxigenio::text <> '') then
					add_vector_data('qt_fluxo_oxigenio',r_c40.nr_sequencia,294152,null,r_c40.qt_fluxo_oxigenio,r_c40.dt_avaliacao,ie_tipo_grupo_w,96,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_fio2 IS NOT NULL AND r_c40.qt_fio2::text <> '') then
					add_vector_data('qt_fio2',r_c40.nr_sequencia,294152,null,r_c40.qt_fio2,r_c40.dt_avaliacao,ie_tipo_grupo_w,94,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_freq_vent IS NOT NULL AND r_c40.qt_freq_vent::text <> '') then
					add_vector_data('qt_freq_vent',r_c40.nr_sequencia,294152,null,r_c40.qt_freq_vent,r_c40.dt_avaliacao,ie_tipo_grupo_w,110,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_amplitude IS NOT NULL AND r_c40.qt_amplitude::text <> '') then
					add_vector_data('qt_amplitude',r_c40.nr_sequencia,294152,null,r_c40.qt_amplitude,r_c40.dt_avaliacao,ie_tipo_grupo_w,110,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_freq_prog IS NOT NULL AND r_c40.qt_freq_prog::text <> '') then
					add_vector_data('qt_freq_prog',r_c40.nr_sequencia,294152,null,r_c40.qt_freq_prog,r_c40.dt_avaliacao,ie_tipo_grupo_w,276,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_freq_resp IS NOT NULL AND r_c40.qt_freq_resp::text <> '') then
					add_vector_data('qt_freq_resp',r_c40.nr_sequencia,294152,null,r_c40.qt_freq_resp,r_c40.dt_avaliacao,ie_tipo_grupo_w,97,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_vc_prog IS NOT NULL AND r_c40.qt_vc_prog::text <> '') then
					add_vector_data('qt_vc_prog',r_c40.nr_sequencia,294152,null,r_c40.qt_vc_prog,r_c40.dt_avaliacao,ie_tipo_grupo_w,111,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_vci IS NOT NULL AND r_c40.qt_vci::text <> '') then
					add_vector_data('qt_vci',r_c40.nr_sequencia,294152,null,r_c40.qt_vci,r_c40.dt_avaliacao,ie_tipo_grupo_w,100,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_vmin IS NOT NULL AND r_c40.qt_vmin::text <> '') then
					add_vector_data('qt_vmin',r_c40.nr_sequencia,294152,null,r_c40.qt_vmin,r_c40.dt_avaliacao,ie_tipo_grupo_w,112,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_pip IS NOT NULL AND r_c40.qt_pip::text <> '') then
					add_vector_data('qt_pip',r_c40.nr_sequencia,294152,null,r_c40.qt_pip,r_c40.dt_avaliacao,ie_tipo_grupo_w,98,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_pplato IS NOT NULL AND r_c40.qt_pplato::text <> '') then
					add_vector_data('qt_pplato',r_c40.nr_sequencia,294152,null,r_c40.qt_pplato,r_c40.dt_avaliacao,ie_tipo_grupo_w,99,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_peep IS NOT NULL AND r_c40.qt_peep::text <> '') then
					add_vector_data('qt_peep',r_c40.nr_sequencia,294152,null,r_c40.qt_peep,r_c40.dt_avaliacao,ie_tipo_grupo_w,101,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_ps IS NOT NULL AND r_c40.qt_ps::text <> '') then
					add_vector_data('qt_ps',r_c40.nr_sequencia,294152,null,r_c40.qt_ps,r_c40.dt_avaliacao,ie_tipo_grupo_w,102,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_pva IS NOT NULL AND r_c40.qt_pva::text <> '') then
					add_vector_data('qt_pva',r_c40.nr_sequencia,294152,null,r_c40.qt_pva,r_c40.dt_avaliacao,ie_tipo_grupo_w,113,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_auto_peep IS NOT NULL AND r_c40.qt_auto_peep::text <> '') then
					add_vector_data('qt_auto_peep',r_c40.nr_sequencia,294152,null,r_c40.qt_auto_peep,r_c40.dt_avaliacao,ie_tipo_grupo_w,114,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_co2 IS NOT NULL AND r_c40.qt_co2::text <> '') then
					add_vector_data('qt_co2',r_c40.nr_sequencia,294152,null,r_c40.qt_co2,r_c40.dt_avaliacao,ie_tipo_grupo_w,115,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_cst IS NOT NULL AND r_c40.qt_cst::text <> '') then
					add_vector_data('qt_cst',r_c40.nr_sequencia,294152,null,r_c40.qt_cst,r_c40.dt_avaliacao,ie_tipo_grupo_w,116,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_rsr IS NOT NULL AND r_c40.qt_rsr::text <> '') then
					add_vector_data('qt_rsr',r_c40.nr_sequencia,294152,null,r_c40.qt_rsr,r_c40.dt_avaliacao,ie_tipo_grupo_w,117,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_fluxo_insp IS NOT NULL AND r_c40.qt_fluxo_insp::text <> '') then
					add_vector_data('qt_fluxo_insp',r_c40.nr_sequencia,294152,null,r_c40.qt_fluxo_insp,r_c40.dt_avaliacao,ie_tipo_grupo_w,118,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_tempo_insp IS NOT NULL AND r_c40.qt_tempo_insp::text <> '') then
					add_vector_data('qt_tempo_insp',r_c40.nr_sequencia,294152,null,r_c40.qt_tempo_insp,r_c40.dt_avaliacao,ie_tipo_grupo_w,119,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_ti_te IS NOT NULL AND r_c40.qt_ti_te::text <> '') then
					add_vector_data('qt_ti_te',r_c40.nr_sequencia,294152,null,r_c40.qt_ti_te,r_c40.dt_avaliacao,ie_tipo_grupo_w,120,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_vce IS NOT NULL AND r_c40.qt_vce::text <> '') then
					add_vector_data('qt_vce',r_c40.nr_sequencia,294152,null,r_c40.qt_vce,r_c40.dt_avaliacao,ie_tipo_grupo_w,103,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_sensib_resp IS NOT NULL AND r_c40.qt_sensib_resp::text <> '') then
					add_vector_data('qt_sensib_resp',r_c40.nr_sequencia,294152,null,r_c40.qt_sensib_resp,r_c40.dt_avaliacao,ie_tipo_grupo_w,121,'1',R_C40.dt_apap);
				end if;
				if (r_c40.QT_SENSIB_FLUXO IS NOT NULL AND r_c40.QT_SENSIB_FLUXO::text <> '') then
					add_vector_data('QT_SENSIB_FLUXO',r_c40.nr_sequencia,294152,null,r_c40.QT_SENSIB_FLUXO,r_c40.dt_avaliacao,ie_tipo_grupo_w,619,'1',R_C40.dt_apap);
				end if;				
				if (r_c40.qt_limite_pa_max IS NOT NULL AND r_c40.qt_limite_pa_max::text <> '') then
					add_vector_data('qt_limite_pa_max',r_c40.nr_sequencia,294152,null,r_c40.qt_limite_pa_max,r_c40.dt_avaliacao,ie_tipo_grupo_w,122,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_limite_pa_min IS NOT NULL AND r_c40.qt_limite_pa_min::text <> '') then
					add_vector_data('qt_limite_pa_min',r_c40.nr_sequencia,294152,null,r_c40.qt_limite_pa_min,r_c40.dt_avaliacao,ie_tipo_grupo_w,123,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_pressao_cuff IS NOT NULL AND r_c40.qt_pressao_cuff::text <> '') then
					add_vector_data('qt_pressao_cuff',r_c40.nr_sequencia,294152,null,r_c40.qt_pressao_cuff,r_c40.dt_avaliacao,ie_tipo_grupo_w,104,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_pressao_cuff_CMH2O IS NOT NULL AND r_c40.qt_pressao_cuff_CMH2O::text <> '') then
					add_vector_data('qt_pressao_cuff_CMH2O',r_c40.nr_sequencia,294152,null,r_c40.qt_pressao_cuff_CMH2O,r_c40.dt_avaliacao,ie_tipo_grupo_w,209,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_grad_aao2 IS NOT NULL AND r_c40.qt_grad_aao2::text <> '') then
					add_vector_data('qt_grad_aao2',r_c40.nr_sequencia,294152,null,r_c40.qt_grad_aao2,r_c40.dt_avaliacao,ie_tipo_grupo_w,106,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_sat_venosa_o2 IS NOT NULL AND r_c40.qt_sat_venosa_o2::text <> '') then
					add_vector_data('qt_sat_venosa_o2',r_c40.nr_sequencia,294152,null,r_c40.qt_sat_venosa_o2,r_c40.dt_avaliacao,ie_tipo_grupo_w,107,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_saturacao_o2 IS NOT NULL AND r_c40.qt_saturacao_o2::text <> '') then
					add_vector_data('qt_saturacao_o2',r_c40.nr_sequencia,294152,null,r_c40.qt_saturacao_o2,r_c40.dt_avaliacao,ie_tipo_grupo_w,108,'1',R_C40.dt_apap);
				end if;
				if (r_c40.ie_respiracao IS NOT NULL AND r_c40.ie_respiracao::text <> '') then
					add_vector_data('ie_respiracao',r_c40.nr_sequencia,294152,r_c40.ie_respiracao,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,211,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_te IS NOT NULL AND r_c40.qt_te::text <> '') then
					add_vector_data('qt_te',r_c40.nr_sequencia,294152,null,r_c40.qt_te,r_c40.dt_avaliacao,ie_tipo_grupo_w,214,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_ti IS NOT NULL AND r_c40.qt_ti::text <> '') then
					add_vector_data('qt_ti',r_c40.nr_sequencia,294152,null,r_c40.qt_ti,r_c40.dt_avaliacao,ie_tipo_grupo_w,215,'1',R_C40.dt_apap);
				end if;
				if (r_c40.QT_PC IS NOT NULL AND r_c40.QT_PC::text <> '') then
					add_vector_data('QT_PC',r_c40.nr_sequencia,294152,null,r_c40.QT_PC,r_c40.dt_avaliacao,ie_tipo_grupo_w,218,'1',R_C40.dt_apap);
				end if;
				if (r_c40.ds_equipamento IS NOT NULL AND r_c40.ds_equipamento::text <> '') then
					add_vector_data('ds_equipamento',r_c40.nr_sequencia,294152,r_c40.ds_equipamento,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,220,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_fluxo_ar_compr IS NOT NULL AND r_c40.qt_fluxo_ar_compr::text <> '') then
					add_vector_data('qt_fluxo_ar_compr',r_c40.nr_sequencia,294152,null,r_c40.qt_fluxo_ar_compr,r_c40.dt_avaliacao,ie_tipo_grupo_w,221,'1',R_C40.dt_apap);
				end if;
				if (r_c40.QT_OXIDO_NITRICO IS NOT NULL AND r_c40.QT_OXIDO_NITRICO::text <> '') then
					add_vector_data('QT_OXIDO_NITRICO',r_c40.nr_sequencia,294152,null,r_c40.QT_OXIDO_NITRICO,r_c40.dt_avaliacao,ie_tipo_grupo_w,222,'1',R_C40.dt_apap);
				end if;
				if (r_c40.ie_muscul_acess IS NOT NULL AND r_c40.ie_muscul_acess::text <> '') then
					add_vector_data('ie_muscul_acess',r_c40.nr_sequencia,294152,r_c40.ie_muscul_acess,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,245,'1',R_C40.dt_apap);
				end if;
				if (r_c40.qt_temp_humidifier IS NOT NULL AND r_c40.qt_temp_humidifier::text <> '') then
					add_vector_data('qt_temp_humidifier',r_c40.nr_sequencia,294152,r_c40.qt_temp_humidifier,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,372,'1',R_C40.dt_apap);
				end if;
				if (r_c40.ie_air_entry IS NOT NULL AND r_c40.ie_air_entry::text <> '') then
					add_vector_data('ie_air_entry',r_c40.nr_sequencia,294152,r_c40.ie_air_entry,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,373,'1',R_C40.dt_apap);
				end if;
				if (r_c40.ds_mod_vent IS NOT NULL AND r_c40.ds_mod_vent::text <> '') then
					add_vector_data('ds_mod_vent',r_c40.nr_sequencia,294152,r_c40.ds_mod_vent,null,r_c40.dt_avaliacao,ie_tipo_grupo_w,613,'1',R_C40.dt_apap);
				end if;
				end;
			end loop;
		
		elsif (ie_tipo_grupo_w = 'FP') then			
			for r_c112 in C112 loop
				begin
				if (r_c112.QT_VEF1 IS NOT NULL AND r_c112.QT_VEF1::text <> '') then
					add_vector_data('QT_VEF1',r_c112.nr_sequencia,294152,null,r_c112.QT_VEF1,r_c112.dt_registro,ie_tipo_grupo_w,null,'1',r_c112.dt_apap);
				end if;				
				if (r_c112.QT_VEF1_PREV IS NOT NULL AND r_c112.QT_VEF1_PREV::text <> '') then
					add_vector_data('QT_VEF1_PREV',r_c112.nr_sequencia,294152,null,r_c112.QT_VEF1_PREV,r_c112.dt_registro,ie_tipo_grupo_w,null,'2',r_c112.dt_apap);
				end if;
				if (r_c112.QT_CAPACI_VITAL IS NOT NULL AND r_c112.QT_CAPACI_VITAL::text <> '') then
					add_vector_data('QT_CAPACI_VITAL',r_c112.nr_sequencia,294152,null,r_c112.QT_CAPACI_VITAL,r_c112.dt_registro,ie_tipo_grupo_w,null,'3',r_c112.dt_apap);
				end if;
				if (r_c112.QT_CAPAC_PUL_TOTAL IS NOT NULL AND r_c112.QT_CAPAC_PUL_TOTAL::text <> '') then
					add_vector_data('QT_CAPAC_PUL_TOTAL',r_c112.nr_sequencia,294152,null,r_c112.QT_CAPAC_PUL_TOTAL,r_c112.dt_registro,ie_tipo_grupo_w,null,'4',r_c112.dt_apap);
				end if;
				if (r_c112.QT_CAPAC_VITAL_FORC IS NOT NULL AND r_c112.QT_CAPAC_VITAL_FORC::text <> '') then
					add_vector_data('QT_CAPAC_VITAL_FORC',r_c112.nr_sequencia,294152,null,r_c112.QT_CAPAC_VITAL_FORC,r_c112.dt_registro,ie_tipo_grupo_w,null,'5',r_c112.dt_apap);
				end if;
				if (r_c112.QT_CAPA_RES_FUN IS NOT NULL AND r_c112.QT_CAPA_RES_FUN::text <> '') then
					add_vector_data('QT_CAPA_RES_FUN',r_c112.nr_sequencia,294152,null,r_c112.QT_CAPA_RES_FUN,r_c112.dt_registro,ie_tipo_grupo_w,null,'6',r_c112.dt_apap);
				end if;
				if (r_c112.QT_FLUX_EXP_MED IS NOT NULL AND r_c112.QT_FLUX_EXP_MED::text <> '') then
					add_vector_data('QT_FLUX_EXP_MED',r_c112.nr_sequencia,294152,null,r_c112.QT_FLUX_EXP_MED,r_c112.dt_registro,ie_tipo_grupo_w,null,'7',r_c112.dt_apap);
				end if;
				if (r_c112.QT_INDICE_TIFFENEAU IS NOT NULL AND r_c112.QT_INDICE_TIFFENEAU::text <> '') then
					add_vector_data('QT_INDICE_TIFFENEAU',r_c112.nr_sequencia,294152,null,r_c112.QT_INDICE_TIFFENEAU,r_c112.dt_registro,ie_tipo_grupo_w,null,'8',r_c112.dt_apap);
				end if;
				if (r_c112.QT_PICO_FLUX_EXP IS NOT NULL AND r_c112.QT_PICO_FLUX_EXP::text <> '') then
					add_vector_data('QT_PICO_FLUX_EXP',r_c112.nr_sequencia,294152,null,r_c112.QT_PICO_FLUX_EXP,r_c112.dt_registro,ie_tipo_grupo_w,null,'9',r_c112.dt_apap);
				end if;
				if (r_c112.QT_PICO_FLUXO_RESP_PREV IS NOT NULL AND r_c112.QT_PICO_FLUXO_RESP_PREV::text <> '') then
					add_vector_data('QT_PICO_FLUXO_RESP_PREV',r_c112.nr_sequencia,294152,null,r_c112.QT_PICO_FLUXO_RESP_PREV,r_c112.dt_registro,ie_tipo_grupo_w,null,'10',r_c112.dt_apap);
				end if;
				if (r_c112.QT_TEF IS NOT NULL AND r_c112.QT_TEF::text <> '') then
					add_vector_data('QT_TEF',r_c112.nr_sequencia,294152,null,r_c112.QT_TEF,r_c112.dt_registro,ie_tipo_grupo_w,null,'11',r_c112.dt_apap);
				end if;
				if (r_c112.QT_CAPAC_INSP IS NOT NULL AND r_c112.QT_CAPAC_INSP::text <> '') then
					add_vector_data('QT_CAPAC_INSP',r_c112.nr_sequencia,294152,null,r_c112.QT_CAPAC_INSP,r_c112.dt_registro,ie_tipo_grupo_w,null,'12',r_c112.dt_apap);
				end if;
				if (r_c112.QT_VOL_RES IS NOT NULL AND r_c112.QT_VOL_RES::text <> '') then
					add_vector_data('QT_VOL_RES',r_c112.nr_sequencia,294152,null,r_c112.QT_VOL_RES,r_c112.dt_registro,ie_tipo_grupo_w,null,'13',r_c112.dt_apap);
				end if;
				if (r_c112.QT_VOL_RES_EXP IS NOT NULL AND r_c112.QT_VOL_RES_EXP::text <> '') then
					add_vector_data('QT_VOL_RES_EXP',r_c112.nr_sequencia,294152,null,r_c112.QT_VOL_RES_EXP,r_c112.dt_registro,ie_tipo_grupo_w,null,'14',r_c112.dt_apap);
				end if;
				if (r_c112.QT_VOL_CORRENTE IS NOT NULL AND r_c112.QT_VOL_CORRENTE::text <> '') then
					add_vector_data('QT_VOL_CORRENTE',r_c112.nr_sequencia,294152,null,r_c112.QT_VOL_CORRENTE,r_c112.dt_registro,ie_tipo_grupo_w,null,'15',r_c112.dt_apap);
				end if;
				if (r_c112.QT_VOL_RES_INSP IS NOT NULL AND r_c112.QT_VOL_RES_INSP::text <> '') then
					add_vector_data('QT_VOL_RES_INSP',r_c112.nr_sequencia,294152,null,r_c112.QT_VOL_RES_INSP,r_c112.dt_registro,ie_tipo_grupo_w,null,'16',r_c112.dt_apap);
				end if;
				
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'MH') then
			for r_c41 in c41 loop
				begin

				if (r_c41.qt_pa_sist_ap IS NOT NULL AND r_c41.qt_pa_sist_ap::text <> '') then
					add_vector_data('qt_pa_sist_ap',r_c41.nr_sequencia,294152,null,r_c41.qt_pa_sist_ap,R_C41.dt_avaliacao,ie_tipo_grupo_w,59,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_pa_diast_ap IS NOT NULL AND r_c41.qt_pa_diast_ap::text <> '') then
					add_vector_data('qt_pa_diast_ap',r_c41.nr_sequencia,294152,null,r_c41.qt_pa_diast_ap,r_c41.dt_avaliacao,ie_tipo_grupo_w,60,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_pa_media_ap IS NOT NULL AND r_c41.qt_pa_media_ap::text <> '') then
					add_vector_data('qt_pa_media_ap',r_c41.nr_sequencia,294152,null,r_c41.qt_pa_media_ap,r_c41.dt_avaliacao,ie_tipo_grupo_w,62,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_pa_ocluida_ap IS NOT NULL AND r_c41.qt_pa_ocluida_ap::text <> '') then
					add_vector_data('qt_pa_ocluida_ap',r_c41.nr_sequencia,294152,null,r_c41.qt_pa_ocluida_ap,r_c41.dt_avaliacao,ie_tipo_grupo_w,63,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_pvd_sist IS NOT NULL AND r_c41.qt_pvd_sist::text <> '') then
					add_vector_data('qt_pvd_sist',r_c41.nr_sequencia,294152,null,r_c41.qt_pvd_sist,r_c41.dt_avaliacao,ie_tipo_grupo_w,64,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_pvd_diast_final IS NOT NULL AND r_c41.qt_pvd_diast_final::text <> '') then
					add_vector_data('qt_pvd_diast_final',r_c41.nr_sequencia,294152,null,r_c41.qt_pvd_diast_final,r_c41.dt_avaliacao,ie_tipo_grupo_w,65,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_debito_card IS NOT NULL AND r_c41.qt_debito_card::text <> '') then
					add_vector_data('qt_debito_card',r_c41.nr_sequencia,294152,null,r_c41.qt_debito_card,r_c41.dt_avaliacao,ie_tipo_grupo_w,66,'1',R_C41.dt_apap);
				end if;
				if (r_c41.tx_indice_card IS NOT NULL AND r_c41.tx_indice_card::text <> '') then
					add_vector_data('tx_indice_card',r_c41.nr_sequencia,294152,null,r_c41.tx_indice_card,r_c41.dt_avaliacao,ie_tipo_grupo_w,67,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_volume_sist IS NOT NULL AND r_c41.qt_volume_sist::text <> '') then
					add_vector_data('qt_volume_sist',r_c41.nr_sequencia,294152,null,r_c41.qt_volume_sist,r_c41.dt_avaliacao,ie_tipo_grupo_w,69,'1',R_C41.dt_apap);
				end if;
				if (r_c41.tx_indice_sist IS NOT NULL AND r_c41.tx_indice_sist::text <> '') then
					add_vector_data('tx_indice_sist',r_c41.nr_sequencia,294152,null,r_c41.tx_indice_sist,r_c41.dt_avaliacao,ie_tipo_grupo_w,70,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_rv_sistemica IS NOT NULL AND r_c41.qt_rv_sistemica::text <> '') then
					add_vector_data('qt_rv_sistemica',r_c41.nr_sequencia,294152,null,r_c41.qt_rv_sistemica,r_c41.dt_avaliacao,ie_tipo_grupo_w,71,'1',R_C41.dt_apap);
				end if;
				if (r_c41.tx_rv_sistemica IS NOT NULL AND r_c41.tx_rv_sistemica::text <> '') then
					add_vector_data('tx_rv_sistemica',r_c41.nr_sequencia,294152,null,r_c41.tx_rv_sistemica,r_c41.dt_avaliacao,ie_tipo_grupo_w,72,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_rv_pulmonar IS NOT NULL AND r_c41.qt_rv_pulmonar::text <> '') then
					add_vector_data('qt_rv_pulmonar',r_c41.nr_sequencia,294152,null,r_c41.qt_rv_pulmonar,r_c41.dt_avaliacao,ie_tipo_grupo_w,73,'1',R_C41.dt_apap);
				end if;
				if (r_c41.tx_rv_pulmonar IS NOT NULL AND r_c41.tx_rv_pulmonar::text <> '') then
					add_vector_data('tx_rv_pulmonar',r_c41.nr_sequencia,294152,null,r_c41.tx_rv_pulmonar,r_c41.dt_avaliacao,ie_tipo_grupo_w,74,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_trab_sist_ve IS NOT NULL AND r_c41.qt_trab_sist_ve::text <> '') then
					add_vector_data('qt_trab_sist_ve',r_c41.nr_sequencia,294152,null,r_c41.qt_trab_sist_ve,r_c41.dt_avaliacao,ie_tipo_grupo_w,75,'1',R_C41.dt_apap);
				end if;
				if (r_c41.tx_trab_sist_ve IS NOT NULL AND r_c41.tx_trab_sist_ve::text <> '') then
					add_vector_data('tx_trab_sist_ve',r_c41.nr_sequencia,294152,null,r_c41.tx_trab_sist_ve,r_c41.dt_avaliacao,ie_tipo_grupo_w,76,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_trab_sist_vd IS NOT NULL AND r_c41.qt_trab_sist_vd::text <> '') then
					add_vector_data('qt_trab_sist_vd',r_c41.nr_sequencia,294152,null,r_c41.qt_trab_sist_vd,r_c41.dt_avaliacao,ie_tipo_grupo_w,77,'1',R_C41.dt_apap);
				end if;
				if (r_c41.tx_trab_sist_vd IS NOT NULL AND r_c41.tx_trab_sist_vd::text <> '') then
					add_vector_data('tx_trab_sist_vd',r_c41.nr_sequencia,294152,null,r_c41.tx_trab_sist_vd,r_c41.dt_avaliacao,ie_tipo_grupo_w,78,'1',R_C41.dt_apap);
				end if;
				if (r_c41.qt_satur_ven_mista_oxigenio IS NOT NULL AND r_c41.qt_satur_ven_mista_oxigenio::text <> '') then
					add_vector_data('qt_satur_ven_mista_oxigenio',r_c41.nr_sequencia,294152,null,r_c41.qt_satur_ven_mista_oxigenio,r_c41.dt_avaliacao,ie_tipo_grupo_w,79,'1',R_C41.dt_apap);
				end if;
				if (r_c41.QT_DELTA_PP_MMHG IS NOT NULL AND r_c41.QT_DELTA_PP_MMHG::text <> '') then
					add_vector_data('QT_DELTA_PP_MMHG',r_c41.nr_sequencia,294152,null,r_c41.QT_DELTA_PP_MMHG,r_c41.dt_avaliacao,ie_tipo_grupo_w,236,'1',R_C41.dt_apap);
				end if;

				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'MA') then
			for r_c42 in c42 loop
				begin

				if (r_c42.ie_ramsay IS NOT NULL AND r_c42.ie_ramsay::text <> '') then
					add_vector_data('ie_ramsay',r_c42.nr_sequencia,294152,r_c42.ie_ramsay,null,R_C42.dt_avaliacao,ie_tipo_grupo_w,81,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ie_rass IS NOT NULL AND r_c42.ie_rass::text <> '') then
					add_vector_data('ie_rass',r_c42.nr_sequencia,294152,r_c42.ie_rass,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,83,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ie_prurido IS NOT NULL AND r_c42.ie_prurido::text <> '') then
					add_vector_data('ie_prurido',r_c42.nr_sequencia,294152,r_c42.ie_prurido,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,85,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ie_nausea IS NOT NULL AND r_c42.ie_nausea::text <> '') then
					add_vector_data('ie_nausea',r_c42.nr_sequencia,294152,r_c42.ie_nausea,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,86,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ie_bloqueio_motor IS NOT NULL AND r_c42.ie_bloqueio_motor::text <> '') then
					add_vector_data('ie_bloqueio_motor',r_c42.nr_sequencia,294152,r_c42.ie_bloqueio_motor,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,87,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ie_cateter_peridural IS NOT NULL AND r_c42.ie_cateter_peridural::text <> '') then
					add_vector_data('ie_cateter_peridural',r_c42.nr_sequencia,294152,r_c42.ie_cateter_peridural,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,88,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ie_ricker IS NOT NULL AND r_c42.ie_ricker::text <> '') then
					add_vector_data('ie_ricker',r_c42.nr_sequencia,294152,r_c42.ie_ricker,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,124,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ie_maas IS NOT NULL AND r_c42.ie_maas::text <> '') then
					add_vector_data('ie_maas',r_c42.nr_sequencia,294152,r_c42.ie_maas,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,125,'1',R_C42.dt_apap);
				end if;
				if (r_c42.qt_cook_pontuacao IS NOT NULL AND r_c42.qt_cook_pontuacao::text <> '') then
					add_vector_data('qt_cook_pontuacao',r_c42.nr_sequencia,294152,null,r_c42.qt_cook_pontuacao,r_c42.dt_avaliacao,ie_tipo_grupo_w,126,'1',R_C42.dt_apap);
				end if;
				if (r_c42.ds_pontuacao IS NOT NULL AND r_c42.ds_pontuacao::text <> '') then
					add_vector_data('ds_pontuacao',r_c42.nr_sequencia,294152,r_c42.ds_pontuacao,null,r_c42.dt_avaliacao,ie_tipo_grupo_w,185,'1',R_C42.dt_apap);
				end if;
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'PAR') then
			for r_c43 in c43 loop
				begin

				if (r_c43.ie_interv_contracoes IS NOT NULL AND r_c43.ie_interv_contracoes::text <> '') then
					add_vector_data('ie_interv_contracoes',r_c43.nr_sequencia,294152,r_c43.ie_interv_contracoes,null,R_C43.dt_avaliacao,ie_tipo_grupo_w,null,'1',R_C43.dt_apap);
				end if;
				if (r_c43.qt_bcf IS NOT NULL AND r_c43.qt_bcf::text <> '') then
					add_vector_data('qt_bcf',r_c43.nr_sequencia,294152,r_c43.qt_bcf,null,r_c43.dt_avaliacao,ie_tipo_grupo_w,null,'2',R_C43.dt_apap);
				end if;
				if (r_c43.ie_bolsa IS NOT NULL AND r_c43.ie_bolsa::text <> '') then
					add_vector_data('ie_bolsa',r_c43.nr_sequencia,294152,r_c43.ie_bolsa,null,r_c43.dt_avaliacao,ie_tipo_grupo_w,null,'3',R_C43.dt_apap);
				end if;
				if (r_c43.ie_aspecto_liquido IS NOT NULL AND r_c43.ie_aspecto_liquido::text <> '') then
					add_vector_data('ie_aspecto_liquido',r_c43.nr_sequencia,294152,r_c43.ie_aspecto_liquido,null,r_c43.dt_avaliacao,ie_tipo_grupo_w,null,'4',R_C43.dt_apap);
				end if;
				if (r_c43.ie_ocitocina IS NOT NULL AND r_c43.ie_ocitocina::text <> '') then
					add_vector_data('ie_ocitocina',r_c43.nr_sequencia,294152,r_c43.ie_ocitocina,null,r_c43.dt_avaliacao,ie_tipo_grupo_w,null,'5',R_C43.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'PC') then
			for r_c44 in c44 loop
				begin

				if (r_c44.nr_disparo_efetivo IS NOT NULL AND r_c44.nr_disparo_efetivo::text <> '') then
					add_vector_data('nr_disparo_efetivo',null,294152,r_c44.nr_disparo_efetivo,null,R_C44.dt_avaliacao,ie_tipo_grupo_w,201,'1',R_C44.dt_apap);
				end if;
				if (r_c44.nr_disparo_pca IS NOT NULL AND r_c44.nr_disparo_pca::text <> '') then
					add_vector_data('nr_disparo_pca',null,294152,r_c44.nr_disparo_pca,null,r_c44.dt_avaliacao,ie_tipo_grupo_w,202,'1',R_C44.dt_apap);
				end if;
				if (r_c44.qt_vol_infundido IS NOT NULL AND r_c44.qt_vol_infundido::text <> '') then
					add_vector_data('qt_vol_infundido',null,294152,r_c44.qt_vol_infundido,null,r_c44.dt_avaliacao,ie_tipo_grupo_w,203,'1',R_C44.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'PR') then
			for r_c45 in c45 loop
				begin

				add_vector_data('IE_LACTANTE',r_c45.nr_sequencia,294152,r_c45.IE_LACTANTE,null,R_C45.dt_avaliacao,ie_tipo_grupo_w,null,'1',R_C45.dt_apap);
				add_vector_data('QT_IDADE',r_c45.nr_sequencia,294152,r_c45.QT_IDADE,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'2',R_C45.dt_apap);
				add_vector_data('QT_PA_SISTOLICA',r_c45.nr_sequencia,294152,r_c45.QT_PA_SISTOLICA,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'3',R_C45.dt_apap);
				add_vector_data('QT_PTO_PAS',r_c45.nr_sequencia,294152,r_c45.QT_PTO_PAS,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'4',R_C45.dt_apap);
				add_vector_data('QT_BILIRRUBINA_TOTAL',r_c45.nr_sequencia,294152,r_c45.QT_BILIRRUBINA_TOTAL,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'5',R_C45.dt_apap);
				add_vector_data('QT_PTO_BILIRRUBINA',r_c45.nr_sequencia,294152,r_c45.QT_PTO_BILIRRUBINA,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'6',R_C45.dt_apap);
				add_vector_data('QT_PA_DIASTOLICA',r_c45.nr_sequencia,294152,r_c45.QT_PA_DIASTOLICA,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'7',R_C45.dt_apap);
				add_vector_data('QT_PTO_PAD',r_c45.nr_sequencia,294152,r_c45.QT_PTO_PAD,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'8',R_C45.dt_apap);
				add_vector_data('QT_CALCIO',r_c45.nr_sequencia,294152,r_c45.QT_CALCIO,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'9',R_C45.dt_apap);
				add_vector_data('QT_PTO_CALCIO',r_c45.nr_sequencia,294152,r_c45.QT_PTO_CALCIO,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'10',R_C45.dt_apap);
				add_vector_data('QT_FREQ_CARDIACA',r_c45.nr_sequencia,294152,r_c45.QT_FREQ_CARDIACA,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'11',R_C45.dt_apap);
				add_vector_data('QT_PTO_FC',r_c45.nr_sequencia,294152,r_c45.QT_PTO_FC,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'12',R_C45.dt_apap);
				add_vector_data('QT_POTASSIO',r_c45.nr_sequencia,294152,r_c45.QT_POTASSIO,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'13',R_C45.dt_apap);
				add_vector_data('QT_PTO_POTASSIO',r_c45.nr_sequencia,294152,r_c45.QT_PTO_POTASSIO,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'14',R_C45.dt_apap);
				add_vector_data('QT_FREQ_RESP',r_c45.nr_sequencia,294152,r_c45.QT_FREQ_RESP,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'15',R_C45.dt_apap);
				add_vector_data('QT_PTO_FR',r_c45.nr_sequencia,294152,r_c45.QT_PTO_FR,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'16',R_C45.dt_apap);
				add_vector_data('QT_GLICEMIA',r_c45.nr_sequencia,294152,r_c45.QT_GLICEMIA,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'17',R_C45.dt_apap);
				add_vector_data('QT_PTO_GLICEMIA',r_c45.nr_sequencia,294152,r_c45.QT_PTO_GLICEMIA,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'18',R_C45.dt_apap);
				add_vector_data('IE_APNEIA',r_c45.nr_sequencia,294152,r_c45.IE_APNEIA,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'19',R_C45.dt_apap);
				add_vector_data('QT_BICARBONATO',r_c45.nr_sequencia,294152,r_c45.QT_BICARBONATO,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'20',R_C45.dt_apap);
				add_vector_data('QT_PTO_BICARBONATO',r_c45.nr_sequencia,294152,r_c45.QT_PTO_BICARBONATO,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'21',R_C45.dt_apap);
				add_vector_data('QT_REL_PAO2_FIO2',r_c45.nr_sequencia,294152,r_c45.QT_REL_PAO2_FIO2,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'22',R_C45.dt_apap);
				add_vector_data('QT_PTO_REL_PAO2_FIO2',r_c45.nr_sequencia,294152,r_c45.QT_PTO_REL_PAO2_FIO2,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'23',R_C45.dt_apap);
				add_vector_data('QT_ESCALA_GLASGOW',r_c45.nr_sequencia,294152,r_c45.QT_ESCALA_GLASGOW,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'24',R_C45.dt_apap);
				add_vector_data('QT_PTO_GLASGOW',r_c45.nr_sequencia,294152,r_c45.QT_PTO_GLASGOW,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'25',R_C45.dt_apap);
				add_vector_data('QT_PACO2',r_c45.nr_sequencia,294152,r_c45.QT_PACO2,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'26',R_C45.dt_apap);
				add_vector_data('QT_PTO_PACO2',r_c45.nr_sequencia,294152,r_c45.QT_PTO_PACO2,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'27',R_C45.dt_apap);
				add_vector_data('IE_TEMPO_TP_TTP',r_c45.nr_sequencia,294152,r_c45.IE_TEMPO_TP_TTP,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'28',R_C45.dt_apap);
				add_vector_data('QT_PTO_TP_TTP',r_c45.nr_sequencia,294152,r_c45.QT_PTO_TP_TTP,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'29',R_C45.dt_apap);
				add_vector_data('IE_REACOES_PUPILARES',r_c45.nr_sequencia,294152,r_c45.IE_REACOES_PUPILARES,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'30',R_C45.dt_apap);
				add_vector_data('QT_PTO_REAC_PUP',r_c45.nr_sequencia,294152,r_c45.QT_PTO_REAC_PUP,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'31',R_C45.dt_apap);
				add_vector_data('QT_PTO_TOTAL',r_c45.nr_sequencia,294152,r_c45.QT_PTO_TOTAL,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'32',R_C45.dt_apap);
				add_vector_data('PR_MORTALIDADE',r_c45.nr_sequencia,294152,r_c45.PR_MORTALIDADE,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'33',R_C45.dt_apap);
				add_vector_data('PR_MORTALIDADE_POS_OP',r_c45.nr_sequencia,294152,r_c45.PR_MORTALIDADE_POS_OP,null,r_c45.dt_avaliacao,ie_tipo_grupo_w,null,'34',R_C45.dt_apap);
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'SP') then
			for r_c46 in c46 loop
				begin

				add_vector_data('IE_TIPO_ADMISSAO',r_c46.nr_sequencia,294152,r_c46.IE_TIPO_ADMISSAO,null,R_C46.dt_avaliacao,ie_tipo_grupo_w,null,'1',R_C46.dt_apap);
				add_vector_data('QT_BICARBONATO',r_c46.nr_sequencia,294152,r_c46.QT_BICARBONATO,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'2',R_C46.dt_apap);
				add_vector_data('QT_BILIRRUBINA',r_c46.nr_sequencia,294152,r_c46.QT_BILIRRUBINA,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'3',R_C46.dt_apap);
				add_vector_data('IE_CANCRO_METASTATICO',r_c46.nr_sequencia,294152,r_c46.IE_CANCRO_METASTATICO,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'4',R_C46.dt_apap);
				add_vector_data('IE_CATEGORIA_CLINICA',r_c46.nr_sequencia,294152,r_c46.IE_CATEGORIA_CLINICA,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'5',R_C46.dt_apap);
				add_vector_data('QT_DIAS_ANTES_UTI',r_c46.nr_sequencia,294152,r_c46.QT_DIAS_ANTES_UTI,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'6',R_C46.dt_apap);
				add_vector_data('QT_DIURESE',r_c46.nr_sequencia,294152,r_c46.QT_DIURESE,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'7',R_C46.dt_apap);
				add_vector_data('QT_GLASGOW',r_c46.nr_sequencia,294152,r_c46.QT_GLASGOW,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'8',R_C46.dt_apap);
				add_vector_data('QT_FREQ_CARDIACA',r_c46.nr_sequencia,294152,r_c46.QT_FREQ_CARDIACA,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'9',R_C46.dt_apap);
				add_vector_data('QT_GLOBULOS_BRANCOS',r_c46.nr_sequencia,294152,r_c46.QT_GLOBULOS_BRANCOS,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'10',R_C46.dt_apap);
				add_vector_data('IE_AIDS',r_c46.nr_sequencia,294152,r_c46.IE_AIDS,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'11',R_C46.dt_apap);
				add_vector_data('QT_IDADE',r_c46.nr_sequencia,294152,r_c46.QT_IDADE,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'12',R_C46.dt_apap);
				add_vector_data('IE_INTOXICACAO',r_c46.nr_sequencia,294152,r_c46.IE_INTOXICACAO,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'13',R_C46.dt_apap);
				add_vector_data('IE_MALIG_HEMATOLOGICA',r_c46.nr_sequencia,294152,r_c46.IE_MALIG_HEMATOLOGICA,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'14',R_C46.dt_apap);
				add_vector_data('PR_MORTALIDADE',r_c46.nr_sequencia,294152,r_c46.PR_MORTALIDADE,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'15',R_C46.dt_apap);
				add_vector_data('PR_MORT_EXPAND',r_c46.nr_sequencia,294152,r_c46.PR_MORT_EXPAND,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'16',R_C46.dt_apap);
				add_vector_data('IE_ORIGEM_PACIENTE',r_c46.nr_sequencia,294152,r_c46.IE_ORIGEM_PACIENTE,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'17',R_C46.dt_apap);
				add_vector_data('QT_PA_SISTOLICA',r_c46.nr_sequencia,294152,r_c46.QT_PA_SISTOLICA,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'18',R_C46.dt_apap);
				add_vector_data('QT_REL_PAO2_FIO2',r_c46.nr_sequencia,294152,r_c46.QT_REL_PAO2_FIO2,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'19',R_C46.dt_apap);
				add_vector_data('QT_POTASSIO',r_c46.nr_sequencia,294152,r_c46.QT_POTASSIO,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'20',R_C46.dt_apap);
				add_vector_data('QT_SAPS_EXPAND',r_c46.nr_sequencia,294152,r_c46.QT_SAPS_EXPAND,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'21',R_C46.dt_apap);
				add_vector_data('QT_SAPS',r_c46.nr_sequencia,294152,r_c46.QT_SAPS,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'22',R_C46.dt_apap);
				add_vector_data('ds_sexo',r_c46.nr_sequencia,294152,r_c46.ds_sexo,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'23',R_C46.dt_apap);
				add_vector_data('QT_SODIO',r_c46.nr_sequencia,294152,r_c46.QT_SODIO,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'24',R_C46.dt_apap);
				add_vector_data('QT_TEMP',r_c46.nr_sequencia,294152,r_c46.QT_TEMP,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'25',R_C46.dt_apap);
				add_vector_data('QT_UREIA',r_c46.nr_sequencia,294152,r_c46.QT_UREIA,null,r_c46.dt_avaliacao,ie_tipo_grupo_w,null,'26',R_C46.dt_apap);

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'UR') then
			for r_c57 in c57 loop
				begin

				if (r_c57.ie_leucocitos IS NOT NULL AND r_c57.ie_leucocitos::text <> '') then
					add_vector_data('ie_leucocitos',r_c57.nr_sequencia,294152,r_c57.ie_leucocitos,null,R_C57.dt_avaliacao,ie_tipo_grupo_w,168,'1',R_C57.dt_apap);
				end if;
				if (r_c57.ie_urobilinogenio IS NOT NULL AND r_c57.ie_urobilinogenio::text <> '') then
					add_vector_data('ie_urobilinogenio',r_c57.nr_sequencia,294152,r_c57.ie_urobilinogenio,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,169,'2',R_C57.dt_apap);
				end if;
				if (r_c57.ie_ph IS NOT NULL AND r_c57.ie_ph::text <> '') then
					add_vector_data('ie_ph',r_c57.nr_sequencia,294152,r_c57.ie_ph,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,170,'3',R_C57.dt_apap);
				end if;
				if (r_c57.ie_densidade IS NOT NULL AND r_c57.ie_densidade::text <> '') then
					add_vector_data('ie_densidade',r_c57.nr_sequencia,294152,r_c57.ie_densidade,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,171,'4',R_C57.dt_apap);
				end if;
				if (r_c57.ie_bilirrubina IS NOT NULL AND r_c57.ie_bilirrubina::text <> '') then
					add_vector_data('ie_bilirrubina',r_c57.nr_sequencia,294152,r_c57.ie_bilirrubina,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,172,'5',R_C57.dt_apap);
				end if;
				if (r_c57.ie_proteina IS NOT NULL AND r_c57.ie_proteina::text <> '') then
					add_vector_data('ie_proteina',r_c57.nr_sequencia,294152,r_c57.ie_proteina,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,174,'6',R_C57.dt_apap);
				end if;
				if (r_c57.ie_nitrito IS NOT NULL AND r_c57.ie_nitrito::text <> '') then
					add_vector_data('ie_nitrito',r_c57.nr_sequencia,294152,r_c57.ie_nitrito,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,173,'7',R_C57.dt_apap);
				end if;
				if (r_c57.ie_sangue IS NOT NULL AND r_c57.ie_sangue::text <> '') then
					add_vector_data('ie_sangue',r_c57.nr_sequencia,294152,r_c57.ie_sangue,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,175,'8',R_C57.dt_apap);
				end if;
				if (r_c57.ie_cetona IS NOT NULL AND r_c57.ie_cetona::text <> '') then
					add_vector_data('ie_cetona',r_c57.nr_sequencia,294152,r_c57.ie_cetona,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,176,'9',R_C57.dt_apap);
				end if;
				if (r_c57.ie_glicose IS NOT NULL AND r_c57.ie_glicose::text <> '') then
					add_vector_data('ie_glicose',r_c57.nr_sequencia,294152,r_c57.ie_glicose,null,r_c57.dt_avaliacao,ie_tipo_grupo_w,177,'10',R_C57.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'URC') then
			for r_c58 in c58 loop
				begin

				if (r_c58.ie_leucocitos IS NOT NULL AND r_c58.ie_leucocitos::text <> '') then
					add_vector_data('ie_leucocitos',r_c58.nr_sequencia,294152,r_c58.ie_leucocitos,null,R_C58.dt_avaliacao,'URC',288,'1',R_C58.dt_apap);
				end if;
				if (r_c58.ie_urobilinogenio IS NOT NULL AND r_c58.ie_urobilinogenio::text <> '') then
					add_vector_data('ie_urobilinogenio',r_c58.nr_sequencia,294152,r_c58.ie_urobilinogenio,null,r_c58.dt_avaliacao,'URC',293,'2',R_C58.dt_apap);
				end if;
				if (r_c58.ie_ph IS NOT NULL AND r_c58.ie_ph::text <> '') then
					add_vector_data('ie_ph',r_c58.nr_sequencia,294152,r_c58.ie_ph,null,r_c58.dt_avaliacao,'URC',290,'3',R_C58.dt_apap);
				end if;
				if (r_c58.ie_densidade IS NOT NULL AND r_c58.ie_densidade::text <> '') then
					add_vector_data('ie_densidade',r_c58.nr_sequencia,294152,r_c58.ie_densidade,null,r_c58.dt_avaliacao,'URC',286,'4',R_C58.dt_apap);
				end if;
				if (r_c58.ie_bilirrubina IS NOT NULL AND r_c58.ie_bilirrubina::text <> '') then
					add_vector_data('ie_bilirrubina',r_c58.nr_sequencia,294152,r_c58.ie_bilirrubina,null,r_c58.dt_avaliacao,'URC',284,'5',R_C58.dt_apap);
				end if;
				if (r_c58.ie_proteina IS NOT NULL AND r_c58.ie_proteina::text <> '') then
					add_vector_data('ie_proteina',r_c58.nr_sequencia,294152,r_c58.ie_proteina,null,r_c58.dt_avaliacao,'URC',291,'6',R_C58.dt_apap);
				end if;
				if (r_c58.ie_nitrito IS NOT NULL AND r_c58.ie_nitrito::text <> '') then
					add_vector_data('ie_nitrito',r_c58.nr_sequencia,294152,r_c58.ie_nitrito,null,r_c58.dt_avaliacao,'URC',289,'7',R_C58.dt_apap);
				end if;
				if (r_c58.ie_sangue IS NOT NULL AND r_c58.ie_sangue::text <> '') then
					add_vector_data('ie_sangue',r_c58.nr_sequencia,294152,r_c58.ie_sangue,null,r_c58.dt_avaliacao,'URC',292,'8',R_C58.dt_apap);
				end if;
				if (r_c58.ie_cetona IS NOT NULL AND r_c58.ie_cetona::text <> '') then
					add_vector_data('ie_cetona',r_c58.nr_sequencia,294152,r_c58.ie_cetona,null,r_c58.dt_avaliacao,'URC',285,'9',R_C58.dt_apap);
				end if;
				if (r_c58.ie_glicose IS NOT NULL AND r_c58.ie_glicose::text <> '') then
					add_vector_data('ie_glicose',r_c58.nr_sequencia,294152,r_c58.ie_glicose,null,r_c58.dt_avaliacao,'URC',287,'10',R_C58.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EL') then
			for r_c59 in c59 loop
				begin

				if (obter_campo_result(r_c59.ds_formato) = 'V') then
					add_vector_data('qt_resultado',r_c59.NR_SEQ_RESULTADO,296046,null,R_C59.qt_resultado,r_c59.dt_resultado,'EL',r_c59.nr_seq_exame,'1',R_C59.dt_apap,r_c59.nr_sequencia);
				elsif (obter_campo_result(r_c59.ds_formato) = 'D') then
					add_vector_data('ds_resultado',r_c59.NR_SEQ_RESULTADO,296046,r_c59.ds_resultado,null,r_c59.dt_resultado,'EL', r_c59.nr_seq_exame,'1',R_C59.dt_apap,r_c59.nr_sequencia);
				elsif (obter_campo_result(r_c59.ds_formato) = 'PR') then
					add_vector_data('pr_resultado',r_c59.NR_SEQ_RESULTADO,296046,null,r_c59.pr_resultado,r_c59.dt_resultado,'EL', r_c59.nr_seq_exame,'1',R_C59.dt_apap,r_c59.nr_sequencia);
				end if;

				end;
			end loop;

        elsif (ie_tipo_grupo_w = 'SVP') then

            select  coalesce(max(ie_grafico),'N'),
                    coalesce(max(ie_minima),'N'),
                    coalesce(max(ie_maxima),'N'),
                    coalesce(max(ie_media),'N'),
                    coalesce(max(ie_total),'N')
            into STRICT    ie_grafico_w,
                    ie_minima_w,
                    ie_maxima_w,
                    ie_media_w,
                    ie_total_w
            from    pep_apap_inf
            where   nr_seq_grupo_apap = nr_seq_grupo_w;

            for item in solucao_item loop

                solucao_item_nr_seq_solucao_w := item.nr_seq_solucao;
                solucao_item_nr_prescricao_w := item.nr_prescricao;

                select  nextval('w_apap_pac_informacao_seq')
				into STRICT    nr_seq_apap_pac_informacao_w
				;

                insert into w_apap_pac_informacao(
                    nr_sequencia,
                    dt_atualizacao,
                    nm_usuario,
                    dt_atualizacao_nrec,
                    nm_usuario_nrec,
                    nr_seq_inf,
                    ie_origem,
                    ds_informacao,
                    nr_seq_apap_grupo,
                    ie_minima,
                    ie_maxima,
                    ie_media,
                    ie_total,
                    ie_grafico,
                    nr_seq_tipo_pg,
                    nr_seq_grupo_pg,
                    ie_manter_nulo)
                values (
                    nr_seq_apap_pac_informacao_w,
                    clock_timestamp(),
                    nm_usuario_p,
                    clock_timestamp(),
                    nm_usuario_p,
                    nr_seq_inf_w,
                    ie_origem_w,
                    item.ds_solucao,
                    nr_seq_apap_pac_grupo_w,
                    ie_minima_w,
                    ie_maxima_w,
                    ie_media_w,
                    ie_total_w,
                    ie_grafico_w,
                    nr_seq_tipo_pg_w,
                    nr_seq_grupo_pg_w,
                    ie_manter_nulo_w);

                for valor in solucao_valores loop
                    insert_data(
                                -1,
                                valor.dt_apap,
                                valor.qt_volume,
                                null,
                                nr_seq_apap_pac_informacao_w
                                );
                end loop;
            end loop;

		elsif (ie_tipo_grupo_w = 'AK') then
			open C60;
			loop
			fetch C60 into
				nr_seq_akin_w,
				dt_aval_akin_w,
				IE_NIVEL_SERICO_AKIN_W,
				IE_DEBITO_URINARIO_AKIN_W,
				QT_PONTUACAO_AKIN_W,
				DS_PONTUACAO_AKIN_W,
				dt_apap_w;
			EXIT WHEN NOT FOUND; /* apply on C60 */
				begin
				if (IE_NIVEL_SERICO_AKIN_W IS NOT NULL AND IE_NIVEL_SERICO_AKIN_W::text <> '') then
					add_vector_data('IE_NIVEL_SERICO_AKIN_W',nr_seq_akin_w,294152,IE_NIVEL_SERICO_AKIN_W,null,dt_aval_akin_w,'AK',null,'1',dt_apap_w);
				end if;
				if (IE_DEBITO_URINARIO_AKIN_W IS NOT NULL AND IE_DEBITO_URINARIO_AKIN_W::text <> '') then
					add_vector_data('IE_DEBITO_URINARIO_AKIN_W',nr_seq_akin_w,287334,IE_DEBITO_URINARIO_AKIN_W,null,dt_aval_akin_w,'AK',null,'2',dt_apap_w);
				end if;
				if (QT_PONTUACAO_AKIN_W > 0) then
					add_vector_data('QT_PONTUACAO_AKIN_W',nr_seq_akin_w,296046,null,QT_PONTUACAO_AKIN_W,dt_aval_akin_w,'AK',null,'3',dt_apap_w);
				end if;
				if (DS_PONTUACAO_AKIN_W IS NOT NULL AND DS_PONTUACAO_AKIN_W::text <> '') then
					add_vector_data('DS_PONTUACAO_AKIN_W',nr_seq_akin_w,297817,DS_PONTUACAO_AKIN_W,null,dt_aval_akin_w,'AK',null,'4',dt_apap_w);
				end if;

				end;
			end loop;
			close C60;
		elsif (ie_tipo_grupo_w = 'ALD') then
			open C61;
			loop
			fetch C61 into
				nr_seq_registro_w,
				dt_registro_w,
				qt_aldrete_w,
				dt_apap_w;
			EXIT WHEN NOT FOUND; /* apply on C61 */
				begin
				if (qt_aldrete_w IS NOT NULL AND qt_aldrete_w::text <> '') then
					add_vector_data('qt_aldrete_w',nr_seq_registro_w,296046,null,qt_aldrete_w,dt_registro_w,'ALD',null,'1',dt_apap_w);
				end if;
				end;
			end loop;
			close C61;
		elsif (ie_tipo_grupo_w = 'EB') then
			open C62;
			loop
			fetch C62 into
				nr_seq_registro_w,
				dt_registro_w,
				qt_ponto_w,
				dt_apap_w,
				ie_percepcao_sensorial_w,
				ie_umidade_w,
				ie_atividade_fisica_w,
				ie_mobilidade_w,
				ie_nutricao_w,
				ie_friccao_cisalhamento_w,
        ds_qt_ponto_w;
			EXIT WHEN NOT FOUND; /* apply on C62 */
				begin
				if (qt_ponto_w IS NOT NULL AND qt_ponto_w::text <> '') then
					add_vector_data('qt_ponto_w',nr_seq_registro_w,296046,null,qt_ponto_w,dt_registro_w,'EB',null,'7',dt_apap_w);
          add_vector_data('qt_ponto_w',nr_seq_registro_w,285080, ds_qt_ponto_w, null, dt_registro_w,'EB',null,'8', dt_apap_w);
				end if;

				if (ie_percepcao_sensorial_w IS NOT NULL AND ie_percepcao_sensorial_w::text <> '') then
					add_vector_data('ie_percepcao_sensorial_w',nr_seq_registro_w,295431,ie_percepcao_sensorial_w,null,dt_registro_w,'EB',null,'1',dt_apap_w);
				end if;

				if (ie_umidade_w IS NOT NULL AND ie_umidade_w::text <> '') then
					add_vector_data('ie_umidade_w',nr_seq_registro_w,300702,ie_umidade_w,null,dt_registro_w,'EB',null,'2',dt_apap_w);
				end if;

				if (ie_atividade_fisica_w IS NOT NULL AND ie_atividade_fisica_w::text <> '') then
					add_vector_data('ie_atividade_fisica_w',nr_seq_registro_w,283895,ie_atividade_fisica_w,null,dt_registro_w,'EB',null,'3',dt_apap_w);
				end if;

				if (ie_mobilidade_w IS NOT NULL AND ie_mobilidade_w::text <> '') then
					add_vector_data('ie_mobilidade_w',nr_seq_registro_w,293371,ie_mobilidade_w,null,dt_registro_w,'EB',null,'4',dt_apap_w);
				end if;

				if (ie_nutricao_w IS NOT NULL AND ie_nutricao_w::text <> '') then
					add_vector_data('ie_nutricao_w',nr_seq_registro_w,294515,ie_nutricao_w,null,dt_registro_w,'EB',null,'5',dt_apap_w);
				end if;

				if (ie_friccao_cisalhamento_w IS NOT NULL AND ie_friccao_cisalhamento_w::text <> '') then
					add_vector_data('ie_friccao_cisalhamento_w',nr_seq_registro_w,290501,ie_friccao_cisalhamento_w,null,dt_registro_w,'EB',null,'6',dt_apap_w);
				end if;

				end;
			end loop;
			close C62;
		elsif (ie_tipo_grupo_w = 'EBQ') then
			for r_c63 in c63 loop
				begin

				if (r_c63.IE_MOBILIDADE IS NOT NULL AND r_c63.IE_MOBILIDADE::text <> '') then
					add_vector_data('IE_MOBILIDADE',r_c63.nr_sequencia,293371,r_c63.IE_MOBILIDADE,null,R_C63.dt_avaliacao,'EBQ',null,'1',R_C63.dt_apap);
				end if;
				if (r_c63.IE_ATIVIDADE_FISICA IS NOT NULL AND r_c63.IE_ATIVIDADE_FISICA::text <> '') then
					add_vector_data('IE_ATIVIDADE_FISICA',r_c63.nr_sequencia,283895,r_c63.IE_ATIVIDADE_FISICA,null,r_c63.dt_avaliacao,'EBQ',null,'2',R_C63.dt_apap);
				end if;
				if (r_c63.IE_PERCEPCAO_SENSORIAL IS NOT NULL AND r_c63.IE_PERCEPCAO_SENSORIAL::text <> '') then
					add_vector_data('IE_PERCEPCAO_SENSORIAL',r_c63.nr_sequencia,295431,r_c63.IE_PERCEPCAO_SENSORIAL,null,r_c63.dt_avaliacao,'EBQ',null,'3',R_C63.dt_apap);
				end if;
				if (r_c63.IE_UMIDADE IS NOT NULL AND r_c63.IE_UMIDADE::text <> '') then
					add_vector_data('IE_UMIDADE',r_c63.nr_sequencia,300702,r_c63.IE_UMIDADE,null,r_c63.dt_avaliacao,'EBQ',null,'4',R_C63.dt_apap);
				end if;
				if (r_c63.IE_FRICCAO_CISALHAMENTO IS NOT NULL AND r_c63.IE_FRICCAO_CISALHAMENTO::text <> '') then
					add_vector_data('IE_FRICCAO_CISALHAMENTO',r_c63.nr_sequencia,290501,r_c63.IE_FRICCAO_CISALHAMENTO,null,r_c63.dt_avaliacao,'EBQ',null,'5',R_C63.dt_apap);
				end if;
				if (r_c63.IE_NUTRICAO IS NOT NULL AND r_c63.IE_NUTRICAO::text <> '') then
					add_vector_data('IE_NUTRICAO',r_c63.nr_sequencia,294515,r_c63.IE_NUTRICAO,null,r_c63.dt_avaliacao,'EBQ',null,'6',R_C63.dt_apap);
				end if;
				if (r_c63.IE_PERFUSAO IS NOT NULL AND r_c63.IE_PERFUSAO::text <> '') then
					add_vector_data('IE_PERFUSAO',r_c63.nr_sequencia,295450,r_c63.IE_PERFUSAO,null,r_c63.dt_avaliacao,'EBQ',null,'7',R_C63.dt_apap);
				end if;
				if (r_c63.QT_PONTO IS NOT NULL AND r_c63.QT_PONTO::text <> '') then
					add_vector_data('QT_PONTO',r_c63.nr_sequencia,296046,null,r_c63.QT_PONTO,r_c63.dt_avaliacao,'EBQ',null,'8',R_C63.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'CAM') then
			for r_c64 in c64 loop
				begin

				if (r_c64.ds_resultado IS NOT NULL AND r_c64.ds_resultado::text <> '') then
					add_vector_data('ds_resultado',r_c64.nr_sequencia,296046,R_C64.ds_resultado,null,r_c64.dt_avaliacao,'CAM',null,'1',R_C64.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'ECL') then
			for R_C65 in c65 loop
				begin

				if (r_c65.qt_cockcroft_gault IS NOT NULL AND r_c65.qt_cockcroft_gault::text <> '') then
					add_vector_data('qt_cockcroft_gault',r_c65.nr_sequencia,302907,null,r_c65.qt_cockcroft_gault,r_c65.dt_avaliacao,'ECL',null,'1',R_C65.dt_apap);
				end if;
				if (r_c65.qt_mdrd IS NOT NULL AND r_c65.qt_mdrd::text <> '') then
					add_vector_data('qt_mdrd',r_c65.nr_sequencia,683402,null,r_c65.qt_mdrd,r_c65.dt_avaliacao,'ECL',null,'2',R_C65.dt_apap);
				end if;
				if (r_c65.qt_schwartz IS NOT NULL AND r_c65.qt_schwartz::text <> '') then
					add_vector_data('qt_schwartz',r_c65.nr_sequencia,306258,null,r_c65.qt_schwartz,r_c65.dt_avaliacao,'ECL',null,'3',R_C65.dt_apap);
				end if;
				if (r_c65.qt_counhahan_barratt IS NOT NULL AND r_c65.qt_counhahan_barratt::text <> '') then
					add_vector_data('qt_counhahan_barratt',r_c65.nr_sequencia,303227,null,r_c65.qt_counhahan_barratt,r_c65.dt_avaliacao,'ECL',null,'4',R_C65.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'CRIB') then
			for R_C66 in c66 loop
				begin

				if (r_c66.pr_score IS NOT NULL AND r_c66.pr_score::text <> '') then
					add_vector_data('pr_score',r_c66.nr_sequencia,299109,null,r_c66.pr_score,r_c66.dt_avaliacao,'CRIB',null,'2',R_C66.dt_apap);
				end if;
				if (r_c66.qt_score IS NOT NULL AND r_c66.qt_score::text <> '') then
					add_vector_data('qt_score',r_c66.nr_sequencia,298062,null,r_c66.qt_score,r_c66.dt_avaliacao,'CRIB',null,'1',R_C66.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'NHS') then
			for R_C67 in c67 loop
				begin

				if (r_c67.qt_pontuacao IS NOT NULL AND r_c67.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c67.nr_sequencia,299109,null,r_c67.qt_pontuacao,r_c67.dt_avaliacao,'NHS',null,'1',R_C67.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EDI') then
			for r_c68 in c68 loop
				begin

				if (r_c68.qt_pontuacao IS NOT NULL AND r_c68.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c68.nr_sequencia,299109,null,r_c68.qt_pontuacao,r_c68.dt_avaliacao,'EDI',null,'1',R_C68.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'ECA') then
			for R_C69 in c69 loop
				begin

				if (r_c69.qt_pontuacao IS NOT NULL AND r_c69.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c69.nr_sequencia,299109,null,r_c69.qt_pontuacao,r_c69.dt_avaliacao,'ECA',null,'1',R_C69.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EDMO') then
			for r_c70 in c70 loop
				begin

				if (r_c70.ie_dor IS NOT NULL AND r_c70.ie_dor::text <> '') then
					add_vector_data('ie_dor',R_C70.nr_sequencia,299109,null,r_c70.ie_dor,r_c70.dt_avaliacao,'EDMO',null,'1',R_C70.dt_apap);
				end if;

				if (r_c70.ie_cansaco IS NOT NULL AND r_c70.ie_cansaco::text <> '') then
					add_vector_data('ie_cansaco',r_c70.nr_sequencia,299109,null,r_c70.ie_cansaco,r_c70.dt_avaliacao,'EDMO',null,'2',R_C70.dt_apap);
				end if;

				if (r_c70.ie_nausea IS NOT NULL AND r_c70.ie_nausea::text <> '') then
					add_vector_data('ie_nausea',r_c70.nr_sequencia,299109,null,r_c70.ie_nausea,r_c70.dt_avaliacao,'EDMO',null,'3',R_C70.dt_apap);
				end if;

				if (r_c70.ie_depressao IS NOT NULL AND r_c70.ie_depressao::text <> '') then
					add_vector_data('ie_depressao',r_c70.nr_sequencia,299109,null,r_c70.ie_depressao,r_c70.dt_avaliacao,'EDMO',null,'4',R_C70.dt_apap);
				end if;

				if (r_c70.ie_ansiedade IS NOT NULL AND r_c70.ie_ansiedade::text <> '') then
					add_vector_data('ie_ansiedade',r_c70.nr_sequencia,299109,null,r_c70.ie_ansiedade,r_c70.dt_avaliacao,'EDMO',null,'5',R_C70.dt_apap);
				end if;

				if (r_c70.ie_sonolencia IS NOT NULL AND r_c70.ie_sonolencia::text <> '') then
					add_vector_data('ie_sonolencia',r_c70.nr_sequencia,299109,null,r_c70.ie_sonolencia,r_c70.dt_avaliacao,'EDMO',null,'6',R_C70.dt_apap);
				end if;

				if (r_c70.ie_bom_apetite IS NOT NULL AND r_c70.ie_bom_apetite::text <> '') then
					add_vector_data('ie_bom_apetite',r_c70.nr_sequencia,299109,null,r_c70.ie_bom_apetite,r_c70.dt_avaliacao,'EDMO',null,'7',R_C70.dt_apap);
				end if;

				if (r_c70.ie_sensacao_bem_estar IS NOT NULL AND r_c70.ie_sensacao_bem_estar::text <> '') then
					add_vector_data('ie_sensacao_bem_estar',r_c70.nr_sequencia,299109,null,r_c70.ie_sensacao_bem_estar,r_c70.dt_avaliacao,'EDMO',null,'8',R_C70.dt_apap);
				end if;

				if (r_c70.ie_falta_ar IS NOT NULL AND r_c70.ie_falta_ar::text <> '') then
					add_vector_data('ie_falta_ar',r_c70.nr_sequencia,299109,null,r_c70.ie_falta_ar,r_c70.dt_avaliacao,'EDMO',null,'9',R_C70.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EF') then
			for r_c71 in c71 loop
				begin

				if (r_c71.ie_intensidade IS NOT NULL AND r_c71.ie_intensidade::text <> '') then
					add_vector_data('ie_intensidade',R_C71.nr_sequencia,299109,r_c71.ie_intensidade,null,r_c71.dt_avaliacao,'EF',null,'1',R_C71.dt_apap);
          add_vector_data('ie_intensidade',R_C71.nr_sequencia,299109,r_c71.ds_ie_intensidade,null,r_c71.dt_avaliacao,'EF',null,'2',R_C71.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EFN') then
			for r_c72 in c72 loop
				begin

				if (r_c72.ie_flebite IS NOT NULL AND r_c72.ie_flebite::text <> '') then
					add_vector_data('ie_flebite',r_c72.nr_sequencia,299109,r_c72.ie_flebite,null,R_C72.dt_avaliacao,'EFN',null,'2',R_C72.dt_apap);
				end if;

				if (r_c72.ds_flebite IS NOT NULL AND r_c72.ds_flebite::text <> '') then
					add_vector_data('ds_flebite',r_c72.nr_sequencia,299109,r_c72.ds_flebite,null,r_c72.dt_avaliacao,'EFN',null,'1',R_C72.dt_apap);
				end if;

				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'ES') then
			for r_c73 in c73 loop
				begin

				if (R_C73.ie_resposta_motora IS NOT NULL AND R_C73.ie_resposta_motora::text <> '') then
					add_vector_data('ie_resposta_motora',r_c73.nr_sequencia,299109,r_c73.ie_resposta_motora,null,r_c73.dt_avaliacao,'ES',null,'1',R_C73.dt_apap);
				end if;

				if (r_c73.ie_abertura_ocular IS NOT NULL AND r_c73.ie_abertura_ocular::text <> '') then
					add_vector_data('ie_abertura_ocular',r_c73.nr_sequencia,299109,r_c73.ie_abertura_ocular,null,r_c73.dt_avaliacao,'ES',null,'2',R_C73.dt_apap);
				end if;

				if (r_c73.qt_glasgow IS NOT NULL AND r_c73.qt_glasgow::text <> '') then
					add_vector_data('qt_glasgow',r_c73.nr_sequencia,299109,null,r_c73.qt_glasgow,r_c73.dt_avaliacao,'ES',null,'3',R_C73.dt_apap);
          add_vector_data('qt_glasgow',r_c73.nr_sequencia,291705,r_c73.ds_qt_glasgow, null,r_c73.dt_avaliacao,'ES',null,'5',R_C73.dt_apap);
        end if;

				if (r_c73.ie_resposta_verbal IS NOT NULL AND r_c73.ie_resposta_verbal::text <> '') then
					add_vector_data('ie_resposta_verbal',r_c73.nr_sequencia,299109,r_c73.ie_resposta_verbal,null,r_c73.dt_avaliacao,'ES',null,'4',R_C73.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'KARN') then
			for r_c74 in c74 loop
				begin

				if (r_c74.ie_karnofsky IS NOT NULL AND r_c74.ie_karnofsky::text <> '') then
					add_vector_data('qt_pontuacao',r_c74.nr_sequencia,299109,r_c74.ie_karnofsky,null,R_C74.dt_avaliacao,'KARN',null,'1',R_C74.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EM') then
			for r_c75 in c75 loop
				begin

				if (r_c75.QT_FREQ_CARDIACA IS NOT NULL AND r_c75.QT_FREQ_CARDIACA::text <> '') then
					add_vector_data('QT_FREQ_CARDIACA',r_c75.nr_sequencia,299109,null,r_c75.QT_FREQ_CARDIACA,r_c75.dt_avaliacao,'EM',null,'1',R_C75.dt_apap);
				end if;

				if (r_c75.QT_FREQ_RESP IS NOT NULL AND r_c75.QT_FREQ_RESP::text <> '') then
					add_vector_data('QT_FREQ_RESP',r_c75.nr_sequencia,299109,null,r_c75.QT_FREQ_RESP,r_c75.dt_avaliacao,'EM',null,'2',R_C75.dt_apap);
				end if;

				if (r_c75.QT_PA_SISTOLICA IS NOT NULL AND r_c75.QT_PA_SISTOLICA::text <> '') then
					add_vector_data('QT_PA_SISTOLICA',r_c75.nr_sequencia,299109,null,r_c75.QT_PA_SISTOLICA,r_c75.dt_avaliacao,'EM',null,'3',R_C75.dt_apap);
				end if;

				if (r_c75.QT_TEMP IS NOT NULL AND r_c75.QT_TEMP::text <> '') then
					add_vector_data('QT_TEMP',r_c75.nr_sequencia,299109,null,r_c75.QT_TEMP,r_c75.dt_avaliacao,'EM',null,'4',R_C75.dt_apap);
				end if;

				if (r_c75.IE_NIVEL_CONSCIENCIA IS NOT NULL AND r_c75.IE_NIVEL_CONSCIENCIA::text <> '') then
					add_vector_data('IE_NIVEL_CONSCIENCIA',r_c75.nr_sequencia,299109,r_c75.IE_NIVEL_CONSCIENCIA,null,r_c75.dt_avaliacao,'EM',null,'5',R_C75.dt_apap);
				end if;

				if (r_c75.QT_PONTUACAO IS NOT NULL AND r_c75.QT_PONTUACAO::text <> '') then
					add_vector_data('QT_PONTUACAO',r_c75.nr_sequencia,299109,null,r_c75.QT_PONTUACAO,R_C75.dt_avaliacao,'EM',null,'6',R_C75.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'MODS') then
			for r_c76 in c76 loop
				begin

				if (r_c76.qt_pontuacao IS NOT NULL AND r_c76.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c76.nr_sequencia,299109,null,R_C76.qt_pontuacao,r_c76.dt_avaliacao,'MODS',null,'1',R_C76.dt_apap);
				end if;

				if (r_c76.qt_pto_resp IS NOT NULL AND r_c76.qt_pto_resp::text <> '') then
					add_vector_data('qt_pto_resp',r_c76.nr_sequencia,299109,null,r_c76.qt_pto_resp,r_c76.dt_avaliacao,'MODS',null,'2',R_C76.dt_apap);
				end if;

				if (r_c76.qt_pto_snc IS NOT NULL AND r_c76.qt_pto_snc::text <> '') then
					add_vector_data('qt_pto_snc',r_c76.nr_sequencia,299109,null,r_c76.qt_pto_snc,r_c76.dt_avaliacao,'MODS',null,'3',R_C76.dt_apap);
				end if;

				if (r_c76.qt_pto_cardio IS NOT NULL AND r_c76.qt_pto_cardio::text <> '') then
					add_vector_data('qt_pto_cardio',r_c76.nr_sequencia,299109,null,r_c76.qt_pto_cardio,r_c76.dt_avaliacao,'MODS',null,'4',R_C76.dt_apap);
				end if;

				if (r_c76.qt_pto_hepatica IS NOT NULL AND r_c76.qt_pto_hepatica::text <> '') then
					add_vector_data('qt_pto_hepatica',r_c76.nr_sequencia,299109,null,r_c76.qt_pto_hepatica,r_c76.dt_avaliacao,'MODS',null,'5',R_C76.dt_apap);
				end if;

				if (r_c76.qt_pto_coag IS NOT NULL AND r_c76.qt_pto_coag::text <> '') then
					add_vector_data('qt_pto_coag',r_c76.nr_sequencia,299109,null,r_c76.qt_pto_coag,r_c76.dt_avaliacao,'MODS',null,'6',R_C76.dt_apap);
				end if;

				if (r_c76.qt_pto_renal IS NOT NULL AND r_c76.qt_pto_renal::text <> '') then
					add_vector_data('qt_pto_renal',r_c76.nr_sequencia,299109,null,r_c76.qt_pto_renal,r_c76.dt_avaliacao,'MODS',null,'7',R_C76.dt_apap);
				end if;

				if (r_c76.pr_mortalidade IS NOT NULL AND r_c76.pr_mortalidade::text <> '') then
					add_vector_data('pr_mortalidade',r_c76.nr_sequencia,299109,null,r_c76.pr_mortalidade,r_c76.dt_avaliacao,'MODS',null,'8',R_C76.dt_apap);
				end if;

				if (r_c76.pr_mortalidade_uti IS NOT NULL AND r_c76.pr_mortalidade_uti::text <> '') then
					add_vector_data('pr_mortalidade_uti',r_c76.nr_sequencia,299109,null,r_c76.pr_mortalidade_uti,r_c76.dt_avaliacao,'MODS',null,'9',R_C76.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EMO') then
			for r_c77 in c77 loop
				begin

				if (r_c77.qt_pontuacao IS NOT NULL AND r_c77.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c77.nr_sequencia,299109,null,r_c77.qt_pontuacao,r_c77.dt_avaliacao,'EMO',null,'1',R_C77.dt_apap);
				end if;

				if (r_c77.ie_risco IS NOT NULL AND r_c77.ie_risco::text <> '') then
					add_vector_data('ie_risco',r_c77.nr_sequencia,299109,r_c77.ie_risco,null,R_C77.dt_avaliacao,'EMO',null,'2',R_C77.dt_apap);
				end if;

				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'EN') then
			for r_c78 in c78 loop
				begin
				if (r_c78.qt_pontuacao IS NOT NULL AND r_c78.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c78.nr_sequencia,299109,null,r_c78.qt_pontuacao,R_C78.dt_avaliacao,'EN',null,'1',R_C78.dt_apap);
				end if;
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'ENT') then
			for r_c79 in c79 loop
				begin
				if (r_c79.QT_PTO_TOTAL IS NOT NULL AND r_c79.QT_PTO_TOTAL::text <> '') then
					add_vector_data('QT_PTO_TOTAL',r_c79.nr_sequencia,299109,null,R_C79.QT_PTO_TOTAL,r_c79.dt_avaliacao,'ENT',null,'1',R_C79.dt_apap);
				end if;
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'ER') then
			for r_c80 in c80 loop
				begin
				if (r_c80.ie_ramsay IS NOT NULL AND r_c80.ie_ramsay::text <> '') then
					add_vector_data('ie_ramsay',R_C80.nr_sequencia,299109,r_c80.ie_ramsay,null,r_c80.dt_avaliacao,'ER',null,'2',R_C80.dt_apap);
				end if;

				if (r_c80.ds_ramsay IS NOT NULL AND r_c80.ds_ramsay::text <> '') then
					add_vector_data('ds_ramsay',r_c80.nr_sequencia,299109,r_c80.ds_ramsay,null,r_c80.dt_avaliacao,'ER',null,'1',R_C80.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'RR') then
			for r_c81 in c81 loop
				begin
				if (r_c81.ie_rass IS NOT NULL AND r_c81.ie_rass::text <> '') then
					add_vector_data('ie_rass',r_c81.nr_sequencia,299109,R_C81.ie_rass,null,r_c81.dt_avaliacao,'RR',null,'1',R_C81.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'SNAP') then
			for r_c82 in c82 loop
				begin
				if (r_c82.qt_pontuacao IS NOT NULL AND r_c82.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',R_C82.nr_sequencia,299109,null,r_c82.qt_pontuacao,r_c82.dt_avaliacao,'SNAP',null,'1',R_C82.dt_apap);
				end if;
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'SNP') then
			for r_c83 in c83 loop
				begin
				if (r_c83.qt_snap_ii IS NOT NULL AND r_c83.qt_snap_ii::text <> '') then
					add_vector_data('qt_snap_ii',r_c83.nr_sequencia,299109,null,r_c83.qt_snap_ii,R_C83.dt_avaliacao,'SNP',null,'1',R_C83.dt_apap);
				end if;
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'SNPP') then
			for r_c84 in c84 loop
				begin
				if (r_c84.qt_snappe_ii IS NOT NULL AND r_c84.qt_snappe_ii::text <> '') then
					add_vector_data('qt_snappe_ii',r_c84.nr_sequencia,299109,null,r_c84.qt_snappe_ii,R_C84.dt_avaliacao,'SNPP',null,'1',R_C84.dt_apap);
				end if;
				end;
			end loop;

		elsif (ie_tipo_grupo_w = 'SNPPM') then
			for r_c85 in c85 loop
				begin
				if (R_C85.pr_mortalidade IS NOT NULL AND R_C85.pr_mortalidade::text <> '') then
					add_vector_data('pr_mortalidade',r_c85.nr_sequencia,299109,null,r_c85.pr_mortalidade,r_c85.dt_avaliacao,'SNPPM',null,'1',R_C85.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'SOFA') then
			for r_c86 in c86 loop
				begin
				if (r_c86.qt_pontuacao IS NOT NULL AND r_c86.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c86.nr_sequencia,299109,null,r_c86.qt_pontuacao,R_C86.dt_avaliacao,'SOFA',null,'1',R_C86.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'ESTR') then
			for r_c87 in c87 loop
				begin
				if (r_c87.qt_score IS NOT NULL AND r_c87.qt_score::text <> '') then
					add_vector_data('qt_score',r_c87.nr_sequencia,299109,null,r_c87.qt_score,r_c87.dt_avaliacao,'ESTR',null,'1',R_C87.dt_apap);
				end if;

				if (R_C87.ds_score IS NOT NULL AND R_C87.ds_score::text <> '') then
					add_vector_data('ds_score',r_c87.nr_sequencia,299109,r_c87.ds_score,null,r_c87.dt_avaliacao,'ESTR',null,'2',R_C87.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'ET') then
			for r_c88 in c88 loop
				begin
				if (r_c88.ds_risco IS NOT NULL AND r_c88.ds_risco::text <> '') then
					add_vector_data('ds_risco',R_C88.nr_sequencia,299109,r_c88.ds_risco,null,r_c88.dt_avaliacao,'ET',null,'1',R_C88.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'ETN') then
			for r_c89 in c89 loop
				begin
				if (r_c89.qt_pontuacao IS NOT NULL AND r_c89.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c89.nr_sequencia,299109,null,r_c89.qt_pontuacao,R_C89.dt_avaliacao,'ETN',null,'1',R_C89.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'TI28') then
			for r_c90 in c90 loop
				begin
				if (r_c90.qt_pontuacao IS NOT NULL AND r_c90.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c90.nr_sequencia,299109,null,r_c90.qt_pontuacao,R_C90.dt_avaliacao,'TI28',null,'1',R_C90.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'GR') then
			for r_c91 in c91 loop
				begin
				if (r_c91.QT_IDADE IS NOT NULL AND r_c91.QT_IDADE::text <> '') then
					add_vector_data('QT_IDADE',r_c91.nr_sequencia,299109,null,R_C91.QT_IDADE,r_c91.dt_avaliacao,'GR',null,'1',R_C91.dt_apap);
				end if;

				if (r_c91.QT_FREQ_CARDIACA IS NOT NULL AND r_c91.QT_FREQ_CARDIACA::text <> '') then
					add_vector_data('QT_FREQ_CARDIACA',r_c91.nr_sequencia,299109,null,r_c91.QT_FREQ_CARDIACA,r_c91.dt_avaliacao,'GR',null,'2',R_C91.dt_apap);
				end if;

				if (r_c91.QT_PA_SISTOLICA IS NOT NULL AND r_c91.QT_PA_SISTOLICA::text <> '') then
					add_vector_data('QT_PA_SISTOLICA',r_c91.nr_sequencia,299109,null,r_c91.QT_PA_SISTOLICA,r_c91.dt_avaliacao,'GR',null,'3',R_C91.dt_apap);
				end if;

				if (r_c91.QT_CREATININA IS NOT NULL AND r_c91.QT_CREATININA::text <> '') then
					add_vector_data('QT_CREATININA',r_c91.nr_sequencia,299109,null,r_c91.QT_CREATININA,r_c91.dt_avaliacao,'GR',null,'4',R_C91.dt_apap);
				end if;

				if (r_c91.DS_KILLIP IS NOT NULL AND r_c91.DS_KILLIP::text <> '') then
					add_vector_data('DS_KILLIP',r_c91.nr_sequencia,299109,r_c91.DS_KILLIP,null,r_c91.dt_avaliacao,'GR',null,'5',R_C91.dt_apap);
				end if;

				if (r_c91.IE_PARADA_CARDIACA_ADM IS NOT NULL AND r_c91.IE_PARADA_CARDIACA_ADM::text <> '') then
					add_vector_data('IE_PARADA_CARDIACA_ADM',r_c91.nr_sequencia,299109,r_c91.IE_PARADA_CARDIACA_ADM,null,r_c91.dt_avaliacao,'GR',null,'6',R_C91.dt_apap);
				end if;

				if (r_c91.IE_MARCADOR_CARDIACO_ELE IS NOT NULL AND r_c91.IE_MARCADOR_CARDIACO_ELE::text <> '') then
					add_vector_data('IE_MARCADOR_CARDIACO_ELE',r_c91.nr_sequencia,299109,r_c91.IE_MARCADOR_CARDIACO_ELE,null,r_c91.dt_avaliacao,'GR',null,'7',R_C91.dt_apap);
				end if;

				if (r_c91.IE_DESVIO_SEG_ST IS NOT NULL AND r_c91.IE_DESVIO_SEG_ST::text <> '') then
					add_vector_data('IE_DESVIO_SEG_ST',r_c91.nr_sequencia,299109,r_c91.IE_DESVIO_SEG_ST,null,r_c91.dt_avaliacao,'GR',null,'8',R_C91.dt_apap);
				end if;

				if (r_c91.qt_pontuacao IS NOT NULL AND r_c91.qt_pontuacao::text <> '') then
					add_vector_data('QT_PONTUACAO',r_c91.nr_sequencia,299109,null,r_c91.QT_PONTUACAO,r_c91.dt_avaliacao,'GR',null,'9',R_C91.dt_apap);
				end if;

				if (r_c91.ds_resultado IS NOT NULL AND r_c91.ds_resultado::text <> '') then
					add_vector_data('ds_resultado',r_c91.nr_sequencia,299109,r_c91.ds_resultado,null,r_c91.dt_avaliacao,'GR',null,'10',R_C91.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'PIM') then
			for r_c92 in c92 loop
				begin
				if (r_c92.IE_ADM_ELETIVA IS NOT NULL AND r_c92.IE_ADM_ELETIVA::text <> '') then
					add_vector_data('IE_ADM_ELETIVA',r_c92.nr_sequencia,299109,r_c92.IE_ADM_ELETIVA,null,R_C92.dt_avaliacao,'PIM',null,'1',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_ADM_ELETIVA IS NOT NULL AND r_c92.QT_PTO_ADM_ELETIVA::text <> '') then
					add_vector_data('QT_PTO_ADM_ELETIVA',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_ADM_ELETIVA,r_c92.dt_avaliacao,'PIM',null,'2',R_C92.dt_apap);
				end if;
				if (r_c92.IE_PROC_RECUPERACAO IS NOT NULL AND r_c92.IE_PROC_RECUPERACAO::text <> '') then
					add_vector_data('IE_PROC_RECUPERACAO',r_c92.nr_sequencia,299109,r_c92.IE_PROC_RECUPERACAO,null,r_c92.dt_avaliacao,'PIM',null,'3',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_PROC_RECUP IS NOT NULL AND r_c92.QT_PTO_PROC_RECUP::text <> '') then
					add_vector_data('QT_PTO_PROC_RECUP',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_PROC_RECUP,r_c92.dt_avaliacao,'PIM',null,'4',R_C92.dt_apap);
				end if;
				if (r_c92.IE_CIRURGIA_CARDIACA IS NOT NULL AND r_c92.IE_CIRURGIA_CARDIACA::text <> '') then
					add_vector_data('IE_CIRURGIA_CARDIACA',r_c92.nr_sequencia,299109,r_c92.IE_CIRURGIA_CARDIACA,null,r_c92.dt_avaliacao,'PIM',null,'5',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_CIRUR_CARD IS NOT NULL AND r_c92.QT_PTO_CIRUR_CARD::text <> '') then
					add_vector_data('QT_PTO_CIRUR_CARD',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_CIRUR_CARD,r_c92.dt_avaliacao,'PIM',null,'6',R_C92.dt_apap);
				end if;
				if (r_c92.IE_DIAG_ALTO_RISCO IS NOT NULL AND r_c92.IE_DIAG_ALTO_RISCO::text <> '') then
					add_vector_data('IE_DIAG_ALTO_RISCO',r_c92.nr_sequencia,299109,r_c92.IE_DIAG_ALTO_RISCO,null,r_c92.dt_avaliacao,'PIM',null,'7',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_DIAG_ALTO_RISCO IS NOT NULL AND r_c92.QT_PTO_DIAG_ALTO_RISCO::text <> '') then
					add_vector_data('QT_PTO_DIAG_ALTO_RISCO',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_DIAG_ALTO_RISCO,r_c92.dt_avaliacao,'PIM',null,'8',R_C92.dt_apap);
				end if;
				if (r_c92.IE_DIAG_BAIXO_RISCO IS NOT NULL AND r_c92.IE_DIAG_BAIXO_RISCO::text <> '') then
					add_vector_data('IE_DIAG_BAIXO_RISCO',r_c92.nr_sequencia,299109,r_c92.IE_DIAG_BAIXO_RISCO,null,r_c92.dt_avaliacao,'PIM',null,'9',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_RESP_PUPILAS IS NOT NULL AND r_c92.QT_PTO_RESP_PUPILAS::text <> '') then
					add_vector_data('QT_PTO_RESP_PUPILAS',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_RESP_PUPILAS,r_c92.dt_avaliacao,'PIM',null,'10',R_C92.dt_apap);
				end if;
				if (r_c92.IE_RESPOSTA_PUPILAS IS NOT NULL AND r_c92.IE_RESPOSTA_PUPILAS::text <> '') then
					add_vector_data('IE_RESPOSTA_PUPILAS',r_c92.nr_sequencia,299109,r_c92.IE_RESPOSTA_PUPILAS,null,r_c92.dt_avaliacao,'PIM',null,'11',R_C92.dt_apap);
				end if;
				if (r_c92.IE_VENTILACAO_MECANICA IS NOT NULL AND r_c92.IE_VENTILACAO_MECANICA::text <> '') then
					add_vector_data('IE_VENTILACAO_MECANICA',r_c92.nr_sequencia,299109,r_c92.IE_VENTILACAO_MECANICA,null,r_c92.dt_avaliacao,'PIM',null,'12',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_VENT_MEC IS NOT NULL AND r_c92.QT_PTO_VENT_MEC::text <> '') then
					add_vector_data('QT_PTO_VENT_MEC',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_VENT_MEC,r_c92.dt_avaliacao,'PIM',null,'13',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PA_SITOLICA IS NOT NULL AND r_c92.QT_PA_SITOLICA::text <> '') then
					add_vector_data('QT_PA_SITOLICA',r_c92.nr_sequencia,299109,null,r_c92.QT_PA_SITOLICA,r_c92.dt_avaliacao,'PIM',null,'14',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_PA_SISTOLICA IS NOT NULL AND r_c92.QT_PTO_PA_SISTOLICA::text <> '') then
					add_vector_data('QT_PTO_PA_SISTOLICA',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_PA_SISTOLICA,r_c92.dt_avaliacao,'PIM',null,'15',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PH_SANGUE IS NOT NULL AND r_c92.QT_PH_SANGUE::text <> '') then
					add_vector_data('QT_PH_SANGUE',r_c92.nr_sequencia,299109,null,r_c92.QT_PH_SANGUE,r_c92.dt_avaliacao,'PIM',null,'16',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_PH_SANGUE IS NOT NULL AND r_c92.QT_PTO_PH_SANGUE::text <> '') then
					add_vector_data('QT_PTO_PH_SANGUE',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_PH_SANGUE,r_c92.dt_avaliacao,'PIM',null,'17',R_C92.dt_apap);
				end if;
				if (r_c92.QT_REL_PAO2 IS NOT NULL AND r_c92.QT_REL_PAO2::text <> '') then
					add_vector_data('QT_REL_PAO2',r_c92.nr_sequencia,299109,null,r_c92.QT_REL_PAO2,r_c92.dt_avaliacao,'PIM',null,'18',R_C92.dt_apap);
				end if;
				if (r_c92.QT_REL_FIO2 IS NOT NULL AND r_c92.QT_REL_FIO2::text <> '') then
					add_vector_data('QT_REL_FIO2',r_c92.nr_sequencia,299109,null,r_c92.QT_REL_FIO2,r_c92.dt_avaliacao,'PIM',null,'19',R_C92.dt_apap);
				end if;
				if (r_c92.QT_PTO_PAO2_FIO2 IS NOT NULL AND r_c92.QT_PTO_PAO2_FIO2::text <> '') then
					add_vector_data('QT_PTO_PAO2_FIO2',r_c92.nr_sequencia,299109,null,r_c92.QT_PTO_PAO2_FIO2,r_c92.dt_avaliacao,'PIM',null,'20',R_C92.dt_apap);
				end if;
				if (r_c92.QT_TX_MORTALIDADE IS NOT NULL AND r_c92.QT_TX_MORTALIDADE::text <> '') then
					add_vector_data('QT_TX_MORTALIDADE',r_c92.nr_sequencia,299109,null,r_c92.QT_TX_MORTALIDADE,r_c92.dt_avaliacao,'PIM',null,'21',R_C92.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'BA') then
			for r_c98 in C98 loop
				begin
				if (r_c98.qt_pontuacao IS NOT NULL AND r_c98.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c98.nr_sequencia,299109,null,r_c98.qt_pontuacao,r_c98.dt_avaliacao,'BA',null,'A',r_c98.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'MAD') then
			for r_c99 in C99 loop
				begin
				if (r_c99.qt_pontuacao IS NOT NULL AND r_c99.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c99.nr_sequencia,299109,null,r_c99.qt_pontuacao,r_c99.dt_avaliacao,'MAD',null,'A',r_c99.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'HE') then
			for r_c100 in C100 loop
				begin
				if (r_c100.qt_pontuacao IS NOT NULL AND r_c100.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c100.nr_sequencia,299109,null,r_c100.qt_pontuacao,r_c100.dt_avaliacao,'HE',null,'A',r_c100.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'TIT') then
			for r_c101 in C101 loop
				begin
				if (r_c101.qt_pontuacao IS NOT NULL AND r_c101.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c101.nr_sequencia,299109,null,r_c101.qt_pontuacao,r_c101.dt_avaliacao,'TIT',null,'A',r_c101.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'NRS') then
			for r_c102 in C102 loop
				begin
				if (r_c102.qt_pontuacao IS NOT NULL AND r_c102.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c102.nr_sequencia,299109,null,r_c102.qt_pontuacao,r_c102.dt_avaliacao,'NRS',null,'A',r_c102.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'CHD') then
			for r_c103 in C103 loop
				begin
				if (r_c103.qt_pontuacao IS NOT NULL AND r_c103.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c103.nr_sequencia,299109,null,r_c103.qt_pontuacao,r_c103.dt_avaliacao,'CHD',null,'A',r_c103.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'GOLD') then
			for r_c104 in C104 loop
				begin
				if (r_c104.IE_GRUPO IS NOT NULL AND r_c104.IE_GRUPO::text <> '') then
					add_vector_data('IE_GRUPO',r_c104.nr_sequencia,299109,r_c104.IE_GRUPO,null,r_c104.dt_avaliacao,'GOLD',null,'A',r_c104.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'FOR') then
			for r_c105 in C105 loop
				begin
				if (r_c105.IE_FORREST IS NOT NULL AND r_c105.IE_FORREST::text <> '') then
					add_vector_data('IE_FORREST',r_c105.nr_sequencia,299109,r_c105.IE_FORREST,null,r_c105.dt_avaliacao,'FOR',null,'A',r_c105.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'BIS') then
			for r_c106 in C106 loop
				begin
				if (r_c106.qt_pontuacao IS NOT NULL AND r_c106.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c106.nr_sequencia,299109,null,r_c106.qt_pontuacao,r_c106.dt_avaliacao,'BIS',null,'A',r_c106.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'CAP') then
			for r_c107 in C107 loop
				begin
				if (r_c107.IE_RISCO IS NOT NULL AND r_c107.IE_RISCO::text <> '') then
					add_vector_data('IE_RISCO',r_c107.nr_sequencia,299109,r_c107.IE_RISCO,null,r_c107.dt_avaliacao,'CAP',null,'A',r_c107.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'PUL') then
			for r_c108 in C108 loop
				begin
				if (r_c108.IE_PULS IS NOT NULL AND r_c108.IE_PULS::text <> '') then
					add_vector_data('IE_PULS',r_c108.nr_sequencia,299109,r_c108.IE_PULS,null,r_c108.dt_avaliacao,'PUL',null,'A',r_c108.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'APGAR') then
			for r_c109 in C109 loop
				begin
				if (r_c109.qt_pontuacao IS NOT NULL AND r_c109.qt_pontuacao::text <> '') then
					add_vector_data('qt_pontuacao',r_c109.nr_sequencia,299109,null,r_c109.qt_pontuacao,r_c109.dt_avaliacao,'APGAR',null,'A',r_c109.dt_apap);
				end if;
				end;
			end loop;
		elsif (ie_tipo_grupo_w = 'ECG') then
			for r_c110 in C110 loop
				begin
				if (r_c110.IE_NIVEL_ECOG IS NOT NULL AND r_c110.IE_NIVEL_ECOG::text <> '') then
					add_vector_data('IE_NIVEL_ECOG',r_c110.nr_sequencia,299109,null,r_c110.IE_NIVEL_ECOG,r_c110.dt_avaliacao,'ECG',null,'A',r_c110.dt_apap);
				end if;
				end;
			end loop;
		end if;

--		Inicio do tratamento dos INSERTs
		open C01;
		loop
		fetch C01 into
			nr_seq_inf_w,
			ie_origem_w,
			ie_balanco_hidrico_w,
			ie_controla_adep_w,
			ie_apresenta_zero_w,
			cd_material_w,
			nr_seq_tipo_pg_w,
			nr_seq_grupo_pg_w,
			nr_ficha_tecnica_w,
			nr_seq_gas_w,
			ds_unid_med_w,
			ie_grafico_w,
			ie_maxima_w,
			ie_minima_w,
			ie_media_w,
			ie_total_w,
			ds_info_w,
			nr_seq_exame_w,
			nr_seq_inf_adic_w,
			ie_membro_w,
			ie_pupila_lado_w,
			ie_manter_nulo_w,
			cd_grupo_material_w,
			cd_subgrupo_material_w,
			cd_classe_material_w,
			ie_evolucao_clinica_w,
			nr_seq_score_flex_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			ie_numerico_w := 'S';
			if (nr_seq_inf_w > 0) then
				select	max(obter_desc_expressao(cd_exp_unid_med, ds_unid_med)),
					max(ie_numerico)
				into STRICT	ds_unid_med_w,
					ie_numerico_w
				from	pep_informacao
				where	nr_sequencia = nr_seq_inf_w;
			end if;
			if (ie_tipo_grupo_w <> 'IA' and ie_tipo_grupo_w <> 'IP') then
				select nextval('w_apap_pac_informacao_seq')
				into STRICT	nr_seq_apap_pac_informacao_w
				;
			end if;

			if (ie_tipo_grupo_w = 'SV' or ie_tipo_grupo_w = 'GL') then
				ds_informacao_w := substr(obter_desc_informacao(nr_seq_inf_w),1,100);

				if (IE_MEMBRO_w IS NOT NULL AND IE_MEMBRO_w::text <> '') then
					ds_informacao_w	:= ds_informacao_w||' - '||obter_valor_dominio(1304,IE_MEMBRO_w);
				end if;

				if (ie_pupila_lado_w IS NOT NULL AND ie_pupila_lado_w::text <> '') then
					ds_informacao_w:= ds_informacao_w ||' - '||obter_valor_dominio(1372,ie_pupila_lado_w);
				end if;

			elsif (ie_tipo_grupo_w = 'IA') then
				for R_C12 in C12 loop

					select nextval('w_apap_pac_informacao_seq')
					into STRICT	nr_seq_apap_pac_informacao_w
					;

					insert into w_apap_pac_informacao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_inf,
						ie_origem,
						ds_informacao,
						nr_seq_apap_grupo,
						ie_maxima,
						ie_media,
						ie_minima,
						ie_total,
						ie_grafico,
						ds_unid_med,
						nr_seq_tipo_pg,
						nr_seq_grupo_pg,
						ie_manter_nulo)
					values (
						nr_seq_apap_pac_informacao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_inf_w,
						ie_origem_w,
						R_C12.ds_material,
						nr_seq_apap_pac_grupo_w,
						ie_minima_w,
						ie_maxima_w,
						ie_media_w,
						ie_total_w,
						ie_grafico_w,
						r_C12.ds_unidade_medida,
						nr_seq_tipo_pg_w,
						nr_seq_grupo_pg_w,
						ie_manter_nulo_w);

					for R_C13 in C13(R_C12.cd_material) loop
						insert_data(
							R_C13.nr_sequencia,
							R_C13.dt_fim_horario,
							R_C13.qt_dose,
							null,
							nr_seq_apap_pac_informacao_w,
							R_C13.dt_apap);
					end loop;
				end loop;
			elsif (ie_tipo_grupo_w = 'IP') then
				for R_C17 in C17 loop

					select nextval('w_apap_pac_informacao_seq')
					into STRICT	nr_seq_apap_pac_informacao_w
					;
					
					ds_itens_mat_comp_w := 	' - ' ||
											coalesce(obter_dados_material(R_C17.CD_MAT_COMP1, 'D'), 'Vazio') || ' - ' || coalesce(obter_dados_material(R_C17.CD_MAT_COMP2, 'D'), 'Vazio') || ' - ' || 
											coalesce(obter_dados_material(R_C17.CD_MAT_COMP3, 'D'), 'Vazio') || ' - ' || coalesce(obter_dados_material(R_C17.CD_MAT_COMP4, 'D'), 'Vazio') || ' - ' || 
											coalesce(obter_dados_material(R_C17.CD_MAT_COMP5, 'D'), 'Vazio') || ' - ' || coalesce(obter_dados_material(R_C17.CD_MAT_COMP6, 'D'), 'Vazio') || ' - ' || 
											coalesce(obter_dados_material(R_C17.CD_MAT_COMP7, 'D'), 'Vazio');
					
					select 	substr(ds_itens_mat_comp_w, 0, position('Vazio' in ds_itens_mat_comp_w) - 4) ds_itens_adic
					into STRICT	ds_itens_adic_w
					;

					insert into w_apap_pac_informacao(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_inf,
						ie_origem,
						ds_informacao,
						nr_seq_apap_grupo,
						ie_maxima,
						ie_media,
						ie_minima,
						ie_total,
						ie_grafico,
						ds_unid_med,
						nr_seq_tipo_pg,
						nr_seq_grupo_pg,
						ie_manter_nulo)
					values (
						nr_seq_apap_pac_informacao_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_inf_w,
						ie_origem_w,
						R_C17.ds_material || '<i style="color: grey;">' || ds_itens_adic_w || '</i>',
						nr_seq_apap_pac_grupo_w,
						ie_minima_w,
						ie_maxima_w,
						ie_media_w,
						ie_total_w,
						ie_grafico_w,
						R_C17.ds_unidade_medida,
						nr_seq_tipo_pg_w,
						nr_seq_grupo_pg_w,
						ie_manter_nulo_w);

					for R_C18 in C18(R_C17.cd_material) loop
						insert_data(
							R_C18.nr_sequencia,
							R_C18.dt_inicio_horario,
							R_C18.qt_dose,
							null,
							nr_seq_apap_pac_informacao_w,
							R_C18.dt_apap);
					end loop;
				end loop;
			elsif (ie_tipo_grupo_w = 'CH') or (ie_tipo_grupo_w  = 'OC') then
				if (nr_seq_tipo_pg_w IS NOT NULL AND nr_seq_tipo_pg_w::text <> '') then
					ds_informacao_w:= substr(Obter_Desc_Tipo_Perda_Ganho(nr_seq_tipo_pg_w),1,100);
				else
					ds_informacao_w	:= substr(obter_desc_grupo_pg(nr_seq_grupo_pg_w),1,100);
				end if;

				if (nr_seq_inf_adic_w IS NOT NULL AND nr_seq_inf_adic_w::text <> '') then
					ds_unid_med_w	:= substr(obter_dados_pg_inf_adic(nr_seq_inf_adic_w,'D'),1,40);
				end if;
			elsif (ie_tipo_grupo_w = 'URC') then
				ds_informacao_w := substr(obter_desc_informacao(nr_seq_inf_w),1,100);
			elsif (ie_tipo_grupo_w = 'UR') then
				ds_informacao_w := substr(obter_desc_informacao(nr_seq_inf_w),1,100);
			elsif (ie_tipo_grupo_w = 'MR') then
				ds_informacao_w := substr(obter_desc_informacao(nr_seq_inf_w),1,100);
			elsif (ie_tipo_grupo_w = 'MH') then
				ds_informacao_w := substr(obter_desc_informacao(nr_seq_inf_w),1,100);
			elsif (ie_tipo_grupo_w = 'MA') then
				ds_informacao_w := substr(obter_desc_informacao(nr_seq_inf_w),1,100);
			elsif (ie_tipo_grupo_w = 'PC') then
				ds_informacao_w := substr(obter_desc_informacao(nr_seq_inf_w),1,100);
			elsif (ie_tipo_grupo_w = 'SP') then
				ds_informacao_w := substr(obter_valor_dominio(3723,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'PR') then
				ds_informacao_w := substr(obter_valor_dominio(3725,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'PAR') then
				ds_informacao_w := substr(obter_valor_dominio(3731,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EV') then
				ds_informacao_w := substr(obter_valor_dominio(8711,ie_origem_w),1,100);

				if (ie_evolucao_clinica_w IS NOT NULL AND ie_evolucao_clinica_w::text <> '') then

				select 	ds_tipo_evolucao
				into STRICT	ds_tipo_evolucao_w
				from	tipo_evolucao
				where	cd_tipo_evolucao = ie_evolucao_clinica_w;

				ds_informacao_w := ds_informacao_w || ' - ' ||ds_tipo_evolucao_w;
				end if;

			elsif (ie_tipo_grupo_w = 'ABP') then
				ds_informacao_w := substr(obter_valor_dominio(8371,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'AP') then
				ds_informacao_w := substr(obter_valor_dominio(3719,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'AIV') then
				ds_informacao_w := substr(obter_valor_dominio(3721,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'BH') then
				ds_informacao_w := substr(obter_valor_dominio(2066,ie_balanco_hidrico_w),1,100);
				ds_unid_med_w := substr(obter_desc_unidade_medida(obter_unid_med_usua('ml')),1,40);
			elsif (ie_tipo_grupo_w = 'CEM') then
				ds_informacao_w := substr(obter_valor_dominio(8368,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'DE') then
				ds_informacao_w := substr(obter_desc_ficha_tecnica(nr_ficha_tecnica_w),1,100);
			elsif (ie_tipo_grupo_w = 'GA') then
				ds_informacao_w := substr(obter_desc_gas(nr_seq_gas_w),1,100);
			elsif (ie_tipo_grupo_w = 'AK') then
				ds_informacao_w := substr(obter_valor_dominio(3726,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ALD') then
				ds_informacao_w := substr(obter_valor_dominio(5254,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EB') then
				ds_informacao_w := substr(obter_valor_dominio(3317,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EBQ') then
				ds_informacao_w := substr(obter_valor_dominio(3718,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'CAM') then
				ds_informacao_w := substr(obter_valor_dominio(4492,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ECL') then
				ds_informacao_w := substr(obter_valor_dominio(5268,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'CRIB') then
				ds_informacao_w := substr(obter_valor_dominio(5840,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'NHS') then
				ds_informacao_w := substr(obter_valor_dominio(4491,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EDI') then
				ds_informacao_w := substr(obter_valor_dominio(4315,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ECA') then
				ds_informacao_w := substr(obter_valor_dominio(5253,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EDMO') then
				ds_informacao_w := substr(obter_valor_dominio(5464,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EF') then
				ds_informacao_w := substr(obter_valor_dominio(3604,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EFN') then
				ds_informacao_w := substr(obter_valor_dominio(3715,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ES') then
				ds_informacao_w := substr(obter_valor_dominio(2718,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'KARN') then
				ds_informacao_w := substr(obter_valor_dominio(5463,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EM') then
				ds_informacao_w := substr(obter_valor_dominio(3716,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'MODS') then
				ds_informacao_w := substr(obter_valor_dominio(5267,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EMO') then
				ds_informacao_w := substr(obter_valor_dominio(7412,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EN') then
				ds_informacao_w := substr(obter_valor_dominio(3603,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ENT') then
				ds_informacao_w := substr(obter_valor_dominio(4314,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ER') then
				ds_informacao_w := substr(obter_valor_dominio(3802,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'RR') then
				ds_informacao_w := substr(obter_valor_dominio(4489,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'SNAP') then
				ds_informacao_w := substr(obter_valor_dominio(4868 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'SNP') then
				ds_informacao_w := substr(obter_valor_dominio(4702 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'SNPP') then
				ds_informacao_w := substr(obter_valor_dominio(4703 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'SNPPM') then
				ds_informacao_w := substr(obter_valor_dominio(4705 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'SOFA') then
				ds_informacao_w := substr(obter_valor_dominio(4869 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ESTR') then
				ds_informacao_w := substr(obter_valor_dominio(8505 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ET') then
				ds_informacao_w := substr(obter_valor_dominio(3605 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ETN') then
				ds_informacao_w := substr(obter_valor_dominio(4487 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'TI28') then
				ds_informacao_w := substr(obter_valor_dominio(5252 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'GR') then
				ds_informacao_w := substr(obter_valor_dominio(3722 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'BA') then
				ds_informacao_w := substr(obter_valor_dominio(8763 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'MAD') then
				ds_informacao_w := substr(obter_valor_dominio(8771 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'HE') then
				ds_informacao_w := substr(obter_valor_dominio(8772 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'TIT') then
				ds_informacao_w := substr(obter_valor_dominio(8766 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'NRS') then
				ds_informacao_w := substr(obter_valor_dominio(8770 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'CHD') then
				ds_informacao_w := substr(obter_valor_dominio(8777 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'GOLD') then
				ds_informacao_w := substr(obter_valor_dominio(8773 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'FOR') then
				ds_informacao_w := substr(obter_valor_dominio(8774 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'BIS') then
				ds_informacao_w := substr(obter_valor_dominio(8765 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'CAP') then
				ds_informacao_w := substr(obter_valor_dominio(8763 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'PUL') then
				ds_informacao_w := substr(obter_valor_dominio(8768 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'APGAR') then
				ds_informacao_w := substr(obter_valor_dominio(8775 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'ECG') then
				ds_informacao_w := substr(obter_valor_dominio(8776 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'PIM') then
				ds_informacao_w := substr(obter_valor_dominio(3724 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'EL') then
				ds_informacao_w := ds_info_w;
			elsif (ie_tipo_grupo_w = 'SF') then
				ds_informacao_w := substr(obter_valor_dominio(9310 ,ie_origem_w),1,100);
			elsif (ie_tipo_grupo_w = 'FP') then
				ds_informacao_w := substr(obter_valor_dominio(10518 ,ie_origem_w),1,100);
			end if;

			if (ie_tipo_grupo_w <> 'IA' and ie_tipo_grupo_w <> 'IP' and ie_tipo_grupo_w <> 'SVP') then
				insert into w_apap_pac_informacao(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_inf,
					ie_origem,
					ds_informacao,
					nr_seq_apap_grupo,
					ie_maxima,
					ie_media,
					ie_minima,
					ie_total,
					ie_grafico,
					ds_unid_med,
					nr_seq_tipo_pg,
					nr_seq_grupo_pg,
					ie_manter_nulo)
				values (
					nr_seq_apap_pac_informacao_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_inf_w,
					ie_origem_w,
					ds_informacao_w,
					nr_seq_apap_pac_grupo_w,
					ie_minima_w,
					ie_maxima_w,
					ie_media_w,
					ie_total_w,
					ie_grafico_w,
					ds_unid_med_w,
					nr_seq_tipo_pg_w,
					nr_seq_grupo_pg_w,
					ie_manter_nulo_w);
			end if;



			for i in 1..vt_registro_w.count loop
				begin
				if (vt_registro_w[i].ie_grupo = ie_tipo_grupo_w AND ( or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					 or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					  or
					 )) then
					insert_data(
						vt_registro_w[i].nr_seq_origem,
						vt_registro_w[i].dt_registro,
						vt_registro_w[i].vl_resultado,
						vt_registro_w[i].ds_resultado,
						nr_seq_apap_pac_informacao_w,
						vt_registro_w[i].dt_apap);
				end if;
				end;
			end loop;

			if (ie_tipo_grupo_w = 'EV') then

				for R_C16 in C16 loop
					--add_vector_data('evolucao_paciente',R_C16.cd_evolucao,299128,'X',null,R_C16.dt_evolucao,'EV',null,'1',R_C16.dt_apap);
					insert_data(
						R_C16.cd_evolucao,
						R_C16.dt_evolucao,
						null,
						'X',
						nr_seq_apap_pac_informacao_w,
						R_C16.dt_apap);
				end loop;
			elsif (ie_tipo_grupo_w = 'SF') then

			for r_c111 in C111 loop
				begin

				if (r_c111.qt_pontos IS NOT NULL AND r_c111.qt_pontos::text <> '') and (ie_origem_w	= '1') then
					insert_data(
						r_c111.nr_sequencia,
						r_c111.dt_avaliacao,
						r_c111.qt_pontos,
						null,
						nr_seq_apap_pac_informacao_w,
						r_c111.dt_apap);
				end if;
				if (r_c111.ds_resultado IS NOT NULL AND r_c111.ds_resultado::text <> '') and (ie_origem_w	= '2') then
					insert_data(
						r_c111.nr_sequencia,
						r_c111.dt_avaliacao,
						null,
						r_c111.ds_resultado,
						nr_seq_apap_pac_informacao_w,
						r_c111.dt_apap);

				end if;

				end;
			end loop;
			end if;


--			Tratamento do grupo de Drogas Especiais
			if (ie_tipo_grupo_w = 'DE') then
				ie_cursor_w := 'N';
				nr_hora_ant_w := null;

				open C08;
				loop
				fetch C08 into
					nr_prescricao_w;
				EXIT WHEN NOT FOUND; /* apply on C08 */
					begin
					for r_C09 in C09 loop
						qt_dosagem_w := r_C09.qt_dosagem;
						ie_alteracao_w := r_C09.ie_alteracao;
						nr_hora_w := r_C09.nr_hora;
						dt_alteracao_w := r_C09.dt_alteracao;
						nr_seq_soluc_evento_w := r_C09.nr_sequencia;

						if (ie_alteracao_w in (2,4)) then
							select	max(somente_numero(to_char(a.dt_alteracao,'hh24'))),
								max(trunc(a.dt_alteracao,'hh24')),
								max(a.qt_dosagem),
								max(b.ie_tipo_dosagem),
								max(a.ie_alteracao),
								max(b.nr_prescricao),
								max(b.nr_seq_solucao)
							into STRICT	nr_hora_ww,
								dt_alteracao_ww,
								qt_dosagem_ww,
								ie_tipo_dosagem_ww,
								ie_alteracao_ww,
								nr_prescricao_ww,
								nr_seq_solucao_ww
							from	prescr_medica d,
								prescr_solucao b,
								prescr_solucao_evento a
							where	a.ie_evento_valido = 'S'
							and	a.nr_prescricao = b.nr_prescricao
							and	a.nr_seq_solucao = b.nr_seq_solucao
							and	b.nr_prescricao = d.nr_prescricao
							and	d.nr_prescricao = nr_prescricao_w
							and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(d.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
							and	(a.nr_seq_solucao IS NOT NULL AND a.nr_seq_solucao::text <> '')
							and	a.nr_atendimento = nr_atendimento_p
							and	a.ie_alteracao in (1,3,5)
							and	((ie_controla_adep_w = 'N') or (coalesce(b.ie_apap,'SV') = 'SV'))
							and (a.dt_alteracao <= dt_alteracao_w)
							and	obter_se_solucao_apap(a.nr_prescricao,a.nr_seq_solucao,nr_ficha_tecnica_w) = 'S'
							and	((ie_rn_w = 'A') or (d.ie_recem_nato = ie_rn_w))
							and	coalesce(d.dt_suspensao::text, '') = ''
							and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
							order by	a.dt_alteracao,
								a.nr_prescricao;

							ie_cursor_w := 'S';

							if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) then
								qt_dose_terap_w := 0;

								select	coalesce(max(qt_peso),0)
								into STRICT	qt_peso_prescr_w
								from	prescr_medica
								where	nr_prescricao = nr_prescricao_ww;

								select	max(a.cd_material),
									max(a.qt_dose),
									max(a.cd_unidade_medida_dose)
								into STRICT	cd_material_w,
									qt_dose_w,
									cd_unidade_medida_dose_w
								from	material b,
									prescr_material a
								where	a.nr_prescricao = nr_prescricao_ww
								and	a.nr_sequencia_solucao = nr_seq_solucao_ww
								and	a.cd_material = b.cd_material
								and	coalesce(b.ie_ancora_solucao,'N') = 'S';

								select	coalesce(sum(a.qt_solucao),0)
								into STRICT	qt_solucao_w
								from	material b,
									prescr_material a
								where	a.nr_prescricao = nr_prescricao_ww
								and	a.nr_sequencia_solucao = nr_seq_solucao_ww
								and	a.cd_material = b.cd_material
								and	coalesce(b.ie_ancora_solucao,'N') = 'N';

								if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 13, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 37, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 40, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 12, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;

								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/hr'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 173, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/min'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 180, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/min'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 176, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/hr'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 174, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/min'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 183, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('Mg/hr'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 184, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/hr'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 182, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
								elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/min'))) then
									SELECT * FROM calcular_dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 181, qt_solucao_w, 24, 0, null, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_ww, ie_tipo_dosagem_ww, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;

								end if;

								qt_dosagem_ww := qt_dose_terap_w;
							elsif (ie_tipo_dosagem_ww <> ds_unid_med_w) and (ds_unid_med_w IS NOT NULL AND ds_unid_med_w::text <> '') then
								qt_dosagem_ww := round((converte_vel_infusao(ie_tipo_dosagem_ww,ds_unid_med_w,qt_dosagem_ww))::numeric,2);
							end if;

							ds_unid_med_w := coalesce(ds_unid_med_w,ie_tipo_dosagem_ww);
							ds_dosagem_w := to_char(qt_dosagem_ww);

							if (qt_dosagem_ww = 0) then
								ds_dosagem_w := '';
							elsif (substr(to_char(qt_dosagem_ww),1,1) = ',') then
								ds_dosagem_w := '0'||to_char(qt_dosagem_ww);
							end if;

							Select CAST(ds_dosagem_w AS double precision)
							into STRICT   qt_dosagem_www
							;

							if (dt_inicial_w > dt_alteracao_ww) then
								ie_cursor_w := 'N';


								if (trunc(clock_timestamp(),'dd') = trunc(dt_inicial_w,'dd')) then
									ind := qt_hora_w + 1;

									while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop
										dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

										insert_data(
											nr_seq_soluc_evento_w,
											dt_customizada_w,
											qt_dosagem_www,
											null,
											nr_seq_apap_pac_informacao_w);

										ind := ind + 1;
									end loop;
								elsif (trunc(clock_timestamp(),'dd') = trunc(dt_inicial_w + 1,'dd')) and (somente_numero(to_char(clock_timestamp(),'hh24')) <= qt_hora_w + 1) then
									ind := 0;
									while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop

										dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

										insert_data(
											nr_seq_soluc_evento_w,
											dt_customizada_w,
											qt_dosagem_www,
											null,
											nr_seq_apap_pac_informacao_w);

										ind := ind + 1;
									end loop;
									ind		:= qt_hora_w + 1;
									while(ind <= 23) loop
										dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

										insert_data(
											nr_seq_soluc_evento_w,
											dt_customizada_w,
											qt_dosagem_www,
											null,
											nr_seq_apap_pac_informacao_w);

										ind := ind + 1;
									end loop;
								else


									dias_w := trunc(dt_final_w+1) - trunc(dt_inicial_w);
									ind		:= 0;
									ind_dia_w 	:= 0;
									while(ind_dia_w  <> dias_w) loop

										while(ind <= 23) loop
											dt_customizada_w := to_date(to_char(dt_inicial_w+ind_dia_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

											insert_data(
												nr_seq_soluc_evento_w,
												dt_customizada_w,
												qt_dosagem_www,
												null,
												nr_seq_apap_pac_informacao_w);

											ind := ind + 1;
										end loop;
										ind:= 0;
										ind_dia_w := ind_dia_w+1;
									end loop;
								end if;
							elsif (ie_alteracao_ww in (1,3,5)) then

								if ( dt_alteracao_ww >= dt_inicial_w ) and ( dt_alteracao_ww <= dt_final_w ) then

									dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(nr_hora_ww,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_soluc_evento_w,
										dt_customizada_w,
										qt_dosagem_www,
										null,
										nr_seq_apap_pac_informacao_w);

									nr_hora_ant_w := nr_hora_ww;


								end if;
							end if;

							ds_dosagem_ant_w := ds_dosagem_w;
							qt_dosagem_ant_w := qt_dosagem_www;
						end if;

						ie_cursor_w := 'S';

						if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('ui/kg/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/min'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('Mg/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/hr'))) or (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/min'))) then
							qt_dose_terap_w := 0;

							select	coalesce(max(qt_peso),0)
							into STRICT	qt_peso_prescr_w
							from	prescr_medica
							where	nr_prescricao = r_C09.nr_prescricao;

							select	max(a.cd_material),
								max(a.qt_dose),
								max(a.cd_unidade_medida_dose)
							into STRICT	cd_material_w,
								qt_dose_w,
								cd_unidade_medida_dose_w
							from	material b,
								prescr_material a
							where	a.nr_prescricao = r_C09.nr_prescricao
							and	a.nr_sequencia_solucao = r_C09.nr_seq_solucao
							and	a.cd_material = b.cd_material
							and	coalesce(b.ie_ancora_solucao,'N') = 'S';

							select	coalesce(sum(a.qt_solucao),0)
							into STRICT	qt_solucao_w
							from	material b,
								prescr_material a
							where	a.nr_prescricao = r_C09.nr_prescricao
							and	a.nr_sequencia_solucao = r_C09.nr_seq_solucao
							and	a.cd_material = b.cd_material
							and	coalesce(b.ie_ancora_solucao,'N') = 'N';

							if (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/min'))) then
								SELECT * FROM Calcular_Dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 13, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
							elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/hora'))) then
								SELECT * FROM Calcular_Dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 37, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
							elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mcg/kg/hora'))) then
								SELECT * FROM Calcular_Dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 40, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
							elsif (upper(ds_unid_med_w) = upper(obter_unid_med_usua('mg/kg/min'))) then
								SELECT * FROM Calcular_Dose_medic(cd_material_w, 0, qt_peso_prescr_w, 0, 0, qt_dose_terap_w, 12, qt_solucao_w, 24, 0, '', qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, 0, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, 'N', qt_daily_dose_w) INTO STRICT qt_dose_terap_w, qt_dose_w, cd_unidade_medida_dose_w, qt_dosagem_w, r_C09.ie_tipo_dosagem, qt_dose_total_w, qt_dose_interv_w, qt_dose_medic_w, qt_daily_dose_w;
							end if;

							qt_dosagem_w := qt_dose_terap_w;
						elsif (r_C09.ie_tipo_dosagem <> ds_unid_med_w) and (ds_unid_med_w IS NOT NULL AND ds_unid_med_w::text <> '') then
							qt_dosagem_w := round((converte_vel_infusao(r_C09.ie_tipo_dosagem,ds_unid_med_w,qt_dosagem_w))::numeric,2);
						end if;

						ds_unid_med_w := coalesce(ds_unid_med_w,r_C09.ie_tipo_dosagem);
						ds_dosagem_w := to_char(qt_dosagem_w);

						if (qt_dosagem_w = 0) then
							ds_dosagem_w := '';
						elsif (substr(to_char(qt_dosagem_w),1,1) = ',') then
							ds_dosagem_w := '0'||to_char(qt_dosagem_w);
						end if;

						Select CAST(ds_dosagem_w AS double precision)
						into STRICT   qt_dosagem_www
						;

						ds_dosagem_ant_w := ds_dosagem_w;
						qt_dosagem_ant_w := qt_dosagem_www;
					end loop;
					end;
				end loop;
				close C08;

				if (ie_cursor_w = 'S') and (ie_alteracao_w in (1,3,5)) then


					if (dt_alteracao_w <= dt_final_w) then

						ind := 0;

						if (trunc(dt_alteracao_w) = trunc(clock_timestamp())) then

							nr_hora_dif_w := somente_numero(to_char(clock_timestamp(),'hh24'));
							ind := nr_hora_w;

							while(ind <= nr_hora_dif_w) loop
										dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

										insert_data(
											nr_seq_soluc_evento_w,
											dt_customizada_w,
											qt_dosagem_ant_w,
											null,
											nr_seq_apap_pac_informacao_w);

										ind := ind + 1;
									end loop;

									ind := 0;

						else

							qt_dias_w := coalesce( dt_final_w - dt_alteracao_w,0);
							ind := nr_hora_w;

							while(ind <= 23) loop
										dt_customizada_w := to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

										insert_data(
											nr_seq_soluc_evento_w,
											dt_customizada_w,
											qt_dosagem_ant_w,
											null,
											nr_seq_apap_pac_informacao_w);

										ind := ind + 1;
							end loop;

							ind := 0;

							ind_dia_w := 1;

							while( ind_dia_w <= qt_dias_w) loop

									dt_customizada2_w := (to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24')) + ind_dia_w;
									nr_hora_dif_w := 23;

									if (trunc(dt_customizada2_w) = trunc(clock_timestamp())) then
											nr_hora_dif_w := somente_numero(to_char(clock_timestamp(),'hh24'));
									end if;

									while(ind <= nr_hora_dif_w) loop
										dt_customizada_w := (to_date(to_char(dt_alteracao_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24'))+ ind_dia_w;

										insert_data(
											nr_seq_soluc_evento_w,
											dt_customizada_w,
											qt_dosagem_ant_w,
											null,
											nr_seq_apap_pac_informacao_w);

										ind := ind + 1;
									end loop;

									ind	:= 0;
									ind_dia_w := ind_dia_w + 1;

							end loop;

						end if;

					end if;

				end if;
--			Tratamento do grupo de BalaNao Hidrico
			elsif (ie_tipo_grupo_w = 'BH') then
				if ((ie_balanco_hidrico_w = 'H') or (ie_informacao_w = 'N')) then
					for R_C14 in C14 loop
						insert_data(
							-1,
							R_C14.dt_apap,
							(R_C14.qt_ganho - R_C14.qt_perda),
							null,
							nr_seq_apap_pac_informacao_w);
					end loop;
				elsif (ie_balanco_hidrico_w = 'D' AND ie_informacao_w = 'S') then
					qt_acumulado_dia_w := 0;

					for R_C14 in C14 loop
						qt_acumulado_dia_w := (qt_acumulado_dia_w + R_C14.qt_ganho - R_C14.qt_perda);

						insert_data(
							-1,
							R_C14.dt_apap,
							qt_acumulado_dia_w,
							null,
							nr_seq_apap_pac_informacao_w);
					end loop;
				elsif (ie_balanco_hidrico_w = 'I' AND ie_informacao_w = 'S') then
					select	coalesce(sum(CASE WHEN c.ie_perda_ganho='G' THEN a.qt_volume  ELSE 0 END ) - sum(CASE WHEN c.ie_perda_ganho='P' THEN a.qt_volume  ELSE 0 END ),0) qt_saldo
					into STRICT	qt_acumulado_dia_w
					from	grupo_perda_ganho c,
						tipo_perda_ganho b,
						atendimento_perda_ganho a
					where	a.nr_seq_tipo = b.nr_sequencia
					and	b.nr_seq_grupo = c.nr_sequencia
					and	a.nr_atendimento = nr_atendimento_p
					and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(a.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
					and	coalesce(b.ie_soma_bh,'S') = 'S'
					and	coalesce(a.dt_apap,a.dt_medida) < dt_inicial_w
					and	coalesce(a.ie_situacao,'A') = 'A'
					and	((ie_rn_w = 'A') or (a.ie_recem_nato = ie_rn_w))
					and	((ie_lib_ganho_perda_w = 'N') or (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''));

					for R_C15 in C15 loop
						insert_data(
							-1,
							R_C15.dt_referencia,
							qt_acumulado_dia_w,
							null,
							nr_seq_apap_pac_informacao_w);
					end loop;

					for R_C14 in C14 loop
						qt_acumulado_dia_w := (qt_acumulado_dia_w + R_C14.qt_ganho - R_C14.qt_perda);

						insert_data(
							-1,
							R_C14.dt_apap,
							qt_acumulado_dia_w,
							null,
							nr_seq_apap_pac_informacao_w);
					end loop;
				elsif (ie_balanco_hidrico_w = 'S' AND ie_informacao_w = 'S') then
					select	max(dt_entrada_unidade)
					into STRICT	dt_entrada_setor_w
					from	resumo_atendimento_paciente_v
					where	nr_atendimento = nr_atendimento_p;

					select	coalesce(sum(CASE WHEN c.ie_perda_ganho='G' THEN a.qt_volume  ELSE 0 END ) - sum(CASE WHEN c.ie_perda_ganho='P' THEN a.qt_volume  ELSE 0 END ),0) qt_saldo
					into STRICT	qt_acumulado_dia_w
					from	grupo_perda_ganho c,
						tipo_perda_ganho b,
						atendimento_perda_ganho a
					where	a.nr_seq_tipo = b.nr_sequencia
					and	b.nr_seq_grupo = c.nr_sequencia
					and	a.nr_atendimento = nr_atendimento_p
					and	((coalesce(cd_setor_atendimento_p::text, '') = '') or (coalesce(a.cd_setor_atendimento,cd_setor_atendimento_p) = cd_setor_atendimento_p))
					and	coalesce(b.ie_soma_bh,'S') = 'S'
					and	coalesce(a.dt_apap,a.dt_medida) < dt_inicial_w
					and	coalesce(a.ie_situacao,'A') = 'A'
					and	((ie_rn_w = 'A') or (a.ie_recem_nato = ie_rn_w))
					and	coalesce(a.dt_referencia,coalesce(a.dt_apap,a.dt_medida)) between dt_entrada_setor_w and clock_timestamp()
					and	((ie_lib_ganho_perda_w = 'N') or (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''));

					for R_C15 in C15 loop
						insert_data(
							-1,
							R_C15.dt_referencia,
							qt_acumulado_dia_w,
							null,
							nr_seq_apap_pac_informacao_w);
					end loop;

					for R_C14 in C14 loop
						qt_acumulado_dia_w := (qt_acumulado_dia_w + R_C14.qt_ganho - R_C14.qt_perda);

						insert_data(
							-1,
							R_C14.dt_apap,
							qt_acumulado_dia_w,
							null,
							nr_seq_apap_pac_informacao_w);
					end loop;
				end if;
--			Tratamento do grupo de Gasoterapia
			elsif (ie_tipo_grupo_w = 'GA') then
				ie_cursor_w := 'N';

				open c10;
				loop
				fetch C10 into
					nr_hora_w,
					dt_alteracao_w,
					qt_gasoterapia_w,
					ie_evento_w,
					nr_prescricao_w,
					nr_seq_gasoterapia_w,
					ie_unidade_medida_w;
				EXIT WHEN NOT FOUND; /* apply on c10 */
					begin
					ds_unid_med_w := ie_unidade_medida_w;
					ie_cursor_w := 'S';

					if (dt_inicial_w > dt_alteracao_w) then
						ie_cursor_w := 'N';

						if (trunc(clock_timestamp(),'dd') = trunc(dt_inicial_w,'dd')) then
							ind := qt_hora_w + 1;

							while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop
								dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

								insert_data(
									nr_seq_gasoterapia_w,
									dt_customizada_w,
									qt_gasoterapia_w,
									null,
									nr_seq_apap_pac_informacao_w);

								ind := ind + 1;
							end loop;

						elsif (trunc(clock_timestamp(),'dd') = trunc(dt_inicial_w + 1,'dd')) and (somente_numero(to_char(clock_timestamp(),'hh24')) <= qt_hora_w + 1) then
							ind := 0;

							while(ind <= somente_numero(to_char(clock_timestamp(),'hh24'))) loop
								dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

								insert_data(
									nr_seq_gasoterapia_w,
									dt_customizada_w,
									qt_gasoterapia_w,
									null,
									nr_seq_apap_pac_informacao_w);

								ind := ind + 1;
							end loop;

							ind := qt_hora_w + 1;

							while(ind <= 23) loop
								dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

								insert_data(
									nr_seq_gasoterapia_w,
									dt_customizada_w,
									qt_gasoterapia_w,
									null,
									nr_seq_apap_pac_informacao_w);

								ind := ind + 1;
							end loop;
						else
							dias_w := trunc(dt_final_w+1) - trunc(dt_inicial_w);
							ind		:= 0;
							ind_dia_w 	:= 0;
							while(ind_dia_w  <> dias_w) loop

								while(ind <= 23) loop
									dt_customizada_w := to_date(to_char(dt_inicial_w+ind_dia_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;
								ind:= 0;
								ind_dia_w := ind_dia_w+1;
							end loop;
						end if;
					elsif (ie_evento_w in ('I','R','V')) then
						if (dt_alteracao_w >= dt_inicial_w) and (dt_alteracao_w <= dt_final_w) then
							dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(nr_hora_w,'00'),'dd/mm/yyyy hh24');

							insert_data(
								nr_seq_gasoterapia_w,
								dt_customizada_w,
								qt_gasoterapia_w,
								null,
								nr_seq_apap_pac_informacao_w);

							if (nr_hora_w > qt_hora_w + 1) and
								((trunc(dt_inicial_w,'dd') = trunc(dt_final_w,'dd')) or (clock_timestamp() > dt_inicial_w)) then
								ind := coalesce(nr_hora_ant_w,qt_hora_w + 1);

								while(ind < nr_hora_w) loop
									if (qt_gasoterapia_ant_w IS NOT NULL AND qt_gasoterapia_ant_w::text <> '') then
										dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

										insert_data(
											nr_seq_gasoterapia_w,
											dt_customizada_w,
											qt_gasoterapia_ant_w,
											null,
											nr_seq_apap_pac_informacao_w);
									end if;

									ind := ind + 1;
								end loop;
							else
								while(ind <= 23) loop
									if (qt_gasoterapia_ant_w IS NOT NULL AND qt_gasoterapia_ant_w::text <> '') then
										dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

										insert_data(
											nr_seq_gasoterapia_w,
											dt_customizada_w,
											qt_gasoterapia_ant_w,
											null,
											nr_seq_apap_pac_informacao_w);
									end if;

									ind := ind + 1;
								end loop;

								if (nr_hora_w < nr_hora_ant_w) then
									ind := 0;

									while(ind <= nr_hora_w) loop
										if (qt_gasoterapia_ant_w IS NOT NULL AND qt_gasoterapia_ant_w::text <> '') then
											dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

											insert_data(
												nr_seq_gasoterapia_w,
												dt_customizada_w,
												qt_gasoterapia_ant_w,
												null,
												nr_seq_apap_pac_informacao_w);
										end if;

										ind := ind + 1;
									end loop;
								end if;
							end if;

							nr_hora_ant_w := nr_hora_w;
						end if;
					elsif (ie_evento_w in ('IN','T')) then
						if (dt_alteracao_w >= dt_inicial_w) and (dt_alteracao_w <= dt_final_w) then
							if (nr_hora_w > qt_hora_w + 1) then
								nr_hora_dif_w := somente_numero(to_char(dt_alteracao_w,'hh24'));
								ind := coalesce(nr_hora_ant_w,qt_hora_w + 1);

								while(ind <= nr_hora_dif_w) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_ant_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;

								ind := nr_hora_dif_w + 1;

								while(ind <= 23) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										null,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;

								ind := 0;

								while(ind < qt_hora_w + 1) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										null,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;
							elsif (coalesce(nr_hora_ant_w,0) > qt_hora_w + 1) then
								ind := coalesce(nr_hora_ant_w,0);

								while(ind <= 23) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_ant_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;

								ind := 0;

								while(ind <= nr_hora_w) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_ant_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;
							elsif (coalesce(nr_hora_ant_w,0) < qt_hora_w + 1) then
								ind := coalesce(nr_hora_ant_w,0);

								while(ind <= nr_hora_w) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_ant_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;
							end if;

							nr_hora_ant_w := nr_hora_w;
						end if;
					end if;
					qt_gasoterapia_ant_w := qt_gasoterapia_w;
					end;
				end loop;
				close c10;

				if (ie_cursor_w = 'S') and (ie_evento_w in ('I','R','V')) then
					if (clock_timestamp() <= dt_final_w) then
						if (nr_hora_w > qt_hora_w + 1) and
							((trunc(dt_inicial_w,'dd') = trunc(dt_final_w,'dd')) or (clock_timestamp() >= dt_inicial_w)) then
							nr_hora_dif_w := somente_numero(to_char(clock_timestamp(),'hh24'));
							ind := coalesce(nr_hora_ant_w,qt_hora_w + 1);

							if (nr_hora_dif_w < ind) then
								while(ind <= 23) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_ant_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;

								ind := 0;

								while(ind < nr_hora_w) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_ant_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;
							else
								while(ind <= nr_hora_dif_w) loop
									dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

									insert_data(
										nr_seq_gasoterapia_w,
										dt_customizada_w,
										qt_gasoterapia_ant_w,
										null,
										nr_seq_apap_pac_informacao_w);

									ind := ind + 1;
								end loop;
							end if;
						elsif (nr_hora_w < qt_hora_w + 1) and (dt_alteracao_w < dt_inicial_w) then
							nr_hora_dif_w := somente_numero(to_char(clock_timestamp(),'hh24'));
							ind := qt_hora_w + 1;

							while(ind <= nr_hora_dif_w) loop
								dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

								insert_data(
									nr_seq_gasoterapia_w,
									dt_customizada_w,
									qt_gasoterapia_ant_w,
									null,
									nr_seq_apap_pac_informacao_w);

								ind := ind + 1;
							end loop;
						end if;
					elsif (nr_hora_w >= qt_hora_w + 1) then
						ind := nr_hora_w + 1;

						while(ind <= 23) loop
							dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

							insert_data(
								nr_seq_gasoterapia_w,
								dt_customizada_w,
								qt_gasoterapia_ant_w,
								null,
								nr_seq_apap_pac_informacao_w);

							ind := ind + 1;
						end loop;

						ind := 0;

						while(ind <= qt_hora_w) loop
							dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

							insert_data(
								nr_seq_gasoterapia_w,
								dt_customizada_w,
								qt_gasoterapia_ant_w,
								null,
								nr_seq_apap_pac_informacao_w);

							ind := ind + 1;
						end loop;
					elsif (nr_hora_w < qt_hora_w + 1) then
						ind := nr_hora_w;

						while(ind <= qt_hora_w) loop
							dt_customizada_w := to_date(to_char(hr_inicio_apap_w,'dd/mm/yyyy') || to_char(ind,'00'),'dd/mm/yyyy hh24');

							insert_data(
								nr_seq_gasoterapia_w,
								dt_customizada_w,
								qt_gasoterapia_ant_w,
								null,
								nr_seq_apap_pac_informacao_w);

							ind := ind + 1;
						end loop;
					end if;
				end if;
			elsif (ie_tipo_grupo_w in ('CH','OC')) then
				if (coalesce(nr_seq_inf_adic_w::text, '') = '') then
					if (coalesce(nr_seq_tipo_pg_w::text, '') = '') then
						for r_c11 in c11 loop
							qt_volume_w	:= r_c11.qt_volume;
							if (ie_tipo_grupo_w	= 'OC') then
								qt_volume_w	:= r_c11.qt_ocorrencia;
							end if;

							insert_data(
								r_c11.nr_sequencia,
								r_c11.dt_medida,
								qt_volume_w,
								null,
								nr_seq_apap_pac_informacao_w,
								R_C11.dt_apap);
						end loop;
					elsif (nr_seq_tipo_pg_w IS NOT NULL AND nr_seq_tipo_pg_w::text <> '') then
						select	coalesce(max(ie_exibir_topografia),'N'),
							coalesce(max(ie_exibir_lado),'N')
						into STRICT	ie_exibir_topografia_w,
							ie_exibir_lado_w
						from	tipo_perda_ganho
						where	nr_sequencia = nr_seq_tipo_pg_w;

						if (ie_exibir_topografia_w = 'N') and (ie_exibir_lado_w = 'N')then
							ie_lado_w := null;
							nr_seq_topografia_w := null;

							for r_c93 in c93 loop
								qt_volume_w := r_c93.qt_volume;

								if (ie_tipo_grupo_w = 'OC') then
									qt_volume_w := r_c93.qt_ocorrencia;
								end if;

								insert_data(
									r_c93.nr_sequencia,
									R_C93.dt_medida,
									qt_volume_w,
									null,
									nr_seq_apap_pac_informacao_w,
									R_C93.dt_apap);
							end loop;
						elsif (ie_exibir_topografia_w <> 'N') or (ie_exibir_lado_w <> 'N')then
							delete FROM w_apap_pac_informacao
							where nr_sequencia = nr_seq_apap_pac_informacao_w;

							for r_c95 in c95 loop
								ds_informacao_ganho_perda_w := ds_informacao_w;

								if (r_c95.nr_seq_topografia IS NOT NULL AND r_c95.nr_seq_topografia::text <> '') and (r_c95.nr_seq_topografia > 0) then
									ds_informacao_ganho_perda_w  := ds_informacao_ganho_perda_w|| ' - '|| Obter_desc_topografia_dor(r_c95.nr_seq_topografia);
								end if;

								if (r_c95.ds_lado IS NOT NULL AND r_c95.ds_lado::text <> '') then
									ds_informacao_ganho_perda_w := ds_informacao_ganho_perda_w || ' - ' || r_c95.ds_lado;
								end if;

								ie_lado_w := r_c95.ie_lado;
								nr_seq_topografia_w := r_c95.nr_seq_topografia;

								Select nextval('w_apap_pac_informacao_seq')
								into STRICT	nr_seq_apap_pac_informacao_w
								;

								insert into w_apap_pac_informacao(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_inf,
									ie_origem,
									ds_informacao,
									nr_seq_apap_grupo,
									ie_maxima,
									ie_media,
									ie_minima,
									ie_total,
									ie_grafico,
									nr_seq_tipo_pg,
									nr_seq_grupo_pg,
									ie_manter_nulo)
								values (
									nr_seq_apap_pac_informacao_w,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_inf_w,
									ie_origem_w,
									substr(ds_informacao_ganho_perda_w,1,255),
									nr_seq_apap_pac_grupo_w,
									ie_minima_w,
									ie_maxima_w,
									ie_media_w,
									ie_total_w,
									ie_grafico_w,
									nr_seq_tipo_pg_w,
									nr_seq_grupo_pg_w,
									ie_manter_nulo_w);

								for r_c93 in c93 loop
									qt_volume_w := r_c93.qt_volume;
									if (ie_tipo_grupo_w = 'OC') then
										qt_volume_w := r_c93.qt_ocorrencia;
									end if;

									insert_data(
										r_c93.nr_sequencia,
										r_c93.dt_medida,
										qt_volume_w,
										null,
										nr_seq_apap_pac_informacao_w,
										R_C93.dt_apap);
								end loop;
							end loop;
						end if;
					end if;
				elsif (nr_seq_inf_adic_w IS NOT NULL AND nr_seq_inf_adic_w::text <> '') then
					for r_c94 in c94 loop
						insert_data(
							r_c94.nr_sequencia,
							r_c94.dt_medida,
							null,
							r_c94.ds_dados,
							nr_seq_apap_pac_informacao_w);
					end loop;
				end if;
			end if;
			end;

		end loop;
		close C01;
		end;
	end loop;
	close C00;
end if;

for r_c96 in c96 loop
	delete from w_apap_pac_informacao
	where	nr_sequencia = r_c96.nr_sequencia;
end loop;

for r_c97 in c97 loop
	delete from w_apap_pac_grupo
	where	nr_sequencia = r_c97.nr_sequencia;
end loop;

commit;

exception
when others then
		sql_errm_w := sqlerrm;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_apap_extendido ( nr_seq_apap_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_setor_atendimento_p bigint, cd_intervalo_p text, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

