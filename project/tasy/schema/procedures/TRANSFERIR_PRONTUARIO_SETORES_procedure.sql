-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transferir_prontuario_setores (nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p text, cd_estabelecimento_p bigint, ie_consider_stored_p text default 'N') AS $body$
DECLARE


/*
	1 - Registrar saida de prontuario
	2 - Registrar recebimento de prontuario
*/
cd_pessoa_fisica_w	varchar(10);
nr_atendimento_w	bigint;
cd_setor_destino_w	integer;
nr_sequencia_w		bigint;
cd_pessoa_destino_w	varchar(10);
cd_setor_solicitante_w	integer;
cd_pessoa_origem_w	varchar(10);
ie_setor_same_w		varchar(1);
ie_gerar_devolucao_w	varchar(1);
ds_prontuario_w			varchar(2000);
ds_parametro_w		varchar(10) := obter_valor_param_usuario(941,103,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
ie_restringir_setor_w	varchar(1);
ie_setor_usuario_w	varchar(1);
ie_digitalizado_w	varchar(1);
ie_altera_status_w	varchar(1);
cd_classif_setor_w	varchar(2);
ie_tipo_atend_prontuario_w	smallint;
cd_estab_origem_w	setor_atendimento.cd_estabelecimento%type;
cd_estab_destino_w	setor_atendimento.cd_estabelecimento%type;
cd_estabelecimento_w	setor_atendimento.cd_estabelecimento%type;

c01 CURSOR FOR
	SELECT	nr_sequencia
	from	same_prontuario
	where	nr_atendimento = nr_atendimento_w
	and	ie_status not in ('5','6','10', CASE WHEN ie_consider_stored_p='S' THEN  '1'  ELSE '99' END )
	and	((ie_tipo_atend_prontuario = ie_tipo_atend_prontuario_w) or (coalesce(ie_tipo_atend_prontuario_w::text, '') = ''))
	and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));

c02 CURSOR FOR
	SELECT	nr_sequencia
	from	same_prontuario
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	and	ie_status not in ('5','6','10', CASE WHEN ie_consider_stored_p='S' THEN  '1'  ELSE '99' END  )
	and	((ie_tipo_atend_prontuario = ie_tipo_atend_prontuario_w) or (coalesce(ie_tipo_atend_prontuario_w::text, '') = ''))
	and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));


BEGIN

ie_restringir_setor_w	:= obter_valor_param_usuario(941,101,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);
ie_altera_status_w	:= obter_valor_param_usuario(941,161,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

/*select	nvl(vl_parametro,vl_parametro_padrao)
into	ds_parametro_w
from	funcao_parametro
where	cd_funcao = 0
and	nr_sequencia = 120;*/
if (ie_opcao_p = '1') then

	update	transf_prontuario
	set	dt_envio	= clock_timestamp()
	where	nr_sequencia	= nr_sequencia_p;

	select	cd_pessoa_fisica,
		nr_atendimento,
		cd_setor_destino,
		cd_pessoa_destino,
		cd_setor_origem,
		cd_pessoa_origem,
		ie_tipo_atend_prontuario
	into STRICT	cd_pessoa_fisica_w,
		nr_atendimento_w,
		cd_setor_destino_w,
		cd_pessoa_destino_w,
		cd_setor_solicitante_w,
		cd_pessoa_origem_w,
		ie_tipo_atend_prontuario_w
	from	transf_prontuario
	where	nr_sequencia	= nr_sequencia_p;
	
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
		
		OPEN C01;
		LOOP
		FETCH C01 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

		begin

		insert	into	same_prontuario_hist(
			nr_sequencia        ,
			nr_seq_same         ,
			dt_atualizacao      ,
			nm_usuario          ,
			nr_seq_operacao     ,
			dt_historico        ,
			nr_seq_caixa        ,
			nr_seq_local        ,
			cd_pessoa_fisica    ,
			dt_atualizacao_nrec ,
			nm_usuario_nrec     ,
			cd_setor_solicitante)
		values (nextval('same_prontuario_hist_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			24,
			clock_timestamp(),
			null,
			null,
			coalesce(cd_pessoa_destino_w,cd_pessoa_origem_w),
			clock_timestamp(),
			nm_usuario_p,
			coalesce(cd_setor_destino_w,cd_setor_solicitante_w));
		end;
		
		END LOOP;
		CLOSE C01;

	else

		OPEN C02;
		LOOP
		FETCH C02 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		insert	into	same_prontuario_hist(
			nr_sequencia        ,
			nr_seq_same         ,
			dt_atualizacao      ,
			nm_usuario          ,
			nr_seq_operacao     ,
			dt_historico        ,
			nr_seq_caixa        ,
			nr_seq_local        ,
			cd_pessoa_fisica    ,
			dt_atualizacao_nrec ,
			nm_usuario_nrec      ,
			cd_setor_solicitante)
		values (nextval('same_prontuario_hist_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			24,
			clock_timestamp(),
			null,
			null,
			cd_pessoa_destino_w,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(cd_setor_destino_w,cd_setor_solicitante_w));
		end;
		END LOOP;
		CLOSE C02;
		
	end	if;

elsif (ie_opcao_p = '2') then
	
	update	transf_prontuario
	set	dt_recebimento		= clock_timestamp(),
		nm_usuario		= nm_usuario_p,
		cd_pessoa_receb		= obter_pessoa_fisica_usuario(nm_usuario_p, 'C')
	where	nr_sequencia		= nr_sequencia_p;

	select	cd_pessoa_fisica,
		nr_atendimento,
		cd_setor_destino,
		cd_pessoa_destino,
		cd_setor_origem,
		cd_pessoa_origem,
		ie_digitalizado,
		ie_tipo_atend_prontuario
	into STRICT	cd_pessoa_fisica_w,
		nr_atendimento_w,
		cd_setor_destino_w,
		cd_pessoa_destino_w,
		cd_setor_solicitante_w,
		cd_pessoa_origem_w,
		ie_digitalizado_w,
		ie_tipo_atend_prontuario_w
	from	transf_prontuario
	where	nr_sequencia	= nr_sequencia_p;
	
	if (ie_digitalizado_w = 'S') then
		update	same_prontuario
		set	ie_digitalizado = 'S' 
		where	nr_atendimento = nr_atendimento_w
		and	ie_status not in ('5','6','10', CASE WHEN ie_consider_stored_p='S' THEN  '1'  ELSE '99' END )
		and	ie_digitalizado = 'N';
	end if;

	if (coalesce(cd_setor_destino_w::text, '') = '') then		
		CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(203014);
	elsif (ie_restringir_setor_w = 'S') then
		ie_setor_usuario_w := obter_se_setor_usuario(cd_setor_destino_w, nm_usuario_p);
		if (ie_setor_usuario_w = 'N') then			
			CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(203015);
		end if;
	end if;

	select 	CASE WHEN max(cd_classif_setor)=6 THEN 'S'  ELSE 'N' END
	into STRICT 	ie_setor_same_w
	from 	setor_atendimento
	where 	cd_setor_atendimento = cd_setor_destino_w;
	
	select	coalesce(max(obter_valor_param_usuario(941,84, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p)), 'N')
	into STRICT	ie_gerar_devolucao_w
	;

	if (cd_setor_destino_w IS NOT NULL AND cd_setor_destino_w::text <> '') then
		cd_estab_origem_w := obter_estabelecimento_setor(cd_setor_solicitante_w);
		cd_estab_destino_w := obter_estabelecimento_setor(cd_setor_destino_w);
		
		if (cd_estab_origem_w <> cd_estab_destino_w) then
			cd_estabelecimento_w := cd_estab_destino_w;
		end if;
	end if;
	
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then

		update	same_prontuario
		set	cd_setor_atendimento	= cd_setor_destino_w
		where	nr_atendimento		= nr_atendimento_w
		and	ie_status not in ('5','6','10', CASE WHEN ie_consider_stored_p='S' THEN  '1'  ELSE '99' END )
		and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));
		
		if (ie_altera_status_w = 'S') then
		
			select	cd_classif_setor
			into STRICT	cd_classif_setor_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_destino_w;
			
			if (cd_classif_setor_w = '6') then
				update	same_prontuario
				set	ie_status	= '1'
				where	nr_atendimento	= nr_atendimento_w
				and	ie_status <> 6
				and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));
			else
				update	same_prontuario
				set	ie_status	= '11'
				where	nr_atendimento	= nr_atendimento_w
				and	ie_status <> 6
				and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));
			end if;
		
		end if;

		OPEN C01;
		LOOP
		FETCH C01 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert	into	same_prontuario_hist(
			nr_sequencia        ,
			nr_seq_same         ,
			dt_atualizacao      ,
			nm_usuario          ,
			nr_seq_operacao     ,
			dt_historico        ,
			nr_seq_caixa        ,
			nr_seq_local        ,
			cd_pessoa_fisica    ,
			dt_atualizacao_nrec ,
			nm_usuario_nrec     ,
			cd_setor_solicitante)
		values (nextval('same_prontuario_hist_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			17,
			clock_timestamp(),
			null,
			null,
			coalesce(cd_pessoa_destino_w,cd_pessoa_origem_w),
			clock_timestamp(),
			nm_usuario_p,
			coalesce(cd_setor_destino_w,cd_setor_solicitante_w)
		);
		
		ds_prontuario_w := nr_sequencia_w||','||ds_prontuario_w;
		
		end;
		END LOOP;
		CLOSE C01;
		
		if (ie_gerar_devolucao_w = 'S') and (ie_setor_same_w = 'S') then
			CALL Same_Devolver_Pront_Transf(ds_prontuario_w, nm_usuario_p, cd_estabelecimento_p);
		end if;
	else
		update	same_prontuario
		set	cd_setor_atendimento	= cd_setor_destino_w
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	ie_status not in ('5','6','10', CASE WHEN ie_consider_stored_p='S' THEN  '1'  ELSE '99' END )
		and	((ie_tipo_atend_prontuario = ie_tipo_atend_prontuario_w) or (coalesce(ie_tipo_atend_prontuario_w::text, '') = ''))
		and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));
		
		if (ie_altera_status_w = 'S') then
		
			select	cd_classif_setor
			into STRICT	cd_classif_setor_w
			from	setor_atendimento
			where	cd_setor_atendimento = cd_setor_destino_w;
			
			if (cd_classif_setor_w = '6') then
				update	same_prontuario
				set	ie_status	= '1'
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w
				and	ie_status <> 6
				and	((ie_tipo_atend_prontuario = ie_tipo_atend_prontuario_w) or (coalesce(ie_tipo_atend_prontuario_w::text, '') = ''))
				and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));
			else
				update	same_prontuario
				set	ie_status	= '11'
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w
				and	ie_status <> 6
				and	((ie_tipo_atend_prontuario = ie_tipo_atend_prontuario_w) or (coalesce(ie_tipo_atend_prontuario_w::text, '') = ''))
				and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));
			end if;
		
		end if;

		OPEN C02;
		LOOP
		FETCH C02 into
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		insert	into	same_prontuario_hist(
			nr_sequencia        ,
			nr_seq_same         ,
			dt_atualizacao      ,
			nm_usuario          ,
			nr_seq_operacao     ,
			dt_historico        ,
			nr_seq_caixa        ,
			nr_seq_local        ,
			cd_pessoa_fisica    ,
			dt_atualizacao_nrec ,
			nm_usuario_nrec      ,
			cd_setor_solicitante)
		values (nextval('same_prontuario_hist_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			nm_usuario_p,
			17,
			clock_timestamp(),
			null,
			null,
			cd_pessoa_destino_w,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(cd_setor_destino_w,cd_setor_solicitante_w));
		
		ds_prontuario_w := nr_sequencia_w||','||ds_prontuario_w;
		
		end;
		END LOOP;
		CLOSE C02;
		
		if (ie_gerar_devolucao_w = 'S') and (ie_setor_same_w = 'S') then
			CALL Same_Devolver_Pront_Transf(ds_prontuario_w, nm_usuario_p, cd_estabelecimento_p);
		end if;
	end	if;
	if (cd_estabelecimento_w IS NOT NULL AND cd_estabelecimento_w::text <> '') and (cd_estabelecimento_w <> cd_estab_origem_w) then
		update	same_prontuario
		set		cd_estabelecimento = cd_estabelecimento_w
		where	cd_pessoa_fisica = cd_pessoa_fisica_w;
	end if;
	
end	if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transferir_prontuario_setores (nr_sequencia_p bigint, nm_usuario_p text, ie_opcao_p text, cd_estabelecimento_p bigint, ie_consider_stored_p text default 'N') FROM PUBLIC;

