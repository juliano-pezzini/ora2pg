-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_65_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar se CBO do participante foi informado
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
bind_sql_valor_w	sql_pck.t_dado_bind;
cursor_w		sql_pck.t_cursor;
ds_sql_w		varchar(4000);

tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;

C01 CURSOR(	nr_seq_oc_cta_comb_p	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_val_cbo_informado,
		a.ie_valida_cbo_valido,
		a.ie_valida_versao_tiss
	from	pls_oc_cta_val_cbo_partic a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

BEGIN

if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then
	for r_C01_w in C01(nr_seq_combinada_p) loop
		if (r_C01_w.ie_val_cbo_informado = 'S' or r_C01_w.ie_valida_cbo_valido = 'S' or r_C01_w.ie_valida_versao_tiss = 'S')	then


			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', ie_regra_excecao_p, nr_id_transacao_p, null);

			ds_sql_w := 	'	select 	a.nr_sequencia, ' 			|| pls_util_pck.enter_w ||
					'		a.ie_valido ie_valido, '		|| pls_util_pck.enter_w ||
					'		null ds_observacao '			|| pls_util_pck.enter_w ||
					'	from	pls_oc_cta_selecao_imp		a, ' 		|| pls_util_pck.enter_w ||
					'		pls_conta_imp			b, '		|| pls_util_pck.enter_w ||
					'		pls_protocolo_conta_imp		c, '		|| pls_util_pck.enter_w ||
					'		pls_conta_proc_imp		d, '		|| pls_util_pck.enter_w ||
					'		pls_conta_item_equipe_imp	f  '		|| pls_util_pck.enter_w ||
					'	where	a.ie_valido			= ''S'' '	|| pls_util_pck.enter_w ||
					'	and	a.nr_id_transacao		= :nr_id_transacao_pc '	|| pls_util_pck.enter_w ||
					'	and	a.nr_seq_conta			= b.nr_sequencia '|| pls_util_pck.enter_w ||
					'	and	b.nr_seq_protocolo		= c.nr_sequencia '|| pls_util_pck.enter_w ||
					'	and	b.nr_sequencia			= d.nr_seq_conta '|| pls_util_pck.enter_w ||
					'	and	d.nr_sequencia			= f.nr_seq_conta_proc ';

			bind_sql_valor_w := sql_pck.bind_variable(':nr_id_transacao_pc', nr_id_transacao_p, bind_sql_valor_w);

			if (r_C01_w.ie_val_cbo_informado = 'S') then
				ds_sql_w := ds_sql_w ||
				'	and	f.nr_seq_cbo_profissional_conv is null '			|| pls_util_pck.enter_w;
			end if;
			if (r_C01_w.ie_valida_cbo_valido = 'S') then
				ds_sql_w := ds_sql_w ||
				'	and not exists(	select z.nr_sequencia '					|| pls_util_pck.enter_w ||
				'		from	cbo_saude z '						|| pls_util_pck.enter_w ||
				'		where	z.nr_sequencia = f.nr_seq_cbo_profissional_conv '	|| pls_util_pck.enter_w ||
				'		and	((z.ie_situacao = ''A'') or (z.ie_situacao is null)))';
			end if;

			--é usado o campo a.nr_seq_cbo_saude para funcionar tanto para quando o evento for imp quando normal
			--é feito o if pois a validação deve funcinar sozinha conforme explicado no schift F8 do campo, pois tanto  ie_val_cbo_informado quanto ie_valida_cbo_valido são impeditivas para validar a versão TISS
			if ( r_C01_w.ie_valida_versao_tiss = 'S') and (r_C01_w.ie_val_cbo_informado = 'N')   and (r_C01_w.ie_valida_cbo_valido = 'N')   then
				ds_sql_w := ds_sql_w ||
					'	and not exists (	select	1							' || pls_util_pck.enter_w ||
					'				from	cbo_saude_tiss x					' || pls_util_pck.enter_w ||
					'				where	x.ie_versao = c.cd_versao_tiss_conv				' || pls_util_pck.enter_w ||
					'				and	x.nr_seq_cbo_saude = f.nr_seq_cbo_profissional_conv	' || pls_util_pck.enter_w ||
					'	)';
			end if;

			begin
				bind_sql_valor_w := sql_pck.executa_sql_cursor(ds_sql_w, bind_sql_valor_w);
				SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables( tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
  tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

				loop
					fetch 	cursor_w bulk collect
					into	tb_seq_selecao_w,tb_valido_w,tb_observacao_w
					limit pls_util_cta_pck.qt_registro_transacao_w;
					exit when tb_seq_selecao_w.count = 0;

					CALL pls_ocor_imp_pck.gerencia_selecao_validacao( tb_seq_selecao_w, tb_valido_w, tb_observacao_w,
													nr_id_transacao_p,'SEQ');

					SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables( tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
  tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;


				end loop;

				close cursor_w;

			exception
			when others then
				if (cursor_w%isopen) then
					close cursor_w;
				end if;
				CALL pls_ocor_imp_pck.trata_erro_sql_dinamico(nr_seq_combinada_p, null, sqlerrm, nr_id_transacao_p, wheb_usuario_pck.get_nm_usuario, 'N');
			end;

			-- seta os registros que serão válidos ou inválidos após o processamento
			CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N', ie_regra_excecao_p, null, nr_id_transacao_p, null);

		end if;

	end loop;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_65_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

