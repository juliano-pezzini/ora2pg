-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE reverter_primeira_checagem_sol ( nr_prescricao_p bigint, nr_seq_item_p bigint, ie_tipo_solucao_p bigint, nr_horario_evento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_etapa_atual_sol_w	smallint;
nr_etapa_atual_w		prescr_solucao.nr_etapas%type;


BEGIN
if (ie_tipo_solucao_p = 1) then
	if (nr_horario_evento_p IS NOT NULL AND nr_horario_evento_p::text <> '') then
		select	max(nr_etapa_sol)
		into STRICT		nr_etapa_atual_sol_w
		from		prescr_mat_hor
		where	nr_sequencia = nr_horario_evento_p;
		
		if (coalesce(nr_etapa_atual_sol_w::text, '') = '') then
			nr_etapa_atual_sol_w := nr_horario_evento_p;
		end if;
	else
		nr_etapa_atual_sol_w := obter_etapa_atual(nr_prescricao_p, nr_seq_item_p);
	end if;
	
	--Tratamento criado para verificar se a etapa que esta sendo efetuada a acao nao esta suspensa
	select	min(a.nr_etapa_sol)
	into STRICT	nr_etapa_atual_w
	from	prescr_mat_hor a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_seq_solucao = nr_seq_item_p
	and		a.nr_etapa_sol >= nr_etapa_atual_sol_w
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(a.ie_horario_especial,'N') <> 'S'
	and		coalesce(a.dt_inicio_horario::text, '') = '';
	
	update	prescr_mat_hor
	set		dt_primeira_checagem 	 = NULL,
			nm_usuario 				= nm_usuario_p
	where	nr_prescricao 			= nr_prescricao_p
	and		nr_seq_solucao 			= nr_seq_item_p
	and		nr_etapa_sol 			= coalesce(nr_horario_evento_p,nr_etapa_atual_w);

	update	prescr_solucao_evento
	set		ie_evento_valido = 'N'
	where	nr_prescricao = nr_prescricao_p
	and		nr_seq_solucao = nr_seq_item_p
	and		ie_tipo_solucao = ie_tipo_solucao_p
	and		nr_etapa_evento = coalesce(nr_horario_evento_p,nr_etapa_atual_w)
	and		coalesce(ie_evento_valido,'S') = 'S'
	and		ie_alteracao = 37;

	select	nextval('prescr_solucao_evento_seq')
	into STRICT		nr_sequencia_w
	;

	/* gerar evento */

	insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_solucao,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					ie_tipo_solucao,
					nr_etapa_evento)
							values (
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_item_p,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					40,
					clock_timestamp(),
					'S',
					ie_tipo_solucao_p,
					coalesce(nr_horario_evento_p,nr_etapa_atual_w));
					
elsif (ie_tipo_solucao_p = 2) then
	
	select 	max(nr_etapa_sol)
	into STRICT		nr_etapa_atual_sol_w
	from		prescr_mat_hor
	where	nr_sequencia = nr_horario_evento_p;
	
	update	prescr_mat_hor
	set		dt_primeira_checagem 	 = NULL,
			nm_usuario 				= nm_usuario_p
	where	nr_prescricao 			= nr_prescricao_p
	and		nr_seq_material 		= nr_seq_item_p
	and		nr_sequencia 			= nr_horario_evento_p;

	update	prescr_solucao_evento
	set		ie_evento_valido = 'N'
	where	nr_prescricao = nr_prescricao_p
	and		nr_seq_material = nr_seq_item_p
	and		ie_tipo_solucao = ie_tipo_solucao_p
	and		nr_etapa_evento = nr_etapa_atual_sol_w
	and		coalesce(ie_evento_valido,'S') = 'S'
	and		ie_alteracao = 37;

	select	nextval('prescr_solucao_evento_seq')
	into STRICT		nr_sequencia_w
	;

	/* gerar evento */

	insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_material,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					ie_tipo_solucao,
					nr_etapa_evento)
							values (
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_item_p,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					40,
					clock_timestamp(),
					'S',
					ie_tipo_solucao_p,
					nr_etapa_atual_sol_w);
					
elsif (ie_tipo_solucao_p = 3) then
	
	select 	max(nr_etapa)
	into STRICT	nr_etapa_atual_sol_w
	from	prescr_proc_hor
	where	nr_sequencia = nr_horario_evento_p;
	
	update	prescr_proc_hor
	set	dt_primeira_checagem 	 = NULL,
		nm_usuario 		= nm_usuario_p
	where	nr_prescricao 		= nr_prescricao_p
	and	nr_seq_procedimento 	= nr_seq_item_p
	and	nr_sequencia 		= nr_horario_evento_p;

	update	prescr_solucao_evento
	set	ie_evento_valido 	= 'N'
	where	nr_prescricao 		= nr_prescricao_p
	and	nr_seq_procedimento 	= nr_seq_item_p
	and	ie_tipo_solucao 	= ie_tipo_solucao_p
	and	nr_etapa_evento 	= nr_etapa_atual_sol_w
	and	coalesce(ie_evento_valido,'S') = 'S'
	and	ie_alteracao = 37;

	select	nextval('prescr_solucao_evento_seq')
	into STRICT		nr_sequencia_w
	;

	/* gerar evento */

	insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_procedimento,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					ie_tipo_solucao,
					nr_etapa_evento)
							values (
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_item_p,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					40,
					clock_timestamp(),
					'S',
					ie_tipo_solucao_p,
					nr_etapa_atual_sol_w);
end if;

commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE reverter_primeira_checagem_sol ( nr_prescricao_p bigint, nr_seq_item_p bigint, ie_tipo_solucao_p bigint, nr_horario_evento_p bigint, nm_usuario_p text) FROM PUBLIC;

