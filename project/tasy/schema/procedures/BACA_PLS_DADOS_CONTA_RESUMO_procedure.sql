-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_pls_dados_conta_resumo ( nr_seq_lote_pgto_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		bigint;
nr_seq_competencia_w		bigint;
nr_seq_competencia_ww		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_conta_w			bigint;
nr_sequencia_w			bigint;
nr_seq_item_w			bigint;
ie_proc_mat_w			varchar(1);
vl_apresentado_w		double precision;
vl_unitario_w			pls_conta_proc.vl_unitario%type;
nr_seq_segurado_w		bigint;
cd_guia_w			varchar(20);
cd_guia_referencia_w		varchar(20);
cd_guia_prestador_w		varchar(20);
nr_seq_prestador_prot_w		bigint;
dt_mes_competencia_w		timestamp;
ie_status_w			varchar(1);
ie_tipo_guia_w			varchar(1);
ie_tipo_contratacao_w		varchar(2)	:= null;
dt_item_w			timestamp;
vl_liberado_w			double precision;
ie_tipo_despesa_w		varchar(10);
ie_status_protocolo_w		varchar(10);
nr_seq_evento_w			bigint;
nr_seq_evento_prod_w		bigint;

C01 CURSOR FOR
	SELECT	nr_seq_conta,
		nr_sequencia,
		nr_seq_item,
		ie_proc_mat,
		vl_liberado
	from	pls_conta_medica_resumo
	where	nr_seq_lote_pgto	= nr_seq_lote_pgto_p;


BEGIN

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	pls_lote_pagamento
where	nr_sequencia	= nr_seq_lote_pgto_p;

select	max(nr_sequencia)
into STRICT	nr_seq_competencia_ww
from	pls_competencia
where	trunc(dt_mes_competencia,'month')	= trunc(dt_mes_competencia_w,'month')
and	cd_estabelecimento			= cd_estabelecimento_w;

open C01;
loop
fetch C01 into
	nr_seq_conta_w,
	nr_sequencia_w,
	nr_seq_item_w,
	ie_proc_mat_w,
	vl_liberado_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/* Obter dados da conta */

	select	nr_seq_protocolo,
		coalesce(a.nr_seq_competencia, nr_seq_competencia_ww),
		nr_seq_segurado,
		cd_guia,
		cd_guia_referencia,
		cd_guia_prestador,
		ie_status,
		ie_tipo_guia
	into STRICT	nr_seq_protocolo_w,
		nr_seq_competencia_w,
		nr_seq_segurado_w,
		cd_guia_w,
		cd_guia_referencia_w,
		cd_guia_prestador_w,
		ie_status_w,
		ie_tipo_guia_w
	from	pls_conta	a
	where	a.nr_sequencia	= nr_seq_conta_w;

	/* Obter dados do protocolo */

	select	nr_seq_prestador,
		coalesce(dt_lib_pagamento, dt_mes_competencia),
		ie_status
	into STRICT	nr_seq_prestador_prot_w,
		dt_mes_competencia_w,
		ie_status_protocolo_w
	from	pls_protocolo_conta
	where	nr_sequencia	= nr_seq_protocolo_w;

	/* Obter tipo de contratação */

	select	max(CASE WHEN pls_obter_se_estip_filantropia(a.nr_seq_contrato,dt_mes_competencia_w)='S' THEN 'CI'  ELSE b.ie_tipo_contratacao END )
	into STRICT	ie_tipo_contratacao_w
	from	pls_plano 	b,
		pls_segurado	a
	where	a.nr_seq_plano	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_segurado_w;

	if (ie_proc_mat_w	= 'P') then
		/* Obter dados do procedimento */

		select	a.vl_procedimento_imp,
			a.vl_unitario,
			a.dt_procedimento,
			a.ie_tipo_despesa
		into STRICT	vl_apresentado_w,
			vl_unitario_w,
			dt_item_w,
			ie_tipo_despesa_w
		from	pls_conta_proc	a
		where	nr_sequencia	= nr_seq_item_w;
	elsif (ie_proc_mat_w	= 'M') then
		/* Obter dados do material */

		select	a.vl_material_imp,
			a.vl_unitario,
			a.dt_atendimento,
			a.ie_tipo_despesa
		into STRICT	vl_apresentado_w,
			vl_unitario_w,
			dt_item_w,
			ie_tipo_despesa_w
		from	pls_conta_mat	a
		where	nr_sequencia	= nr_seq_item_w;
	end if;

	update	pls_conta_medica_resumo
	set	nr_seq_competencia	= nr_seq_competencia_w,
		vl_apresentado		= vl_apresentado_w,
		nr_seq_segurado		= nr_seq_segurado_w,
		cd_guia			= cd_guia_w,
		cd_guia_referencia	= cd_guia_referencia_w,
		cd_guia_prestador	= cd_guia_prestador_w,
		nr_seq_prestador_atend	= nr_seq_prestador_prot_w,
		vl_unitario		= vl_unitario_w,
		ie_status		= ie_status_w,
		ie_tipo_contratacao	= ie_tipo_contratacao_w,
		dt_item			= dt_item_w,
		dt_competencia_pgto	= dt_mes_competencia_w,
		ds_log			= nm_usuario_p,
		vl_lib_original		= vl_liberado_w,
		ie_tipo_despesa		= ie_tipo_despesa_w,
		ie_status_protocolo	= ie_status_protocolo_w,
		nr_seq_evento		= 1
	where	nr_seq_conta		= nr_seq_conta_w
	and	nr_sequencia		= nr_sequencia_w;
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_pls_dados_conta_resumo ( nr_seq_lote_pgto_p bigint, nm_usuario_p text) FROM PUBLIC;

