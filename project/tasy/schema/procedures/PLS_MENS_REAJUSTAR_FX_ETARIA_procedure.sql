-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mens_reajustar_fx_etaria ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

	
procedure atualizar_faixa_preco is

ie_geracao_valores_w		pls_contrato.ie_geracao_valores%type;
dt_aniversario_w		timestamp;
nr_seq_seg_preco_w		pls_segurado_preco.nr_sequencia%type;
qt_idade_inicial_w		pls_plano_preco.qt_idade_inicial%type;
qt_anos_limite_reaj_w		bigint;
qt_idade_limite_reaj_w		bigint;
qt_idade_operadora_w		bigint;
ie_grau_parentesco_w		varchar(2);

indice_w			integer;
tb_nr_seq_segurado_w		pls_util_cta_pck.t_number_table;

tb_nr_seq_mensalidade_seg_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_seg_preco_w		pls_util_cta_pck.t_number_table;

C01 CURSOR(	nr_seq_lote_pc	pls_lote_mensalidade.nr_sequencia%type) FOR
	SELECT	nr_seq_mensalidade_seg,
		nr_seq_segurado,
		dt_referencia,
		qt_idade,
		nr_seq_segurado_preco,
		nr_seq_titular,
		dt_nascimento,
		nr_seq_contrato,
		ie_regulamentacao,
		nr_seq_tabela,
		nr_seq_regra_susp_reaj_fx
	from	(
		SELECT	a.nr_sequencia nr_seq_mensalidade_seg,
			a.nr_seq_segurado,
			a.dt_mesano_referencia dt_referencia,
			a.qt_idade,
			a.nr_seq_segurado_preco,
			c.nr_seq_titular,
			d.dt_nascimento,
			c.nr_seq_contrato,
			e.ie_regulamentacao,
			c.nr_seq_tabela,
			(	select	max(y.qt_idade_final)
				from	pls_segurado_preco x,
					pls_plano_preco y
				where	y.nr_sequencia	= x.nr_seq_preco
				and	x.nr_sequencia	= a.nr_seq_segurado_preco) qt_idade_final, --Obter a idade maxima para a faixa etaria atual
			a.nr_seq_regra_susp_reaj_fx
		from	pls_mensalidade_segurado a,
			pls_mensalidade b,
			pls_segurado c,
			pessoa_fisica d,
			pls_plano e
		where	c.nr_sequencia		= a.nr_seq_segurado
		and	b.nr_sequencia		= a.nr_seq_mensalidade
		and	d.cd_pessoa_fisica	= c.cd_pessoa_fisica
		and	e.nr_sequencia		= c.nr_seq_plano
		and	a.nr_seq_lote		= nr_seq_lote_pc ) alias3
	where	qt_idade > qt_idade_final
	order by dt_referencia; --Se a idade atual for maior que a idade maxima da faixa etaria, e porque precisa reajustar
C02 CURSOR(	nr_seq_lote_pc		pls_lote_mensalidade.nr_sequencia%type) FOR
	SELECT	b.nr_sequencia nr_seq_mensalidade_seg,
		b.nr_seq_segurado,
		b.dt_mesano_referencia,
		c.ie_regulamentacao
	from	pls_mens_faixa_etaria_temp a,
		pls_mensalidade_segurado b,
		pls_plano c
	where	a.nr_seq_segurado = b.nr_seq_segurado
	and	c.nr_sequencia	= b.nr_seq_plano
	and	b.nr_seq_lote	= nr_seq_lote_pc;

procedure atualizar_mens_seg is;
BEGIN

if (tb_nr_seq_mensalidade_seg_w.count > 0) then
	forall i in tb_nr_seq_mensalidade_seg_w.first..tb_nr_seq_mensalidade_seg_w.last
		update	pls_mensalidade_segurado
		set	nr_seq_segurado_preco	= tb_nr_seq_seg_preco_w(i)
		where	nr_sequencia		= tb_nr_seq_mensalidade_seg_w(i);
	commit;
end if;

tb_nr_seq_mensalidade_seg_w.delete;
tb_nr_seq_seg_preco_w.delete;
indice_w	:= 0;

end;

procedure atualizar_tab_faixa_etaria is
begin
if (tb_nr_seq_segurado_w.count > 0) then
	forall i in tb_nr_seq_segurado_w.first..tb_nr_seq_segurado_w.last
		insert	into	pls_mens_faixa_etaria_temp(	nr_seq_segurado)
			values (tb_nr_seq_segurado_w(i));
	commit;
end if;

tb_nr_seq_segurado_w.delete;
indice_w	:= 0;

end;

begin

delete from pls_mens_faixa_etaria_temp;
tb_nr_seq_segurado_w.delete;
atualizar_tab_faixa_etaria;

for r_c01_w in C01(nr_seq_lote_p) loop
	begin
	
	if (r_c01_w.nr_seq_contrato IS NOT NULL AND r_c01_w.nr_seq_contrato::text <> '') then
		select	coalesce(ie_geracao_valores,'B')
		into STRICT	ie_geracao_valores_w
		from	pls_contrato
		where	nr_sequencia	= r_c01_w.nr_seq_contrato;
	else
		ie_geracao_valores_w		:= 'B';
	end if;
	
	if	((ie_geracao_valores_w = 'T' and coalesce(r_c01_w.nr_seq_titular::text, '') = '') or (ie_geracao_valores_w = 'D' and (r_c01_w.nr_seq_titular IS NOT NULL AND r_c01_w.nr_seq_titular::text <> '')) or (ie_geracao_valores_w = 'B')) then
		
		SELECT * FROM pls_obter_limite_reajuste_fx(r_c01_w.nr_seq_segurado, cd_estabelecimento_p, qt_idade_limite_reaj_w, qt_anos_limite_reaj_w) INTO STRICT qt_idade_limite_reaj_w, qt_anos_limite_reaj_w;
		
		ie_grau_parentesco_w	:= coalesce(pls_obter_garu_dependencia_seg(r_c01_w.nr_seq_segurado,'C'),'X');
		
		if (qt_anos_limite_reaj_w > 0) then
			qt_idade_operadora_w	:= pls_obter_idade_benef_ops(r_c01_w.nr_seq_segurado, r_c01_w.dt_referencia, cd_estabelecimento_p);
		else
			qt_idade_operadora_w	:= 0; --Se na rera for 0, entao nao precisa calcular o o tempo que o beneficiario esta na operadora
		end if;
		
		select	max(qt_idade_inicial)
		into STRICT	qt_idade_inicial_w
		from	pls_plano_preco
		where	nr_seq_tabela		= r_c01_w.nr_seq_tabela
		and	r_c01_w.qt_idade between qt_idade_inicial and qt_idade_final
		and	((ie_grau_titularidade = ie_grau_parentesco_w) or (coalesce(ie_grau_titularidade::text, '') = ''));
		
		if	((qt_idade_inicial_w >= qt_idade_limite_reaj_w) and (r_c01_w.qt_idade >= qt_idade_limite_reaj_w) and (qt_idade_operadora_w >= qt_anos_limite_reaj_w) and
			 ((r_c01_w.ie_regulamentacao <> 'R') or (r_c01_w.ie_regulamentacao = 'R' and pls_mensalidade_util_pck.get_ie_reaj_idade_limite_pre = 'S'))) then
			null; -- Nao reajusta o preco porque o beneficiario atingiu a idade limite para reajuste.
		else
			dt_aniversario_w	:= add_months(r_c01_w.dt_nascimento,r_c01_w.qt_idade*12);
		
			nr_seq_seg_preco_w := pls_preco_beneficiario_pck.atualizar_faixa_etaria_benef(r_c01_w.nr_seq_segurado, dt_aniversario_w, r_c01_w.dt_referencia, r_c01_w.nr_seq_regra_susp_reaj_fx, nr_seq_lote_p, nm_usuario_p, cd_estabelecimento_p, nr_seq_seg_preco_w);
			
			if (nr_seq_seg_preco_w IS NOT NULL AND nr_seq_seg_preco_w::text <> '') then
				tb_nr_seq_segurado_w(indice_w)	:= r_c01_w.nr_seq_segurado;
				
				if (indice_w >= pls_util_pck.qt_registro_transacao_w) then
					atualizar_tab_faixa_etaria;
				else
					indice_w	:= indice_w + 1;
				end if;
			end if;
		end if;
	end if;
	end;
end loop; --C01
atualizar_tab_faixa_etaria;

--Atualizar o NR_SEQ_SEGURADO_PRECO nas mensalidades do lote
tb_nr_seq_mensalidade_seg_w.delete;
tb_nr_seq_seg_preco_w.delete;
atualizar_mens_seg;

for r_c02_w in C02(nr_seq_lote_p) loop
	begin

	tb_nr_seq_mensalidade_seg_w(indice_w)	:= r_c02_w.nr_seq_mensalidade_seg;
	tb_nr_seq_seg_preco_w(indice_w)		:= pls_mens_beneficiario_pck.get_segurado_preco(r_c02_w.nr_seq_segurado, r_c02_w.dt_mesano_referencia, r_c02_w.ie_regulamentacao);
	
	if (indice_w >= pls_util_pck.qt_registro_transacao_w) then
		atualizar_mens_seg;
	else
		indice_w	:= indice_w + 1;
	end if;
	end;
end loop;

atualizar_mens_seg;

commit;

end;

procedure atualizar_faixa_sca is

tb_nr_seq_segurado_sca_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_plano_w		pls_util_cta_pck.t_number_table;
tb_vl_preco_sca_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_tabela_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_plano_preco_w		pls_util_cta_pck.t_number_table;
tb_dt_reajuste_sca_w		pls_util_cta_pck.t_date_table;
tb_qt_idade_w			pls_util_cta_pck.t_number_table;
tb_vl_preco_ant_sca_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_reajuste_sca_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_vinculo_sca_w		pls_util_cta_pck.t_number_table;
nr_indice_inserir_sca_w		number(10);

qt_vidas_w			number(10);
nr_seq_plano_preco_w		pls_plano_preco.nr_sequencia%type;
qt_idade_inicial_fx_w		pls_plano_preco.qt_idade_inicial%type;
qt_preco_att_w			number(10);
nr_seq_reajuste_preco_w		pls_reajuste_preco.nr_sequencia%type;
vl_preco_atual_w		number(15,2);
vl_preco_anterior_w		number(15,2);

C01 CURSOR FOR
	SELECT	nr_seq_segurado,
		coalesce(ie_preco_vidas_contrato, 'N') ie_preco_vidas_contrato,
		coalesce(ie_calculo_vidas, 'A') ie_calculo_vidas,
		nr_seq_tabela,
		ie_grau_parentesco,
		qt_idade,
		nr_seq_plano,
		nr_seq_sca_vinculo,
		dt_mesano_referencia,
		ie_regulamentacao
	from	(SELECT (select	count(1)
			from	pls_plano_preco x
			where	x.nr_seq_tabela = c.nr_seq_tabela) qt_faixa,
			b.nr_sequencia nr_seq_segurado,
			(select	max(x.ie_preco_vidas_contrato)
			from	pls_tabela_preco x
			where	x.nr_sequencia = c.nr_seq_tabela) ie_preco_vidas_contrato,
			(select	max(x.ie_calculo_vidas)
			from	pls_tabela_preco x
			where	x.nr_sequencia = c.nr_seq_tabela) ie_calculo_vidas,
			c.nr_seq_tabela,
			coalesce(pls_obter_garu_dependencia_seg(b.nr_sequencia, 'C'),'X') ie_grau_parentesco,
			a.qt_idade,
			c.nr_seq_plano,
			c.nr_sequencia nr_seq_sca_vinculo,
			a.dt_mesano_referencia,
			(select	max(x.ie_regulamentacao)
			from	pls_plano x
			where	x.nr_sequencia = c.nr_seq_plano) ie_regulamentacao
		from	pls_mensalidade_segurado a,
			pls_segurado b,
			pls_sca_vinculo c
		where	a.nr_seq_lote = nr_seq_lote_p
		and	b.nr_sequencia = a.nr_seq_segurado
		and	b.nr_sequencia = c.nr_seq_segurado
		and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
		and	(c.nr_seq_tabela IS NOT NULL AND c.nr_seq_tabela::text <> '')
		and	a.dt_mesano_referencia between trunc(c.dt_inicio_vigencia,'month') and fim_dia(coalesce(c.dt_fim_vigencia,a.dt_mesano_referencia))) alias17
	where	qt_faixa > 1;
	
procedure limpar_vetor_seg_preco_origem is
begin
tb_nr_seq_segurado_sca_w.delete;
tb_nr_seq_plano_w.delete;
tb_vl_preco_sca_w.delete;
tb_nr_seq_tabela_w.delete;
tb_nr_seq_plano_preco_w.delete;
tb_qt_idade_w.delete;
tb_dt_reajuste_sca_w.delete;
tb_vl_preco_ant_sca_w.delete;
tb_nr_seq_reajuste_sca_w.delete;
tb_nr_seq_vinculo_sca_w.delete;
nr_indice_inserir_sca_w	:= 0;
end;
	
procedure inserir_segurado_preco_origem is
begin
if (tb_nr_seq_tabela_w.count > 0) then
	forall i in tb_nr_seq_tabela_w.first..tb_nr_seq_tabela_w.last
		insert into pls_segurado_preco_origem(nr_sequencia, cd_estabelecimento, dt_atualizacao,
				nm_usuario, nr_seq_segurado, nr_seq_plano,
				dt_atualizacao_nrec, nm_usuario_nrec, vl_preco_atual,
				nr_seq_tabela, ie_origem_preco,
				cd_motivo_reajuste, dt_reajuste, nr_seq_preco,
				qt_idade, vl_preco_ant, nr_seq_reajuste_preco,
				nr_seq_vinculo_sca, dt_liberacao, nm_usuario_liberacao)
			values (nextval('pls_segurado_preco_origem_seq'), cd_estabelecimento_p, clock_timestamp(),
				nm_usuario_p, tb_nr_seq_segurado_sca_w(i), tb_nr_seq_plano_w(i),
				clock_timestamp(), nm_usuario_p, tb_vl_preco_sca_w(i),
				tb_nr_seq_tabela_w(i), 'SB',
				'E', tb_dt_reajuste_sca_w(i), tb_nr_seq_plano_preco_w(i),
				tb_qt_idade_w(i), tb_vl_preco_ant_sca_w(i), tb_nr_seq_reajuste_sca_w(i),
				tb_nr_seq_vinculo_sca_w(i), clock_timestamp(), nm_usuario_p);
	commit;
end if;

CALL limpar_vetor_seg_preco_origem();

end;
	
begin

CALL limpar_vetor_seg_preco_origem();

for r_c01_w in c01 loop
	begin
	if (r_c01_w.ie_preco_vidas_contrato = 'S') then
		qt_vidas_w	:= pls_obter_qt_vidas_tab_preco(r_c01_w.nr_seq_segurado, r_c01_w.ie_calculo_vidas, 'E');
	else
		qt_vidas_w	:= 0;
	end if;
	
	SELECT * FROM pls_preco_beneficiario_pck.obter_faixa_etaria(r_c01_w.ie_grau_parentesco, r_c01_w.nr_seq_tabela, r_c01_w.qt_idade, qt_vidas_w, nr_seq_plano_preco_w, qt_idade_inicial_fx_w) INTO STRICT nr_seq_plano_preco_w, qt_idade_inicial_fx_w;
	
	if (nr_seq_plano_preco_w IS NOT NULL AND nr_seq_plano_preco_w::text <> '') then
		select	count(1)
		into STRICT	qt_preco_att_w
		from	pls_segurado_preco_origem
		where	nr_seq_segurado = r_c01_w.nr_seq_segurado
		and	nr_seq_preco = nr_seq_plano_preco_w
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		
		if (qt_preco_att_w = 0) then		
			select	max(nr_sequencia)
			into STRICT	nr_seq_reajuste_preco_w
			from	pls_reajuste_preco
			where	nr_seq_preco = nr_seq_plano_preco_w
			and	dt_reajuste <= r_c01_w.dt_mesano_referencia
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
		
			if (nr_seq_reajuste_preco_w IS NOT NULL AND nr_seq_reajuste_preco_w::text <> '') then
				select	coalesce(vl_reajustado,0),
					coalesce(vl_base,0)
				into STRICT	vl_preco_atual_w,
					vl_preco_anterior_w
				from	pls_reajuste_preco
				where	nr_sequencia = nr_seq_reajuste_preco_w;
			else
				select	coalesce(vl_preco_atual,0),
					coalesce(vl_preco_inicial,0)
				into STRICT	vl_preco_atual_w,
					vl_preco_anterior_w
				from	pls_plano_preco
				where	nr_sequencia = nr_seq_plano_preco_w;
			end if;
		
			tb_nr_seq_plano_w(nr_indice_inserir_sca_w)		:= r_c01_w.nr_seq_plano;
			tb_nr_seq_segurado_sca_w(nr_indice_inserir_sca_w)	:= r_c01_w.nr_seq_segurado;
			tb_nr_seq_tabela_w(nr_indice_inserir_sca_w)		:= r_c01_w.nr_seq_tabela;
			tb_nr_seq_plano_preco_w(nr_indice_inserir_sca_w)	:= nr_seq_plano_preco_w;
			tb_qt_idade_w(nr_indice_inserir_sca_w)			:= r_c01_w.qt_idade;
			tb_nr_seq_vinculo_sca_w(nr_indice_inserir_sca_w)	:= r_c01_w.nr_seq_sca_vinculo;
			tb_dt_reajuste_sca_w(nr_indice_inserir_sca_w)		:= r_c01_w.dt_mesano_referencia;
			tb_nr_seq_reajuste_sca_w(nr_indice_inserir_sca_w)	:= nr_seq_reajuste_preco_w;
			tb_vl_preco_sca_w(nr_indice_inserir_sca_w)		:= vl_preco_atual_w;
			tb_vl_preco_ant_sca_w(nr_indice_inserir_sca_w)		:= vl_preco_anterior_w;
			
			if (nr_indice_inserir_sca_w >= pls_util_pck.qt_registro_transacao_w) then
				inserir_segurado_preco_origem;
			else
				nr_indice_inserir_sca_w	:= nr_indice_inserir_sca_w + 1;
			end if;
		end if;
	end if;
	end;
end loop;

inserir_segurado_preco_origem;

end;

begin

atualizar_faixa_preco;

if (pls_mensalidade_util_pck.get_ie_reajuste_fx_sca = 'S') then
	atualizar_faixa_sca;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_reajustar_fx_etaria ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

