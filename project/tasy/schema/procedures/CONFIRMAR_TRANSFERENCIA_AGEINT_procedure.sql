-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE confirmar_transferencia_ageint ( cd_agenda_p bigint, dt_agenda_p timestamp, nr_seq_ageint_p bigint, nm_usuario_p text, nr_seq_motivo_p bigint, ds_motivo_p text, ie_nao_agendado_p INOUT text, ds_retorno_p INOUT text) AS $body$
DECLARE

		
ind			integer	:= 1;
ds_horario_w		varchar(255);
ds_sql_w		varchar(4000);
ds_sep_bv_w		varchar(50);
ds_parametros_w		varchar(4000);
cd_tipo_agenda_w	bigint;
cd_pessoa_fisica_w	varchar(10);
nm_contato_w		varchar(80);
nr_telefone_w		varchar(60);
cd_convenio_w		integer;
cd_Categoria_w		varchar(10);
cd_plano_w		varchar(10);
nr_doc_convenio_w	varchar(20);
cd_usuario_convenio_w	varchar(30);
dt_validade_carteira_w	timestamp;
nr_seq_agenda_w		ageint_marcacao_usuario.nr_seq_agenda%type;
cd_agenda_w		bigint;
nr_sequencia_w		bigint;
nr_status_agendado_w	bigint;	
nr_seq_ageint_item_w	bigint;
cd_medico_w		varchar(10);
nr_seq_proc_interno_w	bigint;
cd_estabelecimento_w	smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_Agenda_origem_w	ageint_marcacao_usuario.nr_seq_agenda%type;
nr_Seq_marcacao_ant_w	bigint;
cd_convenio_ageint_w	integer;
cd_Categoria_ageint_w	varchar(10);
cd_plano_ageint_w	varchar(10);
cd_conv_item_w		integer;
cd_categ_item_w		varchar(10);
cd_plano_item_w		varchar(10);
nr_seq_autor_w		bigint;
nr_seq_estagio_w	bigint;
ie_nao_agendado_w	varchar(1)	:= 'N';
ie_encaixe_w		varchar(1);
hr_Agenda_w		timestamp;
nr_minuto_duracao_w	bigint;
cd_profissional_w	varchar(10);
nm_usuario_confirm_encaixe_w 	usuario.nm_usuario%type;
dt_confirm_encaixe_w	timestamp;
cd_medico_exec_w	varchar(10);
qt_diaria_prev_w	bigint;

ds_retorno_w		varchar(255);
cd_medico_marcacao_w	varchar(10);
nr_minuto_duracao_age_exame_w	bigint;

/* variaveis confirmacao agendamento */

qt_dias_confirm_aut_w		bigint;
dt_confirmacao_w		timestamp;
nm_usuario_confirm_w		usuario.nm_usuario%type;
ie_confirmacao_aut_w		varchar(1);

cd_beneficiario_w	varchar(10);
qt_pls_w		bigint;
nr_seq_analise_w	bigint;
dt_agenda_w		timestamp;
cd_setor_exclusivo_w	integer;
dt_entrega_w		timestamp;
dt_resultado_w		timestamp;
ie_gerar_controle_sessao_w	varchar(1);
ie_agend_serv_cons_w		varchar(1) := 'N';
ie_agendamento_coletivo_w	varchar(1):= 'N';
qt_reg_w			bigint;
ie_cancela_autor_agenda_w	parametro_faturamento.ie_canc_autor_agenda%type;
ie_canc_autor_agen_cons_w	parametro_faturamento.ie_canc_autor_agen_cons%type;

nr_seq_agenda_exam_w		agenda_paciente.nr_sequencia%type;

-- HDM PARAMS /* Please talk to HPMS MANAGEMENT to change some var below */
nr_seq_partic_ciclo_item_w		agenda_consulta.nr_seq_partic_ciclo_item%type;
cnpj_solicitante_w			agenda_integrada.cnpj_solicitante%type;
nr_sequencia_agen_list_esp_w		agenda_lista_espera.nr_sequencia%type;
nr_seq_lista_espera_origem_w		agenda_integrada_item.nr_seq_lista_espera_origem%type;
cnpj_local_agenda_externo_w		agenda_lista_espera.cnpj_local_agenda_externo%type;
ds_local_agenda_externo_w		agenda_lista_espera.ds_local_agenda_externo%type;
cd_pessoa_fisica_agenda_w		pessoa_fisica.cd_pessoa_fisica%type;

C01 CURSOR FOR
	SELECT	nr_seq_agenda,
		cd_agenda,
		nr_sequencia,
		nr_seq_ageint_item,
		coalesce(ie_encaixe,'N'),
		hr_Agenda,
		nr_minuto_duracao,
		nm_usuario_confirm_encaixe,
		dt_confirm_encaixe,
		cd_medico_exec_w,
		cd_pessoa_fisica
	from	ageint_marcacao_usuario
	where	nm_usuario			= nm_usuario_p
	--and	trunc(hr_agenda)		= dt_agenda_p
	and	nr_seq_ageint			= nr_seq_ageint_p
	and	coalesce(ie_gerado,'N')		= 'N'
	and	coalesce(ie_horario_auxiliar, 'N')	= 'N'
	/*and	cd_agenda			= cd_agenda_w*/
;

C02 CURSOR FOR
	SELECT	distinct cd_agenda
	from	ageint_lib_usuario
	where	nm_usuario	= nm_usuario_p
	and	nr_Seq_ageint	= nr_seq_ageint_p;

C03 CURSOR FOR
	SELECT 	coalesce(nr_sequencia,0)
	from   	autorizacao_convenio
	where  	nr_seq_agenda  = nr_seq_Agenda_origem_w;

C04 CURSOR FOR
	SELECT 	coalesce(nr_sequencia,0)
	from   	autorizacao_convenio
	where  	nr_seq_agenda_consulta  = nr_seq_Agenda_origem_w;
	
C05 CURSOR FOR
	SELECT	cd_pessoa_fisica
	from	agenda_integrada
	where	nr_sequencia	= nr_seq_ageint_p;	
	

BEGIN
ie_agendamento_coletivo_w := obter_param_usuario(869, 410, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_agendamento_coletivo_w);

select 	coalesce(max(obter_valor_param_usuario(869, 401, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo)), 'N')
into STRICT	ie_gerar_controle_sessao_w
;

select 	coalesce(max(ie_canc_autor_agenda),'N'),
		coalesce(max(ie_canc_autor_agen_cons),'N')
into STRICT	ie_cancela_autor_agenda_w,
		ie_canc_autor_agen_cons_w
from 	parametro_faturamento
where	cd_estabelecimento	= wheb_usuario_pck.get_cd_estabelecimento;

select 	coalesce(max(obter_valor_param_usuario(869, 77, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo)), '0')
into STRICT   	qt_dias_confirm_aut_w
;


select	cd_pessoa_fisica,
	nm_contato,
	nr_telefone,
	cd_convenio,
	cd_Categoria,
	cd_plano,
	nr_doc_convenio,
	cd_usuario_convenio,
	dt_validade_carteira,
	cd_estabelecimento,
	cnpj_solicitante
into STRICT	cd_pessoa_fisica_w,
	nm_contato_w,
	nr_telefone_w,
	cd_convenio_ageint_w,
	cd_Categoria_w,
	cd_plano_w,
	nr_doc_convenio_w,
	cd_usuario_convenio_w,
	dt_validade_carteira_w,
	cd_estabelecimento_w,
	cnpj_solicitante_w
from	agenda_integrada
where	nr_sequencia	= nr_seq_Ageint_p;

cd_convenio_w	:= cd_convenio_ageint_w;
cd_categoria_w	:= cd_categoria_ageint_w;
cd_plano_w	:= cd_plano_ageint_w;

/*open C02;
loop
fetch C02 into	
	cd_Agenda_w;
exit when C02%notfound;
	begin
	select 	max(cd_tipo_Agenda),
		max(cd_setor_exclusivo)
	into	cd_tipo_Agenda_w,
		cd_setor_exclusivo_w
	from	agenda
	where	cd_agenda	= cd_Agenda_w;
	
	if (cd_tipo_Agenda_w = 5) then
		ie_agend_serv_w := 'S';
	end if;*/
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_agenda_w,
		cd_agenda_w,
		nr_sequencia_w,
		nr_seq_ageint_item_w,
		ie_encaixe_w,
		hr_agenda_w,
		nr_minuto_duracao_W,
		nm_usuario_confirm_encaixe_w,
		dt_confirm_encaixe_w,
		cd_medico_exec_w,
		cd_medico_marcacao_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select 	max(cd_tipo_Agenda),
			max(cd_setor_exclusivo)
		into STRICT	cd_tipo_Agenda_w,
			cd_setor_exclusivo_w
		from	agenda
		where	cd_agenda	= cd_Agenda_w;
	
	if (qt_dias_confirm_aut_w > 0) and (Ageint_Obter_Qt_Dia_Util_Per(clock_timestamp(), hr_agenda_w, cd_estabelecimento_w) <= qt_dias_confirm_aut_w) then
		nm_usuario_confirm_encaixe_w := nm_usuario_p;
		ie_confirmacao_aut_w		 := 'S';
		dt_confirm_encaixe_w 	     := clock_timestamp();
		nm_usuario_confirm_w		 := nm_usuario_p;
		dt_confirmacao_w		     := clock_timestamp();
	else
	    nm_usuario_confirm_encaixe_w := '';
		dt_confirmacao_w	   		 := null;
	    dt_confirm_encaixe_w   		 := null;
		nm_usuario_confirm_w		 := '';
		ie_confirmacao_aut_w		 := 'N';
	end if;
	
		if ((cd_tipo_Agenda_w = 5) or (cd_tipo_Agenda_w = 3)) then
			ie_agend_serv_cons_w := 'S';
		end if;
		select	max(cd_convenio),
			max(cd_categoria),
			max(cd_plano)
		into STRICT	cd_conv_item_w,
			cd_categ_item_w,
			cd_plano_item_w
		from	agenda_integrada_conv_item
		where	nr_seq_agenda_item	= nr_seq_ageint_item_w;
		
		if (cd_conv_item_w IS NOT NULL AND cd_conv_item_w::text <> '') then
			cd_convenio_w	:= cd_conv_item_w;
			cd_categoria_w	:= cd_categ_item_w;
			cd_plano_w	:= cd_plano_item_w;
		end if;
		
		select	nr_Seq_proc_interno,
			cd_medico,
			cd_procedimento,
			ie_origem_proced,
			qt_diaria_prev,
			nr_seq_lista_espera_origem
		into STRICT	nr_seq_proc_interno_w,
			cd_medico_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_diaria_prev_w,
			nr_seq_lista_espera_origem_w
		from	agenda_integrada_item
		where	nr_Sequencia	= nr_seq_ageint_item_w;
				
		if (nr_Seq_proc_interno_w IS NOT NULL AND nr_Seq_proc_interno_w::text <> '') and
			((coalesce(cd_procedimento_w::text, '') = '') or (coalesce(ie_origem_proced_w::text, '') = '')) then
			SELECT * FROM obter_proc_tab_interno_conv(
					nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, dt_agenda_p, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;
		
		select	coalesce(max(nr_Sequencia),0),
			max(nr_seq_Agenda)
		into STRICT	nr_Seq_marcacao_ant_w,
			nr_seq_Agenda_origem_w
		from	ageint_marcacao_usuario
		where	nr_seq_ageint_item	= nr_seq_ageint_item_w
		and	nr_seq_ageint		= nr_seq_ageint_p
		and	nr_sequencia		<> nr_sequencia_w
		and	coalesce(ie_gerado,'N')	= 'S'
		and	coalesce(ie_horario_auxiliar, 'N')	= 'N';

		if (cnpj_solicitante_w IS NOT NULL AND cnpj_solicitante_w::text <> '' AND nr_seq_lista_espera_origem_w IS NOT NULL AND nr_seq_lista_espera_origem_w::text <> '') then

			begin
				select 	cd_cgc,
						nm_fantasia_estab
				into STRICT	cnpj_local_agenda_externo_w,
						ds_local_agenda_externo_w
				from 	estabelecimento
				where 	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;

				select  max(nr_sequencia)
				into STRICT	nr_sequencia_agen_list_esp_w
				from    agenda_lista_espera
				where   cnpj_origem = cnpj_solicitante_w 
				and     nr_seq_lista_espera_origem = nr_seq_lista_espera_origem_w;

				if (nr_sequencia_agen_list_esp_w IS NOT NULL AND nr_sequencia_agen_list_esp_w::text <> '') then
					begin
						update  agenda_lista_espera
						set     dt_agenda_externo = hr_agenda_w,
								ie_status_espera = 'E',
								ds_local_agenda_externo = ds_local_agenda_externo_w,
								cnpj_local_agenda_externo = cnpj_local_agenda_externo_w,
								ie_falta = 'N'
						where   nr_sequencia = nr_sequencia_agen_list_esp_w;
					end;
				end if;
			end;
		end if;
		
		if (nr_Seq_marcacao_ant_w	> 0) and
			((nr_seq_Agenda_origem_w	<> nr_seq_agenda_w) or (ie_encaixe_w	= 'S')) then
			if (cd_tipo_agenda_w	= 2) then
				
				/*update	agenda_integrada_item
				set	nr_seq_agenda_exame	= null
				where	nr_sequencia		= nr_seq_ageint_item_w;*/
	

				if (ie_cancela_autor_agenda_w = 'S') then
					open C03;
					loop
					fetch C03 into
						nr_seq_autor_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						if (nr_seq_autor_w	> 0) then
						select	max(nr_sequencia)
						into STRICT	nr_seq_estagio_w
						from   	estagio_autorizacao
						where  	ie_situacao = 'A'
						and    	ie_interno  = 70
						and		OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;

						CALL atualizar_autorizacao_convenio(nr_seq_autor_w, nm_usuario_p, nr_seq_estagio_w, 'N', 'N','S');
						end if;
						end;
					end loop;
					close C03;
				end if;

				select	max(nr_minuto_duracao)
				into STRICT 	nr_minuto_duracao_age_exame_w
				from	agenda_paciente
				where	nr_sequencia = nr_seq_agenda_w;
				
				-- se a duracao do horario da agenda for menor do que o marcado
				if (nr_minuto_duracao_age_exame_w < nr_minuto_duracao_w) then
					CALL liberar_hor_dur_age_exame(nr_seq_Agenda_w, nr_minuto_duracao_w, nm_usuario_p);
				end if;
				
				if (ie_encaixe_w	= 'N') then
					CALL ageint_copiar_transf_agenda_ex(cd_estabelecimento_w,cd_medico_marcacao_w,nr_seq_Agenda_origem_w,nr_seq_Agenda_w,'T',nr_seq_motivo_p,ds_motivo_p,nm_usuario_p,nr_seq_ageint_p,hr_Agenda_w,nr_minuto_duracao_w);
					
					
					
					if (ie_agendamento_coletivo_w = 'S') then
						update agendamento_coletivo
						Set   Hr_Inicio = (SELECT Max(Hr_Agenda) From Ageint_Marcacao_Usuario Where Nr_Sequencia In (Select Max(Nr_Sequencia) From Ageint_Marcacao_Usuario Where Nr_Seq_Ageint_Item = Nr_Seq_Ageint_Item_W) ),
                  Dt_Agenda = (Select Max(Hr_Agenda) From Ageint_Marcacao_Usuario Where Nr_Sequencia In (Select Max(Nr_Sequencia) From Ageint_Marcacao_Usuario Where Nr_Seq_Ageint_Item = Nr_Seq_Ageint_Item_W) ),
						      Nr_Minuto_Duracao = (Select Max(Nr_Minuto_Duracao) From Ageint_Marcacao_Usuario Where Nr_Sequencia In (Select Max(Nr_Sequencia) From Ageint_Marcacao_Usuario Where Nr_Seq_Ageint_Item = Nr_Seq_Ageint_Item_W) ),
                  Dt_Atualizacao = clock_timestamp(),
                  Nm_Usuario = Nm_Usuario_P
						Where  Nr_Seq_Agenda_Int = Nr_Seq_Ageint_Item_W
						and ie_status_agenda = 'T';
					end if;
				else
					nr_Seq_Agenda_w := ageint_gerar_encaixe_agex_sel(cd_estabelecimento_w, cd_agenda_w, hr_Agenda_w, to_char(hr_Agenda_w,'hh24:mi'), nr_minuto_duracao_W, nr_seq_Agenda_origem_w, 'S', null, null, nm_usuario_p, nr_Seq_Agenda_w, nm_usuario_confirm_encaixe_w, dt_confirm_encaixe_w, cd_medico_marcacao_w, ie_confirmacao_aut_w);
				end if;
				
				CALL Ageint_Gerar_Equip_Agenda(	nr_seq_agenda_w,
									nr_seq_ageint_item_w,
									nm_usuario_p);
				
				if (dt_confirmacao_w IS NOT NULL AND dt_confirmacao_w::text <> '') then
					update	agenda_paciente
					set	nm_usuario_acesso   = nm_usuario_confirm_w,
					dt_confirmacao      = dt_confirmacao_w,
					ie_confirmacao_aut  = ie_confirmacao_aut_w
					where	nr_sequencia	= nr_seq_agenda_w;			
		    	else
					update	agenda_paciente
					set	nm_usuario_acesso	 = NULL				
					where	nr_sequencia	= nr_seq_agenda_w;
				end if;

				
				delete	FROM ageint_marcacao_usuario
				where	nr_sequencia	= nr_Seq_marcacao_ant_w;
				
				update	ageint_marcacao_usuario
				set	ie_Gerado	= 'S',
					nr_seq_agenda	= nr_seq_Agenda_w
				where	nr_sequencia	= nr_sequencia_w;
								
				if (nr_Seq_proc_interno_w IS NOT NULL AND nr_Seq_proc_interno_w::text <> '') then
		
					dt_entrega_w 	:= obter_dt_entrega_laudo(nr_seq_ageint_p, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, hr_agenda_w, cd_setor_exclusivo_w, 'DE', nr_seq_agenda_w);
					dt_resultado_w 	:= obter_dt_entrega_laudo(nr_seq_ageint_p, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p, hr_agenda_w, cd_setor_exclusivo_w, 'DR', nr_seq_agenda_w);		
					
				end if;					
								
				update	agenda_integrada_item
				set	nr_seq_agenda_exame	= nr_seq_agenda_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					dt_transferencia	= clock_timestamp(),
					dt_resultado		= dt_resultado_w,
					dt_entrega_prevista	= dt_entrega_w
				where	nr_sequencia		= nr_seq_ageint_item_w;
				
				CALL ageint_resolver_pendencia(nr_seq_ageint_item_w, nm_usuario_p);
				
				commit;
				
				-- se a duracao do horario da agenda for menor do que o marcado
				if (nr_minuto_duracao_age_exame_w < nr_minuto_duracao_w) then
					CALL Gerar_Horario_Agenda_Exame(cd_estabelecimento_w, cd_agenda_w, trunc(hr_agenda_w), nm_usuario_p);
				end if;
				
				update	agenda_integrada_prof_item
				set	ie_confirmado 		= 'S'
				where	nr_seq_agenda_item  	= nr_seq_ageint_item_w;				
				
				update	agenda_pac_opme
				set	nr_seq_agenda		= nr_seq_agenda_w
				where	nr_seq_item		= nr_seq_ageint_item_w
				and	nr_seq_agenda_int	= nr_seq_ageint_p
				and	nr_seq_Agenda		= nr_seq_Agenda_origem_w;
				
				
			elsif	((cd_tipo_agenda_w 	= 3) or (cd_tipo_agenda_w 	= 5)) then

				/*update	agenda_integrada_item
				set	nr_seq_agenda_cons	= null
				where	nr_sequencia		= nr_seq_ageint_item_w;*/
				
				if (ie_canc_autor_agen_cons_w = 'S') then
					open C04;
					loop
					fetch C04 into
						nr_seq_autor_w;
					EXIT WHEN NOT FOUND; /* apply on C04 */
						begin
						if (nr_seq_autor_w	> 0) then
						select	max(nr_sequencia)
						into STRICT	nr_seq_estagio_w
						from   	estagio_autorizacao
						where  	ie_situacao = 'A'
						and    	ie_interno  = 70
						and		OBTER_EMPRESA_ESTAB(wheb_usuario_pck.get_cd_estabelecimento) = cd_empresa;

						CALL atualizar_autorizacao_convenio(nr_seq_autor_w, nm_usuario_p, nr_seq_estagio_w, 'N', 'N','S');
						end if;
						end;
					end loop;
					close C04;
				end if;
				
				--copiar_transferir_agenda_cons(cd_estabelecimento_w,nr_seq_Agenda_origem_w,nr_seq_Agenda_w,'T',null,null,nm_usuario_p);
				if (ie_encaixe_w	= 'N') then
					ds_retorno_w := ageint_cop_trans_agenda_cons(cd_estabelecimento_w, nr_seq_Agenda_origem_w, nr_seq_Agenda_w, 'T', nr_seq_motivo_p, ds_motivo_p, nm_usuario_p, ds_retorno_w, nr_seq_ageint_p, hr_Agenda_w, cd_medico_marcacao_w);
					
					if (ie_agendamento_coletivo_w = 'S') then
						Update Agendamento_Coletivo
						Set	dt_agenda = (SELECT hr_agenda from ageint_marcacao_usuario where nr_Sequencia IN (SELECT MAX(nr_sequencia) FROM ageint_marcacao_usuario WHERE nr_seq_ageint_item = nr_seq_ageint_item_w) ),
							Hr_Inicio = (Select Hr_Agenda From Ageint_Marcacao_Usuario Where Nr_Sequencia In (Select Max(Nr_Sequencia) From Ageint_Marcacao_Usuario Where Nr_Seq_Ageint_Item = Nr_Seq_Ageint_Item_W) ),     
						    nr_minuto_duracao = (select max(nr_minuto_duracao) from ageint_marcacao_usuario where nr_Sequencia IN (SELECT MAX(nr_sequencia) FROM ageint_marcacao_usuario WHERE nr_seq_ageint_item = nr_seq_ageint_item_w)), 
							Dt_Atualizacao = clock_timestamp(),
							Nm_Usuario = Nm_Usuario_P
						where  nr_seq_agenda_int = nr_seq_ageint_item_w
						and ie_status_agenda = 'T';
					end if;
				else					
					nr_seq_agenda_w := ageint_gerar_enc_agecons_sel(cd_agenda_w, trunc(hr_agenda_w), to_char(hr_agenda_w,'hh24:mi'), nr_minuto_duracao_w, nr_seq_Agenda_origem_w, 'S', null, null, nm_usuario_p, nr_seq_agenda_w);
				end if;

				/*
				  This is to set the Default value of Requesting doctor based on:
				  First preference for Schedule checkbox ie_utiliza_prof_horario = S
				  Second for CTS IE_MEDICO_REQ_COPIA = S
				  Last set value of cd_medico_marcacao_w
				*/
				select	coalesce(coalesce(cd_pessoa_fisica, CASE WHEN cts='S' THEN  cd_medico_req END ), cd_medico_marcacao_w)
				into STRICT	cd_pessoa_fisica_agenda_w
				from (SELECT
					CASE WHEN ie_utiliza_prof_horario='S' THEN  a.cd_pessoa_fisica END  cd_pessoa_fisica,
					b.cd_medico_req, obter_parametro_agenda(coalesce(cd_estabelecimento_w, obter_estabelecimento_ativo), 'IE_MEDICO_REQ_COPIA', 'S') cts
					from	agenda a,
					agenda_consulta b
					where	a.cd_agenda = b.cd_agenda
					and	b.nr_sequencia = nr_seq_Agenda_w
				) alias4;
				
				
				select	count(1)
				into STRICT	qt_reg_w
				from	medico
				where	cd_pessoa_fisica = cd_pessoa_fisica_agenda_w;
				
				if (qt_reg_w	= 0) then
					cd_pessoa_fisica_agenda_w	:= cd_medico_marcacao_w;
				end if;
				
				select	count(1)
				into STRICT	qt_reg_w
				from	medico
				where	cd_pessoa_fisica = cd_pessoa_fisica_agenda_w;
				
				if (qt_reg_w	= 0) then
					cd_pessoa_fisica_agenda_w	:= null;
				end if;
				
				begin
					update	agenda_consulta
					set	nm_usuario_acesso	 = NULL,
						qt_diaria_prev		= qt_diaria_prev_w,
						cd_medico_req		= cd_pessoa_fisica_agenda_w
					where	nr_sequencia		= nr_seq_Agenda_w;
				exception when others then
					null;
				end;
				
				delete	FROM ageint_marcacao_usuario
				where	nr_sequencia	= nr_Seq_marcacao_ant_w;			
				
				select	b.nr_seq_partic_ciclo_item
				into STRICT	nr_seq_partic_ciclo_item_w
				from	agenda_integrada_item a,
						agenda_consulta b
				where	a.nr_seq_agenda_cons = b.nr_sequencia
				and		a.nr_sequencia = nr_seq_ageint_item_w;
				
				update	agenda_integrada_item
				set	nr_seq_agenda_cons	= nr_seq_agenda_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					dt_transferencia	= clock_timestamp()
				where	nr_sequencia		= nr_seq_ageint_item_w;		
				
				update	agenda_integrada_item
				set	dt_prevista_item	= trunc(hr_agenda_w),
					dt_prev_transf_item	 = NULL					
				where	nr_sequencia		= nr_seq_ageint_item_w
				and	(dt_prevista_item IS NOT NULL AND dt_prevista_item::text <> '')
				and	(dt_prev_transf_item IS NOT NULL AND dt_prev_transf_item::text <> '');
				
				update	agenda_pac_sangue
				set	nr_seq_agenda_cons	= nr_seq_agenda_w
				where	nr_seq_item		= nr_seq_ageint_item_w;
				
				update	agenda_pac_desc_material
				set	nr_seq_agenda_cons	= nr_seq_agenda_w
				where	nr_seq_item		= nr_seq_ageint_item_w;
				
				update  agenda_pac_opme
				set     nr_seq_agenda_cons 	= nr_seq_agenda_w
				where	nr_seq_item		= nr_seq_ageint_item_w;
				
				update  agenda_cons_servico
				set 	nr_seq_agenda		= nr_seq_agenda_w
				where	nr_seq_item		= nr_seq_ageint_item_w;
				
				update	agenda_integrada_prof_item
				set	ie_confirmado 		= 'S'
				where	nr_seq_agenda_item  	= nr_seq_ageint_item_w;		
				
				update	ageint_marcacao_usuario
				set	ie_Gerado	= 'S',
					nr_Seq_Agenda	= nr_seq_Agenda_w
				where	nr_sequencia	= nr_sequencia_w;
				
				if (dt_confirmacao_w IS NOT NULL AND dt_confirmacao_w::text <> '') then
					update	agenda_consulta
					set	nr_seq_partic_ciclo_item  = nr_seq_agenda_w,
					nm_usuario_acesso  		  	  = nm_usuario_confirm_w,
					dt_confirmacao    		 	  = dt_confirmacao_w,
					ie_confirmacao_aut 		  	  = ie_confirmacao_aut_w
					where	nr_sequencia		  = nr_seq_agenda_w;			
		    	else
					update	agenda_consulta
					set     nr_seq_partic_ciclo_item  = nr_seq_partic_ciclo_item_w
					where 	nr_sequencia = nr_seq_agenda_w;
				end if;
				
				/*update	agenda_pac_opme
				set	nr_seq_agenda_cons	= nr_seq_agenda_w
				where	nr_seq_item		= nr_seq_ageint_item_w
				and	nr_seq_agenda_int	= nr_seq_ageint_p
				and	nr_seq_Agenda_cons	= nr_seq_Agenda_origem_w;*/
			end if;
		else
			ie_nao_agendado_w	:= 'S';
		end if;
		
		cd_convenio_w	:= cd_convenio_ageint_w;
		cd_categoria_w	:= cd_categoria_ageint_w;
		cd_plano_w	:= cd_plano_ageint_w;

		
		
		open C05;
		loop
		fetch C05 into	
			cd_beneficiario_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
			/*aaschlote 01/04/2011 - OS -301356*/

			select	max(dt_agenda)
			into STRICT	dt_agenda_w
			from	agenda_consulta
			where	nr_sequencia	= nr_seq_agenda_w;
			
			if (coalesce(dt_agenda_w::text, '') = '') then
				dt_agenda_w	:= clock_timestamp();
			end if;	
			
			select	count(*)
			into STRICT	qt_pls_w
			from	pls_proposta_beneficiario	b,
				agenda_integrada		a
			where	a.cd_pessoa_fisica	= b.cd_beneficiario
			and	b.cd_beneficiario	= cd_beneficiario_w;
			
			if (qt_pls_w > 0) then
				select	max(nr_sequencia)
				into STRICT	nr_seq_analise_w
				from	pls_analise_adesao
				where	cd_pessoa_fisica	= cd_beneficiario_w;
				
				if (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then
					update	pls_analise_adesao
					set	dt_atendimento	= dt_agenda_w
					where	nr_sequencia	= nr_seq_analise_w;
				end if;
			end if;
			end;
		end loop;
		close C05;
		
		end;
	end loop;
	close C01;
	/*end;
end loop;
close C02;*/
if (ie_nao_agendado_w	= 'N') then

	select	max(nr_sequencia)
	into STRICT	nr_status_agendado_w
	from	agenda_integrada_status
	where	ie_status_tasy	= 'AG'
	and		ie_situacao = 'A';
	
	update	agenda_integrada
	set	nr_seq_status	= nr_status_agendado_w
	where	nr_sequencia	= nr_seq_ageint_p;
end if;

select	max(cd_pessoa_fisica)
into STRICT	cd_profissional_w
from	usuario
where	nm_usuario	= nm_usuario_p;

if (cd_profissional_w IS NOT NULL AND cd_profissional_w::text <> '') then
	update	agenda_integrada
	set	cd_profissional	= cd_profissional_w,
		nm_usuario_nrec	= nm_usuario_p
	where	nr_sequencia	= nr_seq_ageint_p;
end if;

ie_nao_agendado_p	:= ie_nao_agendado_w;
ds_retorno_p		:= ds_retorno_w;

CALL ageint_excluir_medico_item(nr_seq_ageint_p, nm_usuario_p);

if (ie_agend_serv_cons_w = 'S') and (ie_gerar_controle_sessao_w = 'S') then
	CALL gerar_controle_sessao(nr_seq_ageint_p, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE confirmar_transferencia_ageint ( cd_agenda_p bigint, dt_agenda_p timestamp, nr_seq_ageint_p bigint, nm_usuario_p text, nr_seq_motivo_p bigint, ds_motivo_p text, ie_nao_agendado_p INOUT text, ds_retorno_p INOUT text) FROM PUBLIC;

