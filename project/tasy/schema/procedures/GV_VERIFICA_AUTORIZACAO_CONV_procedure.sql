-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gv_verifica_autorizacao_conv ( cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_plano_convenio_p text, cd_categoria_p text, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, ie_sexo_p text, nr_sequencia_p bigint, ie_autorizacao_p INOUT text, ie_regra_p INOUT bigint) AS $body$
DECLARE

 
ds_erro_w		varchar(255);
ie_regra_w		integer;
nr_seq_regra_w		bigint;
ie_glosa_w		varchar(1);
cd_edicao_ajuste_w   bigint;
cd_proc_adic_w		bigint;
ie_origem_proc_adic_w	bigint;
nr_seq_proc_adic_w	bigint;	
nr_sequencia_w		bigint;	
cd_estabelecimento_w	smallint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_seq_proc_interno_w  bigint;
ie_autorizacao_w	varchar(1);
ie_resp_autor_w		varchar(10);
vl_procedimento_w	double precision;
ie_tipo_convenio_w	smallint;
ie_edicao_w       varchar(1);
ie_pacote_w		varchar(1);
qt_item_edicao_w    bigint;
cd_convenio_partic_w  integer;
cd_categoria_partic_w  varchar(10);
ds_regra_w		varchar(30);			
			 

BEGIN 
 
 
SELECT * FROM gv_consiste_plano_conv( 
    			null, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, clock_timestamp(), 1, 7, cd_plano_convenio_p, null, ds_erro_w, 0, null, ie_regra_w, null, nr_seq_regra_w, nr_seq_proc_interno_p, cd_categoria_p, cd_estabelecimento_p, null, ie_sexo_p, ie_glosa_w, cd_edicao_ajuste_w, null) INTO STRICT ds_erro_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, cd_edicao_ajuste_w;
			 
	 
select	max(ie_tipo_convenio) 
into STRICT	ie_tipo_convenio_w 
from	convenio 
where	cd_convenio	= cd_convenio_p;
	 
ie_edicao_w	:= gv_obter_se_proc_conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, clock_timestamp(), cd_procedimento_p, ie_origem_proced_p,nr_seq_proc_interno_p,0);
		 
ie_pacote_w	:= obter_Se_pacote_convenio(cd_procedimento_p, ie_origem_proced_p, cd_convenio_p, cd_estabelecimento_p);
	 
if (ie_edicao_w 			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	= 0) and (ie_pacote_w			= 'N') then 
	ie_glosa_w    := 'T';
end if;
		  
if (ie_edicao_w 			= 'N') and (coalesce(cd_edicao_ajuste_w,0) 	> 0) and (ie_pacote_w			= 'N') then 
			 
	select  count(*) 
	into STRICT   qt_item_edicao_w 
	from   preco_amb 
	where  cd_edicao_amb = cd_edicao_ajuste_w 
	and   cd_procedimento = cd_procedimento_p 
	and   ie_origem_proced = ie_origem_proced_p;
			    
	if (qt_item_edicao_w = 0) then 
		ie_glosa_w :=  'G';
	end if;
					    
end if;
	 
ie_autorizacao_p	:= 'L';
 
 
if (ie_Regra_w in (1,2,5)) or (ie_Regra_w = 8) then 
	 
	ie_autorizacao_p	:= 'B';
	 
	 
elsif (ie_Regra_w in (3,6,7)) then 
 
	select 	coalesce(max(ie_resp_autor),'H') 
	into STRICT	ie_resp_autor_w 
	from 	regra_convenio_plano 
	where 	nr_sequencia = nr_seq_regra_w;
	 
	if (ie_resp_autor_w	= 'H') then 
		ie_autorizacao_p	:= 'PAH';
	 
	elsif (ie_resp_autor_w	= 'P') then 
		ie_autorizacao_p	:= 'PAP';
	end if;
end if;
							 
if (ie_glosa_w in ('G','T','D','F')) then 
 
	ie_autorizacao_p	:= 'B';
	 
end if;
		 
 
if	((coalesce(ie_Regra_w,0) not in (1,2,5)) or (coalesce(ie_glosa_w,'') not in ('T','E','R','B','H','Z',''))) and (ie_tipo_convenio_w <> 1) then 
	vl_procedimento_w	:= 0;
 
end if;
 
ie_regra_p := ie_regra_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gv_verifica_autorizacao_conv ( cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_plano_convenio_p text, cd_categoria_p text, nr_seq_proc_interno_p bigint, cd_estabelecimento_p bigint, ie_sexo_p text, nr_sequencia_p bigint, ie_autorizacao_p INOUT text, ie_regra_p INOUT bigint) FROM PUBLIC;

