-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_os_acao_exec_teste ( nr_seq_acao_p bigint, nr_seq_resultado_p bigint, nm_usuario_p text, nr_seq_ordem_serv_p INOUT bigint) AS $body$
DECLARE


nr_sequencia_w			bigint;
ds_dano_breve_w			varchar(255);
ds_dano_w			varchar(4000);
ie_prioridade_w			varchar(15);
ie_tipo_ordem_w			integer;
nr_seq_tipo_ordem_w		bigint;
nr_seq_localizacao_w		bigint;
nr_seq_equipamento_w		bigint;
nr_seq_estagio_w		bigint;
cd_responsavel_w		varchar(10);
cd_versao_w			varchar(20);
ds_seq_apres_w			varchar(255);
ds_caso_teste_w			varchar(255);
ds_item_w			varchar(255);
ds_acao_w			varchar(2000);
ds_result_esperado_w		varchar(2000);
ds_resultado_alc_w		varchar(255);
ds_impacto_result_w		varchar(255);
ds_historico_result_w		varchar(2000);
ds_perfil_w			varchar(40);
nr_seq_prev_versao_w		bigint;
nr_seq_aplicacao_w		bigint;
nr_seq_proj_gpi_w		bigint;
nr_seq_etapa_gpi_w		bigint;
ie_classificacao_w		varchar(1);
ie_gerar_os_w			varchar(1) := 'S';
nr_seq_grupo_trab_w		bigint;
nr_seq_grupo_planej_w		bigint;
dt_conclusao_desejada_w		timestamp;
ie_origem_os_w	        	varchar(15);
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type := wheb_usuario_pck.get_cd_estabelecimento;

C01 CURSOR FOR
	SELECT	ie_classificacao,
		ie_prioridade,
		ie_tipo_ordem,
		nr_seq_tipo_ordem,
		nr_seq_localizacao,
		nr_seq_equipamento,
		nr_seq_estagio
	from	teste_soft_regra_gera_os
	where	trunc(clock_timestamp()) between trunc(coalesce(dt_inicio_vigencia,clock_timestamp())) and trunc(coalesce(dt_fim_vigencia,clock_timestamp()))
	and	coalesce(nr_seq_aplicacao,coalesce(nr_seq_aplicacao_w,0)) = coalesce(nr_seq_aplicacao_w,0)
	order by nr_seq_aplicacao desc, dt_inicio_vigencia desc, dt_fim_vigencia desc, nr_sequencia;


BEGIN
if (coalesce(nr_seq_acao_p,0) <> 0) and (coalesce(nr_seq_resultado_p,0) <> 0) then
	begin

	begin
	select	e.cd_responsavel,
		b.cd_versao,
		substr(coalesce(obter_desc_seq_acao_exec_teste(a.nr_sequencia),a.nr_seq_apres),1,40) ds_seq_apres,
		e.ds_caso_teste,
		d.ds_item,
		a.ds_acao,
		a.ds_result_esperado,
		CASE WHEN c.ie_resultado='N' THEN 'Não conforme' WHEN c.ie_resultado='P' THEN 'Parcialmente conforme' WHEN c.ie_resultado='C' THEN 'Conforme' END  ds_resultado_alc,
		CASE WHEN c.ie_impacto='N' THEN 'Não impeditivo' WHEN c.ie_impacto='I' THEN 'Impeditivo' END  ds_impacto_result,
		c.ds_historico,
		substr(obter_desc_perfil(a.cd_perfil),1,40) ds_perfil,
		b.nr_seq_prev_versao,
		f.nr_seq_proj_gpi,
		f.nr_seq_etapa_gpi
	into STRICT	cd_responsavel_w,
		cd_versao_w,
		ds_seq_apres_w,
		ds_caso_teste_w,
		ds_item_w,
		ds_acao_w,
		ds_result_esperado_w,
		ds_resultado_alc_w,
		ds_impacto_result_w,
		ds_historico_result_w,
		ds_perfil_w,
		nr_seq_prev_versao_w,
		nr_seq_proj_gpi_w,
		nr_seq_etapa_gpi_w
	from	man_ordem_servico f,
		teste_caso_teste e,
		teste_caso_teste_item d,
		teste_soft_exec_acao_res c,
		teste_software_execucao b,
		teste_soft_exec_acao a
	where	b.nr_sequencia = a.nr_seq_teste_software
	and	a.nr_sequencia = c.nr_seq_acao_exec
	and	d.nr_sequencia = a.nr_seq_item
	and	e.nr_sequencia = d.nr_seq_caso_teste
	and	f.nr_sequencia = e.nr_seq_ordem_servico
	and	coalesce(b.ie_tipo_teste,'P') = 'P'
	and	(b.nr_seq_proj_gpi IS NOT NULL AND b.nr_seq_proj_gpi::text <> '')
	and	c.nr_sequencia = nr_seq_resultado_p
	and	a.nr_sequencia = nr_seq_acao_p;
	exception
	when others then
		ie_gerar_os_w := 'N';
	end;

	if (coalesce(ie_gerar_os_w,'N') = 'N') then
		begin
		ie_gerar_os_w := 'S';

		select	e.cd_responsavel,
			b.cd_versao,
			substr(coalesce(obter_desc_seq_acao_exec_teste(a.nr_sequencia),a.nr_seq_apres),1,40) ds_seq_apres,
			e.ds_caso_teste,
			d.ds_item,
			a.ds_acao,
			a.ds_result_esperado,
			CASE WHEN c.ie_resultado='N' THEN 'Não conforme' WHEN c.ie_resultado='P' THEN 'Parcialmente conforme' WHEN c.ie_resultado='C' THEN 'Conforme' END  ds_resultado_alc,
			CASE WHEN c.ie_impacto='N' THEN 'Não impeditivo' WHEN c.ie_impacto='I' THEN 'Impeditivo' END  ds_impacto_result,
			c.ds_historico,
			substr(obter_desc_perfil(a.cd_perfil),1,40) ds_perfil,
			b.nr_seq_prev_versao
		into STRICT	cd_responsavel_w,
			cd_versao_w,
			ds_seq_apres_w,
			ds_caso_teste_w,
			ds_item_w,
			ds_acao_w,
			ds_result_esperado_w,
			ds_resultado_alc_w,
			ds_impacto_result_w,
			ds_historico_result_w,
			ds_perfil_w,
			nr_seq_prev_versao_w
		from	teste_caso_teste e,
			teste_caso_teste_item d,
			teste_soft_exec_acao_res c,
			teste_software_execucao b,
			teste_soft_exec_acao a
		where	b.nr_sequencia = a.nr_seq_teste_software
		and	a.nr_sequencia = c.nr_seq_acao_exec
		and	d.nr_sequencia = a.nr_seq_item
		and	e.nr_sequencia = d.nr_seq_caso_teste
		and	coalesce(b.ie_tipo_teste,'P') <> 'P'
		and	c.nr_sequencia = nr_seq_resultado_p
		and	a.nr_sequencia = nr_seq_acao_p;
		exception
		when others then
			ie_gerar_os_w := 'N';
		end;
	end if;

	if (coalesce(ie_gerar_os_w,'N') = 'S') then
		begin
		select	max(nr_seq_aplicacao)
		into STRICT	nr_seq_aplicacao_w
		from	atualizacao_tasy
		where	nr_sequencia = coalesce(nr_seq_prev_versao_w,0);

		open C01;
		loop
		fetch C01 into
			ie_classificacao_w,
			ie_prioridade_w,
			ie_tipo_ordem_w,
			nr_seq_tipo_ordem_w,
			nr_seq_localizacao_w,
			nr_seq_equipamento_w,
			nr_seq_estagio_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		end loop;
		close C01;

		if (coalesce(nr_seq_equipamento_w,0) <> 0) then
			select	coalesce(nr_seq_localizacao_w, nr_seq_local),
				nr_seq_trab,
				nr_seq_planej
			into STRICT	nr_seq_localizacao_w,
				nr_seq_grupo_trab_w,
				nr_seq_grupo_planej_w
			from	man_equipamento
			where	nr_sequencia = nr_seq_equipamento_w;
		end if;

		select	man_obter_dt_prioridade(nr_seq_equipamento_w, coalesce(ie_prioridade_w,'M'), clock_timestamp(), clock_timestamp(), nr_seq_grupo_trab_w,
						nr_seq_grupo_planej_w)
		into STRICT	dt_conclusao_desejada_w
		;

		ds_dano_breve_w		:= substr('Testes Versão: ' || cd_versao_w || ' - ',1,255);
		ds_dano_w		:= substr(
						'Sequência de Apresentação Geral: '	|| ds_seq_apres_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Caso de Teste: ' 			|| ds_caso_teste_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Item: ' 				|| ds_item_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Ação: '				|| ds_acao_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Resultado Esperado: '			|| ds_result_esperado_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Resultado Alcançado: '			|| ds_resultado_alc_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Impacto: '				|| ds_impacto_result_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Erro: '				|| ds_historico_result_w || chr(13) || chr(10) || chr(13) || chr(10) ||
						'Perfil: '				|| ds_perfil_w || chr(13) || chr(10) || chr(13) || chr(10),1,4000);

		select	nextval('man_ordem_servico_seq')
		into STRICT	nr_sequencia_w
		;

		ie_origem_os_w := obter_param_usuario(4001, 29, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_origem_os_w);

		insert	into man_ordem_servico(
			cd_pessoa_solicitante,
			nr_seq_localizacao,
			nr_seq_equipamento,
			ds_dano_breve,
			ds_dano,
			dt_atualizacao,
			dt_ordem_servico,
			ie_classificacao,
			ie_origem_os,
			ie_parado,
			ie_prioridade,
			ie_status_ordem,
			ie_tipo_ordem,
			nr_seq_tipo_ordem,
			nm_usuario,
			nr_sequencia,
			nr_seq_estagio,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_inicio_desejado,
			nr_seq_proj_gpi,
			nr_seq_etapa_gpi,
			nr_grupo_trabalho,
			nr_grupo_planej,
			dt_conclusao_desejada,
			nr_seq_aplicacao_soft)
		values (	cd_responsavel_w,
			nr_seq_localizacao_w,
			nr_seq_equipamento_w,
			ds_dano_breve_w,
			ds_dano_w,
			clock_timestamp(),
			clock_timestamp(),
			coalesce(ie_classificacao_w,'E'),
			coalesce(ie_origem_os_w,'1'),
			'N',
			coalesce(ie_prioridade_w,'M'),
			'1',
			coalesce(ie_tipo_ordem_w,1),
			nr_seq_tipo_ordem_w,
			nm_usuario_p,
			nr_sequencia_w,
			nr_seq_estagio_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_proj_gpi_w,
			nr_seq_etapa_gpi_w,
			nr_seq_grupo_trab_w,
			nr_seq_grupo_planej_w,
			dt_conclusao_desejada_w,
			nr_seq_aplicacao_w);

		update	teste_soft_exec_acao_res
		set	nr_seq_ordem_servico	= nr_sequencia_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_resultado_p;

		nr_seq_ordem_serv_p := nr_sequencia_w;

		commit;
		end;
	end if;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_os_acao_exec_teste ( nr_seq_acao_p bigint, nr_seq_resultado_p bigint, nm_usuario_p text, nr_seq_ordem_serv_p INOUT bigint) FROM PUBLIC;

