-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ehr_gerar_tabela_cluster ( nr_seq_template_p bigint, nr_sequencia_p bigint, nm_tabela_p INOUT text, ds_insert_p INOUT text, ds_update_p INOUT text, ds_delete_p INOUT text, ds_sql_p INOUT text) AS $body$
DECLARE

qt_reg_w	smallint;
ds_script_w	varchar(32000);
ds_openehr_w	varchar(50);
nr_sequencia_w	bigint;
nm_coluna_w	varchar(30);
c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		substr(obter_desc_tipo_openehr(b.nr_seq_tipo_dado),1,20)
	from	ehr_template_conteudo a,
		ehr_elemento b
	where	b.nr_sequencia		= a.nr_seq_elemento
	and	a.nr_seq_template	= nr_seq_template_p
	order by nr_seq_grid;

BEGIN
nm_tabela_p	:= 'EHR_CLUSTER_' || to_char(nr_seq_template_p);
select	count(*)
into STRICT	qt_reg_w
from	user_tables
where	table_name = nm_tabela_p;
if (qt_reg_w = 0) then
	open C01;
		loop
		fetch C01 into
			nr_sequencia_w,
			ds_openehr_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			if (ds_openehr_w = 'DV_BOOLEAN') then
				nm_coluna_w	:= 'DS_' || to_char(nr_sequencia_w);
				ds_script_w	:= ds_script_w || nm_coluna_w || ' VARCHAR2(1),';
			elsif (ds_openehr_w = 'DV_TEXT') or (ds_openehr_w = 'DV_CODED_TEXT') then				
				nm_coluna_w	:= 'DS_' || to_char(nr_sequencia_w);
				ds_script_w	:= ds_script_w || nm_coluna_w || ' VARCHAR2(4000),';
			elsif (ds_openehr_w = 'DV_COUNT') or (ds_openehr_w = 'DV_QUANTITY') then
				nm_coluna_w	:= 'VL_' || to_char(nr_sequencia_w);
				ds_script_w	:= ds_script_w || nm_coluna_w || ' NUMBER(10,2),';
			elsif (ds_openehr_w = 'DV_DATE') or (ds_openehr_w = 'DV_TIME') or (ds_openehr_w = 'DV_DATE_TIME') then
				nm_coluna_w	:= 'DT_' || to_char(nr_sequencia_w);
				ds_script_w	:= ds_script_w || nm_coluna_w || ' DATE,';
			end	if;
			end;
		end loop;
	close C01;
	ds_script_w	:= 	' create table ' || nm_tabela_p || ' (NR_SEQ_TEMPLATE NUMBER(10) NOT NULL, ' ||
					' NR_SEQ_REG_TEMPLATE NUMBER(10) NOT NULL, ' ||
					' NR_REGISTRO_CLUSTER NUMBER(10) NOT NULL, ' ||
					substr(ds_script_w,1,length(ds_script_w)-1) || ')';
	CALL exec_sql_dinamico('EHR_CLUSTER', ds_script_w);
end	if;
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ehr_gerar_tabela_cluster ( nr_seq_template_p bigint, nr_sequencia_p bigint, nm_tabela_p INOUT text, ds_insert_p INOUT text, ds_update_p INOUT text, ds_delete_p INOUT text, ds_sql_p INOUT text) FROM PUBLIC;

