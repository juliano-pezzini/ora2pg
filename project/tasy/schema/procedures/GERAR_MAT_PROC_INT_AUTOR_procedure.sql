-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_mat_proc_int_autor (nr_sequencia_autor_p bigint, nr_seq_autorizacao_p bigint, nr_seq_proc_interno_p bigint, nr_atendimento_p bigint, cd_convenio_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
cd_material_w		material.cd_material%type;
cd_material_inv_w	material.cd_material%type;
qt_material_w		proc_interno_opme.qt_material%type;
ds_material_inv_w	material.ds_material%type;
cd_cgc_w		proc_interno_opme.cd_cgc%type;
ds_obs_w		proc_interno_opme.ds_observacao%type;
nr_seq_mat_autor_w	material_autorizado.nr_sequencia%type;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type := Wheb_usuario_pck.get_cd_estabelecimento;
ie_valor_conta_w	varchar(1) := 'N';
ie_validade_anvisa_w	varchar(1);
ie_obter_preco_convenio_w	varchar(2);
ds_retorno_w		varchar(255);
ie_tipo_convenio_w 	smallint;

C01 CURSOR FOR

	SELECT	a.cd_material,
		a.qt_material,
		a.cd_cgc,
		a.ds_observacao		
	from	proc_interno_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and	coalesce(a.cd_convenio,coalesce(cd_convenio_p,0))		= coalesce(cd_convenio_p,0)
	and	((ie_validade_anvisa_w = 'N') or (obter_se_validade_anvisa(a.cd_material,null,cd_estabelecimento_w) = 'S'))
	and not exists (	SELECT	1
			from	material_autorizado x
			where	x.cd_material		=	a.cd_material
			and	x.nr_sequencia_autor	=	nr_sequencia_autor_p)
      			and (coalesce(a.ie_tipo_convenio::text, '') = '' or a.ie_tipo_convenio = ie_tipo_convenio_w);

C02 CURSOR FOR

	SELECT	a.cd_material
	from	proc_interno_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_interno_p
	and	coalesce(a.cd_convenio,coalesce(cd_convenio_p,0))		= coalesce(cd_convenio_p,0)
	and	obter_se_validade_anvisa(a.cd_material,null,cd_estabelecimento_w) = 'N'
	and not exists (	SELECT	1
			from	material_autorizado x
			where	x.cd_material		=	a.cd_material
			and	x.nr_sequencia_autor	=	nr_sequencia_autor_p)
      			and (coalesce(a.ie_tipo_convenio::text, '') = '' or a.ie_tipo_convenio = ie_tipo_convenio_w);


BEGIN
ie_validade_anvisa_w := obter_param_usuario(3004, 235, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_validade_anvisa_w);
ie_obter_preco_convenio_w := Obter_Param_Usuario(3004, 32, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_obter_preco_convenio_w);
ie_tipo_convenio_w := Obter_Tipo_Convenio(cd_convenio_p);

delete from	w_item_autor_convenio
where	nm_usuario = nm_usuario_p;
commit;

select	coalesce(max(ie_vl_conta_autor),'N')
into STRICT	ie_valor_conta_w
from	convenio_estabelecimento
where	cd_estabelecimento = cd_estabelecimento_w
and	cd_convenio 	   = cd_convenio_p;

open C01;
loop
fetch C01 into	
	cd_material_w,
	qt_material_w,
	cd_cgc_w,
	ds_obs_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	nextval('material_autorizado_seq')
	into STRICT	nr_seq_mat_autor_w
	;
	
	insert	into material_autorizado(nr_atendimento,
		nr_seq_autorizacao,
		cd_material,
		qt_solicitada,
		qt_autorizada,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_sequencia_autor,
		nr_sequencia,
		nr_prescricao,
		nr_seq_prescricao,
		ds_observacao,
		nr_seq_fabricante,
		ie_valor_conta,
		cd_cgc_fabricante,
		nr_orcamento,
		vl_cotado,
		nr_seq_regra_plano,
		nr_seq_opme,
		pr_adicional,
		ie_reducao_acrescimo,
		vl_unitario)
	values (nr_atendimento_p,
		nr_seq_autorizacao_p,
		cd_material_w,
		qt_material_w,
		0,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_sequencia_autor_p,
		nr_seq_mat_autor_w,
		null,
		null,
		substr(CASE WHEN coalesce(ds_obs_w::text, '') = '' THEN ds_obs_w  ELSE ds_obs_w || chr(13) || chr(10) END  || WHEB_MENSAGEM_PCK.get_texto(295434,'NR_SEQ_PROC_INT='|| nr_seq_proc_interno_p),1,2000),
		null,
		ie_valor_conta_w,
		cd_cgc_w,
		null,
		null,
		null,
		null,
		null,
		null,
		0);
		
		if (coalesce(ie_obter_preco_convenio_w,'N') = 'C') then
				ds_retorno_w := Atualizar_Preco_Mat_Aut_Conv(null, nr_seq_mat_autor_w, cd_estabelecimento_w, nm_usuario_p, ds_retorno_w);
		end if;
	end;	
end loop;
close C01;

open C02;
loop
fetch C02 into	
	cd_material_inv_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	select	obter_desc_material(cd_material_inv_w)
	into STRICT	ds_material_inv_w
	;
		
	insert into w_item_autor_convenio(
		cd_item,
		ds_ITEM,
		nm_usuario
	)values (
		cd_material_inv_w,
		ds_material_inv_w,
		nm_usuario_p);
		
	end;
end loop;
close C02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_mat_proc_int_autor (nr_sequencia_autor_p bigint, nr_seq_autorizacao_p bigint, nr_seq_proc_interno_p bigint, nr_atendimento_p bigint, cd_convenio_p bigint, nm_usuario_p text) FROM PUBLIC;

