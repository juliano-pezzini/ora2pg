-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_alterar_seq_proced (nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


cont_w			bigint;
nr_sequencia_w		bigint;
cd_procedimento_w	prescr_procedimento.cd_procedimento%type;
ie_origem_proced_w	bigint;
cd_grupo_proc_w		bigint;
cd_especialidade_w	bigint;
cd_area_procedimento_w	bigint;
nr_valor_seq_w		bigint;
nr_seq_seq_intev_w	bigint;
nr_seq_proc_interno_w	bigint;
nr_seq_regra_w		bigint;
ie_regra_sequencia_w	varchar(10);

c01 CURSOR FOR
SELECT	nr_sequencia,
	cd_procedimento,
	ie_origem_proced,
	nr_seq_proc_interno
from	prescr_procedimento
where	nr_prescricao	= nr_prescricao_p;


BEGIN

select	count(*)
into STRICT	cont_w
from	rep_regra_sequencia;

if (cont_w > 0) then

	open C01;
	loop
	fetch C01 into
		nr_sequencia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		select	max(cd_grupo_proc),
			max(cd_especialidade),
			max(cd_area_procedimento)
		into STRICT	cd_grupo_proc_w,
			cd_especialidade_w,
			cd_area_procedimento_w
		from	estrutura_procedimento_v
		where	cd_procedimento	= cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;

		select	max(ie_regra_sequencia),
			max(nr_sequencia)
		into STRICT	ie_regra_sequencia_w,
			nr_seq_regra_w
		from	rep_regra_sequencia
		where	((coalesce(nr_seq_proc_interno::text, '') = '') or (nr_seq_proc_interno = nr_seq_proc_interno_w))
		and	((coalesce(cd_procedimento::text, '') = '') or (cd_procedimento = cd_procedimento_w))
		and	((coalesce(cd_area_procedimento::text, '') = '') or (cd_area_procedimento = cd_area_procedimento_w))
		and	((coalesce(cd_grupo_proc::text, '') = '') or (cd_grupo_proc = cd_grupo_proc_w))
		and	((coalesce(cd_especialidade::text, '') = '') or (cd_especialidade = cd_especialidade_w));

		if (ie_regra_sequencia_w = 'M') then

			select	coalesce(max(nr_valor_seq),0) + 1
			into STRICT	nr_valor_seq_w
			from	rep_regra_seq_interv
			where	nr_seq_regra	= nr_seq_regra_w
			and	PKG_DATE_UTILS.START_OF(dt_sequencia,'month') = PKG_DATE_UTILS.START_OF(clock_timestamp(),'month');

			update	prescr_procedimento b
			set	nr_seq_proced 	= nr_valor_seq_w
			where 	nr_prescricao 	= nr_prescricao_p
			and	nr_sequencia 	= nr_sequencia_w;

			select	nextval('rep_regra_seq_interv_seq')
			into STRICT	nr_seq_seq_intev_w
			;

			insert into rep_regra_seq_interv(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_regra,
				dt_sequencia,
				nr_valor_seq)
			values (nr_seq_seq_intev_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_regra_w,
				clock_timestamp(),
				nr_valor_seq_w);
		end if;

	/*select	nvl(max(ie_gerar_sequencia),'N')
	into	ie_gerar_sequencia_w
	from	lab_parametro;*/
	end loop;
	close C01;

end if;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_alterar_seq_proced (nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

