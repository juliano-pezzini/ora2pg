-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE assumir_paciente ( nr_atendimento_p bigint, cd_medico_p text, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w		bigint;
dt_chamada_paciente_w		timestamp;
dt_atend_medico_w		timestamp;
ie_permite_w			varchar(1);
ie_med_conveniado_w		varchar(1);
cd_convenio_w			bigint;
cd_categoria_w			bigint;
cd_setor_atendimento_w		bigint;
cd_plano_w			bigint;
ie_tipo_atendimento_w		smallint;
cd_especialidade_w		varchar(50);
ie_permite_assumir_lib_w	varchar(2);
dt_lib_medico_w			timestamp;


BEGIN 
 
select	nr_atendimento, 
	dt_chamada_paciente, 
	dt_atend_medico, 
	ie_tipo_atendimento, 
	dt_lib_medico 
into STRICT	nr_atendimento_w, 
	dt_chamada_paciente_w, 
	dt_atend_medico_w, 
	ie_tipo_atendimento_w, 
	dt_lib_medico_w 
from	atendimento_paciente 
where	nr_atendimento		= nr_atendimento_p;
 
 
 
if (ie_opcao_p = 'MA') and (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '') then 
	begin 
	 
	update	ATEND_PROFISSIONAL 
	set	IE_MEDICO_AUXILIAR_PA = 'N' 
	where	nr_atendimento = nr_atendimento_p 
	and	IE_MEDICO_AUXILIAR_PA = 'S';
	 
	 
	insert into ATEND_PROFISSIONAL(NR_SEQUENCIA, 
					DT_ATUALIZACAO, 
					NM_USUARIO, 
					DT_ATUALIZACAO_NREC, 
					NM_USUARIO_NREC, 
					NR_ATENDIMENTO, 
					CD_PESSOA_FISICA, 
					IE_PROFISSIONAL, 
					DT_INICIO_VIGENCIA, 
					DS_OBSERVACAO, 
					DT_ULT_CONTATO, 
					IE_MEDICO_AUXILIAR_PA) 
	values (	nextval('atend_profissional_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_atendimento_p, 
		cd_medico_p, 
		'M', 
		clock_timestamp(), 
		null, 
		null, 
		'S');
 
	end;
elsif (cd_medico_p IS NOT NULL AND cd_medico_p::text <> '')then 
	begin 
	 
	ie_permite_w := obter_param_usuario(935, 196, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_permite_w);
	ie_permite_assumir_lib_w := obter_param_usuario(935, 221, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_permite_assumir_lib_w);
 
	if (ie_permite_w	= 'N') then 
	 
		select	max(cd_convenio), 
			max(cd_categoria), 
			max(substr(obter_setor_atendimento(nr_atendimento),1,255)), 
			max(cd_plano_convenio) 
		into STRICT	cd_convenio_w, 
			cd_categoria_w, 
			cd_setor_atendimento_w, 
			cd_plano_w 
		from	atend_categoria_convenio c 
		where	c.nr_atendimento = nr_atendimento_p 
		and (c.nr_seq_interno = obter_atecaco_atendimento(c.nr_atendimento));
 
		cd_especialidade_w	:= obter_especialidade_medico(cd_medico_p,'');
 
		ie_med_conveniado_w	:= 	substr(obter_se_medico_conveniado(	 
							obter_estabelecimento_ativo, 
							cd_medico_p, 
							cd_convenio_w, 
							'0', 
							cd_especialidade_w, 
							cd_categoria_w, 
							cd_setor_atendimento_w, 
							cd_plano_w, 
							clock_timestamp(), 
							ie_tipo_atendimento_w, 
							'', 
							''),1,50);
							 
		if (ie_med_conveniado_w	= 'N') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(210666);
		end if;
	end if;
	 
	if (ie_permite_assumir_lib_w = 'N') and (coalesce(dt_lib_medico_w,clock_timestamp()) < clock_timestamp())then		 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(270437);	
	end if;
	 
	 
	update	atendimento_paciente 
	set	cd_medico_resp 		= cd_medico_p, 
		nm_usuario   		= nm_usuario_p, 
		dt_atualizacao 		= clock_timestamp() 
	where	nr_atendimento		= nr_atendimento_p;
	end;
end if;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE assumir_paciente ( nr_atendimento_p bigint, cd_medico_p text, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

