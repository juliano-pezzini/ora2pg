-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_gerar_crio ( nr_seq_pf_p bigint, qt_crio_p bigint, nr_seq_pn_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_doacao_w		bigint;
qt_produzida_w		smallint;
nr_seq_crio_w		bigint;
qt_dias_validade_w	smallint;
cd_pf_realizou_w	varchar(10);
nr_sangue_w		varchar(20);
nr_sec_saude_w		varchar(20);
ie_crio_w		smallint;


BEGIN

select	nr_seq_doacao,
	nr_sangue,
	nr_sec_saude,
	coalesce(a.qt_volume,0)
into STRICT	nr_seq_doacao_w,
	nr_sangue_w,
	nr_sec_saude_w,
	qt_produzida_w
from	san_derivado b,
	san_producao a
where a.nr_seq_derivado		= b.nr_sequencia
  and b.ie_tipo_derivado	= 'PF'
  and a.nr_sequencia		= nr_seq_pf_p
  and coalesce(a.cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;

select	cd_pessoa_fisica
into STRICT	cd_pf_realizou_w
from usuario
where nm_usuario = nm_usuario_p;

if (qt_produzida_w = 0) then
	--Hemocomponente selecionado não é Plasma Fresco !');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261409);
end if;

if (coalesce(qt_crio_p,0) > qt_produzida_w) then
	--Quantidade de CRIO superior a quantidade produzida !');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261410);
end if;

select	count(*)
into STRICT	ie_crio_w
from 	san_producao
where	nr_seq_prod_origem = nr_seq_pf_p;

if (ie_crio_w > 0) then
	--O Plasma Fresco selecionado já foi criopricipitado !');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261411);
end if;

select	coalesce(min(nr_sequencia),0),
	coalesce(min(qt_dias_validade),0)
into STRICT	nr_seq_crio_w,
	qt_dias_validade_w
from san_derivado
where ie_situacao = 'A'
  and ie_tipo_derivado = 'CRI'
  and coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;

if (nr_seq_crio_w = 0) then
	--Não existe nenhum hemocomponente CRIO !');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(261412);
end if;

insert into san_producao(NR_SEQUENCIA,NR_SEQ_DERIVADO,DT_PRODUCAO,
			CD_PF_REALIZOU,DT_ATUALIZACAO,NM_USUARIO,
			DT_VENCIMENTO,NR_SANGUE,NR_SEQ_DOACAO,
			QT_VOLUME, NR_SEC_SAUDE, IE_IRRADIADO,
			IE_LAVADO, IE_FILTRADO, IE_ALIQUOTADO, IE_AFERESE,
			NR_SEQ_PROD_ORIGEM, cd_estabelecimento)
values (nextval('san_producao_seq'), nr_seq_crio_w, clock_timestamp(),
	cd_pf_realizou_w, clock_timestamp(), nm_usuario_p,
	clock_timestamp() + qt_dias_validade_w, nr_sangue_w, nr_seq_doacao_w,
	qt_crio_p, nr_sec_saude_w, 'N',
	'N', 'N', 'N', 'N',
	nr_seq_pf_p, wheb_usuario_pck.get_cd_estabelecimento);

select	coalesce(min(qt_dias_validade),0)
into STRICT	qt_dias_validade_w
from san_derivado
where nr_sequencia = nr_seq_pn_p
and	coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento;

insert into san_producao(NR_SEQUENCIA,NR_SEQ_DERIVADO,DT_PRODUCAO,
			CD_PF_REALIZOU,DT_ATUALIZACAO,NM_USUARIO,
			DT_VENCIMENTO,NR_SANGUE,NR_SEQ_DOACAO,
			QT_VOLUME, NR_SEC_SAUDE, IE_IRRADIADO,
			IE_LAVADO, IE_FILTRADO, IE_ALIQUOTADO, IE_AFERESE,
			NR_SEQ_PROD_ORIGEM, cd_estabelecimento)
values (nextval('san_producao_seq'), nr_seq_pn_p, clock_timestamp(),
	cd_pf_realizou_w, clock_timestamp(), nm_usuario_p,
	clock_timestamp() + qt_dias_validade_w, nr_sangue_w, nr_seq_doacao_w,
	qt_produzida_w - qt_crio_p, nr_sec_saude_w, 'N',
	'N', 'N', 'N', 'N',
	nr_seq_pf_p, wheb_usuario_pck.get_cd_estabelecimento);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_gerar_crio ( nr_seq_pf_p bigint, qt_crio_p bigint, nr_seq_pn_p bigint, nm_usuario_p text) FROM PUBLIC;

