-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE separar_lp_item ( nr_lote_producao_p bigint, nr_seq_lote_fornec_p bigint, cd_material_p bigint, qt_material_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint) AS $body$
DECLARE


cd_unidade_medida_consumo_w	varchar(30);
cd_local_estoque_w		smallint;
ie_baixa_estoque_w		varchar(15);
cd_material_w			integer;
dt_validade_w			timestamp;
ie_regra_saldo_consig_w		parametro_estoque.ie_regra_saldo_consig%type;
ie_consignado_w			material.ie_consignado%type;
cd_cgc_fornecedor_w		material_lote_fornec.cd_cgc_fornec%type;
qt_movimento_w			double precision;
ie_estoque_lote_w		material_estab.ie_estoque_lote%type;
				

BEGIN

ie_baixa_estoque_w := obter_param_usuario(9044, 8, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_baixa_estoque_w);

if (cd_material_p > 0) then
	
	select	max(cd_material),
		max(dt_validade)
	into STRICT	cd_material_w,
		dt_validade_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_fornec_p;
	
	if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') and (dt_validade_w IS NOT NULL AND dt_validade_w::text <> '') then
		update	lote_producao_comp
		set	dt_validade		=	dt_validade_w
		where	cd_material		=	cd_material_w
		and	nr_lote_producao	=	nr_lote_producao_p
		and	coalesce(dt_validade::text, '') = '';
	end if;
	
	select	cd_local_estoque
	into STRICT	cd_local_estoque_w
	from	lote_producao
	where	nr_lote_producao	=	nr_lote_producao_p;
	
	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
		substr(obter_se_material_estoque_lote(cd_estabelecimento_p, cd_material),1,1),
		coalesce(ie_consignado, '0')
	into STRICT	cd_unidade_medida_consumo_w,
		ie_estoque_lote_w,
		ie_consignado_w
	from	material
	where	cd_material 		= cd_material_p;
	
 	insert into lp_item_util(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_lote_producao,
		cd_material,
		cd_unidade_medida,
		qt_material,
		nr_seq_lote_fornec)
	values (
		nextval('lp_item_util_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_lote_producao_p,
		cd_material_p,
		cd_unidade_medida_consumo_w,
		qt_material_p,
		nr_seq_lote_fornec_p);
	commit;

	if (ie_baixa_estoque_w = 'S') and (qt_material_p > 0) then
		select	coalesce(max(ie_regra_saldo_consig), 0)
		into STRICT	ie_regra_saldo_consig_w
		from	parametro_estoque
		where	cd_estabelecimento = cd_estabelecimento_p;
		
		select	cd_fornecedor
		into STRICT	cd_cgc_fornecedor_w
		from	lote_producao_comp
		where	cd_material = cd_material_p
		and	nr_lote_producao = nr_lote_producao_p;
		
		if (ie_consignado_w = '2') and (ie_regra_saldo_consig_w > 0) and (ie_estoque_lote_w = 'N') and (coalesce(cd_cgc_fornecedor_w::text, '') = '') then
			qt_movimento_w := obter_quantidade_convertida(
						cd_material_p			=> cd_material_p,
						qt_material_p			=> qt_material_p,
						cd_unidade_medida_p		=> cd_unidade_medida_consumo_w,
						cd_unidade_medida_retorno_p	=> 'UME');
			
			CALL gerar_movimento_consig_ambos(
				cd_material_p		=> cd_material_p,
				qt_movimento_p		=> qt_movimento_w,
				cd_unidade_medida_p	=> cd_unidade_medida_consumo_w,
				ie_acao_p		=> 1,
				cd_local_estoque_p	=> cd_local_estoque_w,
				cd_estabelecimento_p	=> cd_estabelecimento_p,
				ie_rotina_movimento_p	=> 'GPI',
				nm_usuario_p		=> nm_usuario_p,
				nr_seq_lote_fornec_p	=> nr_seq_lote_fornec_p,
				nr_sequencia_p		=> nr_lote_producao_p,
				cd_setor_atendimento_p	=> cd_setor_atendimento_p);
		else		
			CALL Gerar_Prescricao_Estoque(cd_estabelecimento_p, null, null, cd_material_p, clock_timestamp(), 1, cd_local_estoque_w,
						qt_material_p, cd_setor_atendimento_p, cd_unidade_medida_consumo_w, nm_usuario_p, 'I',
						null, null, null, null, cd_cgc_fornecedor_w, null, nr_seq_lote_fornec_p,
						null, null, null, 'X', null, nr_lote_producao_p);
		end if;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE separar_lp_item ( nr_lote_producao_p bigint, nr_seq_lote_fornec_p bigint, cd_material_p bigint, qt_material_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, cd_setor_atendimento_p bigint) FROM PUBLIC;

