-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intcom_gravar_retorno_cnpj_int ( nr_seq_registro_p bigint, cd_cnpj_p text, ds_razao_social_p text, nm_fantasia_p text, nr_inscr_estadual_p text, cd_cep_p text, ds_logradouro_p text, ds_cidade_p text, ds_estado_p text, sg_estado_p text, ds_pais_p text, nr_telefone_p text, nr_fax_p text, ds_contato_p text, ds_email_p text, ds_tipo_empresa_p text, ds_categoria_p text, ie_status_p text, ie_sistema_origem_p text, ds_erro_p text, ds_retorno_p text, ds_xml_p text, nm_usuario_p text) AS $body$
DECLARE

						
qt_existe_w		bigint;
nr_seq_pais_w		bigint;
cd_estabelecimento_w	bigint;
ds_erro_w		varchar(2000) := '';
qt_erro_w			bigint := 0;
						
C01 CURSOR FOR
SELECT	cd_estabelecimento
from	estabelecimento
where	ie_situacao = 'A';


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	registro_integr_com_xml
where	nr_seq_registro	= nr_seq_registro_p
and	ie_operacao	= 'E'
and	ie_status	= 'NP';

if (qt_existe_w = 0) then
	qt_erro_w	:= 1;
	ds_erro_w	:= 	substr(	WHEB_MENSAGEM_PCK.get_texto(280398) || nr_seq_registro_p || '. ' ||
					WHEB_MENSAGEM_PCK.get_texto(280399),1,2000);
end if;

if (qt_erro_w = 0) then

	begin
	insert into registro_integr_com_xml(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_registro,
		ie_status,
		ie_operacao,
		ie_sistema_origem,
		ds_erro,
		ds_retorno,
		ds_xml,
		ie_tipo_operacao)
	values (	nextval('registro_integr_com_xml_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_registro_p,
		ie_status_p,
		'R',
		ie_sistema_origem_p,
		ds_erro_p,
		ds_retorno_p,
		ds_xml_p,
		'WMG');
	exception
	when others then
		qt_erro_w	:= 1;
		ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280401) || sqlerrm,1,2000);
	end;

	
	if (qt_erro_w = 0) and (ie_status_p = 'P') then	

		begin
		update	pessoa_juridica
		set	ds_razao_social		= substr(ds_razao_social_p,1,255),
			nm_fantasia		= substr(nm_fantasia_p,1,80),
			nr_inscricao_estadual	= substr(nr_inscr_estadual_p,1,20),
			ds_endereco		= substr(ds_logradouro_p,1,40),
			ds_municipio		= substr(ds_cidade_p,1,40),
			sg_estado		= substr(sg_estado_p,1,15),
			nr_telefone		= substr(nr_telefone_p,1,15),
			nr_fax			= substr(nr_fax_p,1,15)
		where	cd_cgc			= cd_cnpj_p;
		exception
		when others then
			qt_erro_w	:= 1;
			ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280402) || sqlerrm,1,2000);
		end;
		
	
		if (qt_erro_w = 0) then
	
			begin
			update	pessoa_juridica
			set	cd_cep		= cd_cep_p
			where	cd_cgc		= cd_cnpj_p;
			
			exception
			when others then
				qt_erro_w	:= 1;
				ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280403) || sqlerrm,1,2000);
			end;
		end if;
	
		if (qt_erro_w = 0) then
			
			begin
			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_pais_w
			from	pais
			where	elimina_acentuacao(upper(nm_pais)) = elimina_acentuacao(upper(ds_pais_p));
	
			if (nr_seq_pais_w > 0) then
				update	pessoa_juridica
				set	nr_seq_pais	= nr_seq_pais_w
				where	cd_cgc		= cd_cnpj_p;	
			end if;
			
			exception
			when others then
				qt_erro_w	:= 1;
				ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280404) || sqlerrm,1,2000);
			end;
		end if;
			
		
		if (qt_erro_w = 0) then
	
			open C01;
			loop
			fetch C01 into	
				cd_estabelecimento_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				
				select	count(*)
				into STRICT	qt_existe_w
				from	pessoa_juridica_estab
				where	cd_cgc			= cd_cnpj_p
				and	cd_estabelecimento		= cd_estabelecimento_w;
				
				if (qt_existe_w > 0) then
					
					begin
					update	pessoa_juridica_estab
					set	nm_pessoa_contato	= substr(ds_contato_p,1,255),
						ds_email			= substr(ds_email_p,1,255)
					where	cd_cgc			= cd_cnpj_p
					and	cd_estabelecimento		= cd_estabelecimento_w;
					exception
					when others then
						qt_erro_w	:= 1;
						ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280405) || sqlerrm,1,2000);
					end;
				else
					begin
					insert into pessoa_juridica_estab(
						nr_sequencia,
						cd_cgc,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						nm_pessoa_contato,
						ds_email,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_conta_dif_nf)
					values (	nextval('pessoa_juridica_estab_seq'),
						cd_cnpj_p,
						cd_estabelecimento_w,
						clock_timestamp(),
						nm_usuario_p,
						substr(ds_contato_p,1,255),
						substr(ds_email_p,1,255),
						clock_timestamp(),
						nm_usuario_p,
						'N');
					exception
					when others then
						qt_erro_w	:= 1;
						ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280406) || sqlerrm,1,2000);
					end;					
				end if;		
				end;
			end loop;
			close C01;
		end if;
		
		if (qt_erro_w = 0) then
			begin
			insert into pessoa_juridica_historico(	
				nr_sequencia,
				cd_cgc,
				dt_historico,
				ds_historico,
				dt_atualizacao,
				nm_usuario,
				ds_titulo,
				dt_liberacao,
				nm_usuario_lib,
				ie_tipo)	
			values (	nextval('pessoa_juridica_historico_seq'),
				cd_cnpj_p,
				clock_timestamp(),
				WHEB_MENSAGEM_PCK.get_texto(280408),
				clock_timestamp(),
				nm_usuario_p,
				WHEB_MENSAGEM_PCK.get_texto(280409),
				clock_timestamp(),
				nm_usuario_p,
				'S');
			exception
			when others then
				qt_erro_w	:= 1;
				ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280410) || sqlerrm,1,2000);
			end;
		end if;
	end if;	
		
	if (qt_erro_w = 0) and (ie_status_p = 'E') then
	
		begin
		insert into pessoa_juridica_historico(	
			nr_sequencia,
			cd_cgc,
			dt_historico,
			ds_historico,
			dt_atualizacao,
			nm_usuario,
			ds_titulo,
			dt_liberacao,
			nm_usuario_lib,
			ie_tipo)	
		values (	nextval('pessoa_juridica_historico_seq'),
			cd_cnpj_p,
			clock_timestamp(),
			WHEB_MENSAGEM_PCK.get_texto(280411) || chr(13) || chr(10) || WHEB_MENSAGEM_PCK.get_texto(280412) || ds_erro_p,
			clock_timestamp(),
			nm_usuario_p,
			WHEB_MENSAGEM_PCK.get_texto(280413),
			clock_timestamp(),
			nm_usuario_p,
			'S');
		exception
		when others then
			qt_erro_w	:= 1;
			ds_erro_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(280410) || sqlerrm,1,2000);
		end;
	end if;
end if;

if (qt_erro_w = 0) then
	update	registro_integr_com_xml
	set	ie_status	= ie_status_p,
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		cd_cnpj		= cd_cnpj_p,
		ds_erro		= ds_erro_w
	where	nr_seq_registro	= nr_seq_registro_p
	and	ie_operacao	= 'E';
else
	rollback;
	update	registro_integr_com_xml
	set	ie_status	= 'E',
		dt_atualizacao	= clock_timestamp(),
		nm_usuario	= nm_usuario_p,
		cd_cnpj		= cd_cnpj_p,
		ds_erro		= ds_erro_w
	where	nr_seq_registro	= nr_seq_registro_p
	and	ie_operacao	= 'E';
	commit;
	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182482,'DS_ERRO_P='||DS_ERRO_W);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intcom_gravar_retorno_cnpj_int ( nr_seq_registro_p bigint, cd_cnpj_p text, ds_razao_social_p text, nm_fantasia_p text, nr_inscr_estadual_p text, cd_cep_p text, ds_logradouro_p text, ds_cidade_p text, ds_estado_p text, sg_estado_p text, ds_pais_p text, nr_telefone_p text, nr_fax_p text, ds_contato_p text, ds_email_p text, ds_tipo_empresa_p text, ds_categoria_p text, ie_status_p text, ie_sistema_origem_p text, ds_erro_p text, ds_retorno_p text, ds_xml_p text, nm_usuario_p text) FROM PUBLIC;

