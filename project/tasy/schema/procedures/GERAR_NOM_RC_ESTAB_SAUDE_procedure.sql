-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_estab_saude ( nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Establecimiento de salud del paciente */

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;

nr_telefone_w			varchar(255);
ds_email_w				varchar(255);
cd_cgc_w				pessoa_juridica.cd_cgc%type;
cd_cgc_unidade_saude_w 	varchar(14);
ds_razao_social_w		pessoa_juridica.ds_razao_social%type;
cd_clues_w				pessoa_juridica.cd_internacional%type;

nr_seq_pessoa_endereco_w	pessoa_endereco.nr_sequencia%type;	
ds_endereco_completo_w		varchar(2000);	
cd_tipo_vialidade_w			varchar(255);
ds_rua_vialidade_w			varchar(255);
nr_numero_externo_w			varchar(255);
nr_numero_ext_alfa_w		varchar(255);
nr_numero_interno_w			varchar(255);
nr_numero_int_alfa_w		varchar(255);
cd_tipo_asentamento_w		varchar(255);
nm_assentamento_w		    varchar(255);
cd_localidade_w				varchar(255);
cd_municipio_w				varchar(255);
cd_entidade_w				varchar(255);
cd_postal_w					varchar(255);
cd_pais_w					varchar(255);
nr_seq_catalogo_w			end_catalogo.nr_sequencia%type;
qt_registro_w				bigint;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%TYPE;


BEGIN

delete from nom_rc_pessoa_juridica
where nr_seq_cabecalho = nr_seq_cabecalho_p
and	ie_tipo = 'EST';

select	a.nr_atendimento,
		a.nr_seq_episodio,
		a.cd_estabelecimento
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w,
		cd_estabelecimento_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;


if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	null;
elsif (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	select 	max(a.CD_CGC_ESTAB_SAUDE),
			count(1)
	into STRICT 	cd_cgc_unidade_saude_w,
			qt_registro_w
	from	PESSOA_TITULAR_CONVENIO a,
			ATENDIMENTO_PACIENTE b
	where 	b.dt_entrada between a.dt_inicio_vigencia and a.dt_fim_vigencia
	and   	a.CD_PESSOA_FISICA = b.CD_PESSOA_FISICA
	and		b.NR_ATENDIMENTO = nr_atendimento_w;

	/* Generate only if found a valid establishment and only one active */

	if (cd_cgc_unidade_saude_w IS NOT NULL AND cd_cgc_unidade_saude_w::text <> '') and (qt_registro_w = 1) then


		/*Pessoa jurídica*/

		select	obter_nom_rc_telefone(null, h.cd_cgc, null) nr_telefone, /*id_75*/
				coalesce(pe.ds_email,h.ds_email) ds_email, /*id_76*/
				h.cd_internacional cd_clues,  /*id_73*/
				h.cd_cgc cd_cgc,
				h.ds_razao_social  /*id_74*/
		into STRICT	nr_telefone_w,
				ds_email_w,
				cd_clues_w,
				cd_cgc_w,
				ds_razao_social_w
		FROM pessoa_juridica h
LEFT OUTER JOIN pessoa_juridica_estab pe ON (h.cd_cgc = pe.cd_cgc AND cd_estabelecimento_w = pe.cd_estabelecimento)
WHERE h.cd_cgc = cd_cgc_unidade_saude_w;

		/* Endereço */

		select	nr_seq_pessoa_endereco,	
				get_complete_address_desc(a.nr_seq_pessoa_endereco,null,null,null,null,'Y') ds_endereco_completo,  /*id_77*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C') cd_tipo_vialidade,  /*id_78*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D') ds_rua_vialidade,  /*id_79*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO','D') nr_numero_externo,  /*id_80*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D') nr_numero_ext_alfa,
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO_INT','D') nr_numero_interno,
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'COMPLEMENTO','D') nr_numero_int_alfa,  /*id_83*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C') cd_tipo_asentamento,  /*id_84*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'BAIRRO_VILA','CD') nm_assentamento,  /*id_85*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_localidade, /*id_86*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'MUNICIPIO','C') cd_municipio, /*id_87*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C') cd_entidade, /*id_88*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_postal, /*id_89*/
				get_info_end_endereco(a.nr_seq_pessoa_endereco,'PAIS','C') cd_pais /*id_90*/
		into STRICT	nr_seq_pessoa_endereco_w,	
				ds_endereco_completo_w,
				cd_tipo_vialidade_w,
				ds_rua_vialidade_w,
				nr_numero_externo_w,
				nr_numero_ext_alfa_w,
				nr_numero_interno_w,
				nr_numero_int_alfa_w,
				cd_tipo_asentamento_w,
				nm_assentamento_w,
				cd_localidade_w,
				cd_municipio_w,
				cd_entidade_w,
				cd_postal_w,
				cd_pais_w
		from	pessoa_juridica a
		where	a.cd_cgc = cd_cgc_w;

		select	max(b.nr_seq_catalogo)
		into STRICT	nr_seq_catalogo_w
		from	end_endereco b,
				pessoa_endereco_item a
		where	b.nr_sequencia = a.nr_seq_end_endereco
		and		a.nr_seq_pessoa_endereco = nr_seq_pessoa_endereco_w;

		insert into nom_rc_pessoa_juridica(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_tipo,
			ds_domicilio,
			cd_tipo_vialidade,
			nm_vialidade,
			nr_domicilio_ext,
			nr_domicilio_ext_alfa,
			nr_domicilio_int,
			nr_domicilio_int_alfa,
			cd_tipo_assentamento,
			nm_assentamento,
			cd_localidade,
			cd_municipio,
			cd_entidade_fed,
			cd_postal,
			cd_pais,
			nr_telefone,
			ds_email,
			cd_clues,
			nm_estab_salud,
			nr_seq_cabecalho,
			nr_seq_catalogo)
		values (nextval('nom_rc_pessoa_juridica_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			'EST',
			substr(ds_endereco_completo_w,1,2000),
			cd_tipo_vialidade_w,
			ds_rua_vialidade_w,
			nr_numero_externo_w,
			nr_numero_ext_alfa_w,
			nr_numero_interno_w,
			nr_numero_int_alfa_w,
			cd_tipo_asentamento_w,
			nm_assentamento_w,
			cd_localidade_w,
			cd_municipio_w,
			cd_entidade_w,
			cd_postal_w,
			cd_pais_w,
			substr(nr_telefone_w,1,30),
			substr(ds_email_w,1,255),
			cd_clues_w,
			ds_razao_social_w,
			nr_seq_cabecalho_p,
			nr_seq_catalogo_w);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_estab_saude ( nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

