-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_valor_proc_co ( nr_sequencia_p pls_conta_proc.nr_sequencia%type, ie_tipo_despesa_p text, ie_gravar_log_p text, ie_pos_estab_faturamento_p pls_parametros.ie_pos_estab_faturamento%type, ie_geracao_pos_estabelecido_p pls_parametros.ie_geracao_pos_estabelecido%type, nm_usuario_p usuario.nm_usuario%type, dados_regra_preco_proc_p INOUT pls_cta_valorizacao_pck.dados_regra_preco_proc) AS $body$
DECLARE

			 	
nr_seq_conta_w			pls_conta.nr_sequencia%type;
cd_procedimento_w		procedimento.cd_procedimento%type;
ie_origem_proced_w		procedimento.ie_origem_proced%type;
qt_procedimento_w		pls_conta_proc.qt_procedimento_imp%type;
ie_tecnica_utilizada_w		varchar(1);
tx_item_w			double precision := 0;
nr_seq_regra_horario_w		bigint;
cd_estabelecimento_w		integer;
nr_seq_segurado_w		bigint;
nr_seq_categoria_w		bigint;
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_clinica_w		bigint;
qt_dias_internacao_w		bigint;
nr_seq_prestador_exec_w		bigint;
ie_internado_w			varchar(1);
ie_tipo_guia_w			varchar(10);
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
cd_convenio_w			bigint;
cd_categoria_w			varchar(10);
nr_seq_outorgante_w		bigint;
ie_tipo_contratacao_w		varchar(10);
dt_preco_w			timestamp;
dt_procedimento_w		timestamp;
dt_inicio_proc_w		timestamp;
dt_fim_proc_w			timestamp;
nr_seq_classificacao_prest_w	bigint;
vl_beneficiario_w		double precision	:= 0;
vl_custo_operacional_w		double precision	:= 0;
vl_anestesista_w		double precision	:= 0;
vl_medico_w			double precision	:= 0;
vl_filme_w			double precision	:= 0;
vl_auxiliares_w			double precision	:= 0;
nr_seq_regra_pos_estab_w	bigint;
vl_retorno_w			double precision	:= 0;
ds_retorno_w			varchar(255);
nr_aux_regra_w			bigint;
tx_medico_adic_w		double precision	:= 1;
tx_anestesista_adic_w		double precision	:= 1;
tx_auxiliares_adic_w		double precision	:= 1;
tx_custo_operacional_adic_w	double precision	:= 1;
tx_materiais_adic_w		double precision	:= 1;
tx_procedimento_adic_w		double precision	:= 1;
nr_seq_regra_autogerado_w	bigint;
ie_tipo_vinculo_w		varchar(10);
ie_carater_internacao_w		varchar(2);
nr_seq_intercambio_w		bigint;
dt_vigencia_w			timestamp;
cd_tabela_servico_w		smallint;
ie_criterio_horario_w		varchar(10);
ie_tipo_intercambio_w		varchar(255);
nr_seq_congenere_w		bigint;
nr_seq_congenere_seg_w		bigint;
nr_seq_cbo_saude_w		bigint;
ie_calculo_pacote_w		varchar(5);
nr_contrato_w			bigint;
ie_origem_conta_w		varchar(1);

nr_seq_pacote_w			bigint;
nr_seq_regra_pacote_w		bigint;
cd_proc_pacote_w		bigint;
ie_origem_pacote_w		bigint;
nr_seq_grau_partic_w		bigint;
ie_honorario_pos_w		pls_parametros.ie_honorario_pos%type;
ie_tipo_conta_w			varchar(10);
ie_tipo_protocolo_w		varchar(2);
dt_conta_w			timestamp;
ie_status_w			varchar(1);
ie_repassa_medico_w		varchar(1);
ie_tipo_partic_prof_w		varchar(10);
vl_total_partic_w		double precision;
nr_auxiliares_w			bigint;
qt_porte_anestesico_w		bigint;
cd_edicao_amb_w			integer;
tx_auxiliares_w			double precision;
tx_anestesista_w		double precision;
tx_co_w				double precision;
tx_material_w			double precision;
tx_medico_w			double precision;
cd_guia_w			varchar(20);
ie_tipo_acomodacao_ptu_w	varchar(1);
nr_seq_rp_combinada_w		pls_rp_cta_combinada.nr_sequencia%type;
nr_seq_conta_referencia_w	pls_conta.nr_seq_conta_referencia%type	:= null;
cd_moeda_autogerado_w		smallint;
nr_seq_protocolo_w		pls_protocolo_conta.nr_sequencia%type;
dados_prestador_prot_w		pls_cta_valorizacao_pck.dados_prestador_prot;
dados_prestador_exec_w		pls_cta_valorizacao_pck.dados_prestador_exec;
dados_adic_horario_w		pls_cta_valorizacao_pck.dados_adic_horario;
dados_procedimento_w		pls_cta_valorizacao_pck.dados_procedimento;
dados_conta_valor_w		pls_cta_valorizacao_pck.dados_conta;
dados_conta_proc_valor_w	pls_cta_valorizacao_pck.dados_conta_proc;
dados_beneficiario_valor_w	pls_cta_valorizacao_pck.dados_beneficiario;
dt_alta_w			pls_conta.dt_alta%type;
ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
vl_ch_honorarios_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_oper_w		cotacao_moeda.vl_cotacao%type;
vl_ch_custo_filme_w		cotacao_moeda.vl_cotacao%type;
vl_ch_anestesista_w		cotacao_moeda.vl_cotacao%type;
dados_regra_preco_proc_w	pls_cta_valorizacao_pck.dados_regra_preco_proc;

dados_regra_preco_servico_w	pls_cta_valorizacao_pck.dados_regra_preco_servico;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
cd_prestador_solic_w		pls_prestador.cd_prestador%type;
nr_seq_prestador_solic_ref_w	pls_conta.nr_seq_prestador_solic_ref%type;
vl_medico_ww			pls_conta_proc.vl_unitario%type;
dados_guia_w			pls_cta_valorizacao_pck.dados_guia;
nr_seq_ops_congenere_seg_w	pls_segurado.nr_seq_ops_congenere%type;
cd_estab_cad_benef_w		estabelecimento.cd_estabelecimento%type;
ie_tipo_intercambio_benef_w	varchar(1);
ie_via_acesso_w			pls_conta_proc.ie_via_acesso%type;
nr_seq_regra_tx_w		pls_regra_tx_proc_int.nr_sequencia%type;
tx_item_regra_w			pls_regra_tx_proc_int.tx_procedimento%type;
ie_cobrar_co_w			pls_regra_cobr_val_pos.ie_cobrar_custo_op%type := 'S';
ie_cobrar_filme_w		pls_regra_cobr_val_pos.ie_cobrar_filme%type := 'S';
qt_partic_w			integer;
nr_seq_regra_co_filme_w		pls_regra_cobr_val_pos.nr_sequencia%type;
nr_seq_cbo_saude_solic_w	pls_conta.nr_seq_cbo_saude_solic%type;
ie_max_nr_auxiliares_w		pls_parametros.ie_max_nr_auxiliares%type;
nr_auxiliares_atend_w		pls_conta_proc.nr_auxiliares%type;
nr_seq_ultimo_pos_w			pls_conta_pos_estabelecido.nr_sequencia%type;
ie_regime_atendimento_w		pls_conta.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_conta.ie_saude_ocupacional%type;


BEGIN

if (ie_pos_estab_faturamento_p = 'N') or (ie_geracao_pos_estabelecido_p != 'F') then
	/* Obter dados da conta  e do protocolo*/

	begin
		select	coalesce(a.dt_procedimento, clock_timestamp()),
			a.nr_seq_conta,
			a.cd_procedimento,
			a.ie_origem_proced,
			a.ie_tecnica_utilizada,
			coalesce(a.tx_item,100),
			coalesce(a.qt_procedimento_imp,1),
			a.dt_inicio_proc,
			a.dt_fim_proc,
			a.ie_criterio_horario,
			a.ie_status,
			a.ie_repassa_medico,
			coalesce(a.tx_custo_operacional,100),
			coalesce(a.tx_material,100),
			coalesce(a.tx_medico,100),
			coalesce(a.tx_auxiliares,100),
			coalesce(a.tx_anestesista,100),
			b.cd_estabelecimento,
			b.nr_seq_segurado,
			coalesce(b.nr_seq_tipo_acomodacao,0),
			coalesce(b.nr_seq_tipo_atendimento,0),
			b.nr_seq_clinica,
			trunc(coalesce(b.dt_alta, clock_timestamp()) - b.dt_entrada) qt_dias_internacao,
			b.nr_seq_prestador_exec,
			pls_obter_se_internado(b.nr_sequencia, 'C'),
			b.ie_carater_internacao,
			b.nr_seq_cbo_saude,
			b.ie_tipo_guia,
			b.ie_origem_conta,
			b.nr_seq_grau_partic,
			coalesce(b.ie_tipo_conta,'O'),
			coalesce(b.dt_atendimento_referencia, coalesce(b.dt_autorizacao, coalesce(b.dt_entrada, clock_timestamp()))) dt_conta,
			coalesce(b.cd_guia_referencia,b.cd_guia),
			b.ie_tipo_acomodacao_ptu,
			c.nr_seq_congenere,
			c.ie_tipo_protocolo,
			a.nr_seq_rp_combinada,
			b.nr_seq_conta_referencia,
			c.nr_sequencia,
			b.dt_alta,
			b.ie_tipo_consulta,
			b.nr_seq_guia,
			b.nr_seq_prest_inter,
			b.nr_seq_prestador_solic_ref,
			b.nr_seq_tipo_atendimento,
			a.ie_via_acesso,
			b.nr_seq_cbo_saude_solic,
			b.nr_seq_tipo_conta,
			b.ie_regime_atendimento,
			b.ie_saude_ocupacional
		into STRICT	dt_procedimento_w,
			nr_seq_conta_w,
			cd_procedimento_w, 
			ie_origem_proced_w,
			ie_tecnica_utilizada_w,
			tx_item_w,
			qt_procedimento_w,
			dt_inicio_proc_w,
			dt_fim_proc_w,
			ie_criterio_horario_w,
			ie_status_w,
			ie_repassa_medico_w,
			tx_co_w,
			tx_material_w,
			tx_medico_w,
			tx_auxiliares_w,
			tx_anestesista_w,
			cd_estabelecimento_w,
			nr_seq_segurado_w,
			nr_seq_tipo_acomodacao_w,
			nr_seq_tipo_atendimento_w, 
			nr_seq_clinica_w,
			qt_dias_internacao_w,
			nr_seq_prestador_exec_w,
			ie_internado_w,
			ie_carater_internacao_w,
			nr_seq_cbo_saude_w,
			ie_tipo_guia_w,
			ie_origem_conta_w,
			nr_seq_grau_partic_w,
			ie_tipo_conta_w,
			dt_conta_w,
			cd_guia_w,
			ie_tipo_acomodacao_ptu_w,
			nr_seq_congenere_w,
			ie_tipo_protocolo_w,
			nr_seq_rp_combinada_w,
			nr_seq_conta_referencia_w,
			nr_seq_protocolo_w,
			dt_alta_w,
			dados_conta_valor_w.ie_tipo_consulta,
			nr_seq_guia_w,
			dados_conta_valor_w.nr_seq_prestador_inter,
			nr_seq_prestador_solic_ref_w,
			dados_conta_valor_w.nr_seq_tipo_atendimento,
			ie_via_acesso_w,
			nr_seq_cbo_saude_solic_w,
			dados_conta_valor_w.nr_seq_tipo_conta,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		from	pls_protocolo_conta	c,
			pls_conta		b,
			pls_conta_proc 		a
		where	a.nr_seq_conta 		= b.nr_sequencia
		and	b.nr_seq_protocolo	= c.nr_sequencia
		and	a.nr_sequencia		= nr_sequencia_p;
	exception
	when others then
		nr_seq_conta_w 		:= null;
		nr_seq_segurado_w	:= null;
		nr_seq_plano_w		:= null;
	end;
else
	begin
		
		--Obtem maior sequecnia de pos para tratar casos que retorne 2 pos-estabelecido, devido ao A520. Se retornar nulo nao tem problema devido ao left
		select max(d.nr_sequencia)
		into STRICT	nr_seq_ultimo_pos_w
		FROM pls_conta c, pls_conta_pos_cabecalho b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_pos_estabelecido d ON (a.nr_sequencia = d.nr_seq_conta_proc)
WHERE a.nr_seq_conta 		= b.nr_seq_conta and b.nr_seq_conta		= c.nr_sequencia  and ( ) and coalesce(b.nr_seq_conta_rec::text, '') = '' and coalesce(b.nr_seq_discussao::text, '') = '' and a.nr_sequencia = nr_sequencia_p;
	
		select	coalesce(d.dt_item, coalesce(a.dt_procedimento,clock_timestamp())),
			b.nr_seq_conta,
			coalesce(d.cd_procedimento,a.cd_procedimento),
			coalesce(d.ie_origem_proced,a.ie_origem_proced),
			a.ie_tecnica_utilizada,
			coalesce(a.tx_item,100),
			coalesce(a.qt_procedimento_imp,1),
			coalesce(d.dt_inicio_item,a.dt_inicio_proc),
			coalesce(d.dt_fim_item,a.dt_fim_proc),
			a.ie_criterio_horario,
			a.ie_status,
			a.ie_repassa_medico,
			coalesce(a.tx_custo_operacional,100),
			coalesce(a.tx_material,100),
			coalesce(a.tx_medico,100),
			coalesce(a.tx_auxiliares,100),
			coalesce(a.tx_anestesista,100),
			b.cd_estabelecimento,
			b.nr_seq_segurado,
			coalesce(b.nr_seq_tipo_acomodacao,0),
			coalesce(b.nr_seq_tipo_atendimento,0),
			b.nr_seq_clinica,
			trunc(coalesce(b.dt_alta, clock_timestamp()) - b.dt_entrada) qt_dias_internacao,
			b.nr_seq_prestador_exec,
			pls_obter_se_internado(b.nr_seq_conta, 'C'),
			b.ie_carater_internacao,
			b.ie_tipo_guia,
			b.ie_origem_conta,
			b.nr_seq_grau_partic,
			coalesce(b.cd_guia_referencia,b.cd_guia),
			b.ie_tipo_acomodacao_ptu,
			b.nr_seq_congenere,
			b.ie_tipo_protocolo,
			c.nr_seq_cbo_saude,
			coalesce(c.ie_tipo_conta,'O'),
			coalesce(b.dt_atendimento, coalesce(c.dt_autorizacao, coalesce(c.dt_entrada, clock_timestamp()))) dt_conta,
			a.nr_seq_rp_combinada,
			c.nr_seq_conta_referencia,
			c.nr_seq_protocolo,
			c.dt_alta,
			c.ie_tipo_consulta,
			c.nr_seq_guia,
			c.nr_seq_prest_inter,
			c.nr_seq_prestador_solic_ref,
			a.ie_via_acesso,
			c.nr_seq_cbo_saude_solic,
			c.ie_regime_atendimento,
			c.ie_saude_ocupacional
		into STRICT	dt_procedimento_w,
			nr_seq_conta_w,
			cd_procedimento_w, 
			ie_origem_proced_w,
			ie_tecnica_utilizada_w,
			tx_item_w,
			qt_procedimento_w,
			dt_inicio_proc_w,
			dt_fim_proc_w,
			ie_criterio_horario_w,
			ie_status_w,
			ie_repassa_medico_w,
			tx_co_w,
			tx_material_w,
			tx_medico_w,
			tx_auxiliares_w,
			tx_anestesista_w,
			cd_estabelecimento_w,
			nr_seq_segurado_w,
			nr_seq_tipo_acomodacao_w,
			nr_seq_tipo_atendimento_w, 
			nr_seq_clinica_w,
			qt_dias_internacao_w,
			nr_seq_prestador_exec_w,
			ie_internado_w,
			ie_carater_internacao_w,
			ie_tipo_guia_w,
			ie_origem_conta_w,
			nr_seq_grau_partic_w,
			cd_guia_w,
			ie_tipo_acomodacao_ptu_w,
			nr_seq_congenere_w,
			ie_tipo_protocolo_w,
			nr_seq_cbo_saude_w,
			ie_tipo_conta_w,
			dt_conta_w,
			nr_seq_rp_combinada_w,
			nr_seq_conta_referencia_w,
			nr_seq_protocolo_w,
			dt_alta_w,
			dados_conta_valor_w.ie_tipo_consulta,
			nr_seq_guia_w,
			dados_conta_valor_w.nr_seq_prestador_inter,
			nr_seq_prestador_solic_ref_w,
			ie_via_acesso_w,
			nr_seq_cbo_saude_solic_w,
			ie_regime_atendimento_w,
			ie_saude_ocupacional_w
		FROM pls_conta c, pls_conta_pos_cabecalho b, pls_conta_proc a
LEFT OUTER JOIN pls_conta_pos_estabelecido d ON (a.nr_sequencia = d.nr_seq_conta_proc AND nr_seq_ultimo_pos_w = d.nr_sequencia)
WHERE a.nr_seq_conta 		= b.nr_seq_conta and b.nr_seq_conta		= c.nr_sequencia  and ( ) and coalesce(b.nr_seq_conta_rec::text, '') = '' and coalesce(b.nr_seq_discussao::text, '') = '' and a.nr_sequencia = nr_sequencia_p;
	exception
	when others then
		nr_seq_conta_w 		:= null;
		nr_seq_segurado_w	:= null;
		nr_seq_plano_w		:= null;
	end;
end if;

select	max(ie_tipo_consulta),
	max(ie_pcmso),
	max(nr_seq_tipo_acomodacao)
into STRICT	dados_guia_w.ie_tipo_consulta_guia,
	dados_conta_valor_w.ie_atend_pcmso,
	dados_guia_w.nr_seq_tipo_acomodacao
from	pls_guia_plano
where	nr_sequencia = nr_seq_guia_w;

select	max(cd_prestador)
into STRICT	cd_prestador_solic_w
from	pls_prestador
where	nr_sequencia	= nr_seq_prestador_solic_ref_w;

if (dt_inicio_proc_w IS NOT NULL AND dt_inicio_proc_w::text <> '') then
	dt_inicio_proc_w	:= to_date(to_char(dt_procedimento_w,'dd/mm/yyyy') || ' ' || to_char(dt_inicio_proc_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
else
	dt_inicio_proc_w	:= dt_procedimento_w;
end if;

if (dt_fim_proc_w IS NOT NULL AND dt_fim_proc_w::text <> '') then
	dt_fim_proc_w	:= to_date(to_char(dt_procedimento_w,'dd/mm/yyyy') || ' ' || to_char(dt_fim_proc_w,'hh24:mi:ss'),'dd/mm/yyyy hh24:mi:ss');
end if;
--dados do procedimento sera utilizado pelas function e rotinas ao decorer desta
dados_conta_proc_valor_w.nr_sequencia		:= nr_sequencia_p;
dados_conta_proc_valor_w.nr_seq_conta		:= nr_seq_conta_w;
dados_conta_proc_valor_w.ie_origem_proced	:= ie_origem_proced_w;
dados_conta_proc_valor_w.cd_procedimento	:= cd_procedimento_w;
dados_conta_proc_valor_w.dt_procedimento	:= dt_procedimento_w;
dados_conta_proc_valor_w.dt_inicio_proc		:= dt_inicio_proc_w;
dados_conta_proc_valor_w.dt_fim_proc		:= dt_fim_proc_w;
dados_conta_proc_valor_w.ie_criterio_horario	:= ie_criterio_horario_w;
dados_conta_proc_valor_w.ie_via_acesso		:= ie_via_acesso_w;

select  cd_grupo_proc,
	cd_especialidade,
	cd_area_procedimento,
	nr_seq_grupo_rec,
	nr_seq_prestador_prot,
	cd_prestador_solic,
	ie_vinc_internado,
	ie_tipo_segurado
into STRICT	dados_procedimento_w.cd_grupo_proc,
	dados_procedimento_w.cd_especialidade,
	dados_procedimento_w.cd_area_procedimento,
	dados_procedimento_w.nr_seq_grupo_rec,
	dados_prestador_prot_w.nr_seq_prestador,
	dados_conta_valor_w.cd_prestador_solic,
	dados_conta_valor_w.ie_ref_guia_internacao,
	ie_tipo_segurado_w
from	pls_conta_proc_v
where	nr_sequencia = nr_sequencia_p;

--dados da conta sera utilizado ao longo desta
dados_conta_valor_w.nr_sequencia 		:= nr_seq_conta_w;
dados_conta_valor_w.ie_origem_conta		:= ie_origem_conta_w;
dados_conta_valor_w.ie_tipo_conta		:= ie_tipo_conta_w;
dados_conta_valor_w.nr_seq_segurado		:= nr_seq_segurado_w;

dados_conta_valor_w.dt_alta			:= dt_alta_w;
dados_conta_valor_w.ie_tipo_guia		:= ie_tipo_guia_w;
dados_conta_valor_w.dt_atendimento		:= dt_conta_w;

if (ie_internado_w	= 'N') then
	ie_internado_w	:= 'A';
end if;

if (nr_seq_conta_referencia_w IS NOT NULL AND nr_seq_conta_referencia_w::text <> '') and (coalesce(nr_seq_clinica_w::text, '') = '') then

	select	max(nr_seq_clinica)
	into STRICT	nr_seq_clinica_w
	from	pls_conta
	where	nr_sequencia	= nr_seq_conta_referencia_w;
end if;	

if (dados_prestador_prot_w.nr_seq_prestador IS NOT NULL AND dados_prestador_prot_w.nr_seq_prestador::text <> '') then
	select	max(nr_seq_tipo_prestador),
		max(nr_seq_classificacao),
		max(ie_tipo_vinculo),
		max(cd_prestador)
	into STRICT	dados_prestador_prot_w.nr_seq_tipo_prestador,
		dados_prestador_prot_w.nr_seq_classificacao,
		dados_prestador_prot_w.ie_tipo_vinculo,
		dados_prestador_prot_w.cd_prestador
	from	pls_prestador
	where	nr_sequencia	= dados_prestador_prot_w.nr_seq_prestador;
end if;

if (nr_seq_prestador_exec_w IS NOT NULL AND nr_seq_prestador_exec_w::text <> '') then
	select	max(nr_seq_tipo_prestador),
		max(nr_seq_classificacao),
		max(ie_tipo_vinculo),
		max(cd_prestador),
		max(nr_sequencia)
	into STRICT	dados_prestador_exec_w.nr_seq_tipo_prestador,
		dados_prestador_exec_w.nr_seq_classificacao,
		dados_prestador_exec_w.ie_tipo_vinculo,
		dados_prestador_exec_w.cd_prestador,
		dados_prestador_exec_w.nr_seq_prestador
	from	pls_prestador
	where	nr_sequencia	= nr_seq_prestador_exec_w;
end if;

if (ie_tipo_guia_w in ('6','5')) then

	select	max(ie_carater_internacao),
		max(nr_seq_clinica),
		max(nr_seq_tipo_acomodacao)
	into STRICT	ie_carater_internacao_w,
		nr_seq_clinica_w,
		nr_seq_tipo_acomodacao_w
	from	pls_conta
	where	ie_tipo_guia = 5
	and	nr_seq_segurado = nr_seq_segurado_w
	and	coalesce(cd_guia_referencia,cd_guia) = cd_guia_w;	

end if;

if (ie_status_w	= 'M') then
	ie_repassa_medico_w := 'S';
end if;
/* Obter dados do beneficiario */

begin
	--select	nvl(nr_seq_plano,0),
	select	coalesce(pls_obter_produto_benef(nr_sequencia,dt_conta_w),0),
		coalesce(nr_seq_contrato,0),
		pls_obter_conv_cat_segurado(nr_sequencia, 1),
		pls_obter_conv_cat_segurado(nr_sequencia, 2),
		nr_seq_intercambio,
		nr_seq_congenere,
		nr_seq_ops_congenere,
		cd_estabelecimento
	into STRICT	nr_seq_plano_w,
		nr_seq_contrato_w,
		cd_convenio_w,
		cd_categoria_w,
		nr_seq_intercambio_w,
		nr_seq_congenere_seg_w,
		nr_seq_ops_congenere_seg_w,
		cd_estab_cad_benef_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_plano_w	:= null;
end;

if (nr_seq_congenere_seg_w IS NOT NULL AND nr_seq_congenere_seg_w::text <> '') then
	nr_seq_congenere_w	:= nr_seq_congenere_seg_w;
end if;

ie_tipo_intercambio_benef_w := pls_obter_tipo_intercambio(coalesce(nr_seq_ops_congenere_seg_w, nr_seq_congenere_seg_w), cd_estab_cad_benef_w);

dados_beneficiario_valor_w.nr_sequencia		:= nr_seq_segurado_w;
dados_beneficiario_valor_w.nr_seq_intercambio	:= nr_seq_intercambio_w;
dados_beneficiario_valor_w.nr_seq_plano		:= nr_seq_plano_w;
dados_beneficiario_valor_w.ie_tipo_beneficiario	:= ie_tipo_segurado_w;
dados_beneficiario_valor_w.nr_seq_contrato	:= nr_seq_contrato_w;
dados_beneficiario_valor_w.ie_tipo_intercambio	:= ie_tipo_intercambio_benef_w;

/* Obter dados do plano */

begin
	select	nr_seq_outorgante,
		ie_tipo_contratacao
	into STRICT	nr_seq_outorgante_w,
		ie_tipo_contratacao_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
exception
	when others then 
	nr_seq_outorgante_w	:= 0;
end;

/* Obter a categoria do tipo de acomodacao */
if (nr_seq_tipo_acomodacao_w IS NOT NULL AND nr_seq_tipo_acomodacao_w::text <> '') then
	select	max(nr_seq_categoria) 
	into STRICT	nr_seq_categoria_w
	from	pls_regra_categoria 
	where	nr_seq_tipo_acomodacao	= nr_seq_tipo_acomodacao_w;
end if;

/* Obter dados do prestador */

begin
	select	nr_seq_classificacao,
		ie_tipo_vinculo
	into STRICT	nr_seq_classificacao_prest_w,
		ie_tipo_vinculo_w
	from	pls_prestador
	where	nr_sequencia = nr_seq_prestador_exec_w;
exception
when others then
	nr_seq_classificacao_prest_w 	:= null;
	ie_tipo_vinculo_w		:= null;
end;

if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
	select	max(ie_pcmso)
	into STRICT	dados_conta_valor_w.ie_atend_pcmso
	from	pls_guia_plano
	where 	nr_sequencia	= nr_seq_guia_w;
end if;
ie_tipo_intercambio_w	:= pls_obter_tipo_intercambio(nr_seq_congenere_w,cd_estabelecimento_w);

dados_conta_valor_w.ie_tipo_intercambio		:= ie_tipo_intercambio_w;
dados_conta_valor_w.nr_seq_congenere		:= nr_seq_congenere_w;

dt_preco_w	:= pls_obter_data_preco_item(nr_sequencia_p, 'P');

select	coalesce(max(ie_calculo_pacote),'P'),
	coalesce(max(ie_honorario_pos),'S'),
	coalesce(max(ie_max_nr_auxiliares),'N')
into STRICT	ie_calculo_pacote_w,
	ie_honorario_pos_w,
	ie_max_nr_auxiliares_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

if (ie_max_nr_auxiliares_w	= 'S') then
	select 	max(nr_auxiliares)
	into STRICT	nr_auxiliares_atend_w
	from	pls_conta_proc_v
	where	nr_seq_guia = nr_seq_guia_w
	and	dt_procedimento = dt_procedimento_w;

	if (coalesce(nr_auxiliares_atend_w::text, '') = '') then
		select 	max(nr_auxiliares)
		into STRICT	nr_auxiliares_atend_w
		from	pls_conta_proc_v
		where	cd_guia_referencia 	= cd_guia_w
		and	nr_seq_segurado 	= nr_seq_segurado_w
		and	dt_procedimento 	= dt_procedimento_w;
	
	end if;
end if;

if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
	select	max(nr_contrato)
	into STRICT	nr_contrato_w
	from	pls_contrato
	where	nr_sequencia = nr_seq_contrato_w;
end if;
dados_conta_valor_w.ie_carater_internacao	:= ie_carater_internacao_w;
if (ie_tipo_despesa_p = '1') or			/* Atualizar o valor do procedimento */
	(ie_tipo_despesa_p = '4' AND ie_calculo_pacote_w = 'R') then /* Atualizar o valor dos pacotes quando o parametro geral da operadora ssim indicar */
 
	
	dados_regra_preco_proc_w := pls_define_preco_proc(	cd_estabelecimento_w, nr_seq_prestador_exec_w, nr_seq_categoria_w, dt_preco_w, null, cd_procedimento_w, ie_origem_proced_w, nr_seq_tipo_acomodacao_w, nr_seq_tipo_atendimento_w, nr_seq_clinica_w, nr_seq_plano_w, 'O', nr_seq_contrato_w, nr_seq_outorgante_w, nr_sequencia_p, ie_gravar_log_p, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, '', nr_seq_classificacao_prest_w, '', ie_internado_w, ie_tecnica_utilizada_w, ie_tipo_guia_w, 'A', 'X', nr_seq_cbo_saude_w, ie_carater_internacao_w, dt_procedimento_w, ie_tipo_acomodacao_ptu_w, nr_seq_rp_combinada_w, dados_prestador_prot_w, dados_guia_w, dados_conta_valor_w, dados_regra_preco_proc_w, null, nr_seq_cbo_saude_solic_w, ie_regime_atendimento_w, null, ie_saude_ocupacional_w);

				vl_beneficiario_w		:= dados_regra_preco_proc_w.vl_procedimento;
				vl_custo_operacional_w		:= dados_regra_preco_proc_w.vl_custo_operacional;
				vl_anestesista_w		:= dados_regra_preco_proc_w.vl_anestesista;
				vl_medico_w			:= dados_regra_preco_proc_w.vl_medico;
				vl_medico_ww			:= dados_regra_preco_proc_w.vl_medico;
				vl_filme_w			:= dados_regra_preco_proc_w.vl_filme;
				vl_auxiliares_w			:= dados_regra_preco_proc_w.vl_auxiliares;
				nr_seq_regra_pos_estab_w	:= dados_regra_preco_proc_w.nr_sequencia;
				cd_edicao_amb_w			:= dados_regra_preco_proc_w.cd_edicao_amb;
				nr_aux_regra_w			:= dados_regra_preco_proc_w.nr_auxiliares;
				nr_seq_regra_autogerado_w	:= dados_regra_preco_proc_w.nr_seq_regra_autogerado;
				cd_moeda_autogerado_w		:= dados_regra_preco_proc_w.cd_moeda_autogerado;
				vl_ch_honorarios_w		:= dados_regra_preco_proc_w.vl_ch_honorarios;
				vl_ch_custo_oper_w		:= dados_regra_preco_proc_w.vl_ch_custo_oper;
				vl_ch_custo_filme_w		:= dados_regra_preco_proc_w.vl_ch_custo_filme;
				vl_ch_anestesista_w		:= dados_regra_preco_proc_w.vl_ch_anestesista;
				nr_auxiliares_w			:= coalesce(dados_regra_preco_proc_w.nr_auxiliares,0);


	if (nr_auxiliares_atend_w > nr_auxiliares_w) then
		nr_auxiliares_w	:= nr_auxiliares_atend_w;
	end if;	
	-- Somente verificar a regra de taxa de procedimento de intercambio caso seja um procedimento
	if (ie_tipo_despesa_p = '1') then
		SELECT * FROM pls_obter_regra_tx_proc_inter(dados_conta_proc_valor_w, dados_beneficiario_valor_w, nr_seq_regra_tx_w, tx_item_regra_w) INTO STRICT nr_seq_regra_tx_w, tx_item_regra_w;
		
		if (tx_item_regra_w IS NOT NULL AND tx_item_regra_w::text <> '') then
			tx_item_w := tx_item_regra_w;
		end if;
	end if;
	
	/*insidencia da taxa da regra de quantidade de execucao*/

	vl_medico_w		:= dividir((vl_medico_w*tx_medico_w),100);
	vl_custo_operacional_w	:= dividir((vl_custo_operacional_w * tx_co_w),100);
	vl_anestesista_w	:= dividir((vl_anestesista_w*tx_anestesista_w),100);
	vl_auxiliares_w		:= dividir((vl_auxiliares_w*tx_auxiliares_w),100);
	if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_exec_w, cd_estabelecimento_w) = 'S') then
		vl_filme_w		:= dividir((vl_filme_w*tx_material_w),100);
	end if;
		
	vl_medico_w		:= dividir((vl_medico_w*tx_item_w),100);
	vl_custo_operacional_w	:= dividir((vl_custo_operacional_w * tx_item_w),100);
	vl_anestesista_w	:= dividir((vl_anestesista_w*tx_item_w),100);
	vl_auxiliares_w		:= dividir((vl_auxiliares_w*tx_item_w),100);
	if (pls_cta_valorizacao_pck.obter_se_taxa_filme(nr_seq_prestador_exec_w, cd_estabelecimento_w) = 'S') then
		vl_filme_w		:= dividir((vl_filme_w*tx_item_w),100);
	end if;
	
	/* Tratar os adicionais por horario OS - 331057 Robson */
	dados_adic_horario_w := pls_cta_valorizacao_pck.pls_define_adic_horario(     	dados_conta_proc_valor_w, dados_prestador_exec_w, dados_prestador_prot_w, dados_conta_valor_w, dados_procedimento_w, dados_beneficiario_valor_w, 'O', nm_usuario_p, cd_estabelecimento_w, dados_adic_horario_w);
								
	/* Atualizar os valores em relacao a taxa adicional de horario do item */

	if (dados_adic_horario_w.nr_sequencia IS NOT NULL AND dados_adic_horario_w.nr_sequencia::text <> '') then
		vl_filme_w		:= (dados_adic_horario_w.tx_materiais		* vl_filme_w);
		vl_custo_operacional_w	:= (dados_adic_horario_w.tx_custo_operacional	* vl_custo_operacional_w);
		vl_medico_w		:= (dados_adic_horario_w.tx_medico		* vl_medico_w);
		vl_auxiliares_w		:= (dados_adic_horario_w.tx_auxiliares		* vl_auxiliares_w);
		vl_anestesista_w	:= (dados_adic_horario_w.tx_anestesista		* vl_anestesista_w);
	end if;
	
	vl_custo_operacional_w	:= (vl_custo_operacional_w	* qt_procedimento_w);
	vl_anestesista_w	:= (vl_anestesista_w 		* qt_procedimento_w);
	vl_medico_w		:= (vl_medico_w 		* qt_procedimento_w);
	vl_filme_w		:= (vl_filme_w 			* qt_procedimento_w);
	vl_auxiliares_w		:= (vl_auxiliares_w		* qt_procedimento_w);
	
	SELECT * FROM pls_gerar_honorario_proc( 	nr_sequencia_p, cd_procedimento_w, ie_origem_proced_w, nr_seq_grau_partic_w, ie_tipo_guia_w, nr_seq_tipo_atendimento_w, ie_tipo_conta_w, nr_seq_prestador_exec_w, ie_tipo_protocolo_w, nr_auxiliares_w, ie_status_w, ie_repassa_medico_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, cd_estabelecimento_w, dt_procedimento_w, nm_usuario_p, nr_seq_categoria_w, dt_preco_w, nr_seq_tipo_acomodacao_w, nr_seq_clinica_w, nr_seq_plano_w, 'O', nr_seq_contrato_w, cd_convenio_w, cd_categoria_w, ie_tipo_contratacao_w, qt_dias_internacao_w, nr_seq_segurado_w, nr_seq_intercambio_w, ie_internado_w, ie_tecnica_utilizada_w, 'A', 'X', ie_carater_internacao_w, 'P', vl_total_partic_w, ie_tipo_partic_prof_w, null, null, 'A') INTO STRICT vl_total_partic_w, ie_tipo_partic_prof_w;
elsif (ie_tipo_despesa_p in ('2','3')) then /* Atualizar os valores das taxas e diarias */
	dados_regra_preco_servico_w := pls_define_preco_servico(	cd_estabelecimento_w, nr_seq_prestador_exec_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, 'O', nr_sequencia_p, ie_gravar_log_p, ie_tipo_contratacao_w, nr_seq_plano_w, '', '', '', nr_seq_contrato_w, nr_seq_classificacao_prest_w, nr_seq_categoria_w, ie_internado_w, ie_tipo_vinculo_w, nr_seq_intercambio_w, nr_seq_segurado_w, ie_tipo_intercambio_w, ie_tipo_guia_w, nr_seq_cbo_saude_w, ie_carater_internacao_w, nr_seq_clinica_w, nr_seq_tipo_atendimento_w, nr_seq_tipo_acomodacao_w, dados_prestador_prot_w, dados_conta_valor_w, dados_regra_preco_servico_w, null, cd_prestador_solic_w, ie_regime_atendimento_w, ie_saude_ocupacional_w);
	
	nr_seq_regra_pos_estab_w	:= dados_regra_preco_servico_w.nr_sequencia;
	vl_beneficiario_w 		:= dados_regra_preco_servico_w.vl_servico;
	cd_tabela_servico_w		:= dados_regra_preco_servico_w.cd_tabela_servico;
	dt_vigencia_w			:= dados_regra_preco_servico_w.dt_vigencia;
								
elsif (ie_tipo_despesa_p = '4') then

	SELECT * FROM pls_define_preco_pacote(	cd_estabelecimento_w, nr_seq_prestador_exec_w, nr_seq_tipo_acomodacao_w, dt_preco_w, cd_procedimento_w, ie_origem_proced_w, ie_internado_w, nr_seq_plano_w, nr_contrato_w, nr_seq_congenere_w, nm_usuario_p, ie_origem_conta_w, ie_tipo_intercambio_w, nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_beneficiario_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_filme_w, nr_seq_intercambio_w, nr_seq_classificacao_prest_w, nr_sequencia_p, nr_seq_segurado_w, null, 'S', null, 1) INTO STRICT nr_seq_pacote_w, nr_seq_regra_pacote_w, cd_proc_pacote_w, ie_origem_pacote_w, vl_beneficiario_w, vl_medico_w, vl_anestesista_w, vl_auxiliares_w, vl_custo_operacional_w, vl_filme_w;
				
end if;

/* Atualizar os valores em relacao a quantidade do item */

vl_beneficiario_w	:= (coalesce(vl_beneficiario_w,0) 		* qt_procedimento_w);

select	count(1)
into STRICT	qt_partic_w
from	pls_proc_participante
where	nr_seq_conta_proc = nr_sequencia_p;

if (qt_partic_w <= 1) then
	SELECT * FROM pls_obter_se_cobra_co_filme(nr_sequencia_p, dt_procedimento_w, cd_estabelecimento_w, ie_cobrar_co_w, ie_cobrar_filme_w, nr_seq_regra_co_filme_w) INTO STRICT ie_cobrar_co_w, ie_cobrar_filme_w, nr_seq_regra_co_filme_w;
end if;

if (ie_cobrar_co_w = 'N') then
	vl_custo_operacional_w	:= 0;		
end if;

if (ie_cobrar_filme_w = 'N') then
	vl_filme_w 		:= 0;
end if;

if (ie_tipo_despesa_p = '1') then

	if (ie_repassa_medico_w	= 'H') and (ie_honorario_pos_w	= 'S') then
		vl_beneficiario_w	:= coalesce(vl_total_partic_w,0);
	elsif (ie_repassa_medico_w IS NOT NULL AND ie_repassa_medico_w::text <> '') then
		vl_beneficiario_w	:= coalesce(vl_total_partic_w,0) + coalesce(vl_custo_operacional_w,0) + coalesce(vl_filme_w,0);
	else
		vl_beneficiario_w 	:= 0;
	end if;
else
	vl_beneficiario_w:= dividir((coalesce(vl_beneficiario_w,0)*tx_item_w),100);		
end if;

if (coalesce(nr_seq_regra_horario_w,0) > 0) then
	vl_beneficiario_w	:= (dados_adic_horario_w.tx_procedimento	* coalesce(vl_beneficiario_w,0));
end if;

update	pls_conta_proc
set	vl_beneficiario		= coalesce(vl_beneficiario_w,0),
	nr_seq_regra_pos_estab	= nr_seq_regra_pos_estab_w,
	nr_seq_preco_autogerado	= nr_seq_regra_autogerado_w,
	vl_procedimento_ptu	= 0,
	vl_material_ptu		= 0,
	vl_co_ptu		= 0
where	nr_sequencia		= nr_sequencia_p;

dados_regra_preco_proc_p.vl_proc_tabela			:= coalesce(dados_regra_preco_proc_w.vl_proc_tabela,dados_regra_preco_servico_w.vl_servico);
dados_regra_preco_proc_p.vl_ch_honorarios		:= coalesce(dados_regra_preco_proc_w.vl_ch_honorarios,dados_regra_preco_servico_w.vl_ch_servico);
dados_regra_preco_proc_p.cd_moeda_autogerado		:= coalesce(dados_regra_preco_proc_w.cd_moeda_autogerado,dados_regra_preco_servico_w.cd_moeda);
dados_regra_preco_proc_p.vl_custo_operacional_tab	:= dados_regra_preco_proc_w.vl_custo_operacional_tab;
dados_regra_preco_proc_p.qt_filme_tab			:= dados_regra_preco_proc_w.qt_filme_tab;
dados_regra_preco_proc_p.vl_base_filme			:= dados_regra_preco_proc_w.vl_base_filme;
dados_regra_preco_proc_p.cd_porte_anestesico		:= dados_regra_preco_proc_w.cd_porte_anestesico;
dados_regra_preco_proc_p.nr_seq_criterio_horario	:= dados_adic_horario_w.nr_sequencia;
dados_regra_preco_proc_p.vl_medico			:= vl_medico_ww;
dados_regra_preco_proc_p.tx_item			:= tx_item_w;
dados_regra_preco_proc_p.nr_seq_regra_tx_proc_int	:= nr_seq_regra_tx_w;
dados_regra_preco_proc_p.vl_procedimento		:= coalesce(dados_regra_preco_proc_w.vl_procedimento,dados_regra_preco_servico_w.vl_servico);


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_proc_co ( nr_sequencia_p pls_conta_proc.nr_sequencia%type, ie_tipo_despesa_p text, ie_gravar_log_p text, ie_pos_estab_faturamento_p pls_parametros.ie_pos_estab_faturamento%type, ie_geracao_pos_estabelecido_p pls_parametros.ie_geracao_pos_estabelecido%type, nm_usuario_p usuario.nm_usuario%type, dados_regra_preco_proc_p INOUT pls_cta_valorizacao_pck.dados_regra_preco_proc) FROM PUBLIC;

