-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sip_valida_anexoii_contab ( nr_seq_lote_sip_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
ie_tipo_despesa_w		varchar(3);
cd_estrutura_sip_w		varchar(40);
ie_tipo_beneficiario_w		varchar(3);
ie_tipo_plano_w			varchar(3);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
vl_despesa_w			double precision	:= 0;
nr_seq_conta_w			bigint;
nr_seq_procedimento_w		bigint;
ie_tipo_protocolo_w		varchar(1);

C01 CURSOR FOR
	SELECT	b.nr_sequencia,
		c.nr_sequencia,
		a.ie_tipo_protocolo,
		cd_procedimento,
		ie_origem_proced,
		coalesce(c.vl_liberado,0) vl_despesa
	from	pls_conta_proc		c,
		pls_conta		b,
		pls_protocolo_conta	a
	where	a.nr_sequencia	= b.nr_seq_protocolo
	and	b.nr_sequencia	= c.nr_seq_conta
	and	a.ie_status	= 3
	and	a.dt_mes_competencia between dt_periodo_inicial_w and fim_dia(dt_periodo_final_w)
	and	coalesce(c.cd_conta_deb::text, '') = ''
	and	coalesce(b.ie_tipo_segurado,'B')	= 'B'
	and	exists (SELECT	1
			from	sip_anexo_ii_procedimento	x
			where	x.cd_procedimento	= c.cd_procedimento
			and	x.ie_origem_proced	= c.ie_origem_proced
			and	x.nr_seq_lote_sip	= nr_seq_lote_sip_p);


BEGIN

delete	from pls_sip_valor_contabil
where	nr_seq_lote_sip	= nr_seq_lote_sip_p;

begin
select	dt_periodo_inicial,
	coalesce(dt_periodo_final, clock_timestamp())
into STRICT	dt_periodo_inicial_w,
	dt_periodo_final_w
from	pls_lote_sip
where	nr_sequencia	= nr_seq_lote_sip_p;
exception
	when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 266994, 'NR_SEQ_LOTE_SIP='||nr_seq_lote_sip_p);
end;

open C01;
loop
fetch C01 into
	nr_seq_conta_w,
	nr_seq_procedimento_w,
	ie_tipo_protocolo_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	vl_despesa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/* Obter a estrutura SIP cadastrada para o procedimento, caso não encontre então busca na procedure SIP_OBTER_ESTRUTURA_PROCED */

	select	coalesce(max(cd_estrutura_sip),'X')
	into STRICT	cd_estrutura_sip_w
	from	sip_anexo_ii_procedimento
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	nr_seq_lote_sip		= nr_seq_lote_sip_p;
	if (cd_estrutura_sip_w	= 'X') then
		cd_estrutura_sip_w	:= sip_obter_estrutura_proced(cd_procedimento_w, ie_origem_proced_w, 'C');
	end if;
	if (cd_procedimento_w	= 0) then
		cd_procedimento_w	:= null;
		ie_origem_proced_w	:= null;
	end if;
	insert into pls_sip_valor_contabil(
		nr_sequencia, cd_estrutura, cd_procedimento,
		ie_origem_proced, dt_atualizacao, nm_usuario,
		vl_despesa_sip, ie_tipo_beneficiario, ie_tipo_plano,
		nr_seq_lote_sip, nr_seq_conta, nr_seq_procedimento,
		ie_tipo_protocolo)
	values (	nextval('pls_sip_valor_contabil_seq'), cd_estrutura_sip_w, cd_procedimento_w,
		ie_origem_proced_w, clock_timestamp(), nm_usuario_p,
		vl_despesa_w, ie_tipo_beneficiario_w, ie_tipo_plano_w,
		nr_seq_lote_sip_p, nr_seq_conta_w, nr_seq_procedimento_w,
		ie_tipo_protocolo_w);
	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sip_valida_anexoii_contab ( nr_seq_lote_sip_p bigint, nm_usuario_p text) FROM PUBLIC;

