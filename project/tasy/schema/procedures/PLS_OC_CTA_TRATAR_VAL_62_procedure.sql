-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_62 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

			/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Realizar o tratamento da validação 62 - Validar referência da guia conforme TISS

Esta rotina terá por finalidade verificar se a referência da guia está correta conforme modelo TISS
Guia de Consulta, não poderá referência ninguém
Guia de SP/SADT - Poderá referenciar apenas guias de consulta ou outra guia de resumo de internação
Guia de  Resumo de internação - Poderá referenciar apenas outra guia de resumo de internação
Guia de Honorário individual - Poderá referências apenas uma guia de Resumo de internação
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
-------------------------------------------------------------------------------------------------------------------

Pontos de atenção:

Alterações:
-------------------------------------------------------------------------------------------------------------------

dgkorz - OS 699845 - 05/03/2014 - Criação da rotina.
-------------------------------------------------------------------------------------------------------------------

dlehmkuhl OS 688483 - 14/04/2014 -

Alteração:	Modificada a forma de trabalho em relação a atualização dos campos de controle
	que basicamente decidem se a ocorrência será ou não gerada. Foi feita também a
	substituição da rotina obterX_seX_geraX.

Motivo:	Necessário realizar essas alterações para corrigir bugs principalmente no que se
	refere a questão de aplicação de filtros (passo anterior ao da validação). Também
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para não inviabilizar a nova solicitação que diz que a exceção deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
tb_valido_w		dbms_sql.varchar2_table;
tb_seqs_selecao_w	dbms_sql.clob_table;
tb_observacao_w		dbms_sql.varchar2_table;

i			integer;
nr_seq_selecao_w	dbms_sql.number_table;
ie_valido_w		dbms_sql.varchar2_table;
ds_observacao_w		dbms_sql.varchar2_table;
ie_gera_ocor_w		varchar(1);
qt_guia_invalida_w	integer;

C01 CURSOR(	dados_regra_pc 	pls_tipos_ocor_pck.dados_regra) FOR
	SELECT	nr_sequencia,
		ie_val_guia_tiss,
		ie_exige_ref_guia,
		coalesce(ie_val_benef, 'N') ie_val_benef
	from	pls_oc_cta_val_guia_tiss regra
	where	regra.nr_seq_oc_cta_comb = dados_regra_pc.nr_sequencia;

C02 CURSOR(	nr_id_transacao_pc	pls_selecao_ocor_cta.nr_id_transacao%type) FOR

		SELECT	sel.nr_sequencia nr_seq_selecao,
			conta.nr_sequencia,
			coalesce(conta.cd_guia_ref,conta.cd_guia_solic_imp) cd_guia_referencia,
			ie_tipo_guia,
			conta.nr_seq_segurado
		from	pls_oc_cta_selecao_ocor_v	sel,
			pls_conta_ocor_v		conta
		where	sel.nr_id_transacao	= nr_id_transacao_pc
		and	sel.ie_valido		= 'S'
		and	conta.nr_sequencia	= sel.nr_seq_conta
		--O tratamento abaixo se deve ao fato da necessidade de consistir apenas as contas que possuem guia de referencia informada
		and	((conta.cd_guia_ref IS NOT NULL AND conta.cd_guia_ref::text <> '') or (conta.cd_guia_solic_imp IS NOT NULL AND conta.cd_guia_solic_imp::text <> ''));
BEGIN

-- Verificar se a regra informada é válida.
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then
	-- Percorrer as regra cadastradas para a validação.
	for	r_c01_w in C01(dados_regra_p) loop

		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

		-- Se a regra validar apenas os registros
		if (r_c01_w.ie_val_guia_tiss = 'S') then
			-- Incializar as listas para cada regra.
			ie_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
			ds_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
			nr_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;

			-- Iniciar o índice para preenchimento da tabela.
			i := 0;
			-- tratamento para procedimentos
			for	r_C02_w in C02(nr_id_transacao_p) loop

				ie_gera_ocor_w := 'N';
				-- Inicializar os valores que serão atualizados na tabela de seleção.
				ds_observacao_w(i) := null;
				nr_seq_selecao_w(i) := r_C02_w.nr_seq_selecao;
				--Irá verificar se a guia é valida segundo o TISS irá retornar 'N' caso for válida e S caso não
				ie_gera_ocor_w := pls_obter_se_guia_ref_valida(	r_c02_w.cd_guia_referencia, r_C02_w.nr_sequencia,r_c02_w.ie_tipo_guia, r_c01_w.ie_exige_ref_guia, r_c01_w.ie_val_guia_tiss, r_c01_w.ie_val_benef, r_c02_w.nr_seq_segurado);
				-- Verificar se o registro atual é válido ou não conforme as parametrizações de regras e regras de exceção.
				ie_valido_w(i) := ie_gera_ocor_w;

				-- Quando a quantidade de itens da lista tiver chegado ao máximo definido na PLS_CTA_CONSISTIR_PCK, então os registros são levados para

				-- o BD e gravados todos de uma vez, pela procedure GERENCIAL_SELECAO_VALIDACAO, que atualiza os registros conforme passado por

				-- parâmetro, o indice e as listas são reiniciados para carregar os novos registros e para que os registros atuais não sejam atualizados novamente em

				-- na próxima carga.
				if (i = pls_cta_consistir_pck.qt_registro_transacao_w) then

					-- Será passado uma lista com todas a sequencias da seleção para a conta e para seus itens, estas sequências serão atualizadas com os mesmos dados da conta,

					-- conforme passado por parâmetro,
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	nr_seq_selecao_w, pls_tipos_ocor_pck.clob_table_vazia,
											'SEQ', ds_observacao_w, ie_valido_w, nm_usuario_p);

					-- Zerar o índice
					i := 0;

					-- Zerar as listas.
					ie_valido_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
					ds_observacao_w		:= pls_tipos_ocor_pck.vchr2_table_vazia;
					nr_seq_selecao_w	:= pls_tipos_ocor_pck.num_table_vazia;
				-- Enquanto os registros não tiverem atingido a carga para gravar na seleção incrementa o índice para armazenar os próximos registros.
				else
					i := i + 1;
				end if;

			end loop; -- C02

			-- Quando tiver sobrado algo na lista irá gravar o que restou após a execução do loop.
			if (nr_seq_selecao_w.count > 0) then

				-- Será passado uma lista com todas a sequencias da seleção para a conta e para seus itens, estas sequências serão atualizadas com os mesmos dados da conta,

				-- conforme passado por parâmetro,
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	nr_seq_selecao_w, pls_tipos_ocor_pck.clob_table_vazia,
										'SEQ', ds_observacao_w, ie_valido_w, nm_usuario_p);
			end if;

		end if;

	end loop; -- r_c01_w
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_62 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

