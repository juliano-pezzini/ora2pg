-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_pls_conta_pos_estab_contab AS (	nr_id	t_rowid);
CREATE TYPE t_pls_log_pos_estabelecido AS (	nr_id	t_rowid);


CREATE OR REPLACE PROCEDURE ctb_pls_contab_prov_fat_proj ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

 
dt_referencia_w			timestamp;
cd_estabelecimento_w		smallint;
cd_conta_debito_w		varchar(20);
cd_conta_credito_w		varchar(20);
vl_contabil_w			double precision;
vl_retorno_w			varchar(2000);
dt_referencia_mens_w		timestamp;
nr_seq_w_movto_cont_w		bigint;
cd_historico_w			bigint;
nr_seq_conta_w			bigint;
cd_centro_debito_w		integer;
cd_centro_credito_w		integer;
ie_centro_custo_deb_w		varchar(1);
ie_centro_custo_cred_w		varchar(1);
nr_seq_item_w			bigint;
ds_item_w			varchar(255);
ie_proc_mat_w			varchar(2);
ie_tipo_item_w			varchar(10);
nr_lote_contabil_w		bigint;
ie_compl_hist_w			varchar(2);
ds_conteudo_w			varchar(4000);
nr_seq_prestador_w		bigint;
nm_prestador_w			varchar(255);
nr_seq_protocolo_w		bigint;
cd_cgc_prestador_w		varchar(14);
cd_cpf_prestador_w		varchar(11);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
nr_seq_regra_cc_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
ie_regulamentacao_w		varchar(2);
cd_pessoa_fisica_w		varchar(20);
dt_referencia_month_w		timestamp;
nr_seq_prot_conta_w		bigint;
nr_nota_fiscal_w		numeric(20);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
nm_agrupador_w			varchar(255);
nm_segurado_w			varchar(255);
nm_pagador_w			varchar(80);
ie_movimento_w			varchar(1);
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
nr_seq_pagador_w		pls_segurado.nr_seq_pagador%type;
dt_referencia_fm_w		timestamp;
ie_status_prov_pagto_w		pls_parametro_contabil.ie_status_prov_pagto%type;
nm_prestador_pgto_w		pls_conta_medica_resumo.nm_prestador_pgto%type;
nr_fatura_w			pls_fatura.nr_fatura%type;
nr_seq_conta_pos_w		pls_conta_pos_estabelecido.nr_sequencia%type;
cd_conta_prov_deb_w		pls_conta_pos_estab_contab.cd_conta_deb_provisao%type;
cd_conta_taxa_deb_w		pls_conta_pos_estab_contab.cd_conta_deb_taxa_prov%type;
cd_conta_dif_deb_w		pls_conta_pos_estab_contab.cd_conta_deb_dif%type;
cd_conta_ndc_deb_w		pls_conta_pos_estab_contab.cd_conta_deb_ndc_prov%type;
cd_conta_prov_cred_w		pls_conta_pos_estab_contab.cd_conta_deb_provisao%type;
cd_conta_taxa_cred_w		pls_conta_pos_estab_contab.cd_conta_deb_taxa_prov%type;
cd_conta_dif_cred_w		pls_conta_pos_estab_contab.cd_conta_deb_dif%type;
cd_conta_ndc_cred_w		pls_conta_pos_estab_contab.cd_conta_deb_ndc_prov%type;
vl_provisao_w			pls_conta_pos_estab_contab.vl_provisao%type;
vl_administracao_w		pls_conta_pos_estab_contab.vl_administracao%type;
vl_diferenca_w			pls_conta_pos_estab_contab.vl_provisao%type;
vl_reembolso_w			pls_conta_pos_estab_contab.vl_custo_operacional%type;
vl_ajuste_w			pls_conta_pos_estab_contab.vl_custo_operacional%type;
cd_historico_prov_w		pls_conta_pos_estab_contab.cd_historico_provisao%type;
cd_historico_taxa_prov_w	pls_conta_pos_estab_contab.cd_historico_taxa_prov%type;
cd_historico_dif_w		pls_conta_pos_estab_contab.cd_historico_dif%type;
cd_historico_ajuste_w		pls_conta_pos_estab_contab.cd_historico_ajuste%type;
cd_historico_ndc_prov_w		pls_conta_pos_estab_contab.cd_historico_ndc_prov%type;
ie_lote_ajuste_fat_w		pls_parametro_contabil.ie_lote_ajuste_fat%type;
ie_lote_taxa_fat_w		pls_parametro_contabil.ie_lote_taxa_fat%type;
ie_lote_reembolso_fat_w		pls_parametro_contabil.ie_lote_reembolso_fat%type;
ie_lote_dif_fat_w		pls_parametro_contabil.ie_lote_dif_fat%type;
nr_seq_log_w			pls_log_pos_estabelecido.nr_sequencia%type;
nr_lote_contabil_prov_w		pls_conta_pos_estab_contab.nr_lote_contabil_prov%type;
nr_id_pos_estab_contab_w	oid;
nr_id_log_pos_estab_w		oid;

type t_rowid is table of varchar(18) index by integer;
pls_conta_pos_estab_contab_w		t_pls_conta_pos_estab_contab;
pls_log_pos_estabelecido_w		t_pls_log_pos_estabelecido;

type t_movimento_contabil is table 
	of w_movimento_contabil%rowtype index by integer;
movimento_contabil_w	t_movimento_contabil;
item_mov_contabil_w	w_movimento_contabil%rowtype;

c_faturamento CURSOR FOR 
	SELECT	CASE WHEN coalesce(d.nr_seq_material,0)=0 THEN 'P'  ELSE 'M' END , 
		e.nr_sequencia, 
		e.cd_conta_deb_provisao, 
		e.cd_conta_deb_taxa_prov, 
		e.cd_conta_deb_dif, 
		e.cd_conta_deb_ndc_prov, 
		e.cd_conta_cred_provisao, 
		e.cd_conta_cred_taxa_prov, 
		e.cd_conta_cred_dif, 
		e.cd_conta_cred_ndc_prov, 
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * coalesce(e.vl_provisao,0), 
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * coalesce(e.vl_administracao,0), 
		CASE WHEN s.ie_tipo_segurado='I' THEN (pls_obter_vl_pag_fat_pos(e.nr_sequencia,'T'))::numeric   ELSE 0 END , 
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * (coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_administracao,0)) vl_reembolso, 
		CASE WHEN f.ie_status_faturamento_new='C' THEN -1 WHEN f.ie_status_faturamento_new='N' THEN -1 WHEN f.ie_status_faturamento_new='U' THEN -1  ELSE 1 END  * (coalesce(e.vl_custo_operacional,0) - coalesce(e.vl_provisao,0)) vl_contab_ajuste, 
		trunc(f.dt_atualizacao_nrec), 
		e.cd_historico_provisao, 
		e.cd_historico_taxa_prov, 
		e.cd_historico_dif, 
		e.cd_historico_ajuste, 
		e.cd_historico_ndc_prov, 
		b.nr_sequencia, 
		b.nr_seq_segurado, 
		b.nr_seq_protocolo, 
		b.nr_seq_prestador_exec, 
		b.nr_seq_prot_conta, 
		d.cd_procedimento, 
		d.ie_origem_proced, 
		d.nr_seq_material, 
		b.nr_seq_plano, 
		coalesce((	SELECT	max(r.nm_prestador_pgto) 
			from	pls_conta_medica_resumo r 
			where	b.nr_sequencia	= r.nr_seq_conta 
			and	r.nr_sequencia	= e.nr_seq_conta_resumo ), b.nr_seq_prestador_exec) nm_prestador_pgto, 
		substr(pls_obter_dados_segurado(b.nr_seq_segurado,'N'),1,255) nm_segurado, 
		d.nr_sequencia, 
		f.nr_sequencia, 
		e.nr_lote_contabil_prov, 
		e.oid nr_id_pos_estab_contab, 
		f.oid nr_id_log_pos_estab 
	from	pls_log_pos_estabelecido	f, 
		pls_conta_pos_estab_contab 	e, 
		pls_conta_pos_estabelecido	d, 
		pls_conta			b, 
		pls_protocolo_conta		a, 
		pls_segurado			s 
	where	d.nr_sequencia		= f.nr_seq_conta_pos 
	and	b.nr_sequencia		= f.nr_seq_conta 
	and	d.nr_sequencia		= e.nr_seq_conta_pos 
	and	b.nr_sequencia		= d.nr_seq_conta 
	and	a.nr_sequencia		= b.nr_seq_protocolo 
	and	s.nr_sequencia 		= b.nr_seq_segurado 
	and	f.dt_atualizacao_nrec between dt_referencia_month_w and dt_referencia_fm_w 
	and	((ie_status_prov_pagto_w <> 'F') or (ie_status_prov_pagto_w = 'F' and b.ie_status = 'F')) 
	and	coalesce(f.ie_tipo_registro,'H') = 'H' -- Hist√≥rico 
	and	coalesce(f.nr_lote_contabil, 0) = 0 
	and	((coalesce(f.ie_status_faturamento_ant,'X') in ('C','N','U','X') 
	and	f.ie_status_faturamento_new in ('L','P')) 
	or (coalesce(e.nr_lote_contabil_prov, 0) <> 0) 
	or (e.dt_mes_competencia between dt_referencia_month_w and dt_referencia_fm_w 
	and	a.cd_estabelecimento	= cd_estabelecimento_w 
	and	a.ie_situacao		!= 'RE' 
	and	coalesce(d.ie_situacao,'A')	= 'A' 
	and	f.ie_status_faturamento_ant in ('L','P') 
	and	f.ie_status_faturamento_new in ('C','N','U') 
	and	coalesce(e.nr_lote_contabil_prov, 0) = 0)) 
	and	coalesce((	select	max(r.ie_situacao) 
			from	pls_conta_medica_resumo r 
			where	b.nr_sequencia	= r.nr_seq_conta 
			and	r.nr_sequencia	= e.nr_seq_conta_resumo),'X')	<> 'I';
	
c_movimento CURSOR FOR 
	SELECT	oid 
	from	movimento_contabil 
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento_w CURSOR FOR 
	SELECT	oid 
	from	w_movimento_contabil 
	where	nr_lote_contabil	= nr_lote_contabil_p;
		
c_tipo_movimento CURSOR FOR 
	SELECT	'P' 
	 
	where (ie_lote_taxa_fat_w	not('P','A') 
	and	ie_lote_reembolso_fat_w	not in ('P','A')) 
	
union
 
	SELECT	'A' 
	 
	where	vl_ajuste_w <> 0 
	and	ie_lote_ajuste_fat_w	= 'P' 
	
union
 
	select	'T' 
	 
	where	ie_lote_taxa_fat_w	in ('P','A') 
	
union
 
	select	'D' 
	 
	where	ie_lote_dif_fat_w	= 'P' 
	or (coalesce(ie_lote_dif_fat_w,'X') = 'X' 
	and	ie_lote_ajuste_fat_w	= 'P') 
	
union
 
	select	'R' 
	 
	where	ie_lote_reembolso_fat_w	in ('P','A');
	
BEGIN 
select	dt_referencia, 
	cd_estabelecimento, 
	nr_lote_contabil, 
	cd_tipo_lote_contabil 
into STRICT	dt_referencia_w, 
	cd_estabelecimento_w, 
	nr_lote_contabil_w, 
	cd_tipo_lote_contabil_w 
from	lote_contabil 
where	nr_lote_contabil	= nr_lote_contabil_p;
 
select	coalesce(max(ie_status_prov_pagto),'N'), 
	max(coalesce(ie_lote_ajuste_fat,'R')), 
	max(coalesce(ie_lote_taxa_fat,'R')), 
	max(coalesce(ie_lote_reembolso_fat,'R')), 
	max(ie_lote_dif_fat) 
into STRICT	ie_status_prov_pagto_w, 
	ie_lote_ajuste_fat_w, 
	ie_lote_taxa_fat_w, 
	ie_lote_reembolso_fat_w, 
	ie_lote_dif_fat_w 
from	pls_parametro_contabil 
where	cd_estabelecimento = cd_estabelecimento_w;
 
dt_referencia_month_w	:= trunc(dt_referencia_w,'month');
dt_referencia_fm_w	:= fim_dia(fim_mes(dt_referencia_month_w));
 
delete	from w_pls_movimento_sem_conta 
where	ie_tipo_item in ('PCM','MCM') 
and	dt_referencia between dt_referencia_month_w and dt_referencia_fm_w;
 
if (ie_exclusao_p = 'S') then 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
 
	for reg in c_movimento 
		loop   
		delete	from movimento_contabil 
		where  rowid	= reg.rowid;
		end loop;
	 
	update	pls_conta_pos_estab_contab 
	set	nr_lote_contabil_prov	= 0, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_lote_contabil_prov	= nr_lote_contabil_p;
	 
	commit;
	 
	update	pls_log_pos_estabelecido 
	set	nr_lote_contabil	= 0, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_lote_contabil	= nr_lote_contabil_p;
	 
	commit;
	 
	update	lote_contabil 
	set	vl_credito		= 0, 
		vl_debito		= 0, 
		dt_geracao_lote		 = NULL 
	where	nr_lote_contabil	= nr_lote_contabil_p;
	 
	commit;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	for reg in c_movimento_w 
		loop   
		delete	from w_movimento_contabil 
		where  rowid	= reg.rowid;
		end loop;
	commit;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	 
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_SEQ_CONTA');
	 
	/* Paulo 29/09/2009 - OS 168594 */
 
	begin 
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception 
	when others then 
		ie_compl_hist_w	:= 'N';
	end;
	 
	nr_seq_w_movto_cont_w	:= 0;
	 
	open c_faturamento;
	loop 
	fetch c_faturamento into 
		ie_proc_mat_w, 
		nr_seq_item_w, 
		cd_conta_prov_deb_w, 
		cd_conta_taxa_deb_w, 
		cd_conta_dif_deb_w, 
		cd_conta_ndc_deb_w, 
		cd_conta_prov_cred_w, 
		cd_conta_taxa_cred_w, 
		cd_conta_dif_cred_w, 
		cd_conta_ndc_cred_w, 
		vl_provisao_w, 
		vl_administracao_w, 
		vl_diferenca_w, 
		vl_reembolso_w, 
		vl_ajuste_w, 
		dt_referencia_mens_w, 
		cd_historico_prov_w, 
		cd_historico_taxa_prov_w, 
		cd_historico_dif_w, 
		cd_historico_ajuste_w, 
		cd_historico_ndc_prov_w, 
		nr_seq_conta_w, 
		nr_seq_segurado_w, 
		nr_seq_protocolo_w, 
		nr_seq_prestador_w, 
		nr_seq_prot_conta_w, 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_material_w, 
		nr_seq_plano_w, 
		nm_prestador_pgto_w, 
		nm_segurado_w, 
		nr_seq_conta_pos_w, 
		nr_seq_log_w, 
		nr_lote_contabil_prov_w, 
		nr_id_pos_estab_contab_w, 
		nr_id_log_pos_estab_w;
	EXIT WHEN NOT FOUND; /* apply on c_faturamento */
		begin 
		if (coalesce(nr_seq_plano_w::text, '') = '') then 
			begin 
			select	b.ie_regulamentacao, 
				b.nr_sequencia 
			into STRICT	ie_regulamentacao_w, 
				nr_seq_plano_w 
			from	pls_segurado	a, 
				pls_plano	b 
			where	b.nr_sequencia	= a.nr_seq_plano 
			and	a.nr_sequencia	= nr_seq_segurado_w;
			exception 
			when others then 
				ie_regulamentacao_w	:= null;
				nr_seq_plano_w		:= null;
			end;
		else 
			begin 
			select	b.ie_regulamentacao 
			into STRICT	ie_regulamentacao_w 
			from	pls_plano	b 
			where	b.nr_sequencia	= nr_seq_plano_w;
			exception 
			when others then 
				ie_regulamentacao_w	:= null;
			end;
		end if;
		 
		open c_tipo_movimento;
		loop 
		fetch c_tipo_movimento into 
			ie_movimento_w;
		EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
			begin 
			cd_centro_debito_w	:= null;
			cd_centro_credito_w	:= null;
			ds_compl_historico_w	:= null;
			ds_item_w		:= null;
			 
			if (ie_movimento_w = 'P') then /* Provis√£o */
 
				cd_conta_debito_w	:= cd_conta_prov_deb_w;
				cd_conta_credito_w	:= cd_conta_prov_cred_w;				
				cd_historico_w		:= cd_historico_prov_w;
				vl_contabil_w		:= vl_provisao_w;
				nm_tabela_w		:= 'PLS_CONTA_POS_ESTABELECIDO';
				nm_atributo_w		:= 'VL_LIBERADO';
				 
				if (coalesce(nr_seq_log_w,0) = 0) then 
					nr_seq_info_ctb_w	:= 32;
				else 
					nr_seq_info_ctb_w	:= 76;
				end if;
				 
			elsif (ie_movimento_w = 'T') then /* Taxa */
 
				cd_conta_debito_w	:= cd_conta_taxa_deb_w;
				cd_conta_credito_w	:= cd_conta_taxa_cred_w;
				cd_historico_w		:= cd_historico_taxa_prov_w;
				vl_contabil_w		:= vl_administracao_w;
				nm_tabela_w		:= 'PLS_CONTA_POS_ESTABELECIDO';
				nm_atributo_w		:= 'VL_ADMINISTRACAO';
				nr_seq_info_ctb_w	:= 33;
				 
			elsif (ie_movimento_w = 'D') then /* Diferen√ßa */
 
				cd_conta_debito_w	:= cd_conta_dif_deb_w;
				cd_conta_credito_w	:= cd_conta_dif_cred_w;
				cd_historico_w		:= cd_historico_dif_w;
				vl_contabil_w		:= vl_diferenca_w;
				nm_tabela_w		:= 'PLS_CONTA_POS_ESTABELECIDO';
				nm_atributo_w		:= 'VL_DIFERENCA';
				nr_seq_info_ctb_w	:= 32;
			 
			elsif (ie_movimento_w = 'R') then /* Reembolso */
 
				cd_conta_debito_w	:= cd_conta_ndc_deb_w;
				cd_conta_credito_w	:= cd_conta_ndc_cred_w;
				cd_historico_w		:= cd_historico_ndc_prov_w;
				vl_contabil_w		:= vl_reembolso_w;
				nm_tabela_w		:= 'PLS_CONTA_POS_ESTABELECIDO';
				nm_atributo_w		:= 'VL_REEMBOLSO';
				nr_seq_info_ctb_w	:= 32;	
			 
			elsif (ie_movimento_w = 'A') then /* Ajuste */
 
				cd_conta_debito_w	:= cd_conta_prov_deb_w;
				cd_conta_credito_w	:= cd_conta_prov_cred_w;
				cd_historico_w		:= cd_historico_ajuste_w;
				vl_contabil_w		:= vl_ajuste_w;	
				nm_tabela_w		:= 'PLS_CONTA_POS_ESTABELECIDO';
				nm_atributo_w		:= 'VL_AJUSTE';
				nr_seq_info_ctb_w	:= 32;
			end if;
			 
			if (coalesce(cd_conta_debito_w::text, '') = '') or (coalesce(cd_conta_credito_w::text, '') = '') then 
				if (ie_proc_mat_w	= 'P') then 
					ie_tipo_item_w	:= 'PCM';
					ds_item_w	:= substr(obter_descricao_procedimento(cd_procedimento_w,ie_origem_proced_w),1,255);
				else 
					ds_item_w	:= substr(obter_descricao_padrao('PLS_MATERIAL','DS_MATERIAL',nr_seq_material_w),1,255);
					ie_tipo_item_w	:= 'MCM';
				end if;
				 
				if (coalesce(cd_conta_debito_w::text, '') = '') then				 
					insert into w_pls_movimento_sem_conta(nr_sequencia, 
						cd_item, 
						ds_item, 
						ie_tipo_item, 
						dt_atualizacao, 
						nm_usuario, 
						vl_item, 
						dt_referencia, 
						nr_lote_contabil, 
						ie_proc_mat_item, 
						ie_deb_cred, 
						ds_observacao, 
						cd_tipo_lote_contabil) 
					values (nextval('w_pls_movimento_sem_conta_seq'), 
						nr_seq_item_w, 
						ds_item_w, 
						ie_tipo_item_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						vl_contabil_w, 
						dt_referencia_w, 
						nr_lote_contabil_w, 
						ie_proc_mat_w, 
						'D', 
						wheb_mensagem_pck.get_texto(300343), -- Provis√£o de faturamento 
						cd_tipo_lote_contabil_w);
				end if;
				 
				if (coalesce(cd_conta_credito_w::text, '') = '') then					 
					insert into w_pls_movimento_sem_conta(nr_sequencia, 
						cd_item, 
						ds_item, 
						ie_tipo_item, 
						dt_atualizacao, 
						nm_usuario, 
						vl_item, 
						dt_referencia, 
						nr_lote_contabil, 
						ie_proc_mat_item, 
						ie_deb_cred, 
						ds_observacao, 
						cd_tipo_lote_contabil) 
					values (nextval('w_pls_movimento_sem_conta_seq'), 
						nr_seq_item_w, 
						ds_item_w, 
						ie_tipo_item_w, 
						clock_timestamp(), 
						nm_usuario_p, 
						vl_contabil_w, 
						dt_referencia_w, 
						nr_lote_contabil_w, 
						ie_proc_mat_w, 
						'C', 
						wheb_mensagem_pck.get_texto(300343), -- Provis√£o de faturamento 
						cd_tipo_lote_contabil_w);
				end if;
			end if;
			 
			if (cd_conta_debito_w IS NOT NULL AND cd_conta_debito_w::text <> '') or (cd_conta_credito_w IS NOT NULL AND cd_conta_credito_w::text <> '') then 
				 
				if (nm_agrupador_w = 'NR_SEQ_CONTA') then 
					nr_seq_agrupamento_w	:= nr_seq_conta_w;
				elsif (nm_agrupador_w = 'NR_SEQ_PROTOCOLO') then 
					nr_seq_agrupamento_w	:= nr_seq_protocolo_w;
				end if;
				 
				if (ie_compl_hist_w = 'S') then 
					if (coalesce(nr_seq_prestador_w,0) > 0) then 
						select	a.cd_pessoa_fisica, 
							a.cd_cgc 
						into STRICT	cd_pessoa_fisica_w, 
							cd_cgc_prestador_w 
						from	pls_prestador	a 
						where	a.nr_sequencia	= nr_seq_prestador_w;
						 
						begin 
						nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
						exception 
						when others then 
							nm_prestador_w	:= null;
						end;
						 
						if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then 
							select	nr_cpf 
							into STRICT	cd_cpf_prestador_w 
							from	pessoa_fisica 
							where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
						end if;
					end if;
					 
					select	max(nr_nota_fiscal) 
					into STRICT	nr_nota_fiscal_w 
					from	pls_prot_conta_titulo 
					where	nr_sequencia	= nr_seq_prot_conta_w;
					 
					select	max(obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc)), 
						max(b.nr_seq_pagador) 
					into STRICT	nm_pagador_w, 
						nr_seq_pagador_w 
					from	pls_contrato_pagador a, 
						pls_segurado b 
					where	a.nr_sequencia	= b.nr_seq_pagador 
					and	b.nr_sequencia	= nr_seq_segurado_w;
					 
					select	max(nr_fatura) 
					into STRICT	nr_fatura_w 
					from (SELECT	e.nr_fatura 
						from	pls_conta_pos_estabelecido a, 
							pls_fatura_proc b, 
							pls_fatura_conta c, 
							pls_fatura_evento d, 
							pls_fatura e 
						where	a.nr_sequencia = b.nr_seq_conta_pos_estab 
						and	c.nr_sequencia = b.nr_seq_fatura_conta 
						and	d.nr_sequencia = c.nr_seq_fatura_evento 
						and	e.nr_sequencia = d.nr_seq_fatura 
						and	a.nr_sequencia = nr_seq_conta_pos_w 
						
union all
 
						SELECT	e.nr_fatura 
						from	pls_conta_pos_estabelecido a, 
							pls_fatura_mat b, 
							pls_fatura_conta c, 
							pls_fatura_evento d, 
							pls_fatura e 
						where	a.nr_sequencia = b.nr_seq_conta_pos_estab 
						and	c.nr_sequencia = b.nr_seq_fatura_conta 
						and	d.nr_sequencia = c.nr_seq_fatura_evento 
						and	e.nr_sequencia = d.nr_seq_fatura 
						and	a.nr_sequencia = nr_seq_conta_pos_w) alias1;
					 
					ds_conteudo_w	:= substr(	nr_seq_prestador_w	||'#@'|| 
									nm_prestador_w		||'#@'|| 
									nr_seq_protocolo_w	||'#@'|| 
									nr_seq_conta_w		||'#@'|| 
									cd_cgc_prestador_w	||'#@'|| 
									cd_cpf_prestador_w	||'#@'|| 
									nr_nota_fiscal_w	||'#@'|| 
									nr_seq_pagador_w	||'#@'|| 
									nm_prestador_pgto_w	||'#@'|| 
									nm_segurado_w		||'#@'|| 
									nr_fatura_w		||'#@'|| 
									nm_pagador_w, 1,4000);
					 
					begin 
					ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
					exception 
					when others then 
						ds_compl_historico_ww	:= null;
					end;
					 
					ds_compl_historico_w	:= substr(coalesce(ds_compl_historico_ww, ds_compl_historico_w),1,255);
				end if;
				 
				if (cd_conta_debito_w IS NOT NULL AND cd_conta_debito_w::text <> '') then 
				 
					select	ie_centro_custo 
					into STRICT	ie_centro_custo_deb_w 
					from	conta_contabil 
					where	cd_conta_contabil	= cd_conta_debito_w;
					 
					if (ie_centro_custo_deb_w = 'S') then 
						SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_debito_w, nr_seq_regra_cc_w) INTO STRICT cd_centro_debito_w, nr_seq_regra_cc_w;
					end if;
					 
					nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					 
					item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
					item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
					item_mov_contabil_w.cd_conta_contabil	:= cd_conta_debito_w;
					item_mov_contabil_w.ie_debito_credito	:= 'D';
					item_mov_contabil_w.cd_historico	:= cd_historico_w;
					item_mov_contabil_w.dt_movimento	:= dt_referencia_mens_w;
					item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
					item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
					item_mov_contabil_w.cd_centro_custo	:= cd_centro_debito_w;
					item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
					item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
					item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_item_w;
					item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
					item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
					item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
					 
					movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
					 
				end if;
					 
				if (cd_conta_credito_w IS NOT NULL AND cd_conta_credito_w::text <> '') then 
				 
					select	ie_centro_custo 
					into STRICT	ie_centro_custo_cred_w 
					from	conta_contabil 
					where	cd_conta_contabil	= cd_conta_credito_w;
					 
					if (ie_centro_custo_cred_w = 'S') then 
						SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_credito_w, nr_seq_regra_cc_w) INTO STRICT cd_centro_credito_w, nr_seq_regra_cc_w;
					end if;
					 
					nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					 
					item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
					item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
					item_mov_contabil_w.cd_conta_contabil	:= cd_conta_credito_w;
					item_mov_contabil_w.ie_debito_credito	:= 'C';
					item_mov_contabil_w.cd_historico	:= cd_historico_w;
					item_mov_contabil_w.dt_movimento	:= dt_referencia_mens_w;
					item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
					item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
					item_mov_contabil_w.cd_centro_custo	:= cd_centro_credito_w;
					item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
					item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
					item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_item_w;
					item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
					item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
					item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
					 
					movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
				end if;
 
				if (movimento_contabil_w.count >= 1000) then 
					begin						 
					forall i in movimento_contabil_w.first .. movimento_contabil_w.last 
						insert into w_movimento_contabil values movimento_contabil_w(i);
					commit;
					movimento_contabil_w.delete;
					end;
				end if;
			end if;
			end;
		end loop;
		close c_tipo_movimento;
		 
		CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		 
		if (coalesce(nr_lote_contabil_prov_w, 0) = 0) then 
			pls_conta_pos_estab_contab_w.nr_id(pls_conta_pos_estab_contab_w.nr_id.count)	:= nr_id_pos_estab_contab_w;
			 
			if (pls_conta_pos_estab_contab_w.nr_id.count >= 1000) then 
				begin 
				forall i in pls_conta_pos_estab_contab_w.nr_id.first .. pls_conta_pos_estab_contab_w.nr_id.last 
					update	pls_conta_pos_estab_contab	a 
					set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
					where	rowid				= pls_conta_pos_estab_contab_w.nr_id(i);
				commit;
				pls_conta_pos_estab_contab_w.nr_id.delete;
				end;
			end if;
		end if;
		 
		pls_log_pos_estabelecido_w.nr_id(pls_log_pos_estabelecido_w.nr_id.count)	:= nr_id_log_pos_estab_w;
		 
		if (pls_log_pos_estabelecido_w.nr_id.count >= 1000) then 
			begin 
			forall i in pls_log_pos_estabelecido_w.nr_id.first .. pls_log_pos_estabelecido_w.nr_id.last 
				update	pls_log_pos_estabelecido	a 
				set	a.nr_lote_contabil		= nr_lote_contabil_p 
				where	rowid				= pls_log_pos_estabelecido_w.nr_id(i);
			commit;
			pls_log_pos_estabelecido_w.nr_id.delete;
			end;
		end if;
		 
		CALL wheb_usuario_pck.set_ie_lote_contabil('N');
		 
		end;
	end loop;
	close c_faturamento;
	 
	if (movimento_contabil_w.count > 0) then 
		forall i in movimento_contabil_w.first .. movimento_contabil_w.last 
			insert into w_movimento_contabil values movimento_contabil_w(i);
		commit;
		movimento_contabil_w.delete;
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	 
	if (pls_conta_pos_estab_contab_w.nr_id.count > 0) then 
		forall i in pls_conta_pos_estab_contab_w.nr_id.first .. pls_conta_pos_estab_contab_w.nr_id.last 
			update	pls_conta_pos_estab_contab	a 
			set	a.nr_lote_contabil_prov		= nr_lote_contabil_p 
			where	rowid				= pls_conta_pos_estab_contab_w.nr_id(i);
		commit;
		pls_conta_pos_estab_contab_w.nr_id.delete;
	end if;
	 
	if (pls_log_pos_estabelecido_w.nr_id.count > 0) then 
		forall i in pls_log_pos_estabelecido_w.nr_id.first .. pls_log_pos_estabelecido_w.nr_id.last 
			update	pls_log_pos_estabelecido	a 
			set	a.nr_lote_contabil		= nr_lote_contabil_p 
			where	rowid				= pls_log_pos_estabelecido_w.nr_id(i);
		commit;
		pls_log_pos_estabelecido_w.nr_id.delete;
	end if;
	 
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	 
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p, 
					nm_usuario_p);
end if;
 
if (coalesce(ds_retorno_p::text, '') = '') then 
	update	lote_contabil 
	set	ie_situacao		= 'A', 
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END  
	where	nr_lote_contabil	= nr_lote_contabil_p;
	 
	if (ie_exclusao_p	= 'S') then 
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
	else 
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);
	end if;
	 
	commit;
else 
	rollback;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_prov_fat_proj ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

