-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_curva_abc_ccusto ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


cd_material_w 			integer;
vl_estoque_w			double precision;
cd_centro_custo_w			integer;
ie_curva_abc_w			varchar(1);
pr_curva_abc_w			double precision;
ie_curva_abc_grupo_w		varchar(1);
pr_curva_abc_grupo_w		double precision;
vl_acumulado_w			double precision;
pr_acumulado_w			double precision;
vl_total_w			double precision;
vl_acumulado_grupo_w		double precision;
pr_acumulado_grupo_w		double precision;
vl_total_grupo_w			double precision;
cd_grupo_material_w		integer	:= 0;
cd_grupo_material_ww		integer	:= 0;
pr_curvaa_w			double precision;
pr_curvab_w			double precision;
pr_curvac_w			double precision;
ie_abc_xyz_w			varchar(01);
ie_forma_curva_abc_w		varchar(01);
qt_meses_curva_abc_w		smallint;
dt_inicio_w			timestamp;
dt_final_w			timestamp;


C01 CURSOR FOR
SELECT	distinct cd_centro_custo
from	curva_abc_v
where	dt_mesano_referencia between dt_inicio_w and dt_final_w
and	cd_estabelecimento	= cd_estabelecimento_p
Order by 1;


C02 CURSOR FOR
SELECT	cd_material,
	coalesce(sum(coalesce(vl_estoque,0)),0)
from	curva_abc_v
where	dt_mesano_referencia between dt_inicio_w and dt_final_w
and	cd_estabelecimento	= cd_estabelecimento_p
and	cd_centro_custo		= cd_centro_custo_w
and	vl_total_w		> 0
group by cd_material
Order by 2 desc;


C04 CURSOR FOR
SELECT	cd_material,
	cd_grupo_material,
	coalesce(sum(coalesce(vl_estoque,0)),0)
from	curva_abc_v
where	dt_mesano_referencia between dt_inicio_w and dt_final_w
and	cd_estabelecimento	= cd_estabelecimento_p
and	cd_centro_custo		= cd_centro_custo_w
and	vl_total_w		> 0
group by cd_grupo_material,
	 cd_material
order by 2, 3 desc;


BEGIN

delete	FROM material_abc_ccusto
where	dt_mesano_referencia	= PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month', 0)
and	cd_estabelecimento	= cd_estabelecimento_p;
commit;

select	vl_curvaa,
	vl_curvab,
	vl_curvac,
	ie_abc_xyz,
	ie_forma_curva_abc,
	coalesce(qt_meses_curva_abc,0)
into STRICT	pr_curvaa_w,
	pr_curvab_w,
	pr_curvac_w,
	ie_abc_xyz_w,
	ie_forma_curva_abc_w,
	qt_meses_curva_abc_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

dt_inicio_w	:= PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month', 0);
dt_final_w	:= PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month', 0);
if (ie_forma_curva_abc_w = 1) and (qt_meses_curva_abc_w > 0) then
	dt_inicio_w	:= PKG_DATE_UTILS.ADD_MONTH(PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'MONTH', 0), - qt_meses_curva_abc_w,0);
end if;

select	coalesce(sum(coalesce(vl_estoque,0)),0)
into STRICT	vl_total_w
from	curva_abc_v
where	dt_mesano_referencia between dt_inicio_w and dt_final_w
and	cd_estabelecimento = cd_estabelecimento_p;


open C01;
loop
FETCH C01 into
	cd_centro_custo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	vl_acumulado_w		:= 0;
	pr_acumulado_w		:= 0;
	pr_acumulado_grupo_w	:= 0;
	vl_total_grupo_w		:= 0;

	select	coalesce(sum(coalesce(vl_estoque,0)),0)
	into STRICT	vl_total_w
	from	curva_abc_v
	where	dt_mesano_referencia between dt_inicio_w and dt_final_w
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_centro_custo		= cd_centro_custo_w;

	open C02;
	loop
	FETCH C02 into
		cd_material_w,
		vl_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		vl_acumulado_w		:= vl_acumulado_w + vl_estoque_w;
		pr_acumulado_w		:= round((dividir((vl_acumulado_w * 100), vl_total_w))::numeric,4);
		pr_curva_abc_w		:= round((dividir((vl_estoque_w * 100), vl_total_w))::numeric,4);
		if (pr_acumulado_w <= pr_curvaa_w) then
			ie_curva_abc_w 		:= 'A';
		elsif (pr_acumulado_w <= pr_curvaa_w + pr_curvab_w) then
			ie_curva_abc_w		:= 'B';
		else
			ie_curva_abc_w		:= 'C';
		end if;
		pr_curva_abc_grupo_w		:= 0;
		ie_curva_abc_grupo_w		:= 'Y';
		insert into Material_abc_ccusto(
			cd_material,
			dt_mesano_referencia,
			cd_estabelecimento,
			cd_centro_custo,
			dt_atualizacao,
			nm_usuario,
			ie_curva_abc,
			pr_curva_abc,
			ie_curva_abc_grupo,
			pr_curva_abc_grupo)
		values (	cd_material_w,
			PKG_DATE_UTILS.start_of(dt_mesano_referencia_p,'month', 0),
			cd_estabelecimento_p,
			cd_centro_custo_w,
			clock_timestamp(),
			nm_usuario_p,
			ie_curva_abc_w,
			pr_curva_abc_w,
			ie_curva_abc_grupo_w,
			pr_curva_abc_grupo_w);
		end;
	END LOOP;
	CLOSE C02;

	open C04;
	loop
	FETCH C04 into
		cd_material_w,
		cd_grupo_material_w,
		vl_estoque_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		if (cd_grupo_material_ww <> cd_grupo_material_w) then
			begin
			vl_acumulado_grupo_w	:= 0;
			cd_grupo_material_ww 	:= cd_grupo_material_w;
			select	coalesce(sum(coalesce(vl_estoque,0)),0)
			into STRICT	vl_total_grupo_w
			from	curva_abc_v
			where	dt_mesano_referencia between dt_inicio_w and dt_final_w
			and	cd_estabelecimento	= cd_estabelecimento_p
			and	cd_centro_custo		= cd_centro_custo_w
			and	cd_grupo_material	= cd_grupo_material_w;
			end;
		end if;
		pr_curva_abc_grupo_w		:= 0;
		vl_acumulado_grupo_w		:= vl_acumulado_grupo_w + vl_estoque_w;
		if (vl_total_grupo_w > 0) then
			begin
	 		pr_acumulado_grupo_w	:= round((dividir((vl_acumulado_grupo_w * 100), vl_total_grupo_w))::numeric, 4);
			pr_curva_abc_grupo_w	:= round((dividir((vl_estoque_w * 100), vl_total_grupo_w))::numeric,4);
			end;
		end if;
		if (pr_acumulado_grupo_w <= pr_curvaa_w) then
			ie_curva_abc_grupo_w	:= 'A';
		elsif (pr_acumulado_grupo_w <= pr_curvaa_w + pr_curvab_w) then
			ie_curva_abc_grupo_w	:= 'B';
		else
			ie_curva_abc_grupo_w	:= 'C';
		end if;
		update	Material_abc_ccusto
		set	ie_curva_abc_grupo	= ie_curva_abc_grupo_w,
			pr_curva_abc_grupo	= pr_curva_abc_grupo_w
		where	cd_material		= cd_material_w
		and	cd_centro_custo		= cd_centro_custo_w;
		end;
	END LOOP;
	CLOSE C04;


	end;
end loop;
close c01;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_curva_abc_ccusto ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

