-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_108_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Validar a empresa do beneficiário suspensa/excluída
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;
nr_idx_w		integer;
ie_gerou_w		varchar(1);
dt_suspensao_w		pls_contrato_pagador.dt_suspensao%type;
dt_reativacao_w         pls_contrato_pagador.dt_reativacao%type;

C01 CURSOR(	nr_seq_oc_cta_comb_p	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_valida_empresa ie_valida
	from	pls_oc_cta_val_empres a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_sequencia%type) FOR
	SELECT 	x.nr_sequencia nr_seq_selecao,
		a.dt_execucao_conv dt_procedimento,
		e.dt_limite_utilizacao,
		e.dt_rescisao_contrato,
		d.nr_seq_pagador
	from	pls_oc_cta_selecao_imp	x,
		pls_conta_proc_imp		a,
		pls_conta_imp			b,
		pls_segurado			d,
		pls_contrato			e
	where	x.nr_id_transacao		= nr_id_transacao_pc
	and	a.nr_sequencia			= x.nr_seq_conta_proc
	and	a.nr_seq_conta			= b.nr_sequencia
	and	b.nr_seq_segurado_conv		= d.nr_sequencia
	and	d.nr_seq_contrato		= e.nr_sequencia;
BEGIN

if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', ie_regra_excecao_p, nr_id_transacao_p, null);
	-- Incializar as listas para cada regra.
	SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
	nr_idx_w:=	0;

	for r_C01_w in C01(nr_seq_combinada_p) loop
		if (r_C01_w.ie_valida = 'S')	then
			begin

				for r_C02_w in	C02(nr_id_transacao_p) loop

					ie_gerou_w := 'N';
					if (r_C02_w.dt_procedimento > coalesce(r_C02_w.dt_limite_utilizacao, r_C02_w.dt_rescisao_contrato)) then
						ie_gerou_w := 'S';

						tb_seq_selecao_w(nr_idx_w):=	r_C02_w.nr_seq_selecao;
						tb_valido_w(nr_idx_w) := 'S';
						tb_observacao_w(nr_idx_w) :='[1] - Contrato rescindido.'||chr(13)||chr(10)||
							'Data do procedimento : ' || to_char(r_C02_w.dt_procedimento ,'dd/mm/yyyy')||
							'. Data de rescisão do contrato : '||to_char( coalesce(r_C02_w.dt_limite_utilizacao, r_C02_w.dt_rescisao_contrato),'dd/mm/yyyy');

					end if;

					if (ie_gerou_w = 'N') then
						/* 1018 - Empresa do beneficiário suspensa / excluída */

						ie_gerou_w := 'S';
						if (r_C02_w.nr_seq_pagador IS NOT NULL AND r_C02_w.nr_seq_pagador::text <> '') then

							select	trunc(dt_suspensao),
								trunc(dt_reativacao)
							into STRICT	dt_suspensao_w,
								dt_reativacao_w
							from	pls_contrato_pagador
							where	nr_sequencia = r_C02_w.nr_seq_pagador;
						end if;

						--Se existir data de suspensão do contrato e for menor que a data de execução do procedimento, então avalida ainda se não ocorreu uma
						--reativação do contrato ou se caso ocorreu,  essa data é maior( nesse caso não considera-se reativada até execução do proc)
						if	((dt_suspensao_w IS NOT NULL AND dt_suspensao_w::text <> '') and (coalesce(dt_reativacao_w::text, '') = '' or dt_reativacao_w > r_C02_w.dt_procedimento)  and (r_C02_w.dt_procedimento > dt_suspensao_w))  then
								tb_seq_selecao_w(nr_idx_w):=	r_C02_w.nr_seq_selecao;
								tb_valido_w(nr_idx_w) := 'S';
								tb_observacao_w(nr_idx_w) :='[2] - Pagador suspenso.'||chr(13)||chr(10)||
								'Data do procedimento : ' || to_char(r_C02_w.dt_procedimento ,'dd/mm/yyyy') ||
								'. Data de suspensão do pagador : '||to_char(dt_suspensao_w,'dd/mm/yyyy');
						else


							tb_seq_selecao_w(nr_idx_w):=	r_C02_w.nr_seq_selecao;
							tb_valido_w(nr_idx_w) := 'N';
							tb_observacao_w(nr_idx_w) :='';
						end if;
					end if;

					nr_idx_w := nr_idx_w + 1;
					if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
						CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w, nr_id_transacao_p,'SEQ');

						nr_idx_w := 0;
						SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
					end if;
				end loop;
				if (nr_idx_w > 0)	then
					CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w, nr_id_transacao_p,'SEQ');
				end if;
			exception
			when others then
				-- Gerencia o erro lançado, limpa a tabela para esta transação.
				CALL pls_ocor_imp_pck.trata_erro_sql_dinamico(nr_seq_combinada_p, null, sqlerrm, nr_id_transacao_p, wheb_usuario_pck.get_nm_usuario, 'S');
			end;
			-- seta os registros que serão válidos ou inválidos após o processamento
			CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N', ie_regra_excecao_p, null, nr_id_transacao_p, null);
		end if;
	end loop;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_108_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

