-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_113 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:	Validar o tipo de atendimento entre a autorização e a conta médica
------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
i			integer;
dados_tb_sel_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;
ie_gera_ocorrencia_w	varchar(1);


-- Dados da Regra
c01 CURSOR(	nr_seq_oc_cta_comb_pc	dados_regra_p.nr_sequencia%type) FOR
	SELECT	coalesce(a.ie_validar_tp_atend,'N') ie_validar_tp_atend
	from	pls_regra_val_atend_guia	a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

-- Dados das contas e suas autorizações
c02 CURSOR(	nr_id_transacao_pc		pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	b.nr_sequencia nr_seq_conta,
		lpad(d.cd_tiss,2,'0') cd_tiss_pad,
		-- para manter igualdade com o cd_tiss
		lpad(c.ie_tipo_atend_tiss,2,'0') ie_tipo_atend_tiss_pad
	from	pls_selecao_ocor_cta	a,
		pls_conta		b,
		pls_guia_plano		c,
		pls_tipo_atendimento	d
	where	b.nr_sequencia		= a.nr_seq_conta
	and	c.nr_sequencia		= b.nr_seq_guia
	and	d.nr_sequencia		= b.nr_seq_tipo_atendimento
	and	a.nr_id_transacao	= nr_id_transacao_pc
	and	a.ie_valido 		= 'S';
BEGIN

-- Só executa se tiver regra informada
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '')  then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

	-- Inicialização
	pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);
	i := 0;
	dados_tb_sel_w.ds_observacao(i) := null;

	-- Carrega as regras da validação
	for r_c01_w in c01(dados_regra_p.nr_sequencia) loop
		-- antes de carregar as contas, verifica se tem alguma opção que permite gerar ocorrencia na regra
		if (r_c01_w.ie_validar_tp_atend = 'S') then
			-- carrega as contas
			for r_c02_w in c02(nr_id_transacao_p) loop

				-- se for para comparar o tipo de atendimento entre conta e autorização
				-- So vai gerar ocorrencia se o cd_tiss e o atend_tiss estiverem informados e forem diferentes
				if (r_c02_w.cd_tiss_pad IS NOT NULL AND r_c02_w.cd_tiss_pad::text <> '') and (r_c02_w.ie_tipo_atend_tiss_pad IS NOT NULL AND r_c02_w.ie_tipo_atend_tiss_pad::text <> '') and (r_c02_w.cd_tiss_pad != r_c02_w.ie_tipo_atend_tiss_pad) then

					dados_tb_sel_w.nr_seq_selecao(i)	:= r_C02_w.nr_seq_conta;
					dados_tb_sel_w.ds_observacao(i)		:= 'A autorização está com o tipo de atendimento TISS ('||r_c02_w.ie_tipo_atend_tiss_pad||') diferente da conta ('||r_c02_w.cd_tiss_pad||')';
					dados_tb_sel_w.ie_valido(i)		:= 'S';

					if ( i >= pls_util_pck.qt_registro_transacao_w) then

						CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_sel_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
												'SEQ_CONTA', dados_tb_sel_w.ds_observacao, dados_tb_sel_w.ie_valido, nm_usuario_p, nr_id_transacao_p);
						pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);
						i := 0;
					else
						i := i + 1;
					end if;
				end if; -- fim validar tipo atendimento
			end loop; -- fim contas
		end if; -- fim se tem opção valida na regra
	end loop; -- fim regras
	-- Ainda verifica se existe alguma coisa a ser enviada ao banco
	if ( dados_tb_sel_w.nr_seq_selecao.count > 0) then

		CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_sel_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
								'SEQ_CONTA', dados_tb_sel_w.ds_observacao, dados_tb_sel_w.ie_valido, nm_usuario_p, nr_id_transacao_p);
	end if;

	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);

end if; -- Fim regra informada
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_113 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

