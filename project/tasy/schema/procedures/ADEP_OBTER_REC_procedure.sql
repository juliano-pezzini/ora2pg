-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE adep_obter_rec ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_lib_pend_rep_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) AS $body$
DECLARE

 
nr_seq_wadep_w		bigint;
nr_prescricao_w		bigint;
nr_seq_recomendacao_w	integer;
cd_recomendacao_w	varchar(255);
ds_diluicao_w		varchar(2000);
ds_recomendacao_w	varchar(4000);
ie_acm_sn_w		varchar(1);
cd_intervalo_w		varchar(7);
qt_recomendacao_w	double precision;
ds_intervalo_w		varchar(100);
ie_status_w		varchar(1);
ie_lib_pend_rep_w	varchar(1);
ie_horario_w		varchar(1);
					
c01 CURSOR FOR 
SELECT	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_recomendacao,ie_agrupar_acm_sn_p)='N' THEN  nr_prescricao  ELSE null END   ELSE null END , 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_recomendacao,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_recomendacao  ELSE null END   ELSE null END ,	 
	cd_recomendacao, 
	ds_recomendacao, 
	ie_acm_sn,	 
	cd_intervalo, 
	qt_recomendacao, 
	ds_prescricao, 
	ds_diluicao, 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_recomendacao,ie_agrupar_acm_sn_p)='N' THEN  CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END   ELSE null END   ELSE null END  ie_status 
from	( 
	SELECT	a.nr_prescricao, 
		c.nr_seq_recomendacao, 
		coalesce(to_char(x.cd_recomendacao),x.ds_recomendacao) cd_recomendacao, 
		coalesce(y.ds_tipo_recomendacao,x.ds_recomendacao) ds_recomendacao, 
		obter_se_acm_sn_rec(x.ds_horarios, x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		x.qt_recomendacao, 
		w.ds_prescricao ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		x.DS_RECOMENDACAO ds_diluicao 
	FROM prescr_rec_hor c, prescr_medica a, prescr_recomendacao x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
LEFT OUTER JOIN tipo_recomendacao y ON (x.cd_recomendacao = y.cd_tipo_recomendacao)
WHERE x.nr_prescricao = c.nr_prescricao and x.nr_sequencia = c.nr_seq_recomendacao and x.nr_prescricao = a.nr_prescricao and c.nr_prescricao = a.nr_prescricao and obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr > dt_validade_limite_p and ((ie_data_lib_prescr_p = 'F') or (obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p) = 'S')) and ((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = '')) and coalesce(c.ie_situacao,'A') = 'A' and (((obter_se_acm_sn_rec(x.ds_horarios, x.ie_se_necessario) = 'N') and (c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p)) or 
		 ((obter_se_acm_sn_rec(x.ds_horarios, x.ie_se_necessario) = 'S') and (obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S'))) and ((ie_exibir_hor_realizados_p = 'S') or (coalesce(c.dt_fim_horario::text, '') = '')) and ((ie_exibir_hor_suspensos_p = 'S') or (coalesce(c.dt_suspensao::text, '') = '')) and ((ie_regra_inclusao_p = 'S') or 
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'REC', 
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		null, 
																		null, 
																		null, 
																		null, 
																		a.cd_setor_atendimento, 
																		null, 
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
																		null) = 'S'))) 	 -- nr_seq_exame_p 
  and ((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p)) and Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S' group by 
		a.nr_prescricao, 
		c.nr_seq_recomendacao, 
		x.cd_recomendacao, 
		x.ds_recomendacao, 
		y.ds_tipo_recomendacao, 
		x.ds_horarios, 
		x.cd_intervalo, 
		x.qt_recomendacao, 
		w.ds_prescricao, 
		x.ie_suspenso, 
		x.DS_RECOMENDACAO 
	) alias47 
group by 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_recomendacao,ie_agrupar_acm_sn_p)='N' THEN  nr_prescricao  ELSE null END   ELSE null END , 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_recomendacao,ie_agrupar_acm_sn_p)='N' THEN  nr_seq_recomendacao  ELSE null END   ELSE null END ,	 
	cd_recomendacao, 
	ds_recomendacao, 
	ie_acm_sn,	 
	cd_intervalo, 
	qt_recomendacao, 
	ds_prescricao, 
	CASE WHEN ie_acm_sn='S' THEN  CASE WHEN obter_se_agrupar_acm_sn_adep(nr_prescricao,nr_seq_recomendacao,ie_agrupar_acm_sn_p)='N' THEN  CASE WHEN ie_suspenso='S' THEN  ie_suspenso  ELSE null END   ELSE null END   ELSE null END , 
	ds_diluicao;
	
c02 CURSOR FOR 
SELECT	nr_prescricao, 
	nr_seq_recomendacao, 
	cd_recomendacao, 
	ds_recomendacao, 
	ie_acm_sn,	 
	cd_intervalo, 
	qt_recomendacao, 
	ds_prescricao, 
	CASE WHEN ie_suspenso='S' THEN ie_suspenso  ELSE null END , 
	ie_lib_pend_rep, 
	ds_diluicao, 
	ie_horario 
from	( 
	SELECT	a.nr_prescricao, 
		x.nr_sequencia nr_seq_recomendacao, 
		coalesce(to_char(x.cd_recomendacao),x.ds_recomendacao) cd_recomendacao, 
		coalesce(y.ds_tipo_recomendacao,x.ds_recomendacao) ds_recomendacao, 
		obter_se_acm_sn_rec(x.ds_horarios, x.ie_se_necessario) ie_acm_sn,		 
		x.cd_intervalo, 
		x.qt_recomendacao, 
		w.ds_prescricao ds_prescricao, 
		coalesce(x.ie_suspenso,'N') ie_suspenso, 
		substr(adep_obter_lib_pend_rep_gestao(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1) ie_lib_pend_rep, 
		CASE WHEN coalesce(x.ds_horarios::text, '') = '' THEN  'N'  ELSE 'S' END  ie_horario, 
		x.DS_RECOMENDACAO ds_diluicao 
	FROM prescr_medica a, prescr_recomendacao x
LEFT OUTER JOIN intervalo_prescricao w ON (x.cd_intervalo = w.cd_intervalo)
LEFT OUTER JOIN tipo_recomendacao y ON (x.cd_recomendacao = y.cd_tipo_recomendacao)
WHERE x.nr_prescricao = a.nr_prescricao and obter_se_exibir_rep_adep_setor(cd_setor_paciente_p,a.cd_setor_atendimento,coalesce(a.ie_adep,'S')) = 'S' and a.nr_atendimento = nr_atendimento_p and a.dt_validade_prescr > dt_validade_limite_p --and	((ie_data_lib_prescr_p = 'F') or 
	--	(obter_se_prescr_lib_adep(a.dt_liberacao_medico, a.dt_liberacao, a.dt_liberacao_farmacia, ie_data_lib_prescr_p) = 'S')) 
  and (a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '') and ((coalesce(a.dt_liberacao::text, '') = '') or (coalesce(a.dt_liberacao_farmacia::text, '') = '')) and ((ie_exibir_suspensos_p = 'S') or (coalesce(x.dt_suspensao::text, '') = '')) and obter_se_prescr_vig_adep(a.dt_inicio_prescr,a.dt_validade_prescr,dt_inicial_horarios_p,dt_final_horarios_p) = 'S' and ((ie_regra_inclusao_p = 'S') or 
		 ((ie_regra_inclusao_p = 'R') and (adep_obter_regra_inclusao(	'REC', 
																		cd_estabelecimento_p, 
																		cd_setor_usuario_p, 
																		cd_perfil_p, 
																		null, 
																		null, 
																		null, 
																		null, 
																		a.cd_setor_atendimento, 
																		null, 
																		null, -- nr_prescricao_p. Passei nulo porque criaram o param na adep_obter_regra_inclusao como default null, e não haviam passado nada 
																		null) = 'S'))) 	-- nr_Seq_exame_p 
  and not exists ( 
			select	1 
			from	prescr_rec_hor c 
			where	c.nr_prescricao = x.nr_prescricao 
			and	c.nr_seq_recomendacao = x.nr_sequencia 
			and	c.nr_prescricao = a.nr_prescricao 
			and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S') and ((ie_prescr_setor_p = 'N') or (ie_prescr_setor_p = 'S' AND a.cd_setor_atendimento = cd_setor_paciente_p)) group by 
		a.nr_prescricao, 
		x.nr_sequencia, 
		x.cd_recomendacao, 
		x.ds_recomendacao, 
		y.ds_tipo_recomendacao, 
		x.ds_horarios, 
		x.cd_intervalo, 
		x.qt_recomendacao, 
		w.ds_prescricao, 
		x.ie_suspenso, 
		a.dt_liberacao_medico, 
		a.dt_liberacao, 
		a.dt_liberacao_farmacia, 
		x.ds_horarios, 
		x.DS_RECOMENDACAO 
	) alias32 
group by 
	nr_prescricao, 
	nr_seq_recomendacao, 
	cd_recomendacao, 
	ds_recomendacao, 
	ie_acm_sn,	 
	cd_intervalo, 
	qt_recomendacao, 
	ds_prescricao, 
	CASE WHEN ie_suspenso='S' THEN ie_suspenso  ELSE null END , 
	ie_lib_pend_rep, 
	ie_horario, 
	ds_diluicao;


BEGIN 
open c01;
loop 
fetch c01 into	nr_prescricao_w, 
		nr_seq_recomendacao_w, 
		cd_recomendacao_w, 
		ds_recomendacao_w, 
		ie_acm_sn_w,		 
		cd_intervalo_w, 
		qt_recomendacao_w, 
		ds_intervalo_w, 
		ds_diluicao_w, 
		ie_status_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	select	nextval('w_adep_t_seq') 
	into STRICT	nr_seq_wadep_w 
	;
	 
	insert into w_adep_t( 
		nr_sequencia, 
		nm_usuario, 
		ie_tipo_item, 
		nr_prescricao, 
		nr_seq_item,		 
		cd_item, 
		ds_item, 
		ie_acm_sn,		 
		cd_intervalo, 
		qt_item, 
		ds_prescricao, 
		ie_status_item, 
		ie_diferenciado, 
		nr_agrupamento, 
		nr_seq_proc_interno, 
		ds_diluicao) 
	values ( 
		nr_seq_wadep_w, 
		nm_usuario_p, 
		'R', 
		nr_prescricao_w, 
		nr_seq_recomendacao_w, 
		cd_recomendacao_w, 
		substr(ds_recomendacao_w,1,240), 
		ie_acm_sn_w, 
		cd_intervalo_w, 
		qt_recomendacao_w, 
		ds_intervalo_w, 
		ie_status_w, 
		'N', 
		0, 
		0, 
		ds_diluicao_w);
	end;
end loop;
close c01;
 
if (ie_lib_pend_rep_p = 'S') then 
	begin 
	open c02;
	loop 
	fetch c02 into	 
		nr_prescricao_w, 
		nr_seq_recomendacao_w, 
		cd_recomendacao_w, 
		ds_recomendacao_w, 
		ie_acm_sn_w,		 
		cd_intervalo_w, 
		qt_recomendacao_w, 
		ds_intervalo_w, 
		ie_status_w, 
		ie_lib_pend_rep_w, 
		ds_diluicao_w, 
		ie_horario_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		select	nextval('w_adep_t_seq') 
		into STRICT	nr_seq_wadep_w 
		;
		 
		insert into w_adep_t( 
			nr_sequencia, 
			nm_usuario, 
			ie_tipo_item, 
			nr_prescricao, 
			nr_seq_item,		 
			cd_item, 
			ds_item, 
			ie_acm_sn,		 
			cd_intervalo, 
			qt_item, 
			ds_prescricao, 
			ie_status_item, 
			ie_diferenciado, 
			nr_agrupamento, 
			nr_seq_proc_interno, 
			ie_pendente_liberacao, 
			ie_horario, 
			ds_diluicao) 
		values ( 
			nr_seq_wadep_w, 
			nm_usuario_p, 
			'R', 
			nr_prescricao_w, 
			nr_seq_recomendacao_w, 
			cd_recomendacao_w, 
			substr(ds_recomendacao_w,1,240), 
			ie_acm_sn_w, 
			cd_intervalo_w, 
			qt_recomendacao_w, 
			ds_intervalo_w, 
			ie_status_w, 
			'N', 
			0, 
			0, 
			ie_lib_pend_rep_w, 
			ie_horario_w, 
			ds_diluicao_w);
		end;
	end loop;
	close c02;	
	end;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE adep_obter_rec ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_exibir_hor_realizados_p text, ie_exibir_hor_suspensos_p text, ie_regra_inclusao_p text, ie_data_lib_prescr_p text, ie_lib_pend_rep_p text, ie_exibir_suspensos_p text, ie_agrupar_acm_sn_p text, ie_prescr_setor_p text, cd_setor_paciente_p bigint) FROM PUBLIC;

