-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE contabiliza_lote_producao (nr_lote_contabil_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, ie_exclusao_p text) AS $body$
DECLARE


cd_estabelecimento_w            lote_contabil.cd_estabelecimento%type;
dt_mesano_referencia_w          timestamp;
cd_tipo_lote_contabil_w         lote_contabil.cd_tipo_lote_contabil%type;
nr_lote_producao_w              lote_producao.nr_lote_producao%type;
dt_movimento_w                  timestamp;
nr_sequencia_movto_w            bigint;
ie_valor_lote_prod_w            varchar(5);
cd_historico_w                  bigint;
vl_contabil_w                   double precision;
cd_conta_debito_w               varchar(20);
cd_conta_credito_w              varchar(20);
cd_local_estoque_w              smallint;
cd_centro_custo_w               integer;
ds_compl_historico_w            varchar(255);
ds_conteudo_w                   varchar(4000);
cd_material_w                   integer;
vl_retorno_w                    double precision;
ie_compl_hist_w                 varchar(1);
ds_material_w                   varchar(255);
qt_real_w                       double precision;
qt_conv_estoque_consumo_w       double precision;
cd_oper_baixa_producao_w        bigint;
cd_conta_oper_baixa_prod_w      varchar(20);
cd_empresa_w                    bigint;
nr_documento_ww                 movimento_contabil.nr_documento%type;
ie_origem_documento_w           movimento_contabil.ie_origem_documento%type;
dt_mesano_fm_w                  timestamp;
nm_agrupador_w                  varchar(255);
nr_seq_agrupamento_w            movimento_contabil.nr_seq_agrupamento%type;
ie_centro_custo_w               conta_contabil.ie_centro_custo%type;
ie_data_contab_lote_prod_w      parametro_estoque.ie_data_contab_lote_prod%type;
nm_atributo_w                   w_movimento_contabil.nm_atributo%type;
nm_tabela_w                     w_movimento_contabil.nm_tabela%type;
cd_sequencia_parametro_es_w     bigint;
cd_sequencia_parametro_pd_w     bigint;
cd_operacao_w                   bigint;

c01 CURSOR FOR
        SELECT  a.nr_lote_producao,
                a.dt_confirmacao,
                obter_custo_medio_material(a.cd_estabelecimento, trunc(a.dt_mesano_referencia, 'mm'), b.cd_material_estoque) vl_movimento,
                a.qt_real,
                a.cd_local_estoque,
                a.cd_material
        from    material        b,
                lote_producao   a
        where   a.cd_material           = b.cd_material
        --and   ie_exclusao_p           != 'S'
        and     ie_valor_lote_prod_w    = 'CM'
        and     a.nr_lote_contabil      = nr_lote_contabil_p

union all

        SELECT  a.nr_lote_producao,
                a.dt_confirmacao,
                a.vl_custo_material vl_movimento,
                a.qt_real,
                a.cd_local_estoque,
                a.cd_material
        from    material        b,
                lote_producao   a
        where   a.cd_material           = b.cd_material
        --and   ie_exclusao_p           != 'S'
        and     ie_valor_lote_prod_w    = 'VC'
        and     a.nr_lote_contabil      = nr_lote_contabil_p
        
union all

        select  b.nr_lote_producao,
                b.dt_confirmacao,
                a.vl_estoque vl_movimento,
                b.qt_real,
                b.cd_local_estoque,
                b.cd_material
        from    movto_estoque_prod_v    a,
                lote_producao           b
        where   b.nr_lote_producao      = a.nr_documento
        --and   ie_exclusao_p           != 'S'
        and     ie_valor_lote_prod_w    = 'MV'
        and     b.nr_lote_contabil      = nr_lote_contabil_p;


BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 25) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
ds_retorno_p            := null;

/* Identifica o Estabelecimento do Lote Contabil */

select  cd_estabelecimento,
        trunc(dt_referencia,'mm'),
        cd_tipo_lote_contabil
into STRICT    cd_estabelecimento_w,
        dt_mesano_referencia_w,
        cd_tipo_lote_contabil_w
from    lote_contabil
where   nr_lote_contabil        = nr_lote_contabil_p;

if (ie_exclusao_p = 'S') then
        delete  from movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        update lote_contabil
        set      vl_credito             = 0,
                 vl_debito              = 0
        where    nr_lote_contabil       = nr_lote_contabil_p;

        update  lote_producao
        set     nr_lote_contabil        = 0
        where   nr_lote_contabil        = nr_lote_contabil_p;
else
        select  max(a.cd_hist_contab_prod),
                max(a.cd_oper_baixa_producao),
                max(a.ie_valor_lote_prod),
                coalesce(max(a.ie_data_contab_lote_prod),'R')
        into STRICT    cd_historico_w,
                cd_oper_baixa_producao_w,
                ie_valor_lote_prod_w,
                ie_data_contab_lote_prod_w
        from    parametro_estoque       a
        where   a.cd_estabelecimento    = cd_estabelecimento_w;

        cd_historico_w                  := coalesce(cd_historico_w, 0);
        cd_oper_baixa_producao_w        := coalesce(cd_oper_baixa_producao_w, 0);
        ie_valor_lote_prod_w            := coalesce(ie_valor_lote_prod_w, 'CM');
        cd_empresa_w                    := obter_empresa_estab(cd_estabelecimento_w);

        if (cd_historico_w = 0) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(192337);
                /*'Deve ser informado o historico padrao para contabilizacao da producao, nos parametros de estoque'|| '#@#@');*/

        end if;

        delete  FROM w_movimento_contabil
        where   nr_lote_contabil        = nr_lote_contabil_p;

        dt_mesano_fm_w  := fim_dia(fim_mes(dt_mesano_referencia_w));

        update  lote_producao
        set     nr_lote_contabil                = nr_lote_contabil_p
        where   cd_estabelecimento              = cd_estabelecimento_w
        and     coalesce(nr_lote_contabil, 0)        = 0
        and     CASE WHEN ie_data_contab_lote_prod_w='R' THEN dt_mesano_referencia WHEN ie_data_contab_lote_prod_w='C' THEN dt_confirmacao END  between dt_mesano_referencia_w and dt_mesano_fm_w
        and     (dt_confirmacao IS NOT NULL AND dt_confirmacao::text <> '');
        commit;

        if (ie_valor_lote_prod_w = 'CM') then
                nm_tabela_w     := 'LOTE_PRODUCAO';
                nm_atributo_w   := 'VL_CUSTO_MEDIO';
        elsif (ie_valor_lote_prod_w = 'VC') then
                nm_tabela_w     := 'LOTE_PRODUCAO';
                nm_atributo_w   := 'VL_CUSTO_MATERIAL';
        elsif (ie_valor_lote_prod_w = 'MV') then
                nm_tabela_w     := 'MOVTO_ESTOQUE_PROD_V';
                nm_atributo_w   := 'VL_ESTOQUE';
        end if;


        begin
        ie_compl_hist_w := obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);

        exception
        when others then
                ie_compl_hist_w := 'N';
        end;

        nr_sequencia_movto_w            := 0;
        ds_compl_historico_w            := '';

        nm_agrupador_w  := coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_LOTE_PRODUCAO');

        open c01;
        loop
        fetch c01 into
                nr_lote_producao_w,
                dt_movimento_w,
                vl_contabil_w,
                qt_real_w,
                cd_local_estoque_w,
                cd_material_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
                ds_compl_historico_w    := '';
                ds_conteudo_w           := '';
                dt_movimento_w          := trunc(dt_movimento_w,'dd');
                nr_sequencia_movto_w    := nr_sequencia_movto_w + 1;
                ds_material_w           := substr(obter_desc_material(cd_material_w),1,255);
                cd_conta_debito_w       := '';
                cd_conta_credito_w      := '';
                cd_sequencia_parametro_es_w     := null;
                cd_sequencia_parametro_pd_w     := null;

                select  qt_conv_estoque_consumo
                into STRICT    qt_conv_estoque_consumo_w
                from    material
                where   cd_material     = cd_material_w;

                if (ie_valor_lote_prod_w = 'CM')    then
                        qt_real_w       := qt_real_w * qt_conv_estoque_consumo_w;
                        vl_contabil_w   := vl_contabil_w * qt_real_w;
                end if;

                if (coalesce(cd_oper_baixa_producao_w,0) <> 0) then
                        cd_operacao_w := cd_oper_baixa_producao_w;
                        begin
                        cd_conta_oper_baixa_prod_w      := substr(obter_conta_hist_oper_estoque(cd_empresa_w,cd_oper_baixa_producao_w,'C'),1,20);
                        exception when others then
                                cd_conta_oper_baixa_prod_w      := '';
                        end;
                else
                        cd_operacao_w := null;
                end if;

                if (nm_agrupador_w = 'NR_LOTE_PRODUCAO')then
                        nr_seq_agrupamento_w := nr_lote_producao_w;
                end if;

                if (coalesce(nr_seq_agrupamento_w,0) = 0)then
                        nr_seq_agrupamento_w := nr_lote_producao_w;
                end if;

                SELECT * FROM define_conta_material(  cd_estabelecimento_w, cd_material_w, 2, null, 0, '0', 0, null, null, null, cd_local_estoque_w, cd_operacao_w, dt_movimento_w, cd_conta_debito_w, cd_centro_custo_w, null) INTO STRICT cd_conta_debito_w, cd_centro_custo_w;

                cd_sequencia_parametro_es_w := philips_contabil_pck.get_parametro_conta_contabil();

                SELECT * FROM define_conta_material(  cd_estabelecimento_w, cd_material_w, 3, null, 0, '0', 0, null, null, null, cd_local_estoque_w, cd_operacao_w, dt_movimento_w, cd_conta_credito_w, cd_centro_custo_w, null) INTO STRICT cd_conta_credito_w, cd_centro_custo_w;

                cd_sequencia_parametro_pd_w := philips_contabil_pck.get_parametro_conta_contabil();
                cd_conta_credito_w      := coalesce(cd_conta_oper_baixa_prod_w, cd_conta_credito_w);

                select  coalesce(max(cd_centro_custo), 0)
                into STRICT    cd_centro_custo_w
                from    local_estoque
                where   cd_local_estoque        = cd_local_estoque_w;

                if (ie_compl_hist_w = 'S') then
                        ds_conteudo_w   := substr(      nr_lote_producao_w      || '#@' ||
                                                        ds_material_w           || '#@' ||
                                                        cd_material_w,1,4000);

                        begin
                        ds_compl_historico_w    := substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
                        exception
                        when others then
                                ds_compl_historico_w    := null;
                        end;
                end if;

                nr_documento_ww         := nr_lote_producao_w;
                ie_origem_documento_w   := 9;

                insert into w_movimento_contabil(nr_lote_contabil,
                        nr_sequencia,
                        cd_conta_contabil,
                        ie_debito_credito,
                        cd_historico,
                        dt_movimento,
                        vl_movimento,
                        cd_centro_custo,
                        ds_compl_historico,
                        ds_doc_agrupamento,
                        nr_seq_agrupamento,
                        nr_seq_trans_fin,
                        cd_cgc,
                        cd_pessoa_fisica,
                        nr_documento,
                        ie_transitorio,
                        ie_origem_documento,
                        nr_seq_tab_orig,
                        nm_tabela,
                        nm_atributo,
                        nr_seq_info,
                        cd_sequencia_parametro)
                values (nr_lote_contabil_p,
                        nr_sequencia_movto_w,
                        cd_conta_debito_w,
                        'D',
                        cd_historico_w,
                        dt_movimento_w,
                        vl_contabil_w,
                        null,
                        ds_compl_historico_w,
                        null,
                        nr_seq_agrupamento_w,
                        null,
                        null,
                        null,
                        nr_documento_ww,
                        'N',
                        ie_origem_documento_w,
                        nr_lote_producao_w,
                        nm_tabela_w,
                        nm_atributo_w,
                        9,
                        cd_sequencia_parametro_es_w);

                ie_centro_custo_w       := '';

                if (coalesce(cd_centro_custo_w,0) != 0) and (coalesce(cd_conta_credito_w,'0') != '0')then
                        begin
                        select  coalesce(a.ie_centro_custo,'N')
                        into STRICT    ie_centro_custo_w
                        from    conta_contabil a
                        where   a.cd_conta_contabil     = cd_conta_credito_w;
                        exception when others then
                                ie_centro_custo_w       := 'N';
                        end;
                end if;

                insert into w_movimento_contabil(nr_lote_contabil,
                        nr_sequencia,
                        cd_conta_contabil,
                        ie_debito_credito,
                        cd_historico,
                        dt_movimento,
                        vl_movimento,
                        cd_centro_custo,
                        ds_compl_historico,
                        ds_doc_agrupamento,
                        nr_seq_agrupamento,
                        nr_seq_trans_fin,
                        cd_cgc,
                        cd_pessoa_fisica,
                        nr_documento,
                        ie_transitorio,
                        ie_origem_documento,
                        nr_seq_tab_orig,
                        nm_tabela,
                        nm_atributo,
                        nr_seq_info,
                        cd_sequencia_parametro)
                values (nr_lote_contabil_p,
                        nr_sequencia_movto_w,
                        cd_conta_credito_w,
                        'C',
                        cd_historico_w,
                        dt_movimento_w,
                        vl_contabil_w,
                        CASE WHEN ie_centro_custo_w='S' THEN cd_centro_custo_w WHEN ie_centro_custo_w='N' THEN null END ,
                        ds_compl_historico_w,
                        null,
                        nr_seq_agrupamento_w,
                        null,
                        null,
                        null,
                        nr_documento_ww,
                        'N',
                        ie_origem_documento_w,
                        nr_lote_producao_w,
                        nm_tabela_w,
                        nm_atributo_w,
                        9,
                        cd_sequencia_parametro_pd_w);
        end loop;
        close c01;

        CALL agrupa_movimento_contabil(nr_lote_contabil_p, nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
        update  lote_contabil
        set     ie_situacao             = 'A',
                dt_geracao_lote         = clock_timestamp()
        where   nr_lote_contabil        = nr_lote_contabil_p;

        if (ie_exclusao_p = 'S') then
                ds_retorno_p            := wheb_mensagem_pck.get_texto(165188);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        2,
                                        '',
                                        nm_usuario_p);
        else
                ds_retorno_p            := wheb_mensagem_pck.get_texto(165187);

                CALL ctb_gravar_log_lote(    nr_lote_contabil_p,
                                        1,
                                        '',
                                        nm_usuario_p);
        end if;
        commit;
else
        rollback;
end if;

ds_retorno_p    := substr(ds_retorno_p,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE contabiliza_lote_producao (nr_lote_contabil_p bigint, nm_usuario_p text, ds_retorno_p INOUT text, ie_exclusao_p text) FROM PUBLIC;

