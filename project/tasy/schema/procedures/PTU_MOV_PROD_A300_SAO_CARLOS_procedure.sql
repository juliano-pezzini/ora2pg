-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_mov_prod_a300_sao_carlos ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

			 
dt_mes_referencia_w		timestamp;
nr_seq_movimentacao_w		bigint;
nr_seq_segurado_w		bigint;
ie_sexo_w			bigint;
nr_cont_w			bigint := 1;
nr_seq_empresa_w		ptu_mov_produto_empresa.nr_sequencia%type;
ds_razao_social_w   		varchar(255);
cd_cgc_cpf_w   		ptu_mov_produto_empresa.cd_cgc_cpf%type;
nm_beneficiario_w		ptu_mov_produto_benef.nm_beneficiario%type;
ie_tipo_movimento_w		ptu_mov_produto_benef.ie_tipo_movimento%type;
nr_seq_mov_prod_benef_w		ptu_mov_produto_benef.nr_sequencia%type;	
dt_inclusao_w			ptu_mov_produto_benef.dt_inclusao%type;
dt_exclusao_w			ptu_mov_produto_benef.dt_exclusao%type;
cd_pessoa_fisica_w		ptu_mov_produto_benef.cd_pessoa_fisica%type;
dt_inclusao_plano_dest_w	ptu_mov_produto_benef.dt_inclusao_plano_dest%type;
dt_inclusao_empr_uni_w		ptu_mov_produto_benef.dt_inclusao_empr_uni%type;
dt_nascimento_w			ptu_mov_produto_benef.dt_nascimento%type;
nm_mae_benef_w			ptu_mov_produto_benef.nm_mae_benef%type;
nr_rg_w				ptu_mov_produto_benef.nr_rg%type;
cd_plano_w			ptu_mov_produto_benef.cd_plano%type;
nr_seq_titular_w		ptu_mov_produto_benef.nr_seq_titular%type;
cd_usuario_plano_w		ptu_mov_produto_benef.cd_usuario_plano%type;
cd_cpf_w			ptu_mov_produto_benef.cd_cgc_cpf%type;
ds_endereco_w			compl_pessoa_fisica.ds_endereco%type;
nr_endereco_w			compl_pessoa_fisica.nr_endereco%type;
ds_complemento_w		compl_pessoa_fisica.ds_complemento%type;
ds_bairro_w			compl_pessoa_fisica.ds_bairro%type;
ds_municipio_w			compl_pessoa_fisica.ds_municipio%type;
sg_estado_w			compl_pessoa_fisica.sg_estado%type;
cd_titular_plano_w 		pls_segurado_carteira.cd_usuario_plano%type;
nm_pai_w			pessoa_fisica.nm_sobrenome_pai%type;
nm_mae_w			pessoa_fisica.nm_sobrenome_mae%type;
ie_estado_civil_w		pessoa_fisica.ie_estado_civil%type;
nr_identidade_w			pessoa_fisica.nr_identidade%type;
ie_tipo_contratacao_w 		pls_plano.ie_tipo_contratacao%type;
nr_seq_vinculo_sca_w		ptu_mov_produto_benef.nr_seq_vinculo_sca%type;
ds_cargo_w			varchar(255);
nm_conjuge_w			varchar(255);
nm_titular_w			varchar(255);
dt_cancelamento_w		varchar(255);
cd_seq_compl_w			varchar(255);	
cd_produto_sca_w		varchar(255);
ds_telefone_w			varchar(255);
ds_telefone_1_w			varchar(255);
ds_telefone_2_w			varchar(255);
ds_telefone_3_w			varchar(255);
ds_telefone_4_w			varchar(255);
ds_email_w			varchar(255);
ds_email_2_w			varchar(255);
ds_email_3_w			varchar(255);	
nr_seq_contrato_w 		pls_segurado.nr_seq_contrato%type;

C01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	ptu_movimentacao_produto 
	where	nr_seq_lote	= nr_seq_lote_p;
	
C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_cgc_cpf 
	from	ptu_mov_produto_empresa 
	where	nr_seq_mov_produto	= nr_seq_movimentacao_w;

C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_segurado, 
		nm_beneficiario, 
		dt_inclusao, 
		dt_exclusao, 
		cd_pessoa_fisica, 
		ie_tipo_movimento, 
		dt_inclusao_plano_dest, 
		dt_inclusao_empr_uni, 
		dt_nascimento, 
		nm_mae_benef, 
		nr_rg, 
		cd_plano, 
		nr_seq_titular, 
		cd_usuario_plano, 
		cd_titular_plano, 
		nr_seq_vinculo_sca 
	from	ptu_mov_produto_benef 
	where	nr_seq_empresa	= nr_seq_empresa_w;
	
C04 CURSOR FOR  -- cursor para buscar todos os telefones da pessoa f√≠sica 
	SELECT	CASE WHEN ie_tipo_complemento=2 THEN '01' WHEN ie_tipo_complemento=1 THEN '02'  ELSE '03' END ||lpad(coalesce(nr_ddd_telefone,'0'),4,'0')||lpad(coalesce(nr_telefone,'0'),10,'0') nr_telefone, 
		ds_email 
	from  compl_pessoa_fisica 
	where  cd_pessoa_fisica 	= cd_pessoa_fisica_w 
	and  	(nr_telefone IS NOT NULL AND nr_telefone::text <> '') 
	and 	nr_telefone <> '0' 
	
union all
 
	SELECT	'05'||lpad(coalesce(nr_ddd_celular,'0'),4,'0')||lpad(coalesce(nr_telefone_celular,'0'),10,'0') nr_telefone, 
		' 'ds_email 
	from 	pessoa_fisica 
	where  cd_pessoa_fisica 	= cd_pessoa_fisica_w 
	and  	(nr_telefone_celular IS NOT NULL AND nr_telefone_celular::text <> '') 
	and 	nr_telefone_celular <> '0' 
	order by nr_telefone, ds_email desc;
	

BEGIN 
 
delete from w_ptu_movto_produto 
where nm_usuario = nm_usuario_p;
 
select	dt_mesano_referencia 
into STRICT	dt_mes_referencia_w 
from	ptu_mov_produto_lote 
where	nr_sequencia	= nr_seq_lote_p;
 
open C01;
loop 
fetch C01 into 
	nr_seq_movimentacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	open C02;
	loop 
	fetch C02 into 
		nr_seq_empresa_w, 
		cd_cgc_cpf_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin 
		open C03;
		loop 
		fetch C03 into 
			nr_seq_mov_prod_benef_w, 
			nr_seq_segurado_w, 
			nm_beneficiario_w, 
			dt_inclusao_w, 
			dt_exclusao_w, 
			cd_pessoa_fisica_w, 
			ie_tipo_movimento_w, 
			dt_inclusao_plano_dest_w, 
			dt_inclusao_empr_uni_w, 
			dt_nascimento_w, 
			nm_mae_benef_w, 
			nr_rg_w, 
			cd_plano_w, 
			nr_seq_titular_w, 
			cd_usuario_plano_w, 
			cd_titular_plano_w, 
			nr_seq_vinculo_sca_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			 
			if (cd_plano_w IS NOT NULL AND cd_plano_w::text <> '') then 
				select max(ie_tipo_contratacao) 
				into STRICT 	ie_tipo_contratacao_w 
				from 	pls_plano 
				where 	cd_plano = cd_plano_w;
			end if;
			 
			if (coalesce(nr_seq_vinculo_sca_w,0) <> 0) then				 
				select 	CASE WHEN nr_seq_plano=27480 THEN '1637' WHEN nr_seq_plano=27481 THEN '1190' WHEN nr_seq_plano=27478 THEN '1078' WHEN nr_seq_plano=27479 THEN '1078' WHEN nr_seq_plano=27449 THEN '1077' WHEN nr_seq_plano=27450 THEN '1077' WHEN nr_seq_plano=27475 THEN '1077' WHEN nr_seq_plano=27476 THEN '1077'  ELSE 'AAA' END  
				into STRICT 	cd_produto_sca_w 
				from 	pls_sca_vinculo 
				where 	nr_sequencia = nr_seq_vinculo_sca_w;
			end if;
			 
			select 	nr_seq_contrato	 
			into STRICT	nr_seq_contrato_w 
			from 	pls_segurado 
			where 	nr_sequencia = nr_seq_segurado_w;
			 
			select	substr(max(b.nm_sobrenome_pai),1,255), 
				substr(max(b.nm_sobrenome_mae),1,255), 
				CASE WHEN max(b.ie_sexo)='M' THEN 2 WHEN max(b.ie_sexo)='F' THEN 1 END , 
				CASE WHEN max(b.ie_estado_civil)='1' THEN '01' WHEN max(b.ie_estado_civil)='2' THEN '02' WHEN max(b.ie_estado_civil)='3' THEN '03' WHEN max(b.ie_estado_civil)='4' THEN '04' WHEN max(b.ie_estado_civil)='7' THEN '05' WHEN max(b.ie_estado_civil)='5' THEN '08'  ELSE '06' END  ie_estado_civil, 
				max(b.nr_identidade), 
				max(b.nr_cpf) cd_cpf, 
				CASE WHEN ie_tipo_movimento_w='E' THEN  dt_exclusao_w  ELSE null END dt_cancelamento				 
			into STRICT	nm_pai_w, 
				nm_mae_w, 
				ie_sexo_w, 
				ie_estado_civil_w, 
				nr_identidade_w, 
				cd_cpf_w, 
				dt_cancelamento_w				 
			from 	compl_pessoa_fisica a, 
				pessoa_fisica b 
			where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
			and  	b.cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
			select 	obter_nome_pf(max(cd_pessoa_fisica_ref)) 
			into STRICT 	nm_conjuge_w 
			from 	compl_pessoa_fisica 
			where	ie_tipo_complemento = 6 
			and 	cd_pessoa_fisica = cd_pessoa_fisica_w;
			 
			 
			select 	CASE WHEN coalesce(nr_sequencia::text, '') = '' THEN '0'  ELSE '1' END  
			into STRICT	cd_seq_compl_w 
			from 	ptu_movimento_benef_compl 
			where	nr_seq_beneficiario = nr_seq_mov_prod_benef_w;
			 
			nr_cont_w := 1;
			 
			open C04;
			loop 
			fetch C04 into	 
				ds_telefone_w, 
				ds_email_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				if (nr_cont_w = 1) then 
					ds_telefone_1_w := ds_telefone_w;
					ds_email_2_w := ds_email_w;
				elsif (nr_cont_w = 2) then 
					ds_telefone_2_w := ds_telefone_w;
					ds_email_3_w := ds_email_w;
				elsif (nr_cont_w = 3) then 
					ds_telefone_3_w := ds_telefone_w;
				elsif (nr_cont_w = 4) then 
					ds_telefone_4_w:= ds_telefone_w;		
				end if;			
				 
				nr_cont_w := nr_cont_w + 1;
				 
				end;
			end loop;
			close C04;
		 
			insert into w_ptu_movto_produto(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
				nm_beneficiario, dt_nascimento, nm_pais, nm_mae_benef, nm_beficiario, 
				nr_identidade, nr_cpf, cd_pessoa_fisica, nr_seq_lote_movto, 
				ie_tipo_movimento, cd_usuario_plano, cd_plano_ans, nr_seq_segurado, nr_seq_titular, 
				nr_seq_contrato, dt_cancelamento, nr_seq_movto_benef, ie_dig_municipio_ibge, dt_adesao_plano, 
				cd_usuario_plano_sup, dt_adaptacao, cd_cgc_estipulante, ie_sexo, ie_estado_civil, 
				ds_observacao, cd_pais, cd_plano_ans_pre, nr_prot_ans_origem, ds_email_1, ds_email_2 ) 
				 
			values (nextval('w_ptu_movto_produto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 
				nm_beneficiario_w, dt_nascimento_w, nm_pai_w, coalesce(nm_mae_benef_w,nm_mae_w), nm_conjuge_w, 
				coalesce(nr_identidade_w,nr_rg_w), cd_cpf_w, cd_pessoa_fisica_w, nr_seq_lote_p , ie_tipo_movimento_w, 
				cd_usuario_plano_w, cd_produto_sca_w, nr_seq_segurado_w, coalesce(nr_seq_titular_w,nr_seq_segurado_w), 
				nr_seq_contrato_w, dt_cancelamento_w, nr_seq_mov_prod_benef_w, cd_seq_compl_w, dt_inclusao_plano_dest_w, 
				cd_titular_plano_w, dt_inclusao_empr_uni_w, cd_cgc_cpf_w, ie_sexo_w, ie_estado_civil_w, 
				ds_telefone_1_w, ds_telefone_2_w, ds_telefone_3_w, ds_telefone_4_w ,ds_email_2_w, ds_email_3_w);
			end;		
		end loop;
		close C03;
		end;
	end loop;
	close C02;
	end;
end loop;
close C01;
 
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_mov_prod_a300_sao_carlos ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

