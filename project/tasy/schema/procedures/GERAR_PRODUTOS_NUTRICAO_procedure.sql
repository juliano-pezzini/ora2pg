-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_produtos_nutricao ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, ds_lista_produtos_p text, nm_usuario_p text) AS $body$
DECLARE

 
ds_lista_w		varchar(4000);
ds_lista_aux_w		varchar(2000);
nr_pos_virgula_w	bigint;
nr_pos_hifem_w		bigint;
nr_seq_produto_w	bigint;
qt_dose_w		double precision;
qt_vel_infusao_w	double precision;
qt_hora_aplicacao_w	smallint;
nr_ctrl_loop_w		smallint := 0;

BEGIN
if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_dieta_p IS NOT NULL AND nr_seq_dieta_p::text <> '') and (ds_lista_produtos_p IS NOT NULL AND ds_lista_produtos_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then 
	begin 
	 
	ds_lista_w	:= ds_lista_produtos_p;	
	 
	while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') and (nr_ctrl_loop_w < 100) loop 
		begin 
		nr_ctrl_loop_w 		:= nr_ctrl_loop_w + 1;		
		nr_pos_virgula_w	:= position(',' in ds_lista_w);
		 
		qt_dose_w		:= 0;
		qt_hora_aplicacao_w	:= 0;
		qt_vel_infusao_w	:= 0;
		 
		if (coalesce(nr_pos_virgula_w,0) > 0) then 
			begin 
			ds_lista_aux_w	:= substr(ds_lista_w,0,nr_pos_virgula_w-1);
			ds_lista_w	:= substr(ds_lista_w,nr_pos_virgula_w+1,length(ds_lista_w));
			end;
		else 
			begin 
			ds_lista_aux_w	:= ds_lista_w;
			ds_lista_w	:= null;
			end;
		end if;
		 
		if (ds_lista_aux_w IS NOT NULL AND ds_lista_aux_w::text <> '') then 
			begin 
			nr_pos_hifem_w	:= position('-' in ds_lista_aux_w);
		 
			if (coalesce(nr_pos_hifem_w,0) > 0) then 
				begin 
				nr_seq_produto_w	:= substr(ds_lista_aux_w,1,nr_pos_hifem_w-1);
				ds_lista_aux_w		:= substr(ds_lista_aux_w,nr_pos_hifem_w+1,length(ds_lista_aux_w));
 
				if (ds_lista_aux_w IS NOT NULL AND ds_lista_aux_w::text <> '') then 
					begin					 
					nr_pos_hifem_w	:= position('-' in ds_lista_aux_w);
 
					if (coalesce(nr_pos_hifem_w,0) > 0) then 
						begin									 
						qt_dose_w	:= (replace(substr(ds_lista_aux_w,0,nr_pos_hifem_w-1),'.',','))::numeric;
						ds_lista_aux_w		:= substr(ds_lista_aux_w,nr_pos_hifem_w+1,length(ds_lista_aux_w));
 
						if (ds_lista_aux_w IS NOT NULL AND ds_lista_aux_w::text <> '') then 
							begin 
							nr_pos_hifem_w	:= position('-' in ds_lista_aux_w);
 
							if (coalesce(nr_pos_hifem_w,0) > 0) and (substr(ds_lista_aux_w,0,nr_pos_hifem_w-1) not in ('S', 'N')) then 
								begin								 
								qt_hora_aplicacao_w	:= substr(ds_lista_aux_w,0,nr_pos_hifem_w-1);
								ds_lista_aux_w		:= substr(ds_lista_aux_w,nr_pos_hifem_w+1,length(ds_lista_aux_w));
								end;
								 
								if (ds_lista_aux_w IS NOT NULL AND ds_lista_aux_w::text <> '') then 
									begin 
									nr_pos_hifem_w	:= position('-' in ds_lista_aux_w);
 
									if (coalesce(nr_pos_hifem_w,0) > 0) then 
										begin 
										qt_vel_infusao_w	:= substr(ds_lista_aux_w,0,nr_pos_hifem_w-1);
										ds_lista_aux_w		:= substr(ds_lista_aux_w,nr_pos_hifem_w+1,length(ds_lista_aux_w));
										end;
									end if;
									end;
								end if;
							end if;
							end;
						end if;
						end;
					end if;
					end;
				end if;
				end;
			else 
				begin 
				ds_lista_aux_w	:= null;
				end;
			end if;
			end;
		end if;
		 
		 
		if (nr_seq_produto_w IS NOT NULL AND nr_seq_produto_w::text <> '') then 
			begin 
			 
			if (qt_dose_w = 0) then 
				begin 
				qt_dose_w := null;
				end;
			end if;
			 
			if (qt_hora_aplicacao_w = 0) then 
				begin 
				qt_hora_aplicacao_w := null;
				end;
			end if;
			 
			if (qt_vel_infusao_w = 0) then 
				begin 
				qt_vel_infusao_w := null;
				end;
			end if;
			 
			CALL gerar_produto_nutricao( 
				nr_prescricao_p, 
				nr_seq_dieta_p, 
				null, 
				nm_usuario_p, 
				qt_dose_w, 
				qt_vel_infusao_w, 
				qt_hora_aplicacao_w, 
				nr_seq_produto_w, 
				NULL, 
				NULL, 
				null, 
				null, 
				null);
			end;
		end if;
		end;
	end loop;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_produtos_nutricao ( nr_prescricao_p bigint, nr_seq_dieta_p bigint, ds_lista_produtos_p text, nm_usuario_p text) FROM PUBLIC;

