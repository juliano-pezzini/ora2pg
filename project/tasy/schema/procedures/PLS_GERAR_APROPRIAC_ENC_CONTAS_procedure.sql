-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_apropriac_enc_contas ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nm_pessoa_w			varchar(60);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
dt_referencia_w			varchar(8);
vl_saldo_w			double precision	:= 0;
vl_total_w			double precision	:= 0;
vl_parcelado_w			double precision	:= 0;
vl_total_preco_pre_w		double precision	:= 0;
vl_preco_pre_segurado_w		double precision	:= 0;
vl_inserido_w			double precision	:= 0;
vl_item_w			double precision	:= 0;
nr_sequencia_w			bigint;
nr_seq_pagador_w		bigint;
nr_seq_segurado_w		bigint;
qt_segurado_w			bigint	:= 0;
qt_registro_w			bigint	:= 0;
nr_titulo_pagar_w		bigint;
nr_titulo_receber_w		bigint;
qt_segurado_mens_w		bigint;
ie_segurado_w			bigint	:= 0;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia 
	from	pls_segurado a 
	where	a.nr_seq_pagador	= nr_seq_pagador_w 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and	coalesce(a.dt_rescisao::text, '') = '';


BEGIN 
 
select	nr_titulo_pagar,     
	nr_titulo_receber, 
	cd_pessoa_fisica, 
	cd_cgc 
into STRICT	nr_titulo_pagar_w, 
	nr_titulo_receber_w, 
	cd_pessoa_fisica_w, 
	cd_cgc_w 
from	pessoa_encontro_contas 
where	nr_sequencia	= nr_sequencia_p;
 
select	max(a.nr_sequencia)	-- Pagador 
into STRICT	nr_seq_pagador_w 
from	pls_contrato		b, 
	pls_contrato_pagador	a 
where	b.nr_sequencia		= a.nr_seq_contrato 
and	b.ie_situacao 		= '2' 
and (a.cd_pessoa_fisica = cd_pessoa_fisica_w or a.cd_cgc = cd_cgc_w);
 
if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then 
	if (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then 
		select	coalesce(vl_saldo_devedor, 0) 
		into STRICT	vl_total_w 
		from	pessoa_encontro_contas 
		where	nr_sequencia	= nr_sequencia_p 
		and	nr_titulo_pagar	= nr_titulo_pagar_w;
	elsif (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then 
		select	coalesce(vl_saldo_credor, 0) 
		into STRICT	vl_total_w 
		from	pessoa_encontro_contas 
		where	nr_sequencia		= nr_sequencia_p 
		and	nr_titulo_receber	= nr_titulo_receber_w;
	end if;
		 
	select	add_months(coalesce(max(dt_referencia), clock_timestamp()), 1) 
	into STRICT	dt_referencia_w 
	from	pls_mensalidade 
	where	nr_seq_pagador	= nr_seq_pagador_w;	
	 
	if (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then 
		vl_total_w	:= (vl_total_w * -1);
	end if;
	 
	select	count(1) 
	into STRICT	qt_segurado_mens_w 
	from	pls_segurado a 
	where	a.nr_seq_pagador	= nr_seq_pagador_w 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and	coalesce(a.dt_rescisao::text, '') = '';
	 
	select	sum(a.vl_preco_atual) 
	into STRICT	vl_total_preco_pre_w 
	from	pls_segurado_preco	a, 
		pls_segurado		b, 
		pls_contrato_pagador	c 
	where	a.nr_seq_segurado	= b.nr_sequencia 
	and	b.nr_seq_pagador	= c.nr_sequencia 
	and	c.nr_sequencia		= nr_seq_pagador_w 
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
	and	(((dt_referencia_w >= trunc(a.dt_reajuste, 'month')) and (a.cd_motivo_reajuste	<> 'E')) or 
		((a.cd_motivo_reajuste	= 'E') and (dt_referencia_w >= trunc(add_months(a.dt_reajuste,1), 'month'))));
	 
	ie_segurado_w	:= 0;
	vl_inserido_w	:= 0;
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_segurado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ie_segurado_w	:= ie_segurado_w + 1;
		 
		select	max(a.vl_preco_atual) 
		into STRICT	vl_preco_pre_segurado_w 
		from	pls_segurado_preco	a, 
			pls_segurado		b 
		where	a.nr_seq_segurado	= b.nr_sequencia 
		and	b.nr_sequencia		= nr_seq_segurado_w 
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
		and	(((dt_referencia_w >= trunc(a.dt_reajuste, 'month')) and (a.cd_motivo_reajuste <> 'E')) or 
			((a.cd_motivo_reajuste	= 'E') and (dt_referencia_w >= trunc(add_months(a.dt_reajuste,1), 'month'))));
			 
		vl_item_w	:= ((coalesce(vl_preco_pre_segurado_w,0) / coalesce(vl_total_preco_pre_w,0)) * vl_total_w);
		 
		if (ie_segurado_w = qt_segurado_mens_w) then 
			vl_item_w	:= vl_total_w - coalesce(vl_inserido_w, 0);
		end if;
 
		select	nextval('pls_segurado_mensalidade_seq') 
		into STRICT	nr_sequencia_w 
		;
 
		if (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then 
			insert into pls_segurado_mensalidade(cd_estabelecimento, 
				dt_atualizacao, 
				ie_situacao, 
				dt_referencia, 
				nm_usuario, 
				nr_sequencia, 
				--nr_seq_pagador, 
				vl_item, 
				ie_tipo_item, 
				nr_seq_pessoa_enc_contas, 
				ie_rateio_beneficiarios, 
				nr_seq_segurado, 
				ie_tipo_lanc, 
				nr_titulo) 
			values (cd_estabelecimento_p, 
				clock_timestamp(), 
				'A', 
				dt_referencia_w, 
				nm_usuario_p, 
				nr_sequencia_w, 
				--nr_seq_pagador_w, 
				vl_item_w, 
				'33', 
				nr_sequencia_p, 
				'S', 
				nr_seq_segurado_w, 
				'P', 
				nr_titulo_pagar_w);
		elsif (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then 
			insert into pls_segurado_mensalidade(cd_estabelecimento, 
				dt_atualizacao, 
				ie_situacao, 
				dt_referencia, 
				nm_usuario, 
				nr_sequencia, 
				--nr_seq_pagador, 
				vl_item, 
				ie_tipo_item, 
				nr_seq_pessoa_enc_contas, 
				ie_rateio_beneficiarios, 
				nr_seq_segurado, 
				ie_tipo_lanc, 
				nr_titulo) 
			values (cd_estabelecimento_p, 
				clock_timestamp(), 
				'A', 
				dt_referencia_w, 
				nm_usuario_p, 
				nr_sequencia_w, 
				--nr_seq_pagador_w, 
				vl_item_w, 
				'32', 
				nr_sequencia_p, 
				'S', 
				nr_seq_segurado_w, 
				'P', 
				nr_titulo_receber_w);
		end if;
		 
		if (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then -- Cancelar título a pagar gerado 
			update	titulo_pagar 
			set	dt_atualizacao		= clock_timestamp(), 
				nr_seq_segurado_mens	= nr_sequencia_w, 
				ds_observacao_titulo	= 'Título cancelado, pois já foi efetuada sua apropriação.', 
				nm_usuario		= nm_usuario_p		 
			where	nr_titulo		= nr_titulo_pagar_w;
			 
			CALL cancelar_titulo_pagar(nr_titulo_pagar_w, nm_usuario_p, clock_timestamp());
		end if;
 
		if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then -- Cancelar título receber gerado 
			update	titulo_receber 
			set	dt_atualizacao		= clock_timestamp(), 
				nr_seq_segurado_mens	= nr_sequencia_w, 
				ds_observacao_titulo	= 'Título cancelado, pois já foi efetuada sua apropriação.', 
				nm_usuario		= nm_usuario_p 
			where	nr_titulo		= nr_titulo_receber_w;
		 
			CALL cancelar_titulo_receber(nr_titulo_receber_w, nm_usuario_p, 'S',clock_timestamp());
		end if;
		 
		vl_inserido_w	:= coalesce(vl_inserido_w,0) + vl_item_w;
		end;
	end loop;
	close C01;
else 
	select	substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_w),1,80) 
	into STRICT	nm_pessoa_w 
	;
 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188918,'NM_PESSOA=' || nm_pessoa_w);	
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_apropriac_enc_contas ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

