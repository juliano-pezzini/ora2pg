-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_prescr_pendente (cd_estabelecimento_p text, ie_prescr_impressas_p text, ie_restringe_estab_p text, ie_prescr_n_lib_p text, ie_prescr_futura_p text, ie_opcao_p bigint, cd_setor_usuario_p bigint, cd_local_estoque_p bigint, nr_seq_turno_p bigint, ie_lib_farmacia_p bigint, ie_filtrar_horas_p text, qt_hrs_prescr_p bigint, ie_nutricao_p bigint, hr_inicio_p bigint, hr_final_p bigint, cd_local_usuario_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
nr_sequencia_w               	  	bigint;
nr_prescricao_w                   	bigint;
dt_prescricao_w                   	timestamp;
nr_atendimento_w                   	bigint;
dt_primeiro_horario_w                	timestamp;
nm_medico_w                     	varchar(60);
nm_paciente_w                    	varchar(60);
nr_itens_w                      	bigint;
nr_itens_urgentes_w                 	bigint;
ie_item_urgente_w                  	smallint;
dt_liberacao_w                    	timestamp;
dt_liberacao_medico_w                	timestamp;
dt_emissao_farmacia_w                	timestamp;
nm_usuario_w                     	varchar(15);
nm_usuario_original_w                	varchar(15);
cd_setor_atendimento_w                	integer;
ds_setor_atendimento_w                	varchar(100);
cd_local_estoque_w                  	bigint;
ds_setor_atual_w                   	varchar(200);
ds_unidade_w                     	varchar(20);
ie_sn_w                       	varchar(1);
ie_acm_w                       	varchar(1);
dt_liberacao_farmacia_w               	timestamp;
ie_lib_farm_w                 	   	varchar(1);
ds_turno_w                      	varchar(200);
ie_insere_w						varchar(1) := 'S';
cd_estabelecimento_w					smallint;
cd_local_material_w					bigint;

 
 
C01 CURSOR FOR 
SELECT 	a.nr_prescricao,        
	a.dt_prescricao,        
	a.nr_atendimento,        
	a.dt_primeiro_horario,     
	a.nm_medico,          
	a.nm_paciente,         
	sum(a.nr_itens) nr_itens,    
	sum(a.nr_itens_urgentes) nr_itens_urgentes, 
	a.ie_item_urgente,       
	a.dt_liberacao,         
	a.dt_liberacao_medico,     
	a.dt_emissao_farmacia,     
	a.nm_usuario,          
	a.nm_usuario_original,     
	a.cd_setor_atendimento,     
	a.ds_setor_atendimento,     
	a.cd_local_estoque,       
	substr(obter_unidade_atendimento(a.nr_atendimento,'A','S'),1,200) ds_setor_atual, 
	substr(obter_unidade_atendimento(a.nr_atendimento, 'IAA', 'U'),1,20) ds_unidade, 
	substr(obter_se_prescr_acm_sn(a.nr_prescricao,'SN'),1,1) ie_sn, 
	substr(obter_se_prescr_acm_sn(a.nr_prescricao,'ACM'),1,1) ie_acm, 
	a.dt_liberacao_farmacia,    
	a.ie_lib_farm,         
	substr(obter_ultimo_turno_prescr(a.nr_prescricao, cd_local_usuario_p),1,200) ds_turno, 
	a.cd_estabelecimento, 
	a.cd_local_material 
FROM 	PRESCR_MATERIAL_PENDENTE_V A  
WHERE 	NR_PRESCRICAO > 0 
and 	((ie_prescr_impressas_p = 'N' and coalesce(A.DT_EMISSAO_FARMACIA::text, '') = '') or (ie_prescr_impressas_p = 'S')) 
and 	((ie_prescr_n_lib_p 	= 'N' and (A.DT_LIBERACAO IS NOT NULL AND A.DT_LIBERACAO::text <> '')) or (ie_prescr_n_lib_p 	= 'S')) 
and 	((ie_prescr_futura_p	= 'N' and A.DT_PRESCRICAO < clock_timestamp()) or (ie_prescr_futura_p	= 'S')) 
and	((ie_lib_farmacia_p = 1 and coalesce(A.DT_LIBERACAO_FARMACIA::text, '') = '' AND IE_LIB_FARM = 'S') or (ie_lib_farmacia_p = 2 and (A.DT_LIBERACAO_FARMACIA IS NOT NULL AND A.DT_LIBERACAO_FARMACIA::text <> '')) or (ie_lib_farmacia_p = 0)) 
and 	((ie_filtrar_horas_p 	= 'S' and a.dt_prescricao > clock_timestamp() - (qt_hrs_prescr_p / 24)) or (ie_filtrar_horas_p = 'N')) 
and 	((coalesce(nr_seq_turno_p,0) > 0 and Obter_Se_prescr_hor(nr_prescricao, coalesce(nr_seq_turno_p,0)) = 'S') or (coalesce(nr_seq_turno_p,0) = 0)) 
and 	((hr_inicio_p > 0 and hr_final_p > 0 and Obter_Se_Mat_Prescr_Horario(hr_inicio_p, hr_final_p, a.nr_prescricao) = 'S') or (hr_inicio_p = 0 or hr_final_p = 0)) 
group by a.nr_prescricao,       
	a.dt_prescricao,        
	a.nr_atendimento,        
	a.dt_primeiro_horario,     
	a.nm_medico,          
	a.nm_paciente,         
	a.ie_item_urgente,       
	a.dt_liberacao,         
	a.dt_liberacao_medico,     
	a.dt_emissao_farmacia,     
	a.nm_usuario,          
	a.nm_usuario_original,     
	a.cd_setor_atendimento,     
	a.ds_setor_atendimento,     
	a.cd_local_estoque,       
	substr(obter_unidade_atendimento(a.nr_atendimento,'A','S'),1,200), 
	substr(obter_unidade_atendimento(a.nr_atendimento, 'IAA', 'U'),1,20), 
	substr(obter_se_prescr_acm_sn(a.nr_prescricao,'SN'),1,1), 
	substr(obter_se_prescr_acm_sn(a.nr_prescricao,'ACM'),1,1), 
	a.dt_liberacao_farmacia,    
	substr(obter_ultimo_turno_prescr(a.nr_prescricao, cd_local_usuario_p),1,200), 
	a.ie_lib_farm, 
	a.cd_estabelecimento, 
	a.cd_local_material 
ORDER BY A.NR_PRESCRICAO DESC;


BEGIN 
 
CALL EXEC_SQL_DINAMICO('TASY','Truncate Table W_PRESCR_MATERIAL_PENDENTE');
 
Open C01;
Loop 
fetch C01 into	nr_prescricao_w, 
		dt_prescricao_w, 
		nr_atendimento_w, 
		dt_primeiro_horario_w, 
		nm_medico_w, 
		nm_paciente_w, 
		nr_itens_w, 
		nr_itens_urgentes_w, 
		ie_item_urgente_w, 
		dt_liberacao_w, 
		dt_liberacao_medico_w, 
		dt_emissao_farmacia_w, 
		nm_usuario_w, 
		nm_usuario_original_w, 
		cd_setor_atendimento_w, 
		ds_setor_atendimento_w, 
		cd_local_estoque_w, 
		ds_setor_atual_w, 
		ds_unidade_w, 
		ie_sn_w, 
		ie_acm_w, 
		dt_liberacao_farmacia_w, 
		ie_lib_farm_w, 
		ds_turno_w, 
		cd_estabelecimento_w, 
		cd_local_material_w;
EXIT WHEN NOT FOUND; /* apply on C01 */	
	 
	/* verifica ie_opcao */
 
	if (ie_opcao_p = 0) then 
		if (nm_usuario_w = nm_usuario_p) then 
			ie_insere_w:= 'S';
		else 
			ie_insere_w:= 'N';
			goto final;
		end if;
	elsif (ie_opcao_p = 1) then 
		begin 
		select 	'S' 
		into STRICT	ie_insere_w 
		 
		where 	exists (SELECT 	1 
				from  	atend_paciente_unidade x 
				where  x.nr_atendimento = nr_atendimento_w 
				and  	x.cd_setor_atendimento = coalesce(cd_setor_usuario_p,0));
		exception 
		when others then 
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_opcao_p = 2) then 
		begin 
		select 	'S' 
		into STRICT	ie_insere_w 
		 
		where	exists (SELECT	1 
				from	usuario_setor_v y, 
					atend_paciente_unidade x 
				where 	x.nr_atendimento = nr_atendimento_w 
				and   x.cd_setor_atendimento = y.cd_setor_atendimento 
				and   y.nm_usuario = nm_usuario_p);
		exception 
		when others then 
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_opcao_p = 3) then		 
		begin 
		select 	'S' 
		into STRICT	ie_insere_w 
		 
		where	exists (SELECT	1 
				from  	setor_atendimento y, 
					atend_paciente_unidade x 
				where 	x.nr_atendimento = nr_atendimento_w 
				and   x.cd_setor_atendimento = y.cd_setor_atendimento 
				and  	y.cd_local_estoque = coalesce(cd_local_estoque_p,0));
		exception 
		when others then 
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_opcao_p = 4) then 
		ie_insere_w:= 'S';
	elsif (ie_opcao_p = 5) then 
		begin 
		select 	'S' 
		into STRICT	ie_insere_w 
		 
		where	exists (SELECT	1 
				from 	setor_atendimento y 
				where  y.cd_setor_atendimento = cd_setor_atendimento_w 
				and   y.cd_local_estoque = coalesce(cd_local_estoque_p,0));
		exception 
		when others then 
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_opcao_p = 6) then 
		if (cd_local_material_w = coalesce(cd_local_estoque_p,0)) then 
			ie_insere_w:= 'S';
		else 
			ie_insere_w:= 'N';
			goto final;
		end if;
	end if;		
	 
	/* verifica se restringe o estabelecimento */
 
	if (ie_restringe_estab_p = 'S') then 
		if (cd_estabelecimento_w = cd_estabelecimento_p) then 
			ie_insere_w:= 'S';
		else 
			ie_insere_w:= 'N';
			goto final;
		end if;
	else 
		ie_insere_w:= 'S';
	end if;
	 
	/*verifica ie_nutricao */
 
	if (ie_nutricao_p = 0) then 
		ie_insere_w:= 'S';
	elsif (ie_nutricao_p = 1) then 
		begin 
		select 	'S' 
		into STRICT	ie_insere_w 
		 
		where	exists (SELECT	1 
				from 	prescr_material b 	 
				where 	b.nr_prescricao = nr_prescricao_w 
				and 	cd_motivo_baixa = 0 
				and 	b.ie_agrupador in (6,8,12));
		exception 
		when others then 
			ie_insere_w	:= 'N';
			goto final;
		end;
	elsif (ie_nutricao_p = 2) then 
		begin 
		select 	'S' 
		into STRICT	ie_insere_w 
		 
		where	not exists (SELECT	1 
					from 	prescr_material b 	 
					where 	b.nr_prescricao = nr_prescricao_w 
					and 	cd_motivo_baixa = 0 
					and 	b.ie_agrupador in (6,8,12));
		exception 
		when others then 
			ie_insere_w	:= 'N';
			goto final;
		end;
	end if;	
 
<<final>> 
	if (ie_insere_w = 'S') then 
 
		Insert into W_PRESCR_MATERIAL_PENDENTE(nr_sequencia, 
				nr_prescricao, 
				dt_prescricao, 
				nr_atendimento, 
				dt_primeiro_horario, 
				nm_medico, 
				nm_paciente, 
				nr_itens, 
				nr_itens_urgentes, 
				ie_item_urgente, 
				dt_liberacao, 
				dt_liberacao_medico, 
				dt_emissao_farmacia, 
				nm_usuario, 
				nm_usuario_original, 
				cd_setor_atendimento, 
				ds_setor_atendimento, 
				cd_local_estoque, 
				ds_setor_atual, 
				ds_unidade, 
				ie_sn, 
				ie_acm, 
				dt_liberacao_farmacia, 
				ie_lib_farm, 
				ds_turno) 
			values (nextval('w_prescr_material_pendente_seq'), 
				nr_prescricao_w, 
				dt_prescricao_w, 
				nr_atendimento_w, 
				dt_primeiro_horario_w, 
				nm_medico_w, 
				nm_paciente_w, 
				nr_itens_w, 
				nr_itens_urgentes_w, 
				ie_item_urgente_w, 
				dt_liberacao_w, 
				dt_liberacao_medico_w, 
				dt_emissao_farmacia_w, 
				nm_usuario_w, 
				nm_usuario_original_w, 
				cd_setor_atendimento_w, 
				ds_setor_atendimento_w, 
				cd_local_estoque_w, 
				ds_setor_atual_w, 
				ds_unidade_w, 
				ie_sn_w, 
				ie_acm_w, 
				dt_liberacao_farmacia_w, 
				ie_lib_farm_w, 
				ds_turno_w);
	end if;
	 
end Loop;
close C01;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_prescr_pendente (cd_estabelecimento_p text, ie_prescr_impressas_p text, ie_restringe_estab_p text, ie_prescr_n_lib_p text, ie_prescr_futura_p text, ie_opcao_p bigint, cd_setor_usuario_p bigint, cd_local_estoque_p bigint, nr_seq_turno_p bigint, ie_lib_farmacia_p bigint, ie_filtrar_horas_p text, qt_hrs_prescr_p bigint, ie_nutricao_p bigint, hr_inicio_p bigint, hr_final_p bigint, cd_local_usuario_p bigint, nm_usuario_p text) FROM PUBLIC;

