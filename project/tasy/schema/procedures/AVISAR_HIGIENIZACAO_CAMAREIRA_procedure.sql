-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE avisar_higienizacao_camareira ( cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, ie_evento_p text ) AS $body$
DECLARE


qt_registro_w		bigint := 0;
ds_email_w		varchar(255);
ds_assunto_w		varchar(80);
ds_email_origem_w	varchar(255);
nm_usuario_w		varchar(15);
ds_setor_w		varchar(100);
nm_curto_setor_w	varchar(5);
nr_pager_bip_w	varchar(10);
cd_estabelecimento_w	smallint;
ds_aviso_w		varchar(255);
nr_ramal_w		integer;

c01 CURSOR FOR
SELECT	ds_email,
	ds_assunto,
	nm_usuario,
	substr(obter_nome_setor(cd_setor_atendimento_p),1,100),
	substr(OBTER_DESC_CURTA_SETOR(cd_setor_atendimento_p),1,5),
	nr_pager_bip
from	regra_loc_camareira
where	cd_setor_atendimento	= cd_setor_atendimento_p
and	coalesce(ie_evento,'S')	= ie_evento_p;


BEGIN

select	count(*)
into STRICT	qt_registro_w
from	regra_loc_camareira
where	cd_setor_atendimento	= cd_setor_atendimento_p
and	coalesce(ie_evento,'S') 	= ie_evento_p;

if (qt_registro_w > 0) then
	begin

	select	coalesce(max(ds_email),obter_dados_pf_pj_estab(b.cd_estabelecimento,NULL,a.cd_cgc,'M'))
	into STRICT	ds_email_origem_w
	from	pessoa_juridica		a,
		estabelecimento		b,
		setor_atendimento	c
	where	c.cd_setor_atendimento		= cd_setor_atendimento_p
	and	c.cd_estabelecimento_base	= b.cd_estabelecimento
	and	b.cd_cgc			= a.cd_cgc
	group by obter_dados_pf_pj_estab(b.cd_estabelecimento,NULL,a.cd_cgc,'M');

	select	max(cd_estabelecimento)
	into STRICT	cd_estabelecimento_w
	from	setor_Atendimento
	where	cd_setor_atendimento	= cd_setor_atendimento_p;

	if (coalesce(ds_email_origem_w::text, '') = '') then
		select	ds_email
		into STRICT	ds_email_origem_w
		from	pessoa_juridica_estab
		where	cd_estabelecimento  = cd_estabelecimento_w
		and	cd_cgc = (	SELECT	max(cd_cgc)
		    			from	estabelecimento
					where	cd_estabelecimento = (	select	max(cd_estabelecimento)
									from	setor_Atendimento
									where	cd_setor_atendimento	= cd_setor_atendimento_p));
	end if;

	exception
	when others then
		ds_email_origem_w	:= null;
	end;

	open c01;
	loop
	fetch 	c01 into
		ds_email_w,
		ds_assunto_w,
		nm_usuario_w,
		ds_setor_w,
		nm_curto_setor_w,
		nr_pager_bip_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		if (position('@LEITO' in ds_assunto_w) > 0) then
			ds_assunto_w	:= substr(replace_macro(ds_assunto_w,'@LEITO', cd_unidade_basica_p || ' - ' || cd_unidade_compl_p || ' - ' || nm_curto_setor_w), 1,80);
		end if;
		if (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then
			CALL enviar_email(ds_assunto_w, (	 WHEB_MENSAGEM_PCK.get_texto(457518, 'cd_unidade_basica='||cd_unidade_basica_p||';cd_unidade_compl='||cd_unidade_compl_p||
              ';ds_setor='||ds_setor_w)),
							ds_email_origem_w, ds_email_w, nm_usuario_w,'M');
		end if;
		if (nr_pager_bip_w IS NOT NULL AND nr_pager_bip_w::text <> '') then
			select	coalesce(max(nr_ramal),0)
			into STRICT	nr_ramal_w
			from	unidade_atendimento
			where cd_setor_atendimento	= cd_setor_atendimento_p
			  and cd_unidade_basica		= cd_unidade_basica_p
			  and cd_unidade_compl		= cd_unidade_compl_p;

			ds_aviso_w	:= substr(WHEB_MENSAGEM_PCK.get_texto(457518, 'cd_unidade_basica='||cd_unidade_basica_p||';cd_unidade_compl='||cd_unidade_compl_p||
      ';ds_setor='||nm_curto_setor_w),1,255);

			insert into tel_reg_evento(	NR_SEQUENCIA,		CD_ESTABELECIMENTO,
							DT_ATUALIZACAO,		NM_USUARIO,
							DT_EVENTO,		NR_RAMAL,
							CD_EVENTO,		NR_SEQ_EVENTO,
							NR_SEQ_ACAO,		CD_SETOR_ATENDIMENTO,
							CD_UNIDADE_BASICA,	CD_UNIDADE_COMPL,
							DS_OBSERVACAO,		DS_ERRO,
							DT_REALIZACAO,		DT_ATUALIZACAO_NREC,
							NM_USUARIO_NREC,	NR_PAGER_BIP,
							IE_PROCESSADO)
			values (	nextval('tel_reg_evento_seq'),	cd_estabelecimento_w,
					clock_timestamp(),			nm_usuario_w,
					clock_timestamp(),			nr_ramal_w,
					'AvisarPager',			null,
					null,				cd_setor_atendimento_p,
					cd_unidade_basica_p,		cd_unidade_compl_p,
					ds_assunto_w,			null,
					null,				clock_timestamp(),
					nm_usuario_w,			nr_pager_bip_w,
					0);
		end if;
	end loop;
	close c01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE avisar_higienizacao_camareira ( cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, ie_evento_p text ) FROM PUBLIC;

