-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_schlote_ajustar_prot_conta ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_segurado_w	bigint;
nr_seq_conta_w		bigint;
NR_SEQ_MATERIAL_w	bigint;
qt_registros_w		bigint;
VL_UNITARIO_IMP_w	double precision;
dt_emissao_guia_w	timestamp;
NR_SEQ_CONTRATO_W	bigint;
cd_procedimento_w	pls_conta_proc.cd_procedimento%type;
IE_ORIGEM_PROCED_w	pls_conta_proc.IE_ORIGEM_PROCED%type;
NR_SEQ_MATERIAL_PRECO_W	bigint;

C01 CURSOR FOR
	SELECT	nr_seq_segurado,
		nr_sequencia,
		coalesce(DT_EMISSAO,dt_emissao_imp)
	from	pls_conta
	where	nr_seq_protocolo = nr_seq_protocolo_p;

C02 CURSOR FOR
	SELECT	NR_SEQ_MATERIAL,
		VL_UNITARIO_IMP
	from	pls_conta_mat
	where	nr_seq_conta	= nr_seq_conta_w
	AND	(NR_SEQ_MATERIAL IS NOT NULL AND NR_SEQ_MATERIAL::text <> '');

C03 CURSOR FOR
	SELECT	CD_PROCEDIMENTO,
		IE_ORIGEM_PROCED,
		VL_UNITARIO_IMP
	from	pls_conta_PROC
	where	nr_seq_conta	= nr_seq_conta_w
	AND	(CD_PROCEDIMENTO IS NOT NULL AND CD_PROCEDIMENTO::text <> '')
	and	IE_TIPO_DESPESA = 1;

C04 CURSOR FOR
	SELECT	CD_PROCEDIMENTO,
		IE_ORIGEM_PROCED,
		VL_UNITARIO_IMP
	from	pls_conta_PROC
	where	nr_seq_conta	= nr_seq_conta_w
	AND	(CD_PROCEDIMENTO IS NOT NULL AND CD_PROCEDIMENTO::text <> '')
	and	IE_TIPO_DESPESA <> 1;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_segurado_w,
	nr_seq_conta_w,
	dt_emissao_guia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open c02;
	loop
	fetch c02 into
		NR_SEQ_MATERIAL_w,
		VL_UNITARIO_IMP_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	count(1)
		into STRICT	qt_registros_w
		from	PLS_MATERIAL_PRECO_ITEM
		where	NR_SEQ_MATERIAL_PRECO	= 13
		and	NR_SEQ_MATERIAL	= NR_SEQ_MATERIAL_w;

		if (qt_registros_w = 0) then

			select	nextval('pls_material_preco_item_seq')
			into STRICT	NR_SEQ_MATERIAL_PRECO_W
			;

			insert into PLS_MATERIAL_PRECO_ITEM(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					DT_INICIO_VIGENCIA,NR_SEQ_MATERIAL,NR_SEQ_MATERIAL_PRECO,VL_MATERIAL,CD_MOEDA,
					IE_SITUACAO)
			values (	NR_SEQ_MATERIAL_PRECO_W,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					to_date('01/01/2000'),NR_SEQ_MATERIAL_w,13,VL_UNITARIO_IMP_w,1,
					'A');

			insert into PLS_MATERIAL_VALOR_ITEM(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					DT_INICIO_VIGENCIA,NR_SEQ_PRECO_ITEM,VL_MATERIAL,CD_MOEDA)
			values (	NR_SEQ_MATERIAL_PRECO_W,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					to_date('01/01/2000'),NR_SEQ_MATERIAL_PRECO_W,VL_UNITARIO_IMP_w,1);
		end if;


		end;
	end loop;
	close c02;

	open c03;
	loop
	fetch c03 into
		CD_PROCEDIMENTO_w,
		IE_ORIGEM_PROCED_w,
		VL_UNITARIO_IMP_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin

		select	count(1)
		into STRICT	qt_registros_w
		from	PRECO_AMB
		where	cd_edicao_amb	= 35
		and	CD_PROCEDIMENTO	= CD_PROCEDIMENTO_w;

		if (qt_registros_w = 0) then

			insert into PRECO_AMB(	NR_SEQUENCIA,cd_edicao_amb,cd_procedimento,vl_procedimento,cd_moeda,dt_atualizacao,nm_usuario,
					VL_CUSTO_OPERACIONAL,IE_ORIGEM_PROCED)
			values (	nextval('preco_amb_seq'),35,CD_PROCEDIMENTO_w,VL_UNITARIO_IMP_w,1,clock_timestamp(),nm_usuario_p,
					VL_UNITARIO_IMP_w,IE_ORIGEM_PROCED_w);
		end if;

		end;
	end loop;
	close c03;

	open c04;
	loop
	fetch c04 into
		CD_PROCEDIMENTO_w,
		IE_ORIGEM_PROCED_w,
		VL_UNITARIO_IMP_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */
		begin

		select	count(1)
		into STRICT	qt_registros_w
		from	PRECO_SERVICO
		where	CD_TABELA_SERVICO	= 1213
		and	CD_PROCEDIMENTO	= CD_PROCEDIMENTO_w
		and	IE_ORIGEM_PROCED = IE_ORIGEM_PROCED_w;

		if (qt_registros_w = 0) then

			insert into PRECO_SERVICO(	CD_ESTABELECIMENTO,CD_TABELA_SERVICO,cd_procedimento,VL_SERVICO,cd_moeda,dt_atualizacao,nm_usuario,
					DT_INICIO_VIGENCIA,IE_ORIGEM_PROCED)
			values (	cd_estabelecimento_p,1213,CD_PROCEDIMENTO_w,VL_UNITARIO_IMP_w,1,clock_timestamp(),nm_usuario_p,
					to_date('01/01/2000'),IE_ORIGEM_PROCED_w);
		end if;

		end;
	end loop;
	close c04;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_schlote_ajustar_prot_conta ( nr_seq_protocolo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

