-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE nr_sequencia_r AS (nr_sequencia		w_apap_pac_informacao.nr_sequencia%type);


CREATE OR REPLACE PROCEDURE apap_insere_registros ( nr_seq_documento_p bigint, nr_atendimento_p bigint, cd_paciente_p text, ie_modo_p text default 'L') AS $body$
DECLARE

TYPE nr_sequencia_t IS TABLE OF nr_sequencia_r;

nm_usuario_w			usuario.nm_usuario%type						:=	wheb_usuario_pck.get_nm_usuario;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type		:= 	wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_w				perfil.cd_perfil%type						:= 	wheb_usuario_pck.get_cd_perfil;
cd_pf_usuario_w			pessoa_fisica.cd_pessoa_fisica%type			:= 	obter_pf_usuario(wheb_usuario_pck.get_nm_usuario,'C');
cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type	:=  wheb_usuario_pck.get_cd_setor_atendimento;

ds_insert_atributo_w	varchar(32000);
ds_insert_valores_w		varchar(32000);
ds_lista_sequencia_w	varchar(32000);
ds_comando_w			varchar(32000);
ds_parametros_w			varchar(32000);
sql_errm_w				varchar(32000);
ie_registro_w			varchar(01) := 'N';
ds_virgula_atributo_w	varchar(01);
ds_virgula_valores_w	varchar(01);
ds_virgula_lista_w		varchar(01);
ie_exception_w			varchar(01);
ds_sep_bv_w				varchar(50)	:= obter_separador_bv;
vl_atributo_pk_w		bigint;
dt_liberacao_w			timestamp;
nr_seq_reg_template_w	ehr_reg_template.nr_sequencia%type;
ie_tipo_evolucao_w		usuario.ie_tipo_evolucao%type;
nr_seq_registro_w		ehr_registro.nr_sequencia%type;
nr_seq_reg_elem_w		ehr_reg_elemento.nr_sequencia%type;
ie_modo_w				valor_dominio.vl_dominio%type;
nr_sequencia_row_w		nr_sequencia_t;

c_datas CURSOR FOR
	SELECT	distinct 	d.dt_registro,
						c.nm_tabela,
						c.nr_seq_linked_data,
						b.nr_seq_template,
						c.ie_aparelho_pa,
						coalesce(d.ie_integracao,'N') ie_integracao,
						coalesce(d.ie_status_registro,'P') ie_status_registro,
						d.nr_seq_origem
	from	w_apap_pac a,
			w_apap_pac_grupo b,
			w_apap_pac_informacao c,
			w_apap_pac_registro d
	where	a.nr_sequencia			= b.nr_seq_mod_apap
	and		b.nr_sequencia			= c.nr_seq_apap_grupo
	and		c.nr_sequencia			= d.nr_seq_apap_inf
	and		a.nr_atendimento 	    = nr_atendimento_p
	and		a.nr_seq_documento	  	= nr_seq_documento_p
	and		a.nm_usuario			= nm_usuario_w
	and     ((coalesce(d.nr_seq_origem::text, '') = '') or (d.ie_status_houdini = 'L') or
			 ((coalesce(d.ie_integracao,'N') = 'S') and (coalesce(d.dt_liberacao::text, '') = '')))
	AND		coalesce(d.ie_situacao,'A')	= 'A'
	and		coalesce(d.ie_resumo,'N')    <> 'S'
	and		((ie_modo_w = 'L') or 	((ie_modo_w = 'IP') and (coalesce(d.ie_status_registro,'P') in ('A','R'))))
	order by 1,2;

c_datas_template CURSOR FOR
	SELECT	distinct d.dt_registro,e.nr_seq_template
	from	w_apap_pac a,
			w_apap_pac_grupo b,
			w_apap_pac_informacao c,
			w_apap_pac_registro d,
			ehr_template_conteudo e
	where	a.nr_sequencia		= b.nr_seq_mod_apap
	and		b.nr_sequencia		= c.nr_seq_apap_grupo
	and		c.nr_sequencia		= d.nr_seq_apap_inf
	and		a.nr_atendimento 	= nr_atendimento_p
	and		a.nr_seq_documento	= nr_seq_documento_p
	and		a.nm_usuario		= nm_usuario_w
	and     ((coalesce(d.nr_seq_origem::text, '') = '') or (d.ie_status_houdini = 'L') or
			 ((coalesce(d.ie_integracao,'N') = 'S') and (coalesce(d.dt_liberacao::text, '') = '')))
	and		c.nr_seq_temp_conteudo = e.nr_sequencia
	and		(c.nr_seq_temp_conteudo IS NOT NULL AND c.nr_seq_temp_conteudo::text <> '')
	AND		coalesce(d.ie_situacao,'A')	= 'A'
	and		coalesce(d.ie_resumo,'N')    <> 'S'
	and		((ie_modo_w = 'L') or (coalesce(d.ie_status_registro,'P') = 'A'));


c_elementos_template CURSOR(nr_seq_template_p  bigint,dt_registro_p  timestamp) FOR
	SELECT	e.nr_seq_elemento,
			d.dt_resultado,
			d.ds_resultado,
			d.vl_resultado,
			c.nr_seq_temp_conteudo,
			d.nr_sequencia nr_seq_valor
	from	w_apap_pac a,
			w_apap_pac_grupo b,
			w_apap_pac_informacao c,
			w_apap_pac_registro d,
			ehr_template_conteudo e
	where	a.nr_sequencia			= b.nr_seq_mod_apap
	and		b.nr_sequencia			= c.nr_seq_apap_grupo
	and		c.nr_sequencia			= d.nr_seq_apap_inf
	and		c.nr_seq_temp_conteudo	= e.nr_sequencia
	and		a.nr_atendimento 		= nr_atendimento_p
	and		a.nr_seq_documento		= nr_seq_documento_p
	and		a.nm_usuario			= nm_usuario_w
	and		e.nr_seq_template		= nr_seq_template_p
	and		d.dt_registro			= dt_registro_p
	and     ((coalesce(d.nr_seq_origem::text, '') = '') or (d.ie_status_houdini = 'L') or
			 ((coalesce(d.ie_integracao,'N') = 'S') and (coalesce(d.dt_liberacao::text, '') = '')))
	and		(c.nr_seq_temp_conteudo IS NOT NULL AND c.nr_seq_temp_conteudo::text <> '')
	AND		coalesce(d.ie_situacao,'A')	= 'A'
	and		coalesce(d.ie_resumo,'N')    <> 'S'
	and		((ie_modo_w = 'L') or (coalesce(d.ie_status_registro,'P') = 'A'));

c_registros CURSOR(dt_registro_p	 timestamp, nm_tabela_p	 text, nr_seq_linked_data_p  bigint, ie_aparelho_pa_p  text, ie_integracao_p		text, ie_status_registro_p  text, nr_seq_origem_p  bigint) FOR	
	SELECT	c.nm_atributo_tabela nm_atributo,
			coalesce(coalesce(to_char(d.vl_resultado),d.ds_resultado),to_char(d.dt_resultado,'dd/mm/yyyy hh24:mi:ss')) vl_default,
			d.nr_sequencia nr_seq_valor
	from	w_apap_pac a,
			w_apap_pac_grupo b,
			w_apap_pac_informacao c,
			w_apap_pac_registro d,
			tabela_atributo	e
	where	a.nr_sequencia				= b.nr_seq_mod_apap
	and		b.nr_sequencia				= c.nr_seq_apap_grupo
	and		c.nr_sequencia				= d.nr_seq_apap_inf
	and		c.nm_tabela					= e.nm_tabela
	and		c.nm_atributo_tabela		= e.nm_atributo
	and		a.nr_atendimento 	    	= nr_atendimento_p
	and		a.nr_seq_documento	  		= nr_seq_documento_p
	and		a.nm_usuario				= nm_usuario_w
	and     c.nr_seq_linked_data  		= nr_seq_linked_data_p
	and     ((coalesce(d.nr_seq_origem::text, '') = '') or (d.ie_status_houdini = 'L') or
			 ((coalesce(d.ie_integracao,'N') = 'S') and (coalesce(d.dt_liberacao::text, '') = '')))
	and		d.dt_registro				= dt_registro_p
	and		c.nm_tabela					= nm_tabela_p
	and		coalesce(d.nr_seq_origem,0)		= coalesce(nr_seq_origem_p,0)
	and		coalesce(c.ie_aparelho_pa,'C')	= coalesce(ie_aparelho_pa_p,'C')
	AND		coalesce(d.ie_integracao,'N')	= ie_integracao_p
	AND		coalesce(d.ie_status_registro,'P') = ie_status_registro_p
	AND		coalesce(d.ie_situacao,'A')		= 'A'
	and		coalesce(d.ie_resumo,'N')    	<> 'S'
	and		e.ie_tipo_atributo 			not in ('FUNCTION','VISUAL','LONG', 'LONG RAW');

c_atributos_essenciais CURSOR(nr_seq_linked_data_p  bigint, nm_tabela_p  text, dt_registro_p	 timestamp) FOR
	SELECT	nm_atributo,
			ie_tipo,
			case	upper(vl_default)
				when	'@ESTABELECIMENTO'	then	to_char(cd_estabelecimento_w)
				when	'@ESTAB'			then	to_char(cd_estabelecimento_w)
				when	'@PESSOA_USUARIO'	then	cd_pf_usuario_w
				when	'@CD_PACIENTE'		then	cd_paciente_p
				when	'@PERFIL_ATIVO'		then	to_char(cd_perfil_w)
				when	'@SYSDATE'			then	to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')
				when	'SYSDATE'			then	to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')
			else	vl_default
			end	vl_default,
			ds_comando
	from	(
			SELECT	nm_atributo,
					'O' ie_tipo,
					case	nm_atributo
						when  'NM_USUARIO_NREC' 	then wheb_usuario_pck.get_nm_usuario
						when  'DT_ATUALIZACAO_NREC' then to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')
						when  'NM_USUARIO' 			then wheb_usuario_pck.get_nm_usuario
						when  'DT_ATUALIZACAO' 		then to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')
						else  vl_default
					end   vl_default,
					2 nr_ordem,
					null ds_comando
			from    tabela_atributo a
			where   ((ie_obrigatorio  = 'S') or ((nm_atributo = 'NM_USUARIO_NREC') or (nm_atributo = 'DT_ATUALIZACAO_NREC')))
			and     nm_tabela         = nm_tabela_p
			and     not exists (select  1
								from    indice d,
										indice_atributo e
								where   d.nm_indice		= e.nm_indice
								and     d.ie_tipo		= upper('PK')
								and     not exists (select 1 from indice x where x.nm_tabela = d.nm_tabela and x.ie_tipo = upper('UK'))
								and		d.nm_tabela	  	= a.nm_tabela
								and     e.nm_atributo 	= a.nm_atributo)
			and     not exists (select  1
								from    documento_atributo_ref d
								where   d.nm_atributo 	= a.nm_atributo
								and     d.nr_seq_linked_data = nr_seq_linked_data_p
								and     d.ie_referencia in ('R','P','CD','AT'))
			
union

			select  a.nm_atributo,
					'R' ie_tipo,
					case	b.ie_referencia
						when  'R' 	then to_char(dt_registro_p,'dd/mm/yyyy hh24:mi:ss')
						when  'P' 	then cd_paciente_p
						when  'CD' 	then cd_pf_usuario_w
						when  'AT' 	then to_char(nr_atendimento_p)
						else  null
					end vl_default,
					3 nr_ordem,
					null ds_comando
			from    linked_data_atributo a,
					documento_atributo_ref b
			where   a.nr_seq_linked_data 	= b.nr_seq_linked_data
			and     a.nm_atributo        	= b.nm_atributo
			and		a.nr_seq_linked_data	= nr_seq_linked_data_p
			and     b.ie_referencia in ('R','P','CD','AT')
			
union

			select  e.nm_atributo,
					'PK' ie_tipo,
					null vl_default,
					1 nr_ordem,
					'Select ' || nm_tabela_p || '_seq.NextVal' || ' from dual' ds_comando
			from    indice d,
					indice_atributo e
			where   d.nm_indice = e.nm_indice
			and     d.ie_tipo	= upper('PK')
			and     not exists (select 1 from indice x where x.nm_tabela = d.nm_tabela and x.ie_tipo = upper('UK'))
			and		d.nm_tabela	= nm_tabela_p) a
	where 	obter_se_contido_char(a.nm_atributo,ds_insert_atributo_w) = 'N'
	order by	nr_ordem;
	
	c_inativa_dados_integrados CURSOR FOR
		SELECT	distinct c.nm_tabela, d.nr_seq_origem
		from	w_apap_pac a,
				w_apap_pac_grupo b,
				w_apap_pac_informacao c,
				w_apap_pac_registro d
		where	a.nr_sequencia = b.nr_seq_mod_apap
		and		b.nr_sequencia = c.nr_seq_apap_grupo
		and		c.nr_sequencia = d.nr_seq_apap_inf
		and		coalesce(d.ie_status_registro,'P') 	= 'R'
		and		coalesce(d.ie_integracao,'N')		= 'S'
		and		coalesce(d.ie_situacao,'A')			= 'A'
		and		a.nr_atendimento 				= nr_atendimento_p
		and		a.nr_seq_documento				= nr_seq_documento_p
		and		a.nm_usuario					= nm_usuario_w;
		
	
BEGIN
ie_modo_w	:= ie_modo_p;
if (coalesce(ie_modo_w::text, '') = '') then
	ie_modo_w := 'L';
end if;	

if (ie_modo_w = 'IP') then
	<<inativa_dados_integrados>>
	for r_inativa_dados_integrados in c_inativa_dados_integrados
	loop
		begin
		CALL liberar_informacao(r_inativa_dados_integrados.nm_tabela,'NR_SEQUENCIA',r_inativa_dados_integrados.nr_seq_origem,nm_usuario_w);
		CALL inativar_informacao(r_inativa_dados_integrados.nm_tabela,'NR_SEQUENCIA',r_inativa_dados_integrados.nr_seq_origem,null,nm_usuario_w);
		exception
		when unique_violation then sql_errm_w := sqlerrm;
		when Others then
			sql_errm_w := sqlerrm;
			insert into w_apap_log(	nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_atendimento,
									nr_seq_documento,
									ds_log)
			values (	nextval('w_apap_log_seq'),
										clock_timestamp(),
										nm_usuario_w,
										clock_timestamp(),
										nm_usuario_w,
										nr_atendimento_p,
										nr_seq_documento_p,
										sql_errm_w);
			commit;
		end;
		
	end loop	inativa_dados_integrados;	
	
	delete
	from 	w_apap_pac_registro a
	where	exists (	SELECT	1 
						from	w_apap_pac_informacao b,
								w_apap_pac_grupo c,
								w_apap_pac	d
						where	a.nr_seq_apap_inf 	= b.nr_sequencia
						and		b.nr_seq_apap_grupo	= c.nr_sequencia
						and		c.nr_seq_mod_apap	= d.nr_sequencia
						and		d.nr_atendimento 	= nr_atendimento_p
						and		d.nr_seq_documento	= nr_seq_documento_p
						and		d.nm_usuario		= nm_usuario_w)
	and		coalesce(a.ie_status_registro,'P') 	= 'R';
end if;	

select	max(ie_tipo_evolucao)
into STRICT	ie_tipo_evolucao_w
from	usuario
where	nm_usuario = nm_usuario_w;

<<datas_template>>
for r_datas_template in c_datas_template
	loop
	select	nextval('ehr_registro_seq')
	into STRICT	nr_seq_registro_w
	;

	insert 	into	ehr_registro(	nr_sequencia,
										cd_paciente,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										nr_seq_tipo_reg,
										dt_registro,
										cd_profissional,
										nr_atendimento,
										dt_liberacao,
										nm_usuario_inativacao,
										dt_inativacao,
										ie_tipo_evolucao,
										nr_seq_assinatura,
										nr_seq_aval_pre,
										nr_seq_item_pront,
										nr_seq_assinat_inativacao,
										nm_usuario_revisao,
										dt_revisao,
										nr_seq_pend_pac_acao,
										ie_situacao,
										ds_justificativa,
										cd_perfil_ativo,
										cd_setor_atendimento,
										nr_cirurgia,
										nr_seq_pepo,
										ie_avaliador_aux,
										dt_liberacao_aux,
										cd_unidade,
										nm_usuario_liberacao,
										nr_seq_templ,
										nr_seq_triagem,
										ie_nivel_atencao,
										ds_utc,
										ie_horario_verao,
										ds_utc_atualizacao,
										cd_avaliador_aux,
										nr_seq_atend_cons_pepa,
										cd_grupo,
										nr_seq_duplicacao,
										dt_duplicacao,
										nr_seq_duplicacao_inicial,
										ie_duplicado,
										nr_seq_proc_cpoe,
										cd_especialidade_med,
										cd_departamento_med)
	values (nr_seq_registro_w,
										cd_paciente_p,
										clock_timestamp(),
										nm_usuario_w,
										clock_timestamp(),
										nm_usuario_w,
										null,
										r_datas_template.dt_registro,
										cd_pf_usuario_w,
										nr_atendimento_p,
										null,
										null,
										null,
										ie_tipo_evolucao_w,
										null,
										null,
										1567,
										null,
										null,
										null,
										null,
										'A',
										null,
										cd_perfil_w,
										cd_setor_atendimento_w,
										null,
										null,
										'N',
										null,
										null,
										null,
										r_datas_template.nr_seq_template,
										null,
										'T',
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null,
										null);
	CALL ehr_gerar_reg_template(nr_seq_registro_w,r_datas_template.nr_seq_template,nm_usuario_w);
	select	max(nr_sequencia)
	into STRICT	nr_seq_reg_template_w
	from	ehr_reg_template
	where	nr_seq_reg = nr_seq_registro_w;
	
	ds_lista_sequencia_w	:= null;
	ds_virgula_lista_w		:= null;
	<<elementos_template>>
	for r_elementos_template in c_elementos_template(r_datas_template.nr_seq_template,r_datas_template.dt_registro)
		loop
		ds_lista_sequencia_w		:=	ds_lista_sequencia_w || ds_virgula_lista_w || r_elementos_template.nr_seq_valor;
		ds_virgula_lista_w			:= 	',';
		
		select	nextval('ehr_reg_elemento_seq')
		into STRICT	nr_seq_reg_elem_w
		;

		insert into	ehr_reg_elemento(	nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											dt_atualizacao_nrec,
											nm_usuario_nrec,
											nr_seq_reg_template,
											nr_seq_elemento,
											dt_resultado,
											ds_resultado,
											vl_resultado,
											qt_altura_comp,
											nr_seq_elem_cluster,
											ds_estatistica,
											nr_registro_cluster,
											nr_seq_temp_conteudo,
											dt_liberacao,
											ie_imagem,
											ds_call_stack)
		values (	nr_seq_reg_elem_w,
											clock_timestamp(),
											nm_usuario_w,
											clock_timestamp(),
											nm_usuario_w,
											nr_seq_reg_template_w,
											r_elementos_template.nr_seq_elemento,
											r_elementos_template.dt_resultado,
											r_elementos_template.ds_resultado,
											r_elementos_template.vl_resultado,
											null,
											null,
											null,
											null,
											r_elementos_template.nr_seq_temp_conteudo,
											null,
											null,
											null);
		--delete 	
		--from	w_apap_pac_registro a
		--where 	nr_sequencia = r_elementos_template.nr_seq_valor;
		end loop	elementos_template;
		commit;
		
		SELECT 	a.nr_sequencia BULK COLLECT
		INTO STRICT 	nr_sequencia_row_w
		from	w_apap_pac_informacao a,
				w_apap_pac_registro b,
				table(lista_pck.obter_lista(ds_lista_sequencia_w)) c
		where	a.nr_sequencia = b.nr_seq_apap_inf
		and		b.nr_sequencia = c.nr_registro;

		CALL delete_register_houdini(ds_lista_sequencia_w,nr_seq_registro_w);	
		CALL liberar_informacao('EHR_REGISTRO','NR_SEQUENCIA',nr_seq_registro_w,nm_usuario_w);
		if (nm_usuario_w <> wheb_usuario_pck.get_nm_usuario) then
			CALL wheb_usuario_pck.set_nm_usuario(nm_usuario_w);
		end if;	
		
		delete 	FROM w_apap_pac_registro a
		where 	a.nr_sequencia in (SELECT w.nr_registro from table(lista_pck.obter_lista(ds_lista_sequencia_w)) w);
		commit;
	end loop	datas_template;	

<<read_datas>>
for r_datas in c_datas
	loop
	ds_insert_atributo_w	:= null;
	ds_insert_valores_w		:= null;
	ds_virgula_atributo_w	:= null;
	ds_virgula_valores_w	:= null;
	ds_virgula_lista_w		:= null;
	ds_comando_w			:= null;
	ds_parametros_w			:= null;
	vl_atributo_pk_w		:= null;
	ds_lista_sequencia_w	:= null;
	ie_registro_w			:= 'N';

	<<read_registros>>
	for r_registros in c_registros(r_datas.dt_registro, r_datas.nm_tabela, r_datas.nr_seq_linked_data,r_datas.ie_aparelho_pa,r_datas.ie_integracao,r_datas.ie_status_registro,r_datas.nr_seq_origem)
		loop
		ie_registro_w				:= 	'S';
		ds_lista_sequencia_w		:=	ds_lista_sequencia_w || ds_virgula_lista_w || r_registros.nr_seq_valor;
		ds_insert_atributo_w		:= 	ds_insert_atributo_w || ds_virgula_atributo_w || r_registros.nm_atributo;
		ds_insert_valores_w			:= 	ds_insert_valores_w || ds_virgula_valores_w || ':'||r_registros.nm_atributo;
		ds_parametros_w				:= 	ds_parametros_w||r_registros.nm_atributo||'='||r_registros.vl_default||ds_sep_bv_w;
		ds_virgula_valores_w		:= 	',';
		ds_virgula_lista_w			:= 	',';
		ds_virgula_atributo_w		:= 	',';
		end loop	read_registros;
	if (r_datas.ie_aparelho_pa IS NOT NULL AND r_datas.ie_aparelho_pa::text <> '') then
		ds_insert_atributo_w		:= 	ds_insert_atributo_w || ds_virgula_atributo_w || 'IE_APARELHO_PA';
		ds_insert_valores_w			:= 	ds_insert_valores_w || ds_virgula_valores_w || ':'||'IE_APARELHO_PA';
		ds_parametros_w				:= 	ds_parametros_w||'IE_APARELHO_PA'||'='||r_datas.ie_aparelho_pa||ds_sep_bv_w;
	end if;
	if (r_datas.ie_integracao = 'S') then
		ds_insert_atributo_w		:= 	ds_insert_atributo_w || ds_virgula_atributo_w || 'IE_INTEGRACAO';
		ds_insert_valores_w			:= 	ds_insert_valores_w || ds_virgula_valores_w || ':'||'IE_INTEGRACAO';
		ds_parametros_w				:= 	ds_parametros_w||'IE_INTEGRACAO'||'='||r_datas.ie_integracao||ds_sep_bv_w;
	end if;
	
	case r_datas.nr_seq_linked_data
		when	360		then
			ds_insert_atributo_w		:= 	ds_insert_atributo_w || ds_virgula_atributo_w || 'IE_TIPO_SAPS3';
			ds_insert_valores_w			:= 	ds_insert_valores_w || ds_virgula_valores_w || ':'||'IE_TIPO_SAPS3';
			ds_parametros_w				:= 	ds_parametros_w||'IE_TIPO_SAPS3'||'='||'ADM'||ds_sep_bv_w;
		when	361		then
			ds_insert_atributo_w		:= 	ds_insert_atributo_w || ds_virgula_atributo_w || 'IE_TIPO_SAPS3';
			ds_insert_valores_w			:= 	ds_insert_valores_w || ds_virgula_valores_w || ':'||'IE_TIPO_SAPS3';
			ds_parametros_w				:= 	ds_parametros_w||'IE_TIPO_SAPS3'||'='||'PIR'||ds_sep_bv_w;
		when	362		then
			ds_insert_atributo_w		:= 	ds_insert_atributo_w || ds_virgula_atributo_w || 'IE_TIPO_SAPS3';
			ds_insert_valores_w			:= 	ds_insert_valores_w || ds_virgula_valores_w || ':'||'IE_TIPO_SAPS3';
			ds_parametros_w				:= 	ds_parametros_w||'IE_TIPO_SAPS3'||'='||'28D'||ds_sep_bv_w;
		else	
			null;
	end case;

	<<read_atributos_essenciais>>
	for r_atributos_essenciais in c_atributos_essenciais(r_datas.nr_seq_linked_data,r_datas.nm_tabela,r_datas.dt_registro)
		loop
		ds_insert_atributo_w		:= ds_insert_atributo_w || ds_virgula_atributo_w || r_atributos_essenciais.nm_atributo;
		ds_virgula_atributo_w		:= ',';

		ds_insert_valores_w			:= ds_insert_valores_w || ds_virgula_valores_w || ':'||r_atributos_essenciais.nm_atributo;
		ds_virgula_valores_w		:= ',';
		if (r_atributos_essenciais.ie_tipo = 'PK') then
			vl_atributo_pk_w := Obter_valor_Dinamico(r_atributos_essenciais.ds_comando, vl_atributo_pk_w);
			ds_parametros_w				:= ds_parametros_w||r_atributos_essenciais.nm_atributo||'='||to_char(vl_atributo_pk_w)||ds_sep_bv_w;
		else
			ds_parametros_w				:= ds_parametros_w||r_atributos_essenciais.nm_atributo||'='||r_atributos_essenciais.vl_default||ds_sep_bv_w;
		end if;	

		end loop	read_atributos_essenciais;		
	begin
	if (ie_registro_w = 'S') then
		ie_exception_w	:= 'N';
		ds_comando_w	:= 'Insert into ' || r_datas.nm_tabela || '(' || ds_insert_atributo_w ||') values '||'('||ds_insert_valores_w||')';	
		CALL Exec_sql_Dinamico_bv('apap_insere_registros',ds_comando_w,ds_parametros_w);
		commit;
		begin
		SELECT 	a.nr_sequencia BULK COLLECT
		INTO STRICT 	nr_sequencia_row_w
		from	w_apap_pac_informacao a,
				w_apap_pac_registro b,
				table(lista_pck.obter_lista(ds_lista_sequencia_w)) c
		where	a.nr_sequencia = b.nr_seq_apap_inf
		and		b.nr_sequencia = c.nr_registro;

		CALL delete_register_houdini(ds_lista_sequencia_w,vl_atributo_pk_w);	
		CALL liberar_informacao(r_datas.nm_tabela,'NR_SEQUENCIA',vl_atributo_pk_w,nm_usuario_w);
		if (nm_usuario_w <> wheb_usuario_pck.get_nm_usuario) then
			CALL wheb_usuario_pck.set_nm_usuario(nm_usuario_w);
		end if;	
		
		exception
		when others then
			ds_comando_w	:= 'delete from ' || r_datas.nm_tabela || ' where nr_sequencia = :nr_sequencia';	
			CALL Exec_sql_Dinamico_bv('apap_insere_registros',ds_comando_w,'nr_sequencia=' || to_char(vl_atributo_pk_w) || ds_sep_bv_w);
			commit;
			ie_exception_w	:= 'S';
		end;
		if (ie_exception_w <> 'S') then
			delete 	FROM w_apap_pac_registro a
			where 	a.nr_sequencia in (SELECT w.nr_registro from table(lista_pck.obter_lista(ds_lista_sequencia_w)) w);
			commit;
		end if;	
	end if;	
	exception
	when others then
		sql_errm_w := sqlerrm;
		insert into w_apap_log(	nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_atendimento,
									nr_seq_documento,
									ds_log)
		values (	nextval('w_apap_log_seq'),
									clock_timestamp(),
									nm_usuario_w,
									clock_timestamp(),
									nm_usuario_w,
									nr_atendimento_p,
									nr_seq_documento_p,
									sql_errm_w||
									ds_comando_w||
									ds_parametros_w);
		commit;
	end;
	end loop	read_datas;
	
	begin
	<<read_linhas>>
	FOR indexLinha IN 1 .. nr_sequencia_row_w.count LOOP
		CALL apap_atualiza_linha_pai(null,nr_sequencia_row_w[indexLinha].nr_sequencia);
	end loop read_linhas;	
	exception
	when unique_violation then sql_errm_w := sqlerrm;
	when Others then sql_errm_w := sqlerrm;
	end;
	
	commit;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE apap_insere_registros ( nr_seq_documento_p bigint, nr_atendimento_p bigint, cd_paciente_p text, ie_modo_p text default 'L') FROM PUBLIC;

