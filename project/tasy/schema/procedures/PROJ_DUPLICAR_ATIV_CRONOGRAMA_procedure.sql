-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_duplicar_ativ_cronograma ( nr_seq_etapa_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_etapa_1_w	bigint;
nr_seq_etapa_2_w	bigint;
nr_seq_etapa_3_w	bigint;
nr_seq_etapa_4_w	bigint;
nr_seq_etapa_5_w	bigint;

nr_seq_etapa_nova_w	bigint;
nr_seq_etapa_nova_1_w	bigint;
nr_seq_etapa_nova_2_w	bigint;
nr_seq_etapa_nova_3_w	bigint;
nr_seq_etapa_nova_4_w	bigint;
nr_seq_etapa_nova_5_w	bigint;

qt_superior_1_w		bigint;
qt_superior_2_w		bigint;
qt_superior_3_w		bigint;
qt_superior_4_w		bigint;
qt_superior_5_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_superior	= nr_seq_etapa_p
	and	coalesce(ie_situacao,'A') = 'A'
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_superior	= nr_seq_etapa_1_w
	and	coalesce(ie_situacao,'A') = 'A'
	order by nr_sequencia;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_superior	= nr_seq_etapa_2_w
	and	coalesce(ie_situacao,'A') = 'A'
	order by nr_sequencia;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_superior	= nr_seq_etapa_3_w
	and	coalesce(ie_situacao,'A') = 'A'
	order by nr_sequencia;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	proj_cron_etapa
	where	nr_seq_superior	= nr_seq_etapa_4_w
	and	coalesce(ie_situacao,'A') = 'A'
	order by nr_sequencia;


BEGIN

select	nextval('proj_cron_etapa_seq')
into STRICT	nr_seq_etapa_nova_w
;

insert into proj_cron_etapa(	NR_SEQUENCIA,
				NR_SEQ_CRONOGRAMA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				NR_SEQ_APRES,
				DS_ETAPA,
				IE_FASE,
				DT_INICIO_PREV,
				DT_FIM_PREV,
				DT_INICIO_REAL,
				DT_FIM_REAL,
				QT_HORA_PREV,
				QT_HORA_REAL,
				NR_SEQ_ETAPA,
				QT_HORA_SALDO,
				PR_ETAPA,
				DT_CADASTRO,
				DT_FINAL_MULTIPLIC,
				DT_PILOTO,
				DT_ATIVACAO,
				DT_ATUALIZACAO_NREC,
				NM_USUARIO_NREC,
				NR_SEQ_ESTRUTURA,
				DS_ATIVIDADE,
				NR_SEQ_SUPERIOR,
				CD_CLASSIFICACAO,
				NR_SEQ_ORDENACAO,
				IE_MODULO)
			(SELECT	nr_seq_etapa_nova_w,
				nr_seq_cronograma,
				clock_timestamp(),
				nm_usuario_p,
				900,
				ds_etapa,
				ie_fase,
				dt_inicio_prev,
				dt_fim_prev,
				dt_inicio_real,
				dt_fim_real,
				qt_hora_prev,
				qt_hora_real,
				nr_seq_etapa,
				qt_hora_saldo,
				pr_etapa,
				dt_cadastro,
				dt_final_multiplic,
				dt_piloto,
				dt_ativacao,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_estrutura,
				'Cópia de ' || ds_atividade,
				nr_seq_superior,
				cd_classificacao,
				nr_seq_ordenacao,
				ie_modulo
			from	proj_cron_etapa
			where	nr_sequencia	= nr_seq_etapa_p);

select	count(*)
into STRICT	qt_superior_1_w
from	proj_cron_etapa
where	nr_seq_superior = nr_seq_etapa_p;

if (qt_superior_1_w > 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_etapa_1_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		select	nextval('proj_cron_etapa_seq')
		into STRICT	nr_seq_etapa_nova_1_w
		;

		insert into proj_cron_etapa(	NR_SEQUENCIA,
						NR_SEQ_CRONOGRAMA,
						DT_ATUALIZACAO,
						NM_USUARIO,
						NR_SEQ_APRES,
						DS_ETAPA,
						IE_FASE,
						DT_INICIO_PREV,
						DT_FIM_PREV,
						DT_INICIO_REAL,
						DT_FIM_REAL,
						QT_HORA_PREV,
						QT_HORA_REAL,
						NR_SEQ_ETAPA,
						QT_HORA_SALDO,
						PR_ETAPA,
						DT_CADASTRO,
						DT_FINAL_MULTIPLIC,
						DT_PILOTO,
						DT_ATIVACAO,
						DT_ATUALIZACAO_NREC,
						NM_USUARIO_NREC,
						NR_SEQ_ESTRUTURA,
						DS_ATIVIDADE,
						NR_SEQ_SUPERIOR,
						CD_CLASSIFICACAO,
						NR_SEQ_ORDENACAO,
						IE_MODULO)
					(SELECT	nr_seq_etapa_nova_1_w,
						nr_seq_cronograma,
						clock_timestamp(),
						nm_usuario_p,
						900,
						ds_etapa,
						ie_fase,
						dt_inicio_prev,
						dt_fim_prev,
						dt_inicio_real,
						dt_fim_real,
						qt_hora_prev,
						qt_hora_real,
						nr_seq_etapa,
						qt_hora_saldo,
						pr_etapa,
						dt_cadastro,
						dt_final_multiplic,
						dt_piloto,
						dt_ativacao,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_estrutura,
						'Cópia de ' || ds_atividade,
						nr_seq_etapa_nova_w,
						cd_classificacao,
						nr_seq_ordenacao,
						ie_modulo
					from	proj_cron_etapa
					where	nr_sequencia	= nr_seq_etapa_1_w);

		select	count(*)
		into STRICT	qt_superior_2_w
		from	proj_cron_etapa
		where	nr_seq_superior = nr_seq_etapa_1_w;

		if (qt_superior_2_w > 0) then

			open C02;
			loop
			fetch C02 into
				nr_seq_etapa_2_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				select	nextval('proj_cron_etapa_seq')
				into STRICT	nr_seq_etapa_nova_2_w
				;

				insert into proj_cron_etapa(	NR_SEQUENCIA,
								NR_SEQ_CRONOGRAMA,
								DT_ATUALIZACAO,
								NM_USUARIO,
								NR_SEQ_APRES,
								DS_ETAPA,
								IE_FASE,
								DT_INICIO_PREV,
								DT_FIM_PREV,
								DT_INICIO_REAL,
								DT_FIM_REAL,
								QT_HORA_PREV,
								QT_HORA_REAL,
								NR_SEQ_ETAPA,
								QT_HORA_SALDO,
								PR_ETAPA,
								DT_CADASTRO,
								DT_FINAL_MULTIPLIC,
								DT_PILOTO,
								DT_ATIVACAO,
								DT_ATUALIZACAO_NREC,
								NM_USUARIO_NREC,
								NR_SEQ_ESTRUTURA,
								DS_ATIVIDADE,
								NR_SEQ_SUPERIOR,
								CD_CLASSIFICACAO,
								NR_SEQ_ORDENACAO,
								IE_MODULO)
							(SELECT	nr_seq_etapa_nova_2_w,
								nr_seq_cronograma,
								clock_timestamp(),
								nm_usuario_p,
								900,
								ds_etapa,
								ie_fase,
								dt_inicio_prev,
								dt_fim_prev,
								dt_inicio_real,
								dt_fim_real,
								qt_hora_prev,
								qt_hora_real,
								nr_seq_etapa,
								qt_hora_saldo,
								pr_etapa,
								dt_cadastro,
								dt_final_multiplic,
								dt_piloto,
								dt_ativacao,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_estrutura,
								'Cópia de ' || ds_atividade,
								nr_seq_etapa_nova_1_w,
								cd_classificacao,
								nr_seq_ordenacao,
								ie_modulo
							from	proj_cron_etapa
							where	nr_sequencia	= nr_seq_etapa_2_w);

				select	count(*)
				into STRICT	qt_superior_3_w
				from	proj_cron_etapa
				where	nr_seq_superior = nr_seq_etapa_2_w;

				if (qt_superior_3_w > 0) then

					open C03;
					loop
					fetch C03 into
						nr_seq_etapa_3_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						select	nextval('proj_cron_etapa_seq')
						into STRICT	nr_seq_etapa_nova_3_w
						;

						insert into proj_cron_etapa(	NR_SEQUENCIA,
										NR_SEQ_CRONOGRAMA,
										DT_ATUALIZACAO,
										NM_USUARIO,
										NR_SEQ_APRES,
										DS_ETAPA,
										IE_FASE,
										DT_INICIO_PREV,
										DT_FIM_PREV,
										DT_INICIO_REAL,
										DT_FIM_REAL,
										QT_HORA_PREV,
										QT_HORA_REAL,
										NR_SEQ_ETAPA,
										QT_HORA_SALDO,
										PR_ETAPA,
										DT_CADASTRO,
										DT_FINAL_MULTIPLIC,
										DT_PILOTO,
										DT_ATIVACAO,
										DT_ATUALIZACAO_NREC,
										NM_USUARIO_NREC,
										NR_SEQ_ESTRUTURA,
										DS_ATIVIDADE,
										NR_SEQ_SUPERIOR,
										CD_CLASSIFICACAO,
										NR_SEQ_ORDENACAO,
										IE_MODULO)
									(SELECT	nr_seq_etapa_nova_3_w,
										nr_seq_cronograma,
										clock_timestamp(),
										nm_usuario_p,
										900,
										ds_etapa,
										ie_fase,
										dt_inicio_prev,
										dt_fim_prev,
										dt_inicio_real,
										dt_fim_real,
										qt_hora_prev,
										qt_hora_real,
										nr_seq_etapa,
										qt_hora_saldo,
										pr_etapa,
										dt_cadastro,
										dt_final_multiplic,
										dt_piloto,
										dt_ativacao,
										clock_timestamp(),
										nm_usuario_p,
										nr_seq_estrutura,
										'Cópia de ' || ds_atividade,
										nr_seq_etapa_nova_2_w,
										cd_classificacao,
										nr_seq_ordenacao,
										ie_modulo
									from	proj_cron_etapa
									where	nr_sequencia	= nr_seq_etapa_3_w);

						select	count(*)
						into STRICT	qt_superior_4_w
						from	proj_cron_etapa
						where	nr_seq_superior = nr_seq_etapa_3_w;

						if (qt_superior_4_w > 0) then

							open C04;
							loop
							fetch C04 into
								nr_seq_etapa_4_w;
							EXIT WHEN NOT FOUND; /* apply on C04 */
								begin
								select	nextval('proj_cron_etapa_seq')
								into STRICT	nr_seq_etapa_nova_4_w
								;

								insert into proj_cron_etapa(	NR_SEQUENCIA,
												NR_SEQ_CRONOGRAMA,
												DT_ATUALIZACAO,
												NM_USUARIO,
												NR_SEQ_APRES,
												DS_ETAPA,
												IE_FASE,
												DT_INICIO_PREV,
												DT_FIM_PREV,
												DT_INICIO_REAL,
												DT_FIM_REAL,
												QT_HORA_PREV,
												QT_HORA_REAL,
												NR_SEQ_ETAPA,
												QT_HORA_SALDO,
												PR_ETAPA,
												DT_CADASTRO,
												DT_FINAL_MULTIPLIC,
												DT_PILOTO,
												DT_ATIVACAO,
												DT_ATUALIZACAO_NREC,
												NM_USUARIO_NREC,
												NR_SEQ_ESTRUTURA,
												DS_ATIVIDADE,
												NR_SEQ_SUPERIOR,
												CD_CLASSIFICACAO,
												NR_SEQ_ORDENACAO,
												IE_MODULO)
											(SELECT	nr_seq_etapa_nova_4_w,
												nr_seq_cronograma,
												clock_timestamp(),
												nm_usuario_p,
												900,
												ds_etapa,
												ie_fase,
												dt_inicio_prev,
												dt_fim_prev,
												dt_inicio_real,
												dt_fim_real,
												qt_hora_prev,
												qt_hora_real,
												nr_seq_etapa,
												qt_hora_saldo,
												pr_etapa,
												dt_cadastro,
												dt_final_multiplic,
												dt_piloto,
												dt_ativacao,
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_estrutura,
												'Cópia de ' || ds_atividade,
												nr_seq_etapa_nova_3_w,
												cd_classificacao,
												nr_seq_ordenacao,
												ie_modulo
											from	proj_cron_etapa
											where	nr_sequencia	= nr_seq_etapa_4_w);
								select	count(*)
								into STRICT	qt_superior_5_w
								from	proj_cron_etapa
								where	nr_seq_superior = nr_seq_etapa_4_w;

								if (qt_superior_5_w > 0) then

									open C05;
									loop
									fetch C05 into
										nr_seq_etapa_5_w;
									EXIT WHEN NOT FOUND; /* apply on C05 */
										begin
										select	nextval('proj_cron_etapa_seq')
										into STRICT	nr_seq_etapa_nova_5_w
										;

										insert into proj_cron_etapa(	NR_SEQUENCIA,
														NR_SEQ_CRONOGRAMA,
														DT_ATUALIZACAO,
														NM_USUARIO,
														NR_SEQ_APRES,
														DS_ETAPA,
														IE_FASE,
														DT_INICIO_PREV,
														DT_FIM_PREV,
														DT_INICIO_REAL,
														DT_FIM_REAL,
														QT_HORA_PREV,
														QT_HORA_REAL,
														NR_SEQ_ETAPA,
														QT_HORA_SALDO,
														PR_ETAPA,
														DT_CADASTRO,
														DT_FINAL_MULTIPLIC,
														DT_PILOTO,
														DT_ATIVACAO,
														DT_ATUALIZACAO_NREC,
														NM_USUARIO_NREC,
														NR_SEQ_ESTRUTURA,
														DS_ATIVIDADE,
														NR_SEQ_SUPERIOR,
														CD_CLASSIFICACAO,
														NR_SEQ_ORDENACAO,
														IE_MODULO)
													(SELECT	nr_seq_etapa_nova_5_w,
														nr_seq_cronograma,
														clock_timestamp(),
														nm_usuario_p,
														900,
														ds_etapa,
														ie_fase,
														dt_inicio_prev,
														dt_fim_prev,
														dt_inicio_real,
														dt_fim_real,
														qt_hora_prev,
														qt_hora_real,
														nr_seq_etapa,
														qt_hora_saldo,
														pr_etapa,
														dt_cadastro,
														dt_final_multiplic,
														dt_piloto,
														dt_ativacao,
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_estrutura,
														'Cópia de ' || ds_atividade,
														nr_seq_etapa_nova_4_w,
														cd_classificacao,
														nr_seq_ordenacao,
														ie_modulo
													from	proj_cron_etapa
													where	nr_sequencia	= nr_seq_etapa_5_w);
										end;
									end loop;
									close C05;
								end if;
								end;
							end loop;
							close C04;
						end if;
						end;
					end loop;
					close C03;
				end if;
				end;
			end loop;
			close C02;
		end if;
		end;
	end loop;
	close C01;


end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_duplicar_ativ_cronograma ( nr_seq_etapa_p bigint, nm_usuario_p text) FROM PUBLIC;

