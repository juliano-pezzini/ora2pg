-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_motivo_quest ( nr_seq_conta_proc_mat_p text, nr_seq_conta_p text, ie_tipo_tabela_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


-- ie_tipo_tabela_p
--P	Procedimento
--M	Material
--C	Conta
ie_tipo_w			varchar(1);
nr_seq_glosa_oco_w		bigint;
nr_codigo_w			varchar(20);
nr_seq_conta_w			bigint;
nr_seq_proc_w			bigint;
nr_seq_mat_w			bigint;
nr_seq_motivo_glosa_w		bigint;
nr_seq_motivo_ptu_w		bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_ocorrencia_benef_w	bigint;
nr_seq_conta_proc_w		bigint := null;
nr_seq_conta_Mat_w		bigint := null;
nr_seq_glosa_conta_w		bigint := null;
ie_situacao_w			varchar(2);
qt_ocorrencia_w			integer;
ie_ocorrencia_w			pls_controle_estab.ie_ocorrencia%type := pls_obter_se_controle_estab('GO');

-- Obter todos as glosas e ocorrencias da conta
C01 CURSOR FOR
	SELECT	ie_tipo,
		nr_sequencia,
		nr_codigo,
		nr_seq_conta,
		nr_seq_proc,
		nr_seq_mat
	from 	pls_conta_incons_ocorrencia_v
	where	((nr_seq_proc = nr_seq_conta_proc_w AND ie_tipo_tabela_p  = 'P')
	or	(nr_seq_mat  = nr_seq_conta_mat_w AND ie_tipo_tabela_p  = 'M')
	or (nr_seq_conta = nr_seq_conta_p and coalesce(nr_seq_proc::text, '') = '' and coalesce(nr_seq_mat::text, '') = ''))
	and	ie_tipo in ('G', 'O')
	order by  1 desc,2,3;

-- Obter os motivos de questionamento anexados a glosa
C02 CURSOR FOR
	SELECT	nr_seq_motivo_ptu
	from	pls_acao_glosa_tiss
	where	nr_seq_motivo_glosa = nr_seq_motivo_glosa_w
	and	ie_situacao = 'A'
	and	coalesce(nr_seq_motivo_ptu,0) > 0
	order by 1;


BEGIN

if (ie_tipo_tabela_p = 'P') then
	nr_seq_conta_proc_w := nr_seq_conta_proc_mat_p;
elsif (ie_tipo_tabela_p = 'M') then
	nr_seq_conta_mat_w  := nr_seq_conta_proc_mat_p;
end if;

open C01;
loop
fetch C01 into
	ie_tipo_w,
	nr_seq_glosa_oco_w,
	nr_codigo_w,
	nr_seq_conta_w,
	nr_seq_proc_w,
	nr_seq_mat_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_situacao_w := null;

	if (ie_tipo_w = 'G') then
		--Obter a seq da glosa
		select	nr_seq_motivo_glosa,
			ie_situacao,
			nr_seq_ocorrencia_benef,
			nr_seq_glosa_conta
		into STRICT	nr_seq_motivo_glosa_w,
			ie_situacao_w,
			nr_seq_ocorrencia_benef_w,
			nr_seq_glosa_conta_w
		from	pls_conta_glosa
		where	nr_sequencia = nr_seq_glosa_oco_w;

		qt_ocorrencia_w := 0;

		if (ie_ocorrencia_w = 'S') then
			if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then
				select	count(1)
				into STRICT	qt_ocorrencia_w
				from	pls_ocorrencia a
				where	a.nr_seq_motivo_glosa			= nr_seq_motivo_glosa_w
				and	a.cd_estabelecimento			= cd_estabelecimento_p
				and	(a.nr_seq_motivo_ptu IS NOT NULL AND a.nr_seq_motivo_ptu::text <> '')
				and	exists (SELECT	1
						from	pls_conta_incons_ocorrencia_v v
						where	v.nr_seq_proc		= nr_seq_proc_w
						and	v.ie_tipo		= 'O'
						and 	a.nr_sequencia 		= v.nr_ocorrencia );

			elsif (nr_seq_mat_w IS NOT NULL AND nr_seq_mat_w::text <> '') then
				select	count(1)
				into STRICT	qt_ocorrencia_w
				from	pls_ocorrencia a
				where	a.nr_seq_motivo_glosa			= nr_seq_motivo_glosa_w
				and	a.cd_estabelecimento			= cd_estabelecimento_p
				and	(a.nr_seq_motivo_ptu IS NOT NULL AND a.nr_seq_motivo_ptu::text <> '')
				and	exists (SELECT	1
						from	pls_conta_incons_ocorrencia_v v
						where	v.nr_seq_mat		= nr_seq_mat_w
						and	v.ie_tipo		= 'O'
						and 	a.nr_sequencia 		= v.nr_ocorrencia );

			elsif (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
				select	count(1)
				into STRICT	qt_ocorrencia_w
				from	pls_ocorrencia a
				where	a.nr_seq_motivo_glosa			= nr_seq_motivo_glosa_w
				and	a.cd_estabelecimento			= cd_estabelecimento_p
				and	(a.nr_seq_motivo_ptu IS NOT NULL AND a.nr_seq_motivo_ptu::text <> '')
				and	exists (SELECT	1
						from	pls_conta_incons_ocorrencia_v v
						where	v.nr_seq_conta		= nr_seq_conta_w
						and	ie_tipo			= 'O'
						and 	a.nr_sequencia 		= v.nr_ocorrencia );
			end if;
		else
			if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') then
				select	count(1)
				into STRICT	qt_ocorrencia_w
				from	pls_ocorrencia a
				where	a.nr_seq_motivo_glosa			= nr_seq_motivo_glosa_w
				and	(a.nr_seq_motivo_ptu IS NOT NULL AND a.nr_seq_motivo_ptu::text <> '')
				and	exists (SELECT	1
						from	pls_conta_incons_ocorrencia_v v
						where	v.nr_seq_proc		= nr_seq_proc_w
						and	v.ie_tipo		= 'O'
						and 	a.nr_sequencia 		= v.nr_ocorrencia );

			elsif (nr_seq_mat_w IS NOT NULL AND nr_seq_mat_w::text <> '') then
				select	count(1)
				into STRICT	qt_ocorrencia_w
				from	pls_ocorrencia a
				where	a.nr_seq_motivo_glosa	= nr_seq_motivo_glosa_w
				and	(a.nr_seq_motivo_ptu IS NOT NULL AND a.nr_seq_motivo_ptu::text <> '')
				and	exists (SELECT	1
						from	pls_conta_incons_ocorrencia_v v
						where	v.nr_seq_mat		= nr_seq_mat_w
						and	v.ie_tipo		= 'O'
						and 	a.nr_sequencia 		= v.nr_ocorrencia );

			elsif (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') then
				select	count(1)
				into STRICT	qt_ocorrencia_w
				from	pls_ocorrencia a
				where	a.nr_seq_motivo_glosa			= nr_seq_motivo_glosa_w
				and	(a.nr_seq_motivo_ptu IS NOT NULL AND a.nr_seq_motivo_ptu::text <> '')
				and	exists (SELECT	1
						from	pls_conta_incons_ocorrencia_v v
						where	v.nr_seq_conta		= nr_seq_conta_w
						and	ie_tipo			= 'O'
						and 	a.nr_sequencia 		= v.nr_ocorrencia );
			end if;
		end if;


		if (coalesce(ie_situacao_w,'A') = 'A') and (nr_seq_ocorrencia_benef_w IS NOT NULL AND nr_seq_ocorrencia_benef_w::text <> '') then
			select	max(nr_seq_ocorrencia),
				max(ie_situacao)
			into STRICT	nr_seq_ocorrencia_w,
				ie_situacao_w
			from	pls_ocorrencia_benef
			where	nr_sequencia = nr_seq_ocorrencia_benef_w;

		elsif (coalesce(ie_situacao_w,'A') = 'A') and (nr_seq_glosa_oco_w IS NOT NULL AND nr_seq_glosa_oco_w::text <> '') then
			select	max(nr_seq_ocorrencia),
				max(ie_situacao)
			into STRICT	nr_seq_ocorrencia_w,
				ie_situacao_w
			from	pls_ocorrencia_benef
			where	nr_seq_glosa = nr_seq_glosa_oco_w;
		end if;

		-- Obter os motivos de questionamento anexados a glosa
		if (coalesce(ie_situacao_w,'A') = 'A') and (qt_ocorrencia_w = 0) then
			open C02;
			loop
			fetch C02 into
				nr_seq_motivo_ptu_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				-- Gravar o motivo de questionamento
				CALL pls_gravar_motivo_quest( nr_seq_motivo_ptu_w, nr_seq_conta_proc_w, nr_seq_conta_mat_w, nm_usuario_p);
				end;
			end loop;
			close C02;
		end if;

	elsif (ie_tipo_w = 'O') then
		-- Obter a seq da ocorrência
		select	nr_seq_ocorrencia,
			ie_situacao
		into STRICT	nr_seq_ocorrencia_w,
			ie_situacao_w
		from	pls_ocorrencia_benef
		where	nr_sequencia = nr_seq_glosa_oco_w;

		-- Obter o motivo de questionamento
		select	nr_seq_motivo_ptu,
			nr_seq_motivo_glosa
		into STRICT	nr_seq_motivo_ptu_w,
			nr_seq_motivo_glosa_w
		from	pls_ocorrencia
		where	nr_sequencia = nr_seq_ocorrencia_w;

		if (nr_seq_motivo_ptu_w IS NOT NULL AND nr_seq_motivo_ptu_w::text <> '') and (coalesce(ie_situacao_w,'A') = 'A') then
			-- Gravar o motivo de questionamento
			CALL pls_gravar_motivo_quest( nr_seq_motivo_ptu_w, nr_seq_conta_proc_w, nr_seq_conta_mat_w, nm_usuario_p);
		end if;

		-- Pega o motivo de questionamento da glosa vinculada na ocorrencia, isso se a ocorrencia não tiver motivo vinculado
		if (coalesce(nr_seq_motivo_ptu_w::text, '') = '') and (nr_seq_motivo_glosa_w IS NOT NULL AND nr_seq_motivo_glosa_w::text <> '') then
			open C02;
			loop
			fetch C02 into
				nr_seq_motivo_ptu_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				-- Gravar o motivo de questionamento
				CALL pls_gravar_motivo_quest( nr_seq_motivo_ptu_w, nr_seq_conta_proc_w, nr_seq_conta_mat_w, nm_usuario_p);
				end;
			end loop;
			close C02;
		end if;
	end if;

	end;
end loop;
close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_motivo_quest ( nr_seq_conta_proc_mat_p text, nr_seq_conta_p text, ie_tipo_tabela_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

