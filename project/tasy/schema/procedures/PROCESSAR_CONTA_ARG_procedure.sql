-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE processar_conta_arg ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p conta_pac_deducao_conv.nm_usuario%type, ie_copago_p conta_pac_deducao_conv.ie_copago%type default 'N', ie_restaurar_valores_p text default 'N') AS $body$
DECLARE

/*
COSEGURO = Coseguro Posterior - manual (antigo)
COPAGO = Coseguro Previo - automativo (novo)

O parametro ie_restaurar_valores_p - se aplica na modalidade COPAGO

*/
nr_atendimento_w		conta_paciente.nr_atendimento%type;
cd_estabelecimento_w		conta_paciente.cd_estabelecimento%type;
ie_status_acerto_w		conta_paciente.ie_status_acerto%type;

cd_convenio_partic_w		parametro_faturamento.cd_convenio_partic%type;
cd_categoria_partic_w		parametro_faturamento.cd_categoria_partic%type;

nr_seq_procedimento_w		procedimento_paciente.nr_sequencia%type;
cd_procedimento_w		procedimento_paciente.cd_procedimento%type;
qt_procedimento_w		procedimento_paciente.qt_procedimento%type;
ie_origem_proced_w		procedimento_paciente.ie_origem_proced%type;
cd_setor_atendimento_w		procedimento_paciente.cd_setor_atendimento%type;
nr_seq_atepacu_w		procedimento_paciente.nr_seq_atepacu%type;
vl_procedimento_w		procedimento_paciente.vl_procedimento%type;
cd_medico_req_w			procedimento_paciente.cd_medico_req%type;
cd_medico_executor_w		procedimento_paciente.cd_medico_executor%type;

nr_seq_material_novo_w		material_atend_paciente.nr_sequencia%type;
nr_seq_material_w		material_atend_paciente.nr_sequencia%type;
cd_material_w			material_atend_paciente.cd_material%type;
dt_atendimento_w		material_atend_paciente.dt_atendimento%type;
dt_entrada_unidade_w		material_atend_paciente.dt_entrada_unidade%type;
cd_unidade_medida_w		material_atend_paciente.cd_unidade_medida%type;
cd_acao_w			material_atend_paciente.cd_acao%type;
vl_material_w			material_atend_paciente.vl_material%type;

nr_seq_propaci_valor_w		proc_paciente_valor.nr_sequencia%type;
nr_seq_matpaci_valor_w		mat_atend_paciente_valor.nr_sequencia%type;
nr_seq_conta_pac_dc_w		conta_pac_deducao_conv.nr_sequencia%type;
nr_conta_destino_w		conta_pac_deducao_conv.nr_seq_conta_des%type;

nr_seq_conpaci_ci_w		conta_pac_ded_conv_item.nr_sequencia%type;

pr_coseguro_hosp_w		conta_pac_deducao_conv.pr_informado_calculo%type;
vl_coseguro_hosp_w		conta_pac_deducao_conv.vl_informado_calculo%type;
vl_coseguro_proc_w		procedimento_paciente.vl_procedimento%type;

vl_procedimento_final_w		procedimento_paciente.vl_procedimento%type;

vl_medico_final_w		procedimento_paciente.vl_medico%type := 0;
vl_anestesista_final_w		procedimento_paciente.vl_anestesista%type := 0;
vl_materiais_final_w		procedimento_paciente.vl_materiais%type := 0;
vl_auxiliares_final_w		procedimento_paciente.vl_auxiliares%type := 0;
vl_custo_operacional_fin_w	procedimento_paciente.vl_custo_operacional%type := 0;

vl_medico_coseguro_w		procedimento_paciente.vl_medico%type := 0;
vl_anestesista_coseguro_w	procedimento_paciente.vl_anestesista%type := 0;
vl_materiais_coseguro_w		procedimento_paciente.vl_materiais%type := 0;
vl_auxiliares_coseguro_w	procedimento_paciente.vl_auxiliares%type := 0;
vl_custo_operacional_cos_w	procedimento_paciente.vl_custo_operacional%type := 0;
ie_zerar_pr_coseguro_w          varchar(1) := 'N';

vl_coseguro_sum_w		conta_pac_deducao_conv.vl_calculado%type := 0;
ie_tipo_calculo_w		conta_pac_deducao_conv.ie_tipo_calculo%type;

pr_informado_calculo_w		conta_pac_deducao_proc.pr_informado_calculo%type;
vl_informado_calculo_w		conta_pac_deducao_proc.vl_informado_calculo%type;

nr_seq_cat_iva_w		conta_paciente.nr_seq_categoria_iva%type;
ie_reduzir_valor_original_w	conta_pac_deducao_conv.ie_valor_original%type;

ie_copago_fechado_w		varchar(1);
ie_stop_process_w		varchar(1);
nr_seq_proc_out			procedimento_paciente.nr_sequencia%type;
ie_tipo_valor_s			proc_paciente_valor.ie_tipo_valor%type := 95;
ie_valor_informado_s		procedimento_paciente.ie_valor_informado%type := 'S';
ds_observacao_s			procedimento_paciente.ds_observacao%type := 'processar_conta_arg';

cd_convenio_w			conta_pac_deducao_conv.cd_convenio%type := 0;
cd_categoria_w			conta_pac_deducao_conv.cd_categoria%type;
dt_entrada_w			timestamp;
dt_alta_preco_w			timestamp;
dt_conta_definitiva_w		timestamp;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
dt_preco_w			timestamp := clock_timestamp();
cd_tipo_acomodacao_w		regra_ajuste_proc.cd_tipo_acomodacao%type;
ie_tipo_atendimento_w		atendimento_paciente.ie_tipo_atendimento%type := 0;
qt_idade_w			regra_ajuste_proc.qt_idade_min%type;
cd_usuario_convenio_w		regra_ajuste_proc.cd_usuario_convenio%type;
cd_plano_w			regra_ajuste_proc.cd_plano%type;
ie_clinica_w			regra_ajuste_proc.ie_clinica%type;
cd_empresa_ref_w		regra_ajuste_proc.cd_empresa_ref%type;
ie_sexo_w			regra_ajuste_proc.ie_sexo%type;
ie_atend_retorno_w		regra_ajuste_proc.ie_atend_retorno%type;
qt_dias_internacao_w		regra_ajuste_proc.qt_dias_inter_inicio%type;
ie_data_proc_dias_int_w		parametro_faturamento.ie_data_proc_dias_int%type;
ie_executar_leito_w		prescr_procedimento.ie_executar_leito%type := 'A';
nr_seq_tipo_acidente_w		atendimento_paciente.nr_seq_tipo_acidente%type;
cd_procedencia_w		atendimento_paciente.cd_procedencia%type;
nr_seq_cobertura_w		atend_categoria_convenio.nr_seq_cobertura%type;
nr_seq_classif_atend_w		atendimento_paciente.nr_seq_classificacao%type;
ie_carater_inter_sus_w		atendimento_paciente.ie_carater_inter_sus%type;
cd_dependente_w			atend_categoria_convenio.cd_dependente%type;
nr_seq_grupo_rec_w		regra_ajuste_proc.nr_seq_grupo_rec%type;
nr_seq_origem_w			atend_categoria_convenio.nr_seq_origem%type;
nr_seq_classif_medico_w		atendimento_paciente.nr_seq_classif_medico%type;
cd_tab_preco_mat_regra_w	preco_material.cd_tab_preco_mat%type;
qt_preco_mat_w			integer;
ie_regra_tipo_atend_w		parametro_faturamento.ie_regra_tipo_atend%type := 'A';
nr_seq_conta_pac_ded_conv_w	conta_pac_deducao_conv.nr_sequencia%type;
nr_seq_conta_pac_ded_mat_w	conta_pac_deducao_mat.nr_sequencia%type;
nr_seq_conta_pac_ded_proc_w	conta_pac_deducao_proc.nr_sequencia%type;
qt_registros_conv_ded_w		integer;
ie_registros_conv_ded_w		conta_pac_deducao_conv.ie_copago%type;

vl_custo_operacional_w		regra_ajuste_proc.vl_custo_operacional%type := 0;
vl_anestesista_w		regra_ajuste_proc.vl_anestesista%type := 0;
vl_medico_w			preco_amb.vl_medico%type := 0;
vl_auxiliares_w			preco_amb.vl_auxiliares%type := 0;
vl_materiais_w			preco_amb.vl_filme%type := 0;
vl_pto_procedimento_w		regra_ajuste_proc.vl_custo_operacional%type := 0;
vl_pto_custo_operac_w		regra_ajuste_proc.vl_custo_operacional%type := 0;
vl_pto_anestesista_w		porte_anestesico.vl_porte_anestesico%type := 0;
vl_pto_medico_w			preco_amb.vl_medico%type := 0;
vl_pto_auxiliares_w		preco_amb.vl_medico%type := 0;
vl_pto_materiais_w		preco_amb.vl_filme%type := 0;
qt_porte_anestesico_w		regra_ajuste_proc.qt_porte_anestesico%type := 0;
qt_pontos_w			preco_amb.qt_pontuacao%type;
cd_edicao_amb_w			convenio_amb.cd_edicao_amb%type := 0;
ie_preco_informado_w		regra_ajuste_proc.ie_preco_informado%type;
nr_seq_ajuste_proc_def_w	regra_ajuste_proc.nr_sequencia%type;
vl_preco_material_w		material_atend_paciente.vl_material%type := 0;
cd_tab_preco_mat_w		convenio_preco_mat.cd_tab_preco_mat%type := 0;
ie_origem_preco_w		integer := 0;
nr_seq_bras_preco_w		brasindice_preco.nr_sequencia%type;
nr_seq_mat_bras_w		material_brasindice.nr_sequencia%type;
nr_seq_conv_bras_w		convenio_brasindice.nr_sequencia%type;
nr_seq_conv_simpro_w		convenio_simpro.nr_sequencia%type;
nr_seq_mat_simpro_w		material_simpro.nr_sequencia%type;
nr_seq_simpro_preco_w		simpro_preco.nr_sequencia%type;
nr_seq_ajuste_mat_w		regra_ajuste_material.nr_sequencia%type;
dt_ult_vigencia_w		timestamp := clock_timestamp();
ie_has_copayment_link_w		conta_pac_deducao_conv.ie_copago%type;
nr_seq_conta_des_w		conta_pac_deducao_conv.nr_seq_conta_des%type;
vl_total_conta_ant_w		conta_paciente_valor_v.vl_original%type	:= 0;
nr_ordem_w			procedimento_paciente.nr_sequencia%type;

type ie_valor_informado_tp is table of conta_pac_ded_conv_item.ie_valor_informado%type index by integer;
type nr_seq_propaci_origem_tp is table of conta_pac_ded_conv_item.nr_seq_propaci_origem%type index by integer;
type nr_seq_matpaci_origem_tp is table of conta_pac_ded_conv_item.nr_seq_matpaci_origem%type index by integer;
type nr_seq_item_tp is table of conta_pac_ded_conv_item.nr_sequencia%type index by integer;
type vl_original_tp is table of conta_pac_ded_conv_item.vl_original%type index by integer;

ie_valor_informado_w		ie_valor_informado_tp;
nr_seq_propaci_origem_w		nr_seq_propaci_origem_tp;
nr_seq_matpaci_origem_w		nr_seq_matpaci_origem_tp;
nr_seq_item_w			nr_seq_item_tp;
vl_original_w			vl_original_tp;
vl_medico_orig_w		vl_original_tp;
vl_anestesista_orig_w		vl_original_tp;
vl_materiais_orig_w		vl_original_tp;
vl_auxiliares_orig_w		vl_original_tp;
vl_custo_operacional_orig_w	vl_original_tp;

qt_propaci_w 			integer := 0;
qt_propaci_copayment_w		integer := 0;
qt_propaci_cosinsurance_w 	integer := 0;
qt_proc_gen_copayment_w		integer := 0;

qt_matpaci_w	  		integer := 0;
qt_matpaci_copayment_w		integer := 0;
qt_matpaci_coinsurance_w 	integer := 0;
qt_mat_gen_copayment_w		integer := 0;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		qt_procedimento,
		ie_origem_proced,
		cd_setor_atendimento,
		nr_seq_atepacu,
		coalesce(vl_procedimento,0),
		coalesce(vl_medico,0),
		coalesce(vl_anestesista,0),
		coalesce(vl_materiais,0),
		coalesce(vl_auxiliares,0),
		coalesce(vl_custo_operacional,0),
		cd_medico_req,
		cd_medico_executor,
		row_number() over (order by coalesce(vl_procedimento,0) desc) nr_ordem
	from	procedimento_paciente p
	where	nr_interno_conta = nr_interno_conta_p
	and 	p.nr_sequencia not in (	SELECT	a.nr_seq_proc_pac
					from	conta_pac_deducao_proc a,
						conta_pac_deducao_conv b
					where	a.nr_seq_conta_ded = b.nr_sequencia
					and	b.nr_seq_conta_orig = nr_interno_conta_p
					and	b.ie_coseguro = 'S'
					and	b.ie_copago = 'N'
					and	b.ie_tipo_calculo in ('H','I')      
					and (coalesce(a.pr_informado_calculo, 0) > 0 or coalesce(a.vl_informado_calculo, 0) > 0))
	order by nr_ordem desc;

c02 CURSOR FOR
	SELECT	cp.pr_informado_calculo,
		cp.vl_informado_calculo,
		p.nr_sequencia,
		p.cd_procedimento,
		p.qt_procedimento,
		p.ie_origem_proced,
		p.cd_setor_atendimento,
		p.nr_seq_atepacu,
		coalesce(p.vl_procedimento,0),
		coalesce(p.vl_medico,0),
		coalesce(p.vl_anestesista,0),
		coalesce(p.vl_materiais,0),
		coalesce(p.vl_auxiliares,0),
		coalesce(p.vl_custo_operacional,0),
		p.cd_medico_req,
		p.cd_medico_executor
	from	conta_pac_deducao_proc cp
	left join procedimento_paciente p on cp.nr_seq_proc_pac = p.nr_sequencia
	where	cp.nr_seq_conta_ded = nr_seq_conta_pac_dc_w
	and (coalesce(cp.pr_informado_calculo, 0) > 0 or coalesce(cp.vl_informado_calculo, 0) > 0);

c03 CURSOR FOR
	SELECT	cm.pr_informado_calculo,
		cm.vl_informado_calculo,
		m.nr_sequencia,
		m.cd_material,
		m.dt_atendimento,
		m.nr_atendimento,
		m.cd_setor_atendimento,
		m.nr_seq_atepacu,
		m.dt_entrada_unidade,
		m.cd_unidade_medida,
		m.cd_acao,
		coalesce(m.vl_material,0)
	from	conta_pac_deducao_mat cm
	left join material_atend_paciente m on cm.nr_seq_mat_pac = m.nr_sequencia
	where	cm.nr_seq_conta_ded = nr_seq_conta_pac_dc_w
	and (coalesce(cm.pr_informado_calculo, 0) > 0 or coalesce(cm.vl_informado_calculo, 0) > 0);

c04 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.qt_procedimento,
		a.ie_origem_proced,
		a.cd_setor_atendimento,
		a.nr_seq_atepacu,
		coalesce(a.vl_procedimento,0) vl_procedimento_proc,
		coalesce(a.vl_medico,0) vl_medico,
		coalesce(a.vl_anestesista,0) vl_anestesista,
		coalesce(a.vl_materiais,0) vl_materiais,
		coalesce(a.vl_auxiliares,0) vl_auxiliares,
		coalesce(a.vl_custo_operacional,0) vl_custo_operacional,
		b.ie_glosa,
		b.cd_plano,
		coalesce(b.cd_categoria_fixo,cd_categoria_partic_w) cd_categoria_fixo,
		coalesce(b.cd_convenio_fixo,cd_convenio_partic_w) cd_convenio_fixo,
		coalesce(b.vl_fixo,0) vl_fixo,
		coalesce(b.pr_fixo,0) pr_fixo,
		a.cd_convenio,
		coalesce(a.dt_conta, a.dt_prescricao, a.dt_procedimento) dt_conta,
		a.cd_medico_req,
		a.cd_medico_executor,
		a.dt_procedimento,
		a.nr_seq_exame,
		a.nr_seq_proc_interno,
		a.ie_video,
		coalesce(a.nr_prescricao,0) nr_prescricao,
		a.nr_sequencia_prescricao,
		a.ie_spect,
		a.cd_cgc_prestador,
		a.cd_equipamento,
		a.cd_especialidade,
		a.ie_valor_informado
	from	procedimento_paciente a,
		copayment_rules b,
		estrutura_procedimento_v c,
		conta_paciente d
	where	a.nr_interno_conta = nr_interno_conta_p
	and 	b.cd_convenio = a.cd_convenio
	and 	c.cd_procedimento = a.cd_procedimento
	and	c.ie_origem_proced = a.ie_origem_proced
	and 	d.nr_interno_conta = a.nr_interno_conta
	and	b.cd_estabelecimento = d.cd_estabelecimento
	and	b.ie_situacao = 'A'
	and	clock_timestamp() > pkg_date_utils.get_Time(b.dt_inicio_vigencia, 0)
	and	((coalesce(b.dt_final_vigencia::text, '') = '') or (pkg_date_utils.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
	and	((coalesce(b.cd_procedimento::text, '') = '') or (b.cd_procedimento = a.cd_procedimento))
	and	((coalesce(b.nr_seq_proc_interno::text, '') = '') or (b.nr_seq_proc_interno = a.nr_seq_proc_interno))
	and	((coalesce(b.cd_especialidade::text, '') = '') or (b.cd_especialidade = a.cd_especialidade))
	and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
	and	((coalesce(b.cd_area_procedimento::text, '') = '') or (b.cd_area_procedimento = c.cd_area_procedimento))
	and	((coalesce(b.cd_grupo_proc::text, '') = '') or (b.cd_grupo_proc = c.cd_grupo_proc))
	and	((coalesce(b.ie_origem_proced::text, '') = '') or (b.ie_origem_proced = c.ie_origem_proced))
	and ((b.ie_origem_proced IS NOT NULL AND b.ie_origem_proced::text <> '') or 
		 (b.cd_area_procedimento IS NOT NULL AND b.cd_area_procedimento::text <> '') or 
		 (b.cd_especialidade IS NOT NULL AND b.cd_especialidade::text <> '') or 
		 (b.cd_grupo_proc IS NOT NULL AND b.cd_grupo_proc::text <> '') or 
		 (b.cd_procedimento IS NOT NULL AND b.cd_procedimento::text <> '') or
		 (b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> ''))
	and 	not exists (SELECT x.nr_sequencia 
			    from   conta_pac_ded_conv_item x,
			           conta_pac_deducao_conv y 
			    where  x.nr_seq_propaci_origem = a.nr_sequencia 
			    and    (x.nr_seq_propaci_dest IS NOT NULL AND x.nr_seq_propaci_dest::text <> '') 
			    and    x.nr_seq_deducao_conv  = y.nr_sequencia
			    and    y.nr_seq_conta_orig = nr_interno_conta_p);		

c05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_material,
		a.qt_material,
		a.cd_setor_atendimento,
		a.nr_seq_atepacu,
		coalesce(a.vl_material,0) vl_material,
		b.ie_glosa,
		b.cd_plano,
		coalesce(b.cd_categoria_fixo,cd_categoria_partic_w) cd_categoria_fixo,
		coalesce(b.cd_convenio_fixo,cd_convenio_partic_w) cd_convenio_fixo,
		coalesce(b.vl_fixo,0) vl_fixo,
		coalesce(b.pr_fixo,0) pr_fixo,
		a.cd_convenio,
		a.dt_atendimento,
		a.cd_unidade_medida,
		a.dt_entrada_unidade,
		a.cd_acao,
		coalesce(a.dt_conta, a.dt_prescricao, a.dt_atendimento) dt_conta,
		a.cd_cgc_fornecedor,
		a.nr_seq_proc_princ,
		a.ie_valor_informado
	from	material_atend_paciente a,
		copayment_rules b,
		estrutura_material_v c, 
		conta_paciente d 	
	where	a.nr_interno_conta = nr_interno_conta_p
	and     b.cd_convenio = a.cd_convenio
        and     c.cd_material = a.cd_material
        and     d.nr_interno_conta = a.nr_interno_conta
	and	b.cd_estabelecimento = d.cd_estabelecimento
	and	b.ie_situacao = 'A'
	and	clock_timestamp() > pkg_date_utils.get_Time(b.dt_inicio_vigencia, 0)
	and	((coalesce(b.dt_final_vigencia::text, '') = '') or (pkg_date_utils.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
	and	((coalesce(b.cd_material::text, '') = '') or (b.cd_material = a.cd_material))
	and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
	and	((coalesce(b.cd_grupo_material::text, '') = '') or (b.cd_grupo_material = c.cd_grupo_material))
	and	((coalesce(b.cd_subgrupo_material::text, '') = '') or (b.cd_subgrupo_material = c.cd_subgrupo_material))
	and	((coalesce(b.cd_classe_material::text, '') = '') or (b.cd_classe_material = c.cd_classe_material))
	and	((coalesce(b.nr_seq_familia::text, '') = '') or (b.nr_seq_familia = c.nr_seq_familia))
	and ((b.cd_material IS NOT NULL AND b.cd_material::text <> '') or 
		 (b.nr_seq_familia IS NOT NULL AND b.nr_seq_familia::text <> '') or 
		 (b.cd_grupo_material IS NOT NULL AND b.cd_grupo_material::text <> '') or 
		 (b.cd_subgrupo_material IS NOT NULL AND b.cd_subgrupo_material::text <> '') or
		 (b.cd_classe_material IS NOT NULL AND b.cd_classe_material::text <> ''))
	and 	not exists (SELECT x.nr_sequencia 
			    from   conta_pac_ded_conv_item x,
			           conta_pac_deducao_conv y 
			    where  x.nr_seq_matpaci_origem = a.nr_sequencia 
			    and    (x.nr_seq_matpaci_dest IS NOT NULL AND x.nr_seq_matpaci_dest::text <> '') 
			    and    x.nr_seq_deducao_conv  = y.nr_sequencia
			    and    y.nr_seq_conta_orig = nr_interno_conta_p);		

c06 CURSOR FOR
	SELECT	coalesce(a.ie_valor_informado,'S') ie_valor_informado,
		a.nr_seq_propaci_origem,
		a.nr_seq_matpaci_origem,
		a.nr_sequencia,
		a.vl_original,
		a.vl_medico,
		a.vl_anestesista,
		a.vl_materiais,
		a.vl_auxiliares,
		a.vl_custo_operacional
	from	conta_pac_deducao_conv b,
		conta_pac_ded_conv_item a
	where	b.nr_seq_conta_orig = nr_interno_conta_p
	and	b.nr_sequencia = a.nr_seq_deducao_conv
	and	ie_copago = 'S';

c07 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_propaci_origem,
		coalesce(a.vl_procedimento,0) vl_original,
		coalesce(a.vl_medico,0),
		coalesce(a.vl_anestesista,0),
		coalesce(a.vl_materiais,0),
		coalesce(a.vl_auxiliares,0),
		coalesce(a.vl_custo_operacional,0),
		a.ie_valor_informado
	from	procedimento_paciente a,
		copayment_rules b,
		estrutura_procedimento_v c,
		conta_paciente d
	where	a.nr_interno_conta = nr_interno_conta_p
	and	b.cd_convenio = a.cd_convenio
	and	c.cd_procedimento = a.cd_procedimento
	and	c.ie_origem_proced = a.ie_origem_proced
	and	d.nr_interno_conta = a.nr_interno_conta
	and	b.cd_estabelecimento = d.cd_estabelecimento
	and	b.ie_situacao = 'A'
	and	clock_timestamp() > pkg_date_utils.get_Time(b.dt_inicio_vigencia, 0)
	and	((coalesce(b.dt_final_vigencia::text, '') = '') or (pkg_date_utils.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
	and	((coalesce(b.cd_procedimento::text, '') = '') or (b.cd_procedimento = a.cd_procedimento))
	and	((coalesce(b.nr_seq_proc_interno::text, '') = '') or (b.nr_seq_proc_interno = a.nr_seq_proc_interno))
	and	((coalesce(b.cd_especialidade::text, '') = '') or (b.cd_especialidade = a.cd_especialidade))
	and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
	and	((coalesce(b.cd_area_procedimento::text, '') = '') or (b.cd_area_procedimento = c.cd_area_procedimento))
	and	((coalesce(b.cd_grupo_proc::text, '') = '') or (b.cd_grupo_proc = c.cd_grupo_proc))
	and	((coalesce(b.ie_origem_proced::text, '') = '') or (b.ie_origem_proced = c.ie_origem_proced))
	and ((b.ie_origem_proced IS NOT NULL AND b.ie_origem_proced::text <> '') or
		 (b.cd_area_procedimento IS NOT NULL AND b.cd_area_procedimento::text <> '') or 
		 (b.cd_especialidade IS NOT NULL AND b.cd_especialidade::text <> '') or 
		 (b.cd_grupo_proc IS NOT NULL AND b.cd_grupo_proc::text <> '') or 
		 (b.cd_procedimento IS NOT NULL AND b.cd_procedimento::text <> '') or 
		 (b.nr_seq_proc_interno IS NOT NULL AND b.nr_seq_proc_interno::text <> ''))
	and 	not exists (	SELECT	x.nr_sequencia 
				from   	procedimento_paciente x,
					conta_pac_ded_conv_item y 
				where 	x.nr_interno_conta = a.nr_interno_conta               
				and   	y.nr_seq_propaci_origem = x.nr_sequencia
				and   	x.nr_sequencia = a.nr_sequencia);

c08 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_matpaci_origem,
		coalesce(a.vl_material,0) vl_original,
		a.ie_valor_informado
	from	material_atend_paciente a,
		copayment_rules b,
		estrutura_material_v c,
		conta_paciente d
	where	a.nr_interno_conta = nr_interno_conta_p
	and	b.cd_convenio = a.cd_convenio
	and	c.cd_material = a.cd_material
	and	d.nr_interno_conta = a.nr_interno_conta
	and	b.cd_estabelecimento = d.cd_estabelecimento
	and	b.ie_situacao = 'A'
	and	clock_timestamp() > PKG_DATE_UTILS.get_Time(b.dt_inicio_vigencia, 0)
	and	((coalesce(b.dt_final_vigencia::text, '') = '') or (PKG_DATE_UTILS.get_Time(coalesce(b.dt_final_vigencia,clock_timestamp()) ,0) + 86399/86400 > clock_timestamp()))
	and	((coalesce(b.cd_material::text, '') = '') or (b.cd_material = a.cd_material))
	and	((coalesce(b.cd_categoria::text, '') = '') or (b.cd_categoria = a.cd_categoria))
	and	((coalesce(b.cd_grupo_material::text, '') = '') or (b.cd_grupo_material = c.cd_grupo_material))
	and	((coalesce(b.cd_subgrupo_material::text, '') = '') or (b.cd_subgrupo_material = c.cd_subgrupo_material))
	and	((coalesce(b.cd_classe_material::text, '') = '') or (b.cd_classe_material = c.cd_classe_material))
	and	((coalesce(b.nr_seq_familia::text, '') = '') or (b.nr_seq_familia = c.nr_seq_familia))
	and ((b.cd_material IS NOT NULL AND b.cd_material::text <> '') or
		 (b.nr_seq_familia IS NOT NULL AND b.nr_seq_familia::text <> '') or 
		 (b.cd_grupo_material IS NOT NULL AND b.cd_grupo_material::text <> '') or
		 (b.cd_subgrupo_material IS NOT NULL AND b.cd_subgrupo_material::text <> '') or
		 (b.cd_classe_material IS NOT NULL AND b.cd_classe_material::text <> ''))
	and 	not exists (	SELECT	x.nr_sequencia 
				from   	material_atend_paciente x,
					conta_pac_ded_conv_item y 
				where 	x.nr_interno_conta = a.nr_interno_conta               
				and   	y.nr_seq_matpaci_origem = x.nr_sequencia
				and   	x.nr_sequencia = a.nr_sequencia);

c04_w		c04%rowtype;
c05_w		c05%rowtype;


BEGIN
/*	O Restaurar valores funciona APENAS para o COPAGO (COSEGURO Previo - Automatico).
	Essa solucao foi implementada para evitar que o cliente mesmo
	com parametro 327 - Recalcular a conta ao alterar o status para definitivo (fechar a conta)

	Exemplo: Se o recalcular conta era executado antes de fechar a conta que iria disparar novamente,
	a regra estava sendo rechamada, o que estava gerando novamente a insercao de novos registros.

	Chada do recalculo de conta_paciente e no objeto "recalcular_conta_paciente" em dois pontos:

	1) Primeira interacao aproximadamente na linha 137:

		if (nvl(pkg_i18n.get_user_locale, 'pt_BR') = 'es_AR') then
			processar_conta_arg(nr_interno_conta_p, nm_usuario_p, 'S', 'S');
		end if;

	2) Segunda interacao no final do objeto, aproximadamente na linha 798

		if (nvl(pkg_i18n.get_user_locale, 'pt_BR') = 'es_AR') then
			processar_conta_arg(nr_interno_conta_p, nm_usuario_p, 'S');
		end if;
*/
ie_stop_process_w := 'N';
	
if (ie_copago_p = 'S') then 		
	SELECT * FROM check_copayment_status(
		nr_interno_conta_p	 => nr_interno_conta_p, nm_usuario_p		 => nm_usuario_p, qt_propaci_p		 => qt_propaci_w, qt_propaci_copayment_p 	 => qt_propaci_copayment_w, qt_propaci_coinsurance_p => qt_propaci_cosinsurance_w, qt_proc_gen_copayment_p  => qt_proc_gen_copayment_w, qt_matpaci_p		 => qt_matpaci_w, qt_matpaci_copayment_p	 => qt_matpaci_copayment_w, qt_matpaci_coinsurance_p => qt_matpaci_coinsurance_w, qt_mat_gen_copayment_p	 => qt_mat_gen_copayment_w) INTO STRICT qt_propaci_p		 => qt_propaci_w, qt_propaci_copayment_p 	 => qt_propaci_copayment_w, qt_propaci_coinsurance_p => qt_propaci_cosinsurance_w, qt_proc_gen_copayment_p  => qt_proc_gen_copayment_w, qt_matpaci_p		 => qt_matpaci_w, qt_matpaci_copayment_p	 => qt_matpaci_copayment_w, qt_matpaci_coinsurance_p => qt_matpaci_coinsurance_w, qt_mat_gen_copayment_p	 => qt_mat_gen_copayment_w;

	if (((qt_proc_gen_copayment_w + qt_mat_gen_copayment_w) > 0) and
	   ((qt_propaci_w + qt_matpaci_w) > ((qt_propaci_copayment_w + qt_matpaci_copayment_w) + (qt_propaci_cosinsurance_w + qt_matpaci_coinsurance_w)))) then 
		ie_copago_fechado_w := 'N';		
	else	
		ie_copago_fechado_w := 'S';
			ie_stop_process_w := 'S';				
		if (obter_parametro_funcao_padrao(67, 746, wheb_usuario_pck.get_nm_usuario) = 'S') then
			ie_stop_process_w := 'S';
		end if; 		
	end if;
end if;

if (ie_restaurar_valores_p = 'S' and ie_stop_process_w = 'N') then
	if (ie_copago_p = 'S') then

		-- Deve verificar se existe uma conta aberta. 
		--   Senao existe, na hora de passar os itens deve verificar qual item e de COPAGO
		select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END ,
			max(a.nr_sequencia),
			max(a.nr_seq_conta_des)
		into STRICT	ie_has_copayment_link_w,
			nr_seq_conta_pac_ded_conv_w,
			nr_seq_conta_des_w
		from	conta_pac_deducao_conv a,
		        conta_paciente b
		where	a.nr_seq_conta_orig = nr_interno_conta_p
		and     b.nr_interno_conta = a.nr_seq_conta_des  
                and     b.ie_status_acerto = 1
		and	(a.nr_seq_conta_des IS NOT NULL AND a.nr_seq_conta_des::text <> '')
		and	a.ie_copago = 'S';		
		
		if (ie_has_copayment_link_w = 'S') then
			open c06;
			loop
			fetch c06 bulk collect into
				ie_valor_informado_w,
				nr_seq_propaci_origem_w,
				nr_seq_matpaci_origem_w,
				nr_seq_item_w,
				vl_original_w,
				vl_medico_orig_w,
				vl_anestesista_orig_w,
				vl_materiais_orig_w,
				vl_auxiliares_orig_w,
				vl_custo_operacional_orig_w limit 1000;
			exit when nr_seq_item_w.count = 0;

				forall i in nr_seq_propaci_origem_w.first..nr_seq_propaci_origem_w.last
					update 	procedimento_paciente
					set 	vl_procedimento		= vl_original_w(i),
						vl_medico		= vl_medico_orig_w(i),
						vl_anestesista		= vl_anestesista_orig_w(i),
						vl_materiais		= vl_materiais_orig_w(i),
						vl_auxiliares		= vl_auxiliares_orig_w(i),
						vl_custo_operacional	= vl_custo_operacional_orig_w(i)
					where 	nr_sequencia		= nr_seq_propaci_origem_w(i)
					and 	ie_valor_informado	= 'S'
					and	ie_valor_informado_w(i)	= 'S';
				commit;

				forall i in nr_seq_matpaci_origem_w.first..nr_seq_matpaci_origem_w.last
					update 	material_atend_paciente
					set 	vl_material		= vl_original_w(i)
					where 	nr_sequencia		= nr_seq_matpaci_origem_w(i)
					and 	ie_valor_informado	= 'S'
					and	ie_valor_informado_w(i)	= 'S';
				commit;

				forall i in nr_seq_propaci_origem_w.first..nr_seq_propaci_origem_w.last
					update  procedimento_paciente
					set     ie_valor_informado	= ie_valor_informado_w(i)
					where   nr_sequencia		= nr_seq_propaci_origem_w(i);
				commit;

				forall i in nr_seq_matpaci_origem_w.first..nr_seq_matpaci_origem_w.last
					update  material_atend_paciente
					set     ie_valor_informado	= ie_valor_informado_w(i)
					where   nr_sequencia		= nr_seq_matpaci_origem_w(i);
				commit;

				ie_valor_informado_w.delete;
				nr_seq_propaci_origem_w.delete;
				nr_seq_matpaci_origem_w.delete;
				nr_seq_item_w.delete;
				vl_original_w.delete;
				vl_medico_orig_w.delete;
				vl_anestesista_orig_w.delete;
				vl_materiais_orig_w.delete;
				vl_auxiliares_orig_w.delete;
				vl_custo_operacional_orig_w.delete;
			end loop;
			close c06;

			delete	from	conta_pac_ded_conv_item a
			where	exists (SELECT	1
				  	 from	procedimento_paciente x
					 where	x.nr_sequencia = a.nr_seq_propaci_dest
					 and	x.nr_interno_conta = nr_seq_conta_des_w)
			and     exists ( select 1 
					 from   conta_pac_deducao_conv y
					 where  y.nr_sequencia = a.nr_seq_deducao_Conv
					 and 	y.ie_copago = 'S'
					 and 	y.ie_coseguro = 'N');                					

			delete	from	conta_pac_ded_conv_item a
			where	exists (SELECT	1
					 from	material_atend_paciente x
					 where	x.nr_sequencia = a.nr_seq_matpaci_dest
					 and	x.nr_interno_conta = nr_seq_conta_des_w)
			and     exists ( select 1
					 from   conta_pac_deducao_conv y
					 where  y.nr_sequencia = a.nr_seq_deducao_Conv
					 and	y.ie_copago = 'S'
					 and 	y.ie_coseguro = 'N');					

			delete	from conta_pac_ded_conv_item
			where	nr_seq_deducao_conv = nr_seq_conta_pac_ded_conv_w;

			-- deve deletar somente os procedimentos/materias relacionados a COPAGO. 
			-- Os provenientes de COSEGURO nao poderao sofrer alteracoes
			delete	from procedimento_paciente
			where	nr_interno_conta = nr_seq_conta_des_w
			and     nr_sequencia in (nr_seq_conta_des_w);

			delete	from material_atend_paciente
			where	nr_interno_conta = nr_seq_conta_des_w;
		else
			begin

			--
			-- Verifica se existe algum caso em aberto, se for necessario criar uma nova conta 
			-- 
			if (ie_copago_fechado_w = 'N') then
				select	CASE WHEN count(a.nr_sequencia)=0 THEN  'N'  ELSE 'S' END 
				into STRICT	ie_registros_conv_ded_w
				from	conta_pac_deducao_conv a,
					conta_paciente b 
				where	a.nr_seq_conta_orig = nr_interno_conta_p
				and     b.nr_interno_conta = a.nr_seq_conta_des  
				and     b.ie_status_acerto = 1  
				and	a.ie_copago = 'S';

				-- NOTAS: Pode existir uma conta de copago ja criada, mas sem conta destino.
				if (ie_registros_conv_ded_w = 'N') then
					select	CASE WHEN count(a.nr_sequencia)=0 THEN  'N'  ELSE 'S' END
					into STRICT	ie_registros_conv_ded_w
					from	conta_pac_deducao_conv a
					where	a.nr_seq_conta_orig = nr_interno_conta_p
					and 	coalesce(a.nr_seq_conta_des::text, '') = '' 
					and	a.ie_copago = 'S';
				end if;

				if (ie_registros_conv_ded_w = 'N') then
					select	nextval('conta_pac_deducao_conv_seq')
					into STRICT	nr_seq_conta_pac_ded_conv_w
					;

					insert into  conta_pac_deducao_conv(
						nr_seq_conta_orig,
						nr_sequencia,
						nm_usuario,
						nm_usuario_nrec,
						dt_atualizacao,
						dt_atualizacao_nrec,
						ie_tipo_calculo,
						ie_copago,
						ie_coseguro
					) values (
						nr_interno_conta_p,
						nr_seq_conta_pac_ded_conv_w,
						nm_usuario_p,
						nm_usuario_p,
						clock_timestamp(),
						clock_timestamp(),
						'C', -- C - Co-pagamento
						'S',
						'N'
					);
				else
					select  max(nr_sequencia)
					into STRICT    nr_seq_conta_pac_ded_conv_w
					from    conta_pac_deducao_conv
					where   nr_seq_conta_orig = nr_interno_conta_p
					and     ie_copago = 'S';
				end if;
			end if;
			end;
		end if;

		-- Seleciona apenas itens que nao existem na 'conta_pac_dev_conv_item' e insere
		open c07;
		loop
		fetch c07 bulk collect into
			nr_seq_propaci_origem_w,
			vl_original_w,
			vl_medico_orig_w,
			vl_anestesista_orig_w,
			vl_materiais_orig_w,
			vl_auxiliares_orig_w,
			vl_custo_operacional_orig_w,
			ie_valor_informado_w limit 1000;
		exit when nr_seq_propaci_origem_w.count = 0;

			forall i in nr_seq_propaci_origem_w.first..nr_seq_propaci_origem_w.last
			
				insert into conta_pac_ded_conv_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_deducao_conv,
					nr_seq_propaci_origem,
					ie_valor_informado,
					vl_original,
					vl_medico,
					vl_anestesista,
					vl_materiais,
					vl_auxiliares,
					vl_custo_operacional
				) values (
					nextval('conta_pac_ded_conv_item_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_conta_pac_ded_conv_w,
					nr_seq_propaci_origem_w(i),
					ie_valor_informado_w(i),
					vl_original_w(i),
					vl_medico_orig_w(i),
					vl_anestesista_orig_w(i),
					vl_materiais_orig_w(i),
					vl_auxiliares_orig_w(i),
					vl_custo_operacional_orig_w(i)
				);
			commit;

			nr_seq_propaci_origem_w.delete;
			vl_original_w.delete;
			vl_medico_orig_w.delete;
			vl_anestesista_orig_w.delete;
			vl_materiais_orig_w.delete;
			vl_auxiliares_orig_w.delete;
			vl_custo_operacional_orig_w.delete;
			ie_valor_informado_w.delete;
		end loop;
		close c07;

		open c08;
		loop
		fetch c08 bulk collect into
			nr_seq_matpaci_origem_w,
			vl_original_w,
			ie_valor_informado_w limit 1000;
		exit when nr_seq_matpaci_origem_w.count = 0;

			forall i in nr_seq_matpaci_origem_w.first..nr_seq_matpaci_origem_w.last
				insert into conta_pac_ded_conv_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_deducao_conv,
					nr_seq_matpaci_origem,
					ie_valor_informado,
					vl_original
				) values (
					nextval('conta_pac_ded_conv_item_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_conta_pac_ded_conv_w,
					nr_seq_matpaci_origem_w(i),
					ie_valor_informado_w(i),
					vl_original_w(i)
				);
			commit;

			nr_seq_matpaci_origem_w.delete;
			vl_original_w.delete;
			ie_valor_informado_w.delete;
		end loop;
		close c08;
	end if;
end if;

------------------------------
-- Ie_restaurar valores = N
------------------------------
if (ie_restaurar_valores_p = 'N' and ie_stop_process_w = 'N') then
	select	max(nr_atendimento),
		max(cd_estabelecimento),
		max(nr_seq_categoria_iva)
	into STRICT	nr_atendimento_w,
		cd_estabelecimento_w,
		nr_seq_cat_iva_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_p;

	select	max(cd_convenio_partic),
		max(cd_categoria_partic)
	into STRICT	cd_convenio_partic_w,
		cd_categoria_partic_w
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w;

	--COSEGURO
	if (ie_copago_p = 'N') then
		select	count(*),
			max(nr_sequencia)
		into STRICT	qt_registros_conv_ded_w,
			nr_seq_conta_pac_ded_conv_w
		from	conta_pac_deducao_conv
		where	nr_seq_conta_orig = nr_interno_conta_p
		and	((ie_coseguro = 'S') or (ie_tipo_calculo = 'H') or (ie_tipo_calculo = 'I'))
		and 	coalesce(dt_processamento::text, '') = '';					

		if (qt_registros_conv_ded_w > 0) then
			select	coalesce(cd_convenio,cd_convenio_partic_w),
				coalesce(cd_categoria,cd_categoria_partic_w)
			into STRICT	cd_convenio_w,
				cd_categoria_w
			from	conta_pac_deducao_conv
			where	nr_seq_conta_orig = nr_interno_conta_p 
			and 	coalesce(dt_processamento::text, '') = ''				    
			order by nr_sequencia desc LIMIT 1;
		else
			cd_convenio_w := cd_convenio_partic_w;
			cd_categoria_w := cd_categoria_partic_w;
		end if;

		select	nr_sequencia,
			ie_tipo_calculo,
			coalesce(pr_informado_calculo, 0),
			coalesce(vl_informado_calculo, 0),
			coalesce(ie_valor_original,'S')
		into STRICT	nr_seq_conta_pac_dc_w,
			ie_tipo_calculo_w,
			pr_coseguro_hosp_w,
			vl_coseguro_hosp_w,
			ie_reduzir_valor_original_w
		from	conta_pac_deducao_conv
		where	nr_seq_conta_orig = nr_interno_conta_p
		and	((ie_coseguro = 'S') or (ie_tipo_calculo = 'H') or (ie_tipo_calculo = 'I'))
		and 	coalesce(dt_processamento::text, '') = ''					   
		order by nr_sequencia desc LIMIT 1;

		-- H - Coseguro Hospital
		if (ie_tipo_calculo_w = 'H') then
			select	obter_valor_conta(nr_interno_conta_p, 0)
			into STRICT	vl_total_conta_ant_w
			;

			vl_coseguro_sum_p	=> 	vl_coseguro_sum_w	 := generate_general_mat_copayment(	
				nr_interno_conta_p	=> 	nr_interno_conta_p, nr_seq_conta_pac_dc_p	=> 	nr_seq_conta_pac_dc_w, pr_coseguro_hosp_p	=>	pr_coseguro_hosp_w, cd_convenio_p		=>	cd_convenio_w, cd_categoria_p		=>	cd_categoria_w, ie_red_valor_original_p	=>	ie_reduzir_valor_original_w, vl_coseguro_hosp_p	=>	vl_coseguro_hosp_w, vl_total_conta_ant_p	=>	vl_total_conta_ant_w, nm_usuario_p		=>	nm_usuario_p, vl_coseguro_sum_p	=> 	vl_coseguro_sum_w	);
			
			open c01;
			loop
				fetch  c01 into
					nr_seq_procedimento_w,
					cd_procedimento_w,
					qt_procedimento_w,
					ie_origem_proced_w,
					cd_setor_atendimento_w,
					nr_seq_atepacu_w,
					vl_procedimento_w,
					vl_medico_w,
					vl_anestesista_w,
					vl_materiais_w,
					vl_auxiliares_w,
					vl_custo_operacional_w,
					cd_medico_req_w,
					cd_medico_executor_w,
					nr_ordem_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
				begin
				
				if (ie_zerar_pr_coseguro_w = 'S') then
					pr_coseguro_hosp_w := 0;
				end if;
				
				vl_medico_coseguro_w := 0;
				vl_medico_final_w := 0;
				
				vl_anestesista_coseguro_w := 0;
				vl_anestesista_final_w := 0;
				
				vl_materiais_coseguro_w := 0;
				vl_materiais_final_w := 0;
				
				vl_auxiliares_coseguro_w := 0;
				vl_auxiliares_final_w := 0;
				
				vl_custo_operacional_cos_w := 0;
				vl_custo_operacional_fin_w := 0;
				
				-- Gerar a informacao dos valores originais antes de alteracao
				select	coalesce(max(nr_sequencia), 0) + 1
				into STRICT	nr_seq_propaci_valor_w
				from	proc_paciente_valor
				where	nr_seq_procedimento = nr_seq_procedimento_w;

				insert into proc_paciente_valor(
					nr_sequencia,
					nr_seq_procedimento,
					ie_tipo_valor,
					dt_atualizacao,
					nm_usuario,
					vl_procedimento,
					vl_medico,
					vl_anestesista,
					vl_materiais,
					vl_auxiliares,
					vl_custo_operacional,
					cd_convenio,
					cd_categoria,
					pr_valor,
					nr_seq_trans_fin,
					nr_lote_contabil,
					nr_seq_desconto,
					qt_pontos
				) values (
					nr_seq_propaci_valor_w,
					nr_seq_procedimento_w,
					ie_tipo_valor_s,
					clock_timestamp(),
					nm_usuario_p,
					vl_procedimento_w,
					vl_medico_w,
					vl_anestesista_w,
					vl_materiais_w,
					vl_auxiliares_w,
					vl_custo_operacional_w,
					cd_convenio_w,
					cd_categoria_w,
					pr_coseguro_hosp_w,
					null,
					null,
					null,
					null
				);
				if (coalesce(pr_coseguro_hosp_w,0) > 0) then
					vl_coseguro_proc_w := vl_procedimento_w * pr_coseguro_hosp_w/100;
					vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;
				else
					vl_coseguro_proc_w := round((vl_procedimento_w / vl_total_conta_ant_w) * vl_coseguro_hosp_w, 2);			
					vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;

					if (nr_ordem_w = 1) then
						vl_coseguro_proc_w := vl_coseguro_proc_w + (vl_coseguro_hosp_w - vl_coseguro_sum_w);
						vl_coseguro_sum_w := vl_coseguro_sum_w + (vl_coseguro_hosp_w - vl_coseguro_sum_w);
					end if;
				end if;

				if (ie_reduzir_valor_original_w = 'S') then
					begin
					vl_procedimento_final_w := vl_procedimento_w - vl_coseguro_proc_w;
					
					-- Se nao tem coeficiente procura
					if (coalesce(pr_coseguro_hosp_w,0) = 0) then
						pr_coseguro_hosp_w := round((vl_coseguro_proc_w * 100) / vl_procedimento_w, 2);
						ie_zerar_pr_coseguro_w := 'S';
					end if;
					
					if (vl_medico_w > 0) then
						vl_medico_coseguro_w := round((vl_medico_w * pr_coseguro_hosp_w / 100)::numeric, 2);
						vl_medico_final_w := vl_medico_w - vl_medico_coseguro_w;
					end if;
					
					if (vl_anestesista_w > 0) then
						vl_anestesista_coseguro_w := round((vl_anestesista_w * pr_coseguro_hosp_w / 100)::numeric, 2);
						vl_anestesista_final_w := vl_anestesista_w - vl_anestesista_coseguro_w;
					end if;
					
					if (vl_materiais_w > 0) then
						vl_materiais_coseguro_w := round((vl_materiais_w * pr_coseguro_hosp_w / 100)::numeric, 2);
						vl_materiais_final_w := vl_materiais_w - vl_materiais_coseguro_w;
					end if;
					
					if (vl_auxiliares_w > 0) then
						vl_auxiliares_coseguro_w := round((vl_auxiliares_w * pr_coseguro_hosp_w / 100)::numeric, 2);
						vl_auxiliares_final_w := vl_auxiliares_w - vl_auxiliares_coseguro_w;
					end if;
					
					if (vl_custo_operacional_w > 0) then
						vl_custo_operacional_cos_w := round((vl_custo_operacional_w * pr_coseguro_hosp_w / 100)::numeric, 2);
						vl_custo_operacional_fin_w := vl_custo_operacional_w - vl_custo_operacional_cos_w;
					end if;
					end;
				else
					vl_procedimento_final_w := vl_procedimento_w;
				end if;

				update	procedimento_paciente
				set	vl_medico = vl_medico_final_w,
					vl_anestesista = vl_anestesista_final_w,
					vl_materiais = vl_materiais_final_w,
					vl_auxiliares = vl_auxiliares_final_w,
					vl_custo_operacional = vl_custo_operacional_fin_w,
					vl_procedimento = vl_procedimento_final_w,
					ie_valor_informado = 'S'
				where	nr_sequencia = nr_seq_procedimento_w;

				nr_sequencia_p		=> nr_seq_proc_out := inserir_procedimento_paciente(
					cd_procedimento_p	=> cd_procedimento_w, qt_procedimento_p	=> qt_procedimento_w, nr_seq_exame_p		=> null, nr_seq_proc_interno_p	=> null, ie_origem_proced_p	=> ie_origem_proced_w, cd_setor_atendimento_p	=> cd_setor_atendimento_w, nr_atendimento_p	=> nr_atendimento_w, cd_estabelecimento_p	=> cd_estabelecimento_w, nm_usuario_p		=> nm_usuario_p, ie_tipo_baixa_p		=> null, ie_valor_informado_p	=> ie_valor_informado_s, cd_medico_p		=> null, nr_seq_atepacu_p	=> nr_seq_atepacu_w, dt_procedimento_p	=> clock_timestamp(), cd_convenio_p		=> cd_convenio_w, cd_categoria_p		=> cd_categoria_w, nr_sequencia_p		=> nr_seq_proc_out, cd_medico_req_p		=> cd_medico_req_w, cd_medico_executor_p	=> cd_medico_executor_w, vl_procedimento_p	=> vl_coseguro_proc_w, vl_custo_operacional_p	=> vl_custo_operacional_cos_w, vl_medico_p		=> vl_medico_coseguro_w, vl_materiais_p		=> vl_materiais_coseguro_w, vl_anestesista_p	=> vl_anestesista_coseguro_w, vl_auxiliares_p		=> vl_auxiliares_coseguro_w, ds_observacao_p		=> ds_observacao_s
				);

				-- Gerar a informacao dos valores calculados para a conta destino
				select	max(nr_interno_conta)
				into STRICT	nr_conta_destino_w
				from	procedimento_paciente
				where	nr_sequencia = nr_seq_proc_out;

				update	procedimento_paciente
				set	ie_valor_informado = 'S'
				where	nr_sequencia = nr_seq_proc_out;

				select	coalesce(max(nr_sequencia), 0) + 1
				into STRICT	nr_seq_propaci_valor_w
				from	proc_paciente_valor
				where	nr_seq_procedimento = nr_seq_proc_out;

				insert into proc_paciente_valor(
					nr_sequencia,
					nr_seq_procedimento,
					ie_tipo_valor,
					dt_atualizacao,
					nm_usuario,
					vl_procedimento,
					vl_medico,
					vl_anestesista,
					vl_materiais,
					vl_auxiliares,
					vl_custo_operacional,
					cd_convenio,
					cd_categoria,
					pr_valor,
					nr_seq_trans_fin,
					nr_lote_contabil,
					nr_seq_desconto,
					qt_pontos
				) values (
					nr_seq_propaci_valor_w,
					nr_seq_proc_out,
					ie_tipo_valor_s,
					clock_timestamp(),
					nm_usuario_p,
					vl_coseguro_proc_w,
					vl_medico_coseguro_w,
					vl_anestesista_coseguro_w,
					vl_materiais_coseguro_w,
					vl_auxiliares_coseguro_w,
					vl_custo_operacional_cos_w,
					cd_convenio_w,
					cd_categoria_w,
					pr_coseguro_hosp_w,
					null,
					null,
					null,
					null
				);

				CALL generate_proc_participant(
					nr_seq_proc_origem_p	=> nr_seq_procedimento_w,
					nr_seq_proc_destino_p	=> nr_seq_proc_out,
					nm_usuario_p		=> nm_usuario_p
				);

				select	nextval('conta_pac_ded_conv_item_seq')
				into STRICT	nr_seq_conpaci_ci_w
				;

				insert into conta_pac_ded_conv_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_deducao_conv,
					nr_seq_propaci_origem,
					nr_seq_matpaci_origem,
					nr_seq_propaci_dest,
					nr_seq_matpaci_dest,
					vl_rateio,
					nr_seq_propaci_valor_ant,
					nr_seq_mat_atend_pac_valor,
					nr_lote_contabil,
					vl_rateio_com_imp,
					vl_rateio_sem_imp
				) values (
					nr_seq_conpaci_ci_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_conta_pac_dc_w,
					nr_seq_procedimento_w,
					null,
					nr_seq_proc_out,
					null,
					null,
					null,
					null,
					null,
					null,
					null
				);
				end;
			end loop;
			close c01;
		end if;
		-- I - Cosseguro Hospital aplicado a itens especificos
		if (ie_tipo_calculo_w = 'I') then
			open c02;
			loop
				fetch  c02 into
					pr_informado_calculo_w,
					vl_informado_calculo_w,
					nr_seq_procedimento_w,
					cd_procedimento_w,
					qt_procedimento_w,
					ie_origem_proced_w,
					cd_setor_atendimento_w,
					nr_seq_atepacu_w,
					vl_procedimento_w,
					vl_medico_w,
					vl_anestesista_w,
					vl_materiais_w,
					vl_auxiliares_w,
					vl_custo_operacional_w,
					cd_medico_req_w,
					cd_medico_executor_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				
					if (ie_zerar_pr_coseguro_w = 'S') then
						pr_coseguro_hosp_w := 0;
					end if;
					
					vl_medico_coseguro_w := 0;
					vl_medico_final_w := 0;
					
					vl_anestesista_coseguro_w := 0;
					vl_anestesista_final_w := 0;
					
					vl_materiais_coseguro_w := 0;
					vl_materiais_final_w := 0;
					
					vl_auxiliares_coseguro_w := 0;
					vl_auxiliares_final_w := 0;
					
					vl_custo_operacional_cos_w := 0;
					vl_custo_operacional_fin_w := 0;
					
					-- Gerar a informacao dos valores originais antes de alteracao
					select  coalesce(max(nr_sequencia), 0) + 1
					into STRICT    nr_seq_propaci_valor_w
					from    proc_paciente_valor
					where   nr_seq_procedimento = nr_seq_procedimento_w;

					insert into proc_paciente_valor(
						nr_sequencia,
						nr_seq_procedimento,
						ie_tipo_valor,
						dt_atualizacao,
						nm_usuario,
						vl_procedimento,
						vl_medico,
						vl_anestesista,
						vl_materiais,
						vl_auxiliares,
						vl_custo_operacional,
						cd_convenio,
						cd_categoria,
						pr_valor,
						nr_seq_trans_fin,
						nr_lote_contabil,
						nr_seq_desconto,
						qt_pontos
					) values (
						nr_seq_propaci_valor_w,
						nr_seq_procedimento_w,
						ie_tipo_valor_s,
						clock_timestamp(),
						nm_usuario_p,
						vl_procedimento_w,
						vl_medico_w,
						vl_anestesista_w,
						vl_materiais_w,
						vl_auxiliares_w,
						vl_custo_operacional_w,
						cd_convenio_w,
						cd_categoria_w,
						pr_coseguro_hosp_w,
						null,
						null,
						null,
						null
					);

					if (coalesce(pr_informado_calculo_w,0) > 0) then
						-- Alteracao e gravacao de dados novos
						vl_coseguro_proc_w := vl_procedimento_w * pr_informado_calculo_w/100;
						vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;
					else
						vl_coseguro_proc_w := vl_informado_calculo_w;
						vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;
					end if;

					if (ie_reduzir_valor_original_w = 'S') then
						begin
						vl_procedimento_final_w := vl_procedimento_w - vl_coseguro_proc_w;
						
						-- Se nao tem coeficiente procura
						if (coalesce(pr_coseguro_hosp_w,0) = 0) then
							pr_coseguro_hosp_w := round((vl_coseguro_proc_w * 100) / vl_procedimento_w, 2);
							ie_zerar_pr_coseguro_w := 'S';
						end if;
						
						if (vl_medico_w > 0) then
							vl_medico_coseguro_w := round((vl_medico_w * pr_coseguro_hosp_w / 100)::numeric, 2);
							vl_medico_final_w := vl_medico_w - vl_medico_coseguro_w;
						end if;
						
						if (vl_anestesista_w > 0) then
							vl_anestesista_coseguro_w := round((vl_anestesista_w * pr_coseguro_hosp_w / 100)::numeric, 2);
							vl_anestesista_final_w := vl_anestesista_w - vl_anestesista_coseguro_w;
						end if;
						
						if (vl_materiais_w > 0) then
							vl_materiais_coseguro_w := round((vl_materiais_w * pr_coseguro_hosp_w / 100)::numeric, 2);
							vl_materiais_final_w := vl_materiais_w - vl_materiais_coseguro_w;
						end if;
						
						if (vl_auxiliares_w > 0) then
							vl_auxiliares_coseguro_w := round((vl_auxiliares_w * pr_coseguro_hosp_w / 100)::numeric, 2);
							vl_auxiliares_final_w := vl_auxiliares_w - vl_auxiliares_coseguro_w;
						end if;
						
						if (vl_custo_operacional_w > 0) then
							vl_custo_operacional_cos_w := round((vl_custo_operacional_w * pr_coseguro_hosp_w / 100)::numeric, 2);
							vl_custo_operacional_fin_w := vl_custo_operacional_w - vl_custo_operacional_cos_w;
						end if;
						end;
					else
						vl_procedimento_final_w := vl_procedimento_w;
					end if;

					update  conta_pac_deducao_proc
					set     vl_calculado = vl_procedimento_final_w,
						vl_base_procedimento = vl_procedimento_w
					where   nr_seq_conta_ded = nr_seq_conta_pac_dc_w and nr_seq_proc_pac = nr_seq_procedimento_w;

					update  procedimento_paciente
					set     vl_medico = vl_medico_final_w,
						vl_anestesista = vl_anestesista_final_w,
						vl_materiais = vl_materiais_final_w,
						vl_auxiliares = vl_auxiliares_final_w,
						vl_custo_operacional = vl_custo_operacional_fin_w,
						vl_procedimento = vl_procedimento_final_w,
						ie_valor_informado = 'S'
					where   nr_sequencia = nr_seq_procedimento_w;

					nr_sequencia_p		=> nr_seq_proc_out := inserir_procedimento_paciente(
						cd_procedimento_p	=> cd_procedimento_w, qt_procedimento_p	=> qt_procedimento_w, nr_seq_exame_p		=> null, nr_seq_proc_interno_p	=> null, ie_origem_proced_p	=> ie_origem_proced_w, cd_setor_atendimento_p	=> cd_setor_atendimento_w, nr_atendimento_p	=> nr_atendimento_w, cd_estabelecimento_p	=> cd_estabelecimento_w, nm_usuario_p		=> nm_usuario_p, ie_tipo_baixa_p		=> null, ie_valor_informado_p	=> ie_valor_informado_s, cd_medico_p		=> null, nr_seq_atepacu_p	=> nr_seq_atepacu_w, dt_procedimento_p	=> clock_timestamp(), cd_convenio_p		=> cd_convenio_w, cd_categoria_p		=> cd_categoria_w, nr_sequencia_p		=> nr_seq_proc_out, cd_medico_req_p		=> cd_medico_req_w, cd_medico_executor_p	=> cd_medico_executor_w, vl_procedimento_p	=> vl_coseguro_proc_w, vl_custo_operacional_p	=> vl_custo_operacional_cos_w, vl_medico_p		=> vl_medico_coseguro_w, vl_materiais_p		=> vl_materiais_coseguro_w, vl_anestesista_p	=> vl_anestesista_coseguro_w, vl_auxiliares_p		=> vl_auxiliares_coseguro_w, ds_observacao_p		=> ds_observacao_s
					);

					-- Gerar a informacao dos valores calculados para a conta destino
					select  max(nr_interno_conta)
					into STRICT    nr_conta_destino_w
					from    procedimento_paciente
					where   nr_sequencia = nr_seq_proc_out;

					update  procedimento_paciente
					set     ie_valor_informado = 'S'
					where   nr_sequencia = nr_seq_proc_out;

					select  coalesce(max(nr_sequencia), 0) + 1
					into STRICT    nr_seq_propaci_valor_w
					from    proc_paciente_valor
					where   nr_seq_procedimento = nr_seq_proc_out;

					insert into proc_paciente_valor(
						nr_sequencia,
						nr_seq_procedimento,
						ie_tipo_valor,
						dt_atualizacao,
						nm_usuario,
						vl_procedimento,
						vl_medico,
						vl_anestesista,
						vl_materiais,
						vl_auxiliares,
						vl_custo_operacional,
						cd_convenio,
						cd_categoria,
						pr_valor,
						nr_seq_trans_fin,
						nr_lote_contabil,
						nr_seq_desconto,
						qt_pontos
					) values (
						nr_seq_propaci_valor_w,
						nr_seq_proc_out,
						ie_tipo_valor_s,
						clock_timestamp(),
						nm_usuario_p,
						vl_coseguro_proc_w,
						vl_medico_coseguro_w,
						vl_anestesista_coseguro_w,
						vl_materiais_coseguro_w,
						vl_auxiliares_coseguro_w,
						vl_custo_operacional_cos_w,
						cd_convenio_w,
						cd_categoria_w,
						pr_coseguro_hosp_w,
						null,
						null,
						null,
						null
					);

					CALL generate_proc_participant(
						nr_seq_proc_origem_p	=> nr_seq_procedimento_w,
						nr_seq_proc_destino_p	=> nr_seq_proc_out,
						nm_usuario_p		=> nm_usuario_p
					);

					select  nextval('conta_pac_ded_conv_item_seq')
					into STRICT    nr_seq_conpaci_ci_w
					;

					insert into conta_pac_ded_conv_item(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_deducao_conv,
						nr_seq_propaci_origem,
						nr_seq_matpaci_origem,
						nr_seq_propaci_dest,
						nr_seq_matpaci_dest,
						vl_rateio,
						nr_seq_propaci_valor_ant,
						nr_seq_mat_atend_pac_valor,
						nr_lote_contabil,
						vl_rateio_com_imp,
						vl_rateio_sem_imp
					) values (
						nr_seq_conpaci_ci_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_conta_pac_dc_w,
						nr_seq_procedimento_w,
						null,
						nr_seq_proc_out,
						null,
						null,
						null,
						null,
						null,
						null,
						null
					);
				end;
			end loop;
			close c02;

			open c03;
			loop
				fetch  c03 into
					pr_informado_calculo_w,
					vl_informado_calculo_w,
					nr_seq_material_w,
					cd_material_w,
					dt_atendimento_w,
					nr_atendimento_w,
					cd_setor_atendimento_w,
					nr_seq_atepacu_w,
					dt_entrada_unidade_w,
					cd_unidade_medida_w,
					cd_acao_w,
					vl_material_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
				begin
					select  coalesce(max(nr_sequencia), 0) + 1
					into STRICT    nr_seq_matpaci_valor_w
					from    mat_atend_paciente_valor
					where   nr_seq_material = nr_seq_material_w;

					insert into mat_atend_paciente_valor(
						nr_sequencia,
						nr_seq_material,
						ie_tipo_valor,
						dt_atualizacao,
						nm_usuario,
						vl_material,
						cd_convenio,
						cd_categoria,
						pr_valor,
						nr_seq_trans_fin,
						nr_lote_contabil,
						nr_seq_desconto,
						nr_codigo_controle
					) values (
						nr_seq_matpaci_valor_w,
						nr_seq_material_w,
						ie_tipo_valor_s,
						clock_timestamp(),
						nm_usuario_p,
						vl_material_w,
						cd_convenio_w,
						cd_categoria_w,
						pr_informado_calculo_w,
						null,
						null,
						null,
						null
					);

					if (coalesce(pr_informado_calculo_w,0) > 0) then
						vl_coseguro_proc_w := vl_material_w * pr_informado_calculo_w/100;
						vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;
					else
						vl_coseguro_proc_w := vl_informado_calculo_w;
						vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;
					end if;

					if (ie_reduzir_valor_original_w = 'S') then
						vl_procedimento_final_w := vl_material_w - vl_coseguro_proc_w;
					else
						vl_procedimento_final_w := vl_material_w;
					end if;

					update  conta_pac_deducao_mat
					set     vl_calculado = vl_procedimento_final_w,
							vl_base_material = vl_material_w
					where   nr_seq_conta_ded = nr_seq_conta_pac_dc_w and nr_seq_mat_pac = nr_seq_material_w;

					update  material_atend_paciente
					set     vl_material = vl_procedimento_final_w,
							ie_valor_informado = 'S'
					where   nr_sequencia = nr_seq_material_w;

					select  nextval('material_atend_paciente_seq')
					into STRICT    nr_seq_material_novo_w
					;

					CALL inserir_material_ate_pac(
						null,
						null,
						cd_material_w,
						null,
						null,
						null,
						1,
						null,
						dt_atendimento_w,
						cd_unidade_medida_w,
						null,
						null,
						cd_convenio_w,
						cd_categoria_w,
						null,
						cd_setor_atendimento_w,
						nr_seq_atepacu_w,
						dt_entrada_unidade_w,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nr_seq_material_novo_w,
						nr_atendimento_w,
						null,
						null,
						null,
						cd_acao_w,
						vl_coseguro_proc_w,
						null,
						'S',
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						null
					);

					update  material_atend_paciente
					set     vl_material = vl_coseguro_proc_w,
							ie_valor_informado = 'S'
					where   nr_sequencia = nr_seq_material_novo_w;

					select  max(nr_interno_conta)
					into STRICT    nr_conta_destino_w
					from    material_atend_paciente
					where   nr_sequencia = nr_seq_material_novo_w;

					select  coalesce(max(nr_sequencia), 0) + 1
					into STRICT    nr_seq_matpaci_valor_w
					from    mat_atend_paciente_valor
					where   nr_seq_material = nr_seq_material_novo_w;

					insert into mat_atend_paciente_valor(
						nr_seq_material,
						nr_sequencia,
						ie_tipo_valor,
						vl_material,
						cd_convenio,
						cd_categoria,
						pr_valor,
						dt_atualizacao,
						nm_usuario,
						nr_seq_trans_fin,
						nr_lote_contabil,
						nr_seq_desconto,
						nr_codigo_controle
					) values (
						nr_seq_material_novo_w,
						nr_seq_matpaci_valor_w,
						ie_tipo_valor_s,
						vl_coseguro_proc_w,
						cd_convenio_w,
						cd_categoria_w,
						pr_coseguro_hosp_w,
						clock_timestamp(),
						nm_usuario_p,
						null,
						null,
						null,
						null
					);

					select  nextval('conta_pac_ded_conv_item_seq')
					into STRICT    nr_seq_conpaci_ci_w
					;

					insert into conta_pac_ded_conv_item(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_deducao_conv,
						nr_seq_propaci_origem,
						nr_seq_matpaci_origem,
						nr_seq_propaci_dest,
						nr_seq_matpaci_dest,
						vl_rateio,
						nr_seq_propaci_valor_ant,
						nr_seq_mat_atend_pac_valor,
						nr_lote_contabil,
						vl_rateio_com_imp,
						vl_rateio_sem_imp
					) values (
						nr_seq_conpaci_ci_w,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_conta_pac_dc_w,
						null,
						nr_seq_material_w,
						null,
						nr_seq_material_novo_w,
						null,
						null,
						null,
						null,
						null,
						null
					);
				end;
			end loop;
			close c03;
		end if;

		-- UPDATE geral para casos de COSEGURO
		update	conta_pac_deducao_conv
		set	nr_seq_conta_des = nr_conta_destino_w,
			vl_calculado = vl_coseguro_sum_w,
			dt_processamento = clock_timestamp(),
			ie_coseguro = 'S',
			ie_copago = 'N'
		where	nr_sequencia = nr_seq_conta_pac_dc_w
		and 	nr_conta_destino_w > 0;

	end if;
	------------------------------------------------------
	-- COPAGO
	------------------------------------------------------
	if (ie_copago_p = 'S') then

		select	count(*),
			max(nr_sequencia)
		into STRICT	qt_registros_conv_ded_w,
			nr_seq_conta_pac_ded_conv_w
		from	conta_pac_deducao_conv
		where	nr_seq_conta_orig = nr_interno_conta_p
		and (ie_copago = 'S');

		if (qt_registros_conv_ded_w > 0) then
			select	coalesce(cd_convenio,cd_convenio_partic_w),
				coalesce(cd_categoria,cd_categoria_partic_w)
			into STRICT	cd_convenio_w,
				cd_categoria_w
			from	conta_pac_deducao_conv
			where	nr_seq_conta_orig = nr_interno_conta_p
			order by nr_sequencia desc LIMIT 1;
		else
			cd_convenio_w := cd_convenio_partic_w;
			cd_categoria_w := cd_categoria_partic_w;
		end if;

		--
		-- PROCEDIMENTOS
		-- Rotina deve recalcular so os que estao em conta vinculada aberta 
		--
		open c04;
		loop
		fetch c04 into
			c04_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */
			begin
			vl_medico_coseguro_w := 0;
			vl_medico_final_w := 0;
			
			vl_anestesista_coseguro_w := 0;
			vl_anestesista_final_w := 0;
			
			vl_materiais_coseguro_w := 0;
			vl_materiais_final_w := 0;
			
			vl_auxiliares_coseguro_w := 0;
			vl_auxiliares_final_w := 0;
			
			vl_custo_operacional_cos_w := 0;
			vl_custo_operacional_fin_w := 0;

			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_propaci_valor_w
			from	proc_paciente_valor
			where	nr_seq_procedimento = c04_w.nr_sequencia;

			insert into proc_paciente_valor(
				nr_sequencia,
				nr_seq_procedimento,
				ie_tipo_valor,
				dt_atualizacao,
				nm_usuario,
				vl_procedimento,
				vl_medico,
				vl_anestesista,
				vl_materiais,
				vl_auxiliares,
				vl_custo_operacional,
				cd_convenio,
				cd_categoria,
				pr_valor,
				nr_seq_trans_fin,
				nr_lote_contabil,
				nr_seq_desconto,
				qt_pontos
			) values (
				nr_seq_propaci_valor_w,
				c04_w.nr_sequencia,
				ie_tipo_valor_s,
				clock_timestamp(),
				nm_usuario_p,
				c04_w.vl_procedimento_proc,
				c04_w.vl_medico,
				c04_w.vl_anestesista,
				c04_w.vl_materiais,
				c04_w.vl_auxiliares,
				c04_w.vl_custo_operacional,
				c04_w.cd_convenio_fixo,
				c04_w.cd_categoria_fixo,
				0,
				null,
				null,
				null,
				null
			);

			if ((c04_w.ie_glosa = 'A' OR c04_w.ie_glosa = 'C') AND coalesce(c04_w.pr_fixo,0) > 0) then
				vl_coseguro_proc_w := c04_w.vl_procedimento_proc * c04_w.pr_fixo/100;
				vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;

				if (c04_w.ie_glosa = 'C') then
					begin
					vl_procedimento_final_w := c04_w.vl_procedimento_proc - vl_coseguro_proc_w;
					
					if (c04_w.vl_medico > 0) then
						vl_medico_coseguro_w := round((c04_w.vl_medico * c04_w.pr_fixo / 100)::numeric, 2);
						vl_medico_final_w := c04_w.vl_medico - vl_medico_coseguro_w;
					end if;
					
					if (c04_w.vl_anestesista > 0) then
						vl_anestesista_coseguro_w := round((c04_w.vl_anestesista * c04_w.pr_fixo / 100)::numeric, 2);
						vl_anestesista_final_w := c04_w.vl_anestesista - vl_anestesista_coseguro_w;
					end if;
					
					if (c04_w.vl_materiais > 0) then
						vl_materiais_coseguro_w := round((c04_w.vl_materiais * c04_w.pr_fixo / 100)::numeric, 2);
						vl_materiais_final_w := c04_w.vl_materiais - vl_materiais_coseguro_w;
					end if;
					
					if (c04_w.vl_auxiliares > 0) then
						vl_auxiliares_coseguro_w := round((c04_w.vl_auxiliares * c04_w.pr_fixo / 100)::numeric, 2);
						vl_auxiliares_final_w := c04_w.vl_auxiliares - vl_auxiliares_coseguro_w;
					end if;
					
					if (c04_w.vl_custo_operacional > 0) then
						vl_custo_operacional_cos_w := round((c04_w.vl_custo_operacional * c04_w.pr_fixo / 100)::numeric, 2);
						vl_custo_operacional_fin_w := c04_w.vl_custo_operacional - vl_custo_operacional_cos_w;
					end if;
					end;
				else
					vl_procedimento_final_w := c04_w.vl_procedimento_proc;
				end if;
			elsif ((c04_w.ie_glosa = 'B' OR c04_w.ie_glosa = 'D') AND coalesce(c04_w.vl_fixo,0) > 0) then
				vl_coseguro_proc_w := c04_w.vl_fixo;
				vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;

				if (c04_w.ie_glosa = 'D') then
					begin
					vl_procedimento_final_w := c04_w.vl_procedimento_proc - vl_coseguro_proc_w;
					
					-- Se nao tem coeficiente procura
					if (coalesce(c04_w.pr_fixo,0) = 0) then
						c04_w.pr_fixo := round((vl_coseguro_proc_w * 100) / c04_w.vl_procedimento_proc, 2);
					end if;
					
					if (c04_w.vl_medico > 0) then
						vl_medico_coseguro_w := round((c04_w.vl_medico * c04_w.pr_fixo / 100)::numeric, 2);
						vl_medico_final_w := c04_w.vl_medico - vl_medico_coseguro_w;
					end if;
					
					if (c04_w.vl_anestesista > 0) then
						vl_anestesista_coseguro_w := round((c04_w.vl_anestesista * c04_w.pr_fixo / 100)::numeric, 2);
						vl_anestesista_final_w := c04_w.vl_anestesista - vl_anestesista_coseguro_w;
					end if;
					
					if (c04_w.vl_materiais > 0) then
						vl_materiais_coseguro_w := round((c04_w.vl_materiais * c04_w.pr_fixo / 100)::numeric, 2);
						vl_materiais_final_w := c04_w.vl_materiais - vl_materiais_coseguro_w;
					end if;
					
					if (c04_w.vl_auxiliares > 0) then
						vl_auxiliares_coseguro_w := round((c04_w.vl_auxiliares * c04_w.pr_fixo / 100)::numeric, 2);
						vl_auxiliares_final_w := c04_w.vl_auxiliares - vl_auxiliares_coseguro_w;
					end if;
					
					if (c04_w.vl_custo_operacional > 0) then
						vl_custo_operacional_cos_w := round((c04_w.vl_custo_operacional * c04_w.pr_fixo / 100)::numeric, 2);
						vl_custo_operacional_fin_w := c04_w.vl_custo_operacional - vl_custo_operacional_cos_w;
					end if;
					end;
				else
					vl_procedimento_final_w := c04_w.vl_procedimento_proc;
				end if;
			elsif (c04_w.ie_glosa = 'E') then
				select	a.dt_alta,
					a.ie_tipo_atendimento,
					campo_numerico(obter_idade_pf(a.cd_pessoa_fisica, c04_w.dt_procedimento, 'A')) qt_idade,
					coalesce(obter_dado_atend_cat_conv(nr_atendimento_w, c04_w.dt_conta, c04_w.cd_convenio_fixo, c04_w.cd_categoria_fixo, 'U'), obter_dado_atend_conv(nr_atendimento_w, c04_w.dt_conta, c04_w.cd_convenio_fixo, 'U')),
					coalesce(obter_dado_atend_cat_conv(nr_atendimento_w, c04_w.dt_conta, c04_w.cd_convenio_fixo, c04_w.cd_categoria_fixo, 'P'), obter_dado_atend_conv(nr_atendimento_w, c04_w.dt_conta, c04_w.cd_convenio_fixo, 'P')),
					a.ie_clinica,
					coalesce(obter_dado_atend_cat_conv(nr_atendimento_w, c04_w.dt_conta, c04_w.cd_convenio_fixo, c04_w.cd_categoria_fixo, 'E'), obter_dado_atend_conv(nr_atendimento_w, c04_w.dt_conta, c04_w.cd_convenio_fixo, 'E')),
					b.ie_sexo,
					CASE WHEN coalesce(a.nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END  ie_atend_retorno,
					trunc(coalesce(a.dt_alta, clock_timestamp()) - a.dt_entrada) qt_dias_internacao,
					a.nr_seq_tipo_acidente,
					a.cd_procedencia,
					(obter_dados_categ_conv(nr_atendimento_w, 'COB'))::numeric ,
					a.nr_seq_classificacao,
					a.ie_carater_inter_sus,
					(obter_dados_categ_conv(nr_atendimento_w, 'DEP'))::numeric ,
					(obter_dados_categ_conv(nr_atendimento_w, 'OC'))::numeric
				into STRICT	dt_alta_preco_w,
					ie_tipo_atendimento_w,
					qt_idade_w,
					cd_usuario_convenio_w,
					cd_plano_w,
					ie_clinica_w,
					cd_empresa_ref_w,
					ie_sexo_w,
					ie_atend_retorno_w,
					qt_dias_internacao_w,
					nr_seq_tipo_acidente_w,
					cd_procedencia_w,
					nr_seq_cobertura_w,
					nr_seq_classif_atend_w,
					ie_carater_inter_sus_w,
					cd_dependente_w,
					nr_seq_origem_w
				from 	atendimento_paciente a,
					pessoa_fisica b
				where	nr_atendimento = nr_atendimento_w
				and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

				select	max(dt_entrada)
				into STRICT	dt_entrada_w
				from	atendimento_paciente
				where	nr_atendimento = nr_atendimento_w;

				select	max(CASE WHEN ie_status_acerto=1 THEN coalesce(dt_conta_definitiva,clock_timestamp())  ELSE coalesce(dt_conta_definitiva,c04_w.dt_conta) END ),
					max(dt_periodo_inicial),
					max(dt_periodo_final)
				into STRICT	dt_conta_definitiva_w,
					dt_periodo_inicial_w,
					dt_periodo_final_w
				from	conta_paciente
				where	nr_interno_conta = nr_interno_conta_p;

				select	obter_regra_data_preco('P',c04_w.cd_convenio_fixo, dt_entrada_w, c04_w.dt_conta, dt_alta_preco_w, dt_conta_definitiva_w, c04_w.dt_conta, dt_periodo_inicial_w, dt_periodo_final_w)
				into STRICT	dt_preco_w
				;

				begin
					select	obter_tipo_acomod_proc(nr_atendimento_w,c04_w.nr_sequencia)
					into STRICT	cd_tipo_acomodacao_w
					;
				exception
					when others then
					cd_tipo_acomodacao_w := 0;
				end;

				begin
					select	nr_seq_classif_medico
					into STRICT	nr_seq_classif_medico_w
					from	atendimento_paciente
					where	nr_atendimento  = nr_atendimento_w;
				exception
					when others then
					nr_seq_classif_medico_w := null;
				end;

				select	coalesce(max(ie_data_proc_dias_int),'N')
				into STRICT	ie_data_proc_dias_int_w
				from	parametro_faturamento
				where	cd_estabelecimento = cd_estabelecimento_w;

				if (ie_data_proc_dias_int_w = 'S') then
					qt_dias_internacao_w := (c04_w.dt_procedimento - dt_entrada_w);
				end if;

				if (coalesce(c04_w.nr_prescricao,0) > 0)  and (coalesce(c04_w.nr_sequencia_prescricao,0) > 0) then
					ie_executar_leito_w := consiste_se_beira_leito(c04_w.nr_prescricao, c04_w.nr_sequencia_prescricao, nm_usuario_p, ie_executar_leito_w);
				end if;

				select	obter_grupo_receita(
					cd_estabelecimento_w,
					null,
					c04_w.cd_procedimento,
					c04_w.ie_origem_proced,
					ie_tipo_atendimento_w,
					c04_w.cd_setor_atendimento)
				into STRICT	nr_seq_grupo_rec_w
				;

				SELECT * FROM define_preco_procedimento(
					cd_estabelecimento_w, c04_w.cd_convenio_fixo, c04_w.cd_categoria_fixo, dt_preco_w, c04_w.cd_procedimento, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, c04_w.cd_setor_atendimento, c04_w.cd_medico_executor, null, qt_idade_w, c04_w.nr_seq_exame, c04_w.nr_seq_proc_interno, cd_usuario_convenio_w, cd_plano_w, ie_clinica_w, cd_empresa_ref_w, ie_sexo_w, vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w, c04_w.nr_sequencia, ie_atend_retorno_w, qt_dias_internacao_w, c04_w.ie_video, coalesce(ie_executar_leito_w,'A'), c04_w.ie_spect, c04_w.cd_cgc_prestador, c04_w.cd_equipamento, nr_seq_tipo_acidente_w, c04_w.cd_especialidade, cd_procedencia_w, nr_seq_cobertura_w, nr_seq_classif_atend_w, ie_carater_inter_sus_w, cd_dependente_w, nr_seq_grupo_rec_w, c04_w.ie_origem_proced, nr_seq_origem_w, nr_seq_classif_medico_w, null) INTO STRICT vl_procedimento_w, vl_custo_operacional_w, vl_anestesista_w, vl_medico_w, vl_auxiliares_w, vl_materiais_w, vl_pto_procedimento_w, vl_pto_custo_operac_w, vl_pto_anestesista_w, vl_pto_medico_w, vl_pto_auxiliares_w, vl_pto_materiais_w, qt_porte_anestesico_w, qt_pontos_w, cd_edicao_amb_w, ie_preco_informado_w, nr_seq_ajuste_proc_def_w;

				vl_coseguro_proc_w := vl_procedimento_w;
				vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;
				vl_procedimento_final_w := c04_w.vl_procedimento_proc;
			end if;

			update	procedimento_paciente
			set	vl_medico = vl_medico_final_w,
				vl_anestesista = vl_anestesista_final_w,
				vl_materiais = vl_materiais_final_w,
				vl_auxiliares = vl_auxiliares_final_w,
				vl_custo_operacional = vl_custo_operacional_fin_w,
				vl_procedimento = vl_procedimento_final_w,
				ie_valor_informado = 'S'
			where	nr_sequencia = c04_w.nr_sequencia;

			nr_sequencia_p		=> nr_seq_proc_out := inserir_procedimento_paciente(
				cd_procedimento_p	=> c04_w.cd_procedimento, qt_procedimento_p	=> c04_w.qt_procedimento, nr_seq_exame_p		=> null, nr_seq_proc_interno_p	=> null, ie_origem_proced_p	=> c04_w.ie_origem_proced, cd_setor_atendimento_p	=> c04_w.cd_setor_atendimento, nr_atendimento_p	=> nr_atendimento_w, cd_estabelecimento_p	=> cd_estabelecimento_w, nm_usuario_p		=> nm_usuario_p, ie_tipo_baixa_p		=> null, ie_valor_informado_p	=> ie_valor_informado_s, cd_medico_p		=> null, nr_seq_atepacu_p	=> c04_w.nr_seq_atepacu, dt_procedimento_p	=> clock_timestamp(), cd_convenio_p		=> c04_w.cd_convenio_fixo, cd_categoria_p		=> c04_w.cd_categoria_fixo, nr_sequencia_p		=> nr_seq_proc_out, cd_medico_req_p		=> c04_w.cd_medico_req, cd_medico_executor_p	=> c04_w.cd_medico_executor, vl_procedimento_p	=> vl_coseguro_proc_w, vl_custo_operacional_p	=> vl_custo_operacional_cos_w, vl_medico_p		=> vl_medico_coseguro_w, vl_materiais_p		=> vl_materiais_coseguro_w, vl_anestesista_p	=> vl_anestesista_coseguro_w, vl_auxiliares_p		=> vl_auxiliares_coseguro_w, ds_observacao_p		=> ds_observacao_s
			);

			update	conta_pac_ded_conv_item
			set 	nr_seq_propaci_dest = nr_seq_proc_out
			where 	nr_seq_deducao_conv = nr_seq_conta_pac_ded_conv_w
			and 	nr_seq_propaci_origem = c04_w.nr_sequencia;

			select	max(nr_interno_conta)
			into STRICT	nr_conta_destino_w
			from	procedimento_paciente
			where	nr_sequencia = nr_seq_proc_out;

			update	procedimento_paciente
			set	ie_valor_informado = 'S'
			where	nr_sequencia = nr_seq_proc_out;

			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_propaci_valor_w
			from	proc_paciente_valor
			where	nr_seq_procedimento = nr_seq_proc_out;

			insert into proc_paciente_valor(
				nr_sequencia,
				nr_seq_procedimento,
				ie_tipo_valor,
				dt_atualizacao,
				nm_usuario,
				vl_procedimento,
				vl_medico,
				vl_anestesista,
				vl_materiais,
				vl_auxiliares,
				vl_custo_operacional,
				cd_convenio,
				cd_categoria,
				pr_valor,
				nr_seq_trans_fin,
				nr_lote_contabil,
				nr_seq_desconto,
				qt_pontos
			) values (
				nr_seq_propaci_valor_w,
				nr_seq_proc_out,
				ie_tipo_valor_s,
				clock_timestamp(),
				nm_usuario_p,
				vl_coseguro_proc_w,
				vl_medico_coseguro_w,
				vl_anestesista_coseguro_w,
				vl_materiais_coseguro_w,
				vl_auxiliares_coseguro_w,
				vl_custo_operacional_cos_w,
				c04_w.cd_convenio_fixo,
				c04_w.cd_categoria_fixo,
				0,
				null,
				null,
				null,
				null
			);

			CALL generate_proc_participant(
				nr_seq_proc_origem_p	=> c04_w.nr_sequencia,
				nr_seq_proc_destino_p	=> nr_seq_proc_out,
				nm_usuario_p		=> nm_usuario_p
			);

			select	nextval('conta_pac_ded_conv_item_seq')
			into STRICT	nr_seq_conpaci_ci_w
			;

			end;
		end loop;
		close c04;

		--
		-- MATERIAIS
		--
		open c05;
		loop
		fetch c05 into
			c05_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			begin

			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_matpaci_valor_w
			from	mat_atend_paciente_valor
			where	nr_seq_material = c05_w.nr_sequencia;

			insert into mat_atend_paciente_valor(
				nr_sequencia,
				nr_seq_material,
				ie_tipo_valor,
				dt_atualizacao,
				nm_usuario,
				vl_material,
				cd_convenio,
				cd_categoria,
				pr_valor,
				nr_seq_trans_fin,
				nr_lote_contabil,
				nr_seq_desconto,
				nr_codigo_controle
			) values (
				nr_seq_matpaci_valor_w,
				c05_w.nr_sequencia,
				ie_tipo_valor_s,
				clock_timestamp(),
				nm_usuario_p,
				c05_w.vl_material,
				c05_w.cd_convenio_fixo,
				c05_w.cd_categoria_fixo,
				pr_informado_calculo_w,
				null,
				null,
				null,
				null
			);
			
			if ((c05_w.ie_glosa = 'A' OR c05_w.ie_glosa = 'C') AND coalesce(c05_w.pr_fixo,0) > 0) then
				vl_coseguro_proc_w := c05_w.vl_material * c05_w.pr_fixo/100;
				vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;

				if (c05_w.ie_glosa = 'C') then
					vl_procedimento_final_w := c05_w.vl_material - vl_coseguro_proc_w;
				else
					vl_procedimento_final_w := c05_w.vl_material;
				end if;
			elsif ((c05_w.ie_glosa = 'B' OR c05_w.ie_glosa = 'D') AND coalesce(c05_w.vl_fixo,0) > 0) then
				vl_coseguro_proc_w := c05_w.vl_fixo;
				vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;

				if (c05_w.ie_glosa = 'D') then
					vl_procedimento_final_w := c05_w.vl_material - vl_coseguro_proc_w;
				else
					vl_procedimento_final_w := c05_w.vl_material;
				end if;
			elsif (c05_w.ie_glosa = 'E') then
				select	coalesce(max(ie_regra_tipo_atend),'A')
				into STRICT	ie_regra_tipo_atend_w
				from	parametro_faturamento
				where	cd_estabelecimento	= cd_estabelecimento_w;

				select	a.dt_entrada,
					a.ie_tipo_atendimento,
					coalesce(trunc((dt_entrada - coalesce(dt_nascimento, a.dt_entrada)) / 365),0),
					a.dt_alta,
					a.nr_seq_classificacao
				into STRICT	dt_entrada_w,
					ie_tipo_atendimento_w,
					qt_idade_w,
					dt_alta_preco_w,
					nr_seq_classif_atend_w
				from	pessoa_fisica b,
					atendimento_paciente a
				where	a.nr_atendimento = nr_atendimento_w
				and  	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

				begin
					select	max(CASE WHEN ie_status_acerto=1 THEN coalesce(dt_conta_definitiva,clock_timestamp())  ELSE coalesce(dt_conta_definitiva,c05_w.dt_conta) END ),
						max(dt_periodo_inicial),
						max(dt_periodo_final)
					into STRICT	dt_conta_definitiva_w,
						dt_periodo_inicial_w,
						dt_periodo_final_w
					from	conta_paciente
					where	nr_interno_conta = nr_interno_conta_p;
				exception
					when others then
					dt_conta_definitiva_w	:= c05_w.dt_conta;
					dt_periodo_inicial_w	:= clock_timestamp();
					dt_periodo_final_w 	:= clock_timestamp();
				end;

				begin
					select	coalesce(cd_tipo_acomodacao,0),
						cd_plano_convenio
					into STRICT	cd_tipo_acomodacao_w,
						cd_plano_w
					from	atend_categoria_convenio_v
					where	nr_atendimento = nr_atendimento_w
					and	cd_convenio = c05_w.cd_convenio_fixo
					and	cd_categoria = c05_w.cd_categoria_fixo;
				exception
					when others then
					begin
						select	coalesce(cd_tipo_acomodacao,0),
							cd_plano_convenio
						into STRICT	cd_tipo_acomodacao_w,
							cd_plano_w
						from	atend_categoria_convenio_v
						where	nr_atendimento	= nr_atendimento_w
						and	cd_convenio	= c05_w.cd_convenio_fixo;
					exception
						when others then
						cd_tipo_acomodacao_w	:= 0;
						cd_plano_w		:= null;
					end;
				end;

				qt_preco_mat_w:= 0;

				select	coalesce(max(cd_tab_preco_mat),0)
				into STRICT	cd_tab_preco_mat_regra_w
				from	regra_data_preco_mat
				where	ie_situacao = 'A'
				and	cd_convenio = c05_w.cd_convenio_fixo
				and	cd_estabelecimento = cd_estabelecimento_w;

				if (cd_tab_preco_mat_regra_w > 0) then
					select 	count(*)
					into STRICT	qt_preco_mat_w
					from 	preco_material
					where 	cd_tab_preco_mat = cd_tab_preco_mat_regra_w
					and 	cd_estabelecimento = cd_estabelecimento_w
					and 	cd_material = c05_w.cd_material
					and	establishment_timezone_utils.startOfDay(c05_w.dt_conta)
						between coalesce(establishment_timezone_utils.startOfDay(dt_inicio_vigencia), clock_timestamp() - interval '3650 days') and coalesce(dt_final_vigencia, c05_w.dt_conta);
				end if;

				if (qt_preco_mat_w > 0) then
					dt_preco_w:= c05_w.dt_conta;
				else
					select	obter_regra_data_preco('M',c05_w.cd_convenio_fixo,
						dt_entrada_w,
						c05_w.dt_conta,
						dt_alta_preco_w,
						dt_conta_definitiva_w,
						null,
						dt_periodo_inicial_w,
						dt_periodo_final_w)
					into STRICT	dt_preco_w
					;
				end if;

				if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
					begin
						select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_w)
						into STRICT	ie_tipo_atendimento_w
						from	conta_paciente
						where	nr_interno_conta = nr_interno_conta_p;
					exception
						when others then
						ie_tipo_atendimento_w:= ie_tipo_atendimento_w;
					end;
				end if;

				select	max(cd_procedimento),
					max(ie_origem_proced)
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w
				from	procedimento_paciente
				where	nr_sequencia = c05_w.nr_seq_proc_princ;

				SELECT * FROM define_preco_material(
					cd_estabelecimento_w, c05_w.cd_convenio_fixo, c05_w.cd_categoria_fixo, dt_preco_w, c05_w.cd_material, cd_tipo_acomodacao_w, ie_tipo_atendimento_w, c05_w.cd_setor_atendimento, c05_w.cd_cgc_fornecedor, qt_idade_w, c05_w.nr_sequencia, cd_plano_w, cd_procedimento_w, ie_origem_proced_w, null, null, nr_seq_classif_atend_w, null, null, vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w) INTO STRICT vl_preco_material_w, dt_ult_vigencia_w, cd_tab_preco_mat_w, ie_origem_preco_w, nr_seq_bras_preco_w, nr_seq_mat_bras_w, nr_seq_conv_bras_w, nr_seq_conv_simpro_w, nr_seq_mat_simpro_w, nr_seq_simpro_preco_w, nr_seq_ajuste_mat_w;

				vl_coseguro_proc_w := vl_preco_material_w;
				vl_coseguro_sum_w := vl_coseguro_sum_w + vl_coseguro_proc_w;
				vl_procedimento_final_w := c05_w.vl_material;
			end if;

			update	material_atend_paciente
			set	vl_material = vl_procedimento_final_w,
				ie_valor_informado = 'S'
			where	nr_sequencia = c05_w.nr_sequencia;

			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_seq_material_novo_w
			;

			CALL inserir_material_ate_pac(
				null,
				null,
				c05_w.cd_material,
				null,
				null,
				null,
				1,
				null,
				c05_w.dt_atendimento,
				c05_w.cd_unidade_medida,
				null,
				null,
				c05_w.cd_convenio_fixo,
				c05_w.cd_categoria_fixo,
				null,
				c05_w.cd_setor_atendimento,
				c05_w.nr_seq_atepacu,
				c05_w.dt_entrada_unidade,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				nr_seq_material_novo_w,
				nr_atendimento_w,
				null,
				null,
				null,
				c05_w.cd_acao,
				vl_coseguro_proc_w,
				null,
				'S',
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				nm_usuario_p,
				null
			);

			update	conta_pac_ded_conv_item
			set 	nr_seq_matpaci_dest = nr_seq_material_novo_w
			where 	nr_seq_deducao_conv = nr_seq_conta_pac_ded_conv_w
			and 	nr_seq_matpaci_origem = c05_w.nr_sequencia;

			update	material_atend_paciente
			set	vl_material = vl_coseguro_proc_w,
				ie_valor_informado = 'S'
			where	nr_sequencia = nr_seq_material_novo_w;

			select	max(nr_interno_conta)
			into STRICT	nr_conta_destino_w
			from	material_atend_paciente
			where	nr_sequencia = nr_seq_material_novo_w;

			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_matpaci_valor_w
			from	mat_atend_paciente_valor
			where	nr_seq_material = nr_seq_material_novo_w;

			insert into mat_atend_paciente_valor(
				nr_seq_material,
				nr_sequencia,
				ie_tipo_valor,
				vl_material,
				cd_convenio,
				cd_categoria,
				pr_valor,
				dt_atualizacao,
				nm_usuario,
				nr_seq_trans_fin,
				nr_lote_contabil,
				nr_seq_desconto,
				nr_codigo_controle
			) values (
				nr_seq_material_novo_w,
				nr_seq_matpaci_valor_w,
				ie_tipo_valor_s,
				vl_coseguro_proc_w,
				c05_w.cd_convenio_fixo,
				c05_w.cd_categoria_fixo,
				0,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				null,
				null
			);
			end;
		end loop;
		close c05;

		-- Rotina deve atualizar so a conta que esta aberta 
		select	max(nr_sequencia)
		into STRICT	nr_seq_conta_pac_ded_conv_w
		from	conta_pac_deducao_conv
		where	nr_seq_conta_orig = nr_interno_conta_p
		and	ie_copago = 'S';

		if (nr_seq_conta_pac_ded_conv_w > 0) then
			if (nr_conta_destino_w > 0) then
				update	conta_pac_deducao_conv
				set	nr_seq_conta_des = nr_conta_destino_w,
					ie_copago = 'S',
					dt_processamento = clock_timestamp()
				where	nr_sequencia = nr_seq_conta_pac_ded_conv_w;
			else
				delete
				from	conta_pac_ded_conv_item
				where	nr_seq_deducao_conv = nr_seq_conta_pac_ded_conv_w;

				delete
				from	conta_pac_deducao_conv
				where	nr_sequencia = nr_seq_conta_pac_ded_conv_w
				and	coalesce(nr_seq_conta_des::text, '') = ''
				and	ie_copago = 'S';
			end if;
		end if;
	end if;

	update	conta_paciente
	set	nr_seq_categoria_iva = nr_seq_cat_iva_w
	where	nr_interno_conta = nr_conta_destino_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE processar_conta_arg ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p conta_pac_deducao_conv.nm_usuario%type, ie_copago_p conta_pac_deducao_conv.ie_copago%type default 'N', ie_restaurar_valores_p text default 'N') FROM PUBLIC;

