-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_sus_apac ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_atendimento_w		bigint;
ds_erro_w		varchar(2000);
ds_erro_proc_apac_w	varchar(1000);
nr_apac_w		bigint;
ie_tipo_apac_w		smallint;
cd_motivo_cobranca_w	smallint;
cd_motivo_cobr_ant_w	smallint;
qt_atendimento_apac_w	integer;
cd_proc_principal_w	bigint;
cd_proc_princ_ant_w	bigint;
nr_seq_geral_w		bigint;
nr_seq_apac_w		bigint;
cd_pessoa_fisica_ant_w	varchar(10);
dt_inicio_validade_w	timestamp;
dt_fim_validade_w		timestamp;
dt_inicio_validade_ant_w	timestamp;
dt_fim_validade_ant_w	timestamp;
dt_emissao_w		timestamp;
dt_entrada_w		timestamp;
dt_alta_w			timestamp;
dt_ocorrencia_w		timestamp;
dt_competencia_w		timestamp;
dt_competencia_ant_w	timestamp;
cd_estabelecimento_w	smallint;
dt_inicio_tratamento_w	timestamp;
dt_pri_tratamento_w	timestamp;
dt_seg_tratamento_w	timestamp;
dt_ter_tratamento_w	timestamp;
cd_pessoa_fisica_w	varchar(10);
nm_pessoa_fisica_w	varchar(60);
dt_nascimento_w		timestamp;
ie_sexo_w		varchar(1);
nr_cpf_w			varchar(11);
nr_cep_cidade_nasc_w	varchar(15);
cd_nacionalidade_w	varchar(8);
dt_obito_w		timestamp;
nr_cartao_nac_sus_w	varchar(20);
nm_contato_w		varchar(60);
ds_endereco_w		varchar(100);
cd_cep_w		varchar(15);
nr_endereco_w		integer;
ds_bairro_w		varchar(80);
ds_municipio_w		varchar(40);
sg_estado_w		compl_pessoa_fisica.sg_estado%type;
cd_municipio_ibge_w	varchar(6);
nm_mae_w		varchar(60);
cd_varia_atrib_w		varchar(2);
cd_cid_topografia_w	varchar(4);
cd_cid_morfologia_w	varchar(6);
ie_metastase_w		varchar(1);
ie_finalidade_w		varchar(1);
dt_diagnostico_w		timestamp;
cd_estagio_w		smallint;
cd_cid_pri_radiacao_w	varchar(4);
cd_cid_seg_radiacao_w	varchar(4);
cd_cid_ter_radiacao_w	varchar(4);
qt_campo_planejado_w	smallint;
qt_meses_prev_w		smallint;
cd_cid_principal_w		varchar(4);
cd_cid_secundario_w	varchar(4);
ie_indicado_tx_w		varchar(1);
ie_inscrito_tx_w		varchar(1);
dt_inscricao_tx_w		timestamp;
qt_tx_realizado_w		smallint;
dt_primeiro_tx_w		timestamp;
dt_segundo_tx_w		timestamp;
dt_terceiro_tx_w		timestamp;
qt_creatinina_w		real;
qt_ureia_pre_w		real;
qt_ureia_pos_w		real;
ie_hepatite_c_w		varchar(1);
ie_hbsag_w		varchar(1);
ie_hiv_w			varchar(1);
ie_hla_w			varchar(1);
ie_resultado_exame_w	smallint;
nr_aih_tx_w		bigint;
dt_transplante_w		timestamp;
cd_proc_tx_w		bigint;
cd_diretor_clinico_w	varchar(10);
cd_medico_auditor_w	varchar(10);
dt_competencia_apac_w	timestamp;
ie_sigla_apac_w		varchar(7);
nm_orgao_destino_apac_w	varchar(40);
ie_orgao_destino_apac_w	varchar(1);
cd_orgao_autoriz_apac_w	bigint;
cd_cpf_autoriz_apac_w	bigint;
cd_unidade_apac_w	varchar(7);
nr_apac_inicial_w		bigint;
nr_apac_final_w		bigint;
dt_final_periodo_apac_w	timestamp;
cd_tratamento_w		varchar(2);
cd_unidade_ibge_w	varchar(2);
ie_tipo_ups_w		varchar(2);
ie_tipo_prestador_w		varchar(2);
qt_idade_w		smallint;
ie_situacao_ups_w		varchar(1);
ie_sexo_cid_w		varchar(1);
qt_campos_radio_w		varchar(3);
ie_estadio_w		varchar(1);
ie_repete_radio_w		varchar(1);
ie_pula_morfologia_w	varchar(1);
ie_valida_cid_w		varchar(1);
cd_medico_resp_w		varchar(10);
nr_cpf_medico_resp_w	varchar(11);
cd_convenio_w		integer;
ie_tipo_atendimento_w	smallint;	
qt_campos_w		smallint;
qt_total_campos_w		smallint;
ie_cartao_correto_w	varchar(1);
ie_digito_apac_w		varchar(1);
qt_reg_w			bigint;
dt_competencia_prot_w	timestamp;
nr_interno_conta_w		bigint;
ie_origem_proced_w	bigint;
ie_estadiavel_w		varchar(1);
ie_apac_nao_conta_w	bigint;
ie_conta_nao_apac_w	bigint;
cd_categoria_cid_w	varchar(10);
qt_proced_zero_w		smallint;
qt_proced_comzero_w	smallint;
uf_nasc_w		valor_dominio.vl_dominio%type;
qt_apac_ini_duplic_w	smallint;
nr_interno_conta_ant_w	bigint;
nr_seq_protocolo_w	bigint;
qt_proc_princ_w		smallint	:= 0;
cd_mun_ibge_pf_w		varchar(6);
uf_ibge_pf_w		valor_dominio.vl_dominio%type;
ie_cidade_natal_w		varchar(1) := 'L';
cd_categoria_w		varchar(10);
nr_seq_classif_atend_w	atendimento_paciente.nr_seq_classificacao%type;


BEGIN 
ds_erro_w		:= null;
/* Obter dados da APAC */
 
select	 
	a.nr_apac, 
	a.nr_sequencia, 
	a.ie_tipo_apac, 
	a.dt_inicio_validade, 
	a.dt_fim_validade, 
	a.dt_emissao, 
	b.cd_estabelecimento, 
	b.dt_entrada, 
	b.dt_alta, 
	b.ie_tipo_atendimento, 
	a.dt_inicio_tratamento, 
	a.dt_pri_tratamento, 
	a.dt_seg_tratamento, 
	a.dt_ter_tratamento, 
	a.dt_competencia, 
	b.cd_pessoa_fisica, 
	a.cd_varia_atrib, 
	a.cd_cid_topografia, 
	a.cd_cid_morfologia, 
	a.ie_metastase, 
	a.ie_finalidade, 
	a.dt_diagnostico, 
	a.cd_estagio, 
	a.cd_cid_pri_radiacao, 
	a.cd_cid_seg_radiacao, 
	a.cd_cid_ter_radiacao, 
	a.qt_campo_planejado, 
	a.qt_meses_prev, 
	a.cd_cid_principal, 
	a.cd_cid_secundario, 
	a.ie_indicado_tx, 
	a.ie_inscrito_tx, 
	a.dt_inscricao_tx, 
	a.qt_tx_realizado, 
	a.dt_primeiro_tx, 
	a.dt_segundo_tx, 
	a.dt_terceiro_tx, 
	a.qt_creatinina, 
	a.qt_ureia_pre, 
	a.qt_ureia_pos, 
	a.ie_hepatite_c, 
	a.ie_hbsag, 
	a.ie_hiv, 
	a.ie_hla, 
	a.ie_resultado_exame, 
	a.nr_aih_tx, 
	a.dt_transplante, 
	a.cd_proc_tx, 
	a.cd_proc_principal, 
	a.ie_origem_proc_princ, 
	a.cd_motivo_cobranca, 
	a.cd_tratamento, 
	a.dt_ocorrencia, 
	a.cd_unidade, 
	a.cd_medico_resp, 
	obter_convenio_atendimento(a.nr_atendimento), 
	a.nr_interno_conta, 
	coalesce(a.nr_cartao_nac_sus,'0'), 
	b.nr_atendimento, 
	substr(obter_categoria_atendimento(a.nr_atendimento),1,10), 
	b.nr_seq_classificacao 
into STRICT	nr_apac_w, 
	nr_seq_apac_w, 
	ie_tipo_apac_w, 
	dt_inicio_validade_w, 
	dt_fim_validade_w, 
	dt_emissao_w, 
	cd_estabelecimento_w, 
	dt_entrada_w, 
	dt_alta_w, 
	ie_tipo_atendimento_w, 
	dt_inicio_tratamento_w, 
	dt_pri_tratamento_w, 
	dt_seg_tratamento_w, 
	dt_ter_tratamento_w, 
	dt_competencia_w, 
	cd_pessoa_fisica_w, 
	cd_varia_atrib_w, 
	cd_cid_topografia_w, 
	cd_cid_morfologia_w, 
	ie_metastase_w, 
	ie_finalidade_w, 
	dt_diagnostico_w, 
	cd_estagio_w, 
	cd_cid_pri_radiacao_w, 
	cd_cid_seg_radiacao_w, 
	cd_cid_ter_radiacao_w, 
	qt_campo_planejado_w, 
	qt_meses_prev_w, 
	cd_cid_principal_w, 
	cd_cid_secundario_w, 
	ie_indicado_tx_w, 
	ie_inscrito_tx_w, 
	dt_inscricao_tx_w, 
	qt_tx_realizado_w, 
	dt_primeiro_tx_w, 
	dt_segundo_tx_w, 
	dt_terceiro_tx_w, 
	qt_creatinina_w, 
	qt_ureia_pre_w, 
	qt_ureia_pos_w, 
	ie_hepatite_c_w, 
	ie_hbsag_w, 
	ie_hiv_w, 
	ie_hla_w, 
	ie_resultado_exame_w, 
	nr_aih_tx_w, 
	dt_transplante_w, 
	cd_proc_tx_w, 
	cd_proc_principal_w, 
	ie_origem_proced_w, 
	cd_motivo_cobranca_w, 
	cd_tratamento_w, 
	dt_ocorrencia_w, 
	cd_unidade_apac_w, 
	cd_medico_resp_w, 
	cd_convenio_w, 
	nr_interno_conta_w, 
	nr_cartao_nac_sus_w, 
	nr_atendimento_w, 
	cd_categoria_w, 
	nr_seq_classif_atend_w 
from	atendimento_paciente b, 
	sus_apac_movto a 
where	a.nr_sequencia	= nr_sequencia_p 
and	a.nr_atendimento	= b.nr_atendimento;
 
 
/* CONSISTENCIA COMENTADA PORQUE NÃO TEM TABELA S_UPS NOS HOSPITAIS*/
 
/* Obter dados da UPS */
 
/* 
begin 
select	cd_unidade_ibge, 
	ie_tipo_ups, 
	ie_tipo_prestador, 
	ie_situacao 
into	cd_unidade_ibge_w, 
	ie_tipo_ups_w, 
	ie_tipo_prestador_w, 
	ie_situacao_ups_w 
from	sus_s_ups 
where	cd_ups	= cd_unidade_apac_w; 
exception 
	when others then 
	begin 
	cd_unidade_ibge_w	:= null; 
	ie_tipo_ups_w	:= null; 
	ie_tipo_prestador_w	:= null; 
	end; 
end;*/
 
 
/*André OS72738 29/10/2007 
if	(cd_motivo_cobranca_w = 71) and 
	(trunc(dt_competencia_w,'month') = trunc(dt_fim_validade_w,'month')) then 
	ds_erro_w	:= ds_erro_w || '2206 '; 
end if; 
*/
 
 
/*Consiste se nos campos CID foi digitada a categoria no lugar do CID*/
 
/* Felipe - 24/09/2007 - OS69508, descomentei a linha do cid principal*/
 
/* Felipe - 11/10/2007 - OS71302, identificado que somente para os CID começado com C deve ser tratado por essa inconsistencia */
 
if	((length(cd_cid_principal_w) < 4) and (substr(cd_cid_principal_w,1,1) = 'C')) or 
	((length(cd_cid_topografia_w) < 4) and (substr(cd_cid_topografia_w,1,1) = 'C')) then 
	ds_erro_w	:= ds_erro_w || '2205 ';
end if;
/* 
if	(length(cd_cid_topografia_w) < 4) or 
	(length(cd_cid_morfologia_w) < 4) or 
	(length(cd_cid_pri_radiacao_w) < 4) or 
	(length(cd_cid_seg_radiacao_w) < 4) or 
	(length(cd_cid_ter_radiacao_w) < 4) or 
	(length(cd_cid_principal_w) < 4) or 
	(length(cd_cid_secundario_w) < 4) then 
	ds_erro_w	:= ds_erro_w || '2205 '; 
end if; 
*/
 
 
/* Erro UPS Não Cadastrada pela carga do DATASUS */
 
/* 
if	(cd_unidade_ibge_w is null) 	or 
	(ie_tipo_ups_w is null) 	or 
	(ie_tipo_prestador_w is null) 	then 
	ds_erro_w	:= ds_erro_w || '2052 '; 
end if; 
*/
 
/* Erro UPS Inativa */
 
/* 
if	(cd_unidade_ibge_w is not null) 	and 
	(ie_situacao_ups_w	<> 'A') 	then 
	ds_erro_w	:= ds_erro_w || '2076 '; 
end if; 
*/
 
 
if (dt_alta_w IS NOT NULL AND dt_alta_w::text <> '') and (cd_motivo_cobranca_w not in (22,23,31,32,34,35,36,37,41,44,52,58,71,72,73,74,75)) and (trunc(dt_alta_w,'month') < trunc(dt_competencia_w,'month')) then 
	ds_erro_w	:= ds_erro_w || '2180 ';
end if;
 
/* CONSISTENCIA COMENTADA PORQUE NÃO TEM ESTA TABELA S_UPS NOS HOSPITAIS*/
 
 
 
/* Obter dados do paciente */
 
select 	SUBSTR(OBTER_NOME_PF(a.CD_PESSOA_FISICA), 0, 60), 
	a.dt_nascimento, 
	a.ie_sexo, 
	a.nr_cpf, 
	a.nr_cep_cidade_nasc, 
	substr(obter_uf_localidade(a.nr_cep_cidade_nasc),1,2), 
	a.cd_municipio_ibge, 
	substr(obter_uf_ibge(a.cd_municipio_ibge),1,2), 
	a.cd_nacionalidade, 
	a.dt_obito, 
	b.nm_contato, 
	b.ds_endereco, 
	b.cd_cep, 
	b.nr_endereco, 
	b.ds_bairro, 
	b.ds_municipio, 
	b.sg_estado, 
	b.cd_municipio_ibge, 
	round((trunc(clock_timestamp(),'year') - 
    		trunc(coalesce(a.dt_nascimento,clock_timestamp()),'year'))/365) 
into STRICT	nm_pessoa_fisica_w, 
	dt_nascimento_w, 
	ie_sexo_w, 
	nr_cpf_w, 
	nr_cep_cidade_nasc_w, 
	uf_nasc_w, 
	cd_mun_ibge_pf_w, 
	uf_ibge_pf_w, 
	cd_nacionalidade_w, 
	dt_obito_w, 
	nm_contato_w, 
	ds_endereco_w, 
	cd_cep_w, 
	nr_endereco_w, 
	ds_bairro_w, 
	ds_municipio_w, 
	sg_estado_w, 
	cd_municipio_ibge_w, 
	qt_idade_w 
FROM pessoa_fisica a
LEFT OUTER JOIN compl_pessoa_fisica b ON (a.cd_pessoa_fisica = b.cd_pessoa_fisica AND 1 = b.ie_tipo_complemento)
WHERE a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
 
select	coalesce(max(nm_contato),'') 
into STRICT	nm_mae_w 
from	compl_pessoa_fisica 
where	cd_pessoa_fisica	= cd_pessoa_fisica_w 
and	ie_tipo_complemento = 5;
 
/* Obter dados da sus parametros */
 
select	cd_diretor_clinico, 
	cd_medico_auditor, 
	dt_competencia_apac, 
	ie_sigla_apac, 
	nm_orgao_destino_apac, 
	ie_orgao_destino_apac, 
	cd_orgao_autoriz_apac, 
	cd_cpf_autoriz_apac, 
	cd_unidade_apac, 
	nr_apac_inicial, 
	nr_apac_final, 
	dt_final_periodo_apac 
into STRICT	cd_diretor_clinico_w, 
	cd_medico_auditor_w, 
	dt_competencia_apac_w, 
	ie_sigla_apac_w, 
	nm_orgao_destino_apac_w, 
	ie_orgao_destino_apac_w, 
	cd_orgao_autoriz_apac_w, 
	cd_cpf_autoriz_apac_w, 
	cd_unidade_apac_w, 
	nr_apac_inicial_w, 
	nr_apac_final_w, 
	dt_final_periodo_apac_w 
from	sus_parametros 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
begin 
select	coalesce(max(a.dt_alta),dt_obito_w) 
into STRICT	dt_obito_w 
from	motivo_alta b, 
	atendimento_paciente a 
where	a.cd_motivo_alta = b.cd_motivo_alta 
and	b.ie_obito = 'S' 
and	a.nr_atendimento = nr_atendimento_w;
exception 
when others then 
	dt_obito_w	:= null;
end;
 
if (dt_obito_w IS NOT NULL AND dt_obito_w::text <> '') and (trunc(dt_obito_w,'month') < trunc(dt_competencia_w,'month')) then 
	ds_erro_w	:= ds_erro_w || '2172 ';
end if;
 
 
/* Obter dados do protocolo */
 
select max(coalesce(b.dt_mesano_referencia,dt_competencia_apac_w)) 
into STRICT	 dt_competencia_prot_w 
from	 protocolo_convenio b, 
	 conta_paciente a 
where	 a.nr_seq_protocolo = b.nr_seq_protocolo 
and	 a.nr_interno_conta = nr_interno_conta_w;
 
/*Consistir os procedimentos APAC X CONTA */
 
if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then 
	select	count(*) 
	into STRICT	ie_apac_nao_conta_w 
	from	sus_apac_proc b, 
		sus_apac_movto a 
	where	a.nr_sequencia		= nr_sequencia_p 
	and	a.nr_sequencia		= b.nr_seq_apac 
	and	b.ie_origem_proced	= 3 
	and	not exists ( 
			SELECT	1 
			from	procedimento_paciente c 
			where	b.nr_seq_propaci	= c.nr_sequencia 
			and	a.nr_interno_conta	= c.nr_interno_conta 
			and	c.ie_origem_proced	= 3 
			and	coalesce(c.cd_motivo_exc_conta::text, '') = '');
 
	select	count(*) 
	into STRICT	ie_conta_nao_apac_w 
	from	procedimento x, 
		procedimento_paciente a 
	where	a.nr_interno_conta	= nr_interno_conta_w 
	and	a.cd_procedimento	= x.cd_procedimento 
	and	a.ie_origem_proced	= x.ie_origem_proced 
	and	a.ie_origem_proced	= 3 
	and	x.ie_classificacao	= 1 
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '' 
	and not exists ( 
			SELECT	1 
			from	sus_apac_proc c, 
				sus_apac_movto b 
			where	b.nr_sequencia 		= c.nr_seq_apac 
			and	a.nr_sequencia 		= c.nr_seq_propaci 
			and	c.ie_origem_proced	= 3);
	 
	if (ie_apac_nao_conta_w > 0) or (ie_conta_nao_apac_w > 0) then 
		ds_erro_w	:= ds_erro_w || '2171 ';
	end if;
end if;
 
/* 00.00 - Data de competencia da apac difere do protocolo */
 
if (dt_competencia_prot_w IS NOT NULL AND dt_competencia_prot_w::text <> '')						and (dt_competencia_w IS NOT NULL AND dt_competencia_w::text <> '')						and (trunc(dt_competencia_w,'month') <> trunc(dt_competencia_prot_w,'month')) then 
	ds_erro_w	:= ds_erro_w || '2154 ';
end if;
 
 
/* 00.00 - Estadio X Metastase */
 
if (ie_metastase_w	= 'S')		and (cd_estagio_w IS NOT NULL AND cd_estagio_w::text <> '')		then 
	ds_erro_w	:= ds_erro_w || '2157 ';
end if;
 
/* 00.00 - Finalidade do tratamento(curativa) X Metastase */
 
if (ie_metastase_w	= 'S')	and (ie_finalidade_w	= '1')	then 
	ds_erro_w	:= ds_erro_w || '2158 ';
end if;
 
 
/* Obter dados do médico responsável */
 
select	nr_cpf 
into STRICT	nr_cpf_medico_resp_w 
from	pessoa_fisica 
where	cd_pessoa_fisica	= cd_medico_resp_w;
if (coalesce(nr_cpf_medico_resp_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2096 ';
end if;
 
 
/* 01 - Consistencia dos Dados do Paciente da APAC */
 
/* 01.01 - Data de nascimento */
 
if (coalesce(dt_nascimento_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2000 ';
end if;
 
/* 01.02 - Sexo do paciente */
 
if (coalesce(ie_sexo_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2001 ';
end if;
 
/* 01.03 - Data Nascimento posterior inicio validade */
 
if (coalesce(dt_nascimento_w,clock_timestamp()) > coalesce(dt_inicio_validade_w,clock_timestamp())) then 
	ds_erro_w	:= ds_erro_w || '2007 ';
end if;
 
/* 01.04 - Data Obito antes do inicio validade */
 
if (dt_obito_w IS NOT NULL AND dt_obito_w::text <> '') and (trunc(dt_obito_w,'month') < trunc(dt_inicio_validade_w,'month')) then 
	ds_erro_w	:= ds_erro_w || '2014 ';
end if;
 
/* 01.05 - Naturalidade do paciente não informada */
 
if (coalesce(nr_cep_cidade_nasc_w::text, '') = '') or (coalesce(uf_nasc_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2015 ';
end if;
 
/* 01.05 - Naturalidade do paciente não informada --> Rafael 21/1/8 tratar cidade natal x ibge */
 
begin 
select	coalesce(max(obter_valor_param_usuario(0, 86, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w)), 'L') 
into STRICT	ie_cidade_natal_w
;
exception 
when others then 
	ie_cidade_natal_w := 'L';
end;
 
if (ie_cidade_natal_w = 'I') and 
	((coalesce(cd_mun_ibge_pf_w::text, '') = '') or (coalesce(uf_ibge_pf_w::text, '') = '')) then 
	ds_erro_w	:= ds_erro_w || '2015 ';
end if;
 
/* 01.06 - Mãe do paciente não informada */
 
if (coalesce(nm_mae_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2016 ';
end if;
 
/* 01.07 - CEP logradouro não informado */
 
if (coalesce(cd_cep_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2017 ';
end if;
 
/* 01.08 - Município IBGE não informado */
 
if (coalesce(cd_municipio_ibge_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2018 ';
end if;
qt_reg_w	:= 0;
if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then 
	begin 
	select count(*) 
	into STRICT	 qt_reg_w 
	from	 sus_municipio 
	where	 cd_municipio_ibge = cd_municipio_ibge_w;
	if (qt_reg_w	= 0) then 
		 ds_erro_w	:= ds_erro_w || '2018 ';
	end if;
	end;
end if;
 
 
/* 01.09 - Endereço do paciente não informado */
 
if (coalesce(ds_endereco_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2019 ';
end if;
 
/* 01.10 - CPF do paciente não informado */
 
if (cd_varia_atrib_w in ('27','28','29','35','36','A1','A2'))	and (coalesce(nr_cpf_w::text, '') = '') 						then 
	ds_erro_w	:= ds_erro_w || '2041 ';
end if;
 
/* 01.11 - Número endereço residência do paciente não informado */
 
/* Felipe Martini OS62352, descomentado a inconsistencia abaixo*/
 
 
if (coalesce(nr_endereco_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2042 ';
end if;
 
 
/* 01.12 - CARTAO SUS */
 
if (coalesce(nr_cartao_nac_sus_w,'0') = '0') then 
	ds_erro_w	:= ds_erro_w || '2126 ';
end if;
 
if (coalesce(nr_cartao_nac_sus_w,'0') <> '0') then 
	begin 
	 
	begin 
	select consistir_digito('CARTAOSUS', nr_cartao_nac_sus_w) 
	into STRICT 	 ie_cartao_correto_w 
	;	
	exception 
	when others then 
		ie_cartao_correto_w := 'N';
	end;
	 
	if (ie_cartao_correto_w = 'N') then 
		ds_erro_w	:= ds_erro_w || '2126 ';
	end if;
	end;
end if;
 
/* 01.13 Procedimento principal não permite estadio*/
 
if (cd_estagio_w IS NOT NULL AND cd_estagio_w::text <> '') then 
	select	coalesce(max(ie_estadio),'S') 
	into STRICT	ie_estadiavel_w 
	from	procedimento 
	where	cd_procedimento		= cd_proc_principal_w 
	and	ie_origem_proced	= ie_origem_proced_w;
	 
	if (ie_estadiavel_w = 'N') then 
		ds_erro_w	:= ds_erro_w || '2166 ';
	end if;
end if;
 
/* 02 - Consistencia de datas */
 
/* 02.01 - Data de competencia da APAC */
 
if (coalesce(dt_competencia_w::text, '') = '') then 
	ds_erro_w	:= ds_erro_w || '2003 ';
end if;
 
/* 02.02 - Data de inicio de vigencia da APAC */
 
if (coalesce(dt_inicio_validade_w::text, '') = '') 				or (dt_inicio_validade_w > coalesce(dt_fim_validade_w,clock_timestamp()))	or (dt_inicio_validade_w > coalesce(dt_competencia_w,clock_timestamp())) 	then 
	ds_erro_w	:= ds_erro_w || '2004 ';
end if;
 
/* 02.03 - Data de final de vigencia da APAC */
 
if (coalesce(dt_fim_validade_w::text, '') = '') 				or (dt_fim_validade_w < coalesce(dt_competencia_w,clock_timestamp())) 	then 
	ds_erro_w	:= ds_erro_w || '2005 ';
end if;
 
/* 02.04 - Período entre data inicial e final maior de três meses */
 
if (coalesce(dt_fim_validade_w,clock_timestamp())) > add_months(coalesce(dt_inicio_validade_w,clock_timestamp()),3) then 
	ds_erro_w	:= ds_erro_w || '2006 ';
end if;
 
/* 16.05.2007 - Período de validade menor de três meses */
 
if (ie_tipo_apac_w	in (1,2)) and (coalesce(dt_fim_validade_w + 1,clock_timestamp())) < add_months(coalesce(dt_inicio_validade_w,clock_timestamp()),3) then 
	ds_erro_w	:= ds_erro_w || '2240 ';
end if;
 
 
/* 02.06 - Data dos transplantes realizados */
 
if	((coalesce(dt_primeiro_tx_w::text, '') = '') and ((dt_segundo_tx_w IS NOT NULL AND dt_segundo_tx_w::text <> '') or 
	(dt_terceiro_tx_w IS NOT NULL AND dt_terceiro_tx_w::text <> '')))					or (coalesce(dt_segundo_tx_w::text, '') = '' and 
	(dt_terceiro_tx_w IS NOT NULL AND dt_terceiro_tx_w::text <> ''))					or ((dt_primeiro_tx_w IS NOT NULL AND dt_primeiro_tx_w::text <> '') and 
	(dt_segundo_tx_w IS NOT NULL AND dt_segundo_tx_w::text <> '') and 
	dt_primeiro_tx_w	>= dt_segundo_tx_w)				or ((dt_segundo_tx_w IS NOT NULL AND dt_segundo_tx_w::text <> '') and 
	(dt_terceiro_tx_w IS NOT NULL AND dt_terceiro_tx_w::text <> '') and 
	dt_segundo_tx_w	>= dt_terceiro_tx_w)				or (coalesce(dt_primeiro_tx_w,dt_inicio_validade_w) > dt_inicio_validade_w)	or (coalesce(dt_segundo_tx_w,dt_inicio_validade_w) > dt_inicio_validade_w)	or (coalesce(dt_terceiro_tx_w,dt_inicio_validade_w) > dt_inicio_validade_w)	or (coalesce(dt_primeiro_tx_w,dt_nascimento_w) < dt_nascimento_w)		or (coalesce(dt_segundo_tx_w,dt_nascimento_w) < dt_nascimento_w)		or (coalesce(dt_terceiro_tx_w,dt_nascimento_w) < dt_nascimento_w)		then 
	ds_erro_w	:= ds_erro_w || '2009 ';
end if;
 
/* 02.07 - Data dos transplantes realizados X Quantidade de transplantes realizados */
 
if	((coalesce(qt_tx_realizado_w::text, '') = '' or 
	qt_tx_realizado_w	= 0) 	and ((dt_primeiro_tx_w IS NOT NULL AND dt_primeiro_tx_w::text <> '') or 
	(dt_segundo_tx_w IS NOT NULL AND dt_segundo_tx_w::text <> '') or 
	(dt_terceiro_tx_w IS NOT NULL AND dt_terceiro_tx_w::text <> '')))		or (coalesce(qt_tx_realizado_w,0) > 0 	and 
	coalesce(dt_primeiro_tx_w::text, '') = '' 	and 
	coalesce(dt_segundo_tx_w::text, '') = '' 	and 
	coalesce(dt_terceiro_tx_w::text, '') = '')		or 
	((qt_tx_realizado_w	= 1)	and ((dt_segundo_tx_w IS NOT NULL AND dt_segundo_tx_w::text <> '') 	or 
	(dt_terceiro_tx_w IS NOT NULL AND dt_terceiro_tx_w::text <> '')	or 
	coalesce(dt_primeiro_tx_w::text, '') = ''))		or 
	((qt_tx_realizado_w	= 2)	and ((dt_terceiro_tx_w IS NOT NULL AND dt_terceiro_tx_w::text <> '') 	or 
	coalesce(dt_segundo_tx_w::text, '') = ''	or 
	coalesce(dt_primeiro_tx_w::text, '') = ''))		or 
	((qt_tx_realizado_w	= 3)	and (coalesce(dt_terceiro_tx_w::text, '') = '' 	or 
	coalesce(dt_segundo_tx_w::text, '') = ''	or 
	coalesce(dt_primeiro_tx_w::text, '') = ''))		then 
	ds_erro_w	:= ds_erro_w || '2010 ';
end if;
if (qt_tx_realizado_w IS NOT NULL AND qt_tx_realizado_w::text <> '') 	and (qt_tx_realizado_w	> 3)			then 
	ds_erro_w	:= ds_erro_w || '2010 ';
end if;
 
 
/* 02.08 - Data de ocorrencia deve ou não ser informada */
 
if (substr(cd_motivo_cobranca_w,1,1) in ('6','8','9')) 			or (cd_motivo_cobranca_w in (51,53,54,55,56,72,73,74,75,41))	then 
	begin 
	if	coalesce(dt_ocorrencia_w::text, '') = ''	then	 
		ds_erro_w	:= ds_erro_w || '2061 ';
	end if;
	end;
else 
	begin 
	if	(dt_ocorrencia_w IS NOT NULL AND dt_ocorrencia_w::text <> '') then 
		ds_erro_w	:= ds_erro_w || '2062 ';
	end if;
	end;
end if;
 
/* 02.09 - Data de ocorrencia menor ou igual que competencia */
 
if (dt_ocorrencia_w IS NOT NULL AND dt_ocorrencia_w::text <> '')	and (trunc(dt_ocorrencia_w,'month') <= trunc(dt_competencia_w,'month'))	and (substr(cd_motivo_cobranca_w,1,1) = '9') and (dt_ocorrencia_w	< dt_inicio_validade_w)	then 
	ds_erro_w	:= ds_erro_w || '2062 ';
end if;
 
if (dt_ocorrencia_w IS NOT NULL AND dt_ocorrencia_w::text <> '')	and (trunc(dt_ocorrencia_w,'month') <> trunc(dt_competencia_w,'month'))	then 
	ds_erro_w	:= ds_erro_w || '2063 ';
end if;
 
/* 02.10 - Data ocorrência dever ser maior igual data início tratamento p/ motivo de cobrança*/
 
 
if (cd_motivo_cobranca_w = 69) and (dt_ocorrencia_w < dt_inicio_tratamento_w) then 
	ds_erro_w	:= ds_erro_w || '2160 ';
end if;
	 
/* 03 - Consistencia do tipo de APAC */
 
/* 03.01 - APAC inicial deve ter data de início de validade igual data de competência */
 
if (ie_tipo_apac_w		=	1) 		and (trunc(dt_inicio_validade_w,'month')	<> trunc(dt_competencia_w,'month'))	then 
	ds_erro_w	:= ds_erro_w || '2012 ';
end if;
 
/* 03.02 - APAC de continuidade deve ter início de validade menor que data de competência */
 
if (ie_tipo_apac_w		=	2) 		and (dt_inicio_validade_w	>= dt_competencia_w)	then 
	ds_erro_w	:= ds_erro_w || '2013 ';
end if;
 
/* 03.03 - APAC de continuidade deve ter mesma APAC em movimento anterior */
 
if (ie_tipo_apac_w	= 2) then 
	begin 
	nr_seq_geral_w	:= 0;
	select	coalesce(max(nr_sequencia),0), 
		coalesce(max(cd_motivo_cobranca),0), 
		coalesce(max(cd_proc_principal),0), 
		coalesce(max(nr_interno_conta),0) 
	into STRICT	nr_seq_geral_w, 
		cd_motivo_cobr_ant_w, 
		cd_proc_princ_ant_w, 
		nr_interno_conta_ant_w 
	from	sus_apac_movto 
	where	nr_sequencia	= (	SELECT	coalesce(max(b.nr_sequencia),0) 
					from	sus_apac_movto b 
					where	b.nr_apac	= nr_apac_w 
					and	coalesce(b.ie_status_apac::text, '') = '' 
					and	b.nr_sequencia	<> nr_seq_apac_w);
 
	if (nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2078 ';
	end if;
 
 
	/* OS27964 - APAC anterior deve ter sido faturada 03012006 */
 
	if (nr_seq_geral_w	> 0) 		and (nr_interno_conta_ant_w	= 0) 	then 
		ds_erro_w	:= ds_erro_w || '2223 ';
	end if;
	if (nr_seq_geral_w	> 0) 		and (nr_interno_conta_ant_w	> 0) 	then 
		begin 
		select	coalesce(max(nr_seq_protocolo),0) 
		into STRICT	nr_seq_protocolo_w 
		from	conta_paciente 
		where	nr_interno_conta	= nr_interno_conta_ant_w;
		if (nr_seq_protocolo_w = 0) then 
			ds_erro_w	:= ds_erro_w || '2223 ';
		end if;
		end;
	end if;
	 
	dt_competencia_ant_w	:= trunc(trunc(dt_competencia_w,'month') - 1,'month');
 
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_geral_w 
	from	sus_apac_movto 
	where	nr_apac	= nr_apac_w 
	and	coalesce(ie_status_apac::text, '') = '' 
	and	nr_sequencia	<> nr_seq_apac_w 
	and	trunc(dt_competencia,'month') = trunc(dt_competencia_ant_w,'month');
	 
	if (nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2078 ';
	end if;
 
	end;
end if;
 
/* 03.04 - APAC de continuidade deve ter motivo cobrança continuidade na APAC anterior */
 
if (ie_tipo_apac_w	= 2) and (cd_motivo_cobr_ant_w > 0) and (cd_motivo_cobr_ant_w not in (71,52,58,37,42))	then 
	ds_erro_w	:= ds_erro_w || '2079 ';
end if;
 
/* 03.05 - APAC de continuidade deve ter mesmo procedimento na APAC anterior */
 
if (ie_tipo_apac_w	= 2) and (cd_motivo_cobr_ant_w > 0) and (cd_proc_principal_w	<> cd_proc_princ_ant_w)	then 
	ds_erro_w	:= ds_erro_w || '2079 ';
end if;
 
/* 03.06 - Paciente com motivo de cobrança de óbito em movimento anterior */
 
cd_motivo_cobr_ant_w	:= 0;
select	coalesce(max(cd_motivo_cobranca),0) 
into STRICT	cd_motivo_cobr_ant_w 
from	sus_apac_movto 
where	nr_sequencia	= (	SELECT	coalesce(max(a.nr_sequencia),0) 
				from	atendimento_paciente b, 
					sus_apac_movto a 
				where	a.nr_atendimento	= b.nr_atendimento 
				and	a.nr_sequencia		<> nr_seq_apac_w 
				and	coalesce(a.ie_status_apac::text, '') = '' 
				and	a.cd_varia_atrib	= cd_varia_atrib_w 
				and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w);
 
if (cd_motivo_cobr_ant_w	= 54	or 
	substr(cd_motivo_cobr_ant_w,1,1) = '9')	then 
	ds_erro_w	:= ds_erro_w || '2080 ';
end if;
 
/* 03.07 - APAC Única, não pode ter mesma APAC em movimento anterior */
 
if (ie_tipo_apac_w	= 3) then 
	begin 
	nr_seq_geral_w	:= 0;
	select	coalesce(max(nr_sequencia),0) 
	into STRICT	nr_seq_geral_w 
	from	sus_apac_movto 
	where	nr_apac		= nr_apac_w 
	and	coalesce(ie_status_apac::text, '') = '' 
	and	nr_sequencia	<> nr_seq_apac_w;
	if (nr_seq_geral_w	> 0) then 
		ds_erro_w	:= ds_erro_w || '2077 ';
	end if;
	end;
end if;
 
/* 03.08 - Mesma APAC duas vezes na mesma competência com mesmo proc principal */
 
begin 
nr_seq_geral_w	:= 0;
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_seq_geral_w 
from	sus_apac_movto 
where	nr_apac		= nr_apac_w 
and	coalesce(ie_status_apac::text, '') = '' 
and	dt_competencia	= dt_competencia_w 
and	cd_proc_principal	= cd_proc_principal_w 
and	nr_sequencia	<> nr_seq_apac_w;
if (nr_seq_geral_w	> 0) then 
	ds_erro_w	:= ds_erro_w || '2091 ';
end if;
end;
 
/* 03.09 - APAC continuidade com período de validade diferente da APAC anterior */
 
if (ie_tipo_apac_w	= 2) then 
	begin 
	select	dt_inicio_validade, 
		dt_fim_validade 
	into STRICT	dt_inicio_validade_ant_w, 
		dt_fim_validade_ant_w 
	from	sus_apac_movto 
	where	nr_apac		= nr_apac_w 
	and	coalesce(ie_status_apac::text, '') = '' 
	and	nr_sequencia	<> nr_seq_apac_w 
	and	nr_sequencia	= (	SELECT	max(b.nr_sequencia) 
					from	sus_apac_movto b 
					where	b.nr_apac	= nr_apac_w 
					and	coalesce(b.ie_status_apac::text, '') = '' 
					and	b.nr_sequencia	<> nr_seq_apac_w);
	exception 
	when others then 
	begin 
		dt_inicio_validade_ant_w	:= Null;
		dt_fim_validade_ant_w		:= Null;
	end;
	end;
	 
	if (dt_inicio_validade_ant_w IS NOT NULL AND dt_inicio_validade_ant_w::text <> '') and 
		((dt_inicio_validade_ant_w <> dt_inicio_validade_w) or (dt_fim_validade_ant_w <> dt_fim_validade_w)) then 
		ds_erro_w	:= ds_erro_w || '2164 ';
	end if;
end if;
 
 
/* 05 - Consistencia dos campos, pelo tipo do campo variável da APAC (cd_varia_atrib) */
 
/* 05.01 - Data início do tratamento autorizado */
 
if (cd_varia_atrib_w	in ('27','28','29','36'))			and 
	((coalesce(dt_inicio_tratamento_w::text, '') = '') 				or (trunc(dt_inicio_tratamento_w,'month') > trunc(coalesce(dt_inicio_validade_w,clock_timestamp()),'month'))	or (trunc(dt_inicio_tratamento_w,'month') < trunc(coalesce(dt_nascimento_w,clock_timestamp()),'month')))	then 
	ds_erro_w	:= ds_erro_w || '2008 ';
end if;
 
/* 05.02 - CID Topografia */
 
if (cd_varia_atrib_w		in ('28','29'))		and (coalesce(cd_cid_topografia_w::text, '') = ''	or 
	substr(cd_cid_topografia_w,1,1) not in ('C','D')) then 
	ds_erro_w	:= ds_erro_w || '2021 ';
end if;
 
/* Comentada esta inconsistencia, não localizada no sus 02/07/03 */
 
/* 
if	(cd_cid_topografia_w	is not null)	then 
	begin 
	nr_seq_geral_w	:= 0; 
	select nvl(max(nr_sequencia),0) 
	into	 nr_seq_geral_w 
	from	 sus_proced_doenca 
	where	 cd_procedimento	= cd_proc_principal_w 
	and	 ie_origem_proced	= 3 
	and	 cd_doenca_cid	= cd_cid_topografia_w; 
	if	(nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2021 '; 
	end if; 
	end; 
end if; 
*/
 
 
ie_pula_morfologia_w := 'N';
if (cd_varia_atrib_w		in ('28','29'))			and (substr(cd_cid_topografia_w,1,1) = 'D') 				and ((substr(cd_cid_topografia_w,2,2))::numeric  between 37 and 48)	then 
	ie_pula_morfologia_w := 'S';
end if;
 
ie_valida_cid_w	:= 'N';
if (cd_cid_topografia_w IS NOT NULL AND cd_cid_topografia_w::text <> '') then 
	begin 
	ie_valida_cid_w	:= 'S';
	select	ie_sexo, 
		qt_campos_radio, 
		ie_estadio, 
		ie_repete_radio, 
		cd_categoria_cid 
	into STRICT	ie_sexo_cid_w,	 
		qt_campos_radio_w, 
		ie_estadio_w, 
		ie_repete_radio_w, 
		cd_categoria_cid_w 
	from	cid_doenca 
	where	cd_doenca_cid	= cd_cid_topografia_w;
	exception 
		when others then 
		begin 
		ds_erro_w	:= ds_erro_w || '2021 ';
		ie_valida_cid_w	:= 'N';
		end;
	end;
end if;
 
if (cd_categoria_cid_w IS NOT NULL AND cd_categoria_cid_w::text <> '') and (cd_categoria_cid_w in ('C90','C91','C92','C93','C94','C95') and (cd_estagio_w IS NOT NULL AND cd_estagio_w::text <> '')) then 
	ds_erro_w	:= ds_erro_w || '2176 ';
end if;
 
if (ie_valida_cid_w	= 'S') 	and (cd_varia_atrib_w	= '28')	and (qt_campos_radio_w	= '000') then 
	ds_erro_w		:= ds_erro_w || '2088 ';
end if;
 
/* Valida CID de Radioterapia */
 
if (ie_valida_cid_w	= 'S') 	and (cd_varia_atrib_w	in ('28','29'))	and (ie_estadio_w = 'N') and (cd_estagio_w IS NOT NULL AND cd_estagio_w::text <> '') then 
	ds_erro_w	:= ds_erro_w || '2089 ';
end if;
 
/* 05.03 - CID Morfologia */
 
if (cd_varia_atrib_w		in ('28','29'))	and (coalesce(cd_cid_morfologia_w::text, '') = '')		and (ie_pula_morfologia_w	= 'N')		then 
	ds_erro_w	:= ds_erro_w || '2022 ';
end if;
 
if (cd_varia_atrib_w		in ('28','29'))	and (cd_cid_morfologia_w IS NOT NULL AND cd_cid_morfologia_w::text <> '')		and (ie_pula_morfologia_w	= 'S')		then 
	ds_erro_w	:= ds_erro_w || '2087 ';
end if;
 
if (cd_cid_morfologia_w IS NOT NULL AND cd_cid_morfologia_w::text <> '')	then 
	begin 
	nr_seq_geral_w	:= 0;
	select count(*) 
	into STRICT	 nr_seq_geral_w 
	from	 cid_morfologia 
	where	 cd_cid_morfologia = cd_cid_morfologia_w;
	if (nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2022 ';
	end if;
	end;
end if;
 
/* 05.04 - Metastase */
 
if (cd_varia_atrib_w		in ('28','29'))		and (coalesce(ie_metastase_w::text, '') = '')			then 
	ds_erro_w	:= ds_erro_w || '2023 ';
end if;
 
/* 05.05 - Finalidade */
 
if (cd_varia_atrib_w		= '28')			and (ie_finalidade_w		not in ('1','2','3','5','6','7','8'))	then 
	ds_erro_w	:= ds_erro_w || '2024 ';
end if;
 
/* 05.06 - Data do diagnóstico médico */
 
if (cd_varia_atrib_w	in ('28','29'))			and 
	((coalesce(dt_diagnostico_w::text, '') = '') 				or (dt_diagnostico_w	> clock_timestamp())				or (dt_diagnostico_w > coalesce(dt_inicio_validade_w,clock_timestamp()))	or (dt_diagnostico_w > coalesce(dt_inicio_tratamento_w,clock_timestamp()))	or (dt_diagnostico_w < coalesce(dt_nascimento_w,clock_timestamp())))		then 
	ds_erro_w	:= ds_erro_w || '2025 ';
end if;
 
/* 05.07 - Estadio */
 
if (cd_varia_atrib_w		in ('28','29'))		and (ie_estadio_w		= 'S')			and (coalesce(cd_estagio_w::text, '') = '' or 
	cd_estagio_w		> 4)			then 
	ds_erro_w	:= ds_erro_w || '2026 ';
end if;
 
/* 05.08 - Data dos tratamentos anteriores */
 
if	((coalesce(dt_pri_tratamento_w::text, '') = '') and ((dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '') or 
	(dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> '')))					or (coalesce(dt_seg_tratamento_w::text, '') = '' and 
	(dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> ''))					or ((dt_pri_tratamento_w IS NOT NULL AND dt_pri_tratamento_w::text <> '') and 
	(dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '') and 
	trunc(dt_pri_tratamento_w,'mm')	>= trunc(dt_seg_tratamento_w,'mm'))	or ((dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '') and 
	(dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> '') and 
	trunc(dt_seg_tratamento_w,'mm') >= trunc(dt_ter_tratamento_w,'mm'))			or (trunc(coalesce(dt_pri_tratamento_w,dt_inicio_validade_w),'mm') > trunc(dt_inicio_validade_w,'mm'))	or (trunc(coalesce(dt_seg_tratamento_w,dt_inicio_validade_w),'mm') > trunc(dt_inicio_validade_w,'mm'))	or (trunc(coalesce(dt_ter_tratamento_w,dt_inicio_validade_w),'mm') > trunc(dt_inicio_validade_w,'mm'))	or 
	((dt_pri_tratamento_w IS NOT NULL AND dt_pri_tratamento_w::text <> '') and (trunc(coalesce(dt_pri_tratamento_w,dt_inicio_tratamento_w),'mm') >= 
 
trunc(dt_inicio_tratamento_w,'mm')))	or 
	((dt_seg_tratamento_w IS NOT NULL AND dt_seg_tratamento_w::text <> '') and (trunc(coalesce(dt_seg_tratamento_w,dt_inicio_tratamento_w),'mm') >= 
 
trunc(dt_inicio_tratamento_w,'mm')))	or 
	((dt_ter_tratamento_w IS NOT NULL AND dt_ter_tratamento_w::text <> '') and (trunc(coalesce(dt_ter_tratamento_w,dt_inicio_tratamento_w),'mm') >= 
 
trunc(dt_inicio_tratamento_w,'mm')))	or (trunc(coalesce(dt_pri_tratamento_w,dt_nascimento_w),'mm') < trunc(dt_nascimento_w,'mm'))		or (trunc(coalesce(dt_seg_tratamento_w,dt_nascimento_w),'mm') < trunc(dt_nascimento_w,'mm'))		or (trunc(coalesce(dt_ter_tratamento_w,dt_nascimento_w),'mm') < trunc(dt_nascimento_w,'mm'))		then 
	ds_erro_w	:= ds_erro_w || '2011 ';
end if;
 
/* 05.09 - CID das áreas irradiadas */
 
if (cd_varia_atrib_w		in ('28'))	and (coalesce(cd_cid_pri_radiacao_w::text, '') = '')	then 
	ds_erro_w	:= ds_erro_w || '2027 ';
end if;
 
if (cd_varia_atrib_w		in ('28'))		and (cd_cid_pri_radiacao_w IS NOT NULL AND cd_cid_pri_radiacao_w::text <> '')	then 
	begin 
	nr_seq_geral_w	:= 0;
	select coalesce(max(nr_sequencia),0) 
	into STRICT	 nr_seq_geral_w 
	from	 sus_proced_doenca 
	where	 cd_procedimento	= cd_proc_principal_w 
	and	 ie_origem_proced	= 3 
	and	 cd_doenca_cid	= cd_cid_pri_radiacao_w;
	if (nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2027 ';
	end if;
	end;
end if;
 
if (cd_varia_atrib_w		in ('28'))		and (cd_cid_seg_radiacao_w IS NOT NULL AND cd_cid_seg_radiacao_w::text <> '')	then 
	begin 
	nr_seq_geral_w	:= 0;
	select coalesce(max(nr_sequencia),0) 
	into STRICT	 nr_seq_geral_w 
	from	 sus_proced_doenca 
	where	 cd_procedimento	= cd_proc_principal_w 
	and	 ie_origem_proced	= 3 
	and	 cd_doenca_cid	= cd_cid_seg_radiacao_w;
	if (nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2070 ';
	end if;
	end;
end if;
 
if (cd_varia_atrib_w		in ('28'))		and (cd_cid_ter_radiacao_w IS NOT NULL AND cd_cid_ter_radiacao_w::text <> '')	then 
	begin 
	nr_seq_geral_w	:= 0;
	select coalesce(max(nr_sequencia),0) 
	into STRICT	 nr_seq_geral_w 
	from	 sus_proced_doenca 
	where	 cd_procedimento	= cd_proc_principal_w 
	and	 ie_origem_proced	= 3 
	and	 cd_doenca_cid	= cd_cid_ter_radiacao_w;
	if (nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2071 ';
	end if;
	end;
end if;
 
/*  Validar repetição de CID de radioterapia */
 
if (cd_varia_atrib_w		in ('28'))		and (cd_cid_pri_radiacao_w IS NOT NULL AND cd_cid_pri_radiacao_w::text <> '')		and (cd_cid_seg_radiacao_w IS NOT NULL AND cd_cid_seg_radiacao_w::text <> '')		and (cd_cid_pri_radiacao_w = cd_cid_seg_radiacao_w)	then 
	begin 
	select	coalesce(max(ie_repete_radio),'X') 
	into STRICT	ie_repete_radio_w 
	from	cid_doenca 
	where	cd_doenca_cid	= cd_cid_pri_radiacao_w;
	if (ie_repete_radio_w	<> 'S') then 
		ds_erro_w	:= ds_erro_w || '2090 ';
	end if;
	end;
end if;
if (cd_varia_atrib_w		in ('28'))		and (cd_cid_pri_radiacao_w IS NOT NULL AND cd_cid_pri_radiacao_w::text <> '')		and (cd_cid_ter_radiacao_w IS NOT NULL AND cd_cid_ter_radiacao_w::text <> '')		and (cd_cid_pri_radiacao_w = cd_cid_ter_radiacao_w)	then 
	begin 
	select	coalesce(max(ie_repete_radio),'X') 
	into STRICT	ie_repete_radio_w 
	from	cid_doenca 
	where	cd_doenca_cid	= cd_cid_pri_radiacao_w;
	if (ie_repete_radio_w	<> 'S') then 
		ds_erro_w	:= ds_erro_w || '2090 ';
	end if;
	end;
end if;
if (cd_varia_atrib_w		in ('28'))		and (cd_cid_seg_radiacao_w IS NOT NULL AND cd_cid_seg_radiacao_w::text <> '')		and (cd_cid_ter_radiacao_w IS NOT NULL AND cd_cid_ter_radiacao_w::text <> '')		and (cd_cid_seg_radiacao_w = cd_cid_ter_radiacao_w)	then 
	begin 
	select	coalesce(max(ie_repete_radio),'X') 
	into STRICT	ie_repete_radio_w 
	from	cid_doenca 
	where	cd_doenca_cid	= cd_cid_seg_radiacao_w;
	if (ie_repete_radio_w	<> 'S') then 
		ds_erro_w	:= ds_erro_w || '2090 ';
	end if;
	end;
end if;
 
/* 05.10 - Número de campos planejados */
 
if (cd_varia_atrib_w		in ('28'))	and (coalesce(qt_campo_planejado_w::text, '') = '' 	or 
	qt_campo_planejado_w	< 1)		then 
	ds_erro_w	:= ds_erro_w || '2028 ';
end if;
 
/* Consiste quantidade de campos planejados */
 
qt_campos_w		:= 0;
qt_total_campos_w	:= 0;
if (cd_varia_atrib_w		in ('28'))	and (cd_cid_pri_radiacao_w IS NOT NULL AND cd_cid_pri_radiacao_w::text <> '')then 
	begin 
	select max((coalesce(qt_campos_radio,'0'))::numeric ) 
	into STRICT	 qt_campos_w 
	from	 cid_doenca 
	where	 cd_doenca_cid	= cd_cid_pri_radiacao_w;
	qt_total_campos_w	:= qt_total_campos_w + qt_campos_w;
	end;
end if;
if (cd_varia_atrib_w		in ('28'))	and (cd_cid_seg_radiacao_w IS NOT NULL AND cd_cid_seg_radiacao_w::text <> '')then 
	begin 
	select max((coalesce(qt_campos_radio,'0'))::numeric ) 
	into STRICT	 qt_campos_w 
	from	 cid_doenca 
	where	 cd_doenca_cid	= cd_cid_seg_radiacao_w;
	qt_total_campos_w	:= qt_total_campos_w + qt_campos_w;
	end;
end if;
if (cd_varia_atrib_w		in ('28'))	and (cd_cid_ter_radiacao_w IS NOT NULL AND cd_cid_ter_radiacao_w::text <> '')then 
	begin 
	select max((coalesce(qt_campos_radio,'0'))::numeric ) 
	into STRICT	 qt_campos_w 
	from	 cid_doenca 
	where	 cd_doenca_cid	= cd_cid_ter_radiacao_w;
	qt_total_campos_w	:= qt_total_campos_w + qt_campos_w;
	end;
end if;
 
if (cd_varia_atrib_w		in ('28'))			and (qt_campo_planejado_w	> qt_total_campos_w)	then 
	ds_erro_w	:= ds_erro_w || '2028 ';
end if;
 
 
/* 05.11 - Total de meses previstos */
 
if (cd_varia_atrib_w		in ('29'))	and (coalesce(qt_meses_prev_w::text, '') = '' or 
	qt_meses_prev_w		< 1)	then 
	ds_erro_w	:= ds_erro_w || '2029 ';
end if;
 
/* 05.12 - Diagnóstico Principal e secundário */
 
if (cd_varia_atrib_w		in ('27','36','08','11','10','A1','A2')) and (coalesce(cd_cid_principal_w::text, '') = '') 	 then 
	ds_erro_w	:= ds_erro_w || '2030 ';
end if;
 
if (cd_varia_atrib_w	= '29')	and (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '')	then 
	begin 
	nr_seq_geral_w	:= 0;
	select coalesce(max(nr_sequencia),0) 
	into STRICT	 nr_seq_geral_w 
	from	 sus_proced_doenca 
	where	 cd_procedimento	= cd_proc_principal_w 
	and	 ie_origem_proced	= 3 
	and	 cd_doenca_cid	= cd_cid_principal_w;
	if (nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2030 ';
	end if;
	end;
end if;
 
 
/* 05.13 - Válida CID com sexo do paciente */
 
if (cd_cid_principal_w IS NOT NULL AND cd_cid_principal_w::text <> '') then 
	begin 
	select	coalesce(max(ie_sexo),' ') 
	into STRICT	ie_sexo_cid_w 
	from	cid_doenca 
	where	cd_doenca_cid	= cd_cid_principal_w;
	if (ie_sexo_cid_w	= 'M')	and (ie_sexo_w	<> 'M')	then 
		ds_erro_w	:= ds_erro_w || '2095 ';
	end if;
	if (ie_sexo_cid_w	= 'F')	and (ie_sexo_w	<> 'F')	then 
		ds_erro_w	:= ds_erro_w || '2095 ';
	end if;
	end;
end if;
 
if (cd_cid_topografia_w IS NOT NULL AND cd_cid_topografia_w::text <> '') then 
	begin 
	select	coalesce(max(ie_sexo),' ') 
	into STRICT	ie_sexo_cid_w 
	from	cid_doenca 
	where	cd_doenca_cid	= cd_cid_topografia_w;
	if (ie_sexo_cid_w	= 'M')	and (ie_sexo_w	<> 'M')	then 
		ds_erro_w	:= ds_erro_w || '2095 ';
	end if;
	if (ie_sexo_cid_w	= 'F')	and (ie_sexo_w	<> 'F')	then 
		ds_erro_w	:= ds_erro_w || '2095 ';
	end if;
	end;
end if;
 
if (cd_cid_secundario_w IS NOT NULL AND cd_cid_secundario_w::text <> '') then 
	begin 
	select	coalesce(max(ie_sexo),' ') 
	into STRICT	ie_sexo_cid_w 
	from	cid_doenca 
	where	cd_doenca_cid	= cd_cid_secundario_w;
	if (ie_sexo_cid_w	= 'M')	and (ie_sexo_w	<> 'M')	then 
		ds_erro_w	:= ds_erro_w || '2095 ';
	end if;
	if (ie_sexo_cid_w	= 'F')	and (ie_sexo_w	<> 'F')	then 
		ds_erro_w	:= ds_erro_w || '2095 ';
	end if;
	end;
end if;
 
 
/* Comentada esta inconsistencia, não localizada no sus 02/07/03 */
 
/* 
if	(cd_varia_atrib_w	= '29')	and 
	(cd_cid_secundario_w is not null) then 
	begin 
	nr_seq_geral_w	:= 0; 
	select nvl(max(nr_sequencia),0) 
	into	 nr_seq_geral_w 
	from	 sus_proced_doenca 
	where	 cd_procedimento	= cd_proc_principal_w 
	and	 ie_origem_proced	= 3 
	and	 cd_doenca_cid	= cd_cid_secundario_w; 
	if	(nr_seq_geral_w	= 0) then 
		ds_erro_w	:= ds_erro_w || '2072 '; 
	end if; 
	end; 
end if; 
*/
 
 
/* 05.13 - Indicado para transplante */
 
if (cd_varia_atrib_w		in ('27','36')) 	and (ie_indicado_tx_w		not in ('S','N'))	 then 
	ds_erro_w	:= ds_erro_w || '2031 ';
end if;
 
if (ie_inscrito_tx_w		= 'S') and (ie_indicado_tx_w		<> 'S') then 
	ds_erro_w	:= ds_erro_w || '2082 ';
end if;
 
/* 05.14 - Inscrito para transplante */
 
if (cd_varia_atrib_w		in ('27','36')) 	and (ie_inscrito_tx_w		not in ('S','N'))	 then 
	ds_erro_w	:= ds_erro_w || '2032 ';
end if;
 
/* 05.15 - Data de Inscrição para transplante */
 
if (cd_varia_atrib_w		in ('27','36')) 		and (ie_inscrito_tx_w		= 'S')	 		and (coalesce(dt_inscricao_tx_w::text, '') = '' 		or 
	dt_inscricao_tx_w 		< dt_nascimento_w	or 
	dt_inscricao_tx_w		> dt_competencia_w)		then 
	ds_erro_w	:= ds_erro_w || '2033 ';
end if;
if (cd_varia_atrib_w		in ('27','36')) 		and (ie_inscrito_tx_w		= 'N')	 		and (dt_inscricao_tx_w IS NOT NULL AND dt_inscricao_tx_w::text <> '')			then 
	ds_erro_w	:= ds_erro_w || '2033 ';
end if;
 
/* 05.16 - Creatinina */
 
if (cd_varia_atrib_w		in ('27')) 		and (coalesce(qt_creatinina_w::text, '') = ''	or 
	qt_creatinina_w		= 0)		then 
	ds_erro_w	:= ds_erro_w || '2034 ';
end if;
 
/* 05.17 - Uréia Pré */
 
if (cd_varia_atrib_w		in ('27')) 		and (coalesce(qt_ureia_pre_w::text, '') = ''	or 
	qt_ureia_pre_w		= 0)		then 
	ds_erro_w	:= ds_erro_w || '2035 ';
end if;
 
/* 05.18 - Uréia Pós */
 
if (cd_varia_atrib_w		in ('27')) 		and (coalesce(qt_ureia_pos_w::text, '') = ''	or 
	qt_ureia_pos_w		= 0)		then 
	ds_erro_w	:= ds_erro_w || '2036 ';
end if;
 
/* 05.19 - Hepatite C */
 
if (cd_varia_atrib_w		in ('27')) 		and (coalesce(ie_hepatite_c_w::text, '') = ''	or 
	ie_hepatite_c_w		not in ('P','N'))	then 
	ds_erro_w	:= ds_erro_w || '2037 ';
end if;
 
/* 05.20 - HBsAG */
 
if (cd_varia_atrib_w		in ('27')) 		and (coalesce(ie_hbsag_w::text, '') = ''	or 
	ie_hbsag_w		not in ('P','N'))	then 
	ds_erro_w	:= ds_erro_w || '2038 ';
end if;
 
/* 05.21 - HIV */
 
if (cd_varia_atrib_w		in ('27')) 		and (coalesce(ie_hiv_w::text, '') = ''	or 
	ie_hiv_w			not in ('P','N'))	then 
	ds_erro_w	:= ds_erro_w || '2039 ';
end if;
 
/* 05.22 - HLA */
 
if (cd_varia_atrib_w		in ('27')) 		and (coalesce(ie_hla_w::text, '') = ''	or 
	ie_hla_w			not in ('S','N'))	then 
	ds_erro_w	:= ds_erro_w || '2040 ';
end if;
 
if (cd_varia_atrib_w		in ('27')) 	and (ie_hla_w			= 'N')	and (ie_inscrito_tx_w		= 'S')	and (dt_inscricao_tx_w	< 
	add_months(dt_competencia_w,6))	then 
	ds_erro_w	:= ds_erro_w || '2083 ';
end if;
 
/* 05.23 - Resultado do exame */
 
if (cd_varia_atrib_w		in ('11')) 		and 
	((ie_resultado_exame_w	not in (1,2,3)) or (coalesce(ie_resultado_exame_w::text, '') = ''))	then 
	ds_erro_w	:= ds_erro_w || '2043 ';
end if;
 
/* 05.24 - Data do transplante */
 
if (cd_varia_atrib_w		in ('A1','A2')) 		and (coalesce(dt_transplante_w::text, '') = '' 		or 
	dt_transplante_w 		< dt_nascimento_w	or 
	dt_transplante_w		> dt_inicio_validade_w)	then 
	ds_erro_w	:= ds_erro_w || '2044 ';
end if;
 
/* 80 - Consistencia Gerais da APAC */
 
/* 80.01 - APAC já utilizada em outro atendimento */
 
select	count(*) 
into STRICT	qt_atendimento_apac_w 
from	sus_apac_movto 
where	nr_apac		= nr_apac_w 
and	coalesce(ie_status_apac::text, '') = '' 
and	nr_sequencia	<> nr_sequencia_p 
and	ie_tipo_apac <> 2;
if (qt_atendimento_apac_w	> 1 ) then 
	ds_erro_w	:= ds_erro_w || '2020 ';
end if;
 
/* 80.02 - Valida número da APAC dentro do período */
 
if (nr_apac_w		< nr_apac_inicial_w	or 
	nr_apac_w		> nr_apac_final_w)	then 
	ds_erro_w	:= ds_erro_w || '2045 ';
end if;
 
/* 80.03 - Valida número da APAC dentro da data limite de uso do número da APAC */
 
if (nr_apac_w between nr_apac_inicial_w and nr_apac_final_w)	and (dt_inicio_validade_w > dt_final_periodo_apac_w )		then 
	ds_erro_w	:= ds_erro_w || '2085 ';
end if;
 
/* 80.04 - Número da APAC incorreto no cálculo de dígito */
 
ie_digito_apac_w	:= 'S';
if (nr_apac_w > 0) then 
	begin 
	select	consistir_digito('AIH',to_char(nr_apac_w)) 
	into STRICT	ie_digito_apac_w 
	;
	if (ie_digito_apac_w = 'N') then 
		ds_erro_w	:= ds_erro_w || '2046 ';
	end if;
	end;
end if;
 
 
/* 80.05 - Mais de uma APAC para mesmo paciente na mesma competência */
 
qt_reg_w	:= 0;
select	count(*) 
into STRICT	qt_reg_w 
from	atendimento_paciente b, 
	sus_apac_movto a 
where	a.nr_atendimento	= b.nr_atendimento 
and	coalesce(a.ie_status_apac::text, '') = '' 
and	b.cd_pessoa_fisica	= cd_pessoa_fisica_w 
and	a.dt_competencia	= dt_competencia_w 
and	a.cd_varia_atrib	= cd_varia_atrib_w 
and	a.cd_motivo_cobranca not in (72,74) 
and	a.cd_varia_atrib not in ('11','21') 
and	a.ie_tipo_apac		<> 3;
 
if (qt_reg_w	> 1) then 
	ds_erro_w	:= ds_erro_w || '2159 ';
end if;
 
select	count(*) 
into STRICT	qt_reg_w 
from	SUS_APAC_MOVTO 
where	qt_campo_planejado 	<> qt_campo_planejado_w 
and	nr_apac			= nr_apac_w 
and	nr_sequencia		<> nr_sequencia_p;
 
if (qt_reg_w	> 0) then 
	ds_erro_w	:= ds_erro_w || '2173 ';
end if;
 
qt_reg_w	:= 0;
select	sum(b.qt_procedimento) 
into STRICT	qt_reg_w 
from	sus_apac_proc	b , 
	sus_apac_movto	a 
where	a.nr_apac 		= nr_apac_w 
and	b.cd_procedimento	= cd_proc_principal_w 
and	b.ie_origem_proced	= ie_origem_proced_w 
and	coalesce(a.ie_status_apac::text, '') = '' 
and	b.nr_seq_apac 		= a.nr_sequencia;
 
if (cd_varia_atrib_w in ('28')) and (qt_reg_w	> coalesce(qt_campo_planejado_w,0)) then 
	ds_erro_w	:= ds_erro_w || '2174 ';
end if;
 
/* Procedimento principal zerado com proced secundário informado */
 
 
select	count(b.nr_sequencia) 
into STRICT	qt_proced_zero_w 
from	sus_apac_proc	b, 
	sus_apac_movto 	a 
where	a.nr_sequencia		= nr_sequencia_p 
and	a.nr_sequencia		= b.nr_seq_apac 
and	a.cd_proc_principal	= b.cd_procedimento 
and	a.ie_origem_proc_princ	= b.ie_origem_proced 
and	b.qt_procedimento	= 0;
 
/* OS 53553 - de acordo com Erasto, essa inco. pode ser retirada 
if	(qt_proced_zero_w > 0) then 
 
	select	count(b.nr_sequencia) 
	into	qt_proced_comzero_w 
	from	sus_apac_proc b, 
		sus_apac_movto a 
	where	a.nr_sequencia	= nr_sequencia_p 
	and	a.nr_sequencia	= b.nr_seq_apac; 
 
	if	(qt_proced_comzero_w	> 1) then 
		ds_erro_w	:= ds_erro_w || '2178 '; 
	end if; 
end if; 
*/
 
 
/*APAC inicial duplicada*/
 
if (ie_tipo_apac_w = 1) then 
	select	count(*) 
	into STRICT	qt_apac_ini_duplic_w 
	from	sus_apac_movto 
	where	nr_apac 	= nr_apac_w 
	and	ie_tipo_apac 	= 1 
	and	coalesce(ie_status_apac::text, '') = '';
 
	if (qt_apac_ini_duplic_w > 1) then 
		ds_erro_w	:= ds_erro_w || '2207 ';
	end if;
end if;
 
/* APAC - Procedimento principal não lançado na conta */
 
select	count(*) 
into STRICT	qt_proc_princ_w 
from	sus_apac_proc		b, 
	sus_apac_movto		a 
where	b.nr_seq_apac		= a.nr_sequencia 
and	a.nr_sequencia		= nr_sequencia_p 
and	b.cd_procedimento	= cd_proc_principal_w 
and	b.ie_origem_proced	= 3;
 
if (qt_proc_princ_w	= 0) then 
	ds_erro_w		:= ds_erro_w || '2181 ';
end if;
 
ds_erro_proc_apac_w	:= '';
ds_erro_proc_apac_w := CONSISTE_PROC_APAC(	nr_sequencia_p, ie_tipo_ups_w, ie_tipo_prestador_w, cd_proc_principal_w, cd_tratamento_w, ie_tipo_apac_w, cd_varia_atrib_w, ie_metastase_w, dt_competencia_w, cd_motivo_cobranca_w, ie_hiv_w, qt_idade_w, cd_cid_principal_w, cd_cid_secundario_w, qt_tx_realizado_w, ds_erro_proc_apac_w);
ds_erro_w	:= ds_erro_w || ds_erro_proc_apac_w;
 
 
ds_erro_w := restringir_inconsistencia(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, 999, nr_seq_classif_atend_w, ds_erro_w);
 
 
/* Atualiza inconsistencia na APAC */
 
update	sus_apac_movto 
set	dt_consistencia	= clock_timestamp(), 
	nm_usuario_cons	= nm_usuario_p, 
	ds_inconsistencia	= ds_erro_w 
where	nr_sequencia	= nr_sequencia_p;
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_sus_apac ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

