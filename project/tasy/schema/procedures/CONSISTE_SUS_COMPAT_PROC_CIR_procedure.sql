-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_sus_compat_proc_cir (nr_seq_agenda_p bigint, nr_cirurgia_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ds_retorno_p INOUT text) AS $body$
DECLARE


cd_procedimento_adic_w	bigint;
ie_origem_proced_w	bigint;
ie_permite_w		varchar(15);

c01 CURSOR FOR
	SELECT	cd_procedimento,
		coalesce(ie_origem_proced,ie_origem_proced_p)
	from	agenda_paciente_proc
	where	nr_sequencia = nr_seq_agenda_p
	and	coalesce(nr_seq_agenda_p,0) > 0
	and	((coalesce(cd_convenio::text, '') = '') or (obter_tipo_convenio(cd_convenio) = '3'))
	
union

	SELECT	a.cd_procedimento,
		coalesce(a.ie_origem_proced,ie_origem_proced_p)
	from	prescr_procedimento a,
		cirurgia b
	where	a.nr_prescricao = b.nr_prescricao
	and	b.nr_cirurgia	= nr_cirurgia_p
	and (coalesce(nr_cirurgia_p,0) > 0)
	and	((coalesce(a.cd_convenio::text, '') = '') or (obter_tipo_convenio(a.cd_convenio) = '3'));




BEGIN
ds_retorno_p := null;
if (cd_convenio_p IS NOT NULL AND cd_convenio_p::text <> '') and (obter_tipo_convenio(cd_convenio_p) = 3) then
	open C01;
	loop
	fetch C01 into
		cd_procedimento_adic_w,
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		--Verifica se os procedimentos adicionais são compatíveis com o principal
		if (ie_origem_proced_w = 7) and (ie_origem_proced_p = 7) then
			select	substr(coalesce(max(sus_verifica_se_compat_proc(cd_procedimento_p,ie_origem_proced_p,cd_procedimento_adic_w)),'S'),1,15)
			into STRICT	ie_permite_w
			;
			if (ie_permite_w = 'N') then

				--Não é possível alterar o convênio para SUS. Os procedimentos adicionais são incompatíveis com este procedimento.
				--É necessário realizar a exclusão dos procedimentos adicionais para realizar a troca do convênio/procedimento¿.
				ds_retorno_p := wheb_mensagem_pck.get_texto(338965, null);
			end if;
		end if;

		--Verifica se procedimento principal é compatível com todos os procedimentos adicionais
		if (coalesce(ds_retorno_p::text, '') = '') and (ie_origem_proced_w = 7) and (ie_origem_proced_p = 7) then
			select	substr(coalesce(max(sus_verifica_se_compat_proc(cd_procedimento_adic_w,ie_origem_proced_w,cd_procedimento_p)),'S'),1,15)
			into STRICT	ie_permite_w
			;

			if (ie_permite_w = 'N') then

				--Não é possível alterar o convênio para SUS. Os procedimentos adicionais são incompatíveis com este procedimento.
				--É necessário realizar a exclusão dos procedimentos adicionais para realizar a troca do convênio/procedimento¿.
				ds_retorno_p := wheb_mensagem_pck.get_texto(338965, null);
			end if;
		end if;
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_sus_compat_proc_cir (nr_seq_agenda_p bigint, nr_cirurgia_p bigint, cd_convenio_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, ds_retorno_p INOUT text) FROM PUBLIC;

