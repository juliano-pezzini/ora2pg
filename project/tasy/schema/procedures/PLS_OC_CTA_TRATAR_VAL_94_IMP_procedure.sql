-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_94_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE



_ora2pg_r RECORD;
qt_cob_duplic_w		integer;
nr_lote_w		ptu_nota_cobranca.nr_lote%type;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;

C01 CURSOR(	nr_seq_oc_cta_comb_p	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_valida_cob_duplic
	from	pls_oc_cta_val_cob_duplic a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	nr_seq_conta,
		ie_valido,
		ds_observacao
	from (	SELECT 	b.nr_sequencia nr_seq_conta,
			'S' ie_valido,
			pls_obter_obs_conta_duplic(	b.nr_seq_protocolo,
							b.nr_seq_segurado_conv,
							b.nr_sequencia,
							b.cd_guia_operadora_conv,
							b.dt_atendimento_conv) ds_observacao
			from 	pls_conta_imp b
			where 	exists (select	1
					from	pls_oc_cta_selecao_imp a
					where	a.nr_id_transacao = nr_id_transacao_pc
					and	a.ie_valido = 'S'
					and	a.nr_seq_conta = b.nr_sequencia)
		) alias3
	where	coalesce(ds_observacao, 'X') <> 'X';

BEGIN
-- Deve ter a informação da regra para que seja aplicada a validação.
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then

	-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
	CALL pls_ocor_imp_pck.atualiza_campo_auxiliar('V', ie_regra_excecao_p, nr_id_transacao_p, null);

	-- Incializar as listas para cada regra.
	SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

	for r_C01_w in C01(nr_seq_combinada_p) loop

		if (coalesce(r_c01_w.ie_valida_cob_duplic, 'N') = 'S') then

			begin
				/*
					Para que o cursor retorne algo, a conta sendo validada deve estar em um protocolo onde exista uma outra(s) conta(s) com outro código de guia
					para o mesmo beneficiário e dt_atendimento. Como a validação é por duplicidade no mesmo protocolo(conforme shift + f8 da validação), apenas
					é necessário verificar o que está sendo importado.
				*/
				open C02(nr_id_transacao_p);
				loop
					fetch C02 bulk collect into tb_seq_selecao_w, tb_valido_w, tb_observacao_w
					limit pls_util_pck.qt_registro_transacao_w;
					exit when tb_seq_selecao_w.count = 0;

							CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w,
													nr_id_transacao_p,'SEQ');

							SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;

				end loop;  -- fehca o loop do c02
				close C02;
			exception
			when others then
				if (c02%isopen) then
					close c02;
				end if;
			end;
		end if;
	end loop;  -- fecha o loop do c01
	-- seta os registros que serão válidos ou inválidos após o processamento
	CALL pls_ocor_imp_pck.atualiza_campo_valido('V', 'N', ie_regra_excecao_p, null, nr_id_transacao_p, null);

end if; -- fecha o if dados regras
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_94_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

