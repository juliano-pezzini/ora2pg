-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_proposta_migrar_contrato ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_contrato_mig_w		bigint;
nr_seq_titular_w		bigint;
nr_seq_motivo_cancel_w		bigint;
nr_seq_benef_novo_w		bigint;
ds_retorno_w			varchar(255);
cd_estabelecimento_w		smallint;
cd_titular_w			varchar(10);
cd_pagador_w			varchar(10);
cd_cgc_pagador_w		varchar(14);
dt_contratacao_w		timestamp;
dt_inicio_proposta_w		timestamp;
dt_limite_utilizacao_w		timestamp;
nr_contrato_principal_w		bigint;
ie_rescindir_dependentes_w	varchar(1);
qt_beneficiarios_w		bigint;
qt_benef_inativos_w		bigint;
ie_nao_rescindir_benef_w	varchar(1);
ie_nao_rescindir_benef_param_w	varchar(1);
qt_analises_realizadas_w	bigint;
qt_registros_w			bigint;
ie_tipo_pessoa_proposta_w	varchar(10);
qt_dias_validade_analise_w	bigint;
nr_seq_contrato_pagador_w	bigint;
nr_sequencia_pagador_w		bigint;
ie_rescindir_contrato_mig_w	pls_parametros.ie_rescindir_contrato_migracao%type;
ie_gerar_benef_adesao_w		varchar(1) := 'N';
nr_seq_causa_rescisao_prop_w	pls_proposta_adesao.nr_seq_causa_rescisao%type;

C01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_pessoa_proposta,
		cd_beneficiario,
		nr_seq_beneficiario,
		nr_seq_titular,
		nr_seq_titular_contrato,
		nr_seq_pagador,
		nr_seq_inclusao_benef,
		coalesce(nr_seq_causa_rescisao,nr_seq_causa_rescisao_prop_w) nr_seq_causa_rescisao,
		dt_contratacao,
		nr_seq_subestipulante,
		nr_seq_solic_migracao
	from	pls_proposta_beneficiario
	where	nr_seq_proposta	= nr_seq_proposta_p
	and	nr_seq_plano	= nr_seq_plano_p
	and	coalesce(dt_cancelamento::text, '') = ''
	order by nr_seq_titular desc;

C02 CURSOR(	nr_seq_beneficiario_pc	pls_segurado.nr_sequencia%type,
		nr_seq_proposta_pc	pls_proposta_adesao.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_segurado_dependente
	from	pls_segurado	a
	where	a.nr_seq_titular	= nr_seq_beneficiario_pc
	and	((coalesce(a.dt_rescisao::text, '') = '') and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> ''))
	and	not exists (	SELECT	1
				from	pls_proposta_beneficiario x
				where	x.nr_seq_proposta	= nr_seq_proposta_pc
				and	x.nr_seq_beneficiario	= a.nr_sequencia);

BEGIN

select	CASE WHEN coalesce(a.cd_estipulante::text, '') = '' THEN 'PJ'  ELSE 'PF' END ,
	(	select	max(x.nr_sequencia)
		from	pls_contrato x
		where	x.nr_contrato	= a.nr_seq_contrato_mig) nr_seq_contrato_mig,
	a.cd_estabelecimento,
	a.dt_inicio_proposta,
	a.dt_limite_utilizacao,
	a.ie_rescindir_dependente,
	a.nr_seq_motivo_cancel,
	a.nr_seq_causa_rescisao
into STRICT	ie_tipo_pessoa_proposta_w,
	nr_seq_contrato_mig_w,
	cd_estabelecimento_w,
	dt_inicio_proposta_w,
	dt_limite_utilizacao_w,
	ie_rescindir_dependentes_w,
	nr_seq_motivo_cancel_w,
	nr_seq_causa_rescisao_prop_w
from	pls_proposta_adesao a
where	a.nr_sequencia	= nr_seq_proposta_p;

if (coalesce(nr_seq_motivo_cancel_w::text, '') = '') then
	begin
	select	coalesce(max(obter_valor_param_usuario(1232, 20, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w)), '')
	into STRICT	nr_seq_motivo_cancel_w
	;
	exception
	when others then
		nr_seq_motivo_cancel_w	:= '';
	end;
end if;

ie_nao_rescindir_benef_param_w	:= coalesce(obter_valor_param_usuario(1202, 93, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N');

if (coalesce(dt_limite_utilizacao_w::text, '') = '') then
	dt_limite_utilizacao_w	:= dt_inicio_proposta_w-1;
end if;

dt_limite_utilizacao_w	:= fim_dia(dt_limite_utilizacao_w);

for r_c01_w in C01 loop
	begin
	cd_titular_w		:= '';
	cd_pagador_w		:= '';
	cd_cgc_pagador_w	:= '';
	nr_seq_titular_w	:= r_c01_w.nr_seq_titular;
	dt_contratacao_w	:= r_c01_w.dt_contratacao;
	
	if (r_c01_w.nr_seq_solic_migracao IS NOT NULL AND r_c01_w.nr_seq_solic_migracao::text <> '') then --Se for migração de empresa no portal (Entre filiais), deve rescindir no contrato anterior
		ie_nao_rescindir_benef_w := 'N';
	else
		ie_nao_rescindir_benef_w := ie_nao_rescindir_benef_param_w;
	end if;
	
	--Se não houver data de contratação do beneficiário, utilizar a data da proposta
	if (coalesce(dt_contratacao_w::text, '') = '') then
		dt_contratacao_w	:= dt_inicio_proposta_w;
	end if;
	
	select	count(1)
	into STRICT	qt_analises_realizadas_w
	from	pls_analise_adesao
	where	nr_seq_pessoa_proposta	= r_c01_w.nr_seq_pessoa_proposta;
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_regra_analise_proposta
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	((ie_tipo_contratacao	= ie_tipo_pessoa_proposta_w) or (ie_tipo_contratacao = 'A'))
	and	ie_situacao		= 'A';
	
	if (qt_analises_realizadas_w > 0) and (qt_registros_w > 0) then
		select	max(qt_dias_validade_analise)
		into STRICT	qt_dias_validade_analise_w
		from	pls_regra_analise_proposta
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	((ie_tipo_contratacao	= ie_tipo_pessoa_proposta_w) or (ie_tipo_contratacao = 'A'))
		and	ie_situacao		= 'A';
		
		dt_contratacao_w	:= dt_contratacao_w + coalesce(qt_dias_validade_analise_w,0);
	end if;
	
	nr_seq_contrato_pagador_w	:= null;
	
	--Obter o pagador do beneficiário
	if (r_c01_w.nr_seq_pagador IS NOT NULL AND r_c01_w.nr_seq_pagador::text <> '') then
		select	cd_cgc_pagador,
			cd_pagador,
			nr_seq_contrato_pagador
		into STRICT	cd_cgc_pagador_w,
			cd_pagador_w,
			nr_seq_contrato_pagador_w
		from	pls_proposta_pagador
		where	nr_sequencia	= r_c01_w.nr_seq_pagador;
	end if;
	
	--Se não achou o pagador, buscar do contrato a sequencia
	if (nr_seq_contrato_pagador_w IS NOT NULL AND nr_seq_contrato_pagador_w::text <> '') then
		select	max(nr_sequencia)
		into STRICT	nr_sequencia_pagador_w
		from	pls_contrato_pagador
		where	nr_sequencia		= nr_seq_contrato_pagador_w;
	else
		select	max(nr_sequencia)
		into STRICT	nr_sequencia_pagador_w
		from	pls_contrato_pagador
		where	((cd_pessoa_fisica = cd_pagador_w) or (cd_cgc = cd_cgc_pagador_w))
		and	nr_seq_contrato	= nr_seq_contrato_p;
			
		if (coalesce(nr_sequencia_pagador_w::text, '') = '') then
			select	max(nr_contrato_principal)
			into STRICT	nr_contrato_principal_w
			from	pls_contrato
			where	nr_sequencia	= nr_seq_contrato_p;
			
			if (coalesce(nr_contrato_principal_w,0) > 0) then
				select	max(nr_sequencia)
				into STRICT	nr_sequencia_pagador_w
				from	pls_contrato_pagador
				where	((cd_pessoa_fisica = cd_pagador_w) or (cd_cgc = cd_cgc_pagador_w))
				and	nr_seq_contrato	= nr_contrato_principal_w;
			end if;
		end if;
	end if;
	
	--Obter o titular do contrato
	if (r_c01_w.nr_seq_titular_contrato IS NOT NULL AND r_c01_w.nr_seq_titular_contrato::text <> '') then
		nr_seq_titular_w	:= r_c01_w.nr_seq_titular_contrato;
	elsif (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		select	cd_beneficiario
		into STRICT	cd_titular_w
		from	pls_proposta_beneficiario
		where	nr_sequencia	= nr_seq_titular_w;
		
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_titular_w
		from	pls_segurado	a
		where	a.cd_pessoa_fisica	= cd_titular_w
		and	a.nr_proposta_adesao	= nr_seq_proposta_p
		and	coalesce(a.nr_seq_titular::text, '') = '';
	end if;
	
	CALL pls_proposta_gerar_log(nr_seq_proposta_p, nr_seq_contrato_p, nr_seq_plano_p,
						'MC', r_c01_w.nr_seq_beneficiario, nr_seq_titular_w,
						null, nm_usuario_p);
	
	if (r_c01_w.nr_seq_beneficiario IS NOT NULL AND r_c01_w.nr_seq_beneficiario::text <> '') then
		SELECT * FROM pls_migrar_segurado_contrato(nr_seq_contrato_p, r_c01_w.nr_seq_beneficiario, nr_seq_titular_w, nr_sequencia_pagador_w, r_c01_w.nr_seq_pessoa_proposta, 'N', dt_contratacao_w, dt_limite_utilizacao_w, nr_seq_motivo_cancel_w, null, null, ie_nao_rescindir_benef_w, nm_usuario_p, cd_estabelecimento_w, r_c01_w.nr_seq_causa_rescisao, null, null, null, null, 0, 0, 'N', r_c01_w.nr_seq_subestipulante, nr_seq_benef_novo_w, ds_retorno_w) INTO STRICT nr_seq_benef_novo_w, ds_retorno_w;
		
		begin
		update	pls_declaracao_segurado
		set	nr_seq_segurado		= nr_seq_benef_novo_w
		where	nr_seq_proposta_adesao	= nr_seq_proposta_p
		and	cd_pessoa_fisica	= r_c01_w.cd_beneficiario;
		exception
		when others then
			null;
		end;
		
		--Rescindir os dependentes caso não estejam na proposta
		if (ie_rescindir_dependentes_w	= 'S') and (ie_nao_rescindir_benef_w = 'N') then
			for r_c02_w in C02(r_c01_w.nr_seq_beneficiario,nr_seq_proposta_p) loop
				begin
				CALL pls_rescindir_segurado(r_c02_w.nr_seq_segurado_dependente,fim_dia(dt_inicio_proposta_w-1),dt_limite_utilizacao_w,nr_seq_motivo_cancel_w,'Gerado ao migrar o titular para outro contrato',
							cd_estabelecimento_w,nm_usuario_p,'B','N',null, null);
				end;
			end loop; --C02
		end if;
		
		CALL pls_gravar_histor_prop_benef(r_c01_w.nr_seq_pessoa_proposta,clock_timestamp(),'11','Beneficiário migrado',nm_usuario_p);
	elsif (coalesce(r_c01_w.nr_seq_beneficiario::text, '') = '') then
		ie_gerar_benef_adesao_w := 'S';
	end if;
	
	--Atualizar o status na inclusão do beneficiário 
	update	pls_inclusao_beneficiario
	set	ie_status	= 'B'
	where	nr_sequencia	= r_c01_w.nr_seq_inclusao_benef;
	end;
end loop; --C01
if (ie_gerar_benef_adesao_w = 'S') then
	CALL pls_proposta_gerar_benef(nr_seq_proposta_p, nr_seq_plano_p, nr_seq_contrato_p, nm_usuario_p);
end if;

--Rescindir o contrato caso todos os beneficiários migrados estajam rescindidos dentro do contrato
if (coalesce(nr_seq_contrato_mig_w,0) > 0) then
	select	coalesce(max(ie_rescindir_contrato_migracao),'N')
	into STRICT	ie_rescindir_contrato_mig_w
	from	pls_parametros
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	select	count(1)
	into STRICT	qt_beneficiarios_w
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_mig_w;
	
	select	count(1)
	into STRICT	qt_benef_inativos_w
	from	pls_segurado
	where	nr_seq_contrato	= nr_seq_contrato_mig_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	and	(dt_rescisao IS NOT NULL AND dt_rescisao::text <> '');
	
	if (qt_beneficiarios_w > 0) and (qt_benef_inativos_w = qt_beneficiarios_w) and (ie_rescindir_contrato_mig_w = 'S') then
		update	pls_contrato
		set	dt_rescisao_contrato	= dt_limite_utilizacao_w,
			ie_situacao		= '3',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			nr_seq_motivo_rescisao	= nr_seq_motivo_cancel_w,
			dt_limite_utilizacao	= dt_limite_utilizacao_w,
			nr_seq_causa_rescisao	= nr_seq_causa_rescisao_prop_w
		where	nr_sequencia		= nr_seq_contrato_mig_w
		and	coalesce(dt_rescisao_contrato::text, '') = ''; /*Se o contrato já estiver rescindido, não altera */
	end if;
	
	CALL pls_preco_beneficiario_pck.atualizar_desconto_benef(nr_seq_contrato_mig_w, clock_timestamp(), null, 'N', nm_usuario_p, cd_estabelecimento_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_proposta_migrar_contrato ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text) FROM PUBLIC;

