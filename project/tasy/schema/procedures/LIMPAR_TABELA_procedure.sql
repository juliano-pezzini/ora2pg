-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE limpar_tabela (nm_tabela_p text, ds_sql_limpeza_p text, qt_dias_p bigint, ie_opcao_p text default null, nm_tabela_destino_p text default null) AS $body$
DECLARE


qt_registros_w		bigint;
qt_registros_del_w	bigint;
ds_comando_w		varchar(2000);
ds_where_w		varchar(255);
c001			integer;
ds_erro_w		varchar(512);
nm			varchar(50);
nm_campos_w		varchar(2000);
cd_cod_Oracle		varchar(20);


BEGIN

ds_where_w := ' where 1 = 1 ';
if (ds_sql_limpeza_p IS NOT NULL AND ds_sql_limpeza_p::text <> '') then
	begin

		CALL gravar_processo_longo('Ação : count -> ' || nm_tabela_p,'LIMPAR_TABELA',-1);
		ds_where_w	:= ds_where_w || ds_sql_limpeza_p;
		ds_comando_w	:= 	'select count(*) from ' || nm_tabela_p || ' a ' || ds_where_w;
		qt_registros_w := OBTER_VALOR_DINAMICO_BV(ds_comando_w, 'QT_DIAS='||qt_dias_p, qt_registros_w);

		CALL gravar_processo_longo('Ação : remove -> ('||qt_registros_w||')' || nm_tabela_p,'LIMPAR_TABELA',-1);
		if (ie_opcao_p = 'M') and (nm_tabela_destino_p IS NOT NULL AND nm_tabela_destino_p::text <> '') and (position(nm_tabela_p in nm_tabela_destino_p) > 0) then

			for nm in (SELECT column_name from user_tab_columns where table_name = nm_tabela_destino_p) loop
				begin
				nm_campos_w := nm_campos_w || nm.column_name || ',';
				end;
			end	loop;
			nm_campos_w := substr(nm_campos_w,1,length(nm_campos_w)-1);

			ds_comando_w := 'insert into ' || nm_tabela_destino_p || '(' || nm_campos_w || ') ' ||
					'(select ' || nm_campos_w || ' from ' || nm_tabela_p || ds_where_w || ' and rownum < 50000'  || ')';

			--insert into teste (ds_teste) values (ds_comando_w); commit;
			CALL Exec_sql_Dinamico_bv('TASY', ds_comando_w, 'QT_DIAS=' || qt_dias_p);
		end	if;

		ds_comando_w := 'delete from ' || nm_tabela_p	|| ' a ' || ds_where_w || ' and rownum < 50000';

		begin
			Select Pcv.Version version
			Into STRICT   cd_cod_Oracle
			From   Product_Component_Version Pcv
			Where  Upper(Pcv.Product) Like 'ORACLE DATABASE%'
			And (Pcv.Version Like '10.2.0.4%'
			or      Pcv.Version Like '10.2.0.5%')  LIMIT 1;
		Exception
			When 	no_data_found then
				cd_cod_Oracle := null;
		end;

		if (coalesce(cd_cod_Oracle::text, '') = '') then
			c001 := dbms_sql.open_cursor;
			dbms_sql.parse(c001, ds_comando_w, dbms_sql.v7);
			DBMS_SQL.BIND_VARIABLE(C001, 'QT_DIAS',qt_dias_p);
			qt_registros_del_w := dbms_sql.execute(c001);
			dbms_sql.close_cursor(c001);
		else
		        EXECUTE ds_comando_w USING qt_dias_p;
			GET DIAGNOSTICS qt_registros_del_w = ROW_COUNT;
		end	if;
		commit;

	exception
	when others then
		ds_erro_w := substr(SQLERRM(SQLSTATE),1,512);
		CALL tratar_erro_banco(ds_erro_w);
		CALL GRAVAR_LOG_TASY(88936,'LIMPAR_TABELA '|| nm_tabela_p || ' ' || ds_erro_w, 'TASY');
	end;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE limpar_tabela (nm_tabela_p text, ds_sql_limpeza_p text, qt_dias_p bigint, ie_opcao_p text default null, nm_tabela_destino_p text default null) FROM PUBLIC;

