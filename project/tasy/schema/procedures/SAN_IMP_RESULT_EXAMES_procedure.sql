-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_imp_result_exames ( cd_barras_p text, dt_resultado_p timestamp, cd_resultado_p text, nm_usuario_p text, ds_invalidos_p INOUT text) AS $body$
DECLARE


lista_exames_w		dbms_sql.varchar2_table;
nr_seq_exame_lote_w	bigint;
nr_seq_exame_w		bigint;
ds_resultado_w		varchar(255);
cd_resultado_w		varchar(4);
dt_liberacao_w		timestamp;
cd_barras_w		varchar(13);

c01 CURSOR FOR
	SELECT	nr_seq_exame, ds_resultado
	from 	san_resultado_maestro
	where 	cd_resultado = cd_resultado_w;

c02 CURSOR FOR
	SELECT	dt_liberacao
	from	san_exame_realizado
	where 	nr_seq_exame_lote = nr_seq_exame_lote_w
	and	nr_seq_exame = nr_seq_exame_w;
BEGIN
	if (cd_barras_p IS NOT NULL AND cd_barras_p::text <> '') then
		lista_exames_w := obter_lista_string(cd_resultado_p, ',');
		ds_invalidos_p := '';
		cd_barras_w := substr(replace(cd_barras_p, '=', ''), 1, 13);

		-- Registro de Reserva (inicia com 'R')
		if (substr(cd_barras_w, 1, 1) = 'R') then

			select 	max(nr_sequencia)
			into STRICT	nr_seq_exame_lote_w
			from	san_exame_lote a
			where	a.nr_seq_reserva = substr(cd_barras_w, 2, length(cd_barras_w) - 1);

			if (coalesce(nr_seq_exame_lote_w::text, '') = '') then
				ds_invalidos_p := '01=' || cd_barras_w;
				CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794795)||' ' || cd_barras_w, nm_usuario_p);
			else

				for	i in lista_exames_w.first..lista_exames_w.last loop
					cd_resultado_w := lista_exames_w(i);

					open c01;
					fetch c01 into 	nr_seq_exame_w,
							ds_resultado_w;

					if (C01%notfound) then
						ds_invalidos_p := ds_invalidos_p || '05=' || cd_resultado_w || '//';
						CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794830,
											'CD_RESULTADO='||cd_resultado_w||
											';CD_BARRAS='||cd_barras_w), nm_usuario_p);
					elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
						open c02;
						fetch c02 into 	dt_liberacao_w;

						if (C02%notfound) then
							ds_invalidos_p := ds_invalidos_p || '06=' || cd_resultado_w || ',' || nr_seq_exame_w || '//';
							CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794832,
											'NR_SEQ_EXAME='||nr_seq_exame_w||
											';CD_RESULTADO='||cd_resultado_w||
											';CD_BARRAS='||cd_barras_w), nm_usuario_p);
						elsif (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
							ds_invalidos_p := ds_invalidos_p || '07=' || nr_seq_exame_w || ',' || dt_liberacao_w || '//';
							CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794833,
											'NR_SEQ_EXAME='||nr_seq_exame_w||
											';CD_BARRAS='||cd_barras_w||
											';DT_LIBERACAO='||dt_liberacao_w), nm_usuario_p);
						else
							update	san_exame_realizado set
								ds_resultado = ds_resultado_w,
								dt_realizado = coalesce(dt_resultado_p,clock_timestamp())
							where 	nr_seq_exame_lote = nr_seq_exame_lote_w
							and	nr_seq_exame = nr_seq_exame_w
							and	coalesce(dt_liberacao::text, '') = '';
						end if;
						close c02;
					end if;
					close c01;
				end loop;


			end if;

		-- Registro de Transfusão (inicia com 'T')
		elsif (substr(cd_barras_w, 1, 1) = 'T') then

			select 	max(nr_sequencia)
			into STRICT	nr_seq_exame_lote_w
			from	san_exame_lote a
			where	a.nr_seq_transfusao = substr(cd_barras_w, 2, length(cd_barras_w) - 1);

			if (coalesce(nr_seq_exame_lote_w::text, '') = '') then
				ds_invalidos_p := '01=' || cd_barras_w;
				CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794795)||' ' || cd_barras_w, nm_usuario_p);
			else

				for	i in lista_exames_w.first..lista_exames_w.last loop
					cd_resultado_w := lista_exames_w(i);

					open c01;
					fetch c01 into 	nr_seq_exame_w,
							ds_resultado_w;

					if (C01%notfound) then
						ds_invalidos_p := ds_invalidos_p || '08=' || cd_resultado_w || '//';
						CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794834,
											'CD_RESULTADO='||cd_resultado_w||
											';CD_BARRAS='||cd_barras_w), nm_usuario_p);
					elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
						open c02;
						fetch c02 into 	dt_liberacao_w;

						if (C02%notfound) then
							ds_invalidos_p := ds_invalidos_p || '09=' || cd_resultado_w || ',' || nr_seq_exame_w || '//';
							CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794835,
											'NR_SEQ_EXAME='||nr_seq_exame_w||
											';CD_RESULTADO='||cd_resultado_w||
											';CD_BARRAS='||cd_barras_w), nm_usuario_p);
						elsif (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
							ds_invalidos_p := ds_invalidos_p || '10=' || nr_seq_exame_w || ',' || dt_liberacao_w || '//';
							CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794836,
											'NR_SEQ_EXAME='||nr_seq_exame_w||
											';CD_BARRAS='||cd_barras_w||
											';DT_LIBERACAO='||dt_liberacao_w), nm_usuario_p);
						else
							update	san_exame_realizado set
								ds_resultado = ds_resultado_w,
								dt_realizado = coalesce(dt_resultado_p,clock_timestamp())
							where 	nr_seq_exame_lote = nr_seq_exame_lote_w
							and	nr_seq_exame = nr_seq_exame_w
							and	coalesce(dt_liberacao::text, '') = '';
						end if;
						close c02;
					end if;
					close c01;
				end loop;


			end if;
		-- Registro de Doação / ISBT (tem sempre 13 dígitos)
		elsif (Length(trim(both cd_barras_w)) = 13) then

			select 	max(a.nr_sequencia)
			into STRICT	nr_seq_exame_lote_w
			from	san_exame_lote a,
				san_doacao b
			where	a.nr_seq_doacao = b.nr_sequencia
			and	obter_isbt_doador(a.nr_seq_doacao, NULL,'I')  = cd_barras_w;

			if (coalesce(nr_seq_exame_lote_w::text, '') = '') then
				ds_invalidos_p := '01=' || cd_barras_w;
				CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794795)||' ' || cd_barras_w, nm_usuario_p);
			else

				for	i in lista_exames_w.first..lista_exames_w.last loop
					cd_resultado_w := lista_exames_w(i);

					open c01;
					fetch c01 into 	nr_seq_exame_w,
							ds_resultado_w;

					if (C01%notfound) then
						ds_invalidos_p := ds_invalidos_p || '02=' || cd_resultado_w || '//';
						CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794837,
											'CD_RESULTADO='||cd_resultado_w||
											';CD_BARRAS='||cd_barras_w), nm_usuario_p);
					elsif (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then
						open c02;
						fetch c02 into 	dt_liberacao_w;

						if (C02%notfound) then
							ds_invalidos_p := ds_invalidos_p || '03=' || cd_resultado_w || ',' || nr_seq_exame_w || '//';
							CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794838,
											'NR_SEQ_EXAME='||nr_seq_exame_w||
											';CD_RESULTADO='||cd_resultado_w||
											';CD_BARRAS='||cd_barras_w), nm_usuario_p);
						elsif (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then
							ds_invalidos_p := ds_invalidos_p || '04=' || nr_seq_exame_w || ',' || dt_liberacao_w || '//';
							CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794839,
											'NR_SEQ_EXAME='||nr_seq_exame_w||
											';CD_BARRAS='||cd_barras_w||
											';DT_LIBERACAO='||dt_liberacao_w), nm_usuario_p);
						else
							update	san_exame_realizado set
								ds_resultado = ds_resultado_w,
								dt_realizado = coalesce(dt_resultado_p,clock_timestamp())
							where 	nr_seq_exame_lote = nr_seq_exame_lote_w
							and	nr_seq_exame = nr_seq_exame_w
							and	coalesce(dt_liberacao::text, '') = '';
						end if;
						close c02;
					end if;
					close c01;
				end loop;


			end if;

		else
			ds_invalidos_p := '01=' || cd_barras_w;
			CALL gravar_log_tasy(9245, wheb_mensagem_pck.get_texto(794795)||' ' || cd_barras_w, nm_usuario_p);
		end if;

	end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_imp_result_exames ( cd_barras_p text, dt_resultado_p timestamp, cd_resultado_p text, nm_usuario_p text, ds_invalidos_p INOUT text) FROM PUBLIC;

