-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_tributo_pp ( nr_seq_lote_p bigint, nr_seq_trib_item_p bigint, nr_seq_atualizacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, qt_movimento_p INOUT bigint) AS $body$
DECLARE


qt_movimento_w				bigint;
nr_seq_esquema_w			pls_esquema_contabil.nr_sequencia%type;
cd_conta_debito_w			conta_contabil.cd_conta_contabil%type;
cd_conta_credito_w			conta_contabil.cd_conta_contabil%type;
cd_centro_custo_w			centro_custo.cd_centro_custo%type;
cd_classificacao_debito_w		conta_contabil.cd_classificacao_atual%type;
cd_classificacao_credito_w		conta_contabil.cd_classificacao_atual%type;
cd_classificacao_item_w			conta_contabil.cd_classificacao_atual%type;
cd_historico_padrao_w			historico_padrao.cd_historico%type;
cd_empresa_w				empresa.cd_empresa%type;
ie_tipo_evento_w			pls_evento.ie_tipo_evento%type;
					
c_tributos CURSOR FOR
	SELECT	p.ie_tipo_relacao,
		p.nr_seq_tipo_prestador,
		t.ie_tipo_ptu ie_tipo_prestador,
		p.nr_sequencia nr_seq_prestador,
		b.cd_tributo cd_tributo,
		r.nr_sequencia nr_seq_tributo,
		p.cd_cgc,
		p.cd_pessoa_fisica,
		l.dt_mes_competencia,
		i.ie_tipo_item,
		i.cd_conta_credito,
		i.cd_conta_debito,
		i.cd_classif_credito,
		i.cd_classif_debito,
		i.cd_centro_custo,
		i.nr_seq_resumo,
		i.nr_seq_conta,
		i.nr_seq_evento,
		i.nr_sequencia nr_seq_item_lote
	FROM pls_pp_base_atual_trib r, pls_pp_lote l, pls_pp_item_lote i, pls_pp_valor_trib_pessoa b, pls_prestador p
LEFT OUTER JOIN pls_tipo_prestador t ON (p.nr_seq_tipo_prestador = t.nr_sequencia)
WHERE b.nr_sequencia			= r.nr_seq_trib_pessoa and l.nr_sequencia			= r.nr_seq_lote and i.nr_sequencia			= r.nr_seq_item_lote and p.nr_sequencia			= b.nr_seq_prestador  and ((r.nr_sequencia		= nr_seq_trib_item_p) or (coalesce(nr_seq_trib_item_p::text, '') = '')) and l.nr_sequencia			= nr_seq_lote_p and r.vl_tributo			<> 0;

vet_tributos_w		c_tributos%rowtype;
	
c_esquema CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_historico_padrao
	from	pls_esquema_contabil	a
	where	a.ie_tipo_regra		= 'IP'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	vet_tributos_w.dt_mes_competencia between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,vet_tributos_w.dt_mes_competencia)
	and	((a.nr_seq_prestador = vet_tributos_w.nr_seq_prestador) or (coalesce(a.nr_seq_prestador::text, '') = ''))
	and	((a.nr_seq_tipo_prestador = vet_tributos_w.nr_seq_tipo_prestador) or (coalesce(a.nr_seq_tipo_prestador::text, '') = ''))
	and	((a.ie_tipo_ptu = vet_tributos_w.ie_tipo_prestador) or (coalesce(a.ie_tipo_ptu::text, '') = ''))
	and	((a.ie_tipo_relacao = vet_tributos_w.ie_tipo_relacao) or (coalesce(a.ie_tipo_relacao::text, '') = ''))
	and	((a.cd_tributo = vet_tributos_w.cd_tributo) or (coalesce(a.cd_tributo::text, '') = ''))
	and	((a.nr_seq_evento = vet_tributos_w.nr_seq_evento) or (coalesce(a.nr_seq_evento::text, '') = ''))
	order by
		coalesce(a.cd_tributo,0),
		coalesce(a.ie_tipo_ptu,' '),
		coalesce(a.ie_tipo_relacao,' '),
		coalesce(a.nr_seq_evento, 0),
		coalesce(a.dt_inicio_vigencia,clock_timestamp());

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema	= nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;
		
vet_segmentacao_w	c_segmentacao%rowtype;


BEGIN

select	max(cd_empresa)
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

qt_movimento_w	:= qt_movimento_p;

open c_tributos;
loop
fetch c_tributos into
	vet_tributos_w;
EXIT WHEN NOT FOUND; /* apply on c_tributos */
	begin
	nr_seq_esquema_w	:= null;
	open c_esquema;
	loop
	fetch c_esquema into
		nr_seq_esquema_w,
		cd_historico_padrao_w;
	EXIT WHEN NOT FOUND; /* apply on c_esquema */
	end loop;
	close c_esquema;
	
	cd_classificacao_debito_w	:= '';
	cd_classificacao_credito_w	:= '';
	cd_conta_credito_w		:= null;
	cd_conta_debito_w		:= null;
	cd_centro_custo_w		:= null;
	
	open c_segmentacao;
	loop
	fetch c_segmentacao into
		vet_segmentacao_w;
	EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
		begin
		cd_classificacao_item_w	:= null;
		
		if (vet_segmentacao_w.ie_debito_credito = 'C') then /* Classificacao CREDITO */
			if (vet_segmentacao_w.ie_codificacao = 'CR') then /* Codigo reduzido */
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= vet_segmentacao_w.cd_conta_contabil;
				
				cd_conta_credito_w	:= vet_segmentacao_w.cd_conta_contabil;
			elsif (vet_segmentacao_w.ie_codificacao = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vet_segmentacao_w.vl_fixo;
			elsif (vet_segmentacao_w.ie_codificacao = 'TR') then /* Tipo de relacao com a OPS */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(vet_tributos_w.ie_tipo_relacao);
			elsif (vet_segmentacao_w.ie_codificacao = 'JP') then /* Conta de pagamento da pessoa do prestador */
			
				if (coalesce(vet_tributos_w.cd_cgc,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_credito_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc	= vet_tributos_w.cd_cgc
					and	a.cd_empresa	= cd_empresa_w
					and	a.ie_tipo_conta	= 'P'
					and	vet_tributos_w.dt_mes_competencia between coalesce(a.dt_inicio_vigencia, vet_tributos_w.dt_mes_competencia) and coalesce(a.dt_fim_vigencia, vet_tributos_w.dt_mes_competencia);
				elsif (coalesce(vet_tributos_w.cd_pessoa_fisica,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_credito_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica 	= vet_tributos_w.cd_pessoa_fisica
					and	a.cd_empresa		= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta		= 'P'
					and	vet_tributos_w.dt_mes_competencia between coalesce(a.dt_inicio_vigencia, vet_tributos_w.dt_mes_competencia) and coalesce(a.dt_fim_vigencia, vet_tributos_w.dt_mes_competencia);
				end if;
				
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_credito_w;
				
			elsif (vet_segmentacao_w.ie_codificacao in ('CC','CD')) then /* Conta credito original (item da conta)  / Conta debito original (item da conta) */
				if (vet_tributos_w.ie_tipo_item not in ('1','8')) then /*Producao medica e recurso de glosa*/
				
					if (vet_segmentacao_w.ie_codificacao = 'CC') then
						cd_classificacao_credito_w	:= vet_tributos_w.cd_classif_credito;
						cd_conta_credito_w		:= vet_tributos_w.cd_conta_credito;
					elsif (vet_segmentacao_w.ie_codificacao = 'CD') then
						cd_classificacao_credito_w	:= vet_tributos_w.cd_classif_debito;
						cd_conta_credito_w		:= vet_tributos_w.cd_conta_debito;
					end if;
				else
					if (vet_segmentacao_w.ie_codificacao = 'CC') then
						cd_classificacao_credito_w	:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CLC'),1,40);
						cd_conta_credito_w		:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CC'),1,20);
					elsif (vet_segmentacao_w.ie_codificacao = 'CD') then
						cd_classificacao_credito_w	:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CLD'),1,40);
						cd_conta_credito_w		:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CD'),1,20);
					end if;					
				end if;
				
				select	max(a.ie_tipo_evento)
				into STRICT	ie_tipo_evento_w
				from	pls_evento a
				where	a.nr_sequencia	= vet_tributos_w.nr_seq_evento;
				
				if (ie_tipo_evento_w = 'F') or (vet_tributos_w.ie_tipo_item = '6') then /* Apropriacao pagamento */
					if (coalesce(vet_tributos_w.cd_centro_custo,0) <> 0) then
						cd_centro_custo_w	:= vet_tributos_w.cd_centro_custo;
					end if;
				end if;
			end if;
			
			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (vet_segmentacao_w.ds_mascara = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (vet_segmentacao_w.ds_mascara = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (vet_segmentacao_w.ds_mascara = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;
				
				cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
			end if;
		elsif (vet_segmentacao_w.ie_debito_credito = 'D') then /* Classificacao DEBITO */
			if (vet_segmentacao_w.ie_codificacao = 'CR') then /* Codigo reduzido */
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= vet_segmentacao_w.cd_conta_contabil;
				
				cd_conta_debito_w	:= vet_segmentacao_w.cd_conta_contabil;
			elsif (vet_segmentacao_w.ie_codificacao = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vet_segmentacao_w.vl_fixo;
			elsif (vet_segmentacao_w.ie_codificacao = 'TR') then /* Tipo de relacao com a OPS */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(vet_tributos_w.ie_tipo_relacao);
			elsif (vet_segmentacao_w.ie_codificacao = 'JP') then /* Conta de pagamento da pessoa do prestador */
				if (coalesce(vet_tributos_w.cd_cgc,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_debito_w
					from	pessoa_jur_conta_cont a
					where	a.cd_cgc	= vet_tributos_w.cd_cgc
					and	a.cd_empresa	= cd_empresa_w
					and	a.ie_tipo_conta	= 'P'
					and	vet_tributos_w.dt_mes_competencia between coalesce(a.dt_inicio_vigencia, vet_tributos_w.dt_mes_competencia) and coalesce(a.dt_fim_vigencia, vet_tributos_w.dt_mes_competencia);
				elsif (coalesce(vet_tributos_w.cd_pessoa_fisica,0) <> 0) then
					select	max(cd_conta_contabil)
					into STRICT	cd_conta_debito_w
					from	pessoa_fisica_conta_ctb	a
					where	a.cd_pessoa_fisica 	= vet_tributos_w.cd_pessoa_fisica
					and	a.cd_empresa		= cd_empresa_w
					and	coalesce(a.cd_estabelecimento,cd_estabelecimento_p)	= cd_estabelecimento_p
					and	a.ie_tipo_conta		= 'P'
					and	vet_tributos_w.dt_mes_competencia between coalesce(a.dt_inicio_vigencia, vet_tributos_w.dt_mes_competencia) and coalesce(a.dt_fim_vigencia, vet_tributos_w.dt_mes_competencia);
				end if;
				
				select	max(cd_classificacao_atual)
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil = vet_segmentacao_w.cd_conta_contabil;
			elsif (vet_segmentacao_w.ie_codificacao in ('CC','CD')) then /* Conta credito original (item da conta)  / Conta debito original (item da conta) */
				if (vet_tributos_w.ie_tipo_item not in ('1','8')) then /*Producao medica e recurso de glosa*/
				
					if (vet_segmentacao_w.ie_codificacao = 'CC') then
						cd_classificacao_debito_w	:= vet_tributos_w.cd_classif_credito;
						cd_conta_debito_w		:= vet_tributos_w.cd_conta_credito;
					elsif (vet_segmentacao_w.ie_codificacao = 'CD') then
						cd_classificacao_debito_w	:= vet_tributos_w.cd_classif_debito;
						cd_conta_debito_w		:= vet_tributos_w.cd_conta_debito;
					end if;					
				else
					if (vet_segmentacao_w.ie_codificacao = 'CC') then
						cd_classificacao_debito_w	:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CLC'),1,40);
						cd_conta_debito_w		:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CC'),1,20);
					elsif (vet_segmentacao_w.ie_codificacao = 'CD') then
						cd_classificacao_debito_w	:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CLD'),1,40);
						cd_conta_debito_w		:= substr(pls_obter_dados_contab_resumo(vet_tributos_w.nr_seq_item_lote,'CD'),1,20);
					end if;
				end if;
				
				select	max(a.ie_tipo_evento)
				into STRICT	ie_tipo_evento_w
				from	pls_evento a
				where	a.nr_sequencia	= vet_tributos_w.nr_seq_evento;
				
				if (ie_tipo_evento_w = 'F') or (vet_tributos_w.ie_tipo_item = '6') then /* Apropriacao pagamento */
					if (coalesce(vet_tributos_w.cd_centro_custo,0) <> 0) then
						cd_centro_custo_w	:= vet_tributos_w.cd_centro_custo;
					end if;
				end if;
			end if;
			
			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (vet_segmentacao_w.ds_mascara = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (vet_segmentacao_w.ds_mascara = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (vet_segmentacao_w.ds_mascara = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;
				
				cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
			end if;
		end if;
		end;
	end loop;
	close c_segmentacao;
	
	/* Remover o ultimo ponto da classificacao */

	if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
		cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
	end if;
	
	if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
		cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
	end if;

	if (coalesce(cd_conta_credito_w::text, '') = '') then
		cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,vet_tributos_w.dt_mes_competencia,cd_estabelecimento_p);
	end if;

	if (coalesce(cd_conta_debito_w::text, '') = '') then
		cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,vet_tributos_w.dt_mes_competencia,cd_estabelecimento_p);
	end if;
	
	if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
		if (coalesce(nr_seq_esquema_w::text, '') = '') then
			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
							1,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							nr_seq_esquema_w,
							null,
							null,
							null,
							null,
							null,
							null,
							vet_tributos_w.nr_seq_tributo);
		elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
							2,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							nr_seq_esquema_w,
							null,
							null,
							null,
							null,
							null,
							null,
							vet_tributos_w.nr_seq_tributo);
		end if;
	end if;

	begin	
		update	pls_pp_base_atual_trib
		set	cd_conta_credito	= cd_conta_credito_w,
			cd_conta_debito		= cd_conta_debito_w,
			cd_historico		= cd_historico_padrao_w,
			nr_seq_esquema		= nr_seq_esquema_w,
			cd_classif_credito	= cd_classificacao_credito_w,
			cd_classif_debito	= cd_classificacao_debito_w,
			cd_centro_custo		= coalesce(cd_centro_custo_w,cd_centro_custo)
		where	nr_sequencia		= vet_tributos_w.nr_seq_tributo;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(192485, 'NR_SEQ_TRIB=' || vet_tributos_w.nr_seq_tributo);
	end;
	
	qt_movimento_w	:= qt_movimento_w + 1;
	
	if (mod(qt_movimento_w, 200) = 0) then
		commit;
	end if;
	end;
end loop;
close c_tributos;

qt_movimento_p	:= qt_movimento_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_tributo_pp ( nr_seq_lote_p bigint, nr_seq_trib_item_p bigint, nr_seq_atualizacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, qt_movimento_p INOUT bigint) FROM PUBLIC;

