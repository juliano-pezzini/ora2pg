-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_transf_atend_pa (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
cd_tipo_acomodacao_w	smallint;
dt_entrada_unidade_w	timestamp;
parametro_158_PA_w		varchar(5);
cd_perfil_w				bigint;
cd_setor_atendimento_w	bigint;
cd_setor_param_w	bigint;

C01 CURSOR FOR 
	SELECT	a.cd_unidade_basica, 
		a.cd_unidade_compl, 
		a.cd_tipo_acomodacao 
	from	tipo_acomodacao b, unidade_atendimento a 
	where	a.cd_setor_atendimento	= cd_setor_atendimento_w 
	and	a.cd_tipo_acomodacao	= b.cd_tipo_acomodacao 
	and	b.ie_sem_acomodacao = 'S' 
	and	ie_status_unidade	= 'L' 
	and	coalesce(a.ie_situacao,'A')	= 'A' 
	and	coalesce(a.nr_atendimento::text, '') = '';


BEGIN 
 
cd_perfil_w	:= Obter_perfil_ativo;
cd_setor_param_w := obter_param_usuario(935, 57, cd_perfil_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, cd_setor_param_w);
 
if (coalesce(cd_setor_param_w,0) > 0 ) then 
	cd_setor_atendimento_w := cd_setor_param_w;
else 
	cd_setor_atendimento_w := cd_setor_atendimento_p;
end if;
 
open C01;
loop 
fetch C01 into	 
	cd_unidade_basica_w,	 
	cd_unidade_compl_w, 
	cd_tipo_acomodacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	exit;
end loop;
close C01;
		 
if (cd_unidade_basica_w IS NOT NULL AND cd_unidade_basica_w::text <> '') then 
 
	parametro_158_PA_w := coalesce(Obter_Valor_Param_Usuario(935,158, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento),'S');
	 
	select	max(dt_entrada_unidade) 
	into STRICT	dt_entrada_unidade_w 
	from	atend_paciente_unidade 
	where	nr_atendimento	= nr_atendimento_p;
 
	if (parametro_158_PA_w <> 'S') then 
	 
		if (dt_entrada_unidade_w IS NOT NULL AND dt_entrada_unidade_w::text <> '') then 
			dt_entrada_unidade_w	:= (dt_entrada_unidade_w + 86400/86399) - 1;
		else 
			dt_entrada_unidade_w	:= clock_timestamp();
		end if;
	else 
		if (dt_entrada_unidade_w IS NOT NULL AND dt_entrada_unidade_w::text <> '') and (dt_entrada_unidade_w = clock_timestamp()) then 
			dt_entrada_unidade_w	:= clock_timestamp() + (1/60/60/24); -- adiciona 1 segundo 
		else
			dt_entrada_unidade_w	:= clock_timestamp();
		end if;
	end if;
 
	CALL gerar_transferencia_paciente(nr_atendimento_p, cd_setor_atendimento_w, cd_unidade_basica_w, cd_unidade_compl_w, cd_tipo_acomodacao_w, 0, null, null, nm_usuario_p, dt_entrada_unidade_w);
 
end if;
 
COMMIT;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_transf_atend_pa (nr_atendimento_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

