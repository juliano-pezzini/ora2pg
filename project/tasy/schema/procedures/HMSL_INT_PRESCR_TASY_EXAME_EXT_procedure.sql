-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hmsl_int_prescr_tasy_exame_ext ( nr_prescricao_p bigint, dir_p text, nm_arquivo_p text) AS $body$
DECLARE


arq_texto_w		utl_file.file_type;
linha_w			varchar(3);
qt_total_w		bigint;
qt_exames_w		bigint;

/* Trilha 1 */

dt_entrada_dia_w	varchar(10);
dt_entrada_hora_w	varchar(5);
nm_paciente_w		varchar(30);
crm_medico_w		varchar(6);
nm_medico_w		varchar(30);
cd_convenio_w		varchar(5);
cd_plano_convenio_w	varchar(5);
nr_seq_interno_w	varchar(11);
dt_entrega_dia_w	varchar(10);
dt_entrega_hora_w	varchar(5);
cd_usuario_convenio_w	varchar(17);
ds_trilha_1_w		varchar(255);
ie_tipo_atendimento_w	varchar(1);
/* Trilha 2 */

nr_doc_conv_w		varchar(20);
cd_senha_w		varchar(20);
nm_pf_resp_w		varchar(60);
nr_atend_w		varchar(10);
dt_nasc_w		varchar(10);
ds_proc_int_w		varchar(94);
ie_reservado_2_1_w	varchar(2);
ie_reservado_2_2_w	varchar(6);
ie_reservado_2_3_w	varchar(7);
ie_reservado_2_4_w	varchar(2);
ds_trilha_2_w		varchar(2000);

c01 CURSOR FOR
	SELECT	/* Trilha 1  */
		to_char(a.dt_entrada, 'dd/mm/yyyy') dt_entrada_dia,
		to_char(a.dt_entrada, 'hh24.mi') dt_entrada_hora,
		substr(obter_nome_pf(a.cd_pessoa_fisica), 1, 30) nm_paciente,
		substr(CASE WHEN a.nm_medico_externo='' THEN  obter_crm_medico(d.cd_medico)  ELSE a.crm_medico_externo END ,1,6) crm_medico,
		substr(CASE WHEN a.nm_medico_externo='' THEN  obter_nome_medico(d.cd_medico, 'N')  ELSE a.nm_medico_externo END ,1,30) nm_medico,
		substr(b.cd_convenio, 1, 3) cd_convenio,
		substr(b.cd_plano_convenio, 1, 3) cd_plano_convenio,
		substr(coalesce(c.nr_seq_proc_interno,0),1,11) nr_seq_interno,
		to_char(d.dt_entrega, 'dd/mm/yyyy') dt_entrega_dia,
		to_char(d.dt_entrega, 'hh24,mi') dt_entrega_hora,
		substr(b.cd_usuario_convenio, 1, 17) cd_usuario_convenio,
		substr(a.ie_tipo_atendimento, 1, 1) ie_tipo_atendimento,
		/* trilha 2 */

		substr(rpad(coalesce(b.nr_doc_convenio,' '),15,' '),1,15) nr_doc_convenio,
		substr(rpad(coalesce(b.cd_senha,' '),15,' '),1,15) cd_senha,
		substr(rpad(coalesce(substr(obter_nome_pessoa_fisica(a.cd_pessoa_responsavel, null),1,30),' '),30,' '),1,30) nm_pf_resp,
		substr(lpad(coalesce(a.nr_atendimento,'0'),6,'0'),1,6) nr_atendimento,
		substr(lpad('0',2,'0'),1,2),
		substr(lpad('0',6,'0'),1,6),
		substr(rpad(coalesce(to_char(e.dt_nascimento,'dd/mm/yyyy'),' '),10,' '),1,10) dt_nascimento,
		substr(lpad('0',7,'0'),1,7),
		substr(lpad('0',2,'0'),1,2),
		substr(rpad(coalesce(substr(obter_desc_proc_interno(c.nr_seq_proc_interno),1,40),' '),94,' '),1,94) ds_proc_interno
	from	atendimento_paciente a,
		atend_categoria_convenio b,
		prescr_procedimento c,
		prescr_medica d,
		pessoa_fisica e
	where	d.nr_prescricao = nr_prescricao_p
	and	a.nr_atendimento = d.nr_atendimento
	and	b.nr_atendimento = a.nr_atendimento
	and	b.nr_seq_interno = obter_atecaco_atendimento(a.nr_atendimento)
	and	c.nr_prescricao = d.nr_prescricao
	and	e.cd_pessoa_fisica = a.cd_pessoa_fisica
	and	c.cd_setor_atendimento in (241,480);


BEGIN

select 	count(*)
into STRICT	qt_exames_w
from 	prescr_procedimento
where 	nr_prescricao = nr_prescricao_p
and 	cd_setor_atendimento in (241,480);

if (qt_exames_w > 0) then

	qt_total_w		:= 1;
	arq_texto_w		:= utl_file.fopen(dir_p, nm_arquivo_p,'W');

	-----Adicionando campos do cabe√ßalho-----
	utl_file.put_line(arq_texto_w,rpad('0',195,' ')||rpad(lpad(qt_total_w,5,'0'),9,' ')||'"');
	utl_file.fflush(arq_texto_w);

	-----Adicionando campos da trilha 1-----
	open C01;
	loop
	fetch 	C01 into
		dt_entrada_dia_w,
		dt_entrada_hora_w,
		nm_paciente_w,
		crm_medico_w,
		nm_medico_w,
		cd_convenio_w,
		cd_plano_convenio_w,
		nr_seq_interno_w,
		dt_entrega_dia_w,
		dt_entrega_hora_w,
		cd_usuario_convenio_w,
		ie_tipo_atendimento_w,
		nr_doc_conv_w,
		cd_senha_w,
		nm_pf_resp_w,
		nr_atend_w,
		ie_reservado_2_1_w,
		ie_reservado_2_2_w,
		dt_nasc_w,
		ie_reservado_2_3_w,
		ie_reservado_2_4_w,
		ds_proc_int_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */

		ds_trilha_1_w := '';
		ds_trilha_2_w := '';
		ds_trilha_1_w := 	'1' || ' ' ||
					rpad(nr_prescricao_p,	    9,  ' ') || ' ' ||
					rpad('000000',		    6,  ' ') || ' ' ||
					rpad('00',		    2,  ' ') ||	' ' ||
					rpad(' ',		    3,	' ') || ' ' ||
					rpad(coalesce(dt_entrada_dia_w,' '), 	    10, ' ') || ' ' ||
					rpad(coalesce(dt_entrada_hora_w,' '),     5,  ' ') || ' ' ||
					rpad(coalesce(nm_paciente_w,' '), 	    30, ' ') || ' ' ||
					rpad(coalesce(crm_medico_w,' '),  	    06, ' ') || ' ' ||
					rpad(coalesce(nm_medico_w,' '),   	    30, ' ') || ' ' ||
					rpad(' ',		    5,  ' ') || ' ' ||
					rpad(' ',		    4,  ' ') || ' ' ||
					lpad(coalesce(cd_convenio_w,'0'), 	    3,  '0') || ' ' ||
					lpad(coalesce(cd_plano_convenio_w,'0'),   3,  '0') || ' ' ||
					rpad(' ',		    3,  ' ') || ' ' ||
					lpad(coalesce(nr_seq_interno_w,'0'), 	    11, '0') || ' ' ||
					rpad(' ',		    5,  ' ') || ' ' ||
					rpad(' ',		    5,  ' ') || ' ' ||
					rpad('X',		    1,  ' ') || ' ' ||
					rpad(ie_tipo_atendimento_w,		    1,  ' ') || ' ' ||
					rpad(coalesce(dt_entrega_dia_w,' '), 	    10, ' ') || ' ' ||
					rpad(coalesce(dt_entrega_hora_w,' '),     5,  ' ') || ' ' ||
					lpad(coalesce(cd_usuario_convenio_w,' '), 17, ' ') ||
					lpad(' ',		    7,  ' ') || '"';
		utl_file.put_line(arq_texto_w,ds_trilha_1_w);
		utl_file.fflush(arq_texto_w);

		qt_total_w := qt_total_w + 1;
		ds_trilha_2_w := '2'||' '||nr_doc_conv_w||' '||cd_senha_w||' '||nm_pf_resp_w||' '||nr_atend_w||' '||ie_reservado_2_1_w||' '||ie_reservado_2_2_w||' '||
						dt_nasc_w||ie_reservado_2_3_w||ie_reservado_2_4_w||ds_proc_int_w||lpad(qt_total_w,5,'0')||'    "';

		utl_file.put_line(arq_texto_w,ds_trilha_2_w);
		utl_file.fflush(arq_texto_w);

	end loop;
	close C01;

	----- Adicionado campos do Trailler 9------
	qt_total_w := qt_total_w + 1;
	utl_file.put_line(arq_texto_w,rpad('9',195,' ')||rpad(lpad(qt_total_w,5,'0'),9,' ')||'"');
	utl_file.fflush(arq_texto_w);

	utl_file.put_line(arq_texto_w,'');
	utl_file.fflush(arq_texto_w);

	utl_file.fclose(arq_texto_w);
	commit;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hmsl_int_prescr_tasy_exame_ext ( nr_prescricao_p bigint, dir_p text, nm_arquivo_p text) FROM PUBLIC;

