-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_resumo_proposta (nr_seq_proposta_p bigint, nr_seq_beneficiario_p bigint, ie_tipo_entrada_p text, nr_seq_item_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* 
nr_seq_item_p <<-- nr_sequencia da tabela do item que esta sendo inserido. no caso do beneficiário somente o nr_seq_beneficiario_p necessário. 
 
ie_tipo_entrada	<<<<<<<<<< 
B	BENEFICIÁRIO 
P	PRODUTO 
S	SCA 
BO	BONIFICAÇÃO 
BP	BONIFICAÇÃO DA PROPOSTA 
I	Taxa de inscrição (Proposta) 
*/
				 
				 
nm_beneficiario_w		varchar(255);
nr_seq_beneficiario_w		bigint;
nr_idade_benef_w		smallint;
ie_titular_dependente_w		varchar(15);
vl_resumo_w			double precision;
ds_resumo_w			varchar(255);
nr_seq_plano_w			bigint;
nr_seq_sca_w			bigint;
nr_seq_bonif_w			bigint;
nr_seq_bonif_prop_w		bigint;
qt_registros_w			bigint;
dt_inicio_proposta_w		timestamp;
nr_seq_regra_w			bigint;
vl_inscricao_w			double precision;	
tx_inscricao_w			double precision;
ds_resumo_produto_w		varchar(255);
vl_resumo_produto_w		double precision;

 
c01 CURSOR FOR 
	SELECT	nr_sequencia 
	from	pls_proposta_beneficiario	 
	where	nr_seq_proposta = nr_seq_proposta_p;
	

BEGIN 
if (ie_tipo_entrada_p = 'B') then		 
	 
	select	count(*) 
	into STRICT	qt_registros_w 
	from	pls_proposta_resumo 
	where	nr_seq_segurado	= nr_seq_beneficiario_p 
	and	nr_seq_proposta	= nr_seq_proposta_p;	
		 
	begin 
	select	substr(obter_nome_pf(cd_beneficiario),1,200), 
		substr(obter_idade_pf(cd_beneficiario,clock_timestamp(),'A'),1,3), 
		substr(CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN CASE WHEN coalesce(nr_seq_titular_contrato::text, '') = '' THEN 'Titular'  ELSE 'Dependente' END   ELSE 'Dependente' END ,1,50), 
		(substr(pls_obter_total_proposta_benef(nr_sequencia),1,255))::numeric  
	into STRICT	nm_beneficiario_w, 
		nr_idade_benef_w, 
		ie_titular_dependente_w, 
		vl_resumo_w 
	from	pls_proposta_beneficiario 
	where	nr_sequencia	= nr_seq_beneficiario_p;
 
	ds_resumo_w := nm_beneficiario_w || ' - ' || nr_idade_benef_w || ' anos - ' || ie_titular_dependente_w;
	 
	select	'   Produto - '||substr(pls_obter_dados_produto(a.nr_seq_plano,'N'),1,255), 
		(substr(pls_obter_valores_propostas(a.nr_sequencia,0,'P'),1,255))::numeric  
	into STRICT	ds_resumo_produto_w, 
		vl_resumo_produto_w		 
	from	pls_proposta_beneficiario	a, 
		pls_proposta_adesao		b 
	where	a.nr_seq_proposta 	= b.nr_sequencia 
	and	a.nr_seq_proposta	= nr_seq_proposta_p 
	and	a.nr_sequencia 		= nr_seq_beneficiario_p 
	and	((coalesce(a.dt_cancelamento::text, '') = '') 
	or (a.dt_cancelamento > b.dt_inicio_proposta));	
	exception 
	when others then 
		qt_registros_w := -1;
	end;		
		 
	if (qt_registros_w = 0) then 
		 
		insert into pls_proposta_resumo(nr_sequencia, nr_seq_proposta, nr_seq_segurado, 
			 ds_resumo, vl_resumo, nr_seq_ordem, 
			 dt_atualizacao, nm_usuario) 
		values (nextval('pls_proposta_resumo_seq'), nr_seq_proposta_p, nr_seq_beneficiario_p, 
			 ds_resumo_w, vl_resumo_w, '1', 
			 clock_timestamp(), nm_usuario_p);
 
		insert into pls_proposta_resumo(nr_sequencia, nr_seq_proposta, nr_seq_segurado, 
			 ds_resumo, vl_resumo, nr_seq_ordem, 
			 dt_atualizacao, nm_usuario, nr_seq_plano) 
		values (nextval('pls_proposta_resumo_seq'), nr_seq_proposta_p, nr_seq_beneficiario_p, 
			 ds_resumo_produto_w, vl_resumo_produto_w, '2', 
			 clock_timestamp(), nm_usuario_p, nr_seq_item_p);
			 
	elsif (qt_registros_w > 0) then						 
		update	pls_proposta_resumo 
		set	ds_resumo = ds_resumo_w, 
			vl_resumo = vl_resumo_w,			 
			dt_atualizacao = clock_timestamp(), 
			nm_usuario = nm_usuario_p 
		where	nr_seq_segurado = nr_seq_beneficiario_p 
		and	nr_seq_ordem	= 1;
 
 
		update	pls_proposta_resumo 
		set	ds_resumo = ds_resumo_produto_w, 
			vl_resumo = vl_resumo_produto_w,			 
			dt_atualizacao = clock_timestamp(), 
			nm_usuario = nm_usuario_p 
		where	nr_seq_segurado = nr_seq_beneficiario_p 
		and	nr_seq_ordem	= 2;	
	 
	end if;			
	 
elsif (ie_tipo_entrada_p = 'S') then 
		 
	select	count(*) 
	into STRICT	qt_registros_w 
	from	pls_proposta_resumo	 
	where	nr_seq_proposta	= nr_seq_proposta_p 
	and	nr_seq_segurado = nr_seq_beneficiario_p 
	and	nr_seq_ordem	= 3 
	and	nr_seq_sca	= nr_seq_item_p;
 
	 
	begin 
	select	'   SCA - ' || substr(pls_obter_dados_produto(nr_seq_plano,'N'),1,255), 
		(substr(pls_obter_valores_propostas(nr_seq_beneficiario_p,nr_sequencia,'S'),1,255))::numeric  
	into STRICT	ds_resumo_w, 
		vl_resumo_w 
	from	pls_sca_vinculo 
	where	nr_seq_benef_proposta = nr_seq_beneficiario_p 
	and	nr_sequencia = nr_seq_item_p;
	exception 
	when others then 
		qt_registros_w := -1;
	end;			
		 
	if (qt_registros_w = 0) then	 
		insert into pls_proposta_resumo(nr_sequencia, nr_seq_proposta, nr_seq_segurado, 
			 ds_resumo, vl_resumo, nr_seq_ordem, 
			 dt_atualizacao, nm_usuario, nr_seq_sca) 
		values (nextval('pls_proposta_resumo_seq'), nr_seq_proposta_p, nr_seq_beneficiario_p, 
			 ds_resumo_w, vl_resumo_w, '3', 
			 clock_timestamp(), nm_usuario_p, nr_seq_item_p);
	elsif (qt_registros_w > 0) then		 
		update	pls_proposta_resumo 
		set	ds_resumo = ds_resumo_w, 
			vl_resumo = vl_resumo_w,			 
			dt_atualizacao = clock_timestamp(), 
			nm_usuario = nm_usuario_p 
		where	nr_seq_segurado = nr_seq_beneficiario_p 
		and	nr_seq_sca	= nr_seq_item_p 
		and	nr_seq_ordem	= 3;
	end if;
		 
 
elsif (ie_tipo_entrada_p = 'BO')	then 
 
	select	count(*) 
	into STRICT	qt_registros_w 
	from	pls_proposta_resumo 
	where	nr_seq_proposta		= nr_seq_proposta_p 
	and	nr_seq_segurado		= nr_seq_beneficiario_p	 
	and	nr_seq_ordem		= 4 
	and	nr_seq_bonificacao	= nr_seq_item_p;	
	 
	begin 
	select	'   Bonificação - '||substr(pls_obter_dados_bonificacao(a.nr_sequencia,'D'),1,255), 
		(substr(pls_obter_valores_propostas(b.nr_sequencia,a.nr_seq_bonificacao,'B'),1,255))::numeric 		 
	into STRICT	ds_resumo_w, 
		vl_resumo_w		 
	from	pls_bonificacao_vinculo		a, 
		pls_proposta_beneficiario	b, 
		pls_proposta_adesao		c 
	where	a.nr_seq_segurado_prop	= b.nr_sequencia 
	and	b.nr_seq_proposta	= c.nr_sequencia 
	and	b.nr_seq_proposta	= nr_seq_proposta_p 
	and	a.nr_seq_segurado_prop = nr_seq_beneficiario_p 
	and	a.nr_sequencia 		= nr_seq_item_p 
	and	((coalesce(b.dt_cancelamento::text, '') = '') 
	or (b.dt_cancelamento > c.dt_inicio_proposta));	
	exception 
	when others then 
		qt_registros_w := -1;
	end;
		 
	if (qt_registros_w = 0) then 
		insert into pls_proposta_resumo(nr_sequencia, nr_seq_proposta, nr_seq_segurado, 
			 ds_resumo, vl_resumo, nr_seq_ordem, 
			 dt_atualizacao, nm_usuario, nr_seq_bonificacao) 
		values (nextval('pls_proposta_resumo_seq'), nr_seq_proposta_p, nr_seq_beneficiario_p, 
			 ds_resumo_w, vl_resumo_w, '4', 
			 clock_timestamp(), nm_usuario_p, nr_seq_item_p);
	elsif (qt_registros_w >0) then	 
		update	pls_proposta_resumo 
		set	ds_resumo = ds_resumo_w, 
			vl_resumo = vl_resumo_w,			 
			dt_atualizacao = clock_timestamp(), 
			nm_usuario = nm_usuario_p 
		where	nr_seq_segurado = nr_seq_beneficiario_p 
		and	nr_seq_bonificacao = nr_seq_item_p 
		and	nr_seq_ordem	= 4;
	end if;
	 
elsif (ie_tipo_entrada_p = 'BP') then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_beneficiario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	pls_proposta_resumo 
		where	nr_seq_ordem 		= 5 
		and	nr_seq_proposta		= nr_seq_proposta_p	 
		and	nr_seq_bonificacao	= nr_seq_item_p 
		and	nr_seq_segurado		= nr_seq_beneficiario_w;		
		 
		begin 
		select	'   Bonificacao da proposta - '||substr(pls_obter_dados_bonificacao(a.nr_sequencia,'D'),1,255), 
			(substr(pls_obter_valor_bonif_tot_prop(a.nr_seq_proposta,a.nr_seq_bonificacao, nr_seq_beneficiario_w),1,15))::numeric 		 
		into STRICT	ds_resumo_w, 
			vl_resumo_w		 
		from	pls_bonificacao_vinculo			a, 
			pls_proposta_adesao			c 
		where	a.nr_seq_proposta	= nr_seq_proposta_p 
		and	a.nr_seq_proposta	= c.nr_sequencia 
		and	a.nr_sequencia		= nr_seq_item_p;
		exception 
		when others then 
			qt_registros_w := -1;
		end;			
				 
		if (qt_registros_w = 0) then 
			insert into pls_proposta_resumo(nr_sequencia, nr_seq_proposta, nr_seq_segurado, 
				 ds_resumo, vl_resumo, nr_seq_ordem, 
				 dt_atualizacao, nm_usuario, nr_seq_bonificacao) 
			values (nextval('pls_proposta_resumo_seq'), nr_seq_proposta_p, nr_seq_beneficiario_w, 
				ds_resumo_w, vl_resumo_w, '5', 
				clock_timestamp(), nm_usuario_p, nr_seq_item_p);			
		elsif (qt_registros_w > 0) then 
			update	pls_proposta_resumo 
			set	ds_resumo = ds_resumo_w, 
				vl_resumo = vl_resumo_w,			 
				dt_atualizacao = clock_timestamp(), 
				nm_usuario = nm_usuario_p 
			where	nr_seq_segurado = nr_seq_beneficiario_w 
			and	nr_seq_bonificacao = nr_seq_item_p 
			and	nr_seq_ordem	= 5;
		end if;	
	end;
	end loop;
	close C01;
	 
elsif (ie_tipo_entrada_p = 'I') then	 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_beneficiario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		delete	 
		from	pls_proposta_resumo 
		where	nr_Seq_proposta = nr_seq_proposta_p 
		and	nr_seq_segurado	= nr_seq_beneficiario_w 
		and	nr_seq_ordem = 7;
		 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	pls_proposta_resumo 
		where	nr_seq_proposta = nr_seq_proposta_p 
		and	nr_seq_segurado = nr_seq_beneficiario_w 
		and	nr_seq_ordem	= 6;		
		 
		begin 
		select '   Taxa de inscrição (Proposta)', 
			pls_obter_valores_propostas(b.nr_sequencia,0,'I')			 
		into STRICT	ds_resumo_w, 
			vl_resumo_w			 
		from	pls_proposta_beneficiario	b 
		where	b.nr_seq_proposta		= nr_seq_proposta_p 
		and	b.nr_sequencia			= nr_seq_beneficiario_w 
		and	b.ie_taxa_inscricao		= 'S' 
		and	(substr(pls_obter_valores_propostas(b.nr_sequencia,0,'I'),1,255))::numeric  > 0;					
		exception 
		when others then 
			qt_registros_w := -1;
		end;	
	 
		if (qt_registros_w = 0) then 
			insert into pls_proposta_resumo(nr_sequencia, nr_seq_proposta, nr_seq_segurado, 
				 ds_resumo, vl_resumo, nr_seq_ordem, 
				 dt_atualizacao, nm_usuario, nr_seq_tx_inscricao) 
			values (nextval('pls_proposta_resumo_seq'), nr_seq_proposta_p, nr_seq_beneficiario_w, 
				 ds_resumo_w, vl_resumo_w, '6', 
				 clock_timestamp(), nm_usuario_p, nr_seq_item_p);
		elsif (qt_registros_w > 0) then 
			update	pls_proposta_resumo 
			set	ds_resumo = ds_resumo_w, 
				vl_resumo = vl_resumo_w,			 
				dt_atualizacao = clock_timestamp(), 
				nm_usuario = nm_usuario_p 
			where	nr_seq_tx_inscricao 	= nr_seq_item_p 
			and	nr_seq_segurado		= nr_seq_beneficiario_w			 
			and	nr_seq_ordem		= 6;
		end if;
		end;
	end loop;
	close C01;
elsif (ie_tipo_entrada_p = 'IP') then 
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_beneficiario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		 
		select	count(*) 
		into STRICT	qt_registros_w 
		from	pls_proposta_resumo 
		where	nr_seq_proposta = nr_seq_proposta_p 
		and	nr_seq_segurado = nr_seq_beneficiario_w 
		and	nr_seq_ordem	= 7;
 
		begin 
		select '   Taxa de inscrição (Plano)', 
			pls_obter_valores_propostas(b.nr_sequencia,0,'IP') 
		into STRICT	ds_resumo_w, 
			vl_resumo_w 
		from	pls_proposta_beneficiario	b	 
		where	b.nr_seq_proposta		= nr_seq_proposta_p 
		and	b.nr_sequencia			= nr_seq_beneficiario_w 
		and	b.ie_taxa_inscricao		= 'S' 
		and	(substr(pls_obter_valores_propostas(b.nr_sequencia,0,'IP'),1,255))::numeric  > 0 
		and	not exists ( 	SELECT	 1 
					from	 pls_regra_inscricao x	 
					where	 x.nr_seq_proposta = b.nr_seq_proposta	);	
		exception 
		when others then 
			qt_registros_w := -1;
		end;
		 
		if (qt_registros_w = 0) then 
			insert into pls_proposta_resumo(nr_sequencia, nr_seq_proposta, nr_seq_segurado, 
				 ds_resumo, vl_resumo, nr_seq_ordem, 
				 dt_atualizacao, nm_usuario, nr_seq_tx_inscricao) 
			values (nextval('pls_proposta_resumo_seq'), nr_seq_proposta_p, nr_seq_beneficiario_w, 
				 ds_resumo_w, vl_resumo_w, '7', 
				 clock_timestamp(), nm_usuario_p, nr_seq_item_p);
		elsif (qt_registros_w > 0) then 
			update	pls_proposta_resumo 
			set	ds_resumo = ds_resumo_w, 
				vl_resumo = vl_resumo_w,			 
				dt_atualizacao = clock_timestamp(), 
				nm_usuario = nm_usuario_p 
			where	nr_seq_tx_inscricao 	= nr_seq_item_p 
			and	nr_seq_segurado		= nr_seq_beneficiario_w			 
			and	nr_seq_ordem	= 7;
		end if;		
		end;
	end loop;
	close C01;					
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_resumo_proposta (nr_seq_proposta_p bigint, nr_seq_beneficiario_p bigint, ie_tipo_entrada_p text, nr_seq_item_p bigint, nm_usuario_p text) FROM PUBLIC;

