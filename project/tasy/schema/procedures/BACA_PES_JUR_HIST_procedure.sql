-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE bck_nr_endereco AS (nr_sequencia bigint, nr_endereco varchar(10));


CREATE OR REPLACE PROCEDURE baca_pes_jur_hist () AS $body$
DECLARE


/* 

CHPDSILVA em 13/05/2019 baca desenvolvido para alterar tipo da coluna NR_ENDERECO da tabela FIS_PESSOA_JURIDICA_HIST

1. DESABILITAR TRIGGERS DA TABELA FIS_PESSOA_JURIDICA_HIST
2. DESABILITAR INTEGRIDADES DA TABELA FIS_PESSOA_JURIDICA_HIST
3. PASSAGEM DOS DADOS DA TABELA FIS_PESSOA_JURIDICA_HIST PARA O VETOR TEMPORARIO
4. COLOCAR O CAMPO NR_ENDERECO PARA NULL EM TODAS AS LINHAS DA TABELA FIS_PESSOA_JURIDICA_HIST
5. ALTERAR O TIPO DA COLUNA NR_ENDERECO PARA VARCHAR2(10)
6. COPIAR A COLUNA NR_ENDERECO DO VETOR PARA A TABELA FIS_PESSOA_JURIDICA_HIST COM BASE NO NR_SEQUENCIA
7. HABILITAR INTEGRIDADES DA TABELA FIS_PESSOA_JURIDICA_HIST
8. HABILITAR TRIGGERS DA TABELA FIS_PESSOA_JURIDICA_HIST

*/
trigger_name_w					varchar(255);
nm_tabela_w						varchar(255);
nm_integridade_referencial_w	varchar(255);
nr_sequencia_w					varchar(255);
nr_endereco_w					varchar(255);
contador_w						bigint := 0;
type dds_bck_nr_endereco is table of bck_nr_endereco index by integer;
vet_bck_nr_endereco_w dds_bck_nr_endereco;

c01 CURSOR FOR
SELECT	trigger_name
from	user_triggers
where	upper(table_name) = 'FIS_PESSOA_JURIDICA_HIST';

c02 CURSOR FOR
SELECT	nm_tabela,
		nm_integridade_referencial
from	integridade_referencial
where	upper(nm_tabela_referencia) = 'FIS_PESSOA_JURIDICA_HIST';

c03 CURSOR FOR
SELECT 	nr_sequencia,
		nr_endereco
from 	fis_pessoa_juridica_hist
where	(nr_endereco IS NOT NULL AND nr_endereco::text <> '')
order by nr_sequencia;

BEGIN
	open c01;
	loop
	fetch c01 into
		trigger_name_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
			CALL exec_sql_dinamico('OS1893703_PJ', 'alter trigger ' || trigger_name_w || ' disable');
			commit;
		end;
	end loop;
	close c01;
	
	open c02;
	loop
	fetch c02 into
		nm_tabela_w,
		nm_integridade_referencial_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
			CALL exec_sql_dinamico('OS1893703_PJ', 'alter table ' || nm_tabela_w || ' disable constraint ' || nm_integridade_referencial_w);
			commit;
		end;
	end loop;
	close c02;
	
	open C03;
	loop
	fetch C03 into	
		nr_sequencia_w,
		nr_endereco_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
			vet_bck_nr_endereco_w[contador_w].nr_sequencia := nr_sequencia_w;
			vet_bck_nr_endereco_w[contador_w].nr_endereco := nr_endereco_w;
			contador_w := contador_w + 1;
		end;
	end loop;
	close C03;
	
	CALL exec_sql_dinamico('OS1893703_PJ', 'update FIS_PESSOA_JURIDICA_HIST set nr_endereco = null');
	--nao precisa salvar a informacao do ds_complemento
	CALL exec_sql_dinamico('OS1893703_PJ', 'update FIS_PESSOA_JURIDICA_HIST set DS_COMPLEMENTO = null');
	commit;

	CALL exec_sql_dinamico('OS1893703_PJ', 'alter table FIS_PESSOA_JURIDICA_HIST modify NR_ENDERECO varchar2(10)');
	CALL exec_sql_dinamico('OS1893703_PJ', 'alter table FIS_PESSOA_JURIDICA_HIST modify DS_COMPLEMENTO varchar2(255)');
	commit;
	
	for	i in vet_bck_nr_endereco_w.first..vet_bck_nr_endereco_w.last loop
		CALL exec_sql_dinamico('OS1893703_PJ', 'update FIS_PESSOA_JURIDICA_HIST set nr_endereco = ' || vet_bck_nr_endereco_w[i].nr_endereco || ' where nr_sequencia = ' || vet_bck_nr_endereco_w[i].nr_sequencia);
		commit;
	end loop;
	
	open c02;
	loop
	fetch c02 into
		nm_tabela_w,
		nm_integridade_referencial_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
			CALL exec_sql_dinamico('OS1893703_PJ', 'alter table ' || nm_tabela_w || ' enable constraint ' || nm_integridade_referencial_w);
			commit;
		end;
	end loop;
	close c02;
	
	open c01;
	loop
	fetch c01 into
		trigger_name_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
			CALL exec_sql_dinamico('OS1893703_PJ', 'alter trigger ' || trigger_name_w || ' enable');
			commit;
		end;
	end loop;
	close c01;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_pes_jur_hist () FROM PUBLIC;

