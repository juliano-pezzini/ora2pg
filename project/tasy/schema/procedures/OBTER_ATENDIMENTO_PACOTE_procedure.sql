-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_atendimento_pacote ( nr_atendimento_p bigint, nr_interno_conta_p bigint, ie_consiste_conta_p text default null, ds_pacote_p INOUT text DEFAULT NULL, nr_interno_conta_ret_p INOUT bigint DEFAULT NULL, cd_procedimento_p bigint DEFAULT NULL, ie_origem_proced_p bigint DEFAULT NULL) AS $body$
DECLARE


nr_seq_pacote_w			bigint;
dt_procedimento_w			timestamp;
ie_tipo_acomod_w			varchar(2);
ds_pacote_w			varchar(255);
cd_estabelecimento_w		integer;
cont_w				integer;
cd_convenio_parametro_w		integer;
cd_categoria_parametro_w		varchar(10);
qt_dias_uti_w			integer;
qt_dias_internacao_w		integer;
ie_tipo_atendimento_w		bigint;
cd_plano_w			varchar(20);
ie_clinica_w			bigint;
ie_tipo_atend_conta_w		smallint;
cd_setor_atendimento_w		integer;
ie_retorno_w			varchar(01);
qt_idade_paciente_w		smallint;
ie_sexo_w			varchar(1);
qt_dias_inter_w			bigint;
dt_entrada_w			timestamp;
dt_alta_w				timestamp;
cd_tipo_anestesia_w		varchar(10);
ie_acomp_w			varchar(01);
ie_lado_w			varchar(10) := null;
nr_cirurgia_w			bigint;
nr_prescricao_w			bigint := 0;
nr_sequencia_prescricao_w		bigint;
nr_sequencia_w			bigint;
cd_centro_custo_w			integer;
qt_proc_pacote_orig_w		bigint:= 0;
nr_interno_conta_w			conta_paciente.nr_interno_conta%type;
nr_interno_conta_ret_w		conta_paciente.nr_interno_conta%type;
ie_consiste_conta_w		varchar(1);
ie_utiliza_acomod_conv_atend_w	varchar(1):= 'N';

nr_seq_tipo_acomod_w		bigint;
cd_proc_exigido_w		pacote_tipo_acomod_proc.cd_procedimento%type;	
ie_origem_proc_exigido_w	bigint;--pacote_tipo_acomod_proc.ie_prigem_proced%type;
ie_proc_exigido_ok_w		varchar(1);
ie_mat_exigido_ok_w		varchar(1);
dt_inicio_pacote_w		timestamp;
dt_final_pacote_w		timestamp;
cd_mat_exigido_w		pacote_tipo_acomod_mat.cd_material%type;
ie_opcional_w			pacote_tipo_acomod_mat.ie_opcional%type;
ie_mat_opcional_ok_w		varchar(1);
ie_regra_hora_inicio_w		varchar(10);
ie_regra_hora_fim_w		varchar(10);
qt_dias_pacote_w		pacote_tipo_acomodacao.qt_dias_pacote%type;
dt_inicio_cirurgia_w 		cirurgia.dt_inicio_real%type;
nr_min_duracao_prev_w  		cirurgia.nr_min_duracao_prev%type;
nr_min_duracao_real_w		cirurgia.nr_min_duracao_real%type;
dt_fim_cirurgia_w		timestamp;
cd_classif_setor_w		smallint;
dt_entrada_unidade_w 		atend_paciente_unidade.dt_entrada_unidade%type;
dt_saida_unidade_w		atend_paciente_unidade.dt_saida_unidade%type;
qt_passagem_classif_w		bigint;
nr_seq_atepacu_w		procedimento_paciente.nr_seq_atepacu%type;
cd_setor_atendimento_ww 	atend_paciente_unidade.cd_setor_atendimento%type;
cd_unidade_basica_w		atend_paciente_unidade.cd_unidade_basica%type;
cd_unidade_compl_w		atend_paciente_unidade.cd_unidade_compl%type;
nr_seq_local_pa_w 		unidade_atendimento.nr_seq_local_pa%type;
dt_periodo_inicial_w		conta_paciente.dt_periodo_inicial%type;
dt_periodo_final_w		conta_paciente.dt_periodo_final%type;
qt_proc_w			procedimento_paciente.qt_procedimento%type;
hr_final_pacote_w		timestamp;
qt_hora_w			pacote_tipo_acomodacao.qt_hora%type;
ie_tela_calcular_pacote_w	varchar(1);
vl_pacote_w			pacote_tipo_acomodacao.vl_pacote%type;
vl_pacote_old_w                 pacote_tipo_acomodacao.vl_pacote%type;
ie_carater_inter_sus_w		atendimento_paciente.ie_carater_inter_sus%type;

c01 CURSOR FOR
	SELECT	cd_convenio_parametro,
		cd_categoria_parametro
	from	conta_paciente
	where	nr_atendimento = nr_atendimento_p
	and (ie_tela_calcular_pacote_w = 'E' OR (cd_estabelecimento = cd_estabelecimento_w))
	and	((ie_consiste_conta_w = 'S' AND nr_interno_conta = nr_interno_conta_p) or (ie_consiste_conta_w = 'N'))
	and	ie_status_acerto = 1
	and	coalesce(ie_cancelamento::text, '') = '';

c02 CURSOR FOR
	SELECT 	c.nr_seq_pacote,
		a.dt_procedimento,
		b.ie_tipo_atend_conta,
		a.cd_setor_atendimento,
		a.nr_cirurgia,
		a.nr_sequencia,
		a.nr_prescricao,
		a.nr_sequencia_prescricao,
		b.nr_interno_conta,
		a.nr_seq_atepacu,
		b.dt_periodo_inicial,
		b.dt_periodo_final
	from 	pacote c,
		procedimento_paciente a,
		conta_paciente b
	where	b.nr_atendimento		= nr_atendimento_p
	and	b.cd_convenio_parametro		= cd_convenio_parametro_w
	and	b.ie_status_acerto		= 1
	and a.cd_procedimento = coalesce(cd_procedimento_p,a.cd_procedimento)  
	and a.ie_origem_proced = coalesce(ie_origem_proced_p,a.ie_origem_proced)
	and	b.cd_convenio_parametro		= c.cd_convenio
	and	b.nr_interno_conta		= a.nr_interno_conta
	and	to_char(a.cd_procedimento)	= c.cd_proced_pacote 
	and	to_char(a.ie_origem_proced)	= c.ie_origem_proced
	and (ie_tela_calcular_pacote_w = 'E' OR (c.cd_estabelecimento = cd_estabelecimento_w))
	and b.cd_estabelecimento = c.cd_estabelecimento
	and	((ie_consiste_conta_w = 'S' AND b.nr_interno_conta = nr_interno_conta_p) or (ie_consiste_conta_w = 'N'))
	and	a.cd_situacao_glosa		= 0
	and	c.ie_situacao			= 'A'
	and	coalesce(a.nr_seq_proc_pacote::text, '') = ''	
	and	coalesce(a.cd_motivo_exc_conta::text, '') = '';
	
		
C03 CURSOR FOR
	SELECT 	a.nr_sequencia,
		a.ie_regra_hora_inicio,
		a.ie_regra_hora_fim,
		coalesce(qt_dias_pacote,0),
		hr_final_pacote,
		coalesce(a.qt_hora,0),
		a.vl_pacote
	from 	pacote_tipo_acomodacao a
	where 	nr_seq_pacote = nr_seq_pacote_w
	and 	ie_tipo_acomod = ie_tipo_acomod_w
	and	coalesce(cd_categoria, cd_categoria_parametro_w) = cd_categoria_parametro_w
	and	coalesce(cd_plano, coalesce(cd_plano_w, 'X')) = coalesce(cd_plano_w, 'X')
	and 	coalesce(ie_clinica, coalesce(ie_clinica_w,0)) = coalesce(ie_clinica_w, 0)
	and	coalesce(a.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0)) = coalesce(ie_tipo_atend_conta_w,0)
	and	coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atendimento_w, 0)) = coalesce(cd_setor_atendimento_w, 0)
	and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
	and	qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)
	and	qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w)
	and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
	and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
	and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
	and	coalesce(ie_lado, coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
	and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)	= ie_tipo_atendimento_w
	and	coalesce(ie_classificacao, 'N') = 'N'
	and	coalesce(dt_procedimento_w, a.dt_vigencia) between coalesce(a.dt_vigencia, dt_procedimento_w) and coalesce(trunc(a.dt_vigencia_final, 'dd') + 86399/86400, clock_timestamp() + interval '360 days')
	and	coalesce(cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
	and	coalesce(a.ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w,0)) = coalesce(ie_carater_inter_sus_w,0)
	and 	coalesce(qt_proc_pacote_orig_w,0) = 0
	and	nr_sequencia in (
			SELECT	max(nr_sequencia)
			from	pacote_tipo_acomodacao b
			where	nr_seq_pacote = nr_seq_pacote_w
			and 	ie_tipo_acomod = ie_tipo_acomod_w
			and	coalesce(cd_categoria, cd_categoria_parametro_w) = cd_categoria_parametro_w
			and	coalesce(cd_plano, coalesce(cd_plano_w, 'X')) = coalesce(cd_plano_w, 'X')
			and 	coalesce(ie_clinica, coalesce(ie_clinica_w,0)) = coalesce(ie_clinica_w, 0)
			and	coalesce(b.ie_tipo_atend_conta, coalesce(ie_tipo_atend_conta_w,0)) = coalesce(ie_tipo_atend_conta_w,0)
			and	coalesce(b.cd_setor_atendimento, coalesce(cd_setor_atendimento_w, 0)) = coalesce(cd_setor_atendimento_w, 0)
			and	((ie_atend_retorno = 'A') or (ie_atend_retorno = ie_retorno_w))
			and	qt_idade_paciente_w between coalesce(qt_idade_min, 0) and coalesce(qt_idade_max, 999)
			and	qt_dias_inter_w between coalesce(qt_dias_inter_inicio, qt_dias_inter_w) and coalesce(qt_dias_inter_final, qt_dias_inter_w)
			and	((coalesce(cd_tipo_anestesia_w::text, '') = '') or (coalesce(ie_tipo_anestesia, cd_tipo_anestesia_w) = cd_tipo_anestesia_w))
			and	((coalesce(ie_atend_acomp,'A') = 'A') or (coalesce(ie_atend_acomp,'A') = ie_acomp_w))
			and	coalesce(ie_sexo, coalesce(ie_sexo_w,'A')) = coalesce(ie_sexo_w,'A')
			and	coalesce(ie_lado, coalesce(ie_lado_w,'0')) = coalesce(ie_lado_w,'0')
			and	coalesce(b.ie_tipo_atendimento, ie_tipo_atendimento_w) = ie_tipo_atendimento_w
			and	coalesce(ie_classificacao,'N') = 'N'
			and	coalesce(dt_procedimento_w, b.dt_vigencia) between coalesce(b.dt_vigencia,dt_procedimento_w) and coalesce(trunc(b.dt_vigencia_final, 'dd') + 86399/86400,clock_timestamp() + interval '360 days')
			and	coalesce(cd_centro_custo, coalesce(cd_centro_custo_w, 0)) = coalesce(cd_centro_custo_w, 0)
			and	coalesce(b.ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w,0)) = coalesce(ie_carater_inter_sus_w,0)
			group	by cd_procedimento);
C04 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pacote_tipo_acomod_proc
	where	nr_seq_pac_acomod	= nr_seq_tipo_acomod_w;

C05 CURSOR FOR
	SELECT	cd_material,
		ie_opcional
	from	pacote_tipo_acomod_mat
	where	nr_seq_pac_acomod	= nr_seq_tipo_acomod_w;	

c06 CURSOR FOR
	SELECT	obter_classif_setor(cd_setor_atendimento),
		dt_entrada_unidade,
		dt_saida_unidade
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	order by dt_entrada_unidade;

c07 CURSOR FOR
	SELECT	obter_classif_setor(cd_setor_atendimento),
		dt_entrada_unidade,
		dt_saida_unidade
	from	atend_paciente_unidade
	where	nr_atendimento = nr_atendimento_p
	and 	nr_seq_interno = nr_seq_atepacu_w
	order by dt_entrada_unidade;

c08 CURSOR FOR
	SELECT	cd_setor_atendimento,
		cd_unidade_basica,
		cd_unidade_compl,
		dt_entrada_unidade,
		dt_saida_unidade
	from	atend_paciente_unidade
	where	nr_atendimento 	= nr_atendimento_p
	order by dt_entrada_unidade;	
	

BEGIN

ie_consiste_conta_w	:=  coalesce(ie_consiste_conta_p,'N');

ie_tela_calcular_pacote_w := obter_valor_param_usuario(67,73,obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);

ie_utiliza_acomod_conv_atend_w	:= obter_valor_param_usuario(67,430,obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento);

select	coalesce(max(cd_estabelecimento),1),
	max(obter_dados_categ_conv(nr_atendimento_p, 'P')),
	max(ie_clinica),
	max(CASE WHEN coalesce(nr_atend_original::text, '') = '' THEN  'N'  ELSE 'S' END ),
	max(dt_entrada),
	max(dt_alta),
	max(ie_carater_inter_sus)
into STRICT	cd_estabelecimento_w,
	cd_plano_w,
	ie_clinica_w,
	ie_retorno_w,
	dt_entrada_w,
	dt_alta_w,
	ie_carater_inter_sus_w
from	atendimento_paciente
where	nr_atendimento	= nr_atendimento_p;

select	trunc(coalesce(dt_alta_w, clock_timestamp()) - dt_entrada_w) + 1,
	CASE WHEN coalesce(max(obter_qt_acomp_atendimento(nr_atendimento_p)),0)=0 THEN  'N'  ELSE 'S' END
into STRICT	qt_dias_inter_w,
	ie_acomp_w
;

select	max(obter_idade(b.dt_nascimento, clock_timestamp(), 'A')),
	coalesce(max(ie_sexo),'A')
into STRICT	qt_idade_paciente_w,
	ie_sexo_w
from	pessoa_fisica b,
	atendimento_paciente a
where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
and	a.nr_atendimento	= nr_atendimento_p;

ds_pacote_w	:= '';
vl_pacote_old_w := 0;

open c01;
loop
fetch c01 into
	cd_convenio_parametro_w,
	cd_categoria_parametro_w;

 
EXIT WHEN NOT FOUND; /* apply on c01 */

	select	coalesce(max(ie_classificacao),0)
	into STRICT	ie_tipo_acomod_w
	from	tipo_acomodacao b,
		atend_categoria_convenio a
	where	a.nr_atendimento	= nr_atendimento_p
	and	a.cd_convenio		= cd_convenio_parametro_w
	and	a.cd_tipo_acomodacao	= b.cd_tipo_acomodacao
	and	a.dt_inicio_vigencia	= (	SELECT	max(x.dt_inicio_vigencia)
						from	atend_categoria_convenio x
						where	x.nr_atendimento = nr_atendimento_p
						and	x.cd_convenio = cd_convenio_parametro_w	);
	
	if (ie_utiliza_acomod_conv_atend_w = 'S') and (ie_tipo_acomod_w = 0) then
		select	coalesce(max(ie_classificacao),0)
		into STRICT	ie_tipo_acomod_w
		from	tipo_acomodacao b,
			atend_categoria_convenio a
		where	a.nr_atendimento = nr_atendimento_p
		and	a.cd_tipo_acomodacao = b.cd_tipo_acomodacao
		and	a.dt_inicio_vigencia = (SELECT	max(x.dt_inicio_vigencia)
						from	atend_categoria_convenio x
						where	x.nr_atendimento = nr_atendimento_p);
	end if;
	
	select	max(ie_tipo_atendimento)
	into STRICT	ie_tipo_atendimento_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;


	open c02;
	loop
	fetch c02 into	
		nr_seq_pacote_w,
		dt_procedimento_w,
		ie_tipo_atend_conta_w,
		cd_setor_atendimento_w,
		nr_cirurgia_w,
		nr_sequencia_w,
		nr_prescricao_w,
		nr_sequencia_prescricao_w,
		nr_interno_conta_w,
		nr_seq_atepacu_w,
		dt_periodo_inicial_w,
	        dt_periodo_final_w;
		
	EXIT WHEN NOT FOUND; /* apply on c02 */

		select	max(cd_tipo_anestesia)
		into STRICT	cd_tipo_anestesia_w
		from	cirurgia
		where	nr_cirurgia	= nr_cirurgia_w;
		
		begin
		
		if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_sequencia_prescricao_w,0) > 0) then
			
			select	max(ie_lado)
			into STRICT	ie_lado_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_sequencia_prescricao_w;
		else
			ie_lado_w := null;
		end if;
		exception
		when others then
			ie_lado_w := null;	
		end;
		
		select	max(cd_centro_custo)
		into STRICT	cd_centro_custo_w
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atendimento_w;
		
		select	count(*)
		into STRICT	qt_proc_pacote_orig_w
		from	atendimento_pacote
		where	nr_seq_proc_origem	= nr_sequencia_w;
		
		if (coalesce(nr_cirurgia_w,0) > 0) then
			select	max(dt_inicio_real),
				max(nr_min_duracao_prev),
				max(nr_min_duracao_real)
			into STRICT	dt_inicio_cirurgia_w,
				nr_min_duracao_prev_w,
				nr_min_duracao_real_w
			from 	cirurgia
			where 	nr_cirurgia = nr_cirurgia_w;

			if (coalesce(nr_min_duracao_real_w,0) > 0) then
				dt_fim_cirurgia_w:= dt_inicio_cirurgia_w + nr_min_duracao_real_w/1440;
			else
				dt_fim_cirurgia_w:= dt_inicio_cirurgia_w + nr_min_duracao_prev_w/1440;
			end if;
		end if;		

		open C03;
		loop
		fetch C03 into	
			nr_seq_tipo_acomod_w,
			ie_regra_hora_inicio_w,
			ie_regra_hora_fim_w,
			qt_dias_pacote_w,
			hr_final_pacote_w,
			qt_hora_w,
			vl_pacote_w;
	
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin		
			/*regra de hora inicial e final*/

			if (coalesce(ie_regra_hora_inicio_w, 'EP-D') = 'EP-D') then
				dt_inicio_pacote_w	:= dt_procedimento_w - qt_dias_pacote_w;
			elsif (coalesce(ie_regra_hora_inicio_w, 'EP') = 'EP') then
				dt_inicio_pacote_w	:= dt_procedimento_w;
			elsif (ie_regra_hora_inicio_w = 'E') then
				dt_inicio_pacote_w	:= dt_entrada_w;
			elsif (ie_regra_hora_inicio_w = 'IC') then
				dt_inicio_pacote_w	:= dt_inicio_cirurgia_w;
			elsif (ie_regra_hora_inicio_w = 'HIDP') then
				dt_inicio_pacote_w	:= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_w);
				if (ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_procedimento_w) < dt_entrada_w) then
					dt_inicio_pacote_w	:= dt_entrada_w;
				end if;	
			elsif (ie_regra_hora_inicio_w = 'RES') then

				open c06;
				loop
				fetch c06 into
					cd_classif_setor_w,
					dt_entrada_unidade_w,
					dt_saida_unidade_w;
					
				EXIT WHEN NOT FOUND; /* apply on c06 */
					begin

					select	count(*)
					into STRICT	qt_passagem_classif_w
					from 	regra_pacote_hora_final
					where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
					and 	ie_situacao = 'A'
					and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

					if (qt_passagem_classif_w > 0) then
						exit;
					end if;

					end;
				end loop;
				close c06;				
				dt_inicio_pacote_w:= dt_entrada_unidade_w;
			elsif (ie_regra_hora_inicio_w = 'REA') then
				open c07;
				loop
				fetch c07 into
					cd_classif_setor_w,
					dt_entrada_unidade_w,
					dt_saida_unidade_w;
				EXIT WHEN NOT FOUND; /* apply on c07 */
					begin

					select	count(*)
					into STRICT	qt_passagem_classif_w
					from 	regra_pacote_hora_final
					where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
					and 	ie_situacao = 'A'
					and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

					if (qt_passagem_classif_w > 0) then
						exit;
					end if;

					end;
				end loop;
				close c07;				
				dt_inicio_pacote_w:= dt_entrada_unidade_w;

			elsif (ie_regra_hora_inicio_w = 'REL') then

				open c08;
				loop
				fetch c08 into
					cd_setor_atendimento_ww,
					cd_unidade_basica_w,
					cd_unidade_compl_w,
					dt_entrada_unidade_w ,
					dt_saida_unidade_w;
				EXIT WHEN NOT FOUND; /* apply on c08 */
					begin

					select 	coalesce(max(nr_seq_local_pa),0)
					into STRICT	nr_seq_local_pa_w
					from 	unidade_atendimento
					where 	cd_setor_atendimento 	= cd_setor_atendimento_ww
					and 	cd_unidade_basica 	= cd_unidade_basica_w
					and 	cd_unidade_compl 	= cd_unidade_compl_w;

					select	count(*)
					into STRICT	qt_passagem_classif_w
					from 	regra_pacote_hora_final
					where 	nr_seq_pac_acomod 	= nr_seq_tipo_acomod_w
					and 	ie_situacao 		= 'A'
					and 	coalesce(cd_setor_atendimento, cd_setor_atendimento_ww) = cd_setor_atendimento_ww
					and 	coalesce(nr_seq_local_pa, nr_seq_local_pa_w) = nr_seq_local_pa_w;

					if (qt_passagem_classif_w > 0) then
						exit;
					end if;

					end;
				end loop;
				close c08;

				dt_inicio_pacote_w:= dt_entrada_unidade_w;

			elsif (ie_regra_hora_inicio_w = 'PIC') then
				dt_inicio_pacote_w	:= dt_periodo_inicial_w;
			end if;
			
			/*fim regra de hora inicial e inicio regra hora final*/

			
			if (coalesce(ie_regra_hora_fim_w, 'EP+D') = 'EP+D') then
				dt_final_pacote_w	:= dt_inicio_pacote_w + qt_dias_pacote_w;
			elsif (ie_regra_hora_fim_w = 'EPFQ') then
				dt_final_pacote_w	:= dt_inicio_pacote_w + qt_proc_w;
			elsif (ie_regra_hora_fim_w = 'EDDF') then
				dt_final_pacote_w	:= coalesce(dt_alta_w, ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_inicio_pacote_w) + qt_dias_pacote_w);
			elsif (ie_regra_hora_fim_w = 'A') then
				dt_final_pacote_w	:= coalesce(dt_alta_w, dt_inicio_pacote_w + qt_dias_pacote_w);
			elsif (ie_regra_hora_fim_w = 'HFDP') then
				dt_final_pacote_w	:= ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_procedimento_w);
			elsif (ie_regra_hora_fim_w = 'FC') then
				dt_final_pacote_w	:= dt_fim_cirurgia_w;
			elsif (ie_regra_hora_fim_w = 'EP+H') then
				dt_final_pacote_w	:= dt_entrada_w + (qt_hora_w/24);
			elsif (ie_regra_hora_fim_w = 'EDHF') then			
				if (dt_inicio_pacote_w IS NOT NULL AND dt_inicio_pacote_w::text <> '') then
					dt_final_pacote_w	:= ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_pacote_w, hr_final_pacote_w) + qt_dias_pacote_w;
				end if;
			elsif (ie_regra_hora_fim_w = 'RES') then /* os 123401 fabr?cio em 18/02/2009  Regra Especial (HoraEntrada Setor)*/
				open c06;
				loop
				fetch c06 into
					cd_classif_setor_w,
					dt_entrada_unidade_w,
					dt_saida_unidade_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
					begin

					select	count(*)
					into STRICT	qt_passagem_classif_w
					from 	regra_pacote_hora_final
					where 	nr_seq_pac_acomod 	= nr_seq_tipo_acomod_w
					and 	ie_situacao = 'A'
					and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

					if (qt_passagem_classif_w > 0) then
						exit;
					end if;

					end;
				end loop;
				close c06;

				dt_final_pacote_w	:= dt_entrada_unidade_w;
			elsif (ie_regra_hora_fim_w = 'REA') then

				open c07;
				loop
				fetch c07 into
					cd_classif_setor_w,
					dt_entrada_unidade_w,
					dt_saida_unidade_w;
				EXIT WHEN NOT FOUND; /* apply on c07 */
					begin

					select	count(*)
					into STRICT	qt_passagem_classif_w
					from 	regra_pacote_hora_final
					where 	nr_seq_pac_acomod 	= nr_seq_tipo_acomod_w
					and 	ie_situacao 	= 'A'
					and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

					if (qt_passagem_classif_w > 0) then
						exit;
					end if;

					end;
				end loop;
				close c07;

				dt_final_pacote_w:= coalesce(dt_saida_unidade_w,dt_entrada_unidade_w);
			elsif (ie_regra_hora_fim_w = 'RESA') then /* os 224678 fabr?cio em 06/07/2010    Regra Especial (Hora sa?da Setor)*/
				open c06;
				loop
				fetch c06 into
					cd_classif_setor_w,
					dt_entrada_unidade_w,
					dt_saida_unidade_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
					begin

					select	count(*)
					into STRICT	qt_passagem_classif_w
					from 	regra_pacote_hora_final
					where 	nr_seq_pac_acomod = nr_seq_tipo_acomod_w
					and 	ie_situacao = 'A'
					and 	somente_numero(cd_classif_setor) = cd_classif_setor_w;

					if (qt_passagem_classif_w > 0) then
						exit;
					end if;

					end;
				end loop;
				close c06;

				dt_final_pacote_w:= dt_saida_unidade_w;
			elsif (ie_regra_hora_fim_w = 'PFC') then
				dt_final_pacote_w:= dt_periodo_final_w;
			elsif (ie_regra_hora_fim_w = 'RHIH') then
				dt_final_pacote_w:= dt_inicio_pacote_w + (qt_hora_w/24);
			end if;
			/*FIM VERIFICACAO DE REGRA HORA INICIAL E FINAL*/

			
			ie_proc_exigido_ok_w		:= 'S';
			
			open c04;
			loop
			fetch c04 into
				cd_proc_exigido_w,
				ie_origem_proc_exigido_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */

				select	count(*)
				into STRICT	cont_w
				from 	conta_paciente b,
					procedimento_paciente a
				where	b.nr_atendimento	= nr_atendimento_p
				and	a.nr_interno_conta	= b.nr_interno_conta
				and	a.cd_convenio		= cd_convenio_parametro_w
				and	a.dt_conta		between dt_inicio_pacote_w and dt_final_pacote_w
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	b.nr_interno_conta	= nr_interno_conta_w
				and	b.ie_status_acerto	= 1
				and	a.cd_procedimento	= cd_proc_exigido_w
				and	a.ie_origem_proced	= ie_origem_proc_exigido_w;

				if (cont_w = 0) then				
					ie_proc_exigido_ok_w	:= 'N';
				end if;				


			end loop;
			close c04;
			
			ie_mat_exigido_ok_w		:= 'S';
			ie_mat_opcional_ok_w		:= 'S';
			
			open c05;
			loop
			fetch c05 into
				cd_mat_exigido_w,
				ie_opcional_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */

				select	count(*)
				into STRICT	cont_w
				from 	conta_paciente b,
					material_atend_paciente a
				where	b.nr_atendimento	= nr_atendimento_p
				and	a.nr_interno_conta	= b.nr_interno_conta
				and	a.cd_convenio		= cd_convenio_parametro_w
				and	a.dt_conta		between dt_inicio_pacote_w and dt_final_pacote_w
				and	coalesce(a.cd_motivo_exc_conta::text, '') = ''
				and	b.nr_interno_conta	= nr_interno_conta_w
				and	b.ie_status_acerto	= 1
				and	a.cd_material		= cd_mat_exigido_w;

				if (coalesce(ie_opcional_w,'N') = 'S') then
					if (cont_w > 0) then
						ie_mat_opcional_ok_w	:= 'S';
					else
						ie_mat_opcional_ok_w	:= 'N';
					end if;
				else
					if (cont_w = 0) then
						ie_mat_exigido_ok_w	:= 'N';
					end if;
				end if;

			end loop;
			close c05;
			
			if (ie_proc_exigido_ok_w = 'S' and ie_mat_exigido_ok_w = 'S' and ie_mat_opcional_ok_w = 'S') then
				if (ie_tela_calcular_pacote_w = 'E' and vl_pacote_w > vl_pacote_old_w) then    
                                        vl_pacote_old_w := vl_pacote_w;
					ds_pacote_w	:= 'S';
					nr_interno_conta_ret_w := nr_interno_conta_w;
				elsif (ie_tela_calcular_pacote_w = 'S') then
					ds_pacote_w	:= 'S';
					nr_interno_conta_ret_w := nr_interno_conta_w;
                                end if;
			end if;
			
			end;
		end loop;
		close C03;
	end loop;
	close c02;

end loop;
close c01;

ds_pacote_p	:= ds_pacote_w;
nr_interno_conta_ret_p := nr_interno_conta_ret_w;

		
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_atendimento_pacote ( nr_atendimento_p bigint, nr_interno_conta_p bigint, ie_consiste_conta_p text default null, ds_pacote_p INOUT text DEFAULT NULL, nr_interno_conta_ret_p INOUT bigint DEFAULT NULL, cd_procedimento_p bigint DEFAULT NULL, ie_origem_proced_p bigint DEFAULT NULL) FROM PUBLIC;

