-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_delete_rec_sem_item ( nr_seq_protocolo_rec_p pls_rec_glosa_prot_cta_imp.nr_sequencia%type) AS $body$
DECLARE


tb_nr_sequencia_w	pls_util_cta_pck.t_number_table;
j			integer;
qt_contas_w		integer;
ie_contas_sem_itens_w	varchar(1) := 'N';

--verifica contas sem itens vinculados, para ver se foi gerada outra conta iguais a essa , devido as regras especiais de importacao e caso

--tiver, exclui antes essas contas.
C00 CURSOR(nr_seq_protocolo_rec_pc		pls_rec_glosa_prot_cta_imp.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_rec_imp,
		(SELECT	count(1)
		 from	pls_rec_glosa_proc_imp b
		 where	b.nr_seq_conta_imp = b.nr_sequencia) qt_proc,
		(select	count(1) qt_item
		 from	pls_rec_glosa_mat_imp c
		 where	c.nr_seq_conta_imp = b.nr_sequencia) qt_mat,
		a.nr_seq_conta
	from	pls_rec_glosa_conta_imp a,
		pls_rec_glosa_conta_imp b
	where	a.nr_seq_protocolo_cta = nr_seq_protocolo_rec_pc
	and 	b.nr_seq_protocolo_cta = nr_seq_protocolo_rec_pc
	and 	a.nr_sequencia != b.nr_sequencia
	and 	a.cd_guia = b.cd_guia
	and 	a.cd_guia_prestador = b.cd_guia_prestador
	and	a.cd_guia_recurso = b.cd_guia_recurso
	and (select	count(1) qt_item
		 from	pls_rec_glosa_mat_imp c
		 where	c.nr_seq_conta_imp = a.nr_sequencia) = 0
	and (select	count(1)
		 from	pls_rec_glosa_proc_imp b
		 where	b.nr_seq_conta_imp = a.nr_sequencia) = 0;
		

C01 CURSOR(nr_seq_protocolo_rec_pc		pls_rec_glosa_prot_cta_imp.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia nr_seq_rec_imp,
		(SELECT	count(1)
		 from	pls_rec_glosa_proc_imp b
		 where	b.nr_seq_conta_imp = a.nr_sequencia) qt_proc,
		(select	count(1) qt_item
		 from	pls_rec_glosa_mat_imp c
		 where	c.nr_seq_conta_imp = a.nr_sequencia) qt_mat,
		 nr_seq_conta
	from	pls_rec_glosa_conta_imp a
	where	a.nr_seq_protocolo_cta = nr_seq_protocolo_rec_pc;

BEGIN

j := 0;

select	count(1)
into STRICT	qt_contas_w
from	pls_rec_glosa_conta_imp
where	nr_seq_protocolo_cta = nr_seq_protocolo_rec_p;

begin

	-- Somente deve excluir o registro caso houver mais de um registro
	if (qt_contas_w > 1) then
	
		for r_C00_w in C00(nr_seq_protocolo_rec_p) loop
				
			--significa que outra conta com mesmo guia, guia_prestador e guia_recurso nessa importacao, ou seja, conta lancada pelas regras especiais de importacao

			--possui itens e esta conta nao, entao ela pode ser excluida			
			if	((r_C00_w.qt_proc > 0) or (r_C00_w.qt_mat > 0)) then
				tb_nr_sequencia_w(j) := r_C00_w.nr_seq_rec_imp;						
			
				if (tb_nr_sequencia_w.count > pls_util_pck.qt_registro_transacao_w) then
				
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						delete	FROM pls_rec_retorno_glosa
						where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
					commit;
					
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						delete	FROM pls_rec_glosa_glosas_imp
						where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
					commit;
				
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						delete	FROM PLS_REC_GLOSA_CONTA_IMP
						where	nr_sequencia = tb_nr_sequencia_w(i);
					commit;
					
					j := 0;
					tb_nr_sequencia_w.delete;
				else
					j := j + 1;
				end if;
			end if;
			
		end loop;
		
		if (tb_nr_sequencia_w.count > 0) then
		
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				delete	FROM pls_rec_retorno_glosa
				where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
			commit;
			
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				delete	FROM pls_rec_glosa_glosas_imp
				where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
			commit;
		
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				delete	FROM PLS_REC_GLOSA_CONTA_IMP
				where	nr_sequencia = tb_nr_sequencia_w(i);
			commit;
						
		end if;
		
		j := 0;
		tb_nr_sequencia_w.delete;
				
		for r_C01_w in C01(nr_seq_protocolo_rec_p) loop
				
			if (r_C01_w.qt_proc = 0) and (r_C01_w.qt_mat = 0) then				
					
				tb_nr_sequencia_w(j) := r_C01_w.nr_seq_rec_imp;						
			
				if (tb_nr_sequencia_w.count > pls_util_pck.qt_registro_transacao_w) then
				
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						delete	FROM pls_rec_retorno_glosa
						where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
					commit;
					
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						delete	FROM pls_rec_glosa_glosas_imp
						where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
					commit;
				
					forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
						delete	FROM PLS_REC_GLOSA_CONTA_IMP
						where	nr_sequencia = tb_nr_sequencia_w(i);
					commit;
					
					j := 0;
					tb_nr_sequencia_w.delete;
				else
					j := j + 1;
				end if;
					
			end if;
		end loop;

		if (tb_nr_sequencia_w.count > 0) then
		
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				delete	FROM pls_rec_retorno_glosa
				where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
			commit;
			
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				delete	FROM pls_rec_glosa_glosas_imp
				where	nr_seq_conta_imp = tb_nr_sequencia_w(i);
			commit;
		
			forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
				delete	FROM PLS_REC_GLOSA_CONTA_IMP
				where	nr_sequencia = tb_nr_sequencia_w(i);
			commit;
			
			ie_contas_sem_itens_w := 'S';
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1120856);
		end if;
	elsif (qt_contas_w = 1) then
	
		for r_C01_w in C01(nr_seq_protocolo_rec_p) loop
			if (r_C01_w.qt_proc = 0) and (r_C01_w.qt_mat = 0) then
				

				delete	FROM pls_rec_retorno_glosa
				where	nr_seq_conta_imp = r_C01_w.nr_seq_rec_imp;

				delete	FROM pls_rec_glosa_glosas_imp
				where	nr_seq_conta_imp = r_C01_w.nr_seq_rec_imp;

				delete	FROM pls_rec_glosa_conta_imp
				where	nr_sequencia = r_C01_w.nr_seq_rec_imp;
										
				delete 	from pls_rec_glosa_prot_cta_imp
				where 	nr_sequencia = nr_seq_protocolo_rec_p;
				
				commit;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1120856);	
			end if;
		end loop;
	
	end if;
exception
when others then
	if (qt_contas_w = 1) then
	-- Arquivo sem itens, nao sera integrado. Favor verificar.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1120856);
	else
	
		if (ie_contas_sem_itens_w = 'N') then
			-- Houve uma falha no processo de importao. Erro de integridade na exclusao de contas de recurso sem item.
			CALL wheb_mensagem_pck.exibir_mensagem_abort(874774);
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1120856);
		end if;
	end if;
end;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_delete_rec_sem_item ( nr_seq_protocolo_rec_p pls_rec_glosa_prot_cta_imp.nr_sequencia%type) FROM PUBLIC;

