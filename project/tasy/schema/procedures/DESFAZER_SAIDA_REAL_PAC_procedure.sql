-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_saida_real_pac ( nm_usuario_p text, nr_atendimento_p bigint, qt_min_saida_p bigint) AS $body$
DECLARE

 
ie_gera_eritel_w		varchar(3);
cd_estabelecimento_w		integer;
cd_setor_atendimento_w		bigint;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
nr_seq_atepacu_w		bigint;
nr_atendimento_ocup_w		bigint;
nr_seq_interno_w		bigint;
ie_status_unidade_ant_w		varchar(3);
dt_saida_real_w			timestamp;
cd_pessoa_fisica_w		varchar(10);


BEGIN 
 
nr_seq_atepacu_w	:= 	Obter_Atepacu_paciente(nr_atendimento_p,'IAA');
 
if (qt_min_saida_p > 0) then 
 
	select 	max(dt_saida_real) 
	into STRICT	dt_saida_real_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
	if	((dt_saida_real_w + qt_min_saida_p/1440) < clock_timestamp()) then 
	 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(262419);
	 
	end if;
 
end if;
 
if (nr_seq_atepacu_w IS NOT NULL AND nr_seq_atepacu_w::text <> '') then 
 
	begin 
 
	select	max(a.nr_atendimento), 
		max(a.nr_seq_interno) 
	into STRICT	nr_atendimento_ocup_w, 
		nr_seq_interno_w 
	from	unidade_atendimento a, 
		atend_paciente_unidade b 
	where	a.cd_setor_atendimento 	= b.cd_setor_atendimento 
	and	a.cd_unidade_compl	= b.cd_unidade_compl 
	and	a.cd_unidade_basica	= b.cd_unidade_basica 
	and	b.nr_seq_interno	= nr_seq_atepacu_w;
		 
	if (nr_atendimento_ocup_w IS NOT NULL AND nr_atendimento_ocup_w::text <> '') then 
		 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262420 , 'NR_ATENDIMENTO_OCUP_W='||nr_atendimento_ocup_w);
	 
	end if;
	 
	select	max(ie_status_unidade) 
	into STRICT	ie_status_unidade_ant_w 
	from	unidade_atend_hist 
	where	nr_seq_unidade = nr_seq_interno_w 
	and	nr_atendimento = nr_atendimento_p 
	and	IE_STATUS_UNIDADE = 'A';
	 
	if (coalesce(ie_status_unidade_ant_w::text, '') = '') then 
	 
		select	max(ie_status_unidade) 
		into STRICT	ie_status_unidade_ant_w 
		from	unidade_atend_hist 
		where	nr_seq_unidade = nr_seq_interno_w 
		and	nr_atendimento = nr_atendimento_p 
		and	ie_status_unidade = 'G';
		 
		if (coalesce(ie_status_unidade_ant_w::text, '') = '') then 
			ie_status_unidade_ant_w := 'L';
		end if;	
	end if;		
		 
	update	atendimento_paciente 
	set	dt_saida_real	 = NULL, 
		nm_usuario_saida  = NULL, 
		nm_usuario	=	nm_usuario_p, 
		dt_atualizacao	= 	clock_timestamp(), 
		ds_justif_saida_real  = NULL 
	where	nr_atendimento	=	nr_atendimento_p 
	and	(dt_saida_real IS NOT NULL AND dt_saida_real::text <> '');
	 
	select	max(cd_pessoa_fisica) 
	into STRICT 	cd_pessoa_fisica_w 
	from	usuario 
	where	nm_usuario	= nm_usuario_p;
	 
	update	SL_UNID_ATEND a 
	set	DT_CANCELAMENTO_SERVICO	= clock_timestamp(), 
		CD_EXECUTOR_CANC_SERV	= cd_pessoa_fisica_w, 
		IE_STATUS_SERV		= 'C' 
	where	nr_seq_unidade		= nr_seq_interno_w 
	and	coalesce(DT_INICIO::text, '') = '' 
	and	IE_STATUS_SERV		= 'P' 
	and	exists (SELECT 1 
			from 	SL_HISTORICO_GERACAO w, 
				SL_REGRA_SERVICO z 
			where 	w.NR_SEQ_SERV_UNID = a.nr_sequencia 
			and	z.nr_sequencia = w.NR_SEQ_REGRA_SERVICO 
			and	z.ie_evento = 'AR');
	 
	if (ie_status_unidade_ant_w <> 'L') then 
		update	unidade_atendimento 
		set	ie_status_unidade	= ie_status_unidade_ant_w 
		where	nr_seq_interno		= nr_seq_interno_w;
			 
	end if;
 
	end;
	 
end if;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_saida_real_pac ( nm_usuario_p text, nr_atendimento_p bigint, qt_min_saida_p bigint) FROM PUBLIC;

