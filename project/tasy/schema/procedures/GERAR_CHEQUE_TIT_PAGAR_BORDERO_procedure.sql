-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cheque_tit_pagar_bordero (nr_titulo_p bigint, nr_bordero_p bigint, cd_banco_p bigint, cd_agencia_bancaria_p text, nr_cheque_inicial_p bigint, ie_opcao_p text, dt_emissao_p timestamp, nm_usuario_p text, ds_lista_titulo_p text, vl_maximo_p bigint, nr_seq_conta_banco_p bigint, ie_valor_tributos_p text, ie_nominal_p text, ie_ordenacao_p text, ds_destinatario_p text, ie_deduzir_tributo_p text, cd_moeda_p bigint default null, vl_cotacao_p bigint default null) AS $body$
DECLARE

/*
ie_opcao_p
1 - gerar cheque para cada título
2 - gerar cheque para cada fornecedor
3 - gerar cheque para títulos selecionados
4 - gerar cheque para cada fornecedor dos títulos selecionados
5 - gerar cheque para o borderô
*/
nr_titulo_w			bigint;
nr_seq_cheque_w			bigint;
nr_cheque_w			bigint;
vl_saldo_titulo_w		double precision;
vl_tit_bordero_w		double precision;
vl_cheque_w			double precision;
vl_bordero_w			double precision;
vl_bordero_trib_w		double precision;
vl_unit_cheque_w		double precision;
vl_maximo_w			double precision;
cd_estabelecimento_w		smallint;
cd_cgc_estabelecimento_w	varchar(14);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
ds_observacao_w			varchar(4000) := '';
ds_observacoes_w		varchar(4000) := '';
vl_total_cheque_w		double precision;
vl_tot_bordero_w		double precision;
qt_cgc_w			integer;
qt_pessoa_fisica_w		integer;
qt_cheque_w			bigint;
ie_cheque_repetido_w		varchar(1);
ds_mascara_w			varchar(255);
nr_cheque_mascara_w		varchar(15);
qt_dias_vencimento_w		bigint;
nr_seq_conta_banco_w		bigint;
ie_estab_banco_w		varchar(1);
vl_imposto_w			double precision	:= 0;
nr_seq_alteracao_w		bigint;
ie_alterar_venc_w		varchar(1);
ie_beneficiario_pf_pj_w		varchar(1);
ds_beneficiario_w		titulo_pagar_bordero_v.ds_beneficiario%type;
/* Projeto Multimoeda - Variáveis */

vl_bordero_estrang_w		double precision;
vl_complemento_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
cd_moeda_w			integer;
vl_un_cheque_estrang_w		double precision;

c01 CURSOR FOR
SELECT	coalesce(vl_bordero, 0) - coalesce(vl_desconto_bordero, 0) +
	coalesce(vl_Juros_Bordero, 0) + coalesce(vl_Multa_Bordero, 0) +
	coalesce(vl_out_desp_bordero, 0) -
	CASE WHEN ie_valor_tributos_p='S' THEN coalesce(obter_valor_tributo_baixa(nr_titulo,nr_bordero,null),0)  ELSE 0 END  vl_tit_bordero,
	vl_saldo_titulo,
	cd_cgc,
	cd_pessoa_fisica,
	nr_titulo,
	ds_observacao_titulo,
	ds_beneficiario,
	CASE WHEN coalesce(cd_moeda_p::text, '') = '' THEN vl_bordero_estrang  ELSE 0 END ,
	CASE WHEN coalesce(cd_moeda_p::text, '') = '' THEN vl_cotacao  ELSE vl_cotacao_p END ,
	coalesce(cd_moeda_p,cd_moeda_bordero)
from	titulo_pagar_bordero_v
where	((nr_titulo	= nr_titulo_p
	or nr_bordero	= nr_bordero_p) and ie_opcao_p = 1)
or	((ds_lista_titulo_p like '% ' || nr_titulo || ' %') and ie_opcao_p = 3)
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))  ELSE null END ,
	nr_titulo;

c02 CURSOR FOR
SELECT	a.cd_pessoa_fisica,
	a.cd_cgc,
	a.ds_beneficiario,
	sum(coalesce(a.vl_bordero, 0) - coalesce(a.vl_desconto_bordero, 0) +
	coalesce(a.vl_Juros_Bordero, 0) + coalesce(a.vl_Multa_Bordero, 0) +
	coalesce(a.vl_out_desp_bordero, 0) -
	CASE WHEN ie_valor_tributos_p='S' THEN coalesce(obter_valor_tributo_baixa(a.nr_titulo,a.nr_bordero,null),0)  ELSE 0 END  ) vl_tit_bordero,
	CASE WHEN coalesce(cd_moeda_p::text, '') = '' THEN sum(coalesce(a.vl_bordero_estrang,0))  ELSE 0 END
from	titulo_pagar_bordero_v a
where	a.nr_bordero	= nr_bordero_p
group 	by a.cd_pessoa_fisica,
	a.cd_cgc,
	a.ds_beneficiario
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc))  ELSE null END;

c03 CURSOR FOR
SELECT	nr_titulo,
	ds_observacao_titulo,
	ds_beneficiario
from	titulo_pagar_bordero_v
where	nr_bordero			= nr_bordero_p
and	coalesce(cd_pessoa_fisica, cd_cgc)	= coalesce(cd_pessoa_fisica_w, cd_cgc_w)
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))  ELSE null END;

c04 CURSOR FOR
SELECT	a.cd_cgc,
	a.cd_pessoa_fisica,
	a.ds_beneficiario,
	sum(coalesce(a.vl_bordero, 0) - coalesce(a.vl_desconto_bordero, 0) +
	coalesce(a.vl_Juros_Bordero, 0) + coalesce(a.vl_Multa_Bordero, 0) +
	coalesce(a.vl_out_desp_bordero, 0) -
	CASE WHEN ie_valor_tributos_p='S' THEN coalesce(obter_valor_tributo_baixa(a.nr_titulo,a.nr_bordero,null),0)  ELSE 0 END  ),
	CASE WHEN coalesce(cd_moeda_p::text, '') = '' THEN sum(coalesce(a.vl_bordero_estrang,0))  ELSE 0 END
from	titulo_pagar_bordero_v a
where	((ds_lista_titulo_p like '% ' || a.nr_titulo || ' %') and ie_opcao_p = 4)
group	by a.cd_cgc,
	a.cd_pessoa_fisica,
	a.ds_beneficiario
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc))  ELSE null END;

c05 CURSOR FOR
SELECT	nr_titulo,
	ds_observacao_titulo,
	ds_beneficiario
from	titulo_pagar_bordero_v
where	((ds_lista_titulo_p like '% ' || nr_titulo || ' %') and ie_opcao_p = 4)
and	coalesce(cd_cgc, cd_pessoa_fisica) = coalesce(cd_cgc_w, cd_pessoa_fisica_w)
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))  ELSE null END;

c06 CURSOR FOR
SELECT	sum(coalesce(a.vl_bordero, 0) - coalesce(a.vl_desconto_bordero, 0) +
	coalesce(a.vl_Juros_Bordero, 0) + coalesce(a.vl_Multa_Bordero, 0) +
	coalesce(a.vl_out_desp_bordero, 0)) vl_bordero_tributos,
	sum(coalesce(a.vl_sem_tributo,0)) vl_bordero,
	CASE WHEN coalesce(cd_moeda_p::text, '') = '' THEN sum(coalesce(a.vl_bordero_estrang,0))  ELSE 0 END  vl_bordero_estrang
from	titulo_pagar_bordero_v a
where	a.nr_bordero = nr_bordero_p
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc))  ELSE null END;

c07 CURSOR FOR /*Francisco - OS 40868 - 20/09/2006 - Incluir observacoes dos titulos nos cheques*/
SELECT	ds_observacao_titulo
from 	titulo_pagar_bordero_v
where	nr_bordero	= nr_bordero_p
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))  ELSE null END;

c08 CURSOR FOR
SELECT	nr_titulo
from	titulo_pagar_bordero_v
where	nr_bordero = nr_bordero_p
order 	by CASE WHEN ie_ordenacao_p='B' THEN  upper(obter_nome_pf_pj(cd_pessoa_fisica, cd_cgc))  ELSE null END;


BEGIN
nr_cheque_w	:= nr_cheque_inicial_p;

select	a.cd_cgc,
	a.cd_estabelecimento,
	CASE WHEN coalesce(cd_moeda_p::text, '') = '' THEN b.vl_cotacao  ELSE vl_cotacao_p END ,  --Busca a cotação e a moeda do borderô quando não informado na geração do cheque, quando informado considerar o que está na geração do cheque
	coalesce(cd_moeda_p,b.cd_moeda)
into STRICT	cd_cgc_estabelecimento_w,
	cd_estabelecimento_w,
	vl_cotacao_w,
	cd_moeda_w
from	estabelecimento a,
	bordero_pagamento b
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.nr_bordero		= nr_bordero_p;

qt_dias_vencimento_w := Obter_Param_Usuario(127, 17, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_dias_vencimento_w);

ie_cheque_repetido_w := Obter_Param_Usuario(855, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_cheque_repetido_w);
ds_mascara_w := Obter_Param_Usuario(855, 36, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ds_mascara_w);
ie_estab_banco_w := Obter_Param_Usuario(855, 55, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_estab_banco_w);
ie_alterar_venc_w := Obter_Param_Usuario(855, 66, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_alterar_venc_w);
ie_beneficiario_pf_pj_w := Obter_Param_Usuario(855, 77, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_beneficiario_pf_pj_w);

ds_mascara_w	:=	substr(ds_mascara_w,1,15);

if (ie_estab_banco_w = 'S') then
	if (nr_seq_conta_banco_p IS NOT NULL AND nr_seq_conta_banco_p::text <> '') then
		select	max(a.cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	banco_estabelecimento a
		where	a.nr_sequencia = nr_seq_conta_banco_p;
	elsif (nr_bordero_p IS NOT NULL AND nr_bordero_p::text <> '') then
		select	max(nr_seq_conta_banco)
		into STRICT	nr_seq_conta_banco_w
		from 	bordero_pagamento
		where	nr_bordero = nr_bordero_p;

		select	max(a.cd_estabelecimento)
		into STRICT	cd_estabelecimento_w
		from	banco_estabelecimento a
		where	a.nr_sequencia = nr_seq_conta_banco_w;
	end if;
end if;

if (ie_opcao_p in ('1','3')) then
	open c01;
	loop
	fetch c01 into
		vl_tit_bordero_w,
		vl_saldo_titulo_w,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		nr_titulo_w,
		ds_observacoes_w,
		ds_beneficiario_w,
		vl_bordero_estrang_w,
		vl_cotacao_w,
		cd_moeda_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (length(trim(both ds_mascara_w)) >= length(trim(both to_char(nr_cheque_w)))) then
			nr_cheque_mascara_w	:= trim(both to_char(nr_cheque_w,ds_mascara_w));
		end if;

		if (ie_cheque_repetido_w = 'N') then
			select	count(*)
			into STRICT	qt_cheque_w
			from	cheque a
			where	a.nr_cheque		= coalesce(nr_cheque_mascara_w,nr_cheque_w)
			and	a.cd_banco		= cd_banco_p
			and	a.cd_agencia_bancaria	= cd_agencia_bancaria_p
			and	a.nr_seq_conta_banco	= nr_seq_conta_banco_p
			and	coalesce(a.dt_cancelamento::text, '') = '';
			if (qt_cheque_w > 0) then
				/* Já existem cheques com este número, banco, agência e conta.
				   Cheque: nr_cheque_w. Parâmetro [28]. */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(181528,'NR_CHEQUE_W='||nr_cheque_w,-20012);
			end if;
		end if;

		if (coalesce(ie_deduzir_tributo_p,'N')	= 'S') then

			select	coalesce(sum(a.vl_imposto),0)
			into STRICT	vl_imposto_w
			from	w_titulo_pagar_imposto a
			where	a.nr_titulo	= nr_titulo_w;

		end if;

		select	nextval('cheque_seq')
		into STRICT	nr_seq_cheque_w
		;

		/* Projeto Multimoeda - Verifica se o bordero é em moeda estrangeira, caso negativo limpa as variáveis */

		/* Caso a moeda e a cotação sejam definidos na geração do cheque, calcula o valor em moeda estrangeira */

		if ((cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and coalesce(vl_cotacao_w,0) <> 0) then
			if (coalesce(nr_bordero_p::text, '') = '') then
				vl_bordero_estrang_w := coalesce(vl_saldo_titulo_w,0) / vl_cotacao_w;
			else
				vl_bordero_estrang_w := coalesce(vl_tit_bordero_w,0) / vl_cotacao_w;
			end if;
		end if;
		if (coalesce(vl_bordero_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_bordero_estrang_w := vl_bordero_estrang_w - (coalesce(vl_imposto_w,0) / vl_cotacao_w);
			vl_complemento_w := (vl_tit_bordero_w - vl_imposto_w) - vl_bordero_estrang_w;
		else
			vl_bordero_estrang_w := null;
			vl_complemento_w := null;
			vl_cotacao_w := null;
		end if;

		if (ie_beneficiario_pf_pj_w = 'S') and (ds_beneficiario_w IS NOT NULL AND ds_beneficiario_w::text <> '') then
			begin

			insert into cheque(CD_BANCO,
				CD_AGENCIA_BANCARIA,
				NR_CHEQUE,
				DT_EMISSAO,
				VL_CHEQUE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				CD_CGC_EMITENTE,
				CD_CGC_DESTINATARIO,
				CD_PESSOA_DESTINATARIO,
				DS_DESTINATARIO,
				DT_IMPRESSAO,
				IE_SITUACAO,
				CD_ESTABELECIMENTO,
				nr_sequencia,
				nr_seq_conta_banco,
				ds_observacao,
				ds_utilizacao,
				dt_vencimento,
				vl_cheque_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda)
			values	(cd_banco_p,
				cd_agencia_bancaria_p,
				coalesce(nr_cheque_mascara_w,nr_cheque_w),
				coalesce(dt_emissao_p, clock_timestamp()),
				coalesce(CASE WHEN coalesce(nr_bordero_p::text, '') = '' THEN  vl_saldo_titulo_w  ELSE vl_tit_bordero_w END ,0) - vl_imposto_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_cgc_estabelecimento_w,
				cd_cgc_w,
				cd_pessoa_fisica_w,
				substr(ds_beneficiario_w,1,40),
				null,
				null,
				CD_ESTABELECIMENTO_W,
				nr_seq_cheque_w,
				nr_seq_conta_banco_p,
				ds_observacoes_w,
				wheb_mensagem_pck.get_texto(303951,'NR_TITULO=' || nr_titulo_w), --'Utilizado para pagamento do título ' || nr_titulo_w,
				coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
				vl_bordero_estrang_w,
				vl_complemento_w,
				vl_cotacao_w,
				cd_moeda_w);

			end;
		else
			begin

			insert into cheque(CD_BANCO,
				CD_AGENCIA_BANCARIA,
				NR_CHEQUE,
				DT_EMISSAO,
				VL_CHEQUE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				CD_CGC_EMITENTE,
				CD_CGC_DESTINATARIO,
				CD_PESSOA_DESTINATARIO,
				DS_DESTINATARIO,
				DT_IMPRESSAO,
				IE_SITUACAO,
				CD_ESTABELECIMENTO,
				nr_sequencia,
				nr_seq_conta_banco,
				ds_observacao,
				ds_utilizacao,
				dt_vencimento,
				vl_cheque_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda)
			values	(cd_banco_p,
				cd_agencia_bancaria_p,
				coalesce(nr_cheque_mascara_w,nr_cheque_w),
				coalesce(dt_emissao_p, clock_timestamp()),
				coalesce(CASE WHEN coalesce(nr_bordero_p::text, '') = '' THEN  vl_saldo_titulo_w  ELSE vl_tit_bordero_w END ,0) - vl_imposto_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_cgc_estabelecimento_w,
				cd_cgc_w,
				cd_pessoa_fisica_w,
				substr(ds_destinatario_p,1,40),
				null,
				null,
				CD_ESTABELECIMENTO_W,
				nr_seq_cheque_w,
				nr_seq_conta_banco_p,
				ds_observacoes_w,
				wheb_mensagem_pck.get_texto(303951,'NR_TITULO=' || nr_titulo_w), --'Utilizado para pagamento do título ' || nr_titulo_w,
				coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
				vl_bordero_estrang_w,
				vl_complemento_w,
				vl_cotacao_w,
				cd_moeda_w);

			end;
		end if;


		insert	into cheque_bordero_titulo(NR_SEQUENCIA,
			CD_BANCO,
			CD_AGENCIA_BANCARIA,
			NR_CHEQUE,
			DT_ATUALIZACAO,
			NM_USUARIO,
			NR_BORDERO,
			NR_TITULO,
			nr_seq_cheque)
		values (nextval('cheque_bordero_titulo_seq'),
			cd_banco_p,
			cd_agencia_bancaria_p,
			coalesce(nr_cheque_mascara_w,nr_cheque_w),
			clock_timestamp(),
			nm_usuario_p,
			nr_bordero_p,
			nr_titulo_w,
			nr_seq_cheque_w);

		nr_cheque_w	:= nr_cheque_w + 1;

	end loop;
	close c01;
elsif (ie_opcao_p	= '2') then
	open c02;
	loop
	fetch c02 into
		cd_pessoa_fisica_w,
		cd_cgc_w,
		ds_beneficiario_w,
		vl_saldo_titulo_w,
		vl_bordero_estrang_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */

		vl_maximo_w		:= vl_maximo_p;
		if (vl_maximo_w = 0) then
			vl_maximo_w	:= vl_saldo_titulo_w;
		end if;

		if (coalesce(ie_deduzir_tributo_p,'N') = 'S') then

			select	coalesce(sum(b.vl_imposto),0)
			into STRICT	vl_imposto_w
			from	w_titulo_pagar_imposto b,
				titulo_pagar_bordero_v a
			where	a.nr_titulo	= b.nr_titulo
			and	coalesce(a.cd_cgc,'X') = coalesce(cd_cgc_w,'X')
			and	coalesce(a.cd_pessoa_fisica,'X') = coalesce(cd_pessoa_fisica_w,'X')
			and	a.nr_bordero		= nr_bordero_p;

		end if;

		while(vl_saldo_titulo_w > 0) loop
			vl_unit_cheque_w 	:= vl_saldo_titulo_w;
			if (vl_saldo_titulo_w > vl_maximo_w) then
				vl_unit_cheque_w:= vl_maximo_w;
			end if;
			/* Projeto Multimoeda - Verifica se o bordero é em moeda estrangeira, caso positivo calcula os valores*/

			/* Caso a moeda e a cotação sejam definidos na geração do cheque, calcula o valor em moeda estrangeira */

			if ((cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and coalesce(vl_cotacao_w,0) <> 0 and coalesce(vl_bordero_estrang_w,0) = 0) then
				if (coalesce(nr_bordero_p::text, '') = '') then
					vl_bordero_estrang_w := coalesce(vl_saldo_titulo_w,0) / vl_cotacao_w;
				else
					vl_bordero_estrang_w := coalesce(vl_tit_bordero_w,0) / vl_cotacao_w;
				end if;
			end if;
			if (coalesce(vl_bordero_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
				vl_un_cheque_estrang_w := vl_bordero_estrang_w;
				if (vl_bordero_estrang_w > (vl_maximo_w / vl_cotacao_w)) then
					vl_un_cheque_estrang_w := vl_maximo_w / vl_cotacao_w;
				end if;
				vl_un_cheque_estrang_w := vl_un_cheque_estrang_w - (vl_imposto_w / vl_cotacao_w);
				vl_complemento_w := (vl_unit_cheque_w - vl_imposto_w) - vl_un_cheque_estrang_w;
			else
				vl_un_cheque_estrang_w := null;
				vl_complemento_w := null;
				vl_cotacao_w := null;
			end if;

			if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (length(ds_mascara_w) >= length(to_char(nr_cheque_w))) then
				nr_cheque_mascara_w	:= trim(both to_char(nr_cheque_w,ds_mascara_w));
			end if;

			if (ie_cheque_repetido_w = 'N') then
				select	count(*)
				into STRICT	qt_cheque_w
				from	cheque a
				where	a.nr_cheque		= coalesce(nr_cheque_mascara_w,nr_cheque_w)
				and	a.cd_banco		= cd_banco_p
				and	a.cd_agencia_bancaria	= cd_agencia_bancaria_p
				and	a.nr_seq_conta_banco	= nr_seq_conta_banco_p
				and	coalesce(a.dt_cancelamento::text, '') = '';
				if (qt_cheque_w > 0) then
					/* Já existem cheques com este número, banco, agência e conta.
				 	   Cheque: nr_cheque_w. Parâmetro [28]. */
					CALL wheb_mensagem_pck.exibir_mensagem_abort(181528,'NR_CHEQUE_W='||nr_cheque_w,-20012);
				end if;
			end if;

			select	nextval('cheque_seq')
			into STRICT	nr_seq_cheque_w
			;

			if (ie_beneficiario_pf_pj_w = 'S') and (ds_beneficiario_w IS NOT NULL AND ds_beneficiario_w::text <> '') then
				begin

				insert into cheque(CD_BANCO,
					CD_AGENCIA_BANCARIA,
					NR_CHEQUE,
					DT_EMISSAO,
					VL_CHEQUE,
					DT_ATUALIZACAO,
					NM_USUARIO,
					CD_CGC_EMITENTE,
					CD_CGC_DESTINATARIO,
					CD_PESSOA_DESTINATARIO,
					DS_DESTINATARIO,
					DT_IMPRESSAO,
					IE_SITUACAO,
					CD_ESTABELECIMENTO,
					nr_sequencia,
					nr_seq_conta_banco,
					dt_vencimento,
					vl_cheque_estrang,
					vl_complemento,
					vl_cotacao,
					cd_moeda)
				values (cd_banco_p,
					cd_agencia_bancaria_p,
					coalesce(nr_cheque_mascara_w,nr_cheque_w),
					coalesce(dt_emissao_p, clock_timestamp()),
					coalesce(vl_unit_cheque_w,0) - vl_imposto_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_cgc_estabelecimento_w,
					cd_cgc_w,
					cd_pessoa_fisica_w,
					substr(ds_beneficiario_w,1,40),
					null,
					null,
					CD_ESTABELECIMENTO_W,
					nr_seq_cheque_w,
					nr_seq_conta_banco_p,
					coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
					vl_un_cheque_estrang_w,
					vl_complemento_w,
					vl_cotacao_w,
					cd_moeda_w);

				end;
			else
				begin

					insert into cheque(CD_BANCO,
						CD_AGENCIA_BANCARIA,
						NR_CHEQUE,
						DT_EMISSAO,
						VL_CHEQUE,
						DT_ATUALIZACAO,
						NM_USUARIO,
						CD_CGC_EMITENTE,
						CD_CGC_DESTINATARIO,
						CD_PESSOA_DESTINATARIO,
						DS_DESTINATARIO,
						DT_IMPRESSAO,
						IE_SITUACAO,
						CD_ESTABELECIMENTO,
						nr_sequencia,
						nr_seq_conta_banco,
						dt_vencimento,
						vl_cheque_estrang,
						vl_complemento,
						vl_cotacao,
						cd_moeda)
					values (cd_banco_p,
						cd_agencia_bancaria_p,
						coalesce(nr_cheque_mascara_w,nr_cheque_w),
						coalesce(dt_emissao_p, clock_timestamp()),
						coalesce(vl_unit_cheque_w,0) - vl_imposto_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_cgc_estabelecimento_w,
						cd_cgc_w,
						cd_pessoa_fisica_w,
						substr(ds_destinatario_p,1,40),
						null,
						null,
						CD_ESTABELECIMENTO_W,
						nr_seq_cheque_w,
						nr_seq_conta_banco_p,
						coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
						vl_un_cheque_estrang_w,
						vl_complemento_w,
						vl_cotacao_w,
						cd_moeda_w);

				end;
			end if;

			ds_observacoes_w := '';

			open c03;
			loop
			fetch c03 into
				nr_titulo_w,
				ds_observacao_w,
				ds_beneficiario_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				insert	into cheque_bordero_titulo(NR_SEQUENCIA,
					CD_BANCO,
					CD_AGENCIA_BANCARIA,
					NR_CHEQUE,
					DT_ATUALIZACAO,
					NM_USUARIO,
					NR_BORDERO,
					NR_TITULO,
					nr_seq_cheque)
				values (nextval('cheque_bordero_titulo_seq'),
					cd_banco_p,
					cd_agencia_bancaria_p,
					coalesce(nr_cheque_mascara_w,nr_cheque_w),
					clock_timestamp(),
					nm_usuario_p,
					nr_bordero_p,
					nr_titulo_w,
					nr_seq_cheque_w);

				if (coalesce(ds_observacoes_w::text, '') = '') then
					ds_observacoes_w	:= substr(ds_observacao_w, 1, 3999);
				else
					ds_observacoes_w	:= substr(ds_observacoes_w || ' - ' || ds_observacao_w, 1, 3999);
				end if;
			end loop;
			close c03;

			update	cheque
			set	ds_observacao = ds_observacoes_w
			where	nr_sequencia = nr_seq_cheque_w;

			nr_cheque_w	:= nr_cheque_w + 1;
			vl_saldo_titulo_w := vl_saldo_titulo_w - vl_unit_cheque_w;
			/* Projeto Multimoeda - Verifica se o bordero é em moeda estrangeira, caso positivo calcula os valores*/

			if (coalesce(vl_bordero_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
				vl_bordero_estrang_w := vl_bordero_estrang_w - (vl_un_cheque_estrang_w + (vl_imposto_w / vl_cotacao_w));
			end if;
		end loop;
	end loop;
	close c02;
elsif (ie_opcao_p = 4) then

	open c04;
	loop
	fetch c04 into
		cd_cgc_w,
		cd_pessoa_fisica_w,
		ds_beneficiario_w,
		vl_cheque_w,
		vl_bordero_estrang_w;
	EXIT WHEN NOT FOUND; /* apply on c04 */

		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (length(ds_mascara_w)) >= length(to_char(nr_cheque_w)) then
			nr_cheque_mascara_w	:= trim(both to_char(nr_cheque_w,ds_mascara_w));
		end if;

		if (ie_cheque_repetido_w = 'N') then
			select	count(*)
			into STRICT	qt_cheque_w
			from	cheque a
			where	a.nr_cheque		= coalesce(nr_cheque_mascara_w,nr_cheque_w)
			and	a.cd_banco		= cd_banco_p
			and	a.cd_agencia_bancaria	= cd_agencia_bancaria_p
			and	a.nr_seq_conta_banco	= nr_seq_conta_banco_p
			and	coalesce(a.dt_cancelamento::text, '') = '';
			if (qt_cheque_w > 0) then
				/* Já existem cheques com este número, banco, agência e conta.
				   Cheque: nr_cheque_w. Parâmetro [28]. */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(181528,'NR_CHEQUE_W='||nr_cheque_w,-20012);
			end if;
		end if;

		if (coalesce(ie_deduzir_tributo_p,'N') = 'S') then

			select	coalesce(sum(b.vl_imposto),0)
			into STRICT	vl_imposto_w
			from	w_titulo_pagar_imposto b,
				titulo_pagar_bordero_v a
			where	a.nr_titulo	= b.nr_titulo
			and	coalesce(a.cd_cgc,'X') = coalesce(cd_cgc_w,'X')
			and	coalesce(a.cd_pessoa_fisica,'X') = coalesce(cd_pessoa_fisica_w,'X');

		end if;

		select	nextval('cheque_seq')
		into STRICT	nr_seq_cheque_w
		;

		/* Projeto Multimoeda - Verifica se o bordero é em moeda estrangeira, caso positivo calcula os valores*/

		/* Caso a moeda e a cotação sejam definidos na geração do cheque, calcula o valor em moeda estrangeira */

		if ((cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and coalesce(vl_cotacao_w,0) <> 0) then
			if (coalesce(nr_bordero_p::text, '') = '') then
				vl_bordero_estrang_w := coalesce(vl_saldo_titulo_w,0) / vl_cotacao_w;
			else
				vl_bordero_estrang_w := coalesce(vl_tit_bordero_w,0) / vl_cotacao_w;
			end if;
		end if;
		if (coalesce(vl_bordero_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_bordero_estrang_w := vl_bordero_estrang_w - (vl_imposto_w / vl_cotacao_w);
			vl_complemento_w := (vl_cheque_w - vl_imposto_w) - vl_bordero_estrang_w;
		else
			vl_bordero_estrang_w := null;
			vl_complemento_w := null;
			vl_cotacao_w := null;
		end if;

		if (ie_beneficiario_pf_pj_w = 'S') and (ds_beneficiario_w IS NOT NULL AND ds_beneficiario_w::text <> '') then
			begin

			insert into cheque(CD_BANCO,
				CD_AGENCIA_BANCARIA,
				NR_CHEQUE,
				DT_EMISSAO,
				VL_CHEQUE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				CD_CGC_EMITENTE,
				CD_CGC_DESTINATARIO,
				CD_PESSOA_DESTINATARIO,
				DS_DESTINATARIO,
				DT_IMPRESSAO,
				IE_SITUACAO,
				CD_ESTABELECIMENTO,
				nr_sequencia,
				nr_seq_conta_banco,
				dt_vencimento,
				vl_cheque_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda)
			values (cd_banco_p,
				cd_agencia_bancaria_p,
				coalesce(nr_cheque_mascara_w,nr_cheque_w),
				coalesce(dt_emissao_p, clock_timestamp()),
				coalesce(vl_cheque_w,0) - vl_imposto_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_cgc_estabelecimento_w,
				cd_cgc_w,
				cd_pessoa_fisica_w,
				substr(ds_beneficiario_w,1,40),
				null,
				null,
				CD_ESTABELECIMENTO_W,
				nr_seq_cheque_w,
				nr_seq_conta_banco_p,
				coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
				vl_bordero_estrang_w,
				vl_complemento_w,
				vl_cotacao_w,
				cd_moeda_w);

			end;
		else
			begin

			insert into cheque(CD_BANCO,
				CD_AGENCIA_BANCARIA,
				NR_CHEQUE,
				DT_EMISSAO,
				VL_CHEQUE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				CD_CGC_EMITENTE,
				CD_CGC_DESTINATARIO,
				CD_PESSOA_DESTINATARIO,
				DS_DESTINATARIO,
				DT_IMPRESSAO,
				IE_SITUACAO,
				CD_ESTABELECIMENTO,
				nr_sequencia,
				nr_seq_conta_banco,
				dt_vencimento,
				vl_cheque_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda)
			values (cd_banco_p,
				cd_agencia_bancaria_p,
				coalesce(nr_cheque_mascara_w,nr_cheque_w),
				coalesce(dt_emissao_p, clock_timestamp()),
				coalesce(vl_cheque_w,0) - vl_imposto_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_cgc_estabelecimento_w,
				cd_cgc_w,
				cd_pessoa_fisica_w,
				substr(ds_destinatario_p,1,40),
				null,
				null,
				CD_ESTABELECIMENTO_W,
				nr_seq_cheque_w,
				nr_seq_conta_banco_p,
				coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
				vl_bordero_estrang_w,
				vl_complemento_w,
				vl_cotacao_w,
				cd_moeda_w);

			end;
		end if;

		ds_observacoes_w := '';

		open c05;
		loop
		fetch c05 into
			nr_titulo_w,
			ds_observacao_w,
			ds_beneficiario_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */

			insert	into cheque_bordero_titulo(NR_SEQUENCIA,
				CD_BANCO,
				CD_AGENCIA_BANCARIA,
				NR_CHEQUE,
				DT_ATUALIZACAO,
				NM_USUARIO,
				NR_BORDERO,
				NR_TITULO,
				nr_seq_cheque)
			values (nextval('cheque_bordero_titulo_seq'),
				cd_banco_p,
				cd_agencia_bancaria_p,
				coalesce(nr_cheque_mascara_w,nr_cheque_w),
				clock_timestamp(),
				nm_usuario_p,
				nr_bordero_p,
				nr_titulo_w,
				nr_seq_cheque_w);

			if (coalesce(ds_observacoes_w::text, '') = '') then
				ds_observacoes_w	:= substr(ds_observacao_w, 1, 3999);
			else
				ds_observacoes_w	:= substr(ds_observacoes_w || ' - ' || ds_observacao_w, 1, 3999);
			end if;
		end loop;
		close c05;

		update	cheque
		set	ds_observacao = ds_observacoes_w
		where	nr_sequencia = nr_seq_cheque_w;

		nr_cheque_w	:= nr_cheque_w + 1;

	end loop;
	close c04;

elsif (ie_opcao_p = 5) then

	open c06;
	loop
	fetch c06 into
		vl_bordero_trib_w,
		vl_bordero_w,
		vl_bordero_estrang_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */

		begin
		open c07;
		loop
		fetch c07 into
			ds_observacao_w;
		EXIT WHEN NOT FOUND; /* apply on c07 */

			if (coalesce(ds_observacoes_w::text, '') = '') then
				ds_observacoes_w	:= ds_observacao_w;
			elsif (length(ds_observacoes_w || ' - ' || ds_observacao_w) < 4000) then
				ds_observacoes_w	:= ds_observacoes_w || ' - ' || ds_observacao_w;
			end if;
		end loop;
		close c07;
		exception
			when others then
				/* Erro ao gerar observacao do cheque
				   length(ds_observacoes_w) Obs_tit= length(ds_observacao_w) sqlerrm */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(181529,	'DS_OBSERVACOES_W='||length(ds_observacoes_w)||';'||
										'DS_OBSERVACAO_W='||length(ds_observacao_w)||';'||
										'SQL_ERRM='||sqlerrm,-20012);
		end;

		if (ie_nominal_p	= 'S') then
			/* Francisco - OS 91742 - 02/05/2008 */

			select	count(distinct cd_cgc),
				count(distinct cd_pessoa_fisica)
			into STRICT	qt_cgc_w,
				qt_pessoa_fisica_w
			from	titulo_pagar_bordero_v
			where	nr_bordero	= nr_bordero_p;

			if (qt_cgc_w = 1) then
				select	max(cd_cgc)
				into STRICT	cd_cgc_w
				from	titulo_pagar_bordero_v
				where	nr_bordero	= nr_bordero_p;
			elsif (qt_pessoa_fisica_w = 1) then
				select	max(cd_pessoa_fisica)
				into STRICT	cd_pessoa_fisica_w
				from	titulo_pagar_bordero_v
				where	nr_bordero	= nr_bordero_p;
			end if;

			/* Fim Francisco - OS 91742 - 02/05/2008 */

		end if;

		if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (length(ds_mascara_w) >= length(to_char(nr_cheque_w))) then
			nr_cheque_mascara_w	:= trim(both to_char(nr_cheque_w,ds_mascara_w));
		end if;

		if (ie_cheque_repetido_w = 'N') then
			select	count(*)
			into STRICT	qt_cheque_w
			from	cheque a
			where	a.nr_cheque		= coalesce(nr_cheque_mascara_w,nr_cheque_w)
			and	a.cd_banco		= cd_banco_p
			and	a.cd_agencia_bancaria	= cd_agencia_bancaria_p
			and	a.nr_seq_conta_banco	= nr_seq_conta_banco_p
			and	coalesce(a.dt_cancelamento::text, '') = '';
			if (qt_cheque_w > 0) then
				/* Já existem cheques com este número, banco, agência e conta.
				   Cheque: nr_cheque_w. Parâmetro [28]. */
				CALL wheb_mensagem_pck.exibir_mensagem_abort(181528,'NR_CHEQUE_W='||nr_cheque_w,-20012);
			end if;
		end if;

		if (coalesce(ie_deduzir_tributo_p,'N') = 'S') then

			select	coalesce(sum(b.vl_imposto),0)
			into STRICT	vl_imposto_w
			from	w_titulo_pagar_imposto b,
				titulo_pagar_bordero_v a
			where	a.nr_titulo	= b.nr_titulo
			and	a.nr_bordero	= nr_bordero_p;

		end if;

		select	nextval('cheque_seq')
		into STRICT	nr_seq_cheque_w
		;

		/* Projeto Multimoeda - Verifica se o bordero é em moeda estrangeira, caso positivo calcula os valores*/

		/* Caso a moeda e a cotação sejam definidos na geração do cheque, calcula o valor em moeda estrangeira */

		if ((cd_moeda_p IS NOT NULL AND cd_moeda_p::text <> '') and coalesce(vl_cotacao_w,0) <> 0) then
			if (coalesce(nr_bordero_p::text, '') = '') then
				vl_bordero_estrang_w := coalesce(vl_saldo_titulo_w,0) / vl_cotacao_w;
			else
				vl_bordero_estrang_w := coalesce(vl_tit_bordero_w,0) / vl_cotacao_w;
			end if;
		end if;
		if (coalesce(vl_bordero_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0) then
			vl_bordero_estrang_w := vl_bordero_estrang_w - (vl_imposto_w / vl_cotacao_w);
			if (ie_valor_tributos_p = 'N') then
				vl_complemento_w := (vl_bordero_w - vl_imposto_w) - vl_bordero_estrang_w;
			else
				vl_complemento_w := (vl_bordero_trib_w - vl_imposto_w) - vl_bordero_estrang_w;
			end if;
		else
			vl_bordero_estrang_w := null;
			vl_complemento_w := null;
			vl_cotacao_w := null;
		end if;

		insert into cheque(CD_BANCO,
			CD_AGENCIA_BANCARIA,
			NR_CHEQUE,
			DT_EMISSAO,
			VL_CHEQUE,
			DT_ATUALIZACAO,
			NM_USUARIO,
			CD_CGC_EMITENTE,
			CD_CGC_DESTINATARIO,
			CD_PESSOA_DESTINATARIO,
			DS_DESTINATARIO,
			DT_IMPRESSAO,
			IE_SITUACAO,
			CD_ESTABELECIMENTO,
			nr_sequencia,
			nr_seq_conta_banco,
			ds_observacao,
			ds_utilizacao,
			dt_vencimento,
			vl_cheque_estrang,
			vl_complemento,
			vl_cotacao,
			cd_moeda)
		values	(cd_banco_p,
			cd_agencia_bancaria_p,
			coalesce(nr_cheque_mascara_w,nr_cheque_w),
			coalesce(dt_emissao_p, clock_timestamp()),
			coalesce(CASE WHEN ie_valor_tributos_p='N' THEN  vl_bordero_w  ELSE vl_bordero_trib_w END ,0) - vl_imposto_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_cgc_estabelecimento_w,
			cd_cgc_w,
			cd_pessoa_fisica_w,
			substr(ds_destinatario_p,1,40),
			null,
			null,
			CD_ESTABELECIMENTO_W,
			nr_seq_cheque_w,
			nr_seq_conta_banco_p,
			ds_observacoes_w,
			wheb_mensagem_pck.get_texto(305563,'NR_BORDERO=' || nr_bordero_p), --'Utilizado para pagamento do bordero ' || nr_bordero_p,
			coalesce(dt_emissao_p,clock_timestamp()) + coalesce(qt_dias_vencimento_w,0),
			vl_bordero_estrang_w,
			vl_complemento_w,
			vl_cotacao_w,
			cd_moeda_w);

		insert	into cheque_bordero_titulo(NR_SEQUENCIA,
			CD_BANCO,
			CD_AGENCIA_BANCARIA,
			NR_CHEQUE,
			DT_ATUALIZACAO,
			NM_USUARIO,
			NR_BORDERO,
			NR_TITULO,
			nr_seq_cheque)
		values (nextval('cheque_bordero_titulo_seq'),
			cd_banco_p,
			cd_agencia_bancaria_p,
			coalesce(nr_cheque_mascara_w,nr_cheque_w),
			clock_timestamp(),
			nm_usuario_p,
			nr_bordero_p,
			nr_titulo_w,
			nr_seq_cheque_w);

		nr_cheque_w	:= nr_cheque_w + 1;

	end loop;
	close c06;
end if;

select	coalesce(sum(a.vl_cheque),0)
into STRICT	vl_total_cheque_w
from	cheque a
where	coalesce(a.dt_cancelamento::text, '') = ''
and	exists (SELECT	1
		from	cheque_bordero_titulo x
		where	x.nr_seq_cheque	= a.nr_sequencia
		and	x.nr_bordero	= nr_bordero_p);

select	sum(coalesce(vl_bordero, 0) - coalesce(vl_desconto_bordero, 0) + coalesce(vl_Juros_Bordero, 0) + coalesce(vl_Multa_Bordero, 0) + coalesce(vl_out_desp_bordero, 0))
into STRICT	vl_tot_bordero_w
from	titulo_pagar_bordero_v
where	nr_bordero	= nr_bordero_p;

if (vl_total_cheque_w > vl_tot_bordero_w) then
	/* A soma dos cheques vinculados a este borderô supera o valor total do mesmo!
	   Verifique se já foram gerados cheques para este borderô e se estes ainda não foram cancelados.
	   vl_cheques = vl_total_cheque_w vl_bordero= vl_tot_bordero_w */
	CALL wheb_mensagem_pck.exibir_mensagem_abort(181534,	'VL_TOTAL_CHEQUE_W='||vl_total_cheque_w||';'||
							'VL_TOT_BORDERO_W='||vl_tot_bordero_w);
end if;

if (nr_cheque_w <> 0) then

	if (ds_mascara_w IS NOT NULL AND ds_mascara_w::text <> '') and (length(ds_mascara_w) >= length(to_char(nr_cheque_w))) then
		nr_cheque_mascara_w	:= trim(both to_char(nr_cheque_w - 1,ds_mascara_w));
	end if;

	update	banco_estabelecimento
	set	nr_ultimo_cheque	= coalesce(nr_cheque_mascara_w,to_char(nr_cheque_w - 1))
	where	cd_banco		= cd_banco_p
	and	cd_agencia_bancaria	= cd_agencia_bancaria_p
	and	nr_sequencia		= nr_seq_conta_banco_p;
end if;

open c08;
loop
fetch c08 into
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on c08 */

	if (coalesce(ie_alterar_venc_w,'N')	= 'S') and (dt_emissao_p IS NOT NULL AND dt_emissao_p::text <> '') then
		CALL alterar_venc_titulo(	nr_titulo_w,
					dt_emissao_p,
					'CP',
					clock_timestamp(),
					null,
					null,
					null,
					null,
					null,
					nm_usuario_p,
					wheb_mensagem_pck.get_texto(305564,'NR_CHEQUE_W=' || nr_cheque_w));--'Vencimento alterado conforme o cheque de número  ' ||  nr_cheque_w
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_alteracao_w
		from	titulo_pagar_alt_venc a
		where	a.nr_titulo	= nr_titulo_w;

		CALL atualizar_venc_titulo_imposto(	nr_titulo_w,
						nr_seq_alteracao_w,
						nm_usuario_p);
	end if;

end loop;
close c08;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cheque_tit_pagar_bordero (nr_titulo_p bigint, nr_bordero_p bigint, cd_banco_p bigint, cd_agencia_bancaria_p text, nr_cheque_inicial_p bigint, ie_opcao_p text, dt_emissao_p timestamp, nm_usuario_p text, ds_lista_titulo_p text, vl_maximo_p bigint, nr_seq_conta_banco_p bigint, ie_valor_tributos_p text, ie_nominal_p text, ie_ordenacao_p text, ds_destinatario_p text, ie_deduzir_tributo_p text, cd_moeda_p bigint default null, vl_cotacao_p bigint default null) FROM PUBLIC;

