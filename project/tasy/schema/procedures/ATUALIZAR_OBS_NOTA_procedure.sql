-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_obs_nota ( nr_seq_nota_fiscal_p bigint, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* DADOS DA REGRA */
 
cd_operacao_w		regra_obs_nf.cd_operacao_nf%type;
ie_entrada_saida_w		regra_obs_nf.ie_entrada_saida%type;
ie_campo_w		regra_obs_nf.ie_campo%type;
ds_observacao_w		varchar(4000);
cd_cnpj_w		regra_obs_nf_restricao.cd_cnpj%type;

/* DADOS DA NOTA */
 
ds_condicao_pagamento_w	condicao_pagamento.ds_condicao_pagamento%type;
ds_forma_pagamento_w	varchar(4000);
nm_medico_resp_w		varchar(100);
qt_tempo_atend_w		bigint;
cd_operacao_nf_w		nota_fiscal.cd_operacao_nf%type;
cd_cnpj_nf_emitente_w	nota_fiscal.cd_cgc_emitente%type;
cd_cnpj_nf_w		nota_fiscal.cd_cgc%type;
ie_tipo_nota_w		nota_fiscal.ie_tipo_nota%type;
vl_tributo_w		nota_fiscal_item_trib.vl_tributo%type;
nr_seq_nf_orig_w		nota_fiscal_item.nr_seq_nf_orig%type;
ds_operacao_nf_w		operacao_nota.ds_operacao_nf%type;
ds_origem_nfs_w		varchar(500) := '';
ds_nf_canc_origem_conta_w varchar(500) := '';
vl_total_tributo_w		double precision := 0;
macro_nf_origem_conta_w  nota_fiscal.cd_cgc%type := 0;
qtd_macros_w        nota_fiscal.cd_cgc%type := 0;

ds_comando_entrada_w	varchar(255) := 'select a.cd_tipo_recebimento from titulo_receber_liq a, titulo_receber b where a.nr_titulo = b.nr_titulo and b.nr_seq_nf_saida = :nr_seq_nota_fiscal';
ds_comando_saida_w	varchar(255) := 'select a.cd_tipo_baixa from titulo_pagar_baixa a, titulo_pagar b where a.nr_titulo = b.nr_titulo and b.nr_seq_nota_fiscal = :nr_seq_nota_fiscal';

c01 CURSOR FOR 
SELECT	a.cd_operacao_nf, 
	a.ie_entrada_saida, 
	a.ie_campo, 
	a.ds_observacao, 
	b.cd_cnpj 
FROM regra_obs_nf a
LEFT OUTER JOIN regra_obs_nf_restricao b ON (a.nr_sequencia = b.nr_seq_regra)
WHERE a.cd_estabelecimento = cd_estabelecimento_p;

c02 CURSOR FOR 
SELECT	a.nr_seq_nf_orig 
from	nota_fiscal_item a 
where	a.nr_sequencia = nr_seq_nota_fiscal_p;


BEGIN 
 ds_nf_canc_origem_conta_w := nf_canc_origem_conta(nr_seq_nota_fiscal_p);
 
if	(nr_seq_nota_fiscal_p IS NOT NULL AND nr_seq_nota_fiscal_p::text <> '' AND cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') then 
	begin 
	 
	open c02;
	loop 
		fetch	c02 
		into	nr_seq_nf_orig_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */	
		begin				 
			 
			if (position(obter_dados_nota_fiscal(nr_seq_nf_orig_w, 0) in ds_origem_nfs_w) = 0) or (coalesce(ds_origem_nfs_w::text, '') = '') then 
				ds_origem_nfs_w := ds_origem_nfs_w || obter_dados_nota_fiscal(nr_seq_nf_orig_w, 0) || ', ';		
			end if;
 
			select	coalesce(sum(b.vl_tributo), 0) vl_tributo 
			into STRICT	vl_tributo_w 
			from	nota_fiscal_item_trib b 
			where	obter_tipo_tributo(b.cd_tributo) = 'ICMS' 
			and	b.nr_sequencia = nr_seq_nf_orig_w;
			 
			vl_total_tributo_w := vl_total_tributo_w + vl_tributo_w;
		end;
	end loop;
	close c02;
	 
	if (ds_origem_nfs_w IS NOT NULL AND ds_origem_nfs_w::text <> '') then 
		ds_origem_nfs_w := substr(ds_origem_nfs_w, 0, (length(ds_origem_nfs_w)-2));
	end if;
	 
	open c01;
	loop 
		fetch	c01 
		into	cd_operacao_w, 
			ie_entrada_saida_w, 
			ie_campo_w, 
			ds_observacao_w, 
			cd_cnpj_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		 
		begin 
		select	obter_desc_cond_pagto(cd_condicao_pagamento) ds_condicao_pagamento, 
			obter_select_concatenado_bv(CASE WHEN ie_tipo_nota='EF' THEN  ds_comando_entrada_w WHEN ie_tipo_nota='EN' THEN  ds_comando_entrada_w WHEN ie_tipo_nota='EP' THEN  ds_comando_entrada_w WHEN ie_tipo_nota='NC' THEN  ds_comando_entrada_w  ELSE ds_comando_saida_w END ,'nr_seq_nota_fiscal=' || nr_seq_nota_fiscal_p || ';',', ') ds_forma_pagamento, 
			obter_medico_resp_atend(obter_atendimento_conta(nr_interno_conta),'N') nm_medico_resp, 
			(select obter_tempo_entre_datas(x.dt_entrada,x.dt_alta,'T') from atendimento_paciente x where x.nr_atendimento = obter_atendimento_conta(nr_interno_conta)) qt_tempo_atend, 
			cd_operacao_nf, 
			cd_cgc_emitente, 
			cd_cgc, 
			ie_tipo_nota, 
			obter_desc_operacao_nota(cd_operacao_nf) ds_operacao_nf 
		into STRICT	ds_condicao_pagamento_w, 
			ds_forma_pagamento_w, 
			nm_medico_resp_w, 
			qt_tempo_atend_w, 
			cd_operacao_nf_w, 
			cd_cnpj_nf_emitente_w, 
			cd_cnpj_nf_w, 
			ie_tipo_nota_w, 
			ds_operacao_nf_w 
		from	nota_fiscal 
		where	nr_sequencia = nr_seq_nota_fiscal_p;
		 
		if 	((cd_operacao_w = cd_operacao_nf_w) and 
			(((ie_entrada_saida_w = 'E') and (ie_tipo_nota_w in ('EF','EN','EP','NC'))) or 
			((ie_entrada_saida_w = 'S') and (ie_tipo_nota_w in ('SD','SE','SF','ST'))) or (ie_entrada_saida_w = 'A')) and 
			((coalesce(cd_cnpj_w::text, '') = '') or (ie_tipo_nota_w in ('SF')) or /* Não considerar saída para pessoa física (SF) , pois a regra é apenas para pessoa júridica */
 
			((cd_cnpj_w = cd_cnpj_nf_emitente_w) and (ie_tipo_nota_w in ('EF','EN','EP','NC'))) or 
			((cd_cnpj_w = cd_cnpj_nf_w) and (ie_tipo_nota_w in ('SD','SE','ST'))))) then 
			begin 
						 
			/*MACROS DISPONIVEIS PARA A REGRA DE OBS DA NOTA*/
 
			/*OBTER_MACRO_REGRA_OBS_NOTA*/
 
								 
			select position('@nf_canc_origem_conta' in ds_observacao_w) 
			into STRICT macro_nf_origem_conta_w 
			;
			 
			select (length(ds_observacao_w) - length(replace(ds_observacao_w, '@', ''))) 
			into STRICT qtd_macros_w 
;			
			 
			ds_observacao_w	:= substr(replace(ds_observacao_w,'@cond_pagto',ds_condicao_pagamento_w),1,4000);
			ds_observacao_w	:= substr(replace(ds_observacao_w,'@forma_pagto',ds_forma_pagamento_w),1,4000);
			ds_observacao_w	:= substr(replace(ds_observacao_w,'@medico',nm_medico_resp_w),1,4000);
			ds_observacao_w	:= substr(replace(ds_observacao_w,'@tempo',qt_tempo_atend_w),1,4000);
			 
			ds_observacao_w	:= substr(replace(ds_observacao_w,'@operação_nota',ds_operacao_nf_w),1,4000);
			ds_observacao_w	:= substr(replace(ds_observacao_w,'@nfs_origem',ds_origem_nfs_w),1,4000);
			ds_observacao_w	:= substr(replace(ds_observacao_w,'@icms_nf',campo_mascara_virgula(vl_total_tributo_w)),1,4000);
 
			if (macro_nf_origem_conta_w != 0) then 
			  ds_observacao_w	:= substr(replace(ds_observacao_w,'@nf_canc_origem_conta',ds_nf_canc_origem_conta_w),1,4000);				
			  if (qtd_macros_w = 1 and coalesce(ds_nf_canc_origem_conta_w::text, '') = '') Then 			   			    
			    ds_observacao_w   := ' ';				
			  end if;
			end if;
			 
			if (ie_campo_w = 'A') then 
				update	nota_fiscal 
				set	ds_dados_adic_itens = substr(ds_dados_adic_itens || ' ' || ds_observacao_w,1,255) 
				where	nr_sequencia = nr_seq_nota_fiscal_p;
			elsif (ie_campo_w = 'O') then 
				update	nota_fiscal 
				set	ds_observacao = substr(ds_observacao || ' ' || ds_observacao_w,1,4000) 
				where	nr_sequencia = nr_seq_nota_fiscal_p;
			end if;
 
			--commit; 
			end;
		end if;
		end;
	end loop;
	close c01;
	end;
end if;
 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_obs_nota ( nr_seq_nota_fiscal_p bigint, cd_estabelecimento_p bigint) FROM PUBLIC;

