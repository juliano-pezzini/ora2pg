-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_inf_hor_bloq ( dt_agenda_p timestamp, hr_agenda_p text, cd_agenda_p bigint, cd_medico_p text, cd_convenio_p bigint, nr_seq_proc_interno_p bigint, nr_seq_item_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, hr_agenda_html_p timestamp default null) AS $body$
DECLARE


nr_seq_regra_bloq_w	bigint;
ds_motivo_bloq_w	varchar(255);
ds_tipo_bloq_w		varchar(255);
dt_inicial_bloq_w	varchar(10);
dt_final_bloq_w		varchar(10);
hr_inicio_bloq_w	varchar(10);
hr_final_bloq_w		varchar(10);
ds_dia_semana_w		varchar(20);
ds_observacao_w		varchar(255);
cd_agenda_w		bigint;
nr_seq_proc_interno_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_pessoa_fisica_ww	varchar(10);
ie_dia_semana_w		varchar(1);
ie_motivo_bloqueio_w	varchar(1);
ds_motivo_w		varchar(255);
nr_seq_item_w		bigint;
nr_sequencia_w		bigint;
cd_tipo_Agenda_W	bigint;
ie_sexo_w		varchar(1)	:= 'A';
qt_idade_pac_w		integer	:= 0;

/* BUSCAR SEQUENCIA DAS REGRAS DE BLOQUEIO*/
C01 CURSOR FOR                                                                   
	/*BLOQUEIO POR AGENDA*/
                                     
	SELECT	distinct                                                                
		a.nr_sequencia                                                                
	from	agenda_bloqueio a,                                                        
		agenda b                                                                      
	where	a.cd_agenda		= b.cd_agenda                                               
	and	b.ie_situacao		= 'A'                                                       
	and	dt_agenda_p		between	trunc(a.dt_inicial) and trunc(a.dt_final)             
	and	(((hr_agenda_p IS NOT NULL AND hr_agenda_p::text <> '') and
			((hr_agenda_p		>= to_char(a.hr_inicio_bloqueio, 'hh24:mi:ss')) or (coalesce(a.hr_inicio_bloqueio::text, '') = '')) and
			((hr_agenda_p		<= to_char(a.hr_final_bloqueio, 'hh24:mi:ss')) or (coalesce(a.hr_final_bloqueio::text, '') = '')))
		or((hr_agenda_html_p IS NOT NULL AND hr_agenda_html_p::text <> '') and
			((ROUND(pkg_date_utils.get_DiffDate(a.hr_inicio_bloqueio, hr_agenda_html_p, 'HOUR%')) >= 0) or (coalesce(a.hr_inicio_bloqueio::text, '') = '')) and (ROUND(pkg_date_utils.get_DiffDate(a.hr_final_bloqueio, hr_agenda_html_p, 'HOUR%')) <= 0) or (coalesce(a.hr_final_bloqueio::text, '') = ''))
		)
	/*
	and	((hr_agenda_p		>= to_char(a.hr_inicio_bloqueio, 'hh24:mi:ss')) or (a.hr_inicio_bloqueio is null))
	and	((hr_agenda_p		<= to_char(a.hr_final_bloqueio, 'hh24:mi:ss')) or (a.hr_final_bloqueio is null))
	*/
	and	((a.ie_dia_semana	= obter_cod_dia_semana(dt_agenda_p)) or (a.ie_dia_semana = 9) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	b.cd_agenda		= cd_agenda_p
	order by 1;
	
C02 CURSOR FOR
	/*BLOQUEIO POR AGENDA*/
	SELECT	distinct                                                                
		substr(coalesce(obter_valor_dominio(1007, a.ie_motivo_bloqueio),initcap(obter_desc_expressao(327119))),1,255) ds_motivo_bloq,
		initcap(obter_desc_expressao(774569)) ds_tipo_bloqueio,           
		to_char(a.dt_inicial, 'dd/mm/yyyy') dt_inicial_bloq,                          
		to_char(a.dt_final, 'dd/mm/yyyy') dt_final_bloq,                              
		to_char(a.hr_inicio_bloqueio, 'hh24:mi:ss') hr_inicio_bloq,                   
		to_char(a.hr_final_bloqueio, 'hh24:mi:ss') hr_final_bloq,                     
		substr(obter_valor_dominio(35, a.ie_dia_semana),1,20) ds_dia_semana,          
		a.ds_observacao ds_observacao,                                                
		0 nr_seq_proc_interno,                                                        
		b.cd_pessoa_fisica cd_pessoa_fisica,                                          
		a.ie_dia_semana ie_dia_semana,                                                
		a.ie_motivo_bloqueio ie_motivo_bloq,                                          
		null ds_motivo_bloq                                                           
	from	agenda_bloqueio a,                                                        
		agenda b
	where	a.cd_agenda		= b.cd_agenda
	and	a.nr_sequencia		= nr_seq_regra_bloq_w;
	
C03 CURSOR FOR
	/*BLOQUEIO POR MEDICO*/
                                     
	SELECT	distinct                                                                
		a.nr_sequencia                                                                
	from	ageint_bloqueio_medico a,                                                 
		agenda b                                                                      
	where	a.cd_agenda		= b.cd_agenda                                               
	and	b.ie_situacao		= 'A'                                                       
	and	b.cd_estabelecimento	= cd_estabelecimento_p                                	
	and	dt_agenda_p		between	trunc(a.dt_inicial) and trunc(a.dt_final)	
	and	(((hr_agenda_p IS NOT NULL AND hr_agenda_p::text <> '') and
			((hr_agenda_p		>= to_char(a.hr_inicial_bloqueio, 'hh24:mi:ss')) or (coalesce(a.hr_inicial_bloqueio::text, '') = '')) and
			((hr_agenda_p		<= to_char(a.hr_final_bloqueio, 'hh24:mi:ss')) or (coalesce(a.hr_final_bloqueio::text, '') = '')))
		or((hr_agenda_html_p IS NOT NULL AND hr_agenda_html_p::text <> '') and
			((ROUND(pkg_date_utils.get_DiffDate(a.hr_inicial_bloqueio, hr_agenda_html_p, 'HOUR%')) >= 0) or (coalesce(a.hr_inicial_bloqueio::text, '') = '')) and (ROUND(pkg_date_utils.get_DiffDate(a.hr_final_bloqueio, hr_agenda_html_p, 'HOUR%')) <= 0) or (coalesce(a.hr_final_bloqueio::text, '') = ''))
		)	
	/*
	and	((hr_agenda_p		>= to_char(a.hr_inicial_bloqueio, 'hh24:mi:ss')) or (a.hr_inicial_bloqueio is null))
	and	((hr_agenda_p		<= to_char(a.hr_final_bloqueio, 'hh24:mi:ss')) or (a.hr_final_bloqueio is null))
	*/
	
	and	((a.ie_dia_semana	= obter_cod_dia_semana(dt_agenda_p)) or (a.ie_dia_semana = 9) or (coalesce(a.ie_dia_semana::text, '') = '')) 
	and	b.cd_agenda		= cd_agenda_p
	and	((a.cd_convenio		= cd_convenio_p) or (coalesce(a.cd_convenio::text, '') = ''))              
	and	((a.cd_pessoa_fisica	= cd_medico_p)	or (coalesce(a.cd_pessoa_fisica::text, '') = ''))              
	order by 1;
	
C04 CURSOR FOR
	/*BLOQUEIO POR MEDICO*/

	SELECT	distinct
		substr(coalesce(obter_valor_dominio(1007, a.ie_motivo_bloqueio),initcap(obter_desc_expressao(327119))),1,255) ds_motivo_bloq,
		initcap(obter_desc_expressao(774575)) ds_tipo_bloqueio,           
		to_char(a.dt_inicial, 'dd/mm/yyyy') dt_inicial_bloq,                          
		to_char(a.dt_final, 'dd/mm/yyyy') dt_final_bloq,                              
		to_char(a.hr_inicial_bloqueio, 'hh24:mi:ss') hr_inicio_bloq,                  
		to_char(a.hr_final_bloqueio, 'hh24:mi:ss') hr_final_bloq,                     
		substr(obter_valor_dominio(35, a.ie_dia_semana),1,20) ds_dia_semana,          
		a.ds_observacao ds_observacao,                                                
		0 nr_seq_proc_interno,                                                        
		a.cd_pessoa_fisica cd_pessoa_fisica,                                          
		a.ie_dia_semana ie_dia_semana,                                                
		a.ie_motivo_bloqueio ie_motivo_bloq,                                          
		null ds_motivo_bloq                                                           
	from	ageint_bloqueio_medico a,                                                 
		agenda b                                                                      
	where	a.cd_agenda		= b.cd_agenda
	and	a.nr_sequencia		= nr_seq_regra_bloq_w
	order by 1;	
	
C05 CURSOR FOR
	/*BLOQUEIO EXAME*/
                                                             
	SELECT	distinct
		a.nr_sequencia
	from	ageint_bloqueio_exame a
	where	((dt_agenda_p		>= to_char(a.dt_inicial_vigencia, 'dd/mm/yyyy')) or (coalesce(a.dt_inicial_vigencia::text, '') = '')) 
	and	((dt_agenda_p		<= to_char(a.dt_final_vigencia, 'dd/mm/yyyy')) or (coalesce(a.dt_final_vigencia::text, '') = ''))	
	and (((hr_agenda_p IS NOT NULL AND hr_agenda_p::text <> '') and
		((hr_agenda_p		>= to_char(a.hr_inicial, 'hh24:mi:ss')) or (coalesce(a.hr_inicial::text, '') = '')) and
		((hr_agenda_p		<= to_char(a.hr_final, 'hh24:mi:ss')) or (coalesce(a.hr_final::text, '') = '')))
	or ((hr_agenda_html_p IS NOT NULL AND hr_agenda_html_p::text <> '') and
		((ROUND(pkg_date_utils.get_DiffDate(a.hr_inicial, hr_agenda_html_p, 'HOUR%')) >= 0) or (coalesce(a.hr_inicial::text, '') = '')) and (ROUND(pkg_date_utils.get_DiffDate(a.hr_final, hr_agenda_html_p, 'HOUR%')) <= 0) or (coalesce(a.hr_final::text, '') = ''))
	)
	
	/*and	((hr_agenda_p		>= to_char(a.hr_inicial, 'hh24:mi:ss')) or (a.hr_inicial is null))
	and	((hr_agenda_p		<= to_char(a.hr_final, 'hh24:mi:ss')) or (a.hr_final is null))*/
	
	and	((a.dt_dia_semana	= obter_cod_dia_semana(dt_agenda_p)) or (a.dt_dia_semana = 9) or (coalesce(a.dt_dia_semana::text, '') = ''))
	and	((a.nr_seq_proc_interno	= nr_seq_proc_interno_p) or (coalesce(a.nr_seq_proc_interno::text, '') = ''))
	and	((a.cd_agenda		= cd_agenda_p) or (coalesce(cd_agenda::text, '') = ''))
	and	((coalesce(ie_sexo, 'A') = ie_sexo_w) or (coalesce(ie_sexo,'A') = 'A'))
	and	(((qt_idade_pac_w >= coalesce(qt_idade_min, qt_idade_pac_w)) and (qt_idade_pac_w <= coalesce(qt_idade_max, qt_idade_pac_w))) or (coalesce(qt_idade_pac_w::text, '') = ''))
	order by 1;

C06 CURSOR FOR
	/*BLOQUEIO EXAMES*/
	SELECT	distinct                                                                
		substr(coalesce(a.ds_motivo_bloqueio, initcap(obter_desc_expressao(327119))),1,255) ds_motivo_bloq,
		initcap(obter_desc_expressao(774579)) ds_tipo_bloqueio,                                  
		to_char(a.dt_inicial_vigencia, 'dd/mm/yyyy') dt_inicial_bloq,                 
		to_char(a.dt_final_vigencia, 'dd/mm/yyyy') dt_final_bloq,                     
		to_char(a.hr_inicial, 'hh24:mi:ss') hr_inicio_bloq,                           
		to_char(a.hr_final, 'hh24:mi:ss') hr_final_bloq,                              
		substr(obter_valor_dominio(35, a.dt_dia_semana),1,20) ds_dia_semana,
		'' ds_observacao,                                                             
		a.nr_seq_proc_interno nr_seq_proc_interno,                                    
		coalesce(cd_medico_p, '') cd_pessoa_fisica,                                       
		a.dt_dia_semana ie_dia_semana,                                                
		null ie_motivo_bloq,                                                          
		a.ds_motivo_bloqueio ds_motivo_bloq                                           
	from	ageint_bloqueio_exame a                                                   
	where	a.nr_sequencia		= nr_seq_regra_bloq_w                                    
	order by	1;

C07 CURSOR FOR
	/*BLOQUEIO GERAL MEDICOS*/
	SELECT	distinct                                                                
		a.nr_sequencia                                                                
	from	ageint_bloqueio_medico a                                                  
	where	dt_agenda_p		between	trunc(a.dt_inicial) and trunc(a.dt_final)      	
	and (((hr_agenda_p IS NOT NULL AND hr_agenda_p::text <> '') and
		((hr_agenda_p >= to_char(a.hr_inicial_bloqueio, 'hh24:mi:ss')) or (coalesce(a.hr_inicial_bloqueio::text, '') = '')) and
		((hr_agenda_p <= to_char(a.hr_final_bloqueio, 'hh24:mi:ss')) or (coalesce(a.hr_final_bloqueio::text, '') = '')))
	or ((hr_agenda_html_p IS NOT NULL AND hr_agenda_html_p::text <> '') and
		((ROUND(pkg_date_utils.get_DiffDate(a.hr_inicial_bloqueio, hr_agenda_html_p, 'HOUR%')) >= 0) or (coalesce(a.hr_inicial_bloqueio::text, '') = '')) and (ROUND(pkg_date_utils.get_DiffDate(a.hr_final_bloqueio, hr_agenda_html_p, 'HOUR%')) <= 0) or (coalesce(a.hr_final_bloqueio::text, '') = ''))
	)
		
	/*and	((hr_agenda_p		>= to_char(a.hr_inicial_bloqueio, 'hh24:mi:ss')) or (a.hr_inicial_bloqueio is null))         
	and	((hr_agenda_p		<= to_char(a.hr_final_bloqueio, 'hh24:mi:ss')) or (a.hr_final_bloqueio is null)) */
	
	and	((a.ie_dia_semana	= obter_cod_dia_semana(dt_agenda_p)) or (a.ie_dia_semana = 9) or (coalesce(a.ie_dia_semana::text, '') = ''))
	and	((coalesce(a.cd_convenio,cd_convenio_p)		= cd_convenio_p) or ((coalesce(cd_convenio_p::text, '') = '') and (coalesce(a.cd_convenio::text, '') = '')))              
	and	a.cd_pessoa_fisica	= cd_medico_p
	and	coalesce(a.cd_agenda::text, '') = ''                                                       	
	order by 1;

C08 CURSOR FOR
	/*BLOQUEIO GERAL MEDICOS*/
	SELECT	distinct                                                                
		substr(coalesce(obter_valor_dominio(1007, a.ie_motivo_bloqueio),initcap(obter_desc_expressao(327119))),1,255) ds_motivo_bloq,
		initcap(obter_desc_expressao(315543)) ds_tipo_bloqueio,                            
		to_char(a.dt_inicial, 'dd/mm/yyyy') dt_inicial_bloq,                          
		to_char(a.dt_final, 'dd/mm/yyyy') dt_final_bloq,                              
		to_char(a.hr_inicial_bloqueio, 'hh24:mi:ss') hr_inicio_bloq,                  
		to_char(a.hr_final_bloqueio, 'hh24:mi:ss') hr_final_bloq,                     
		substr(obter_valor_dominio(35, a.ie_dia_semana),1,20) ds_dia_semana,          
		a.ds_observacao ds_observacao,                                                
		0 nr_seq_proc_interno,                                                        
		a.cd_pessoa_fisica cd_pessoa_fisica,                                          
		a.ie_dia_semana ie_dia_semana,                                                
		a.ie_motivo_bloqueio ie_motivo_bloq,                                          
		null ds_motivo_bloq                                                           
	from	ageint_bloqueio_medico a                                                  
	where	a.nr_sequencia		= nr_seq_regra_bloq_w
	order by 1;


BEGIN
select	max(cd_tipo_agenda)                                                      
into STRICT	cd_tipo_Agenda_W                                                           
from	agenda                                                                     
where	cd_Agenda	= cd_Agenda_p;

if (nr_seq_item_p IS NOT NULL AND nr_seq_item_p::text <> '') then
	select	max(a.cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_ww
	from	agenda_integrada a,
			agenda_integrada_item b
	where	a.nr_sequencia = b.nr_seq_agenda_int
	and		b.nr_sequencia = nr_seq_item_p;		
end if;

delete	FROM ageint_bloqueio_horario;
commit;

--BLOQUEIOS POR AGENDA
open C01;
loop                                                                            
fetch C01 into                                                                  
	nr_seq_regra_bloq_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin       
	if (nr_seq_regra_bloq_w IS NOT NULL AND nr_seq_regra_bloq_w::text <> '')then                                       
		open C02;
		loop                                                                          
		fetch C02 into                                                                
			ds_motivo_bloq_w,                                                            
			ds_tipo_bloq_w,                                                              
			dt_inicial_bloq_w,                                                           
			dt_final_bloq_w,                                                             
			hr_inicio_bloq_w,                                                            
			hr_final_bloq_w,                                                             
			ds_dia_semana_w,                                                             
			ds_observacao_w,                                                             
			nr_seq_proc_interno_w,                                                       
			cd_pessoa_fisica_w,                                                          
			ie_dia_semana_w,                                                             
			ie_motivo_bloqueio_w,                                                        
			ds_motivo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin                                                                        
			cd_agenda_w	:= cd_agenda_p;
			nr_seq_item_w	:= nr_seq_item_p;

			select	nextval('ageint_bloqueio_horario_seq')                                   
			into STRICT	nr_sequencia_w                                                          
			;
			
			insert into	ageint_bloqueio_horario(                                                                          
					nr_sequencia,                                                              
					cd_agenda,                                                                 
					cd_pessoa_fisica,                                                          
					ds_observacao,                                                             
					ds_motivo,                                                                 
					dt_atualizacao,                                                            
					dt_final_vigencia,                                                         
					dt_inicio_vigencia,                                                        
					hr_final,                                                                  
					hr_inicial,                                                                
					ie_dia_semana,                                                             
					ie_motivo_bloqueio,                                                        
					nm_usuario,                                                                
					nr_seq_item,                                                               
					nr_seq_proc_interno                                                        
					)                                                                          
			values (                                                                    
					nr_sequencia_w,                                                            
					cd_agenda_w,                                                               
					cd_pessoa_fisica_w,                                                        
					ds_observacao_w,
					ds_motivo_w,                                                               					                                                           
					clock_timestamp(),                                                                   
					to_date(dt_final_bloq_w, 'dd/mm/yyyy'),                                    
					to_date(dt_inicial_bloq_w, 'dd/mm/yyyy'),   
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_final_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),				
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_inicio_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),                                   
					ie_dia_semana_w,                                                           
					ie_motivo_bloqueio_w,                                                      
					nm_usuario_p,                                                              
					nr_seq_item_w,                                                             
					nr_seq_proc_interno_w                                                      
					);
			end;
		end loop;
		close C02;
	end if;
	
	end;
end loop;
close C01;

--BLOQUEIO POR MEDICO
open C03;
loop                                                                            
fetch C03 into                                                                  
	nr_seq_regra_bloq_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin   	
	if (nr_seq_regra_bloq_w IS NOT NULL AND nr_seq_regra_bloq_w::text <> '')then                                       
		open C04;
		loop                                                                          
		fetch C04 into                                                                
			ds_motivo_bloq_w,                                                            
			ds_tipo_bloq_w,                                                              
			dt_inicial_bloq_w,                                                           
			dt_final_bloq_w,                                                             
			hr_inicio_bloq_w,                                                            
			hr_final_bloq_w,                                                             
			ds_dia_semana_w,                                                             
			ds_observacao_w,                                                             
			nr_seq_proc_interno_w,                                                       
			cd_pessoa_fisica_w,                                                          
			ie_dia_semana_w,                                                             
			ie_motivo_bloqueio_w,                                                        
			ds_motivo_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin                                                                        
			cd_agenda_w	:= cd_agenda_p;
			nr_seq_item_w	:= nr_seq_item_p;
			
			select	nextval('ageint_bloqueio_horario_seq')                                   
			into STRICT	nr_sequencia_w                                                          
			;
			
			insert into	ageint_bloqueio_horario(
					nr_sequencia,                                                              
					cd_agenda,                                                                 
					cd_pessoa_fisica,                                                          
					ds_observacao,                                                             
					ds_motivo,                                                                 
					dt_atualizacao,                                                            
					dt_final_vigencia,                                                         
					dt_inicio_vigencia,                                                        
					hr_final,                                                                  
					hr_inicial,                                                                
					ie_dia_semana,                                                             
					ie_motivo_bloqueio,                                                        
					nm_usuario,                                                                
					nr_seq_item,                                                               
					nr_seq_proc_interno                                                        
					)                                                                          
			values (                                                                    
					nr_sequencia_w,                                                            
					cd_agenda_w,                                                               
					cd_pessoa_fisica_w,                                                        
					ds_observacao_w,
					ds_motivo_w,                                               
					clock_timestamp(),                                                                   
					to_date(dt_final_bloq_w, 'dd/mm/yyyy'),                                    
					to_date(dt_inicial_bloq_w, 'dd/mm/yyyy'),    
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_final_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),				
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_inicio_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),                                    
					ie_dia_semana_w,                                                           
					ie_motivo_bloqueio_w,                                                      
					nm_usuario_p,                                                              
					nr_seq_item_w,                                                             
					nr_seq_proc_interno_w                                                      
					);
			end;
		end loop;
		close C04;
	end if;
	end;
end loop;
close C03;

if (cd_pessoa_fisica_ww IS NOT NULL AND cd_pessoa_fisica_ww::text <> '') then
	select	coalesce(max(c.ie_sexo), 'A'),
			max(trunc(trunc(months_between(clock_timestamp(), c.dt_nascimento)) / 12))
			--max(obter_idade(c.dt_nascimento, sysdate, 'A'))
	into STRICT	ie_sexo_w,
			qt_idade_pac_w
	from	pessoa_fisica c
	where	c.cd_pessoa_fisica = cd_pessoa_fisica_ww;
end if;

--BLOQUEIOS POR EXAMES
open C05;
loop                                                                            
fetch C05 into                                                                  
	nr_seq_regra_bloq_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin      
	
	if (nr_seq_regra_bloq_w IS NOT NULL AND nr_seq_regra_bloq_w::text <> '')then                                       
		open C06;
		loop                                                                          
		fetch C06 into                                                                
			ds_motivo_bloq_w,                                                            
			ds_tipo_bloq_w,                                                              
			dt_inicial_bloq_w,                                                           
			dt_final_bloq_w,                                                             
			hr_inicio_bloq_w,                                                            
			hr_final_bloq_w,                                                             
			ds_dia_semana_w,                                                             
			ds_observacao_w,                                                             
			nr_seq_proc_interno_w,                                                       
			cd_pessoa_fisica_w,                                                          
			ie_dia_semana_w,                                                             
			ie_motivo_bloqueio_w,                                                        
			ds_motivo_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin                                                                        
			cd_agenda_w	:= cd_agenda_p;
			nr_seq_item_w	:= nr_seq_item_p;

			select	nextval('ageint_bloqueio_horario_seq')                                   
			into STRICT	nr_sequencia_w                                                          
			;

			insert into	ageint_bloqueio_horario(
					nr_sequencia,                                                              
					cd_agenda,                                                                 
					cd_pessoa_fisica,                                                          
					ds_observacao,                                                             
					ds_motivo,                                                                 
					dt_atualizacao,                                                            
					dt_final_vigencia,                                                         
					dt_inicio_vigencia,                                                        
					hr_final,                                                                  
					hr_inicial,                                                                
					ie_dia_semana,                                                             
					ie_motivo_bloqueio,                                                        
					nm_usuario,                                                                
					nr_seq_item,                                                               
					nr_seq_proc_interno                                                        
					)                                                                          
			values (                                                                    
					nr_sequencia_w,                                                            
					cd_agenda_w,                                                               
					cd_pessoa_fisica_w,                                                        
					null,                                                               
					ds_motivo_w,                                                           
					clock_timestamp(),                                                                   
					to_date(dt_final_bloq_w, 'dd/mm/yyyy'),                                    
					to_date(dt_inicial_bloq_w, 'dd/mm/yyyy'),   
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_final_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),				
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_inicio_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),  
					ie_dia_semana_w,                                                           
					ie_motivo_bloqueio_w,                                                      
					nm_usuario_p,                                                              
					nr_seq_item_w,                                                             
					nr_seq_proc_interno_w                                                      
					);
			end;
		end loop;
		close C06;

	end if;
	end;
end loop;
close C05;


--BLOQUEIOS GERAL MEDICOS
open C07;
loop                                                                            
fetch C07 into                                                                  
	nr_seq_regra_bloq_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin  
	if (nr_seq_regra_bloq_w IS NOT NULL AND nr_seq_regra_bloq_w::text <> '')then                                       
		open C08;
		loop                                                                          
		fetch C08 into                                                                
			ds_motivo_bloq_w,                                                            
			ds_tipo_bloq_w,                                                              
			dt_inicial_bloq_w,                                                           
			dt_final_bloq_w,                                                             
			hr_inicio_bloq_w,                                                            
			hr_final_bloq_w,                                                             
			ds_dia_semana_w,                                                             
			ds_observacao_w,                                                             
			nr_seq_proc_interno_w,                                                       
			cd_pessoa_fisica_w,                                                          
			ie_dia_semana_w,                                                             
			ie_motivo_bloqueio_w,                                                        
			ds_motivo_w;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin                                                                        
			cd_agenda_w	:= cd_agenda_p;
			nr_seq_item_w	:= nr_seq_item_p;

			select	nextval('ageint_bloqueio_horario_seq')                                   
			into STRICT	nr_sequencia_w                                                          
			;

			insert into	ageint_bloqueio_horario(                                                                          
					nr_sequencia,                                                              
					cd_agenda,                                                                 
					cd_pessoa_fisica,                                                          
					ds_observacao,                                                             
					ds_motivo,                                                                 
					dt_atualizacao,                                                            
					dt_final_vigencia,                                                         
					dt_inicio_vigencia,                                                        
					hr_final,                                                                  
					hr_inicial,                                                                
					ie_dia_semana,                                                             
					ie_motivo_bloqueio,                                                        
					nm_usuario,                                                                
					nr_seq_item,                                                               
					nr_seq_proc_interno                                                        
					)                                                                          
			values (                                                                    
					nr_sequencia_w,                                                            
					cd_agenda_w,                                                               
					cd_pessoa_fisica_w,                                                        					                                                               
					ds_observacao_w,                                                           
					ds_motivo_w,
					clock_timestamp(),                                                                   
					to_date(dt_final_bloq_w, 'dd/mm/yyyy'),                                    
					to_date(dt_inicial_bloq_w, 'dd/mm/yyyy'),                                  
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_final_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),				
					to_date(to_char(dt_agenda_p, 'dd/mm/yyyy') ||' '||hr_inicio_bloq_w, 'dd/mm/yyyy hh24:mi:ss'),                                    
					ie_dia_semana_w,                                                           
					ie_motivo_bloqueio_w,                                                      
					nm_usuario_p,                                                              
					nr_seq_item_w,                                                             
					nr_seq_proc_interno_w                                                      
					);
			end;
		end loop;
		close C08;

	end if;
	end;
end loop;
close C07;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_inf_hor_bloq ( dt_agenda_p timestamp, hr_agenda_p text, cd_agenda_p bigint, cd_medico_p text, cd_convenio_p bigint, nr_seq_proc_interno_p bigint, nr_seq_item_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, hr_agenda_html_p timestamp default null) FROM PUBLIC;

