-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE calcular_sv_hemodinamica ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, nr_sequencia_p bigint) AS $body$
DECLARE


cd_pessoa_fisica_w      cirurgia.cd_pessoa_fisica%type;
qt_debito_card_w        atend_monit_hemod.qt_debito_card%type;
tx_indice_card_w        atend_monit_hemod.tx_indice_card%type;
qt_super_corp_hem_w     atend_monit_hemod.qt_super_corp%type;
qt_pam_hem_w            atend_monit_hemod.qt_pam%type;
qt_pvc_hem_w            atend_monit_hemod.qt_pvc%type;
qt_peso_sv_w            atendimento_sinal_vital.qt_peso%type;
qt_altura_cm_sv_w       atendimento_sinal_vital.qt_altura_cm%type;
qt_superf_corporia_sv_w atendimento_sinal_vital.qt_superf_corporia%type;
qt_pam_sv_w             atendimento_sinal_vital.qt_pam%type;
qt_pvc_sv_w             atendimento_sinal_vital.qt_pvc%type;
dt_monitoracao_w        timestamp;


BEGIN
if (coalesce(nr_sequencia_p,0) > 0) and ((coalesce(nr_cirurgia_p,0) > 0) or (coalesce(nr_seq_pepo_p,0) > 0)) then
   if (coalesce(nr_cirurgia_p,0) > 0) then
      select   max(cd_pessoa_fisica)
      into STRICT     cd_pessoa_fisica_w
      from     cirurgia
      where    nr_cirurgia = nr_cirurgia_p;
   else
      select   max(cd_pessoa_fisica)
      into STRICT     cd_pessoa_fisica_w
      from     pepo_cirurgia
      where    nr_sequencia = nr_seq_pepo_p;
   end if;
      
   select   max(qt_debito_card),
            max(qt_super_corp),
            max(qt_pam),
            max(qt_pvc),
            MAX(dt_monitoracao)
   into STRICT     qt_debito_card_w,
            qt_super_corp_hem_w,
            qt_pam_hem_w,
            qt_pvc_hem_w,
            dt_monitoracao_w
   from     atend_monit_hemod
   where    nr_sequencia = nr_sequencia_p;

   if (qt_debito_card_w IS NOT NULL AND qt_debito_card_w::text <> '') then
      if (coalesce(qt_super_corp_hem_w::text, '') = '') or ((coalesce(qt_pam_hem_w::text, '') = '') and (coalesce(qt_pvc_hem_w::text, '') = '')) then
         select	max(qt_peso),
                  max(qt_altura_cm),
                  max(qt_superf_corporia)
         into STRICT	   qt_peso_sv_w,
                  qt_altura_cm_sv_w,
                  qt_superf_corporia_sv_w
         from	   atendimento_sinal_vital	
         where	   nr_sequencia = (  SELECT	coalesce(max(nr_sequencia),0)
                                    from	   atendimento_sinal_vital
                                    where	   (qt_superf_corporia IS NOT NULL AND qt_superf_corporia::text <> '')
                                    and	   coalesce(ie_situacao,'A') = 'A'
                                    and	   (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                                    and	   cd_paciente = cd_pessoa_fisica_w);

         if (coalesce(qt_pam_hem_w::text, '') = '') then   
            select	max(qt_pam)
            into STRICT	   qt_pam_sv_w
            from	   atendimento_sinal_vital	
            where	   nr_sequencia = (  SELECT	coalesce(max(nr_sequencia),0)
                                       from	   atendimento_sinal_vital
                                       where	   (qt_pam IS NOT NULL AND qt_pam::text <> '')
                                       and	   (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                                       and	   coalesce(ie_situacao,'A') = 'A'
                                       and	   dt_sinal_vital between dt_monitoracao_w - (5/86400) and dt_monitoracao_w + (5/86400)
                                       and	   cd_paciente = cd_pessoa_fisica_w);
         end if;
         if (coalesce(qt_pvc_hem_w::text, '') = '') then
            select	max(qt_pvc)
            into STRICT	   qt_pvc_sv_w
            from	   atendimento_sinal_vital	
            where	   nr_sequencia = (  SELECT	coalesce(max(nr_sequencia),0)
                                       from	   atendimento_sinal_vital
                                       where	   (qt_pvc IS NOT NULL AND qt_pvc::text <> '')
                                       and	   coalesce(ie_situacao,'A') = 'A'
                                       and	   (dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
                                       and	   dt_sinal_vital between dt_monitoracao_w - (5/86400) and dt_monitoracao_w + (5/86400)
                                       and	   cd_paciente = cd_pessoa_fisica_w);
         end if;
            
         if (qt_superf_corporia_sv_w IS NOT NULL AND qt_superf_corporia_sv_w::text <> '') then
            update   atend_monit_hemod
            set      qt_peso        =  qt_peso_sv_w,
                     qt_altura_cm   =  qt_altura_cm_sv_w,
                     qt_super_corp  =  qt_superf_corporia_sv_w,
                     tx_indice_card =  dividir(qt_debito_card_w,qt_superf_corporia_sv_w)
            where    nr_sequencia   = nr_sequencia_p;
         end if;
         if ((coalesce(qt_pam_hem_w::text, '') = '') and (coalesce(qt_pvc_hem_w::text, '') = '')) then
            select   max(tx_indice_card)
            into STRICT     tx_indice_card_w
            from     atend_monit_hemod
            where    nr_sequencia = nr_sequencia_p;

            if (tx_indice_card_w IS NOT NULL AND tx_indice_card_w::text <> '') then
               update   atend_monit_hemod
               set      qt_pam            = qt_pam_sv_w,
						ie_pam_informada  = 'S', 
                        qt_pvc            = qt_pvc_sv_w,
                        qt_rv_sistemica   = round(dividir((80 * (qt_pam_sv_w - qt_pvc_sv_w)),qt_debito_card_w)),
                        tx_rv_sistemica	= round(dividir((80 * (qt_pam_sv_w - qt_pvc_sv_w)),tx_indice_card_w))
               where    nr_sequencia      = nr_sequencia_p;
            end if;
         end if;
      end if;
   end if;

   commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE calcular_sv_hemodinamica ( nr_cirurgia_p bigint, nr_seq_pepo_p bigint, nr_sequencia_p bigint) FROM PUBLIC;

