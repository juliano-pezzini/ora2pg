-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_exame_lab_tempo_result ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


    days_to_increment_w          bigint := 0;
    date_control_w               timestamp;
	tempo_w                      bigint;
    qt_registros_w               bigint;
    tempo_medio_w                bigint;
    tempo_medio_ds_w             varchar(20);
    pfcs_panel_seq_w             bigint;
    nm_exame_w                   eis_lab_temp_etapa_dia_v.nm_exame%TYPE;
    nr_prescricao_w              eis_lab_temp_etapa_dia_v.nr_prescricao%TYPE;
    nr_seq_exame_w               eis_lab_temp_etapa_dia_v.nr_seq_exame%TYPE;
    nm_medico_w                  eis_lab_temp_etapa_dia_v.nm_medico%TYPE;
    dt_prescricao_w              eis_lab_temp_etapa_dia_v.dt_prescricao%TYPE;
    ie_status_atend_w            prescr_procedimento.ie_status_atend%TYPE;
    dt_liberacao_w               prescr_medica.dt_liberacao%TYPE;
    nr_atendimento_w             prescr_medica.nr_atendimento%TYPE;
    nm_paciente_w                varchar(60);
    dt_nascimento_w              pessoa_fisica.dt_nascimento%TYPE;
    ds_age_range_w               varchar(20);
    ie_sexo_w                    pessoa_fisica.ie_sexo%TYPE;
    cd_pessoa_fisica_w           pessoa_fisica.cd_pessoa_fisica%TYPE;
    dt_entrada_w                 atendimento_paciente.dt_entrada%type;
    nr_seq_prescr_w              prescr_procedimento.nr_sequencia%Type;
    pfcs_panel_detail_seq_w      pfcs_panel_detail.nr_sequencia%TYPE;
	ds_setor_paciente_w			 varchar(255);
	ds_leito_w			 		 varchar(255);
    nr_seq_operational_level_w   pfcs_operational_level.nr_sequencia%type;

    c01 CURSOR FOR
    SELECT DISTINCT
        elv.nm_exame,
        elv.nr_prescricao,
        elv.nr_seq_exame,
        elv.nm_medico,
        elv.dt_prescricao,
        pp.ie_status_atend,
        pm.dt_liberacao,
        pm.nr_atendimento,
        obter_nome_pf(pf.cd_pessoa_fisica) nm_paciente,
        pf.dt_nascimento,
        pfcs_get_age_range(pf.dt_nascimento) ds_age_range,
        pf.ie_sexo,
        pf.cd_pessoa_fisica,
        ap.dt_entrada,
        pp.nr_sequencia,
	    substr(Obter_Dados_Atendimento(ap.nr_atendimento,'PSET'),1,255) ds_setor_paciente,
        substr(Obter_Dados_Atendimento(ap.nr_atendimento,'LEI'),1,255) ds_leito
    FROM
        eis_lab_temp_etapa_dia_v   elv
        INNER JOIN prescr_procedimento        pp ON elv.nr_prescricao = pp.nr_prescricao AND elv.nr_seq_prescr = pp.nr_sequencia
        INNER JOIN prescr_medica              pm ON elv.nr_prescricao = pm.nr_prescricao
        INNER JOIN pessoa_fisica              pf ON pm.cd_pessoa_fisica = pf.cd_pessoa_fisica
        INNER JOIN atendimento_paciente       ap ON pm.nr_atendimento = ap.nr_atendimento
    WHERE  elv.nm_usuario = 'COVID19' and ap.cd_estabelecimento = cd_estabelecimento_p;


BEGIN
    nr_seq_operational_level_w := pfcs_get_structure_level(
        cd_establishment_p => cd_estabelecimento_p,
        ie_level_p => 'O',
        ie_info_p => 'C');

    LOOP
        date_control_w := trunc(clock_timestamp() - days_to_increment_w, 'dd');
        CALL pfcs_gerar_eis_lab_etapa(dt_parametro_p => date_control_w);
        IF days_to_increment_w = 15 THEN
            EXIT;
        END IF;
        days_to_increment_w := days_to_increment_w + 1;
    END LOOP;

    OPEN c01;
    LOOP
        FETCH c01 INTO
            nm_exame_w,
            nr_prescricao_w,
            nr_seq_exame_w,
            nm_medico_w,
            dt_prescricao_w,
            ie_status_atend_w,
            dt_liberacao_w,
            nr_atendimento_w,
            nm_paciente_w,
            dt_nascimento_w,
            ds_age_range_w,
            ie_sexo_w,
            cd_pessoa_fisica_w,
            dt_entrada_w,
            nr_seq_prescr_w,
			ds_setor_paciente_w,
			ds_leito_w;
        EXIT WHEN NOT FOUND; /* apply on c01 */
        BEGIN
            SELECT nextval('pfcs_panel_detail_seq')
            INTO STRICT pfcs_panel_detail_seq_w
;
            INSERT INTO pfcs_panel_detail(
                nr_sequencia,
                nm_usuario,
                dt_atualizacao,
                nm_usuario_nrec,
                dt_atualizacao_nrec,
                ie_situation,
                nr_seq_indicator,
                nr_seq_operational_level
            ) VALUES (
                pfcs_panel_detail_seq_w,
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                'T',
                nr_seq_indicator_p,
                nr_seq_operational_level_w
            );

            INSERT INTO pfcs_detail_patient(
                nr_sequencia,
                dt_atualizacao,
                dt_atualizacao_nrec,
                nm_usuario,
                nm_usuario_nrec,
                ds_gender,
                dt_birthdate,
                ds_age_range,
                dt_entrance,
                id_patient,
                nm_patient,
                nr_encounter,
				DS_CURRENT_LOCATION,
				DS_BED_ASSIGNED,
                nr_seq_detail
            ) VALUES (
                nextval('pfcs_detail_patient_seq'),
                clock_timestamp(),
                clock_timestamp(),
                nm_usuario_p,
                nm_usuario_p,
                ie_sexo_w,
                dt_nascimento_w,
                ds_age_range_w,
                dt_entrada_w,
                cd_pessoa_fisica_w,
                nm_paciente_w,
                nr_atendimento_w,
				ds_setor_paciente_w,
				ds_leito_w,
                pfcs_panel_detail_seq_w
            );

            INSERT INTO pfcs_detail_exam_lab(
                nr_sequencia,
                dt_atualizacao,
                dt_atualizacao_nrec,
                nm_usuario,
                nm_usuario_nrec,
                nm_exam,
                dt_approval,
                nm_user_approval,
                nr_seq_exame,
                dt_request,
                dt_release_request,
                ie_status_atend,
                nr_request,
                nr_seq_detail
            ) VALUES (
                nextval('pfcs_detail_exam_lab_seq'),
                clock_timestamp(),
                clock_timestamp(),
                nm_usuario_p,
                nm_usuario_p,
                nm_exame_w,
                obter_data_aprov_lab(nr_prescricao_w, nr_seq_prescr_w),
                obter_lab_execucao_etapa(nr_prescricao_w, nr_seq_prescr_w, '35', 'U'),
                nr_seq_exame_w,
                dt_prescricao_w,
                dt_liberacao_w,
                ie_status_atend_w,
                nr_prescricao_w,
                pfcs_panel_detail_seq_w
            );

        END;

    END LOOP;

    SELECT  SUM(elv.nr_min_lib_aprov), SUM(1)
    INTO STRICT 	tempo_w, qt_registros_w
    FROM
           eis_lab_temp_etapa_dia_v elv
           INNER JOIN prescr_procedimento pp ON elv.nr_prescricao = pp.nr_prescricao AND elv.nr_seq_prescr = pp.nr_sequencia        
           INNER JOIN prescr_medica       pm ON elv.nr_prescricao = pm.nr_prescricao
    WHERE  elv.nm_usuario = 'COVID19' and (elv.dt_aprovacao IS NOT NULL AND elv.dt_aprovacao::text <> '') and pm.cd_estabelecimento = cd_estabelecimento_p 
           and pp.ie_status_atend >=35 and elv.ie_etapa >=35;

    COMMIT;

     := pfcs_pck.pfcs_generate_results(
        vl_indicator_p => tempo_w * 1440, vl_indicator_aux_p => qt_registros_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => pfcs_panel_seq_w);

    CALL pfcs_pck.pfcs_update_detail(
        nr_seq_indicator_p => nr_seq_indicator_p,
        nr_seq_panel_p => pfcs_panel_seq_w,
        nr_seq_operational_level_p => nr_seq_operational_level_w,
        nm_usuario_p => nm_usuario_p
    );

    CALL pfcs_pck.pfcs_activate_records(
        nr_seq_indicator_p => nr_seq_indicator_p,
        nr_seq_operational_level_p => nr_seq_operational_level_w,
        nm_usuario_p => nm_usuario_p);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_exame_lab_tempo_result ( nr_seq_indicator_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

