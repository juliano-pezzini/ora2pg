-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dar_carrega_ligacao_datamodel (nr_sequencia_p dar_app.nr_sequencia%type) AS $body$
DECLARE


   c_fields CURSOR(nr_seq_tables_control_p  dar_tables_control.nr_sequencia%type, ds_campo_p  dar_tab_control_fields.ds_campo%type) FOR
      SELECT a.*
        from dar_tab_control_fields a,
             dar_tables_control     b,
             dar_app_datamodels     c
       where a.nr_seq_table_control = b.nr_sequencia
         and b.nr_sequencia = c.nr_seq_table_control
         and c.nr_seq_app = nr_sequencia_p
         and b.nr_sequencia <> nr_seq_tables_control_p
         and a.ds_campo in (SELECT aa.ds_campo
                from dar_tab_control_fields aa,
                     dar_tables_control     bb,
                     dar_app_datamodels     cc
               where aa.nr_seq_table_control = bb.nr_sequencia
                 and bb.nr_sequencia = cc.nr_seq_table_control
                 and bb.nr_sequencia = nr_seq_tables_control_p)
         and a.ds_campo = ds_campo_p
       order by 2, 3;
   r_fields_w c_fields%rowtype;

   c_fields_c CURSOR(nr_seq_tables_control_p  dar_tables_control.nr_sequencia%type) FOR
      SELECT a.*
        from dar_tab_control_fields a,
             dar_tables_control     b,
             dar_app_datamodels     c
       where a.nr_seq_table_control = b.nr_sequencia
         and b.nr_sequencia = c.nr_seq_table_control
         and b.nr_sequencia = nr_seq_tables_control_p
       order by 2, 3;
   r_fields_c_w c_fields_c%rowtype;

   c_tablecontrol CURSOR FOR
      SELECT nr_seq_table_control
        from dar_app_datamodels c
       where nr_seq_app = nr_sequencia_p
       order by 1;

   r_tablecontrol_w c_tablecontrol%rowtype;

   nr_controle_w bigint;
   type table_control_w is table of bigint index by integer;
   v_table_control_w table_control_w;

   --
   ie_possui_licacao_w smallint;

BEGIN
   -- buscar todos os tab le_control
   nr_controle_w := 0;
   open c_tablecontrol;
   loop
      fetch c_tablecontrol
         into r_tablecontrol_w;
      EXIT WHEN NOT FOUND; /* apply on c_tablecontrol */

      nr_controle_w := nr_controle_w + 1;

      v_table_control_w(nr_controle_w) := r_tablecontrol_w.nr_seq_table_control;
   
   end loop;
   close c_tablecontrol;

   -- se mais de 1 datamodel selecionado
   if (nr_controle_w > 1) then
      --
      for i in v_table_control_w.first .. v_table_control_w.last loop

         open c_fields_c(nr_seq_tables_control_p => v_table_control_w(i));
         loop
            fetch c_fields_c
               into r_fields_c_w;
            EXIT WHEN NOT FOUND; /* apply on c_fields_c */

            open c_fields(nr_seq_tables_control_p => v_table_control_w(i),
                          ds_campo_p              => r_fields_c_w.ds_campo);
            loop
               fetch c_fields
                  into r_fields_w;
               EXIT WHEN NOT FOUND; /* apply on c_fields */

               begin               
                  -- valida ligacao repetida
                  select 1
                    into STRICT ie_possui_licacao_w
                    from dar_app_control_fields a
                   where a.nr_seq_app = nr_sequencia_p
                     and ((nr_sequencia_a = r_fields_c_w.nr_sequencia and
                         nr_sequencia_b = r_fields_w.nr_sequencia) or (nr_sequencia_a = r_fields_w.nr_sequencia and
                         nr_sequencia_b = r_fields_c_w.nr_sequencia));

               exception
                  when no_data_found then
                  
                     --
                     insert into dar_app_control_fields(nr_sequencia,
                         nr_sequencia_a,
                         nr_seq_tab_control_a,
                         nr_sequencia_b,
                         nr_seq_tab_control_b,
                         nr_seq_app,
                         dt_atualizacao,
                         nm_usuario)
                     values (nextval('dar_app_control_fields_seq'),
                         r_fields_c_w.nr_sequencia,
                         r_fields_c_w.nr_seq_table_control,
                         r_fields_w.nr_sequencia,
                         r_fields_w.nr_seq_table_control,
                         nr_sequencia_p,
                         clock_timestamp(),
                         obter_usuario_ativo());
               end;
            end loop;
            close c_fields;

         end loop;
         close c_fields_c;

      end loop;
   end if;

   commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dar_carrega_ligacao_datamodel (nr_sequencia_p dar_app.nr_sequencia%type) FROM PUBLIC;

