-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_regras_copartic ( nr_seq_proposta_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Copiar as regras de coparticipacao do plano viculado ao beneficiario para a tabela de regras de coparticipacao da proposta.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 			
nr_seq_regra_coparticipacao_w	bigint;
qt_planos_proposta_w		bigint;
nr_seq_plano_w			bigint;
qt_registros_w			bigint;
nr_seq_tipo_coparticipacao_w	bigint;
nr_seq_regra_retorno_w		bigint;
nr_seq_regra_copartic_w		bigint;

-------------------------------------------------------------------------------------------
qt_eventos_minimo_w		pls_regra_coparticipacao.qt_eventos_minimo%type;
nr_seq_prestador_w		pls_regra_coparticipacao.nr_seq_prestador%type;
nr_seq_tipo_prestador_w		pls_regra_coparticipacao.nr_seq_tipo_prestador%type;
ie_tipo_data_consistencia_w	pls_regra_coparticipacao.ie_tipo_data_consistencia%type;
ie_forma_cobr_internacao_w	pls_regra_coparticipacao.ie_forma_cobr_internacao%type;
ie_titularidade_w		pls_regra_coparticipacao.ie_titularidade%type;
ie_tipo_parentesco_w		pls_regra_coparticipacao.ie_tipo_parentesco%type;
qt_ocorrencias_w		pls_regra_coparticipacao.qt_ocorrencias%type;
qt_ocorrencia_grupo_serv_w	pls_regra_coparticipacao.qt_ocorrencia_grupo_serv%type;
qt_periodo_ocor_w		pls_regra_coparticipacao.qt_periodo_ocor%type;
nr_seq_grupo_serv_w		pls_regra_coparticipacao.nr_seq_grupo_serv%type;
cd_procedimento_w		pls_regra_coparticipacao.cd_procedimento%type;
qt_idade_min_w			pls_regra_coparticipacao.qt_idade_min%type;
qt_idade_max_w			pls_regra_coparticipacao.qt_idade_max%type;

C01 CURSOR FOR
	SELECT	a.nr_seq_plano
	from	pls_proposta_plano	a
	where	a.nr_seq_proposta = nr_seq_proposta_p;
			
C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_coparticipacao,
		coalesce(qt_eventos_minimo,0),
		coalesce(ie_tipo_data_consistencia,'N'),
		coalesce(ie_forma_cobr_internacao,'C'),
		coalesce(ie_titularidade,'A'),
		coalesce(ie_tipo_parentesco,'X'),
		coalesce(qt_ocorrencias,0),
		coalesce(qt_ocorrencia_grupo_serv,0),
		coalesce(qt_periodo_ocor,0),
		coalesce(nr_seq_grupo_serv,0),
		coalesce(cd_procedimento,0),
		coalesce(qt_idade_min,0),
		coalesce(qt_idade_max,0),
		coalesce(NR_SEQ_PRESTADOR,0),
		coalesce(NR_SEQ_TIPO_PRESTADOR,0)
	from	pls_regra_coparticipacao	a
	where	a.nr_seq_plano = nr_seq_plano_w
	and	coalesce(a.nr_seq_contrato::text, '') = ''
	and	coalesce(a.nr_seq_proposta::text, '') = '';
	
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_copartic_retorno
	where	nr_seq_regra_copartic	= nr_seq_regra_coparticipacao_w;


BEGIN

select	count(*)
into STRICT	qt_planos_proposta_w
from	pls_proposta_plano
where	nr_seq_proposta = nr_seq_proposta_p;

if (qt_planos_proposta_w > 0) then
	open C01;
	loop
	fetch C01 into	
		nr_seq_plano_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_regra_coparticipacao_w,
			nr_seq_tipo_coparticipacao_w,
			qt_eventos_minimo_w,
			ie_tipo_data_consistencia_w,
			ie_forma_cobr_internacao_w,
			ie_titularidade_w,
			ie_tipo_parentesco_w,
			qt_ocorrencias_w,
			qt_ocorrencia_grupo_serv_w,
			qt_periodo_ocor_w,
			nr_seq_grupo_serv_w,
			cd_procedimento_w,
			qt_idade_min_w,
			qt_idade_max_w,
			NR_SEQ_PRESTADOR_w,
			NR_SEQ_TIPO_PRESTADOR_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin		
			
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_regra_coparticipacao
			where	nr_seq_proposta				= nr_seq_proposta_p
			and	nr_seq_tipo_coparticipacao		= nr_seq_tipo_coparticipacao_w
			and	((nr_seq_plano				= nr_seq_plano_w) or (coalesce(nr_seq_plano::text, '') = ''))
			and	coalesce(qt_eventos_minimo,0)		= qt_eventos_minimo_w
			and	coalesce(ie_tipo_data_consistencia,'N')	= ie_tipo_data_consistencia_w
			and	coalesce(ie_forma_cobr_internacao,'C')	= ie_forma_cobr_internacao_w
			and	coalesce(ie_titularidade,'A')		= ie_titularidade_w
			and	coalesce(ie_tipo_parentesco,'X')		= ie_tipo_parentesco_w
			and	coalesce(qt_ocorrencias,0)			= qt_ocorrencias_w
			and	coalesce(qt_ocorrencia_grupo_serv,0)		= qt_ocorrencia_grupo_serv_w
			and	coalesce(qt_periodo_ocor,0)			= qt_periodo_ocor_w
			and	coalesce(nr_seq_grupo_serv,0)		= nr_seq_grupo_serv_w
			and	coalesce(cd_procedimento,0)			= cd_procedimento_w
			and	coalesce(QT_IDADE_MIN,0)			= QT_IDADE_MIN_w
			and	coalesce(QT_IDADE_MAX,0)			= QT_IDADE_MAX_w
			and	coalesce(NR_SEQ_PRESTADOR,0)			= NR_SEQ_PRESTADOR_w
			and	coalesce(NR_SEQ_TIPO_PRESTADOR,0)		= NR_SEQ_TIPO_PRESTADOR_w  LIMIT 1;
			
			if (qt_registros_w	= 0) then
			
				select	nextval('pls_regra_coparticipacao_seq')
				into STRICT	nr_seq_regra_copartic_w
				;
			
				insert into 	pls_regra_coparticipacao(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_seq_plano, tx_coparticipacao, nr_seq_tipo_coparticipacao,
						vl_maximo, ie_tipo_atendimento, ie_situacao,
						vl_coparticipacao, dt_inicio_vigencia, dt_fim_vigencia, dt_contrato_de,
						dt_contrato_ate, qt_eventos_minimo, qt_meses_intervalo,
						qt_ocorrencias, ie_tipo_ocorrencia, ie_tipo_data_consistencia,
						ie_prestador_cooperado, qt_idade_min, qt_idade_max, qt_ocorrencia_grupo_serv,
						qt_periodo_ocor, ie_tipo_periodo_ocor, nr_seq_grupo_serv, nr_seq_regra_origem,
						ie_reajuste, ie_titularidade, cd_procedimento, ie_origem_proced,
						ie_tipo_parentesco, qt_diaria_inicial, qt_diaria_final, 
						nr_seq_prestador, nr_seq_tipo_prestador, nr_seq_proposta,
						ie_incidencia_valor_maximo,IE_PERIODO_VALOR_MAXIMO,IE_FORMA_COBR_INTERNACAO,IE_ANO_CALENDARIO_OUTRAS_OCOR,
						IE_CONSIDERA_OUTRA_OCOR_REGRA,ie_tipo_incidencia,
						ie_inc_demais_itens, vl_base_min, vl_base_max, ie_incidencia_psiquiatria)
				(	SELECT	nr_seq_regra_copartic_w, clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, nr_seq_plano, tx_coparticipacao, nr_seq_tipo_coparticipacao,
						vl_maximo, ie_tipo_atendimento, ie_situacao, 
						vl_coparticipacao, dt_inicio_vigencia, dt_fim_vigencia, dt_contrato_de,
						dt_contrato_ate, qt_eventos_minimo, qt_meses_intervalo,
						qt_ocorrencias, ie_tipo_ocorrencia, ie_tipo_data_consistencia,
						ie_prestador_cooperado, qt_idade_min, qt_idade_max, qt_ocorrencia_grupo_serv,
						qt_periodo_ocor, ie_tipo_periodo_ocor, nr_seq_grupo_serv, nr_seq_regra_origem,
						ie_reajuste, ie_titularidade, cd_procedimento, ie_origem_proced,
						ie_tipo_parentesco, qt_diaria_inicial, qt_diaria_final,
						nr_seq_prestador, nr_seq_tipo_prestador, nr_seq_proposta_p,
						ie_incidencia_valor_maximo,IE_PERIODO_VALOR_MAXIMO,IE_FORMA_COBR_INTERNACAO,IE_ANO_CALENDARIO_OUTRAS_OCOR,
						IE_CONSIDERA_OUTRA_OCOR_REGRA,coalesce(ie_tipo_incidencia,'B'),
						ie_inc_demais_itens, vl_base_min, vl_base_max, ie_incidencia_psiquiatria
					from	pls_regra_coparticipacao
					where	nr_sequencia = nr_seq_regra_coparticipacao_w);
						
					open C03;
					loop
					fetch C03 into
						nr_seq_regra_retorno_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						insert	into	pls_regra_copartic_retorno(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
								nr_seq_regra_copartic, qt_dias_retorno)
							(SELECT	nextval('pls_regra_copartic_retorno_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
								nr_seq_regra_copartic_w, qt_dias_retorno
							from	pls_regra_copartic_retorno
							where	nr_sequencia	= nr_seq_regra_retorno_w);
						end;
					end loop;
					close C03;
			end if;
					
			end;
		end loop;
		close C02;
		
		end;
	end loop;
	close C01;			
end if;
		
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_regras_copartic ( nr_seq_proposta_p bigint, nm_usuario_p text) FROM PUBLIC;

