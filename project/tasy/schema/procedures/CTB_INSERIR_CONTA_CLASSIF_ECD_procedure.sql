-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_inserir_conta_classif_ecd (cd_conta_contabil_p text, cd_classif_ecd_p text, nm_usuario_p text, ie_somente_conta_selec_p text default 'N') AS $body$
DECLARE

                
qt_registro_w				bigint;
dt_inicio_vigencia_w			timestamp;
dt_fim_vigencia_w			timestamp;
cd_empresa_w				conta_contabil.cd_empresa%type;
cd_versao_w				conta_contabil_referencial.cd_versao%type;
ie_tipo_w				conta_contabil.ie_tipo%type;
cd_conta_contabil_w			conta_contabil.cd_conta_contabil%type;
cd_conta_ref_w				conta_contabil.cd_conta_contabil%type;

c_conta_analitica CURSOR FOR
SELECT	a.cd_conta_contabil
from	conta_contabil a
where	a.cd_empresa	= cd_empresa_w
and		a.ie_tipo	= 'A'
and		substr(CTB_Obter_Se_Conta_Classif_Sup(a.cd_conta_contabil, ctb_obter_classif_conta(cd_conta_contabil_p, null, clock_timestamp())),1,1) = 'S'
and 	coalesce(ie_somente_conta_selec_p, 'N') = 'N'

union all

SELECT	a.cd_conta_contabil
from	conta_contabil a
where	a.cd_conta_contabil = cd_conta_contabil_p
and		coalesce(ie_somente_conta_selec_p, 'N') = 'S'
order by 1;

c_conta_referencia CURSOR(cd_conta_ref_p  conta_contabil.cd_conta_contabil%type) FOR
SELECT	a.cd_conta_contabil
from	conta_contabil a
where	a.cd_conta_referencia = cd_conta_ref_p
order by 1;


BEGIN

cd_versao_w	:= '3.1';

select	count(nr_sequencia)
into STRICT	qt_registro_w
from	conta_contabil_classif_ecd a
where	a.cd_conta_contabil	= cd_conta_contabil_p
and	a.cd_classif_ecd	= cd_classif_ecd_p
and	a.cd_versao		= cd_versao_w;

if (qt_registro_w = 0) then
	begin
	
	begin
	
	select	cd_empresa,
		ie_tipo
	into STRICT	cd_empresa_w,
		ie_tipo_w
	from	conta_contabil
	where	cd_conta_contabil	= cd_conta_contabil_p;
	
	select	dt_inicio_vigencia,
		dt_fim_vigencia
	into STRICT	dt_inicio_vigencia_w,
		dt_fim_vigencia_w
	from	conta_contabil_referencial a
	where	a.cd_classificacao	= cd_classif_ecd_p
	and 	a.cd_empresa = cd_empresa_w
	and	a.cd_versao		= cd_versao_w;
	exception when others then
		dt_inicio_vigencia_w	:= null;
	end;
	
	if (ie_tipo_w = 'A') then
		begin
		insert into conta_contabil_classif_ecd(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_conta_contabil,
			cd_classif_ecd,
			cd_centro_custo,
			ie_situacao,
			dt_inicio_vigencia,
			dt_fim_vigencia,
			cd_versao)
		values (	nextval('conta_contabil_classif_ecd_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_conta_Contabil_p,
			cd_classif_ecd_p,
			null,
			'A',
			dt_inicio_vigencia_w,
			dt_fim_vigencia_w,
			cd_versao_w);
		end;
		
		open c_conta_referencia(cd_conta_Contabil_p);
		loop
		fetch c_conta_referencia into	cd_conta_contabil_w;
		EXIT WHEN NOT FOUND; /* apply on c_conta_referencia */
			begin
			insert into conta_contabil_classif_ecd(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_conta_contabil,
				cd_classif_ecd,
				cd_centro_custo,
				ie_situacao,
				dt_inicio_vigencia,
				dt_fim_vigencia,
				cd_versao)
			values (	nextval('conta_contabil_classif_ecd_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				cd_conta_Contabil_w,
				cd_classif_ecd_p,
				null,
				'A',
				dt_inicio_vigencia_w,
				dt_fim_vigencia_w,
				cd_versao_w);
			end;
		end loop;
		close c_conta_referencia;
		
	elsif (ie_tipo_w = 'T') then
		begin
		open c_conta_analitica;
		loop
		fetch c_conta_analitica into	
			cd_conta_contabil_w;
		EXIT WHEN NOT FOUND; /* apply on c_conta_analitica */
			begin
			
			select	count(*)
			into STRICT	qt_registro_w
			from	conta_contabil_classif_ecd a
			where	a.cd_conta_contabil	= cd_conta_contabil_w
			and	a.cd_classif_ecd	= cd_classif_ecd_p
			and	a.cd_versao		= cd_versao_w;
			
			if (qt_registro_w = 0) then
				insert into conta_contabil_classif_ecd(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					cd_conta_contabil,
					cd_classif_ecd,
					cd_centro_custo,
					ie_situacao,
					dt_inicio_vigencia,
					dt_fim_vigencia,
					cd_versao)
				values (	nextval('conta_contabil_classif_ecd_seq'),
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_conta_Contabil_w,
						cd_classif_ecd_p,
					null,
					'A',
					dt_inicio_vigencia_w,
					dt_fim_vigencia_w,
					cd_versao_w);

				open c_conta_referencia(cd_conta_Contabil_w);
				loop
				fetch c_conta_referencia into	cd_conta_ref_w;
				EXIT WHEN NOT FOUND; /* apply on c_conta_referencia */
					begin
					insert into conta_contabil_classif_ecd(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						cd_conta_contabil,
						cd_classif_ecd,
						cd_centro_custo,
						ie_situacao,
						dt_inicio_vigencia,
						dt_fim_vigencia,
						cd_versao)
					values (	nextval('conta_contabil_classif_ecd_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						cd_conta_ref_w,
						cd_classif_ecd_p,
						null,
						'A',
						dt_inicio_vigencia_w,
						dt_fim_vigencia_w,
						cd_versao_w);
					end;
				end loop;
				close c_conta_referencia;	
			end if;
			end;
		end loop;
		close c_conta_analitica;
		
		end;
	
	end if;
	end;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_inserir_conta_classif_ecd (cd_conta_contabil_p text, cd_classif_ecd_p text, nm_usuario_p text, ie_somente_conta_selec_p text default 'N') FROM PUBLIC;

