-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_regras_prestador ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


qt_regra_duplicada_proc_w	bigint;
qt_regra_duplicada_mat_w	bigint;
qt_regra_duplicada_serv_w	bigint;
nr_seq_regra_proc_w		bigint;	
nr_seq_regra_proc_ant_w 	bigint;
nr_seq_regra_mat_w		bigint;
nr_seq_regra_mat_ant_w		bigint;
nr_seq_regra_serv_w		bigint;
nr_seq_regra_serv_ant_w		bigint;
nr_seq_prest_novo_w		bigint;
nr_seq_prest_ant_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia		
	from	pls_regra_preco_proc
	where	cd_estabelecimento	= cd_estab_origem_p;
	
C02 CURSOR FOR
	SELECT	nr_sequencia		
	from	pls_regra_preco_mat
	where	cd_estabelecimento	= cd_estab_origem_p;
	
C03 CURSOR FOR
	SELECT	nr_sequencia		
	from	pls_regra_preco_servico
	where	cd_estabelecimento	= cd_estab_origem_p;
	

BEGIN

/*Copiar Procedimentos*/

open C01;
loop
fetch C01 into	
	nr_seq_regra_proc_ant_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	nextval('pls_regra_preco_proc_seq')
	into STRICT	nr_seq_regra_proc_w
	;

	select	count(*)
	into STRICT	qt_regra_duplicada_proc_w
	from	pls_regra_preco_proc
	where	nr_seq_regra_ant	= nr_seq_regra_proc_ant_w
	and	cd_estabelecimento	= cd_estab_destino_p;	

	if (qt_regra_duplicada_proc_w = 0) then
		select	max(nr_seq_prestador)
		into STRICT	nr_seq_prest_ant_w
		from	pls_regra_preco_proc
		where	nr_sequencia	= nr_seq_regra_proc_ant_w;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_prest_novo_w
		from	pls_prestador
		where	nr_seq_anterior		= nr_seq_prest_ant_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		exception
		when others then
			nr_seq_prest_novo_w	:= nr_seq_prest_ant_w;
		end;
	
		insert into  pls_regra_preco_proc(nr_sequencia, 	cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
			nr_seq_prestador, nr_seq_plano,  nr_seq_categoria,               
			nr_seq_clinica, nr_seq_tipo_acomodacao, nr_seq_tipo_atendimento,       
			cd_edicao_amb, 	cd_procedimento, ie_origem_proced,               
			cd_area_procedimento, cd_especialidade, cd_grupo_proc,                  
			tx_ajuste_geral, vl_ch_honorarios, vl_ch_custo_oper,               
			vl_filme, tx_ajuste_custo_oper,tx_ajuste_partic,               
			vl_proc_negociado, ie_situacao, dt_inicio_vigencia,             
			dt_fim_vigencia,tx_ajuste_filme,                
			tx_ajuste_ch_honor,ie_tipo_tabela,vl_medico,vl_auxiliares,                  
			vl_anestesista,vl_custo_operacional,vl_materiais,                   
			ie_preco_informado,nr_seq_outorgante, nr_seq_contrato,                
			ie_preco, nr_seq_congenere, cd_convenio,                    
			cd_categoria, ie_tipo_contratacao, qt_dias_inter_inicio,           
			qt_dias_inter_final, nr_seq_regra_ant, nr_seq_ops_congenere,
			ie_tipo_contrato, ie_tipo_consulta, nr_seq_grupo_med_exec,
            ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
			ie_saude_ocupacional)
		SELECT	nr_seq_regra_proc_w, cd_estab_destino_p, 
			clock_timestamp(),nm_usuario_p,clock_timestamp(), nm_usuario_p, 
			nr_seq_prest_novo_w, nr_seq_plano,  nr_seq_categoria,             
			nr_seq_clinica, nr_seq_tipo_acomodacao, nr_seq_tipo_atendimento,       
			cd_edicao_amb, 	cd_procedimento, ie_origem_proced,               
			cd_area_procedimento, cd_especialidade, cd_grupo_proc,                  
			tx_ajuste_geral, vl_ch_honorarios, vl_ch_custo_oper,               
			vl_filme, tx_ajuste_custo_oper,tx_ajuste_partic,               
			vl_proc_negociado, ie_situacao, dt_inicio_vigencia,             
			dt_fim_vigencia,tx_ajuste_filme,                
			tx_ajuste_ch_honor,ie_tipo_tabela,vl_medico,vl_auxiliares,                  
			vl_anestesista,vl_custo_operacional,vl_materiais,                   
			ie_preco_informado,nr_seq_outorgante, nr_seq_contrato,                
			ie_preco, nr_seq_congenere, cd_convenio,                    
			cd_categoria, ie_tipo_contratacao, qt_dias_inter_inicio,           
			qt_dias_inter_final, nr_seq_regra_proc_ant_w, nr_seq_ops_congenere,
			ie_tipo_contrato, ie_tipo_consulta, nr_seq_grupo_med_exec,
            ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
			ie_saude_ocupacional
		from	pls_regra_preco_proc
		where	nr_sequencia	= nr_seq_regra_proc_ant_w;	
	end if;		
end;
end loop;
close C01;

/*Copiar Materiais*/

open C02;
loop
fetch C02 into	
	nr_seq_regra_mat_ant_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	
	select	nextval('pls_regra_preco_mat_seq')
	into STRICT	nr_seq_regra_mat_w
	;	
	
	select	count(*)
	into STRICT	qt_regra_duplicada_mat_w
	from	pls_regra_preco_mat
	where	nr_seq_regra_ant	= nr_seq_regra_mat_ant_w
	and	cd_estabelecimento	= cd_estab_destino_p;	

	if (qt_regra_duplicada_mat_w = 0) then
		select	max(nr_seq_prestador)
		into STRICT	nr_seq_prest_ant_w
		from	pls_regra_preco_mat
		where	nr_sequencia	= nr_seq_regra_proc_ant_w;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_prest_novo_w
		from	pls_prestador
		where	nr_seq_anterior		= nr_seq_prest_ant_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		exception
		when others then
			nr_seq_prest_novo_w	:= nr_seq_prest_ant_w;
		end;
	
		insert into  pls_regra_preco_mat(nr_sequencia, 	cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,		
			nr_seq_prestador,dt_inicio_vigencia,dt_fim_vigencia,
			tx_ajuste,ie_situacao,vl_negociado,
			tx_ajuste_pfb,tx_ajuste_pmc_neut,tx_ajuste_pmc_pos,
			tx_ajuste_pmc_neg,tx_ajuste_simpro_pfb,tx_ajuste_simpro_pmc,
			ie_origem_preco,ie_tipo_despesa,nr_seq_material_preco,
			tx_ajuste_tab_propria,ie_tipo_tabela,nr_seq_outorgante,
			nr_seq_contrato,tx_ajuste_benef_lib,nr_seq_congenere,
			nr_seq_regra_ant, qt_idade_inicial, qt_idade_final,
            ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
			ie_saude_ocupacional)
		SELECT	nr_seq_regra_mat_w, cd_estab_destino_p, 
			clock_timestamp(),nm_usuario_p,clock_timestamp(), nm_usuario_p, 		
			nr_seq_prest_novo_w,dt_inicio_vigencia,dt_fim_vigencia,
			tx_ajuste,ie_situacao,vl_negociado,
			tx_ajuste_pfb,tx_ajuste_pmc_neut,tx_ajuste_pmc_pos,
			tx_ajuste_pmc_neg,tx_ajuste_simpro_pfb,tx_ajuste_simpro_pmc,
			ie_origem_preco,ie_tipo_despesa,nr_seq_material_preco,
			tx_ajuste_tab_propria,ie_tipo_tabela,nr_seq_outorgante,
			nr_seq_contrato,tx_ajuste_benef_lib,nr_seq_congenere,
			nr_seq_regra_mat_ant_w, qt_idade_inicial, qt_idade_final,
            ie_gerar_remido, ie_regime_atendimento, ie_regime_atendimento_princ,
			ie_saude_ocupacional
		from	pls_regra_preco_mat
		where	nr_sequencia	= nr_seq_regra_mat_ant_w;
	end if;	
	end;
end loop;
close c02;

/*Copiar Servicos*/

open C03;
loop
fetch C03 into	
	nr_seq_regra_serv_ant_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin
	
	select	nextval('pls_regra_preco_servico_seq')
	into STRICT	nr_seq_regra_serv_w
	;	
	
	select	count(*)
	into STRICT	qt_regra_duplicada_serv_w
	from	pls_regra_preco_servico
	where	nr_seq_regra_ant	= nr_seq_regra_serv_ant_w
	and	cd_estabelecimento	= cd_estab_destino_p;	
	
	if (qt_regra_duplicada_serv_w = 0) then
		select	max(nr_seq_prestador)
		into STRICT	nr_seq_prest_ant_w
		from	pls_regra_preco_servico
		where	nr_sequencia	= nr_seq_regra_proc_ant_w;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_prest_novo_w
		from	pls_prestador
		where	nr_seq_anterior		= nr_seq_prest_ant_w
		and	cd_estabelecimento	= cd_estab_destino_p;
		exception
		when others then
			nr_seq_prest_novo_w	:= nr_seq_prest_ant_w;
		end;
	
		insert into  pls_regra_preco_servico(nr_sequencia, 	cd_estabelecimento, dt_atualizacao,
			nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,		
			nr_seq_prestador,dt_inicio_vigencia,dt_fim_vigencia,
			cd_tabela_servico,tx_ajuste,cd_procedimento,
			ie_origem_proced,ie_situacao,cd_area_procedimento,
			cd_especialidade,cd_grupo_proc,vl_negociado,
			ie_tipo_tabela,nr_seq_outorgante,nr_seq_contrato,
			nr_seq_congenere,nr_seq_regra_ant, qt_idade_inicial, 
			qt_idade_final, ie_gerar_remido, ie_regime_atendimento, 
			ie_regime_atendimento_princ, ie_saude_ocupacional)
		SELECT	nr_seq_regra_serv_w, cd_estab_destino_p, 
			clock_timestamp(),nm_usuario_p,clock_timestamp(), nm_usuario_p, 		
			nr_seq_prest_novo_w,dt_inicio_vigencia,dt_fim_vigencia,
			cd_tabela_servico,tx_ajuste,cd_procedimento,
			ie_origem_proced,ie_situacao,cd_area_procedimento,
			cd_especialidade,cd_grupo_proc,vl_negociado,
			ie_tipo_tabela,nr_seq_outorgante,nr_seq_contrato,
			nr_seq_congenere,nr_seq_regra_serv_ant_w, qt_idade_inicial, 
			qt_idade_final, ie_gerar_remido, ie_regime_atendimento, 
			ie_regime_atendimento_princ, ie_saude_ocupacional
		from	pls_regra_preco_servico
		where	nr_sequencia	= nr_seq_regra_serv_ant_w;
	end if;	
	end;
end loop;
close c03;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_regras_prestador ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

