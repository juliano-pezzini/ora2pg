-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mens_item_amortizacao ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


qt_mens_benef_w			integer;
nr_seq_mens_arredondamento_w	pls_mensalidade_segurado.nr_sequencia%type;
vl_rateio_w			pls_mensalidade_seg_item.vl_item%type;
vl_item_w			pls_mensalidade_seg_item.vl_item%type;

ds_observacao_w			pls_mensalidade_seg_item.ds_observacao%type;
nr_titulo_w			titulo_receber.nr_titulo%type;
dt_baixa_w			titulo_receber_liq.dt_recebimento%type;
dt_mes_competencia_w		pls_mensalidade.dt_referencia%type;
ie_inseriu_w			varchar(1);

c01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_amortizacao,
		a.vl_amortizado
	from	pls_pagador_amortizacao a
	where	coalesce(a.nr_seq_mensalidade::text, '') = ''
	and	a.nr_seq_pagador	= nr_seq_pagador_p;

c02 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_mensalidade_seg
	from	pls_mensalidade_segurado 	a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
	and	exists (SELECT	1
			from	pls_mensalidade_seg_item x
			where	a.nr_sequencia = x.nr_seq_mensalidade_seg);
BEGIN

for r_c01_w in C01 loop
	begin
	ie_inseriu_w	:= 'N';

	select	count(1),
		max(a.nr_sequencia)
	into STRICT	qt_mens_benef_w,
		nr_seq_mens_arredondamento_w
	from	pls_mensalidade_segurado 	a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p
	and	exists (SELECT	1
		from	pls_mensalidade_seg_item x
		where	a.nr_sequencia = x.nr_seq_mensalidade_seg);

	vl_rateio_w	:= dividir_sem_round(r_c01_w.vl_amortizado,qt_mens_benef_w);

	for r_c02_w in C02 loop
		begin

		if (nr_seq_mens_arredondamento_w = r_c02_w.nr_seq_mensalidade_seg) then
			vl_item_w	:= vl_rateio_w + (r_c01_w.vl_amortizado - (vl_rateio_w * qt_mens_benef_w));
		else
			vl_item_w	:= vl_rateio_w;
		end if;

		if (vl_item_w <> 0) then
			select	max(a.nr_titulo_origem),
				max(b.dt_recebimento),
				max(d.dt_referencia)
			into STRICT	nr_titulo_w,
				dt_baixa_w,
				dt_mes_competencia_w
			from	pls_pagador_amortizacao	a,
				titulo_receber_liq	b,
				titulo_receber		c,
				pls_mensalidade		d
			where	c.nr_titulo	= a.nr_titulo_origem
			and	c.nr_titulo	= b.nr_titulo
			and	b.nr_sequencia	= a.nr_seq_baixa_origem
			and	d.nr_sequencia	= c.nr_seq_mensalidade
			and	a.nr_sequencia	= r_c01_w.nr_seq_amortizacao;

			ds_observacao_w	:= wheb_mensagem_pck.get_texto(393107,'NR_TITULO='||nr_titulo_w||';DT_REFERENCIA='||dt_mes_competencia_w||';DT_BAIXA='||dt_baixa_w);

			insert	into	pls_mensalidade_seg_item(	nr_sequencia, nr_seq_mensalidade_seg, ie_tipo_item, vl_item, ie_tipo_mensalidade,
					nm_usuario, nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec,
					nr_seq_amortizacao, ds_observacao, nr_seq_lote)
			values (	nextval('pls_mensalidade_seg_item_seq'), r_c02_w.nr_seq_mensalidade_seg, '16', vl_item_w, 'P',
					nm_usuario_p, nm_usuario_p, clock_timestamp(), clock_timestamp(),
					r_c01_w.nr_seq_amortizacao, ds_observacao_w, nr_seq_lote_p);
			ie_inseriu_w	:= 'S';
		end if;
		end;
	end loop; --C02
	-- Gravar a mensalidade na amortização para que não seja re-utilizada
	if (ie_inseriu_w = 'S') then
		update	pls_pagador_amortizacao
		set	nr_seq_mensalidade	= nr_seq_mensalidade_p
		where	nr_sequencia		= r_c01_w.nr_seq_amortizacao;
	end if;
	end;
end loop; --C01
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_item_amortizacao ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

