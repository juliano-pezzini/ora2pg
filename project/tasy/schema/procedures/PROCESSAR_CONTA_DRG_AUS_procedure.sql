-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE processar_conta_drg_aus (nr_interno_conta_p bigint, cd_estabelecimento_p bigint, ie_separacao_conta_p text, nm_usuario_p text) AS $body$
DECLARE


/* Dados da conta */

 cd_convenio_parametro_w		conta_paciente.cd_convenio_parametro%type;
 cd_estabelecimento_w			conta_paciente.cd_estabelecimento%type;
 pr_coseg_hosp_conta_w			conta_paciente.pr_coseguro_hosp%type;
 pr_coseg_honor_conta_w			conta_paciente.pr_coseguro_honor%type;
 pr_coseg_nivel_hosp_conta_w	conta_paciente.pr_coseg_nivel_hosp%type;
 vl_coseg_hosp_conta_w			conta_paciente.vl_coseguro_hosp%type;
 vl_coseg_honor_conta_w			conta_paciente.vl_coseguro_honor%type;
 vl_coseg_nivel_hosp_conta_w	conta_paciente.vl_coseg_nivel_hosp%type;
 vl_deduzido_conta_w			conta_paciente.vl_deduzido%type;
 vl_max_coseguro_conta_w		conta_paciente.vl_maximo_coseguro%type;
 nr_atendimento_w				conta_paciente.nr_atendimento%type;
 cd_categoria_parametro_w		conta_paciente.cd_categoria_parametro%type;

/* Dados da regra de calculo da conta */

 qt_regras_w					bigint;
 cd_proc_calculo_w				conv_regra_calculo_conta.cd_proc_calculo%type;
 ie_orig_proc_calculo_w			conv_regra_calculo_conta.ie_orig_proc_calculo%type;
 ie_tipo_calculo_w				conv_regra_calculo_conta.ie_tipo_calculo%type;
 ds_calculo_w					conv_regra_calculo_conta.ds_calculo%type;
 vl_desconto_deduzido_w			conv_regra_calculo_conta.vl_desconto_deduzido%type;
 pr_imposto_w					conv_regra_calculo_conta.pr_imposto%type;

/* valores base e impostos */

 vl_honorario_conta_w			double precision;
 vl_base_com_imposto_w			double precision;
 vl_base_sem_imposto_w			double precision;

/* Dados primeiro atendimento paciente unidade */

 cd_setor_atendimento_w			atend_paciente_unidade.cd_setor_atendimento%type;
 dt_entrada_unidade_w			atend_paciente_unidade.dt_entrada_unidade%type;
 nr_seq_atepacu_w				atend_paciente_unidade.nr_seq_interno%type;

/* Dados do parametro faturamento*/

 cd_convenio_partic_w			parametro_faturamento.cd_convenio_partic%type;
 cd_categoria_partic_w			parametro_faturamento.cd_categoria_partic %type;

/* Sequencias para lancamentos dos itens */

 nr_seq_propaci_w				procedimento_paciente.nr_sequencia%type;
 nr_seq_propaci_ww				procedimento_paciente.nr_sequencia%type;
 nr_seq_conta_log_proc_w		conta_log_processamento.nr_sequencia%type;

/* Numero da conta em que o item foi lancado */

 nr_interno_conta_dest_w		procedimento_paciente.nr_interno_conta%type;

/* Data de inicio da conta */

 dt_procedimento_w				procedimento_paciente.dt_procedimento%type;

/* Numero da conta se separacao */

  nr_interno_conta_sep_w		conta_paciente.nr_interno_conta%type;

/*Numero da conta particular que ira receber os itens, nos casos em que nao for possivel criar de forma automatica*/

 ie_possui_conta_item_w			varchar(1);
 nr_interno_conta_partic_w		conta_paciente.nr_interno_conta%type;

/*Variaveis utilizadas para o rateio, no caso do preenchimento do campo valor maximo do coseguro*/

 vl_proced_hosp_w				procedimento_paciente.vl_procedimento%type;
 vl_proced_honor_w				procedimento_paciente.vl_procedimento%type;
 vl_proced_nivel_hosp_w			procedimento_paciente.vl_procedimento%type;
 vl_total_coseguro_w			procedimento_paciente.vl_procedimento%type;
 vl_proced_hosp_rat_w			procedimento_paciente.vl_procedimento%type;
 vl_proced_honor_rat_w			procedimento_paciente.vl_procedimento%type;
 vl_proced_nivel_hosp_rat_w		procedimento_paciente.vl_procedimento%type;
 nr_seq_proc_hosp_w				procedimento_paciente.nr_sequencia%type;
 nr_seq_proc_honor_w			procedimento_paciente.nr_sequencia%type;
 nr_seq_proc_nivel_hosp_w		procedimento_paciente.nr_sequencia%type;
 nr_seq_proc_hosp_partic_w		procedimento_paciente.nr_sequencia%type;
 nr_seq_proc_honor_partic_w		procedimento_paciente.nr_sequencia%type;
 nr_seq_proc_niv_hosp_part_w	procedimento_paciente.nr_sequencia%type;

 cd_motivo_alta_w 				atendimento_transf.cd_cgc%type;
 qt_horas_int_w 				double precision;
 qt_total_days_w 				bigint;
 qt_days_in_icu_w 				bigint;
 qt_days_in_icu_cat_a_w 		bigint;
 qt_days_in_icu_cat_b_w 		bigint;
 qt_days_in_icu_cat_c_w 		bigint;
 qt_days_not_in_icu_cat_a_w 	bigint;
 qt_days_not_in_icu_w 			bigint;
 qt_days_priv_share_w			bigint;									
 is_tier3_range_applied_w 		varchar(1):='N';
 qt_days_exceeds_tier3_w 		bigint;
 is_tier2_range_applied_w 		varchar(1):='N';
 qt_days_exceeds_tier2_w 		bigint;
 is_tier1_range_applied_w 		varchar(1):='N';
 qt_days_exceeds_tier1_w 		bigint;
 qt_days_in_tier1_w 			bigint;
 qt_days_in_tier2_w 			bigint;
 qt_drg_price_available_w 		bigint;
 qt_days_for_tran_disc_w  		bigint;
 is_only_flagfall_sso_applied_w varchar(1):='N';
 is_all_days_in_icu_w 			varchar(1):='N';
 is_none_days_in_icu_w 			varchar(1):='N';
 is_some_days_in_icu_w 			varchar(1):='N';
 is_transfer_cutoff_reached_w 	varchar(1):='N';

/*DRG configuration and DRG edition related */

/*--DRG related*/

 nr_seq_edition_w        		health_fund_drg.nr_seq_edition%type;
 qt_estadia_min_w        		drg_procedimento.qt_estadia_min%type;
 qt_estadia_max_w        		drg_procedimento.qt_estadia_max%type;
 vl_inlier_rate_w        		drg_procedimento.vl_inlier_rate%type;
 vl_sso_benefit_w        		drg_procedimento.vl_sso_benefit%type;
 vl_lso_benefit_w        		drg_procedimento.vl_lso_benefit%type;
 vl_icu_sso_w            		drg_procedimento.vl_icu_sso%type;
 vl_trnfr_dscnt_w        		drg_procedimento.vl_trnfr_dscnt%type;
 qt_tnsfr_pt_w           		drg_procedimento.qt_tnsfr_pt%type;

/*--  Added as part of SO 2022127 for DRG*/

  qt_estedia_min_tier2_w		drg_procedimento.qt_estedia_min_tier2%type;
  qt_estedia_max_tier2_w 		drg_procedimento.qt_estedia_max_tier2%type;
  vl_inlier_rate_tier2_w 		drg_procedimento.vl_inlier_rate_tier2%type;
  qt_estedia_min_tier3_w  		drg_procedimento.qt_estedia_min_tier3%type;
  qt_estedia_max_tier3_w  		drg_procedimento.qt_estedia_max_tier3%type;
  vl_inlier_rate_tier3_w  		drg_procedimento.vl_inlier_rate_tier3%type;
  vl_rate_lt_6_hrs_w      		drg_procedimento.vl_rate_lt_6_hrs%type;
  vl_rate_gt_6_hrs_w      		drg_procedimento.vl_rate_gt_6_hrs%type;
  vl_overnight_flagfall_w 		drg_procedimento.vl_overnight_flagfall%type;
  vl_overnight_flagfall_mv_w 	drg_procedimento.vl_overnight_flagfall_mv%type;
  vl_proc_only_fee_w      		drg_procedimento.vl_proc_only_fee%type;
  cd_drg_category_w       		drg_procedimento.cd_drg_category%type;
  vl_same_day_weight_w 			drg_procedimento.vl_same_day_weight%type;
  vl_same_day_rate_w   			drg_procedimento.vl_same_day_rate%type;
  vl_short_diem_weight_w  		drg_procedimento.vl_short_diem_weight%type;
  vl_inlier_weight_w     		drg_procedimento.vl_inlier_weight%type;
  vl_long_diem_weight_w   		drg_procedimento.vl_long_diem_weight%type;


  ie_support_icu_category_w 	drg_billing_configuration.ie_support_icu_category%type;
  ie_support_mult_perdiem_w 	drg_billing_configuration.ie_support_mult_perdiem%type;
  ie_supports_icu_ss_w 			drg_billing_configuration.ie_supports_icu_ss%type;
  ie_support_ttp_w 				drg_billing_configuration.ie_support_ttp%type;
  ie_support_dtd_w 				drg_billing_configuration.ie_support_dtd%type;
  ie_exclude_last_day_inlier_w 	drg_billing_configuration.ie_exclude_last_day_inlier%type;
  ie_support_day_patient_w 		drg_billing_configuration.ie_support_day_patient%type;

 nr_sequencia_ww 				drg_calculation_rule.nr_sequencia%type;
 cd_estabelecimento_ww 			drg_calculation_rule.cd_estabelecimento%type;
 ie_tipo_calculo_ww 			drg_calculation_rule.ie_tipo_calculo%type;
 cd_proc_calculo_ww 			drg_calculation_rule.cd_proc_calculo%type;
 ie_origem_proc_calculo_ww 		drg_calculation_rule.ie_origem_proc_calculo%type;
 qt_min_hours_ww 				drg_calculation_rule.qt_min_hours%type;
 qt_max_hours_ww 				drg_calculation_rule.qt_max_hours%type;
 ds_calculo_ww 					drg_calculation_rule.ds_calculo%type;
 ds_calculo_days_ww 			drg_calculation_rule.ds_calculo_days%type;
 cd_procedimento_w 				procedimento.cd_procedimento%type;
 ie_origem_proced_w 			procedimento.ie_origem_proced%type;
 max_sequence_w 				procedimento_paciente.nr_sequencia%type;
 max_dt_proc_w 					procedimento_paciente.dt_procedimento%type;
 max_dt_proc_ww 				procedimento_paciente.dt_procedimento%type;
 max_dt_proc_priv_ww 			procedimento_paciente.dt_procedimento%type;
 max_dt_proc_priv_sh_ww 		procedimento_paciente.dt_procedimento%type;																
 qt_temp_w 						procedimento_paciente.dt_procedimento%type;
 qt_temp_priv_w 				procedimento_paciente.dt_procedimento%type;
 qt_temp_priv_sh_w 				procedimento_paciente.dt_procedimento%type;																
 nr_seq_interno_ww 				atend_paciente_unidade.nr_seq_interno%type;
 nr_seq_interno_www 			atend_paciente_unidade.nr_seq_interno%type;
 nr_seq_interno_wwww 			atend_paciente_unidade.nr_seq_interno%type;
 nr_seq_interno_priv_w    		atend_paciente_unidade.nr_seq_interno%type;
 nr_seq_interno_priv_sh_w    	atend_paciente_unidade.nr_seq_interno%type;																		
 cd_setor_atendimento_ww 		atend_paciente_unidade.cd_setor_atendimento%type;
 cd_setor_atendimento_www 		atend_paciente_unidade.cd_setor_atendimento%type;
 dt_entrada_unidade_ww 			atend_paciente_unidade.dt_entrada_unidade%type;
 dt_entrada_unidade_www 		atend_paciente_unidade.dt_entrada_unidade%type;
 cd_classif_setor_ww 			setor_atendimento.cd_classif_setor%type;
 cd_classif_setor_www 			setor_atendimento.cd_classif_setor%type;
 cd_procedimento_final_w 		procedimento.cd_procedimento%type;
 ie_origem_proced_final_w 		procedimento.ie_origem_proced%type;
 cd_procedimento_loc_ww 		procedimento.cd_procedimento_loc%type;
 cd_procedimento_final_ww 		procedimento.cd_procedimento%type;
 ie_origem_proced_final_ww 		procedimento.ie_origem_proced%type;
 cd_procedimento_loc_www 		procedimento.cd_procedimento_loc%type;
 qt_proc_linked_with_drg_w 		bigint;
 cd_motivo_exc_conta_w 			parametro_faturamento.cd_motivo_exc_conta%type;
 qt_procedimento_ww 			bigint;
 qt_procedimento_www 			bigint;
 vl_procedimento_www 			double precision;
 cd_tipo_acomodacao_w 			atend_paciente_unidade.cd_tipo_acomodacao%type;
 is_sso_applied_w 				varchar(1):='N';
 ie_drg_proc_exist_w    bigint:=0;
 cd_proc_loc_w   procedimento.cd_procedimento_loc%type;
 ie_private_room_add_on_w varchar(1):='N';
 is_sdr_applied_w   varchar(1):='N';
 is_inlierval_override_w varchar(1):='N';
 ie_high_trim_in_tier1_w varchar(1):='S';
 ie_icu_top_up_rate_w varchar(1):='N';
 cd_tipo_class_acomo_w  tipo_acomodacao.ie_classificacao%type;
  nr_propaci_log_w       procedimento_paciente.nr_sequencia%type;
 ie_gravar_log_w    varchar(1):='N';
 dt_priv_acc_ent_w timestamp;
 dt_pric_acc_ext_w timestamp;
 dt_priv_sh_acc_ent_w timestamp;
 dt_pric_sh_acc_ext_w timestamp;						
 qt_days_in_unit_w bigint;
 ie_tipo_atendimento_w     		smallint    	:= 0;
 ie_clinica_w			integer;
 ie_classif_convenio_w        		varchar(03);
 ie_tipo_convenio_aux_w		smallint;
 ie_tipo_convenio_aux2_w		smallint;
 dt_entrada_w  timestamp;
 cd_conta_contabil_w        		varchar(20);
 cd_centro_custo_w      		bigint   	:= 0;
 cd_plano_w			varchar(40);
 dt_conta_w                		timestamp		:= clock_timestamp();
 nr_seq_proc_interno_1_w		procedimento_paciente.nr_seq_proc_interno%type;
 qt_days_in_non_priv_unit_w bigint;
 qt_days_in_priv_sh_unit_w bigint;									
 dt_saida_unidade_ww		atend_paciente_unidade.dt_saida_unidade%type;
 range_start_w	timestamp;
 range_end_w		timestamp;
 range_count_w	bigint;
 dt_proc_drg_edi_w timestamp;
 dt_alta_preco_w		timestamp;
 dt_conta_definitiva_w	timestamp;
 dt_agenda_integrada_w 	timestamp;
 dt_periodo_inicial_w 	timestamp;
 dt_periodo_final_w		timestamp;
 dt_preco_w				timestamp;
/* Dominio 7408 - Tipo de regra 'Calculo Conta'
	'DRG': Diagnosis Related Group
*/
c01 CURSOR FOR
SELECT	nr_sequencia, cd_estabelecimento, ie_tipo_calculo, cd_proc_calculo, ie_origem_proc_calculo,qt_min_hours, qt_max_hours, ds_calculo, ds_calculo_days
from	drg_calculation_rule
where	cd_convenio		= cd_convenio_parametro_w
and	cd_estabelecimento	= cd_estabelecimento_w
and ((ie_tipo_calculo	= 'TTP' and is_transfer_cutoff_reached_w ='S')
or (ie_tipo_calculo	= 'ADDON' and ie_private_room_add_on_w='S'))
and	ie_situacao		= 'A'
and	clock_timestamp() between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp())
order by	ie_tipo_calculo;

c02 CURSOR FOR
SELECT nr_sequencia, cd_estabelecimento, ie_tipo_calculo, cd_proc_calculo, ie_origem_proc_calculo,qt_min_hours, qt_max_hours,
ds_calculo,ds_calculo_days
from drg_calculation_rule
where cd_convenio = cd_convenio_parametro_w
and	((coalesce(ie_tipo_atendimento::text, '') = '') or (ie_tipo_atendimento	= obter_tipo_atendimento(nr_atendimento_w)))
and	((ie_tipo_calculo	= 'T1' and is_tier1_range_applied_w='S')
or (ie_tipo_calculo	= 'T2' and is_tier2_range_applied_w='S')
or ( ie_tipo_calculo = 'DRG')
or (ie_tipo_calculo	= 'T3' and is_tier3_range_applied_w='S')
or (ie_tipo_calculo	= 'OF' and is_only_flagfall_sso_applied_w='S')
or (ie_tipo_calculo	= 'SDR' and is_sdr_applied_w='S')
or (ie_tipo_calculo	= 'ADDON' and ie_private_room_add_on_w='S')
or (ie_tipo_calculo	= 'DRGIN' and ie_private_room_add_on_w='S')
or (ie_tipo_calculo	= 'ICUTR' and ie_icu_top_up_rate_w ='S')
or (ie_tipo_calculo	= 'LSO' and is_tier2_range_applied_w='S' and qt_days_in_icu_cat_a_w<=0 and is_sdr_applied_w='N')
or  ((ie_tipo_calculo	= 'SSO' and is_tier1_range_applied_w='S' and is_sso_applied_w='S' and qt_days_in_icu_cat_a_w<=0)
    or (ie_tipo_calculo	= 'SSO' and is_only_flagfall_sso_applied_w='S' and qt_days_in_icu_cat_a_w<=0))
or (ie_tipo_calculo	= 'IN' and is_tier1_range_applied_w='S' and is_sso_applied_w='N')
or  ((ie_tipo_calculo	= 'ICUAS' and qt_days_in_icu_cat_a_w>0 and is_sso_applied_w='S')
    or (ie_tipo_calculo	= 'ICUAI' and qt_days_in_icu_cat_a_w>0 and is_sso_applied_w='N' and is_tier1_range_applied_w='S')
    or (ie_tipo_calculo	= 'ICUAL' and qt_days_in_icu_cat_a_w>0 and is_sso_applied_w='N' and is_tier2_range_applied_w='S'))
or  ((ie_tipo_calculo	= 'ICUBS' and qt_days_in_icu_cat_b_w>0 and is_sso_applied_w='S')
    or (ie_tipo_calculo	= 'ICUBI' and qt_days_in_icu_cat_b_w>0 and is_sso_applied_w='N' and is_tier1_range_applied_w='S')
    or (ie_tipo_calculo	= 'ICUBL' and qt_days_in_icu_cat_b_w>0 and is_sso_applied_w='N' and is_tier2_range_applied_w='S'))
or  ((ie_tipo_calculo	= 'ICUCS' and qt_days_in_icu_cat_c_w>0 and is_sso_applied_w='S')
    or (ie_tipo_calculo	= 'ICUCI' and qt_days_in_icu_cat_c_w>0 and is_sso_applied_w='N' and is_tier1_range_applied_w='S')
    or (ie_tipo_calculo	= 'ICUCL' and qt_days_in_icu_cat_c_w>0 and is_sso_applied_w='N' and is_tier2_range_applied_w='S')))
and	((coalesce(qt_min_hours::text, '') = '') or (qt_min_hours >= qt_horas_int_w))
and	((coalesce(qt_max_hours::text, '') = '') or (qt_max_hours < qt_horas_int_w))
and clock_timestamp() between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp())
and ie_situacao = 'A'
order by ie_tipo_calculo;


c03 CURSOR FOR
SELECT	nr_sequencia, cd_estabelecimento, ie_tipo_calculo, cd_proc_calculo, ie_origem_proc_calculo,qt_min_hours, qt_max_hours, ds_calculo, ds_calculo_days
from	drg_calculation_rule
where	cd_convenio		= cd_convenio_parametro_w
and	cd_estabelecimento	= cd_estabelecimento_w
and ((ie_tipo_calculo	= 'ADDON' and ie_private_room_add_on_w ='S')
or (ie_tipo_calculo	= 'DRGIN' and ie_private_room_add_on_w ='S')
or ( ie_tipo_calculo = 'DRG')							
or (ie_tipo_calculo	= 'ICUTR' and ie_icu_top_up_rate_w ='S'))
and	ie_situacao		= 'A'
and	clock_timestamp() between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp())
order by	ie_tipo_calculo;
BEGIN

select	count(*)
into STRICT	qt_drg_price_available_w
from	procedimento_paciente pp ,
		procedimento p
where	pp.nr_interno_conta=nr_interno_conta_p
and		pp.ie_origem_proced=15
and		pp.ie_origem_proced=p.ie_origem_proced
and		pp.cd_procedimento = p.cd_procedimento
and		p.ie_classificacao <> 3;



if ( qt_drg_price_available_w > 0) then
		select	max(cd_convenio_parametro),
				max(cd_estabelecimento),
				max(coalesce(pr_coseguro_hosp,0)) / 100,
				max(coalesce(pr_coseguro_honor,0)) / 100,
				max(coalesce(pr_coseg_nivel_hosp,0)) / 100,
				max(coalesce(vl_coseguro_hosp,0)),
				max(coalesce(vl_coseguro_honor,0)),
				max(coalesce(vl_coseg_nivel_hosp,0)),
				max(vl_deduzido),
				max(coalesce(vl_maximo_coseguro,0)),
				max(nr_atendimento),
				max(cd_categoria_parametro)
		into STRICT	cd_convenio_parametro_w,
				cd_estabelecimento_w,
				pr_coseg_hosp_conta_w,
				pr_coseg_honor_conta_w,
				pr_coseg_nivel_hosp_conta_w,
				vl_coseg_hosp_conta_w,
				vl_coseg_honor_conta_w,
				vl_coseg_nivel_hosp_conta_w,
				vl_deduzido_conta_w,
				vl_max_coseguro_conta_w,
				nr_atendimento_w,
				cd_categoria_parametro_w
		from	conta_paciente
		where	nr_interno_conta = nr_interno_conta_p;



		select	sum(qt)
		into STRICT	qt_regras_w
		from	(SELECT	1 qt
				from	drg_calculation_rule
				where	cd_convenio		= cd_convenio_parametro_w
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	ie_situacao		= 'A'
				and	ie_tipo_calculo = 'DRG'
				and ((coalesce(ie_tipo_atendimento::text, '') = '') or (ie_tipo_atendimento = obter_tipo_atendimento(nr_atendimento_w)))
				and	clock_timestamp() between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp())
				
union all

				SELECT	1 qt
				from	drg_calculation_rule
				where	cd_convenio		= cd_convenio_parametro_w
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	ie_situacao		= 'A'
				and	ie_tipo_calculo in ('T1','T2','T3','OF')
				and ((coalesce(ie_tipo_atendimento::text, '') = '') or (ie_tipo_atendimento = obter_tipo_atendimento(nr_atendimento_w)))
				and	clock_timestamp() between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp())
				
union all

				select	1 qt
				from	drg_calculation_rule
				where	cd_convenio		= cd_convenio_parametro_w
				and	cd_estabelecimento	= cd_estabelecimento_w
				and	ie_situacao		= 'A'
				and	ie_tipo_calculo in ('LSO','SSO','TTP','ICUAS','ICUAL','ICUAI','ICUBS','ICUBL','ICUBI','ICUCS','ICUCL','ICUCI','IN','SDR','ADDON','ICUTR')
				and ((coalesce(ie_tipo_atendimento::text, '') = '') or (ie_tipo_atendimento = obter_tipo_atendimento(nr_atendimento_w)))
				and	clock_timestamp() between dt_inicio_vigencia and coalesce(dt_final_vigencia,clock_timestamp())) alias27;

		if (qt_regras_w < 1) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1108491);
		end if;

		select	coalesce(sum(coalesce(a.vl_medico,0)),0)
		into STRICT	vl_honorario_conta_w
		FROM procedimento b, procedimento_paciente a
LEFT OUTER JOIN regra_ajuste_proc c ON (a.nr_seq_ajuste_proc = c.nr_sequencia)
WHERE nr_interno_conta = nr_interno_conta_p and b.cd_procedimento = a.cd_procedimento and b.ie_origem_proced = a.ie_origem_proced and b.cd_tipo_procedimento = 135  -- 135 = Honorario Medico
;

		select	coalesce(sum(coalesce(vl,0)),0)
		into STRICT	vl_base_sem_imposto_w
		from (SELECT	coalesce(a.vl_procedimento,0) vl
			from	procedimento_paciente a
			where	a.nr_interno_conta = nr_interno_conta_p
			and	coalesce(a.nr_seq_proc_pacote::text, '') = ''
			and	not exists (	select	1
					from	propaci_imposto x
					where	x.nr_seq_propaci = a.nr_sequencia
					and	x.pr_imposto > 0)
			
union all

			SELECT	coalesce(a.vl_material,0) vl
			from	material_atend_paciente a
			where	a.nr_interno_conta = nr_interno_conta_p
			and	coalesce(a.nr_seq_proc_pacote::text, '') = ''
			and	not exists (	select	1
					from	matpaci_imposto x
					where	x.nr_seq_matpaci = a.nr_sequencia
					and	x.pr_imposto > 0)) alias9;

		select	coalesce(sum(coalesce(vl,0)),0)
		into STRICT	vl_base_com_imposto_w
		from (SELECT	coalesce(a.vl_procedimento,0) vl
			from	procedimento_paciente a
			where	a.nr_interno_conta = nr_interno_conta_p
			and	exists (	select	1
					from	propaci_imposto y
					where	y.nr_seq_propaci = a.nr_sequencia
					and	y.pr_imposto > 0)
			
union all

			SELECT	coalesce(a.vl_material,0) vl
			from	material_atend_paciente a
			where	a.nr_interno_conta = nr_interno_conta_p
			and	exists (	select	1
					from	matpaci_imposto x
					where	x.nr_seq_matpaci = a.nr_sequencia
					and	x.pr_imposto > 0)) alias7;

		select	obter_atepacu_paciente(nr_atendimento_w,'P')
		into STRICT	nr_seq_atepacu_w
		;

		select	max(cd_setor_atendimento),
			max(dt_entrada_unidade)
		into STRICT	cd_setor_atendimento_w,
			dt_entrada_unidade_w
		from	atend_paciente_unidade
		where	nr_seq_interno = nr_seq_atepacu_w;

		select	max(cd_convenio_partic),
			max(cd_categoria_partic)
		into STRICT	cd_convenio_partic_w,
			cd_categoria_partic_w
		from	parametro_faturamento
		where	cd_estabelecimento = cd_estabelecimento_w;

		dt_procedimento_w := clock_timestamp();
		nr_interno_conta_sep_w := null;
		
		select max(pp.nr_sequencia)
		into STRICT max_sequence_w
		from procedimento_paciente pp , procedimento p
		where pp.nr_interno_conta=nr_interno_conta_p
		and pp.ie_origem_proced=15
		and pp.ie_origem_proced=p.ie_origem_proced
		and pp.cd_procedimento = p.cd_procedimento
		and p.ie_classificacao <> 3;

		select max(cd_procedimento), max(ie_origem_proced),max(coalesce(dt_conta, coalesce(dt_prescricao,dt_procedimento))),max(nr_seq_proc_interno), max(dt_procedimento)
		into STRICT cd_procedimento_w, ie_origem_proced_w,dt_conta_w,nr_seq_proc_interno_1_w, dt_proc_drg_edi_w
		from procedimento_paciente
		where nr_sequencia= max_sequence_w;
		
		begin
			select 	coalesce(min(dt_periodo_inicial),dt_procedimento_w),
					max(CASE WHEN ie_status_acerto=1 THEN coalesce(dt_conta_definitiva,clock_timestamp())  ELSE coalesce(dt_conta_definitiva,dt_conta_w) END ),
					max(dt_periodo_inicial),
					max(dt_periodo_final)
			into STRICT	dt_procedimento_w,
					dt_conta_definitiva_w,
					dt_periodo_inicial_w,
					dt_periodo_final_w
			from 	conta_paciente
			where 	nr_interno_conta = nr_interno_conta_p;
		exception
    	when others then
			dt_conta_definitiva_w:= dt_conta_w;
			dt_periodo_inicial_w	:= clock_timestamp();
			dt_periodo_final_w	:= clock_timestamp();
		end;

/* Getting DRG edition and DRG Configuration data*/

		select	max(nr_seq_edition)
		into STRICT	nr_seq_edition_w
		from	health_fund_drg
		where	cd_health_fund = cd_convenio_parametro_w
		and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_proc_drg_edi_w) between ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(coalesce(dt_start_validity,clock_timestamp())) and ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(coalesce(dt_end_validity,clock_timestamp()))
		and 	cd_estabelecimento = cd_estabelecimento_w;

    select ie_tipo_atendimento,
          ie_clinica,
          dt_entrada,
          coalesce(obter_dado_atend_cat_conv(nr_atendimento_w, dt_conta_w, cd_convenio_parametro_w, cd_categoria_parametro_w, 'P'), obter_dado_atend_conv(nr_atendimento_w, dt_conta_w, cd_convenio_parametro_w, 'P'))
    into STRICT  ie_tipo_atendimento_w,
          ie_clinica_w,
          dt_entrada_w,
          cd_plano_w
    from  atendimento_paciente
    where nr_atendimento 	= nr_atendimento_w;

		select	coalesce(max(ie_tipo_convenio),0),
				max(ie_classif_contabil)
        into STRICT	ie_tipo_convenio_aux2_w,
				ie_classif_convenio_w
        from	convenio
        where	cd_convenio	= cd_convenio_parametro_w;

		SELECT 	MAX(coalesce(Grava_log_calculo_pck.get_ie_gravar_log,'N'))
		INTO STRICT	ie_gravar_log_w
		;

		if (ie_gravar_log_w = 'S') and (coalesce(max_sequence_w,0) > 0) then
			delete  from procedimento_log_calculo
			where nr_seq_propaci = max_sequence_w;
		end if;

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
		 '1 - Insurance Name: ' || obter_nome_convenio(cd_convenio_parametro_w) || ' Insurance code: ' || cd_convenio_parametro_w || ' Edition selected is ' || nr_seq_edition_w || ' Procedure date: '
 || dt_procedimento_w || ' Seq: ' || max_sequence_w,  ie_gravar_log_w);

		select max(cd_procedimento_loc)
		into STRICT cd_proc_loc_w
		from procedimento
		where cd_procedimento=cd_procedimento_w
		and ie_origem_proced= ie_origem_proced_w;
		
		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
		 '1.1 - Procedure code: '
 || cd_proc_loc_w || ' Edition selected is ' || nr_seq_edition_w ,  ie_gravar_log_w);

		if (ie_separacao_conta_p = 'S') then
			nr_interno_conta_sep_w := nr_interno_conta_p;
		end if;

		select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
		into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
		from atend_paciente_unidade a, atend_categoria_convenio b
		where a.nr_atendimento=nr_atendimento_w
		and a.nr_atendimento=b.nr_atendimento
		and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
		and b.cd_convenio = cd_convenio_parametro_w
		and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
		and exists (SELECT 1
					from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
					where c.cd_setor_atendimento = a.cd_setor_atendimento
					and c.cd_unidade_basica= a.cd_unidade_basica
					and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
					and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
					and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
					and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
					and e.cd_convenio=b.cd_convenio )
		and a.DT_ENTRADA_UNIDADE >= dt_procedimento_w -1;

        qt_days_in_unit_w := trunc(coalesce(dt_pric_acc_ext_w,dt_priv_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_acc_ent_w) + (1/24*60*60));


		if (coalesce(nr_seq_edition_w,0) > 0) then


			select round(((Obter_data_alta_Atend(nr_atendimento_w) - obter_data_entrada(nr_atendimento_w))* 24),2)
			into STRICT qt_horas_int_w
			;

			qt_total_days_w := Obter_Dias_Internacao_drg(nr_atendimento_w);
			
			if (qt_total_days_w=0)then
				qt_total_days_w := Obter_Dias_Internacao(nr_atendimento_w);
			end if;

			qt_days_in_icu_w := obter_total_dias_intern_uti(nr_atendimento_w);

			qt_days_in_icu_cat_a_w := obter_qt_In_care_interv(nr_atendimento_w, clock_timestamp(), 'A');

			qt_days_in_icu_cat_b_w := obter_qt_In_care_interv(nr_atendimento_w, clock_timestamp(), 'B');

			qt_days_in_icu_cat_c_w := obter_qt_In_care_interv(nr_atendimento_w, clock_timestamp(), 'C');

			qt_days_not_in_icu_cat_a_w  := qt_days_in_icu_w - qt_days_in_icu_cat_a_w;

			qt_days_not_in_icu_w:= GET_PRIVATE_DAYS_COUNT(nr_atendimento_w,cd_convenio_parametro_w, cd_categoria_parametro_w);
			CALL processar_conta_drg_aus_pck.set_qt_dias_not_icu(qt_days_not_in_icu_w);

			qt_days_priv_share_w := qt_total_days_w - coalesce(obter_dias_intern_uti_drg(nr_atendimento_w),0);
			CALL processar_conta_drg_aus_pck.set_qt_days_for_priv_share(qt_days_priv_share_w);
			
			if (qt_days_in_icu_w > 0) then
				ie_icu_top_up_rate_w:='S';
			end if;

			if (qt_days_not_in_icu_w > 0) then
				ie_private_room_add_on_w:='S';
			end if;
			
			select	a.dt_alta
			into STRICT  	dt_alta_preco_w
			from 	pessoa_fisica b,
				atendimento_paciente a
			where 	a.nr_atendimento 	= nr_atendimento_w
			and	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;
			
			dt_agenda_integrada_w:= dt_conta_w;
			
			select	obter_regra_data_preco('P',cd_convenio_parametro_w, dt_entrada_w, dt_conta_w, dt_alta_preco_w, dt_conta_definitiva_w, dt_agenda_integrada_w, dt_periodo_inicial_w, dt_periodo_final_w)
			into STRICT	dt_preco_w
			;

			CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
															'1.2 - Price date used: ' || dt_preco_w, ie_gravar_log_w);

			select count(*)
			into STRICT ie_drg_proc_exist_w
			from	drg_procedimento
			where	cd_procedimento = cd_procedimento_w
			and 	nr_seq_edition = nr_seq_edition_w
			and cd_drg = cd_proc_loc_w
			and ie_situacao='A';

			if (ie_drg_proc_exist_w = 0) then
				update procedimento_paciente
				set vl_procedimento = 0,
					vl_custo_operacional = 0,
					ie_tiss_tipo_despesa = 'F'
				where nr_sequencia = max_sequence_w
				and nr_atendimento = nr_atendimento_w;

				select	max(cd_motivo_exc_conta)
				into STRICT	cd_motivo_exc_conta_w
				from	parametro_faturamento
				where	cd_estabelecimento	= cd_estabelecimento_p;


				select count(*)
				into STRICT qt_proc_linked_with_drg_w
				from procedimento_paciente pp , procedimento p
				where pp.nr_interno_conta = nr_interno_conta_p
				and pp.ie_origem_proced<>15
				and pp.ie_origem_proced=p.ie_origem_proced
				and pp.cd_procedimento = p.cd_procedimento
				and p.ie_classificacao=3
				and pp.ds_observacao like '%Day%@%$%'
				and coalesce(cd_motivo_exc_conta::text, '') = '';

				if (qt_proc_linked_with_drg_w > 0)then

					update procedimento_paciente
					set cd_motivo_exc_conta = cd_motivo_exc_conta_w
					where nr_interno_conta = nr_interno_conta_p
					and coalesce(cd_motivo_exc_conta::text, '') = ''
					and nr_sequencia in (
					SELECT nr_sequencia
					from procedimento_paciente pp , procedimento p
					where pp.nr_interno_conta = nr_interno_conta_p
					and pp.ie_origem_proced<>15
					and pp.ie_origem_proced=p.ie_origem_proced
					and pp.cd_procedimento = p.cd_procedimento
					and p.ie_classificacao=3
					and pp.ds_observacao like '%Day%@%$%'
					and coalesce(cd_motivo_exc_conta::text, '') = '');

				end if;

				CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
				'2 - Setting ie_private_room_add_on_w and ie_icu_top_up_rate_w to N ' || max_sequence_w, ie_gravar_log_w);
				
				ie_private_room_add_on_w:= 'N';
				ie_icu_top_up_rate_w:= 'N';
				
				CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
				'3 - Opening cursor c03 -- 1. DRG sequence ' || max_sequence_w, ie_gravar_log_w);


				open c03;
					loop
						fetch	c03
						into	nr_sequencia_ww,
								cd_estabelecimento_ww,
								ie_tipo_calculo_ww,
								cd_proc_calculo_ww,
								ie_origem_proc_calculo_ww,
								qt_min_hours_ww,
								qt_max_hours_ww,
								ds_calculo_ww,
								ds_calculo_days_ww;
						EXIT WHEN NOT FOUND; /* apply on c03 */
							begin

							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													'3 - Seq: '|| nr_sequencia_ww || chr(10)||chr(13)||
													' Calc: '|| ie_tipo_calculo_ww || chr(10)||chr(13)||
													' Proc: '|| cd_proc_calculo_ww || chr(10)||chr(13)||
													' Origin: '|| ie_origem_proc_calculo_ww || chr(10)||chr(13)||
													' Rule: '|| ds_calculo_ww || chr(10)||chr(13)||
													' Min hrs: '|| qt_min_hours_ww || chr(10)||chr(13)||
													' Max hrs: '|| qt_max_hours_ww|| chr(10)||chr(13)||
													' qt_days_priv_share_w '||qt_days_priv_share_w,															
													ie_gravar_log_w);

								CALL processar_conta_drg_aus_macro(ds_calculo_ww,ds_calculo_days_ww, 'P');

								if (ds_calculo_ww IS NOT NULL AND ds_calculo_ww::text <> '')then

							if (position('@SAMEDAY_CASE_LT' in ds_calculo_ww)>0)then
								update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs,
									vl_custo_operacional = 	processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c3End;
							elsif (position('@SAMEDAY_CASE_GT' in ds_calculo_ww)>0)then
								 update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs,
									vl_custo_operacional = 	processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c3End;
							end if;
								qt_procedimento_ww := 	case
														when position('@DAYS_SPENT_IN_ICU_CATEGORY_A' in ds_calculo_ww)>0
														then qt_days_in_icu_cat_a_w
														when position('@DAYS_SPENT_IN_ICU_CATEGORY_B' in ds_calculo_ww)>0
														then qt_days_in_icu_cat_b_w
														when position('@DAYS_SPENT_IN_ICU_CATEGORY_C' in ds_calculo_ww)>0
														then qt_days_in_icu_cat_c_w
														when position('@DAYS_IN_NON_ICU_DEPARTMENT' in ds_calculo_ww)>0
														then case when ie_tipo_calculo_ww='ADDON' then qt_days_not_in_icu_w when ie_tipo_calculo_ww='DRGIN' then qt_days_priv_share_w else null end
														when position('@HOURS_SPENT_IN_HOSP' in ds_calculo_ww)>0
														then qt_horas_int_w
														when position('@DAYS_SPENT_IN_HOSPITAL' in ds_calculo_ww)>0
														then qt_total_days_w
														when position('@DAYS_SPENT_IN_ICU' in ds_calculo_ww)>0
														then qt_days_in_icu_w
														when position('@DAYS_NOT_SPENT_IN_ICU_CAT_A' in ds_calculo_ww)>0
														then qt_days_not_in_icu_cat_a_w
														when position('@DAYS_EXCEED_IN_TIER3' in ds_calculo_ww)>0
														then qt_days_exceeds_tier3_w
														when position('@DAYS_EXCEED_IN_TIER2' in ds_calculo_ww)>0
														then qt_days_exceeds_tier2_w
														when position('@DAYS_EXCEED_IN_TIER1' in ds_calculo_ww)>0
														then qt_days_exceeds_tier1_w
														when position('@TOTAL_DAYS_IN_TIER1' in ds_calculo_ww)>0
														then qt_days_in_tier1_w
														when position('@TOTAL_DAYS_IN_TIER2' in ds_calculo_ww)>0
														then qt_days_in_tier2_w
														end;
								end if;

								if ( coalesce(qt_procedimento_ww::text, '') = '' ) then
								  qt_procedimento_ww := 1;
								end if;

								if (coalesce(max_dt_proc_ww::text, '') = '') then
									max_dt_proc_w:=null;
									max_dt_proc_ww := coalesce(max_dt_proc_w, dt_procedimento_w+1);
								end if;

								qt_temp_w := coalesce(qt_temp_w, dt_procedimento_w+1); --temporary saving date
								qt_temp_priv_w := null; --temporary saving date
								qt_temp_priv_sh_w := null; --temporary saving date
						
								if (ie_tipo_calculo_ww='ADDON')then
						
									if (qt_days_in_unit_w=0)then
										select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
										into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
										from atend_paciente_unidade a, atend_categoria_convenio b
										where a.nr_atendimento=nr_atendimento_w
										and a.nr_atendimento=b.nr_atendimento
										and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
										and b.cd_convenio = cd_convenio_parametro_w
										and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
										and exists (SELECT 1
													from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
													where c.cd_setor_atendimento = a.cd_setor_atendimento
													and c.cd_unidade_basica= a.cd_unidade_basica
													and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
													and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
													and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
													and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
													and e.cd_convenio=b.cd_convenio )
										and a.DT_ENTRADA_UNIDADE >= dt_priv_acc_ent_w+1;
										
										qt_days_in_unit_w := trunc(coalesce(dt_pric_acc_ext_w,dt_priv_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_acc_ent_w) + (1/24*60*60));
									end if;
							
									max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w,dt_procedimento_w);
									qt_temp_priv_w := max_dt_proc_priv_ww;
								end if;

								if (ie_tipo_calculo_ww='DRGIN')then

									select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
									into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
									from atend_paciente_unidade a, atend_categoria_convenio b
									where a.nr_atendimento=nr_atendimento_w
									and a.nr_atendimento=b.nr_atendimento
									and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
									and b.cd_convenio = cd_convenio_parametro_w
									and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
									and exists (SELECT 1
												from unidade_atendimento c, tipo_acomodacao d
												where c.cd_setor_atendimento = a.cd_setor_atendimento
												and c.cd_unidade_basica= a.cd_unidade_basica
												and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
												and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
												and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
												and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
									and a.DT_ENTRADA_UNIDADE >= dt_procedimento_w -1;

									qt_days_in_priv_sh_unit_w := trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));

									while qt_days_in_priv_sh_unit_w=0
									loop
										select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
										into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
										from atend_paciente_unidade a, atend_categoria_convenio b
										where a.nr_atendimento=nr_atendimento_w
										and a.nr_atendimento=b.nr_atendimento
										and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
										and b.cd_convenio = cd_convenio_parametro_w
										and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
										and exists (SELECT 1
													from unidade_atendimento c, tipo_acomodacao d
													where c.cd_setor_atendimento = a.cd_setor_atendimento
													and c.cd_unidade_basica= a.cd_unidade_basica
													and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
													and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
													and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
													and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
										and a.DT_ENTRADA_UNIDADE >= dt_priv_sh_acc_ent_w +1/(24*60*60);

										qt_days_in_priv_sh_unit_w := trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));

											if ( coalesce(dt_priv_sh_acc_ent_w::text, '') = '' and coalesce(dt_pric_sh_acc_ext_w::text, '') = '' and coalesce(nr_seq_interno_priv_sh_w::text, '') = '') then
												goto c3End;
											end if;
										exit when qt_days_in_priv_sh_unit_w > 0;
									end loop;
									
									max_dt_proc_priv_sh_ww := coalesce(dt_priv_sh_acc_ent_w,dt_procedimento_w);
									qt_temp_priv_sh_w := max_dt_proc_priv_sh_ww;
								end if;
						
								for j in 1..qt_procedimento_ww
								loop


								if (ie_tipo_calculo_ww='ADDON')then
									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
															'4.0 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
															' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
															' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
															' j: '|| j|| chr(10)||chr(13)||
															' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);

									if ((dt_priv_acc_ent_w IS NOT NULL AND dt_priv_acc_ent_w::text <> '') and (dt_pric_acc_ext_w IS NOT NULL AND dt_pric_acc_ext_w::text <> '') and qt_days_in_unit_w<j ) then

										select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
										into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
										from atend_paciente_unidade a, atend_categoria_convenio b
										where a.nr_atendimento=nr_atendimento_w
										and a.nr_atendimento=b.nr_atendimento
										and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
										and b.cd_convenio = cd_convenio_parametro_w
										and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
										and exists (	SELECT 1
													from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
													where c.cd_setor_atendimento = a.cd_setor_atendimento
													and c.cd_unidade_basica= a.cd_unidade_basica
													and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
													and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
													and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
													and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
													and e.cd_convenio=b.cd_convenio )
										and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.DT_ENTRADA_UNIDADE) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_ww);


										qt_days_in_unit_w := qt_days_in_unit_w + trunc(coalesce(dt_pric_acc_ext_w,dt_priv_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_acc_ent_w) + (1/24*60*60));
										max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w, max_dt_proc_priv_ww);

										CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
																' 4 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
																' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
																' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
																' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);
									end if;
								end if;
								
								if (ie_tipo_calculo_ww='DRGIN')then
									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
														'13.0 - Priv_Share Acc Entry date: ' || dt_priv_sh_acc_ent_w|| chr(10)||chr(13)||
																' Priv_Share Acc Exit date: '|| dt_pric_sh_acc_ext_w|| chr(10)||chr(13)||
																' Days In Unit: '|| qt_days_in_priv_sh_unit_w|| chr(10)||chr(13)||
																' j: '|| j|| chr(10)||chr(13)||
																' Inserted Date: '|| max_dt_proc_priv_sh_ww , ie_gravar_log_w);
									if ((dt_priv_sh_acc_ent_w IS NOT NULL AND dt_priv_sh_acc_ent_w::text <> '') and (dt_pric_sh_acc_ext_w IS NOT NULL AND dt_pric_sh_acc_ext_w::text <> '') and qt_days_in_priv_sh_unit_w<j ) then
									select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
									into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
									from atend_paciente_unidade a, atend_categoria_convenio b
									where a.nr_atendimento=nr_atendimento_w
									and a.nr_atendimento=b.nr_atendimento
									and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
									and b.cd_convenio = cd_convenio_parametro_w
									and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
									and exists (SELECT 1
									from unidade_atendimento c, tipo_acomodacao d
									where c.cd_setor_atendimento = a.cd_setor_atendimento
									and c.cd_unidade_basica= a.cd_unidade_basica
									and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
									and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
									and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
									and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
									and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.DT_ENTRADA_UNIDADE) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_sh_ww);


									qt_days_in_priv_sh_unit_w := qt_days_in_priv_sh_unit_w +  trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));
									max_dt_proc_priv_sh_ww := coalesce(dt_priv_sh_acc_ent_w, max_dt_proc_priv_sh_ww);

									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
														'13 - Priv share Acc Entry date: ' || dt_priv_sh_acc_ent_w|| chr(10)||chr(13)||
																' Priv share Acc Exit date: '|| dt_pric_sh_acc_ext_w|| chr(10)||chr(13)||
																' Days In Unit: '|| qt_days_in_priv_sh_unit_w|| chr(10)||chr(13)||
																' Inserted Date: '|| max_dt_proc_priv_sh_ww , ie_gravar_log_w);
									end if;
								end if;

									if (ie_tipo_calculo_ww='ADDON')then
										select 	max(nr_seq_interno)
										into STRICT 	nr_seq_interno_ww
										from 	atend_paciente_unidade
										where 	nr_atendimento= nr_atendimento_w
										and 	nr_seq_interno = nr_seq_interno_priv_w
										and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_ww);
									elsif (ie_tipo_calculo_ww='DRGIN')then
										select 	max(nr_seq_interno)
										into STRICT 	nr_seq_interno_ww
										from 	atend_paciente_unidade
										where 	nr_atendimento= nr_atendimento_w
										and nr_seq_interno = nr_seq_interno_priv_sh_w
										and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_sh_ww);
									else
										select 	max(nr_seq_interno)
										into STRICT 	nr_seq_interno_ww
										from 	atend_paciente_unidade
										where 	nr_atendimento= nr_atendimento_w
										and 	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww);
									end if;

									select	max(cd_setor_atendimento),
											max(dt_entrada_unidade),
											max(dt_saida_unidade)
									into STRICT	cd_setor_atendimento_ww,
											dt_entrada_unidade_ww,
											dt_saida_unidade_ww
									from	atend_paciente_unidade
									where	nr_seq_interno = nr_seq_interno_ww;
									
									qt_days_in_non_priv_unit_w := trunc(coalesce(dt_saida_unidade_ww,dt_entrada_unidade_ww) + (1/24*60*60)) - trunc((dt_entrada_unidade_ww) + (1/24*60*60));

									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 13.5 - dt_entrada_unidade_ww: ' || dt_entrada_unidade_ww || ' for cd_setor_atendimento_ww ' || cd_setor_atendimento_ww || chr(10)||chr(13)||
													' dt_saida_unidade_ww: ' || dt_saida_unidade_ww ||chr(10)||chr(13)||
													' qt_days_in_non_priv_unit_w ' || qt_days_in_non_priv_unit_w ||chr(10)||chr(13)||
													'qt_temp_w '|| qt_temp_w ,ie_gravar_log_w);

									cd_classif_setor_ww := obter_classif_setor(cd_setor_atendimento_ww);

									cd_tipo_acomodacao_w:= obter_tipo_acomod_setor(nr_atendimento_w,cd_setor_atendimento_ww, nr_seq_interno_ww, dt_entrada_unidade_ww);

									cd_tipo_class_acomo_w := obter_classif_tipo_acomod(cd_tipo_acomodacao_w);
								begin
									select cd_proc,ie_origem_proc,cd_proc_loc
									into STRICT     cd_procedimento_final_w,
											ie_origem_proced_final_w,
											cd_procedimento_loc_ww
									from (SELECT '1' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
									coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
									coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
									FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and ((b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww = 4)
									or (b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww <> 4))
									
union all

									SELECT '2' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
									coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
									coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
									FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and coalesce(b.cd_proc_category::text, '') = ''
									 
union all

									select '3' ord,max(a.cd_proc_calculo) cd_proc,
									max(a.ie_origem_proc_calculo) ie_origem_proc,
									max(a.cd_proc_calculo_loc) cd_proc_loc
									FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and (a.CD_PROC_CALCULO IS NOT NULL AND a.CD_PROC_CALCULO::text <> '') order by ord, cd_proc nulls last) alias26
									where (cd_proc IS NOT NULL AND cd_proc::text <> '')  LIMIT 1;
								exception when others then
										CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																		';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																		';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));
								end;

									if (coalesce(cd_procedimento_final_w::text, '') = '' and coalesce(ie_origem_proced_final_w::text, '') = '' and coalesce(cd_procedimento_loc_ww::text, '') = '')then
										CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																				';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																				';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));
									end if;

									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 5 - Procedure selected is '
 || cd_procedimento_final_w || ' for Origin ' || ie_origem_proced_final_w || chr(10)||chr(13)||
													' Procedure code is '
 || cd_procedimento_loc_ww ,ie_gravar_log_w);

									SELECT * FROM define_conta_procedimento(
										cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_parametro_w, cd_categoria_parametro_w, dt_entrada_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, null, null, null, null, null, null, null, null, nr_seq_proc_interno_1_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

										CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 6 - cd_conta_contabil_w is ' || cd_conta_contabil_w || ' cd_centro_custo_w ' || cd_centro_custo_w  ,ie_gravar_log_w);



									select	nextval('procedimento_paciente_seq')
									into STRICT	nr_seq_propaci_w
									;

									insert into procedimento_paciente(nr_sequencia,
												cd_procedimento,
												ie_origem_proced,
												qt_procedimento,
												ie_valor_informado,
												vl_procedimento,
												nr_seq_proc_princ,
												dt_entrada_unidade,
												cd_setor_atendimento,
												nr_seq_atepacu,
												nr_atendimento,
												dt_procedimento,
												dt_conta,
												dt_atualizacao,
												nm_usuario,
												cd_convenio,
												vl_medico,
												vl_anestesista,
												vl_materiais,
												vl_auxiliares,
												vl_custo_operacional,
												ie_auditoria,
												cd_categoria,
												nr_interno_conta,
												ds_observacao,
												nr_seq_proc_orig,
												cd_conta_contabil)
									values	(	nr_seq_propaci_w,					-- nr_sequencia
												cd_procedimento_final_w,			-- cd_procedimento
												ie_origem_proced_final_w,			-- ie_origem_proced
												1,									-- qt_procedimento
												'S',								-- ie_valor_informado
												(processar_conta_drg_aus_pck.get_vl_procedimento)/qt_procedimento_ww,   -- vl_procedimento
												null,								-- nr_seq_proc_princ
												dt_entrada_unidade_ww,				-- dt_entrada_unidade
												cd_setor_atendimento_ww,			-- cd_setor_atendimento
												nr_seq_interno_ww,					-- nr_seq_atepacu
												nr_atendimento_w,					-- nr_atendimento
												case when ie_tipo_calculo_ww='ADDON' then max_dt_proc_priv_ww when ie_tipo_calculo_ww='DRGIN' then max_dt_proc_priv_sh_ww else max_dt_proc_ww end ,--nvl(max_dt_proc_priv_ww,max_dt_proc_ww), 					-- dt_procedimento
												case when ie_tipo_calculo_ww='ADDON' then max_dt_proc_priv_ww when ie_tipo_calculo_ww='DRGIN' then max_dt_proc_priv_sh_ww else max_dt_proc_ww end ,
												clock_timestamp(),							-- dt_atualizacao
												nm_usuario_p,						-- nm_usuario
												cd_convenio_parametro_w,			-- cd_convenio
												0,									-- vl_medico
												0,									-- vl_anestesista
												0,									-- vl_materiais
												0,									-- vl_auxiliares
												0,									-- vl_custo_operacional
												'N',								-- ie_auditoria
												cd_categoria_parametro_w,			-- cd_categoria
												nr_interno_conta_sep_w,				-- nr_interno_conta
												obter_desc_procedimento(cd_procedimento_final_w,ie_origem_proced_final_w) || ' ' ||
													case when ie_tipo_calculo_ww='ADDON' then dt_priv_acc_ent_w when ie_tipo_calculo_ww='DRGIN' then dt_priv_sh_acc_ent_w																						
														else qt_temp_w end || ' - ' ||
													case  when ie_tipo_calculo_ww='ADDON' then dt_pric_acc_ext_w-1 when ie_tipo_calculo_ww='DRGIN' then dt_pric_sh_acc_ext_w-1																
														else qt_temp_w + coalesce(qt_procedimento_ww,0)-1 end||' ' ||
													case when ie_tipo_calculo_ww='ADDON' then qt_days_in_non_priv_unit_w when ie_tipo_calculo_ww='DRGIN' then qt_days_in_non_priv_unit_w																
														else coalesce(qt_procedimento_ww,coalesce(qt_days_in_non_priv_unit_w,1)) end||
													' Days @ $'||(processar_conta_drg_aus_pck.get_vl_procedimento)/qt_procedimento_ww,  -- ds_observacao
												max_sequence_w, 						-- nr_seq_proc_orig
												cd_conta_contabil_w
												);

										if (ie_tipo_calculo_ww<>'ADDON' and ie_tipo_calculo_ww<>'DRGIN')then
											max_dt_proc_w := max_dt_proc_ww + 1;
											max_dt_proc_ww:= max_dt_proc_ww + 1;
										elsif (ie_tipo_calculo_ww='ADDON') then
											if (nr_seq_interno_priv_w = nr_seq_interno_ww) then
												max_dt_proc_priv_ww:= max_dt_proc_priv_ww + 1;
											end if;
											max_dt_proc_priv_ww:= max_dt_proc_priv_ww + 1;
										elsif (ie_tipo_calculo_ww='DRGIN') then
											if (nr_seq_interno_priv_sh_w = nr_seq_interno_ww) then
												max_dt_proc_priv_sh_ww:= max_dt_proc_priv_sh_ww + 1;
											end if;
											max_dt_proc_priv_sh_ww:= max_dt_proc_priv_sh_ww + 1;
										end if;								   																			   																										 											  															  			


										select	max(nr_interno_conta)
										into STRICT	nr_interno_conta_dest_w
										from	procedimento_paciente
										where	nr_sequencia = nr_seq_propaci_w;

										select	nextval('conta_log_processamento_seq')
										into STRICT	nr_seq_conta_log_proc_w
										;

										insert into conta_log_processamento(
													nr_sequencia,
													nm_usuario,
													dt_atualizacao,
													nm_usuario_nrec,
													dt_atualizacao_nrec,
													nr_atendimento,
													nr_seq_item,
													nr_interno_conta,
													nr_interno_conta_base)
										values (
													nr_seq_conta_log_proc_w,			-- nr_sequencia
													nm_usuario_p,						-- nm_usuario
													clock_timestamp(),							-- dt_atualizacao
													nm_usuario_p,						-- nm_usuario_nrec
													clock_timestamp(),							-- dt_atualizacao_nrec
													nr_atendimento_w,					-- nr_atendimento
													nr_seq_propaci_w,					-- nr_seq_item
													nr_interno_conta_dest_w,			-- nr_interno_conta
													nr_interno_conta_p					-- nr_interno_conta_base
												);

								end loop;

								if (ie_tipo_calculo_ww<>'ADDON')then
									qt_temp_w:=(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(qt_temp_w) + trunc(qt_procedimento_ww));
								end if;

								max_dt_proc_priv_ww:= null;

								<<c3End>>
								null;
							end;
					end loop;
				close c03;
				CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
										' 5 - Returning from procedure ', ie_gravar_log_w);
				return;
			end if;
			
			select	max(qt_estadia_min),
					max(qt_estadia_max),
					max(vl_inlier_rate),
					max(vl_sso_benefit),
					max(vl_lso_benefit),
					max(vl_icu_sso),
					max(vl_trnfr_dscnt),
					max(qt_tnsfr_pt),
					max(qt_estedia_min_tier2),
					max(qt_estedia_max_tier2),
					max(vl_inlier_rate_tier2),
					max(qt_estedia_min_tier3),
					max(qt_estedia_max_tier3),
					max(vl_inlier_rate_tier3),
					max(vl_rate_lt_6_hrs),
					max(vl_rate_gt_6_hrs),
					max(vl_overnight_flagfall),
					max(vl_overnight_flagfall_mv),
					max(vl_proc_only_fee),
					max(cd_drg_category),
					max(vl_same_day_weight),
					max(vl_same_day_rate),
					max(vl_short_diem_weight),
					max(vl_inlier_weight),
					max(vl_long_diem_weight)
			into STRICT	qt_estadia_min_w,
					qt_estadia_max_w,
					vl_inlier_rate_w,
					vl_sso_benefit_w,
					vl_lso_benefit_w,
					vl_icu_sso_w,
					vl_trnfr_dscnt_w,
					qt_tnsfr_pt_w,
					qt_estedia_min_tier2_w,
					qt_estedia_max_tier2_w,
					vl_inlier_rate_tier2_w,
					qt_estedia_min_tier3_w,
					qt_estedia_max_tier3_w,
					vl_inlier_rate_tier3_w,
					vl_rate_lt_6_hrs_w,
					vl_rate_gt_6_hrs_w,
					vl_overnight_flagfall_w,
					vl_overnight_flagfall_mv_w,
					vl_proc_only_fee_w,
					cd_drg_category_w,
					vl_same_day_weight_w,
					vl_same_day_rate_w,
					vl_short_diem_weight_w,
					vl_inlier_weight_w,
					vl_long_diem_weight_w
			from	drg_procedimento
			where	cd_procedimento = cd_procedimento_w
			and 	nr_seq_edition = nr_seq_edition_w
			and 	ie_situacao='A';

			if ( coalesce(vl_inlier_rate_w,0)=0 and coalesce(qt_estadia_min_w,0)=0 and coalesce(qt_estadia_max_w,0)=0
			and coalesce(vl_rate_lt_6_hrs_w,0)=0 and coalesce(vl_rate_gt_6_hrs_w,0)=0 and coalesce(vl_proc_only_fee_w,0)=0
			and coalesce(vl_overnight_flagfall_w,0)=0) then

				update procedimento_paciente
				set vl_procedimento = 0,
					vl_custo_operacional=0,
					ie_tiss_tipo_despesa = 'F'
				where nr_sequencia = max_sequence_w
				and nr_atendimento = nr_atendimento_w;

				select	max(cd_motivo_exc_conta)
				into STRICT	cd_motivo_exc_conta_w
				from	parametro_faturamento
				where	cd_estabelecimento	= cd_estabelecimento_p;

				select count(*)
				into STRICT qt_proc_linked_with_drg_w
				from procedimento_paciente pp , procedimento p
				where pp.nr_interno_conta = nr_interno_conta_p
				and pp.ie_origem_proced<>15
				and pp.ie_origem_proced=p.ie_origem_proced
				and pp.cd_procedimento = p.cd_procedimento
				and p.ie_classificacao=3
				and pp.ds_observacao like '%Day%@%$%'
				and coalesce(cd_motivo_exc_conta::text, '') = '';

				if (qt_proc_linked_with_drg_w > 0)then

					update procedimento_paciente
					set cd_motivo_exc_conta = cd_motivo_exc_conta_w
					where nr_interno_conta = nr_interno_conta_p
					and coalesce(cd_motivo_exc_conta::text, '') = ''
					and nr_sequencia in (
					SELECT nr_sequencia
					from procedimento_paciente pp , procedimento p
					where pp.nr_interno_conta = nr_interno_conta_p
					and pp.ie_origem_proced<>15
					and pp.ie_origem_proced=p.ie_origem_proced
					and pp.cd_procedimento = p.cd_procedimento
					and p.ie_classificacao=3
					and pp.ds_observacao like '%Day%@%$%'
					and coalesce(cd_motivo_exc_conta::text, '') = '');

				end if;
				CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
				'2 - Setting ie_private_room_add_on_w and ie_icu_top_up_rate_w to N ' || max_sequence_w, ie_gravar_log_w);
				
				ie_private_room_add_on_w:= 'N';
				ie_icu_top_up_rate_w:= 'N';																													
				CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
									'3 - Opening cursor c03 -- 2. DRG sequence ' || max_sequence_w, ie_gravar_log_w);
				open c03;
					loop
						fetch	c03
						into	nr_sequencia_ww,
								cd_estabelecimento_ww,
								ie_tipo_calculo_ww,
								cd_proc_calculo_ww,
								ie_origem_proc_calculo_ww,
								qt_min_hours_ww,
								qt_max_hours_ww,
								ds_calculo_ww,
								ds_calculo_days_ww;
						EXIT WHEN NOT FOUND; /* apply on c03 */
							begin

							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
												' 3 - Seq: '|| nr_sequencia_ww || chr(10)||chr(13)||
												' Calc: '|| ie_tipo_calculo_ww || chr(10)||chr(13)||
												' Proc: '|| cd_proc_calculo_ww || chr(10)||chr(13)||
												' Origin: '|| ie_origem_proc_calculo_ww || chr(10)||chr(13)||
												' Rule: '|| ds_calculo_ww || chr(10)||chr(13)||
												' Min hrs: '|| qt_min_hours_ww || chr(10)||chr(13)||
												' Max hrs: '|| qt_max_hours_ww,
												ie_gravar_log_w);

								CALL processar_conta_drg_aus_macro(ds_calculo_ww,ds_calculo_days_ww, 'P');

								if (ds_calculo_ww IS NOT NULL AND ds_calculo_ww::text <> '')then

							if (position('@SAMEDAY_CASE_LT' in ds_calculo_ww)>0)then
								update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs,
									vl_custo_operacional = processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c32End;
							elsif (position('@SAMEDAY_CASE_GT' in ds_calculo_ww)>0)then
								update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs,
									vl_custo_operacional = processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c32End;
							end if;
							
								qt_procedimento_ww := 	case
														when position('@DAYS_SPENT_IN_ICU_CATEGORY_A' in ds_calculo_ww)>0
														then qt_days_in_icu_cat_a_w
														when position('@DAYS_SPENT_IN_ICU_CATEGORY_B' in ds_calculo_ww)>0
														then qt_days_in_icu_cat_b_w
														when position('@DAYS_SPENT_IN_ICU_CATEGORY_C' in ds_calculo_ww)>0
														then qt_days_in_icu_cat_c_w
														when position('@DAYS_IN_NON_ICU_DEPARTMENT' in ds_calculo_ww)>0
														then case when ie_tipo_calculo_ww='ADDON' then qt_days_not_in_icu_w when ie_tipo_calculo_ww='DRGIN' then qt_days_priv_share_w else null end
														when position('@HOURS_SPENT_IN_HOSP' in ds_calculo_ww)>0
														then qt_horas_int_w
														when position('@DAYS_SPENT_IN_HOSPITAL' in ds_calculo_ww)>0
														then qt_total_days_w
														when position('@DAYS_SPENT_IN_ICU' in ds_calculo_ww)>0
														then qt_days_in_icu_w
														when position('@DAYS_NOT_SPENT_IN_ICU_CAT_A' in ds_calculo_ww)>0
														then qt_days_not_in_icu_cat_a_w
														when position('@DAYS_EXCEED_IN_TIER3' in ds_calculo_ww)>0
														then qt_days_exceeds_tier3_w
														when position('@DAYS_EXCEED_IN_TIER2' in ds_calculo_ww)>0
														then qt_days_exceeds_tier2_w
														when position('@DAYS_EXCEED_IN_TIER1' in ds_calculo_ww)>0
														then qt_days_exceeds_tier1_w
														when position('@TOTAL_DAYS_IN_TIER1' in ds_calculo_ww)>0
														then qt_days_in_tier1_w
														when position('@TOTAL_DAYS_IN_TIER2' in ds_calculo_ww)>0
														then qt_days_in_tier2_w
														end;
								end if;

								if ( coalesce(qt_procedimento_ww::text, '') = '' ) then
								  qt_procedimento_ww := 1;
								end if;

								if (coalesce(max_dt_proc_ww::text, '') = '') then
									max_dt_proc_w:=null;
									max_dt_proc_ww := coalesce(max_dt_proc_w, dt_procedimento_w+1);
								end if;



								qt_temp_w := coalesce(qt_temp_w, dt_procedimento_w+1); --temporary saving date
								qt_temp_priv_w := null; --temporary saving date
								qt_temp_priv_sh_w := null; --temporary saving date
								

								if (ie_tipo_calculo_ww='ADDON')then
						
									if (qt_days_in_unit_w=0)then
										select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
										into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
										from atend_paciente_unidade a, atend_categoria_convenio b
										where a.nr_atendimento=nr_atendimento_w
										and a.nr_atendimento=b.nr_atendimento
										and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
										and b.cd_convenio = cd_convenio_parametro_w
										and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
										and exists (SELECT 1
													from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
													where c.cd_setor_atendimento = a.cd_setor_atendimento
													and c.cd_unidade_basica= a.cd_unidade_basica
													and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
													and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
													and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
													and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
													and e.cd_convenio=b.cd_convenio )
										and a.DT_ENTRADA_UNIDADE >= dt_priv_acc_ent_w+1;
										
										qt_days_in_unit_w := trunc(coalesce(dt_pric_acc_ext_w,dt_priv_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_acc_ent_w) + (1/24*60*60));
									end if;
							
									max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w,dt_procedimento_w);
									qt_temp_priv_w := max_dt_proc_priv_ww;
								end if;
								
								if (ie_tipo_calculo_ww='DRGIN')then

									select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
									into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
									from atend_paciente_unidade a, atend_categoria_convenio b
									where a.nr_atendimento=nr_atendimento_w
									and a.nr_atendimento=b.nr_atendimento
									and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
									and b.cd_convenio = cd_convenio_parametro_w
									and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
									and exists (SELECT 1
												from unidade_atendimento c, tipo_acomodacao d
												where c.cd_setor_atendimento = a.cd_setor_atendimento
												and c.cd_unidade_basica= a.cd_unidade_basica
												and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
												and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
												and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
												and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
									and a.DT_ENTRADA_UNIDADE >= dt_procedimento_w -1;

									qt_days_in_priv_sh_unit_w := trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));

									while qt_days_in_priv_sh_unit_w=0
									loop
										select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
										into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
										from atend_paciente_unidade a, atend_categoria_convenio b
										where a.nr_atendimento=nr_atendimento_w
										and a.nr_atendimento=b.nr_atendimento
										and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
										and b.cd_convenio = cd_convenio_parametro_w
										and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
										and exists (SELECT 1
													from unidade_atendimento c, tipo_acomodacao d
													where c.cd_setor_atendimento = a.cd_setor_atendimento
													and c.cd_unidade_basica= a.cd_unidade_basica
													and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
													and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
													and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
													and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
										and a.DT_ENTRADA_UNIDADE >= dt_priv_sh_acc_ent_w +1;

										qt_days_in_priv_sh_unit_w := trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));

										if ( coalesce(dt_priv_sh_acc_ent_w::text, '') = '' and coalesce(dt_pric_sh_acc_ext_w::text, '') = '' and coalesce(nr_seq_interno_priv_sh_w::text, '') = '') then
											goto c32End;
										end if;																			
										
										exit when qt_days_in_priv_sh_unit_w > 0;
									end loop;
									max_dt_proc_priv_sh_ww := coalesce(dt_priv_sh_acc_ent_w,dt_procedimento_w);
									qt_temp_priv_sh_w := max_dt_proc_priv_sh_ww;
								end if;
								
								for j in 1..qt_procedimento_ww
								loop

								--	max_dt_proc_ww := nvl(max_dt_proc_w, dt_procedimento_w);
								if (ie_tipo_calculo_ww='ADDON')then
									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
															'4.0 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
															' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
															' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
															' j: '|| j|| chr(10)||chr(13)||
															' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);

									if ((dt_priv_acc_ent_w IS NOT NULL AND dt_priv_acc_ent_w::text <> '') and (dt_pric_acc_ext_w IS NOT NULL AND dt_pric_acc_ext_w::text <> '') and qt_days_in_unit_w<j ) then
										select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
										into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
										from atend_paciente_unidade a, atend_categoria_convenio b
										where a.nr_atendimento=nr_atendimento_w
										and a.nr_atendimento=b.nr_atendimento
										and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
										and b.cd_convenio = cd_convenio_parametro_w
										and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
										and exists (	SELECT 1
													from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
													where c.cd_setor_atendimento = a.cd_setor_atendimento
													and c.cd_unidade_basica= a.cd_unidade_basica
													and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
													and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
													and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
													and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
													and e.cd_convenio=b.cd_convenio )
										and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.DT_ENTRADA_UNIDADE) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_ww);


										qt_days_in_unit_w := qt_days_in_unit_w + trunc(coalesce(dt_pric_acc_ext_w,dt_priv_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_acc_ent_w) + (1/24*60*60));
										max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w, max_dt_proc_priv_ww);

										CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
																' 4 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
																' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
																' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
																' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);
									end if;
								end if;
								
								if (ie_tipo_calculo_ww='DRGIN')then
									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
														'13.0 - Priv_Share Acc Entry date: ' || dt_priv_sh_acc_ent_w|| chr(10)||chr(13)||
																' Priv_Share Acc Exit date: '|| dt_pric_sh_acc_ext_w|| chr(10)||chr(13)||
																' Days In Unit: '|| qt_days_in_priv_sh_unit_w|| chr(10)||chr(13)||
																' j: '|| j|| chr(10)||chr(13)||
																' Inserted Date: '|| max_dt_proc_priv_sh_ww , ie_gravar_log_w);
									if ((dt_priv_sh_acc_ent_w IS NOT NULL AND dt_priv_sh_acc_ent_w::text <> '') and (dt_pric_sh_acc_ext_w IS NOT NULL AND dt_pric_sh_acc_ext_w::text <> '') and qt_days_in_priv_sh_unit_w<j ) then
									select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
									into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
									from atend_paciente_unidade a, atend_categoria_convenio b
									where a.nr_atendimento=nr_atendimento_w
									and a.nr_atendimento=b.nr_atendimento
									and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
									and b.cd_convenio = cd_convenio_parametro_w
									and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
									and exists (SELECT 1
									from unidade_atendimento c, tipo_acomodacao d
									where c.cd_setor_atendimento = a.cd_setor_atendimento
									and c.cd_unidade_basica= a.cd_unidade_basica
									and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
									and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
									and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
									and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
									and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.DT_ENTRADA_UNIDADE) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_sh_ww);

									if((trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60)))=0) then
										
										select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
										into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
										from atend_paciente_unidade a, atend_categoria_convenio b
										where a.nr_atendimento=nr_atendimento_w
										and a.nr_atendimento=b.nr_atendimento
										and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
										and b.cd_convenio = cd_convenio_parametro_w
										and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
										and exists (SELECT 1
										from unidade_atendimento c, tipo_acomodacao d
										where c.cd_setor_atendimento = a.cd_setor_atendimento
										and c.cd_unidade_basica= a.cd_unidade_basica
										and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
										and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
										and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
										and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																	where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
										and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.DT_ENTRADA_UNIDADE) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_sh_ww)
										and a.nr_seq_interno <>nr_seq_interno_priv_sh_w;
									end if;




									qt_days_in_priv_sh_unit_w := qt_days_in_priv_sh_unit_w +
											case when (trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60)))=0 then 1 
											else trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60)) end;
									max_dt_proc_priv_sh_ww := coalesce(dt_priv_sh_acc_ent_w, max_dt_proc_priv_sh_ww);

									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
														'13 - Priv share Acc Entry date: ' || dt_priv_sh_acc_ent_w|| chr(10)||chr(13)||
																' Priv share Acc Exit date: '|| dt_pric_sh_acc_ext_w|| chr(10)||chr(13)||
																' Days In Unit: '|| qt_days_in_priv_sh_unit_w|| chr(10)||chr(13)||
																' Inserted Date: '|| max_dt_proc_priv_sh_ww , ie_gravar_log_w);
									end if;
								end if;


								if (ie_tipo_calculo_ww='ADDON')then
									select 	max(nr_seq_interno)
									into STRICT 	nr_seq_interno_ww
									from 	atend_paciente_unidade
									where 	nr_atendimento= nr_atendimento_w
									and nr_seq_interno = nr_seq_interno_priv_w
									and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_ww);
								elsif (ie_tipo_calculo_ww='DRGIN')then
									select 	max(nr_seq_interno)
									into STRICT 	nr_seq_interno_ww
									from 	atend_paciente_unidade
									where 	nr_atendimento= nr_atendimento_w
									and nr_seq_interno = nr_seq_interno_priv_sh_w
									and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_sh_ww);
								else
									select 	max(nr_seq_interno)
									into STRICT 	nr_seq_interno_ww
									from 	atend_paciente_unidade
									where 	nr_atendimento= nr_atendimento_w
									and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww);
								end if;

									select	max(cd_setor_atendimento),
											max(dt_entrada_unidade),
											max(dt_saida_unidade)
									into STRICT	cd_setor_atendimento_ww,
											dt_entrada_unidade_ww,
											dt_saida_unidade_ww
									from	atend_paciente_unidade
									where	nr_seq_interno = nr_seq_interno_ww;

									qt_days_in_non_priv_unit_w := trunc(coalesce(dt_saida_unidade_ww,dt_entrada_unidade_ww) + (1/24*60*60)) - trunc((dt_entrada_unidade_ww) + (1/24*60*60));

									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 13.5 - dt_entrada_unidade_ww: ' || dt_entrada_unidade_ww || ' for cd_setor_atendimento_ww ' || cd_setor_atendimento_ww || chr(10)||chr(13)||
													' dt_saida_unidade_ww: ' || dt_saida_unidade_ww ||chr(10)||chr(13)||
													' qt_days_in_non_priv_unit_w ' || qt_days_in_non_priv_unit_w ||chr(10)||chr(13)||
													'qt_temp_w '|| qt_temp_w ,ie_gravar_log_w);

									cd_classif_setor_ww := obter_classif_setor(cd_setor_atendimento_ww);

									cd_tipo_acomodacao_w:= obter_tipo_acomod_setor(nr_atendimento_w,cd_setor_atendimento_ww, nr_seq_interno_ww, dt_entrada_unidade_ww);

									cd_tipo_class_acomo_w := obter_classif_tipo_acomod(cd_tipo_acomodacao_w);

									begin
										select cd_proc,ie_origem_proc,cd_proc_loc
										into STRICT     cd_procedimento_final_w,
												ie_origem_proced_final_w,
												cd_procedimento_loc_ww
										from (SELECT '1' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
										coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
										coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
										FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and ((b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww = 4)
										or (b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww <> 4))
										
union all

										SELECT '2' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
										coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
										coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
										FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and coalesce(b.cd_proc_category::text, '') = ''
										 
union all

										select '3' ord,max(a.cd_proc_calculo) cd_proc,
										max(a.ie_origem_proc_calculo) ie_origem_proc,
										max(a.cd_proc_calculo_loc) cd_proc_loc
										FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and (a.CD_PROC_CALCULO IS NOT NULL AND a.CD_PROC_CALCULO::text <> '') order by ord, cd_proc nulls last) alias26
										where (cd_proc IS NOT NULL AND cd_proc::text <> '')  LIMIT 1;
									exception when others then
										 CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																					';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																					';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));
									end;

									if (coalesce(cd_procedimento_final_w::text, '') = '' and coalesce(ie_origem_proced_final_w::text, '') = '' and coalesce(cd_procedimento_loc_ww::text, '') = '')then
										CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																				';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																				';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));
									end if;

									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 5 - Procedure selected is '
 || cd_procedimento_final_w || ' for Origin ' || ie_origem_proced_final_w || chr(10)||chr(13)||
													' Procedure code is '
 || cd_procedimento_loc_ww ,ie_gravar_log_w);

									SELECT * FROM define_conta_procedimento(
										cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_parametro_w, cd_categoria_parametro_w, dt_entrada_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, null, null, null, null, null, null, null, null, nr_seq_proc_interno_1_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

										CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
																	' 6 - cd_conta_contabil_w is ' || cd_conta_contabil_w || ' cd_centro_custo_w ' || cd_centro_custo_w  ,ie_gravar_log_w);


									select	nextval('procedimento_paciente_seq')
									into STRICT	nr_seq_propaci_w
									;

									insert into procedimento_paciente(nr_sequencia,
												cd_procedimento,
												ie_origem_proced,
												qt_procedimento,
												ie_valor_informado,
												vl_procedimento,
												nr_seq_proc_princ,
												dt_entrada_unidade,
												cd_setor_atendimento,
												nr_seq_atepacu,
												nr_atendimento,
												dt_procedimento,
												dt_conta,
												dt_atualizacao,
												nm_usuario,
												cd_convenio,
												vl_medico,
												vl_anestesista,
												vl_materiais,
												vl_auxiliares,
												vl_custo_operacional,
												ie_auditoria,
												cd_categoria,
												nr_interno_conta,
												ds_observacao,
												nr_seq_proc_orig,
												cd_conta_contabil)
									values	(	nr_seq_propaci_w,					-- nr_sequencia
												cd_procedimento_final_w,			-- cd_procedimento
												ie_origem_proced_final_w,			-- ie_origem_proced
												1,									-- qt_procedimento
												'S',								-- ie_valor_informado
												(processar_conta_drg_aus_pck.get_vl_procedimento)/qt_procedimento_ww,   -- vl_procedimento
												null,								-- nr_seq_proc_princ
												dt_entrada_unidade_ww,				-- dt_entrada_unidade
												cd_setor_atendimento_ww,			-- cd_setor_atendimento
												nr_seq_interno_ww,					-- nr_seq_atepacu
												nr_atendimento_w,					-- nr_atendimento
												case when ie_tipo_calculo_ww='ADDON' then max_dt_proc_priv_ww when ie_tipo_calculo_ww='DRGIN' then max_dt_proc_priv_sh_ww else max_dt_proc_ww end ,--nvl(max_dt_proc_priv_ww,max_dt_proc_ww), 					-- dt_procedimento
												case when ie_tipo_calculo_ww='ADDON' then max_dt_proc_priv_ww when ie_tipo_calculo_ww='DRGIN' then max_dt_proc_priv_sh_ww else max_dt_proc_ww end ,
												clock_timestamp(),							-- dt_atualizacao
												nm_usuario_p,						-- nm_usuario
												cd_convenio_parametro_w,			-- cd_convenio
												0,									-- vl_medico
												0,									-- vl_anestesista
												0,									-- vl_materiais
												0,									-- vl_auxiliares
												0,									-- vl_custo_operacional
												'N',								-- ie_auditoria
												cd_categoria_parametro_w,			-- cd_categoria
												nr_interno_conta_sep_w,				-- nr_interno_conta
												obter_desc_procedimento(cd_procedimento_final_w,ie_origem_proced_final_w) || ' ' ||
													case when ie_tipo_calculo_ww='ADDON' then dt_priv_acc_ent_w when ie_tipo_calculo_ww='DRGIN' then dt_priv_sh_acc_ent_w																						
														else qt_temp_w end || ' - ' ||
													case  when ie_tipo_calculo_ww='ADDON' then dt_pric_acc_ext_w-1 when ie_tipo_calculo_ww='DRGIN' then dt_pric_sh_acc_ext_w-1																
														else qt_temp_w + coalesce(qt_procedimento_ww,0)-1 end||' ' ||
													case when ie_tipo_calculo_ww='ADDON' then qt_days_in_non_priv_unit_w when ie_tipo_calculo_ww='DRGIN' then qt_days_in_non_priv_unit_w																
														else coalesce(qt_procedimento_ww,coalesce(qt_days_in_non_priv_unit_w,1)) end||
													' Days @ $'||(processar_conta_drg_aus_pck.get_vl_procedimento)/qt_procedimento_ww,  -- ds_observacao
												max_sequence_w, 						-- nr_seq_proc_orig
												cd_conta_contabil_w
												);

											if (ie_tipo_calculo_ww<>'ADDON' and ie_tipo_calculo_ww<>'DRGIN')then
												max_dt_proc_w := max_dt_proc_ww + 1;
												max_dt_proc_ww:= max_dt_proc_ww + 1;
											elsif (ie_tipo_calculo_ww='ADDON') then
												if (nr_seq_interno_priv_w = nr_seq_interno_ww) then
													max_dt_proc_priv_ww:= max_dt_proc_priv_ww + 1;
												end if;
												max_dt_proc_priv_ww:= max_dt_proc_priv_ww + 1;
											elsif (ie_tipo_calculo_ww='DRGIN') then
												if (nr_seq_interno_priv_sh_w = nr_seq_interno_ww) then
													max_dt_proc_priv_sh_ww:= max_dt_proc_priv_sh_ww + 1;
												end if;
												max_dt_proc_priv_sh_ww:= max_dt_proc_priv_sh_ww + 1;
											end if;



										select	max(nr_interno_conta)
										into STRICT	nr_interno_conta_dest_w
										from	procedimento_paciente
										where	nr_sequencia = nr_seq_propaci_w;

										select	nextval('conta_log_processamento_seq')
										into STRICT	nr_seq_conta_log_proc_w
										;

										insert into conta_log_processamento(
													nr_sequencia,
													nm_usuario,
													dt_atualizacao,
													nm_usuario_nrec,
													dt_atualizacao_nrec,
													nr_atendimento,
													nr_seq_item,
													nr_interno_conta,
													nr_interno_conta_base)
										values (
													nr_seq_conta_log_proc_w,			-- nr_sequencia
													nm_usuario_p,						-- nm_usuario
													clock_timestamp(),							-- dt_atualizacao
													nm_usuario_p,						-- nm_usuario_nrec
													clock_timestamp(),							-- dt_atualizacao_nrec
													nr_atendimento_w,					-- nr_atendimento
													nr_seq_propaci_w,					-- nr_seq_item
													nr_interno_conta_dest_w,			-- nr_interno_conta
													nr_interno_conta_p					-- nr_interno_conta_base
												);

								end loop;

								if (ie_tipo_calculo_ww<>'ADDON')then
									qt_temp_w:=(trunc(qt_temp_w) + trunc(qt_procedimento_ww));
								end if;
								max_dt_proc_priv_ww:= null;

								<<c32End>>
								null;
							end;
					end loop;
				close c03;

				CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
									' 5 - Returning from proceedure', ie_gravar_log_w);
				return;
			end if;
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1075947);
		end if;


		begin
			cd_motivo_alta_w:= get_transfer_detail(nr_atendimento_w);
		exception when others then
			cd_motivo_alta_w:= null;
		end;



		qt_days_in_tier1_w := coalesce(qt_estadia_max_w,0) - coalesce(qt_estadia_min_w,0) + 1;
		
		if (qt_estadia_min_w = 0) then
            qt_days_in_tier1_w := qt_days_in_tier1_w -1; -- Remove one day if minimum tier 1 day count is 0
        end if;

		qt_days_in_tier2_w := coalesce(qt_estedia_max_tier2_w,0) - coalesce(qt_estedia_min_tier2_w,0) + 1;

		qt_days_for_tran_disc_w := coalesce(qt_tnsfr_pt_w,0) - coalesce(qt_total_days_w,0);

		is_tier3_range_applied_w := case
									when ((qt_total_days_w - coalesce(qt_estedia_max_tier2_w,qt_total_days_w))>0) then 'S'
									else 'N'
									end;

		if (is_tier3_range_applied_w='S') then
			qt_days_exceeds_tier3_w := qt_total_days_w- coalesce(qt_estedia_min_tier3_w,qt_total_days_w) +1;
		end if;



		begin
			select coalesce(max(ie_high_trim_in_tier1),'S')
			into STRICT ie_high_trim_in_tier1_w
			from drg_billing_configuration
			where cd_convenio = cd_convenio_parametro_w;
		exception
		when others then
			ie_high_trim_in_tier1_w := 'S';
		end;

		is_tier2_range_applied_w := case
									when(qt_total_days_w - coalesce(qt_estadia_max_w,qt_total_days_w))>0
									then 	case
											when is_tier3_range_applied_w='N' then 'S'
											else 'N'
											end
									else case	when(qt_total_days_w - coalesce(qt_estadia_max_w,qt_total_days_w))=0 and ie_high_trim_in_tier1_w='N' and (qt_estadia_max_w IS NOT NULL AND qt_estadia_max_w::text <> '') and (qt_estadia_min_w IS NOT NULL AND qt_estadia_min_w::text <> '')
						  then 'S'
												else 'N'
												end
									end;

		if (is_tier2_range_applied_w='S') then
			qt_days_exceeds_tier2_w := qt_total_days_w- coalesce(qt_estadia_max_w,qt_total_days_w);

			if (ie_high_trim_in_tier1_w='N')then
				qt_days_exceeds_tier2_w:= qt_total_days_w- coalesce(qt_estadia_max_w,qt_total_days_w) +1;
				qt_days_in_tier1_w := qt_days_in_tier1_w - 1;											
			end if;
		end if;

		is_tier1_range_applied_w := case
									when ((qt_total_days_w - coalesce(qt_estadia_min_w,qt_total_days_w))>=0
									and is_tier2_range_applied_w='N' and is_tier3_range_applied_w='N')
									then 'S'
									else 'N'
									end;

		if (coalesce(qt_estadia_min_w,0)=0 and coalesce(qt_estadia_max_w,0)=0 and ie_high_trim_in_tier1_w='S') then
			is_tier1_range_applied_w:='N';
		end if;

		if (is_tier1_range_applied_w='S') then
			qt_days_exceeds_tier1_w := qt_total_days_w- coalesce(qt_estadia_min_w,qt_total_days_w) +1;
		end if;

		is_sso_applied_w := case when ((qt_total_days_w - coalesce(qt_estadia_min_w,qt_total_days_w))<0 and is_tier2_range_applied_w='N' and is_tier3_range_applied_w='N' and is_tier1_range_applied_w='N') then 'S'
								else 'N'
							end;

		is_only_flagfall_sso_applied_w := case
											when ((qt_total_days_w - coalesce(qt_estadia_min_w,qt_total_days_w))<0
											and is_tier2_range_applied_w='N' and is_tier3_range_applied_w='N' and is_tier1_range_applied_w='N')
											then 'S'
											else 'N'
											end;

		if (ie_high_trim_in_tier1_w='N' and qt_total_days_w=1)then
			is_sdr_applied_w:='N';
			is_sso_applied_w:='N';
			is_only_flagfall_sso_applied_w:= 'N';
			is_tier1_range_applied_w :='S';
			is_inlierval_override_w :='S';
		end if;

		is_all_days_in_icu_w:= case when(qt_total_days_w - qt_days_in_icu_w)=0
								then 'S'
								else 'N'
								end;

		is_none_days_in_icu_w:= case when(qt_total_days_w - qt_days_in_icu_w)=qt_total_days_w
								then 'S'
								else 'N'
								end;

		is_some_days_in_icu_w:= case when(is_all_days_in_icu_w = 'N' and is_none_days_in_icu_w = 'N')
								then 'S'
								else 'N'
								end;

		is_transfer_cutoff_reached_w:= case when(qt_total_days_w - coalesce(qt_tnsfr_pt_w,qt_total_days_w))>0
										then 'S'
										else 'N'
										end;

		if ( qt_days_priv_share_w > qt_estadia_max_w ) then
            qt_days_priv_share_w := qt_estadia_max_w;
			if (ie_high_trim_in_tier1_w='N')then
                qt_days_priv_share_w := qt_days_priv_share_w - 1;
            end if;								   																
        end if;

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								' 2 - Hours: ' || qt_horas_int_w || chr(10)||chr(13)||
								' Total Days: ' || qt_total_days_w || chr(10)||chr(13)||
								' Total ICU days: ' || qt_days_in_icu_w || chr(10)||chr(13)||
								' Total ICU A days: ' || qt_days_in_icu_cat_a_w || chr(10)||chr(13)||
								' Total ICU B days: ' || qt_days_in_icu_cat_b_w || chr(10)||chr(13)||
								' Total ICU C days: ' || qt_days_in_icu_cat_c_w, ie_gravar_log_w);

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								' 3- Total Non ICU A days: ' || qt_days_not_in_icu_cat_a_w || chr(10)||chr(13)||
								' All days in ICU: ' || is_all_days_in_icu_w || chr(10)||chr(13)||
								' No Days in ICU: ' || is_none_days_in_icu_w || chr(10)||chr(13)||
								' Some days in ICU: ' || is_some_days_in_icu_w || chr(10)||chr(13)||
								' Total Non ICU days: ' || qt_days_not_in_icu_w , ie_gravar_log_w);
		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								' 4 - T3 applied: ' || is_tier3_range_applied_w || chr(10)||chr(13)||
								' T2 applied: ' || is_tier2_range_applied_w || chr(10)||chr(13)||
								' T1 applied: ' || is_tier1_range_applied_w || chr(10)||chr(13)||
								' Flagfall Applied: ' || is_only_flagfall_sso_applied_w , ie_gravar_log_w);

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								' 5 - T3 exceed days: ' || qt_days_exceeds_tier3_w || chr(10)||chr(13)||
								' T2 exceed days: ' || qt_days_exceeds_tier2_w || chr(10)||chr(13)||
								' T1 exceed days: ' || qt_days_exceeds_tier1_w || chr(10)||chr(13)||
								' T1 days: ' || qt_days_in_tier1_w || chr(10)||chr(13)||
								' T2 days: ' || qt_days_in_tier2_w, ie_gravar_log_w);

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								' 6 - HTP as Inlier: ' || ie_high_trim_in_tier1_w || chr(10)||chr(13)||
								' Same Day Rate Applied --> ' || is_sdr_applied_w|| chr(10)||chr(13)||
								' Transf: ' || is_transfer_cutoff_reached_w ||
								' Transf Disc Days: ' || qt_days_for_tran_disc_w || chr(10)||chr(13)||
								' Private Acc: ' || ie_private_room_add_on_w || chr(10)||chr(13)||
								' SSO Applied: ' || is_sso_applied_w, ie_gravar_log_w);
		
		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								' 6.1 - inlier value overridden by same day rate? : ' || is_inlierval_override_w, ie_gravar_log_w);



		CALL processar_conta_drg_aus_pck.set_vl_trnfr_dscnt(vl_trnfr_dscnt_w);
		CALL processar_conta_drg_aus_pck.set_vl_sso_benefit(vl_sso_benefit_w);
		CALL processar_conta_drg_aus_pck.set_vl_short_diem_weight(vl_short_diem_weight_w);
		CALL processar_conta_drg_aus_pck.set_vl_same_day_weight(vl_same_day_weight_w);
		CALL processar_conta_drg_aus_pck.set_vl_same_day_rate(vl_same_day_rate_w);
		CALL processar_conta_drg_aus_pck.set_vl_rate_lt_6_hrs(vl_rate_lt_6_hrs_w);
		CALL processar_conta_drg_aus_pck.set_vl_rate_gt_6_hrs(vl_rate_gt_6_hrs_w);
		CALL processar_conta_drg_aus_pck.set_vl_proc_only_fee(vl_proc_only_fee_w);
		CALL processar_conta_drg_aus_pck.set_vl_overnight_flagfall_mv(vl_overnight_flagfall_mv_w);
		CALL processar_conta_drg_aus_pck.set_vl_overnight_flagfall(vl_overnight_flagfall_w);
		CALL processar_conta_drg_aus_pck.set_vl_lso_benefit(vl_lso_benefit_w);
		CALL processar_conta_drg_aus_pck.set_vl_long_diem_weight(vl_long_diem_weight_w);
		CALL processar_conta_drg_aus_pck.set_vl_inlier_weight(vl_inlier_weight_w);
		CALL processar_conta_drg_aus_pck.set_vl_inlier_rate_tier3(vl_inlier_rate_tier3_w);
		CALL processar_conta_drg_aus_pck.set_vl_inlier_rate_tier2(vl_inlier_rate_tier2_w);
		CALL processar_conta_drg_aus_pck.set_vl_inlier_rate(vl_inlier_rate_w);
		CALL processar_conta_drg_aus_pck.set_vl_icu_sso(vl_icu_sso_w);
		CALL processar_conta_drg_aus_pck.set_qt_dias_icu_a(qt_days_in_icu_cat_a_w);
		CALL processar_conta_drg_aus_pck.set_qt_dias_icu_b(qt_days_in_icu_cat_b_w);
		CALL processar_conta_drg_aus_pck.set_qt_dias_icu_c(qt_days_in_icu_cat_c_w);
		--processar_conta_drg_aus_pck.set_qt_dias_not_icu(qt_days_not_in_icu_w);
		CALL processar_conta_drg_aus_pck.set_qt_horas_int(qt_horas_int_w);
		CALL processar_conta_drg_aus_pck.set_qt_total_days(qt_total_days_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_in_icu(qt_days_in_icu_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_not_in_icu_cat_a(qt_days_not_in_icu_cat_a_w);
		CALL processar_conta_drg_aus_pck.set_is_tier3_range_applied(is_tier3_range_applied_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_exceeds_tier3(qt_days_exceeds_tier3_w);
		CALL processar_conta_drg_aus_pck.set_is_tier2_range_applied(is_tier2_range_applied_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_exceeds_tier2(qt_days_exceeds_tier2_w);
		CALL processar_conta_drg_aus_pck.set_is_tier1_range_applied(is_tier1_range_applied_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_exceeds_tier1(qt_days_exceeds_tier1_w);
		CALL processar_conta_drg_aus_pck.set_is_only_flagfall_sso_app(is_only_flagfall_sso_applied_w);
		CALL processar_conta_drg_aus_pck.set_is_all_days_in_icu(is_all_days_in_icu_w);
		CALL processar_conta_drg_aus_pck.set_is_none_days_in_icu(is_none_days_in_icu_w);
		CALL processar_conta_drg_aus_pck.set_is_some_days_in_icu(is_some_days_in_icu_w);
		CALL processar_conta_drg_aus_pck.set_is_transfer_cutoff_reached(is_transfer_cutoff_reached_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_in_tier1(qt_days_in_tier1_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_in_tier2(qt_days_in_tier2_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_for_tran_disc(qt_days_for_tran_disc_w);
		CALL processar_conta_drg_aus_pck.set_qt_days_for_priv_share(qt_days_priv_share_w);

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								' 7 - Setting all the values in Macros. cd_estabelecimento_p is ' || cd_estabelecimento_p, ie_gravar_log_w);

		if (qt_drg_price_available_w > 0) then

			update procedimento_paciente
			set vl_procedimento = 	coalesce(processar_conta_drg_aus_pck.get_vl_overnight_flagfall,
								  CASE WHEN is_sdr_applied_w='S' THEN  0  ELSE CASE WHEN is_tier1_range_applied_w='S' THEN 											CASE WHEN is_sso_applied_w='N' THEN 											CASE WHEN is_inlierval_override_w='S' THEN  processar_conta_drg_aus_pck.get_vl_same_day_rate WHEN is_inlierval_override_w='N' THEN  processar_conta_drg_aus_pck.get_vl_inlier_rate END  WHEN is_sso_applied_w='S' THEN 0 END  WHEN is_tier1_range_applied_w='N' THEN  CASE WHEN is_tier2_range_applied_w='S' THEN processar_conta_drg_aus_pck.get_vl_inlier_rate WHEN is_tier2_range_applied_w='N' THEN 0 END  END  END ),
				vl_custo_operacional = coalesce(processar_conta_drg_aus_pck.get_vl_overnight_flagfall,
								  CASE WHEN is_sdr_applied_w='S' THEN  0  ELSE CASE WHEN is_tier1_range_applied_w='S' THEN 											CASE WHEN is_sso_applied_w='N' THEN 											CASE WHEN is_inlierval_override_w='S' THEN  processar_conta_drg_aus_pck.get_vl_same_day_rate WHEN is_inlierval_override_w='N' THEN  processar_conta_drg_aus_pck.get_vl_inlier_rate END  WHEN is_sso_applied_w='S' THEN 0 END  WHEN is_tier1_range_applied_w='N' THEN  CASE WHEN is_tier2_range_applied_w='S' THEN processar_conta_drg_aus_pck.get_vl_inlier_rate WHEN is_tier2_range_applied_w='N' THEN 0 END  END  END ),
				ie_tiss_tipo_despesa = 'D'
			where nr_sequencia = max_sequence_w
			and nr_atendimento = nr_atendimento_w;

			CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
									' 8 - DRG value updated for encounter ' || nr_atendimento_w || ' and nr_sequencia ' || max_sequence_w, ie_gravar_log_w);

		end if;

		select	max(cd_motivo_exc_conta)
		into STRICT	cd_motivo_exc_conta_w
		from	parametro_faturamento
		where	cd_estabelecimento	= cd_estabelecimento_p;

		select count(*)
		into STRICT qt_proc_linked_with_drg_w
		from procedimento_paciente pp , procedimento p
		where pp.nr_interno_conta = nr_interno_conta_p
		and pp.ie_origem_proced<>15
		and pp.ie_origem_proced=p.ie_origem_proced
		and pp.cd_procedimento = p.cd_procedimento
		and p.ie_classificacao=3
		and pp.ds_observacao like '%Day%@%$%'
		and coalesce(cd_motivo_exc_conta::text, '') = '';

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
		' 9 - Account removal motive is ' || cd_motivo_exc_conta_w || ' Sequence is '|| max_sequence_w ||' . Room procedures count is ' || qt_proc_linked_with_drg_w, ie_gravar_log_w);

		if (qt_proc_linked_with_drg_w > 0)then

			update procedimento_paciente
			set cd_motivo_exc_conta = cd_motivo_exc_conta_w
			where nr_interno_conta = nr_interno_conta_p
			and coalesce(cd_motivo_exc_conta::text, '') = ''
			and nr_sequencia in (
					SELECT nr_sequencia
					from procedimento_paciente pp , procedimento p
					where pp.nr_interno_conta = nr_interno_conta_p
					and pp.ie_origem_proced<>15
					and pp.ie_origem_proced=p.ie_origem_proced
					and pp.cd_procedimento = p.cd_procedimento
					and p.ie_classificacao=3
					and pp.ds_observacao like '%Day%@%$%'
					and coalesce(cd_motivo_exc_conta::text, '') = '');

			CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
			'10 - Cancelling old procedures ', ie_gravar_log_w);

		end if;

	if (cd_motivo_alta_w IS NOT NULL AND cd_motivo_alta_w::text <> '' AND vl_trnfr_dscnt_w IS NOT NULL AND vl_trnfr_dscnt_w::text <> '') then

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
								'11 - Opening cursor c01. DRG sequence ' || max_sequence_w, ie_gravar_log_w);

		open c01;
			loop
			fetch	c01
			into	nr_sequencia_ww,
					cd_estabelecimento_ww,
					ie_tipo_calculo_ww,
					cd_proc_calculo_ww,
					ie_origem_proc_calculo_ww,
					qt_min_hours_ww,
					qt_max_hours_ww,
					ds_calculo_ww,
					ds_calculo_days_ww;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin

					CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12- Seq: '|| nr_sequencia_ww || chr(10)||chr(13)||
											' Calc: '|| ie_tipo_calculo_ww || chr(10)||chr(13)||
											' Proc: '|| cd_proc_calculo_ww || chr(10)||chr(13)||
											' Origin: '|| ie_origem_proc_calculo_ww || chr(10)||chr(13)||
											' Rule: '|| ds_calculo_ww || chr(10)||chr(13)||
											' Min hrs: '|| qt_min_hours_ww || chr(10)||chr(13)||
											' Max hrs: '|| qt_max_hours_ww,
											ie_gravar_log_w);

					CALL processar_conta_drg_aus_macro(ds_calculo_ww,ds_calculo_days_ww, 'P');

						if (ds_calculo_ww IS NOT NULL AND ds_calculo_ww::text <> '') then
							if (position('@SAMEDAY_CASE_LT' in ds_calculo_ww)>0)then
								update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs,
									vl_custo_operacional = processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c1End;
							  elsif (position('@SAMEDAY_CASE_GT' in ds_calculo_ww)>0)then
								 update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs,
									vl_custo_operacional = processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c1End;
							  end if;
						end if;

						max_dt_proc_w:=null;

						max_dt_proc_ww := coalesce(max_dt_proc_w, dt_procedimento_w);
						qt_temp_w := max_dt_proc_ww; --temporary saving date
						if (ie_tipo_calculo_ww='ADDON')then
							max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w,dt_procedimento_w);
							qt_temp_priv_w := max_dt_proc_priv_ww;
						end if;

					for j in 1..processar_conta_drg_aus_pck.get_qt_procedimento loop

						--max_dt_proc_ww := nvl(max_dt_proc_w, dt_procedimento_w);
						if (ie_tipo_calculo_ww='ADDON')then
							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													'13.0 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
													' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
													' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
													' j: '|| j|| chr(10)||chr(13)||
													' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);

							if ((dt_priv_acc_ent_w IS NOT NULL AND dt_priv_acc_ent_w::text <> '') and (dt_pric_acc_ext_w IS NOT NULL AND dt_pric_acc_ext_w::text <> '') and qt_days_in_unit_w<j ) then

								select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
								into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
								from atend_paciente_unidade a, atend_categoria_convenio b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_atendimento=b.nr_atendimento
								and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
								and b.cd_convenio = cd_convenio_parametro_w
								and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
								and exists (SELECT 1
											from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
											where c.cd_setor_atendimento = a.cd_setor_atendimento
											and c.cd_unidade_basica= a.cd_unidade_basica
											and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
											and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
											and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
											and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
											and e.cd_convenio=b.cd_convenio )
								and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(a.DT_ENTRADA_UNIDADE) >= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_ww);


								qt_days_in_unit_w := qt_days_in_unit_w + ceil(coalesce(dt_pric_acc_ext_w,clock_timestamp())-dt_priv_acc_ent_w);
								max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w, max_dt_proc_priv_ww);

							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													'13 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
													' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
													' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
													' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);
							end if;
						end if;

						if (ie_tipo_calculo_ww='ADDON')then
							select 	max(nr_seq_interno)
							into STRICT 	nr_seq_interno_ww
							from 	atend_paciente_unidade
							where 	nr_atendimento= nr_atendimento_w
							and nr_seq_interno = nr_seq_interno_priv_w
							and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_ww);
						else
							select 	max(nr_seq_interno)
							into STRICT 	nr_seq_interno_ww
							from 	atend_paciente_unidade
							where 	nr_atendimento= nr_atendimento_w
							and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww);
						end if;

						select	max(cd_setor_atendimento),
								max(dt_entrada_unidade)
						into STRICT	cd_setor_atendimento_ww,
								dt_entrada_unidade_ww
						from	atend_paciente_unidade
						where	nr_seq_interno = nr_seq_interno_ww;

						cd_classif_setor_ww := obter_classif_setor(cd_setor_atendimento_ww);

						cd_tipo_acomodacao_w:= obter_tipo_acomod_setor(nr_atendimento_w,cd_setor_atendimento_ww, nr_seq_interno_ww, dt_entrada_unidade_ww);

						cd_tipo_class_acomo_w := obter_classif_tipo_acomod(cd_tipo_acomodacao_w);

						begin
							select cd_proc,ie_origem_proc,cd_proc_loc
								into STRICT     cd_procedimento_final_w,
										ie_origem_proced_final_w,
										cd_procedimento_loc_ww
								from (SELECT '1' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
								coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
								coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
								FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and ((b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww = 4)
								or (b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww <> 4))
								
union all

								SELECT '2' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
								coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
								coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
								FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and coalesce(b.cd_proc_category::text, '') = ''
								 
union all

								select '3' ord,max(a.cd_proc_calculo) cd_proc,
								max(a.ie_origem_proc_calculo) ie_origem_proc,
								max(a.cd_proc_calculo_loc) cd_proc_loc
								FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and (a.CD_PROC_CALCULO IS NOT NULL AND a.CD_PROC_CALCULO::text <> '') order by ord, cd_proc nulls last) alias26
								where (cd_proc IS NOT NULL AND cd_proc::text <> '')  LIMIT 1;
						exception when others then
								CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));
						end;

							if (coalesce(cd_procedimento_final_w::text, '') = '' and coalesce(ie_origem_proced_final_w::text, '') = '' and coalesce(cd_procedimento_loc_ww::text, '') = '')then
								CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																		';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																		';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));
							end if;

						CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 14 - Procedure selected is '
 || cd_procedimento_final_w || ' for Origin ' || ie_origem_proced_final_w || chr(10)||chr(13)||
													' Procedure code is '
 || cd_procedimento_loc_ww ,ie_gravar_log_w);

                           SELECT * FROM define_conta_procedimento(
                        cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_parametro_w, cd_categoria_parametro_w, dt_entrada_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, null, null, null, null, null, null, null, null, nr_seq_proc_interno_1_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;
						CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 15 - cd_conta_contabil_w is ' || cd_conta_contabil_w || ' cd_centro_custo_w ' || cd_centro_custo_w  ,ie_gravar_log_w);


						select	nextval('procedimento_paciente_seq')
						into STRICT	nr_seq_propaci_w
						;

						insert into procedimento_paciente(nr_sequencia,
									cd_procedimento,
									ie_origem_proced,
									qt_procedimento,
									ie_valor_informado,
									vl_procedimento,
									nr_seq_proc_princ,
									dt_entrada_unidade,
									cd_setor_atendimento,
									nr_seq_atepacu,
									nr_atendimento,
									dt_procedimento,
									dt_conta,
									dt_atualizacao,
									nm_usuario,
									cd_convenio,
									vl_medico,
									vl_anestesista,
									vl_materiais,
									vl_auxiliares,
									vl_custo_operacional,
									ie_auditoria,
									cd_categoria,
									nr_interno_conta,
									cd_conta_contabil)
						values (	nr_seq_propaci_w,					-- nr_sequencia
									cd_proc_calculo_w,					-- cd_procedimento
									ie_orig_proc_calculo_w,				-- ie_origem_proced
									1,									-- qt_procedimento
									'S',								-- ie_valor_informado
									processar_conta_drg_aus_pck.get_vl_procedimento,	-- vl_procedimento
									null,								-- nr_seq_proc_princ
									dt_entrada_unidade_w,				-- dt_entrada_unidade
									cd_setor_atendimento_w,				-- cd_setor_atendimento
									nr_seq_atepacu_w,					-- nr_seq_atepacu
									nr_atendimento_w,					-- nr_atendimento
									dt_procedimento_w,					-- dt_procedimento
									dt_procedimento_w,					-- dt_conta
									clock_timestamp(),							-- dt_atualizacao
									nm_usuario_p,						-- nm_usuario
									cd_convenio_parametro_w,			-- cd_convenio
									0,									-- vl_medico
									0,									-- vl_anestesista
									0,									-- vl_materiais
									0,									-- vl_auxiliares
									0,									-- vl_custo_operacional
									'N',								-- ie_auditoria
									cd_categoria_parametro_w,			-- cd_categoria
									nr_interno_conta_sep_w,				-- nr_interno_conta,
									cd_conta_contabil_w
								);
            max_dt_proc_ww:= max_dt_proc_ww +1;


						select	max(nr_interno_conta)
						into STRICT	nr_interno_conta_dest_w
						from	procedimento_paciente
						where	nr_sequencia = nr_seq_propaci_w;

						select	nextval('conta_log_processamento_seq')
						into STRICT	nr_seq_conta_log_proc_w
						;

						insert into conta_log_processamento(
															nr_sequencia,
															nm_usuario,
															dt_atualizacao,
															nm_usuario_nrec,
															dt_atualizacao_nrec,
															nr_atendimento,
															nr_seq_item,
															nr_interno_conta,
															nr_interno_conta_base)
						values (
															nr_seq_conta_log_proc_w,				-- nr_sequencia
															nm_usuario_p,							-- nm_usuario
															clock_timestamp(),								-- dt_atualizacao
															nm_usuario_p,							-- nm_usuario_nrec
															clock_timestamp(),								-- dt_atualizacao_nrec
															nr_atendimento_w,						-- nr_atendimento
															nr_seq_propaci_w,						-- nr_seq_item
															nr_interno_conta_dest_w,				-- nr_interno_conta
															nr_interno_conta_p						-- nr_interno_conta_base
								);
					end loop;
					<<c1End>>
					null;
				end;
			end loop;
		close c01;
	else

		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
		'11 - Opening cursor c02. DRG sequence ' || max_sequence_w, ie_gravar_log_w);
		open c02;
			loop
				fetch	c02
				into	nr_sequencia_ww,
						cd_estabelecimento_ww,
						ie_tipo_calculo_ww,
						cd_proc_calculo_ww,
						ie_origem_proc_calculo_ww,
						qt_min_hours_ww,
						qt_max_hours_ww,
						ds_calculo_ww,
						ds_calculo_days_ww;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					begin

					CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12 - Seq: '|| nr_sequencia_ww || chr(10)||chr(13)||
											' Calc: '|| ie_tipo_calculo_ww || chr(10)||chr(13)||
											' Proc: '|| cd_proc_calculo_ww || chr(10)||chr(13)||
											' Origin: '|| ie_origem_proc_calculo_ww || chr(10)||chr(13)||
											' Rule: '|| ds_calculo_ww || chr(10)||chr(13)||
											' Min hrs: '|| qt_min_hours_ww || chr(10)||chr(13)||
											' Max hrs: '|| qt_max_hours_ww,
											ie_gravar_log_w);

						CALL processar_conta_drg_aus_macro(ds_calculo_ww,ds_calculo_days_ww, 'P');

						if (ds_calculo_ww IS NOT NULL AND ds_calculo_ww::text <> '')then
							if (position('@SAMEDAY_CASE_LT' in ds_calculo_ww)>0)then
								update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs,
									vl_custo_operacional = processar_conta_drg_aus_pck.get_vl_rate_lt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c2End;
							elsif (position('@SAMEDAY_CASE_GT' in ds_calculo_ww)>0)then
								update procedimento_paciente
								set vl_procedimento = 	processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs,
									vl_custo_operacional = processar_conta_drg_aus_pck.get_vl_rate_gt_6_hrs
								where nr_sequencia = max_sequence_w
								and nr_atendimento = nr_atendimento_w;

								goto c2End;
							end if;

							qt_procedimento_ww := 	case
												when position('@DAYS_SPENT_IN_ICU_CATEGORY_A' in ds_calculo_ww)>0
												then qt_days_in_icu_cat_a_w
												when position('@DAYS_SPENT_IN_ICU_CATEGORY_B' in ds_calculo_ww)>0
												then qt_days_in_icu_cat_b_w
												when position('@DAYS_SPENT_IN_ICU_CATEGORY_C' in ds_calculo_ww)>0
												then qt_days_in_icu_cat_c_w
												when position('@DAYS_IN_NON_ICU_DEPARTMENT' in ds_calculo_ww)>0
												then case when ie_tipo_calculo_ww='ADDON' then qt_days_not_in_icu_w when ie_tipo_calculo_ww='DRGIN' then qt_days_priv_share_w else null end
												when position('@HOURS_SPENT_IN_HOSP' in ds_calculo_ww)>0
												then qt_horas_int_w
												when position('@DAYS_SPENT_IN_HOSPITAL' in ds_calculo_ww)>0
												then qt_total_days_w
												when position('@DAYS_SPENT_IN_ICU' in ds_calculo_ww)>0
												then qt_days_in_icu_w
												when position('@DAYS_NOT_SPENT_IN_ICU_CAT_A' in ds_calculo_ww)>0
												then qt_days_not_in_icu_cat_a_w
												when position('@DAYS_EXCEED_IN_TIER3' in ds_calculo_ww)>0
												then qt_days_exceeds_tier3_w
												when position('@DAYS_EXCEED_IN_TIER2' in ds_calculo_ww)>0
												then qt_days_exceeds_tier2_w
												when position('@DAYS_EXCEED_IN_TIER1' in ds_calculo_ww)>0
												then qt_days_exceeds_tier1_w
												when position('@TOTAL_DAYS_IN_TIER1' in ds_calculo_ww)>0
												then qt_days_in_tier1_w
												when position('@TOTAL_DAYS_IN_TIER2' in ds_calculo_ww)>0
												then qt_days_in_tier2_w
												end;
						end if;

						if ( coalesce(qt_procedimento_ww::text, '') = '' ) then
						  qt_procedimento_ww := 1;
						end if;

						max_dt_proc_ww:=null;

						if (coalesce(max_dt_proc_ww::text, '') = '') then
							max_dt_proc_w:=null;
							max_dt_proc_ww := coalesce(max_dt_proc_w, dt_procedimento_w+1);
              			end if;

						qt_temp_w := coalesce(qt_temp_w, dt_procedimento_w+1); --temporary saving date
						qt_temp_priv_w := null; --temporary saving date
						qt_temp_priv_sh_w := null; --temporary saving date								
						
						CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.START - max_dt_proc_ww: '|| max_dt_proc_ww   || ' qt_temp_w  '||qt_temp_w || ' dt_priv_acc_ent_w : ' || dt_priv_acc_ent_w || ' dt_pric_acc_ext_w : ' || dt_pric_acc_ext_w
										   || ' nr_seq_interno_priv_w : ' || nr_seq_interno_priv_w || ' qt_days_in_unit_w : '|| qt_days_in_unit_w,
											ie_gravar_log_w);
											
						if (ie_tipo_calculo_ww='ADDON')then
						
							if (qt_days_in_unit_w=0)then
								select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
								into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
								from atend_paciente_unidade a, atend_categoria_convenio b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_atendimento=b.nr_atendimento
								and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
								and b.cd_convenio = cd_convenio_parametro_w
								and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
								and exists (SELECT 1
											from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
											where c.cd_setor_atendimento = a.cd_setor_atendimento
											and c.cd_unidade_basica= a.cd_unidade_basica
											and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
											and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
											and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
											and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
											and e.cd_convenio=b.cd_convenio )
								and a.DT_ENTRADA_UNIDADE >= dt_priv_acc_ent_w+ 1/(24*60*60);

								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.0_INSIDE -  dt_priv_acc_ent_w : ' || dt_priv_acc_ent_w || ' dt_pric_acc_ext_w : ' || dt_pric_acc_ext_w
										   || ' nr_seq_interno_priv_w : ' || nr_seq_interno_priv_w ,
											ie_gravar_log_w);

								qt_days_in_unit_w := trunc(coalesce(dt_pric_acc_ext_w,dt_priv_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_acc_ent_w) + (1/24*60*60));
								
								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w, ' 11111: qt_days_in_unit_w : '|| qt_days_in_unit_w,ie_gravar_log_w);
								
							end if;
						
							  max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w,dt_procedimento_w);
							  qt_temp_priv_w := max_dt_proc_priv_ww;
						end if;

						if (ie_tipo_calculo_ww='DRGIN')then

								select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
								into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
								from atend_paciente_unidade a, atend_categoria_convenio b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_atendimento=b.nr_atendimento
								and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
								and b.cd_convenio = cd_convenio_parametro_w
								and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
								and exists (SELECT 1
											from unidade_atendimento c, tipo_acomodacao d
											where c.cd_setor_atendimento = a.cd_setor_atendimento
											and c.cd_unidade_basica= a.cd_unidade_basica
											and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
											and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
											and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
											and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
								and a.DT_ENTRADA_UNIDADE >= dt_procedimento_w -1;

								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.START_DRG - max_dt_proc_ww: '|| max_dt_proc_ww   || ' qt_temp_w  '||qt_temp_w || ' dt_priv_sh_acc_ent_w : ' || dt_priv_sh_acc_ent_w || ' dt_pric_sh_acc_ext_w : ' || dt_pric_sh_acc_ext_w
										   || ' nr_seq_interno_priv_sh_w : ' || nr_seq_interno_priv_sh_w ,
											ie_gravar_log_w);
											
								qt_days_in_priv_sh_unit_w := trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));

								if (qt_days_in_priv_sh_unit_w > qt_estadia_max_w) then
                                    qt_days_in_priv_sh_unit_w := qt_estadia_max_w;
									dt_pric_sh_acc_ext_w := dt_priv_sh_acc_ent_w +  qt_estadia_max_w -1;
                                end if;

										CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w, ' 22222: qt_days_in_priv_sh_unit_w : '|| qt_days_in_priv_sh_unit_w,ie_gravar_log_w);
										
							while qt_days_in_priv_sh_unit_w=0
							loop
								select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
								into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
								from atend_paciente_unidade a, atend_categoria_convenio b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_atendimento=b.nr_atendimento
								and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
								and b.cd_convenio = cd_convenio_parametro_w
								and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
								and exists (SELECT 1
											from unidade_atendimento c, tipo_acomodacao d
											where c.cd_setor_atendimento = a.cd_setor_atendimento
											and c.cd_unidade_basica= a.cd_unidade_basica
											and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
											and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
											and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
											and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
								and a.DT_ENTRADA_UNIDADE >= dt_priv_sh_acc_ent_w +1/(24*60*60);
								
								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.0_INSIDE -  dt_priv_acc_ent_w : ' || dt_priv_acc_ent_w || ' dt_pric_acc_ext_w : ' || dt_pric_acc_ext_w
										   || ' nr_seq_interno_priv_w : ' || nr_seq_interno_priv_w ,
											ie_gravar_log_w);

								qt_days_in_priv_sh_unit_w := trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));
								
								if (qt_days_in_priv_sh_unit_w > qt_estadia_max_w) then
                                    qt_days_in_priv_sh_unit_w := qt_estadia_max_w;
									dt_pric_sh_acc_ext_w := dt_priv_sh_acc_ent_w +  qt_estadia_max_w -1;
                                end if;

								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w, ' 22222_WHILE: qt_days_in_priv_sh_unit_w : '|| qt_days_in_priv_sh_unit_w,ie_gravar_log_w);
								
								if ( coalesce(dt_priv_sh_acc_ent_w::text, '') = '' and coalesce(dt_pric_sh_acc_ext_w::text, '') = '' and coalesce(nr_seq_interno_priv_sh_w::text, '') = '') then
									CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w, ' 22222: ENDING DRGIN LOOP',ie_gravar_log_w);
									goto c2End;
								end if;
								exit when qt_days_in_priv_sh_unit_w > 0;
							end loop;
							
							  max_dt_proc_priv_sh_ww := coalesce(dt_priv_sh_acc_ent_w,dt_procedimento_w);
							  qt_temp_priv_sh_w := max_dt_proc_priv_sh_ww;
						end if;			
						if (ie_tipo_calculo_ww='T2')then
							if (qt_temp_w IS NOT NULL AND qt_temp_w::text <> '') then
								qt_temp_w:= dt_procedimento_w+1 + qt_days_in_tier1_w;
							else
								qt_temp_w:= qt_temp_w + qt_days_in_tier1_w;
							end if;
						end if;
						
						if (ie_tipo_calculo_ww='T3')then
							if (qt_temp_w IS NOT NULL AND qt_temp_w::text <> '') then
								qt_temp_w:= dt_procedimento_w + 1 + qt_days_in_tier1_w + qt_days_in_tier2_w;
							else
								qt_temp_w:= qt_temp_w + qt_days_in_tier1_w + qt_days_in_tier2_w;
							end if;

						end if;

						if (ie_tipo_calculo_ww='ICUAS' or ie_tipo_calculo_ww='ICUAL' or ie_tipo_calculo_ww='ICUAI') then

							max_dt_proc_ww := coalesce(max_dt_proc_w, dt_procedimento_w);

								select min(b.dt_registration)
								into STRICT qt_temp_w
								from icunsw a, icunsw_daily b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_sequencia=b.nr_seq_icunsw
								and a.ie_situacao='A'
								and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration)>=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww)
								and b.ie_patient_category='A';

						CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.ICUA - max_dt_proc_ww: '|| max_dt_proc_ww   || ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);

						end if;

						if (ie_tipo_calculo_ww='ICUBS' or ie_tipo_calculo_ww='ICUBL' or ie_tipo_calculo_ww='ICUBI') then

							max_dt_proc_ww := coalesce(max_dt_proc_w, dt_procedimento_w);

								select min(b.dt_registration)
								into STRICT qt_temp_w
								from icunsw a, icunsw_daily b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_sequencia=b.nr_seq_icunsw
								and a.ie_situacao='A'
								and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration)>=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww)
								and b.ie_patient_category='B';

						CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.ICUB - max_dt_proc_ww: '|| max_dt_proc_ww   || ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);
						end if;

						if (ie_tipo_calculo_ww='ICUCS' or ie_tipo_calculo_ww='ICUCL' or ie_tipo_calculo_ww='ICUCI') then

							max_dt_proc_ww := coalesce(max_dt_proc_w, dt_procedimento_w);

								select min(b.dt_registration)
								into STRICT qt_temp_w
								from icunsw a, icunsw_daily b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_sequencia=b.nr_seq_icunsw
								and a.ie_situacao='A'
								and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration)>=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww)
								and b.ie_patient_category='C';

								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.ICUC - max_dt_proc_ww: '|| max_dt_proc_ww  ||  ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);
						end if;

						if (ie_tipo_calculo_ww='T3' and ds_calculo_ww like '@TIER1_RANGE_INLIER_PRICE%@TOTAL_DAYS_IN_TIER1' or (ie_tipo_calculo_ww='T2' and ds_calculo_ww like '@TIER1_RANGE_INLIER_PRICE%@TOTAL_DAYS_IN_TIER1'))then

							qt_temp_w:= dt_procedimento_w + 1;
							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.T3/T2 - max_dt_proc_ww: '|| max_dt_proc_ww  || ' qt_days_in_tier1_w  '||qt_days_in_tier1_w || ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);
						end if;

						if (ie_tipo_calculo_ww='T3' and ds_calculo_ww like '@TIER2_RANGE_INLIER_PRICE%@TOTAL_DAYS_IN_TIER2' or (ie_tipo_calculo_ww='T2' and ds_calculo_ww like '@TIER2_RANGE_INLIER_PRICE%@DAYS_EXCEED_IN_TIER2'))then

							max_dt_proc_ww:= max_dt_proc_ww + qt_days_in_tier1_w;

							qt_temp_w:= dt_procedimento_w+1 + qt_days_in_tier1_w;

							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.T3/12.T2 - max_dt_proc_ww: '|| max_dt_proc_ww  || ' qt_days_in_tier1_w  '||qt_days_in_tier1_w || ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);
						end if;

						if (ie_tipo_calculo_ww='T3' and ds_calculo_ww like '@TIER3_RANGE_INLIER_PRICE%@DAYS_EXCEED_IN_TIER3')then
							  max_dt_proc_ww:= max_dt_proc_ww + qt_days_in_tier1_w + qt_days_in_tier2_w;
							  qt_temp_w:= dt_procedimento_w+1 + qt_days_in_tier1_w + qt_days_in_tier2_w;
							  CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.T3 - max_dt_proc_ww: '|| max_dt_proc_ww || ' qt_days_in_tier1_w  '||qt_days_in_tier1_w || ' qt_days_in_tier2_w  '||qt_days_in_tier2_w || ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);
						end if;

						if (ie_tipo_calculo_ww='LSO')then
							  max_dt_proc_ww:= dt_procedimento_w + qt_days_in_tier1_w;
							  qt_temp_w:= dt_procedimento_w + qt_days_in_tier1_w;
							
							  CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.LSO - max_dt_proc_ww: '|| max_dt_proc_ww || ' qt_days_in_tier1_w  '||qt_days_in_tier1_w ||  ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);
						end if;
						
						if (ie_tipo_calculo_ww='SDR')then
							  max_dt_proc_ww:= dt_procedimento_w;
							  qt_temp_w:= dt_procedimento_w;
							  CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
											' 12.LSO - max_dt_proc_ww: '|| max_dt_proc_ww ||  ' qt_temp_w  '||qt_temp_w,
											ie_gravar_log_w);
						end if;


						for j in 1..qt_procedimento_ww
						loop

							if (ie_tipo_calculo_ww='ICUAS' or ie_tipo_calculo_ww='ICUAL' or ie_tipo_calculo_ww='ICUAI') then

								select min(b.dt_registration)
								into STRICT max_dt_proc_ww
								from icunsw a, icunsw_daily b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_sequencia=b.nr_seq_icunsw
								and a.ie_situacao='A'
								and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration)>=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww)
								and b.ie_patient_category='A';

								select max(t.range_start),
									   max(t.range_end),
									   max(t.range_count)
								into STRICT range_start_w,
									 range_end_w,
									 range_count_w
								from (
								SELECT min(dt) as range_start
									  ,max(dt) as range_end
									  ,count(*) as range_count
								from (
									SELECT ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration) dt,row_number() over (order by b.dt_registration) as rn
									,trunc(b.dt_registration-row_number() over (order by b.dt_registration)) as grp
									from icunsw a, icunsw_daily b
									where a.nr_atendimento=nr_atendimento_w
									and a.nr_sequencia=b.nr_seq_icunsw
									and a.ie_situacao='A'
									and b.ie_patient_category='A') alias12
								group by grp)t
								where ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(t.range_start)<=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww);

							end if;
							if (ie_tipo_calculo_ww='ICUBS' or ie_tipo_calculo_ww='ICUBL' or ie_tipo_calculo_ww='ICUBI') then
								select min(b.dt_registration)
								into STRICT max_dt_proc_ww
								from icunsw a, icunsw_daily b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_sequencia=b.nr_seq_icunsw
								and a.ie_situacao='A'
								and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration)>=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww)
								and b.ie_patient_category='B';

								select max(t.range_start),
									   max(t.range_end),
									   max(t.range_count)
								into STRICT range_start_w,
									 range_end_w,
									 range_count_w
								from (
								SELECT min(dt) as range_start
									  ,max(dt) as range_end
									  ,count(*) as range_count
								from (
									SELECT ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration) dt,row_number() over (order by b.dt_registration) as rn
									,trunc(b.dt_registration-row_number() over (order by b.dt_registration)) as grp
									from icunsw a, icunsw_daily b
									where a.nr_atendimento=nr_atendimento_w
									and a.nr_sequencia=b.nr_seq_icunsw
									and a.ie_situacao='A'
									and b.ie_patient_category='B') alias12
								group by grp)t
								where ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(t.range_start)<=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww);

							end if;
							if (ie_tipo_calculo_ww='ICUCS' or ie_tipo_calculo_ww='ICUCL' or ie_tipo_calculo_ww='ICUCI') then
								select min(b.dt_registration)
								into STRICT max_dt_proc_ww
								from icunsw a, icunsw_daily b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_sequencia=b.nr_seq_icunsw
								and a.ie_situacao='A'
								and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration)>=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww)
								and b.ie_patient_category='C';

								select max(t.range_start),
									   max(t.range_end),
									   max(t.range_count)
								into STRICT range_start_w,
									 range_end_w,
									 range_count_w
								from (
								SELECT min(dt) as range_start
									  ,max(dt) as range_end
									  ,count(*) as range_count
								from (
									SELECT ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_registration) dt,row_number() over (order by b.dt_registration) as rn
									,trunc(b.dt_registration-row_number() over (order by b.dt_registration)) as grp
									from icunsw a, icunsw_daily b
									where a.nr_atendimento=nr_atendimento_w
									and a.nr_sequencia=b.nr_seq_icunsw
									and a.ie_situacao='A'
									and b.ie_patient_category='C') alias12
								group by grp)t
								where ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(t.range_start)<=ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww);
							end if;

							if (ie_tipo_calculo_ww='ICUCS' or ie_tipo_calculo_ww='ICUCL' or ie_tipo_calculo_ww='ICUCI'
							 or ie_tipo_calculo_ww='ICUBS' or ie_tipo_calculo_ww='ICUBL' or ie_tipo_calculo_ww='ICUBI'
							 or ie_tipo_calculo_ww='ICUAS' or ie_tipo_calculo_ww='ICUAL' or ie_tipo_calculo_ww='ICUAI') then
								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
														'13.ICURANGE - range_start_w: ' || range_start_w|| chr(10)||chr(13)||
																' range_end_w: '|| range_end_w|| chr(10)||chr(13)||
																' range_count_w: '|| range_count_w, ie_gravar_log_w);
							end if;

							if (ie_tipo_calculo_ww='ADDON')then
								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													'13.0 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
															' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
															' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
															' Internal Acc: '|| nr_seq_interno_priv_w|| chr(10)||chr(13)||													 								
															' j: '|| j|| chr(10)||chr(13)||
															' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);
								if ((dt_priv_acc_ent_w IS NOT NULL AND dt_priv_acc_ent_w::text <> '') and (dt_pric_acc_ext_w IS NOT NULL AND dt_pric_acc_ext_w::text <> '') and qt_days_in_unit_w<j ) then
								select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
								into STRICT dt_priv_acc_ent_w, dt_pric_acc_ext_w, nr_seq_interno_priv_w
								from atend_paciente_unidade a, atend_categoria_convenio b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_atendimento=b.nr_atendimento
								and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
								and b.cd_convenio = cd_convenio_parametro_w
								and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
								and exists (SELECT 1
								from unidade_atendimento c, tipo_acomodacao d, drg_billing_configuration e
								where c.cd_setor_atendimento = a.cd_setor_atendimento
								and c.cd_unidade_basica= a.cd_unidade_basica
								and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
								and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
								and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
								and d.cd_tipo_acomodacao = e.cd_drg_priv_acc
								and e.cd_convenio=b.cd_convenio )
								and a.DT_ENTRADA_UNIDADE >= max_dt_proc_priv_ww;


								qt_days_in_unit_w := qt_days_in_unit_w +  trunc(coalesce(dt_pric_acc_ext_w,dt_priv_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_acc_ent_w) + (1/24*60*60));
								max_dt_proc_priv_ww := coalesce(dt_priv_acc_ent_w, max_dt_proc_priv_ww);

								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													'13 - Priv Acc Entry date: ' || dt_priv_acc_ent_w|| chr(10)||chr(13)||
															' Priv Acc Exit date: '|| dt_pric_acc_ext_w|| chr(10)||chr(13)||
															' Days In Unit: '|| qt_days_in_unit_w|| chr(10)||chr(13)||
															' Inserted Date: '|| max_dt_proc_priv_ww , ie_gravar_log_w);
									if ( coalesce(dt_priv_acc_ent_w::text, '') = '' and coalesce(dt_pric_acc_ext_w::text, '') = '' and coalesce(nr_seq_interno_priv_w::text, '') = '') then
										CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w, ' 33333: ENDING ADDON LOOP',ie_gravar_log_w);
										goto c2End;
									end if;																						
								end if;
							end if;

							if (ie_tipo_calculo_ww='DRGIN')then
								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													'13.DRGIN - Priv_Share Acc Entry date: ' || dt_priv_sh_acc_ent_w|| chr(10)||chr(13)||
															' Priv_Share Acc Exit date: '|| dt_pric_sh_acc_ext_w|| chr(10)||chr(13)||
															' Days In Unit: '|| qt_days_in_priv_sh_unit_w|| chr(10)||chr(13)||
															' j: '|| j|| chr(10)||chr(13)||
															' Inserted Date: '|| max_dt_proc_priv_sh_ww , ie_gravar_log_w);
								if ((dt_priv_sh_acc_ent_w IS NOT NULL AND dt_priv_sh_acc_ent_w::text <> '') and (dt_pric_sh_acc_ext_w IS NOT NULL AND dt_pric_sh_acc_ext_w::text <> '') and qt_days_in_priv_sh_unit_w<j ) then
								select min(a.dt_entrada_unidade),min(a.dt_saida_unidade), min(a.nr_seq_interno)
								into STRICT dt_priv_sh_acc_ent_w, dt_pric_sh_acc_ext_w, nr_seq_interno_priv_sh_w
								from atend_paciente_unidade a, atend_categoria_convenio b
								where a.nr_atendimento=nr_atendimento_w
								and a.nr_atendimento=b.nr_atendimento
								and a.dt_entrada_unidade between b.dt_inicio_vigencia and coalesce(b.dt_final_vigencia,clock_timestamp())
								and b.cd_convenio = cd_convenio_parametro_w
								and coalesce(b.cd_categoria,0) = coalesce(cd_categoria_parametro_w,0)
								and exists (SELECT 1
								from unidade_atendimento c, tipo_acomodacao d
								where c.cd_setor_atendimento = a.cd_setor_atendimento
								and c.cd_unidade_basica= a.cd_unidade_basica
								and coalesce(trim(both c.cd_unidade_compl),0) = coalesce(trim(both a.cd_unidade_compl),0)
								and c.cd_tipo_acomodacao = a.cd_tipo_acomodacao
								and c.cd_tipo_acomodacao = d.cd_tipo_acomodacao
								and d.ie_classificacao in (select distinct CD_PROC_CATEGORY  from drg_calc_rule_proc_cat
																where nr_seq_drg_calculation_rule = nr_sequencia_ww	))
								and a.DT_ENTRADA_UNIDADE >= max_dt_proc_priv_sh_ww;-- + 1/24/60/60;
								qt_days_in_priv_sh_unit_w := qt_days_in_priv_sh_unit_w +  trunc(coalesce(dt_pric_sh_acc_ext_w,dt_priv_sh_acc_ent_w) + (1/24*60*60)) - trunc((dt_priv_sh_acc_ent_w) + (1/24*60*60));
								max_dt_proc_priv_sh_ww := coalesce(dt_priv_sh_acc_ent_w, max_dt_proc_priv_sh_ww);

								CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													'13 - Priv share Acc Entry date: ' || dt_priv_sh_acc_ent_w|| chr(10)||chr(13)||
															' Priv share Acc Exit date: '|| dt_pric_sh_acc_ext_w|| chr(10)||chr(13)||
															' Days In Unit: '|| qt_days_in_priv_sh_unit_w|| chr(10)||chr(13)||
															' Inserted Date: '|| max_dt_proc_priv_sh_ww , ie_gravar_log_w);
									if ( coalesce(dt_priv_sh_acc_ent_w::text, '') = '' and coalesce(dt_pric_sh_acc_ext_w::text, '') = '' and coalesce(nr_seq_interno_priv_sh_w::text, '') = '') then
										CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w, ' 22222: ENDING DRGIN LOOP',ie_gravar_log_w);
										goto c2End;																					 				
									end if;
								end if;
							end if;
							
							if (ie_tipo_calculo_ww='ADDON')then
							  select 	max(nr_seq_interno)
											into STRICT 	nr_seq_interno_ww
											from 	atend_paciente_unidade
											where 	nr_atendimento= nr_atendimento_w
							  and nr_seq_interno = nr_seq_interno_priv_w
							  and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_ww);
							elsif (ie_tipo_calculo_ww='DRGIN')then
							  select 	max(nr_seq_interno)
											into STRICT 	nr_seq_interno_ww
											from 	atend_paciente_unidade
											where 	nr_atendimento= nr_atendimento_w
							  and nr_seq_interno = nr_seq_interno_priv_sh_w
							  and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_priv_sh_ww);															
							else
											select 	max(nr_seq_interno)
											into STRICT 	nr_seq_interno_ww
											from 	atend_paciente_unidade
											where 	nr_atendimento= nr_atendimento_w
													and ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_entrada_unidade) <= ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(max_dt_proc_ww);
							end if;

							select	max(cd_setor_atendimento),
									max(dt_entrada_unidade),
									max(dt_saida_unidade)
							into STRICT	cd_setor_atendimento_ww,
									dt_entrada_unidade_ww,
									dt_saida_unidade_ww
							from	atend_paciente_unidade
							where	nr_seq_interno = nr_seq_interno_ww;

							qt_days_in_non_priv_unit_w := trunc(coalesce(dt_saida_unidade_ww,dt_entrada_unidade_ww) + (1/24*60*60)) - trunc((dt_entrada_unidade_ww) + (1/24*60*60));

							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 13.5 - dt_entrada_unidade_ww: ' || dt_entrada_unidade_ww || ' for cd_setor_atendimento_ww ' || cd_setor_atendimento_ww || chr(10)||chr(13)||
													' dt_saida_unidade_ww: ' || dt_saida_unidade_ww ||chr(10)||chr(13)||
													' qt_days_in_non_priv_unit_w ' || qt_days_in_non_priv_unit_w ||chr(10)||chr(13)||
													'qt_temp_w '|| qt_temp_w ,ie_gravar_log_w);

							cd_classif_setor_ww := obter_classif_setor(cd_setor_atendimento_ww);

							cd_tipo_acomodacao_w:= obter_tipo_acomod_setor(nr_atendimento_w,cd_setor_atendimento_ww, nr_seq_interno_ww, dt_entrada_unidade_ww);

							cd_tipo_class_acomo_w := obter_classif_tipo_acomod(cd_tipo_acomodacao_w);

                    		CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 14 - Int Seq: ' || nr_seq_interno_ww || ' for date ' || max_dt_proc_ww || chr(10)||chr(13)||
													' Dept code: ' || cd_setor_atendimento_ww ||chr(10)||chr(13)|| ' Dept Name: ' || obter_nome_setor(cd_setor_atendimento_ww) ||chr(10)||chr(13)||
													' Dept class: ' || cd_classif_setor_ww ,ie_gravar_log_w);
							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 15 - Accommodation Code: ' || cd_tipo_acomodacao_w|| chr(10) || chr(13)||
													' Accommodation Name: ' || OBTER_DESC_TIPO_ACOMOD(coalesce(cd_tipo_acomodacao_w,1))|| case when coalesce(cd_tipo_acomodacao_w::text, '') = '' then '  Acc not found' end || chr(10) || chr(13)||
													' Accommodation Class: ' || cd_tipo_class_acomo_w,ie_gravar_log_w);


						begin
							select cd_proc,ie_origem_proc,cd_proc_loc
								into STRICT     cd_procedimento_final_w,
										ie_origem_proced_final_w,
										cd_procedimento_loc_ww
								from (SELECT '1' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
								coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
								coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
								FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and ((b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww = 4)
								or (b.cd_proc_category IS NOT NULL AND b.cd_proc_category::text <> '' AND b.cd_proc_category = cd_tipo_class_acomo_w and cd_classif_setor_ww <> 4))
								
union all

								SELECT '2' ord,coalesce(max(b.cd_procedimento),max(a.cd_proc_calculo)) cd_proc,
								coalesce(max(b.ie_origem_proced),max(a.ie_origem_proc_calculo)) ie_origem_proc,
								coalesce(max(b.cd_procedimento_loc),max(a.cd_proc_calculo_loc)) cd_proc_loc
								FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and coalesce(b.cd_proc_category::text, '') = ''
								 
union all

								select '3' ord,max(a.cd_proc_calculo) cd_proc,
								max(a.ie_origem_proc_calculo) ie_origem_proc,
								max(a.cd_proc_calculo_loc) cd_proc_loc
								FROM drg_calculation_rule a
LEFT OUTER JOIN drg_calc_rule_proc_cat b ON (a.nr_sequencia = b.nr_seq_drg_calculation_rule)
WHERE a.nr_sequencia = nr_sequencia_ww and (a.CD_PROC_CALCULO IS NOT NULL AND a.CD_PROC_CALCULO::text <> '') order by ord, cd_proc nulls last) alias26
								where (cd_proc IS NOT NULL AND cd_proc::text <> '')  LIMIT 1;
						exception
							when others then
							CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																			';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																			';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));

							end;

						if (coalesce(cd_procedimento_final_w::text, '') = '' and coalesce(ie_origem_proced_final_w::text, '') = '' and coalesce(cd_procedimento_loc_ww::text, '') = '')then
							CALL wheb_mensagem_pck.exibir_mensagem_abort(1115169,'IE_TIPO_CALCULA='||ie_tipo_calculo_ww||
																	';ACC_TYPE='||obter_valor_dominio_idioma(56,cd_tipo_class_acomo_w,9) ||
																	';CD_CONVENIO='|| obter_desc_convenio(cd_convenio_parametro_w));
						end if;

							CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
													' 16 - Procedure selected is '
 || cd_procedimento_final_w || ' for Origin ' || ie_origem_proced_final_w || chr(10)||chr(13)||
													' Procedure code is '
 || cd_procedimento_loc_ww ,ie_gravar_log_w);

                          select	coalesce(max(ie_tipo_convenio),0),
                            max(ie_classif_contabil)
                          into STRICT	ie_tipo_convenio_aux2_w,
                            ie_classif_convenio_w
                          from	convenio
                          where	cd_convenio	= cd_convenio_parametro_w;

						  SELECT * FROM define_conta_procedimento(
									cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, 1, ie_clinica_w, cd_setor_atendimento_w, ie_classif_convenio_w, ie_tipo_atendimento_w, ie_tipo_convenio_aux2_w, cd_convenio_parametro_w, cd_categoria_parametro_w, dt_entrada_w, cd_conta_contabil_w, cd_centro_custo_w, cd_plano_w, null, null, null, null, null, null, null, null, nr_seq_proc_interno_1_w) INTO STRICT cd_conta_contabil_w, cd_centro_custo_w;

						CALL Gravar_log_calculo_proc(cd_procedimento_w, ie_origem_proced_w, max_sequence_w, cd_convenio_parametro_w, cd_categoria_parametro_w,
												' 17 - cd_conta_contabil_w is ' || cd_conta_contabil_w || ' cd_centro_custo_w ' || cd_centro_custo_w  ,ie_gravar_log_w);

						select	nextval('procedimento_paciente_seq')
							into STRICT	nr_seq_propaci_w
							;


							insert into procedimento_paciente(nr_sequencia,
										cd_procedimento,
										ie_origem_proced,
										qt_procedimento,
										ie_valor_informado,
										vl_procedimento,
										nr_seq_proc_princ,
										dt_entrada_unidade,
										cd_setor_atendimento,
										nr_seq_atepacu,
										nr_atendimento,
										dt_procedimento,
										dt_conta,
										dt_atualizacao,
										nm_usuario,
										cd_convenio,
										vl_medico,
										vl_anestesista,
										vl_materiais,
										vl_auxiliares,
										vl_custo_operacional,
										ie_auditoria,
										cd_categoria,
										nr_interno_conta,
										ds_observacao,
										nr_seq_proc_orig,
										cd_conta_contabil)
							values	(	nr_seq_propaci_w,					-- nr_sequencia
										cd_procedimento_final_w,			-- cd_procedimento
										ie_origem_proced_final_w,			-- ie_origem_proced
										1,									-- qt_procedimento
										'S',								-- ie_valor_informado
										(processar_conta_drg_aus_pck.get_vl_procedimento)/qt_procedimento_ww,   -- vl_procedimento
										null,								-- nr_seq_proc_princ
										dt_entrada_unidade_ww,				-- dt_entrada_unidade
										cd_setor_atendimento_ww,			-- cd_setor_atendimento
										nr_seq_interno_ww,					-- nr_seq_atepacu
										nr_atendimento_w,					-- nr_atendimento
										case when ie_tipo_calculo_ww='ADDON' then max_dt_proc_priv_ww when ie_tipo_calculo_ww='DRGIN' then max_dt_proc_priv_sh_ww else max_dt_proc_ww end ,--nvl(max_dt_proc_priv_ww,max_dt_proc_ww), 					-- dt_procedimento
										case when ie_tipo_calculo_ww='ADDON' then max_dt_proc_priv_ww when ie_tipo_calculo_ww='DRGIN' then max_dt_proc_priv_sh_ww else max_dt_proc_ww end ,-- dt_conta
										clock_timestamp(),							-- dt_atualizacao
										nm_usuario_p,						-- nm_usuario
										cd_convenio_parametro_w,			-- cd_convenio
										0,									-- vl_medico
										0,									-- vl_anestesista
										0,									-- vl_materiais
										0,									-- vl_auxiliares
										0,									-- vl_custo_operacional
										'N',								-- ie_auditoria
										cd_categoria_parametro_w,			-- cd_categoria
										nr_interno_conta_sep_w,				-- nr_interno_conta
										obter_desc_procedimento(cd_procedimento_final_w,ie_origem_proced_final_w) || ' ' ||
																case when ie_tipo_calculo_ww='ADDON' then dt_priv_acc_ent_w when ie_tipo_calculo_ww='DRGIN' then dt_priv_sh_acc_ent_w
																						when ie_tipo_calculo_ww='ICUAS' or ie_tipo_calculo_ww='ICUAL' or ie_tipo_calculo_ww='ICUAI'
																							or ie_tipo_calculo_ww='ICUBS' or ie_tipo_calculo_ww='ICUBL' or ie_tipo_calculo_ww='ICUBI'
																							or ie_tipo_calculo_ww='ICUCS' or ie_tipo_calculo_ww='ICUCL' or ie_tipo_calculo_ww='ICUCI' then range_start_w
																						else qt_temp_w end || ' - ' ||
																case  when ie_tipo_calculo_ww='ADDON' then dt_pric_acc_ext_w when ie_tipo_calculo_ww='DRGIN' then dt_pric_sh_acc_ext_w
																when ie_tipo_calculo_ww='ICUAS' or ie_tipo_calculo_ww='ICUAL' or ie_tipo_calculo_ww='ICUAI'
																							or ie_tipo_calculo_ww='ICUBS' or ie_tipo_calculo_ww='ICUBL' or ie_tipo_calculo_ww='ICUBI'
																							or ie_tipo_calculo_ww='ICUCS' or ie_tipo_calculo_ww='ICUCL' or ie_tipo_calculo_ww='ICUCI' then range_end_w
																else (qt_temp_w + (coalesce(qt_procedimento_ww,0)-1)) end||' ' ||
																case when ie_tipo_calculo_ww='ADDON' then qt_days_in_unit_w when ie_tipo_calculo_ww='DRGIN' then qt_days_in_priv_sh_unit_w
																when ie_tipo_calculo_ww='ICUAS' or ie_tipo_calculo_ww='ICUAL' or ie_tipo_calculo_ww='ICUAI'
																							or ie_tipo_calculo_ww='ICUBS' or ie_tipo_calculo_ww='ICUBL' or ie_tipo_calculo_ww='ICUBI'
																							or ie_tipo_calculo_ww='ICUCS' or ie_tipo_calculo_ww='ICUCL' or ie_tipo_calculo_ww='ICUCI' then range_count_w
																else coalesce(qt_procedimento_ww,coalesce(qt_days_in_non_priv_unit_w,1)) end||
																' Days @ $'||(processar_conta_drg_aus_pck.get_vl_procedimento)/qt_procedimento_ww,  -- ds_observacao
										max_sequence_w ,						-- nr_seq_proc_orig
										cd_conta_contabil_w);
								if (ie_tipo_calculo_ww<>'ADDON' and ie_tipo_calculo_ww<>'DRGIN')then
									max_dt_proc_w := max_dt_proc_ww + 1;
									max_dt_proc_ww:= max_dt_proc_ww + 1;
								elsif (ie_tipo_calculo_ww='ADDON') then
									if (nr_seq_interno_priv_w = nr_seq_interno_ww) then
										max_dt_proc_priv_ww:= max_dt_proc_priv_ww + 1;
									end if;
									max_dt_proc_priv_ww:= max_dt_proc_priv_ww + 1/(24*60*60);
								elsif (ie_tipo_calculo_ww='DRGIN') then
									if (nr_seq_interno_priv_sh_w = nr_seq_interno_ww) then
                                        max_dt_proc_priv_sh_ww:= max_dt_proc_priv_sh_ww + 1;
                                    end if;
									max_dt_proc_priv_sh_ww:= max_dt_proc_priv_sh_ww + 1/(24*60*60);
								end if;

								select	max(nr_interno_conta)
								into STRICT	nr_interno_conta_dest_w
								from	procedimento_paciente
								where	nr_sequencia = nr_seq_propaci_w;

								select	nextval('conta_log_processamento_seq')
								into STRICT	nr_seq_conta_log_proc_w
								;

								insert into conta_log_processamento(
											nr_sequencia,
											nm_usuario,
											dt_atualizacao,
											nm_usuario_nrec,
											dt_atualizacao_nrec,
											nr_atendimento,
											nr_seq_item,
											nr_interno_conta,
											nr_interno_conta_base)
								values (
											nr_seq_conta_log_proc_w,			-- nr_sequencia
											nm_usuario_p,						-- nm_usuario
											clock_timestamp(),							-- dt_atualizacao
											nm_usuario_p,						-- nm_usuario_nrec
											clock_timestamp(),							-- dt_atualizacao_nrec
											nr_atendimento_w,					-- nr_atendimento
											nr_seq_propaci_w,					-- nr_seq_item
											nr_interno_conta_dest_w,			-- nr_interno_conta
											nr_interno_conta_p					-- nr_interno_conta_base
										);

						end loop;

						if (ie_tipo_calculo_ww<>'ADDON')then
						  qt_temp_w:=(trunc(qt_temp_w) + trunc(qt_procedimento_ww));
						end if;

						max_dt_proc_priv_ww:= null;

						<<c2End>>
						null;
					end;
			end loop;
		close c02;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE processar_conta_drg_aus (nr_interno_conta_p bigint, cd_estabelecimento_p bigint, ie_separacao_conta_p text, nm_usuario_p text) FROM PUBLIC;

