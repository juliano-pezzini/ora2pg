-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_atualizacao_contabil ( dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, cd_tipo_lote_contabil_p bigint, ie_geracao_p text, qt_movimento_p bigint, nr_seq_atualizacao_p INOUT bigint) AS $body$
DECLARE


nr_contador_w			bigint      := 0;
dt_referencia_month_w		timestamp;
dt_inicio_atualizacao_w		timestamp;
dt_fim_atualizacao_w		timestamp;
hr_atualizacao_w		varchar(15);
qt_segundos_geracao_w		bigint;
qt_horas_att_w			bigint;
qt_minutos_att_w		bigint;
qt_segundos_att_w		bigint;
nr_seq_atualizacao_w		pls_atualizacao_contabil.nr_sequencia%type;
nr_seq_movimento_w		pls_movimento_contabil.nr_sequencia%type;


BEGIN

if (ie_geracao_p = 'G') then
	dt_inicio_atualizacao_w	:= clock_timestamp();
	dt_referencia_month_w	:= trunc(dt_referencia_p,'month');
	CALL pls_atualizar_codificacao_pck.pls_atualizar_codificacao(dt_referencia_month_w);

	CALL wheb_usuario_pck.set_ie_atualizacao_contabil('S');

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_atualizacao_w
	from	pls_atualizacao_contabil a
	where	a.cd_tipo_lote_contabil	= cd_tipo_lote_contabil_p
	and	pkg_date_utils.start_of(a.dt_mes_competencia,'MONTH',0) = pkg_date_utils.start_of(dt_referencia_p,'MONTH',0);

	if (coalesce( nr_seq_atualizacao_w ,0) = 0) then

		select	nextval('pls_atualizacao_contabil_seq')
		into STRICT	nr_seq_atualizacao_w
		;

		insert into pls_atualizacao_contabil(nr_sequencia,
			cd_tipo_lote_contabil,
			dt_mes_competencia,
			nm_usuario_atualizacao,
			dt_atualizacao_contas,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			dt_inicio_atualizacao,
			cd_estabelecimento)
		values (nr_seq_atualizacao_w,
			cd_tipo_lote_contabil_p,
			dt_referencia_p,
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			dt_inicio_atualizacao_w,
			cd_estabelecimento_p);
	end if;

	nr_seq_atualizacao_p	:= nr_seq_atualizacao_w;

elsif (ie_geracao_p = 'A') then

	CALL wheb_usuario_pck.set_ie_atualizacao_contabil('N');

	select	max(dt_fim_atualizacao),
		max(dt_inicio_atualizacao)
	into STRICT	dt_fim_atualizacao_w,
		dt_inicio_atualizacao_w
	from	pls_atualizacao_contabil a
	where	a.nr_sequencia		= nr_seq_atualizacao_p;

	if (coalesce(dt_fim_atualizacao_w::text, '') = '') then

		dt_fim_atualizacao_w	:= clock_timestamp();

		select (dt_fim_atualizacao_w - dt_inicio_atualizacao_w) * 86400
		into STRICT	qt_segundos_geracao_w
		;

		if (qt_segundos_geracao_w <> 0) then

			qt_horas_att_w		:= trunc((qt_segundos_geracao_w / 60) / 60);
			qt_segundos_geracao_w	:= qt_segundos_geracao_w - (qt_horas_att_w * 60 * 60);

			qt_minutos_att_w	:= trunc(qt_segundos_geracao_w / 60);
			qt_segundos_geracao_w	:= qt_segundos_geracao_w - (qt_minutos_att_w * 60);

			qt_segundos_att_w	:= qt_segundos_geracao_w;

			hr_atualizacao_w	:= lpad(qt_horas_att_w,2,'0')||':'||lpad(qt_minutos_att_w,2,'0')||':'||lpad(qt_segundos_att_w,2,'0');
		else
			hr_atualizacao_w	:= '00:00:00';
		end if;

		update	pls_atualizacao_contabil a
		set	a.dt_fim_atualizacao	= dt_fim_atualizacao_w,
			a.hr_atualizacao	= hr_atualizacao_w,
			a.qt_movimento		= coalesce(a.qt_movimento,0) + qt_movimento_p
		where	nr_sequencia		= nr_seq_atualizacao_p;
	else

		update	pls_atualizacao_contabil a
		set	a.qt_movimento		= coalesce(a.qt_movimento,0) + qt_movimento_p
		where	a.nr_sequencia		= nr_seq_atualizacao_p;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_atualizacao_contabil ( dt_referencia_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint, cd_tipo_lote_contabil_p bigint, ie_geracao_p text, qt_movimento_p bigint, nr_seq_atualizacao_p INOUT bigint) FROM PUBLIC;

