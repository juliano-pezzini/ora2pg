-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_area_atuacao ( nr_seq_plano_p bigint, nr_seq_operadora_p bigint, nr_seq_prestador_p bigint, nr_seq_cooperativa_p bigint, ie_area_coberta_p INOUT text, nr_seq_segurado_p pls_segurado.nr_sequencia%type default null, ds_uf_exec_p sus_municipio.ds_unidade_federacao%type default null, cd_estabelecimento_p bigint default null) AS $body$
DECLARE


cd_municipio_prest_w		varchar(6);
sg_estado_prest_w		pls_prestador_area.sg_estado%type;
nr_seq_regiao_prest_w		bigint;
cd_municipio_plano_w		varchar(6);
sg_estado_plano_w		pls_plano_area.sg_estado%type;
nr_seq_regiao_plano_w		bigint;
cd_municipio_oper_w		varchar(6);
sg_estado_oper_w		pls_regiao_atuacao.sg_uf_municipio%type;
nr_seq_regiao_oper_w		bigint;
qt_registro_plano_w		bigint;
qt_registro_prestador_w		bigint;
qt_registro_coop_w		bigint;
cd_municipio_coop_w		varchar(10);
sg_estado_coop_w		pls_cooperativa_area.sg_estado%type;
nr_seq_regiao_coop_w		bigint;
ie_abrangencia_w		varchar(4);
sg_estado_w			sus_municipio.ds_unidade_federacao%type;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_intercambio_w		pls_intercambio.nr_sequencia%type;
dt_sysdate_w			timestamp;
ds_unidade_federacao_prest_w	sus_municipio.ds_unidade_federacao%type;
ds_unidade_federacao_seg_w	sus_municipio.ds_unidade_federacao%type;
ds_unidade_federacao_contr_w	sus_municipio.ds_unidade_federacao%type;
ie_valida_abrangencia_plano_w	pls_parametros.ie_valida_abrangencia_plano%type;
nr_seq_prestador_regra_w	pls_extensao_area.nr_seq_prestador%type;
ie_tipo_processo_w		varchar(1)	:= 'O';
nr_seq_plano_w			pls_extensao_area.nr_seq_plano%type;

/* Areas de atuacao do prestador */

c01 CURSOR FOR
	SELECT	cd_municipio_ibge,
		sg_estado,
		nr_seq_regiao
	from	pls_prestador_area
	where	nr_seq_prestador	= nr_seq_prestador_p;

/* Areas de atuacao do plano */

c02 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_estado,
		a.nr_seq_regiao
	from	pls_plano_area a
	where	a.nr_seq_plano	= nr_seq_plano_p;

/* Areas de atuacao da operadora */

c03 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_uf_municipio,
		a.nr_seq_regiao
	from	pls_regiao_atuacao a
	where	a.nr_seq_operadora	= nr_seq_operadora_p;

C04 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_estado,
		a.nr_seq_regiao
	from	pls_cooperativa_area	a
	where	a.nr_seq_cooperativa	= nr_seq_cooperativa_p;

-- Tratar a area de atuacao da operadora executora do atendimento nas  transacoes de intercambio
C05 CURSOR FOR
	SELECT	a.cd_municipio_ibge,
		a.sg_estado,
		a.nr_seq_regiao
	from	pls_cooperativa_area	a
	where	a.nr_seq_cooperativa	= nr_seq_operadora_p;

-- Tratar a extensao de atendimento vinculada ao beneficiario/contrato
c06 CURSOR FOR
	SELECT	cd_municipio_ibge,
		sg_estado,
		nr_seq_regiao,
		nr_seq_prestador
	from	pls_extensao_area
	where	nr_seq_segurado		= nr_seq_segurado_p
	and	dt_sysdate_w between trunc(dt_inicio_vigencia) and coalesce(trunc(dt_fim_vigencia),dt_sysdate_w);

c07 CURSOR FOR
	SELECT	cd_municipio_ibge,
		sg_estado,
		nr_seq_regiao,
		nr_seq_prestador
	from	pls_extensao_area
	where	nr_seq_contrato		= nr_seq_contrato_w
	and	dt_sysdate_w between trunc(dt_inicio_vigencia) and coalesce(trunc(dt_fim_vigencia),dt_sysdate_w)
	
union	all
	
	PERFORM	cd_municipio_ibge,
		sg_estado,
		nr_seq_regiao,
		nr_seq_prestador
	from	pls_extensao_area
	where	nr_seq_intercambio	= nr_seq_intercambio_w
	and	dt_sysdate_w between trunc(dt_inicio_vigencia) and coalesce(trunc(dt_fim_vigencia),dt_sysdate_w)
	
union	all
	
	select	cd_municipio_ibge,
		sg_estado,
		nr_seq_regiao,
		nr_seq_prestador
	from	pls_extensao_area
	where	nr_seq_plano		= nr_seq_plano_w
	and	dt_sysdate_w between trunc(dt_inicio_vigencia) and coalesce(trunc(dt_fim_vigencia),dt_sysdate_w);	
BEGIN

dt_sysdate_w := trunc(clock_timestamp());

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	nr_seq_contrato_w	:=	pls_obter_dados_segurado(nr_seq_segurado_p,'NC');
	nr_seq_intercambio_w	:=	pls_obter_dados_segurado(nr_seq_segurado_p, 'NRCI');
	nr_seq_plano_w		:=	(pls_obter_dados_segurado(nr_seq_segurado_p, 'NRP'))::numeric;
end if;

select	count(1)
into STRICT	qt_registro_plano_w
from	pls_plano_area
where	nr_seq_plano	= nr_seq_plano_p;

if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
	select	coalesce(ie_abrangencia,'X')
	into STRICT	ie_abrangencia_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_p;
end if;

select	count(1)
into STRICT	qt_registro_prestador_w
from	pls_prestador_area
where	nr_seq_prestador	= nr_seq_prestador_p;

select	count(1)
into STRICT	qt_registro_coop_w
from	pls_cooperativa_area
where	nr_seq_cooperativa	= nr_seq_cooperativa_p;

if (qt_registro_plano_w > 0) and
	((qt_registro_prestador_w > 0) or (qt_registro_coop_w > 0)) then
	ie_area_coberta_p	:= 'N';
else
	ie_area_coberta_p	:= 'S';
end if;

if (coalesce(nr_seq_prestador_p,0) = 0) and (coalesce(nr_seq_cooperativa_p,0) > 0) then
		ie_tipo_processo_w	:= 'I';
	end if;

if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') and (coalesce(ie_abrangencia_w,'X') = 'X') then	
	ie_area_coberta_p	:= 'S';
else
	select	coalesce(max(ie_valida_abrangencia_plano), 'N')
	into STRICT	ie_valida_abrangencia_plano_w
	from	pls_parametros
	where	cd_estabelecimento = coalesce(cd_estabelecimento_p, wheb_usuario_pck.get_cd_estabelecimento);
	
	/* Verificar se municipio do prestador esta na area de atuacao do plano */

	if (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') and (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
		open c01;
		loop
		fetch c01 into
			cd_municipio_prest_w,
			sg_estado_prest_w,
			nr_seq_regiao_prest_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			open c02;
			loop
			fetch c02 into
				cd_municipio_plano_w,
				sg_estado_plano_w,
				nr_seq_regiao_plano_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
					if (ie_valida_abrangencia_plano_w = 'S') then
						if (ie_abrangencia_w	= 'N') then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (ie_abrangencia_w	= 'M') then
							if (cd_municipio_plano_w = cd_municipio_prest_w) then
								ie_area_coberta_p	:= 'S';
								exit;
							end if;
						elsif (ie_abrangencia_w	= 'E') then
							if (sg_estado_plano_w = sg_estado_prest_w) and (coalesce(cd_municipio_plano_w::text, '') = '') and (coalesce(cd_municipio_prest_w::text, '') = '') then
								ie_area_coberta_p	:= 'S';
								exit;
							/*Se o municipio do plano esta no estado do prestador*/

							elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_plano_w, nr_seq_regiao_prest_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_prest_w, nr_seq_regiao_plano_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							elsif (pls_obter_se_municipio_em_uf(cd_municipio_plano_w, sg_estado_prest_w)	= 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							/*Se o municipio do prestador esta no estado do plano*/

							elsif (pls_obter_se_municipio_em_uf(cd_municipio_prest_w, sg_estado_plano_w)	= 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							end if;
						elsif (ie_abrangencia_w	= 'GM') then
							if (nr_seq_regiao_plano_w = nr_seq_regiao_prest_w) then
								ie_area_coberta_p	:= 'S';
								exit;
							elsif (pls_obter_se_mun_uf_regiao(cd_municipio_plano_w,null,nr_seq_regiao_prest_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							/* Se o municipio ou estado  do plano esta na regiao do plano */

							elsif (pls_obter_se_mun_uf_regiao(cd_municipio_prest_w,null,nr_seq_regiao_plano_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							elsif (pls_obter_se_municipio_em_uf(cd_municipio_plano_w, sg_estado_prest_w)	= 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							/*Se o municipio do prestador esta no estado do plano*/

							elsif (pls_obter_se_municipio_em_uf(cd_municipio_prest_w, sg_estado_plano_w)	= 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							end if;
						elsif (ie_abrangencia_w	= 'GE') then
							if (nr_seq_regiao_plano_w = nr_seq_regiao_prest_w) then
								ie_area_coberta_p	:= 'S';
								exit;
							/*Se o estado do municipio da cooperativa esta na regiao do prestador */

							elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_plano_w), nr_seq_regiao_prest_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							/*Se o estado do municipio do prestador esta na regiao do plano */

							elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_prest_w), nr_seq_regiao_plano_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							/* Se o municipio ou estado  do plano esta na regiao do prestador */

							elsif (pls_obter_se_mun_uf_regiao(null,sg_estado_plano_w,nr_seq_regiao_prest_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							/* Se o municipio ou estado  do plano esta na regiao do plano */

							elsif (pls_obter_se_mun_uf_regiao(null,sg_estado_prest_w,nr_seq_regiao_plano_w) = 'S') then
								ie_area_coberta_p	:= 'S';
								exit;
							end if;
						end if;
					else
						if (cd_municipio_plano_w = cd_municipio_prest_w) then
						ie_area_coberta_p	:= 'S';
						exit;
						/*Se o municipio do plano esta no estado do prestador*/

						elsif (pls_obter_se_municipio_em_uf(cd_municipio_plano_w, sg_estado_prest_w)	= 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						/*Se o municipio do prestador esta no estado do plano*/

						elsif (pls_obter_se_municipio_em_uf(cd_municipio_prest_w, sg_estado_plano_w)	= 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (sg_estado_plano_w = sg_estado_prest_w) and (coalesce(cd_municipio_plano_w::text, '') = '') and (coalesce(cd_municipio_prest_w::text, '') = '') then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (nr_seq_regiao_plano_w = nr_seq_regiao_prest_w) then
							ie_area_coberta_p	:= 'S';
							exit;
						/* Se o municipio ou estado  do plano esta na regiao do prestador */

						elsif (pls_obter_se_mun_uf_regiao(cd_municipio_plano_w,sg_estado_plano_w,nr_seq_regiao_prest_w) = 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						/* Se o municipio ou estado  do plano esta na regiao do plano */

						elsif (pls_obter_se_mun_uf_regiao(cd_municipio_prest_w,sg_estado_prest_w,nr_seq_regiao_plano_w) = 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						/*Se o estado do municipio da cooperativa esta na regiao do prestador */

						elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_plano_w), nr_seq_regiao_prest_w) = 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						/*Se o estado do municipio do prestador esta na regiao do plano */

						elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_prest_w), nr_seq_regiao_plano_w) = 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						end if;
					end if;
				end;
			end loop;
			close c02;
			end;
		end loop;
		close c01;

		if (ie_area_coberta_p = 'N') then
			for c01_w in C01 loop	
				if (coalesce(c01_w.cd_municipio_ibge,'0') <> '0') then
					select	max(ds_unidade_federacao)
					into STRICT	ds_unidade_federacao_prest_w
					from	sus_municipio
					where	cd_municipio_ibge	= c01_w.cd_municipio_ibge;
				end if;		

				/* Verificar are de atuacao do segurado*/

				for c06_w in c06 loop
					if (coalesce(c06_w.cd_municipio_ibge,'0') <> '0') then
						select	max(ds_unidade_federacao)
						into STRICT	ds_unidade_federacao_seg_w
						from	sus_municipio
						where	cd_municipio_ibge	= c06_w.cd_municipio_ibge;
					end if;

					if (c06_w.cd_municipio_ibge IS NOT NULL AND c06_w.cd_municipio_ibge::text <> '') and (c01_w.cd_municipio_ibge IS NOT NULL AND c01_w.cd_municipio_ibge::text <> '') and (c06_w.cd_municipio_ibge = c01_w.cd_municipio_ibge) then
						ie_area_coberta_p	:= 'S';
						exit;	
					elsif (c06_w.sg_estado IS NOT NULL AND c06_w.sg_estado::text <> '') and (c01_w.sg_estado IS NOT NULL AND c01_w.sg_estado::text <> '') and (c06_w.sg_estado = c01_w.sg_estado) then
						ie_area_coberta_p	:= 'S';
						exit;
					elsif (c06_w.nr_seq_regiao = c01_w.nr_seq_regiao) then
						ie_area_coberta_p	:= 'S';
						exit;	
					elsif (pls_obter_se_mun_uf_regiao(c06_w.cd_municipio_ibge, c06_w.sg_estado, c01_w.nr_seq_regiao) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					elsif (pls_obter_se_mun_uf_regiao(c01_w.cd_municipio_ibge, c01_w.sg_estado, c06_w.nr_seq_regiao) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					elsif (ds_unidade_federacao_seg_w	= c01_w.sg_estado) then
						ie_area_coberta_p	:= 'S';
						exit;
					elsif (ds_unidade_federacao_prest_w	= c06_w.sg_estado) then
						ie_area_coberta_p	:= 'S';
						exit;	
					elsif (nr_seq_prestador_p	= c06_w.nr_seq_prestador) and (ie_tipo_processo_w <> 'I')then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;	
				end loop;

				if (ie_area_coberta_p = 'N') then
					/* Verificar area de atuacao do contrato */
					for c07_w in c07 loop
						if (coalesce(c07_w.cd_municipio_ibge,'0') <> '0') then
							select	max(ds_unidade_federacao)
							into STRICT	ds_unidade_federacao_contr_w
							from	sus_municipio
							where	cd_municipio_ibge	= c07_w.cd_municipio_ibge;
						end if;
						
						if (c07_w.cd_municipio_ibge IS NOT NULL AND c07_w.cd_municipio_ibge::text <> '') and (c01_w.cd_municipio_ibge IS NOT NULL AND c01_w.cd_municipio_ibge::text <> '') and (c07_w.cd_municipio_ibge = c01_w.cd_municipio_ibge) then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (c01_w.sg_estado IS NOT NULL AND c01_w.sg_estado::text <> '') and (c07_w.sg_estado IS NOT NULL AND c07_w.sg_estado::text <> '') and (c07_w.sg_estado = c01_w.sg_estado) then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (c07_w.nr_seq_regiao = c01_w.nr_seq_regiao) then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (pls_obter_se_mun_uf_regiao(c07_w.cd_municipio_ibge, c07_w.sg_estado, c01_w.nr_seq_regiao) = 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (pls_obter_se_mun_uf_regiao(c01_w.cd_municipio_ibge, c01_w.sg_estado, c07_w.nr_seq_regiao) = 'S') then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (ds_unidade_federacao_contr_w	= c01_w.sg_estado) then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (ds_unidade_federacao_prest_w	= c07_w.sg_estado) then
							ie_area_coberta_p	:= 'S';
							exit;
						elsif (nr_seq_prestador_p	= c07_w.nr_seq_prestador) and (ie_tipo_processo_w <> 'I')then
							ie_area_coberta_p	:= 'S';
							exit;
						end if;	
					end loop;
				end if;
			end loop;
		end if;
	elsif (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') and (nr_seq_cooperativa_p IS NOT NULL AND nr_seq_cooperativa_p::text <> '') and (coalesce(nr_seq_operadora_p::text, '') = '') then
		select	coalesce(ie_abrangencia,'X')
		into STRICT	ie_abrangencia_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_p;
		
		open C04;
		loop
		fetch C04 into
			cd_municipio_coop_w,
			sg_estado_coop_w,
			nr_seq_regiao_coop_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			open c02;
			loop
			fetch c02 into
				cd_municipio_plano_w,
				sg_estado_plano_w,
				nr_seq_regiao_plano_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				if (ie_abrangencia_w	= 'N') then
					ie_area_coberta_p	:= 'S';
					exit;
				elsif (ie_abrangencia_w	= 'E') then
					if (sg_estado_plano_w = sg_estado_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da operadora executora esta na regiao da cooperativa*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_plano_w, nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da cooperativa esta na regiao da operadora executora*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_coop_w, nr_seq_regiao_plano_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da operadora executora esta no estado da cooperativa */

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_plano_w, sg_estado_coop_w)	= 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da cooperativa esta no estado da operadora executora*/

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_coop_w, sg_estado_plano_w)	= 'S') then
						if (ds_uf_exec_p IS NOT NULL AND ds_uf_exec_p::text <> '') then
							if (sg_estado_plano_w = ds_uf_exec_p) then
								ie_area_coberta_p	:= 'S';
								exit;
							end if;
						else
							ie_area_coberta_p	:= 'S';
							exit;
						end if;
					end if;
				elsif (ie_abrangencia_w	= 'M') then
					if (cd_municipio_plano_w = cd_municipio_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;
				elsif (ie_abrangencia_w	= 'GM') then
					if (nr_seq_regiao_plano_w = nr_seq_regiao_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da operadora executora esta na regiao da cooperativa*/

					elsif (pls_obter_se_mun_uf_regiao(cd_municipio_plano_w, null, nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da cooperativa esta na regiao da operadora executora*/

					elsif (pls_obter_se_mun_uf_regiao(cd_municipio_coop_w, null, nr_seq_regiao_plano_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da operadora executora esta no estado da cooperativa */

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_plano_w, sg_estado_coop_w)	= 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da cooperativa esta no estado da operadora executora*/

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_coop_w, sg_estado_plano_w)	= 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;
				elsif (ie_abrangencia_w	= 'GE') then
					if (nr_seq_regiao_plano_w = nr_seq_regiao_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado do municipio da operadora executora esta na regiao da cooperativa */

					elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_plano_w), nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado do municipio da cooperativa esta na regiao da operadora executora */

					elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_coop_w), nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da operadora executora esta na regiao da cooperativa*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_plano_w, nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da cooperativa esta na regiao da operadora executora*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_coop_w, nr_seq_regiao_plano_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;
				end if;
				end;
			end loop;
			close c02;
			end;
		end loop;
		close C04;
	/*Tratamento realizado para o intercambio entre cooperativas, onde sera verificada a area de atuacao da operadora do beneficiario com a area de atuacao da operadora executora. Este tratamento se faz necessario pois existem operadoras que cadastram um
	unico produto para os beneficiarios eventuais com abrangencia Estadual ou Regional, por exemplo, e nao cadastram a sua area de atucao, sendo assim deve ser verificado a area de atuacao da operadora de origem do beneficiario com a area de atuacao da
	operadora que ira executar o atendimento.*/
	elsif (nr_seq_cooperativa_p IS NOT NULL AND nr_seq_cooperativa_p::text <> '') and (nr_seq_operadora_p IS NOT NULL AND nr_seq_operadora_p::text <> '') and (nr_seq_plano_p IS NOT NULL AND nr_seq_plano_p::text <> '') then
		ie_area_coberta_p	:= 'N';

		select	coalesce(ie_abrangencia,'X')
		into STRICT	ie_abrangencia_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_p;

		open C04;
		loop
		fetch C04 into
			cd_municipio_coop_w,
			sg_estado_coop_w,
			nr_seq_regiao_coop_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			open c05;
			loop
			fetch c05 into
				cd_municipio_oper_w,
				sg_estado_oper_w,
				nr_seq_regiao_oper_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin
				if (ie_abrangencia_w	= 'N') then
					ie_area_coberta_p	:= 'S';
					exit;
				elsif (ie_abrangencia_w	= 'E') then
					if (sg_estado_oper_w = sg_estado_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da operadora executora esta na regiao da cooperativa*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_oper_w, nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da cooperativa esta na regiao da operadora executora*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_coop_w, nr_seq_regiao_oper_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da operadora executora esta no estado da cooperativa */

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_oper_w, sg_estado_coop_w)	= 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da cooperativa esta no estado da operadora executora*/

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_coop_w, sg_estado_oper_w)	= 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;
				elsif (ie_abrangencia_w	= 'M') then
					if (cd_municipio_oper_w = cd_municipio_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;
				elsif (ie_abrangencia_w	= 'GM') then
					if (nr_seq_regiao_oper_w = nr_seq_regiao_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da operadora executora esta na regiao da cooperativa*/

					elsif (pls_obter_se_mun_uf_regiao(cd_municipio_oper_w, null, nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da cooperativa esta na regiao da operadora executora*/

					elsif (pls_obter_se_mun_uf_regiao(cd_municipio_coop_w, null, nr_seq_regiao_oper_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da operadora executora esta no estado da cooperativa */

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_oper_w, sg_estado_coop_w)	= 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o municipio da cooperativa esta no estado da operadora executora*/

					elsif (pls_obter_se_municipio_em_uf(cd_municipio_coop_w, sg_estado_oper_w)	= 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;
				elsif (ie_abrangencia_w	= 'GE') then
					if (nr_seq_regiao_plano_w = nr_seq_regiao_coop_w) then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da operadora executora esta na regiao da cooperativa*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_plano_w, nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado da cooperativa esta na regiao da operadora executora*/

					elsif (pls_obter_se_mun_uf_regiao(null, sg_estado_coop_w, nr_seq_regiao_plano_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado do municipio da operadora executora esta na regiao da cooperativa */

					elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_plano_w), nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					/*Se o estado do municipio da cooperativa esta na regiao da operadora executora */

					elsif (pls_obter_se_mun_uf_regiao(null, obter_uf_ibge(cd_municipio_coop_w), nr_seq_regiao_coop_w) = 'S') then
						ie_area_coberta_p	:= 'S';
						exit;
					end if;
				end if;
				end;
			end loop;
			close c05;
			end;
		end loop;
		close C04;
end if;
end if;
/* Nao pode dar commit nesta procedure */

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_area_atuacao ( nr_seq_plano_p bigint, nr_seq_operadora_p bigint, nr_seq_prestador_p bigint, nr_seq_cooperativa_p bigint, ie_area_coberta_p INOUT text, nr_seq_segurado_p pls_segurado.nr_sequencia%type default null, ds_uf_exec_p sus_municipio.ds_unidade_federacao%type default null, cd_estabelecimento_p bigint default null) FROM PUBLIC;

