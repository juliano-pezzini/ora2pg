-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_reval_usuarios_destinos (()is nr_seq_cpoe_w bigint) RETURNS varchar AS $body$
DECLARE

	ds_retorno_w varchar(1) := 'N';
BEGIN
	if (coalesce(nr_atendimento_ant_w::text, '') = '' and coalesce(cd_medico_ant_w::text, '') = '' and coalesce(nr_seq_reval_rule_ant_w::text, '') = '') then
		ds_retorno_w := 'N';
	elsif (nr_atendimento_ant_w <> nr_atendimento_w or cd_medico_ant_w <> cd_medico_w or nr_seq_reval_rule_ant_w <> nr_seq_reval_rule_w) then
		ds_retorno_w := 'S';
	end if;

	return ds_retorno_w;
end;

procedure cpoe_reval_enviar_comunicado is
nr_seq_item_events_w	number(10);
ds_seq_reval_events_ww	varchar(255);
begin

open c02;
loop
fetch c02 into
	cd_perfil_w,
	nm_usuario_regra_w,
	ie_forma_envio_w,
	ds_email_remetente_w,
	ds_mensagem_w,
    nm_usuario_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

    if (coalesce(philips_param_pck.get_nr_seq_idioma::text, '') = '') then
        CALL philips_param_pck.set_nr_seq_idioma(obter_nr_seq_idioma(nm_usuario_w));
        select  max(a.ds_language_tag)
        into STRICT    ds_locale_w
        from    tasy_idioma a
        where   a.nr_sequencia = philips_param_pck.get_nr_seq_idioma;

        if (ds_locale_w IS NOT NULL AND ds_locale_w::text <> '') then
            CALL pkg_i18n.set_user_locale(ds_locale_w);
        end if;
    end if;

	ds_comunicado_w := wheb_mensagem_pck.get_Texto(1033551,
			'NR_ATENDIMENTO_W=' || nr_atendimento_ant_w ||';'||
			'DS_PACIENTE_W=' || obter_nome_pf_atend(nr_atendimento_ant_w) ||';'||
			'NM_MEDICO_W=' || obter_nome_pf(cd_medico_ant_w) ||';' ||
			'LISTA_ITENS_W=' || ds_itens_w || ';') || chr(13) ||
			ds_mensagem_w;

	if (ie_forma_envio_w = 'C') then

		ds_destino_w:= obter_usuario_pf(cd_medico_ant_w) || ',';

		if (nm_usuario_regra_w IS NOT NULL AND nm_usuario_regra_w::text <> '') then
			ds_destino_w:= ds_destino_w || nm_usuario_regra_w || ',';
		end if;

		insert into comunic_interna(
			ds_titulo,
			ds_comunicado,
			cd_perfil,
			nm_usuario_destino,
			dt_atualizacao,
			dt_comunicado,
			ie_gerencial,
			nm_usuario,
			nr_sequencia,
			ie_geral,
			dt_liberacao,
			ds_perfil_adicional)
		values (
			wheb_mensagem_pck.get_Texto(1033554),
			ds_comunicado_w,
			cd_perfil_w,
			ds_destino_w,
			clock_timestamp(),
			clock_timestamp(),
			'N',
			'TASY',
			nextval('comunic_interna_seq'),
			'N',
			clock_timestamp(),
			cd_perfil_w);

			commit;

	elsif (ie_forma_envio_w = 'E' and (ds_email_remetente_w IS NOT NULL AND ds_email_remetente_w::text <> '') ) then
		
		ds_destino_w := obter_email_usuario(cd_medico_ant_w, obter_usuario_pf(cd_medico_ant_w), cd_estabelecimento_w) || ';';

		open c03;
		loop
		fetch c03 into
			ds_email_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			if (trim(both ds_email_w) <> '') then
				ds_destino_w := ds_destino_w || ds_email_w || ';';
			end if;
			exception
			when others then
				null;
			end;
		end loop;
		close c03;

		if (nm_usuario_regra_w IS NOT NULL AND nm_usuario_regra_w::text <> '') then
			ds_destino_w := ds_destino_w || obter_email_usuario(obter_pf_usuario(nm_usuario_regra_w, 'C'), nm_usuario_regra_w, cd_estabelecimento_w) || ';';	
		end if;

		if (ds_destino_w IS NOT NULL AND ds_destino_w::text <> '') then
			CALL enviar_email(wheb_mensagem_pck.get_Texto(1033554),
					ds_comunicado_w,
					ds_email_remetente_w,
					ds_destino_w,
					'TASY',
					'M');
		end if;
	end if;
	
	ds_seq_reval_events_ww := ds_seq_reval_events_w;
	
	for i in 1..length(ds_seq_reval_events_ww) loop

		if (length(ds_seq_reval_events_ww) > 1) then
			nr_seq_item_events_w := substr(ds_seq_reval_events_ww, 1, position(',' in ds_seq_reval_events_ww) - 1);
			ds_seq_reval_events_ww := substr(ds_seq_reval_events_ww, position(',' in ds_seq_reval_events_ww) + 1, length(ds_seq_reval_events_ww));
			
			if (nr_seq_item_events_w IS NOT NULL AND nr_seq_item_events_w::text <> '') then						
				begin
				
				update cpoe_revalidation_events
				set		dt_envio_comunicado = clock_timestamp()
				where	nr_sequencia = nr_seq_item_events_w;
				
				commit;
					
				exception when others then	
						null;
				end;
			end if;
		end if;
	end loop;
	
	ds_seq_reval_events_w := '';
	
	exception when others then
		ds_stack_w	:= substr(to_char(sqlerrm),1,2000);
	
		select	nextval('log_cpoe_seq')
		into STRICT	nr_seq_log_w
		;

		insert into LOG_CPOE(
				NR_SEQUENCIA   ,
				DT_ATUALIZACAO ,
				NM_USUARIO     ,
				DS_LOG         )
		values (nr_seq_log_w,
				clock_timestamp(),
				'TASY',
				substr('CPOE_REVAL_USUARIOS_DESTINOS - CPOE_REVAL_ENVIAR_COMUNICADO c02: '||ds_stack_w || ' | cd_perfil_w: ' || cd_perfil_w || ' nm_usuario_regra_w: ' || nm_usuario_regra_w ||
											' ie_forma_envio_w: ' || ie_forma_envio_w || ' ds_email_remetente_w: ' || ds_email_remetente_w,1,2000));
		commit;
	end;
end loop;
close c02;

ds_itens_w := '';
end;

begin
  EXECUTE 'ALTER SESSION SET NLS_LANGUAGE=''BRAZILIAN PORTUGUESE''';
  EXECUTE 'ALTER SESSION SET NLS_TERRITORY = ''BRAZIL''';
  EXECUTE 'ALTER SESSION SET NLS_NUMERIC_CHARACTERS='',.''';
  EXECUTE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD/MM/YY''';

select	nextval('log_cpoe_seq')
into STRICT	nr_seq_log_w
;

insert into LOG_CPOE(
		NR_SEQUENCIA,
		DT_ATUALIZACAO,
		NM_USUARIO,
		DS_LOG)
values (nr_seq_log_w,
		clock_timestamp(),
		'TASY',
		'CPOE_REVAL_USUARIOS_DESTINOS - DATA: '||to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss'));
commit;

open c01;
loop
fetch c01 into
	ie_tipo_item_w,
	nr_seq_cpoe_w,
	ds_item_w,
	cd_medico_w,
	nr_atendimento_w,
	nr_seq_reval_rule_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin	
	
	cd_estabelecimento_w := obter_estab_atendimento(nr_atendimento_w);
	
	ie_nova_regra_w := obter_se_nova_regra;	
	
	if (ie_nova_regra_w = 'S') then
		cpoe_reval_enviar_comunicado;
	end if;

	ds_itens_w := ds_itens_w || ds_item_w || chr(10);
			
	ie_tipo_item_ant_w := ie_tipo_item_w;
	nr_seq_cpoe_ant_w := nr_seq_cpoe_w;	
	cd_medico_ant_w := cd_medico_w;
	nr_atendimento_ant_w := nr_atendimento_w;
	nr_seq_reval_rule_ant_w := nr_seq_reval_rule_w;
	ds_seq_reval_events_w := ds_seq_reval_events_w || cpoe_obter_seq_reval_events(nr_seq_cpoe_w, ie_tipo_item_w) || ',';
	
	exception
	when others then
		null;
	end;
end loop;
close c01;

cpoe_reval_enviar_comunicado;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_reval_usuarios_destinos (()is nr_seq_cpoe_w bigint) FROM PUBLIC;

