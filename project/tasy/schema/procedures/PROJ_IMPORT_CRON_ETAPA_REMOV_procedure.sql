-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE proj_import_cron_etapa_remov ( nr_seq_cronograma_p bigint, ds_atividade_p text, cd_classificacao_p text, dt_inicio_prev_p text, dt_fim_prev_p text, ie_fase_p text, qt_hora_prev_p text, nr_seq_etapa_p text, cd_funcao_p text, nm_usuario_p text, nr_seq_id_p bigint, nr_seq_uid_p bigint, ie_regra_ini_fim_p text, nr_predecessora_p text, ds_etapa_p text default '', ie_milestone_p text default null, ie_checkpoint_p text default null, nr_seq_area_fase_p bigint default null, nr_seq_etapa_out_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE


dt_inicio_prev_w	timestamp;
dt_fim_prev_w		timestamp;
ie_fase_w		varchar(1);
qt_hora_prev_w		double precision;
qt_nivel_w		bigint;
nr_seq_superior_w	bigint;
nr_seq_apres_w		bigint;
nr_seq_etapa_w		bigint;
ie_modulo_w		varchar(01);
cd_funcao_w		integer;
nr_predecessora_w	bigint;
ie_regra_ini_fim_w	varchar(1);
qt_funcao_w		bigint;
qt_etapa_w		bigint;
nr_seq_etapa_out_w	bigint;
controle_etapa_w  bigint;
controle_etapa2_w  bigint;


BEGIN

	ie_regra_ini_fim_w := ie_regra_ini_fim_p;
	ie_fase_w := ie_fase_p;



select	to_date(substr(dt_inicio_prev_p,1,10) || ' ' ||
		substr(dt_inicio_prev_p,12,19),'yyyy-mm-dd hh24:mi:ss'),
	to_date(substr(dt_fim_prev_p,1,10) || ' ' ||
		substr(dt_fim_prev_p,12,19),'yyyy-mm-dd hh24:mi:ss'),
	coalesce(proj_converte_hora_tempo_cron(qt_hora_prev_p),0),
	CTB_Obter_Nivel_Classif_Conta(cd_classificacao_p),
	'N'
into STRICT	dt_inicio_prev_w,
	dt_fim_prev_w,
	qt_hora_prev_w,
	qt_nivel_w,
	ie_modulo_w
;

if (qt_nivel_w = 1) then
	nr_seq_superior_w	:= null;
elsif (qt_nivel_w = 2) then
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_superior_w
	from	proj_cron_etapa a
	where	a.nr_seq_cronograma = nr_seq_cronograma_p
	and	ctb_obter_nivel_classif_conta(a.cd_classificacao) = 1;
elsif (qt_nivel_w >= 3) then
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_superior_w
	from	proj_cron_etapa a
	where	a.nr_seq_cronograma = nr_seq_cronograma_p
	and	a.cd_classificacao = substr(proj_etapa_superior_classif(cd_classificacao_p),1,255);
end if;

select	coalesce(max(nr_seq_apres),0) + 10
into STRICT	nr_seq_apres_w
from	proj_cron_etapa
where	CTB_Obter_Nivel_Classif_Conta(cd_classificacao) = qt_nivel_w
and	nr_seq_cronograma		= nr_seq_cronograma_p
and	nr_seq_superior		= nr_seq_superior_w;

nr_seq_etapa_w	:= '';
cd_funcao_w	:= '';



if (nr_predecessora_p IS NOT NULL AND nr_predecessora_p::text <> '') and (position(';' in nr_predecessora_p) > 0) then
	select	substr(nr_predecessora_p,1,position(';' in nr_predecessora_p)-1)
	into STRICT	nr_predecessora_w
	;
else
	nr_predecessora_w := nr_predecessora_p;
end if;

select	max(nr_id_project)
into STRICT	nr_predecessora_w
from	w_proj_cron_project
where	nr_uid_project = nr_predecessora_w;

-- Controle para não inserir o mesmo registro para o mesmo cronograma
select	coalesce(max(nr_sequencia), 0)
into STRICT 	controle_etapa_w
from 	proj_cron_etapa_remov
where 	ds_atividade = ds_atividade_p
and 	dt_inicio_prev = dt_inicio_prev_w
and 	nr_seq_cronograma = nr_seq_cronograma_p;

--Controle somente para não adicionar as etapas como removidas quando o cronograma for importado pela primeira vez
select	coalesce(max(nr_sequencia), 0)
into STRICT 	controle_etapa2_w
from 	proj_cron_etapa
where 	ds_atividade = ds_atividade_p
and 	dt_inicio_prev = dt_inicio_prev_w
and 	nr_seq_cronograma = nr_seq_cronograma_p;

if (controle_etapa_w = 0 and controle_etapa2_w > 0) then

	select	nextval('proj_cron_etapa_remov_seq')
	into STRICT	nr_seq_etapa_out_w
	;

	nr_seq_etapa_out_p := nr_seq_etapa_out_w;


	insert into proj_cron_etapa_remov(
		nr_sequencia,
		nr_seq_cronograma,
		dt_atualizacao,
		nm_usuario,
		ds_atividade,
		cd_classificacao,
		dt_inicio_prev,
		dt_fim_prev,
		ie_fase,
		ie_modulo,
		nr_seq_apres,
		qt_hora_prev,
		pr_etapa,
		nr_seq_superior,
		nr_seq_etapa,
		cd_funcao,
		nr_seq_interno,
		nr_predecessora,
		pr_consultoria,
		ie_regra_ini_fim,
		ds_etapa,
		ie_milestone,
		ie_checkpoint,
		nr_seq_area_fase,
		ie_situacao)
	values (nr_seq_etapa_out_w,
		nr_seq_cronograma_p,
		clock_timestamp(),
		nm_usuario_p,
		ds_atividade_p,
		cd_classificacao_p,
		dt_inicio_prev_w,
		dt_fim_prev_w,
		ie_fase_w,
		ie_modulo_w,
		nr_seq_apres_w,
		qt_hora_prev_w,
		0,
		nr_seq_superior_w,
		nr_seq_etapa_p,
		cd_funcao_w,
		nr_seq_id_p,
		nr_predecessora_w,
		0,
		ie_regra_ini_fim_w,
		ds_etapa_p,
		ie_milestone_p,
		ie_checkpoint_p,
		CASE WHEN coalesce(nr_seq_area_fase_p, 0)=0 THEN  null  ELSE nr_seq_area_fase_p END ,
		'A');
end if;

commit;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE proj_import_cron_etapa_remov ( nr_seq_cronograma_p bigint, ds_atividade_p text, cd_classificacao_p text, dt_inicio_prev_p text, dt_fim_prev_p text, ie_fase_p text, qt_hora_prev_p text, nr_seq_etapa_p text, cd_funcao_p text, nm_usuario_p text, nr_seq_id_p bigint, nr_seq_uid_p bigint, ie_regra_ini_fim_p text, nr_predecessora_p text, ds_etapa_p text default '', ie_milestone_p text default null, ie_checkpoint_p text default null, nr_seq_area_fase_p bigint default null, nr_seq_etapa_out_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

