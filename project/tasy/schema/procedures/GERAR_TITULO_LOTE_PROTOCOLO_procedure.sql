-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_lote_protocolo ( nr_seq_lote_protocolo_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_primeiro_vencimento_p timestamp, dt_emissao_p timestamp, vl_total_conta_p bigint, vl_conta_p bigint, tx_juros_p bigint, cd_tipo_taxa_juro_p bigint, tx_multa_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecip_p bigint, nr_documento_p bigint, nr_sequencia_doc_p bigint, nr_nota_fiscal_p bigint, cd_serie_p text, nm_usuario_p text, ie_commit_p text, NR_SEQ_TRANS_FINANC_P bigint default null, ds_observacao_tit_p text default null) AS $body$
DECLARE


nr_seq_protocolo_w	bigint;
vl_protocolo_w		double precision;
vl_despesa_acessoria_w	double precision;
ie_data_vencimento_w	varchar(10);
ie_titulo_lote_w	varchar(1);
dt_vencimento_w		timestamp;
cd_medico_protocolo_w	protocolo_convenio.cd_medico_protocolo%type;
cd_cgc_procedencia_w 	protocolo_convenio.cd_cgc_procedencia%type;
cd_cgc_w		varchar(14);
cd_pessoa_fisica_w	varchar(10);

C01 CURSOR FOR
SELECT	a.nr_seq_protocolo,
	obter_total_protocolo(a.nr_seq_protocolo),
	CASE WHEN ie_data_vencimento_w='S' THEN a.dt_vencimento WHEN ie_data_vencimento_w='E' THEN a.dt_entrega_convenio  ELSE null END ,
	CASE WHEN coalesce(c.ie_protocolo_individual,'N')='S' THEN cd_medico_protocolo  ELSE null END ,
	CASE WHEN coalesce(c.ie_protocolo_individual,'N')='S' THEN cd_cgc_procedencia  ELSE null END
from  	protocolo_convenio a,
	lote_protocolo b,
	convenio_estabelecimento c
where 	b.nr_sequencia		= a.nr_seq_lote_protocolo
and	c.cd_convenio		= a.cd_convenio
and	c.cd_estabelecimento 	= a.cd_estabelecimento
and   	b.nr_sequencia		= nr_seq_lote_protocolo_p
order by a.nr_seq_protocolo;


BEGIN
cd_cgc_w 		:= cd_cgc_p;
cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;

ie_data_vencimento_w := obter_param_usuario(85, 26, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_data_vencimento_w);
ie_titulo_lote_w := obter_param_usuario(-80, 98, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_titulo_lote_w);

if (coalesce(ie_titulo_lote_w,'N') = 'N') then

	open C01;
	loop
	fetch C01 into
		nr_seq_protocolo_w,
		vl_protocolo_w,
		dt_vencimento_w,
		cd_medico_protocolo_w,
		cd_cgc_procedencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		/*ahoffelder - OS 406571 - 01/02/2012 - coloquei esse delete porque senão o sistema tenta
							 gerar todos os títulos com o valor total do lote ao invés de gerar com o valor do protocolo */
		delete	from vencimento_titulo
		where	nr_seq_protocolo	= nr_seq_protocolo_w;

		if (cd_medico_protocolo_w IS NOT NULL AND cd_medico_protocolo_w::text <> '') then
			cd_cgc_w := null;
		elsif (cd_cgc_procedencia_w IS NOT NULL AND cd_cgc_procedencia_w::text <> '') then
			cd_pessoa_fisica_w := null;
		end if;


		 CALL gerar_titulo(cd_estabelecimento_p,
			coalesce(cd_medico_protocolo_w,cd_pessoa_fisica_w),
			coalesce(cd_cgc_procedencia_w,cd_cgc_w),
			null,
			null,
			nr_seq_protocolo_w,
			cd_condicao_pagamento_p,
			coalesce(dt_vencimento_w,dt_primeiro_vencimento_p),
			dt_emissao_p,
			vl_protocolo_w,
			vl_protocolo_w,
			tx_juros_p,
			cd_tipo_taxa_juro_p,
			tx_multa_p,
			cd_tipo_taxa_multa_p,
			tx_desc_antecip_p,
			nr_documento_p,
			nr_sequencia_doc_p,
			nr_nota_fiscal_p,
			cd_serie_p,
			nm_usuario_p,
			'N');

			CALL gerar_etapa_alta_paciente(null,nr_seq_protocolo_w,nm_usuario_p);


			if (coalesce(ds_observacao_tit_p,'X') <> 'X') then
				update	titulo_receber a
				set	a.ds_observacao_titulo	= ds_observacao_tit_p
				where	coalesce(a.ds_observacao_titulo::text, '') = ''
				and 	coalesce(a.ie_situacao,'0') not in ('3', '5')
				and (a.nr_seq_protocolo = nr_seq_protocolo_w
					 or a.nr_seq_lote_prot = nr_seq_lote_protocolo_p);
			end if;

		end;
	end loop;
	close C01;
else

	select	sum(obter_total_protocolo(a.nr_seq_protocolo))
	into STRICT	vl_protocolo_w
	from	protocolo_convenio a
	where	a.nr_seq_lote_protocolo	= nr_seq_lote_protocolo_p;

	select	coalesce(max(vl_despesa_acessoria),0)
	into STRICT	vl_despesa_acessoria_w
	from	nota_fiscal
	where	nr_nota_fiscal = nr_nota_fiscal_p
	and	cd_serie_nf = cd_serie_p
	and	cd_estabelecimento = cd_estabelecimento_p;

	CALL GERAR_TITULO_LOTE_PROT(cd_estabelecimento_p,
			cd_pessoa_fisica_p,
			cd_cgc_p,
			nr_seq_lote_protocolo_p,
			cd_condicao_pagamento_p,
			dt_primeiro_vencimento_p,
			dt_emissao_p,
			vl_protocolo_w + vl_despesa_acessoria_w,
			tx_juros_p,
			cd_tipo_taxa_juro_p,
			tx_multa_p,
			cd_tipo_taxa_multa_p,
			tx_desc_antecip_p,
			nr_documento_p,
			nr_sequencia_doc_p,
			nr_nota_fiscal_p,
			cd_serie_p,
			nm_usuario_p,
			NR_SEQ_TRANS_FINANC_P);

			if (coalesce(ds_observacao_tit_p,'X') <> 'X') then
				update	titulo_receber a
				set	a.ds_observacao_titulo	= ds_observacao_tit_p
				where	coalesce(a.ds_observacao_titulo::text, '') = ''
				and 	coalesce(a.ie_situacao,'0') not in ('3', '5')
				and (a.nr_seq_protocolo = nr_seq_protocolo_w
					 or a.nr_seq_lote_prot = nr_seq_lote_protocolo_p);
			end if;

			CALL gerar_etapa_alta_paciente(null,0,nm_usuario_p,nr_seq_lote_protocolo_p);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_lote_protocolo ( nr_seq_lote_protocolo_p bigint, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_atendimento_p bigint, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_primeiro_vencimento_p timestamp, dt_emissao_p timestamp, vl_total_conta_p bigint, vl_conta_p bigint, tx_juros_p bigint, cd_tipo_taxa_juro_p bigint, tx_multa_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecip_p bigint, nr_documento_p bigint, nr_sequencia_doc_p bigint, nr_nota_fiscal_p bigint, cd_serie_p text, nm_usuario_p text, ie_commit_p text, NR_SEQ_TRANS_FINANC_P bigint default null, ds_observacao_tit_p text default null) FROM PUBLIC;

