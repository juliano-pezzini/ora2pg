-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE register_vol_infusion_pump (nr_seq_bomba_interface_p bomba_infusao.nr_seq_bomba_interface%type, status_p bomba_infusao.ie_status%type, ie_intervalo_p bigint default 1, ie_chart_now_p bigint default 0) AS $body$
DECLARE

													
  dt_registro_volume_v   bomba_infusao.dt_registro_volume%type;
  nr_seq_mat_cpoe_v      bomba_infusao.nr_seq_mat_cpoe%type;
  nr_atendimento_v       bomba_infusao.nr_atendimento%type;
  nr_seq_agente_v        bomba_infusao.nr_seq_agente%type;
  nr_seq_bomba_infusao_v bomba_infusao.nr_sequencia%type;
  nm_usuario_v           bomba_infusao.nm_usuario%type;
  nr_prescricao_v        prescr_medica.nr_prescricao%type;
  nr_seq_solucao_v       bomba_infusao.nr_seq_solucao%type;
  qt_volume_adep_v       prescr_solucao.qt_volume_adep%type;
  qt_vol_parcial_v       bomba_infusao_interface.qt_volume%type;
  intervalo_param_v      bomba_infusao_autocharting.qt_tempo%type;
  nr_sequencia_trans_v   bomba_infusao_transicao.nr_sequencia%type;
  cd_unidade_basica_v    bomba_infusao_interface.cd_unidade_basica%type;
  cd_unidade_compl_v     bomba_infusao_interface.cd_unidade_compl%type;
  ie_status_v            bomba_infusao_interface.ie_status%type;
  qt_velocidade_v        bomba_infusao_interface.qt_velocidade%type;
  ds_medicamento_v       bomba_infusao_interface.ds_medicamento%type;
  cd_funcao_v            bomba_infusao_autocharting.cd_funcao%type;
  intervalo_v            bigint;
  ie_continue_v          varchar(1) := 'S';
  ds_history_v           varchar(15);

  procedure process_register is
;
BEGIN
    if (coalesce(nr_seq_agente_v::text, '') = '') then
		begin
			select distinct nr_seq_solucao, qt_volume_adep
					into STRICT nr_seq_solucao_v, qt_volume_adep_v
					from table(valores_adep_pck.get_solucao(nr_seq_mat_cpoe_v,
																																													nr_prescricao_v,
																																													nr_seq_solucao_v));
		exception
			when no_data_found then
					nr_seq_solucao_v := 0;
					qt_volume_adep_v  := 0;										
		end;
    end if;
	
    qt_vol_parcial_v := get_volume_parcial_interface(nr_seq_mat_cpoe_v, nr_seq_agente_v);

    if (cd_funcao_v <> -2025) then
      CALL registrar_volume_parcial_sol(nr_atendimento_p    => nr_atendimento_v,
                                   nr_prescricao_p     => nr_prescricao_v,
                                   nr_seq_solucao_p    => nr_seq_solucao_v,
                                   ie_tipo_solucao_p   => 1,
                                   qt_volume_p         => qt_vol_parcial_v,
                                   dt_volume_p         => clock_timestamp(),
                                   ds_justificativa_p  => null,
                                   nm_usuario_p        => nm_usuario_v,
                                   qt_volume_fase_p    => qt_volume_adep_v,
                                   seq_bomba_infusao_p => nr_seq_bomba_infusao_v);
    end if;

    update bomba_infusao
       set dt_registro_volume = clock_timestamp()
     where nr_sequencia = nr_seq_bomba_infusao_v;

    begin
      select bii.cd_unidade_basica,
             bii.cd_unidade_compl,
             bii.ie_status,
             bii.qt_velocidade,
             bii.ds_medicamento
        into STRICT cd_unidade_basica_v,
             cd_unidade_compl_v,
             ie_status_v,
             qt_velocidade_v,
             ds_medicamento_v
        from bomba_infusao_interface bii
       where bii.nr_sequencia = nr_seq_bomba_interface_p;
    exception
      when no_data_found then
        null;
    end;

    select nextval('bomba_infusao_transicao_seq')
      into STRICT nr_sequencia_trans_v
;

    insert into bomba_infusao_transicao(nr_sequencia,
       cd_unidade_basica,
       cd_unidade_compl,
       dt_transicao,
       ie_status,
       qt_velocidade,
       ds_medicamento,
       nr_seq_bomba_interface,
       nr_seq_bomba_infusao,
       qt_volume,
       ds_campo,
       nm_usuario,
       dt_atualizacao,
       nm_usuario_nrec,
       dt_atualizacao_nrec)
    values (nr_sequencia_trans_v,
       cd_unidade_basica_v,
       cd_unidade_compl_v,
       clock_timestamp(),
       ie_status_v,
       qt_velocidade_v,
       ds_medicamento_v,
       nr_seq_bomba_interface_p,
       nr_seq_bomba_infusao_v,
       qt_vol_parcial_v,
       ds_history_v,
       nm_usuario_v,
       clock_timestamp(),
       nm_usuario_v,
       clock_timestamp());
    commit;
  end;

begin
  if (coalesce(status_p::text, '') = '') then
    ie_continue_v := 'N';
  elsif (status_p <> 'IP' and status_p <> 'IS' and status_p <> 'BL' and
        status_p <> 'TC' and status_p <> 'KV' and status_p <> 'KT') then
    ie_continue_v := 'N';
  end if;

  if (ie_continue_v = 'S') then
    begin
      select coalesce(bi.dt_registro_volume, bi.dt_bomba_infusao) dt_registro_volume,
             bi.nr_seq_mat_cpoe,
             bi.nr_seq_agente,
             bi.nr_seq_solucao,
             bi.nm_usuario,
             bi.nr_atendimento,
             bi.nr_sequencia,
             case
               when(bi.nr_seq_agente IS NOT NULL AND bi.nr_seq_agente::text <> '' AND bi.nr_seq_equip_cirurgia IS NOT NULL AND bi.nr_seq_equip_cirurgia::text <> '') then
                -2025
               else
                1113
             end cd_funcao
        into STRICT dt_registro_volume_v,
             nr_seq_mat_cpoe_v,
             nr_seq_agente_v,
             nr_seq_solucao_v,
             nm_usuario_v,
             nr_atendimento_v,
             nr_seq_bomba_infusao_v,
             cd_funcao_v
        from bomba_infusao bi
       where bi.nr_seq_bomba_interface = nr_seq_bomba_interface_p
         and bi.ie_ativo = 'S';
			
	  if (cd_funcao_v <> -2025) then
		   select max(a.nr_prescricao)
			into STRICT nr_prescricao_v
			from prescr_medica a, prescr_material b
		   where a.nr_prescricao = b.nr_prescricao
			 and a.nr_atendimento = nr_atendimento_v
			 and b.nr_seq_mat_cpoe = nr_seq_mat_cpoe_v
			 and a.dt_validade_prescr >= clock_timestamp()
			 and a.dt_inicio_prescr <= clock_timestamp();

		  if (coalesce(nr_prescricao_v::text, '') = '') then
			select a.nr_prescricao
			  into STRICT nr_prescricao_v
			  from prescr_medica a, prescr_material b
			 where a.nr_prescricao = b.nr_prescricao
			   and a.nr_atendimento = nr_atendimento_v
			   and b.nr_seq_mat_cpoe = nr_seq_mat_cpoe_v
			   and a.dt_validade_prescr < clock_timestamp()
			 order by a.dt_validade_prescr desc LIMIT 1;
		  end if;
	  end if;

      if (coalesce(dt_registro_volume_v::text, '') = '') then
        ie_continue_v := 'N';
      end if;
    exception
      when no_data_found then
        ie_continue_v := 'N';
    end;
  end if;

  if (ie_continue_v = 'S' and ie_intervalo_p > 0 and ie_chart_now_p = 0) then
    select (clock_timestamp() - dt_registro_volume_v) * 24 * 60
      into STRICT intervalo_v
;

    select coalesce(max(bia.qt_tempo), 30) qt_tempo
      into STRICT intervalo_param_v
      from bomba_infusao_autocharting bia
     where bia.cd_funcao = cd_funcao_v
       and bia.cd_setor_atendimento =
           obter_setor_atendimento(nr_atendimento_v);

    if (intervalo_v < intervalo_param_v) then
      ie_continue_v := 'N';
    end if;
  end if;

  if (ie_continue_v = 'S' and ie_chart_now_p = 1) then
	ds_history_v := 'CHART_NOW';
  else
	ds_history_v := 'AUTO_CHARTING';
  end if;

  if (ie_continue_v = 'S') then
    process_register;
  end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE register_vol_infusion_pump (nr_seq_bomba_interface_p bomba_infusao.nr_seq_bomba_interface%type, status_p bomba_infusao.ie_status%type, ie_intervalo_p bigint default 1, ie_chart_now_p bigint default 0) FROM PUBLIC;

