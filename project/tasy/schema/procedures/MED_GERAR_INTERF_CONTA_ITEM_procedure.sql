-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE med_gerar_interf_conta_item ( nr_seq_protocolo_p bigint, nr_seq_envio_convenio_p bigint, cd_convenio_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_cgc_hospital_p text, cd_cgc_convenio_p text, cd_interno_p text, nm_usuario_p text, ie_excluir_hon_med_p text, ie_excluir_hon_terc_p text) AS $body$
DECLARE

 
NR_SEQUENCIA_W         		 bigint;
NR_SEQ_ATEPACU_W         		 bigint;
NR_SEQ_PROC_PACOTE_W      		 bigint;
NR_SEQ_ITEM_W               bigint;
IE_TIPO_ITEM_W               smallint;
CD_ITEM_W                 bigint;
IE_ORIGEM_PROCED_W             bigint;
CD_ITEM_CONVENIO_W             varchar(20);
DS_ITEM_W                 varchar(240);
QT_ITEM_W                 double precision;
CD_UNIDADE_MEDIDA_W            varchar(30);
DT_ITEM_W                 timestamp;
VL_UNITARIO_ITEM_W             double precision;
VL_TOTAL_ITEM_W              double precision;
QT_CH_ITEM_W                bigint;
VL_UNITARIO_CH_W              double precision;
CD_MEDICO_EXECUTOR_W            varchar(10);
CD_MEDICO_EXEC_CONV_W           varchar(20);
NM_MEDICO_EXECUTOR_W            varchar(60);
NR_CRM_EXECUTOR_W             varchar(20);
UF_CRM_EXECUTOR_W             varchar(2);
NR_CPF_EXECUTOR_W             varchar(11);
CD_FUNCAO_EXECUTOR_W            smallint;
NR_PORTE_ANESTESICO_W           smallint;
PR_FUNCAO_PARTICIPANTE_W          double precision;
PR_VIA_ACESSO_W              double precision;
PR_HORA_EXTRA_W              double precision;
IE_VIA_ACESSO_W              varchar(1);
CD_CLASSIF_SETOR_W             varchar(2);
CD_SETOR_ATENDIMENTO_W           integer;
CD_GRUPO_GASTO_W              varchar(10);
CD_BRASINDICE_W              varchar(16);
CD_PROCEDIMENTO_REF_W           bigint;
CD_PROC_REF_CONV_W             varchar(20);
IE_RESPONSAVEL_CREDITO_W          varchar(5);
IE_EMITE_CONTA_HOSP_W       	  	varchar(3);
IE_EMITE_CONTA_W        	  	varchar(3);
IE_TOTAL_INTERF_W			  		smallint;
VL_HONORARIO_W               double precision;
CD_ESPECIALIDADE_W             integer;
CD_FUNCAO_ESPEC_MED_W           integer;
CD_CGC_CPF_RESP_CRED_W           varchar(14);
CD_CGC_PRESTADOR_W			varchar(14);
CD_INTERNO_TERC_W            varchar(15);
dt_prescricao_w				timestamp;

dt_autorizacao_w			timestamp;
nr_doc_convenio_w			varchar(20);
nr_seq_autorizacao_w			bigint;
dt_entrada_w				timestamp;
dt_alta_w				timestamp;
dt_entrada_unidade_w			timestamp;
dt_saida_unidade_w			timestamp;
VL_FILME_W               	double precision;
NR_PRESCRICAO_W           	bigint;

CD_MEDICO_REQ_W            	varchar(10);
NR_CRM_REQUISITANTE_W          varchar(20);
CD_MEDICO_REQAUT_W           	varchar(10);
NR_ATENDIMENTO_W		bigint;

vl_custo_oper_w		double precision;
qt_filme_w			double precision;
ie_video_w			varchar(1);
ie_tipo_atendimento_w	smallint;
cd_simpro_w			bigint 	:= 0;
ie_agrup_item_interf_w			varchar(1);
vl_total_matmed_ipe_w	double precision;
vl_total_mat_ipe_w	double precision;
vl_total_med_ipe_w	double precision;
vl_contraste_int_ipe_w	double precision;
vl_ch_ipe_w		double precision;
qt_ch_ipe_w		integer;

 
CD_TIPO_ITEM_INTERF_W		smallint;
CD_AREA_PROC_W			bigint;
CD_ESPECIALIDADE_PROC_W		bigint;
CD_GRUPO_PROC_W			bigint;
CD_GRUPO_MAT_W			smallint;
CD_SUBGRUPO_MAT_W			smallint;
CD_CLASSE_MAT_W			integer;
CD_TIPO_PROCEDIMENTO_W		smallint;
cd_senha_guia_w			varchar(20);

 
C02 CURSOR FOR 
SELECT 	a.nr_sequencia, 
	1, 
	g.cd_item_convenio, 
	1, 
	g.cd_item_convenio, 
	f.ds_item, 
	a.qt_item, 
	'Un', 
	trunc(a.dt_atualizacao), 
	round(dividir(a.vl_item, a.qt_item)), 
	a.vl_item, 
	0, 
	0, 
	b.cd_medico, 
	b.cd_medico, 
	SUBSTR(OBTER_NOME_PF(c.CD_PESSOA_FISICA), 0, 60) nm_pessoa_fisica, 
	d.nr_crm, 
	substr(d.uf_crm,1,2) uf_crm, 
	c.nr_cpf, 
	null, 
	0, 
	0, 
	0, 
	0, 
	' ', 
	null, 
	null, 
	null, 
	null, 
	g.cd_item_convenio, 
	g.cd_item_convenio, 
	null, 
	null, 
	null, 
	a.vl_item, 
	null, 
	null, 
	null, 
	null, 
	null, 
	null, 
	null, 
	null, 
	null, 
	null, 
	a.nr_atendimento, 
	null, 
	null, 
	null, 
	0, 
	0, 
	0, 
	0, 
	null 
from 	med_item_convenio g, 
	med_item f, 
	medico d, 
	pessoa_fisica c, 
	med_faturamento a, 
	med_prot_convenio b 
where	b.nr_sequencia		= a.nr_seq_protocolo 
and	b.cd_medico		= c.cd_pessoa_fisica 
and	c.cd_pessoa_fisica	= d.cd_pessoa_fisica 
and	a.nr_seq_item		= f.nr_sequencia 
and	a.nr_seq_item		= g.nr_seq_item 
and	g.nr_seq_plano	= b.nr_seq_plano 
and	a.nr_seq_protocolo	= nr_seq_protocolo_p 
and	a.nr_atendimento	= nr_atendimento_p 
order by a.nr_sequencia;

 

BEGIN 
 
nr_doc_convenio_w	:= null;
 
/* Dados do convenio */
 
select	ie_agrup_item_interf 
into STRICT	ie_agrup_item_interf_w 
from	convenio 
where	cd_convenio = cd_convenio_p;
 
CD_MEDICO_REQ_W		:= NULL;
CD_MEDICO_REQAUT_W	:= NULL;
cd_senha_guia_w		:= null;
ie_tipo_atendimento_w	:= 0;
 
/* Buscar data entrada do paciente */
 
begin 
select	a.dt_entrada, 
	a.dt_saida 
into STRICT	dt_entrada_w, 
	dt_alta_w 
from	med_atendimento a 
where	a.nr_atendimento 	= nr_atendimento_p;
end;
 
ie_video_w		:= 'N';
qt_filme_w		:= 0;
vl_custo_oper_w		:= 0;
vl_total_matmed_ipe_w	:= 0;
vl_total_mat_ipe_w	:= 0;
vl_total_med_ipe_w	:= 0;
vl_contraste_int_ipe_w	:= 0;
 
 
/* Tratar procedimentos */
 
OPEN C02;
LOOP 
FETCH C02 	into 
		NR_SEQ_ITEM_W, 
		IE_TIPO_ITEM_W, 
		CD_ITEM_W, 
		IE_ORIGEM_PROCED_W, 
		CD_ITEM_CONVENIO_W, 
		DS_ITEM_W, 
		QT_ITEM_W, 
		CD_UNIDADE_MEDIDA_W, 
		DT_ITEM_W, 
		VL_UNITARIO_ITEM_W, 
		VL_TOTAL_ITEM_W, 
		QT_CH_ITEM_W, 
		VL_UNITARIO_CH_W, 
		CD_MEDICO_EXECUTOR_W, 
		CD_MEDICO_EXEC_CONV_W, 
		NM_MEDICO_EXECUTOR_W, 
		NR_CRM_EXECUTOR_W, 
		UF_CRM_EXECUTOR_W, 
		NR_CPF_EXECUTOR_W, 
		CD_FUNCAO_EXECUTOR_W, 
		NR_PORTE_ANESTESICO_W, 
		PR_FUNCAO_PARTICIPANTE_W, 
		PR_VIA_ACESSO_W, 
		PR_HORA_EXTRA_W, 
		IE_VIA_ACESSO_W, 
		CD_CLASSIF_SETOR_W, 
		CD_SETOR_ATENDIMENTO_W, 
		CD_GRUPO_GASTO_W, 
		CD_BRASINDICE_W, 
		CD_PROCEDIMENTO_REF_W, 
		CD_PROC_REF_CONV_W, 
		IE_RESPONSAVEL_CREDITO_W, 
		ie_emite_conta_w, 
		ie_emite_conta_hosp_w, 
		VL_HONORARIO_W, 
		nr_seq_proc_pacote_w, 
	 	cd_especialidade_w, 
	 	cd_funcao_espec_med_w, 
		CD_CGC_CPF_RESP_CRED_W, 
		CD_CGC_PRESTADOR_W, 
		dt_prescricao_w, 
		nr_doc_convenio_w, 
		nr_seq_autorizacao_w, 
		vl_filme_w, 
		nr_prescricao_w, 
		nr_atendimento_w, 
		ie_video_w, 
		vl_custo_oper_w, 
		CD_TIPO_ITEM_INTERF_W, 
		CD_AREA_PROC_W, 
		CD_ESPECIALIDADE_PROC_W, 
		CD_GRUPO_PROC_W, 
		cd_tipo_procedimento_w, 
		nr_seq_atepacu_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
   		BEGIN 
		/* Buscar dados da atend paciente unidade */
 
		select dt_entrada, 
			dt_saida 
		into STRICT	dt_entrada_unidade_w, 
			dt_saida_unidade_w 
		from	med_atendimento 
		where	nr_atendimento	= nr_atendimento_p;
 
		dt_autorizacao_w	:= dt_entrada_w;
 
		/* Buscar sequence */
 
		select nextval('w_interf_conta_item_seq') 
		into STRICT	 nr_sequencia_w 
		;
 
		ie_total_interf_w	:= null;
		cd_interno_terc_w	:= null;
		cd_medico_req_w		:= cd_medico_executor_w;
 
		if (cd_medico_req_w IS NOT NULL AND cd_medico_req_w::text <> '') then 
			begin 
			select	nr_crm 
			into STRICT	nr_crm_requisitante_w 
			from	medico 
			where	cd_pessoa_fisica = cd_medico_req_w;
			exception	 
				when others then 
				nr_crm_requisitante_w	:= null;
			end;
		end if;		
 
		/* Gravar Procedimentos */
 
		insert into w_interf_conta_item( 
				nr_sequencia, cd_tipo_registro, nr_seq_registro, nr_seq_interface, 
	 			nr_remessa, nr_atendimento, nr_interno_conta, nr_seq_item, 
	 			ie_tipo_item, cd_item, ie_origem_proced, cd_item_convenio, 
	 			ds_item, qt_item, cd_unidade_medida, dt_item, 
	 			vl_unitario_item, vl_total_item, qt_ch_item, vl_unitario_ch, 
	 			cd_medico_executor, cd_medico_exec_conv, nm_medico_executor, nr_crm_executor, 
	 			uf_crm_executor, nr_cpf_executor, cd_funcao_executor, nr_porte_anestesico, 
	 			pr_funcao_participante, pr_via_acesso, pr_hora_extra, ie_via_acesso, 
	 			cd_classif_setor, cd_setor_atendimento, cd_grupo_gasto, cd_brasindice, 
	 			cd_procedimento_ref, cd_proc_ref_conv, nr_seq_protocolo, cd_convenio, 
	 			cd_cgc_hospital, cd_cgc_convenio, cd_interno, ie_responsavel_credito, 
				ie_emite_conta, ie_total_interf, vl_honorario, nr_seq_proc_pacote, 
	 			cd_especialidade, cd_funcao_espec_med, dt_prescricao, dt_autorizacao, 
				cd_cgc_cpf_resp_cred, cd_cgc_prestador, vl_filme, nr_doc_convenio, 
				nr_prescricao, cd_medico_req, nr_crm_requisitante, vl_custo_oper, 
				qt_filme, ie_video, CD_TIPO_ITEM_INTERF,CD_AREA_PROC, 
				CD_ESPECIALIDADE_PROC,CD_GRUPO_PROC,cd_tipo_procedimento,cd_senha_guia, 
				dt_entrada_unidade,dt_saida_unidade, nm_usuario) 
		values ( 
	 			nr_sequencia_w, 4, 1, 1, 
	 			nr_seq_envio_convenio_p, nr_atendimento_p, nr_interno_conta_p, NR_SEQ_ITEM_W, 
				IE_TIPO_ITEM_W, CD_ITEM_W, IE_ORIGEM_PROCED_W, CD_ITEM_CONVENIO_W, 
				substr(DS_ITEM_W,1,50), QT_ITEM_W, CD_UNIDADE_MEDIDA_W, DT_ITEM_W, 
				VL_UNITARIO_ITEM_W, VL_TOTAL_ITEM_W, QT_CH_ITEM_W, VL_UNITARIO_CH_W, 
				CD_MEDICO_EXECUTOR_W, CD_MEDICO_EXEC_CONV_W, NM_MEDICO_EXECUTOR_W, 
				NR_CRM_EXECUTOR_W, 
				UF_CRM_EXECUTOR_W, NR_CPF_EXECUTOR_W, CD_FUNCAO_EXECUTOR_W, 
				NR_PORTE_ANESTESICO_W, 
				PR_FUNCAO_PARTICIPANTE_W, PR_VIA_ACESSO_W, PR_HORA_EXTRA_W, IE_VIA_ACESSO_W, 
				CD_CLASSIF_SETOR_W, CD_SETOR_ATENDIMENTO_W, CD_GRUPO_GASTO_W, CD_BRASINDICE_W, 
				CD_PROCEDIMENTO_REF_W, CD_PROC_REF_CONV_W, nr_seq_protocolo_p, cd_convenio_p, 
	 			cd_cgc_hospital_p, cd_cgc_convenio_p, coalesce(cd_interno_terc_w,cd_interno_p), 
				ie_responsavel_credito_w, 
				ie_emite_conta_w, ie_total_interf_w, vl_honorario_w, nr_seq_proc_pacote_w, 
	 			cd_especialidade_w, cd_funcao_espec_med_w, dt_prescricao_w, dt_autorizacao_w, 
				cd_cgc_cpf_resp_cred_w, cd_cgc_prestador_w, vl_filme_w, nr_doc_convenio_w, 
				nr_prescricao_w, cd_medico_req_w, nr_crm_requisitante_w, vl_custo_oper_w, 
				qt_filme_w, ie_video_w, CD_TIPO_ITEM_INTERF_W,CD_AREA_PROC_W, 
				CD_ESPECIALIDADE_PROC_W,CD_GRUPO_PROC_W,cd_tipo_procedimento_w,cd_senha_guia_w, 
				dt_entrada_unidade_w,dt_saida_unidade_w, nm_usuario_p);
		END;
END LOOP;
close C02;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE med_gerar_interf_conta_item ( nr_seq_protocolo_p bigint, nr_seq_envio_convenio_p bigint, cd_convenio_p bigint, nr_atendimento_p bigint, nr_interno_conta_p bigint, cd_cgc_hospital_p text, cd_cgc_convenio_p text, cd_interno_p text, nm_usuario_p text, ie_excluir_hon_med_p text, ie_excluir_hon_terc_p text) FROM PUBLIC;

