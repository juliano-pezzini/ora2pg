-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_definir_pagador_coop_seg ( nr_seq_segurado_p bigint, nr_seq_grupo_coop_p bigint, ie_tipo_segurado_p text, nr_seq_congenere_p bigint, dt_contratacao_p timestamp, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Alterar o pagador do beneficiario caso o mesmo se enquadre em uma regra de pagador intercambio. 
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: Regra cadastrada em OPS - Cadastro de Regras -> OPS - Intercambio -> Regra pagador intercambio.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 	

nr_seq_pagador_w	bigint;

C01 CURSOR FOR
	SELECT	a.nr_seq_pagador
	from	pls_regra_pagador_interc a
	where (a.nr_seq_grupo_coop_seg	= nr_seq_grupo_coop_p 	or coalesce(a.nr_seq_grupo_coop_seg::text, '') = '')
	and (a.ie_tipo_segurado 		= ie_tipo_segurado_p	or coalesce(a.ie_tipo_segurado::text, '') = '')
	and	clock_timestamp()	between	trunc(a.dt_inicio_vigencia,'dd') and fim_dia(a.dt_fim_vigencia)
	order by
		coalesce(a.nr_seq_grupo_coop_seg,0),
		coalesce(a.ie_tipo_segurado,' ');


BEGIN
open C01;
loop
fetch C01 into	
	nr_seq_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
end loop;
close C01;

/*aaschlote 11/12/2012 OS - 527265*/

if (coalesce(nr_seq_pagador_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_pagador_w
	from	pls_contrato_pagador
	where	nr_seq_congenere	= nr_seq_congenere_p;
end if;

if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
	update	pls_segurado
	set	nr_seq_pagador 	= nr_seq_pagador_w
	where	nr_sequencia 	= nr_seq_segurado_p;

	insert into pls_segurado_pagador(nr_sequencia, dt_atualizacao, nm_usuario,
		nr_seq_segurado, nr_seq_pagador, dt_inicio_vigencia
		)
	values (nextval('pls_segurado_pagador_seq'), clock_timestamp(), nm_usuario_p,
		 nr_seq_segurado_p, nr_seq_pagador_w, ESTABLISHMENT_TIMEZONE_UTILS.startOfmonth(dt_contratacao_p)
		);

	CALL pls_gerar_segurado_historico(	nr_seq_segurado_p, '6', clock_timestamp(),
					'Pagador inserido conforme a regra cadastrada em OPS - Cadastro de Regras/OPS - Interc?io/Regra pagador interc?io.' ,'pls_definir_pagador_coop_seg', null,
					null, null, null,
					dt_contratacao_p, null, null,
					null, null, null,
					null, nm_usuario_p, 'N');
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_definir_pagador_coop_seg ( nr_seq_segurado_p bigint, nr_seq_grupo_coop_p bigint, ie_tipo_segurado_p text, nr_seq_congenere_p bigint, dt_contratacao_p timestamp, nm_usuario_p text) FROM PUBLIC;

