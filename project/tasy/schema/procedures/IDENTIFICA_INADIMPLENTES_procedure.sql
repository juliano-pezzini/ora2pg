-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE identifica_inadimplentes () AS $body$
DECLARE

 
cd_pessoa_fisica_w		varchar(10);
cd_pessoa_fisica_alerta_w	varchar(10);
qt_titulos_w			bigint;
dt_vencimento_w			timestamp;
nr_seq_tipo_alerta_w		bigint;
nr_seq_pessoa_classif_w		bigint;
qt_alerta_paciente_w		integer;
cd_estabelecimento_w		bigint;
ds_texto_padrao_w		varchar(2000);
qt_titulos_aberto_w		integer;
qt_titulos_aberto_alerta_w	integer;
nr_seq_alerta_w			bigint;
nr_seq_alerta_ww			bigint;
dt_liquidacao_w			timestamp;
count_w				bigint;
nr_seq_regra_w			bigint;
ie_gerar_alerta_w		varchar(10);

C01 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.nr_seq_tipo_alerta, 
	a.ds_texto_padrao, 
	a.nr_seq_alerta 
from	pf_regra_alerta_tipo a 
where 	a.ie_venc_titulo_receber	= 'S' 
order by	a.nr_seq_tipo_alerta;

c02 CURSOR FOR 
SELECT	distinct 
	x.cd_pessoa_fisica 
from	( 
	SELECT	a.cd_pessoa_fisica 
	from	titulo_receber a 
	where 	a.dt_vencimento		< (clock_timestamp() - interval '5 days') 
	and 	a.vl_saldo_titulo	> 0 
	and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
	
union all
 
	select	b.cd_pessoa_fisica 
	from	titulo_receber a, 
		atendimento_paciente b 
	where	a.nr_atendimento 	= b.nr_atendimento 
	and 	a.dt_vencimento 	< (clock_timestamp() - interval '5 days') 
	and 	a.vl_saldo_titulo 	> 0 
	and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
	
union all
 
	select	b.cd_pessoa_fisica 
	from	titulo_receber a, 
		titulo_receber_resp_pgto b 
	where	a.nr_titulo 		= b.nr_titulo 
	and 	a.dt_vencimento 	< (clock_timestamp() - interval '5 days') 
	and 	a.vl_saldo_titulo 	> 0 
	and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
	and	clock_timestamp()			between b.dt_inicio_vigencia and coalesce(b.dt_fim_vigencia,clock_timestamp()) 
	and	coalesce(b.ie_informativo,'N') = 'N') x 
where	(x.cd_pessoa_fisica IS NOT NULL AND x.cd_pessoa_fisica::text <> '') 
group by	x.cd_pessoa_fisica;

C03 CURSOR FOR 
SELECT	a.nr_sequencia, 
	a.cd_pessoa_fisica 
from	alerta_paciente a 
where	a.nr_seq_tipo_alerta	= nr_seq_tipo_alerta_w 
and	a.ie_situacao		= 'A' 
and	coalesce(a.dt_fim_alerta::text, '') = '' 
and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '');


BEGIN 
/*Se não existir regra nem segue adiante*/
 
select	count(*) 
into STRICT	count_w 
from	pf_regra_alerta_tipo 
where	ie_venc_titulo_receber = 'S';
 
if (count_w > 0) then 
 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_regra_w, 
		nr_seq_tipo_alerta_w, 
		ds_texto_padrao_w, 
		nr_seq_alerta_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		open C02;
		loop 
		fetch C02 into 
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
 
			/*Verifica se tem regra de classificação*/
 
			select	count(*) 
			into STRICT	count_w 
			from	pf_regra_alerta_auto 
			where	nr_seq_regra_alerta	= nr_seq_regra_w;
 
			if (count_w > 0) then 
 
				select	max(a.ie_gerar_alerta) 
				into STRICT	ie_gerar_alerta_w 
				from	pf_regra_alerta_auto a, 
					pessoa_classif b 
				where	a.nr_seq_pessoa_classif		= b.nr_seq_classif 
				and	a.nr_seq_regra_alerta		= nr_seq_regra_w 
				and	b.cd_pessoa_fisica		= cd_pessoa_fisica_w 
				and	b.dt_inicio_vigencia		<= clock_timestamp() 
				and	coalesce(b.dt_final_vigencia,clock_timestamp())	>= clock_timestamp();
 
			else 
				ie_gerar_alerta_w	:= 'S';
			end if;
 
			if (coalesce(ie_gerar_alerta_w,'S') = 'S') then 
				 
				select	sum(qt_pessoa), 
					max(dt_vencimento), 
					max(dt_liquidacao) 
				into STRICT	qt_titulos_aberto_w, 
					dt_vencimento_w, 
					dt_liquidacao_w 
				from 	( 
					SELECT	count(*) qt_pessoa, 
						max(a.dt_vencimento) dt_vencimento, 
						max(a.dt_liquidacao) dt_liquidacao 
					from	titulo_receber a 
					where 	a.dt_vencimento		< (clock_timestamp() - interval '5 days') 
					and 	a.vl_saldo_titulo	> 0 
					and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
					and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w 
					
union all
 
					SELECT	count(*) qt_pessoa, 
						max(a.dt_vencimento) dt_vencimento, 
						max(a.dt_liquidacao) dt_liquidacao 
					from	titulo_receber a, 
						atendimento_paciente b 
					where	a.nr_atendimento	= b.nr_atendimento 
					and 	a.dt_vencimento		< (clock_timestamp() - interval '5 days') 
					and 	a.vl_saldo_titulo	> 0 
					and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
					and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w 
					
union all
 
					select	count(*) qt_pessoa, 
						max(a.dt_vencimento) dt_vencimento, 
						max(a.dt_liquidacao) dt_liquidacao 
					from	titulo_receber a, 
						titulo_receber_resp_pgto b 
					where	a.nr_titulo = b.nr_titulo 
					and 	a.dt_vencimento		< (clock_timestamp() - interval '5 days') 
					and 	a.vl_saldo_titulo	> 0 
					and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
					and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_w 
					and	clock_timestamp()			between b.dt_inicio_vigencia and coalesce(b.dt_fim_vigencia,clock_timestamp()) 
					and	coalesce(b.ie_informativo,'N')	= 'N' 
					) alias27;
 
				if (coalesce(qt_titulos_aberto_w,0) > 0) then 
 
					select	count(*) 
					into STRICT	qt_alerta_paciente_w 
					from	alerta_paciente a 
					where	a.nr_seq_tipo_alerta	= nr_seq_tipo_alerta_w 
					and	a.cd_pessoa_fisica	= cd_pessoa_fisica_w 
					and	a.ie_situacao		= 'A' 
					and	coalesce(a.dt_fim_alerta::text, '') = '';
 
					if (coalesce(qt_alerta_paciente_w,0) = 0) then 
 
						select	nextval('alerta_paciente_seq') 
						into STRICT	nr_seq_alerta_w 
						;
 
						insert into alerta_paciente( 
							nr_sequencia, 
							dt_alerta, 
							nr_seq_tipo_alerta, 
							cd_estabelecimento, 
							ds_alerta, 
							ie_situacao, 
							dt_atualizacao, 
							nm_usuario, 
							cd_pessoa_fisica, 
							dt_liberacao, 
							DT_ATUALIZACAO_NREC, 
							NM_USUARIO_NREC, 
							nr_seq_alerta) 
						values (nr_seq_alerta_w, 
							dt_vencimento_w + 5, 
							nr_seq_tipo_alerta_w, 
							cd_estabelecimento_w, 
							substr(ds_texto_padrao_w, 1, 2000), 
							'A', 
							clock_timestamp(), 
							'Job', 
							cd_pessoa_fisica_w, 
							clock_timestamp(), 
							clock_timestamp(), 
							'Job', 
							nr_seq_alerta_ww);
					end if;
				end if;	
			end if;
			end;
		end loop;
		close C02;
 
		open C03;
		loop 
		fetch C03 into	 
			nr_seq_alerta_w, 
			cd_pessoa_fisica_alerta_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
 
			select	sum(qt_pessoa) 
			into STRICT	qt_titulos_aberto_alerta_w 
			from 	( 
				SELECT	count(*) qt_pessoa 
				from	titulo_receber a 
				where 	a.dt_vencimento		< (clock_timestamp() - interval '5 days') 
				and 	a.vl_saldo_titulo	> 0 
				and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
				and	a.cd_pessoa_fisica	= cd_pessoa_fisica_alerta_w 
				
union all
 
				SELECT	count(*) qt_pessoa 
				from	titulo_receber a, 
					atendimento_paciente b 
				where	a.nr_atendimento	= b.nr_atendimento 
				and 	a.dt_vencimento		< (clock_timestamp() - interval '5 days') 
				and 	a.vl_saldo_titulo	> 0 
				and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
				and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_alerta_w 
				
union all
 
				select	count(*) qt_pessoa 
				from	titulo_receber a, 
					titulo_receber_resp_pgto b 
				where	a.nr_titulo		= b.nr_titulo 
				and 	a.dt_vencimento		< (clock_timestamp() - interval '5 days') 
				and 	a.vl_saldo_titulo	> 0 
				and	a.dt_vencimento		> clock_timestamp() - interval '365 days' 
				and	b.cd_pessoa_fisica 	= cd_pessoa_fisica_alerta_w 
				and	clock_timestamp()			between b.dt_inicio_vigencia and coalesce(b.dt_fim_vigencia,clock_timestamp()) 
				and	coalesce(b.ie_informativo,'N')	= 'N' 
				) alias17;
 
			if (qt_titulos_aberto_alerta_w = 0) then 
 
				update	alerta_paciente 
				set	dt_fim_alerta		= dt_liquidacao_w, 
					ie_situacao		= 'I', 
					dt_atualizacao		= clock_timestamp(), 
					nm_usuario		= 'Job', 
					nm_usuario_inativacao	= 'Job' 
				where	nr_sequencia		= nr_seq_alerta_w;
			end if;
 
			end;
		end loop;
		close C03;
 
		end;
	end loop;
	close C01;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE identifica_inadimplentes () FROM PUBLIC;

