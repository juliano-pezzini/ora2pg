-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_avaliacao ( nr_seq_dialise_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE



nr_seq_ultima_dialise_w		bigint;
qt_pa_sist_ideal_w		smallint;
qt_pa_diast_ideal_w		smallint;
pr_peso_ideal_w			real;

ie_peso_ideal_w			varchar(1);
ie_pressao_ideal_w		varchar(1);
qt_peso_ideal_w			real;
qt_peso_ultima_w		real;

cd_pessoa_fisica_w		varchar(10);
qt_peso_pre_w			real;
qt_pa_sist_pre_deitado_w	smallint;
qt_pa_diast_pre_deitado_w	smallint;

nr_seq_equipe_w			bigint;
nr_seq_unid_dialise_w		bigint;


BEGIN

/* Obter os dados da diálise atual */

select	cd_pessoa_fisica,
	qt_peso_pre,
	qt_pa_sist_pre_deitado,
	qt_pa_diast_pre_deitado
into STRICT	cd_pessoa_fisica_w,
	qt_peso_pre_w,
	qt_pa_sist_pre_deitado_w,
	qt_pa_diast_pre_deitado_w
from	hd_dialise
where	nr_sequencia		= nr_seq_dialise_p;


nr_seq_equipe_w	:= hd_obter_equipe_prc(cd_pessoa_fisica_w, 'C');

if (nr_seq_equipe_w > 0) then
	begin

	/* Pega a sequência da última diálise */

	begin
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_ultima_dialise_w
	from	hd_dialise
	where	nr_sequencia		<> nr_seq_dialise_p
	and	cd_pessoa_fisica	= cd_pessoa_fisica_w
	and	(qt_peso_pre IS NOT NULL AND qt_peso_pre::text <> '')
	and	(qt_pa_sist_pre_deitado IS NOT NULL AND qt_pa_sist_pre_deitado::text <> '')
	and	(qt_pa_diast_pre_deitado IS NOT NULL AND qt_pa_diast_pre_deitado::text <> '');
	exception
		when others then
		nr_seq_ultima_dialise_w	:= 0;
	end;

	/* Pega o peso da última diálise */

	begin
	select	qt_peso_pos
	into STRICT	qt_peso_ultima_w
	from	hd_dialise
	where	nr_sequencia		= nr_seq_ultima_dialise_w;
	exception
		when others then
		qt_peso_ultima_w	:= 0;
	end;

	/* Pega os dados ideiais para o paciente */

	select	coalesce(qt_pa_sist_ideal,0),
		coalesce(qt_pa_diast_ideal,0),
		coalesce(pr_peso_ideal,0)
	into STRICT	qt_pa_sist_ideal_w,
		qt_pa_diast_ideal_w,
		pr_peso_ideal_w
	from	hd_equipe
	where	nr_sequencia		= nr_seq_equipe_w;

	/* Define se a pressão ficou ideal */

	if (qt_pa_sist_pre_deitado_w <= qt_pa_sist_ideal_w) and (qt_pa_diast_pre_deitado_w <= qt_pa_diast_ideal_w) then
		ie_pressao_ideal_w	:= 'S';
	else
		ie_pressao_ideal_w	:= 'N';
	end if;

	/* Define se o peso ficou ideal */

	qt_peso_ideal_w	:= trunc(qt_peso_ultima_w + (qt_peso_ultima_w * pr_peso_ideal_w / 100),3);

	if	((nr_seq_ultima_dialise_w = 0) or (qt_peso_pre_w <= qt_peso_ideal_w)) then
		ie_peso_ideal_w		:= 'S';
	else
		ie_peso_ideal_w		:= 'N';
	end if;

	/* Pega a unidade de diálise */

	select	nr_seq_unid_dialise
	into STRICT	nr_seq_unid_dialise_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_p;

	/* Insere os dados da avaliacao */

	insert into hd_prc_avaliacao(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_dialise,
		dt_avaliacao,
		ie_peso,
		ie_pressao,
		nr_seq_unid_dialise
	) values (
		nextval('hd_prc_avaliacao_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_dialise_p,
		clock_timestamp(),
		ie_peso_ideal_w,
		ie_pressao_ideal_w,
		nr_seq_unid_dialise_w
	);

	commit;

	end;
else
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(279970,null);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_avaliacao ( nr_seq_dialise_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

