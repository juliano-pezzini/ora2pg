-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE efetivar_importacao_contagem ( nr_seq_inventario_p bigint, nm_usuario_p text, ie_possui_inconsistencia_p INOUT text) AS $body$
DECLARE


cd_material_w inventario_material.cd_material%type;
nr_seq_lote_w inventario_material_lote.nr_seq_lote_fornec%type;
qt_contagem_w inventario_material.qt_contagem%type;
ds_erro_w   varchar(200) := null;
ie_possui_inconsistencia_w varchar(1) := 'N';

C01 CURSOR FOR
    SELECT  cd_material,
            nr_seq_lote, 
            qt_contagem_1
    from    importar_material
    where   nr_seq_inventario = nr_seq_inventario_p
    and     (qt_contagem_1 IS NOT NULL AND qt_contagem_1::text <> '')
    and     nm_usuario = nm_usuario_p;

C02 CURSOR FOR
    SELECT  cd_material,
            nr_seq_lote, 
            qt_contagem_2
    from    importar_material
    where   nr_seq_inventario = nr_seq_inventario_p
    and     (qt_contagem_2 IS NOT NULL AND qt_contagem_2::text <> '')
    and     nm_usuario = nm_usuario_p;

C03 CURSOR FOR
    SELECT  cd_material,
            nr_seq_lote, 
            qt_contagem_3
    from    importar_material
    where   nr_seq_inventario = nr_seq_inventario_p
    and     (qt_contagem_3 IS NOT NULL AND qt_contagem_3::text <> '')
    and     nm_usuario = nm_usuario_p;

C04 CURSOR FOR
    SELECT  cd_material,
            nr_seq_lote, 
            qt_contagem_4
    from    importar_material
    where   nr_seq_inventario = nr_seq_inventario_p
    and     (qt_contagem_4 IS NOT NULL AND qt_contagem_4::text <> '')
    and     nm_usuario = nm_usuario;

C05 CURSOR FOR
    SELECT  cd_material, 
            nr_seq_lote         
    from    importar_material
    where   nr_seq_inventario = nr_seq_inventario_p
    and     nm_usuario = nm_usuario_p
    and     cd_material not in (SELECT cd_material from inventario_material where nr_seq_inventario = nr_seq_inventario_p);

C06 CURSOR FOR
    SELECT  cd_material, 
            nr_seq_lote         
    from    importar_material
    where   nr_seq_inventario = nr_seq_inventario_p
    and     nm_usuario = nm_usuario_p
    and     (nr_seq_lote IS NOT NULL AND nr_seq_lote::text <> '')
    and     nr_seq_lote not in (SELECT b.nr_seq_lote_fornec 
                                from inventario_material a,
                                    inventario_material_lote b 
                                where a.nr_sequencia = b.nr_seq_item
                                and   a.nr_seq_inventario = b.nr_seq_inventario
                                and   a.nr_seq_inventario = nr_seq_inventario_p);


BEGIN
    --veifica mateiriais importados que nao estao no inventario
    open C05;
    loop
    fetch C05 into cd_material_w, nr_seq_lote_w;
    EXIT WHEN NOT FOUND; /* apply on C05 */
        begin
            ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(1144839);
            CALL consistir_contagem_inventario(nr_seq_inventario_p, cd_material_w, nr_seq_lote_w, ds_erro_w, nm_usuario_p);
            ie_possui_inconsistencia_w := 'S';
        end;
    end loop;
    close C05;

    --veifica lotes importados que nao estao no inventario
    open C06;
    loop
    fetch C06 into cd_material_w, nr_seq_lote_w;
    EXIT WHEN NOT FOUND; /* apply on C06 */
        begin
            ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(1145571);
            CALL consistir_contagem_inventario(nr_seq_inventario_p, cd_material_w, nr_seq_lote_w, ds_erro_w, nm_usuario_p);
            ie_possui_inconsistencia_w := 'S';
        end;
    end loop;
    close C06;

    if (ie_possui_inconsistencia_w = 'N') then
    begin
        --importa as contagens
        open C01;
        loop
        fetch C01 into cd_material_w, nr_seq_lote_w, qt_contagem_w;
        EXIT WHEN NOT FOUND; /* apply on C01 */
            begin
                ds_erro_w := inventario_barras(nr_seq_inventario_p, cd_material_w, qt_contagem_w, nr_seq_lote_w, 1, nm_usuario_p, ds_erro_w);

                if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
                    CALL consistir_contagem_inventario(nr_seq_inventario_p, cd_material_w, nr_seq_lote_w, ds_erro_w, nm_usuario_p);
                    ie_possui_inconsistencia_w := 'S';
                end if;
            end;
        end loop;
        close C01;
    end;
    end if;

    if (ie_possui_inconsistencia_w = 'N') then
    begin
        open C02;
        loop
        fetch C02 into cd_material_w, nr_seq_lote_w, qt_contagem_w;
        EXIT WHEN NOT FOUND; /* apply on C02 */
            begin
                ds_erro_w := inventario_barras(nr_seq_inventario_p, cd_material_w, qt_contagem_w, nr_seq_lote_w, 2, nm_usuario_p, ds_erro_w);

                if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
                    CALL consistir_contagem_inventario(nr_seq_inventario_p, cd_material_w, nr_seq_lote_w, ds_erro_w, nm_usuario_p);
                    ie_possui_inconsistencia_w := 'S';
                end if;
            end;
        end loop;
        close C02;
    end;
    end if;

    if (ie_possui_inconsistencia_w = 'N') then
    begin
        open C03;
        loop
        fetch C03 into cd_material_w, nr_seq_lote_w, qt_contagem_w;
        EXIT WHEN NOT FOUND; /* apply on C03 */
            begin
                ds_erro_w := inventario_barras(nr_seq_inventario_p, cd_material_w, qt_contagem_w, nr_seq_lote_w, 3, nm_usuario_p, ds_erro_w);

                if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
                    CALL consistir_contagem_inventario(nr_seq_inventario_p, cd_material_w, nr_seq_lote_w, ds_erro_w, nm_usuario_p);
                    ie_possui_inconsistencia_w := 'S';
                end if;
            end;
        end loop;
        close C03;
    end;
    end if;

    if (ie_possui_inconsistencia_w = 'N') then
    begin
        open C04;
        loop
        fetch C04 into cd_material_w, nr_seq_lote_w, qt_contagem_w;
        EXIT WHEN NOT FOUND; /* apply on C04 */
            begin
                ds_erro_w := inventario_barras(nr_seq_inventario_p, cd_material_w, qt_contagem_w, nr_seq_lote_w, 4, nm_usuario_p, ds_erro_w);

                if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
                    CALL consistir_contagem_inventario(nr_seq_inventario_p, cd_material_w, nr_seq_lote_w, ds_erro_w, nm_usuario_p);
                    ie_possui_inconsistencia_w := 'S';
                end if;
            end;
        end loop;
        close C04;
    end;
    end if;

    ie_possui_inconsistencia_p := ie_possui_inconsistencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE efetivar_importacao_contagem ( nr_seq_inventario_p bigint, nm_usuario_p text, ie_possui_inconsistencia_p INOUT text) FROM PUBLIC;

