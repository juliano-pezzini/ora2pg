-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_taxa_porte_evento ( nr_cirurgia_p bigint, nr_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

		
--dt_registro_inicio_w	evento_cirurgia_paciente.dt_registro%type;
dt_entrada_unidade_w			cirurgia.dt_entrada_unidade%type;
dt_final_cirurgia_w				cirurgia.dt_termino%type;
nr_atendimento_w				cirurgia.nr_atendimento%type;
nr_seq_proc_w           		procedimento_paciente.nr_sequencia%type;
cd_procedimento_w				procedimento_paciente.cd_procedimento%type;
cd_convenio_w					procedimento_paciente.cd_convenio%type;
cd_estabelecimento_w			smallint;
ie_classificacao_w				varchar(1);
ie_origem_proced_w				procedimento.ie_origem_proced%type;
ie_proced_hor_atual_w			varchar(1);
dt_procedimento_w				timestamp;
dt_inicio_real_w				timestamp;
cd_perfil_ativo_w				integer;
nr_prescricao_w					cirurgia.nr_prescricao%type;
ds_log_w						varchar(1000);
ie_calc_porte_w					convenio.ie_calc_porte%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
			cd_convenio,
			cd_procedimento,
			ie_origem_proced
	from	procedimento_paciente
	where 	nr_cirurgia	=	nr_cirurgia_p
	and coalesce(nr_seq_proc_princ::text, '') = ''
	and	nr_sequencia not in (SELECT coalesce(nr_seq_proc_princ, -1)
							from	procedimento_paciente
							where 	nr_cirurgia	=	nr_cirurgia_p);	
	

BEGIN

select	max(dt_inicio_real)
into STRICT	dt_inicio_real_w
from	cirurgia
where 	nr_cirurgia	=	nr_cirurgia_p;	

select	coalesce(max(cd_estabelecimento),OBTER_ESTABELECIMENTO_ATIVO)
into STRICT	cd_estabelecimento_w
from	atendimento_paciente
where	nr_atendimento	=	nr_atendimento_p;	

cd_perfil_ativo_w := obter_perfil_ativo;

ie_proced_hor_atual_w := obter_param_usuario(901, 92, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_proced_hor_atual_w);

select	max(dt_entrada_unidade)
into STRICT	dt_entrada_unidade_w
from	cirurgia
where	nr_cirurgia	=	nr_cirurgia_p;


dt_procedimento_w :=	dt_inicio_real_w;	
if (ie_proced_hor_atual_w = 'S') then
	dt_procedimento_w := clock_timestamp();
end if;

if (dt_procedimento_w < dt_entrada_unidade_w) then
	dt_procedimento_w := dt_entrada_unidade_w;
end if;

open c01;
loop
	fetch c01 into
		nr_seq_proc_w,
		cd_convenio_w,
		cd_procedimento_w,
		ie_origem_proced_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	
	select	max(ie_classificacao)
	into STRICT	ie_classificacao_w
	from	procedimento
	where	cd_procedimento		= cd_procedimento_w
	and		ie_origem_proced	= ie_origem_proced_w;
	
	if (ie_classificacao_w in (1,8)) then
		CALL gerar_taxa_sala_porte(nr_atendimento_p, dt_entrada_unidade_w, dt_procedimento_w, cd_procedimento_w, nr_seq_proc_w, nm_usuario_p);
	end if;
	
end loop;
close c01;

select	max(cd_convenio),
		max(nr_atendimento),
		max(dt_termino)
into STRICT	cd_convenio_w,
		nr_atendimento_w,
		dt_final_cirurgia_w
from	cirurgia
where	nr_cirurgia	=	nr_cirurgia_p;

if (coalesce(cd_convenio_w,0) <> 0) then
	select	coalesce(max(ie_calc_porte),'N')
	into STRICT	ie_calc_porte_w
	from	convenio
	where	cd_convenio = cd_convenio_w;
	
	begin
	select 	max(coalesce(ie_calc_porte_estab, ie_calc_porte_w))
	into STRICT	ie_calc_porte_w
	from 	convenio_estabelecimento
	where 	cd_convenio = cd_convenio_w
	and 	cd_estabelecimento = cd_estabelecimento_w;
	exception
		when others then
		ie_calc_porte_w:= ie_calc_porte_w;
	end;
	if 	(ie_calc_porte_w = 'B' AND dt_final_cirurgia_w IS NOT NULL AND dt_final_cirurgia_w::text <> '') then
		CALL gerar_tx_cirur_porte_tempo(cd_estabelecimento_w,nr_atendimento_w,nr_cirurgia_p,nm_usuario_p);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_taxa_porte_evento ( nr_cirurgia_p bigint, nr_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

