-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_honorario_individual ( nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_protocolo_retorno_p INOUT bigint, ie_gerou_protocolo_p INOUT text ) AS $body$
DECLARE


ie_tipo_guia_w			varchar(2);
ie_tipo_guia_ww			varchar(2);
ie_situacao_w			varchar(3);
ie_status_w			varchar(1);
nr_seq_prestador_w		bigint;
nr_seq_prestador_ww		bigint;
cd_estabelecimento_w		smallint;
dt_mes_competencia_w		timestamp;
cd_condicao_pagamento_w		bigint;
dt_base_venc_w			timestamp;
nr_seq_outorgante_w		bigint;
nr_seq_protocolo_w		bigint	:= 0;
cd_medico_w			varchar(10);
nr_seq_grau_partic_w		bigint;
nr_seq_cbo_saude_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_procedimento_w		bigint;
nr_seq_procedimento_ww		bigint;
nr_seq_participante_w		bigint;
nr_seq_participante_ww		bigint;
nr_seq_conta_ww			bigint;
nr_crm_exec_w			varchar(20);
uf_crm_exec_w			valor_dominio.vl_dominio%type;
sg_conselho_exec_w		varchar(20);
qt_medico_credenciado_w		bigint;
dt_recebimento_w		timestamp;
ie_origem_protocolo_w		varchar(1);
nr_seq_tipo_acomodacao_w	pls_conta.nr_seq_tipo_acomodacao%type;
ie_desc_item_glosa_atend_w	pls_parametros.ie_desc_item_glosa_atend%type;
qt_registro_proc_regra_w	integer;
nr_seq_item_tiss_w		pls_conta_proc_regra.nr_seq_item_tiss%type;
nr_seq_item_tiss_vinculo_w	pls_conta_proc_regra.nr_seq_item_tiss_vinculo%type;


C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		c.cd_medico,
		c.nr_seq_grau_partic,
		c.nr_seq_cbo_saude
	from	pls_proc_participante	c,
		pls_conta_proc		b,
		pls_conta		a
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p
	and	a.nr_sequencia		= b.nr_seq_conta
	and	b.nr_sequencia		= c.nr_seq_conta_proc
	and	(c.cd_medico IS NOT NULL AND c.cd_medico::text <> '')
	and	pls_obter_se_credenciado(c.cd_medico)	= 'S'
	group by
		a.nr_sequencia,
		a.cd_guia,
		a.nr_seq_segurado,
		c.cd_medico,
		c.nr_seq_grau_partic,
		c.nr_seq_cbo_saude;

C02 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_sequencia,
		(SELECT count(1) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia) qt_proc_regra,
		(select max(x.nr_seq_item_tiss) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia) nr_seq_item_tiss,
		(select max(x.nr_seq_item_tiss_vinculo) from pls_conta_proc_regra x where x.nr_sequencia = a.nr_sequencia) nr_seq_item_tiss_vinculo
	from	pls_proc_participante	b,
		pls_conta_proc		a
	where	a.nr_seq_conta		= nr_seq_conta_w
	and	b.cd_medico		= cd_medico_w
	and	a.nr_sequencia		= b.nr_seq_conta_proc
	order by
		cd_procedimento,
		ie_origem_proced;


BEGIN

ie_gerou_protocolo_p	:= 'N';

/* Obter dados do protocolo */

select	ie_tipo_guia,
	ie_situacao,
	ie_status,
	nr_seq_prestador,
	cd_estabelecimento,
	dt_mes_competencia,
	dt_base_venc,
	nr_seq_outorgante,
	dt_recebimento,
	ie_origem_protocolo
into STRICT	ie_tipo_guia_w,
	ie_situacao_w,
	ie_status_w,
	nr_seq_prestador_w,
	cd_estabelecimento_w,
	dt_mes_competencia_w,
	dt_base_venc_w,
	nr_seq_outorgante_w,
	dt_recebimento_w,
	ie_origem_protocolo_w
from	pls_protocolo_conta
where	nr_sequencia	= nr_seq_protocolo_p;

select	coalesce(max(ie_desc_item_glosa_atend),'N')
into STRICT	ie_desc_item_glosa_atend_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_w;
/* Consistências do protocolo */

if (ie_tipo_guia_w not in ('4','5')) then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(184505);
	--(-20011,'O protocolo não é do tipo de guia Resumo de internação#@#@');
end if;

/* Francisco - 02/12/2013 - OS 662321 - Retirei a consistência
Não vejo motivo para não poder fazer a ação para protocolos importados via xml 
if	(ie_situacao_w <> 'D') then
	wheb_mensagem_pck.exibir_mensagem_abort(184506);
	--(-20011,'O protocolo não é do tipo Digitado#@#@');

end if;
*/
if	not(ie_status_w	in ('3','4')) then

	CALL wheb_mensagem_pck.exibir_mensagem_abort(184507);
	--(-20011,'O protocolo não está liberado para pagamento#@#@');
end if;

/* Obter se já existe protocolo de honorário individual vinculado */

select	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_protocolo_w
from	pls_protocolo_conta
where	nr_seq_prot_referencia	= nr_seq_protocolo_p
and	ie_tipo_guia		= '6'
and	ie_status in ('1','2');

if (ie_tipo_guia_w	= '4') then
	ie_tipo_guia_ww	:= '4';
elsif (ie_tipo_guia_w	= '5') then
	ie_tipo_guia_ww	:= '6';
end if;

select	count(c.nr_sequencia)
into STRICT	qt_medico_credenciado_w
from	pls_proc_participante	c,
	pls_conta_proc		b,
	pls_conta		a
where	a.nr_seq_protocolo	= nr_seq_protocolo_p
and	a.nr_sequencia		= b.nr_seq_conta
and	b.nr_sequencia		= c.nr_seq_conta_proc
and	(c.cd_medico IS NOT NULL AND c.cd_medico::text <> '')
and	pls_obter_se_credenciado(c.cd_medico)	= 'S';

/*--------------------------------------------- Criar o protocolo de Honorário Individual ----------------------------------------------------------------------------------------------------------------*/


/*	Vai criar o protocolo de honorário individual somente se ainda não existir protocolo de H.I para o protocolo que está solicitado.
	E se existir médico credenciado na equipe do procedimento. */
if ( nr_seq_protocolo_w = 0) and ( qt_medico_credenciado_w <> 0) then

	select	nextval('pls_protocolo_conta_seq')
	into STRICT	nr_seq_protocolo_w
	;

	insert into pls_protocolo_conta(nr_sequencia, dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_protocolo_prestador,
		nr_seq_prestador, dt_protocolo, ie_status,
		nr_seq_prestador_imp, nm_prestador_imp, dt_protocolo_imp,
		ie_situacao, cd_estabelecimento, cd_cgc_prestador_imp,
		nr_cpf_prestador_imp, dt_mes_competencia, cd_condicao_pagamento,
		dt_base_venc, dt_integracao, nr_seq_transacao,
		ds_hash, nr_seq_outorgante, nm_usuario_integracao,
		ie_tipo_guia, ie_forma_imp, nr_lote_contabil,
		cd_profissional_executor, nr_seq_grau_partic, nr_seq_prot_referencia,
		ie_tipo_protocolo, dt_recebimento, ie_origem_protocolo)
	values (	nr_seq_protocolo_w, clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, null,
		nr_seq_prestador_w, clock_timestamp(), 1,
		null, null, null,
		'D', cd_estabelecimento_w, null,
		null, dt_mes_competencia_w, cd_condicao_pagamento_w,
		dt_base_venc_w, null, null,
		null, nr_seq_outorgante_w, null,
		ie_tipo_guia_ww, null, null,
		null, null, nr_seq_protocolo_p,
		'C', dt_recebimento_w, ie_origem_protocolo_w);

	ie_gerou_protocolo_p	:= 'S';-- atribui 'S'  para indicar que o protocolo de retorno foi criado.
end if;
/*-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


--vai retornar o protocolo, seja ele criado ou encontrado pelo sistema.
nr_seq_protocolo_retorno_p		:= nr_seq_protocolo_w;

if (coalesce(nr_seq_protocolo_w,0) = 0) and (qt_medico_credenciado_w = 0) then
	--Não foi possível gerar o repasse. Por favor, verifique se ao menos um profissional é credenciado.	
	CALL wheb_mensagem_pck.exibir_mensagem_abort(195484);
end if;

if (coalesce( nr_seq_protocolo_w ,0)	<> 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_conta_w,
		cd_medico_w,
		nr_seq_grau_partic_w,
		nr_seq_cbo_saude_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		select	nextval('pls_conta_seq')
		into STRICT	nr_seq_conta_ww
		;
		nr_seq_prestador_ww	:= pls_obter_credenciado(cd_medico_w, cd_estabelecimento_w);

		select	substr(obter_dados_medico(cd_medico_w,'CRM'),1,255),
			substr(obter_dados_medico(cd_medico_w,'UFCRM'),1,255),
			substr(obter_dados_medico(cd_medico_w, 'SGCRM'),1,255)
		into STRICT	nr_crm_exec_w,
			uf_crm_exec_w,
			sg_conselho_exec_w
		;
		
		select	max(b.nr_seq_tipo_acomodacao)
		into STRICT	nr_seq_tipo_acomodacao_w
		from	pls_conta a,
			pls_guia_plano b
		where	b.nr_sequencia = a.nr_seq_guia
		and	a.nr_sequencia = nr_seq_conta_w;

		-- Quando um H.I. era inserido com guia, poderia acontecer a glosa de regra combinada.

		--  como no TISS o cd_guia é opcional SE tiver a guia de prestador, ela é gerada em branco quando for o caso

		--Na atual versão do TISS o médico executor na conta somente ocorre em guias de consulta. aqui não irá gerar 

		--conta com essa origem, então vamos setar nulo para o cd_medico_executor
		insert into pls_conta(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, cd_guia,
			cd_guia_referencia, cd_guia_prestador, nr_seq_segurado,
			cd_medico_executor, nr_seq_grau_partic, ie_status,
			ie_tipo_guia, cd_estabelecimento, nr_seq_protocolo,
			nr_seq_prestador_exec, dt_autorizacao, nr_crm_exec,
			uf_crm_exec, sg_conselho_exec, nr_seq_tipo_acomodacao,
			nr_seq_conta_referencia, cd_cooperativa, dt_emissao,
			nr_seq_clinica, ie_origem_conta)
		SELECT	nr_seq_conta_ww, clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p, (case when (cd_guia_prestador IS NOT NULL AND cd_guia_prestador::text <> '') then null else cd_guia end),
			cd_guia_referencia, cd_guia_prestador, nr_seq_segurado,
			null, nr_seq_grau_partic_w, 'U',
			ie_tipo_guia_ww, cd_estabelecimento, nr_seq_protocolo_w,
			nr_seq_prestador_ww, dt_autorizacao, nr_crm_exec_w,
			uf_crm_exec_w, sg_conselho_exec_w, coalesce(nr_seq_tipo_acomodacao,nr_seq_tipo_acomodacao_w),
			nr_seq_conta_w, cd_cooperativa, dt_emissao,
			nr_seq_clinica, ie_origem_conta
		from	pls_conta
		where	nr_sequencia	= nr_seq_conta_w;
		
		CALL pls_conta_tiss_pck.cria_copia_registro(nr_seq_conta_w, nr_seq_conta_ww, nm_usuario_p);

		open C02;
		loop
		fetch C02 into
			nr_seq_procedimento_w,
			nr_seq_participante_w,
			qt_registro_proc_regra_w,
			nr_seq_item_tiss_w,
			nr_seq_item_tiss_vinculo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	nextval('pls_conta_proc_seq')
			into STRICT	nr_seq_procedimento_ww
			;
			insert into pls_conta_proc(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, dt_procedimento,
				cd_procedimento, ie_origem_proced, qt_procedimento,
				vl_unitario, vl_procedimento, ie_via_acesso,
				nr_seq_conta, dt_procedimento_imp, cd_procedimento_imp,
				qt_procedimento_imp, vl_unitario_imp, vl_procedimento_imp,
				ie_via_acesso_imp, dt_inicio_proc, dt_fim_proc,
				dt_inicio_proc_imp, dt_fim_proc_imp, tx_participacao,
				vl_participacao, ds_procedimento_imp, cd_tipo_tabela_imp,
				tx_reducao_acrescimo_imp, ie_tipo_despesa_imp, ie_tecnica_utilizada,
				vl_liberado, vl_glosa, vl_saldo,
				nr_seq_regra, ie_tipo_despesa, ie_situacao,
				ie_status, dt_liberacao, nm_usuario_liberacao,
				tx_item, nr_seq_tiss_tabela, nr_seq_regra_horario,
				vl_custo_operacional, vl_anestesista, vl_materiais,
				vl_medico, vl_auxiliares, nr_seq_regra_liberacao,
				ds_log, cd_conta_cred, cd_conta_deb,
				cd_historico, cd_conta_glosa_cred, cd_conta_glosa_deb,
				cd_historico_glosa, nr_seq_regra_ctb_deb, nr_seq_regra_ctb_cred,
				nr_seq_grupo_ans)
			SELECT	nr_seq_procedimento_ww, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, dt_procedimento,
				cd_procedimento, ie_origem_proced, qt_procedimento,
				vl_unitario, vl_procedimento, ie_via_acesso,
				nr_seq_conta_ww, dt_procedimento_imp, cd_procedimento_imp,
				qt_procedimento_imp, vl_unitario_imp, vl_procedimento_imp,
				ie_via_acesso_imp, dt_inicio_proc, dt_fim_proc,
				dt_inicio_proc_imp, dt_fim_proc_imp, tx_participacao,
				vl_participacao, ds_procedimento_imp, cd_tipo_tabela_imp,
				tx_reducao_acrescimo_imp, ie_tipo_despesa_imp, ie_tecnica_utilizada,
				vl_liberado, vl_glosa, vl_saldo,
				nr_seq_regra, ie_tipo_despesa, 'D',
				'U', dt_liberacao, nm_usuario_liberacao,
				tx_item, nr_seq_tiss_tabela, nr_seq_regra_horario,
				vl_custo_operacional, vl_anestesista, vl_materiais,
				vl_medico, vl_auxiliares, nr_seq_regra_liberacao,
				ds_log, cd_conta_cred, cd_conta_deb,
				cd_historico, cd_conta_glosa_cred, cd_conta_glosa_deb,
				cd_historico_glosa, nr_seq_regra_ctb_deb, nr_seq_regra_ctb_cred,
				nr_seq_grupo_ans
			from	pls_conta_proc
			where	nr_sequencia	= nr_seq_procedimento_w;
			
			
			-- se existir um registro com as inf do tiss, vai ser replicado
			CALL pls_cta_proc_mat_regra_pck.cria_copia_regra_proc_tiss(nr_seq_procedimento_w, nr_seq_procedimento_ww, 'S', nm_usuario_p);
		
			
			/*Honorário não pode ter participante*/


		--	if	(ie_tipo_guia_ww	<> 6) then Retirado devido a implantação do TISS 3.02.00
				select	nextval('pls_proc_participante_seq')
				into STRICT	nr_seq_participante_ww
				;
				insert into pls_proc_participante(nr_sequencia, dt_atualizacao, nm_usuario,
					dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_proc,
					cd_medico, nr_cpf_imp, nm_medico_executor_imp,
					sg_conselho_imp, nr_crm_imp, uf_crm_imp,
					ie_funcao_medico_imp, cd_cgc_imp, cd_medico_imp,
					nr_seq_grau_partic, nr_seq_cbo_saude, cd_cbo_saude_imp,
					vl_participante, ie_conselho_profissional, ie_status)
				SELECT	nr_seq_participante_ww, clock_timestamp(), nm_usuario_p,
					clock_timestamp(), nm_usuario_p, nr_seq_procedimento_ww,
					cd_medico_w, nr_cpf_imp, nm_medico_executor_imp,
					sg_conselho_imp, nr_crm_imp, uf_crm_imp,
					ie_funcao_medico_imp, cd_cgc_imp, cd_medico_imp,
					nr_seq_grau_partic_w, nr_seq_cbo_saude_w, cd_cbo_saude_imp,
					vl_participante, ie_conselho_profissional, 'U'
				from	pls_proc_participante
				where	nr_sequencia	= nr_seq_participante_w;
		--	end if;
			end;
		end loop;
		close C02;
		end;
		
		-- Em alguns casos a data de emissão não esta informada explicidamente na conta base,

		--  neste caso é feito um update que levanta a data de atendimento, e atualiza a data de emissão com ela
		begin
			update	pls_conta
			set	dt_emissao	= pls_obter_dt_atendimento(nr_sequencia, ie_tipo_guia, dt_alta, dt_emissao, ie_desc_item_glosa_atend_w)
			where	nr_sequencia = nr_seq_conta_ww;
		exception
			when no_data_found then null;
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_honorario_individual ( nr_seq_protocolo_p bigint, nm_usuario_p text, nr_seq_protocolo_retorno_p INOUT bigint, ie_gerou_protocolo_p INOUT text ) FROM PUBLIC;

