-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_progr_reajuste_contr ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_reajuste_w			timestamp;
dt_reajuste_ano_w		timestamp;
dt_reajuste_mes_w		bigint;
dt_reajuste_mes_final_w		bigint;
tx_sinistro_inicial_w		double precision;
tx_sinistro_final_w		double precision;
nr_seq_contrato_w		bigint;
dt_rescisao_w			timestamp;
qt_registros_w			bigint;
vl_resultado_mensalidade_w	double precision;
vl_resultado_despesa_w		double precision;
tx_sinistralidade_w		double precision;
nr_seq_indice_reajuste_w	bigint;
qt_reaj_periodo_w		bigint;
ie_reajustar_benef_cancelado_w	varchar(1);
dt_mes_reajuste_final_w		timestamp;
ie_tipo_contratacao_lote_w	varchar(2);
dt_reajuste_contrato_w		timestamp;
qt_produto_contrato_w		bigint;
qt_vidas_inicial_w		bigint;
qt_vidas_final_w		bigint;
qt_vidas_contrato_w		bigint;
ie_qt_vidas_contrato_w		varchar(1);
ie_tipo_data_vidas_w		varchar(2);
nr_contrato_w			bigint;
cd_classif_contrato_w		varchar(10);
qt_aditamento_pendente_w	bigint;
ie_excecao_w			varchar(1);
ie_regulamentacao_lote_w	varchar(2);
nr_seq_prog_reaj_w		bigint;
ie_reajustar_copartic_w		pls_prog_reaj_colet_lote.ie_reajustar_copartic%type;
dt_inicio_analise_w		timestamp;
dt_fim_analise_w		timestamp;
nr_seq_grupo_relac_reaj_w	pls_prog_reaj_colet_lote.nr_seq_grupo_relac_reaj%type;
dt_qt_vidas_w			timestamp;
nr_seq_grupo_relac_reajuste_w	pls_grupo_contrato.nr_sequencia%type;
qt_registro_w			integer;
ie_remido_sinist_reaj_w		pls_parametros.ie_remido_sinistralidade_reaj%type;
tx_resultado_w			pls_prog_reaj_coletivo.tx_resultado_grupo%type;
tx_sinistralidade_ideal_w	pls_contrato_inf_reajuste.tx_sinistralidade_ideal%type;
ds_mes_reajuste_w		varchar(2);
ie_preco_w			pls_plano.ie_preco%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(a.dt_rescisao_contrato,a.dt_cancelamento) dt_rescisao,
		pls_obter_mes_reaj_contrato(a.nr_sequencia,null,'MM') ds_mes_reajuste,
		a.nr_contrato,
		a.cd_classif_contrato
	from	pls_contrato	a
	where	(pls_obter_mes_reaj_contrato(a.nr_sequencia,null,'MM'))::numeric  between dt_reajuste_mes_w and dt_reajuste_mes_final_w
	and	a.cd_estabelecimento		= cd_estabelecimento_p
	and	trunc(a.dt_contrato,'month')	< dt_reajuste_w
	and	(a.cd_cgc_estipulante IS NOT NULL AND a.cd_cgc_estipulante::text <> '')
	and	a.ie_situacao <> '4' --Nao entra contrato cancelado
	and	((nr_seq_indice_reajuste = nr_seq_indice_reajuste_w) or (coalesce(nr_seq_indice_reajuste_w::text, '') = ''))
	and	not exists (	SELECT 1
				from	pls_reajuste c,
					pls_prog_reaj_colet_lote  d
				where	c.nr_seq_lote_reaj_colet = d.nr_sequencia
				and	trunc(c.dt_reajuste,'MM') = trunc(d.dt_mes_reajuste,'MM')
				and	c.nr_contrato = a.nr_contrato
				and	d.nr_sequencia = nr_seq_lote_p)
	and	not exists(	select	1
				from	pls_reajuste_tabela	e,
					pls_tabela_preco	f,
					pls_reajuste		g
				where	f.nr_contrato		= a.nr_sequencia
				and	e.nr_seq_tabela		= f.nr_sequencia
				and	e.nr_seq_reajuste	= g.nr_sequencia
				and	trunc(g.dt_reajuste,'mm') = trunc(dt_reajuste_w,'mm')
				and	((coalesce(g.nr_seq_lote_deflator::text, '') = '' and coalesce(g.tx_reajuste_correto::text, '') = '' ) or g.tx_reajuste_correto <> 0))
	and (coalesce(nr_seq_grupo_relac_reaj_w::text, '') = ''
		or	exists (select	1
				from	pls_contrato_grupo x,
					pls_grupo_contrato y
				where	x.nr_seq_grupo = y.nr_sequencia
				and	y.nr_sequencia = nr_seq_grupo_relac_reaj_w
				and	x.nr_seq_contrato  = a.nr_sequencia));

C02 CURSOR FOR
	SELECT	nr_contrato,
		cd_classif_contrato,
		nr_seq_tipo_aditamento,
		ie_regulamentacao
	from	pls_prog_reaj_excecao
	where	nr_seq_lote	= nr_seq_lote_p;

BEGIN

select	trunc(dt_mes_reajuste,'Month'),
	coalesce(dt_mes_reajuste_final,dt_mes_reajuste),
	tx_sinistralidade_inicial,
	tx_sinistralidade_final,
	nr_seq_indice_reajuste,
	ie_tipo_contratacao,
	qt_vidas_inicial,
	qt_vidas_final,
	coalesce(ie_tipo_data_vidas,'A'),
	ie_regulamentacao,
	coalesce(ie_reajustar_copartic,'N'),
	dt_inicio_analise,
	dt_fim_analise,
	nr_seq_grupo_relac_reaj,
	ie_preco
into STRICT	dt_reajuste_w,
	dt_mes_reajuste_final_w,
	tx_sinistro_inicial_w,
	tx_sinistro_final_w,
	nr_seq_indice_reajuste_w,
	ie_tipo_contratacao_lote_w,
	qt_vidas_inicial_w,
	qt_vidas_final_w,
	ie_tipo_data_vidas_w,
	ie_regulamentacao_lote_w,
	ie_reajustar_copartic_w,
	dt_inicio_analise_w,
	dt_fim_analise_w,
	nr_seq_grupo_relac_reaj_w,
	ie_preco_w
from	pls_prog_reaj_colet_lote
where	nr_sequencia	= nr_seq_lote_p;

dt_reajuste_mes_w	:= (to_char(dt_reajuste_w,'mm'))::numeric;
dt_reajuste_ano_w	:= add_months(dt_reajuste_w,-12);
dt_reajuste_mes_final_w	:= (to_char(dt_mes_reajuste_final_w,'mm'))::numeric;

if (coalesce(dt_inicio_analise_w::text, '') = '') and (coalesce(dt_fim_analise_w::text, '') = '') then
	dt_inicio_analise_w	:= dt_reajuste_ano_w;
	dt_fim_analise_w	:= fim_dia(dt_reajuste_w-1);
end if;

select	max(ie_reajustar_benef_cancelado),
	coalesce(max(ie_remido_sinistralidade_reaj),'N')
into STRICT	ie_reajustar_benef_cancelado_w,
	ie_remido_sinist_reaj_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

ie_reajustar_benef_cancelado_w	:= coalesce(ie_reajustar_benef_cancelado_w,'N');

open C01;
loop
fetch C01 into
	nr_seq_contrato_w,
	dt_rescisao_w,
	ds_mes_reajuste_w,
	nr_contrato_w,
	cd_classif_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	ie_excecao_w	:= 'N';
	
	for r_c02_w in C02 loop
		begin
		
		if (r_c02_w.nr_contrato = nr_contrato_w) then
			ie_excecao_w	:= 'S';
		end if;
		
		if (r_c02_w.cd_classif_contrato = cd_classif_contrato_w) then
			ie_excecao_w	:= 'S';
		end if;
		
		if (r_c02_w.nr_seq_tipo_aditamento IS NOT NULL AND r_c02_w.nr_seq_tipo_aditamento::text <> '') then
			select	count(1)
			into STRICT	qt_aditamento_pendente_w
			from	pls_contrato_aditamento
			where	nr_seq_contrato		= nr_seq_contrato_w
			and	nr_seq_tipo_aditamento	= r_c02_w.nr_seq_tipo_aditamento
			and	coalesce(ie_status_aditamento,'P')	= 'P';
			
			if (qt_aditamento_pendente_w > 0) then
				ie_excecao_w	:= 'S';
			end if;
		end if;
		
		if (r_c02_w.ie_regulamentacao IS NOT NULL AND r_c02_w.ie_regulamentacao::text <> '') then
			select	count(1)
			into STRICT	qt_registro_w
			from	pls_contrato_plano a,
				pls_plano b
			where	b.nr_sequencia	= a.nr_seq_plano
			and	a.nr_seq_contrato = nr_seq_contrato_w
			and	b.ie_regulamentacao = r_c02_w.ie_regulamentacao;
			
			if (qt_registro_w > 0) then
				ie_excecao_w	:= 'S';
			end if;
		end if;
		end;
	end loop; --C02
	
	if (ie_excecao_w = 'N') then
		ie_qt_vidas_contrato_w		:= 'N';
		vl_resultado_despesa_w		:= 0;
		vl_resultado_mensalidade_w	:= 0;
		dt_reajuste_contrato_w		:= to_date('01/'||ds_mes_reajuste_w||'/'||to_char(dt_reajuste_w,'yyyy'));
		
		if (ie_tipo_data_vidas_w = 'A') then --Atual
			dt_qt_vidas_w	:= clock_timestamp();
		elsif (ie_tipo_data_vidas_w = 'AC') then --Aniversario do contrato
			dt_qt_vidas_w	:= add_months(dt_reajuste_contrato_w,-12);
		end if;
		dt_qt_vidas_w	:= trunc(dt_qt_vidas_w,'mm');
		
		select	max(b.nr_sequencia)
		into STRICT	nr_seq_grupo_relac_reajuste_w
		from	pls_contrato_grupo a,
			pls_grupo_contrato b
		where	b.nr_sequencia	= a.nr_seq_grupo
		and	a.nr_seq_contrato = nr_seq_contrato_w
		and	b.ie_tipo_relacionamento = '2';
		
		if (nr_seq_grupo_relac_reajuste_w IS NOT NULL AND nr_seq_grupo_relac_reajuste_w::text <> '') then
			qt_vidas_contrato_w	:= pls_obter_qt_vidas_grupo_relac(nr_seq_grupo_relac_reajuste_w, dt_qt_vidas_w);
		else
			select	count(1)
			into STRICT	qt_vidas_contrato_w
			from	pls_segurado
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and (coalesce(dt_rescisao::text, '') = '' or ((dt_rescisao IS NOT NULL AND dt_rescisao::text <> '') and dt_rescisao >= dt_qt_vidas_w))
			and	trunc(dt_contratacao,'mm') <= dt_qt_vidas_w;
		end if;
		
		if (qt_vidas_inicial_w IS NOT NULL AND qt_vidas_inicial_w::text <> '') or (qt_vidas_final_w IS NOT NULL AND qt_vidas_final_w::text <> '') then
			if (qt_vidas_contrato_w between coalesce(qt_vidas_inicial_w,qt_vidas_contrato_w) and coalesce(qt_vidas_final_w,qt_vidas_contrato_w)) then
				ie_qt_vidas_contrato_w	:= 'S';
			end if;
		else
			ie_qt_vidas_contrato_w	:= 'S';
		end if;
		
		select	count(1)
		into STRICT	qt_produto_contrato_w
		from	pls_contrato_plano	a,
			pls_plano		b
		where	a.nr_seq_plano		= b.nr_sequencia
		and	a.nr_seq_contrato	= nr_seq_contrato_w
		and	((coalesce(ie_preco_w::text, '') = '') or (ie_preco_w = b.ie_preco))
		and	((b.ie_tipo_contratacao = ie_tipo_contratacao_lote_w) or (substr(b.ie_tipo_contratacao,1,1) = ie_tipo_contratacao_lote_w) or --Coletivos
			 (coalesce(ie_tipo_contratacao_lote_w,'T') = 'T')) -- Todos
		and	((b.ie_regulamentacao = ie_regulamentacao_lote_w) or (coalesce(ie_regulamentacao_lote_w::text, '') = ''));
		
		select	count(1)
		into STRICT	qt_reaj_periodo_w
		from	pls_prog_reaj_coletivo		a,
			pls_prog_reaj_colet_lote	b
		where	a.nr_seq_lote		= b.nr_sequencia
		and	a.nr_seq_contrato	= nr_seq_contrato_w
		and	to_char(b.dt_mes_reajuste,'yyyy') = to_char(dt_reajuste_w,'yyyy')
		and	not exists (	SELECT	1
					from	pls_reajuste
					where	nr_sequencia = a.nr_seq_reajuste
					and	(nr_seq_lote_deflator IS NOT NULL AND nr_seq_lote_deflator::text <> ''));
		
		if (qt_reaj_periodo_w = 0) and (qt_produto_contrato_w > 0) and (ie_qt_vidas_contrato_w = 'S') and
			(((coalesce(dt_rescisao_w::text, '') = '') or (dt_rescisao_w > dt_reajuste_w)) or
			((dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T','C')))) then
			SELECT * FROM pls_ar_gerar_resultado_pck.obter_sinistralidade(nr_seq_contrato_w, null, null, null, dt_inicio_analise_w, dt_fim_analise_w, ie_remido_sinist_reaj_w, cd_estabelecimento_p, tx_sinistralidade_w, tx_resultado_w, vl_resultado_mensalidade_w, vl_resultado_despesa_w) INTO STRICT tx_sinistralidade_w, tx_resultado_w, vl_resultado_mensalidade_w, vl_resultado_despesa_w;
			
			if (tx_sinistralidade_w between coalesce(tx_sinistro_inicial_w,tx_sinistralidade_w) and coalesce(tx_sinistro_final_w,tx_sinistralidade_w)) then
				select	max(tx_sinistralidade_ideal)
				into STRICT	tx_sinistralidade_ideal_w
				from	pls_contrato_inf_reajuste
				where	nr_seq_contrato	= nr_seq_contrato_w;
				
				select	nextval('pls_prog_reaj_coletivo_seq')
				into STRICT	nr_seq_prog_reaj_w
				;
				
				insert	into	pls_prog_reaj_coletivo(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						nr_seq_lote, nr_seq_contrato, vl_receita, vl_despesas, tx_resultado_grupo, tx_sinistralidade, ie_indice_reajuste,
						ie_status, tx_reajuste_copartic, tx_reajuste_copartic_max, tx_reajuste_inscricao,
						dt_reajuste, ie_reajustar_copartic, qt_vidas, dt_reajuste_contrato,
						tx_sinistralidade_ideal, ie_exibir_portal)
					values (	nr_seq_prog_reaj_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
						nr_seq_lote_p, nr_seq_contrato_w, vl_resultado_mensalidade_w, vl_resultado_despesa_w, tx_resultado_w, tx_sinistralidade_w, '3',
						'N', 0, 0, 0,
						dt_reajuste_contrato_w, ie_reajustar_copartic_w, qt_vidas_contrato_w, dt_reajuste_contrato_w,
						tx_sinistralidade_ideal_w, 'N');
				
				CALL pls_consistir_prog_reajuste(nr_seq_prog_reaj_w,null,nr_seq_contrato_w,null,null,'N',nm_usuario_p);
			end if;
		end if;
	end if;
	end;
end loop;
close C01;

select	count(1)
into STRICT	qt_registros_w
from	pls_prog_reaj_coletivo
where	nr_seq_lote	= nr_seq_lote_p;

if (qt_registros_w	> 0) then
	update	pls_prog_reaj_colet_lote
	set	dt_geracao_lote	= clock_timestamp()
	where	nr_sequencia	= nr_seq_lote_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_progr_reajuste_contr ( nr_seq_lote_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

