-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_cot_compra ( nr_cot_compra_p bigint, nm_usuario_p text, nr_cot_nova_p INOUT bigint) AS $body$
DECLARE


nr_cot_compra_ww		bigint;
nr_item_cot_compra_w	bigint;
nr_sequencia_w		bigint;


c01 CURSOR FOR
SELECT	nr_item_cot_compra
from	cot_compra_item
where	nr_cot_compra	= nr_cot_compra_ww;

c02 CURSOR FOR
SELECT	nr_sequencia
from	cot_compra_forn
where	nr_cot_compra	= nr_cot_compra_ww;




BEGIN

select	nextval('cot_compra_seq')
into STRICT	nr_cot_compra_ww
;


insert into cot_compra(
	nr_cot_compra,
	dt_cot_compra,
	dt_atualizacao,
	cd_comprador,
	nm_usuario,
	ds_observacao,
	cd_pessoa_solicitante,
	cd_estabelecimento,
	dt_retorno_prev,
	dt_entrega,
	ie_finalidade_cotacao,
	cd_modalidade)
SELECT	nr_cot_compra_ww,
	clock_timestamp(),
	clock_timestamp(),
	cd_comprador,
	nm_usuario_p,
	ds_observacao,
	cd_pessoa_solicitante,
	cd_estabelecimento,
	dt_retorno_prev,
	dt_entrega,
	coalesce(ie_finalidade_cotacao,'C'),
	cd_modalidade
from	cot_compra
where	nr_cot_compra	= nr_cot_compra_p;


insert into cot_compra_item(
	nr_cot_compra,
	nr_item_cot_compra,
	cd_material,
	qt_material,
	cd_unidade_medida_compra,
	dt_atualizacao,
	dt_limite_entrega,
	nm_usuario,
	ie_situacao,
	ds_material_direto_w,
	ie_regra_preco,
	cd_estab_item,
	cd_paciente_cotacao)
SELECT	nr_cot_compra_ww,
	nr_item_cot_compra,
	cd_material,
	qt_material,
	cd_unidade_medida_compra,
	clock_timestamp(),
	dt_limite_entrega,
	nm_usuario_p,
	ie_situacao,
	ds_material_direto_w,
	ie_regra_preco,
	cd_estab_item,
	cd_paciente_cotacao
from	cot_compra_item
where	nr_cot_compra	= nr_cot_compra_p;



open c01;
loop
fetch c01 into
	nr_item_cot_compra_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	CALL gerar_cot_compra_item_entrega(
		nr_cot_compra_ww,
		nr_item_cot_compra_w,
		nm_usuario_p);

	end;
end loop;
close c01;


insert into cot_compra_forn(
	nr_sequencia,
	nr_cot_compra,
	cd_cgc_fornecedor,
	cd_condicao_pagamento,
	cd_moeda,
	ie_frete,
	dt_atualizacao,
	nm_usuario,
	ie_tipo_documento,
	qt_dias_validade,
	qt_dias_entrega,
	pr_desconto,
	pr_desconto_pgto_antec,
	pr_juros_negociado,
	ds_observacao,
	cd_pessoa_fisica,
	vl_despesa_acessoria,
	ie_gerado_bionexo,
	vl_desconto,
	ie_liberada_internet,
	ie_status_envio_email_lib)
SELECT	nextval('cot_compra_forn_seq'),
	nr_cot_compra_ww,
	cd_cgc_fornecedor,
	cd_condicao_pagamento,
	cd_moeda,
	ie_frete,
	clock_timestamp(),
	nm_usuario_p,
	ie_tipo_documento,
	qt_dias_validade,
	qt_dias_entrega,
	pr_desconto,
	pr_desconto_pgto_antec,
	pr_juros_negociado,
	ds_observacao,
	cd_pessoa_fisica,
	vl_despesa_acessoria,
	ie_gerado_bionexo,
	vl_desconto,
	'N',
	'N'
from	cot_compra_forn
where	nr_cot_compra	= nr_cot_compra_p;



open c02;
loop
fetch c02 into
	nr_sequencia_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	CALL gerar_cot_compra_forn_item(
			nr_cot_compra_ww,
			nr_sequencia_w,
			nm_usuario_p,'N');
	end;
end loop;
close c02;



nr_cot_nova_p	:= nr_cot_compra_ww;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_cot_compra ( nr_cot_compra_p bigint, nm_usuario_p text, nr_cot_nova_p INOUT bigint) FROM PUBLIC;

