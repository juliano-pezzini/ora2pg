-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_plano_contra_benef ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
Alex August Schlote 14/06/2010
Procedure criada para copiar  todas as regras, do Cadastros Gerais/Plano de Saúde/OPS - Contratos e Beneficiários
*/
qt_classif_contrato_w	bigint;
qt_mot_susp_seg_w	bigint;
qt_mot_alt_plano_w	bigint;
qt_mot_alt_pagador_w	bigint;
qt_mot_incl_segurado_w	bigint;
qt_mot_cancelamento_w	bigint;
qt_mot_via_adicional_w	bigint;
qt_instrumento_jurid_w	bigint;
qt_tp_historic_contra_w	bigint;
qt_tp_mala_direta_w	bigint;
qt_tp_contrato_w	bigint;
qt_vinculo_estip_w	bigint;
nr_seq_congenere_w	bigint;
nr_seq_grupo_contraro_w	bigint;
nr_seq_mot_susp_seg_w	bigint;
nr_seq_mot_alt_plano_w	bigint;
nr_seq_mot_alt_pag_w	bigint;
nr_seq_mot_inclu_seg_w	bigint;
nr_seq_mot_cancelamen_w	bigint;
nr_seq_mot_via_adic_w	bigint;
nr_seq_instr_juridico_w	bigint;
nr_seq_tipo_his_contr_w	bigint;
nr_seq_tipo_mala_w	bigint;
nr_seq_tipo_mala_nova_w	bigint;
nr_seq_acesso_mala_w	bigint;
nr_seq_regra_mala_w	bigint;
nr_seq_tipo_contrato_w	bigint;
nr_seq_vinculo_esti_w	bigint;

/*Cursor C01 is
	select	nr_sequencia
	from	pls_congenere
	where	cd_estabelecimento	= cd_estab_origem_p;
*/
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_classif_grupo_contrato
	where	cd_estabelecimento	= cd_estab_origem_p;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_susp_seg
	where	cd_estabelecimento	= cd_estab_origem_p;

C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_alteracao_plano
	where	cd_estabelecimento	= cd_estab_origem_p;

C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_alt_pagador
	where	cd_estabelecimento	= cd_estab_origem_p;

C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_inclusao_seg
	where	cd_estabelecimento	= cd_estab_origem_p;

C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_cancelamento
	where	cd_estabelecimento	= cd_estab_origem_p;

C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_motivo_via_adicional
	where	cd_estabelecimento	= cd_estab_origem_p;

C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_instrumento_juridico
	where	cd_estabelecimento	= cd_estab_origem_p;

C10 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_tipo_hist_contrato
	where	cd_estabelecimento	= cd_estab_origem_p;

C11 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_tipo_mala_direta
	where	cd_estabelecimento	= cd_estab_origem_p;

C12 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_acesso_mala_direta
	where	nr_seq_tipo_mala	= nr_seq_tipo_mala_w;

C13 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_mala_direta
	where	nr_seq_tipo_mala	= nr_seq_tipo_mala_w;

C14 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_tipo_contato
	where	cd_estabelecimento	= cd_estab_origem_p;

C15 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_vinculo_estipulante
	where	cd_estabelecimento	= cd_estab_origem_p;

BEGIN

/*open C01;
loop
fetch C01 into
	nr_seq_congenere_w;
exit when C01%notfound;
	begin
	insert into pls_congenere
		(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
			cd_cgc,ie_situacao,cd_cooperativa,nr_seq_congenere,ie_tipo_outogrante,dt_inclusao,
			dt_exclusao,nr_seq_tipo_coop,ie_tipo_congenere,ie_usuario_eventual)
		(select	pls_congenere_seq.nextval,nm_usuario,sysdate,nm_usuario_nrec,sysdate,cd_estab_destino_p,
			cd_cgc,ie_situacao,cd_cooperativa,nr_seq_congenere,ie_tipo_outogrante,dt_inclusao,
			dt_exclusao,nr_seq_tipo_coop,ie_tipo_congenere,ie_usuario_eventual
		from	pls_congenere
		where	nr_sequencia	= nr_seq_congenere_w):
	end;
end loop;
close C01;*/
open C02;
loop
fetch C02 into
	nr_seq_grupo_contraro_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	select	count(*)
	into STRICT	qt_classif_contrato_w
	from	pls_classif_grupo_contrato
	where	nr_seq_classif_ant	= nr_seq_grupo_contraro_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_classif_contrato_w = 0) then
		insert into pls_classif_grupo_contrato(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_classificacao,ie_situacao,nr_seq_classif_ant)
			(SELECT	nextval('pls_classif_grupo_contrato_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_classificacao,ie_situacao,nr_seq_grupo_contraro_w
			from	pls_classif_grupo_contrato
			where	nr_sequencia	= nr_seq_grupo_contraro_w);
	end if;
	end;
end loop;
close C02;

open C03;
loop
fetch C03 into
	nr_seq_mot_susp_seg_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	select	count(*)
	into STRICT	qt_mot_susp_seg_w
	from	pls_motivo_susp_seg
	where	nr_seq_motivo_ant = nr_seq_mot_susp_seg_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_mot_susp_seg_w = 0) then
		insert into pls_motivo_susp_seg(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_motivo,ie_situacao,nr_seq_motivo_ant)
			(SELECT	nextval('pls_motivo_susp_seg_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_motivo,ie_situacao,nr_seq_mot_susp_seg_w
			from	pls_motivo_susp_seg
			where	nr_sequencia	= nr_seq_mot_susp_seg_w);
	end if;
	end;
end loop;
close C03;

open C04;
loop
fetch C04 into
	nr_seq_mot_alt_plano_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin

	select	count(*)
	into STRICT	qt_mot_alt_plano_w
	from	pls_motivo_alteracao_plano
	where	nr_seq_motivo_ant	= nr_seq_mot_alt_plano_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_mot_alt_plano_w = 0) then
		insert into pls_motivo_alteracao_plano(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_motivo,ie_situacao,cd_ans,nr_seq_motivo_ant)
			(SELECT	nextval('pls_motivo_alteracao_plano_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_motivo,ie_situacao,cd_ans,nr_seq_mot_alt_plano_w
			from	pls_motivo_alteracao_plano
			where	nr_sequencia	= nr_seq_mot_alt_plano_w);
	end if;
	end;
end loop;
close C04;

open C05;
loop
fetch C05 into
	nr_seq_mot_alt_pag_w;
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	select	count(*)
	into STRICT	qt_mot_alt_pagador_w
	from	pls_motivo_alt_pagador
	where	nr_seq_motivo_ant	= nr_seq_mot_alt_pag_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_mot_alt_pagador_w = 0) then
		insert into pls_motivo_alt_pagador(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,
				cd_estabelecimento,ds_motivo,qt_minima_meses,qt_maximo_meses,tx_fracao,
				ie_situacao,nr_seq_motivo_ant,ie_vencimento_fim_mes)
			(SELECT	nextval('pls_motivo_alt_pagador_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),
				cd_estab_destino_p,ds_motivo,qt_minima_meses,qt_maximo_meses,tx_fracao,
				ie_situacao,nr_seq_mot_alt_pag_w,ie_vencimento_fim_mes
			from	pls_motivo_alt_pagador
			where	nr_sequencia	= nr_seq_mot_alt_pag_w);
	end if;
	end;
end loop;
close C05;

open C06;
loop
fetch C06 into
	nr_seq_mot_inclu_seg_w;
EXIT WHEN NOT FOUND; /* apply on C06 */
	begin

	select	count(*)
	into STRICT	qt_mot_incl_segurado_w
	from	pls_motivo_inclusao_seg
	where	nr_seq_motivo_ant	= nr_seq_mot_inclu_seg_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_mot_incl_segurado_w = 0) then
		insert into pls_motivo_inclusao_seg(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_motivo,cd_ans,ie_situacao,ie_portabilidade,ie_proposta_adesao,nr_seq_motivo_ant)
			(SELECT	nextval('pls_motivo_inclusao_seg_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_motivo,cd_ans,ie_situacao,ie_portabilidade,ie_proposta_adesao,nr_seq_mot_inclu_seg_w
			from	pls_motivo_inclusao_seg
			where	nr_sequencia	= nr_seq_mot_inclu_seg_w);
	end if;
	end;
end loop;
close C06;

open C07;
loop
fetch C07 into
	nr_seq_mot_cancelamen_w;
EXIT WHEN NOT FOUND; /* apply on C07 */
	begin

	select	count(*)
	into STRICT	qt_mot_cancelamento_w
	from	pls_motivo_cancelamento
	where	nr_seq_motivo_ant	= nr_seq_mot_cancelamen_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_mot_cancelamento_w = 0) then
		insert into pls_motivo_cancelamento(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				cd_motivo_cancelamento,ds_motivo_cancelamento,ie_situacao,ie_inadimplencia,ie_portabilidade,nr_seq_motivo_ant)
			(SELECT nextval('pls_motivo_cancelamento_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				cd_motivo_cancelamento,ds_motivo_cancelamento,ie_situacao,ie_inadimplencia,ie_portabilidade,nr_seq_mot_cancelamen_w
			from	pls_motivo_cancelamento
			where	nr_sequencia	= nr_seq_mot_cancelamen_w);
	end if;
	end;
end loop;
close C07;

open C08;
loop
fetch C08 into
	nr_seq_mot_via_adic_w;
EXIT WHEN NOT FOUND; /* apply on C08 */
	begin

	select	count(*)
	into STRICT	qt_mot_via_adicional_w
	from	pls_motivo_via_adicional
	where	nr_seq_motivo_ant	= nr_seq_mot_via_adic_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_mot_via_adicional_w = 0) then
		insert into pls_motivo_via_adicional(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_motivo,ie_gerar_valor,ie_situacao,ie_visualiza_portal,nr_seq_motivo_ant)
			(SELECT nextval('pls_motivo_via_adicional_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_motivo,ie_gerar_valor,ie_situacao,ie_visualiza_portal,nr_seq_mot_via_adic_w
			from	pls_motivo_via_adicional
			where	nr_sequencia	 = nr_seq_mot_via_adic_w);
	end if;
	end;
end loop;
close C08;

open C09;
loop
fetch C09 into
	nr_seq_instr_juridico_w;
EXIT WHEN NOT FOUND; /* apply on C09 */
	begin

	select	count(*)
	into STRICT	qt_instrumento_jurid_w
	from	pls_instrumento_juridico
	where	nr_seq_instrumento_ant	= nr_seq_instr_juridico_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_instrumento_jurid_w = 0) then
		insert into pls_instrumento_juridico(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				nm_tema,ds_tema,ie_situacao,nr_seq_instrumento_ant)
			(SELECT nextval('pls_instrumento_juridico_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				nm_tema,ds_tema,ie_situacao,nr_seq_instr_juridico_w
			from	pls_instrumento_juridico
			where	nr_sequencia	= nr_seq_instr_juridico_w);
	end if;
	end;
end loop;
close C09;

open C10;
loop
fetch C10 into
	nr_seq_tipo_his_contr_w;
EXIT WHEN NOT FOUND; /* apply on C10 */
	begin

	select	count(*)
	into STRICT	qt_tp_historic_contra_w
	from	pls_tipo_hist_contrato
	where	nr_seq_tipo_hist_ant	= nr_seq_tipo_his_contr_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_tp_historic_contra_w = 0) then
		insert into pls_tipo_hist_contrato(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_tipo_historico,ie_situacao,nr_seq_tipo_hist_ant)
			(SELECT	nextval('pls_tipo_hist_contrato_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_tipo_historico,ie_situacao,nr_seq_tipo_his_contr_w
			from	pls_tipo_hist_contrato
			where	nr_sequencia	= nr_seq_tipo_his_contr_w);
	end if;
	end;
end loop;
close C10;

open C11;
loop
fetch C11 into
	nr_seq_tipo_mala_w;
EXIT WHEN NOT FOUND; /* apply on C11 */
	begin

	select	count(*)
	into STRICT	qt_tp_mala_direta_w
	from	pls_tipo_mala_direta
	where	nr_seq_tipo_ant	= nr_seq_tipo_mala_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_tp_mala_direta_w = 0) then
		select	nextval('pls_tipo_mala_direta_seq')
		into STRICT	nr_seq_tipo_mala_nova_w
		;

		insert into pls_tipo_mala_direta(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				nm_tipo_mala_direta,ie_situacao,nr_seq_tipo_ant)
			(SELECT	nr_seq_tipo_mala_nova_w,nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				nm_tipo_mala_direta,ie_situacao,nr_seq_tipo_mala_w
			from	pls_tipo_mala_direta
			where	nr_sequencia	= nr_seq_tipo_mala_w);

		open C12;
		loop
		fetch C12 into
			nr_seq_acesso_mala_w;
		EXIT WHEN NOT FOUND; /* apply on C12 */
			begin
			insert into pls_acesso_mala_direta(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,nr_seq_tipo_mala,
					ie_situacao,cd_perfil,nm_usuario_param)
				(SELECT	nextval('pls_acesso_mala_direta_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),nr_seq_tipo_mala_nova_w,
					ie_situacao,cd_perfil,nm_usuario_param
				from	pls_acesso_mala_direta
				where	nr_sequencia	= nr_seq_acesso_mala_w);

			end;
		end loop;
		close C12;

		open C13;
		loop
		fetch C13 into
			nr_seq_regra_mala_w;
		EXIT WHEN NOT FOUND; /* apply on C13 */
			begin
			insert into pls_regra_mala_direta(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,nr_seq_tipo_mala,
					nr_seq_relatorio)
				(SELECT	nextval('pls_regra_mala_direta_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),nr_seq_tipo_mala_nova_w,
					nr_seq_relatorio
				from	pls_regra_mala_direta
				where	nr_sequencia	= nr_seq_regra_mala_w);
			end;
		end loop;
		close C13;
	end if;
	end;
end loop;
close C11;

open C14;
loop
fetch C14 into
	nr_seq_tipo_contrato_w;
EXIT WHEN NOT FOUND; /* apply on C14 */
	begin

	select	count(*)
	into STRICT	qt_tp_contrato_w
	from	pls_tipo_contato
	where	nr_seq_tipo_contato_ant	= nr_seq_tipo_contrato_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_tp_contrato_w = 0) then
		insert into pls_tipo_contato(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_tipo_contato,ie_situacao,nr_seq_tipo_contato_ant)
			(SELECT	nextval('pls_tipo_contato_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_tipo_contato,ie_situacao,nr_seq_tipo_contrato_w
			from	pls_tipo_contato
			where	nr_sequencia = nr_seq_tipo_contrato_w);
	end if;
	end;
end loop;
close C14;

open C15;
loop
fetch C15 into
	nr_seq_vinculo_esti_w;
EXIT WHEN NOT FOUND; /* apply on C15 */
	begin

	select	count(*)
	into STRICT	qt_vinculo_estip_w
	from	pls_vinculo_estipulante
	where	nr_seq_vinculo_ant	= nr_seq_vinculo_esti_w
	and	cd_estabelecimento	= cd_estab_destino_p;

	if (qt_vinculo_estip_w = 0) then
		insert into pls_vinculo_estipulante(	nr_sequencia,nm_usuario,dt_atualizacao,nm_usuario_nrec,dt_atualizacao_nrec,cd_estabelecimento,
				ds_vinculo,ie_situacao,nr_seq_vinculo_ant)
			(SELECT	nextval('pls_vinculo_estipulante_seq'),nm_usuario_p,clock_timestamp(),nm_usuario_nrec,clock_timestamp(),cd_estab_destino_p,
				ds_vinculo,ie_situacao,nr_seq_vinculo_esti_w
			from	pls_vinculo_estipulante
			where	nr_sequencia	= nr_seq_vinculo_esti_w);
	end if;
	end;
end loop;
close C15;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_plano_contra_benef ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

