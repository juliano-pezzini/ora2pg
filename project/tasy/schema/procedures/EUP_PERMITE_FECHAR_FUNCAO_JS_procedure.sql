-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_permite_fechar_funcao_js ( cd_convenio_p bigint, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nm_usuario_p text, ds_msg_abort_p INOUT text, ds_msg_urgencia_pa_p INOUT text, ds_msg_decl_obito_p INOUT text, ds_mensagem_pf_p INOUT text, ie_atrib_obrig_pf_p INOUT text, ie_regra_proc_p INOUT text) AS $body$
DECLARE

 
ie_obriga_nivel_urgencia_pa_w	varchar(1);
cd_estabelecimento_w 		smallint;
ds_classificacao_pa_w		varchar(60);	
ie_tipo_atendimento_w		smallint;	
ie_atendimento_setor_w		varchar(1);	
ie_permite_atend_setor_w	varchar(1);	
ie_exige_declaracao_w		varchar(1);	
ie_obriga_inf_titular_w		varchar(1);
qt_titular_conv_w		bigint;
ie_consiste_medico_exec_w	varchar(1);
qt_prescr_sem_exec_w		bigint;
ie_habilita_tit_convenio_w	varchar(1);
ie_consiste_diagnostico_w	varchar(2);
ds_diagnostico_w		varchar(255);
ie_convenio_exige_diag_w	varchar(1);
dt_alta_w			timestamp;
ie_consiste_pf_w		varchar(1);
ie_prescr_eup_w		varchar(1);
					

BEGIN 
 
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
 
ie_consiste_diagnostico_w := Obter_param_Usuario(916, 453, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_diagnostico_w);
ie_consiste_medico_exec_w := Obter_param_Usuario(916, 461, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_medico_exec_w);
ie_habilita_tit_convenio_w := Obter_param_Usuario(916, 530, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_habilita_tit_convenio_w);
ie_obriga_nivel_urgencia_pa_w := Obter_param_Usuario(916, 658, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_obriga_nivel_urgencia_pa_w);
ie_permite_atend_setor_w := Obter_param_Usuario(916, 668, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_atend_setor_w);
ie_obriga_inf_titular_w := Obter_param_Usuario(916, 831, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_obriga_inf_titular_w);
ie_consiste_pf_w := Obter_param_Usuario(916, 912, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_consiste_pf_w);
ie_prescr_eup_w := Obter_param_Usuario(916, 1165, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prescr_eup_w);
 
if (coalesce(nr_atendimento_p,0) > 0) then 
 
	select	max(substr(obter_desc_triagem(nr_seq_triagem),1,60)), 
		max(ie_tipo_atendimento) 
	into STRICT	ds_classificacao_pa_w, 
		ie_tipo_atendimento_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_p;
 
	if (coalesce(ds_classificacao_pa_w::text, '') = '') and (ie_tipo_atendimento_w = 3) and (ie_obriga_nivel_urgencia_pa_w = 'S') then 
		ds_msg_urgencia_pa_p := substr(obter_texto_tasy(68156, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
	 
	ie_atendimento_setor_w := obter_se_atendimento_tem_setor(nr_atendimento_p);
	if (ie_permite_atend_setor_w <> 'S') and (ie_atendimento_setor_w = 'N') then 
		ds_msg_abort_p := substr(obter_texto_tasy(141633, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
	 
	ie_exige_declaracao_w := obter_exige_dec_obito_js(nr_atendimento_p);
	 
	if (ie_exige_declaracao_w = 'S') then 
		ds_msg_decl_obito_p := substr(obter_texto_tasy(71046, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
	 
	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
	 
		select	coalesce(count(*),0) 
		into STRICT	qt_titular_conv_w 
		from  	pessoa_titular_convenio 
		where	cd_pessoa_fisica = cd_pessoa_fisica_p;
		 
		if (qt_titular_conv_w = 0) and (ie_obriga_inf_titular_w = 'S') and (ie_habilita_tit_convenio_w = 'S') then 
		 
			ds_msg_abort_p := substr(obter_texto_tasy(143977, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;
	 
	if (ie_consiste_medico_exec_w = 'S') then 
		 
		select	count(*) 
		into STRICT	qt_prescr_sem_exec_w 
		from  	prescr_medica a, 
			prescr_procedimento b 
		where 	a.nr_atendimento = nr_atendimento_p 
		and	a.nr_prescricao = b.nr_prescricao 
		and (((ie_prescr_eup_w = 'S') and a.cd_funcao_origem = 916 ) or (ie_prescr_eup_w = 'N')) 
		and	coalesce(a.dt_liberacao::text, '') = '' 
		and	coalesce(b.cd_medico_exec::text, '') = '';
		 
		if (qt_prescr_sem_exec_w > 0) then 
			ds_msg_abort_p := substr(obter_texto_tasy(313230, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;
	 
	if (ie_consiste_diagnostico_w <> 'N') then 
		 
		select	max(dt_alta) 
		into STRICT	dt_alta_w 
		from	atendimento_paciente 
		where 	nr_atendimento = nr_atendimento_p;
		 
		ds_diagnostico_w := obter_diagnostico_atendimento(nr_atendimento_p);
		 
		if (coalesce(dt_alta_w::text, '') = '') and (coalesce(ds_diagnostico_w::text, '') = '') then 
			 
			if (ie_consiste_diagnostico_w = 'D') and (coalesce(cd_convenio_p,0) > 0) then 
				ie_convenio_exige_diag_w := obter_se_conv_exige_diag(cd_convenio_p,cd_estabelecimento_w);
				if (ie_convenio_exige_diag_w = 'S') then 
					ds_msg_abort_p := substr(obter_texto_tasy(116067, wheb_usuario_pck.get_nr_seq_idioma),1,255);
					goto final;
				end if;
			elsif (ie_consiste_diagnostico_w = 'S') then 
				ds_msg_abort_p := substr(obter_texto_tasy(116067, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				goto final;
			end if;
			 
		end if;
	end if;
	 
	if (ie_consiste_pf_w = 'S') then 
		SELECT * FROM eup_consis_atrib_cad_compl_pf(cd_pessoa_fisica_p, ie_atrib_obrig_pf_p, ds_mensagem_pf_p) INTO STRICT ie_atrib_obrig_pf_p, ds_mensagem_pf_p;
	end if;
	 
	select obter_se_regra_proc(nr_atendimento_p) 
	into STRICT ie_regra_proc_p 
	;
	 
end if;
 
 
 
<<final>> 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_permite_fechar_funcao_js ( cd_convenio_p bigint, cd_pessoa_fisica_p text, nr_atendimento_p bigint, nm_usuario_p text, ds_msg_abort_p INOUT text, ds_msg_urgencia_pa_p INOUT text, ds_msg_decl_obito_p INOUT text, ds_mensagem_pf_p INOUT text, ie_atrib_obrig_pf_p INOUT text, ie_regra_proc_p INOUT text) FROM PUBLIC;

