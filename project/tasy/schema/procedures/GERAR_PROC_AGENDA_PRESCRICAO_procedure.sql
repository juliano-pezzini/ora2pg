-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proc_agenda_prescricao ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w					bigint;
cd_procedimento_w				bigint;
cd_procedimento_ww				bigint;
ie_origem_proced_w				bigint;
dt_resultado_w					timestamp;
cd_medico_exec_w				varchar(10);
ie_status_agenda_w				varchar(03);
ie_autorizacao_w				varchar(03);
cd_medico_agenda_w				varchar(10);
ds_setor_param_w				varchar(100);
cd_setor_proc_w					bigint;
ie_lado_w						varchar(01);
nr_seq_proc_interno_w			bigint;
hr_inicio_w						timestamp;
cd_estabelecimento_w			smallint;
ie_situacao_w					varchar(01);
ie_gerar_proc_adic_w			varchar(1);
cd_setor_origem_w				integer;
cd_setor_destino_w				integer;
qt_ambos_w						smallint;
nr_seq_agenda_princ_w			Agenda_paciente_proc.nr_seq_agenda_princ%type;
nr_seq_interno_w				bigint;
nr_seq_proc_princ_w				bigint;
nr_seq_exame_w					bigint;
cd_intervalo_w					varchar(255);
DT_PRIMEIRO_HORARIO_w			timestamp;
NR_HORAS_VALIDADE_w				bigint;
nr_intervalos_w					bigint;
ds_horarios_w					varchar(255);
ds_horarios_2_w					varchar(255);
ie_setor_exec_proc_int_w 		varchar(1);
ie_dt_maior_w					varchar(1);
nr_acesso_dicom_w				varchar(10);
ie_considera_regra_med_exame_w	varchar(1);
cd_medico_agenda_aux_w			varchar(10);
nr_atendimento_w				bigint;
ie_medico_executor_w			varchar(10);
cd_cgc_w						varchar(14);
cd_medico_executor_w			varchar(10);
cd_pessoa_fisica_w				varchar(10);
ie_autorizados_w				varchar(1);
nr_doc_convenio_w				varchar(20);
qt_procedimento_w				double precision;
qt_proc_regra_w					integer;
qt_param_1231                   integer;
considera_regra_quantidade_w    varchar(1);								
cd_convenio_w					integer;
cd_convenio_ww					integer;
cd_categoria_w					varchar(10);
cd_conv_atend_w					bigint;
cd_categ_atend_w				varchar(10);
cd_plano_w						varchar(10);
ds_observacao_w					varchar(2000);
ds_observacao_ww				varchar(4000);
ie_atualizar_obs_prescr_w		varchar(1);
ie_gerar_kit_proc_w				varchar(1);
ie_gerar_proc_adic_previstos_w	varchar(1) := 'N';
nr_seq_solic_compl_w			bigint;
ie_tipo_atendimento_w			atendimento_paciente.ie_tipo_atendimento%type;
cd_equipamento_w				prescr_procedimento.cd_equipamento%type;
nr_seq_topografia_w				topografia_dor.nr_sequencia%type;
ds_classe_medic_excl_cir_w 		varchar(255);/*funcao_parametro.vl_parametro%type;*/
ie_utiliza_atb_w 				agenda_paciente.ie_utiliza_atb%type;
ie_gerar_med_adicional_w		varchar(1);
nr_seq_prescr_w					prescr_procedimento.nr_sequencia%type;
qt_medico_adic_exame_w			integer;
nr_seq_prof_adic_w				prescr_proced_prof_adic.nr_sequencia%type;
cd_med_requisitante_w			Agenda_paciente.CD_MEDICO%type;
ie_utilizar_equip_presc_w		varchar(1);
ie_param_459_w					varchar(1);
ie_param_843_w					varchar(1);
cd_medico_w						prescr_medica.cd_medico%type;
qt_autorizada_w					procedimento_autorizado.qt_autorizada%type;					
qt_pre_venda_w				bigint;
ie_somente_exclusivo_w			varchar(1) := 'N';
cd_medico_presc_proc_w			prescr_procedimento.CD_MEDICO_SOLICITANTE%type;
cd_convenio_prescr_proced_w		integer;
cd_categoria_prescr_proced_w	varchar(10);
ds_dado_clinico_w			prescr_medica.ds_dado_clinico%type;
cd_tipo_cirur_adic_w				prescr_procedimento.CD_TIPO_CIRURGIA%type;
cd_tipo_cirur_prin_w				prescr_procedimento.CD_TIPO_CIRURGIA%type;
ie_anestesia_w				Agenda_paciente.ie_anestesia%type;
vl_coparticipacao_w			agenda_paciente_auxiliar.vl_coparticipacao%type;
vl_coparticipacao_adic_w		Agenda_paciente_proc.vl_coparticipacao%type;
nr_Seq_inf_add_w			prescr_proced_inf_adic.nr_sequencia%type;
cd_convenio_ag_w 				agenda_paciente.cd_convenio%TYPE;
cd_categoria_ag_w               agenda_paciente.cd_categoria%TYPE;
cd_plano_ag_w                   agenda_paciente.cd_plano%TYPE;
nr_seq_contraste_w		procedimento_guia_wint.nr_seq_contraste%type;
nr_crm_w            procedimento_guia_wint.nr_crm%type;
nr_ano_guia_w            procedimento_guia_wint.nr_ano_guia%type;
nr_seq_proc_interno_princ_w		agenda_paciente.nr_seq_proc_interno%type;
ie_excluir_exame_princ_w		varchar(1) := 'N';

C01 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.ie_status_agenda,
		a.ie_autorizacao,
		CASE WHEN b.cd_tipo_agenda=1 THEN coalesce(coalesce(a.cd_medico_exec, cd_medico_exec_w),a.cd_medico)  ELSE coalesce(a.cd_medico_exec, cd_medico_exec_w) END ,
		a.ie_lado,
		a.nr_seq_proc_interno,
		a.hr_inicio,
		a.cd_setor_origem,
		a.cd_setor_destino,
		0 nr_seq_agenda_princ,
		substr(a.ds_observacao,1,2000) ds_observacao,
		(	SELECT	max(z.nr_sequencia)
			from	topografia_dor z
			where	z.nr_sequencia = a.cd_topografia_proced
			and	z.ie_prescricao = 'S' ) nr_seq_topografia,
		a.CD_MEDICO,
		substr(obter_desc_indicacao_ageint(a.nr_sequencia,'P'),0,255) ds_dado_clinico,
		a.ie_anestesia,
		CASE WHEN campo_numerico(obter_dados_proc_interno(a.nr_seq_proc_interno,'TC'))=0 THEN  null  ELSE campo_numerico(obter_dados_proc_interno(a.nr_seq_proc_interno,'TC')) END ,
		(select max(x.vl_coparticipacao) from agenda_paciente_auxiliar x where x.nr_seq_agenda = nr_seq_agenda_p),
		(select max(x.nr_seq_contraste) from procedimento_guia_wint x, agenda_integrada_item y where x.nr_seq_ageint_item = y.nr_sequencia and y.nr_seq_agenda_exame = a.nr_sequencia),
		(select max(y.crm_medico_externo) from agenda_integrada_item y where y.nr_seq_agenda_exame = a.nr_sequencia),
		(select max(y.nr_ano_guia) from agenda_integrada_item y where y.nr_seq_agenda_exame = a.nr_sequencia)
	from	Agenda_paciente a,
		agenda b
	where	a.cd_agenda 	= b.cd_agenda
	and	a.nr_sequencia	= nr_seq_agenda_p
	and	(a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '')
	and	ie_autorizados_w	=	'N'
	and	((ie_gerar_proc_adic_previstos_w = 'N') or ((ie_gerar_proc_adic_previstos_w = 'S') and not exists ( select 1 
														from  prescr_procedimento x
														where x.cd_procedimento  = a.cd_procedimento
														and   x.ie_origem_proced = a.ie_origem_proced
														and   x.nr_prescricao	 =  nr_prescricao_p)));

c02 CURSOR FOR
	SELECT	cd_setor_atendimento
	from	procedimento_setor_atend
	where	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	cd_estabelecimento	= cd_estabelecimento_w
	order by ie_prioridade desc;

C03 CURSOR FOR
	SELECT	b.cd_procedimento,
		b.ie_origem_proced,
		a.ie_status_agenda,
		b.ie_autorizacao,
		coalesce(b.cd_medico, coalesce(a.cd_medico_exec, cd_medico_exec_w)),
		b.ie_lado,
		b.nr_seq_proc_interno,
		a.hr_inicio,
		a.cd_setor_origem,
		a.cd_setor_destino,
		coalesce(b.nr_seq_agenda_princ,0) nr_seq_agenda_princ,
		coalesce(b.qt_procedimento,1),		
		b.ds_observacao,
		a.ds_observacao,
		(	SELECT	max(z.nr_sequencia)
			from	topografia_dor z
			where	z.nr_sequencia = b.cd_topografia_proced
			and	z.ie_prescricao = 'S' ) nr_seq_topografia,
		b.CD_MEDICO_REQ,
		CASE WHEN obter_tipo_agenda(a.cd_agenda)=1 THEN  b.cd_convenio  ELSE null END  cd_convenio,
		CASE WHEN obter_tipo_agenda(a.cd_agenda)=1 THEN  b.cd_categoria  ELSE null END  cd_categoria,
		substr(obter_desc_indicacao_ageint(a.nr_sequencia,'P'),0,255) ds_dado_clinico,
		CASE WHEN campo_numerico(obter_dados_proc_interno(b.nr_seq_proc_interno,'TC'))=0 THEN  null  ELSE campo_numerico(obter_dados_proc_interno(b.nr_seq_proc_interno,'TC')) END ,
		a.ie_anestesia,
		b.vl_coparticipacao,
		(select max(x.nr_seq_contraste) from procedimento_guia_wint x, agenda_integrada_item y where x.nr_seq_ageint_item = y.nr_sequencia and y.nr_seq_agenda_exame = a.nr_sequencia),
		(select max(y.crm_medico_externo) from agenda_integrada_item y where y.nr_seq_agenda_exame = a.nr_sequencia),
		(select max(y.nr_ano_guia) from agenda_integrada_item y where y.nr_seq_agenda_exame = a.nr_sequencia)
	from 	agenda_paciente a,
		Agenda_paciente_proc b
	where  	a.nr_sequencia	= nr_seq_agenda_p
	and	a.nr_sequencia	= b.nr_sequencia
	and	ie_autorizados_w	=	'N'
	and	((ie_gerar_proc_adic_previstos_w = 'N') or ((ie_gerar_proc_adic_previstos_w = 'S') and not exists ( select 1 
														from  prescr_procedimento x
														where x.cd_procedimento = b.cd_procedimento
														and   x.ie_origem_proced = b.ie_origem_proced
														and   x.nr_prescricao =	   nr_prescricao_p)))
	order by nr_seq_agenda_princ;

c04 CURSOR FOR
	SELECT cd_setor_atendimento
	from PROC_INTERNO_SETOR
	where nr_seq_proc_interno = nr_seq_proc_interno_w
	and cd_estabelecimento = cd_estabelecimento_w;
	
	
c05 CURSOR FOR
	SELECT 	c.cd_procedimento,
			c.ie_origem_proced,
			c.qt_autorizada,
			a.ie_status_agenda,
			'A',
			coalesce(a.cd_medico_exec, cd_medico_exec_w),
			c.ie_lado,
			c.nr_seq_proc_interno,
			a.hr_inicio,
			a.cd_setor_origem,
			a.cd_setor_destino,		
			0,
			(SELECT	max(z.nr_sequencia)
			from	topografia_dor z
			where	z.nr_sequencia = a.cd_topografia_proced
			and	z.ie_prescricao = 'S' ) nr_seq_topografia,
			a.ie_anestesia,
			(select max(x.vl_coparticipacao) from agenda_paciente_auxiliar x where x.nr_seq_agenda = nr_seq_agenda_p),
			(select max(x.nr_seq_contraste) from procedimento_guia_wint x, agenda_integrada_item y where x.nr_seq_ageint_item = y.nr_sequencia and y.nr_seq_agenda_exame = a.nr_sequencia),
			(select max(y.crm_medico_externo) from agenda_integrada_item y where y.nr_seq_agenda_exame = a.nr_sequencia),
			(select max(y.nr_ano_guia) from agenda_integrada_item y where y.nr_seq_agenda_exame = a.nr_sequencia)
	from 	agenda_paciente a,
			autorizacao_convenio b,
			procedimento_autorizado c,
			estagio_autorizacao d
	where	c.nr_sequencia_autor	= b.nr_sequencia
	and		c.qt_autorizada		> 0
	and		a.nr_sequencia		= nr_seq_agenda_p
	and		a.nr_sequencia 		= b.nr_seq_agenda
	and		d.nr_sequencia		= b.nr_seq_estagio
	and		d.ie_interno		= 10
	and		ie_autorizados_w	in ('S', 'A');

c06 CURSOR FOR
	SELECT cd_setor_exclusivo
	from PROCEDIMENTO
	where cd_procedimento	= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w;
	

BEGIN
	
ie_utilizar_equip_presc_w := Obter_Param_Usuario(869, 417, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_utilizar_equip_presc_w);

select	coalesce(max(b.cd_estabelecimento),1),
		max(a.DT_PRIMEIRO_HORARIO),
		max(NR_HORAS_VALIDADE),
		max(b.nr_atendimento),
		max(b.ie_tipo_atendimento),
		max(a.cd_medico)
into STRICT	cd_estabelecimento_w,
		DT_PRIMEIRO_HORARIO_w,
		NR_HORAS_VALIDADE_w,
		nr_atendimento_w,
		ie_tipo_atendimento_w,
		cd_medico_w
from	atendimento_paciente b,
		prescr_medica a
where	a.nr_atendimento	= b.nr_atendimento
and		a.nr_prescricao		= nr_prescricao_p;

select	max(b.cd_pessoa_fisica),		
		max(a.cd_convenio),
		max(a.cd_categoria),
		max(a.cd_plano)
into STRICT	cd_medico_exec_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w
from	agenda b,
		agenda_paciente a
where 	a.nr_sequencia	= nr_seq_agenda_p
and		a.cd_agenda		= b.cd_agenda;

cd_convenio_ag_w := coalesce(cd_convenio_w, 0);
cd_categoria_ag_w := coalesce(cd_categoria_w, 0);
cd_plano_ag_w := coalesce(cd_plano_w, 0);

select	Obter_Valor_Param_Usuario(916, 47, obter_perfil_ativo, nm_usuario_p, 0)
into STRICT	ds_setor_param_w
;

ie_somente_exclusivo_w := Obter_Param_Usuario(916, 200, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_somente_exclusivo_w);
qt_ambos_w := Obter_Param_Usuario(916, 163, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, qt_ambos_w);
considera_regra_quantidade_w := Obter_Param_Usuario(916, 1231, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, considera_regra_quantidade_w);																			
ie_gerar_proc_adic_w := Obter_Param_Usuario(916, 301, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_proc_adic_w);
cd_intervalo_w := Obter_Param_Usuario(916, 537, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_intervalo_w);
ie_setor_exec_proc_int_w := Obter_Param_Usuario(916, 619, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_setor_exec_proc_int_w);
ie_dt_maior_w := Obter_Param_Usuario(916, 626, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_dt_maior_w);
ie_considera_regra_med_exame_w := Obter_Param_Usuario(916, 838, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_considera_regra_med_exame_w);
ie_autorizados_w := Obter_param_usuario(820, 332, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_autorizados_w);
ie_atualizar_obs_prescr_w := Obter_param_usuario(916, 1063, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_obs_prescr_w);
ie_gerar_proc_adic_previstos_w := obter_param_usuario(871, 773, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_proc_adic_previstos_w);
ie_gerar_kit_proc_w := obter_param_usuario(924, 58, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_kit_proc_w);
ds_classe_medic_excl_cir_w := obter_param_usuario(871, 825, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ds_classe_medic_excl_cir_w);
ie_gerar_med_adicional_w := Obter_param_usuario(916, 1188, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_med_adicional_w);
ie_param_459_w := Obter_param_usuario(820, 459, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_param_459_w);
ie_param_843_w := Obter_param_usuario(871, 843, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_param_843_w);

nr_seq_interno_w	:= 0;

select	max(a.nr_seq_solic_compl)
into STRICT	nr_seq_solic_compl_w
from	agenda_integrada_item a,
		agenda_paciente b
where	a.nr_seq_agenda_exame	= b.nr_sequencia
and		b.nr_sequencia 		= nr_seq_agenda_p;

Select	max(b.nr_acesso_dicom)
into STRICT	nr_acesso_dicom_w
from	agenda_paciente a,
	agenda_lista_espera b
where	a.nr_seq_lista	= b.nr_sequencia
and	a.nr_sequencia	= nr_seq_agenda_p;

OPEN C01;
LOOP
FETCH C01 into
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_status_agenda_w,
	ie_autorizacao_w,
	cd_medico_agenda_w,
	ie_lado_w,
	nr_seq_proc_interno_w,
	hr_inicio_w,
	cd_setor_origem_w,
	cd_setor_destino_w,
	nr_seq_agenda_princ_w,
	ds_observacao_w,
	nr_seq_topografia_w,
	cd_med_requisitante_w,
	ds_dado_clinico_w,
	ie_anestesia_w,
	cd_tipo_cirur_prin_w,
	vl_coparticipacao_w,
	nr_seq_contraste_w,
	nr_crm_w,
	nr_ano_guia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	cd_setor_proc_w		:= null;
	cd_procedimento_ww	:= cd_procedimento_w;
	nr_seq_proc_interno_princ_w	:= coalesce(nr_seq_proc_interno_w, 0);
	
	if (coalesce(ie_dt_maior_w,'S') = 'S') then
		hr_inicio_w := obter_data_maior(hr_inicio_w,clock_timestamp());
	else
		hr_inicio_w := clock_timestamp();
	end if;
		
	if (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
		begin
			if ((ie_somente_exclusivo_w = 'A') or (ie_somente_exclusivo_w = 'E')) then
				open c06;
				loop
				fetch c06 into
					cd_setor_proc_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
					begin
						cd_setor_proc_w := cd_setor_proc_w;	
					end;
				end loop;
				close c06;
			end if;
			
			if (coalesce(cd_setor_proc_w::text, '') = '') then
				if (ie_setor_exec_proc_int_w = 'S') then
					open c04;	
					loop
					fetch c04 into
						cd_setor_proc_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */
						begin
						cd_setor_proc_w := cd_setor_proc_w;	
						end;
					end loop;
					close c04;
				else
					open	c02;
					loop
					fetch	c02 into
						cd_setor_proc_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						begin
					
						cd_setor_proc_w	:= cd_setor_proc_w;

						end;
					end loop;
					close c02;
				end if;
			end if;
		end;
	elsif (upper(ds_setor_param_w) = 'PROC INTERNO') then
	
		select coalesce(max(cd_convenio), cd_convenio_ag_w),
               coalesce(max(cd_categoria), cd_categoria_ag_w),
               coalesce(max(cd_plano_convenio), cd_plano_ag_w)
		into STRICT   cd_convenio_w,
               cd_categoria_w,
               cd_plano_w
		from   atend_categoria_convenio
		where  nr_atendimento = nr_atendimento_w
		and    (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '');
		
		cd_setor_proc_w := obter_Setor_exec_proc_interno(nr_seq_proc_interno_w, null, ie_tipo_atendimento_w, cd_convenio_w, cd_categoria_w);
		
	end if;


	select coalesce(max(nr_sequencia),0) + 1
	into STRICT nr_sequencia_w
	from prescr_procedimento
	where nr_prescricao	= nr_prescricao_p;
	
	dt_resultado_w := obter_entrega_laudo(nr_prescricao_p, coalesce(hr_inicio_w,clock_timestamp()), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_p, nm_usuario_p, dt_resultado_w);
		
	select	max(nr_seq_exame_lab)
	into STRICT	nr_seq_exame_w
	from	proc_interno
	where	nr_Sequencia = nr_seq_proc_interno_w;


	select	max(ie_situacao)
	into STRICT	ie_situacao_w
	from	setor_atendimento
	where	cd_setor_atendimento = coalesce(cd_setor_proc_w, cd_setor_atendimento_p);
	
	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
	
		SELECT * FROM Calcular_Horario_Prescricao(	nr_prescricao_p, cd_intervalo_w, DT_PRIMEIRO_HORARIO_w, DT_PRIMEIRO_HORARIO_w, NR_HORAS_VALIDADE_w, cd_procedimento_w, 0, 0, nr_intervalos_w, ds_horarios_w, ds_horarios_2_w, 'N', null) INTO STRICT nr_intervalos_w, ds_horarios_w, ds_horarios_2_w;
	
	end if;

	select	nextval('prescr_procedimento_seq')
	into STRICT	nr_seq_interno_w
	;
	
	if (ie_considera_regra_med_exame_w = 'S') then
		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, obter_convenio_atendimento(nr_atendimento_w), coalesce(cd_setor_proc_w, cd_setor_atendimento_p), cd_procedimento_w, ie_origem_proced_w, obter_tipo_atendimento(nr_atendimento_w), null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_agenda_aux_w, cd_pessoa_fisica_w, null, coalesce(hr_inicio_w,clock_timestamp()), obter_classif_atendimento(nr_atendimento_w), 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_agenda_aux_w, cd_pessoa_fisica_w;
		if (coalesce(cd_medico_agenda_aux_w,0) > 0) then
			cd_medico_agenda_w := cd_medico_agenda_aux_w;
		end if;
	end if;
	
	begin
	select	cd_convenio,
		cd_categoria
	into STRICT	cd_conv_atend_w,
		cd_categ_atend_w
	from	atend_categoria_convenio
	where 	nr_atendimento	= nr_atendimento_w
	and 	nr_seq_interno	= obter_atecaco_atendimento(nr_atendimento_w) LIMIT 1;	
	exception
	when others then
		cd_conv_atend_w		:= obter_convenio_atendimento(nr_atendimento_w);
		cd_categ_atend_w	:= obter_categoria_atendimento(nr_atendimento_w);
	end;
	
	nr_doc_convenio_w := obter_guia_conv_atend(nr_atendimento_w, cd_conv_atend_w, cd_categ_atend_w, obter_tipo_atendimento(nr_atendimento_w), cd_estabelecimento_w, null, nr_doc_convenio_w, cd_procedimento_w, ie_origem_proced_w);
	
	qt_proc_regra_w:=	coalesce(Obter_Quantidade_prescr_proced(cd_intervalo_w,
						   ie_lado_w,
						   cd_procedimento_w,
						   ie_origem_proced_w,
						   nr_seq_proc_interno_w,
						   nr_atendimento_w),1);
						
	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		
		SELECT * FROM obter_proc_tab_interno_conv(
								nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;			
	end if;
	
	if (ie_atualizar_obs_prescr_w = 'N') then
		ds_observacao_w := null;
	end if;
	
	if (obter_se_medico(cd_medico_agenda_w,'M') = 'N') then
		cd_medico_agenda_w := null;
	end if;
	
	if	coalesce(ie_utilizar_equip_presc_w,'N') = 'S' then
		select	max(cd_equipamento)
		into STRICT	cd_equipamento_w
		from	agenda_pac_equip
		where	nr_seq_agenda = nr_seq_agenda_p;
	end if;
	
	-- Validacao para nao incluir mais de um medico
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_prescr_w
	from	prescr_procedimento
	where	nr_prescricao	= nr_prescricao_p
	and		nr_seq_exame  	= nr_seq_exame_w;
		
	if (nr_seq_prescr_w > 0) and (ie_gerar_med_adicional_w = 'S') and (cd_med_requisitante_w <> cd_medico_w) and (cd_med_requisitante_w IS NOT NULL AND cd_med_requisitante_w::text <> '') and (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '')  then
				
		select	count(*)
		into STRICT	qt_medico_adic_exame_w
		from	prescr_proced_prof_adic
		where	nr_prescricao 		= nr_prescricao_p
		and		cd_profissional 	= cd_med_requisitante_w
		and 	nr_seq_procedimento = nr_seq_prescr_w;
		
		
		if (qt_medico_adic_exame_w = 0) then
			select	nextval('prescr_proced_prof_adic_seq')
			into STRICT	nr_seq_prof_adic_w
			;
				insert into prescr_proced_prof_adic(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				cd_profissional,
				ie_tipo_profissional,
				nr_seq_procedimento)
			values (	nr_seq_prof_adic_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_prescricao_p,
				cd_med_requisitante_w,
				'1',
				nr_seq_prescr_w);
		end if;
	else
		
		if (ie_autorizados_w = 'N') and (ie_param_459_w = 'S') then
			
			select coalesce(max(ie_autor_agenda), 'L')
			into STRICT ie_autorizacao_w
			from estagio_autorizacao
			where nr_sequencia = (SELECT max(NR_SEQ_ESTAGIO)
			from autorizacao_convenio
			where nr_seq_agenda = nr_seq_agenda_p
			and CD_PROCEDIMENTO_PRINCIPAL = cd_procedimento_w);
				
		end if;
		
		 if (considera_regra_quantidade_w = 'S') then
            qt_param_1231 := qt_proc_regra_w;
        else
            qt_param_1231 := qt_ambos_w;
        end if;
		
		insert into Prescr_Procedimento(
						nr_prescricao,
						nr_sequencia, 
						cd_procedimento,
						qt_procedimento, 
						dt_atualizacao, 
						nm_usuario,
						cd_motivo_baixa, 
						ie_origem_proced,
						ie_urgencia, 
						cd_setor_atendimento,
						dt_prev_execucao, 
						ie_suspenso, 
						ie_status_atend, 
						ie_origem_inf, 
						dt_resultado, 
						cd_medico_exec, 
						ie_autorizacao, 
						nr_seq_interno, 
						ie_lado,
						ie_avisar_result, 
						nr_seq_proc_interno,
						cd_setor_coleta,
						cd_setor_entrega, 
						nr_seq_exame,
						cd_intervalo,
						ds_horarios, 
						nr_acesso_dicom, 
						nr_doc_convenio,
						ds_observacao,
						nr_seq_solic_compl,
						cd_equipamento,
						CD_MEDICO_SOLICITANTE,
						nr_seq_topografia,
						nr_seq_agenda,
						ds_dado_clinico,
						ie_anestesia,
						cd_tipo_cirurgia,
						nr_seq_contraste)
					values (
						nr_prescricao_p, 
						nr_sequencia_w, 
						coalesce(cd_procedimento_w, cd_procedimento_ww),
						CASE WHEN ie_lado_w='A' THEN qt_param_1231  ELSE qt_proc_regra_w END , 
						clock_timestamp(), 
						nm_usuario_p,
						0, 
						ie_origem_proced_w,
						'N', 
						CASE WHEN ie_situacao_w='I' THEN null  ELSE coalesce(cd_setor_proc_w, cd_setor_atendimento_p) END ,
						coalesce(hr_inicio_w,clock_timestamp()), 
						'N', 
						5, 
						'1', 
						dt_resultado_w, 
						cd_medico_agenda_w, 
						ie_autorizacao_w, 
						nr_seq_interno_w, 
						ie_lado_w,
						'N', 
						nr_seq_proc_interno_w,
						cd_setor_origem_w,
						cd_setor_destino_w, 
						nr_seq_exame_w,
						cd_intervalo_w,
						ds_horarios_w, 
						nr_acesso_dicom_w, 
						nr_doc_convenio_w, 
						ds_observacao_w,
						CASE WHEN nr_seq_solic_compl_w=0 THEN null  ELSE nr_seq_solic_compl_w END ,
						cd_equipamento_w,
						CASE WHEN ie_gerar_med_adicional_w='S' THEN coalesce(cd_med_requisitante_w, null)  ELSE null END ,
						nr_seq_topografia_w,
						nr_seq_agenda_p,
						case when pkg_i18n.get_user_locale in ('de_DE', 'de_AT') then ds_dado_clinico_w else null end,
						ie_anestesia_w,
						cd_tipo_cirur_prin_w,
						nr_seq_contraste_w);
		if (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '') then				
			select 	max(nr_sequencia)
			into STRICT	nr_Seq_inf_add_w
			from 	prescr_proced_inf_adic
			where 	nr_prescricao		= nr_prescricao_p
			and	nr_seq_prescricao	= nr_sequencia_w;
			
			if (coalesce(nr_Seq_inf_add_w,0) = 0) then
				insert into prescr_proced_inf_adic(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_registro,
							nr_prescricao,
							nr_seq_prescricao,
							cd_pessoa_fisica, 
							ie_situacao,
							vl_coparticipacao,
							cd_crm_medico,
							nr_ano_guia)
						values ( nextval('prescr_proced_inf_adic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nr_prescricao_p,
							nr_sequencia_w,
							cd_medico_agenda_w,
							'A',
							vl_coparticipacao_w,
							nr_crm_w,
							nr_ano_guia_w);
							
			else
				update 	prescr_proced_inf_adic
				set	vl_coparticipacao = vl_coparticipacao_w	
				where 	nr_sequencia = nr_Seq_inf_add_w;
			end if;		
		end if;
	end if;					
	
	if (coalesce(nr_seq_solic_compl_w,0) > 0) then
		begin
		
		update	solicitacao_exame_compl
		set 	cd_status 	= 30,
			nm_usuario 	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where 	nr_sequencia 	= nr_seq_solic_compl_w;
		
		end;
	end if;
	

	if (ie_gerar_proc_adic_w = 'S') then
		CALL Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
	end if;
	
	CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);
	
	if (ie_gerar_kit_proc_w <> 'N') then
		CALL Gerar_kit_procedimento(cd_estabelecimento_w,nr_prescricao_p, nr_sequencia_w,nm_usuario_p);
	end if;

	end;
END LOOP;
Close C01;


OPEN C03;
LOOP
FETCH C03 into
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_status_agenda_w,
	ie_autorizacao_w,
	cd_medico_agenda_w,
	ie_lado_w,
	nr_seq_proc_interno_w,
	hr_inicio_w,
	cd_setor_origem_w,
	cd_setor_destino_w,
	nr_seq_agenda_princ_w,
	qt_procedimento_w,
	ds_observacao_w,
	ds_observacao_ww,
	nr_seq_topografia_w,
	cd_med_requisitante_w,
	cd_convenio_prescr_proced_w,
	cd_categoria_prescr_proced_w,
	ds_dado_clinico_w,
	cd_tipo_cirur_adic_w,
	ie_anestesia_w,
	vl_coparticipacao_adic_w,
	nr_seq_contraste_w,
	nr_crm_w,
	nr_ano_guia_w;	
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	if ((ds_observacao_ww IS NOT NULL AND ds_observacao_ww::text <> '')  and ie_param_843_w = 'S' ) then	
		begin
			ds_observacao_w := substr(ds_observacao_ww || ' - ' || ds_observacao_w,1,4000);
		exception
		when others then
			ds_observacao_w := substr(ds_observacao_ww,1,2000);
		end;		
		
		
	end if;
	
	nr_seq_proc_princ_w	:= null;
	
	if (nr_seq_interno_w > 0) and (nr_seq_agenda_princ_w > 0) then		
		nr_seq_proc_princ_w	:= nr_seq_interno_w;		
	end if;
	
	cd_setor_proc_w	:= null;

	if (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
		begin
			
			if ((ie_somente_exclusivo_w = 'A') or (ie_somente_exclusivo_w = 'E')) then
				open c06;
				loop
				fetch c06 into
					cd_setor_proc_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
					begin
						cd_setor_proc_w := cd_setor_proc_w;	
					end;
				end loop;
				close c06;
			end if;
			
			if (coalesce(cd_setor_proc_w::text, '') = '') then
				if (ie_setor_exec_proc_int_w = 'S') then
					open c04;	
					loop
					fetch c04 into
						cd_setor_proc_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */
						begin
						cd_setor_proc_w := cd_setor_proc_w;	
						end;
					end loop;
					close c04;
				else
					open	c02;
					loop
					fetch	c02 into
						cd_setor_proc_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						begin
						
						cd_setor_proc_w	:= cd_setor_proc_w;

						end;
					end loop;
					close c02;
				end if;
			end if;
		end;
	elsif (Upper(ds_setor_param_w) = 'PROC INTERNO')then
		begin
		
		select coalesce(max(cd_convenio), cd_convenio_ag_w),
               coalesce(max(cd_categoria), cd_categoria_ag_w),
               coalesce(max(cd_plano_convenio), cd_plano_ag_w)
		into STRICT   cd_convenio_w,
               cd_categoria_w,
               cd_plano_w
		from   atend_categoria_convenio
		where  nr_atendimento = nr_atendimento_w
		and    (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '');
		
		SELECT	MAX(Obter_Setor_exec_proc_interno(nr_seq_proc_interno_w,NULL,ie_tipo_atendimento_w,cd_convenio_w,cd_categoria_w))
		INTO STRICT	cd_setor_proc_w
		;
		
		end;
	end if;


	select coalesce(max(nr_sequencia),0) + 1
	into STRICT nr_sequencia_w
	from prescr_procedimento
	where nr_prescricao	= nr_prescricao_p;
	
	dt_resultado_w := obter_entrega_laudo(nr_prescricao_p, coalesce(hr_inicio_w,clock_timestamp()), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_p, nm_usuario_p, dt_resultado_w);
	
	select	max(nr_seq_exame_lab)
	into STRICT	nr_seq_exame_w
	from	proc_interno
	where	nr_Sequencia = nr_seq_proc_interno_w;

	select	max(ie_situacao)
	into STRICT	ie_situacao_w
	from	setor_atendimento
	where	cd_setor_atendimento = coalesce(cd_setor_proc_w, cd_setor_atendimento_p);

	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
	
		SELECT * FROM Calcular_Horario_Prescricao(	nr_prescricao_p, cd_intervalo_w, DT_PRIMEIRO_HORARIO_w, DT_PRIMEIRO_HORARIO_w, NR_HORAS_VALIDADE_w, cd_procedimento_w, 0, 0, nr_intervalos_w, ds_horarios_w, ds_horarios_2_w, 'N', null) INTO STRICT nr_intervalos_w, ds_horarios_w, ds_horarios_2_w;
	end if;
	
	if (coalesce(ie_dt_maior_w,'S') = 'S') then
		hr_inicio_w := coalesce(hr_inicio_w,clock_timestamp());
	else
		hr_inicio_w := clock_timestamp();
	end if;
	
	if (ie_considera_regra_med_exame_w = 'S') then
		SELECT * FROM consiste_medico_executor(
					 cd_estabelecimento_w, obter_convenio_atendimento(nr_atendimento_w), coalesce(cd_setor_proc_w, cd_setor_atendimento_p), cd_procedimento_w, ie_origem_proced_w, obter_tipo_atendimento(nr_atendimento_w), null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_agenda_aux_w, cd_pessoa_fisica_w, null, coalesce(hr_inicio_w,clock_timestamp()), obter_classif_atendimento(nr_atendimento_w), 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_agenda_aux_w, cd_pessoa_fisica_w;
		if (coalesce(cd_medico_agenda_aux_w,0) > 0) then
			cd_medico_agenda_w := cd_medico_agenda_aux_w;
		end if;
	end if;
	begin
	select	cd_convenio,
		cd_categoria
	into STRICT	cd_conv_atend_w,
		cd_categ_atend_w
	from	atend_categoria_convenio
	where 	nr_atendimento	= nr_atendimento_w
	and 	dt_inicio_vigencia	= (	SELECT max(dt_inicio_vigencia)
						from atend_categoria_convenio b
						where nr_atendimento	= nr_atendimento_w) LIMIT 1;	
	exception
	when others then
		cd_conv_atend_w		:= obter_convenio_atendimento(nr_atendimento_w);
		cd_categ_atend_w	:= obter_categoria_atendimento(nr_atendimento_w);
	end;
	nr_doc_convenio_w := obter_guia_conv_atend(
				nr_atendimento_w, cd_conv_atend_w, cd_categ_atend_w, obter_tipo_atendimento(nr_atendimento_w), cd_estabelecimento_w, null, nr_doc_convenio_w, cd_procedimento_w, ie_origem_proced_w);
				
	qt_proc_regra_w:= 	coalesce(Obter_Quantidade_prescr_proced(
												cd_intervalo_w,
												ie_lado_w,
												cd_procedimento_w,
												ie_origem_proced_w,
												nr_seq_proc_interno_w,
												nr_atendimento_w),qt_procedimento_w);		

	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		
		SELECT * FROM obter_proc_tab_interno_conv(
							nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	
	end if;	
	
	if (ie_atualizar_obs_prescr_w = 'N') then
		ds_observacao_w := null;
	end if;
	
	if (obter_se_medico(cd_medico_agenda_w,'M') = 'N') then
		cd_medico_agenda_w := null;
	end if;
	
	if	coalesce(ie_utilizar_equip_presc_w,'N') = 'S' then
		select	max(cd_equipamento)
		into STRICT	cd_equipamento_w
		from	agenda_pac_equip
		where	nr_seq_agenda = nr_seq_agenda_p;
	end if;

	-- Validacao para nao incluir mais de um medico
		select	coalesce(max(nr_sequencia),0),
				max(CD_MEDICO_SOLICITANTE)
		into STRICT	nr_seq_prescr_w,
				cd_medico_presc_proc_w
		from	prescr_procedimento
		where	nr_prescricao	= nr_prescricao_p
		and		nr_seq_exame  	= nr_seq_exame_w;
		
		if (nr_seq_prescr_w > 0) and (ie_gerar_med_adicional_w = 'S') and (cd_med_requisitante_w <> cd_medico_presc_proc_w) and (cd_med_requisitante_w IS NOT NULL AND cd_med_requisitante_w::text <> '') and (cd_medico_presc_proc_w IS NOT NULL AND cd_medico_presc_proc_w::text <> '')  then
					
			select	count(*)
			into STRICT	qt_medico_adic_exame_w
			from	prescr_proced_prof_adic
			where	nr_prescricao 		= nr_prescricao_p
			and		cd_profissional 	= cd_med_requisitante_w
			and 	nr_seq_procedimento = nr_seq_prescr_w;
			
			
			if (qt_medico_adic_exame_w = 0) then
				select	nextval('prescr_proced_prof_adic_seq')
				into STRICT	nr_seq_prof_adic_w
				;
					insert into prescr_proced_prof_adic(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					cd_profissional,
					ie_tipo_profissional,
					nr_seq_procedimento)
				values (	nr_seq_prof_adic_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_prescricao_p,
					cd_med_requisitante_w,
					'1',
					nr_seq_prescr_w);
			end if;
		else
			
		if (considera_regra_quantidade_w = 'S') then
			qt_param_1231 := qt_proc_regra_w;
		else
			qt_param_1231 := qt_ambos_w;
		end if;
			
			insert into Prescr_Procedimento(
							nr_prescricao, 
							nr_sequencia, 
							cd_procedimento,
							qt_procedimento, 
							dt_atualizacao, 
							nm_usuario,
							cd_motivo_baixa, 
							ie_origem_proced,
							ie_urgencia, 
							cd_setor_atendimento,
							dt_prev_execucao, 
							ie_suspenso, 
							ie_status_atend, 
							ie_origem_inf, 
							dt_resultado, 
							cd_medico_exec, 
							ie_autorizacao, 
							nr_seq_interno, 
							ie_lado,
							ie_avisar_result, 
							nr_seq_proc_interno,
							cd_setor_coleta,
							cd_setor_entrega, 
							nr_seq_proc_princ, 
							nr_seq_exame,
							cd_intervalo,
							ds_horarios, 
							nr_doc_convenio, 
							ds_observacao,
							nr_seq_solic_compl,
							nr_seq_topografia,
							cd_equipamento,
							CD_MEDICO_SOLICITANTE,
							nr_seq_agenda,
							cd_convenio,
							cd_categoria,
							ds_dado_clinico,
							cd_tipo_cirurgia,
							ie_anestesia,
							nr_seq_contraste)
						values (
							nr_prescricao_p, 
							nr_sequencia_w, 
							cd_procedimento_w,
							CASE WHEN ie_lado_w='A' THEN qt_param_1231  ELSE qt_proc_regra_w END , 
							clock_timestamp(), 
							nm_usuario_p,
							0, 
							ie_origem_proced_w,
							'N', 
							CASE WHEN ie_situacao_w='I' THEN null  ELSE coalesce(cd_setor_proc_w, cd_setor_atendimento_p) END ,
							coalesce(hr_inicio_w,clock_timestamp()), 
							'N', 
							5, 
							'1', 
							dt_resultado_w, 
							cd_medico_agenda_w, 
							ie_autorizacao_w, 
							nextval('prescr_procedimento_seq'), 
							ie_lado_w,
							'N', 
							nr_seq_proc_interno_w,
							cd_setor_origem_w,
							cd_setor_destino_w, 
							nr_seq_proc_princ_w, 
							nr_seq_exame_w,
							cd_intervalo_w,
							ds_horarios_w, 
							nr_doc_convenio_w, 
							ds_observacao_w,
							CASE WHEN nr_seq_solic_compl_w=0 THEN null  ELSE nr_seq_solic_compl_w END ,
							nr_seq_topografia_w,
							cd_equipamento_w,
							CASE WHEN ie_gerar_med_adicional_w='S' THEN coalesce(cd_med_requisitante_w, null)  ELSE null END ,
							nr_seq_agenda_p,
							cd_convenio_prescr_proced_w,
							cd_categoria_prescr_proced_w,
							case when pkg_i18n.get_user_locale in ('de_DE', 'de_AT') then ds_dado_clinico_w else null end,
							cd_tipo_cirur_adic_w,
							ie_anestesia_w,
							nr_seq_contraste_w);
		
		if (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '') then
			select 	max(nr_sequencia)
			into STRICT	nr_Seq_inf_add_w
			from 	prescr_proced_inf_adic
			where 	nr_prescricao		= nr_prescricao_p
			and	nr_seq_prescricao	= nr_sequencia_w;
			
			if (coalesce(nr_Seq_inf_add_w,0) = 0) then
				insert into prescr_proced_inf_adic(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							dt_registro,
							nr_prescricao,
							nr_seq_prescricao,
							cd_pessoa_fisica, 
							ie_situacao,
							vl_coparticipacao,
							cd_crm_medico,
							nr_ano_guia)
						values ( nextval('prescr_proced_inf_adic_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nr_prescricao_p,
							nr_sequencia_w,
							cd_medico_agenda_w,
							'A',
							vl_coparticipacao_adic_w,
							nr_crm_w, 
							nr_ano_guia_w);
							
			else
				update 	prescr_proced_inf_adic
				set	vl_coparticipacao = vl_coparticipacao_adic_w	
				where 	nr_sequencia = nr_Seq_inf_add_w;
			end if;	
		end if;		
		end if;
		
					
	if (coalesce(nr_seq_solic_compl_w,0) > 0) then
		begin
		
		update	solicitacao_exame_compl
		set 	cd_status 	= 30,
			nm_usuario 	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where 	nr_sequencia 	= nr_seq_solic_compl_w;
		
		end;
	end if;
						

	if (ie_gerar_proc_adic_w = 'S') then
		CALL Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
	end if;
	
	CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);
	
	if (ie_gerar_kit_proc_w <> 'N') then
		CALL Gerar_kit_procedimento(cd_estabelecimento_w,nr_prescricao_p, nr_sequencia_w,nm_usuario_p);
	end if;

	end;
END LOOP;
Close C03;

open C05;
loop
fetch C05 into	
	cd_procedimento_w,
	ie_origem_proced_w,
	qt_autorizada_w,
	ie_status_agenda_w,
	ie_autorizacao_w,
	cd_medico_agenda_w,
	ie_lado_w,
	nr_seq_proc_interno_w,
	hr_inicio_w,
	cd_setor_origem_w,
	cd_setor_destino_w,
	nr_seq_agenda_princ_w,
	nr_seq_topografia_w,
	ie_anestesia_w,
	vl_coparticipacao_w,
	nr_seq_contraste_w,
	nr_crm_w,
	nr_ano_guia_w;	
EXIT WHEN NOT FOUND; /* apply on C05 */
	begin

	nr_seq_proc_princ_w	:= null;
	
	if (nr_seq_interno_w > 0) and (nr_seq_agenda_princ_w > 0) then		
		nr_seq_proc_princ_w	:= nr_seq_interno_w;		
	end if;
	
	cd_setor_proc_w	:= null;

	if (Upper(ds_setor_param_w) = 'PROCEDIMENTO') then
		begin
			if ((ie_somente_exclusivo_w = 'A') or (ie_somente_exclusivo_w = 'E')) then
				open c06;
				loop
				fetch c06 into
					cd_setor_proc_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
					begin
						cd_setor_proc_w := cd_setor_proc_w;	
					end;
				end loop;
				close c06;
			end if;
			
			if (coalesce(cd_setor_proc_w::text, '') = '') then
				if (ie_setor_exec_proc_int_w = 'S') then
					open c04;	
					loop
					fetch c04 into
						cd_setor_proc_w;
					EXIT WHEN NOT FOUND; /* apply on c04 */
						begin
						cd_setor_proc_w := cd_setor_proc_w;	
						end;
					end loop;
					close c04;
				else
					open	c02;
					loop
					fetch	c02 into
						cd_setor_proc_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						begin
						
						cd_setor_proc_w	:= cd_setor_proc_w;

						end;
					end loop;
					close c02;
				end if;
			end if;
		end;
	elsif (upper(ds_setor_param_w) = 'PROC INTERNO') then
	
		select coalesce(max(cd_convenio), cd_convenio_ag_w),
               coalesce(max(cd_categoria), cd_categoria_ag_w),
               coalesce(max(cd_plano_convenio), cd_plano_ag_w)
		into STRICT   cd_convenio_w,
               cd_categoria_w,
               cd_plano_w
		from   atend_categoria_convenio
		where  nr_atendimento = nr_atendimento_w
		and    (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '');
	
		cd_setor_proc_w := obter_Setor_exec_proc_interno(nr_seq_proc_interno_w, null, ie_tipo_atendimento_w, cd_convenio_w, cd_categoria_w);
		
	end if;

	select coalesce(max(nr_sequencia),0) + 1
	into STRICT nr_sequencia_w
	from prescr_procedimento
	where nr_prescricao	= nr_prescricao_p;
	
	dt_resultado_w := obter_entrega_laudo(nr_prescricao_p, coalesce(hr_inicio_w,clock_timestamp()), nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_p, nm_usuario_p, dt_resultado_w);
	
	select	max(nr_seq_exame_lab)
	into STRICT	nr_seq_exame_w
	from	proc_interno
	where	nr_Sequencia = nr_seq_proc_interno_w;

	select	max(ie_situacao)
	into STRICT	ie_situacao_w
	from	setor_atendimento
	where	cd_setor_atendimento = coalesce(cd_setor_proc_w, cd_setor_atendimento_p);

	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
	
		SELECT * FROM Calcular_Horario_Prescricao(	nr_prescricao_p, cd_intervalo_w, DT_PRIMEIRO_HORARIO_w, DT_PRIMEIRO_HORARIO_w, NR_HORAS_VALIDADE_w, cd_procedimento_w, 0, 0, nr_intervalos_w, ds_horarios_w, ds_horarios_2_w, 'N', null) INTO STRICT nr_intervalos_w, ds_horarios_w, ds_horarios_2_w;
	end if;
	
	if (coalesce(ie_dt_maior_w,'S') = 'S') then
		hr_inicio_w := coalesce(hr_inicio_w,clock_timestamp());
	else
		hr_inicio_w := clock_timestamp();
	end if;
	
	if (ie_considera_regra_med_exame_w = 'S') then
		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, obter_convenio_atendimento(nr_atendimento_w), coalesce(cd_setor_proc_w, cd_setor_atendimento_p), cd_procedimento_w, ie_origem_proced_w, obter_tipo_atendimento(nr_atendimento_w), null, nr_seq_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_agenda_aux_w, cd_pessoa_fisica_w, null, coalesce(hr_inicio_w,clock_timestamp()), obter_classif_atendimento(nr_atendimento_w), 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_agenda_aux_w, cd_pessoa_fisica_w;
		if (coalesce(cd_medico_agenda_aux_w,0) > 0) then
			cd_medico_agenda_w := cd_medico_agenda_aux_w;
		end if;
	end if;


	begin
	select	cd_convenio,
		cd_categoria
	into STRICT	cd_conv_atend_w,
		cd_categ_atend_w
	from	atend_categoria_convenio
	where 	nr_atendimento	= nr_atendimento_w
	and 	dt_inicio_vigencia	= (	SELECT max(dt_inicio_vigencia)
						from atend_categoria_convenio b
						where nr_atendimento	= nr_atendimento_w) LIMIT 1;	
	exception
	when others then
		cd_conv_atend_w		:= obter_convenio_atendimento(nr_atendimento_w);
		cd_categ_atend_w	:= obter_categoria_atendimento(nr_atendimento_w);
	end;
		
	nr_doc_convenio_w := obter_guia_conv_atend(nr_atendimento_w, cd_conv_atend_w, cd_categ_atend_w, obter_tipo_atendimento(nr_atendimento_w), cd_estabelecimento_w, null, nr_doc_convenio_w, cd_procedimento_w, ie_origem_proced_w);
	
	if (ie_autorizados_w ='S') then
		 qt_autorizada_w := 1;
	
	end if;
	
	qt_proc_regra_w:= 	coalesce(Obter_Quantidade_prescr_proced(cd_intervalo_w,
						   ie_lado_w,
						   cd_procedimento_w,
						   ie_origem_proced_w,
						   nr_seq_proc_interno_w,
						   nr_atendimento_w),
						   qt_autorizada_w);
	
	SELECT 	max(CD_EQUIPAMENTO)
	into STRICT 	cd_equipamento_w
	FROM AGENDA_PAC_EQUIP
	WHERE NR_SEQ_AGENDA = nr_seq_agenda_p;
		
	 if (considera_regra_quantidade_w = 'S') then
        qt_param_1231 := qt_proc_regra_w;
    else
        qt_param_1231 := qt_ambos_w;
    end if;
	
	insert into Prescr_Procedimento(
		nr_prescricao, nr_sequencia, cd_procedimento,
		qt_procedimento, dt_atualizacao, nm_usuario,
		cd_motivo_baixa, ie_origem_proced,
		ie_urgencia, cd_setor_atendimento,
		dt_prev_execucao, ie_suspenso, ie_status_atend, 
		ie_origem_inf, dt_resultado, cd_medico_exec, ie_autorizacao, nr_seq_interno, ie_lado,ie_anestesia,
		ie_avisar_result, nr_seq_proc_interno,cd_setor_coleta,cd_setor_entrega, nr_seq_proc_princ, nr_seq_exame,cd_intervalo,ds_horarios, nr_doc_convenio, cd_equipamento, nr_seq_topografia,nr_seq_agenda,
		nr_seq_contraste)
	values (
		nr_prescricao_p, nr_sequencia_w, cd_procedimento_w,
		CASE WHEN ie_lado_w='A' THEN qt_param_1231  ELSE qt_proc_regra_w END , clock_timestamp(), nm_usuario_p,
		0, ie_origem_proced_w,
		'N', CASE WHEN ie_situacao_w='I' THEN null  ELSE coalesce(cd_setor_proc_w, cd_setor_atendimento_p) END ,
		coalesce(hr_inicio_w,clock_timestamp()), 'N', 5, '1', 
		dt_resultado_w, cd_medico_agenda_w, ie_autorizacao_w, nextval('prescr_procedimento_seq'), ie_lado_w,ie_anestesia_w,
		'N', nr_seq_proc_interno_w,cd_setor_origem_w,cd_setor_destino_w, nr_seq_proc_princ_w, nr_seq_exame_w,cd_intervalo_w,ds_horarios_w, nr_doc_convenio_w, cd_equipamento_w, nr_seq_topografia_w,
		nr_seq_agenda_p, nr_seq_contraste_w);

	if (cd_medico_agenda_w IS NOT NULL AND cd_medico_agenda_w::text <> '') then				
		select 	max(nr_sequencia)
		into STRICT	nr_Seq_inf_add_w
		from 	prescr_proced_inf_adic
		where 	nr_prescricao		= nr_prescricao_p
		and	nr_seq_prescricao	= nr_sequencia_w;
		
		if (coalesce(nr_Seq_inf_add_w,0) = 0) then
			insert into prescr_proced_inf_adic(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						dt_registro,
						nr_prescricao,
						nr_seq_prescricao,
						cd_pessoa_fisica, 
						ie_situacao,
						vl_coparticipacao,
						cd_crm_medico,
						nr_ano_guia)
					values ( nextval('prescr_proced_inf_adic_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nr_prescricao_p,
						nr_sequencia_w,
						cd_medico_agenda_w,
						'A',
						vl_coparticipacao_w,
						nr_crm_w, 
						nr_ano_guia_w);
						
		else
			update 	prescr_proced_inf_adic
			set	vl_coparticipacao = vl_coparticipacao_w	
			where 	nr_sequencia = nr_Seq_inf_add_w;
		end if;		
	end if;
	
	if (ie_gerar_proc_adic_w = 'S') then
		CALL Gerar_Prescr_Proc_Assoc(Nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
	end if;
	
	CALL Gerar_med_mat_assoc(nr_prescricao_p, nr_sequencia_w);
	
	if (ie_gerar_kit_proc_w <> 'N') then
		CALL Gerar_kit_procedimento(cd_estabelecimento_w,nr_prescricao_p, nr_sequencia_w,nm_usuario_p);
	end if;
	
	end;
end loop;
close C05;

select	count(*)
into STRICT	qt_pre_venda_w
from	pre_venda_item
where	nr_atendimento = nr_atendimento_w
and 	coalesce(nr_prescricao::text, '') = '';

if (qt_pre_venda_w > 0) then
	CALL gerar_prescr_proc_pre_venda(nr_prescricao_p, nm_usuario_p);
end if;

/* 	retirado por Marcus/Ricardo em 09/09/2003
	A rotina de geracao do atendimento passa para N com parametro 26 da agenda
if	(ie_status_agenda_w	= 'N') then
	update	agenda_paciente
	set	ie_status_agenda	= 'E'
	where	nr_sequencia		= nr_seq_agenda_p;
end if;
*/
update	prescr_medica
set	nr_seq_agenda		= nr_seq_agenda_p
where	nr_prescricao		= nr_prescricao_p
and	coalesce(nr_seq_agenda::text, '') = '';

commit;

if (ds_classe_medic_excl_cir_w IS NOT NULL AND ds_classe_medic_excl_cir_w::text <> '') then

	select  coalesce(max(ie_utiliza_atb),'S')
	into STRICT 	ie_utiliza_atb_w
	from	agenda_paciente
	where	nr_sequencia		= nr_seq_agenda_p;

	if (coalesce(ie_utiliza_atb_w,'S') = 'N') then
		CALL excluir_itens_prescr_cirurgica(nr_prescricao_p, ds_classe_medic_excl_cir_w);
	end if;
end if;


if (OBTAIN_USER_LOCALE(nm_usuario_p) = 'en_AU') then --Forcar a geracao da prescr_proc_hor devido necessidade na integracao com a Siemens.
	CALL gerar_prescr_proc_hor(nr_prescricao_p,obter_perfil_ativo,nm_usuario_p);
end if;

if (coalesce(nr_seq_proc_interno_princ_w, 0) > 0) then
  /* Valida se o exame deve ser excluido conforme opcao ie_excluir_proc_princ na tabela proc_interno da funcao Exames e Procs Internos */

	select obter_se_proc_int_exc_princ(nr_seq_proc_interno_princ_w) ie_excluir
	into STRICT	ie_excluir_exame_princ_w
	;

	if (ie_excluir_exame_princ_w = 'S' and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '')) then
		CALL gera_excl_proced_principal(nr_prescricao_p, nr_seq_proc_interno_princ_w);
	end if;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proc_agenda_prescricao ( nr_seq_agenda_p bigint, nr_prescricao_p bigint, cd_setor_atendimento_p bigint, nm_usuario_p text) FROM PUBLIC;

