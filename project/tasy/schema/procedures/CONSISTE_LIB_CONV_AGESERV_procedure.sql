-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_lib_conv_ageserv (cd_agenda_p bigint, cd_convenio_p bigint, hr_inicial_p timestamp, ie_encaixe_p text, nr_sequencia_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ie_liberado_w		varchar(01)	:= 'S';
ie_dia_semana_w		varchar(01);
qt_agenda_w		bigint;
qt_permissao_w		bigint;	
pr_permissao_w		bigint;	
cd_agenda_w		bigint;
hr_inicial_w		timestamp;
nr_seq_turno_w		bigint;
qt_agendas_conv_w	bigint;
pr_agendas_conv_w	double precision;
qt_agendas_tot_w	bigint;

nr_seq_turno_esp_w	bigint;
ds_convenio_w		varchar(255);
ie_tipo_convenio_w	bigint;
ie_tipo_convenio_regra_w bigint;

c01 CURSOR FOR
  SELECT	coalesce(ie_atende_convenio, 'n') ie_atende_convenio,
          coalesce(qt_permissao,0) qt_permissao,
          coalesce(pr_permissao,0) pr_permissao,
          ie_tipo_convenio
  from	  agenda_turno_conv
  where	  coalesce(cd_convenio, cd_convenio_p)	= cd_convenio_p
  and		  nr_seq_turno = nr_seq_turno_w
  and		  coalesce(ie_tipo_convenio, ie_tipo_convenio_w) = ie_tipo_convenio_w
  order by
    coalesce(cd_convenio, 0),
    coalesce(cd_categoria, '0'),
    coalesce(ie_tipo_convenio, 0);

BEGIN

select	pkg_date_utils.get_WeekDay(hr_inicial_p)
into STRICT	ie_dia_semana_w
;


/* Tratar quando existe um convenio que pode ser atendido */

select	max(ds_convenio)
into STRICT	ds_convenio_w
from	convenio
where	cd_convenio = cd_convenio_p;

select	coalesce(max(nr_sequencia), 0)
into STRICT	nr_seq_turno_w
from	agenda_turno a
where	cd_agenda	= cd_agenda_p
and (ie_dia_semana	= ie_dia_semana_w or ie_dia_semana = 9)
and	to_date('01/01/2000 ' || to_char(hr_inicial, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') 	<= to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss')
and	to_date('01/01/2000 ' || to_char(hr_final, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss') 	>= to_date('01/01/2000 ' || to_char(hr_inicial_p, 'hh24:mi:ss'), 'dd/mm/yyyy hh24:mi:ss');

if (nr_seq_turno_w > 0) then
	begin
	
	select	max(ie_tipo_convenio)
	into STRICT 	ie_tipo_convenio_w
	from 	convenio
	where 	cd_convenio = cd_convenio_p;

	select	count(*)
	into STRICT	qt_agenda_w
	from	agenda_turno_conv
	where	nr_seq_turno			= nr_seq_turno_w
	and		coalesce(cd_convenio, cd_convenio_p)	= cd_convenio_p
	and		coalesce(ie_tipo_convenio, ie_tipo_convenio_w) = ie_tipo_convenio_w;
	
	if (qt_agenda_w > 0) then
		
    for c_01 in c01 loop
      ie_liberado_w := c_01.ie_atende_convenio;
      qt_permissao_w := c_01.qt_permissao;
      pr_permissao_w := c_01.pr_permissao;
      ie_tipo_convenio_regra_w  := c_01.ie_tipo_convenio;
    end loop;

		
		if (ie_liberado_w = 'S') and (qt_permissao_w > 0) then
			
			select	count(*)
			into STRICT	qt_agendas_conv_w
			from	agenda_consulta a
			where	cd_agenda		= cd_agenda_p
			and	trunc(dt_agenda, 'dd')	= trunc(hr_inicial_p, 'dd')
			and	((cd_convenio		= cd_convenio_p)
			or (exists (SELECT	1
						from	convenio x
						where   a.cd_convenio = x.cd_convenio
						and 	x.ie_tipo_convenio = ie_tipo_convenio_w) 
						and (ie_tipo_convenio_regra_w IS NOT NULL AND ie_tipo_convenio_regra_w::text <> '')))
			and	nr_seq_turno		= nr_seq_turno_w
			and	ie_status_agenda	not in ('C', 'L', 'F', 'I', 'B')
			and	nr_sequencia 	<> nr_sequencia_p;
			
			if (qt_agendas_conv_w >= qt_permissao_w) then
				ie_liberado_w 	:= 'Q';
			end if;			

		end if;


		if (ie_liberado_w = 'S') and (pr_permissao_w > 0) then

			select	count(*)
			into STRICT	qt_agendas_tot_w
			from	agenda_consulta a
			where	((cd_convenio		= cd_convenio_p)
			or (exists (SELECT	1
						from	convenio x
						where   a.cd_convenio = x.cd_convenio
						and 	x.ie_tipo_convenio = ie_tipo_convenio_w)
						and (ie_tipo_convenio_regra_w IS NOT NULL AND ie_tipo_convenio_regra_w::text <> '')))
			and	trunc(dt_agenda, 'dd')	= trunc(hr_inicial_p, 'dd')
			and	nr_seq_turno		= nr_seq_turno_w
			and	ie_status_agenda	not in ('C', 'L', 'F', 'I', 'B')
			and	nr_sequencia 	<> nr_sequencia_p;


			select	count(*)
			into STRICT	qt_agendas_conv_w
			from	agenda_consulta a
			where	((cd_convenio		= cd_convenio_p)
			or (exists (SELECT	1
						from	convenio x
						where   a.cd_convenio = x.cd_convenio
						and 	x.ie_tipo_convenio = ie_tipo_convenio_w)
						and (ie_tipo_convenio_regra_w IS NOT NULL AND ie_tipo_convenio_regra_w::text <> '')))
			and	trunc(dt_agenda, 'dd')	= trunc(hr_inicial_p, 'dd')
			and	cd_convenio		= cd_convenio_p
			and	nr_seq_turno		= nr_seq_turno_w
			and	ie_status_agenda	not in ('C', 'L', 'F', 'I', 'B')
			and	nr_sequencia 	<> nr_sequencia_p;
			
			pr_agendas_conv_w	:= dividir((qt_agendas_conv_w * 100), qt_agendas_tot_w);
			
			if (pr_agendas_conv_w >= pr_permissao_w) then
				ie_liberado_w 	:= 'Q';
			end if;			

		end if;
	end if;

	end;
end if;



/* Tratar quando existe um convenio em um TURNO ESPECIAL */

select	coalesce(max(nr_sequencia), 0)
into STRICT	nr_seq_turno_esp_w
from	agenda_turno_esp a
where	a.cd_agenda	= cd_agenda_p
and	a.hr_inicial	<= hr_inicial_p
and	a.hr_final	>= hr_inicial_p;


if (nr_seq_turno_esp_w > 0) then
	begin

	select	count(*)
	into STRICT	qt_agenda_w
	from	agenda_turno_esp_conv
	where	nr_seq_turno_esp		= nr_seq_turno_esp_w
	and	cd_convenio			= cd_convenio_p;	

	if (qt_agenda_w > 0) then
		select	coalesce(max(IE_ATENDE_CONVENIO), 'N'),
			coalesce(max(QT_PERMISSAO),0),
			coalesce(max(pr_permissao),0)
		into STRICT	ie_liberado_w,
			qt_permissao_w,
			pr_permissao_w
		from	agenda_turno_esp_conv
		where	cd_convenio		= cd_convenio_p
		and	nr_seq_turno_esp	= nr_seq_turno_esp_w;

		if (ie_liberado_w = 'S') and (qt_permissao_w > 0) then

			select	count(*)
			into STRICT	qt_agendas_conv_w
			from	agenda_consulta
			where	cd_agenda		= cd_agenda_p
			and	trunc(dt_agenda, 'dd')	= trunc(hr_inicial_p, 'dd')
			and	cd_convenio		= cd_convenio_p
			and	ie_status_agenda	not in ('C', 'L', 'F', 'I', 'B')
			and	nr_sequencia 	<> nr_sequencia_p;
			
			
			if ( qt_agendas_conv_w >= qt_permissao_w) then
				ie_liberado_w 	:= 'Q';
			end if;			

		end if;


		if (ie_liberado_w = 'S') and (pr_permissao_w > 0) then

			select	count(*)
			into STRICT	qt_agendas_tot_w
			from	agenda_consulta
			where	cd_agenda		= cd_agenda_p
			and	trunc(dt_agenda, 'dd')	= trunc(hr_inicial_p, 'dd')
			and	ie_status_agenda	not in ('C', 'L', 'F', 'I', 'B')
			and	nr_sequencia 	<> nr_sequencia_p;


			select	count(*)
			into STRICT	qt_agendas_conv_w
			from	agenda_consulta
			where	cd_agenda		= cd_agenda_p
			and	trunc(dt_agenda, 'dd')	= trunc(hr_inicial_p, 'dd')
			and	cd_convenio		= cd_convenio_p
			and	ie_status_agenda	not in ('C', 'L', 'F', 'I', 'B')
			and	nr_sequencia 	<> nr_sequencia_p;
			
			pr_agendas_conv_w	:= dividir((qt_agendas_conv_w * 100), qt_agendas_tot_w);

			if (pr_agendas_conv_w >= pr_permissao_w) then
				ie_liberado_w 	:= 'Q';
			end if;			

		end if;
	end if;

	end;
end if;

if (ie_encaixe_p = 'S') then
	if (ie_liberado_w = 'N') then
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280050,'DS_CONVENIO='|| ds_convenio_w);
	elsif (ie_liberado_w = 'Q') then
		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280051,'DS_CONVENIO='|| ds_convenio_w);
	end if;
else
	if (ie_liberado_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262459 , 'DS_CONVENIO_W='||ds_convenio_w);
	elsif (ie_liberado_w = 'Q') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262461, 'DS_CONVENIO_W='||ds_convenio_w);
	end if;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_lib_conv_ageserv (cd_agenda_p bigint, cd_convenio_p bigint, hr_inicial_p timestamp, ie_encaixe_p text, nr_sequencia_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

