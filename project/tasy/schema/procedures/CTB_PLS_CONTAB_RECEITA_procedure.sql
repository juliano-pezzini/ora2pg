-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_contab_receita ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


nr_lote_param_w			bigint;
dt_referencia_w			timestamp;
cd_estabelecimento_w		smallint;
cd_conta_contabil_w		varchar(20);
cd_conta_antecip_w		varchar(20);
cd_conta_deb_antecip_w		varchar(20);
ie_debito_credito_w		varchar(20);
vl_contabil_w			double precision;
vl_contabil_ww			double precision;
vl_retorno_w			varchar(2000);
nr_seq_w_movto_cont_w		bigint;
cd_historico_w			bigint;
nr_seq_mensalidade_w		bigint;
nr_seq_nota_fiscal_w		bigint;
pr_imposto_w			double precision;
cd_tributo_w			smallint;
vl_imposto_w			double precision;
pr_imposto_total_w		double precision;
cd_conta_imposto_w		varchar(20);
cd_centro_custo_w		integer;
ie_centro_custo_w		varchar(1);
cd_centro_custo_ww		integer;
nr_seq_item_w			bigint;
ds_item_w			varchar(255);
nr_lote_contabil_w		bigint;
ie_tipo_valor_w			varchar(2);
nr_seq_pagador_w		bigint;
ie_tipo_pagador_w		varchar(2);
ie_cancelamento_w		varchar(1);
nr_seq_regra_w			bigint;
ie_tipo_item_w			varchar(2);
nr_lote_contab_antecip_w	bigint;
ie_tipo_conta_w			varchar(2);
nr_nota_fiscal_w		varchar(255);
nr_titulo_w			bigint;
cd_cgc_pagador_w		varchar(14);
cd_pf_pagador_w			varchar(10);
ds_conteudo_w			varchar(4000);
ds_conteudo_devolucao_w		varchar(4000);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
ds_compl_historico_devol_w	varchar(255);
ds_compl_historico_devol_ww	varchar(4000);
ds_compl_hist_imposto_cred_w	varchar(255);
ds_compl_hist_imposto_cred_ww	varchar(255);
ds_compl_hist_imposto_deb_w	varchar(255);
ds_compl_hist_imposto_deb_ww	varchar(255);
cd_conta_imposto_cred_w		varchar(20);
cd_conta_imposto_deb_w		varchar(20);
ie_tipo_segurado_w		varchar(3);
ie_tipo_contratacao_w		varchar(2);
nr_seq_copartic_w		bigint;
nm_pagador_w			varchar(255);
nr_seq_regra_cc_w		bigint;
vl_pro_rata_dia_w		double precision;
vl_antecipacao_w		double precision;
nr_lote_contab_antecip_ww	bigint;
ie_regulamentacao_w		varchar(2);
ie_tipo_contratacao_ww		varchar(2);
ie_regulamentacao_ww		varchar(2);
qt_pro_rata_regra_w		bigint;
cd_centro_custo_item_w		integer;
nr_seq_regra_cc_item_w		bigint;
nr_seq_lote_mensalidade_w	bigint;
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
qt_compl_hist_w			bigint;
nr_seq_movimento_sem_conta_w	bigint;
ie_mensalidade_mes_anterior_w	varchar(1);
nr_seq_vinculo_sca_w		bigint;
ds_grupo_w			varchar(255);
dt_antecipacao_w		timestamp;
dt_referencia_mov_w		timestamp;
dt_referencia_mens_w		timestamp;
cd_conta_ato_cooperado_w	varchar(20);
cd_conta_ato_auxiliar_w		varchar(20);
cd_conta_ato_nao_coop_w		varchar(20);
vl_ato_cooperado_princ_w	double precision;
vl_ato_cooperado_aux_w		double precision;
vl_ato_nao_cooperado_w		double precision;
qt_ato_cooperado_w		bigint;
ie_deb_rec_ato_cooperado_w	varchar(1);
nr_seq_tipo_lanc_w		bigint;
nr_seq_agrupamento_w		bigint;
nr_seq_esquema_w		bigint;
ie_esquema_contabil_w		varchar(1);
vl_ato_cooperado_pro_rata_w	double precision;
vl_ato_auxiliar_pro_rata_w	double precision;
vl_ato_nao_coop_pro_rata_w	double precision;
vl_ato_cooperado_antec_w	double precision;
vl_ato_auxiliar_antec_w		double precision;
vl_ato_nao_coop_antec_w		double precision;
qt_lote_gerado_mes_w		bigint;
dt_referencia_lote_w		timestamp;
nm_agrupador_w			varchar(255);
ie_recebimento_antec_passivo_w	varchar(1);
qt_baixas_titulo_w		bigint;
ds_classif_sca_w		varchar(255);
cd_conta_contabil_rec_antec_w	varchar(20);
ie_somente_inverte_estorno_w	varchar(1);
vl_titulo_w			double precision;
dt_liquidacao_titulo_w		timestamp;
dt_inicio_cobertura_w		timestamp;
ie_contab_classif_mens_w	varchar(1);
nr_seq_troca_plano_contas_w	bigint;
cd_cta_contabil_troca_plano_w	varchar(20);
ie_dia_cobertura_rec_antec_w	varchar(1);
nr_nfe_imp_w			nota_fiscal.nr_nfe_imp%type;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
nr_seq_tab_orig_w		w_movimento_contabil.nr_seq_tab_orig%type;
nr_seq_tab_compl_w		w_movimento_contabil.nr_seq_tab_compl%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
dt_referencia_fm_w		timestamp;
ie_consiste_tit_mensalidade_w	pls_parametro_contabil.ie_consiste_tit_mensalidade%type;
ds_mensalidade_sem_titulo_w	varchar(4000);
nr_seq_mensalidade_tit_w	pls_mensalidade.nr_sequencia%type;
cd_conta_deb_w			pls_mensalidade_seg_item.cd_conta_deb%type;
cd_conta_rec_w			pls_mensalidade_seg_item.cd_conta_rec%type;
ie_contab_ppcng_w		varchar(255);
nr_seq_item_cancel_w		pls_mensalidade_seg_item.nr_sequencia%type;
qt_lote_mens_w			bigint;
ie_devolucao_w			varchar(1);
vl_cancelar_w			pls_solic_resc_fin_item.vl_cancelar%type;
vl_devolver_w			pls_solic_resc_fin_item.vl_devolver%type;
cd_historico_devolucao_w	pls_mensalidade_seg_item.cd_historico_devolucao%type;
cd_conta_canc_w			pls_mensalidade_seg_item.cd_conta_deb%type;
cd_conta_dev_w			pls_mensalidade_seg_item.cd_conta_devolucao%type;
qt_devolucao_w 			bigint;


C01 CURSOR FOR
	SELECT	a.cd_conta_rec cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		coalesce(a.vl_antecipacao,0) - coalesce((	SELECT	sum(k.vl_antecipacao)
						from	pls_solic_resc_fin_item		k,
							pls_solic_rescisao_fin		i
						where	k.nr_seq_item_mensalidade = a.nr_sequencia
						and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
						and 	((coalesce(i.ie_status, 0) in (3, 8))
							or (coalesce(i.ie_status, 0) = 7
							and
							exists (select	1
								from	pls_solic_resc_fin_item x,
									pls_solic_rescisao_fin y
								where	x.nr_seq_item_cancel 	= k.nr_sequencia
								and	x.nr_seq_solic_resc_fin = y.nr_sequencia
								and	coalesce(y.ie_status, 0) = 8)))			
						and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
						and	coalesce(c.ie_cancelamento,'X') = 'X'),0) vl_antecipacao, /*OS 2087263 - Nao deve ser contabilizada a devolucao de mensalidades canceladas*/
		coalesce(a.vl_ato_cooperado_antec,0) vl_ato_cooperado_antec,
		coalesce(a.vl_ato_auxiliar_antec,0) vl_ato_auxiliar_antec,
		coalesce(a.vl_ato_nao_coop_antec,0) vl_ato_nao_coop_antec,
		coalesce(a.cd_historico_antec,a.cd_historico) cd_historico,
		a.nr_lote_contab_antecip nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		a.nr_sequencia nr_seq_item,
		e.nr_sequencia nr_seq_lote_mensalidade,
		c.nr_sequencia nr_seq_mensalidade,
		c.nr_seq_pagador,
		a.nr_seq_esquema,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		e.dt_mesano_referencia dt_referencia_lote,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
		a.ie_tipo_item,
		a.nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		a.dt_antecipacao,
		b.dt_inicio_cobertura,
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_mensalidade			c,
		pls_lote_mensalidade		e
	where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia		= b.nr_seq_mensalidade
	and	e.nr_sequencia		= c.nr_seq_lote
	and	a.nr_lote_contab_antecip = nr_lote_contabil_p
	and	coalesce(c.ie_cancelamento::text, '') = ''
	and	coalesce(c.nr_seq_cancel_rec_mens::text, '') = ''
	and	exists (select	1
			from	pls_regra_pro_rata_dia x
			where	x.ie_tipo_item_mensalidade	= a.ie_tipo_item)
	and	((e.nr_lote_contab_antecip <> nr_lote_contabil_p) or (coalesce(e.nr_lote_contab_antecip::text, '') = ''));

C02 CURSOR FOR
	SELECT	'D' ie_debito_credito,
		'N' ie_tipo_valor,
		'N' ie_devolucao,
		a.cd_conta_deb cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		a.cd_conta_deb_antecip cd_conta_deb_antecip,
		null cd_conta_canc,
		null cd_conta_dev,
		coalesce(a.vl_item,0) vl_contabil,
		coalesce(a.vl_pro_rata_dia,0) - coalesce((SELECT	sum(k.vl_pro_rata_dia)
						from	pls_solic_resc_fin_item		k,
							pls_solic_rescisao_fin		i
						where	k.nr_seq_item_mensalidade = a.nr_sequencia
						and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
						and 	((coalesce(i.ie_status, 0) in (3, 8))
							or (coalesce(i.ie_status, 0) = 7
							and
							exists (select	1
								from	pls_solic_resc_fin_item x,
									pls_solic_rescisao_fin y
								where	x.nr_seq_item_cancel 	= k.nr_sequencia
								and	x.nr_seq_solic_resc_fin = y.nr_sequencia
								and	coalesce(y.ie_status, 0) = 8)))			
						and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
						and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
						and	coalesce(d.ie_cancelamento,'X') = 'X'),0) vl_pro_rata_dia,
		coalesce(a.vl_antecipacao,0) vl_antecipacao,
		a.cd_historico cd_historico,
		a.nr_sequencia nr_seq_item,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
		a.nr_seq_regra_ctb_mensal_deb nr_seq_regra,
		a.ie_tipo_item ie_tipo_item,
		c.ie_tipo_segurado ie_tipo_segurado,
		g.ie_tipo_contratacao ie_tipo_contratacao,
		CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
		a.nr_lote_contab_antecip nr_lote_contab_antecip_item,
		d.ie_cancelamento ie_cancelamento,
		f.nr_lote_contab_antecip nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		f.nr_sequencia nr_seq_lote_mensalidade,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		a.vl_ato_cooperado,
		a.vl_ato_auxiliar,
		a.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		a.vl_ato_cooperado_pro_rata,
		a.vl_ato_auxiliar_pro_rata,
		a.vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		d.dt_referencia,
		b.dt_inicio_cobertura,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_ITEM' nm_atributo,
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		0 vl_cancelar,
		0 vl_devolver,
		null cd_historico_devolucao,
		(select count(1)
		from	pls_solic_resc_fin_item		k,
			pls_solic_rescisao_fin		i
		where	k.nr_seq_item_mensalidade = a.nr_sequencia
		and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
		and 	((coalesce(i.ie_status, 0) in (3, 8))
			or (coalesce(i.ie_status, 0) = 7
			and
			exists (select	1
				from	pls_solic_resc_fin_item x,
					pls_solic_rescisao_fin y
				where	x.nr_seq_item_cancel 	= k.nr_sequencia
				and	x.nr_seq_solic_resc_fin = y.nr_sequencia
				and	coalesce(y.ie_status, 0) = 8)))	
		and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
		and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
		and	coalesce(d.ie_cancelamento,'X') = 'X') qt_devolucao
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_segurado
	and	d.nr_sequencia	= b.nr_seq_mensalidade
	and	g.nr_sequencia	= c.nr_seq_plano
	and	f.nr_sequencia	= d.nr_seq_lote
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and	a.ie_tipo_item not in ('3','6','18') /* Do not account the parcel of revenue negociation */
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	((f.nr_lote_contab_antecip <> nr_lote_contabil_p) or (coalesce(f.nr_lote_contab_antecip,0)	= 0))
	and	((f.dt_contabilizacao IS NOT NULL AND f.dt_contabilizacao::text <> '' AND f.nr_lote_contab_antecip IS NOT NULL AND f.nr_lote_contab_antecip::text <> '') or (coalesce(f.dt_contabilizacao::text, '') = '')) /* Only makes the reversal if it really accounted the anticipation*/
	
union all

	select	'C',
		'N',
		'N' ie_devolucao,
		a.cd_conta_rec,
		a.cd_conta_rec_antecip,
		a.cd_conta_deb_antecip,
		null cd_conta_cred_canc,
		null cd_conta_cred_dev,
		coalesce(a.vl_item,0) vl_contabil,
		coalesce(a.vl_pro_rata_dia,0) - coalesce((select	sum(k.vl_pro_rata_dia)
						from	pls_solic_resc_fin_item		k,
							pls_solic_rescisao_fin		i
						where	k.nr_seq_item_mensalidade = a.nr_sequencia
						and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
						and 	((coalesce(i.ie_status, 0) in (3, 8))
							or (coalesce(i.ie_status, 0) = 7
							and
							exists (select	1
								from	pls_solic_resc_fin_item x,
								pls_solic_rescisao_fin y
							where	x.nr_seq_item_cancel 	= k.nr_sequencia
							and	x.nr_seq_solic_resc_fin = y.nr_sequencia
							and	coalesce(y.ie_status, 0) = 8)))			
						and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
						and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
						and	coalesce(d.ie_cancelamento,'X') = 'X'),0),
		coalesce(a.vl_antecipacao,0),
		a.cd_historico,
		a.nr_sequencia,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
		a.nr_seq_regra_ctb_mensal,
		a.ie_tipo_item,
		c.ie_tipo_segurado,
		g.ie_tipo_contratacao,
		CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END ,
		a.nr_lote_contab_antecip,
		d.ie_cancelamento,
		f.nr_lote_contab_antecip,
		a.cd_centro_custo,
		f.nr_sequencia,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N'),
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		a.vl_ato_cooperado,
		a.vl_ato_auxiliar,
		a.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		a.vl_ato_cooperado_pro_rata,
		a.vl_ato_auxiliar_pro_rata,
		a.vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		d.dt_referencia,
		b.dt_inicio_cobertura,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_ITEM' nm_atributo,
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		0 vl_cancelar,
		0 vl_devolver,
		null cd_historico_devolucao,
		(select count(1)
		from	pls_solic_resc_fin_item		k,
			pls_solic_rescisao_fin		i
		where	k.nr_seq_item_mensalidade = a.nr_sequencia
		and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
		and 	((coalesce(i.ie_status, 0) in (3, 8))
			or (coalesce(i.ie_status, 0) = 7
			and
			exists (select	1
				from	pls_solic_resc_fin_item x,
					pls_solic_rescisao_fin y
				where	x.nr_seq_item_cancel 	= k.nr_sequencia
				and	x.nr_seq_solic_resc_fin = y.nr_sequencia
				and	coalesce(y.ie_status, 0) = 8)))	
		and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
		and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
		and	coalesce(d.ie_cancelamento,'X') = 'X') qt_devolucao
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	d.nr_sequencia	= b.nr_seq_mensalidade
	and	c.nr_sequencia	= b.nr_seq_segurado
	and	g.nr_sequencia	= c.nr_seq_plano
	and	f.nr_sequencia	= d.nr_seq_lote
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and	a.ie_tipo_item not in ('3','6','18') /* Do not account the parcel of revenue negociation */
	and	a.nr_lote_contabil	= nr_lote_contabil_p
	and	((f.nr_lote_contab_antecip <> nr_lote_contabil_p) or (coalesce(f.nr_lote_contab_antecip,0)	= 0))
	and	((f.dt_contabilizacao IS NOT NULL AND f.dt_contabilizacao::text <> '' AND f.nr_lote_contab_antecip IS NOT NULL AND f.nr_lote_contab_antecip::text <> '') or (coalesce(f.dt_contabilizacao::text, '') = ''))
	
union all

	select	'D',
		'C',
		'N' ie_devolucao,
		f.cd_conta_deb,
		f.cd_conta_cred_antecip,
		f.cd_conta_deb_antecip,
		null cd_conta_cred_canc,
		null cd_conta_cred_dev,
		coalesce(coalesce(f.vl_copartic_mens,f.vl_coparticipacao),0) vl_contabil,
		0,
		0,
		f.cd_historico,
		c.nr_sequencia,
		substr(obter_valor_dominio(1930,c.ie_tipo_item),1,255) ds_item,
		f.nr_seq_regra_ctb_deb,
		c.ie_tipo_item,
		g.ie_tipo_segurado,
		h.ie_tipo_contratacao,
		f.nr_sequencia,
		0,
		a.ie_cancelamento,
		i.nr_lote_contab_antecip,
		f.cd_centro_custo,
		i.nr_sequencia,
		a.nr_sequencia nr_seq_mensalidade,
		coalesce(i.ie_mensalidade_mes_anterior,'N'),
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		null vl_ato_cooperado_pro_rata,
		null vl_ato_auxiliar_pro_rata,
		null vl_ato_nao_coop_pro_rata,
		i.dt_mesano_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		null cd_conta_contabil_rec_antec,
		a.dt_referencia,
		b.dt_inicio_cobertura,
		'PLS_CONTA_COPARTICIPACAO' nm_tabela,
		'VL_COPARTICIPACAO' nm_atributo,
		f.cd_conta_deb,
		f.cd_conta_cred,
		57 nr_seq_info_ctb,
		c.nr_seq_item_cancel,
		0 vl_cancelar,
		0 vl_devolver,
		null cd_historico_devolucao,
		(select count(1)
		from	pls_solic_resc_fin_item		k,
			pls_solic_rescisao_fin		i
		where	k.nr_seq_item_mensalidade = c.nr_sequencia
		and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
		and 	((coalesce(i.ie_status, 0) in (3, 8))
			or (coalesce(i.ie_status, 0) = 7
			and
			exists (select	1
				from	pls_solic_resc_fin_item x,
					pls_solic_rescisao_fin y
				where	x.nr_seq_item_cancel 	= k.nr_sequencia
				and	x.nr_seq_solic_resc_fin = y.nr_sequencia
				and	coalesce(y.ie_status, 0) = 8)))
		and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
		and	(c.cd_historico_devolucao IS NOT NULL AND c.cd_historico_devolucao::text <> '')
		and	coalesce(a.ie_cancelamento,'X') = 'X') qt_devolucao
	from	pls_lote_mensalidade		i,
		pls_mensalidade			a,
		pls_mensalidade_segurado	b,
		pls_mensalidade_seg_item	c,
		pls_conta			d,
		pls_conta_coparticipacao	f,
		pls_segurado			g,
		pls_plano			h
	where	a.nr_sequencia	= b.nr_seq_mensalidade
	and	b.nr_sequencia	= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia	= c.nr_seq_conta
	and	d.nr_sequencia	= f.nr_seq_conta
	and	g.nr_sequencia	= b.nr_seq_segurado
	and	f.ie_status_coparticipacao <> 'N'
	and	h.nr_sequencia	= g.nr_seq_plano
	and	i.nr_sequencia	= a.nr_seq_lote
	and	coalesce(i.nr_lote_contab_antecip,0)	= 0
	and	coalesce(a.nr_seq_cancel_rec_mens::text, '') = ''
	and	c.ie_tipo_item		= '3'
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	((i.nr_lote_contab_antecip <> nr_lote_contabil_p) or (coalesce(i.nr_lote_contab_antecip,0)	= 0))
	and	((i.dt_contabilizacao IS NOT NULL AND i.dt_contabilizacao::text <> '' AND i.nr_lote_contab_antecip IS NOT NULL AND i.nr_lote_contab_antecip::text <> '') or (coalesce(i.dt_contabilizacao::text, '') = ''))
	and 	f.ie_status_mensalidade <> 'C'
	
union all

	select	'C',
		'C',
		'N' ie_devolucao,
		f.cd_conta_cred,
		f.cd_conta_cred_antecip,
		f.cd_conta_deb_antecip,
		null cd_conta_cred_canc,
		null cd_conta_cred_dev,
		coalesce(coalesce(f.vl_copartic_mens,f.vl_coparticipacao),0) vl_contabil,
		0,
		0,
		f.cd_historico,
		c.nr_sequencia,
		substr(obter_valor_dominio(1930,c.ie_tipo_item),1,255) ds_item,
		f.nr_seq_regra_ctb_cred,
		c.ie_tipo_item,
		g.ie_tipo_segurado,
		h.ie_tipo_contratacao,
		f.nr_sequencia,
		0,
		a.ie_cancelamento,
		i.nr_lote_contab_antecip,
		f.cd_centro_custo,
		i.nr_sequencia,
		a.nr_sequencia nr_seq_mensalidade,
		coalesce(i.ie_mensalidade_mes_anterior,'N'),
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		null vl_ato_cooperado_pro_rata,
		null vl_ato_auxiliar_pro_rata,
		null vl_ato_nao_coop_pro_rata,
		i.dt_mesano_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		null cd_conta_contabil_rec_antec,
		a.dt_referencia,
		b.dt_inicio_cobertura,
		'PLS_CONTA_COPARTICIPACAO' nm_tabela,
		'VL_COPARTICIPACAO' nm_atributo,
		f.cd_conta_deb,
		f.cd_conta_cred,
		57 nr_seq_info_ctb,
		c.nr_seq_item_cancel,
		0 vl_cancelar,
		0 vl_devolver,
		null cd_historico_devolucao,
		(select count(1)
		from	pls_solic_resc_fin_item		k,
			pls_solic_rescisao_fin		i
		where	k.nr_seq_item_mensalidade = c.nr_sequencia
		and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
		and 	((coalesce(i.ie_status, 0) in (3, 8))
			or (coalesce(i.ie_status, 0) = 7
			and
			exists (select	1
				from	pls_solic_resc_fin_item x,
					pls_solic_rescisao_fin y
				where	x.nr_seq_item_cancel 	= k.nr_sequencia
				and	x.nr_seq_solic_resc_fin = y.nr_sequencia
				and	coalesce(y.ie_status, 0) = 8)))
		and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
		and	(c.cd_historico_devolucao IS NOT NULL AND c.cd_historico_devolucao::text <> '')
		and	coalesce(a.ie_cancelamento,'X') = 'X') qt_devolucao
	from	pls_lote_mensalidade		i,
		pls_mensalidade			a,
		pls_mensalidade_segurado	b,
		pls_mensalidade_seg_item	c,
		pls_conta 			d,
		pls_conta_coparticipacao	f,
		pls_segurado			g,
		pls_plano			h
	where	a.nr_sequencia	= b.nr_seq_mensalidade
	and	b.nr_sequencia	= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia	= c.nr_seq_conta
	and	d.nr_sequencia	= f.nr_seq_conta
	and	g.nr_sequencia	= b.nr_seq_segurado
	and	h.nr_sequencia	= g.nr_seq_plano
	and	f.ie_status_coparticipacao <> 'N'
	and	i.nr_sequencia	= a.nr_seq_lote
	and	coalesce(i.nr_lote_contab_antecip,0)	= 0
	and	coalesce(a.nr_seq_cancel_rec_mens::text, '') = ''
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	c.ie_tipo_item	= '3'
	and	((i.nr_lote_contab_antecip <> nr_lote_contabil_p) or (coalesce(i.nr_lote_contab_antecip,0)	= 0))
	and	((i.dt_contabilizacao IS NOT NULL AND i.dt_contabilizacao::text <> '' AND i.nr_lote_contab_antecip IS NOT NULL AND i.nr_lote_contab_antecip::text <> '') or (coalesce(i.dt_contabilizacao::text, '') = ''))
	and 	f.ie_status_mensalidade <> 'C'
	
union all

	select	'D',
		'P',
		'N' ie_devolucao,
		f.cd_conta_deb,
		null cd_conta_cred_antecip,
		null cd_conta_deb_antecip,
		null cd_conta_cred_canc,
		null cd_conta_cred_dev,
		coalesce(f.vl_beneficiario,0) vl_contabil,
		0,
		0,
		f.cd_historico,
		c.nr_sequencia,
		substr(obter_valor_dominio(1930,c.ie_tipo_item),1,255) ds_item,
		f.nr_seq_regra_ctb_deb,
		c.ie_tipo_item,
		g.ie_tipo_segurado,
		h.ie_tipo_contratacao,
		f.nr_sequencia,
		0,
		a.ie_cancelamento,
		i.nr_lote_contab_antecip,
		f.cd_centro_custo,
		i.nr_sequencia,
		a.nr_sequencia nr_seq_mensalidade,
		coalesce(i.ie_mensalidade_mes_anterior,'N'),
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		null vl_ato_cooperado_pro_rata,
		null vl_ato_auxiliar_pro_rata,
		null vl_ato_nao_coop_pro_rata,
		i.dt_mesano_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		null cd_conta_contabil_rec_antec,
		a.dt_referencia,
		b.dt_inicio_cobertura,
		'PLS_CONTA_POS_ESTABELECIDO' nm_tabela,
		'VL_BENEFICIARIO' nm_atributo,
		f.cd_conta_deb,
		f.cd_conta_cred,
		58 nr_seq_info_ctb,
		c.nr_seq_item_cancel,
		0 vl_cancelar,
		0 vl_devolver,
		null cd_historico_devolucao,
		(select count(1)
		from	pls_solic_resc_fin_item		k,
			pls_solic_rescisao_fin		i
		where	k.nr_seq_item_mensalidade = c.nr_sequencia
		and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
		and 	((coalesce(i.ie_status, 0) in (3, 8))
			or (coalesce(i.ie_status, 0) = 7
			and
			exists (select	1
				from	pls_solic_resc_fin_item x,
					pls_solic_rescisao_fin y
				where	x.nr_seq_item_cancel 	= k.nr_sequencia
				and	x.nr_seq_solic_resc_fin = y.nr_sequencia
				and	coalesce(y.ie_status, 0) = 8)))
		and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
		and	(c.cd_historico_devolucao IS NOT NULL AND c.cd_historico_devolucao::text <> '')
		and	coalesce(a.ie_cancelamento,'X') = 'X') qt_devolucao
	from	pls_lote_mensalidade		i,
		pls_mensalidade			a,
		pls_mensalidade_segurado	b,
		pls_mensalidade_seg_item	c,
		pls_conta			d,
		pls_conta_pos_estabelecido	f,
		pls_segurado			g,
		pls_plano			h
	where	a.nr_sequencia	= b.nr_seq_mensalidade
	and	b.nr_sequencia	= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia	= c.nr_seq_conta
	and	d.nr_sequencia	= f.nr_seq_conta
	and	g.nr_sequencia	= b.nr_seq_segurado
	and	h.nr_sequencia	= g.nr_seq_plano
	and	i.nr_sequencia	= a.nr_seq_lote
	and	coalesce(i.nr_lote_contab_antecip,0)	= 0
	and	coalesce(a.nr_seq_cancel_rec_mens::text, '') = ''
	and	c.ie_tipo_item		= '6'
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	((i.nr_lote_contab_antecip <> nr_lote_contabil_p) or (coalesce(i.nr_lote_contab_antecip,0)	= 0))
	and	((i.dt_contabilizacao IS NOT NULL AND i.dt_contabilizacao::text <> '' AND i.nr_lote_contab_antecip IS NOT NULL AND i.nr_lote_contab_antecip::text <> '') or (coalesce(i.dt_contabilizacao::text, '') = ''))
	and	coalesce(f.ie_situacao,'A') = 'A'
	
union all

	select	'C',
		'P',
		'N' ie_devolucao,
		f.cd_conta_cred,
		null cd_conta_cred_antecip,
		null cd_conta_deb_antecip,
		null cd_conta_cred_canc,
		null cd_conta_cred_dev,
		coalesce(f.vl_beneficiario,0) vl_contabil,
		0,
		0,
		f.cd_historico,
		c.nr_sequencia,
		substr(obter_valor_dominio(1930,c.ie_tipo_item),1,255) ds_item,
		f.nr_seq_regra_ctb_cred,
		c.ie_tipo_item,
		g.ie_tipo_segurado,
		h.ie_tipo_contratacao,
		f.nr_sequencia,
		0,
		a.ie_cancelamento,
		i.nr_lote_contab_antecip,
		f.cd_centro_custo,
		i.nr_sequencia,
		a.nr_sequencia nr_seq_mensalidade,
		coalesce(i.ie_mensalidade_mes_anterior,'N'),
		null cd_conta_ato_cooperado,
		null cd_conta_ato_auxiliar,
		null cd_conta_ato_nao_coop,
		null vl_ato_cooperado,
		null vl_ato_auxiliar,
		null vl_ato_nao_cooperado,
		null nr_seq_tipo_lanc,
		a.nr_seq_pagador,
		f.nr_seq_esquema,
		null vl_ato_cooperado_pro_rata,
		null vl_ato_auxiliar_pro_rata,
		null vl_ato_nao_coop_pro_rata,
		i.dt_mesano_referencia dt_referencia_lote,
		c.nr_seq_vinculo_sca,
		null cd_conta_contabil_rec_antec,
		a.dt_referencia,
		b.dt_inicio_cobertura,
		'PLS_CONTA_POS_ESTABELECIDO' nm_tabela,
		'VL_BENEFICIARIO' nm_atributo,
		f.cd_conta_deb,
		f.cd_conta_cred,
		58 nr_seq_info_ctb,
		c.nr_seq_item_cancel,
		0 vl_cancelar,
		0 vl_devolver,
		null cd_historico_devolucao,
		(select count(1)
		from	pls_solic_resc_fin_item		k,
			pls_solic_rescisao_fin		i
		where	k.nr_seq_item_mensalidade = c.nr_sequencia
		and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
		and 	((coalesce(i.ie_status, 0) in (3, 8))
			or (coalesce(i.ie_status, 0) = 7
			and
			exists (select	1
				from	pls_solic_resc_fin_item x,
					pls_solic_rescisao_fin y
				where	x.nr_seq_item_cancel 	= k.nr_sequencia
				and	x.nr_seq_solic_resc_fin = y.nr_sequencia
				and	coalesce(y.ie_status, 0) = 8)))
		and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
		and	(c.cd_historico_devolucao IS NOT NULL AND c.cd_historico_devolucao::text <> '')
		and	coalesce(a.ie_cancelamento,'X') = 'X') qt_devolucao
	from	pls_lote_mensalidade		i,
		pls_mensalidade			a,
		pls_mensalidade_segurado	b,
		pls_mensalidade_seg_item	c,
		pls_conta			d,
		pls_conta_pos_estabelecido	f,
		pls_segurado			g,
		pls_plano			h
	where	a.nr_sequencia	= b.nr_seq_mensalidade
	and	b.nr_sequencia	= c.nr_seq_mensalidade_seg
	and	d.nr_sequencia	= c.nr_seq_conta
	and	d.nr_sequencia	= f.nr_seq_conta
	and	g.nr_sequencia	= b.nr_seq_segurado
	and	h.nr_sequencia	= g.nr_seq_plano
	and	i.nr_sequencia	= a.nr_seq_lote
	and	coalesce(i.nr_lote_contab_antecip,0)	= 0
	and	coalesce(a.nr_seq_cancel_rec_mens::text, '') = ''
	and	c.nr_lote_contabil	= nr_lote_contabil_p
	and	c.ie_tipo_item	= '6'
	and	((i.nr_lote_contab_antecip <> nr_lote_contabil_p) or (coalesce(i.nr_lote_contab_antecip,0)	= 0))
	and	((i.dt_contabilizacao IS NOT NULL AND i.dt_contabilizacao::text <> '' AND i.nr_lote_contab_antecip IS NOT NULL AND i.nr_lote_contab_antecip::text <> '') or (coalesce(i.dt_contabilizacao::text, '') = ''))
	and	coalesce(f.ie_situacao,'A') = 'A'
	
union all

	select	'D' ie_debito_credito,
		'N' ie_tipo_valor,
		'S' ie_devolucao,
		a.cd_conta_deb cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		a.cd_conta_deb_antecip cd_conta_deb_antecip,
		a.cd_conta_deb_antecip cd_conta_canc,
		a.cd_conta_deb_antecip cd_conta_dev,
		0 vl_contabil,
		coalesce(k.vl_pro_rata_dia,0) vl_pro_rata_dia,
		coalesce(k.vl_antecipacao,0) vl_antecipacao,
		a.cd_historico,
		a.nr_sequencia nr_seq_item,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
		a.nr_seq_regra_ctb_mensal_deb nr_seq_regra,
		a.ie_tipo_item ie_tipo_item,
		c.ie_tipo_segurado ie_tipo_segurado,
		g.ie_tipo_contratacao ie_tipo_contratacao,
		CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
		a.nr_lote_contab_antecip nr_lote_contab_antecip_item,
		d.ie_cancelamento ie_cancelamento,
		f.nr_lote_contab_antecip nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		f.nr_sequencia nr_seq_lote_mensalidade,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		k.vl_ato_cooperado,
		k.vl_ato_auxiliar,
		k.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		k.vl_ato_cooperado_pro_rata,
		k.vl_ato_auxiliar_pro_rata,
		k.vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		case when pkg_date_utils.start_of(k.dt_contabil, 'MONTH') = pkg_date_utils.start_of(d.dt_referencia, 'MONTH') then d.dt_referencia
                else k.dt_contabil end,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_CANCELAR' nm_atributo, --VL_DEVOLVER
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		coalesce(k.vl_cancelar,0) vl_cancelar,
		coalesce(k.vl_devolver,0) vl_devolver,
		a.cd_historico_devolucao,
		1 qt_devolucao
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g,
		pls_solic_resc_fin_item		k,
		pls_solic_rescisao_fin		i
	where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia		= b.nr_seq_segurado
	and	d.nr_sequencia		= b.nr_seq_mensalidade
	and	g.nr_sequencia		= b.nr_seq_plano
	and	f.nr_sequencia		= d.nr_seq_lote
	and	k.nr_seq_item_mensalidade = a.nr_sequencia
	and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
	and 	(
			(
				coalesce(i.ie_status, 0) in (3, 8)
			)
			or (
				coalesce(i.ie_status, 0) = 7
				and
				exists (select	1
					from	pls_solic_resc_fin_item x,
						pls_solic_rescisao_fin y
					where	x.nr_seq_item_cancel 	= k.nr_sequencia
					and	x.nr_seq_solic_resc_fin = y.nr_sequencia
					and	coalesce(y.ie_status, 0) = 8)
			)
		)
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	coalesce(d.ie_cancelamento,'X') = 'X'	/*OS 2087263 - Nao deve ser contabilizada a devolucao de mensalidades canceladas*/
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and	a.ie_tipo_item not in ('3','6','18','20','42') /* Do not account the parcel of revenue negociation */
	and (k.vl_cancelar <> 0
	or	k.vl_devolver <> 0)
	and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
	and	coalesce(k.vl_antecipacao,0) <> 0 -- It should only account the debt when there is PPCNG, and for that an anticipation value is needed --OS 1659932
	and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
	
union all

	select	'C' ie_debito_credito,
		'N' ie_tipo_valor,
		'S' ie_devolucao,
		a.cd_conta_rec cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		a.cd_conta_deb_antecip cd_conta_deb_antecip,
		a.cd_conta_deb cd_conta_canc,
		a.cd_conta_devolucao cd_conta_dev,
		0 vl_contabil,
		coalesce(k.vl_pro_rata_dia,0) vl_pro_rata_dia,
		coalesce(k.vl_antecipacao,0) vl_antecipacao,
		a.cd_historico,
		a.nr_sequencia nr_seq_item,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
		a.nr_seq_regra_ctb_mensal nr_seq_regra,
		a.ie_tipo_item ie_tipo_item,
		c.ie_tipo_segurado ie_tipo_segurado,
		g.ie_tipo_contratacao ie_tipo_contratacao,
		CASE WHEN a.ie_tipo_item='13' THEN CASE WHEN coalesce(ie_cancelamento::text, '') = '' THEN 1  ELSE d.nr_sequencia END   ELSE 0 END  nr_seq_copartic,
		a.nr_lote_contab_antecip nr_lote_contab_antecip_item,
		d.ie_cancelamento ie_cancelamento,
		f.nr_lote_contab_antecip nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		f.nr_sequencia nr_seq_lote_mensalidade,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		k.vl_ato_cooperado,
		k.vl_ato_auxiliar,
		k.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		k.vl_ato_cooperado_pro_rata,
		k.vl_ato_auxiliar_pro_rata,
		k.vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		case when pkg_date_utils.start_of(k.dt_contabil, 'MONTH') = pkg_date_utils.start_of(d.dt_referencia, 'MONTH') then d.dt_referencia
                else k.dt_contabil end,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_CANCELAR' nm_atributo, --VL_DEVOLVER
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		coalesce(k.vl_cancelar,0) vl_cancelar,
		coalesce(k.vl_devolver,0) vl_devolver,
		a.cd_historico_devolucao,
		1 qt_devolucao
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g,
		pls_solic_resc_fin_item		k,
		pls_solic_rescisao_fin		i
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_segurado
	and	d.nr_sequencia	= b.nr_seq_mensalidade
	and	g.nr_sequencia	= b.nr_seq_plano
	and	f.nr_sequencia	= d.nr_seq_lote
	and	k.nr_seq_item_mensalidade = a.nr_sequencia
	and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
	and 	(
			(
				coalesce(i.ie_status, 0) in (3, 8)
			)
			or (
				coalesce(i.ie_status, 0) = 7
				and
				exists (select	1
					from	pls_solic_resc_fin_item x,
						pls_solic_rescisao_fin y
					where	x.nr_seq_item_cancel 	= k.nr_sequencia
					and	x.nr_seq_solic_resc_fin = y.nr_sequencia
					and	coalesce(y.ie_status, 0) = 8)
			)
		)
	and	coalesce(d.ie_cancelamento,'X') = 'X'	/*OS 2087263 - Nao deve ser contabilizada a devolucao de mensalidades canceladas*/
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and	a.ie_tipo_item not in ('3','6','18','20','42') /* Do not account the parcel of revenue negociation */
	and (k.vl_cancelar <> 0
	or	k.vl_devolver <> 0)
	and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
	and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
	
union all

	select	'D' ie_debito_credito,
		'CO' ie_tipo_valor,
		'S' ie_devolucao,
		a.cd_conta_deb cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		a.cd_conta_deb_antecip cd_conta_deb_antecip,
		a.cd_conta_deb_antecip cd_conta_canc,
		a.cd_conta_deb_antecip cd_conta_dev,
		0 vl_contabil,
		0 vl_pro_rata_dia,
		0 vl_antecipacao,
		a.cd_historico,
		j.nr_sequencia nr_seq_item,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
		a.nr_seq_regra_ctb_mensal_deb nr_seq_regra,
		a.ie_tipo_item ie_tipo_item,
		c.ie_tipo_segurado ie_tipo_segurado,
		g.ie_tipo_contratacao ie_tipo_contratacao,
		CASE WHEN coalesce(ie_cancelamento,'X')='X' THEN 1  ELSE d.nr_sequencia END  nr_seq_copartic,
		a.nr_lote_contab_antecip nr_lote_contab_antecip_item,
		d.ie_cancelamento ie_cancelamento,
		f.nr_lote_contab_antecip nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		f.nr_sequencia nr_seq_lote_mensalidade,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		k.vl_ato_cooperado,
		k.vl_ato_auxiliar,
		k.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		k.vl_ato_cooperado_pro_rata,
		k.vl_ato_auxiliar_pro_rata,
		k.vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		case when pkg_date_utils.start_of(k.dt_contabil, 'MONTH') = pkg_date_utils.start_of(d.dt_referencia, 'MONTH') then d.dt_referencia
                else k.dt_contabil end,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
		'PLS_MENSALIDADE_ITEM_CONTA' nm_tabela,
		'VL_CANCELAR' nm_atributo, --VL_DEVOLVER
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		coalesce(k.vl_cancelar,0) vl_cancelar,
		coalesce(k.vl_devolver,0) vl_devolver,
		a.cd_historico_devolucao,
		1 qt_devolucao
	from	pls_mensalidade_item_conta	j,
		pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g,
		pls_solic_resc_fin_item		k,
		pls_solic_rescisao_fin		i
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_segurado
	and	d.nr_sequencia	= b.nr_seq_mensalidade
	and	g.nr_sequencia	= b.nr_seq_plano
	and	f.nr_sequencia	= d.nr_seq_lote
	and	a.nr_sequencia	= j.nr_seq_item
	and	k.nr_seq_item_mensalidade = a.nr_sequencia
	and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
	and 	(
			(
				coalesce(i.ie_status, 0) in (3, 8)
			)
			or (
				coalesce(i.ie_status, 0) = 7
				and
				exists (select	1
					from	pls_solic_resc_fin_item x,
						pls_solic_rescisao_fin y
					where	x.nr_seq_item_cancel 	= k.nr_sequencia
					and	x.nr_seq_solic_resc_fin = y.nr_sequencia
					and	coalesce(y.ie_status, 0) = 8)
			)
		)
	and	(j.nr_seq_conta_co IS NOT NULL AND j.nr_seq_conta_co::text <> '')
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	a.ie_tipo_item	= '13'
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and (k.vl_cancelar <> 0
	or	k.vl_devolver <> 0)
	and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
	and	coalesce(d.ie_cancelamento,'X') = 'X'	/*OS 2087263 - Nao deve ser contabilizada a devolucao de mensalidades canceladas*/
	and	coalesce(k.vl_antecipacao,0) <> 0 -- It should only account the debt when there is PPCNG, and for that an anticipation value is needed --OS 1659932
	and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
	
union all

	select	'C' ie_debito_credito,
		'CO' ie_tipo_valor,
		'S' ie_devolucao,
		a.cd_conta_rec cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		a.cd_conta_deb_antecip cd_conta_deb_antecip,
		a.cd_conta_deb cd_conta_canc,
		a.cd_conta_devolucao cd_conta_dev,
		0 vl_contabil,
		0 vl_pro_rata_dia,
		0 vl_antecipacao,
		a.cd_historico,
		j.nr_sequencia nr_seq_item,
		substr(obter_valor_dominio(1930,a.ie_tipo_item),1,255) ds_item,
		a.nr_seq_regra_ctb_mensal nr_seq_regra,
		a.ie_tipo_item ie_tipo_item,
		c.ie_tipo_segurado ie_tipo_segurado,
		g.ie_tipo_contratacao ie_tipo_contratacao,
		CASE WHEN coalesce(ie_cancelamento,'X')='X' THEN 1  ELSE d.nr_sequencia END  nr_seq_copartic,
		a.nr_lote_contab_antecip nr_lote_contab_antecip_item,
		d.ie_cancelamento ie_cancelamento,
		f.nr_lote_contab_antecip nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		f.nr_sequencia nr_seq_lote_mensalidade,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		k.vl_ato_cooperado,
		k.vl_ato_auxiliar,
		k.vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		k.vl_ato_cooperado_pro_rata,
		k.vl_ato_auxiliar_pro_rata,
		k.vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		a.nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		case when pkg_date_utils.start_of(k.dt_contabil, 'MONTH') = pkg_date_utils.start_of(d.dt_referencia, 'MONTH') then d.dt_referencia
                else k.dt_contabil end,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
		'PLS_MENSALIDADE_ITEM_CONTA' nm_tabela,
		'VL_CANCELAR' nm_atributo, --VL_DEVOLVER
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		coalesce(k.vl_cancelar,0) vl_cancelar,
		coalesce(k.vl_devolver,0) vl_devolver,
		a.cd_historico_devolucao,
		1 qt_devolucao
	from	pls_mensalidade_item_conta	j,
		pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g,
		pls_solic_resc_fin_item		k,
		pls_solic_rescisao_fin		i
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_segurado
	and	d.nr_sequencia	= b.nr_seq_mensalidade
	and	g.nr_sequencia	= b.nr_seq_plano
	and	f.nr_sequencia	= d.nr_seq_lote
	and	a.nr_sequencia	= j.nr_seq_item
	and	k.nr_seq_item_mensalidade = a.nr_sequencia
	and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
	and 	(
			(
				coalesce(i.ie_status, 0) in (3, 8)
			)
			or (
				coalesce(i.ie_status, 0) = 7
				and
				exists (select	1
					from	pls_solic_resc_fin_item x,
						pls_solic_rescisao_fin y
					where	x.nr_seq_item_cancel 	= k.nr_sequencia
					and	x.nr_seq_solic_resc_fin = y.nr_sequencia
					and	coalesce(y.ie_status, 0) = 8)
			)
		)
	and	(j.nr_seq_conta_co IS NOT NULL AND j.nr_seq_conta_co::text <> '')
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	a.ie_tipo_item	= '13'
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and (k.vl_cancelar <> 0
	or	k.vl_devolver <> 0)
	and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
	and	coalesce(d.ie_cancelamento,'X') = 'X'	/*OS 2087263 - Nao deve ser contabilizada a devolucao de mensalidades canceladas*/
	and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
	
union all

	select	'D' ie_debito_credito,
		'N' ie_tipo_valor,
		'S' ie_devolucao,
		a.cd_conta_deb cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		a.cd_conta_deb_antecip cd_conta_deb_antecip,
		a.cd_conta_deb_antecip cd_conta_canc,
		a.cd_conta_deb_antecip cd_conta_dev,
		0 vl_contabil,
		sum(coalesce(k.vl_pro_rata_dia,0)) vl_pro_rata_dia,
		sum(coalesce(k.vl_antecipacao,0)) vl_antecipacao,
		a.cd_historico cd_historico,
		max(a.nr_sequencia) nr_seq_item,
		substr(obter_desc_expressao(331083),1,20) ds_item,
		max(a.nr_seq_regra_ctb_mensal_deb) nr_seq_regra,
		'20' ie_tipo_item,
		c.ie_tipo_segurado ie_tipo_segurado,
		g.ie_tipo_contratacao ie_tipo_contratacao,
		null nr_seq_copartic,
		null nr_lote_contab_antecip_item,
		d.ie_cancelamento ie_cancelamento,
		null nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		f.nr_sequencia nr_seq_lote_mensalidade,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		sum(k.vl_ato_cooperado) vl_ato_cooperado,
		sum(k.vl_ato_auxiliar) vl_ato_auxiliar,
		sum(k.vl_ato_nao_cooperado) vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		sum(k.vl_ato_cooperado_pro_rata) vl_ato_cooperado_pro_rata,
		sum(k.vl_ato_auxiliar_pro_rata) vl_ato_auxiliar_pro_rata,
		sum(k.vl_ato_nao_coop_pro_rata) vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		max(a.nr_seq_vinculo_sca) nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		case when pkg_date_utils.start_of(k.dt_contabil, 'MONTH') = pkg_date_utils.start_of(d.dt_referencia, 'MONTH') then d.dt_referencia
                else k.dt_contabil end,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_CANCELAR' nm_atributo, -- VL_DEVOLVER
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		sum(coalesce(k.vl_cancelar,0)) vl_cancelar,
		sum(coalesce(k.vl_devolver,0)) vl_devolver,
		a.cd_historico_devolucao,
		1 qt_devolucao
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g,
		pls_solic_resc_fin_item		k,
		pls_solic_rescisao_fin		i
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_segurado
	and	d.nr_sequencia	= b.nr_seq_mensalidade
	and	g.nr_sequencia	= b.nr_seq_plano
	and	f.nr_sequencia	= d.nr_seq_lote
	and	k.nr_seq_item_mensalidade = a.nr_sequencia
	and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
	and 	(
			(
				coalesce(i.ie_status, 0) in (3, 8)
			)
			or (
				coalesce(i.ie_status, 0) = 7
				and
				exists (select	1
					from	pls_solic_resc_fin_item x,
						pls_solic_rescisao_fin y
					where	x.nr_seq_item_cancel 	= k.nr_sequencia
					and	x.nr_seq_solic_resc_fin = y.nr_sequencia
					and	coalesce(y.ie_status, 0) = 8)
			)
		)
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and	a.ie_tipo_item = '20'
	and (k.vl_cancelar <> 0
	or	k.vl_devolver <> 0)
	and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
	and	coalesce(k.vl_antecipacao,0) <> 0 -- It should only account the debt when there is PPCNG, and for that an anticipation value is needed --OS 1659932
	and	coalesce(d.ie_cancelamento,'X') = 'X'	/*OS 2087263 - Nao deve ser contabilizada a devolucao de mensalidades canceladas*/
	and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
	group by a.cd_conta_deb,
		a.cd_conta_rec_antecip,
		a.cd_conta_deb_antecip,
		a.cd_conta_deb,
		a.cd_conta_devolucao,
		a.cd_historico,
		a.cd_historico_devolucao,
		c.ie_tipo_segurado,
		g.ie_tipo_contratacao,
		d.ie_cancelamento,
		a.cd_centro_custo,
		f.nr_sequencia,
		d.nr_sequencia,
		coalesce(f.ie_mensalidade_mes_anterior,'N'),
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		f.dt_mesano_referencia,
		a.cd_conta_contabil_rec_antec,
		k.dt_contabil,
		d.dt_referencia,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura),
		a.cd_conta_rec,
		a.nr_seq_item_cancel
	
union all

	select	'C' ie_debito_credito,
		'N' ie_tipo_valor,
		'S' ie_devolucao,
		a.cd_conta_rec cd_conta_contabil,
		a.cd_conta_rec_antecip cd_conta_antecip,
		a.cd_conta_deb_antecip cd_conta_deb_antecip,
		a.cd_conta_deb cd_conta_canc,
		a.cd_conta_devolucao cd_conta_dev,
		0 vl_contabil,
		sum(coalesce(k.vl_pro_rata_dia,0)) vl_pro_rata_dia,
		sum(coalesce(k.vl_antecipacao,0)) vl_antecipacao,
		a.cd_historico cd_historico,
		max(a.nr_sequencia) nr_seq_item,
		substr(obter_desc_expressao(331083),1,20) ds_item,
		max(a.nr_seq_regra_ctb_mensal) nr_seq_regra,
		'20' ie_tipo_item,
		c.ie_tipo_segurado ie_tipo_segurado,
		g.ie_tipo_contratacao ie_tipo_contratacao,
		null nr_seq_copartic,
		null nr_lote_contab_antecip_item,
		d.ie_cancelamento ie_cancelamento,
		null nr_lote_contab_antecip,
		a.cd_centro_custo cd_centro_custo,
		f.nr_sequencia nr_seq_lote_mensalidade,
		d.nr_sequencia nr_seq_mensalidade,
		coalesce(f.ie_mensalidade_mes_anterior,'N') ie_mensalidade_mes_anterior,
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		sum(k.vl_ato_cooperado) vl_ato_cooperado,
		sum(k.vl_ato_auxiliar) vl_ato_auxiliar,
		sum(k.vl_ato_nao_cooperado) vl_ato_nao_cooperado,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		sum(k.vl_ato_cooperado_pro_rata) vl_ato_cooperado_pro_rata,
		sum(k.vl_ato_auxiliar_pro_rata) vl_ato_auxiliar_pro_rata,
		sum(k.vl_ato_nao_coop_pro_rata) vl_ato_nao_coop_pro_rata,
		f.dt_mesano_referencia dt_referencia_lote,
		max(a.nr_seq_vinculo_sca) nr_seq_vinculo_sca,
		a.cd_conta_contabil_rec_antec,
		case when pkg_date_utils.start_of(k.dt_contabil, 'MONTH') = pkg_date_utils.start_of(d.dt_referencia, 'MONTH') then d.dt_referencia
                else k.dt_contabil end,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura) dt_inicio_cobertura,
		'PLS_MENSALIDADE_SEG_ITEM' nm_tabela,
		'VL_CANCELAR' nm_atributo, -- VL_DEVOLVER
		a.cd_conta_deb,
		a.cd_conta_rec,
		56 nr_seq_info_ctb,
		a.nr_seq_item_cancel,
		sum(coalesce(k.vl_cancelar,0)) vl_cancelar,
		sum(coalesce(k.vl_devolver,0)) vl_devolver,
		a.cd_historico_devolucao,
		1 qt_devolucao
	from	pls_mensalidade_seg_item	a,
		pls_mensalidade_segurado	b,
		pls_segurado			c,
		pls_mensalidade			d,
		pls_lote_mensalidade		f,
		pls_plano			g,
		pls_solic_resc_fin_item		k,
		pls_solic_rescisao_fin		i
	where	b.nr_sequencia	= a.nr_seq_mensalidade_seg
	and	c.nr_sequencia	= b.nr_seq_segurado
	and	d.nr_sequencia	= b.nr_seq_mensalidade
	and	g.nr_sequencia	= b.nr_seq_plano
	and	f.nr_sequencia	= d.nr_seq_lote
	and	k.nr_seq_item_mensalidade = a.nr_sequencia
	and 	k.nr_seq_solic_resc_fin = i.nr_sequencia
	and 	(
			(
				coalesce(i.ie_status, 0) in (3, 8)
			)
			or (
				coalesce(i.ie_status, 0) = 7
				and
				exists (select	1
					from	pls_solic_resc_fin_item x,
						pls_solic_rescisao_fin y
					where	x.nr_seq_item_cancel 	= k.nr_sequencia
					and	x.nr_seq_solic_resc_fin = y.nr_sequencia
					and	coalesce(y.ie_status, 0) = 8)
			)
		)
	and	coalesce(f.nr_lote_contab_antecip,0)	= 0
	and	coalesce(d.nr_seq_cancel_rec_mens::text, '') = ''
	and	a.ie_tipo_item = '20'
	and (k.vl_cancelar <> 0
	or	k.vl_devolver <> 0)
	and	(a.cd_historico_devolucao IS NOT NULL AND a.cd_historico_devolucao::text <> '')
	and	coalesce(d.ie_cancelamento,'X') = 'X'	/*OS 2087263 - Nao deve ser contabilizada a devolucao de mensalidades canceladas*/
	and	k.dt_contabil between dt_referencia_w and dt_referencia_fm_w
	group by a.cd_conta_rec,
		a.cd_conta_rec_antecip,
		a.cd_conta_deb_antecip,
		a.cd_conta_deb,
		a.cd_conta_devolucao,
		a.cd_historico,
		a.cd_historico_devolucao,
		c.ie_tipo_segurado,
		g.ie_tipo_contratacao,
		d.ie_cancelamento,
		a.cd_centro_custo,
		f.nr_sequencia,
		d.nr_sequencia,
		coalesce(f.ie_mensalidade_mes_anterior,'N'),
		a.cd_conta_ato_cooperado,
		a.cd_conta_ato_auxiliar,
		a.cd_conta_ato_nao_coop,
		a.nr_seq_tipo_lanc,
		d.nr_seq_pagador,
		a.nr_seq_esquema,
		f.dt_mesano_referencia,
		a.cd_conta_contabil_rec_antec,
		k.dt_contabil,
		d.dt_referencia,
		coalesce(a.dt_inicio_cobertura,b.dt_inicio_cobertura),
		a.cd_conta_deb,
		a.nr_seq_item_cancel;

C03 CURSOR FOR
	SELECT 	a.nr_sequencia
	from 	pls_mensalidade a,
		pls_lote_mensalidade	b
	where	b.nr_sequencia	= a.nr_seq_lote
	and	exists (SELECT 1
			from	pls_mensalidade_seg_item x,
				pls_mensalidade_segurado y
			where	y.nr_seq_mensalidade = a.nr_sequencia
			and	y.nr_sequencia = x.nr_seq_mensalidade_seg
			and	x.nr_lote_contabil = nr_lote_contabil_p)
	and	not exists (select 1
			from  titulo_receber x
			where a.nr_sequencia = x.nr_seq_mensalidade)
	and	b.ie_status			= 2
	and	b.cd_estabelecimento		= cd_estabelecimento_w
	and	coalesce(a.ie_cancelamento,'X') 	= 'X';			
	

type		fetch_array1 is table of c01%ROWTYPE;
s_array1	fetch_array1;
i1		integer := 1;
type Vetor1 is table of fetch_array1 index by integer;
Vetor_c01_w			Vetor1;

type		fetch_array is table of c02%ROWTYPE;
s_array	fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_c02_w			Vetor;

c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
nr_vetor_w			bigint	:= 0;
type registro is table of w_movimento_contabil%RowType index by integer;
w_movto_contabil_w		registro;
BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 21) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
select	trunc(dt_referencia,'month'),
	cd_estabelecimento,
	nr_lote_contabil,
	cd_tipo_lote_contabil
into STRICT	dt_referencia_w,
	cd_estabelecimento_w,
	nr_lote_contabil_w,
	cd_tipo_lote_contabil_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

select	max(vl_parametro)
into STRICT	nr_lote_param_w
from	lote_contabil_parametro
where	nr_lote_contabil	= nr_lote_contabil_p
and	nr_seq_parametro	= 1;

dt_referencia_fm_w	:= fim_dia(fim_mes(dt_referencia_w));

begin
select	coalesce(ie_esquema_contabil,'N'),
	coalesce(ie_consiste_tit_mensalidade,'N'),
	coalesce(ie_contab_ppcng, 'N')
into STRICT	ie_esquema_contabil_w,
	ie_consiste_tit_mensalidade_w,
	ie_contab_ppcng_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_w;
exception
when others then
	ie_esquema_contabil_w	:= 'N';
end;

delete	from w_pls_movimento_sem_conta
where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w;

if (ie_exclusao_p = 'S') then
	begin
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento
		loop
		delete	from movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
		
	commit;
	
	update	lote_contabil
	set	vl_credito		= 0,
		vl_debito		= 0,
		dt_geracao_lote		 = NULL
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_lote_mensalidade
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_lote_mensalidade
	set	nr_lote_contab_antecip	= 0
	where	nr_lote_contab_antecip	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_mensalidade_seg_item a
	set	a.nr_lote_contabil	= 0
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_mensalidade_seg_item a
	set	a.nr_lote_contab_antecip	= 0
	where	a.nr_lote_contab_antecip	= nr_lote_contabil_p;
	
	commit;

	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	end;
else
	begin
	
	if (ie_contab_ppcng_w = 'S') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(710368);
	end if;
	
	select	count(1)
	into STRICT	qt_lote_gerado_mes_w
	from	lote_contabil
	where	cd_tipo_lote_contabil		= cd_tipo_lote_contabil_w
	and	nr_lote_contabil <> nr_lote_contabil_p
	and	(dt_geracao_lote IS NOT NULL AND dt_geracao_lote::text <> '')
	and	coalesce(cd_estabelecimento, cd_estabelecimento_w) = cd_estabelecimento_w
	and	dt_referencia between dt_referencia_w and dt_referencia_fm_w  LIMIT 1;

	if (qt_lote_gerado_mes_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 188714, 'DT_REFERENCIA=' || to_char(dt_referencia_w,'mm/yyyy') );
		/* Message: There already is an accounting batch generated for the month DT_REFERENCI. Please verify. */

	end if;
	
	select 	count(1)
	into STRICT	qt_lote_mens_w
	from	lote_contabil_param_item
	where	nr_lote_contabil	= nr_lote_contabil_p  LIMIT 1;
	
	nm_agrupador_w	:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)),'NR_SEQ_LOTE');
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	for reg in c_movimento_w
		loop
		delete	from w_movimento_contabil
		where   rowid	= reg.rowid;
		end loop;
		
	commit;
	
	update	pls_lote_mensalidade	a
	set	a.nr_lote_contab_antecip	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contab_antecip,0)	= 0
	and	a.ie_status			= 2
	and	a.cd_estabelecimento		= cd_estabelecimento_w
	and (exists (SELECT	1
			from 	lote_contabil_param_item b
			where	b.nr_documento		= a.nr_sequencia
			and	b.nr_lote_contabil	= nr_lote_contabil_p)
		or (qt_lote_mens_w = 0))
	and	a.dt_contabilizacao between dt_referencia_w and dt_referencia_fm_w;
	
	commit;
	
	update	pls_lote_mensalidade	a
	set	a.nr_lote_contabil	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contabil,0)	= 0
	and	ie_status		= 2
	and	a.cd_estabelecimento	= cd_estabelecimento_w
	and	a.nr_sequencia		= coalesce(nr_lote_param_w, nr_sequencia)
	and (exists (SELECT	1
			from 	lote_contabil_param_item b
			where	b.nr_documento		= a.nr_sequencia
			and	b.nr_lote_contabil	= nr_lote_contabil_p)
		or (qt_lote_mens_w = 0))
	and	a.dt_mesano_referencia between dt_referencia_w and dt_referencia_fm_w;
	
	commit;
		
	update	pls_mensalidade_seg_item a
	set	a.nr_lote_contabil		= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contabil,0)	= 0
	and	coalesce(a.vl_item,0)		<> 0
	and	exists (SELECT	1
			from	pls_mensalidade_segurado	x,
				pls_mensalidade			y,
				pls_lote_mensalidade		z
			where	y.nr_sequencia				= x.nr_seq_mensalidade
			and	z.nr_sequencia				= y.nr_seq_lote
			and	x.nr_sequencia				= a.nr_seq_mensalidade_seg
			and	z.ie_status				= 2
			and	coalesce(z.ie_mensalidade_mes_anterior,'N')	= 'N'
			and	z.cd_estabelecimento			= cd_estabelecimento_w
			and	z.nr_sequencia				= coalesce(nr_lote_param_w, z.nr_sequencia)
			and (exists (select	1
					from 	lote_contabil_param_item b
					where	b.nr_documento		= z.nr_sequencia
					and	b.nr_lote_contabil	= nr_lote_contabil_p)
				or (qt_lote_mens_w = 0))
			and	y.dt_referencia between dt_referencia_w and dt_referencia_fm_w);
			
	commit;
				
	update	pls_mensalidade_seg_item a
	set	a.nr_lote_contab_antecip	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contab_antecip,0)	= 0
	and	coalesce(a.vl_antecipacao,0)		<> 0
	and	exists (SELECT	1
			from	pls_mensalidade_segurado	x,
				pls_mensalidade			y,
				pls_lote_mensalidade		z
			where	x.nr_sequencia				= a.nr_seq_mensalidade_seg
			and	y.nr_sequencia				= x.nr_seq_mensalidade
			and	z.nr_sequencia				= y.nr_seq_lote
			and	z.ie_status				= 2
			and	coalesce(z.ie_mensalidade_mes_anterior,'N')	= 'N'
			and (exists (select	1
					from 	lote_contabil_param_item b
					where	b.nr_documento		= z.nr_sequencia
					and	b.nr_lote_contabil	= nr_lote_contabil_p)
				or (qt_lote_mens_w = 0))
			and	z.cd_estabelecimento			= cd_estabelecimento_w)
	and	a.dt_antecipacao between dt_referencia_w and dt_referencia_fm_w;
	
	commit;
	
	update	pls_mensalidade_seg_item a
	set	a.nr_lote_contabil	= nr_lote_contabil_p
	where	coalesce(a.nr_lote_contabil,0)	= 0
	and	coalesce(a.vl_item,0)		<> 0
	and	exists (SELECT	1
			from	pls_mensalidade_segurado	x,
				pls_mensalidade			y,
				pls_lote_mensalidade		z
			where	y.nr_sequencia				= x.nr_seq_mensalidade
			and	z.nr_sequencia				= y.nr_seq_lote
			and	x.nr_sequencia				= a.nr_seq_mensalidade_seg
			and	z.ie_status				= 2
			and	coalesce(z.ie_mensalidade_mes_anterior,'N')	= 'S'
			and	z.cd_estabelecimento			= cd_estabelecimento_w
			and (exists (select	1
					from 	lote_contabil_param_item b
					where	b.nr_documento		= z.nr_sequencia
					and	b.nr_lote_contabil	= nr_lote_contabil_p)
				or (qt_lote_mens_w = 0))
			and	z.dt_mesano_referencia between dt_referencia_w and dt_referencia_fm_w);
			
	commit;

	if (ie_consiste_tit_mensalidade_w = 'S')then
		ds_mensalidade_sem_titulo_w	:= null;
		
		open C03;
		loop
		fetch C03 into	
			nr_seq_mensalidade_tit_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			ds_mensalidade_sem_titulo_w	:= ds_mensalidade_sem_titulo_w || ',' || nr_seq_mensalidade_tit_w;
			end;
		end loop;
		close C03;

		if (coalesce(ds_mensalidade_sem_titulo_w,'X') != 'X') then
			/*ds_mensalidade_sem_titulo_w	:= 'The monthly fee below do not have an account receivable generated: '||substr(ds_mensalidade_sem_titulo_w,2,4000);*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(288135, 'DS_MENSALIDADE_SEM_TITULO=' || ds_mensalidade_sem_titulo_w);
		end if;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');

	/* Account the monthly fee information */

	CALL ctb_pls_contab_receitas_pag(	nr_lote_contabil_p,
					nm_usuario_p);
	

	/* Account the monthly fee with anticipation date informed */

	CALL ctb_pls_contab_receitas_ant(	nr_lote_contabil_p,
					nm_usuario_p);
	

	/* Account the taxes from the table PLS_MENSALIDADE_TRIB */

	ctb_pls_contab_rec_imposto(	nr_lote_contabil_p,
					nm_usuario_p);
	
	begin
	select	coalesce(ie_recebimento_antec_passivo,'N'),
		coalesce(ie_contab_classif_mens,'N'),
		coalesce(ie_dia_cobertura_rec_antec,'N')
	into STRICT	ie_recebimento_antec_passivo_w,
		ie_contab_classif_mens_w,
		ie_dia_cobertura_rec_antec_w
	from	pls_parametro_contabil
	where	cd_estabelecimento	= cd_estabelecimento_w;
	exception
	when others then
		ie_recebimento_antec_passivo_w	:= 'N';
		ie_contab_classif_mens_w	:= 'N';
	end;
	
	nr_seq_w_movto_cont_w	:= 0;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_troca_plano_contas_w
	from	ctb_troca_plano
	where	trunc(dt_troca_prevista,'month')	= dt_referencia_w
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
	
	nm_tabela_w	:= 'PLS_MENSALIDADE_SEG_ITEM';

	/* Account the anticipation */

	open c01;
	loop
	fetch C01 bulk collect into s_array1 limit 1000;
		Vetor_c01_w(i1) := s_array1;
		i1 := i1 + 1;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	for i1 in 1..Vetor_c01_w.count loop
		s_array1 := Vetor_c01_w(i1);
		for z1 in 1..s_array1.count loop
			begin
			cd_conta_contabil_w		:= s_array1[z1].cd_conta_contabil;
			cd_conta_antecip_w		:= s_array1[z1].cd_conta_antecip;
			vl_antecipacao_w		:= s_array1[z1].vl_antecipacao;
			vl_ato_cooperado_antec_w	:= s_array1[z1].vl_ato_cooperado_antec;
			vl_ato_auxiliar_antec_w		:= s_array1[z1].vl_ato_auxiliar_antec;
			vl_ato_nao_coop_antec_w		:= s_array1[z1].vl_ato_nao_coop_antec;
			cd_historico_w			:= s_array1[z1].cd_historico;
			nr_lote_contab_antecip_w	:= s_array1[z1].nr_lote_contab_antecip;
			cd_centro_custo_w		:= s_array1[z1].cd_centro_custo;
			nr_seq_item_w			:= s_array1[z1].nr_seq_item;
			--nr_titulo_w			:= s_array1(z1).nr_titulo;
			nr_seq_lote_mensalidade_w	:= s_array1[z1].nr_seq_lote_mensalidade;
			--cd_pessoa_fisica_w		:= s_array1(z1).cd_pessoa_fisica;
			--cd_cgc_w			:= s_array1(z1).cd_cgc;
			nr_seq_mensalidade_w		:= s_array1[z1].nr_seq_mensalidade;
			nr_seq_pagador_w		:= s_array1[z1].nr_seq_pagador;
			nr_seq_esquema_w		:= s_array1[z1].nr_seq_esquema;
			cd_conta_ato_cooperado_w	:= s_array1[z1].cd_conta_ato_cooperado;
			cd_conta_ato_auxiliar_w		:= s_array1[z1].cd_conta_ato_auxiliar;
			cd_conta_ato_nao_coop_w		:= s_array1[z1].cd_conta_ato_nao_coop;
			dt_referencia_lote_w		:= s_array1[z1].dt_referencia_lote;
			ds_item_w			:= s_array1[z1].ds_item;
			ie_tipo_item_w			:= s_array1[z1].ie_tipo_item;
			nr_seq_vinculo_sca_w		:= s_array1[z1].nr_seq_vinculo_sca;
			cd_conta_contabil_rec_antec_w	:= s_array1[z1].cd_conta_contabil_rec_antec;
			--dt_liquidacao_titulo_w		:= s_array1(z1).dt_liquidacao;	
			dt_antecipacao_w		:= s_array1[z1].dt_antecipacao;
			dt_inicio_cobertura_w		:= s_array1[z1].dt_inicio_cobertura;
			cd_conta_rec_w			:= s_array1[z1].cd_conta_rec;
			cd_conta_deb_w			:= s_array1[z1].cd_conta_deb;
			nr_seq_info_ctb_w		:= s_array1[z1].nr_seq_info_ctb;
			nr_seq_item_cancel_w		:= s_array1[z1].nr_seq_item_cancel;
			
			nr_seq_regra_w			:= null;
			ds_compl_historico_w		:= null;
			nm_pagador_w			:= null;
			cd_pessoa_fisica_w		:= null;
			cd_cgc_w			:= null;
			nr_seq_nota_fiscal_w		:= null;
			nr_nota_fiscal_w		:= null;

			select	min(nr_titulo)
			into STRICT	nr_titulo_w
			from	titulo_receber
			where	nr_seq_mensalidade	= nr_seq_mensalidade_w;
					
			if (coalesce(nr_lote_contab_antecip_w,0) <> 0) then
				cd_centro_custo_ww	:= cd_centro_custo_w;
			
				/* Debit from the anticipatio accounting account */

				if (cd_conta_antecip_w IS NOT NULL AND cd_conta_antecip_w::text <> '') then
					select	ie_centro_custo
					into STRICT	ie_centro_custo_w
					from	conta_contabil
					where	cd_conta_contabil = cd_conta_antecip_w;
				end if;

				if	((ie_centro_custo_w = 'N') or (coalesce(ie_centro_custo_w::text, '') = '')) then
					cd_centro_custo_w := null;
				end if;
			
				if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
					cd_centro_custo_w	:= cd_centro_custo_item_w;
				end if;
				
				if (coalesce(nr_titulo_w,0) = 0) then
					begin
					
					select	max(nr_titulo)
					into STRICT	nr_titulo_w
					from	titulo_receber d,
						pls_mensalidade c,
						pls_mensalidade_segurado b,
						pls_mensalidade_seg_item a
					where	d.nr_seq_mensalidade = c.nr_sequencia
					and	c.nr_sequencia = b.nr_seq_mensalidade
					and	b.nr_sequencia = a.nr_seq_mensalidade_seg
					and	a.nr_sequencia = nr_seq_item_cancel_w;
					
					end;
				end if;	
			
				if (coalesce(nr_titulo_w,0) > 0) then
					select	max(dt_liquidacao),
						max(cd_pessoa_fisica),
						max(cd_cgc),
						max(vl_titulo)
					into STRICT	dt_liquidacao_titulo_w,
						cd_pessoa_fisica_w,
						cd_cgc_w,
						vl_titulo_w
					from	titulo_receber
					where	nr_titulo	= nr_titulo_w;
				end if;
			
				/* Lepinski - OS 456905 - Define the accounting grouper */

				if (nm_agrupador_w = 'NR_SEQ_LOTE') then
					nr_seq_agrupamento_w	:= nr_seq_lote_mensalidade_w;
				elsif (nm_agrupador_w = 'NR_SEQ_PAGADOR') then
					nr_seq_agrupamento_w	:= nr_seq_pagador_w;
				elsif (nm_agrupador_w = 'NR_TITULO') then
					nr_seq_agrupamento_w	:= nr_titulo_w;
				elsif (nm_agrupador_w = 'IE_TIPO_ITEM') then
					nr_seq_agrupamento_w	:= ie_tipo_item_w;
				elsif (nm_agrupador_w = 'NR_SEQ_MENSALIDADE') then
					nr_seq_agrupamento_w	:= nr_seq_mensalidade_w;
				else
					nr_seq_agrupamento_w	:= null;
				end if;
				
				if (coalesce(nr_seq_agrupamento_w,0) = 0)then
					nr_seq_agrupamento_w := nr_seq_lote_mensalidade_w;
				end if;
			
				dt_referencia_mov_w	:= dt_antecipacao_w;
			
				if (ie_esquema_contabil_w = 'S') then
					if (coalesce(nr_seq_esquema_w,0) = 0) then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(220652, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
												'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w);
					end if;
				end if;

				if (coalesce(cd_historico_w::text, '') = '') then
					if (ie_esquema_contabil_w = 'S') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(220653, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
												'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w || ';' ||
												'NR_SEQ_ESQUEMA=' || nr_seq_esquema_w);
					elsif (ie_esquema_contabil_w = 'N') then			
						CALL wheb_mensagem_pck.exibir_mensagem_abort(220874, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
												'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w);
					end if;
				else					
					/*Lepinski - OS - Improve performance. Verify if the default history has a history complement for this accounting batch. Otherwise doesn't call the procedure to obtain the complement */

					select	count(1)
					into STRICT	qt_compl_hist_w
					from	historico_padrao_atributo
					where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
					and	cd_historico		= cd_historico_w  LIMIT 1;
				
					if (qt_compl_hist_w > 0) then
						select	max(nr_sequencia)
						into STRICT	nr_seq_nota_fiscal_w
						from	nota_fiscal
						where	nr_seq_mensalidade	= nr_seq_mensalidade_w;

						if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
							select	max(nr_nota_fiscal)
							into STRICT	nr_nota_fiscal_w
							from	nota_fiscal
							where	nr_sequencia	= nr_seq_nota_fiscal_w;

							nr_nota_fiscal_w	:= somente_numero(nr_nota_fiscal_w);
						end if;

						if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
							begin
							select	ds_razao_social
							into STRICT	nm_pagador_w
							from	pessoa_juridica
							where	cd_cgc	= cd_cgc_w;
							exception
							when others then
								nm_pagador_w	:= null;
							end;
						elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
							begin
							select	nm_pessoa_fisica
							into STRICT	nm_pagador_w
							from	pessoa_fisica
							where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
							exception
							when others then
								nm_pagador_w	:= null;
							end;
						else
							select (select x.nm_pessoa_fisica
								from	pessoa_fisica x
								where	x.cd_pessoa_fisica	= a.cd_pessoa_fisica
								
union all

								select	y.ds_razao_social
								from	pessoa_juridica y
								where	y.cd_cgc	= a.cd_cgc)
							into STRICT	nm_pagador_w
							from	pls_contrato_pagador a
							where	a.nr_sequencia	= nr_seq_pagador_w;
						end if;
					
						if (coalesce(nr_seq_vinculo_sca_w,0) > 0) then
							select	max(c.ds_classificacao)
							into STRICT	ds_classif_sca_w
							from	pls_sca_classificacao	c,
								pls_sca_vinculo		b,
								pls_plano		a
							where	a.nr_sequencia	= b.nr_seq_plano
							and	c.nr_sequencia	= a.nr_seq_classificacao
							and	b.nr_sequencia	= nr_seq_vinculo_sca_w;
						end if;

						if (coalesce(nr_seq_esquema_w,0) > 0) then
							select	max(b.ds_grupo)	
							into STRICT	ds_grupo_w
							from	pls_contab_mov_mens_lote	b,
								pls_esquema_contabil		a
							where	b.nr_sequencia	= a.nr_seq_movimentacao
							and	a.nr_sequencia	= nr_seq_esquema_w;
						end if;
					
						begin
						nr_nfe_imp_w	:= substr(obter_dados_titulo_receber(nr_titulo_w,'NE'),1,100);
						exception
						when others then
							nr_nfe_imp_w	:= null;
						end;
					
						ds_conteudo_w	:= substr(	nr_nota_fiscal_w		||'#@'||
										cd_cgc_pagador_w		||'#@'||
										cd_pf_pagador_w			||'#@'||
										nr_titulo_w			||'#@'||
										nm_pagador_w			||'#@'||
										nr_seq_lote_mensalidade_w	||'#@'||
										nr_seq_regra_w			||'#@'||
										dt_referencia_lote_w		||'#@'||
										ds_item_w			||'#@'||
										ds_classif_sca_w		||'#@'||
										ds_grupo_w			||'#@'||
										nr_seq_mensalidade_w		||'#@'||
										nr_nfe_imp_w,1,4000);
					
						begin
						ds_compl_historico_ww	:= obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w);
						exception
						when others then
							ds_compl_historico_ww	:= null;
						end;
					
						ds_compl_historico_w	:= substr(ds_compl_historico_ww, 1, 255);
					end if;
				end if;
			
				if (vl_antecipacao_w <> 0) then
					if (cd_conta_antecip_w IS NOT NULL AND cd_conta_antecip_w::text <> '') then
						/* If there is account plan change in the month, use the new accounts on the reversion of anticipationof the monthly fee pro-rata day */

						if (nr_seq_troca_plano_contas_w IS NOT NULL AND nr_seq_troca_plano_contas_w::text <> '') then
							select	max(cd_conta_destino)
							into STRICT	cd_cta_contabil_troca_plano_w
							from	ctb_troca_plano_conta
							where	nr_seq_troca	= nr_seq_troca_plano_contas_w
							and	cd_conta_origem	= cd_conta_antecip_w;
							
							if (cd_cta_contabil_troca_plano_w IS NOT NULL AND cd_cta_contabil_troca_plano_w::text <> '') then
								cd_conta_antecip_w	:= cd_cta_contabil_troca_plano_w;
							end if;
						end if;
					
						nm_atributo_w		:= 'VL_ANTECIPACAO';
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nr_vetor_w		:= nr_vetor_w + 1;
						w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
						w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
						w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_antecip_w;
						w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= 'D';
						w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
						w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
						w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_antecipacao_w;
						w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
						w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
						w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
						w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
					
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;
					
						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_antecipacao_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							'C',
							CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE '' END ,
							null,
							'S',
							cd_tipo_lote_contabil_w);
					end if;
				
					/* Credit the usual credit accounting account */

					if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil = cd_conta_contabil_w;
					
						if (coalesce(ie_centro_custo_w,'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
					
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
					
						/* If there is account plan change in the month, use the new accounts on the reversion of anticipationof the monthly fee pro-rata day  */

						if (nr_seq_troca_plano_contas_w IS NOT NULL AND nr_seq_troca_plano_contas_w::text <> '') then
							select	max(cd_conta_destino)
							into STRICT	cd_cta_contabil_troca_plano_w
							from	ctb_troca_plano_conta
							where	nr_seq_troca	= nr_seq_troca_plano_contas_w
							and	cd_conta_origem	= cd_conta_contabil_w;
						
							if (cd_cta_contabil_troca_plano_w IS NOT NULL AND cd_cta_contabil_troca_plano_w::text <> '') then
								cd_conta_contabil_w	:= cd_cta_contabil_troca_plano_w;
							end if;
						end if;
					
						nm_atributo_w		:= 'VL_ANTECIPACAO';
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nr_vetor_w		:= nr_vetor_w + 1;
						w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
						w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
						w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_contabil_w;
						w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= 'C';
						w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
						w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
						w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_antecipacao_w;
						w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
						w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
						w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
						w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;

						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_antecipacao_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							'C',
							CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE '' END ,
							null,
							'N',
							cd_tipo_lote_contabil_w);
					end if;
				
					cd_centro_custo_w	:= null;
					nr_seq_regra_cc_w	:= null;
				end if;

				/*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////COOPERATIVE ACT\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

				qt_ato_cooperado_w	:= 0;
				
				if (cd_conta_ato_cooperado_w IS NOT NULL AND cd_conta_ato_cooperado_w::text <> '') or (cd_conta_ato_auxiliar_w IS NOT NULL AND cd_conta_ato_auxiliar_w::text <> '') or (cd_conta_ato_nao_coop_w IS NOT NULL AND cd_conta_ato_nao_coop_w::text <> '') then
					qt_ato_cooperado_w	:= 1;
				end if;
			
				ie_deb_rec_ato_cooperado_w	:= null;
			
				if (qt_ato_cooperado_w > 0) then
					if (coalesce(cd_conta_rec_w::text, '') = '') then
						ie_deb_rec_ato_cooperado_w	:= 'C';
					elsif (coalesce(cd_conta_deb_w::text, '') = '') then
						ie_deb_rec_ato_cooperado_w	:= 'D';
					end if;
				end if;

				if	(qt_ato_cooperado_w > 0 AND ie_deb_rec_ato_cooperado_w = 'C') then
					/*			MAIN COOPERATIVE ACT			*/

					if (vl_ato_cooperado_antec_w <> 0) then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_ato_cooperado_w;

						if (coalesce(ie_centro_custo_w, 'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
					
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
					
						if (cd_conta_ato_cooperado_w IS NOT NULL AND cd_conta_ato_cooperado_w::text <> '') then
						/* If there is account plan change in the month, use the new accounts on the reversion of anticipationof the monthly fee pro-rata day  */

							if (nr_seq_troca_plano_contas_w IS NOT NULL AND nr_seq_troca_plano_contas_w::text <> '') then
								select	max(cd_conta_destino)
								into STRICT	cd_cta_contabil_troca_plano_w
								from	ctb_troca_plano_conta
								where	nr_seq_troca	= nr_seq_troca_plano_contas_w
								and	cd_conta_origem	= cd_conta_ato_cooperado_w;
								
								if (cd_cta_contabil_troca_plano_w IS NOT NULL AND cd_cta_contabil_troca_plano_w::text <> '') then
									cd_conta_ato_cooperado_w	:= cd_cta_contabil_troca_plano_w;
								end if;
							end if;
						
							nm_atributo_w		:= 'VL_ATO_COOPERADO_ANTEC';
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
							
							nr_vetor_w		:= nr_vetor_w + 1;
							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_ato_cooperado_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= 'C';
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_ato_cooperado_antec_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;
						
							insert into w_pls_movimento_sem_conta(nr_sequencia,
								cd_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w,
								ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_ato_cooperado_antec_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								'C',
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE obter_desc_expressao(330393) END ,
								'1',
								'N',
								cd_tipo_lote_contabil_w);
						end if;
					
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					end if;
				
					/*			AUXILIARY COOPERATIVE ACT			*/

					if (vl_ato_auxiliar_antec_w <> 0) then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_ato_auxiliar_w;
					
						if (coalesce(ie_centro_custo_w, 'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
					
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;

						if (cd_conta_ato_auxiliar_w IS NOT NULL AND cd_conta_ato_auxiliar_w::text <> '') then
						/* If there is account plan change in the month, use the new accounts on the reversion of anticipationof the monthly fee pro-rata day  */

							if (nr_seq_troca_plano_contas_w IS NOT NULL AND nr_seq_troca_plano_contas_w::text <> '') then
								select	max(cd_conta_destino)
								into STRICT	cd_cta_contabil_troca_plano_w
								from	ctb_troca_plano_conta
								where	nr_seq_troca	= nr_seq_troca_plano_contas_w
								and	cd_conta_origem	= cd_conta_ato_auxiliar_w;
								
								if (cd_cta_contabil_troca_plano_w IS NOT NULL AND cd_cta_contabil_troca_plano_w::text <> '') then
									cd_conta_ato_auxiliar_w	:= cd_cta_contabil_troca_plano_w;
								end if;
							end if;
					
							nm_atributo_w		:= 'VL_ATO_AUXILIAR_ANTEC';
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
							
							nr_vetor_w		:= nr_vetor_w + 1;
							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_ato_auxiliar_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= 'C';
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_ato_auxiliar_antec_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;
						
							insert into w_pls_movimento_sem_conta(nr_sequencia,
								cd_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w,
								ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_ato_auxiliar_antec_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								'C',
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE obter_desc_expressao(342552) END ,
								'2',
								'N',
								cd_tipo_lote_contabil_w);
						end if;

						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					end if;
				
					/*			NON COOPERATIVE ACT 			*/

					if (vl_ato_nao_coop_antec_w <> 0) then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil = cd_conta_ato_nao_coop_w;

						if (coalesce(ie_centro_custo_w,'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
					
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;

						if (cd_conta_ato_nao_coop_w IS NOT NULL AND cd_conta_ato_nao_coop_w::text <> '') then
							/* If there is account plan change in the month, use the new accounts on the reversion of anticipationof the monthly fee pro-rata day  */

							if (nr_seq_troca_plano_contas_w IS NOT NULL AND nr_seq_troca_plano_contas_w::text <> '') then
								select	max(cd_conta_destino)
								into STRICT	cd_cta_contabil_troca_plano_w
								from	ctb_troca_plano_conta
								where	nr_seq_troca	= nr_seq_troca_plano_contas_w
								and	cd_conta_origem	= cd_conta_ato_nao_coop_w;
								
								if (cd_cta_contabil_troca_plano_w IS NOT NULL AND cd_cta_contabil_troca_plano_w::text <> '') then
									cd_conta_ato_nao_coop_w	:= cd_cta_contabil_troca_plano_w;
								end if;
							end if;
							
							nm_atributo_w		:= 'VL_ATO_NAO_COOP_ANTEC';
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;

							nr_vetor_w		:= nr_vetor_w + 1;
							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_ato_nao_coop_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= 'C';
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_ato_nao_coop_antec_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;
							
							insert into w_pls_movimento_sem_conta(nr_sequencia, cd_item, ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w,
								ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_ato_nao_coop_antec_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								'C',
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE obter_desc_expressao(342553) END ,
								'3',
								'N',
								cd_tipo_lote_contabil_w);
						end if;
					
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					end if;
				end if;
			end if;
			
			if (nr_vetor_w >= 1000) then
				forall m in w_movto_contabil_w.first..w_movto_contabil_w.last
					insert into w_movimento_contabil values w_movto_contabil_w(m);
				
				nr_vetor_w	:= 0;
				w_movto_contabil_w.delete;
				
				commit;
			end if;
			end;
		end loop;
	end loop;
	--end loop;
	
	if (nr_vetor_w > 0) then
		forall m in w_movto_contabil_w.first..w_movto_contabil_w.last
			insert into w_movimento_contabil values w_movto_contabil_w(m);
		
		nr_vetor_w	:= 0;
		w_movto_contabil_w.delete;
			
		commit;
	end if;
	
	cd_conta_rec_w	:= null;
	cd_conta_deb_w	:= null;
	
	/* Account the monthly fee */

	open c02;
	loop
	fetch C02 bulk collect into s_array limit 1000;
		Vetor_c02_w(i) := s_array;
		i := i + 1;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;
	
	for i in 1..Vetor_c02_w.count loop
		s_array := Vetor_c02_w(i);
		for z in 1..s_array.count loop
			begin
			ie_debito_credito_w		:= s_array[z].ie_debito_credito;
			ie_devolucao_w			:= s_array[z].ie_devolucao;
			vl_cancelar_w			:= s_array[z].vl_cancelar;
			vl_devolver_w			:= s_array[z].vl_devolver;
			cd_historico_devolucao_w	:= s_array[z].cd_historico_devolucao;
			ie_tipo_valor_w			:= s_array[z].ie_tipo_valor;
			cd_conta_contabil_w		:= s_array[z].cd_conta_contabil;
			cd_conta_antecip_w		:= s_array[z].cd_conta_antecip;
			cd_conta_canc_w			:= s_array[z].cd_conta_canc;
			cd_conta_dev_w			:= s_array[z].cd_conta_dev;
			cd_conta_deb_antecip_w		:= s_array[z].cd_conta_deb_antecip;
			vl_contabil_w			:= s_array[z].vl_contabil;
			vl_pro_rata_dia_w		:= s_array[z].vl_pro_rata_dia;
			vl_antecipacao_w		:= s_array[z].vl_antecipacao;
			cd_historico_w			:= s_array[z].cd_historico;
			nr_seq_item_w			:= s_array[z].nr_seq_item;
			ds_item_w			:= s_array[z].ds_item;
			nr_seq_regra_w			:= s_array[z].nr_seq_regra;
			ie_tipo_item_w			:= s_array[z].ie_tipo_item;
			ie_tipo_segurado_w		:= s_array[z].ie_tipo_segurado;
			ie_tipo_contratacao_w		:= s_array[z].ie_tipo_contratacao;
			nr_seq_copartic_w		:= s_array[z].nr_seq_copartic;
			nr_lote_contab_antecip_w	:= s_array[z].nr_lote_contab_antecip_item;
			ie_cancelamento_w		:= s_array[z].ie_cancelamento;
			nr_lote_contab_antecip_ww	:= s_array[z].nr_lote_contab_antecip;
			cd_centro_custo_w		:= s_array[z].cd_centro_custo;
			nr_seq_lote_mensalidade_w	:= s_array[z].nr_seq_lote_mensalidade;
			nr_seq_mensalidade_w		:= s_array[z].nr_seq_mensalidade;
			ie_mensalidade_mes_anterior_w	:= s_array[z].ie_mensalidade_mes_anterior;
			cd_conta_ato_cooperado_w	:= s_array[z].cd_conta_ato_cooperado;
			cd_conta_ato_auxiliar_w		:= s_array[z].cd_conta_ato_auxiliar;
			cd_conta_ato_nao_coop_w		:= s_array[z].cd_conta_ato_nao_coop;
			vl_ato_cooperado_princ_w	:= s_array[z].vl_ato_cooperado;
			vl_ato_cooperado_aux_w		:= s_array[z].vl_ato_auxiliar;
			vl_ato_nao_cooperado_w		:= s_array[z].vl_ato_nao_cooperado;
			nr_seq_tipo_lanc_w		:= s_array[z].nr_seq_tipo_lanc;
			nr_seq_pagador_w		:= s_array[z].nr_seq_pagador;
			nr_seq_esquema_w		:= s_array[z].nr_seq_esquema;
			vl_ato_cooperado_pro_rata_w	:= s_array[z].vl_ato_cooperado_pro_rata;
			vl_ato_auxiliar_pro_rata_w	:= s_array[z].vl_ato_auxiliar_pro_rata;
			vl_ato_nao_coop_pro_rata_w	:= s_array[z].vl_ato_nao_coop_pro_rata;
			dt_referencia_lote_w		:= s_array[z].dt_referencia_lote;
			nr_seq_vinculo_sca_w		:= s_array[z].nr_seq_vinculo_sca;
			cd_conta_contabil_rec_antec_w	:= s_array[z].cd_conta_contabil_rec_antec;
			dt_referencia_mens_w		:= s_array[z].dt_referencia;
			dt_inicio_cobertura_w		:= s_array[z].dt_inicio_cobertura;
			nm_tabela_w			:= s_array[z].nm_tabela;
			nm_atributo_w			:= s_array[z].nm_atributo;
			cd_conta_rec_w			:= s_array[z].cd_conta_rec;
			cd_conta_deb_w			:= s_array[z].cd_conta_deb;
			nr_seq_info_ctb_w		:= s_array[z].nr_seq_info_ctb;
			nr_seq_item_cancel_w		:= s_array[z].nr_seq_item_cancel;
			qt_devolucao_w			:= s_array[z].qt_devolucao;
			
			cd_centro_custo_ww		:= cd_centro_custo_w;
			nm_pagador_w			:= null;
			ds_compl_historico_w		:= null;
			ds_compl_historico_devol_w 	:= null;
			cd_pessoa_fisica_w		:= null;
			cd_cgc_w			:= null;
			nr_seq_nota_fiscal_w		:= null;
			nr_nota_fiscal_w		:= null;
			
			select	min(nr_titulo)
			into STRICT	nr_titulo_w
			from	titulo_receber
			where	nr_seq_mensalidade	= nr_seq_mensalidade_w;
			
			if (coalesce(nr_titulo_w,0) = 0) then
				begin
				
				select	max(nr_titulo)
				into STRICT	nr_titulo_w
				from	titulo_receber d,
					pls_mensalidade c,
					pls_mensalidade_segurado b,
					pls_mensalidade_seg_item a
				where	d.nr_seq_mensalidade = c.nr_sequencia
				and	c.nr_sequencia = b.nr_seq_mensalidade
				and	b.nr_sequencia = a.nr_seq_mensalidade_seg
				and	a.nr_sequencia = nr_seq_item_cancel_w;
				
				end;
			end if;	
			
			if (coalesce(nr_titulo_w,0) > 0) then
				select	max(dt_liquidacao),
					max(cd_pessoa_fisica),
					max(cd_cgc),
					max(vl_titulo)
				into STRICT	dt_liquidacao_titulo_w,
					cd_pessoa_fisica_w,
					cd_cgc_w,
					vl_titulo_w
				from	titulo_receber
				where	nr_titulo	= nr_titulo_w;
			end if;
			
			if (ie_esquema_contabil_w = 'S') then
				if (coalesce(nr_seq_esquema_w,0) = 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(220652, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
											'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w);
				end if;
			elsif (ie_esquema_contabil_w = 'N') then
				if (coalesce(nr_seq_regra_w,0) = 0) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(220722, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
											'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w);
				end if;
			end if;
			
			if (coalesce(cd_historico_w::text, '') = '') then
				if (ie_esquema_contabil_w = 'S') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(220653, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
											'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w || ';' ||
											'NR_SEQ_ESQUEMA=' || nr_seq_esquema_w);
				elsif (ie_esquema_contabil_w = 'N') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(184666, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
											'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w || ';' ||
											'NR_SEQ_REGRA=' || nr_seq_regra_w);
				end if;
			else
				/*Lepinski - OS - Improve performance. Verify if the default history has a history complement for this accounting batch. Otherwise doesn't call the procedure to obtain the complement */

				select	count(1)
				into STRICT	qt_compl_hist_w
				from	historico_padrao_atributo
				where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
				and	cd_historico		= cd_historico_w  LIMIT 1;

				if (qt_compl_hist_w > 0) then
					select	max(nr_sequencia)
					into STRICT	nr_seq_nota_fiscal_w
					from	nota_fiscal
					where	nr_seq_mensalidade	= nr_seq_mensalidade_w;
					
					if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
						select	max(nr_nota_fiscal)
						into STRICT	nr_nota_fiscal_w
						from	nota_fiscal
						where	nr_sequencia	= nr_seq_nota_fiscal_w;
						
						nr_nota_fiscal_w	:= somente_numero(nr_nota_fiscal_w);
					end if;
					
					if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
						begin
						select	ds_razao_social
						into STRICT	nm_pagador_w
						from	pessoa_juridica
						where	cd_cgc	= cd_cgc_w;
						exception
						when others then
							nm_pagador_w	:= null;
						end;
					elsif (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
						begin
						select	nm_pessoa_fisica
						into STRICT	nm_pagador_w
						from	pessoa_fisica
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
						exception
						when others then
							nm_pagador_w	:= null;
						end;
					else
						select (select x.nm_pessoa_fisica
							from	pessoa_fisica x
							where	x.cd_pessoa_fisica = a.cd_pessoa_fisica
							
union all

							select	y.ds_razao_social
							from	pessoa_juridica y
							where	y.cd_cgc	= a.cd_cgc)
						into STRICT	nm_pagador_w
						from	pls_contrato_pagador a
						where	a.nr_sequencia	= nr_seq_pagador_w;
					end if;
					
					if (coalesce(nr_seq_vinculo_sca_w,0) > 0) then
						select	max(c.ds_classificacao)
						into STRICT	ds_classif_sca_w
						from	pls_sca_classificacao	c,
							pls_sca_vinculo		b,
							pls_plano		a
						where	a.nr_sequencia	= b.nr_seq_plano
						and	c.nr_sequencia	= a.nr_seq_classificacao
						and	b.nr_sequencia	= nr_seq_vinculo_sca_w;
					end if;
					
					if (coalesce(nr_seq_esquema_w,0) > 0) then
						select	max(b.ds_grupo)	
						into STRICT	ds_grupo_w
						from	pls_contab_mov_mens_lote	b,
							pls_esquema_contabil		a
						where	b.nr_sequencia	= a.nr_seq_movimentacao
						and	a.nr_sequencia	= nr_seq_esquema_w;
					end if;
					
					begin
					nr_nfe_imp_w	:= substr(obter_dados_titulo_receber(nr_titulo_w,'NE'),1,100);
					exception
					when others then
						nr_nfe_imp_w	:= null;
					end;
					
					ds_conteudo_w	:= substr(	nr_nota_fiscal_w		||'#@'||
									cd_cgc_pagador_w		||'#@'||
									cd_pf_pagador_w			||'#@'||
									nr_titulo_w			||'#@'||
									nm_pagador_w			||'#@'||
									nr_seq_lote_mensalidade_w	||'#@'||
									nr_seq_regra_w			||'#@'||
									dt_referencia_lote_w		||'#@'||
									ds_item_w			||'#@'||
									ds_classif_sca_w		||'#@'||
									ds_grupo_w			||'#@'||
									nr_nfe_imp_w,1,4000);
					

					begin
					ds_compl_historico_ww	:= obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w);
					exception
					when others then
						ds_compl_historico_ww	:= null;
					end;
					
					if (cd_historico_devolucao_w IS NOT NULL AND cd_historico_devolucao_w::text <> '') then
						ds_conteudo_devolucao_w	:= substr(	nr_nota_fiscal_w		||'#@'||
											cd_cgc_pagador_w		||'#@'||
											cd_pf_pagador_w			||'#@'||
											nr_titulo_w			||'#@'||
											nm_pagador_w			||'#@'||
											nr_seq_lote_mensalidade_w	||'#@'||
											nr_seq_regra_w			||'#@'||
											dt_referencia_lote_w		||'#@'||
											ds_item_w			||'#@'||
											ds_classif_sca_w		||'#@'||
											ds_grupo_w			||'#@'||
											nr_nfe_imp_w,1,4000);
					
						begin
						ds_compl_historico_devol_ww	:= obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_devolucao_w, ds_conteudo_devolucao_w);
						exception
						when others then
							ds_compl_historico_devol_ww	:= null;
						end;
					end if;
				
					ds_compl_historico_w		:= substr(ds_compl_historico_ww,1,255);
					ds_compl_historico_devol_w	:= substr(ds_compl_historico_devol_ww, 1, 255);

				end if;
			end if;
			
			if (ie_mensalidade_mes_anterior_w = 'S') then
				dt_referencia_mov_w := dt_referencia_lote_w;
			elsif (trunc(dt_referencia_mens_w,'month') <> trunc(dt_referencia_lote_w,'month'))then
				dt_referencia_mov_w	:= dt_referencia_mens_w;
			else
				dt_referencia_mov_w	:= dt_referencia_mens_w;
			end if;

			/* Lepinski - OS 456905 - Define the accounting grouper */

			if (nm_agrupador_w = 'NR_SEQ_LOTE') then
				nr_seq_agrupamento_w	:= nr_seq_lote_mensalidade_w;
			elsif (nm_agrupador_w = 'NR_SEQ_PAGADOR') then
				nr_seq_agrupamento_w	:= nr_seq_pagador_w;
			elsif (nm_agrupador_w = 'NR_TITULO') then
				nr_seq_agrupamento_w	:= nr_titulo_w;
			elsif (nm_agrupador_w = 'IE_TIPO_ITEM') then
				nr_seq_agrupamento_w	:= ie_tipo_item_w;
			elsif (ie_tipo_item_w	= '20') then
				nr_seq_agrupamento_w	:= nr_seq_tipo_lanc_w;
			elsif (ie_tipo_item_w = '3') then
				nr_seq_agrupamento_w	:= nr_seq_copartic_w;
			else
				nr_seq_agrupamento_w	:= null;
			end if;
			
			if (coalesce(nr_seq_agrupamento_w,0) = 0)then
				nr_seq_agrupamento_w := nr_seq_lote_mensalidade_w;
			end if;
			
			if (coalesce(nr_lote_contab_antecip_ww,0) <> 0) then
				if (nr_lote_contab_antecip_ww = nr_lote_contabil_p) then
					cd_conta_contabil_w	:= cd_conta_antecip_w;
				elsif (nr_lote_contab_antecip_ww <> nr_lote_contabil_p) then
					cd_conta_contabil_w	:= cd_conta_deb_antecip_w;
				end if;
			end if;

			if (ie_cancelamento_w = 'E') then /* According to Adriano in 26-aug-2008, the reversal must be accounted for backwards if it is coparticipation*/
				if (coalesce(ie_esquema_contabil_w,'N') = 'S') then
					select	max(cd_historico_estorno),
						CASE WHEN max(ie_status_mensalidade)='C' THEN 'N'  ELSE 'S' END
					into STRICT	cd_historico_w,
						ie_somente_inverte_estorno_w
					from	pls_esquema_contabil
					where	nr_sequencia	= nr_seq_esquema_w;
					
					if (coalesce(cd_historico_w::text, '') = '') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(204229, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
												'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w || ';' ||
												'NR_SEQ_ESQUEMA=' || nr_seq_esquema_w);
					end if;
				else
					select	max(cd_conta_estorno),
						max(cd_historico_estorno),
						CASE WHEN max(cd_conta_contabil)=max(cd_conta_estorno) THEN 'S'  ELSE 'N' END  -- OS 469540
					into STRICT	cd_conta_contabil_w,
						cd_historico_w,
						ie_somente_inverte_estorno_w
					from	pls_regra_ctb_mensal
					where	nr_sequencia	= nr_seq_regra_w;

					if (coalesce(cd_historico_w::text, '') = '') then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(204230, 'NR_SEQ_PAGADOR=' || nr_seq_pagador_w || ';' ||
												'NR_SEQ_LOTE=' || nr_seq_lote_mensalidade_w || ';' ||
												'NR_SEQ_REGRA=' || nr_seq_regra_w);
					end if;
				end if;
				
				if (ie_tipo_valor_w in ('C','P')) or
					(vl_contabil_w > 0 AND ie_somente_inverte_estorno_w = 'N') then /* Lepinski - OS 439223 - When the reversal is bigger than zero, it is because the item was negativeand the procedure agrupa_movimento_contabil reversed the item debit and credit, therefore we have to reverse it again on the reversal */
					if (ie_debito_credito_w = 'C') then
						ie_debito_credito_w	:= 'D';
					elsif (ie_debito_credito_w = 'D') then
						ie_debito_credito_w	:= 'C';
					end if;
				end if;
			end if;
			
			select	count(1)
			into STRICT	qt_pro_rata_regra_w
			from	pls_regra_pro_rata_dia
			where	ie_tipo_item_mensalidade	= ie_tipo_item_w  LIMIT 1;
			
				/* Lepinski - OS 357008 - Field created to identify when the monthly fee was generated within the mouse option "Generate monthly for past months" 
				On this case, the value is accounted fully on the reference month for the batch of monthly fees */
			if (ie_mensalidade_mes_anterior_w = 'S') then
				qt_pro_rata_regra_w	:= 0;
			end if;
			
			if (vl_titulo_w = 0) and (ie_recebimento_antec_passivo_w = 'S') and (ie_debito_credito_w = 'D') then
				cd_conta_antecip_w	:= cd_conta_contabil_rec_antec_w;
			end if;
			
			if (ie_devolucao_w = 'N') then
				/* Account the anticipation for the types pre-established and non-subsidied pre-established */

				if (ie_debito_credito_w = 'C') and (qt_pro_rata_regra_w > 0) then
					vl_contabil_ww 			:= vl_contabil_w;
					vl_contabil_w			:= coalesce(vl_pro_rata_dia_w,0);
					nm_atributo_w			:= 'VL_PRO_RATA_DIA';
					vl_ato_cooperado_princ_w	:= vl_ato_cooperado_pro_rata_w;
					vl_ato_cooperado_aux_w		:= vl_ato_auxiliar_pro_rata_w;
					vl_ato_nao_cooperado_w		:= vl_ato_nao_coop_pro_rata_w;
					
					if (coalesce(vl_antecipacao_w,0) <> 0) then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_antecip_w;
						
						if (coalesce(ie_centro_custo_w,'N') = 'N') then
							cd_centro_custo_w	:= null;
						end if;
						
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
						
						if (cd_conta_antecip_w IS NOT NULL AND cd_conta_antecip_w::text <> '') then
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
							
							nr_vetor_w		:= nr_vetor_w + 1;

							/* If the devolution of the item is accounted for, accounts the accounting value in fully as anticipation, otherwise accounts the anticipation value.
							Verified that the accounting must be done this way in connection with Claudinei from HMCC. 29-oct-2019*/
							if (qt_devolucao_w > 0) then
								w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_contabil_ww;
							else
								w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_antecipacao_w;
							end if;

							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_antecip_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= ie_debito_credito_w;
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= 'VL_ANTECIPACAO';
							
							cd_centro_custo_w	:= null;
							nr_seq_regra_cc_w	:= null;
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;

							insert into w_pls_movimento_sem_conta(nr_sequencia,
								cd_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w, ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_contabil_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								ie_debito_credito_w,
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE '' END ,
								null,
								'S',
								cd_tipo_lote_contabil_w);
						end if;
					end if;

					/* If the devolution is accounted for the item, it is necessary to account the pro-rata day value as debit too. 
					Verified that the accounting must be done this way in connection with Claduinei from HMCC. 29-Oct-2019 */
					if (qt_devolucao_w > 0 and coalesce(vl_antecipacao_w,0) <> 0) then

						vl_contabil_w			:= coalesce(vl_pro_rata_dia_w,0);

						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_antecip_w;
						
						if (coalesce(ie_centro_custo_w,'N') = 'N') then
							cd_centro_custo_w	:= null;
						end if;
						
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
						
						if (cd_conta_antecip_w IS NOT NULL AND cd_conta_antecip_w::text <> '') then
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
							
							nr_vetor_w		:= nr_vetor_w + 1;

							w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_contabil_w;

							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_antecip_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= 'D';
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= 'VL_PRO_RATA_DIA';
							
							cd_centro_custo_w	:= null;
							nr_seq_regra_cc_w	:= null;
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;

							insert into w_pls_movimento_sem_conta(nr_sequencia,
								cd_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w, ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_contabil_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								'D',
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE '' END ,
								null,
								'N',
								cd_tipo_lote_contabil_w);
						end if;
					end if;
				end if;

				qt_ato_cooperado_w	:= 0;
				
				if (cd_conta_ato_cooperado_w IS NOT NULL AND cd_conta_ato_cooperado_w::text <> '') or (cd_conta_ato_auxiliar_w IS NOT NULL AND cd_conta_ato_auxiliar_w::text <> '') or (cd_conta_ato_nao_coop_w IS NOT NULL AND cd_conta_ato_nao_coop_w::text <> '') then
					qt_ato_cooperado_w	:= 1;
				end if;
			
				ie_deb_rec_ato_cooperado_w	:= null;
			
				if (qt_ato_cooperado_w > 0) then
					if (coalesce(cd_conta_rec_w::text, '') = '') then
						ie_deb_rec_ato_cooperado_w	:= 'C';
					elsif (coalesce(cd_conta_deb_w::text, '') = '') then
						ie_deb_rec_ato_cooperado_w	:= 'D';
					end if;
				end if;

				if	(qt_ato_cooperado_w > 0 AND ie_debito_credito_w = ie_deb_rec_ato_cooperado_w) then
					/*			MAIN COOPERATIVE ACT			*/

					if (vl_ato_cooperado_princ_w <> 0) then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil = cd_conta_ato_cooperado_w;
						
						if (coalesce(ie_centro_custo_w,'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
						
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
						
						if (cd_conta_ato_cooperado_w IS NOT NULL AND cd_conta_ato_cooperado_w::text <> '') then
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
							
							nr_vetor_w		:= nr_vetor_w + 1;
							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_ato_cooperado_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= ie_debito_credito_w;
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_ato_cooperado_princ_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= 'VL_ATO_COOPERADO';
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;
							
							insert into w_pls_movimento_sem_conta(nr_sequencia,
								cd_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w,
								ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_ato_cooperado_princ_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								'C',
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241) WHEN ie_tipo_valor_w='P' THEN  obter_desc_expressao(342550)  ELSE obter_desc_expressao(330393) END ,
								'1',
								'N',
								cd_tipo_lote_contabil_w);
						end if;
						
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					end if;
					
					/*			AUXILIARY COOPERATIVE ACT			*/

					if (vl_ato_cooperado_aux_w <> 0) then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_ato_auxiliar_w;
						
						if (coalesce(ie_centro_custo_w,'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
						
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
						
						if (cd_conta_ato_auxiliar_w IS NOT NULL AND cd_conta_ato_auxiliar_w::text <> '') then
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
							
							nr_vetor_w		:= nr_vetor_w + 1;
							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_ato_auxiliar_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= ie_debito_credito_w;
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_ato_cooperado_aux_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= 'VL_ATO_AUXILIAR';
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;
							
							insert into w_pls_movimento_sem_conta(nr_sequencia,
								cd_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w,
								ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_ato_cooperado_aux_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								'C',
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241) WHEN ie_tipo_valor_w='P' THEN  obter_desc_expressao(342550)  ELSE obter_desc_expressao(342552) END ,
								'2',
								'N',
								cd_tipo_lote_contabil_w);
						end if;
						
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					end if;
					
					/*			NON COOPERATIVE ACT 			*/

					if (vl_ato_nao_cooperado_w <> 0) then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil = cd_conta_ato_nao_coop_w;
						
						if (coalesce(ie_centro_custo_w,'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
						
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
						
						if (cd_conta_ato_nao_coop_w IS NOT NULL AND cd_conta_ato_nao_coop_w::text <> '') then
							nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
							
							nr_vetor_w		:= nr_vetor_w + 1;
							w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
							w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
							w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_ato_nao_coop_w;
							w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= ie_debito_credito_w;
							w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
							w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
							w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_ato_nao_cooperado_w;
							w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
							w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
							w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
							w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
							w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
							w_movto_contabil_w[nr_vetor_w].nm_atributo		:= 'VL_ATO_NAO_COOPERADO';
						else
							select	nextval('w_pls_movimento_sem_conta_seq')
							into STRICT	nr_seq_movimento_sem_conta_w
							;
							
							insert into w_pls_movimento_sem_conta(nr_sequencia,
								cd_item,
								ds_item,
								ie_tipo_item,
								dt_atualizacao,
								nm_usuario,
								vl_item,
								dt_referencia,
								nr_lote_contabil,
								ie_proc_mat_item,
								ie_deb_cred,
								ds_observacao,
								ie_tipo_ato_cooperado,
								ie_conta_antecipacao,
								cd_tipo_lote_contabil)
							values (nr_seq_movimento_sem_conta_w,
								nr_seq_item_w,
								ds_item_w,
								'M',
								clock_timestamp(),
								nm_usuario_p,
								vl_ato_nao_cooperado_w,
								dt_referencia_w,
								nr_lote_contabil_w,
								null,
								'C',
								CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241) WHEN ie_tipo_valor_w='P' THEN  obter_desc_expressao(342550)  ELSE obter_desc_expressao(342553) END ,
								'3',
								'N',
								cd_tipo_lote_contabil_w);
						end if;
						
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					end if;
				else
					if (cd_conta_contabil_w IS NOT NULL AND cd_conta_contabil_w::text <> '') then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_contabil_w;
						
						if (coalesce(ie_centro_custo_w, 'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
						
						if	((ie_centro_custo_w = 'S') and (coalesce(cd_centro_custo_w::text, '') = '')) then
							cd_centro_custo_w	:= cd_centro_custo_item_w;
						end if;
						
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nr_vetor_w		:= nr_vetor_w + 1;
						w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
						w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
						w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_contabil_w;
						w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= ie_debito_credito_w;
						w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_w;
						w_movto_contabil_w[nr_vetor_w].dt_movimento		:= dt_referencia_mov_w;
						w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_contabil_w;
						w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
						w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
						w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
						w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
						
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;

						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_contabil_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							ie_debito_credito_w,
							CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE '' END ,
							null,
							'N',
							cd_tipo_lote_contabil_w);
					end if;
				end if;
			else -- ie_devolucao = 'S'
				if (vl_cancelar_w	<> 0) then
					nm_atributo_w	:= 'VL_CANCELAR';
					
					if (cd_conta_canc_w IS NOT NULL AND cd_conta_canc_w::text <> '') then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_canc_w;
						
						if (coalesce(ie_centro_custo_w, 'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
						
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nr_vetor_w		:= nr_vetor_w + 1;
						w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
						w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
						w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_canc_w;
						w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= ie_debito_credito_w;
						w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_devolucao_w;
						w_movto_contabil_w[nr_vetor_w].dt_movimento  		:= dt_referencia_mov_w;
						w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_cancelar_w;
						w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
						w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
						w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_devol_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
						w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
						
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;

						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_cancelar_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							'C',
							CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE '' END ,
							null,
							'N',
							cd_tipo_lote_contabil_w);
					end if;
				end if;

				if (vl_devolver_w	<> 0) then
					nm_atributo_w	:= 'VL_DEVOLVER';
					
					if (cd_conta_dev_w IS NOT NULL AND cd_conta_dev_w::text <> '') then
						select	max(ie_centro_custo)
						into STRICT	ie_centro_custo_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_dev_w;
						
						if (coalesce(ie_centro_custo_w, 'N') = 'N') then
							cd_centro_custo_w	:= null;
						else
							cd_centro_custo_w	:= cd_centro_custo_ww;
						end if;
						
						nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
						nr_vetor_w		:= nr_vetor_w + 1;
						w_movto_contabil_w[nr_vetor_w].nr_lote_contabil		:= nr_lote_contabil_p;
						w_movto_contabil_w[nr_vetor_w].nr_sequencia		:= nr_seq_w_movto_cont_w;
						w_movto_contabil_w[nr_vetor_w].cd_conta_contabil	:= cd_conta_dev_w;
						w_movto_contabil_w[nr_vetor_w].ie_debito_credito	:= ie_debito_credito_w;
						w_movto_contabil_w[nr_vetor_w].cd_historico		:= cd_historico_devolucao_w;
						w_movto_contabil_w[nr_vetor_w].dt_movimento  		:= dt_referencia_mov_w;
						w_movto_contabil_w[nr_vetor_w].vl_movimento		:= vl_devolver_w;
						w_movto_contabil_w[nr_vetor_w].cd_estabelecimento	:= cd_estabelecimento_w;
						w_movto_contabil_w[nr_vetor_w].cd_centro_custo		:= cd_centro_custo_w;
						w_movto_contabil_w[nr_vetor_w].ds_compl_historico	:= ds_compl_historico_devol_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						w_movto_contabil_w[nr_vetor_w].nm_tabela		:= nm_tabela_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_info		:= nr_seq_info_ctb_w;
						w_movto_contabil_w[nr_vetor_w].nm_atributo		:= nm_atributo_w;
						w_movto_contabil_w[nr_vetor_w].nr_seq_tab_orig		:= nr_seq_item_w;
						
						cd_centro_custo_w	:= null;
						nr_seq_regra_cc_w	:= null;
					else
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_movimento_sem_conta_w
						;

						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							ie_tipo_ato_cooperado,
							ie_conta_antecipacao,
							cd_tipo_lote_contabil)
						values (nr_seq_movimento_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							'M',
							clock_timestamp(),
							nm_usuario_p,
							vl_devolver_w,
							dt_referencia_w,
							nr_lote_contabil_w,
							null,
							'C',
							CASE WHEN ie_tipo_valor_w='C' THEN  obter_desc_expressao(286241)  ELSE '' END ,
							null,
							'N',
							cd_tipo_lote_contabil_w);
					end if;
				end if;
			end if;
			
			if (nr_vetor_w >= 1000) then
				forall m in w_movto_contabil_w.first..w_movto_contabil_w.last
					insert into w_movimento_contabil values w_movto_contabil_w(m);
				
				nr_vetor_w	:= 0;
				w_movto_contabil_w.delete;
				
				commit;
			end if;
			
			end;
		end loop;
	end loop;
	
	if (nr_vetor_w > 0) then
		forall m in w_movto_contabil_w.first..w_movto_contabil_w.last
			insert into w_movimento_contabil values w_movto_contabil_w(m);
		
		nr_vetor_w	:= 0;
		w_movto_contabil_w.delete;
		
		commit;
	end if;
	
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
	end;
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	update	lote_contabil
	set	ie_situacao		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	if (ie_exclusao_p = 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);
	end if;
	
	commit;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_receita ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

