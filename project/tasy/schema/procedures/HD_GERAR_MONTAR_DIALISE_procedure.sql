-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_montar_dialise (dt_dialise_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, cd_unid_dialise_p text, cd_estabelecimento_p bigint, nr_atendimento_p bigint, dt_montagem_p timestamp, nr_seq_dialisador_p bigint, nr_seq_maquina_dialise_p bigint, nr_seq_ponto_acesso_p bigint, nr_seq_osmose_p bigint, ie_operacao_p text, ie_troca_emergencia_p text, ds_motivo_subst_p text, qt_peso_pre_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


nr_dialise_pac_w			bigint;
nr_seq_dialise_w			bigint;
nr_seq_dialise_maq_w			bigint;
ie_obriga_atendimento_w			varchar(1);
nr_seq_dialise_gerada_w			bigint;
cd_pessoa_fisica_w			varchar(10);
nr_prescricao_emergencia_w		bigint;
nr_prescricao_normal_w			bigint;
nr_prescricao_w				bigint;
qt_dialise_atend_w			bigint;
ie_gerar_atend_w			varchar(1);
qt_dialise_w				bigint;
qt_dialise_atend_pac_w			bigint;
nr_seq_dialis_anterior_w		bigint;
nr_seq_unid_dialise_w			bigint;
ie_status_w				varchar(1);
ie_dialise_iniciada_w			varchar(1);
qt_reuso_atual_w			smallint;
ie_permite_montar_ocupado_w		varchar(1);
ds_mensagem_w				varchar(255);
qt_dialisador_dialise_w 		bigint;
ie_exige_osmose_w			varchar(1);
qt_dialisador_w				bigint;
ie_utiliza_regra_sessoes_w		varchar(1);
nr_seq_dialise_dialisador_w		hd_dialise_dialisador.nr_sequencia%type;
nr_seq_dialise_concentrado_w		hd_dialise_concentrado.nr_sequencia%type;
nr_seq_maquina_w			hd_dialise_concentrado.nr_seq_maquina%type;
nr_seq_ponto_acesso_w			hd_dialise_concentrado.nr_seq_ponto_acesso%type;
ie_atualiza_estoque_w			hd_dialise_concentrado.ie_atualiza_estoque%type;
cd_lote_fornecedor_w			hd_dialise_concentrado.cd_lote_fornecedor%type;
cd_material_w				hd_dialise_concentrado.cd_material%type;
dt_conta_w				hd_dialise_concentrado.dt_conta%type;
dt_inclusao_w				hd_dialise_concentrado.dt_inclusao%type;
dt_retirada_w				hd_dialise_concentrado.dt_retirada%type;
nr_seq_dialisador_ret_w			hd_dialise_dialisador.nr_sequencia%type;
nr_lista_concentrado_w			varchar(2000);
ie_gerar_montar_w			varchar(1);

ie_gqa_gerar_proto_assist_w varchar(1);

 CD_SETOR_ATENDIMENTO_w   HD_PONTO_ACESSO.CD_SETOR_ATENDIMENTO%type;
 CD_UNIDADE_BASICA_w      HD_PONTO_ACESSO.CD_UNIDADE_BASICA%type;
 CD_UNIDADE_COMPL_w       HD_PONTO_ACESSO.CD_UNIDADE_COMPL%type;
 IE_GERAR_MOVIMENTACAO_W  varchar(1);
/*
ie_troca_emergencia_p:
	S - emergência
	U - Uso único
	N - Normal
*/
c01 CURSOR FOR
	SELECT	nr_seq_maquina,
		nr_seq_ponto_acesso,
		ie_atualiza_estoque,
		cd_lote_fornecedor,
		cd_material,
		dt_conta,
		dt_inclusao,
		dt_retirada
	from	hd_dialise_concentrado
	where	nr_seq_maquina		= nr_seq_maquina_dialise_p
	and	nr_seq_ponto_acesso	= nr_seq_ponto_acesso_p
	and	coalesce(dt_retirada::text, '') = ''
	and	coalesce(nr_seq_dialise::text, '') = '';


BEGIN

/* leitura do parâmetro 31 da gestão de hemodiálise */

ie_obriga_atendimento_w := obter_param_usuario(7009, 31, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_obriga_atendimento_w);
qt_dialise_atend_w := obter_param_usuario(7009, 103, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, qt_dialise_atend_w);
ie_gerar_montar_w := obter_param_usuario(7009, 130, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_montar_w);
IE_GERAR_MOVIMENTACAO_W := obter_param_usuario(7009, 278, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, IE_GERAR_MOVIMENTACAO_W);
ie_gqa_gerar_proto_assist_w := obter_param_usuario(7009, 280, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gqa_gerar_proto_assist_w);

select 	coalesce(max(nr_sequencia),0)
into STRICT	nr_seq_dialise_gerada_w
from	hd_dialise
where	coalesce(dt_fim_dialise::text, '') = ''
and	coalesce(dt_cancelamento::text, '') = ''
and	cd_pessoa_fisica = cd_pessoa_fisica_p;


select 	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

select	nextval('hd_dialise_seq')
into STRICT	nr_seq_dialise_w
;

ie_gerar_atend_w	:= 'S';


qt_dialise_atend_pac_w	:= Obter_dialise_atend(nr_seq_dialise_w,nr_atendimento_p) + 1;

select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT	ie_utiliza_regra_sessoes_w
from	hd_regra_sessao
where	ie_situacao = 'A';

if (ie_utiliza_regra_sessoes_w = 'N') then
	if (qt_dialise_atend_w > 0) then

		select	count(*)
		into STRICT	qt_dialise_w
		from	hd_dialise
		where	nr_atendimento = nr_atendimento_p
		and 	coalesce(dt_cancelamento::text, '') = ''
		and	nr_sequencia <= nr_seq_dialise_w;

		if (qt_dialise_w >= qt_dialise_atend_w) then
			ie_gerar_atend_w	:= 'N';
		end if;
	end if;
else
	ie_gerar_atend_w := hd_permite_dialise_sessao(nr_atendimento_p,nr_seq_dialise_w);
end if;
if (ie_gerar_atend_w = 'N') then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277446,null);
elsif (ie_obriga_atendimento_w = 'S') and (coalesce(nr_atendimento_p::text, '') = '') then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277449,null);
elsif (nr_seq_dialise_gerada_w > 0) then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277462,'NR_SEQ_DIALISE_GERADA='||nr_seq_dialise_gerada_w);
elsif (cd_pessoa_fisica_w <> cd_pessoa_fisica_p) then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277459,null);
elsif (coalesce(nr_seq_dialisador_p::text, '') = '') then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277455,null);
elsif (coalesce(nr_seq_ponto_acesso_p::text, '') = '') then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277454,null);
elsif (coalesce(nr_seq_maquina_dialise_p::text, '') = '') then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277453,null);
elsif	((ie_operacao_p = 'S') and (coalesce(ds_motivo_subst_p::text, '') = '')) then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(277451,null);
elsif (coalesce(nr_seq_osmose_p::text, '') = '') and (ie_exige_osmose_w = 'S') then
	ds_erro_p := wheb_mensagem_pck.get_texto(277450,null);
else
	/* pega a próxima sequencia para o paciente */

	select	coalesce(max(nr_seq_paciente),0)+1
	into STRICT	nr_dialise_pac_w
	from 	hd_dialise
	where 	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	/* insere os dados da diálise */

	insert into hd_dialise(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_pessoa_fisica,
		dt_dialise,
		nr_seq_paciente,
		nr_seq_unid_dialise,
		nr_atendimento,
		NR_DIALISE_ATEND_PAC,
		qt_peso_pre,
		ie_tipo_dialise,
		ie_paciente_agudo
	) values (
		nr_seq_dialise_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_p,
		dt_dialise_p,
		nr_dialise_pac_w,
		cd_unid_dialise_p,
		nr_atendimento_p,
		qt_dialise_atend_pac_w,
		qt_peso_pre_p,
		'N', --Normal
		substr(hd_obter_ie_agudo_pac(cd_pessoa_fisica_p),1,1));

	select   max(nr_prescricao)
	into STRICT	 nr_prescricao_emergencia_w
	from	 prescr_medica a
	where	 ie_hemodialise	         = 'E'
	and	 trunc(dt_prescricao)	   = trunc(clock_timestamp())
	and	 cd_pessoa_fisica        = cd_pessoa_fisica_p
	and	 (coalesce(dt_liberacao_medico, dt_liberacao) IS NOT NULL AND (coalesce(dt_liberacao_medico, dt_liberacao))::text <> '')
	and	coalesce(dt_fim_prescricao::text, '') = ''
	and	not exists (SELECT 1 from prescr_mat_hor b where b.nr_prescricao = a.nr_prescricao and (nr_seq_dialise IS NOT NULL AND nr_seq_dialise::text <> ''));

	select  max(nr_prescricao)
	into STRICT	nr_prescricao_normal_w
	from	prescr_medica
	where	ie_hemodialise	         = 'S'
	and	cd_pessoa_fisica        = cd_pessoa_fisica_p
	and	(coalesce(dt_liberacao_medico, dt_liberacao) IS NOT NULL AND (coalesce(dt_liberacao_medico, dt_liberacao))::text <> '')
	and	coalesce(dt_fim_prescricao::text, '') = '';

	nr_prescricao_w	:= nr_prescricao_normal_w;

	if (nr_prescricao_emergencia_w IS NOT NULL AND nr_prescricao_emergencia_w::text <> '') then
		nr_prescricao_w	:= nr_prescricao_emergencia_w;
	end if;

	if (nr_prescricao_w IS NOT NULL AND nr_prescricao_w::text <> '') then

		CALL gerar_prescr_mat_hor_dialise(nr_prescricao_w,nr_seq_dialise_w,OBTER_PERFIL_ATIVO,dt_dialise_p,nm_usuario_p);

	end if;

	ie_permite_montar_ocupado_w := obter_param_usuario(7009, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_permite_montar_ocupado_w);
	ie_exige_osmose_w := obter_param_usuario(7009, 81, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exige_osmose_w);

	select	nr_seq_unid_dialise
	into STRICT	nr_seq_unid_dialise_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_w;

	/* Verificar se a diálise foi iniciada */

	select	CASE WHEN coalesce(dt_inicio_dialise::text, '') = '' THEN  'N'  ELSE 'S' END
	into STRICT	ie_dialise_iniciada_w
	from	hd_dialise
	where	nr_sequencia	= nr_seq_dialise_w;

	if (ie_operacao_p = 'S') then

		select	max(nr_seq_dialisador)
		into STRICT	nr_seq_dialis_anterior_w
		from	hd_dialise_dialisador
		where	nr_seq_dialise		= nr_seq_dialise_w
		and	coalesce(dt_retirada::text, '') = '';

		if (nr_seq_dialis_anterior_w <> nr_seq_dialisador_p) then
			update hd_dializador
			set    ie_status              	= 'P'
			where  nr_sequencia		= nr_seq_dialis_anterior_w;
		end if;

		select	max(nr_sequencia)
		into STRICT	nr_seq_dialisador_ret_w
		from	hd_dialise_dialisador
		where	nr_seq_dialise		= nr_seq_dialise_w
		and	coalesce(dt_retirada::text, '') = '';

		update	hd_dialise_dialisador
		set	dt_retirada		= clock_timestamp(),
			cd_pf_retirada		= substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10),
			ds_motivo_subst		= ds_motivo_subst_p
		where	nr_seq_dialise		= nr_seq_dialise_w
		and	coalesce(dt_retirada::text, '') = '';

	end if;

	select 	count(*)
	into STRICT	qt_dialisador_dialise_w
	from	hd_dialise_dialisador
	where	nr_seq_dialisador = nr_seq_dialisador_p;


	if (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'N') then
		ie_status_w	:= 'S';
	elsif (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'S') and (qt_dialisador_dialise_w = 0) then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'S') and (qt_dialisador_dialise_w > 0) then
		ie_status_w	:= 'S';
	elsif (ie_operacao_p = 'M') and (ie_troca_emergencia_p = 'U') then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'S') and (ie_dialise_iniciada_w = 'S') then
		ie_status_w	:= 'E';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'S') and (ie_dialise_iniciada_w = 'N') and (qt_dialisador_dialise_w = 0) then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'S') and (ie_dialise_iniciada_w = 'N') and (qt_dialisador_dialise_w > 0) then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'U') and (ie_dialise_iniciada_w = 'S') then
		ie_status_w	:= 'E';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'U') and (ie_dialise_iniciada_w = 'N') then
		ie_status_w	:= 'U';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'N') and (ie_dialise_iniciada_w = 'S') then
		ie_status_w	:= 'S';
	elsif (ie_operacao_p = 'S') and (ie_troca_emergencia_p = 'N') and (ie_dialise_iniciada_w = 'N') then
		ie_status_w	:= 'S';
	end if;

	/* Verificar se máquina ocupada */

	select	coalesce(max(nr_seq_dialise),0)
	into STRICT	nr_seq_dialise_maq_w
	from	hd_dialise_dialisador
	where	nr_seq_maquina		= nr_seq_maquina_dialise_p
	and	coalesce(dt_retirada::text, '') = '';

	/* Verifica se deve consistir máquina ocupada */

	if (ie_permite_montar_ocupado_w = 'N') and (nr_seq_dialise_maq_w > 0) then

		/* Pegar informações da hemodiálise para monstrar mensagem ao usuário */

		select	substr(WHEB_MENSAGEM_PCK.get_texto(277516,'NR_SEQ_PACIENTE='||nr_seq_paciente||';DT_DIALISE='||to_char(dt_dialise,'dd/mm/yyyy')||';CD_PESSOA_FISICA='||obter_nome_pf(cd_pessoa_fisica)),1,255)
		into STRICT	ds_mensagem_w
		from	hd_dialise
		where	nr_sequencia	= nr_seq_dialise_maq_w;

		--ds_mensagem_w	:=	substr(ds_mensagem_w||', possui um dialisador montado nesta máquina. Retire o dialisador para continuar.#@#@',1,255);
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204110,'DS_MENSAGEM='||ds_mensagem_w);
	end if;

	/* Pegar o reuso atual */

	select	qt_reuso
	into STRICT	qt_reuso_atual_w
	from	hd_dializador
	where	nr_sequencia		= nr_seq_dialisador_p;

	/* Coloca o dialisador em status de aguardando testes */

	update 	hd_dializador
	set    	ie_status              	= ie_status_w
	where 	nr_sequencia		= nr_seq_dialisador_p;


	select 	count(*)
	into STRICT	qt_dialisador_w
	from	hd_dialise_dialisador
	where	nr_seq_dialise		= nr_seq_dialise_w
	and	coalesce(dt_retirada::text, '') = '';

	if (qt_dialisador_w > 0) then
	--Existe um dialisador para esta diálise sem data de retirada
		CALL wheb_mensagem_pck.exibir_mensagem_abort(204111);
	end if;

	select	nextval('hd_dialise_dialisador_seq')
	into STRICT	nr_seq_dialise_dialisador_w
	;

	/* Insere os dados de dialisador da diálise */

	insert into hd_dialise_dialisador(
		nr_sequencia,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_montagem,
		cd_pf_montagem,
		nr_seq_dialisador,
		nr_seq_maquina,
		nr_seq_dialise,
		nr_seq_ponto_acesso,
		ie_troca_emergencia,
		nr_seq_unid_dialise,
		qt_reuso_atual,
		nr_seq_osmose
	) values (
		nr_seq_dialise_dialisador_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		dt_montagem_p,
		substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10),
		nr_seq_dialisador_p,
		nr_seq_maquina_dialise_p,
		nr_seq_dialise_w,
		nr_seq_ponto_acesso_p,
		ie_troca_emergencia_p,
		nr_seq_unid_dialise_w,
		qt_reuso_atual_w,
		nr_seq_osmose_p
	);

	open	c01;
	loop
	fetch	c01 into
		nr_seq_maquina_w,
		nr_seq_ponto_acesso_w,
		ie_atualiza_estoque_w,
		cd_lote_fornecedor_w,
		cd_material_w,
		dt_conta_w,
		dt_inclusao_w,
		dt_retirada_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		select	nextval('hd_dialise_concentrado_seq')
		into STRICT	nr_seq_dialise_concentrado_w
		;

		insert	into hd_dialise_concentrado(
			nr_sequencia,
			nr_seq_dialise,
			nr_seq_maquina,
			nr_seq_ponto_acesso,
			ie_atualiza_estoque,
			cd_lote_fornecedor,
			cd_material,
			dt_conta,
			dt_inclusao,
			dt_retirada,
			nm_usuario,
			dt_atualizacao,
			cd_pf_inclusao
		) values (
			nr_seq_dialise_concentrado_w,
			nr_seq_dialise_w,
			nr_seq_maquina_w,
			nr_seq_ponto_acesso_w,
			ie_atualiza_estoque_w,
			cd_lote_fornecedor_w,
			cd_material_w,
			dt_conta_w,
			dt_inclusao_w,
			dt_retirada_w,
			nm_usuario_p,
			clock_timestamp(),
			substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10)
		);

		if (coalesce(nr_lista_concentrado_w::text, '') = '') then
			nr_lista_concentrado_w 	:= to_char(nr_seq_dialise_concentrado_w);
		elsif (length(nr_lista_concentrado_w || ',' || to_char(nr_seq_dialise_concentrado_w)) < 2000) then
			nr_lista_concentrado_w 	:= nr_lista_concentrado_w || ',' || to_char(nr_seq_dialise_concentrado_w);
		end if;

	end loop;
	close c01;

	/* Atualiza a data de primeiro uso do dialisador */

	update hd_dializador
	set    dt_prim_uso            	= clock_timestamp()
	where  nr_sequencia           	= nr_seq_dialisador_p
	and    coalesce(dt_prim_uso::text, '') = '';

	if (ie_operacao_p = 'M') then

		if (ie_gerar_montar_w = 'S') then
			CALL hd_gerar_assinatura(nr_seq_dialise_dialisador_w, nr_lista_concentrado_w, nr_seq_dialise_w, null, null, null, null, null, null, 'GM', nm_usuario_p, 'N');
		else
			CALL hd_gerar_assinatura(nr_seq_dialise_dialisador_w, nr_lista_concentrado_w, nr_seq_dialise_w, null, null, null, null, null, null, 'MD', nm_usuario_p, 'N');
		end if;

	elsif (ie_operacao_p = 'S') then
		CALL hd_gerar_assinatura(nr_seq_dialise_dialisador_w, nr_lista_concentrado_w, nr_seq_dialise_w, null, null, null, nr_seq_dialisador_ret_w, null, null, 'SD', nm_usuario_p, 'N');
	end if;

	IF IE_GERAR_MOVIMENTACAO_W = 'S' THEN
	
		BEGIN
		SELECT
			hpa.CD_SETOR_ATENDIMENTO
			,hpa.CD_UNIDADE_BASICA
			,hpa.CD_UNIDADE_COMPL
		INTO STRICT
			CD_SETOR_ATENDIMENTO_w
			,CD_UNIDADE_BASICA_w
			,CD_UNIDADE_COMPL_w    
		FROM HD_DIALISE hd, HD_DIALISE_DIALISADOR hdd, HD_PONTO_ACESSO hpa
		WHERE hd.nr_sequencia = hdd.nr_seq_dialise
		AND   hdd.nr_seq_ponto_acesso = hpa.nr_sequencia
		AND   hd.nr_sequencia =  nr_seq_dialise_w;
	
		END;
	
		CALL GERAR_TRANSFERENCIA_PACIENTE(
		nr_atendimento_p        => nr_atendimento_p
		,cd_setor_atendimento_p   => CD_SETOR_ATENDIMENTO_w
		,cd_unidade_basica_p      => CD_UNIDADE_BASICA_w
		,cd_unidade_compl_p       => CD_UNIDADE_COMPL_w
		,cd_tipo_acomodacao_p     => NULL
		,nr_acompanhantes_p       => 0
		,nr_seq_motivo_transf_p   => NULL
		,ds_observacao_p          => NULL
		,nm_usuario_p             => nm_usuario_p
		,dt_entrada_unidade_p     => dt_montagem_p);
	
	END IF;
	
	IF ie_gqa_gerar_proto_assist_w = 'S' THEN
		CALL GQA_GERAR_PROTOCOLO_ASSIST(nr_atendimento_p, 8, nm_usuario_p);
	END IF;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_montar_dialise (dt_dialise_p timestamp, cd_pessoa_fisica_p text, nm_usuario_p text, cd_unid_dialise_p text, cd_estabelecimento_p bigint, nr_atendimento_p bigint, dt_montagem_p timestamp, nr_seq_dialisador_p bigint, nr_seq_maquina_dialise_p bigint, nr_seq_ponto_acesso_p bigint, nr_seq_osmose_p bigint, ie_operacao_p text, ie_troca_emergencia_p text, ds_motivo_subst_p text, qt_peso_pre_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

