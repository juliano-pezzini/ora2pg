-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fornec_cot_pesquisa ( nr_seq_autorizacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_cot_compra_w			bigint;
cd_material_autor_w		bigint;
nr_seq_mat_autor_w		bigint;
cd_cgc_fornecedor_w		varchar(15);
nr_seq_cotacao_forn_w		bigint;
vl_unitario_material_w		double precision;
qt_fornec_w			bigint;
cd_condicao_pagamento_w		bigint;
cd_material_cot_fornec_w 	bigint;
qt_solicitada_w			bigint;
count_marca_w			bigint;

ie_aprovado_vencedor_w		varchar(5) := 'N';
ds_marca_w			cot_compra_forn_item.ds_marca%type;
nr_seq_marca_w			marca.nr_sequencia%type;


C01 CURSOR FOR
	SELECT	nr_cot_compra,
		cd_material,
		nr_sequencia,
		qt_solicitada
	from	material_autor_cirurgia
	where	nr_seq_autorizacao = nr_seq_autorizacao_p
	order by 1;

C02 CURSOR FOR
	SELECT	cd_cgc_fornecedor,
		nr_sequencia,
		cd_condicao_pagamento
	from	cot_compra_forn
	where	nr_cot_compra = nr_cot_compra_w
	order by nr_sequencia;

C03 CURSOR FOR
	SELECT	cd_material,
		coalesce(vl_unitario_liquido,vl_unitario_material),
		coalesce(substr(obter_se_fornec_venc_cotacao(NR_COT_COMPRA,nr_item_cot_compra,NR_SEQ_COT_FORN),1,1),'N'),
		ds_marca
	from	cot_compra_forn_item
	where	nr_seq_cot_forn = nr_seq_cotacao_forn_w
	order by 1;



BEGIN
if (nr_seq_autorizacao_p IS NOT NULL AND nr_seq_autorizacao_p::text <> '') then

	begin
	open C01;
	loop
	fetch C01 into
		nr_cot_compra_w,
		cd_material_autor_w,
		nr_seq_mat_autor_w,
		qt_solicitada_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (nr_cot_compra_w IS NOT NULL AND nr_cot_compra_w::text <> '') then
			open C02;
			loop
			fetch C02 into
				cd_cgc_fornecedor_w,
				nr_seq_cotacao_forn_w,
				cd_condicao_pagamento_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				 if (cd_cgc_fornecedor_w IS NOT NULL AND cd_cgc_fornecedor_w::text <> '') then
					open C03;
					loop
					fetch C03 into
						cd_material_cot_fornec_w,
						vl_unitario_material_w,
						ie_aprovado_vencedor_w,
						ds_marca_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						if (cd_material_cot_fornec_w = cd_material_autor_w) then
							begin

							/*Mesmo tratamento da GERAR_ORDEM_COMPRA para remover a referência do fabricante para obter a marca*/

							select	substr(CASE WHEN position('(' in ds_marca_w)=0 THEN  ds_marca_w  ELSE substr(ds_marca_w,1,position('(' in ds_marca_w)-1) END ,1,30)
							into STRICT	ds_marca_w
							;

							select 	max(nr_sequencia)
							into STRICT 	nr_seq_marca_w
							from 	marca
							where 	substr(upper(elimina_acentuacao(ds_marca)),1,30) = substr(upper(elimina_acentuacao(ds_marca_w)),1,30);

							if (coalesce(nr_seq_marca_w,0) <> 0) then
								select 	count(*)
								into STRICT	count_marca_w
								from 	marca b,
									material_marca a
								where  	a.nr_sequencia 	= b.nr_sequencia
								and	b.nr_sequencia	= nr_seq_marca_w
								and 	a.cd_material 	= cd_material_cot_fornec_w;

								if (count_marca_w = 0) then
									nr_seq_marca_w	:= null; --Somente grava a marca se possui vinculada a marca ao cadastro do material.
								end if;
							end if;

							select	count(*)
							into STRICT	qt_fornec_w
							from	material_autor_cir_cot
							where	nr_sequencia = nr_seq_mat_autor_w
							and	cd_cgc       = cd_cgc_fornecedor_w;
							--and	nvl(nr_seq_marca,nvl(nr_seq_marca_w,0)) = nvl(nr_seq_marca_w,0); --OS 822951 em 30/12/2014 - lhalves - A PK é pela sequência e CGC, então não deve comparar a marca, irá sempre atualizar se informado diferente na cotação.
							if (coalesce(nr_seq_mat_autor_w,0) > 0) then

								if (coalesce(qt_fornec_w,0) = 0) then

									insert	into	material_autor_cir_cot(CD_CGC,
										CD_CONDICAO_PAGAMENTO,
										DT_ATUALIZACAO,
										DT_ATUALIZACAO_NREC,
										IE_APROVACAO,
										NM_USUARIO,
										NM_USUARIO_NREC,
										NR_SEQUENCIA,
										VL_UNITARIO_COTADO,
										VL_COTADO,
										nr_seq_marca)
									values
										(cd_cgc_fornecedor_w,
										cd_condicao_pagamento_w,
										clock_timestamp(),
										clock_timestamp(),
										ie_aprovado_vencedor_w,
										nm_usuario_p,
										nm_usuario_p,
										nr_seq_mat_autor_w,
										vl_unitario_material_w,
										(coalesce(qt_solicitada_w,1) * vl_unitario_material_w),
										nr_seq_marca_w);

								elsif (qt_fornec_w > 0) then

									update	material_autor_cir_cot
									set	nm_usuario 		= nm_usuario_p,
										dt_atualizacao 		= clock_timestamp(),
										ie_aprovacao 		= ie_aprovado_vencedor_w,
										vl_unitario_cotado	= vl_unitario_material_w,
										vl_cotado		= (coalesce(qt_solicitada_w,1) * vl_unitario_material_w),
										cd_condicao_pagamento	= cd_condicao_pagamento_w,
										nr_seq_marca		= coalesce(nr_seq_marca_w,nr_seq_marca)
									where	cd_cgc = cd_cgc_fornecedor_w
									and	nr_sequencia = nr_seq_mat_autor_w;



								end if;
							end if;
							end;
						end if;
						end;
					end loop;
					close C03;
				end if;
				end;
			end loop;
			close C02;
		end if;
		end;
	end loop;
	close C01;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fornec_cot_pesquisa ( nr_seq_autorizacao_p bigint, nm_usuario_p text) FROM PUBLIC;

