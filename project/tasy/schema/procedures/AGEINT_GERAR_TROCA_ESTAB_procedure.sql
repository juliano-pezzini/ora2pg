-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_troca_estab ( nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, nr_seq_ageint_nova_p INOUT bigint, ds_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_status_w				bigint;
cd_pessoa_fisica_w			varchar(10);
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
cd_plano_w					varchar(10);
nr_doc_convenio_w			varchar(20);
dt_validade_carteira_w		timestamp;
cd_usuario_convenio_w		varchar(30);
nm_contato_w				varchar(80);
nr_telefone_w				varchar(60);
cd_profissional_w			varchar(10);
cd_agenda_externa_w			agenda_integrada.cd_agenda_externa%type;
dt_prevista_w				timestamp;
qt_peso_w					real;
qt_altura_cm_w				real;
ie_turno_w					varchar(2);
ds_observacao_w				varchar(2000);
ie_tipo_atendimento_w		smallint;
nm_paciente_w				varchar(60);
dt_nascimento_w				timestamp;
nr_seq_orcamento_w			bigint;
nr_seq_atend_pls_w			bigint;
nr_seq_evento_atend_w		bigint;
ds_obs_final_w				varchar(2000);
nr_seq_mot_cancel_w			bigint;
cd_empresa_w				bigint;
cd_medico_solicitante_w		varchar(10);
ds_indicacao_w				varchar(4000);
nr_seq_tipo_classif_pac_w	bigint;
nr_seq_cobertura_w			bigint;
nm_medico_externo_w			varchar(60);
crm_medico_externo_w		varchar(60);
ie_bloqueio_checklist_w		varchar(3);
cd_convenio_ant_w			integer;
nr_seq_forma_indicacao_w	bigint;

ds_erro_w					varchar(255);

ie_usuario_categoria_w		varchar(3);
ie_Regra_bloqueio_W			varchar(3);
ds_mensagem_w				varchar(255);
ie_bloqueia_atendimento_w	varchar(3);
qt_idade_w					smallint;
nr_seq_ageint_nova_w		bigint;

nr_Seq_item_selec_w			bigint;
ie_lado_W					varchar(1);
nr_seq_pacote_w				bigint;
ds_pacote_w					varchar(10);
nr_seq_status_cancelado_w	bigint;
nr_classificacao_agend_w	bigint;
nr_var_w		bigint;
nr_seq_regra_w bigint;
ie_consist_bloq_conv_atend_w varchar(5);
nr_seq_classificacao_w		 bigint;

C01 CURSOR FOR 
	SELECT	nr_seq_item_selec, 
			ie_lado, 
			nr_classificacao_agend 
	from	agenda_integrada_item 
	where	nr_seq_agenda_int	= nr_seq_ageint_p 
	and		(nr_seq_item_selec IS NOT NULL AND nr_seq_item_selec::text <> '');
	
C02 CURSOR FOR 
	SELECT	distinct nr_seq_pacote 
	from	agenda_integrada_item 
	where	nr_seq_agenda_int	= nr_seq_ageint_p 
	and 	(nr_seq_pacote IS NOT NULL AND nr_seq_pacote::text <> '');
			

BEGIN 
 
ie_consist_bloq_conv_atend_w := obter_param_usuario(869, 146, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consist_bloq_conv_atend_w);
 
 
select	max(nr_seq_status), 
	max(cd_pessoa_fisica), 
	max(cd_convenio), 
	max(cd_categoria), 
	max(cd_plano), 
	max(nr_doc_convenio), 
	max(dt_validade_carteira), 
	max(cd_usuario_convenio), 
	max(nm_contato), 
	max(nr_telefone), 
	max(cd_profissional), 
	max(cd_agenda_externa), 
	max(dt_prevista), 
	max(qt_peso), 
	max(qt_altura_cm), 
	max(ie_turno), 
	max(ds_observacao), 
	max(ie_tipo_atendimento), 
	max(nm_paciente), 
	max(dt_nascimento), 
	max(nr_seq_orcamento), 
	max(nr_seq_atend_pls), 
	max(nr_seq_evento_atend), 
	max(ds_obs_final), 
	max(nr_seq_mot_cancel), 
	max(cd_empresa), 
	max(cd_medico_solicitante), 
	max(ds_indicacao), 
	max(nr_seq_tipo_classif_pac), 
	max(nr_seq_cobertura), 
	max(nm_medico_externo), 
	max(crm_medico_externo), 
	max(ie_bloqueio_checklist), 
	max(cd_convenio_ant), 
	max(nr_seq_forma_indicacao), 
	max(nr_seq_classificacao) 
into STRICT	nr_seq_status_w, 
	cd_pessoa_fisica_w, 
	cd_convenio_w, 
	cd_categoria_w, 
	cd_plano_w, 
	nr_doc_convenio_w, 
	dt_validade_carteira_w, 
	cd_usuario_convenio_w, 
	nm_contato_w, 
	nr_telefone_w, 
	cd_profissional_w, 
	cd_agenda_externa_w, 
	dt_prevista_w, 
	qt_peso_w, 
	qt_altura_cm_w, 
	ie_turno_w, 
	ds_observacao_w, 
	ie_tipo_atendimento_w, 
	nm_paciente_w, 
	dt_nascimento_w, 
	nr_seq_orcamento_w, 
	nr_seq_atend_pls_w, 
	nr_seq_evento_atend_w, 
	ds_obs_final_w, 
	nr_seq_mot_cancel_w, 
	cd_empresa_w, 
	cd_medico_solicitante_w, 
	ds_indicacao_w, 
	nr_seq_tipo_classif_pac_w, 
	nr_seq_cobertura_w, 
	nm_medico_externo_w, 
	crm_medico_externo_w, 
	ie_bloqueio_checklist_w, 
	cd_convenio_ant_w, 
	nr_seq_forma_indicacao_w, 
	nr_seq_classificacao_w 
from	agenda_integrada 
where	nr_sequencia	= nr_seq_ageint_p;
 
ds_Erro_w := ageint_consistir_imc(qt_peso_w, qt_altura_cm_w, nm_usuario_p, cd_estabelecimento_p, ds_Erro_w);
 
select	CASE WHEN count(*)=0 THEN  WHEB_MENSAGEM_PCK.get_texto(279462,null)  ELSE '' END  
into STRICT	ds_Erro_w 
from 	convenio a  
where 	exists (SELECT	1 
			from 		convenio_estabelecimento b   
			where 		b.cd_estabelecimento 	= cd_estabelecimento_p 
			and 		b.cd_convenio 			= a.cd_convenio) 
and 	a.ie_situacao = 'A' 
and		a.cd_convenio	= cd_convenio_w;
if (coalesce(ds_Erro_w::text, '') = '') then 
	select 	CASE WHEN count(*)=0 THEN  WHEB_MENSAGEM_PCK.get_texto(279463,null)  ELSE '' END  
	into STRICT	ds_erro_w 
	from 	categoria_convenio 
	where 	ie_situacao 	= 'A'  
	and		cd_convenio 	= cd_convenio_w 
	and  	Obter_Se_Categoria_Lib_Estab(cd_estabelecimento_p, cd_convenio_w, cd_categoria) = 'S' 
	and		cd_categoria	= cd_categoria_w;
	 
	if (coalesce(ds_erro_W::text, '') = '') then 
		select 	CASE WHEN count(*)=0 THEN  WHEB_MENSAGEM_PCK.get_texto(279464,null)  ELSE '' END  
		into STRICT	ds_Erro_w 
		from 	convenio_plano  
		where 	cd_convenio = cd_convenio_w 
		and 	ie_situacao = 'A'  
		and		cd_plano	= cd_plano_w 
		and  	Obter_Plano_Lib_Categoria(cd_convenio_w, cd_categoria_w, cd_plano, cd_estabelecimento_p, clock_timestamp()) = 'S';
	end if;
end if;
 
if (coalesce(ds_Erro_w::text, '') = '') then 
	ds_Erro_w := ageint_consistir_idade(cd_pessoa_Fisica_w, dt_nascimento_w, nm_usuario_p, cd_Estabelecimento_p, ds_Erro_w);
	if (coalesce(ds_Erro_w::text, '') = '') then 
		SELECT * FROM consiste_usuario_Categoria(cd_estabelecimento_p, cd_Convenio_W, cd_categoria_w, ie_tipo_atendimento_w, cd_usuario_convenio_w, ie_usuario_categoria_w, ie_Regra_bloqueio_W, ds_observacao_w, null, nr_seq_regra_w) INTO STRICT ie_usuario_categoria_w, ie_Regra_bloqueio_W, ds_observacao_w, nr_seq_regra_w;
		if (ie_usuario_categoria_w <> 'S') and (ie_Regra_bloqueio_W	= 'B') then 
			if (ie_usuario_categoria_w = 'N') then 
				ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279465,null);
				 
			elsif (ie_usuario_categoria_w = 'C') then 
				ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279466,null);
			end if;
		end if;
		 
		if (coalesce(ds_erro_w::text, '') = '') then 
		 
			if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and 
				((ie_tipo_atendimento_w IS NOT NULL AND ie_tipo_atendimento_w::text <> '') or (nr_seq_classificacao_w IS NOT NULL AND nr_seq_classificacao_w::text <> '')) and ('N' <> ie_consist_bloq_conv_atend_w) then				 
				SELECT * FROM ageint_consiste_regra_Atend(cd_convenio_w, cd_categoria_w, cd_plano_w, ie_tipo_atendimento_w, cd_estabelecimento_p, ds_erro_w, nr_var_w, nm_usuario_p, ie_consist_bloq_conv_atend_w, nr_seq_classificacao_w) INTO STRICT ds_erro_w, nr_var_w;		
			end if;
			 
			if (coalesce(ds_erro_w::text, '') = '') then 
				if (cd_empresa_w IS NOT NULL AND cd_empresa_w::text <> '') then 
					ds_erro_w := consiste_empresa_bloqueio(cd_empresa_w, cd_convenio_W, cd_categoria_w, ds_erro_w);
				end if;
				if (coalesce(ds_erro_w::text, '') = '') then 
					select 	coalesce(substr(obter_idade_pf(cd_pessoa_fisica_w, clock_timestamp(), 'A'), 1, 3),0) 
					into STRICT	qt_idade_w 
					;
					SELECT * FROM obter_se_lib_setor_conv(cd_estabelecimento_p, cd_convenio_w, cd_categoria_w, ie_tipo_Atendimento_W, 0, cd_plano_w, null, ds_mensagem_w, ie_bloqueia_atendimento_w, null, cd_empresa_w, null, nr_seq_cobertura_w, null, null, null, qt_idade_w, 0, 0, 0, clock_timestamp(), cd_pessoa_fisica_w) INTO STRICT ds_mensagem_w, ie_bloqueia_atendimento_w;
					if (ie_bloqueia_atendimento_w	= 'B') then 
						if (coalesce(ds_mensagem_w::text, '') = '') then 
							ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279467,null);
						else 
							ds_erro_W	:= ds_mensagem_w;
						end if;
					elsif (ie_bloqueia_atendimento_w	= 'T') and (coalesce(nr_doc_convenio_W::text, '') = '') then 
						if (coalesce(ds_mensagem_w::text, '') = '') then 
							ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279467,null);
						else 
							ds_erro_W	:= ds_mensagem_w;
						end if;
					elsif (ie_bloqueia_atendimento_w	= 'G') and (coalesce(nr_doc_convenio_W::text, '') = '') then 
						if (coalesce(ds_mensagem_w::text, '') = '') then 
							ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279467,null);
						else 
							ds_erro_W	:= ds_mensagem_w;
						end if;
					elsif (ie_bloqueia_atendimento_w	= 'S') then 
						if (coalesce(ds_mensagem_w::text, '') = '') then 
							ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(279467,null);
						else 
							ds_erro_W	:= ds_mensagem_w;
						end if;
					end if;
					 
					if (coalesce(ds_erro_W::text, '') = '') then 
						select	nextval('agenda_integrada_seq') 
						into STRICT	nr_seq_ageint_nova_w 
						;
						 
						insert into agenda_integrada(nr_seq_status, 
										cd_pessoa_fisica, 
										cd_convenio, 
										cd_categoria, 
										cd_plano, 
										nr_doc_convenio, 
										dt_validade_carteira, 
										cd_usuario_convenio, 
										nm_contato, 
										nr_telefone, 
										cd_profissional, 
										cd_agenda_externa, 
										dt_prevista, 
										qt_peso, 
										qt_altura_cm, 
										ie_turno, 
										ds_observacao, 
										ie_tipo_atendimento, 
										nm_paciente, 
										dt_nascimento, 
										nr_seq_orcamento, 
										nr_seq_atend_pls, 
										nr_seq_evento_atend, 
										ds_obs_final, 
										nr_seq_mot_cancel, 
										cd_empresa, 
										cd_medico_solicitante, 
										ds_indicacao, 
										nr_seq_tipo_classif_pac, 
										nr_seq_cobertura, 
										nm_medico_externo, 
										crm_medico_externo, 
										ie_bloqueio_checklist, 
										cd_convenio_ant, 
										nr_seq_forma_indicacao, 
										nr_sequencia, 
										dt_atualizacao, 
										nm_usuario, 
										dt_atualizacao_nrec, 
										nm_usuario_nrec, 
										cd_estabelecimento, 
										dt_inicio_agendamento) 
						values (nr_seq_status_w, 
										cd_pessoa_fisica_w, 
										cd_convenio_w, 
										cd_categoria_w, 
										cd_plano_w, 
										nr_doc_convenio_w, 
										dt_validade_carteira_w, 
										cd_usuario_convenio_w, 
										nm_contato_w, 
										nr_telefone_w, 
										cd_profissional_w, 
										cd_agenda_externa_w, 
										dt_prevista_w, 
										qt_peso_w, 
										qt_altura_cm_w, 
										ie_turno_w, 
										ds_observacao_w, 
										ie_tipo_atendimento_w, 
										nm_paciente_w, 
										dt_nascimento_w, 
										nr_seq_orcamento_w, 
										nr_seq_atend_pls_w, 
										nr_seq_evento_atend_w, 
										ds_obs_final_w, 
										nr_seq_mot_cancel_w, 
										cd_empresa_w, 
										cd_medico_solicitante_w, 
										ds_indicacao_w, 
										nr_seq_tipo_classif_pac_w, 
										nr_seq_cobertura_w, 
										nm_medico_externo_w, 
										crm_medico_externo_w, 
										ie_bloqueio_checklist_w, 
										cd_convenio_ant_w, 
										nr_seq_forma_indicacao_w, 
										nr_seq_ageint_nova_w, 
										clock_timestamp(), 
										nm_usuario_p, 
										clock_timestamp(), 
										nm_usuario_p, 
										cd_estabelecimento_p, 
										clock_timestamp());
										 
						open C01;
						loop 
						fetch C01 into	 
							nr_Seq_item_selec_w, 
							ie_lado_W, 
							nr_classificacao_agend_w;
						EXIT WHEN NOT FOUND; /* apply on C01 */
							begin 
							CALL Ageint_Inserir_Item(nr_seq_ageint_nova_w, nr_Seq_item_selec_w, ie_lado_w, null, nr_classificacao_agend_w, null,null,'N',cd_estabelecimento_p, nm_usuario_p);
							end;
						end loop;
						close C01;
						 
						open C02;
						loop 
						fetch C02 into	 
							nr_seq_pacote_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin 
							ds_pacote_w	:= to_Char(nr_seq_pacote_w)||',';
							CALL ageint_gerar_pacote(nr_seq_ageint_nova_w, ds_pacote_w, nm_usuario_p, cd_estabelecimento_p);
							end;
						end loop;
						close C02;
						 
						select	min(nr_sequencia) 
						into STRICT	nr_seq_status_cancelado_w 
						from	agenda_integrada_status 
						where	ie_status_tasy	= 'CA' 
						and		ie_situacao		= 'A';
						 
						CALL Ageint_Alterar_Status(nr_seq_status_cancelado_w, nr_Seq_ageint_p, null, nm_usuario_p, cd_estabelecimento_p);
					end if;
				end if;
			end if;
		end if;
	end if;
end if;
 
ds_erro_p		:= ds_erro_w;
nr_seq_ageint_nova_p	:= nr_seq_ageint_nova_w;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_troca_estab ( nr_seq_ageint_p bigint, cd_estabelecimento_p bigint, nr_seq_ageint_nova_p INOUT bigint, ds_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;

