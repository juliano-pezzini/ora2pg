-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_desfecho_pa ( ie_medico_ciente_p text, cd_medico_destino_p text, nr_atendimento_p bigint, hr_fim_consulta_p text, ie_alta_desfecho_p text, ie_desfecho_p text, cd_motivo_alta_p bigint, cd_processo_alta_p bigint, ie_local_int_alta_p text, nr_atend_gerado_p INOUT bigint, ie_medico_p text, nr_seq_motivo_p bigint, cd_cgc_p text, nm_usuario_p text, dt_alta_prev_p timestamp default null) AS $body$
DECLARE

		
ds_erro_alta_w		varchar(2000);
nr_atend_gerado_w	bigint;
ie_regra_alta_w     varchar(1);
dt_alta_prev_w	timestamp;
ie_consiste_prescr_adm_w	varchar(10);
qt_prescr_w					varchar(50);
ie_status_w					varchar(10);
cd_perfil_w                 bigint;
ie_finalizar_consulta_w       varchar(10);


BEGIN

cd_perfil_w	:= obter_perfil_ativo;
ie_finalizar_consulta_w := Obter_Param_Usuario(935, 110, cd_perfil_w, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_finalizar_consulta_w);

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	
	select	SUBSTR(obter_status_atend_pa_nova(	
		a.nr_atendimento,
		a.dt_alta,
		a.dt_medicacao,
		a.dt_lib_medico,
		a.dt_atend_medico,
		a.dt_fim_consulta,
		a.dt_inicio_atendimento	,
		a.dt_fim_triagem,
		a.dt_chamada_paciente,
		a.dt_liberacao_enfermagem,
		a.dt_reavaliacao_medica,
		a.nr_atend_alta,
		a.cd_estabelecimento,
		a.dt_fim_reavaliacao,
		a.dt_inicio_observacao,
		a.dt_fim_observacao,
		a.dt_chamada_reavaliacao,
		a.dt_inicio_reavaliacao,
		a.ie_chamado,
		a.dt_chamada_enfermagem),1,10) ie_status
	into STRICT	ie_status_w
	from 	atendimento_paciente a
	where 	nr_atendimento = nr_atendimento_p;
	
	dt_alta_prev_w := coalesce(dt_alta_prev_p,clock_timestamp());
	if (ie_medico_ciente_p = 'S') and (cd_medico_destino_p IS NOT NULL AND cd_medico_destino_p::text <> '') then
		begin
		CALL atualiza_medico_ciente(nr_atendimento_p, cd_medico_destino_p, 'M', nm_usuario_p);
		end;
	end if;
	if (ie_finalizar_consulta_w = 'S') AND (coalesce(hr_fim_consulta_p::text, '') = '') then
		begin
		CALL atualizar_datas_pa(nr_atendimento_p, 'FC', nm_usuario_p);
		end;
	end if;
	if (ie_status_w = 'ER') then
		begin
		CALL atualizar_datas_pa(nr_atendimento_p, 'FR', nm_usuario_p);
		end;
	end if;
	if (ie_alta_desfecho_p = 'S') and (ie_desfecho_p = 'A') and (cd_motivo_alta_p IS NOT NULL AND cd_motivo_alta_p::text <> '') then
		begin		
		select coalesce(ie_regra_alta_pa,'A')
		into STRICT ie_regra_alta_w 
		from motivo_alta 
		where cd_motivo_alta = cd_motivo_alta_p;
		
		if (ie_regra_alta_w <> 'A') then
		CALL gerar_estornar_alta_medica(nr_atendimento_p, 'A', cd_motivo_alta_p, clock_timestamp(), null, nm_usuario_p, 'S', 935);
		end if;
		
		if (ie_regra_alta_w <> 'M') then
			select	max(ie_consiste_prescr_adm)
			into STRICT	ie_consiste_prescr_adm_w
			from	consistencia_desfecho
			where	ie_desfecho = ie_desfecho_p;
			
			if (coalesce(ie_consiste_prescr_adm_w,'N') = 'S') then
				select	max(Obter_qt_prescr_Atend(nr_atendimento_p))
				into STRICT	qt_prescr_w
				;
				
				if (coalesce(qt_prescr_w::text, '') = '') then
					ds_erro_alta_w := gerar_estornar_alta(nr_atendimento_p, 'A', cd_processo_alta_p, cd_motivo_alta_p, dt_alta_prev_w, nm_usuario_p, ds_erro_alta_w, nr_seq_motivo_p, cd_cgc_p, null);
				end if;
			else
				ds_erro_alta_w := gerar_estornar_alta(nr_atendimento_p, 'A', cd_processo_alta_p, cd_motivo_alta_p, dt_alta_prev_w, nm_usuario_p, ds_erro_alta_w, nr_seq_motivo_p, cd_cgc_p, null);
			end if;
			
		end if;
		
		if (ie_local_int_alta_p = 'S') then
			begin
			select	coalesce(max(nr_atendimento),0)
			into STRICT	nr_atend_gerado_w
			from	atendimento_paciente
			where	nr_atend_alta = nr_atendimento_p;
			
			if (nr_atend_gerado_w > 0) and (ie_medico_p = 'S') and (cd_medico_destino_p IS NOT NULL AND cd_medico_destino_p::text <> '') then
				begin
				CALL assumir_paciente(nr_atend_gerado_w, cd_medico_destino_p, null, nm_usuario_p);
				end;
			end if;
			end;
		end if;
		end;
	end if;
	end;
nr_atend_gerado_p := nr_atend_gerado_w;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_desfecho_pa ( ie_medico_ciente_p text, cd_medico_destino_p text, nr_atendimento_p bigint, hr_fim_consulta_p text, ie_alta_desfecho_p text, ie_desfecho_p text, cd_motivo_alta_p bigint, cd_processo_alta_p bigint, ie_local_int_alta_p text, nr_atend_gerado_p INOUT bigint, ie_medico_p text, nr_seq_motivo_p bigint, cd_cgc_p text, nm_usuario_p text, dt_alta_prev_p timestamp default null) FROM PUBLIC;

