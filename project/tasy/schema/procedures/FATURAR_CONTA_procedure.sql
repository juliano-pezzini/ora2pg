-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE faturar_conta (nr_interno_conta_p bigint, ie_tipo_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_protocolo_w		bigint;
cd_convenio_parametro_w		integer;
cd_estabelecimento_w		smallint;
dt_referencia_w			timestamp;
vl_parametro_w			varchar(01);
dt_entrada_w			timestamp;
ie_data_referencia_w		varchar(01);
dt_ref_tipo_protocolo_w		timestamp;
dt_ref_valida_w			timestamp;
cd_prestador_protocolo_w	protocolo_convenio.cd_prestador_convenio%type;


BEGIN

select	max(dt_entrada)
into STRICT	dt_entrada_w
from	conta_paciente b,
	atendimento_paciente a
where	a.nr_atendimento	= b.nr_atendimento
and	b.nr_interno_conta	= nr_interno_conta_p;


select	nextval('protocolo_convenio_seq')
into STRICT	nr_seq_protocolo_w
;

select	cd_convenio_parametro,
	cd_estabelecimento
into STRICT	cd_convenio_parametro_w,
	cd_estabelecimento_w
from	conta_paciente
where	nr_interno_conta = nr_interno_conta_p;

select	coalesce(obter_valor_param_usuario(67, 126, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w),'S')
into STRICT	vl_parametro_w
;

select	coalesce(obter_valor_param_usuario(67, 142, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w),'N')
into STRICT	ie_data_referencia_w
;

select	max(trunc(DT_REF_VALIDA))
into STRICT	dt_ref_tipo_protocolo_w
from	conv_fechamento_tipo_prot
where	cd_convenio		= cd_convenio_parametro_w
and	ie_tipo_protocolo	= ie_tipo_protocolo_p;

Select	trunc(dt_ref_valida)
into STRICT	dt_referencia_w
from	convenio 
where	cd_convenio = cd_convenio_parametro_w;

select	CASE WHEN ie_data_referencia_w='S' THEN  trunc(dt_entrada_w,'dd')  ELSE coalesce(dt_ref_tipo_protocolo_w, dt_referencia_w) END
into STRICT	dt_ref_valida_w
;

cd_prestador_protocolo_w := TISS_OBTER_COD_PREST_PROTOCOLO(cd_estabelecimento_w, null, ie_tipo_protocolo_p, cd_convenio_parametro_w, null, cd_prestador_protocolo_w, null);

if (coalesce(dt_ref_valida_w::text, '') = '') and (ie_data_referencia_w <> 'S') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(182017);
end if;

insert into protocolo_convenio(
	cd_convenio,
	nr_protocolo,
	ie_status_protocolo,
	dt_periodo_inicial,
	dt_periodo_final,
	dt_atualizacao,
	nm_usuario,
	ie_tipo_protocolo,
	nr_seq_protocolo,
	dt_mesano_referencia,
	cd_estabelecimento,
	nr_seq_lote_receita,
	nr_seq_lote_repasse,
	nr_seq_lote_grat,
	cd_prestador_convenio)
values (	cd_convenio_parametro_w,
	nr_seq_protocolo_w,
	1,
	CASE WHEN ie_data_referencia_w='S' THEN  to_date(to_char(trunc(dt_entrada_w,'dd'),'dd/mm/yyyy')||' 00:00:01','dd/mm/yyyy hh24:mi:ss')  ELSE to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' 00:00:01','dd/mm/yyyy hh24:mi:ss') END ,
	CASE WHEN ie_data_referencia_w='S' THEN  to_date(to_char(trunc(dt_entrada_w,'dd'),'dd/mm/yyyy')||' 23:59:59','dd/mm/yyyy hh24:mi:ss')  ELSE to_date(to_char(clock_timestamp(),'dd/mm/yyyy')||' 23:59:59','dd/mm/yyyy hh24:mi:ss') END ,
	clock_timestamp(),
	nm_usuario_p,
	ie_tipo_protocolo_p,
	nr_seq_protocolo_w,
	dt_ref_valida_w,
	cd_estabelecimento_w,
	0,
	0,
	0,
	cd_prestador_protocolo_w);

Update	conta_paciente
set	nr_protocolo		= nr_seq_protocolo_w,
	nr_seq_protocolo	= nr_seq_protocolo_w
where	nr_interno_conta	= nr_interno_conta_p;

if (vl_parametro_w = 'S') then
	update	protocolo_convenio
	set	ie_status_protocolo = 2,
		dt_definitivo = clock_timestamp(),
		nm_usuario_definitivo = nm_usuario_p
	where	nr_seq_protocolo = nr_seq_protocolo_w;
end if;

CALL Gerar_Protocolo_Conv_Repasse(nr_seq_protocolo_w, nm_usuario_p,null);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE faturar_conta (nr_interno_conta_p bigint, ie_tipo_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

