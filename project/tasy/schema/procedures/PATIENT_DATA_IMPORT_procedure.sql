-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE patient_data_import ( ds_parametros_p text, nm_usuario_p text, nr_atendimento_p bigint , source_system_p text default null, ie_operacao_p text default null, nr_seq_import_obr_p bigint default null, template_p out text) is TYPE campos IS RECORD ( obx31 varchar(100), obx33 varchar(100) DEFAULT NULL, vl_field varchar(100) DEFAULT NULL, obx4 varchar(10) DEFAULT NULL, obx11 varchar(1) DEFAULT NULL, obx14 varchar(20) DEFAULT NULL, obx15 varchar(4000) DEFAULT NULL, ds_lista text  DEFAULT NULL) AS $body$
BEGIN
   v_numero_w := (numero_p)::numeric;
   return;
exception
  when data_exception then
     return;
end;
begin
    ds_parametros_w  := ds_parametros_p;
    indice_w  := 0;
    WHILE(LENGTH(ds_parametros_w) > 0) LOOP
        BEGIN
        indice_w  := indice_w+1;
        IF (position(';' in ds_parametros_w)  >0)  THEN
            Vetor_w[indice_w].ds_lista  := SUBSTR(ds_parametros_w,1,position(';' in ds_parametros_w)-1 );
            ds_parametros_w := SUBSTR(ds_parametros_w,position(';' in ds_parametros_w)+1,40000);
        ELSE
            Vetor_w[indice_w].ds_lista  := SUBSTR(ds_parametros_w,1,LENGTH(ds_parametros_w) - 1);
            ds_parametros_w  := NULL;
        END IF;
        END;
    END LOOP;
    FOR j IN 1..Vetor_w.COUNT LOOP
        BEGIN
          ds_lista_aux_w       := Vetor_w[j].ds_lista;
          Vetor_w[j].obx31     := SUBSTR(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)-1 );
          ds_lista_aux_w       := SUBSTR(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
          Vetor_w[j].obx33     := SUBSTR(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)- 1 );
          ds_lista_aux_w       := SUBSTR(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
          Vetor_w[j].obx4      := coalesce(SUBSTR(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)- 1 ),'DEF');
          ds_lista_aux_w       := SUBSTR(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
          Vetor_w[j].vl_field  := coalesce(SUBSTR(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)-1 ),ds_lista_aux_w);
          ds_lista_aux_w       := SUBSTR(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
          Vetor_w[j].obx11     := coalesce(SUBSTR(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)- 1 ),'F');
          ds_lista_aux_w       := SUBSTR(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
          Vetor_w[j].obx14     := coalesce(SUBSTR(ds_lista_aux_w,1,position('#@#@' in ds_lista_aux_w)- 1 ),ds_lista_aux_w);
          ds_lista_aux_w       := SUBSTR(ds_lista_aux_w,position('#@#@' in ds_lista_aux_w)+4,40000);
          Vetor_w[j].obx15  := SUBSTR(ds_lista_aux_w,1,4000 );
       END;
    END LOOP;
    --
    open c01;
    loop
    fetch c01 into
          nr_seq_template_w,
          NR_SEQ_ELEMENTO_w,
          nr_seq_template_conteudo_w,
          obx_code_system_w,
          obx_name_system_w;
    EXIT WHEN NOT FOUND; /* apply on c01 */
      FOR i IN 1..Vetor_w.COUNT LOOP
        BEGIN
          IF (Vetor_w[i].obx31 = obx_code_system_w and Vetor_w[i].obx33 = obx_name_system_w) THEN
             select coalesce(cd_pessoa_fisica,0)
               into STRICT cd_pessoa_fisica_w
               from atendimento_paciente
              where nr_atendimento = nr_atendimento_p;
              ---------------
              if (ie_operacao_p = 'I' and ((nr_seq_template_w <> nr_seq_template_atual_w) or (primeira_passagem_w))) then
                   SELECT * FROM EXECUTAR_ACAO_TEMPLATE_GENERIC(  'A', nm_usuario_p, null, nr_atendimento_p, cd_pessoa_fisica_w, nr_seq_template_w, nr_ehr_reg_w, nr_ehr_reg_templ_w, ds_response_w) INTO STRICT nr_ehr_reg_w, nr_ehr_reg_templ_w, ds_response_w;
                    select nr_seq_template
                    into STRICT nr_seq_template_atual_w
                    from ehr_reg_template
                    where nr_sequencia = nr_ehr_reg_templ_w;
                    primeira_passagem_w := false;
                    nr_ehr_reg_atual_w := nr_ehr_reg_templ_w;
              end if;
              select count(1)
              into STRICT verifica_se_linked_w
              from TABELA_ATRIBUTO_LINKED a
              join EHR_TEMPLATE_CONTEUDO  b on (a.NR_SEQ_ELEMENTO = b.NR_SEQUENCIA)
              join PATIENT_IMP_FIE_DET    c ON (a.nr_sequencia = c.NR_SEQ_TAB_ATRI_LINKED)
              where 1=1
              and a.NR_SEQ_ELEMENTO = nr_seq_template_conteudo_w
              and c.OBX_NAME_SYSTEM = obx_name_system_w
              and c.OBX_CODE_SYSTEM = obx_code_system_w;
              if (verifica_se_linked_w >= 1) then
                 atualiza_reg_elemento_w := false;
                 select a.NR_SEQ_LINKED,
                        a.NM_ATRIBUTO,
                        a.ie_tipo_atributo
                 into STRICT nr_seq_linked_data_w,
                      nm_atributo_w,
                      ie_tipo_atributo_w
                 from  TABELA_ATRIBUTO_LINKED a
                 join EHR_TEMPLATE_CONTEUDO  b on (a.NR_SEQ_ELEMENTO = b.NR_SEQUENCIA)
                 join PATIENT_IMP_FIE_DET    c ON (a.nr_sequencia = c.NR_SEQ_TAB_ATRI_LINKED)
                 where 1=1
                 and a.NR_SEQ_ELEMENTO = nr_seq_template_conteudo_w
                 and c.OBX_NAME_SYSTEM = obx_name_system_w
                 and c.OBX_CODE_SYSTEM = obx_code_system_w;
                 ds_comando_w := 'select nvl(max(nr_sequencia),0)
                                    from EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                  ' where  nr_seq_template     ='||nr_seq_template_atual_w||
                                  ' and    nr_seq_linked_data  ='||nr_seq_linked_data_w||
                                  ' and    nr_seq_reg_template ='||nr_ehr_reg_atual_w;

                 seq_tab_temp_w := obter_valor_dinamico(ds_comando_w, seq_tab_temp_w);
                 --
                 if Vetor_w[i].obx4 = 'PROC'  then
                   ds_value_w   := obter_conv_receb('PROC_INTERNO','NR_SEQUENCIA', NULL, Vetor_w[i].vl_field);
                   if (ds_value_w IS NOT NULL AND ds_value_w::text <> '') then
                      Vetor_w[i].vl_field    :=  ds_value_w;
                   else
                      Vetor_w[i].vl_field    :=  Vetor_w[i].vl_field;
                   end if;
                 end if;
                 --
                 IF ie_operacao_p = 'I' THEN -- 
                   if (seq_tab_temp_w = 0) then
                       ds_comando_w := 'select EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||'_seq.nextval from dual';
                       seq_tab_temp_w := obter_valor_dinamico(ds_comando_w, seq_tab_temp_w);
                       if (UPPER(ie_tipo_atributo_w)='DATE')then
                           ds_comando_w := 'insert into  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                 '(nr_sequencia,
                                   nr_seq_template,
                                   nr_seq_linked_data,
                                   nr_seq_reg_template,
                                   nm_usuario,
                                   dt_atualizacao,
                                   nm_usuario_nrec,
                                   dt_atualizacao_nrec,'
                                   ||nm_atributo_w||')
                              values
                                   ('||seq_tab_temp_w||',
                                    '|| nr_seq_template_atual_w ||',
                                    '||nr_seq_linked_data_w     ||',
                                    '||nr_ehr_reg_atual_w       ||',
                                    '||CHR(39)||nm_usuario_p ||CHR(39)||',
                                    '||'to_date('||CHR(39)||sysdate_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                    '||CHR(39)||nm_usuario_p ||CHR(39)||',
                                    '||'to_date('||CHR(39)||sysdate_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                    '||'(SELECT to_date('||Vetor_w[i].vl_field||','||CHR(39)||'yyyymmdd hh24miss'||CHR(39)||')FROM DUAL)'||' )';

                                    
                       else
                           ds_comando_w := 'insert into  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                       '(nr_sequencia,
                                         nr_seq_template,
                                         nr_seq_linked_data,
                                         nr_seq_reg_template,
                                         nm_usuario,
                                         dt_atualizacao,
                                         nm_usuario_nrec,
                                         dt_atualizacao_nrec,'
                                         ||nm_atributo_w||')
                                    values
                                         ('||seq_tab_temp_w||',
                                          '|| nr_seq_template_atual_w ||',
                                          '||nr_seq_linked_data_w     ||',
                                          '||nr_ehr_reg_atual_w       ||',
                                          '||CHR(39)||nm_usuario_p ||CHR(39)||',
                                          '||'to_date('||CHR(39)||sysdate_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                          '||CHR(39)||nm_usuario_p ||CHR(39)||',
                                          '||'to_date('||CHR(39)||sysdate_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                          '||CHR(39)||Vetor_w[i].vl_field||CHR(39)||')';
                       end if;
                       CALL exec_sql_dinamico('TASY', ds_comando_w);
                       commit;
                       if (template_p IS NOT NULL AND template_p::text <> '') then
                           template_p :=  template_p||seq_tab_temp_w||','||nr_seq_template_atual_w||','||nr_seq_linked_data_w||';';
                       else
                           template_p :=  seq_tab_temp_w||','||nr_seq_template_atual_w||','||nr_seq_linked_data_w||';';
                       end if;
                       open c02(nr_seq_linked_data_w,
                                 nr_seq_template_atual_w);
                       loop
                       fetch c02
                        into nm_atributo_padrao_w,vl_padrao_w,ie_tipo_atributo_w;
                        if substr(coalesce(vl_padrao_w,0),1,1) = '@' then
                          if ( upper(replace(vl_padrao_w, '@', '')) = 'SYSDATE'and UPPER(ie_tipo_atributo_w)='DATE' ) then
                              vl_padrao_w := sysdate_w;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'NR_ATENDIMENTO' then
                              vl_padrao_w := nr_atendimento_p;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'CD_PESSOA_FISICA' then
                              vl_padrao_w := cd_pessoa_fisica_w;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'PESSOA_USUARIO' then
                               select CD_MEDICO_ATENDIMENTO
                               into STRICT vl_padrao_w
                               from atendimento_paciente
                               where nr_atendimento = nr_atendimento_p;
                               if (coalesce(vl_padrao_w::text, '') = '') then
                                   begin
                                    select CD_PESSOA_FISICA
                                       into STRICT vl_padrao_w
                                       from usuario
                                    where upper(nm_usuario) = 'INTEGRATION';
                                   exception
                                    when no_data_found then
                                         vl_padrao_w := '1';
                                   end;
                               end if;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'SETOR_USUARIO' then
                              SELECT OBTER_SETOR_ATUAL_PACIENTE(NR_ATENDIMENTO_P)
                              INTO STRICT vl_padrao_w
;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'CD_PACIENTE' then
                               vl_padrao_w :=  cd_pessoa_fisica_w;
                          else
                              vl_padrao_w := null;
                          end if;
                        else
                          if (UPPER(ie_tipo_atributo_w)='DATE' and upper(vl_padrao_w) = 'SYSDATE') then
                               vl_padrao_w := sysdate_w;
                          elsif upper(nm_atributo_padrao_w) = 'CD_PACIENTE' then
                               vl_padrao_w :=  cd_pessoa_fisica_w;
                          elsif upper(nm_atributo_padrao_w) = 'NR_ATENDIMENTO' then
                               vl_padrao_w := nr_atendimento_p;
                          else
                               vl_padrao_w := vl_padrao_w;
                          end if;
                        end if;
                        if (UPPER(ie_tipo_atributo_w)='DATE')then
                            ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                   ' set '||nm_atributo_padrao_w||' = '||'to_date('||CHR(39)||vl_padrao_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||
                                   'where nr_sequencia = '||seq_tab_temp_w ||' and '||nm_atributo_padrao_w||' is null';
                        else
                            ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                            ' set '||nm_atributo_padrao_w||' = '||CHR(39)||vl_padrao_w||CHR(39)||
                            ' where nr_sequencia = '||seq_tab_temp_w ||' and '||nm_atributo_padrao_w||' is null';
                        end if;
                        CALL exec_sql_dinamico('TASY', ds_comando_w);
                        commit;
                        EXIT WHEN NOT FOUND; /* apply on c02 */
                       end loop;
                       nm_atributo_padrao_w := null;
                       vl_padrao_w          := null;
                       ie_tipo_atributo_w   := null;
                       close c02;
                   elsif (seq_tab_temp_w >0 ) then
                        ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                       ' set '||nm_atributo_w||' = '||CHR(39)||Vetor_w[i].vl_field||CHR(39)||' where nr_sequencia = '||seq_tab_temp_w;
                        CALL exec_sql_dinamico('TASY', ds_comando_w);
                        commit;
                        IF (UPPER(ie_tipo_atributo_w)='DATE')THEN
                            ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                       ' set '||nm_atributo_w||' = ('||'SELECT to_date('||Vetor_w[i].vl_field||','||CHR(39)||'yyyymmdd hh24miss'||CHR(39)||')FROM DUAL)
                                        where nr_sequencia = '||seq_tab_temp_w;
                           CALL exec_sql_dinamico('TASY', ds_comando_w);
                           commit;
                        END IF;

                        open c02(nr_seq_linked_data_w,
                                  nr_seq_template_atual_w);
                        loop
                        fetch c02
                        into nm_atributo_padrao_w,vl_padrao_w,ie_tipo_atributo_w;
                        if substr(coalesce(vl_padrao_w,0),1,1) = '@' then
                          if ( upper(replace(vl_padrao_w, '@', '')) = 'SYSDATE'and UPPER(ie_tipo_atributo_w)='DATE' ) then
                              vl_padrao_w := sysdate_w;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'NR_ATENDIMENTO' then
                              vl_padrao_w := nr_atendimento_p;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'CD_PESSOA_FISICA' then
                              vl_padrao_w := cd_pessoa_fisica_w;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'PESSOA_USUARIO' then
                               select CD_MEDICO_ATENDIMENTO
                               into STRICT vl_padrao_w
                               from atendimento_paciente
                               where nr_atendimento = nr_atendimento_p;
                               if (coalesce(vl_padrao_w::text, '') = '') then
                                   begin
                                    select CD_PESSOA_FISICA
                                       into STRICT vl_padrao_w
                                       from usuario
                                    where upper(nm_usuario) = 'INTEGRATION';
                                   exception
                                    when no_data_found then
                                         vl_padrao_w := '1';
                                   end;
                               end if;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'SETOR_USUARIO' then
                              SELECT OBTER_SETOR_ATUAL_PACIENTE(NR_ATENDIMENTO_P)
                              INTO STRICT vl_padrao_w
;
                          elsif upper(replace(vl_padrao_w, '@', '')) = 'CD_PACIENTE' then
                               vl_padrao_w :=  cd_pessoa_fisica_w;
                          else
                              vl_padrao_w := null;
                          end if;
                        else
                          if (UPPER(ie_tipo_atributo_w)='DATE' and upper(vl_padrao_w) = 'SYSDATE') then
                               vl_padrao_w := sysdate_w;
                          elsif upper(nm_atributo_padrao_w) = 'CD_PACIENTE' then
                               vl_padrao_w :=  cd_pessoa_fisica_w;
                          elsif upper(nm_atributo_padrao_w) = 'NR_ATENDIMENTO' then
                               vl_padrao_w := nr_atendimento_p;
                          else
                               vl_padrao_w := vl_padrao_w;
                          end if;
                        end if;
                        if (UPPER(ie_tipo_atributo_w)='DATE')then
                            ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                   ' set '||nm_atributo_padrao_w||' = '||'to_date('||CHR(39)||vl_padrao_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||
                                   'where nr_sequencia = '||seq_tab_temp_w ||' and '||nm_atributo_padrao_w||' is null';
                        else
                            ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                            ' set '||nm_atributo_padrao_w||' = '||CHR(39)||vl_padrao_w||CHR(39)||
                            ' where nr_sequencia = '||seq_tab_temp_w ||' and '||nm_atributo_padrao_w||' is null';
                        end if;
                        CALL exec_sql_dinamico('TASY', ds_comando_w);
                        commit;
                        EXIT WHEN NOT FOUND; /* apply on c02 */
                        end loop;
                        nm_atributo_padrao_w := null;
                        vl_padrao_w          := null;
                        ie_tipo_atributo_w   := null;
                        close c02;
                   end if;
                   select nextval('patient_data_imp_final_seq')
                        into STRICT nr_seq_data_imp_final
;
                   --
                   select nm_table into STRICT nm_table_w
                   from linked_data where nr_sequencia = nr_seq_linked_data_w;

                   if Vetor_w[i](.obx14 IS NOT NULL AND .obx14::text <> '') then
                     dt_resultado_w    := Vetor_w[i].obx14;
                   else
                     dt_resultado_w := null;
                   end if;

                   ds_comando_w := 'insert into  patient_data_imp_final
                                    (nr_sequencia,
                                     dt_atualizacao,
                                     nm_usuario,
                                     dt_atualizacao_nrec,
                                     nm_usuario_nrec,
                                     nm_tabela,
                                     nm_atributo,
                                     nm_source_system,
                                     nr_seq_fk,
                                     dt_resultado,
                                     ie_resultado,
                                     nr_seq_linked_data,
                                     nr_seq_template,
                                     nr_seq_record_template,
                                     nr_seq_pat_imp_obr,
                                     ds_justificativa)
                              values
                                   ('||nr_seq_data_imp_final ||',
                                    '||'to_date('||CHR(39)||sysdate_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                    '||CHR(39)||nm_usuario_p ||CHR(39)||',
                                    '||'to_date('||CHR(39)||sysdate_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                    '||CHR(39)||nm_usuario_p ||CHR(39)||',
                                    '||CHR(39)||nm_table_w||CHR(39)||',
                                    '||CHR(39)||nm_atributo_w||CHR(39)||',
                                    '||CHR(39)||source_system_p||CHR(39)||',
                                    '||CHR(39)||null||CHR(39)||',
                                    '||'to_date('||CHR(39)||dt_resultado_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                    '||CHR(39)||Vetor_w[i].obx11||CHR(39)||',
                                    '||nr_seq_linked_data_w||',
                                    '||nr_seq_template_atual_w||',
                                    '||seq_tab_temp_w ||',
                                    '||nr_seq_import_obr_p||',
                                    '||CHR(39)||Vetor_w[i].obx15||CHR(39)||')';
                  CALL exec_sql_dinamico('TASY', ds_comando_w);
                 else -- ie_operacao_p U,D
                   select max(nr_seq_template)
                     into STRICT nr_seq_template_atual_w
                     from patient_data_imp_final a
                    where a.nr_seq_pat_imp_obr = nr_seq_import_obr_p
                      and a.nr_seq_linked_data = nr_seq_linked_data_w;
                   FOR r3 IN c03(nr_seq_linked_data_w,
                                nr_seq_template_atual_w,
                                nm_atributo_w,
                                nr_seq_import_obr_p  )
                     LOOP
                       if ie_operacao_p = 'U' then
                          ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                         ' set '||nm_atributo_w||' = '||CHR(39)||Vetor_w[i].vl_field||CHR(39)||
                                         ' where nr_sequencia = '||r3.nr_seq_record_template;

                       elsif ie_operacao_p = 'D' then
                          ds_comando_w := 'update  EHR_LINKED_'||nr_seq_template_atual_w||'_'||nr_seq_linked_data_w||
                                         ' set '||nm_atributo_w||' = '||CHR(39)||null||CHR(39)||
                                         ' where nr_sequencia = '||r3.nr_seq_record_template;
                       end if;
                       CALL exec_sql_dinamico('TASY', ds_comando_w);
                       if r3.ie_resultado <> Vetor_w[i].obx11 then
                          ds_comando_w := 'update  patient_data_imp_final'||
                                           ' set ie_resultado     = '||CHR(39)||Vetor_w[i].obx11||CHR(39)||',
                                                 ds_justificativa = '||CHR(39)||Vetor_w[i].obx15||CHR(39)||',
                                                 dt_atualizacao = '||'to_date('||CHR(39)||sysdate_w||CHR(39)||','||CHR(39)||'yyyymmddhh24miss'||CHR(39)||')'||',
                                                 nm_usuario       = '||CHR(39)||nm_usuario_p ||CHR(39)||'
                                            where nr_seq_record_template = '||r3.nr_seq_record_template||
                                           ' and  nr_seq_linked_data  = '||nr_seq_linked_data_w ||
                                           ' and  nr_seq_template     = '||nr_seq_template_atual_w||
                                           ' and  nm_atributo         = '||CHR(39)||nm_atributo_w||CHR(39)||
                                           ' and  nr_seq_pat_imp_obr  = '||nr_seq_import_obr_p;
                       end if;
                       CALL exec_sql_dinamico('TASY', ds_comando_w);
                       commit;

                       if coalesce(ds_template_w,'o') <> r3.nr_seq_record_template||','||nr_seq_template_atual_w||','||nr_seq_linked_data_w||';' then
                        ds_template_w := r3.nr_seq_record_template||','||nr_seq_template_atual_w||','||nr_seq_linked_data_w||';';
                         if (template_p IS NOT NULL AND template_p::text <> '') then
                            template_p :=  template_p||r3.nr_seq_record_template||','||nr_seq_template_atual_w||','||nr_seq_linked_data_w||';';
                         else
                            template_p :=  r3.nr_seq_record_template||','||nr_seq_template_atual_w||','||nr_seq_linked_data_w||';';
                         end if;
                       end if;
                     END LOOP;
                   end if;
                end if;
                IF ie_operacao_p = 'I' THEN
                  if (is_number(Vetor_w[i].vl_field) and (atualiza_reg_elemento_w)) then
                      nr_sequencia2_w := Atualizar_Reg_Elemento( nr_seq_template_conteudo_w, nr_ehr_reg_atual_w, NR_SEQ_ELEMENTO_w, nm_usuario_p, null, Vetor_w[i].vl_field, clock_timestamp(), null, null, nr_sequencia2_w);
                      atualiza_reg_elemento_w := true;
                      reg_atualizado          := 1;
                  elsif((is_number(Vetor_w[i].vl_field) = false) and (atualiza_reg_elemento_w)) then
                      nr_sequencia2_w := Atualizar_Reg_Elemento( nr_seq_template_conteudo_w, nr_ehr_reg_atual_w, NR_SEQ_ELEMENTO_w, nm_usuario_p, CHR(39)||Vetor_w[i].vl_field||CHR(39), null, clock_timestamp(), null, null, nr_sequencia2_w);
                      atualiza_reg_elemento_w := true;
                      reg_atualizado          := 1;
                  end if;
                END IF;
            END IF;
            if (reg_atualizado = 1 and coalesce(template_p::text, '') = '' ) then
               update ehr_reg_template e
               set    e.dt_liberacao   = clock_timestamp(),
                      e.nm_usuario     = nm_usuario_p
               where e.nr_sequencia    = nr_ehr_reg_atual_w;
              --
              update ehr_registro e
               set    e.dt_liberacao         = clock_timestamp(),
                      e.nm_usuario_liberacao = nm_usuario_p
               where e.nr_sequencia          = (SELECT t.nr_seq_reg from ehr_reg_template t
                                                where t.nr_sequencia = nr_ehr_reg_atual_w );
              commit;
               template_p := '-1'||';';
            end if;
        END;
      END LOOP;
    end  loop;
    close   c01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE patient_data_import ( ds_parametros_p text, nm_usuario_p text, nr_atendimento_p bigint , source_system_p text default null, ie_operacao_p text default null, nr_seq_import_obr_p bigint default null, template_p out text) is TYPE campos IS RECORD ( obx31 varchar(100), obx33 varchar(100) DEFAULT NULL, vl_field varchar(100) DEFAULT NULL, obx4 varchar(10) DEFAULT NULL, obx11 varchar(1) DEFAULT NULL, obx14 varchar(20) DEFAULT NULL, obx15 varchar(4000) DEFAULT NULL, ds_lista text  DEFAULT NULL) FROM PUBLIC;

