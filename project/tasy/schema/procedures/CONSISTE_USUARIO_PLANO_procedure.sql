-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_usuario_plano ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_plano_p text, cd_usuario_convenio_p text, ie_usuario_plano_p INOUT text, ie_regra_bloqueio_p INOUT text, ds_plano_regra_p INOUT text) AS $body$
DECLARE


ds_retorno_w		varchar(2)	:= 'S';

qt_registro_w		bigint;
nr_pos_inicial_w	smallint;
nr_pos_final_w		smallint;
cd_usuario_padrao_w	varchar(30);
ie_regra_bloqueio_w	varchar(1);
cd_usuario_padrao_ww	varchar(4000);

qt_outra_plano_w	bigint;
ie_encontrou_w		varchar(1);

nr_pos_inicial_ww	smallint;
nr_pos_final_ww		smallint;
nr_seq_regra_w		bigint;

c01 CURSOR FOR
	SELECT	nr_pos_inicial,
		nr_pos_final,
		cd_usuario_padrao,
		coalesce(ie_regra_bloqueio,'B')
	from	conv_regra_usuario_plano
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_convenio	        = cd_convenio_p
	and	cd_plano	        = cd_plano_p
	order by coalesce(ie_regra_bloqueio,'B'); -- Não alterar o order by, pois a última tem que ser o 'X'
-- Somente as excessões
c02 CURSOR FOR
	SELECT	nr_pos_inicial,
		nr_pos_final,
		cd_usuario_padrao
	from	conv_regra_usuario_plano
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_convenio	        = cd_convenio_p
	and	cd_plano	        = cd_plano_p
	and 	coalesce(ie_regra_bloqueio,'B') <> 'X';


BEGIN

cd_usuario_padrao_ww	:= '';
ie_encontrou_w		:= 'N';

select	count(*)
into STRICT	qt_registro_w
from	conv_regra_usuario_plano
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_convenio 	   = cd_convenio_p
and	cd_plano           = cd_plano_p;

if (qt_registro_w	> 0) then

	open c01;
	loop
	fetch c01 into
		nr_pos_inicial_w,
		nr_pos_final_w,
		cd_usuario_padrao_w,
		ie_regra_bloqueio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		cd_usuario_padrao_ww	:= cd_usuario_padrao_ww ||','||cd_usuario_padrao_w;
		ds_retorno_w			:= obter_se_contido_char(substr(cd_usuario_convenio_p,nr_pos_inicial_w,(nr_pos_final_w - nr_pos_inicial_w) + 1),cd_usuario_padrao_ww);

		if (ds_retorno_w = 'S')  then
		      ie_encontrou_w:= 'S';
		end if;

		end;
	end loop;
	close c01;


	if (ie_regra_bloqueio_w = 'X') then

		open c02;
		loop
		fetch c02 into
			nr_pos_inicial_ww,
			nr_pos_final_ww,
			cd_usuario_padrao_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			cd_usuario_padrao_ww	:= cd_usuario_padrao_ww ||','||cd_usuario_padrao_w;
			ds_retorno_w	:= 	obter_se_contido_char(substr(cd_usuario_convenio_p,nr_pos_inicial_ww,(nr_pos_final_ww - nr_pos_inicial_ww) + 1),cd_usuario_padrao_ww);

			if (ds_retorno_w = 'S')  then
			      ie_encontrou_w:= 'X';
			end if;

			end;
		end loop;
		close c02;


		if (ie_encontrou_w = 'S')  then
			ds_retorno_w:= 'N';
		elsif (ie_encontrou_w = 'N')  then
			ds_retorno_w:= 'S';
		elsif (ie_encontrou_w = 'X')  then
			ds_retorno_w:= 'S';
		end if;

	else
		if (ie_encontrou_w = 'S') then
			ds_retorno_w:= 'S';
		else
			ds_retorno_w	:= obter_se_contido_char(substr(cd_usuario_convenio_p,nr_pos_inicial_w,(nr_pos_final_w - nr_pos_inicial_w) + 1),cd_usuario_padrao_ww);
		end if;
	end if;

end if;

select	count(*)
into STRICT	qt_outra_plano_w
from	conv_regra_usuario_plano
where	cd_estabelecimento	= cd_estabelecimento_p
and	cd_convenio		= cd_convenio_p
and	cd_plano		<> cd_plano_p
and 	ie_regra_bloqueio	<> 'X'
and	substr(cd_usuario_convenio_p,nr_pos_inicial,(nr_pos_final - nr_pos_inicial) + 1)	= cd_usuario_padrao;

if (qt_outra_plano_w	> 0) and
	((ds_retorno_w		<> 'S') or (qt_registro_w	= 0)) then
	ds_retorno_w		:= 'C';
end if;

if (ds_retorno_w = 'C') then
	begin
	select	max(nr_sequencia)
	into STRICT 	nr_seq_regra_w
	from	conv_regra_usuario_plano
	where	cd_estabelecimento	= cd_estabelecimento_p
	and		cd_convenio = cd_convenio_p
	and 	cd_plano <> cd_plano_p
	and 	cd_usuario_padrao = substr(cd_usuario_convenio_p,nr_pos_inicial,(nr_pos_final - nr_pos_inicial) + 1)
	and 	ie_regra_bloqueio	<> 'X';

	Select	substr(af_obter_desc_plano_conv(cd_plano, cd_convenio_p),1,255)
	into STRICT	ds_plano_regra_p
	from 	conv_regra_usuario_plano
	where 	nr_sequencia = nr_seq_regra_w;
	end;
end if;

ie_usuario_plano_p		:= coalesce(ds_retorno_w,'S');
ie_regra_bloqueio_p		:= coalesce(ie_regra_bloqueio_w,'B');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_usuario_plano ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_plano_p text, cd_usuario_convenio_p text, ie_usuario_plano_p INOUT text, ie_regra_bloqueio_p INOUT text, ds_plano_regra_p INOUT text) FROM PUBLIC;

