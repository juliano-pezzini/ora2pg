-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE far_gerar_meta_resumo (nr_seq_meta_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_meta_w		bigint;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
nr_seq_vendedor_w	bigint;
cd_grupo_material_w	smallint;
cd_subgrupo_material_w	smallint;
cd_classe_material_w	integer;
cd_material_w		integer;
nr_seq_pedido_w		bigint;
nr_seq_item_w		bigint;
cd_material_venda_w	integer;
vl_total_item_w		double precision;
nr_sequencia_w		bigint;
qt_meta_w		bigint;
qt_existe_w		bigint;


c01 CURSOR FOR
SELECT	nr_sequencia,
	dt_vigencia_inicial,
	dt_vigencia_final
from	far_meta_venda
where	nr_sequencia 		= coalesce(nr_seq_meta_p,0)
or	coalesce(nr_seq_meta_p,0) 	= 0
and	dt_vigencia_inicial		<= trunc(clock_timestamp())
and	dt_vigencia_final		>= trunc(clock_timestamp() - interval '1 days');

c02 CURSOR FOR
SELECT	nr_seq_vendedor
from	far_meta_vendedor
where	nr_seq_meta	= nr_seq_meta_w;

c03 CURSOR FOR
SELECT	max(coalesce(cd_grupo_material,0)),
	max(coalesce(cd_subgrupo_material,0)),
	max(coalesce(cd_classe_material,0)),
	max(coalesce(cd_material,0))
from	far_meta_estrutura
where	nr_seq_meta 	= nr_seq_meta_w;

c04 CURSOR FOR
SELECT	b.nr_seq_pedido,
	b.nr_seq_item,
	b.cd_material,
	b.vl_total_item
from	far_pedido a,
	far_pedido_item b,
	estrutura_material_v c
where	a.nr_seq_vendedor		= nr_seq_vendedor_w
and	b.nr_seq_pedido		= a.nr_sequencia
and	c.cd_material 		= b.cd_material
and	(a.dt_fechamento IS NOT NULL AND a.dt_fechamento::text <> '')
and	ie_classificacao = 'P'
and	trunc(a.dt_fechamento) between dt_inicial_w and dt_final_w
and	((c.cd_grupo_material = cd_grupo_material_w) or (cd_grupo_material_w = 0))
and	((c.cd_subgrupo_material = cd_subgrupo_material_w) or (cd_subgrupo_material_w = 0))
and	((c.cd_classe_material = cd_classe_material_w) or (cd_classe_material_w = 0))
and	((c.cd_material = cd_material_w) or (cd_material_w = 0));



BEGIN

open c01;
loop
fetch c01 into
	nr_seq_meta_w,
	dt_inicial_w,
	dt_final_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	delete
	from	far_meta_resumo
	where	nr_seq_meta	= nr_seq_meta_w;

	commit;

	open c02;
	loop
	fetch c02 into
		nr_seq_vendedor_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	count(*)
		into STRICT	qt_meta_w
		from	far_meta_estrutura
		where	nr_seq_meta = nr_seq_meta_w;

		if (qt_meta_w > 0) then
			begin

			open c03;
			loop
			fetch c03 into
				cd_grupo_material_w,
				cd_subgrupo_material_w,
				cd_classe_material_w,
				cd_material_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin

				open c04;
				loop
				fetch c04 into
					nr_seq_pedido_w,
					nr_seq_item_w,
					cd_material_w,
					vl_total_item_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
					begin

					select	count(*)
					into STRICT	qt_existe_w
					from	far_meta_resumo
					where	nr_seq_meta	= nr_seq_meta_w
					and	nr_seq_vendedor	= nr_seq_vendedor_w
					and	nr_seq_pedido	= nr_seq_pedido_w
					and	nr_seq_item	= nr_seq_item_w
					and	cd_material	= cd_material_w;

					if (qt_existe_w = 0) then
						begin

						select	nextval('far_meta_resumo_seq')
						into STRICT	nr_sequencia_w
						;

						insert into far_meta_resumo(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_seq_meta,
							nr_seq_vendedor,
							nr_seq_pedido,
							nr_seq_item,
							cd_material,
							vl_item) values (
								nr_sequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_meta_w,
								nr_seq_vendedor_w,
								nr_seq_pedido_w,
								nr_seq_item_w,
								cd_material_w,
								vl_total_item_w);
						commit;

						end;
					end if;

					end;
				end loop;
				close c04;

				end;
			end loop;
			close c03;

			end;
		end if;

		end;
	end loop;
	close c02;

	end;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE far_gerar_meta_resumo (nr_seq_meta_p bigint, nm_usuario_p text) FROM PUBLIC;

