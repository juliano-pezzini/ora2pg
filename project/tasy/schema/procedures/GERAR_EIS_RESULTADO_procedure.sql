-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE conta AS (nr_interno_conta bigint, ie_atualiza_taxa_adm varchar(15), nm_usuario varchar(15));


CREATE OR REPLACE PROCEDURE gerar_eis_resultado ( dt_parametro_p timestamp, nm_usuario_p text) AS $body$
DECLARE

type vetor_conta is table of conta index by integer;

nr_sequencia_w			bigint;	
nr_sequencia_ww			bigint;	
nr_sequencia_www		bigint;
dt_atualizacao_w			timestamp;
dt_parametro_inicio_w		timestamp;
dt_parametro_fim_w			timestamp;
dt_referencia_w			timestamp;
ie_periodo_w			varchar(1)       := 'M';
ie_conta_aberta_w			varchar(1)       := 'S';
nr_interno_conta_w			bigint;
ds_erro_w			varchar(2000);
cd_estabelecimento_w		smallint;
cd_convenio_w			integer;
cd_setor_atendimento_w	integer;
cd_setor_paciente_w	integer;
ie_tipo_atendimento_w		smallint;
cd_especialidade_w		integer;
nr_seq_grupo_rec_w		bigint;
dt_receita_w			timestamp;
dt_entrega_w			timestamp;
ie_protocolo_w		varchar(02);
ie_proc_mat_w			varchar(01);
cd_conta_contabil_w		varchar(20);
ie_complexidade_w			varchar(02);
ie_pacote_w			varchar(01);
cd_estrutura_conta_w	varchar(05);
qt_dia_internacao_w		bigint;
nr_seq_conta_financ_w	double precision;
cd_categoria_w			varchar(10);
vl_procedimento_w		double precision;
vl_material_w			double precision;
vl_terceiro_w			double precision;
vl_custo_w			double precision;
vl_desconto_w			double precision;
vl_imposto_w			double precision;
vl_original_w			double precision;
vl_hospital_w			double precision;
vl_repasse_calc_w			double precision;
ie_atualiza_taxa_adm_w		varchar(1)		:= 'N';
nm_usuario_w			varchar(15);
qt_atend_w			bigint;
qt_conta_w			bigint;
cd_plano_w			varchar(10);
nr_conta_w			bigint;
nr_atendimento_w			bigint;
ie_repasse_w			varchar(01);
ie_tipo_financ_proc_w		varchar(4);
vl_custo_excluido_w		double precision;
vetor_conta_w			vetor_conta;
i				integer;
k				integer;
/*Geliard em 05/08/2010 OS235130*/
cd_forma_organizacao_w     integer;
cd_subgrupo_w          smallint;
cd_grupo_w           smallint;
ie_complexidade_sus_w			varchar(2);
cd_convenio_atend_w				bigint;
cd_centro_custo_w				integer;
ie_gerar_eis_fatur_diario_w		varchar(1):= 'S';
NR_SEQ_AGRUP_CLASSIF_w			bigint;
nr_seq_classif_medico_w			bigint;
nr_seq_classificacao_w			bigint;
qt_resumo_w				double precision;
cd_cgc_prestador_w		varchar(14);
nr_prescricao_w			bigint:= 0;
cd_medico_prescr_w		varchar(10);
ie_consiste_simultaneo_w	varchar(1);
ie_complex_princ_sus_w		eis_Resultado.ie_complex_princ_sus%type;
ie_tipo_convenio_w		convenio.ie_tipo_convenio%type;
cd_procedimento_apac_w		sus_apac_unif.cd_procedimento%type;

ie_resultado_hosp_novo_w	varchar(1);
ie_comp_proc_pric_sus_w		varchar(15) := 'N';
ie_tipo_financiamento_w		sus_procedimento.ie_tipo_financiamento%type;

C00 CURSOR FOR 
SELECT	count(distinct t.nr_atendimento), 
	count(distinct a.nr_interno_conta), 
	PKG_DATE_UTILS.start_of(a.dt_mesano_referencia,'month', 0), 
	coalesce(PKG_DATE_UTILS.start_of(b.dt_referencia,'month', 0),PKG_DATE_UTILS.start_of(a.dt_mesano_referencia,'month', 0)), 
	a.cd_estabelecimento, 
	a.cd_convenio_parametro, 
	coalesce(b.cd_setor_atendimento,0), 
	coalesce(b.cd_setor_paciente,0), 
	t.ie_tipo_atendimento, 
	CASE WHEN coalesce(p.ie_status_protocolo,9)=2 THEN '10' WHEN coalesce(p.ie_status_protocolo,9)=1 THEN '8' WHEN coalesce(p.ie_status_protocolo,9)=3 THEN '9'  ELSE /* Marcus 05/03/2007 protocolo definitivo em auditoria = 3 */
 		CASE WHEN ie_status_acerto=2 THEN '6'  ELSE CASE WHEN coalesce(t.dt_alta::text, '') = '' THEN '2'  ELSE '4' END  END  END , 
	substr(obter_tipo_item_resultado(b.cd_material, b.cd_procedimento, b.ie_origem_proced),1,1), 
	coalesce(b.cd_especialidade,0), 
	coalesce(b.cd_conta_contabil,0), 
	sum(coalesce(vl_procedimento,0) - (coalesce(b.vl_repasse_terceiro,0))), 
	sum(coalesce(b.vl_material,0)), 
	sum(coalesce(b.vl_repasse_terceiro,0)), 
	sum(coalesce(b.vl_repasse_calc,0)), 
	sum(coalesce(b.vl_custo,0)), 
	sum(coalesce(b.vl_desconto,0)), 
	b.nr_seq_grupo_rec, 
	b.cd_estrutura_conta, 
	b.nr_seq_conta_financ, 
	sum(coalesce(b.vl_imposto,0)), 
	coalesce(a.ie_complexidade,'B'), 
	CASE WHEN coalesce(nr_seq_proc_pacote::text, '') = '' THEN 'N'  ELSE 'S' END , 
	sum(coalesce(b.vl_original,0)), 
	a.cd_categoria_parametro, 
	sum(coalesce(b.vl_materiais,0) + coalesce(b.vl_custo_operacional,0) + coalesce(b.vl_material,0)), 
	ROUND(coalesce(t.dt_alta,clock_timestamp()) - dt_entrada), 
	PKG_DATE_UTILS.start_of(coalesce(p.dt_entrega_convenio,clock_timestamp()),'dd', 0), 
	--OBTER_PLANO_CONVENIO_ATEND(t.nr_atendimento, 'C'),	 
	a.nr_interno_conta, 
	a.nr_atendimento, 
	substr(Obter_Tipo_Financ_Proc(b.cd_procedimento, b.ie_origem_proced, '1'),1,4), 
	sum(coalesce(b.vl_custo_excluido,0)), 
	Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','G'), 
	Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','S'), 
	Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','F'), 
	sus_obter_complexidade_proced(b.cd_procedimento, b.ie_origem_proced,'C'), 
	sum(coalesce(b.qt_resumo,0)), 
	b.cd_cgc_prestador, 
	coalesce(b.nr_prescricao,0), 
	sus_obter_tipo_financ_aih(a.nr_interno_conta) 
FROM atendimento_paciente t, conta_paciente_resumo b, conta_paciente a
LEFT OUTER JOIN protocolo_convenio p ON (a.nr_seq_protocolo = p.nr_seq_protocolo)
WHERE a.dt_mesano_referencia between dt_parametro_inicio_w and dt_parametro_fim_w and a.nr_interno_conta   	= b.nr_interno_conta and a.nr_atendimento	   	= t.nr_atendimento  group by 
	PKG_DATE_UTILS.start_of(a.dt_mesano_referencia,'month', 0), 
	a.nr_interno_conta, 
	a.nr_atendimento, 
	PKG_DATE_UTILS.start_of(b.dt_referencia,'month', 0), 
	a.cd_estabelecimento, 
	a.cd_convenio_parametro, 
	b.cd_setor_atendimento, 
	b.cd_setor_paciente, 
	t.ie_tipo_atendimento, 
	CASE WHEN coalesce(p.ie_status_protocolo,9)=2 THEN '10' WHEN coalesce(p.ie_status_protocolo,9)=1 THEN '8' WHEN coalesce(p.ie_status_protocolo,9)=3 THEN '9'  ELSE CASE WHEN ie_status_acerto=2 THEN '6'  ELSE CASE WHEN coalesce(t.dt_alta::text, '') = '' THEN '2'  ELSE '4' END  END  END , 
	substr(obter_tipo_item_resultado(b.cd_material, b.cd_procedimento, b.ie_origem_proced),1,1), 
	b.cd_especialidade, 
	b.cd_conta_contabil, 
	b.nr_seq_grupo_rec, 
	b.cd_estrutura_conta, 
	b.nr_seq_conta_financ, 
	coalesce(a.ie_complexidade,'B'), 
	CASE WHEN coalesce(nr_seq_proc_pacote::text, '') = '' THEN 'N'  ELSE 'S' END , 
	a.cd_categoria_parametro, 
	ROUND(coalesce(t.dt_alta,clock_timestamp()) - dt_entrada), 
	PKG_DATE_UTILS.start_of(coalesce(p.dt_entrega_convenio,clock_timestamp()),'dd', 0), 
	--OBTER_PLANO_CONVENIO_ATEND(t.nr_atendimento, 'C'), 
	Obter_Tipo_Financ_Proc(b.cd_procedimento, b.ie_origem_proced, '1'), 
	Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','G'), 
	Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','S'), 
	Sus_Obter_Estrut_Proc(b.cd_procedimento,b.ie_origem_proced,'C','F'), 
	sus_obter_complexidade_proced(b.cd_procedimento, b.ie_origem_proced,'C'), 
	b.cd_cgc_prestador, 
	coalesce(b.nr_prescricao,0), 
	sus_obter_tipo_financ_aih(a.nr_interno_conta);

C01 CURSOR FOR 
	SELECT a.nr_interno_conta, 
		 coalesce(b.ie_atualiza_taxa_adm,'N'), 
		 a.nm_usuario 
	FROM conta_paciente a
LEFT OUTER JOIN parametro_faturamento b ON (a.cd_estabelecimento = (b.cd_estabelecimento)::numeric)
WHERE a.ie_status_acerto 	= 1 and coalesce(a.ie_cancelamento::text, '') = '' and a.dt_mesano_referencia >= PKG_DATE_UTILS.ADD_MONTH(dt_parametro_inicio_w,-3,0) and ((ie_conta_aberta_w	= 'S') or (ie_conta_aberta_w = 'R' and coalesce(a.dt_geracao_resumo::text, '') = ''));


BEGIN 
 
select	coalesce(max(vl_parametro),'N') 
into STRICT	ie_resultado_hosp_novo_w 
from	funcao_parametro 
where	cd_funcao	= 291 
and	nr_sequencia	= 65;
 
ie_comp_proc_pric_sus_w := coalesce(obter_valor_param_usuario(67,291,obter_perfil_ativo,nm_usuario_p,coalesce(wheb_usuario_pck.get_cd_estabelecimento,0)),'N');
 
if (ie_resultado_hosp_novo_w = 'N') then 
 
	select	coalesce(max(vl_parametro),'N') 
	into STRICT	ie_consiste_simultaneo_w 
	from	funcao_parametro 
	where	cd_funcao	= 291 
	and	nr_sequencia	= 56;
 
	if (ie_consiste_simultaneo_w = 'S') then 
 
		CALL gravar_processo_longo('','GERAR_EIS_RESULTADO',null);
 
		begin 
		SELECT	WHEB_MENSAGEM_PCK.get_texto(277723) || chr(10) || 
			WHEB_MENSAGEM_PCK.get_texto(277724) || program || chr(10) || 
			WHEB_MENSAGEM_PCK.get_texto(277725) || sid   || ',' || serial# || chr(10) || 
			WHEB_MENSAGEM_PCK.get_texto(277726) || osuser || CHR(10) || 
			WHEB_MENSAGEM_PCK.get_texto(277727) || machine 
		INTO STRICT	ds_erro_w 
		FROM 	v$session 
		WHERE	audsid <> (SELECT userenv('sessionid') ) 
		AND	username = (select username from v$session where audsid = (select userenv('sessionid') )) 
		AND	action like 'GERAR_EIS_RESULTADO%';
		exception 
		when others then 
			ds_erro_w := '';
		end;
 
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
			CALL gravar_processo_longo('','',null);
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(233455,'DS_ERRO_P='||ds_erro_w);	
		end if;
		 
	end if;
 
	nr_sequencia_w := Gravar_Log_Indicador(81, WHEB_MENSAGEM_PCK.get_texto(277721), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p, 'dd',0), nm_usuario_p, nr_sequencia_w);
 
	select coalesce(max(IE_CONTA_PROV_RESULT),'N') 
	into STRICT	ie_conta_aberta_w 
	from 	eis_parametro;
	if (ie_conta_aberta_w = 'T') and (PKG_DATE_UTILS.extract_field('HOUR',clock_timestamp()) in ('21','22','23','00','01','02','03','04','05','06')) then 
		ie_conta_aberta_w := 'S';
	elsif (ie_conta_aberta_w = 'P') and (PKG_DATE_UTILS.extract_field('HOUR',clock_timestamp()) in ('05','12')) then 
		ie_conta_aberta_w := 'S';
	elsif (ie_conta_aberta_w = 'M') and (PKG_DATE_UTILS.extract_field('HOUR',clock_timestamp()) in ('00')) then 
		ie_conta_aberta_w := 'S';
	end if;
	commit;
	dt_atualizacao_w			:= clock_timestamp();
	dt_parametro_fim_w			:= pkg_date_utils.end_of(dt_parametro_p, 'MONTH', 0);
	dt_parametro_fim_w			:= pkg_date_utils.get_time(dt_parametro_fim_w, 23,59,59,0);
	dt_parametro_fim_w			:= PKG_DATE_UTILS.ADD_MONTH(dt_parametro_fim_w,1,0);
	dt_parametro_Inicio_w		 	:= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0);
	dt_referencia_w          	:= PKG_DATE_UTILS.start_of(dt_parametro_p,'month', 0);
	i					:= 1;
	/*OPEN C01; 
	LOOP 
	FETCH C01 into 	 
		nr_interno_conta_w, 
		ie_atualiza_taxa_adm_w, 
		nm_usuario_w; 
	EXIT WHEN C01%NOTFOUND; 
		begin 
 
		begin 
		Atualizar_Resumo_Conta(nr_interno_conta_w, 2); 
		if	(ie_atualiza_taxa_adm_w	= 'S') then 
			atualizar_taxa_especial(nr_interno_conta_w,nm_usuario_w); 
		end if; 
		exception 
		when others then 
			nm_usuario_w	:= nm_usuario_w; 
		end; 
 
		end; 
	END LOOP; 
	CLOSE C01;*/
 
 
	/* OS 123866 Fabrício e Edílson Comentado o cursor acima e subtituído por esse abaixo*/
 
 
	nr_sequencia_ww := Gravar_Log_Indicador(81, WHEB_MENSAGEM_PCK.get_texto(277720), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p,'dd',0), nm_usuario_p, nr_sequencia_ww);
	OPEN C01;
	LOOP 
	FETCH C01 into 	 
		nr_interno_conta_w, 
		ie_atualiza_taxa_adm_w, 
		nm_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		vetor_conta_w[i].nr_interno_conta	:= nr_interno_conta_w;
		vetor_conta_w[i].ie_atualiza_taxa_adm	:= ie_atualiza_taxa_adm_w;
		vetor_conta_w[i].nm_usuario		:= nm_usuario_w;	
		i	:= i + 1;		
		end;
	END LOOP;
	CLOSE C01;
 
	i 	:= vetor_conta_w.count;
	for k in 1.. i loop 
		begin 
		 
		begin 
		CALL Atualizar_Resumo_Conta(Vetor_conta_w[k].nr_interno_conta, 2);
		if (Vetor_conta_w[k].ie_atualiza_taxa_adm = 'S') then 
			CALL atualizar_taxa_especial(Vetor_conta_w[k].nr_interno_conta, Vetor_conta_w[k].nm_usuario);
		end if;
		exception 
		when others then 
			nm_usuario_w	:= nm_usuario_w;
		end;
		 
		commit;
		end;
	end loop;
 
	commit;
	CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_ww);
 
	delete from eis_Resultado 
	where dt_referencia between dt_parametro_inicio_w and dt_parametro_fim_w;
 
 
	nr_sequencia_www := Gravar_Log_Indicador(81, WHEB_MENSAGEM_PCK.get_texto(277718), clock_timestamp(), PKG_DATE_UTILS.start_of(dt_parametro_p,'dd',0), nm_usuario_p, nr_sequencia_www);
	begin 
	OPEN C00;
	exception 
	when others then 
		ds_erro_w		:= SQLERRM(SQLSTATE);
		-- Erro ao ler Resumo: #@DS_ERRO_P#@ 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(183637,'DS_ERRO_P='||ds_erro_w);
	end;
 
	LOOP 
	FETCH C00 into 	 
		qt_atend_w, 
		qt_conta_w, 
		dt_referencia_w, 
		dt_receita_w, 
		cd_estabelecimento_w, 
		cd_convenio_w, 
		cd_setor_atendimento_w, 
		cd_setor_paciente_w, 
		ie_tipo_atendimento_w, 
		ie_protocolo_w, 
		ie_proc_mat_w, 
		cd_especialidade_w, 
		cd_conta_contabil_w, 
		vl_procedimento_w,     
		vl_material_w,       
		vl_terceiro_w,       
		vl_repasse_calc_w, 
		vl_custo_w, 
		vl_desconto_w, 
		nr_seq_grupo_rec_w, 
		cd_estrutura_conta_w, 
		nr_seq_conta_financ_w, 
		vl_imposto_w, 
		ie_complexidade_w, 
		ie_pacote_w, 
		vl_original_w, 
		cd_categoria_w, 
		vl_hospital_w, 
		qt_dia_internacao_w, 
		dt_entrega_w, 
		--cd_plano_w, 
		nr_conta_w, 
		nr_atendimento_w, 
		ie_tipo_financ_proc_w, 
		vl_custo_excluido_w, 
		cd_grupo_w, 
		cd_subgrupo_w, 
		cd_forma_organizacao_w, 
		ie_complexidade_sus_w, 
		qt_resumo_w, 
		cd_cgc_prestador_w, 
		nr_prescricao_w, 
		ie_tipo_financiamento_w;
	EXIT WHEN NOT FOUND; /* apply on C00 */
	begin 
 
 
	select 	coalesce(max('S'),'N') 
	into STRICT 	ie_repasse_w 
	from 	parametro_faturamento 
	where 	cd_estabelecimento = cd_estabelecimento_w 
	and 	((ie_repasse_mat = 'C') or (ie_repasse_proc = 'C'));
 
 
	/*if	(ie_repasse_w <> 'N') then 
		select	EIS_Obter_Valor_Rep_Conta(nr_conta_w, 'R') 
		into	VL_TERCEIRO_w 
		from	dual; 
	end if; */
 
 
	--select 	OBTER_PLANO_CONVENIO_ATEND(nr_atendimento_w, 'C'), 
	select 	Eis_Obter_Plano_Convenio_Atend(nr_atendimento_w), 
		obter_convenio_atendimento(nr_atendimento_w) 
	into STRICT	cd_plano_w, 
		cd_convenio_atend_w 
	;
 
	if (cd_convenio_w <> cd_convenio_atend_w) then 
		cd_plano_w:= null;
	end if;
 
	begin 
	cd_centro_custo_w := obter_centro_custo_setor(cd_setor_atendimento_w, 'C');
	exception 
	when others then 
	cd_centro_custo_w:= null;
	end;
 
	begin 
	NR_SEQ_AGRUP_CLASSIF_w := Obter_agrupamento_setor(cd_setor_atendimento_w);
	exception 
	when others then 
	NR_SEQ_AGRUP_CLASSIF_w:= null;
	end;
 
	select	max(nr_seq_classif_medico), 
		max(nr_seq_classificacao) 
	into STRICT	nr_seq_classif_medico_w, 
		nr_seq_classificacao_w 
	from 	atendimento_paciente 
	where 	nr_atendimento = nr_atendimento_w;
 
	cd_medico_prescr_w:= null;
	if (nr_prescricao_w > 0) then 
		begin 
		cd_medico_prescr_w := Obter_Medico_Prescricao(nr_prescricao_w, 'C');
		exception 
		when others then 
			cd_medico_prescr_w:= null;
		end;
	end if;
 
	ie_tipo_convenio_w := obter_tipo_convenio(cd_convenio_w);
		 
	if (ie_tipo_convenio_w = 3) and (ie_comp_proc_pric_sus_w = 'S') then 
		begin 
		if (ie_tipo_atendimento_w = 1) then 
			ie_complex_princ_sus_w := coalesce(sus_obter_complexidade_aih(nr_conta_w),'');
		else 
			begin 
			 
			begin 
			select	coalesce(max(cd_procedimento),0) 
			into STRICT	cd_procedimento_apac_w 
			from	sus_apac_unif 
			where	nr_interno_conta = nr_conta_w;		
			exception 
			when others then 
				cd_procedimento_apac_w := 0;
			end;
					 
			if (cd_procedimento_apac_w <> 0) then 
				ie_complex_princ_sus_w := coalesce(sus_obter_complexidade_proced(cd_procedimento_apac_w, 7,'C'),'');				
			end if;
			 
			end;
		end if;	
		end;
	end if;
	 
	if (ie_tipo_convenio_w = 3) and (ie_comp_proc_pric_sus_w = 'S') then 
		begin 
		if (ie_tipo_atendimento_w = 1) then 
			ie_tipo_financiamento_w := coalesce(sus_obter_tipo_financ_aih(nr_conta_w),'');
		else 
			begin 
			 
			begin 
			select	coalesce(max(cd_procedimento),0) 
			into STRICT	cd_procedimento_apac_w 
			from	sus_apac_unif 
			where	nr_interno_conta = nr_conta_w;		
			exception 
			when others then 
				cd_procedimento_apac_w := 0;
			end;
					 
			if (cd_procedimento_apac_w <> 0) then 
				ie_tipo_financiamento_w := coalesce(Obter_Tipo_Financ_Proc(cd_procedimento_apac_w, 7, 1),'');				
			end if;
			 
			end;
		end if;	
		end;
	end if;		
	 
	insert into eis_Resultado( 
		dt_referencia, 
		ie_periodo, 
		cd_estabelecimento, 
		cd_convenio, 
		cd_setor_atendimento, 
		cd_setor_paciente, 
		ie_tipo_atendimento, 
		dt_receita, 
		ie_protocolo, 
		ie_proc_mat, 
		cd_especialidade, 
		cd_conta_contabil, 
		vl_procedimento,     
		vl_material,       
		vl_terceiro,       
		vl_custo, 
		vl_desconto, 
		nr_seq_grupo_rec, 
		cd_estrutura_conta, 
		nr_seq_conta_financ, 
		vl_imposto, 
		ie_complexidade, 
		ie_pacote, 
		vl_original, 
		cd_categoria, 
		vl_hospital, 
		qt_dia_internacao, 
		dt_entrega, 
		vl_repasse_calc, 
		qt_atendimento, 
		qt_conta, 
		cd_plano, 
		nr_interno_conta, 
		nr_atendimento, 
		ie_tipo_financ_proc, 
		vl_custo_excluido, 
		cd_grupo, 
		cd_subgrupo, 
		cd_forma_organizacao, 
		ie_complexidade_sus, 
		cd_centro_custo_setor, 
		cd_conv_atend, 
		nr_seq_agrup_classif, 
		nr_seq_classif_medico, 
		nr_seq_classificacao, 
		qt_resumo, 
		cd_cgc_prestador, 
		nr_prescricao, 
		cd_medico_prescr, 
		ie_complex_princ_sus, 
		ie_tipo_fin_princ_sus)        
	values ( 
		dt_referencia_w, 
		ie_periodo_w, 
		cd_estabelecimento_w, 
		cd_convenio_w, 
		cd_setor_atendimento_w, 
		cd_setor_paciente_w, 
		ie_tipo_atendimento_w, 
		dt_receita_w, 
		ie_protocolo_w, 
		ie_proc_mat_w, 
		cd_especialidade_w, 
		cd_conta_contabil_w, 
		vl_procedimento_w,     
		vl_material_w,       
		vl_terceiro_w,       
		vl_custo_w, 
		vl_desconto_w, 
		nr_seq_grupo_rec_w, 
		cd_estrutura_conta_w, 
		nr_seq_conta_financ_w, 
		vl_imposto_w, 
		ie_complexidade_w, 
		ie_pacote_w, 
		vl_original_w, 
		cd_categoria_w, 
		vl_hospital_w, 
		qt_dia_internacao_w, 
		dt_entrega_w, 
		vl_repasse_calc_w, 
		qt_atend_w, 
		qt_conta_w, 
		cd_plano_w, 
		nr_conta_w, 
		nr_atendimento_w, 
		ie_tipo_financ_proc_w, 
		vl_custo_excluido_w, 
		cd_grupo_w, 
		cd_subgrupo_w, 
		cd_forma_organizacao_w, 
		ie_complexidade_sus_w, 
		cd_centro_custo_w, 
		cd_convenio_atend_w, 
		nr_seq_agrup_classif_w, 
		nr_seq_classif_medico_w, 
		nr_seq_classificacao_w, 
		qt_resumo_w, 
		cd_cgc_prestador_w, 
		nr_prescricao_w, 
		cd_medico_prescr_w, 
		ie_complex_princ_sus_w, 
		ie_tipo_financiamento_w);
	exception 
	when others then 
		ds_erro_w		:= SQLERRM(SQLSTATE);
		-- Erro ao gravar Resumo: #@DS_ERRO_P#@ 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(183641,'DS_ERRO_P='||ds_erro_w);
	end;
	END LOOP;
	CLOSE C00;
	commit;
 
	CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_www);
 
	ie_gerar_eis_fatur_diario_w:= coalesce(Obter_valor_param_usuario(0, 155, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'S');
 
	if		((ie_gerar_eis_fatur_diario_w = 'S') or (ie_gerar_eis_fatur_diario_w = 'A')) then 
			CALL gerar_eis_fatur_diario(dt_parametro_p,nm_usuario_p);
	end if;
	if		((ie_gerar_eis_fatur_diario_w = 'P') or (ie_gerar_eis_fatur_diario_w = 'A')) then 
			CALL gerar_eis_prod_diario(dt_parametro_p,nm_usuario_p);
	end if;
 
	CALL gerar_eis_desemp_fatur(dt_parametro_p,nm_usuario_p);
	CALL gerar_eis_projecao_receita(dt_parametro_p,nm_usuario_p);
 
 
	CALL Atualizar_Log_Indicador(clock_timestamp(), nr_sequencia_w);
 
	if (ie_consiste_simultaneo_w = 'S') then 
		CALL gravar_processo_longo('','',0);
	end if;
 
	commit;
	 
else 
 
	CALL Gerar_Eis_Resultado_Novo(dt_parametro_p, nm_usuario_p);
	 
end if;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_resultado ( dt_parametro_p timestamp, nm_usuario_p text) FROM PUBLIC;

