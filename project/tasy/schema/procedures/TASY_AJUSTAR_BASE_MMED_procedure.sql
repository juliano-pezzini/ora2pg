-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_ajustar_base_mmed ( nm_usuario_p text) AS $body$
DECLARE


qt_registro_w			bigint;
dt_versao_atual_cliente_w 		timestamp;
ds_sep_bv_w			varchar(50);


BEGIN
/*FAVOR COLOCAR OS NOVOS AJUSTES SEMPRE NO FINAL DA PROCEDURE.*/

ds_sep_bv_w	:= obter_separador_bv;

CALL abortar_se_base_wheb();

dt_versao_atual_cliente_w := coalesce(TO_DATE(TO_CHAR(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');

if (dt_versao_atual_cliente_w < to_date('12/02/2014','dd/mm/yyyy')) then

	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'LAUDCFG_ESTAB_SETOR';
		
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','Alter Table LAUDO_CABECALHO_RODAPE Drop Constraint LAUDCFG_ESTAB_SETOR');
	end if;
	
	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	FROM	USER_INDEXES
	WHERE	INDEX_NAME = 'LAUDCFG_ESTAB_SETOR';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','Drop Index LAUDCFG_ESTAB_SETOR');
	end if;		
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'LAUDCFG_ESTAB_SETOR';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('accunha','Alter Table LAUDO_CABECALHO_RODAPE add ( Constraint LAUDCFG_ESTAB_SETOR Unique (CD_ESTABELECIMENTO,CD_SETOR_ATENDIMENTO,CD_TIPO_PROTOCOLO))');
	end if;
end if;


if (dt_versao_atual_cliente_w < to_date('19/02/2014','dd/mm/yyyy')) then

	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'PROTMED_MEDICO_FK';
		
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','Alter Table PROTOCOLO_MEDICO Drop Constraint PROTMED_MEDICO_FK');
	end if;
	
	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	FROM	USER_INDEXES
	WHERE	INDEX_NAME = 'PROTMED_MEDICO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','Drop Index PROTMED_MEDICO_FK_I');
	end if;		
	
  	SELECT 	COUNT(*)
	  into STRICT	qt_registro_w
	from	USER_TAB_COLUMNS
	WHERE	COLUMN_NAME = 'CD_PESSOA_FISICA'
  	and TABLE_NAME = 'PROTOCOLO_MEDICO';
	
	if (qt_registro_w > 0) then
    		CALL exec_sql_dinamico('accunha','Alter Table PROTOCOLO_MEDICO Drop Column CD_PESSOA_FISICA');
  	end if;

	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS 
	WHERE	CONSTRAINT_NAME = 'PROTMED_MEDICO_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('accunha','Alter Table PROTOCOLO_MEDICO add (Constraint PROTMED_MEDICO_FK Foreign Key (CD_MEDICO) References MEDICO (CD_PESSOA_FISICA))');
	end if;

  	SELECT COUNT(*)
 	 into STRICT qt_registro_w
  	FROM USER_INDEXES
  	WHERE INDEX_NAME = 'PROTMED_MEDICO_FK_I';
 
 	 if (qt_registro_w = 0) then
    		CALL exec_sql_dinamico('accunha','Create Index PROTMED_MEDICO_FK_I on PROTOCOLO_MEDICO(CD_MEDICO)');
  	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('07/08/2015','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from 	user_tab_columns
	WHERE	TABLE_NAME = 'LAUDO_PACIENTE'
	AND 	COLUMN_NAME = 'DS_REPORT';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('thlima','alter table laudo_paciente drop column DS_REPORT');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('20/08/2015','dd/mm/yyyy')) then

	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'PRESPROCAU_PRESPRO_FK';
		
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','Alter Table PRESCR_PROC_AUDITORIA Drop Constraint PRESPROCAU_PRESPRO_FK');
	end if;
	
	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	FROM	USER_INDEXES
	WHERE	INDEX_NAME = 'PRESPROCAU_PRESPRO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','Drop Index PRESPROCAU_PRESPRO_FK_I');
	end if;		
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS 
	WHERE	CONSTRAINT_NAME = 'PRESPROCAU_PRESPRO_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('accunha','Alter Table PRESCR_PROC_AUDITORIA add (Constraint PRESPROCAU_PRESPRO_FK Foreign Key (NR_PRESCRICAO, NR_SEQUENCIA_PRESCRICAO) References PRESCR_PROCEDIMENTO (NR_PRESCRICAO,NR_SEQUENCIA) on delete cascade)');
	end if;

	SELECT COUNT(*)
	into STRICT qt_registro_w
	FROM USER_INDEXES
	WHERE INDEX_NAME = 'PRESPROCAU_PRESPRO_FK_I';
 
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('accunha','Create Index PRESPROCAU_PRESPRO_FK_I on PRESCR_PROC_AUDITORIA(NR_PRESCRICAO, NR_SEQUENCIA_PRESCRICAO)');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('11/09/2015','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from 	user_tab_columns
	WHERE	TABLE_NAME = 'PRESCR_PROC_CAPTURA_IMG'
	AND 	COLUMN_NAME = 'DS_CAMINHO';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('accunha','alter table PRESCR_PROC_CAPTURA_IMG drop column DS_CAMINHO');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PRESCR_PROC_CAPTURA_IMG'
	and	column_name	= 'NR_SEQ_CAPTURA'
	and	nullable	= 'Y';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','alter table PRESCR_PROC_CAPTURA_IMG modify NR_SEQ_CAPTURA not null');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('22/10/2015','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('pnascimento','Create Sequence TIPO_PROTOCOLO_SEQ Increment by 1 Start With 1 MaxValue 9999999999 Cycle NoCache');
	CALL exec_sql_dinamico('pnascimento','begin Tasy_posicionar_sequence(''TIPO_PROTOCOLO'',''CD_TIPO_PROTOCOLO'',''R''); end;');
end if;

if (dt_versao_atual_cliente_w < to_date('30/10/2015','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'REGRA_MATERIAL_CONTRASTE'
	and	column_name	= 'CD_GRUPO_MATERIAL'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','alter table REGRA_MATERIAL_CONTRASTE modify CD_GRUPO_MATERIAL null');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'REGRA_MATERIAL_CONTRASTE'
	and	column_name	= 'CD_SUBGRUPO_MATERIAL'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','alter table REGRA_MATERIAL_CONTRASTE modify CD_SUBGRUPO_MATERIAL null');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'REGRA_MATERIAL_CONTRASTE'
	and	column_name	= 'CD_CLASSE_MATERIAL'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','alter table REGRA_MATERIAL_CONTRASTE modify CD_CLASSE_MATERIAL null');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'REGRA_MATERIAL_CONTRASTE'
	and	column_name	= 'CD_MATERIAL'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','alter table REGRA_MATERIAL_CONTRASTE modify CD_MATERIAL null');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('13/11/2015','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'CAPTURA_IMAGEM_CONF'
	and	column_name	= 'IE_RESOLUCAO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('accunha','alter table CAPTURA_IMAGEM_CONF modify IE_RESOLUCAO number(2,0)');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('18/11/2015','dd/mm/yyyy')) then	

	CALL exec_sql_dinamico('grcjacobsen','delete from usuario_ordem_grid where cd_funcao = 942');		
	CALL exec_sql_dinamico('grcjacobsen','delete from wcp_regra_atributo where nr_seq_atributo in (12054, 57741)');	
	CALL exec_sql_dinamico('grcjacobsen','delete from dic_objeto where nr_sequencia in (12054, 57741)');	

end if;

if (dt_versao_atual_cliente_w < to_date('01/12/2015','dd/mm/yyyy')) then
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACBOLPRO_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_BOLETIM_PROCESSO drop constraint SACBOLPRO_SACBOOC_FK');
		
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_BOLETIM_PROCESSO add (Constraint SACBOLPRO_SACBOOC_FK Foreign Key (NR_SEQ_BOLETIM) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACBOVINC_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_BOLETIM_VINCULADO drop constraint SACBOVINC_SACBOOC_FK');
		
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_BOLETIM_VINCULADO add (Constraint SACBOVINC_SACBOOC_FK Foreign Key (NR_SEQ_BO) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACBOARQ_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_BOL_OCOR_ARQ drop constraint SACBOARQ_SACBOOC_FK');
		
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_BOL_OCOR_ARQ add (Constraint SACBOARQ_SACBOOC_FK Foreign Key (NR_SEQ_BO) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SABOENV_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_BOL_OCOR_ENVIO drop constraint SABOENV_SACBOOC_FK');
	
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_BOL_OCOR_ENVIO add (Constraint SABOENV_SACBOOC_FK Foreign Key (NR_SEQ_BO) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACBOOB_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_BOL_OCOR_OBS drop constraint SACBOOB_SACBOOC_FK');
	
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_BOL_OCOR_OBS add (Constraint SACBOOB_SACBOOC_FK Foreign Key (NR_SEQ_BOLETIM) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACCARCO_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_CARTA_CORREIO drop constraint SACCARCO_SACBOOC_FK');
	
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_CARTA_CORREIO add (Constraint SACCARCO_SACBOOC_FK Foreign Key (NR_SEQ_BO) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACLABO_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_LOG_ACESSO_BO drop constraint SACLABO_SACBOOC_FK');
	
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_LOG_ACESSO_BO add (Constraint SACLABO_SACBOOC_FK Foreign Key (NR_SEQ_BOLETIM) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACPESQ_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_PESQUISA drop constraint SACPESQ_SACBOOC_FK');
	
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_PESQUISA add (Constraint SACPESQ_SACBOOC_FK Foreign Key (NR_SEQ_BO) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'SACPREF_SACBOOC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('dhoffman','alter table SAC_PESSOA_REFERENCIA_BO drop constraint SACPREF_SACBOOC_FK');
	
		CALL exec_sql_dinamico('dhoffman','Alter Table SAC_PESSOA_REFERENCIA_BO add (Constraint SACPREF_SACBOOC_FK Foreign Key (NR_SEQ_BO) References SAC_BOLETIM_OCORRENCIA (NR_SEQUENCIA) on delete cascade)');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('07/03/2016','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PRECO_PJ'
	and	column_name	= 'CD_ESTABELECIMENTO'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('eberns','alter table PRECO_PJ modify CD_ESTABELECIMENTO null');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('11/03/2016','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	EXAME_LABORATORIO_EXTERNO
	where	coalesce(ie_prioridade::text, '') = '';
	
	if (qt_registro_w > 0) then
		update	EXAME_LABORATORIO_EXTERNO
		set	ie_prioridade = 1
		where	coalesce(ie_prioridade::text, '') = '';
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'EXAME_LABORATORIO_EXTERNO'
	and	nullable 	= 'Y'
	and	column_name	= 'IE_PRIORIDADE';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tbschulz', 'alter table EXAME_LABORATORIO_EXTERNO modify IE_PRIORIDADE not null');
	end if;

	
	select	count(*)
	into STRICT	qt_registro_w
	from	EXAME_LAB_PADRAO
	where	coalesce(ie_situacao::text, '') = '';
	
	if (qt_registro_w > 0) then
		update	EXAME_LAB_PADRAO
		set	ie_situacao = 'A'
		where	coalesce(ie_situacao::text, '') = '';
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'EXAME_LAB_PADRAO'
	and	nullable 	= 'Y'
	and	column_name	= 'IE_SITUACAO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tbschulz', 'alter table EXAME_LAB_PADRAO modify IE_SITUACAO not null');
	end if;
	
	
end if;

if (dt_versao_atual_cliente_w < to_date('28/03/2016','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'USUARIO'
	and	column_name	= 'IE_EVENTO_ALTA_REGRA'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('eberns','alter table USUARIO modify IE_EVENTO_ALTA_REGRA null');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'USUARIO'
	and	column_name	= 'IE_EVENTO_ALTA_PARTIC_EXT'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('eberns','alter table USUARIO modify IE_EVENTO_ALTA_PARTIC_EXT null');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'USUARIO'
	and	column_name	= 'IE_EVENTO_ALTA_PARTIC'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('eberns','alter table USUARIO modify IE_EVENTO_ALTA_PARTIC null');
	end if;	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'MEDICO_PLANTAO'
	and	column_name	= 'CD_ESPECIALIDADE'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('eberns','alter table MEDICO_PLANTAO modify CD_ESPECIALIDADE null');
	end if;	
	
end if;

if (dt_versao_atual_cliente_w < to_date('05/04/2016','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PERFIL'
	and	column_name	= 'IE_PERFIL_DELPHI';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('dhoffman',' update perfil set ie_perfil_delphi = ''S'' ');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PERFIL'
	and	column_name	= 'IE_PERFIL_JAVA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('dhoffman',' update perfil set ie_perfil_java = ''S'' ');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('11/04/2016','dd/mm/yyyy')) then
	--QT_RESOLUCAO
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_EQUIP_CALIB_ESCALA RENAME COLUMN QT_RESOLUCAO TO QT_RESOLUCAO_OLD'); /* Aqui ele renomeia o campo na existente para old*/
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_EQUIP_CALIB_ESCALA ADD QT_RESOLUCAO NUMBER(15,4)'); /* Aqui ele cria um novo atributo com o nome do atributo anterior - aqui ele deverá ser criado com o novo tamanho (15,4)*/
	CALL Exec_Sql_Dinamico('fmperin','UPDATE		MAN_EQUIP_CALIB_ESCALA SET	QT_RESOLUCAO  = QT_RESOLUCAO_OLD WHERE QT_RESOLUCAO_OLD IS NOT NULL'); /* Aqui ele copia a informação do campo antigo para o novo*/

	
	--QT_ERRO_MAX_PERMITIDO
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_EQUIP_CALIB_ESCALA RENAME COLUMN QT_ERRO_MAX_PERMITIDO TO QT_ERRO_MAX_PERMITIDO_OLD'); /* Aqui ele renomeia o campo na existente para old*/
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_EQUIP_CALIB_ESCALA ADD QT_ERRO_MAX_PERMITIDO NUMBER(15,4)'); /* Aqui ele cria um novo atributo com o nome do atributo anterior - aqui ele deverá ser criado com o novo tamanho (15,4)*/
	CALL Exec_Sql_Dinamico('fmperin','UPDATE		MAN_EQUIP_CALIB_ESCALA SET	QT_ERRO_MAX_PERMITIDO  = QT_ERRO_MAX_PERMITIDO_OLD WHERE QT_ERRO_MAX_PERMITIDO_OLD IS NOT NULL'); /* Aqui ele copia a informação do campo antigo para o novo*/


	--QT_TOLERANCIA
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_EQUIP_CALIB_ESCALA RENAME COLUMN QT_TOLERANCIA TO QT_TOLERANCIA_OLD'); /* Aqui ele renomeia o campo na existente para old*/
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_EQUIP_CALIB_ESCALA ADD QT_TOLERANCIA NUMBER(15,4)'); /* Aqui ele cria um novo atributo com o nome do atributo anterior - aqui ele deverá ser criado com o novo tamanho (15,4)*/
	CALL Exec_Sql_Dinamico('fmperin','UPDATE		MAN_EQUIP_CALIB_ESCALA SET	QT_TOLERANCIA  = QT_TOLERANCIA_OLD WHERE QT_TOLERANCIA_OLD IS NOT NULL'); /* Aqui ele copia a informação do campo antigo para o novo*/


	--QT_MEDIA_LEITURA
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_CALIBRACAO RENAME COLUMN QT_MEDIA_LEITURA TO QT_MEDIA_LEITURA_OLD'); /* Aqui ele renomeia o campo na existente para old*/
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_CALIBRACAO ADD QT_MEDIA_LEITURA NUMBER(15,4)'); /* Aqui ele cria um novo atributo com o nome do atributo anterior - aqui ele deverá ser criado com o novo tamanho (15,4)*/
	CALL Exec_Sql_Dinamico('fmperin','UPDATE		MAN_CALIBRACAO SET	QT_MEDIA_LEITURA  = QT_MEDIA_LEITURA_OLD WHERE QT_MEDIA_LEITURA_OLD IS NOT NULL'); /* Aqui ele copia a informação do campo antigo para o novo*/


	--VL_SAIDA
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_CALIBRACAO RENAME COLUMN VL_SAIDA TO VL_SAIDA_OLD'); /* Aqui ele renomeia o campo na existente para old*/
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_CALIBRACAO ADD VL_SAIDA NUMBER(15,4)'); /* Aqui ele cria um novo atributo com o nome do atributo anterior - aqui ele deverá ser criado com o novo tamanho (15,4)*/
	CALL Exec_Sql_Dinamico('fmperin','UPDATE		MAN_CALIBRACAO SET	VL_SAIDA  = VL_SAIDA_OLD WHERE VL_SAIDA_OLD IS NOT NULL'); /* Aqui ele copia a informação do campo antigo para o novo*/

	
	--QT_INCERTEZA_MEDICAO
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_CALIBRACAO RENAME COLUMN QT_INCERTEZA_MEDICAO TO QT_INCERTEZA_MEDICAO_OLD'); /* Aqui ele renomeia o campo na existente para old*/
	CALL Exec_Sql_Dinamico('fmperin','ALTER TABLE 	MAN_CALIBRACAO ADD QT_INCERTEZA_MEDICAO NUMBER(15,4)'); /* Aqui ele cria um novo atributo com o nome do atributo anterior - aqui ele deverá ser criado com o novo tamanho (15,4)*/
	CALL Exec_Sql_Dinamico('fmperin','UPDATE		MAN_CALIBRACAO SET	QT_INCERTEZA_MEDICAO  = QT_INCERTEZA_MEDICAO_OLD WHERE QT_INCERTEZA_MEDICAO_OLD IS NOT NULL'); /* Aqui ele copia a informação do campo antigo para o novo*/
end if;

if (dt_versao_atual_cliente_w < to_date('22/04/2016','dd/mm/yyyy')) then
	SELECT	count(1)
	into STRICT	qt_registro_w
	FROM	tabela_atributo
	WHERE	nm_tabela = 'EXAME_LAB_VALOR' 
	and 	nm_atributo = 'NR_SEQUENCIA' 
	and 	ie_obrigatorio <> 'S';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tbschulz', 'UPDATE TABELA_ATRIBUTO SET IE_OBRIGATORIO = ''S'' WHERE NM_TABELA = ''EXAME_LAB_VALOR'' AND NM_ATRIBUTO = ''NR_SEQUENCIA''');
	end if;
end if;

if (dt_versao_atual_cliente_w < to_date('30/05/2016','dd/mm/yyyy')) then	
	CALL exec_sql_dinamico('folosada', 'UPDATE LAB_PARAMETRO SET IE_SALVA_ETAPA = ''S'' WHERE NVL(IE_SALVA_ETAPA, ''N'') = ''N''');	
end if;

if (dt_versao_atual_cliente_w < to_date('31/05/2016','dd/mm/yyyy')) then
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PRATACO_ATAREPA_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('fmperin', 'alter table PROJ_ATA_CONTEUDO drop constraint PRATACO_ATAREPA_FK');
	end if;
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('09/06/2016','dd/mm/yyyy')) then
	
	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	FROM	USER_INDEXES
	WHERE	INDEX_NAME = 'LABIMPE_IX';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tbschulz','Drop Index LABIMPE_IX');
	end if;	

	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	FROM	USER_INDEXES
	WHERE	INDEX_NAME = 'LABIMPE_I4';	
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('tbschulz','Create Index LABIMPE_I4 on LAB_IMPORTACAO_EXAME(DT_INTEGRACAO,1)');
	end if;	
	
end if;

if (dt_versao_atual_cliente_w < to_date('10/02/2017','dd/mm/yyyy')) then
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'MAN_CALIBRACAO_ESCALA'
	and	column_name = 'QT_INCERTEZA_MEDICAO'
	and	data_scale = 4;

	if (qt_registro_w = 0) then
		begin
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala add (qt_incerteza_medicao2 number(15,4))');
		CALL exec_sql_dinamico('jcaraujo','update man_calibracao_escala set qt_incerteza_medicao2 = qt_incerteza_medicao');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala drop column qt_incerteza_medicao');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala add (qt_incerteza_medicao number(15,4))');
		CALL exec_sql_dinamico('jcaraujo','update man_calibracao_escala set qt_incerteza_medicao = qt_incerteza_medicao2');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala drop column qt_incerteza_medicao2');
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'MAN_CALIBRACAO_ESCALA'
	and	column_name = 'QT_MEDIA_LEITURA'
	and	data_scale = 4;

	if (qt_registro_w = 0) then
		begin
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala add (qt_media_leitura2 number(15,4))');
		CALL exec_sql_dinamico('jcaraujo','update man_calibracao_escala set qt_media_leitura2 = qt_media_leitura');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala drop column qt_media_leitura');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala add (qt_media_leitura number(15,4))');
		CALL exec_sql_dinamico('jcaraujo','update man_calibracao_escala set qt_media_leitura = qt_media_leitura2');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala drop column qt_media_leitura2');
		end;
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'MAN_CALIBRACAO_ESCALA'
	and	column_name = 'VL_SAIDA'
	and	data_scale = 4;

	if (qt_registro_w = 0) then
		begin
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala add (vl_saida2 number(15,4))');
		CALL exec_sql_dinamico('jcaraujo','update man_calibracao_escala set vl_saida2 = vl_saida');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala drop column vl_saida');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala add (vl_saida number(15,4))');
		CALL exec_sql_dinamico('jcaraujo','update man_calibracao_escala set vl_saida = vl_saida2');
		CALL exec_sql_dinamico('jcaraujo','alter table man_calibracao_escala drop column vl_saida2');
		end;
	end if;
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('27/04/2017','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'FUJI_INTEGRA_PEDIDO_MEDICO'
	and	column_name	= 'DS_PDF_SERIAL';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rfpadilha','alter table FUJI_INTEGRA_PEDIDO_MEDICO drop column DS_PDF_SERIAL');
		CALL exec_sql_dinamico('rfpadilha','alter table FUJI_INTEGRA_PEDIDO_MEDICO add  DS_PDF_SERIAL long');
	end if;


end if;

if (dt_versao_atual_cliente_w < to_date('20/06/2017','dd/mm/yyyy')) then

	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'LAPAMED_LAUPACI_FK';
		
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter Table LAUDO_PACIENTE_MEDICO Drop Constraint LAPAMED_LAUPACI_FK');
	end if;
	
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS 
	WHERE	CONSTRAINT_NAME = 'LAPAMED_LAUPACI_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter Table LAUDO_PACIENTE_MEDICO add (Constraint LAPAMED_LAUPACI_FK Foreign Key (NR_SEQ_LAUDO) References LAUDO_PACIENTE (NR_SEQUENCIA) on delete cascade);');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('04/07/2017','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'W_GESTAO_EXAME'
	and	column_name	= 'DS_UF_MEDICO';
		
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter table W_GESTAO_EXAME modify (DS_UF_MEDICO VARCHAR2(3)  null )');
	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('06/10/2017','dd/mm/yyyy')) then
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'MSGCOLAB_PRESPRO_FK';
		if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter Table MENSAGEM_COLABORACAO Drop Constraint MSGCOLAB_PRESPRO_FK');
	end if;
	
		
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'MSGCOLAB_USUARIO_FK';
		if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter Table MENSAGEM_COLABORACAO Drop Constraint MSGCOLAB_USUARIO_FK');
	end if;
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'LISEQMEXL_LISEQME_FK';
		if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter Table LISTA_EQUIPE_MED_EXEC_LOG Drop Constraint LISEQMEXL_LISEQME_FK');
	end if;
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'LISEQMEXL_LISEQME_FK';
		if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter Table LISTA_EQUIPE_MED_EXEC_LOG add(Constraint LISEQMEXL_LISEQME_FK Foreign Key (NR_SEQ_LISTA_ANT) References LISTA_EQUIPE_MEDICA (NR_SEQUENCIA))');
	end if;
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS
	WHERE	CONSTRAINT_NAME = 'LISEQMEXL_LISEQME_FK2';
		
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('rfpadilha','Alter Table LISTA_EQUIPE_MED_EXEC_LOG add(Constraint LISEQMEXL_LISEQME_FK2 Foreign Key (NR_SEQ_LISTA_ATUAL) References LISTA_EQUIPE_MEDICA (NR_SEQUENCIA))');
	end if;	
	
end if;

IF (DT_VERSAO_ATUAL_CLIENTE_W < TO_DATE('27/10/2017','dd/mm/yyyy')) THEN
  DELETE FROM MACRO_PRONTUARIO
  WHERE NR_SEQUENCIA = (SELECT NR_SEQUENCIA FROM MACRO_PRONTUARIO WHERE UPPER(NM_MACRO) LIKE '%DATA_HORA%' AND NM_USUARIO = 'gsraithz');
end if;

IF (DT_VERSAO_ATUAL_CLIENTE_W < TO_DATE('14/02/2018','dd/mm/yyyy')) THEN

  	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	USER_CONS_COLUMNS 
	WHERE	CONSTRAINT_NAME = 'STCPROLOG_STCAOPROCE_FK';

  if (qt_registro_w > 0) then
  
		CALL exec_sql_dinamico('rfpadilha','Alter Table SITUACAO_PROCEDIMENTO_LOG drop constraint STCPROLOG_STCAOPROCE_FK;');
  end if;

  SELECT	COUNT(*)
	into STRICT	qt_registro_w
   FROM	USER_INDEXES
	WHERE	INDEX_NAME = 'STCPROLOG_STCAOPROCE_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rfpadilha','Drop Index STCPROLOG_STCAOPROCE_FK_I');

	end if;
end if;

IF (DT_VERSAO_ATUAL_CLIENTE_W < TO_DATE('01/10/2018','dd/mm/yyyy')) THEN

	select  count(*)
	into STRICT	qt_registro_w
	from    all_tab_columns
	where   table_name = 'EXAME_LAB_METODO_REGRA'	
	and     column_name = 'DS_HORA_FIM'
	and		data_type = 'DATE';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra add ds_hora_inicio_d date');
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra add ds_hora_fim_d date');
		CALL exec_sql_dinamico('folosada','update exame_lab_metodo_regra set ds_hora_inicio_d = to_date(ds_hora_inicio, ''hh24:mi'') where ds_hora_inicio is not null');
		CALL exec_sql_dinamico('folosada','update exame_lab_metodo_regra set ds_hora_fim_d = to_date(ds_hora_fim, ''hh24:mi'') where ds_hora_fim is not null');
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra drop column ds_hora_inicio');
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra drop column ds_hora_fim');
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra add ds_hora_inicio date');
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra add ds_hora_fim date');
		CALL exec_sql_dinamico('folosada','update exame_lab_metodo_regra a set a.ds_hora_inicio = (select b.ds_hora_inicio_d from exame_lab_metodo_regra b where b.nr_sequencia = a.nr_sequencia) where a.ds_hora_inicio_d is not null');
		CALL exec_sql_dinamico('folosada','update exame_lab_metodo_regra a set a.ds_hora_fim = (select	b.ds_hora_fim_d from exame_lab_metodo_regra b where b.nr_sequencia = a.nr_sequencia) where a.ds_hora_fim_d is not null');
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra drop column ds_hora_inicio_d');
		CALL exec_sql_dinamico('folosada','alter table exame_lab_metodo_regra drop column ds_hora_fim_d');
	end if;

end if;

IF (DT_VERSAO_ATUAL_CLIENTE_W < TO_DATE('01/10/2018','dd/mm/yyyy')) THEN

	CALL exec_sql_dinamico('dherkenhoff','ALTER TABLE W_RESULT_EXAME_PRESCR DROP CONSTRAINT WRESEXP_PK');

	CALL exec_sql_dinamico('dherkenhoff','DROP INDEX WRESEXP_PK');

end if;

if (dt_versao_atual_cliente_w < to_date('11/09/2018','dd/mm/yyyy')) then
	
  	SELECT 	COUNT(*)
	  into STRICT	qt_registro_w
	from	USER_TAB_COLUMNS
	WHERE	COLUMN_NAME = 'CD_REMETENTE'
  	and TABLE_NAME = 'MENSAGEM_COLABORACAO';
	
	if (qt_registro_w > 0) then
    		CALL exec_sql_dinamico('accunha','Alter Table MENSAGEM_COLABORACAO Drop Column CD_REMETENTE');
  	end if;

end if;

if (dt_versao_atual_cliente_w < to_date('02/11/2019','dd/mm/yyyy')) then
	
	CALL exec_sql_dinamico('accunha','exec BACA_AJUSTAR_EDICAO_TNM');
  	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_ajustar_base_mmed ( nm_usuario_p text) FROM PUBLIC;

