-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE update_prot_int_gqa_rule ( nr_seq_prot_int_p protocolo_integrado.nr_sequencia%type default null, nr_seq_prot_int_evento_p protocolo_integrado_evento.nr_sequencia%type default null) AS $body$
DECLARE


qt_shared_rules_w	bigint;
nr_seq_plano_evento_w	protocolo_integrado_evento.nr_seq_plano%type;

c01 CURSOR FOR
SELECT ev.nr_sequencia
from protocolo_integrado_evento ev,
protocolo_integrado_etapa et
where ev.nr_seq_etapa = et.nr_sequencia
and et.nr_seq_protocolo_integrado = nr_seq_prot_int_p
and not exists (
	SELECT 1
	from protocolo_int_paciente 
	where nr_sequencia_protocolo = nr_seq_prot_int_p
);

procedure update_gqa_rule_status(nr_seq_evento_p	bigint) is;
BEGIN

	select nr_seq_plano
	into STRICT nr_seq_plano_evento_w
	from protocolo_integrado_evento
	where nr_sequencia = nr_seq_evento_p;

	select count(*)
	into STRICT qt_shared_rules_w
	from protocolo_integrado_evento ev,
	protocolo_integrado_etapa et
	where ev.nr_seq_etapa = et.nr_sequencia
	and nr_seq_plano = nr_seq_plano_evento_w
	and ev.nr_sequencia <> nr_seq_evento_p
	and (coalesce(nr_seq_prot_int_p::text, '') = '' or 
		((nr_seq_prot_int_p IS NOT NULL AND nr_seq_prot_int_p::text <> '') 
		and et.nr_seq_protocolo_integrado <> (
			SELECT b.nr_seq_protocolo_integrado
			from  protocolo_integrado_etapa b,
			protocolo_integrado_evento c
			where c.nr_seq_etapa = b.nr_sequencia
			and c.nr_sequencia = nr_seq_evento_p
			)
		)
	);

	if (qt_shared_rules_w = 0 and (nr_seq_plano_evento_w IS NOT NULL AND nr_seq_plano_evento_w::text <> '')) then

		update gqa_pendencia_regra
		set ie_situacao = 'I'
		where nr_sequencia = nr_seq_plano_evento_w
		and ie_situacao = 'A';

		commit;

	end if;

end;

begin

if (nr_seq_prot_int_evento_p IS NOT NULL AND nr_seq_prot_int_evento_p::text <> '') then

	update_gqa_rule_status(nr_seq_prot_int_evento_p);

elsif (nr_seq_prot_int_p IS NOT NULL AND nr_seq_prot_int_p::text <> '') then

	for c01_w in c01 loop

		update_gqa_rule_status(c01_w.nr_sequencia);

	end loop;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE update_prot_int_gqa_rule ( nr_seq_prot_int_p protocolo_integrado.nr_sequencia%type default null, nr_seq_prot_int_evento_p protocolo_integrado_evento.nr_sequencia%type default null) FROM PUBLIC;

