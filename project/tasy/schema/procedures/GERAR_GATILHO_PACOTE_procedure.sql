-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_gatilho_pacote ( nr_seq_propaci_p bigint, cd_convenio_p bigint, ie_commit_p text, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w	bigint;
nr_interno_conta_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_regras_w		bigint;
nr_seq_regra_pacote_w	bigint;
cd_gatilho_pacote_w	bigint;
ie_origem_proc_gatilho_w bigint;
qt_gatilho_conta_w	bigint;
nr_sequencia_w		bigint;
dt_entrada_unidade_w	timestamp;
nr_seq_atepacu_w	bigint;
cd_setor_atendimento_w	bigint;
dt_procedimento_w	timestamp;
cd_categoria_w		varchar(10);
nr_doc_convenio_w	varchar(30);
ie_tipo_guia_w		varchar(3);
cd_senha_w		varchar(30);
cd_cgc_prestador_w	varchar(14);
ie_funcao_medico_w	varchar(10)	:= 0;
cd_medico_executor_w	varchar(10);
ds_observacao_w		procedimento_paciente.ds_observacao%type;

C01 CURSOR FOR
	SELECT	a.nr_seq_regra_pacote,
		b.cd_procedimento,
		b.ie_origem_proced
	from	conv_regra_pacote_criterio a,
		conv_regra_pacote b
	where	b.nr_sequencia = a.nr_seq_regra_pacote
	and 	b.cd_convenio = cd_convenio_p
	and 	a.cd_procedimento = cd_procedimento_w
	and 	a.ie_origem_proced = ie_origem_proced_w
	order by 1;


BEGIN

select 	count(*)
into STRICT	qt_regras_w
from 	conv_regra_pacote
where 	cd_convenio = cd_convenio_p;

if (qt_regras_w > 0) then

	begin
	select 	nr_atendimento,
		nr_interno_conta,
		cd_procedimento,
		ie_origem_proced,
		dt_entrada_unidade,
		nr_seq_atepacu,
		cd_setor_atendimento,
		dt_procedimento,
		nr_doc_convenio,
		ie_tipo_guia,
		cd_senha,
		cd_cgc_prestador,
		ie_funcao_medico,
		cd_medico_executor
	into STRICT	nr_atendimento_w,
		nr_interno_conta_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		dt_entrada_unidade_w,
		nr_seq_atepacu_w,
		cd_setor_atendimento_w,
		dt_procedimento_w,
		nr_doc_convenio_w,
		ie_tipo_guia_w,
		cd_senha_w,
		cd_cgc_prestador_w,
		ie_funcao_medico_w,
		cd_medico_executor_w
	from 	procedimento_paciente
	where 	nr_sequencia = nr_seq_propaci_p;
	exception
		when others then
		nr_atendimento_w	:= 0;
		nr_interno_conta_w	:= 0;
		cd_procedimento_w	:= 0;
		ie_origem_proced_w	:= 0;
	end;

	select 	max(cd_categoria_parametro)
	into STRICT	cd_categoria_w
	from 	conta_paciente
	where 	nr_interno_conta = nr_interno_conta_w;

	nr_seq_regra_pacote_w	:= 0;
	cd_gatilho_pacote_w	:= 0;
	ie_origem_proc_gatilho_w := 0;
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_pacote_w,
		cd_gatilho_pacote_w,
		ie_origem_proc_gatilho_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		nr_seq_regra_pacote_w	:= nr_seq_regra_pacote_w;
		cd_gatilho_pacote_w	:= cd_gatilho_pacote_w;
		ie_origem_proc_gatilho_w:= ie_origem_proc_gatilho_w;
		end;
	end loop;
	close C01;

	if (nr_seq_regra_pacote_w > 0) then

		qt_gatilho_conta_w:= 0;

		select 	count(*)
		into STRICT	qt_gatilho_conta_w
		from 	procedimento_paciente
		where 	nr_interno_conta = nr_interno_conta_w
		and 	cd_procedimento = cd_gatilho_pacote_w
		and 	ie_origem_proced = ie_origem_proc_gatilho_w;

		if (qt_gatilho_conta_w = 0) then -- NÃ£o tem ainda
			select	nextval('procedimento_paciente_seq')
			into STRICT	nr_sequencia_w
			;

			ds_observacao_w := substr(wheb_mensagem_pck.get_texto(306332),1,255);--Gatilho Pacote
			-- inserir na tabela procedimento_paciente
			insert into procedimento_paciente(
					nr_sequencia,
					nr_atendimento,
					dt_entrada_unidade,
					cd_procedimento,
					dt_procedimento,
					cd_convenio,
					cd_categoria,
					nr_doc_convenio,
					ie_tipo_guia,
					cd_senha,
					ie_auditoria,
					ie_emite_conta,
					cd_cgc_prestador,
					ie_origem_proced,
					nr_seq_exame,
					nr_seq_proc_interno,
					qt_procedimento,
					cd_setor_atendimento,
					nr_seq_atepacu,
					nr_seq_cor_exec,
					ie_funcao_medico,
					vl_procedimento,
					ie_proc_princ_atend,
					ie_video,
					tx_medico,
					tx_Anestesia,
					tx_procedimento,
					ie_valor_informado,
					ie_guia_informada,
					cd_situacao_glosa,
					nm_usuario_original,
					ds_observacao,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					cd_medico_executor,
					vl_medico,
					vl_custo_operacional,
					vl_materiais,
					nr_interno_conta)
				values (
					nr_sequencia_w,
					nr_atendimento_w,
					dt_entrada_unidade_w,
					cd_gatilho_pacote_w,
					dt_procedimento_w,
					cd_convenio_p,
					cd_categoria_w,
					nr_doc_convenio_w,
					ie_tipo_guia_w,
					cd_senha_w,
					'N',
					null,
					cd_cgc_prestador_w,
					ie_origem_proc_gatilho_w,
					null,
					null,
					1,
					cd_setor_atendimento_w,
					nr_seq_atepacu_w,
					null,
					ie_funcao_medico_w,
					0,
					'N',
					'N',
					100,
					100,
					100,
					'S',
					null,
					0,
					nm_usuario_p,
					ds_observacao_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					cd_medico_executor_w,
					0,
					0,
					0,
					nr_interno_conta_w);

			CALL atualiza_preco_procedimento(nr_sequencia_w, cd_convenio_p, nm_usuario_p);

		end if;
	end if;

end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_gatilho_pacote ( nr_seq_propaci_p bigint, cd_convenio_p bigint, ie_commit_p text, nm_usuario_p text) FROM PUBLIC;

