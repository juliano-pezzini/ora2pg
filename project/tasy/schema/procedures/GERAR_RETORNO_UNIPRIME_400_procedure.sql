-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_retorno_uniprime_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) AS $body$
DECLARE


--Procedure desenvolvida conforme Manual de Cobranca - Cobexpress Uniprime Layout CNAB 400 Posicoes Versao 2.0 Agosto 2021
subtype param_size is		varchar(1);

cd_carteira_w			banco_carteira.cd_carteira%type;
nr_seq_ocorrencia_ret_w		banco_ocorr_escrit_ret.nr_sequencia%type;
ds_inconsistencia_w		titulo_receber_cobr.ds_inconsistencia%type;
cd_banco_w			cobranca_escritural.cd_banco%type;
cd_banco_cobr_w			cobranca_escritural.cd_banco%type;
cd_estabelecimento_w		cobranca_escritural.cd_estabelecimento%type;
cd_estab_ativo_w		cobranca_escritural.cd_estabelecimento%type;
nr_titulo_w			titulo_receber.nr_titulo%type;
vl_saldo_titulo_w		titulo_receber.vl_saldo_titulo%type;
vl_titulo_w			titulo_receber.vl_titulo%type;
vl_liquido_w			titulo_receber_cobr.vl_liquidacao%type;
nr_seq_tit_rec_cobr_w		titulo_receber_cobr.nr_sequencia%type;
cd_centro_custo_desc_w		titulo_receber_liq_desc.cd_centro_custo%type;
cd_pessoa_fisica_desc_w		titulo_receber_liq_desc.cd_pessoa_fisica%type;
cd_cgc_desc_w			titulo_receber_liq_desc.cd_cgc%type;
nr_seq_motivo_desc_w		titulo_receber_liq_desc.nr_seq_motivo_desc%type;
dt_liquidacao_w			timestamp;
ie_separa_carteira_w		param_size;
ie_permite_estab_w		param_size;

c01 CURSOR FOR
	SELECT	trim(both substr(ds_string,117,10)) ds_titulo,
		(substr(ds_string,153,13))::numeric /100 vl_cobranca,
		(substr(ds_string,267,13))::numeric /100 vl_juros,
		(substr(ds_string,241,13))::numeric /100 vl_desconto,
		(substr(ds_string,254,13))::numeric /100 vl_liquido,
		(substr(ds_string,176,13))::numeric /100 vl_tarifa_cobranca,
		coalesce(somente_numero(substr(ds_string,296,6)),0) nr_dt_liquidacao,
		substr(ds_string,109,2) cd_ocorrencia,
		substr(ds_string,319,2) ds_motivo_rejeicao_1,
		substr(ds_string,321,2) ds_motivo_rejeicao_2,
		substr(ds_string,323,2) ds_motivo_rejeicao_3,
		substr(ds_string,325,2) ds_motivo_rejeicao_4,
		(substr(ds_string,202,13))::numeric /100 vl_multa_operacao_atraso
	from	w_retorno_banco
	where	nr_seq_cobr_escrit		= nr_seq_cobr_escrit_p
	and	substr(ds_string,1,1)		= '1'
	and (coalesce('S','N') = 'N' or coalesce(cd_carteira_w::text, '') = '' or trim(both substr(ds_string,83,3)) = cd_carteira_w);

reg_transacao_w   c01%rowtype;


BEGIN

select	max((substr(ds_string,77,3))::numeric )
into STRICT	cd_banco_w
from	w_retorno_banco
where	nr_seq_cobr_escrit	= nr_seq_cobr_escrit_p
and	substr(ds_string,1,1)	= '0';

select	max(a.cd_banco),
	max(b.cd_carteira),
	max(a.cd_estabelecimento)
into STRICT	cd_banco_cobr_w,
	cd_carteira_w,
	cd_estabelecimento_w
FROM cobranca_escritural a
LEFT OUTER JOIN banco_carteira b ON (a.nr_seq_carteira_cobr = b.nr_sequencia)
WHERE a.nr_sequencia		= nr_seq_cobr_escrit_p;

if (cd_banco_w <> cd_banco_cobr_w) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(226931);
end if;

cd_estab_ativo_w := obter_estabelecimento_ativo;
ie_separa_carteira_w := obter_param_usuario(815, 5, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_separa_carteira_w);
ie_permite_estab_w := obter_param_usuario(815, 47, obter_perfil_ativo, nm_usuario_p, cd_estab_ativo_w, ie_permite_estab_w);

open	C01;
loop
fetch	C01 into
	reg_transacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */

	select	max(nr_titulo),
		coalesce(max(vl_saldo_titulo),0),
		coalesce(max(vl_titulo),0)
	into STRICT	nr_titulo_w,
		vl_saldo_titulo_w,
		vl_titulo_w
	from	titulo_receber
	where	nr_titulo	= somente_numero(reg_transacao_w.ds_titulo);

	if (coalesce(nr_titulo_w::text, '') = '') then
		--Encontrar pelo titulo externo
		select	max(nr_titulo),
			coalesce(max(vl_saldo_titulo),0),
			coalesce(max(vl_titulo),0)
		into STRICT	nr_titulo_w,
			vl_saldo_titulo_w,
			vl_titulo_w
		from	titulo_receber
		where	nr_titulo_externo		= reg_transacao_w.ds_titulo
		and	coalesce(nr_titulo_externo,'0')	<> '0'
		and	((ie_permite_estab_w = 'S') or (cd_estabelecimento = cd_estab_ativo_w or cd_estab_financeiro = cd_estab_ativo_w));
	end if;
	--Se encontrou o titulo importa, senao grava no log
	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then

		select 	max(a.nr_sequencia)
		into STRICT	nr_seq_ocorrencia_ret_w
		from	banco_ocorr_escrit_ret a
		where	a.cd_banco = 084
		and	a.cd_ocorrencia = reg_transacao_w.cd_ocorrencia;

		--Busca motivo ocorrencia
		select	rtrim(xmlagg(XMLELEMENT(name e, a.cd_motivo||' - '||a.ds_motivo, ', ') order by a.cd_motivo).extract['//text()'].getclobval(), ', ') lista_motivos
		into STRICT	ds_inconsistencia_w
		from	banco_ocorr_motivo_ret a, banco_ocorr_escrit_ret b
		where a.nr_seq_escrit_ret = b.nr_sequencia
		and b.cd_banco = 084
		and obter_se_contido_entre_virgula(
			reg_transacao_w.ds_motivo_rejeicao_1||','||reg_transacao_w.ds_motivo_rejeicao_2||','||reg_transacao_w.ds_motivo_rejeicao_3||','||reg_transacao_w.ds_motivo_rejeicao_4,
		a.cd_motivo) = 'S';

		select	max(a.cd_centro_custo),
			max(a.nr_seq_motivo_desc),
			max(a.cd_pessoa_fisica),
			max(a.cd_cgc)
		into STRICT	cd_centro_custo_desc_w,
			nr_seq_motivo_desc_w,
			cd_pessoa_fisica_desc_w,
			cd_cgc_desc_w
		from	titulo_receber_liq_desc a
		where	a.nr_titulo	= nr_titulo_w
		and	coalesce(a.nr_bordero::text, '') = ''
		and	coalesce(a.nr_seq_liq::text, '') = '';

		if (coalesce(trim(both reg_transacao_w.nr_dt_liquidacao),0) <> 0) then
			dt_liquidacao_w	:= obter_proximo_dia_util(cd_estabelecimento_w, to_date(to_char(reg_transacao_w.nr_dt_liquidacao, '000000'),'ddmmyy')+1);
		end if;

		if (vl_titulo_w	= coalesce(reg_transacao_w.vl_liquido,0)) then
			vl_liquido_w	:= coalesce(reg_transacao_w.vl_liquido,0) - coalesce(reg_transacao_w.vl_juros,0) + coalesce(reg_transacao_w.vl_tarifa_cobranca,0);
		end if;

		select	nextval('titulo_receber_cobr_seq')
		into STRICT	nr_seq_tit_rec_cobr_w
		;

		insert	into titulo_receber_cobr(	nr_sequencia,
							nr_titulo,
							cd_banco,
							vl_cobranca,
							vl_desconto,
							vl_acrescimo,
							vl_despesa_bancaria,
							vl_liquidacao,
							vl_juros,
							dt_liquidacao,
							dt_atualizacao,
							nm_usuario,
							nr_seq_cobranca,
							nr_seq_ocorrencia_ret,
							vl_saldo_inclusao,
							vl_multa,
							nr_seq_motivo_desc,
							cd_centro_custo_desc,
							ds_inconsistencia)
					values (	nr_seq_tit_rec_cobr_w,
							nr_titulo_w,
							084,
							coalesce(reg_transacao_w.vl_cobranca,0),
							coalesce(reg_transacao_w.vl_desconto,0),
							0,
							coalesce(reg_transacao_w.vl_tarifa_cobranca,0),
							coalesce(vl_liquido_w,0),
							coalesce(reg_transacao_w.vl_juros,0),
							coalesce(dt_liquidacao_w,clock_timestamp()),
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_cobr_escrit_p,
							nr_seq_ocorrencia_ret_w,
							coalesce(vl_saldo_titulo_w,0),
							coalesce(reg_transacao_w.vl_multa_operacao_atraso,0),
							nr_seq_motivo_desc_w,
							cd_centro_custo_desc_w,
							to_char(ds_inconsistencia_w));

		insert	into titulo_rec_cobr_desc(cd_cgc,
			cd_pessoa_fisica,
			dt_atualizacao,
			nm_usuario,
			nr_seq_tit_rec_cobr,
			nr_sequencia)
		values (cd_cgc_desc_w,
			cd_pessoa_fisica_desc_w,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_tit_rec_cobr_w,
			nextval('titulo_rec_cobr_desc_seq'));
	else
		CALL gerar_log_escritural('C',nr_seq_cobr_escrit_p,nm_usuario_p, wheb_mensagem_pck.get_texto(303997,'DS_TITULO_W='||somente_numero(reg_transacao_w.ds_titulo)),'N');
	end if;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_retorno_uniprime_400 ( nr_seq_cobr_escrit_p bigint, nm_usuario_p text) FROM PUBLIC;

