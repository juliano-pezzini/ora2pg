-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hbs_gerar_w_ctb_bal_peri_mes ( cd_empresa_p bigint, cd_estab_p bigint, cd_classificacao_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_normal_encerramento_p text, cd_conta_contabil_p text, nr_nivel_p text, ie_diario_mensal_p text, cd_centro_custo_p text, ie_tipo_conta_p text, nm_usuario_p text) AS $body$
DECLARE



nr_seq_mes_ref_w			bigint;
ie_normal_encerramento_w		varchar(1);
cd_empresa_w			smallint;
cd_conta_contabil_w		varchar(20);
cd_classificacao_w			varchar(40);
cd_grupo_w			bigint;
ie_tipo_w				varchar(1);
ie_nivel_w			bigint;
ie_centro_custo_w			varchar(1);
dt_referencia_w			timestamp;
ds_conta_apres_w			varchar(100);
vl_debito_w			double precision;
vl_credito_w			double precision;
vl_saldo_w			double precision;
vl_movimento_w			double precision;
vl_saldo_ant_w			double precision;
qt_conta_w			bigint;
ie_diario_mensal_w			varchar(01);
cd_estabelecimento_w		bigint;
dt_inicio_w			timestamp;
dt_final_w			timestamp;
cd_conta_debito_w			varchar(20);
cd_conta_credito_w		varchar(20);
dt_movimento_w			timestamp;

vl_debito_per_w			double precision;
vl_credito_per_w			double precision;
vl_movto_per_w			double precision;
vl_movto_ant_w			double precision;
ie_deb_cre_cta_w			varchar(01);
ie_deb_cre_mov_w			varchar(01);
cd_centro_custo_w		bigint;
ie_tipo_conta_w			varchar(1);

c01 CURSOR FOR
SELECT	x.dt_referencia,
	a.cd_estabelecimento,
	coalesce(a.cd_centro_custo,0),
	a.cd_conta_contabil,
	a.cd_classificacao,
	a.cd_grupo,
	a.ie_tipo,
	ctb_obter_nivel_classif_conta(a.cd_classificacao),
	a.ie_centro_custo,
	substr(a.ds_conta_apres,1,100),
	sum(CASE WHEN x.dt_referencia=dt_inicio_w THEN  a.vl_saldo_ant  ELSE 0 END ),
	coalesce(sum(a.vl_saldo),0) vl_saldo,
	coalesce(sum(a.vl_debito),0) vl_debito,
	coalesce(sum(a.vl_credito),0) vl_credito,
	coalesce(sum(a.vl_movimento),0) vl_movimento
from	ctb_balancete_v2 a,
	ctb_mes_ref x
where	a.nr_seq_mes_ref =			x.nr_sequencia
and	x.dt_referencia between dt_inicio_w and dt_final_w
and	((a.cd_estabelecimento		= cd_estab_p) or (coalesce(cd_estab_p,0) = 0))
and	((coalesce(cd_classificacao_p,'0') = '0') or (CTB_Obter_Se_classif_Contida(ctb_obter_se_conta_classif_sup(a.cd_conta_contabil,cd_classificacao_p),cd_classificacao_p) = 'S'))
and (ctb_obter_nivel_classif_conta(a.cd_classificacao) <= nr_nivel_p)
and	((coalesce(cd_conta_contabil_p,'0') = '0') or (ctb_obter_se_conta_contida(a.cd_conta_contabil, cd_conta_contabil_p) = 'S'))
and	((coalesce(cd_centro_custo_p,'0') = '0') or (ctb_obter_se_centro_contido(a.cd_centro_custo, cd_centro_custo_p) = 'S'))
and	a.ie_normal_encerramento			= ie_normal_encerramento_p
and	a.cd_empresa				= cd_empresa_p
and	((ie_tipo_conta_w = 'X') or (a.ie_tipo	= ie_tipo_conta_w))
and	((cd_centro_custo_w = 0) or (coalesce(a.cd_centro_custo, cd_centro_custo_w)	= coalesce(cd_centro_custo_w,a.cd_centro_custo)))
group by x.dt_referencia,
	a.cd_estabelecimento,
	coalesce(a.cd_centro_custo,0),
	a.cd_conta_contabil,
	a.cd_classificacao,
	a.cd_grupo,
	a.ie_tipo,
	ctb_obter_nivel_classif_conta(a.cd_classificacao),
	a.ie_centro_custo,
	a.ds_conta_apres;


BEGIN

dt_inicio_w		:= trunc(dt_inicio_p, 'month');
dt_final_w		:= trunc(coalesce(dt_final_p,dt_inicio_p), 'month');
ie_diario_mensal_w	:= 'M';
qt_conta_w		:= 0;
ie_tipo_conta_w		:= coalesce(ie_tipo_conta_p,'X');

delete from w_ctb_balancete
where nm_usuario = nm_usuario_p;
commit;

if (coalesce(cd_centro_custo_p,'0') = '0') then
	cd_centro_custo_w := 0;
end if;

OPEN  c01;
LOOP
FETCH c01 into
	dt_referencia_w,
	cd_estabelecimento_w,
	cd_centro_custo_w,
	cd_conta_contabil_w,
	cd_classificacao_w,
	cd_grupo_w,
	ie_tipo_w,
	ie_nivel_w,
	ie_centro_custo_w,
	ds_conta_apres_w,
	vl_saldo_ant_w,
	vl_saldo_w,
	vl_debito_w,
	vl_credito_w,
	vl_movimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	insert	into w_ctb_balancete(
		ie_normal_encerramento,
		cd_empresa,
		cd_estabelecimento,
		cd_conta_contabil,
		cd_classificacao,
		cd_grupo,
		ie_tipo,
		ie_nivel,
		ie_centro_custo,
		ds_conta_apres,
		vl_debito,
		vl_credito,
		vl_saldo,
		vl_movimento,
		vl_saldo_ant,
		nm_usuario,
		dt_atualizacao,
		dt_referencia,
		cd_centro_custo)
	values (	ie_normal_encerramento_p,
		cd_empresa_p,
		cd_estab_p,
		cd_conta_contabil_w,
		cd_classificacao_w,
		cd_grupo_w,
		ie_tipo_w,
		ie_nivel_w,
		ie_centro_custo_w,
		ds_conta_apres_w,
		vl_debito_w,
		vl_credito_w,
		vl_saldo_w,
		vl_movimento_w,
		vl_saldo_ant_w,
		nm_usuario_p,
		clock_timestamp(),
		dt_referencia_w,
		cd_centro_custo_w);
END LOOP;
CLOSE c01;
commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hbs_gerar_w_ctb_bal_peri_mes ( cd_empresa_p bigint, cd_estab_p bigint, cd_classificacao_p text, dt_inicio_p timestamp, dt_final_p timestamp, ie_normal_encerramento_p text, cd_conta_contabil_p text, nr_nivel_p text, ie_diario_mensal_p text, cd_centro_custo_p text, ie_tipo_conta_p text, nm_usuario_p text) FROM PUBLIC;

