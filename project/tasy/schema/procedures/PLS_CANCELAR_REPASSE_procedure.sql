-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_repasse ( nr_seq_repasse_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_titulo_w			titulo_pagar.nr_titulo%type;
nr_lote_contabil_w		lote_contabil.nr_lote_contabil%type;
nr_seq_repasse_mens_w		pls_repasse_mens.nr_sequencia%type;
nr_seq_tit_adiant_w		titulo_pagar_adiant.nr_sequencia%type;
nr_adiantamento_w		titulo_pagar_adiant.nr_adiantamento%type;
vl_adiantamento_w		titulo_pagar_adiant.vl_adiantamento%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_concil_contab_w		pls_visible_false.ie_concil_contab%type;
ie_status_origem_w		lote_contabil.ie_status_origem%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_repasse_mens
	where	nr_seq_repasse	= nr_seq_repasse_p;

C02 CURSOR FOR
	SELECT	nr_titulo
	from	pls_repasse_vend_venc
	where	nr_seq_repasse	= nr_seq_repasse_p;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_adiantamento,
		vl_adiantamento
	from	titulo_pagar_adiant
	where	nr_titulo	= nr_titulo_w;


BEGIN

select	coalesce(max(nr_lote_contabil),0)
into STRICT	nr_lote_contabil_w
from (SELECT	l.nr_lote_contabil
	from	pls_repasse_vend	v,
		pls_repasse_lanc	l
	where	v.nr_sequencia	= l.nr_seq_repasse
	and	v.nr_sequencia	= nr_seq_repasse_p
	
union

	SELECT	v.nr_lote_contabil
	from	pls_repasse_vend	v
	where	v.nr_sequencia	= nr_seq_repasse_p) alias2;

if (nr_lote_contabil_w <> 0) then

	select 	coalesce(max(ie_status_origem), 'M')
	into STRICT	ie_status_origem_w
	from	lote_contabil
	where 	nr_lote_contabil = nr_lote_contabil_w;

	if (ie_status_origem_w <> 'SO') then
		/* Não é possível concluir a ação executada pois o lote contábil #@NR_LOTE_CONTABIL#@ está vinculado ao repasse!*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(458979, 'NR_LOTE_CONTABIL=' || nr_lote_contabil_w);
	end if;
end if;

cd_estabelecimento_w 	:= Obter_estab_usuario(nm_usuario_p);

select	max(ie_concil_contab)
into STRICT 	ie_concil_contab_w
from	pls_visible_false
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_concil_contab_w = 'S') then
	CALL pls_ctb_onl_gravar_movto_pck.gravar_movto_cancelar_repasse(nr_seq_repasse_p, cd_estabelecimento_w, nm_usuario_p);
end if;

open C01;
loop
fetch C01 into
	nr_seq_repasse_mens_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	insert	into	pls_repasse_mens(	nr_sequencia,
			nr_seq_vendedor,
			vl_repasse,
			vl_origem,
			ie_status,
			nr_seq_mens_seg,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			pr_comissao,
			ie_acao_contrato,
			ds_observacao,
			nr_seq_segurado,
			nr_seq_plano,
			nr_seq_plano_sca,
			nm_segurado,
			qt_idade,
			nr_parcela_benef,
			nr_seq_contrato,
			nr_parcela_contrato,
			nm_estipulante,
			nm_pagador,
			ie_tipo_contrato,
			vl_pre_estab,
			ds_acao_contrato,
			dt_adesao_contrato,
			dt_mesano_referencia,
			vl_mensalidade,
			nm_vendedor_vinculado,
			nr_seq_mensalidade,
			nr_contrato,
			nr_seq_lote,
			nm_produto,
			nm_sca,
			nm_subestipulante,
			dt_liberacao_beneficiario,
			vl_incremento,
			nr_seq_comissao_benef,
			vl_item_comissao,
			nr_seq_proposta)
		(SELECT	nextval('pls_repasse_mens_seq'),
			nr_seq_vendedor,
			vl_repasse,
			vl_origem,
			ie_status,
			nr_seq_mens_seg,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			pr_comissao,
			ie_acao_contrato,
			ds_observacao,
			nr_seq_segurado,
			nr_seq_plano,
			nr_seq_plano_sca,
			nm_segurado,
			qt_idade,
			nr_parcela_benef,
			nr_seq_contrato,
			nr_parcela_contrato,
			nm_estipulante,
			nm_pagador,
			ie_tipo_contrato,
			vl_pre_estab,
			ds_acao_contrato,
			dt_adesao_contrato,
			dt_mesano_referencia,
			vl_mensalidade,
			nm_vendedor_vinculado,
			nr_seq_mensalidade,
			nr_contrato,
			nr_seq_lote,
			nm_produto,
			nm_sca,
			nm_subestipulante,
			dt_liberacao_beneficiario,
			vl_incremento,
			nr_seq_comissao_benef,
			vl_item_comissao,
			nr_seq_proposta
		from	pls_repasse_mens
		where	nr_sequencia	= nr_seq_repasse_mens_w);
	end;
end loop;
close C01;

open C02;
loop
fetch C02 into
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	open C03;
	loop
	fetch C03 into
		nr_seq_tit_adiant_w,
		nr_adiantamento_w,
		vl_adiantamento_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		CALL atualiza_adiantamento_pago(nr_titulo_w, nr_adiantamento_w, vl_adiantamento_w, nr_seq_tit_adiant_w, nm_usuario_p, 'E');
		end;
	end loop;
	close C03;
	
	CALL cancelar_titulo_pagar(nr_titulo_w,nm_usuario_p,clock_timestamp());
	end;
end loop;
close C02;

update	pls_repasse_vend
set	ie_status		= 'C',
	dt_cancelamento		= clock_timestamp(),
	nm_usuario_cancelamento	= nm_usuario_p
where	nr_sequencia	= nr_seq_repasse_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_repasse ( nr_seq_repasse_p bigint, nm_usuario_p text) FROM PUBLIC;

