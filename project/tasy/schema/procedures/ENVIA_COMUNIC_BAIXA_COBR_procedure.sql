-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE envia_comunic_baixa_cobr ( nr_sequencia_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE


nr_seq_regra_w			bigint;
nr_seq_classif_w		bigint;
ds_titulo_w			varchar(255);
ds_comunicacao_w		varchar(4000);
cd_perfil_w			integer;
cd_setor_atendimento_w		integer;
cd_estabelecimento_w		smallint;
nm_usuario_destino_w		varchar(255);
ds_perfil_adicional_w		varchar(4000);
ds_setor_adicional_w		varchar(2000);
ds_dt_recebimento_w		varchar(10);
ds_banco_w			banco.ds_banco%type;
ds_dt_credito_bancario_w	timestamp;

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		b.ds_titulo,
		b.ds_comunicacao,
		b.nm_usuarios_adic,
		b.cd_perfil
	from	fin_regra_comunic_evento b,
		fin_regra_envio_comunic a
	where	a.nr_sequencia = b.nr_seq_regra
	and	a.cd_funcao = 815
	and	b.cd_evento = '5'
	and	b.ie_situacao = 'A'
	and	a.cd_estabelecimento = cd_estabelecimento_w;

c02 CURSOR FOR
	SELECT	cd_setor_atendimento
	from	fin_regra_comunic_usu
	where	(cd_setor_atendimento IS NOT NULL AND cd_setor_atendimento::text <> '')
	and	nr_seq_evento = nr_seq_regra_w
	group by cd_setor_atendimento;


BEGIN

begin

select	a.cd_estabelecimento,
	to_char(a.dt_recebimento,'dd/mm/yyyy') ds_dt_recebimento,
	substr(obter_nome_banco(b.cd_banco),1,40) ds_banco,
	to_char(a.dt_credito_bancario,'dd/mm/yyyy') ds_dt_credito_bancario
into STRICT	cd_estabelecimento_w,
	ds_dt_recebimento_w,
	ds_banco_w,
	ds_dt_credito_bancario_w
from	banco_estabelecimento b,
	cobranca_escritural a
where	a.nr_seq_conta_banco	= b.nr_sequencia
and	a.nr_sequencia		= nr_sequencia_p;

exception
when others then
	cd_estabelecimento_w := 0;
end;

open c01;
loop
fetch c01 into
	nr_seq_regra_w,
	ds_titulo_w,
	ds_comunicacao_w,
	nm_usuario_destino_w,
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ds_perfil_adicional_w	:= '';
	ds_setor_adicional_w	:= '';

	if (coalesce(cd_perfil_w,0) > 0) then
		ds_perfil_adicional_w := substr(cd_perfil_w || ', ',1,4000);
	end if;

	open c02;
	loop
	fetch c02 into
		cd_setor_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_atendimento_w || ', ',1,2000);
	end loop;
	close c02;

	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@DT_RECEBIMENTO', ds_dt_recebimento_w),1,4000);
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@NR_SEQUENCIA', nr_sequencia_p),1,4000);
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@DS_BANCO', ds_banco_w),1,4000);
	ds_comunicacao_w := substr(replace_macro(ds_comunicacao_w, '@DT_CREDITO_BANCARIO', ds_dt_credito_bancario_w),1,4000);

	select	min(nr_sequencia)
	into STRICT	nr_seq_classif_w
	from	comunic_interna_classif
	where	ie_tipo	= 'F';

	insert into comunic_interna(
				nr_sequencia,
				dt_comunicado,
				dt_liberacao,
				ds_titulo,
				ds_comunicado,
				nr_seq_classif,
				ie_geral,
				ie_gerencial,
				nm_usuario_destino,
				ds_perfil_adicional,
				ds_setor_adicional,
				dt_atualizacao,
				nm_usuario)
			values (	nextval('comunic_interna_seq'),
				clock_timestamp(),
				clock_timestamp(),
				ds_titulo_w,
				ds_comunicacao_w,
				nr_seq_classif_w,
				'N',
				'N',
				nm_usuario_destino_w,
				ds_perfil_adicional_w,
				ds_setor_adicional_w,
				clock_timestamp(),
				nm_usuario_p);
	end;
end loop;
close c01;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE envia_comunic_baixa_cobr ( nr_sequencia_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

