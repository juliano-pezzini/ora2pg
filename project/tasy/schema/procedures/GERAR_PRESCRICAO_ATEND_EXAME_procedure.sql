-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_atend_exame ( nr_atendimento_p bigint, dt_entrega_p timestamp, nr_seq_agenda_p bigint, nm_usuario_p text, cd_setor_usuario_p bigint, ie_setor_p text) AS $body$
DECLARE


nr_prescricao_w			bigint;
cd_setor_atendimento_w		integer 	:= 0;
cd_procedimento_w		bigint	:= 0;
ie_origem_proced_w		bigint	:= 0;
qt_passagem_setor_w		bigint;
ie_origem_inf_w			varchar(1);
ie_data_w			varchar(3);
dt_prescricao_w			timestamp;
dt_entrega_w			timestamp;
cd_estabelecimento_w		smallint;
cd_setor_proced_w		integer;
cd_medico_agenda_w		varchar(10);
ie_medico_requisitante_w	varchar(01)	:= 'N';
nr_controle_w			bigint;
ie_controle_w			varchar(1);
ie_medico_prescr_w		varchar(15);
nr_seq_interno_w		bigint	:= 0;

qt_peso_agenda_w		real;
qt_altura_cm_w			real;

ie_agenda_nova_w		varchar(01);
ie_regra_prescr_w		varchar(15)	:= 'U';
nr_prescricao_ind_w		bigint;

/* Variaveis utilizada no cursor c02 */

cd_procedimento_ind_w		bigint;
ie_origem_proced_ind_w		bigint;
ie_autorizacao_w		varchar(03);
cd_medico_agenda_ind_w		varchar(10);
ie_lado_w			varchar(01);
nr_seq_proc_interno_w		bigint;
hr_inicio_w			timestamp;
cd_medico_exec_w		varchar(10);

ie_tipo_passagem_regra_w	varchar(1);
nr_seq_proc_interno_uni_w	bigint;
nr_seq_forma_laudo_w		bigint;
cd_setor_entrega_w		bigint;
cd_setor_padrao_w		bigint;
ie_atualizar_setor_agenda_w	varchar(3);
ie_atualiza_setor_entrega	varchar(1);
cd_setor_entrega_270_w		varchar(10);
hr_inicio_prescricao_w		timestamp;
ie_adep_w			varchar(3);
ie_liberar_w			varchar(10)	:= 'N';
ie_medico_w			varchar(5);
cd_pessoa_fisica_w		varchar(10);
ds_erro_w			varchar(4000);
ie_prescr_agenda_w		varchar(1)	:= 'N';
nr_doc_convenio_w		varchar(20);
ie_nr_doc_convenio_w		varchar(1);
cd_setor_padrao_646_w	  	integer;
ie_tipo_atendimento_w		smallint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_seq_componente_w		integer;
nr_seq_apresentacao_w		bigint;
ds_materiais_w			varchar(255);
cd_kit_material_w		integer;
nr_seq_prescr_material_w	integer;
nr_agrupamento_w		double precision;
hr_prim_horario_w		varchar(05);
ie_duplica_prescr_w		varchar(1);
cd_material_w			integer;
cd_material_opcao_w		integer;
ie_registra_w			varchar(1);
qt_material_w			double precision;
ie_gerou_itens_w		varchar(1) := 'N';
nr_seq_lote_fornec_w		bigint;
ie_acumula_w			varchar(01);
cd_unidade_medida_w		varchar(30);
ie_via_aplicacao_w		varchar(05);
ie_dispensavel_w		varchar(01);
cd_fornecedor_w			varchar(14);
ie_tipo_material_w		varchar(3);
cd_convenio_ww			integer;
ie_gerado_avulso_w		varchar(1) := 'N';
cd_intervalo_w			varchar(7);
ie_gerar_consistido_w		varchar(15) := 'N';
nr_doc_interno_w		numeric(20);
nr_seq_reg_kit_w		bigint;
nr_doc_interno_aux_w		numeric(20);
ie_gera_opme_w			varchar(1);
ie_autorizados_w		varchar(1);
ie_gerar_setor_w		varchar(2);
ie_setor_usuario_paciente_w	varchar(100);
ds_cirurgia_w			varchar(255);
ie_traz_indi_clinica_w		varchar(15);
cd_setor_w			integer;
ie_seguir_regra_w		varchar(1);
ds_senha_w				varchar(20);
cd_plano_w			varchar(10);
ie_anestesia_w			agenda_paciente.ie_anestesia%type;
nr_seq_topografia_w		topografia_dor.nr_sequencia%type;
vl_coparticipacao_w		agenda_paciente_auxiliar.vl_coparticipacao%type;
cd_agenda_w			agenda.cd_agenda%type;
/*
ESSA PROCEDURE NAO GERA APENAS A PRESCRICAO QUANDO VEM DA AGENDA DE EXAMES
GERA  PRESCRICOES NORMAIS NA EUP TAMBEM.
*/
c01 CURSOR FOR
	SELECT	cd_setor_atendimento
	FROM	procedimento_setor_atend
	WHERE	cd_procedimento		= cd_procedimento_w
	AND	ie_origem_proced		= ie_origem_proced_w
	AND	cd_estabelecimento		= cd_estabelecimento_w
	ORDER	BY ie_prioridade DESC;

c02 CURSOR FOR
	SELECT	cd_procedimento,
		ie_origem_proced,
		ie_autorizacao,
		coalesce(cd_medico_exec, cd_medico_exec_w),
		ie_lado,
		nr_seq_proc_interno,
		obter_data_maior(hr_inicio, clock_timestamp()),
		cd_topografia_proced nr_seq_topografia,
		(SELECT max(x.vl_coparticipacao) from agenda_paciente_auxiliar x where x.nr_seq_agenda = nr_seq_agenda_p)
	FROM	agenda_paciente
	WHERE	nr_sequencia	= nr_seq_agenda_p
	AND	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
	AND	ie_autorizados_w	=	'N'
	
UNION

	SELECT	b.cd_procedimento,
		b.ie_origem_proced,
		a.ie_autorizacao,
		coalesce(b.cd_medico, coalesce(a.cd_medico_exec, cd_medico_exec_w)),
		b.ie_lado,
		b.nr_seq_proc_interno,
		a.hr_inicio,
		(	select	max(z.nr_sequencia)
			from	topografia_dor z
			where	1=1
			and	z.nr_sequencia = b.cd_topografia_proced
			and	z.ie_prescricao = 'S' ) nr_seq_topografia,
		b.vl_coparticipacao
	FROM 	agenda_paciente a,
		agenda_paciente_proc b
	WHERE	a.nr_sequencia	= nr_seq_agenda_p
	AND	a.nr_sequencia	= b.nr_sequencia
	AND	ie_autorizados_w	=	'N'
	
UNION

	SELECT 	c.cd_procedimento,
		c.ie_origem_proced,
		'A',
		coalesce(a.cd_medico_exec, cd_medico_exec_w),
		c.ie_lado,
		c.nr_seq_proc_interno,
		a.hr_inicio,
		a.cd_topografia_proced nr_seq_topografia,
		(select max(x.vl_coparticipacao) from agenda_paciente_auxiliar x where x.nr_seq_agenda = a.nr_sequencia)
	FROM 	agenda_paciente a,
		autorizacao_convenio b,
		procedimento_autorizado c
	WHERE	c.nr_sequencia_autor	= b.nr_sequencia
	AND	a.nr_sequencia		= nr_seq_agenda_p
	AND	a.nr_sequencia 		= b.nr_seq_agenda
	AND	ie_autorizados_w	in ('S','A');

c03 CURSOR FOR
	SELECT	9999 nr_seq_apresentacao,
		a.cd_material,
		a.qt_material,
		SUBSTR(obter_dados_material_estab(a.cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo,
		b.ie_via_aplicacao,
		'N' ie_dispensavel,
		0 cd_kit_material,
		0 nr_seq_componente,
		'' cd_fornecedor,
		b.ie_tipo_material,
		0,
		NULL,
		'S',
		NULL,
		'N'
	FROM	material b,
		agenda_pac_opme a
	WHERE	a.cd_material			=	b.cd_material
	AND	a.ie_autorizado			=	'A'
	AND	a.nr_seq_agenda			=	nr_seq_agenda_p
	ORDER BY nr_seq_apresentacao;

c04 CURSOR FOR
	SELECT	cd_material
	FROM	componente_kit_opcao
	WHERE	cd_kit_material		= cd_kit_material_w
	AND	nr_seq_componente	= nr_seq_componente_w;
	
c05 CURSOR FOR
	SELECT	cd_setor_atendimento
	FROM	procedimento_setor_atend
	WHERE	cd_procedimento		= cd_procedimento_ind_w
	AND	ie_origem_proced		= ie_origem_proced_ind_w
	AND	cd_estabelecimento		= cd_estabelecimento_w
	ORDER	BY ie_prioridade DESC;


BEGIN
	
SELECT	cd_estabelecimento,
	ie_tipo_atendimento
INTO STRICT	cd_estabelecimento_w,
	ie_tipo_atendimento_w
FROM	atendimento_paciente
WHERE	nr_atendimento = nr_atendimento_p;

SELECT	coalesce(MAX(cd_convenio),0),
	coalesce(MAX(cd_categoria),0),
	coalesce(MAX(cd_plano_convenio),'')
INTO STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w
FROM 	atend_categoria_convenio
WHERE	nr_atendimento = nr_atendimento_p;

/* Obter os valores dos parametros na funcao Entrada Unica de Pacientes - EUP */

ie_data_w := Obter_Param_Usuario(916, 45, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_data_w);
ie_medico_prescr_w := Obter_Param_Usuario(916, 203, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_medico_prescr_w);
cd_setor_entrega_w  := Obter_Param_Usuario(916, 457, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_setor_entrega_w );
ie_atualizar_setor_agenda_w := obter_param_usuario(916, 452, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualizar_setor_agenda_w);
ie_atualiza_setor_entrega := Obter_param_usuario(916, 270, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_atualiza_setor_entrega);
ie_prescr_agenda_w := Obter_param_usuario(916, 655, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_prescr_agenda_w);
ie_adep_w := Obter_param_usuario(924, 246, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_adep_w);
ie_liberar_w := Obter_param_usuario(916, 519, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_liberar_w);
ie_nr_doc_convenio_w := Obter_param_usuario(916, 714, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_nr_doc_convenio_w);
cd_setor_padrao_646_w := Obter_param_usuario(916, 646, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_setor_padrao_646_w);
ie_gera_opme_w := Obter_param_usuario(820, 315, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gera_opme_w);
ie_autorizados_w := Obter_param_usuario(820, 332, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_autorizados_w);
ie_gerar_setor_w := Obter_param_usuario(916, 915, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_setor_w);
ie_setor_usuario_paciente_w := Obter_param_usuario(916, 47, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_setor_usuario_paciente_w);
ie_traz_indi_clinica_w := Obter_Param_Usuario(916, 1017, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_traz_indi_clinica_w);
ie_seguir_regra_w := Obter_Param_Usuario(916, 1029, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_seguir_regra_w);

if (ie_seguir_regra_w = 'S') then
	begin
	cd_setor_w := Obter_Regra_Atributo2('PRESCR_MEDICA','CD_SETOR_ENTREGA',0,'VLD',wheb_usuario_pck.get_cd_estabelecimento,obter_perfil_ativo,obter_funcao_ativa,nm_usuario_p);

	if (cd_setor_w > 0) then
		cd_setor_atendimento_w := cd_setor_w;
	end if;
	end;
end if;

SELECT	MAX(cd_pessoa_Fisica)
INTO STRICT	cd_pessoa_fisica_w
FROM	usuario
WHERE	nm_usuario = nm_usuario_p;

SELECT	CASE WHEN COUNT(*)=0 THEN 'N'  ELSE 'S' END
INTO STRICT	ie_medico_w
FROM	medico
WHERE	cd_pessoa_fisica = cd_pessoa_fisica_w
AND	ie_situacao	= 'A';

IF (ie_medico_w = 'S') THEN
	ie_origem_inf_w	:= 1;
ELSE
	ie_origem_inf_w	:= 3;
END IF;


IF (ie_adep_w = 'DS') THEN
	SELECT	coalesce(MAX(ie_adep),'S')
	INTO STRICT	ie_adep_w
	FROM	setor_atendimento
	WHERE	cd_setor_atendimento = cd_setor_atendimento_w;
ELSIF (ie_adep_w = 'NV') THEN
	ie_adep_w := 'N';
ELSIF (ie_adep_w = 'PV') THEN
	ie_adep_w := 'S';
ELSIF (ie_adep_w =  'PNV') THEN
	ie_adep_w := 'N';
ELSE
	ie_adep_w := 'S';
END IF;


SELECT	Obter_Valor_Param_Usuario(916,161, obter_perfil_ativo, nm_usuario_p,0)
INTO STRICT	ie_controle_w
;

/* Obter o valor do parametro na funcao Menu do sistema */

ie_agenda_nova_w := Obter_Param_Usuario(0, 75, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_agenda_nova_w);

IF (ie_agenda_nova_w = 'S') THEN
	/* Obter o valor do parametro na funcao Agenda de Exames - Jerusa em 01/07/2008 OS 96978 */

	ie_regra_prescr_w := Obter_Param_Usuario(820, 36, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_regra_prescr_w);
END IF;

/* Rafael em 30/18/ OS81037 inclui este IF */

IF (coalesce(nr_seq_agenda_p,0) > 0) THEN
	SELECT	coalesce(Obter_Valor_Param_Usuario(39, 88, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N')
	INTO STRICT	ie_medico_requisitante_w
	;
	IF (ie_medico_requisitante_w	= 'N') THEN
		SELECT	coalesce(Obter_Valor_Param_Usuario(820, 136, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_w), 'N')
		INTO STRICT	ie_medico_requisitante_w
		;
	END IF;
ELSE
	ie_medico_requisitante_w := 'N';
END IF;

/* Obter as informacoes da agenda */

SELECT	coalesce(MAX(cd_procedimento),0),
	coalesce(MAX(ie_origem_proced),0),
	MAX(cd_medico),
	MAX(qt_peso),
	MAX(qt_altura_cm),
	MAX(nr_seq_proc_interno),
	max(ie_anestesia)
INTO STRICT	cd_procedimento_w,
	ie_origem_proced_w,
	cd_medico_agenda_w,
	qt_peso_agenda_w,
	qt_altura_cm_w,
	nr_seq_proc_interno_uni_w,
	ie_anestesia_w
FROM	agenda_paciente
WHERE	nr_sequencia	= nr_seq_agenda_p;

IF (cd_setor_atendimento_w = 0) THEN
	/*select	nvl(max(cd_setor_exclusivo),0) -- Rafael em 05/12/2007 OS73448 */

	SELECT	coalesce(coalesce(MAX(a.cd_setor_atendimento),MAX(b.cd_setor_exclusivo)),0)
	INTO STRICT	cd_setor_atendimento_w
	FROM	Agenda b,
		agenda_paciente a
	WHERE 	a.cd_agenda	= b.cd_agenda
	AND	a.nr_sequencia	= nr_seq_agenda_p;
END IF;

cd_setor_padrao_w	:= NULL;

IF ie_atualizar_setor_agenda_w = 'S' THEN
	SELECT 	obter_dados_agendamento(nr_seq_agenda_p,'CSA')
	INTO STRICT	cd_setor_entrega_w
	;
END IF;

IF (coalesce(cd_setor_entrega_w,0) > 0) THEN
	cd_setor_padrao_w	:= cd_setor_entrega_w;
END IF;

IF (cd_setor_atendimento_w = 0) THEN
	SELECT	coalesce(MAX(cd_setor_exclusivo),0)
	INTO STRICT	cd_setor_atendimento_w
	FROM	procedimento
	WHERE	cd_procedimento	= cd_procedimento_w
	AND	ie_origem_proced	= ie_origem_proced_w;
END IF;

IF (ie_prescr_agenda_w = 'S') THEN
	cd_setor_atendimento_w	:= 0;
END IF;

IF (cd_setor_atendimento_w = 0) THEN
	IF (REMOVER_ACENTUACAO(ie_setor_p) = 'Usuario') THEN
		cd_setor_atendimento_w	:= coalesce(cd_setor_usuario_p,0);
	ELSIF (ie_setor_p = 'Paciente') THEN -- Paciente
		SELECT coalesce(MAX(cd_setor_atendimento),coalesce(cd_setor_usuario_p,0))
		INTO STRICT cd_setor_atendimento_w
		FROM atend_paciente_unidade
		WHERE nr_seq_interno	= obter_atepacu_paciente(nr_atendimento_p, 'A');
	ELSIF (ie_setor_p = 'Procedimento') THEN -- Procedimento
		BEGIN
		OPEN	c01;
		LOOP
		FETCH	c01 INTO cd_setor_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			BEGIN
			cd_setor_atendimento_w	:= cd_setor_proced_w;
			END;
		END LOOP;
		CLOSE c01;
		IF (cd_setor_atendimento_w = 0) THEN
			cd_setor_atendimento_w	:= coalesce(cd_setor_usuario_p,0);
		END IF;
		END;
	ELSIF (ie_setor_p = 'Proc Interno') THEN -- Proc Interno
		BEGIN

		SELECT	coalesce(MAX(Obter_Setor_exec_proc_interno(nr_seq_proc_interno_uni_w,NULL,ie_tipo_atendimento_w,cd_convenio_w,cd_categoria_w)),0)
		INTO STRICT	cd_setor_atendimento_w
		;

		END;
	END IF;
END IF;

IF (cd_setor_atendimento_w = 0) THEN
	SELECT	cd_setor_atendimento
	INTO STRICT	cd_setor_atendimento_w
	FROM	usuario
	WHERE	nm_usuario	= nm_usuario_p;
END IF;

IF (cd_setor_atendimento_w	= 0) THEN
	cd_setor_atendimento_w	:= NULL;
END IF;

/* Obter ie_origem_inf se e medico ou nao */

SELECT	coalesce(MAX('1'),'3')
INTO STRICT	ie_origem_inf_w
FROM	Medico b,
	Usuario a
WHERE 	a.nm_usuario	= nm_usuario_p
AND	a.cd_pessoa_fisica	= b.cd_pessoa_fisica;

dt_prescricao_w	:= clock_timestamp();

IF (ie_data_w = 'E') THEN
	SELECT	dt_entrada
	INTO STRICT	dt_prescricao_w
	FROM	atendimento_paciente
	WHERE	nr_atendimento	= nr_atendimento_p;
END IF;

if (coalesce(dt_entrega_p,clock_timestamp()) < dt_prescricao_w)then
	dt_entrega_w	:= dt_prescricao_w;
else
	dt_entrega_w	:= coalesce(dt_entrega_p,clock_timestamp());
end if;

/* Select utilizado na proc agenda prescricao */

SELECT	MAX(b.cd_pessoa_fisica)
INTO STRICT	cd_medico_exec_w
FROM	agenda b,
	agenda_paciente a
WHERE 	a.nr_sequencia	= nr_seq_agenda_p
AND	a.cd_agenda	= b.cd_agenda;

/*define setor_atendimento conforme parametro[270]*/

IF (ie_atualiza_setor_entrega = 'P') THEN
	SELECT 	coalesce(MAX(cd_setor_atendimento),cd_setor_usuario_p)
	INTO STRICT	cd_setor_entrega_270_w
	FROM 	atend_paciente_unidade
	WHERE 	nr_seq_interno = obter_atepacu_paciente(nr_atendimento_p, 'A');
ELSIF (ie_atualiza_setor_entrega = 'U') THEN
	cd_setor_entrega_270_w:=  cd_setor_entrega_w;
ELSIF (ie_atualiza_setor_entrega = 'A') AND (coalesce(cd_setor_padrao_646_w,0) > 0) THEN
	cd_setor_entrega_270_w:= cd_setor_padrao_646_w;
END IF;
IF (cd_setor_entrega_270_w	= 0) THEN
	cd_setor_entrega_270_w		:= NULL;
END IF;

if (ie_gerar_setor_w = 'N') then
  if (coalesce(cd_setor_entrega_270_w,(coalesce(cd_setor_padrao_w,cd_setor_atendimento_w))) is null) then
    CALL WHEB_MENSAGEM_PCK.EXIBIR_MENSAGEM_ABORT(1104039);
  end if;
end if;
	
/* Gera a prescricao medica, conforme o parametro [36] da funcao Agenda de Exames */


/*Observacao: Ao alterar a procedure:  Gerar_Proc_Agenda_Prescricao deve ser analisada a procedure: Gerar_Proc_Agenda_Prescr_Ind, pois a mesma possui a mesma funcionalidade */

IF (ie_regra_prescr_w = 'U') THEN
	BEGIN
	SELECT	nextval('prescr_medica_seq')
	INTO STRICT	nr_prescricao_w
	;


	IF (ie_medico_requisitante_w	= 'S') THEN
		nr_seq_forma_laudo_w	:= Obter_Forma_Entrega_Regra(nr_seq_proc_interno_uni_w, cd_medico_agenda_w, cd_procedimento_w, ie_origem_proced_w, nm_usuario_p);
	END IF;

	IF ((coalesce(cd_setor_padrao_w,cd_setor_atendimento_w) IS NOT NULL AND (coalesce(cd_setor_padrao_w,cd_setor_atendimento_w))::text <> '')) THEN

		hr_inicio_prescricao_w:= Obter_Prim_Horario_Prescricao(nr_atendimento_p, coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),dt_prescricao_w,nm_usuario_p,'R');

	END IF;

	if (coalesce(nr_seq_agenda_p,0) = 0) AND (ie_seguir_regra_w = 'N') THEN
		
		cd_setor_atendimento_w := null;
		
		if (ie_setor_usuario_paciente_w = 'Paciente') then -- Paciente
			select	max(cd_setor_atendimento)
			into STRICT	cd_setor_atendimento_w
			from   	atend_paciente_unidade
			where   nr_seq_interno	= obter_atepacu_paciente(nr_atendimento_p,'A');		
		elsif (REMOVER_ACENTUACAO(ie_setor_usuario_paciente_w) = 'Usuario') then
			cd_setor_atendimento_w	:= coalesce(cd_setor_usuario_p,0);
		ELSIF (ie_setor_p = 'Procedimento') THEN -- Procedimento
			BEGIN
			OPEN	c01;
			LOOP
			FETCH	c01 INTO cd_setor_proced_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			BEGIN
				cd_setor_atendimento_w	:= cd_setor_proced_w;
			END;
			END LOOP;
			CLOSE c01;
			IF (coalesce(cd_setor_atendimento_w::text, '') = '') THEN
				cd_setor_atendimento_w	:= coalesce(cd_setor_usuario_p,0);
			END IF;
			END;
		end if;	
	end if;

	select 	max(substr(a.ds_cirurgia,1,255))
	into STRICT	ds_cirurgia_w
	From	agenda_paciente a
	WHERE 	a.nr_sequencia	= nr_seq_agenda_p;
	
	INSERT INTO prescr_medica(
		nr_prescricao,
		cd_pessoa_fisica,
		nr_atendimento,
		cd_medico,
		dt_prescricao,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_original,
		nr_horas_validade,
		dt_primeiro_horario,
		dt_liberacao,
		cd_setor_atendimento,
		cd_setor_entrega,
		dt_entrega,
		ie_recem_nato,
		ie_origem_inf,
		cd_estabelecimento,
		nr_seq_agenda,
		cd_prescritor,
		nr_controle,
		qt_peso,
		qt_altura_cm,
		nr_seq_forma_laudo,
		ie_adep,
		ds_dado_clinico)
	SELECT 	nr_prescricao_w,
		a.cd_pessoa_fisica,
		nr_atendimento_p,
		CASE WHEN ie_medico_requisitante_w='N' THEN  CASE WHEN ie_medico_prescr_w='MR' THEN a.cd_medico_resp WHEN ie_medico_prescr_w='RE' THEN a.cd_medico_referido  ELSE NULL END   ELSE cd_medico_agenda_w END ,
		dt_prescricao_w,
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		24,
		hr_inicio_prescricao_w,
		NULL,
		coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),
		CASE WHEN ie_gerar_setor_w='S' THEN NULL  ELSE coalesce(cd_setor_entrega_270_w,(coalesce(cd_setor_padrao_w,cd_setor_atendimento_w))) END ,
		dt_entrega_w,
		'N',
		ie_origem_inf_w,
		cd_estabelecimento_w,
		CASE WHEN coalesce(nr_seq_agenda_p,0)=0 THEN  NULL  ELSE nr_seq_agenda_p END ,
		obter_dados_usuario_opcao(nm_usuario_p, 'C'),
		nr_controle_w,
		qt_peso_agenda_w,
		qt_altura_cm_w,
		nr_seq_forma_laudo_w,
		ie_adep_w,
		CASE WHEN ie_traz_indi_clinica_w='S' THEN ds_cirurgia_w  ELSE null END 
	FROM	atendimento_paciente a
	WHERE	a.nr_atendimento	= nr_atendimento_p;


	IF (ie_gera_opme_w = 'S') THEN
		-- gerar materiais
		OPEN c03;
		LOOP
		FETCH c03 INTO  nr_seq_apresentacao_w,
				cd_material_w,
				qt_material_w,
				cd_unidade_medida_w,
				ie_via_aplicacao_w,
				ie_dispensavel_w,
				cd_kit_material_w,
				nr_seq_componente_w,
				cd_fornecedor_w,
				ie_tipo_material_w,
				cd_convenio_ww,
				cd_categoria_w,
				ie_duplica_prescr_w,
				nr_seq_lote_fornec_w,
				ie_gerado_avulso_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		BEGIN

		ds_materiais_w	:= ' ';

		IF (cd_kit_material_w <> 0) AND (nr_seq_componente_w <> 0) THEN
			BEGIN
			OPEN	c04;
			LOOP
			FETCH	c04 INTO
				cd_material_opcao_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
			BEGIN
				IF (ds_materiais_w	= ' ') THEN
					ds_materiais_w	:= wheb_mensagem_pck.get_texto(308445) || ': '; -- Materiais substitutos
				END IF;
				ds_materiais_w	:= ds_materiais_w || cd_material_opcao_w || ';';
			END;
			END LOOP;
			CLOSE c04;
			END;
		END IF;

		SELECT	coalesce(MAX(nr_sequencia),0) + 1
		INTO STRICT	nr_seq_prescr_material_w
		FROM	prescr_material
		WHERE	nr_prescricao = nr_prescricao_w;

		SELECT	coalesce(MAX(nr_agrupamento),0) + 1
		INTO STRICT	nr_agrupamento_w
		FROM	prescr_material
		WHERE	nr_prescricao = nr_prescricao_w;

		SELECT	TO_CHAR(dt_primeiro_horario,'HH24:MM')
		INTO STRICT	hr_prim_horario_w
		FROM	prescr_medica
		WHERE	nr_prescricao = nr_prescricao_w;

		SELECT	coalesce(MAX('N'),'S')
		INTO STRICT	ie_registra_w
		FROM	prescr_material
		WHERE	cd_material = cd_material_w
		AND	nr_prescricao = nr_prescricao_w
		AND	coalesce(ie_duplica_prescr_w,'S') = 'N';

		IF (ie_registra_w = 'S') THEN
			BEGIN
			ie_gerou_itens_w := 'S';

			UPDATE	prescr_material
			SET	qt_dose		= qt_dose + qt_material_w,
				qt_unitaria	= qt_unitaria + qt_material_w,
				qt_material	= qt_material + qt_material_w,
				qt_total_dispensar = qt_total_dispensar + qt_material_w
			WHERE	nr_prescricao	= nr_prescricao_w
			--and	ie_origem_inf	= ie_origem_inf_p
			AND	cd_material	= cd_material_w
			AND	cd_unidade_medida	= cd_unidade_medida_w
			AND	ie_status_cirurgia	= 'GI'
			AND	ie_acumula_w		= 'S'
			AND	cd_motivo_baixa = 0
			AND	coalesce(dt_baixa::text, '') = ''
			AND	coalesce(nr_seq_lote_fornec, 0) = coalesce(nr_seq_lote_fornec_w, 0);


			IF (NOT FOUND) OR (ie_acumula_w = 'N') THEN
				BEGIN


				INSERT INTO prescr_material(nr_prescricao,
					nr_sequencia,
					ie_origem_inf,
					cd_material,
					cd_unidade_medida,
					qt_dose,
					qt_unitaria,
					qt_material,
					dt_atualizacao,
					nm_usuario,
					cd_intervalo,
					ds_horarios,
					ds_observacao,
					ie_via_aplicacao,
					nr_agrupamento,
					cd_motivo_baixa,
					dt_baixa,
					ie_utiliza_kit,
					cd_unidade_medida_dose,
					qt_conversao_dose,
					ie_urgencia,
					nr_ocorrencia,
					qt_total_dispensar,
					cd_fornec_consignado,
					nr_sequencia_solucao,
					nr_sequencia_proc,
					qt_solucao,
					hr_dose_especial,
					qt_dose_especial,
					ds_dose_diferenciada,
					ie_medicacao_paciente,
					nr_sequencia_diluicao,
					hr_prim_horario,
					nr_dia_util,
					nr_sequencia_dieta,
					ie_agrupador,
					dt_emissao_setor_atend,
					ie_suspenso,
					ds_justificativa,
					qt_dias_solicitado,
					qt_dias_liberado,
					nm_usuario_liberacao,
					dt_liberacao,
					ie_se_necessario,
					qt_min_aplicacao,
					nr_seq_lote_fornec,
					ie_status_cirurgia,
					ie_bomba_infusao,
					ie_aplic_bolus,
					ie_aplic_lenta,
					ie_acm,
					--cd_kit_material,
					ie_recons_diluente_fixo,
					cd_convenio,
					cd_categoria,
					ie_sem_aprazamento,
					nr_doc_interno,
					cd_local_estoque,
					nr_seq_reg_kit,
					nr_doc_interno_aux)
				VALUES (  nr_prescricao_w,
					nr_seq_prescr_material_w,
					ie_origem_inf_w,
					cd_material_w,
					cd_unidade_medida_w,
					qt_material_w,
					qt_material_w,
					qt_material_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_intervalo_w,
					NULL,
					ds_materiais_w,
					ie_via_aplicacao_w,
					nr_agrupamento_w,
					0,
					NULL,
					'N',
					NULL,
					NULL,
					'N',
					1,
					qt_material_w,
					cd_fornecedor_w,
					NULL,
					NULL,
					NULL,
					NULL,
					 NULL,
					NULL,
					'N',
					NULL,
					hr_prim_horario_w,
					NULL,
					NULL,
					CASE WHEN ie_tipo_material_w='1' THEN  2 WHEN ie_tipo_material_w='2' THEN  1 WHEN ie_tipo_material_w='3' THEN  1  ELSE 2 END ,
					NULL,
					'N',
					NULL,
					NULL,
					NULL,
					NULL,
					NULL,
					ie_dispensavel_w,
					NULL,
					nr_seq_lote_fornec_w,
					CASE WHEN ie_gerar_consistido_w='S' THEN  'CB'  ELSE 'GI' END ,
					'N',
					'N',
					'N',
					'N',
					--decode(cd_kit_material_p, 0, decode(nvl(cd_kit_material_w,0),0,null,cd_kit_material_w), cd_kit_material_p),
					'N',
					CASE WHEN cd_convenio_ww=0 THEN NULL  ELSE cd_convenio_ww END ,
					cd_categoria_w,
					'N',
					nr_doc_interno_w,
					NULL,
					CASE WHEN nr_seq_reg_kit_w=0 THEN NULL  ELSE nr_seq_reg_kit_w END ,
					nr_doc_interno_aux_w);--,
				COMMIT;
				END;
			END IF;
			END;
		END IF;


		END;
		END LOOP;
		CLOSE c03;
	END IF;

	IF (ie_controle_w = 'S') THEN
		BEGIN
		select 	campo_numerico(obter_agenda_atendimento(nr_atendimento_p,'C'))
		into STRICT 	cd_agenda_w
		;
		
		SELECT	coalesce(MAX(nr_controle),0) + 1
		INTO STRICT	nr_controle_w
		FROM	prescr_medica a,
			agenda_paciente b
		WHERE	a.nr_atendimento	= b.nr_atendimento
		AND	b.cd_agenda	= cd_agenda_w;

		UPDATE	prescr_medica
		SET	nr_controle	= nr_controle_w
		WHERE	nr_prescricao	= nr_prescricao_w;
		COMMIT;
		END;
	END IF;

	IF (ie_nr_doc_convenio_w in ('S', 'A')) THEN

		SELECT	MAX(nr_doc_convenio),
				MAX(ds_senha)
		INTO STRICT	nr_doc_convenio_w,
				ds_senha_w
		FROM	agenda_paciente
		WHERE	nr_sequencia	= nr_seq_agenda_p
		AND	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');
		
		if (nr_doc_convenio_w IS NOT NULL AND nr_doc_convenio_w::text <> '') then
			UPDATE	prescr_medica
			SET	nr_doc_conv = nr_doc_convenio_w
			WHERE 	nr_prescricao	= nr_prescricao_w;
		end if;

		if (ds_senha_w IS NOT NULL AND ds_senha_w::text <> '') then
			UPDATE	prescr_medica
			SET	cd_senha = CASE WHEN ie_nr_doc_convenio_w='A' THEN ds_senha_w END
			WHERE 	nr_prescricao	= nr_prescricao_w;			
		end if;
		COMMIT;

	END IF;
	
	IF (cd_setor_atendimento_w <> 0) AND (coalesce(nr_seq_agenda_p,0) > 0) AND (nr_prescricao_w > 0) THEN
		BEGIN
		/* Gera os procedimentos da agenda na prescricao criada */

				CALL Gerar_Proc_Agenda_Prescricao(nr_seq_agenda_p, nr_prescricao_w, cd_setor_atendimento_w, nm_usuario_p);
		END;
	END IF;

	IF (ie_liberar_w	= 'S') and (coalesce(nr_seq_agenda_p,0) > 0) THEN
		ds_erro_w := liberar_prescricao(nr_prescricao_w, nr_atendimento_p, ie_medico_w, Obter_Perfil_Ativo, nm_usuario_p, 'N', ds_erro_w);
	END IF;

	END;
ELSIF (ie_regra_prescr_w = 'I') THEN /* Gera a prescricao individualmente para cada procedimento na agenda de exames */
	BEGIN
	OPEN c02;
	LOOP
	FETCH c02 INTO
		cd_procedimento_ind_w,
		ie_origem_proced_ind_w,
		ie_autorizacao_w,
		cd_medico_agenda_ind_w,
		ie_lado_w,
		nr_seq_proc_interno_w,
		hr_inicio_w,
		nr_seq_topografia_w,
		vl_coparticipacao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		BEGIN
		/* Gera uma prescricao para cada procedimento da agenda */

		SELECT	nextval('prescr_medica_seq')
		INTO STRICT	nr_prescricao_ind_w
		;

		IF (ie_medico_requisitante_w = 'S') THEN
			nr_seq_forma_laudo_w	:= Obter_Forma_Entrega_Regra(nr_seq_proc_interno_w, cd_medico_agenda_w, cd_procedimento_ind_w, ie_origem_proced_ind_w, nm_usuario_p);
		END IF;

		hr_inicio_prescricao_w:= Obter_Prim_Horario_Prescricao(nr_atendimento_p, coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),dt_prescricao_w,nm_usuario_p,'R');

		select 	max(substr(a.ds_cirurgia,1,255))
		into STRICT	ds_cirurgia_w
		From	agenda_paciente a
		WHERE 	a.nr_sequencia	= nr_seq_agenda_p;		
		
		INSERT INTO prescr_medica(
			nr_prescricao,
			cd_pessoa_fisica,
			nr_atendimento,
			cd_medico,
			dt_prescricao,
			dt_atualizacao,
			nm_usuario,
			nm_usuario_original,
			nr_horas_validade,
			dt_primeiro_horario,
			dt_liberacao,
			cd_setor_atendimento,
			cd_setor_entrega,
			dt_entrega,
			ie_recem_nato,
			ie_origem_inf,
			cd_estabelecimento,
			nr_seq_agenda,
			cd_prescritor,
			nr_controle,
			qt_peso,
			qt_altura_cm,
			nr_seq_forma_laudo,
			ds_dado_clinico)
		SELECT 	nr_prescricao_ind_w,
			a.cd_pessoa_fisica,
			nr_atendimento_p,
			CASE WHEN ie_medico_requisitante_w='N' THEN  CASE WHEN ie_medico_prescr_w='MR' THEN a.cd_medico_resp WHEN ie_medico_prescr_w='RE' THEN a.cd_medico_referido  ELSE NULL END   ELSE cd_medico_agenda_w END ,
			dt_prescricao_w,
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			24,
			hr_inicio_prescricao_w,
			NULL,
			coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),
			CASE WHEN ie_gerar_setor_w='S' THEN NULL  ELSE coalesce(cd_setor_entrega_270_w,(coalesce(cd_setor_padrao_w,cd_setor_atendimento_w))) END ,
			dt_entrega_w,
			'N',
			ie_origem_inf_w,
			cd_estabelecimento_w,
			CASE WHEN coalesce(nr_seq_agenda_p,0)=0 THEN  NULL  ELSE nr_seq_agenda_p END ,
			obter_dados_usuario_opcao(nm_usuario_p, 'C'),
			nr_controle_w,
			qt_peso_agenda_w,
			qt_altura_cm_w,
			nr_seq_forma_laudo_w,
			CASE WHEN ie_traz_indi_clinica_w='S' THEN ds_cirurgia_w  ELSE null END
		FROM	atendimento_paciente a
		WHERE	a.nr_atendimento	= nr_atendimento_p;


		IF (ie_gera_opme_w = 'S') THEN
			-- gerar materiais
			OPEN c03;
			LOOP
			FETCH c03 INTO  nr_seq_apresentacao_w,
					cd_material_w,
					qt_material_w,
					cd_unidade_medida_w,
					ie_via_aplicacao_w,
					ie_dispensavel_w,
					cd_kit_material_w,
					nr_seq_componente_w,
					cd_fornecedor_w,
					ie_tipo_material_w,
					cd_convenio_ww,
					cd_categoria_w,
					ie_duplica_prescr_w,
					nr_seq_lote_fornec_w,
					ie_gerado_avulso_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
			BEGIN

			ds_materiais_w	:= ' ';

			IF (cd_kit_material_w <> 0) AND (nr_seq_componente_w <> 0) THEN
				BEGIN
				OPEN	c04;
				LOOP
				FETCH	c04 INTO
					cd_material_opcao_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
				BEGIN
					IF (ds_materiais_w	= ' ') THEN
						ds_materiais_w	:= wheb_mensagem_pck.get_texto(308445) || ': '; -- Materiais substitutos
					END IF;
					ds_materiais_w	:= ds_materiais_w || cd_material_opcao_w || ';';
				END;
				END LOOP;
				CLOSE c04;
				END;
			END IF;

			SELECT	coalesce(MAX(nr_sequencia),0) + 1
			INTO STRICT	nr_seq_prescr_material_w
			FROM	prescr_material
			WHERE	nr_prescricao = nr_prescricao_w;

			SELECT	coalesce(MAX(nr_agrupamento),0) + 1
			INTO STRICT	nr_agrupamento_w
			FROM	prescr_material
			WHERE	nr_prescricao = nr_prescricao_w;

			SELECT	TO_CHAR(dt_primeiro_horario,'HH24:MM')
			INTO STRICT	hr_prim_horario_w
			FROM	prescr_medica
			WHERE	nr_prescricao = nr_prescricao_w;

			SELECT	coalesce(MAX('N'),'S')
			INTO STRICT	ie_registra_w
			FROM	prescr_material
			WHERE	cd_material = cd_material_w
			AND	nr_prescricao = nr_prescricao_w
			AND	coalesce(ie_duplica_prescr_w,'S') = 'N';

			IF (ie_registra_w = 'S') THEN
				BEGIN
				ie_gerou_itens_w := 'S';

				UPDATE	prescr_material
				SET	qt_dose		= qt_dose + qt_material_w,
					qt_unitaria	= qt_unitaria + qt_material_w,
					qt_material	= qt_material + qt_material_w,
					qt_total_dispensar = qt_total_dispensar + qt_material_w
				WHERE	nr_prescricao	= nr_prescricao_w
				--and	ie_origem_inf	= ie_origem_inf_p
				AND	cd_material	= cd_material_w
				AND	cd_unidade_medida	= cd_unidade_medida_w
				AND	ie_status_cirurgia	= 'GI'
				AND	ie_acumula_w		= 'S'
				AND	cd_motivo_baixa = 0
				AND	coalesce(dt_baixa::text, '') = ''
				AND	coalesce(nr_seq_lote_fornec, 0) = coalesce(nr_seq_lote_fornec_w, 0);


				IF (NOT FOUND) OR (ie_acumula_w = 'N') THEN
					BEGIN


					INSERT INTO prescr_material(nr_prescricao,
						nr_sequencia,
						ie_origem_inf,
						cd_material,
						cd_unidade_medida,
						qt_dose,
						qt_unitaria,
						qt_material,
						dt_atualizacao,
						nm_usuario,
						cd_intervalo,
						ds_horarios,
						ds_observacao,
						ie_via_aplicacao,
						nr_agrupamento,
						cd_motivo_baixa,
						dt_baixa,
						ie_utiliza_kit,
						cd_unidade_medida_dose,
						qt_conversao_dose,
						ie_urgencia,
						nr_ocorrencia,
						qt_total_dispensar,
						cd_fornec_consignado,
						nr_sequencia_solucao,
						nr_sequencia_proc,
						qt_solucao,
						hr_dose_especial,
						qt_dose_especial,
						ds_dose_diferenciada,
						ie_medicacao_paciente,
						nr_sequencia_diluicao,
						hr_prim_horario,
						nr_dia_util,
						nr_sequencia_dieta,
						ie_agrupador,
						dt_emissao_setor_atend,
						ie_suspenso,
						ds_justificativa,
						qt_dias_solicitado,
						qt_dias_liberado,
						nm_usuario_liberacao,
						dt_liberacao,
						ie_se_necessario,
						qt_min_aplicacao,
						nr_seq_lote_fornec,
						ie_status_cirurgia,
						ie_bomba_infusao,
						ie_aplic_bolus,
						ie_aplic_lenta,
						ie_acm,
						--cd_kit_material,
						ie_recons_diluente_fixo,
						cd_convenio,
						cd_categoria,
						ie_sem_aprazamento,
						nr_doc_interno,
						cd_local_estoque,
						nr_seq_reg_kit,
						nr_doc_interno_aux)
					VALUES (  nr_prescricao_w,
						nr_seq_prescr_material_w,
						ie_origem_inf_w,
						cd_material_w,
						cd_unidade_medida_w,
						qt_material_w,
						qt_material_w,
						qt_material_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_intervalo_w,
						NULL,
						ds_materiais_w,
						ie_via_aplicacao_w,
						nr_agrupamento_w,
						0,
						NULL,
						'N',
						NULL,
						NULL,
						'N',
						1,
						qt_material_w,
						cd_fornecedor_w,
						NULL,
						NULL,
						NULL,
						NULL,
						 NULL,
						NULL,
						'N',
						NULL,
						hr_prim_horario_w,
						NULL,
						NULL,
						CASE WHEN ie_tipo_material_w='1' THEN  2 WHEN ie_tipo_material_w='2' THEN  1 WHEN ie_tipo_material_w='3' THEN  1  ELSE 2 END ,
						NULL,
						'N',
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						ie_dispensavel_w,
						NULL,
						nr_seq_lote_fornec_w,
						CASE WHEN ie_gerar_consistido_w='S' THEN  'CB'  ELSE 'GI' END ,
						'N',
						'N',
						'N',
						'N',
						--decode(cd_kit_material_p, 0, decode(nvl(cd_kit_material_w,0),0,null,cd_kit_material_w), cd_kit_material_p),
						'N',
						CASE WHEN cd_convenio_ww=0 THEN NULL  ELSE cd_convenio_ww END ,
						cd_categoria_w,
						'N',
						nr_doc_interno_w,
						NULL,
						CASE WHEN nr_seq_reg_kit_w=0 THEN NULL  ELSE nr_seq_reg_kit_w END ,
						nr_doc_interno_aux_w);--,
					COMMIT;
					END;
				END IF;
				END;
			END IF;


			END;
			END LOOP;
			CLOSE c03;
		END IF;

		IF (ie_controle_w = 'S') THEN
			BEGIN
			select 	campo_numerico(obter_agenda_atendimento(nr_atendimento_p,'C'))
			into STRICT 	cd_agenda_w
			;			
			
			SELECT	coalesce(MAX(nr_controle),0) + 1
			INTO STRICT	nr_controle_w
			FROM	prescr_medica a,
				agenda_paciente b
			WHERE	a.nr_atendimento	= b.nr_atendimento
			AND	b.cd_agenda		= cd_agenda_w;

			UPDATE	prescr_medica
			SET	nr_controle	= nr_controle_w
			WHERE	nr_prescricao	= nr_prescricao_ind_w;
			COMMIT;
			END;
		END IF;

		IF (ie_nr_doc_convenio_w in ('S', 'A')) THEN
			
			SELECT	MAX(nr_doc_convenio),
					MAX(ds_senha)
			INTO STRICT	nr_doc_convenio_w,
					ds_senha_w
			FROM	agenda_paciente
			WHERE	nr_sequencia	= nr_seq_agenda_p
			AND	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');
			
			if (nr_doc_convenio_w IS NOT NULL AND nr_doc_convenio_w::text <> '') then
				UPDATE	prescr_medica
				SET	nr_doc_conv = nr_doc_convenio_w
				WHERE 	nr_prescricao	= nr_prescricao_ind_w;				
			end if;

			if (ds_senha_w IS NOT NULL AND ds_senha_w::text <> '') then
				UPDATE	prescr_medica
				SET	cd_senha = CASE WHEN ie_nr_doc_convenio_w='A' THEN ds_senha_w END
				WHERE 	nr_prescricao	= nr_prescricao_ind_w;
			end if;
			COMMIT;
		END IF;

		IF (cd_setor_atendimento_w <> 0) AND (coalesce(nr_seq_agenda_p,0) > 0) AND (nr_prescricao_ind_w > 0) THEN
			BEGIN
			
			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
				SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_ind_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_ind_w, ie_origem_proced_w;
			end if;

			/* Gera os procedimentos da agenda para cada prescricao criada */

			CALL Gerar_Proc_Agenda_Prescr_Ind(
				nr_seq_agenda_p, nr_prescricao_ind_w, cd_setor_atendimento_w, cd_procedimento_ind_w,
				ie_origem_proced_ind_w, ie_autorizacao_w, cd_medico_agenda_ind_w, ie_lado_w, nr_seq_proc_interno_w,
				hr_inicio_w, nm_usuario_p,
				nr_seq_topografia_w,ie_anestesia_w,vl_coparticipacao_w);

			END;
		END IF;

		IF (ie_liberar_w	= 'S') and (coalesce(nr_seq_agenda_p,0) > 0) THEN
			ds_erro_w := liberar_prescricao(nr_prescricao_ind_w, nr_atendimento_p, ie_medico_w, Obter_Perfil_Ativo, nm_usuario_p, 'N', ds_erro_w);
		END IF;

		END;
	END LOOP;
	CLOSE c02;
	END;
ELSIF (ie_regra_prescr_w	= 'S') THEN
	BEGIN
	
	OPEN c02;
	LOOP
	FETCH c02 INTO
		cd_procedimento_ind_w,
		ie_origem_proced_ind_w,
		ie_autorizacao_w,
		cd_medico_agenda_ind_w,
		ie_lado_w,
		nr_seq_proc_interno_w,
		hr_inicio_w,
		nr_seq_topografia_w,
		vl_coparticipacao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		BEGIN
				
		
		SELECT	coalesce(MAX(cd_setor_exclusivo),0)
		INTO STRICT	cd_setor_atendimento_w
		FROM	procedimento
		WHERE	cd_procedimento	= cd_procedimento_ind_w
		AND	ie_origem_proced	= ie_origem_proced_ind_w;

		IF (cd_setor_atendimento_w	= 0) THEN
			OPEN	c01;
			LOOP
			FETCH	c01 INTO cd_setor_proced_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				BEGIN
				cd_setor_atendimento_w	:= cd_setor_proced_w;
				END;
			END LOOP;
			CLOSE c01;
		END IF;
		
		if (cd_setor_atendimento_w	= 0) then
			SELECT	coalesce(MAX(Obter_Setor_exec_proc_interno(nr_seq_proc_interno_uni_w,NULL,ie_tipo_atendimento_w,cd_convenio_w,cd_categoria_w)),0)
			INTO STRICT	cd_setor_atendimento_w
			;
		end if;

		IF (cd_setor_atendimento_w = 0) THEN
			IF (REMOVER_ACENTUACAO(ie_setor_p) = 'Usuario') THEN
				cd_setor_atendimento_w	:= coalesce(cd_setor_usuario_p,0);
			ELSIF (ie_setor_p = 'Paciente') THEN -- Paciente
				SELECT coalesce(MAX(cd_setor_atendimento),coalesce(cd_setor_usuario_p,0))
				INTO STRICT cd_setor_atendimento_w
				FROM atend_paciente_unidade
				WHERE nr_seq_interno	= obter_atepacu_paciente(nr_atendimento_p, 'A');
			ELSIF (ie_setor_p = 'Procedimento') THEN -- Procedimento
				BEGIN
				OPEN	c01;
				LOOP
				FETCH	c01 INTO cd_setor_proced_w;
				EXIT WHEN NOT FOUND; /* apply on c01 */
					BEGIN
					cd_setor_atendimento_w	:= cd_setor_proced_w;
					END;
				END LOOP;
				CLOSE c01;
				IF (cd_setor_atendimento_w = 0) THEN
					cd_setor_atendimento_w	:= coalesce(cd_setor_usuario_p,0);
				END IF;
				END;
			ELSIF (ie_setor_p = 'Proc Interno') THEN -- Proc Interno
				BEGIN

				SELECT	coalesce(MAX(Obter_Setor_exec_proc_interno(nr_seq_proc_interno_uni_w,NULL,ie_tipo_atendimento_w,cd_convenio_w,cd_categoria_w)),0)
				INTO STRICT	cd_setor_atendimento_w
				;

				END;
			END IF;
		END IF;

		IF (cd_setor_atendimento_w = 0) THEN
			SELECT	cd_setor_atendimento
			INTO STRICT	cd_setor_atendimento_w
			FROM	usuario
			WHERE	nm_usuario	= nm_usuario_p;
		END IF;

		IF (cd_setor_atendimento_w	= 0) THEN
			cd_setor_atendimento_w	:= NULL;
		END IF;

		SELECT	MAX(a.nr_prescricao)
		INTO STRICT	nr_prescricao_ind_w
		FROM	prescr_medica a,
			prescr_procedimento b
		WHERE	a.nr_prescricao		= b.nr_prescricao
		and	b.cd_setor_atendimento	= cd_setor_atendimento_w
		AND	a.nr_atendimento	= nr_atendimento_p;
		
		IF (coalesce(nr_prescricao_ind_w::text, '') = '') THEN
			SELECT	nextval('prescr_medica_seq')
			INTO STRICT	nr_prescricao_ind_w
			;

			IF (ie_medico_requisitante_w = 'S') THEN
				nr_seq_forma_laudo_w	:= Obter_Forma_Entrega_Regra(nr_seq_proc_interno_w, cd_medico_agenda_w, cd_procedimento_ind_w, ie_origem_proced_ind_w, nm_usuario_p);
			END IF;

			hr_inicio_prescricao_w:= Obter_Prim_Horario_Prescricao(nr_atendimento_p, coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),dt_prescricao_w,nm_usuario_p,'R');

			INSERT INTO prescr_medica(
				nr_prescricao,
				cd_pessoa_fisica,
				nr_atendimento,
				cd_medico,
				dt_prescricao,
				dt_atualizacao,
				nm_usuario,
				nm_usuario_original,
				nr_horas_validade,
				dt_primeiro_horario,
				dt_liberacao,
				cd_setor_atendimento,
				cd_setor_entrega,
				dt_entrega,
				ie_recem_nato,
				ie_origem_inf,
				cd_estabelecimento,
				nr_seq_agenda,
				cd_prescritor,
				nr_controle,
				qt_peso,
				qt_altura_cm,
				nr_seq_forma_laudo)
			SELECT 	nr_prescricao_ind_w,
				a.cd_pessoa_fisica,
				nr_atendimento_p,
				CASE WHEN ie_medico_requisitante_w='N' THEN  CASE WHEN ie_medico_prescr_w='MR' THEN a.cd_medico_resp WHEN ie_medico_prescr_w='RE' THEN a.cd_medico_referido  ELSE NULL END   ELSE cd_medico_agenda_w END ,
				dt_prescricao_w,
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				24,
				hr_inicio_prescricao_w,
				NULL,
				coalesce(cd_setor_padrao_w,cd_setor_atendimento_w),
				CASE WHEN ie_gerar_setor_w='S' THEN NULL  ELSE coalesce(cd_setor_entrega_270_w,(coalesce(cd_setor_padrao_w,cd_setor_atendimento_w))) END ,
				dt_entrega_w,
				'N',
				ie_origem_inf_w,
				cd_estabelecimento_w,
				CASE WHEN coalesce(nr_seq_agenda_p,0)=0 THEN  NULL  ELSE nr_seq_agenda_p END ,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				nr_controle_w,
				qt_peso_agenda_w,
				qt_altura_cm_w,
				nr_seq_forma_laudo_w
			FROM	atendimento_paciente a
			WHERE	a.nr_atendimento	= nr_atendimento_p;
		END IF;

		IF (ie_gera_opme_w = 'S') THEN
			-- gerar materiais
			OPEN c03;
			LOOP
			FETCH c03 INTO  nr_seq_apresentacao_w,
					cd_material_w,
					qt_material_w,
					cd_unidade_medida_w,
					ie_via_aplicacao_w,
					ie_dispensavel_w,
					cd_kit_material_w,
					nr_seq_componente_w,
					cd_fornecedor_w,
					ie_tipo_material_w,
					cd_convenio_ww,
					cd_categoria_w,
					ie_duplica_prescr_w,
					nr_seq_lote_fornec_w,
					ie_gerado_avulso_w;
			EXIT WHEN NOT FOUND; /* apply on c03 */
			BEGIN

			ds_materiais_w	:= ' ';

			IF (cd_kit_material_w <> 0) AND (nr_seq_componente_w <> 0) THEN
				BEGIN
				OPEN	c04;
				LOOP
				FETCH	c04 INTO
					cd_material_opcao_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
				BEGIN
					IF (ds_materiais_w	= ' ') THEN
						ds_materiais_w	:= wheb_mensagem_pck.get_texto(308445) || ': '; -- Materiais substitutos
					END IF;
					ds_materiais_w	:= ds_materiais_w || cd_material_opcao_w || ';';
				END;
				END LOOP;
				CLOSE c04;
				END;
			END IF;

			SELECT	coalesce(MAX(nr_sequencia),0) + 1
			INTO STRICT	nr_seq_prescr_material_w
			FROM	prescr_material
			WHERE	nr_prescricao = nr_prescricao_w;

			SELECT	coalesce(MAX(nr_agrupamento),0) + 1
			INTO STRICT	nr_agrupamento_w
			FROM	prescr_material
			WHERE	nr_prescricao = nr_prescricao_w;

			SELECT	TO_CHAR(dt_primeiro_horario,'HH24:MM')
			INTO STRICT	hr_prim_horario_w
			FROM	prescr_medica
			WHERE	nr_prescricao = nr_prescricao_w;

			SELECT	coalesce(MAX('N'),'S')
			INTO STRICT	ie_registra_w
			FROM	prescr_material
			WHERE	cd_material = cd_material_w
			AND	nr_prescricao = nr_prescricao_w
			AND	coalesce(ie_duplica_prescr_w,'S') = 'N';

			IF (ie_registra_w = 'S') THEN
				BEGIN
				ie_gerou_itens_w := 'S';

				UPDATE	prescr_material
				SET	qt_dose		= qt_dose + qt_material_w,
					qt_unitaria	= qt_unitaria + qt_material_w,
					qt_material	= qt_material + qt_material_w,
					qt_total_dispensar = qt_total_dispensar + qt_material_w
				WHERE	nr_prescricao	= nr_prescricao_w
				--and	ie_origem_inf	= ie_origem_inf_p
				AND	cd_material	= cd_material_w
				AND	cd_unidade_medida	= cd_unidade_medida_w
				AND	ie_status_cirurgia	= 'GI'
				AND	ie_acumula_w		= 'S'
				AND	cd_motivo_baixa = 0
				AND	coalesce(dt_baixa::text, '') = ''
				AND	coalesce(nr_seq_lote_fornec, 0) = coalesce(nr_seq_lote_fornec_w, 0);


				IF (NOT FOUND) OR (ie_acumula_w = 'N') THEN
					BEGIN


					INSERT INTO prescr_material(nr_prescricao,
						nr_sequencia,
						ie_origem_inf,
						cd_material,
						cd_unidade_medida,
						qt_dose,
						qt_unitaria,
						qt_material,
						dt_atualizacao,
						nm_usuario,
						cd_intervalo,
						ds_horarios,
						ds_observacao,
						ie_via_aplicacao,
						nr_agrupamento,
						cd_motivo_baixa,
						dt_baixa,
						ie_utiliza_kit,
						cd_unidade_medida_dose,
						qt_conversao_dose,
						ie_urgencia,
						nr_ocorrencia,
						qt_total_dispensar,
						cd_fornec_consignado,
						nr_sequencia_solucao,
						nr_sequencia_proc,
						qt_solucao,
						hr_dose_especial,
						qt_dose_especial,
						ds_dose_diferenciada,
						ie_medicacao_paciente,
						nr_sequencia_diluicao,
						hr_prim_horario,
						nr_dia_util,
						nr_sequencia_dieta,
						ie_agrupador,
						dt_emissao_setor_atend,
						ie_suspenso,
						ds_justificativa,
						qt_dias_solicitado,
						qt_dias_liberado,
						nm_usuario_liberacao,
						dt_liberacao,
						ie_se_necessario,
						qt_min_aplicacao,
						nr_seq_lote_fornec,
						ie_status_cirurgia,
						ie_bomba_infusao,
						ie_aplic_bolus,
						ie_aplic_lenta,
						ie_acm,
						--cd_kit_material,
						ie_recons_diluente_fixo,
						cd_convenio,
						cd_categoria,
						ie_sem_aprazamento,
						nr_doc_interno,
						cd_local_estoque,
						nr_seq_reg_kit,
						nr_doc_interno_aux)
					VALUES (  nr_prescricao_w,
						nr_seq_prescr_material_w,
						ie_origem_inf_w,
						cd_material_w,
						cd_unidade_medida_w,
						qt_material_w,
						qt_material_w,
						qt_material_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_intervalo_w,
						NULL,
						ds_materiais_w,
						ie_via_aplicacao_w,
						nr_agrupamento_w,
						0,
						NULL,
						'N',
						NULL,
						NULL,
						'N',
						1,
						qt_material_w,
						cd_fornecedor_w,
						NULL,
						NULL,
						NULL,
						NULL,
						 NULL,
						NULL,
						'N',
						NULL,
						hr_prim_horario_w,
						NULL,
						NULL,
						CASE WHEN ie_tipo_material_w='1' THEN  2 WHEN ie_tipo_material_w='2' THEN  1 WHEN ie_tipo_material_w='3' THEN  1  ELSE 2 END ,
						NULL,
						'N',
						NULL,
						NULL,
						NULL,
						NULL,
						NULL,
						ie_dispensavel_w,
						NULL,
						nr_seq_lote_fornec_w,
						CASE WHEN ie_gerar_consistido_w='S' THEN  'CB'  ELSE 'GI' END ,
						'N',
						'N',
						'N',
						'N',
						--decode(cd_kit_material_p, 0, decode(nvl(cd_kit_material_w,0),0,null,cd_kit_material_w), cd_kit_material_p),
						'N',
						CASE WHEN cd_convenio_ww=0 THEN NULL  ELSE cd_convenio_ww END ,
						cd_categoria_w,
						'N',
						nr_doc_interno_w,
						NULL,
						CASE WHEN nr_seq_reg_kit_w=0 THEN NULL  ELSE nr_seq_reg_kit_w END ,
						nr_doc_interno_aux_w);--,
					COMMIT;
					END;
				END IF;
				END;
			END IF;


			END;
			END LOOP;
			CLOSE c03;
		END IF;

		IF (ie_controle_w = 'S') THEN
			BEGIN
			select 	campo_numerico(obter_agenda_atendimento(nr_atendimento_p,'C'))
			into STRICT 	cd_agenda_w
			;			
			
			SELECT	coalesce(MAX(nr_controle),0) + 1
			INTO STRICT	nr_controle_w
			FROM	prescr_medica a,
				agenda_paciente b
			WHERE	a.nr_atendimento	= b.nr_atendimento
			AND	b.cd_agenda		= cd_agenda_w;

			UPDATE	prescr_medica
			SET	nr_controle	= nr_controle_w
			WHERE	nr_prescricao	= nr_prescricao_ind_w;
			COMMIT;
			END;
		END IF;

		IF (ie_nr_doc_convenio_w in ('S', 'A')) THEN

			SELECT	MAX(nr_doc_convenio),
					MAX(ds_senha)
			INTO STRICT	nr_doc_convenio_w,
					ds_senha_w
			FROM	agenda_paciente
			WHERE	nr_sequencia	= nr_seq_agenda_p
			AND	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '');
						
			if (nr_doc_convenio_w IS NOT NULL AND nr_doc_convenio_w::text <> '') then
				UPDATE	prescr_medica
				SET	nr_doc_conv = nr_doc_convenio_w
				WHERE 	nr_prescricao	= nr_prescricao_ind_w;
			end if;

			if (ds_senha_w IS NOT NULL AND ds_senha_w::text <> '') then
				UPDATE	prescr_medica
				SET	cd_senha = CASE WHEN ie_nr_doc_convenio_w='A' THEN ds_senha_w END
				WHERE 	nr_prescricao	= nr_prescricao_ind_w;				
			end if;
			COMMIT;

		END IF;

		IF (cd_setor_atendimento_w <> 0) AND (coalesce(nr_seq_agenda_p,0) > 0) AND (nr_prescricao_ind_w > 0) THEN
			BEGIN
			
			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
				SELECT * FROM Obter_Proc_Tab_Interno_Conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_ind_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_ind_w, ie_origem_proced_w;
			end if;

			CALL Gerar_Proc_Agenda_Prescr_Ind(
				nr_seq_agenda_p, nr_prescricao_ind_w, cd_setor_atendimento_w, cd_procedimento_ind_w,
				ie_origem_proced_ind_w, ie_autorizacao_w, cd_medico_agenda_ind_w, ie_lado_w, nr_seq_proc_interno_w,
				hr_inicio_w, nm_usuario_p,
				nr_seq_topografia_w,ie_anestesia_w,vl_coparticipacao_w);

			END;
		END IF;

		IF (ie_liberar_w	= 'S') and (coalesce(nr_seq_agenda_p,0) > 0) THEN
			ds_erro_w := liberar_prescricao(nr_prescricao_ind_w, nr_atendimento_p, ie_medico_w, Obter_Perfil_Ativo, nm_usuario_p, 'N', ds_erro_w);
		END IF;

		END;
	END LOOP;
	CLOSE c02;
	END;
END IF;

IF (cd_setor_atendimento_w <> 0) AND (coalesce(nr_seq_agenda_p,0) > 0) THEN
	BEGIN
	SELECT	COUNT(*)
	INTO STRICT	qt_passagem_setor_w
	FROM	atend_paciente_unidade
	WHERE	nr_atendimento	= nr_atendimento_p;

	IF (qt_passagem_setor_w = 0) THEN
		BEGIN

		SELECT 	obter_tipo_passagem_regra(cd_setor_atendimento_w)
		INTO STRICT	ie_tipo_passagem_regra_w
		;


		IF (ie_tipo_passagem_regra_w = 'T') THEN

			CALL gerar_entrada_setor_prescr(nr_atendimento_p, cd_setor_atendimento_w, dt_prescricao_w,nm_usuario_p);

		ELSE

			CALL gerar_passagem_setor_atend(nr_atendimento_p, cd_setor_atendimento_w, dt_prescricao_w, 'S', nm_usuario_p);

			SELECT	coalesce(MAX(nr_seq_interno),0)
			INTO STRICT	nr_seq_interno_w
			FROM 	atend_paciente_unidade
			WHERE 	nr_atendimento	= nr_atendimento_p;

			/* OS 96169 Fabricio em 16/06/2008 */

			CALL ATEND_PACIENTE_UNID_AFTERPOST(nr_seq_interno_w,'I',nm_usuario_p);

		END IF;

		END;
	END IF;
	END;
END IF;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_atend_exame ( nr_atendimento_p bigint, dt_entrega_p timestamp, nr_seq_agenda_p bigint, nm_usuario_p text, cd_setor_usuario_p bigint, ie_setor_p text) FROM PUBLIC;

