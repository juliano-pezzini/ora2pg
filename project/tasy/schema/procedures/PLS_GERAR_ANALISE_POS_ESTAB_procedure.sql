-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_analise_pos_estab ( nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_p text, nr_seq_conta_rec_p text default null, ie_tipo_analise_p text default 'C') AS $body$
DECLARE



/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:

--ie_origem_p

--'F' - fechamento

-- C - Consistencia

-- R - Refaturamento


-- ie_tipo_analise_p

-- 'C' - Conta medica

-- 'RG' - Recurso de glosa

-- 'D' - Discussao


Alteracoes:
Adicionado o parametro ie_gerar_nova_pos_p, que vai gerar uma nova analise sempre. O padrao dela e N
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nm_prestador_w			varchar(255);
nm_cooperativa_w		varchar(255);
nm_segurado_w			varchar(255);
cd_guia_w			varchar(25);
cd_cooperativa_w		varchar(10);
ie_origem_conta_w		varchar(2);
ie_preco_w			varchar(2);
ie_tipo_guia_w			varchar(2);
ie_gerar_analise_audit_w	varchar(1);
nr_seq_prestador_w		bigint;
nr_seq_segurado_w		bigint;
nr_lote_w			bigint;
nr_seq_congenere_w		bigint;
nr_seq_protocolo_w		bigint;
ie_existe_analise_w		bigint;
nr_seq_analise_w		bigint;
nr_seq_plano_w			bigint;
nr_seq_analise_ref_w		bigint;
nr_seq_prestador_ww		bigint;
nr_seq_discussao_w		bigint;
cd_guia_pos_estab_w		pls_conta.cd_guia_pos_estab%type;
nr_seq_conta_rec_w		pls_rec_glosa_conta.nr_sequencia%type;
nr_seq_conta_princ_w		pls_conta.nr_seq_conta_princ%type;
nr_seq_analise_recurso_w	pls_analise_conta.nr_sequencia%type;
ie_gera_analise_w		varchar(1) := 'S';
qt_pos_rec_w			integer;
qt_glosa_ativa_w		integer;
qt_pos_rec_ww			integer;
nr_seq_conta_referencia_w	pls_conta.nr_seq_conta_referencia%type;
ie_novo_pos_w			pls_visible_false.ie_novo_pos_estab%type;
ie_existe_analise_ref_w	varchar(1);

c01 CURSOR(	cd_guia_pc	text,
		nr_lote_pc	bigint) FOR
	SELECT	a.nr_sequencia,
		(	SELECT	count(1)
			from	pls_conta_pos_estabelecido	x
			where	x.nr_seq_analise		= a.nr_sequencia) qt_pos
	from	pls_analise_conta	a
	where	a.cd_guia		= cd_guia_pc
	and	coalesce(a.nr_seq_lote_protocolo,0)	= coalesce(nr_lote_pc,0)
	and	a.ie_pre_analise		= 'N'
	and	a.ie_origem_analise		= '7';


BEGIN

select	coalesce(max(ie_novo_pos_estab),'N')
into STRICT	ie_novo_pos_w
from	pls_visible_false;

select	a.cd_guia_ok,
	a.cd_guia_pos_estab,
	coalesce(b.nr_seq_prestador, a.nr_seq_prestador_exec),
	a.nr_seq_segurado,
	nr_seq_lote_conta,
	b.nr_seq_congenere,
	b.nr_sequencia,
	a.ie_origem_conta,
	a.nr_seq_analise,
	(select	substr(max(y.nm_pessoa_fisica),1,255)
	from	pls_segurado	x,	
		pessoa_fisica	y
	where	x.cd_pessoa_fisica	= y.cd_pessoa_fisica
	and	x.nr_sequencia		= a.nr_seq_segurado),
	b.nr_seq_prestador,
	a.nr_seq_conta_princ,
	a.nr_seq_conta_referencia
into STRICT	cd_guia_w,
	cd_guia_pos_estab_w,
	nr_seq_prestador_w,
	nr_seq_segurado_w,
	nr_lote_w,
	nr_seq_congenere_w,
	nr_seq_protocolo_w,	
	ie_origem_conta_w,
	nr_seq_analise_ref_w,
	nm_segurado_w,
	nr_seq_prestador_ww,
	nr_seq_conta_princ_w,
	nr_seq_conta_referencia_w
from	pls_conta 		a,
	pls_protocolo_conta	b
where	a.nr_seq_protocolo	= b.nr_sequencia
and	a.nr_sequencia		= nr_seq_conta_p;

ie_gerar_analise_audit_w	:= pls_obter_conta_pos_auditoria(nr_seq_conta_p);

select	max(a.nr_seq_plano)
into STRICT	nr_seq_plano_w
from	pls_segurado a
where	a.nr_sequencia	= nr_seq_segurado_w;

select	max(ie_preco)
into STRICT	ie_preco_w
from	pls_plano
where	nr_sequencia	= nr_seq_plano_w;

select	max(b.nr_sequencia)
into STRICT	nr_seq_discussao_w
from	pls_contestacao		a,
	pls_contestacao_discussao b
where	b.nr_seq_contestacao	= a.nr_sequencia
and	a.nr_seq_conta		= nr_seq_conta_p;

-- Agora busca os dados da analise de referencia, utilizando a analise da conta principal
if (coalesce(nr_seq_analise_ref_w::text, '') = '') then
	begin
		select	a.nr_seq_analise
		into STRICT	nr_seq_analise_ref_w
		from	pls_conta	a,
			pls_conta	b
		where	a.nr_sequencia	= b.nr_seq_conta_princ
		and	b.nr_sequencia	= nr_seq_conta_p  LIMIT 1;
	exception
		when no_data_found then nr_seq_analise_ref_w := null;
	end;
end if;

if (ie_tipo_analise_p = 'D') then
	--busca os dados da analise de contestacao
	select	max(nr_sequencia),
		max(nr_seq_lote_protocolo)
	into STRICT	nr_seq_analise_ref_w,
		nr_lote_w
	from	pls_analise_conta
	where	ie_origem_analise 	= '5'
	and	nr_seq_segurado		= nr_seq_segurado_w
	and	cd_guia			= cd_guia_w;
	/*Verifica se existe analise para a guia obtida*/
		
	select	max(nr_sequencia)
	into STRICT	nr_seq_analise_w
	from	pls_analise_conta
	where	cd_guia	= cd_guia_w
	and	coalesce(nr_seq_lote_protocolo,0)  = coalesce(nr_lote_w,0)
	and	(((coalesce(ie_auditoria,'N') = 'S') and (ie_status = 'G'))	--Gerada na mesma analise se a analise estiver em aguardando auditoria ou seja sem o processo ter sido iniciado
	or (coalesce(ie_auditoria,'N') = 'N'))				--Ou se a conta nao for de auditoria, dai pode-se iniciar em todas as etapas
	and	ie_origem_analise = '7';
elsif (ie_tipo_analise_p = 'RG') then

	nr_seq_conta_rec_w := nr_seq_conta_rec_p;
	
	select	count(1)
	into STRICT	qt_pos_rec_w
	from	pls_conta_pos_estabelecido
	where	nr_seq_conta_rec = nr_seq_conta_rec_w;
	
	if (qt_pos_rec_w > 0) then
		ie_gera_analise_w := 'S';
	end if;
	
	select	b.nr_seq_prestador,
		a.nr_seq_analise
	into STRICT	nr_seq_prestador_w,
		nr_seq_analise_ref_w
	from	pls_rec_glosa_conta a,
		pls_rec_glosa_protocolo b
	where	b.nr_sequencia = a.nr_seq_protocolo
	and	a.nr_sequencia = nr_seq_conta_rec_w;
	
	if (nr_seq_analise_ref_w IS NOT NULL AND nr_seq_analise_ref_w::text <> '') then
		select	nr_seq_lote_protocolo
		into STRICT	nr_lote_w
		from	pls_analise_conta
		where	nr_sequencia = nr_seq_analise_ref_w;
	end if;
	
	select	max(a.nr_seq_analise)
	into STRICT	nr_seq_analise_w
	from	pls_conta_pos_estabelecido a,
		pls_analise_conta b
	where	b.nr_sequencia = a.nr_seq_analise
	and	a.nr_seq_conta_rec = nr_seq_conta_rec_w
	and	((coalesce(b.ie_auditoria,'N') = 'S' and b.ie_status = 'G')
	or (coalesce(ie_auditoria,'N') = 'N'))
	and	ie_origem_analise = '8';
	
	-- Se for refaturamento, vai sempre gerar uma nova analise
elsif (ie_origem_p = 'R') then
	nr_seq_analise_w	:= null;
	ie_gera_analise_w	:= 'S';
	
	if (coalesce(nr_lote_w::text, '') = '') and (nr_seq_conta_referencia_w IS NOT NULL AND nr_seq_conta_referencia_w::text <> '') then
		select	max(nr_seq_lote_protocolo)
		into STRICT	nr_lote_w
		from	pls_analise_conta	a,
			pls_conta		b
		where	a.nr_sequencia	= b.nr_seq_analise
		and	b.nr_sequencia	= nr_seq_conta_referencia_w;
	end if;
else
	--cd_guia_pos_estab
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_analise_w
	from	pls_analise_conta	a
	where	a.cd_guia		= cd_guia_pos_estab_w
	and	a.nr_seq_segurado 	= nr_seq_segurado_w
	and	a.ie_origem_analise 	= '2'
	and	not exists (SELECT	1
				from	pls_analise_conta b
				where 	b.nr_sequencia 	= a.nr_seq_analise_ref
				and	b.ie_status	= 'C'); --origem 2 = custo pos-estabelecido
	
	if (coalesce(nr_seq_analise_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_analise_w
		from	pls_analise_conta	a
		where	cd_guia	= cd_guia_w
		and	coalesce(nr_seq_lote_protocolo,0)  = coalesce(nr_lote_w,0)		--Ou se a conta nao for de auditoria, dai pode-se iniciar em todas as etapas
		and	a.nr_seq_segurado 	= nr_seq_segurado_w
		and	a.ie_origem_analise 	= '2'
		and	not exists (SELECT	1
					from	pls_analise_conta b
					where 	b.nr_sequencia 	= a.nr_seq_analise_ref
					and	b.ie_status	= 'C'); --origem 2 = custo pos-estabelecido
	end if;
	--Se ainda nao encontrou, ainda verifica se na guia principal os itens de pos estao vinculados a uma analise de pos, entao retorna a mesma para que ocorra vinculo.
	if (coalesce(nr_seq_analise_w::text, '') = '') then
		
		if (ie_novo_pos_w = 'N') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_analise_w
			from	pls_analise_conta a
			where	coalesce(nr_seq_lote_protocolo,0)  = coalesce(nr_lote_w,0)		--Ou se a conta nao for de auditoria, dai pode-se iniciar em todas as etapas
			and	a.nr_seq_segurado 	= nr_seq_segurado_w
			and	a.ie_origem_analise 	= '2'
			and exists (	SELECT 	1
					from 	pls_conta b,
						pls_conta_pos_estabelecido c
					where 	b.nr_sequencia = c.nr_seq_conta
					and	c.nr_seq_analise = a.nr_sequencia and b.cd_guia = cd_guia_w)
			and	not exists (Select	1
						from	pls_analise_conta b
						where 	b.nr_sequencia 	= a.nr_seq_analise_ref
						and	b.ie_status	= 'C');
		else
			select	max(nr_sequencia)
			into STRICT	nr_seq_analise_w
			from	pls_analise_conta a
			where	coalesce(nr_seq_lote_protocolo,0)  = coalesce(nr_lote_w,0)		--Ou se a conta nao for de auditoria, dai pode-se iniciar em todas as etapas
			and	ie_origem_analise = '2'
			and exists (	SELECT 	1 
					from 	pls_conta b,
						pls_conta_pos_proc c
					where 	b.nr_sequencia = c.nr_seq_conta
					and	c.nr_seq_analise = a.nr_sequencia 
					and b.cd_guia = cd_guia_w
					
union all

					SELECT 	1 
					from 	pls_conta b,
						pls_conta_pos_mat c
					where 	b.nr_sequencia = c.nr_seq_conta
					and	c.nr_seq_analise = a.nr_sequencia 
					and b.cd_guia = cd_guia_w
					)
			and	not exists (Select	1
						from	pls_analise_conta b
						where 	b.nr_sequencia 	= a.nr_seq_analise_ref
						and	b.ie_status	= 'C');
		end if;
	end if;
		
end if;	
	
if (nr_seq_analise_w IS NOT NULL AND nr_seq_analise_w::text <> '') then

	select CASE WHEN count(1)=0 THEN  'N'  ELSE 'S' END
	into STRICT	ie_existe_analise_ref_w
	from	pls_analise_conta a
	where	a.nr_sequencia = nr_seq_analise_w
	and exists (SELECT 1 from pls_analise_conta where nr_sequencia = a.nr_seq_analise_ref);

	update	pls_analise_conta
	set	ie_status	= 'S',
		nr_seq_analise_ref = CASE WHEN ie_existe_analise_ref_w='S' THEN  nr_seq_analise_ref  ELSE nr_seq_analise_ref_w END
	where	nr_sequencia	= nr_seq_analise_w;
else
	--Nos casos de recurso de glosa, caso nao tenha sido gerada conta de pos, entao nao gera a analise tambem. Nos demais casos nao muda nada.
	if (ie_gera_analise_w = 'S') then
		/*	Pode existir referencia(pos estab) a outra guia e a analise de pos ainda  nao estar gerada, nesse caso, a analise sera gerada nessa rotina, utilizando como base
		a guia principal(cd_guia_pos_estab) e tambem precisa estar no lote da guia principal */
		if (cd_guia_pos_estab_w IS NOT NULL AND cd_guia_pos_estab_w::text <> '') and (coalesce(nr_seq_conta_rec_p::text, '') = '') then
			
			select	max(nr_seq_lote_protocolo)
			into STRICT	nr_lote_w
			from	pls_analise_conta
			where	cd_guia = cd_guia_pos_estab_w
			and	nr_seq_segurado = nr_seq_segurado_w;
		end if;
		
		if	((nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') or (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '')) then
			select	max(a.ie_tipo_guia)
			into STRICT	ie_tipo_guia_w
			from	pls_analise_conta	a
			where	a.nr_sequencia	= nr_seq_analise_ref_w;
			
			nm_prestador_w		:= substr(pls_obter_dados_prestador(nr_seq_prestador_ww, 'N'), 1, 255);
			nm_cooperativa_w	:= substr(pls_obter_nome_congenere(nr_seq_congenere_w), 1, 255);
			cd_cooperativa_w	:= substr(pls_obter_seq_codigo_coop(nr_seq_congenere_w, ''), 1, 10);
			
			/*Se nao existe cria-se um novo registro de analise*/

			insert into pls_analise_conta(nr_sequencia,
				nr_seq_lote_protocolo,
				nr_seq_prestador,
				nr_seq_segurado,
				nm_usuario,
				nm_usuario_nrec,
				dt_atualizacao,
				dt_atualizacao_nrec,
				cd_guia,
				ie_status,
				dt_analise,
				dt_inicio_analise,
				ie_auditoria,
				nr_seq_congenere,
				ie_pre_analise,
				ie_origem_analise,
				ie_origem_conta,
				ie_preco,
				cd_estabelecimento,
				nr_seq_analise_ref, 
				nm_segurado,
				nm_prestador,
				nm_cooperativa,
				cd_cooperativa,
				ie_tipo_guia) 
			values (nextval('pls_analise_conta_seq'),
				nr_lote_w,
				nr_seq_prestador_w,
				nr_seq_segurado_w,
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				coalesce(cd_guia_pos_estab_w, cd_guia_w),
				'S',
				clock_timestamp(), 
				clock_timestamp(),
				ie_gerar_analise_audit_w,
				nr_seq_congenere_w,
				'N',
				CASE WHEN ie_tipo_analise_p='D' THEN  7 WHEN ie_tipo_analise_p='RG' THEN  8  ELSE 2 END ,
				ie_origem_conta_w,
				ie_preco_w,
				cd_estabelecimento_p,
				nr_seq_analise_ref_w,
				nm_segurado_w,
				nm_prestador_w,
				nm_cooperativa_w,
				cd_cooperativa_w,
				ie_tipo_guia_w) returning nr_sequencia into nr_seq_analise_w;
		end if;
	end if;
end if;	

/*Atualizar o status da conta de pos estabelecido, levando em consideracao os dados da analisede pos e analise da conta medica*/

CALL pls_atualizar_status_fat_pos(nr_seq_conta_p, null, null, nr_seq_analise_w, cd_estabelecimento_p, nm_usuario_p);

/*Define o codigo da guia de faturamento, nao e usado no envio A500 essa informacao*/

CALL pls_define_cd_guia_fat_conta(nr_seq_conta_p,nr_seq_analise_w,nm_usuario_p);

if (ie_tipo_analise_p = 'C') then
	
	if (ie_novo_pos_w = 'N') then
	
		update	pls_conta_pos_estabelecido
		set	nr_seq_analise	= nr_seq_analise_w,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_seq_conta	= nr_seq_conta_p
		and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));
	else
		update	pls_conta_pos_proc
		set	nr_seq_analise	= nr_seq_analise_w,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_seq_conta	= nr_seq_conta_p;
	
		update	pls_conta_pos_mat
		set	nr_seq_analise	= nr_seq_analise_w,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_seq_conta	= nr_seq_conta_p;
	
	end if;
	
elsif (ie_tipo_analise_p = 'RG') then

	update	pls_conta_pos_estabelecido
	set	nr_seq_analise		= nr_seq_analise_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_conta		= nr_seq_conta_p
	and	(nr_seq_cabecalho IS NOT NULL AND nr_seq_cabecalho::text <> '')
	and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''))
	and	nr_seq_conta_rec = nr_seq_conta_rec_w;
	
elsif (ie_tipo_analise_p = 'D') then
	update	pls_conta_pos_estabelecido
	set	nr_seq_analise		= nr_seq_analise_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_seq_conta		= nr_seq_conta_p
	and	(nr_seq_cabecalho IS NOT NULL AND nr_seq_cabecalho::text <> '')
	and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));

	-- verifica se para essa conta, existe algum registro de analise de pos de contestacao vazio

	-- se a analise esiver vazia neste caso especifico marca como S a pre analise, para que nao apareca na busca

	-- da funcao gestao de analise. Neste caso a analise ja estara sem itens, mas sera mantida como historico
	for	r_c01_w in C01(cd_guia_w, nr_lote_w ) loop

		if (r_c01_w.qt_pos = 0) then

			update	pls_analise_conta
			set	ie_pre_analise	='S',
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= r_c01_w.nr_sequencia;

		end if;
	end loop;
	



end if;
	
if (ie_origem_p = 'C') then
	
	if (ie_novo_pos_w = 'N') then
		CALL pls_consistir_analise_pos(nr_seq_analise_w, null, cd_estabelecimento_p, nm_usuario_p, 'N', 'N', 'N');
	else
		CALL pls_consistir_an_pos_estab(nr_seq_analise_w, null, cd_estabelecimento_p, nm_usuario_p, 'N', 'N', 'N');
	end if;
end if;

if (ie_origem_p = 'F') and (nr_seq_conta_rec_p IS NOT NULL AND nr_seq_conta_rec_p::text <> '') then
	select	count(1)
	into STRICT	qt_glosa_ativa_w
	from	pls_conta_pos_estabelecido a,
		pls_ocorrencia_benef b
	where	a.nr_sequencia = b.nr_seq_conta_pos_estab
	and	a.nr_seq_analise = nr_seq_analise_w
	and	b.ie_situacao = 'A';
	
	if (qt_glosa_ativa_w = 0) then
		CALL pls_alterar_status_analise_cta(	nr_seq_analise_w, 'T', 'PLS_GERAR_ANALISE_POS_ESTAB',
			nm_usuario_p, cd_estabelecimento_p);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_analise_pos_estab ( nr_seq_conta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_origem_p text, nr_seq_conta_rec_p text default null, ie_tipo_analise_p text default 'C') FROM PUBLIC;

