-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_canal_vendas ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
qt_estabelecimento_w		bigint;				
nr_seq_canal_venda_w		bigint;
nr_seq_canal_venda_novo_w	bigint;				
nr_seq_vendedor_regra_w		bigint;
nr_seq_vendedor_regra_novo_w	bigint;
nr_seq_vend_regra_adic_benef_w	bigint;
nr_seq_vendedor_meta_w		bigint;
nr_seq_regra_adic_mensal_w	bigint;
nr_seq_vendedor_vinculado_w	bigint;
nr_seq_vend_repasse_w		bigint;
nr_seq_vend_repasse_novo_w	bigint;
nr_seq_vend_repasse_venc_w	bigint;
nr_seq_vend_rep_venc_novo_w	bigint;
nr_seq_vend_repasse_trib_w	bigint;
nr_seq_repasse_itens_mens_w	bigint;
nr_seq_vend_pendentes_mens_w	bigint;
		
/* Canal de Vendas*/
		
C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_vendedor
	where	cd_estabelecimento	= cd_estab_origem_p;	

/*Cadastros - Regras - Comissoes de vendas*/
	
C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_vendedor_regra
	where	nr_seq_vendedor	= nr_seq_canal_venda_w;

/*Cadastros - Regras - Incrementos adicionais*/
	
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_adic_benef
	where	nr_seq_regra_ven	= nr_seq_vendedor_regra_w;

/*Cadastros - Regras - Regras Mensais*/
	
C04 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_vendedor_meta
	where	nr_seq_vendedor	= nr_seq_canal_venda_w;

/*Cadastros - Regras - Metas*/
	
C05 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_adic_mensal
	where	nr_seq_vendedor	= nr_seq_canal_venda_w;	

/*Repasse - Vinculado*/
	
C06 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_vendedor_vinculado
	where	nr_seq_vendedor	= nr_seq_canal_venda_w;

/* Repasse - Repasse*/
	
C07 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_repasse_vend
	where	nr_seq_vendedor	= nr_seq_canal_venda_w;

/*Repasse - Vencimentos repasse vendedor*/
	
C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_repasse_vend_venc
	where	nr_seq_repasse	= nr_seq_vend_repasse_w;

/*Repasse - Tributos vencimento*/
	
C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_repasse_vend_trib
	where	nr_seq_vencimento	= nr_seq_vend_repasse_venc_w;
	
/*Repasse - Itens de repasse*/
	
C10 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_repasse_mens
	where	nr_seq_repasse	= nr_seq_vend_repasse_w;

/*Repasse - Itens pendentes*/
	
C11 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_repasse_mens
	where	nr_seq_vendedor	= nr_seq_canal_venda_w;
	

BEGIN

select	count(*)
into STRICT	qt_estabelecimento_w
from	pls_vendedor
where	cd_estabelecimento	= cd_estab_destino_p;

if (qt_estabelecimento_w = 0) then
	open C01;
	loop
	fetch C01 into	
		nr_seq_canal_venda_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		select	nextval('pls_vendedor_seq')
		into STRICT	nr_seq_canal_venda_novo_w
		;
		
		insert into pls_vendedor(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
							cd_condicao_pagamento,cd_pessoa_fisica,cd_cgc,ie_situacao,ie_tipo_vendedor,nr_seq_vendedor_ant)
						(SELECT	nr_seq_canal_venda_novo_w,dt_atualizacao,nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
							cd_condicao_pagamento,cd_pessoa_fisica,cd_cgc,ie_situacao,ie_tipo_vendedor,nr_seq_canal_venda_w
						from	pls_vendedor
						where	nr_sequencia	= nr_seq_canal_venda_w);
						
		open C02;
		loop
		fetch C02 into	
			nr_seq_vendedor_regra_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			select	nextval('pls_vendedor_regra_seq')
			into STRICT	nr_seq_vendedor_regra_novo_w
			;
			
			insert into pls_vendedor_regra(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_vendedor,
								ie_comissao,nr_parcela_inicial,nr_parcela_final,ie_recebe_valores,ie_recebe_sem_pagto,vl_premio,
								tx_premio,tx_juros,tx_multa,dt_inicio_vigencia,dt_fim_vigencia,ie_acao_contrato,
								ie_tipo_item_mensalidade,ie_tipo_pessoa,ie_aprovacao_benef_ativo,nr_seq_motivo_inclusao,ie_bonificacao,
								qt_idade_inicial,qt_idade_final, ie_diferenca_migracao, ie_situacao, ie_considerar_carencias,
								ie_parcela_retroativa, ie_migracao_valor_superior, qt_dias_tolerancia_volta, nr_parcela_fin_adapt,
								nr_parcela_ini_adapt, ie_dif_alteracao_prod, ie_vl_integral_primeira_mens, ds_regra, nr_seq_grupo_contrato,
								ie_valor_embutido_sca, nr_contrato, nr_seq_contrato, qt_meses_meta, nr_seq_grupo_relac)
							(SELECT	nr_seq_vendedor_regra_novo_w,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_canal_venda_novo_w,
								ie_comissao,nr_parcela_inicial,nr_parcela_final,ie_recebe_valores,ie_recebe_sem_pagto,vl_premio,
								tx_premio,tx_juros,tx_multa,dt_inicio_vigencia,dt_fim_vigencia,ie_acao_contrato,
								ie_tipo_item_mensalidade,ie_tipo_pessoa,ie_aprovacao_benef_ativo,nr_seq_motivo_inclusao,ie_bonificacao,
								qt_idade_inicial,qt_idade_final, ie_diferenca_migracao, 'A', ie_considerar_carencias,
								ie_parcela_retroativa, ie_migracao_valor_superior, qt_dias_tolerancia_volta, nr_parcela_fin_adapt,
								nr_parcela_ini_adapt, ie_dif_alteracao_prod, ie_vl_integral_primeira_mens, ds_regra, nr_seq_grupo_contrato,
								ie_valor_embutido_sca, nr_contrato, nr_seq_contrato, qt_meses_meta,nr_seq_grupo_relac
							from	pls_vendedor_regra
							where	nr_sequencia	= nr_seq_vendedor_regra_w);
							
			open C03;
			loop
			fetch C03 into	
				nr_seq_vend_regra_adic_benef_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				insert into pls_regra_adic_benef(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
										nr_seq_regra_ven,ie_situacao,ie_tipo_impacto_cpt,pr_incremento,qt_idade_min,qt_idade_max,
										qt_vidas_min,qt_vidas_max,ie_tipo_pessoa,ie_acao_contrato, ie_referencia_vidas, ie_considerar_ativos)
									(SELECT	nextval('pls_regra_adic_benef_seq'),dt_atualizacao,nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
										nr_seq_vendedor_regra_novo_w,ie_situacao,ie_tipo_impacto_cpt,pr_incremento,qt_idade_min,qt_idade_max,
										qt_vidas_min,qt_vidas_max,ie_tipo_pessoa,ie_acao_contrato, ie_referencia_vidas, ie_considerar_ativos
									from	pls_regra_adic_benef
									where	nr_sequencia	= nr_seq_vend_regra_adic_benef_w);
				end;
			end loop;
			close C03;				
			end;
		end loop;
		close C02;					
			
		open C04;
		loop
		fetch C04 into	
			nr_seq_vendedor_meta_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			
			insert into pls_vendedor_meta(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_vendedor,
								dt_mesano_referencia, qt_meta, dt_limite_movimentacao, ie_meta_composta, vl_meta_faturamento)
							(SELECT	nextval('pls_vendedor_meta_seq'), dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_canal_venda_novo_w,	
								dt_mesano_referencia, qt_meta, dt_limite_movimentacao, ie_meta_composta, vl_meta_faturamento
							from	pls_vendedor_meta
							where	nr_sequencia	= nr_seq_vendedor_meta_w);
			end;
		end loop;
		close C04;
		
		open C05;
		loop
		fetch C05 into	
			nr_seq_regra_adic_mensal_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
			insert into pls_regra_adic_mensal(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
									nr_seq_vendedor,ie_situacao,pr_incremento,qt_vidas_min,qt_vidas_max,ie_tipo_pessoa,
									ie_acao_contrato,dt_inicio_vigencia,dt_fim_vigencia,vl_incremento,nr_parcela_inicial,nr_parcela_final,
									qt_limite_max_vidas,ie_tipo_item_mensalidade,pr_meta_minimo,pr_meta_maximo,ie_preco, nr_seq_proposta,
									nr_seq_plano, nr_seq_grupo_produto, nr_seq_contrato, nr_seq_motivo_inclusao)
								(SELECT	nextval('pls_regra_adic_mensal_seq'),dt_atualizacao,nm_usuario_p,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
									nr_seq_canal_venda_novo_w,ie_situacao,pr_incremento,qt_vidas_min,qt_vidas_max,ie_tipo_pessoa,
									ie_acao_contrato,dt_inicio_vigencia,dt_fim_vigencia,vl_incremento,nr_parcela_inicial,nr_parcela_final,
									qt_limite_max_vidas,ie_tipo_item_mensalidade,pr_meta_minimo,pr_meta_maximo,ie_preco, nr_seq_proposta,
									nr_seq_plano, nr_seq_grupo_produto, nr_seq_contrato, nr_seq_motivo_inclusao
								from	pls_regra_adic_mensal
								where	nr_sequencia	= nr_seq_regra_adic_mensal_w);
			end;
		end loop;
		close C05;
			
		open C06;
		loop
		fetch C06 into	
			nr_seq_vendedor_vinculado_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			
			insert into pls_vendedor_vinculado(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_vendedor,
									cd_pessoa_fisica,ie_situacao,ie_vendedor_padrao,nr_seq_vinculo_ant)
								(SELECT	nextval('pls_vendedor_vinculado_seq'),dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_canal_venda_novo_w,
									cd_pessoa_fisica,ie_situacao,ie_vendedor_padrao,nr_seq_vendedor_vinculado_w
								from	pls_vendedor_vinculado
								where	nr_sequencia	= nr_seq_vendedor_vinculado_w);		
			end;
		end loop;
		close C06;
		
		open C07;
		loop
		fetch C07 into	
			nr_seq_vend_repasse_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin
			
			select	nextval('pls_repasse_vend_seq')
			into STRICT	nr_seq_vend_repasse_novo_w
			;
			
			insert into pls_repasse_vend(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estabelecimento,
								nr_seq_vendedor,cd_condicao_pagamento,dt_referencia,dt_aprovacao,nm_usuario_aprov,ie_status,
								vl_adic_mensal,ie_tipo_repasse,ds_observacao,nr_lote_contabil,dt_movimento,ds_inf_geracao)
							(SELECT	nr_seq_vend_repasse_novo_w,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,cd_estab_destino_p,
								nr_seq_canal_venda_novo_w,cd_condicao_pagamento,dt_referencia,dt_aprovacao,nm_usuario_aprov,ie_status,
								vl_adic_mensal,ie_tipo_repasse,ds_observacao,nr_lote_contabil,dt_movimento,ds_inf_geracao
							from	pls_repasse_vend
							where	nr_sequencia	= nr_seq_vend_repasse_w);
							
			open C08;
			loop
			fetch C08 into	
				nr_seq_vend_repasse_venc_w;
			EXIT WHEN NOT FOUND; /* apply on C08 */
				begin
				
				select	nextval('pls_repasse_vend_venc_seq')
				into STRICT	nr_seq_vend_rep_venc_novo_w
				;
				
				insert into pls_repasse_vend_venc(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_repasse,
										dt_vencimento,vl_vencimento,nr_titulo)
									(SELECT	nr_seq_vend_rep_venc_novo_w,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_vend_repasse_novo_w,
										dt_vencimento,vl_vencimento,nr_titulo
									from	pls_repasse_vend_venc
									where	nr_sequencia = nr_seq_vend_repasse_venc_w);
									
				open C09;
				loop
				fetch C09 into	
					nr_seq_vend_repasse_trib_w;
				EXIT WHEN NOT FOUND; /* apply on C09 */
					begin
					
					insert into pls_repasse_vend_trib(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_vencimento,
											cd_tributo,dt_tributo,vl_base_calculo,vl_tributo,pr_tributo,vl_reducao,
											vl_desc_base,cd_cgc_beneficiario,vl_base_nao_retido,vl_trib_adic,vl_base_adic,vl_nao_retido,
											ie_pago_prev,cd_darf,cd_variacao,ie_periodicidade,ds_observacao)
										(SELECT	nextval('pls_repasse_vend_trib_seq'),dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_vend_rep_venc_novo_w,
											cd_tributo,dt_tributo,vl_base_calculo,vl_tributo,pr_tributo,vl_reducao,
											vl_desc_base,cd_cgc_beneficiario,vl_base_nao_retido,vl_trib_adic,vl_base_adic,vl_nao_retido,
											ie_pago_prev,cd_darf,cd_variacao,ie_periodicidade,ds_observacao
										from	pls_repasse_vend_trib
										where	nr_sequencia	= nr_seq_vend_repasse_trib_w);
					end;
				end loop;
				close C09;					
				end;
			end loop;
			close C08;				
			end;
			
			open C10;
			loop
			fetch C10 into	
				nr_seq_repasse_itens_mens_w;
			EXIT WHEN NOT FOUND; /* apply on C10 */
				begin
				
				insert into pls_repasse_mens(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_repasse,
									vl_repasse,vl_origem,ie_status,nr_seq_mens_seg,dt_liberacao,nm_usuario_lib,pr_comissao,
									ie_acao_contrato,cd_conta_cred,cd_conta_deb,cd_historico,nr_seq_regra_ctb_deb,
									nr_seq_regra_ctb_cred,ds_observacao,nr_seq_segurado,nr_seq_vendedor)
								(SELECT	nextval('pls_repasse_mens_seq'),dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_vend_repasse_novo_w,
									vl_repasse,vl_origem,ie_status,nr_seq_mens_seg,dt_liberacao,nm_usuario_lib,pr_comissao,
									ie_acao_contrato,cd_conta_cred,cd_conta_deb,cd_historico,nr_seq_regra_ctb_deb,
									nr_seq_regra_ctb_cred,ds_observacao,nr_seq_segurado,nr_seq_vendedor
								from	pls_repasse_mens
								where	nr_sequencia	= nr_seq_repasse_itens_mens_w);
				end;
			end loop;
			close C10;
		end loop;
		close C07;
		
		open C11;
		loop
		fetch C11 into	
			nr_seq_vend_pendentes_mens_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			begin
			
			insert into pls_repasse_mens(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_vendedor,
								vl_repasse,vl_origem,ie_status,nr_seq_mens_seg,dt_liberacao,nm_usuario_lib,pr_comissao,
								ie_acao_contrato,cd_conta_cred,cd_conta_deb,cd_historico,nr_seq_regra_ctb_deb,
								nr_seq_regra_ctb_cred,ds_observacao,nr_seq_segurado)
							(SELECT	nextval('pls_repasse_mens_seq'),dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,nr_seq_canal_venda_novo_w,
								vl_repasse,vl_origem,ie_status,nr_seq_mens_seg,dt_liberacao,nm_usuario_lib,pr_comissao,
								ie_acao_contrato,cd_conta_cred,cd_conta_deb,cd_historico,nr_seq_regra_ctb_deb,
								nr_seq_regra_ctb_cred,ds_observacao,nr_seq_segurado
							from	pls_repasse_mens
							where	nr_sequencia	= nr_seq_vend_pendentes_mens_w);
			end;
		end loop;
		close C11;
		
		end;
	end loop;
	close C01;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_canal_vendas ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

