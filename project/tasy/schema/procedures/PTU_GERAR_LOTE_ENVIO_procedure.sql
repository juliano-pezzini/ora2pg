-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_lote_envio ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_estabelecimento_w		bigint;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_inicial_intercambio_w	timestamp;
dt_final_intercambio_w		timestamp;
cd_cgc_operadora_w		varchar(14);
cd_unimed_origem_w		varchar(10);
nr_seq_congenere_w		bigint;
cd_unimed_destino_w		varchar(10);
ie_tipo_movimentacao_w		varchar(1);
nr_seq_intercambio_w		bigint;
cd_unimed_dest_padrao_w		varchar(10);
qt_registros_empresa_w		bigint;
qt_registros_intercambio_w	bigint;
nr_versao_transacao_w		smallint;
cd_interface_a100_e_w		varchar(5);
--------------------------------------------------------------------------------------------------------------
ptu_intercambio_w		ptu_intercambio%rowtype;
ptu_intercambio_empresa_w	ptu_intercambio_empresa%rowtype;
nr_seq_intercambio_novo_w	bigint;
nr_seq_inter_empresa_nova_w	bigint;
nr_seq_inter_empresa_w		bigint;
qt_registros_custo_w		bigint;
ie_gerar_liberacao_a100_w	pls_parametros.ie_gerar_liberacao_a100%type;
ie_tipo_compartilhamento_w	ptu_intercambio_lote_envio.ie_tipo_compartilhamento%type;
cd_versao_ptu_w			ptu_regra_interface.cd_versao_ptu%type;

C01 CURSOR FOR
	SELECT	nr_seq_congenere
	from	pls_segurado_repasse
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	((trunc(dt_repasse,'dd')	between dt_inicial_w  and dt_final_w) or (trunc(dt_fim_repasse,'dd') between dt_inicial_w  and dt_final_w))
	and	ie_tipo_movimentacao_w	= 'P'
	and 	ie_gerar_liberacao_a100_w = 'N'
	and	((ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(ie_tipo_compartilhamento_w::text, '') = ''))
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	
union

	SELECT	nr_seq_congenere
	from	pls_segurado_repasse
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	((trunc(dt_liberacao,'dd')	between dt_inicial_w  and dt_final_w) or (trunc(dt_fim_repasse,'dd') between dt_inicial_w  and dt_final_w))
	and	ie_tipo_movimentacao_w	= 'P'
	and 	ie_gerar_liberacao_a100_w = 'S'
	and	((ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(ie_tipo_compartilhamento_w::text, '') = ''))
	and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
	
union

	select	b.nr_seq_congenere
	from	pls_segurado_repasse	b,
		pls_segurado_alteracao	a
	where	a.nr_seq_segurado	= b.nr_seq_segurado
	and	b.cd_estabelecimento	= cd_estabelecimento_w
	and	ie_tipo_movimentacao_w	= 'P'
	and	((ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(ie_tipo_compartilhamento_w::text, '') = ''))
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and (trunc(b.dt_fim_repasse,'dd') > dt_inicial_w or (coalesce(b.dt_fim_repasse::text, '') = ''))
	and	a.dt_atualizacao between dt_inicial_w and dt_final_w
	
union

	select	nr_seq_congenere
	from	pls_segurado_repasse
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	dt_inicial_w between trunc(dt_repasse,'dd') and coalesce(trunc(dt_fim_repasse,'dd'),fim_mes(dt_inicial_w))
	and (trunc(dt_fim_repasse,'dd') > dt_inicial_w or (coalesce(dt_fim_repasse::text, '') = ''))
	and	coalesce(dt_fim_repasse::text, '') = ''
	and	ie_tipo_movimentacao_w	= 'A'
	and	((ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(ie_tipo_compartilhamento_w::text, '') = ''))
	
union

	select	nr_seq_congenere
	from	pls_segurado_repasse
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	trunc(dt_repasse,'dd') <= dt_inicial_w
	and	ie_tipo_movimentacao_w	= 'M'
	and	((ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(ie_tipo_compartilhamento_w::text, '') = ''));

/*Verificar as Unimed's que tem empresas em pre pagamento no lote, pois geralmente sao em menor numero essa movimentacao*/

C02 CURSOR FOR
	SELECT	*
	from	ptu_intercambio		c
	where	c.nr_seq_lote_envio	= nr_seq_lote_p
	and	exists (	SELECT	1
				from	ptu_intercambio_empresa	a,
					ptu_intercambio_benef	b
				where	b.nr_seq_empresa	= a.nr_sequencia
				and	a.nr_seq_intercambio	= c.nr_sequencia
				and	b.ie_repasse		= 'P');

/*Busca as Empresas que tem pre-pagamento no intercambio*/

C03 CURSOR FOR
	SELECT	*
	from	ptu_intercambio_empresa	a
	where	a.nr_seq_intercambio	= ptu_intercambio_w.nr_sequencia
	and	exists (	SELECT	1
				from	ptu_intercambio_benef	b
				where	b.nr_seq_empresa	= a.nr_sequencia
				and	b.ie_repasse		= 'P');


BEGIN

select	cd_estabelecimento,
	dt_inicial,
	dt_final,
	ie_tipo_movimento,
	cd_unimed_destino,
	ie_tipo_compartilhamento
into STRICT	cd_estabelecimento_w,
	dt_inicial_intercambio_w,
	dt_final_intercambio_w,
	ie_tipo_movimentacao_w,
	cd_unimed_dest_padrao_w,
	ie_tipo_compartilhamento_w
from	ptu_intercambio_lote_envio
where	nr_sequencia	= nr_seq_lote_p;

select 	coalesce(ie_gerar_liberacao_a100,'N')
into STRICT	ie_gerar_liberacao_a100_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

if (coalesce(dt_final_intercambio_w::text, '') = '') then
	dt_final_intercambio_w	:= fim_mes(dt_inicial_intercambio_w);
end if;

dt_inicial_w	:= trunc(dt_inicial_intercambio_w,'dd');
dt_final_w	:= trunc(dt_final_intercambio_w,'dd');

select	max(cd_cgc_outorgante)
into STRICT	cd_cgc_operadora_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_w;

select	max(cd_cooperativa)
into STRICT	cd_unimed_origem_w
from	pls_congenere
where	cd_cgc	= cd_cgc_operadora_w;

if (coalesce(cd_unimed_dest_padrao_w,0) = 0) then
	open C01;
	loop
	fetch C01 into
		nr_seq_congenere_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (nr_seq_congenere_w IS NOT NULL AND nr_seq_congenere_w::text <> '') then
			select	cd_cooperativa
			into STRICT	cd_unimed_destino_w
			from	pls_congenere
			where	nr_sequencia	= nr_seq_congenere_w;
			
			cd_versao_ptu_w	:= pls_obter_versao_ptu(cd_estabelecimento_w,nr_seq_congenere_w,clock_timestamp(),'A100');
			nr_versao_transacao_w	:= ptu_obter_versao_transacao('A100',cd_versao_ptu_w);
			
			if (coalesce(nr_versao_transacao_w::text, '') = '') then
				select	substr(pls_obter_interf_ptu(cd_estabelecimento_w,nr_seq_congenere_w,clock_timestamp(),'A100'),1,255) cd_interface
				into STRICT	cd_interface_a100_e_w
				;
				
				if (cd_interface_a100_e_w	in ('2692','2762')) then -- 2692 = PTU 6.3 / 2762 = PTU 7.0
					nr_versao_transacao_w	:= 14;
				elsif (cd_interface_a100_e_w	= '2644') then
					nr_versao_transacao_w	:= 13;
				elsif (cd_interface_a100_e_w	= '2590') then
					nr_versao_transacao_w	:= 12;
				elsif (cd_interface_a100_e_w	= '2452') then
					nr_versao_transacao_w	:= 11;
				elsif (cd_interface_a100_e_w	= '2312') then
					nr_versao_transacao_w	:= 10;
				else
					nr_versao_transacao_w	:= 9;
				end if;
			end if;
			
			select	nextval('ptu_intercambio_seq')
			into STRICT	nr_seq_intercambio_w
			;
			
			insert into ptu_intercambio(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
					dt_geracao,cd_unimed_destino,cd_unimed_origem,ie_tipo_mov,
					dt_mov_inicio,dt_mov_fim,ie_operacao,nr_seq_lote_envio,
					nr_versao_transacao)
			values (	nr_seq_intercambio_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
					clock_timestamp(),cd_unimed_destino_w,cd_unimed_origem_w,ie_tipo_movimentacao_w,
					dt_inicial_intercambio_w,dt_final_intercambio_w,'E',nr_seq_lote_p,
					nr_versao_transacao_w);
			
			CALL ptu_gerar_intercambio(nr_seq_intercambio_w,nm_usuario_p,cd_estabelecimento_w);
			
			select	count(1)
			into STRICT	qt_registros_empresa_w
			from	ptu_intercambio_empresa
			where	nr_seq_intercambio	= nr_seq_intercambio_w;
			
			if (qt_registros_empresa_w = 0) then
				delete	FROM ptu_intercambio
				where	nr_sequencia	= nr_seq_intercambio_w;
			end if;
		end if;
		end;
	end loop;
	close C01;
elsif (coalesce(cd_unimed_dest_padrao_w,0) <> 0) then
	if (coalesce(nr_seq_congenere_w::text, '') = '') then
		select	substr(pls_obter_seq_cod_cooperativa(lpad(cd_unimed_dest_padrao_w,4,0),null),1,255)
		into STRICT	nr_seq_congenere_w
		;
	end if;
	
	cd_versao_ptu_w	:= pls_obter_versao_ptu(cd_estabelecimento_w,nr_seq_congenere_w,clock_timestamp(),'A100');
	nr_versao_transacao_w	:= ptu_obter_versao_transacao('A100',cd_versao_ptu_w);
	
	if (coalesce(nr_versao_transacao_w::text, '') = '') then
		select	substr(pls_obter_interf_ptu(cd_estabelecimento_w,nr_seq_congenere_w,clock_timestamp(),'A100'),1,255) cd_interface
		into STRICT	cd_interface_a100_e_w
		;
		
		if (cd_interface_a100_e_w	in ('2692','2762')) then -- 2692 = PTU 6.3 / 2762 = PTU 7.0
			nr_versao_transacao_w	:= 14;
		elsif (cd_interface_a100_e_w	= '2644') then
			nr_versao_transacao_w	:= 13;
		elsif (cd_interface_a100_e_w	= '2590') then
			nr_versao_transacao_w	:= 12;
		elsif (cd_interface_a100_e_w	= '2452') then
			nr_versao_transacao_w	:= 11;
		elsif (cd_interface_a100_e_w	= '2312') then
			nr_versao_transacao_w	:= 10;
		else	
			nr_versao_transacao_w	:= 9;
		end if;
	end if;
	
	select	nextval('ptu_intercambio_seq')
	into STRICT	nr_seq_intercambio_w
	;
	
	insert into ptu_intercambio(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
			dt_geracao,cd_unimed_destino,cd_unimed_origem,ie_tipo_mov,
			dt_mov_inicio,dt_mov_fim,ie_operacao,nr_seq_lote_envio,
			nr_versao_transacao)
	values (	nr_seq_intercambio_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
			clock_timestamp(),cd_unimed_dest_padrao_w,cd_unimed_origem_w,ie_tipo_movimentacao_w,
			dt_inicial_intercambio_w,dt_final_intercambio_w,'E',nr_seq_lote_p,
			nr_versao_transacao_w);
	
	CALL ptu_gerar_intercambio(nr_seq_intercambio_w,nm_usuario_p,cd_estabelecimento_w);
	
	select	count(1)
	into STRICT	qt_registros_empresa_w
	from	ptu_intercambio_empresa
	where	nr_seq_intercambio	= nr_seq_intercambio_w;
	
	if (qt_registros_empresa_w = 0) then
		delete	FROM ptu_intercambio
		where	nr_sequencia	= nr_seq_intercambio_w;
	end if;
end if;

select	count(1)
into STRICT	qt_registros_intercambio_w
from	ptu_intercambio
where	nr_seq_lote_envio	= nr_seq_lote_p;

if (qt_registros_intercambio_w > 0) then
	open c02;
	loop
	fetch c02 into
		ptu_intercambio_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		nr_seq_intercambio_novo_w	:= null;
		
		open c03;
		loop
		fetch c03 into
			ptu_intercambio_empresa_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
			begin
			
			select	count(1)
			into STRICT	qt_registros_custo_w
			from	ptu_intercambio_benef	a
			where	a.nr_seq_empresa	= ptu_intercambio_empresa_w.nr_sequencia
			and	ie_repasse		= 'C'  LIMIT 1;
			
			/*Verifica se na empresa tem mais de 1 beneficiario repassado custo*/

			if (qt_registros_custo_w > 0) then
				if (coalesce(nr_seq_intercambio_novo_w::text, '') = '') then
					select	nextval('ptu_intercambio_seq')
					into STRICT	nr_seq_intercambio_novo_w
					;
					
					insert into ptu_intercambio(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
							dt_geracao,cd_unimed_destino,cd_unimed_origem,ie_tipo_mov,
							dt_mov_inicio,dt_mov_fim,ie_operacao,nr_seq_lote_envio,
							nr_versao_transacao,nr_seq_envio)
					values (	nr_seq_intercambio_novo_w,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
							clock_timestamp(),ptu_intercambio_w.cd_unimed_destino,ptu_intercambio_w.cd_unimed_origem,ptu_intercambio_w.ie_tipo_mov,
							ptu_intercambio_w.dt_mov_inicio,ptu_intercambio_w.dt_mov_fim,'E',nr_seq_lote_p,
							ptu_intercambio_w.nr_versao_transacao,ptu_intercambio_w.nr_seq_envio+1);
				end if;
				
				/*Cria uma nova empresa com os dados iguais, porem copia apenas os beneficiarios de pre para esse empresa*/

				select	nextval('ptu_intercambio_empresa_seq')
				into STRICT	nr_seq_inter_empresa_nova_w
				;
				
				insert into ptu_intercambio_empresa(	nr_sequencia,nr_seq_intercambio,ds_razao_social,nm_empr_abrev,
						ie_tipo_pessoa,cd_cgc_cpf,ds_endereco,cd_cep,
						cd_empresa_origem,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,
						nm_usuario_nrec,cd_filial,nr_insc_estadual,ds_complemento,
						ds_bairro,nm_cidade,sg_uf,nr_ddd,
						nr_telefone,nr_fax,dt_inclusao,dt_exclusao,
						cd_municipio_ibge,nr_seq_contrato,ie_tipo_contrato,nr_endereco)
				values (	nr_seq_inter_empresa_nova_w,nr_seq_intercambio_novo_w,ptu_intercambio_empresa_w.ds_razao_social,ptu_intercambio_empresa_w.nm_empr_abrev,
						ptu_intercambio_empresa_w.ie_tipo_pessoa,ptu_intercambio_empresa_w.cd_cgc_cpf,ptu_intercambio_empresa_w.ds_endereco,ptu_intercambio_empresa_w.cd_cep,
						ptu_intercambio_empresa_w.cd_empresa_origem,clock_timestamp(),nm_usuario_p,clock_timestamp(),
						nm_usuario_p,ptu_intercambio_empresa_w.cd_filial,ptu_intercambio_empresa_w.nr_insc_estadual,ptu_intercambio_empresa_w.ds_complemento, 
						ptu_intercambio_empresa_w.ds_bairro,ptu_intercambio_empresa_w.nm_cidade,ptu_intercambio_empresa_w.sg_uf,ptu_intercambio_empresa_w.nr_ddd, 
						ptu_intercambio_empresa_w.nr_telefone,ptu_intercambio_empresa_w.nr_fax,ptu_intercambio_empresa_w.dt_inclusao,ptu_intercambio_empresa_w.dt_exclusao,
						ptu_intercambio_empresa_w.cd_municipio_ibge,ptu_intercambio_empresa_w.nr_seq_contrato,ptu_intercambio_empresa_w.ie_tipo_contrato,ptu_intercambio_empresa_w.nr_endereco);
				
				/*Transfere todos os beneficiarios de pre pagamento para a nova empresa*/

				update	ptu_intercambio_benef
				set	nr_seq_empresa	= nr_seq_inter_empresa_nova_w
				where	nr_seq_empresa	= ptu_intercambio_empresa_w.nr_sequencia
				and	ie_repasse	= 'P';
				
				/*Cria os novos produtos para a empresa novamente*/

				CALL ptu_gerar_intercambio_plano(	nr_seq_inter_empresa_nova_w,
								nm_usuario_p,
								cd_estabelecimento_w,
								null);
			end if;
			end;
		end loop;
		close c03;
		end;
	end loop;
	close c02;
	
	update	ptu_intercambio_lote_envio
	set	dt_geracao_lote	= clock_timestamp(),
		nm_usuario	= nm_usuario_p
	where	nr_sequencia	= nr_seq_lote_p;
else
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1105987, null );
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_lote_envio ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

