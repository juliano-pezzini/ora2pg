-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_encaixe_checkup (dt_encaixe_p timestamp, cd_pessoa_fisica_p text, cd_empresa_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, nr_Atendimento_p bigint, ie_autorizado_p text default 'A', nr_seq_checkup_gerado_p INOUT bigint DEFAULT NULL, nr_seq_checkup_origem_p bigint default null, ie_transferencia_p text default null) AS $body$
DECLARE


cd_convenio_w 			bigint;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
cd_empresa_ref_w		bigint;
nr_sequencia_w			bigint;
ds_retorno_w			varchar(255);
nr_seq_prioridade_w		bigint;
nm_usuario_original_w		varchar(15);
dt_agendamento_orig_w		timestamp;
ds_observacao_w			varchar(2000);
nr_prescricao_w			numeric(20);
nr_seq_tipo_checkup_w	bigint;

C01 CURSOR FOR     
	SELECT 	a.cd_empresa,
		a.cd_convenio,
		a.cd_plano,
		a.cd_categoria
	from   	empresa_contrato_checkup a,
		empresa_pessoa_checkup b
	where  	a.nr_sequencia = b.nr_seq_contrato
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	and	to_char(dt_encaixe_p,'dd/mm/yyyy') between coalesce(to_char(a.dt_inicial,'dd/mm/yyyy'),'00/00/0000') and coalesce(to_char(a.dt_final,'dd/mm/yyyy'),'99/99/9999');
	

BEGIN
if (dt_encaixe_p IS NOT NULL AND dt_encaixe_p::text <> '') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
	begin
	/*
	select 	max(nvl(a.cd_empresa,0)),
		max(nvl(a.cd_convenio,0)),
		max(nvl(a.cd_plano,'')),
		max(nvl(a.cd_categoria,''))
	into   	cd_empresa_ref_w,
		cd_convenio_w,
		cd_plano_w,
		cd_categoria_w
	from   	empresa_contrato_checkup a,
		empresa_pessoa_checkup b
	where  	a.nr_sequencia = b.nr_seq_contrato
	and	b.cd_pessoa_fisica = cd_pessoa_fisica_p
	and	to_char(dt_encaixe_p,'dd/mm/yyyy') between nvl(to_char(a.dt_inicial,'dd/mm/yyyy'),'00/00/0000') and nvl(to_char(a.dt_final,'dd/mm/yyyy'),'99/99/9999');

	*/
	
	open C01;
	loop
	fetch C01 into	
		cd_empresa_ref_w,
		cd_convenio_w,
		cd_plano_w,
		cd_categoria_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	if (nr_seq_checkup_origem_p IS NOT NULL AND nr_seq_checkup_origem_p::text <> '') then
		begin
		select	cd_convenio,
			cd_categoria,
			cd_plano,
			nr_seq_prioridade,
			nm_usuario_original,
			dt_agendamento,
			ds_observacao,
			nr_prescricao,
			nr_seq_tipo_checkup
		into STRICT	cd_convenio_w,
			cd_categoria_w,
			cd_plano_w,
			nr_seq_prioridade_w,
			nm_usuario_original_w,
			dt_agendamento_orig_w,
			ds_observacao_w,
			nr_prescricao_w,
			nr_seq_tipo_checkup_w
		from	checkup
		where	nr_sequencia = nr_seq_checkup_origem_p;
		
		exception
			when others then
			null;
		end;
	end if;
	
	ds_retorno_w := valida_qnt_agenda_emp(	coalesce(cd_convenio_p,cd_convenio_w), coalesce(cd_empresa_p,cd_empresa_ref_w), cd_pessoa_fisica_p, dt_encaixe_p, ds_retorno_w, 'S');

	
	select 	nextval('checkup_seq')
	into STRICT	nr_sequencia_w
	;

	insert into checkup(
		nr_sequencia,
		nr_atendimento,
		cd_setor_atendimento,
		cd_pessoa_fisica,
		dt_previsto,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_empresa_ref,
		cd_convenio,
		cd_plano,
		cd_categoria,
		ie_encaixe,
		ie_autorizado,
		nr_telefone,
		nr_seq_prioridade,
		nm_usuario_original,
		dt_agendamento,
		ds_observacao,
		nr_prescricao,
		nr_seq_tipo_checkup,
		ie_transferencia)
	values (
		nr_sequencia_w,
		nr_atendimento_p,
		cd_setor_atendimento_p,
		cd_pessoa_fisica_p,
		dt_encaixe_p,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(cd_empresa_ref_w,cd_empresa_p),
		coalesce(cd_convenio_p,cd_convenio_w),
		cd_plano_w,
		cd_categoria_w,
		'S',
		ie_autorizado_p,
		obter_fone_pac_agenda(cd_pessoa_fisica_p),
		nr_seq_prioridade_w,
		coalesce(nm_usuario_original_w,nm_usuario_p),
		coalesce(dt_agendamento_orig_w,clock_timestamp()),
		ds_observacao_w,
		nr_prescricao_w,
		nr_seq_tipo_checkup_w,
		ie_transferencia_p);
	
	if (coalesce(ie_transferencia_p,'C') != 'T' ) then
		CALL valida_qt_checkup_exclusivo(cd_pessoa_fisica_p,dt_encaixe_p,'S',cd_estabelecimento_p,null,null);
	end if;
	
	
	commit;
	
	nr_seq_checkup_gerado_p := nr_sequencia_w;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_encaixe_checkup (dt_encaixe_p timestamp, cd_pessoa_fisica_p text, cd_empresa_p bigint, cd_convenio_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, cd_setor_atendimento_p bigint, nr_Atendimento_p bigint, ie_autorizado_p text default 'A', nr_seq_checkup_gerado_p INOUT bigint DEFAULT NULL, nr_seq_checkup_origem_p bigint default null, ie_transferencia_p text default null) FROM PUBLIC;

