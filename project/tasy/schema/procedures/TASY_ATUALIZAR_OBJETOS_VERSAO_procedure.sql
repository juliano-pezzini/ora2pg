-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_atualizar_objetos_versao (nm_owner_origem_p text, dt_atual_p timestamp, nm_usuario_p text) AS $body$
DECLARE


type invalid_status_type is  table of varchar(50) index by integer;
type text_type is table of varchar(4000) index by integer;

dt_versao_w			varchar(100);

c001	integer;
i	integer;
ds_sql_w			varchar(32760)	:= '';
ie_tipo_objeto_w		varchar(15);
seq_w				integer := 0;

vl_retorno_w			double precision	:= 0;
ds_linha_w			varchar(256);
qt_tam_linha_w			bigint;

ds_script_criacao_w		text;
ds_resto_linha_w		varchar(256);
qt_linhas_w			bigint;
qt_registro_w			bigint;
qt_caracteres_w			integer;
qt_loops_w			bigint;
qt_pos_barra_w			bigint;

nm_owner_origem_w		varchar(30);
nm_owner_atual_w		varchar(30);
nm_tablespace_w			varchar(50);

j		integer:=0;

v_text_rec text_type;

invalid_rec	invalid_status_type;
v_text		dbms_sql.varchar2s;
i             bigint := 1;
n             bigint := 1;
cursor1       integer;
ret_val       integer;
lb            integer := 1;
ub            integer := 0;
init          integer :=1;
column_length integer :=1;



BEGIN

select	user
into STRICT	nm_owner_atual_w
;

if ( coalesce(nm_owner_origem_p::text, '') = '' ) or ( nm_owner_origem_p = '' ) or ( nm_owner_atual_w = nm_owner_origem_w ) then
	nm_owner_origem_w := 'TASY_VERSAO';
end if;

CALL gravar_processo_longo('Inicializando','TASY_ATUALIZAR_OBJETOS_VERSAO',null);

if (coalesce(dt_atual_p::text, '') = '') then

	select	to_char(max(dt_versao),'dd/mm/yyyy hh24:mi:ss')
	into STRICT	dt_versao_w
	from	aplicacao_tasy_versao;
else
	dt_versao_w := to_char(dt_atual_p,'dd/mm/yyyy hh24:mi:ss');
end if;

select	' TABLESPACE ' || obter_tablespace_tab_temp('W_OBJETO_SISTEMA')
into STRICT	nm_tablespace_w
;

select 	count(*)
into STRICT	qt_registro_w
from	user_tables
where	table_name = 'W_OBJETO_SISTEMA';

if ( qt_registro_w = 0 ) then
	CALL exec_sql_dinamico('','create TABLE w_objeto_sistema( ds_script_criacao clob,ie_tipo_objeto varchar2(15)) '|| nm_tablespace_w);
else
	CALL exec_sql_dinamico('','truncate table w_objeto_sistema');
end if;

commit;

EXECUTE 	  'insert into w_objeto_sistema select TO_LOB(a.ds_script_criacao),a.ie_tipo_objeto from ' || nm_owner_origem_w || '.objeto_sistema a '
			||'where a.ie_tipo_objeto not in (''Script'',''Job'',''Baca'') and  a.dt_atualizacao >= to_date('''||dt_versao_w||''',''dd/mm/yyyy hh24:mi:ss'') '
			||' and Gerar_Objeto_Aplicacao(a.ds_aplicacao) = ''S'' order by obter_ordem_Objeto(a.ie_tipo_objeto), a.nm_objeto ';
commit;

ds_sql_w := ' '||
	' select 	ds_script_criacao, ' ||
	'		ie_tipo_objeto ' ||
	' from 		w_objeto_sistema';

c001 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(c001, ds_sql_w, dbms_sql.native);

dbms_sql.define_column(c001,1,ds_script_criacao_w);
dbms_sql.define_column(c001,2,ie_tipo_objeto_w,15);

vl_retorno_w := DBMS_SQL.EXECUTE(c001);

--delete from almir;
--commit;
while( DBMS_SQL.FETCH_ROWS(c001) > 0 ) loop

	DBMS_SQL.COLUMN_VALUE(c001, 1, ds_script_criacao_w);
	DBMS_SQL.COLUMN_VALUE(c001, 2, ie_tipo_objeto_w);

	--insert into almir values (0, dbms_lob.substr(ds_script_criacao_w,256,1),sysdate);
	--commit;
	qt_caracteres_w := octet_length(ds_script_criacao_w);
	qt_loops_w	:= round(qt_caracteres_w / 256) + 1;

	if (qt_caracteres_w > 0) then

		CALL gravar_processo_longo(ie_tipo_objeto_w,'TASY_ATUALIZAR_OBJETOS_VERSAO',-1);

		for j in 1..qt_loops_w loop
			begin
			ds_linha_w := replace(substr(ds_script_criacao_w,256,((j*256)-255)),chr(13),'');

			if (length(trim(both ds_linha_w)) > 0) then
				ub := ub+1;
				v_text(ub) := ds_linha_w;

				--insert into almir values (ub, v_text(ub), sysdate);
				qt_pos_barra_w := position(chr(10)||'/'||chr(10) in ds_linha_w);  --Tratamento para packages
				if (qt_pos_barra_w > 0) and
					(j < (qt_loops_w - 3))  then

					ds_resto_linha_w := substr(v_text(ub),qt_pos_barra_w + 2,256);

					v_text(ub) := substr(v_text(ub),1,(qt_pos_barra_w - 1));

					cursor1 := dbms_sql.open_cursor;
					dbms_sql.parse(cursor1, v_text, lb, ub, null, dbms_sql.native);
					ret_val := dbms_sql.execute(cursor1);
					dbms_sql.close_cursor(cursor1);

					--insert into almir values (ub, 'Segunda parte....',sysdate);
					ub := 1;
					v_text(ub) := ds_resto_linha_w;
				end if;

			end if;
			end;
		end loop;


		if (position('/' in v_text(ub)) > 0) then
			v_text(ub) := substr(v_text(ub),1,instr(v_text(ub),'/',-1)-1);
		end if;

		if (ie_tipo_objeto_w = 'View') then
			v_text(ub) := replace(v_text(ub),';','');
		end if;

		--insert into almir values (ub, v_text(ub), sysdate);
		--commit;
		cursor1 := dbms_sql.open_cursor;
		dbms_sql.parse(cursor1, v_text, lb, ub, null, dbms_sql.native);
		ret_val := dbms_sql.execute(cursor1);
		dbms_sql.close_cursor(cursor1);

		end if;
END LOOP;
DBMS_SQL.CLOSE_CURSOR(c001);

CALL gravar_processo_longo('','',0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_atualizar_objetos_versao (nm_owner_origem_p text, dt_atual_p timestamp, nm_usuario_p text) FROM PUBLIC;

