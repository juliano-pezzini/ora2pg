-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_diagnostico_regra ( nr_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_regra_w	bigint;
nr_seq_diag_w	bigint;
qt_resultados_w	bigint;
qt_cadastrada_w	bigint;
qt_ponto_w	bigint;

c01 CURSOR FOR 
	SELECT 	a.nr_seq_diag, 
		a.nr_sequencia, 
		count(*) 
	from  	pe_regra_acumulo a, 
		pe_regra_acumulo_item b 
	where 	a.nr_sequencia = b.nr_seq_regra 
	group by a.nr_seq_diag, 
		 a.nr_sequencia;

c02 CURSOR FOR 
	SELECT	distinct 
		b.nr_seq_diag 
	from  pe_result_item_diag b, 
		pe_prescr_item_result a 
	where  b.nr_seq_result = a.nr_seq_result 
	and	a.nr_seq_prescr = nr_prescricao_p 
	and   obter_se_diag_sae_lib(nr_prescricao_p,b.nr_seq_diag)  = 'S';


BEGIN 
 
open c01;
loop 
fetch c01 into 
	nr_seq_diag_w, 
	nr_seq_regra_w, 
	qt_cadastrada_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	select 	count(*) 
	into STRICT	qt_resultados_w 
	from  	pe_regra_acumulo a, 
		pe_regra_acumulo_item b 
	where 	a.nr_sequencia 	= b.nr_seq_regra 
	and	a.nr_sequencia	= nr_seq_regra_w 
	and	exists (SELECT 	1 
	  		from	pe_prescr_item_result x 
			where	x.nr_seq_prescr = nr_prescricao_p 
			and	b.nr_seq_result = x.nr_seq_result);
	if (qt_cadastrada_w = qt_resultados_w) then 
		insert into pe_prescr_diag( 
			nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			nr_seq_diag, 
			nr_seq_prescr, 
			qt_pontuacao) 
		SELECT	nextval('pe_prescr_diag_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_diag_w, 
			nr_prescricao_p, 
			null 
		 
		where	not exists (	SELECT	1 
					from	pe_prescr_diag 
					where	nr_seq_prescr	= nr_prescricao_p 
					and	nr_seq_diag	= nr_seq_diag_w);
	end if;
end loop;
close c01;
 
open c02;
loop 
fetch c02 into 
	nr_seq_diag_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	insert into pe_prescr_diag( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_diag, 
		nr_seq_prescr, 
		qt_pontuacao) 
	SELECT	nextval('pe_prescr_diag_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_diag_w, 
		nr_prescricao_p, 
		null 
	 
	where	not exists (	SELECT	1 
				from	pe_prescr_diag 
				where	nr_seq_prescr	= nr_prescricao_p 
				and	nr_seq_diag	= nr_seq_diag_w);
 
end loop;
close c02;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_diagnostico_regra ( nr_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

