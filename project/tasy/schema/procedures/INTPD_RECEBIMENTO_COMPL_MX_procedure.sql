-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE intpd_recebimento_compl_mx ( ds_xml_p text, ds_nome_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


xml_w				xml;
nr_sequencia_w 			bigint;
ds_log_w 			varchar(2000);
xml_parsing_failed 	exception;
ds_aux_w			text;
ds_aux_w2			text;
nr_seq_log_w 		bigint;



BEGIN

ds_aux_w	:= substr(trim(both ds_xml_p), position('<' in trim(both ds_xml_p)), instr(trim(both ds_xml_p), '>', -1));

select	nextval('nf_imp_arquivo_seq')
into STRICT	nr_sequencia_w
;

insert into nf_imp_arquivo(
	nr_sequencia,
	cd_estabelecimento,
	dt_atualizacao,
	nm_usuario,
	dt_atualizacao_nrec,
	nm_usuario_nrec,
	dt_importacao,
	ds_xml,
	ie_status,
	ie_padrao_arquivo,
	ds_nome_arquivo,
	ie_tipo_comprovante)
values (
	nr_sequencia_w,
	cd_estabelecimento_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	ds_aux_w,
	'IC',
	'MX3.3',
	ds_nome_arquivo_p,
	'P');

commit;

begin

	xml_w	:= xmlparse(DOCUMENT, convert_from(, 'utf-8'));
	
	$if not ((DBMS_DB_Version.Ver_LE_10) or (DBMS_DB_Version.Ver_LE_9)) $then

		select	XMLSERIALIZE(document(xml_w) indent size = 2)
		into STRICT	ds_aux_w2
		;
	
		update	nf_imp_arquivo
		set		ds_xml = ds_aux_w2
		where	nr_sequencia = nr_sequencia_w;
	
		commit;
		
	$end
	
exception when xml_parsing_failed then

	ds_log_w := substr(obter_desc_expressao(580270) || ' XML invalido. '|| obter_desc_expressao(327167) || SQLSTATE ||' - '|| sqlerrm || ' ' || dbms_utility.format_error_backtrace,1, 2000);

	insert into log_tasy(
		nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        cd_log,
        ds_log)
	values (
		nr_sequencia_w,
        clock_timestamp(),
        nm_usuario_p,
        9909,
        ds_log_w);
	
	select nextval('fis_log_import_nota_seq')
	into STRICT nr_seq_log_w
	;	
	
	insert into fis_log_import_nota(
		nr_sequencia,
		nr_seq_arquivo,
        dt_atualizacao,
        nm_usuario,
        ds_log)
	values (
		nr_seq_log_w,
		nr_sequencia_w,
        clock_timestamp(),
        nm_usuario_p,
        ds_log_w);

	update nf_imp_arquivo
	set ie_status = 'IE'
	where nr_sequencia = nr_sequencia_w;
	
	ds_retorno_p := ds_log_w;

	commit;
	
end;

begin

	CALL intpd_recebe_interno_compl_mx(nm_usuario_p, cd_estabelecimento_p, nr_sequencia_w, ds_aux_w);

exception when others then

	ds_log_w := substr(obter_desc_expressao(580270) || obter_desc_expressao(327167) || SQLSTATE ||' - '|| sqlerrm || ' ' || dbms_utility.format_error_backtrace,1, 2000);

	insert into log_tasy(
		nr_sequencia,
        dt_atualizacao,
        nm_usuario,
        cd_log,
        ds_log)
	values (
		nr_sequencia_w,
        clock_timestamp(),
        nm_usuario_p,
        9909,
        ds_log_w);
	
	select nextval('fis_log_import_nota_seq')
	into STRICT nr_seq_log_w
	;	
	
	insert into fis_log_import_nota(
		nr_sequencia,
		nr_seq_arquivo,
        dt_atualizacao,
        nm_usuario,
        ds_log)
	values (
		nr_seq_log_w,
		nr_sequencia_w,
        clock_timestamp(),
        nm_usuario_p,
        ds_log_w);

	update nf_imp_arquivo
	set ie_status = 'IE'
	where nr_sequencia = nr_sequencia_w;
	
	ds_retorno_p := ds_log_w;

commit;

end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE intpd_recebimento_compl_mx ( ds_xml_p text, ds_nome_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

