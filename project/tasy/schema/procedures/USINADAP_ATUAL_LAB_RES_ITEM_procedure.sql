-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE usinadap_atual_lab_res_item ( nr_prescricao_p text, cd_exame_p text, cd_analito_p text, ds_resultado_p text, ds_metodo_p text, nm_usuario_p text, ds_referencia_p text, ds_unidade_medida_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
nr_seq_prescricao_w	bigint;
nr_seq_exame_w		bigint;
cd_analito_w		varchar(20);
nr_seq_resultado_w		bigint;
nr_seq_exame_w2		bigint;
ds_resultado_w		varchar(4000);
qt_resultado_w		double precision;
qt_resultado_ww		varchar(4000);
ie_resultado_num_w	varchar(1);


BEGIN 
 
-- Busca pela sequência da prescrição 
select 	coalesce(max(a.nr_sequencia),0), 
	coalesce(max(a.nr_seq_exame),0) 
into STRICT 	nr_seq_prescricao_w, 
	nr_seq_exame_w 
from 	prescr_procedimento a, 
	exame_laboratorio b 
where 	a.nr_seq_exame = b.nr_seq_exame 
and	b.ie_situacao <> 'I' 
and	a.nr_prescricao = nr_prescricao_p 
and	upper(coalesce(b.cd_exame_integracao,b.cd_exame)) = upper(cd_exame_p);
 
 
--gravar_log_lab (8989,nr_prescricao_p||'-'||nr_seq_prescricao_w||'-'||cd_analito_p||''||cd_exame_p,'TASY'); 
--commit; 
 
if not(nr_seq_prescricao_w > 0) then 
	CALL gravar_log_lab(8989,WHEB_MENSAGEM_PCK.get_texto(281420,'CD_EXAME='||cd_exame_p||';NR_PRESCRICAO='||to_char(nr_prescricao_p)),nm_usuario_p,nr_prescricao_p,'USINADAP');
	commit;
end if;
 
-- Busca pelo código do analito 
select	max(coalesce(e.cd_exame_integracao, e.cd_exame)) 
into STRICT	cd_analito_w 
from	exame_laboratorio e 
where	e.nr_seq_exame = (	SELECT	MAX(nr_seq_exame) 
			from	equipamento_lab b, 
				lab_exame_equip a 
			WHERE	a.cd_equipamento = b.cd_equipamento 
			AND	upper(a.cd_exame_equip) = upper(cd_analito_p) 
			AND	upper(b.ds_sigla) = 'USINA' 
			AND	a.nr_seq_exame = nr_seq_exame_w);WITH RECURSIVE cte AS (

 
 
if (coalesce(cd_analito_w::text, '') = '') then 
 
	select	max(coalesce(e.cd_exame_integracao, e.cd_exame)) 
	into STRICT	cd_analito_w 
	from	exame_laboratorio e WHERE nr_seq_superior = nr_seq_exame_w
  UNION ALL
 
 
 
if (coalesce(cd_analito_w::text, '') = '') then 
 
	select	max(coalesce(e.cd_exame_integracao, e.cd_exame)) 
	into STRICT	cd_analito_w 
	from	exame_laboratorio e JOIN cte c ON (c.prior nr_seq_exame = e.nr_seq_superior)

) SELECT * FROM cte WHERE nr_seq_exame = (SELECT	MAX(nr_seq_exame) 
				from	equipamento_lab b, 
				   	lab_exame_equip a 
				WHERE	a.cd_equipamento = b.cd_equipamento 
				AND	upper(a.cd_exame_equip) = upper(cd_analito_p) 
				AND	upper(b.ds_sigla) = 'USINA' 
				AND	a.nr_seq_exame = e.nr_seq_exame);
;
 
 
end if;
 
--gravar_log_lab (8991,nr_prescricao_p||'-'||nr_seq_prescricao_w||'-'||cd_analito_w||''||cd_exame_p,'TASY'); 
--commit; 
 
qt_resultado_ww := trim(both replace(ds_resultado_p, '.', ','));
ds_resultado_w	:= null;
 
begin 
select (coalesce(qt_resultado_ww,0))::numeric  
into STRICT qt_resultado_w
;
 
exception 
	when others then 
	begin 
	 
	select (coalesce(replace(qt_resultado_ww, ',', '.'),0))::numeric  
	into STRICT qt_resultado_w 
	;
	 
	 
	exception 
	when others then	 
		ds_resultado_w := ds_resultado_p;
	end;
end;
 
if (cd_analito_w IS NOT NULL AND cd_analito_w::text <> '') then 
 
--gravar_log_lab (8993,nr_prescricao_p||'-'||ds_resultado_w||'-'||cd_analito_w||'-'||ie_resultado_num_w||'-'||ds_resultado_p||'-'||qt_resultado_w,'TASY'); 
--commit; 
 
	ds_erro_p := Atualizar_Lab_Result_Item(	nr_prescricao_p, nr_seq_prescricao_w, cd_analito_w, qt_resultado_w, null, ds_resultado_w, ' ', null, null, nm_usuario_p, null, ds_referencia_p, ds_unidade_medida_p, null, null, ds_erro_p);
		 
	commit;
	 
	--lab_aprov_result_int_usina (nr_prescricao_p, nr_seq_prescricao_w, nm_usuario_p, sysdate, ds_erro_p); 
	 
	commit;
 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE usinadap_atual_lab_res_item ( nr_prescricao_p text, cd_exame_p text, cd_analito_p text, ds_resultado_p text, ds_metodo_p text, nm_usuario_p text, ds_referencia_p text, ds_unidade_medida_p text, ds_erro_p INOUT text) FROM PUBLIC;

