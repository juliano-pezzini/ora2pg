-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_analise ( nr_seq_fatura_p bigint, nr_seq_lote_conta_p bigint, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ie_processo_falha_p INOUT text, nm_usuario_p text) AS $body$
DECLARE


cd_unimed_origem_w		varchar(10);
cd_cooperativa_w		varchar(10);
nr_seq_protocolo_w		bigint;
nr_seq_congenere_w		bigint;
nr_seq_fatura_w			bigint;
nr_seq_acao_w			bigint;
cd_outorgante_w			bigint;
nr_seq_congenere_ww		bigint;
ie_status_w			ptu_fatura.ie_status%type;
nr_seq_log_exec_w		pls_cta_log_exec.nr_sequencia%type;
ie_tipo_arquivo_cob_w		ptu_fatura.ie_tipo_arquivo_cob%type;
nr_seq_lote_conta_w		pls_protocolo_conta.nr_seq_lote_conta%type;
ie_imp_a500_w			pls_visible_false.ie_novo_imp_a500%type;
ds_erro_w			varchar(4000) := null;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_cooperativa
	from	pls_congenere;


BEGIN

CALL pls_grava_log_proces_imp_a500('Inicio ptu_gerar_analise', nr_seq_fatura_p, nm_usuario_p);

ds_erro_p := null;
ie_processo_falha_p := 'GA';

select	coalesce(ie_tipo_arquivo_cob,'502'),
	nr_seq_protocolo
into STRICT	ie_tipo_arquivo_cob_w,
	nr_seq_protocolo_w
from	ptu_fatura
where	nr_sequencia	= nr_seq_fatura_p;

select	coalesce(max(ie_novo_imp_a500), 'N')
into STRICT	ie_imp_a500_w
from	pls_visible_false
where	cd_estabelecimento	= cd_estabelecimento_p;

-- Colocar qualquer tratamento SEMPRE dentro do EXCEPTION
begin
-- Gerar analise 
if (coalesce(nr_seq_protocolo_w::text, '') = '') then
	-- Diego - Nao estava sendo gravado o numero do protocolo.
	select	max(nr_sequencia)
	into STRICT	nr_seq_protocolo_w
	from	pls_protocolo_conta
	where	nr_seq_lote_conta 	= nr_seq_lote_conta_p;
	
	nr_seq_lote_conta_w	:= nr_seq_lote_conta_p;
else
	select	max(nr_seq_lote_conta)
	into STRICT 	nr_seq_lote_conta_w
	from	pls_protocolo_conta
	where	nr_sequencia	= nr_seq_protocolo_w;
end if;

if (nr_seq_lote_conta_w IS NOT NULL AND nr_seq_lote_conta_w::text <> '') and (ie_tipo_arquivo_cob_w = '502') then

	nr_seq_log_exec_w := pls_cta_processo_pck.executa_processo(	nr_seq_lote_conta_w, null, null, null, null, null, null, null, '12,', null, nm_usuario_p, cd_estabelecimento_p, null, nr_seq_log_exec_w);
	
	-- Rotina chamada para  gerar ocorrencia de pre analise na importacao do A500
	CALL pls_oc_cta_gerar_combinada(	'PTU', 'A', nr_seq_lote_conta_w, null, null, null, null, null,
					null, null, null, null, null, null, cd_estabelecimento_p, nm_usuario_p);
	
	CALL pls_gerar_analise_lote(nr_seq_lote_conta_w, 'N', 'N', cd_estabelecimento_p, nm_usuario_p, 'I', 'N','A500');
end if;

select	cd_unimed_origem,
	ie_status
into STRICT	cd_unimed_origem_w,
	ie_status_w
from	ptu_fatura
where	nr_sequencia	= nr_seq_fatura_p;

if (ie_status_w = 'I') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(719290);
end if;

update	ptu_fatura
set	nr_seq_protocolo	= nr_seq_protocolo_w,
	dt_geracao_conta	= clock_timestamp(),
	ie_status		= 'V',
	nm_usuario		= nm_usuario_p,
	dt_atualizacao		= clock_timestamp(),
	ie_lib_import		= 'S'
where	nr_sequencia		= nr_seq_fatura_p;

CALL ptu_atualizar_status_fatura(nr_seq_fatura_p, 'V', null, nm_usuario_p);

commit;

select	cd_unimed_origem,
	ie_status
into STRICT	cd_unimed_origem_w,
	ie_status_w
from	ptu_fatura
where	nr_sequencia	= nr_seq_fatura_p;

nr_seq_congenere_ww	:= null;

open C01;
loop
fetch C01 into	
	nr_seq_congenere_w,
	cd_cooperativa_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (somente_numero(cd_cooperativa_w) = somente_numero(cd_unimed_origem_w)) then
		nr_seq_congenere_ww	:= nr_seq_congenere_w;
		
		exit;
	end if;
	end;
end loop;
close C01;

-- Diego 24/09/2011 - Sem OS- Visto com Francisco e Felipe - No caso de nao haver reconhecido a congenere e informado ao u8suario e cancelado o arquivo.
if (coalesce(nr_seq_congenere_ww::text, '') = '') then
	CALL ptu_atualizar_status_fatura(nr_seq_fatura_p, 'CA', null, nm_usuario_p);
	
	commit;
	
	--'Ocorreu um problema na identificacao da cooperativa #@CD_OUTORGANTE_P#@. Este problema pode ocorrer por motivo de inconsistencia no cadastro de cooperativas ou por erro no arquivo.'
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184248, 'CD_OUTORGANTE_P=' || cd_outorgante_w);
end if;

if (ie_status_w <> 'I') then
	
	-- Se utilizar a nova importacao, gera o log 
	if (coalesce(ie_imp_a500_w, 'N') = 'S') then
		CALL pls_a500_pck.gerar_log_imp_a500( nr_seq_fatura_p, 'GA', 'GT', nm_usuario_p, null, clock_timestamp(), ds_erro_w, 'S');
	end if;
	
	if (coalesce(ds_erro_w::text, '') = '') then
		if (coalesce(ie_imp_a500_w, 'N') = 'S') then
			ie_processo_falha_p := 'GT';
			CALL pls_a500_pck.gerar_log_imp_a500( nr_seq_fatura_p, 'GT', 'PR', nm_usuario_p, clock_timestamp(), null, ds_erro_w, 'S');
		end if;
		
		nr_seq_acao_w := pls_obter_acao_intercambio(	'1',  -- Importacao do A500 
						'2',  -- Gerar titulo pagar 
						nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'N', nr_seq_acao_w);
		
		if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
			CALL ptu_gerar_tit_pagar_fatura(nr_seq_fatura_p, nr_seq_acao_w, 'G', cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		nr_seq_acao_w := pls_obter_acao_intercambio(	'1',  -- Importacao do A500 
						'10', -- Gerar titulo pagar FATURA
						nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'N', nr_seq_acao_w);
		
		if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
			CALL ptu_gerar_tit_pagar_fatura(nr_seq_fatura_p, nr_seq_acao_w, 'F', cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		nr_seq_acao_w := pls_obter_acao_intercambio(	'1',  -- Importacao do A500 
						'11', -- Gerar titulo pagar NDC
						nr_seq_fatura_p, null, null, null, clock_timestamp(), 'A500', 'N', nr_seq_acao_w);
		
		if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then
			CALL ptu_gerar_tit_pagar_fatura(nr_seq_fatura_p, nr_seq_acao_w, 'N', cd_estabelecimento_p, nm_usuario_p);
		end if;
		
		-- Se utilizar a nova importacao, gera o log
		if (coalesce(ie_imp_a500_w, 'N') = 'S') then
			CALL pls_a500_pck.gerar_log_imp_a500( nr_seq_fatura_p, 'GT', 'FI', nm_usuario_p, null, clock_timestamp(), ds_erro_w, 'S');
		end if;
	end if;

end if;

exception
when others then
	
	-- se for a importacao antiga, limita a 255 caracteres por causa do BDE
	if (coalesce(ie_imp_a500_w, 'N') = 'N') then
	
		ds_erro_p := 	substr('Erro: ' || sqlerrm || pls_util_pck.enter_w ||
				'Error Back Trace: ' || dbms_utility.format_error_backtrace,1,255);
	else
	
		ds_erro_p := 	substr('Erro: ' || sqlerrm || pls_util_pck.enter_w ||
				'Error Back Trace: ' || dbms_utility.format_error_backtrace,1, 4000);
	end if;
	
	-- Finalizar processo com falha
	CALL pls_a500_pck.gerar_log_imp_a500( nr_seq_fatura_p, ie_processo_falha_p, 'FI', nm_usuario_p, null, clock_timestamp(), null, 'S');
end;

commit;

CALL pls_grava_log_proces_imp_a500('Fim ptu_gerar_analise', nr_seq_fatura_p, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_analise ( nr_seq_fatura_p bigint, nr_seq_lote_conta_p bigint, cd_estabelecimento_p bigint, ds_erro_p INOUT text, ie_processo_falha_p INOUT text, nm_usuario_p text) FROM PUBLIC;

