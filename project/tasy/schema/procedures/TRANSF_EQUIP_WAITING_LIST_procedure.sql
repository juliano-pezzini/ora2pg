-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE transf_equip_waiting_list ( schedule_sequence_p bigint, waiting_list_sequence_p bigint, ie_source_p text) AS $body$
DECLARE


cd_estabelecimento_w		integer;
cd_perfil_w			integer;
nm_usuario_w			varchar(15);
ie_consiste_equipamento_w 	varchar(15);
ie_forma_cadastrar_equip_w	varchar(15);
ds_erro_w			varchar(255);
										
schedule_equipments CURSOR FOR
SELECT 	*
from 	agenda_pac_equip
where 	nr_seq_agenda = schedule_sequence_p
and 	ie_origem_inf = 'I';

waiting_list_equipments CURSOR FOR
SELECT 	*
from 	agenda_lista_espera_equip
where 	nr_seq_lista = waiting_list_sequence_p;

schedule_equip_res CURSOR FOR
SELECT 	*
from 	reserva_agenda_equip
where 	nr_seq_agenda = schedule_sequence_p;

waiting_list_equip_res CURSOR FOR
SELECT 	*
from 	reserva_agenda_lista_equip
where 	nr_seq_lista = waiting_list_sequence_p;

procedure inserir_inconsistencia(nm_usuario_p        	text,
				 nr_seq_agenda_p     	bigint,
				 ds_inconsistencia_p 	text,
				 ie_tipo_p	     	text)is
			;
BEGIN
	insert into w_agenda_cirurgica_consist(
		nm_usuario,
		nr_sequencia,
		nr_seq_agenda,
		dt_atualizacao,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ds_inconsistencia,
		ie_tipo
	) values (
		nm_usuario_p,
		nextval('w_agenda_cirurgica_consist_seq'),
		nr_seq_agenda_p,
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		ds_inconsistencia_p,
		ie_tipo_p
	);
	
	commit;
end;

begin

if (schedule_sequence_p IS NOT NULL AND schedule_sequence_p::text <> '' AND waiting_list_sequence_p IS NOT NULL AND waiting_list_sequence_p::text <> '') then
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
	cd_perfil_w := wheb_usuario_pck.get_cd_perfil;		
	nm_usuario_w := wheb_usuario_pck.get_nm_usuario;

	ie_consiste_equipamento_w := obter_param_usuario(871, 138, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_consiste_equipamento_w);
	ie_forma_cadastrar_equip_w := obter_param_usuario(871, 100, cd_perfil_w, nm_usuario_w, cd_estabelecimento_w, ie_forma_cadastrar_equip_w);

	if (ie_source_p = 'S') then
		for equipment in schedule_equipments loop
		
			insert into agenda_lista_espera_equip(
				nr_sequencia,
				nr_seq_lista,
				dt_atualizacao,
				nm_usuario,
				cd_equipamento,
				dt_confirmacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_classif_equip,
				ie_origem_inf,
				nr_seq_proc_interno,
				ie_obrigatorio,
				ie_status_equipamento,
				ds_observacao,
				dt_aprovacao,
				dt_checagem,
				nm_usuario_checagem,
				ie_tipo_exclusao
			) values (
				nextval('agenda_lista_espera_equip_seq'),
				waiting_list_sequence_p,
				clock_timestamp(),
				nm_usuario_w,
				equipment.cd_equipamento,
				equipment.dt_confirmacao,
				equipment.dt_atualizacao_nrec,
				equipment.nm_usuario_nrec,
				equipment.nr_seq_classif_equip,
				equipment.ie_origem_inf,
				equipment.nr_seq_proc_interno,
				equipment.ie_obrigatorio,
				equipment.ie_status_equipamento,
				equipment.ds_observacao,
				equipment.dt_aprovacao,
				equipment.dt_checagem,
				equipment.nm_usuario_checagem,
				equipment.ie_tipo_exclusao
			);
			
		end loop;
		
		for reservation in schedule_equip_res loop
		
			insert into reserva_agenda_lista_equip(
				nr_sequencia,
				nr_seq_lista,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_estab_destino,
				cd_equipamento,
				nr_seq_status
			) values (
				nextval('reserva_agenda_lista_equip_seq'),
				waiting_list_sequence_p,
				clock_timestamp(),
				nm_usuario_w,
				reservation.dt_atualizacao_nrec,
				reservation.nm_usuario_nrec,
				reservation.cd_estab_destino,
				reservation.cd_equipamento,
				reservation.nr_seq_status
			);
			
		end loop;
	elsif (ie_source_p = 'W') then
		for equipment in waiting_list_equipments loop
		
			if ((ie_consiste_equipamento_w = 'A') or (ie_consiste_equipamento_w = 'S')) then
				if (ie_forma_cadastrar_equip_w = 'C') then	
					ds_erro_w := obter_se_classif_equip_disp(schedule_sequence_p, equipment.nr_seq_classif_equip, ds_erro_w, nm_usuario_w, cd_estabelecimento_w, null, 'S');
				elsif (ie_forma_cadastrar_equip_w = 'E') then
					ds_erro_w := obter_se_equip_disp_cirur(schedule_sequence_p, equipment.cd_equipamento, ds_erro_w, nm_usuario_w, cd_estabelecimento_w, null, 'S');		
				end if;
				
				
				if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
					if (ie_consiste_equipamento_w = 'S') then
						CALL CALL inserir_inconsistencia(nm_usuario_w, schedule_sequence_p, ds_erro_w, 'A');
					elsif (ie_consiste_equipamento_w = 'A') then	
						CALL CALL inserir_inconsistencia(nm_usuario_w, schedule_sequence_p, ds_erro_w, 'I');
					end if;
				end if;
			end if;
			
			if (coalesce(ds_erro_w::text, '') = '' or ie_consiste_equipamento_w = 'A') then
				insert into agenda_pac_equip(
					nr_sequencia,
					nr_seq_agenda,
					dt_atualizacao,
					nm_usuario,
					cd_equipamento,
					dt_confirmacao,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_classif_equip,
					ie_origem_inf,
					nr_seq_proc_interno,
					ie_obrigatorio,
					ie_status_equipamento,
					ds_observacao,
					dt_aprovacao,
					dt_checagem,
					nm_usuario_checagem,
					nr_seq_lista_espera,
					ie_tipo_exclusao
				) values (
					nextval('agenda_pac_equip_seq'),
					schedule_sequence_p,
					clock_timestamp(),
					nm_usuario_w,
					equipment.cd_equipamento,
					equipment.dt_confirmacao,
					equipment.dt_atualizacao_nrec,
					equipment.nm_usuario_nrec,
					equipment.nr_seq_classif_equip,
					'I',
					equipment.nr_seq_proc_interno,
					equipment.ie_obrigatorio,
					equipment.ie_status_equipamento,
					equipment.ds_observacao,
					equipment.dt_aprovacao,
					equipment.dt_checagem,
					equipment.nm_usuario_checagem,
					equipment.nr_seq_lista,
					equipment.ie_tipo_exclusao
				);
			end if;
			
			ds_erro_w := null;
		end loop;
		
		for reservation in waiting_list_equip_res loop
			insert into reserva_agenda_equip(
				nr_sequencia,
				nr_seq_agenda,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_estab_destino,
				cd_equipamento,
				nr_seq_status
			) values (
				nextval('reserva_agenda_equip_seq'),
				schedule_sequence_p,
				clock_timestamp(),
				nm_usuario_w,
				reservation.dt_atualizacao_nrec,
				reservation.nm_usuario_nrec,
				reservation.cd_estab_destino,
				reservation.cd_equipamento,
				reservation.nr_seq_status
			);
		end loop;
	end if;
	
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE transf_equip_waiting_list ( schedule_sequence_p bigint, waiting_list_sequence_p bigint, ie_source_p text) FROM PUBLIC;

