-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_amb_filtros_impl ( dt_referencia_inicio_p timestamp, dt_referencia_final_p timestamp, cd_estabelecimento_p bigint, cd_estab_filtros_p text, ie_gerar_ordem_pac_chegada_p text, ie_pre_medicacao_p text DEFAULT NULL, ie_tipo_atend_p text DEFAULT NULL, nr_prescricao_p bigint DEFAULT NULL, nm_usuario_p text  DEFAULT NULL) AS $body$
DECLARE


nr_seq_atendimento_w    bigint;
nr_seq_paciente_w	      bigint;
cd_medico_resp_w	      varchar(10);
cd_pessoa_fisica_w	    varchar(10);
nr_prescricao_w			    bigint;
qt_superf_corporal_w    double precision;
dt_real_w		      	    timestamp;
dt_prevista_w			      timestamp;
nr_sequencia_w			    bigint;
nr_ordem_prod_w 		    bigint;
cd_material_w			      integer;
nr_seq_prescr_w			    bigint;
ie_via_aplicacao_w	    varchar(5);
cd_farmaceutico_w		    varchar(10);
ds_precaucao_ordem_w    varchar(255);
ds_recomendacao_w		    varchar(2000);
cd_setor_atendimento_w	integer;
qt_min_aplicacao_w	  	smallint;
qt_hora_aplicacao_w	  	smallint;
ie_tipo_dosagem_w		    varchar(3);
qt_dose_diluente_w	  	double precision;
vl_gotejo_w		        	double precision;
nr_agrupamento_w	    	double precision;
nr_agrup_ant_w		    	double precision := 0;
cd_material_medic_w	  	integer;
nr_sequencia_medic_w		integer;
qt_dose_medic_w		    	double precision;
cd_unidade_medida_dose_w	varchar(30);
nr_seq_item_prescr_w		bigint;
nr_ocorrencia_w		    	double precision;
cd_forma_armaz_w	    	varchar(255);
cd_estagio_armaz_w	  	varchar(255);
qt_estabilidade_w	    	double precision;
ie_tempo_estab_w	    	varchar(3);
qt_hora_validade_w	  	integer;
qt_min_validade_w	    	integer;
qt_dias_util_w		    	smallint;
ie_exige_liberacao_w		varchar(1);
ie_generico_w			      varchar(1);
ie_gerar_reconstituinte_w	varchar(1);
qt_peso_w		          	real;
qt_superf_corporea_w		double precision;
ie_libera_enfer_w	    	varchar(1);
nr_seq_ordem_prod_w	  	bigint;
ie_usuario_manipulador_w	varchar(1);
ie_restringir_ordem_w		varchar(1);
ie_pre_medicacao_w	  	varchar(1);
ie_consiste_ordem_w	  	varchar(1);
ie_agrupador_w		    	smallint;
ie_agrup_ant_w		    	smallint;
ie_grava_aspirado_w	  	varchar(1);
ie_libera_medic_w		    varchar(1);
qt_volume_aspirado_w		can_ordem_prod.qt_volume_aspirado%type;
ie_exibe_apto_w		    	varchar(1);
cd_estabelecimento_ww		smallint;
dt_chegada_w			      timestamp;
ie_exige_lib_farma_w		varchar(1);
qt_mat_regra_w	        bigint;
ds_entrada_w		        varchar(4000);
ds_log_w		          	varchar(4000);
ds_erro_log_w		      	varchar(4000);
ds_erro_w		          	varchar(2000);
nr_atendimento_w	    	bigint;
ie_tipo_atendimento_w		smallint;
ie_aplica_gotejamento_w	varchar(1);
nr_seq_mat_hor_w        bigint;

C01 CURSOR FOR
	SELECT	nr_seq_atendimento,
		nr_seq_paciente,
		nr_prescricao,
		qt_superf_corporal,
		coalesce(dt_real,dt_prevista),
		ie_exige_liberacao,
		cd_estabelecimento,
		dt_chegada,
		nr_atendimento
	from	paciente_atendimento
	where	coalesce(dt_real,dt_prevista) >= dt_referencia_inicio_p
	and 	coalesce(dt_real,dt_prevista) <= dt_referencia_final_p
	AND 	((obter_se_contido(cd_estabelecimento,cd_estab_filtros_p) = 'S') OR (coalesce(cd_estab_filtros_p::text, '') = ''))
	and	((dt_chegada IS NOT NULL AND dt_chegada::text <> '') or (ie_gerar_ordem_pac_chegada_p = 'N'))
	and 	((dt_apto IS NOT NULL AND dt_apto::text <> '') or (coalesce(ie_exibe_apto_w,'N') = 'N'))
	and	coalesce(dt_cancelamento::text, '') = ''
	and (obter_tipo_convenio_atend(nr_atendimento) = coalesce(ie_tipo_atend_p,obter_tipo_convenio_atend(nr_atendimento)) or (coalesce(obter_tipo_convenio_atend(nr_atendimento),0) = 0)) 	;

C02 CURSOR FOR
	SELECT	CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
		a.nr_sequencia,
		a.ie_via_aplicacao,
		substr(b.ds_precaucao_ordem,1,255),
		substr(a.ds_observacao,1,255),
		coalesce(a.qt_min_aplicacao,CASE WHEN a.ie_agrupador=4 THEN coalesce(Obter_tempo_aplic_sol(nr_prescricao_w,a.nr_sequencia_solucao,'M'),0)  ELSE 0 END ),
		coalesce(a.qt_hora_aplicacao,CASE WHEN a.ie_agrupador=4 THEN coalesce(Obter_tempo_aplic_sol(nr_prescricao_w,a.nr_sequencia_solucao,'H'),0)  ELSE 0 END ),
		CASE WHEN coalesce(obter_um_rep_dispositivo(a.ie_bomba_infusao,a.ie_agrupador)::text, '') = '' THEN CASE WHEN a.ie_bomba_infusao='S' THEN 'mlh'  ELSE 'gtm' END   ELSE obter_um_rep_dispositivo(a.ie_bomba_infusao,a.ie_agrupador) END ,
		a.nr_agrupamento,
		coalesce(a.nr_ocorrencia,CASE WHEN a.ie_agrupador=4 THEN coalesce(obter_etapa_soluc_quimio(nr_prescricao_w,a.nr_sequencia_solucao),1)  ELSE 1 END ),
		a.qt_dias_util,
		a.ie_pre_medicacao,
		a.ie_agrupador
	from	material b,
		prescr_material a,
		prescr_medica c
	where	a.nr_prescricao = nr_prescricao_w
	and ((c.nr_prescricao = nr_prescricao_p) or (coalesce(nr_prescricao_p::text, '') = ''))
	and	a.nr_prescricao	=	c.nr_prescricao
	and	a.cd_material	= b.cd_material
	and	coalesce(a.nr_seq_ordem_prod::text, '') = ''
	and	(a.ie_via_aplicacao IS NOT NULL AND a.ie_via_aplicacao::text <> '')

	and	coalesce(a.ie_suspenso,'N')	= 'N'
	and 	coalesce(a.dt_suspensao::text, '') = ''
	and	(((b.ie_mistura	= 'S') and (coalesce(a.ie_medicacao_paciente, 'N') <> 'S')) or

		 ((b.ie_mistura	= 'R') and (obter_se_gera_ordem(a.ie_via_aplicacao,a.cd_intervalo, a.qt_dose, a.cd_material, a.cd_unidade_medida,'T', coalesce(a.ie_medicacao_paciente,'N'),nr_atendimento_w) = 'S')) or
		 ((b.ie_mistura	= 'I') and (ie_tipo_atendimento_w = 1) and (coalesce(a.ie_medicacao_paciente, 'N') <> 'S')))
	and 	a.ie_agrupador in (1,4)
	and (coalesce(a.ie_pre_medicacao,'X') = coalesce(ie_pre_medicacao_p,coalesce(a.ie_pre_medicacao,'X')))
	and 	(((qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'S') and (dt_chegada_w IS NOT NULL AND dt_chegada_w::text <> ''))
			or (qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'N'))
	and	  ((c.dt_liberacao_farmacia IS NOT NULL AND c.dt_liberacao_farmacia::text <> '') or (coalesce(ie_exige_lib_farma_w,'N') = 	'N'))
	order by a.nr_agrupamento, a.nr_sequencia;

C03 CURSOR FOR
	SELECT	CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE CASE WHEN ie_generico_w='C' THEN obter_medic_regra_onc(a.cd_material,b.cd_material_generico,nr_atendimento_w,ie_tipo_material,b.nr_seq_ficha_tecnica)  ELSE a.cd_material END  END ,
		a.nr_sequencia,
		a.qt_dose,
		a.cd_unidade_medida_dose
	from	material b,
		prescr_material a
	where	a.nr_prescricao		= nr_prescricao_w
	and	a.nr_agrupamento	= nr_agrupamento_w
	and 	a.ie_agrupador 		= ie_agrupador_w
	and	a.cd_material		= b.cd_material
	and 	coalesce(a.dt_suspensao::text, '') = ''
	and	a.ie_agrupador		in (1,4)
	and	(a.cd_unidade_medida_dose IS NOT NULL AND a.cd_unidade_medida_dose::text <> '')
	and 	(((qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'S') and (dt_chegada_w IS NOT NULL AND dt_chegada_w::text <> ''))
			or (qt_obter_regra_gerac_ordem(a.cd_material, a.ie_via_aplicacao, a.qt_dose, a.cd_unidade_medida_dose) = 'N'))
	and (coalesce(a.ie_pre_medicacao,'X') = coalesce(ie_pre_medicacao_p,coalesce(a.ie_pre_medicacao,'X')));

BEGIN
ds_entrada_w := '1';

cd_farmaceutico_w := Obter_Param_Usuario(3130, 2, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_farmaceutico_w);
ie_generico_w := Obter_Param_Usuario(3130, 22, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_generico_w);
ie_gerar_reconstituinte_w := Obter_Param_Usuario(3130, 40, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_reconstituinte_w);
ie_libera_enfer_w := Obter_Param_Usuario(3130, 50, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_libera_enfer_w);
ie_usuario_manipulador_w := Obter_Param_Usuario(3130, 142, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_usuario_manipulador_w);
ie_restringir_ordem_w := Obter_Param_Usuario(3130, 165, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_restringir_ordem_w);
ie_grava_aspirado_w := Obter_Param_Usuario(3130, 176, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_grava_aspirado_w);
ie_libera_medic_w := Obter_Param_Usuario(3130, 203, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_libera_medic_w);
ie_exibe_apto_w := Obter_Param_Usuario(3130, 204, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exibe_apto_w);
ie_exige_lib_farma_w := Obter_Param_Usuario(3130, 429, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exige_lib_farma_w);

begin
	select	coalesce(vl_parametro, vl_parametro_padrao)
	into STRICT	cd_estagio_armaz_w
	from	funcao_parametro
	where	cd_funcao	= 3130
	and	nr_sequencia	= 10;

	select	coalesce(vl_parametro, vl_parametro_padrao)
	into STRICT	cd_forma_armaz_w
	from	funcao_parametro
	where	cd_funcao	= 3130
	and	nr_sequencia	= 11;
	ds_entrada_w := substr(ds_entrada_w || ',4',1,4000);

	OPEN C01;
	LOOP
	FETCH C01 into
		nr_seq_atendimento_w,
		nr_seq_paciente_w,
		nr_prescricao_w,
		qt_superf_corporal_w,
		dt_prevista_w,
		ie_exige_liberacao_w,
		cd_estabelecimento_ww,
		dt_chegada_w,
		nr_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		ds_entrada_w := substr(ds_entrada_w || ',5',1,4000);
		select	max(cd_pessoa_fisica),
			max(cd_medico_resp),
			max(cd_setor_atendimento),
			max(qt_peso),
			max(round((obter_superficie_corp_red_ped(qt_peso, qt_altura, qt_redutor_sc, cd_pessoa_fisica, nm_usuario))::numeric,2))
		into STRICT	cd_pessoa_fisica_w,
			cd_medico_resp_w,
			cd_setor_atendimento_w,
			qt_peso_w,
			qt_superf_corporea_w
		from	paciente_setor
		where	nr_seq_paciente	= nr_seq_paciente_w;

		update	prescr_medica
		set	dt_liberacao		= CASE WHEN ie_libera_enfer_w='S' THEN clock_timestamp()  ELSE null END ,
			dt_liberacao_medico	= CASE WHEN ie_libera_medic_w='S' THEN clock_timestamp() END ,
			cd_setor_atendimento	= cd_setor_atendimento_w
		where	nr_prescricao		= nr_prescricao_w
		and	coalesce(dt_liberacao::text, '') = ''
		and	coalesce(dt_liberacao_medico::text, '') = '';

		nr_agrup_ant_w	:= 0;
		ie_agrup_ant_w	:= 0;
		ds_entrada_w := substr(ds_entrada_w || ',6',1,4000);

		select	max(ie_tipo_atendimento)
		into STRICT	ie_tipo_atendimento_w
		from	atendimento_paciente
		where	nr_atendimento	=	nr_atendimento_w;

		OPEN C02;
		LOOP
		FETCH C02 into
			cd_material_w,
			nr_seq_prescr_w,
			ie_via_aplicacao_w,
			ds_precaucao_ordem_w,
			ds_recomendacao_w,
			qt_min_aplicacao_w,
			qt_hora_aplicacao_w,
			ie_tipo_dosagem_w,
			nr_agrupamento_w,
			nr_ocorrencia_w,
			qt_dias_util_w,
			ie_pre_medicacao_w,
			ie_agrupador_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			commit;
			if (nr_agrup_ant_w <> nr_agrupamento_w) or
				(nr_agrup_ant_w = nr_agrupamento_w AND ie_agrup_ant_w <> ie_agrupador_w) then
				begin
				ds_entrada_w := substr(ds_entrada_w || ',7',1,4000);
				select	coalesce(min(qt_estabilidade),0),
					coalesce(min(ie_tempo_estab),'I')
				into STRICT	qt_estabilidade_w,
					ie_tempo_estab_w
				from	material_armazenamento
				where	cd_material	= cd_material_w
				and	nr_seq_estagio	= cd_estagio_armaz_w
				and	nr_seq_forma	= cd_forma_armaz_w
				and	coalesce(cd_estabelecimento,cd_estabelecimento_ww) = cd_estabelecimento_ww;

				qt_hora_validade_w	:= 0;
				qt_min_validade_w	:= 0;
				if (ie_tempo_estab_w = 'H') then
					qt_hora_validade_w	:= qt_estabilidade_w;
				elsif (ie_tempo_estab_w = 'D') then
					qt_hora_validade_w	:= qt_estabilidade_w * 24;
				elsif (ie_tempo_estab_w = 'M') then
					qt_hora_validade_w	:= qt_estabilidade_w * 30 * 24;
				elsif (ie_tempo_estab_w = 'A') then
					qt_hora_validade_w	:= qt_estabilidade_w * 365 * 24;
				end if;

				nr_agrup_ant_w	:= nr_agrupamento_w;
				ie_agrup_ant_w  := ie_agrupador_w;

				select	coalesce(max(nr_seq_ordem_prod),0)
				into STRICT	nr_seq_ordem_prod_w
				from	prescr_material
				where	nr_prescricao	= nr_prescricao_w
				and	nr_sequencia	= nr_seq_prescr_w;

				while(nr_ocorrencia_w > 0) and (nr_seq_ordem_prod_w = 0) LOOP

					begin
					ds_entrada_w := substr(ds_entrada_w || ',8',1,4000);
					nr_ocorrencia_w	:= nr_ocorrencia_w - 1;

					select	nextval('can_ordem_prod_seq')
					into STRICT	nr_sequencia_w
					;

					nr_ordem_prod_w := nr_sequencia_w;
					ds_entrada_w := substr(ds_entrada_w || ',9',1,4000);
					insert into can_ordem_prod(
						nr_sequencia,
						cd_estabelecimento,
						dt_atualizacao,
						nm_usuario,
						cd_pessoa_fisica,
						dt_prevista,
						ie_via_aplicacao,
						qt_hora_validade,
						qt_min_validade,
						qt_hora_aplic,
						qt_min_aplic,
						cd_medico_resp,
						cd_farmaceutico,
						cd_manipulador,
						cd_auxiliar,
						dt_inicio_preparo,
						dt_entrega_setor,
						dt_administracao,
						nr_seq_atendimento,
						nr_prescricao,
						dt_fim_preparo,
						ie_tipo_dosagem,
						ds_precaucao,
						ie_cancelada,
						ds_orientacao_adm,
						cd_setor_paciente,
						ie_conferido,
						qt_dias_util,
						ie_suspensa,
						qt_peso,
						qt_superf_corporea,
						dt_geracao_ordem,
						ie_pre_medicacao)
					Values (
						nr_sequencia_w,
						coalesce(cd_estabelecimento_ww,wheb_usuario_pck.get_cd_estabelecimento),
						clock_timestamp(),
						nm_usuario_p,
						cd_pessoa_fisica_w,
						dt_prevista_w,
						ie_via_aplicacao_w,
						coalesce(qt_hora_validade_w,0),
						coalesce(qt_min_validade_w,0),
						coalesce(qt_hora_aplicacao_w,0),
						coalesce(qt_min_aplicacao_w,0),
						cd_medico_resp_w,
						cd_farmaceutico_w,
						CASE WHEN ie_usuario_manipulador_w='S' THEN Obter_Pessoa_Fisica_Usuario(nm_usuario_p,'C')  ELSE null END ,
						null,
						null,
						null,
						null,
						nr_seq_atendimento_w,
						nr_prescricao_w,
						null,
						ie_tipo_dosagem_w,
						ds_precaucao_ordem_w,
						'N',
						ds_recomendacao_w,
						cd_setor_atendimento_w,
						'N',
						qt_dias_util_w,
						ie_exige_liberacao_w,
						qt_peso_w,
						qt_superf_corporea_w,
						clock_timestamp(),
						ie_pre_medicacao_w);
						ds_entrada_w := substr(ds_entrada_w || ',10',1,4000);
					commit;


					OPEN C03;
					LOOP
					FETCH C03 into
						cd_material_medic_w,
						nr_sequencia_medic_w,
						qt_dose_medic_w,
						cd_unidade_medida_dose_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin

						select	nextval('can_ordem_item_prescr_seq')
						into STRICT	nr_seq_item_prescr_w
						;

						ds_entrada_w := substr(ds_entrada_w || ',11',1,4000);

						select	count(*)
						into STRICT	qt_mat_regra_w
						from	regra_geracao_ordem_tot
						where	cd_material = cd_material_medic_w;

						if (qt_mat_regra_w > 0) then
							select	qt_material
							into STRICT	qt_dose_medic_w
							from	prescr_material
							where	nr_sequencia	= nr_sequencia_medic_w
							and		nr_prescricao	= nr_prescricao_w;
						end if;

						select min(a.nr_sequencia)
                        into STRICT    nr_seq_mat_hor_w
                        from    prescr_mat_hor a
                        where   a.nr_seq_material = nr_sequencia_medic_w
                        and     a.nr_prescricao = nr_prescricao_w
                        and     a.cd_material = cd_material_medic_w
                        and     not exists (SELECT 1 from can_ordem_item_prescr b
                        where   b.nr_seq_mat_hor = a.nr_sequencia);

						insert into can_ordem_item_prescr(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_ordem,
							cd_material,
							qt_dose,
							cd_unidade_medida,
							nr_prescricao,
							nr_seq_prescricao,
							nr_sequencia_diluente,
							nm_usuario_nrec,
							dt_atualizacao_nrec,
							nr_seq_mat_hor)
						values (	nr_seq_item_prescr_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_sequencia_w,
							cd_material_medic_w,
							coalesce(qt_dose_medic_w,0),
							cd_unidade_medida_dose_w,
							nr_prescricao_w,
							nr_sequencia_medic_w,
							null,
							nm_usuario_p,
							clock_timestamp(),
							nr_seq_mat_hor_w);
						ds_entrada_w := substr(ds_entrada_w || ',12',1,4000);
						insert into can_ordem_item_prescr(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							nr_seq_ordem,
							cd_material,
							qt_dose,
							cd_unidade_medida,
							nr_prescricao,
							nr_seq_prescricao,
							nr_sequencia_diluente,
							ie_agrupador,
							nm_usuario_nrec,
							dt_atualizacao_nrec,
							nr_seq_mat_hor)
						SELECT	nextval('can_ordem_item_prescr_seq'),
							clock_timestamp(),
							nm_usuario_p,
							nr_sequencia_w,
							CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
							coalesce(a.qt_dose,0),
							a.cd_unidade_medida_dose,
							nr_prescricao_w,
							a.nr_sequencia,
							nr_seq_item_prescr_w,
							coalesce(ie_agrupador_quimio,ie_agrupador),
							nm_usuario_p,
							clock_timestamp(),
							nr_seq_mat_hor_w
						from	material b,
							prescr_material a
						where	a.nr_prescricao		= nr_prescricao_w
						and	a.nr_sequencia_diluicao	= nr_sequencia_medic_w
						and	a.cd_material		= b.cd_material
						and	a.ie_agrupador		in (3)
						and 	coalesce(a.dt_suspensao::text, '') = ''
						and	(a.cd_unidade_medida_dose IS NOT NULL AND a.cd_unidade_medida_dose::text <> '');
						ds_entrada_w := substr(ds_entrada_w || ',13',1,4000);

						if (ie_gerar_reconstituinte_w = 'S') then

							insert into can_ordem_item_prescr(
								nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_ordem,
								cd_material,
								qt_dose,
								cd_unidade_medida,
								nr_prescricao,
								nr_seq_prescricao,
								nr_sequencia_diluente,
								ie_agrupador,
								nm_usuario_nrec,
								dt_atualizacao_nrec,
								nr_seq_mat_hor)
								SELECT	nextval('can_ordem_item_prescr_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_sequencia_w,
								CASE WHEN ie_generico_w='S' THEN coalesce(b.cd_material_generico,a.cd_material)  ELSE a.cd_material END ,
								coalesce(a.qt_dose,0),
								a.cd_unidade_medida_dose,
								nr_prescricao_w,
								a.nr_sequencia,
								nr_seq_item_prescr_w,
								ie_agrupador,
								nm_usuario_p,
								clock_timestamp(),
								nr_seq_mat_hor_w
							from	material b,
								prescr_material a
							where	a.nr_prescricao		= nr_prescricao_w
							and	a.nr_sequencia_diluicao	= nr_sequencia_medic_w
							and	a.cd_material		= b.cd_material
							and	a.ie_agrupador		in (9)
							and	(a.cd_unidade_medida_dose IS NOT NULL AND a.cd_unidade_medida_dose::text <> '');
							ds_entrada_w := substr(ds_entrada_w || ',14',1,4000);
						end if;

						begin
						select	CASE WHEN upper(cd_unidade_medida_dose)=upper(obter_unid_med_usua('ML')) THEN qt_dose  ELSE qt_dose * obter_conversao_unid_med(cd_material,obter_unid_med_usua('ML')) END
						into STRICT	qt_dose_diluente_w
						from	prescr_material
						where	nr_sequencia_diluicao	= nr_seq_prescr_w
						and	nr_prescricao		= nr_prescricao_w
						and	ie_agrupador		= 3;
						exception
						when others then
							qt_dose_diluente_w	:= 0;
						end;
						ie_aplica_gotejamento_w := 'S';

						if (ie_via_aplicacao_w IS NOT NULL AND ie_via_aplicacao_w::text <> '') then
							select coalesce(ie_gotejamento,'S')
							into STRICT   ie_aplica_gotejamento_w
							from   via_aplicacao
							where  ie_via_aplicacao = ie_via_aplicacao_w;
						end if;

						if (ie_aplica_gotejamento_w = 'S') then
							vl_gotejo_w := Calcular_gotejamento_ordem(ie_tipo_dosagem_w, dividir(qt_min_aplicacao_w,60) + qt_hora_aplicacao_w, qt_dose_diluente_w, vl_gotejo_w);
						else
							vl_gotejo_w := null;
							ie_tipo_dosagem_w := null;
						end if;

						qt_volume_aspirado_w := null;

						if (ie_grava_aspirado_w = 'S') then
							qt_volume_aspirado_w := obter_volume_aspirado(nr_sequencia_w);
						end if;

						update	can_ordem_prod
						set	qt_dosagem	        = vl_gotejo_w,
							qt_volume_aspirado	= qt_volume_aspirado_w,
							ie_tipo_dosagem		= ie_tipo_dosagem_w
						where	nr_sequencia		= nr_sequencia_w;

						ds_entrada_w := substr(ds_entrada_w || ',16',1,4000);
						end;
					END LOOP;
					Close C03;
					end;
				END LOOP;

				commit;

				end;
			end if;
			end;
		ds_entrada_w := substr(ds_entrada_w || ',17',1,4000);
		update	prescr_material
		set	nr_seq_ordem_prod	= nr_ordem_prod_w
		where	nr_prescricao		= nr_prescricao_w
		and	nr_agrupamento		= nr_agrupamento_w
		and 	ie_agrupador 		= ie_agrupador_w;

		commit;

		END LOOP;
		Close C02;
		end;

	END LOOP;
	Close C01;

	ds_log_w := substr(	'1: GERAR_ORDEM_AMB_FILTROS '		||
				'PASSAGENS = (ds_entrada_w) = '		|| ds_entrada_w			|| chr(10) || chr(13) ||
				'dt_referencia_inicio_p = '		|| dt_referencia_inicio_p	|| chr(10) || chr(13) ||
				'dt_referencia_final_p = '		|| dt_referencia_final_p	|| chr(10) || chr(13) ||
				'cd_estabelecimento_p = '		|| cd_estabelecimento_p		|| chr(10) || chr(13) ||
				'ie_gerar_ordem_pac_chegada_p = '	|| ie_gerar_ordem_pac_chegada_p	|| chr(10) || chr(13) ||
				'ie_pre_medicacao_p = '			|| ie_pre_medicacao_p		|| chr(10) || chr(13) ||
				'cd_estab_filtros_p = '			|| cd_estab_filtros_p		|| chr(10) || chr(13) ||
				'nr_prescricao_p = '			|| nr_prescricao_p		|| chr(10) || chr(13) ||				
				'ie_tipo_atend_p = '			|| ie_tipo_atend_p		|| chr(10) || chr(13) ||
				'nr_seq_atendimento_w = '		|| nr_seq_atendimento_w		|| chr(10) || chr(13) ||
				'nr_seq_paciente_w = '			|| nr_seq_paciente_w		|| chr(10) || chr(13) ||
				'nr_prescricao_w = '			|| nr_prescricao_w		|| chr(10) || chr(13) ||
				'qt_superf_corporal_w = '		|| qt_superf_corporal_w		|| chr(10) || chr(13) ||
				'dt_prevista_w = '			|| dt_prevista_w		|| chr(10) || chr(13) ||
				'ie_exige_liberacao_w = '		|| ie_exige_liberacao_w		|| chr(10) || chr(13) ||
				'cd_estabelecimento_ww = '		|| cd_estabelecimento_ww	|| chr(10) || chr(13) ||
				'cd_medico_resp_w = '			|| cd_medico_resp_w		|| chr(10) || chr(13) ||
				'nm_usuario_p = '			|| nm_usuario_p			|| chr(10) || chr(13),1,4000);
	CALL gerar_log_quimio(	'',
			nr_prescricao_w,
			'',
			ds_log_w,
			'G',
			nm_usuario_p);			
exception
when others then
	ds_erro_w := substr(SQLERRM(SQLSTATE),1,255);
	ds_erro_log_w := ds_erro_log_w || ' - ' || ds_erro_w;

    ds_log_w := substr(	'2: GERAR_ORDEM_AMB_FILTROS'		||
			'PASSAGENS = (ds_entrada_w) = '		|| ds_entrada_w			|| chr(10) || chr(13) ||
			'dt_referencia_inicio_p = '		|| dt_referencia_inicio_p	|| chr(10) || chr(13) ||
			'dt_referencia_final_p = '		|| dt_referencia_final_p	|| chr(10) || chr(13) ||
			'cd_estabelecimento_p = '		|| cd_estabelecimento_p		|| chr(10) || chr(13) ||
			'ie_gerar_ordem_pac_chegada_p = '	|| ie_gerar_ordem_pac_chegada_p	|| chr(10) || chr(13) ||
			'ie_pre_medicacao_p = '			|| ie_pre_medicacao_p		|| chr(10) || chr(13) ||
			'cd_estab_filtros_p = '			|| cd_estab_filtros_p		|| chr(10) || chr(13) ||
			'nr_prescricao_p = '			|| nr_prescricao_p		|| chr(10) || chr(13) ||				
			'ie_tipo_atend_p = '			|| ie_tipo_atend_p		|| chr(10) || chr(13) ||
			'nr_seq_atendimento_w = '		|| nr_seq_atendimento_w		|| chr(10) || chr(13) ||
			'nr_seq_paciente_w = '			|| nr_seq_paciente_w		|| chr(10) || chr(13) ||
			'nr_prescricao_w = '			|| nr_prescricao_w		|| chr(10) || chr(13) ||
			'qt_superf_corporal_w = '		|| qt_superf_corporal_w		|| chr(10) || chr(13) ||
			'dt_prevista_w = '			|| dt_prevista_w		|| chr(10) || chr(13) ||
			'ie_exige_liberacao_w = '		|| ie_exige_liberacao_w		|| chr(10) || chr(13) ||
			'cd_estabelecimento_ww = '		|| cd_estabelecimento_ww	|| chr(10) || chr(13) ||
			'cd_medico_resp_w = '			|| cd_medico_resp_w		|| chr(10) || chr(13) ||
			'nm_usuario_p = '			|| nm_usuario_p			|| chr(10) || chr(13) ||
			' ERRO = ' 				|| ds_erro_log_w,1,4000);
    CALL gerar_log_quimio(	'',
			nr_prescricao_w,
			'',
			ds_log_w,
			'G',
			nm_usuario_p);

    CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(184695, 'ERRO='||sqlerrm);
end;			

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_amb_filtros_impl ( dt_referencia_inicio_p timestamp, dt_referencia_final_p timestamp, cd_estabelecimento_p bigint, cd_estab_filtros_p text, ie_gerar_ordem_pac_chegada_p text, ie_pre_medicacao_p text DEFAULT NULL, ie_tipo_atend_p text DEFAULT NULL, nr_prescricao_p bigint DEFAULT NULL, nm_usuario_p text  DEFAULT NULL) FROM PUBLIC;

