-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pcs_gerar_solic_item_lista ( nr_seq_registro_p bigint, cd_material_p bigint, ie_tipo_compra_p text, nm_usuario_p text, nr_solic_compra_p INOUT bigint) AS $body$
DECLARE


cd_material_w				integer;
qt_material_w				double precision;
cd_estabelecimento_w		smallint;
cd_unidade_medida_w			varchar(30);
cd_local_estoque_w			smallint;
cd_pessoa_solicitante_w		varchar(10);
nr_item_w					integer;
nr_solic_compra_w			bigint;
nr_solic_compra_ww			bigint;
ie_gerou_w					varchar(1);
qt_existe_w					integer;
nr_sequencia_w				integer;
ds_material_w				varchar(255);
ds_observacao_w				varchar(255);
ds_historico_w				varchar(4000);
nr_seq_historico_w			bigint;
ie_tipo_compra_w			varchar(15);
vl_dominio_w				varchar(5);
ie_tipo_compra_ww			varchar(15);
nr_seq_motivo_solic_w			bigint;

c01 CURSOR FOR
SELECT distinct b.cd_material,
	   c.ds_material,
	   c.cd_unidade_medida_compra,
	   (select (vl_informacao)::numeric  from pcs_reg_analise_itens x where x.cd_material = b.cd_material and nr_seq_registro = a.nr_sequencia and x.nm_informacao = 'QT_MATERIAL'),
	   (select (vl_informacao)::numeric  from pcs_reg_analise_itens x where x.cd_material = b.cd_material and nr_seq_registro = a.nr_sequencia and x.nm_informacao = 'CD_LOCAL_EST'),
	   (select (vl_informacao)::numeric  from pcs_reg_analise_itens x where x.cd_material = b.cd_material and nr_seq_registro = a.nr_sequencia and x.nm_informacao = 'CD_ESTAB'),
	   (select vl_informacao from pcs_reg_analise_itens x where x.cd_material = b.cd_material and nr_seq_registro = a.nr_sequencia and x.nm_informacao = 'IE_TIPO_COMPRA'),
	   (select (vl_informacao)::numeric  from pcs_reg_analise_itens x where x.cd_material = b.cd_material and nr_seq_registro = a.nr_sequencia and x.nm_informacao = 'NR_SEQ_MOTIVO_SOLIC')
from   pcs_reg_analise a,
	   pcs_reg_analise_itens b,
	   material c
where  a.nr_sequencia = b.nr_seq_registro
and	   b.cd_material = c.cd_material
and	   a.nr_sequencia = nr_seq_registro_p
and	   b.ie_status_analise = 'A'
and	  coalesce(b.nr_solic_compra::text, '') = ''
and (b.cd_material	= cd_material_p or cd_material_p = 0);



BEGIN
ie_gerou_w	:= 'N';

select	cd_pessoa_fisica
into STRICT	cd_pessoa_solicitante_w
from	usuario
where	nm_usuario = nm_usuario_p;

select	coalesce(max(nr_solic_compra),0)
into STRICT	nr_solic_compra_ww
from	solic_compra_item
where (cd_material	= cd_material_p or cd_material_p = 0)
and     nr_seq_reg_pcs = nr_seq_registro_p
and		coalesce(nr_seq_motivo_cancel::text, '') = '';

if (nr_solic_compra_ww > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(307822,'NR_SOLIC_COMPRA='||nr_solic_compra_ww);
	/*r.aise_application_error(-20011, 'Já existe a solicitação ' || nr_solic_compra_ww || ' gerada para este item da requisição.);*/

end if;


open c01;
loop
fetch c01 into
	cd_material_w,
	ds_material_w,
	cd_unidade_medida_w,
	qt_material_w,
	cd_local_estoque_w,
	cd_estabelecimento_w,
	ie_tipo_compra_w,
	nr_seq_motivo_solic_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (ie_gerou_w = 'N') then
		begin
		if (coalesce(nr_solic_compra_p, 0) > 0) then
			nr_solic_compra_w	:= nr_solic_compra_p;
			select	count(*)
			into STRICT	qt_existe_w
			from	solic_compra
			where	nr_solic_compra = nr_solic_compra_w;
			if (qt_existe_w = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(180508,'NR_SOLIC_COMPRA='||nr_solic_compra_w);
				/*r.aise_application_error(-20011, 'Não existe a solicitação de compras numero ' || nr_solic_compra_w);*/

			end if;

			select	count(*)
			into STRICT	qt_existe_w
			from	solic_compra
			where	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	nr_solic_compra = nr_solic_compra_w;
			if (qt_existe_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(180510,'NR_SOLIC_COMPRA='||nr_solic_compra_w);
				/*r.aise_application_error(-20011, 'A solicitação de compras informada já está liberada. ' || nr_solic_compra_w);*/

			end if;
		end if;

		if (coalesce(nr_solic_compra_p, 0) = 0) then

			select	nextval('solic_compra_seq')
			into STRICT	nr_solic_compra_w
			;

			insert into solic_compra(
				nr_solic_compra,
				cd_estabelecimento,
				dt_solicitacao_compra,
				dt_atualizacao,
				nm_usuario,
				ie_situacao,
				cd_pessoa_solicitante,
				cd_local_estoque,
				ie_aviso_aprov_oc,
				ie_urgente,
				ie_tipo_solicitacao,
				ie_comodato,
				ie_semanal,
				ie_tipo_compra,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_motivo_solic)
			values ( nr_solic_compra_w,
				cd_estabelecimento_w,
				clock_timestamp(),
				clock_timestamp(),
				nm_usuario_p,
				'A',
				cd_pessoa_solicitante_w,
				cd_local_estoque_w,
				'N',
				'N',
				'A',
				'N',
				'N',
				ie_tipo_compra_w,
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_motivo_solic_w);
		end if;

		ie_gerou_w	:= 'S';
		end;
	end if;

	select	coalesce(max(nr_item_solic_compra),0) + 1
	into STRICT	nr_item_w
	from	solic_compra_item
	where	nr_solic_compra = nr_solic_compra_w;

	insert into solic_compra_item(
						nr_solic_compra,
						nr_item_solic_compra,
						cd_material,
						cd_unidade_medida_compra,
						qt_material,
						dt_atualizacao,
						nm_usuario,
						ie_situacao,
						ie_geracao,
						dt_solic_item,
						ds_observacao,
						qt_conv_compra_est_orig,
						qt_saldo_disp_estoque,
						nr_seq_reg_pcs)
				values (nr_solic_compra_w,
						nr_item_w,
						cd_material_w,
						cd_unidade_medida_w,
						qt_material_w,
						clock_timestamp(),
						nm_usuario_p,
						'A',
						'S',
						trunc(clock_timestamp() + interval '7 days', 'dd'),
						ds_observacao_w,
						obter_dados_material(cd_material_w,'QCE'),
						obter_saldo_disp_estoque(cd_estabelecimento_w, cd_material_w, cd_local_estoque_w, trunc(clock_timestamp(),'mm')),
						nr_seq_registro_p);

	update	pcs_reg_analise_itens
	set 	nr_solic_compra = nr_solic_compra_w
	where	nr_seq_registro = nr_seq_registro_p
	and		cd_material = cd_material_w;


	insert into solic_compra_item_entrega(
		nr_solic_compra,
		nr_item_solic_compra,
		nr_item_solic_compra_entr,
		qt_entrega_solicitada,
		dt_entrega_solicitada,
		dt_atualizacao,
		nm_usuario)
	values ( nr_solic_compra_w,
		nr_item_w,
		1,
		qt_material_w,
		trunc(clock_timestamp() + interval '7 days', 'dd'),
		clock_timestamp(),
		nm_usuario_p);

	ds_historico_w := substr(ds_historico_w || '['|| cd_material_w || '] - ' || ds_material_w || chr(13) || chr(10),1,4000);
	end;

end loop;
close c01;

commit;
nr_solic_compra_p := coalesce(nr_solic_compra_w,0);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pcs_gerar_solic_item_lista ( nr_seq_registro_p bigint, cd_material_p bigint, ie_tipo_compra_p text, nm_usuario_p text, nr_solic_compra_p INOUT bigint) FROM PUBLIC;

