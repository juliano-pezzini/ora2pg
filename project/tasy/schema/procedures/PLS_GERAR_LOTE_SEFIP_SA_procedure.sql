-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_sefip_sa ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE



cd_cgc_outorgante_w		varchar(255);
dt_lote_w			timestamp;
dt_lote_inicial_w		timestamp;
dt_lote_final_w			timestamp;
ie_competencia_w		varchar(255);
qt_reg_pagto_novo_w		bigint;
nr_seq_tomador_w		sefip_tomador.nr_sequencia%type;
pr_tributo_w			pls_pag_prest_venc_trib.pr_tributo%type;
qt_registros_w 			bigint := 0;
vl_imposto_w			double precision;
vl_imposto_carta_w		double precision;
vl_remuneracao_w		sefip_tomador_movimento.vl_remuneracao%type;
vl_descontado_w			sefip_tomador_movimento.vl_descontado%type;
cd_darf_w			sefip_lote.cd_darf%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_cgc_tomador_padrao_w		sefip_lote.cd_cgc_tomador_padrao%type;
ie_tipo_data_w			sefip_lote.ie_tipo_data%type;

c_prestador CURSOR FOR
	SELECT  pe.cd_pessoa_fisica,
		max(p.nr_seq_prestador) nr_seq_prestador,
		sum(i.vl_item) - sum(( 	SELECT	coalesce(sum(x.vl_vencimento),0)
					from	pls_pag_prest_venc_valor x
					where	x.nr_seq_evento = ev.nr_sequencia
					and	x.nr_seq_vencimento = v.nr_sequencia
					and	x.ie_tipo_valor = 'PP')) vl_remuneracao
	from 	pls_lote_pagamento       l,
		pls_pagamento_prestador  p,
		pls_pag_prest_vencimento v,
		pls_pagamento_item 	 i,
		pls_evento 		 ev,
		pls_prestador		pe
	where	l.nr_sequencia = p.nr_seq_lote
	and 	p.nr_sequencia = v.nr_seq_pag_prestador
	and 	p.nr_sequencia = i.nr_seq_pagamento
	and	i.nr_seq_evento = ev.nr_sequencia
	and	p.nr_seq_prestador = pe.nr_sequencia
	and	coalesce(pe.cd_pessoa_fisica,'X') <> 'X'
	and 	l.ie_status = 'D'
	and	coalesce(p.ie_cancelamento,'X') = 'X'
	and (exists (	select	1
			from	pls_evento_tributo evt,
				tributo t
			where	evt.nr_seq_evento = ev.nr_sequencia
			and	evt.cd_tributo = t.cd_tributo
			and	t.ie_tipo_tributo = 'INSS'
			and	evt.ie_situacao = 'A'
			and	dt_lote_w between coalesce(evt.dt_inicio_vigencia, dt_lote_w) and coalesce(evt.dt_fim_vigencia,dt_lote_w)))
	and 	CASE WHEN ie_tipo_data_w='C' THEN l.dt_mes_competencia  ELSE v.dt_vencimento END  between dt_lote_inicial_w and dt_lote_final_w
	group by pe.cd_pessoa_fisica;

vet_prestadores c_prestador%rowtype;

c_prest_novo_pgto CURSOR FOR
	SELECT	nr_seq_prestador,
		cd_pessoa_fisica,
		sum(vl_remuneracao) vl_remuneracao,
		sum(vl_trib_inss) vl_trib_inss,
		pr_trib_inss
	from	(
		SELECT	p.nr_seq_prestador,
			pe.cd_pessoa_fisica,
			(	select	coalesce(sum(i.vl_item), 0)
				from	pls_pp_base_atual_trib i
				where	i.nr_seq_lote = l.nr_sequencia
				and 	i.cd_tributo = v.cd_tributo
				and 	i.nr_seq_trib_pessoa = v.nr_seq_trib_pessoa
				and 	coalesce(v.pr_aliquota, 0) <> 0) vl_remuneracao,
			v.vl_tributo vl_trib_inss,
			v.vl_base_calculo vl_base_inss,
			null pr_trib_inss
		from	pls_pp_valor_trib_pessoa_v v,
			pls_pp_prestador p,
			pls_pp_lote l,
			tributo t,
			pls_prestador pe
		where	l.nr_sequencia = v.nr_seq_lote
		and	p.nr_seq_prestador = v.nr_seq_prestador
		and	l.nr_sequencia = p.nr_seq_lote
		and	v.cd_tributo = t.cd_tributo
		and	v.nr_seq_prestador = pe.nr_sequencia
		and	t.ie_tipo_tributo = 'INSS'
                and     ((v.cd_retencao = coalesce(cd_darf_w, v.cd_retencao)) or
                        ((coalesce(cd_darf_w::text, '') = '') and (coalesce(v.cd_retencao::text, '') = '')))
		and	CASE WHEN ie_tipo_data_w='C' THEN l.dt_mes_competencia  ELSE p.dt_venc_titulo END  between dt_lote_inicial_w and dt_lote_final_w
		) alias14
	where	((vl_remuneracao > 0)
	or (vl_base_inss > 0))
	group by nr_seq_prestador, cd_pessoa_fisica, pr_trib_inss;
vet_prest_novo_pgto c_prest_novo_pgto%rowtype;


BEGIN

select	ie_competencia,
	dt_lote,
	cd_darf,
	cd_cgc_tomador_padrao,
	coalesce(ie_tipo_data,'C')
into STRICT	ie_competencia_w,
	dt_lote_w,
	cd_darf_w,
	cd_cgc_tomador_padrao_w,
	ie_tipo_data_w
from	sefip_lote
where	nr_sequencia	= nr_seq_lote_p;

cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;

dt_lote_inicial_w	:= trunc(dt_lote_w,'month');
dt_lote_final_w		:= fim_dia(last_day(trunc(dt_lote_w,'month')));

select	max(a.cd_cgc_outorgante)
into STRICT	cd_cgc_outorgante_w
from	pls_outorgante	a
where	a.cd_estabelecimento	= cd_estabelecimento_w
and	coalesce(cd_cgc_tomador_padrao_w::text, '') = '';

select	nextval('sefip_tomador_seq')
into STRICT	nr_seq_tomador_w
;

insert into sefip_tomador(	nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_lote,
				cd_cgc,
				vl_retencao,
				vl_faturado,
				nr_seq_lote_pgto)
		values (	nr_seq_tomador_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_lote_p,
				coalesce(cd_cgc_outorgante_w,cd_cgc_tomador_padrao_w),
				0,
				0,
				null);

commit;

select	count(*)
into STRICT	qt_reg_pagto_novo_w
from	pls_pp_lote
where	dt_mes_competencia between dt_lote_inicial_w and dt_lote_final_w;

if (qt_reg_pagto_novo_w = 0) then

	-- Inserir dados dos prestadores
	open c_prestador;
	loop
	fetch c_prestador into
		vet_prestadores;
	EXIT WHEN NOT FOUND; /* apply on c_prestador */
		begin
		qt_registros_w := qt_registros_w + 1;

		select	coalesce(sum(a.vl_imposto),0),
			coalesce(max(a.pr_tributo),20)
		into STRICT	vl_imposto_w,
			pr_tributo_w
		from	tributo				b,
			pls_pag_prest_venc_trib		a,
			pls_pag_prest_vencimento	x,
			pls_pagamento_prestador  	p,
			pls_prestador			pe,
			pls_lote_pagamento		l
		where	a.cd_tributo		= b.cd_tributo
		and	b.ie_tipo_tributo	= 'INSS'
		and	x.nr_sequencia		= a.nr_seq_vencimento
		and	x.nr_seq_pag_prestador  = p.nr_sequencia
		and	p.nr_seq_prestador	= pe.nr_sequencia
		and	l.nr_sequencia		= p.nr_seq_lote
		and	pe.cd_pessoa_fisica	= vet_prestadores.cd_pessoa_fisica
		and 	CASE WHEN ie_tipo_data_w='C' THEN l.dt_mes_competencia  ELSE x.dt_vencimento END  between dt_lote_inicial_w and dt_lote_final_w
		and	a.ie_pago_prev	= 'V'
		and	((a.cd_darf	= coalesce(cd_darf_w, a.cd_darf)) or
			((coalesce(cd_darf_w::text, '') = '') and (coalesce(a.cd_darf::text, '') = '')));

		-- Descontar ou somar o valor de diferença do tributo (pasta Retenção tributos) conforme o campo natureza (desconto ou provento)
		select	coalesce(sum(CASE WHEN coalesce(a.ie_natureza,'D')='D' THEN a.vl_imposto WHEN coalesce(a.ie_natureza,'D')='P' THEN  (a.vl_imposto * (-1)) END ),0)
		into STRICT	vl_imposto_carta_w
		from 	pls_lote_ret_trib_val_dif a,
			pls_lote_ret_trib_prest b,
			pls_lote_retencao_trib c
		where	b.nr_sequencia = a.nr_seq_trib_prest
		and	b.nr_seq_lote = c.nr_sequencia
		and	c.dt_mes_referencia between dt_lote_inicial_w and dt_lote_final_w
		and	b.cd_pessoa_fisica = vet_prestadores.cd_pessoa_fisica;
		
		vl_imposto_w := vl_imposto_w - vl_imposto_carta_w;
		
		insert into sefip_tomador_movimento(	nr_sequencia,
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_seq_tomador, 
							nr_seq_prestador, 
							vl_remuneracao, 
							vl_remuneracao_13, 
							vl_descontado, 
							vl_base_13_movimento, 
							vl_base_13, 
							cd_cbo_saude, 
							nr_seq_lote, 
							cd_pf_estipulante, 
							cd_cgc_estipulante, 
							pr_imposto)
					values (	nextval('sefip_tomador_movimento_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							nr_seq_tomador_w,
							vet_prestadores.nr_seq_prestador,
							vet_prestadores.vl_remuneracao,
							0,
							vl_imposto_w,
							0,
							0,
							null,
							nr_seq_lote_p,
							null,
							cd_cgc_outorgante_w,
							pr_tributo_w);

		--insert into marcio_log(nr_lote_pgto, vl_remuneracao, vl_imposto) values(vet_prestadores.nr_seq_prestador, vet_prestadores.vl_remuneracao, vl_imposto_w);
		if (mod(qt_registros_w,1000) = 0) then
			commit;
		end if;

		end;
	end loop;
	close c_prestador;

else
open c_prest_novo_pgto;
loop
fetch c_prest_novo_pgto into	
	vet_prest_novo_pgto;
EXIT WHEN NOT FOUND; /* apply on c_prest_novo_pgto */
	begin
	
	select	coalesce(sum(CASE WHEN coalesce(b.ie_natureza,'D')='D' THEN b.vl_diferenca_trib WHEN coalesce(b.ie_natureza,'D')='P' THEN  (b.vl_diferenca_trib * (-1)) END ),0)
	into STRICT	vl_imposto_carta_w
	from	pls_pp_lr_lote a,
		pls_pp_lr_trib_pessoa b
	where	b.nr_seq_lote_ret = a.nr_sequencia
	and	a.dt_mes_competencia between dt_lote_inicial_w and dt_lote_final_w
	and	b.cd_pessoa_fisica = vet_prest_novo_pgto.cd_pessoa_fisica;
	
	vl_imposto_w := vet_prest_novo_pgto.vl_trib_inss + vl_imposto_carta_w;
	
	insert into sefip_tomador_movimento(	nr_sequencia,
						dt_atualizacao, 
						nm_usuario, 
						dt_atualizacao_nrec, 
						nm_usuario_nrec, 
						nr_seq_tomador, 
						nr_seq_prestador, 
						vl_remuneracao, 
						vl_remuneracao_13, 
						vl_descontado, 
						vl_base_13_movimento, 
						vl_base_13, 
						cd_cbo_saude, 
						nr_seq_lote, 
						cd_pf_estipulante, 
						cd_cgc_estipulante, 
						pr_imposto)
				values (	nextval('sefip_tomador_movimento_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_tomador_w,
						vet_prest_novo_pgto.nr_seq_prestador,
						vet_prest_novo_pgto.vl_remuneracao,
						0,
						vl_imposto_w,
						0,
						0,
						null,
						nr_seq_lote_p,
						null,
						cd_cgc_outorgante_w,
						vet_prest_novo_pgto.pr_trib_inss);

	if (mod(qt_registros_w,1000) = 0) then
		commit;
	end if;
	
	end;
end loop;
close c_prest_novo_pgto;
	
end if;

select	sum(vl_remuneracao),
	sum(vl_descontado)
into STRICT	vl_remuneracao_w,
	vl_descontado_w
from	sefip_tomador_movimento
where	nr_seq_lote = nr_seq_lote_p;

update	sefip_tomador
set	vl_faturado = coalesce(vl_remuneracao_w,0)
where	nr_sequencia = nr_seq_tomador_w;

update	sefip_lote
set	dt_geracao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_sequencia	= nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_sefip_sa ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

