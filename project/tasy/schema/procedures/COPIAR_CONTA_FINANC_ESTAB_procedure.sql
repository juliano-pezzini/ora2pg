-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE campos AS (	cd_conta_financ_antiga_w	bigint,
			cd_conta_financ_nova_w		bigint);


CREATE OR REPLACE PROCEDURE copiar_conta_financ_estab (cd_estab_origem_p bigint, cd_estab_destino_p bigint, ie_conta_financ_regra_p text, nm_usuario_p text) AS $body$
DECLARE


type vetor is table of campos index by integer;

conta_financeira_w		vetor;
cd_conta_financ_w		bigint;
cd_conta_superior_w		bigint;
cd_conta_superior_nova_w	bigint;
cd_empresa_w			bigint;
i				bigint;
k				bigint;


c01 CURSOR FOR
SELECT	cd_conta_financ
from	conta_financeira
where	cd_estabelecimento	= cd_estab_origem_p;


BEGIN

select	cd_empresa
into STRICT	cd_empresa_w
from	estabelecimento
where	cd_estabelecimento	= cd_estab_destino_p;

/* Carregar vetores com sequencias antigas e referenciar sequencias novas */

i	:= 0;
open c01;
loop
fetch c01 into
	cd_conta_financ_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	conta_financeira_w[i].cd_conta_financ_antiga_w	:= cd_conta_financ_w;

	select	nextval('conta_financeira_seq')
	into STRICT	conta_financeira_w[i].cd_conta_financ_nova_w
	;

	i	:= i + 1;
end loop;
close c01;

/* inserir as novas contas financeiras */

i	:= 0;
for i in 0..conta_financeira_w.count - 1 loop
	insert into conta_financeira(CD_CONTA_FINANC,
		DS_CONTA_FINANC,
		IE_OPER_FLUXO,
		DT_ATUALIZACAO,
		NM_USUARIO,
		CD_CONTA_SUPERIOR,
		CD_CONTA_APRES,
		DS_COR,
		DT_ATUALIZACAO_NREC,
		NM_USUARIO_NREC,
		CD_ESTABELECIMENTO,
		IE_SITUACAO,
		CD_EMPRESA)
	SELECT	conta_financeira_w[i].cd_conta_financ_nova_w,
		DS_CONTA_FINANC,
		IE_OPER_FLUXO,
		clock_timestamp(),
		nm_usuario_p,
		null,
		CD_CONTA_APRES,
		DS_COR,
		clock_timestamp(),
		nm_usuario_p,
		cd_estab_destino_p,
		IE_SITUACAO,
		cd_empresa_w
	from	conta_financeira
	where	cd_conta_financ		= conta_financeira_w[i].cd_conta_financ_antiga_w;

	if (ie_conta_financ_regra_p = 'S') then
		insert into conta_financ_regra(nr_sequencia,
			cd_estabelecimento,
			nr_seq_conta_financ,
			ie_entrada_saida,
			dt_atualizacao,
			nm_usuario,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
      nr_seq_familia,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_setor_atendimento,
			cd_tipo_pessoa,
			cd_cgc,
			cd_material,
			cd_procedimento,
			ie_origem_proced,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ie_clinica,
			cd_operacao_nf,
			ie_faturamento,
			ie_tipo_atendimento,
			nr_seq_proj_rec,
			ie_tipo_convenio,
			nr_seq_produto,
			ie_nota_credito,
			cd_pessoa_fisica,
			ie_tipo_pessoa,
            cd_moeda,
            nr_seq_grupo,
            nr_seq_subgrupo,
            nr_seq_forma_org,
            ie_tipo_financiamento,
            ie_complexidade,
            ie_origem_tit_rec,
            ie_origem_tit_pagar,
            nr_seq_classe_tr,
            nr_seq_trans_fin,
            ie_tipo_titulo_pagar,
            ie_tipo_titulo_receber,
			ds_observacao)
		SELECT	nextval('conta_financ_regra_seq'),
			cd_estab_destino_p,
			conta_financeira_w[i].cd_conta_financ_nova_w,
			ie_entrada_saida,
			clock_timestamp(),
			nm_usuario_p,
			cd_grupo_material,
			cd_subgrupo_material,
			cd_classe_material,
      nr_seq_familia,
			cd_area_procedimento,
			cd_especialidade,
			cd_grupo_proc,
			cd_setor_atendimento,
			cd_tipo_pessoa,
			cd_cgc,
			cd_material,
			cd_procedimento,
			ie_origem_proced,
			clock_timestamp(),
			nm_usuario_p,
			ie_clinica,
			cd_operacao_nf,
			ie_faturamento,
			ie_tipo_atendimento,
			nr_seq_proj_rec,
			ie_tipo_convenio,
			nr_seq_produto,
			ie_nota_credito,
			cd_pessoa_fisica,
			ie_tipo_pessoa,
            cd_moeda,
            nr_seq_grupo,
            nr_seq_subgrupo,
            nr_seq_forma_org,
            ie_tipo_financiamento,
            ie_complexidade,
            ie_origem_tit_rec,
            ie_origem_tit_pagar,
            nr_seq_classe_tr,
            (SELECT max(nr_sequencia) from transacao_financeira where nr_seq_trans_fin_ref = a.nr_seq_trans_fin and cd_estabelecimento = cd_estab_destino_p) nr_seq_trans_fin,
            ie_tipo_titulo_pagar,
            ie_tipo_titulo_receber,
			ds_observacao
		from	conta_financ_regra a
		where	a.nr_seq_conta_financ = conta_financeira_w[i].cd_conta_financ_antiga_w;
	end if;
end loop;

/* atualizar conta superior das contas novas */

i	:= 0;
for i in 0..conta_financeira_w.count - 1 loop

	select	cd_conta_superior
	into STRICT	cd_conta_superior_w
	from	conta_financeira
	where	cd_conta_financ		= conta_financeira_w[i].cd_conta_financ_antiga_w;

	/* localizar conta superior nova */

	cd_conta_superior_nova_w			:= null;
	for k in 0..conta_financeira_w.count - 1 loop
		if (conta_financeira_w[k].cd_conta_financ_antiga_w = cd_conta_superior_w) then
			cd_conta_superior_nova_w	:= conta_financeira_w[k].cd_conta_financ_nova_w;
		end if;
	end loop;

	update	conta_financeira
	set	cd_conta_superior	= cd_conta_superior_nova_w
	where	cd_conta_financ		= conta_financeira_w[i].cd_conta_financ_nova_w;

end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_conta_financ_estab (cd_estab_origem_p bigint, cd_estab_destino_p bigint, ie_conta_financ_regra_p text, nm_usuario_p text) FROM PUBLIC;

