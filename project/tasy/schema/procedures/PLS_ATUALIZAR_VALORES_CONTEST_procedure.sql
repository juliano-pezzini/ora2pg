-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_valores_contest ( nr_seq_lote_contestacao_p pls_lote_contestacao.nr_sequencia%type, ie_commit_p text) AS $body$
DECLARE


vl_original_proc_w		pls_contestacao_proc.vl_contestado%type;
vl_original_mat_w		pls_contestacao_mat.vl_contestado%type;
vl_conta_w			pls_conta.vl_cobrado%type;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
vl_recurso_w			pls_discussao_proc.vl_recurso%type;
vl_atual_disc_proc_w		pls_discussao_proc.vl_contestado%type;
vl_atual_disc_mat_w		pls_discussao_mat.vl_contestado%type;
vl_ndc_proc_w			pls_discussao_proc.vl_ndc%type;
vl_ndc_mat_w			pls_discussao_mat.vl_ndc%type;
nr_seq_discussao_w		pls_contestacao_discussao.nr_sequencia%type;
nr_seq_conta_proc_w		pls_conta_proc.nr_sequencia%type;
nr_seq_conta_mat_w		pls_conta_mat.nr_sequencia%type;
nr_sequencia_w			pls_contestacao_proc.nr_sequencia%type;
qt_recurso_w			pls_discussao_proc.qt_recurso%type;
vl_aceito_w			pls_discussao_proc.vl_aceito%type;
qt_aceita_w			pls_discussao_proc.qt_aceita%type;
vl_original_contest_w		pls_contestacao_proc.vl_contestado%type	:=0;
vl_atual_contest_w		pls_discussao_proc.vl_contestado%type	:=0;
vl_aceito_mat_w			pls_discussao_mat.vl_aceito%type	:=0;
vl_aceito_proc_w		pls_discussao_proc.vl_aceito%type 	:=0;
vl_aceito_itens_w		pls_discussao_proc.vl_aceito%type 	:=0;
vl_original_lote_w		pls_contestacao.vl_original%type 	:=0;
vl_atual_lote_w			pls_contestacao.vl_atual%type 		:=0;
vl_ndc_w			pls_discussao_proc.vl_ndc%type 		:=0;
qt_ndc_w			pls_discussao_proc.qt_ndc%type 		:=0;
qt_contestada_w			pls_discussao_proc.qt_contestada%type;
vl_contestado_w			pls_discussao_proc.vl_contestado%type;
nr_seq_contest_w		pls_contestacao.nr_sequencia%type;
nr_seq_ptu_fatura_w		ptu_fatura.nr_sequencia%type;
nr_seq_pls_fatura_w		pls_fatura.nr_sequencia%type;
nr_seq_fatura_conta_w		pls_contestacao.nr_seq_fatura_conta%type;
qt_registro_w			integer;
qt_contest_w			integer;
ie_tipo_arquivo_w		pls_lote_discussao.ie_tipo_arquivo%type;

vl_atual_w			pls_contestacao.vl_atual%type 		:=0;
qt_atual_w			integer;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta_proc,
		null
	from	pls_contestacao_proc a
	where	a.nr_seq_contestacao	= nr_seq_contest_w
	
union all

	SELECT	a.nr_sequencia,
		null,
		a.nr_seq_conta_mat
	from	pls_contestacao_mat a
	where	a.nr_seq_contestacao	= nr_seq_contest_w;
	
C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_contestacao a
	where	a.nr_seq_lote	= nr_seq_lote_contestacao_p;


BEGIN
select	max(nr_seq_ptu_fatura),
	max(nr_seq_pls_fatura)
into STRICT	nr_seq_ptu_fatura_w,
	nr_seq_pls_fatura_w
from	pls_lote_contestacao
where	nr_sequencia = nr_seq_lote_contestacao_p;

select	count(1)
into STRICT	qt_registro_w
from	ptu_camara_contestacao
where	nr_seq_lote_contest = nr_seq_lote_contestacao_p;

open C02;
loop
fetch C02 into	
	nr_seq_contest_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	select	a.nr_seq_conta,
		coalesce(b.vl_cobrado,0),
		a.nr_seq_fatura_conta
	into STRICT	nr_seq_conta_w,
		vl_conta_w,
		nr_seq_fatura_conta_w
	from	pls_conta b,
		pls_contestacao a
	where	a.nr_seq_conta	= b.nr_sequencia
	and	a.nr_sequencia	= nr_seq_contest_w;
	
	if (nr_seq_pls_fatura_w IS NOT NULL AND nr_seq_pls_fatura_w::text <> '') and (nr_seq_fatura_conta_w IS NOT NULL AND nr_seq_fatura_conta_w::text <> '') then
		select	sum(coalesce(vl_faturado,0)) + sum(coalesce(vl_faturado_ndc,0))
		into STRICT	vl_conta_w
		from	pls_fatura_conta
		where	nr_sequencia = nr_seq_fatura_conta_w;
	end if;

	select	coalesce(sum(a.vl_contestado),0)
	into STRICT	vl_original_proc_w
	from	pls_contestacao_proc	a
	where	a.nr_seq_contestacao	= nr_seq_contest_w;

	select	coalesce(sum(a.vl_contestado),0)
	into STRICT	vl_original_mat_w
	from	pls_contestacao_mat	a
	where	a.nr_seq_contestacao	= nr_seq_contest_w;
	
	/* Obter última discussão */

	select	max(a.nr_sequencia),
		max(b.ie_tipo_arquivo)
	into STRICT	nr_seq_discussao_w,
		ie_tipo_arquivo_w
	from	pls_contestacao_discussao a,
		pls_lote_discussao b
	where	b.nr_sequencia		= a.nr_seq_lote
	and	b.nr_seq_lote_contest	= nr_seq_lote_contestacao_p
	and	a.nr_seq_contestacao	= nr_seq_contest_w
	and	b.ie_status		<> 'C'
	and	b.dt_referencia		= 	(SELECT	max(x.dt_referencia)
						from	pls_lote_discussao x
						where	x.nr_seq_lote_contest	= b.nr_seq_lote_contest
						and	x.ie_status		<> 'C');
						
	if (nr_seq_discussao_w IS NOT NULL AND nr_seq_discussao_w::text <> '') then
		vl_atual_disc_proc_w	:= 0;
		vl_atual_disc_mat_w	:= 0;
		vl_ndc_proc_w		:= 0;
		vl_ndc_mat_w		:= 0;
		open c01;
		loop
		fetch c01 into	
			nr_sequencia_w,
			nr_seq_conta_proc_w,
			nr_seq_conta_mat_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				select	count(1),
					coalesce(max(c.vl_recurso),0),
					coalesce(max(c.qt_recurso),0),
					coalesce(max(c.vl_aceito),0),
					coalesce(max(c.qt_aceita),0),
					coalesce(max(c.vl_ndc),0),
					coalesce(max(c.qt_ndc),0),
					coalesce(max(c.vl_contestado),0),
					coalesce(max(c.qt_contestada),0)
				into STRICT	qt_contest_w,
					vl_recurso_w,
					qt_recurso_w,
					vl_aceito_w,
					qt_aceita_w,
					vl_ndc_w,
					qt_ndc_w,
					vl_contestado_w,
					qt_contestada_w
				from	pls_discussao_proc		c,
					pls_contestacao_discussao	b,
					pls_lote_discussao		a
				where	a.nr_sequencia			= b.nr_seq_lote
				and	b.nr_sequencia			= c.nr_seq_discussao
				and	c.nr_seq_contestacao_proc 	= nr_sequencia_w
				and	a.ie_status			<> 'C';

				if (qt_contest_w = 0) then
					select	coalesce(max(c.vl_recurso),0),
						coalesce(max(c.qt_recurso),0),
						coalesce(max(c.vl_aceito),0),
						coalesce(max(c.qt_aceita),0),
						coalesce(max(c.vl_ndc),0),
						coalesce(max(c.qt_ndc),0),
						coalesce(max(c.vl_contestado),0),
						coalesce(max(c.qt_contestada),0)
					into STRICT	vl_recurso_w,
						qt_recurso_w,
						vl_aceito_w,
						qt_aceita_w,
						vl_ndc_w,
						qt_ndc_w,
						vl_contestado_w,
						qt_contestada_w
					from	pls_discussao_proc		c,
						pls_contestacao_discussao	b,
						pls_lote_discussao		a
					where	a.nr_sequencia			= b.nr_seq_lote
					and	b.nr_sequencia			= c.nr_seq_discussao
					and	c.nr_seq_conta_proc		= nr_seq_conta_proc_w
					and	a.ie_status			<> 'C';
				end if;
				
				if (qt_registro_w = 0) then -- Processo manual
					qt_ndc_w := qt_aceita_w;
					vl_ndc_w := vl_aceito_w;
				end if;
				
				-- tratar caso o valor e a quantidade atual fiquem negativo
				qt_atual_w	:= (qt_contestada_w - qt_ndc_w);
				vl_atual_w 	:= (vl_contestado_w - vl_ndc_w);
				
				if (vl_atual_w < 0) then
					vl_atual_w	:= 0;
				end if;
				
				if (qt_atual_w < 0) then
					qt_atual_w	:= 0;
				end if;

				update	pls_contestacao_proc
				set	qt_atual	= qt_atual_w,
					vl_atual	= vl_atual_w
				where	nr_sequencia	= nr_sequencia_w;
				
				vl_aceito_proc_w	:= vl_aceito_proc_w + vl_aceito_w;
				
				if	((vl_contestado_w - vl_ndc_w) < 0) then
					vl_contestado_w	:= 0;
					vl_ndc_w	:= 0;
				end if;
			
				vl_atual_disc_proc_w	:= vl_atual_disc_proc_w + ( vl_contestado_w - vl_ndc_w );
				vl_ndc_proc_w		:= vl_ndc_proc_w + vl_ndc_w;
				
			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				select	count(1),
					coalesce(max(c.vl_recurso),0),
					coalesce(max(c.qt_recurso),0),
					coalesce(max(c.vl_aceito),0),
					coalesce(max(c.qt_aceita),0),
					coalesce(max(c.vl_ndc),0),
					coalesce(max(c.qt_ndc),0),
					coalesce(max(c.vl_contestado),0),
					coalesce(max(c.qt_contestada),0)
				into STRICT	qt_contest_w,
					vl_recurso_w,
					qt_recurso_w,
					vl_aceito_w,
					qt_aceita_w,
					vl_ndc_w,
					qt_ndc_w,
					vl_contestado_w,
					qt_contestada_w
				from	pls_discussao_mat		c,
					pls_contestacao_discussao	b,
					pls_lote_discussao		a
				where	a.nr_sequencia			= b.nr_seq_lote
				and	b.nr_sequencia			= c.nr_seq_discussao
				and	c.nr_seq_contestacao_mat	= nr_sequencia_w
				and	a.ie_status			<> 'C';
			
				if (qt_contest_w = 0) then
					select	coalesce(max(c.vl_recurso),0),
						coalesce(max(c.qt_recurso),0),
						coalesce(max(c.vl_aceito),0),
						coalesce(max(c.qt_aceita),0),
						coalesce(max(c.vl_ndc),0),
						coalesce(max(c.qt_ndc),0),
						coalesce(max(c.vl_contestado),0),
						coalesce(max(c.qt_contestada),0)
					into STRICT	vl_recurso_w,
						qt_recurso_w,
						vl_aceito_w,
						qt_aceita_w,
						vl_ndc_w,
						qt_ndc_w,
						vl_contestado_w,
						qt_contestada_w
					from	pls_discussao_mat		c,
						pls_contestacao_discussao	b,
						pls_lote_discussao		a
					where	a.nr_sequencia			= b.nr_seq_lote
					and	b.nr_sequencia			= c.nr_seq_discussao
					and	nr_seq_conta_mat		= nr_seq_conta_mat_w
					and	a.ie_status			<> 'C';
					
				end if;
				
				if (qt_registro_w = 0) then -- Processo manual
					qt_ndc_w := qt_aceita_w;
					vl_ndc_w := vl_aceito_w;
				end if;
				
				-- tratar caso o valor e a quantidade atual fiquem negativo
				qt_atual_w	:= (qt_contestada_w - qt_ndc_w);
				vl_atual_w 	:= (vl_contestado_w - vl_ndc_w);
				
				if (vl_atual_w < 0) then
					vl_atual_w	:= 0;
				end if;
				
				if (qt_atual_w < 0) then
					qt_atual_w	:= 0;
				end if;

				update	pls_contestacao_mat
				set	qt_atual	= qt_atual_w,
					vl_atual	= vl_atual_w
				where	nr_sequencia	= nr_sequencia_w;
				
				
				vl_aceito_mat_w	:= vl_aceito_mat_w + vl_aceito_w;
				
				if	((vl_contestado_w - vl_ndc_w) < 0) then
					vl_contestado_w	:= 0;
					vl_ndc_w	:= 0;
				end if;
			
				vl_atual_disc_mat_w	:= vl_atual_disc_mat_w + (vl_contestado_w - vl_ndc_w);
				vl_ndc_mat_w		:= vl_ndc_mat_w + vl_ndc_w;
			end if;
			end;
		end loop;
		close c01;		
	else
		open c01;
		loop
		fetch c01 into	
			nr_sequencia_w,
			nr_seq_conta_proc_w,
			nr_seq_conta_mat_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				select	max(a.qt_contestada),
					max(a.vl_contestado)
				into STRICT	qt_contestada_w,
					vl_contestado_w
				from	pls_contestacao_proc	a
				where	a.nr_sequencia = nr_sequencia_w;
				
				update	pls_contestacao_proc
				set	qt_atual	= qt_contestada_w,
					vl_atual	= vl_contestado_w
				where	nr_sequencia	= nr_sequencia_w;
			
			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				select	max(a.qt_contestada),
					max(a.vl_contestado)
				into STRICT	qt_contestada_w,
					vl_contestado_w
				from	pls_contestacao_mat	a
				where	nr_sequencia = nr_sequencia_w;
				

				
				update	pls_contestacao_mat
				set	qt_atual	= qt_contestada_w,
					vl_atual	= vl_contestado_w
				where	nr_sequencia	= nr_sequencia_w;
			end if;
			end;
		end loop;
		close c01;			
	
		vl_atual_disc_proc_w	:= 0;
		vl_atual_disc_mat_w	:= 0;
		vl_ndc_proc_w		:= 0;
		vl_ndc_mat_w		:= 0;
	end if;
	
	vl_aceito_itens_w	:= vl_aceito_proc_w + vl_aceito_mat_w;
	vl_original_contest_w	:= vl_original_proc_w + vl_original_mat_w;
	vl_atual_contest_w	:= vl_atual_disc_proc_w + vl_atual_disc_mat_w;
	
	if (vl_atual_contest_w = 0) and (vl_aceito_itens_w = 0) and
		((vl_ndc_proc_w + vl_ndc_mat_w) = 0) then -- Se não houver atualização para o saldo(atual), manten o valor contestado(original)
		vl_atual_contest_w := vl_original_contest_w;
	end if;
	
	update	pls_contestacao
	set	vl_conta	= vl_conta_w,
		vl_original	= vl_original_contest_w,
		vl_atual	= vl_atual_contest_w
	where	nr_sequencia	= nr_seq_contest_w;
	end;
end loop;
close C02;

if (nr_seq_lote_contestacao_p IS NOT NULL AND nr_seq_lote_contestacao_p::text <> '') then	
	select	coalesce(sum(vl_original),0),
		coalesce(sum(vl_atual),0)
	into STRICT	vl_original_lote_w,
		vl_atual_lote_w
	from	pls_contestacao
	where	nr_seq_lote = nr_seq_lote_contestacao_p;
	
	update	pls_lote_contestacao
	set	vl_contestado	= vl_original_lote_w,
		vl_atual	= vl_atual_lote_w
	where	nr_sequencia	= nr_seq_lote_contestacao_p;
	
	CALL pls_ajustar_vl_fat_ndc_contest( nr_seq_ptu_fatura_w, nr_seq_lote_contestacao_p, 'N');
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_valores_contest ( nr_seq_lote_contestacao_p pls_lote_contestacao.nr_sequencia%type, ie_commit_p text) FROM PUBLIC;

