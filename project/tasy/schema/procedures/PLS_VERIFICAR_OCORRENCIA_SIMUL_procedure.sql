-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verificar_ocorrencia_simul ( nr_seq_simultaneo_p bigint, nr_seq_conta_p bigint, nr_seq_guia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_mat_p bigint, ie_tipo_item_p bigint, ie_gera_ocorrencia_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint) AS $body$
DECLARE


ie_item_exclusivo_w		varchar(1);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
qt_dias_w			bigint;
nr_seq_material_w		bigint;
ie_tipo_desp_proc_w		varchar(1);
ie_tipo_desp_mat_w		varchar(1);
ie_ocorrencia_w			varchar(1);
dt_proc_mat_w			timestamp;
dt_item_w			timestamp;
qt_proc_w			bigint;

qt_proc_conta_regra_w		bigint;
qt_mat_conta_regra_w		bigint;
qt_proc_conta_regra_desp_w	bigint;
qt_mat_conta_regra_desp_w	bigint;
nr_seq_ocor_simul_w		bigint;

ie_gera_ocorrencia_w		varchar(1) := 'S';

qt_reg_conta_w			bigint;
qt_reg_proc_w			bigint;
qt_reg_mat_w			bigint;

qt_coincide_regra_w		bigint;

ie_tipo_despesa_proc_w		varchar(1);
ie_existe_estrutura_w		varchar(1);
ie_tipo_despesa_mat_w		varchar(2);
nr_seq_estrutura_w		bigint;

nr_seq_conta_proc_w		bigint;
cd_procedimento_ww		bigint;
ie_origem_proced_ww		bigint;
nr_seq_material_ww		bigint;
nr_seq_estrutura_ww		bigint;
nr_seq_conta_mat_ww		bigint;
cd_guia_referencia_w		varchar(20);
nr_seq_segurado_w		bigint;
nr_seq_grupo_rec_w		bigint;
nr_seq_grupo_rec_regra_w	bigint;
qt_proc_conta_regra_ref_w	bigint;
qt_proc_conta_regra_guia_w	bigint;

C01 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.qt_dias,
		a.nr_seq_material,
		a.ie_tipo_desp_proc,
		a.ie_tipo_desp_mat,
		a.ie_ocorrencia,
		a.nr_seq_estrutura,
		a.nr_seq_grupo_rec
	from	pls_ocorrencia_simul_item a
	where	a.nr_seq_regra = nr_seq_simultaneo_p
	order by 1;

C02 CURSOR FOR
	SELECT	a.nr_seq_estrutura
	from	pls_ocorrencia_simul_item a
	where	a.nr_seq_regra = nr_seq_simultaneo_p
	and	a.nr_seq_estrutura <> nr_seq_estrutura_w;

C03 CURSOR FOR
	SELECT	a.dt_procedimento,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.nr_sequencia,
		null,
		null
	from	pls_conta_proc	a,
		pls_conta	b
	where	b.nr_sequencia	=  a.nr_seq_conta
	and	((b.cd_guia_ok   = cd_guia_referencia_w)
	or (nr_seq_conta 	= nr_seq_conta_p))
	
union

	SELECT 	a.dt_atendimento,
		null,
		null,
		null,
		a.nr_seq_material,
		a.nr_sequencia
	from 	pls_conta_mat	a,
		pls_conta	b
	where	b.nr_sequencia	=  a.nr_seq_conta
	and	((b.cd_guia_ok   = cd_guia_referencia_w)
	or (nr_seq_conta 	= nr_seq_conta_p));

BEGIN

/*
ie_tipo_item_w
3 - Procedimento da conta
4 - Material da conta
8 - Contas Médica
*/
/*
  *Definição: Simultâneo é uma estrutura que gera ocorrência se todos os procedimentos da estrutura for encontrado na conta médica.
  *Esta definição foi revista com o Sr° Felipe Ambrósio para que se mantenha uma igualdade entre a definição de simultâneo entre os clientes.
  *
  *Diogo Reforçando o conceito junto ao Sr. Adriano Geyer, a ocorrência de simultâneo deve ser gerada sempre que todas as situações da regra existirem na conta
  *respeitando as diferenciações geradas oara os casos de estrutura
  *Diego   OPS - OS 282118 - Criado dentro da estrutura de simultâneo os campos tipo despesa de procedimento e tipo de despesa material.
  * A definição da regra com estes campo segue a lógica normal do simultâneo sendo que numa regra onde existe os procedimentos
  * 10101012, 10014 e o tipo de despesa de material OPM, é necessário haver os dois procedimentosa da regra e no minimo mais um material do
  * tipo OPM para gerar ocorrência.
  */
/*  IE_ITEM_EXCLUSIVO -> Informar se o sistema deve aplicar a regra de simultâneo, se existir "somente" os itens (procedimentos e materiais) informados na regra.
Por exemplo: Na regra do simultâneo foi informado os códigos 10101039 e 73000027 e 79700012, então se na conta existir outros códigos além desses, então a regra não é válida. */
select 	cd_guia_ok,
	nr_seq_segurado
into STRICT	cd_guia_referencia_w,
	nr_seq_segurado_w
from 	pls_conta
where	nr_sequencia = nr_seq_conta_p;

if (coalesce(nr_seq_conta_proc_p,0) <> 0)	then

	select	max(trunc(dt_procedimento))
	into STRICT	dt_proc_mat_w
	from 	pls_conta_proc
	where	nr_sequencia 		= nr_seq_conta_proc_p;
end if;

if (coalesce(nr_seq_conta_mat_p,0) <> 0)	then
	select 	max(trunc(dt_atendimento))
	into STRICT	dt_proc_mat_w
	from 	pls_conta_mat
	where	nr_sequencia = nr_seq_conta_mat_p;
end if;

if (ie_tipo_item_p in (3,4,8)) then
	for r_c01_w in C01() loop
		begin
		cd_procedimento_w	:= r_c01_w.cd_procedimento;
		ie_origem_proced_w	:= r_c01_w.ie_origem_proced;
		qt_dias_w		:= r_c01_w.qt_dias;
		nr_seq_material_w	:= r_c01_w.nr_seq_material;
		ie_tipo_desp_proc_w	:= r_c01_w.ie_tipo_desp_proc;
		ie_tipo_desp_mat_w	:= r_c01_w.ie_tipo_desp_mat;
		ie_ocorrencia_w		:= r_c01_w.ie_ocorrencia;
		nr_seq_estrutura_w	:= r_c01_w.nr_seq_estrutura;
		nr_seq_grupo_rec_regra_w := r_c01_w.nr_seq_grupo_rec;

		if (coalesce(cd_procedimento_w,0) > 0) then
			select	count(1)
			into STRICT	qt_proc_conta_regra_ref_w
			from	pls_conta_proc a,
				pls_conta b
			where	a.nr_seq_conta			= b.nr_sequencia
			and	b.cd_guia_referencia		= cd_guia_referencia_w
			and	b.nr_seq_segurado		= nr_seq_segurado_w
			and	a.cd_procedimento		= cd_procedimento_w
			and	a.ie_origem_proced 		= ie_origem_proced_w
			and	trunc(a.dt_procedimento)	= dt_proc_mat_w;

			select	count(1)
			into STRICT	qt_proc_conta_regra_guia_w
			from	pls_conta_proc a,
				pls_conta b
			where	a.nr_seq_conta			= b.nr_sequencia
			and	b.cd_guia			= cd_guia_referencia_w
			and	b.nr_seq_segurado		= nr_seq_segurado_w
			and	a.cd_procedimento		= cd_procedimento_w
			and	a.ie_origem_proced 		= ie_origem_proced_w
			and	trunc(a.dt_procedimento)	= dt_proc_mat_w;

			qt_proc_conta_regra_w	:= qt_proc_conta_regra_ref_w + qt_proc_conta_regra_guia_w;

			/*O procedimento não existe na conta*/

			if (qt_proc_conta_regra_w = 0) then
				ie_gera_ocorrencia_w 	:= 'N';
			end if;

			/*Regras que possuem Qt_dias cadastrados.
			    Nestas regras é verificado se este procedimento já havia sido informado com a dt_procedimento entre a data de procedimento que se esta consistindo
			    e a qt_dias antes desta.*/
			if (qt_dias_w > 0) then
				select	count(a.nr_sequencia)
				into STRICT	qt_coincide_regra_w
				from	pls_conta_proc	a,
					pls_conta	b
				where	a.nr_seq_conta		= b.nr_sequencia
				and	cd_guia_ok 		= cd_guia_referencia_w
				and	b.nr_seq_segurado	= nr_seq_segurado_w
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w
				and	exists (SELECT	x.nr_sequencia
						 from	pls_conta_proc	x,
							pls_conta	y
						 where	x.nr_seq_conta 		= y.nr_sequencia
						 and	x.nr_sequencia		<> a.nr_sequencia
						 and	y.nr_seq_segurado	= b.nr_seq_segurado
						 and	x.cd_procedimento	= a.cd_procedimento
						 and	x.ie_origem_proced	= a.ie_origem_proced
						 and	trunc(coalesce(x.dt_procedimento, y.dt_emissao)) between trunc(coalesce(a.dt_procedimento, b.dt_emissao) - qt_dias_w) and trunc(coalesce(a.dt_procedimento, b.dt_emissao)));

				if (qt_coincide_regra_w	= 0) then
					ie_gera_ocorrencia_w := 'N';
				end if;
			end if;

		elsif (coalesce(nr_seq_material_w,0) > 0) then
			select	count(1)
			into STRICT	qt_mat_conta_regra_w
			from	pls_conta_mat a,
				pls_conta b
			where	a.nr_seq_conta			= b.nr_sequencia
			and	b.cd_guia_ok 			= cd_guia_referencia_w
			and	b.nr_seq_segurado		= nr_seq_segurado_w
			and	a.nr_seq_material		= nr_seq_material_w
			and	trunc(a.dt_atendimento)		= dt_proc_mat_w;

			/*O material não existe na conta*/

			if (qt_mat_conta_regra_w = 0) then
				ie_gera_ocorrencia_w 	:= 'N';
			end if;

		elsif (coalesce(ie_tipo_desp_proc_w,'X') <> 'X') then
			select	count(1)
			into STRICT	qt_proc_conta_regra_desp_w
			from	pls_conta_proc a,
				pls_conta b
			where	a.nr_seq_conta			= b.nr_sequencia
			and	b.cd_guia_ok 			= cd_guia_referencia_w
			and	b.nr_seq_segurado		= nr_seq_segurado_w
			and	a.ie_tipo_despesa		= ie_tipo_desp_proc_w
			and	trunc(a.dt_procedimento)	= dt_proc_mat_w;

			/*O tipo de despesa não existe na conta*/

			if (qt_proc_conta_regra_desp_w = 0) then
				ie_gera_ocorrencia_w 	:= 'N';
			end if;
		elsif (coalesce(ie_tipo_desp_mat_w,'X') <> 'X') then
			select 	count(1)
			into STRICT	qt_mat_conta_regra_desp_w
			from 	pls_conta_mat	a,
				pls_conta b
			where	a.nr_seq_conta		= b.nr_sequencia
			and	b.cd_guia_ok 			= cd_guia_referencia_w
			and	b.nr_seq_segurado	= nr_seq_segurado_w
			and 	a.ie_tipo_despesa	= ie_tipo_desp_mat_w
			and	trunc(a.dt_atendimento)	= dt_proc_mat_w;

			/*O material não existe na conta*/

			if (qt_mat_conta_regra_desp_w = 0) then
				ie_gera_ocorrencia_w 	:= 'N';
			end if;
		elsif (coalesce(nr_seq_grupo_rec_regra_w,0) <> 0)  then

			 begin
			 select  nr_seq_grupo_rec
			 into STRICT    nr_seq_grupo_rec_w
			 from    procedimento
			 where   cd_procedimento         = cd_procedimento_p
			 and     ie_origem_proced        = ie_origem_proced_p  LIMIT 1;
			 exception
			 when others then

			nr_seq_grupo_rec_w      := 0;
			 end;

			if (nr_seq_grupo_rec_regra_w = nr_seq_grupo_rec_w) then
				ie_gera_ocorrencia_w    := 'N';
			end if;
		 end if;

		if (nr_seq_estrutura_w IS NOT NULL AND nr_seq_estrutura_w::text <> '')	then
			ie_existe_estrutura_w	:= pls_obter_se_estrutura( cd_procedimento_p, ie_origem_proced_p, nr_seq_mat_p, nr_seq_estrutura_w);
			if (coalesce(ie_existe_estrutura_w,'X')	= 'S')	then
				ie_gera_ocorrencia_w	:= 'S';
			else
				ie_gera_ocorrencia_w	:= 'N';
			end if;
		end if;

		/* ***************************************************************************************** */

		if (coalesce(ie_gera_ocorrencia_w,'N') = 'S')	then
			open C02;
			loop
			fetch C02 into
				nr_seq_estrutura_ww;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				open c03;
				loop
				fetch C03 into
					dt_item_w,
					cd_procedimento_ww,
					ie_origem_proced_ww,
					nr_seq_conta_proc_w,
					nr_seq_material_ww,
					nr_seq_conta_mat_ww;
				EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				dt_item_w	:= trunc(coalesce(dt_item_w,clock_timestamp()));
				dt_proc_mat_w	:= trunc(coalesce(dt_proc_mat_w,clock_timestamp()));

				ie_existe_estrutura_w	:= pls_obter_se_estrutura(cd_procedimento_ww, ie_origem_proced_ww, nr_seq_material_ww, nr_seq_estrutura_ww);


				if (ie_existe_estrutura_w 	=  'S')			and (dt_item_w 		=  dt_proc_mat_w)	then
					ie_gera_ocorrencia_w	:= 'S';
					goto final;
				else
					ie_gera_ocorrencia_w	:= 'N';
				end if;

				end;
				end loop;
				close C03;
				end;
			end loop;
			close C02;
		elsif (coalesce(ie_gera_ocorrencia_w,'N') = 'N') and (coalesce(nr_seq_estrutura_w::text, '') = '') then
			goto final;
		end if;

		end;
	end loop;

	<<final>>

	if (coalesce(cd_procedimento_p,0) > 0) then
		select 	substr(coalesce(max(ie_classificacao),'1'),1,1)
		into STRICT	ie_tipo_despesa_proc_w
		from	procedimento
		where	cd_procedimento		= cd_procedimento_p
		and	ie_origem_proced	= ie_origem_proced_p;

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_ocor_simul_w
		from	pls_ocorrencia_simul_item a
		where	a.nr_seq_regra 	= nr_seq_simultaneo_p
		and	a.ie_ocorrencia	= 'S'
		and	((cd_procedimento		= cd_procedimento_p and	ie_origem_proced = ie_origem_proced_p)
		or (ie_tipo_desp_proc		= ie_tipo_despesa_proc_w)
		or (nr_seq_estrutura		= nr_seq_estrutura_w));

		if (coalesce(nr_seq_ocor_simul_w,0) = 0) then
			ie_gera_ocorrencia_w := 'N';
			goto final2;
		end if;

	elsif (coalesce(nr_seq_mat_p,0) > 0) then
		select 	coalesce(max(ie_tipo_despesa),0)
		into STRICT	ie_tipo_despesa_mat_w
		from	pls_material
		where	nr_sequencia = nr_seq_mat_p;

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_ocor_simul_w
		from	pls_ocorrencia_simul_item a
		where	a.nr_seq_regra 	= nr_seq_simultaneo_p
		and	a.ie_ocorrencia = 'S'
		and	((nr_seq_material	= nr_seq_mat_p)
		or (ie_tipo_desp_mat	= ie_tipo_despesa_mat_w)
		or (nr_seq_estrutura 	= nr_seq_estrutura_w));

		if (coalesce(nr_seq_ocor_simul_w,0) = 0) then
			ie_gera_ocorrencia_w := 'N';
			goto final2;
		end if;
	end if;

	select	max(ie_item_exclusivo)
	into STRICT	ie_item_exclusivo_w
	from	pls_ocorrencia_simultaneo
	where	nr_sequencia	= nr_seq_simultaneo_p;

	if (ie_item_exclusivo_w = 'S') then
		select	count(1)
		into STRICT	qt_reg_proc_w
		from	pls_conta_proc x
		where	x.nr_seq_conta	= nr_seq_conta_p
		and	not exists (	SELECT	1
					from	pls_ocorrencia_simul_item a
					where	a.nr_seq_regra = nr_seq_simultaneo_p
					and	a.ie_situacao	= 'A'
					and	a.cd_procedimento = x.cd_procedimento
					);

		select	count(1)
		into STRICT	qt_reg_mat_w
		from	pls_conta_mat x
		where	x.nr_seq_conta	= nr_seq_conta_p
		and	not exists (	SELECT	1
					from	pls_ocorrencia_simul_item a
					where	a.nr_seq_regra = nr_seq_simultaneo_p
					and	a.ie_situacao	= 'A'
					and	a.nr_seq_material = x.nr_seq_material
					);

		qt_reg_conta_w	:= qt_reg_proc_w + qt_reg_mat_w;

		if (qt_reg_conta_w	> 0) then
			ie_gera_ocorrencia_w	:= 'N';
			goto final2;
		end if;

	end if;
end if;
<<final2>>

ie_gera_ocorrencia_p := ie_gera_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verificar_ocorrencia_simul ( nr_seq_simultaneo_p bigint, nr_seq_conta_p bigint, nr_seq_guia_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_mat_p bigint, ie_tipo_item_p bigint, ie_gera_ocorrencia_p INOUT text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint) FROM PUBLIC;

