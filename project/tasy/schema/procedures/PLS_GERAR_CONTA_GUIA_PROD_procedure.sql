-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_conta_guia_prod ( nr_seq_protocolo_p bigint, nr_seq_guia_p bigint, nr_seq_prestador_atend_p bigint, nm_usuario_p text, ie_imp_med_exec_solic_p text, nr_seq_prestador_p bigint, cd_medico_exec_p bigint, nr_seq_conta_gerada_p INOUT bigint, cd_guia_prestador_p INOUT text) AS $body$
DECLARE


cd_guia_w			varchar(20);
dt_autorizacao_w		timestamp;
cd_senha_w			varchar(20);
dt_validade_senha_w		timestamp;
nr_seq_segurado_w		bigint;
cd_medico_solicitante_w		varchar(10);
ie_tipo_guia_w			varchar(2);
--dt_emissao_w			date;
ie_carater_internacao_w		varchar(1);
nr_seq_prestador_w		bigint;
ie_status_w			varchar(2);
cd_guia_principal_w		varchar(20);
cd_estabelecimento_w		smallint;
nr_seq_conta_w			bigint;
nr_crm_exec_w			varchar(20);
nr_seq_cbo_saude_w		bigint;
uf_crm_exec_w			varchar(2);
nr_conselho_exec_w		varchar(20);
nr_seq_tipo_atendimento_w	bigint;
nr_seq_clinica_w		bigint;
ie_regime_internacao_w		varchar(1);
nr_seq_tipo_acomodacao_w	bigint;
nr_seq_prestador_atend_w	bigint;
ie_origem_conta_w		varchar(1);
ie_tipo_consulta_w		smallint;
ie_imp_med_exec_solic_w		varchar(2);
cd_medico_exec_w		bigint;
cd_cooperativa_w		varchar(10);
ie_recem_nascido_w		varchar(1);
nm_recem_nascido_w		varchar(60);
dt_nasc_recem_nascido_w		timestamp;
ie_tipo_saida_w			varchar(1);
nr_seq_saida_consulta_w		bigint;
ds_indicacao_clinica_w		varchar(500);
ie_indicacao_acidente_w		varchar(1);
cd_especialidade_w		bigint;
cd_doenca_w			varchar(10);
ie_tipo_guia_ww			smallint;
nr_seq_prestador_solic_w	bigint;
cd_validacao_benef_tiss_w	pls_guia_plano.cd_validacao_benef_tiss%type;
cd_ausencia_val_benef_tiss_w	pls_guia_plano.cd_ausencia_val_benef_tiss%type;
cd_ident_biometria_benef_w	pls_guia_plano.cd_ident_biometria_benef%type;
cd_template_biomet_benef_w	pls_guia_plano.cd_template_biomet_benef%type;
ie_tipo_ident_benef_w		pls_guia_plano.ie_tipo_ident_benef%type;
cd_guia_prestador_w         pls_guia_plano.cd_guia_prestador%type;
ie_cobertura_especial_w		pls_guia_plano.ie_cobertura_especial%type;
ie_regime_atendimento_w		pls_guia_plano.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_guia_plano.ie_saude_ocupacional%type;


BEGIN

/*dados diagnostico*/


/*

select  nvl(max(a.ie_indicacao_acidente),'')

into	ie_indicacao_acidente_w

from 	pls_diagnostico a,

	pls_guia_plano b

where	a.nr_seq_guia = b.nr_sequencia

and	b.nr_sequencia = nr_seq_guia_p;

*/
begin

select	ie_indicacao_acidente,

	cd_doenca

into STRICT	ie_indicacao_acidente_w,

	cd_doenca_w

from 	pls_diagnostico

where	nr_seq_guia 	= nr_seq_guia_p;

exception

when others then

	ie_indicacao_acidente_w	:= '';

	cd_doenca_w		:= '';

end;





/*dados da guia*/

select	a.cd_guia,
	a.dt_autorizacao,
	coalesce(a.cd_senha,null),
	a.dt_validade_senha,
	a.nr_seq_segurado,
	coalesce(a.cd_medico_solicitante,null),
	CASE WHEN a.ie_tipo_guia=2 THEN 4 WHEN a.ie_tipo_guia=3 THEN 3  ELSE 5 END ,
	/*a.dt_solicitacao,*/

	a.ie_carater_internacao,
	a.nr_seq_prestador,
	a.ie_status,
	a.cd_guia_principal,
	a.cd_estabelecimento,
	substr(obter_dados_medico(cd_medico_exec_p,'CRM'),1,255),
	substr(obter_dados_medico(cd_medico_exec_p,'UFCRM'),1,255),
	substr(pls_obter_seq_conselho_prof(cd_medico_exec_p),1,255),
	(select max(x.nr_sequencia)
	 from	pls_tipo_atendimento	x
	 where	(x.cd_tiss)::numeric  = (a.ie_tipo_atend_tiss)::numeric
	 and	x.cd_estabelecimento	= a.cd_estabelecimento),
	coalesce(a.nr_seq_clinica,null),
	coalesce(a.ie_regime_internacao,null),
	coalesce(a.nr_seq_tipo_acomodacao,null),
	coalesce(a.ie_tipo_consulta,null),
	substr(obter_cooperativa_benef(a.nr_seq_segurado,a.cd_estabelecimento),1,4),
	a.ie_recem_nascido,
	a.nm_recem_nascido,
	a.dt_nasc_recem_nascido,
	a.ie_tipo_saida,
	substr(a.ds_indicacao_clinica,1,500),
	coalesce(cd_especialidade,0),
	a.ie_tipo_guia,
	a.nr_seq_prest_solic,
	a.cd_validacao_benef_tiss,
	a.cd_ausencia_val_benef_tiss,
	a.cd_ident_biometria_benef,
	a.cd_template_biomet_benef,
	a.ie_tipo_ident_benef,    
  coalesce(a.cd_guia_prestador, a.cd_guia),
  ie_cobertura_especial,
  ie_regime_atendimento,
  ie_saude_ocupacional
into STRICT	cd_guia_w,
	dt_autorizacao_w,
	cd_senha_w,
	dt_validade_senha_w,
	nr_seq_segurado_w,
	cd_medico_solicitante_w,
	ie_tipo_guia_w,
	/*dt_emissao_w,*/

	ie_carater_internacao_w,
	nr_seq_prestador_w,
	ie_status_w,
	cd_guia_principal_w,
	cd_estabelecimento_w,
	nr_crm_exec_w,
	uf_crm_exec_w,
	nr_conselho_exec_w,
	nr_seq_tipo_atendimento_w,
	nr_seq_clinica_w,
	ie_regime_internacao_w,
	nr_seq_tipo_acomodacao_w,
	ie_tipo_consulta_w,
	cd_cooperativa_w,
	ie_recem_nascido_w,
	nm_recem_nascido_w,
	dt_nasc_recem_nascido_w,
	ie_tipo_saida_w,
	ds_indicacao_clinica_w,
	cd_especialidade_w,
	ie_tipo_guia_ww,
	nr_seq_prestador_solic_w,
	cd_validacao_benef_tiss_w,
	cd_ausencia_val_benef_tiss_w,
	cd_ident_biometria_benef_w,
	cd_template_biomet_benef_w,
	ie_tipo_ident_benef_w,
	cd_guia_prestador_w,
	ie_cobertura_especial_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_guia_plano	a
where	nr_sequencia	= nr_seq_guia_p;

cd_guia_prestador_p    := cd_guia_prestador_w;


select 	max(nr_sequencia)

into STRICT	nr_seq_saida_consulta_w

from   	pls_motivo_saida_consulta

where  	cd_tiss = ie_tipo_saida_w

and	cd_estabelecimento = cd_estabelecimento_w;



ie_origem_conta_w		:= 'D';



if (nr_seq_prestador_atend_p IS NOT NULL AND nr_seq_prestador_atend_p::text <> '') then

	nr_seq_prestador_atend_w	:= nr_seq_prestador_atend_p;

end if;



if (nr_seq_prestador_solic_w IS NOT NULL AND nr_seq_prestador_solic_w::text <> '') then

	nr_seq_prestador_atend_w := nr_seq_prestador_solic_w;

end if;

select	nextval('pls_conta_seq')

into STRICT	nr_seq_conta_w

;





/*Se campo CD_ESPECIALIADE for informado  (    da requisicao para  a autorizacao ) , entao insere na conta o CBO_SAUDE do codigo informado*/

if (cd_especialidade_w > 0) then

	begin

	select 	max(nr_seq_cbo_saude)

	into STRICT 	nr_Seq_cbo_saude_w

	from   	especialidade_medica

	where  	cd_especialidade = cd_especialidade_w;

	exception

	when others then

		nr_seq_cbo_saude_w	:= null;

	end;

else

	begin

	select	nr_seq_cbo_saude

	into STRICT	nr_seq_cbo_saude_w

	from	medico_especialidade

	where	cd_pessoa_fisica  = cd_medico_solicitante_w

	and	nr_seq_prioridade =	(SELECT   min(nr_seq_prioridade)

					from     medico_especialidade

					where 	cd_pessoa_fisica  = cd_medico_exec_p

					and   (nr_seq_cbo_saude IS NOT NULL AND nr_seq_cbo_saude::text <> ''));

	exception

	when others then

		nr_seq_cbo_saude_w	:= null;

	end;

end if;





insert into pls_conta(nr_sequencia, nm_usuario, dt_atualizacao,
	nr_seq_protocolo, dt_autorizacao,
	cd_senha, dt_validade_senha, nr_seq_segurado,
	cd_medico_solicitante, ie_status, nr_seq_guia,
	ie_tipo_guia, cd_estabelecimento, cd_guia,
	ie_carater_internacao, dt_emissao, nr_seq_prestador_exec,
	cd_medico_executor, cd_guia_prestador, nr_crm_exec,
	nr_seq_cbo_saude, uf_crm_exec, nr_seq_conselho_exec,
	nr_seq_tipo_atendimento, nr_seq_clinica, ie_regime_internacao,
	nr_seq_tipo_acomodacao, nr_seq_prestador, ie_origem_conta,
	ie_tipo_consulta, cd_cooperativa, nm_usuario_nrec,
	dt_atualizacao_nrec, ie_recem_nascido, nm_recem_nascido,
	dt_nascimento, nr_seq_saida_consulta, ds_indicacao_clinica,
	ie_indicacao_acidente, ie_cobertura_especial, ie_regime_atendimento,
    ie_saude_ocupacional)
values (	nr_seq_conta_w, nm_usuario_p, clock_timestamp(),
	nr_seq_protocolo_p, dt_autorizacao_w,
	cd_senha_w, dt_validade_senha_w, nr_seq_segurado_w,
	cd_medico_solicitante_w, 'U' , nr_seq_guia_p,
	ie_tipo_guia_w, cd_estabelecimento_w, cd_guia_w,
	ie_carater_internacao_w, /*dt_emissao_w OS 433862*/
 null, nr_seq_prestador_w,
	cd_medico_exec_p, cd_guia_prestador_w, nr_crm_exec_w,
	nr_seq_cbo_saude_w, uf_crm_exec_w, nr_conselho_exec_w,
	nr_seq_tipo_atendimento_w, nr_seq_clinica_w, ie_regime_internacao_w,
	nr_seq_tipo_acomodacao_w, nr_seq_prestador_atend_w, ie_origem_conta_w,
	ie_tipo_consulta_w, cd_cooperativa_w, nm_usuario_p,
	clock_timestamp(), ie_recem_nascido_w, nm_recem_nascido_w,
	dt_nasc_recem_nascido_w, nr_seq_saida_consulta_w, ds_indicacao_clinica_w,
	ie_indicacao_acidente_w, ie_cobertura_especial_w, ie_regime_atendimento_w,
	ie_saude_ocupacional_w);

	nr_seq_conta_gerada_p	:= nr_seq_conta_w;



CALL pls_conta_tiss_pck.criar_registro(	nr_seq_conta_w,			cd_estabelecimento_w,		cd_validacao_benef_tiss_w,

					cd_ausencia_val_benef_tiss_w,	cd_ident_biometria_benef_w,	cd_template_biomet_benef_w,

					ie_tipo_ident_benef_w,		null,	nm_usuario_p);





if (ie_tipo_guia_w	= 5) then

	if (ie_tipo_guia_ww = 8) then

		update pls_conta

		set	cd_guia			= cd_guia_w,

			cd_guia_referencia	= cd_guia_principal_w

		where	nr_sequencia		= nr_seq_conta_w;

	else

		update pls_conta

		set	cd_guia			= cd_guia_w,

			cd_guia_referencia	= cd_guia_principal_w

		where	nr_sequencia		= nr_seq_conta_w;

	end if;

end if;



commit;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_conta_guia_prod ( nr_seq_protocolo_p bigint, nr_seq_guia_p bigint, nr_seq_prestador_atend_p bigint, nm_usuario_p text, ie_imp_med_exec_solic_p text, nr_seq_prestador_p bigint, cd_medico_exec_p bigint, nr_seq_conta_gerada_p INOUT bigint, cd_guia_prestador_p INOUT text) FROM PUBLIC;

