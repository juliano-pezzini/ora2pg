-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agenda_coluna_atribdblclick ( nr_seq_agenda_p bigint, cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_agenda_p timestamp, hr_inicio_p timestamp, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ie_se_perm_pf_classif_p INOUT text, nm_pessoa_fisica_p INOUT text, dt_nascimento_pac_p INOUT text, qt_idade_paciente_p INOUT text, nr_telefone_p INOUT text, cd_procedencia_p INOUT text, ds_sexo_p INOUT text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, nr_doc_convenio_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, cd_plano_p INOUT text, cd_usuario_plano_p INOUT text, dt_validade_p INOUT timestamp, ds_idade_p INOUT text, ie_se_pac_agenda_p INOUT text) AS $body$
DECLARE

 
ie_se_perm_pf_classif_w		varchar(80);
nm_pessoa_fisica_w		varchar(100);
dt_nascimento_pac_w		varchar(255);
qt_idade_paciente_w		varchar(255);
nr_telefone_w			varchar(255);
cd_procedencia_w			varchar(255);
ds_sexo_w			varchar(60);
ie_forma_convenio_w		varchar(255);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
cd_usuario_convenio_w		varchar(30);
dt_validade_carteira_w		timestamp;
nr_doc_convenio_w		varchar(20);
cd_tipo_acomodacao_w		smallint;
cd_plano_w			varchar(10);
ds_observacao_w			varchar(4000);
ie_busca_cod_usuario_w		varchar(255);
cd_usuario_plano_w		varchar(30);
dt_validade_w			timestamp;
ds_idade_w			varchar(3);
ie_se_pac_agenda_w		varchar(1);


BEGIN 
if (cd_agenda_p > 0) then 
	begin 
	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then 
		begin 
		ie_se_perm_pf_classif_w	:= substr(Obter_Se_Perm_PF_Classif(820, cd_agenda_p, cd_pessoa_fisica_p, hr_inicio_p, 'DS'),1,80);
		nm_pessoa_fisica_w	:= substr(obter_nome_pf(cd_pessoa_Fisica_p),1,100);
		dt_nascimento_pac_w	:= substr(obter_dados_pf(cd_pessoa_fisica_p, 'DN'),1,255);
		qt_idade_paciente_w	:= substr(obter_dados_pf(cd_pessoa_fisica_p, 'I'),1,255);
		nr_telefone_w		:= substr(obter_fone_pac_agenda(cd_pessoa_fisica_p),1,255);
		cd_procedencia_w	:= substr(obter_procedencia_pf(cd_pessoa_fisica_p),1,255);
		ds_sexo_w		:= substr(obter_Sexo_pf(cd_pessoa_fisica_p, 'D'),1,60);
		ds_idade_w		:= substr(obter_idade(dt_nascimento_pac_w, clock_timestamp(), 'MM'),1,3);
		ie_se_pac_agenda_w	:= substr(Obter_Se_Pac_Agenda(cd_pessoa_fisica_p, nm_usuario_p, cd_estabelecimento_p),1,1);
 
		ie_busca_cod_usuario_w := Obter_Param_Usuario(820, 117, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_busca_cod_usuario_w);
 
		if (ie_busca_cod_usuario_w = 'S') then 
			SELECT * FROM pls_obter_usuario_plano(	cd_pessoa_fisica_p, dt_agenda_p, cd_estabelecimento_p, cd_usuario_plano_w, dt_validade_w) INTO STRICT cd_usuario_plano_w, dt_validade_w;
		end if;
		end;
	end if;
	end;
end if;
 
ie_forma_convenio_w := Obter_Param_Usuario(820, 6, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_forma_convenio_w);
 
if (nr_seq_agenda_p > 0) and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then	 
	if (ie_forma_convenio_w <> '') and (ie_forma_convenio_w <> 'N') then 
		SELECT * FROM gerar_convenio_agendamento(	cd_pessoa_fisica_p, 2, nr_seq_agenda_p, ie_forma_convenio_w, cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, nm_usuario_p, ds_observacao_w) INTO STRICT cd_convenio_w, cd_categoria_w, cd_usuario_convenio_w, dt_validade_carteira_w, nr_doc_convenio_w, cd_tipo_acomodacao_w, cd_plano_w, ds_observacao_w;
	end if;
end if;
 
ie_se_perm_pf_classif_p	:= ie_se_perm_pf_classif_w;
nm_pessoa_fisica_p	:= nm_pessoa_fisica_w;
dt_nascimento_pac_p	:= dt_nascimento_pac_w;
qt_idade_paciente_p	:= qt_idade_paciente_w;
nr_telefone_p		:= nr_telefone_w;
cd_procedencia_p	:= cd_procedencia_w;
ds_sexo_p		:= ds_sexo_w;
cd_convenio_p		:= cd_convenio_w;
cd_categoria_p		:= cd_categoria_w;
cd_usuario_convenio_p	:= cd_usuario_convenio_w;
dt_validade_carteira_p	:= dt_validade_carteira_w;
nr_doc_convenio_p	:= nr_doc_convenio_w;
cd_tipo_acomodacao_p	:= cd_tipo_acomodacao_w;
cd_plano_p		:= cd_plano_w;
cd_usuario_plano_p	:= cd_usuario_plano_w;
dt_validade_p		:= dt_validade_w;
ds_idade_p		:= ds_idade_w;
ie_se_pac_agenda_p	:= ie_se_pac_agenda_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agenda_coluna_atribdblclick ( nr_seq_agenda_p bigint, cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_agenda_p timestamp, hr_inicio_p timestamp, cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, ie_se_perm_pf_classif_p INOUT text, nm_pessoa_fisica_p INOUT text, dt_nascimento_pac_p INOUT text, qt_idade_paciente_p INOUT text, nr_telefone_p INOUT text, cd_procedencia_p INOUT text, ds_sexo_p INOUT text, cd_convenio_p INOUT bigint, cd_categoria_p INOUT text, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, nr_doc_convenio_p INOUT text, cd_tipo_acomodacao_p INOUT bigint, cd_plano_p INOUT text, cd_usuario_plano_p INOUT text, dt_validade_p INOUT timestamp, ds_idade_p INOUT text, ie_se_pac_agenda_p INOUT text) FROM PUBLIC;

