-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consist_dupl_proc_grup_ans ( nr_seq_reg_gpo_p pls_monitor_tiss_reg_gpo.nr_sequencia%type, nr_seq_monit_reg_proc_p pls_monitor_tiss_reg_proc.nr_sequencia%type, cd_especialidade_p pls_monitor_tiss_reg_proc.cd_especialidade%type, cd_grupo_proc_p pls_monitor_tiss_reg_proc.cd_grupo_proc%type, cd_procedimento_p pls_monitor_tiss_reg_proc.cd_procedimento%type, ie_origem_proced_p pls_monitor_tiss_reg_proc.ie_origem_proced%type, nr_seq_estrut_mat_p pls_monitor_tiss_reg_proc.nr_seq_estrut_mat%type, nr_seq_material_p pls_monitor_tiss_reg_proc.nr_seq_material%type, nm_usuario_p usuario.nm_usuario%type, ie_consiste_todas_p text, ds_mensagem_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Não permitir que a mesma especialidade, grupo, procedimento ou material seja cadastrada mais de uma vez na regra.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
qt_registros_w	integer	:= 0;
ds_sql_w		varchar(4000);
ds_sql_original_w 	varchar(4000);


BEGIN

if (nr_seq_reg_gpo_p IS NOT NULL AND nr_seq_reg_gpo_p::text <> '') then
	ds_sql_w	:= 	' select	count(1) '||
					' from		pls_monitor_tiss_reg_proc a'||
					' where		1=1 ' ||
					' and		a.ie_situacao = ''A'' ' ||
					' and		exists (select 1 from pls_monitor_tiss_reg_gpo x ' ||
					' 			where x.nr_sequencia = a.nr_seq_reg_gpo  ' ||
					'			and ie_situacao = ''A'' ) ';

	if (ie_consiste_todas_p = 'S') then --consistir todas as regras independente do grupo
		ds_sql_w	:= ds_sql_w || 	' and :nr_seq_reg_gpo 	= :nr_seq_reg_gpo ';
	else
		ds_sql_w	:= ds_sql_w || 	' and nr_seq_reg_gpo	= nvl( :nr_seq_reg_gpo, :nr_seq_reg_gpo ) ';
	end if;

	ds_sql_w	:= ds_sql_w	|| 		' and nr_sequencia		<> :nr_seq_monit_reg_proc_p';

	ds_sql_original_w := ds_sql_w;

	if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
		ds_sql_w	:= ds_sql_w||' and	cd_especialidade	= :cd_especialidade ';

		execute	immediate ds_sql_w
		into STRICT	qt_registros_w
		using	nr_seq_reg_gpo_p, nr_seq_reg_gpo_p, nr_seq_monit_reg_proc_p, cd_especialidade_p;
	elsif (cd_grupo_proc_p IS NOT NULL AND cd_grupo_proc_p::text <> '') then
		ds_sql_w	:= ds_sql_w||' and	cd_grupo_proc	= :cd_grupo_proc ';

		EXECUTE ds_sql_w
		into STRICT	qt_registros_w
		using 	nr_seq_reg_gpo_p, nr_seq_reg_gpo_p, nr_seq_monit_reg_proc_p, cd_grupo_proc_p;
	elsif (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
		ds_sql_w	:= ds_sql_w||' and cd_procedimento	= :cd_procedimento and ie_origem_proced	= :ie_origem_proced ';

		execute	immediate ds_sql_w
		into STRICT	qt_registros_w
		using	nr_seq_reg_gpo_p, nr_seq_reg_gpo_p, nr_seq_monit_reg_proc_p, cd_procedimento_p, ie_origem_proced_p;

		if (qt_registros_w = 0) then --OS 1141703
			ds_sql_w := ds_sql_original_w ||
				' and	((cd_grupo_proc		= (select max(cd_grupo_proc) from procedimento where cd_procedimento = :cd_procedimento and ie_origem_proced = :ie_origem_proced)) ' ||
				' or	(cd_especialidade	= (select max(cd_especialidade) from estrutura_procedimento_v where cd_procedimento = :cd_procedimento and ie_origem_proced = :ie_origem_proced))) ';

			execute	immediate ds_sql_w
			into STRICT	qt_registros_w
			using	nr_seq_reg_gpo_p, nr_seq_reg_gpo_p, nr_seq_monit_reg_proc_p, cd_procedimento_p, ie_origem_proced_p, cd_procedimento_p, ie_origem_proced_p;
		end if;
	elsif (nr_seq_estrut_mat_p IS NOT NULL AND nr_seq_estrut_mat_p::text <> '') then
		ds_sql_w	:= ds_sql_w||' and nr_seq_estrut_mat	= :nr_seq_estrut_mat ';

		execute	immediate ds_sql_w
		into STRICT	qt_registros_w
		using	nr_seq_reg_gpo_p, nr_seq_reg_gpo_p, nr_seq_monit_reg_proc_p, nr_seq_estrut_mat_p;
	elsif (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
		ds_sql_w	:= ds_sql_w||' and nr_seq_material	= :nr_seq_material ';

		execute	immediate ds_sql_w
		into STRICT	qt_registros_w
		using 	nr_seq_reg_gpo_p, nr_seq_reg_gpo_p, nr_seq_monit_reg_proc_p, nr_seq_material_p;

		if qt_registros_w = 0 then --OS 1141703
			ds_sql_w := ds_sql_original_w ||
				' and	nr_seq_estrut_mat = (select max(nr_seq_estrut_mat) from pls_material where nr_sequencia = :nr_sequencia)';

			execute	immediate ds_sql_w
			into STRICT	qt_registros_w
			using	nr_seq_reg_gpo_p, nr_seq_reg_gpo_p, nr_seq_monit_reg_proc_p, nr_seq_material_p;
		end if;
	end if;

	if (qt_registros_w	> 0) then
		ds_mensagem_p	:= wheb_mensagem_pck.get_texto(285541);
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consist_dupl_proc_grup_ans ( nr_seq_reg_gpo_p pls_monitor_tiss_reg_gpo.nr_sequencia%type, nr_seq_monit_reg_proc_p pls_monitor_tiss_reg_proc.nr_sequencia%type, cd_especialidade_p pls_monitor_tiss_reg_proc.cd_especialidade%type, cd_grupo_proc_p pls_monitor_tiss_reg_proc.cd_grupo_proc%type, cd_procedimento_p pls_monitor_tiss_reg_proc.cd_procedimento%type, ie_origem_proced_p pls_monitor_tiss_reg_proc.ie_origem_proced%type, nr_seq_estrut_mat_p pls_monitor_tiss_reg_proc.nr_seq_estrut_mat%type, nr_seq_material_p pls_monitor_tiss_reg_proc.nr_seq_material%type, nm_usuario_p usuario.nm_usuario%type, ie_consiste_todas_p text, ds_mensagem_p INOUT text) FROM PUBLIC;

