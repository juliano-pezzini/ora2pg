-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_gerar_ajuste_cm ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_movimento_estoque_w		bigint;
cd_unidade_medida_w		varchar(30);
cd_estabelecimento_w		integer;
cd_local_estoque_w		integer;
dt_mesano_referencia_w		timestamp;
dt_movimento_estoque_w		timestamp;
dt_processo_w			timestamp;
nm_usuario_w			varchar(15);
cd_material_w			integer;
cd_material_estoque_w		integer;
vl_ajuste_w			double precision;
vl_movimento_w			double precision;
qt_estoque_w			double precision;

cd_operacao_estoque_w		integer;
cd_operacao_invent_w		integer;
cd_operacao_estoque_normal_w	integer;
cd_operacao_invent_normal_w	integer;
cd_operacao_estoque_consig_w	integer;
cd_operacao_invent_consig_w	integer;

dt_mes_w			timestamp;
ie_erro_w			varchar(255);
vl_bruto_w			double precision;
vl_movto_estoque_w		double precision;
cd_acao_w			varchar(1);
ie_entrada_saida_w      		operacao_estoque.ie_entrada_saida%type;
vl_estoque_w            		double precision := 0;
qt_saldo_estoque_w      		double precision := 0;
ie_altera_custo_w       	operacao_estoque.ie_altera_custo%type;
cd_centro_custo_w		sup_ajuste_estoque_consumo.cd_centro_custo%type;
ie_consignado_w			varchar(1);
qt_existe_w			bigint;
cd_fornecedor_w			varchar(14);

qt_movto_estoque_w		double precision;

ie_estoque_lote_w		varchar(1);
nr_seq_lote_fornec_w		bigint;
ds_material_w			varchar(255);
nm_id_job_w			sup_ajuste_estoque_consumo.nm_id_job%type;
ds_titulo_w			sup_notificacao_fila.ds_titulo%type;
ds_conteudo_w			sup_notificacao_fila.ds_conteudo%type;

c01 CURSOR FOR
SELECT	a.cd_material,
	a.vl_ajuste,
	b.cd_centro_custo,
	a.cd_fornecedor
from	sup_ajuste_estoque_consumo b,
	sup_ajuste_est_cons_mat a
where	a.nr_seq_ajuste	= b.nr_sequencia
and	b.nr_sequencia	= nr_sequencia_p;

c02 CURSOR FOR
SELECT	a.nr_movimento_estoque,
	a.cd_acao,
	b.ie_entrada_saida,
	coalesce(a.qt_estoque,0),
	b.ie_altera_custo
from	operacao_estoque b,
	movimento_estoque a
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	coalesce(b.ie_consignado,0)  = 0
and	b.ie_altera_custo	= 'S'
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and	a.cd_material_estoque	= cd_material_estoque_w
and	a.dt_mesano_referencia	= dt_mesano_referencia_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	ie_consignado_w = 'N'

union all

SELECT	a.nr_movimento_estoque,
	a.cd_acao,
	b.ie_entrada_saida,
	coalesce(a.qt_estoque,0),
	b.ie_altera_custo
from	operacao_estoque b,
	movimento_estoque a
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	coalesce(b.ie_consignado,0)  <> 0
and	b.ie_altera_custo	= 'S'
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and	a.cd_fornecedor	 	= cd_fornecedor_w
and	a.cd_material_estoque	= cd_material_estoque_w
and	a.dt_mesano_referencia	= dt_mesano_referencia_w
and	a.cd_estabelecimento	= cd_estabelecimento_w
and	ie_consignado_w = 'S'
order by 1;

c03 CURSOR FOR
SELECT	dt_mes
from	mes_v
where	dt_mes >= PKG_DATE_UTILS.start_of(dt_mesano_referencia_w,'mm',0)
order by 1;


BEGIN
update	sup_ajuste_estoque_consumo
set	dt_geracao_inicio	= clock_timestamp()
where	nr_sequencia		= nr_sequencia_p;
commit;

select	cd_estabelecimento,
	cd_local_estoque,
	dt_mesano_referencia,
	nm_id_job
into STRICT	cd_estabelecimento_w,
	cd_local_estoque_w,
	dt_mesano_referencia_w,
	nm_id_job_w
from	sup_ajuste_estoque_consumo
where	nr_sequencia	= nr_sequencia_p;

-- feito por job, gerar notificacao de inicio de processo
if (nm_id_job_w IS NOT NULL AND nm_id_job_w::text <> '') then
	ds_titulo_w := substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1188729,vl_macros_p => 'NR_SEQ_LOTE='||nr_sequencia_p),1,80);
	ds_conteudo_w := substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1188733),1,2000);
	
	CALL sup_gerar_notificacao_async(nm_usuario_p => nm_usuario_p, ds_titulo_p => ds_titulo_w, ds_conteudo_p => ds_conteudo_w,
					nm_usuarios_destino_p => nm_usuario_p, cd_profiles_destino_p => null, cd_grupos_destino_p => null, 
					cd_setores_destino_p => null, ie_commit_p => 'S');
end if;

cd_operacao_estoque_normal_w := sup_verifica_cria_operacao(cd_estabelecimento_w, 6, nm_usuario_p, cd_operacao_estoque_normal_w);
cd_operacao_estoque_consig_w := sup_verifica_cria_operacao(cd_estabelecimento_w, 7, nm_usuario_p, cd_operacao_estoque_consig_w);

select	coalesce(max(cd_oper_inv_ajuste_cm), 0)
into STRICT	cd_operacao_invent_normal_w
from	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_w;
if (cd_operacao_invent_normal_w = 0) then
	select	min(cd_operacao_estoque)
	into STRICT	cd_operacao_invent_normal_w
	from	operacao_estoque
	where	ie_tipo_requisicao	= '5'
	and	ie_entrada_saida	= 'S'
	and	ie_consignado		= '0'
	and	IE_ALTERA_CUSTO		= 'N'
	and	ie_situacao		= 'A';
end if;

select	coalesce(max(cd_oper_inv_ajuste_cm_consig), 0)
into STRICT	cd_operacao_invent_consig_w
from	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_w;
if (cd_operacao_invent_consig_w = 0) then
	select	min(cd_operacao_estoque)
	into STRICT	cd_operacao_invent_consig_w
	from	operacao_estoque
	where	ie_tipo_requisicao	= '5'
	and	ie_entrada_saida	= 'S'
	and	ie_consignado		= '7'
	and	IE_ALTERA_CUSTO	= 'N'
	and	ie_situacao		= 'A';
end if;

dt_movimento_estoque_w	:= dt_mesano_referencia_w;
dt_processo_w		:= dt_mesano_referencia_w;
nm_usuario_w		:= 'Ajuste_CM';

open c01;
loop
fetch c01 into
	cd_material_w,
	vl_ajuste_w,
	cd_centro_custo_w,
	cd_fornecedor_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UME'),1,30) cd_unidade_medida_estoque,
		cd_material_estoque,
		ie_consignado,
		ds_material
	into STRICT	cd_unidade_medida_w,
		cd_material_estoque_w,
		ie_consignado_w,
		ds_material_w
	from	material
	where	cd_material = cd_material_w;
	
	select	coalesce(max(ie_estoque_lote),'N')
	into STRICT	ie_estoque_lote_w
	from	material_estab
	where	cd_material = cd_material_estoque_w
	and	cd_estabelecimento = cd_estabelecimento_w;
	
	if (ie_consignado_w = 1) or (ie_consignado_w = 2 AND cd_fornecedor_w IS NOT NULL AND cd_fornecedor_w::text <> '') then
		ie_consignado_w := 'S';
	else
		ie_consignado_w := 'N';
	end if;
	
	if (ie_consignado_w = 'S') then
		begin		
		select	coalesce(sum(vl_estoque),0),
			coalesce(sum(qt_estoque),0)
		into STRICT	vl_estoque_w,
			qt_saldo_estoque_w
		from	fornecedor_mat_consignado
		where	cd_fornecedor		= cd_fornecedor_w
		and	cd_material		= cd_material_estoque_w
		and	dt_mesano_referencia	= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_w,-1,0)
		and	cd_estabelecimento	= cd_estabelecimento_w;
		
		cd_operacao_estoque_w 	:= cd_operacao_estoque_consig_w;
		cd_operacao_invent_w	:= cd_operacao_invent_consig_w;
		
		if (ie_estoque_lote_w = 'S') then
			begin
			select	max(nr_seq_lote)
			into STRICT	nr_seq_lote_fornec_w
			from	fornecedor_mat_consig_lote
			where	cd_estabelecimento = cd_estabelecimento_w
			and	cd_local_estoque = cd_local_Estoque_w
			and	cd_material = cd_material_estoque_w
			and	cd_fornecedor = cd_fornecedor_w
			and	dt_mesano_referencia = dt_mesano_referencia_w;
			
			if (coalesce(nr_seq_lote_fornec_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_lote_fornec_w
				from	material_lote_fornec
				where	coalesce(ie_situacao,'A') = 'A'
				and	coalesce(ie_bloqueio,'N') = 'N'
				and	cd_cgc_fornec = cd_fornecedor_w
				and	cd_material in (SELECT	x.cd_material
							from	material x
							where	x.cd_material_estoque = cd_material_estoque_w)
				and	cd_estabelecimento = cd_estabelecimento_w;
			end if;
			end;
		end if;
		end;
	else
		begin
		select	coalesce(sum(vl_estoque),0),
			coalesce(sum(qt_estoque),0)
		into STRICT	vl_estoque_w,
			qt_saldo_estoque_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_material		= cd_material_estoque_w
		and	dt_mesano_referencia	= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_w,-1,0);
		
		cd_fornecedor_w		:= null;
		cd_operacao_estoque_w 	:= cd_operacao_estoque_normal_w;
		cd_operacao_invent_w	:= cd_operacao_invent_normal_w;
		
		if (ie_estoque_lote_w = 'S') then
			begin
			select	max(nr_seq_lote)
			into STRICT	nr_seq_lote_fornec_w
			from	saldo_estoque_lote
			where	cd_estabelecimento = cd_estabelecimento_w
			and	cd_local_estoque = cd_local_Estoque_w
			and	cd_material = cd_material_estoque_w
			and	dt_mesano_referencia = dt_mesano_referencia_w;
			
			if (coalesce(nr_seq_lote_fornec_w::text, '') = '') then
				select	max(nr_sequencia)
				into STRICT	nr_seq_lote_fornec_w
				from	material_lote_fornec
				where	coalesce(ie_situacao,'A') = 'A'
				and	coalesce(ie_bloqueio,'N') = 'N'
				and	cd_material in (SELECT	x.cd_material
							from	material x
							where	x.cd_material_estoque = cd_material_estoque_w)
				and	cd_estabelecimento = cd_estabelecimento_w;				
			end if;
			end;
		end if;
		end;
	end if;
	
	if (ie_estoque_lote_w = 'S') and (coalesce(nr_seq_lote_fornec_w,0) = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181229,'DS_MATERIAL='||ds_material_w);
	end if;
	
	if (substr(sup_obter_metodo_valorizacao(dt_mesano_referencia_w, cd_estabelecimento_w),1,15) = 'MPM') then		
		begin
		dt_processo_w	:=	clock_timestamp();
		
		CALL val_estoque_media_ponderada.val_prod_mat(dt_mesano_referencia_w, cd_estabelecimento_w, cd_material_estoque_w, nm_usuario_w);
		
		select	coalesce(sum(vl_estoque),0),
			coalesce(sum(qt_estoque),0)
		into STRICT	vl_estoque_w,
			qt_saldo_estoque_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_material		= cd_material_estoque_w
		and	dt_mesano_referencia	= dt_mesano_referencia_w;
		end;
	else
		begin
		open c02;
		loop
		fetch c02 into
			nr_movimento_estoque_w,
			cd_acao_w,
			ie_entrada_saida_w,
			qt_estoque_w,
			ie_altera_custo_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			select	coalesce(sum(CASE WHEN b.ie_aumenta_diminui_valor='D' THEN  vl_movimento * -1 WHEN b.ie_aumenta_diminui_valor='A' THEN  vl_movimento WHEN b.ie_aumenta_diminui_valor='N' THEN  0 END ),0)
			into STRICT	vl_movimento_w
			from	tipo_valor b,
				movimento_estoque_valor a
			where	nr_movimento_estoque = nr_movimento_estoque_w
			and	a.cd_tipo_valor      = b.cd_tipo_valor;

			if (ie_entrada_saida_w = 'S') then
				qt_estoque_w	:= qt_estoque_w * -1;
				vl_movimento_w	:= vl_movimento_w * -1;
			end if;

			if (cd_acao_w <> '1') then
				qt_estoque_w	:= qt_estoque_w * -1;
				vl_movimento_w	:= vl_movimento_w * -1;
			end if;

			qt_saldo_estoque_w	:= qt_saldo_estoque_w + qt_estoque_w;
			vl_estoque_w		:= vl_estoque_w + vl_movimento_w;
			end;
		end loop;
		close c02;
		end;
	end if;	

	qt_movto_estoque_w	:=	1;	
	vl_bruto_w		:=	vl_ajuste_w * (qt_saldo_estoque_w + qt_movto_estoque_w);
	vl_movto_estoque_w	:=	vl_bruto_w - vl_estoque_w;
	
	if (round((vl_movto_estoque_w)::numeric,2) <> vl_movto_estoque_w) then
		qt_movto_estoque_w	:=	10;	
		vl_bruto_w		:=	vl_ajuste_w * (qt_saldo_estoque_w + qt_movto_estoque_w);
		vl_movto_estoque_w	:=	vl_bruto_w - vl_estoque_w;
	end if;
	
	if (round((vl_movto_estoque_w)::numeric,2) <> vl_movto_estoque_w) then
		qt_movto_estoque_w	:=	100;	
		vl_bruto_w		:=	vl_ajuste_w * (qt_saldo_estoque_w + qt_movto_estoque_w);
		vl_movto_estoque_w	:=	round((vl_bruto_w - vl_estoque_w)::numeric,2);
	end if;

	/*Ajuste CM*/

	select	nextval('movimento_estoque_seq')
	into STRICT	nr_movimento_estoque_w
	;

	insert into movimento_estoque(
		nr_movimento_estoque,		cd_estabelecimento,
		cd_local_estoque,		dt_movimento_estoque,
		cd_operacao_estoque,		cd_acao,
		cd_material,			dt_mesano_referencia,
		qt_movimento,			dt_atualizacao,
		nm_usuario,			ie_origem_documento,
		nr_documento,			nr_sequencia_item_docto,
		cd_unidade_medida_estoque,	qt_estoque,
		cd_unidade_med_mov,		cd_material_estoque,
		dt_processo,			cd_centro_custo,
		cd_fornecedor,			nr_Seq_lote_fornec)
	values ( nr_movimento_estoque_w,		cd_estabelecimento_w,
		cd_local_estoque_w,		dt_movimento_estoque_w,
		cd_operacao_estoque_w,		1,
		cd_material_w,			dt_mesano_referencia_w,
		qt_movto_estoque_w,		clock_timestamp(),
		nm_usuario_w,			9,
		nr_movimento_estoque_w,		1,
		cd_unidade_medida_w,		qt_movto_estoque_w,
		cd_unidade_medida_w,		cd_material_estoque_w,
		dt_processo_w,			cd_centro_custo_w,
		cd_fornecedor_w,		nr_seq_lote_fornec_w);	

	insert into movimento_estoque_valor(
		nr_movimento_estoque,
		cd_tipo_valor,
		vl_movimento,
		dt_atualizacao,
		nm_usuario)
	values (	nr_movimento_estoque_w,
		1,
		coalesce(vl_movto_estoque_w,0),
		clock_timestamp(),
		nm_usuario_w);	
		
	/*Diminuicao Inventario*/

	select	nextval('movimento_estoque_seq')
	into STRICT	nr_movimento_estoque_w
	;

	insert into movimento_estoque(
		nr_movimento_estoque,			cd_estabelecimento,
		cd_local_estoque,				dt_movimento_estoque,
		cd_operacao_estoque,			cd_acao,
		cd_material,				dt_mesano_referencia,
		qt_movimento,				dt_atualizacao,
		nm_usuario,				ie_origem_documento,
		nr_documento,				nr_sequencia_item_docto,
		cd_unidade_medida_estoque,		qt_estoque,
		cd_unidade_med_mov,			cd_material_estoque,
		dt_processo,				cd_centro_custo,
		cd_fornecedor,				nr_Seq_lote_fornec)
	values ( nr_movimento_estoque_w,			cd_estabelecimento_w,
		cd_local_estoque_w,			dt_movimento_estoque_w,
		cd_operacao_invent_w,			1,
		cd_material_w,				dt_mesano_referencia_w,
		qt_movto_estoque_w,			clock_timestamp(),
		nm_usuario_w,				9,
		nr_movimento_estoque_w,			1,
		cd_unidade_medida_w,			qt_movto_estoque_w,
		cd_unidade_medida_w,			cd_material_estoque_w,
		dt_processo_w,				cd_centro_custo_w,
		cd_fornecedor_w,			nr_seq_lote_fornec_w);
	
	insert into movimento_estoque_valor(
		nr_movimento_estoque,
		cd_tipo_valor,
		vl_movimento,
		dt_atualizacao,
		nm_usuario)
	values (	nr_movimento_estoque_w,
		1,
		coalesce(vl_movto_estoque_w,0),
		clock_timestamp(),
		nm_usuario_w);
				
	if (ie_consignado_w = 'S') then
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	fornecedor_mat_consignado
		where	cd_fornecedor		= cd_fornecedor_w
		and	cd_material		= cd_material_estoque_w
		and	dt_mesano_referencia	= dt_mesano_referencia_w
		and	cd_estabelecimento	= cd_estabelecimento_w;
		
		if (qt_existe_w = 0) then
			insert into fornecedor_mat_consignado(
				cd_estabelecimento,
				dt_mesano_referencia,
				cd_local_estoque,
				cd_material,
				cd_fornecedor,
				qt_estoque,
				vl_estoque,
				dt_atualizacao,
				nm_usuario,
				ie_bloqueio_inventario)
			values (cd_estabelecimento_w,
				dt_mesano_referencia_w,
				cd_local_estoque_w,
				cd_material_estoque_w,
				cd_fornecedor_w,
				0,
				0,
				clock_timestamp(),
				'Tasy',
				'N');
		end if;
		end;
	else
		begin
		select	count(*)
		into STRICT	qt_existe_w
		from	saldo_estoque
		where	cd_estabelecimento	= cd_estabelecimento_w
		and	cd_material		= cd_material_estoque_w
		and	dt_mesano_referencia	= dt_mesano_referencia_w;
		
		if (qt_existe_w = 0) then
			insert into saldo_estoque(
				cd_estabelecimento,
				dt_mesano_referencia,
				cd_local_estoque,
				cd_material,
				qt_estoque,
				vl_estoque,
				qt_reservada,
				qt_reservada_requisicao,
				dt_atualizacao,
				nm_usuario,
				ie_bloqueio_inventario)
			values (cd_estabelecimento_w,
				dt_mesano_referencia_w,
				cd_local_estoque_w,
				cd_material_estoque_w,
				0,
				0,
				0,
				0,
				clock_timestamp(),
				'Tasy',
				'N');
		end if;
		end;
	end if;
	end;

end loop;
close c01;

commit;

open c03;
loop
fetch c03 into
	dt_mes_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	dt_mes_w := dt_mes_w;
	CALL verifica_dif_saldo(dt_mes_w,1555);
	CALL verifica_dif_valor(dt_mes_w,1555);
	CALL valorizar_estoque(dt_mes_w, cd_estabelecimento_w, 'N', 'Tasy');
	CALL gerar_resumo_movto_estoque(dt_mes_w, cd_estabelecimento_w, 'Tasy');
	end;
end loop;
close c03;

update	sup_ajuste_estoque_consumo
set	dt_geracao		= clock_timestamp(),
	dt_geracao_fim		= clock_timestamp(),
	nm_usuario_geracao	= nm_usuario_p
where	nr_sequencia		= nr_sequencia_p;

-- feito por job, gerar notificacao de fim de processo
if (nm_id_job_w IS NOT NULL AND nm_id_job_w::text <> '') then
	ds_titulo_w := substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1188729,vl_macros_p => 'NR_SEQ_LOTE='||nr_sequencia_p),1,80);
	ds_conteudo_w := substr(wheb_mensagem_pck.get_texto(nr_seq_mensagem_p => 1188731),1,2000);

	CALL sup_gerar_notificacao_async(nm_usuario_p => nm_usuario_p, ds_titulo_p => ds_titulo_w, ds_conteudo_p => ds_conteudo_w,
					nm_usuarios_destino_p => nm_usuario_p, cd_profiles_destino_p => null, cd_grupos_destino_p => null, 
					cd_setores_destino_p => null, ie_commit_p => 'N');
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_gerar_ajuste_cm ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

