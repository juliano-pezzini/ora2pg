-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_copiar_prot_exames (ie_substituir_p text, cd_pessoa_fisica_p text, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


nr_seq_unid_atual_w	bigint;
cd_pessoa_fisica_w	varchar(10);

ie_forma_solic_w	varchar(15);
nr_seq_protocolo_w	bigint;
nr_seq_proc_medic_w	bigint;
nr_dia_w		bigint;
nr_mes_w		bigint;
ie_regra_solic_w	varchar(15);

ie_diabetico_w		varchar(1);
ie_forma_geracao_w	varchar(1);
nr_seq_proc_medic_exc_w	bigint;
nr_seq_protocolo_exc_w	bigint;


c01 CURSOR FOR
	SELECT	cd_pessoa_fisica
	from	hd_pac_renal_cronico
	where	substr(hd_obter_se_paciente_ativo(cd_pessoa_fisica),1,1) = 'S'
	and	cd_pessoa_fisica <> cd_pessoa_fisica_p
	and	hd_obter_unidade_prc(cd_pessoa_fisica,'C') = nr_seq_unid_atual_w;

c02 CURSOR FOR
	SELECT	ie_forma_solic,
		nr_seq_protocolo,
		nr_seq_proc_medic,
		nr_dia,
		nr_mes,
		ie_regra_solic,
		ie_forma_geracao,
		nr_seq_proc_medic_exc,
		nr_seq_protocolo_exc
	from	hd_pac_prot_exame
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;


BEGIN

/* seleciona a unidade de hemodiálise atual do paciente origem */

select	hd_obter_unidade_prc(cd_pessoa_fisica_p,'C')
into STRICT	nr_seq_unid_atual_w
;

if (coalesce(nr_seq_unid_atual_w::text, '') = '') then
	ds_erro_p	:= wheb_mensagem_pck.get_texto(280469,null);
else

	open c01;
		loop
		fetch c01 into
			cd_pessoa_fisica_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

			/* caso solicite substituição remove os atuais antes de incluir */

			if (ie_substituir_p = 'S') then
				delete	from hd_pac_prot_exame
				where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
			end if;

			/* Verifica se a pessoa é diabética */

			select	ie_diabetico
			into STRICT	ie_diabetico_w
			from	hd_pac_renal_cronico
			where	cd_pessoa_fisica		= cd_pessoa_fisica_w;

			open c02;
				loop
				fetch c02 into
					ie_forma_solic_w,
					nr_seq_protocolo_w,
					nr_seq_proc_medic_w,
					nr_dia_w,
					nr_mes_w,
					ie_regra_solic_w,
					ie_forma_geracao_w,
					nr_seq_proc_medic_exc_w,
					nr_seq_protocolo_exc_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					if	((ie_regra_solic_w = 'D' and ie_diabetico_w = 'S') or (ie_regra_solic_w <> 'D') or (coalesce(ie_regra_solic_w::text, '') = '')) then
						insert into hd_pac_prot_exame(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_pessoa_fisica,
							ie_forma_solic,
							nr_seq_protocolo,
							nr_seq_proc_medic,
							nr_dia,
							nr_mes,
							ie_regra_solic,
							ie_forma_geracao,
							nr_seq_proc_medic_exc,
							nr_seq_protocolo_exc
						) values (
							nextval('hd_pac_prot_exame_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_pessoa_fisica_w,
							ie_forma_solic_w,
							nr_seq_protocolo_w,
							nr_seq_proc_medic_w,
							nr_dia_w,
							nr_mes_w,
							ie_regra_solic_w,
							ie_forma_geracao_w,
							nr_seq_proc_medic_exc_w,
							nr_seq_protocolo_exc_w
						);
					end if;
				end loop;
			close c02;

		end loop;
	close c01;

	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_copiar_prot_exames (ie_substituir_p text, cd_pessoa_fisica_p text, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

