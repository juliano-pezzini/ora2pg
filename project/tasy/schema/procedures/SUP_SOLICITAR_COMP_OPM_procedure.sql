-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_solicitar_comp_opm (nr_seq_ordem_opm_p bigint, nr_seq_lista_comp_p text, cd_local_destino_p bigint, cd_local_origem_p bigint, ie_solic_compra_p text, nm_usuario_p text) AS $body$
DECLARE


qt_estoque_w			double precision;
cd_estabelecimento_w		smallint;
nr_requisicao_w			bigint;
nr_solic_compra_w			bigint;
nr_item_solic_compra_w	   	bigint;
cd_operacao_estoque_w	   	smallint;
cd_pessoa_requisitante_w    	   	bigint;
nr_item_requisicao_w	   	bigint;
nr_item_oci_w		   	integer;
ie_status_w			varchar(15)	:=	'X';
ie_gerado_requisicao_w	   	varchar(15)	:=	'N';
cd_material_w                   		bigint;
nr_sequencia_w                   		bigint;
qt_material_w                   		double precision;


c01 CURSOR FOR
SELECT	nr_sequencia,
                cd_material,
            	coalesce(qt_material,1) qt_material
from	ordem_producao_comp_opm
where	Obter_Se_Contido(nr_sequencia,nr_seq_lista_comp_p) = 'S';


BEGIN
select	coalesce(max(b.cd_estabelecimento),obter_estabelecimento_ativo)
into STRICT	cd_estabelecimento_w
from	ordem_producao_opm c,
            	prescr_opm a,
            	prescr_medica b
where	a.nr_prescricao = b.nr_prescricao
and	a.nr_ordem_opm  = c.nr_sequencia
and	c.nr_sequencia = nr_seq_ordem_opm_p;

update	ordem_producao_comp_opm
set	ie_status_saldo = 'N',
            	nm_usuario     = nm_usuario_p,
            	dt_atualizacao = clock_timestamp()
where	nr_seq_ordem_opm = nr_seq_ordem_opm_p
and	coalesce(ie_status_saldo,'X') = 'X';

open c01;
loop
fetch c01 into
	nr_sequencia_w,
   cd_material_w,
   qt_material_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
   qt_estoque_w	:=	obter_quantidade_convertida(cd_material_w, qt_material_w, substr(obter_dados_material(cd_material_w, 'UMC'),1,30), 'UME');

   if (ie_solic_compra_p = 'S') then

      if (coalesce(nr_solic_compra_w::text, '') = '') then
         nr_solic_compra_w := gerar_solic_compra(
               cd_estabelecimento_w, 'N', 'N', cd_local_destino_p, nm_usuario_p, nr_solic_compra_w);

         /*sobrescreve o status de ressuprimento*/

         ie_status_w	:=	'COM';
      end if;

		CALL gerar_solic_compra_item(
			nr_solic_compra_w,
			cd_material_w,
			'E',
			qt_estoque_w,
			clock_timestamp() + interval '15 days',
			nm_usuario_p,
			'S',
			60,
			null);

		select	max(nr_item_solic_compra)
		into STRICT	nr_item_solic_compra_w
		from	solic_compra_item
		where	nr_solic_compra = nr_solic_compra_w;

		update	solic_compra_item
		set	nr_seq_op_comp_opm = nr_sequencia_w
		where	nr_solic_compra         = nr_solic_compra_w
		and	nr_item_solic_compra = nr_item_solic_compra_w;
   else
		select	max(cd_operacao_transf_setor)
		into STRICT	cd_operacao_estoque_w
		from	parametro_estoque
		where	cd_estabelecimento = cd_estabelecimento_w;

		cd_pessoa_requisitante_w := substr(obter_pessoa_fisica_usuario(nm_usuario_p,'C'),1,10);

      if (coalesce(nr_requisicao_w::text, '') = '') then
         select	nextval('requisicao_seq')
         into STRICT	nr_requisicao_w
;

         insert into requisicao_material(
            nr_requisicao,
            cd_estabelecimento,
            cd_local_estoque,
            dt_solicitacao_requisicao,
            dt_atualizacao,
            nm_usuario,
            cd_operacao_estoque,
            cd_pessoa_requisitante,
            cd_local_estoque_destino,
            nm_usuario_lib,
            dt_atualizacao_nrec,
            nm_usuario_nrec,
            ie_geracao,
            ie_urgente,
            nr_seq_solic_kit,
            ie_origem_requisicao)
         values (	nr_requisicao_w,
            cd_estabelecimento_w,
            cd_local_origem_p,
            clock_timestamp(),
            clock_timestamp(),
            nm_usuario_p,
            cd_operacao_estoque_w,
            cd_pessoa_requisitante_w,
            cd_local_destino_p,
            nm_usuario_p,
            clock_timestamp(),
            nm_usuario_p,
            'I',
            'N',
            null,
            'OPM');

         ie_gerado_requisicao_w:= 'S';
         ie_status_w	               :=	'RES';
      end if;

		select	coalesce(max(nr_sequencia),0)+1
		into STRICT	nr_item_requisicao_w
		from	item_requisicao_material
		where	nr_requisicao = nr_requisicao_w;

		insert into item_requisicao_material(
			nr_requisicao,
			nr_sequencia,
			cd_estabelecimento,
			cd_material,
			qt_material_requisitada,
			vl_material,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			cd_unidade_medida_estoque,
			qt_estoque,
			nr_seq_op_comp_opm)
		values (	nr_requisicao_w,
			nr_item_requisicao_w,
			cd_estabelecimento_w,
			cd_material_w,
			qt_material_w,
			0,
			clock_timestamp(),
			nm_usuario_p,
			substr(obter_dados_material(cd_material_w, 'UMC'),1,30),
			substr(obter_dados_material(cd_material_w, 'UME'),1,30),
			qt_estoque_w,
			nr_sequencia_w);
   end if;
  end;
end loop;
close c01;


if (ie_status_w in ('RES','COM')) then
	CALL gravar_status_op_opm(nr_seq_ordem_opm_p, ie_status_w, null, nm_usuario_p, cd_estabelecimento_w);
end if;
if (ie_gerado_requisicao_w = 'S') then
   	CALL gravar_status_op_opm(nr_seq_ordem_opm_p, 'AGRM', null, nm_usuario_p, cd_estabelecimento_w);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_solicitar_comp_opm (nr_seq_ordem_opm_p bigint, nr_seq_lista_comp_p text, cd_local_destino_p bigint, cd_local_origem_p bigint, ie_solic_compra_p text, nm_usuario_p text) FROM PUBLIC;

