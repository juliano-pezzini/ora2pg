-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gap_verifica_se_requisito (nr_seq_requisito_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_gap_w                    varchar(1);
nr_seq_item_w               MED_AVALIACAO_RESULT.NR_SEQ_ITEM%type;
qt_resultado_w              MED_AVALIACAO_RESULT.QT_RESULTADO%type;
ds_resultado_w              MED_AVALIACAO_RESULT.DS_RESULTADO%type;
ds_regra_w                  MED_ITEM_AVALIAR.DS_REGRA%type;
ds_item_w                   MED_ITEM_AVALIAR.DS_ITEM%type;
nr_seq_avaliacao_w          MED_AVALIACAO_PACIENTE.NR_SEQUENCIA%type;
ie_liberar_desenv_old_w     LATAM_REQUISITO.IE_LIBERAR_DESENV%type;
ie_validacao_w              varchar(5);

C01 CURSOR FOR
    SELECT   NR_SEQ_ITEM,
             QT_RESULTADO,
             DS_RESULTADO
    FROM     MED_AVALIACAO_RESULT
    WHERE    NR_SEQ_AVALIACAO = nr_seq_avaliacao_w
    ORDER BY NR_SEQ_ITEM;


BEGIN

ie_gap_w := 'N';

SELECT   NR_SEQUENCIA
INTO STRICT     nr_seq_avaliacao_w
FROM     MED_AVALIACAO_PACIENTE
WHERE    NR_SEQ_REQUISITO = nr_seq_requisito_p
ORDER BY NR_SEQUENCIA;

OPEN C01;
LOOP
FETCH C01 INTO
      nr_seq_item_w,
      qt_resultado_w,
      ds_resultado_w;

EXIT WHEN NOT FOUND; /* apply on C01 */
    BEGIN
        SELECT  DS_REGRA,
                DS_ITEM
        INTO STRICT    ds_regra_w,
                ds_item_w
        FROM    MED_ITEM_AVALIAR 
        WHERE   NR_SEQUENCIA = nr_seq_item_w;

        IF (qt_resultado_w = 1) THEN
            BEGIN
                ie_validacao_w := 'N';
            END;
        ELSIF (qt_resultado_w = 0) THEN
            BEGIN
                ie_validacao_w := 'S';
            END;
        END IF;

        IF (ie_gap_w = 'N') THEN
            BEGIN
                IF (ds_regra_w = ie_validacao_w) THEN
                    BEGIN
                        IF (ie_validacao_w = 'S') THEN
                            BEGIN
                                ie_gap_w := 'S';
                            END;
                        ELSIF (ie_validacao_w = 'N') THEN
                            BEGIN
                                ie_gap_w := 'R';
                            END;
                        ELSE
                            BEGIN
                                ie_gap_w := 'S';
                            END;
                        END IF;
                    END;
                END IF;
            END;
        END IF;
    END;
END LOOP;

CLOSE C01;

UPDATE    LATAM_REQUISITO
SET       IE_IMPORTANCIA_DESENV = CASE WHEN ie_gap_w='S' THEN  'G'  ELSE 'R' END
WHERE     NR_SEQUENCIA = nr_seq_requisito_p
RETURNING IE_LIBERAR_DESENV INTO ie_liberar_desenv_old_w;

CALL generate_latam_log(nr_seq_requisito_p, ie_liberar_desenv_old_w, 849493);

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gap_verifica_se_requisito (nr_seq_requisito_p bigint, nm_usuario_p text) FROM PUBLIC;

