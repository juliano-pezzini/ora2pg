-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_alteracao_horario_hemot ( nr_prescricao_p bigint, nr_seq_Hemot_p bigint, nr_etapa_atual_p bigint, ie_alteracao_p text, nm_usuario_p text, nr_seq_motivo_p bigint default null) AS $body$
DECLARE

/*

Esta procedure apenas realiza a alteracao nos horarios dos Hemocomponentes, 
para que a alteracao seja refletida na solucao, deve ser gerado evento e alterado na prescr_procedimento

I	- Instalacao
INT	- Interrupcao
R	- Reinicio
T	- Terminio
S	- Suspensao de Etapa
RIR	- Reverter Evento Inicio/Reinicio
RINTT	- Reverter Evento Interrupcao/Termino
RT	- Reverter Evento Termino (Se o status anterior era interrompido)
*/
nr_etapa_atual_w	bigint;
ie_troca_w		varchar(20);
cd_funcao_w		integer  := coalesce(obter_funcao_ativa,0);
cd_funcao_evento_w prescr_solucao_evento.cd_funcao%type;
ie_alteracao_w  prescr_solucao_evento.ie_alteracao%type;
nr_seq_penult_evento_w prescr_solucao_evento.nr_sequencia%type;
ie_usa_pda_w	varchar(1);
qt_etapas_w		integer;
qt_inter_etapa_w	smallint;
ie_bolsa_w		varchar(1);
qt_proc_w		prescr_procedimento.qt_procedimento%type;
ie_nao_exibe_tela_acao_w	varchar(1) := Obter_Valor_Param_Usuario(1113, 695, Obter_Perfil_Ativo, Wheb_Usuario_Pck.get_nm_usuario, Wheb_Usuario_Pck.get_cd_estabelecimento);
nr_seq_proc_hor_w	prescr_proc_hor.nr_sequencia%type;	
qt_procedimento_w	prescr_procedimento.qt_procedimento%type;
nr_seq_evento_w		prescr_solucao_evento.nr_sequencia%type;
dt_inicio_hemot_w	prescr_solucao_evento.dt_atualizacao%type;
nr_ocorrencia_w		bigint;
ie_evento_palm_w	varchar(1) := 'N';
nr_seq_evento_palm_w	prescr_solucao_evento.nr_sequencia%type;


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_Hemot_p IS NOT NULL AND nr_seq_Hemot_p::text <> '') and (ie_alteracao_p IS NOT NULL AND ie_alteracao_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	if (coalesce(ie_nao_exibe_tela_acao_w,'N') = 'N') then
	
		if (ie_alteracao_p = 'I') then
			Select	Min(nr_etapa)
			into STRICT	nr_etapa_atual_w
			from	prescr_proc_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and 	coalesce(dt_suspensao::text, '') = ''
			and 	coalesce(dt_inicio_horario::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			update	prescr_proc_hor
			set	dt_inicio_horario	= clock_timestamp(),
				nm_usuario_inicio	= nm_usuario_p
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and 	nr_etapa 		= nr_etapa_atual_w
			and 	coalesce(dt_inicio_horario::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
		elsif (ie_alteracao_p = 'INT') then

			select	max(nr_sequencia)
			into STRICT	nr_seq_evento_w
			from	prescr_solucao_evento
			where	nr_prescricao 		= nr_prescricao_p
			and		nr_seq_procedimento = nr_seq_Hemot_p
			and		ie_alteracao 		= 2
			and 	ie_tipo_solucao 	= 3
			and		coalesce(ie_evento_valido,'S') = 'S';

			if (nr_seq_evento_w IS NOT NULL AND nr_seq_evento_w::text <> '') then
				select	coalesce(max(obter_se_motivo_troca_frasco(nr_seq_motivo)),'N')
				into STRICT	ie_troca_w
				from	prescr_solucao_evento a
				where	nr_sequencia = nr_seq_evento_w;
			else
				ie_troca_w := 'N';
			end if;

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_proc_hor_w
			from	prescr_proc_hor	a
			where	a.nr_prescricao			= nr_prescricao_p
			and 	a.nr_seq_procedimento	= nr_seq_Hemot_p
			and 	(a.dt_inicio_horario IS NOT NULL AND a.dt_inicio_horario::text <> '')
			and 	coalesce(a.dt_fim_horario::text, '') = ''
			and 	coalesce(a.dt_suspensao::text, '') = ''
			and (coalesce(a.ie_horario_especial,'N') = 'N');
			
			select 	coalesce(max('S'), 'N')
			into STRICT	ie_bolsa_w
			from	prescr_proc_bolsa
			where	nr_prescricao 		= nr_prescricao_p
			and		nr_seq_procedimento = nr_seq_Hemot_p;
			
			if (ie_troca_w = 'S' and ie_bolsa_w = 'N') then

				select 	coalesce(max(qt_procedimento), 1)
				into STRICT	qt_procedimento_w
				from 	prescr_procedimento
				where 	nr_prescricao 	= nr_prescricao_p
				and 	nr_sequencia 	= nr_seq_Hemot_p
				and 	coalesce(dt_suspensao::text, '') = '';

				select 	min(a.dt_alteracao)
				into STRICT	dt_inicio_hemot_w
				from 	prescr_solucao_evento a,
						prescr_proc_hor b
				where	a.nr_prescricao 		= b.nr_prescricao
				and		a.nr_seq_procedimento 	= b.nr_seq_procedimento
				and		a.nr_prescricao 		= nr_prescricao_p
				and		a.nr_seq_procedimento 	= nr_seq_Hemot_p
				and		a.nr_etapa_evento		= b.nr_etapa
				and		a.ie_alteracao 			in (1, 2)
				and 	(b.dt_inicio_horario IS NOT NULL AND b.dt_inicio_horario::text <> '')
				and 	coalesce(b.dt_suspensao::text, '') = ''
				and 	coalesce(b.dt_fim_horario::text, '') = ''
				and (coalesce(b.ie_horario_especial,'N') = 'N');

				if (dt_inicio_hemot_w IS NOT NULL AND dt_inicio_hemot_w::text <> '') then

					select 	count(1)
					into STRICT 	nr_ocorrencia_w
					from 	prescr_solucao_evento
					where 	nr_prescricao 		= nr_prescricao_p
					and		nr_seq_procedimento = nr_seq_Hemot_p
					and		ie_alteracao 		= 2
					and 	coalesce(ie_evento_valido, 'S') 	= 'S'
					and		dt_alteracao between dt_inicio_hemot_w and clock_timestamp();

					if (nr_ocorrencia_w < qt_procedimento_w) then
						-- a troca de frasco sera realizada (regra de negocio). Tratamento para nao finalizar o horario quando ainda existem frascos pendentes para uma mesma etapa.
						ie_troca_w := 'N';
					end if;
				end if;
			end if;
			
			update	prescr_proc_hor
			set		dt_interrupcao		= clock_timestamp(),
					nm_usuario_inter	= nm_usuario_p,
					dt_fim_horario 		= CASE WHEN ie_troca_w='S' THEN  clock_timestamp()  ELSE null END
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento	= nr_seq_Hemot_p
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_evento_palm_w
			from	prescr_solucao_evento a
			where	a.nr_prescricao = nr_prescricao_p
			and		a.nr_seq_procedimento = nr_seq_Hemot_p
			and		a.ie_alteracao in (1,3)
			and		a.cd_funcao = 88;
			
			if (coalesce(nr_seq_evento_palm_w, 0) > 0) then
				ie_evento_palm_w := 'S';
			end if;
			
			if (nr_seq_proc_hor_w IS NOT NULL AND nr_seq_proc_hor_w::text <> '') and (ie_troca_w = 'S') and (Obter_Funcao_Ativa <> 88) and (ie_evento_palm_w <> 'S') then
				update	prescr_proc_bolsa a
				set	a.ie_bipado  	= 'S',
					a.nm_usuario 	= nm_usuario_p
				where	a.nr_seq_horario = nr_seq_proc_hor_w;
			end if;
		elsif (ie_alteracao_p = 'R') then
		
			select	max(nr_sequencia)
			into STRICT	nr_seq_evento_w
			from	prescr_solucao_evento
			where	nr_prescricao 		= nr_prescricao_p
			and		nr_seq_procedimento = nr_seq_Hemot_p
			and		ie_alteracao 		= 2
			and 	ie_tipo_solucao 	= 3
			and		coalesce(ie_evento_valido,'S') = 'S';
			
			if (nr_seq_evento_w IS NOT NULL AND nr_seq_evento_w::text <> '') then
				select	coalesce(max(obter_se_motivo_troca_frasco(nr_seq_motivo)),'N')
				into STRICT	ie_troca_w
				from	prescr_solucao_evento a
				where	nr_sequencia = nr_seq_evento_w;
			else
				ie_troca_w := 'N';
			end if;
			
			-- Criado por conta do Sirio/PDA
			select	coalesce(max('S'), 'N')
			into STRICT	ie_usa_pda_w
			from	prescr_solucao_evento
			where	nr_prescricao 	= nr_prescricao_p
			and		nr_seq_procedimento	= nr_seq_Hemot_p
			and		cd_funcao = 88;
		
			if (ie_usa_pda_w = 'S') then
                select  max(a.nr_sequencia)
                into STRICT    nr_seq_penult_evento_w
                from    prescr_solucao_evento a
                where   a.ie_tipo_solucao = 3
                and     a.nr_prescricao = nr_prescricao_p
                and     a.nr_seq_procedimento = nr_seq_Hemot_p
                and     a.ie_alteracao in (2, 4)
                and     coalesce(a.ie_evento_valido,'S') = 'S'
                and     a.nr_sequencia < (SELECT    max(z.nr_sequencia)
                                            from    prescr_solucao_evento z
                                            where   z.ie_tipo_solucao = 3
                                            and     z.nr_prescricao = nr_prescricao_p
                                            and     z.nr_seq_procedimento = nr_seq_Hemot_p
                                            and     coalesce(z.ie_evento_valido,'S') = 'S');

                select  max(a.ie_alteracao),
                        max(a.cd_funcao),
                        coalesce(max(obter_se_motivo_troca_frasco(a.nr_seq_motivo)),'N')
                into STRICT    ie_alteracao_w,
                        cd_funcao_evento_w,
                        ie_troca_w
                from    prescr_solucao_evento a
                where   a.nr_sequencia = nr_seq_penult_evento_w;

                --Se ultimo evento for 'Terminar' e a funcao for PALM WEB
                if (ie_alteracao_w = 4 and cd_funcao_evento_w = 88 and ie_troca_w = 'N') then
                    ie_troca_w := 'S';
                end if;
			end if;
			-- Fim criado por conta do Sirio/PDA
			
			select	count(1)
			into STRICT	qt_etapas_w
			from	prescr_proc_hor
			where	nr_prescricao			= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			select 	coalesce(max('S'), 'N')
			into STRICT	ie_bolsa_w
			from	prescr_proc_bolsa
			where	nr_prescricao 		= nr_prescricao_p
			and		nr_seq_procedimento = nr_seq_Hemot_p;
			
			if (ie_troca_w = 'S' and ie_bolsa_w = 'N') then
			
				select 	coalesce(max(qt_procedimento), 1)
				into STRICT	qt_procedimento_w
				from 	prescr_procedimento
				where 	nr_prescricao 	= nr_prescricao_p
				and 	nr_sequencia 	= nr_seq_Hemot_p
				and 	coalesce(dt_suspensao::text, '') = '';
				
				select 	min(a.dt_alteracao)
				into STRICT	dt_inicio_hemot_w
				from 	prescr_solucao_evento a,
						prescr_proc_hor b
				where	a.nr_prescricao 		= b.nr_prescricao
				and		a.nr_seq_procedimento 	= b.nr_seq_procedimento
				and		a.nr_prescricao 		= nr_prescricao_p
				and		a.nr_seq_procedimento 	= nr_seq_Hemot_p
				and		a.nr_etapa_evento		= b.nr_etapa
				and		a.ie_alteracao 			in (1, 2)
				and 	(b.dt_inicio_horario IS NOT NULL AND b.dt_inicio_horario::text <> '')
				and 	coalesce(b.dt_suspensao::text, '') = ''
				and 	((coalesce(b.dt_fim_horario::text, '') = '') and (qt_etapas_w > 1))
				and (coalesce(b.ie_horario_especial,'N') = 'N');
				
				if (dt_inicio_hemot_w IS NOT NULL AND dt_inicio_hemot_w::text <> '') then
					
					select 	count(1)
					into STRICT 	nr_ocorrencia_w
					from 	prescr_solucao_evento
					where 	nr_prescricao 		= nr_prescricao_p
					and		nr_seq_procedimento = nr_seq_Hemot_p
					and		ie_alteracao 		= 2
					and 	coalesce(ie_evento_valido, 'S') 	= 'S'
					and		dt_alteracao between dt_inicio_hemot_w and clock_timestamp();

					if (nr_ocorrencia_w < qt_procedimento_w) then
						-- a troca de frasco sera realizada (regra de negocio). Tratamento para nao finalizar o horario quando ainda existem frascos pendentes para uma mesma etapa.
						ie_troca_w := 'N';
					end if;
				end if;
			end if;
			
			if (ie_troca_w = 'S') then
			
				update	prescr_proc_hor
				set		dt_interrupcao		= clock_timestamp(),
						nm_usuario_inter	= nm_usuario_p
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and 	((coalesce(dt_fim_horario::text, '') = '') and (qt_etapas_w > 1))
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
			
				update	prescr_proc_hor
				set		dt_fim_horario		= clock_timestamp(),
						nm_usuario_adm		= nm_usuario_p
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and 	(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
				and 	((coalesce(dt_fim_horario::text, '') = '') and (qt_etapas_w > 1))
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
				
				Select	coalesce(Min(nr_etapa) ,0)
				into STRICT	nr_etapa_atual_w
				from	prescr_proc_hor
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	coalesce(dt_suspensao::text, '') = ''
				and 	((coalesce(dt_inicio_horario::text, '') = '') or (qt_etapas_w = 1))
				and (coalesce(ie_horario_especial,'N') = 'N');
				
				update	prescr_proc_hor
				set		dt_inicio_horario	= clock_timestamp(),
						nm_usuario_inicio	= nm_usuario_p,
						dt_interrupcao      = CASE WHEN qt_etapas_w=1 THEN  null  ELSE dt_interrupcao END
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	coalesce(nr_etapa,0) 	= coalesce(nr_etapa_atual_w,0)			
				and 	((coalesce(dt_inicio_horario::text, '') = '') or (qt_etapas_w = 1))
				and (coalesce(ie_horario_especial,'N') = 'N');
			
			else
			
				Select	Min(nr_etapa)
				into STRICT	nr_etapa_atual_w
				from	prescr_proc_hor
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	coalesce(dt_suspensao::text, '') = ''
				and		(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and		coalesce(dt_fim_horario::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
				
				update	prescr_proc_hor
				set	dt_fim_horario		 = NULL,
					nm_usuario_adm		 = NULL,
					dt_atualizacao 		= clock_timestamp(),
					dt_interrupcao		 = NULL
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and	nr_etapa		= nr_etapa_atual_w
				and 	(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
				and 	coalesce(dt_fim_horario::text, '') = ''
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
			
			end if;
			
		elsif (ie_alteracao_p = 'T') then
			update	prescr_proc_hor
			set	dt_fim_horario		= clock_timestamp(),
				nm_usuario_adm		= nm_usuario_p
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');

			select	max(a.nr_sequencia)
			into STRICT	nr_seq_proc_hor_w
			from	prescr_proc_hor	a
			where	a.nr_prescricao		= nr_prescricao_p
			and 	a.nr_seq_procedimento	= nr_seq_Hemot_p
			and 	(a.dt_inicio_horario IS NOT NULL AND a.dt_inicio_horario::text <> '')
			and 	(a.dt_fim_horario IS NOT NULL AND a.dt_fim_horario::text <> '')
			and 	coalesce(a.dt_suspensao::text, '') = ''
			and (coalesce(a.ie_horario_especial,'N') = 'N');

			if ((nr_seq_proc_hor_w IS NOT NULL AND nr_seq_proc_hor_w::text <> '') and Obter_Funcao_Ativa <> 88) then
				update	prescr_proc_bolsa a
				set	a.ie_bipado  	= 'S',
					a.nm_usuario 	= nm_usuario_p
				where	a.nr_seq_horario = nr_seq_proc_hor_w;
			end if;

		elsif (ie_alteracao_p	= 'S') then
			if (nr_etapa_atual_p IS NOT NULL AND nr_etapa_atual_p::text <> '') then
				update	prescr_proc_hor
				set	dt_suspensao		= clock_timestamp(),
					nm_usuario_susp		= nm_usuario_p
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento		= nr_seq_Hemot_p
				and 	nr_etapa 		= nr_etapa_atual_p
				and 	coalesce(dt_inicio_horario::text, '') = ''
				and	coalesce(dt_suspensao::text, '') = ''
				and 	coalesce(dt_fim_horario::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
			end if;
		elsif (ie_alteracao_p	= 'RIR') then
			Select	Min(nr_etapa)
			into STRICT	nr_etapa_atual_w
			from	prescr_proc_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and 	coalesce(dt_suspensao::text, '') = ''
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	coalesce(dt_fim_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = ''
			and 	coalesce(dt_interrupcao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			select	count(1)
			into STRICT	qt_etapas_w
			from	prescr_proc_hor
			where	nr_prescricao			= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and (coalesce(ie_horario_especial,'N') = 'N');
					
			update	prescr_proc_hor		-- Reverte o inicio;
			set	nm_usuario		= nm_usuario_p,
				dt_inicio_horario	 = NULL,
				nm_usuario_inicio	 = NULL
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and 	nr_etapa 		= nr_etapa_atual_w
			and 	coalesce(dt_suspensao::text, '') = ''
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			Select	MAX(nr_etapa)
			into STRICT	nr_etapa_atual_w
			from	prescr_proc_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and 	coalesce(dt_suspensao::text, '') = ''
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	(coalesce(dt_interrupcao,dt_fim_horario) IS NOT NULL AND (coalesce(dt_interrupcao,dt_fim_horario))::text <> '')
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			if (nr_etapa_atual_w IS NOT NULL AND nr_etapa_atual_w::text <> '') then
				update	prescr_proc_hor		-- Reverte a administracao do horario anterior;
				set	dt_fim_horario		 = NULL,
					nm_usuario_adm		 = NULL
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento		= nr_seq_Hemot_p
				and 	nr_etapa 		= nr_etapa_atual_w
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and (coalesce(ie_horario_especial,'N') = 'N');
				
			end if;
			
			select	coalesce(max(qt_procedimento),0)
			into STRICT	qt_proc_w
			from	prescr_procedimento
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_sequencia		= nr_seq_Hemot_p;
			
			if (qt_etapas_w = 1) and (qt_proc_w > 1) then
				begin
				
					update	prescr_proc_hor		
					set		dt_interrupcao = clock_timestamp(),						
							dt_inicio_horario = clock_timestamp()
					where	nr_prescricao		= nr_prescricao_p
					and 	nr_seq_procedimento		= nr_seq_Hemot_p				
					and (coalesce(ie_horario_especial,'N') = 'N');
				
				end;
			end if;
			
			if (cd_funcao_w <> 450) then
				CALL Estornar_ProPaci_Prescr_Proc(nr_prescricao_p,nr_seq_Hemot_p,nm_usuario_p);
			end if;
			
		elsif (ie_alteracao_p	in ('RINTT','RT')) then	
			Select	max(nr_etapa)
			into STRICT	nr_etapa_atual_w
			from	prescr_proc_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento		= nr_seq_Hemot_p
			and 	coalesce(dt_suspensao::text, '') = ''
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	(coalesce(dt_interrupcao,dt_fim_horario) IS NOT NULL AND (coalesce(dt_interrupcao,dt_fim_horario))::text <> '')
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			if (nr_etapa_atual_w IS NOT NULL AND nr_etapa_atual_w::text <> '') then
				update	prescr_proc_hor		-- Reverte a administracao do horario anterior;
				set	dt_fim_horario		 = NULL,
					nm_usuario_adm		 = NULL,
					dt_interrupcao		= CASE WHEN ie_alteracao_p='RT' THEN dt_interrupcao  ELSE null END ,
					nm_usuario_inter	= CASE WHEN ie_alteracao_p='RT' THEN nm_usuario_inter  ELSE null END ,
					nm_usuario		= nm_usuario_p
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento		= nr_seq_Hemot_p
				and 	nr_etapa 		= nr_etapa_atual_w
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
				
			end if;
			
			if (cd_funcao_w <> 450) then
				CALL Estornar_ProPaci_Prescr_Proc(nr_prescricao_p,nr_seq_Hemot_p,nm_usuario_p);
			end if;
			
		end if;
	
	else
		
		if (ie_alteracao_p = 'I') then
			
			select	coalesce(min(nr_etapa),0)
			into STRICT	nr_etapa_atual_w
			from	prescr_proc_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento	= nr_seq_Hemot_p
			and 	coalesce(dt_inicio_horario::text, '') = ''
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			if (nr_etapa_atual_w > 0) then
				update	prescr_proc_hor
				set		dt_inicio_horario	= clock_timestamp(),
						nm_usuario_inicio	= nm_usuario_p,
						dt_fim_horario		= clock_timestamp(),
						nm_usuario_adm		= nm_usuario_p
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	nr_etapa 			= nr_etapa_atual_w;
			end if;
			
		elsif (ie_alteracao_p = 'INT') then			
			
			select	coalesce(min(nr_etapa),0)
			into STRICT	nr_etapa_atual_w
			from	prescr_proc_hor
			where	nr_prescricao		= nr_prescricao_p
			and 	nr_seq_procedimento	= nr_seq_Hemot_p
			and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
			and 	coalesce(dt_interrupcao::text, '') = ''
			and 	(dt_fim_horario IS NOT NULL AND dt_fim_horario::text <> '')
			and 	coalesce(dt_suspensao::text, '') = ''
			and (coalesce(ie_horario_especial,'N') = 'N');
			
			if (nr_etapa_atual_w > 0) then
				update	prescr_proc_hor
				set		dt_interrupcao		= clock_timestamp(),
						nm_usuario_inter	= nm_usuario_p,
						dt_fim_horario		 = NULL,
						nm_usuario_adm		= ''
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	nr_etapa 			= nr_etapa_atual_w;
			end if;
		
		elsif (ie_alteracao_p = 'R') then			
		
			select	coalesce(max(qt_procedimento),0)
			into STRICT	qt_proc_w
			from	prescr_procedimento
			where	nr_prescricao = nr_prescricao_p
			and 	nr_sequencia  = nr_seq_Hemot_p;
			
			if (qt_proc_w > 1) then
			
				select	coalesce(min(nr_etapa),0)
				into STRICT	nr_etapa_atual_w
				from	prescr_proc_hor
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and 	(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
				and 	coalesce(dt_fim_horario::text, '') = ''
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
				
				if (nr_etapa_atual_w > 0) then
					
					select	count(1)
					into STRICT	qt_inter_etapa_w
					from	prescr_solucao_evento
					where	nr_prescricao = nr_prescricao_p
					and		nr_etapa_evento = nr_etapa_atual_w
					and		ie_alteracao = 2; -- Evento de Interromper

					-- 2 bolsas -> 1 Evento de Interromper

					-- 3 bolsas -> 2 Eventos de Interromper
					if (qt_inter_etapa_w < qt_proc_w - 1) then

						update	prescr_proc_hor
						set		dt_interrupcao		 = NULL,
								nm_usuario_inter	= ''
						where	nr_prescricao		= nr_prescricao_p
						and 	nr_seq_procedimento	= nr_seq_hemot_p
						and 	nr_etapa 			= nr_etapa_atual_w;

					end if;
					
					-- Administra o horario que esta interrompido
					update	prescr_proc_hor
					set		dt_fim_horario		= clock_timestamp(),
							nm_usuario_adm		= nm_usuario_p
					where	nr_prescricao		= nr_prescricao_p
					and 	nr_seq_procedimento	= nr_seq_Hemot_p
					and 	nr_etapa 			= nr_etapa_atual_w;
				else
					select	coalesce(min(nr_etapa),0)
					into STRICT	nr_etapa_atual_w
					from	prescr_proc_hor
					where	nr_prescricao		= nr_prescricao_p
					and 	nr_seq_procedimento	= nr_seq_Hemot_p
					and 	coalesce(dt_inicio_horario::text, '') = ''
					and 	coalesce(dt_suspensao::text, '') = ''
					and (coalesce(ie_horario_especial,'N') = 'N');
					
					if (nr_etapa_atual_w > 0) then
						-- Administra o proximo horario (aquele que ainda nao foi iniciado)
						update	prescr_proc_hor
						set		dt_inicio_horario	= clock_timestamp(),
								nm_usuario_inicio	= nm_usuario_p,
								dt_fim_horario		= clock_timestamp(),
								nm_usuario_adm		= nm_usuario_p
						where	nr_prescricao		= nr_prescricao_p
						and 	nr_seq_procedimento	= nr_seq_Hemot_p
						and 	nr_etapa 			= nr_etapa_atual_w;
					end if;
				end if;
			
			else
			
				select	coalesce(min(nr_etapa),0)
				into STRICT	nr_etapa_atual_w
				from	prescr_proc_hor
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	(dt_inicio_horario IS NOT NULL AND dt_inicio_horario::text <> '')
				and 	(dt_interrupcao IS NOT NULL AND dt_interrupcao::text <> '')
				and 	coalesce(dt_fim_horario::text, '') = ''
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
				
				if (nr_etapa_atual_w > 0) then
					-- Administra o horario que esta interrompido
					update	prescr_proc_hor
					set		dt_fim_horario		= clock_timestamp(),
							nm_usuario_adm		= nm_usuario_p
					where	nr_prescricao		= nr_prescricao_p
					and 	nr_seq_procedimento	= nr_seq_Hemot_p
					and 	nr_etapa 			= nr_etapa_atual_w;
				end if;
				
				select	coalesce(min(nr_etapa),0)
				into STRICT	nr_etapa_atual_w
				from	prescr_proc_hor
				where	nr_prescricao		= nr_prescricao_p
				and 	nr_seq_procedimento	= nr_seq_Hemot_p
				and 	coalesce(dt_inicio_horario::text, '') = ''
				and 	coalesce(dt_suspensao::text, '') = ''
				and (coalesce(ie_horario_especial,'N') = 'N');
				
				if (nr_etapa_atual_w > 0) then
					-- Administra o proximo horario (aquele que ainda nao foi iniciado)
					update	prescr_proc_hor
					set		dt_inicio_horario	= clock_timestamp(),
							nm_usuario_inicio	= nm_usuario_p,
							dt_fim_horario		= clock_timestamp(),
							nm_usuario_adm		= nm_usuario_p
					where	nr_prescricao		= nr_prescricao_p
					and 	nr_seq_procedimento	= nr_seq_Hemot_p
					and 	nr_etapa 			= nr_etapa_atual_w;
				end if;
			
			end if;
		
		end if;
		
		if (nr_etapa_atual_w > 0) then
			update	prescr_solucao_evento
			set		nr_etapa_evento = nr_etapa_atual_w
			where  	nr_sequencia = (SELECT max(nr_sequencia)
									from   prescr_solucao_evento
									where  nr_prescricao = nr_prescricao_p
									and	   nr_seq_procedimento = nr_seq_Hemot_p);
		end if;
	
	end if;
	
	CALL Atualiza_ie_horario_susp(nr_prescricao_p, nr_seq_Hemot_p, 'PRESCR_PROCEDIMENTO');
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_alteracao_horario_hemot ( nr_prescricao_p bigint, nr_seq_Hemot_p bigint, nr_etapa_atual_p bigint, ie_alteracao_p text, nm_usuario_p text, nr_seq_motivo_p bigint default null) FROM PUBLIC;

