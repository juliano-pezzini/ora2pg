-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_gerar_reg_0400_efd_icms ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_seq_regra_efd_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);

nr_linha_w			bigint := qt_linha_p;
nr_seq_registro_w			bigint := nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1)	:= ds_separador_p;
dt_fim_w			timestamp;

--códigos que serão utilizados nos registros C170
c01 CURSOR FOR
SELECT	distinct '0400' tp_registro,
	a.cd_natureza_operacao,
	a.ds_natureza_operacao
FROM natureza_operacao a, modelo_nota_fiscal m
LEFT OUTER JOIN nota_fiscal n ON (m.nr_sequencia = n.nr_seq_modelo)
WHERE n.cd_estabelecimento	= cd_estabelecimento_p --and	n.cd_operacao_nf in (30, 44, 4, 31, 25, 35, 23, 1, 2, 29, 42, 41, 21, 28)
  and m.cd_modelo_nf in ('01', '1B', '04', '55')  -- REGISTRO C100: NOTA FISCAL (CÓDIGO 01), NOTA FISCAL AVULSA (CÓDIGO 1B), NOTA FISCAL DE PRODUTOR (CÓDIGO 04) E NF-e (CÓDIGO 55).
  and (((Obter_se_nota_entrada_saida(n.nr_sequencia)= 'E') and (n.dt_entrada_saida between dt_inicio_p and dt_fim_w) ) or  --nota de entrada
 	((Obter_se_nota_entrada_saida(n.nr_sequencia)= 'S') and (n.dt_emissao between dt_inicio_p and dt_fim_w)))  --nota de saida
  and n.ie_situacao = 1 and a.cd_natureza_operacao = n.cd_natureza_operacao and (((Obter_se_nota_entrada_saida(n.nr_sequencia) = 'E') and ((ie_tipo_nota = 'EP') or (ie_tipo_nota = 'EN')))
or     ((Obter_se_nota_entrada_saida(n.nr_sequencia) = 'S') and (cd_modelo_nf = 1) and (ie_tipo_nota = 'SD'))) order by 2;

vet01	C01%rowtype;


BEGIN
dt_fim_w := fim_dia(dt_fim_p); --coloca a hora junto ex: 01/01/2013 23:59:59
open C01;
loop
fetch C01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
		ds_linha_w	:= substr(	sep_w || vet01.tp_registro		||
						sep_w || vet01.cd_natureza_operacao	||
						sep_w || vet01.ds_natureza_operacao	|| sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_efd_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_efd,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			vet01.tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);
	end;
end loop;
close C01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_gerar_reg_0400_efd_icms ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

