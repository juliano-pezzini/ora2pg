-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reg_ecf_p030 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) AS $body$
DECLARE


nr_seq_registro_w	bigint := nr_sequencia_p;
nr_linha_w		bigint := qt_linha_p;
sep_w			varchar(2) := ds_separador_p;
ds_arquivo_w		varchar(4000);
ds_arquivo_compl_w	varchar(4000);
ds_linha_w		varchar(4000);
ds_item_w		varchar(255);

dt_inicio_apuracao_w	timestamp;
dt_fim_apuracao_w	timestamp;
dt_fim_w		timestamp;
dt_inicio_w		timestamp;
tp_registro		varchar(5);
ie_tipo_apuracao_w	varchar(1);
ie_lacs_lalur_w		varchar(2);
nr_indicador_w		smallint;
vl_custo_w		double precision;
nr_seq_apuracao_w	bigint;
ie_forma_apuracao_w	fis_regra_ecf_0020.ie_forma_apuracao%type;
ie_gerar_ecf_w 		fis_livros_estr_padrao.ie_gerar_ecf%type;

-- Registro P030
c01 CURSOR FOR
	SELECT  b.dt_mes_apuracao,
		a.ie_anual_trimestral,
		a.ie_forma_apuracao
	from	fis_estrutura_calculo a,
		fis_lote_apuracao b
	where	a.nr_sequencia = b.nr_seq_estrutura
	and 	b.dt_mes_apuracao between dt_inicio_apuracao_w and dt_fim_apuracao_w
	and 	a.ie_lalur_lacs = 'IR'
	and 	b.cd_empresa = cd_empresa_p
	and	(((ie_scp_p = 'S')
		and (coalesce(a.ie_scp, 'N') = 'S')
		and (a.cd_estabelecimento_scp = cd_estabelecimento_p))
	or	((ie_scp_p = 'N') 
		and (coalesce(a.ie_scp, 'N') = 'N')))
	order by b.dt_mes_apuracao;
vet01	c01%RowType;

-- Registro P200
c02 CURSOR FOR
	SELECT 	nr_seq_item,
		substr(replace(b.ds_item,'        ', ''),1,255) ds_item,
		d.ie_gerar_ecf,
		d.cd_codigo_ecf,
		a.ie_lalur_lacs,
		a.vl_mes_03,
		a.vl_mes_06,
		a.vl_mes_09,
		a.vl_mes_12
	from	fis_calculo_estrut a,
		fis_estrutura_item b,
		fis_estrutura_livros c,
		fis_livros_estr_padrao d,
		fis_lote_apuracao e,
		fis_estrutura_calculo	f		
	where	a.nr_seq_item	= b.nr_sequencia
	and 	a.nr_seq_estrut	= b.nr_seq_estrutura
	and 	f.nr_sequencia		= e.nr_seq_estrutura
	and		b.nr_seq_livros	= c.nr_sequencia
	and		c.nr_seq_estrutura = d.nr_sequencia
	and		a.nr_seq_lote = e.nr_sequencia
	and		a.nr_seq_estrut = e.nr_seq_estrutura
	and (a.ie_lalur_lacs = 'IR' or a.ie_lalur_lacs = 'CS')
	and		a.dt_referencia between dt_inicio_w and dt_fim_w
	and 	e.ie_lote_anual	= 'N'
	and (d.ie_gerar_ecf = 'P200' or d.ie_gerar_ecf = 'P300' or d.ie_gerar_ecf = 'P400'  or d.ie_gerar_ecf = 'P500')
	and		e.cd_empresa = cd_empresa_p
	and		(((ie_scp_p = 'S')
			and (coalesce(f.ie_scp, 'N') = 'S')
			and (f.cd_estabelecimento_scp = cd_estabelecimento_p))
	or		((ie_scp_p = 'N') 
			and (coalesce(f.ie_scp, 'N') = 'N')))	
	order by d.ie_gerar_ecf, to_number(d.cd_codigo_ecf, '999.999')asc;
vet02	c02%RowType;


BEGIN

select  	max(dt_inicio_apuracao),
	max(dt_fim_apuracao)
into STRICT	dt_inicio_apuracao_w,
	dt_fim_apuracao_w
from	fis_controle_ecf
where	nr_sequencia = nr_seq_controle_p;

select 	 max(ie_forma_apuracao)
into STRICT	ie_forma_apuracao_w
from	fis_regra_ecf_0020
where	cd_estabelecimento = cd_estabelecimento_p
and	cd_empresa = cd_empresa_p;

tp_registro	:= 'P001';
ds_linha_w  	:=  substr( 	sep_w || tp_registro	|| -- Texto Fixo Contendo a Identificao do Registro.
				sep_w || 0	 	|| -- Indicador de movimento: 0 - Bloco com dados informados; 1 - Bloco sem dados informados.
				sep_w,1,8000);

ds_arquivo_w		:= substr(ds_linha_w,1,4000);
ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
nr_seq_registro_w		:= nr_seq_registro_w + 1;
nr_linha_w		:= nr_linha_w + 1;

insert into fis_ecf_arquivo(
	nr_sequencia,
	nm_usuario,
	dt_atualizacao,
	nm_usuario_nrec,
	dt_atualizacao_nrec,
	nr_seq_controle_ecf,
	nr_linha,
	cd_registro,
	ds_arquivo,
	ds_arquivo_compl)
values (	nr_seq_registro_w,
	nm_usuario_p,
	clock_timestamp(),
	nm_usuario_p,
	clock_timestamp(),
	nr_seq_controle_p,
	nr_linha_w,
	tp_registro,
	ds_arquivo_w,
	ds_arquivo_compl_w);

open c01;
loop
fetch c01 into
	vet01;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	tp_registro	:= 'P030';

	dt_inicio_w 		:= trunc(add_months(vet01.dt_mes_apuracao, -2), 'month');
	dt_fim_w		:= vet01.dt_mes_apuracao;
	ie_tipo_apuracao_w 	:= 'T';
	nr_seq_apuracao_w 	:= (to_char(dt_fim_w, 'mm') / 3);

	ds_linha_w := substr( sep_w || tp_registro	 				|| -- Texto Fixo Contendo a Identificao do Registro
			  sep_w || to_char(dt_inicio_w,'ddmmyyyy')			|| -- Data do Incio do Perodo
			  sep_w || to_char(dt_fim_w ,'ddmmyyyy')			|| -- Data do Fim do Perodo
			  sep_w || ie_tipo_apuracao_w || lpad(nr_seq_apuracao_w, 2, '0')|| -- Perodo de Apurao
			  sep_w,1,8000);

	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w	:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_ecf_arquivo(
		nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_controle_ecf,
		nr_linha,
		cd_registro,
		ds_arquivo,
		ds_arquivo_compl)
	values (	nr_seq_registro_w,
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_controle_p,
		nr_linha_w,
		tp_registro,
		ds_arquivo_w,
		ds_arquivo_compl_w);

	dt_inicio_w := trunc(dt_fim_w, 'month');

	open c02;
	loop
	fetch c02 into
		vet02;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		tp_registro	 := vet02.ie_gerar_ecf;

		if	((tp_registro = 'P200' or  tp_registro = 'P400') and vet02.cd_codigo_ecf = '2') then
			begin

			if (vet02.ie_lalur_lacs = 'IR') then
				ds_item_w := 'DISCRIMINAO DA RECEITA BRUTA';
			else
				ds_item_w := 'CLCULO DA CSLL';
			end if;

			ds_linha_w := substr( 	sep_w || tp_registro	|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || 1		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || ds_item_w	|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || 0		|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_controle_ecf, nr_linha, cd_registro, ds_arquivo, ds_arquivo_compl)
			values ( nr_seq_registro_w,nm_usuario_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nr_seq_controle_p, nr_linha_w, tp_registro, ds_arquivo_w, ds_arquivo_compl_w);

			end;
		end if;

		case to_char(vet01.dt_mes_apuracao, 'mm')
			when '03' then
				vl_custo_w := vet02.vl_mes_03;
			when '06' then
				vl_custo_w := vet02.vl_mes_06;
			when '09' then
				vl_custo_w := vet02.vl_mes_09;
			when '12' then
				vl_custo_w := vet02.vl_mes_12;
			else
				vl_custo_w := null;
		end case;

		ds_item_w := vet02.ds_item;
		ds_linha_w := substr( 	sep_w || tp_registro		|| -- Texto Fixo Contendo a Identificao do Registro.
					sep_w || vet02.cd_codigo_ecf	|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || ds_item_w		|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
					sep_w || sped_obter_campo_valor(vl_custo_w)	|| -- Valor
					sep_w,1,8000);

		ds_arquivo_w		:= substr(ds_linha_w,1,4000);
		ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
		nr_seq_registro_w	:= nr_seq_registro_w + 1;
		nr_linha_w		:= nr_linha_w + 1;

		insert into fis_ecf_arquivo(
			nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_controle_ecf,
			nr_linha,
			cd_registro,
			ds_arquivo,
			ds_arquivo_compl)
		values (	nr_seq_registro_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_controle_p,
			nr_linha_w,
			tp_registro,
			ds_arquivo_w,
			ds_arquivo_compl_w);
			end;

		if	((tp_registro = 'P200' and vet02.cd_codigo_ecf = '26') or (tp_registro = 'P400' and vet02.cd_codigo_ecf = '21'))then
			begin
			if (vet02.ie_lalur_lacs = 'IR') then
				tp_registro := 'P300';
			else
				tp_registro := 'P500';
			end if;

			ds_linha_w := substr( 	sep_w || tp_registro	|| -- Texto Fixo Contendo a Identificao do Registro.
						sep_w || 1		|| -- Cdigo, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || ds_item_w	|| -- Descrio, conforme tabela dinmica do Sped (Disponibilizada no item III deste registro e no programa da ECF no diretrio Arquivos de Programas/Programas Sped/ECf/SpedEcf/Recursos/Tabelas).
						sep_w || sped_obter_campo_valor(vl_custo_w)	|| -- Valor
						sep_w,1,8000);

			ds_arquivo_w		:= substr(ds_linha_w,1,4000);
			ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
			nr_seq_registro_w	:= nr_seq_registro_w + 1;
			nr_linha_w		:= nr_linha_w + 1;

			insert into fis_ecf_arquivo(nr_sequencia, nm_usuario, dt_atualizacao, nm_usuario_nrec, dt_atualizacao_nrec, nr_seq_controle_ecf, nr_linha, cd_registro, ds_arquivo, ds_arquivo_compl)
			values ( nr_seq_registro_w,nm_usuario_p, clock_timestamp(), nm_usuario_p, clock_timestamp(), nr_seq_controle_p, nr_linha_w, tp_registro, ds_arquivo_w, ds_arquivo_compl_w);

			end;
		end if;
	end loop;
	close c02;

	end;
end loop;
close c01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

SELECT * FROM fis_reg_ecf_P990(nr_seq_controle_p, ds_separador_p, cd_estabelecimento_p, nm_usuario_p, cd_empresa_p, qt_linha_p, nr_sequencia_p) INTO STRICT qt_linha_p, nr_sequencia_p;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reg_ecf_p030 ( nr_seq_controle_p text, ds_separador_p text, cd_estabelecimento_p text, nm_usuario_p text, cd_empresa_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint, ie_scp_p text) FROM PUBLIC;

