-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_vincular_partida_lote ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE




dt_movimento_w		timestamp;
nr_seq_agrupamento_ww	ctb_movimento.nr_seq_agrupamento%type;
nr_seq_movto_w			ctb_movimento.nr_sequencia%type;
dt_inicial_w		timestamp;
dt_final_w			timestamp;
qt_commit_w			bigint;
qt_movto_agrup_w	bigint;
nr_seq_movto_partida_w	ctb_movimento.nr_sequencia%type;
qt_debito_w			bigint;
qt_credito_w		bigint;



c_agrupamento CURSOR FOR
SELECT	dt_movimento,
		nr_seq_agrupamento,
		nr_sequencia
from	ctb_movimento
where	nr_lote_contabil 	= nr_lote_contabil_p
and		coalesce(nr_seq_agrupamento,0) <> 0
order by nr_seq_agrupamento,dt_movimento;


BEGIN

qt_commit_w		:= 0;

open c_agrupamento;
loop
fetch c_agrupamento into
	dt_movimento_w,
	nr_seq_agrupamento_ww,
	nr_seq_movto_w;
EXIT WHEN NOT FOUND; /* apply on c_agrupamento */
	begin
	dt_inicial_w	:= trunc(dt_movimento_w,'dd');
	dt_final_w	:= fim_dia(dt_inicial_w);
	qt_commit_w	:= qt_commit_w + 1;
	-- Caso tenha somente uma partida e uma contra partida.
	select  count(nr_sequencia),
		min(nr_sequencia)
	into STRICT	qt_movto_agrup_w,
		nr_seq_movto_partida_w
	from	ctb_movimento
	where	nr_seq_agrupamento 	= nr_seq_agrupamento_ww
	and	nr_lote_contabil   	= nr_lote_contabil_p
	and	dt_movimento between dt_inicial_w and dt_final_w;

	if (qt_movto_agrup_w = 2)then
		/* 1 db e 1 cr */

		update	ctb_movimento
		set	nr_seq_movto_partida	= nr_seq_movto_partida_w
		where	nr_lote_contabil	= nr_lote_contabil_p
		and	nr_seq_agrupamento	= nr_seq_agrupamento_ww
		and	nr_sequencia		<> nr_seq_movto_partida_w
		and	dt_movimento between dt_inicial_w and dt_final_w;

	end if;


	--Caso tiver uma partida e N contra partidas.
	if (qt_movto_agrup_w >= 3)then

		select  count(*)
		into STRICT	qt_debito_w
		from	ctb_movimento
		where	nr_seq_agrupamento 		= nr_seq_agrupamento_ww
		and	nr_lote_contabil  		= nr_lote_contabil_p
		and	(cd_conta_debito IS NOT NULL AND cd_conta_debito::text <> '')
		and	dt_movimento between dt_inicial_w and dt_final_w;

		select  count(*)
		into STRICT	qt_credito_w
		from	ctb_movimento
		where	nr_seq_agrupamento 		= nr_seq_agrupamento_ww
		and	nr_lote_contabil  		= nr_lote_contabil_p
		and	(cd_conta_credito IS NOT NULL AND cd_conta_credito::text <> '')
		and	dt_movimento between dt_inicial_w and dt_final_w;

		if (qt_debito_w > qt_credito_w)then

			select  min(nr_sequencia)
			into STRICT	nr_seq_movto_partida_w
			from	ctb_movimento
			where	nr_seq_agrupamento 	= nr_seq_agrupamento_ww
			and	nr_lote_contabil  	= nr_lote_contabil_p
			and	(cd_conta_credito IS NOT NULL AND cd_conta_credito::text <> '')
			and	dt_movimento between dt_inicial_w and dt_final_w;


			update	ctb_movimento
			set	nr_seq_movto_partida 	= nr_seq_movto_partida_w
			where	nr_lote_contabil 		= nr_lote_contabil_p
			and	nr_sequencia 	 		<> nr_seq_movto_partida_w
			and	nr_seq_agrupamento 		= nr_seq_agrupamento_ww
			and	dt_movimento between dt_inicial_w and dt_final_w;

		else
			select  min(nr_sequencia)
			into STRICT	nr_seq_movto_partida_w
			from	ctb_movimento
			where	nr_seq_agrupamento 	= nr_seq_agrupamento_ww
			and	nr_lote_contabil  	= nr_lote_contabil_p
			and	(cd_conta_debito IS NOT NULL AND cd_conta_debito::text <> '')
			and	coalesce(cd_conta_credito::text, '') = ''
			and	dt_movimento between dt_inicial_w and dt_final_w;

			update	ctb_movimento
			set		nr_seq_movto_partida 	= nr_seq_movto_partida_w
			where	nr_lote_contabil 		= nr_lote_contabil_p
			and		nr_sequencia 	 		<> nr_seq_movto_partida_w
			and		nr_seq_agrupamento 		= nr_seq_agrupamento_ww
			and		dt_movimento between dt_inicial_w and dt_final_w;

		end if;


	end if;
	if (qt_commit_w >= 500) then
		commit;
		qt_commit_w	:= 0;
	end if;
	end;
end loop;
close c_agrupamento;

if (ie_commit_p = 'S')then
	commit;
end if;

CALL ctb_gerar_agrup_movto(nr_lote_contabil_p,nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_vincular_partida_lote ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

