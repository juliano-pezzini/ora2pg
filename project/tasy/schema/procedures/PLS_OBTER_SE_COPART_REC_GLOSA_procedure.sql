-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_se_copart_rec_glosa (nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, dt_referencia_p timestamp, nm_usuario_p text, ie_retorno_p INOUT text) AS $body$
DECLARE


nr_seq_regra_w		pls_regra_coparticipacao.nr_sequencia%type;
dt_referencia_item_w	pls_conta_proc.dt_procedimento_imp%type;
qt_origem_w		pls_conta_proc.qt_procedimento_imp%type;
qt_liberada_w		pls_conta_coparticipacao.qt_liberada_copartic%type;
vl_fixo_w		pls_regra_coparticipacao.vl_coparticipacao%type;
ie_valor_fixo_w		pls_regra_coparticipacao.ie_incidencia_valor_fixo%type;
ie_item_glosado_w	pls_regra_preco_copartic.ie_item_glosado%type;
ie_retorno_w		varchar(2);

C01 CURSOR FOR
	SELECT	a.qt_dias_cobranca
	from	pls_regra_copart_rec_glosa	a
	where	dt_referencia_p	between	trunc(a.dt_inicio_vigencia,'dd') and fim_dia(coalesce(a.dt_fim_vigencia,dt_referencia_p));

BEGIN
ie_retorno_w := 'S';

if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
	select	coalesce(max(ie_item_glosado),'N')
	into STRICT	ie_item_glosado_w
	from	pls_regra_preco_copartic a,
		pls_conta_coparticipacao b
	where	a.nr_sequencia 		= b.nr_seq_regra_preco_copart
	and	b.nr_seq_conta_proc 	= nr_seq_conta_proc_p;

	if (ie_item_glosado_w = 'N') then

		select	max(nr_seq_regra)
		into STRICT	nr_seq_regra_w
		from	pls_conta_coparticipacao
		where	nr_seq_conta_proc = nr_seq_conta_proc_p;

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			select	coalesce(vl_coparticipacao,0),
				ie_incidencia_valor_fixo
			into STRICT	vl_fixo_w,
				ie_valor_fixo_w
			from	pls_regra_coparticipacao
			where	nr_sequencia = nr_seq_regra_w;

			if (vl_fixo_w > 0) then
				if (ie_valor_fixo_w = 'U') then
					select	a.qt_procedimento_imp,
						(select	sum(qt_liberada_copartic)
						from	pls_conta_coparticipacao b
						where	a.nr_sequencia			= b.nr_seq_conta_proc
						and	b.ie_status_coparticipacao	<> 'N'
						group by	b.nr_seq_conta_proc) liberada
					into STRICT	qt_origem_w,
						qt_liberada_w
					from	pls_conta_proc a
					where	a.nr_sequencia	= nr_seq_conta_proc_p;

					if (qt_origem_w > qt_liberada_w) then
						ie_retorno_w := 'S';
					else
						ie_retorno_w := 'N';
					end if;
				else
					ie_retorno_w := 'N';
				end if;
			else
				ie_retorno_w := 'S';
			end if;
		end if;
	else
		ie_retorno_w := 'N';
	end if;
else
	select	coalesce(max(ie_item_glosado),'N')
	into STRICT	ie_item_glosado_w
	from	pls_regra_preco_copartic a,
		pls_conta_coparticipacao b
	where	a.nr_sequencia 		= b.nr_seq_regra_preco_copart
	and	b.nr_seq_conta_mat 	= nr_seq_conta_mat_p;

	if (ie_item_glosado_w = 'N') then

		select	max(nr_seq_regra)
		into STRICT	nr_seq_regra_w
		from	pls_conta_coparticipacao
		where	nr_seq_conta_mat = nr_seq_conta_mat_p;

		if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
			select	coalesce(vl_coparticipacao,0),
				coalesce(ie_incidencia_valor_fixo,'U')
			into STRICT	vl_fixo_w,
				ie_valor_fixo_w
			from	pls_regra_coparticipacao
			where	nr_sequencia = nr_seq_regra_w;

			if (vl_fixo_w > 0) then
				if (ie_valor_fixo_w = 'U') then
					select	a.qt_material_imp,
						(select sum(qt_liberada_copartic)
						from 	pls_conta_coparticipacao b
						where	a.nr_sequencia			= b.nr_seq_conta_mat
						and	b.ie_status_coparticipacao	<> 'N'
						group by	b.nr_seq_conta_mat) liberada
					into STRICT	qt_origem_w,
						qt_liberada_w
					from	pls_conta_mat a
					where	a.nr_sequencia	= nr_seq_conta_mat_p;

					if (qt_origem_w > qt_liberada_w) then
						ie_retorno_w := 'S';
					else
						ie_retorno_w := 'N';
					end if;
				else
					ie_retorno_w := 'N';
				end if;
			else
				ie_retorno_w := 'S';
			end if;
		end if;
	else
		ie_retorno_w := 'N';
	end if;
end if;

if (ie_retorno_w = 'S') then
	select	dt_referencia
	into STRICT	dt_referencia_item_w
	from (	SELECT	coalesce(dt_procedimento,dt_procedimento_imp) dt_referencia
		from	pls_conta_proc
		where	nr_sequencia	= nr_seq_conta_proc_p
		
union all

		SELECT	coalesce(dt_atendimento,dt_atendimento_imp) dt_referencia
		from	pls_conta_mat
		where	nr_sequencia	= nr_seq_conta_mat_p) alias3;

	for r_C01_w in C01 loop
		if (dt_referencia_item_w >= trunc(dt_referencia_p,'dd') - r_C01_w.qt_dias_cobranca) then
			ie_retorno_w := 'S';
		else
			ie_retorno_w := 'N';
		end if;
	end loop;
end if;

ie_retorno_p := ie_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_se_copart_rec_glosa (nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, dt_referencia_p timestamp, nm_usuario_p text, ie_retorno_p INOUT text) FROM PUBLIC;

