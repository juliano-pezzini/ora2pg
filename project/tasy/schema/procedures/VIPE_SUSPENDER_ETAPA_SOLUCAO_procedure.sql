-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vipe_suspender_etapa_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nr_seq_motivo_p bigint, ie_evento_p bigint, ds_justificativa_p text, nm_usuario_p text, nr_seq_esquema_p bigint, nr_etapa_evento_p bigint, nr_etapas_suspender_p text, dt_horario_p timestamp, nr_etapas_erro_p INOUT text) AS $body$
DECLARE


dt_atualizacao_w	timestamp := clock_timestamp();
qt_volume_etapa_w	double precision;
nr_sequencia_w		bigint;
nr_etapas_suspender_w	varchar(1000);
ds_justificativa_w	varchar(2000);
tam_lista_w		bigint;
ie_pos_virgula_w	smallint;
nr_etapa_evento_w	smallint;
ie_erro_w		varchar(1);
nr_etapas_erro_w	varchar(255) := null;


BEGIN
if (ie_tipo_solucao_p IS NOT NULL AND ie_tipo_solucao_p::text <> '') and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (nr_seq_solucao_p IS NOT NULL AND nr_seq_solucao_p::text <> '') and (ds_justificativa_p IS NOT NULL AND ds_justificativa_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin	
	nr_etapas_erro_w	:= nr_etapas_erro_p;
	if (ie_tipo_solucao_p in (1,2)) then
		begin
		
		if (ie_tipo_solucao_p = 1) then
			select	sum(qt_solucao)
			into STRICT	qt_volume_etapa_w
			from	prescr_material
			where	nr_prescricao 	= nr_prescricao_p
			and	nr_sequencia_solucao 	= nr_seq_solucao_p;
		else
			select	max(obter_conversao_ml(cd_material, qt_dose, cd_unidade_medida_dose))
			into STRICT	qt_volume_etapa_w
			from	prescr_material
			where	nr_prescricao 	= nr_prescricao_p
			and	nr_sequencia 	= nr_seq_solucao_p;
		end if;

		--if	(qt_volume_etapa_w > 0) then

		--	begin
			
			if (ie_tipo_solucao_p = 1) then
				update	prescr_mat_hor
				set	dt_suspensao 	= clock_timestamp(),
					nm_usuario_susp = nm_usuario_p,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario 	= nm_usuario_p
				where	nr_prescricao 	= nr_prescricao_p
				and	nr_seq_solucao 	= nr_seq_solucao_p
				and	dt_horario	= dt_horario_p;
			else
				update	prescr_mat_hor
				set	dt_suspensao 	= clock_timestamp(),
					nm_usuario_susp = nm_usuario_p,
					dt_atualizacao 	= clock_timestamp(),
					nm_usuario 	= nm_usuario_p
				where	nr_prescricao 	= nr_prescricao_p
				and	nr_seq_material	= nr_seq_solucao_p
				and	dt_horario	= dt_horario_p;
			end if;
			
			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_sequencia_w
			;
			
			ds_justificativa_w	:= substr(ds_justificativa_p,1,2000);
			
			if (ie_tipo_solucao_p = 1) then

				insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_solucao,
					nr_seq_material,
					nr_seq_procedimento,
					nr_seq_nut,
					nr_seq_nut_neo,
					ie_forma_infusao,
					ie_tipo_dosagem,
					qt_dosagem,
					qt_vol_infundido,
					qt_vol_desprezado,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					nr_seq_motivo,
					ds_observacao,
					ie_tipo_solucao,
					nr_seq_esquema,
					nr_etapa_evento)
				values (
					nr_sequencia_w,
					dt_atualizacao_w,
					nm_usuario_p,
					dt_atualizacao_w,
					nm_usuario_p,
					nr_prescricao_p,
					nr_seq_solucao_p,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					ie_evento_p,
					dt_atualizacao_w,
					'S',
					nr_seq_motivo_p,
					ds_justificativa_w,
					ie_tipo_solucao_p,
					nr_seq_esquema_p,
					nr_etapa_evento_p);
			else
				insert into prescr_solucao_evento(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_prescricao,
					nr_seq_solucao,
					nr_seq_material,
					nr_seq_procedimento,
					nr_seq_nut,
					nr_seq_nut_neo,
					ie_forma_infusao,
					ie_tipo_dosagem,
					qt_dosagem,
					qt_vol_infundido,
					qt_vol_desprezado,
					cd_pessoa_fisica,
					ie_alteracao,
					dt_alteracao,
					ie_evento_valido,
					nr_seq_motivo,
					ds_observacao,
					ie_tipo_solucao,
					nr_seq_esquema,
					nr_etapa_evento)
				values (
					nr_sequencia_w,
					dt_atualizacao_w,
					nm_usuario_p,
					dt_atualizacao_w,
					nm_usuario_p,
					nr_prescricao_p,
					null,
					nr_seq_solucao_p,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					null,
					obter_dados_usuario_opcao(nm_usuario_p, 'C'),
					ie_evento_p,
					dt_atualizacao_w,
					'S',
					nr_seq_motivo_p,
					ds_justificativa_w,
					ie_tipo_solucao_p,
					nr_seq_esquema_p,
					nr_etapa_evento_p);
				
			end if;
			
			CALL atualizar_valor_susp_solucao(ie_tipo_solucao_p, nr_prescricao_p, nr_seq_solucao_p, qt_volume_etapa_w, 'S', nm_usuario_p);
			CALL atualizar_status_etapa_sol_pmh(nr_prescricao_p, nr_seq_solucao_p, nr_etapa_evento_p, nm_usuario_p);
			--end;

		--end if;
		end;
	elsif (ie_tipo_solucao_p = 3) then
		begin
		select	coalesce(max(dividir(qt_vol_hemocomp,qt_procedimento)),0)
		into STRICT	qt_volume_etapa_w
		from	prescr_procedimento
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_solucao_p
		and	(nr_seq_solic_sangue IS NOT NULL AND nr_seq_solic_sangue::text <> '')
		and	(nr_seq_derivado IS NOT NULL AND nr_seq_derivado::text <> '');

		if (qt_volume_etapa_w = 0) then
			select	coalesce(max(qt_volume_fase),0)
			into STRICT	qt_volume_etapa_w
			from	prescr_solucao_evento
			where	ie_alteracao	= 1
			and	ie_tipo_solucao	= 3
			and	nr_prescricao	= nr_prescricao_p
			and	nr_seq_procedimento = nr_seq_solucao_p;
		end if;
		
		if (qt_volume_etapa_w > 0) then
			begin
			select	nextval('prescr_solucao_evento_seq')
			into STRICT	nr_sequencia_w
			;

			insert into prescr_solucao_evento(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_prescricao,
				nr_seq_solucao,
				nr_seq_material,
				nr_seq_procedimento,
				nr_seq_nut,
				nr_seq_nut_neo,
				ie_forma_infusao,
				ie_tipo_dosagem,
				qt_dosagem,
				qt_vol_infundido,
				qt_vol_desprezado,
				cd_pessoa_fisica,
				ie_alteracao,
				dt_alteracao,
				ie_evento_valido,
				nr_seq_motivo,
				ds_observacao,
				ie_tipo_solucao)
			values (
				nr_sequencia_w,
				dt_atualizacao_w,
				nm_usuario_p,
				dt_atualizacao_w,
				nm_usuario_p,
				nr_prescricao_p,
				null,
				null,
				nr_seq_solucao_p,
				null,
				null,
				null,
				null,
				null,
				null,
				null,
				obter_dados_usuario_opcao(nm_usuario_p, 'C'),
				ie_evento_p,
				dt_atualizacao_w,
				'S',
				nr_seq_motivo_p,
				ds_justificativa_p,
				ie_tipo_solucao_p);
				
			CALL atualizar_valor_susp_solucao(ie_tipo_solucao_p, nr_prescricao_p, nr_seq_solucao_p, qt_volume_etapa_w, 'S', nm_usuario_p);
			end;
		end if;
		end;
	end if;
	end;
	
	CALL Atualiza_ie_horario_susp(nr_prescricao_p, null, null);
	
end if;
nr_etapas_erro_p	:= nr_etapas_erro_w;
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vipe_suspender_etapa_solucao ( ie_tipo_solucao_p bigint, nr_prescricao_p bigint, nr_seq_solucao_p bigint, nr_seq_motivo_p bigint, ie_evento_p bigint, ds_justificativa_p text, nm_usuario_p text, nr_seq_esquema_p bigint, nr_etapa_evento_p bigint, nr_etapas_suspender_p text, dt_horario_p timestamp, nr_etapas_erro_p INOUT text) FROM PUBLIC;

