-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_razao_ifrs ( cd_empresa_p ctb_mes_ref.cd_empresa%type, dt_inicial_p ctb_movto_ifrs.dt_movimento%type, dt_final_p ctb_movto_ifrs.dt_movimento%type, cd_estab_p ctb_saldo_ifrs.cd_estabelecimento%type, nr_seq_conta_ifrs_p text, cd_classificacao_p ctb_saldo_ifrs.cd_classificacao%type, cd_centro_custo_p text, nm_usuario_p w_ctb_razao_ifrs.nm_usuario%type, ie_valor_p text, cd_classif_inic_p ctb_saldo_ifrs.cd_classificacao%type, cd_classif_final_p ctb_saldo_ifrs.cd_classificacao%type, ie_centro_custo_p conta_contabil.ie_centro_custo%type, ie_ordenacao_p text, ie_contra_partida_p text, nr_seq_conta_ifrs_loc_p ctb_plano_conta_ifrs.nr_sequencia%type default null) AS $body$
DECLARE

/* ie_ordenacao_p:
1 - data do movimento
2 - numero do lote
3 - compl. historico
4 - ds_historico
5 - seq lancamento
*/
cd_contrapartida_w		varchar(4000);
cd_contrapartida_aux_w		varchar(4000);
ie_contrapartida_w		varchar(15);
vl_saldo_w			double precision;
vl_movto_saldo_w		double precision;
vl_saldo_ant_w			double precision;
ie_gerar_w			varchar(1);
ie_pos_w			bigint;
cd_classif_w			varchar(255);
cd_classif_ww			varchar(2000);
nr_sequencia_w			integer;
cd_centro_custo_ww		varchar(500);
dt_inicial_w			timestamp;
dt_final_w			timestamp;
dt_fim_dia_w			timestamp;
ds_erro_w			varchar(4000);
ie_contra_partida_w		varchar(1);
nr_vetor_w			bigint;
ds_msg_saldo_anterior_w		varchar(100);
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
cd_conta_contabil_w		conta_contabil_ifrs.cd_conta_contabil%type;

c01 CURSOR FOR
	SELECT	distinct s.nr_seq_conta_ifrs,
		f.cd_conta_contabil,
		substr(substr(a.nr_sequencia,1,20) || ' - ' || substr(a.cd_classificacao,1,40) || '  ' || substr(a.ds_conta,1,190),1,255) ds_conta,
		s.cd_classificacao,
		d.ie_debito_credito,
		c.ie_centro_custo
	from	ctb_grupo_conta d,
		conta_contabil c,
		conta_contabil_ifrs f,
		ctb_saldo_ifrs s,
		ctb_plano_conta_ifrs a,
		ctb_mes_ref r
	where	s.nr_seq_mes_ref	= r.nr_sequencia
	and	s.nr_seq_conta_ifrs	= f.nr_seq_conta_ifrs
	and	f.cd_conta_contabil	= c.cd_conta_contabil
	and	a.nr_sequencia		= s.nr_seq_conta_ifrs
	and	c.cd_grupo		= d.cd_grupo
	and	c.cd_empresa		= r.cd_empresa
	and	r.cd_empresa		= cd_empresa_p
	and	obter_se_periodo_vigente(f.dt_inicio_vigencia, f.dt_fim_vigencia, r.dt_referencia) = 'S'
	and (cd_estabelecimento_w = 0 or s.cd_estabelecimento = cd_estabelecimento_w)
	and	r.dt_referencia	between dt_inicial_w and dt_fim_dia_w
	and	c.ie_tipo		<> 'T'
	and	exists (	SELECT	1
			
			where	cd_centro_custo_ww	= 'X'
			
union all

			select	1
			from	ctb_movto_ifrs_cc y,
				ctb_movto_ifrs x
			where	x.nr_sequencia		= y.nr_seq_movto_ifrs
			and	x.nr_seq_mes_ref	= r.nr_sequencia
			and	obter_se_contido(y.cd_centro_custo,cd_centro_custo_p) = 'S');

type t_c01 is table of c01%rowtype index by integer;
l_c01 t_c01;

c02 CURSOR( cd_conta_contabil_pc  conta_contabil.cd_conta_contabil%type )	FOR
	SELECT	'M' ie_movimento,
		a.dt_movimento,
		substr(a.ds_historico,1,255) ds_historico,
		a.ie_debito_credito,
		substr(a.ds_compl_historico,1,255) ds_compl_historico,
		a.cd_contrapartida,
		a.cd_historico,
		a.vl_credito,
		a.vl_debito,
		a.vl_movimento,
		a.nr_lote_contabil,
		a.nr_sequencia,
		CASE WHEN ie_ordenacao_p='2' THEN a.nr_lote_contabil  ELSE 0 END  ie_ordem1,
		substr(CASE WHEN ie_ordenacao_p='3' THEN  a.ds_compl_historico WHEN ie_ordenacao_p='4' THEN a.ds_historico  ELSE null END ,1,255) ie_ordem2,
		CASE WHEN ie_ordenacao_p='1' THEN a.dt_movimento  ELSE to_date(null) END  ie_ordem3,
		a.cd_estabelecimento,
		CASE WHEN ie_ordenacao_p='5' THEN a.nr_sequencia  ELSE 0 END  ie_ordem4,
		a.nr_seq_agrupamento
	from	ctb_mes_ref b,
		ctb_movto_ifrs_v a
	where 	b.nr_sequencia		= a.nr_seq_mes_ref
	and	b.cd_empresa		= cd_empresa_p
	and	obter_se_periodo_vigente(a.dt_inicio_vigencia, a.dt_fim_vigencia, b.dt_referencia) = 'S'
	and	a.dt_movimento between establishment_timezone_utils.startOfDay(dt_inicial_p) and establishment_timezone_utils.endOfDay(dt_final_p)
	and	a.cd_conta_contabil	= cd_conta_contabil_pc
	and (cd_estabelecimento_w 	= 0 or a.cd_estabelecimento = cd_estabelecimento_w)
	and	(a.dt_atualizacao_saldo IS NOT NULL AND a.dt_atualizacao_saldo::text <> '')
	and	exists (	SELECT	1
			
			where	cd_centro_custo_ww 	= 'X'
			
union

			select	1
			from	ctb_movto_ifrs_cc x
			where	x.nr_seq_movto_ifrs	= a.nr_sequencia
			and	obter_se_contido(x.cd_centro_custo,cd_centro_custo_p) = 'S')
	
union all

	select	'S' ie_movimento,
		dt_inicial_p,
		ds_msg_saldo_anterior_w,
		null,
		null,
		null,
		0,
		0,
		0,
		0,
		0,
		0,
		0,
		null,
		to_date(null),
		(null)::numeric ,
		0,
		0
	
	order by ie_movimento desc,
		ie_ordem1,
		ie_ordem2,
		ie_ordem3,
		ie_ordem4,
		dt_movimento,
		nr_lote_contabil,
		cd_historico,
		ds_compl_historico;

type t_c02 is table of c02%rowtype index by integer;
l_c02 t_c02;

type vetor_w_ctb_razao is table of w_ctb_razao_ifrs%rowtype index by integer;
w_vetor_w_ctb_razao_w	vetor_w_ctb_razao;

c03 CURSOR( nr_seq_movto_pc   ctb_movto_ifrs_cc.nr_seq_movto_ifrs%type)	FOR
	SELECT	a.cd_centro_custo,
		b.ds_centro_custo,
		a.vl_movimento
	from	centro_custo b,
		ctb_movto_ifrs_cc a
	where 	a.nr_seq_movto_ifrs	= nr_seq_movto_pc
	and	a.cd_centro_custo	= b.cd_centro_custo;

type t_c03 is table of c03%rowtype index by integer;
l_c03 t_c03;
BEGIN

nr_vetor_w		:= 0;
nr_sequencia_w		:= 0;
vl_saldo_w		:= 0;
cd_centro_custo_ww	:= coalesce(cd_centro_custo_p,'X');
cd_estabelecimento_w	:= (coalesce(cd_estab_p, 0))::numeric;
ie_contra_partida_w	:= coalesce(ie_contra_partida_p, 'N');
dt_inicial_w		:= establishment_timezone_utils.startOfMonth(dt_inicial_p);
dt_final_w		:= coalesce(establishment_timezone_utils.endOfMonth(dt_final_p), dt_inicial_w);
dt_fim_dia_w 		:= establishment_timezone_utils.endOfDay(dt_final_w);
ds_msg_saldo_anterior_w	:= wheb_mensagem_pck.get_texto(379157);

select	coalesce(max(ie_contrapartida),'SPD')
into STRICT	ie_contrapartida_w
from	empresa
where	cd_empresa	= cd_empresa_p;

CALL exec_sql_dinamico(nm_usuario_p, 'truncate table w_ctb_razao_ifrs');

open c01;
loop
fetch c01 bulk collect into l_c01 limit 1000;
exit when l_c01.count = 0;
for k in 1..l_c01.count loop
	ie_gerar_w	:= 'S';

	if (ie_valor_p = 'N') then
		begin
			begin
				select	'S'
				into STRICT	ie_gerar_w
				
				where	exists ( SELECT	1
						from	ctb_mes_ref y,
							ctb_movto_ifrs x
						where	y.nr_sequencia		= x.nr_seq_mes_ref
						and	y.cd_empresa		= cd_empresa_p
						and	x.nr_seq_conta_debito	= l_c01[k].nr_seq_conta_ifrs
						and	y.dt_referencia between dt_inicial_w and dt_fim_dia_w
						and	exists (	select	1
								
								where	cd_centro_custo_ww = 'X'
								
union

								SELECT	1
								from	ctb_movto_ifrs_cc z
								where	z.nr_seq_movto_ifrs	= x.nr_sequencia
								and	obter_se_contido(z.cd_centro_custo,cd_centro_custo_p) = 'S'));
				exception when no_data_found then
					ie_gerar_w	:= 'N';
			end;

			begin
				if (ie_gerar_w = 'N') then

					select	'S'
					into STRICT	ie_gerar_w
					
					where	exists ( SELECT	1
							from	ctb_mes_ref y,
								ctb_movto_ifrs x
							where	y.nr_sequencia		= x.nr_seq_mes_ref
							and	y.cd_empresa		= cd_empresa_p
							and	x.nr_seq_conta_credito	= l_c01[k].nr_seq_conta_ifrs
							and	y.dt_referencia between dt_inicial_w and dt_final_w
							and	exists (	select	1
									
									where	cd_centro_custo_ww = 'X'
									
union

									SELECT	1
									from	ctb_movto_ifrs_cc z
									where	z.nr_seq_movto_ifrs	= x.nr_sequencia
									and	obter_se_contido(z.cd_centro_custo,cd_centro_custo_p) = 'S'));
				end if;
			exception when no_data_found then
				ie_gerar_w	:= 'N';
			end;
		end;
	end if;

	if (ie_gerar_w = 'S') and (coalesce(nr_seq_conta_ifrs_p,'0') <> '0' or coalesce(nr_seq_conta_ifrs_loc_p,'0') <> '0') then
		/* Preferencia pelo filtro do localizador */

		if (nr_seq_conta_ifrs_loc_p IS NOT NULL AND nr_seq_conta_ifrs_loc_p::text <> '') then
			select	max(cd_conta_contabil)
			into STRICT	cd_conta_contabil_w
			from	conta_contabil_ifrs
			where	nr_seq_conta_ifrs = nr_seq_conta_ifrs_loc_p;
		else
			select	max(cd_conta_contabil)
			into STRICT	cd_conta_contabil_w
			from	conta_contabil_ifrs
			where	nr_seq_conta_ifrs in (WITH RECURSIVE cte AS (

				SELECT	regexp_substr(nr_seq_conta_ifrs_p, '[^,]+', 1, level) AS nr_sequencia
				
				(regexp_substr(nr_seq_conta_ifrs_p, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_seq_conta_ifrs_p, '[^,]+', 1, level))::text <> '')
			  UNION ALL

				SELECT	regexp_substr(nr_seq_conta_ifrs_p, '[^,]+', 1, level) AS nr_sequencia
				
				(regexp_substr(nr_seq_conta_ifrs_p, '[^,]+', 1, level) IS NOT NULL AND (regexp_substr(nr_seq_conta_ifrs_p, '[^,]+', 1, level))::text <> '')
			 JOIN cte c ON ()

) SELECT * FROM cte;
);
		end if;
		
		ie_gerar_w	:= ctb_obter_se_conta_contida(l_c01[k].cd_conta_contabil, cd_conta_contabil_w);
	end if;

	if ((cd_classif_inic_p IS NOT NULL AND cd_classif_inic_p::text <> '') and l_c01[k].cd_classificacao < cd_classif_inic_p) then
		ie_gerar_w	:= 'N';
	end if;

	if ((cd_classif_final_p IS NOT NULL AND cd_classif_final_p::text <> '') and l_c01[k].cd_classificacao > cd_classif_final_p) then
		ie_gerar_w	:= 'N';
	end if;

	if (ie_gerar_w = 'S' and coalesce(cd_classificacao_p,'0') <> '0') then
		begin
		ie_gerar_w	:= 'N';
		cd_classif_w	:= cd_classificacao_p;
		cd_classif_w	:= replace(cd_classif_w,'(',null);
		cd_classif_w	:= replace(cd_classif_w,')',null);
		cd_classif_w	:= replace(cd_classif_w,' ',null);
		
		while(ie_gerar_w = 'N' and length(cd_classif_w) > 0)  loop
			begin
			ie_pos_w	:= position(',' in cd_classif_w);
			if (ie_pos_w = 0) then
				cd_classif_ww	:= cd_classif_w;
				cd_classif_w	:= null;
			else
				cd_classif_ww	:= substr(cd_classif_w,1, ie_pos_w - 1);
				cd_classif_w	:= substr(cd_classif_w, ie_pos_w + 1, 255);
			end if;
			ie_gerar_w	:= ctb_obter_se_classif_sup_ifrs(l_c01[k].nr_seq_conta_ifrs, cd_classif_ww);
			end;
		end loop;
		end;
	end if;

	if (ie_gerar_w = 'S') then
		begin
		
		select	coalesce(sum(coalesce(s.vl_saldo - s.vl_movimento,0)),0)
		into STRICT	vl_saldo_w
		from	ctb_saldo_ifrs s,
			ctb_mes_ref r
		where	s.nr_seq_mes_ref	= r.nr_sequencia
		and	establishment_timezone_utils.startOfDay(r.dt_referencia) = dt_inicial_w
		and	s.nr_seq_conta_ifrs	= l_c01[k].nr_seq_conta_ifrs
		and	r.cd_empresa		= cd_empresa_p
		and	((coalesce(cd_estabelecimento_w,0) <> 0 and s.cd_estabelecimento = cd_estabelecimento_w) or coalesce(cd_estabelecimento_w,0) = 0);
			
		if (to_char(dt_inicial_p,'dd') = '01') then
			vl_movto_saldo_w	:= 0;
		else
			if (coalesce(cd_estabelecimento_w, 0) = 0) then

				select	coalesce(sum(CASE WHEN ie_debito_credito=l_c01[k].ie_debito_credito THEN  vl_movimento  ELSE vl_movimento * -1 END ),0)
				into STRICT	vl_movto_saldo_w
				from	estabelecimento c,
					lote_contabil b,
					ctb_movto_ifrs_v a
				where	a.dt_movimento between establishment_timezone_utils.startOfMonth(dt_inicial_p)
				and 	establishment_timezone_utils.endOfDay(dt_inicial_p) - 1
				and	a.cd_conta_contabil	= l_c01[k].cd_conta_contabil
				and	a.nr_lote_contabil	= b.nr_lote_contabil
				and	b.cd_estabelecimento	= c.cd_estabelecimento
				and	c.cd_empresa		= cd_empresa_p
				and	(b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '');
			else
				select	coalesce(sum(CASE WHEN ie_debito_credito=l_c01[k].ie_debito_credito THEN  vl_movimento  ELSE vl_movimento * -1 END ),0)
				into STRICT	vl_movto_saldo_w
				from	lote_contabil b,
					ctb_movto_ifrs_v a
				where 	a.dt_movimento between dt_inicial_w and establishment_timezone_utils.endOfDay(dt_inicial_p) - 1
				and	a.cd_conta_contabil	= l_c01[k].cd_conta_contabil
				and	a.nr_lote_contabil	= b.nr_lote_contabil
				and	a.cd_estabelecimento    =  cd_estabelecimento_w
				and	(b.dt_atualizacao_saldo IS NOT NULL AND b.dt_atualizacao_saldo::text <> '');
			end if;
		end if;
		
		vl_saldo_w	:= vl_saldo_w + vl_movto_saldo_w;
		
		open c02(l_c01[k].cd_conta_contabil);
		loop fetch c02 bulk collect into l_c02 limit 1000;
		exit when l_c02.count = 0;

		for i in 1..l_c02.count loop
			if (ie_contrapartida_w = 'N') then
				cd_contrapartida_w	:= null;
			elsif (ie_contrapartida_w = 'SPD') then
				cd_contrapartida_w	:= l_c02[i].cd_contrapartida;
			end if;

			if (l_c02[i].ie_debito_credito <> l_c01[k].ie_debito_credito) then
				l_c02[i].vl_movimento	:= l_c02[i].vl_movimento * -1;
			end if;

			nr_sequencia_w	:= nr_sequencia_w + 1;

			vl_saldo_w	:= vl_saldo_w + l_c02[i].vl_movimento;

			if (l_c02[i].ie_movimento = 'S') then
				l_c02[i].dt_movimento	:= null;
			end if;
			
			nr_vetor_w	:= nr_vetor_w + 1;
			w_vetor_w_ctb_razao_w[nr_vetor_w].cd_estabelecimento		:= l_c02[i].cd_estabelecimento;
			w_vetor_w_ctb_razao_w[nr_vetor_w].dt_movimento			:= l_c02[i].dt_movimento;
			w_vetor_w_ctb_razao_w[nr_vetor_w].cd_contrapartida		:= cd_contrapartida_w;
			w_vetor_w_ctb_razao_w[nr_vetor_w].cd_classif_conta		:= l_c01[k].cd_classificacao;
			w_vetor_w_ctb_razao_w[nr_vetor_w].cd_classif_centro		:= null;
			w_vetor_w_ctb_razao_w[nr_vetor_w].cd_historico			:= l_c02[i].cd_historico;
			w_vetor_w_ctb_razao_w[nr_vetor_w].ds_historico			:= l_c02[i].ds_historico;
			w_vetor_w_ctb_razao_w[nr_vetor_w].ie_debito_credito		:= l_c02[i].ie_debito_credito;
			w_vetor_w_ctb_razao_w[nr_vetor_w].ds_compl_historico		:= l_c02[i].ds_compl_historico;
			w_vetor_w_ctb_razao_w[nr_vetor_w].ds_conta			:= l_c01[k].ds_conta;
			w_vetor_w_ctb_razao_w[nr_vetor_w].vl_credito			:= l_c02[i].vl_credito;
			w_vetor_w_ctb_razao_w[nr_vetor_w].vl_debito			:= l_c02[i].vl_debito;
			w_vetor_w_ctb_razao_w[nr_vetor_w].vl_movimento			:= l_c02[i].vl_movimento;
			w_vetor_w_ctb_razao_w[nr_vetor_w].vl_saldo			:= vl_saldo_w;	
			w_vetor_w_ctb_razao_w[nr_vetor_w].vl_saldo_ant			:= coalesce(vl_saldo_ant_w, 0);
			w_vetor_w_ctb_razao_w[nr_vetor_w].nr_sequencia			:= nr_sequencia_w;	
			w_vetor_w_ctb_razao_w[nr_vetor_w].dt_atualizacao		:= clock_timestamp();
			w_vetor_w_ctb_razao_w[nr_vetor_w].nm_usuario			:= nm_usuario_p;
			w_vetor_w_ctb_razao_w[nr_vetor_w].nr_lote_contabil		:= l_c02[i].nr_lote_contabil;	
			w_vetor_w_ctb_razao_w[nr_vetor_w].nr_seq_movto_ifrs		:= l_c02[i].nr_sequencia;
			w_vetor_w_ctb_razao_w[nr_vetor_w].nr_seq_conta_ifrs		:= l_c01[k].nr_seq_conta_ifrs;
			w_vetor_w_ctb_razao_w[nr_vetor_w].nr_seq_agrupamento		:= l_c02[i].nr_seq_agrupamento;
		
			vl_saldo_ant_w	:= vl_saldo_w;

			if (coalesce(ie_centro_custo_p,'N') = 'S' and l_c01[k].ie_centro_custo = 'S') then
				open c03(l_c02[i].nr_sequencia);
				loop fetch c03 bulk collect into l_c03 limit 1000;
				exit when l_c03.count = 0;
				
				for y in 1..l_c03.count loop
					l_c02[i].vl_debito	:= 0;
					l_c02[i].vl_credito	:= 0;
					ie_gerar_w		:= 'S';
					
					if (cd_centro_custo_ww <> 'X') then
						ie_gerar_w	:= ctb_obter_se_centro_contido(l_c03[y].cd_centro_custo, cd_centro_custo_p);
					end if;
					
					if (ie_gerar_w = 'S') then
						nr_sequencia_w	:= nr_sequencia_w + 1;

						if (l_c02[i].ie_debito_credito <> l_c01[k].ie_debito_credito) then
							l_c02[i].vl_movimento	:= l_c03[y].vl_movimento * -1;
						end if;
						
						if (l_c02[i].ie_debito_credito = 'D') then
							l_c02[i].vl_debito	:= l_c03[y].vl_movimento;
							l_c02[i].vl_credito	:= 0;
						end if;
						
						if (l_c02[i].ie_debito_credito = 'C') then
							l_c02[i].vl_credito 	:= l_c03[y].vl_movimento;
							l_c02[i].vl_debito 	:= 0;
						end if;

						nr_vetor_w	:= nr_vetor_w + 1;
						w_vetor_w_ctb_razao_w[nr_vetor_w].cd_estabelecimento		:= l_c02[i].cd_estabelecimento;
						w_vetor_w_ctb_razao_w[nr_vetor_w].cd_classif_conta		:= l_c01[k].cd_classificacao;
						w_vetor_w_ctb_razao_w[nr_vetor_w].ds_historico			:= '       ' || l_c03[y].ds_centro_custo;
						w_vetor_w_ctb_razao_w[nr_vetor_w].ds_conta			:= l_c01[k].ds_conta;
						w_vetor_w_ctb_razao_w[nr_vetor_w].vl_credito			:= l_c02[i].vl_credito;
						w_vetor_w_ctb_razao_w[nr_vetor_w].vl_debito			:= l_c02[i].vl_debito;
						w_vetor_w_ctb_razao_w[nr_vetor_w].vl_movimento			:= l_c02[i].vl_movimento;
						w_vetor_w_ctb_razao_w[nr_vetor_w].nr_sequencia			:= nr_sequencia_w;	
						w_vetor_w_ctb_razao_w[nr_vetor_w].dt_atualizacao		:= clock_timestamp();
						w_vetor_w_ctb_razao_w[nr_vetor_w].nm_usuario			:= nm_usuario_p;
						w_vetor_w_ctb_razao_w[nr_vetor_w].nr_seq_movto_ifrs		:= l_c02[i].nr_sequencia;
						w_vetor_w_ctb_razao_w[nr_vetor_w].cd_centro_custo		:= l_c03[y].cd_centro_custo;
						w_vetor_w_ctb_razao_w[nr_vetor_w].nr_seq_conta_ifrs		:= l_c01[k].nr_seq_conta_ifrs;
						w_vetor_w_ctb_razao_w[nr_vetor_w].nr_seq_agrupamento		:= l_c02[i].nr_seq_agrupamento;
					end if;
				end loop;
				
				begin
				if (w_vetor_w_ctb_razao_w.count > 0) then
					forall j in  w_vetor_w_ctb_razao_w.first..w_vetor_w_ctb_razao_w.last
						insert  into w_ctb_razao_ifrs values w_vetor_w_ctb_razao_w(j);
						commit;
					w_vetor_w_ctb_razao_w.delete;
					nr_vetor_w	:= 0;
				end if;
				exception when others then
					ds_erro_w	:= sqlerrm(SQLSTATE);
					w_vetor_w_ctb_razao_w.delete;
					nr_vetor_w	:= 0;
					CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W='|| ds_erro_w );
				end;
				end loop;
				close c03;
			end if;
		end loop;
		
		begin
		if (w_vetor_w_ctb_razao_w.count > 0) then
			forall m in w_vetor_w_ctb_razao_w.first..w_vetor_w_ctb_razao_w.last
				insert into w_ctb_razao_ifrs values w_vetor_w_ctb_razao_w(m);
				commit;
			w_vetor_w_ctb_razao_w.delete;
			nr_vetor_w	:= 0;
		end if;
		exception when others then
			ds_erro_w	:= sqlerrm(SQLSTATE);
			w_vetor_w_ctb_razao_w.delete;
			nr_vetor_w	:= 0;
			CALL wheb_mensagem_pck.exibir_mensagem_abort(184609,'DS_ERRO_W='|| ds_erro_w );
		end;
		end loop;
		close c02;
		end;
	end if;
end loop;
end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_razao_ifrs ( cd_empresa_p ctb_mes_ref.cd_empresa%type, dt_inicial_p ctb_movto_ifrs.dt_movimento%type, dt_final_p ctb_movto_ifrs.dt_movimento%type, cd_estab_p ctb_saldo_ifrs.cd_estabelecimento%type, nr_seq_conta_ifrs_p text, cd_classificacao_p ctb_saldo_ifrs.cd_classificacao%type, cd_centro_custo_p text, nm_usuario_p w_ctb_razao_ifrs.nm_usuario%type, ie_valor_p text, cd_classif_inic_p ctb_saldo_ifrs.cd_classificacao%type, cd_classif_final_p ctb_saldo_ifrs.cd_classificacao%type, ie_centro_custo_p conta_contabil.ie_centro_custo%type, ie_ordenacao_p text, ie_contra_partida_p text, nr_seq_conta_ifrs_loc_p ctb_plano_conta_ifrs.nr_sequencia%type default null) FROM PUBLIC;

