-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_agendamento_proc (nr_ultmo_atendimento_p bigint, nr_seq_agendamento_p bigint) AS $body$
DECLARE

    /************************************************************
     *         COPIA DA PROCEDURE hd_inserir_proced_conta       *
     *         ------------------------------------------       *
     * Qualquer alteração nesta procedure deve ser validada na  *
     * procedure original.                                      *
     * Foi Excluido as consultas que retornam Médico.           *
     *                                                          *
     * Data: 23/09/2019 - Maxwell da Silva Oliveira             *
     *                                                          *
     ************************************************************
    */
    nm_usuario_w       varchar(255) := coalesce(wheb_usuario_pck.get_nm_usuario, 'TASY');
    nr_sequencia_w     bigint;
    cd_procedimento_w  bigint := 0;
    ie_origem_proced_w smallint := NULL;

    nr_seq_atepacu_w      bigint := 0;
    nr_seq_proc_interno_w bigint := 0;
    cd_convenio_w         bigint := 0;
    cd_categoria_w        bigint := 0;
    cd_pessoa_fisica_w    bigint := 0;
    dt_ent_unidade_w      timestamp := clock_timestamp();

    qt_registros_w       bigint;
    cd_doenca_cid_w      varchar(10);
    ie_gerar_w           varchar(1);
    qt_cid_w             bigint;
    cd_estabelecimento_w bigint;

    ie_tipo_atendimento_w smallint;

    nr_seq_classificacao_w bigint;

    ie_tipo_convenio_w  smallint;
    ie_paciente_agudo_w varchar(1);

    ie_tipo_hemodialise_w varchar(15);
    nr_seq_queixa_regra_w queixa_paciente.nr_sequencia%TYPE;
    nr_seq_queixa_atend_w queixa_paciente.nr_sequencia%TYPE;

    c01 CURSOR FOR
        SELECT a.cd_procedimento,
               a.ie_origem_proced,
               a.nr_seq_proc_interno,
               a.cd_doenca_cid,
               a.nr_seq_queixa
          FROM hd_gerar_proced_conta a
         WHERE coalesce(ie_autorizacao, 'N') = 'S'
              --upper(a.ie_forma_geracao) = upper(ie_forma_geracao_p)
           AND upper(a.ie_situacao) = upper('A')
              --           AND ((ie_tipo_dialise = ie_tipo_dialise_p) OR (ie_tipo_dialise IS NULL))
           AND ((ie_tipo_hemodialise = ie_tipo_hemodialise_w) OR (coalesce(ie_tipo_hemodialise::text, '') = ''))
           AND ((ie_tipo_convenio = ie_tipo_convenio_w) OR (coalesce(ie_tipo_convenio::text, '') = ''))
           AND ((cd_convenio = cd_convenio_w) OR (coalesce(cd_convenio::text, '') = ''))
           AND ((ie_tipo_atendimento = ie_tipo_atendimento_w) OR (coalesce(ie_tipo_atendimento::text, '') = ''))
           AND ((coalesce(a.ie_tipo, 'A') = ie_paciente_agudo_w) OR (coalesce(a.ie_tipo, 'A') = 'A'))
           AND (ie_tratamento IN (SELECT x.ie_tratamento
                   FROM paciente_tratamento x
                  WHERE x.cd_pessoa_fisica = cd_pessoa_fisica_w
                    AND trunc(x.dt_inicio_tratamento) <= trunc(clock_timestamp())
                    AND (coalesce(x.dt_final_tratamento::text, '') = '' OR x.dt_final_tratamento >= trunc(clock_timestamp()))) OR (coalesce(ie_tratamento::text, '') = ''))
           AND (nr_seq_classificacao IN (SELECT x.nr_seq_classificacao
                   FROM hd_paciente_classif_sor x
                  WHERE x.cd_pessoa_fisica = cd_pessoa_fisica_w
                    AND (trunc(x.dt_inicio) <= trunc(clock_timestamp()) OR coalesce(x.dt_inicio::text, '') = '')
                    AND (coalesce(x.dt_fim::text, '') = '' OR x.dt_fim >= trunc(clock_timestamp()))) OR (ie_sem_classificacao = 'S' AND NOT EXISTS (SELECT x.nr_seq_classificacao
                     FROM hd_paciente_classif_sor x
                    WHERE x.cd_pessoa_fisica = cd_pessoa_fisica_w
                      AND (trunc(x.dt_inicio) <= trunc(clock_timestamp()) OR coalesce(x.dt_inicio::text, '') = '')
                      AND (coalesce(x.dt_fim::text, '') = '' OR x.dt_fim >= trunc(clock_timestamp())))) OR (coalesce(nr_seq_classificacao::text, '') = '' AND coalesce(ie_sem_classificacao,'N') = 'N'))
           AND (coalesce(a.ie_necessita_vaga_esp, 'N') =
                coalesce((SELECT MAX(s.ie_necessita_vaga_esp)
                      FROM hd_paciente_classif_sor    c,
                           hd_classificacao_sorologia s
                     WHERE c.cd_pessoa_fisica = cd_pessoa_fisica_w
                       AND c.nr_seq_classificacao = s.nr_sequencia
                       AND (trunc(c.dt_inicio) <= trunc(clock_timestamp()) OR coalesce(c.dt_inicio::text, '') = '')
                       AND (coalesce(c.dt_fim::text, '') = '' OR c.dt_fim >= trunc(clock_timestamp()))),
                    'N') OR coalesce(a.ie_necessita_vaga_esp, 'N') = 'N');


BEGIN

    BEGIN
        SELECT MAX(obter_convenio_atendimento(a.nr_atendimento)),
               MAX(obter_dados_categ_conv(a.nr_atendimento, 'CA')),
               MAX(a.cd_pessoa_fisica),
               MAX(cd_estabelecimento),
               MAX(ie_tipo_atendimento),
               MAX(nr_seq_classificacao),
               MAX(obter_tipo_convenio(obter_convenio_atendimento(a.nr_atendimento))),
               MAX(nr_seq_queixa)
          INTO STRICT cd_convenio_w,
               cd_categoria_w,
               cd_pessoa_fisica_w,
               cd_estabelecimento_w,
               ie_tipo_atendimento_w,
               nr_seq_classificacao_w,
               ie_tipo_convenio_w,
               nr_seq_queixa_atend_w
          FROM atendimento_paciente a
         WHERE a.nr_atendimento = nr_ultmo_atendimento_p;
        SELECT coalesce(MAX(ie_paciente_agudo), 'N')
          INTO STRICT ie_paciente_agudo_w
          FROM paciente_tratamento
         WHERE nr_sequencia = (SELECT MAX(nr_sequencia)
                                 FROM paciente_tratamento a
                                WHERE a.cd_pessoa_fisica = cd_pessoa_fisica_w
                                  AND coalesce(dt_final_tratamento::text, '') = '');

        OPEN c01;
        LOOP
            FETCH c01
                INTO cd_procedimento_w,
                     ie_origem_proced_w,
                     nr_seq_proc_interno_w,
                     cd_doenca_cid_w,
                     nr_seq_queixa_regra_w;
            EXIT WHEN NOT FOUND; /* apply on c01 */

            IF (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') AND (coalesce(cd_procedimento_w::text, '') = '') THEN
                SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, NULL, NULL, cd_procedimento_w, ie_origem_proced_w, NULL, clock_timestamp(), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
            END IF;

            ie_gerar_w := 'S';

            IF (cd_doenca_cid_w IS NOT NULL AND cd_doenca_cid_w::text <> '') THEN
                SELECT COUNT(*)
                  INTO STRICT qt_cid_w
                  FROM diagnostico_doenca   a,
                       atendimento_paciente b
                 WHERE a.nr_atendimento = b.nr_atendimento
                   AND cd_doenca = cd_doenca_cid_w
                   AND b.cd_pessoa_fisica = cd_pessoa_fisica_w;

                ie_gerar_w := 'N';

                IF (qt_cid_w > 0) THEN

                    ie_gerar_w := 'S';
                END IF;
            END IF;

            /*Verifica se o motivo do atendimento do paciente é o mesmo cadastrado na regra
            Aplicação Principal > Regra de geração de procedimento > Hemodiálise campo 'Motivo Atendimento'
            Caso existir e for diferênte do atendimento não lançar na conta. OS 1013657*/
            IF (ie_gerar_w = 'S') THEN
                IF (nr_seq_queixa_regra_w IS NOT NULL AND nr_seq_queixa_regra_w::text <> '') THEN
                    IF (nr_seq_queixa_regra_w <> coalesce(nr_seq_queixa_atend_w, 0)) THEN
                        ie_gerar_w := 'N';
                    END IF;
                END IF;
            END IF;

            /*Final - Geliard OS408308 */

            IF (ie_gerar_w = 'S') THEN
                /* ******  Grava as informações na tabela de procedimentos adicionais
                AGENDA_CONSULTA_PROC
                 */
                SELECT nextval('agenda_consulta_proc_seq') INTO STRICT nr_sequencia_w;

                -- dbms_outputput_line(' -- INSERT agenda_consulta_proc --');

                -- dbms_outputput_line('         **Seq  :' || nr_sequencia_w);

                -- dbms_outputput_line(' **proc_interno :' || nr_seq_proc_interno_w);
                INSERT INTO agenda_consulta_proc(dt_atualizacao,
                     nm_usuario,
                     dt_atualizacao_nrec,
                     nm_usuario_nrec,

                     nr_sequencia,
                     nr_seq_agenda,

                     cd_procedimento,
                     nr_seq_proc_interno,
                     ie_origem_proced,
                     ie_executar_proc)
                VALUES (clock_timestamp(),
                     nm_usuario_w,
                     clock_timestamp(),
                     nm_usuario_w,

                     nr_sequencia_w,
                     nr_seq_agendamento_p,

                     cd_procedimento_w,
                     nr_seq_proc_interno_w,
                     ie_origem_proced_w,
                     'N');
            END IF;

        END LOOP;
        CLOSE c01;
    END;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_agendamento_proc (nr_ultmo_atendimento_p bigint, nr_seq_agendamento_p bigint) FROM PUBLIC;

