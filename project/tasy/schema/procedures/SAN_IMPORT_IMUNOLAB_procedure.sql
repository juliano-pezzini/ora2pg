-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE san_import_imunolab ( cd_barra_p text, --Resultados.Amostra.ID
 cd_exame_integracao_p text, --Resultados.Amostra.Exame.ID
 ie_situacao_p text, --Resultados.Amostra.Situacao
 ds_resultado_p text, --Resultados.Amostra.Exame.Resultado
 ds_corte_p text, --Resultados.Amostra.Exame.Corte  ( nr_cutoff )
 ds_metodo_p text, --Resultados.Amostra.Exame.Metodo
 ds_lote_p text, --Resultados.Amostra.Exame.Lote
 dt_validade_p text, --Resultados.Amostra.Exame.Validade
 ds_leitura_p text, --Resultados.Amostra.Exame.Leitura
 ds_controle_p text, --Resultados.Amostra.Exame.Controle
 cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_exame_lote_w		bigint;
nr_seq_doacao_w			bigint;
nr_seq_exame_w			bigint;
dt_util_w			timestamp;
ds_resultado_w			varchar(255) := '';
ds_exame_valor_w		varchar(255);
ds_kit_w			varchar(20) := '';
nr_Seq_kit_w			bigint;
nr_seq_metodo_w			bigint;
ie_tipo_sangue_w		san_exame.ie_tipo_sangue%type;
ie_fator_rh_w			san_exame.ie_fator_rh%type;
ds_resultado_laborat_w		san_exame_realizado.ds_resultado%type;
ie_rh_w				varchar(1);
ie_abo_w			varchar(1);
cd_tipo_resultado_w   		san_exame.cd_tipo_resultado%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_tipo_sangue,
		a.ie_fator_rh,
		a.cd_tipo_resultado
	from 	san_exame a,
		san_exame_integracao b
	where	a.nr_sequencia = b.nr_seq_exame
	and	b.cd_exame_integracao = cd_exame_integracao_p
	and	b.cd_tipo_integracao = 6
	and (a.cd_estabelecimento = cd_estabelecimento_p or coalesce(a.cd_estabelecimento::text, '') = '')
	and	coalesce(a.ie_situacao, 'I') = 'A';


BEGIN
if (cd_barra_p IS NOT NULL AND cd_barra_p::text <> '') and (cd_exame_integracao_p IS NOT NULL AND cd_exame_integracao_p::text <> '') then

	select	max(c.nr_sequencia),
		max(c.nr_seq_doacao)
	into STRICT	nr_seq_exame_lote_w,
		nr_seq_doacao_w
	from	san_exame_realizado a,
		san_exame_lote c,
		san_doacao d,
		san_exame e
	where	a.nr_seq_exame_lote	= c.nr_sequencia
	and	d.nr_sequencia		= c.nr_seq_doacao
	and (lpad(d.cd_barras_integracao,20,'0') = rpad(cd_barra_p,20,' ')
	or	lpad(trim(both d.cd_barras_integracao),20,'0') = lpad(trim(both cd_barra_p),20,'0'))
	and	a.nr_seq_exame = e.nr_sequencia
	and	coalesce(a.dt_liberacao::text, '') = ''
	order by 1;

	if (coalesce(nr_seq_exame_lote_w,0) > 0) and (coalesce(nr_seq_doacao_w,0) > 0) then
		open C01;
		loop
		fetch C01 into
			nr_seq_exame_w,
			ie_tipo_sangue_w,
			ie_fator_rh_w,
			cd_tipo_resultado_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			if (ds_resultado_p IS NOT NULL AND ds_resultado_p::text <> '') then --Resultados.Amostra.Exame.Resultado
				begin
				
				ds_resultado_laborat_w := trim(both upper(ds_resultado_p));

				if (coalesce(ie_tipo_sangue_w,'N') = 'S') then --Resultado ABO.
					ds_resultado_laborat_w := upper(replace(ds_resultado_p,' ',''));								
					if (length(ds_resultado_laborat_w) in (2, 4, 9)) then --A+, B+, O+, ANEG, APOS, BNEG, APOSITIVO, ANEGATIVO
						ds_resultado_laborat_w := substr(ds_resultado_laborat_w,1,1);
						ds_resultado_w := ds_resultado_laborat_w;
					elsif (length(ds_resultado_laborat_w) in (3, 5, 10)) then --AB+, AB-, ABNEG, ABPOS, ABPOSITIVO, ABNEGATIVO
						ds_resultado_laborat_w := substr(ds_resultado_laborat_w,1,2);
						ds_resultado_w := ds_resultado_laborat_w;
					end if;
				elsif (coalesce(ie_fator_rh_w,'N') = 'S') then -- Fator de RH ( + , - )
					ds_resultado_laborat_w := upper(replace(ds_resultado_p,' ',''));					    	
					if (length(ds_resultado_laborat_w) in (2, 4, 9)) then --A+, B+, O+, ANEG, APOS, BNEG, APOSITIVO, ANEGATIVO
						ds_resultado_laborat_w := substr(ds_resultado_laborat_w,2,9);
						ds_resultado_w := ds_resultado_laborat_w;
					elsif (length(ds_resultado_laborat_w) in (3, 5, 10)) then --AB+, AB-, ABNEG, ABPOS, ABPOSITIVO, ABNEGATIVO
						ds_resultado_laborat_w := substr(ds_resultado_laborat_w,3,10);
						ds_resultado_w := ds_resultado_laborat_w;
					end if;
					select 	CASE WHEN ds_resultado_laborat_w='NEG' THEN  '-' WHEN ds_resultado_laborat_w='POS' THEN  '+'  ELSE ds_resultado_laborat_w END
					into STRICT	ds_resultado_laborat_w
					;
					ds_resultado_w := ds_resultado_laborat_w;
				end if;
				
				if ( coalesce(ds_resultado_w::text, '') = '' or (coalesce(ie_tipo_sangue_w,'N') = 'N' and coalesce(ie_fator_rh_w,'N') = 'N') or ((ds_resultado_w IS NOT NULL AND ds_resultado_w::text <> '') and cd_tipo_resultado_w = 1356 )) then
					select	b.ds_valor_tasy
						into STRICT	ds_resultado_w
					from 	san_tabela_integracao a,
						san_tabela_item_integ_imp b
					where	a.nr_sequencia = b.nr_seq_tabela
					and	a.nr_seq_proj_xml = 101830
					and	trim(both upper(b.ds_valor_integracao)) = ds_resultado_laborat_w
					and	a.ie_tabela = 'RED'
					and	coalesce(a.ie_situacao, 'I') = 'A'
					and	coalesce(b.ie_situacao, 'I') = 'A';
					
					if (coalesce(ie_tipo_sangue_w,'N') = 'N' and coalesce(ie_fator_rh_w,'N') = 'N') then
					
						select	max(b.nr_sequencia)
							into STRICT ds_exame_valor_w
						from	san_exame_realizado x,
							san_exame a,
							san_exame_valor b
						where	a.nr_sequencia = x.nr_seq_exame
						and 	x.nr_seq_exame = b.nr_seq_exame
						and 	x.nr_seq_exame = nr_seq_exame_w
						and 	x.nr_seq_exame_lote = nr_seq_exame_lote_w
						and 	b.ds_valor = to_char(ds_resultado_w)
						and 	coalesce(a.cd_tipo_resultado::text, '') = '';
						
						if (ds_exame_valor_w IS NOT NULL AND ds_exame_valor_w::text <> '') then
							ds_resultado_w := ds_exame_valor_w;
						end if;
					end if;

				end if;

				exception
				when others then
					insert into san_log_integracao(	nr_sequencia, cd_tipo, ds_erro,
							dt_atualizacao,	dt_atualizacao_nrec, dt_registro, nm_usuario,
							nm_usuario_nrec, nm_usuario_registro)
						values ( nextval('san_log_integracao_seq'), 2236, substr(wheb_mensagem_pck.get_texto(792659)||' '||ds_resultado_laborat_w||
							' cd_barra_p= '||cd_barra_p||' cd_exame_integracao_p= '||cd_exame_integracao_p||
							' nr_seq_exame_lote_w= '||nr_seq_exame_lote_w||' nr_seq_exame_w= '||nr_seq_exame_w||
							' Stack= '||substr(dbms_utility.format_call_stack,1,500),1,1000),
							clock_timestamp(), clock_timestamp(), clock_timestamp(), nm_usuario_p,
							nm_usuario_p, nm_usuario_p);
				end;
			end if;

			if (ds_metodo_p IS NOT NULL AND ds_metodo_p::text <> '') then --Resultados.Amostra.Exame.Metodo
				begin
				select 	c.nr_sequencia
				into STRICT	nr_seq_metodo_w
				from  	san_metodo_exame a,
					san_metodo_integracao b,
					san_exame_metodo_util c
				where 	a.nr_sequencia = b.nr_seq_metodo
				and     c.nr_seq_metodo = b.nr_seq_metodo
				and     c.nr_seq_exame = nr_seq_exame_w
				and   	trim(both upper(b.cd_metodo_integracao)) = trim(both upper(ds_metodo_p))
				and   	b.cd_tipo_integracao  = 6
				and	coalesce(a.ie_situacao, 'I') = 'A'
				and	coalesce(c.ie_padrao, 'N') = 'S';

				exception
				when others then
					insert into san_log_integracao(	nr_sequencia, cd_tipo, ds_erro,
							dt_atualizacao,	dt_atualizacao_nrec, dt_registro, nm_usuario,
							nm_usuario_nrec, nm_usuario_registro)
						values ( nextval('san_log_integracao_seq'), 2236, substr(wheb_mensagem_pck.get_texto(792705)||' '||ds_metodo_p||
							' cd_barra_p= '||cd_barra_p||' cd_exame_integracao_p= '||cd_exame_integracao_p||
							' nr_seq_exame_lote_w= '||nr_seq_exame_lote_w||' nr_seq_exame_w= '||nr_seq_exame_w||
							' Stack= '||substr(dbms_utility.format_call_stack,1,500),1,1000),
							clock_timestamp(), clock_timestamp(), clock_timestamp(), nm_usuario_p,
							nm_usuario_p, nm_usuario_p);
				end;
			end if;

			if (ds_lote_p IS NOT NULL AND ds_lote_p::text <> '') then --Resultados.Amostra.Exame.Lote
				begin
				select	nr_sequencia,
					substr(ds_kit,1,20)
				into STRICT 	nr_Seq_kit_w,
					ds_kit_w
				from	san_kit_exame
				where	nr_Seq_exame = nr_seq_exame_w
				and	trim(both upper(ds_lote_kit)) = trim(both upper(ds_lote_p))
				and	clock_timestamp() between dt_vigencia_ini and dt_vigencia_final
				and	coalesce(ie_situacao, 'I') = 'A'
        and ie_exame_interno = 'N';

				exception
				when others then
					insert into san_log_integracao(	nr_sequencia, cd_tipo, ds_erro,
							dt_atualizacao,	dt_atualizacao_nrec, dt_registro, nm_usuario,
							nm_usuario_nrec, nm_usuario_registro)
						values ( nextval('san_log_integracao_seq'), 2236, substr(wheb_mensagem_pck.get_texto(792706)||' '||ds_lote_p||
							' cd_barra_p= '||cd_barra_p||' cd_exame_integracao_p= '||cd_exame_integracao_p||
							' nr_seq_exame_lote_w= '||nr_seq_exame_lote_w||' nr_seq_exame_w= '||nr_seq_exame_w||
							' Stack= '||substr(dbms_utility.format_call_stack,1,500),1,1000),
							clock_timestamp(), clock_timestamp(), clock_timestamp(), nm_usuario_p,
							nm_usuario_p, nm_usuario_p);
				end;
			end if;

			if (dt_validade_p IS NOT NULL AND dt_validade_p::text <> '') then --Resultados.Amostra.Exame.Validade
				begin
				dt_util_w := to_date(dt_validade_p||' '||'23:59:59','dd/mm/yyyy hh24:mi:ss');
				exception
				when others then
					insert into san_log_integracao(	nr_sequencia, cd_tipo, ds_erro,
							dt_atualizacao,	dt_atualizacao_nrec, dt_registro, nm_usuario,
							nm_usuario_nrec, nm_usuario_registro)
						values ( nextval('san_log_integracao_seq'), 2236, substr(wheb_mensagem_pck.get_texto(792707)||' '||dt_validade_p||
							' cd_barra_p= '||cd_barra_p||' cd_exame_integracao_p= '||cd_exame_integracao_p||
							' nr_seq_exame_lote_w= '||nr_seq_exame_lote_w||' nr_seq_exame_w= '||nr_seq_exame_w||
							' Stack= '||substr(dbms_utility.format_call_stack,1,500),1,1000),
							clock_timestamp(), clock_timestamp(), clock_timestamp(), nm_usuario_p,
							nm_usuario_p, nm_usuario_p);
				end;
			end if;

			begin
				update	san_exame_realizado
				set	ds_resultado		= coalesce(ds_resultado_w, ds_resultado),
					nr_cutoff		= coalesce(to_number(ds_corte_p,'999999.9999'),nr_cutoff),
					ie_andamento		= CASE WHEN ie_situacao_p='BLO' THEN 'S'  ELSE 'N' END ,
					nr_seq_metodo		= coalesce(nr_seq_metodo_w, nr_seq_metodo),
					nr_kit_lote		= coalesce(nr_Seq_kit_w, nr_kit_lote),
					ds_lote_kit		= coalesce(ds_kit_w, ds_lote_kit),
					dt_vencimento_lote	= coalesce(dt_util_w, dt_vencimento_lote),
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					nr_densidade_otica	= coalesce(to_number(ds_leitura_p,'99999999999.9999'), nr_densidade_otica),
					ds_abs			= coalesce(ds_controle_p, ds_abs)
				where 	nr_seq_exame_lote	= nr_seq_exame_lote_w
				and	nr_seq_exame		= nr_seq_exame_w
				and	coalesce(dt_liberacao::text, '') = '';

				exception
				when others then
					insert into san_log_integracao(	nr_sequencia, cd_tipo, ds_erro,
							dt_atualizacao,	dt_atualizacao_nrec, dt_registro, nm_usuario,
							nm_usuario_nrec, nm_usuario_registro)
						values ( nextval('san_log_integracao_seq'), 2236, substr(wheb_mensagem_pck.get_texto(792708)||' '||
								' cd_barra_p= '||cd_barra_p||' cd_exame_integracao_p= '||cd_exame_integracao_p||
								' nr_seq_exame_lote_w= '||nr_seq_exame_lote_w||' nr_seq_exame_w= '||nr_seq_exame_w||
								' Stack= '||substr(dbms_utility.format_call_stack,1,500),1,1000),
							clock_timestamp(), clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p,
							nm_usuario_p);	
				end;
			end;
		end loop;
		close C01;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE san_import_imunolab ( cd_barra_p text, cd_exame_integracao_p text, ie_situacao_p text, ds_resultado_p text, ds_corte_p text, ds_metodo_p text, ds_lote_p text, dt_validade_p text, ds_leitura_p text, ds_controle_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

