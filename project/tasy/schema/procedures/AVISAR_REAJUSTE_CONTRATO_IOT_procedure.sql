-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE avisar_reajuste_contrato_iot ( cd_estabelecimento_p bigint) AS $body$
DECLARE

 
cd_pessoa_responsavel_w		varchar(10);
cd_pessoa_negoc_w		varchar(10);
qt_dias_vencer_w			integer;
nr_sequencia_w			bigint;
nr_seq_classif_w			bigint;
cd_contrato_w			varchar(20);
ds_objeto_contrato_w		varchar(255);
dt_inicio_vigencia_w		timestamp;
nm_usuario_w			varchar(255) := '';
nm_usuario_neg_w			varchar(15);
nm_contratado_w			varchar(80);
cd_setor_w			integer;
cd_setor_adicional_w		varchar(255);
nr_seq_contrato_w			bigint;
nm_usuario_lib_w			varchar(15);
nm_usuario_resp_w			varchar(15);
ie_avisa_venc_setor_w		varchar(1);
ie_aviso_vencimento_usuario_w	varchar(01);
ds_email_destino_w			varchar(2000);
ds_email_w			varchar(2000);
ds_tipo_contrato_w			varchar(200);
dt_inicio_w			timestamp;
ds_forma_renovacao_w		varchar(255);
vl_total_contrato_w			double precision;
ds_mensagem_w			varchar(4000);
ds_email_origem_w			varchar(255);
ds_condicao_pagamento_w		varchar(80);
ds_forma_pagamento_w		varchar(255);
ds_moeda_w			varchar(255);
vl_pagto_w			double precision;
qt_dias_diferenca_w		bigint;
qt_dias_interv_aviso_w		bigint;
ie_intervalo_w			bigint;
ie_gerar_w			varchar(1);
ds_periodo_reajuste_w		varchar(255);

c01 CURSOR FOR 
SELECT		a.cd_pessoa_resp, 
		a.cd_pessoa_negoc, 
		trunc(b.dt_inicio_vigencia - clock_timestamp()), 
		a.cd_contrato, 
		a.ds_objeto_contrato, 
		b.dt_inicio_vigencia, 
		substr(obter_razao_social(a.cd_cgc_contratado),1,80), 
		a.cd_setor, 
		a.nr_sequencia, 
		a.ie_avisa_venc_setor, 
		substr(obter_descricao_padrao('TIPO_CONTRATO','DS_TIPO_CONTRATO',a.nr_seq_tipo_contrato),1,200) ds_tipo_contrato, 
		a.dt_inicio, 
		substr(obter_valor_dominio(1061, a.ie_renovacao),1,255) ds_forma_renovacao, 
		a.vl_total_contrato, 
		substr(obter_desc_cond_pagto(a.cd_condicao_pagamento),1,80) ds_condicao_pagamento, 
		a.qt_dias_interv_aviso, 
		substr(obter_valor_dominio(1064, b.ie_periodo_reajuste),1,255) ds_periodo_reajuste 
from		contrato a, 
		Contrato_Regra_Pagto b 
where		a.nr_sequencia = b.nr_seq_contrato 
and		a.ie_situacao = 'A' 
and		a.cd_estabelecimento = cd_estabelecimento_p 
and		coalesce(a.ie_avisa_reajuste,'N') = 'S' 
and		trunc(trunc(b.dt_inicio_vigencia,'dd') - trunc(clock_timestamp(),'dd')) <= coalesce(b.qt_aviso_reajuste,0) 
and		trunc(b.dt_inicio_vigencia,'dd') >= trunc(clock_timestamp(),'dd') 
and		coalesce(b.dt_final_vigencia::text, '') = ''	 
and		(a.cd_pessoa_resp IS NOT NULL AND a.cd_pessoa_resp::text <> '');

c02 CURSOR FOR 
SELECT		distinct 
		coalesce(nm_usuario_lib,'X'), 
		ie_aviso_vencimento 
from		contrato_usuario_lib 
where		nr_seq_contrato = nr_seq_contrato_w 
and		coalesce(ie_aviso_vencimento, 'N') <> 'N';


BEGIN 
 
select	coalesce(substr(obter_dados_pf_pj('',cd_cgc,'M'),1,255),'X') 
into STRICT	ds_email_origem_w 
from	estabelecimento 
where	cd_estabelecimento = cd_estabelecimento_p;
 
if (ds_email_origem_w <> 'X') then 
	select	coalesce(substr(obter_dados_pf_pj_estab(cd_estabelecimento_p, '', cd_cgc, 'M'),1,255),'X') 
	into STRICT	ds_email_origem_w 
	from	estabelecimento 
	where	cd_estabelecimento = cd_estabelecimento_p;
end if;
 
 
open c01;
loop 
fetch c01 into 
	cd_pessoa_responsavel_w, 
	cd_pessoa_negoc_w, 
	qt_dias_vencer_w, 
	cd_contrato_w, 
	ds_objeto_contrato_w, 
	dt_inicio_vigencia_w, 
	nm_contratado_w, 
	cd_setor_w, 
	nr_seq_contrato_w, 
	ie_avisa_venc_setor_w, 
	ds_tipo_contrato_w, 
	dt_inicio_w, 
	ds_forma_renovacao_w, 
	vl_total_contrato_w, 
	ds_condicao_pagamento_w, 
	qt_dias_interv_aviso_w, 
	ds_periodo_reajuste_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
	 
	ie_gerar_w		:= 'S';
	/* 
	qt_dias_diferenca_w	:= trunc(trunc(dt_fim_w,'dd') - trunc(sysdate,'dd')); 
	ie_intervalo_w		:= trunc(mod(qt_dias_diferenca_w, qt_dias_interv_aviso_w)); 
	 
	if	(nvl(qt_dias_interv_aviso_w, 0) <> 0) and 
		(ie_intervalo_w <> 0) then 
 
		ie_gerar_w	:= 'N'; 
		 
	end if; 
	*/
 
	 
	if (ie_gerar_w = 'S') then 
	 
		nm_usuario_w		:= '';
		cd_setor_adicional_w	:= '';
			 
		select	coalesce(max(substr(obter_usuario_pessoa(cd_pessoa_responsavel_w),1,15)),'X') 
		into STRICT	nm_usuario_resp_w 
		from	contrato_usuario_lib 
		where	nr_seq_contrato = nr_seq_contrato_w 
		and	coalesce(ie_aviso_vencimento, 'N') in ('S','A') 
		and	nm_usuario_lib = substr(obter_usuario_pessoa(cd_pessoa_responsavel_w),1,15);
 
		if (nm_usuario_resp_w = 'X') then 
			select	coalesce(max(nm_usuario),'X') 
			into STRICT	nm_usuario_resp_w 
			from	usuario 
			where	cd_pessoa_fisica = cd_pessoa_responsavel_w 
			and		ie_situacao = 'A';
		end if;
			 
		select	coalesce(max(substr(obter_usuario_pessoa(cd_pessoa_negoc_w),1,15)),'X') 
		into STRICT	nm_usuario_neg_w 
		from	contrato_usuario_lib 
		where	nr_seq_contrato = nr_seq_contrato_w 
		and	coalesce(ie_aviso_vencimento, 'N') in ('S','A') 
		and	nm_usuario_lib = substr(obter_usuario_pessoa(cd_pessoa_negoc_w),1,15);
 
		if (nm_usuario_neg_w = 'X') then 
			select	coalesce(max(nm_usuario),'X') 
			into STRICT	nm_usuario_neg_w 
			from	usuario 
			where	cd_pessoa_fisica = cd_pessoa_negoc_w;
		end if;
		 
		select	max(substr(obter_valor_dominio(1062, ie_forma),1,255)), 
			max(substr(obter_desc_moeda(cd_moeda),1,255)), 
			max(vl_pagto) 
		into STRICT	ds_forma_pagamento_w, 
			ds_moeda_w, 
			vl_pagto_w 
		from	contrato_regra_pagto 
		where	nr_seq_contrato = nr_seq_contrato_w;
 
		select	coalesce(max(nm_usuario),'X') 
		into STRICT	nm_usuario_resp_w 
		from	usuario 
		where	nm_usuario	= nm_usuario_resp_w 
		and	ie_situacao	= 'A';
		 
		if (nm_usuario_resp_w <> 'X') then 
			nm_usuario_w 		:= substr(nm_usuario_w || ',' || nm_usuario_resp_w,1,255);
		end if;
 
		select	coalesce(max(nm_usuario),'X') 
		into STRICT	nm_usuario_neg_w 
		from	usuario 
		where	nm_usuario	= nm_usuario_neg_w 
		and	ie_situacao	= 'A';
		 
		if (nm_usuario_neg_w <> 'X') then 
			nm_usuario_w		:= substr(nm_usuario_w || ',' || nm_usuario_neg_w,1,255);
		end if;
 
		open c02;
		loop 
		fetch c02 into 
			nm_usuario_lib_w, 
			ie_aviso_vencimento_usuario_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
 
			if (nm_usuario_lib_w <> 'X') then 
				select	coalesce(max(nm_usuario),'X') 
				into STRICT	nm_usuario_lib_w 
				from	usuario 
				where	nm_usuario	= nm_usuario_lib_w 
				and	ie_situacao	= 'A';
			end if;
			 
			if (nm_usuario_lib_w <> 'X') and (position(nm_usuario_lib_w in coalesce(nm_usuario_w,'X')) = 0) then 
				if	((ie_aviso_vencimento_usuario_w = 'S') or (ie_aviso_vencimento_usuario_w = 'A')) then 
					nm_usuario_w := substr(nm_usuario_w || ',' || nm_usuario_lib_w,1,255);
				end if;
			end if;
			if	((ie_aviso_vencimento_usuario_w = 'E') or (ie_aviso_vencimento_usuario_w = 'A') and (coalesce(nm_usuario_lib_w,'X') <> 'X')) then 
				select	coalesce(substr(obter_dados_usuario_opcao(nm_usuario_lib_w,'E'),1,255),'X') 
				into STRICT	ds_email_w 
				;
				if (ds_email_w <> 'X') then 
					ds_email_destino_w := substr(ds_email_destino_w || ds_email_w || ';',1,2000);
				end if;
			end if;
		end loop;
		close c02;
 
		/* 
		if	(cd_setor_w is not null) and 
			(ie_avisa_venc_setor_w = 'S') then 
			cd_setor_adicional_w	:= cd_setor_w || ', '; 
		end if; 
		*/
 
 
		if (nm_usuario_w <> 'X') then 
			begin 
			select	nextval('comunic_interna_seq') 
			into STRICT	nr_sequencia_w 
			;
 
			select	obter_classif_comunic('F') 
			into STRICT	nr_seq_classif_w 
			;
 
			ds_mensagem_w	:= Substr(' Contrato:	' || cd_contrato_w || ' - ' || ds_objeto_contrato_w || chr(10) || chr(13) || 
						' Contratado:	' || nm_contratado_w || chr(13) || 
						' Tipo:		' || ds_tipo_contrato_w || chr(13) || 
						' Objeto do contrato: ' || ds_objeto_contrato_w || chr(13) || 
						' Data início contrato:	' || dt_inicio_w || chr(13) || 
						' Data início vigência(Reajuste):	' || dt_inicio_vigencia_w || chr(13) || 
						' Restando:	' || qt_dias_vencer_w || ' dias para o reajuste' || chr(13) || 
						' Periodicidade Reajuste: ' || ds_periodo_reajuste_w,1,4000);
			 
			insert into comunic_interna( 
				dt_comunicado, 
				ds_titulo, 
				ds_comunicado, 
				nm_usuario, 
				dt_atualizacao, 
				ie_geral, 
				nm_usuario_destino, 
				nr_sequencia, 
				ie_gerencial, 
				nr_seq_classif, 
				dt_liberacao, 
				ds_setor_adicional) 
			values (	clock_timestamp() + interval '1 days'/86400, 
				'Aviso de reajuste de contrato', 
				ds_mensagem_w, 
				'Tasy', 
				clock_timestamp(), 
				'N', 
				nm_usuario_w || ',', 
				nr_sequencia_w, 
				'N', 
				nr_seq_classif_w, 
				clock_timestamp(), 
				cd_setor_adicional_w);
			end;
			 
			 
			if (ds_email_destino_w IS NOT NULL AND ds_email_destino_w::text <> '') then 
				begin 
				if (substr(ds_email_destino_w,1,1) = ';') then 
					ds_email_destino_w := substr(ds_email_destino_w,2,255);
				end if;
				 
				CALL enviar_email(	'Aviso de reajuste de contrato', 
						ds_mensagem_w, 
						ds_email_origem_w, 
						ds_email_destino_w, 
						'Aviso_Tasy', 
						'A');
				end;
			end if;
		end if;
	end if;
	end;
end loop;
close c01;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE avisar_reajuste_contrato_iot ( cd_estabelecimento_p bigint) FROM PUBLIC;

