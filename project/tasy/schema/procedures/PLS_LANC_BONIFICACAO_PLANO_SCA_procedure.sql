-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_lanc_bonificacao_plano_sca ( nr_seq_segurado_p bigint, nr_seq_pessoa_proposta_p bigint, ie_acao_p text, nm_usuario_p text) AS $body$
DECLARE


ds_regra_w		varchar(150);
nr_seq_plano_w		bigint;
nr_seq_bonificacao_w	bigint;
qt_registros_w		bigint;
ie_tipo_contratacao_w	pls_plano.ie_tipo_contratacao%type;

C01 CURSOR FOR
SELECT	ds_regra,
		b.nr_seq_bonificacao
	from	pls_regra_lanc_automatico	a,
		pls_regra_lanc_aut_item		b
	where	b.nr_seq_regra	= a.nr_sequencia
	and	a.ie_evento	= 2
	and	a.ie_situacao	= 'A'
	and	b.ie_situacao	= 'A'
	and	a.ie_acao_regra	= ie_acao_p
	and	clock_timestamp() between coalesce(b.dt_inicio_vigencia,clock_timestamp()) and coalesce(b.dt_fim_vigencia,clock_timestamp())
	and	clock_timestamp() between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp())
	and	((a.ie_tipo_contratacao = ie_tipo_contratacao_w) or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
	and	((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(a.nr_seq_plano::text, '') = ''))
	and	((coalesce(a.nr_seq_sca::text, '') = '') or /* Verifica se o beneficiario possui o SCA vinculado */
		(a.nr_seq_sca in (SELECT x.nr_seq_plano
				from	pls_sca_vinculo x
				where	((ie_acao_p = '1' AND x.nr_seq_benef_proposta = nr_seq_pessoa_proposta_p)
					or ((ie_acao_p in ('3','4')) and (x.nr_seq_segurado = nr_seq_segurado_p))))));

BEGIN

nr_seq_plano_w	:= null;

if (ie_acao_p = '1') then
	select	max(nr_seq_plano)
	into STRICT	nr_seq_plano_w
	from	pls_proposta_beneficiario
	where	nr_sequencia	= nr_seq_pessoa_proposta_p;
elsif (ie_acao_p in ('3','4')) then
	select	max(nr_seq_plano)
	into STRICT	nr_seq_plano_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_p;
end if;

select	max(ie_tipo_contratacao)
into STRICT	ie_tipo_contratacao_w
from	pls_plano
where	nr_sequencia = nr_seq_plano_w;

open C01;
loop
fetch C01 into
	ds_regra_w,
	nr_seq_bonificacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_bonificacao_vinculo
	where	nr_seq_segurado	= nr_seq_segurado_p
	and	nr_seq_bonificacao	= nr_seq_bonificacao_w;
	
	if (qt_registros_w	= 0) then
		insert	into	pls_bonificacao_vinculo(	nr_sequencia, nr_seq_bonificacao, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_segurado)
			values (	nextval('pls_bonificacao_vinculo_seq'), nr_seq_bonificacao_w, clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_segurado_p);
	end if;
	end;
end loop;
close C01;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_lanc_bonificacao_plano_sca ( nr_seq_segurado_p bigint, nr_seq_pessoa_proposta_p bigint, ie_acao_p text, nm_usuario_p text) FROM PUBLIC;

