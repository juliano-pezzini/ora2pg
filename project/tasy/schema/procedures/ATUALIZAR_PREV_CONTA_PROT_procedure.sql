-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_prev_conta_prot (nr_atendimento_p bigint, nr_interno_conta_p bigint, dt_referencia_p timestamp) AS $body$
DECLARE


--Procedure chamada na geração da alta do paciente
ie_tipo_atendimento_w		bigint;
dt_prev_protocolo_w		timestamp;
qt_dias_previsao_w		bigint;
qt_dias_w			bigint;
qt_dia_util_w			bigint;
cd_estabelecimento_w		bigint;
nr_interno_conta_w		bigint;
cd_convenio_w			integer;
ie_regra_w			varchar(1);
dt_prev_conta_w			timestamp;

c01 CURSOR FOR
SELECT	qt_dias_previsao,
	dt_prev_conta,
	coalesce(ie_regra,'P')
from	regra_prev_conta_prot
where	cd_estabelecimento					= cd_estabelecimento_w
and	coalesce(ie_tipo_atendimento, ie_tipo_atendimento_w)		= ie_tipo_atendimento_w
and	coalesce(cd_convenio,coalesce( cd_convenio_w,0))			= coalesce( cd_convenio_w,0)
and (coalesce(ie_evento,'A') = 'A') --Alta do paciente
and	((coalesce(ie_regra,'P') = 'P') or ((dt_prev_conta IS NOT NULL AND dt_prev_conta::text <> '') and dt_prev_conta > dt_referencia_p))
order 	by ie_tipo_atendimento,
	coalesce(cd_convenio,0),
	dt_prev_conta desc;

c02 CURSOR FOR
SELECT	nr_interno_conta,
	cd_convenio_parametro
from	conta_paciente
where	nr_atendimento		= nr_atendimento_p;


BEGIN

select	b.ie_tipo_atendimento,
	b.cd_estabelecimento
into STRICT	ie_tipo_atendimento_w,
	cd_estabelecimento_w
from	atendimento_paciente b
where	b.nr_atendimento	= nr_atendimento_p;

open C02;
loop
fetch C02 into
	nr_interno_conta_w,
	cd_convenio_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin

	dt_prev_protocolo_w	:= null;
	qt_dias_previsao_w	:= null;
	open c01;
	loop
	fetch c01 into
		qt_dias_previsao_w,
		dt_prev_conta_w,
		ie_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	end loop;
	close c01;

	if (qt_dias_previsao_w IS NOT NULL AND qt_dias_previsao_w::text <> '') and (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') and (ie_regra_w = 'P') then

		dt_prev_protocolo_w	:= dt_referencia_p;
		qt_dias_w		:= 0;
		qt_dia_util_w		:= 0;
		while(qt_dia_util_w < qt_dias_previsao_w) loop
			if (OBTER_SE_DIA_UTIL(dt_prev_protocolo_w + qt_dias_w, cd_estabelecimento_w) = 'S') then
				qt_dia_util_w	:= qt_dia_util_w + 1;
			end if;
			qt_dias_w	:= qt_dias_w + 1;
		end loop;
		dt_prev_protocolo_w	:= dt_prev_protocolo_w + qt_dias_w;

	elsif (ie_regra_w = 'D') and (dt_prev_conta_w IS NOT NULL AND dt_prev_conta_w::text <> '') and (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then

		dt_prev_protocolo_w	:= dt_prev_conta_w;

	end if;

	update	conta_paciente
	set	dt_prev_protocolo	= dt_prev_protocolo_w
	where	nr_interno_conta	= nr_interno_conta_w;

	end;
end loop;
close C02;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_prev_conta_prot (nr_atendimento_p bigint, nr_interno_conta_p bigint, dt_referencia_p timestamp) FROM PUBLIC;

