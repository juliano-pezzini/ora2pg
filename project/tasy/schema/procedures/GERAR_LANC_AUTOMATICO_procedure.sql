-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lanc_automatico ( nr_cirurgia_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
qt_existe_w		integer;
nr_seq_tipo_curativo_w	bigint;
ie_tamanho_curativo_w	varchar(1);
nr_seq_proc_interno_w	bigint;
nr_seq_proc_interno_w1	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
nr_sequencia_w		bigint;
cd_equipamento_w		bigint;
dt_prescricao_w		timestamp;
ie_regra_lancamento_w	varchar(15);
ie_update_w		varchar(1) := 'N';
cd_material_w		bigint;
qt_material_w		double precision;
qt_material_ww		double precision;
qt_procedimento_w		double precision;
nr_seq_material_w		bigint;
nr_seq_conjunto_w		bigint;
nr_seq_dispositivo_w	bigint;
nr_sequencia_ww		bigint;
ie_inserir_update_w		varchar(1);
ie_forma_lancamento_w	varchar(15);
qt_curativo_w		double precision;
nr_seq_evento_w		bigint := null;
nr_seq_regra_pepo_w bigint;
qt_partici_cirurgia_w  integer;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_tipo_curativo, 
		ie_tamanho_curativo, 
		coalesce(qt_curativo,1) 
	from	pepo_curativo 
	where	nr_cirurgia = nr_cirurgia_p 
	and	coalesce(dt_lancamento_automatico::text, '') = '' 
	and (coalesce(ie_situacao,'A') = 'A');
	
C02 CURSOR FOR 
	SELECT	a.nr_seq_proc_interno, 
	  	a.cd_material, 
	  	coalesce(a.qt_material,1), 
		  coalesce(a.qt_procedimento,1), 
		  a.ie_forma_lancamento, 
			a.nr_sequencia 
	from	regra_lancamento_pepo a 
	where	a.ie_regra_lancamento = ie_regra_lancamento_w 
	and	coalesce(a.nr_seq_tipo_curativo, coalesce(nr_seq_tipo_curativo_w,0)) = coalesce(nr_seq_tipo_curativo_w,0) 
	and	coalesce(a.ie_tamanho_curativo, coalesce(ie_tamanho_curativo_w,0)) = coalesce(ie_tamanho_curativo_w,0) 
	and	coalesce(a.cd_equipamento, coalesce(cd_equipamento_w,0)) = coalesce(cd_equipamento_w,0) 
	and	coalesce(nr_seq_material, coalesce(nr_seq_material_w,0)) = coalesce(nr_seq_material_w,0) 
	and	coalesce(nr_seq_conjunto, coalesce(nr_seq_conjunto_w,0)) = coalesce(nr_seq_conjunto_w,0) 
	and	coalesce(nr_seq_dispositivo, coalesce(nr_seq_dispositivo_w,0)) = coalesce(nr_seq_dispositivo_w, 0) 
	and	coalesce(nr_seq_evento, coalesce(nr_seq_evento_w,0)) = coalesce(nr_seq_evento_w, 0) 
	and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)) 
	and	coalesce(ie_situacao,'A') = 'A' 
	order by	1;
	
	 
	 
 
C03 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		b.cd_equipamento, 
		a.nr_seq_material, 
		a.qt_material 
	from	equipamento_tricotomia b, 
		pepo_pele a 
	where	a.nr_seq_equip = b.nr_sequencia 
	and	a.nr_cirurgia = nr_cirurgia_p 
	and	a.ie_trico_antis = 'T' 
	and	coalesce(dt_lancamento_automatico::text, '') = '' 
	and (coalesce(a.ie_situacao,'A') = 'A');
	
C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_equipamento 
	from	equipamento_cirurgia 
	where	nr_cirurgia = nr_cirurgia_p 
	and	coalesce(dt_lancamento_automatico::text, '') = '' 
	and	coalesce(ie_situacao,'A') = 'A';
	
C05 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material, 
		qt_material 
	from	pepo_pele 
	where	nr_cirurgia = nr_cirurgia_p 
	and	ie_trico_antis = 'D' 
	and	coalesce(dt_lancamento_automatico::text, '') = '' 
	and (coalesce(ie_situacao,'A') = 'A');

C06 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_conjunto 
	from	cm_conjunto_cont 
	where	nr_cirurgia = nr_cirurgia_p 
	and	coalesce(dt_lancamento_automatico::text, '') = '' 
	and	coalesce(ie_situacao,'A') = 'A';

C07 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_dispositivo 
	from	atend_pac_dispositivo 
	where	nr_cirurgia = nr_cirurgia_p 
	and	coalesce(dt_lancamento_automatico::text, '') = '';
	
C08 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material, 
		qt_material 
	from	pepo_pele 
	where	nr_cirurgia = nr_cirurgia_p 
	and	ie_trico_antis = 'A' 
	and	coalesce(dt_lancamento_automatico::text, '') = '' 
	and (coalesce(ie_situacao,'A') = 'A');
	
c09 CURSOR FOR 
	SELECT 	nr_seq_evento, 
		nr_sequencia 
	from  	evento_cirurgia_paciente 
	where	coalesce(ie_situacao,'A')	= 'A' 
	and	nr_cirurgia 		= nr_cirurgia_p 
	and	coalesce(dt_lancamento_automatico::text, '') = '';
	
c10 CURSOR FOR 
	SELECT 	COUNT(1) 
	FROM (SELECT	cd_pessoa_fisica 
		 FROM  CIRURGIA_PARTICIPANTE a 
		 WHERE	coalesce(a.ie_situacao,'A')	= 'A' 
		 AND	a.nr_cirurgia 		= nr_cirurgia_p 
		 AND	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') 
		 AND	NOT EXISTS (SELECT	1 
				  FROM  	CIRURGIA_PARTICIPANTE b 
				  WHERE 	a.cd_pessoa_fisica = b.cd_pessoa_fisica 
				  AND  	(b.dt_lancamento_automatico IS NOT NULL AND b.dt_lancamento_automatico::text <> '') 
				  AND	  	coalesce(b.ie_situacao,'A')	= 'A' 
				  AND	  	b.nr_cirurgia 		= nr_cirurgia_p 
				  AND	  	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')) 
	GROUP BY CD_PESSOA_FISICA) alias7;
	--select	count(1) 
	--from  	CIRURGIA_PARTICIPANTE 
	--where 	dt_liberacao is not null 
	--and		nr_cirurgia 		= nr_cirurgia_p; 
BEGIN 
select	count(*) 
into STRICT	qt_existe_w 
from	regra_lancamento_pepo 
where	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)) 
and	coalesce(ie_situacao,'A') = 'A';
 
if (qt_existe_w > 0) and (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then 
 
	nr_seq_tipo_curativo_w 	:= null;
	ie_tamanho_curativo_w 	:= null;
	cd_equipamento_w	  	:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_sequencia_ww, 
		nr_seq_tipo_curativo_w, 
		ie_tamanho_curativo_w, 
		qt_curativo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		ie_regra_lancamento_w := 'CUR';
		 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, (qt_material_w * qt_curativo_w), qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	pepo_curativo 
				set	dt_lancamento_automatico = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_ww;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		 
		end;
	end loop;
	close C01;
	 
	nr_seq_tipo_curativo_w	:= null;
	ie_tamanho_curativo_w	:= null;
	cd_equipamento_w		:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
	 
	open C03;
	loop 
	fetch C03 into	 
		nr_sequencia_ww, 
		cd_equipamento_w, 
		nr_seq_material_w, 
		qt_material_ww;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin 
		ie_regra_lancamento_w := 'TRI';
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			--inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, qt_material_w, qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w); Daniel que pediu para alterar sem par√¢metro. 
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, coalesce(qt_material_ww,qt_material_w), qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	pepo_pele 
				set	dt_lancamento_automatico = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_ww;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		 
		end;
	end loop;
	close C03;
	 
	nr_seq_tipo_curativo_w 	:= null;
	ie_tamanho_curativo_w 	:= null;
	cd_equipamento_w	  	:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
 
	open C04;
	loop 
	fetch C04 into	 
		nr_sequencia_ww, 
		cd_equipamento_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin 
		ie_regra_lancamento_w := 'EQ';
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, qt_material_w, qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	equipamento_cirurgia 
				set	dt_lancamento_automatico = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_ww;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		 
		end;
	end loop;
	close C04;
	 
	nr_seq_tipo_curativo_w 	:= null;
	ie_tamanho_curativo_w 	:= null;
	cd_equipamento_w	  	:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
 
	open C05;
	loop 
	fetch C05 into	 
		nr_sequencia_ww, 
		nr_seq_material_w, 
		qt_material_ww;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		ie_regra_lancamento_w := 'DEG';
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, coalesce(qt_material_ww,qt_material_w), qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	pepo_pele 
				set	dt_lancamento_automatico = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_ww;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		 
		end;
	end loop;
	close C05;
	 
	 
	 
	nr_seq_tipo_curativo_w 	:= null;
	ie_tamanho_curativo_w 	:= null;
	cd_equipamento_w	  	:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
 
	open C08;
	loop 
	fetch C08 into	 
		nr_sequencia_ww, 
		nr_seq_material_w, 
		qt_material_ww;
	EXIT WHEN NOT FOUND; /* apply on C08 */
		begin 
		ie_regra_lancamento_w := 'ANT';
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, coalesce(qt_material_ww,qt_material_w), qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	pepo_pele 
				set	dt_lancamento_automatico = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_ww;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		 
		end;
	end loop;
	close C08;
	 
 
	nr_seq_tipo_curativo_w 	:= null;
	ie_tamanho_curativo_w 	:= null;
	cd_equipamento_w	  	:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
 
	open C06;
	loop 
	fetch C06 into	 
		nr_sequencia_ww, 
		nr_seq_conjunto_w;
	EXIT WHEN NOT FOUND; /* apply on C06 */
		begin 
		ie_regra_lancamento_w := 'CME';
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, qt_material_w, qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	cm_conjunto_cont 
				set	dt_lancamento_automatico	= clock_timestamp(), 
					nm_usuario			= nm_usuario_p, 
					dt_atualizacao			= clock_timestamp(), 
					nr_seq_regra_pepo		= nr_seq_regra_pepo_w 
				where	nr_sequencia 			= nr_sequencia_ww;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		 
		end;
	end loop;
	close C06;
 
	nr_seq_tipo_curativo_w 	:= null;
	ie_tamanho_curativo_w 	:= null;
	cd_equipamento_w	  	:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
 
	open C07;
	loop 
	fetch C07 into	 
		nr_sequencia_ww, 
		nr_seq_dispositivo_w;
	EXIT WHEN NOT FOUND; /* apply on C07 */
		begin 
		ie_regra_lancamento_w := 'DISP';
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, qt_material_w, qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	atend_pac_dispositivo 
				set	dt_lancamento_automatico = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_ww;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		 
		end;
	end loop;
	close C07;
	 
	nr_seq_tipo_curativo_w 	:= null;
	ie_tamanho_curativo_w 	:= null;
	cd_equipamento_w	  	:= null;
	nr_seq_material_w		:= null;
	nr_seq_dispositivo_w	:= null;
	 
	open C09;
	loop 
	fetch C09 into	 
		nr_seq_evento_w, 
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on C09 */
		begin 
		ie_regra_lancamento_w := 'TEM';
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_proc_interno_w, 
			cd_material_w, 
			qt_material_w, 
			qt_procedimento_w, 
			ie_forma_lancamento_w, 
			nr_seq_regra_pepo_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			cd_procedimento_w 	:= null;
			ie_origem_proced_w 	:= null;
			ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, qt_material_w, qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
			if (ie_inserir_update_w = 'S') then 
				update	evento_cirurgia_paciente 
				set	dt_lancamento_automatico 	= clock_timestamp() 
				where	nr_sequencia 			= nr_sequencia_w;
			end if;
			ie_update_w := 'S';
			end;
		end loop;
		close C02;
		end;
	end loop;
	close C09;
	 
	open C10;
	loop 
	fetch C10 into	 
		qt_partici_cirurgia_w;
	EXIT WHEN NOT FOUND; /* apply on C10 */
		begin 
		if (qt_partici_cirurgia_w > 0) then	 
			ie_regra_lancamento_w := 'PAR';
			open C02;
			loop 
			fetch C02 into	 
				nr_seq_proc_interno_w, 
				cd_material_w, 
				qt_material_w, 
				qt_procedimento_w, 
				ie_forma_lancamento_w, 
				nr_seq_regra_pepo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				cd_procedimento_w 	:= null;
				ie_origem_proced_w 	:= null;
				ie_inserir_update_w := inserir_lancamento_automatico(nr_prescricao_p, nr_cirurgia_p, nr_seq_proc_interno_w, cd_material_w, (qt_material_w * qt_partici_cirurgia_w), qt_procedimento_w, cd_local_estoque_p, nm_usuario_p, ie_forma_lancamento_w, ie_inserir_update_w, nr_seq_regra_pepo_w);
				if (ie_inserir_update_w = 'S') then 
					update	cirurgia_participante 
					set	dt_lancamento_automatico = clock_timestamp() 
					where	nr_cirurgia 		 = nr_cirurgia_p 
					and 	coalesce(ie_situacao,'A') 	 = 'A' 
					AND	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '');
				end if;
				ie_update_w := 'S';
				end;
			end loop;
			close C02;
		end if;	
		end;
	end loop;
	close C10;
 
	if (ie_update_w = 'S') then 
		update	cirurgia 
		set	dt_lanc_automatico = clock_timestamp() 
		where	nr_cirurgia = nr_cirurgia_p;
	end if;
	 
end if;	
 
end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lanc_automatico ( nr_cirurgia_p bigint, nr_prescricao_p bigint, cd_local_estoque_p bigint, nm_usuario_p text) FROM PUBLIC;

