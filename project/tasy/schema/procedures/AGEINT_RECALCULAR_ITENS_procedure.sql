-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_recalcular_itens ( nr_seq_ageint_p bigint, nm_usuario_p text, ds_erro_p INOUT text ) AS $body$
DECLARE


nr_seq_grupo_w				bigint;	
nr_seq_item_ageint_w		bigint;
nr_seq_proc_interno_w		bigint;
nr_seq_orcamento_w			bigint;
nr_seq_proc_int_assoc_w		bigint;
cd_proc_assoc_w				bigint;
ie_origem_proc_assoc_w		bigint;
nr_seq_proc_adic_w			bigint	:= 0;
ie_lado_w					varchar(1);
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
cd_plano_w					varchar(10);
cd_estabelecimento_w		smallint;
dt_agenda_w					timestamp;
nr_Seq_Agenda_W				agenda_integrada_item.nr_seq_agenda_Exame%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_proc_interno,
		nr_seq_grupo_selec,
		nr_seq_agenda_Exame,
		ie_lado
	from	agenda_integrada_item
	where	nr_seq_agenda_int	= nr_seq_ageint_p
	order by 1;
	
C03 CURSOR FOR
	SELECT	nr_Seq_proc_interno
	from	ageint_exame_associado
	where	nr_seq_ageint_item	= nr_seq_item_ageint_w
	order by 1;


BEGIN

ds_erro_p	:= '';

select	coalesce(max(nr_seq_orcamento),0),
		max(cd_estabelecimento),
		max(cd_convenio),
		max(cd_categoria),
		max(cd_plano)
into STRICT	nr_seq_orcamento_w,
		cd_estabelecimento_w,
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w
from	agenda_integrada
where	nr_sequencia	= nr_seq_ageint_p;

if (nr_seq_orcamento_w = 0) then
	open C01;
	loop
	fetch C01 into	
		nr_seq_item_ageint_w,
		nr_seq_proc_interno_w,
		nr_seq_grupo_w,
		nr_seq_Agenda_w,
		ie_lado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		delete	FROM ageint_itens_adicionais
		where	nr_seq_ageint_item	= nr_seq_item_ageint_w;
		
		delete	FROM ageint_exame_associado
		where	nr_seq_ageint_item	= nr_seq_item_ageint_w;
		
		CALL ageint_gerar_proc_assoc(nr_seq_ageint_p, nr_seq_item_ageint_w, nr_seq_proc_interno_w, nm_usuario_p, nr_seq_grupo_w);	
		
		if (nr_seq_Agenda_w > 0) then
			open C03;
			loop
			fetch C03 into	
				nr_seq_proc_int_assoc_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				
				if (nr_seq_proc_int_assoc_w IS NOT NULL AND nr_seq_proc_int_assoc_w::text <> '') then
					select 	max(hr_inicio)
					into STRICT	dt_agenda_w
					from	agenda_paciente
					where	nr_sequencia	= nr_Seq_Agenda_W;

					SELECT * FROM obter_proc_tab_interno_conv(
						nr_seq_proc_int_assoc_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_proc_assoc_w, ie_origem_proc_assoc_w, null, dt_agenda_w, null, null, null, null, null, null, null, null) INTO STRICT cd_proc_assoc_w, ie_origem_proc_assoc_w;
				end if;
				
				select	coalesce(max(nr_seq_Agenda),0) + 1
				into STRICT	nr_seq_proc_Adic_w
				from	agenda_paciente_proc
				where	nr_sequencia	= nr_seq_Agenda_w;
				
				insert into agenda_paciente_proc(nr_sequencia,
					nr_seq_agenda,
					dt_Atualizacao,
					nm_usuario,
					cd_procedimento,
					ie_origem_proced,
					nr_seq_proc_interno,
					nr_seq_agenda_princ,
					ie_lado,
					qt_procedimento)
				values (nr_seq_agenda_w,
					nr_seq_proc_Adic_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_proc_assoc_w,
					ie_origem_proc_assoc_w,
					nr_seq_proc_int_assoc_w,
					nr_seq_agenda_w,
					ie_lado_w,
					1);
				end;
			end loop;
			close C03;
		end if;
		end;
	end loop;
	close C01;

else
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(281353,null);
end if;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_recalcular_itens ( nr_seq_ageint_p bigint, nm_usuario_p text, ds_erro_p INOUT text ) FROM PUBLIC;

