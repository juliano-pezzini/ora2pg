-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_protocolo_conta ( nr_seq_prestador_p bigint, nr_seq_congenere_p bigint, dt_base_venc_p timestamp, ie_tipo_guia_p text, dt_mes_competencia_p timestamp, dt_protocolo_p timestamp, nr_protocolo_prestador_p text, nr_seq_protocolo_p bigint, qt_contas_informadas_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_recebimento_p timestamp, qt_contas_inf_p bigint, vl_cobrado_manual_p pls_protocolo_conta.vl_cobrado_manual%type, dt_competencia_prot_p INOUT timestamp, ds_tipo_erro_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE


ds_erro_w			varchar(255);
ds_aux_erro_w			varchar(255);
ds_regra_limite_w		varchar(255);
qt_permitida_w			varchar(20);
ie_tipo_guia_w			varchar(2);
ie_contab_fechado_w		varchar(2);
ie_vardtrefmaiorprot_w		varchar(2);
ie_vardtmesmomes_w		varchar(2);
ie_var_cons_protocolo_w		varchar(2);
ie_variacao_valor_w		varchar(2);
ie_variacao_qtd_w		varchar(2);
vl_permitido_w			numeric(20);
nr_seq_prestador_w		bigint;
nr_seq_protocolo_w		bigint;
dt_base_venc_w			timestamp;
dt_mes_competencia_w		timestamp;
dt_recebimento_w		timestamp;
dt_aceite_w			timestamp;
dt_fim_mes_w			timestamp := fim_mes(dt_mes_competencia_p);
ie_permite_gerar_protocolo_w	varchar(1);
ds_tipo_lote_contabil_w		varchar(255);
dt_mes_competencia_atual_w	timestamp;
ie_origem_protocolo_w		pls_protocolo_conta.ie_origem_protocolo%type;
ie_consiste_valor_w		varchar(1);
vl_procedimento_imp_w		pls_conta_proc.vl_procedimento_imp%type;
vl_material_imp_w		pls_conta_mat.vl_material_imp%type;
vl_retorno_w			pls_conta_mat.vl_material_imp%type;
nr_seq_lote_conta_w		pls_lote_protocolo_conta.nr_sequencia%type;
ie_apresentacao_w		pls_protocolo_conta.ie_apresentacao%type;

-- Validates if any information is gonna be changed
dt_mes_competencia_atual_ww	pls_protocolo_conta.dt_mes_competencia%type;
dt_protocolo_atual_w		pls_protocolo_conta.dt_protocolo%type;
nr_seq_prestador_atual_w	pls_protocolo_conta.nr_seq_prestador%type;
qt_contas_informadas_atual_w 	pls_protocolo_conta.qt_contas_informadas%type;
nr_seq_congenere_atual_w	pls_protocolo_conta.nr_seq_congenere%type;
dt_base_venc_atual_w		pls_protocolo_conta.dt_base_venc%type;
ie_tipo_guia_atual_w		pls_protocolo_conta.ie_tipo_guia%type;
nr_protocolo_prest_atual_w	pls_protocolo_conta.nr_protocolo_prestador%type;
dt_recebimento_atual_w		pls_protocolo_conta.dt_recebimento%type;
vl_cobrado_manual_atual_w	pls_protocolo_conta.vl_cobrado_manual%type;

dt_mes_competencia_ant_w	pls_protocolo_conta.dt_mes_competencia%type;
dt_protocolo_ant_w		pls_protocolo_conta.dt_protocolo%type;
nr_seq_prestador_ant_w		pls_protocolo_conta.nr_seq_prestador%type;
qt_contas_informadas_ant_w 	pls_protocolo_conta.qt_contas_informadas%type;
nr_seq_congenere_ant_w		pls_protocolo_conta.nr_seq_congenere%type;
dt_base_venc_ant_w		pls_protocolo_conta.dt_base_venc%type;
ie_tipo_guia_ant_w		pls_protocolo_conta.ie_tipo_guia%type;
nr_protocolo_prest_ant_w	pls_protocolo_conta.nr_protocolo_prestador%type;
dt_recebimento_ant_w		pls_protocolo_conta.dt_recebimento%type;
vl_cobrado_manual_ant_w		pls_protocolo_conta.vl_cobrado_manual%type;


BEGIN
/*askono*/

/* --Previous code
select	nvl(nr_seq_prestador,0),
	dt_base_venc,
	nvl(ie_tipo_guia,0),
	dt_mes_competencia
into	nr_se_prestador_w,
	dt_base_venc_w,
	ie_tipo_guia_w,
	dt_mes_competencia_w
from	pls_protocolo_conta
where	nr_sequencia	= nr_seq_protocolo_p;
*/
/*
nr_seq_prestador_w	:= nr_seq_prestador_p;
dt_base_venc_w		:= dt_base_venc_p;
ie_tipo_guia_w		:= ie_tipo_guia_p;
dt_mes_competencia_w	:= dt_mes_competencia_p;   

-- Andre Seiji Kono    16/06/2011   OS 324929
-- Created the procedure below
*/
/*ds_tipo_erro_p - If it is an error(E) or just an alert(A) - If there is one or more
messages of the error type, it will be shown and then aborted*/
ds_tipo_erro_p	:= 'A';

begin
select	coalesce(max(a.dt_aceite),clock_timestamp())
into STRICT	dt_aceite_w
from	ptu_fatura	a
where	a.nr_seq_protocolo	= nr_seq_protocolo_p;
exception
when others then
	dt_aceite_w	:= clock_timestamp();
end;

dt_mes_competencia_w	:= pls_obter_dataref_prot_imp( 	nr_seq_prestador_p, 'D', dt_mes_competencia_p,
							dt_protocolo_p, dt_recebimento_p, dt_aceite_w, 
							ie_tipo_guia_p,nr_seq_protocolo_p, cd_estabelecimento_p);
dt_competencia_prot_p	:= dt_mes_competencia_w;

if (dt_mes_competencia_w <> dt_mes_competencia_p) then
	ds_regra_limite_w	:= wheb_mensagem_pck.get_texto(280557, 'DT_MES_COMPETENCIA_P=' || dt_mes_competencia_w);
end if;

if	((trunc(dt_protocolo_p,'dd') < trunc(to_date('01/01/1985','dd/mm/yyyy'),'dd')) and
	((dt_recebimento_p IS NOT NULL AND dt_recebimento_p::text <> '') and (to_char(dt_protocolo_p,'dd/mm/yy') <> '30/12/99'))) then
	begin
	ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280563);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

/* Consistenc of the date in comparison with today's date
*/
ie_var_cons_protocolo_w	:=  obter_valor_param_usuario(1208, 33, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);
if (coalesce(ie_var_cons_protocolo_w,'N') <> 'N') then

	if	((trunc(dt_recebimento_p,'dd') > trunc(clock_timestamp(),'dd')) and
		((dt_recebimento_p IS NOT NULL AND dt_recebimento_p::text <> '') and (to_char(dt_recebimento_p,'dd/mm/yyyy') <> '  /  /    '))) then
		begin
		ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280565);
			if (coalesce(ie_var_cons_protocolo_w,'N') = 'S') then
				ds_tipo_erro_p	:= 'E';
			end if;
		exception
		when others then
			goto final;
		end;
	end if;
end if;

if	((trunc(dt_recebimento_p,'dd')  < trunc(to_date('01/01/1985','dd/mm/yyyy'),'dd')) and
	((dt_recebimento_p IS NOT NULL AND dt_recebimento_p::text <> '') and (to_char(dt_recebimento_p,'dd/mm/yyyy') <> '  /  /    '))) then
	begin
	ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280566);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

ie_var_cons_protocolo_w	:=  obter_valor_param_usuario(1208, 34, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);

if (ie_var_cons_protocolo_w = 'S') and (coalesce(nr_protocolo_prestador_p,'X') <> 'X') then
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_protocolo_w
	from   	pls_protocolo_conta
	where 	nr_protocolo_prestador 	= nr_protocolo_prestador_p
	and	nr_seq_prestador 	= nr_seq_prestador_p
	--and	ie_tipo_guia 		= ie_tipo_guia_p
	and	nr_sequencia		<> nr_seq_protocolo_p
	and	((ie_status		<> 4) or (coalesce(ie_status::text, '') = ''))
	and	ie_situacao in ('D','T');
	
	if (nr_seq_protocolo_w > 0) then
		begin
		ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280567, 'NR_SEQ_PROTOCOLO_P=' || nr_seq_protocolo_w);
		ds_tipo_erro_p	:= 'E';
		exception
		when others then
			goto final;
		end;
	end if;
end if;

if (coalesce(nr_seq_prestador_p , 0)	<> 0  and coalesce(nr_seq_congenere_p ,0) 	<> 0) then
	begin
	ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280569);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

if (coalesce(nr_seq_prestador_p , 0)	= 0  and coalesce(nr_seq_congenere_p ,0) 	= 0) then
	begin
	ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280570);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

if (coalesce(ie_tipo_guia_p,0) = 0) then
	begin
	ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280575);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

/* Felipe - 22-Sep-2011 - OS 364380
if	(fim_dia(trunc(dt_protocolo_p,'dd')) > fim_dia(sysdate)) then
	ds_erro_w	:= ds_erro_w || 'The protocol date can't be bigger than today's date. Please check!' || chr(13);
end if; */
ie_vardtrefmaiorprot_w	:= obter_valor_param_usuario(1208, 36, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);
ie_vardtmesmomes_w	:= obter_valor_param_usuario(1208, 35, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);

if (ie_VarDtRefMaiorProt_w = 'N') and (trunc(dt_mes_competencia_w,'month') > trunc(dt_protocolo_p,'month')) then
	begin
	ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280579);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

if (ie_VarDtMesmoMes_w = 'S') and (trunc(dt_mes_competencia_w,'month') <> trunc(dt_protocolo_p,'month')) then
	begin
	ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280580);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
elsif (ie_VarDtMesmoMes_w = 'R') and (trunc(dt_recebimento_p,'month') <> trunc(dt_protocolo_p,'month')) then
	begin
	ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280583);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
elsif (ie_VarDtMesmoMes_w = 'F') and (trunc(dt_mes_competencia_w,'month') <> trunc(dt_recebimento_p,'month')) then
	begin
	ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280588);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
elsif (ie_VarDtMesmoMes_w = 'T') then
	if (trunc(dt_mes_competencia_w,'month') <> trunc(dt_protocolo_p,'month')) then
		begin
		ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280580);
		ds_tipo_erro_p	:= 'E';
		exception
		when others then
			goto final;
		end;
	elsif (trunc(dt_mes_competencia_w,'month') <> trunc(dt_recebimento_p,'month')) then
		begin
		ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280588);
		ds_tipo_erro_p	:= 'E';
		exception
		when others then
			goto final;
		end;
	elsif (trunc(dt_recebimento_p,'month') <> trunc(dt_protocolo_p,'month')) then
		begin
		ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280583);
		ds_tipo_erro_p	:= 'E';
		exception
		when others then
			goto final;
		end;
	end if;	
end if;

select	pls_obter_se_mes_fechado(dt_mes_competencia_w,'C',cd_estabelecimento_p)
into STRICT	ie_contab_fechado_w
;

if (ie_contab_fechado_w	= 'S') then
	begin
	ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280591);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

select	max(ie_permite_gerar_protocolo)
into STRICT	ie_permite_gerar_protocolo_w
from	pls_parametro_contabil
where	cd_estabelecimento	= cd_estabelecimento_p;

if (coalesce(ie_permite_gerar_protocolo_w,'S') = 'N') then
		
	/* IMPORTANT, not it's allowed to change the observation, even when the protocol is in an accounting batch.
	ONLY THE OBSERVATION, if any other field is changed it should check the accounting batch normally
	WHEN INCLUDING NEW FIELDS, you should also include them in the comparison, OTHERWISE IT CAN GENERATE ACCOUNTING PROBLEMS */
	select	max(a.dt_mes_competencia),
		max(a.dt_protocolo),
		max(a.nr_seq_prestador),
		max(a.qt_contas_informadas),
		max(a.nr_seq_congenere),
		max(a.dt_base_venc),
		max(a.ie_tipo_guia),
		max(a.nr_protocolo_prestador),
		max(a.dt_recebimento),
		max(a.vl_cobrado_manual)
	into STRICT	dt_mes_competencia_ant_w,
		dt_protocolo_ant_w,
		nr_seq_prestador_ant_w,
		qt_contas_informadas_ant_w,
		nr_seq_congenere_ant_w,
		dt_base_venc_ant_w,
		ie_tipo_guia_ant_w,
		nr_protocolo_prest_ant_w,
		dt_recebimento_ant_w,
		vl_cobrado_manual_ant_w
	from	pls_protocolo_conta	a
	where	a.nr_sequencia		= nr_seq_protocolo_p;
	
	
	dt_mes_competencia_atual_ww	:= dt_mes_competencia_p;
	dt_protocolo_atual_w		:= dt_protocolo_p;
	nr_seq_prestador_atual_w	:= nr_seq_prestador_p;
	qt_contas_informadas_atual_w 	:= qt_contas_informadas_p;
	nr_seq_congenere_atual_w	:= nr_seq_congenere_p;
	dt_base_venc_atual_w		:= dt_base_venc_p;
	ie_tipo_guia_atual_w		:= ie_tipo_guia_p;
	nr_protocolo_prest_atual_w	:= nr_protocolo_prestador_p;
	dt_recebimento_atual_w		:= dt_recebimento_p;
	vl_cobrado_manual_atual_w	:= vl_cobrado_manual_p;
	

	/* IMPORTANT, not it's allowed to change the observation, even when the protocol is in an accounting batch.
	ONLY THE OBSERVATION, if any other field is changed it should check the accounting batch normally
	WHEN INCLUDING NEW FIELDS, you should also include them in the comparison, OTHERWISE IT CAN GENERATE ACCOUNTING PROBLEMS */
	if (coalesce(dt_mes_competencia_ant_w, clock_timestamp() - interval '10000 days')	!= coalesce(dt_mes_competencia_atual_ww, clock_timestamp() - interval '10000 days')) or (coalesce(dt_protocolo_ant_w, clock_timestamp() - interval '10000 days')	!= coalesce(dt_protocolo_atual_w, clock_timestamp() - interval '10000 days')) or (coalesce(nr_seq_prestador_ant_w, -1000)		!= coalesce(nr_seq_prestador_atual_w, -1000)) or (coalesce(qt_contas_informadas_ant_w, -1000)		!= coalesce(qt_contas_informadas_atual_w, -1000)) or (coalesce(nr_seq_congenere_ant_w, 0)			!= coalesce(nr_seq_congenere_atual_w, 0)) or (coalesce(dt_base_venc_ant_w, clock_timestamp() - interval '10000 days')	!= coalesce(dt_base_venc_atual_w, clock_timestamp() - interval '10000 days')) or (coalesce(ie_tipo_guia_ant_w, 'X')			!= coalesce(ie_tipo_guia_atual_w, 'X')) or (coalesce(nr_protocolo_prest_ant_w, -1000)		!= coalesce(nr_protocolo_prest_atual_w, -1000)) or (coalesce(dt_recebimento_ant_w, clock_timestamp() - interval '10000 days')	!= coalesce(dt_recebimento_atual_w, clock_timestamp() - interval '10000 days')) or (coalesce(vl_cobrado_manual_ant_w, 0)		!= coalesce(vl_cobrado_manual_atual_w, 0)) then
		
	
		/* Check if there is an accounting batch generated without being fragmented*/

		select	max(b.ds_tipo_lote_contabil)
		into STRICT	ds_tipo_lote_contabil_w
		from	lote_contabil		a,
			tipo_lote_contabil	b
		where	a.cd_tipo_lote_contabil	= b.cd_tipo_lote_contabil
		and	trunc(a.dt_referencia,'month') = trunc(dt_mes_competencia_w,'month')
		and	b.cd_tipo_lote_contabil = 41 /*HPMS - Medical production payment*/
		and	coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
		and	(a.dt_geracao_lote IS NOT NULL AND a.dt_geracao_lote::text <> '')
		and	not exists (	SELECT	1
						from	lote_contabil_parametro		c,
							lote_contabil_param_item	i
						where	c.nr_seq_parametro	= i.nr_seq_parametro
						and	c.nr_lote_contabil 	= i.nr_lote_contabil
						and	c.nr_lote_contabil 	= a.nr_lote_contabil
						
union all

						SELECT	1
						from	lote_contabil_parametro		c
						where	c.nr_lote_contabil 	= a.nr_lote_contabil
						and	coalesce(vl_parametro,0) 	<> 0
						and	c.nr_seq_parametro	= 1);
						
		if (coalesce(ds_tipo_lote_contabil_w::text, '') = '') then
			/* Check if there is an accounting batch generated without being fragmented by date*/

			select	max(b.ds_tipo_lote_contabil)
			into STRICT	ds_tipo_lote_contabil_w
			from	lote_contabil		a,
				tipo_lote_contabil	b
			where	a.cd_tipo_lote_contabil	= b.cd_tipo_lote_contabil
			and	b.cd_tipo_lote_contabil = 40 /* HPMS Expenses - Medical production forecast */
			and	to_char(a.dt_referencia,'dd/mm/yy') = to_char(dt_fim_mes_w)
			and	coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
			and	(a.dt_geracao_lote IS NOT NULL AND a.dt_geracao_lote::text <> '');
			
			if (coalesce(ds_tipo_lote_contabil_w::text, '') = '') then
				select	max(b.ds_tipo_lote_contabil)
				into STRICT	ds_tipo_lote_contabil_w
				from	lote_contabil		a,
					tipo_lote_contabil	b
				where	a.cd_tipo_lote_contabil	= b.cd_tipo_lote_contabil
				and	b.cd_tipo_lote_contabil	in (22,42,43) /*  HPMS Expenses - Medical Accounts / HPMS - Co-participation Provision / HPMS - Billing Provision */
				and	trunc(a.dt_referencia,'month') = trunc(dt_mes_competencia_w,'month')
				and	coalesce(a.cd_estabelecimento, cd_estabelecimento_p) = cd_estabelecimento_p
				and	(a.dt_geracao_lote IS NOT NULL AND a.dt_geracao_lote::text <> '');
			end if;
		end if;
	
		if (ds_tipo_lote_contabil_w IS NOT NULL AND ds_tipo_lote_contabil_w::text <> '') then
			begin
			ds_erro_w	:= ds_erro_w || ds_regra_limite_w || wheb_mensagem_pck.get_texto(280595, 'DS_TIPO_LOTE_CONTABIL_P=' || ds_tipo_lote_contabil_w);
			ds_tipo_erro_p	:= 'E';
			exception
			when others then
				goto final;
			end;
		end if;
	end if;
end if;

SELECT * FROM pls_obter_glosa_producao_med(	nr_seq_protocolo_p, dt_protocolo_p, nr_seq_prestador_p, qt_contas_informadas_p, ie_tipo_guia_p, dt_recebimento_p, qt_contas_inf_p, ie_variacao_valor_w, ie_variacao_qtd_w, qt_permitida_w, vl_permitido_w) INTO STRICT ie_variacao_valor_w, ie_variacao_qtd_w, qt_permitida_w, vl_permitido_w;

if (ie_variacao_qtd_w	= 'QE') then
	begin
	ds_erro_w	:= wheb_mensagem_pck.get_texto(280598, 'QT_PERMITIDA_P=' || qt_permitida_w);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
elsif (ie_variacao_qtd_w	= 'QA') then
	begin
	ds_erro_w	:= wheb_mensagem_pck.get_texto(280606, 'QT_PERMITIDA_P=' || qt_permitida_w);
	ds_tipo_erro_p	:= 'E';
	exception
	when others then
		goto final;
	end;
end if;

select	max(dt_mes_competencia),
		max(ie_origem_protocolo),
		max(nr_seq_lote_conta),
		coalesce(max(ie_apresentacao),'A')
into STRICT	dt_mes_competencia_atual_w,
		ie_origem_protocolo_w,
		nr_seq_lote_conta_w,
		ie_apresentacao_w
from	pls_protocolo_conta
where	nr_sequencia	= nr_seq_protocolo_p;

if (vl_cobrado_manual_p > 0) then
	ie_consiste_valor_w	:= pls_obter_se_cons_vl_apre_prot(ie_origem_protocolo_w, ie_tipo_guia_p, ie_apresentacao_w);
	
	if (ie_consiste_valor_w = 'S') then
		select	coalesce(sum(a.vl_procedimento_imp), 0) -- Adjusted to check for mat too, because it wasn't checked.
		into STRICT	vl_procedimento_imp_w		
		from	pls_conta_proc	a,
			pls_conta	b
		where	a.nr_seq_conta		= b.nr_sequencia
		and	b.nr_seq_protocolo	= nr_seq_protocolo_p
		and	a.ie_status not in ('D','M');
		
		select	coalesce(sum(a.vl_material_imp), 0)
		into STRICT	vl_material_imp_w
		from 	pls_conta_mat	a,
			pls_conta	b
		where	a.nr_seq_conta		= b.nr_sequencia
		and	b.nr_seq_protocolo	= nr_seq_protocolo_p
		and	a.ie_status not in ('D','M');
		
		vl_retorno_w	:= coalesce(vl_procedimento_imp_w,0) + coalesce(vl_material_imp_w,0);	
		
		if (vl_retorno_w <> vl_cobrado_manual_p) then
			ds_erro_w := wheb_mensagem_pck.get_texto(682603,'VL_PROCOLO=' || vl_cobrado_manual_p || ';' || 'VL_CONTA=' || vl_retorno_w || ';' || 'NR_SEQ_PROT=' || nr_seq_protocolo_p || ';' || 'NR_SEQ_LOTE=' || nr_seq_lote_conta_w);
			ds_tipo_erro_p := 'E';
		end if;
	end if;
end if;

ds_aux_erro_w := pls_consiste_alt_dt_comp_prot(dt_mes_competencia_atual_w, dt_mes_competencia_p, ds_aux_erro_w, cd_estabelecimento_p, nm_usuario_p);
	
if (ds_aux_erro_w IS NOT NULL AND ds_aux_erro_w::text <> '') then
	ds_erro_w	:= ds_erro_w || ds_regra_limite_w || ds_aux_erro_w;
	ds_tipo_erro_p	:= 'E';
end if;

<<final>>

ds_erro_p	:= substr(ds_erro_w,1,length(ds_erro_w) );

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_protocolo_conta ( nr_seq_prestador_p bigint, nr_seq_congenere_p bigint, dt_base_venc_p timestamp, ie_tipo_guia_p text, dt_mes_competencia_p timestamp, dt_protocolo_p timestamp, nr_protocolo_prestador_p text, nr_seq_protocolo_p bigint, qt_contas_informadas_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_recebimento_p timestamp, qt_contas_inf_p bigint, vl_cobrado_manual_p pls_protocolo_conta.vl_cobrado_manual%type, dt_competencia_prot_p INOUT timestamp, ds_tipo_erro_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

