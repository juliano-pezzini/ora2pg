-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_ihc_pat ( nr_seq_claim_p bigint, nm_usuario_p text) AS $body$
DECLARE


			
cd_pessoa_fisica_w      pessoa_fisica.cd_pessoa_fisica%type;
nr_atendimento_w        atendimento_paciente.nr_atendimento%type;
cd_convenio_parametro_w conta_paciente.cd_convenio_parametro%type;
qt_peso_nasc_w          pessoa_fisica.qt_peso_nasc%type := null;
qt_dif_w                integer;
dt_nascimento_w         pessoa_fisica.dt_nascimento%type;
dt_entrada_w            atendimento_paciente.dt_entrada%type;
cd_estabelecimento_w    conta_paciente.cd_estabelecimento%type;
nr_account_w            ihc_claim.nr_account%type;
nr_records_w            ihc_claim.nr_sequencia%type;
nm_family_w				ihc_claim.nm_family%type;
nm_alias_family_w		ihc_claim.nm_family%type;
nm_first_w				ihc_claim.nm_first%type;
nm_second_w				ihc_claim.nm_second%type;
dt_birth_w				ihc_claim.dt_birth%type;
cd_convenio_w			ihc_claim.cd_fund_card%type;
cd_medicare_card_w		ihc_claim.cd_medicare_card%type;
cd_upi_w				ihc_claim.cd_upi%type := null;
ie_sexo_w				varchar(10);
ie_gender_w				ihc_claim.ie_gender%type;
nr_medical_record_w		ihc_claim.nr_medical_record%type;
nr_patient_ref_w		ihc_claim.nr_patient_ref%type := null;
nr_postcode_w			ihc_claim.nr_postcode%type;
insurance_type_w		convenio.ie_tipo_convenio%type;
nr_seq_person_name_w	bigint;


BEGIN


select	max(a.nr_atendimento),
		max(b.cd_convenio_parametro),
		max(c.cd_pessoa_fisica),
		max(c.dt_nascimento),
		max(c.ie_sexo),
		max(a.dt_entrada),
		max(b.cd_estabelecimento),
		max(d.nr_account),
		max(substr(somente_numero_char(coalesce(obter_compl_pf(c.cd_pessoa_fisica,1,'CEP'),CASE WHEN obter_se_pf_pj_estrangeiro(c.cd_pessoa_fisica,null)='S' THEN '8888'  ELSE '9999' END )),1,4)),
		max(c.nr_seq_person_name)
into STRICT		nr_atendimento_w,
		cd_convenio_parametro_w,
		cd_pessoa_fisica_w,
		dt_nascimento_w,
		ie_sexo_w,
		dt_entrada_w,
		cd_estabelecimento_w,
		nr_account_w,
		nr_postcode_w,
		nr_seq_person_name_w
from		atendimento_paciente a,
		conta_paciente b,
		pessoa_fisica c,
		ihc_claim d
where		a.nr_atendimento = b.nr_atendimento
and		c.cd_pessoa_fisica = a.cd_pessoa_fisica
and		b.nr_interno_conta = d.nr_account
and		d.nr_sequencia = nr_seq_claim_p;

qt_dif_w	:= dt_entrada_w - dt_nascimento_w;

select 	max(ie_tipo_convenio)
into STRICT 	insurance_type_w
from 	convenio
where 	cd_convenio = cd_convenio_parametro_w;

    SELECT Max(a.cd_usuario_convenio),
           Max((substr(a.cd_complemento, 1,1))::numeric )  
    INTO STRICT   cd_medicare_card_w, cd_upi_w 
    FROM   atend_categoria_convenio a, 
           convenio b , 
           ihc_claim d,
           conta_paciente c,
           atendimento_paciente x
    WHERE   a.cd_convenio = b.cd_convenio 
           and		c.nr_interno_conta = d.nr_account
           and    c.nr_atendimento = x.nr_atendimento
           and    a.nr_atendimento = x.nr_atendimento
           and		d.nr_sequencia = nr_seq_claim_p
           AND b.ie_tipo_convenio = 12;
           
    SELECT Max(a.cd_usuario_convenio), 
           Max(a.cd_complemento) 
    INTO STRICT   cd_convenio_w, nr_patient_ref_w 
    FROM  atend_categoria_convenio a, 
           convenio b ,
           ihc_claim d,
           conta_paciente c,
           atendimento_paciente x
    WHERE   a.cd_convenio = b.cd_convenio 
           and		c.nr_interno_conta = d.nr_account
           and    c.nr_atendimento = x.nr_atendimento
           and    a.nr_atendimento = x.nr_atendimento
           and		d.nr_sequencia = nr_seq_claim_p
           AND b.ie_tipo_convenio <> 12;

nm_family_w			:= pkg_name_utils.Get_person_name(nr_seq_person_name_w, cd_estabelecimento_w, 'familyName');
nm_alias_family_w	:= pkg_name_utils.Get_person_name(nr_seq_person_name_w, cd_estabelecimento_w, 'familyName', 'social');
nm_first_w			:= pkg_name_utils.Get_person_name(nr_seq_person_name_w, cd_estabelecimento_w, 'givenName', 'social');
nm_second_w			:= substr(get_formatted_person_name(cd_pessoa_fisica_w,'middleName',cd_estabelecimento_w),1,1);
dt_birth_w 			:= obter_data_nascto_pf(cd_pessoa_fisica_w);
nr_medical_record_w	:= coalesce(obter_prontuario_pf(cd_estabelecimento_w,cd_pessoa_fisica_w),0);

if (qt_dif_w < 29) then	
	qt_peso_nasc_w := obter_dados_pf(cd_pessoa_fisica_w,'KGN');
end if;

if (coalesce(nm_first_w::text, '') = '') then
  CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(959336), nm_usuario_p);
end if;

if (coalesce(nm_family_w::text, '') = '') then
  CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(959334), nm_usuario_p);
end if;

if (coalesce(ie_sexo_w::text, '') = '') then
	CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(302021) || ' (' || cd_pessoa_fisica_w || ')', nm_usuario_p);
else
	ie_gender_w := get_eclipse_conversion('IE_SEXO', ie_sexo_w, 'IHC', 'PAT', nr_account_w, ie_gender_w);
end if;

if (coalesce(dt_birth_w::text, '') = '') then
  CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(959332), nm_usuario_p);
elsif (dt_birth_w > clock_timestamp() and trunc(months_between(clock_timestamp(), dt_birth_w)/12) > 130) then
	CALL generate_inco_eclipse(nr_account_w, 3, obter_desc_expressao(959332), nm_usuario_p);
end if;

if (nr_medical_record_w = 0) then
  CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(580093), nm_usuario_p);
end if;

if (qt_dif_w < 29) and (coalesce(qt_peso_nasc_w::text, '') = '') then
  CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(509617), nm_usuario_p);
end if;

if (coalesce(nr_postcode_w::text, '') = '') then
	CALL generate_inco_eclipse(nr_account_w, 1, obter_desc_expressao(962181), nm_usuario_p);
end if;


select  count(nr_sequencia)
into STRICT    nr_records_w
from    eclipse_inco_account
where   nr_interno_conta = nr_account_w;

if (billing_i18n_pck.get_validate_eclipse() = 'N') and (nr_records_w = 0) then
	update	ihc_claim
	set     nr_postcode 		= nr_postcode_w,
			qt_admission_weight	= qt_peso_nasc_w,
			nm_alias_family 	= nm_alias_family_w,
			nm_alias_first 		= nm_first_w,
			dt_birth 			= dt_birth_w,
			nm_family 			= nm_family_w,
			nm_first 			= nm_first_w,
			cd_fund_card 		= cd_convenio_w,
			cd_upi 				= cd_upi_w,
			ie_gender 			= ie_gender_w,
			cd_medicare_card 	= cd_medicare_card_w,
			nr_medical_record 	= nr_medical_record_w,
			nr_patient_ref 		= nr_patient_ref_w,
			nm_second 			= nm_second_w,
			nm_usuario 			= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp(),
			dt_awareness        = dt_entrada_w
	where   nr_sequencia 		= nr_seq_claim_p;
end if;
				
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_ihc_pat ( nr_seq_claim_p bigint, nm_usuario_p text) FROM PUBLIC;

