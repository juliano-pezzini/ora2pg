-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE encaminhar_proc_aprov_compra ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, cd_cargo_p bigint, nm_usuario_p text, ds_obs_p text, cd_pessoa_fisica_p text, ie_encaminhado_limite_p text default null) AS $body$
DECLARE


nr_seq_processo_enc_w	bigint;					
nr_seq_processo_w		bigint;
nr_seq_proc_original_w		bigint;
dt_liberacao_w			timestamp;
cd_cargo_enc_w			bigint;	
cd_pessoa_fisica_w		varchar(10);
ie_tipo_doc_w			varchar(10);
cd_cargo_w			bigint;
qt_existe_aprovador_w		bigint;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_urgente_w			processo_aprov_compra.ie_urgente%type;
nr_documento_w			processo_aprov_compra.nr_documento%type;
ie_tipo_w			processo_aprov_compra.ie_tipo%type;
dt_documento_w			processo_aprov_compra.dt_documento%type;
nr_nivel_aprovacao_w		processo_aprov_resp.nr_nivel_aprovacao%type;
nr_seq_proc_original_ww		processo_aprov_compra.nr_seq_proc_original%type;
cd_processo_aprov_w		processo_aprov_resp.cd_processo_aprov%type;
ie_responsavel_w		processo_aprov_resp.ie_responsavel%type;
vl_minimo_w			processo_aprov_resp.vl_minimo%type;
vl_maximo_w			processo_aprov_resp.vl_maximo%type;
qt_minimo_aprovador_w		processo_aprov_resp.qt_minimo_aprovador%type;
nm_usuario_regra_w		processo_aprov_resp.nm_usuario_regra%type;
qt_itens_regra_w		processo_aprov_resp.qt_itens_regra%type;
qt_intervalo_regra_w		processo_aprov_resp.qt_intervalo_regra%type;
qt_nova_estrutura_w        	bigint;


nr_seq_proc_aprov_w	processo_aprov_compra.nr_seq_proc_aprov%type;

c01 CURSOR FOR
SELECT	nr_seq_proc_aprov,
	nr_seq_proc_original
from	processo_aprov_compra
where	nr_sequencia		= nr_seq_aprovacao_p
and		nr_seq_proc_aprov	> nr_seq_processo_p
order by nr_seq_proc_aprov;


BEGIN

if (coalesce(cd_cargo_p,0) > 0) then
	cd_cargo_w	:= cd_cargo_p;
end if;

if (cd_pessoa_fisica_p > '0') then
	cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;
	cd_cargo_w		:= '';
end if;
	
select	coalesce(nr_seq_proc_original, nr_seq_processo_p)
into STRICT	nr_seq_proc_original_w
from	processo_aprov_compra
where	nr_sequencia	= nr_seq_aprovacao_p
and	nr_seq_proc_aprov = nr_seq_processo_p;

select	coalesce(max(a.cd_cargo),0)
into STRICT	cd_cargo_enc_w
from	processo_aprov_compra a
where	nr_sequencia		= nr_seq_aprovacao_p
and	nr_seq_proc_aprov	= nr_seq_processo_p;

select	obter_estab_processo_aprov(nr_seq_aprovacao_p)
into STRICT	cd_estabelecimento_w
;

select	max(nr_seq_proc_aprov),
	max(dt_liberacao),
	max(ie_urgente),
	max(nr_documento),
	max(ie_tipo),
	max(dt_documento)
into STRICT	nr_seq_processo_w,
	dt_liberacao_w,
	ie_urgente_w,
	nr_documento_w,
	ie_tipo_w,
	dt_documento_w
from	processo_aprov_compra
where	nr_sequencia = nr_seq_aprovacao_p;

select obter_estrutura_aprovacao(nr_seq_processo_p, nr_documento_w)
into STRICT   qt_nova_estrutura_w
;

if (nr_seq_processo_w = nr_seq_processo_p) then
	
	select	max(nr_seq_proc_aprov) + 1
	into STRICT	nr_seq_processo_w
	from	processo_aprov_compra;
else
	begin
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_proc_aprov_w,
		nr_seq_proc_original_ww;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		if (qt_nova_estrutura_w > 0) then
		
			select	max(nr_nivel_aprovacao),
				max(cd_processo_aprov),
				max(ie_responsavel),
				max(vl_minimo),
				max(vl_maximo),
				max(qt_minimo_aprovador),
				max(nm_usuario_regra),
				max(qt_itens_regra),
				max(qt_intervalo_regra)
			into STRICT	nr_nivel_aprovacao_w,
				cd_processo_aprov_w,
				ie_responsavel_w,
				vl_minimo_w,
				vl_maximo_w,
				qt_minimo_aprovador_w,
				nm_usuario_regra_w,
				qt_itens_regra_w,
				qt_intervalo_regra_w
			from	processo_aprov_compra
			where	nr_seq_proc_aprov = coalesce(nr_seq_proc_original_ww, nr_seq_proc_aprov_w)
			and	nr_documento = nr_documento_w;
		else
			select	max(nr_nivel_aprovacao),
				max(cd_processo_aprov),
				max(ie_responsavel),
				max(vl_minimo),
				max(vl_maximo),
				max(qt_minimo_aprovador),
				max(nm_usuario_regra),
				max(qt_itens_regra),
				max(qt_intervalo_regra)
			into STRICT	nr_nivel_aprovacao_w,
				cd_processo_aprov_w,
				ie_responsavel_w,
				vl_minimo_w,
				vl_maximo_w,
				qt_minimo_aprovador_w,
				nm_usuario_regra_w,
				qt_itens_regra_w,
				qt_intervalo_regra_w
			from	processo_aprov_resp
			where	nr_sequencia = coalesce(nr_seq_proc_original_ww, nr_seq_proc_aprov_w);
		end if;
	
		select	max(nr_seq_proc_aprov) + 1
		into STRICT	nr_seq_processo_enc_w
		from	processo_aprov_compra;
		
		insert into processo_aprov_compra(
			NR_SEQUENCIA,
			NR_SEQ_PROC_APROV,
			DT_ATUALIZACAO,
			NM_USUARIO,
			CD_PESSOA_FISICA,
			CD_CARGO,
			DT_LIBERACAO,
			DT_DEFINICAO,
			IE_APROV_REPROV,
			IE_MOTIVO_REPROVACAO,
			DS_OBSERVACAO,
			NM_USUARIO_PARECER,
			NM_USUARIO_SOLIC_PARECER,
			DT_RESP_PARECER,
			DT_SOLIC_PARECER,
			CD_CARGO_ENC,
			NM_USUARIO_APROV,
			NM_USUARIO_NREC,
			IE_AUTOMATICO,
			IE_ENCAMINHADO_LIMITE,
			NR_SEQ_PROC_ORIGINAL,
			CD_ESTABELECIMENTO,
			IE_URGENTE,
			NR_DOCUMENTO,
			IE_TIPO,
			DT_DOCUMENTO,
			NR_NIVEL_APROVACAO,
			CD_PROCESSO_APROV,
			IE_RESPONSAVEL,
			VL_MINIMO,
			VL_MAXIMO,
			QT_MINIMO_APROVADOR,
			NM_USUARIO_REGRA,
			QT_ITENS_REGRA,
			QT_INTERVALO_REGRA)
		SELECT	NR_SEQUENCIA,
			nr_seq_processo_enc_w,
			DT_ATUALIZACAO,
			NM_USUARIO,
			CD_PESSOA_FISICA,
			CD_CARGO,
			DT_LIBERACAO,
			DT_DEFINICAO,
			IE_APROV_REPROV,
			IE_MOTIVO_REPROVACAO,
			DS_OBSERVACAO,
			NM_USUARIO_PARECER,
			NM_USUARIO_SOLIC_PARECER,
			DT_RESP_PARECER,
			DT_SOLIC_PARECER,
			CD_CARGO_ENC,
			NM_USUARIO_APROV,
			NM_USUARIO_NREC,
			IE_AUTOMATICO,
			IE_ENCAMINHADO_LIMITE,
			coalesce(nr_seq_proc_original_ww, nr_seq_proc_aprov_w),
			CD_ESTABELECIMENTO,
			IE_URGENTE,
			NR_DOCUMENTO,
			IE_TIPO,
			DT_DOCUMENTO,
			nr_nivel_aprovacao_w,
			cd_processo_aprov_w,
			ie_responsavel_w,
			vl_minimo_w,
			vl_maximo_w,
			qt_minimo_aprovador_w,
			nm_usuario_regra_w,
			qt_itens_regra_w,
			qt_intervalo_regra_w
		from	processo_aprov_compra
		where	nr_sequencia			= nr_seq_aprovacao_p
		and	nr_seq_proc_aprov = nr_seq_proc_aprov_w;
		
		update	log_processo_aprovacao
		set	nr_seq_proc_aprov = nr_seq_processo_enc_w
		where 	nr_seq_aprovacao  = nr_seq_aprovacao_p
		and     nr_seq_proc_aprov	= nr_seq_processo_w;
		
		update envio_email_compra_agrup
		set	nr_seq_proc_aprov = nr_seq_processo_enc_w
		where 	nr_seq_aprovacao  = nr_seq_aprovacao_p
		and     nr_seq_proc_aprov	= nr_seq_processo_w;
		
		delete	FROM processo_aprov_compra
		where	nr_sequencia  = nr_seq_aprovacao_p
		and	nr_seq_proc_aprov = nr_seq_proc_aprov_w;		
		end;
	end loop;
	close C01;

	select	max(nr_seq_proc_aprov) + 1
	into STRICT	nr_seq_processo_w
	from	processo_aprov_compra;
	
	end;
end if;

select	count(*)
into STRICT	qt_existe_aprovador_w
from	processo_aprov_compra
where	nr_sequencia = nr_seq_aprovacao_p
and (cd_cargo = cd_cargo_w
or	cd_pessoa_fisica = cd_pessoa_fisica_w)
and	ie_aprov_reprov = 'P';

if (qt_existe_aprovador_w = 0) then
	insert into processo_aprov_compra(
		nr_sequencia,
		nr_seq_proc_aprov,
		dt_atualizacao,
		nm_usuario,
		cd_cargo,
		dt_liberacao,
		ie_aprov_reprov,
		cd_cargo_enc,
		ds_observacao,
		cd_pessoa_fisica,
		ie_encaminhado_limite,
		nr_seq_proc_original,
		cd_estabelecimento,
		ie_urgente,
		nr_documento,
		ie_tipo,
		dt_documento,
		nr_nivel_aprovacao,
		cd_processo_aprov,
		ie_responsavel,
		vl_minimo,
		vl_maximo,
		qt_minimo_aprovador,
		nm_usuario_regra,
		qt_itens_regra,
		qt_intervalo_regra)
	values (	nr_seq_aprovacao_p,
		nr_seq_processo_w,
		clock_timestamp(),
		nm_usuario_p,
		cd_cargo_w,
		clock_timestamp(), 
		'P',
		CASE WHEN cd_cargo_enc_w=0 THEN null  ELSE cd_cargo_enc_w END ,
		ds_obs_p,
		cd_pessoa_fisica_w,
		ie_encaminhado_limite_p,
		nr_seq_proc_original_w,
		cd_estabelecimento_w,
		ie_urgente_w,
		nr_documento_w,
		ie_tipo_w,
		dt_documento_w,
		nr_nivel_aprovacao_w,
		cd_processo_aprov_w,
		ie_responsavel_w,
		vl_minimo_w,
		vl_maximo_w,
		qt_minimo_aprovador_w,
		nm_usuario_regra_w,
		qt_itens_regra_w,
		qt_intervalo_regra_w);

	select	substr(obter_tipo_doc_origem_proc(nr_seq_aprovacao_p),1,10)
	into STRICT	ie_tipo_doc_w
	;

	if (ie_tipo_doc_w in ('SC','CD','SN','SP','SR')) then
		CALL envia_email_encaminhar_solic(nr_seq_aprovacao_p,nr_seq_processo_w,cd_estabelecimento_w,nm_usuario_p);
	elsif (ie_tipo_doc_w = 'CC') then
		avisar_encaminhar_aprov_cot(nr_seq_aprovacao_p,nr_seq_processo_w,cd_estabelecimento_w,nm_usuario_p);
	elsif (ie_tipo_doc_w = 'OC') then
		avisar_encaminhar_aprov_oc(nr_seq_aprovacao_p,nr_seq_processo_w,cd_estabelecimento_w,nm_usuario_p);
	end if;
else
	update	processo_aprov_compra
	set	dt_liberacao = clock_timestamp()
	where	nr_sequencia = nr_seq_aprovacao_p
	and (cd_cargo = cd_cargo_w
	or	cd_pessoa_fisica = cd_pessoa_fisica_w)
	and	ie_aprov_reprov = 'P';
end if;

update	processo_aprov_compra
set	dt_definicao		= clock_timestamp(),
	ie_aprov_reprov		= 'E'
where	nr_sequencia		= nr_seq_aprovacao_p
and	nr_seq_proc_aprov	= nr_seq_processo_p;

CALL grava_hist_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p,nm_usuario_p);
		
CALL cancelar_email_pend_proc_aprov(nr_seq_aprovacao_p,nr_seq_processo_p);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE encaminhar_proc_aprov_compra ( nr_seq_aprovacao_p bigint, nr_seq_processo_p bigint, cd_cargo_p bigint, nm_usuario_p text, ds_obs_p text, cd_pessoa_fisica_p text, ie_encaminhado_limite_p text default null) FROM PUBLIC;

