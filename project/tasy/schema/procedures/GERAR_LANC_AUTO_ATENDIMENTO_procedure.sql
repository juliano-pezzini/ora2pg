-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lanc_auto_atendimento ( NR_ATENDIMENTO_P bigint, CD_LOCAL_ESTOQUE_P bigint, NR_SEQ_EVENTO_P bigint, NM_USUARIO_P text) AS $body$
DECLARE


nr_sequencia_w			bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_material_w			integer;
qt_lancamento_w			double precision;
ie_medico_atendimento_w		varchar(1);
ie_local_estoque_w			varchar(1);
cd_setor_atendimento_w		integer;
nr_seq_proc_paciente_w		bigint;
nr_seq_mat_atend_w		bigint;
cd_medico_w			varchar(10);
nr_seq_atepacu_w			bigint;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
dt_entrada_unidade_w		timestamp;
cd_unidade_medida_w		varchar(30);
cd_cgc_w			varchar(14);
nr_doc_convenio_w		varchar(20);
cd_Local_Estoque_w		smallint;
nr_atendimento_w			bigint;
cd_senha_w			varchar(20);
cd_atividade_prof_bpa_w		smallint;
cd_estabelecimento_w		integer;


C01 CURSOR FOR
SELECT	nr_sequencia,
	cd_procedimento,
	ie_origem_proced,
	cd_material,
	coalesce(qt_lancamento,0),
	ie_medico_atendimento,
	ie_local_estoque,
	obter_setor_atendimento(nr_atendimento)
from	atend_lanc_auto
where	nr_atendimento	= nr_atendimento_p
and	nr_seq_evento = nr_seq_evento_p
and	dt_inicio	<= clock_timestamp()
and	coalesce(dt_final, clock_timestamp()) >= clock_timestamp();


BEGIN
begin
select	a.cd_medico_resp,
	a.cd_convenio,
	a.cd_categoria,
	a.dt_entrada_unidade,
	a.nr_seq_atepacu,
	a.nr_doc_convenio,
	b.cd_cgc,
	a.nr_atendimento,
	a.cd_senha,
	b.cd_estabelecimento
into STRICT	cd_medico_w,
	cd_convenio_w,
	cd_categoria_w,
	dt_entrada_unidade_w,
	nr_seq_atepacu_w,
	nr_doc_convenio_w,
	cd_cgc_w,
	nr_atendimento_w,
	cd_senha_w,
	cd_estabelecimento_w
from 	estabelecimento b,
	atendimento_paciente_v a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	a.nr_atendimento	= nr_atendimento_p;
exception
	when others then
	nr_atendimento_w	:= 0;
end;

if (nr_atendimento_w > 0) then
	begin
	OPEN C01;
	LOOP
	FETCH C01 INTO
		nr_sequencia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		cd_material_w,
		qt_lancamento_w,
		ie_medico_atendimento_w,
		ie_local_estoque_w,
		cd_setor_atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') then
			select	nextval('procedimento_paciente_seq')
			into STRICT	nr_seq_proc_paciente_w
			;

			cd_atividade_prof_bpa_w	:= null;
			if (ie_origem_proced_w	= 3) then
				begin
				select	max(cd_atividade_prof_bpa)
				into STRICT	cd_atividade_prof_bpa_w
				from	procedimento
				where	cd_procedimento	= cd_procedimento_w
				and	ie_origem_proced	= ie_origem_proced_w;
				end;
			end if;


			insert into procedimento_paciente(
				nr_sequencia,
				nr_atendimento,
				dt_entrada_unidade,
				cd_procedimento,
				ie_origem_proced,
				dt_conta,
				dt_procedimento,
				qt_procedimento,
				dt_atualizacao,
				nm_usuario,
				cd_medico,
				cd_medico_executor,
				cd_setor_atendimento,
				nr_seq_atepacu,
				cd_convenio,
				cd_categoria,
				cd_acao,
				tx_procedimento,
				tx_medico,
				tx_anestesia,
				cd_cgc_prestador,
				nr_doc_convenio,
				nm_usuario_original,
				ie_auditoria,
				ds_observacao,
				cd_senha,
				cd_atividade_prof_bpa)
			values (
				nr_seq_proc_paciente_w,
				nr_atendimento_p,
				dt_entrada_unidade_w,
				cd_procedimento_w,
				ie_origem_proced_w,
				clock_timestamp(),
				clock_timestamp(),
				qt_lancamento_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_medico_w,
				cd_medico_w,
				cd_setor_atendimento_w,
				nr_seq_atepacu_w,
				cd_convenio_w,
				cd_categoria_w,
				'1',
				100,
				100,
				100,
				cd_cgc_w,
				nr_doc_convenio_w,
				nm_usuario_p,
				'N',
				--'ATELAAU - ' || ' Evento: ' || nr_seq_evento_p,
				wheb_mensagem_pck.get_texto(304247, 'NR_SEQ_EVENTO=' || nr_seq_evento_p),
				cd_senha_w,
				cd_atividade_prof_bpa_w);
		CALL Atualiza_preco_procedimento( nr_seq_proc_paciente_w, cd_convenio_w, nm_usuario_p);
		end if;

		if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
			select	nextval('material_atend_paciente_seq')
			into STRICT	nr_seq_mat_atend_w
			;

			select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30) cd_unidade_medida_consumo
			into STRICT	cd_unidade_medida_w
			from	material
			where	cd_material = cd_material_w;

			if (ie_local_estoque_w = 'N') then
				cd_Local_Estoque_w	:= null;
			elsif (ie_local_estoque_w = 'S') then
				cd_Local_Estoque_w	:= cd_local_estoque_p;
			elsif (ie_local_estoque_w = 'U') then
				begin
				select	b.cd_local_estoque
				into STRICT	cd_Local_Estoque_w
				from	setor_atendimento b, usuario a
				where	b.cd_setor_atendimento 	= a.cd_setor_atendimento
		  		and	a.nm_usuario		= nm_usuario_p;
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
			elsif (ie_local_estoque_w = 'P') then
				begin
				select	cd_local_estoque
				into STRICT	cd_Local_Estoque_w
				from	setor_atendimento
				where	cd_setor_atendimento = cd_setor_atendimento_w;
				exception
					when others then
					cd_local_estoque_w	:= null;
				end;
			end if;

			insert into material_atend_paciente(
				nr_sequencia,
				nr_atendimento,
				dt_entrada_unidade,
				cd_material,
				dt_atendimento,
				dt_conta,
				cd_unidade_medida,
				qt_material,
				qt_executada,
				dt_atualizacao,
				nm_usuario,
				nm_usuario_original,
				ie_valor_informado,
				cd_acao,
				cd_setor_atendimento,
				cd_setor_receita,
				cd_convenio,
				cd_categoria,
				cd_situacao_glosa,
				ie_auditoria,
				nr_seq_atepacu,
				nr_doc_convenio,
				cd_local_estoque,
				ds_observacao)
			values (
				nr_seq_mat_atend_w,
				nr_atendimento_p,
				dt_entrada_unidade_w,
				cd_material_w,
				clock_timestamp(),
				clock_timestamp(),
				cd_unidade_medida_w,
				qt_lancamento_w,
				qt_lancamento_w,
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				'N',
				'1',
				cd_setor_atendimento_w,
				cd_setor_atendimento_w,
				cd_convenio_w,
				cd_categoria_w,
				0,
				'N',
				nr_seq_atepacu_w,
				nr_doc_convenio_w,
				cd_local_estoque_w,
				--'ATELAAU - ' || ' Evento: ' || nr_seq_evento_p);
				wheb_mensagem_pck.get_texto(304247, 'NR_SEQ_EVENTO=' || nr_seq_evento_p));
		CALL Atualiza_preco_material(nr_seq_mat_atend_w, nm_usuario_p);
		end if;
		end;
	END LOOP;
	CLOSE C01;
	end;
end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lanc_auto_atendimento ( NR_ATENDIMENTO_P bigint, CD_LOCAL_ESTOQUE_P bigint, NR_SEQ_EVENTO_P bigint, NM_USUARIO_P text) FROM PUBLIC;

