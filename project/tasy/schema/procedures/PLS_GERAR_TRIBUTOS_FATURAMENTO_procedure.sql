-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_tributos_faturamento (nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

 
nr_seq_pls_fatura_w		pls_fatura.nr_sequencia%type;
nr_seq_acao_w			pls_processo_interc_acao.nr_sequencia%type;
ie_impedimento_cobranca_w	pls_fatura.ie_impedimento_cobranca%type;
qt_impedimentos_w		integer := 0;
ie_regra_trib_w			varchar(3);
ie_gerar_tit_ptu_w		varchar(3);
nr_titulo_w			titulo_receber.nr_titulo%type;
nr_titulo_ndc_w			titulo_receber.nr_titulo%type;
nr_seq_nota_w			nota_fiscal.nr_sequencia%type;
nr_seq_nota_ndc_w		nota_fiscal.nr_sequencia%type;

C01 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		a.ie_impedimento_cobranca, 
		a.nr_titulo, 
		a.nr_titulo_ndc, 
		pls_obter_dados_pls_fatura(a.nr_sequencia, 'SNF') nr_seq_nota, 
		pls_obter_dados_pls_fatura(a.nr_sequencia, 'SNFN') nr_seq_nota_ndc 
	from	pls_fatura a 
	where	a.nr_seq_lote	= nr_seq_lote_p 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(a.ie_impedimento_cobranca,'X') != 'P' 
	
union all
 
	SELECT	a.nr_sequencia, 
		a.ie_impedimento_cobranca, 
		a.nr_titulo, 
		a.nr_titulo_ndc, 
		pls_obter_dados_pls_fatura(a.nr_sequencia, 'SNF') nr_seq_nota, 
		pls_obter_dados_pls_fatura(a.nr_sequencia, 'SNFN') nr_seq_nota_ndc 
	from	pls_fatura a 
	where	a.nr_sequencia	= nr_seq_fatura_p 
	and	coalesce(a.ie_cancelamento::text, '') = '' 
	and	coalesce(a.ie_impedimento_cobranca,'X') != 'P';


BEGIN 
select	CASE WHEN count(1)=0 THEN 'N'  ELSE 'S' END  
into STRICT	ie_regra_trib_w 
from	pls_regra_base_trib_fat 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') or (nr_seq_fatura_p IS NOT NULL AND nr_seq_fatura_p::text <> '') then 
	open C01;
	loop 
	fetch C01 into 
		nr_seq_pls_fatura_w, 
		ie_impedimento_cobranca_w, 
		nr_titulo_w, 
		nr_titulo_ndc_w, 
		nr_seq_nota_w, 
		nr_seq_nota_ndc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		 
		if (coalesce(nr_titulo_w::text, '') = '') and (coalesce(nr_titulo_ndc_w::text, '') = '') and -- A fatura não pode haver titulo gerado 
			(coalesce(nr_seq_nota_w::text, '') = '') and (coalesce(nr_seq_nota_ndc_w::text, '') = '') then -- A fatura não pode haver NF gerada 
			 
			delete	FROM pls_fatura_item_trib 
			where	nr_seq_fatura_trib in (	SELECT	nr_sequencia 
							from	pls_fatura_trib 
							where	nr_seq_fatura	= nr_seq_pls_fatura_w);
			 
			delete	FROM pls_fatura_trib 
			where	nr_seq_fatura	= nr_seq_pls_fatura_w;
 
			if (ie_regra_trib_w = 'N') then -- Não tem regra para Valor base de calculo - Continua como estava 
				ie_gerar_tit_ptu_w := 'S';
				-- Se não é para faturar, só passa para o próximo do cursor 
				if (coalesce(ie_impedimento_cobranca_w,'S') <> 'NF') then 
					nr_seq_acao_w := pls_obter_acao_intercambio(	'14',  -- Geração do título de faturamento 
									'1',  -- Gerar título a receber 
									null, nr_seq_pls_fatura_w, null, null, clock_timestamp(), null, 'N', nr_seq_acao_w);
				 
					if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then 
						CALL pls_gerar_tributos_fatura(nr_seq_pls_fatura_w, 'NDC+F', nm_usuario_p);
						ie_gerar_tit_ptu_w := 'N';
					end if;
					 
					-- GERAR TÍTULOS CONFORME O PTU 
					if (ie_gerar_tit_ptu_w = 'S') then 
						nr_seq_acao_w := pls_obter_acao_intercambio(	'14',  -- Geração do título de faturamento 
										'14',  -- Gerar título a receber (Fatura) 
										null, nr_seq_pls_fatura_w, null, null, clock_timestamp(), null, 'N', nr_seq_acao_w);
					 
						if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then 
							CALL pls_gerar_tributos_fatura(nr_seq_pls_fatura_w, 'F', nm_usuario_p);
						end if;
						 
						nr_seq_acao_w := pls_obter_acao_intercambio(	'14',  -- Geração do título de faturamento 
										'15',  -- Gerar título a receber (NDC) 
										null, nr_seq_pls_fatura_w, null, null, clock_timestamp(), null, 'N', nr_seq_acao_w);
					 
						if (nr_seq_acao_w IS NOT NULL AND nr_seq_acao_w::text <> '') then 
							CALL pls_gerar_tributos_fatura(nr_seq_pls_fatura_w, 'NDC', nm_usuario_p);
						end if;
					end if;
				end if;
				 
			elsif (ie_regra_trib_w = 'S') then 
				CALL pls_gerar_tributos_fatura_venc(nr_seq_pls_fatura_w, cd_estabelecimento_p, nm_usuario_p);
			end if;
						 
			CALL pls_atualiza_atributo_ptu_ir(nr_seq_pls_fatura_w, 'S', 'N');
		end if;
		end;
	end loop;
	close C01;	
		 
end if;
 
if (coalesce(ie_commit_p,'N') = 'S') then		 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_tributos_faturamento (nr_seq_lote_p pls_lote_faturamento.nr_sequencia%type, nr_seq_fatura_p pls_fatura.nr_sequencia%type, ie_commit_p text, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

