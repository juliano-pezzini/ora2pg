-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_carregar_reg_carencia ( nr_seq_plano_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_pessoa_proposta_p bigint, nr_seq_proposta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_carencia_produto_w	bigint;
nr_seq_carencia_contrato_w	bigint;
nr_seq_carencia_segurado_w	bigint;
nr_seq_carencia_proposta_seg_w	bigint;
nr_seq_carencia_proposta_w	bigint;
qt_dias_produto_w		bigint;
qt_dias_contrato_w		bigint;
qt_dias_segurado_w		bigint;
qt_dias_benef_proposta_w	bigint;
qt_dias_proposta_w		bigint;
dt_vigencia_plano_w		timestamp;
dt_vigencia_contrato_w		timestamp;
dt_vigencia_segurado_w		timestamp;
dt_vigencia_benef_proposta_w	timestamp;
dt_vigencia_proposta_w		timestamp;
nr_seq_grupo_carencia_produt_w	bigint;
nr_seq_grupo_carencia_contr_w	bigint;
nr_seq_grupo_carencia_seg_w	bigint;
nr_seq_grupo_carenc_prop_seg_w	bigint;
nr_seq_grupo_carencia_prop_w	bigint;


c01 CURSOR FOR
	SELECT	nr_seq_tipo_carencia,
		nr_seq_grupo_carencia,
		qt_dias,
		coalesce(dt_inicio_vigencia,clock_timestamp())
	from	pls_carencia
	where	nr_seq_plano	= nr_seq_plano_p
	and	clock_timestamp() between coalesce(dt_inicio_vig_plano,clock_timestamp()) and coalesce(dt_fim_vig_plano,clock_timestamp());

c02 CURSOR FOR
	SELECT	nr_seq_tipo_carencia,
		nr_seq_grupo_carencia,
		qt_dias,
		coalesce(dt_inicio_vigencia,clock_timestamp())
	from	pls_carencia
	where	nr_seq_contrato	= nr_seq_contrato_p;

c03 CURSOR FOR
	SELECT	nr_seq_tipo_carencia,
		nr_seq_grupo_carencia,
		qt_dias,
		coalesce(dt_inicio_vigencia,clock_timestamp())
	from	pls_carencia
	where	nr_seq_segurado	= nr_seq_segurado_p;

c04 CURSOR FOR
	SELECT	nr_seq_tipo_carencia,
		nr_seq_grupo_carencia,
		qt_dias,
		coalesce(dt_inicio_vigencia,clock_timestamp())
	from	pls_carencia
	where	nr_seq_pessoa_proposta	= nr_seq_pessoa_proposta_p;

c05 CURSOR FOR
	SELECT	nr_seq_tipo_carencia,
		nr_seq_grupo_carencia,
		qt_dias,
		coalesce(dt_inicio_vigencia,clock_timestamp())
	from	pls_carencia
	where	nr_seq_proposta	= nr_seq_proposta_p;


BEGIN

delete FROM w_pls_carencia;

open c01;
loop
fetch c01 into
	nr_seq_carencia_produto_w,
	nr_seq_grupo_carencia_produt_w,
	qt_dias_produto_w,
	dt_vigencia_plano_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	if (coalesce(nr_seq_carencia_produto_w,0) > 0) then
		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_carencia_produt_w
		from	pls_tipo_carencia
		where	nr_sequencia	= nr_seq_carencia_produto_w;

		insert into w_pls_carencia(	nr_sequencia,cd_estabelecimento,dt_atualizacao,
				nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_tipo_carencia,qt_dias_carencia,ie_origem_carencia,
				dt_inicio_vigencia, nr_seq_grupo)
		values (	nextval('w_pls_carencia_seq'),cd_estabelecimento_p,clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_carencia_produto_w,qt_dias_produto_w, 'P',
				dt_vigencia_plano_w, nr_seq_grupo_carencia_produt_w);
	end if;
	end;
end loop;
close c01;

open c02;
loop
fetch c02 into
	nr_seq_carencia_contrato_w,
	nr_seq_grupo_carencia_contr_w,
	qt_dias_contrato_w,
	dt_vigencia_contrato_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	if (coalesce(nr_seq_carencia_contrato_w,0) > 0) then
		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_carencia_contr_w
		from	pls_tipo_carencia
		where	nr_sequencia	= nr_seq_carencia_contrato_w;

		insert into w_pls_carencia(	nr_sequencia,cd_estabelecimento,dt_atualizacao,
				nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_tipo_carencia,qt_dias_carencia,ie_origem_carencia,
				dt_inicio_vigencia, nr_seq_grupo)
		values (	nextval('w_pls_carencia_seq'),cd_estabelecimento_p,clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_carencia_contrato_w,qt_dias_contrato_w,'C',
				dt_vigencia_contrato_w, nr_seq_grupo_carencia_contr_w);
	end if;
	end;
end loop;
close c02;

open c03;
loop
fetch c03 into
	nr_seq_carencia_segurado_w,
	nr_seq_grupo_carencia_seg_w,
	qt_dias_segurado_w,
	dt_vigencia_segurado_w;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	if (coalesce(nr_seq_carencia_segurado_w,0) > 0) then
		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_carencia_seg_w
		from	pls_tipo_carencia
		where	nr_sequencia	= nr_seq_carencia_segurado_w;

		insert into w_pls_carencia(	nr_sequencia,cd_estabelecimento,dt_atualizacao,
				nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_tipo_carencia,qt_dias_carencia,ie_origem_carencia,
				dt_inicio_vigencia, nr_seq_grupo)
		values (	nextval('w_pls_carencia_seq'),cd_estabelecimento_p,clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_carencia_segurado_w,qt_dias_segurado_w,'BC',
				dt_vigencia_segurado_w, nr_seq_grupo_carencia_seg_w);
	end if;
	end;
end loop;
close c03;

open c04;
loop
fetch c04 into
	nr_seq_carencia_proposta_seg_w,
	nr_seq_grupo_carenc_prop_seg_w,
	qt_dias_benef_proposta_w,
	dt_vigencia_benef_proposta_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
	begin
	if (coalesce(nr_seq_carencia_proposta_seg_w,0) > 0) then
		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_carenc_prop_seg_w
		from	pls_tipo_carencia
		where	nr_sequencia	= nr_seq_carencia_proposta_seg_w;

		insert into w_pls_carencia(	nr_sequencia,cd_estabelecimento,dt_atualizacao,
				nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_tipo_carencia,qt_dias_carencia,ie_origem_carencia,
				dt_inicio_vigencia, nr_seq_grupo)
		values (	nextval('w_pls_carencia_seq'),cd_estabelecimento_p,clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_carencia_proposta_seg_w,qt_dias_benef_proposta_w,'BP',
				dt_vigencia_benef_proposta_w, nr_seq_grupo_carenc_prop_seg_w);
	end if;
	end;
end loop;
close c04;

open c05;
loop
fetch c05 into
	nr_seq_carencia_proposta_w,
	nr_seq_grupo_carencia_prop_w,
	qt_dias_proposta_w,
	dt_vigencia_proposta_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	begin
	if (coalesce(nr_seq_carencia_proposta_w,0) > 0) then
		select	max(nr_seq_grupo)
		into STRICT	nr_seq_grupo_carencia_prop_w
		from	pls_tipo_carencia
		where	nr_sequencia	= nr_seq_carencia_proposta_w;

		insert into w_pls_carencia(	nr_sequencia,cd_estabelecimento,dt_atualizacao,
				nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,
				nr_seq_tipo_carencia,qt_dias_carencia,ie_origem_carencia,
				dt_inicio_vigencia, nr_seq_grupo)
		values (	nextval('w_pls_carencia_seq'),cd_estabelecimento_p,clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_carencia_proposta_w,qt_dias_proposta_w,'PA',
				dt_vigencia_proposta_w, nr_seq_grupo_carencia_prop_w);
	end if;
	end;
end loop;
close c05;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_carregar_reg_carencia ( nr_seq_plano_p bigint, nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, nr_seq_pessoa_proposta_p bigint, nr_seq_proposta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

