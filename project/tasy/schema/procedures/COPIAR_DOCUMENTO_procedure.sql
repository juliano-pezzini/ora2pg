-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE copiar_documento (nr_seq_documento_p bigint) AS $body$
DECLARE


    nm_usuario_w                        usuario.nm_usuario%TYPE := wheb_usuario_pck.get_nm_usuario;
    new_nr_seq_documento_w              documento.nr_sequencia%TYPE;
    old_nr_seq_secao_w                  documento_secao.nr_sequencia%TYPE;
    old_nr_seq_doc_subsecao             documento_subsecao.nr_sequencia%TYPE;
    w_documento_row                     documento%rowtype;

    TYPE doc_acesso_type        IS TABLE OF documento_acesso%ROWTYPE         index by integer;
    TYPE doc_setor_type         IS TABLE OF documento_setor%ROWTYPE          index by integer;
    TYPE doc_secao_type         IS TABLE OF documento_secao%ROWTYPE          index by integer;
    TYPE doc_subsecao_type      IS TABLE OF documento_subsecao%ROWTYPE       index by integer;
    TYPE doc_subsecao_sup_type  IS TABLE OF documento_subsecao%ROWTYPE       index by integer;
    TYPE doc_diagnostico_type   IS TABLE OF documento_diagnostico%ROWTYPE    index by integer;
    TYPE doc_idade_type         IS TABLE OF documento_idade%ROWTYPE          index by integer;
    TYPE pep_apap_regra_type    IS TABLE OF pep_apap_grupo_regra%ROWTYPE     index by integer;

    doc_acesso_row                      doc_acesso_type;
    doc_setor_row                       doc_setor_type;
    doc_secao_row                       doc_secao_type;
    doc_subsecao_row                    doc_subsecao_type;
    doc_subsecao_sup_row                doc_subsecao_sup_type;
    doc_diag_row                        doc_diagnostico_type;
    doc_idade_row                       doc_idade_type;
    pep_apap_regra_row                  pep_apap_regra_type;

    pep_apap_regra_count                integer := 0;
    doc_subsecao_count                  integer := 0;
    doc_subsecao_sup_count              integer := 0;

    documento_subsecao_c CURSOR(old_nr_seq_doc_secao_w  documento_subsecao.nr_seq_documento_secao%TYPE) FOR
        SELECT * FROM documento_subsecao WHERE nr_seq_documento_secao = old_nr_seq_doc_secao_w AND coalesce(nr_seq_superior::text, '') = '' ORDER BY nr_sequencia;

    pep_apap_grupo_regra_c CURSOR(old_nr_seq_doc_secao_w  pep_apap_grupo_regra.nr_seq_documento_secao%TYPE) FOR
        SELECT * FROM pep_apap_grupo_regra WHERE nr_seq_documento_secao = old_nr_seq_doc_secao_w ORDER BY nr_sequencia;

    documento_subsecao_sup_c CURSOR(old_nr_seq_doc_subsecao_w  documento_subsecao.nr_seq_superior%TYPE)  FOR
        SELECT * FROM documento_subsecao WHERE nr_seq_superior = old_nr_seq_doc_subsecao_w ORDER BY nr_sequencia;
BEGIN
IF (coalesce(nr_seq_documento_p,0) > 0) THEN

    SELECT * INTO STRICT w_documento_row FROM documento WHERE NR_SEQUENCIA = nr_seq_documento_p;

    new_nr_seq_documento_w            := obter_nextval_sequence('DOCUMENTO');
    w_documento_row.nr_sequencia      := new_nr_seq_documento_w;
    w_documento_row.nm_usuario        := nm_usuario_w;
    w_documento_row.dt_atualizacao    := clock_timestamp();
    w_documento_row.ie_situacao       := 'A';
    w_documento_row.ds_titulo         := substr(obter_desc_expressao(303214,null) ||' - '|| w_documento_row.ds_titulo,1,100);
    w_documento_row.dt_liberacao      := null;

    INSERT INTO documento VALUES (w_documento_row.*);

    /*
     *    This is the step of preparing the values, it will be stored in a "table type" using the index.           
     */
    SELECT * BULK COLLECT INTO STRICT doc_acesso_row FROM documento_acesso WHERE nr_seq_documento = nr_seq_documento_p ORDER BY nr_sequencia;
    <<documento_acesso_loop>>
    FOR indexCollection IN 1 .. doc_acesso_row.count LOOP

        doc_acesso_row[indexCollection].nr_sequencia        := obter_nextval_sequence('DOCUMENTO_ACESSO');
        doc_acesso_row[indexCollection].nr_seq_documento    := new_nr_seq_documento_w;
        doc_acesso_row[indexCollection].nm_usuario          := nm_usuario_w;
        doc_acesso_row[indexCollection].dt_atualizacao      := clock_timestamp();

    END LOOP documento_acesso_loop;

    SELECT * BULK COLLECT INTO STRICT doc_setor_row FROM documento_setor WHERE nr_seq_documento = nr_seq_documento_p ORDER BY nr_sequencia;
    <<documento_setor_loop>>
    FOR indexCollection IN 1 .. doc_setor_row.count LOOP

        doc_setor_row[indexCollection].nr_sequencia         := obter_nextval_sequence('DOCUMENTO_SETOR');
        doc_setor_row[indexCollection].nr_seq_documento     := new_nr_seq_documento_w;
        doc_setor_row[indexCollection].nm_usuario           := nm_usuario_w;
        doc_setor_row[indexCollection].dt_atualizacao       := clock_timestamp();

    END LOOP documento_setor_loop;

    SELECT * BULK COLLECT INTO STRICT doc_diag_row FROM documento_diagnostico WHERE nr_seq_documento = nr_seq_documento_p ORDER BY nr_sequencia;
    <<documento_diagnostico_loop>>
    FOR indexCollection IN 1 .. doc_diag_row.count LOOP

        doc_diag_row[indexCollection].nr_sequencia           := obter_nextval_sequence('DOCUMENTO_DIAGNOSTICO');
        doc_diag_row[indexCollection].nr_seq_documento       := new_nr_seq_documento_w;
        doc_diag_row[indexCollection].nm_usuario             := nm_usuario_w;
        doc_diag_row[indexCollection].dt_atualizacao         := clock_timestamp();

    END LOOP documento_diagnostico_loop;

    SELECT * BULK COLLECT INTO STRICT doc_idade_row FROM documento_idade WHERE nr_seq_documento = nr_seq_documento_p ORDER BY nr_sequencia;
    <<documento_idade_loop>>
     FOR indexCollection IN 1 .. doc_idade_row.count LOOP

        doc_idade_row[indexCollection].nr_sequencia         := obter_nextval_sequence('DOCUMENTO_IDADE');
        doc_idade_row[indexCollection].nr_seq_documento     := new_nr_seq_documento_w;
        doc_idade_row[indexCollection].nm_usuario           := nm_usuario_w;
        doc_idade_row[indexCollection].dt_atualizacao       := clock_timestamp();

    END LOOP documento_idade_loop;

    SELECT * BULK COLLECT INTO STRICT doc_secao_row FROM documento_secao WHERE nr_seq_documento = nr_seq_documento_p ORDER BY nr_sequencia;
    <<documento_secao_loop>>
    FOR indexCollectionSecao IN 1 .. doc_secao_row.count LOOP

        old_nr_seq_secao_w                                      := doc_secao_row[indexCollectionSecao].nr_sequencia;
        doc_secao_row[indexCollectionSecao].nr_sequencia        := obter_nextval_sequence('DOCUMENTO_SECAO');
        doc_secao_row[indexCollectionSecao].nr_seq_documento    := new_nr_seq_documento_w;
        doc_secao_row[indexCollectionSecao].nm_usuario          := nm_usuario_w;
        doc_secao_row[indexCollectionSecao].dt_atualizacao      := clock_timestamp();

        <<pep_apap_grupo_regra_loop>>
        FOR w_pep_apap_grupo_regra_row IN pep_apap_grupo_regra_c(old_nr_seq_secao_w) LOOP

            pep_apap_regra_count                                                := pep_apap_regra_count + 1;
            pep_apap_regra_row(pep_apap_regra_count)                            := w_pep_apap_grupo_regra_row;
            pep_apap_regra_row[pep_apap_regra_count].nr_sequencia               := obter_nextval_sequence('PEP_APAP_GRUPO_REGRA');
            pep_apap_regra_row[pep_apap_regra_count].nr_seq_documento_secao     := doc_secao_row[indexCollectionSecao].nr_sequencia;
            pep_apap_regra_row[pep_apap_regra_count].nm_usuario                 := nm_usuario_w;
            pep_apap_regra_row[pep_apap_regra_count].dt_atualizacao             := clock_timestamp();

        END LOOP pep_apap_grupo_regra_loop;

        <<documento_subsecao_loop>>
        FOR w_documento_subsecao_row IN documento_subsecao_c(old_nr_seq_secao_w) LOOP

            doc_subsecao_count                                                  := doc_subsecao_count + 1;
            old_nr_seq_doc_subsecao                                             := w_documento_subsecao_row.nr_sequencia;
            doc_subsecao_row(doc_subsecao_count)                                := w_documento_subsecao_row;
            doc_subsecao_row[doc_subsecao_count].nr_sequencia                   := obter_nextval_sequence('DOCUMENTO_SUBSECAO');
            doc_subsecao_row[doc_subsecao_count].nr_seq_documento_secao         := doc_secao_row[indexCollectionSecao].nr_sequencia;
            doc_subsecao_row[doc_subsecao_count].nm_usuario                     := nm_usuario_w;
            doc_subsecao_row[doc_subsecao_count].dt_atualizacao                 := clock_timestamp();

            <<documento_subsecao_sup_loop>>
            FOR w_documento_subsecao_sup_row IN documento_subsecao_sup_c(old_nr_seq_doc_subsecao)  LOOP

                doc_subsecao_sup_count                                              := doc_subsecao_sup_count + 1;
                doc_subsecao_sup_row(doc_subsecao_sup_count)                        := w_documento_subsecao_sup_row;
                doc_subsecao_sup_row[doc_subsecao_sup_count].nr_sequencia           := obter_nextval_sequence('DOCUMENTO_SUBSECAO');
                doc_subsecao_sup_row[doc_subsecao_sup_count].nr_seq_superior        := doc_subsecao_row[doc_subsecao_count].nr_sequencia;
				doc_subsecao_sup_row[doc_subsecao_sup_count].nr_seq_documento_secao	:= doc_subsecao_row[doc_subsecao_count].nr_seq_documento_secao;
                doc_subsecao_sup_row[doc_subsecao_sup_count].nm_usuario             := nm_usuario_w;
                doc_subsecao_sup_row[doc_subsecao_sup_count].dt_atualizacao         := clock_timestamp();

            END LOOP documento_subsecao_sup_loop;

        END LOOP documento_subsecao_loop;

    END LOOP documento_secao_loop;

    /*
     *       This is the step of inserting the values that were stored previously, the way it is structured, 
     *       despite going through several looping, it is extremely faster than the conventional way.   
     */
    IF (doc_acesso_row.FIRST IS NOT NULL AND doc_acesso_row.FIRST::text <> '') THEN
        FORALL i IN doc_acesso_row.FIRST .. doc_acesso_row.LAST  
        INSERT INTO documento_acesso VALUES doc_acesso_row(i);
    END IF;
    
    IF (doc_setor_row.FIRST IS NOT NULL AND doc_setor_row.FIRST::text <> '') THEN  
        FORALL i IN doc_setor_row.FIRST .. doc_setor_row.LAST  
        INSERT INTO documento_setor VALUES doc_setor_row(i);
    END IF;

    IF (doc_diag_row.FIRST IS NOT NULL AND doc_diag_row.FIRST::text <> '') THEN  
        FORALL i IN doc_diag_row.FIRST .. doc_diag_row.LAST  
        INSERT INTO documento_diagnostico VALUES doc_diag_row(i);
    END IF;

    IF (doc_idade_row.FIRST IS NOT NULL AND doc_idade_row.FIRST::text <> '') THEN  
        FORALL i IN doc_idade_row.FIRST .. doc_idade_row.LAST  
        INSERT INTO documento_idade VALUES doc_idade_row(i);
    END IF;

    IF (doc_secao_row.FIRST IS NOT NULL AND doc_secao_row.FIRST::text <> '') THEN  
        FORALL i IN doc_secao_row.FIRST .. doc_secao_row.LAST  
        INSERT INTO documento_secao VALUES doc_secao_row(i);
    END IF;

    IF (pep_apap_regra_row.FIRST IS NOT NULL AND pep_apap_regra_row.FIRST::text <> '') THEN  
        FORALL i IN pep_apap_regra_row.FIRST .. pep_apap_regra_row.LAST  
        INSERT INTO pep_apap_grupo_regra VALUES pep_apap_regra_row(i);
    END IF;

    IF (doc_subsecao_row.FIRST IS NOT NULL AND doc_subsecao_row.FIRST::text <> '') THEN  
        FORALL i IN doc_subsecao_row.FIRST .. doc_subsecao_row.LAST  
        INSERT INTO documento_subsecao VALUES doc_subsecao_row(i);
    END IF;

    IF (doc_subsecao_sup_row.FIRST IS NOT NULL AND doc_subsecao_sup_row.FIRST::text <> '') THEN  
        FORALL i IN doc_subsecao_sup_row.FIRST .. doc_subsecao_sup_row.LAST  
        INSERT INTO documento_subsecao VALUES doc_subsecao_sup_row(i);
    END IF;

    commit;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE copiar_documento (nr_seq_documento_p bigint) FROM PUBLIC;

