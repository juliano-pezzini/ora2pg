-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE define_conta_contabil ( ie_origem_conta_p text, cd_estabelecimento_p bigint, cd_cgc_p text, cd_pessoa_fisica_p text, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_local_estoque_p bigint, cd_conta_contabil_p INOUT text, cd_centro_custo_p INOUT text, ds_observacao_p text, dt_vigencia_p timestamp, ie_regra_pacote_p text default null, nr_seq_motivo_solic_p bigint default null, cd_operacao_nf_p bigint default null, cd_natureza_operacao_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_seq_proj_rec_p bigint default null, vl_item_regra_p bigint default null) AS $body$
DECLARE


ds_razao_social_w	pessoa_juridica.ds_razao_social%type;
cd_empresa_w		empresa.cd_empresa%type;
ie_local_direto_w	varchar(1);
ie_tipo_conta_w		varchar(15);
cd_conta_contabil_w	conta_contabil.cd_conta_contabil%type;
cd_operacao_estoque_w	operacao_nota.cd_operacao_estoque%type;
ie_tipo_conta_proj_rec_w proj_rec_conta_contabil.ie_tipo%type;


BEGIN
CALL philips_contabil_pck.set_cd_sequencia_parametro(null);
if (ie_origem_conta_p in ('3','8')) then
	begin
	begin
	select	cd_empresa
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_p;
	exception when others then
		cd_empresa_w		:= null;
	end;

	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then
		begin
		select	Obter_Conta_Contab_PF(cd_empresa_w, cd_pessoa_fisica_p, CASE WHEN ie_origem_conta_p='3' THEN 'P' WHEN ie_origem_conta_p='8' THEN 'R' END , dt_vigencia_p)
		into STRICT	cd_conta_contabil_p
		;
		end;
	else
		begin
		select	max(A.cd_conta_contabil)
		into STRICT	cd_conta_contabil_p
		from	conta_contabil b,
			pessoa_juridica A
		where	A.cd_cgc		= cd_cgc_p
		and	a.cd_conta_contabil	= b.cd_conta_contabil
		and	b.cd_empresa		= cd_empresa_w;

		if (coalesce(cd_conta_contabil_p::text, '') = '') then
			begin
            if (ie_origem_conta_p = '3' and coalesce(nr_seq_proj_rec_p,0) <> 0) then
                cd_conta_contabil_p := obter_conta_contab_pj(cd_empresa_p         => cd_empresa_w,
                                                             cd_estabelecimento_p => cd_estabelecimento_p,
                                                             cd_cgc_p             => cd_cgc_p,
                                                             ie_tipo_p            => 'V',
                                                             dt_vigencia_p        => dt_vigencia_p);
            end if;

            if (coalesce(cd_conta_contabil_p, '0') = '0') then
                cd_conta_contabil_p := obter_conta_contab_pj(cd_empresa_p         => cd_empresa_w,
                                                             cd_estabelecimento_p => cd_estabelecimento_p,
                                                             cd_cgc_p             => cd_cgc_p,
                                                             ie_tipo_p            => case ie_origem_conta_p
                                                                                          when '3' then 'P'
                                                                                          when '8' then 'R'
                                                                                     end,
                                                             dt_vigencia_p        => dt_vigencia_p);
            end if;
            end;
		end if;
		end;
	end if;
	end;
end if;

if (ie_origem_conta_p = '2') then
	begin
	ie_local_direto_w	:= 'N';
	if (coalesce(cd_local_estoque_p,0) <> 0) then
		ie_local_direto_w	:= coalesce(substr(obter_se_local_direto(cd_local_estoque_p),1,1),'N');
	end if;

	ie_tipo_conta_w	:= 3;
	if (coalesce(cd_centro_custo_p::text, '') = '') and (ie_local_direto_w = 'N') then
		ie_tipo_conta_w	:= 2;
	end if;

	if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
		begin
			begin
				select	cd_operacao_estoque
				into STRICT	cd_operacao_estoque_w
				from	operacao_nota
				where	cd_operacao_nf	= cd_operacao_nf_p;
				exception when others then
					cd_operacao_estoque_w		:= null;
			end;

			SELECT * FROM define_conta_material(
					cd_estabelecimento_p, cd_material_p, ie_tipo_conta_w, null, 0, '0', 0, null, cd_convenio_p, null, cd_local_estoque_p, cd_operacao_estoque_w, dt_vigencia_p, cd_conta_contabil_p, cd_centro_custo_p, null, ie_regra_pacote_p, nr_seq_motivo_solic_p, null, null, cd_operacao_nf_p, null, cd_natureza_operacao_p, vl_item_regra_p, nr_seq_proj_rec_p) INTO STRICT cd_conta_contabil_p, cd_centro_custo_p;
		end;

		elsif	((cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') or (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '')) then
			SELECT * FROM define_Conta_Procedimento(
						cd_estabelecimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_conta_w, null, null, null, null, null, cd_convenio_p, null, dt_vigencia_p, cd_conta_contabil_p, cd_centro_custo_p, null, ie_regra_pacote_p, null, null, nr_seq_motivo_solic_p, null, cd_operacao_nf_p, null, cd_natureza_operacao_p, nr_seq_proc_interno_p) INTO STRICT cd_conta_contabil_p, cd_centro_custo_p;
	end if;
	end;
end if;

if (ie_origem_conta_p = '5') then
	select	Obter_Conta_Convenio(
			cd_estabelecimento_p,
			cd_convenio_p,
			null,
			null,
			dt_vigencia_p,
			null,
			null,
			null,
			null,
			cd_procedimento_p,
			ie_origem_proced_p)
	into STRICT	cd_conta_contabil_p
	;
end if;

if (ie_origem_conta_p = '9') then
	begin
	select	cd_empresa
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_p;
	begin
	if (coalesce(cd_pessoa_fisica_p,'0') <> '0') then
		select	Obter_Conta_Contab_PF(cd_empresa_w, cd_pessoa_fisica_p, CASE WHEN ie_origem_conta_p='3' THEN 'P' WHEN ie_origem_conta_p='8' THEN 'R'  ELSE 'R' END , dt_vigencia_p)
		into STRICT	cd_conta_contabil_p
		;
	else

		select	obter_conta_contab_pj(	cd_empresa_w, cd_estabelecimento_p, cd_cgc_p, 'R',coalesce(dt_vigencia_p,clock_timestamp()))
		into STRICT	cd_conta_contabil_p
		;
	end if;
	exception when others then
		cd_conta_contabil_p	:= null;
	end;
	end;
end if;

if (ie_origem_conta_p = '11') then
	begin
	ie_tipo_conta_w	:= 1;

	if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
		begin
			begin
				select	cd_operacao_estoque
				into STRICT	cd_operacao_estoque_w
				from	operacao_nota
				where	cd_operacao_nf	= cd_operacao_nf_p;
				exception when others then
					cd_operacao_estoque_w		:= null;
			end;

			SELECT * FROM define_conta_material(
				cd_estabelecimento_p, cd_material_p, ie_tipo_conta_w, null, 0, '0', 0, null, cd_convenio_p, null, cd_local_estoque_p, cd_operacao_estoque_w, dt_vigencia_p, cd_conta_contabil_p, cd_centro_custo_p, null, ie_regra_pacote_p, nr_seq_motivo_solic_p, null, null, cd_operacao_nf_p, null, cd_natureza_operacao_p, vl_item_regra_p, nr_seq_proj_rec_p) INTO STRICT cd_conta_contabil_p, cd_centro_custo_p;
		end;
	elsif	((cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') or (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '')) then
		SELECT * FROM define_Conta_Procedimento(
				cd_estabelecimento_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_conta_w, null, null, null, null, null, cd_convenio_p, null, dt_vigencia_p, cd_conta_contabil_p, cd_centro_custo_p, null, ie_regra_pacote_p, null, null, nr_seq_motivo_solic_p, null, cd_operacao_nf_p, null, cd_natureza_operacao_p, nr_seq_proc_interno_p) INTO STRICT cd_conta_contabil_p, cd_centro_custo_p;
	end if;
	end;
end if;

if (ie_origem_conta_p = '12') then
	begin
	select	cd_empresa
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_p;

	select	Obter_Conta_Convenio(
			cd_estabelecimento_p,
			cd_convenio_p,
			null,
			null,
			dt_vigencia_p,
			null,
			null,
			null,
			null,
			cd_procedimento_p,
			ie_origem_proced_p)
	into STRICT	cd_conta_contabil_w
	;

	if (  coalesce(cd_conta_contabil_w,'0') = '0' ) then

		select	max(A.cd_conta_contabil)
		into STRICT	cd_conta_contabil_w
		from	conta_contabil b,
			pessoa_juridica A
		where	A.cd_cgc		= cd_cgc_p
		and	a.cd_conta_contabil	= b.cd_conta_contabil
		and	b.cd_empresa		= cd_empresa_w;

		if (coalesce(cd_conta_contabil_w::text, '') = '') then
			cd_conta_contabil_w := obter_conta_contab_pj(cd_empresa_p         => cd_empresa_w,
                                                         cd_estabelecimento_p => cd_estabelecimento_p,
                                                         cd_cgc_p             => cd_cgc_p,
                                                         ie_tipo_p            => 'R',
                                                         dt_vigencia_p        => dt_vigencia_p);
		end if;

	end if;

	cd_conta_contabil_p := cd_conta_contabil_w;

	end;
end if;

if (ie_origem_conta_p = '13') then
	begin
	ie_tipo_conta_w	:= 9;

	if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
		begin
			begin
				select	cd_operacao_estoque
				into STRICT	cd_operacao_estoque_w
				from	operacao_nota
				where	cd_operacao_nf	= cd_operacao_nf_p;
				exception when others then
					cd_operacao_estoque_w		:= null;
			end;

			SELECT * FROM define_conta_material(
				cd_estabelecimento_p, cd_material_p, ie_tipo_conta_w, null, 0, '0', 0, null, cd_convenio_p, null, cd_local_estoque_p, cd_operacao_estoque_w, dt_vigencia_p, cd_conta_contabil_p, cd_centro_custo_p, null, ie_regra_pacote_p, nr_seq_motivo_solic_p, null, null, cd_operacao_nf_p, null, cd_natureza_operacao_p, vl_item_regra_p, nr_seq_proj_rec_p) INTO STRICT cd_conta_contabil_p, cd_centro_custo_p;
		end;
	end if;
	end;
end if;

if (ie_origem_conta_p = '14') then
	begin
	ie_tipo_conta_w	:= 10;

	if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
		begin
			begin
				select	cd_operacao_estoque
				into STRICT	cd_operacao_estoque_w
				from	operacao_nota
				where	cd_operacao_nf	= cd_operacao_nf_p;
				exception when others then
					cd_operacao_estoque_w		:= null;
			end;

			SELECT * FROM define_conta_material(
				cd_estabelecimento_p, cd_material_p, ie_tipo_conta_w, null, 0, '0', 0, null, cd_convenio_p, null, cd_local_estoque_p, cd_operacao_estoque_w, dt_vigencia_p, cd_conta_contabil_p, cd_centro_custo_p, null, ie_regra_pacote_p, nr_seq_motivo_solic_p, null, null, cd_operacao_nf_p, null, cd_natureza_operacao_p, vl_item_regra_p, nr_seq_proj_rec_p) INTO STRICT cd_conta_contabil_p, cd_centro_custo_p;
		end;
	end if;
	end;
end if;

if (ie_origem_conta_p = '15') then
	begin
	select	cd_empresa
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento	= cd_estabelecimento_p;
	begin
		select	obter_conta_contab_pj(	cd_empresa_w, cd_estabelecimento_p, cd_cgc_p, 'C',coalesce(dt_vigencia_p,clock_timestamp()))
		into STRICT	cd_conta_contabil_p
		;
	exception when others then
		cd_conta_contabil_p	:= null;
	end;
	end;
end if;

if (ie_origem_conta_p in ('16','17','18','19') and (nr_seq_proj_rec_p IS NOT NULL AND nr_seq_proj_rec_p::text <> '')) then
    select  case ie_origem_conta_p
        when '16' then 'CP'
        when '17' then 'CD'
        when '18' then 'CR'
        when '19' then 'CE'
        end
    into STRICT ie_tipo_conta_proj_rec_w
;

    cd_conta_contabil_p := ctb_obter_conta_proj_rec(nr_seq_proj_rec_p, ie_tipo_conta_proj_rec_w);

end if;

if (coalesce(cd_conta_contabil_p::text, '') = '') then
	begin

	if (cd_cgc_p IS NOT NULL AND cd_cgc_p::text <> '') then
		begin
		select	substr(ds_razao_social,1,30)
		into STRICT 	ds_razao_social_w
		from	pessoa_juridica
		where	cd_cgc = cd_cgc_p;
		exception when others then
			ds_razao_social_w	:= '';
		end;
	end if;
	CALL wheb_mensagem_pck.exibir_mensagem_abort(238666,'ds_observacao_p=' || coalesce(ds_observacao_p,0) || ';' || 'cd_material_p=' || coalesce(cd_material_p,0) || ';' || 'cd_procedimento_p=' || coalesce(cd_procedimento_p,0) || ';' || 'ie_origem_conta_p=' || coalesce(ie_origem_conta_p,0) || ';' || 'cd_pessoa_fisica_p=' || coalesce(cd_pessoa_fisica_p,0) || ';' || 'ds_razao_social_w=' || coalesce(ds_razao_social_w,0));

	/*r.aise_application_error(-20011,
		'Falta conta contabil. ' || chr(13) || chr(10) || ' Obs.: ' || ds_observacao_p ||
		' Material = ' || cd_material_p || ' Procedimento = ' || cd_procedimento_p ||
		' Origem conta = ' || ie_origem_conta_p ||
		' Pessoa fisica = ' || cd_pessoa_fisica_p ||
		' Pessoa Juridica = ' || substr(ds_razao_social_w,1,30) || '#@#@');*/
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE define_conta_contabil ( ie_origem_conta_p text, cd_estabelecimento_p bigint, cd_cgc_p text, cd_pessoa_fisica_p text, ie_tipo_convenio_p bigint, cd_convenio_p bigint, cd_material_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, cd_local_estoque_p bigint, cd_conta_contabil_p INOUT text, cd_centro_custo_p INOUT text, ds_observacao_p text, dt_vigencia_p timestamp, ie_regra_pacote_p text default null, nr_seq_motivo_solic_p bigint default null, cd_operacao_nf_p bigint default null, cd_natureza_operacao_p bigint default null, nr_seq_proc_interno_p bigint default null, nr_seq_proj_rec_p bigint default null, vl_item_regra_p bigint default null) FROM PUBLIC;

