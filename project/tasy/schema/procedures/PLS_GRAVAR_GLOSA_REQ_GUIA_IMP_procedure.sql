-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gravar_glosa_req_guia_imp ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_guia_plano_p pls_guia_plano.nr_sequencia%type, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar as glosas da requisição na guia, quando for gerada negativa para o
pedido de autorização
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [x ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
Rotina utilizada no WebService do Pedido de Autorização para Requisição
Rotina utilizada na finalização da análise da requisição, cuidar para não colocar nenhum update
ou commit que influência a finalização da análise
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_guia_mat_w		pls_guia_plano_mat.nr_sequencia%type;
nr_seq_guia_proc_w		pls_guia_plano_proc.nr_sequencia%type;
ie_tipo_processo_w		pls_requisicao.ie_tipo_processo%type;
ie_status_proc_mat_w		pls_guia_plano_proc.ie_status%type;

C01 CURSOR( nr_seq_requisicao_pc	pls_requisicao.nr_sequencia%type ) FOR

	SELECT	nr_seq_motivo_glosa
	from	pls_requisicao_glosa	a
	where	nr_seq_requisicao = nr_seq_requisicao_pc;

C02 CURSOR( 	nr_seq_req_proc_pc		pls_requisicao_proc.nr_sequencia%type,
		nr_seq_req_mat_pc		pls_requisicao_mat.nr_sequencia%type ) FOR

	SELECT	nr_seq_motivo_glosa
	from	pls_requisicao_glosa	a
	where	coalesce(nr_seq_requisicao::text, '') = ''
	and	(( nr_seq_req_proc = nr_seq_req_proc_pc and coalesce(nr_seq_req_mat::text, '') = '')
		or ( nr_seq_req_mat = nr_seq_req_mat_pc and coalesce(nr_seq_req_proc::text, '') = '' ) );



C03 CURSOR(	nr_seq_requisicao_pc	pls_requisicao.nr_sequencia%type ) FOR
	SELECT	'P' ie_tipo,
		a.cd_procedimento,
		a.ie_origem_proced,
		null nr_seq_material,
		a.nr_sequencia nr_seq_req_proc,
		null nr_seq_req_mat,
		a.ie_status,
		a.qt_solicitado
	from	pls_requisicao_proc	a
	where	a.nr_seq_requisicao = nr_seq_requisicao_pc
	
union

	SELECT	'M' ie_tipo,
		null cd_procedimento,
		null ie_origem_proced,
		b.nr_seq_material,
		null nr_seq_req_proc,
		b.nr_sequencia nr_seq_req_mat,
		b.ie_status,
		b.qt_solicitado
	from	pls_requisicao_mat	b
	where	b.nr_seq_requisicao = nr_seq_requisicao_pc;
BEGIN

select	ie_tipo_processo
into STRICT	ie_tipo_processo_w
from	pls_requisicao
where	nr_sequencia	= nr_seq_requisicao_p;

--Abre cursos com as glosas da requisição
for C01_w in C01( nr_seq_requisicao_p ) loop
	begin
		insert into pls_guia_glosa(nr_sequencia, dt_atualizacao, nm_usuario,
			dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
			nr_seq_guia_proc, nr_seq_guia_mat, nr_seq_motivo_glosa,
			ds_observacao, ie_origem)
		values (nextval('pls_guia_glosa_seq'), clock_timestamp(), nm_usuario_p,
			clock_timestamp(), nm_usuario_p,nr_seq_guia_plano_p,
			null, null, C01_w.nr_seq_motivo_glosa,
			'Glosa gerada na requisição e replicada para a guia', '');
	end;
end loop;

--Abre o cursor com os itens da requisição
for C03_w in C03( nr_seq_requisicao_p ) loop
	begin
		--Se os itens não foram Liberados então é verificado se existe glosa
		if ( C03_w.ie_status not in ('S','P') ) then
			nr_seq_guia_proc_w	:= null;
			nr_seq_guia_mat_w	:= null;

			if ( C03_w.ie_tipo = 'P' ) then
				select	max(nr_sequencia)
				into STRICT	nr_seq_guia_proc_w
				from	pls_guia_plano_proc
				where	nr_seq_guia 		= nr_seq_guia_plano_p
				and	cd_procedimento 	= C03_w.cd_procedimento
				and	ie_origem_proced	= C03_w.ie_origem_proced;

				select	ie_status
				into STRICT	ie_status_proc_mat_w
				from	pls_guia_plano_proc
				where	nr_sequencia	= nr_seq_guia_proc_w;

				update	pls_guia_plano_proc
				set	ie_status 	= CASE WHEN ie_tipo_processo_w='I' THEN  ie_status_proc_mat_w  ELSE 'N' END ,-- Adicionado decode, pois estava negando itens que estavam aguardando envio intercâmbio
					qt_solicitada 	= CASE WHEN ie_tipo_processo_w='I' THEN  0  ELSE C03_w.qt_solicitado END ,
					qt_autorizada	= 0,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_guia_proc_w;
			else
				select	max(nr_sequencia)
				into STRICT	nr_seq_guia_mat_w
				from	pls_guia_plano_mat
				where	nr_seq_guia 	= nr_seq_guia_plano_p
				and	nr_seq_material = C03_w.nr_seq_material;

				select	ie_status
				into STRICT	ie_status_proc_mat_w
				from	pls_guia_plano_mat
				where	nr_sequencia	= nr_seq_guia_mat_w;

				update	pls_guia_plano_mat
				set	ie_status 	= CASE WHEN ie_tipo_processo_w='I' THEN  ie_status_proc_mat_w  ELSE 'N' END ,-- Adicionado decode, pois estava negando itens que estavam aguardando envio intercâmbio
					qt_solicitada 	= CASE WHEN ie_tipo_processo_w='I' THEN  0  ELSE C03_w.qt_solicitado END ,
					qt_autorizada	= 0,
					dt_atualizacao	= clock_timestamp(),
					nm_usuario	= nm_usuario_p
				where	nr_sequencia	= nr_seq_guia_mat_w;
			end if;

			--Abre o cursor com as glosas geradas para os itens da requisição
			for C02_w in C02( C03_w.nr_seq_req_proc, C03_w.nr_seq_req_mat ) loop
				begin
					insert into pls_guia_glosa(nr_sequencia, dt_atualizacao, nm_usuario,
						dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_guia,
						nr_seq_guia_proc, nr_seq_guia_mat, nr_seq_motivo_glosa,
						ds_observacao, ie_origem)
					values (nextval('pls_guia_glosa_seq'), clock_timestamp(), nm_usuario_p,
						clock_timestamp(), nm_usuario_p,null,
						nr_seq_guia_proc_w, nr_seq_guia_mat_w, C02_w.nr_seq_motivo_glosa,
						'Glosa gerada na requisição e replicada para a guia', '');
					end;
			end loop;
		end if;
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gravar_glosa_req_guia_imp ( nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_guia_plano_p pls_guia_plano.nr_sequencia%type, nm_usuario_p text) FROM PUBLIC;

