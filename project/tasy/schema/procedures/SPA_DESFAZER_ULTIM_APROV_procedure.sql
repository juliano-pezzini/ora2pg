-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE spa_desfazer_ultim_aprov ( nr_seq_spa_p bigint, nm_usuario_p text) AS $body$
DECLARE

/*Somente para desfazer a ultima aprovacao gerada na alçada*/

ie_rota_aprov_w				varchar(1);
nr_seq_aprovacao_w			spa_aprovacao.nr_sequencia%type;
nr_seq_aprov_prox_w			spa_aprovacao.nr_sequencia%type;
ie_desfazer_aprov_w			varchar(1);
ie_status_atualizar_spa_w		smallint;
ie_status_w				spa.ie_status%type;

C01 CURSOR FOR
	SELECT  nr_sequencia
	from 	spa_aprovacao
	where	nr_sequencia > nr_seq_aprovacao_w
	and	(dt_lib_aprov IS NOT NULL AND dt_lib_aprov::text <> '')
	and 	coalesce(dt_aprovacao::text, '') = ''
	and 	nr_seq_spa = nr_seq_spa_p
	order by nr_sequencia;


BEGIN

if (coalesce(nr_seq_spa_p,0) <> 0) then

	select 	ie_status
	into STRICT 	ie_status_w
	from 	spa
	where 	nr_sequencia = nr_seq_spa_p;

	select 	coalesce(max(nr_sequencia),0)
	into STRICT   	nr_seq_aprovacao_w
	from   	spa_aprovacao
	where  	nr_seq_spa 	= nr_seq_spa_p
	and 	(dt_aprovacao IS NOT NULL AND dt_aprovacao::text <> '')
	and 	(dt_lib_aprov IS NOT NULL AND dt_lib_aprov::text <> '');

	if (nr_seq_aprovacao_w > 0) then

		update 	spa_aprovacao
		set	dt_aprovacao 	   = NULL,
			nm_usuario 	  = nm_usuario_p,
			dt_atualizacao    = clock_timestamp(),
			nm_aprovador_real  = NULL
		where 	nr_sequencia 	  = nr_seq_aprovacao_w;

		open C01;
		loop
		fetch C01 into
			nr_seq_aprov_prox_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			/*limpa a data de liberacao para o proximo da alçada quando desfazemos a aprovacao*/

			update 	spa_aprovacao
			set	dt_lib_aprov 	   = NULL,
				nm_usuario 	  = nm_usuario_p,
				dt_atualizacao    = clock_timestamp()
			where 	nr_sequencia 	  = nr_seq_aprov_prox_w
			and 	nr_seq_spa 	  = nr_seq_spa_p;
			exit;

			end;
		end loop;
		close C01;

		/*obter o status em que a SPA deve ficar apos desfazer aprovacoes
		 2 - Liberada      3 - Em aprovacao	*/
		select 	CASE WHEN count(1)=0 THEN 2  ELSE 3 END
		into STRICT	ie_status_atualizar_spa_w
		from 	spa_aprovacao
		where	nr_seq_spa = nr_seq_spa_p
		and	(dt_aprovacao IS NOT NULL AND dt_aprovacao::text <> '');

		update 	spa
		set	ie_status = ie_status_atualizar_spa_w
		where 	nr_sequencia = nr_seq_spa_p;

		update	spa_hist_email a
		set	dt_estorno_lib_spa 	= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			dt_atualizacao  	= clock_timestamp()
		where	a.nr_seq_spa		= nr_seq_spa_p
		and	coalesce(dt_estorno_lib_spa::text, '') = '';

		CALL spa_gerar_historico(nr_seq_spa_p,nm_usuario_p,ie_status_w,ie_status_atualizar_spa_w,7,'','N');

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE spa_desfazer_ultim_aprov ( nr_seq_spa_p bigint, nm_usuario_p text) FROM PUBLIC;

