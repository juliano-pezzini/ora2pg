-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_regra_diaria_tx ( nm_usuario_p text, nr_interno_conta_p bigint) AS $body$
DECLARE

			 
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_taxa_w		bigint;
ie_tipo_criterio_w	varchar(1);
qt_proc_conta_w		bigint;
nr_seq_regra_w		bigint;
nr_sequencia_w		bigint;
cd_motivo_exc_conta_w	smallint;
cd_estabelecimento_w	smallint;

C01 CURSOR FOR 
	SELECT	b.nr_sequencia, 
		b.qt_taxa, 
		b.ie_tipo_criterio 
	from	procedimento_paciente a, 
		conv_regra_diaria_tx b 
	where	a.cd_procedimento = b.cd_procedimento 
	and	a.ie_origem_proced = b.ie_origem_proced 
	and	a.nr_interno_conta = nr_interno_conta_p 
	and 	b.qt_taxa > 0 
	order by	b.cd_procedimento, 
		b.ie_origem_proced;

C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	procedimento_paciente 
	where	nr_interno_conta = nr_interno_conta_p 
	and	coalesce(obter_se_regra_diaria_tx(nr_sequencia, nr_seq_regra_w),'N') = 'S' 
	and	coalesce(ie_tipo_criterio_w,'N') = 'P' 
	order by	coalesce(obter_prior_regra_diaria_tx(nr_sequencia, nr_seq_regra_w),999);

C03 CURSOR FOR 
	SELECT	nr_sequencia 
	from	procedimento_paciente 
	where	nr_interno_conta = nr_interno_conta_p 
	and	coalesce(obter_se_regra_diaria_tx(nr_sequencia, nr_seq_regra_w),'N') = 'S' 
	and	coalesce(ie_tipo_criterio_w,'N') = 'M' 
	order by	vl_procedimento;
	
C04 CURSOR FOR 
	SELECT	nr_sequencia 
	from	procedimento_paciente 
	where	nr_interno_conta = nr_interno_conta_p 
	and	coalesce(obter_se_regra_diaria_tx(nr_sequencia, nr_seq_regra_w),'N') = 'S' 
	and	coalesce(ie_tipo_criterio_w,'N') = 'N' 
	order by	vl_procedimento desc;
			

BEGIN 
 
select	coalesce(max(cd_estabelecimento),0) 
into STRICT	cd_estabelecimento_w 
from	conta_paciente 
where	nr_interno_conta = nr_interno_conta_p;
 
select	coalesce(max(cd_motivo_exc_conta),0) 
into STRICT	cd_motivo_exc_conta_w 
from	parametro_faturamento 
where	cd_estabelecimento = cd_estabelecimento_w;
 
open C01;
loop 
fetch C01 into 
	nr_seq_regra_w, 
	qt_taxa_w, 
	ie_tipo_criterio_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	qt_proc_conta_w:= 0;
	 
	if (coalesce(ie_tipo_criterio_w,'P') = 'P') then 
	 
		open C02;
		loop 
		fetch C02 into	 
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			if (qt_taxa_w > qt_proc_conta_w) then 
			 
				update	procedimento_paciente 
				set	nr_interno_conta  = NULL, 
					cd_motivo_exc_conta = cd_motivo_exc_conta_w, 
					nm_usuario = nm_usuario_p, 
					dt_atualizacao = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_w;				
				 
				qt_proc_conta_w:= qt_proc_conta_w + 1;
				 
			end if;
			 
			end;
		end loop;
		close C02;
		 
	elsif (coalesce(ie_tipo_criterio_w,'P') = 'M') then 
	 
		open C03;
		loop 
		fetch C03 into	 
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
			 
			if (qt_taxa_w > qt_proc_conta_w) then 
			 
				update	procedimento_paciente 
				set	nr_interno_conta  = NULL, 
					cd_motivo_exc_conta = cd_motivo_exc_conta_w, 
					nm_usuario = nm_usuario_p, 
					dt_atualizacao = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_w;				
				 
				qt_proc_conta_w:= qt_proc_conta_w + 1;
				 
			end if;
			 
			end;
		end loop;
		close C03;
		 
	elsif (coalesce(ie_tipo_criterio_w,'P') = 'N') then 
	 
		open C04;
		loop 
		fetch C04 into	 
			nr_sequencia_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin 
			 
			if (qt_taxa_w > qt_proc_conta_w) then 
			 
				update	procedimento_paciente 
				set	nr_interno_conta  = NULL, 
					cd_motivo_exc_conta = cd_motivo_exc_conta_w, 
					nm_usuario = nm_usuario_p, 
					dt_atualizacao = clock_timestamp() 
				where	nr_sequencia = nr_sequencia_w;				
				 
				qt_proc_conta_w:= qt_proc_conta_w + 1;
				 
			end if;
			 
			end;
		end loop;
		close C04;
	 
	end if;
 
	commit;
	 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_regra_diaria_tx ( nm_usuario_p text, nr_interno_conta_p bigint) FROM PUBLIC;

