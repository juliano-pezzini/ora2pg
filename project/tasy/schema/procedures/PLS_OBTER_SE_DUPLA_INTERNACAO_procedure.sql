-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_se_dupla_internacao ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_gerar_ocorrencia_p INOUT text, ds_contas_p INOUT text) AS $body$
DECLARE


dt_entrada_w			timestamp;
dt_alta_w			timestamp;
dt_entrada_trunc_w		timestamp;
dt_alta_trunc_w			timestamp;
nr_seq_conta_w			pls_conta.nr_sequencia%type;
ds_contas_w			varchar(255);
ie_tipo_guia_w			pls_conta.ie_tipo_guia%type;
ie_tipo_conta_w			pls_conta.ie_tipo_conta%type;
qt_compl_internacao_w		integer;
cd_guia_referencia_w    	pls_conta.cd_guia_ok%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_segurado = nr_seq_segurado_p
	and	nr_sequencia <> nr_seq_conta_p
	and	ie_tipo_guia = '5'
	and	ie_status != 'C'
	and 	((ie_glosa <> 'S') or (coalesce(ie_glosa::text, '') = ''))
	and 	((obter_se_datas_entre_periodo(CASE WHEN ie_tipo_guia_w='4' THEN trunc(dt_entrada)  ELSE dt_entrada END , CASE WHEN ie_tipo_guia_w='4' THEN trunc(dt_alta)  ELSE dt_alta END , CASE WHEN ie_tipo_guia_w='4' THEN dt_entrada_trunc_w  ELSE dt_entrada_w END , CASE WHEN ie_tipo_guia_w='4' THEN dt_alta_trunc_w  ELSE dt_alta_w END ) = 'S')
	or (obter_se_datas_entre_periodo(CASE WHEN ie_tipo_guia_w='4' THEN dt_entrada_trunc_w  ELSE dt_entrada_w END , CASE WHEN ie_tipo_guia_w='4' THEN dt_alta_trunc_w  ELSE dt_alta_w END , CASE WHEN ie_tipo_guia_w='4' THEN trunc(dt_entrada)  ELSE dt_entrada END , CASE WHEN ie_tipo_guia_w='4' THEN trunc(dt_alta)  ELSE dt_alta END ) = 'S'))
	
union

	SELECT	nr_sequencia
	from	pls_conta
	where	nr_seq_segurado = nr_seq_segurado_p
	and	nr_sequencia <> nr_seq_conta_p
	and	((coalesce(cd_guia_referencia,0) <> coalesce(cd_guia_referencia_w,0)) or (coalesce(cd_guia_referencia::text, '') = '' and coalesce(cd_guia_referencia_w::text, '') = ''))
	and	ie_tipo_guia = '4'
	and	ie_status != 'C'
	and 	((ie_glosa <> 'S') or (coalesce(ie_glosa::text, '') = ''))
	and 	pls_obter_se_internado(nr_sequencia, '') = 'S'
	and 	trunc(dt_atendimento_referencia) = dt_entrada_trunc_w;

BEGIN
-- inicia a variável como null
ds_contas_w := null;

select	max(ie_tipo_guia),
	max(cd_guia_ok)
into STRICT	ie_tipo_guia_w,
	cd_guia_referencia_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_p;

/*Diego OS 266750 - Em guias de honorário individual a verificação será feita com base na guia de internação.*/

if (ie_tipo_guia_w = '6') then

	select	max(nr_sequencia),
		max(ie_tipo_guia)
	into STRICT	nr_seq_conta_w,
		ie_tipo_guia_w
	from	pls_conta
	where	cd_guia_ok = cd_guia_referencia_w
	and	ie_tipo_guia = '5';
end if;

if (ie_tipo_guia_w = '5') then

	select	max(dt_entrada),
		max(dt_alta),
		max(cd_guia_referencia),
		max(ie_tipo_conta)
	into STRICT	dt_entrada_w,
		dt_alta_w,
		cd_guia_referencia_w,
		ie_tipo_conta_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;

elsif (ie_tipo_guia_w = '6') then

	select	max(dt_atendimento_referencia),
		max(dt_atendimento_referencia),
		max(cd_guia_referencia),
		max(ie_tipo_conta)
	into STRICT	dt_entrada_w,
		dt_alta_w,
		cd_guia_referencia_w,
		ie_tipo_conta_w
	from	pls_conta
	where	nr_sequencia = nr_seq_conta_p;
end if;

-- jung OS 693314 - Tem que inicializar a variável.
qt_compl_internacao_w := 0;

-- Verifica se o intercâmbio não é um complemento de internação Demitrius O.S 569895
if (ie_tipo_conta_w = 'I') then

	select  count(1)
	into STRICT    qt_compl_internacao_w
	from    ptu_nota_cobranca a,
		pls_conta b
	where   a.nr_sequencia = b.nr_seq_nota_cobranca
	and	b.nr_sequencia = nr_seq_conta_p
	and     a.cd_excecao = 'E';
end if;

if (qt_compl_internacao_w = 0) then

	dt_entrada_trunc_w	:= trunc(dt_entrada_w);
	dt_alta_trunc_w		:= trunc(dt_alta_w);

	for r_c01_w in C01 loop

		-- se estiver nulo então é a primeira conta
		if (coalesce(ds_contas_w::text, '') = '') then

			ds_contas_w := to_char(r_c01_w.nr_sequencia);
		else

			ds_contas_w := substr(ds_contas_w || ',' || to_char(r_c01_w.nr_sequencia), 1, 255);
		end if;
	end loop;
end if;

if (coalesce(ds_contas_w::text, '') = '') then

	ie_gerar_ocorrencia_p := 'S';
else

	ds_contas_p := 'Contas de internação existentes neste período: ' || ds_contas_w;
	ie_gerar_ocorrencia_p := 'N';
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_se_dupla_internacao ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, ie_gerar_ocorrencia_p INOUT text, ds_contas_p INOUT text) FROM PUBLIC;

