-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_proc_associado ( nr_seq_proc_interno_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_medico_exec_p text, ie_origem_proc_filtro_p bigint, qt_idade_pac_p bigint, ie_proced_vinculado_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text) AS $body$
DECLARE

			
cd_procedimento_w		bigint;			
nr_sequencia_w			bigint;
ie_origem_proced_w		bigint;
cd_plano_convenio_w		varchar(10);
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_sequencia_proc_w		bigint;
nr_seq_proc_int_adic_w		bigint;
ie_gerar_opme_w			varchar(1);
cd_material_w			bigint;
qt_material_w			double precision;
ie_padrao_w			varchar(1);
cd_cgc_w			varchar(14);
ds_observacao_w			varchar(255);
ie_registra_observacao_w	varchar(1);
ie_tipo_convenio_w		smallint	:= 0;
cd_estabelecimento_w		integer;
cd_perfil_w			integer;
qt_proc_adic_w		double precision;
ie_considera_estab_agenda_w		varchar(3);
cd_plano_agenda_w				agenda_paciente.cd_plano%type;
cd_estab_opme_w					agenda.cd_estabelecimento%type;
cd_estab_agenda_w				agenda.cd_estabelecimento%type;

	
c01 CURSOR FOR 			
	SELECT	OBTER_CD_PROC_TAB_INTERNO(coalesce(NR_SEQ_PROC_INT_ADIC,nr_seq_proc_interno_p),wheb_usuario_pck.get_cd_estabelecimento,cd_convenio,CD_CATEGORIA_CONVENIO,'CD'),
		OBTER_CD_PROC_TAB_INTERNO(coalesce(NR_SEQ_PROC_INT_ADIC,nr_seq_proc_interno_p),wheb_usuario_pck.get_cd_estabelecimento,cd_convenio,CD_CATEGORIA_CONVENIO,'O'),
		nr_seq_proc_int_adic,
		cd_plano_convenio,
		cd_convenio,
		cd_categoria_convenio,
		coalesce(qt_proc_adic,1)
	from	proc_int_proc_prescr a
	where	a.nr_seq_proc_interno	= nr_seq_proc_interno_p
	and 	coalesce(a.cd_convenio,cd_convenio_p) = cd_convenio_p
	and		((coalesce(a.cd_estabelecimento::text, '') = '') or (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento))
	and	coalesce(a.ie_situacao,'A')	= 'A'
	and		((coalesce(cd_perfil::text, '') = '') or (cd_perfil = obter_perfil_ativo))
	and	((coalesce(a.cd_edicao_amb::text, '') = '') or ((a.cd_procedimento IS NOT NULL AND a.cd_procedimento::text <> '') and (obter_se_proc_edicao2(a.cd_procedimento, a.ie_origem_proced, a.cd_edicao_amb) = 'S')))
	and 	((coalesce(a.cd_convenio_excluir::text, '') = '') or (a.cd_convenio_excluir <> cd_convenio_p))
	and	((coalesce(a.cd_categoria_convenio::text, '') = '') or (a.cd_categoria_convenio = cd_categoria_p))
	and	((a.cd_plano_convenio	= cd_plano_p) or (coalesce(a.cd_plano_convenio::text, '') = ''))
	and	((coalesce(a.cd_medico_prescritor::text, '') = '') or (a.cd_medico_prescritor = cd_medico_exec_p))
	and	((coalesce(a.cd_medico_excluir::text, '') = '') or (a.cd_medico_excluir <> cd_medico_exec_p))
	and 	((a.ie_origem_proc_filtro = ie_origem_proc_filtro_p) or (coalesce(a.ie_origem_proc_filtro::text, '') = ''))
	and	(((coalesce(qt_idade_pac_p::text, '') = '') or (coalesce(a.qt_idade_min::text, '') = '' and coalesce(a.qt_idade_max::text, '') = '')) or
		((qt_idade_pac_p IS NOT NULL AND qt_idade_pac_p::text <> '') and (qt_idade_pac_p between coalesce(a.qt_idade_min,qt_idade_pac_p) and
		coalesce(a.qt_idade_max,qt_idade_pac_p))))
	and 	not exists (	SELECT 	1
				from	agenda_paciente_proc d
				where 	d.nr_sequencia  	= nr_seq_agenda_p
				and	d.ie_origem_proced	= OBTER_CD_PROC_TAB_INTERNO(coalesce(a.NR_SEQ_PROC_INT_ADIC,nr_seq_proc_interno_p),wheb_usuario_pck.get_cd_estabelecimento,a.cd_convenio,a.CD_CATEGORIA_CONVENIO,'O')
				and	d.cd_procedimento	= OBTER_CD_PROC_TAB_INTERNO(coalesce(a.NR_SEQ_PROC_INT_ADIC,nr_seq_proc_interno_p),wheb_usuario_pck.get_cd_estabelecimento,cd_convenio,CD_CATEGORIA_CONVENIO,'CD'))
		and	coalesce(ie_somente_agenda_int,'N') = 'N';
	--and	((nvl(ie_proced_vinculado_p,'T') = 'T') or (a.ie_proced_vinculado = ie_proced_vinculado_p));
	
c06 CURSOR FOR
	SELECT	a.cd_material,
		a.qt_material,
		coalesce(a.ie_padrao,'S'),
		a.cd_cgc,
		a.ds_observacao
	from	proc_interno_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_int_adic_w
	and	coalesce(a.cd_medico::text, '') = ''
	and	coalesce(a.cd_convenio,coalesce(cd_convenio_p,0))	= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio,ie_tipo_convenio_w)	= ie_tipo_convenio_w
	and	coalesce(a.cd_plano, cd_plano_agenda_w)	= cd_plano_agenda_w
	and	coalesce(a.cd_estabelecimento, cd_estab_opme_w)	= cd_estab_opme_w
	and 	not exists (	SELECT	1
				from	agenda_pac_opme x
				where	x.nr_seq_agenda		=	nr_seq_agenda_p
				and	x.cd_material		=	a.cd_material)
	and	ie_gerar_opme_w = 'S'						
	
union

	select	a.cd_material,
		a.qt_material,
		coalesce(a.ie_padrao,'S'),
		a.cd_cgc,
		a.ds_observacao
	from	proc_interno_opme a
	where	a.nr_seq_proc_interno	=	nr_seq_proc_int_adic_w
	and	a.cd_medico		=	cd_medico_exec_p
	and	coalesce(a.cd_convenio,coalesce(cd_convenio_p,0))	= coalesce(cd_convenio_p,0)
	and	coalesce(a.ie_tipo_convenio,ie_tipo_convenio_w)	= ie_tipo_convenio_w
	and	coalesce(a.cd_plano, cd_plano_agenda_w)	= cd_plano_agenda_w
	and	coalesce(a.cd_estabelecimento, cd_estab_opme_w)	= cd_estab_opme_w	
	and 	not exists (	select	1
				from	agenda_pac_opme x
				where	x.nr_seq_agenda		=	nr_seq_agenda_p
				and	x.cd_material		=	a.cd_material)
	and	ie_gerar_opme_w = 'S';					
	


BEGIN

cd_perfil_w		:=	wheb_usuario_pck.get_cd_perfil;
cd_estabelecimento_w	:= 	wheb_usuario_pck.get_cd_estabelecimento;
ie_tipo_convenio_w	:= 	coalesce(obter_tipo_convenio(cd_convenio_p),0);

ie_gerar_opme_w := Obter_Param_Usuario(871, 260, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_opme_w);
ie_registra_observacao_w := Obter_Param_Usuario(871, 281, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_registra_observacao_w);
ie_considera_estab_agenda_w := Obter_Param_Usuario(871, 648, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_considera_estab_agenda_w);

if (ie_considera_estab_agenda_w = 'O') or (ie_considera_estab_agenda_w = 'CO') then
	select 		max(cd_estabelecimento)
	into STRICT		cd_estab_opme_w
	from		agenda a,
				agenda_paciente b
	where		a.cd_agenda = b.cd_agenda
	and		    b.nr_sequencia = nr_seq_agenda_p;
else
	cd_estab_opme_w := wheb_usuario_pck.get_cd_estabelecimento;
end if;
	
open C01;
loop
fetch C01 into	
	cd_procedimento_w,
	ie_origem_proced_w,
	nr_seq_proc_int_adic_w,
	cd_plano_convenio_w,
	cd_convenio_w,
	cd_categoria_w,
	qt_proc_adic_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	coalesce(max(nr_seq_agenda),0) + 1
	into STRICT	nr_sequencia_proc_w
	from	agenda_paciente_proc
	where	nr_sequencia = nr_seq_agenda_p;
	
	insert into agenda_paciente_proc(nr_sequencia,
		nr_seq_agenda,
		ie_origem_proced,
		cd_plano,
		cd_convenio,
		cd_categoria,
		cd_procedimento,
		nm_usuario,
		DT_ATUALIZACAO,
		nr_seq_proc_interno,
		qt_procedimento)
	values (nr_seq_agenda_P,
		nr_sequencia_proc_w,
		ie_origem_proced_w,
		coalesce(cd_plano_convenio_w,cd_plano_p),
		coalesce(cd_convenio_w,cd_convenio_p),
		coalesce(cd_categoria_w,cd_categoria_p),
		cd_procedimento_W,
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_proc_int_adic_w,
		qt_proc_adic_w);
	
	cd_plano_agenda_w := coalesce(cd_plano_convenio_w,cd_plano_p);

	open c06;
	loop
	fetch c06	into
			cd_material_w,
			qt_material_w,
			ie_padrao_w,
			cd_cgc_w,
			ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on c06 */
		begin

		select	nextval('agenda_pac_opme_seq')
		into STRICT	nr_sequencia_w
		;

		insert into agenda_pac_opme(
			cd_material,
			qt_material,
			nr_sequencia,
			nr_seq_agenda,
			dt_atualizacao,
			nm_usuario,
			nr_seq_apres,
			ie_origem_inf,
			ie_autorizado,
			ie_padrao,
			cd_cgc,
			nr_seq_proc_interno,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_observacao)
		values (
			cd_material_w,
			qt_material_w,
			nr_sequencia_w,
			nr_seq_agenda_p,
			clock_timestamp(),
			nm_usuario_p,
			500,
			'I',
			'P',
			ie_padrao_w,
			cd_cgc_w,
			nr_seq_proc_int_adic_w,
			clock_timestamp(),
			nm_usuario_p,
			CASE WHEN ie_registra_observacao_w='S' THEN ds_observacao_w  ELSE null END );
			
			CALL gerar_autor_regra(null,
					null,
					null,
					null,
					null,
					null,
					'AP',
					nm_usuario_p,
					nr_seq_agenda_p,	
					null,
					null,
					null,
					nr_sequencia_w,
					null,
					'',
					'',
					'');
						
		end;
	end loop;
	close c06;	
	end;
	
	CALL gerar_autor_regra(null,
			null,
			null,
			null,
			null,
			null,
			'AP',
			nm_usuario_p,
			nr_seq_agenda_p,	
			null,
			null,
			null,
			null,
			nr_sequencia_proc_w,
			'',
			'',
			'');
			
end loop;
close C01;	
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_proc_associado ( nr_seq_proc_interno_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, cd_medico_exec_p text, ie_origem_proc_filtro_p bigint, qt_idade_pac_p bigint, ie_proced_vinculado_p bigint, nr_seq_agenda_p bigint, nm_usuario_p text) FROM PUBLIC;

