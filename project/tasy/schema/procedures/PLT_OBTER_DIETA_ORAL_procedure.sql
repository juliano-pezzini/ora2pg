-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_obter_dieta_oral ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_horarios_dietas_orais_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint) AS $body$
DECLARE


nr_prescricao_w		bigint;
cd_refeicao_w		varchar(15);
ds_refeicao_w		varchar(255);
ie_lib_pend_rep_w	varchar(1);
ie_liberado_w		varchar(1);
nr_seq_wadep_w		bigint;
ie_status_item_w	varchar(1);
ds_inter_prescr_w	varchar(15);
nr_seq_dieta_w		integer;
ie_copiar_w		varchar(1);
ds_cor_titulo_w			varchar(20);

c01 CURSOR FOR
SELECT	c.cd_refeicao,
	x.ds_valor_dominio,
	substr(obter_desc_intervalo_prescr(d.cd_intervalo),1,15) ds_intervalo,
	d.nr_sequencia,
	substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1) ie_lib_pend_rep,
	CASE WHEN coalesce(coalesce(a.dt_liberacao,a.dt_liberacao_medico),a.dt_liberacao_farmacia) IS NULL THEN 'N'  ELSE 'S' END  ie_liberado
from	valor_dominio x,
	prescr_dieta d,
	prescr_dieta_hor c,
	prescr_medica a
where	x.vl_dominio = c.cd_refeicao
and	d.nr_prescricao = c.nr_prescricao
and	d.nr_prescricao = a.nr_prescricao
and	c.nr_prescricao = a.nr_prescricao
and	x.cd_dominio = 99
and	a.nr_atendimento = nr_atendimento_p
and	a.dt_validade_prescr > dt_validade_limite_p
and	coalesce(c.ie_situacao,'A') = 'A'
and	c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p
and	coalesce(a.ie_adep,'S') = 'S'
and	((a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_original = nm_usuario_p))
group by
	c.cd_refeicao,
	x.ds_valor_dominio,
	d.cd_intervalo,
	d.nr_sequencia,
	a.dt_liberacao_medico,
	a.dt_liberacao,
	a.dt_liberacao_farmacia;

c02 CURSOR FOR
SELECT	to_char(d.cd_dieta),
	x.nm_dieta,
	substr(obter_status_hor_dieta_oral(c.dt_fim_horario,d.dt_suspensao),1,1),
	substr(obter_desc_intervalo_prescr(d.cd_intervalo),1,15) ds_intervalo,
	d.nr_sequencia,
	substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1) ie_lib_pend_rep,
	CASE WHEN coalesce(coalesce(a.dt_liberacao,a.dt_liberacao_medico),a.dt_liberacao_farmacia) IS NULL THEN 'N'  ELSE 'S' END  ie_liberado
from	dieta x,
	prescr_dieta d,
	prescr_dieta_hor c,
	prescr_medica a
where	x.cd_dieta = d.cd_dieta
and	d.nr_prescricao = c.nr_prescricao
and	d.nr_prescricao	= a.nr_prescricao
and	c.nr_prescricao = a.nr_prescricao
and	a.nr_atendimento = nr_atendimento_p
and	a.dt_validade_prescr > dt_validade_limite_p
and	coalesce(c.ie_situacao,'A') = 'A'
and	coalesce(a.ie_adep,'S') = 'S'
and	c.dt_horario between dt_inicial_horarios_p and dt_final_horarios_p
and	((a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_original = nm_usuario_p))
group by
	d.cd_dieta,
	x.nm_dieta,
	c.dt_fim_horario,
	d.dt_suspensao,
	d.cd_intervalo,
	d.nr_sequencia,
	a.dt_liberacao_medico,
	a.dt_liberacao,
	a.dt_liberacao_farmacia

union

select	to_char(d.cd_dieta),
	x.nm_dieta,
	substr(obter_status_hor_dieta_oral(null,d.dt_suspensao),1,1),
	substr(obter_desc_intervalo_prescr(d.cd_intervalo),1,15) ds_intervalo,
	d.nr_sequencia,
	substr(plt_obter_lib_pend_prescr(a.dt_liberacao_medico,a.dt_liberacao,a.dt_liberacao_farmacia),1,1) ie_lib_pend_rep,
	CASE WHEN coalesce(coalesce(a.dt_liberacao,a.dt_liberacao_medico),a.dt_liberacao_farmacia) IS NULL THEN 'N'  ELSE 'S' END  ie_liberado
from	dieta x,
	prescr_dieta d,
	prescr_medica a
where	x.cd_dieta = d.cd_dieta
and	d.nr_prescricao	= a.nr_prescricao
and	a.nr_atendimento = nr_atendimento_p
and	a.dt_validade_prescr > dt_validade_limite_p
--and	((a.dt_liberacao_medico is not null) and (a.dt_liberacao is not null))
and	coalesce(a.ie_adep,'S') = 'S'
and	not exists (
		SELECT	1
		from	prescr_dieta_hor c
		where	c.nr_prescricao = d.nr_prescricao
		and	c.nr_prescricao = a.nr_prescricao
		and	Obter_se_horario_liberado(c.dt_lib_horario, c.dt_horario) = 'S')
and	((a.dt_liberacao_medico IS NOT NULL AND a.dt_liberacao_medico::text <> '' AND ie_prescr_usuario_p = 'N') or (a.nm_usuario_original = nm_usuario_p))
group by
	d.cd_dieta,
	x.nm_dieta,
	d.dt_suspensao,
	d.cd_intervalo,
	d.nr_sequencia,
	a.dt_liberacao_medico,
	a.dt_liberacao,
	a.dt_liberacao_farmacia;


BEGIN
ie_copiar_w 	:= plt_obter_se_item_marcado('D', nr_seq_regra_p);
ds_cor_titulo_w	:= plt_obter_se_item_marcado('D', nr_seq_regra_p);

if (ie_horarios_dietas_orais_p <> 'N') then
	begin
	open c01;
	loop
	fetch c01 into	cd_refeicao_w,
			ds_refeicao_w,
			ds_inter_prescr_w,
			nr_seq_dieta_w,
			ie_lib_pend_rep_w,
			ie_liberado_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	nextval('w_rep_t_seq')
		into STRICT	nr_seq_wadep_w
		;

		insert into w_rep_t(
			nr_sequencia,
			nm_usuario,
			nr_seq_item,
			ie_tipo_item,
			cd_item,
			ds_item,
			ie_acm_sn,
			ie_diferenciado,
			nr_seq_proc_interno,
			nr_agrupamento,
			ds_interv_prescr,
			ie_pendente_liberacao,
			ie_liberado,
			ie_copiar
			)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			nr_seq_dieta_w,
			'D',
			cd_refeicao_w,
			ds_refeicao_w,
			'N',
			'N',
			0,
			0,
			ds_inter_prescr_w,
			ie_lib_pend_rep_w,
			ie_liberado_w,
			ie_copiar_w
			);
		end;
	end loop;
	close c01;
	end;
else
	begin
	open c02;
	loop
	fetch c02 into	cd_refeicao_w,
			ds_refeicao_w,
			ie_status_item_w,
			ds_inter_prescr_w,
			nr_seq_dieta_w,
			ie_lib_pend_rep_w,
			ie_liberado_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	nextval('w_rep_t_seq')
		into STRICT	nr_seq_wadep_w
		;

		insert into w_rep_t(
			nr_sequencia,
			nm_usuario,
			nr_seq_item,
			ie_tipo_item,
			cd_item,
			ds_item,
			ie_acm_sn,
			ie_diferenciado,
			nr_seq_proc_interno,
			nr_agrupamento,
			ie_status_item,
			ds_interv_prescr,
			ie_pendente_liberacao,
			ie_liberado,
			ie_copiar,
			ds_cor_titulo)
		values (
			nr_seq_wadep_w,
			nm_usuario_p,
			nr_seq_dieta_w,
			'D',
			cd_refeicao_w,
			ds_refeicao_w,
			'N',
			'N',
			0,
			0,
			ie_status_item_w,
			ds_inter_prescr_w,
			ie_lib_pend_rep_w,
			ie_liberado_w,
			ie_copiar_w,
			ds_cor_titulo_w);
		end;
	end loop;
	close c02;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_obter_dieta_oral ( cd_estabelecimento_p bigint, cd_setor_usuario_p bigint, cd_perfil_p bigint, nm_usuario_p text, nr_atendimento_p bigint, dt_inicial_horarios_p timestamp, dt_final_horarios_p timestamp, dt_validade_limite_p timestamp, ie_horarios_dietas_orais_p text, ie_prescr_usuario_p text, nr_seq_regra_p bigint) FROM PUBLIC;

