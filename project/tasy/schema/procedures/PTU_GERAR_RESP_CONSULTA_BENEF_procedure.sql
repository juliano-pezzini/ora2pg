-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_gerar_resp_consulta_benef ( nr_seq_consulta_p bigint, cd_usuario_plano_p text, nm_beneficiario_p text, sobrenome_benef_p text, dt_nasc_benef_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT bigint) AS $body$
DECLARE

 
ie_tipo_cliente_w		varchar(2);
cd_unimed_executora_w		smallint;
cd_unimed_beneficiario_w	smallint;
nr_seq_segurado_w		bigint;
nm_beneficiario_w		varchar(25);
dt_nascimento_w			timestamp;
nm_empresa_w			varchar(80);
cd_unimed_w			smallint;
cd_unimed_ww			varchar(4);
nm_pessoa_fisica_w		varchar(60);
nr_seq_plano_w			bigint;
nm_plano_w			varchar(20);
nr_seq_tipo_acomod_w		bigint;
dt_inclusao_benef_w		timestamp;
dt_exclusao_benef_w		timestamp;
nr_via_cartao_w			smallint;
ie_sexo_w			varchar(2);
dt_validade_carteira_w		timestamp;
cd_usuario_plano_w		varchar(17);
ie_abrangencia_w		smallint;
ds_tipo_acomodacao_w		varchar(80);
cd_pessoa_fisica_w		varchar(50);
qt_registro_w			bigint;
ie_abrange_w			varchar(2);
nr_seq_execucao_w		bigint;
cd_usuario_plano_ww 		varchar(17);
cd_carteirinha_w		varchar(17);
				
C01 CURSOR FOR 
	SELECT	distinct(a.cd_pessoa_fisica), 
		a.nm_pessoa_fisica, 
		a.ie_sexo 
	from	pls_segurado		c, 
		pls_segurado_carteira	b, 
		pessoa_fisica		a 
	where (a.dt_nascimento	= to_date(dt_nasc_benef_p) or coalesce(to_date(dt_nasc_benef_p)::text, '') = '') 
	and (b.cd_usuario_plano	= cd_carteirinha_w or coalesce(cd_carteirinha_w::text, '') = '') 
	and	upper(elimina_acentos(a.nm_pessoa_fisica)) like upper(elimina_acentos(nm_beneficiario_p||'%'||sobrenome_benef_p||'%')) 
	and	c.nr_sequencia		= b.nr_seq_segurado 
	and	a.cd_pessoa_fisica	= c.cd_pessoa_fisica;

C02 CURSOR FOR 
	SELECT	coalesce(a.nr_via_solicitacao,1), 
		a.dt_validade_carteira, 
		substr(a.cd_usuario_plano,5,17), 
		b.nr_sequencia, 
		b.nr_seq_plano, 
		b.dt_inclusao_operadora, 
		b.dt_rescisao 
	from	pls_segurado_carteira	a, 
		pls_segurado		b 
	where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w 
	and	a.nr_seq_segurado	= b.nr_sequencia 
	and	b.ie_tipo_segurado	in ('A','B','P');
	
C03 CURSOR FOR 
	SELECT	substr(pls_obter_dados_produto(nr_seq_plano_w,'N'),1,20), 
		pls_obter_dados_produto(nr_seq_plano_w,'AP'), 
		ie_abrangencia 
	from  pls_plano 
	where  nr_sequencia	= nr_seq_plano_w;
	

BEGIN 
 
select	ie_tipo_cliente, 
	cd_unimed, 
	cd_unimed_executora, 
	cd_unimed_beneficiario, 
	nr_seq_execucao 
into STRICT	ie_tipo_cliente_w, 
	cd_unimed_w, 
	cd_unimed_executora_w, 
	cd_unimed_beneficiario_w, 
	nr_seq_execucao_w 
from	ptu_consulta_beneficiario 
where	nr_sequencia	= nr_seq_consulta_p;
 
 
if (cd_usuario_plano_p <> '0000000000000') then 
	cd_unimed_ww		:= adiciona_zeros_esquerda(cd_unimed_w, 4);
	cd_usuario_plano_ww	:= cd_usuario_plano_p;
	cd_carteirinha_w	:= cd_unimed_ww||cd_usuario_plano_ww;
else 
	cd_carteirinha_w	:= '';
	cd_usuario_plano_ww	:= null;
end if;
 
 
 
select	nextval('ptu_resp_consulta_benef_seq') 
into STRICT	nr_seq_retorno_p
;
 
insert	into ptu_resp_consulta_benef(nr_sequencia, cd_transacao, ie_tipo_cliente, 
	 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao, 
	 nr_seq_origem, ie_confirmacao, dt_atualizacao, 
	 nm_usuario, nr_seq_requisicao, nr_seq_guia) 
values (nr_seq_retorno_p, '00313', ie_tipo_cliente_w, 
	 cd_unimed_executora_w, cd_unimed_beneficiario_w, nr_seq_execucao_w, 
	 nr_seq_retorno_p, 'S', clock_timestamp(), 
	 nm_usuario_p, null, nr_seq_retorno_p);
 
	 
begin 
	open C01;
	loop 
	fetch C01 into	 
		cd_pessoa_fisica_w, 
		nm_pessoa_fisica_w, 
		ie_sexo_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		 
		select	count(*) 
		into STRICT	qt_registro_w 
		from	pls_segurado_carteira	a, 
			pls_segurado		b 
		where	b.cd_pessoa_fisica	= cd_pessoa_fisica_w 
		and	a.nr_seq_segurado	= b.nr_sequencia 
		and	b.ie_tipo_segurado	in ('A','B','P');
		 
		if (qt_registro_w > 0) then		 
			open C02;
			loop 
			fetch C02 into	 
				nr_via_cartao_w, 
				dt_validade_carteira_w, 
				cd_usuario_plano_w, 
				nr_seq_segurado_w, 
				nr_seq_plano_w, 
				dt_inclusao_benef_w, 
				dt_exclusao_benef_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				 
				nm_beneficiario_w	:= pls_obter_nome_sobrenome(cd_pessoa_fisica_w,'P');
				dt_nascimento_w		:= pls_obter_dados_segurado(nr_seq_segurado_w, 'NAS');
				nm_empresa_w		:= pls_obter_nome_operadora(cd_unimed_beneficiario_w);
				 
				open C03;
				loop 
				fetch C03 into	 
					nm_plano_w, 
					nr_seq_tipo_acomod_w, 
					ie_abrange_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin 
					 
					select	ds_tipo_acomodacao 
					into STRICT	ds_tipo_acomodacao_w 
					from	pls_tipo_acomodacao 
					where	nr_sequencia	= nr_seq_tipo_acomod_w;
					 
					if (ie_abrange_w	= 'E') then 
						ie_abrangencia_w	:= 3;
					elsif (ie_abrange_w	= 'GE') then 
						ie_abrangencia_w	:= 2;
					elsif (ie_abrange_w	= 'GM') then 
						ie_abrangencia_w	:= 4;
					elsif (ie_abrange_w	= 'M') then 
						ie_abrangencia_w	:= 5;
					elsif (ie_abrange_w	= 'N') then 
						ie_abrangencia_w	:= 1;
					end if;
					 
					insert	into ptu_resp_nomes_benef(nr_sequencia, nr_seq_resp_benef, nm_beneficiario, 
						 dt_nascimento, nm_empresa_abrev, cd_unimed, 
						 cd_usuario_plano, nm_compl_benef, nm_plano, 
						 dt_atualizacao, nm_usuario, nm_tipo_acomodacao, 
						 ie_abrangencia, cd_local_cobranca, dt_validade_carteira, 
						 dt_inclusao_benef, dt_exclusao_benef, ie_sexo, 
						 nr_via_cartao) 
					values (nextval('ptu_resp_nomes_benef_seq'), nr_seq_retorno_p, nm_beneficiario_w, 
						coalesce(dt_nasc_benef_p, dt_nascimento_w), substr(nm_empresa_w,1,18), cd_unimed_w, 
						lpad(coalesce(cd_usuario_plano_ww, cd_usuario_plano_w),13,'0'),nm_pessoa_fisica_w, substr(nm_plano_w,1,20), 
						clock_timestamp(), nm_usuario_p, substr(ds_tipo_acomodacao_w,1,20), 
						ie_abrangencia_w, 0, dt_validade_carteira_w, 
						dt_inclusao_benef_w, dt_exclusao_benef_w, ie_sexo_w, 
						nr_via_cartao_w);									
					end;
				end loop;
				close C03;
				 
				end;
			end loop;
			close C02;
					 
		end if;
		end;		
	end loop;
	close C01;
exception 
when others then 
	update	ptu_resp_consulta_benef 
	set	ie_confirmacao	= 'N' 
	where	nr_sequencia	= nr_seq_retorno_p;
	CALL ptu_inserir_inconsistencia(	null, null, 2002, 
					'',cd_estabelecimento_p, nr_seq_retorno_p, 
					'CB', '00313', null, 
					null, null, nm_usuario_p);
end;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_gerar_resp_consulta_benef ( nr_seq_consulta_p bigint, cd_usuario_plano_p text, nm_beneficiario_p text, sobrenome_benef_p text, dt_nasc_benef_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_retorno_p INOUT bigint) FROM PUBLIC;

