-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_pk_banco () AS $body$
DECLARE


qt_columns_w			smallint;
cd_banco_w			banco.cd_banco%type;
cd_banco_externo_w		varchar(60);
nm_atributo_w			varchar(50);
nm_integridade_referencial_w	varchar(50);
nm_tabela_w			varchar(50);
ds_lista_atributo_w		varchar(255);
nm_tabela_referencia_w		varchar(50);
ie_regra_delecao_w		varchar(15);
ds_delecao_w			varchar(255);

c01 CURSOR FOR
SELECT	a.nm_tabela,
	a.nm_integridade_referencial,
	a.nm_tabela_referencia,
	a.ie_regra_delecao
from	integridade_referencial a
where	exists (SELECT	1
	from	integridade_atributo x
	where	x.nm_atributo			= 'CD_BANCO'
	and	x.nm_integridade_referencial	= a.nm_integridade_referencial
	and	x.nm_tabela			= a.nm_tabela)
and	a.nm_tabela_referencia		<> 'BANCO';

c02 CURSOR FOR
SELECT	a.nm_tabela,
	a.nm_integridade_referencial,
	a.ie_regra_delecao
from	integridade_referencial a
where	a.nm_tabela_referencia	= 'BANCO';

c03 CURSOR FOR
SELECT	a.nm_atributo
from	integridade_atributo a
where	a.nm_integridade_referencial	= nm_integridade_referencial_w
and	a.nm_tabela			= nm_tabela_w;


BEGIN

/* Remover as chaves compostas de outras tabelas */

open	c01;
loop
fetch	c01 into
	nm_tabela_w,
	nm_integridade_referencial_w,
	nm_tabela_referencia_w,
	ie_regra_delecao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	CALL Exec_Sql_Dinamico('Tasy',' ALTER TABLE ' || nm_tabela_w || ' DROP CONSTRAINT ' || nm_integridade_referencial_w);

end	loop;
close	c01;

/* Remover as chaves estrangeiras que ligam a tabela BANCO */

open	c02;
loop
fetch	c02 into
	nm_tabela_w,
	nm_integridade_referencial_w,
	ie_regra_delecao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */

	select	max(a.nm_atributo)
	into STRICT	nm_atributo_w
	from	integridade_atributo a
	where	a.nm_integridade_referencial	= nm_integridade_referencial_w
	and	a.nm_tabela			= nm_tabela_w;

	CALL Exec_Sql_Dinamico('Tasy',' ALTER TABLE ' || nm_tabela_w || ' DROP CONSTRAINT ' || nm_integridade_referencial_w);

	CALL Exec_Sql_Dinamico('Tasy',' drop table ' || substr(nm_tabela_w,1,26) || '_BKP ');

	CALL Exec_Sql_Dinamico('Tasy',' create table ' || substr(nm_tabela_w,1,26) || '_BKP as (select * from ' || nm_tabela_w || ') ');

	CALL Exec_Sql_Dinamico('Tasy',' update ' || nm_tabela_w || ' a set a.' || nm_atributo_w || ' = (select to_number(x.cd_banco_externo) from banco x where x.cd_banco = a.' || nm_atributo_w || ') ');

end	loop;
close	c02;

update	banco
set	cd_banco	= (cd_banco_externo)::numeric;

/* Adicionar novamente as chaves estrangeiras que ligam a tabela BANCO */

open	c02;
loop
fetch	c02 into
	nm_tabela_w,
	nm_integridade_referencial_w,
	ie_regra_delecao_w;
EXIT WHEN NOT FOUND; /* apply on c02 */

	select	max(a.nm_atributo)
	into STRICT	nm_atributo_w
	from	integridade_atributo a
	where	a.nm_integridade_referencial	= nm_integridade_referencial_w
	and	a.nm_tabela			= nm_tabela_w;

	if (ie_regra_delecao_w	= 'CASCADE') then
		ds_delecao_w	:= ' on delete cascade ';
	else
		ds_delecao_w	:= null;
	end if;

	CALL Exec_Sql_Dinamico('Tasy',' ALTER TABLE ' || nm_tabela_w || ' ADD (CONSTRAINT ' || nm_integridade_referencial_w || ' FOREIGN KEY (' || nm_atributo_w || ') REFERENCES BANCO(CD_BANCO)' || ds_delecao_w || ')');

end	loop;
close	c02;

/* Adicionar novamente as chaves compostas de outras tabelas */

open	c01;
loop
fetch	c01 into
	nm_tabela_w,
	nm_integridade_referencial_w,
	nm_tabela_referencia_w,
	ie_regra_delecao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	ds_lista_atributo_w	:= null;

	open	c03;
	loop
	fetch	c03 into
		nm_atributo_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */

		if (ds_lista_atributo_w IS NOT NULL AND ds_lista_atributo_w::text <> '') then
			ds_lista_atributo_w	:= ds_lista_atributo_w || ', ';
		end if;

		ds_lista_atributo_w	:= ds_lista_atributo_w || nm_atributo_w;

	end	loop;
	close	c03;

	if (ie_regra_delecao_w	= 'CASCADE') then
		ds_delecao_w	:= ' on delete cascade ';
	else
		ds_delecao_w	:= null;
	end if;

	CALL Exec_Sql_Dinamico('Tasy',' ALTER TABLE ' || nm_tabela_w || ' ADD (CONSTRAINT ' || nm_integridade_referencial_w || ' FOREIGN KEY (' || ds_lista_atributo_w || ') REFERENCES ' || nm_tabela_referencia_w || '(' || ds_lista_atributo_w || ')' || ds_delecao_w || ')');

end	loop;
close	c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_pk_banco () FROM PUBLIC;

