-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cotacao_regra_contrato ( nr_cot_compra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w				integer;
cd_material_ww				integer;
cd_grupo_material_w			smallint;
cd_subgrupo_w				smallint;
cd_classe_material_w			integer;
cd_fornecedor_w				varchar(14);
cd_moeda_w				bigint;
cd_condicao_pagto_w			bigint;
qt_dia_prazo_entrega_w			smallint;
nr_seq_cot_fornecedor_w			bigint;
nr_sequencia_item_w			bigint;
nr_item_cot_compra_w			bigint;
qt_material_w				double precision;
cd_condicao_pagamento_padrao_w		bigint;
qt_conv_compra_estoque_w			double precision;
qt_convertido_w				double precision;
ie_desdobra_mat_cotacao_w			varchar(1);
ie_desdobra_mat_estoque_w			varchar(1);
ie_gera_oc_cot_contrato_w			varchar(1);
vl_preco_w				double precision;
ie_tipo_pessoa_w				smallint;
nr_seq_contrato_w				bigint;
nr_seq_cot_item_forn_w			bigint;	

cd_tributo_w				bigint;
vl_tributo_w				double precision;
pr_tributo_w				double precision;
vl_total_w				double precision;

/*Verifica se gerou fornecedor para a cotacao*/

ie_gerou_fornec_cot_w			varchar(1) := 'N';

/*Ordem Compra*/

nr_ordem_compra_w			bigint;
cd_comprador_w				varchar(10);
cd_pessoa_solicitante_w			varchar(10);

/*Ordem Compra Item*/

cd_unidade_medida_compra_w		varchar(30);
dt_solic_item_w				timestamp;
vl_pagto_w				double precision;
qt_conv_unid_fornec_w			double precision;
cd_cgc_contratado_w			varchar(14);
nr_contrato_w				bigint;
nr_seq_regra_nf_w			bigint;
ie_trib_regra_contrato_w		varchar(1);
qt_existe_w				bigint;
vl_desconto_w				contrato_regra_nf.vl_desconto%type;
pr_desconto_w				contrato_regra_nf.pr_desconto%type;

/* Contrato */

cd_condicao_pagamento_w		contrato.cd_condicao_pagamento%type;

C00 CURSOR FOR
SELECT	cd_material,
	nr_item_cot_compra,
	qt_material
from	cot_compra_item
where	nr_cot_compra = nr_cot_compra_p
and	coalesce(ie_situacao,'A') = 'A';

C01 CURSOR FOR
SELECT	0 ie_tipo, /*Para pessoa juridica*/
	b.cd_cgc_contratado,
	min(coalesce(a.vl_pagto,0)),
	b.nr_sequencia,
	a.nr_Sequencia,
	min(a.vl_desconto),
	min(a.pr_desconto),
	b.cd_condicao_pagamento
from	contrato_regra_nf a,
	contrato b
where	a.nr_seq_contrato = b.nr_sequencia
and	coalesce(a.cd_material, cd_material_w) = cd_material_w
and	substr(obter_dados_pf_pj(null,b.cd_cgc_contratado,'S'),1,1) = 'A'
and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (trunc(a.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (trunc(a.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
and	coalesce(cd_pessoa_contratada::text, '') = ''
and	coalesce(b.ie_situacao,'A') = 'A'
and	((coalesce(b.dt_inicio::text, '') = '') or (trunc(b.dt_inicio,'dd') <= trunc(clock_timestamp(),'dd')))
and	((coalesce(b.dt_fim::text, '') = '') or (trunc(b.dt_fim,'dd') >= trunc(clock_timestamp(),'dd')))
and	((b.cd_estabelecimento = cd_estabelecimento_p) or (obter_se_contrato_lib_estab(b.nr_sequencia, cd_estabelecimento_p) = 'S'))
and (coalesce(a.ie_situacao::text, '') = '' or a.ie_situacao = 'A')
group by b.cd_cgc_contratado,b.nr_sequencia, a.nr_sequencia, b.cd_condicao_pagamento

union all

select	1 ie_tipo, /*Para pessoa fisica*/
	b.cd_pessoa_contratada,
	min(coalesce(a.vl_pagto,0)),
	b.nr_sequencia,
	a.nr_Sequencia,
	min(a.vl_desconto),
	min(a.pr_desconto),
	b.cd_condicao_pagamento
from	contrato_regra_nf a,
	contrato b
where	a.nr_seq_contrato = b.nr_sequencia
and	coalesce(a.cd_material, cd_material_w) = cd_material_w
and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (trunc(a.dt_inicio_vigencia,'dd') <= trunc(clock_timestamp(),'dd')))
and	((coalesce(a.dt_fim_vigencia::text, '') = '') or (trunc(a.dt_fim_vigencia,'dd') >= trunc(clock_timestamp(),'dd')))
and	(cd_pessoa_contratada IS NOT NULL AND cd_pessoa_contratada::text <> '')
and	coalesce(b.ie_situacao,'A') = 'A'
and	((coalesce(b.dt_inicio::text, '') = '') or (trunc(b.dt_inicio,'dd') <= trunc(clock_timestamp(),'dd')))
and	((coalesce(b.dt_fim::text, '') = '') or (trunc(b.dt_fim,'dd') >= trunc(clock_timestamp(),'dd')))
and	((b.cd_estabelecimento = cd_estabelecimento_p) or (obter_se_contrato_lib_estab(b.nr_sequencia, cd_estabelecimento_p) = 'S'))
and (coalesce(a.ie_situacao::text, '') = '' or a.ie_situacao = 'A')
group by b.cd_pessoa_contratada,b.nr_sequencia, a.nr_Sequencia, b.cd_condicao_pagamento;

C02 CURSOR FOR
SELECT	cd_material
from	material
where	cd_material_estoque = cd_material_w
and	ie_situacao   	= 'A'
and	((ie_desdobra_mat_estoque_w = 'S') or
	(((cd_material_estoque <> cd_material) and (obter_qt_mesmo_mat_estoque(cd_material_estoque) > 1)) or (obter_qt_mesmo_mat_estoque(cd_material_estoque) = 1)));

c03 CURSOR FOR
SELECT	c.nr_seq_cot_forn,
	c.nr_item_cot_compra,
	c.cd_material,
	c.cd_unidade_medida_compra,
	c.qt_material,
	c.dt_limite_entrega,
	coalesce(c.vl_unitario_material,0),
	coalesce(c.qt_conv_unid_fornec,0),
	c.cd_cgc_fornecedor,
	c.nr_contrato
from	cot_compra_resumo_v c
where	c.nr_cot_compra      = nr_cot_compra_p;

c04 CURSOR FOR
SELECT	cd_tributo,
	vl_tributo,
	pr_tributo
from	contrato_regra_pagto_trib
where	nr_seq_regra_nf = nr_seq_regra_nf_w
and	ie_corpo_item = 'I'
and	ie_trib_regra_contrato_w = 'S';


BEGIN

begin
select	max(cd_moeda_padrao),
	coalesce(max(cd_condicao_pagamento_padrao),30),
	coalesce(max(ie_desdobra_mat_cotacao),'N'),
	coalesce(max(ie_desdobra_mat_estoque),'N'),
	coalesce(max(ie_gera_oc_cot_contrato),'N'),
	coalesce(max(ie_trib_regra_contrato),'N')
into STRICT	cd_moeda_w,
	cd_condicao_pagamento_padrao_w,
	ie_desdobra_mat_cotacao_w,
	ie_desdobra_mat_estoque_w,
	ie_gera_oc_cot_contrato_w,
	ie_trib_regra_contrato_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_p;
exception
when no_data_found then
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(186698);
end;

open c00;
loop
fetch	c00 into
	cd_material_w,
	nr_item_cot_compra_w,
	qt_material_w;
EXIT WHEN NOT FOUND; /* apply on c00 */
	begin
	select	cd_grupo_material,
		cd_subgrupo_material,
		cd_classe_material
	into STRICT	cd_grupo_material_w,
		cd_subgrupo_w,
		cd_classe_material_w
	from	estrutura_material_v
	where 	cd_material	= cd_material_w;

	open	c01;
	loop
	fetch	c01 into
		ie_tipo_pessoa_w,
		cd_fornecedor_w,
		vl_preco_w,
		nr_seq_contrato_w,
		nr_seq_regra_nf_w,
		vl_desconto_w,
		pr_desconto_w,
		cd_condicao_pagamento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		/* Condicao de pagamento na ordem 
		1 - Contrato
		2 - Condicao do fornecedor.
		3 - Dos parametros do suprimentos
		4 - Valor fixo padrao. */
		
		if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') then
			cd_condicao_pagto_w	:=	cd_condicao_pagamento_w;		
		else
			if (ie_tipo_pessoa_w = 0) then
				begin
				select	coalesce(cd_cond_pagto, cd_condicao_pagamento_padrao_w),
					coalesce(qt_dia_prazo_entrega, 0)
				into STRICT	cd_condicao_pagto_w,
					qt_dia_prazo_entrega_w
				from	pessoa_juridica_estab
				where	cd_cgc = cd_fornecedor_w
				and	cd_estabelecimento = cd_estabelecimento_p;
				exception
					when no_data_found then
					cd_condicao_pagto_w	:= cd_condicao_pagamento_padrao_w;
				end;
			else
				cd_condicao_pagto_w	:= cd_condicao_pagamento_padrao_w;
				qt_dia_prazo_entrega_w	:= 0;
			end if;
	
		end if;

		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_cot_fornecedor_w
		from	cot_compra_forn
		where	nr_cot_compra		= nr_cot_compra_p
		and	((cd_cgc_fornecedor	= cd_fornecedor_w) or (cd_pessoa_fisica		= cd_fornecedor_w));

		if (nr_seq_cot_fornecedor_w = 0) then
			select	nextval('cot_compra_forn_seq')
			into STRICT	nr_seq_cot_fornecedor_w
			;

			insert	into cot_compra_forn(
				nr_sequencia,
				nr_cot_compra,
				cd_cgc_fornecedor,
				cd_pessoa_fisica,
				dt_atualizacao,
				nm_usuario,
				cd_moeda,
				cd_condicao_pagamento,
				ie_frete,
				ie_liberada_internet)
			values (	nr_seq_cot_fornecedor_w,
				nr_cot_compra_p,
				CASE WHEN ie_tipo_pessoa_w=0 THEN cd_fornecedor_w  ELSE '' END ,
				CASE WHEN ie_tipo_pessoa_w=1 THEN cd_fornecedor_w  ELSE '' END ,
				clock_timestamp(),
				nm_usuario_p,
				cd_moeda_w,
				cd_condicao_pagto_w,
				'N',
				'N');
		end if;

		/*Se nao desdobra ou desdobra so nos itens*/

		if (ie_desdobra_mat_cotacao_w in ('N','I')) then

			/*Recebe 'S' pois foi realizado um insert no fonecedor*/

			ie_gerou_fornec_cot_w := 'S';

			select	nextval('cot_compra_forn_item_seq')
			into STRICT	nr_seq_cot_item_forn_w
			;
			
			insert into cot_compra_forn_item(
				nr_sequencia,
				nr_seq_cot_forn,
				nr_cot_compra,
				nr_item_cot_compra,
				cd_cgc_fornecedor,
				qt_material,
				qt_prioridade,
				cd_material,
				vl_unitario_material,
				dt_atualizacao,
				nm_usuario,
				vl_preco_liquido,
				vl_total_liquido_item,
				ie_situacao,
				nr_contrato,
				nr_seq_regra_contrato,
				vl_desconto,
				pr_desconto)
			values (	nr_seq_cot_item_forn_w,
				nr_seq_cot_fornecedor_w,
				nr_cot_compra_p,
				nr_item_cot_compra_w,
				CASE WHEN ie_tipo_pessoa_w=0 THEN cd_fornecedor_w  ELSE '' END ,
				qt_material_w,
				100,
				cd_material_w,
				vl_preco_w,
				clock_timestamp(),
				nm_usuario_p,
				0,
				0,
				'A',
				nr_seq_contrato_w,
				nr_seq_regra_nf_w,
				vl_desconto_w,
				pr_desconto_w);
				
			vl_total_w := qt_material_w * vl_preco_w;
			
			
			open C04;
			loop
			fetch C04 into	
				cd_tributo_w,
				vl_tributo_w,
				pr_tributo_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
								
				if (vl_tributo_w > 0) then
					pr_tributo_w	:= dividir(vl_tributo_w * 100, vl_total_w);
				else
					vl_tributo_w	:= dividir((vl_total_w * pr_tributo_w), 100);
				end if;
				
				select	count(*)
				into STRICT	qt_existe_w
				from	cot_compra_forn_item_tr
				where	nr_seq_cot_item_forn = nr_seq_cot_item_forn_w
				and	cd_tributo = cd_tributo_w;
					
				if (qt_existe_w = 0) then
				
					insert into cot_compra_forn_item_tr(
						nr_cot_compra,
						nr_item_cot_compra,
						cd_cgc_fornecedor,
						cd_tributo,
						pr_tributo,
						vl_tributo,
						dt_atualizacao,
						nm_usuario,
						ds_observacao,
						nr_sequencia,
						nr_seq_cot_item_forn,
						dt_atualizacao_nrec,
						nm_usuario_nrec)
					values (	nr_cot_compra_p,
						nr_item_cot_compra_w,
						CASE WHEN ie_tipo_pessoa_w=0 THEN cd_fornecedor_w  ELSE '' END ,
						cd_tributo_w,
						pr_tributo_w,
						vl_tributo_w,
						clock_timestamp(),
						nm_usuario_p,					
						null,
						nextval('cot_compra_forn_item_tr_seq'),
						nr_seq_cot_item_forn_w,
						clock_timestamp(),
						nm_usuario_p);
				else
						
					update	cot_compra_forn_item_tr
					set	pr_tributo		= pr_tributo_w,
						vl_tributo		= vl_tributo_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_seq_cot_item_forn 	= nr_seq_cot_item_forn_w
					and	cd_tributo 		= cd_tributo_w;
				end if;				
				end;
			end loop;
			close C04;				
		else
			begin

			/*Recebe 'S' pois foi realizado um insert no fonecedor*/

			ie_gerou_fornec_cot_w := 'S';

			open	c02;
			loop
			fetch	c02 into
				cd_material_ww;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				
				select	qt_conv_compra_estoque
				into STRICT	qt_conv_compra_estoque_w
				from	material
				where	cd_material = cd_material_ww;

				qt_convertido_w	:= (round(dividir(qt_material_w,
							qt_conv_compra_estoque_w))) * qt_conv_compra_estoque_w;
							
				
				select	nextval('cot_compra_forn_item_seq')
				into STRICT	nr_seq_cot_item_forn_w
				;
				
				insert into cot_compra_forn_item(
					nr_sequencia,
					nr_seq_cot_forn,
					nr_cot_compra,
					nr_item_cot_compra,
					cd_cgc_fornecedor,
					qt_material,
					qt_prioridade,
					vl_unitario_material,
					dt_atualizacao,
					nm_usuario,
					cd_material,
					vl_preco_liquido,
					vl_total_liquido_item,
					ie_situacao,
					nr_contrato,
					nr_seq_regra_contrato,
					vl_desconto,
					pr_desconto)
				values (	nr_seq_cot_item_forn_w,
					nr_seq_cot_fornecedor_w,
					nr_cot_compra_p,
					nr_item_cot_compra_w,
					CASE WHEN ie_tipo_pessoa_w=0 THEN cd_fornecedor_w  ELSE '' END ,
					qt_convertido_w,
					100,
					vl_preco_w,
					clock_timestamp(),
					nm_usuario_p,
					cd_material_WW,
					0,
					0,
					'A',
					nr_seq_contrato_w,
					nr_seq_regra_nf_w,
					vl_desconto_w,
					pr_desconto_w);

					
					
				vl_total_w := qt_convertido_w * vl_preco_w;
			
				open C04;
				loop
				fetch C04 into	
					cd_tributo_w,
					vl_tributo_w,
					pr_tributo_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
								
					if (vl_tributo_w > 0) then
						pr_tributo_w	:= dividir(vl_tributo_w * 100, vl_total_w);
					else
						vl_tributo_w	:= dividir((vl_total_w * pr_tributo_w), 100);
					end if;
					
					select	count(*)
					into STRICT	qt_existe_w
					from	cot_compra_forn_item_tr
					where	nr_seq_cot_item_forn = nr_seq_cot_item_forn_w
					and	cd_tributo = cd_tributo_w;
						
					if (qt_existe_w = 0) then
				
						insert into cot_compra_forn_item_tr(
							nr_cot_compra,
							nr_item_cot_compra,
							cd_cgc_fornecedor,
							cd_tributo,
							pr_tributo,
							vl_tributo,
							dt_atualizacao,
							nm_usuario,
							ds_observacao,
							nr_sequencia,
							nr_seq_cot_item_forn,
							dt_atualizacao_nrec,
							nm_usuario_nrec)
						values (	nr_cot_compra_p,
							nr_item_cot_compra_w,
							CASE WHEN ie_tipo_pessoa_w=0 THEN cd_fornecedor_w  ELSE '' END ,
							cd_tributo_w,
							pr_tributo_w,
							vl_tributo_w,						
							clock_timestamp(),
							nm_usuario_p,
							null,
							nextval('cot_compra_forn_item_tr_seq'),
							nr_seq_cot_item_forn_w,
							clock_timestamp(),
							nm_usuario_p);
						
					else
						
						update	cot_compra_forn_item_tr
						set	pr_tributo		= pr_tributo_w,
							vl_tributo		= vl_tributo_w,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_seq_cot_item_forn 	= nr_seq_cot_item_forn_w
						and	cd_tributo 		= cd_tributo_w;
					end if;
				
					end;
				end loop;
				close C04;			
				
				end;
			end loop;
			close c02;
			end;
		end if;
		end;
	end loop;
	close 	c01;
	end;
end loop;
close 	c00;

if (ie_gera_oc_cot_contrato_w = 'S') and (ie_gerou_fornec_cot_w = 'S') then
	begin

	select	cd_comprador,
		coalesce(cd_pessoa_solicitante,substr(obter_pessoa_fisica_usuario('asilveira','C'),1,15))
	into STRICT	cd_comprador_w,
		cd_pessoa_solicitante_w
	from	cot_compra
	where	nr_cot_compra = nr_cot_compra_p;

	begin
	CALL calcular_cot_compra_liquida(nr_cot_compra_p, nm_usuario_p);
	CALL gerar_cot_compra_resumo(nr_cot_compra_p, nm_usuario_p);
        exception when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(186701);
	end;

	select	nextval('ordem_compra_seq')
	into STRICT	nr_ordem_compra_w
	;

	insert	into ordem_compra(
		nr_ordem_compra,
		cd_estabelecimento,
	 	cd_cgc_fornecedor,
		cd_pessoa_fisica,
	 	cd_condicao_pagamento,
	 	cd_comprador,
	 	dt_ordem_compra,
	 	dt_atualizacao,
	 	nm_usuario,
	 	cd_moeda,
	 	ie_situacao,
	 	dt_inclusao,
	 	cd_pessoa_solicitante,
	 	cd_cgc_transportador,
	 	ie_frete,
	 	vl_frete,
		vl_despesa_acessoria,
	 	dt_entrega,
		ie_aviso_chegada,
		ie_emite_obs,
		ie_urgente,
		ie_somente_pagto,
		vl_desconto,
		ie_tipo_ordem)
	values (	nr_ordem_compra_w,
		cd_estabelecimento_p,
		CASE WHEN ie_tipo_pessoa_w=0 THEN cd_fornecedor_w  ELSE '' END ,
		CASE WHEN ie_tipo_pessoa_w=1 THEN cd_fornecedor_w  ELSE '' END ,
		cd_condicao_pagto_w,
		cd_comprador_w,
	      	clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		cd_moeda_w,
		'A',
		clock_timestamp(),
		cd_pessoa_solicitante_w,
		null,
		'C',
		0,
		0,
		clock_timestamp() + interval '15 days',
		'N',
		'S',
		'N',
		'N',
		0,
		'C');

	open C03;
	loop
	fetch C03 into	
		nr_seq_cot_fornecedor_w,
		nr_item_cot_compra_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		qt_material_w,
		dt_solic_item_w,
		vl_pagto_w,
		qt_conv_unid_fornec_w,
		cd_cgc_contratado_w,
		nr_contrato_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		CALL grava_item_ordem_compra(
			nr_ordem_compra_w,
			cd_material_w,
			cd_unidade_medida_compra_w,
			vl_pagto_w,
			qt_material_w,
			null,
			null,
			null,
			nm_usuario_p,
			'A',
			dt_solic_item_w,
			null,
			nr_cot_compra_p,
			nr_item_cot_compra_w,
			nr_seq_cot_fornecedor_w,
			qt_conv_unid_fornec_w,
			'N',
			null,
			'N',
			0,
			nr_contrato_w,
			null,
			null,
			null);
		end;
	end loop;
	close C03;

	update	cot_compra
	set	dt_geracao_ordem_compra = clock_timestamp()
	where	nr_cot_compra = nr_cot_compra_p;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cotacao_regra_contrato ( nr_cot_compra_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

