-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_imp_dados_desconto_folha ( nr_seq_cobranca_p bigint, nm_arquivo_p text, ie_opcao_p text, ds_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE


/*	ie_opcao_p
	R = Arquivo de retorno
	C = Arquivo de critica
*/
ds_conteudo_w		varchar(4000);
cd_interface_w		bigint;
nr_seq_pagador_w	pls_mensalidade.nr_seq_pagador%type;
nr_vinculo_w		smallint;
nr_pensao_vitalicia_w	smallint;
nr_rubrica_w		smallint;
ds_especie_w		varchar(20);
dt_referencia_w		timestamp;
vl_descontar_w		double precision;
vl_descontado_w		double precision;
vl_rejeitado_w		double precision;
ds_situacao_w		varchar(30);
ds_motivo_rejeicao_w	varchar(25);
nr_cpf_w		varchar(11);
ds_oficio_w		varchar(9);
vl_recolhido_w		double precision;
dt_direito_w		timestamp;
nr_seq_mensalidade_w	bigint;
nm_pagador_w		varchar(255);
nr_titulo_w		bigint;
cd_banco_w		integer;
cd_agencia_bancaria_w	varchar(8);
nr_conta_w		varchar(20);
ie_digito_conta_w	varchar(2);
nr_seq_cobranca_w	bigint;
vl_despesa_bancaria_w	double precision;
vl_juros_w		double precision;
vl_multa_w		double precision;
vl_desc_previsto_w	double precision;
cd_moeda_w		integer;
nr_seq_empresa_w	bigint;
i			bigint;
pos_virgula_w		integer;
ie_acao_w		varchar(4000);
tp_registro_w		bigint;
cd_matricula_w		varchar(20);
nm_segurado_w		varchar(255);
ds_observacao_w		varchar(400);
qt_pagador_w		bigint;
identificador1_w	varchar(10);
identificador2_w	varchar(10);
identificador3_w	varchar(20);
ie_salvar_titulo_w	varchar(1);
nm_empresa_w		varchar(255);
qt_lote_mens_w		bigint;
dt_cobranca_w		timestamp;
ie_importar_titulo_w	varchar(2)	:= 'S';
ds_erro_w		varchar(32000);
cd_empresa_w		varchar(3);
qt_caracteres_erro_w	bigint;
cd_estabelecimento_w	smallint;
ie_inconsistencia_w	varchar(1);
ds_ano_w		varchar(4);
ds_mes_w		varchar(2);
nr_seq_empresa_v28_w	bigint;
vl_titulo_w		double precision;
nr_seq_cobr_duplica_w	bigint;
ds_mensagem_w		varchar(255);
nr_pensionista_w	pls_contrato_pagador_fin.nr_pensionista%type;
qt_numeros_w		bigint;
ds_objeto_retorno_w	pls_desc_empresa.ds_objeto_retorno%type;
ds_chamada_procedure_w	varchar(255);

C01 CURSOR FOR
	SELECT	ds_conteudo,
		nr_seq_registro
	from	w_pls_importacao
	order by	
		ds_conteudo;

C02 CURSOR FOR
	SELECT	ds_conteudo,
		nr_seq_registro
	from	w_pls_importacao
	order by	
		ds_conteudo desc;
	
C03 CURSOR FOR
	SELECT	a.nr_titulo,
		a.vl_cobranca,
		a.dt_atualizacao,
		a.nm_usuario,
		a.cd_banco,
		a.cd_agencia_bancaria,
		a.nr_conta,
		a.cd_moeda,
		a.ie_digito_conta,
		a.vl_desconto,
		a.vl_acrescimo,
		a.nr_sequencia,
		a.vl_despesa_bancaria,
		a.vl_desc_previsto,
		a.nr_seq_mensalidade
	from	titulo_receber_cobr	a,
		cobranca_escritural	b
	where	a.nr_seq_cobranca	= b.nr_sequencia
	and	trunc(b.dt_remessa_retorno,'Month')	= trunc(dt_cobranca_w,'Month')
	and	b.nr_seq_empresa			= nr_seq_empresa_w
	and	b.nr_sequencia				<> nr_seq_cobranca_p
	and	b.ie_remessa_retorno			= 'R'
	and	not exists (	SELECT	1
					from	titulo_receber_cobr	x
					where	x.nr_titulo		= a.nr_titulo
					and	x.nr_seq_cobranca	= nr_seq_cobranca_p);
					
BEGIN

qt_lote_mens_w	:= 0;

select	dt_remessa_retorno,
	cd_estabelecimento
into STRICT	dt_cobranca_w,
	cd_estabelecimento_w
from	cobranca_escritural
where	nr_sequencia = nr_seq_cobranca_p;

delete	FROM pls_desc_inconsistencia
where	nr_seq_cobranca = nr_seq_cobranca_p;

open C01;
loop
fetch C01 into
	ds_conteudo_w,
	nr_seq_cobranca_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	nr_seq_pagador_w	:= null;
	nr_pensionista_w	:= null;
	
	select	nr_seq_empresa
	into STRICT	nr_seq_empresa_w
	from	cobranca_escritural
	where	nr_sequencia	= nr_seq_cobranca_w;
	
	select	cd_interface_retorno,
		ds_objeto_retorno
	into STRICT	cd_interface_w,
		ds_objeto_retorno_w
	from	pls_desc_empresa
	where	nr_sequencia = nr_seq_empresa_w;
	
	ie_salvar_titulo_w	:= 'N';
	
	if (ds_objeto_retorno_w IS NOT NULL AND ds_objeto_retorno_w::text <> '') then
		select	replace(ds_objeto_retorno_w, ' ', '')
		into STRICT	ds_objeto_retorno_w
		;
		
		ds_chamada_procedure_w	:= 'begin ' || ds_objeto_retorno_w || '(''' || ds_conteudo_w || ''',' || nr_seq_cobranca_p || ',' || cd_estabelecimento_w || ',''' || nm_usuario_p || '''); end;';
		
		EXECUTE ds_chamada_procedure_w;
	elsif (cd_interface_w = 1808) then   /* Tesouro - Retorno */
		if (ie_opcao_p = 'R') then
			cd_matricula_w		:= replace(substr(ds_conteudo_w,1,12),' ','');
			begin
			vl_descontar_w		:= substr(ds_conteudo_w,42,7)||','||substr(ds_conteudo_w,49,2);
			exception
			when others then
				vl_descontar_w		:= substr(ds_conteudo_w,42,7)||'.'||substr(ds_conteudo_w,49,2);
			end;
			
			begin
			vl_descontado_w		:= substr(ds_conteudo_w,51,7)||','||substr(ds_conteudo_w,58,2);
			exception
			when others then
				vl_descontado_w		:= substr(ds_conteudo_w,51,7)||'.'||substr(ds_conteudo_w,58,2);
			end;
			
			begin
			vl_rejeitado_w		:= substr(ds_conteudo_w,60,7)||','||substr(ds_conteudo_w,67,2);
			exception
			when others then
				vl_rejeitado_w		:= substr(ds_conteudo_w,60,7)||'.'||substr(ds_conteudo_w,67,2);
			end;
			
			nr_cpf_w		:= substr(ds_conteudo_w,124,11);
			
			if (upper(substr(nm_arquivo_p, 1, 3)) = 'TCE') then
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,4,6),'mmyyyy');  --Exemplo: TCE012012
			else	
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,8,6),'mmyyyy');	--Exemplo: Tesouro012012
			end if;
			
			ie_salvar_titulo_w	:= 'S';
		elsif (ie_opcao_p = 'C') then
			identificador1_w	:= substr(ds_conteudo_w,58,3);
			
			if (identificador1_w = '627') then
				cd_matricula_w	:= substr(ds_conteudo_w,1,12);
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,26,6),'mmyyyy');
				
				begin
				select	nr_seq_pagador
				into STRICT	nr_seq_pagador_w
				from	pls_contrato_pagador_fin
				where (cd_matricula		= to_char((cd_matricula_w)::numeric ) or
					 cd_matricula		= cd_matricula_w)
				and	nr_seq_empresa		= nr_seq_empresa_w
				and	dt_cobranca_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_cobranca_w);
				exception
				when others then
					null;
				end;
				
				begin
				select	nr_sequencia,
					substr(pls_obter_dados_pagador(nr_seq_pagador,'N'),1,255),
					substr(pls_obter_titulo_mensalidade(nr_sequencia,null),1,255)
				into STRICT	nr_seq_mensalidade_w,
					nm_pagador_w,
					nr_titulo_w
				from	pls_mensalidade
				where	nr_seq_pagador = nr_seq_pagador_w
				and	coalesce(ie_cancelamento::text, '') = ''
				and	trunc(dt_referencia,'mm') = dt_referencia_w;
				exception
				when others then
					null;
				end;
				
				begin
				update	titulo_receber
				set	ds_observacao_titulo	= 'cancelado/tesouro '||substr(nm_arquivo_p,26,6)
				where	nr_titulo	= nr_titulo_w;
				exception
				when others then
					null;
				end;
			end if;
		end if;
	elsif (cd_interface_w = 1806) then /* PODER JUDICIARIO - Retorno */
		tp_registro_w		:= substr(ds_conteudo_w,1,3);
		
		if (tp_registro_w = 627) then
			cd_matricula_w		:= replace(substr(ds_conteudo_w,5,11),' ','');
			vl_descontado_w		:= replace(substr(ds_conteudo_w,51,7),' ','')||','||substr(ds_conteudo_w,58,2);
			nm_segurado_w		:= substr(ds_conteudo_w,191,46);
			dt_referencia_w		:= to_date(substr(nm_arquivo_p,13,2)||substr(nm_arquivo_p,16,4),'mmyyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif	((cd_interface_w = 1788) or /* CEEE - DISTRIBUICAO */
		(cd_interface_w = 1790)) then /* CEEE GeraCAo e TransmissAo - Retorno*/
		tp_registro_w		:= substr(ds_conteudo_w,1,1);
		
		if (tp_registro_w = 0) then
			dt_referencia_w		:= to_date(substr(ds_conteudo_w,13,6),'mmyyyy');
		elsif (tp_registro_w = 1) then
			i := 0;
			while(i <= 6) loop
				begin
				i := i + 1;
				select  position(';' in ds_conteudo_w)
				into STRICT    pos_virgula_w
				;
				
				ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
				
				if (i = 2) then /* Matricula */
					cd_matricula_w	:= ie_acao_w;
				elsif (i = 3) then /* Numero do CPF */
					nr_cpf_w := ie_acao_w;
				elsif (i = 4) then /* Nome do beneficiario */
					nm_segurado_w	:= ie_acao_w;
				elsif (i = 4) then /* Ano referencia */
					ds_ano_w	:= ie_acao_w;
				elsif (i = 6) then /*Valor descontado na folha de pagamento  */
					if (length(ie_acao_w) = 5) then
						vl_descontado_w	:= substr(ie_acao_w,1,3)||','||substr(ie_acao_w,4,2);
					elsif (length(ie_acao_w) = 4) then
						vl_descontado_w	:= substr(ie_acao_w,1,2)||','||substr(ie_acao_w,3,2);
					end if;
				end if;
				
				ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				end;
			end loop;
			ie_salvar_titulo_w := 'S';
		end if;
		
		/*identificador2_w	:= substr(ds_conteudo_w,46,1);
		
		if	(cd_interface_w = 1788) then
			dt_referencia_w		:= to_date(substr(nm_arquivo_p,7,6),'mmyyyy');
		elsif	(cd_interface_w = 1790) then
			dt_referencia_w		:= to_date(substr(nm_arquivo_p,8,6),'mmyyyy');
		end if;
		
		if	(identificador2_w = ',') then
			cd_matricula_w	:= replace(substr(ds_conteudo_w,3,8),' ','');
			nm_segurado_w	:= '';
			vl_descontado_w	:= replace(substr(ds_conteudo_w,43,3),' ','') ||','|| replace(substr(ds_conteudo_w,47,2),' ','');
			
			ie_salvar_titulo_w := 'S';
		end if;*/
	elsif	((cd_interface_w = 1791) or /* CIENTEC - Retorno */
		(cd_interface_w = 1797)	or /*FASE - Retorno */
		(cd_interface_w = 1798) or /* FOSPA - Retorno  */
		(cd_interface_w = 1800) or /*  FundaCAo Liberato - Retorno */
		(cd_interface_w = 1799) or /* FundaCAo de ProteCAo Especial - Retorno */
		(cd_interface_w = 1801) or /* FundaCAo ZoobotAnica - Retorno */
		(cd_interface_w = 1804) or /* IRGA - Retorno */
		(cd_interface_w = 1823)) then /* Procuradoria Geral de JustiCa - Retorno */
		
		cd_matricula_w		:= replace(substr(ds_conteudo_w,2,11),' ','');
		vl_descontar_w		:= substr(ds_conteudo_w,42,7)||','||substr(ds_conteudo_w,49,2);
		vl_descontado_w		:= substr(ds_conteudo_w,51,7)||','||substr(ds_conteudo_w,58,2);
		vl_rejeitado_w		:= substr(ds_conteudo_w,60,7)||','||substr(ds_conteudo_w,67,2);
		ds_observacao_w		:= substr(ds_conteudo_w,69,30);
		nr_cpf_w		:= substr(ds_conteudo_w,124,11);
		
		if (cd_interface_w = 1798) then /* FOSPA - Retorno  */
			if (length(nm_arquivo_p) = 14) then
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,5,6),'mmyyyy');
			elsif (length(nm_arquivo_p) = 15) then
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,6,6),'mmyyyy');
			end if;
		elsif (cd_interface_w = 1804)	then /* IRGA - Retorno */
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,5,6),'mmyyyy');
		elsif (cd_interface_w = 1801) then /* FundaCAo ZoobotAnica - Retorno */
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,8,6),'mmyyyy');
		elsif (cd_interface_w = 1797)	then /*FASE - Retorno */
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,5,6),'mmyyyy');
		elsif (cd_interface_w = 1799) then /* FundaCAo de ProteCAo Especial - Retorno */
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,9,6),'mmyyyy');
		elsif (cd_interface_w = 1800) then /*  FundaCAo Liberato - Retorno */
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,5,6),'mmyyyy');
		elsif (cd_interface_w = 1791) then /* CIENTEC - Retorno */
			if (length(nm_arquivo_p) = 16) then
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,7,6),'mmyyyy');
			elsif (length(nm_arquivo_p) = 17) then
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,8,6),'mmyyyy');
			end if;
		elsif (cd_interface_w = 1823) then /* Procuradoria Geral de JustiCa - Retorno */
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,13,6),'mmyyyy');
		end if;
		
		ie_salvar_titulo_w := 'S';
	elsif (cd_interface_w = 1792) then /* CMPA - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,19,4);
		identificador2_w	:= substr(ds_conteudo_w,1,10);
		
		if (identificador1_w = 'CMPA') then
			dt_referencia_w	:= to_date(substr(ds_conteudo_w,15,4),'mmyy');
		elsif (identificador2_w <> '9999999999') then
			nm_segurado_w	:= substr(ds_conteudo_w,30,30);
			vl_descontado_w	:= substr(ds_conteudo_w,20,4)||','||substr(ds_conteudo_w,24,2);
			cd_matricula_w	:= replace(substr(ds_conteudo_w,4,8),' ','');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1793) then /* CORSAN - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,1,1);
		
		if (identificador1_w = 2) then
			cd_matricula_w	:= substr(ds_conteudo_w,11,8);
			nm_segurado_w	:= substr(ds_conteudo_w,19,35);
			vl_descontado_w	:= substr(ds_conteudo_w,62,4)||','||substr(ds_conteudo_w,66,2);
			
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,54,6)),'mmyyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1794) then /* PROCEMPA - Retorno */
		i := 0;
		while(i < 25) loop
			begin
			i := i + 1;
			select  position(';' in ds_conteudo_w)
			into STRICT    pos_virgula_w
			;
			
			if (pos_virgula_w > 0) then
				ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
				
				if (i = 1) then /* COdigo do Consignatario */
					tp_registro_w	:= ie_acao_w;
				elsif (i = 2) then /* COdigo da Empresa */
					cd_empresa_w	:= ie_acao_w;
				elsif (i = 3) then /* Matricula do Servidor */
					cd_matricula_w	:= ie_acao_w;
				elsif (i = 4) then /* Numero do Vinculo do Servidor */
					nr_seq_empresa_v28_w	:= ie_acao_w;
				/*elsif	(i = 5) then Numero de Pensionista. Zero se nAo pensionista. */

				elsif (i = 6) then /* Especie do Canal */
					ds_especie_w	:= ie_acao_w;
				/*elsif	(i = 7) then SituaCAo do Canal de ConsignaCAo */


				/*elsif	(i = 8) then Data da ConsignaCAo. Formato DDMMAAAA */

				elsif (i = 9) then --Chave externa informada pelo consignatario
					nr_seq_pagador_w := ie_acao_w;
				/*elsif	(i = 10) then Numero identificador da consignaCAo no Proconsig  */


				/*elsif	(i = 11) then SituaCAo da ConsignaCAo  (Pendente - Em Andamento - Bloqueada - Cancelada - NAo Debitada - Paga) */

				elsif (i = 12) then /* Mes e Ano em que a parcela deveria ser descontada. Formato MMAAAA */
					dt_referencia_w	:= to_date(ie_acao_w,'mmyyyy');
				elsif (i = 13) then /* Valor da Parcela, em R$ */
					vl_descontar_w	:= ie_acao_w;
				/*elsif	(i = 14) then Valor dos Juros, em R$, caso a parcela nAo tenha sido descontada no mes indicado, e caso haja especificaCAo da taxa na respectiva ConsignaCAo */


				/*elsif	(i = 15) then Valor da Multa, em R$, caso a parcela nAo tenha sido descontada no mes indicado, e caso haja especificaCAo da taxa na respectiva ConsignaCAo */


				/*elsif	(i = 16) then SituaCAo do Servidor (normal / bloqueado */


				/*elsif	(i = 17) then SituaCAo do Vinculo (normal / excluido)  */

				elsif (i = 18) then /* SituaCAo da Parcela, podendo assumir os seguintes valores: Pendente, Enviada, Debitada, Falha, NAo Debitada */
					ds_situacao_w	:= ie_acao_w;
				/*elsif	(i = 19) then IndicaCAo de envio ou nAo para folha (S/N) */


				/*elsif	(i = 20) then Tipo de ConsignaCAo (Mensalidade ou Eventual) */


				/*elsif	(i = 21) then Caso disponivel, contem o motivo pelo qual a parcela nAo foi debitada */


				/*elsif	(i = 22) then Soma do valor de todas as parcelas deste servidor que foram enviadas nesta competencia para desconto em folha. Apenas quando a situaCAo for Falha */

				elsif (i = 23) then /*Valor total que foi efetivamente descontado na folha de pagamento deste servidor nesta competencia. Apenas quando a situaCAo for Falha */
					vl_descontado_w	:= ie_acao_w;
				/*elsif	(i = 24) then Numero identificador da Parcela no Proconsig */

				elsif (i = 25) then /* Nome do Servidor */
					nm_segurado_w	:= ie_acao_w;
				elsif (i = 26) then /* CPF do Servidor */
					nr_cpf_w	:= ie_acao_w;
				end if;
				
				/*if	(ie_acao_w is not null) then */

					ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				/*else
					ds_conteudo_w	:= null;
				end if; */
			end if;
			
			end;
		end loop;
		
		if (ds_situacao_w not in ('Falha','NaoDebitada')) then
			vl_descontado_w	:= vl_descontar_w;
		else
			vl_descontado_w	:= 0;
		end if;
		
		if (cd_empresa_w = '001') then
			nr_seq_empresa_w	:= 50;
		elsif (cd_empresa_w = '002') then
			nr_seq_empresa_w	:= 55;
		elsif (cd_empresa_w = '003') then
			nr_seq_empresa_w	:= 51;
		elsif (cd_empresa_w = '004') then
			nr_seq_empresa_w	:= 52;
		elsif (cd_empresa_w = '006') then
			nr_seq_empresa_w	:= 21;
		elsif (cd_empresa_w = '021') then
			nr_seq_empresa_w	:= 21;
		elsif (cd_empresa_w = '080') then
			nr_seq_empresa_w	:= 80;
		end if;
		
		/*if	((ds_especie_w = 'V28') and (nr_seq_empresa_v28_w <> 0)) then	OS 521945 - sideker
			nr_seq_empresa_w	:= nr_seq_empresa_v28_w;
		end if;*/
		
		ie_salvar_titulo_w := 'S';
	elsif (cd_interface_w = 1795) then /* DAER - Retorno */
		identificador1_w	:= somente_numero(substr(ds_conteudo_w,3,6));
		identificador2_w	:= somente_numero(substr(ds_conteudo_w,33,8));
		dt_referencia_w		:= to_date(substr(nm_arquivo_p,5,6),'mmyyyy');
		
		if	((coalesce(identificador1_w,0) <> 0) and (coalesce(identificador2_w,0) <> 0)) then
			cd_matricula_w	:= replace(replace(substr(ds_conteudo_w,33,8),' ',''),'-','');
			nm_segurado_w	:= substr(ds_conteudo_w,44,40);
			
			if (substr(ds_conteudo_w,24,4) <> '    ') then
				vl_descontado_w	:= somente_numero(substr(ds_conteudo_w,24,4))||','||somente_numero(substr(ds_conteudo_w,29,2));
			else
				vl_descontado_w	:= 0;
			end if;
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1796) then /* DMLU - Retorno */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181593);
	elsif (cd_interface_w = 1805) then /* PMPA - Retorno */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181593);
	elsif (cd_interface_w = 1807) then /* PREVIMPA - Retorno */
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181593);
	elsif (cd_interface_w = 1809) then /* AFPERGS - Retorno */
		tp_registro_w	:= substr(ds_conteudo_w,1,1);
		cd_matricula_w	:= replace(substr(ds_conteudo_w,15,4),' ','');
		nm_segurado_w	:= substr(ds_conteudo_w,19,35);
		vl_descontado_w	:= substr(ds_conteudo_w,62,3)||','||substr(ds_conteudo_w,65,2);
		if (tp_registro_w = 1) then
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,54,6)),'mmyyyy');
		end if;
		
		if (tp_registro_w = 2) then
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1810) then /* CAMARA MUNICIPAL DE VIAMAO - CANOASPREV - Retorno */
		identificador1_w	:=  substr(ds_conteudo_w,1,1);
		identificador2_w	:=  substr(ds_conteudo_w,9,2);
		identificador3_w	:=  substr(ds_conteudo_w,11,1);
		dt_referencia_w		:= to_date(substr(nm_arquivo_p,11,6),'mmyyyy');
		
		if (identificador1_w = ' ') and (identificador2_w = '  ') and (identificador3_w <> ' ') then
			cd_matricula_w	:= replace(substr(ds_conteudo_w,3,6),' ','');
			nm_segurado_w	:= substr(ds_conteudo_w,11,35);
			vl_descontado_w	:= substr(ds_conteudo_w,49,4)||','||substr(ds_conteudo_w,54,2);
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1811) then /* CAMARA MUNICIPAL DE VIAMAO - Retorno */
		tp_registro_w	:= substr(ds_conteudo_w,1,2);
		cd_matricula_w	:= replace(substr(ds_conteudo_w,15,4),' ','');
		nm_segurado_w	:= substr(ds_conteudo_w,19,35);
		vl_descontado_w	:= substr(ds_conteudo_w,62,3)||','||substr(ds_conteudo_w,65,2);
		
		if (tp_registro_w = 10) then
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,54,6)),'mmyyyy');
			
			ie_salvar_titulo_w	:= 'S';
		end if;
	elsif (cd_interface_w = 1812) then /* FUNDACAO CORSAN - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,80,1);
		cd_matricula_w		:= substr(ds_conteudo_w,11,9);
		
		if	(identificador1_w <> ' ' AND cd_matricula_w IS NOT NULL AND cd_matricula_w::text <> '') then
			nm_segurado_w	:= trim(both substr(ds_conteudo_w,25,45));
			vl_descontado_w	:= replace(substr(ds_conteudo_w,94,6),' ','');
			
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,71,10)),'dd/mm/yyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1813) then /* HOSPITAL ERNESTO DORNELLES - Retorno */
		tp_registro_w	:= substr(ds_conteudo_w,1,1);
		
		if (tp_registro_w = 1) then
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,54,6)),'mmyyyy');
		elsif (tp_registro_w = 2) then
			cd_matricula_w	:= substr(ds_conteudo_w,14,5);
			nm_segurado_w	:= trim(both substr(ds_conteudo_w,19,35));
			vl_descontado_w	:= substr(ds_conteudo_w,61,4)||','||substr(ds_conteudo_w,65,2);
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1814) then /* PREFEITURA DE CAMAQUA - Retorno */
		identificador1_w := substr(ds_conteudo_w,1,1);
		
		if (identificador1_w = 'R') then
			dt_referencia_w	:= to_date(substr(ds_conteudo_w,69,10));
		elsif (identificador1_w = '0') then
			cd_matricula_w	:= substr(ds_conteudo_w,1,7);
			nm_segurado_w	:= substr(ds_conteudo_w,10,35);
			vl_descontado_w	:= replace(substr(ds_conteudo_w,56,4),' ','')||','||substr(ds_conteudo_w,61,2);
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1815) then /* PREFEITURA DE CANOAS - Retorno */
		identificador1_w := substr(ds_conteudo_w,1,1);
		identificador2_w := substr(ds_conteudo_w,7,1);
		
		if (identificador1_w = 'R') then
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,50,7)),'mm/yyyy');
		elsif	(identificador1_w = '0' AND identificador2_w <> '0') then
			nm_segurado_w	:= substr(ds_conteudo_w,7,40);
			cd_matricula_w	:= substr(ds_conteudo_w,48,7);
			vl_descontado_w	:= substr(ds_conteudo_w,58,8)||','||substr(ds_conteudo_w,67,2);
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1816) then /* PREFEITURA DE SANTA VITORIA DO PALMAR - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,1,1);
		
		if (identificador1_w = '0') then
			cd_matricula_w		:= replace(substr(ds_conteudo_w,8,6),' ','');
			nm_segurado_w		:= trim(both substr(ds_conteudo_w,18,30));
			vl_descontado_w		:= replace(substr(ds_conteudo_w,123,4),' ','')||','||substr(ds_conteudo_w,128,2);
			dt_referencia_w		:= to_date(to_char(substr(ds_conteudo_w,90,7)),'mm/yyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1818) then /* PREFEITURA DE TAPES - Retorno */
		tp_registro_w	:= substr(ds_conteudo_w,1,1);
		
		if (tp_registro_w = 2) then
			cd_matricula_w	:= substr(ds_conteudo_w,13,5);
			nm_segurado_w	:= substr(ds_conteudo_w,18,32);
			vl_descontado_w	:= substr(ds_conteudo_w,64,3)||','||substr(ds_conteudo_w,67,2);
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,50,6)),'mmyyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1819) then /* PREFEITURA DE TRIUNFO - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,98,1);
		
		if (identificador1_w	= '-') then
			cd_matricula_w	:= replace(substr(ds_conteudo_w,8,6),' ','');
			nm_segurado_w	:= substr(ds_conteudo_w,18,30);
			vl_descontado_w	:= substr(ds_conteudo_w,124,3)||','||substr(ds_conteudo_w,128,2);
			dt_referencia_w	:= to_date(to_char(substr(ds_conteudo_w,90,7)),'mm/yyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1820) then /* SPH - Superintendencia de Portos e Hidrovias - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,1,2);
		dt_referencia_w		:= to_date(substr(nm_arquivo_p,4,6),'mmyyyy');
		
		if (identificador1_w <> 'nr') then
			cd_matricula_w		:= replace(substr(ds_conteudo_w,1,7),' ','');
			identificador2_w	:= substr(ds_conteudo_w,17,1);
			
			if (identificador2_w = ',') then
				vl_descontado_w	:= somente_numero(substr(ds_conteudo_w,14,4)) || ',' || substr(ds_conteudo_w,18,1);
				nm_segurado_w	:= substr(ds_conteudo_w,20,40);
			else
				vl_descontado_w	:= somente_numero(substr(ds_conteudo_w,14,4));
				nm_segurado_w	:= substr(ds_conteudo_w,18,32);
			end if;
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1821) then /* Banrisul - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,1,1);
		
		if (identificador1_w <> 'C') then
			i := 0;
			while(i <= 5) loop
				begin
				i := i + 1;
				select  position(';' in ds_conteudo_w)
				into STRICT    pos_virgula_w
				;
				
				ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
				
				if (i = 1) then /* Matricula */
					cd_matricula_w	:= ie_acao_w;
				elsif (i = 2) then /* Nome do beneficiario */
					nm_segurado_w	:= ie_acao_w;
				elsif (i = 3) then /* Ano referencia */
					ds_ano_w	:= ie_acao_w;
				elsif (i = 4) then /* Mes referencia */
					ds_mes_w	:= ie_acao_w;
				elsif (i = 5) then /*Valor descontado na folha de pagamento  */
					vl_descontado_w	:= ds_conteudo_w;
				end if;
				
				ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				end;
			end loop;
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,9,6),'mmyyyy'); --to_date(ds_mes_w||ds_ano_w,'mmyyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1822) then /* Prefeitura municipal de ViamAo - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,1,2);
		
		if (identificador1_w <> ';;') then
			i := 0;
			while(i <= 5) loop
				begin
				i := i + 1;
				select  position(';' in ds_conteudo_w)
				into STRICT    pos_virgula_w
				;
				
				ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
				
				if (i = 1) then /* Matricula */
					cd_matricula_w	:= ie_acao_w;
				elsif (i = 2) then /* Matriculo - ultimo digito */
					cd_matricula_w	:= cd_matricula_w || ie_acao_w;
				elsif (i = 3) then /* Pagador */
					nm_segurado_w	:= ie_acao_w;
				elsif (i = 4) then /*Valor descontado na folha de pagamento  */
					vl_descontado_w	:= replace(ds_conteudo_w,'.','');
				end if;
				
				ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				end;
			end loop;
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,9,6),'mmyyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1824) then /* CIA CARRIS Porto Alegrense - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,4,1);
		identificador2_w	:= substr(ds_conteudo_w,11,1);
		identificador3_w	:= substr(ds_conteudo_w,5,1);
		
		if	((identificador1_w = ';') and (identificador2_w = ';') and (identificador3_w <> ';')) then
			i := 0;
			while(i <= 19) loop
				begin
				i := i + 1;
				select  position(';' in ds_conteudo_w)
				into STRICT    pos_virgula_w
				;
				
				ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
				
				if (i = 5) then /* Matricula */
					cd_matricula_w	:= ie_acao_w;
				elsif (i = 9) then /* Pagador */
					nm_segurado_w	:= ie_acao_w;
				elsif (i = 19) then /*Valor descontado na folha de pagamento  */
					vl_descontado_w	:= ie_acao_w;
				end if;
				
				ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				end;
			end loop;
			dt_referencia_w	:= to_date(substr(nm_arquivo_p,7,6),'mmyyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;	
	elsif (cd_interface_w = 2157) then /* AssociaCAo SBC - Retorno */

		/*tp_registro_w		:= substr(ds_conteudo_w,1,3);*/


		
		--Lepinski - OS 387649

		
		/*if	(tp_registro_w = 627) then*/

			cd_matricula_w		:= replace(substr(ds_conteudo_w,1,20),' ','');
			--vl_descontado_w		:= replace(substr(ds_conteudo_w,146,5),' ','')||','||substr(ds_conteudo_w,152,2);
			vl_descontado_w		:= replace(somente_numero(substr(ds_conteudo_w,107,6)),' ','')||','||substr(ds_conteudo_w,114,2);
			nm_segurado_w		:= substr(ds_conteudo_w,21,50);
			--dt_referencia_w		:= to_date(substr(ds_conteudo_w,121,2)||substr(ds_conteudo_w,124,4),'mmyyyy');
			dt_referencia_w		:= trunc(to_date(substr(ds_conteudo_w,119,10),'dd/mm/yyyy'),'month');
			
			ie_salvar_titulo_w := 'S';
		/*end if;*/

	elsif (cd_interface_w = 2360) then /* AssociaCAo SPB - Retorno */
		identificador1_w	:= substr(ds_conteudo_w,1,2);
		
		if (identificador1_w = '01') then
			i := 0;
			while(i < 25) loop
				begin
				i := i + 1;
				select  position(';' in ds_conteudo_w)
				into STRICT    pos_virgula_w
				;
				
				if (pos_virgula_w > 0) then
					ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
					
					if (i = 3) then /* Matricula do Servidor */
						cd_matricula_w	:= ie_acao_w;
					elsif (i = 15) then /* Valor */
						vl_descontado_w	:= replace(ie_acao_w,'.','');
					end if;
					
					ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				end if;
				end;
			end loop;
			
			dt_referencia_w		:= to_date(substr(nm_arquivo_p,13,6),'mmyyyy');
			
			ie_salvar_titulo_w := 'S';
		end if;
	elsif (cd_interface_w = 1803) then /* IPE Pensionistas - Retorno */
		dt_referencia_w		:= dt_cobranca_w;
		
		cd_matricula_w		:= replace(substr(ds_conteudo_w,1,10),' ','');
		nr_pensionista_w	:= substr(ds_conteudo_w,11,2);		
		vl_descontado_w		:= replace(substr(ds_conteudo_w,51,7),' ','')||','||substr(ds_conteudo_w,58,2);
		
		ie_salvar_titulo_w := 'S';
	elsif (cd_interface_w = 2618) then /* FSFX - CEU*/
		CALL fsfx_gerar_ret_ceu(ds_conteudo_w,nr_seq_cobranca_p,cd_estabelecimento_w,nm_usuario_p);
		ie_salvar_titulo_w	:= 'N';
	elsif (cd_interface_w = 2619) then /* FSFX - FEMCO ASSISTIDO*/
		CALL FSFX_GERAR_RET_FEMCO_ASSIST(ds_conteudo_w,nr_seq_cobranca_p,cd_estabelecimento_w,nm_usuario_p);
		ie_salvar_titulo_w	:= 'N';
	elsif (cd_interface_w = 2617) then /* FSFX - FEMCO INADIMPLENTE*/
		CALL fsfx_gerar_ret_femco_inadim(ds_conteudo_w,nr_seq_cobranca_p,cd_estabelecimento_w,nm_usuario_p);
		ie_salvar_titulo_w	:= 'N';
	elsif (cd_interface_w = 2632) then /* CMPA - Retorno */
		i := 0;
		while(i < 25) loop
			begin
			i := i + 1;
			select  position(';' in ds_conteudo_w)
			into STRICT    pos_virgula_w
			;
			
			if (pos_virgula_w > 0) then
				ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
				
				if (i = 1) then /* COdigo do Consignatario */
					tp_registro_w	:= ie_acao_w;
				elsif (i = 2) then /* COdigo da Empresa */
					if (ie_acao_w = '080') then
						cd_empresa_w	:= '007';
					else
						cd_empresa_w	:= ie_acao_w;
					end if;
				elsif (i = 3) then /* Matricula do Servidor */
					cd_matricula_w	:= ie_acao_w;
				elsif (i = 4) then /* Numero do Vinculo do Servidor */
					nr_seq_empresa_v28_w	:= ie_acao_w;
				/*elsif	(i = 5) then Numero de Pensionista. Zero se nAo pensionista. */

				elsif (i = 6) then /* Especie do Canal */
					ds_especie_w	:= ie_acao_w;
				/*elsif	(i = 7) then SituaCAo do Canal de ConsignaCAo */


				/*elsif	(i = 8) then Data da ConsignaCAo. Formato DDMMAAAA */


				/*elsif	(i = 9) then Chave externa informada pelo consignatario  */


				/*elsif	(i = 10) then Numero identificador da consignaCAo no Proconsig  */


				/*elsif	(i = 11) then SituaCAo da ConsignaCAo  (Pendente - Em Andamento - Bloqueada - Cancelada - NAo Debitada - Paga) */

				elsif (i = 12) then /* Mes e Ano em que a parcela deveria ser descontada. Formato MMAAAA */
					dt_referencia_w	:= to_date(ie_acao_w,'mmyyyy');
				elsif (i = 13) then /* Valor da Parcela, em R$ */
					vl_descontar_w	:= ie_acao_w;
				/*elsif	(i = 14) then Valor dos Juros, em R$, caso a parcela nAo tenha sido descontada no mes indicado, e caso haja especificaCAo da taxa na respectiva ConsignaCAo */


				/*elsif	(i = 15) then Valor da Multa, em R$, caso a parcela nAo tenha sido descontada no mes indicado, e caso haja especificaCAo da taxa na respectiva ConsignaCAo */


				/*elsif	(i = 16) then SituaCAo do Servidor (normal / bloqueado */


				/*elsif	(i = 17) then SituaCAo do Vinculo (normal / excluido)  */

				elsif (i = 18) then /* SituaCAo da Parcela, podendo assumir os seguintes valores: Pendente, Enviada, Debitada, Falha, NAo Debitada */
					ds_situacao_w	:= ie_acao_w;
				/*elsif	(i = 19) then IndicaCAo de envio ou nAo para folha (S/N) */


				/*elsif	(i = 20) then Tipo de ConsignaCAo (Mensalidade ou Eventual) */


				/*elsif	(i = 21) then Caso disponivel, contem o motivo pelo qual a parcela nAo foi debitada */


				/*elsif	(i = 22) then Soma do valor de todas as parcelas deste servidor que foram enviadas nesta competencia para desconto em folha. Apenas quando a situaCAo for Falha */

				elsif (i = 23) then /*Valor total que foi efetivamente descontado na folha de pagamento deste servidor nesta competencia. Apenas quando a situaCAo for Falha */
					vl_descontado_w	:= ie_acao_w;
				/*elsif	(i = 24) then Numero identificador da Parcela no Proconsig */

				elsif (i = 25) then /* Nome do Servidor */
					nm_segurado_w	:= ie_acao_w;
				elsif (i = 26) then /* CPF do Servidor */
					nr_cpf_w	:= ie_acao_w;
				end if;
				
				/*if	(ie_acao_w is not null) then */

					ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				/*else
					ds_conteudo_w	:= null;
				end if; */
			end if;
			
			end;
		end loop;
		
		if (ds_situacao_w not in ('Falha','NaoDebitada')) then
			vl_descontado_w	:= vl_descontar_w;
		else
			vl_descontado_w	:= 0;
		end if;
		
		if (cd_empresa_w = '001') then
			nr_seq_empresa_w	:= 50;
		elsif (cd_empresa_w = '002') then
			nr_seq_empresa_w	:= 55;
		elsif (cd_empresa_w = '003') then
			nr_seq_empresa_w	:= 51;
		elsif (cd_empresa_w = '004') then
			nr_seq_empresa_w	:= 52;
		elsif (cd_empresa_w = '006') then
			nr_seq_empresa_w	:= 21;
		elsif (cd_empresa_w = '021') then
			nr_seq_empresa_w	:= 21;
		elsif (cd_empresa_w = '080') then
			nr_seq_empresa_w	:= 80;
		elsif (cd_empresa_w = '007') then
			nr_seq_empresa_w	:= 80;
		end if;
		
		ie_salvar_titulo_w := 'S';
	end if;
	
	if (ie_salvar_titulo_w = 'S') then
		if (trunc(dt_referencia_w,'month') <> trunc(dt_cobranca_w,'month')) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181594, 'DT_REFERENCIA=' || dt_referencia_w || ';DT_COBRANCA=' || dt_cobranca_w);
		end if;
		
		ie_importar_titulo_w	:= 'S';
		ie_inconsistencia_w	:= 'N';
		
		if (qt_lote_mens_w = 0) then
			select	count(1)
			into STRICT	qt_lote_mens_w
			from	pls_mensalidade			a,
				pls_contrato_pagador_fin	b
			where	a.nr_seq_pagador_fin	= b.nr_sequencia
			and	b.nr_seq_empresa	= nr_seq_empresa_w
			and	trunc(a.dt_referencia,'mm') = trunc(dt_referencia_w,'mm');
		end if;
		
		if (qt_lote_mens_w = 0) then
			begin
			select	substr(obter_razao_social(cd_cgc),1,255)
			into STRICT	nm_empresa_w
			from	pls_desc_empresa
			where	nr_sequencia	= nr_seq_empresa_w;
			exception
			when others then
				nm_empresa_w	:= '';
			end;
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181599, 'NM_EMPRESA=' || nm_empresa_w || ';DT_REFERENCIA=' || dt_referencia_w);
		end if;
		
		if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then --Consistencia para verificar se o pagador informado no arquivo existe na base, senAo limpa a variavel e procura o pagador pela matricula
			select	max(nr_sequencia)
			into STRICT	nr_seq_pagador_w
			from	pls_contrato_pagador
			where	nr_sequencia	= nr_seq_pagador_w;
		end if;
		
		if (coalesce(nr_seq_pagador_w::text, '') = '') then
			begin
			select	nr_seq_pagador
			into STRICT	nr_seq_pagador_w
			from	pls_contrato_pagador_fin
			where (cd_matricula		= to_char((cd_matricula_w)::numeric ) or
				 cd_matricula		= cd_matricula_w)
			and	nr_seq_empresa		= nr_seq_empresa_w
			and (nr_pensionista		= nr_pensionista_w or coalesce(nr_pensionista_w::text, '') = '' or coalesce(nr_pensionista::text, '') = '')
			and	dt_cobranca_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_cobranca_w);
			exception
			when others then
				ie_importar_titulo_w	:= 'N';
				qt_caracteres_erro_w	:= length(ds_erro_w);
				if (qt_caracteres_erro_w < 31500) then
					ds_erro_w		:= ds_erro_w || chr(13) || chr(10) || nm_segurado_w;
				end if;
				
				insert	into	pls_desc_inconsistencia(	nr_sequencia, nr_seq_cobranca, cd_estabelecimento,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_matricula, vl_titulo,
						ds_inconsistencia)
					values (	nextval('pls_desc_inconsistencia_seq'), nr_seq_cobranca_p, cd_estabelecimento_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, cd_matricula_w, vl_descontado_w,
						wheb_mensagem_pck.get_texto(281044, 'NM_SEGURADO_P=' || coalesce(trim(both nm_segurado_w), ' '))); -- Inconsistencia com as informaCoes do(a) pagador(a) #@NM_SEGURADO_P#@. Verifique o numero da matricula e empresa!
				
				ie_inconsistencia_w	:= 'S';
			end;
		end if;
		
		begin
			select	nr_sequencia,
				substr(pls_obter_dados_pagador(nr_seq_pagador,'N'),1,255),
				substr(pls_obter_titulo_mensalidade(nr_sequencia,null),1,255)
			into STRICT	nr_seq_mensalidade_w,
				nm_pagador_w,
				nr_titulo_w
			from	pls_mensalidade
			where	nr_seq_pagador = nr_seq_pagador_w
			and	coalesce(ie_cancelamento::text, '') = ''
			and	dt_referencia between inicio_dia(dt_referencia_w) and fim_dia(dt_referencia_w);
		exception
		when others then
			ie_importar_titulo_w	:= 'N';
			qt_caracteres_erro_w	:= length(ds_erro_w);
			if (qt_caracteres_erro_w < 31500) then
				ds_erro_w		:= ds_erro_w || chr(13) || chr(10) || nm_segurado_w;
			end if;
			
			if (ie_inconsistencia_w	= 'N') then
				if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
					select	substr(pls_obter_dados_pagador(nr_seq_pagador_w,'N'),1,255)
					into STRICT	nm_pagador_w
					;
				end if;
				
				nr_titulo_w := null;
				insert	into	pls_desc_inconsistencia(	nr_sequencia, nr_seq_cobranca, cd_estabelecimento,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_matricula, vl_titulo,
						ds_inconsistencia)
					values (	nextval('pls_desc_inconsistencia_seq'), nr_seq_cobranca_p, cd_estabelecimento_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, cd_matricula_w, vl_descontado_w,
						wheb_mensagem_pck.get_texto(281049, 'NM_SEGURADO_P=' || coalesce(trim(both coalesce(nm_segurado_w, nm_pagador_w)), ' '))); --NAo foram encontradas informaCoes do(a) pagador(a) #@NM_SEGURADO_P#@ no lote de mensalidade referente ao mes do arquivo. Verifique se o pagador esta incluido no lote de mensalidade ou se a mensalidade foi cancelada!
			end if;
		end;
		
		select	max(cd_banco),
			max(cd_agencia_bancaria),
			max(cd_conta),
			max(ie_digito_conta)
		into STRICT	cd_banco_w,
			cd_agencia_bancaria_w,
			nr_conta_w,
			ie_digito_conta_w
		from	pls_contrato_pagador_fin
		where	nr_sequencia = nr_seq_pagador_w;
		
		select	max(cd_moeda)
		into STRICT	cd_moeda_w
		from	titulo_receber
		where	nr_titulo = nr_titulo_w;
		
		select	max(vl_despesa_bancaria),
			max(vl_juros),
			max(vl_multa),
			max(vl_desc_previsto)
		into STRICT	vl_despesa_bancaria_w,
			vl_juros_w,
			vl_multa_w,
			vl_desc_previsto_w
		from	titulo_receber_cobr
		where	nr_titulo	= nr_titulo_w
		and	nr_seq_cobranca = nr_seq_cobranca_w;
		
		select	max(vl_titulo)
		into STRICT	vl_titulo_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_w;
		
		if (vl_descontado_w > vl_titulo_w) and (coalesce(nr_titulo_w,0) <> 0)then
			insert	into	pls_desc_inconsistencia(	nr_sequencia, nr_seq_cobranca, cd_estabelecimento,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_matricula, vl_titulo,
						ds_inconsistencia)
					values (	nextval('pls_desc_inconsistencia_seq'), nr_seq_cobranca_p, cd_estabelecimento_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, cd_matricula_w, vl_descontado_w,
						wheb_mensagem_pck.get_texto(281050, 'NM_PAGADOR_P=' || trim(both nm_pagador_w) ||
										';VL_TITULO_P=' || campo_mascara_virgula(vl_titulo_w))); -- O valor descontado para o(a) pagador(a) #@NM_PAGADOR_P#@, e superior ao valor do titulo (#@VL_TITULO_P#@). Favor verifique!
		end if;
		
		if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
			insert	into	pls_desc_inconsistencia(	nr_sequencia, nr_seq_cobranca, cd_estabelecimento,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_matricula, vl_titulo, ds_inconsistencia)
					values (	nextval('pls_desc_inconsistencia_seq'), nr_seq_cobranca_p, cd_estabelecimento_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, cd_matricula_w, vl_descontado_w, nm_pagador_w || ': ' || ds_mensagem_w);
			
			insert into titulo_receber_mensagem(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
						nr_titulo, ds_mensagem, ie_mensagem_tit)
				values (	nextval('titulo_receber_mensagem_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p,
						nr_titulo_w, ds_mensagem_w, 'N');
			
			ds_mensagem_w := null;
			ie_importar_titulo_w	:= 'N';
		end if;
		
		if	((ie_importar_titulo_w = 'S') and (coalesce(nr_titulo_w,0) <> 0)) then	
			insert	into	titulo_receber_cobr(	nr_sequencia, nr_seq_cobranca, nr_titulo,
						vl_cobranca, dt_atualizacao, nm_usuario,
						cd_banco, cd_agencia_bancaria, nr_conta,
						cd_moeda, dt_liquidacao, vl_liquidacao,
						ie_digito_conta, dt_atualizacao_nrec, nm_usuario_nrec,
						vl_despesa_bancaria, vl_juros, vl_multa,
						vl_desc_previsto, nr_seq_mensalidade)
				values (	nextval('titulo_receber_cobr_seq'), nr_seq_cobranca_p, nr_titulo_w,
						coalesce(CASE WHEN vl_descontado_w=0 THEN vl_descontar_w  ELSE vl_descontado_w END ,0), clock_timestamp(), nm_usuario_p,
						cd_banco_w, cd_agencia_bancaria_w, nr_conta_w,
						cd_moeda_w, dt_referencia_w, vl_descontado_w,
						ie_digito_conta_w, clock_timestamp(), nm_usuario_p,
						vl_despesa_bancaria_w, vl_juros_w, vl_multa_w,
						vl_desc_previsto_w, nr_seq_mensalidade_w);
		end if;
	end if;
	end;
end loop;
close C01;

if (cd_interface_w in (1817,1802,1789)) then
	open C02;
	loop
	fetch C02 into
		ds_conteudo_w,
		nr_seq_cobranca_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		ie_salvar_titulo_w := 'N';
		if (cd_interface_w = 1817) then /* PREFEITURA DE SAPUCAIA DO SUL - Retorno */
			identificador1_w	:= substr(ds_conteudo_w,60,1);
			identificador2_w	:= substr(ds_conteudo_w,63,1);
			
			if	(identificador1_w = '/' AND identificador2_w = '/') then
				dt_referencia_w	:= to_date(substr(ds_conteudo_w,58,10));
				if (trunc(dt_referencia_w,'month') <> trunc(dt_cobranca_w,'month')) then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(181594, 'DT_REFERENCIA=' || dt_referencia_w || ';DT_COBRANCA=' || dt_cobranca_w);
				end if;
			end if;
			
			identificador1_w	:= substr(ds_conteudo_w,58,4);
			identificador2_w	:= substr(ds_conteudo_w,45,3);
			
			if	(identificador1_w = '0,00' AND identificador2_w <> '   ') then
				cd_matricula_w	:= replace(substr(ds_conteudo_w,9,4),' ','');
				nm_segurado_w	:= substr(ds_conteudo_w,14,30);
				vl_descontado_w	:= replace(substr(ds_conteudo_w,71,3),' ','')||','||substr(ds_conteudo_w,75,2);
				
				ie_salvar_titulo_w := 'S';
			end if;
		elsif (cd_interface_w = 1802) then /* IPE Funcionarios - Retorno */
			tp_registro_w		:= substr(ds_conteudo_w,1,1);
			
			if (tp_registro_w = 2) then
				dt_referencia_w	:= to_date(substr(ds_conteudo_w,1,6),'yyyymm');
			elsif (tp_registro_w = 1) then
				cd_matricula_w	:= replace(substr(ds_conteudo_w,4,7),' ','');
				vl_descontado_w	:= substr(ds_conteudo_w,66,4)||','||substr(ds_conteudo_w,70,2);
				nm_segurado_w	:= trim(both substr(ds_conteudo_w,16,40));
				
				ie_salvar_titulo_w := 'S';
			end if;
		elsif (cd_interface_w = 1789) then /* ASSEMBLeIA LEGISLATIVA - Retorno */
			identificador3_w	:= replace(substr(ds_conteudo_w,16,11),' ','');
			if (upper(identificador3_w) = 'MENSALIDADE') then
				dt_referencia_w	:= to_date(substr(nm_arquivo_p,11,6),'mmyyyy');
				
				cd_matricula_w		:= (replace(substr(ds_conteudo_w,2,11),' ',''))::numeric;
				vl_descontar_w		:= substr(ds_conteudo_w,45,4)||','||substr(ds_conteudo_w,49,2);
				vl_descontado_w		:= substr(ds_conteudo_w,54,4)||','||substr(ds_conteudo_w,58,2);
				
				ie_salvar_titulo_w := 'S';
			end if;
		end if;
		
		if (ie_salvar_titulo_w = 'S') then
			ie_importar_titulo_w	:= 'S';
			ie_inconsistencia_w	:= 'N';
			
			if (qt_lote_mens_w = 0) then
				select	count(1)
				into STRICT	qt_lote_mens_w
				from	pls_mensalidade			a,
					pls_contrato_pagador_fin	b
				where	a.nr_seq_pagador_fin	= b.nr_sequencia
				and	b.nr_seq_empresa	= nr_seq_empresa_w
				and	trunc(a.dt_referencia,'mm') = trunc(dt_referencia_w,'mm');
			end if;
			
			if (qt_lote_mens_w = 0) then
				select	substr(obter_razao_social(cd_cgc),1,255)
				into STRICT	nm_empresa_w
				from	pls_desc_empresa
				where	nr_sequencia	= nr_seq_empresa_w;
				
				CALL wheb_mensagem_pck.exibir_mensagem_abort(181599, 'NM_EMPRESA=' || nm_empresa_w || ';DT_REFERENCIA=' || dt_referencia_w);	
			end if;
			
			begin
			select	nr_seq_pagador
			into STRICT	nr_seq_pagador_w
			from	pls_contrato_pagador_fin
			where (cd_matricula		= to_char((cd_matricula_w)::numeric ) or
				 cd_matricula		= cd_matricula_w)
			and	nr_seq_empresa		= nr_seq_empresa_w
			and (nr_pensionista		= nr_pensionista_w or coalesce(nr_pensionista_w::text, '') = '' or coalesce(nr_pensionista::text, '') = '')
			and	dt_cobranca_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia,dt_cobranca_w);
			exception
			when others then
				ie_importar_titulo_w	:= 'N';
				qt_caracteres_erro_w	:= length(ds_erro_w);
				if (qt_caracteres_erro_w < 31500) then
					ds_erro_w		:= ds_erro_w || chr(13) || chr(10) || nm_segurado_w;
				end if;
				
				insert	into	pls_desc_inconsistencia(	nr_sequencia, nr_seq_cobranca, cd_estabelecimento,
					dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
					nm_usuario_nrec, nr_matricula, vl_titulo,
					ds_inconsistencia)
				values (	nextval('pls_desc_inconsistencia_seq'), nr_seq_cobranca_p, cd_estabelecimento_w,
					clock_timestamp(), nm_usuario_p, clock_timestamp(),
					nm_usuario_p, cd_matricula_w, vl_descontado_w,
					wheb_mensagem_pck.get_texto(281044, 'NM_SEGURADO_P=' ||coalesce(trim(both nm_segurado_w), ' '))); -- Inconsistencia com as informaCoes do(a) pagador(a) #@NM_SEGURADO_P#@. Verifique o numero da matricula e empresa!
				ie_inconsistencia_w	:= 'S';
			end;
			
			begin
			select	nr_sequencia,
				substr(pls_obter_dados_pagador(a.nr_seq_pagador,'N'),1,255),
				b.nr_titulo
			into STRICT	nr_seq_mensalidade_w,
				nm_pagador_w,
				nr_titulo_w
			FROM pls_mensalidade a
LEFT OUTER JOIN titulo_receber b ON (a.nr_sequencia = b.nr_seq_mensalidade)
WHERE a.nr_seq_pagador = nr_seq_pagador_w and coalesce(a.ie_cancelamento::text, '') = '' and trunc(a.dt_referencia,'mm') = dt_referencia_w;
			exception
			when others then
				ie_importar_titulo_w	:= 'N';
				qt_caracteres_erro_w	:= length(ds_erro_w);
				if (qt_caracteres_erro_w < 31500) then
					ds_erro_w		:= ds_erro_w || chr(13) || chr(10) || nm_segurado_w;
				end if;
				
				if (nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '') then
					select	substr(pls_obter_dados_pagador(nr_seq_pagador_w,'N'),1,255)
					into STRICT	nm_pagador_w
					;
				end if;
				
				if (ie_inconsistencia_w = 'N') then
					insert	into	pls_desc_inconsistencia(	nr_sequencia, nr_seq_cobranca, cd_estabelecimento,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_matricula, vl_titulo,
						ds_inconsistencia)
					values (	nextval('pls_desc_inconsistencia_seq'), nr_seq_cobranca_p, cd_estabelecimento_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, cd_matricula_w, vl_descontado_w,
						wheb_mensagem_pck.get_texto(281049, 'NM_SEGURADO_P=' || coalesce(trim(both coalesce(nm_segurado_w, nm_pagador_w)), ' '))); --NAo foram encontradas informaCoes do(a) pagador(a) #@NM_SEGURADO_P#@ no lote de mensalidade referente ao mes do arquivo. Verifique se o pagador esta incluido no lote de mensalidade ou se a mensalidade foi cancelada!
				end if;
			end;
			
			select	max(cd_banco),
				max(cd_agencia_bancaria),
				max(cd_conta),
				max(ie_digito_conta)
			into STRICT	cd_banco_w,
				cd_agencia_bancaria_w,
				nr_conta_w,
				ie_digito_conta_w
			from	pls_contrato_pagador_fin
			where	nr_sequencia = nr_seq_pagador_w;
			
			select	max(cd_moeda)
			into STRICT	cd_moeda_w
			from	titulo_receber
			where	nr_titulo = nr_titulo_w;
			
			select	max(vl_despesa_bancaria),
				max(vl_juros),
				max(vl_multa),
				max(vl_desc_previsto)
			into STRICT	vl_despesa_bancaria_w,
				vl_juros_w,
				vl_multa_w,
				vl_desc_previsto_w
			from	titulo_receber_cobr
			where	nr_titulo = nr_titulo_w
			and	nr_seq_cobranca = nr_seq_cobranca_w;
			
			select	max(vl_titulo)
			into STRICT	vl_titulo_w
			from	titulo_receber
			where	nr_titulo	= nr_titulo_w;
			
			if (vl_descontado_w > vl_titulo_w) then
				insert	into	pls_desc_inconsistencia(	nr_sequencia, nr_seq_cobranca, cd_estabelecimento,
						dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
						nm_usuario_nrec, nr_matricula, vl_titulo,
						ds_inconsistencia)
					values (	nextval('pls_desc_inconsistencia_seq'), nr_seq_cobranca_p, cd_estabelecimento_w,
						clock_timestamp(), nm_usuario_p, clock_timestamp(),
						nm_usuario_p, cd_matricula_w, vl_descontado_w,
						wheb_mensagem_pck.get_texto(281050, 'NM_PAGADOR_P=' || trim(both nm_pagador_w) ||
										';VL_TITULO_P=' || campo_mascara_virgula(vl_titulo_w))); -- O valor descontado para o(a) pagador(a) #@NM_PAGADOR_P#@, e superior ao valor do titulo (#@VL_TITULO_P#@). Favor verifique!
			end if;
			
			if (ie_importar_titulo_w = 'S') then
				select	max(nr_seq_cobranca)
				into STRICT	nr_seq_cobr_duplica_w
				from	titulo_receber_cobr
				where	nr_titulo = nr_titulo_w
				and	nr_seq_mensalidade = nr_seq_mensalidade_w
				and	nr_seq_cobranca = nr_seq_cobranca_p;
				
				if (coalesce(nr_seq_cobr_duplica_w::text, '') = '') then
					insert into titulo_receber_cobr(	nr_sequencia, nr_seq_cobranca, nr_titulo,
								vl_cobranca, dt_atualizacao, nm_usuario,
								cd_banco, cd_agencia_bancaria, nr_conta,
								cd_moeda, dt_liquidacao, vl_liquidacao,
								ie_digito_conta, dt_atualizacao_nrec, nm_usuario_nrec,
								vl_despesa_bancaria, vl_juros, vl_multa,
								vl_desc_previsto, nr_seq_mensalidade)
						values (	nextval('titulo_receber_cobr_seq'), nr_seq_cobranca_p, nr_titulo_w,
								coalesce(CASE WHEN vl_descontado_w=0 THEN vl_descontar_w  ELSE vl_descontado_w END ,0), clock_timestamp(), nm_usuario_p,
								cd_banco_w, cd_agencia_bancaria_w, nr_conta_w,
								cd_moeda_w, dt_referencia_w, vl_descontado_w,
								ie_digito_conta_w, clock_timestamp(), nm_usuario_p,
								vl_despesa_bancaria_w, vl_juros_w, vl_multa_w,
								vl_desc_previsto_w, nr_seq_mensalidade_w);
				else
					update	titulo_receber_cobr
					set	vl_cobranca = vl_cobranca + coalesce(CASE WHEN vl_descontado_w=0 THEN vl_descontar_w  ELSE vl_descontado_w END ,0),
						vl_liquidacao = vl_liquidacao + vl_descontado_w
					where	nr_seq_cobranca = nr_seq_cobr_duplica_w
					and	nr_titulo = nr_titulo_w;
				end if;
			end if;
		end if;
		end;
	end loop;
	close C02;
end if;

if (cd_interface_w = 3208) then
	for r_c01_w in c01 loop
		begin
		if (substr(r_c01_w.ds_conteudo,1,1) <> 'C') then
			ds_conteudo_w	:= r_c01_w.ds_conteudo;
			
			for i in 1..9 loop
				begin
				if (i <> 9) then
					select  position(';' in ds_conteudo_w)
					into STRICT    pos_virgula_w
					;
					
					ie_acao_w	:= substr(ds_conteudo_w,1,pos_virgula_w-1);
				else
					ie_acao_w	:= ds_conteudo_w;
				end if;
				
				if (i = 1) then
					nr_cpf_w	:= ie_acao_w;
				elsif (i = 8) then
					qt_numeros_w	:= length(ie_acao_w);
					
					vl_descontado_w	:= trim(both substr(ie_acao_w,1,qt_numeros_w-2) || ',' || substr(ie_acao_w,qt_numeros_w-1,qt_numeros_w));
				elsif (i = 9) then
					dt_referencia_w	:= to_date(ie_acao_w, 'dd/mm/yyyy');
				end if;
				
				ds_conteudo_w	:= substr(ds_conteudo_w,pos_virgula_w+1,length(ds_conteudo_w));
				end;
			end loop;
			
			if (nr_cpf_w IS NOT NULL AND nr_cpf_w::text <> '') then
				select	max(c.nr_sequencia),
					max(d.nr_titulo),
					max(b.nr_sequencia),
					max(d.cd_moeda)
				into STRICT	nr_seq_mensalidade_w,
					nr_titulo_w,
					nr_seq_pagador_w,
					cd_moeda_w
				from	pessoa_fisica a,
					pls_contrato_pagador b,
					pls_mensalidade c,
					titulo_receber d
				where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
				and	b.nr_sequencia = c.nr_seq_pagador
				and	c.nr_sequencia = d.nr_seq_mensalidade
				and	exists (SELECT	1
						from	cobranca_escritural x,
							titulo_receber_cobr y
						where	x.nr_sequencia = y.nr_seq_cobranca
						and	x.ie_remessa_retorno = 'R'
						and	y.nr_titulo = d.nr_titulo)
				and	c.dt_referencia = dt_referencia_w
				and	coalesce(c.ie_cancelamento::text, '') = ''
				and	a.nr_cpf = nr_cpf_w;

				select	max(cd_banco),
					max(cd_agencia_bancaria),
					max(cd_conta),
					max(ie_digito_conta)
				into STRICT	cd_banco_w,
					cd_agencia_bancaria_w,
					nr_conta_w,
					ie_digito_conta_w
				from	pls_contrato_pagador_fin
				where	nr_sequencia = nr_seq_pagador_w
				and	dt_referencia_w between coalesce(trunc(dt_inicio_vigencia, 'dd'), dt_referencia_w) and fim_mes(coalesce(dt_fim_vigencia, dt_referencia_w));

				if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
					insert	into	titulo_receber_cobr(	nr_sequencia, nr_seq_cobranca, nr_titulo,
								vl_cobranca, dt_atualizacao, nm_usuario,
								cd_banco, cd_agencia_bancaria, nr_conta,
								cd_moeda, dt_liquidacao, vl_liquidacao,
								ie_digito_conta, dt_atualizacao_nrec, nm_usuario_nrec,
								nr_seq_mensalidade)
						values (	nextval('titulo_receber_cobr_seq'), nr_seq_cobranca_p, nr_titulo_w,
								vl_descontado_w, clock_timestamp(), nm_usuario_p,
								cd_banco_w, cd_agencia_bancaria_w, nr_conta_w,
								cd_moeda_w, dt_referencia_w, vl_descontado_w,
								ie_digito_conta_w, clock_timestamp(), nm_usuario_p,
								nr_seq_mensalidade_w);					
				end if;
			end if;
		end if;
		end;
	end loop;
end if;

if (cd_interface_w in (2617,2618,2619)) then
	for r_c03_w in C03 loop
		begin
		
		insert	into	titulo_receber_cobr(	nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_NREC,
				nr_seq_cobranca,nr_titulo,vl_cobranca,cd_banco,cd_agencia_bancaria,
				nr_conta,cd_moeda,ie_digito_conta,vl_desconto,vl_acrescimo,
				vl_despesa_bancaria,vl_desc_previsto,nr_seq_mensalidade,vl_liquidacao)
		values (	nextval('titulo_receber_cobr_seq'),clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,
				nr_seq_cobranca_p,r_c03_w.nr_titulo,r_c03_w.vl_cobranca,r_c03_w.cd_banco,r_c03_w.cd_agencia_bancaria,
				r_c03_w.nr_conta,r_c03_w.cd_moeda,r_c03_w.ie_digito_conta,r_c03_w.vl_desconto,r_c03_w.vl_acrescimo,
				r_c03_w.vl_despesa_bancaria,r_c03_w.vl_desc_previsto,r_c03_w.nr_seq_mensalidade,r_c03_w.vl_cobranca);
		end;
	end loop;
end if;


if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
	ds_erro_w	:= wheb_mensagem_pck.get_texto(281055, 'DS_ERRO_P=' || ds_erro_w);
end if;

ds_erro_p	:= ds_erro_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_imp_dados_desconto_folha ( nr_seq_cobranca_p bigint, nm_arquivo_p text, ie_opcao_p text, ds_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;

