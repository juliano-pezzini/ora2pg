-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_link_ged ( nr_seq_contrato_p bigint, cd_matricula_familia_p bigint, cd_matricula_estipulante_p text, cd_operadora_empresa_p bigint, ie_tipo_regra_p text, cd_usuario_plano_p pls_segurado_carteira.cd_usuario_plano%type, nm_usuario_p text) AS $body$
DECLARE


nr_seq_regra_w			pls_regra_ged.nr_sequencia%type;
nr_seq_contrato_ged_w		pls_contrato_ged.nr_sequencia%type;
ds_fixo_w			pls_regra_ged_atrib.ds_fixo%type;
ie_tipo_campo_w			pls_regra_ged_atrib.ie_tipo_campo%type;
ds_link_w			varchar(255);
ds_campo_w			varchar(255);
nr_seq_emissor_w		pls_contrato.nr_seq_emissor%type;
qt_completar_zero_w		pls_regra_ged_atrib.qt_completar_zero%type;
nr_contrato_w			pls_contrato.nr_contrato%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_ged
	where	((nr_seq_contrato = nr_seq_contrato_p) or (coalesce(nr_seq_contrato::text, '') = ''))
	and	((nr_seq_emissor = nr_seq_emissor_w) or (coalesce(nr_seq_emissor::text, '') = ''))
	and	ie_tipo_regra = ie_tipo_regra_p
	order by coalesce(nr_seq_contrato,0);

C02 CURSOR FOR
	SELECT	ds_fixo,
		ie_tipo_campo,
		qt_completar_zero
	from	pls_regra_ged_atrib
	where	nr_seq_regra = nr_seq_regra_w
	order by nr_seq_ordem;


BEGIN
if	(ie_tipo_regra_p IS NOT NULL AND ie_tipo_regra_p::text <> '' AND nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
	begin
	select	nr_seq_emissor,
		nr_contrato
	into STRICT	nr_seq_emissor_w,
		nr_contrato_w
	from	pls_contrato
	where	nr_sequencia	= nr_seq_contrato_p;
	exception
	when others then
		nr_seq_emissor_w	:= null;
	end;
	
	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		begin
		select	nr_sequencia
		into STRICT	nr_seq_contrato_ged_w
		from	pls_contrato_ged
		where	nr_seq_regra = nr_seq_regra_w
		and	nr_seq_contrato  = nr_seq_contrato_p
		and	ie_tipo_registro = ie_tipo_regra_p
		and	coalesce(cd_usuario_plano, 0) = coalesce(cd_usuario_plano_p, 0)
		and	coalesce(cd_matricula_familia,0) = coalesce(cd_matricula_familia_p,0)
		and	coalesce(cd_matricula_estipulante,'0') = coalesce(cd_matricula_estipulante_p,'0');
		exception
		when others then
			begin
			open C02;
			loop
			fetch C02 into
				ds_fixo_w,
				ie_tipo_campo_w,
				qt_completar_zero_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				ds_campo_w	:= null;
				if (ie_tipo_campo_w = 'FX') then
					ds_campo_w := ds_fixo_w;
				elsif (ie_tipo_campo_w = 'CE') then
					ds_campo_w := cd_operadora_empresa_p;
				elsif (ie_tipo_campo_w = 'MF') then
					ds_campo_w := cd_matricula_familia_p;
				elsif (ie_tipo_campo_w = 'ME') then
					ds_campo_w := cd_matricula_estipulante_p;
				elsif (ie_tipo_campo_w = 'NC') then
					ds_campo_w := nr_contrato_w;
				elsif (ie_tipo_campo_w = 'CI') then
					ds_campo_w := cd_usuario_plano_p;
				end if;
				
				if (ie_tipo_campo_w <> 'FX' and (qt_completar_zero_w IS NOT NULL AND qt_completar_zero_w::text <> '')) then
					ds_campo_w := lpad(ds_campo_w,qt_completar_zero_w,'0');
				end if;
				ds_link_w	:= ds_link_w || ds_campo_w;
				end;
			end loop;
			close C02;

			if (ds_link_w IS NOT NULL AND ds_link_w::text <> '') then
				if (ie_tipo_regra_p = 'B') then
					insert into pls_contrato_ged(	nr_sequencia,
									nr_seq_contrato,
									nr_seq_regra,
									ie_tipo_registro,
									dt_atualizacao,
									nm_usuario,
									cd_matricula_familia,
									cd_matricula_estipulante,
									nr_contrato,
									cd_usuario_plano,
									ds_link)
							values (		nextval('pls_contrato_ged_seq'),
									nr_seq_contrato_p,
									nr_seq_regra_w,
									'B',
									clock_timestamp(),
									nm_usuario_p,
									cd_matricula_familia_p,
									cd_matricula_estipulante_p,
									nr_contrato_w,
									cd_usuario_plano_p,
									ds_link_w);
				elsif (ie_tipo_regra_p = 'C') then
					insert into pls_contrato_ged(	nr_sequencia,
									nr_seq_contrato,
									nr_seq_regra,
									ie_tipo_registro,
									dt_atualizacao,
									nm_usuario,
									cd_operadora_empresa,
									nr_contrato,
									ds_link)
							values (		nextval('pls_contrato_ged_seq'),
									nr_seq_contrato_p,
									nr_seq_regra_w,
									'C',
									clock_timestamp(),
									nm_usuario_p,
									cd_operadora_empresa_p,
									nr_contrato_w,
									ds_link_w);
				end if;
			end if;
			end;
		end;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_link_ged ( nr_seq_contrato_p bigint, cd_matricula_familia_p bigint, cd_matricula_estipulante_p text, cd_operadora_empresa_p bigint, ie_tipo_regra_p text, cd_usuario_plano_p pls_segurado_carteira.cd_usuario_plano%type, nm_usuario_p text) FROM PUBLIC;

