-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_comunicacao_transf ( nr_seq_agenda_p bigint, dt_origem_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
											 
nr_seq_evento_w		bigint;											
nr_atendimento_w	bigint;
cd_pessoa_fisica_w	varchar(10);
cd_agenda_w		bigint;
hr_inicio_w		timestamp;
cd_medico_w		varchar(10);
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_idade_w		bigint;
qt_opme_w		bigint;
cd_convenio_w		bigint;
qt_opme_ww		bigint;
nr_seq_evento_ww	bigint;	
ie_status_agenda_w	varchar(3) := null;
ds_observacao_w		varchar(255);

C01 CURSOR FOR 
	SELECT	a.nr_seq_evento 
	from	regra_envio_sms a 
	where	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	a.ie_evento_disp	= 'TAC' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and	coalesce(cd_medico,coalesce(cd_medico_w,'0')) = coalesce(cd_medico_w,'0') 
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_w,ie_status_agenda_w) = 'S') 
	and (obter_classif_regra(nr_sequencia,coalesce(obter_classificacao_pf(cd_pessoa_fisica_w),0)) = 'S') 
	and	coalesce(a.ie_situacao,'A') = 'A';
	
C02 CURSOR FOR 
	SELECT	a.nr_seq_evento 
	from	regra_envio_sms a 
	where	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	a.ie_evento_disp	= 'TACO' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and	qt_opme_w > 0 
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_w,ie_status_agenda_w) = 'S') 
	and	coalesce(a.ie_situacao,'A') = 'A';
	
c03 CURSOR FOR 
	SELECT	a.nr_seq_evento 
	from	regra_envio_sms a 
	where	a.cd_estabelecimento	= cd_estabelecimento_p 
	and	a.ie_evento_disp	= 'TAOA' 
	and	qt_idade_w between coalesce(qt_idade_min,0)	and coalesce(qt_idade_max,9999) 
	and	qt_opme_ww > 0 
	and (obter_regra_alerta_agenda(nr_sequencia,cd_agenda_w,ie_status_agenda_w) = 'S') 
	and	coalesce(a.ie_situacao,'A') = 'A';	
 
 

BEGIN	 
select	nr_atendimento, 
	cd_pessoa_fisica, 
	cd_agenda, 
	hr_inicio, 
	cd_medico, 
	cd_procedimento, 
	ie_origem_proced, 
	cd_convenio, 
	ie_status_agenda, 
	substr(ds_observacao,1,255) 
into STRICT 
	nr_atendimento_w, 
	cd_pessoa_fisica_w, 
	cd_agenda_w, 
	hr_inicio_w, 
	cd_medico_w, 
	cd_procedimento_w, 
	ie_origem_proced_w, 
	cd_convenio_w, 
	ie_status_agenda_w, 
	ds_observacao_w 
from	agenda_paciente 
where	nr_sequencia = nr_seq_agenda_p;		
qt_idade_w	:= coalesce(obter_idade_pf(cd_pessoa_fisica_w,clock_timestamp(),'A'),0);
open C01;
loop 
fetch C01 into	 
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	CALL gerar_evento_agenda_trigger(	nr_seq_evento_w, 
					nr_atendimento_w, 
					cd_pessoa_fisica_w, 
					null, 
					nm_usuario_p, 
					cd_agenda_w, 
					hr_inicio_w, 
					cd_medico_w, 
					cd_procedimento_w, 
					ie_origem_proced_w, 
					null, 
					null, 
					null, 
					null, 
					cd_convenio_w, 
					null, 
					'N', 
					nr_seq_agenda_p, 
					dt_origem_p, 
					null, 
					null, 
					null, 
					ds_observacao_w);
	end;
end loop;
close C01;
 
select	count(*) 
into STRICT	qt_opme_w 
from	agenda_pac_opme 
where	nr_Seq_agenda	= nr_seq_agenda_p 
and	coalesce(ie_origem_inf,'I') = 'I';
 
select	count(*) 
into STRICT	qt_opme_ww 
from	agenda_pac_opme 
where	nr_Seq_agenda	= nr_seq_agenda_p 
and	coalesce(ie_origem_inf,'I') = 'I' 
and	ie_autorizado	= 'R';
 
open C02;
loop 
fetch C02 into	 
	nr_seq_evento_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	CALL gerar_evento_agenda_trigger(nr_seq_evento_w,nr_atendimento_w,cd_pessoa_fisica_w,null,nm_usuario_p, 
				cd_agenda_w, hr_inicio_w, cd_medico_w, cd_procedimento_w, 
				ie_origem_proced_w, null,null,null,null, cd_convenio_w, null,'N',nr_seq_agenda_p,dt_origem_p, 
				null,null,null,ds_observacao_w);
	end;
end loop;
close C02;
 
open C03;
loop 
fetch C03 into	 
	nr_seq_evento_ww;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin 
	CALL gerar_evento_agenda_trigger(nr_seq_evento_ww,nr_atendimento_w,cd_pessoa_fisica_w,null,nm_usuario_p, 
				cd_agenda_w, hr_inicio_w, cd_medico_w, cd_procedimento_w, 
				ie_origem_proced_w, null,null,null,null, cd_convenio_w, null,'N',nr_seq_agenda_p,dt_origem_p, 
				null,null,null,ds_observacao_w);
	end;
end loop;
close C03;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_comunicacao_transf ( nr_seq_agenda_p bigint, dt_origem_p timestamp, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

