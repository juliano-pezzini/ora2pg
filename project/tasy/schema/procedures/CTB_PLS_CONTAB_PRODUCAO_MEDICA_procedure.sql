-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE t_pls_lote_pagamento AS (	nr_id	t_rowid);
CREATE TYPE t_pls_pagamento_prestador AS (	nr_id	t_rowid);
CREATE TYPE t_pls_evento_movimento AS (	nr_id	t_rowid);
CREATE TYPE t_pls_pag_prest_venc_trib AS (	nr_id	t_rowid);


CREATE OR REPLACE PROCEDURE ctb_pls_contab_producao_medica ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Contabilizar as informacoes provenientes da producao medica
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta: 
[  ]  Objetos do dicionario [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------
Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_conteudo_w			varchar(4000);
vl_retorno_w			varchar(2000);
ds_item_w			varchar(255);
nm_prestador_w			varchar(255);
ds_compl_historico_w		varchar(255);
ds_compl_historico_ww		varchar(255);
ds_evento_w			varchar(255);
ds_tributo_w			varchar(255);
nm_agrupador_w			varchar(255);
cd_conta_contabil_w		varchar(20);
cd_conta_ajuste_w		conta_contabil.cd_conta_contabil%type;
ie_debito_credito_w		varchar(20);
cd_pessoa_fisica_w		varchar(20);
cd_conta_glosa_w		varchar(20);
cd_conta_contab_w		varchar(20);
cd_conta_tx_intercambio_w	varchar(20);
cd_conta_tx_inter_glosa_w	varchar(20);
cd_cgc_prestador_w		varchar(14);
cd_cpf_prestador_w		varchar(11);
ie_tipo_item_w			varchar(10);
ie_proc_mat_w			varchar(2);
ie_compl_hist_w			varchar(2);
ie_regulamentacao_w		varchar(2);
ie_movimento_w			varchar(2);
ie_centro_custo_w		varchar(1);
ie_provisao_producao_w		varchar(1);
ie_esquema_contabil_w		varchar(1);
ie_nao_aplica_recalc_w		varchar(1);
ie_atualiza_lote_pag_w		varchar(1);
ie_estorno_w			varchar(1);
ie_pagamento_novo_w		varchar(1);
nr_nota_fiscal_w		numeric(20);
vl_contabil_w			double precision;
vl_movimento_w			double precision;
vl_glosa_w			double precision;
vl_contab_w			double precision;
vl_tx_intercambio_w		double precision;
vl_tx_intercambio_glosa_w	double precision;
vl_ajuste_w			double precision;
cd_procedimento_w		bigint;
nr_seq_w_movto_cont_w		bigint;
cd_historico_w			bigint;
nr_seq_conta_w			bigint;
nr_seq_item_w			bigint;
nr_seq_prestador_w		bigint;
nr_seq_protocolo_w		bigint;
nr_seq_regra_cc_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_plano_w			bigint;
cd_historico_evento_w		bigint;
nr_seq_evento_mvto_w		bigint;
qt_compl_hist_w			bigint;
nr_seq_prot_conta_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_material_w		bigint;
nr_seq_evento_w			bigint;
nr_seq_mvto_sem_conta_w		bigint;
cd_tributo_w			bigint;
nr_seq_pag_prest_w		bigint;
nr_seq_lote_w			bigint;
nr_tit_pagar_origem_w		bigint;
nr_tit_receber_origem_w		bigint;
nr_adiant_pago_origem_w		bigint;
nr_titulo_pagar_w		bigint;
nr_titulo_receber_w		bigint;
nr_titulo_pag_trib_w		bigint;
cd_historico_glosa_w		bigint;
cd_historico_contab_w		bigint;
cd_historico_tx_inter_w		bigint;
cd_historico_tx_inter_glosa_w	bigint;
qt_esquema_tx_inter_w		bigint;
qt_rec_glosa_w			bigint;
qt_prest_pgto_w			bigint;
nr_seq_pp_lote_w		bigint;
nr_seq_agrupamento_w		w_movimento_contabil.nr_seq_agrupamento%type;
nr_seq_lote_pgto_w		bigint;
cd_centro_custo_w		integer;
cd_centro_custo_fixo_w		integer;
cd_estabelecimento_w		smallint;
dt_referencia_w			timestamp;
dt_imposto_w			timestamp;
dt_movimento_w			timestamp;
dt_mes_competencia_w		timestamp;
dt_referencia_mes_ant_w		timestamp;
dt_referencia_protocolo_w	timestamp;
nm_agrupador_reversao_w		varchar(255);
nr_nota_fiscal_mat_w		varchar(255);
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
dt_ref_inicial_ant_w		timestamp;
dt_ref_final_ant_w		timestamp;
nr_seq_info_ctb_w		informacao_contabil.nr_sequencia%type;
nm_tabela_w			w_movimento_contabil.nm_tabela%type;
nm_atributo_w			w_movimento_contabil.nm_atributo%type;
nr_seq_conta_resumo_w		pls_conta_medica_resumo.nr_sequencia%type;
cd_tipo_lote_contabil_w		lote_contabil.cd_tipo_lote_contabil%type;
cd_centro_custo_movto_w		pls_evento_movimento.cd_centro_custo%type;
nr_lote_param_w			pls_lote_pagamento.nr_sequencia%type;
ie_gera_reversao_lote_w		lote_contabil_parametro.ds_valor_parametro%type;
nr_seq_prestador_pag_w		pls_conta_medica_resumo.nr_seq_prestador_pgto%type;
cd_cpf_prestador_pag_w		pessoa_fisica.nr_cpf%type;
cd_cgc_prestador_pag_w		pessoa_juridica.cd_cgc%type;
nm_prestador_pag_w		pls_conta_medica_resumo.nm_prestador_pgto%type;
cd_historico_vl_ajuste_w	pls_conta_medica_resumo.cd_historico_vl_ajuste%type;
cd_historico_vl_ajuste_ww	pls_conta_medica_resumo.cd_historico_vl_ajuste%type;
cd_cgc_cpf_prest_pagto_w	varchar(14);
qt_commit_w			bigint;
qt_lote_prod_w			bigint;
ie_data_trib_prod_med_w		pls_parametro_contabil.ie_data_trib_prod_med%type;
ie_data_lote_prod_med_w		pls_parametro_contabil.ie_data_lote_prod_med%type;
ie_status_prov_pagto_w		pls_parametro_contabil.ie_status_prov_pagto%type;
ie_lote_ajuste_prod_w		pls_parametro_contabil.ie_lote_ajuste_prod%type;
nr_seq_lote_pgto_apropr_w	pls_lote_evento.nr_seq_lote_pgto_apropr%type;
ie_tipo_evento_w		pls_evento.ie_tipo_evento%type;
cd_conta_contabil_deb_w		conta_contabil.cd_conta_contabil%type;
cd_conta_contabil_cred_w	conta_contabil.cd_conta_contabil%type;
cd_conta_glosa_deb_w		conta_contabil.cd_conta_contabil%type;
cd_conta_glosa_cred_w		conta_contabil.cd_conta_contabil%type;
cd_conta_deb_tx_inter_w		conta_contabil.cd_conta_contabil%type;
cd_conta_cred_tx_inter_w	conta_contabil.cd_conta_contabil%type;
cd_conta_deb_tx_inter_glosa_w	conta_contabil.cd_conta_contabil%type;
cd_conta_cred_tx_inter_glosa_w	conta_contabil.cd_conta_contabil%type;
cd_conta_contab_deb_w		conta_contabil.cd_conta_contabil%type;
cd_conta_contab_cred_w		conta_contabil.cd_conta_contabil%type;
cd_conta_ajuste_deb_w		conta_contabil.cd_conta_contabil%type;
cd_conta_ajuste_cred_w		conta_contabil.cd_conta_contabil%type;
cd_centro_custo_deb_w		centro_custo.cd_centro_custo%type;
cd_centro_custo_cred_w		centro_custo.cd_centro_custo%type;
ie_centro_custo_deb_w		conta_contabil.ie_centro_custo%type;
ie_centro_custo_cred_w		conta_contabil.ie_centro_custo%type;
cd_centro_custo_fixo_deb_w	conta_contabil.cd_conta_contabil%type;
cd_centro_custo_fixo_cred_w	conta_contabil.cd_conta_contabil%type;
cd_centro_custo_trib_w		centro_custo.cd_centro_custo%type;
ie_tipo_relacao_w		pls_prestador.ie_tipo_relacao%type;
nr_lote_contab_pag_w		pls_lote_pagamento.nr_sequencia%type;
qt_lote_recalculo_w		bigint;
nr_id_lote_pag_w		oid;
nr_id_evento_mov_w		oid;
nr_id_trib_w			oid;
nr_id_pag_prest_w		oid;
nr_seq_tab_orig_w		w_movimento_contabil.nr_seq_tab_orig%type;
nr_seq_tab_compl_w		w_movimento_contabil.nr_seq_tab_compl%type;
nr_doc_analitico_w		w_movimento_contabil.nr_doc_analitico%type;

nr_seq_prestador_exec_w		pls_conta.nr_seq_prestador_exec%type;
nr_seq_prestador_solic_w	pls_conta.nr_seq_prestador%type;
nr_seq_prestador_atend_w	pls_protocolo_conta.nr_seq_prestador%type;

nr_id_proc_mat_w		oid;


type t_rowid is table of varchar(18) index by integer;

pls_lote_pagamento_w		t_pls_lote_pagamento;


pls_pagamento_prestador_w	t_pls_pagamento_prestador;


pls_evento_movimento_w		t_pls_evento_movimento;


pls_pag_prest_venc_trib_w	t_pls_pag_prest_venc_trib;

type t_movimento_contabil is table
	of w_movimento_contabil%rowtype index by integer;
movimento_contabil_w	t_movimento_contabil;
item_mov_contabil_w	w_movimento_contabil%rowtype;

type t_rowid_n is table of oid index by integer;
rowid_proc_w 	t_rowid_n;
rowid_mat_w 	t_rowid_n;
/* Reverter a provisao */

c_reversao_provisao CURSOR FOR
	SELECT	'D' ie_debito_credito, /* debito procedimento*/
		'P' ie_proc_mat, /*Procedimento*/
		c.nr_sequencia nr_seq_item,
		c.cd_conta_provisao_cred cd_conta_contabil,
		coalesce(c.vl_provisao,0) vl_provisao,
		c.cd_historico_rev_prov cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		null nr_nota_fiscal,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_PROVISAO' nm_atributo,
		35 nr_seq_info_ctb,
		b.nr_seq_plano,
		e.nr_sequencia nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc		c,
		pls_conta 		b,
		pls_protocolo_conta	e
	where	b.nr_sequencia		= c.nr_seq_conta
	and	b.nr_seq_protocolo	= e.nr_sequencia
	--and	e.nr_lote_contabil_prov is not null
	and	(c.nr_lote_contabil_prov IS NOT NULL AND c.nr_lote_contabil_prov::text <> '')
	and	e.dt_mes_competencia between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	ie_gera_reversao_lote_w = 'S'
	and	e.cd_estabelecimento = cd_estabelecimento_w
	
union all

	SELECT	'C' ie_debito_credito, /* credito procedimento */
		'P' ie_proc_mat, /*Procedimento*/
		c.nr_sequencia nr_seq_item,
		c.cd_conta_provisao_deb cd_conta_contabil,
		coalesce(c.vl_provisao,0) vl_provisao,
		c.cd_historico_rev_prov cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		null nr_nota_fiscal,
		'PLS_CONTA_PROC' nm_tabela,
		'VL_PROVISAO' nm_atributo,
		35 nr_seq_info_ctb,
		b.nr_seq_plano,
		e.nr_sequencia nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_proc		c,
		pls_conta 		b,
		pls_protocolo_conta	e
	where	b.nr_sequencia		= c.nr_seq_conta
	and	b.nr_seq_protocolo	= e.nr_sequencia
	--and	e.nr_lote_contabil_prov is not null
	and	(c.nr_lote_contabil_prov IS NOT NULL AND c.nr_lote_contabil_prov::text <> '')
	and	e.dt_mes_competencia between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	ie_gera_reversao_lote_w = 'S'
	and	e.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	'D' ie_debito_credito, /* debito material */
		'M' ie_proc_mat, /*Material*/
		c.nr_sequencia nr_seq_item,
		c.cd_conta_provisao_cred cd_conta_contabil,
		coalesce(c.vl_provisao,0) vl_provisao,
		c.cd_historico_rev_prov cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		c.nr_nota_fiscal,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_PROVISAO' nm_atributo,
		35 nr_seq_info_ctb,
		b.nr_seq_plano,
		e.nr_sequencia nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat		c,
		pls_conta 		b,
		pls_protocolo_conta	e
	where	b.nr_sequencia		= c.nr_seq_conta
	and	b.nr_seq_protocolo	= e.nr_sequencia
	--and	e.nr_lote_contabil_prov is not null
	and	(c.nr_lote_contabil_prov IS NOT NULL AND c.nr_lote_contabil_prov::text <> '')
	and	e.dt_mes_competencia between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	ie_gera_reversao_lote_w = 'S'
	and	e.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	'C' ie_debito_credito, /* credito material */
		'M' ie_proc_mat, /*Material*/
		c.nr_sequencia nr_seq_item,
		c.cd_conta_provisao_deb cd_conta_contabil,
		coalesce(c.vl_provisao,0) vl_provisao,
		c.cd_historico_rev_prov cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		c.nr_nota_fiscal,
		'PLS_CONTA_MAT' nm_tabela,
		'VL_PROVISAO' nm_atributo,
		35 nr_seq_info_ctb,
		b.nr_seq_plano,
		e.nr_sequencia nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		c.nr_sequencia nr_doc_analitico
	from	pls_conta_mat		c,
		pls_conta 		b,
		pls_protocolo_conta	e
	where	b.nr_sequencia		= c.nr_seq_conta
	and	b.nr_seq_protocolo	= e.nr_sequencia
	--and	e.nr_lote_contabil_prov is not null
	and	(c.nr_lote_contabil_prov IS NOT NULL AND c.nr_lote_contabil_prov::text <> '')
	and	e.dt_mes_competencia between dt_ref_inicial_ant_w and dt_ref_final_ant_w
	and	ie_gera_reversao_lote_w = 'S'
	and	e.cd_estabelecimento = cd_estabelecimento_w;
	
type		fetch_array is table of c_reversao_provisao%ROWTYPE;
s_array		fetch_array;
i		integer := 1;
type Vetor is table of fetch_array index by integer;
Vetor_reversao_provisao_w			Vetor;

c_pagamento is CURSOR
	with 	lote_contabil_parametro_w as (	SELECT	coalesce(x.nr_documento,y.vl_parametro) nr_documento
						FROM lote_contabil_parametro y
LEFT OUTER JOIN lote_contabil_param_item x ON (y.nr_lote_contabil = x.nr_lote_contabil AND y.nr_seq_parametro = x.nr_seq_parametro)
WHERE y.nr_lote_contabil	= nr_lote_contabil_p and y.nr_seq_parametro	= 1 )
	SELECT	'P' ie_proc_mat, /*Procedimento*/
		c.nr_sequencia nr_seq_item,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_deb  ELSE d.cd_conta_deb END  cd_conta_contabil_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_ajuste_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_cred  ELSE d.cd_conta_cred END  cd_conta_contabil_cred,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_ajuste_cred,
		coalesce(d.vl_liberado,0) vl_contabil,
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  a.dt_geracao_titulos  ELSE fim_mes(a.dt_mes_competencia) END ) dt_movimento,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico  ELSE d.cd_historico END  cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		null cd_tributo,
		a.nr_sequencia nr_seq_lote,
		null nr_seq_pp_lote,
		a.dt_mes_competencia,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa_deb, /* Se nao for esquema contabil, tem que inverter debito e credito */
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se nao for esquema contabil, tem que inverter debito e credito */
		coalesce(d.vl_glosa,0) vl_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter,
		c.cd_conta_cred_tx_inter_glosa,
		c.cd_historico_tx_inter cd_historico_tx_inter,
		c.cd_historico_tx_inter_glosa cd_historico_tx_inter_glosa,
		(coalesce(c.vl_lib_taxa_co,0) + coalesce(c.vl_lib_taxa_material,0) + coalesce(c.vl_lib_taxa_servico,0)) vl_tx_intercambio,
		(coalesce(c.vl_glosa_taxa_co,0) + coalesce(c.vl_glosa_taxa_material,0) + coalesce(c.vl_glosa_taxa_servico,0)) vl_tx_intercambio_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico_ajuste  ELSE d.cd_historico_vl_ajuste END  cd_historico_vl_ajuste,
		d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
		null nr_nota_fiscal,
		d.nr_sequencia nr_seq_conta_resumo,
		b.nr_seq_plano,
		b.nr_seq_prestador nr_seq_prestador_solic,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		e.nr_seq_prestador nr_seq_prestador_atend,
		d.nr_seq_prestador_pgto,
		d.nm_prestador_pgto,
		p.ie_tipo_relacao,
		a.oid nr_id_lote_pag,
		c.oid nr_id_proc_mat,
		null nr_id_pag_prest,
		'N' ie_estorno,
		a.nr_lote_contabil,
		b.nr_seq_protocolo nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico
	FROM pls_periodo_pagamento x, lote_contabil_parametro_w h, pls_protocolo_conta e, pls_conta_proc c, pls_conta b, pls_lote_pagamento a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_proc and c.nr_seq_conta		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= d.nr_seq_lote_pgto and a.nr_seq_periodo	= x.nr_sequencia and e.nr_sequencia		= b.nr_seq_protocolo  and a.nr_sequencia		= coalesce(h.nr_documento,a.nr_sequencia) and coalesce(a.nr_lote_contabil,0) = 0 and coalesce(d.ie_situacao,'A') 	= 'A' and a.ie_status		= 'D' and ((ie_data_lote_prod_med_w = 'T' AND ie_recurso_proprio = 'N' AND a.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w)
	or	(((ie_data_lote_prod_med_w = 'C') or (ie_recurso_proprio = 'S'))
	and (a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w))) and a.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	'M' ie_proc_mat, /*Material*/
		c.nr_sequencia nr_seq_item,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_deb  ELSE d.cd_conta_deb END  cd_conta_contabil_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_ajuste_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_cred  ELSE d.cd_conta_cred END  cd_conta_contabil_cred,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_ajuste_cred,	
		coalesce(d.vl_liberado,0) vl_contabil,
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  a.dt_geracao_titulos  ELSE fim_mes(a.dt_mes_competencia) END ) dt_movimento,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico  ELSE d.cd_historico END  cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		null cd_tributo,
		a.nr_sequencia nr_seq_lote,
		null nr_seq_pp_lote,
		a.dt_mes_competencia,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa_deb, /* Se nao for esquema contabil, tem que inverter debito e credito */
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se nao for esquema contabil, tem que inverter debito e credito */
		coalesce(d.vl_glosa,0) vl_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter,
		c.cd_conta_cred_tx_inter_glosa,
		c.cd_historico_tx_inter cd_historico_tx_inter,
		c.cd_historico_tx_inter_glosa cd_historico_tx_inter_glosa,
		coalesce(c.vl_taxa_material,0) vl_tx_intercambio,
		coalesce(c.vl_glosa_taxa_material,0) vl_tx_intercambio_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico_ajuste  ELSE d.cd_historico_vl_ajuste END  cd_historico_vl_ajuste,
		d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
		c.nr_nota_fiscal,
		d.nr_sequencia nr_seq_conta_resumo,
		b.nr_seq_plano,
		b.nr_seq_prestador nr_seq_prestador_solic,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		e.nr_seq_prestador nr_seq_prestador_atend,
		d.nr_seq_prestador_pgto,
		d.nm_prestador_pgto,
		p.ie_tipo_relacao,
		a.oid nr_id_lote_pag,
		c.oid nr_id_proc_mat,
		null nr_id_pag_prest,
		'N' ie_estorno,
		a.nr_lote_contabil,
		b.nr_seq_protocolo nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico
	FROM pls_periodo_pagamento x, lote_contabil_parametro_w h, pls_protocolo_conta e, pls_conta_mat c, pls_conta b, pls_lote_pagamento a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_mat and c.nr_seq_conta		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= d.nr_seq_lote_pgto and a.nr_seq_periodo	= x.nr_sequencia and e.nr_sequencia		= b.nr_seq_protocolo  and coalesce(a.nr_lote_contabil,0) = 0 and coalesce(d.ie_situacao,'A') 	= 'A' and a.ie_status		= 'D' and ((ie_data_lote_prod_med_w = 'T' AND ie_recurso_proprio = 'N' AND a.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w)
	or	(((ie_data_lote_prod_med_w = 'C') or (ie_recurso_proprio = 'S'))
	and (a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w))) and a.nr_sequencia		= coalesce(h.nr_documento,a.nr_sequencia) and a.cd_estabelecimento = cd_estabelecimento_w
	 
union all

	select	'P' ie_proc_mat, /*Procedimento*/
		c.nr_sequencia nr_seq_item,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_deb  ELSE d.cd_conta_deb END  cd_conta_contabil_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_ajuste_deb,		
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_cred  ELSE d.cd_conta_cred END  cd_conta_contabil_cred,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_ajuste_cred,
		coalesce(d.vl_liberado,0) * -1 vl_contabil,
		x.dt_cancelamento dt_movimento,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico  ELSE d.cd_historico END  cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		null cd_tributo,
		a.nr_sequencia nr_seq_lote,
		null nr_seq_pp_lote,
		a.dt_mes_competencia,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa_deb, /* Se nao for esquema contabil, tem que inverter debito e credito */
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se nao for esquema contabil, tem que inverter debito e credito */
		coalesce(d.vl_glosa,0) vl_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter,
		c.cd_conta_cred_tx_inter_glosa,
		c.cd_historico_tx_inter cd_historico_tx_inter,
		c.cd_historico_tx_inter_glosa cd_historico_tx_inter_glosa,
		(coalesce(c.vl_lib_taxa_co,0) + coalesce(c.vl_lib_taxa_material,0) + coalesce(c.vl_lib_taxa_servico,0)) vl_tx_intercambio,
		(coalesce(c.vl_glosa_taxa_co,0) + coalesce(c.vl_glosa_taxa_material,0) + coalesce(c.vl_glosa_taxa_servico,0)) vl_tx_intercambio_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico_ajuste  ELSE d.cd_historico_vl_ajuste END  cd_historico_vl_ajuste,
		(abs(d.vl_liberado) - abs(CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END )) vl_ajuste, -- O valor eh alterado dentro do cursor de tipo de movimento se for identificado que eh um estorno e ajuste.
		null nr_nota_fiscal,
		d.nr_sequencia nr_seq_conta_resumo,
		b.nr_seq_plano,
		b.nr_seq_prestador nr_seq_prestador_solic,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		e.nr_seq_prestador nr_seq_prestador_atend,
		d.nr_seq_prestador_pgto,
		d.nm_prestador_pgto,
		p.ie_tipo_relacao,
		a.oid nr_id_lote_pag,
		c.oid nr_id_proc_mat,
		x.oid nr_id_pag_prest,
		'S' ie_estorno,
		a.nr_lote_contabil,
		b.nr_seq_protocolo nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico
	FROM pls_pagamento_prestador x, pls_protocolo_conta e, pls_conta_proc c, pls_conta b, pls_lote_pagamento a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_proc and c.nr_seq_conta		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= d.nr_seq_lote_pgto and e.nr_sequencia		= b.nr_seq_protocolo  and x.nr_seq_prestador	= d.nr_seq_prestador_pgto and x.nr_seq_lote		= d.nr_seq_lote_pgto and d.ie_situacao 		= 'I' and coalesce(x.nr_lote_contabil_cancel,0) = 0 and x.dt_cancelamento between dt_ref_inicial_w and dt_ref_final_w and (coalesce(a.nr_lote_contabil,0) <> 0
	or	(a.ie_status		= 'D'
	and	((ie_data_lote_prod_med_w = 'T'
	and (a.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w
	or (exists (select	1
			from	pls_periodo_pagamento x
			where	x.nr_sequencia = a.nr_seq_periodo
			and	ie_recurso_proprio = 'S')
		and	a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w)))
	or (ie_data_lote_prod_med_w = 'C'
	and	a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w))
	and	a.nr_sequencia		= coalesce(nr_lote_param_w,a.nr_sequencia)
	and (exists (select	1
			from 	lote_contabil_param_item b
			where	b.nr_documento		= a.nr_sequencia
			and	b.nr_lote_contabil	= nr_lote_contabil_p) 
		or (qt_lote_prod_w = 0)))) and a.cd_estabelecimento = cd_estabelecimento_w
	 
union all

	select	'M' ie_proc_mat, /*Material*/
		c.nr_sequencia nr_seq_item,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_deb  ELSE d.cd_conta_deb END  cd_conta_contabil_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_ajuste_deb,		
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_cred  ELSE d.cd_conta_cred END  cd_conta_contabil_cred,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_ajuste_cred,		
		coalesce(d.vl_liberado,0) * -1 vl_contabil,
		x.dt_cancelamento dt_movimento,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico  ELSE d.cd_historico END  cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		null cd_tributo,
		a.nr_sequencia nr_seq_lote,
		null nr_seq_pp_lote,
		a.dt_mes_competencia,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa_deb, /* Se nao for esquema contabil, tem que inverter debito e credito */
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se nao for esquema contabil, tem que inverter debito e credito */
		coalesce(d.vl_glosa,0) vl_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter,
		c.cd_conta_cred_tx_inter_glosa,
		c.cd_historico_tx_inter cd_historico_tx_inter,
		c.cd_historico_tx_inter_glosa cd_historico_tx_inter_glosa,
		coalesce(c.vl_taxa_material,0) vl_tx_intercambio,
		coalesce(c.vl_glosa_taxa_material,0) vl_tx_intercambio_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico_ajuste  ELSE d.cd_historico_vl_ajuste END  cd_historico_vl_ajuste,
		(abs(d.vl_liberado) - abs(CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END )) vl_ajuste, -- O valor eh alterado dentro do cursor de tipo de movimento se for identificado que eh um estorno e ajuste.
		c.nr_nota_fiscal,
		d.nr_sequencia nr_seq_conta_resumo,
		b.nr_seq_plano,
		b.nr_seq_prestador nr_seq_prestador_solic,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		e.nr_seq_prestador nr_seq_prestador_atend,
		d.nr_seq_prestador_pgto,
		d.nm_prestador_pgto,
		p.ie_tipo_relacao,
		a.oid nr_id_lote_pag,
		c.oid nr_id_proc_mat,
		x.oid nr_id_pag_prest,
		'S' ie_estorno,
		a.nr_lote_contabil,
		b.nr_seq_protocolo nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico
	FROM pls_pagamento_prestador x, pls_protocolo_conta e, pls_conta_mat c, pls_conta b, pls_lote_pagamento a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_mat and c.nr_seq_conta		= d.nr_seq_conta and b.nr_sequencia		= c.nr_seq_conta and a.nr_sequencia		= d.nr_seq_lote_pgto and e.nr_sequencia		= b.nr_seq_protocolo  and x.nr_seq_prestador	= d.nr_seq_prestador_pgto and x.nr_seq_lote		= d.nr_seq_lote_pgto and d.ie_situacao 		= 'I' and coalesce(x.nr_lote_contabil_cancel,0) = 0 and x.dt_cancelamento between dt_ref_inicial_w and dt_ref_final_w and (coalesce(a.nr_lote_contabil,0) <> 0
	or	(a.ie_status		= 'D'
	and	((ie_data_lote_prod_med_w = 'T'
	and (a.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w
	or (exists (select	1
			from	pls_periodo_pagamento x
			where	x.nr_sequencia = a.nr_seq_periodo
			and	ie_recurso_proprio = 'S')
		and	a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w)))
	or (ie_data_lote_prod_med_w = 'C'
	and	a.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w))
	and	a.nr_sequencia		= coalesce(nr_lote_param_w,a.nr_sequencia)
	and (exists (select	1
			from 	lote_contabil_param_item b
			where	b.nr_documento		= a.nr_sequencia
			and	b.nr_lote_contabil	= nr_lote_contabil_p) 
		or (qt_lote_prod_w = 0)))) and a.cd_estabelecimento = cd_estabelecimento_w
	 
union all

	select	'P' ie_proc_mat, /*Procedimento*/
		c.nr_sequencia nr_seq_item,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_deb  ELSE d.cd_conta_deb END  cd_conta_contabil_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_ajuste_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_cred  ELSE d.cd_conta_cred END  cd_conta_contabil_cred,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_ajuste_cred,	
		coalesce(d.vl_liberado,0) vl_contabil,
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  a.dt_geracao_titulo  ELSE fim_mes(a.dt_mes_competencia) END ) dt_movimento,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico  ELSE d.cd_historico END  cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		c.cd_procedimento,
		c.ie_origem_proced,
		null nr_seq_material,
		null cd_tributo,
		null nr_seq_lote,
		a.nr_sequencia nr_seq_pp_lote,
		a.dt_mes_competencia,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa, /* Se nao for esquema contabil, tem que inverter debito e credito */
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se nao for esquema contabil, tem que inverter debito e credito */
		coalesce(d.vl_glosa,0) vl_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter,
		c.cd_conta_cred_tx_inter_glosa,
		c.cd_historico_tx_inter cd_historico_tx_inter,
		c.cd_historico_tx_inter_glosa cd_historico_tx_inter_glosa,
		(coalesce(c.vl_lib_taxa_co,0) + coalesce(c.vl_lib_taxa_material,0) + coalesce(c.vl_lib_taxa_servico,0)) vl_tx_intercambio,
		(coalesce(c.vl_glosa_taxa_co,0) + coalesce(c.vl_glosa_taxa_material,0) + coalesce(c.vl_glosa_taxa_servico,0)) vl_tx_intercambio_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico_ajuste  ELSE d.cd_historico_vl_ajuste END  cd_historico_vl_ajuste,
		d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
		null nr_nota_fiscal,
		d.nr_sequencia nr_seq_conta_resumo,
		b.nr_seq_plano,
		b.nr_seq_prestador nr_seq_prestador_solic,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		e.nr_seq_prestador nr_seq_prestador_atend,
		d.nr_seq_prestador_pgto,
		d.nm_prestador_pgto,
		p.ie_tipo_relacao,
		null nr_id_lote_pag,
		c.oid nr_id_proc_mat,
		null nr_id_pag_prest,
		'N' ie_estorno,
		i.nr_lote_contabil,
		b.nr_seq_protocolo nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico
	FROM pls_pp_item_lote i, pls_protocolo_conta e, pls_conta_proc c, pls_conta b, pls_pp_lote a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_proc and b.nr_sequencia		= c.nr_seq_conta and b.nr_sequencia		= d.nr_seq_conta and d.nr_sequencia		= i.nr_seq_resumo and b.nr_sequencia		= i.nr_seq_conta and a.nr_sequencia		= i.nr_seq_lote and e.nr_sequencia		= b.nr_seq_protocolo  and i.nr_lote_contabil 	= nr_lote_contabil_p and ((d.ie_situacao = 'A') or (coalesce(d.ie_situacao::text, '') = ''))	
	 
union all

	select	'M' ie_proc_mat, /*Material*/
		c.nr_sequencia nr_seq_item,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_deb  ELSE d.cd_conta_deb END  cd_conta_contabil_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_deb  ELSE d.cd_conta_prov_deb END  cd_conta_ajuste_deb,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_cred  ELSE d.cd_conta_cred END  cd_conta_contabil_cred,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_conta_provisao_cred  ELSE d.cd_conta_prov_cred END  cd_conta_ajuste_cred,	
		coalesce(d.vl_liberado,0) vl_contabil,
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  a.dt_geracao_titulo  ELSE fim_mes(a.dt_mes_competencia) END ) dt_movimento,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico  ELSE d.cd_historico END  cd_historico,
		b.nr_sequencia nr_seq_conta,
		b.nr_seq_segurado,
		b.nr_seq_prot_conta,
		null cd_procedimento,
		null ie_origem_proced,
		c.nr_seq_material,
		null cd_tributo,
		null nr_seq_lote,
		a.nr_sequencia nr_seq_pp_lote,
		a.dt_mes_competencia,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_deb  ELSE c.cd_conta_glosa_cred END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_deb  ELSE d.cd_conta_glosa_cred END  END  cd_conta_glosa, /* Se nao for esquema contabil, tem que inverter debito e credito */
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN 			CASE WHEN ie_esquema_contabil_w='S' THEN c.cd_conta_glosa_cred  ELSE c.cd_conta_glosa_deb END   ELSE CASE WHEN ie_esquema_contabil_w='S' THEN d.cd_conta_glosa_cred  ELSE d.cd_conta_glosa_deb END  END  cd_conta_glosa_cred, /* Se nao for esquema contabil, tem que inverter debito e credito */
		coalesce(d.vl_glosa,0) vl_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN c.cd_historico_glosa  ELSE d.cd_historico_glosa END  cd_historico_glosa,
		c.cd_conta_deb_tx_inter,
		c.cd_conta_deb_tx_inter_glosa,
		c.cd_conta_cred_tx_inter,
		c.cd_conta_cred_tx_inter_glosa,
		c.cd_historico_tx_inter cd_historico_tx_inter,
		c.cd_historico_tx_inter_glosa cd_historico_tx_inter_glosa,
		coalesce(c.vl_taxa_material,0) vl_tx_intercambio,
		coalesce(c.vl_glosa_taxa_material,0) vl_tx_intercambio_glosa,
		CASE WHEN coalesce(d.nr_seq_esquema,0)=0 THEN  c.cd_historico_ajuste  ELSE d.cd_historico_vl_ajuste END  cd_historico_vl_ajuste,
		d.vl_liberado - CASE WHEN coalesce(d.vl_apresentado,0)=0 THEN coalesce(d.vl_calculado,0)  ELSE coalesce(d.vl_apresentado,0) END  vl_ajuste,
		c.nr_nota_fiscal,
		d.nr_sequencia nr_seq_conta_resumo,
		b.nr_seq_plano,
		b.nr_seq_prestador nr_seq_prestador_solic,
		b.nr_seq_prestador_exec nr_seq_prestador_exec,
		e.nr_seq_prestador nr_seq_prestador_atend,
		d.nr_seq_prestador_pgto,
		d.nm_prestador_pgto,
		p.ie_tipo_relacao,
		null nr_id_lote_pag,
		c.oid nr_id_proc_mat,
		null nr_id_pag_prest,
		'N' ie_estorno,
		i.nr_lote_contabil,
		b.nr_seq_protocolo nr_seq_doc_orig,
		b.nr_sequencia nr_seq_doc_compl,
		d.nr_sequencia nr_doc_analitico
	FROM pls_pp_item_lote i, pls_protocolo_conta e, pls_conta_mat c, pls_conta b, pls_pp_lote a, pls_conta_medica_resumo d
LEFT OUTER JOIN pls_prestador p ON (d.nr_seq_prestador_pgto = p.nr_sequencia)
WHERE c.nr_sequencia		= d.nr_seq_conta_mat and b.nr_sequencia		= c.nr_seq_conta and b.nr_sequencia		= d.nr_seq_conta and d.nr_sequencia		= i.nr_seq_resumo and b.nr_sequencia		= i.nr_seq_conta and a.nr_sequencia		= i.nr_seq_lote and e.nr_sequencia		= b.nr_seq_protocolo  and i.nr_lote_contabil 	= nr_lote_contabil_p and ((d.ie_situacao = 'A') or (coalesce(d.ie_situacao::text, '') = ''));
	
type		fetch_array2 is table of c_pagamento%ROWTYPE;
s_array2	fetch_array2;
i2		integer := 1;
type Vetor2 is table of fetch_array2 index by integer;
Vetor_pagamento_w			Vetor2;

c_tipo_movimento CURSOR FOR
	SELECT	'C'
	
	
union

	SELECT	'G'
	
	where	ie_status_prov_pagto_w <> 'F'
	
union

	select	'TC'
	
	where	qt_esquema_tx_inter_w > 0
	
union

	select	'TG'
	
	where	qt_esquema_tx_inter_w > 0
	
union

	select	'A'
	
	where	ie_lote_ajuste_prod_w = 'R'
	and	vl_ajuste_w > 0;

c_evento is CURSOR
	with 	lote_contabil_parametro_w as (	SELECT	coalesce(x.nr_documento,y.vl_parametro) nr_documento
						FROM lote_contabil_parametro y
LEFT OUTER JOIN lote_contabil_param_item x ON (y.nr_lote_contabil = x.nr_lote_contabil AND y.nr_seq_parametro = x.nr_seq_parametro)
WHERE y.nr_lote_contabil	= nr_lote_contabil_p and y.nr_seq_parametro	= 1 )
	SELECT	a.nr_sequencia,
		a.cd_conta_credito,
		a.cd_conta_debito,
		coalesce(a.vl_movimento,0),
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  c.dt_geracao_titulos  ELSE fim_mes(b.dt_competencia) END ),
		a.cd_historico,
		a.nr_seq_prestador,
		a.nr_seq_evento,
		a.nr_seq_lote_pgto,
		b.nr_seq_lote_pgto_apropr,
		'PLS_EVENTO_MOVIMENTO' nm_tabela,
		'VL_MOVIMENTO' nm_atributo,
		a.cd_centro_custo,
		c.nr_sequencia,
		null nr_seq_pp_lote,
		a.oid nr_id_evento_mov,
		c.oid nr_id_lote_pag,
		c.nr_lote_contabil,
		'S' ie_atualiza_lote_pag,
		c.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		a.nr_sequencia nr_doc_analitico
	from	pls_evento_movimento	a,
		pls_lote_evento		b,
		pls_lote_pagamento 	c,
		pls_periodo_pagamento  	x,
		lote_contabil_parametro_w h
	where	b.nr_sequencia		= a.nr_seq_lote
	and	c.nr_sequencia		= a.nr_seq_lote_pgto
	and	c.nr_seq_periodo	= x.nr_sequencia
	and	coalesce(b.nr_seq_lote_pgto_apropr,0) = 0
	and	coalesce(b.nr_seq_lote_ret_trib,0)	= 0
	and	coalesce(a.nr_lote_contabil,0)	= 0
	and	c.ie_status		= 'D'
	and	((ie_data_lote_prod_med_w = 'T' AND ie_recurso_proprio = 'N' AND c.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w)
	or	(((ie_data_lote_prod_med_w = 'C') or (x.ie_recurso_proprio = 'S'))
	and (c.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w)))
	and	c.nr_sequencia		= coalesce(h.nr_documento,c.nr_sequencia)
	and	b.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	a.nr_sequencia,
		a.cd_conta_credito,
		a.cd_conta_debito,
		coalesce(a.vl_movimento,0),
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  c.dt_geracao_titulos  ELSE fim_mes(b.dt_competencia) END ),
		a.cd_historico,
		a.nr_seq_prestador,
		a.nr_seq_evento,
		a.nr_seq_lote_pgto,
		b.nr_seq_lote_pgto_apropr,
		'PLS_EVENTO_MOVIMENTO' nm_tabela,
		'VL_MOVIMENTO' nm_atributo,
		a.cd_centro_custo,
		c.nr_sequencia,
		null nr_seq_pp_lote,
		a.oid nr_id_evento_mov,
		c.oid nr_id_lote_pag,
		c.nr_lote_contabil,
		'S' ie_atualiza_lote_pag,
		c.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		a.nr_sequencia nr_doc_analitico
	from	pls_evento_movimento	a,
		pls_lote_evento		b,
		pls_lote_pagamento 	c,
		pls_periodo_pagamento  	x,
		lote_contabil_parametro_w h
	where	b.nr_sequencia		= a.nr_seq_lote
	and	c.nr_sequencia		= b.nr_seq_pgto_desc_liq
	and	c.nr_seq_periodo	= x.nr_sequencia
	and	coalesce(b.nr_seq_lote_pgto_apropr,0) = 0
	and	coalesce(b.nr_seq_lote_ret_trib,0)	= 0
	and	coalesce(a.nr_lote_contabil,0)	= 0
	and	c.ie_status		= 'D'
	and	((ie_data_lote_prod_med_w = 'T' AND ie_recurso_proprio = 'N' AND c.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w)
	or	(((ie_data_lote_prod_med_w = 'C') or (x.ie_recurso_proprio = 'S'))
	and (c.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w)))
	and	c.nr_sequencia		= coalesce(h.nr_documento,c.nr_sequencia)
	and	coalesce(a.nr_seq_lote_pgto, 0) 	= 0
	and	b.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	a.nr_sequencia,
		a.cd_conta_credito,
		a.cd_conta_debito,
		coalesce(a.vl_movimento,0) * (-1),
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  c.dt_geracao_titulos  ELSE fim_mes(b.dt_competencia) END ),
		a.cd_historico,
		a.nr_seq_prestador,
		a.nr_seq_evento,
		a.nr_seq_lote_pgto,
		b.nr_seq_lote_pgto_apropr,
		'PLS_EVENTO_MOVIMENTO' nm_tabela,
		'VL_MOVIMENTO' nm_atributo,
		a.cd_centro_custo,
		c.nr_sequencia,
		null nr_seq_pp_lote,
		a.oid nr_id_evento_mov,
		c.oid nr_id_lote_pag,
		c.nr_lote_contabil,
		'S' ie_atualiza_lote_pag,
		c.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		a.nr_sequencia nr_doc_analitico
	from	pls_evento_movimento	a,
		pls_lote_evento		b,
		pls_lote_pagamento 	c,
		pls_periodo_pagamento  	x,
		lote_contabil_parametro_w h
	where	b.nr_sequencia		= a.nr_seq_lote
	and	c.nr_sequencia		= b.nr_seq_lote_pgto_apropr
	and	c.nr_seq_periodo	= x.nr_sequencia
	and	coalesce(b.nr_seq_lote_ret_trib,0)	= 0
	and	coalesce(a.nr_lote_contabil,0)	= 0
	and	c.ie_status		= 'D'
	and	((ie_data_lote_prod_med_w = 'T' AND ie_recurso_proprio = 'N' AND c.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w)
	or	(((ie_data_lote_prod_med_w = 'C') or (x.ie_recurso_proprio = 'S'))
	and (c.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w)))
	and	c.nr_sequencia		= coalesce(h.nr_documento,c.nr_sequencia)
	and	b.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	a.nr_sequencia,
		a.cd_conta_credito,
		a.cd_conta_debito,
		coalesce(a.vl_movimento,0) * (-1),
		trunc(b.dt_competencia),
		a.cd_historico,
		a.nr_seq_prestador,
		a.nr_seq_evento,
		a.nr_seq_lote_pgto,
		b.nr_seq_lote_pgto_apropr,
		'PLS_EVENTO_MOVIMENTO' nm_tabela,
		'VL_MOVIMENTO' nm_atributo,
		a.cd_centro_custo,
		b.nr_sequencia,
		null nr_seq_pp_lote,
		a.oid nr_id_evento_mov,
		null nr_id_lote_pag,
		null nr_lote_contabil,
		'N' ie_atualiza_lote_pag,
		b.nr_sequencia nr_seq_tab_orig,
		a.nr_sequencia nr_seq_tab_compl,
		b.nr_seq_lote_ret_trib nr_doc_analitico
	from	pls_evento_movimento	a,
		pls_lote_evento		b
	where	b.nr_sequencia		= a.nr_seq_lote
	and	b.dt_competencia between dt_ref_inicial_w and dt_ref_final_w
	and	coalesce(b.nr_seq_lote_ret_trib,0)	<> 0
	and	coalesce(a.nr_lote_contabil,0)	= 0
	and	b.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	i.nr_sequencia,
		i.cd_conta_credito,
		i.cd_conta_debito,
		coalesce(i.vl_item,0) vl_item,  /*Contabilizar os valores dos itens, conforme o lancamento no pagamento de producao medica*/
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  l.dt_geracao_titulo  ELSE fim_mes(l.dt_mes_competencia) END ),
		i.cd_historico,
		p.nr_sequencia nr_seq_prestador,
		e.nr_sequencia nr_seq_evento,
		null nr_seq_lote_pgto,
		null,
		'PLS_PP_ITEM_LOTE' nm_tabela,
		'VL_ITEM' nm_atributo,
		coalesce(i.cd_centro_custo,z.cd_centro_custo) cd_centro_custo,
		l.nr_sequencia,
		l.nr_sequencia nr_seq_pp_lote,
		null nr_id_evento_mov,
		null nr_id_lote_pag,
		i.nr_lote_contabil,
		'S' ie_atualiza_lote_pag,
		l.nr_sequencia nr_seq_tab_orig,
		e.nr_sequencia nr_seq_tab_compl,
		i.nr_sequencia nr_doc_analitico
	FROM pls_prestador p, pls_pp_lote l, pls_evento e, pls_pp_item_lote i
LEFT OUTER JOIN pls_pp_lanc_programado z ON (i.nr_seq_lanc_prog = z.nr_sequencia)
WHERE l.nr_sequencia		= i.nr_seq_lote and p.nr_sequencia		= i.nr_seq_prestador and e.nr_sequencia		= i.nr_seq_evento and i.nr_lote_contabil	= nr_lote_contabil_p  and e.ie_tipo_evento	= 'F'
	
union all

	select	i.nr_sequencia,
		i.cd_conta_credito,
		i.cd_conta_debito,
		coalesce(i.vl_acao_negativo,0) * -1 vl_item, /*Contabilizar as apropriacoes para o proximo pagamento, invertendo as contas de debito e credito*/
		trunc(CASE WHEN ie_data_lote_prod_med_w='T' THEN  l.dt_geracao_titulo  ELSE fim_mes(l.dt_mes_competencia) END ),
		i.cd_historico,
		p.nr_sequencia nr_seq_prestador,
		e.nr_sequencia nr_seq_evento,
		null nr_seq_lote_pgto,
		null,
		'PLS_PP_ITEM_LOTE' nm_tabela,
		'VL_ITEM' nm_atributo,
		coalesce(i.cd_centro_custo,z.cd_centro_custo) cd_centro_custo,
		l.nr_sequencia,
		l.nr_sequencia nr_seq_pp_lote,
		null nr_id_evento_mov,
		null nr_id_lote_pag,
		i.nr_lote_contabil,
		'S' ie_atualiza_lote_pag,
		l.nr_sequencia nr_seq_tab_orig,
		e.nr_sequencia nr_seq_tab_compl,
		i.nr_sequencia nr_doc_analitico
	FROM pls_prestador p, pls_pp_lote l, pls_evento e, pls_pp_item_lote i
LEFT OUTER JOIN pls_pp_lanc_programado z ON (i.nr_seq_lanc_prog = z.nr_sequencia)
WHERE l.nr_sequencia		= i.nr_seq_lote and p.nr_sequencia		= i.nr_seq_prestador and e.nr_sequencia		= i.nr_seq_evento and i.nr_lote_contabil	= nr_lote_contabil_p  and e.ie_tipo_evento	= 'F' and coalesce(i.vl_acao_negativo,0) <> 0;

c_tributo is CURSOR
	with 	lote_contabil_parametro_w as (	SELECT	coalesce(x.nr_documento,y.vl_parametro) nr_documento
						FROM lote_contabil_parametro y
LEFT OUTER JOIN lote_contabil_param_item x ON (y.nr_lote_contabil = x.nr_lote_contabil AND y.nr_seq_parametro = x.nr_seq_parametro)
WHERE y.nr_lote_contabil	= nr_lote_contabil_p and y.nr_seq_parametro	= 1 )
	SELECT	a.nr_sequencia,
		a.cd_conta_deb,
		a.cd_conta_cred,
		a.vl_imposto,
		trunc(CASE WHEN ie_data_trib_prod_med_w='VE' THEN  			fim_mes(a.dt_imposto) WHEN ie_data_trib_prod_med_w='VT' THEN  b.dt_vencimento  ELSE CASE WHEN ie_data_lote_prod_med_w='T' THEN  e.dt_geracao_titulos  ELSE fim_mes(e.dt_mes_competencia) END  END ),
		a.cd_historico,
		a.cd_tributo,
		e.nr_sequencia nr_seq_lote,
		null nr_seq_pp_lote,
		e.dt_mes_competencia,
		null nr_tit_pagar_origem,
		null nr_tit_receber_origem,
		null nr_adiant_pago_origem,
		b.nr_titulo,
		b.nr_titulo_receber,
		obter_desc_tributo(a.cd_tributo) ds_tributo,
		'PLS_PAG_PREST_VENC_TRIB' nm_tabela,
		'VL_IMPOSTO' nm_atributo,
		d.nr_seq_prestador,
		null nr_seq_evento,		
		null cd_centro_custo,
		a.oid nr_id_trib,
		e.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		a.nr_sequencia nr_doc_analitico
	from	pls_pag_prest_venc_trib		a,
		pls_pag_prest_vencimento	b,
		pls_pagamento_prestador		d,
		pls_lote_pagamento		e,
		pls_periodo_pagamento  		x,
		lote_contabil_parametro_w 	h
	where	b.nr_sequencia	= a.nr_seq_vencimento
	and	d.nr_sequencia	= b.nr_seq_pag_prestador
	and	e.nr_sequencia	= d.nr_seq_lote
	and	e.nr_seq_periodo = x.nr_sequencia
	and	a.ie_pago_prev	!= 'R'
	and	not exists (	select	1
				from 	pls_pag_item_trib       x,
					pls_pagamento_item      y
				where	y.nr_sequencia		= x.nr_seq_pagamento
				and	a.nr_sequencia		= x.nr_seq_venc_trib
				and	d.nr_sequencia		= y.nr_seq_pagamento )
	and	coalesce(a.nr_lote_contabil,0)	= 0
	and	((ie_data_trib_prod_med_w = 'VE'
	and (a.dt_imposto between dt_ref_inicial_w and dt_ref_final_w))
	or (ie_data_trib_prod_med_w = 'VT'
	and (b.dt_vencimento between dt_ref_inicial_w and dt_ref_final_w))
	or (ie_data_trib_prod_med_w = 'CL'
	and	e.nr_lote_contabil	= nr_lote_contabil_p))
	and	e.nr_sequencia		= coalesce(h.nr_documento,e.nr_sequencia)
	and	e.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	c.nr_sequencia,
		b.cd_conta_deb,
		b.cd_conta_cred,
		b.vl_evento,
		trunc(CASE WHEN ie_data_trib_prod_med_w='VE' THEN  			fim_mes(c.dt_imposto) WHEN ie_data_trib_prod_med_w='VT' THEN  d.dt_vencimento  ELSE CASE WHEN ie_data_lote_prod_med_w='T' THEN  f.dt_geracao_titulos  ELSE fim_mes(f.dt_mes_competencia) END  END ),
		b.cd_historico,
		c.cd_tributo,
		f.nr_sequencia nr_seq_lote,
		null nr_seq_pp_lote,
		f.dt_mes_competencia,
		null nr_tit_pagar_origem,
		null nr_tit_receber_origem,
		null nr_adiant_pago_origem,
		d.nr_titulo,
		d.nr_titulo_receber,
		obter_desc_tributo(c.cd_tributo) ds_tributo,
		'PLS_PAG_PREST_VENC_TRIB' nm_tabela,
		'VL_IMPOSTO' nm_atributo,
		e.nr_seq_prestador,
		a.nr_seq_evento,
		b.cd_centro_custo,
		c.oid nr_id_trib,
		e.nr_sequencia nr_seq_tab_orig,
		b.nr_sequencia nr_seq_tab_compl,
		a.nr_sequencia nr_doc_analitico
	from	pls_pagamento_item 		a,
		pls_pag_item_trib 		b,
		pls_pag_prest_venc_trib		c,
		pls_pag_prest_vencimento	d,
		pls_pagamento_prestador		e,
		pls_lote_pagamento		f,
		pls_periodo_pagamento  		x,
		lote_contabil_parametro_w 	h
	where	a.nr_sequencia	= b.nr_seq_pagamento
	and	c.nr_sequencia	= b.nr_seq_venc_trib
	and	d.nr_sequencia	= c.nr_seq_vencimento
	and	e.nr_sequencia	= d.nr_seq_pag_prestador
	and	f.nr_sequencia	= e.nr_seq_lote
	and	e.nr_sequencia	= a.nr_seq_pagamento
	and	f.nr_seq_periodo = x.nr_sequencia
	and	c.ie_pago_prev	!= 'R'
	and	coalesce(c.nr_lote_contabil,0)	= 0
	and	((ie_data_trib_prod_med_w = 'VE'
	and (c.dt_imposto between dt_ref_inicial_w and dt_ref_final_w))
	or (ie_data_trib_prod_med_w = 'VT'
	and (d.dt_vencimento between dt_ref_inicial_w and dt_ref_final_w))
	or	((ie_data_trib_prod_med_w = 'CL')
	and	((ie_data_lote_prod_med_w = 'T' AND x.ie_recurso_proprio = 'N' AND f.dt_geracao_titulos between dt_ref_inicial_w and dt_ref_final_w)
	or	(((ie_data_lote_prod_med_w = 'C') or (x.ie_recurso_proprio = 'S'))
	and (f.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w)))))
	and	f.nr_sequencia		= coalesce(h.nr_documento,f.nr_sequencia)
	and	f.cd_estabelecimento = cd_estabelecimento_w
	
union all

	select	r.nr_sequencia,
		r.cd_conta_debito,
		r.cd_conta_credito,
		r.vl_tributo,
		trunc(CASE WHEN ie_data_trib_prod_med_w='VE' THEN fim_mes(b.dt_competencia) WHEN ie_data_trib_prod_med_w='T' THEN l.dt_geracao_titulo  ELSE fim_mes(l.dt_mes_competencia) END ),	
		r.cd_historico,
		r.cd_tributo,
		l.nr_sequencia nr_seq_lote,
		l.nr_sequencia nr_seq_pp_lote,
		l.dt_mes_competencia,
		null nr_tit_pagar_origem,
		null nr_tit_receber_origem,
		null nr_adiant_pago_origem,
		t.nr_titulo_pagar nr_titulo,
		t.nr_titulo_receber,
		obter_desc_tributo(r.cd_tributo) ds_tributo,
		'PLS_PP_BASE_ATUAL_TRIB' nm_tabela,
		'VL_TRIBUTO' nm_atributo,
		p.nr_sequencia nr_seq_prestador,
		i.nr_seq_evento,
		r.cd_centro_custo,
		null nr_id_trib,
		l.nr_sequencia nr_seq_tab_orig,
		i.nr_sequencia nr_seq_tab_compl,
		r.nr_sequencia nr_doc_analitico
	from	pls_pp_base_atual_trib		r,
		pls_pp_valor_trib_pessoa 	b,
		pls_pp_item_lote		i,
		pls_pp_lote			l,
		pls_pp_prestador		t,
		pls_prestador			p
	where	b.nr_sequencia		= r.nr_seq_trib_pessoa
	and	l.nr_sequencia		= r.nr_seq_lote
	and	i.nr_sequencia		= r.nr_seq_item_lote
	and	p.nr_sequencia		= b.nr_seq_prestador
	and	p.nr_sequencia		= t.nr_seq_prestador
	and	l.nr_sequencia		= t.nr_seq_lote
	and	r.nr_lote_contabil	= nr_lote_contabil_p;

c_movimento_w CURSOR FOR
	SELECT	oid
	from	w_movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

-- Variavei do c_movimento_w | cursor para limpar a tabela
type c_movimento_w_type is table of oid;
c_movimento_w_regs_w c_movimento_w_type;

c_movimento CURSOR FOR
	SELECT	oid
	from	movimento_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

-- Variavei do c_movimento | cursor para limpar a tabela
type c_movimento_type is table of oid;
c_movimento_regs_w c_movimento_type;


BEGIN
/*Validacao para impedir a geracao em lotes incorretos */

if (ie_exclusao_p <> 'S') then
        select b.cd_tipo_lote_contabil
        into STRICT cd_tipo_lote_contabil_w
        from lote_contabil b
        where b.nr_lote_contabil = nr_lote_contabil_p;
        if (cd_tipo_lote_contabil_w <> 41) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(261346);
        end if;
end if;
if (ie_exclusao_p = 'S') then
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		
	open c_movimento;
	loop
	fetch c_movimento bulk collect into c_movimento_regs_w limit 1000;

		-- Deletar em massa os registros da tabela temporaria
		forall i in c_movimento_regs_w.first .. c_movimento_regs_w.last
			delete	from movimento_contabil
			where	rowid = c_movimento_regs_w(i);

		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento */
	end loop;
	close c_movimento;
	
	update	lote_contabil
	set	vl_credito 		= 0,
		vl_debito  		= 0,
		dt_geracao_lote		 = NULL
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_conta_proc a
	set	a.nr_lote_contab_pag	 = NULL
	where	a.nr_lote_contab_pag	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_conta_mat a
	set	a.nr_lote_contab_pag	 = NULL
	where	a.nr_lote_contab_pag	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_lote_pagamento
	set	nr_lote_contabil	= 0
	where 	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_pagamento_prestador
	set	nr_lote_contabil_cancel	= 0
	where	nr_lote_contabil_cancel = nr_lote_contabil_p;
	
	commit;

	update	pls_pp_item_lote
	set	nr_lote_contabil	= 0
	where 	nr_lote_contabil	= nr_lote_contabil_p;

	commit;
	
	/* Atualizar eventos e ocorrencias financeiras */

	update	pls_lote_evento
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil 	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_evento_movimento a
	set	a.nr_lote_contabil	= 0
	where	a.nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;
	
	update	pls_pag_prest_venc_trib
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	commit;

	update	pls_pp_base_atual_trib
	set	nr_lote_contabil	= 0
	where	nr_lote_contabil	= nr_lote_contabil_p;

	commit;
	
	ds_retorno_p := ctb_pls_contab_rec_glosa(	nr_lote_contabil_p, nm_usuario_p, ie_exclusao_p, ds_retorno_p);
					
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
else

	CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
				1,
				wheb_mensagem_pck.get_texto(1097173),
				nm_usuario_p);
				
	select	trunc(dt_referencia,'month'),
		cd_estabelecimento,
		cd_tipo_lote_contabil
	into STRICT 	dt_referencia_w,
		cd_estabelecimento_w,
		cd_tipo_lote_contabil_w
	from 	lote_contabil
	where 	nr_lote_contabil 	= nr_lote_contabil_p;
	
	select	max(cd_historico_padrao)
	into STRICT	cd_historico_vl_ajuste_ww
	from	pls_esquema_contabil
	where	ie_tipo_regra = 'PM'
	and	ie_tipo_movimentacao = '18'
	and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_referencia_w);
	
	select	max(ie_provisao_producao),
		max(ie_esquema_contabil),
		max(ie_data_trib_prod_med),
		max(coalesce(ie_data_lote_prod_med,'C')),
		max(coalesce(ie_status_prov_pagto,'NC')),
		max(coalesce(ie_lote_ajuste_prod,'R'))
	into STRICT	ie_provisao_producao_w,
		ie_esquema_contabil_w,
		ie_data_trib_prod_med_w,
		ie_data_lote_prod_med_w,
		ie_status_prov_pagto_w,
		ie_lote_ajuste_prod_w
	from	pls_parametro_contabil
	where	cd_estabelecimento	= cd_estabelecimento_w;
	
	ie_data_trib_prod_med_w	:= coalesce(ie_data_trib_prod_med_w,'VE');
	
	select	max(vl_parametro)
	into STRICT	nr_lote_param_w
	from	lote_contabil_parametro a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	and	nr_seq_parametro	= 1;
	
	select	substr(max(ds_valor_parametro),1,1)
	into STRICT	ie_gera_reversao_lote_w
	from	lote_contabil_parametro a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	and	nr_seq_parametro	= 2;

	dt_referencia_mes_ant_w	:= add_months(dt_referencia_w,-1);

	dt_ref_inicial_w	:= trunc(dt_referencia_w,'dd');
	dt_ref_final_w		:= fim_dia(fim_mes(dt_referencia_w));

	dt_ref_inicial_ant_w	:= trunc(dt_referencia_mes_ant_w,'dd');
	dt_ref_final_ant_w	:= fim_dia(fim_mes(dt_referencia_mes_ant_w));
	
	select 	count(1)
	into STRICT	qt_lote_prod_w
	from	lote_contabil_param_item
	where	nr_lote_contabil	= nr_lote_contabil_p  LIMIT 1;

	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	if (ie_esquema_contabil_w = 'N') then
		begin
		
		delete	from w_pls_movimento_sem_conta
		where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
		and	dt_referencia		= dt_referencia_w;
		
		commit;
		
		end;
	end if;
	
	open c_movimento_w;
	loop
	fetch c_movimento_w bulk collect into c_movimento_w_regs_w limit 1000;

		-- Deletar em massa os registros da tabela temporaria
		forall i in c_movimento_w_regs_w.first .. c_movimento_w_regs_w.last
			delete	from w_movimento_contabil
			where	rowid = c_movimento_w_regs_w(i);

		commit;
	EXIT WHEN NOT FOUND; /* apply on c_movimento_w */
	end loop;
	close c_movimento_w;
	
	if (ie_data_lote_prod_med_w = 'T') then
		update	pls_pp_item_lote	a
		set	a.nr_lote_contabil	= nr_lote_contabil_p
		where 	coalesce(a.nr_lote_contabil,0)	= 0
		and	exists (SELECT	1
				from	pls_pp_lote	l
				where	l.nr_sequencia	= a.nr_seq_lote
				and	l.nr_sequencia		= coalesce(nr_lote_param_w, l.nr_sequencia)
				and	l.ie_status		= 'D'
				and	l.dt_geracao_titulo between dt_ref_inicial_w and dt_ref_final_w
				and	l.cd_estabelecimento = cd_estabelecimento_w
				and (exists (select	1
						from 	lote_contabil_param_item b
						where	b.nr_documento		= a.nr_sequencia
						and	b.nr_lote_contabil	= nr_lote_contabil_p)
				or (qt_lote_prod_w = 0)));
	else
		update	pls_pp_item_lote	a
		set	a.nr_lote_contabil	= nr_lote_contabil_p
		where 	coalesce(a.nr_lote_contabil,0)	= 0
		and	exists (SELECT	1
				from	pls_pp_lote	l
				where	l.nr_sequencia	= a.nr_seq_lote
				and	l.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w
				and	l.nr_sequencia		= coalesce(nr_lote_param_w, l.nr_sequencia)
				and	l.ie_status		= 'D'
				and	l.cd_estabelecimento = cd_estabelecimento_w
				and (exists (select	1
						from 	lote_contabil_param_item b
						where	b.nr_documento		= l.nr_sequencia
						and	b.nr_lote_contabil	= nr_lote_contabil_p)
					or (qt_lote_prod_w = 0)));
	end if;

	commit;
	
	if (ie_data_trib_prod_med_w = 'VE') then
		update	pls_pp_base_atual_trib	r
		set	r.nr_lote_contabil		= nr_lote_contabil_p
		where	coalesce(r.nr_lote_contabil,0)	= 0
		and	exists (
			SELECT	1
			from	pls_pp_valor_trib_pessoa 	b
			where	b.nr_sequencia		= r.nr_seq_trib_pessoa
			and	b.dt_pgto_tributo between dt_ref_inicial_w and dt_ref_final_w)
		and (exists (SELECT	1
				from 	lote_contabil_param_item	b,
					pls_pp_lote	 		x
				where	b.nr_documento		= x.nr_sequencia
				and	x.nr_sequencia		= r.nr_seq_lote
				and	b.nr_lote_contabil	= nr_lote_contabil_p)
		and (exists (select 1
				from	pls_pp_lote l
				where	l.nr_sequencia = r.nr_seq_lote
				and	l.cd_estabelecimento = cd_estabelecimento_w))
		or (qt_lote_prod_w = 0));
	else
		update	pls_pp_base_atual_trib	r
		set	r.nr_lote_contabil		= nr_lote_contabil_p
		where	coalesce(r.nr_lote_contabil,0)	= 0
		and	exists (
			SELECT	1
			from	pls_pp_lote 	b
			where	b.nr_sequencia		= r.nr_seq_lote
			and	b.dt_mes_competencia between dt_ref_inicial_w and dt_ref_final_w
			and	b.cd_estabelecimento = cd_estabelecimento_w)
		and (exists (SELECT	1
				from 	lote_contabil_param_item	b,
					pls_pp_lote	 		x
				where	b.nr_documento		= x.nr_sequencia
				and	x.nr_sequencia		= r.nr_seq_lote
				and	b.nr_lote_contabil	= nr_lote_contabil_p)
		or (qt_lote_prod_w = 0));
	end if;

	commit;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	nm_agrupador_w		:= coalesce(trim(both obter_agrupador_contabil(cd_tipo_lote_contabil_w)), 'NR_LOTE_PAGAMENTO');
	nm_agrupador_reversao_w	:= coalesce(trim(both obter_agrupador_contabil(40)), 'NR_SEQ_CONTA');
	
	begin
	ie_compl_hist_w	:= obter_se_compl_tipo_lote(cd_estabelecimento_w, cd_tipo_lote_contabil_w);
	exception
	when others then
		ie_compl_hist_w	:= 'N';
	end;
	
	select	count(1)
	into STRICT	qt_esquema_tx_inter_w
	from	pls_esquema_contabil
	where	ie_tipo_movimentacao in ('14','15')  LIMIT 1;

	select	sum(CASE WHEN ie_prestador_codificacao='P' THEN  1  ELSE 0 END ) qt_prest_pgto
	into STRICT	qt_prest_pgto_w
	from	pls_esquema_contabil
	where	ie_tipo_regra		= 'PM'
	and	ie_tipo_movimentacao	!= '13'
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_referencia_w);
	
	nr_seq_w_movto_cont_w	:= 0;
	qt_commit_w		:= 0;
	
	if (coalesce(ie_provisao_producao_w,'N') = 'S') then
		open c_reversao_provisao;
		loop
		fetch c_reversao_provisao bulk collect into s_array limit 1000;
			Vetor_reversao_provisao_w(i)	:= s_array;
			i				:= i + 1;
		EXIT WHEN NOT FOUND; /* apply on c_reversao_provisao */
		end loop;
		close c_reversao_provisao;
		
		for i in 1..Vetor_reversao_provisao_w.count loop
			begin
			s_array := Vetor_reversao_provisao_w(i);
			for z in 1..s_array.count loop
				begin
				ie_debito_credito_w		:= s_array[z].ie_debito_credito;
				ie_proc_mat_w			:= s_array[z].ie_proc_mat;
				nr_seq_item_w			:= s_array[z].nr_seq_item;
				cd_conta_contabil_w		:= s_array[z].cd_conta_contabil;
				vl_contabil_w			:= s_array[z].vl_provisao;
				cd_historico_w			:= s_array[z].cd_historico;
				nr_seq_conta_w			:= s_array[z].nr_seq_conta;
				nr_seq_segurado_w		:= s_array[z].nr_seq_segurado;
				cd_procedimento_w		:= s_array[z].cd_procedimento;
				ie_origem_proced_w		:= s_array[z].ie_origem_proced;
				nr_seq_material_w		:= s_array[z].nr_seq_material;
				nr_nota_fiscal_mat_w		:= s_array[z].nr_nota_fiscal;
				nm_tabela_w			:= s_array[z].nm_tabela;
				nm_atributo_w			:= s_array[z].nm_atributo;
				nr_seq_info_ctb_w		:= s_array[z].nr_seq_info_ctb;
				nr_seq_plano_w			:= s_array[z].nr_seq_plano;
				nr_seq_tab_orig_w		:= s_array[z].nr_seq_doc_orig;
				nr_seq_tab_compl_w		:= s_array[z].nr_seq_doc_compl;
				nr_doc_analitico_w		:= s_array[z].nr_doc_analitico;
				
				cd_centro_custo_w	:= null;
				ds_compl_historico_w	:= null;
				ds_item_w		:= null;
				
				nr_seq_evento_w		:= null;
				ds_evento_w		:= null;
				
				if (substr(ie_proc_mat_w,1,1) = 'P') then
					update	pls_conta_proc
					set	nr_lote_contabil_rev	= nr_lote_contabil_p
					where	nr_sequencia		= nr_seq_item_w;
					
					commit;
				elsif (substr(ie_proc_mat_w,1,1) = 'M') then
					update	pls_conta_mat
					set	nr_lote_contabil_rev	= nr_lote_contabil_p
					where	nr_sequencia		= nr_seq_item_w;
					
					commit;
				end if;
				
				select	a.nr_seq_protocolo,
					a.nr_seq_prestador_exec
				into STRICT	nr_seq_protocolo_w,
					nr_seq_prestador_w
				from	pls_conta a
				where	nr_sequencia	= nr_seq_conta_w;
				
				if (nm_agrupador_reversao_w = 'NR_SEQ_CONTA') then
					nr_seq_agrupamento_w	:= nr_seq_conta_w;
				elsif (nm_agrupador_reversao_w = 'NR_SEQ_PROTOCOLO') then
					nr_seq_agrupamento_w	:= nr_seq_protocolo_w;
				end if;
				
				if (coalesce(cd_conta_contabil_w::text, '') = '') then
					if (substr(ie_proc_mat_w,1,1) = 'P') then
						ie_tipo_item_w	:= 'PCM';
						
						begin
						select	x.ds_procedimento
						into STRICT	ds_item_w
						from	procedimento x
						where	cd_procedimento		= cd_procedimento_w
						and	ie_origem_proced	= ie_origem_proced_w;
						exception
						when others then
							ds_item_w	:= null;
						end;
						
						if (coalesce(ds_item_w::text, '') = '') then
							begin
							select	x.ds_procedimento
							into STRICT	ds_item_w
							from	procedimento x
							where	cd_procedimento		= cd_procedimento_w;
							exception
							when others then
								ds_item_w	:= null;
							end;
						end if;
					else
						ie_tipo_item_w := 'MCM';
						
						begin
						select	substr(a.ds_material,1,255)
						into STRICT	ds_item_w
						from	pls_material	a
						where	a.nr_sequencia	= nr_seq_material_w;
						exception
						when others then
							ds_item_w	:= null;
						end;
					end if;
					if (ie_esquema_contabil_w = 'N') then
						begin
						
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_mvto_sem_conta_w
						;

						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							cd_tipo_lote_contabil)
						values (nr_seq_mvto_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							ie_tipo_item_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_contabil_w,
							dt_referencia_w,
							nr_lote_contabil_p,
							ie_proc_mat_w,
							ie_debito_credito_w,
							CASE WHEN substr(ie_proc_mat_w,2,1)='G' THEN 'Glosa - Reversao da provisao'  ELSE 'Reversao da provisao' END ,
							cd_tipo_lote_contabil_w);
						end;
					end if;
				else
					select	ie_centro_custo,
						cd_centro_custo
					into STRICT	ie_centro_custo_w,
						cd_centro_custo_fixo_w
					from	conta_contabil
					where	cd_conta_contabil = cd_conta_contabil_w;
					
					if (ie_centro_custo_w = 'S') then
						if (cd_centro_custo_fixo_w IS NOT NULL AND cd_centro_custo_fixo_w::text <> '') then
							cd_centro_custo_w	:= cd_centro_custo_fixo_w;
						else
							if (coalesce(nr_seq_plano_w::text, '') = '') then
								begin
								select	ie_regulamentacao,
									b.nr_sequencia
								into STRICT	ie_regulamentacao_w,
									nr_seq_plano_w
								from	pls_segurado a,
									pls_plano b
								where	b.nr_sequencia  = a.nr_seq_plano
								and	a.nr_sequencia	= nr_seq_segurado_w;
								exception
								when others then
									ie_regulamentacao_w	:= null;
									nr_seq_plano_w		:= null;
								end;
							else
								begin
								select	ie_regulamentacao
								into STRICT	ie_regulamentacao_w
								from	pls_plano b
								where	b.nr_sequencia  = nr_seq_plano_w;
								exception
								when others then
									ie_regulamentacao_w	:= null;
								end;
							end if;
							
							SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_w, nr_seq_regra_cc_w) INTO STRICT cd_centro_custo_w, nr_seq_regra_cc_w;
						end if;
					end if;
					
					if (ie_compl_hist_w = 'S') then
						select	count(1)
						into STRICT	qt_compl_hist_w
						from	historico_padrao_atributo
						where	cd_tipo_lote_contabil	= 40
						and	cd_historico		= cd_historico_w  LIMIT 1;
						
						if (qt_compl_hist_w > 0) then
							if (coalesce(nr_seq_prestador_w,0) > 0) then
								select	a.cd_pessoa_fisica,
									a.cd_cgc
								into STRICT	cd_pessoa_fisica_w,
									cd_cgc_prestador_w
								from	pls_prestador a
								where	a.nr_sequencia	= nr_seq_prestador_w;
								
								begin
								nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
								exception
								when others then
									nm_prestador_w	:= null;
								end;
								
								select	max(nr_cpf)
								into STRICT	cd_cpf_prestador_w
								from	pessoa_fisica
								where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
							end if;
							
							select	max(a.nr_seq_prestador_pgto),
								max(a.nm_prestador_pgto),
								max(b.cd_cgc),
								max(	select	c.nr_cpf
									from	pessoa_fisica	c
									where	c.cd_pessoa_fisica = b.cd_pessoa_fisica) nr_cpf
							into STRICT	nr_seq_prestador_pag_w,
								nm_prestador_pag_w,
								cd_cgc_prestador_pag_w,
								cd_cpf_prestador_pag_w
							from	pls_prestador		b,
								pls_conta_medica_resumo	a
							where	b.nr_sequencia = a.nr_seq_prestador_pgto
							and	a.nr_seq_conta = nr_seq_conta_w;
							
							cd_cgc_cpf_prest_pagto_w := coalesce(cd_cgc_prestador_pag_w, cd_cpf_prestador_pag_w);
							/*Caso seja necessario adicionar/retirar um campo no complemento historio, realizar procedimento nas procedures auxiliares (exemplo CTB_PLS_CONTAB_REC_GLOSA)*/

							ds_conteudo_w	:= substr(	nr_seq_prestador_w	|| '#@' ||
											nm_prestador_w 		|| '#@' ||
											nr_seq_protocolo_w	|| '#@' ||
											nr_seq_conta_w		|| '#@' ||
											cd_cgc_prestador_w	|| '#@' ||
											cd_cpf_prestador_w	|| '#@' ||
											nr_nota_fiscal_w	|| '#@' ||
											nr_seq_lote_w		|| '#@' ||
											dt_mes_competencia_w	|| '#@' ||
											nr_tit_pagar_origem_w	|| '#@' ||
											nr_tit_receber_origem_w	|| '#@' ||
											nr_adiant_pago_origem_w	|| '#@' ||
											nr_titulo_pagar_w	|| '#@' ||
											nr_titulo_receber_w	|| '#@' ||
											ds_tributo_w		|| '#@' ||
											nr_titulo_pag_trib_w	|| '#@' ||
											nr_nota_fiscal_mat_w	|| '#@' ||
											nr_seq_prestador_pag_w	|| '#@' ||
											cd_cgc_cpf_prest_pagto_w|| '#@' ||
											nm_prestador_pag_w	|| '#@' ||
											nr_seq_evento_w		|| '#@' ||
											ds_evento_w		|| '#@' ||
											null			|| '#@' ||
											null,1,4000);

							begin
							ds_compl_historico_ww	:= substr(obter_compl_historico(40, cd_historico_w, ds_conteudo_w),1,255);
							exception
							when others then
								ds_compl_historico_ww	:= null;
							end;
							
							ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
						end if;
					end if;
					
					nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
					
					insert into w_movimento_contabil(nr_lote_contabil,
						nr_sequencia,
						cd_conta_contabil,
						ie_debito_credito,
						cd_historico,
						dt_movimento,
						vl_movimento,
						cd_estabelecimento,
						cd_centro_custo,
						ds_compl_historico,
						nr_seq_agrupamento,
						nr_seq_info,
						nm_tabela,
						nm_atributo,
						nr_seq_tab_orig,
						nr_seq_tab_compl,
						nr_doc_analitico)
					values (nr_lote_contabil_p,
						nr_seq_w_movto_cont_w,
						cd_conta_contabil_w,
						ie_debito_credito_w,
						cd_historico_w,
						dt_referencia_w,
						vl_contabil_w,
						cd_estabelecimento_w,
						cd_centro_custo_w,
						ds_compl_historico_w,
						nr_seq_agrupamento_w,
						nr_seq_info_ctb_w,
						nm_tabela_w,
						nm_atributo_w,
						nr_seq_tab_orig_w,
						nr_seq_tab_compl_w,
						nr_doc_analitico_w);
						
					qt_commit_w	:= qt_commit_w + 1;
					
					if (qt_commit_w >= 5000) then
						qt_commit_w	:= 0;
						commit;
					end if;
				end if;
				end;
			end loop;
			end;
		end loop;
		
		if (Vetor_reversao_provisao_w.count > 0) then
			Vetor_reversao_provisao_w.delete;
		end if;
		
		open c_pagamento;
		loop
		fetch c_pagamento bulk collect into s_array2 limit 1000;
			for z in 1..s_array2.count loop
				begin

				ie_proc_mat_w			:= s_array2[z].ie_proc_mat;
				nr_seq_item_w			:= s_array2[z].nr_seq_item;
				vl_contabil_w			:= s_array2[z].vl_contabil;
				dt_referencia_protocolo_w	:= s_array2[z].dt_movimento;
				cd_historico_w			:= s_array2[z].cd_historico;
				nr_seq_conta_w			:= s_array2[z].nr_seq_conta;
				nr_seq_segurado_w		:= s_array2[z].nr_seq_segurado;
				nr_seq_prot_conta_w		:= s_array2[z].nr_seq_prot_conta;
				cd_procedimento_w		:= s_array2[z].cd_procedimento;
				ie_origem_proced_w		:= s_array2[z].ie_origem_proced;
				nr_seq_material_w		:= s_array2[z].nr_seq_material;
				cd_tributo_w			:= s_array2[z].cd_tributo;
				nr_seq_lote_w			:= s_array2[z].nr_seq_lote;
				nr_seq_pp_lote_w		:= s_array2[z].nr_seq_pp_lote;
				dt_mes_competencia_w		:= s_array2[z].dt_mes_competencia;
				vl_glosa_w			:= s_array2[z].vl_glosa;
				cd_historico_glosa_w		:= s_array2[z].cd_historico_glosa;
				cd_historico_tx_inter_w		:= s_array2[z].cd_historico_tx_inter;
				cd_historico_tx_inter_glosa_w	:= s_array2[z].cd_historico_tx_inter_glosa;
				vl_tx_intercambio_w		:= s_array2[z].vl_tx_intercambio;
				vl_tx_intercambio_glosa_w	:= s_array2[z].vl_tx_intercambio_glosa;
				cd_historico_vl_ajuste_w	:= s_array2[z].cd_historico_vl_ajuste;
				vl_ajuste_w			:= s_array2[z].vl_ajuste;
				nr_nota_fiscal_mat_w		:= s_array2[z].nr_nota_fiscal;
				nr_seq_conta_resumo_w		:= s_array2[z].nr_seq_conta_resumo;
				nr_seq_plano_w			:= s_array2[z].nr_seq_plano;
				nr_seq_prestador_pag_w		:= s_array2[z].nr_seq_prestador_pgto;
				nr_seq_prestador_exec_w		:= s_array2[z].nr_seq_prestador_exec;
				nr_seq_prestador_solic_w	:= s_array2[z].nr_seq_prestador_solic;
				nr_seq_prestador_atend_w	:= s_array2[z].nr_seq_prestador_atend;
				nm_prestador_pag_w		:= s_array2[z].nm_prestador_pgto;
				cd_conta_contabil_deb_w		:= s_array2[z].cd_conta_contabil_deb;
				cd_conta_contabil_cred_w	:= s_array2[z].cd_conta_contabil_cred;
				cd_conta_glosa_deb_w		:= s_array2[z].cd_conta_glosa_deb;
				cd_conta_glosa_cred_w		:= s_array2[z].cd_conta_glosa_cred;
				cd_conta_deb_tx_inter_w		:= s_array2[z].cd_conta_deb_tx_inter;
				cd_conta_cred_tx_inter_w	:= s_array2[z].cd_conta_cred_tx_inter;
				cd_conta_deb_tx_inter_glosa_w	:= s_array2[z].cd_conta_deb_tx_inter_glosa;
				cd_conta_cred_tx_inter_glosa_w	:= s_array2[z].cd_conta_cred_tx_inter_glosa;
				cd_conta_ajuste_deb_w		:= s_array2[z].cd_conta_ajuste_deb;
				cd_conta_ajuste_cred_w		:= s_array2[z].cd_conta_ajuste_cred;
				ie_tipo_relacao_w		:= s_array2[z].ie_tipo_relacao;
				nr_id_lote_pag_w		:= s_array2[z].nr_id_lote_pag;
				nr_id_pag_prest_w		:= s_array2[z].nr_id_pag_prest;				
				ie_estorno_w			:= s_array2[z].ie_estorno;
				nr_lote_contab_pag_w		:= s_array2[z].nr_lote_contabil;
				nr_seq_tab_orig_w		:= s_array2[z].nr_seq_doc_orig;
				nr_seq_tab_compl_w		:= s_array2[z].nr_seq_doc_compl;
				nr_doc_analitico_w		:= s_array2[z].nr_doc_analitico;
				
				nr_id_proc_mat_w		:= s_array2[z].nr_id_proc_mat;


			if (substr(ie_proc_mat_w,1,1) = 'P') then
				rowid_proc_w(rowid_proc_w.count)	:= s_array2[z].nr_id_proc_mat;
			elsif (substr(ie_proc_mat_w,1,1) = 'M') then
				rowid_mat_w(rowid_mat_w.count)		:= s_array2[z].nr_id_proc_mat;
			end if;
			
				nr_seq_evento_w			:= null;
				ds_evento_w			:= null;
				ie_pagamento_novo_w		:= 'N';

				if (coalesce(nr_seq_pp_lote_w,0) <> 0) then
					nr_seq_lote_w		:= nr_seq_pp_lote_w;
					ie_pagamento_novo_w	:= 'S';
				end if;
				
				if (coalesce(cd_historico_vl_ajuste_w,0) = 0) then
					cd_historico_vl_ajuste_w := cd_historico_vl_ajuste_ww;
				end if;
				
				if (nm_agrupador_w = 'NR_SEQ_CONTA') then
					nr_seq_agrupamento_w	:= nr_seq_conta_w;
				elsif (nm_agrupador_w = 'NR_LOTE_PAGAMENTO') then
					nr_seq_agrupamento_w	:= nr_seq_lote_w;
				end if;

				if (coalesce(nr_seq_agrupamento_w,0) = 0) then
					nr_seq_agrupamento_w	:= nr_seq_lote_w;
				end if;
				
				open c_tipo_movimento;
				loop
				fetch c_tipo_movimento into
					ie_movimento_w;
				EXIT WHEN NOT FOUND; /* apply on c_tipo_movimento */
					begin
					cd_centro_custo_deb_w	:= null;
					cd_centro_custo_cred_w	:= null;
					ds_compl_historico_w	:= null;
					ds_item_w		:= null;
					
					if (ie_movimento_w = 'A' and ie_estorno_w = 'S') then
						vl_ajuste_w := vl_ajuste_w * -1;
					end if;

					if (ie_movimento_w = 'C') then /* Conta */
						cd_conta_contab_deb_w	:= cd_conta_contabil_deb_w;
						cd_conta_contab_cred_w	:= cd_conta_contabil_cred_w;
						cd_historico_contab_w	:= cd_historico_w;
						vl_contab_w		:= vl_contabil_w;
						nm_tabela_w		:= 'PLS_CONTA_MEDICA_RESUMO';
						nm_atributo_w		:= 'VL_LIBERADO';
						nr_seq_info_ctb_w	:= 36;
					elsif (ie_movimento_w = 'G') then /* Glosa */
						cd_conta_contab_deb_w	:= cd_conta_glosa_deb_w;
						cd_conta_contab_cred_w	:= cd_conta_glosa_cred_w;
						cd_historico_contab_w	:= cd_historico_glosa_w;
						vl_contab_w		:= vl_glosa_w;
						nm_tabela_w		:= 'PLS_CONTA_MEDICA_RESUMO';
						nm_atributo_w		:= 'VL_GLOSA';
						nr_seq_info_ctb_w	:= 24;
					elsif (ie_movimento_w = 'TC') then /* Taxa de intercambio */
						cd_conta_contab_deb_w	:= cd_conta_deb_tx_inter_w;
						cd_conta_contab_cred_w	:= cd_conta_cred_tx_inter_w;
						cd_historico_contab_w	:= cd_historico_tx_inter_w;
						vl_contab_w		:= vl_tx_intercambio_w;
						
						if (ie_proc_mat_w = 'P') then
							nm_tabela_w		:= 'PLS_CONTA_PROC';
						elsif (ie_proc_mat_w = 'M') then
							nm_tabela_w		:= 'PLS_CONTA_MAT';
						end if;
						
						nm_atributo_w		:= 'VL_TX_INTERCAMBIO';
						nr_seq_info_ctb_w	:= 37;
					elsif (ie_movimento_w = 'TG') then /* Taxa de intercambio - Glosa */
						cd_conta_contab_deb_w	:= cd_conta_deb_tx_inter_glosa_w;
						cd_conta_contab_cred_w	:= cd_conta_cred_tx_inter_glosa_w;
						cd_historico_contab_w	:= cd_historico_tx_inter_glosa_w;
						vl_contab_w		:= vl_tx_intercambio_glosa_w;
						
						if (ie_proc_mat_w = 'P') then
							nm_tabela_w		:= 'PLS_CONTA_PROC';
						elsif (ie_proc_mat_w = 'M') then
							nm_tabela_w		:= 'PLS_CONTA_MAT';
						end if;
						
						nm_atributo_w		:= 'VL_TX_INTERCAMBIO_GLOSA';
						nr_seq_info_ctb_w	:= 38;
					elsif (ie_movimento_w = 'A') then /* Valor de ajuste */
						cd_conta_contab_deb_w	:= cd_conta_ajuste_deb_w;
						cd_conta_contab_cred_w	:= cd_conta_ajuste_cred_w;
						cd_historico_contab_w	:= cd_historico_vl_ajuste_w;
						vl_contab_w		:= vl_ajuste_w;
						nm_tabela_w		:= 'PLS_CONTA_MEDICA_RESUMO';
						nm_atributo_w		:= 'VL_AJUSTE';
						nr_seq_info_ctb_w	:= 36;
					
					end if;
						
					if	((coalesce(cd_conta_contab_deb_w::text, '') = '') or (coalesce(cd_conta_contab_cred_w::text, '') = '')) and (ie_esquema_contabil_w = 'N') then
						if (ie_proc_mat_w = 'P') then
							ie_tipo_item_w	:= 'PCM';
							
							begin
							select	x.ds_procedimento
							into STRICT	ds_item_w
							from	procedimento x
							where	cd_procedimento	= cd_procedimento_w
							and	ie_origem_proced = coalesce(ie_origem_proced_w,ie_origem_proced);
							exception
							when others then
								ds_item_w	:= null;
							end;
						else
							ie_tipo_item_w	:= 'MCM';
							
							begin
							select	substr(a.ds_material,1,255)
							into STRICT	ds_item_w
							from	pls_material	a
							where	a.nr_sequencia	= nr_seq_material_w;
							exception
							when others then
								ds_item_w	:= null;
							end;
						end if;
						
						select	nextval('w_pls_movimento_sem_conta_seq')
						into STRICT	nr_seq_mvto_sem_conta_w
						;
						
						insert into w_pls_movimento_sem_conta(nr_sequencia,
							cd_item,
							ds_item,
							ie_tipo_item,
							dt_atualizacao,
							nm_usuario,
							vl_item,
							dt_referencia,
							nr_lote_contabil,
							ie_proc_mat_item,
							ie_deb_cred,
							ds_observacao,
							cd_tipo_lote_contabil)
						values (nr_seq_mvto_sem_conta_w,
							nr_seq_item_w,
							ds_item_w,
							ie_tipo_item_w,
							clock_timestamp(),
							nm_usuario_p,
							vl_contab_w,
							dt_referencia_w,
							nr_lote_contabil_p,
							ie_proc_mat_w,
							ie_debito_credito_w,
							CASE WHEN ie_movimento_w='G' THEN 'Glosa'  ELSE '' END ,
							cd_tipo_lote_contabil_w);
						
					elsif (coalesce(cd_conta_contab_deb_w,'X') <> 'X') and (coalesce(cd_conta_contab_cred_w,'X') <> 'X') then

						select	ie_centro_custo,
							cd_centro_custo
						into STRICT	ie_centro_custo_deb_w,
							cd_centro_custo_fixo_deb_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_contab_deb_w;
						
						select	ie_centro_custo,
							cd_centro_custo
						into STRICT	ie_centro_custo_cred_w,
							cd_centro_custo_fixo_cred_w
						from	conta_contabil
						where	cd_conta_contabil	= cd_conta_contab_cred_w;
						
						if (ie_centro_custo_deb_w = 'S') and (coalesce(cd_tributo_w::text, '') = '') then
							if (cd_centro_custo_fixo_deb_w IS NOT NULL AND cd_centro_custo_fixo_deb_w::text <> '') then
								cd_centro_custo_deb_w	:= cd_centro_custo_fixo_deb_w;
							else
								if (coalesce(nr_seq_plano_w::text, '') = '') then
									begin
									select	ie_regulamentacao,
										b.nr_sequencia
									into STRICT	ie_regulamentacao_w,
										nr_seq_plano_w
									from	pls_segurado a,
										pls_plano b
									where	b.nr_sequencia  = a.nr_seq_plano
									and	a.nr_sequencia	= nr_seq_segurado_w;
									exception
									when others then
										ie_regulamentacao_w	:= null;
										nr_seq_plano_w		:= null;
									end;
								else
									begin
									select	ie_regulamentacao
									into STRICT	ie_regulamentacao_w
									from	pls_plano b
									where	b.nr_sequencia  = nr_seq_plano_w;
									exception
									when others then
										ie_regulamentacao_w	:= null;
									end;
								end if;
								
								SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_deb_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
											null, 				--nr_seq_bonificacao_p
											null, 				--nr_seq_sca_p
											nr_seq_prestador_pag_w, nr_seq_prestador_exec_w, nr_seq_prestador_atend_w, nr_seq_prestador_solic_w, null				-- nr_seq_evento_p
											) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;

							end if;
						end if;
						
						if (ie_centro_custo_cred_w = 'S') and (coalesce(cd_tributo_w::text, '') = '') then
							if (cd_centro_custo_fixo_cred_w IS NOT NULL AND cd_centro_custo_fixo_cred_w::text <> '') then
								cd_centro_custo_cred_w	:= cd_centro_custo_fixo_cred_w;
							else
								if (coalesce(nr_seq_plano_w::text, '') = '') then
									begin
									select	ie_regulamentacao,
										b.nr_sequencia
									into STRICT	ie_regulamentacao_w,
										nr_seq_plano_w
									from	pls_segurado a,
										pls_plano b
									where	b.nr_sequencia  = a.nr_seq_plano
									and	a.nr_sequencia	= nr_seq_segurado_w;
									exception
									when others then
										ie_regulamentacao_w	:= null;
										nr_seq_plano_w		:= null;
									end;
								else
									begin
									select	ie_regulamentacao
									into STRICT	ie_regulamentacao_w
									from	pls_plano b
									where	b.nr_sequencia  = nr_seq_plano_w;
									exception
									when others then
										ie_regulamentacao_w	:= null;
									end;
								end if;
								
								SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_cred_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
											null, 				--nr_seq_bonificacao_p
											null, 				--nr_seq_sca_p
											nr_seq_prestador_pag_w, nr_seq_prestador_exec_w, nr_seq_prestador_atend_w, nr_seq_prestador_solic_w, null				-- nr_seq_evento_p
											) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
							end if;
						end if;
						
						if (ie_compl_hist_w = 'S') then
							select	count(1)
							into STRICT	qt_compl_hist_w
							from	historico_padrao_atributo
							where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
							and	cd_historico		= cd_historico_contab_w  LIMIT 1;
							
							if (qt_compl_hist_w > 0) then
								select	a.nr_seq_protocolo,
									a.nr_seq_prestador_exec
								into STRICT	nr_seq_protocolo_w,
									nr_seq_prestador_w
								from	pls_conta a
								where	nr_sequencia	= nr_seq_conta_w;
								
								if (coalesce(nr_seq_prestador_w,0) > 0) then
									select	a.cd_pessoa_fisica,
										a.cd_cgc
									into STRICT	cd_pessoa_fisica_w,
										cd_cgc_prestador_w
									from	pls_prestador a
									where	a.nr_sequencia	= nr_seq_prestador_w;
									
									begin
									nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
									exception
									when others then
										nm_prestador_w	:= null;
									end;
									
									select	max(nr_cpf)
									into STRICT	cd_cpf_prestador_w
									from	pessoa_fisica
									where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
								end if;
								
								select	max(nr_nota_fiscal)
								into STRICT	nr_nota_fiscal_w
								from	pls_prot_conta_titulo
								where	nr_sequencia	= nr_seq_prot_conta_w;
								
								nr_titulo_pag_trib_w	:= null;
								
								select	max(b.cd_cgc),
									max(	select	c.nr_cpf
										from	pessoa_fisica	c
										where	c.cd_pessoa_fisica = b.cd_pessoa_fisica) nr_cpf
								into STRICT	cd_cgc_prestador_pag_w,
									cd_cpf_prestador_pag_w
								from	pls_prestador		b,
									pls_conta_medica_resumo	a
								where	b.nr_sequencia	= a.nr_seq_prestador_pgto
								and	a.nr_sequencia	= nr_seq_conta_resumo_w
								and	a.nr_seq_conta = nr_seq_conta_w;
								
								if (ie_pagamento_novo_w = 'S') then
									select	max(b.nr_titulo_pagar)
									into STRICT	nr_titulo_pagar_w
									from	pls_pp_prestador	b
									where	b.nr_seq_lote		= nr_seq_lote_w
									and	b.nr_seq_prestador	= nr_seq_prestador_pag_w;

									select	max(b.nr_titulo_receber)
									into STRICT	nr_titulo_receber_w
									from	pls_pp_prestador	b
									where	b.nr_seq_lote		= nr_seq_lote_w
									and	b.nr_seq_prestador	= nr_seq_prestador_pag_w;

								else
									select	max(b.nr_titulo)
									into STRICT	nr_titulo_pagar_w
									from	pls_pag_prest_vencimento b,
										pls_pagamento_prestador a
									where	a.nr_sequencia		= b.nr_seq_pag_prestador
									and	a.nr_seq_lote		= nr_seq_lote_w
									and	a.nr_seq_prestador	= nr_seq_prestador_pag_w;

									select	max(b.nr_titulo_receber)
									into STRICT	nr_titulo_receber_w
									from	pls_pag_prest_vencimento b,
										pls_pagamento_prestador a
									where	a.nr_sequencia		= b.nr_seq_pag_prestador
									and	a.nr_seq_lote		= nr_seq_lote_w
									and	a.nr_seq_prestador	= CASE WHEN qt_prest_pgto_w=0 THEN nr_seq_prestador_w  ELSE nr_seq_prestador_pag_w END;
								end if;
								
								cd_cgc_cpf_prest_pagto_w := coalesce(cd_cgc_prestador_pag_w, cd_cpf_prestador_pag_w);
								/*Caso seja necessario adicionar/retirar um campo no complemento historio, realizar procedimento nas procedures auxiliares (exemplo CTB_PLS_CONTAB_REC_GLOSA)*/

								ds_conteudo_w	:= substr(	nr_seq_prestador_w	|| '#@' ||
												nm_prestador_w 		|| '#@' ||
												nr_seq_protocolo_w	|| '#@' ||
												nr_seq_conta_w		|| '#@' ||
												cd_cgc_prestador_w	|| '#@' ||
												cd_cpf_prestador_w	|| '#@' ||
												nr_nota_fiscal_w	|| '#@' ||
												nr_seq_lote_w		|| '#@' ||
												dt_mes_competencia_w	|| '#@' ||
												nr_tit_pagar_origem_w	|| '#@' ||
												nr_tit_receber_origem_w	|| '#@' ||
												nr_adiant_pago_origem_w	|| '#@' ||
												nr_titulo_pagar_w	|| '#@' ||
												nr_titulo_receber_w	|| '#@' ||
												ds_tributo_w		|| '#@' ||
												nr_titulo_pag_trib_w	|| '#@' ||
												nr_nota_fiscal_mat_w	|| '#@' ||
												nr_seq_prestador_pag_w	|| '#@' ||
												cd_cgc_cpf_prest_pagto_w|| '#@' ||
												nm_prestador_pag_w	|| '#@' ||
												nr_seq_evento_w		|| '#@' ||
												ds_evento_w		|| '#@' ||
												null			|| '#@' ||
												null,1,4000);
								
								begin
								ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_contab_w, ds_conteudo_w),1,255);
								exception
								when others then
									ds_compl_historico_ww	:= null;
								end;
								
								ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
							end if;
						end if;
						
						nr_seq_w_movto_cont_w			:= nr_seq_w_movto_cont_w + 1;
						
						item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
						item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
						item_mov_contabil_w.cd_conta_contabil	:= cd_conta_contab_deb_w;
						item_mov_contabil_w.ie_debito_credito	:= 'D';
						item_mov_contabil_w.cd_historico	:= cd_historico_contab_w;
						item_mov_contabil_w.dt_movimento	:= dt_referencia_protocolo_w;
						item_mov_contabil_w.vl_movimento	:= vl_contab_w;
						item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
						item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_deb_w;
						item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
						item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
						item_mov_contabil_w.nr_seq_tab_compl	:= nr_seq_tab_compl_w;
						item_mov_contabil_w.nr_doc_analitico	:= nr_doc_analitico_w;
						item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
						item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
						item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
						
						movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
						
						nr_seq_w_movto_cont_w			:= nr_seq_w_movto_cont_w + 1;
						
						item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
						item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
						item_mov_contabil_w.cd_conta_contabil	:= cd_conta_contab_cred_w;
						item_mov_contabil_w.ie_debito_credito	:= 'C';
						item_mov_contabil_w.cd_historico	:= cd_historico_contab_w;
						item_mov_contabil_w.dt_movimento	:= dt_referencia_protocolo_w;
						item_mov_contabil_w.vl_movimento	:= vl_contab_w;
						item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
						item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_cred_w;
						item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
						item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
						item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
						item_mov_contabil_w.nr_seq_tab_compl	:= nr_seq_tab_compl_w;
						item_mov_contabil_w.nr_doc_analitico	:= nr_doc_analitico_w;
						item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
						item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
						item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
						
						movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;

						if (movimento_contabil_w.count >= 1000) then
							begin
							forall i in movimento_contabil_w.first .. movimento_contabil_w.last
								insert into w_movimento_contabil values movimento_contabil_w(i);
							commit;

							movimento_contabil_w.delete;
							end;
						end if;
					end if;
					end;
				end loop;
				close c_tipo_movimento;

				/* No pagamento novo ainda e feito o update antes */

				if (coalesce(nr_seq_pp_lote_w,0) = 0) then
				
					if (ie_estorno_w = 'N') or
						((ie_estorno_w = 'S') and (coalesce(nr_lote_contab_pag_w,0) = 0)) then			
						pls_lote_pagamento_w.nr_id(pls_lote_pagamento_w.nr_id.count)	:= nr_id_lote_pag_w;
									
						if (pls_lote_pagamento_w.nr_id.count >= 1000) then
							begin
							forall i in pls_lote_pagamento_w.nr_id.first .. pls_lote_pagamento_w.nr_id.last
								update	pls_lote_pagamento	a
								set	a.nr_lote_contabil	= nr_lote_contabil_p
								where	rowid			= pls_lote_pagamento_w.nr_id(i);
							commit;
							pls_lote_pagamento_w.nr_id.delete;
							end;
						end if;
					end if;

					if (substr(ie_proc_mat_w,1,1) = 'P') then
						rowid_proc_w(rowid_proc_w.count)	:= nr_id_proc_mat_w;
					elsif (substr(ie_proc_mat_w,1,1) = 'M') then
						rowid_mat_w(rowid_mat_w.count)		:= nr_id_proc_mat_w;
					end if;
						
					
					if (ie_estorno_w = 'S') then
										
						pls_pagamento_prestador_w.nr_id(pls_pagamento_prestador_w.nr_id.count)	:= nr_id_pag_prest_w;
					
						if (pls_pagamento_prestador_w.nr_id.count >= 1000) then
							begin
							forall i in pls_pagamento_prestador_w.nr_id.first .. pls_pagamento_prestador_w.nr_id.last
								update	pls_pagamento_prestador	a
								set	a.nr_lote_contabil_cancel = nr_lote_contabil_p
								where	rowid 			= pls_pagamento_prestador_w.nr_id(i);
							commit;
							pls_pagamento_prestador_w.nr_id.delete;
							end;
						end if;

					end if;
				end if;
				
				CALL wheb_usuario_pck.set_ie_lote_contabil('N');				
				
				end;
			end loop;
			
			CALL wheb_usuario_pck.set_ie_lote_contabil('S');

		EXIT WHEN NOT FOUND; /* apply on c_pagamento */
		end loop;
		close c_pagamento;
		
		if (movimento_contabil_w.count > 0) then
			forall i in movimento_contabil_w.first .. movimento_contabil_w.last
				insert into w_movimento_contabil values movimento_contabil_w(i);
			commit;
			movimento_contabil_w.delete;
		end if;
		
		CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		
		if (pls_lote_pagamento_w.nr_id.count > 0) then
			forall i in pls_lote_pagamento_w.nr_id.first .. pls_lote_pagamento_w.nr_id.last


				update	pls_lote_pagamento	a
				set	a.nr_lote_contabil	= nr_lote_contabil_p
				where	rowid			= pls_lote_pagamento_w.nr_id(i);
			commit;
			pls_lote_pagamento_w.nr_id.delete;
		end if;
		
		if (pls_pagamento_prestador_w.nr_id.count > 0) then
			forall i in pls_pagamento_prestador_w.nr_id.first .. pls_pagamento_prestador_w.nr_id.last
				update	pls_pagamento_prestador	a
				set	a.nr_lote_contabil_cancel = nr_lote_contabil_p
				where	rowid 			= pls_pagamento_prestador_w.nr_id(i);
			commit;
			pls_pagamento_prestador_w.nr_id.delete;
		end if;
		
		if (rowid_proc_w.count > 0) then
			forall i in rowid_proc_w.first .. rowid_proc_w.last
				update	pls_conta_proc
				set	nr_lote_contab_pag	= nr_lote_contabil_p
				where	rowid		= rowid_proc_w(i);
			commit;
			rowid_proc_w.delete;
		end if;
		
		if (rowid_mat_w.count > 0) then
			forall i in rowid_mat_w.first .. rowid_mat_w.last
				update	pls_conta_mat
				set	nr_lote_contab_pag	= nr_lote_contabil_p
				where	rowid		= rowid_mat_w(i);
			commit;
			rowid_mat_w.delete;
		end if;
		
		CALL wheb_usuario_pck.set_ie_lote_contabil('N');
		
	end if;
	
	nr_seq_info_ctb_w	:= 39;
	
	nr_seq_prestador_w	        := null;
	nm_prestador_w 		        := null;
	nr_seq_protocolo_w	        := null;
	nr_seq_conta_w		        := null;
	cd_cgc_prestador_w	        := null;
	cd_cpf_prestador_w	        := null;
	nr_nota_fiscal_w	        := null;
	nr_seq_lote_w		        := null;
	nr_seq_pp_lote_w		:= null;
	dt_mes_competencia_w	        := null;
	nr_tit_pagar_origem_w	        := null;
	nr_tit_receber_origem_w	        := null;
	nr_adiant_pago_origem_w	        := null;
	nr_titulo_pagar_w	        := null;
	nr_titulo_receber_w	        := null;
	ds_tributo_w		        := null;
	nr_titulo_pag_trib_w	        := null;
	nr_nota_fiscal_mat_w	        := null;
	nr_seq_prestador_pag_w	        := null;
	cd_cgc_cpf_prest_pagto_w        := null;
	nm_prestador_pag_w	        := null;
	nr_seq_evento_w		        := null;
	ds_evento_w		        := null;
	nr_seq_lote_pgto_apropr_w       := null;
	nr_id_lote_pag_w		:= null;
	nr_lote_contab_pag_w		:= null;
	nr_seq_tab_orig_w		:= null;
	nr_seq_tab_compl_w		:= null;
	nr_doc_analitico_w		:= null;
	
	/* Eventos */

	open c_evento;
	loop
	fetch c_evento into
		nr_seq_evento_mvto_w,
		cd_conta_contabil_cred_w,
		cd_conta_contabil_deb_w,
		vl_movimento_w,
		dt_movimento_w,
		cd_historico_evento_w,
		nr_seq_prestador_w,
		nr_seq_evento_w,
		nr_seq_lote_pgto_w,
		nr_seq_lote_pgto_apropr_w,
		nm_tabela_w,
		nm_atributo_w,
		cd_centro_custo_movto_w,
		nr_seq_lote_w,
		nr_seq_pp_lote_w,
		nr_id_evento_mov_w,
		nr_id_lote_pag_w,
		nr_lote_contab_pag_w,
		ie_atualiza_lote_pag_w,
		nr_seq_tab_orig_w,
		nr_seq_tab_compl_w,
		nr_doc_analitico_w;
	EXIT WHEN NOT FOUND; /* apply on c_evento */
		begin
		cd_centro_custo_deb_w	:= null;
		cd_centro_custo_cred_w	:= null;
		ds_compl_historico_w	:= null;
		
		select	max(ds_evento)
		into STRICT	ds_evento_w
		from	pls_evento
		where	nr_sequencia	= nr_seq_evento_w;
				
		if (coalesce(cd_conta_contabil_w::text, '') = '') and (ie_esquema_contabil_w = 'N') then
			
			select	nextval('w_pls_movimento_sem_conta_seq')
			into STRICT	nr_seq_mvto_sem_conta_w
			;
			
			insert into w_pls_movimento_sem_conta(nr_sequencia,
				cd_item,
				ds_item,
				ie_tipo_item,
				dt_atualizacao,
				nm_usuario,
				vl_item,
				dt_referencia,
				nr_lote_contabil,
				ie_deb_cred,
				ds_observacao,
				ie_proc_mat_item,
				cd_tipo_lote_contabil)
			values (nr_seq_mvto_sem_conta_w,
				nr_seq_item_w,
				ds_evento_w,
				'EF',
				clock_timestamp(),
				nm_usuario_p,
				vl_movimento_w,
				dt_referencia_w,
				nr_lote_contabil_p,
				ie_debito_credito_w,
				'',
				'E',
				cd_tipo_lote_contabil_w);
		elsif (coalesce(cd_conta_contabil_cred_w, 'X') <> 'X') and (coalesce(cd_conta_contabil_deb_w, 'X') <> 'X') then
			
			select	max(ie_centro_custo),
				max(cd_centro_custo)
			into STRICT	ie_centro_custo_cred_w,
				cd_centro_custo_fixo_cred_w
			from	conta_contabil
			where	cd_conta_contabil	= cd_conta_contabil_cred_w;
			
			select	max(ie_centro_custo),
				max(cd_centro_custo)
			into STRICT	ie_centro_custo_deb_w,
				cd_centro_custo_fixo_deb_w
			from	conta_contabil
			where	cd_conta_contabil	= cd_conta_contabil_deb_w;
			
			if (ie_centro_custo_cred_w = 'S') then
				if (cd_centro_custo_fixo_cred_w IS NOT NULL AND cd_centro_custo_fixo_cred_w::text <> '') then
					cd_centro_custo_cred_w	:= cd_centro_custo_fixo_cred_w;
					if (cd_centro_custo_movto_w IS NOT NULL AND cd_centro_custo_movto_w::text <> '') then
						cd_centro_custo_cred_w	:= cd_centro_custo_movto_w;
					end if;
				else
					SELECT * FROM pls_obter_centro_custo(	'D', '', cd_estabelecimento_w, '', '', '', '', '', cd_centro_custo_cred_w, nr_seq_regra_cc_w, null, 				--nr_seq_tipo_lanc_p
								null, 				--nr_seq_bonificacao_p
								null, 				--nr_seq_sca_p
								nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_evento_w	
								) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
				end if;
				
				if (cd_centro_custo_movto_w IS NOT NULL AND cd_centro_custo_movto_w::text <> '') then
					cd_centro_custo_cred_w	:= cd_centro_custo_movto_w;
				end if;
			end if;
			
			if (ie_centro_custo_deb_w = 'S') then
				if (cd_centro_custo_fixo_deb_w IS NOT NULL AND cd_centro_custo_fixo_deb_w::text <> '') then
					cd_centro_custo_deb_w	:= cd_centro_custo_fixo_deb_w;
					if (cd_centro_custo_movto_w IS NOT NULL AND cd_centro_custo_movto_w::text <> '') then
						cd_centro_custo_deb_w	:= cd_centro_custo_movto_w;
					end if;
				else
					SELECT * FROM pls_obter_centro_custo(	'D', '', cd_estabelecimento_w, '', '', '', '', '', cd_centro_custo_deb_w, nr_seq_regra_cc_w, null, 				--nr_seq_bonificacao_p
								null, 				--nr_seq_sca_p
								nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_prestador_w, nr_seq_evento_w) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;
				end if;
				
				if (cd_centro_custo_movto_w IS NOT NULL AND cd_centro_custo_movto_w::text <> '') then
					cd_centro_custo_deb_w	:= cd_centro_custo_movto_w;
				end if;
			end if;
			
			if (ie_compl_hist_w = 'S') then
				if (coalesce(nr_seq_prestador_w,0) > 0) then
					select	a.cd_pessoa_fisica,
						a.cd_cgc
					into STRICT	cd_pessoa_fisica_w,
						cd_cgc_prestador_w
					from	pls_prestador a
					where	a.nr_sequencia	= nr_seq_prestador_w;
					
					begin
					nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
					exception
					when others then
						nm_prestador_w	:= null;
					end;
					
					select	max(nr_cpf)
					into STRICT	cd_cpf_prestador_w
					from	pessoa_fisica
					where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
				end if;
				
				if (coalesce(nr_seq_lote_pgto_apropr_w,0) = 0) then
								
					select	max(v.nr_titulo),
						max(v.nr_titulo_receber)
					into STRICT	nr_titulo_pagar_w,
						nr_titulo_receber_w
					from	pls_evento_movimento 		a,
						pls_pagamento_prestador		p,
						pls_pag_prest_vencimento	v,
						pls_lote_pagamento		l
					where	a.nr_seq_prestador 	= p.nr_seq_prestador
					and	a.nr_seq_lote_pgto 	= l.nr_sequencia
					and	l.nr_sequencia		= p.nr_seq_lote
					and	p.nr_sequencia		= v.nr_seq_pag_prestador
					and	a.nr_sequencia		= nr_seq_evento_mvto_w;
				
				else				
					select	max(v.nr_titulo),
						max(v.nr_titulo_receber)
					into STRICT	nr_titulo_pagar_w,
						nr_titulo_receber_w
					from	pls_evento_movimento		a,
						pls_pagamento_prestador		p,
						pls_pag_prest_vencimento	v,
						pls_lote_pagamento 		l,
						pls_lote_evento			b
					where	a.nr_seq_prestador 	= p.nr_seq_prestador
					and	b.nr_sequencia		= a.nr_seq_lote
					and	l.nr_sequencia		= b.nr_seq_lote_pgto_apropr
					and	l.nr_sequencia		= p.nr_seq_lote
					and	p.nr_sequencia		= v.nr_seq_pag_prestador
					and	a.nr_sequencia		= nr_seq_evento_mvto_w;
				end if;
				
				/*Caso seja necessario adicionar/retirar um campo no complemento historio, realizar procedimento nas procedures auxiliares (exemplo CTB_PLS_CONTAB_REC_GLOSA)*/

				ds_conteudo_w	:= substr(	nr_seq_prestador_w	|| '#@' ||
								nm_prestador_w 		|| '#@' ||
								nr_seq_protocolo_w	|| '#@' ||
								nr_seq_conta_w		|| '#@' ||
								cd_cgc_prestador_w	|| '#@' ||
								cd_cpf_prestador_w	|| '#@' ||
								nr_nota_fiscal_w	|| '#@' ||
								nr_seq_lote_w		|| '#@' ||
								dt_mes_competencia_w	|| '#@' ||
								nr_tit_pagar_origem_w	|| '#@' ||
								nr_tit_receber_origem_w	|| '#@' ||
								nr_adiant_pago_origem_w	|| '#@' ||
								nr_titulo_pagar_w	|| '#@' ||
								nr_titulo_receber_w	|| '#@' ||
								ds_tributo_w		|| '#@' ||
								nr_titulo_pag_trib_w	|| '#@' ||
								nr_nota_fiscal_mat_w	|| '#@' ||
								nr_seq_prestador_pag_w	|| '#@' ||
								cd_cgc_cpf_prest_pagto_w|| '#@' ||
								nm_prestador_pag_w	|| '#@' ||
								nr_seq_evento_w		|| '#@' ||
								ds_evento_w		|| '#@' ||
								null			|| '#@' ||
								nr_seq_lote_pgto_apropr_w,1,4000);
				
				begin
				ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_evento_w, ds_conteudo_w),1,255);
				exception
				when others then
					ds_compl_historico_ww	:= null;
				end;
				
				ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
			end if;
			
			nr_seq_agrupamento_w	:= nr_seq_lote_w;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
			item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
			item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
			item_mov_contabil_w.cd_conta_contabil	:= cd_conta_contabil_deb_w;
			item_mov_contabil_w.ie_debito_credito	:= 'D';
			item_mov_contabil_w.cd_historico	:= cd_historico_evento_w;
			item_mov_contabil_w.dt_movimento	:= dt_movimento_w;
			item_mov_contabil_w.vl_movimento	:= vl_movimento_w;
			item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
			item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_deb_w;
			item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
			item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
			item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
			item_mov_contabil_w.nr_seq_tab_compl	:= nr_seq_tab_compl_w;
			item_mov_contabil_w.nr_doc_analitico	:= nr_doc_analitico_w;
			item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
			item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
			item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
			
			movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
			item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
			item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
			item_mov_contabil_w.cd_conta_contabil	:= cd_conta_contabil_cred_w;
			item_mov_contabil_w.ie_debito_credito	:= 'C';
			item_mov_contabil_w.cd_historico	:= cd_historico_evento_w;
			item_mov_contabil_w.dt_movimento	:= dt_movimento_w;
			item_mov_contabil_w.vl_movimento	:= vl_movimento_w;
			item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
			item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_cred_w;
			item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
			item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
			item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
			item_mov_contabil_w.nr_seq_tab_compl	:= nr_seq_tab_compl_w;
			item_mov_contabil_w.nr_doc_analitico	:= nr_doc_analitico_w;
			item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
			item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
			item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
			
			movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;

			if (movimento_contabil_w.count >= 1000) then
				begin
				forall i in movimento_contabil_w.first .. movimento_contabil_w.last
					insert into w_movimento_contabil values movimento_contabil_w(i);
				commit;
				movimento_contabil_w.delete;
				end;
			end if;
		end if;
		
		CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		
		/* No pagamento novo ainda e feito o update antes */

		if (coalesce(nr_seq_pp_lote_w,0) = 0) then
		
			pls_evento_movimento_w.nr_id(pls_evento_movimento_w.nr_id.count)	:= nr_id_evento_mov_w;
			
			if (pls_evento_movimento_w.nr_id.count >= 1000) then
				begin
				forall i in pls_evento_movimento_w.nr_id.first .. pls_evento_movimento_w.nr_id.last
					update	pls_evento_movimento	a
					set	a.nr_lote_contabil	= nr_lote_contabil_p
					where	rowid			= pls_evento_movimento_w.nr_id(i);
				commit;
				pls_evento_movimento_w.nr_id.delete;
				end;
			end if;
			
			if (ie_atualiza_lote_pag_w = 'S') and (coalesce(nr_lote_contab_pag_w,0) = 0)then
				pls_lote_pagamento_w.nr_id(pls_lote_pagamento_w.nr_id.count)	:= nr_id_lote_pag_w;		
			end if;
			
			if (pls_lote_pagamento_w.nr_id.count >= 1000) then
				begin
				forall i in pls_lote_pagamento_w.nr_id.first .. pls_lote_pagamento_w.nr_id.last
					update	pls_lote_pagamento	a
					set	a.nr_lote_contabil	= nr_lote_contabil_p
					where	rowid			= pls_lote_pagamento_w.nr_id(i);
				commit;
				pls_lote_pagamento_w.nr_id.delete;
				end;
			end if;
		end if;
		
		CALL wheb_usuario_pck.set_ie_lote_contabil('N');
		
		end;
	end loop;
	close c_evento;
	
	if (movimento_contabil_w.count > 0) then
		forall i in movimento_contabil_w.first .. movimento_contabil_w.last
			insert into w_movimento_contabil values movimento_contabil_w(i);
		commit;
		movimento_contabil_w.delete;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	if (pls_evento_movimento_w.nr_id.count > 0) then
		forall i in pls_evento_movimento_w.nr_id.first .. pls_evento_movimento_w.nr_id.last
			update	pls_evento_movimento	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid			= pls_evento_movimento_w.nr_id(i);
		commit;
		pls_evento_movimento_w.nr_id.delete;
	end if;
	
	if (pls_lote_pagamento_w.nr_id.count > 0) then
		forall i in pls_lote_pagamento_w.nr_id.first .. pls_lote_pagamento_w.nr_id.last


			update	pls_lote_pagamento	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid			= pls_lote_pagamento_w.nr_id(i);
		commit;
		pls_lote_pagamento_w.nr_id.delete;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	nr_seq_info_ctb_w	:= 40;
	
	nr_seq_prestador_w	        := null;
	nm_prestador_w 		        := null;
	nr_seq_protocolo_w	        := null;
	nr_seq_conta_w		        := null;
	cd_cgc_prestador_w	        := null;
	cd_cpf_prestador_w	        := null;
	nr_nota_fiscal_w	        := null;
	nr_seq_lote_w		        := null;
	nr_seq_pp_lote_w		:= null;
	dt_mes_competencia_w	        := null;
	nr_tit_pagar_origem_w	        := null;
	nr_tit_receber_origem_w	        := null;
	nr_adiant_pago_origem_w	        := null;
	nr_titulo_pagar_w	        := null;
	nr_titulo_receber_w	        := null;
	ds_tributo_w		        := null;
	nr_titulo_pag_trib_w	        := null;
	nr_nota_fiscal_mat_w	        := null;
	nr_seq_prestador_pag_w	        := null;
	cd_cgc_cpf_prest_pagto_w        := null;
	nm_prestador_pag_w	        := null;
	nr_seq_evento_w		        := null;
	ds_evento_w		        := null;
	nr_seq_lote_pgto_apropr_w       := null;
	nr_seq_tab_orig_w		:= null;
	nr_seq_tab_compl_w		:= null;
	nr_doc_analitico_w		:= null;
	
	/* Tributos */

	open c_tributo;
	loop
	fetch c_tributo into
		nr_seq_item_w,
		cd_conta_contabil_deb_w,
		cd_conta_contabil_cred_w,
		vl_contabil_w,
		dt_imposto_w,
		cd_historico_w,
		cd_tributo_w,
		nr_seq_lote_w,
		nr_seq_pp_lote_w,
		dt_mes_competencia_w,
		nr_tit_pagar_origem_w,
		nr_tit_receber_origem_w,
		nr_adiant_pago_origem_w,
		nr_titulo_pagar_w,
		nr_titulo_receber_w,
		ds_tributo_w,
		nm_tabela_w,
		nm_atributo_w,
		nr_seq_prestador_pag_w,
		nr_seq_evento_w,
		cd_centro_custo_trib_w,
		nr_id_trib_w,
		nr_seq_tab_orig_w,
		nr_seq_tab_compl_w,
		nr_doc_analitico_w;
	EXIT WHEN NOT FOUND; /* apply on c_tributo */
		begin
		cd_centro_custo_deb_w	:= null;
		cd_centro_custo_cred_w	:= null;
		ds_compl_historico_w	:= null;
		ds_item_w		:= null;
		nr_titulo_pag_trib_w	:= null;
		ds_evento_w		:= null;
		
		if (coalesce(cd_conta_contabil_w::text, '') = '') and (ie_esquema_contabil_w = 'N')  then
			ie_tipo_item_w	:= 'TCM';
			
			select	max(a.ds_tributo)
			into STRICT	ds_item_w
			from	tributo a
			where	a.cd_tributo	= cd_tributo_w;
			if (ie_esquema_contabil_w = 'N') then
				begin
				select	nextval('w_pls_movimento_sem_conta_seq')
				into STRICT	nr_seq_mvto_sem_conta_w
				;
				
				insert into w_pls_movimento_sem_conta(nr_sequencia,
					cd_item,
					ds_item,
					ie_tipo_item,
					dt_atualizacao,
					nm_usuario,
					vl_item,
					dt_referencia,
					nr_lote_contabil,
					ie_proc_mat_item,
					ie_deb_cred,
					ds_observacao,
					cd_tipo_lote_contabil)
				values (nr_seq_mvto_sem_conta_w,
					nr_seq_item_w,
					ds_item_w,
					ie_tipo_item_w,
					clock_timestamp(),
					nm_usuario_p,
					vl_contabil_w,
					dt_imposto_w,
					nr_lote_contabil_p,
					'T',
					ie_debito_credito_w,
					'Tributo',
					cd_tipo_lote_contabil_w);
				end;
			end if;
		elsif (coalesce(cd_conta_contabil_deb_w, 'X') <> 'X') and (coalesce(cd_conta_contabil_cred_w, 'X') <> 'X') then
			
			select	max(a.ie_tipo_evento)
			into STRICT	ie_tipo_evento_w
			from	pls_evento a
			where	a.nr_sequencia	= nr_seq_evento_w;

			select	ie_centro_custo,
				cd_centro_custo
			into STRICT	ie_centro_custo_deb_w,
				cd_centro_custo_fixo_deb_w
			from	conta_contabil
			where	cd_conta_contabil = cd_conta_contabil_deb_w;
			
			select	ie_centro_custo,
				cd_centro_custo
			into STRICT	ie_centro_custo_cred_w,
				cd_centro_custo_fixo_cred_w
			from	conta_contabil
			where	cd_conta_contabil = cd_conta_contabil_cred_w;
			
			if (ie_tipo_evento_w = 'F') and (coalesce(cd_centro_custo_trib_w,0) <> 0) then
				if (ie_centro_custo_deb_w = 'S') then
					cd_centro_custo_deb_w	:= cd_centro_custo_trib_w;
				end if;
				if (ie_centro_custo_cred_w = 'S') then
					cd_centro_custo_cred_w	:= cd_centro_custo_trib_w;
				end if;
			else			
				if (ie_centro_custo_deb_w = 'S') and (coalesce(cd_tributo_w::text, '') = '') then
					if (cd_centro_custo_fixo_deb_w IS NOT NULL AND cd_centro_custo_fixo_deb_w::text <> '') then
						cd_centro_custo_deb_w	:= cd_centro_custo_fixo_deb_w;
					else
						begin
						select	ie_regulamentacao,
							b.nr_sequencia
						into STRICT	ie_regulamentacao_w,
							nr_seq_plano_w
						from	pls_segurado a,
							pls_plano b
						where	b.nr_sequencia  = a.nr_seq_plano
						and	a.nr_sequencia	= nr_seq_segurado_w;
						exception
						when others then
							ie_regulamentacao_w	:= null;
							nr_seq_plano_w		:= null;
						end;
						
						SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_deb_w, nr_seq_regra_cc_w, null, 				--nr_seq_bonificacao_p
									null, 				--nr_seq_sca_p
									nr_seq_prestador_pag_w, nr_seq_prestador_pag_w, nr_seq_prestador_pag_w, nr_seq_prestador_pag_w, nr_seq_evento_w) INTO STRICT cd_centro_custo_deb_w, nr_seq_regra_cc_w;
					end if;
				end if;
				
				if (ie_centro_custo_cred_w = 'S') and (coalesce(cd_tributo_w::text, '') = '') then
					if (cd_centro_custo_fixo_cred_w IS NOT NULL AND cd_centro_custo_fixo_cred_w::text <> '') then
						cd_centro_custo_cred_w	:= cd_centro_custo_fixo_cred_w;
					else
						begin
						select	ie_regulamentacao,
							b.nr_sequencia
						into STRICT	ie_regulamentacao_w,
							nr_seq_plano_w
						from	pls_segurado a,
							pls_plano b
						where	b.nr_sequencia  = a.nr_seq_plano
						and	a.nr_sequencia	= nr_seq_segurado_w;
						exception
						when others then
							ie_regulamentacao_w	:= null;
							nr_seq_plano_w		:= null;
						end;
						
						SELECT * FROM pls_obter_centro_custo(	'D', nr_seq_plano_w, cd_estabelecimento_w, '', '', ie_regulamentacao_w, nr_seq_segurado_w, '', cd_centro_custo_cred_w, nr_seq_regra_cc_w, null, 				--nr_seq_bonificacao_p
									null, 				--nr_seq_sca_p
									nr_seq_prestador_pag_w, nr_seq_prestador_pag_w, nr_seq_prestador_pag_w, nr_seq_prestador_pag_w, nr_seq_evento_w) INTO STRICT cd_centro_custo_cred_w, nr_seq_regra_cc_w;
					end if;
				end if;			
			end if;
			
			if (ie_compl_hist_w = 'S') then
				select	count(1)
				into STRICT	qt_compl_hist_w
				from	historico_padrao_atributo
				where	cd_tipo_lote_contabil	= cd_tipo_lote_contabil_w
				and	cd_historico		= cd_historico_w  LIMIT 1;
				
				if (qt_compl_hist_w > 0) then

					if (nm_tabela_w = 'PLS_PP_BASE_ATUAL_TRIB') then
						nr_seq_prestador_w := nr_seq_prestador_pag_w;
					else
						select	max(a.nr_seq_prestador),
							max(a.nr_sequencia)
						into STRICT	nr_seq_prestador_w,
							nr_seq_pag_prest_w
						from	pls_pag_prest_venc_trib		c,
							pls_pag_prest_vencimento	b,
							pls_pagamento_prestador		a
						where	a.nr_sequencia	= b.nr_seq_pag_prestador
						and	b.nr_sequencia	= c.nr_seq_vencimento
						and	c.nr_sequencia	= nr_seq_item_w;
					end if;
					
					if (coalesce(nr_seq_prestador_w,0) > 0) then
						select	max(a.cd_pessoa_fisica),
							max(a.cd_cgc)
						into STRICT	cd_pessoa_fisica_w,
							cd_cgc_prestador_w
						from	pls_prestador a
						where	a.nr_sequencia	= nr_seq_prestador_w;
						
						begin
						nm_prestador_w	:= substr(obter_nome_pf_pj(cd_pessoa_fisica_w, cd_cgc_prestador_w),1,255);
						exception
						when others then
							nm_prestador_w	:= null;
						end;
							
						select	max(nr_cpf)
						into STRICT	cd_cpf_prestador_w
						from	pessoa_fisica
						where	cd_pessoa_fisica	= cd_pessoa_fisica_w;
					end if;
					
					select	max(a.nr_nota_fiscal)
					into STRICT	nr_nota_fiscal_w
					from	nota_fiscal	a
					where	a.nr_seq_pgto_prest	= nr_seq_pag_prest_w;

                                        if (coalesce(nr_nota_fiscal_w,0) = 0) then
                                                select  max(nr_nota_fiscal)
                                                into STRICT    nr_nota_fiscal_w
                                                from    pls_pagamento_prestador
                                                where   nr_sequencia = nr_seq_pag_prest_w;
                                        end if;

                                       	select	max(nr_titulo)
					into STRICT	nr_titulo_pag_trib_w
					from	titulo_pagar
					where	nr_seq_pls_venc_trib	= nr_seq_item_w;
					
					select	max(a.nr_sequencia),
						max(a.cd_cgc),
						max(	select	c.nr_cpf
							from	pessoa_fisica	c
							where	c.cd_pessoa_fisica = a.cd_pessoa_fisica) nr_cpf
					into STRICT	nr_seq_prestador_pag_w,
						cd_cgc_prestador_pag_w,
						cd_cpf_prestador_pag_w
					from	pls_prestador		a
					where	a.nr_sequencia = nr_seq_prestador_pag_w;
					
					if (coalesce(cd_cgc_prestador_pag_w, 'X') <> 'X') then
						begin
						nm_prestador_pag_w := substr(obter_razao_social(cd_cgc_prestador_pag_w),1,255);
						end;
					end if;
					
					cd_cgc_cpf_prest_pagto_w := coalesce(cd_cgc_prestador_pag_w, cd_cpf_prestador_pag_w);
					/*Caso seja necessario adicionar/retirar um campo no complemento historio, realizar procedimento nas procedures auxiliares (exemplo CTB_PLS_CONTAB_REC_GLOSA)*/

					ds_conteudo_w	:= substr(	nr_seq_prestador_w	|| '#@' ||
									nm_prestador_w 		|| '#@' ||
									nr_seq_protocolo_w	|| '#@' ||
									nr_seq_conta_w		|| '#@' ||
									cd_cgc_prestador_w	|| '#@' ||
									cd_cpf_prestador_w	|| '#@' ||
									nr_nota_fiscal_w	|| '#@' ||
									nr_seq_lote_w		|| '#@' ||
									dt_mes_competencia_w	|| '#@' ||
									nr_tit_pagar_origem_w	|| '#@' ||
									nr_tit_receber_origem_w	|| '#@' ||
									nr_adiant_pago_origem_w	|| '#@' ||
									nr_titulo_pagar_w	|| '#@' ||
									nr_titulo_receber_w	|| '#@' ||
									ds_tributo_w		|| '#@' ||
									nr_titulo_pag_trib_w	|| '#@' ||
									nr_nota_fiscal_mat_w	|| '#@' ||
									nr_seq_prestador_pag_w	|| '#@' ||
									cd_cgc_cpf_prest_pagto_w|| '#@' ||
									nm_prestador_pag_w	|| '#@' ||
									nr_seq_evento_w		|| '#@' ||
									ds_evento_w		|| '#@' ||
									null			|| '#@' ||
									null,1,4000);
						
					begin
					ds_compl_historico_ww	:= substr(obter_compl_historico(cd_tipo_lote_contabil_w, cd_historico_w, ds_conteudo_w),1,255);
					exception
					when others then
						ds_compl_historico_ww	:= null;
					end;
					
					ds_compl_historico_w	:= substr(ds_compl_historico_ww,1,255);
				end if;
			end if;
			
			nr_seq_agrupamento_w	:= nr_seq_lote_w;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
			item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
			item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
			item_mov_contabil_w.cd_conta_contabil	:= cd_conta_contabil_deb_w;
			item_mov_contabil_w.ie_debito_credito	:= 'D';
			item_mov_contabil_w.cd_historico	:= cd_historico_w;
			item_mov_contabil_w.dt_movimento	:= dt_imposto_w;
			item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
			item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
			item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_deb_w;
			item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
			item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
			item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
			item_mov_contabil_w.nr_seq_tab_compl	:= nr_seq_tab_compl_w;
			item_mov_contabil_w.nr_doc_analitico	:= nr_doc_analitico_w;
			item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
			item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
			item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
			
			movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;
			
			nr_seq_w_movto_cont_w	:= nr_seq_w_movto_cont_w + 1;
						
			item_mov_contabil_w.nr_lote_contabil	:= nr_lote_contabil_p;
			item_mov_contabil_w.nr_sequencia	:= nr_seq_w_movto_cont_w;
			item_mov_contabil_w.cd_conta_contabil	:= cd_conta_contabil_cred_w;
			item_mov_contabil_w.ie_debito_credito	:= 'C';
			item_mov_contabil_w.cd_historico	:= cd_historico_w;
			item_mov_contabil_w.dt_movimento	:= dt_imposto_w;
			item_mov_contabil_w.vl_movimento	:= vl_contabil_w;
			item_mov_contabil_w.cd_estabelecimento	:= cd_estabelecimento_w;
			item_mov_contabil_w.cd_centro_custo	:= cd_centro_custo_cred_w;
			item_mov_contabil_w.ds_compl_historico	:= ds_compl_historico_w;
			item_mov_contabil_w.nr_seq_agrupamento	:= nr_seq_agrupamento_w;
			item_mov_contabil_w.nr_seq_tab_orig	:= nr_seq_tab_orig_w;
			item_mov_contabil_w.nr_seq_tab_compl	:= nr_seq_tab_compl_w;
			item_mov_contabil_w.nr_doc_analitico	:= nr_doc_analitico_w;
			item_mov_contabil_w.nr_seq_info		:= nr_seq_info_ctb_w;
			item_mov_contabil_w.nm_tabela		:= nm_tabela_w;
			item_mov_contabil_w.nm_atributo		:= nm_atributo_w;
			
			movimento_contabil_w(movimento_contabil_w.count) := item_mov_contabil_w;

			if (movimento_contabil_w.count >= 1000) then
				begin
				forall i in movimento_contabil_w.first .. movimento_contabil_w.last
					insert into w_movimento_contabil values movimento_contabil_w(i);
				commit;
				movimento_contabil_w.delete;
				end;
			end if;
		end if;
		
		CALL wheb_usuario_pck.set_ie_lote_contabil('S');
		
		/* No pagamento novo ainda e feito o update antes */

		if (coalesce(nr_seq_pp_lote_w,0) = 0) then
		
			pls_pag_prest_venc_trib_w.nr_id(pls_pag_prest_venc_trib_w.nr_id.count)	:= nr_id_trib_w;
			
			if (pls_pag_prest_venc_trib_w.nr_id.count >= 1000) then
				begin
				forall i in pls_pag_prest_venc_trib_w.nr_id.first .. pls_pag_prest_venc_trib_w.nr_id.last
					update	pls_pag_prest_venc_trib	a
					set	a.nr_lote_contabil	= nr_lote_contabil_p
					where	rowid			= pls_pag_prest_venc_trib_w.nr_id(i);
				commit;
				pls_pag_prest_venc_trib_w.nr_id.delete;
				end;
			end if;
		end if;
		
		CALL wheb_usuario_pck.set_ie_lote_contabil('N');
		
		end;
	end loop;
	close c_tributo;
	
	if (movimento_contabil_w.count > 0) then
		forall i in movimento_contabil_w.first .. movimento_contabil_w.last
			insert into w_movimento_contabil values movimento_contabil_w(i);
		commit;
		movimento_contabil_w.delete;
		
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('S');
	
	if (pls_pag_prest_venc_trib_w.nr_id.count > 0) then
		forall i in pls_pag_prest_venc_trib_w.nr_id.first .. pls_pag_prest_venc_trib_w.nr_id.last
			update	pls_pag_prest_venc_trib	a
			set	a.nr_lote_contabil	= nr_lote_contabil_p
			where	rowid			= pls_pag_prest_venc_trib_w.nr_id(i);
		commit;
		pls_pag_prest_venc_trib_w.nr_id.delete;
	end if;
	
	CALL wheb_usuario_pck.set_ie_lote_contabil('N');
	
	select	count(1) qt_rec_glosa
	into STRICT	qt_rec_glosa_w
	from	pls_esquema_contabil
	where	ie_tipo_regra		= 'RG'
	and	ie_tipo_movimentacao	in ('20','21')
	and	dt_referencia_w between dt_inicio_vigencia and coalesce(dt_fim_vigencia, dt_referencia_w);
	
	if (qt_rec_glosa_w > 0) then
		ds_retorno_p := ctb_pls_contab_rec_glosa(	nr_lote_contabil_p, nm_usuario_p, ie_exclusao_p, ds_retorno_p);
	end if;
					
	CALL agrupa_movimento_contabil(	nr_lote_contabil_p,
					nm_usuario_p);
end if;

if (coalesce(ds_retorno_p::text, '') = '') then
	update	lote_contabil
	set	ie_situacao 		= 'A',
		dt_geracao_lote		= CASE WHEN ie_exclusao_p='N' THEN clock_timestamp() WHEN ie_exclusao_p='S' THEN null END
	where	nr_lote_contabil	= nr_lote_contabil_p;
	
	if (ie_exclusao_p	= 'S') then
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165188);
		
		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					2,
					'',
					nm_usuario_p);
	else
		ds_retorno_p	:= wheb_mensagem_pck.get_texto(165187);

		CALL ctb_gravar_log_lote(	nr_lote_contabil_p,
					1,
					wheb_mensagem_pck.get_texto(1097175),
					nm_usuario_p);
	end if;
	
	commit;
else
	rollback;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_contab_producao_medica ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

