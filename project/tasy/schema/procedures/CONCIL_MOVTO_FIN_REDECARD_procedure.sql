-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE concil_movto_fin_redecard ( nr_seq_extrato_arq_p bigint, ds_lista_extrato_movto_fin_p text, ds_lista_extrato_movto_cred_p text, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


nr_seq_extrato_w			bigint;
nr_seq_extrato_parcela_w		bigint;

nr_extrato_cr_movto_cred_w		bigint;
vl_tot_aconciliar_cred_w		double precision;
vl_aconciliar_cred_w			double precision;
vl_final_saldo_concil_cred_w		double precision;

nr_extrato_cr_movto_fin_w		bigint;
nr_seq_movto_concil_w			bigint;
nr_seq_ext_movto_fin_w			bigint;
nr_seq_ext_parcela_w			bigint;
nr_seq_movto_concil_fin_w		bigint;
vl_conciliado_w				double precision;
vl_conciliado_fin_w			double precision;
vl_final_saldo_concil_fin_w		double precision;
vl_tot_saldo_concil_fin_w		double precision;
ie_tipo_arquivo_w			varchar(1);
qt_movto_concil_cred_w			bigint;


C01 CURSOR FOR
	SELECT	nr_sequencia,
		vl_aconciliar,
		vl_saldo_concil_cred
	from	extrato_cartao_cr_movto
	where	' ' || ds_lista_extrato_movto_cred_p ||  ' ' like '% ' || nr_sequencia || ' %'
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		vl_saldo_concil_fin
	from	extrato_cartao_cr_movto
	where	' ' || ds_lista_extrato_movto_fin_p || ' ' like '% ' || nr_sequencia || ' %'
	order by nr_sequencia;

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	extrato_cartao_cr_movto
	where	' ' || ds_lista_extrato_movto_cred_p || ' ' like '% ' || nr_sequencia || ' %'
	order by nr_sequencia;

C04 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_extrato_parcela,
		a.vl_conciliado
	from	ext_cartao_cr_movto_concil a
	where	a.nr_seq_ext_movto = nr_extrato_cr_movto_cred_w
	and	exists (
			SELECT	1
			from 	ext_cartao_cr_movto_concil x
			where 	x.nr_seq_extrato_parcela = a.nr_seq_extrato_parcela
			and 	' ' || ds_lista_extrato_movto_fin_p || ' ' like '% ' || x.nr_seq_ext_movto || ' %' )
	order by a.nr_sequencia;

C05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_ext_movto,
		a.vl_conciliado
	from	ext_cartao_cr_movto_concil a
	where	a.nr_seq_extrato_parcela = nr_seq_ext_parcela_w
	and 	' ' || ds_lista_extrato_movto_fin_p || ' ' like '% ' || a.nr_seq_ext_movto || ' %'
	order by a.nr_sequencia;


BEGIN

select	max(a.nr_seq_extrato),
	max(a.ie_tipo_arquivo)
into STRICT	nr_seq_extrato_w,
	ie_tipo_arquivo_w
from	extrato_cartao_cr_arq a
where	a.nr_sequencia = nr_seq_extrato_arq_p;

select	count(*)
into STRICT	qt_movto_concil_cred_w
from	extrato_cartao_cr_arq a
where	a.nr_seq_extrato	= nr_seq_extrato_w
and	a.ie_tipo_arquivo	= 'C';

/* se o arquivo de crédito não foi importado, concilia direto com as parcelas do Tasy */

if (ie_tipo_arquivo_w = 'F') and (coalesce(qt_movto_concil_cred_w,0) = 0) then

	CALL CONCIL_PARCEL_CARTAO_REDECARD(nr_seq_extrato_arq_p,ds_lista_extrato_movto_fin_p,ds_lista_extrato_movto_cred_p,ie_opcao_p,nm_usuario_p);

elsif (ie_opcao_p = 'C') then

	select	coalesce(sum(a.vl_aconciliar),0)
	into STRICT	vl_tot_aconciliar_cred_w
	from	extrato_cartao_cr_movto a
	where	' ' || ds_lista_extrato_movto_cred_p || ' ' like '% ' || a.nr_sequencia || ' %'
	and	(ds_lista_extrato_movto_cred_p IS NOT NULL AND ds_lista_extrato_movto_cred_p::text <> '');

	if (vl_tot_aconciliar_cred_w <= 0) then
		/* Valor à conciliar não pode ser menor ou igual a zero. */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(262428);
	end if;

	select	coalesce(sum(a.vl_saldo_concil_fin),0)
	into STRICT	vl_tot_saldo_concil_fin_w
	from	extrato_cartao_cr_movto a
	where	' ' || ds_lista_extrato_movto_fin_p || ' ' like '% ' || a.nr_sequencia || ' %'
	and	(ds_lista_extrato_movto_fin_p IS NOT NULL AND ds_lista_extrato_movto_fin_p::text <> '');

	if (vl_tot_aconciliar_cred_w > vl_tot_saldo_concil_fin_w) then
		/* Valor à conciliar é maior que o saldo do movimento financeiro! */

		CALL wheb_mensagem_pck.exibir_mensagem_abort(262429);
	end if;

	select	nextval('extrato_cartao_cr_parcela_seq')
	into STRICT	nr_seq_extrato_parcela_w
	;

	insert	into extrato_cartao_cr_parcela(nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		nr_seq_extrato_arq,
		nr_seq_extrato)
	values (nr_seq_extrato_parcela_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_extrato_arq_p,
		nr_seq_extrato_w);

	open C01;
	loop
	fetch C01 into
		nr_extrato_cr_movto_cred_w,
		vl_aconciliar_cred_w,
		vl_final_saldo_concil_cred_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (vl_aconciliar_cred_w > vl_final_saldo_concil_cred_w) then
			/* Valor do saldo é menor que o valor à conciliar! */

			CALL wheb_mensagem_pck.exibir_mensagem_abort(262432);
		end if;

		if (vl_final_saldo_concil_cred_w <= 0) then
			/* Saldo do movimento de crédito insuficiente para conciliação! */

			CALL wheb_mensagem_pck.exibir_mensagem_abort(262434);
		end if;

		insert into ext_cartao_cr_movto_concil(
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_ext_movto,
			nr_seq_extrato_parcela,
			nr_sequencia,
			vl_conciliado)
		values (	clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_extrato_cr_movto_cred_w,
			nr_seq_extrato_parcela_w,
			nextval('ext_cartao_cr_movto_concil_seq'),
			vl_aconciliar_cred_w);
		end;

		update	extrato_cartao_cr_movto
		set	vl_saldo_concil_cred	= vl_final_saldo_concil_cred_w - vl_aconciliar_cred_w,
			vl_aconciliar 		= 0
		where	nr_sequencia		= nr_extrato_cr_movto_cred_w;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		nr_extrato_cr_movto_fin_w,
		vl_final_saldo_concil_fin_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		if (vl_final_saldo_concil_fin_w <= 0) then
			/* Saldo do movimento financeiro insuficiente para conciliação! */

			CALL wheb_mensagem_pck.exibir_mensagem_abort(262435);
		end if;

		insert into ext_cartao_cr_movto_concil(
			dt_atualizacao,
			dt_atualizacao_nrec,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_ext_movto,
			nr_seq_extrato_parcela,
			nr_sequencia,
			vl_conciliado)
		values (	clock_timestamp(),
			clock_timestamp(),
			nm_usuario_p,
			nm_usuario_p,
			nr_extrato_cr_movto_fin_w,
			nr_seq_extrato_parcela_w,
			nextval('ext_cartao_cr_movto_concil_seq'),
			vl_tot_aconciliar_cred_w);
		end;

		update	extrato_cartao_cr_movto
		set	vl_saldo_concil_fin 	= vl_final_saldo_concil_fin_w - vl_tot_aconciliar_cred_w
		where	nr_sequencia		= nr_extrato_cr_movto_fin_w;
	end loop;
	close C02;

elsif (ie_opcao_p = 'D') then

	open C03;
	loop
	fetch C03 into
		nr_extrato_cr_movto_cred_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

		open C04;
		loop
		fetch C04 into
			nr_seq_movto_concil_w,
			nr_seq_ext_parcela_w,
			vl_conciliado_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin

			update	extrato_cartao_cr_movto
			set	vl_aconciliar		= 0,
				vl_saldo_concil_cred	= vl_saldo_concil_cred + vl_conciliado_w,
				vl_saldo_concil_fin     = 0
			where	nr_sequencia		= nr_extrato_cr_movto_cred_w;

			delete	from ext_cartao_cr_movto_concil
			where	nr_sequencia = nr_seq_movto_concil_w;

			open C05;
			loop
			fetch C05 into
				nr_seq_movto_concil_fin_w,
				nr_seq_ext_movto_fin_w,
				vl_conciliado_fin_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin

				update	extrato_cartao_cr_movto
				set	vl_aconciliar		= 0,
					vl_saldo_concil_cred	= 0,
					vl_saldo_concil_fin     = vl_saldo_concil_fin + vl_conciliado_w
				where	nr_sequencia		= nr_seq_ext_movto_fin_w;

				update	ext_cartao_cr_movto_concil
				set	vl_conciliado	= vl_conciliado - vl_conciliado_w
				where	nr_sequencia 	= nr_seq_movto_concil_fin_w;

				if	((vl_conciliado_fin_w - vl_conciliado_w) = 0) then
					delete	from ext_cartao_cr_movto_concil
					where	nr_sequencia = nr_seq_movto_concil_fin_w;

					delete	from extrato_cartao_cr_parcela
					where	nr_sequencia = nr_seq_ext_parcela_w;
				end if;

				end;
			end loop;
			close C05;

			end;
		end loop;
		close C04;

		end;
	end loop;
	close C03;

else
	/* O valor dos itens do extrato selecionados não conferem com o valor das parcelas selecionadas! */

	CALL wheb_mensagem_pck.exibir_mensagem_abort(262437);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE concil_movto_fin_redecard ( nr_seq_extrato_arq_p bigint, ds_lista_extrato_movto_fin_p text, ds_lista_extrato_movto_cred_p text, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

