-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_executar_req_interc_aprov ( nr_seq_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_guia_w			bigint;
qt_proc_aprov_w			bigint	:= 0;
qt_mat_aprov_w			bigint	:= 0;
cd_porte_anestesico_w		varchar(10);
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_conversao_pacote_w	bigint;
nr_seq_pacote_w			bigint;
nr_seq_preco_pacote_w		bigint;
qt_procedimento_w		pls_requisicao_proc.qt_procedimento%type;
vl_procedimento_w		double precision;
cd_material_w			integer;
ds_observacao_w			varchar(4000);
ie_tipo_cobertura_w		varchar(1);
nr_seq_cobertura_w		bigint;
nr_seq_material_w		bigint;
nr_seq_motivo_exc_w		bigint;
nr_seq_prest_fornec_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_tipo_limitacao_w		bigint;
qt_material_w			pls_requisicao_mat.qt_material%type;
qt_solicitado_w			pls_requisicao_mat.qt_solicitado%type;
vl_material_w			double precision;
nr_seq_req_proc_w		bigint;
nr_seq_req_mat_w		bigint;
ie_cobranca_prevista_w		varchar(1);
nr_seq_tipo_carencia_w		bigint;
/* Parametors execucao */

nr_seq_req_execucao_w		bigint;
ie_tipo_guia_w			integer;
nr_seq_segurado_w		bigint;
ie_tipo_processo_w		varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_porte_anestesico,
		cd_procedimento,
		ie_origem_proced,
		ie_tipo_cobertura,
		nr_seq_cobertura,
		nr_seq_conversao_pacote,
		nr_seq_motivo_exc,
		nr_seq_pacote,
		nr_seq_preco_pacote,
		nr_seq_regra,
		nr_seq_tipo_limitacao,
		qt_procedimento,
		qt_solicitado,
		vl_procedimento,
		ie_cobranca_prevista,
		nr_seq_tipo_carencia
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	ie_status		in ('S','P')
	and	coalesce(nr_seq_guia::text, '') = '';
	
C02 CURSOR FOR
	SELECT	nr_sequencia,
		cd_material,
		ds_observacao,
		ie_tipo_cobertura,
		nr_seq_cobertura,
		nr_seq_material,
		nr_seq_motivo_exc,
		nr_seq_prest_fornec,
		nr_seq_regra,
		nr_seq_tipo_limitacao,
		qt_material,
		qt_solicitado,
		vl_material,
		ie_cobranca_prevista,
		nr_seq_tipo_carencia
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_p
	and	ie_status		in ('S','P')
	and	coalesce(nr_seq_guia::text, '') = '';

C03 CURSOR FOR
	SELECT	nr_seq_processo
	from	pls_req_liminar_judicial
	where	nr_seq_requisicao = nr_seq_requisicao_p;
	
BEGIN

select	count(1)
into STRICT	qt_proc_aprov_w
from	pls_requisicao_proc
where	nr_seq_requisicao	= nr_seq_requisicao_p
and	ie_status		in ('S','P')
and	coalesce(nr_seq_guia::text, '') = '';

select	count(1)
into STRICT	qt_mat_aprov_w
from	pls_requisicao_mat
where	nr_seq_requisicao	= nr_seq_requisicao_p
and	ie_status		in ('S','P')
and	coalesce(nr_seq_guia::text, '') = '';

if	((qt_proc_aprov_w	> 0) or (qt_mat_aprov_w	> 0)) then
	select	nextval('pls_guia_plano_seq')
	into STRICT	nr_seq_guia_w
	;
	
	insert	into pls_guia_plano(cd_especialidade, cd_estabelecimento, cd_guia,
		cd_guia_manual, cd_guia_prestador, cd_guia_principal,
		cd_medico_solicitante, cd_senha, cd_senha_externa,
		ds_biometria, ds_indicacao_clinica, ds_observacao, 
		dt_admissao_hosp, dt_atualizacao, dt_atualizacao_nrec, 
		dt_autorizacao, dt_emissao, dt_liberacao, 
		dt_solicitacao, dt_validade_senha, dt_valid_senha_ext, 
		ie_carater_internacao, ie_consulta_urgencia, ie_estagio, 
		ie_regime_internacao, ie_status, ie_tipo_atend_tiss,
		ie_tipo_consulta, ie_tipo_gat, ie_tipo_guia,
		ie_tipo_intercambio, ie_tipo_processo, ie_tipo_saida,
		nm_usuario, nm_usuario_atendimento, nm_usuario_liberacao, 
		nm_usuario_nrec, nr_seq_clinica, nr_seq_guia_principal, 
		nr_seq_plano, nr_seq_segurado, nr_seq_tipo_acomodacao, 
		nr_sequencia, nr_seq_uni_exec, qt_dia_autorizado, 
		qt_dia_solicitado, ie_origem_solic,ie_saude_ocupacional,
		ie_regime_atendimento, ie_cobertura_especial)
	(SELECT	cd_especialidade, cd_estabelecimento, nr_seq_guia_w,
		nr_seq_guia_w, null, cd_guia_principal,
		cd_medico_solicitante, cd_senha, cd_senha_externa,
		ds_biometria, ds_indicacao_clinica, ds_observacao,
		dt_entrada_hospital, clock_timestamp(), clock_timestamp(),
		clock_timestamp(), clock_timestamp(), clock_timestamp(),
		dt_requisicao, dt_validade_senha, dt_valid_senha_ext,
		ie_carater_atendimento, ie_consulta_urgencia, 7,
		ie_regime_internacao, '2', ie_tipo_atendimento, 
		ie_tipo_consulta, ie_tipo_gat, ie_tipo_guia, 
		ie_tipo_intercambio, ie_tipo_processo, ie_tipo_saida, 
		nm_usuario_p, nm_usuario_p, nm_usuario_p,
		nm_usuario_p, nr_seq_clinica, nr_seq_guia_principal, 
		nr_seq_plano, nr_seq_segurado, nr_seq_tipo_acomodacao, 
		nr_seq_guia_w, nr_seq_uni_exec, qt_dia_autorizado, 
		qt_dia_solicitado, ie_origem_solic,ie_saude_ocupacional,
		ie_regime_atendimento, ie_cobertura_especial
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p);

	for C03_w in C03 loop
		begin
		if (C03_w.nr_seq_processo IS NOT NULL AND C03_w.nr_seq_processo::text <> '') then
			CALL pls_inserir_liminar_requisicao(C03_w.nr_seq_processo, null, nr_seq_guia_w, nm_usuario_p);
		end if;
		end;
	end loop;
	
	CALL pls_atualizar_conta_aut(nr_seq_guia_w, nm_usuario_p, cd_estabelecimento_p);
	CALL pls_gerar_cd_guia_regra(nr_seq_guia_w, nm_usuario_p);
	
	
	select	nr_seq_segurado,
		ie_tipo_guia,
		coalesce(ie_tipo_processo, CASE WHEN ie_tipo_requisicao='W' THEN  'P'  ELSE 'M' END )
	into STRICT	nr_seq_segurado_w,
		ie_tipo_guia_w,
		ie_tipo_processo_w		
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;
	
	select	nextval('pls_execucao_requisicao_seq')
	into STRICT	nr_seq_req_execucao_w
	;
	
	insert	into pls_execucao_requisicao(nr_sequencia, ie_situacao, nr_seq_requisicao,
		dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (nr_seq_req_execucao_w, 3, nr_seq_requisicao_p,
		clock_timestamp(), nm_usuario_p, clock_timestamp(),
		nm_usuario_p);
		
	if (qt_proc_aprov_w	> 0) then
		open C01;
		loop
		fetch C01 into	
			nr_seq_req_proc_w,
			cd_porte_anestesico_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			ie_tipo_cobertura_w,
			nr_seq_cobertura_w,
			nr_seq_conversao_pacote_w,
			nr_seq_motivo_exc_w,
			nr_seq_pacote_w,
			nr_seq_preco_pacote_w,
			nr_seq_regra_w,
			nr_seq_tipo_limitacao_w,
			qt_procedimento_w,
			qt_solicitado_w,
			vl_procedimento_w,
			ie_cobranca_prevista_w,
			nr_seq_tipo_carencia_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia, nr_seq_segurado,
				dt_atualizacao, nm_usuario, cd_procedimento, 
				ie_origem_proced, qt_item, nr_seq_req_proc, 
				ie_tipo_processo, nr_seq_requisicao, nr_seq_execucao, 
				nr_seq_preco_pacote, nr_seq_conversao_pacote, ie_situacao,
				nr_seq_guia)
			values (nextval('pls_execucao_req_item_seq'), ie_tipo_guia_w, nr_seq_segurado_w, 
				clock_timestamp(), nm_usuario_p, cd_procedimento_w, 
				ie_origem_proced_w, qt_procedimento_w, nr_seq_req_proc_w, 
				ie_tipo_processo_w, nr_seq_requisicao_p, nr_seq_req_execucao_w, 
				nr_seq_preco_pacote_w, nr_seq_conversao_pacote_w, 'S',
				nr_seq_guia_w);
			
			insert	into pls_guia_plano_proc(cd_porte_anestesico, cd_procedimento, dt_atualizacao,
				 dt_atualizacao_nrec, dt_liberacao, ie_origem_proced,
				 ie_status, ie_tipo_cobertura, nm_usuario,
				 nm_usuario_liberacao, nm_usuario_nrec, nr_seq_cobertura,
				 nr_seq_conversao_pacote, nr_seq_guia, nr_seq_motivo_exc,
				 nr_seq_pacote, nr_seq_preco_pacote, nr_seq_regra,
				 nr_seq_tipo_limitacao, nr_sequencia, qt_autorizada,
				 qt_solicitada, vl_procedimento, ie_cobranca_prevista,
				 nr_seq_tipo_carencia)
			values (cd_porte_anestesico_w, cd_procedimento_w, clock_timestamp(),
				 clock_timestamp(), clock_timestamp(), ie_origem_proced_w,
				 'S', ie_tipo_cobertura_w, nm_usuario_p,
				 nm_usuario_p, nm_usuario_p, nr_seq_cobertura_w,
				 nr_seq_conversao_pacote_w, nr_seq_guia_w, nr_seq_motivo_exc_w,
				 nr_seq_pacote_w, nr_seq_preco_pacote_w, nr_seq_regra_w,
				 nr_seq_tipo_limitacao_w, nextval('pls_guia_plano_proc_seq'), qt_procedimento_w,
				 qt_solicitado_w, vl_procedimento_w, ie_cobranca_prevista_w,
				 nr_seq_tipo_carencia_w);
				
			update	pls_requisicao_proc
			set	nr_seq_guia		= nr_seq_guia_w,
				qt_proc_executado	= qt_procedimento_w
			where	nr_sequencia		= nr_seq_req_proc_w;
			end;
		end loop;
		close C01;
	end if;

	if (qt_mat_aprov_w	> 0) then
		open C02;
		loop
		fetch C02 into	
			nr_seq_req_mat_w,
			cd_material_w,
			ds_observacao_w,
			ie_tipo_cobertura_w,
			nr_seq_cobertura_w,
			nr_seq_material_w,
			nr_seq_motivo_exc_w,
			nr_seq_prest_fornec_w,
			nr_seq_regra_w,
			nr_seq_tipo_limitacao_w,
			qt_material_w,
			qt_solicitado_w,
			vl_material_w,
			ie_cobranca_prevista_w,
			nr_seq_tipo_carencia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			insert	into pls_execucao_req_item(nr_sequencia, ie_tipo_guia, nr_seq_segurado,
				dt_atualizacao, nm_usuario, nr_seq_material,
				qt_item, nr_seq_req_mat, ie_tipo_processo, 
				nr_seq_requisicao, nr_seq_execucao, nr_seq_preco_pacote, 
				nr_seq_conversao_pacote, ie_situacao, nr_seq_guia)
			values (nextval('pls_execucao_req_item_seq'), ie_tipo_guia_w, nr_seq_segurado_w, 
				clock_timestamp(), nm_usuario_p, nr_seq_material_w,
				qt_procedimento_w, nr_seq_req_mat_w, ie_tipo_processo_w, 
				nr_seq_requisicao_p, nr_seq_req_execucao_w, nr_seq_preco_pacote_w, 
				nr_seq_conversao_pacote_w, 'S',	nr_seq_guia_w);
				
				
			insert	into pls_guia_plano_mat(cd_material, ds_observacao, dt_atualizacao,
				 dt_atualizacao_nrec, dt_liberacao, ie_status,
				 ie_tipo_cobertura, nm_usuario, nm_usuario_liberacao,
				 nm_usuario_nrec, nr_seq_cobertura, nr_seq_guia,
				 nr_seq_material, nr_seq_motivo_exc, nr_seq_prest_fornec,
				 nr_seq_regra, nr_seq_tipo_limitacao, nr_sequencia,
				 qt_autorizada, qt_solicitada, vl_material,
				 ie_cobranca_prevista, nr_seq_tipo_carencia)
			values (cd_material_w, ds_observacao_w, clock_timestamp(),
				 clock_timestamp(), clock_timestamp(), 'S',
				 ie_tipo_cobertura_w, nm_usuario_p, nm_usuario_p,
				 nm_usuario_p, nr_seq_cobertura_w, nr_seq_guia_w,
				 nr_seq_material_w, nr_seq_motivo_exc_w, nr_seq_prest_fornec_w,
				 nr_seq_regra_w, nr_seq_tipo_limitacao_w, nextval('pls_guia_plano_mat_seq'),
				 qt_material_w, qt_solicitado_w, vl_material_w,
				 ie_cobranca_prevista_w, nr_seq_tipo_carencia_w);
				
			update	pls_requisicao_mat
			set	nr_seq_guia		= nr_seq_guia_w,
				qt_mat_executado	= qt_material_w
			where	nr_sequencia		= nr_seq_req_mat_w;
			end;
		end loop;
		close C02;
	end if;

	update	pls_guia_plano
	set	ie_estagio	= 6,
		ie_status	= '1'
	where	nr_sequencia	= nr_seq_guia_w;

	CALL pls_guia_gravar_historico(	nr_seq_guia_w, 2, 'Guia gerada atraves da execucao automatica da requisicao de intercambio n '||nr_seq_requisicao_p,
					'', nm_usuario_p);

	update	pls_execucao_requisicao
	set	ie_situacao		= 1,
		dt_execucao		= clock_timestamp(),
		nr_seq_guia		= nr_seq_guia_w
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	CALL pls_atualiza_registro_inter(nr_seq_requisicao_p, nr_seq_guia_w);	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_executar_req_interc_aprov ( nr_seq_requisicao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

