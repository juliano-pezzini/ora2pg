-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_regra_sae_interv ( cd_perfil_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_prescricao_w		timestamp;
qt_registro_w		bigint;
nr_seq_proc_w		bigint;
nr_atendimento_w		 bigint;
ie_liberar_w		varchar(10);
nr_seq_sae_w		bigint;
nr_seq_erro_w		bigint;
qt_reg_w			bigint;
cd_intervalo_w		varchar(10);
ie_tipo_w   		pe_prescricao.ie_tipo%type;
ie_plano_cuidado_w   	regra_consiste_sae.ie_plano_cuidado%type;


BEGIN

delete	FROM pe_prescricao_erro
where	nr_seq_prescr_proc	= nr_sequencia_p;


select	a.dt_prescricao,
	b.nr_seq_proc,
	a.nr_atendimento,
	a.nr_sequencia,
	b.cd_intervalo,
  coalesce(a.ie_tipo, 'X')
into STRICT	dt_prescricao_w,
	nr_seq_proc_w,
	nr_atendimento_w,
	nr_seq_sae_w,
	cd_intervalo_w,
  ie_tipo_w
from	pe_prescricao a,
	pe_prescr_proc b
where	a.nr_sequencia	= b.nr_seq_prescr
and	b.nr_sequencia	= nr_sequencia_p;

if (obter_se_consistir_regra_sae(1,cd_perfil_p)	<> 'X') then

	select	count(*)
	into STRICT	qt_registro_w
	from	pe_prescricao a,
		PE_PRESCR_PROC b
	where	a.nr_sequencia		= b.nr_seq_prescr
	and	b.nr_sequencia		<> nr_sequencia_p
	and	a.nr_atendimento	= nr_atendimento_w
	and	b.nr_seq_proc		= nr_seq_proc_w
	and	trunc(a.dt_prescricao)	= trunc(dt_prescricao_w);

	if (qt_registro_w	> 0) then
		ie_liberar_w	:= obter_se_consistir_regra_sae(1,cd_perfil_p);

		nr_seq_erro_w := gerar_erro_interv_sae(nr_seq_sae_w, nr_sequencia_p, 1, ie_liberar_w, null, null, nm_usuario_p, nr_seq_erro_w);

	end if;
end if;

if ie_tipo_w = 'CP' then
  select coalesce(max(ie_plano_cuidado), 'N')
  into STRICT ie_plano_cuidado_w
  from regra_consiste_sae
  where nr_sequencia = 5;
end if;

if	(((ie_tipo_w = 'CP' and ie_plano_cuidado_w = 'S' ) or (coalesce(ie_tipo_w, 'X') <> 'CP')) and obter_se_consistir_regra_sae(5,cd_perfil_p)	<> 'X') then
	select 	count(*)
	into STRICT	qt_reg_w
	from   	pe_prescr_proc a
	where  	a.nr_sequencia = nr_sequencia_p
	and    	not exists (  SELECT 1
				 from 	pe_diagnostico_proc e ,
					pe_prescr_diag x
		 		 where 	e.nr_seq_proc = a.nr_seq_proc
				 and	x.nr_seq_diag	= e.nr_seq_diag
				 and	x.nr_seq_prescr	= nr_seq_sae_w);

	if (qt_reg_w > 0) then
		ie_liberar_w	:= obter_se_consistir_regra_sae(5,cd_perfil_p);

		nr_seq_erro_w := gerar_erro_interv_sae(nr_seq_sae_w, nr_sequencia_p, 5, ie_liberar_w, null, null, nm_usuario_p, nr_seq_erro_w);
	end if;
end if;

if (obter_se_consistir_regra_sae(6,cd_perfil_p)	<> 'X') then


	if (coalesce(cd_intervalo_w::text, '') = '') then
		ie_liberar_w	:= obter_se_consistir_regra_sae(6,cd_perfil_p);

		nr_seq_erro_w := gerar_erro_interv_sae(nr_seq_sae_w, nr_sequencia_p, 6, ie_liberar_w, null, null, nm_usuario_p, nr_seq_erro_w);
	end if;
end if;


commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_regra_sae_interv ( cd_perfil_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

