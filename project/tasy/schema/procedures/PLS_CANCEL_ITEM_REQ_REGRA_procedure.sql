-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancel_item_req_regra ( nr_seq_requisicao_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Verifiar a regra da funcao OPS - Cadastro de Regras > OPS - Atendimento > Requisicao > Requisicao On-line > Regra de cancelamento > Regra cancelamento automatico item e cancelar automaticamente o item da requisicao.
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:Performance.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_req_proc_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		integer;
qt_solicitado_w			pls_requisicao_proc.qt_solicitado%type;
nr_seq_segurado_w		bigint;
qt_reg_w			integer;
nr_seq_req_proc_ww		bigint;
ie_status_w			varchar(2);
nr_seq_regra_cancelamento_w	bigint;
nr_seq_motivo_cancel_w		bigint;
nr_seq_requisicao_w		bigint;
cd_procedimento_ww		bigint;
ds_texto_hist_w			varchar(1000);
ds_item_proc_w			varchar(255);
ie_tipo_processo_w		varchar(2);
ie_tipo_guia_w			varchar(20);
qt_reg_proc_w			bigint;
qt_reg_mat_w			bigint;
qt_req_auditoria_w		bigint;
ie_estagio_w			smallint;
qt_regra_auditoria_w		integer;	
nr_seq_auditoria_w		bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitado
	from	pls_requisicao_proc
	where	nr_seq_requisicao = nr_seq_requisicao_p;


C02 CURSOR FOR
	SELECT	distinct b.nr_sequencia
	from	pls_requisicao_proc 	a,
		pls_requisicao		b
	where	a.nr_seq_requisicao	= b.nr_sequencia
	and	b.nr_sequencia		<> nr_seq_requisicao_p
	and	a.cd_procedimento	= cd_procedimento_w
	and	a.ie_origem_proced	= ie_origem_proced_w
	and	a.qt_solicitado		= qt_solicitado_w
	and	b.nr_seq_segurado	= nr_seq_segurado_w
	and	b.ie_tipo_guia		= ie_tipo_guia_w
	and	not exists ( 	SELECT	1
				from	pls_execucao_req_item x
				where   x.nr_seq_requisicao = a.nr_seq_requisicao
				and	x.nr_seq_req_proc = a.nr_sequencia);
				
C03 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.ie_status,
		a.cd_procedimento
	from	pls_requisicao_proc a
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	cd_procedimento		= cd_procedimento_w
	and	ie_origem_proced	= ie_origem_proced_w
	and	qt_solicitado		= qt_solicitado_w
	and	not exists ( 	SELECT	1
				from	pls_execucao_req_item x
				where   x.nr_seq_requisicao = a.nr_seq_requisicao
				and	x.nr_seq_req_proc = a.nr_sequencia);


BEGIN

begin
	select	nr_seq_segurado,
		ie_tipo_processo,
		ie_tipo_guia
	into STRICT	nr_seq_segurado_w,
		ie_tipo_processo_w,
		ie_tipo_guia_w
	from	pls_requisicao
	where	nr_sequencia = nr_seq_requisicao_p;
exception
when others then
	nr_seq_segurado_w	:= 0;
	ie_tipo_processo_w	:= 'X';
	ie_tipo_guia_w		:= 'X';
end;

if (pls_obter_se_controle_estab('RE') = 'S') then
	select	count(1)
	into STRICT	qt_reg_w
	from	pls_regra_cancel_aut_req
	where	ie_aplicacao_regra 	= 2
	and	ie_situacao		= 'A'
	and (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento);
else
	select	count(1)
	into STRICT	qt_reg_w
	from	pls_regra_cancel_aut_req
	where	ie_aplicacao_regra 	= 2
	and	ie_situacao		= 'A';
end if;

if (qt_reg_w > 0) and (ie_tipo_processo_w <> 'I') then

	if (pls_obter_se_controle_estab('RE') = 'S') then
		select	count(1)
		into STRICT	qt_regra_auditoria_w
		from	pls_regra_cancel_aut_req
		where	ie_aplicacao_regra 	= 2
		and	ie_situacao		= 'A'
		and	ie_cancela_item_auditoria	= 'S'
		and (coalesce(ie_tipo_guia::text, '') = ''	or	ie_tipo_guia	= ie_tipo_guia_w)
		and (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento);
	else
		select	count(1)
		into STRICT	qt_regra_auditoria_w
		from	pls_regra_cancel_aut_req
		where	ie_aplicacao_regra 	= 2
		and	ie_situacao		= 'A'
		and	ie_cancela_item_auditoria	= 'S'
		and (coalesce(ie_tipo_guia::text, '') = ''	or	ie_tipo_guia	= ie_tipo_guia_w);
	end if;
	
	open C01;
	loop
	fetch C01 into	
		nr_seq_req_proc_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_solicitado_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin	
		open C02;
		loop
		fetch C02 into	
			nr_seq_requisicao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			qt_req_auditoria_w := 0;
			
			select	ie_estagio
			into STRICT	ie_estagio_w
			from	pls_requisicao
			where	nr_sequencia = nr_seq_requisicao_w;
			
			if (ie_estagio_w = 4) then
				select	count(1)
				into STRICT	qt_req_auditoria_w
				from	pls_auditoria
				where	nr_seq_requisicao = nr_seq_requisicao_w
				and	coalesce(dt_liberacao::text, '') = '';				

				if (qt_req_auditoria_w > 0) and (qt_regra_auditoria_w > 0) then
					-- o processo de auditoria desta requisicao ja foi iniciado !
					select	count(1)
					into STRICT	qt_req_auditoria_w
					from	pls_auditoria a,
						pls_auditoria_grupo b
					where	a.nr_seq_requisicao	= nr_seq_requisicao_w
					and	a.nr_sequencia		= b.nr_seq_auditoria
					and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '');	

					if (qt_req_auditoria_w = 0)then
						-- a analise desta requisicao ja foi assumida por um grupo de auditores !
						select	count(1)
						into STRICT	qt_req_auditoria_w
						from	pls_auditoria a,
							pls_auditoria_grupo b
						where	a.nr_seq_requisicao	= nr_seq_requisicao_w
						and	a.nr_sequencia		= b.nr_seq_auditoria
						and	(nm_usuario_exec IS NOT NULL AND nm_usuario_exec::text <> '');
						
						if (qt_req_auditoria_w = 0) then
							-- foi gerada notificacao pelo callcenter da analise
							select	count(1)
							into STRICT	qt_req_auditoria_w
							from	pls_auditoria a,
								pls_notificacao_atend b
							where	b.nr_seq_auditoria	= a.nr_sequencia
							and	a.nr_seq_requisicao	= nr_seq_requisicao_w;								
						end if;
					end if;
				end if;
			end if;
			
			nr_seq_auditoria_w := 0;
			open C03;
			loop
			fetch C03 into	
				nr_seq_req_proc_ww,
				ie_status_w,
				cd_procedimento_ww;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				if (pls_obter_se_controle_estab('RE') = 'S') then
					select	max(nr_sequencia),
						max(nr_seq_motivo_cancel)
					into STRICT	nr_seq_regra_cancelamento_w,
						nr_seq_motivo_cancel_w
					from	pls_regra_cancel_aut_req
					where	ie_aplicacao_regra	= 2
					and	ie_situacao	= 'A'
					and	((ie_status_w	= 'S' 	and	ie_cancela_item_requisicao	= 'S')
					or (ie_status_w	= 'P' 	and	ie_cancela_item_analise 	= 'S')
					or (ie_status_w	= 'A'	and 	ie_cancela_item_auditoria	= 'S'))
					and (coalesce(ie_tipo_guia::text, '') = ''	or	ie_tipo_guia			= ie_tipo_guia_w)
					and (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento);
				else
					select	max(nr_sequencia),
						max(nr_seq_motivo_cancel)
					into STRICT	nr_seq_regra_cancelamento_w,
						nr_seq_motivo_cancel_w
					from	pls_regra_cancel_aut_req
					where	ie_aplicacao_regra	= 2
					and	ie_situacao	= 'A'
					and	((ie_status_w	= 'S' 	and	ie_cancela_item_requisicao	= 'S')
					or (ie_status_w	= 'P' 	and	ie_cancela_item_analise 	= 'S')
					or (ie_status_w	= 'A'	and 	ie_cancela_item_auditoria	= 'S'))
					and (coalesce(ie_tipo_guia::text, '') = ''	or	ie_tipo_guia			= ie_tipo_guia_w);				
				end if;

				if (coalesce(nr_seq_regra_cancelamento_w,0) > 0) then	
					update	pls_requisicao_proc
					set	ie_status		= 'C',
						nr_seq_motivo_cancel	= nr_seq_motivo_cancel_w,
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_sequencia		= nr_seq_req_proc_ww;
					
					if (ie_estagio_w = 4) then
						update	pls_auditoria_item
						set	ie_status		= 'C',
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_seq_proc_origem	= nr_seq_req_proc_ww;						
						
						begin
							select	nr_seq_auditoria
							into STRICT	nr_seq_auditoria_w
							from	pls_auditoria_item
							where	nr_seq_proc_origem	= nr_seq_req_proc_ww;
						exception
						when others then
							nr_seq_auditoria_w := 0;
						end;
					end if;
					
					select	count(1)
					into STRICT	qt_reg_proc_w
					from	pls_requisicao_proc
					where	nr_seq_requisicao	= nr_seq_requisicao_w
					and	ie_status		<> 'C';

					select	count(1)
					into STRICT	qt_reg_mat_w
					from	pls_requisicao_mat
					where	nr_seq_requisicao	= nr_seq_requisicao_w
					and	ie_status		<> 'C';

					if	((qt_reg_proc_w + qt_reg_mat_w)	= 0) then
						update	pls_requisicao
						set	ie_status		= 'C',
							ie_estagio		= 3,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p
						where	nr_sequencia		= nr_seq_requisicao_w;					
						
						if (ie_estagio_w = 4) then
							if (qt_req_auditoria_w = 0) then
								CALL pls_desfazer_auditoria_req(nr_seq_requisicao_w);
							else
								update	pls_auditoria
								set	ie_status		= 'C',
									dt_liberacao		= clock_timestamp(),
									nr_seq_proc_interno	 = NULL,
									dt_atualizacao		= clock_timestamp(),
									nm_usuario		= nm_usuario_p
								where	nr_sequencia 		= nr_seq_auditoria_w;
							end if;
						end if;
					end if;

					ds_item_proc_w := Obter_Descricao_Procedimento(cd_procedimento_ww,ie_origem_proced_w);
					ds_texto_hist_w := 'O procedimento '|| cd_procedimento_ww || ' - '||ds_item_proc_w||' foi cancelado devido a regra de cancelamento automatico.'||chr(10)||
							'Motivo: '||pls_obter_desc_guia_mot_cancel(nr_seq_motivo_cancel_w)||chr(10)||
							'O mesmo procedimento se encontra na requisicao '|| nr_seq_requisicao_p||'.';
					CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',ds_texto_hist_w,null,nm_usuario_p);
				end if;
				end;
			end loop;
			close C03;
		
			end;
		end loop;
		close C02;		
		end;
	end loop;
	close C01;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancel_item_req_regra ( nr_seq_requisicao_p bigint, nm_usuario_p text) FROM PUBLIC;

