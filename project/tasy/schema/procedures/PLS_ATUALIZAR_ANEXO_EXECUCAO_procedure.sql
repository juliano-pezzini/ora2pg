-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_anexo_execucao ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_tipo_anexo_p pls_requisicao_proc.ie_tipo_anexo%type, nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, nr_seq_guia_mat_p pls_guia_plano_mat.nr_sequencia%type, nr_seq_req_proc_p pls_requisicao_proc.nr_sequencia%type, nr_seq_req_mat_p pls_requisicao_mat.nr_sequencia%type, nm_usuario_p text) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Passar as informações de anexo da requisição para a guia
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x  ] Tasy (Delphi/Java) [  x ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:  Esta rotina é utilizada no Execução do Tasy e do Portal,  também na finalização
da análise da execução na Gestão de análise de autorização.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_anexo_guia_w		pls_lote_anexo_guias_aut.nr_sequencia%type;
nr_seq_anexo_requisicao_w	pls_lote_anexo_guias_aut.nr_sequencia%type;
ie_anexo_opme_w          	pls_requisicao.ie_anexo_opme%type := 'N';
ie_anexo_quimioterapia_w	pls_requisicao.ie_anexo_quimioterapia%type := 'N';
ie_anexo_radioterapia_w  	pls_requisicao.ie_anexo_radioterapia%type := 'N';
qt_diagnostico_w		integer;
vl_material_w			pls_requisicao_mat.vl_material%type;
qt_anexo_radio_w		bigint;
ie_tipo_anexo_w			pls_lote_anexo_guias_aut.ie_tipo_anexo%type;

C01 CURSOR(	nr_seq_requisicao_pc	pls_requisicao.nr_sequencia%type,
		ie_tipo_anexo_pc	pls_requisicao_proc.ie_tipo_anexo%type ) FOR

	SELECT 	cd_ans, cd_cnes, cd_guia,
		cd_guia_prestador, cd_guia_referencia, cd_senha,
		cd_usuario_plano, ds_area_irradiada, ds_biometria,
		ds_email_prof_solic, ds_especificacao, ds_justificativa,
		ds_observacao, ds_procedimento_cirurgico, ds_quimioterapia,
		dt_autorizacao, dt_inicio_previsto, dt_quimioterapia, dt_radioterapia,
		dt_real_proc_cirurgico, dt_solicitacao, ie_recem_nascido,
		ie_sexo, ie_tipo_anexo,	nm_beneficiario,
		nm_profissional_solic, nr_campos, nr_ciclo_atual,
		nr_ciclo_previsto, nr_seq_lote_anexo, nr_sequencia, nr_telef_prof_solic,
		qt_altura, qt_campo_irradiacao, qt_dias_previsto,
		qt_dose_dia, qt_dose_total, qt_idade_benef,
		qt_intervalo_ciclo, qt_peso, qt_superficie_corporal,
		nr_dia_ciclo_atual
	from	pls_lote_anexo_guias_aut
	where	nr_seq_requisicao = nr_seq_requisicao_pc
	and	ie_tipo_anexo	  = ie_tipo_anexo_pc;



C02 CURSOR(	nr_seq_anexo_guia_pc	pls_lote_anexo_guias_aut.nr_sequencia%type ) FOR

	SELECT 	cd_diagnostico_imagem, cd_doenca, cd_finalidade_tratamento,
		ds_diagnostico, ds_observacao, ds_plano_terapeutico,
		dt_atualizacao, dt_atualizacao_nrec, dt_diagnostico,
		ie_capacidade_funcional, ie_classificacao, ie_estadia_tumor,
		ie_tipo_diagnostico, ie_tipo_quimioterapia,
		nm_usuario, nm_usuario_nrec, nr_seq_lote_anexo_guia,
		nr_sequencia, ie_tumor, ie_nodulo,
		ie_metastases
	from	pls_lote_anexo_diag_aut
	where	nr_seq_lote_anexo_guia = nr_seq_anexo_guia_pc;



C03 CURSOR(	nr_seq_anexo_guia_pc	pls_lote_anexo_guias_aut.nr_sequencia%type,
		nr_seq_req_proc_pc	pls_requisicao_proc.nr_sequencia%type) FOR

	SELECT 	cd_procedimento, cd_tipo_tabela, ds_procedimento,
		dt_prev_realizacao, ie_origem_proced,
		nr_seq_plano_proc, qt_solicitado
	from 	pls_lote_anexo_proc_aut
	where	nr_seq_lote_anexo_guia 	= nr_seq_anexo_guia_pc
	and	nr_seq_req_proc		= nr_seq_req_proc_pc;


C04 CURSOR(	nr_seq_anexo_guia_pc	pls_lote_anexo_guias_aut.nr_sequencia%type,
		nr_seq_req_mat_pc	pls_requisicao_mat.nr_sequencia%type) FOR

	SELECT cd_aut_funcionamento, cd_material, cd_ref_fabricante_imp,
		cd_tipo_tabela_imp, ds_material, ds_observacao,
		dt_prevista,ie_frequencia_dose, ie_opcao_fabricante,
		ie_via_administracao,
		nr_registro_anvisa, nr_seq_material, nr_seq_plano_mat,
		qt_autorizado, qt_solicitado, vl_unit_material_aut,
		vl_unit_material_solic, qt_unidade_medida, qt_dosagem_total
	from 	pls_lote_anexo_mat_aut
	where	nr_seq_lote_anexo_guia 	= nr_seq_anexo_guia_pc
	and	nr_seq_req_mat		= nr_seq_req_mat_pc;
BEGIN

ie_tipo_anexo_w	:= ie_tipo_anexo_p;

if (pls_obter_versao_tiss >= '3.03.00') and (coalesce(ie_tipo_anexo_w::text, '') = '') then
	select	count(1)
	into STRICT	qt_anexo_radio_w
	from 	pls_lote_anexo_guias_aut
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

	if (qt_anexo_radio_w > 0) then
		ie_tipo_anexo_w	:= 'RA';
	end if;
end if;

select	max(nr_sequencia)
into STRICT	nr_seq_anexo_guia_w
from	pls_lote_anexo_guias_aut
where	nr_seq_guia 	= nr_seq_guia_p
and	ie_tipo_anexo 	= ie_tipo_anexo_w;

--Verifica se já existe registro de anexo referente ao tipo de anexo passado para a rotina
if ( coalesce(nr_seq_anexo_guia_w::text, '') = '' ) then

	select	nextval('pls_lote_anexo_guias_aut_seq')
	into STRICT	nr_seq_anexo_guia_w
	;

	for	r_C01_w in C01( nr_seq_requisicao_p, ie_tipo_anexo_w ) loop

		nr_seq_anexo_requisicao_w := r_C01_w.nr_sequencia;

		insert into pls_lote_anexo_guias_aut(cd_ans, cd_cnes, nr_seq_guia,
			cd_guia_prestador, cd_guia_referencia, cd_senha,
			cd_usuario_plano, ds_area_irradiada, ds_biometria,
			ds_email_prof_solic, ds_especificacao, ds_justificativa,
			ds_observacao, ds_procedimento_cirurgico, ds_quimioterapia,
			dt_atualizacao, dt_atualizacao_nrec, dt_autorizacao,
			dt_inicio_previsto, dt_quimioterapia, dt_radioterapia,
			dt_real_proc_cirurgico, dt_solicitacao, ie_recem_nascido,
			ie_sexo, ie_status, ie_tipo_anexo,
			nm_beneficiario, nm_profissional_solic, nm_usuario,
			nm_usuario_nrec, nr_campos, nr_ciclo_atual,
			nr_ciclo_previsto, nr_sequencia, nr_telef_prof_solic,
			qt_altura, qt_campo_irradiacao, qt_dias_previsto,
			qt_dose_dia, qt_dose_total, qt_idade_benef,
			qt_intervalo_ciclo, qt_peso, qt_superficie_corporal,
			nr_seq_lote_anexo, nr_dia_ciclo_atual)
		values ( r_C01_w.cd_ans, r_C01_w.cd_cnes, nr_seq_guia_p,
			r_C01_w.cd_guia_prestador, nr_seq_guia_p, r_C01_w.cd_senha,
			r_C01_w.cd_usuario_plano, r_C01_w.ds_area_irradiada, r_C01_w.ds_biometria,
			r_C01_w.ds_email_prof_solic, r_C01_w.ds_especificacao, r_C01_w.ds_justificativa,
			r_C01_w.ds_observacao, r_C01_w.ds_procedimento_cirurgico, r_C01_w.ds_quimioterapia,
			clock_timestamp(), clock_timestamp(), r_C01_w.dt_autorizacao,
			r_C01_w.dt_inicio_previsto, r_C01_w.dt_quimioterapia, r_C01_w.dt_radioterapia,
			r_C01_w.dt_real_proc_cirurgico, r_C01_w.dt_solicitacao, r_C01_w.ie_recem_nascido,
			r_C01_w.ie_sexo, 1, r_C01_w.ie_tipo_anexo,
			r_C01_w.nm_beneficiario, r_C01_w.nm_profissional_solic, nm_usuario_p,
			nm_usuario_p, r_C01_w.nr_campos, r_C01_w.nr_ciclo_atual,
			r_C01_w.nr_ciclo_previsto, nr_seq_anexo_guia_w, r_C01_w.nr_telef_prof_solic,
			r_C01_w.qt_altura, r_C01_w.qt_campo_irradiacao, r_C01_w.qt_dias_previsto,
			r_C01_w.qt_dose_dia, r_C01_w.qt_dose_total, r_C01_w.qt_idade_benef,
			r_C01_w.qt_intervalo_ciclo, r_C01_w.qt_peso, r_C01_w.qt_superficie_corporal,
			r_C01_w.nr_seq_lote_anexo, r_C01_w.nr_dia_ciclo_atual);
	end loop;
else
	--Sequência do anexo gerado na Requisição, é necessário este valor para salvar os diagnósticos e os itens
	select 	max(nr_sequencia)
	into STRICT	nr_seq_anexo_requisicao_w
	from	pls_lote_anexo_guias_aut
	where	nr_seq_requisicao = nr_seq_requisicao_p
	and	ie_tipo_anexo	  = ie_tipo_anexo_w;

end if;

--Só lança os itens se o cabeçalho do anexo estiver gerado
if ( nr_seq_anexo_guia_w is  not null and (nr_seq_anexo_requisicao_w IS NOT NULL AND nr_seq_anexo_requisicao_w::text <> '') ) then

	--Gerar os diagnósticos na guia
	for	r_C02_w in C02( nr_seq_anexo_requisicao_w ) loop

		select	count(1)
		into STRICT	qt_diagnostico_w
		from	pls_lote_anexo_diag_aut
		where	nr_seq_lote_anexo_guia 	= nr_seq_anexo_guia_w
		and	ie_tipo_diagnostico  	= r_C02_w.ie_tipo_diagnostico
		and	cd_doenca		= r_C02_w.cd_doenca;

		/*Tratamento necessário por causa dos itens que são lançados duplicados na requisição, quando possuirem anexo e com data prevista diferente */

		if ( qt_diagnostico_w = 0 ) then
			insert into pls_lote_anexo_diag_aut(cd_diagnostico_imagem, cd_doenca, cd_finalidade_tratamento,
				ds_diagnostico, ds_observacao, ds_plano_terapeutico,
				dt_atualizacao, dt_atualizacao_nrec, dt_diagnostico,
				ie_capacidade_funcional, ie_classificacao, ie_estadia_tumor,
				ie_tipo_diagnostico, ie_tipo_quimioterapia,
				nm_usuario, nm_usuario_nrec, nr_seq_lote_anexo_guia,
				nr_sequencia, ie_tumor, ie_nodulo,
				ie_metastases)
			values (r_C02_w.cd_diagnostico_imagem, r_C02_w.cd_doenca, r_C02_w.cd_finalidade_tratamento,
				r_C02_w.ds_diagnostico, r_C02_w.ds_observacao, r_C02_w.ds_plano_terapeutico,
				clock_timestamp(), clock_timestamp(), r_C02_w.dt_diagnostico,
				r_C02_w.ie_capacidade_funcional, r_C02_w.ie_classificacao, r_C02_w.ie_estadia_tumor,
				r_C02_w.ie_tipo_diagnostico, r_C02_w.ie_tipo_quimioterapia,
				nm_usuario_p, nm_usuario_p, nr_seq_anexo_guia_w,
				nextval('pls_lote_anexo_diag_aut_seq'), r_C02_w.ie_tumor, r_C02_w.ie_nodulo,
				r_C02_w.ie_metastases);
		end if;
	end loop;

	for	r_C03_w in C03( nr_seq_anexo_requisicao_w, nr_seq_req_proc_p ) loop

		insert into pls_lote_anexo_proc_aut(cd_procedimento, cd_tipo_tabela, ds_procedimento,
			dt_atualizacao, dt_atualizacao_nrec, dt_prev_realizacao,
			ie_origem_proced, ie_status, nm_usuario,
			nm_usuario_nrec, nr_seq_plano_proc, nr_sequencia,
			qt_solicitado, nr_seq_lote_anexo_guia)
		values (r_C03_w.cd_procedimento, r_C03_w.cd_tipo_tabela, r_C03_w.ds_procedimento,
			clock_timestamp(), clock_timestamp(), r_C03_w.dt_prev_realizacao,
			r_C03_w.ie_origem_proced, 1, nm_usuario_p,
			nm_usuario_p, nr_seq_guia_proc_p, nextval('pls_lote_anexo_proc_aut_seq'),
			r_C03_w.qt_solicitado, nr_seq_anexo_guia_w );
	end loop;


	for	r_C04_w in C04( nr_seq_anexo_requisicao_w, nr_seq_req_mat_p ) loop

		insert into pls_lote_anexo_mat_aut(cd_aut_funcionamento, cd_material, cd_ref_fabricante_imp,
			cd_tipo_tabela_imp, ds_material, ds_observacao,
			dt_atualizacao, dt_atualizacao_nrec, dt_prevista,
			ie_frequencia_dose, ie_opcao_fabricante, ie_status,
			ie_via_administracao, nm_usuario, nm_usuario_nrec,
			nr_registro_anvisa, nr_seq_material, nr_seq_plano_mat,
			nr_sequencia, qt_autorizado, qt_solicitado,
			vl_unit_material_aut, vl_unit_material_solic, nr_seq_lote_anexo_guia,
			qt_unidade_medida, qt_dosagem_total)
		values (r_C04_w.cd_aut_funcionamento, r_C04_w.cd_material, r_C04_w.cd_ref_fabricante_imp,
			r_C04_w.cd_tipo_tabela_imp, r_C04_w.ds_material, r_C04_w.ds_observacao,
			clock_timestamp(), clock_timestamp(), r_C04_w.dt_prevista,
			r_C04_w.ie_frequencia_dose, r_C04_w.ie_opcao_fabricante, 1,
			r_C04_w.ie_via_administracao, nm_usuario_p, nm_usuario_p,
			r_C04_w.nr_registro_anvisa, r_C04_w.nr_seq_material, nr_seq_guia_mat_p ,
			nextval('pls_lote_anexo_mat_aut_seq'), r_C04_w.qt_autorizado, r_C04_w.qt_solicitado,
			r_C04_w.vl_unit_material_aut, r_C04_w.vl_unit_material_solic, nr_seq_anexo_guia_w,
			r_C04_w.qt_unidade_medida, r_C04_w.qt_dosagem_total);
	end loop;

	/* Verifica o tipo de anexo que esta sendo executado
	OP - OPME
	QU - Quimioterapia
	RA - Radioterapia
	*/
	if (nr_seq_anexo_requisicao_w IS NOT NULL AND nr_seq_anexo_requisicao_w::text <> '') then
		if ( ie_tipo_anexo_w = 'OP' ) then
			ie_anexo_opme_w := 'S';
		elsif ( ie_tipo_anexo_w = 'QU' ) then
			ie_anexo_quimioterapia_w := 'S';
		elsif ( ie_tipo_anexo_w = 'RA' ) then
			ie_anexo_radioterapia_w	:= 'S';
		end if;

		/* Atualizar o valor do material referente ao anexo de OPME  */

		if ( (nr_seq_guia_mat_p IS NOT NULL AND nr_seq_guia_mat_p::text <> '') and ie_anexo_opme_w = 'S' ) then
			select	max(vl_material)
			into STRICT	vl_material_w
			from	pls_requisicao_mat
			where	nr_sequencia  = nr_seq_req_mat_p;

			update	pls_guia_plano_mat
			set	vl_material 	= vl_material_w
			where	nr_sequencia	= nr_seq_guia_mat_p;
		end if;

		--Atualizar os tipos de anexo na guia
		update 	pls_guia_plano
		set	ie_anexo_guia    	= 'S',
			ie_anexo_opme		= CASE WHEN  ie_anexo_opme_w='S' THEN  'S'  ELSE ie_anexo_opme END ,
			ie_anexo_quimioterapia	= CASE WHEN  ie_anexo_quimioterapia_w='S' THEN  'S'  ELSE ie_anexo_quimioterapia END ,
			ie_anexo_radioterapia 	= CASE WHEN  ie_anexo_radioterapia_w='S' THEN  'S'  ELSE ie_anexo_radioterapia END
		where	nr_sequencia		= nr_seq_guia_p;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_anexo_execucao ( nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ie_tipo_anexo_p pls_requisicao_proc.ie_tipo_anexo%type, nr_seq_guia_proc_p pls_guia_plano_proc.nr_sequencia%type, nr_seq_guia_mat_p pls_guia_plano_mat.nr_sequencia%type, nr_seq_req_proc_p pls_requisicao_proc.nr_sequencia%type, nr_seq_req_mat_p pls_requisicao_mat.nr_sequencia%type, nm_usuario_p text) FROM PUBLIC;

