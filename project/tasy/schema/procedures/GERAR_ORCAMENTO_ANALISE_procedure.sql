-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_orcamento_analise ( nr_seq_analise_p bigint, nr_seq_orcamento_p bigint, ie_matmed_p text, ie_procedimento_p text, ie_taxa_diaria_p text, ie_arredondar_p text, ie_tipo_quantidade_p bigint, nm_usuario_p text) AS $body$
DECLARE


					
ie_proc_mat_w		bigint;
cd_item_w		bigint;
ie_origem_proced_w	bigint;
qt_frequencia_w		double precision;
vl_preco_medio_w	double precision;					
nr_sequencia_w		bigint;
inserir_w		boolean;
nr_seq_exame_w	analise_conta_item.nr_seq_exame%type;
nr_seq_proc_interno_w	analise_conta_item.nr_seq_proc_interno%type;
c01 CURSOR FOR
	SELECT	1 ie_proc_mat,
		cd_procedimento,
		ie_origem_proced,
		sum(CASE WHEN ie_tipo_quantidade_p=0 THEN qt_media WHEN ie_tipo_quantidade_p=1 THEN QT_MEDIANA WHEN ie_tipo_quantidade_p=2 THEN QT_MODA  ELSE qt_media END ),
		0,
		nr_seq_exame,
		nr_seq_proc_interno
	from	analise_conta_item
	where	nr_sequencia	= nr_seq_analise_p
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
	group by cd_procedimento,
		ie_origem_proced,
		nr_seq_exame,
		nr_seq_proc_interno
	
union all

	SELECT	2 ie_proc_mat,
		cd_material,
		null,
		sum(CASE WHEN ie_tipo_quantidade_p=0 THEN qt_media WHEN ie_tipo_quantidade_p=1 THEN QT_MEDIANA WHEN ie_tipo_quantidade_p=2 THEN QT_MODA  ELSE qt_media END ),
		0,
		nr_seq_exame,
		nr_seq_proc_interno
	from	analise_conta_item
	where	nr_sequencia	= nr_seq_analise_p
	and	(cd_material IS NOT NULL AND cd_material::text <> '')
	group by cd_material,
		nr_seq_exame,
		nr_seq_proc_interno;

BEGIN

open C01;
loop
fetch C01 into	
	ie_proc_mat_w,
	cd_item_w,
	ie_origem_proced_w,
	qt_frequencia_w,
	vl_preco_medio_w,
	nr_seq_exame_w,
	nr_seq_proc_interno_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (qt_frequencia_w	< 0) then
		qt_frequencia_w	:= 1;
	end if;
	if (ie_arredondar_p	= 'S') then
		qt_frequencia_w	:= round(qt_frequencia_w);
	end if;
	
	if (ie_proc_mat_w		= 1) then
		inserir_w	:=  ((ie_procedimento_p		= 'S') and (OBTER_CLASSIFICACAO_PROCED(cd_item_w,ie_origem_proced_w,'C')= 1)) or
				    ((ie_taxa_diaria_p		= 'S') and (OBTER_CLASSIFICACAO_PROCED(cd_item_w,ie_origem_proced_w,'C')<> 1));
	
		
		if (inserir_w) then
			select	nextval('orcamento_paciente_proc_seq')
			into STRICT	nr_sequencia_w
			;
			
			insert	into orcamento_paciente_proc(	nr_sequencia_orcamento,
								cd_procedimento,
								ie_origem_proced,
								qt_procedimento,
								dt_atualizacao,
								nm_usuario,
								vl_procedimento,
								ie_valor_informado,
								nr_sequencia,
								nr_seq_exame,
								nr_seq_proc_interno)
						values (	nr_seq_orcamento_p,
								cd_item_w,
								ie_origem_proced_w,
								qt_frequencia_w,
								clock_timestamp(),
								nm_usuario_p,
								vl_preco_medio_w,
								'N',
								nr_sequencia_w,
								nr_seq_exame_w,
								nr_seq_proc_interno_w);
		end if;
	elsif (ie_proc_mat_w		= 2) then
		inserir_w	:= (ie_matmed_p	= 'S');
		if (inserir_w) then
			select	nextval('orcamento_paciente_mat_seq')
			into STRICT	nr_sequencia_w
			;
			insert into ORCAMENTO_PACIENTE_MAT(	nr_sequencia_orcamento,
								cd_material,
								qt_material,
								vl_material,
								dt_atualizacao,
								nm_usuario,
								ie_valor_informado,
								nr_sequencia)
					values (	nr_seq_orcamento_p,
								cd_item_w,
								qt_frequencia_w,
								vl_preco_medio_w,
								clock_timestamp(),
								nm_usuario_p,
								'N',
								nr_sequencia_w);
		end if;
							
		
	end if;
	
	end;
end loop;
close C01;
CALL calcular_orcamento_paciente(nr_seq_orcamento_p,nm_usuario_p,WHEB_USUARIO_PCK.get_cd_estabelecimento);
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_orcamento_analise ( nr_seq_analise_p bigint, nr_seq_orcamento_p bigint, ie_matmed_p text, ie_procedimento_p text, ie_taxa_diaria_p text, ie_arredondar_p text, ie_tipo_quantidade_p bigint, nm_usuario_p text) FROM PUBLIC;

