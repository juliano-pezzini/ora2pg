-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_hist_email ( ds_assunto_p pls_proc_jud_hist_email.ds_assunto%type, ds_email_destino_p pls_proc_jud_hist_email.ds_email_destino%type, nr_seq_proc_judic_p pls_proc_jud_hist_email.nr_seq_proc_judic%type, ds_email_p pls_proc_jud_hist_email.ds_email%type, nm_usuario_p pls_proc_jud_hist_email.nm_usuario%type, cd_estabelecimento_p pls_proc_jud_hist_email.cd_estabelecimento%type) AS $body$
DECLARE


							
/* ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Envio de e-mail e insercao de historico de envio, partindo da funcao OPS - Processo Judicial
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_email_origem_w varchar(100) := obter_valor_param_usuario(1337,11,Obter_Perfil_Ativo,nm_usuario_p,cd_estabelecimento_p);


BEGIN

if coalesce(ds_email_origem_w::text, '') = '' then
  select	max(ds_email)
  into STRICT	ds_email_origem_w
  from	usuario
  where	nm_usuario = nm_usuario_p;
end if;

-- envia o e-mail de acordo com o registro salvo
CALL enviar_email( ds_assunto_p       	=> ds_assunto_p,
              ds_mensagem_p      	=> ds_email_p,
              ds_email_origem_p  	=> ds_email_origem_w,
              ds_email_destino_p 	=> ds_email_destino_p,
              nm_usuario_p       	=> nm_usuario_p,
              ie_prioridade_p    	=> 'A');

begin
insert  into pls_proc_jud_hist_email(	nr_sequencia,cd_estabelecimento,ds_assunto,
                                      ds_email_destino,ds_email,nr_seq_proc_judic,
                                      dt_atualizacao,nm_usuario,dt_atualizacao_nrec,
                                      nm_usuario_nrec, dt_envio)
                              values ( nextval('pls_proc_jud_hist_email_seq'), cd_estabelecimento_p, ds_assunto_p, 
                                      ds_email_destino_p, ds_email_p, nr_seq_proc_judic_p, 
                                      clock_timestamp(), nm_usuario_p, clock_timestamp(),
                                      nm_usuario_p, clock_timestamp());
exception
when others then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1145722,'SQLERRM='||sqlerrm || chr(13) || chr(10) || chr(13) || chr(10) || 'StackTrace: ' || dbms_utility.format_error_backtrace);
end;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_hist_email ( ds_assunto_p pls_proc_jud_hist_email.ds_assunto%type, ds_email_destino_p pls_proc_jud_hist_email.ds_email_destino%type, nr_seq_proc_judic_p pls_proc_jud_hist_email.nr_seq_proc_judic%type, ds_email_p pls_proc_jud_hist_email.ds_email%type, nm_usuario_p pls_proc_jud_hist_email.nm_usuario%type, cd_estabelecimento_p pls_proc_jud_hist_email.cd_estabelecimento%type) FROM PUBLIC;

