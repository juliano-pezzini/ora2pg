-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_renovacao_carteira ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


qt_meses_renovacao_contrato_w	pls_carteira_renovacao.qt_meses_renovacao%type	:= 0;
qt_meses_regra_operadora_w	pls_param_regra_carteira.qt_dias_renovacao%type	:= 0;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ie_gerar_validade_cartao_w	pls_parametros.ie_gerar_validade_cartao%type;
dt_adesao_w			pls_segurado.dt_contratacao%type;
dt_validade_carteira_w		timestamp;
qt_meses_renovacao_w		bigint	:= 0;
ie_tipo_contrato_w		varchar(2);
ie_sem_vencimento_w		varchar(10);
ie_altera_validade_w		varchar(10) := 'N';
ie_titularidade_w		varchar(10);
ie_limite_dependencia_w		varchar(10);
dt_fim_dependencia_w		timestamp;
qt_registros_w			bigint;
nr_seq_titular_w		bigint;
ie_renovacao_cartao_dt_atual_w	varchar(10);
ie_venc_cart_fim_mes_w		varchar(10);
ie_dependente_venc_titular_w	varchar(10);
dt_base_calculo_cart_w		timestamp;
dt_rescisao_w			timestamp;
dt_validade_carteira_tit_w	timestamp;
nr_seq_seg_carteira_w		bigint;
nr_via_cartao_w			bigint;
ie_tipo_segurado_w		varchar(10);
ie_venc_cartao_rescisao_w	varchar(1);
dt_validade_w			timestamp;
dt_contrato_w			timestamp;
dt_base_carteira_w		timestamp;
dt_validade_cart_param_int_w	pls_parametros.dt_base_validade_carteira%type;
dt_validade_atual_w		pls_segurado_carteira.dt_validade_carteira%type;
dt_rescisao_programada_w	timestamp;

C01 CURSOR FOR
	SELECT	max(qt_meses_renovacao),
		max(ie_sem_vencimento),
		max(ie_limite_dependencia),
		max(ie_dependente_venc_titular)
	from	pls_carteira_renovacao
	where	nr_seq_contrato				= nr_seq_contrato_p
	and	coalesce(ie_tipo_renovacao,ie_opcao_p)	= ie_opcao_p
	and	((coalesce(ie_titularidade,'A')		= ie_titularidade_w) or (coalesce(ie_titularidade,'A') = 'A'))
	and	((coalesce(ie_limite_dependencia,'N')	= 'S' and (dt_fim_dependencia_w IS NOT NULL AND dt_fim_dependencia_w::text <> '')) or (coalesce(ie_limite_dependencia,'N') = 'N'))
	order by coalesce(ie_tipo_renovacao, ' ');

C02 CURSOR FOR
	SELECT	qt_dias_renovacao,
		coalesce(ie_sem_vencimento,'N'),
		ie_limite_dependencia,
		ie_dependente_venc_titular
	from	pls_param_regra_carteira
	where	coalesce(ie_tipo_renovacao,ie_opcao_p)	= ie_opcao_p
	and	((ie_tipo_contrato	= ie_tipo_contrato_w) or (ie_tipo_contrato = 'A'))
	and	((ie_contrato		= 'O') or (coalesce(ie_contrato::text, '') = ''))
	and	((coalesce(ie_titularidade,'A')	= ie_titularidade_w) or (coalesce(ie_titularidade,'A') = 'A'))
	and	((ie_tipo_segurado	= ie_tipo_segurado_w) or (coalesce(ie_tipo_segurado::text, '') = ''))
	order by coalesce(ie_tipo_renovacao, ' '),
		ie_tipo_contrato;


BEGIN

select	cd_estabelecimento,
	dt_contrato,
	dt_base_carteira,
	dt_base_validade_carteira
into STRICT	cd_estabelecimento_w,
	dt_contrato_w,
	dt_base_carteira_w,
	dt_validade_cart_param_int_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_p;

select	dt_contratacao,
	CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
	CASE WHEN coalesce(cd_estabelecimento_w::text, '') = '' THEN cd_estabelecimento  ELSE cd_estabelecimento_w END ,
	dt_rescisao,
	nr_seq_titular,
	ie_tipo_segurado
into STRICT	dt_adesao_w,
	ie_titularidade_w,
	cd_estabelecimento_w,
	dt_rescisao_w,
	nr_seq_titular_w,
	ie_tipo_segurado_w
from	pls_segurado
where	nr_sequencia	= nr_seq_segurado_p;

select	ie_gerar_validade_cartao,
	ie_renovacao_cartao_dt_atual,
	ie_venc_cart_fim_mes,
	coalesce(ie_venc_cartao_rescisao,'N'),
	coalesce(coalesce(dt_validade_cart_param_int_w,dt_base_validade_carteira),'B')
into STRICT	ie_gerar_validade_cartao_w,
	ie_renovacao_cartao_dt_atual_w,
	ie_venc_cart_fim_mes_w,
	ie_venc_cartao_rescisao_w,
	dt_validade_cart_param_int_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_w;

begin
select	max(dt_validade_carteira),
	max(nr_sequencia),
	max(nr_via_solicitacao)
into STRICT	dt_validade_atual_w,
	nr_seq_seg_carteira_w,
	nr_via_cartao_w
from	pls_segurado_carteira
where	nr_seq_segurado		= nr_seq_segurado_p;
exception
when others then
	dt_validade_atual_w	:= clock_timestamp();
	nr_seq_seg_carteira_w	:= null;
end;

dt_validade_carteira_w	:= dt_validade_atual_w;

dt_base_calculo_cart_w	:= dt_adesao_w;

-- Caso nao existir data de validade, ou a data de validade seja conforme data e ano do contrato, deve sempre gerar com a data base do contrato
if	((coalesce(dt_validade_carteira_w::text, '') = '') or (dt_validade_cart_param_int_w = 'A')) then
	dt_validade_carteira_w := pls_obter_validade_cart_benef(dt_adesao_w, dt_contrato_w, dt_base_carteira_w, dt_validade_cart_param_int_w, cd_estabelecimento_w);
	
	if (coalesce(dt_validade_carteira_w::text, '') = '') then
		dt_validade_carteira_w	:= clock_timestamp();
	end if;
end if;

-- aaschlote 28/05/2012 - OS 453034 - Caso o tipo venha da origem de via adicional a contagem de dias deve ser atraves da data atual
if (ie_opcao_p in ('V','R')) and (ie_renovacao_cartao_dt_atual_w	= 'S') then
	dt_base_calculo_cart_w	:= clock_timestamp();
end if;

dt_fim_dependencia_w	:= pls_obter_dt_limite_depend(nr_seq_segurado_p);

-- Verificar na funcao OPS - Gestao de Operadoras/Parametros da OPS, na pasta Contratos e Beneficiario, se pode gerar a validade da carteira
if (coalesce(ie_gerar_validade_cartao_w,'S')	= 'S') then
	open C01;
	loop
	fetch C01 into
		qt_meses_renovacao_contrato_w,
		ie_sem_vencimento_w,
		ie_limite_dependencia_w,
		ie_dependente_venc_titular_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
	
	ie_sem_vencimento_w		:= coalesce(ie_sem_vencimento_w,'N');
	ie_limite_dependencia_w		:= coalesce(ie_limite_dependencia_w,'N');
	ie_dependente_venc_titular_w	:= coalesce(ie_dependente_venc_titular_w,'N');
	
	-- aaschlote 12/09/2011 - Verifica se possui dias para renovacao ou sera nao gera renovacao
	if (coalesce(qt_meses_renovacao_contrato_w,-1) <> -1) or (ie_sem_vencimento_w = 'S') or (ie_limite_dependencia_w = 'S') or (ie_dependente_venc_titular_w = 'S') then
		qt_meses_renovacao_w	:= qt_meses_renovacao_contrato_w;
	else
		begin
		select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END
		into STRICT	ie_tipo_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_p;
		exception
		when others then
			ie_tipo_contrato_w	:= null;
		end;
		
		open C02;
		loop
		fetch C02 into
			qt_meses_regra_operadora_w,
			ie_sem_vencimento_w,
			ie_limite_dependencia_w,
			ie_dependente_venc_titular_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
		
		qt_meses_renovacao_w	:= qt_meses_regra_operadora_w;
	end if;
	
	if (ie_limite_dependencia_w = 'S') then
		dt_validade_carteira_w	:= dt_fim_dependencia_w;
		ie_altera_validade_w	:= 'S';
	elsif (ie_dependente_venc_titular_w = 'S') and (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then
		begin
		select	max(dt_validade_carteira)
		into STRICT	dt_validade_carteira_tit_w
		from	pls_segurado_carteira
		where	nr_seq_segurado	= nr_seq_titular_w;
		exception
		when others then
			dt_validade_carteira_tit_w	:= clock_timestamp();
		end;
		
		dt_validade_carteira_w	:= dt_validade_carteira_tit_w;
		ie_altera_validade_w	:= 'S';
	else
		if (coalesce(qt_meses_renovacao_w,0) <> 0) then
			if (ie_venc_cartao_rescisao_w = 'S') and (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
				dt_validade_carteira_w	:= dt_rescisao_w;
			elsif (ie_opcao_p in ('V','R')) and (ie_renovacao_cartao_dt_atual_w	= 'S') then
				dt_validade_carteira_w	:= dt_base_calculo_cart_w + qt_meses_renovacao_w;
			else
				dt_validade_carteira_w	:= dt_validade_carteira_w + qt_meses_renovacao_w;
			
				while(trunc(dt_base_calculo_cart_w,'dd') >= trunc(dt_validade_carteira_w,'dd')) loop
					dt_validade_carteira_w	:= dt_validade_carteira_w + qt_meses_renovacao_w;
				end loop;
				
				if (dt_validade_cart_param_int_w = 'A') then
					while(trunc(dt_validade_atual_w,'dd') >= trunc(dt_validade_carteira_w,'dd')) loop
						dt_validade_carteira_w	:= dt_validade_carteira_w + qt_meses_renovacao_w;
					end loop;
				end if;
			end if;
			
			ie_altera_validade_w	:= 'S';	
			if (ie_venc_cart_fim_mes_w  = 'S') then
				dt_validade_carteira_w	:= last_day(dt_validade_carteira_w);
			end if;
		elsif (coalesce(qt_meses_renovacao_w,0) = 0) and (ie_sem_vencimento_w = 'S') then
			dt_validade_carteira_w	:= null;
			ie_altera_validade_w	:= 'S';
		end if;
	end if;
	
	if (ie_altera_validade_w	= 'S') then
		if (dt_validade_carteira_w IS NOT NULL AND dt_validade_carteira_w::text <> '') and (ie_opcao_p <> 'A') and (dt_validade_cart_param_int_w <> 'B') then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_segurado		d,
				pls_segurado_carteira	c,
				pls_carteira_vencimento	b,
				pls_contrato		e,
				pls_lote_carteira	a
			where	c.nr_seq_segurado	= d.nr_sequencia
			and	b.nr_seq_seg_carteira	= c.nr_sequencia
			and	b.nr_seq_lote		= a.nr_sequencia
			and	d.nr_seq_contrato	= e.nr_sequencia
			and	e.nr_sequencia		= nr_seq_contrato_p
			and	a.ie_situacao		= 'D'
			and	dt_validade_carteira_w between a.dt_inicial and a.dt_final  LIMIT 1;
			
			-- aaschlote 24/05/2012 - OS - 444827 - Caso possuir um beneficiario no contrato que tenha feito vencimento no perioro da validade entao adiciona mais quantidade de dias
			if (qt_registros_w > 0) and (coalesce(qt_meses_renovacao_w,0) <> 0) then
				dt_validade_carteira_w	:= dt_validade_carteira_w + qt_meses_renovacao_w;
				
				if (ie_venc_cartao_rescisao_w = 'S') and (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
					dt_validade_carteira_w	:= dt_rescisao_w;
				end if;
				
				if (ie_venc_cart_fim_mes_w  = 'S') then
					dt_validade_carteira_w	:= last_day(dt_validade_carteira_w);
				end if;
			end if;
		end if;
		
		-- aaschlote 08/08/20121 OS - 478735 - Nao permitir que a validade seja maior que a rescisao do beneficiario
		if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') and (dt_validade_carteira_w IS NOT NULL AND dt_validade_carteira_w::text <> '') and (dt_validade_carteira_w > dt_rescisao_w) then
			dt_validade_carteira_w	:= dt_rescisao_w;
		end if;
		
		-- Verificar se existe resisao programada
		begin
		dt_rescisao_programada_w	:= pls_obter_data_rescisao_seg(nr_seq_segurado_p, ie_venc_cartao_rescisao_w, 'S');
		exception
		when others then
			dt_rescisao_programada_w	:= null;
		end;
		if (dt_rescisao_programada_w IS NOT NULL AND dt_rescisao_programada_w::text <> '') and (dt_rescisao_programada_w < dt_validade_carteira_w) then
			dt_validade_carteira_w	:= dt_rescisao_programada_w;
		end if;	
		
		update	pls_segurado_carteira
		set	dt_validade_carteira	= dt_validade_carteira_w,
			ie_situacao 		=  CASE WHEN ie_opcao_p='A' THEN ie_situacao  ELSE 'P' END ,
			nm_usuario 		= nm_usuario_p,
			dt_atualizacao 		= clock_timestamp()
		where	nr_seq_segurado		= nr_seq_segurado_p;
		
		if (nr_seq_seg_carteira_w IS NOT NULL AND nr_seq_seg_carteira_w::text <> '') then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_segurado_cart_estagio
			where	nr_seq_cartao_seg	= nr_seq_seg_carteira_w
			and	nr_via			= nr_via_cartao_w
			and	ie_estagio_emissao	= '1'
			and	dt_validade_carteira	<> dt_validade_carteira_w  LIMIT 1;
			
			if (qt_registros_w > 0) then
				update	pls_segurado_cart_estagio
				set	dt_validade_carteira	= dt_validade_carteira_w
				where	nr_seq_cartao_seg	= nr_seq_seg_carteira_w
				and	nr_via			= nr_via_cartao_w
				and	ie_estagio_emissao	= '1'
				and	dt_validade_carteira	<> dt_validade_carteira_w;
			end if;
		end if;
	end if;
	
	--OS 274241 aaschlote  - 11/12/2010 - Ao gerar a renovacao, atualiar a trilha do cartao
	CALL pls_atualizar_trilha_cartao(nr_seq_segurado_p,nm_usuario_p);
end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_renovacao_carteira ( nr_seq_contrato_p bigint, nr_seq_segurado_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

