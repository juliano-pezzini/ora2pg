-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_proc_analise ( cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, dt_procedimento_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, ie_via_acesso_p text, cd_guia_p text, ie_tipo_guia_p text, nr_seq_conta_p bigint, nr_seq_benef_p bigint, ds_medicos_p text, ds_partic_p text, nm_usuario_p text, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_conta_princ_p bigint, ie_comitar_p text, nr_seq_grupo_atual_p bigint, tx_item_p bigint, cd_procedimento_imp_p bigint, ds_procedimento_imp_p text, nr_seq_item_criado_p INOUT bigint) AS $body$
DECLARE


nr_seq_proc_w			bigint;
dt_procedimento_w		timestamp;
ds_medicos_w			varchar(255);
ds_partic_w			varchar(255);
cd_medico_w			bigint;
cd_partic_w			bigint;
ds_partic_ww			varchar(255);
nr_seq_partic_w			bigint;
nr_seq_conselho_w		bigint;
nr_seq_cbo_saude_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_item_criado_w		bigint;
ds_observacao_w			varchar(255);
ds_cbo_prest_w			varchar(255);
ds_cbo_part_w			varchar(255);
cd_cbo_prest_w			varchar(255);
cd_cbo_part_w			varchar(255);
ie_tipo_despesa_w		varchar(1);
ie_origem_analise_w		smallint;
nr_seq_grau_partic_w		bigint;
nr_seq_prestador_w		bigint;
uf_conselho_w 			pls_proc_participante.uf_conselho%type;
ie_tipo_segurado_w		varchar(10);
ie_calculo_pacote_w		varchar(2);
ie_atualiza_apresentado_w	varchar(1);
vl_total_procedimento_w		double precision;
vl_procedimento_imp_w		double precision;
ie_valor_informado_w		varchar(1) := 'N';
ie_geracao_pos_estab_w		varchar(1);
nr_seq_log_exec_w		pls_cta_log_exec.nr_sequencia%type;
/*Diego 02/05/2011 - OS 310634
    Rotina que tem por obejetivo criar na conta médica o procedimento inserido pelo auditor durante o processo de auditoria.*/
C01 CURSOR FOR
	SELECT	cd_medico,
		nr_seq_cbo_saude,
		nr_seq_grau_partic,
		nr_seq_prestador
	from	w_pls_proc_participante
	where	nr_seq_analise = nr_seq_analise_p;
	

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_conta_proc
	where	nr_seq_conta		= nr_seq_conta_w
	and	coalesce(ie_status,'U')	in ('U','C');


BEGIN
--obtem a seq da conta proc
select	nextval('pls_conta_proc_seq')
into STRICT	nr_seq_proc_w
;

if (coalesce(nr_seq_conta_p,0) = 0) then
	/*Obtem a conta principal do tipo de guia passada*/

	select	min(nr_sequencia)
	into STRICT	nr_seq_conta_w
	from	pls_conta
	where	nr_seq_analise	= nr_seq_analise_p
	and	ie_tipo_guia 	= ie_tipo_guia_p
	and	nr_seq_segurado = nr_seq_benef_p;
else
	nr_seq_conta_w := nr_seq_conta_p;
end if;

update	pls_conta_proc
set	ie_status = 'A'
where	nr_seq_conta = nr_seq_conta_w
and	ie_status 	<> 'D';

select	coalesce(dt_procedimento_p, dt_emissao),
	ie_tipo_segurado
into STRICT	dt_procedimento_w,
	ie_tipo_segurado_w
from	pls_conta
where	nr_sequencia = nr_seq_conta_w;

if (coalesce(vl_total_apres_p,0) > 0) then
	ie_valor_informado_w := 'S';
end if;

/*Criar o procedimento na conta médica*/

insert into pls_conta_proc(nr_sequencia, cd_procedimento, ie_origem_proced,
	 qt_procedimento, dt_procedimento, ie_via_acesso,
	 nr_seq_conta, nm_usuario, nm_usuario_nrec,
	 dt_atualizacao, dt_atualizacao_nrec, ie_situacao,
	 ie_status, qt_procedimento_imp, tx_item,
	 dt_inicio_proc, dt_fim_proc, cd_procedimento_imp,
	 ds_procedimento_imp, vl_unitario_imp, vl_procedimento_imp,
	 ie_valor_informado, ie_vl_apresentado_sistema	)
values (nr_seq_proc_w, cd_procedimento_p, ie_origem_proced_p,
	 0, dt_procedimento_w, ie_via_acesso_p,
	 nr_seq_conta_w, nm_usuario_p, nm_usuario_p,
	 clock_timestamp(), clock_timestamp(), 'D',
	 'U', qt_procedimento_p,tx_item_p,
	 dt_inicio_p, dt_fim_p, cd_procedimento_imp_p,
	 ds_procedimento_imp_p, vl_uni_apres_p, vl_total_apres_p,
	 ie_valor_informado_w, 'N');

CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_proc_w, nm_usuario_p);
CALL pls_cta_proc_mat_regra_pck.gera_seq_tiss_proc(nr_seq_proc_w, null, null, nr_seq_conta_w, nm_usuario_p);

open C01;
loop
fetch C01 into
	cd_medico_w,
	nr_seq_cbo_saude_w,
	nr_seq_grau_partic_w,
	nr_seq_prestador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	if (cd_medico_w > 0) then
		uf_conselho_w 		:= obter_dados_medico(cd_medico_w, 'UFCRM');
		nr_seq_conselho_w 	:= pls_obter_seq_conselho_prof(cd_medico_w);	
	end if;
	
	insert into pls_proc_participante(nr_sequencia , dt_atualizacao, nm_usuario,
		dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_proc,
		cd_medico, nr_seq_grau_partic, uf_conselho,
		nr_seq_cbo_saude, nr_seq_conselho, nr_seq_prestador,
		ie_status)
	values (nextval('pls_proc_participante_seq'), clock_timestamp(), nm_usuario_p,
		clock_timestamp(), nm_usuario_p, nr_seq_proc_w,
		cd_medico_w, nr_seq_grau_partic_w, uf_conselho_w,
		nr_seq_cbo_saude_w, nr_seq_conselho_w, nr_seq_prestador_w,
		'A');
	end;
end loop;
close C01;

select	max(ie_tipo_despesa)
into STRICT	ie_tipo_despesa_w
from	pls_conta_proc
where	nr_sequencia = nr_seq_proc_w;

begin
select	coalesce(max(ie_calculo_pacote),'P'),
	coalesce(ie_atualizar_valor_apresent,'N'),
	coalesce(max(ie_geracao_pos_estabelecido),'F')
into STRICT	ie_calculo_pacote_w,
	ie_atualiza_apresentado_w,
	ie_geracao_pos_estab_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_calculo_pacote_w		:= 'P';
	ie_atualiza_apresentado_w	:= 'N';
end;
--Abrir os lançamentos dos procedimentos conforme as regras por quantidade de execução 
if (pls_util_cta_pck.pls_usa_rn_qtde_exec_regra = 'S') then
	nr_seq_log_exec_w := pls_cta_processo_pck.executa_processo(	null, null, null, nr_seq_conta_p, null, null, null, null, '14,', null, nm_usuario_p, cd_estabelecimento_p, null, nr_seq_log_exec_w);
else					

	--Abrir os lançamentos dos procedimentos conforme as regras por quantidade de execução 
	CALL pls_abrir_proc_qtde_proc_valor(nr_seq_conta_p, null, nm_usuario_p,
					cd_estabelecimento_p);

end if;

/*Robson 409348 - Não estava atualizando Regras para procedimentos dia 10/04/2012*/


/* Francisco - 08/05/2012 - Passei para dentro da atualiza_valor_proc, por causa do log e para centralizar 
pls_calcular_vinculo_direto(nr_seq_conta_w, nm_usuario_p);*/
CALL pls_obter_tx_qtde_mat_valor(null,nr_seq_conta_w, nm_usuario_p, cd_estabelecimento_p);

if (coalesce(ie_atualiza_apresentado_w,'N') <> 'N' ) then	
	CALL pls_atualiza_valor_apresentado( null, null, null, null, nr_seq_proc_w, cd_estabelecimento_p, nm_usuario_p);
end if;

if (ie_geracao_pos_estab_w = 'C')then
	CALL pls_gerar_valor_pos_estab(nr_seq_conta_p, nm_usuario_p, ie_geracao_pos_estab_w,nr_seq_proc_w,null,'A');
end if;

open C02;
loop
fetch C02 into	
	nr_seq_proc_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin
	/*necessário que a valorização do item seja realizada dentro do cursor para que caso o procedimento seja desmembrado por regra de quantidade de execução a valorização seja realizada para todos os itens*/

	
	if (ie_tipo_despesa_w = '1') then /* Atualizar o valor do procedimento */
		CALL pls_atualiza_valor_proc(nr_seq_proc_w, 'S', nm_usuario_p,'S',null,null);
	elsif (ie_tipo_despesa_w in ('2','3')) then /* Atualizar os valores das taxas e diárias */
		CALL pls_atualiza_valor_servico(nr_seq_proc_w, 'S', nm_usuario_p,'S');
	elsif (ie_tipo_despesa_w = '4') then 		
		if (ie_calculo_pacote_w	= 'R') then
			CALL pls_atualiza_valor_proc(nr_seq_proc_w, 'S', nm_usuario_p,'S',null,null); /* Atualizar os valores dos pacotes  como se fossem procedimentos. Diego OS 411746- Hist. 27/03/2012 07:30:51*/
		else
			CALL pls_atualiza_valor_pacote(nr_seq_proc_w, 'C', nm_usuario_p, 'S', 'N');/* Atualizar os valores dos pacotes */
		end if;
	end if;
	
	CALL pls_consistir_conta_proc(nr_seq_proc_w, cd_estabelecimento_p,'N', nm_usuario_p);

	/*Rotina para vincular regra de liberacao de valores para conta no procedimento, quando inserido manualmente pela anaálise. */

	CALL pls_obter_regra_valor_conta(nr_seq_conta_w,nr_seq_proc_w,null,null,nm_usuario_p);

	CALL pls_atualizar_glosa_oc_analise(	nr_seq_proc_w, null, nr_seq_analise_p,
					cd_estabelecimento_p, nm_usuario_p);
	/* Diether OS 484622 - Utilizar a rotina que atualiza pois ela verifica se já não existe o registro dos demais procedimentos na análise */

	CALL pls_atualiza_w_resumo_conta(nr_seq_conta_w, nr_seq_proc_w, null, nr_seq_conta_princ_p, nr_seq_analise_p, nm_usuario_p);
	
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_item_criado_w
	from	w_pls_resumo_conta	a
	where	nr_seq_analise		= nr_seq_analise_p
	and	nr_seq_conta_proc	= nr_seq_proc_w;
	
	update	pls_conta_proc 	
	set	ie_status = 'A'
	where	nr_sequencia = nr_seq_proc_w
	and	ie_status 	<> 'D';

	update	w_pls_resumo_conta
	set	nr_seq_grupo_item 	= nr_seq_grupo_atual_p
	where	nr_sequencia 		= nr_seq_item_criado_w;

				/*Adicionado o substr para que não ocorra estouro de variavel*/

	ds_observacao_w :=	'Procedimento inserido: '||substr(cd_procedimento_p||'-'||pls_obter_desc_procedimento(cd_procedimento_p,ie_origem_proced_p),1,150)||chr(13)||chr(10)||
				'Quantidade inserida: '||qt_procedimento_p;
	/*Inserindo histórico*/

	CALL pls_inserir_hist_analise(nr_seq_conta_w, nr_seq_analise_p, 19,
				 nr_seq_proc_w, 'P', null,
				 null,ds_observacao_w, nr_seq_grupo_atual_p,
				 nm_usuario_p,cd_estabelecimento_p);

	end;
end loop;
close C02;

CALL pls_atualizar_conta_pos_estab(	nr_seq_conta_p, nr_seq_proc_w, null,
				nr_seq_analise_p, 'N', cd_estabelecimento_p,
				nm_usuario_p	);

delete	FROM w_pls_proc_participante
where	nr_seq_analise = nr_seq_analise_p;
			
nr_seq_item_criado_p := nr_seq_item_criado_w;

if (coalesce(ie_comitar_p,'S') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_proc_analise ( cd_procedimento_p bigint, ie_origem_proced_p bigint, qt_procedimento_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, dt_procedimento_p timestamp, dt_inicio_p timestamp, dt_fim_p timestamp, ie_via_acesso_p text, cd_guia_p text, ie_tipo_guia_p text, nr_seq_conta_p bigint, nr_seq_benef_p bigint, ds_medicos_p text, ds_partic_p text, nm_usuario_p text, nr_seq_analise_p bigint, cd_estabelecimento_p bigint, nr_seq_conta_princ_p bigint, ie_comitar_p text, nr_seq_grupo_atual_p bigint, tx_item_p bigint, cd_procedimento_imp_p bigint, ds_procedimento_imp_p text, nr_seq_item_criado_p INOUT bigint) FROM PUBLIC;

