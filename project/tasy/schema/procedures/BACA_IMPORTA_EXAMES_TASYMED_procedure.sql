-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baca_importa_exames_tasymed ( cd_pessoa_fisica_p text, cd_profissional_p text, nm_usuario_export_p text, nr_atendimento_p bigint default null, nr_seq_pepa_p bigint default null, nr_seq_cliente_p bigint default null) AS $body$
DECLARE


nr_sequencia_w	pedido_exame_externo.nr_sequencia%type;

nr_seq_pedido_med_w med_pedido_exame.nr_sequencia%type;

c01 CURSOR FOR
	SELECT	a.cd_medico,
			a.cd_pessoa_fisica,
			b.nr_sequencia,
			b.dt_atualizacao,
			b.nm_usuario,
			b.dt_solicitacao,
			b.ds_dados_clinicos,
			b.ds_exame_ant,
			b.ie_ficha_unimed,
			b.ds_cid,
			b.ds_diagnostico_cid,
			b.ds_justificativa
	from med_cliente a, med_pedido_exame b
	where a.nr_sequencia = b.nr_seq_cliente
	and	a.cd_pessoa_fisica = cd_pessoa_fisica_p
	and	a.cd_medico = cd_profissional_p
	and  a.nr_sequencia = nr_seq_cliente_p
	and (coalesce(nr_atendimento_p::text, '') = '' or b.nr_atendimento =  nr_atendimento_p or coalesce(b.nr_atendimento::text, '') = '')
	and coalesce(b.ie_exportado,'N') = 'N'
	order by dt_atualizacao;

c02 CURSOR FOR
	SELECT	a.dt_atualizacao,
			a.nm_usuario,
			a.nr_seq_exame,
			a.qt_exame,
			a.nr_seq_apresent,
			a.ds_justificativa,
			a.dt_atualizacao_nrec,
			a.nm_usuario_nrec,
			a.ie_lado
	from med_ped_exame_cod a
	where a.nr_seq_pedido =  nr_seq_pedido_med_w;

c01_w c01%rowtype;

c02_w c02%rowtype;


BEGIN

if (coalesce(nr_atendimento_p::text, '') = '' or (nr_seq_pepa_p IS NOT NULL AND nr_seq_pepa_p::text <> '')) then

open C01;
loop
	fetch C01 into
		c01_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

			begin

				select 	nextval('pedido_exame_externo_seq')
				into STRICT	nr_sequencia_w
				;

				insert into pedido_exame_externo(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					cd_pessoa_fisica,
					cd_profissional,
					dt_solicitacao,
					ds_dados_clinicos,
					ds_exame_ant,
					ie_ficha_unimed,
					ds_cid,
					ds_diagnostico_cid,
					ds_justificativa,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					ie_situacao,
					dt_liberacao,
					ie_nivel_atencao,
					nr_seq_atend_cons_pepa
					) values (
					nr_sequencia_w,
					c01_w.dt_atualizacao,
					c01_w.nm_usuario,
					c01_w.cd_pessoa_fisica,
					c01_w.cd_medico,
					c01_w.dt_solicitacao,
					c01_w.ds_dados_clinicos,
					c01_w.ds_exame_ant,
					c01_w.ie_ficha_unimed,
					c01_w.ds_cid,
					c01_w.ds_diagnostico_cid,
					c01_w.ds_justificativa,
					c01_w.dt_atualizacao,
					c01_w.nm_usuario,
					'A',
					c01_w.dt_atualizacao,
					'S',
					nr_seq_pepa_p
					);

					nr_seq_pedido_med_w := c01_w.nr_sequencia;

					open C02;
					loop
						fetch C02 into
						c02_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin

							begin
								insert into pedido_exame_externo_item(
									nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									nr_seq_pedido,
									nr_seq_exame,
									qt_exame,
									nr_seq_apresent,
									ds_justificativa,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									ie_lado,
									nr_seq_atend_cons_pepa
									) values (
									nextval('pedido_exame_externo_item_seq'),
									c02_w.dt_atualizacao,
									c02_w.nm_usuario,
									nr_sequencia_w,
									c02_w.nr_seq_exame,
									c02_w.qt_exame,
									c02_w.nr_seq_apresent,
									c02_w.ds_justificativa,
									c02_w.dt_atualizacao_nrec,
									c02_w.nm_usuario_nrec,
									c02_w.ie_lado,
									nr_seq_pepa_p
									);
							exception when others then
								null;
							end;
						end;
					end loop;
					close c02;

					CALL copia_campo_long_de_para_novo(
						'MED_PEDIDO_EXAME',
						'DS_SOLICITACAO',
						' where nr_sequencia = :nr_sequencia ',
						'nr_sequencia='||c01_w.nr_sequencia,
						'PEDIDO_EXAME_EXTERNO',
						'DS_SOLICITACAO',
						' where nr_sequencia = :nr_sequencia ',
						'nr_sequencia='||nr_sequencia_w,
						'L');

					update med_pedido_exame
						set ie_exportado = 'S',
							dt_exportacao = clock_timestamp(),
							NM_USUARIO_EXPORTACAO = nm_usuario_export_p
					where nr_sequencia = c01_w.nr_sequencia;

					commit;

				exception when others then
					rollback;
				end;

		end;

end loop;
close C01;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baca_importa_exames_tasymed ( cd_pessoa_fisica_p text, cd_profissional_p text, nm_usuario_export_p text, nr_atendimento_p bigint default null, nr_seq_pepa_p bigint default null, nr_seq_cliente_p bigint default null) FROM PUBLIC;

