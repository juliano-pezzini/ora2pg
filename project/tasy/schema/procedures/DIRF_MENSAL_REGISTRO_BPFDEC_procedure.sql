-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE dirf_mensal_registro_bpfdec ( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text) AS $body$
DECLARE


cd_pessoa_fisica_w	varchar(10);
nr_cpf_w			varchar(11);
qt_registro_w		bigint;
qt_registro_ww		bigint;
ds_arquivo_w		varchar(2000);
nm_pessoa_fisica_w	varchar(255);
separador_w		varchar(1) := '|';
cd_estabelecimento_w	smallint;
vl_rendimento_w		dirf_titulo_pagar.vl_rendimento%type;
vl_min_ano_pf_w		dirf_regra_geral.vl_min_ano_pf%type;

c01 CURSOR FOR  --Buscar apenas as pessoas fisicas que possuem titulos na DIRF
	SELECT	distinct coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica),
		substr(obter_dados_pf(coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica),'CPF'),1,11) cpf_pessoa_fisica,
		substr(elimina_caractere_especial(obter_nome_pf_pj(coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica), null)),1,255) nm_pessoa_fisica,
		sum(t.vl_rendimento)
	from	titulo_pagar p,
		dirf_titulo_pagar t,
		dirf_lote_mensal d,
		dirf_agrupar_lote a,
		dirf_lote l
	where	t.nr_titulo = p.nr_titulo
	and	t.nr_seq_lote_dirf = d.nr_sequencia
	and	d.nr_sequencia = a.nr_seq_lote_mensal
	and	l.nr_sequencia = a.nr_seq_lote_anual
	and	(coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica) IS NOT NULL AND (coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica))::text <> '')
	and	((t.cd_darf = cd_darf_p)
	or (t.cd_tributo in (SELECT z.cd_tributo
				from	dirf_regra_tributo z
				where	z.cd_darf_vinculado = cd_darf_p
				and	z.ie_indica_rendimento = 'S')))
	and	l.nr_sequencia = nr_seq_lote_dirf_p
	group by coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica)
	order by substr(obter_dados_pf(coalesce(t.cd_pessoa_fisica, p.cd_pessoa_fisica),'CPF'),1,11) asc;


BEGIN
select	cd_estabelecimento,
		(coalesce(obter_dados_dirf_estab(cd_estabelecimento , 'VLM'), 0))::numeric
into STRICT	cd_estabelecimento_w,
	vl_min_ano_pf_w
from	dirf_lote
where	nr_sequencia = nr_seq_lote_dirf_p;

open c01;
loop
fetch c01 into
	cd_pessoa_fisica_w,
	nr_cpf_w,
	nm_pessoa_fisica_w,
	vl_rendimento_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	
	if vl_rendimento_w >= vl_min_ano_pf_w then	

		-- inserir o CPF e o nome da pessoa fisica
		nm_pessoa_fisica_w := fis_remove_special_characters(nm_pessoa_fisica_w);
		ds_arquivo_w 	:= 'BPFDEC' || separador_w || lpad(nr_cpf_w,11,'0') || separador_w || nm_pessoa_fisica_w || separador_w || separador_w || 'N' || separador_w || 'N' || separador_w;
		nr_seq_apres_p 	:= nr_seq_apres_p + 1;

		insert 	into w_dirf_arquivo(	nr_sequencia,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec,
					ds_arquivo,
					nr_seq_apresentacao,
					nr_seq_registro,
					cd_darf)
		values (nextval('w_dirf_arquivo_seq'),
					nm_usuario_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp(),
					ds_arquivo_w,
					to_char(nr_seq_apres_p),
					0,
					cd_darf_p);
		commit;
		nr_seq_apres_p := nr_seq_apres_p + 1;

		nr_seq_apres_p := dirf_grava_rtrt(nr_seq_lote_dirf_p, nm_usuario_p, nr_seq_apres_p, cd_darf_p, cd_estabelecimento_w, cd_pessoa_fisica_w);

		nr_seq_apres_p := dirf_grava_rtirf(nr_seq_lote_dirf_p, nm_usuario_p, nr_seq_apres_p, cd_darf_p, cd_estabelecimento_w, cd_pessoa_fisica_w);

		nr_seq_apres_p := dirf_grava_rtpo(nr_seq_lote_dirf_p, nm_usuario_p, nr_seq_apres_p, cd_darf_p, cd_estabelecimento_w, cd_pessoa_fisica_w);

		dirf_grava_rtdp(nr_seq_lote_dirf_p,
				nm_usuario_p,
				nr_seq_apres_p,
				cd_darf_p,
				cd_estabelecimento_w,
				cd_pessoa_fisica_w);

		nr_seq_apres_p := dirf_grava_riirp(nr_seq_lote_dirf_p, nm_usuario_p, nr_seq_apres_p, cd_darf_p, cd_estabelecimento_w, cd_pessoa_fisica_w);

		nr_seq_apres_p := dirf_grava_ribmr(nr_seq_lote_dirf_p, nm_usuario_p, nr_seq_apres_p, cd_darf_p, cd_estabelecimento_w, cd_pessoa_fisica_w);

		nr_seq_apres_p := dirf_grava_rio(nr_seq_lote_dirf_p, nm_usuario_p, nr_seq_apres_p, cd_darf_p, cd_estabelecimento_w, cd_pessoa_fisica_w);	
	end if;
	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE dirf_mensal_registro_bpfdec ( nr_seq_lote_dirf_p bigint, nm_usuario_p text, nr_seq_apres_p INOUT bigint, cd_darf_p text) FROM PUBLIC;

