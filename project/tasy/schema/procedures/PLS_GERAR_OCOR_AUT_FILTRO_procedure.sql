-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_ocor_aut_filtro ( nr_seq_ocor_combinada_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, nr_seq_req_proc_p bigint, nr_seq_req_mat_p bigint, nr_seq_exec_item_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, ie_gerou_ocor_cabecalho_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, cd_tipo_portador_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
Rotina utilizada para consistências dos filtros, conforme definido na regra de ocorrência combinada
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ x] Tasy (Delphi/Java) [  x] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Performance
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
/* Parâmetros utilizados no select  */

nr_seq_aut_filtro_w	bigint;
ie_excecao_w		varchar(1);
ie_excecao_regra_w	varchar(1)	:= 'N';
ie_gerar_ocorrencia_w	varchar(1)	:= 'N';
nr_ordem_proc_w		integer;
nr_ordem_mat_w		integer;
nr_ordem_benef_w	integer;
nr_ordem_prest_w	integer;
nr_ordem_guia_w		integer;
nr_ordem_cid_w		integer;
nr_ordem_intercambio_w	integer;

/* Parâmetros utilizados para controle na rotina */

ie_regra_w		varchar(1);
ie_regra_excecao_w	varchar(1);
qt_contador_w		integer := 0;
nr_seq_regra_proc_w	bigint := 0;
nr_seq_regra_mat_w	bigint := 0;
nr_seq_regra_benef_w	bigint := 0;
ie_tipo_ocorrencia_w	varchar(1);
ie_tipo_ocor_excecao_w	varchar(1);
ie_tipo_ocor_regra_w	varchar(1);
nr_seq_ocorrencia_w	bigint;
nr_ordem_produto_w	bigint;
nr_ordem_contrato_w	bigint;
nr_ordem_req_w		bigint;
nr_ordem_aces_web_w	bigint;
nr_ordem_medico_w	bigint;
nr_ordem_dados_hdm_w	pls_ocor_aut_filtro.nr_ordem_dados_hdm%type;
nr_ordem_regra_dia_w	pls_ocor_aut_filtro.nr_ordem_regra_dia%type;
qt_filtro_regra_w	smallint;


C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_excecao,
		nr_ordem_proc,
		nr_ordem_mat,
		nr_ordem_benef,
		nr_ordem_prest,
		nr_ordem_guia,
		nr_ordem_cid,
		nr_ordem_intercambio,
		nr_ordem_produto,
		nr_ordem_contrato,
		nr_ordem_req,
		nr_ordem_aces_web,
		nr_ordem_medico,
		nr_ordem_dados_hdm,
		nr_ordem_regra_dia
	from	pls_ocor_aut_filtro
	where	nr_seq_ocor_aut_combinada = nr_seq_ocor_combinada_p
	and	ie_situacao	= 'A'
	order by ie_excecao asc,
		nr_ordem_filtro asc;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_ordem_proc,
		nr_ordem_mat,
		nr_ordem_benef,
		nr_ordem_prest,
		nr_ordem_guia,
		nr_ordem_cid,
		nr_ordem_intercambio,
		nr_ordem_produto,
		nr_ordem_contrato,
		nr_ordem_req,
		nr_ordem_aces_web,
		nr_ordem_medico,
		nr_ordem_dados_hdm,
		nr_ordem_regra_dia
	from	pls_ocor_aut_filtro
	where	nr_seq_ocor_aut_combinada = nr_seq_ocor_combinada_p
	and	ie_situacao	= 'A'
	and	ie_excecao	= 'S'
	order by nr_ordem_filtro asc;


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_aut_filtro_w,
	ie_excecao_w,
	nr_ordem_proc_w,
	nr_ordem_mat_w,
	nr_ordem_benef_w,
	nr_ordem_prest_w,
	nr_ordem_guia_w,
	nr_ordem_cid_w,
	nr_ordem_intercambio_w,
	nr_ordem_produto_w,
	nr_ordem_contrato_w,
	nr_ordem_req_w,
	nr_ordem_aces_web_w,
	nr_ordem_medico_w,
	nr_ordem_dados_hdm_w,
	nr_ordem_regra_dia_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	qt_contador_w 	:= 1;
	ie_regra_w 	:= 'S';

	select	count(1)
	into STRICT	qt_filtro_regra_w
	from	pls_ocor_aut_filtro
	where	nr_seq_ocor_aut_combinada = nr_seq_ocor_combinada_p
	and	ie_situacao	= 'A'
	and	((ie_excecao	= 'N') or (coalesce(ie_excecao::text, '') = ''));

	if (qt_filtro_regra_w	> 0) then
		while(qt_contador_w <= 13 and ie_regra_w = 'S') loop
			begin
			if ( qt_contador_w = nr_ordem_proc_w ) then
				if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
					/* Consistir os filtros que possuem regras por serviço */

					SELECT * FROM pls_gerar_ocor_aut_proc(nr_seq_aut_filtro_w, nr_seq_guia_proc_p, nr_seq_req_proc_p, nr_seq_exec_item_p, cd_procedimento_p, ie_origem_proced_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
				else
					ie_regra_w 	:= 'N';
				end if;
			elsif ( qt_contador_w = nr_ordem_mat_w ) then
				if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
					/* Consistir os filtros que possuem regras por material/medicamento */

					SELECT * FROM pls_gerar_ocor_aut_mat(nr_seq_aut_filtro_w, nr_seq_guia_mat_p, nr_seq_req_mat_p, nr_seq_exec_item_p, nr_seq_material_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
				else
					ie_regra_w 	:= 'N';
				end if;
			elsif ( qt_contador_w = nr_ordem_benef_w ) then
				/* Consistir os filtros que possuem regras referente ao beneficiário*/

				SELECT * FROM pls_gerar_ocor_aut_benef(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w	= nr_ordem_prest_w ) then
				if (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
					/* Consistir os filtros que possuem regras referente ao prestador */

					SELECT * FROM pls_gerar_ocor_aut_prest(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_prestador_p, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
				else
					ie_regra_w 	:= 'N';
				end if;
			elsif ( qt_contador_w	= nr_ordem_guia_w ) then
				SELECT * FROM pls_gerar_ocor_aut_guia(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w	= nr_ordem_cid_w ) then
				/* Consistir os filtros que possuem regras referente ao CID */

				SELECT * FROM pls_gerar_ocor_aut_cid(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_intercambio_w ) then
				/* Consistir os filtros que possuem regras referente ao intercâmbio*/

				SELECT * FROM pls_gerar_ocor_aut_inter(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_produto_w ) then
				/* Consistir os filtros que possuem regras referente ao produto*/

				SELECT * FROM pls_gerar_ocor_aut_prod(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_contrato_w ) then
				/* Consistir os filtros que possuem regras referente ao contrato*/

				SELECT * FROM pls_gerar_ocor_aut_cont(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, cd_tipo_portador_p, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_req_w ) then
				/* Consistir os filtros que possuem regras referente à requisição*/

				SELECT * FROM pls_gerar_ocor_aut_req(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_aces_web_w ) then
				/* Consistir os filtros que possuem regras referente ao acesso web*/

				SELECT * FROM pls_gerar_ocor_aut_aces_web(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_medico_w ) then
				/* Consistir os filtros que possuem regras referente ao grupo médico*/

				SELECT * FROM pls_gerar_ocor_aut_medico(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_exec_item_p, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_dados_hdm_w ) then
				/* Consistir os filtros que possuem regras referente aos dados HDM*/

				SELECT * FROM pls_gerar_ocor_aut_dados_hdm(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			elsif ( qt_contador_w = nr_ordem_regra_dia_w ) then
				/* Consistir os filtros que possuem regras referente à regra dia*/

				SELECT * FROM pls_gerar_ocor_aut_regra_dia(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
			end if;

			qt_contador_w	:= qt_contador_w + 1;
			end;
		end loop;
	else
		ie_excecao_w	:= 'N';
	end if;

	if (ie_regra_w = 'S') and (ie_excecao_w	= 'N') then
		ie_gerar_ocorrencia_w	:= 'S';
		ie_tipo_ocor_regra_w	:= ie_tipo_ocorrencia_w;
		open C02;
		loop
		fetch C02 into
			nr_seq_aut_filtro_w,
			nr_ordem_proc_w,
			nr_ordem_mat_w,
			nr_ordem_benef_w,
			nr_ordem_prest_w,
			nr_ordem_guia_w,
			nr_ordem_cid_w,
			nr_ordem_intercambio_w,
			nr_ordem_produto_w,
			nr_ordem_contrato_w,
			nr_ordem_req_w,
			nr_ordem_aces_web_w,
			nr_ordem_medico_w,
			nr_ordem_dados_hdm_w,
			nr_ordem_regra_dia_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			qt_contador_w 	:= 1;
			ie_regra_excecao_w 	:= 'S';

			while(qt_contador_w <= 13 and ie_regra_excecao_w = 'S') loop
				begin
				if ( qt_contador_w = nr_ordem_proc_w ) then
					if (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') then
						/* Consistir os filtros que possuem regras por serviço */

						SELECT * FROM pls_gerar_ocor_aut_proc(nr_seq_aut_filtro_w, nr_seq_guia_proc_p, nr_seq_req_proc_p, nr_seq_exec_item_p, cd_procedimento_p, ie_origem_proced_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
					else
						ie_regra_excecao_w 	:= 'N';
					end if;
				elsif ( qt_contador_w = nr_ordem_mat_w ) then
					if (nr_seq_material_p IS NOT NULL AND nr_seq_material_p::text <> '') then
						/* Consistir os filtros que possuem regras por material/medicamento */

						SELECT * FROM pls_gerar_ocor_aut_mat(nr_seq_aut_filtro_w, nr_seq_guia_mat_p, nr_seq_req_mat_p, nr_seq_exec_item_p, nr_seq_material_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
					else
						ie_regra_excecao_w 	:= 'N';
					end if;
				elsif ( qt_contador_w = nr_ordem_benef_w ) then
					/* Consistir os filtros que possuem regras referente ao beneficiário*/

					SELECT * FROM pls_gerar_ocor_aut_benef(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w	= nr_ordem_prest_w ) then
					/* Consistir os filtros que possuem regras referente ao prestador */

					if (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then
						SELECT * FROM pls_gerar_ocor_aut_prest(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_prestador_p, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
					else
						ie_regra_excecao_w 	:= 'N';
					end if;
				elsif ( qt_contador_w	= nr_ordem_guia_w ) then
					/* Consistir os filtros que possuem regras referente a informações contatida na guia*/

					SELECT * FROM pls_gerar_ocor_aut_guia(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w	= nr_ordem_cid_w ) then
					/* Consistir os filtros que possuem regras referente ao CID */

					SELECT * FROM pls_gerar_ocor_aut_cid(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_intercambio_w ) then
					/* Consistir os filtros que possuem regras referente ao intercâmbio*/

					SELECT * FROM pls_gerar_ocor_aut_inter(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_produto_w ) then
					/* Consistir os filtros que possuem regras referente ao produto*/

					SELECT * FROM pls_gerar_ocor_aut_prod(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_contrato_w ) then
					/* Consistir os filtros que possuem regras referente ao contrato*/

					SELECT * FROM pls_gerar_ocor_aut_cont(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, cd_tipo_portador_p, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_req_w ) then
					/* Consistir os filtros que possuem regras referente à requisição*/

					SELECT * FROM pls_gerar_ocor_aut_req(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_aces_web_w ) then
					/* Consistir os filtros que possuem regras referente ao acesso web*/

					SELECT * FROM pls_gerar_ocor_aut_aces_web(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_medico_w ) then
					/* Consistir os filtros que possuem regras referente ao grupo médico*/

					SELECT * FROM pls_gerar_ocor_aut_medico(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_exec_item_p, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_dados_hdm_w ) then
					/* Consistir os filtros que possuem regras referente aos dados HDM*/

					SELECT * FROM pls_gerar_ocor_aut_dados_hdm(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				elsif ( qt_contador_w = nr_ordem_regra_dia_w ) then
				/* Consistir os filtros que possuem regras referente à regra dia*/

				SELECT * FROM pls_gerar_ocor_aut_regra_dia(nr_seq_aut_filtro_w, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, null, nm_usuario_p, ie_regra_excecao_w, ie_tipo_ocor_excecao_w) INTO STRICT ie_regra_excecao_w, ie_tipo_ocor_excecao_w;
				end if;

				qt_contador_w	:= qt_contador_w + 1;
				end;
			end loop;

			if (ie_regra_excecao_w	= 'S') then
				ie_excecao_regra_w	:= 'S';
				ie_gerar_ocorrencia_w	:= 'E';
				if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
					--pls_inserir_regra_excecao_req(nr_seq_ocorrencia_p, nr_seq_aut_filtro_w, nr_seq_requisicao_p, nm_usuario_p);
					exit;
				end if;
			else
				ie_excecao_regra_w	:= 'N';
			end if;
			end;
		end loop;
		close C02;
	-- Caso seja uma regra de exeção e se encaixe, não gera ocorrência
	elsif (ie_regra_w = 'S') and (ie_excecao_w	= 'S') then
		ie_gerar_ocorrencia_w	:= 'E';
		if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
			--pls_inserir_regra_excecao_req(nr_seq_ocorrencia_p, nr_seq_aut_filtro_w, nr_seq_requisicao_p, nm_usuario_p);
			exit;
		end if;
	elsif (ie_regra_w = 'N') and (ie_excecao_w	= 'N') then
		ie_gerar_ocorrencia_w	:= 'N';
	end if;

	if (ie_regra_w = 'S') and (ie_excecao_regra_w = 'N') then
		exit;
	end if;

	if (ie_excecao_regra_w	= 'S') then
		exit;
	end if;
	end;
end loop;
close C01;

ie_gerar_ocorrencia_p	:= ie_gerar_ocorrencia_w;
ie_tipo_ocorrencia_p	:= ie_tipo_ocorrencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_ocor_aut_filtro ( nr_seq_ocor_combinada_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, nr_seq_guia_proc_p bigint, nr_seq_guia_mat_p bigint, nr_seq_req_proc_p bigint, nr_seq_req_mat_p bigint, nr_seq_exec_item_p bigint, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_material_p bigint, ie_gerou_ocor_cabecalho_p text, nr_seq_prestador_p bigint, nr_seq_ocorrencia_p bigint, cd_tipo_portador_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, ie_gerar_ocorrencia_p INOUT text, ie_tipo_ocorrencia_p INOUT text) FROM PUBLIC;

