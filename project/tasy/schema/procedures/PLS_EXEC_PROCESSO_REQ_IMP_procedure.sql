-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_exec_processo_req_imp ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_guia_plano_imp_p pls_guia_plano_imp.nr_sequencia%type, nr_seq_guia_plano_p INOUT pls_guia_plano.nr_sequencia%type) AS $body$
DECLARE

					
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Executar o processo de geracao de geracao da guia e consistencia
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_lote_execucao_w		pls_lote_execucao_req.nr_sequencia%type;
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
nr_seq_guia_plano_w		pls_guia_plano.nr_sequencia%type;
ie_estagio_w			pls_requisicao.ie_estagio%type;
ie_gerar_nova_req_w		pls_param_importacao_guia.ie_gerar_nova_req%type; --gerar uma nova requisicao com os itens glosados com a glosa 1214.
cd_prestador_exec_w		pls_guia_plano_imp.cd_prestador_exec%type;
ie_execucao_posterior_w		pls_param_importacao_guia.ie_execucao_posterior%type;
ie_etapa_autorizacao_w	pls_guia_plano_imp.ie_etapa_autorizacao%type;


BEGIN

if (nr_seq_guia_plano_imp_p IS NOT NULL AND nr_seq_guia_plano_imp_p::text <> '') then

	--Verifica se existe uma requisicao pendente para execucao
	nr_seq_requisicao_w := pls_obter_req_exec_imp(	nr_seq_guia_plano_imp_p, cd_estabelecimento_p );
		
	--Se existir requisicao pendente executa a mesma
	if (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
	
		--Atualizar o codigo da Guia Prestador na Requisicao
		CALL pls_atualiza_guia_prest_req( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w );
		
		--Carrega os itens que serao executados
		nr_seq_lote_execucao_w  := pls_gerar_itens_exec_req_imp( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w, nr_seq_lote_execucao_w );
					
		--Executa os itens selecionados para execucao
		CALL pls_executar_itens_lote_req(  nr_seq_lote_execucao_w, null, nm_usuario_p, 'W', cd_estabelecimento_p, null, null, null,null,null, null, null);
		
		--Atualizar status das tabelas IMP para 1 - Integrado e salva a sequencia da guia
		update	pls_guia_plano_imp
		set	ie_status 		= 1,
			nr_seq_requisicao 	= nr_seq_requisicao_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia 		= nr_seq_guia_plano_imp_p;

		select 	max(nr_seq_guia)
		into STRICT	nr_seq_guia_plano_w
		from 	pls_execucao_requisicao a,
			pls_lote_execucao_req b
		where 	b.nr_sequencia = a.nr_seq_lote_exec
		and	b.nr_sequencia = nr_seq_lote_execucao_w
		and	(a.dt_execucao IS NOT NULL AND a.dt_execucao::text <> '');
	else
	
		--Obtem o parametro 'Gerar nova requisicao para itens negados com glosa 1214' em OPS - Gestao de Operadoras > Parametros da OPS > Importacao XML guia
		select	coalesce(max(ie_gerar_nova_req), 'N'),
			coalesce(max(ie_execucao_posterior),'N')
		into STRICT	ie_gerar_nova_req_w,
			ie_execucao_posterior_w --Tratamento realizado para o projeto das OS 1127701 e 1759957
		from	pls_param_importacao_guia;
	
		--Gera a requisicao
		nr_seq_requisicao_w := pls_gerar_req_importacao( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w); 	
		
		--Atualizar dados do anexo da guia
		CALL pls_atualizar_anexo_req_imp( nr_seq_guia_plano_imp_p, nr_seq_requisicao_w, nm_usuario_p);
		
		/*Rotina utilizada para validar se os procedimentos enviados exigem anexo conforme regra criada na funcao
		OPS - Cadastro de Regras / OPS - Atendimento / Regra lancamento anexo guia tiss */
		CALL pls_gerar_regra_anexo_ws( null, nr_seq_requisicao_w, nm_usuario_p);
		
		/* Realiza a confirmacao do Token */

		CALL pls_confirma_token(null, 'L', null, nr_seq_requisicao_w, nm_usuario_p, cd_estabelecimento_p);

		--Consistir a requisicao
		CALL pls_consistir_requisicao( nr_seq_requisicao_w, cd_estabelecimento_p, nm_usuario_p );
		
		/* Rotina utlizada para deixar a Guia em analise com o status 'Aguardando anexo guia TISS'
		deve ser chamada depois de consistir a guia, assim ira atualizar o status da analise e da autorizacao */
		CALL pls_gerar_analise_anexo_ws( null, nr_seq_requisicao_w, nm_usuario_p);	
				
		select	ie_estagio
		into STRICT	ie_estagio_w
		from	pls_requisicao
		where	nr_sequencia = nr_seq_requisicao_w;
	
		begin
			select	cd_prestador_exec,
					ie_etapa_autorizacao
			into STRICT	cd_prestador_exec_w,
					ie_etapa_autorizacao_w
			from	pls_guia_plano_imp
			where	nr_sequencia = nr_seq_guia_plano_imp_p;
		exception
		when others then
			cd_prestador_exec_w := 0;
			ie_etapa_autorizacao_w := '0';
		end;

		-- Tratamento feito devido a uso da regra 'Disponibilizar requisicao para execucao futura' em OPS - Gestao de Operadoras > Parametros da OPS > Importacao XML guia, 

		-- caso use a regra, e o prestador executor enviado for '999999', nao sera gerada a execucao automatica,
		if	((coalesce(cd_prestador_exec_w,'0') = '999999') and (ie_execucao_posterior_w = 'S' )) or (ie_etapa_autorizacao_w = '1') then

			update	pls_requisicao
			set	ie_origem_solic		= 'W',
				ie_tipo_processo	= CASE WHEN ie_tipo_processo='I' THEN  'I'  ELSE 'W' END ,
				nr_seq_prestador_exec	 = NULL
			where	nr_sequencia		= nr_seq_requisicao_w;

			nr_seq_guia_plano_w := nr_seq_requisicao_w;

			CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_w, 'L',
							expressao_pck.obter_desc_expressao(926794),
							null, nm_usuario_p);
		else
			-- Alimentada a variavel com valor igual a 'N' para que seja feito o UPDATE na tabela PLS_GUIA_PLANO_IMP 
			ie_execucao_posterior_w := 'N';

			--Se a requisicao estiver autorizada a mesma sera executada
			if ( ie_estagio_w in (2, 9) ) then		
				--Carrega os itens que serao executados
				nr_seq_lote_execucao_w  := pls_gerar_itens_exec_req_imp( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w, nr_seq_lote_execucao_w );
							
				--Executa os itens selecionados para execucao
				CALL pls_executar_itens_lote_req(  nr_seq_lote_execucao_w, null, nm_usuario_p, 'W', cd_estabelecimento_p, null, null, null,null,null, null, null);
				
			--Se a requisicao estiver negada
			elsif ( ie_estagio_w = 7 ) then			
				
				--Carrega os itens que serao executados
				nr_seq_lote_execucao_w  := pls_gerar_itens_exec_req_imp( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w, nr_seq_lote_execucao_w );
				
				--Executa os itens selecionados para execucao
				CALL pls_gerar_guia_req_estagio_imp( nr_seq_lote_execucao_w, nr_seq_requisicao_w, cd_estabelecimento_p, ie_estagio_w, nm_usuario_p );
				
				if ( ie_gerar_nova_req_w	= 'S' ) then
					--Gera uma nova requisicao com os itens glosados somente com a glosa 1214.
					CALL pls_duplic_req_glosa_1214( nr_seq_requisicao_w, cd_estabelecimento_p, nm_usuario_p );
				end if;
				
			--Se a requisicao estiver em analise
			elsif ( ie_estagio_w =  4 ) then			
				
				--Carrega os itens que serao executados
				nr_seq_lote_execucao_w  := pls_gerar_itens_exec_req_imp( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w, nr_seq_lote_execucao_w );
				
				--Executa os itens selecionados para execucao
				CALL pls_gerar_guia_req_estagio_imp( nr_seq_lote_execucao_w, nr_seq_requisicao_w, cd_estabelecimento_p, ie_estagio_w, nm_usuario_p );
				
				if ( ie_gerar_nova_req_w	= 'S' ) then
					--Gera uma nova requisicao com os itens glosados somente com a glosa 1214.
					CALL pls_duplic_req_glosa_1214( nr_seq_requisicao_w, cd_estabelecimento_p, nm_usuario_p );
				end if;

			--Se a requisicao foi autorizada parcialmente
			elsif ( ie_estagio_w = 6 ) then	
				
				--Carrega os itens que serao executados
				nr_seq_lote_execucao_w  := pls_gerar_itens_exec_req_imp( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w, nr_seq_lote_execucao_w );
				
				--Executa os itens selecionados para execucao
				CALL pls_gerar_guia_req_estagio_imp( nr_seq_lote_execucao_w, nr_seq_requisicao_w, cd_estabelecimento_p, ie_estagio_w, nm_usuario_p );
				
				if ( ie_gerar_nova_req_w	= 'S' ) then
					--Gera uma nova requisicao com os itens glosados somente com a glosa 1214.
					CALL pls_duplic_req_glosa_1214( nr_seq_requisicao_w, cd_estabelecimento_p, nm_usuario_p );
				end if;
			
			--Se a requisicao e de intercambio
			elsif ( ie_estagio_w = 10 ) then
				
				--Carrega os itens que serao executados
				nr_seq_lote_execucao_w  := pls_gerar_itens_exec_req_imp( nm_usuario_p, cd_estabelecimento_p, nr_seq_guia_plano_imp_p, nr_seq_requisicao_w, nr_seq_lote_execucao_w );
				
				--Executa os itens selecionados para execucao
				CALL pls_gerar_guia_req_estagio_imp( nr_seq_lote_execucao_w, nr_seq_requisicao_w, cd_estabelecimento_p, ie_estagio_w, nm_usuario_p );
				
				if ( ie_gerar_nova_req_w	= 'S' ) then
					--Gera uma nova requisicao com os itens glosados somente com a glosa 1214.
					CALL pls_duplic_req_glosa_1214( nr_seq_requisicao_w, cd_estabelecimento_p, nm_usuario_p );
				end if;
				
			end if;
			
			select 	max(nr_seq_guia)
			into STRICT	nr_seq_guia_plano_w
			from 	pls_execucao_requisicao a,
				pls_lote_execucao_req b
			where 	b.nr_sequencia = a.nr_seq_lote_exec
			and	b.nr_sequencia = nr_seq_lote_execucao_w
			and	(a.dt_execucao IS NOT NULL AND a.dt_execucao::text <> '');
		end if;
	end if;	

	--Atualiza a sequencia da guia na tabela de importacao
	update	pls_guia_plano_imp
	set	nr_seq_guia_plano	= CASE WHEN ie_execucao_posterior_w='S' THEN  null  ELSE nr_seq_guia_plano_w END ,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_sequencia 		= nr_seq_guia_plano_imp_p;
end if;

commit;

nr_seq_guia_plano_p	:= nr_seq_guia_plano_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_exec_processo_req_imp ( nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nr_seq_guia_plano_imp_p pls_guia_plano_imp.nr_sequencia%type, nr_seq_guia_plano_p INOUT pls_guia_plano.nr_sequencia%type) FROM PUBLIC;

