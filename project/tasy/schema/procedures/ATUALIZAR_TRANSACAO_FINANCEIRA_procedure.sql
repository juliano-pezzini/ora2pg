-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_transacao_financeira (cd_estabelecimento_p bigint, nr_seq_movto_trans_p bigint, nm_usuario_p text, ie_acao_p text) AS $body$
DECLARE



dt_referencia_saldo_w		timestamp;
dt_transacao_w			timestamp;
qt_titulo_caixa_rec_w		integer	:= 0;
vl_transacao_w			double precision;
vl_atualizado_w			double precision	:= 0;
vl_saldo_adiant_w		double precision	:= 0;
nr_seq_banco_w			bigint	:= 0;
nr_seq_caixa_w			bigint	:= 0;
nr_titulo_pagar_w		bigint	:= 0;
nr_seq_lote_w			bigint	:= 0;
nr_titulo_receber_w		bigint	:= 0;
nr_adiant_pago_w		bigint;
nr_seq_banco_escrit_w		bigint;
ie_tipo_consistencia_w		smallint;
nr_sequencia_w			bigint;
nr_seq_adiant_dev_w		bigint;
nr_titulo_escrit_w		bigint	:= 0;
nr_titulo_bordero_w		bigint	:= 0;
nr_seq_movto_w			bigint	:= 0;
nr_bordero_w			bigint	:= 0;
nr_seq_cheque_devol_w		bigint	:= 0;
nr_seq_banco_od_w		bigint	:= 0;
nr_adiantamento_w		bigint	:= 0;
nr_cheque_w			varchar(20);
cont_w				bigint	:= 0;
vl_escritural_w			double precision	:= 0;
vl_saldo_escritural_w		double precision	:= 0;
vl_saldo_titulo_bordero_w	double precision	:= 0;
VL_CAMBIAL_ATIVO_w		double precision	:= 0;
VL_CAMBIAL_PASSIVO_w		double precision	:= 0;
ie_banco_w			varchar(01)	:= null;
ds_historico_w			varchar(255);
cd_tipo_baixa_cpa_w		integer	:= 0;
cd_tipo_recebimento_w		integer	:= 0;
cd_cgc_w			varchar(50);
ie_acao_w			smallint;
cd_moeda_w			integer;
cd_convenio_w			bigint;
nr_seq_devol_w			bigint;
nr_seq_deposito_w		bigint;
vl_especie_deposito_w		double precision;
vl_cheque_deposito_w		double precision;
vl_total_deposito_w		double precision;
vl_total_cheques_w		double precision;
vl_saldo_bordero_w		double precision;
nr_seq_cheque_w			bigint;
nr_seq_cheque_ww		bigint;
nr_seq_trans_adiant_w		bigint;
nr_seq_trans_financ_w		bigint;
nr_seq_trans_banco_w		bigint;
nr_seq_trans_baixa_w		bigint;
nr_seq_movto_trans_taxa_w	bigint;
nr_seq_trans_fin_taxa_w		bigint;
cd_conta_financ_w		bigint;
nr_seq_saldo_banco_w		bigint;
pr_taxa_w			double precision;
dt_deposito_w			timestamp;
dt_devolucao_w			timestamp;
dt_seg_devolucao_w		timestamp;
dt_venda_terc_w			timestamp;
nr_seq_cheque_cp_w		bigint;
nr_bordero_rec_w		bigint;
vl_saldo_bordero_rec_w		double precision;
nr_tit_rec_w			bigint;
vl_saldo_tit_rec_w		double precision;
cd_empresa_w			bigint;
nr_seq_baixa_w			bigint;
dt_devolucao_pac_w		timestamp;
dt_saque_w			timestamp;
nr_seq_motivo_dev_w		bigint;
nr_seq_caixa_rec_w		bigint:= null;
ds_transacao_w			varchar(255):= '';
nr_seq_trans_fin_baixa_w	bigint;
ie_repasse_gratuidade_w		varchar(1)	:= null;
ds_caixa_w			varchar(40) := '';
vl_glosa_w			double precision := 0;
vl_imposto_bordero_w		double precision := 0;

nr_seq_receb_w			bigint;
nr_seq_cobr_escrit_w		bigint;
vl_tot_cobr_w			double precision;
nr_seq_tit_cobr_w		bigint;
vl_transacao_adiant_w		double precision;
vl_titulo_bordero_w		double precision;
nr_seq_bordero_cheque_w		bigint;
nr_seq_trans_fin_tit_rec_w	bigint;
dt_terc_devolucao_w		timestamp;
cd_transacao_w			varchar(10);
IE_PRIOR_TRANS_BORDERO_REC_w	varchar(3)	:= 'TB';
nr_seq_trans_bordero_rec_w	bigint;
cd_portador_w			bigint;
cd_tipo_portador_w		integer;
nr_seq_movto_banco_pend_w	bigint;
nr_seq_movto_orig_w		bigint;
vl_baixado_credito_w		double precision;
dt_conciliacao_credito_w	timestamp;
dt_credito_w			timestamp;
ie_somente_liquidacao_w		varchar(10);
ie_bordero_banco_w		varchar(5);
ie_liquidacao_w			varchar(1);
nr_seq_cobranca_w		bigint;
vl_despesa_bancaria_w		double precision;
nr_seq_trans_desp_banco_w	bigint;
nr_seq_trans_inadimplencia_w	bigint;
ie_gerar_baixa_w		varchar(1)	:= 'S';
ie_baixar_w			varchar(1)	:= 'N';
ie_gerar_nc_tit_mens_canc_w	varchar(1)	:= 'N';
ie_gerar_nc_tit_resc_w		varchar(1)	:= 'N';
nr_titulo_w			bigint;
vl_inadimplencia_w		double precision;
nr_interno_conta_w		bigint;
ie_recalcular_repasse_w		varchar(1);
cd_pessoa_fisica_w		varchar(10);
nr_seq_pagador_w		bigint;
ie_exige_liberacao_w		varchar(1);
dt_liberacao_w			timestamp;
ie_atualiza_data_cheque_w	varchar(1);
vl_adiant_pago_w		double precision;
vl_saldo_adiant_pago_w		double precision;
ie_tipo_titulO_w		varchar(2);
ie_bloquear_titulo_w		varchar(1);
ds_erro_w			varchar(120);
ie_excluir_titulo_w		varchar(1);
ie_tipo_pagamento_w		varchar(3);
cd_tipo_baixa_w			integer;
dt_custodia_w			timestamp;
dt_resgate_custodia_w		timestamp;
vl_saldo_negociado_w		double precision;
ie_bordero_banco_rec_w		varchar(2);
ie_atualizou_w			varchar(1);
nr_seq_tf_tit_pagar_w		bigint;
ie_tf_diferente_w		varchar(1);
ie_dt_baixa_cobr_escrit_w	varchar(1);
ie_movto_bco_cobr_escrit_w	varchar(1);
dt_recebimento_cobr_w		timestamp;
ie_lib_baixa_w			varchar(1);
ie_despesa_bancaria_w		varchar(1);
qt_imposto_w			bigint;
-- Projeto Multimoeda - Variaveis 
cd_moeda_rel_w			integer;
cd_moeda_banco_w		integer;
cd_moeda_adiant_w		integer;
cd_moeda_trans_w		integer;
vl_transacao_estrang_w		double precision;
vl_cotacao_w			cotacao_moeda.vl_cotacao%type;
vl_complemento_w		double precision;
vl_saldo_estrang_w		double precision;
vl_transacao_adiant_est_w	double precision;
vl_saldo_bordero_est_w		double precision;
vl_cheque_depos_est_w		double precision;
vl_total_depos_est_w		double precision;
vl_total_cheque_est_w		double precision;
ie_somente_tit_cheque_w		varchar(1);
nr_seq_tributo_w		bigint;
dt_liquidacao_w			timestamp;
ie_dev_adiant_negativo_w	movto_trans_financ.ie_dev_adiant_negativo%type;
ie_forma_valor_bordero_w	varchar(1);
vl_total_bordero_w			titulo_pagar_bordero_v.vl_total_bordero%type;
vl_liquido_bordero_w		titulo_pagar_bordero_v.vl_liquido_bordero%type;
cd_convenio_transacao_w         movto_trans_financ.cd_convenio%type;
ie_movto_bco_pag_escrit_w	parametros_contas_pagar.ie_movto_bco_pag_escrit%type;
qt_bx	bigint;

cd_banco_w				banco_escritural.cd_banco%type;

nr_seq_movto_cartao_w		movto_trans_financ.nr_seq_movto_cartao%type;

ie_bordero_banco_log_w			    parametro_contas_receber.ie_bordero_banco%type;
ie_prior_trans_bordero_log_w	    parametro_contas_receber.ie_prior_trans_bordero_rec%type;
nr_seq_trans_tit_bordero_log_w		parametro_contas_receber.nr_seq_trans_tit_bordero%type;
ds_log_w				            log_tasy.ds_log%type;

c01 CURSOR FOR
	SELECT	nr_titulo,
		vl_bordero,
		nr_seq_trans_fin_baixa
	from	titulo_pagar_bordero_v
	where	nr_bordero		= nr_bordero_w
	and	((coalesce(dt_liquidacao::text, '') = '' and ie_acao_p = 'I') or ((dt_liquidacao IS NOT NULL AND dt_liquidacao::text <> '') and ie_acao_p = 'E'));

c02 CURSOR FOR
	SELECT	a.nr_titulo,
		a.vl_escritural,
		b.nr_seq_trans_fin_baixa,
		a.ds_erro,
		a.ie_tipo_pagamento,
		c.cd_banco
	from	titulo_pagar b,
		titulo_pagar_escrit a,
		banco_escritural c
	where ('N' = coalesce(ie_liquidacao_w,'N')
			or
			exists (SELECT	1
					from	banco_retorno_cp x
					where	x.cd_retorno_liq	= a.ds_erro
					and	x.cd_banco	= c.cd_banco))
	and	a.nr_titulo	= b.nr_titulo
	and	coalesce(a.dt_liquidacao::text, '') = ''
	and	a.nr_seq_escrit	= c.nr_sequencia
	and	c.nr_sequencia	= nr_seq_banco_escrit_w
	and ((ie_movto_bco_pag_escrit_w = 'T' and a.nr_titulo = nr_titulo_pagar_w)
		or (ie_movto_bco_pag_escrit_w = 'L')     
		or (ie_movto_bco_pag_escrit_w = 'F' and b.cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w,'X'))
		or (ie_movto_bco_pag_escrit_w = 'F' and b.cd_cgc = coalesce(cd_cgc_w,'X')));

c04 CURSOR FOR
	SELECT	b.nr_titulo,
		a.vl_abaixar,
		coalesce(a.vl_glosa,0),
		b.nr_seq_trans_fin_baixa,
		coalesce(a.VL_CAMBIAL_ATIVO, 0),
		coalesce(a.VL_CAMBIAL_PASSIVO, 0)
	from	titulo_receber b,
		bordero_tit_rec a
	where	a.nr_titulo	= b.nr_titulo
	and	a.nr_bordero	= nr_bordero_rec_w
	and	coalesce(b.dt_liquidacao::text, '') = '';

c05 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_titulo
	FROM cobranca_escritural b, titulo_receber_cobr a
LEFT OUTER JOIN banco_ocorr_escrit_ret c ON (a.nr_seq_ocorrencia_ret = c.nr_sequencia)
WHERE a.nr_seq_cobranca	= b.nr_sequencia and PKG_DATE_UTILS.start_of(coalesce(b.dt_credito_bancario,coalesce(CASE WHEN ie_movto_bco_cobr_escrit_w='D' THEN a.dt_liquidacao  ELSE dt_transacao_w END ,clock_timestamp())),'dd',0)	= dt_transacao_w and a.nr_seq_cobranca		= nr_seq_cobr_escrit_w  and (ie_somente_liquidacao_w 	=  'N' or c.ie_rejeitado = 'L');

c06 CURSOR FOR
	SELECT	nr_seq_cheque
	from	cheque_bordero
	where	nr_seq_bordero		= nr_seq_bordero_cheque_w;

c07 CURSOR FOR
	SELECT	nr_seq_cheque
	from	deposito_cheque
	where	nr_seq_deposito		= nr_seq_deposito_w;


C08 CURSOR FOR
	SELECT	nr_seq_cheque
	from	deposito_cheque
	where	nr_seq_deposito = nr_seq_deposito_w
	and	coalesce(nr_seq_cheque_w::text, '') = ''
	and	(nr_seq_deposito_w IS NOT NULL AND nr_seq_deposito_w::text <> '')
	
union all

	SELECT	nr_seq_cheque_w
	
	where	(nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '')
	and	coalesce(nr_seq_deposito_w::text, '') = '';

c09 CURSOR FOR
	SELECT	b.nr_titulo
	from	titulo_pagar b,
		cheque_bordero_titulo a
	where	a.nr_seq_cheque	= nr_seq_cheque_cp_w
	and	a.nr_titulo	= b.nr_titulo
	
union

	SELECT	b.nr_titulo
	from	titulo_pagar b,
		cheque_bordero_titulo a
	where	a.nr_seq_cheque	= nr_seq_cheque_cp_w
	and	a.nr_bordero	= b.nr_bordero
	and	coalesce(ie_somente_tit_cheque_w,'N') = 'N';

	c10 CURSOR FOR
	SELECT	nr_titulo,
		vl_bordero,
		nr_seq_trans_fin_baixa
	from	titulo_pagar_bordero_v
	where	nr_bordero		= nr_bordero_w
	and (cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w,'XPTO') or cd_cgc = coalesce(cd_cgc_w,'XPTO'))
	and	((coalesce(dt_liquidacao::text, '') = '' and ie_acao_p = 'I') or ((dt_liquidacao IS NOT NULL AND dt_liquidacao::text <> '') and ie_acao_p = 'E'));

--	0 - Sem Acao

--	1 - Baixa Titulo a Receber

--	2 - Baixa Titulo a Pagar

--	3 - Recebimento de Adiantamento

--	4 - Devolucao de Adiantamento

--	5 - Baixa de Bordero

--	6 - Baixa de Deposito

--	7 - Devolucao Cheque Banco

--	8 - Baixa de Titulo e Cheque

--	9 - Baixa pagamento escritural

--	10 - Recebimento de convenio

--	11 - Envio para cobranca

--	12 - Gerar fluxo de caixa na acao

--	13 - Devolucao de adiantamento pago

--	14 - Devolucao de cheque ao paciente

--	15 - Pagamento com cheque de terceiros

--	16 - Compensacao de cheque emitido

--	17 - Baixa de Bordero a Receber

--	18 - Baixa de titulo a receber por gratuidade

--	19 - Saqu de cheque recebido

--	20 - Baixa de cobranca escritural

--	22 - Pagamento com bordero de cheque de terceiros

--	25 - Compensacao de cheque recebido

--	28 - Envio de cheque para custodia

--	29 - Resgate de cheque da custodia

--	30 - Negociacao de cheque

--	31 - Devolucao Adiantamento em Especie

--	32 - Recuperacao de perda

--	33 - Baixa de cheque por perda

--	34 - Recebimento de Adiantamento com baixa de titulo

--	35 - Cancelamento de cheque emitido
BEGIN
begin
select	a.cd_moeda_padrao,
	b.cd_empresa,
	coalesce(IE_PRIOR_TRANS_BORDERO_REC,'TB'),
	a.nr_seq_trans_desp_banco,
	coalesce(a.ie_bordero_banco,'B'),
	coalesce(a.ie_dt_baixa_cobr_escrit,'A'),
	coalesce(a.ie_movto_bco_cobr_escrit,'N')
into STRICT	cd_moeda_w,
	cd_empresa_w,
	IE_PRIOR_TRANS_BORDERO_REC_w,
	nr_seq_trans_desp_banco_w,
	ie_bordero_banco_rec_w,
	ie_dt_baixa_cobr_escrit_w,
	ie_movto_bco_cobr_escrit_w
from	estabelecimento b,
	parametro_contas_receber a
where	a.cd_estabelecimento	= b.cd_estabelecimento
and	a.cd_estabelecimento	= cd_estabelecimento_p;
exception
when no_data_found then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(185514);
when too_many_rows then
    raise;
end;

select	coalesce(max(ie_gerar_nc_tit_mens_canc),'N'),
	coalesce(max(ie_gerar_nc_tit_resc),'N'),
	max(nr_seq_trans_inadimplencia)
into STRICT	ie_gerar_nc_tit_mens_canc_w,
	ie_gerar_nc_tit_resc_w,
	nr_seq_trans_inadimplencia_w
from	pls_parametros_cr
where	cd_estabelecimento	= cd_estabelecimento_p;

select max(a.nr_bordero)
into STRICT nr_bordero_w
from movto_trans_financ a
where	a.nr_sequencia		= nr_seq_movto_trans_p;

if (nr_bordero_w IS NOT NULL AND nr_bordero_w::text <> '') then
	select max(ie_bordero_banco)
	into STRICT ie_bordero_banco_w
	from bordero_pagamento
	where nr_bordero = nr_bordero_w;

	if (coalesce(ie_bordero_banco_w::text, '') = '' or ie_bordero_banco_w  = 'P') then
		select	max(ie_bordero_banco),
			max(ie_exige_liberacao)
		into STRICT	ie_bordero_banco_w,
			ie_exige_liberacao_w
		from	parametros_contas_pagar
		where	cd_estabelecimento	= cd_estabelecimento_p;
	end if;
elsif (coalesce(nr_bordero_w::text, '') = '') then
	select	max(ie_bordero_banco),
		max(ie_exige_liberacao)
	into STRICT	ie_bordero_banco_w,
		ie_exige_liberacao_w
	from	parametros_contas_pagar
	where	cd_estabelecimento	= cd_estabelecimento_p;
end if;

if (ie_acao_p	= 'I') then
	begin
	select	a.vl_transacao,
		a.dt_transacao,
		a.dt_referencia_saldo,
		a.nr_seq_banco,
		a.nr_seq_titulo_pagar,
		a.nr_seq_titulo_receber,
		a.nr_bordero,
		a.nr_adiantamento,
		a.cd_tipo_recebimento,
		a.cd_tipo_baixa_cpa,
		a.nr_seq_deposito,
		a.nr_seq_cheque,
		a.nr_seq_trans_financ,
		b.ie_banco,
		b.ie_acao,
		a.nr_seq_banco_escrit,
		a.nr_seq_banco_od,
		b.nr_seq_trans_banco,
		a.cd_cgc,
		coalesce(a.cd_conta_financ, b.cd_conta_financ),
		a.nr_adiant_pago,
		a.nr_sequencia,
		a.ds_historico,
		a.nr_seq_caixa,
		a.nr_seq_lote,
		a.nr_seq_saldo_banco,
		a.nr_seq_cheque_cp,
		a.nr_bordero_rec,
		a.nr_seq_motivo_dev,
		a.nr_seq_caixa_rec,
		b.ds_transacao,
		nr_seq_cobr_escrit,
		a.nr_seq_bordero_cheque,
		b.cd_transacao,
		a.cd_portador,
		a.cd_tipo_portador,
		a.nr_seq_movto_orig,
		a.cd_pessoa_fisica,
		a.nr_seq_pagador,
		a.vl_transacao_estrang,
		a.vl_cotacao,
		a.cd_moeda,
		a.cd_convenio,
		a.nr_seq_movto_cartao
	into STRICT	vl_transacao_w,
		dt_transacao_w,
		dt_referencia_saldo_w,
		nr_seq_banco_w,
		nr_titulo_pagar_w,
		nr_titulo_receber_w,
		nr_bordero_w,
		nr_adiantamento_w,
		cd_tipo_recebimento_w,
		cd_tipo_baixa_cpa_w,
		nr_seq_deposito_w,
		nr_seq_cheque_w,
		nr_seq_trans_financ_w,
		ie_banco_w,
		ie_acao_w,
		nr_seq_banco_escrit_w,
		nr_seq_banco_od_w,
		nr_seq_trans_banco_w,
		cd_cgc_w,
		cd_conta_financ_w,
		nr_adiant_pago_w,
		nr_sequencia_w,
		ds_historico_w,
		nr_seq_caixa_w,
		nr_seq_lote_w,
		nr_seq_saldo_banco_w,
		nr_seq_cheque_cp_w,
		nr_bordero_rec_w,
		nr_seq_motivo_dev_w,
		nr_seq_caixa_rec_w,
		ds_transacao_w,
		nr_seq_cobr_escrit_w,
		nr_seq_bordero_cheque_w,
		cd_transacao_w,
		cd_portador_w,
		cd_tipo_portador_w,
		nr_seq_movto_orig_w,
		cd_pessoa_fisica_w,
		nr_seq_pagador_w,
		vl_transacao_estrang_w,
		vl_cotacao_w,
		cd_moeda_trans_w,
		cd_convenio_transacao_w,
		nr_seq_movto_cartao_w
	from	transacao_financeira b,
		movto_trans_financ a
	where	a.nr_seq_trans_financ	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_movto_trans_p;


	select obter_moeda_padrao_empresa(cd_estabelecimento_p,'E'),
		obter_moeda_padrao_empresa(nr_seq_banco_w,'B')
	into STRICT cd_moeda_rel_w,
		cd_moeda_banco_w
	;

	if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then

		select	max(ie_repasse_gratuidade)
		into STRICT	ie_repasse_gratuidade_w
		from	convenio_estabelecimento b,
			titulo_receber a
		where	coalesce(a.cd_convenio_conta,obter_convenio_tit_rec(a.nr_titulo)) = b.cd_convenio
		and	a.cd_estabelecimento	= b.cd_estabelecimento
		and	a.nr_titulo		= nr_titulo_receber_w;
	end if;


	if (coalesce(ie_repasse_gratuidade_w::text, '') = '') then
		begin
		select 	coalesce(ie_repasse_gratuidade,'N')
		into STRICT	ie_repasse_gratuidade_w
		from	parametro_faturamento
		where	cd_estabelecimento = cd_estabelecimento_p;
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185531);
			--'Os parametros do faturamento deste estabelecimento nao estao cadastrados!');
		end;
	end if;




	if (ie_acao_w = 99) then -- dsantos em 21/06/2010. OS 220460
		begin
		if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then
			ie_acao_w	:= 1;
		elsif (nr_adiantamento_w IS NOT NULL AND nr_adiantamento_w::text <> '') then
			ie_acao_w	:= 3;
		elsif (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then
			ie_acao_w	:= 8;
		elsif (nr_seq_banco_escrit_w IS NOT NULL AND nr_seq_banco_escrit_w::text <> '') then
			ie_acao_w	:= 9;
		elsif (nr_seq_receb_w IS NOT NULL AND nr_seq_receb_w::text <> '') then
			ie_acao_w	:= 10;
		elsif (nr_bordero_rec_w IS NOT NULL AND nr_bordero_rec_w::text <> '') then
			ie_acao_w	:= 17;
		elsif (nr_seq_caixa_rec_w IS NOT NULL AND nr_seq_caixa_rec_w::text <> '') then
			ie_acao_w	:= 18;
		elsif (nr_seq_cobr_escrit_w IS NOT NULL AND nr_seq_cobr_escrit_w::text <> '') then
			ie_acao_w	:= 20;
		end if;

		end;

	end if;

	if (ie_acao_w = 3) then
		begin

		if (coalesce(nr_adiantamento_w::text, '') = '') and (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then
			select	nr_adiantamento
			into STRICT	nr_adiantamento_w
			from	cheque_cr
			where	nr_seq_cheque	= nr_seq_cheque_w;
		end if;

		if (coalesce(nr_adiantamento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185533);
			--'Adiantamento nao informado');
		end if;

		-- Projeto Multimoeda - Transacao em moeda estrangeira valida o saldo do adiantamento em moeda estrangeira. 
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			select	coalesce(max(coalesce(vl_saldo_estrang,0)),0)
			into STRICT	vl_saldo_adiant_w
			from	adiantamento
			where	nr_adiantamento		= nr_adiantamento_w;

			if (vl_transacao_estrang_w > vl_saldo_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185534);
				--'O valor da transacao nao pode ser maior que o valor do saldo do adiantamento');
			end if;
		else
			select	coalesce(max(coalesce(vl_saldo,0)),0)
			into STRICT	vl_saldo_adiant_w
			from	adiantamento
			where	nr_adiantamento		= nr_adiantamento_w;

			if (vl_transacao_w > vl_saldo_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185534);
				--'O valor da transacao nao pode ser maior que o valor do saldo do adiantamento');
			end if;
		end if;

		select 	coalesce(sum(CASE WHEN b.ie_saldo_caixa='E' THEN vl_transacao WHEN b.ie_saldo_caixa='S' THEN vl_transacao * -1  ELSE 0 END ),0),
			coalesce(sum(CASE WHEN b.ie_saldo_caixa='E' THEN vl_transacao_estrang WHEN b.ie_saldo_caixa='S' THEN vl_transacao_estrang * -1  ELSE 0 END ),0)
		into STRICT	vl_transacao_adiant_w,
			vl_transacao_adiant_est_w
		from	transacao_financeira b,
			movto_trans_financ a
		where	a.nr_seq_trans_financ	= b.nr_sequencia
		--and	b.ie_acao		= 3 Francisco - 28/11/2008 - Agora lanca devolucao 
		and	b.ie_caixa		in ('D','A')
		and	a.nr_adiantamento	= nr_adiantamento_w
		and	(a.nr_Seq_caixa IS NOT NULL AND a.nr_Seq_caixa::text <> '');

		if (nr_seq_caixa_w IS NOT NULL AND nr_seq_caixa_w::text <> '') then
			select	ds_caixa
			into STRICT	ds_caixa_w
			from	caixa
			where	nr_sequencia	= nr_seq_caixa_w;
		end if;

		-- Projeto Multimoeda - Transacao em moeda estrangeira valida o saldo do adiantamento em moeda estrangeira. 
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			if (vl_transacao_adiant_est_w > vl_saldo_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185538,'DS_CAIXA_W='||ds_caixa_w||';DT_REFERENCIA_SALDO_W='||dt_referencia_saldo_w);
				--'O total do valor de recebimento deste adiantamento nao pode ser maior que o valor do adiantamento' || chr(13) ||

				--'Este adiantamento ja foi recebido pelo caixa ' || ds_caixa_w || ' em ' || dt_referencia_saldo_w);
			end if;
		else
			if (vl_transacao_adiant_w > vl_saldo_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185538,'DS_CAIXA_W='||ds_caixa_w||';DT_REFERENCIA_SALDO_W='||dt_referencia_saldo_w);
				--'O total do valor de recebimento deste adiantamento nao pode ser maior que o valor do adiantamento' || chr(13) ||

				--'Este adiantamento ja foi recebido pelo caixa ' || ds_caixa_w || ' em ' || dt_referencia_saldo_w);
			end if;
		end if;


		update	adiantamento
		set		ie_status	= 'D'
		where	nr_adiantamento	= nr_adiantamento_w;

		CALL gerar_adiantamento_hist(nr_adiantamento_w,
						'S',
						clock_timestamp(),
						Wheb_mensagem_pck.get_texto(355709),
						nm_usuario_p,
						'N');

		end;
	end if;

	if (ie_acao_w = 4) then

		if (coalesce(nr_adiantamento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185533);
			--'Adiantamento nao informado');
		end if;

		-- Projeto Multimoeda - Se houver moeda cadastrada para o estabelecimento e para o banco, e a moeda do banco for diferente da moeda do estabelecimento, trabalhara com valores estrangeiros, caso contrario mantem o padrao. 
		if ((cd_moeda_rel_w IS NOT NULL AND cd_moeda_rel_w::text <> '') and (cd_moeda_banco_w IS NOT NULL AND cd_moeda_banco_w::text <> '') and cd_moeda_rel_w <> cd_moeda_banco_w) then
			select	coalesce(max(coalesce(vl_adto_estrang,0)),0),
				max(cd_moeda)
			into STRICT	vl_saldo_adiant_w,
				cd_moeda_adiant_w
			from	adiantamento
			where	nr_adiantamento		= nr_adiantamento_w;

			if (cd_moeda_banco_w <> cd_moeda_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(339977);
				-- Moeda do adiantamento deve ser igual a moeda da transacao.
			else
				if (vl_transacao_estrang_w > vl_saldo_adiant_w) then
					-- O valor da devolucao nao pode ser maior que o valor do adiantamento!

					--Devolucao: vl_transacao_w

					--Adiantamento: vl_saldo_adiant_w 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(185543,	'VL_TRANSACAO_W=' || vl_transacao_estrang_w ||
											';VL_SALDO_ADIANT_W=' || vl_saldo_adiant_w);

				else
					select	coalesce(max(nr_sequencia),0) + 1
					into STRICT	nr_seq_devol_w
					from	adiantamento_dev
					where	nr_adiantamento		= nr_adiantamento_w;

					update	cheque_cr
					set	dt_devolucao		= pkg_date_utils.get_time(dt_transacao_w,0,0,0),
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_usuario_p
					where	nr_adiantamento		= nr_adiantamento_w;

					insert into adiantamento_dev(nr_adiantamento,
						nr_sequencia,
						dt_devolucao,
						vl_devolucao,
						vl_devolucao_estrang,
						vl_cotacao,
						vl_complemento,
						cd_moeda,
						dt_atualizacao,
						nm_usuario,
						ds_motivo_dev,
						nr_lote_contabil,
						nr_seq_trans_fin,
						nr_seq_movto_tf)
					values (nr_adiantamento_w,
						nr_seq_devol_w,
						pkg_date_utils.get_time(dt_transacao_w,0,0,0),
						vl_transacao_w,
						vl_transacao_estrang_w,
						vl_cotacao_w,
						vl_transacao_w - vl_transacao_estrang_w,
						cd_moeda_adiant_w,
						clock_timestamp(),
						nm_usuario_p,
						null,
						null,
						null,
						nr_seq_movto_trans_p);

					CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null, vl_cotacao_w);

				end if;
			end if;


		else


			-- ahoffelder - OS 441929 - 29/05/2012 - troquei o saldo pelo valor do adiantamento, porque a devolucao nao pode ser maior do que o valor original do adiantamento 
			select	coalesce(max(coalesce(vl_adiantamento,0)),0)
			into STRICT	vl_saldo_adiant_w
			from	adiantamento
			where	nr_adiantamento		= nr_adiantamento_w;

			if (vl_transacao_w > vl_saldo_adiant_w) then

				-- O valor da devolucao nao pode ser maior que o valor do adiantamento!

				-- Devolucao: vl_transacao_w

				-- Adiantamento: vl_saldo_adiant_w 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185543,	'VL_TRANSACAO_W=' || vl_transacao_w ||
										';VL_SALDO_ADIANT_W=' || vl_saldo_adiant_w);

			else

				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_devol_w
				from	adiantamento_dev
				where	nr_adiantamento		= nr_adiantamento_w;

				update	cheque_cr
				set	dt_devolucao		= pkg_date_utils.get_time(dt_transacao_w,0,0,0),
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_adiantamento		= nr_adiantamento_w;

				insert	into adiantamento_dev(nr_adiantamento,
					nr_sequencia,
					dt_devolucao,
					vl_devolucao,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					ds_motivo_dev,
					nr_lote_contabil,
					nr_seq_trans_fin,
					nr_seq_movto_tf)
				values (nr_adiantamento_w,
					nr_seq_devol_w,
					pkg_date_utils.get_time(dt_transacao_w,0,0,0),
					vl_transacao_w,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					nr_seq_movto_trans_p);

				CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null);

			end if;
		end if;

	end if;

	if (ie_acao_w = 5) then
		begin

		if (coalesce(nr_bordero_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185544,'CD_TRANSACAO_W='||CD_TRANSACAO_W||';DS_TRANSACAO_W='||DS_TRANSACAO_W);
			--'A transacao "' || CD_TRANSACAO_W ||' - ' || DS_TRANSACAO_W || '" nao tem bordero informado!');
		end if;

		if (coalesce(cd_tipo_baixa_cpa_w::text, '') = '') then
			-- O tipo de baixa nao foi informado na transacao!
			CALL wheb_mensagem_pck.exibir_mensagem_abort(988279);
		end if;

		if (ie_bordero_banco_w <> 'F') then
			select	count(*)
			into STRICT	cont_w
			from	titulo_pagar_bordero_v
			where	nr_bordero	= nr_bordero_w
			and	(dt_liquidacao IS NOT NULL AND dt_liquidacao::text <> '');

			if (cont_w > 0) then
				select	max(nr_titulo)
				into STRICT	nr_titulo_pagar_w
				from	titulo_pagar_bordero_v
				where	nr_bordero	= nr_bordero_w
				and	(dt_liquidacao IS NOT NULL AND dt_liquidacao::text <> '');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185548,'NR_TITULO_PAGAR_W='||NR_TITULO_PAGAR_W);
				--'O titulo ' || NR_TITULO_PAGAR_W ||' do bordero esta liquidado!');
			end if;

			select	coalesce(sum(vl_bordero),0) +
				coalesce(sum(VL_JUROS_BORDERO),0) +
				coalesce(sum(VL_MULTA_BORDERO), 0) -
				coalesce(sum(vl_desconto_bordero),0) +
				coalesce(sum(vl_out_desp_bordero), 0),
				coalesce(sum(vl_bordero_estrang),0),
				coalesce(sum(vl_total_bordero),0),
				coalesce(sum(vl_liquido_bordero),0)
			into STRICT	vl_saldo_bordero_w,
				vl_saldo_bordero_est_w,
				vl_total_bordero_w,
				vl_liquido_bordero_w
			from	titulo_pagar_bordero_v
			where	nr_bordero	= nr_bordero_w;


			--OS 1228299
			ie_forma_valor_bordero_w := obter_param_usuario(814, 101, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_forma_valor_bordero_w);
			begin
			if (ie_forma_valor_bordero_w = 'T') then
				vl_saldo_bordero_w := vl_total_bordero_w;
			elsif (ie_forma_valor_bordero_w = 'L') then
				vl_saldo_bordero_w := vl_liquido_bordero_w;
			end if;
			exception when others then
				vl_saldo_bordero_w := vl_saldo_bordero_w;
			end;
			--Fim OS 1228299 


			-- Edgar 12/02/2008, OS 80633, calcular tributos que serao gerados na baixa do titulo
			select	coalesce(sum(vl_imposto),0)
			into STRICT	vl_imposto_bordero_w
			from	w_titulo_pagar_imposto
			where	nr_bordero	= nr_bordero_w;

			vl_saldo_bordero_w		:= vl_saldo_bordero_w - vl_imposto_bordero_w;

		else

			select	coalesce(max(a.nr_bordero),0)
			into STRICT	cont_w
			from	titulo_pagar_bordero_v a,
				bordero_pagamento b
			where	b.nr_bordero = nr_bordero_w
			and		(a.dt_liquidacao IS NOT NULL AND a.dt_liquidacao::text <> '')
			and (a.cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w,'XPTO') or a.cd_cgc = coalesce(cd_cgc_w,'XPTO'))
			and 	a.nr_bordero    = b.nr_bordero;

			if (cont_w > 0) then
				select	max(a.nr_titulo)
				into STRICT	nr_titulo_pagar_w
				from	titulo_pagar_bordero_v a,
					bordero_pagamento b
				where	b.nr_bordero	= nr_bordero_w
				and		(a.dt_liquidacao IS NOT NULL AND a.dt_liquidacao::text <> '')
				and (a.cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w,'XPTO') or a.cd_cgc = coalesce(cd_cgc_w,'XPTO'))
				and		a.nr_bordero = b.nr_bordero;

				CALL wheb_mensagem_pck.exibir_mensagem_abort(nr_seq_mensagem_p => 185548, vl_macros_p => 'NR_TITULO_PAGAR_W='||NR_TITULO_PAGAR_W);
				--'O titulo ' || NR_TITULO_PAGAR_W ||' do bordero esta liquidado!');
			end if;

			select	coalesce(sum(a.vl_bordero),0) +
				coalesce(sum(a.VL_JUROS_BORDERO),0) +
				coalesce(sum(a.VL_MULTA_BORDERO), 0) -
				coalesce(sum(a.vl_desconto_bordero),0) +
				coalesce(sum(a.vl_out_desp_bordero), 0),
				coalesce(sum(a.vl_bordero_estrang),0),
				coalesce(sum(a.vl_total_bordero),0),
				coalesce(sum(a.vl_liquido_bordero),0)
			into STRICT	vl_saldo_bordero_w,
				vl_saldo_bordero_est_w,
				vl_total_bordero_w,
				vl_liquido_bordero_w
			from	titulo_pagar_bordero_v a,
                bordero_pagamento b
			where	b.nr_bordero	= nr_bordero_w
            and	a.nr_bordero	= b.nr_bordero
            and (a.cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w,'XPTO') or a.cd_cgc = coalesce(cd_cgc_w,'XPTO'));

		end if;

		-- Projeto Multimoeda - Transacao em moeda estrangeira valida o valor do bordero em moeda estrangeira. 
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			if (vl_saldo_bordero_est_w <> vl_transacao_estrang_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185549,'VL_SALDO_BORDERO_W='||to_char(VL_SALDO_BORDERO_EST_W)||';VL_TRANSACAO_W='||to_char(VL_TRANSACAO_ESTRANG_W));
				---'O valor do bordero nao bate com o valor da transacao!' || chr(13) ||

				--				'Vl bordero: ' || to_char(VL_SALDO_BORDERO_W) || chr(13) ||

				--				'Vl transacao: ' || to_char(VL_TRANSACAO_W));*/
			end if;
		else
			if (vl_saldo_bordero_w <> vl_transacao_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185549,'VL_SALDO_BORDERO_W='||to_char(VL_SALDO_BORDERO_W)||';VL_TRANSACAO_W='||to_char(VL_TRANSACAO_W));
				---'O valor do bordero nao bate com o valor da transacao!' || chr(13) ||

				--				'Vl bordero: ' || to_char(VL_SALDO_BORDERO_W) || chr(13) ||

				--				'Vl transacao: ' || to_char(VL_TRANSACAO_W));*/
			end if;
		end if;

        if (ie_bordero_banco_w <> 'F') then

		open	c01;
		loop
		fetch	c01 into
			nr_titulo_bordero_w,
			vl_saldo_titulo_bordero_w,
			nr_seq_trans_baixa_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
			CALL Baixa_Titulo_Pagar(cd_estabelecimento_p,
						cd_tipo_baixa_cpa_w,
						nr_titulo_bordero_w,
						vl_saldo_titulo_bordero_w,
						nm_usuario_p,
						coalesce(nr_seq_trans_baixa_w, nr_seq_trans_financ_w),
						nr_bordero_w, null, dt_transacao_w, nr_seq_banco_w);

			-- Francisco  OS 53121 - 20/04/07 - Gravar na baixa a transacao que a originou 
			select	max(nr_sequencia)
			into STRICT	nr_seq_baixa_w
			from	titulo_pagar_baixa
			where	nr_titulo	= nr_titulo_bordero_w;

			update	titulo_pagar_baixa
			set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
			where	nr_titulo		= nr_titulo_bordero_w
			and	nr_sequencia		= nr_seq_baixa_w;

            CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_bordero_w, nm_usuario_p);

			CALL Gerar_W_Tit_Pag_imposto(nr_titulo_bordero_w, nm_usuario_p);
			end;
		end loop;
		close c01;

		else

			open	c10;
			loop
			fetch	c10 into --NOSONAR
				nr_titulo_bordero_w,
				vl_saldo_titulo_bordero_w,
				nr_seq_trans_baixa_w;
			EXIT WHEN NOT FOUND; /* apply on c10 */
			begin
				CALL Baixa_Titulo_Pagar(cd_estabelecimento_p,
					cd_tipo_baixa_cpa_w,
					nr_titulo_bordero_w,
					vl_saldo_titulo_bordero_w,
					nm_usuario_p,
					coalesce(nr_seq_trans_baixa_w, nr_seq_trans_financ_w),
					nr_bordero_w, null, dt_transacao_w, nr_seq_banco_w);

				-- Francisco  OS 53121 - 20/04/07 - Gravar na baixa a transacao que a originou
				select	max(nr_sequencia)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_bordero_w;

				update	titulo_pagar_baixa
				set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
				where	nr_titulo		= nr_titulo_bordero_w
				and	nr_sequencia		= nr_seq_baixa_w;

				CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_bordero_w, nm_usuario_p);

				CALL Gerar_W_Tit_Pag_imposto(nr_titulo_bordero_w, nm_usuario_p);
			end;
			end loop;
			close c10;

		end if;

		if (nr_seq_caixa_w IS NOT NULL AND nr_seq_caixa_w::text <> '') then
			select	ds_caixa
			into STRICT	ds_caixa_w
			from	caixa
			where	nr_sequencia	= nr_seq_caixa_w;

			update	bordero_pagamento
			set	ds_observacao	= ds_observacao || '- ' || OBTER_DESC_EXPRESSAO(726512) || ds_caixa_w
			where	nr_bordero	= nr_bordero_w;
		end if;

		update	bordero_pagamento
		set	dt_real_pagamento	= dt_transacao_w
		where 	nr_bordero		= nr_bordero_w;
		end;

	end if;


	if (ie_acao_w = 8) then
		begin


		if (coalesce(nr_seq_cheque_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(228194);
		end if;


		CALL devolucao_adiantamento_cheque(nr_adiantamento_w,
				nr_seq_cheque_w,
				dt_transacao_w,
				nm_usuario_p);

		CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w,nm_usuario_p);
		CALL atualizar_cobranca_cheque(nr_seq_cheque_w,nm_usuario_p);

		end;
	end if;

	if (ie_acao_w = 1) then
		begin

		if (coalesce(nr_titulo_receber_w::text, '') = '') or (coalesce(cd_tipo_recebimento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185553,'DS_TRANSACAO_W='||DS_TRANSACAO_W);
			--'A transacao "' || DS_TRANSACAO_W || '" nao tem tipo de recebimento ou o numero do titulo nao foi informado!');
		end if;

		select	nr_seq_trans_fin_baixa_adiant
		into STRICT	nr_seq_trans_adiant_w
		from	parametro_contas_receber
		where	cd_estabelecimento	= cd_estabelecimento_p;

		if (nr_seq_caixa_w IS NOT NULL AND nr_seq_caixa_w::text <> '') and		-- Edgar 14/09/2005, OS 14366, Vincular os cheques
			(nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') and (cd_tipo_recebimento_w IS NOT NULL AND cd_tipo_recebimento_w::text <> '') then

			select	ie_tipo_consistencia
			into STRICT	ie_tipo_consistencia_w
			from	tipo_recebimento
			where	cd_tipo_recebimento 	= cd_tipo_recebimento_w;

			if (ie_tipo_consistencia_w = 3) then


				update	cheque_cr a
				set	a.nr_titulo		= nr_titulo_receber_w,
					a.dt_atualizacao	= clock_timestamp(),
					a.nm_usuario		= nm_usuario_p
				where	a.nr_seq_cheque	in (SELECT	x.nr_seq_cheque
						from	movto_trans_financ x
						where	x.nr_seq_caixa	= nr_seq_caixa_w
						and	x.nr_seq_lote	= nr_seq_lote_w
						and	(x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
				and	coalesce(a.nr_titulo::text, '') = '';
			end if;

		end if;


		if (nr_seq_caixa_rec_w IS NOT NULL AND nr_seq_caixa_rec_w::text <> '') then


			select 	count(*)
			into STRICT	qt_titulo_caixa_rec_w
			from	titulo_receber_liq
			where	nr_seq_caixa_rec = nr_seq_caixa_rec_w;


			if (qt_titulo_caixa_rec_w = 1) then


				update	cheque_cr a
				set	a.nr_titulo		= nr_titulo_receber_w,
					a.dt_atualizacao	= clock_timestamp(),
					a.nm_usuario		= nm_usuario_p
				where	nr_seq_caixa_rec	= nr_seq_caixa_rec_w;


			end if;


		end if;

		if (coalesce(nr_seq_caixa_rec_w::text, '') = '') then
			begin
			dbms_application_info.SET_ACTION('ATUALIZAR_TRANSACAO_FINANCEIRA'); 	-- ahoffelder - OS 325513 - 17/06/2011 - consistir lote contabil gerado 
			CALL Baixa_Titulo_Receber(cd_estabelecimento_p,
						cd_tipo_recebimento_w,
						nr_titulo_receber_w,
						nr_seq_trans_financ_w,
						vl_transacao_w,
						PKG_DATE_UTILS.start_of(dt_transacao_w,'dd',0),
						nm_usuario_p,
						null,
						nr_bordero_rec_w,
						nr_seq_banco_w,
						0,
						0,
						nr_seq_movto_trans_p);

			exception
			when others then
				dbms_application_info.SET_ACTION('');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185560,'SQLERRM='||sqlerrm);
				-- sqlerrm);
			end;
			
			begin
			ds_log_w := substr('3 - nr_bordero_rec_w='||nr_bordero_rec_w||' - nr_titulo_receber_w='||nr_titulo_receber_w||' - nr_seq_trans_financ_w='||nr_seq_trans_financ_w||
				' - Callstack='||dbms_utility.format_call_stack,1,2000);

			insert into log_tasy(	cd_log,
						ds_log,
						nm_usuario,
						dt_atualizacao)
				values ( 74385,
						 ds_log_w,
						 'TASYY',
						 clock_timestamp());
			exception when no_data_found then
			    ds_log_w := null;
			when too_many_rows then
			   ds_log_w := null;
			end;

			-- Francisco  OS 53770 - 30/03/07 - Gravar na baixa a transacao que a originou 
			select	max(nr_sequencia)
			into STRICT	nr_seq_baixa_w
			from	titulo_receber_liq
			where	nr_titulo	= nr_titulo_receber_w
			and	coalesce(ie_lib_caixa, 'S') = 'S';

			update	titulo_receber_liq
			set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
			where	nr_titulo		= nr_titulo_receber_w
			and	nr_sequencia		= nr_seq_baixa_w;
		end if;

		-- Francisco - 22/01/2007 - OS 43000 - Vincular adiantamento com a baixa

		--if	(nr_adiantamento_w is not null) then

		--	update	titulo_receber_liq a

		--	set	a.nr_adiantamento	= nr_adiantamento_w

		--	where	a.nr_titulo		= nr_titulo_receber_w

		--	and	a.nr_sequencia		= (select max(x.nr_sequencia)

		--					   from	  titulo_receber_liq x

		--					   where  x.nr_titulo = a.nr_titulo);


		--	atualizar_saldo_adiantamento(nr_adiantamento_w,nm_usuario_p);

		--end if; Francisco - 08/02/07 - Retirei pois nao era mais necessario 
		CALL Atualizar_Saldo_Tit_Rec(nr_titulo_receber_w, nm_usuario_p);


		--AAMFIRMO OS 830247 em 13/05/2015
		if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') and (nr_seq_baixa_w IS NOT NULL AND nr_seq_baixa_w::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
			CALL gerar_nf_parcial_tit_rec_liq( nr_titulo_receber_w,
						      nr_seq_baixa_w,
						      nm_usuario_p,
						      'N', --Nao pode commitar aqui
						      'I');
		end if;




		end;




	end if;


	if (ie_acao_w = 2) then
		begin

		if	((coalesce(nr_titulo_pagar_w::text, '') = '') and (ie_bordero_banco_w <> 'R' or coalesce(nr_bordero_w::text, '') = '')) or (coalesce(cd_tipo_baixa_cpa_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1083982,'DS_TRANSACAO_W='||DS_TRANSACAO_W);
			--'A transacao "' || ds_transacao_w ||'" nao tem tipo de baixa ou o numero do titulo nao foi informado!');
		end if;

		-- Francisco - 03/06/2008 - Fiz esse tratamento por que vem o valor de juros e multa na transacao

		-- e ja trata dentro da procedure Baixa_titulo_pagar 
		if (nr_bordero_w IS NOT NULL AND nr_bordero_w::text <> '') and (nr_titulo_pagar_w IS NOT NULL AND nr_titulo_pagar_w::text <> '') then
			select	vl_bordero
			into STRICT	vl_titulo_bordero_w
			from	titulo_pagar_bordero_v
			where	nr_bordero	= nr_bordero_w
			and	nr_titulo	= nr_titulo_pagar_w;
		end if;

		if (coalesce(nr_bordero_w::text, '') = '') or (ie_bordero_banco_w <> 'R') then -- ahoffelder - OS 251617 - 29/10/2010 
			begin
			dbms_application_info.SET_ACTION('ATUALIZAR_TRANSACAO_FINANCEIRA'); 	-- ahoffelder - OS 325513 - 17/06/2011 - consistir lote contabil gerado 
			if (ie_exige_liberacao_w in ('S','F')) then
				select	max(a.dt_liberacao),
					max(a.ie_tipo_titulo)
				into STRICT	dt_liberacao_w,
					ie_tipo_titulo_w
				from	titulo_pagar a
				where	a.nr_titulo	= nr_titulo_pagar_w;

				if	((ie_exige_liberacao_w = 'S') or (ie_tipo_titulo_w = '0')) and (coalesce(dt_liberacao_w::text, '') = '') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(185565,'NR_TITULO_PAGAR_W='||NR_TITULO_PAGAR_W);
					--'O titulo ' || NR_TITULO_PAGAR_W || ' ainda nao foi liberado!');
				end if;

			end if;

			ie_tf_diferente_w := obter_param_usuario(813, 148, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_tf_diferente_w);

			if (coalesce(ie_tf_diferente_w,'S') = 'N') then

				select	max(a.nr_seq_trans_fin_baixa)
				into STRICT	nr_seq_tf_tit_pagar_w
				from	titulo_pagar a
				where	a.nr_titulo	= nr_titulo_pagar_w;

				if (nr_seq_tf_tit_pagar_w IS NOT NULL AND nr_seq_tf_tit_pagar_w::text <> '') and (nr_seq_tf_tit_pagar_w	<> nr_seq_trans_financ_w) then

					-- A transacao financeira selecionada e diferente da transacao financeira de baixa do titulo! Parametro [148] 
					CALL wheb_mensagem_pck.exibir_mensagem_abort(199405);

				end if;

			end if;

			CALL Baixa_Titulo_Pagar(cd_estabelecimento_p,
						cd_tipo_baixa_cpa_w,
						nr_titulo_pagar_w,
						coalesce(vl_titulo_bordero_w,vl_transacao_w),
						nm_usuario_p,
						nr_seq_trans_financ_w,
						nr_bordero_w,
						null,
						dt_transacao_w,
						nr_seq_banco_w,
						nr_seq_cheque_cp_w,
						nr_seq_movto_trans_p);

			exception
			when others then
				dbms_application_info.SET_ACTION('');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185560,'SQLERRM='||sqlerrm);
				--sqlerrm);
			end;

			-- Francisco  OS 53121 - 20/04/07 - Gravar na baixa a transacao que a originou 
			select	max(nr_sequencia)
			into STRICT	nr_seq_baixa_w
			from	titulo_pagar_baixa
			where	nr_titulo	= nr_titulo_pagar_w;


			update	titulo_pagar_baixa
			set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
			where	nr_titulo		= nr_titulo_pagar_w
			and	nr_sequencia		= nr_seq_baixa_w;


			CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_pagar_w, nm_usuario_p);
			CALL Gerar_W_Tit_Pag_imposto(nr_titulo_pagar_w, nm_usuario_p);
		end if;

		end;
	end if;

	if (ie_acao_w = 7) and (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then

		select	dt_deposito,
			dt_devolucao_banco,
			dt_seg_devolucao,
			dt_venda_terc,
			dt_saque
		into STRICT	dt_deposito_w,
			dt_devolucao_w,
			dt_seg_devolucao_w,
			dt_venda_terc_w,
			dt_saque_w
		from	cheque_cr
		where	nr_seq_cheque = nr_seq_cheque_w;

		if (dt_venda_terc_w IS NOT NULL AND dt_venda_terc_w::text <> '') or (dt_saque_w IS NOT NULL AND dt_saque_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185569);
			-- 'O cheque nao pode ser devolvido pois ja foi vendido para um terceiro ou ja foi sacado!');
		end if;

		if (dt_deposito_w IS NOT NULL AND dt_deposito_w::text <> '') and (coalesce(dt_devolucao_w::text, '') = '') then

			update	cheque_cr
			set	dt_devolucao_banco	= dt_transacao_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_dev	= nr_seq_motivo_dev_w   --Paulo OS 45431 06/12/2006
			where	nr_seq_cheque		= nr_seq_cheque_w;

		elsif (dt_deposito_w IS NOT NULL AND dt_deposito_w::text <> '') and (dt_devolucao_w IS NOT NULL AND dt_devolucao_w::text <> '') and (coalesce(dt_seg_devolucao_w::text, '') = '') then

			update	cheque_cr
			set	dt_seg_devolucao	= dt_transacao_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_seg_dev	= nr_seq_motivo_dev_w
			where	nr_seq_cheque		= nr_seq_cheque_w;

		elsif (obter_status_cheque(nr_seq_cheque_w) = 9) then -- caso o cheque tiver 2 reap. entao podera ter 3 dev.
			update	cheque_cr
			set	dt_terc_devolucao	= dt_transacao_w,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_terc_dev	= nr_seq_motivo_dev_w
			where	nr_seq_cheque		= nr_seq_cheque_w;

		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185571,'NR_SEQ_CHEQUE_W='||NR_SEQ_CHEQUE_W);
			--'O cheque nao pode ser devolvido pois nao esta em deposito ou ja foi devolvido!' || CHR(13) || 'Seq cheque: ' || to_char(NR_SEQ_CHEQUE_W));
		end if;
		CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
		CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
		CALL atualizar_cobranca_cheque(nr_seq_cheque_w,nm_usuario_p);
	end if;

	if (ie_acao_w = 6) and (nr_seq_deposito_w IS NOT NULL AND nr_seq_deposito_w::text <> '') then
		begin

		select	vl_especie,
			vl_cheque,
			(vl_especie + vl_cheque),
			dt_deposito,
			vl_cheque_estrang,
			(vl_especie_estrang + vl_cheque_estrang)
		into STRICT	vl_especie_deposito_w,
			vl_cheque_deposito_w,
			vl_total_deposito_w,
			dt_deposito_w,
			vl_cheque_depos_est_w,
			vl_total_depos_est_w
		from	deposito
		where	nr_sequencia		= nr_seq_deposito_w;

		if (dt_deposito_w IS NOT NULL AND dt_deposito_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185572,'NR_SEQ_DEPOSITO_W='||NR_SEQ_DEPOSITO_W);
			--'O deposito ' || NR_SEQ_DEPOSITO_W || ' ja foi baixado! O mesmo deve ser desfeito antes de baixa-lo novamente.');
		end if;

		select	sum(b.vl_cheque),
			sum(b.vl_cheque_estrang)
		into STRICT	vl_total_cheques_w,
			vl_total_cheque_est_w
		from	deposito_cheque a,
			cheque_cr b
		where	a.nr_seq_cheque		= b.nr_seq_cheque
		and	a.nr_seq_deposito	= nr_seq_deposito_w;

		-- Projeto Multimoeda - Transacao em moeda estrangeira valida os valores do deposito em moeda estrangeira 
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			if (vl_transacao_estrang_w <> vl_total_depos_est_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185573);
				--'O valor da transacao nao bate com o valor total do deposito!');
			end if;

			if (vl_total_cheque_est_w <> vl_cheque_depos_est_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185574);
				--'O valor dos cheques vinculados nao bate com o valor do deposito!');
			end if;
		else
			if (vl_transacao_w <> vl_total_deposito_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185573);
				--'O valor da transacao nao bate com o valor total do deposito!');
			end if;

			if (vl_total_cheques_w <> vl_cheque_deposito_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185574);
				--'O valor dos cheques vinculados nao bate com o valor do deposito!');
			end if;
		end if;

		if (cd_portador_w IS NOT NULL AND cd_portador_w::text <> '') then	-- Edgar 18/06/2010, OS 224093, alterar o portador do cheque quando o portador estiver informando no cadastro da transacao
			open c07;
			loop
			fetch c07 into
				nr_seq_cheque_w;
			EXIT WHEN NOT FOUND; /* apply on c07 */
				CALL alterar_portador_cheque_cr(nr_seq_cheque_w, cd_tipo_portador_w, cd_portador_w, nm_usuario_p, 'N', 'I');
			end loop;
			close c07;
		end if;

		CALL Baixar_Deposito_Cheque(nr_seq_deposito_w, dt_transacao_w, nm_usuario_p);


		end;




	end if;


	ie_liquidacao_w := obter_param_usuario(857, 30, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_liquidacao_w);

	if (ie_acao_w = 9) then
		-- Buscar parameto de baixa movto escritural.
		 select	coalesce(max(ie_movto_bco_pag_escrit),'T') -- OS 1847261  - Jean 
		into STRICT	ie_movto_bco_pag_escrit_w -- OS 1847261  - Jean 
		from	parametros_contas_pagar
		where	cd_estabelecimento = cd_estabelecimento_p;


		select	coalesce(sum(coalesce(a.vl_escritural,0) + coalesce(a.vl_juros,0) + coalesce(a.vl_multa,0) + coalesce(a.vl_acrescimo,0) - coalesce(a.vl_desconto,0) + coalesce(a.vl_despesa,0)), 0)
		into STRICT	vl_saldo_escritural_w
		from	titulo_pagar_escrit a,
			banco_escritural b,
			titulo_pagar c
		where	not exists (SELECT	1
			from	erro_escritural x
			where (x.ie_bloquear_titulo	= 'S' or x.ie_excluir_titulo = 'S')
			and	x.cd_erro		= a.ds_erro)
		and ('N' = coalesce(ie_liquidacao_w,'N') or
			exists (select	1
			from	banco_retorno_cp x
			where	x.cd_retorno_liq	= a.ds_erro
			and	x.cd_banco		= b.cd_banco))
		and	a.nr_seq_escrit = nr_seq_banco_escrit_w
		and	a.nr_seq_escrit	= b.nr_sequencia
		and a.nr_titulo = c.nr_titulo
		and	((coalesce(a.dt_liquidacao::text, '') = '' and vl_transacao_w > 0) or vl_transacao_w <= 0)
		and ((ie_movto_bco_pag_escrit_w = 'T' and a.nr_titulo = nr_titulo_pagar_w)
			or (ie_movto_bco_pag_escrit_w = 'L')
			or (ie_movto_bco_pag_escrit_w = 'F' and c.cd_pessoa_fisica = coalesce(cd_pessoa_fisica_w,'X'))
			or (ie_movto_bco_pag_escrit_w = 'F' and c.cd_cgc = coalesce(cd_cgc_w,'X')));

		if (vl_saldo_escritural_w <> vl_transacao_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185575);
			--'O valor escritural nao bate com o valor da transacao!');
		end if;

		if (coalesce(cd_tipo_baixa_cpa_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185576);
			--'Tipo Baixa nao informado!');
		end if;

		open	c02;
		loop
		fetch	c02 into
			nr_titulo_escrit_w,
			VL_ESCRITURAL_w,
			nr_seq_trans_fin_baixa_w,
			ds_erro_w,
			ie_tipo_pagamento_w,
			cd_banco_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			SELECT * FROM consistir_erro_escritural(ds_erro_w, nr_seq_banco_escrit_w, cd_banco_w, nr_titulo_escrit_w, cd_estabelecimento_p, nm_usuario_p, ie_bloquear_titulo_w, ie_excluir_titulo_w) INTO STRICT ie_bloquear_titulo_w, ie_excluir_titulo_w;

			if (coalesce(ie_bloquear_titulo_w,'N')	<> 'S') and (coalesce(ie_excluir_titulo_w,'N')	<> 'S') then

				select	max(a.cd_tipo_baixa)
				into STRICT	cd_tipo_baixa_w
				from	tipo_baixa_cpa a
				where	a.ie_tipo_pagamento	= ie_tipo_pagamento_w;

				select	count(*)
				into STRICT	qt_imposto_w
				from	w_titulo_pagar_imposto c,
					banco_escritural b,
					titulo_pagar_escrit a
				where	b.nr_sequencia	= c.nr_seq_escrit
				and	a.nr_seq_escrit	= b.nr_sequencia
				and	a.nr_titulo	= nr_titulo_escrit_w;

				CALL Baixa_Titulo_Pagar(cd_estabelecimento_p,
							coalesce(cd_tipo_baixa_w,cd_tipo_baixa_cpa_w),
							nr_titulo_escrit_w,
							VL_ESCRITURAL_w,
							nm_usuario_p,
							coalesce(nr_seq_trans_fin_baixa_w, nr_seq_trans_financ_w),
							null,
							nr_seq_banco_escrit_w,
							dt_transacao_w,
							nr_seq_banco_w,
							null,
							nr_seq_movto_trans_p);

				-- Francisco  OS 53121 - 20/04/07 - Gravar na baixa a transacao que a originou 
				select	max(nr_sequencia)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_escrit_w;


				update	titulo_pagar_baixa
				set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
				where	nr_titulo		= nr_titulo_escrit_w
				and	nr_sequencia		= nr_seq_baixa_w;

				CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_escrit_w, nm_usuario_p);

				-- se ja foram gerados impostos na remessa do pagto escritural, nao pode gerar de novo 
				if (coalesce(qt_imposto_w,0)	= 0) then

					CALL Gerar_W_Tit_Pag_imposto(nr_titulo_escrit_w, nm_usuario_p);

				end if;

			end if;

		end loop;
		close c02;
	end if;

	if (ie_acao_w = 10) then

		select	max(a.cd_convenio)
		into STRICT	cd_convenio_w
		from	convenio a
		where	a.ie_situacao	= 'A'
		and	a.cd_cgc	= cd_cgc_w;


		if (cd_convenio_transacao_w IS NOT NULL AND cd_convenio_transacao_w::text <> '') then
		   cd_convenio_w := cd_convenio_transacao_w;
		end if;


		if (coalesce(cd_convenio_w::text, '') = '') then
			-- CNPJ do convenio incorreto! 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185578);
		end if;

		select	nextval('convenio_receb_seq')
		into STRICT	nr_seq_receb_w
		;


		-- Projeto Multimoeda - Verifica se a transacao e em moeda estrangeira, caso negativo limpa as variaveis antes de inserir o recebimento de convenio. 
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			vl_complemento_w	:= vl_transacao_w - vl_transacao_estrang_w;
		else
			vl_transacao_estrang_w	:= null;
			vl_complemento_w	:= null;
			vl_cotacao_w		:= null;
			cd_moeda_trans_w	:= null;
		end if;

		insert into convenio_receb(NR_SEQUENCIA,
			CD_CONVENIO,
			DT_RECEBIMENTO,
			VL_RECEBIMENTO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			IE_STATUS,
			NR_SEQ_CONTA_BANCO,
			NR_SEQ_TRANS_FIN,
			NR_LOTE_CONTABIL,
			DS_OBSERVACAO,
			VL_DESPESA_BANCARIA,
			VL_DEPOSITO,
			DT_FLUXO_CAIXA,
			cd_estabelecimento,
			ie_integrar_cb_fluxo,
			vl_moeda_original,
			tx_cambial,
			cd_moeda)
		values (nr_seq_receb_w,
			cd_convenio_w,
			dt_transacao_w,
			vl_transacao_w,
			clock_timestamp(),
			nm_usuario_p,
			'N',
			nr_seq_banco_w,
			coalesce(nr_seq_trans_financ_w,null),
			0,
			null,
			null,
			vl_transacao_w,
			null,
			cd_estabelecimento_p,
			'S',
			vl_transacao_estrang_w,
			vl_cotacao_w,
			cd_moeda_trans_w);

		update	movto_trans_financ
		set	nr_seq_conv_receb 	= nr_seq_receb_w
		where	nr_sequencia		= nr_seq_movto_trans_p;



	end if;
	if (ie_acao_w = 11) then
		select	count(*)
		into STRICT	cont_w
		from	cobranca
		where	nr_seq_cheque	= nr_seq_cheque_w;
		if (cont_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185579,'NR_SEQ_CHEQUE_W='||NR_SEQ_CHEQUE_W);
			--'O cheque ' || NR_SEQ_CHEQUE_W ||' ja esta em cobranca!');
		end if;

		ie_atualiza_data_cheque_w := obter_param_usuario(860, 32, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_data_cheque_w);

		insert into cobranca(NR_SEQUENCIA,
			CD_ESTABELECIMENTO,
			DT_ATUALIZACAO,
			NM_USUARIO,
			NR_TITULO,
			NR_SEQ_CHEQUE,
			IE_STATUS,
			VL_ORIGINAL,
			VL_ACOBRAR,
			DT_PREVISAO_COBRANCA,
			DT_INCLUSAO,
			CD_TIPO_PORTADOR,
			CD_PORTADOR)
		values (nextval('cobranca_seq'),
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			null,
			nr_seq_cheque_w,
			'P',
			vl_transacao_w,
			vl_transacao_w,
			dt_transacao_w,
			dt_transacao_w,
			null,
			null);

		if (ie_atualiza_data_cheque_w = 'S') then	-- ahoffelder - OS 378479 - 05/11/2011 
			update	cheque_cr
			set	dt_contabil	= dt_transacao_w
			where	nr_seq_cheque	= nr_seq_cheque_w;

		end if;

		if (cd_portador_w IS NOT NULL AND cd_portador_w::text <> '') and (cd_tipo_portador_w IS NOT NULL AND cd_tipo_portador_w::text <> '') then

			CALL alterar_portador_cheque_cr(nr_seq_cheque_w,cd_tipo_portador_w,cd_portador_w,nm_usuario_p,'N','I');

		end if;

	end if;
	if (ie_acao_w = 12) then

		CALL GERAR_FLUXO_CAIXA(cd_estabelecimento_p,
			PKG_DATE_UTILS.start_of(dt_transacao_w, 'dd',0),
			cd_conta_financ_w,
			'P',
			nm_usuario_p,
			vl_transacao_w,
			'I',
			'D',
			'T',
			cd_empresa_w,
			'N',
			'N',
			cd_moeda_trans_w);

	end if;
	if (ie_acao_w = 13) then
		-- Projeto Multimoeda - Se valor da transacao em moeda estrangeira diferente de 0, se trata de operacao em moeda estrangeira
		if (coalesce(vl_transacao_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0 and (cd_moeda_trans_w IS NOT NULL AND cd_moeda_trans_w::text <> '')) then
			select max(cd_moeda)
			into STRICT cd_moeda_adiant_w
			from adiantamento_pago
			where nr_adiantamento = nr_adiant_pago_w;


			if (cd_moeda_trans_w <> cd_moeda_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(339977);
				-- Moeda do adiantamento deve ser igual a moeda da transacao.
			end if;


			select max(vl_saldo_estrang)
			into STRICT vl_saldo_estrang_w
			from adiantamento_pago
			where nr_adiantamento = nr_adiant_pago_w;


			if (vl_saldo_estrang_w < vl_transacao_estrang_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(340537,'VL_SALDO_ESTRANG='||vl_saldo_estrang_w);
				-- O valor da devolucao nao pode ser maior que o valor do saldo do adiantamento! Saldo convertido: #@VL_SALDO_ESTRANG#@
			end if;


			vl_complemento_w := vl_transacao_w - vl_transacao_estrang_w;


			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_adiant_dev_w
			from	adiant_pago_dev;

			insert into Adiant_pago_dev(NR_ADIANTAMENTO,
				NR_SEQUENCIA,
				DT_DEVOLUCAO,
				VL_DEVOLUCAO,
				CD_MOEDA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DS_MOTIVO_DEV,
				NR_LOTE_CONTABIL,
				NR_SEQ_TRANS_FIN,
				vl_devolucao_estrang,
				vl_complemento,
				vl_cotacao)
			values (nr_adiant_pago_w,
				nr_seq_adiant_dev_w,
				dt_transacao_w,
				vl_transacao_w,
				cd_moeda_trans_w,
				clock_timestamp(),
				nm_usuario_p,
				ds_historico_w,
				0,
				null,
				vl_transacao_estrang_w,
				vl_complemento_w,
				vl_cotacao_w);

			-- Atualiza o saldo do adiantamento em moeda estrangeira e converte pela cotacao para o saldo em moeda nacional. 
			update	adiantamento_pago
			set	vl_saldo_estrang = vl_saldo_estrang - vl_transacao_estrang_w,
				vl_saldo	= (vl_saldo_estrang - vl_transacao_estrang_w)*vl_cotacao_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				dt_baixa	= CASE WHEN vl_saldo_estrang - vl_transacao_estrang_w=0 THEN  dt_transacao_w  ELSE dt_baixa END
			where	nr_adiantamento	= nr_adiant_pago_w;
		else
			select	count(*)
			into STRICT	cont_w
			from	adiantamento_pago
			where	vl_saldo < vl_transacao_w
			and	nr_adiantamento	= nr_adiant_pago_w;

			if (cont_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185580,'NR_SEQUENCIA_W='||NR_SEQUENCIA_W);
				-- 'O valor da devolucao nao pode ser maior que o valor do saldo do adiantamento!' ||chr(13) || 'Transacao: ' || NR_SEQUENCIA_W);
			end if;

			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_adiant_dev_w
			from	adiant_pago_dev;

			insert into Adiant_pago_dev(NR_ADIANTAMENTO,
				NR_SEQUENCIA,
				DT_DEVOLUCAO,
				VL_DEVOLUCAO,
				CD_MOEDA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DS_MOTIVO_DEV,
				NR_LOTE_CONTABIL,
				NR_SEQ_TRANS_FIN)
			values (nr_adiant_pago_w,
				nr_seq_adiant_dev_w,
				dt_transacao_w,
				vl_transacao_w,
				cd_moeda_w,
				clock_timestamp(),
				nm_usuario_p,
				ds_historico_w,
				0,
				null);

			update	adiantamento_pago
			set	vl_saldo 	= vl_saldo - vl_transacao_w,
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				dt_baixa	= CASE WHEN vl_saldo - vl_transacao_w=0 THEN  dt_transacao_w  ELSE dt_baixa END
			where	nr_adiantamento	= nr_adiant_pago_w;
		end if;

	end if;
	if (ie_acao_w = 14) then

		select	max(dt_devolucao),
			max(dt_venda_terc),
			max(dt_saque),
			max(nr_cheque)
		into STRICT	dt_devolucao_w,
			dt_venda_terc_w,
			dt_saque_w,
			nr_cheque_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_w;

		if (dt_devolucao_w IS NOT NULL AND dt_devolucao_w::text <> '') or (dt_venda_terc_w IS NOT NULL AND dt_venda_terc_w::text <> '') or (dt_saque_w IS NOT NULL AND dt_saque_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185584,'NR_CHEQUE_W='||NR_CHEQUE_W||';NR_SEQUENCIA_W='||NR_SEQUENCIA_W);
			--'O cheque ' || NR_CHEQUE_W || ' ja foi devolvido ao paciente ' ||'ou ja foi vendido para um terceiro ou ja foi sacado! ' ||	chr(13) || 'Transacao: ' || NR_SEQUENCIA_W);
		else
			update	cheque_cr
			set	dt_devolucao		= PKG_DATE_UTILS.start_of(dt_transacao_w, 'dd',0),
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_seq_cheque		= nr_seq_cheque_w;
			CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_cobranca_cheque(nr_seq_cheque_w, nm_usuario_p);
		end if;

	end if;

	if (ie_acao_w = 15) then
		begin
		select	dt_devolucao,
			dt_venda_terc,
			dt_saque,
			nr_cheque
		into STRICT	dt_devolucao_w,
			dt_venda_terc_w,
			dt_saque_w,
			nr_cheque_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_w;
		exception
			when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185591,'DS_TRANSACAO_W='||DS_TRANSACAO_W);
			--'A transacao "' || DS_TRANSACAO_W || '" precisa ter um cheque informado!');
		end;

		if (dt_devolucao_w IS NOT NULL AND dt_devolucao_w::text <> '') or (dt_venda_terc_w IS NOT NULL AND dt_venda_terc_w::text <> '') or (dt_saque_w IS NOT NULL AND dt_saque_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185584,'NR_CHEQUE_W='||NR_CHEQUE_W||';NR_SEQUENCIA_W='||NR_SEQUENCIA_W);
			--'O cheque ' || nr_cheque_w || ' ja foi devolvido ao paciente ' ||'ou ja foi vendido para um terceiro ou ja foi sacado! ' ||chr(13) || 'Transacao: ' || nr_sequencia_w);
		else
			update	cheque_cr
			set	dt_venda_terc	= dt_transacao_w,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_seq_cheque	= nr_seq_cheque_w;
			CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_cobranca_cheque(nr_seq_cheque_w, nm_usuario_p);
		end if;

	end if;
	if (ie_acao_w = 16) then
		ie_somente_tit_cheque_w := obter_param_usuario(127, 25, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_somente_tit_cheque_w);
		if (coalesce(nr_seq_cheque_cp_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185592);
			--'Cheque emitido nao informado!');
		end if;

		if (vl_transacao_w < 0) then	/* Desfazer compensacao de cheque. */
			dt_transacao_w	:= null;
		end if;

		update	cheque
		set	dt_compensacao = dt_transacao_w
		where	nr_sequencia = nr_seq_cheque_cp_w;


		open c09;
		loop
		fetch c09 into
			nr_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c09 */
			begin
				select	max(dt_liquidacao),
					max(nr_seq_tributo)
				into STRICT	dt_liquidacao_w,
					nr_seq_tributo_w
				from	titulo_pagar
				where	nr_titulo = nr_titulo_w;
				if ((dt_liquidacao_w IS NOT NULL AND dt_liquidacao_w::text <> '') and coalesce(nr_seq_tributo_w,0) <> 0 and (dt_transacao_w IS NOT NULL AND dt_transacao_w::text <> '')) then
					update	titulo_pagar_imposto
					set	dt_contabil = clock_timestamp()
					where	nr_titulo = nr_titulo_w;
				else
					update	titulo_pagar_imposto
					set	dt_contabil  = NULL
					where	nr_titulo = nr_titulo_w;
				end if;
			end;
		end loop;
		close c09;
	end if;

	--OS 2774141 identificar o motivo de baixas duplicadas ao estornar o bordero
	if (ie_acao_w = 17) and (nr_bordero_rec_w IS NOT NULL AND nr_bordero_rec_w::text <> '') then

		begin
		select	max(ie_bordero_banco),
			max(ie_prior_trans_bordero_rec),
			max(nr_seq_trans_tit_bordero)
		into STRICT	ie_bordero_banco_log_w,
			ie_prior_trans_bordero_log_w,
			nr_seq_trans_tit_bordero_log_w
		from	parametro_contas_receber
		where	cd_estabelecimento = cd_estabelecimento_p;

		ds_log_w := substr('1: nr_bordero_rec_w='||nr_bordero_rec_w||' - nr_titulo_receber_w='||nr_titulo_receber_w||' - ie_bordero_banco_log_w='||ie_bordero_banco_log_w||
			    ' - ie_prior_trans_bordero_log_w='||ie_prior_trans_bordero_log_w||' - nr_seq_trans_tit_bordero_log_w= '||nr_seq_trans_tit_bordero_log_w||
			    ' - Stack='||dbms_utility.format_call_stack,1,2000);

		insert into log_tasy(	cd_log,
					ds_log,
					nm_usuario,
					dt_atualizacao)
			values ( 74385,
					 ds_log_w,
					 'TASYY',
					 clock_timestamp());
		exception when no_data_found then
		    ds_log_w := null;
		when too_many_rows then
		   ds_log_w := null;
		end;

	end if;

	if (ie_acao_w = 17) and			--Francisco - OS 37663 - 21/07/2006
		(ie_bordero_banco_rec_w <> 'R') then	-- ahoffelder - OS 433926 - 23/05/2012 - se for com um lancamento para cada TF de baixa dos titulos, o bordero ja tera sido baixado antes de passar por aqui 
		if (coalesce(nr_bordero_rec_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185593,'CD_TRANSACAO_W='||CD_TRANSACAO_W||';DS_TRANSACAO_W='||DS_TRANSACAO_W);
			-- 'A transacao ' || CD_TRANSACAO_W ||' - ' || DS_TRANSACAO_W || ' nao tem bordero informado!');
		end if;

		select	count(*)
		into STRICT	cont_w
		from	bordero_tit_rec b,
			titulo_receber a
		where	a.nr_titulo	= b.nr_titulo
		and	b.nr_bordero	= nr_bordero_rec_w
		and	(a.dt_liquidacao IS NOT NULL AND a.dt_liquidacao::text <> '');

		if (cont_w > 0) then

			select	max(a.nr_titulo)
			into STRICT	nr_titulo_receber_w
			from	bordero_tit_rec b,
				titulo_receber a
			where	a.nr_titulo	= b.nr_titulo
			and	b.nr_bordero	= nr_bordero_rec_w
			and	(a.dt_liquidacao IS NOT NULL AND a.dt_liquidacao::text <> '');

			CALL wheb_mensagem_pck.exibir_mensagem_abort(185594,'NR_TITULO_RECEBER_W='||to_char(NR_TITULO_RECEBER_W));
			--'O titulo ' || to_char(NR_TITULO_RECEBER_W) ||' do bordero esta liquidado!');
		end if;


		select	coalesce(sum(a.vl_saldo_titulo),0)
		into STRICT	vl_saldo_bordero_rec_w
		from	bordero_tit_rec b,
			titulo_receber a
		where	a.nr_titulo	= b.nr_titulo
		and	b.nr_bordero	= nr_bordero_rec_w;

		if (vl_saldo_bordero_w <> vl_transacao_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185549,'VL_SALDO_BORDERO_W='||to_char(VL_SALDO_BORDERO_W)||
				';VL_TRANSACAO_W='||to_char(VL_TRANSACAO_W));
			--'O valor do bordero nao bate com o valor da transacao!' || chr(13) ||'Vl bordero: ' || to_char(vl_saldo_bordero_rec_w) || chr(13) || 'Vl transacao: ' || to_char(vl_transacao_w));
		end if;


		if (coalesce(cd_tipo_recebimento_w::text, '') = '') then
			select	cd_tipo_recebimento
			into STRICT	cd_tipo_recebimento_w
			from	bordero_recebimento
			where	nr_bordero = nr_bordero_rec_w;
		end if;

		select	nr_seq_trans_fin
		into STRICT	nr_seq_trans_fin_baixa_w
		from	bordero_recebimento
		where	nr_bordero	= nr_bordero_rec_w;

		open c04;
		loop
		fetch c04 into
			nr_tit_rec_w,
			vl_saldo_tit_rec_w,
			vl_glosa_w,
			nr_seq_trans_fin_tit_rec_w,
			VL_CAMBIAL_ATIVO_w,
			VL_CAMBIAL_PASSIVO_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */

			if (IE_PRIOR_TRANS_BORDERO_REC_w = 'BT') then
				nr_seq_trans_bordero_rec_w	:= coalesce(nr_seq_trans_fin_baixa_w,nr_seq_trans_fin_tit_rec_w);
			else
				nr_seq_trans_bordero_rec_w	:= coalesce(nr_seq_trans_fin_tit_rec_w, nr_seq_trans_fin_baixa_w);
			end if;

			begin
			ds_log_w := substr('2 - nr_bordero_rec_w='||nr_bordero_rec_w||' - nr_tit_rec_w='||nr_tit_rec_w||' - vl_saldo_tit_rec_w='||vl_saldo_tit_rec_w||' - nr_seq_trans_fin_tit_rec_w='||nr_seq_trans_fin_tit_rec_w||
				    ' - nr_seq_trans_bordero_rec_w='||nr_seq_trans_bordero_rec_w,1,2000);

			insert into log_tasy(	cd_log,
						ds_log,
						nm_usuario,
						dt_atualizacao)
				values ( 74385,
						 ds_log_w,
						 'TASYY',
						 clock_timestamp());
			exception when no_data_found then
			    ds_log_w := null;
			when too_many_rows then
			   ds_log_w := null;
			end;

			CALL Baixa_Titulo_Receber(cd_estabelecimento_p,
						cd_tipo_recebimento_w,
						nr_tit_rec_w,
						nr_seq_trans_bordero_rec_w,
						vl_saldo_tit_rec_w,
						dt_transacao_w,
						nm_usuario_p,
						vl_glosa_w,
						nr_bordero_rec_w,
						nr_seq_banco_w,
						0,
						0);

			select	max(nr_sequencia)
			into STRICT	nr_seq_baixa_w
			from	titulo_receber_liq
			where	nr_titulo	= nr_tit_rec_w;

			update	titulo_receber_liq
			set	VL_CAMBIAL_ATIVO		= VL_CAMBIAL_ATIVO_w,
				VL_CAMBIAL_PASSIVO		= VL_CAMBIAL_PASSIVO_w,
				nr_seq_movto_trans_fin 	= nr_seq_movto_trans_p
			where	nr_titulo			= nr_tit_rec_w
			and	nr_sequencia			= nr_seq_baixa_w;

			CALL Atualizar_Saldo_Tit_Rec(nr_tit_rec_w, nm_usuario_p);

		end loop;
		close c04;

		update	bordero_recebimento
		set	dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_recebimento	= dt_transacao_w
		where	nr_bordero	= nr_bordero_rec_w;



	end if;
	if (ie_acao_w = 18) then	-- Edgar 17/10/2006 baixar por gratuidade
		if (coalesce(nr_seq_caixa_rec_w::text, '') = '') then
			CALL Baixa_Titulo_Receber(cd_estabelecimento_p,
						cd_tipo_recebimento_w,
						nr_titulo_receber_w,
						nr_seq_trans_financ_w,
						0,
						dt_transacao_w,
						nm_usuario_p,
						vl_transacao_w,
						null,
						nr_seq_banco_w,
						0,
						0,
						nr_seq_movto_trans_p);

			select	max(nr_sequencia)
			into STRICT	nr_seq_baixa_w
			from	titulo_receber_liq
			where	nr_titulo		= nr_titulo_receber_w
			and	coalesce(ie_lib_caixa, 'S') = 'S';

			-- Francisco  OS 53770 - 30/03/07 - Gravar na baixa a transacao que a originou 
			update	titulo_receber_liq
			set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
			where	nr_titulo		= nr_titulo_receber_w
			and	nr_sequencia		= nr_seq_baixa_w;


			select	coalesce(max(ie_tipo_consistencia),0)
			into STRICT	ie_tipo_consistencia_w
			from	tipo_recebimento
			where	cd_tipo_recebimento = coalesce(cd_tipo_recebimento_w,0);


			if (ie_tipo_consistencia_w not in (9, 0)) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185598,'NR_SEQ_MOVTO_TRANS_P='||NR_SEQ_MOVTO_TRANS_P);
				--' O tipo de recebimento utilizado deve ter consistencia de baixa por perdas!' || chr(13) ||'Seq movimento = ' || NR_SEQ_MOVTO_TRANS_P);
			end if;

			CALL ATUALIZAR_BAIXA_GRATUIDADE(nr_titulo_receber_w, nr_seq_baixa_w, nm_usuario_p);


			CALL Atualizar_Saldo_Tit_Rec(nr_titulo_receber_w, nm_usuario_p);

		end if;
	end if;

	if (ie_acao_w = 19) then	-- Edgar 27/11/2006, OS 42987 saque de cheque recebido
		select	nr_cheque
		into STRICT	nr_cheque_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_w;

		if (OBTER_STATUS_CHEQUE(nr_seq_cheque_w) in (2,4,5,6,7,8)) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185600,'NR_CHEQUE_W='||NR_CHEQUE_W);
			--'O cheque ' || NR_CHEQUE_W || ' nao pode ser sacado!' || chr(13) ||'Verifique se o cheque esta em deposito ou ja tem segunda devolucao.');
		else
			update	cheque_cr
			set	dt_saque 		= dt_transacao_w,
				nm_usuario 		= nm_usuario_p,
				dt_atualizacao 		= clock_timestamp()
			where	nr_seq_cheque 		= nr_seq_cheque_w;
			CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_cobranca_cheque(nr_seq_cheque_w, nm_usuario_p);
		end if;

	end if;

	if (ie_acao_w = 20) then

		ie_somente_liquidacao_w := obter_param_usuario(815, 11, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_somente_liquidacao_w);
		ie_despesa_bancaria_w := obter_param_usuario(815, 35, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_despesa_bancaria_w);

		select	sum(coalesce(a.vl_liquidacao,0) + CASE WHEN c.ie_rejeitado='T' THEN 0  ELSE CASE WHEN coalesce(ie_despesa_bancaria_w,'N')='S' THEN coalesce(a.vl_despesa_bancaria,0)  ELSE 0 END  END ),
			coalesce(sum(a.vl_despesa_bancaria),0)
		into STRICT	vl_tot_cobr_w,
			vl_despesa_bancaria_w
		FROM cobranca_escritural b, titulo_receber_cobr a
LEFT OUTER JOIN banco_ocorr_escrit_ret c ON (a.nr_seq_ocorrencia_ret = c.nr_sequencia)
WHERE a.nr_seq_cobranca	= b.nr_sequencia and PKG_DATE_UTILS.start_of(coalesce(b.dt_credito_bancario,coalesce(CASE WHEN ie_movto_bco_cobr_escrit_w='D' THEN a.dt_liquidacao  ELSE dt_transacao_w END ,clock_timestamp())),'dd',0)	= dt_transacao_w and (ie_somente_liquidacao_w = 'N' or c.ie_rejeitado = 'L')  and a.nr_seq_cobranca	= nr_seq_cobr_escrit_w;

		dt_recebimento_cobr_w	:= coalesce(dt_transacao_w,clock_timestamp());


		if (nr_seq_trans_inadimplencia_w IS NOT NULL AND nr_seq_trans_inadimplencia_w::text <> '') then
			select	coalesce(sum(vl_liquidacao),0)
			into STRICT	vl_inadimplencia_w
			from	titulo_receber_cobr a
			where	PKG_DATE_UTILS.start_of(coalesce(CASE WHEN ie_movto_bco_cobr_escrit_w='D' THEN a.dt_liquidacao  ELSE dt_transacao_w END ,clock_timestamp()),'dd',0)	= dt_transacao_w
			and	nr_seq_cobranca	= nr_seq_cobr_escrit_w
			and	pls_obter_se_tit_baixa_inad(nr_titulo) = 'S';


			if (vl_inadimplencia_w > 0) then
				vl_transacao_w	:= vl_transacao_w + vl_inadimplencia_w;
			end if;
		end if;


		if (nr_seq_trans_desp_banco_w IS NOT NULL AND nr_seq_trans_desp_banco_w::text <> '') then
			vl_tot_cobr_w	:= coalesce(vl_tot_cobr_w,0) /*+ nvl(vl_despesa_bancaria_w,0)*/;
		end if;


		if (vl_tot_cobr_w <> vl_transacao_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185605,'VL_TOT_COBR_W='||VL_TOT_COBR_W||';VL_TRANSACAO_W='||VL_TRANSACAO_W);
			--'O valor da transacao nao bate com o valor total da cobranca!' || chr(13) || chr(10) ||'Vl cobranca: ' || VL_TOT_COBR_W || chr(13) || chr(10) ||'Vl transacao: ' || VL_TRANSACAO_W || chr(13) || chr(10));
		end if;


		open	c05;
		loop
		fetch	c05 into
			nr_seq_tit_cobr_w,
			nr_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			-- Este bloco e para tratar baixas a maior da OPS 
			ie_gerar_baixa_w	:= 'S';
			--if	((ie_gerar_nc_tit_mens_canc_w = 'S') or

			--	(ie_gerar_nc_tit_resc_w = 'S') or

			--	(nr_seq_trans_inadimplencia_w is not null)) then

			--	pls_tratar_canc_mens_rescisao(nr_titulo_w, nr_seq_tit_cobr_w, ie_acao_p, sysdate, 'N', cd_estabelecimento_p, nm_usuario_p, ie_baixar_w);

			--	if	(ie_baixar_w = 'N') then

			--		ie_gerar_baixa_w	:= 'N';

			--	end if;

			--end if;

			-- Fim baixas a maior 
			if (ie_gerar_baixa_w = 'S') then
				CALL baixar_titulo_rec_cobr(nr_seq_tit_cobr_w,'I',nm_usuario_p,dt_recebimento_cobr_w,nr_seq_movto_trans_p);
			end if;
		end loop;
		close c05;

		update	cobranca_escritural
		set	dt_recebimento	= coalesce(dt_transacao_w,clock_timestamp()),
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_cobr_escrit_w;



	end if;

	if (ie_acao_w = 22) then

		open c06;
		loop
		fetch c06 into
			nr_seq_cheque_w;
		EXIT WHEN NOT FOUND; /* apply on c06 */

			select	dt_devolucao,
				dt_venda_terc,
				dt_saque,
				nr_cheque
			into STRICT	dt_devolucao_w,
				dt_venda_terc_w,
				dt_saque_w,
				nr_cheque_w
			from	cheque_cr
			where	nr_seq_cheque	= nr_seq_cheque_w;

			if (dt_devolucao_w IS NOT NULL AND dt_devolucao_w::text <> '') or (dt_venda_terc_w IS NOT NULL AND dt_venda_terc_w::text <> '') or (dt_saque_w IS NOT NULL AND dt_saque_w::text <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185584,'NR_CHEQUE_W='||NR_CHEQUE_W||';NR_SEQUENCIA_W='||NR_SEQUENCIA_W);
				--'O cheque ' || nr_cheque_w || ' ja foi devolvido ao paciente ' ||'ou ja foi vendido para um terceiro ou ja foi sacado! ' ||chr(13) || 'Transacao: ' || nr_sequencia_w);
			else
				update	cheque_cr
				set	dt_venda_terc	= dt_transacao_w,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao	= clock_timestamp()
				where	nr_seq_cheque	= nr_seq_cheque_w;

				CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
				CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
				CALL atualizar_cobranca_cheque(nr_seq_cheque_w, nm_usuario_p);
			end if;

		end loop;
		close c06;

	end if;

	if (ie_acao_w = 23) then
		CALL alterar_portador_cheque_cr(nr_seq_cheque_w, cd_tipo_portador_w, cd_portador_w, nm_usuario_p, 'N','I');
	end if;


	if (ie_acao_w = 24) then
		CALL inserir_movto_banco_pend(nr_seq_movto_trans_p,nm_usuario_p);


	end if;

	if (ie_acao_w = 25) then
		if (coalesce(nr_seq_cheque_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185592);
			--'Cheque emitido nao informado!');
		end if;

		update	cheque_cr
		set	dt_compensacao	= dt_transacao_w
		where	nr_seq_cheque	= nr_seq_cheque_w;
	end if;

	if (ie_acao_w = 26) then

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_cobranca_w
		from	cobranca a
		where	a.nr_seq_cheque	= nr_seq_cheque_w;

		if (nr_seq_cobranca_w > 0) then


			select	obter_se_lib_baixa(null,nr_seq_cheque_w,'CT')
			into STRICT	ie_lib_baixa_w
			;


			if (ie_lib_baixa_w = 'N') then
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(224107);
			end if;


			update	cobranca
			set	ie_status	= 'A'
			where	nr_sequencia	= nr_seq_cobranca_w;
		else
			insert into cobranca(NR_SEQUENCIA,
				CD_ESTABELECIMENTO,
				DT_ATUALIZACAO,
				NM_USUARIO,
				NR_TITULO,
				NR_SEQ_CHEQUE,
				IE_STATUS,
				VL_ORIGINAL,
				VL_ACOBRAR,
				DT_PREVISAO_COBRANCA,
				DT_INCLUSAO,
				CD_TIPO_PORTADOR,
				CD_PORTADOR)
			values (nextval('cobranca_seq'),
				cd_estabelecimento_p,
				clock_timestamp(),
				nm_usuario_p,
				null,
				nr_seq_cheque_w,
				'A',
				vl_transacao_w,
				vl_transacao_w,
				dt_transacao_w,
				dt_transacao_w,
				null,
				null);
		end if;
	end if;


	if (ie_acao_w = 27) then
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') and (coalesce(cd_cgc_w::text, '') = '') and (coalesce(nr_seq_pagador_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185606);
			--'Deve-se informar uma pessoa fisica, juridica ou pagador(OPS), para este tipo de acao.');
		else
			CALL gerar_nota_credito_pgto_amaior(	nr_seq_movto_trans_p,
							cd_pessoa_fisica_w,
							cd_cgc_w,
							nr_seq_pagador_w,
							dt_transacao_w,
							vl_transacao_w,
							ie_acao_p,
							cd_estabelecimento_p,
							nm_usuario_p);
		end if;
	end if;

	if (ie_acao_w = 28) then
		begin
		ie_atualizou_w := 'N';


		if (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') and (nr_seq_deposito_w IS NOT NULL AND nr_seq_deposito_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(193794);
		end if;


		open C08;
		loop
		fetch C08 into
			nr_seq_cheque_ww;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin
			select	max(a.dt_custodia)
			into STRICT	dt_custodia_w
			from	cheque_cr a
			where	a.nr_seq_cheque	= nr_seq_cheque_ww;

			if (dt_custodia_w IS NOT NULL AND dt_custodia_w::text <> '') then
				-- O cheque nr_seq_cheque_w ja esta em custodia! 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(187639,'NR_SEQ_CHEQUE_W=' || nr_seq_cheque_ww);
			end if;

			update	cheque_cr
			set	dt_custodia	= dt_transacao_w
			where	nr_seq_cheque	= nr_seq_cheque_ww;


			ie_atualizou_w := 'S';
			end;
		end loop;
		close C08;


		if (ie_atualizou_w = 'N') then
			-- A transacao nao possui cheque vinculado! 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187637);
		end if;
		end;
	end if;

	if (ie_acao_w = 29) then
		begin
		ie_atualizou_w := 'N';


		if (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') and (nr_seq_deposito_w IS NOT NULL AND nr_seq_deposito_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(193794);
		end if;


		open C08;
		loop
		fetch C08 into
			nr_seq_cheque_ww;
		EXIT WHEN NOT FOUND; /* apply on C08 */
			begin
			select	max(a.dt_custodia),
				max(a.dt_resgate_custodia)
			into STRICT	dt_custodia_w,
				dt_resgate_custodia_w
			from	cheque_cr a
			where	a.nr_seq_cheque	= nr_seq_cheque_ww;

			if (coalesce(dt_custodia_w::text, '') = '') then
				-- O cheque nr_seq_cheque_w ainda nao esta em custodia! 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(187643,'NR_SEQ_CHEQUE_W=' || nr_seq_cheque_ww);
			end if;

			if (dt_resgate_custodia_w IS NOT NULL AND dt_resgate_custodia_w::text <> '') then
				-- O cheque nr_seq_cheque_w ja foi resgatado da custodia! 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(187640,'NR_SEQ_CHEQUE_W=' || nr_seq_cheque_ww);
			end if;

			update	cheque_cr
			set	dt_resgate_custodia	= dt_transacao_w
			where	nr_seq_cheque		= nr_seq_cheque_ww;


			ie_atualizou_w := 'S';
			end;
		end loop;
		close C08;


		if (ie_atualizou_w = 'N') then
			-- A transacao nao possui cheque vinculado! 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(187637);
		end if;
		end;
	end if;

	if (ie_acao_w = 30) then	-- ahoffelder - OS 418458 - 15/05/2012 
		CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w,nm_usuario_p);

		select	vl_saldo_negociado
		into STRICT	vl_saldo_negociado_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_w;

		if (vl_saldo_negociado_w = 0) then
			update	cheque_cr
			set	dt_devolucao		= clock_timestamp()
			where	nr_seq_cheque		= nr_seq_cheque_w;
		end if;

		CALL atualizar_cobranca_cheque(nr_seq_cheque_w,nm_usuario_p);

	end if;


	if (ie_acao_w = 31) then

		if (coalesce(nr_adiantamento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185533);
			--'Adiantamento nao informado');
		end if;

		-- Projeto Multimoeda - verifica se existe valor em moeda estrangeira e moeda cadastrada para a transacao, se existir se trata de transacao em moeda estrangeira
		if (coalesce(vl_transacao_estrang_w,0) <> 0 and (cd_moeda_trans_w IS NOT NULL AND cd_moeda_trans_w::text <> '')) then
			select max(vl_adto_estrang),
				max(cd_moeda)
			into STRICT vl_saldo_adiant_w,
				cd_moeda_adiant_w
			from adiantamento
			where nr_adiantamento = nr_adiantamento_w;


			if (cd_moeda_trans_w <> cd_moeda_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(339977);
				-- Moeda do adiantamento deve ser igual a moeda da transacao.
			end if;


			if (vl_transacao_estrang_w > vl_saldo_adiant_w) then
				-- O valor da devolucao nao pode ser maior que o valor do adiantamento!

				--Devolucao: vl_transacao_w

				--Adiantamento: vl_saldo_adiant_w 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185543,	'VL_TRANSACAO_W=' || vl_transacao_w ||
										';VL_SALDO_ADIANT_W=' || vl_saldo_adiant_w);
			else
				vl_complemento_w := vl_transacao_w - vl_transacao_estrang_w;


				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_devol_w
				from	adiantamento_dev
				where	nr_adiantamento		= nr_adiantamento_w;


				insert	into adiantamento_dev(nr_adiantamento,
					nr_sequencia,
					dt_devolucao,
					vl_devolucao,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					ds_motivo_dev,
					nr_lote_contabil,
					nr_seq_trans_fin,
					nr_seq_movto_tf,
					vl_devolucao_estrang,
					vl_complemento,
					vl_cotacao)
				values (nr_adiantamento_w,
					nr_seq_devol_w,
					pkg_date_utils.get_time(dt_transacao_w,0,0,0),
					vl_transacao_w,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					nr_seq_movto_trans_p,
					vl_transacao_estrang_w,
					vl_complemento_w,
					vl_cotacao_w);


				CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null, vl_cotacao_w);
			end if;
		else
			select	coalesce(max(coalesce(vl_adiantamento,0)),0)
			into STRICT	vl_saldo_adiant_w
			from	adiantamento
			where	nr_adiantamento		= nr_adiantamento_w;

			if (vl_transacao_w > vl_saldo_adiant_w) then

				-- O valor da devolucao nao pode ser maior que o valor do adiantamento!

				--Devolucao: vl_transacao_w

				--Adiantamento: vl_saldo_adiant_w 
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185543,	'VL_TRANSACAO_W=' || vl_transacao_w ||
										';VL_SALDO_ADIANT_W=' || vl_saldo_adiant_w);

			else


				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_devol_w
				from	adiantamento_dev
				where	nr_adiantamento		= nr_adiantamento_w;


				insert	into adiantamento_dev(nr_adiantamento,
					nr_sequencia,
					dt_devolucao,
					vl_devolucao,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					ds_motivo_dev,
					nr_lote_contabil,
					nr_seq_trans_fin,
					nr_seq_movto_tf)
				values (nr_adiantamento_w,
					nr_seq_devol_w,
					pkg_date_utils.get_time(dt_transacao_w,0,0,0),
					vl_transacao_w,
					cd_moeda_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					nr_seq_movto_trans_p);


				CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null);

			end if;
		end if;

	end if;


	if (ie_acao_w = 32) then
		CALL fin_recuperar_perda(nr_seq_movto_trans_p, ie_acao_p, 'N', nm_usuario_p);
	end if;


	if (ie_acao_w = 35) then


		if (coalesce(nr_seq_cheque_cp_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185592);
			--'Cheque emitido nao informado!');
		end if;

		if (vl_transacao_w < 0) then -- Desfazer cancelamento de cheque. 
			dt_transacao_w	:= null;
		end if;

		update	cheque
		set	dt_cancelamento	= dt_transacao_w
		where	nr_sequencia 	= nr_seq_cheque_cp_w;
	end if;

	if (ie_acao_w = 39) then

		if (coalesce(nr_seq_movto_cartao_w::text, '') = '') or (coalesce(nr_adiantamento_w::text, '') = '') then
			--Para esta acao e necessario informar o movimento de cartao
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1117556);
		end if;

		CALL devolucao_adiantamento_cartao( nr_seq_movto_cartao_w,
						nr_adiantamento_w,
						dt_transacao_w,
						vl_transacao_w,
						nm_usuario_p );

	end if;


	end;

	if (coalesce(nr_seq_caixa_w::text, '') = '') then -- Edgar, 26/11/2010, OS 262940, nao gerar transacao de taxa se for tesouraria
		CALL GERAR_TRANS_FINANC_TAXA(nr_seq_movto_trans_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
	CALL gerar_comunic_trans_financ(nr_seq_movto_trans_p,nm_usuario_p,null,null,null);

else

	-- Francisco - OS 71663 - 18/02/2008 - Estorno de transacao com acao 
	select	a.vl_transacao,
		a.dt_transacao,
		a.dt_referencia_saldo,
		a.nr_seq_banco,
		a.nr_seq_titulo_pagar,
		a.nr_seq_titulo_receber,
		a.nr_bordero,
		a.nr_adiantamento,
		a.cd_tipo_recebimento,
		a.cd_tipo_baixa_cpa,
		a.nr_seq_deposito,
		a.nr_seq_cheque,
		a.nr_seq_trans_financ,
		b.ie_banco,
		b.ie_acao,
		a.nr_seq_banco_escrit,
		a.nr_seq_banco_od,
		b.nr_seq_trans_banco,
		a.cd_cgc,
		b.cd_conta_financ,
		a.nr_adiant_pago,
		a.nr_sequencia,
		a.ds_historico,
		a.nr_seq_caixa,
		a.nr_seq_lote,
		a.nr_seq_saldo_banco,
		a.nr_seq_cheque_cp,
		a.nr_bordero_rec,
		a.nr_seq_motivo_dev,
		a.nr_seq_caixa_rec,
		b.ds_transacao,
		a.nr_seq_cobr_escrit,
		a.cd_portador,
		a.cd_tipo_portador,
		a.nr_seq_movto_orig,
		a.vl_transacao_estrang,
		a.vl_cotacao,
		a.cd_moeda,
		a.ie_dev_adiant_negativo
	into STRICT	vl_transacao_w,
		dt_transacao_w,
		dt_referencia_saldo_w,
		nr_seq_banco_w,
		nr_titulo_pagar_w,
		nr_titulo_receber_w,
		nr_bordero_w,
		nr_adiantamento_w,
		cd_tipo_recebimento_w,
		cd_tipo_baixa_cpa_w,
		nr_seq_deposito_w,
		nr_seq_cheque_w,
		nr_seq_trans_financ_w,
		ie_banco_w,
		ie_acao_w,
		nr_seq_banco_escrit_w,
		nr_seq_banco_od_w,
		nr_seq_trans_banco_w,
		cd_cgc_w,
		cd_conta_financ_w,
		nr_adiant_pago_w,
		nr_sequencia_w,
		ds_historico_w,
		nr_seq_caixa_w,
		nr_seq_lote_w,
		nr_seq_saldo_banco_w,
		nr_seq_cheque_cp_w,
		nr_bordero_rec_w,
		nr_seq_motivo_dev_w,
		nr_seq_caixa_rec_w,
		ds_transacao_w,
		nr_seq_cobr_escrit_w,
		cd_portador_w,
		cd_tipo_portador_w,
		nr_seq_movto_orig_w,
		vl_transacao_estrang_w,
		vl_cotacao_w,
		cd_moeda_trans_w,
		ie_dev_adiant_negativo_w
	from	transacao_financeira b,
		movto_trans_financ a
	where	a.nr_seq_trans_financ	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_movto_trans_p;


	select obter_moeda_padrao_empresa(cd_estabelecimento_p,'E'),
		obter_moeda_padrao_empresa(nr_seq_banco_w,'B')
	into STRICT cd_moeda_rel_w,
		cd_moeda_banco_w
	;

	if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then

		select	max(ie_repasse_gratuidade)
		into STRICT	ie_repasse_gratuidade_w
		from	convenio_estabelecimento b,
			titulo_receber a
		where	coalesce(a.cd_convenio_conta,obter_convenio_tit_rec(a.nr_titulo)) = b.cd_convenio
		and	a.cd_estabelecimento	= b.cd_estabelecimento
		and	a.nr_titulo		= nr_titulo_receber_w;
	end if;


	if (coalesce(ie_repasse_gratuidade_w::text, '') = '') then
		begin
		select 	coalesce(ie_repasse_gratuidade,'N')
		into STRICT	ie_repasse_gratuidade_w
		from	parametro_faturamento
		where	cd_estabelecimento = cd_estabelecimento_p;
		exception
		when others then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185607);
			--'Os parametros do faturamento deste estabelecimento nao estao cadastrados!');
		end;
	end if;

	-- Baixa de titulo a receber 
	if (ie_acao_w	= 1) then

		if (coalesce(nr_titulo_receber_w::text, '') = '') or (coalesce(cd_tipo_recebimento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185608,'NR_SEQ_MOVTO_TRANS_P='||to_char(NR_SEQ_MOVTO_TRANS_P));
			--'A transacao ' || to_char(NR_SEQ_MOVTO_TRANS_P) ||' nao tem tipo de recebimento ou o numero do titulo nao foi informado!');
		end if;

		select	nr_seq_trans_fin_baixa_adiant
		into STRICT	nr_seq_trans_adiant_w
		from	parametro_contas_receber
		where	cd_estabelecimento	= cd_estabelecimento_p;

		if (nr_seq_caixa_w IS NOT NULL AND nr_seq_caixa_w::text <> '') and (nr_seq_lote_w IS NOT NULL AND nr_seq_lote_w::text <> '') and (cd_tipo_recebimento_w IS NOT NULL AND cd_tipo_recebimento_w::text <> '') then

			select	ie_tipo_consistencia
			into STRICT	ie_tipo_consistencia_w
			from	tipo_recebimento
			where	cd_tipo_recebimento 	= cd_tipo_recebimento_w;

			if (ie_tipo_consistencia_w = 3) then


				update	cheque_cr a
				set	a.nr_titulo		 = NULL,
					a.dt_atualizacao	= clock_timestamp(),
					a.nm_usuario		= nm_usuario_p
				where	a.nr_seq_cheque	in (SELECT	x.nr_seq_cheque
						from	movto_trans_financ x
						where	x.nr_seq_caixa	= nr_seq_caixa_w
						and	x.nr_seq_lote	= nr_seq_lote_w
						and	(x.nr_seq_cheque IS NOT NULL AND x.nr_seq_cheque::text <> ''))
				and	coalesce(a.nr_titulo::text, '') = '';
			end if;

		end if;


		if (nr_seq_caixa_rec_w IS NOT NULL AND nr_seq_caixa_rec_w::text <> '') then


			select 	count(*)
			into STRICT	qt_titulo_caixa_rec_w
			from	titulo_receber_liq
			where	nr_seq_caixa_rec = nr_seq_caixa_rec_w;


			if (qt_titulo_caixa_rec_w = 1) then


				update	cheque_cr a
				set	a.nr_titulo		 = NULL,
					a.dt_atualizacao	= clock_timestamp(),
					a.nm_usuario		= nm_usuario_p
				where	nr_seq_caixa_rec	= nr_seq_caixa_rec_w;


			end if;




		end if;

		if (coalesce(nr_seq_caixa_rec_w::text, '') = '') then
			begin
			dbms_application_info.SET_ACTION('ATUALIZAR_TRANSACAO_FINANCEIRA'); 	-- ahoffelder - OS 325513 - 17/06/2011 - consistir lote contabil gerado 
			CALL Baixa_Titulo_Receber(cd_estabelecimento_p,
						cd_tipo_recebimento_w,
						nr_titulo_receber_w,
						nr_seq_trans_financ_w,
						vl_transacao_w,
						dt_transacao_w,
						nm_usuario_p,
						null,
						null,
						nr_seq_banco_w,
						0,
						0,
						nr_seq_movto_trans_p);

			exception
			when others then
				dbms_application_info.SET_ACTION('');
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185560,'SQLERRM='||sqlerrm);
				--sqlerrm);
			end;

			-- Gravar na baixa a transacao que a originou 
			select	max(nr_sequencia)
			into STRICT	nr_seq_baixa_w
			from	titulo_receber_liq
			where	nr_titulo	= nr_titulo_receber_w
			and	coalesce(ie_lib_caixa, 'S') = 'S';

			update	titulo_receber_liq
			set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
			where	nr_titulo		= nr_titulo_receber_w
			and	nr_sequencia		= nr_seq_baixa_w;


			CALL ESTORNAR_MOVTO_JUROS_MULTA_BCO(cd_estabelecimento_p, nm_usuario_p, dt_transacao_w, nr_seq_movto_trans_p);

			ie_recalcular_repasse_w := obter_param_usuario(814, 52, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_recalcular_repasse_w);

			-- ahoffelder - OS 324765 - 06/06/2011 
			if (ie_recalcular_repasse_w = 'S') and (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') then

				select	max(a.nr_interno_conta)
				into STRICT	nr_interno_conta_w
				from	titulo_receber a
				where	a.nr_titulo	= nr_titulo_receber_w;

				--nr_interno_conta_w: ' || nr_interno_conta_w);
				CALL recalcular_conta_repasse(	nr_interno_conta_w,
								null,
								null,
								nm_usuario_p);

			end if;

		end if;

		CALL Atualizar_Saldo_Tit_Rec(nr_titulo_receber_w, nm_usuario_p);


		--AAMFIRMO OS 830247 em 13/05/2015
		if (nr_titulo_receber_w IS NOT NULL AND nr_titulo_receber_w::text <> '') and (nr_seq_baixa_w IS NOT NULL AND nr_seq_baixa_w::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
			CALL gerar_nf_parcial_tit_rec_liq( nr_titulo_receber_w,
						      nr_seq_baixa_w,
						      nm_usuario_p,
						      'N', --Nao pode commitar aqui
						      'E');
		end if;




	-- Baixa de titulo a pagar 
	elsif (ie_acao_w	= 2) then
		if (coalesce(nr_titulo_pagar_w::text, '') = '') or (coalesce(cd_tipo_baixa_cpa_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1083982,'DS_TRANSACAO_W='||DS_TRANSACAO_W);
			--'A transacao ' || to_char(nr_seq_movto_trans_p) || ' nao tem tipo de baixa ou o numero do titulo nao foi informado!');
		end if;

		begin
		dbms_application_info.SET_ACTION('ATUALIZAR_TRANSACAO_FINANCEIRA'); 	-- ahoffelder - OS 325513 - 17/06/2011 - consistir lote contabil gerado 
		if (ie_exige_liberacao_w in ('S','F')) then
			select	max(a.dt_liberacao),
				max(a.ie_tipo_titulo)
			into STRICT	dt_liberacao_w,
				ie_tipo_titulo_w
			from	titulo_pagar a
			where	a.nr_titulo	= nr_titulo_pagar_w;

			if	((ie_exige_liberacao_w = 'S') or (ie_tipo_titulo_w = '0')) and (coalesce(dt_liberacao_w::text, '') = '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185611,'NR_TITULO_PAGAR_W='||NR_TITULO_PAGAR_W);
				--'O titulo ' || NR_TITULO_PAGAR_W || ' ainda nao foi liberado!');
			end if;

		end if;

		CALL Baixa_Titulo_Pagar(cd_estabelecimento_p,
					cd_tipo_baixa_cpa_w,
					nr_titulo_pagar_w,
					vl_transacao_w,
					nm_usuario_p,
					nr_seq_trans_financ_w,
					null,
					null,
					dt_transacao_w,
					nr_seq_banco_w,
					nr_seq_cheque_cp_w,
					nr_seq_movto_trans_p);

		exception
		when others then
			dbms_application_info.SET_ACTION('');
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185560,'SQLERRM='||sqlerrm);
			--sqlerrm);
		end;

		-- Gravar na baixa a transacao que a originou 
		select	max(nr_sequencia)
		into STRICT	nr_seq_baixa_w
		from	titulo_pagar_baixa
		where	nr_titulo	= nr_titulo_pagar_w;


		update	titulo_pagar_baixa
		set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
		where	nr_titulo		= nr_titulo_pagar_w
		and	nr_sequencia		= nr_seq_baixa_w;


		CALL ESTORNAR_MOVTO_JUROS_MULTA_BCO(cd_estabelecimento_p, nm_usuario_p, dt_transacao_w, nr_seq_movto_trans_p);


		CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_pagar_w, nm_usuario_p);
		CALL Gerar_W_Tit_Pag_imposto(nr_titulo_pagar_w, nm_usuario_p);
	end if;

	-- recebimento de adiantamento - Devolver 
	if (ie_acao_w  = 3) and ((nr_seq_banco_w IS NOT NULL AND nr_seq_banco_w::text <> '') and coalesce(ie_dev_adiant_negativo_w,'N') = 'N') or (coalesce(ie_dev_adiant_negativo_w,'N') = 'S') then


		if (coalesce(nr_adiantamento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185533);
			--'Adiantamento nao informado');
		end if;

		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_devol_w
		from	adiantamento_dev
		where	nr_adiantamento		= nr_adiantamento_w;

		-- Projeto Multimoeda - Verifica se a transacao esta em moeda estrangeira, caso negativo limpa as variaveis antes de gravar a devolucao. 
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			vl_complemento_w := (vl_transacao_w * -1) - (vl_transacao_estrang_w * -1);
		else
			vl_transacao_estrang_w	:= null;
			vl_complemento_w	:= null;
			vl_cotacao_w		:= null;
			cd_moeda_trans_w	:= null;
		end if;


		insert	into adiantamento_dev(nr_adiantamento,
			nr_sequencia,
			dt_devolucao,
			vl_devolucao,
			cd_moeda,
			dt_atualizacao,
			nm_usuario,
			ds_motivo_dev,
			nr_lote_contabil,
			nr_seq_trans_fin,
			nr_seq_movto_tf,
			vl_devolucao_estrang,
			vl_complemento,
			vl_cotacao)
		values (nr_adiantamento_w,
			nr_seq_devol_w,
			pkg_date_utils.get_time(dt_transacao_w,0,0,0),
			vl_transacao_w * -1,
			coalesce(cd_moeda_trans_w,cd_moeda_w),
			clock_timestamp(),
			nm_usuario_p,
			Wheb_mensagem_pck.get_texto(355704),
			null,
			null,
			nr_seq_movto_trans_p,
			vl_transacao_estrang_w * -1,
			vl_complemento_w,
			vl_cotacao_w);

		CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null);
	end if;

	if (ie_acao_w = 20) then


		ie_somente_liquidacao_w := obter_param_usuario(815, 11, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_somente_liquidacao_w);
		ie_despesa_bancaria_w := obter_param_usuario(815, 35, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_despesa_bancaria_w);

		select	sum(coalesce(a.vl_liquidacao,0) + CASE WHEN c.ie_rejeitado='T' THEN 0  ELSE CASE WHEN coalesce(ie_despesa_bancaria_w,'N')='S' THEN coalesce(a.vl_despesa_bancaria,0)  ELSE 0 END  END ),
			coalesce(sum(a.vl_despesa_bancaria),0),
			max(b.dt_recebimento)
		into STRICT	vl_tot_cobr_w,
			vl_despesa_bancaria_w,
			dt_recebimento_cobr_w
		FROM cobranca_escritural b, titulo_receber_cobr a
LEFT OUTER JOIN banco_ocorr_escrit_ret c ON (a.nr_seq_ocorrencia_ret = c.nr_sequencia)
WHERE a.nr_seq_cobranca	= b.nr_sequencia and PKG_DATE_UTILS.start_of(coalesce(b.dt_credito_bancario,coalesce(CASE WHEN ie_movto_bco_cobr_escrit_w='D' THEN a.dt_liquidacao  ELSE dt_transacao_w END ,clock_timestamp())),'dd',0)	= dt_transacao_w and (ie_somente_liquidacao_w = 'N' or c.ie_rejeitado = 'L')  and a.nr_seq_cobranca	= nr_seq_cobr_escrit_w;


		dt_recebimento_cobr_w	:= coalesce(dt_transacao_w,clock_timestamp());


		if (nr_seq_trans_inadimplencia_w IS NOT NULL AND nr_seq_trans_inadimplencia_w::text <> '') then
			select	coalesce(sum(vl_liquidacao),0)
			into STRICT	vl_inadimplencia_w
			from	titulo_receber_cobr a
			where	PKG_DATE_UTILS.start_of(coalesce(CASE WHEN ie_movto_bco_cobr_escrit_w='D' THEN a.dt_liquidacao  ELSE dt_transacao_w END ,clock_timestamp()),'dd',0)	= dt_transacao_w
			and	nr_seq_cobranca	= nr_seq_cobr_escrit_w
			and	pls_obter_se_tit_baixa_inad(nr_titulo) = 'S';


			if (vl_inadimplencia_w > 0) then
				vl_transacao_w	:= ((vl_inadimplencia_w - vl_transacao_w)* -1);
			end if;
		end if;


		if (nr_seq_trans_desp_banco_w IS NOT NULL AND nr_seq_trans_desp_banco_w::text <> '') then
			vl_tot_cobr_w	:= coalesce(vl_tot_cobr_w,0) /*+ nvl(vl_despesa_bancaria_w,0)*/;
		end if;


		if (vl_tot_cobr_w * -1 <> vl_transacao_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185614,'VL_TRANSACAO_W='||VL_TRANSACAO_W);
			--VL_TRANSACAO_W||' O valor da transacao de estorno nao bate com o valor total da cobranca!');
		end if;


		open c05;
		loop
		fetch c05 into
			nr_seq_tit_cobr_w,
			nr_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c05 */
			-- Este bloco e para tratar baixas a maior da OPS 
			ie_gerar_baixa_w	:= 'S';
			--if	((ie_gerar_nc_tit_mens_canc_w = 'S') or

			--	(ie_gerar_nc_tit_resc_w = 'S') or

			--	(nr_seq_trans_inadimplencia_w is not null)) then

			--	--ie_baixar_w	:= pls_obter_se_baixa_titulo(nr_titulo_w);

			--	pls_tratar_canc_mens_rescisao(nr_titulo_w, nr_seq_tit_cobr_w, ie_acao_p, sysdate, 'N', cd_estabelecimento_p, nm_usuario_p, ie_baixar_w);

			--	if	(ie_baixar_w = 'N') then

			--		ie_gerar_baixa_w	:= 'N';

			--	end if;

			--end if;

			--Fim baixas a maior 
			if (ie_gerar_baixa_w = 'S') then
				CALL baixar_titulo_rec_cobr(nr_seq_tit_cobr_w,'E',nm_usuario_p,dt_recebimento_cobr_w,nr_seq_movto_trans_p);
			end if;
		end loop;
		close c05;

		update	cobranca_escritural
		set	dt_recebimento	 = NULL,
			dt_atualizacao	= clock_timestamp(),
			nm_usuario	= nm_usuario_p
		where	nr_sequencia	= nr_seq_cobr_escrit_w;
	end if;

	-- Edgar 17/04/2008, OS 71663, tratar estorno 
	if (ie_acao_w = 5) then

		begin
		if (coalesce(nr_bordero_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185544,'CD_TRANSACAO_W='||CD_TRANSACAO_W||';DS_TRANSACAO_W='||DS_TRANSACAO_W);
			--'A transacao ' || cd_transacao_w ||' - ' || ds_transacao_w || ' nao tem bordero informado!');
		end if;

        if (ie_bordero_banco_w <> 'F') then

		open	c01;
		loop
		fetch	c01 into
			nr_titulo_bordero_w,
			vl_saldo_titulo_bordero_w,
			nr_seq_trans_baixa_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin
				CALL Baixa_Titulo_Pagar(cd_estabelecimento_p,
							cd_tipo_baixa_cpa_w,
							nr_titulo_bordero_w,
							vl_saldo_titulo_bordero_w * -1,
							nm_usuario_p,
							coalesce(nr_seq_trans_baixa_w, nr_seq_trans_financ_w),
							nr_bordero_w,
							null,
							dt_transacao_w,
							nr_seq_banco_w);

				select	max(nr_sequencia)
				into STRICT	nr_seq_baixa_w
				from	titulo_pagar_baixa
				where	nr_titulo	= nr_titulo_bordero_w;

				update	titulo_pagar_baixa
				set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
				where	nr_titulo		= nr_titulo_bordero_w
				and	nr_sequencia		= nr_seq_baixa_w;

                CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_bordero_w, nm_usuario_p);
				CALL Gerar_W_Tit_Pag_imposto(nr_titulo_bordero_w, nm_usuario_p);
			end;
		end loop;
		close c01;

		else

			open	c10;
			loop
			fetch	c10 into
				nr_titulo_bordero_w,
				vl_saldo_titulo_bordero_w,
				nr_seq_trans_baixa_w;
			EXIT WHEN NOT FOUND; /* apply on c10 */
				begin
					CALL Baixa_Titulo_Pagar(cd_estabelecimento_p,
								cd_tipo_baixa_cpa_w,
								nr_titulo_bordero_w,
								vl_saldo_titulo_bordero_w * -1,
								nm_usuario_p,
								coalesce(nr_seq_trans_baixa_w, nr_seq_trans_financ_w),
								nr_bordero_w,
								null,
								dt_transacao_w,
								nr_seq_banco_w);

					select	max(nr_sequencia)
					into STRICT	nr_seq_baixa_w
					from	titulo_pagar_baixa
					where	nr_titulo	= nr_titulo_bordero_w;

					update	titulo_pagar_baixa
					set	nr_seq_movto_trans_fin	= nr_seq_movto_trans_p
					where	nr_titulo		= nr_titulo_bordero_w
					and	nr_sequencia		= nr_seq_baixa_w;

					CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_bordero_w, nm_usuario_p);
					CALL Gerar_W_Tit_Pag_imposto(nr_titulo_bordero_w, nm_usuario_p);
				end;
			end loop;
			close c10;

		end if;

		update	bordero_pagamento
		set	dt_real_pagamento	 = NULL
		where 	nr_bordero		= nr_bordero_w;

		end;

	end if;

	if (ie_acao_w = 4) then
		if (coalesce(nr_adiantamento_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185533);
			--'Adiantamento nao informado');
		end if;

		-- Projeto Multimoeda - Se houver moeda cadastrada para o estabelecimento e para o banco, e a moeda do banco for diferente da moeda do estabelecimento, trabalhara com valores estrangeiros, caso contrario mantem o padrao. 
		if ((cd_moeda_rel_w IS NOT NULL AND cd_moeda_rel_w::text <> '') and (cd_moeda_banco_w IS NOT NULL AND cd_moeda_banco_w::text <> '') and cd_moeda_rel_w <> cd_moeda_banco_w) then
			select	coalesce(max(coalesce(vl_adto_estrang,0)),0),
				max(cd_moeda)
			into STRICT	vl_saldo_adiant_w,
				cd_moeda_adiant_w
			from	adiantamento
			where	nr_adiantamento		= nr_adiantamento_w;

			if (cd_moeda_banco_w <> cd_moeda_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(339977);
				-- Moeda do adiantamento deve ser igual a moeda da transacao.
			else
				select	coalesce(max(nr_sequencia),0) + 1
				into STRICT	nr_seq_devol_w
				from	adiantamento_dev
				where	nr_adiantamento		= nr_adiantamento_w;


				update	cheque_cr
				set	dt_devolucao		 = NULL,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where	nr_adiantamento		= nr_adiantamento_w;

				insert	into adiantamento_dev(nr_adiantamento,
					nr_sequencia,
					dt_devolucao,
					vl_devolucao,
					vl_devolucao_estrang,
					vl_cotacao,
					vl_complemento,
					cd_moeda,
					dt_atualizacao,
					nm_usuario,
					ds_motivo_dev,
					nr_lote_contabil,
					nr_seq_trans_fin,
					nr_seq_movto_tf)
				values (nr_adiantamento_w,
					nr_seq_devol_w,
					pkg_date_utils.get_time(dt_transacao_w,0,0,0),
					vl_transacao_w,
					vl_transacao_estrang_w,
					vl_cotacao_w,
					vl_transacao_w - vl_transacao_estrang_w,
					cd_moeda_adiant_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					null,
					null,
					nr_seq_movto_trans_p);

				CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null, vl_cotacao_w);
			end if;


		else


			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	nr_seq_devol_w
			from	adiantamento_dev
			where	nr_adiantamento		= nr_adiantamento_w;


			update	cheque_cr
			set	dt_devolucao		 = NULL,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	nr_adiantamento		= nr_adiantamento_w;

			insert	into adiantamento_dev(nr_adiantamento,
				nr_sequencia,
				dt_devolucao,
				vl_devolucao,
				cd_moeda,
				dt_atualizacao,
				nm_usuario,
				ds_motivo_dev,
				nr_lote_contabil,
				nr_seq_trans_fin,
				nr_seq_movto_tf)
			values (nr_adiantamento_w,
				nr_seq_devol_w,
				pkg_date_utils.get_time(dt_transacao_w,0,0,0),
				vl_transacao_w,
				cd_moeda_w,
				clock_timestamp(),
				nm_usuario_p,
				null,
				null,
				null,
				nr_seq_movto_trans_p);

			CALL Atualizar_Saldo_Adiantamento(nr_adiantamento_w, nm_usuario_p, null);
		end if;
	end if;

	if (ie_acao_w = 6) and (nr_seq_deposito_w IS NOT NULL AND nr_seq_deposito_w::text <> '') then
		begin

		select	vl_especie,
			vl_cheque,
			(vl_especie + vl_cheque),
			dt_deposito,
			vl_cheque_estrang,
			(vl_especie_estrang + vl_cheque_estrang)
		into STRICT	vl_especie_deposito_w,
			vl_cheque_deposito_w,
			vl_total_deposito_w,
			dt_deposito_w,
			vl_cheque_depos_est_w,
			vl_total_depos_est_w
		from	deposito
		where	nr_sequencia		= nr_seq_deposito_w;

		if (coalesce(dt_deposito_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185615,'NR_SEQ_DEPOSITO_W='||NR_SEQ_DEPOSITO_W);
			--'O deposito ' || NR_SEQ_DEPOSITO_W || ' ainda nao foi baixado! O mesmo deve baixado antes de estornar.');
		end if;

		select	sum(b.vl_cheque),
			sum(b.vl_cheque_estrang)
		into STRICT	vl_total_cheques_w,
			vl_total_cheque_est_w
		from	deposito_cheque a,
			cheque_cr b
		where	a.nr_seq_cheque		= b.nr_seq_cheque
		and	a.nr_seq_deposito	= nr_seq_deposito_w;

		-- Projeto Multimoeda - Transacao em moeda estrangeira valida os valores do deposito em moeda estrangeira 
		if (coalesce(vl_transacao_estrang_w,0) <> 0) then
			if (vl_transacao_estrang_w <> vl_total_depos_est_w * -1) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185573);
				--'O valor da transacao nao bate com o valor total do deposito!');
			end if;

			if (vl_total_cheque_est_w <> vl_cheque_depos_est_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185574);
				--'O valor dos cheques vinculados nao bate com o valor do deposito!');
			end if;
		else
			if (vl_transacao_w <> vl_total_deposito_w * -1) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185573);
				--'O valor da transacao nao bate com o valor total do deposito !');
			end if;

			if (vl_total_cheques_w <> vl_cheque_deposito_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185574);
				--'O valor dos cheques vinculados nao bate com o valor do deposito !');
			end if;
		end if;

		CALL desfazer_deposito(nr_seq_deposito_w,dt_transacao_w,nm_usuario_p);


		end;
	end if;

	if (ie_acao_w = 7) and (nr_seq_cheque_w IS NOT NULL AND nr_seq_cheque_w::text <> '') then

		select	dt_deposito,
			dt_devolucao_banco,
			dt_seg_devolucao,
			dt_terc_devolucao
		into STRICT	dt_deposito_w,
			dt_devolucao_w,
			dt_seg_devolucao_w,
			dt_terc_devolucao_w
		from	cheque_cr
		where	nr_seq_cheque = nr_seq_cheque_w;

		if (dt_terc_devolucao_w IS NOT NULL AND dt_terc_devolucao_w::text <> '') and (obter_status_cheque(nr_seq_cheque_w) = 10) then
			update	cheque_cr
			set	dt_terc_devolucao	 = NULL,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_terc_dev	 = NULL
			where	nr_seq_cheque		= nr_seq_cheque_w;
		elsif (dt_seg_devolucao_w IS NOT NULL AND dt_seg_devolucao_w::text <> '') and (obter_status_cheque(nr_seq_cheque_w) = 5) then
			update	cheque_cr
			set	dt_seg_devolucao	 = NULL,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_seg_dev	 = NULL
			where	nr_seq_cheque		= nr_seq_cheque_w;
		elsif (dt_devolucao_w IS NOT NULL AND dt_devolucao_w::text <> '') and (obter_status_cheque(nr_seq_cheque_w) = 3) then
			update	cheque_cr
			set	dt_devolucao_banco	 = NULL,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_dev	 = NULL
			where	nr_seq_cheque		= nr_seq_cheque_w;
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185617,'NR_SEQ_CHEQUE_W='||to_char(NR_SEQ_CHEQUE_W));
			--'A devolucao nao pode ser desfeita pois o cheque nao esta com algum status de devolucao!' || CHR(13) || 'Seq cheque: ' || to_char(NR_SEQ_CHEQUE_W));
		end if;

		CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
		CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
		CALL atualizar_cobranca_cheque(nr_seq_cheque_w,nm_usuario_p);
	end if;

	if (ie_acao_w = 13) then

		-- Projeto Multimoeda - Se valor da transacao em moeda estrangeira diferente de 0, se trata de operacao em moeda estrangeira
		if (coalesce(vl_transacao_estrang_w,0) <> 0 and coalesce(vl_cotacao_w,0) <> 0 and (cd_moeda_trans_w IS NOT NULL AND cd_moeda_trans_w::text <> '')) then
			select max(cd_moeda)
			into STRICT cd_moeda_adiant_w
			from adiantamento_pago
			where nr_adiantamento = nr_adiant_pago_w;


			if (cd_moeda_trans_w <> cd_moeda_adiant_w) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(339977);
				--Moeda do adiantamento deve ser igual a moeda da transacao.
			end if;


			select max(vl_saldo_estrang)
			into STRICT vl_saldo_estrang_w
			from adiantamento_pago
			where nr_adiantamento = nr_adiant_pago_w;


			if (vl_saldo_estrang_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185618,'NR_SEQUENCIA_W='||NR_SEQUENCIA_W);
				--'O saldo do adiantamento nao esta zerado, nao e possivel desfazer a devolucao' || chr(13) || 'Transacao: ' || NR_SEQUENCIA_W);
			end if;


			vl_complemento_w := vl_transacao_w - vl_transacao_estrang_w;


			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_adiant_dev_w
			from	adiant_pago_dev;

			insert into Adiant_pago_dev(NR_ADIANTAMENTO,
				NR_SEQUENCIA,
				DT_DEVOLUCAO,
				VL_DEVOLUCAO,
				CD_MOEDA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DS_MOTIVO_DEV,
				NR_LOTE_CONTABIL,
				NR_SEQ_TRANS_FIN,
				vl_devolucao_estrang,
				vl_complemento,
				vl_cotacao)
			values (nr_adiant_pago_w,
				nr_seq_adiant_dev_w,
				dt_transacao_w,
				vl_transacao_w,
				cd_moeda_trans_w,
				clock_timestamp(),
				nm_usuario_p,
				ds_historico_w,
				0,
				null,
				vl_transacao_estrang_w,
				vl_complemento_w,
				vl_cotacao_w);

			-- Atualiza o saldo do adiantamento em moeda estrangeira e converte pela cotacao para o saldo em moeda nacional. 
			CALL atualizar_saldo_adiant_pago(nr_adiant_pago_w,nm_usuario_p,vl_cotacao_w);


		else
			select	max(a.vl_adiantamento) vl_adiant_pago,
				obter_saldo_adiant_pago(max(a.nr_adiantamento),clock_timestamp()) vl_saldo_adiant_pago
			into STRICT	vl_adiant_pago_w,
				vl_saldo_adiant_pago_w
			from	adiantamento_pago a
			where	a.nr_adiantamento	= nr_adiant_pago_w;

			if	((coalesce(vl_adiant_pago_w,0) - coalesce(vl_saldo_adiant_pago_w,0)) < (coalesce(vl_transacao_w,0) * -1)) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185618,'NR_SEQUENCIA_W='||NR_SEQUENCIA_W);
				--'O saldo do adiantamento nao esta zerado, nao e possivel desfazer a devolucao' || chr(13) || 'Transacao: ' || NR_SEQUENCIA_W);
			end if;

			select	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_adiant_dev_w
			from	adiant_pago_dev;

			insert into Adiant_pago_dev(NR_ADIANTAMENTO,
				NR_SEQUENCIA,
				DT_DEVOLUCAO,
				VL_DEVOLUCAO,
				CD_MOEDA,
				DT_ATUALIZACAO,
				NM_USUARIO,
				DS_MOTIVO_DEV,
				NR_LOTE_CONTABIL,
				NR_SEQ_TRANS_FIN)
			values (nr_adiant_pago_w,
				nr_seq_adiant_dev_w,
				dt_transacao_w,
				vl_transacao_w,
				cd_moeda_w,
				clock_timestamp(),
				nm_usuario_p,
				ds_historico_w,
				0,
				null);

			CALL atualizar_saldo_adiant_pago(nr_adiant_pago_w,nm_usuario_p);
		end if;
	end if;

	if (ie_acao_w = 14) then

		select	dt_devolucao,
			dt_venda_terc,
			dt_saque
		into STRICT	dt_devolucao_w,
			dt_venda_terc_w,
			dt_saque_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_w;

		if (dt_devolucao_w IS NOT NULL AND dt_devolucao_w::text <> '') and (obter_status_cheque(nr_seq_cheque_w) = 6) then
			update	cheque_cr
			set	dt_devolucao		 = NULL,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp()
			where	nr_seq_cheque		= nr_seq_cheque_w;
			CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_cobranca_cheque(nr_seq_cheque_w, nm_usuario_p);
		else
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185619,'NR_SEQ_CHEQUE_W='||to_char(NR_SEQ_CHEQUE_W));
			--'A devolucao ao paciente nao pode ser desfeita pois o status atual do cheque ' || ' nao e "Devolvido ao paciente"!' || chr(13) || 'Seq cheque: ' || to_char(NR_SEQ_CHEQUE_W));
		end if;

	end if;

	if (ie_acao_w = 23) then
		CALL alterar_portador_cheque_cr(nr_seq_cheque_w, cd_tipo_portador_w, cd_portador_w, nm_usuario_p, 'N','I');
	end if;


	-- Francisco - 10/03/2010 - OS 200101 - Estorno de credito nao identificado 
	if (ie_acao_w = 24) then

		select	max(a.nr_sequencia)
		into STRICT	nr_seq_movto_banco_pend_w
		from	movto_banco_pend a
		where	a.nr_seq_movto_trans_fin	= nr_seq_movto_orig_w;


		if (nr_seq_movto_banco_pend_w IS NOT NULL AND nr_seq_movto_banco_pend_w::text <> '') then
			select	coalesce(sum(a.vl_baixa),0)
			into STRICT	vl_baixado_credito_w
			from	movto_banco_pend_baixa a
			where	a.nr_seq_movto_pend	= nr_seq_movto_banco_pend_w;


			select	a.dt_credito
			into STRICT	dt_credito_w
			from	movto_banco_pend a
			where	nr_sequencia	= nr_seq_movto_banco_pend_w;


			if (trunc(dt_credito_w) <> trunc(dt_transacao_w)) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185620);
				--'A data de estorno precisa ser a mesma do credito!#@#@');
			end if;


			if (vl_baixado_credito_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185621);
				--'O credito nao identificado ja foi baixado.' || chr(13) ||'Nao e possivel estornar esta movimentacao!#@#@');
			end if;


			dt_conciliacao_credito_w	:= obter_dados_movto_bco_pend(nr_seq_movto_banco_pend_w,'DC');


			if (dt_conciliacao_credito_w IS NOT NULL AND dt_conciliacao_credito_w::text <> '') then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(185622);
				--'O credito nao identificado ja foi conciliado.' || chr(13) ||'Nao e possivel estornar esta movimentacao!#@#@');
			end if;


			-- Projeto Multimoeda - Verifica se a transacao e em moeda estrangeira, caso negativo limpa as variaveis antes de inserir o movto pendente
			if (coalesce(vl_transacao_estrang_w,0) <> 0) then
				vl_complemento_w	:= vl_transacao_w - vl_transacao_estrang_w;
			else
				vl_transacao_estrang_w	:= null;
				vl_complemento_w	:= null;
				vl_cotacao_w		:= null;
				cd_moeda_trans_w	:= null;
			end if;

			insert	into	movto_banco_pend(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				vl_credito,
				vl_saldo,
				dt_credito,
				ie_estorno,
				nr_seq_movto_estorno,
				nr_seq_conta_banco,
				nr_seq_movto_trans_fin,
				cd_estabelecimento,
				vl_credito_estrang,
				vl_complemento,
				vl_cotacao,
				cd_moeda)
			values (nextval('movto_banco_pend_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				vl_transacao_w,
				vl_transacao_w,
				dt_transacao_w,
				'E',
				nr_seq_movto_banco_pend_w,
				nr_seq_banco_w,
				nr_seq_movto_trans_p,
				cd_estabelecimento_p,
				vl_transacao_estrang_w,
				vl_complemento_w,
				vl_cotacao_w,
				cd_moeda_trans_w);


			update	movto_banco_pend
			set	ie_estorno	= 'O',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_seq_movto_banco_pend_w;
		end if;






	end if;

	if (ie_acao_w = 25) then
		if (coalesce(nr_seq_cheque_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185592);
			--'Cheque emitido nao informado!');
		end if;

		update	cheque_cr
		set	dt_compensacao	 = NULL
		where	nr_seq_cheque	= nr_seq_cheque_w;
	end if;

	if (ie_acao_w = 15) then
		begin

		select	dt_devolucao,
			dt_saque,
			nr_cheque
		into STRICT	dt_devolucao_w,
			dt_saque_w,
			nr_cheque_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_w;
		exception
			when no_data_found then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185624,'DS_TRANSACAO_W='||DS_TRANSACAO_W);
			--'A transacao "' || DS_TRANSACAO_W || '" precisa ter um cheque informado!');
		end;

		if (dt_devolucao_w IS NOT NULL AND dt_devolucao_w::text <> '') or (dt_saque_w IS NOT NULL AND dt_saque_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185625,'NR_CHEQUE_W='||NR_CHEQUE_W||';NR_SEQUENCIA_W='||NR_SEQUENCIA_W);
			--'O cheque ' || NR_CHEQUE_W || ' ja foi devolvido ao paciente ' ||'ou ja foi sacado! ' || chr(13) || 'Transacao: ' || NR_SEQUENCIA_W);
		else
			update	cheque_cr
			set	dt_venda_terc	 = NULL,
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_seq_cheque	= nr_seq_cheque_w;
			CALL ATUALIZAR_DESBLOQUEIO_CHEQUE(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w, nm_usuario_p);
			CALL atualizar_cobranca_cheque(nr_seq_cheque_w, nm_usuario_p);
		end if;

	end if;

	if (ie_acao_w = 27) then
		CALL gerar_nota_credito_pgto_amaior(	nr_seq_movto_trans_p,
						cd_pessoa_fisica_w,
						cd_cgc_w,
						nr_seq_pagador_w,
						dt_transacao_w,
						vl_transacao_w,
						ie_acao_p,
						cd_estabelecimento_p,
						nm_usuario_p);
	end if;

	if (ie_acao_w = 30) then	-- ahoffelder - OS 418458 - 15/05/2012 
		select	vl_saldo_negociado
		into STRICT	vl_saldo_negociado_w
		from	cheque_cr
		where	nr_seq_cheque	= nr_seq_cheque_w;

		if (vl_saldo_negociado_w = 0) then

			update	cheque_cr
			set	dt_devolucao		 = NULL
			where	nr_seq_cheque		= nr_seq_cheque_w;
		end if;

		CALL atualizar_saldo_neg_cheque_cr(nr_seq_cheque_w,nm_usuario_p);

		CALL atualizar_cobranca_cheque(nr_seq_cheque_w,nm_usuario_p);

	end if;


	if (ie_acao_w = 32) then
		CALL fin_recuperar_perda(nr_seq_movto_trans_p, ie_acao_p, 'N', nm_usuario_p);
	end if;


	if (ie_acao_w = 35) then


		if (coalesce(nr_seq_cheque_cp_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185592);
			--'Cheque emitido nao informado!');
		end if;

		update	cheque
		set	dt_cancelamento	 = NULL
		where	nr_sequencia 	= nr_seq_cheque_cp_w;
	end if;

end if;

CALL gravar_agend_integracao(417, 'NR_SEQ_MVTO_FIN=' || nr_seq_movto_trans_p || ';');

--commit; Edgar OS 12314, nao pode dar commit
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_transacao_financeira (cd_estabelecimento_p bigint, nr_seq_movto_trans_p bigint, nm_usuario_p text, ie_acao_p text) FROM PUBLIC;

