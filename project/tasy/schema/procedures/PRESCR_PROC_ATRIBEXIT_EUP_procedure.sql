-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE prescr_proc_atribexit_eup ( nr_seq_proc_interno_p bigint, cd_convenio_p text, cd_categoria_p text, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p text, cd_setor_atendimento_p text, dt_conta_p timestamp, cd_procedimento_p text, cd_medico_p text, nr_seq_exame_lab_p bigint, nr_seq_origem_p text, nr_prescricao_p text, ie_origem_proced_p text, ie_atrib_exit_p text, ie_tipo_convenio_p bigint, cd_medico_exec_p text, cd_profissional_p text, cd_setor_entrega_p text, nr_atendimento_p bigint, nr_seq_classificacao_p bigint, ie_tipo_atendimento_pac_p bigint, ie_clinica_p bigint, ie_lado_p text, cd_intervalo_p bigint, cd_setor_exclusivo_p INOUT bigint, cd_setor_proced_p INOUT bigint, ds_msg_erro_p INOUT text, ds_msg_aviso_p INOUT text, ie_consiste_edicao_p INOUT text, ie_setor_proc_p INOUT text, qt_setores_proc_interno_p INOUT bigint, qt_setores_proc_p INOUT bigint, ds_procedimento_p INOUT text, ie_origem_proced_out_p INOUT bigint, cd_pessoa_fisica_p INOUT text, ie_medico_executor_p INOUT text, cd_medico_executor_p INOUT text, ie_proc_edicao_p INOUT text, ie_pacote_convenio_p INOUT text, ie_apres_msg_proc_p INOUT text, qt_procedimento_p INOUT bigint, qt_proc_p INOUT bigint, ie_proc_urgente_p INOUT text, ds_conteudo_p INOUT text, ie_perm_alter_setor_exec_p INOUT text, cd_cbo_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

 
 
cd_estabelecimento_w			bigint := obter_estabelecimento_ativo;
ie_verifica_setor_adic_proc_w	varchar(1);
ie_busca_qtd_proc_w				varchar(1);
cd_perfil_w						bigint := obter_perfil_ativo;
vl_aux_w						varchar(15);
cd_setor_atendimento_w			bigint;


BEGIN 
 
ie_perm_alter_setor_exec_p := obter_param_usuario(916, 81, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_perm_alter_setor_exec_p);
ie_busca_qtd_proc_w := obter_param_usuario(916, 385, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_busca_qtd_proc_w);
ie_verifica_setor_adic_proc_w := obter_param_usuario(916, 558, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_verifica_setor_adic_proc_w);
 
cd_setor_proced_p := obter_setor_atend_proc(cd_estabelecimento_w, cd_procedimento_p, ie_origem_proced_p, null, cd_setor_entrega_p, nm_usuario_p, 
	nr_seq_proc_interno_p, nr_atendimento_p);
	 
if (ie_perm_alter_setor_exec_p = 'L' and 
	not(cd_setor_proced_p = '') and 
	not(cd_setor_proced_p = '0')) then 
	ie_perm_alter_setor_exec_p := 'S';
elsif (ie_perm_alter_setor_exec_p = 'L' and 
	cd_setor_proced_p = '' and 
	cd_setor_proced_p = '0') then 
	ie_perm_alter_setor_exec_p := 'N';
end if;
 
if ((coalesce(cd_setor_proced_p::text, '') = '' or 
	cd_setor_proced_p = 0) and 
	(nr_seq_exame_lab_p IS NOT NULL AND nr_seq_exame_lab_p::text <> '')) then 
	cd_setor_proced_p := obter_setor_atend_proc_lab(cd_estabelecimento_w, cd_procedimento_p, ie_origem_proced_p, null, cd_setor_entrega_p, nm_usuario_p, nr_seq_exame_lab_p, nr_atendimento_p);
end if;
 
cd_setor_atendimento_w := cd_setor_proced_p;
 
SELECT * FROM prescr_proc_atexit_abort_eup(nr_seq_proc_interno_p, cd_convenio_p, cd_categoria_p, cd_tipo_acomodacao_p, ie_tipo_atendimento_p, cd_setor_atendimento_w, dt_conta_p, cd_procedimento_p, cd_medico_p, nr_seq_exame_lab_p, nr_seq_origem_p, nr_prescricao_p, ie_origem_proced_p, ie_atrib_exit_p, ie_tipo_convenio_p, cd_medico_exec_p, cd_profissional_p, ie_clinica_p, ie_tipo_atendimento_pac_p, nr_atendimento_p, nr_seq_classificacao_p, ds_msg_erro_p, ds_msg_aviso_p, ie_consiste_edicao_p, ie_apres_msg_proc_p, ds_conteudo_p, cd_cbo_p, nm_usuario_p) INTO STRICT ds_msg_erro_p, ds_msg_aviso_p, ie_consiste_edicao_p, ie_apres_msg_proc_p, ds_conteudo_p, cd_cbo_p;
 
if (ds_msg_erro_p IS NOT NULL AND ds_msg_erro_p::text <> '') then 
	goto final;
end if;
 
select max(ie_origem_proced), 
		count(*) 
into STRICT	ie_origem_proced_out_p, 
		qt_procedimento_p 
from	procedimento 
where	cd_procedimento = cd_procedimento_p;
 
ds_procedimento_p := obter_desc_prescr_proc(cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p);
 
select 	max(cd_setor_exclusivo) 
into STRICT	cd_setor_exclusivo_p 
from	procedimento 
where 	cd_procedimento = cd_procedimento_p 
and		ie_origem_proced = ie_origem_proced_p;
 
cd_setor_proced_p := obter_setor_atend_proc(cd_estabelecimento_w, cd_procedimento_p, ie_origem_proced_p, null, cd_setor_entrega_p, nm_usuario_p, 
	nr_seq_proc_interno_p, nr_atendimento_p);
	 
if (ie_perm_alter_setor_exec_p = 'L' and 
	not(cd_setor_proced_p = '') and 
	not(cd_setor_proced_p = '0')) then 
	ie_perm_alter_setor_exec_p := 'S';
elsif (ie_perm_alter_setor_exec_p = 'L' and 
	cd_setor_proced_p = '' and 
	cd_setor_proced_p = '0') then 
	ie_perm_alter_setor_exec_p := 'N';
end if;
 
if ((coalesce(cd_setor_proced_p::text, '') = '' or 
	cd_setor_proced_p = 0) and 
	(nr_seq_exame_lab_p IS NOT NULL AND nr_seq_exame_lab_p::text <> '')) then 
	cd_setor_proced_p := obter_setor_atend_proc_lab(cd_estabelecimento_w, cd_procedimento_p, ie_origem_proced_p, null, cd_setor_entrega_p, nm_usuario_p, nr_seq_exame_lab_p, nr_atendimento_p);
end if;
 
if (ie_verifica_setor_adic_proc_w = 'S') then 
	select	count(*) 
	into STRICT	qt_setores_proc_interno_p 
	from	proc_interno_setor 
	where 	nr_seq_proc_interno = nr_atendimento_p 
	and 	cd_estabelecimento	= cd_estabelecimento_w;
	 
	select 	count(*) 
	into STRICT	qt_setores_proc_p 
	from 	procedimento_setor_atend 
	where 	cd_procedimento 	= cd_procedimento_p 
	and 	ie_origem_proced 	= ie_origem_proced_p 
	and 	cd_estabelecimento 	= cd_estabelecimento_w;
end if;
 
SELECT * FROM consistir_setor_prescr_js(cd_setor_atendimento_p, nr_atendimento_p, dt_conta_p, cd_convenio_p, cd_procedimento_p, ie_origem_proced_p, ie_tipo_atendimento_p, nr_seq_exame_lab_p, nr_seq_classificacao_p, cd_categoria_p, ie_tipo_atendimento_pac_p, cd_estabelecimento_w, cd_perfil_w, nm_usuario_p, null, cd_pessoa_fisica_p, ie_medico_executor_p, cd_medico_executor_p, vl_aux_w, vl_aux_w, vl_aux_w) INTO STRICT cd_pessoa_fisica_p, ie_medico_executor_p, cd_medico_executor_p, vl_aux_w, vl_aux_w, vl_aux_w;
 
if (ie_busca_qtd_proc_w = 'S') then 
	qt_proc_p := Obter_Qtd_Proc_Tab_Interno(nr_seq_proc_interno_p, nr_prescricao_p, nr_atendimento_p, 0, qt_proc_p);
end if;
 
if (ie_atrib_exit_p = 'CD_PROCEDIMENTO' or 
	ie_atrib_exit_p = 'IE_LADO') then 
	qt_proc_p := obter_quantidade_prescr_proced(cd_intervalo_p, ie_lado_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, nr_atendimento_p);
end if;
 
if (ie_atrib_exit_p = 'CD_PROCEDIMENTO' or 
	ie_atrib_exit_p = 'NR_SEQ_PROC_INTERNO') then 
	begin 
	SELECT	MAX(nr_agrupamento) +1 nr_agrupamento, 
			obter_se_proc_urgente(cd_setor_atendimento_p, cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, nr_seq_exame_lab_p, 
				ie_tipo_atendimento_p, 'S', cd_perfil_w, cd_medico_p) ie_proc_urgente 
	into STRICT	vl_aux_w, 
			ie_proc_urgente_p 
	FROM  prescr_procedimento 
	WHERE  nr_prescricao = nr_prescricao_p;
	end;
end if;
 
<<final>> 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE prescr_proc_atribexit_eup ( nr_seq_proc_interno_p bigint, cd_convenio_p text, cd_categoria_p text, cd_tipo_acomodacao_p bigint, ie_tipo_atendimento_p text, cd_setor_atendimento_p text, dt_conta_p timestamp, cd_procedimento_p text, cd_medico_p text, nr_seq_exame_lab_p bigint, nr_seq_origem_p text, nr_prescricao_p text, ie_origem_proced_p text, ie_atrib_exit_p text, ie_tipo_convenio_p bigint, cd_medico_exec_p text, cd_profissional_p text, cd_setor_entrega_p text, nr_atendimento_p bigint, nr_seq_classificacao_p bigint, ie_tipo_atendimento_pac_p bigint, ie_clinica_p bigint, ie_lado_p text, cd_intervalo_p bigint, cd_setor_exclusivo_p INOUT bigint, cd_setor_proced_p INOUT bigint, ds_msg_erro_p INOUT text, ds_msg_aviso_p INOUT text, ie_consiste_edicao_p INOUT text, ie_setor_proc_p INOUT text, qt_setores_proc_interno_p INOUT bigint, qt_setores_proc_p INOUT bigint, ds_procedimento_p INOUT text, ie_origem_proced_out_p INOUT bigint, cd_pessoa_fisica_p INOUT text, ie_medico_executor_p INOUT text, cd_medico_executor_p INOUT text, ie_proc_edicao_p INOUT text, ie_pacote_convenio_p INOUT text, ie_apres_msg_proc_p INOUT text, qt_procedimento_p INOUT bigint, qt_proc_p INOUT bigint, ie_proc_urgente_p INOUT text, ds_conteudo_p INOUT text, ie_perm_alter_setor_exec_p INOUT text, cd_cbo_p INOUT text, nm_usuario_p text) FROM PUBLIC;

