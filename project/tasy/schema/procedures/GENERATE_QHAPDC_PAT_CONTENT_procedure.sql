-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_qhapdc_pat_content (nr_seq_dataset_p bigint , nm_usuario_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

  ds_segment_w                 varchar(32767);
  ds_segment_clob_w            text := '';
  is_clob_insertion_successful bigint := 0;
  excp_caught_dataset_clob_ins varchar(500 );

BEGIN
    BEGIN 
        SELECT 'N' -- Record Identifier  
               || Lpad(nr_atendimento, 12, '0') -- Unique Number  
               || Lpad(Obter_pessoa_atendimento(nr_atendimento, 'C'), 8, '0') 
               -- Patient Identifier  
               || Lpad(nr_atendimento_admission, 12, '0') -- Admission Number  
               || CASE WHEN coalesce(nm_pessoa_fisica::text, '') = '' THEN  '                        '  ELSE Rpad(nm_pessoa_last, 24, ' ') END  
               -- Family Name  
               || CASE WHEN coalesce(nm_pessoa_fisica::text, '') = '' THEN  '               '  ELSE Rpad(( nm_pessoa_fisica ), 15, ' ') END  
               -- First Given Name  
               || CASE WHEN coalesce(nm_pessoa_middle::text, '') = '' THEN  '               '  ELSE Rpad(( nm_pessoa_middle ), 15, ' ') END  
               -- Second Given Name  
               || CASE WHEN coalesce(ds_endereco_nr_endereco::text, '') = '' THEN                    '                                        '                     ELSE Rpad(trim(both ds_endereco_nr_endereco)                   , 40                   , ' ') END  
               -- Address of Usual Residence  
               || CASE WHEN coalesce(ds_municipio::text, '') = '' THEN                    '                                        '  ELSE Rpad(ds_municipio, 40, ' ') END  
               -- Location (Suburb/Town) of Usual Residence  
               || CASE WHEN coalesce(cd_cep::text, '') = '' THEN  '    '  ELSE Lpad(trim(both cd_cep), 4, '0') END  
               -- Postcode of Usual Residence  
               || CASE WHEN coalesce(sg_estado::text, '') = '' THEN  ' '  ELSE Rpad(trim(both sg_estado), 1, ' ') END  
               -- State of Usual Residence  
               || Lpad(' ', 4, ' ') -- filler  
               || CASE WHEN coalesce(ie_sexo::text, '') = '' THEN  ' '  ELSE Rpad(trim(both ie_sexo), 1, ' ') END  -- Sex  
               || CASE WHEN coalesce(dt_nascimento::text, '') = '' THEN  '        '  ELSE To_char(dt_nascimento, 'yyyymmdd') END  
               -- Date of Birth  
               || Lpad(' ', 1, ' ') --Estimated Date of Birth Indicator  
               || CASE WHEN coalesce(trim(both ie_estado_civil)::text, '') = '' THEN  '9'  ELSE trim(both ie_estado_civil) END  
               -- Marital Status  
               || CASE WHEN coalesce(cd_nacionalidade::text, '') = '' THEN  '    '  ELSE Lpad(trim(both cd_nacionalidade), 4, '0') END  
               -- Country of Birth  
               || CASE WHEN coalesce(nr_seq_etnia::text, '') = '' THEN  '9'  ELSE trim(both nr_seq_etnia) END  
               -- Indigenous Status : have to create a custom form  
               || Lpad(' ', 2, ' ') -- filer  
               || CASE WHEN coalesce(cd_profissao::text, '') = '' THEN  '    '  ELSE Rpad(trim(both cd_profissao), 4, ' ') END  
               -- Occupation : value is getting filled but it is not required currently   
               || CASE WHEN coalesce(cd_profissao_employee_status::text, '') = '' THEN  ' '  ELSE Lpad(trim(both cd_profissao_employee_status),                   1,                   ' ') END  
               -- Labour Force Status: value is getting filled but it is not required currently 
               || CASE WHEN coalesce(ie_tipo_convenio::text, '') = '' THEN  '9'  ELSE trim(both ie_tipo_convenio) END  
               -- Medicare Eligibility  
               || CASE WHEN coalesce(cd_rfc::text, '') = '' THEN  '           '  ELSE Rpad(trim(both cd_rfc), 11, ' ') END -- Medicare Number  
               || CASE WHEN coalesce(nr_seq_etnia_islander_status::text, '') = '' THEN  '9'  ELSE nr_seq_etnia_islander_status END  
               -- Australian South Sea Islander Status :  have to create a custom form  
               || Lpad(' ', 1, ' ') -- Contact for Feedback Indicator  
               || CASE WHEN coalesce(nr_telefone::text, '') = '' THEN  '                    '  ELSE Lpad(trim(both cd_profissao_employee_status),                                       20,                                       ' ') END  
               --Telephone Number Home   
               || CASE WHEN coalesce(nr_telefone_celular::text, '') = '' THEN  '                    '  ELSE Lpad(trim(both nr_telefone_celular), 20                                               ,                                               ' ') END  
               -- Telephone Numbe Mobile   
               || CASE WHEN coalesce(nr_telefone_business_work::text, '') = '' THEN  '                    '                     ELSE Lpad(trim(both nr_telefone_business_work)                   , 20,                   ' ') END  --Telephone Number Business or Work   
               || Chr(10) 
        INTO STRICT   ds_segment_w 
        FROM   qhapdc_segment_pat 
        WHERE  nr_dataset = nr_seq_dataset_p;
    EXCEPTION 
        WHEN OTHERS THEN 
          ds_segment_w := NULL;
    END;

    SELECT Concat(ds_segment_clob_w, ds_segment_w) 
    INTO STRICT   ds_segment_clob_w 
;

    SELECT * FROM Insert_dataset_content(nm_usuario_p, nr_seq_dataset_p, ds_segment_clob_w, is_clob_insertion_successful, excp_caught_dataset_clob_ins) INTO STRICT is_clob_insertion_successful, excp_caught_dataset_clob_ins;

    IF ( is_clob_insertion_successful = 1 ) THEN 
      returned_value_p := 1;

      other_exception_p := NULL;
    ELSE 
      IF (excp_caught_dataset_clob_ins IS NOT NULL AND excp_caught_dataset_clob_ins::text <> '') THEN 
        returned_value_p := 0;

        other_exception_p := excp_caught_dataset_clob_ins;
      END IF;
    END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_qhapdc_pat_content (nr_seq_dataset_p bigint , nm_usuario_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;

