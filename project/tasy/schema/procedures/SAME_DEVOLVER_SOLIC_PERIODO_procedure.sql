-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_devolver_solic_periodo ( nr_seq_prontuario_p bigint, nr_seq_solicitacao_p bigint, nm_usuario_p text, ie_Acao_p text) AS $body$
DECLARE

 
cd_estabelecimento_w		smallint;
nr_atendimento_w		bigint;
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
qt_restante_w			integer;
nr_seq_local_w			bigint;
nr_seq_caixa_w			bigint;
nr_seq_agrup_w			bigint;
cd_pessoa_solicitante_w		varchar(10);
cd_setor_solicitante_w		integer;
ie_status_dev_w			varchar(1);
ie_status_dev_desf_w		varchar(1);

ie_status_na_devolucao_w	varchar(10);
ie_armazena_na_devolucao_w	varchar(10);

BEGIN
 
if (ie_Acao_p = 'D') then 
	begin 
	/* Atualiza o status da solicitação */
 
	update	same_solic_pront 
	set	dt_devolucao		= clock_timestamp(), 
		ie_status		= 'D', 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp() 
	where	nr_sequencia		= nr_seq_solicitacao_p;
 
	/* Pega alguns dados do prontuário */
 
	select	cd_estabelecimento, 
		nr_atendimento, 
		dt_periodo_inicial, 
		coalesce(dt_periodo_final,clock_timestamp()), 
		nr_seq_local, 
		nr_seq_caixa, 
		nr_seq_agrup 
	into STRICT	cd_estabelecimento_w, 
		nr_atendimento_w, 
		dt_periodo_inicial_w, 
		dt_periodo_final_w, 
		nr_seq_local_w, 
		nr_seq_caixa_w, 
		nr_seq_agrup_w 
	from	same_prontuario 
	where	nr_sequencia		= nr_seq_prontuario_p;
 
	/* Pega alguns dados da solicitação */
 
	select	cd_pessoa_solicitante, 
		cd_setor_solicitante 
	into STRICT	cd_pessoa_solicitante_w, 
		cd_setor_solicitante_w 
	from	same_solic_pront 
	where	nr_sequencia		= nr_seq_solicitacao_p;
 
	/* Verifica se ainda tem alguma solicitação por período não entregue */
 
	select	count(*) 
	into STRICT	qt_restante_w 
	from	same_solic_pront a 
	where	a.cd_estabelecimento	= cd_estabelecimento_w 
	and	a.nr_atendimento    	= nr_atendimento_w 
	and	(a.dt_periodo_inicial IS NOT NULL AND a.dt_periodo_inicial::text <> '') 
	and	(a.dt_periodo_final IS NOT NULL AND a.dt_periodo_final::text <> '') 
	and	coalesce(a.dt_devolucao::text, '') = '' 
	and	a.dt_periodo_inicial  	>= dt_periodo_inicial_w 
	and	a.dt_periodo_final	<= dt_periodo_final_w;
 
	ie_status_na_devolucao_w	:= coalesce(obter_valor_param_usuario(941,82,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'D');
	ie_armazena_na_devolucao_w	:= coalesce(obter_valor_param_usuario(941,234,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S');	
	 
	/* Caso não tenha mais solicitações em aberto, volta o status do prontuário para armazenado */
 
	if	(((ie_status_na_devolucao_w <> 'V') or (ie_armazena_na_devolucao_w <> 'N')) and (qt_restante_w = 0)) then 
		update	same_prontuario 
		set	ie_status  	= '1' 
		where	nr_sequencia 	= nr_seq_prontuario_p;
	end if;
 
	/* Gera um histórico de devolução parcial */
 
	CALL Gestao_Prontuario_Same(	nr_seq_prontuario_p, 
				nm_usuario_p, 
				cd_pessoa_solicitante_w, 
				cd_setor_solicitante_w, 
				nr_seq_local_w, 
				nr_seq_caixa_w, 
				nr_seq_agrup_w, 
				'', 
				21, 
				null, 
				null, 
				null);
	end;
elsif (ie_Acao_p = 'E')	then 
	begin 
	select	coalesce(max(obter_valor_param_usuario(941, 82, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento)), 'D') 
	into STRICT	ie_status_dev_w 
	;
 
	ie_status_dev_desf_w := obter_param_usuario(941, 196, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_status_dev_desf_w);
	 
	 
	if (ie_status_dev_w = 'V') and (ie_status_dev_desf_w = 'S') then	 
		CALL same_desfazer_devolucao_lote(nr_seq_solicitacao_p,'N',nm_usuario_p);
	else 
		update	same_solic_pront 
		set	dt_devolucao		 = NULL, 
			ie_status		= 'E', 
			nm_usuario		= nm_usuario_p, 
			dt_atualizacao		= clock_timestamp(), 
			dt_receb_devolucao 	 = NULL, 
			nm_usuario_receb_dev 	 = NULL, 
			dt_recebimento 		 = NULL, 
			nm_usuario_receb 	 = NULL 
		where	nr_sequencia		= nr_seq_solicitacao_p;	
 
  --458300 = Solicitacao: '||nr_seq_solicitacao_p||' alterado para Entregue. 
		CALL gravar_log_tasy(45878,WHEB_MENSAGEM_PCK.get_texto(458300, 'nr_seq_solicitacao='||(nr_seq_solicitacao_p)),nm_usuario_p);	
		 
		select	cd_estabelecimento, 
			nr_atendimento, 
			dt_periodo_inicial, 
			coalesce(dt_periodo_final,clock_timestamp()), 
			nr_seq_local, 
			nr_seq_caixa, 
			nr_seq_agrup 
		into STRICT	cd_estabelecimento_w, 
			nr_atendimento_w, 
			dt_periodo_inicial_w, 
			dt_periodo_final_w, 
			nr_seq_local_w, 
			nr_seq_caixa_w, 
			nr_seq_agrup_w 
		from	same_prontuario 
		where	nr_sequencia		= nr_seq_prontuario_p;
 
		select	count(*) 
		into STRICT	qt_restante_w 
		from	same_solic_pront a 
		where	a.cd_estabelecimento  	= cd_estabelecimento_w 
		and	a.nr_atendimento    	= nr_atendimento_w 
		and	(a.dt_periodo_inicial IS NOT NULL AND a.dt_periodo_inicial::text <> '') 
		and	(a.dt_periodo_final IS NOT NULL AND a.dt_periodo_final::text <> '') 
		and	coalesce(a.dt_devolucao::text, '') = '' 
		and	a.dt_periodo_inicial  	>= dt_periodo_inicial_w 
		and	a.dt_periodo_final	<= dt_periodo_final_w;
 
		if (qt_restante_w > 0) then 
			update	same_prontuario 
			set	ie_status  	= '8' 
			where	nr_sequencia 	= nr_seq_prontuario_p;
		end if;
	end if;
	 
	 
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_devolver_solic_periodo ( nr_seq_prontuario_p bigint, nr_seq_solicitacao_p bigint, nm_usuario_p text, ie_Acao_p text) FROM PUBLIC;

