-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inativar_drg_episodio_paciente (nr_atendimento_p bigint, nr_seq_interno_p bigint, nm_tabela_p text, nm_usuario_p text, ie_opcao_p text default null) AS $body$
DECLARE


/*
nm_tabela_p
	Representa o nome da tabela do registro alterado que está chamando a procedure.
	Utilizado para verificar se o item liberado não é o item que foi inserido no 3M e não deve inativar o DRG ao ser liberado.

ie_opcao_p
TPP - Indica que foi chamado pelas Trigger da procedimento_paciente
LIB - Liberação de registro (Diagnostico e Procedimentos no PEP/PEPO)
IN  - Inativacao de registro (Diagnostico e Procedimentos no PEP/PEPO)
*/
			
			
nr_seq_episodio_w	atendimento_paciente.nr_seq_episodio%type;	
cd_motivo_exc_conta_w	parametro_faturamento.cd_motivo_exc_conta%type;
ie_status_acerto_w	conta_paciente.ie_status_acerto%type;
nr_interno_conta_w	procedimento_paciente.nr_interno_conta%type;
cd_doenca_w		diagnostico_doenca.cd_doenca%type;
cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
ie_item_drg_w		varchar(1) := 'N';
jobno 			bigint;	

c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_seq_propaci
from	episodio_paciente_drg
where	nr_seq_episodio_paciente = nr_seq_episodio_w
and	ie_situacao	= 'A';

c01_w	c01%rowtype;


BEGIN

if (billing_i18n_pck.obter_se_calcula_drg = 'S') and (billing_i18n_pck.GET_INATIVAR_DRG = 'S') then

	select	max(nr_seq_episodio)
	into STRICT	nr_seq_episodio_w
	from	atendimento_paciente
	where	nr_atendimento	= nr_atendimento_p;
	
	if (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
	
		open C01;
		loop
		fetch C01 into
			c01_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
		
			--verificar se o item que está sendo liberado, não foi um item que foi incluído no 3M e utilizado para cálculo do DRG.

			-- Se sim, então ao liberar este item não deve inativar o DRG correspondente.
			ie_item_drg_w := 'N';		
			if (ie_opcao_p in ('IN','LIB')) and (nm_tabela_p = 'DIAGNOSTICO_DOENCA') and (nr_seq_interno_p > 0) then
				
				select	max(cd_doenca)
				into STRICT	cd_doenca_w
				from	diagnostico_doenca
				where	nr_seq_interno	= nr_seq_interno_p;
				
				begin
				select	'S'
				into STRICT	ie_item_drg_w
				from	episodio_paciente_drg_item a
				where	a.nr_seq_pac_drg	= c01_w.nr_sequencia
				and	a.cd_doenca		= cd_doenca_w  LIMIT 1;
				exception
				when others then
					ie_item_drg_w	:= 'N';
				end;
			
			elsif (ie_opcao_p in ('IN','LIB')) and (nm_tabela_p = 'PROCEDIMENTO_PAC_MEDICO') and (nr_seq_interno_p > 0) then
				
				select	max(cd_procedimento),
					max(ie_origem_proced)
				into STRICT	cd_procedimento_w,
					ie_origem_proced_w
				from	procedimento_pac_medico
				where	nr_sequencia	= nr_seq_interno_p;
				
				begin
				select	'S'
				into STRICT	ie_item_drg_w
				from	episodio_paciente_drg_item a
				where	a.nr_seq_pac_drg	= c01_w.nr_sequencia
				and	a.cd_procedimento	= cd_procedimento_w
				and	a.ie_origem_proced	= ie_origem_proced_w  LIMIT 1;
				exception
				when others then
					ie_item_drg_w	:= 'N';
				end;
				
			elsif (ie_opcao_p = 'TPP') and (nm_tabela_p = 'PROCEDIMENTO_PACIENTE') and (nr_seq_interno_p > 0) then
				
				begin
				select	'S'
				into STRICT	ie_item_drg_w
				from	episodio_paciente_drg_item a
				where	a.nr_seq_pac_drg	= c01_w.nr_sequencia
				and	a.cd_procedimento	= nr_seq_interno_p
				and	a.ie_origem_proced	in (11,15) --Itens do DRG é sempre 11-OPS				
  LIMIT 1;
				exception
				when others then
					begin --Verifica se o item alterado é o próprio procedimento DRG
					select	'S'
					into STRICT	ie_item_drg_w
					from	episodio_paciente_drg a,
						drg_procedimento b
					where	a.nr_sequencia		= c01_w.nr_sequencia
					and	a.nr_seq_drg_proc	= b.nr_sequencia
					and	b.cd_procedimento	= nr_seq_interno_p  LIMIT 1;
					exception
					when others then
						ie_item_drg_w := 'N';
					end;
				end;
				
			end if;
			
			if	(ie_opcao_p = 'IN' AND ie_item_drg_w = 'S') or --Se estiver INATIVANDO um item, somente inativa o DRG se ele foi utilizado para cálculo do DRG
				(ie_opcao_p = 'LIB' AND ie_item_drg_w = 'N') then --Se estiver LIBERANDO um item, somente inativa o DRG se ele não foi utilizado para cálculo do DRG, 
											-- pois significa que um novo DRG deve ser gerado, por isso deve inativar o anterior.
			
				update	episodio_paciente_drg
				set	ie_situacao 	= 'I',
					dt_atualizacao 	= clock_timestamp()
				where	nr_sequencia	= c01_w.nr_sequencia;			
			
				if (c01_w.nr_seq_propaci IS NOT NULL AND c01_w.nr_seq_propaci::text <> '') then
				
					select	max(a.nr_interno_conta),
						max(b.ie_status_acerto),
						max(c.cd_motivo_exc_conta)					
					into STRICT	nr_interno_conta_w,					
						ie_status_acerto_w,
						cd_motivo_exc_conta_w
					from	procedimento_paciente a,
						conta_paciente b,
						parametro_faturamento c
					where	a.nr_interno_conta	= b.nr_interno_conta
					and	b.cd_estabelecimento	= c.cd_estabelecimento
					and	a.nr_sequencia		= c01_w.nr_seq_propaci;

					if (ie_status_acerto_w = 1) and (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') and (c01_w.nr_seq_propaci IS NOT NULL AND c01_w.nr_seq_propaci::text <> '') and (cd_motivo_exc_conta_w IS NOT NULL AND cd_motivo_exc_conta_w::text <> '') then
						
						CALL billing_i18n_pck.set_INATIVAR_DRG('N');
											
						update	procedimento_paciente
						set	cd_motivo_exc_conta	= cd_motivo_exc_conta_w,
							ds_compl_motivo_excon	= obter_desc_expressao(884850),
							dt_acerto_conta 	 = NULL,
							nr_interno_conta 	 = NULL,
							dt_atualizacao		= clock_timestamp(),
							nm_usuario		= nm_usuario_p,
							nr_seq_proc_autor	 = NULL
						where	nr_sequencia		= c01_w.nr_seq_propaci;
						begin
						delete	from auditoria_propaci
						where	nr_seq_propaci	= c01_w.nr_seq_propaci;
						exception
						when others then
							null;
						end;
						CALL billing_i18n_pck.set_INATIVAR_DRG('S');
					end if;	
					
				end if;
			end if;
				
			if (ie_item_drg_w = 'S') and (c01_w.nr_seq_propaci IS NOT NULL AND c01_w.nr_seq_propaci::text <> '') and (nm_tabela_p = 'PROCEDIMENTO_PACIENTE') and (coalesce(ie_opcao_p,'X') = 'TPP') then
				
				update	episodio_paciente_drg
				set	ie_situacao 	= 'I',
					dt_atualizacao 	= clock_timestamp()
				where	nr_sequencia	= c01_w.nr_sequencia;
				
				dbms_job.submit(jobno, 'EXCLUIR_PROC_PAC_DRG(' || to_char(c01_w.nr_seq_propaci) || ', ' ||
										chr(39)|| to_char(nm_usuario_p) || chr(39)||');');		
			
			
			end if;
		
		end loop;
		close C01;
	
	end if;

end if;	

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inativar_drg_episodio_paciente (nr_atendimento_p bigint, nr_seq_interno_p bigint, nm_tabela_p text, nm_usuario_p text, ie_opcao_p text default null) FROM PUBLIC;

