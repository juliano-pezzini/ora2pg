-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_razao_estoque ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, dt_mesano_referencia_fim_p timestamp, cd_local_estoque_p bigint, dt_inicio_movto_p timestamp, dt_fim_movto_p timestamp, cd_material_p bigint, nm_usuario_p text, ie_restringir_usuario_p text, ie_ordem_p text) AS $body$
DECLARE



dt_movimento_w			timestamp;
dt_movimento_estoque_w		timestamp;
qt_movimento_w			double precision;
dt_processo_w			timestamp;
dt_atualzacao_w			timestamp;
dt_inicio_movto_w			timestamp;
dt_fim_movto_w			timestamp;
cd_local_estoque_w		smallint;
cd_local_estoque_ww		smallint;
cd_operacao_estoque_w		smallint;
cd_material_estoque_w		integer;
nr_movimento_estoque_w		bigint;
nr_documento_w			bigint;
dt_mes_ant_w			timestamp;
qt_saldo_ant_w			double precision;
qt_estoque_w			double precision	:= 0;
ie_entrada_saida_w			varchar(1);
cd_acao_w			varchar(1);
dt_mesano_referencia_w		timestamp;
vl_estoque_ant_w			double precision;
vl_movimento_w			double precision;
vl_movto_w			double precision	:= 0;


c01 CURSOR FOR

SELECT /*+ NO_INDEX(A MOVESTO_9) INDEX(A MOVESTO_I13) NO_QUERY_TRANSFORMATION  */ PKG_DATE_UTILS.start_of(a.dt_movimento_estoque,'dd',0) dt_movimento_estoque,
	/*select	trunc(a.dt_movimento_estoque) dt_movimento_estoque,*/

	a.dt_movimento_estoque dt_movimento_estoque2,
	coalesce(sum(CASE WHEN a.cd_acao='1' THEN 	CASE WHEN b.ie_entrada_saida='S' THEN (qt_estoque * -1)  ELSE qt_estoque END  WHEN a.cd_acao='2' THEN 	CASE WHEN b.ie_entrada_saida='S' THEN (qt_estoque * -1)  ELSE qt_estoque END  * 1 END ),0) qt_movimento,
	a.dt_processo,
	a.dt_atualizacao,
	a.cd_local_estoque,
	a.cd_operacao_estoque,
	b.ie_entrada_saida,
	a.cd_material_estoque,
	a.nr_movimento_estoque,
	a.nr_documento,
	a.cd_acao,
	a.dt_mesano_referencia,
	sum(CASE WHEN b.ie_entrada_saida='E' THEN 	a.vl_movimento  ELSE a.vl_movimento* -1 END ) vl_movimento
from	operacao_estoque b,
	movimento_estoque_v1 a
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	b.ie_atualiza_estoque = 'S'
and	coalesce(b.ie_consignado,'0') = '0'
and	a.cd_material_estoque	= cd_material_p
and	a.cd_local_estoque 	= coalesce(cd_local_estoque_ww,a.cd_local_estoque)
and	a.dt_mesano_referencia	between dt_mesano_referencia_p and dt_mesano_referencia_fim_p
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and (a.dt_processo <= coalesce(dt_fim_movto_w, a.dt_processo))
group by
	trunc(a.dt_movimento_estoque),
	a.dt_movimento_estoque,
	a.dt_processo,
	a.dt_atualizacao,
	a.cd_local_estoque,
	a.cd_operacao_estoque,
	b.ie_entrada_saida,
	a.cd_material_estoque,
	a.nr_movimento_estoque,
	a.nr_documento,
	a.cd_acao,
	a.dt_mesano_referencia
order by	CASE WHEN coalesce(ie_ordem_p,'M')='M' THEN  a.dt_movimento_estoque  ELSE a.dt_processo END ,
	a.dt_processo,
	a.nr_movimento_estoque,
	a.dt_atualizacao;


BEGIN
if (dt_inicio_movto_p IS NOT NULL AND dt_inicio_movto_p::text <> '') then
	dt_inicio_movto_w	:= PKG_DATE_UTILS.start_of(dt_inicio_movto_p,'dd',0);
end if;

if (dt_fim_movto_p IS NOT NULL AND dt_fim_movto_p::text <> '') then
	dt_fim_movto_w := fim_dia(dt_fim_movto_p);
end if;

if (coalesce(ie_restringir_usuario_p,'N') = 'S') then
	delete	FROM w_razao_estoque
	where	nm_usuario = nm_usuario_p;
else
	delete from w_razao_estoque;
end if;
commit;

if (coalesce(cd_local_estoque_p,0) = 0) then
	cd_local_estoque_ww := null;
else
	cd_local_estoque_ww := cd_local_estoque_p;
end if;


dt_mesano_referencia_w		:= dt_mesano_referencia_p;
dt_mes_ant_w			:= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p,-1,0);

select	coalesce(sum(qt_estoque),0),
	coalesce(sum(vl_estoque),0)
into STRICT	qt_saldo_ant_w,
	vl_estoque_ant_w
from	saldo_estoque a
where	cd_estabelecimento	= cd_estabelecimento_p
and	dt_mesano_referencia	= dt_mes_ant_w
and	a.cd_local_estoque 	= coalesce(cd_local_estoque_ww, a.cd_local_estoque)
and	cd_material		= cd_material_p;

qt_estoque_w	:= qt_saldo_ant_w;
vl_movto_w	:= vl_estoque_ant_w;

if (cd_material_p IS NOT NULL AND cd_material_p::text <> '') then
	open c01;
	loop
	fetch c01 into
		dt_movimento_w,
		dt_movimento_estoque_w,
		qt_movimento_w,
		dt_processo_w,
		dt_atualzacao_w,
		cd_local_estoque_w,
		cd_operacao_estoque_w,
		ie_entrada_saida_w,
		cd_material_estoque_w,
		nr_movimento_estoque_w,
		nr_documento_w,
		cd_acao_w,
		dt_mesano_referencia_w,
		vl_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		if (dt_processo_w < dt_inicio_movto_w) then
			qt_saldo_ant_w	:= qt_saldo_ant_w + qt_movimento_w;
			qt_estoque_w	:= qt_saldo_ant_w;
			vl_movto_w	:= vl_movto_w + vl_movimento_w;
		else
			qt_estoque_w	:= qt_estoque_w + qt_movimento_w;
			vl_movto_w	:= vl_movto_w + vl_movimento_w;

			insert into w_razao_estoque(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				ie_tipo_informacao,
				cd_estabelecimento,
				dt_mesano_referencia,
				dt_movimento,
				dt_movimento_estoque,
				dt_processo,
				cd_local_estoque,
				cd_operacao_estoque,
				ie_entrada_saida,
				cd_acao,
				cd_material,
				nr_movimento_estoque,
				nr_documento,
				qt_movimento,
				qt_estoque,
				vl_movimento,
				vl_estoque)
			values ( 	nextval('w_razao_estoque_seq'),
				clock_timestamp(),
				nm_usuario_p,
				5,
				cd_estabelecimento_p,
				dt_mesano_referencia_w,
				dt_movimento_w,
				dt_movimento_estoque_w,
				dt_processo_w,
				cd_local_estoque_w,
				cd_operacao_estoque_w,
				ie_entrada_saida_w,
				cd_acao_w,
				cd_material_estoque_w,
				nr_movimento_estoque_w,
				nr_documento_w,
				qt_movimento_w,
				qt_estoque_w,
				vl_movimento_w,
				vl_movto_w);
		end if;

		end;
	end loop;
	close c01;

end if;

insert into w_razao_estoque(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	ie_tipo_informacao,
	cd_estabelecimento,
	dt_mesano_referencia,
	cd_local_estoque,
	cd_material,
	qt_estoque,
	vl_movimento,
	vl_estoque)
values (	nextval('w_razao_estoque_seq'),
	clock_timestamp(),
	nm_usuario_p,
	0,
	cd_estabelecimento_p,
	dt_mesano_referencia_w,
	cd_local_estoque_ww,
	cd_material_p,
	qt_saldo_ant_w,
	0,
	vl_estoque_ant_w);

if (coalesce(dt_fim_movto_w::text, '') = '') then
	select	coalesce(sum(qt_estoque),0),
		coalesce(sum(vl_estoque),0)
	into STRICT	qt_estoque_w,
		vl_movto_w
	from	saldo_estoque a
	where	cd_material		= cd_material_p
	and	a.cd_local_estoque 	= coalesce(cd_local_estoque_ww, a.cd_local_estoque)
	and	cd_estabelecimento	= cd_estabelecimento_p
	and	dt_mesano_referencia	= dt_mesano_referencia_w;
end if;

insert into w_razao_estoque(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	ie_tipo_informacao,
	cd_estabelecimento,
	dt_mesano_referencia,
	cd_local_estoque,
	cd_material,
	qt_estoque,
	vl_estoque)
values (	nextval('w_razao_estoque_seq'),
	clock_timestamp(),
	nm_usuario_p,
	9,
	cd_estabelecimento_p,
	dt_mesano_referencia_w,
	cd_local_estoque_ww,
	cd_material_p,
	qt_estoque_w,
	vl_movto_w);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_razao_estoque ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, dt_mesano_referencia_fim_p timestamp, cd_local_estoque_p bigint, dt_inicio_movto_p timestamp, dt_fim_movto_p timestamp, cd_material_p bigint, nm_usuario_p text, ie_restringir_usuario_p text, ie_ordem_p text) FROM PUBLIC;

