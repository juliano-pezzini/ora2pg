-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_proposta_plano ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_p bigint, ie_tipo_proposta_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


ie_proposta_w		varchar(2);
qt_seq_tabela_w		bigint;
ds_erro_w		varchar(4000);
ie_utilizar_tabelas_w	varchar(1);
ds_proposta_plano_w	varchar(1);
ie_permite_tabela_dif_w varchar(1);
nr_seq_tabela_w		bigint;
dt_fim_vigencia_w	timestamp;
dt_inicio_proposta_w	timestamp;
qt_registros_w		bigint;
qt_produtos_w		bigint;
ie_produto_w		varchar(1);



BEGIN
ie_utilizar_tabelas_w	:= coalesce(obter_valor_param_usuario(1232, 36, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');
ie_produto_w		:= coalesce(obter_valor_param_usuario(1232, 68, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p), 'N');

if (nr_seq_tabela_p	= '0') then
	nr_seq_tabela_w	:= null;
else
	nr_seq_tabela_w	:= nr_seq_tabela_p;
end if;

begin
select	ie_proposta_adesao,
	dt_fim_vigencia
into STRICT	ie_proposta_w,
	dt_fim_vigencia_w
from	pls_tabela_preco
where	nr_sequencia	= nr_seq_tabela_w;
exception
when others then
	ie_proposta_w 		:= 'N';
	dt_fim_vigencia_w	:= null;
end;

begin
select	coalesce(ie_permite_tabela_dif,'N'),
	dt_inicio_proposta
into STRICT	ie_permite_tabela_dif_w,
	dt_inicio_proposta_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;
exception
when others then
	ie_permite_tabela_dif_w	:= 'N';
	dt_inicio_proposta_w	:= clock_timestamp();
end;

select	pls_obter_se_plano_proposta(nr_seq_plano_p)
into STRICT	ds_proposta_plano_w
from	pls_plano
where	nr_sequencia = nr_seq_plano_p;

if (dt_fim_vigencia_w IS NOT NULL AND dt_fim_vigencia_w::text <> '') then
	if (dt_fim_vigencia_w <= dt_inicio_proposta_w) then
		ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280138, 'NR_SEQ_TABELA_P=' || nr_seq_tabela_w);
	end if;
end if;

/*Proposta - Adesão a um contrato novo*/

if (ie_tipo_proposta_p = 1) then
	if 	((ie_proposta_w	= 'N') or (coalesce(ie_proposta_w::text, '') = '')) and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
		ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280140, 'NR_SEQ_TABELA_P=' || nr_seq_tabela_w);
	elsif ( ds_proposta_plano_w = 'N') then
		ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280142, 'NR_SEQ_PLANO_P=' || nr_seq_plano_p);
	end if;
/*Propostas - Adesão a um contrato existente;Migração a um contrato novo;Migração a um contrato existente;Adesão a um contrato novo a partir de um contrato existente;Migração + Adesão a um contrato novo*/

elsif (ie_tipo_proposta_p in (2,3,4,6,7,8)) then
	if (ie_utilizar_tabelas_w	= 'N') then
		if (ds_proposta_plano_w = 'N') then
			ds_erro_w	:= ds_erro_w ||wheb_mensagem_pck.get_texto(280142, 'NR_SEQ_PLANO_P=' || nr_seq_plano_p);
		elsif	((ie_proposta_w  = 'N') or (coalesce(ie_proposta_w::text, '') = '')) and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280140, 'NR_SEQ_TABELA_P=' || nr_seq_tabela_w);
		end if;
	end if;
	/*Propostas - Adesão a um contrato existente;Migração a um contrato existente;Migração + Adesão a um contrato novo*/

	if (ie_tipo_proposta_p in (2,4,8)) then
		if (ie_utilizar_tabelas_w	= 'S') and (ie_permite_tabela_dif_w = 'N') then
			select	count(*)
			into STRICT	qt_seq_tabela_w
			from	pls_contrato_plano
			where	nr_seq_contrato	= nr_seq_contrato_p
			and	nr_seq_tabela	= nr_seq_tabela_w;

			if (ds_proposta_plano_w = 'N') then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280142, 'NR_SEQ_PLANO_P=' || nr_seq_plano_p);
			elsif (coalesce(qt_seq_tabela_w,0) = 0)  and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280144, 'NR_SEQ_TABELA_P=' || nr_seq_tabela_w || ';NR_SEQ_CONTRATO_P=' || nr_seq_contrato_p);
			end if;
		end if;

		if (ie_produto_w = 'N') then
			select	count(*)
			into STRICT	qt_produtos_w
			from	pls_contrato_plano
			where	nr_seq_contrato	= nr_seq_contrato_p
			and	nr_seq_plano	= nr_seq_plano_p;

			if (qt_produtos_w = 0) then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280150, 'NR_SEQ_PLANO_P=' ||substr(pls_obter_dados_produto(nr_seq_plano_p,'N'),1,255) || ';NR_SEQ_CONTRATO_P=' || nr_seq_contrato_p);
			end if;
		end if;
	end if;
/*aaschlote - OS 366922 Consistências para produtos adaptados*/

elsif (ie_tipo_proposta_p	= 9) then
	select	count(*)
	into STRICT	qt_registros_w
	from	pls_plano
	where	nr_sequencia		= nr_seq_plano_p
	and	ie_regulamentacao	= 'A';

	if (qt_registros_w = 0) then
		ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280156);
	end if;

	if (ds_proposta_plano_w = 'N') then
		ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280142, 'NR_SEQ_PLANO_P=' || nr_seq_plano_p);
	end if;

	if (ie_utilizar_tabelas_w = 'N') then
		if 	((ie_proposta_w	= 'N') or (coalesce(ie_proposta_w::text, '') = '')) and (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280138, 'NR_SEQ_TABELA_P=' || nr_seq_tabela_w);
		end if;
	end if;
end if;

ds_erro_p	:= substr(ds_erro_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_proposta_plano ( nr_seq_proposta_p bigint, nr_seq_plano_p bigint, nr_seq_tabela_p bigint, ie_tipo_proposta_p bigint, nr_seq_contrato_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

