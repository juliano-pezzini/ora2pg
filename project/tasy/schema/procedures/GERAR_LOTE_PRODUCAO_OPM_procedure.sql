-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_producao_opm ( nr_sequencia_p bigint, cd_local_estoque_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_lote_producao_p INOUT bigint) AS $body$
DECLARE


cd_material_w			integer;
cd_material_comp_w		integer;
qt_opm_w                double precision;
cd_unidade_medida_consumo_w	varchar(30);
cd_setor_atendimento_w		integer;
nr_lote_producao_w		bigint;

nr_sequencia_w			bigint;
cd_unidade_medida_w		varchar(30);
cd_unidade_medida_estoque_w	varchar(30);
qt_prevista_cons_w		double precision;
qt_prevista_etq_w		double precision;
cd_local_estoque_w		lote_producao.cd_local_estoque%type;

/* Serviços  */

nr_seq_proc_interno_w			bigint;
qt_item_w				double precision;
vl_item_w					double precision;
nr_sequencia_serv_w			bigint;
qt_fixa_w					double precision;
nr_ficha_tecnica_w				bigint;

c01 CURSOR FOR
SELECT	c.cd_material,
	c.qt_material,
	dividir(1,m.qt_conv_estoque_consumo) qt_estoque,
	substr(obter_dados_material_estab(m.cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo,
	substr(obter_dados_material_estab(m.cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
	row_number() OVER () AS nr_sequencia
from	ordem_producao_comp_opm c,
	ordem_producao_opm a,
	material m
where	a.nr_sequencia = c.nr_seq_ordem_opm
and	c.cd_material = m.cd_material
and	c.ie_status in ('G','C')
and	a.nr_sequencia = nr_sequencia_p;

c02 CURSOR FOR
SELECT	coalesce(c.qt_fixa,0),
            	c.nr_seq_proc_interno,
            	c.nr_seq_componente,
            	b.nr_ficha_tecnica
from	ordem_producao_opm a,
         	ficha_tecnica b,
         	ficha_tecnica_componente c
where 	a.nr_sequencia = nr_sequencia_p
and      	substr(obter_dados_opm(a.nr_seq_opm, 'CM'),1,15) = b.cd_material
and      	coalesce(b.ie_situacao, 'A') = 'A'
and      	b.cd_estabelecimento = cd_estabelecimento_p
and     	b.nr_ficha_tecnica   = c.nr_ficha_tecnica
and 	coalesce(c.ie_situacao, 'A')    = 'A'
and 	c.ie_tipo_componente   = 2
and	(c.nr_seq_proc_interno IS NOT NULL AND c.nr_seq_proc_interno::text <> '');



BEGIN
begin
select	cd_material,
            coalesce(qt_opm, 1)
into STRICT	cd_material_w,
         qt_opm_w
from	ordem_producao_opm a,
	prescr_opm b
where	a.nr_seq_opm = b.nr_sequencia
and	a.nr_sequencia = nr_sequencia_p;
exception
when others then
	cd_material_w	:=	0;
end;

if (cd_material_w IS NOT NULL AND cd_material_w::text <> '') then
	begin

	select	obter_regra_local_estoque_opm(cd_estabelecimento_p, cd_material_w, 'P')
	into STRICT	cd_local_estoque_w
	;

	if (coalesce(cd_local_estoque_w,0) = 0) then
		cd_local_estoque_w := cd_local_estoque_p;
	end if;

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMS'),1,30) cd_unidade_medida_consumo
	into STRICT	cd_unidade_medida_consumo_w
	from	material
	where	cd_material = cd_material_w;

	select	nextval('lote_producao_seq')
	into STRICT	nr_lote_producao_w
	;

	insert into lote_producao(
		nr_lote_producao,
		cd_material,
		ie_status_lote,
		cd_unidade_medida,
		qt_prevista,
		cd_estabelecimento,
		cd_local_estoque,
		dt_atualizacao,
		nm_usuario,
		ie_etapa,
		cd_farmaceutico,
		ie_tipo_lote,
		dt_inicio,
		dt_geracao,
		nm_usuario_geracao,
		cd_responsavel,
		nr_seq_op_opm,
		dt_mesano_referencia)
	values (	nr_lote_producao_w,
		cd_material_w,
		'P',
		cd_unidade_medida_consumo_w,
		qt_opm_w,
		cd_estabelecimento_p,
		cd_local_estoque_w,
		clock_timestamp(),
		nm_usuario_p,
		'G',
		null,
		'A',
		clock_timestamp(),
		clock_timestamp(),
		nm_usuario_p,
		obter_dados_usuario_opcao(nm_usuario_p,'C'),
		nr_sequencia_p,
		clock_timestamp());
	end;

	open c01;
	loop
	fetch c01 into
		cd_material_comp_w,
		qt_prevista_cons_w,
		qt_prevista_etq_w,
		cd_unidade_medida_w,
		cd_unidade_medida_estoque_w,
		nr_sequencia_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		insert into lote_producao_comp(
			nr_lote_producao,
			nr_sequencia,
			cd_material,
			cd_unidade_medida,
			cd_unid_med_etq,
			cd_local_estoque,
			dt_atualizacao,
			nm_usuario,
			qt_prevista_etq,
			qt_prevista,
			qt_real,
			qt_estoque,
			qt_perda,
			qt_perda_etq)
		values (	nr_lote_producao_w,
			nr_sequencia_w,
			cd_material_comp_w,
			cd_unidade_medida_w,
			cd_unidade_medida_estoque_w,
			cd_local_estoque_p,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(qt_prevista_etq_w,0),
			coalesce(qt_prevista_cons_w,0),
			0,
			0,
			0,
			0);
		end;
	end loop;
	close c01;

   open c02;
	loop
		fetch c02 into
			qt_fixa_w,
			nr_seq_proc_interno_w,
			nr_sequencia_w,
			nr_ficha_tecnica_w;
	      	EXIT WHEN NOT FOUND; /* apply on c02 */
			begin

			/* Obter  a quantidade do procedimento */

			qt_item_w := cus_obter_qt_servico_prod(nr_ficha_tecnica_w, cd_estabelecimento_p, nr_sequencia_w, clock_timestamp(), qt_fixa_w) * qt_opm_w;

			/* Obter o valor padrão do procedimento */

			vl_item_w := (qt_item_w * qt_opm_w * cus_obter_preco_padrao_proc(cd_estabelecimento_p, clock_timestamp(), nr_seq_proc_interno_w));

			select	nextval('lote_producao_serv_seq')
			into STRICT	nr_sequencia_serv_w
			;

			insert into lote_producao_serv(nr_lote_producao,
				 nr_sequencia,
				 nr_seq_proc_interno,
				 dt_atualizacao,
				 nm_usuario,
				 qt_item,
				 vl_item)
			values (nr_lote_producao_w,
				 nr_sequencia_serv_w,
				 nr_seq_proc_interno_w,
				 clock_timestamp(),
				 nm_usuario_p,
				 coalesce(qt_item_w,0),
				 vl_item_w);
			end;
	end loop;
	close c02;

	nr_lote_producao_p	:= nr_lote_producao_w;

	commit;

   CALL gravar_status_op_opm(nr_sequencia_p,'AGLP',null,nm_usuario_p,cd_estabelecimento_p);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_producao_opm ( nr_sequencia_p bigint, cd_local_estoque_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_lote_producao_p INOUT bigint) FROM PUBLIC;

