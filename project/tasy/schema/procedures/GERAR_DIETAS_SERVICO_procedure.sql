-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_dietas_servico ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_parametro_w		varchar(1);
nr_seq_servico_w	bigint;
cd_dieta_w		bigint;
nr_seq_serv_anterior_w	bigint;
nr_seq_serv_anterior_ww bigint;
nr_sequencia_w		bigint;
ie_possui_dieta_w	varchar(1);
dt_servico_w		timestamp;
cd_setor_atendimento_w	integer;
nr_atendimento_w	bigint;
ie_sequencia_w		varchar(1);
nr_seq_dieta_w		bigint;
cd_material_w		integer;
ie_via_aplicacao_w	varchar(5);
cd_unidade_medida_dosa_w	varchar(30);
qt_dose_w		double precision;
qt_volume_oral_w	integer;
cd_intervalo_w		varchar(7);
hr_prim_horario_w	varchar(5);
ds_horarios_w		varchar(2000);
ie_tipo_nutricao_w	varchar(15);
nr_seq_produto_w	bigint;
nm_usuario_lib_w	varchar(15);
ie_serv_todos_setores_w	varchar(1);
ds_observacao_w		varchar(4000);
ds_observacao_dieta_w	varchar(4000);
qt_porcentagem_w		nut_atend_serv_dia_dieta.qt_porcentagem%type;
nr_seq_serv_dia_dieta_w	nut_atend_serv_dia_dieta.nr_sequencia%type;
nr_seq_produto_adic_w	bigint;


C01 CURSOR FOR
	SELECT 	cd_dieta
	from 	nut_atend_serv_dia_dieta
	where	nr_seq_servico = nr_seq_serv_anterior_w;
	
C02 CURSOR FOR
	SELECT 	a.nr_sequencia,
		a.cd_dieta,
		a.cd_material,
		a.ie_via_aplicacao,
		a.cd_unidade_medida_dosa,
		a.qt_dose,
		a.qt_volume_oral,
		a.cd_intervalo,
		a.hr_prim_horario,
		a.ds_horarios,
		a.ie_tipo_nutricao,
		a.nr_seq_produto,
		a.nm_usuario_lib,
		a.ds_observacao
	from 	nut_atend_serv_dia_dieta a
	where	coalesce(dt_suspensao::text, '') = ''
	--and	a.ie_tipo_nutricao =  'O'
	and exists (	SELECT	1
			from	nut_atend_serv_dieta b
			where	b.nr_seq_dieta = a.nr_sequencia
			and	b.nr_seq_servico = nr_seq_serv_anterior_ww);
			
C03 CURSOR FOR
	SELECT 	CD_MATERIAL,
			HR_PRIM_HORARIO, 
			IE_TIPO_NUTRICAO, 	    
			QT_DOSE, 
			QT_VOLUME_ORAL,
			QT_PORCENTAGEM,
			CD_UNIDADE_MEDIDA_DOSA,
			nr_seq_produto
	from   	NUT_ATEND_SERV_DIA_DIETA
	where  	NR_SEQUENCIA_DILUICAO = nr_seq_serv_dia_dieta_w;


BEGIN

if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') then
	
	--ie_serv_todos_setores_w	:= nvl(obter_valor_param_usuario(1003,82,obter_perfil_ativo,nm_usuario_p,0),'N');
	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_sequencia_w
	from	nut_atend_serv_dia
	where	nr_sequencia = nr_sequencia_p;

	if (ie_sequencia_w = 'S') then
		select	nr_seq_servico,
			dt_servico,
			cd_setor_atendimento,
			nr_atendimento,
			ds_observacao
		into STRICT	nr_seq_servico_w,
			dt_servico_w,
			cd_setor_atendimento_w,
			nr_atendimento_w,
			ds_observacao_w
		from	nut_atend_serv_dia
		where	nr_sequencia = nr_sequencia_p;

		select 	max(nr_sequencia)
		into STRICT	nr_seq_serv_anterior_w
		from	nut_atend_serv_dia
		where	nr_seq_servico 	     = nr_seq_servico_w
		and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_w - 1)
		--and	cd_setor_atendimento = cd_setor_atendimento_w
		and	nr_atendimento	     = nr_atendimento_w;

		if (nr_seq_serv_anterior_w IS NOT NULL AND nr_seq_serv_anterior_w::text <> '') then

			select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
			into STRICT	ie_possui_dieta_w
			from	nut_atend_serv_dia_dieta
			where	nr_seq_servico = nr_seq_serv_anterior_w;

			if (ie_possui_dieta_w = 'S') then
				
				open C01;
				loop
				fetch C01 into	
					cd_dieta_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin
					
					insert into nut_atend_serv_dia_dieta(
								nr_sequencia,
								nr_seq_servico,      
								dt_atualizacao,         
								nm_usuario,             
								dt_atualizacao_nrec,
								nm_usuario_nrec,        
								cd_dieta)    
							  values (
								nextval('nut_atend_serv_dia_dieta_seq'),
								nr_sequencia_p,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_dieta_w);
					end;
				end loop;
				close C01;
			end if;			
		end if;
		
		select 	max(a.nr_sequencia)
		into STRICT	nr_seq_serv_anterior_ww
		from	nut_atend_serv_dia a
		where	a.nr_seq_servico	= nr_seq_servico_w
		and	a.dt_servico		= dt_servico_w - 1
		--and	a.cd_setor_atendimento 	= cd_setor_atendimento_w
		and	a.nr_atendimento	= nr_atendimento_w
		and	coalesce(a.ds_observacao,'x') = coalesce(ds_observacao_w,'x')
		and	Nut_Obter_Se_Conduta_Suspensa(a.nr_sequencia) = 'N'
		and exists (	SELECT	1
				from	nut_atend_serv_dia_dieta g,
					nut_atend_serv_dieta h
				where	h.nr_seq_dieta 		= g.nr_sequencia
				and	h.nr_seq_servico	= a.nr_sequencia)
		and not exists (select	1
				from	nut_atend_serv_dia f,
					nut_atend_serv_dieta b,
					nut_atend_serv_dia_dieta c
				where	f.nr_sequencia		= b.nr_seq_servico
				and	b.nr_seq_dieta		= c.nr_sequencia
				and	f.nr_seq_servico	= nr_seq_servico_w
				and	f.dt_servico		= dt_servico_w
				--and	f.cd_setor_atendimento 	= cd_setor_atendimento_w
				and	f.nr_atendimento	= nr_atendimento_w
				and	coalesce(f.ds_observacao,'x') = coalesce(ds_observacao_w,'x')
				and	coalesce(c.dt_suspensao::text, '') = ''
				and 	exists (select	1
						from	nut_atend_serv_dieta d,
							nut_atend_serv_dia_dieta e
						where	d.nr_seq_dieta 		= e.nr_sequencia
						and	d.nr_seq_servico 	= a.nr_sequencia
						and	e.cd_material 		= c.cd_material
						and	coalesce(e.dt_suspensao::text, '') = ''));
		
		if (nr_seq_serv_anterior_ww IS NOT NULL AND nr_seq_serv_anterior_ww::text <> '') then
		
			open C02;
			loop
			fetch C02 into	
				nr_seq_serv_dia_dieta_w,
				cd_dieta_w,
				cd_material_w,
				ie_via_aplicacao_w,
				cd_unidade_medida_dosa_w,
				qt_dose_w,
				qt_volume_oral_w,
				cd_intervalo_w,
				hr_prim_horario_w,
				ds_horarios_w,
				ie_tipo_nutricao_w,
				nr_seq_produto_w,
				nm_usuario_lib_w,
				ds_observacao_dieta_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin
				
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_dieta_w
				from	nut_atend_serv_dia_dieta a
				where (coalesce(a.cd_dieta,0)	= cd_dieta_w
				or (coalesce(a.cd_dieta::text, '') = ''
				and	coalesce(a.cd_material,0)		= coalesce(cd_material_w,0)
				and	coalesce(a.ie_via_aplicacao,' ')	= coalesce(ie_via_aplicacao_w,' ')
				and	coalesce(a.cd_unidade_medida_dosa,' ') = coalesce(cd_unidade_medida_dosa_w,' ')
				and	coalesce(a.qt_dose,0)		= coalesce(qt_dose_w,0)
				and	coalesce(a.cd_intervalo,' ')		= coalesce(cd_intervalo_w,' ')
				and	coalesce(a.hr_prim_horario,' ')	= coalesce(hr_prim_horario_w,' ')
				and	coalesce(a.ds_horarios,' ')		= coalesce(ds_horarios_w,' ')
				and	coalesce(a.ie_tipo_nutricao,' ')	= coalesce(ie_tipo_nutricao_w,' ')
				and	coalesce(a.ds_observacao,' ')	= coalesce(ds_observacao_dieta_w,' ')
				and	coalesce(a.nr_seq_produto,0)		= coalesce(nr_seq_produto_w,0)))
				and	coalesce(a.dt_suspensao::text, '') = ''
				and 	exists (SELECT	1
						from	nut_atend_serv_dia b
						where	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_servico) = ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_servico_w)
						--and	cd_setor_atendimento 	= cd_setor_atendimento_w
						and	nr_atendimento	     	= nr_atendimento_w
						--and	nvl(b.ds_observacao,'x') = nvl(ds_observacao_w,'x')
						and	exists (select	1
								from	nut_atend_serv_dieta c
								where	c.nr_seq_servico = b.nr_sequencia
								and	c.nr_seq_dieta = a.nr_sequencia));
				
				if (coalesce(nr_seq_dieta_w::text, '') = '') then
					select	nextval('nut_atend_serv_dia_dieta_seq')
					into STRICT	nr_seq_dieta_w
					;				
				
					insert into nut_atend_serv_dia_dieta(
								nr_sequencia,
								dt_atualizacao,         
								nm_usuario,             
								dt_atualizacao_nrec,
								nm_usuario_nrec,        
								cd_dieta,
								cd_material,
								ie_via_aplicacao,
								cd_unidade_medida_dosa,
								qt_dose,
								qt_volume_oral,
								cd_intervalo,
								hr_prim_horario,
								ds_horarios,
								ie_tipo_nutricao,
								nr_seq_produto,
								nm_usuario_lib,
								dt_liberacao,
								ds_observacao)    
							  values (
								nr_seq_dieta_w,
								clock_timestamp(),
								nm_usuario_p,
								clock_timestamp(),
								nm_usuario_p,
								cd_dieta_w,
								cd_material_w,
								ie_via_aplicacao_w,
								cd_unidade_medida_dosa_w,
								qt_dose_w,
								qt_volume_oral_w,
								cd_intervalo_w,
								hr_prim_horario_w,
								ds_horarios_w,
								ie_tipo_nutricao_w,
								nr_seq_produto_w,
								nm_usuario_lib_w,
								CASE WHEN coalesce(nm_usuario_lib_w::text, '') = '' THEN null  ELSE clock_timestamp() END ,
								ds_observacao_dieta_w);			

					open C03;
					loop
					fetch C03 into	
						cd_material_w,
						hr_prim_horario_w, 
						ie_tipo_nutricao_w, 	    
						qt_dose_w, 
						qt_volume_oral_w,
						qt_porcentagem_w,
						cd_unidade_medida_dosa_w,
						nr_seq_produto_adic_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin						
						insert into	nut_atend_serv_dia_dieta(
															nm_usuario,
															dt_atualizacao,
															cd_material,
															hr_prim_horario, 
															ie_tipo_nutricao, 	    
															qt_dose, 
															qt_volume_oral,
															qt_porcentagem,
															cd_unidade_medida_dosa,
															nr_sequencia_diluicao,
															nr_sequencia,
															nr_seq_produto)
														values (
															nm_usuario_p,
															clock_timestamp(),
															cd_material_w, 
															hr_prim_horario_w, 
															ie_tipo_nutricao_w, 	    
															qt_dose_w, 
															qt_volume_oral_w,
															qt_porcentagem_w,
															cd_unidade_medida_dosa_w,
															nr_seq_dieta_w,
															nextval('nut_atend_serv_dia_dieta_seq'),
															nr_seq_produto_adic_w);	
						end;
					end loop;
					close C03;		
					
				end if;		
							
							
				insert into nut_atend_serv_dieta(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_servico,
						nr_seq_dieta
					) values (
						nextval('nut_atend_serv_dieta_seq'),
						clock_timestamp(),
						nm_usuario_p,
						clock_timestamp(),
						nm_usuario_p,
						nr_sequencia_p,
						nr_seq_dieta_w);

				
				update	nut_atend_serv_dia
				set	ie_data_atualizada = 'S'
				where	nr_sequencia = nr_sequencia_p;
						
				end;
			end loop;
			close C02;
		
		end if;
	end if;
end if;
	
if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_dietas_servico ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

