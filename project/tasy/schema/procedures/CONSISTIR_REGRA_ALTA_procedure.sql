-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_regra_alta (cd_motivo_alta_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_atendimento_p bigint default null, cd_processo_p bigint DEFAULT NULL) AS $body$
DECLARE


ds_retorno_w			varchar(1)	:= 'N';
nr_cpf_w			varchar(11);
ie_exige_cpf_w			varchar(1)	:= 'N';
qt_regra_w			bigint;
nr_dias_considera_venc_w	bigint;
cd_perfil_w			integer;
qt_existe_titulo_vencido_w	integer;
qt_filhos_w			bigint;
ie_hist_parto_w			varchar(1);
ie_sala_parto_w 		varchar(1);
ie_bercario_w			varchar(1);
ie_count_parto_w 		bigint;
ie_count_nasc_w  		bigint;
ie_tiss_tipo_saida_w		varchar(1);
ie_funcao_medico_w		varchar(1);
nr_seq_saida_int_w		bigint;
nr_seq_saida_spsadt_w		bigint;
nr_seq_saida_consulta_w		bigint;
nr_seq_proc_w			bigint;
ds_procedimento_w		varchar(255);
ds_proc_sem_med_exec_w		varchar(2000) := null;
nr_conta_interno_w		bigint;
ds_nr_conta_interno_w		varchar(1000) := null;
qt_nao_existe_w			bigint;
ie_bloqueia_pendencia_w		varchar(1);
qt_pendencia_w			bigint;
cd_convenio_w			bigint;
ie_alta_medica_w		varchar(1);
dt_alta_medica_w		timestamp;
cd_proc_principal_w		bigint;
ie_origem_proced_atend_w	bigint;
qt_proced_conv_w		numeric(30);
ie_consiste_ciha_w		varchar(1);
ie_tipo_convenio_w		smallint;
qt_conv_w			bigint;
qt_proced_w			bigint;
ie_material_pendente_w		varchar(1);
qt_mat_pendente_w		bigint;
qt_idade_pessoa_w		integer;
ie_bloqueia_acomp_w		varchar(2);
ie_bloquear_atend_comp_w	varchar(2);

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		substr(b.ds_procedimento,1,200)
	from	procedimento_paciente a,
		procedimento b
	where	a.nr_atendimento = nr_atendimento_p
	and	a.cd_procedimento = b.cd_procedimento
	and	a.ie_origem_proced = b.ie_origem_proced
	and	coalesce(cd_motivo_exc_conta::text, '') = ''
	and	coalesce(a.ie_funcao_medico::text, '') = ''
	and	b.ie_classificacao = 1;

C02 CURSOR FOR
	SELECT	distinct nr_interno_conta
	from	conta_paciente
	where	nr_atendimento = nr_atendimento_p
	and	coalesce(nr_seq_saida_int::text, '') = ''
	and	coalesce(nr_seq_saida_spsadt::text, '') = ''
	and	coalesce(nr_seq_saida_consulta::text, '') = '';


BEGIN

cd_perfil_w	:=	obter_perfil_ativo;

qt_idade_pessoa_w := Obter_Idade_PF(cd_pessoa_fisica_p,clock_timestamp(),'A');

select	count(*)
into STRICT	qt_regra_w
from	regra_consiste_alta
where	ie_situacao	= 'A';

if (qt_regra_w	> 0) then
	select	max(nr_cpf)
	into STRICT	nr_cpf_w
	from	pessoa_fisica
	where	cd_pessoa_fisica	= cd_pessoa_fisica_p;

	if (coalesce(nr_cpf_w::text, '') = '') then
		select	max(nr_cpf)
		into STRICT	nr_cpf_w
		from	compl_pessoa_fisica
		where	cd_pessoa_fisica	= cd_pessoa_fisica_p
		and	ie_tipo_complemento	= 3;
	end if;

	cd_convenio_w := coalesce(obter_convenio_atendimento(nr_atendimento_p),0);

	select	coalesce(max(ie_exige_cpf), 'N'),
		coalesce(max(nr_dias_considera_venc),-99999),
		coalesce(max(ie_historia_parto),'N'),
		coalesce(max(ie_sala_parto),'N'),
		coalesce(max(ie_bercario),'N'),
		coalesce(max(Obter_Valor_Conv_Estab(cd_convenio_w, wheb_usuario_pck.get_cd_estabelecimento, 'IE_TISS_TIPO_SAIDA')),'N'),
		coalesce(max(Obter_Valor_Conv_Estab(cd_convenio_w, wheb_usuario_pck.get_cd_estabelecimento, 'IE_FUNCAO_MEDICO')),'N'),
		coalesce(max(ie_bloqueia_pendencia),'N'),
		coalesce(max(ie_alta_medica),'N'),
		coalesce(max(ie_exige_conversao_ciha),'N'),
		coalesce(max(ie_material_pendente),'N'),
		coalesce(max(ie_bloqueia_acomp),'N')
	into STRICT	ie_exige_cpf_w,
		nr_dias_considera_venc_w,
		ie_hist_parto_w,
		ie_sala_parto_w,
		ie_bercario_w,
		ie_tiss_tipo_saida_w,
		ie_funcao_medico_w,
		ie_bloqueia_pendencia_w,
		ie_alta_medica_w,
		ie_consiste_ciha_w,
		ie_material_pendente_w,
		ie_bloqueia_acomp_w
	from	regra_consiste_alta
	where	((coalesce(cd_motivo_alta, cd_motivo_alta_p)	= cd_motivo_alta_p) or (coalesce(cd_motivo_alta_p::text, '') = ''))
	and	((coalesce(cd_processo, cd_processo_p)	= cd_processo_p) or (coalesce(cd_processo_p::text, '') = ''))
	and (coalesce(cd_perfil, cd_perfil_w)	= cd_perfil_w)
	and	ie_situacao	= 'A';

	if (nr_dias_considera_venc_w <> -99999) then
		begin
		select	count(*)
		into STRICT	qt_existe_titulo_vencido_w
		from  	titulo_receber
		where 	ie_situacao = 1
		and	dt_vencimento < (clock_timestamp() - nr_dias_considera_venc_w)
		and	cd_pessoa_fisica = cd_pessoa_fisica_p;
		end;
	end if;

	if (ie_exige_cpf_w	= 'S') and (coalesce(nr_cpf_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181674);
	elsif (ie_exige_cpf_w	= 'M') and (qt_idade_pessoa_w >= 18) and (coalesce(nr_cpf_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181674);
	elsif (qt_existe_titulo_vencido_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181675);
	end if;

	/*tvvieira - consistÃªncias para registros do parto no PEP*/

	select count(*)
	into STRICT qt_filhos_w
	from atendimento_paciente
	where nr_atendimento_mae = nr_atendimento_p;

	if (qt_filhos_w > 0) then

		if (ie_hist_parto_w = 'S') then
			select count(*)
			into STRICT ie_count_parto_w
			from parto
			where nr_atendimento = nr_atendimento_p;

			if (ie_count_parto_w = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(181676);
			end if;
		end if;

		if (ie_sala_parto_w = 'S') or (ie_bercario_w = 'S') then
			select count(*)
			into STRICT ie_count_nasc_w
			from nascimento
			where nr_atendimento = nr_atendimento_p
			and (nr_atend_rn IS NOT NULL AND nr_atend_rn::text <> '');

			if (ie_count_nasc_w = 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(181679);
			end if;
		end if;

	end if;

	/* whwestphal - OS 322580 */

	if (ie_tiss_tipo_saida_w = 'S') then

		open C02;
		loop
		fetch C02 into
			nr_conta_interno_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
				if (nr_conta_interno_w IS NOT NULL AND nr_conta_interno_w::text <> '') then
					ds_nr_conta_interno_w := ds_nr_conta_interno_w || '    ' || nr_conta_interno_w || chr(13);
				end if;
			end;
		end loop;
		close C02;

		if (ds_nr_conta_interno_w IS NOT NULL AND ds_nr_conta_interno_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181680,'DS_NR_CONTA_INTERNO_W='||ds_nr_conta_interno_w);

		end if;

	end if;


	if (ie_funcao_medico_w = 'S') then

		open C01;
		loop
		fetch C01 into
			nr_seq_proc_w,
			ds_procedimento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			     if (nr_seq_proc_w IS NOT NULL AND nr_seq_proc_w::text <> '') and (ds_procedimento_w IS NOT NULL AND ds_procedimento_w::text <> '') then
				ds_proc_sem_med_exec_w := substr(ds_proc_sem_med_exec_w || '  ' || ds_procedimento_w || chr(13),1,2000);
			     end if;
			end;
		end loop;
		close C01;

		if (ds_proc_sem_med_exec_w IS NOT NULL AND ds_proc_sem_med_exec_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181684,'DS_PROC_SEM_MED_EXEC_W='||ds_proc_sem_med_exec_w);
		end if;
	end if;

	if (ie_bloqueia_pendencia_w = 'S') then

		select	count(*)
		into STRICT	qt_pendencia_w
		from	atendimento_anot_enf
		where	nr_atendimento = nr_atendimento_p
		and	ie_pendente = 'S';

		if (qt_pendencia_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181699);
		end if;

	end if;

	if (ie_alta_medica_w = 'S') then

		select	coalesce(dt_alta_medico, clock_timestamp() - interval '1 days')
		into STRICT	dt_alta_medica_w
		from	atendimento_paciente
		where	nr_atendimento = coalesce(nr_atendimento_p,0);

		if (clock_timestamp() < dt_alta_medica_w) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181700);
		end if;
	end if;


	select	coalesce(max(ie_tipo_convenio),0)
	into STRICT	ie_tipo_convenio_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_p;

	If (ie_tipo_convenio_w <> 3) and (ie_consiste_ciha_w = 'S') then

		cd_proc_principal_w 	 := obter_proc_principal(nr_atendimento_p, cd_convenio_w,
								 obter_tipo_Atendimento(nr_atendimento_p), null, 'CP');
		ie_origem_proced_atend_w := obter_proc_principal(nr_atendimento_p, cd_convenio_w,
								 obter_tipo_Atendimento(nr_atendimento_p), null, 'IP');

		qt_proced_conv_w := 0;
		qt_conv_w := 0;
		qt_proced_w := 0;
		begin
			select	cd_procedimento
			into STRICT	qt_conv_w
			from	procedimento_conv_sus
			where	cd_procedimento = cd_proc_principal_w
			and	ie_origem_proced = ie_origem_proced_atend_w  LIMIT 1;
		exception
			when 	others then
				qt_conv_w := 0;
		end;

		begin
			select	cd_procedimento
			into STRICT	qt_proced_w
			from	procedimento_paciente_cih
			where	nr_atendimento = nr_atendimento_p  LIMIT 1;
		exception
			when 	others then
				qt_proced_w := 0;
		end;

		qt_proced_conv_w := qt_proced_w + qt_conv_w;

		If (qt_proced_conv_w = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181701);
		end if;
	end if;

	if (ie_material_pendente_w = 'S') then
	begin
		select	coalesce(max(qt_mat_pendente_w),0)
		into STRICT	qt_mat_pendente_w
		from	(SELECT count(*) qt_mat_pendente_w
			FROM material b, material_em_devolucao_v a
LEFT OUTER JOIN tipo_baixa_prescricao c ON (a.cd_motivo_baixa = c.cd_tipo_baixa AND a.ie_prescr_dev = c.ie_prescricao_devolucao)
WHERE A.CD_MATERIAL          = B.CD_MATERIAL AND A.NR_ATENDIMENTO       = nr_atendimento_p   AND ((QT_MATERIAL < 0) OR (A.CD_LOCAL_ESTOQUE IS NOT NULL AND A.CD_LOCAL_ESTOQUE::text <> '') or (c.ie_atualiza_estoque = 'N' AND c.ie_conta_paciente = 'S')) AND A.NR_PRESCRICAO > 0
		HAVING SUM(A.QT_MATERIAL) > 0 ) alias9;

		if (qt_mat_pendente_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(181702);
		end if;
	end;
	end if;


	if (ie_bloqueia_acomp_w = 'S') then
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_bloquear_atend_comp_w
		from	atendimento_acompanhante
		where	coalesce(dt_saida::text, '') = ''
		and	nr_atendimento = nr_atendimento_p;

		if (ie_bloquear_atend_comp_w= 'S') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(185698);
		end if;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_regra_alta (cd_motivo_alta_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, nr_atendimento_p bigint default null, cd_processo_p bigint DEFAULT NULL) FROM PUBLIC;

