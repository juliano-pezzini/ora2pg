-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tre_envia_comunic_agenda (nm_usuario_p text) AS $body$
DECLARE

			    
 
nr_seq_tipo_w			bigint;
quebra_w				varchar(10) := chr(13)||chr(10);	
ds_perfil_w				varchar(4000);	
ds_setor_w				varchar(255);
cd_setor_Atendimento_w	bigint;
cd_perfil_w				bigint;	
ds_comunicado_w			text;
ds_agenda_w				varchar(255);	
dt_inicio_w				timestamp;
dt_termino_w			timestamp;
nm_palestrante_w		varchar(80);
ds_modulo_w				varchar(80);
QT_CARGA_HORARIA_w		double precision;
nm_candidato_w			varchar(255);
candidatos_w			varchar(4000);
qt_dias_aviso_w			smallint;
nr_seq_agenda_w			bigint;
nr_seq_modulo_w			bigint;	
nm_palestrante_adic_w	varchar(2000);
		
c01 CURSOR FOR 
	SELECT	cd_perfil, 
			cd_setor_atendimento 
	from	tre_regra_envio_comunic 
	where	nr_seq_tipo	= nr_seq_tipo_w;
	
C02 CURSOR FOR 
	SELECT	substr(Obter_descricao_modulo(nr_seq_modulo),1,255), 
			substr(obter_nome_pf(cd_palestrante),1,80), 
			qt_carga_horaria, 
			nr_sequencia 
	from	TRE_AGENDA_MODULO a 
	where	a.nr_seq_agenda	 =nr_seq_agenda_w;
	
C03 CURSOR FOR 
	SELECT (SELECT nm_usuario FROM usuario b WHERE b.cd_pessoa_fisica = a.cd_pessoa_fisica) 
	FROM		TRE_CANDIDATO a 
	WHERE		a.nr_seq_agenda = nr_seq_agenda_w;

C04 CURSOR FOR 
	SELECT 	nr_sequencia 
	FROM  	tre_agenda 
	WHERE 	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '') 
	AND	coalesce(dt_cancelamento::text, '') = '' 
	AND	((TRUNC(DT_TERMINO) > TRUNC(clock_timestamp())) OR coalesce(TRUNC(dt_termino)::text, '') = '') 
	AND	((TRUNC(DT_TERMINO_REAL) > TRUNC(clock_timestamp())) OR coalesce(TRUNC(dt_termino_real)::text, '') = '') 
	AND (TRUNC(DT_INICIO) >= TRUNC(clock_timestamp())) 
	AND	((TRUNC(DT_INICIO_REAL) >= TRUNC(clock_timestamp())) OR coalesce(TRUNC(dt_inicio_real)::text, '') = '');
	
C05 CURSOR FOR 
	SELECT	substr(obter_nome_pf(cd_pessoa_fisica),1,80) 
	from	tre_eve_mod_palestrante 
	where	nr_seq_modulo = nr_seq_modulo_w;
	

BEGIN 
 
open	C04;
loop 
fetch C04 into 
	nr_seq_agenda_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin 
 
		begin 
		select 	a.nr_seq_tipo, 
			ds_agenda, 
			coalesce(dt_inicio_real,dt_inicio), 
			coalesce(dt_termino_real,dt_termino) 
		into STRICT	nr_seq_tipo_w, 
			ds_agenda_w, 
			dt_inicio_w, 
			dt_termino_w 
		from	tre_curso a, 
			tre_agenda b 
		where	a.nr_sequencia	= b.nr_seq_curso 
		and	b.nr_sequencia	= nr_seq_agenda_w;
		exception 
			when others then 
				null;
			end;
 
			 
			 
 
		select	ie_dias_aviso 
		into STRICT	qt_dias_aviso_w 
		FROM  tre_regra_envio_comunic a, 
			tre_agenda b, 
			tre_curso c 
		WHERE 	b.nr_seq_curso = c.nr_sequencia 
		AND	a.nr_seq_tipo = c.nr_seq_tipo 
		AND	b.nr_sequencia = nr_seq_agenda_w;
			  
 
		open C01;
		loop 
		fetch C01 into	 
			cd_perfil_w, 
			cd_setor_Atendimento_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin 
			if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
				ds_perfil_w	:= ds_perfil_w ||','||cd_perfil_w;
			end if;
			if (cd_setor_Atendimento_w IS NOT NULL AND cd_setor_Atendimento_w::text <> '') then 
				ds_setor_w	:= ds_setor_w ||','||cd_setor_Atendimento_w;
			end if;
			end;
		end loop;
 
		 
		close C01;
		 
		open	C03;
		loop 
		fetch C03 into 
			nm_candidato_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin 
				if (qt_dias_aviso_w > 0) then 
					candidatos_w := candidatos_w || ', ' || nm_candidato_w;
				end if;
			end;
		end loop;
		close C03;
		 
		RAISE NOTICE 'ds_setor_w=%', ds_setor_w;
		RAISE NOTICE 'ds_perfil_w=%', ds_perfil_w;
		if (ds_setor_w IS NOT NULL AND ds_setor_w::text <> '') or (ds_perfil_w IS NOT NULL AND ds_perfil_w::text <> '') then 
			ds_comunicado_w		:= quebra_w||ds_agenda_w ||quebra_w||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w ||obter_desc_expressao(286964)	||': '/*' Data início: '*/||to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w ||obter_desc_expressao(287236)	||': '/*' Data término: '*/||to_char(dt_termino_w,'dd/mm/yyyy hh24:mi:ss')||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w||quebra_w||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w ||obter_desc_expressao(314230)	||': '/*' Módulos: '*/||quebra_w;
			 
			open C02;
			loop 
			fetch C02 into	 
				ds_modulo_w, 
				nm_palestrante_w, 
				QT_CARGA_HORARIA_w, 
				nr_seq_modulo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
			 
				open C05;
				loop 
				fetch C05 into	 
					nm_palestrante_adic_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin 
					nm_palestrante_w := nm_palestrante_w+', '+ nm_palestrante_adic_w;
					end;
				end loop;
				close C05;							
				 
				ds_comunicado_w	:=	ds_comunicado_w||' - '||ds_modulo_w||obter_desc_expressao(284620)	||': '/*' Carga horária: '*/||QT_CARGA_HORARIA_w 
							|| ' Palestrantes: '||nm_palestrante_w ||quebra_w;
				end;
			end loop;
			close C02;
			INSERT INTO comunic_interna(  
					dt_comunicado, 
					ds_titulo, 
					ds_comunicado, 
					nm_usuario, 
					dt_atualizacao, 
					ie_geral, 
					nm_usuario_destino, 
					nr_sequencia, 
					ie_gerencial, 
					nr_seq_classif, 
					ds_perfil_adicional, 
					cd_setor_destino, 
					cd_estab_destino, 
					ds_setor_adicional, 
					dt_liberacao) 
			VALUES (clock_timestamp(), 
				ds_agenda_w, 
				ds_comunicado_w, 
				nm_usuario_p, 
				clock_timestamp(), 
				'N', 
				null, 
				nextval('comunic_interna_seq'), 
				'N', 
				7, 
				substr(ds_perfil_w,2,2000)||',', 
				null, 
				null, 
				substr(ds_setor_w,2,2000)||',', 
				clock_timestamp());
		end if;
 
 
		if ((qt_dias_aviso_w IS NOT NULL AND qt_dias_aviso_w::text <> '') and ((trunc(clock_timestamp()) - dt_inicio_w) <= qt_dias_aviso_w)) then 
 
 
			ds_comunicado_w		:= quebra_w||ds_agenda_w ||quebra_w||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w ||obter_desc_expressao(286964)	||': '/*' Data início: '*/||to_char(dt_inicio_w,'dd/mm/yyyy hh24:mi:ss')||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w ||obter_desc_expressao(287236)	||': '/*' Data término: '*/||to_char(dt_termino_w,'dd/mm/yyyy hh24:mi:ss')||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w||quebra_w||quebra_w;
			ds_comunicado_w		:= ds_comunicado_w ||obter_desc_expressao(314230)	||': '/*' Módulos: '*/||quebra_w;
			 
			open C02;
			loop 
			fetch C02 into	 
				ds_modulo_w, 
				nm_palestrante_w, 
				QT_CARGA_HORARIA_w, 
				nr_seq_modulo_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				open C05;
				loop 
				fetch C05 into	 
					nm_palestrante_adic_w;
				EXIT WHEN NOT FOUND; /* apply on C05 */
					begin 
					nm_palestrante_w := nm_palestrante_w+', '+ nm_palestrante_adic_w;
					end;
				end loop;
				close C05;							
				 
				ds_comunicado_w	:=	ds_comunicado_w||' - '||ds_modulo_w||obter_desc_expressao(284620)	||': '/*' Carga horária: '*/||QT_CARGA_HORARIA_w 
							|| ' Palestrante: '||nm_palestrante_w ||quebra_w;
				end;
			end loop;
			close C02;
			 
 
			INSERT INTO comunic_interna(  
						dt_comunicado, 
						ds_titulo, 
						ds_comunicado, 
						nm_usuario, 
						dt_atualizacao, 
						ie_geral, 
						nm_usuario_destino, 
						nr_sequencia, 
						ie_gerencial, 
						nr_seq_classif, 
						ds_perfil_adicional, 
						cd_setor_destino, 
						cd_estab_destino, 
						ds_setor_adicional, 
						dt_liberacao) 
				VALUES (clock_timestamp(), 
					ds_agenda_w, 
					ds_comunicado_w, 
					nm_usuario_p, 
					clock_timestamp(), 
					'N', 
					candidatos_w, 
					nextval('comunic_interna_seq'), 
					'N', 
					7, 
					null, 
					null, 
					null, 
					null, 
					clock_timestamp());	
			 
		end if;
	end;
	end loop;
	close C04;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tre_envia_comunic_agenda (nm_usuario_p text) FROM PUBLIC;

