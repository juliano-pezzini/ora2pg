-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_repasse_especial (nr_repasse_terceiro_p bigint, nm_usuario_p text, ie_acao_p bigint, nr_seq_regra_p bigint default null) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:   Gerar repasses especiais com base nas regras cadastradas no Shift+F11 "Regra especial de repasse para terceiros"
----------------------------------------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [X] Tasy (Delphi/Java) [  ] Portal [  ] Relatorios [ ] Outros:
 ----------------------------------------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
 - Rotina executada atraves dos objetos GERAR_REPASSE_TERCEIRO e GERAR_REPASSE_ESPECIAL_MES
 - No (Delphi/Java) a rotina e utilizada dentro do FatAct_FF
-------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Opcoes:	ie_acao_p
0	Sem acao
1	Gerar vencimentos
2	Gerar vencimentos e mudar status
3	Gerar vencimentos, mudar status e gerar tributos
*/qt_plantoes_w			bigint;
cd_estabelecimento_w		bigint;
nr_seq_terceiro_w			bigint;
nr_sequencia_item_w		bigint;
nr_sequencia_w			bigint;
qt_medico_w			bigint;
ie_regra_w			varchar(2);
ie_limpa_item_w			varchar(2);
dt_inicio_vigencia_w		timestamp;
dt_fim_vigencia_w			timestamp;
nr_seq_trans_fin_w		bigint;
vl_repassar_w			double precision;
cd_pessoa_fisica_w		varchar(255);
vl_repasse_w			double precision;
qt_dias_w			bigint;
dt_periodo_inicial_w 		timestamp;
dt_periodo_final_w			timestamp;
ds_titulo_w			varchar(255);
qt_minuto_w			bigint;
nr_seq_tipo_plantao_w		bigint;
nr_seq_trans_fin_prov_w		bigint;
ie_terceiro_w			varchar(255);
cd_pessoa_fisica_terc_w		varchar(255);
cd_pessoa_fisica_terc_c02_w	varchar(255); -- afstringari 199375 05/03/2010
IE_MENSAL_w			varchar(255);
cd_medico_w			varchar(255);
cd_medico_terc_w			varchar(255);
ie_medico_w			varchar(255);
cont_w				bigint	:= 0;
cd_centro_custo_w		integer;
cd_centro_custo_prov_w		integer;
nr_seq_terceiro_regra_w		bigint;
nr_seq_regra_esp_w		bigint;
cd_conta_contabil_w		varchar(255);
ie_escala_confirmada_w		varchar(255);
cd_conta_contabil_prov_w		varchar(255);
cd_conta_financ_w			bigint;
ie_data_item_w			varchar(100);
dt_referencia_w			timestamp;
dt_lanc_item_w			timestamp;
nr_seq_escala_w			bigint;
ie_gerar_tributos_w		varchar(1);
qt_tributo_w			bigint;
ie_item_repasse_w		varchar(10);
nr_seq_plantao_w		double precision;
dt_contabil_w			timestamp;
ie_data_contabil_w		varchar(10);
ie_plantao_regra_w		varchar(1);
nr_seq_escala_diaria_w		bigint;
dt_plantao_w			timestamp;
ie_plantao_regra_esp_w		varchar(1);
nr_seq_tipo_w			bigint;
ds_tipo_repasse_w		varchar(255);
dt_inicial_plantao_w		timestamp;
dt_final_plantao_w		timestamp;
qt_atend_w			bigint;
qt_min_atendimento_w		real;
qt_max_atendimento_w		real;
qt_media_w			double precision;
vl_performance_w		double precision;
cd_medico_plantao_w		varchar(255);
qt_minutos_plantao_w		double precision;
qt_minuto_escala_w		bigint;
vl_repasse_escala_w		double precision;
qt_total_atend_w		bigint;
qt_total_minuto_w		bigint;
ie_vincular_plantao_w		varchar(1);
nr_seq_item_w			bigint;
nr_seq_med_plantao_w		double precision;
dt_plantao_item_w		timestamp;
ie_tipo_convenio_w		smallint;
nr_seq_categoria_w		bigint;
qt_tipo_conv_atend_w		bigint;
qt_tot_tipo_conv_atend_w	bigint;
dt_inicio_escala_w		timestamp;
dt_fim_escala_w			timestamp;

--Variaveis para retorno das informacoes do cursor de centro de custo adicional
cd_centro_custo_cc_w		regra_esp_repasse.cd_centro_custo%type;
cd_centro_custo_prov_cc_w	regra_esp_repasse.cd_centro_custo_prov%type;

cont_regra_cc_w			integer;
nr_seq_rep_item_w		bigint;
vl_repasse_apos_rateio_w	double precision;
vl_repasse_antes_rateio_w	double precision;
ie_plantao_previsto_w		regra_esp_repasse.ie_plantao_previsto%type;
qt_plantao_c03_w		bigint;
qt_plantao_c04_w		bigint;
ie_somente_plantao_w	regra_esp_repasse.ie_somente_plantao%type;
ie_participa_piso_w		regra_esp_repasse.ie_participa_piso%type;
qt_total_atend_fora_w		bigint;
qt_total_min_fora_w		bigint;
cd_medico_repasse_w		varchar(10);
nr_seq_tipo_regra_esp_w		regra_esp_repasse.nr_seq_tipo%type;
ie_consiste_medico_w		varchar(1);
ds_consist_med_w		varchar(255);
dt_ini_c07_w		timestamp;
dt_fim_c07_w		timestamp;
qt_hora_w			double precision	:= 0;
ie_status_w			repasse_terceiro.ie_status%type;
dt_inicio_vigencia_c02_w	timestamp;
dt_fim_vigencia_c02_w		timestamp;
ie_liberar_desfecho_w       varchar(1);

ie_plantao_prev_w       varchar(1);
dt_inicio_vigencia_maior_w	timestamp;
dt_fim_vigencia_menor_w		timestamp;


ie_fechado_inicial_w		varchar(255);
ie_fechado_final_w 			varchar(255);
cd_empresa_w				bigint;
ie_permitir_rep_online_w 	varchar(1);
ie_modo_lote_w 				varchar(1);

--Obtem as regras de repasse especial que possuem terceiro informado na regra.	
c01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_regra,
		ie_limpa_item,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		nr_seq_trans_fin,
		vl_repassar,
		coalesce(cd_pessoa_fisica, 'X'),
		nr_seq_terceiro,
		ds_titulo,
		nr_seq_trans_fin_prov,
		coalesce(ie_terceiro,'N'),
		coalesce(IE_MENSAL, 'N'),
		coalesce(ie_medico, 'N'),
		nr_seq_tipo_plantao,
		cd_centro_custo,
		cd_centro_custo_prov,
		cd_conta_contabil,
		cd_conta_contabil_prov,
		cd_conta_financ,
		ie_data_item,
		nr_seq_escala,
		ie_data_contabil,
		coalesce(ie_item_repasse,'N'),
		coalesce(qt_min_atendimento,0),
		coalesce(qt_max_atendimento,0),
		coalesce(IE_VINCULAR_PLANTAO,'N'),
		ie_tipo_convenio,
		nr_seq_categoria,
		coalesce(ie_plantao_previsto,'N'),
		coalesce(ie_somente_plantao,'N'),
		coalesce(ie_participa_piso,'S'),
		nr_seq_tipo
	from	regra_esp_repasse
	where	substr(obter_se_terceiro_regra_esp(nr_sequencia,nr_seq_terceiro_w),1,1)	= 'S'
	and	cd_estabelecimento			= cd_estabelecimento_w
	and	(nr_seq_terceiro IS NOT NULL AND nr_seq_terceiro::text <> '')
	and	ie_situacao				= 'A'
	and	nr_sequencia				= nr_seq_regra_p
	
union	all

	PERFORM	nr_sequencia,
		ie_regra,
		ie_limpa_item,
		dt_inicio_vigencia,
		dt_fim_vigencia,
		nr_seq_trans_fin,
		vl_repassar,
		coalesce(cd_pessoa_fisica, 'X'),
		nr_seq_terceiro,
		ds_titulo,
		nr_seq_trans_fin_prov,
		coalesce(ie_terceiro,'N'),
		coalesce(IE_MENSAL, 'N'),
		coalesce(ie_medico, 'N'),
		nr_seq_tipo_plantao,
		cd_centro_custo,
		cd_centro_custo_prov,
		cd_conta_contabil,
		cd_conta_contabil_prov,
		cd_conta_financ,
		ie_data_item,
		nr_seq_escala,
		ie_data_contabil,
		coalesce(ie_item_repasse,'N'),
		coalesce(qt_min_atendimento,0),
		coalesce(qt_max_atendimento,0),
		coalesce(IE_VINCULAR_PLANTAO,'N'),
		ie_tipo_convenio,
		nr_seq_categoria,
		coalesce(ie_plantao_previsto,'N'),
		coalesce(ie_somente_plantao,'N'),
		coalesce(ie_participa_piso,'S'),
		nr_seq_tipo
	from	regra_esp_repasse
	where	substr(obter_se_terceiro_regra_esp(nr_sequencia,nr_seq_terceiro_w),1,1)	= 'S'
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	(nr_seq_terceiro IS NOT NULL AND nr_seq_terceiro::text <> '')
	and	ie_situacao		= 'A'
	and	coalesce(nr_seq_regra_p::text, '') = '';

--Obtem as pessoas fisicas vinculadas a um terceiro.
c02 CURSOR FOR
	SELECT	distinct
		cd_pessoa_fisica,
		dt_inicio_vigencia,
		dt_fim_vigencia
	from (	SELECT 	cd_pessoa_fisica,
			dt_inicio_vigencia,
			dt_fim_vigencia
		from 	terceiro_pessoa_fisica
		where	nr_seq_terceiro		= nr_seq_terceiro_w
		and (dt_referencia_w	 	between 	coalesce(dt_inicio_vigencia,dt_referencia_w) and coalesce(dt_fim_vigencia,clock_timestamp() + interval '1 days')
			or dt_inicio_vigencia between dt_periodo_inicial_w and dt_periodo_final_w)
		
union	all

		select 	cd_pessoa_fisica,
			dt_inicio_vigencia,
			dt_fim_vigencia
		from 	terceiro
		where	nr_sequencia		= nr_seq_terceiro_w
		and	(cd_pessoa_fisica IS NOT NULL AND cd_pessoa_fisica::text <> '')) alias5;


c03 CURSOR FOR
	SELECT	coalesce(sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ),0),
		cd_medico,
		count(*)
	from	medico_plantao
	where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
	and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
	and (cd_medico = cd_pessoa_fisica_terc_w or coalesce(cd_pessoa_fisica_terc_w,'X') = 'X')
	and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
	and	cd_estabelecimento		= cd_estabelecimento_w
	and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 			between dt_periodo_inicial_w and dt_periodo_final_w
	and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 			between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
	group by cd_medico;

c04 CURSOR FOR
	SELECT	sum(x.qt_minuto),
		x.cd_medico,
		x.nr_sequencia,
		x.dt_inicial,
		sum(x.qt_plantao)
	from (
		SELECT	coalesce(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ,0) qt_minuto,
			cd_medico,
			nr_sequencia,
			CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END  dt_inicial,
			1 qt_plantao
		from	medico_plantao
		where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
		and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
		and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
		and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
		and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
		and	cd_estabelecimento			= cd_estabelecimento_w
		and	obter_se_vigencia_plantao_terc(	nr_seq_terceiro_w,cd_medico,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) = 'S'
		and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
		and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
		and	ie_item_repasse_w			= 'S' --lhalves OS295399 em 11/03/2011 - Gerar um item para cada plantao.
		and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w)
		
union	all

		select	coalesce(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ,0) qt_minuto,
			cd_medico,
			null nr_sequencia,
			null dt_inicial,
			1 qt_plantao
		from	medico_plantao
		where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
		and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
		and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
		and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
		and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
		and	cd_estabelecimento			= cd_estabelecimento_w
		and	obter_se_vigencia_plantao_terc(	nr_seq_terceiro_w,cd_medico,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) = 'S'
		and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
		and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
		and	ie_item_repasse_w			= 'N'
		and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w)		
		
union	all

		select	0 qt_minuto,
			null cd_medico,
			null nr_sequencia,
			null dt_inicial,
			0 qt_plantao
		
		where (ie_regra_w = 'P' or ie_regra_w = 'F')) x
	group by x.nr_sequencia,
		x.cd_medico,
		x.dt_inicial;

--Obtem as regras de repasse especial que nao possuem terceiro informado na regra.
c05 CURSOR FOR
	SELECT	nr_sequencia,
		ie_regra,
		ie_limpa_item,
		dt_inicio_vigencia,
		coalesce(dt_fim_vigencia,to_date('31/12/2999','dd/mm/yyyy')),
		nr_seq_trans_fin,
		vl_repassar,
		coalesce(cd_pessoa_fisica, 'X'),
		ds_titulo,
		nr_seq_trans_fin_prov,
		coalesce(ie_terceiro,'N'),
		coalesce(IE_MENSAL, 'N'),
		coalesce(ie_medico, 'N'),
		nr_seq_tipo_plantao,
		cd_centro_custo,
		cd_centro_custo_prov,
		cd_conta_contabil,
		cd_conta_contabil_prov,
		cd_conta_financ,
		ie_data_item,
		nr_seq_escala,
		coalesce(ie_item_repasse,'N'),
		ie_data_contabil,
		coalesce(ie_plantao_regra,'S'),
		coalesce(qt_min_atendimento,0),
		coalesce(qt_max_atendimento,0),
		coalesce(IE_VINCULAR_PLANTAO,'N'),
		ie_tipo_convenio,
		nr_seq_categoria,
		coalesce(ie_plantao_previsto,'N'),
		coalesce(ie_somente_plantao,'N'),
		coalesce(ie_participa_piso,'S'),
		nr_seq_tipo
	from	regra_esp_repasse
	where	substr(obter_se_terceiro_regra_esp(nr_sequencia,nr_seq_terceiro_w),1,1)	= 'S'
	and	cd_estabelecimento			= cd_estabelecimento_w
	and	coalesce(nr_seq_terceiro::text, '') = ''
	and	ie_situacao				= 'A'
	and	nr_sequencia				= nr_seq_regra_p
	
union	all

	PERFORM	nr_sequencia,
		ie_regra,
		ie_limpa_item,
		dt_inicio_vigencia,
		coalesce(dt_fim_vigencia,to_date('31/12/2999','dd/mm/yyyy')),
		nr_seq_trans_fin,
		vl_repassar,
		coalesce(cd_pessoa_fisica, 'X'),
		ds_titulo,
		nr_seq_trans_fin_prov,
		coalesce(ie_terceiro,'N'),
		coalesce(IE_MENSAL, 'N'),
		coalesce(ie_medico, 'N'),
		nr_seq_tipo_plantao,
		cd_centro_custo,
		cd_centro_custo_prov,
		cd_conta_contabil,
		cd_conta_contabil_prov,
		cd_conta_financ,
		ie_data_item,
		nr_seq_escala,
		coalesce(ie_item_repasse,'N'),
		ie_data_contabil,
		coalesce(ie_plantao_regra,'S'),
		coalesce(qt_min_atendimento,0),
		coalesce(qt_max_atendimento,0),
		coalesce(IE_VINCULAR_PLANTAO,'N'),
		ie_tipo_convenio,
		nr_seq_categoria,
		coalesce(ie_plantao_previsto,'N'),
		coalesce(ie_somente_plantao,'N'),
		coalesce(ie_participa_piso,'S'),
		nr_seq_tipo
	from	regra_esp_repasse
	where	substr(obter_se_terceiro_regra_esp(nr_sequencia,nr_seq_terceiro_w),1,1)	= 'S'
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	coalesce(nr_seq_terceiro::text, '') = ''
	and	ie_situacao		= 'A'
	and	coalesce(nr_seq_regra_p::text, '') = '';

--Obtem as escalas de plantao e sobreaviso.
c06 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.dt_inicio,
		a.dt_fim
	from	escala_classif d,
		escala_grupo c,
		escala b,
		escala_diaria a
	where	a.nr_seq_escala		= b.nr_sequencia
	and	b.nr_seq_grupo		= c.nr_sequencia
	and	c.nr_seq_classif	= d.nr_sequencia
	and	d.cd_estabelecimento	= cd_estabelecimento_w
	and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,a.dt_inicio)=0 THEN PKG_DATE_UTILS.get_WeekDay(a.dt_inicio)  ELSE 0 END , nr_sequencia_w, a.dt_inicio, a.dt_fim),1,255) = 'S'
	and	a.dt_inicio		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, a.dt_inicio + 1)
	and	a.dt_inicio		between coalesce(dt_inicio_vigencia_c02_w,a.dt_inicio) and coalesce(dt_fim_vigencia_c02_w,a.dt_inicio+1)
	and	coalesce(a.cd_pessoa_fisica, cd_pessoa_fisica_terc_w)	= cd_pessoa_fisica_terc_w
	and	a.dt_inicio		between dt_periodo_inicial_w and dt_periodo_final_w
	and	b.nr_sequencia		= coalesce(nr_seq_escala_w, b.nr_sequencia)
	and	(
		(coalesce(a.qt_min_executado,0)	> 0)
		 or (ie_escala_confirmada_w = 'N')
		);
	
c07 CURSOR FOR
	SELECT	cd_medico,
		CASE WHEN obter_se_hora_tipo_plantao(nr_sequencia_w,nr_seq_tipo_plantao)='N' THEN 0  ELSE sum(CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END ) END  qt_minuto,
		a.dt_inicial,
		a.dt_final
	from	medico_plantao a
	where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
	and (cd_medico = cd_pessoa_fisica_terc_w or coalesce(cd_pessoa_fisica_terc_w,'X') = 'X')
	--and	substr(obter_dados_medico(cd_medico,'CAT'),1,10) = nvl(nr_seq_categoria_w,substr(obter_dados_medico(cd_medico,'CAT'),1,10))
	and (coalesce(nr_seq_categoria_w,0) = 0
		or
		exists (	SELECT	1
				from	medico x
				where	x.cd_pessoa_fisica	= a.cd_medico
				and	x.nr_seq_categoria	= nr_seq_categoria_w))
	and	cd_estabelecimento	= cd_estabelecimento_w
	and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
	and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
	and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
	group by	cd_medico,
				nr_seq_tipo_plantao,
				a.dt_inicial,
				a.dt_final;

--Obtem os centro de custos adicionais da regra especial de repasse.
c_custo_adic CURSOR(	nr_sequencia_pc		regra_esp_repasse_cc.nr_seq_regra_esp%type,
			cont_regra_cc_pc	integer) FOR
	SELECT	a.cd_centro_custo,
		a.cd_centro_custo_prov
	from	regra_esp_repasse_cc a
	where	cont_regra_cc_pc > 0
	and	a.nr_seq_regra_esp = nr_sequencia_pc
	
union	all

	PERFORM	1,
		1
	
	where	cont_regra_cc_pc = 0;

--Obtem os itens de repasse que necessitam de rateio
c_item_repasse CURSOR(	nr_repasse_terceiro_pc	repasse_terceiro.nr_repasse_terceiro%type,
			nr_sequencia_pc		repasse_terceiro_item.nr_sequencia%type) FOR
	SELECT	nr_sequencia
	from	repasse_terceiro_item
	where	nr_repasse_terceiro	= nr_repasse_terceiro_pc
	and	nr_seq_regra_esp	= nr_sequencia_pc;
	
BEGIN

--Obtem os dados do repasse terceiro selecionado para gerar a regra especial
select	max(cd_estabelecimento),
	max(nr_seq_terceiro),
	max(dt_periodo_inicial),
	max(dt_periodo_final),
	max(dt_mesano_referencia),
	max(nr_seq_tipo),
	max(ie_status)
into STRICT	cd_estabelecimento_w,
	nr_seq_terceiro_w,
	dt_periodo_inicial_w,
	dt_periodo_final_w,
	dt_referencia_w,
	nr_seq_tipo_w,
	ie_status_w
from	repasse_terceiro
where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

select	OBTER_EMPRESA_ESTAB(cd_estabelecimento_w)
into STRICT	cd_empresa_w
;

select	ctb_obter_situacao_mes(cd_empresa_w, dt_periodo_inicial_w, cd_estabelecimento_w),
		ctb_obter_situacao_mes(cd_empresa_w, dt_periodo_final_w, cd_estabelecimento_w)	
into STRICT	ie_fechado_inicial_w,
		ie_fechado_final_w
;

select	max(ie_permitir_rep_online)
into STRICT	ie_permitir_rep_online_w
from	parametro_repasse
where  	cd_estabelecimento = cd_estabelecimento_w;


SELECT ctb_online_pck.get_modo_lote(14, cd_estabelecimento_w)
into STRICT ie_modo_lote_w
;


if( (ie_fechado_inicial_w = 'F' OR ie_fechado_final_w = 'F')
	and coalesce(ie_permitir_rep_online_w, 'N') = 'N'
	and coalesce(ie_modo_lote_w, 'N')  = 'S') then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1129943);
end if;


if (ie_status_w <> 'A') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265467, 'NR_REPASSE_TERCEIRO='||nr_repasse_terceiro_p);
end if;

select	coalesce(max(ie_liberar_desfecho),'N')
into STRICT	ie_liberar_desfecho_w
from	parametro_medico
where   cd_estabelecimento = cd_estabelecimento_w;

--Obtem se deve gerar repasse especial somente se escala confirmada e

--Se considera a passagem do plantao pela regra especial
select 	coalesce(max(ie_escala_confirmada),'N'),
	coalesce(max(ie_plantao_regra),'N')
into STRICT	ie_escala_confirmada_w,
	ie_plantao_regra_esp_w
from	parametro_repasse
where	cd_estabelecimento	= cd_estabelecimento_w;

--Obtem os tipos de repasse conforme o repasse selecionado para gerar a regra especial	
select	coalesce(max(a.ie_item_repasse),'S'),
	max(ds_tipo_repasse)
into STRICT	ie_item_repasse_w,
	ds_tipo_repasse_w
from	tipo_repasse a
where	a.nr_sequencia	= nr_seq_tipo_w;

--Verifica se o tipo de repasse permite gerar itens de repasse
if (coalesce(ie_item_repasse_w,'S') = 'N') then
	--O tipo de repasse #@DS_TIPO_REPASSE_W#@ nao permite gerar itens de repasse. Parametro selecionado no cadastro dos Tipos de Repasse.
	CALL wheb_mensagem_pck.exibir_mensagem_abort(205337, 'DS_TIPO_REPASSE_W='||ds_tipo_repasse_w);	
end if;

--dsantos em 26/09/2009, OS167991 -> quando nao houver terceiro informado na regra, a regra deve ser aplicada ao plantao com a mesma informada no campo regra

-- cursor  e c04 criados para esta solicitacao.


--Retorna as regras de repasse especial que nao possuem terceiro informado na regra.
open c05;
loop
fetch c05 into
	nr_sequencia_w,
	ie_regra_w,
	ie_limpa_item_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	nr_seq_trans_fin_w,
	vl_repassar_w,
	cd_pessoa_fisica_w,
	ds_titulo_w,
	nr_seq_trans_fin_prov_w,
	ie_terceiro_w,
	ie_mensal_w,
	ie_medico_w,
	nr_seq_tipo_plantao_w,
	cd_centro_custo_w,
	cd_centro_custo_prov_w,
	cd_conta_contabil_w,
	cd_conta_contabil_prov_w,
	cd_conta_financ_w,
	ie_data_item_w,
	nr_seq_escala_w,
	ie_item_repasse_w,
	ie_data_contabil_w,
	ie_plantao_regra_w,
	qt_min_atendimento_w,
	qt_max_atendimento_w,
	ie_vincular_plantao_w,
	ie_tipo_convenio_w,
	nr_seq_categoria_w,
	ie_plantao_previsto_w,
	ie_somente_plantao_w,
	ie_participa_piso_w,
	nr_seq_tipo_regra_esp_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	
	
	if (ie_limpa_item_w = 'S') then
		delete from	repasse_item_plantao a
		where	exists (	SELECT	1
				from	repasse_terceiro_item x
				where	x.nr_repasse_terceiro	= nr_repasse_terceiro_p
				and	x.nr_seq_regra_esp	= nr_sequencia_w
				and	x.nr_sequencia	= a.nr_seq_repasse_item);
				
		delete	from repasse_terceiro_item
		where	nr_repasse_terceiro	= nr_repasse_terceiro_p
		and	nr_seq_regra_esp	= nr_sequencia_w;
	end if;
	
	select	count(*)
	into STRICT	cont_regra_cc_w
	from	regra_esp_repasse_cc
	where	nr_seq_regra_esp	= nr_sequencia_w;
	
	--Abre cursor dos centro de custos adicionais
	for r_c_custo_adic in c_custo_adic(nr_sequencia_w, cont_regra_cc_w) loop
	
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
			cd_pessoa_fisica_w	:= 'X';
		end if;
		
		--Se nao existir na regra centros de custo adicionais, busca os centros de custo cadastrados na regra de repasse especial principal

		--Caso exista, busca dos centros de custo adicionais cadastrados na regra.
		if (cont_regra_cc_w = 0) then
			cd_centro_custo_cc_w		:= cd_centro_custo_w;
			cd_centro_custo_prov_cc_w	:= cd_centro_custo_prov_w;
		else
			cd_centro_custo_cc_w		:= r_c_custo_adic.cd_centro_custo;
			cd_centro_custo_prov_cc_w	:= r_c_custo_adic.cd_centro_custo_prov;
		end if;
		
		if (coalesce(ie_data_item_w, 'A')	= 'A') then
			dt_lanc_item_w	:= clock_timestamp();
		elsif (ie_data_item_w			= 'P') then
			dt_lanc_item_w	:= fim_mes(PKG_DATE_UTILS.ADD_MONTH(coalesce(dt_referencia_w, clock_timestamp()),-1,0));
		else
			dt_lanc_item_w	:= coalesce(dt_referencia_w, clock_timestamp());
		end if;	

		dt_contabil_w	:= null;
		if (ie_data_contabil_w = 'R') then
			dt_contabil_w	:= coalesce(dt_referencia_w, clock_timestamp());
		end if;

		vl_repasse_w				:= 0;

		select	max(coalesce(ie_plantao_previsto,'N'))
		into STRICT	ie_plantao_prev_w
		from	regra_esp_repasse
		where	nr_sequencia	= nr_sequencia_w;
		
		
		
		--Verifica se considera as pessoas fisicas vinculadas ao terceiro
		if (ie_terceiro_w = 'S') then
			
			/*lhalves OS298188 em 18/11/2011 Incluido c04 dentro do c02, para gerar o repasse dos medicos vinculados ao terceiro*/

			open c02;
			loop
			fetch c02 into
				cd_pessoa_fisica_terc_c02_w,
				dt_inicio_vigencia_c02_w,
				dt_fim_vigencia_c02_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				
				/* ahoffelder - OS 401787 - 24/01/2012 - coloquei esse select aqui por causa da opcao de gerar um item de repasse para cada plantao */

				if (ie_mensal_w = 'S') then
					select	count(*)
					into STRICT	cont_w
					from	repasse_terceiro_item
					where	nr_seq_regra_esp					= nr_sequencia_w
					and	coalesce(cd_medico,coalesce(cd_pessoa_fisica_terc_c02_w,'X'))	= coalesce(cd_pessoa_fisica_terc_c02_w,'X')
					and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
				elsif (ie_mensal_w = 'R') then
					select	count(*)
					into STRICT	cont_w
					from	repasse_terceiro_item
					where	nr_seq_regra_esp					= nr_sequencia_w
					and	coalesce(cd_medico,coalesce(cd_pessoa_fisica_terc_c02_w,'X'))	= coalesce(cd_pessoa_fisica_terc_c02_w,'X')
					and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
				end if;
				
				if (ie_regra_w	= 'H') then
					vl_repasse_escala_w	:= 0;
					qt_minuto_escala_w	:= 0;
					
					/* 18/10/2018 OS1774054 acandido - tratamento de data unica na consulta de quantidade de minutos de plantao */

					dt_inicio_vigencia_maior_w := dt_inicio_vigencia_w;
					if ((dt_periodo_inicial_w IS NOT NULL AND dt_periodo_inicial_w::text <> '') and dt_periodo_inicial_w > dt_inicio_vigencia_maior_w) then
						dt_inicio_vigencia_maior_w := dt_periodo_inicial_w;
					end if;
							
					dt_fim_vigencia_menor_w := dt_fim_vigencia_w;
					if ((dt_periodo_final_w IS NOT NULL AND dt_periodo_final_w::text <> '') and dt_periodo_final_w < dt_fim_vigencia_menor_w) then
						dt_fim_vigencia_menor_w := dt_periodo_final_w;
					end if;

					if ((dt_inicio_vigencia_c02_w IS NOT NULL AND dt_inicio_vigencia_c02_w::text <> '') and dt_inicio_vigencia_c02_w > dt_inicio_vigencia_maior_w) then
						dt_inicio_vigencia_maior_w := dt_inicio_vigencia_c02_w;
					end if;
					
					if ((dt_fim_vigencia_c02_w IS NOT NULL AND dt_fim_vigencia_c02_w::text <> '') and dt_fim_vigencia_c02_w < dt_fim_vigencia_menor_w) then
						dt_fim_vigencia_menor_w := dt_fim_vigencia_c02_w;
					end if;
					
					select
						sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN OBTER_MIN_REGRA_ESP_PLANTAO(nr_sequencia_w,null,a.dt_inicio,a.dt_fim, ie_plantao_prev_w)  ELSE a.qt_min_executado END )
					into STRICT	qt_minuto_escala_w
					from	escala_classif d,
						escala_grupo c,
						escala b,
						escala_diaria a
					where
					a.nr_seq_escala		= b.nr_sequencia
					and	b.nr_seq_grupo		= c.nr_sequencia
					and	c.nr_seq_classif	= d.nr_sequencia
					and	d.cd_estabelecimento	= cd_estabelecimento_w
					and	coalesce(a.qt_min_executado,0) > 0
					and	b.nr_sequencia		= coalesce(nr_seq_escala_w, b.nr_sequencia)
					and	coalesce(a.cd_pessoa_fisica, cd_pessoa_fisica_terc_c02_w)	= cd_pessoa_fisica_terc_c02_w
					and	a.dt_inicio		between coalesce(dt_inicio_vigencia_maior_w, a.dt_inicio) and fim_dia(coalesce(dt_fim_vigencia_menor_w, a.dt_inicio + 1))
					and	OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,a.dt_inicio)=0 THEN PKG_DATE_UTILS.get_WeekDay(a.dt_inicio)  ELSE 0 END , nr_sequencia_w, a.dt_inicio, a.dt_fim) = 'S';

					vl_repasse_escala_w			:= dividir_sem_round((qt_minuto_escala_w)::numeric,60) * vl_repassar_w;
					
					if (coalesce(vl_repasse_escala_w,0)	<> 0) then
						select	coalesce(max(nr_sequencia_item),0) + 1
						into STRICT	nr_sequencia_item_w
						from	repasse_terceiro_item
						where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

						/* Conferir se a pessoa e um medico, para evitar problemas de integridade da tabela */

						select	max(a.cd_pessoa_fisica)
						into STRICT	cd_medico_repasse_w
						from	medico a
						where	a.cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w;
						
						insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
										nr_sequencia_item,
										vl_repasse,
										dt_atualizacao,
										nm_usuario,
										nr_lote_contabil,
										ds_observacao,
										cd_conta_contabil,
										nr_seq_trans_fin,
										nr_seq_regra,
										cd_medico,
										nr_seq_regra_esp,
										nr_seq_terceiro,
										dt_liberacao,
										nr_sequencia,
										dt_lancamento,
										nr_seq_trans_fin_prov,
										cd_centro_custo_prov,
										cd_centro_custo,
										cd_conta_contabil_prov,
										qt_minuto,
										cd_conta_financ,
										dt_contabil,
										dt_plantao,
										nr_seq_med_plantao,
										nr_seq_tipo,
										ie_participa_piso)
									values (nr_repasse_terceiro_p,
										nr_sequencia_item_w,
										vl_repasse_escala_w,
										clock_timestamp(),
										nm_usuario_p,
										null,
										ds_titulo_w,
										cd_conta_contabil_w,
										nr_seq_trans_fin_w,
										null,
										cd_medico_repasse_w,
										nr_sequencia_w,
										nr_seq_terceiro_w,
										clock_timestamp(),
										nextval('repasse_terceiro_item_seq'),
										dt_lanc_item_w,
										nr_seq_trans_fin_prov_w,
										cd_centro_custo_prov_cc_w,
										cd_centro_custo_cc_w,
										cd_conta_contabil_prov_w,
										qt_minuto_escala_w,
										cd_conta_financ_w,
										dt_contabil_w,
										null,
										null,
										nr_seq_tipo_regra_esp_w,
										ie_participa_piso_w);
						
					end if;
				end if;
				
				if (ie_regra_w	= 'P') and (IE_ITEM_REPASSE_w = 'S') then
					
					select	max(coalesce(cd_pessoa_fisica,'X'))
					into STRICT	cd_pessoa_fisica_terc_w
					from	medico
					where	cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w;
		
					open	c06;
					loop
					fetch	c06 into
						nr_seq_escala_diaria_w,
						dt_inicio_escala_w,
						dt_fim_escala_w;
					EXIT WHEN NOT FOUND; /* apply on c06 */
						
						select	coalesce(max(nr_sequencia_item),0) + 1
						into STRICT	nr_sequencia_item_w
						from	repasse_terceiro_item
						where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
						
						insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
							nr_sequencia_item,
							vl_repasse,
							dt_atualizacao,
							nm_usuario,
							nr_lote_contabil,
							ds_observacao,
							cd_conta_contabil,
							nr_seq_trans_fin,
							nr_seq_regra,
							cd_medico,
							nr_seq_regra_esp,
							nr_seq_terceiro,
							dt_liberacao,
							nr_sequencia,
							dt_lancamento,
							nr_seq_trans_fin_prov,
							cd_centro_custo_prov,
							cd_centro_custo,
							cd_conta_contabil_prov,
							cd_conta_financ,
							dt_contabil,
							dt_plantao,
							nr_seq_tipo,
							ie_participa_piso)
						values	(nr_repasse_terceiro_p,
							nr_sequencia_item_w,
							vl_repassar_w,
							clock_timestamp(),
							nm_usuario_p,
							null,
							substr((ds_titulo_w || ' - ' || wheb_mensagem_pck.get_texto(302327) || ': ' || dt_inicio_escala_w ||' - '|| dt_fim_escala_w),1,255),
							cd_conta_contabil_w,
							nr_seq_trans_fin_w,
							null,
							cd_pessoa_fisica_terc_w,
							nr_sequencia_w,
							nr_seq_terceiro_w,
							clock_timestamp(),
							nextval('repasse_terceiro_item_seq'),
							dt_lanc_item_w,
							nr_seq_trans_fin_prov_w,
							cd_centro_custo_prov_cc_w,
							cd_centro_custo_cc_w,
							cd_conta_contabil_prov_w,
							cd_conta_financ_w,
							dt_contabil_w,
							dt_plantao_w,
							nr_seq_tipo_regra_esp_w,
							ie_participa_piso_w);
					end	loop;
					close	c06;
				end if;
				
				dt_plantao_item_w	:= null;
					
				open c04;
				loop
				fetch c04 into
					qt_minuto_w,
					cd_medico_w,
					nr_seq_plantao_w,
					dt_plantao_item_w,
					qt_plantao_c04_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
					
					dt_plantao_w	:= null;

					select	max(cd_pessoa_fisica)
					into STRICT	cd_medico_terc_w
					from	medico
					where	cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w;

					vl_repasse_w				:= 0;
					
					if (ie_regra_w	= 'P') and (IE_ITEM_REPASSE_w = 'N') then
						
						select	count(*)
						into STRICT	qt_dias_w
						from (SELECT	PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)
						from	escala_classif d,
							escala_grupo c,
							escala b,
							escala_diaria a
						where	a.nr_seq_escala		= b.nr_sequencia
						and	b.nr_seq_grupo		= c.nr_sequencia
						and	c.nr_seq_classif		= d.nr_sequencia
						and	d.cd_estabelecimento	= cd_estabelecimento_w
						and	a.dt_inicio		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, a.dt_inicio + 1)
						and (coalesce(a.cd_pessoa_fisica, cd_pessoa_fisica_terc_c02_w)	= cd_pessoa_fisica_terc_c02_w
							or (exists (select	1
									from	escala_diaria_adic x
									where	x.nr_seq_escala_diaria	= a.nr_sequencia
									and	x.cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w)))
						and	a.dt_inicio		between dt_periodo_inicial_w and dt_periodo_final_w
						and	b.nr_sequencia		= coalesce(nr_seq_escala_w, b.nr_sequencia)
						and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,dt_inicio)=0 THEN PKG_DATE_UTILS.get_WeekDay(dt_inicio)  ELSE 0 END , nr_sequencia_w, dt_inicio, dt_fim),1,255) = 'S'
						and (coalesce(a.qt_min_executado,0)	> 0
							 or (ie_escala_confirmada_w = 'N'))
						group 	by PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)) alias18;

                        select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
						into STRICT	dt_plantao_w
						from	medico_plantao
						where	nr_sequencia	= nr_seq_plantao_w;
						
						vl_repasse_w			:= vl_repassar_w * qt_dias_w;
		
					elsif (ie_regra_w	= 'F') and (ie_somente_plantao_w = 'S') and (coalesce(qt_plantao_c04_w,0) <> 0) then	
		
						if (dt_periodo_inicial_w between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, dt_periodo_inicial_w + 1)) then
							vl_repasse_w		:= vl_repassar_w;
						end if;
						
						dt_plantao_w	:= dt_plantao_item_w;

					elsif (ie_regra_w	= 'D') then	
		
						if (ie_item_repasse_w = 'S') then

							select	count(*)
							into STRICT	qt_dias_w
							from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
							from	medico_plantao a
							where	substr(obter_se_regra_esp_dia(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and	a.cd_estabelecimento	= cd_estabelecimento_w
							and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	nr_sequencia		= nr_seq_plantao_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
							group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias26;
							
							select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;
						else
							select	count(*)
							into STRICT	qt_dias_w
							from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
							from	medico_plantao a
							where	substr(obter_se_regra_esp_dia(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and	a.cd_estabelecimento	= cd_estabelecimento_w
							and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 			between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 			between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
							group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias24;

                            select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;

						end if;

						vl_repasse_w			:= vl_repassar_w * qt_dias_w;
						
					elsif (ie_regra_w	= 'Q') then
		
						if (coalesce(ie_medico_w,'N')	= 'N') then
		
							if (ie_item_repasse_w = 'S') then						

								select	coalesce(sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ),0)
								into STRICT	qt_minuto_w
								from	medico_plantao
								where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
								and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
								and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
								and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
								and	cd_estabelecimento	= cd_estabelecimento_w
								and	nr_sequencia		= nr_seq_plantao_w
								and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between coalesce(dt_inicio_vigencia_c02_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) and coalesce(dt_fim_vigencia_c02_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END +1)
								and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
								and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
								
								select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
								into STRICT	dt_plantao_w
								from	medico_plantao
								where	nr_sequencia	= nr_seq_plantao_w;
												
							end if;
							
							qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
							vl_repasse_w			:=  qt_hora_w * vl_repassar_w;
							
							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
								
								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_terc_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
							
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;						
							end if;
							
		
						elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
							qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
							vl_repasse_w			:= qt_hora_w * vl_repassar_w;
		
							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then

								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
								
								if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
									select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
									into STRICT	ie_consiste_medico_w
									;
									
									if (coalesce(ie_consiste_medico_w,'N') = 'N') then
										
										select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
										into STRICT	ds_consist_med_w
										;
										
										CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
									end if;
								end if;	
								
                                select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							    into STRICT	dt_plantao_w
							    from	medico_plantao
							    where	nr_sequencia	= nr_seq_plantao_w;

								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
								
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;
							end if;
		
						end if;
		
					elsif (ie_regra_w	= 'M') then
		
						if (coalesce(ie_medico_w,'N')	= 'N') then
		
							select	count(*)
							into STRICT	qt_plantoes_w
							from	medico_plantao
							where (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
		
							vl_repasse_w			:= qt_plantoes_w * vl_repassar_w;

                            select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;

							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
															
								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_terc_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
								
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;	
							end if;
							
		
						elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
							if (qt_plantao_c04_w <> 0) then
								qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
								vl_repasse_w			:= qt_hora_w * vl_repassar_w;
							end if;	
		
							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then

								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
								
								if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
									select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
									into STRICT	ie_consiste_medico_w
									;
									
									if (coalesce(ie_consiste_medico_w,'N') = 'N') then
										
										select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
										into STRICT	ds_consist_med_w
										;
										
										CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
									end if;
								end if;
								
                                select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							    into STRICT	dt_plantao_w
							    from	medico_plantao
							    where	nr_sequencia	= nr_seq_plantao_w;

								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
								
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;
							end if;
		
						end if;
		
					end if;
		
					if (ie_regra_w	<> 'Q') and (ie_regra_w	<> 'M') then
		
						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;

                            select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;

							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								qt_minuto,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								cd_medico_terc_w,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_Seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								qt_minuto_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;
						
					end if;
				end loop;
				close c04;
			end loop;
			close c02;
		
		else
			dt_plantao_item_w	:= null;
			
			open c04;
			loop
			fetch c04 into
				qt_minuto_w,
				cd_medico_w,
				nr_seq_plantao_w,
				dt_plantao_item_w,
				qt_plantao_c04_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				
				if (ie_regra_w	= 'P') then

					select	count(*)
					into STRICT	qt_dias_w
					from (SELECT	PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)
					from	escala_classif d,
						escala_grupo c,
						escala b,
						escala_diaria a
					where	a.nr_seq_escala		= b.nr_sequencia
					and	b.nr_seq_grupo		= c.nr_sequencia
					and	c.nr_seq_classif	= d.nr_sequencia
					and	d.cd_estabelecimento	= cd_estabelecimento_w
					and	a.dt_inicio		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, a.dt_inicio + 1)
					and	coalesce(a.cd_pessoa_fisica, cd_pessoa_fisica_w)	= cd_pessoa_fisica_w
					and	a.dt_inicio		between dt_periodo_inicial_w and dt_periodo_final_w
					and	b.nr_sequencia		= coalesce(nr_seq_escala_w, b.nr_sequencia)
					and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,dt_inicio)=0 THEN PKG_DATE_UTILS.get_WeekDay(dt_inicio)  ELSE 0 END , nr_sequencia_w, dt_inicio, dt_fim),1,255) = 'S'
					and (coalesce(a.qt_min_executado,0)	> 0
						 or (ie_escala_confirmada_w = 'N'))
					group 	by PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)) alias14;

					vl_repasse_w			:= vl_repassar_w * qt_dias_w;

                    select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
					into STRICT	dt_plantao_w
					from	medico_plantao
					where	nr_sequencia	= nr_seq_plantao_w;

				elsif (ie_regra_w	= 'F') and (ie_somente_plantao_w = 'S') and (coalesce(qt_plantao_c04_w,0) <> 0) then	

					if (dt_periodo_inicial_w between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, dt_periodo_inicial_w + 1)) then
						vl_repasse_w		:= vl_repassar_w;
					end if;
					
					dt_plantao_w	:= dt_plantao_item_w;

				elsif (ie_regra_w	= 'D') then

					if (ie_item_repasse_w = 'S') then

						select	count(*)
						into STRICT	qt_dias_w
						from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
						from	medico_plantao
						where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
						and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
						and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
						and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
						and	cd_estabelecimento	= cd_estabelecimento_w
						and	nr_sequencia		= nr_seq_plantao_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
						group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias26;
						
						select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
						into STRICT	dt_plantao_w
						from	medico_plantao
						where	nr_sequencia	= nr_seq_plantao_w;

					else
						select	count(*)
						into STRICT	qt_dias_w
						from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
						from	medico_plantao
						where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
						and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
						and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
						and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
						and	cd_estabelecimento	= cd_estabelecimento_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
						group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias24;

                        select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
						into STRICT	dt_plantao_w
						from	medico_plantao
						where	nr_sequencia	= nr_seq_plantao_w;
					end if;
		
					vl_repasse_w			:= vl_repassar_w * qt_dias_w;

				elsif (ie_regra_w	= 'Q') then
						
					if (coalesce(ie_medico_w,'N')	= 'N') then

						if (ie_item_repasse_w = 'S') then
		
							select	coalesce(sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ),0)
							into STRICT	qt_minuto_w
							from	medico_plantao
							where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao) = 'S')
							and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	nr_sequencia		= nr_seq_plantao_w
							and	obter_se_vigencia_plantao_terc(	nr_seq_terceiro_w,cd_medico,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) = 'S'
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
														
							select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;
						else
							select	coalesce(sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ),0)
							into STRICT	qt_minuto_w
							from	medico_plantao
							where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	obter_se_vigencia_plantao_terc(	nr_seq_terceiro_w,cd_medico,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) = 'S'
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );

                            select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;
						end if;
		
						qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
						vl_repasse_w			:= qt_hora_w * vl_repassar_w;
		
						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;
		
						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
						
							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								null,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;
		
					elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
						qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
						vl_repasse_w			:= qt_hora_w * vl_repassar_w;

						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;

						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
							
							if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
								select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
								into STRICT	ie_consiste_medico_w
								;
								
								if (coalesce(ie_consiste_medico_w,'N') = 'N') then
									
									select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
									into STRICT	ds_consist_med_w
									;
									
									CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
								end if;
							end if;
								
                            select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;

							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								cd_medico_w,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;

					end if;

				elsif (ie_regra_w	= 'M') then
		
					if (coalesce(ie_medico_w,'N')	= 'N') then
		
						select	count(*)
						into STRICT	qt_plantoes_w
						from	medico_plantao
						where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
						and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
						and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
						and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
						and	cd_estabelecimento	= cd_estabelecimento_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
		
						vl_repasse_w			:= qt_plantoes_w * vl_repassar_w;
		
						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;
		
						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
							
                            select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;

							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								null,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;
		
					elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
						if (qt_plantao_c04_w <> 0) then
							qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
							vl_repasse_w			:= qt_hora_w * vl_repassar_w;
						end if;	

						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;

						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
							
							if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
								select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
								into STRICT	ie_consiste_medico_w
								;
								
								if (coalesce(ie_consiste_medico_w,'N') = 'N') then
									
									select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
									into STRICT	ds_consist_med_w
									;
									
									CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
								end if;
							end if;
							
                            select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;

							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								cd_medico_w,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;

					end if;

				end if;

				if (ie_regra_w	<> 'Q') and (ie_regra_w	<> 'M') then
		
					if (ie_mensal_w = 'S') then
						select	count(*)
						into STRICT	cont_w
						from	repasse_terceiro_item
						where	nr_seq_regra_esp					= nr_sequencia_w
						and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
					elsif (ie_mensal_w = 'R') then
						select	count(*)
						into STRICT	cont_w
						from	repasse_terceiro_item
						where	nr_seq_regra_esp					= nr_sequencia_w
						and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
					end if;	

					if (vl_repasse_w > 0) and
						((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
						select	coalesce(max(nr_sequencia_item),0) + 1
						into STRICT	nr_sequencia_item_w
						from	repasse_terceiro_item
						where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
						
						select	nextval('repasse_terceiro_item_seq')
						into STRICT	nr_seq_item_w
						;

                        select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
						into STRICT	dt_plantao_w
						from	medico_plantao
						where	nr_sequencia	= nr_seq_plantao_w;

						insert into repasse_terceiro_item(nr_repasse_terceiro,
							nr_sequencia_item,
							vl_repasse,
							dt_atualizacao,
							nm_usuario,
							nr_lote_contabil,
							ds_observacao,
							cd_conta_contabil,
							nr_seq_trans_fin,
							nr_seq_regra,
							cd_medico,
							nr_seq_regra_esp,
							nr_seq_terceiro,
							dt_liberacao,
							nr_sequencia,
							dt_lancamento,
							nr_seq_trans_fin_prov,
							cd_centro_custo_prov,
							cd_centro_custo,
							cd_conta_contabil_prov,
							cd_conta_financ,
							dt_contabil,
							dt_plantao,
							nr_seq_med_plantao,
							qt_minuto,
							nr_seq_tipo,
							ie_participa_piso)
						values (nr_repasse_terceiro_p,
							nr_sequencia_item_w,
							vl_repasse_w,
							clock_timestamp(),
							nm_usuario_p,
							null,
							ds_titulo_w,
							cd_conta_contabil_w,
							nr_seq_trans_fin_w,
							null,
							null,
							nr_sequencia_w,
							nr_seq_terceiro_w,
							clock_timestamp(),
							nr_seq_item_w,
							dt_lanc_item_w,
							nr_seq_trans_fin_prov_w,
							cd_centro_custo_prov_cc_w,
							cd_centro_custo_cc_w,
							cd_conta_contabil_prov_w,
							cd_conta_financ_w,
							dt_contabil_w,
							dt_plantao_w,
							nr_seq_plantao_w,
							qt_minuto_w,
							nr_seq_tipo_regra_esp_w,
							ie_participa_piso_w);
						
						if (IE_VINCULAR_PLANTAO_W	= 'S') then
							if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
								begin
								insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											values (	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_seq_plantao_w);
								end;
							else
								begin
								insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										nr_seq_repasse_item,
										nr_seq_med_plantao)
									SELECT	nextval('repasse_item_plantao_seq'),
										clock_timestamp(),
										nm_usuario_p,
										nr_seq_item_w,
										nr_sequencia
									from	medico_plantao
									where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
									and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
									and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
									and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
									and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
									and	cd_estabelecimento			= cd_estabelecimento_w
									and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
									and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
									and	ie_item_repasse_w			= 'N'
									and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
									and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
								end;		
							end if;
						end if;
					end if;
				end if;
				
			end loop;
			close c04;	
			
		end if;
		
		if (ie_regra_w = 'A') then
			
			open c02;
			loop
			fetch c02 into
				cd_pessoa_fisica_terc_w,
				dt_inicio_vigencia_c02_w,
				dt_fim_vigencia_c02_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				
				vl_performance_w	:= 0;
				qt_total_atend_w	:= 0;
				qt_total_minuto_w	:= 0;
				qt_media_w		:= null;
				qt_tot_tipo_conv_atend_w	:= 0;
				
				open c07;
				loop
				fetch c07 into
					cd_medico_plantao_w,
					qt_minutos_plantao_w,
					dt_ini_c07_w,
					dt_fim_c07_w;
				EXIT WHEN NOT FOUND; /* apply on c07 */
					
					select	count(*)
					into STRICT	qt_atend_w
					from	atendimento_alta b,
						atendimento_paciente a
					where	a.nr_atendimento	= b.nr_atendimento
					--and	a.ie_tipo_convenio	= nvl(ie_tipo_convenio_w,a.ie_tipo_convenio)
					and	b.dt_desfecho		between dt_periodo_inicial_w and dt_periodo_final_w
					and	b.dt_desfecho		between	dt_ini_c07_w and dt_fim_c07_w
					and	substr(obter_dados_usuario_opcao(b.nm_usuario,'C'),1,255) 	= cd_medico_plantao_w
					and	a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,a.cd_estabelecimento)
					and ((b.ie_tipo_orientacao <> 'P')
					or (ie_liberar_desfecho_w  = 'N')
					or  ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and (coalesce(b.dt_inativacao::text, '') = '')));
					
					qt_total_atend_w	:= coalesce(qt_total_atend_w,0) + coalesce(qt_atend_w,0);
					qt_total_minuto_w	:= coalesce(qt_total_minuto_w,0) + coalesce(qt_minutos_plantao_w,0);
					
					if (coalesce(ie_tipo_convenio_w,0) <> 0) then
						select	count(*)
						into STRICT	qt_tipo_conv_atend_w
						from	atendimento_alta b,
								atendimento_paciente a
						where	a.nr_atendimento	= b.nr_atendimento
						and		a.ie_tipo_convenio	= coalesce(ie_tipo_convenio_w,a.ie_tipo_convenio)
						and		b.dt_desfecho		between dt_periodo_inicial_w and dt_periodo_final_w
						and		b.dt_desfecho		between	dt_ini_c07_w and dt_fim_c07_w
						and		substr(obter_dados_usuario_opcao(b.nm_usuario,'C'),1,255) 	= cd_medico_plantao_w
						and		a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,a.cd_estabelecimento)
						and 	((b.ie_tipo_orientacao <> 'P')
						or (ie_liberar_desfecho_w  = 'N')
						or  	((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and (coalesce(b.dt_inativacao::text, '') = '')));
						
						qt_tot_tipo_conv_atend_w	:= coalesce(qt_tot_tipo_conv_atend_w,0) + coalesce(qt_tipo_conv_atend_w,0);
						
					end if;

				end loop;
				close c07;
				
				SELECT * FROM obter_qt_atend_plantao_fora(	cd_pessoa_fisica_terc_w, cd_estabelecimento_w, nr_sequencia_w, nr_seq_categoria_w, dt_periodo_inicial_w, dt_periodo_final_w, dt_inicio_vigencia_w, dt_fim_vigencia_w, ie_plantao_previsto_w, ie_tipo_convenio_w, qt_total_atend_fora_w, qt_total_min_fora_w) INTO STRICT qt_total_atend_fora_w, qt_total_min_fora_w;
				
				if (coalesce(qt_total_atend_fora_w,0) <> 0) then
					qt_total_atend_w	:= qt_total_atend_w - qt_total_atend_fora_w;
				end if;
				
				if (coalesce(qt_total_min_fora_w,0) <> 0) then
					qt_total_minuto_w := qt_total_minuto_w - qt_total_min_fora_w;
				end if;
				
				if (coalesce(qt_total_minuto_w,0) <> 0) then
					qt_media_w	:= coalesce(qt_total_atend_w,0) / (coalesce(qt_total_minuto_w,0) / 60);
				end if;
				
				if (coalesce(ie_tipo_convenio_w,0) <> 0) then
										
					if (coalesce(qt_total_atend_fora_w,0) <> 0) and (coalesce(qt_tot_tipo_conv_atend_w,0) > coalesce(qt_total_atend_fora_w,0)) then
						qt_tot_tipo_conv_atend_w	:= qt_tot_tipo_conv_atend_w - qt_total_atend_fora_w;
					end if;
				end if;
				
				if (qt_media_w IS NOT NULL AND qt_media_w::text <> '') and (qt_media_w	>= qt_min_atendimento_w) and (qt_media_w	<= qt_max_atendimento_w) then
					
					if (coalesce(ie_tipo_convenio_w,0) <> 0) then
						vl_performance_w	:= (vl_repassar_w * qt_tot_tipo_conv_atend_w);
					else
						vl_performance_w	:= (vl_repassar_w * qt_total_atend_w);
					end if;	

				end if;
				
				if (coalesce(vl_performance_w,0) <> 0) then
				
					select	coalesce(max(nr_sequencia_item),0) + 1
					into STRICT	nr_sequencia_item_w
					from	repasse_terceiro_item
					where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

					/* Conferir se a pessoa e um medico, para evitar problemas de integridade da tabela */

					select	max(a.cd_pessoa_fisica)
					into STRICT	cd_medico_repasse_w
					from	medico a
					where	a.cd_pessoa_fisica	= cd_pessoa_fisica_terc_w;
					
					select	nextval('repasse_terceiro_item_seq')
					into STRICT	nr_seq_item_w
					;
					
					insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								ds_observacao,
								cd_medico,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								nr_seq_tipo,
								nr_seq_trans_fin,
								cd_centro_custo,
								cd_conta_contabil,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_conta_contabil_prov,
								dt_lancamento,
								dt_contabil,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_performance_w,
								clock_timestamp(),
								nm_usuario_p,
								ds_titulo_w,
								cd_medico_repasse_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								nr_seq_tipo_regra_esp_w,
								nr_seq_trans_fin_w,
								cd_centro_custo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_w,
								cd_conta_contabil_prov_w,
								dt_lanc_item_w,
								dt_contabil_w,
								ie_participa_piso_w);
					
					if (IE_VINCULAR_PLANTAO_W	= 'S') then
						begin
						insert	into	REPASSE_ITEM_PLANTAO(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_repasse_item,
								nr_seq_med_plantao)
							SELECT	nextval('repasse_item_plantao_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_item_w,
								nr_sequencia
							from	medico_plantao
							where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (cd_medico = cd_pessoa_fisica_terc_w or coalesce(cd_pessoa_fisica_terc_w,'X') = 'X')
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
						end;
					end if;			
				end if;	
			end loop;
			close c02;
		end if;
		
		/*Gerar repasse fixo sem plantao*/

		if (ie_regra_w	= 'F') and (ie_somente_plantao_w = 'N') then	
			if (dt_periodo_inicial_w between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, dt_periodo_inicial_w + 1)) then
				vl_repasse_w		:= vl_repassar_w;
			end if;
			
			if (vl_repasse_w <> 0) and
				((IE_MENSAL_w = 'N') or (cont_w = 0)) then

				select	coalesce(max(nr_sequencia_item),0) + 1
				into STRICT	nr_sequencia_item_w
				from	repasse_terceiro_item
				where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
				
				select	nextval('repasse_terceiro_item_seq')
				into STRICT	nr_seq_item_w
				;
				
				if (coalesce(cd_pessoa_fisica_w,'X') = 'X') then
					cd_pessoa_fisica_w	:= null;
				end if;
				
				/* Conferir se a pessoa e um medico, para evitar problemas de integridade da tabela */

				select	max(a.cd_pessoa_fisica)
				into STRICT	cd_medico_repasse_w
				from	medico a
				where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
				
				insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
					nr_sequencia_item,
					vl_repasse,
					dt_atualizacao,
					nm_usuario,
					nr_lote_contabil,
					ds_observacao,
					cd_conta_contabil,
					nr_seq_trans_fin,
					nr_seq_regra,
					cd_medico,
					nr_seq_regra_esp,
					nr_seq_terceiro,
					dt_liberacao,
					nr_sequencia,
					dt_lancamento,
					nr_seq_trans_fin_prov,
					cd_centro_custo_prov,
					cd_centro_custo,
					cd_conta_contabil_prov,
					qt_minuto,
					cd_conta_financ,
					dt_contabil,
					dt_plantao,
					nr_seq_med_plantao,
					nr_seq_tipo,
					ie_participa_piso)
				values (nr_repasse_terceiro_p,
					nr_sequencia_item_w,
					vl_repasse_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					ds_titulo_w,
					cd_conta_contabil_w,
					nr_seq_trans_fin_w,
					null,
					cd_medico_repasse_w,
					nr_sequencia_w,
					nr_seq_terceiro_w,
					clock_timestamp(),
					nr_seq_item_w,
					dt_lanc_item_w,
					nr_seq_trans_fin_prov_w,
					cd_centro_custo_prov_cc_w,
					cd_centro_custo_cc_w,
					cd_conta_contabil_prov_w,
					0,
					cd_conta_financ_w,
					dt_contabil_w,
					null,
					null,
					nr_seq_tipo_regra_esp_w,
					ie_participa_piso_w);
			end if;
		end if;
	--Encerra o loop do cursor de centros de custo adicionais
	end loop;
	
	--Rateia os valores dos itens de repasse de acordo com a quantidade de centro de custos adicionais cadastrados na regra
	if (cont_regra_cc_w > 0) then
		
		select	sum(vl_repasse)
		into STRICT	vl_repasse_antes_rateio_w
		from	repasse_terceiro_item
		where	nr_repasse_terceiro	= nr_repasse_terceiro_p
		and	nr_seq_regra_esp	= nr_sequencia_w;
		
		vl_repasse_antes_rateio_w	:= dividir_sem_round(vl_repasse_antes_rateio_w,cont_regra_cc_w);
		
		--Retorna os itens de repasse que devem ter o seu valor rateado.
		for  r_c_item_repasse in c_item_repasse(nr_repasse_terceiro_p, nr_sequencia_w) loop
			
			nr_seq_rep_item_w	:= r_c_item_repasse.nr_sequencia;
			
			update	repasse_terceiro_item
			set	vl_repasse		= dividir_sem_round(vl_repasse,cont_regra_cc_w)
			where	nr_sequencia		= nr_seq_rep_item_w
			and	nr_repasse_terceiro	= nr_repasse_terceiro_p;
			
		end loop;
		
		select	sum(vl_repasse)
		into STRICT	vl_repasse_apos_rateio_w
		from	repasse_terceiro_item
		where	nr_repasse_terceiro	= nr_repasse_terceiro_p
		and	nr_seq_regra_esp	= nr_sequencia_w;
		
		--Verifica se houve diferenca entre o valor total do repasse e o valor rateado e ajusta para o ultimo item
		if (vl_repasse_apos_rateio_w > vl_repasse_antes_rateio_w) then
			update	repasse_terceiro_item
			set	vl_repasse		= vl_repasse - (vl_repasse_apos_rateio_w - vl_repasse_antes_rateio_w)
			where	nr_sequencia		= nr_seq_rep_item_w
			and	nr_repasse_terceiro	= nr_repasse_terceiro_p;
		elsif (vl_repasse_apos_rateio_w < vl_repasse_antes_rateio_w) then			
			update	repasse_terceiro_item
			set	vl_repasse		= vl_repasse + (vl_repasse_antes_rateio_w - vl_repasse_apos_rateio_w)
			where	nr_sequencia		= nr_seq_rep_item_w
			and	nr_repasse_terceiro	= nr_repasse_terceiro_p;
		end if;		
	end if;
	
end loop;
close c05;
	
dt_plantao_w	:= null;

--Retorna as regras de repasse especial que possuem terceiro informado na regra.
open c01;
loop
fetch c01 into
	nr_sequencia_w,
	ie_regra_w,
	ie_limpa_item_w,
	dt_inicio_vigencia_w,
	dt_fim_vigencia_w,
	nr_seq_trans_fin_w,
	vl_repassar_w,
	cd_pessoa_fisica_w,
	nr_seq_terceiro_w,
	ds_titulo_w,
	nr_seq_trans_fin_prov_w,
	ie_terceiro_w,
	IE_MENSAL_w,
	ie_medico_w,
	nr_seq_tipo_plantao_w,
	cd_centro_custo_w,
	cd_centro_custo_prov_w,
	cd_conta_contabil_w,
	cd_conta_contabil_prov_w,
	cd_conta_financ_w,
	ie_data_item_w,
	nr_seq_escala_w,
	ie_data_contabil_w,
	ie_item_repasse_w,
	qt_min_atendimento_w,
	qt_max_atendimento_w,
	IE_VINCULAR_PLANTAO_W,
	ie_tipo_convenio_w,
	nr_seq_categoria_w,
	ie_plantao_previsto_w,
	ie_somente_plantao_w,
	ie_participa_piso_w,
	nr_seq_tipo_regra_esp_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	
	if (ie_limpa_item_w = 'S') then
		delete from	repasse_item_plantao a
		where	exists (	SELECT	1
				from	repasse_terceiro_item x
				where	x.nr_repasse_terceiro	= nr_repasse_terceiro_p
				and	x.nr_seq_regra_esp	= nr_sequencia_w
				and	x.nr_sequencia	= a.nr_seq_repasse_item);
				
		delete	from repasse_terceiro_item
		where	nr_repasse_terceiro	= nr_repasse_terceiro_p
		and	nr_seq_regra_esp	= nr_sequencia_w;
	end if;
	
	select	count(*)
	into STRICT	cont_regra_cc_w
	from	regra_esp_repasse_cc
	where	nr_seq_regra_esp	= nr_sequencia_w;
	
	--Abre cursor dos centro de custos adicionais
	for r_c_custo_adic in c_custo_adic(nr_sequencia_w, cont_regra_cc_w) loop
	
		if (coalesce(cd_pessoa_fisica_w::text, '') = '') then
			cd_pessoa_fisica_w	:= 'X';
		end if;
		
		--Se nao existir na regra centros de custo adicionais, busca os centros de custo cadastrados na regra de repasse especial principal

		--Caso exista, busca dos centros de custo adicionais cadastrados na regra.
		if (cont_regra_cc_w = 0) then
			cd_centro_custo_cc_w		:= cd_centro_custo_w;
			cd_centro_custo_prov_cc_w	:= cd_centro_custo_prov_w;
		else
			cd_centro_custo_cc_w		:= r_c_custo_adic.cd_centro_custo;
			cd_centro_custo_prov_cc_w	:= r_c_custo_adic.cd_centro_custo_prov;
		end if;
		
		if (coalesce(ie_data_item_w, 'A')	= 'A') then
			dt_lanc_item_w	:= clock_timestamp();
		elsif (ie_data_item_w			= 'P') then
			dt_lanc_item_w	:= fim_mes(PKG_DATE_UTILS.ADD_MONTH(coalesce(dt_referencia_w, clock_timestamp()),-1,0));
		else
			dt_lanc_item_w	:= coalesce(dt_referencia_w, clock_timestamp());
		end if;	

		dt_contabil_w	:= null;
		if (ie_data_contabil_w = 'R') then
			dt_contabil_w	:= coalesce(dt_referencia_w, clock_timestamp());
		end if;

		vl_repasse_w				:= 0;

		select	max(coalesce(ie_plantao_previsto,'N'))
		into STRICT	ie_plantao_prev_w
		from	regra_esp_repasse
		where	nr_sequencia	= nr_sequencia_w;
		
		
		
		--Verifica se considera as pessoas fisicas vinculadas ao terceiro
		if (ie_terceiro_w = 'S') then
			
			/*lhalves OS298188 em 18/11/2011 Incluido c04 dentro do c02, para gerar o repasse dos medicos vinculados ao terceiro*/

			open c02;
			loop
			fetch c02 into
				cd_pessoa_fisica_terc_c02_w,
				dt_inicio_vigencia_c02_w,
				dt_fim_vigencia_c02_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				
				/* ahoffelder - OS 401787 - 24/01/2012 - coloquei esse select aqui por causa da opcao de gerar um item de repasse para cada plantao */

				if (ie_mensal_w = 'S') then
					select	count(*)
					into STRICT	cont_w
					from	repasse_terceiro_item
					where	nr_seq_regra_esp					= nr_sequencia_w
					and	coalesce(cd_medico,coalesce(cd_pessoa_fisica_terc_c02_w,'X'))	= coalesce(cd_pessoa_fisica_terc_c02_w,'X')
					and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
				elsif (ie_mensal_w = 'R') then
					select	count(*)
					into STRICT	cont_w
					from	repasse_terceiro_item
					where	nr_seq_regra_esp					= nr_sequencia_w
					and	coalesce(cd_medico,coalesce(cd_pessoa_fisica_terc_c02_w,'X'))	= coalesce(cd_pessoa_fisica_terc_c02_w,'X')
					and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
				end if;
				
				if (ie_regra_w	= 'H') then
					vl_repasse_escala_w	:= 0;
					qt_minuto_escala_w	:= 0;
					
					/* 18/10/2018 OS1774054 acandido - tratamento de data unica na consulta de quantidade de minutos de plantao */

					dt_inicio_vigencia_maior_w := dt_inicio_vigencia_w;
					if ((dt_periodo_inicial_w IS NOT NULL AND dt_periodo_inicial_w::text <> '') and dt_periodo_inicial_w > dt_inicio_vigencia_maior_w) then
						dt_inicio_vigencia_maior_w := dt_periodo_inicial_w;
					end if;
							
					dt_fim_vigencia_menor_w := dt_fim_vigencia_w;
					if ((dt_periodo_final_w IS NOT NULL AND dt_periodo_final_w::text <> '') and dt_periodo_final_w < dt_fim_vigencia_menor_w) then
						dt_fim_vigencia_menor_w := dt_periodo_final_w;
					end if;

					if ((dt_inicio_vigencia_c02_w IS NOT NULL AND dt_inicio_vigencia_c02_w::text <> '') and dt_inicio_vigencia_c02_w > dt_inicio_vigencia_maior_w) then
						dt_inicio_vigencia_maior_w := dt_inicio_vigencia_c02_w;
					end if;
					
					if ((dt_fim_vigencia_c02_w IS NOT NULL AND dt_fim_vigencia_c02_w::text <> '') and dt_fim_vigencia_c02_w < dt_fim_vigencia_menor_w) then
						dt_fim_vigencia_menor_w := dt_fim_vigencia_c02_w;
					end if;
					
					select
						sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN OBTER_MIN_REGRA_ESP_PLANTAO(nr_sequencia_w,null,a.dt_inicio,a.dt_fim, ie_plantao_prev_w)  ELSE a.qt_min_executado END )
					into STRICT	qt_minuto_escala_w
					from	escala_classif d,
						escala_grupo c,
						escala b,
						escala_diaria a
					where
					a.nr_seq_escala		= b.nr_sequencia
					and	b.nr_seq_grupo		= c.nr_sequencia
					and	c.nr_seq_classif	= d.nr_sequencia
					and	d.cd_estabelecimento	= cd_estabelecimento_w
					and	coalesce(a.qt_min_executado,0) > 0
					and	b.nr_sequencia		= coalesce(nr_seq_escala_w, b.nr_sequencia)
					and	coalesce(a.cd_pessoa_fisica, cd_pessoa_fisica_terc_c02_w)	= cd_pessoa_fisica_terc_c02_w
					and	a.dt_inicio		between coalesce(dt_inicio_vigencia_maior_w, a.dt_inicio) and fim_dia(coalesce(dt_fim_vigencia_menor_w, a.dt_inicio + 1))
					and	OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,a.dt_inicio)=0 THEN PKG_DATE_UTILS.get_WeekDay(a.dt_inicio)  ELSE 0 END , nr_sequencia_w, a.dt_inicio, a.dt_fim) = 'S';

					vl_repasse_escala_w			:= dividir_sem_round((qt_minuto_escala_w)::numeric,60) * vl_repassar_w;
					
					if (coalesce(vl_repasse_escala_w,0)	<> 0) then
						select	coalesce(max(nr_sequencia_item),0) + 1
						into STRICT	nr_sequencia_item_w
						from	repasse_terceiro_item
						where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

						/* Conferir se a pessoa e um medico, para evitar problemas de integridade da tabela */

						select	max(a.cd_pessoa_fisica)
						into STRICT	cd_medico_repasse_w
						from	medico a
						where	a.cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w;
						
						insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
										nr_sequencia_item,
										vl_repasse,
										dt_atualizacao,
										nm_usuario,
										nr_lote_contabil,
										ds_observacao,
										cd_conta_contabil,
										nr_seq_trans_fin,
										nr_seq_regra,
										cd_medico,
										nr_seq_regra_esp,
										nr_seq_terceiro,
										dt_liberacao,
										nr_sequencia,
										dt_lancamento,
										nr_seq_trans_fin_prov,
										cd_centro_custo_prov,
										cd_centro_custo,
										cd_conta_contabil_prov,
										qt_minuto,
										cd_conta_financ,
										dt_contabil,
										dt_plantao,
										nr_seq_med_plantao,
										nr_seq_tipo,
										ie_participa_piso)
									values (nr_repasse_terceiro_p,
										nr_sequencia_item_w,
										vl_repasse_escala_w,
										clock_timestamp(),
										nm_usuario_p,
										null,
										ds_titulo_w,
										cd_conta_contabil_w,
										nr_seq_trans_fin_w,
										null,
										cd_medico_repasse_w,
										nr_sequencia_w,
										nr_seq_terceiro_w,
										clock_timestamp(),
										nextval('repasse_terceiro_item_seq'),
										dt_lanc_item_w,
										nr_seq_trans_fin_prov_w,
										cd_centro_custo_prov_cc_w,
										cd_centro_custo_cc_w,
										cd_conta_contabil_prov_w,
										qt_minuto_escala_w,
										cd_conta_financ_w,
										dt_contabil_w,
										null,
										null,
										nr_seq_tipo_regra_esp_w,
										ie_participa_piso_w);
						
					end if;
				end if;
				
				if (ie_regra_w	= 'P') and (IE_ITEM_REPASSE_w = 'S') then
					
					select	max(coalesce(cd_pessoa_fisica,'X'))
					into STRICT	cd_pessoa_fisica_terc_w
					from	medico
					where	cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w;
		
					open	c06;
					loop
					fetch	c06 into
						nr_seq_escala_diaria_w,
						dt_inicio_escala_w,
						dt_fim_escala_w;
					EXIT WHEN NOT FOUND; /* apply on c06 */
						
						select	coalesce(max(nr_sequencia_item),0) + 1
						into STRICT	nr_sequencia_item_w
						from	repasse_terceiro_item
						where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
						
						insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
							nr_sequencia_item,
							vl_repasse,
							dt_atualizacao,
							nm_usuario,
							nr_lote_contabil,
							ds_observacao,
							cd_conta_contabil,
							nr_seq_trans_fin,
							nr_seq_regra,
							cd_medico,
							nr_seq_regra_esp,
							nr_seq_terceiro,
							dt_liberacao,
							nr_sequencia,
							dt_lancamento,
							nr_seq_trans_fin_prov,
							cd_centro_custo_prov,
							cd_centro_custo,
							cd_conta_contabil_prov,
							cd_conta_financ,
							dt_contabil,
							dt_plantao,
							nr_seq_tipo,
							ie_participa_piso)
						values	(nr_repasse_terceiro_p,
							nr_sequencia_item_w,
							vl_repassar_w,
							clock_timestamp(),
							nm_usuario_p,
							null,
							substr((ds_titulo_w || ' - ' || wheb_mensagem_pck.get_texto(302327) || ': ' || dt_inicio_escala_w ||' - '|| dt_fim_escala_w),1,255),
							cd_conta_contabil_w,
							nr_seq_trans_fin_w,
							null,
							cd_pessoa_fisica_terc_w,
							nr_sequencia_w,
							nr_seq_terceiro_w,
							clock_timestamp(),
							nextval('repasse_terceiro_item_seq'),
							dt_lanc_item_w,
							nr_seq_trans_fin_prov_w,
							cd_centro_custo_prov_cc_w,
							cd_centro_custo_cc_w,
							cd_conta_contabil_prov_w,
							cd_conta_financ_w,
							dt_contabil_w,
							dt_plantao_w,
							nr_seq_tipo_regra_esp_w,
							ie_participa_piso_w);
					end	loop;
					close	c06;
				end if;
				
				dt_plantao_item_w	:= null;
					
				open c04;
				loop
				fetch c04 into
					qt_minuto_w,
					cd_medico_w,
					nr_seq_plantao_w,
					dt_plantao_item_w,
					qt_plantao_c04_w;
				EXIT WHEN NOT FOUND; /* apply on c04 */
					
					dt_plantao_w	:= null;

					select	max(cd_pessoa_fisica)
					into STRICT	cd_medico_terc_w
					from	medico
					where	cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w;

					vl_repasse_w				:= 0;
					
					if (ie_regra_w	= 'P') and (IE_ITEM_REPASSE_w = 'N') then
						
						select	count(*)
						into STRICT	qt_dias_w
						from (SELECT	PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)
						from	escala_classif d,
							escala_grupo c,
							escala b,
							escala_diaria a
						where	a.nr_seq_escala		= b.nr_sequencia
						and	b.nr_seq_grupo		= c.nr_sequencia
						and	c.nr_seq_classif		= d.nr_sequencia
						and	d.cd_estabelecimento	= cd_estabelecimento_w
						and	a.dt_inicio		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, a.dt_inicio + 1)
						and (coalesce(a.cd_pessoa_fisica, cd_pessoa_fisica_terc_c02_w)	= cd_pessoa_fisica_terc_c02_w
							or (exists (select	1
									from	escala_diaria_adic x
									where	x.nr_seq_escala_diaria	= a.nr_sequencia
									and	x.cd_pessoa_fisica	= cd_pessoa_fisica_terc_c02_w)))
						and	a.dt_inicio		between dt_periodo_inicial_w and dt_periodo_final_w
						and	b.nr_sequencia		= coalesce(nr_seq_escala_w, b.nr_sequencia)
						and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,dt_inicio)=0 THEN PKG_DATE_UTILS.get_WeekDay(dt_inicio)  ELSE 0 END , nr_sequencia_w, dt_inicio, dt_fim),1,255) = 'S'
						and (coalesce(a.qt_min_executado,0)	> 0
							 or (ie_escala_confirmada_w = 'N'))
						group 	by PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)) alias18;
						
						vl_repasse_w			:= vl_repassar_w * qt_dias_w;
		
					elsif (ie_regra_w	= 'F') and (ie_somente_plantao_w = 'S') and (coalesce(qt_plantao_c04_w,0) <> 0) then	
		
						if (dt_periodo_inicial_w between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, dt_periodo_inicial_w + 1)) then
							vl_repasse_w		:= vl_repassar_w;
						end if;
						
						dt_plantao_w	:= dt_plantao_item_w;

					elsif (ie_regra_w	= 'D') then	
		
						if (ie_item_repasse_w = 'S') then

							select	count(*)
							into STRICT	qt_dias_w
							from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
							from	medico_plantao a
							where	substr(obter_se_regra_esp_dia(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and	a.cd_estabelecimento	= cd_estabelecimento_w
							and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	nr_sequencia		= nr_seq_plantao_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
							group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias26;
							
							select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;
						else
							select	count(*)
							into STRICT	qt_dias_w
							from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
							from	medico_plantao a
							where	substr(obter_se_regra_esp_dia(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and	a.cd_estabelecimento	= cd_estabelecimento_w
							and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 			between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 			between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
							group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias24;

						end if;

						vl_repasse_w			:= vl_repassar_w * qt_dias_w;
						
					elsif (ie_regra_w	= 'Q') then
		
						if (coalesce(ie_medico_w,'N')	= 'N') then
		
							if (ie_item_repasse_w = 'S') then						

								select	coalesce(sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ),0)
								into STRICT	qt_minuto_w
								from	medico_plantao
								where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
								and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
								and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
								and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
								and	cd_estabelecimento	= cd_estabelecimento_w
								and	nr_sequencia		= nr_seq_plantao_w
								and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between coalesce(dt_inicio_vigencia_c02_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) and coalesce(dt_fim_vigencia_c02_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END +1)
								and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
								and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
								
								select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
								into STRICT	dt_plantao_w
								from	medico_plantao
								where	nr_sequencia	= nr_seq_plantao_w;
												
							end if;
							
							qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
							vl_repasse_w			:=  qt_hora_w * vl_repassar_w;
							
							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
								
								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_terc_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
							
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;						
							end if;
							
		
						elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
							qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
							vl_repasse_w			:= qt_hora_w * vl_repassar_w;
		
							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then

								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
								
								if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
									select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
									into STRICT	ie_consiste_medico_w
									;
									
									if (coalesce(ie_consiste_medico_w,'N') = 'N') then
										
										select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
										into STRICT	ds_consist_med_w
										;
										
										CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
									end if;
								end if;	
								
								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
								
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;
							end if;
		
						end if;
		
					elsif (ie_regra_w	= 'M') then
		
						if (coalesce(ie_medico_w,'N')	= 'N') then
		
							select	count(*)
							into STRICT	qt_plantoes_w
							from	medico_plantao
							where (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (cd_medico		= cd_pessoa_fisica_terc_c02_w or cd_pessoa_fisica_terc_c02_w	= 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
		
							vl_repasse_w			:= qt_plantoes_w * vl_repassar_w;
		
							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
															
								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_terc_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
								
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;	
							end if;
							
		
						elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
							if (qt_plantao_c04_w <> 0) then
								qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
								vl_repasse_w			:= qt_hora_w * vl_repassar_w;
							end if;	
		
							if (vl_repasse_w > 0) and
								((IE_MENSAL_w = 'N') or (cont_w = 0)) then

								select	coalesce(max(nr_sequencia_item),0) + 1
								into STRICT	nr_sequencia_item_w
								from	repasse_terceiro_item
								where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
								
								select	nextval('repasse_terceiro_item_seq')
								into STRICT	nr_seq_item_w
								;
								
								if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
									select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
									into STRICT	ie_consiste_medico_w
									;
									
									if (coalesce(ie_consiste_medico_w,'N') = 'N') then
										
										select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
										into STRICT	ds_consist_med_w
										;
										
										CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
									end if;
								end if;
								
								insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
									nr_sequencia_item,
									vl_repasse,
									dt_atualizacao,
									nm_usuario,
									nr_lote_contabil,
									ds_observacao,
									cd_conta_contabil,
									nr_seq_trans_fin,
									nr_seq_regra,
									cd_medico,
									nr_seq_regra_esp,
									nr_seq_terceiro,
									dt_liberacao,
									nr_sequencia,
									dt_lancamento,
									nr_seq_trans_fin_prov,
									cd_centro_custo_prov,
									cd_centro_custo,
									cd_conta_contabil_prov,
									qt_minuto,
									cd_conta_financ,
									dt_contabil,
									dt_plantao,
									nr_seq_med_plantao,
									nr_seq_tipo,
									ie_participa_piso)
								values (nr_repasse_terceiro_p,
									nr_sequencia_item_w,
									vl_repasse_w,
									clock_timestamp(),
									nm_usuario_p,
									null,
									ds_titulo_w,
									cd_conta_contabil_w,
									nr_seq_trans_fin_w,
									null,
									cd_medico_w,
									nr_sequencia_w,
									nr_seq_terceiro_w,
									clock_timestamp(),
									nr_seq_item_w,
									dt_lanc_item_w,
									nr_seq_trans_fin_prov_w,
									cd_centro_custo_prov_cc_w,
									cd_centro_custo_cc_w,
									cd_conta_contabil_prov_w,
									qt_minuto_w,
									cd_conta_financ_w,
									dt_contabil_w,
									dt_plantao_w,
									nr_seq_plantao_w,
									nr_seq_tipo_regra_esp_w,
									ie_participa_piso_w);
								
								if (IE_VINCULAR_PLANTAO_W	= 'S') then
									if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
														dt_atualizacao,
														nm_usuario,
														nr_seq_repasse_item,
														nr_seq_med_plantao)
													values (	nextval('repasse_item_plantao_seq'),
														clock_timestamp(),
														nm_usuario_p,
														nr_seq_item_w,
														nr_seq_plantao_w);
										end;
									else
										begin
										insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											SELECT	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_sequencia
											from	medico_plantao
											where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
											and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
											and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
											and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
											and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
											and	cd_estabelecimento			= cd_estabelecimento_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
											and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
											and	ie_item_repasse_w			= 'N'
											and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
											and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
										end;		
									end if;
								end if;
							end if;
		
						end if;
		
					end if;
		
					if (ie_regra_w	<> 'Q') and (ie_regra_w	<> 'M') then
		
						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
							
							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								qt_minuto,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								cd_medico_terc_w,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_Seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								qt_minuto_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;
						
					end if;
				end loop;
				close c04;
			end loop;
			close c02;
		
		else
			dt_plantao_item_w	:= null;
			
			open c04;
			loop
			fetch c04 into
				qt_minuto_w,
				cd_medico_w,
				nr_seq_plantao_w,
				dt_plantao_item_w,
				qt_plantao_c04_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				
				if (ie_regra_w	= 'P') then

					select	count(*)
					into STRICT	qt_dias_w
					from (SELECT	PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)
					from	escala_classif d,
						escala_grupo c,
						escala b,
						escala_diaria a
					where	a.nr_seq_escala		= b.nr_sequencia
					and	b.nr_seq_grupo		= c.nr_sequencia
					and	c.nr_seq_classif	= d.nr_sequencia
					and	d.cd_estabelecimento	= cd_estabelecimento_w
					and	a.dt_inicio		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, a.dt_inicio + 1)
					and	coalesce(a.cd_pessoa_fisica, cd_pessoa_fisica_w)	= cd_pessoa_fisica_w
					and	a.dt_inicio		between dt_periodo_inicial_w and dt_periodo_final_w
					and	b.nr_sequencia		= coalesce(nr_seq_escala_w, b.nr_sequencia)
					and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,dt_inicio)=0 THEN PKG_DATE_UTILS.get_WeekDay(dt_inicio)  ELSE 0 END , nr_sequencia_w, dt_inicio, dt_fim),1,255) = 'S'
					and (coalesce(a.qt_min_executado,0)	> 0
						 or (ie_escala_confirmada_w = 'N'))
					group 	by PKG_DATE_UTILS.start_of(dt_inicio, 'dd', 0)) alias14;

					vl_repasse_w			:= vl_repassar_w * qt_dias_w;
		
				elsif (ie_regra_w	= 'F') and (ie_somente_plantao_w = 'S') and (coalesce(qt_plantao_c04_w,0) <> 0) then	

					if (dt_periodo_inicial_w between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, dt_periodo_inicial_w + 1)) then
						vl_repasse_w		:= vl_repassar_w;
					end if;
					
					dt_plantao_w	:= dt_plantao_item_w;

				elsif (ie_regra_w	= 'D') then

					if (ie_item_repasse_w = 'S') then

						select	count(*)
						into STRICT	qt_dias_w
						from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
						from	medico_plantao
						where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
						and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
						and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
						and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
						and	cd_estabelecimento	= cd_estabelecimento_w
						and	nr_sequencia		= nr_seq_plantao_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
						group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias26;
						
						select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
						into STRICT	dt_plantao_w
						from	medico_plantao
						where	nr_sequencia	= nr_seq_plantao_w;

					else
						select	count(*)
						into STRICT	qt_dias_w
						from (SELECT	PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)
						from	medico_plantao
						where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
						and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
						and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
						and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
						and	cd_estabelecimento	= cd_estabelecimento_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
						group 	by PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0)) alias24;
					end if;
		
					vl_repasse_w			:= vl_repassar_w * qt_dias_w;

				elsif (ie_regra_w	= 'Q') then
						
					if (coalesce(ie_medico_w,'N')	= 'N') then

						if (ie_item_repasse_w = 'S') then
		
							select	coalesce(sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ),0)
							into STRICT	qt_minuto_w
							from	medico_plantao
							where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao) = 'S')
							and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	nr_sequencia		= nr_seq_plantao_w
							and	obter_se_vigencia_plantao_terc(	nr_seq_terceiro_w,cd_medico,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) = 'S'
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
														
							select	max(PKG_DATE_UTILS.start_of(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , 'dd', 0))
							into STRICT	dt_plantao_w
							from	medico_plantao
							where	nr_sequencia	= nr_seq_plantao_w;
						else
							select	coalesce(sum(CASE WHEN ie_plantao_regra_esp_w='S' THEN obter_min_regra_esp_plantao(nr_sequencia_w,nr_sequencia)  ELSE CASE WHEN ie_plantao_previsto_w='S' THEN obter_tempo_plantao_medico(nr_sequencia,'M')  ELSE qt_minuto END  END ),0)
							into STRICT	qt_minuto_w
							from	medico_plantao
							where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
							and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
							and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	obter_se_vigencia_plantao_terc(	nr_seq_terceiro_w,cd_medico,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END ) = 'S'
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
						end if;
		
						qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
						vl_repasse_w			:= qt_hora_w * vl_repassar_w;
		
						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;
		
						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
						
							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								null,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;
		
					elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
						qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
						vl_repasse_w			:= qt_hora_w * vl_repassar_w;

						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;

						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
							
							if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
								select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
								into STRICT	ie_consiste_medico_w
								;
								
								if (coalesce(ie_consiste_medico_w,'N') = 'N') then
									
									select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
									into STRICT	ds_consist_med_w
									;
									
									CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
								end if;
							end if;
								
							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								cd_medico_w,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;

					end if;

				elsif (ie_regra_w	= 'M') then
		
					if (coalesce(ie_medico_w,'N')	= 'N') then
		
						select	count(*)
						into STRICT	qt_plantoes_w
						from	medico_plantao
						where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
						and (coalesce(nr_seq_tipo_plantao::text, '') = '' or substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S')
						and (cd_medico = cd_pessoa_fisica_w or cd_pessoa_fisica_w = 'X')
						and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
						and	cd_estabelecimento	= cd_estabelecimento_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
						and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
		
						vl_repasse_w			:= qt_plantoes_w * vl_repassar_w;
		
						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;
		
						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
							
							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								null,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;
		
					elsif (coalesce(ie_medico_w,'N')	= 'S') then
		
						if (qt_plantao_c04_w <> 0) then
							qt_hora_w	:= dividir_sem_round((qt_minuto_w)::numeric,60);
							vl_repasse_w			:= qt_hora_w * vl_repassar_w;
						end if;	

						if (ie_mensal_w = 'S') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
						elsif (ie_mensal_w = 'R') then
							select	count(*)
							into STRICT	cont_w
							from	repasse_terceiro_item
							where	nr_seq_regra_esp					= nr_sequencia_w
							and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
						end if;

						if (vl_repasse_w > 0) and
							((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
							select	coalesce(max(nr_sequencia_item),0) + 1
							into STRICT	nr_sequencia_item_w
							from	repasse_terceiro_item
							where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
							
							select	nextval('repasse_terceiro_item_seq')
							into STRICT	nr_seq_item_w
							;
							
							if (cd_medico_w IS NOT NULL AND cd_medico_w::text <> '') then
									
								select	substr(Obter_se_medico(cd_medico_w,'M'),1,1)
								into STRICT	ie_consiste_medico_w
								;
								
								if (coalesce(ie_consiste_medico_w,'N') = 'N') then
									
									select	cd_medico_w||' - '||substr(obter_nome_pf_pj(cd_medico_w,null),1,230)
									into STRICT	ds_consist_med_w
									;
									
									CALL wheb_mensagem_pck.exibir_mensagem_abort(292352, 'DS_CONSIST_MED_W='||ds_consist_med_w);
								end if;
							end if;
							
							insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								nr_lote_contabil,
								ds_observacao,
								cd_conta_contabil,
								nr_seq_trans_fin,
								nr_seq_regra,
								cd_medico,
								nr_seq_regra_esp,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								dt_lancamento,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_centro_custo,
								cd_conta_contabil_prov,
								qt_minuto,
								cd_conta_financ,
								dt_contabil,
								dt_plantao,
								nr_seq_med_plantao,
								nr_seq_tipo,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_repasse_w,
								clock_timestamp(),
								nm_usuario_p,
								null,
								ds_titulo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_w,
								null,
								cd_medico_w,
								nr_sequencia_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								dt_lanc_item_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_cc_w,
								cd_centro_custo_cc_w,
								cd_conta_contabil_prov_w,
								qt_minuto_w,
								cd_conta_financ_w,
								dt_contabil_w,
								dt_plantao_w,
								nr_seq_plantao_w,
								nr_seq_tipo_regra_esp_w,
								ie_participa_piso_w);
							
							if (IE_VINCULAR_PLANTAO_W	= 'S') then
								if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
													dt_atualizacao,
													nm_usuario,
													nr_seq_repasse_item,
													nr_seq_med_plantao)
												values (	nextval('repasse_item_plantao_seq'),
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_item_w,
													nr_seq_plantao_w);
									end;
								else
									begin
									insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
											dt_atualizacao,
											nm_usuario,
											nr_seq_repasse_item,
											nr_seq_med_plantao)
										SELECT	nextval('repasse_item_plantao_seq'),
											clock_timestamp(),
											nm_usuario_p,
											nr_seq_item_w,
											nr_sequencia
										from	medico_plantao
										where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
										and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
										and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
										and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
										and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
										and	cd_estabelecimento			= cd_estabelecimento_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
										and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
										and	ie_item_repasse_w			= 'N'
										and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
										and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
									end;		
								end if;
							end if;
						end if;

					end if;

				end if;

				if (ie_regra_w	<> 'Q') and (ie_regra_w	<> 'M') then
		
					if (ie_mensal_w = 'S') then
						select	count(*)
						into STRICT	cont_w
						from	repasse_terceiro_item
						where	nr_seq_regra_esp					= nr_sequencia_w
						and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0);
					elsif (ie_mensal_w = 'R') then
						select	count(*)
						into STRICT	cont_w
						from	repasse_terceiro_item
						where	nr_seq_regra_esp					= nr_sequencia_w
						and	PKG_DATE_UTILS.start_of(dt_lancamento, 'month', 0)	= PKG_DATE_UTILS.start_of(dt_referencia_w, 'month', 0);
					end if;	

					if (vl_repasse_w > 0) and
						((IE_MENSAL_w = 'N') or (cont_w = 0)) then
		
						select	coalesce(max(nr_sequencia_item),0) + 1
						into STRICT	nr_sequencia_item_w
						from	repasse_terceiro_item
						where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
						
						select	nextval('repasse_terceiro_item_seq')
						into STRICT	nr_seq_item_w
						;
						
						insert into repasse_terceiro_item(nr_repasse_terceiro,
							nr_sequencia_item,
							vl_repasse,
							dt_atualizacao,
							nm_usuario,
							nr_lote_contabil,
							ds_observacao,
							cd_conta_contabil,
							nr_seq_trans_fin,
							nr_seq_regra,
							cd_medico,
							nr_seq_regra_esp,
							nr_seq_terceiro,
							dt_liberacao,
							nr_sequencia,
							dt_lancamento,
							nr_seq_trans_fin_prov,
							cd_centro_custo_prov,
							cd_centro_custo,
							cd_conta_contabil_prov,
							cd_conta_financ,
							dt_contabil,
							dt_plantao,
							nr_seq_med_plantao,
							qt_minuto,
							nr_seq_tipo,
							ie_participa_piso)
						values (nr_repasse_terceiro_p,
							nr_sequencia_item_w,
							vl_repasse_w,
							clock_timestamp(),
							nm_usuario_p,
							null,
							ds_titulo_w,
							cd_conta_contabil_w,
							nr_seq_trans_fin_w,
							null,
							null,
							nr_sequencia_w,
							nr_seq_terceiro_w,
							clock_timestamp(),
							nr_seq_item_w,
							dt_lanc_item_w,
							nr_seq_trans_fin_prov_w,
							cd_centro_custo_prov_cc_w,
							cd_centro_custo_cc_w,
							cd_conta_contabil_prov_w,
							cd_conta_financ_w,
							dt_contabil_w,
							dt_plantao_w,
							nr_seq_plantao_w,
							qt_minuto_w,
							nr_seq_tipo_regra_esp_w,
							ie_participa_piso_w);
						
						if (IE_VINCULAR_PLANTAO_W	= 'S') then
							if (nr_seq_plantao_w IS NOT NULL AND nr_seq_plantao_w::text <> '') then
								begin
								insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
												dt_atualizacao,
												nm_usuario,
												nr_seq_repasse_item,
												nr_seq_med_plantao)
											values (	nextval('repasse_item_plantao_seq'),
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_item_w,
												nr_seq_plantao_w);
								end;
							else
								begin
								insert into	REPASSE_ITEM_PLANTAO(nr_sequencia,
										dt_atualizacao,
										nm_usuario,
										nr_seq_repasse_item,
										nr_seq_med_plantao)
									SELECT	nextval('repasse_item_plantao_seq'),
										clock_timestamp(),
										nm_usuario_p,
										nr_seq_item_w,
										nr_sequencia
									from	medico_plantao
									where (coalesce(nr_seq_escala_w::text, '') = '' or OBTER_ESCALA_DIARIA(nr_seq_escala_diaria) = nr_seq_escala_w) --lhalves OS298188 em 18/11/2011 Verifica se o plantao e da mesma escala da regra
									and (substr(OBTER_SE_GERA_REPASSE_PLANTAO(nr_repasse_terceiro_p,nr_seq_tipo_plantao),1,255) = 'S' or coalesce(nr_seq_tipo_plantao::text, '') = '')
									and	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
									and (cd_medico = cd_pessoa_fisica_terc_c02_w or coalesce(cd_pessoa_fisica_terc_c02_w,'X') = 'X')
									and	substr(OBTER_SE_TIPO_PLANTAO_REGRA(nr_sequencia_w,nr_seq_tipo_plantao),1,1) = 'S'
									and	cd_estabelecimento			= cd_estabelecimento_w
									and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_periodo_inicial_w and dt_periodo_final_w
									and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 				between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )
									and	ie_item_repasse_w			= 'N'
									and	'S'					= coalesce(IE_VINCULAR_PLANTAO_W,'N')
									and (coalesce(ie_plantao_regra_w,'S') = 'N' or nr_seq_regra_esp = nr_sequencia_w);
								end;		
							end if;
						end if;
					end if;
				end if;
				
			end loop;
			close c04;	
			
		end if;
		
		if (ie_regra_w = 'A') then
			
			open c02;
			loop
			fetch c02 into
				cd_pessoa_fisica_terc_w,
				dt_inicio_vigencia_c02_w,
				dt_fim_vigencia_c02_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				
				vl_performance_w	:= 0;
				qt_total_atend_w	:= 0;
				qt_total_minuto_w	:= 0;
				qt_media_w		:= null;
				qt_tot_tipo_conv_atend_w	:= 0;
				
				open c07;
				loop
				fetch c07 into
					cd_medico_plantao_w,
					qt_minutos_plantao_w,
					dt_ini_c07_w,
					dt_fim_c07_w;
				EXIT WHEN NOT FOUND; /* apply on c07 */
					
					select	count(*)
					into STRICT	qt_atend_w
					from	atendimento_alta b,
						atendimento_paciente a
					where	a.nr_atendimento	= b.nr_atendimento
					--and	a.ie_tipo_convenio	= nvl(ie_tipo_convenio_w,a.ie_tipo_convenio)
					and	b.dt_desfecho		between dt_periodo_inicial_w and dt_periodo_final_w
					and	b.dt_desfecho		between	dt_ini_c07_w and dt_fim_c07_w
					and	substr(obter_dados_usuario_opcao(b.nm_usuario,'C'),1,255) 	= cd_medico_plantao_w
					and	a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,a.cd_estabelecimento)
					and ((b.ie_tipo_orientacao <> 'P')
					or (ie_liberar_desfecho_w  = 'N')
					or  ((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and (coalesce(b.dt_inativacao::text, '') = '')));
					
					qt_total_atend_w	:= coalesce(qt_total_atend_w,0) + coalesce(qt_atend_w,0);
					qt_total_minuto_w	:= coalesce(qt_total_minuto_w,0) + coalesce(qt_minutos_plantao_w,0);
					
					if (coalesce(ie_tipo_convenio_w,0) <> 0) then
						select	count(*)
						into STRICT	qt_tipo_conv_atend_w
						from	atendimento_alta b,
								atendimento_paciente a
						where	a.nr_atendimento	= b.nr_atendimento
						and		a.ie_tipo_convenio	= coalesce(ie_tipo_convenio_w,a.ie_tipo_convenio)
						and		b.dt_desfecho		between dt_periodo_inicial_w and dt_periodo_final_w
						and		b.dt_desfecho		between	dt_ini_c07_w and dt_fim_c07_w
						and		substr(obter_dados_usuario_opcao(b.nm_usuario,'C'),1,255) 	= cd_medico_plantao_w
						and		a.cd_estabelecimento	= coalesce(cd_estabelecimento_w,a.cd_estabelecimento)
						and 	((b.ie_tipo_orientacao <> 'P')
						or (ie_liberar_desfecho_w  = 'N')
						or  	((b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '') and (coalesce(b.dt_inativacao::text, '') = '')));
						
						qt_tot_tipo_conv_atend_w	:= coalesce(qt_tot_tipo_conv_atend_w,0) + coalesce(qt_tipo_conv_atend_w,0);
						
					end if;

				end loop;
				close c07;
				
				SELECT * FROM obter_qt_atend_plantao_fora(	cd_pessoa_fisica_terc_w, cd_estabelecimento_w, nr_sequencia_w, nr_seq_categoria_w, dt_periodo_inicial_w, dt_periodo_final_w, dt_inicio_vigencia_w, dt_fim_vigencia_w, ie_plantao_previsto_w, ie_tipo_convenio_w, qt_total_atend_fora_w, qt_total_min_fora_w) INTO STRICT qt_total_atend_fora_w, qt_total_min_fora_w;
				
				if (coalesce(qt_total_atend_fora_w,0) <> 0) then
					qt_total_atend_w	:= qt_total_atend_w - qt_total_atend_fora_w;
				end if;
				
				if (coalesce(qt_total_min_fora_w,0) <> 0) then
					qt_total_minuto_w := qt_total_minuto_w - qt_total_min_fora_w;
				end if;
				
				if (coalesce(qt_total_minuto_w,0) <> 0) then
					qt_media_w	:= coalesce(qt_total_atend_w,0) / (coalesce(qt_total_minuto_w,0) / 60);
				end if;
				
				if (coalesce(ie_tipo_convenio_w,0) <> 0) then
										
					if (coalesce(qt_total_atend_fora_w,0) <> 0) and (coalesce(qt_tot_tipo_conv_atend_w,0) > coalesce(qt_total_atend_fora_w,0)) then
						qt_tot_tipo_conv_atend_w	:= qt_tot_tipo_conv_atend_w - qt_total_atend_fora_w;
					end if;
				end if;
				
				if (qt_media_w IS NOT NULL AND qt_media_w::text <> '') and (qt_media_w	>= qt_min_atendimento_w) and (qt_media_w	<= qt_max_atendimento_w) then
					
					if (coalesce(ie_tipo_convenio_w,0) <> 0) then
						vl_performance_w	:= (vl_repassar_w * qt_tot_tipo_conv_atend_w);
					else
						vl_performance_w	:= (vl_repassar_w * qt_total_atend_w);
					end if;	

				end if;
				
				if (coalesce(vl_performance_w,0) <> 0) then
				
					select	coalesce(max(nr_sequencia_item),0) + 1
					into STRICT	nr_sequencia_item_w
					from	repasse_terceiro_item
					where	nr_repasse_terceiro	= nr_repasse_terceiro_p;

					/* Conferir se a pessoa e um medico, para evitar problemas de integridade da tabela */

					select	max(a.cd_pessoa_fisica)
					into STRICT	cd_medico_repasse_w
					from	medico a
					where	a.cd_pessoa_fisica	= cd_pessoa_fisica_terc_w;
					
					select	nextval('repasse_terceiro_item_seq')
					into STRICT	nr_seq_item_w
					;
					
					insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
								nr_sequencia_item,
								vl_repasse,
								dt_atualizacao,
								nm_usuario,
								ds_observacao,
								cd_medico,
								nr_seq_terceiro,
								dt_liberacao,
								nr_sequencia,
								nr_seq_tipo,
								nr_seq_trans_fin,
								cd_centro_custo,
								cd_conta_contabil,
								nr_seq_trans_fin_prov,
								cd_centro_custo_prov,
								cd_conta_contabil_prov,
								dt_lancamento,
								dt_contabil,
								ie_participa_piso)
							values (nr_repasse_terceiro_p,
								nr_sequencia_item_w,
								vl_performance_w,
								clock_timestamp(),
								nm_usuario_p,
								ds_titulo_w,
								cd_medico_repasse_w,
								nr_seq_terceiro_w,
								clock_timestamp(),
								nr_seq_item_w,
								nr_seq_tipo_regra_esp_w,
								nr_seq_trans_fin_w,
								cd_centro_custo_w,
								cd_conta_contabil_w,
								nr_seq_trans_fin_prov_w,
								cd_centro_custo_prov_w,
								cd_conta_contabil_prov_w,
								dt_lanc_item_w,
								dt_contabil_w,
								ie_participa_piso_w);
					
					if (IE_VINCULAR_PLANTAO_W	= 'S') then
						begin
						insert	into	REPASSE_ITEM_PLANTAO(nr_sequencia,
								dt_atualizacao,
								nm_usuario,
								nr_seq_repasse_item,
								nr_seq_med_plantao)
							SELECT	nextval('repasse_item_plantao_seq'),
								clock_timestamp(),
								nm_usuario_p,
								nr_seq_item_w,
								nr_sequencia
							from	medico_plantao
							where	substr(OBTER_SE_REGRA_ESP_DIA(CASE WHEN obter_se_feriado(cd_estabelecimento_w,CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )=0 THEN PKG_DATE_UTILS.get_WeekDay(CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END )  ELSE 0 END , nr_sequencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END , CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_final,dt_final_prev)  ELSE dt_final END ),1,255) = 'S'
							and (cd_medico = cd_pessoa_fisica_terc_w or coalesce(cd_pessoa_fisica_terc_w,'X') = 'X')
							and	cd_estabelecimento	= cd_estabelecimento_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_periodo_inicial_w and dt_periodo_final_w
							and	CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END 		between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, CASE WHEN ie_plantao_previsto_w='S' THEN coalesce(dt_inicial,dt_inicial_prev)  ELSE dt_inicial END );
						end;
					end if;			
				end if;	
			end loop;
			close c02;
		end if;
		
		/*Gerar repasse fixo sem plantao*/

		if (ie_regra_w	= 'F') and (ie_somente_plantao_w = 'N') then	
			if (dt_periodo_inicial_w between dt_inicio_vigencia_w and coalesce(dt_fim_vigencia_w, dt_periodo_inicial_w + 1)) then
				vl_repasse_w		:= vl_repassar_w;
			end if;
			
			if (vl_repasse_w <> 0) and
				((IE_MENSAL_w = 'N') or (cont_w = 0)) then

				select	coalesce(max(nr_sequencia_item),0) + 1
				into STRICT	nr_sequencia_item_w
				from	repasse_terceiro_item
				where	nr_repasse_terceiro	= nr_repasse_terceiro_p;
				
				select	nextval('repasse_terceiro_item_seq')
				into STRICT	nr_seq_item_w
				;
				
				if (coalesce(cd_pessoa_fisica_w,'X') = 'X') then
					cd_pessoa_fisica_w	:= null;
				end if;
				
				/* Conferir se a pessoa e um medico, para evitar problemas de integridade da tabela */

				select	max(a.cd_pessoa_fisica)
				into STRICT	cd_medico_repasse_w
				from	medico a
				where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w;
				
				insert into REPASSE_TERCEIRO_ITEM(nr_repasse_terceiro,
					nr_sequencia_item,
					vl_repasse,
					dt_atualizacao,
					nm_usuario,
					nr_lote_contabil,
					ds_observacao,
					cd_conta_contabil,
					nr_seq_trans_fin,
					nr_seq_regra,
					cd_medico,
					nr_seq_regra_esp,
					nr_seq_terceiro,
					dt_liberacao,
					nr_sequencia,
					dt_lancamento,
					nr_seq_trans_fin_prov,
					cd_centro_custo_prov,
					cd_centro_custo,
					cd_conta_contabil_prov,
					qt_minuto,
					cd_conta_financ,
					dt_contabil,
					dt_plantao,
					nr_seq_med_plantao,
					nr_seq_tipo,
					ie_participa_piso)
				values (nr_repasse_terceiro_p,
					nr_sequencia_item_w,
					vl_repasse_w,
					clock_timestamp(),
					nm_usuario_p,
					null,
					ds_titulo_w,
					cd_conta_contabil_w,
					nr_seq_trans_fin_w,
					null,
					cd_medico_repasse_w,
					nr_sequencia_w,
					nr_seq_terceiro_w,
					clock_timestamp(),
					nr_seq_item_w,
					dt_lanc_item_w,
					nr_seq_trans_fin_prov_w,
					cd_centro_custo_prov_cc_w,
					cd_centro_custo_cc_w,
					cd_conta_contabil_prov_w,
					0,
					cd_conta_financ_w,
					dt_contabil_w,
					null,
					null,
					nr_seq_tipo_regra_esp_w,
					ie_participa_piso_w);
			end if;
		end if;
	--Encerra o loop do cursor de centros de custo adicionais
	end loop;
	
	--Rateia os valores dos itens de repasse de acordo com a quantidade de centro de custos adicionais cadastrados na regra
	if (cont_regra_cc_w > 0) then
		
		select	sum(vl_repasse)
		into STRICT	vl_repasse_antes_rateio_w
		from	repasse_terceiro_item
		where	nr_repasse_terceiro	= nr_repasse_terceiro_p
		and	nr_seq_regra_esp	= nr_sequencia_w;
		
		vl_repasse_antes_rateio_w	:= dividir_sem_round(vl_repasse_antes_rateio_w,cont_regra_cc_w);
		
		--Retorna os itens de repasse que devem ter o seu valor rateado.
		for  r_c_item_repasse in c_item_repasse(nr_repasse_terceiro_p, nr_sequencia_w) loop
			
			nr_seq_rep_item_w	:= r_c_item_repasse.nr_sequencia;
			
			update	repasse_terceiro_item
			set	vl_repasse		= dividir_sem_round(vl_repasse,cont_regra_cc_w)
			where	nr_sequencia		= nr_seq_rep_item_w
			and	nr_repasse_terceiro	= nr_repasse_terceiro_p;
			
		end loop;
		
		select	sum(vl_repasse)
		into STRICT	vl_repasse_apos_rateio_w
		from	repasse_terceiro_item
		where	nr_repasse_terceiro	= nr_repasse_terceiro_p
		and	nr_seq_regra_esp	= nr_sequencia_w;
		
		--Verifica se houve diferenca entre o valor total do repasse e o valor rateado e ajusta para o ultimo item
		if (vl_repasse_apos_rateio_w > vl_repasse_antes_rateio_w) then
			update	repasse_terceiro_item
			set	vl_repasse		= vl_repasse - (vl_repasse_apos_rateio_w - vl_repasse_antes_rateio_w)
			where	nr_sequencia		= nr_seq_rep_item_w
			and	nr_repasse_terceiro	= nr_repasse_terceiro_p;
		elsif (vl_repasse_apos_rateio_w < vl_repasse_antes_rateio_w) then			
			update	repasse_terceiro_item
			set	vl_repasse		= vl_repasse + (vl_repasse_antes_rateio_w - vl_repasse_apos_rateio_w)
			where	nr_sequencia		= nr_seq_rep_item_w
			and	nr_repasse_terceiro	= nr_repasse_terceiro_p;
		end if;		
	end if;
	
end loop;
close c01;

/* ahoffelder - OS 282062 - 03/02/2011 */

if (ie_acao_p in (1,2,3)) then
	ie_gerar_tributos_w := obter_param_usuario(89, 28, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_tributos_w);
	CALL Gerar_Venc_Repasse(nr_repasse_terceiro_p,ie_gerar_tributos_w,nm_usuario_p,'N');
end if;

if (ie_acao_p in (2,3)) then
	CALL Altera_Status_Repasse_Terceiro(nr_repasse_terceiro_p,nm_usuario_p,'N');
	CALL gerar_eventos_repasse(nr_repasse_terceiro_p,'RF',nm_usuario_p,cd_estabelecimento_w);
end if;

select	count(*)
into STRICT	qt_tributo_w
from	repasse_terc_venc_trib b,
	repasse_terceiro_venc a
where	a.nr_repasse_terceiro	= nr_repasse_terceiro_p
and	b.nr_seq_rep_venc	= a.nr_sequencia;

if (ie_acao_p = 3) and (qt_tributo_w = 0) then
	CALL gerar_tributos_repasse(nr_repasse_terceiro_p,nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_repasse_especial (nr_repasse_terceiro_p bigint, nm_usuario_p text, ie_acao_p bigint, nr_seq_regra_p bigint default null) FROM PUBLIC;

