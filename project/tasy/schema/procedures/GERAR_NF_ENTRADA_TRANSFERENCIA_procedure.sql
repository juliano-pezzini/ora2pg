-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nf_entrada_transferencia ( nr_nota_fiscal_p bigint, cd_serie_nf_p text, nr_ordem_compra_p bigint, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_setor_digitacao_p bigint, dt_emissao_p timestamp, nm_usuario_p text, ie_consistidos text, ie_item_nf text, nr_seq_modelo_p bigint, cd_estabelecimento_p bigint, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text, ds_erro_item_p INOUT text, ds_erro_nota_p INOUT text) AS $body$
DECLARE


dt_liberacao_w			timestamp;
dt_aprovacao_w			timestamp;
nr_sequencia_w			bigint;
cd_cgc_emitente_w		varchar(14);
cd_pessoa_fisica_w		varchar(10);
cd_condicao_pagamento_w		bigint;
ie_frete_w			varchar(01);
cd_moeda_w			integer;
vl_despesa_acessoria_nota_w	double precision	:= 0;
vl_descontos_w			double precision	:= 0;
vl_frete_w			double precision	:= 0;
dt_atualizacao_w			timestamp 		:= clock_timestamp();
ie_tipo_ordem_w			varchar(01);
cd_estab_transf_w			smallint;
cd_cgc_estabelecimento_w		varchar(14);
nr_sequencia_nf_w			bigint;
nr_ordem_compra_w		bigint;
nr_item_oci_w			integer;
nr_item_oci_ww			integer;
cd_material_w			integer;
cd_unidade_medida_compra_w	varchar(30);
vl_unitario_item_nf_w		double precision	:= 0;
pr_descontos_w			double precision;
cd_local_estoque_w		integer;
ds_material_direto_w		varchar(255);
cd_centro_custo_w			integer;
cd_centro_conta_w			integer;
cd_conta_contabil_w		varchar(20)	:= null;
cd_conta_contabil_ww		varchar(20)	:= null;
nr_seq_proj_rec_w			bigint;
pr_desc_financ_w			double precision;
nr_solic_compra_w			bigint;
dt_prevista_entrega_w		timestamp;
nr_seq_unidade_adic_w		bigint;
nr_seq_criterio_rateio_w		bigint;
vl_desconto_oci_w			double precision;
nr_seq_ordem_serv_w		bigint;
nr_seq_proj_gpi_w			bigint;
nr_seq_etapa_gpi_w		bigint;
nr_seq_conta_gpi_w		bigint;
nr_contrato_w			bigint;
cd_local_direto_w			integer;
cd_unidade_medida_estoque_w	varchar(30);
qt_conv_compra_estoque_w		double precision;
cd_material_estoque_w		integer	:= null;
qt_prevista_entrega_w		double precision;
qt_conversao_w			double precision;
qt_item_estoque_w			double precision	:= 0;
vl_total_item_nf_w			double precision	:= 0;
vl_total_item_unit_nf_w			double precision	:= 0;
nr_item_nf_w			integer;
vl_desconto_w			double precision	:= 0;
vl_liquido_w			double precision	:= 0;
nr_seq_conta_financeira_w		bigint	:= null;
ie_tipo_conta_w			integer	:= 2;
nr_seq_nota_transf_w		bigint;
cd_estab_oc_w			smallint;
ds_barra_w			varchar(255);
ds_validade_w			varchar(255);
nr_seq_lote_w			bigint;
nr_seq_reg_cb_w			bigint;
ds_lote_fornec_w			varchar(20);
nr_seq_nf_saida_w			bigint;
ie_calcula_nf_w			varchar(1);
dt_inicio_garantia_w		timestamp;
dt_fim_garantia_w			timestamp;
ie_tipo_local_w			varchar(5);
ie_gera_lote_fornec_w		varchar(1);
ie_grava_obs_lote_w		varchar(1);
cd_operacao_estoque_w		smallint;
ie_consignado_operacao_w	varchar(1) := '0';
cd_fornecedor_consig_w		varchar(14);
ie_consistiu_lote_w			varchar(1) := 'N';
ie_indeterminado_w			material_lote_fornec.ie_validade_indeterminada%type;

ds_erro_w			varchar(255);
ds_erro_item_w			varchar(255) := '';
ds_erro_nota_w			varchar(255) := '';

qt_itens_nota_w			bigint;
nr_seq_marca_w			material_lote_fornec.nr_seq_marca%type;
/*OS 1725476 - Incluido quando for emissao propria a partir de uma Ordem de Compra*/

ie_emissao_propria_w 		varchar(1);
ie_tipo_nota_w 			smallint := 0;
ie_tipo_nota_ww			nota_fiscal.ie_tipo_nota%type;
nr_nota_fiscal_w		serie_nota_fiscal.nr_ultima_nf%type;
vl_total_round_w		double precision;
/**********************************************************************************/

c02 CURSOR FOR
SELECT	a.nr_item_oci,
	a.cd_material,
	a.cd_unidade_medida_compra,
	a.vl_unitario_material,
	coalesce(a.pr_descontos,0),
	coalesce(a.cd_local_estoque,cd_local_direto_w),
	substr(a.ds_material_direto,1,255),
	a.cd_centro_custo,
	a.cd_conta_contabil,
	a.nr_seq_proj_rec,
	coalesce(a.pr_desc_financ,0),
	a.nr_solic_compra,
	b.dt_prevista_entrega,
	a.nr_seq_unidade_adic,
	a.nr_seq_criterio_rateio,
	coalesce(a.vl_desconto,0),
	a.nr_seq_ordem_serv,
	a.nr_seq_proj_gpi,
	a.nr_seq_etapa_gpi,
	a.nr_seq_conta_gpi,
	a.nr_contrato,
	a.dt_inicio_garantia,
	a.dt_fim_garantia
from 	ordem_compra_item_entrega b,
	ordem_compra_item a
where	a.nr_ordem_compra 	= b.nr_ordem_compra
and	a.nr_item_oci 		= b.nr_item_oci
and	a.nr_ordem_compra	= nr_ordem_compra_p
and	coalesce(a.qt_material,0) > coalesce(a.qt_material_entregue,0)
and	coalesce(a.dt_reprovacao::text, '') = ''
and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
and	coalesce(b.dt_cancelamento::text, '') = ''
group by a.nr_ordem_compra,
	a.nr_item_oci,
	a.cd_material,
	a.cd_unidade_medida_compra,
	a.vl_unitario_material,
	coalesce(a.pr_descontos,0),
	coalesce(a.cd_local_estoque,cd_local_direto_w),
	substr(a.ds_material_direto,1,255),
	a.cd_centro_custo,
	a.cd_conta_contabil,
	a.nr_seq_proj_rec,
	coalesce(a.pr_desc_financ,0),
	a.nr_solic_compra,
	b.dt_prevista_entrega,
	a.nr_seq_unidade_adic,
	a.nr_seq_criterio_rateio,
	coalesce(a.vl_desconto,0),
	a.nr_seq_ordem_serv,
	a.nr_seq_proj_gpi,
	a.nr_seq_etapa_gpi,
	a.nr_seq_conta_gpi,
	a.nr_contrato,
	a.dt_inicio_garantia,
	a.dt_fim_garantia
having	sum(b.qt_prevista_entrega) - max(obter_qt_oci_trans_nota(a.nr_ordem_compra, a.nr_item_oci,'E')) > 0
order by a.nr_item_oci;

c03 CURSOR FOR
SELECT	coalesce(nr_sequencia,0)
from	ordem_compra_item_cb
where	nr_ordem_compra  = nr_ordem_compra_p
and	ie_atende_recebe = 'R';

c04 CURSOR FOR
SELECT	nr_ordem_compra,
	nr_item_oci,
	cd_material,
	qt_item_nf,
	cd_unidade_medida_compra,
	cd_lote_fabricacao,
	to_char(dt_validade,'dd/mm/yyyy') ds_validade,
	ie_indeterminado,
	cd_barra_material,
	vl_unitario_item_nf,
	coalesce(pr_desconto,0),
	vl_desconto,
	dt_entrega_ordem,
	cd_local_estoque,
	cd_fornecedor_consig,
	nr_seq_marca
from	nota_fiscal_item
where	nr_sequencia = nr_seq_nf_saida_w;


BEGIN
select	dt_liberacao,
	dt_aprovacao,
	cd_cgc_fornecedor,
	cd_pessoa_fisica,
	cd_condicao_pagamento,
	coalesce(ie_frete,'F'),
	cd_moeda,
	coalesce(vl_despesa_acessoria, 0),
	coalesce(ie_tipo_ordem,'N'),
	cd_estab_transf,
	coalesce(vl_frete,0) vl_frete,
	cd_estabelecimento
into STRICT	dt_liberacao_w,
	dt_aprovacao_w,
	cd_cgc_emitente_w,
	cd_pessoa_fisica_w,
	cd_condicao_pagamento_w,
	ie_frete_w,
	cd_moeda_w,
	vl_despesa_acessoria_nota_w,
	ie_tipo_ordem_w,
	cd_estab_transf_w,
	vl_frete_w,
	cd_estab_oc_w
from	ordem_compra
where	nr_ordem_compra = nr_ordem_compra_p;

if (coalesce(dt_liberacao_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(181730);
elsif (coalesce(dt_aprovacao_w::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(181731);
elsif (ie_tipo_ordem_w <> 'T') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(181732);
end if;

begin
select	min(cd_local_estoque)
into STRICT	cd_local_direto_w
from	local_estoque
where	ie_tipo_local = 8;
exception
	when others then
		cd_local_direto_w := 1;
end;

ie_calcula_nf_w		:= substr(coalesce(obter_valor_param_usuario(146, 36, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),1,1);
ie_gera_lote_fornec_w	:= substr(coalesce(obter_valor_param_usuario(40, 18, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),1,1);
ie_grava_obs_lote_w	:= substr(coalesce(obter_valor_param_usuario(40, 144, Obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p),'N'),1,1);

select	cd_cgc
into STRICT	cd_cgc_estabelecimento_w
from	estabelecimento
where	cd_estabelecimento = cd_estab_oc_w;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;

select (coalesce(max(nr_sequencia_nf),0)+1)
into STRICT	nr_sequencia_nf_w
from	nota_fiscal
where	cd_estabelecimento		= cd_estab_oc_w
and	cd_cgc_emitente		= coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w)
and	nr_nota_fiscal		= nr_nota_fiscal_p
and	cd_serie_nf		= cd_serie_nf_p;

select	coalesce(ie_recusa,'')
into STRICT	ie_emissao_propria_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nota_p;

--Se a operacao da nota for de origem propria buscar o nr_sequencia_nf_w da ultima sequencia da serie da nota

--Definir tipo de nota 5 quando for emissao propria. Nos demais casos, ficara 0
nr_nota_fiscal_w := nr_nota_fiscal_p;
if (ie_emissao_propria_w = 'S') then
	SELECT (coalesce(nr_ultima_nf, 0)+1)
	into STRICT nr_nota_fiscal_w
	from serie_nota_fiscal
	WHERE cd_serie_nf = cd_serie_nf_p
	AND cd_estabelecimento = cd_estabelecimento_p;
	ie_tipo_nota_w := 5;
end if;

select	coalesce(obter_valor_desconto_ordem(nr_ordem_compra_p),0)
into STRICT	vl_descontos_w
;

if (ie_tipo_ordem_w = 'T') and (cd_estab_transf_w IS NOT NULL AND cd_estab_transf_w::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_nota_transf_w
	from	nota_fiscal
	where	cd_estabelecimento		= cd_estab_transf_w
	and	nr_ordem_compra		= nr_ordem_compra_p;
end if;

select	coalesce(cd_operacao_estoque,0)
into STRICT	cd_operacao_estoque_w
from	operacao_nota
where	cd_operacao_nf = cd_operacao_nota_p;

select	ie_consignado
into STRICT	ie_consignado_operacao_w
from	operacao_estoque
where	cd_operacao_estoque = cd_operacao_estoque_w;

if (ie_emissao_propria_w = 'S') then
ie_tipo_nota_ww := 'EP';
else

select CASE WHEN coalesce(cd_pessoa_fisica_w::text, '') = '' THEN 'EN'  ELSE 'EF' END
into STRICT ie_tipo_nota_ww
;

end if;

insert into nota_fiscal(
	cd_estabelecimento,		cd_serie_nf,			cd_cgc_emitente,
	nr_nota_fiscal,			nr_sequencia_nf,			cd_operacao_nf,
	ie_acao_nf,			dt_entrada_saida,			dt_emissao,
	ie_emissao_nf,			ie_tipo_frete,			vl_mercadoria,
	vl_total_nota,			qt_peso_bruto,			qt_peso_liquido,
	dt_atualizacao,			nm_usuario,			cd_condicao_pagamento,
	dt_contabil,			cd_cgc,				cd_pessoa_fisica,
	vl_ipi,				vl_descontos,			vl_frete,
	vl_seguro,			nr_nota_referencia,			vl_despesa_acessoria,
	cd_serie_referencia,		cd_natureza_operacao,		dt_atualizacao_estoque,
	vl_desconto_rateio,			ie_situacao,			nr_ordem_compra,
	nr_lote_contabil,			nr_sequencia,			nr_sequencia_ref,
	cd_moeda,			vl_conv_moeda,			ie_entregue_bloqueto,
	cd_setor_digitacao,			ie_tipo_nota,			nr_seq_modelo)
values (	cd_estab_oc_w,	 		cd_serie_nf_p,			coalesce(cd_cgc_emitente_w, cd_cgc_estabelecimento_w),
 	nr_nota_fiscal_w,			nr_sequencia_nf_w, 		cd_operacao_nota_p,
 	'1',				dt_atualizacao_w, 			coalesce(dt_emissao_p, trunc(clock_timestamp())),
 	'0',			 	ie_frete_w,		 	0,
 	0,			 	0,			 	0,
 	dt_atualizacao_w,			nm_usuario_p,		 	cd_condicao_pagamento_w,
 	null,			 	cd_cgc_emitente_w,	 	cd_pessoa_fisica_w,
 	0,			 	vl_descontos_w,			vl_frete_w,
 	0,			 	null,				coalesce(vl_despesa_acessoria_nota_w, 0),
 	null,			 	cd_natureza_operacao_p,	 	null,
 	0,			 	'1',	 			nr_ordem_compra_p,
 	0,			 	nr_sequencia_w,			null,
	cd_moeda_w,			1,				'N',
	cd_setor_digitacao_p,		ie_tipo_nota_ww, 	nr_seq_modelo_p);


if (ie_consistidos = 'S') or (ie_item_nf = 1) then
	begin
	open c03;
	loop
	fetch c03 into
		nr_seq_reg_cb_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin
		select	coalesce(max(nr_item_oci),0),
			coalesce(max(cd_material),0),
			coalesce(max(qt_material),0),
			coalesce(max(nr_seq_lote),0),
			coalesce(max(cd_unidade_medida_compra),0)
		into STRICT	nr_item_oci_ww,
			cd_material_w,
			qt_prevista_entrega_w,
			nr_seq_lote_w,
			cd_unidade_medida_compra_w
		from	ordem_compra_item_cb
		where	nr_sequencia = nr_seq_reg_cb_w;

		if (nr_seq_lote_w > 0) then
			begin
			select	to_char(dt_validade,'dd/mm/yyyy'),
				CASE WHEN coalesce(cd_barra_material,'X')='X' THEN  lpad(nr_sequencia || nr_digito_verif,11,0)  ELSE cd_barra_material END  ds_barra,
				ds_lote_fornec,
				nr_seq_marca
			into STRICT	ds_validade_w,
				ds_barra_w,
				ds_lote_fornec_w,
				nr_seq_marca_w
			from	material_lote_fornec
			where	nr_sequencia = nr_seq_lote_w;
			end;
			
			if (coalesce(ds_validade_w::text, '') = '') then
				ie_indeterminado_w := 'S';
			else
				ie_indeterminado_w := 'N';		
			end if;	
		else
			nr_seq_lote_w	:= '';
			ds_barra_w	:= '';
			ds_validade_w	:= '';
			nr_seq_marca_w	:= null;
		end if;

		if (nr_item_oci_ww > 0) then
			begin
			select	max(a.nr_item_oci),
				max(a.vl_unitario_material),
				max(coalesce(a.pr_descontos,0)),
				max(coalesce(a.cd_local_estoque,cd_local_direto_w)),
				max(substr(a.ds_material_direto,1,255)),
				max(a.cd_centro_custo),
				max(a.cd_conta_contabil),
				max(a.nr_seq_proj_rec),
				max(coalesce(a.pr_desc_financ,0)),
				max(a.nr_solic_compra),
				max(b.dt_prevista_entrega),
				max(a.nr_seq_unidade_adic),
				max(a.nr_seq_criterio_rateio),
				max(coalesce(a.vl_desconto,0)),
				max(a.nr_seq_ordem_serv),
				max(a.nr_seq_proj_gpi),
				max(a.nr_seq_etapa_gpi),
				max(a.nr_seq_conta_gpi),
				max(a.nr_contrato),
				max(a.dt_inicio_garantia),
				max(a.dt_fim_garantia)
			into STRICT	nr_item_oci_w,
				vl_unitario_item_nf_w,
				pr_descontos_w,
				cd_local_estoque_w,
				ds_material_direto_w,
				cd_centro_custo_w,
				cd_conta_contabil_w,
				nr_seq_proj_rec_w,
				pr_desc_financ_w,
				nr_solic_compra_w,
				dt_prevista_entrega_w,
				nr_seq_unidade_adic_w,
				nr_seq_criterio_rateio_w,
				vl_desconto_oci_w,
				nr_seq_ordem_serv_w,
				nr_seq_proj_gpi_w,
				nr_seq_etapa_gpi_w,
				nr_seq_conta_gpi_w,
				nr_contrato_w,
				dt_inicio_garantia_w,
				dt_fim_garantia_w
			from 	ordem_compra_item_entrega b,
				ordem_compra_item a
			where	a.nr_ordem_compra 	= b.nr_ordem_compra
			and	a.nr_item_oci		= nr_item_oci_ww
			and	a.nr_item_oci 		= b.nr_item_oci
			and	a.nr_ordem_compra		= nr_ordem_compra_p
			and	coalesce(a.qt_material,0) > coalesce(a.qt_material_entregue,0)
			and (coalesce(qt_prevista_entrega,0) - coalesce(qt_real_entrega,0)) > 0
			and	coalesce(a.dt_reprovacao::text, '') = ''
			and	(a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '')
			and	coalesce(b.dt_cancelamento::text, '') = '';

			if (coalesce(cd_material_w,0) > 0) then
				select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
						qt_conv_compra_estoque,
						cd_material_estoque
				into STRICT	cd_unidade_medida_estoque_w,
						qt_conv_compra_estoque_w,
						cd_material_estoque_w
				from 	material
				where	cd_material = cd_material_w;


				if (cd_unidade_medida_compra_w = cd_unidade_medida_estoque_w) then
					qt_item_estoque_w	:= qt_prevista_entrega_w;
				else
					qt_item_estoque_w	:= obter_quantidade_convertida(cd_material_w,qt_prevista_entrega_w,cd_unidade_medida_compra_w,'UME','N');
				end if;

				if (coalesce(nr_seq_unidade_adic_w, 0) > 0) then
					select	qt_conversao
					into STRICT	qt_conversao_w
					from	unidade_medida_adic_compra
					where	nr_sequencia = nr_seq_unidade_adic_w;
					qt_item_estoque_w	:= qt_prevista_entrega_w * qt_conversao_w;
				end if;
				
				if (nr_seq_nota_transf_w IS NOT NULL AND nr_seq_nota_transf_w::text <> '') then
					begin
						select vl_nf
						into STRICT    vl_unitario_item_nf_w
						from (  SELECT	coalesce(vl_unitario_item_nf,0) vl_nf
											from	nota_fiscal_item
											where	nr_ordem_compra	= nr_ordem_compra_p
											and	nr_item_oci	= nr_item_oci_w
											order by nr_sequencia desc ) alias2 LIMIT 1;
						exception
						when others then
							vl_unitario_item_nf_w := 0;
					end;
				end if;

				vl_total_item_nf_w	:= (qt_prevista_entrega_w * vl_unitario_item_nf_w);

				--Variavel criada para que o calculo seja feito com 4 casas decimais, pois estava sendo gerado o valor unitario errado do material quanto exigia quebra por lote fornecedor
				vl_total_item_unit_nf_w		:= coalesce((qt_prevista_entrega_w * vl_unitario_item_nf_w),0);

				vl_desconto_w		:= (vl_total_item_nf_w * pr_descontos_w) / 100 + coalesce(vl_desconto_oci_w,0);
				vl_liquido_w		:= vl_total_item_nf_w - vl_desconto_w;
				vl_unitario_item_nf_w	:= dividir(vl_total_item_unit_nf_w,qt_prevista_entrega_w);

				if (nm_usuario_p = '') then
					insert into log_tasy(
						dt_atualizacao,
						nm_usuario,
						cd_log,
						ds_log)
					values (	clock_timestamp(),
						'',
						169,
						'cd_material_w = ' || cd_material_w || chr(10)||chr(13)
						|| 'nr_item_oci_ww = ' || nr_item_oci_ww || chr(10)||chr(13)
						|| 'nr_ordem_compra_p = ' || nr_ordem_compra_p || chr(10)||chr(13)
						|| 'qt_prevista_entrega_w = ' || qt_prevista_entrega_w || chr(10)||chr(13)
						|| 'vl_unitario_item_nf_w = ' || vl_unitario_item_nf_w || chr(10)||chr(13)
						|| 'vl_total_item_nf_w = ' || vl_total_item_nf_w || chr(10)||chr(13)
						|| 'pr_descontos_w = ' || pr_descontos_w || chr(10)||chr(13)
						|| 'vl_desconto_oci_w = ' || vl_desconto_oci_w || chr(10)||chr(13)
						|| 'vl_desconto_w = ' || vl_desconto_w || chr(10)||chr(13)
						|| 'vl_liquido_w = ' || vl_liquido_w);
				end if;

				select (coalesce(max(nr_item_nf),0)+1)
				into STRICT	nr_item_nf_w
				from	nota_fiscal_item
				where nr_sequencia = nr_sequencia_w;

				nr_seq_conta_financeira_w := obter_conta_financeira(
					'S', cd_estab_oc_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, null, null, null, nr_seq_proj_rec_w, null, cd_pessoa_fisica_w, null, null, null, null, null, null, null, null, null, null, null);

				if (nr_seq_conta_financeira_w = 0) then
					nr_seq_conta_financeira_w := null;
				end if;


				cd_centro_conta_w := cd_centro_custo_w;
				if (coalesce(cd_local_estoque_w,0) > 0) then
					select	ie_tipo_local
					into STRICT	ie_tipo_local_w
					from	local_estoque
					where	cd_local_estoque = cd_local_estoque_w;
				else
					ie_tipo_local_w := '0';
				end if;
				if (coalesce(cd_centro_custo_w::text, '') = '') and (ie_tipo_local_w <> '8') then
					ie_tipo_conta_w	:= 2;
				else
					ie_tipo_conta_w	:= 3;
				end if;

				SELECT * FROM define_conta_material(
					cd_estab_oc_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(dt_atualizacao_w), cd_conta_contabil_w, cd_centro_conta_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_conta_w;

				if (coalesce(cd_conta_contabil_w, 'X') = 'X') or (coalesce(cd_conta_contabil_w, 'X') <> coalesce(cd_conta_contabil_ww, 'X')) then
					cd_conta_contabil_ww	:= cd_conta_contabil_w;
				end if;


				if (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '') and (coalesce(nr_seq_ordem_serv_w::text, '') = '') then
					select	nr_seq_ordem_serv
					into STRICT	nr_seq_ordem_serv_w
					from	solic_compra
					where	nr_solic_compra	= nr_solic_compra_w;
				end if;

				if (ie_consignado_operacao_w > 0) and (coalesce(nr_seq_lote_w,0) > 0) then
					select	cd_cgc_fornec
					into STRICT	cd_fornecedor_consig_w
					from	material_lote_fornec
					where	nr_sequencia = nr_seq_lote_w;
				end if;

				insert into nota_fiscal_item(
					cd_estabelecimento,
					cd_cgc_emitente,
					cd_serie_nf,
					nr_nota_fiscal,
					nr_sequencia_nf,
					nr_item_nf,
					cd_natureza_operacao,
					qt_item_nf,
					vl_unitario_item_nf,
					vl_total_item_nf,
					dt_atualizacao,
					nm_usuario,
					vl_frete,
					vl_desconto,
					vl_despesa_acessoria,
					cd_material,
					cd_local_estoque,
					ds_complemento,
					cd_unidade_medida_compra,
					qt_item_estoque,
					cd_unidade_medida_estoque,
					cd_conta_contabil,
					vl_desconto_rateio,
					vl_seguro,
					cd_centro_custo,
					cd_material_estoque,
					nr_ordem_compra,
					nr_sequencia,
					vl_liquido,
					pr_desconto,
					nr_item_oci,
					dt_entrega_ordem,
					nr_seq_conta_financ,
					nr_seq_proj_rec,
					pr_desc_financ,
					nr_seq_unidade_adic,
					nr_seq_proj_gpi,
					nr_seq_etapa_gpi,
					nr_seq_conta_gpi,
					nr_contrato,
					cd_lote_fabricacao,
					dt_validade,
					dt_inicio_garantia,
					dt_fim_garantia,
					nr_seq_lote_fornec,
					cd_fornecedor_consig,
					nr_seq_marca,
					cd_sequencia_parametro,
					ie_indeterminado)
				values (	cd_estab_oc_w,
					coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w),
					cd_serie_nf_p,
					nr_nota_fiscal_p,
					nr_sequencia_nf_w,
					nr_item_nf_w,
					cd_natureza_operacao_p,
					qt_prevista_entrega_w,
					vl_unitario_item_nf_w,
					vl_total_item_nf_w,
					dt_atualizacao_w,
					nm_usuario_p,
					vl_frete_w,
					coalesce(vl_desconto_w,0),
					0,
					cd_material_w,
					cd_local_estoque_w,
					ds_material_direto_w,
					cd_unidade_medida_compra_w,
					qt_item_estoque_w,
					cd_unidade_medida_estoque_w,
					cd_conta_contabil_w,
					0,
					0,
					cd_centro_custo_w,
					cd_material_estoque_w,
					nr_ordem_compra_p,
					nr_sequencia_w,
					vl_liquido_w,
					pr_descontos_w,
					nr_item_oci_w,
					dt_prevista_entrega_w,
					nr_seq_conta_financeira_w,
					nr_seq_proj_rec_w,
					pr_desc_financ_w,
					nr_seq_unidade_adic_w,
					nr_seq_proj_gpi_w,
					nr_seq_etapa_gpi_w,
					nr_seq_conta_gpi_w,
					nr_contrato_w,
					ds_lote_fornec_w,
					ds_validade_w,
					dt_inicio_garantia_w,
					dt_fim_garantia_w,
					nr_seq_lote_w,
					cd_fornecedor_consig_w,
					nr_seq_marca_w,
					philips_contabil_pck.get_parametro_conta_contabil,
					ie_indeterminado_w);

					if (ds_barra_w IS NOT NULL AND ds_barra_w::text <> '') then
						begin
						update  nota_fiscal_item
						set	cd_barra_material = ds_barra_w
						where   nr_item_nf = nr_item_nf_w
						and	nr_sequencia = nr_sequencia_w
						and	(cd_material IS NOT NULL AND cd_material::text <> '')
						and     coalesce(ds_barras::text, '') = '';
						end;
					end if;

				if (nr_seq_criterio_rateio_w IS NOT NULL AND nr_seq_criterio_rateio_w::text <> '') then
					CALL ratear_item_nf(nr_sequencia_w, nr_item_nf_w, nr_seq_criterio_rateio_w, nm_usuario_p, trunc(dt_atualizacao_w));
				end if;
			end if;
		end;
		end if;
	end;
	end loop;
	close c03;
	end;
elsif (ie_item_nf = 0) then
	begin
	open C02;
	loop
	fetch C02 into
		nr_item_oci_w,
		cd_material_w,
		cd_unidade_medida_compra_w,
		vl_unitario_item_nf_w,
		pr_descontos_w,
		cd_local_estoque_w,
		ds_material_direto_w,
		cd_centro_custo_w,
		cd_conta_contabil_w,
		nr_seq_proj_rec_w,
		pr_desc_financ_w,
		nr_solic_compra_w,
		dt_prevista_entrega_w,
		nr_seq_unidade_adic_w,
		nr_seq_criterio_rateio_w,
		vl_desconto_oci_w,
		nr_seq_ordem_serv_w,
		nr_seq_proj_gpi_w,
		nr_seq_etapa_gpi_w,
		nr_seq_conta_gpi_w,
		nr_contrato_w,
		dt_inicio_garantia_w,
		dt_fim_garantia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
			qt_conv_compra_estoque,
			cd_material_estoque
		into STRICT	cd_unidade_medida_estoque_w,
			qt_conv_compra_estoque_w,
			cd_material_estoque_w
		from 	material
		where	cd_material = cd_material_w;


		select	coalesce(sum(a.qt_prevista_entrega) - max(obter_qt_oci_trans_nota(a.nr_ordem_compra, a.nr_item_oci,'E')),0)
		into STRICT	qt_prevista_entrega_w
		from	ordem_compra_item_entrega a,
			ordem_compra_item b
		where	a.nr_ordem_compra	= nr_ordem_compra_p
		and	a.nr_item_oci			= nr_item_oci_w
		and	b.nr_ordem_compra 		= a.nr_ordem_compra
		and	a.nr_item_oci			= b.nr_item_oci
		and	a.dt_prevista_entrega 	= dt_prevista_entrega_w
		and	coalesce(a.dt_cancelamento::text, '') = '';


		if (cd_unidade_medida_compra_w = cd_unidade_medida_estoque_w) then
			qt_item_estoque_w	:= qt_prevista_entrega_w;
		else
			qt_item_estoque_w	:= obter_quantidade_convertida(cd_material_w,qt_prevista_entrega_w,cd_unidade_medida_compra_w,'UME','N');
		end if;

		if (coalesce(nr_seq_unidade_adic_w, 0) > 0) then
			select	qt_conversao
			into STRICT	qt_conversao_w
			from	unidade_medida_adic_compra
			where	nr_sequencia 	= nr_seq_unidade_adic_w;
			qt_item_estoque_w	:= qt_prevista_entrega_w * qt_conversao_w;
		end if;

		if (nr_seq_nota_transf_w IS NOT NULL AND nr_seq_nota_transf_w::text <> '') then
			begin
				select vl_nf
				into STRICT    vl_unitario_item_nf_w
				from (  SELECT	coalesce(vl_unitario_item_nf,0) vl_nf
						from	nota_fiscal_item
						where	nr_ordem_compra	= nr_ordem_compra_p
						and	nr_item_oci	= nr_item_oci_w
						order by nr_sequencia desc ) alias2 LIMIT 1;
				exception
				when others then
					vl_unitario_item_nf_w := 0;
			end;
		end if;


		vl_total_item_nf_w	:= (qt_prevista_entrega_w * vl_unitario_item_nf_w);
		vl_desconto_w		:= (vl_total_item_nf_w * pr_descontos_w) / 100 + coalesce(vl_desconto_oci_w,0);
		vl_liquido_w		:= vl_total_item_nf_w - vl_desconto_w;
		vl_unitario_item_nf_w	:= dividir(vl_total_item_nf_w,qt_prevista_entrega_w);

		select (coalesce(max(nr_item_nf),0)+1)
		into STRICT	nr_item_nf_w
		from	nota_fiscal_item
		where nr_sequencia = nr_sequencia_w;

		nr_seq_conta_financeira_w := obter_conta_financeira(
			'S', cd_estab_oc_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, null, null, null, nr_seq_proj_rec_w, null, cd_pessoa_fisica_w, null, null, null, null, null, null, null, null, null, null, null);

		if (nr_seq_conta_financeira_w = 0) then
			nr_seq_conta_financeira_w := null;
		end if;


		cd_centro_conta_w := cd_centro_custo_w;
		if (coalesce(cd_local_estoque_w,0) > 0) then
			select	ie_tipo_local
			into STRICT	ie_tipo_local_w
			from	local_estoque
			where	cd_local_estoque = cd_local_estoque_w;
		else
			ie_tipo_local_w := '0';
		end if;
		if (coalesce(cd_centro_custo_w::text, '') = '') and (ie_tipo_local_w <> '8') then
			ie_tipo_conta_w	:= 2;
		else
			ie_tipo_conta_w	:= 3;
		end if;

		SELECT * FROM define_conta_material(
			cd_estab_oc_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(dt_atualizacao_w), cd_conta_contabil_w, cd_centro_conta_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_conta_w;

		if (coalesce(cd_conta_contabil_w, 'X') = 'X') or (coalesce(cd_conta_contabil_w, 'X') <> coalesce(cd_conta_contabil_ww, 'X')) then
			cd_conta_contabil_ww	:= cd_conta_contabil_w;
		end if;


		if (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '') and (coalesce(nr_seq_ordem_serv_w::text, '') = '') then
			select	nr_seq_ordem_serv
			into STRICT	nr_seq_ordem_serv_w
			from	solic_compra
			where	nr_solic_compra	= nr_solic_compra_w;
		end if;


		insert into nota_fiscal_item(
			cd_estabelecimento,
			cd_cgc_emitente,
			cd_serie_nf,
			nr_nota_fiscal,
			nr_sequencia_nf,
			nr_item_nf,
			cd_natureza_operacao,
			qt_item_nf,
			vl_unitario_item_nf,
			vl_total_item_nf,
			dt_atualizacao,
			nm_usuario,
			vl_frete,
			vl_desconto,
			vl_despesa_acessoria,
			cd_material,
			cd_local_estoque,
			ds_complemento,
			cd_unidade_medida_compra,
			qt_item_estoque,
			cd_unidade_medida_estoque,
			cd_conta_contabil,
			vl_desconto_rateio,
			vl_seguro,
			cd_centro_custo,
			cd_material_estoque,
			nr_ordem_compra,
			nr_sequencia,
			vl_liquido,
			pr_desconto,
			nr_item_oci,
			dt_entrega_ordem,
			nr_seq_conta_financ,
			nr_seq_proj_rec,
			pr_desc_financ,
			nr_seq_unidade_adic,
			nr_seq_proj_gpi,
			nr_seq_etapa_gpi,
			nr_seq_conta_gpi,
			nr_contrato,
			dt_inicio_garantia,
			dt_fim_garantia,
			cd_fornecedor_consig,
			cd_sequencia_parametro)
		values (	cd_estab_oc_w,
			coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w),
			cd_serie_nf_p,
			nr_nota_fiscal_p,
			nr_sequencia_nf_w,
			nr_item_nf_w,
			cd_natureza_operacao_p,
			qt_prevista_entrega_w,
			vl_unitario_item_nf_w,
			vl_total_item_nf_w,
			dt_atualizacao_w,
			nm_usuario_p,
			vl_frete_w,
			coalesce(vl_desconto_w,0),
			0,
			cd_material_w,
			cd_local_estoque_w,
			ds_material_direto_w,
			cd_unidade_medida_compra_w,
			qt_item_estoque_w,
			cd_unidade_medida_estoque_w,
			cd_conta_contabil_w,
			0,
			0,
			cd_centro_custo_w,
			cd_material_estoque_w,
			nr_ordem_compra_p,
			nr_sequencia_w,
			vl_liquido_w,
			pr_descontos_w,
			nr_item_oci_w,
			dt_prevista_entrega_w,
			nr_seq_conta_financeira_w,
			nr_seq_proj_rec_w,
			pr_desc_financ_w,
			nr_seq_unidade_adic_w,
			nr_seq_proj_gpi_w,
			nr_seq_etapa_gpi_w,
			nr_seq_conta_gpi_w,
			nr_contrato_w,
			dt_inicio_garantia_w,
			dt_fim_garantia_w,
			cd_fornecedor_consig_w,
			philips_contabil_pck.get_parametro_conta_contabil);

		if (nr_seq_criterio_rateio_w IS NOT NULL AND nr_seq_criterio_rateio_w::text <> '') then
			CALL ratear_item_nf(nr_sequencia_w, nr_item_nf_w, nr_seq_criterio_rateio_w, nm_usuario_p, trunc(dt_atualizacao_w));
		end if;
		end;
	end loop;
	close C02;
	end;
elsif (ie_item_nf = 2) then
	begin
	SELECT 	coalesce(MAX(nr_sequencia),0)
	into STRICT	nr_seq_nf_saida_w
	FROM	nota_fiscal
	WHERE	nr_nota_fiscal  	=	nr_nota_fiscal_p
	AND	cd_serie_nf		=	cd_serie_nf_p
	AND	trunc(dt_emissao,'dd')	=	trunc(dt_emissao_p,'dd')
	AND	nr_ordem_compra		=	nr_ordem_compra_p
	and	cd_estabelecimento	= 	cd_estab_transf_w
	AND	cd_cgc_emitente		= 	cd_cgc_emitente_w;


	if (nr_seq_nf_saida_w > 0) then
		begin

		open C04;
		loop
		fetch C04 into
			nr_ordem_compra_w,
			nr_item_oci_ww,
			cd_material_w,
			qt_prevista_entrega_w,
			cd_unidade_medida_compra_w,
			ds_lote_fornec_w,
			ds_validade_w,
			ie_indeterminado_w,
			ds_barra_w,
			vl_unitario_item_nf_w,
			pr_descontos_w,
			vl_desconto_oci_w,
			dt_prevista_entrega_w,
			cd_local_estoque_w,
			cd_fornecedor_consig_w,
			nr_seq_marca_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UME'),1,30) cd_unidade_medida_estoque,
				qt_conv_compra_estoque,
				cd_material_estoque
			into STRICT	cd_unidade_medida_estoque_w,
				qt_conv_compra_estoque_w,
				cd_material_estoque_w
			from 	material
			where	cd_material = cd_material_w;


			if (cd_unidade_medida_compra_w = cd_unidade_medida_estoque_w) then
				qt_item_estoque_w	:= qt_prevista_entrega_w;
			else
				qt_item_estoque_w	:= obter_quantidade_convertida(cd_material_w,qt_prevista_entrega_w,cd_unidade_medida_compra_w,'UME','N');
			end if;


			nr_seq_criterio_rateio_w := null;

			if (coalesce(nr_item_oci_ww,0) > 0) then
				begin
				begin
				select	cd_local_estoque,
					cd_centro_custo,
					cd_conta_contabil,
					nr_seq_criterio_rateio
				into STRICT	cd_local_estoque_w,
					cd_centro_custo_w,
					cd_conta_contabil_w,
					nr_seq_criterio_rateio_w
				from  	ordem_compra_item
				where 	nr_ordem_compra = nr_ordem_compra_w
				and	nr_item_oci = nr_item_oci_ww;
				exception
					when others then
						cd_local_estoque_w := null;
						cd_centro_custo_w := null;
						cd_conta_contabil_w := null;
						nr_seq_criterio_rateio_w := null;
				end;
				end;
			else
				select	cd_local_entrega,
					cd_centro_custo
				into STRICT	cd_local_estoque_w,
					cd_centro_custo_w
				from	ordem_compra
				where	nr_ordem_compra = coalesce(nr_ordem_compra_w, nr_ordem_compra_p);
			end if;

			if (coalesce(cd_local_estoque_w::text, '') = '') then
				select	cd_local_entrega
				into STRICT	cd_local_estoque_w
				from  	ordem_compra
				where 	nr_ordem_compra = coalesce(nr_ordem_compra_w, nr_ordem_compra_p);
			end if;


			vl_total_round_w	:= (qt_prevista_entrega_w * vl_unitario_item_nf_w);
			vl_desconto_w		:= (vl_total_round_w * pr_descontos_w) / 100 + coalesce(vl_desconto_oci_w,0);
			vl_liquido_w		:= vl_total_round_w - vl_desconto_w;
			vl_unitario_item_nf_w	:= dividir(vl_total_round_w,qt_prevista_entrega_w);
			
			vl_total_item_nf_w	:= vl_total_round_w;

			select (coalesce(max(nr_item_nf),0)+1)
			into STRICT	nr_item_nf_w
			from	nota_fiscal_item
			where 	nr_sequencia = nr_sequencia_w;

			nr_seq_conta_financeira_w := obter_conta_financeira(
				'S', cd_estab_oc_w, cd_material_w, null, null, null, null, cd_cgc_emitente_w, cd_centro_custo_w, nr_seq_conta_financeira_w, null, cd_operacao_nota_p, null, null, null, null, null, cd_pessoa_fisica_w, null, null, null, null, cd_local_estoque_w, null, null, null, null, null, null);

			if (nr_seq_conta_financeira_w = 0) then
				nr_seq_conta_financeira_w := null;
			end if;


			cd_centro_conta_w := cd_centro_custo_w;
			if (coalesce(cd_local_estoque_w,0) > 0) then
				select	ie_tipo_local
				into STRICT	ie_tipo_local_w
				from	local_estoque
				where	cd_local_estoque = cd_local_estoque_w;
			else
				ie_tipo_local_w := '0';
			end if;
			if (coalesce(cd_centro_custo_w::text, '') = '') and (ie_tipo_local_w <> '8') then
				ie_tipo_conta_w	:= 2;
			else
				ie_tipo_conta_w	:= 3;
			end if;

			SELECT * FROM define_conta_material(
				cd_estab_oc_w, cd_material_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_w, cd_operacao_estoque_w, trunc(dt_atualizacao_w), cd_conta_contabil_w, cd_centro_conta_w, null) INTO STRICT cd_conta_contabil_w, cd_centro_conta_w;

			if (coalesce(cd_conta_contabil_w, 'X') = 'X') or (coalesce(cd_conta_contabil_w, 'X') <> coalesce(cd_conta_contabil_ww, 'X')) then
				cd_conta_contabil_ww	:= cd_conta_contabil_w;
			end if;


			if (nr_solic_compra_w IS NOT NULL AND nr_solic_compra_w::text <> '') and (coalesce(nr_seq_ordem_serv_w::text, '') = '') then
				select	nr_seq_ordem_serv
				into STRICT	nr_seq_ordem_serv_w
				from	solic_compra
				where	nr_solic_compra	= nr_solic_compra_w;
			end if;

			insert into nota_fiscal_item(
				cd_estabelecimento,
				cd_cgc_emitente,
				cd_serie_nf,
				nr_nota_fiscal,
				nr_sequencia_nf,
				nr_item_nf,
				cd_natureza_operacao,
				qt_item_nf,
				vl_unitario_item_nf,
				vl_total_item_nf,
				dt_atualizacao,
				nm_usuario,
				vl_desconto,
				vl_despesa_acessoria,
				cd_material,
				cd_local_estoque,
				cd_unidade_medida_compra,
				qt_item_estoque,
				cd_unidade_medida_estoque,
				cd_conta_contabil,
				vl_desconto_rateio,
				vl_seguro,
				cd_centro_custo,
				cd_material_estoque,
				nr_ordem_compra,
				nr_sequencia,
				vl_liquido,
				pr_desconto,
				nr_item_oci,
				dt_entrega_ordem,
				nr_seq_conta_financ,
				cd_lote_fabricacao,
				dt_validade,
				vl_frete,
				cd_fornecedor_consig,
				nr_seq_marca,
				cd_sequencia_parametro,
				ie_indeterminado)
			values (	cd_estab_oc_w,
				coalesce(cd_cgc_emitente_w,cd_cgc_estabelecimento_w),
				cd_serie_nf_p,
				nr_nota_fiscal_p,
				nr_sequencia_nf_w,
				nr_item_nf_w,
				cd_natureza_operacao_p,
				qt_prevista_entrega_w,
				vl_unitario_item_nf_w,
				vl_total_item_nf_w,
				dt_atualizacao_w,
				nm_usuario_p,
				coalesce(vl_desconto_w,0),
				0,
				cd_material_w,
				cd_local_estoque_w,
				cd_unidade_medida_compra_w,
				qt_item_estoque_w,
				cd_unidade_medida_estoque_w,
				cd_conta_contabil_w,
				0,
				0,
				cd_centro_custo_w,
				cd_material_estoque_w,
				nr_ordem_compra_w,
				nr_sequencia_w,
				vl_liquido_w,
				pr_descontos_w,
				nr_item_oci_ww,
				dt_prevista_entrega_w,
				nr_seq_conta_financeira_w,
				ds_lote_fornec_w,
				ds_validade_w,
				0,
				cd_fornecedor_consig_w,
				nr_seq_marca_w,
				philips_contabil_pck.get_parametro_conta_contabil,
				ie_indeterminado_w);

			if (ds_barra_w IS NOT NULL AND ds_barra_w::text <> '') then
				begin
				update  nota_fiscal_item
				set	cd_barra_material = ds_barra_w
				where   nr_item_nf = nr_item_nf_w
				and	nr_sequencia = nr_sequencia_w
				and	(cd_material IS NOT NULL AND cd_material::text <> '')
				and     coalesce(ds_barras::text, '') = '';
				end;
			end if;

			if (nr_seq_criterio_rateio_w IS NOT NULL AND nr_seq_criterio_rateio_w::text <> '') then
				CALL ratear_item_nf(nr_sequencia_w, nr_item_nf_w, nr_seq_criterio_rateio_w, nm_usuario_p, trunc(dt_atualizacao_w));
			end if;
			end;
		end loop;
		close C04;
		end;
	else
		CALL wheb_mensagem_pck.exibir_mensagem_abort(181733);
	end if;
	end;
end if;

CALL gerar_historico_nota_fiscal(nr_sequencia_w, nm_usuario_p, '7', WHEB_MENSAGEM_PCK.get_texto(279647) || nr_ordem_compra_p);

select 	count(*)
into STRICT	qt_itens_nota_w
from	nota_fiscal_item
where	nr_sequencia = nr_sequencia_w;

if (qt_itens_nota_w = 0) then
	begin
	delete FROM nota_fiscal where nr_sequencia = nr_sequencia_w;
	ds_erro_nota_p	:= WHEB_MENSAGEM_PCK.get_texto(279648);
	nr_sequencia_w	:= 0;
	end;
end if;

if (qt_itens_nota_w > 0) then
	begin
	CALL atualiza_total_nota_fiscal(nr_sequencia_w,nm_usuario_p);
	CALL gerar_vencimento_nota_fiscal(nr_sequencia_w, nm_usuario_p);

	if (ie_calcula_nf_w = 'S') then
		begin
		SELECT * FROM consistir_nota_fiscal(nr_sequencia_w, nm_usuario_p, ds_erro_item_w, ds_erro_nota_w) INTO STRICT ds_erro_item_w, ds_erro_nota_w;

		ds_erro_item_p := ds_erro_item_w;
		ds_erro_nota_p := ds_erro_nota_w;

		if (coalesce(ds_erro_item_w::text, '') = '') and (coalesce(ds_erro_nota_w::text, '') = '') then
			begin
			if (ie_gera_lote_fornec_w = 'S') then
				begin
				ds_erro_nota_w := consiste_gerar_lote_nf(	nr_sequencia_w, nm_usuario_p, ds_erro_nota_w);
				ds_erro_nota_w := trim(both ds_erro_nota_w);
				ie_consistiu_lote_w := 'S';
				if (coalesce(ds_erro_nota_w::text, '') = '') then
					begin
					CALL gerar_lote_fornec_nf(nr_sequencia_w, ie_grava_obs_lote_w, nm_usuario_p);
					CALL Atualizar_Nota_Fiscal(nr_sequencia_w,'I',nm_usuario_p,ie_tipo_nota_w);
					end;
				else
					ds_erro_nota_p := ds_erro_nota_w;
				end if;
				end;
			else
				CALL Atualizar_Nota_Fiscal(nr_sequencia_w,'I',nm_usuario_p,ie_tipo_nota_w);
			end if;
			end;
		end if;

		if 	((ds_erro_item_w IS NOT NULL AND ds_erro_item_w::text <> '') or (ds_erro_nota_w IS NOT NULL AND ds_erro_nota_w::text <> '')) then
			begin
			delete FROM nota_fiscal where nr_sequencia = nr_sequencia_w;

			if (ie_consistiu_lote_w = 'N') then
				ds_erro_w := nr_sequencia_w;
			end if;

			nr_sequencia_w	:= 0;
			end;
		end if;
		end;
	end if;
	end;
end if;

if (nr_sequencia_w > 0) then
	begin
	delete	FROM ordem_compra_item_cb
	where	nr_ordem_compra = nr_ordem_compra_p
	and	ie_atende_recebe = 'R';

	if (coalesce(ds_erro_w::text, '') = '') and (coalesce(ds_erro_item_p::text, '') = '') and (coalesce(ds_erro_nota_p::text, '') = '') then
		CALL gerar_comunic_solic_transf(nr_ordem_compra_p,nr_sequencia_w,34,nm_usuario_p);
		CALL gerar_email_solic_transf(nr_ordem_compra_p,nr_sequencia_w,44,nm_usuario_p);
	end if;
	end;
end if;

nr_sequencia_p 	:= nr_sequencia_w;
ds_erro_p  	:= ds_erro_w;

commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nf_entrada_transferencia ( nr_nota_fiscal_p bigint, cd_serie_nf_p text, nr_ordem_compra_p bigint, cd_operacao_nota_p bigint, cd_natureza_operacao_p bigint, cd_setor_digitacao_p bigint, dt_emissao_p timestamp, nm_usuario_p text, ie_consistidos text, ie_item_nf text, nr_seq_modelo_p bigint, cd_estabelecimento_p bigint, nr_sequencia_p INOUT bigint, ds_erro_p INOUT text, ds_erro_item_p INOUT text, ds_erro_nota_p INOUT text) FROM PUBLIC;

