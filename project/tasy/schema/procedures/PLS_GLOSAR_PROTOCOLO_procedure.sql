-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_glosar_protocolo ( nr_seq_protocolo_p pls_conta.nr_seq_protocolo%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p pls_conta_glosa.nr_seq_motivo_glosa%type, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_fechar_conta_p text) AS $body$
DECLARE

				 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Gerar glosa ou ocorrência com glosa vinculada para todas as contas 
	de um protocolo. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
Alterações: 
------------------------------------------------------------------------------------------------------------------ 
*/
			 
 
nr_seq_motivo_glosa_w		pls_ocorrencia.nr_seq_motivo_glosa%type;			
nr_seq_benef_w			pls_ocorrencia_benef.nr_sequencia%type;

C01 CURSOR( nr_seq_protocolo_pc pls_conta.nr_seq_protocolo%type ) FOR 
	SELECT	nr_sequencia nr_seq_conta 
	from	pls_conta 
	where	nr_seq_protocolo 	= nr_seq_protocolo_pc 
	order by 1;
BEGIN
	for rw_C01_w in C01(nr_seq_protocolo_p) loop 
		 
		if (coalesce(ie_fechar_conta_p,'N') = 'S') then 
			CALL pls_consistir_conta(rw_C01_w.nr_seq_conta, cd_estabelecimento_p, nm_usuario_p, null, null, null, null, null, null, null);
		end if;
	 
		if coalesce( nr_seq_ocorrencia_p , 0 ) > 0 then 
 
			select max(nr_seq_motivo_glosa) 
			into STRICT nr_seq_motivo_glosa_w 
			from pls_ocorrencia 
			where nr_sequencia = nr_seq_ocorrencia_p;
			 
			nr_seq_benef_w := pls_inserir_ocorrencia(	null, nr_seq_ocorrencia_p, null, null, rw_C01_w.nr_seq_conta, null, null, null, nm_usuario_p, ds_observacao_p, nr_seq_motivo_glosa_w, 8, cd_estabelecimento_p, 'N', null, nr_seq_benef_w, null, null, null, null);
 
		elsif coalesce(nr_seq_motivo_glosa_p,0) > 0 then 
			CALL pls_gravar_glosa_item_conta(	nr_seq_motivo_glosa_p, 
					null, 
					rw_C01_w.nr_seq_conta, 
					null, 
					null, 
					ds_observacao_p, 
					nm_usuario_p, 
					cd_estabelecimento_p);
		end if;
	 
		CALL pls_glosar_item_conta(	rw_C01_w.nr_seq_conta, 
				null, 
				null, 
				nm_usuario_p, 
				cd_estabelecimento_p);
		 
		if (coalesce(ie_fechar_conta_p, 'N') = 'S') then 
		 
			CALL pls_fechar_conta(	rw_C01_w.nr_seq_conta, 
						'S', 
						'S', 
						'S', 
						cd_estabelecimento_p, 
						nm_usuario_p, 
						null, 
						null);
		end if;
	end loop;
	commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_glosar_protocolo ( nr_seq_protocolo_p pls_conta.nr_seq_protocolo%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p pls_conta_glosa.nr_seq_motivo_glosa%type, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ie_fechar_conta_p text) FROM PUBLIC;

