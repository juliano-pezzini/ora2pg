-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cancelar_lote_mensalidade ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, dt_cancelamento_p pls_mensalidade.dt_cancelamento%type, nr_seq_motivo_canc_p pls_mensalidade.nr_seq_motivo_canc%type, ds_observacao_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) AS $body$
DECLARE


qt_titulos_liquidados_w	integer;
qt_mensalidades_w	integer;
nr_seq_pagador_nfe_w	pls_contrato_pagador.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_mensalidade
	from	pls_mensalidade
	where	nr_seq_lote = nr_seq_lote_p
	and	coalesce(ie_cancelamento::text, '') = '';

BEGIN

select	count(1)
into STRICT	qt_mensalidades_w
from	pls_mensalidade
where	nr_seq_lote = nr_seq_lote_p
and	coalesce(ie_cancelamento::text, '') = '';

if (qt_mensalidades_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(1153180); --Nao ha mensalidade apta para cancelamento no lote selecionado.
else
	select	count(1)
	into STRICT	qt_titulos_liquidados_w
	from	pls_mensalidade a,
		titulo_receber b
	where	a.nr_sequencia	= b.nr_seq_mensalidade
	and	a.nr_seq_lote	= nr_seq_lote_p
	and	(b.dt_liquidacao IS NOT NULL AND b.dt_liquidacao::text <> '')
	and	b.vl_titulo > 0;
	
	if (qt_titulos_liquidados_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1152780); --Nao e possivel cancelar todas as mensalidades do lote, pois ja existe titulo liquidado.
	else
		select	max(d.nr_seq_pagador)
		into STRICT	nr_seq_pagador_nfe_w
		from	nfe_transmissao a,
			nfe_transmissao_nf b,
			nota_fiscal c,
			pls_mensalidade d
		where	a.nr_sequencia	= b.nr_seq_transmissao
		and	c.nr_sequencia	= b.nr_seq_nota_fiscal
		and	d.nr_sequencia	= c.nr_seq_mensalidade
		and	a.ie_tipo_nota = 'NFSE'
		and	a.ie_status_transmissao = 'T'
		and	coalesce(c.ie_status_envio,'X') <> 'C'
		and	c.ie_situacao <> '3'
		and	d.nr_seq_lote	= nr_seq_lote_p;
		
		if (nr_seq_pagador_nfe_w IS NOT NULL AND nr_seq_pagador_nfe_w::text <> '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1153177,'NM_PAGADOR='||pls_obter_dados_pagador(nr_seq_pagador_nfe_w,'N')); --A mensalidade do(a) pagador(a) #@NM_PAGADOR#@ deve ser cancelada atraves da funcao Acompanhamento de Nota fiscal!
		else
			for c01_w in C01 loop
				begin
				CALL pls_cancelar_mensalidade(c01_w.nr_seq_mensalidade, dt_cancelamento_p, nm_usuario_p, 'E', nr_seq_motivo_canc_p, 'N', ds_observacao_p, cd_estabelecimento_p);
				end;
			end loop;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cancelar_lote_mensalidade ( nr_seq_lote_p pls_lote_mensalidade.nr_sequencia%type, dt_cancelamento_p pls_mensalidade.dt_cancelamento%type, nr_seq_motivo_canc_p pls_mensalidade.nr_seq_motivo_canc%type, ds_observacao_p text, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type) FROM PUBLIC;

