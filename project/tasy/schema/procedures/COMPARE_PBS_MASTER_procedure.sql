-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE compare_pbs_master ( cd_pbs_p text, nr_pbs_version_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_count_w			pbs_benf_types.nr_sequencia%type;
ie_dirty_chk_w		pbs_benf_types.nr_sequencia%type;

	/* IE_DIRTY_CHECK = null //Comparision not done. Initial state.
	IE_DIRTY_CHECK = 0 //No changes
	IE_DIRTY_CHECK = 1 //Updates available
	IE_DIRTY_CHECK = 2 //New Item */
BEGIN

    select
    case when exists (select 1 from pbs_master where cd_pbs = cd_pbs_p)
    then 99
    else 0
    end
    into STRICT nr_count_w;

	if ( nr_count_w = 0 ) then
		-- There is no record in PBS_MASTER table with the current cd_pbs. So, this is a new record.
		-- Since the parent record, itself is not present, corresponding PBS_BENF_TYPES, PBS_RESTRICTIONS will also be not present.
		update PBSIMP_MASTER set IE_DIRTY_CHECK = 2, IE_DIRTY_PBS_RULES = 2 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;

		update PBSIMP_BENF_TYPES set IE_DIRTY_CHECK = 2 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;

	else
		-- Either no changes or Updates available scenario
		--1. compare PBSIMP_MASTER
		select count(1)
		into STRICT ie_dirty_chk_w
		from ( SELECT CD_PROGRAM,
					QT_MAX_PACKS,
					QT_MAX_UNITS,
					CD_MAX_UNITS,
					QT_NUM_REPEATS,
					IE_SITUACAO
				from PBSIMP_MASTER
				where CD_PBS = cd_pbs_p and nr_pbs_version = nr_pbs_version_p
			EXCEPT
				SELECT CD_PROGRAM,
					QT_MAX_PACKS,
					QT_MAX_UNITS,
					CD_MAX_UNITS,
					QT_NUM_REPEATS,
					IE_SITUACAO
				from PBS_MASTER
				where CD_PBS = cd_pbs_p) alias1;

		if ( ie_dirty_chk_w = 0 ) then
			-- No changes scenario
			update PBSIMP_MASTER set IE_DIRTY_CHECK = 0 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
		else
			--updates available scenario
			update PBSIMP_MASTER set IE_DIRTY_CHECK = 1 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
		end if;

		--2. compare PBSIMP_BENF_TYPES
		select count(1)
		into STRICT ie_dirty_chk_w
		from (
			SELECT CD_PRESCRIBER_TYPE,
				CD_BENEFIT_TYPE
			from PBSIMP_BENF_TYPES
			where CD_PBS = cd_pbs_p and IE_SITUACAO = 'A' and nr_pbs_version = nr_pbs_version_p
			EXCEPT
			SELECT CD_PRESCRIBER_TYPE,
				CD_BENEFIT_TYPE
			from PBS_BENF_TYPES
			where CD_PBS = cd_pbs_p and IE_SITUACAO = 'A'
			) alias1;

		if (ie_dirty_chk_w = 0) then
			select count(1)
			into STRICT ie_dirty_chk_w
			from (
				SELECT CD_PRESCRIBER_TYPE,
					CD_BENEFIT_TYPE
				from PBS_BENF_TYPES
				where CD_PBS = cd_pbs_p and IE_SITUACAO = 'A'
				EXCEPT
				SELECT CD_PRESCRIBER_TYPE,
					CD_BENEFIT_TYPE
				from PBSIMP_BENF_TYPES
				where CD_PBS = cd_pbs_p and IE_SITUACAO = 'A' and nr_pbs_version = nr_pbs_version_p
			) alias2;
		end if;

		if ( ie_dirty_chk_w = 0 ) then
			-- No changes scenario
			update PBSIMP_BENF_TYPES set IE_DIRTY_CHECK = 0 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
			update PBSIMP_MASTER set IE_DIRTY_PBS_RULES = 0 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
		else
			--updates available scenario
			update PBSIMP_BENF_TYPES set IE_DIRTY_CHECK = 1 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
			update PBSIMP_MASTER set IE_DIRTY_PBS_RULES = 1, IE_DIRTY_CHECK = 1 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
		end if;

		--3. compare PBSIMP_RESTRICTIONS
		select count(1)
		into STRICT ie_dirty_chk_w
		from (
			SELECT distinct
				to_char(substr(a.DS_RESTRICTION_NOTES,1,4000)),
				a.cd_authority_code
			from pbsimp_restrictions a,
				PBSIMP_BENF_RESTR_MAPPING b,
				PBSIMP_BENF_TYPES c
			where c.cd_pbs = cd_pbs_p
			and a.NR_PBS_VERSION = nr_pbs_version_p and a.ie_situacao = 'A'
			and a.nr_sequencia = b.NR_RESTRICTIONS_REF
			and b.NR_PBS_VERSION = nr_pbs_version_p and b.ie_situacao = 'A'
			and b.NR_BENFTYPE_REF = c.nr_sequencia
			and c.NR_PBS_VERSION = nr_pbs_version_p and c.ie_situacao = 'A'
		EXCEPT
			SELECT distinct
				to_char(substr(a.DS_RESTRICTION_NOTES,1,4000)),
				a.cd_authority_code
			from pbs_restrictions a,
				PBS_BENF_RESTR_MAPPING b,
				PBS_BENF_TYPES c
			where c.cd_pbs = cd_pbs_p
			and a.ie_situacao = 'A'
			and a.nr_sequencia = b.NR_RESTRICTIONS_REF
			and b.ie_situacao = 'A'
			and b.NR_BENFTYPE_REF = c.nr_sequencia
			and c.ie_situacao = 'A'
		) alias5;

		if (ie_dirty_chk_w = 0) then
			select count(1)
			into STRICT ie_dirty_chk_w
			from (
				SELECT distinct
					to_char(substr(a.DS_RESTRICTION_NOTES,1,4000)),
					a.cd_authority_code
				from pbsimp_restrictions a,
					PBSIMP_BENF_RESTR_MAPPING b,
					PBSIMP_BENF_TYPES c
				where c.cd_pbs = cd_pbs_p
				and a.NR_PBS_VERSION = nr_pbs_version_p and a.ie_situacao = 'A'
				and a.nr_sequencia = b.NR_RESTRICTIONS_REF
				and b.NR_PBS_VERSION = nr_pbs_version_p and b.ie_situacao = 'A'
				and b.NR_BENFTYPE_REF = c.nr_sequencia
				and c.NR_PBS_VERSION = nr_pbs_version_p and c.ie_situacao = 'A'
			EXCEPT
				SELECT distinct
					to_char(substr(a.DS_RESTRICTION_NOTES,1,4000)),
					a.cd_authority_code
				from pbs_restrictions a,
					PBS_BENF_RESTR_MAPPING b,
					PBS_BENF_TYPES c
				where c.cd_pbs = cd_pbs_p
				and a.ie_situacao = 'A'
				and a.nr_sequencia = b.NR_RESTRICTIONS_REF
				and b.ie_situacao = 'A'
				and b.NR_BENFTYPE_REF = c.nr_sequencia
				and c.ie_situacao = 'A'
			) alias6;
		end if;

		if ( ie_dirty_chk_w = 0 ) then
			-- No changes scenario
			update PBSIMP_MASTER set IE_DIRTY_PBS_RESTR = 0 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
		else
			--updates available scenario
			update PBSIMP_MASTER set IE_DIRTY_PBS_RESTR = 1,IE_DIRTY_CHECK = 1 where cd_pbs = cd_pbs_p and nr_pbs_version = nr_pbs_version_p;
		end if;

	end if;

	commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE compare_pbs_master ( cd_pbs_p text, nr_pbs_version_p bigint, nm_usuario_p text) FROM PUBLIC;

