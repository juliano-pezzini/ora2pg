-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE liberar_dieta ( nr_seq_dieta_p bigint, nm_usuario_p text) AS $body$
DECLARE

				 
nr_atendimento_w	bigint;
qt_regra_horario_w	bigint;
ie_permite_liberar_w	varchar(1);


BEGIN 
 
if (nr_seq_dieta_p > 0) then 
 
	select	count(*) 
	into STRICT	qt_regra_horario_w 
	from	mapa_dieta a, 
		horario_refeicao_dieta b 
	where	a.cd_refeicao = b.cd_refeicao 
	and	a.nr_sequencia = nr_seq_dieta_p 
	and (coalesce(b.cd_dieta::text, '') = '' 
	or	a.cd_dieta = b.cd_dieta 
	or 	exists (	SELECT	1 
			from	mapa_dieta c 
			where	c.nr_seq_superior = a.nr_sequencia 
			and	c.cd_dieta = b.cd_dieta));
 
	if (qt_regra_horario_w > 0) then 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_permite_liberar_w 
		from	mapa_dieta a, 
			horario_refeicao_dieta b 
		where	a.cd_refeicao = b.cd_refeicao 
		and	a.nr_sequencia = nr_seq_dieta_p 
		and (coalesce(b.cd_dieta::text, '') = '' 
		or	a.cd_dieta = b.cd_dieta 
		or 	exists (	SELECT	1 
				from	mapa_dieta c 
				where	c.nr_seq_superior = a.nr_sequencia 
				and	c.cd_dieta = b.cd_dieta)) 
		and (coalesce(b.ds_horarios_lib::text, '') = '' 
		or	to_date(to_char(a.dt_dieta,'dd/mm/yyyy')||replace(padroniza_horario(b.ds_horarios_lib),'A',''),'dd/mm/yyyy hh24:mi:ss') <= clock_timestamp());
		 
		if (ie_permite_liberar_w = 'N') then 
			--Não é permitido liberar a dieta no horário atual! 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(200276);
		end if;
	end if;
 
	update	mapa_dieta 
	set	dt_liberacao		= clock_timestamp(), 
		nm_usuario_lib		= nm_usuario_p, 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp() 
	where	nr_sequencia		= nr_seq_dieta_p 
	and	coalesce(dt_liberacao::text, '') = '';
	commit;
	 
	update	mapa_dieta 
	set	dt_liberacao		= clock_timestamp(), 
		nm_usuario_lib		= nm_usuario_p, 
		nm_usuario		= nm_usuario_p, 
		dt_atualizacao		= clock_timestamp() 
	where	nr_seq_superior		= nr_seq_dieta_p 
	and	coalesce(dt_liberacao::text, '') = '';
	commit;
	 
	select	coalesce(max(nr_atendimento),0) 
	into STRICT	nr_atendimento_w 
	from	mapa_dieta 
	where	nr_sequencia = nr_seq_dieta_p;
	 
	if (nr_atendimento_w > 0) then 
		CALL gerar_lancamento_automatico(nr_atendimento_w, null, 291, nm_usuario_p, null, nr_seq_dieta_p, null, null, null, null);
	end if;
	 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE liberar_dieta ( nr_seq_dieta_p bigint, nm_usuario_p text) FROM PUBLIC;

