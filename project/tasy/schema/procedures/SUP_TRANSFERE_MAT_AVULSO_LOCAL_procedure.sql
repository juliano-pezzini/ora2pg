-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_transfere_mat_avulso_local ( nr_seq_reg_kit_p bigint, cd_local_destino_p bigint, cd_operacao_estoque_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, cd_material_avulso_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_local_origem_w		smallint;
cd_operacao_correspondente_w smallint;
cd_material_w			integer;
qt_material_w			double precision;
nr_seq_lote_w			bigint;

nr_movimento_estoque_w		bigint;
dt_mesano_referencia_w		timestamp;
cd_unidade_medida_consumo_w	varchar(30);
cd_material_estoque_w		integer;
ds_lote_w			varchar(20);
dt_validade_w			timestamp;

nr_seq_regra_w			bigint;
qt_diferenca_w			bigint := 0;
ie_continua				varchar(1)	:= 'S';
qt_baixado_proprio_w	double precision;
qt_baixado_consignado_w	double precision;
qt_material_baixar		double precision;
qt_estoque_w			double precision;
ie_consignado_w			varchar(1);
ie_tipo_saldo_w			varchar(1);
cd_fornec_consignado_w	varchar(14);
cd_operacao_estoque_w	smallint := null;


BEGIN

select	cd_material,
	qt_material,
	coalesce(nr_seq_lote_fornec,0),
	cd_local_estoque
into STRICT	cd_material_w,
	qt_material_w,
	nr_seq_lote_w,
	cd_local_origem_w
from	kit_estoque_comp_avulso
where	nr_seq_reg_kit = nr_seq_reg_kit_p
and	nr_sequencia = cd_material_avulso_p;

select	coalesce(max(IE_REGRA_SALDO_CONSIG),0)
into STRICT	nr_seq_regra_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

select	coalesce(max(cd_operacao_correspondente),0)
into STRICT	cd_operacao_correspondente_w
from	operacao_estoque
where	cd_operacao_estoque = cd_operacao_estoque_p;

select	dt_mesano_vigente
into STRICT	dt_mesano_referencia_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

select	cd_material_estoque
into STRICT	cd_material_estoque_w
from	material
where	cd_material = cd_material_w;

cd_unidade_medida_consumo_w	:=	obter_dados_material_estab(cd_material_w, cd_estabelecimento_p, 'UMS');

ds_lote_w	:= '';
dt_validade_w	:= null;

if (coalesce(nr_seq_lote_w,0) > 0) then
	select	ds_lote_fornec,
		dt_validade
	into STRICT	ds_lote_w,
		dt_validade_w
	from	material_lote_fornec
	where	nr_sequencia = nr_seq_lote_w;
end if;

while(qt_diferenca_w > 0 or ie_continua = 'S')loop
begin
	select	nextval('movimento_estoque_seq')
	into STRICT	nr_movimento_estoque_w
	;
	
	select	ie_consignado
	into STRICT	ie_consignado_w
	from	material
	where	cd_material = cd_material_w;

	if(ie_consignado_w = '2' AND nr_seq_regra_w > 0)then				
	begin	
		SELECT * FROM obter_fornec_consig_ambos(cd_estabelecimento_p, cd_material_w, coalesce(nr_seq_lote_w,0), cd_local_origem_w, ie_tipo_saldo_w, cd_fornec_consignado_w) INTO STRICT ie_tipo_saldo_w, cd_fornec_consignado_w;

		if (ie_tipo_saldo_w = 'N')then
			qt_estoque_w := obter_saldo_estoque(cd_estabelecimento_p, cd_material_w, cd_local_origem_w, PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0), qt_estoque_w);
		elsif (ie_tipo_saldo_w = 'C')then
			begin
			select	coalesce(sum(qt_estoque),0)
			into STRICT	qt_estoque_w
			from	fornecedor_mat_consignado
			where	cd_estabelecimento = cd_estabelecimento_p
			and	cd_local_estoque	   = cd_local_origem_w
			and	cd_fornecedor		   = cd_fornec_consignado_w
			and	cd_material			   = cd_material_w
			and	dt_mesano_referencia   = trunc(clock_timestamp(),'mm');
			
			select	cd_operacao_transf_setor_consi
			into STRICT	cd_operacao_estoque_w
			from	parametro_estoque
			where	cd_estabelecimento = cd_estabelecimento_p;
			
			select	cd_operacao_correspondente
			into STRICT	cd_operacao_correspondente_w
			from	operacao_estoque
			where	cd_operacao_estoque  = cd_operacao_estoque_w;		
			end;
		end if;	
	
		if ((ie_tipo_saldo_w = 'N') or (ie_tipo_saldo_w = 'C'))then
		begin
			if (qt_diferenca_w > 0)then
				qt_material_w := qt_diferenca_w;
			end if;
			
			if (qt_estoque_w >= qt_material_w)then
			begin
				qt_diferenca_w := 0;
				ie_continua    := 'N';
				
				if (ie_tipo_saldo_w = 'N')then
					qt_baixado_proprio_w := qt_baixado_proprio_w + qt_material_w;
				else									
					qt_baixado_consignado_w := qt_baixado_consignado_w + qt_material_w;
				end if;									
			end;
			else
			begin
				qt_diferenca_w := qt_material_w - qt_estoque_w;
				qt_material_w  := qt_estoque_w;
				ie_continua    := 'S';
				
				if (ie_tipo_saldo_w = 'N')then
					qt_baixado_proprio_w := qt_baixado_proprio_w + qt_material_w;
				else									
					qt_baixado_consignado_w := qt_baixado_consignado_w + qt_material_w;
				end if;
			end;
			end if;
		end;
		else
		begin
			qt_diferenca_w := 0;
			ie_continua    := 'N';
		end;
		end if;
	end;
	else
	begin
		qt_diferenca_w := 0;
		ie_continua    := 'N';
	end;
	end if;
	
	insert into movimento_estoque(
		nr_movimento_estoque,		
		cd_estabelecimento,
		cd_local_estoque,		
		dt_movimento_estoque,
		cd_operacao_estoque, 		
		cd_acao,
		cd_material,	 		
		dt_mesano_referencia,
		qt_movimento,	 		
		dt_atualizacao,
		nm_usuario,	 		
		ie_origem_documento,
		nr_documento,	 		
		nr_sequencia_item_docto,
		cd_cgc_emitente,		cd_serie_nf,
		nr_sequencia_documento,		vl_movimento,
		cd_unidade_medida_estoque,	cd_procedimento,
		cd_setor_atendimento, 		cd_conta,
		dt_contabil,	 		cd_lote_fabricacao,
		dt_validade,			qt_estoque,
		dt_processo,	 		cd_local_estoque_destino,
		cd_centro_custo,		cd_unidade_med_mov,
		nr_movimento_estoque_corresp,	cd_conta_contabil,
		cd_material_estoque,		ie_origem_proced,
		cd_fornecedor,	 		nr_lote_contabil,
		nr_seq_tab_orig,		nr_seq_lote_fornec)
			values (
			nr_movimento_estoque_w,		cd_estabelecimento_p,
			cd_local_origem_w,		clock_timestamp(),
			coalesce(cd_operacao_estoque_w, cd_operacao_estoque_p),	'1',
			cd_material_w,			dt_mesano_referencia_w,
			qt_material_w,			clock_timestamp(),
			nm_usuario_p,			'1',
			to_char(nr_seq_reg_kit_p),	cd_material_avulso_p,
			null,				null,
			nr_seq_reg_kit_p,		null,
			cd_unidade_medida_consumo_w,	null,
			cd_setor_atendimento_p,		null,
			null,				ds_lote_w,
			dt_validade_w,			qt_material_w,
			null,				cd_local_destino_p,
			null,				cd_unidade_medida_consumo_w,
			null,				null,
			cd_material_estoque_w,		null,
			cd_fornec_consignado_w,				null,
			cd_material_avulso_p,		CASE WHEN nr_seq_lote_w=0 THEN  null  ELSE nr_seq_lote_w END );

	if (cd_operacao_correspondente_w > 0) then
		begin

		insert into movimento_estoque(
			nr_movimento_estoque,		
			cd_estabelecimento,
			cd_local_estoque,		
			dt_movimento_estoque,
			cd_operacao_estoque, 		cd_acao,
			cd_material,	 		dt_mesano_referencia,
			qt_movimento,	 		dt_atualizacao,
			nm_usuario,	 		ie_origem_documento,
			nr_documento,	 		nr_sequencia_item_docto,
			cd_cgc_emitente,		cd_serie_nf,
			nr_sequencia_documento,		vl_movimento,
			cd_unidade_medida_estoque,	cd_procedimento,
			cd_setor_atendimento, 		cd_conta,
			dt_contabil,	 		cd_lote_fabricacao,
			dt_validade,			qt_estoque,
			dt_processo,	 		cd_local_estoque_destino,
			cd_centro_custo,		cd_unidade_med_mov,
			nr_movimento_estoque_corresp,	cd_conta_contabil,
			cd_material_estoque,		ie_origem_proced,
			cd_fornecedor,	 		nr_lote_contabil,
			nr_seq_tab_orig,		nr_seq_lote_fornec)
		values (
				nextval('movimento_estoque_seq'),	cd_estabelecimento_p,
				cd_local_destino_p,		clock_timestamp(),
				cd_operacao_correspondente_w,	'1',
				cd_material_w,			dt_mesano_referencia_w,
				qt_material_w,			clock_timestamp(),
				nm_usuario_p,			'2',
				to_char(nr_seq_reg_kit_p),	cd_material_avulso_p,
				null,				null,
				nr_seq_reg_kit_p,		null,
				cd_unidade_medida_consumo_w,	null,
				cd_setor_atendimento_p,		null,
				null,				
				ds_lote_w,
				dt_validade_w,			qt_material_w,
				null,				cd_local_origem_w,
				null,				cd_unidade_medida_consumo_w,
				nr_movimento_estoque_w,		null,
				cd_material_estoque_w,		null,
				cd_fornec_consignado_w,				null,
				cd_material_avulso_p,		CASE WHEN nr_seq_lote_w=0 THEN  null  ELSE nr_seq_lote_w END );
		end;
	end if;
	
		
	if (((qt_diferenca_w > 0) and (qt_material_baixar = (qt_baixado_consignado_w + qt_baixado_proprio_w))) or (qt_diferenca_w = 0) or (ie_continua = 'N') and (ie_consignado_w = '2' AND nr_seq_regra_w > 0))then
	begin
		qt_diferenca_w := 0;
		ie_continua    := 'N';
	end;
	elsif (ie_consignado_w = '2' AND nr_seq_regra_w > 0)then
	begin
		ie_continua   := 'S';
		qt_material_w := qt_diferenca_w;
	end;
	else
		ie_continua    := 'N';
		qt_diferenca_w := 0;
	end if;
end;
end loop;
	
update	kit_estoque_comp_avulso
set	cd_local_estoque = cd_local_destino_p
where	nr_seq_reg_kit = nr_seq_reg_kit_p
and	nr_sequencia = cd_material_avulso_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_transfere_mat_avulso_local ( nr_seq_reg_kit_p bigint, cd_local_destino_p bigint, cd_operacao_estoque_p bigint, cd_setor_atendimento_p bigint, cd_estabelecimento_p bigint, cd_material_avulso_p bigint, nm_usuario_p text) FROM PUBLIC;

