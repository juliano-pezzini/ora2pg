-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_pcmso ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Realizar a validação 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção:Performance. 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
nr_seq_prestador_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_guia_proc_w		bigint;
nr_seq_guia_mat_w		bigint;
nr_seq_req_proc_w		bigint;
nr_seq_req_mat_w		bigint;
nr_seq_exec_item_w		bigint;
nr_seq_material_w		bigint;
nr_seq_regra_w			bigint;
cd_procedimento_w		bigint;
ie_regra_w			varchar(2);
ie_tipo_item_w			bigint;
ie_tipo_ocorrencia_w		varchar(2);
ie_origem_proced_w		bigint;
ie_pcmso_atend_w		varchar(2);
ie_pcmso_segurado_w		varchar(2);
ie_pcmso_prestador_w		varchar(2)	:= 'X';
ie_valida_benef_atend_w		varchar(2);
ie_valida_prest_atend_w		varchar(2);
ie_gerar_ocorrencia_w		varchar(2)	:= 'N';

C01 CURSOR FOR 
	SELECT	ie_valida_benef_atend, 
		ie_valida_prest_atend 
	from	pls_validacao_aut_pcmso 
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p 
	and	ie_situacao			= 'A';
	
C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_guia_plano_proc 
	where	nr_seq_guia		= nr_seq_guia_p;
	
C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_guia_plano_mat 
	where	nr_seq_guia		= nr_seq_guia_p;
	
C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;
	
C05 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C06 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_p 
	and	(cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') 
	and	(ie_origem_proced IS NOT NULL AND ie_origem_proced::text <> '');
	
C07 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_p 
	and	(nr_seq_material IS NOT NULL AND nr_seq_material::text <> '');


BEGIN 
 
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
	begin 
		select	nr_seq_prestador, 
			nr_seq_segurado, 
			ie_pcmso 
		into STRICT	nr_seq_prestador_w, 
			nr_seq_segurado_w, 
			ie_pcmso_atend_w 
		from	pls_guia_plano 
		where	nr_sequencia	= nr_seq_guia_p;
	exception 
	when others then 
		nr_seq_prestador_w	:= null;
		nr_seq_segurado_w	:= null;
		ie_pcmso_atend_w		:= null;
	end;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
	begin 
		select	nr_seq_prestador, 
			nr_seq_segurado, 
			ie_pcmso 
		into STRICT	nr_seq_prestador_w, 
			nr_seq_segurado_w, 
			ie_pcmso_atend_w 
		from	pls_requisicao 
		where	nr_sequencia	= nr_seq_requisicao_p;
	exception 
	when others then 
		nr_seq_prestador_w	:= null;
		nr_seq_segurado_w	:= null;
		ie_pcmso_atend_w		:= null;
	end;
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then 
	begin 
		select	nr_seq_prestador, 
			nr_seq_requisicao 
		into STRICT	nr_seq_prestador_w, 
			nr_seq_requisicao_w 
		from	pls_execucao_requisicao 
		where	nr_sequencia	= nr_seq_execucao_p;
	exception 
	when others then 
		nr_seq_prestador_w	:= null;
		nr_seq_requisicao_w	:= null;
	end;
	 
	begin 
		select	nr_seq_segurado, 
			ie_pcmso 
		into STRICT	nr_seq_segurado_w, 
			ie_pcmso_atend_w 
		from	pls_requisicao 
		where	nr_sequencia	= nr_seq_requisicao_w;
	exception 
	when others then 
		nr_seq_segurado_w	:= null;
		ie_pcmso_atend_w	:= null;
	end;
end if;
 
if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then 
	select	max(ie_pcmso) 
	into STRICT	ie_pcmso_prestador_w 
	from	pls_regra_prest_lib_atend 
	where	nr_seq_prestador	= nr_seq_prestador_w;
end if;
 
if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then 
	begin 
		select 	ie_pcmso 
		into STRICT	ie_pcmso_segurado_w 
		from	pls_segurado 
		where	nr_sequencia	= nr_seq_segurado_w;
	exception 
	when others then 
		ie_pcmso_segurado_w	:= null;
	end;
end if;
 
open C01;
loop 
fetch C01 into	 
	ie_valida_benef_atend_w, 
	ie_valida_prest_atend_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	if (coalesce(ie_valida_benef_atend_w,'N')	= 'S') and (coalesce(ie_pcmso_segurado_w,'N')	= 'S') and (coalesce(ie_pcmso_atend_w,'N')	= 'N') then 
		ie_gerar_ocorrencia_w	:= 'S';
	end if;
	 
	if (coalesce(ie_valida_prest_atend_w,'N')	= 'S') and (coalesce(ie_pcmso_prestador_w,'N')	= 'N') and (coalesce(ie_pcmso_atend_w,'N')	= 'S') then 
		ie_gerar_ocorrencia_w	:= 'S';
	end if;
	 
	if (ie_utiliza_filtro_p	= 'S') and (ie_gerar_ocorrencia_w	= 'S') then 
		if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
			open C02;
			loop 
			fetch C02 into	 
				nr_seq_guia_proc_w, 
				cd_procedimento_w, 
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C02 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, nr_seq_guia_proc_w, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
					exit;
				end if;
				end;
			end loop;
			close C02;
 
			open C03;
			loop 
			fetch C03 into 
				nr_seq_guia_mat_w, 
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, nr_seq_guia_mat_w, null, null, null, null, null, nr_seq_material_w, null, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
				 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
					exit;
				end if;
				end;
			end loop;
			close C03;
		elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
			open C04;
			loop 
			fetch C04 into	 
				nr_seq_req_proc_w, 
				cd_procedimento_w, 
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, nr_seq_req_proc_w, null, null, cd_procedimento_w, ie_origem_proced_w, null, null, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
					exit;
				end if;
				end;
			end loop;
			close C04;
 
			open C05;
			loop 
			fetch C05 into 
				nr_seq_req_mat_w, 
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C05 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, nr_seq_req_mat_w, null, null, null, nr_seq_material_w, null, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
 
				if (ie_regra_w	= 'S') then 
					ie_gerar_ocorrencia_w	:= 'S';
				elsif (ie_regra_w	in ('E','N')) then 
					ie_gerar_ocorrencia_w	:= 'N';
					exit;
				end if;
				end;
			end loop;
			close C05;
		elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then 
			open C06;
			loop 
			fetch C06 into	 
				nr_seq_exec_item_w, 
				cd_procedimento_w, 
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					nr_seq_regra_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_regra_w, null, null, null, null);
				end if;
				end;
			end loop;
			close C06;
 
			open C07;
			loop 
			fetch C07 into 
				nr_seq_exec_item_w, 
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin 
				/* Tratamento para filtros */
 
				SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, null, null, null, nr_seq_exec_item_w, null, null, nr_seq_material_w, null, null, null, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
								 
				if (ie_regra_w	= 'S') then 
					nr_seq_regra_w := pls_inserir_ocorrencia(		nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_regra_w, null, null, null, null);
				end if;
				end;
			end loop;
			close C07;
		end if;
	end if;
	 
	if (ie_gerar_ocorrencia_w	= 'S')	then 
		if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
			ie_tipo_item_w	:= 7;
		elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
			ie_tipo_item_w	:= 9;
		else 
			open C06;
			loop 
			fetch C06 into	 
				nr_seq_exec_item_w, 
				cd_procedimento_w, 
				ie_origem_proced_w;
			EXIT WHEN NOT FOUND; /* apply on C06 */
				begin 
				nr_seq_regra_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_regra_w, null, null, null, null);
 
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
								nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
								null, null, null, 
								null, nr_seq_exec_item_w, null, 
								nm_usuario_p, cd_estabelecimento_p);
				end;
			end loop;
			close C06;
 
			open C07;
			loop 
			fetch C07 into 
				nr_seq_exec_item_w, 
				nr_seq_material_w;
			EXIT WHEN NOT FOUND; /* apply on C07 */
				begin 
				nr_seq_regra_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, null, null, null, nr_seq_exec_item_w, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_regra_w, null, null, null, null);
								 
				CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
								nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, 
								null, null, null, 
								null, nr_seq_exec_item_w, null, 
								nm_usuario_p, cd_estabelecimento_p);
				end;
			end loop;
			close C07;
		end if;
		 
		if (ie_tipo_item_w	in (7,9)) then 
			nr_seq_regra_w := pls_inserir_ocorrencia(	nr_seq_segurado_p, nr_seq_ocorrencia_p, nr_seq_requisicao_p, nr_seq_guia_p, null, null, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, ie_tipo_item_w, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_regra_w, null, null, null, null);
		end if;
	end if;
	end;
end loop;
close C01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_pcmso ( nr_seq_ocor_combinada_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_segurado_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, nr_seq_execucao_p bigint, ie_utiliza_filtro_p text, nr_seq_param1_p bigint, nr_seq_param2_p bigint, nr_seq_param3_p bigint, nr_seq_param4_p bigint, nr_seq_param5_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

