-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mens_bonific_restricao ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, nr_seq_segurado_p pls_mensalidade_segurado.nr_seq_segurado%type, cd_pessoa_fisica_p pls_segurado.cd_pessoa_fisica%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, ie_situacao_trabalhista_p pls_segurado.ie_situacao_trabalhista%type, ie_remido_p pls_mensalidade_segurado.ie_remido%type, nm_usuario_p usuario.nm_usuario%type, ie_restricao_p INOUT text, ds_obs_p INOUT text, nr_seq_vinculo_bonificacao_p pls_bonificacao_vinculo.nr_sequencia%type, dt_inicio_vigencia_p pls_bonificacao_vinculo.dt_inicio_vigencia%type) AS $body$
DECLARE


dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_cobertura_w			integer;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
vl_producao_medico_w		double precision;
nr_seq_cooperado_w		pls_cooperado.nr_sequencia%type;
qt_afastamento_w		integer	:= 0;
dt_inicial_resultado_w		timestamp;
dt_final_resultado_w		timestamp;
nr_seq_grupo_relacionamento_w	bigint;
dt_mens_vencida_w		timestamp;
qt_meses_resultado_w		integer;
dt_mens_liq_vencida_w		timestamp;
dt_inicio_vigencia_w		pls_bonificacao_vinculo.dt_inicio_vigencia%type;
tx_sinistralidade_w		pls_prog_reaj_coletivo.tx_sinistralidade%type;
vl_receita_w			pls_prog_reaj_coletivo.vl_receita%type;
vl_custo_w			pls_prog_reaj_coletivo.vl_despesas%type;
tx_resultado_w			pls_prog_reaj_coletivo.tx_resultado_grupo%type;

C01 CURSOR(	nr_seq_bonificacao_pc	pls_bonificacao.nr_sequencia%type) FOR
	SELECT	coalesce(qt_dias_inadimplencia,0) qt_dias_inadimplencia,
		coalesce(qt_meses_restricao,0) qt_meses_restricao,
		nr_seq_tipo_restricao,
		coalesce(qt_valor_producao,0) qt_valor_producao,
		qt_periodo_producao,
		coalesce(ie_afastamento,'N') ie_afastamento,
		coalesce(pr_resultado,0) pr_resultado,
		coalesce(qt_meses_resultado,0) qt_meses_resultado,
		ie_tipo_contrato,
		ie_situacao_trabalhista,
		coalesce(ie_tipo_data,'P') ie_tipo_data,
		ie_inativar_vinc_inadimplencia,
		ie_titulo_liq_atraso,
		coalesce(ie_remido,'N') ie_remido,
		coalesce(ie_data_vig_inadimplencia,'P') ie_data_vig_inadimplencia
	from	pls_bonificacao_restricao
	where	nr_seq_bonificacao	= nr_seq_bonificacao_pc;

C02 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		dt_inicial_pc		timestamp,
		dt_final_pc		timestamp,
		ie_tipo_data_pc		pls_bonificacao_restricao.ie_tipo_data%type ) FOR
	SELECT	b.nr_sequencia nr_seq_conta
	from	pls_conta b,
		pls_protocolo_conta a
	where	a.nr_sequencia		= b.nr_seq_protocolo
	and	b.nr_seq_segurado	= nr_seq_segurado_pc
	and	a.ie_situacao in ('D','T')
	and	a.dt_mes_competencia	between dt_inicial_pc and dt_final_pc
	and	ie_tipo_data_pc		= 'P'
	
union all

	SELECT	a.nr_sequencia nr_seq_conta
	from	pls_mensalidade_segurado b,
		pls_conta_coparticipacao a
	where	b.nr_sequencia		= a.nr_seq_mensalidade_seg
	and	a.nr_seq_segurado	= nr_seq_segurado_pc
	and	b.dt_mesano_referencia	between dt_inicial_pc and dt_final_pc
	and	ie_tipo_data_pc		= 'CO';

C03 CURSOR(	nr_seq_conta_pc	pls_conta.nr_sequencia%type) FOR
	SELECT	cd_procedimento,
		ie_origem_proced
	from	pls_conta_proc
	where	nr_seq_conta	= nr_seq_conta_pc;

BEGIN

ie_restricao_p	:= 'S';

for r_c01_w in C01(nr_seq_bonificacao_p)  loop
	begin
	
	if (r_c01_w.qt_dias_inadimplencia <> 0) then
		dt_mens_liq_vencida_w	:= null;
		
		if (r_c01_w.ie_data_vig_inadimplencia = 'B' and (dt_inicio_vigencia_p IS NOT NULL AND dt_inicio_vigencia_p::text <> '')) then
			dt_inicio_vigencia_w	:= dt_inicio_vigencia_p;
		else
			dt_inicio_vigencia_w	:= pls_util_pck.obter_dt_vigencia_null(null,'I');
		end if;
		
		select	max(b.dt_referencia)
		into STRICT	dt_mens_vencida_w
		from	titulo_receber		a,
			pls_mensalidade		b
		where	a.nr_seq_mensalidade	= b.nr_sequencia
		and	b.nr_seq_pagador	= nr_seq_pagador_p
		and	a.dt_pagamento_previsto < (dt_referencia_p - r_c01_w.qt_dias_inadimplencia)
		and	a.dt_pagamento_previsto > dt_inicio_vigencia_w
		and	a.dt_pagamento_previsto < clock_timestamp()
		and	a.ie_situacao = 1;
		
		if	((r_c01_w.ie_titulo_liq_atraso = 'S') and (coalesce(dt_mens_vencida_w::text, '') = '')) then
			select	max(b.dt_referencia)
			into STRICT	dt_mens_liq_vencida_w
			from	titulo_receber		a,
				pls_mensalidade		b
			where	a.nr_seq_mensalidade	= b.nr_sequencia
			and	b.nr_seq_pagador	= nr_seq_pagador_p
			and	a.dt_pagamento_previsto <= (a.dt_liquidacao - r_c01_w.qt_dias_inadimplencia)
			and	a.dt_pagamento_previsto > dt_inicio_vigencia_w
			and	a.dt_pagamento_previsto < clock_timestamp()
			and	a.ie_situacao = 2;
		end if;
		
		if	((dt_mens_vencida_w IS NOT NULL AND dt_mens_vencida_w::text <> '') or (dt_mens_liq_vencida_w IS NOT NULL AND dt_mens_liq_vencida_w::text <> '')) then
			ie_restricao_p	:= 'N';
			
			if (dt_mens_liq_vencida_w IS NOT NULL AND dt_mens_liq_vencida_w::text <> '') then
				ds_obs_p	:= wheb_mensagem_pck.get_texto(1172606,'DT_LIQ_MENS_VENC='||to_char(dt_mens_liq_vencida_w,'dd/mm/yyyy'));
			else
				ds_obs_p	:= wheb_mensagem_pck.get_texto(1172607,'DT_MENS_VENCIDA='||to_char(dt_mens_vencida_w,'dd/mm/yyyy'));
			end if;

			if (r_c01_w.ie_inativar_vinc_inadimplencia = 'S') then
				if (dt_mens_liq_vencida_w IS NOT NULL AND dt_mens_liq_vencida_w::text <> '') then
					ds_obs_p	:= wheb_mensagem_pck.get_texto(1172608,'DT_LIQ_MENS_VENC='||to_char(dt_mens_liq_vencida_w,'dd/mm/yyyy'));
				else
					ds_obs_p	:= wheb_mensagem_pck.get_texto(1172609,'DT_MENS_VENCIDA='||to_char(dt_mens_vencida_w,'dd/mm/yyyy'));
				end if;
				
				update	pls_bonificacao_vinculo
				set	dt_fim_vigencia 	= coalesce(dt_mens_vencida_w, dt_mens_liq_vencida_w),
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= nm_usuario_p
				where 	nr_sequencia 		= nr_seq_vinculo_bonificacao_p;
			end if;
		end if;
	end if;
	
	if (r_c01_w.ie_situacao_trabalhista = ie_situacao_trabalhista_p) and (r_c01_w.ie_situacao_trabalhista IS NOT NULL AND r_c01_w.ie_situacao_trabalhista::text <> '') and (ie_situacao_trabalhista_p IS NOT NULL AND ie_situacao_trabalhista_p::text <> '') then
		ie_restricao_p	:= 'N';
		ds_obs_p	:= wheb_mensagem_pck.get_texto(1172610,'DS_SIT_TRABALHISTA='||obter_valor_dominio(3840,ie_situacao_trabalhista_p));
	end if;
	
	if (r_c01_w.qt_meses_restricao <> 0) then --Restricao por data
		select	trunc(add_months(dt_referencia_p, -r_c01_w.qt_meses_restricao),'mm'),
			fim_mes(add_months(dt_referencia_p, -1))
		into STRICT	dt_inicial_w,
			dt_final_w
		;
		
		for r_c02_w in C02(nr_seq_segurado_p, dt_inicial_w, dt_final_w, r_c01_w.ie_tipo_data) loop
			begin
			
			for r_c03_w in c03(r_c02_w.nr_seq_conta) loop
				begin
				if (r_c03_w.cd_procedimento IS NOT NULL AND r_c03_w.cd_procedimento::text <> '') and (r_c03_w.ie_origem_proced IS NOT NULL AND r_c03_w.ie_origem_proced::text <> '') then
					select	cd_grupo_proc,
						cd_especialidade,
						cd_area_procedimento
					into STRICT	cd_grupo_proc_w,
						cd_especialidade_w,
						cd_area_procedimento_w
					from	estrutura_procedimento_v
					where	cd_procedimento		= r_c03_w.cd_procedimento
					and	ie_origem_proced	= r_c03_w.ie_origem_proced;
					
					select	count(1)
					into STRICT	qt_cobertura_w
					from	pls_bonific_restr_regra a
					where	a.nr_seq_tipo_restricao	= r_c01_w.nr_seq_tipo_restricao
					and	coalesce(a.cd_procedimento, r_c03_w.cd_procedimento)		= r_c03_w.cd_procedimento
					and	coalesce(a.ie_origem_proced, r_c03_w.ie_origem_proced)	= r_c03_w.ie_origem_proced
					and	coalesce(a.cd_grupo_proc, cd_grupo_proc_w)			= cd_grupo_proc_w
					and	coalesce(a.cd_especialidade, cd_especialidade_w)		= cd_especialidade_w
					and	coalesce(a.cd_area_procedimento, cd_area_procedimento_w)	= cd_area_procedimento_w
					and	coalesce(a.ie_liberado,'N')	= 'S';
					
					if (qt_cobertura_w > 0) then
						ie_restricao_p	:= 'N';
						ds_obs_p	:= wheb_mensagem_pck.get_texto(1172611);
					end if;
				end if;
				end;
			end loop;
			
			end;
		end loop;
	end if;
	
	--Verificar se o beneficiario e cooperado
	if (r_c01_w.qt_valor_producao > 0) then
		select	max(a.nr_sequencia)
		into STRICT	nr_seq_cooperado_w
		from	pls_cooperado	a
		where	a.cd_pessoa_fisica	= cd_pessoa_fisica_p;
		
		if (nr_seq_cooperado_w IS NOT NULL AND nr_seq_cooperado_w::text <> '') then
			if (r_c01_w.ie_afastamento = 'S') then
				select	count(1)
				into STRICT	qt_afastamento_w
				from	pls_cooperado_ausencia
				where	nr_seq_cooperado	= nr_seq_cooperado_w
				and	coalesce(ie_atestado,'N')	= 'S'
				and	dt_referencia_p	between dt_inicio and add_months(coalesce(dt_fim,dt_referencia_p),r_c01_w.qt_periodo_producao);
			end if;
			
			if	((r_c01_w.ie_afastamento = 'N') or (r_c01_w.ie_afastamento = 'S' AND qt_afastamento_w = 0)) then
				select	sum(vl_liberado)
				into STRICT	vl_producao_medico_w
				from	pls_conta_medica_resumo
				where	cd_pessoa_fisica = cd_pessoa_fisica_p
				and	dt_competencia > trunc(add_months(clock_timestamp(),-r_c01_w.qt_periodo_producao),'month')
				and	((ie_situacao != 'I') or (coalesce(ie_situacao::text, '') = ''));
				
				if (coalesce(vl_producao_medico_w,0) < r_c01_w.qt_valor_producao) then
					ie_restricao_p	:= 'N';
					ds_obs_p	:= wheb_mensagem_pck.get_texto(1172612,'VL_META_PRODUCAO='||r_c01_w.qt_valor_producao||';QT_PERIODO_PROD='||r_c01_w.qt_periodo_producao||';VL_PRODUCAO_MEDICO='||coalesce(vl_producao_medico_w,0));
				end if;
			end if;
		end if;
	end if;
	
	--Resultado
	if (r_c01_w.pr_resultado <> 0) then
		qt_meses_resultado_w	:= r_c01_w.qt_meses_resultado * -1;
		
		select	trunc(add_months(dt_referencia_p,qt_meses_resultado_w),'month'),
			fim_mes(add_months(dt_referencia_p,-1))
		into STRICT	dt_inicial_resultado_w,
			dt_final_resultado_w
		;
		
		if (r_c01_w.ie_tipo_contrato = 'C') then
			SELECT * FROM pls_ar_gerar_resultado_pck.obter_sinistralidade(nr_seq_contrato_p, null, null, null, dt_inicial_resultado_w, dt_final_resultado_w, pls_mensalidade_util_pck.get_ie_remido_sinistralid_reaj, null, tx_sinistralidade_w, tx_resultado_w, vl_receita_w, vl_custo_w) INTO STRICT tx_sinistralidade_w, tx_resultado_w, vl_receita_w, vl_custo_w;

			if (coalesce(tx_sinistralidade_w,0) < r_c01_w.pr_resultado) then
				ie_restricao_p	:= 'N';
				ds_obs_p	:= wheb_mensagem_pck.get_texto(1172613,'PR_RESULTADO_CONTRATO='||coalesce(tx_sinistralidade_w,0)||';PR_META_RESULTADO='||r_c01_w.pr_resultado);
			end if;
		elsif (r_c01_w.ie_tipo_contrato = 'G') then
			SELECT * FROM pls_ar_gerar_resultado_pck.obter_sinistralidade(null, nr_seq_contrato_p, null, null, dt_inicial_resultado_w, dt_final_resultado_w, pls_mensalidade_util_pck.get_ie_remido_sinistralid_reaj, null, tx_sinistralidade_w, tx_resultado_w, vl_receita_w, vl_custo_w) INTO STRICT tx_sinistralidade_w, tx_resultado_w, vl_receita_w, vl_custo_w;

			if (coalesce(tx_sinistralidade_w,0) < r_c01_w.pr_resultado) then
				ie_restricao_p	:= 'N';
				ds_obs_p	:= wheb_mensagem_pck.get_texto(1172614,'PR_RESULTADO_CONTRATO='||coalesce(tx_sinistralidade_w,0)||';PR_META_RESULTADO='||r_c01_w.pr_resultado);
			end if;
		elsif (r_c01_w.ie_tipo_contrato = 'R') then
			select	max(b.nr_sequencia)
			into STRICT	nr_seq_grupo_relacionamento_w
			from	pls_contrato_grupo	a,
				pls_grupo_contrato	b
			where	a.nr_seq_grupo		= b.nr_sequencia
			and	b.ie_tipo_relacionamento = '1'
			and	a.nr_seq_contrato	= nr_seq_contrato_p;
			
			if (nr_seq_grupo_relacionamento_w IS NOT NULL AND nr_seq_grupo_relacionamento_w::text <> '') then
				SELECT * FROM pls_ar_gerar_resultado_pck.obter_sinistralidade(null, null, nr_seq_grupo_relacionamento_w, null, dt_inicial_resultado_w, dt_final_resultado_w, pls_mensalidade_util_pck.get_ie_remido_sinistralid_reaj, null, tx_sinistralidade_w, tx_resultado_w, vl_receita_w, vl_custo_w) INTO STRICT tx_sinistralidade_w, tx_resultado_w, vl_receita_w, vl_custo_w;

				if (coalesce(tx_sinistralidade_w,0) < r_c01_w.pr_resultado) then
					ie_restricao_p	:= 'N';
					ds_obs_p	:= wheb_mensagem_pck.get_texto(1172615,'PR_RESULTADO_CONTRATO='||coalesce(tx_sinistralidade_w,0)||';PR_META_RESULTADO='||r_c01_w.pr_resultado);
				end if;
			end if;
		end if;
	end if;
	
	if (r_c01_w.ie_remido = 'S') and (ie_remido_p = 'S') then
		ie_restricao_p	:= 'N';
		ds_obs_p	:= wheb_mensagem_pck.get_texto(1172616);
	end if;
	end;
end loop; --C01
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_bonific_restricao ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_bonificacao_p pls_bonificacao.nr_sequencia%type, nr_seq_segurado_p pls_mensalidade_segurado.nr_seq_segurado%type, cd_pessoa_fisica_p pls_segurado.cd_pessoa_fisica%type, nr_seq_pagador_p pls_mensalidade.nr_seq_pagador%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, ie_situacao_trabalhista_p pls_segurado.ie_situacao_trabalhista%type, ie_remido_p pls_mensalidade_segurado.ie_remido%type, nm_usuario_p usuario.nm_usuario%type, ie_restricao_p INOUT text, ds_obs_p INOUT text, nr_seq_vinculo_bonificacao_p pls_bonificacao_vinculo.nr_sequencia%type, dt_inicio_vigencia_p pls_bonificacao_vinculo.dt_inicio_vigencia%type) FROM PUBLIC;

