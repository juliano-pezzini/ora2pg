-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_preco_beneficiario ( nr_seq_lote_p bigint, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_segurado_w		bigint;
nr_seq_reajuste_w		bigint;
qt_idade_w			bigint;
dt_mesano_referencia_w		timestamp;
ie_tipo_contratacao_w		varchar(3);
nr_seq_contrato_w		bigint;
cont_w				bigint;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
nr_seq_preco_w			bigint;
nr_seq_tabela_w			bigint;
vl_preco_w			double precision;
nm_pessoa_fisica_w		varchar(255);
nr_seq_segurado_preco_w		bigint;
qt_idade_ww			bigint;
qt_sca_w			bigint;
ie_preco_w			varchar(2);
ie_aplicacao_reajuste_w		varchar(2);
nr_seq_tabela_sca_w		bigint;
nr_seq_preco_sca_w		bigint;
ds_observacao_w			varchar(255)	:= null;
nr_seq_sca_w			bigint;
nr_seq_segurado_sca_w		bigint;
nr_seq_vinculo_sca_w		bigint;
nr_seq_intercambio_w		bigint;
ie_tipo_beneficiario_w		varchar(2);
ie_tipo_segurado_ww		varchar(2);
nr_seq_contrato_seg_w		bigint;
nr_seq_produto_seg_w		bigint;
nr_seq_seg_preco_w		bigint;
ie_gerar_reajuste_w		varchar(1);
dt_nascimento_w			timestamp;
nr_seq_processo_w		bigint;
ie_situacao_preco_w		varchar(1);
nr_seq_processo_reaj_w		bigint;
ie_reajustar_benef_cancelado_w	varchar(1);
dt_rescisao_contrato_w		timestamp;
nr_seq_reaj_preco_sca_w		bigint;
ie_grau_parentesco_w		varchar(2);
qt_vidas_w			bigint;
ie_preco_vidas_contrato_w	varchar(1);
ie_calculo_vidas_w		varchar(2);
cd_matricula_familia_w		bigint;
nr_seq_titular_w		bigint;
nr_seq_contrato_ww		bigint;
nr_seq_reajuste_ww		bigint;
ie_situacao_reaj_contrato_w	varchar(10);
ie_tipo_contratacao_benef_w	varchar(10);
cont_seg_preco_w		bigint;
cont_seg_preco_orig_w		bigint;
nr_contrato_w			bigint;
nr_seq_lote_referencia_w	bigint;
nr_seq_reaj_deflator_w		pls_reajuste.nr_seq_lote_deflator%type;
ie_gerar_reajuste_deflator_w	varchar(1) := 'S';
nr_seq_reajuste_fx_w		pls_segurado_preco.nr_sequencia%type;
dt_nascimento_ww		pessoa_fisica.dt_nascimento%type;
dt_aniversario_w		timestamp;
vl_preco_inicial_w		pls_plano_preco.vl_preco_inicial%type;
vl_preco_atual_w		pls_plano_preco.vl_preco_atual%type;
vl_preco_nao_subsid_atual_w	pls_plano_preco.vl_preco_nao_subsid_atual%type;
vl_adaptacao_w			pls_plano_preco.vl_adaptacao%type;
vl_minimo_w			pls_plano_preco.vl_minimo%type;
tx_acrescimo_w			pls_plano_preco.tx_acrescimo%type;
tx_desconto_w			double precision;
nr_seq_regra_desconto_w		bigint;
vl_desconto_w			double precision;
vl_reajustado_w			pls_reajuste_preco.vl_reajustado%type;
vl_preco_atual_ww		pls_segurado_preco.vl_preco_atual%type;
nr_seq_preco_ww			pls_segurado_preco.nr_seq_preco%type;
nr_seq_segurado_preco_ww	pls_segurado_preco.nr_sequencia%type;
tx_deflator_w			pls_reajuste.tx_deflator%type;
nr_seq_tabela_ww		pls_segurado_preco.nr_seq_tabela%type;
qt_idade_reaj_fx_w		pls_segurado_preco.qt_idade%type;
ie_status_w			pls_reajuste.ie_status%type;
nr_seq_fx_segurado_w		bigint;
tx_reajuste_w			pls_reajuste.tx_reajuste%type;
vl_preco_atual_www		double precision;
nr_seq_tabela_www		bigint;
nr_seq_seg_preco_alt_tab_w	pls_segurado_preco.nr_sequencia%type;
vl_preco_nao_subsidiado_w	double precision;
vl_preco_nao_subsid_desc_ww	double precision;
qt_reaj_w			bigint;
qt_processo_w			bigint;
nr_seq_titular_ww		pls_segurado.nr_seq_titular%type;
cd_pessoa_fisica_w		pessoa_fisica.cd_pessoa_fisica%type;

c01 CURSOR FOR
	SELECT	b.nr_sequencia,
		a.dt_nascimento,
		b.nr_seq_tabela,
		c.ie_preco,
		b.ie_tipo_segurado,
		b.nr_seq_contrato,
		coalesce(substr(pls_obter_garu_dependencia_seg(b.nr_sequencia,'C'),1,2),'X') ie_grau_parentesco
	from	pessoa_fisica	a,
		pls_segurado	b,
		pls_plano	c
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	b.nr_seq_plano		= c.nr_sequencia
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	coalesce(b.dt_rescisao::text, '') = ''
	and	ie_aplicacao_reajuste_w in ('G','C')
	and	((b.ie_tipo_segurado	= ie_tipo_beneficiario_w) or (coalesce(ie_tipo_beneficiario_w::text, '') = ''))
	and	to_char(a.dt_nascimento, 'mm')	= to_char(dt_mesano_referencia_w, 'mm')
	and	dt_inicial_w	>= trunc(b.dt_contratacao,'Month')
	and	b.cd_estabelecimento	= cd_estabelecimento_p
	--and	((ie_aplicacao_reajuste_w = 'G') or (((ie_aplicacao_reajuste_w = 'C') and (c.ie_tipo_operacao = 'B')) or ((ie_aplicacao_reajuste_w = 'S') and (c.ie_tipo_operacao = 'A'))))
	and	((c.ie_tipo_contratacao = ie_tipo_contratacao_benef_w) or (coalesce(ie_tipo_contratacao_benef_w::text, '') = ''))
	and	ie_tipo_contratacao_w	= 'F';		-- Cursor dos reajustes de faixa etaria
c02 CURSOR FOR
	SELECT  b.nr_sequencia,
		b.nr_seq_tabela,
		a.dt_nascimento,
		d.dt_rescisao_contrato
	from	pessoa_fisica	a,
		pls_segurado	b,
		pls_plano	c,
		pls_contrato	d
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	c.nr_sequencia		= b.nr_seq_plano
	and	d.nr_sequencia		= b.nr_seq_contrato
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	c.ie_preco in ('1','4')
	and	c.ie_tipo_contratacao	= 'I'
	and	pls_obter_se_aniv_contrato(b.nr_sequencia, dt_inicial_w, dt_final_w, d.ie_reajuste) = 'S'
	and	ie_tipo_contratacao_w	= 'I'
	and	b.nr_sequencia not in (	SELECT	x.nr_seq_segurado
						from	pls_segurado_preco x,
							pls_lote_reaj_segurado y
						where	x.nr_seq_lote	= y.nr_sequencia
						and	trunc(dt_mesano_referencia,'month') = trunc(dt_mesano_referencia_w,'month')
						and	(x.dt_liberacao IS NOT NULL AND x.dt_liberacao::text <> '')
						and	y.ie_tipo_contratacao = 'I');		-- Cursor dos reajustes para planos individual/familiar;
c03 CURSOR FOR
	SELECT  b.nr_sequencia,
		b.nr_seq_tabela,
		(obter_idade(a.dt_nascimento,add_months(fim_mes(dt_mesano_referencia_w),-1),'A'))::numeric ,
		substr(a.nm_pessoa_fisica,1,255),
		null,
		coalesce(substr(pls_obter_garu_dependencia_seg(b.nr_sequencia,'C'),1,2),'X'),
		b.cd_matricula_familia,
		b.nr_seq_titular,
		a.dt_nascimento
	from	pessoa_fisica	a,
		pls_segurado	b,
		pls_plano	c
	where	b.cd_pessoa_fisica	= a.cd_pessoa_fisica
	and	c.nr_sequencia		= b.nr_seq_plano
	and	((b.nr_seq_contrato	= nr_seq_contrato_w and c.ie_preco in ('1','4')) or (b.nr_seq_intercambio = nr_seq_intercambio_w and b.IE_TIPO_REPASSE = 'P'))
	and	(b.dt_liberacao IS NOT NULL AND b.dt_liberacao::text <> '')
	and	c.ie_tipo_contratacao	<> 'I'
	and	ie_tipo_contratacao_w	= 'C'
	and	exists (	SELECT	1
				from	pls_lote_reaj_segurado	x,
					pls_reajuste		y,
					pls_reajuste_tabela	z
				where	x.nr_sequencia		= nr_seq_lote_p
				and	x.nr_seq_reajuste	= y.nr_sequencia
				and	z.nr_seq_reajuste	= y.nr_sequencia
				and	z.nr_seq_tabela		= b.nr_seq_tabela
				
union all

				select	1
				from	pls_lote_reaj_segurado	x,
					pls_reajuste		y,
					pls_reajuste_tabela	z
				where	x.nr_sequencia		= nr_seq_lote_p
				and	x.nr_seq_reajuste	= y.nr_seq_lote_referencia  -- Quando nao e informado o contrato no lote de reajuste
				and	z.nr_seq_reajuste	= y.nr_sequencia
				and	z.nr_seq_tabela		= b.nr_seq_tabela);	-- Cursor dos reajustes para planos coletivos;
C04 CURSOR FOR
	SELECT	a.nr_seq_tabela,
		a.nr_seq_plano,
		c.nr_sequencia,
		a.nr_sequencia,
		b.dt_nascimento,
		coalesce(substr(pls_obter_garu_dependencia_seg(c.nr_sequencia,'C'),1,2),'X') ie_grau_parentesco
	from	pls_sca_vinculo	a,
		pessoa_fisica	b,
		pls_segurado	c
	where	a.nr_seq_segurado	= c.nr_sequencia
	and	c.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	c.cd_estabelecimento	= cd_estabelecimento_p
	and	to_char(b.dt_nascimento, 'mm')	= to_char(dt_mesano_referencia_w, 'mm')
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
	and	coalesce(c.dt_rescisao::text, '') = ''
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	coalesce(a.dt_fim_vigencia::text, '') = ''
	and	ie_tipo_contratacao_w	= 'F'
	and	ie_aplicacao_reajuste_w in ('G','S');

C05 CURSOR FOR
	SELECT	nr_sequencia,
		vl_preco_atual
	from	pls_plano_preco
	where	qt_idade_ww	>= qt_idade_inicial
	and	qt_idade_ww	<= qt_idade_final
	and	nr_seq_tabela	= nr_seq_tabela_w
	and	coalesce(ie_grau_titularidade,ie_grau_parentesco_w)	= ie_grau_parentesco_w
	and	qt_vidas_w between coalesce(qt_vidas_inicial,qt_vidas_w) and coalesce(qt_vidas_final,qt_vidas_w)
	order	by	coalesce(ie_grau_titularidade,' ');


BEGIN

select	count(*)
into STRICT	cont_w
from	pls_segurado_preco
where	nr_seq_lote	= nr_seq_lote_p;

if (cont_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 181602, null );
	/*Ja foram inseridos beneficiarios para este lote!
	Para gerar novamente exclua os ja existentes!' */
end if;

select	dt_mesano_referencia,
	ie_tipo_contratacao,
	nr_seq_contrato,
	trunc(dt_mesano_referencia,'month'),
	last_day(dt_mesano_referencia),
	ie_aplicacao_reajuste,
	nr_seq_intercambio,
	ie_tipo_beneficiario,
	nr_seq_reajuste,
	ie_tipo_contratacao_benef,
	nr_seq_lote_referencia
into STRICT	dt_mesano_referencia_w,
	ie_tipo_contratacao_w,
	nr_seq_contrato_w,
	dt_inicial_w,
	dt_final_w,
	ie_aplicacao_reajuste_w,
	nr_seq_intercambio_w,
	ie_tipo_beneficiario_w,
	nr_seq_reajuste_ww,
	ie_tipo_contratacao_benef_w,
	nr_seq_lote_referencia_w
from	pls_lote_reaj_segurado
where	nr_sequencia	= nr_seq_lote_p;

select	max(nr_contrato)
into STRICT	nr_contrato_w
from	pls_contrato
where	nr_sequencia	= nr_seq_contrato_w;

select	max(ie_reajustar_benef_cancelado)
into STRICT	ie_reajustar_benef_cancelado_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

ie_reajustar_benef_cancelado_w	:= coalesce(ie_reajustar_benef_cancelado_w,'T');

select	max(ie_reajustar_benef_cancelado),
	max(tx_deflator),
	max(ie_status),
	max(tx_reajuste)
into STRICT	ie_situacao_reaj_contrato_w,
	tx_deflator_w,
	ie_status_w,
	tx_reajuste_w
from	pls_reajuste
where	nr_sequencia	= nr_seq_reajuste_ww;

if (ie_status_w <> '2') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(413189);
end if;

ie_situacao_reaj_contrato_w	:= coalesce(ie_situacao_reaj_contrato_w,'T');

open c01;
loop
fetch c01 into
	nr_seq_segurado_w,
	dt_nascimento_w,
	nr_seq_tabela_w,
	ie_preco_w,
	ie_tipo_segurado_ww,
	nr_seq_contrato_ww,
	ie_grau_parentesco_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	ie_gerar_reajuste_w	:= 'S';
	nr_seq_processo_w	:= null;
	nr_seq_processo_reaj_w	:= null;
	
	if	((coalesce(nr_seq_tabela_w::text, '') = '') and (ie_preco_w = '1') and (ie_tipo_segurado_ww in ('B','A'))) then /* Somente e obrigatorio existir tabela para produto com formacao de preco pre estabelecido */
		CALL pls_gerar_log_erro_reaj(nr_seq_lote_p, nr_seq_segurado_w, wheb_mensagem_pck.get_texto(280499), -- 280499 = Nao existe tabela de preco informada para o beneficiario. Verifique.
						cd_estabelecimento_p, nm_usuario_p);
		ie_gerar_reajuste_w	:= 'N';
	end if;
	
	if (nr_seq_tabela_w IS NOT NULL AND nr_seq_tabela_w::text <> '') then
		qt_idade_w	:= trunc(months_between(fim_mes(dt_mesano_referencia_w),dt_nascimento_w) / 12);
		
		if	((qt_idade_w > 999) or (qt_idade_w < 0)) then
			CALL pls_gerar_log_erro_reaj(nr_seq_lote_p, nr_seq_segurado_w, wheb_mensagem_pck.get_texto(280500, 'QT_IDADE_P=' || qt_idade_w), -- 280500 = O beneficiario possui #@QT_IDADE_P#@ anos. Verifique.
						cd_estabelecimento_p, nm_usuario_p);
			ie_gerar_reajuste_w	:= 'N';
		end if;
		
		begin
		select	coalesce(ie_preco_vidas_contrato,'N'),
			coalesce(ie_calculo_vidas,'A')
		into STRICT	ie_preco_vidas_contrato_w,
			ie_calculo_vidas_w
		from	pls_tabela_preco
		where	nr_sequencia	= nr_seq_tabela_w;
		exception
		when others then
			ie_preco_vidas_contrato_w	:= 'N';
			ie_calculo_vidas_w		:= 'A';
		end;
		
		if (ie_preco_vidas_contrato_w = 'S') then
			if (ie_calculo_vidas_w = 'A') then
				select	count(*)
				into STRICT	qt_vidas_w
				from	pls_segurado
				where	nr_seq_contrato = nr_seq_contrato_ww
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_mesano_referencia_w));
			elsif (ie_calculo_vidas_w = 'T') then
				select	count(*)
				into STRICT	qt_vidas_w
				from	pls_segurado
				where	nr_seq_contrato = nr_seq_contrato_ww
				and	coalesce(nr_seq_titular::text, '') = ''
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_mesano_referencia_w));
			elsif (ie_calculo_vidas_w = 'D') then
				select	count(*)
				into STRICT	qt_vidas_w
				from	pls_segurado
				where	nr_seq_contrato = nr_seq_contrato_ww
				and	(nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '')
				and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
				and	((coalesce(dt_rescisao::text, '') = '') or (dt_rescisao > dt_mesano_referencia_w));
			elsif (ie_calculo_vidas_w = 'TD') then
				select	count(*)
				into STRICT	qt_vidas_w
				from	pls_segurado a
				where	a.nr_seq_contrato = nr_seq_contrato_ww
				and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
				and	((coalesce(a.dt_rescisao::text, '') = '') or (a.dt_rescisao > dt_mesano_referencia_w))
				and	((coalesce(nr_seq_titular::text, '') = '') or ((nr_seq_titular IS NOT NULL AND nr_seq_titular::text <> '') and ((SELECT	count(*)
													from	grau_parentesco x
													where	x.nr_sequencia = a.nr_seq_parentesco
													and	x.ie_tipo_parentesco = '1') > 0)));
			elsif (ie_calculo_vidas_w = 'F') then
				qt_vidas_w	:= coalesce(pls_obter_qt_familia_benef(nr_seq_segurado_w,nr_seq_titular_w,'L',dt_mesano_referencia_w),0);
			end if;
		else
			qt_vidas_w	:= 1;
		end if;
		
		qt_idade_ww	:= qt_idade_w;
		open C05;
		loop
		fetch C05 into
			nr_seq_preco_w,
			vl_preco_atual_www;
		EXIT WHEN NOT FOUND; /* apply on C05 */
		end loop;
		close C05;
		
		if (coalesce(nr_seq_preco_w,0) = 0) then
			CALL pls_gerar_log_erro_reaj(nr_seq_lote_p, nr_seq_segurado_w, wheb_mensagem_pck.get_texto(280501),
						cd_estabelecimento_p, nm_usuario_p);
			ie_gerar_reajuste_w	:= 'N';
		end if;
		
		if (ie_gerar_reajuste_w = 'S') then
			select	coalesce(nr_seq_titular, nr_sequencia),
				cd_pessoa_fisica
			into STRICT	nr_seq_titular_ww,
				cd_pessoa_fisica_w
			from	pls_segurado
			where	nr_sequencia = nr_seq_segurado_w;
		
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_processo_reaj_w
			from	pls_processo_judicial_reaj	a,
				processo_judicial_liminar	b
			where	a.nr_seq_processo		= b.nr_sequencia
			and	((b.nr_seq_segurado	= nr_seq_segurado_w) or (coalesce(b.nr_seq_segurado::text, '') = ''))
			and	((b.nr_seq_contrato	= nr_seq_contrato_ww) or (coalesce(b.nr_seq_contrato::text, '') = ''))
			and	b.ie_estagio			= 2 --Liberado
			and	a.ie_impedir_reaj_fx_etaria	= 'S'
			and	dt_mesano_referencia_w	>= coalesce(b.dt_inicio_validade,dt_mesano_referencia_w) --data do processo
			and	dt_mesano_referencia_w	<= coalesce(b.dt_fim_validade,dt_mesano_referencia_w)
			and	dt_mesano_referencia_w	>= coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) --data da regra
			and	dt_mesano_referencia_w	<= coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w);
			
			if	((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and (coalesce(nr_seq_processo_reaj_w::text, '') = '')) then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_processo_reaj_w
				from	pls_processo_judicial_reaj	a,
					processo_judicial_liminar	b
				where	a.nr_seq_processo		= b.nr_sequencia
				and	b.nr_seq_segurado in (	SELECT	x.nr_sequencia
								from	pls_segurado x
								where	x.cd_pessoa_fisica = cd_pessoa_fisica_w)
				and	b.ie_estagio			= 2 --Liberado
				and	a.ie_impedir_reaj_fx_etaria	= 'S'
				and	b.ie_considera_codigo_pf = 'S'
				and	dt_mesano_referencia_w	>= coalesce(b.dt_inicio_validade,dt_mesano_referencia_w) --data do processo
				and	dt_mesano_referencia_w	<= coalesce(b.dt_fim_validade,dt_mesano_referencia_w)
				and	dt_mesano_referencia_w	>= coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) --data da regra
				and	dt_mesano_referencia_w	<= coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w);
			end if;
			
			if	((nr_seq_titular_ww IS NOT NULL AND nr_seq_titular_ww::text <> '') and (coalesce(nr_seq_processo_reaj_w::text, '') = '')) then
				select	max(a.nr_sequencia)
				into STRICT	nr_seq_processo_reaj_w
				from	pls_processo_judicial_reaj 	a,
					processo_judicial_liminar 	b
				where	a.nr_seq_processo		= b.nr_sequencia
				and	(b.nr_seq_segurado in (	SELECT	x.nr_sequencia
								from	pls_segurado x
								where	((x.nr_seq_titular = nr_seq_titular_ww) or (x.nr_sequencia = nr_seq_titular_ww))))
				and	b.ie_estagio			= 2 --Liberado
				and	a.ie_impedir_reaj_fx_etaria	= 'S'
				and	a.ie_considerar_dependente	= 'S'
				and	dt_mesano_referencia_w	>= coalesce(b.dt_inicio_validade,dt_mesano_referencia_w) --data do processo
				and	dt_mesano_referencia_w	<= coalesce(b.dt_fim_validade,dt_mesano_referencia_w)
				and	dt_mesano_referencia_w	>= coalesce(a.dt_inicio_vigencia,dt_mesano_referencia_w) --data da regra
				and	dt_mesano_referencia_w	<= coalesce(a.dt_fim_vigencia,dt_mesano_referencia_w);
			end if;
			
			ie_situacao_preco_w		:= 'A';

			if (coalesce(nr_seq_processo_reaj_w,0) <> 0) then
				ie_situacao_preco_w	:= 'I';
				
				select	max(nr_seq_processo)
				into STRICT	nr_seq_processo_w
				from	pls_processo_judicial_reaj
				where	nr_sequencia	= nr_seq_processo_reaj_w;
			end if;
			
			select	nextval('pls_segurado_preco_seq')
			into STRICT	nr_seq_seg_preco_w
			;
			
			insert	into pls_segurado_preco(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, dt_reajuste,
				nr_seq_segurado, vl_preco_atual, qt_idade,
				cd_motivo_reajuste, vl_preco_ant, ds_observacao,
				nr_seq_reajuste, nr_seq_preco, nr_seq_lote,
				dt_liberacao, nm_usuario_liberacao, vl_desconto,
				vl_preco_nao_subsid_desc, nr_seq_tabela, nr_seq_processo,
				ie_situacao, nr_seq_processo_reaj)
			values (nr_seq_seg_preco_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, trunc(dt_mesano_referencia_w,'dd'),
				nr_seq_segurado_w, 0, qt_idade_w,
				'E', 0, null,
				null, nr_seq_preco_w, nr_seq_lote_p,
				null, null, 0,
				0,nr_seq_tabela_w, nr_seq_processo_w,
				ie_situacao_preco_w, nr_seq_processo_reaj_w);
		end if;
	end if;
	end;
end loop;
close c01;

/* Reajuste por faixa etaria SCA vinculado ao beneficiario */

open C04;
loop
fetch C04 into
	nr_seq_tabela_sca_w,
	nr_seq_sca_w,
	nr_seq_segurado_sca_w,
	nr_seq_vinculo_sca_w,
	dt_nascimento_w,
	ie_grau_parentesco_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	
	ie_gerar_reajuste_w	:= 'S';
	if (nr_seq_tabela_sca_w IS NOT NULL AND nr_seq_tabela_sca_w::text <> '') then
		qt_idade_w	:= trunc(months_between(fim_mes(dt_mesano_referencia_w),dt_nascimento_w) / 12);
		
		if	((qt_idade_w > 999) or (qt_idade_w < 0)) then
			CALL pls_gerar_log_erro_reaj(nr_seq_lote_p, nr_seq_segurado_w, wheb_mensagem_pck.get_texto(280500, 'QT_IDADE_P=' || qt_idade_w), -- 280500 = O beneficiario possui #@QT_IDADE_P#@ anos. Verifique.
						cd_estabelecimento_p, nm_usuario_p);
			ie_gerar_reajuste_w	:= 'N';
		end if;
		
		qt_vidas_w	:= 0;
		nr_seq_tabela_w	:= nr_seq_tabela_sca_w;
		qt_idade_ww	:= qt_idade_w;
		open C05;
		loop
		fetch C05 into
			nr_seq_preco_sca_w,
			vl_preco_atual_www;
		EXIT WHEN NOT FOUND; /* apply on C05 */
		end loop;
		close C05;
		
		if (coalesce(nr_seq_preco_sca_w,0) = 0) then
			select	max(a.nr_contrato)
			into STRICT	nr_seq_contrato_seg_w
			from	pls_segurado	b,
				pls_contrato	a
			where	a.nr_sequencia 	= b.nr_seq_contrato
			and	b.nr_sequencia 	= nr_seq_segurado_sca_w;
			
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_produto_seg_w
			from	pls_segurado	b,
				pls_plano	a
			where	a.nr_sequencia = b.nr_seq_plano
			and	b.nr_sequencia = nr_seq_segurado_sca_w;
			
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 181623, 'QT_IDADE=' || qt_idade_w || ';' || 'NR_SEQ_TABELA_SCA=' || to_char(nr_seq_tabela_sca_w) || ';' ||
									'NR_SEQ_SEGURADO_SCA=' || to_char(nr_seq_segurado_sca_w) || ';' || 'NR_SEQ_CONTRATO_SEG=' || to_char(nr_seq_contrato_seg_w) || ';' ||
									'NR_SEQ_PRODUTO_SEG=' ||to_char(nr_seq_produto_seg_w));
		end if;
		
		if (ie_gerar_reajuste_w = 'S') then
			select	nextval('pls_segurado_preco_origem_seq')
			into STRICT	nr_seq_reaj_preco_sca_w
			;
			
			insert	into pls_segurado_preco_origem(nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, dt_reajuste,
				nr_seq_segurado, vl_preco_atual, qt_idade,
				cd_motivo_reajuste, ds_observacao, cd_estabelecimento,
				nr_seq_reajuste, nr_seq_preco, nr_seq_lote_reajuste,
				dt_liberacao, nm_usuario_liberacao, nr_seq_tabela,
				vl_preco_ant, nr_seq_plano, nr_seq_vinculo_sca)
			values (nr_seq_reaj_preco_sca_w, clock_timestamp(), nm_usuario_p,
				clock_timestamp(), nm_usuario_p, trunc(dt_mesano_referencia_w,'dd'),
				nr_seq_segurado_sca_w, 0, qt_idade_w,
				'E', ds_observacao_w, cd_estabelecimento_p,
				null, nr_seq_preco_sca_w, nr_seq_lote_p,
				null, null, nr_seq_tabela_sca_w,
				0, nr_seq_sca_w, nr_seq_vinculo_sca_w);
		end if;
	end if;
	end;
end loop;
close C04;

open c02;
loop
fetch c02 into
	nr_seq_segurado_w,
	nr_seq_tabela_w,
	dt_nascimento_w,
	dt_rescisao_contrato_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin
	if	((coalesce(dt_rescisao_contrato_w::text, '') = '') or (dt_rescisao_contrato_w > dt_mesano_referencia_w)) or
		((dt_rescisao_contrato_w IS NOT NULL AND dt_rescisao_contrato_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T','I'))) then
		CALL pls_preco_beneficiario_pck.atualizar_reajuste_benef(nr_seq_segurado_w, dt_mesano_referencia_w, nr_seq_reajuste_ww, nr_seq_lote_p, 'N', nm_usuario_p, cd_estabelecimento_p);
	end if;
	end;
end loop;
close c02;

open c03;
loop
fetch c03 into
	nr_seq_segurado_w,
	nr_seq_tabela_w,
	qt_idade_w,
	nm_pessoa_fisica_w,
	dt_rescisao_contrato_w,
	ie_grau_parentesco_w,
	cd_matricula_familia_w,
	nr_seq_titular_w,
	dt_nascimento_ww;
EXIT WHEN NOT FOUND; /* apply on c03 */
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_reaj_deflator_w
	from 	pls_reajuste
	where	nr_seq_lote_deflator = nr_seq_reajuste_ww;

	if (coalesce(nr_seq_reaj_deflator_w,0) <> 0) then
		select	count(1)
		into STRICT	qt_reaj_w
		from	pls_segurado_preco a,
			pls_reajuste_preco b,
			pls_reajuste	   c
		where	b.nr_sequencia 	= a.nr_seq_reajuste
		and	c.nr_sequencia 	= b.nr_seq_reajuste
		and	a.nr_seq_segurado = nr_seq_segurado_w
		and	c.nr_sequencia 	= nr_seq_reaj_deflator_w;

		if (qt_reaj_w > 0) then
			ie_gerar_reajuste_deflator_w	:= 'S';
		else
			ie_gerar_reajuste_deflator_w	:= 'N';
		end if;
	end if;

	if	((ie_gerar_reajuste_deflator_w = 'S') and
		((coalesce(dt_rescisao_contrato_w::text, '') = '') or (dt_rescisao_contrato_w > dt_mesano_referencia_w)) or
		((dt_rescisao_contrato_w IS NOT NULL AND dt_rescisao_contrato_w::text <> '') and (ie_reajustar_benef_cancelado_w in ('T','C')))) then
		
		/*Caso a situacao para o reajuste do contrato for diferente de ambos verificar como esta a situacao do contrato*/

		if (ie_situacao_reaj_contrato_w <> 'T') then
			if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
				if (pls_obter_situac_contr_periodo(nr_seq_contrato_w,'C','M',dt_mesano_referencia_w) <> ie_situacao_reaj_contrato_w) then
					goto finalCursor03;
				end if;
			elsif (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
				if (pls_obter_situac_contr_periodo(nr_seq_intercambio_w,'I','M',dt_mesano_referencia_w) <> ie_situacao_reaj_contrato_w) then
					goto finalCursor03;
				end if;
			end if;
		end if;
		
		if (length(qt_idade_w) > 3) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort( 181614, 'NR_SEQ_SEGURADO=' || nr_seq_segurado_w || ';' || 'NM_PESSOA_FISICA=' || nm_pessoa_fisica_w );
		end if;
		
		CALL pls_preco_beneficiario_pck.atualizar_reajuste_benef(nr_seq_segurado_w, dt_mesano_referencia_w, nr_seq_reajuste_ww, nr_seq_lote_p, 'N', nm_usuario_p, cd_estabelecimento_p);
	end if;
	
	<<finalCursor03>>
	nr_seq_segurado_w	:= nr_seq_segurado_w;
	end;
end loop;
close c03;

if (ie_tipo_contratacao_w <> 'F') then
	select	count(*)
	into STRICT	qt_sca_w
	from	pls_segurado_preco_origem
	where	nr_seq_lote_reajuste	= nr_seq_lote_p;
	
	if (qt_sca_w > 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort( 181605, null );
		/*Ja foram inseridos reajustes SCA beneficiarios para este lote!
		Para gerar novamente exclua os ja existentes!*/
	else
		CALL pls_inserir_preco_benef_sca(nr_seq_lote_p,nm_usuario_p);
	end if;
end if;

if (coalesce(ie_commit_p,'S') = 'S') then
	commit;
end if;

if (nr_seq_reajuste_ww = coalesce(nr_seq_lote_referencia_w,0)) then
	select	count(1)
	into STRICT	cont_seg_preco_w
	from	pls_segurado_preco
	where	nr_seq_lote = nr_seq_lote_p;
	
	select	count(1)
	into STRICT	cont_seg_preco_orig_w
	from	pls_segurado_preco_origem
	where	nr_seq_lote_reajuste = nr_seq_lote_p;
	
	if (cont_seg_preco_w = 0 and cont_seg_preco_orig_w = 0) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(232876, 'NR_CONTRATO='||nr_contrato_w );
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_preco_beneficiario ( nr_seq_lote_p bigint, ie_commit_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

