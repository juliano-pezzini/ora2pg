-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';


procedure migrar_replicar_pos_estab is

/*
  Migração de informações geradas pela antiga forma de geração para a atual forma de geração.
  Tabelas envolvidas:

  Antiga        Nova(s)
  PLS_CONTA_POS_ESTABELECIDO --->  PLS_CONTA_POS_PROC e PLS_CONTA_POS_MAT.

  PLS_CONTA_POS_ESTAB_CONTAB --->  PLS_CONTA_POS_PROC_CONTAB, PLS_CONTA_POS_MAT_CONTAB,
          PLS_CONTA_POS_MAT_FAT, PLS_CONTA_POS_PROC_FAT.

  PLS_CONTA_POS_ESTAB_TAXA  -->  PLS_CONTA_POS_PROC_TX,  PLS_CONTA_POS_MAT_TX

  PLS_CONTA_POS_TAXA_CONTAB -->  PLS_CONTA_POS_PROC_TX_CTB,  PLS_CONTA_POS_MAT_TX_CTB

  PLS_CONTA_POS_ESTAB_PARTIC  -->  PLS_CONTA_POS_PROC_PART

  PLS_FATURA_MAT    -->  PLS_FATURA_MAT(Apenas faz update para ligar com novas tabelas )

  PLS_FATURA_PROC    -->  PLS_FATURA_PROC(Apenas faz update para ligar com novas tabelas )

  PLS_CONTA_POS_CABECALHO  -->  PLS_CONTA_POS_CABECALHO(  Apenas localiza o cabecalho antigo e atualiza informação
                de cabecalho na pls_conta_pos_proc e pls_conta_pos_mat).
*/
ds_mensagem_erro_w	varchar2(4000);

type table_dados_proc_persistir is record(
    cd_procedimento      pls_util_cta_pck.t_number_table,
    dt_item        pls_util_cta_pck.t_date_table,
    ie_origem_proced    pls_util_cta_pck.t_number_table,
    nr_seq_cabecalho    pls_util_cta_pck.t_number_table,
    nr_seq_conta      pls_util_cta_pck.t_number_table,
    nr_seq_conta_proc    pls_util_cta_pck.t_number_table,
    nr_seq_regra_horario    pls_util_cta_pck.t_number_table,
    qt_filme_tab      pls_util_cta_pck.t_number_table,
    qt_item        pls_util_cta_pck.t_number_table,
    tx_administracao    pls_util_cta_pck.t_number_table,
    tx_item        pls_util_cta_pck.t_number_table,
    vl_cotacao_moeda    pls_util_cta_pck.t_number_table,
    vl_custo_operacional    pls_util_cta_pck.t_number_table,
    vl_custo_operacional_calc  pls_util_cta_pck.t_number_table,
    vl_custo_operacional_tab  pls_util_cta_pck.t_number_table,
    vl_liberado_co_fat    pls_util_cta_pck.t_number_table,
    vl_liberado_hi_fat    pls_util_cta_pck.t_number_table,
    vl_liberado_material_fat  pls_util_cta_pck.t_number_table,
    vl_lib_taxa_co      pls_util_cta_pck.t_number_table,
    vl_lib_taxa_material    pls_util_cta_pck.t_number_table,
    vl_lib_taxa_servico    pls_util_cta_pck.t_number_table,
    vl_materiais      pls_util_cta_pck.t_number_table,
    vl_materiais_calc    pls_util_cta_pck.t_number_table,
    vl_material_tab      pls_util_cta_pck.t_number_table,
    vl_medico      pls_util_cta_pck.t_number_table,
    vl_medico_calc      pls_util_cta_pck.t_number_table,
    vl_provisao      pls_util_cta_pck.t_number_table,
    vl_provisao_old      pls_util_cta_pck.t_number_table,
    vl_tabela_preco      pls_util_cta_pck.t_number_table,
    vl_taxa_co      pls_util_cta_pck.t_number_table,
    vl_taxa_material    pls_util_cta_pck.t_number_table,
    vl_taxa_servico      pls_util_cta_pck.t_number_table,
    nr_seq_regra_preco    pls_util_cta_pck.t_number_table,
    cd_procedimento_conv    pls_util_cta_pck.t_number_table,
    nr_seq_regra_co_filme    pls_util_cta_pck.t_number_table,
    ie_origem_proced_conv    pls_util_cta_pck.t_number_table,
    cd_procedimento_conv_xml  pls_util_cta_pck.t_number_table,
    nr_seq_regra_conv_xml    pls_util_cta_pck.t_number_table,
    ie_origem_conv_xml    pls_util_cta_pck.t_number_table,
    nr_seq_regra_conv    pls_util_cta_pck.t_number_table,
    dt_inicio_item      pls_util_cta_pck.t_date_table,
    dt_fim_item      pls_util_cta_pck.t_date_table,
    nr_sequencia      pls_util_cta_pck.t_number_table,
    ie_origem_conta      pls_util_cta_pck.t_varchar2_table_1,
    nr_seq_pagador      pls_util_cta_pck.t_number_table,
    nr_seq_segurado      pls_util_cta_pck.t_number_table,
    ie_atualiza_prov    pls_util_cta_pck.t_varchar2_table_1,
    ie_status_faturamento    pls_util_cta_pck.t_varchar2_table_1,
    nr_seq_analise      pls_util_cta_pck.t_number_table,
	nr_seq_lote_fat			pls_util_cta_pck.t_number_table,
	nr_seq_pos_origem	pls_util_cta_pck.t_number_table
  );

type table_dados_mat_persistir is record(
  cd_ref_fabricante    pls_util_cta_pck.t_varchar2_table_60,
  cd_ref_material_fab_opme  pls_util_cta_pck.t_varchar2_table_60,
  det_reg_anvisa_opme    pls_util_cta_pck.t_varchar2_table_50,
  dt_item        pls_util_cta_pck.t_date_table,
  nr_registro_anvisa    pls_util_cta_pck.t_varchar2_table_15,
  nr_seq_cabecalho    pls_util_cta_pck.t_number_table,
  nr_seq_conta      pls_util_cta_pck.t_number_table,
  nr_seq_conta_mat    pls_util_cta_pck.t_number_table,
  nr_seq_material      pls_util_cta_pck.t_number_table,
  nr_seq_pos_estab_interc    pls_util_cta_pck.t_number_table,
  nr_seq_regra_pos_estab    pls_util_cta_pck.t_number_table,
  qt_item        pls_util_cta_pck.t_number_table,
  qt_original      pls_util_cta_pck.t_number_table,
  tx_administracao    pls_util_cta_pck.t_number_table,
  vl_administracao    pls_util_cta_pck.t_number_table,
  vl_liberado_material_fat  pls_util_cta_pck.t_number_table,
  vl_lib_taxa_material    pls_util_cta_pck.t_number_table,
  vl_materiais        pls_util_cta_pck.t_number_table,
  vl_materiais_calc    pls_util_cta_pck.t_number_table,
  vl_material_tab      pls_util_cta_pck.t_number_table,
  vl_taxa_material    pls_util_cta_pck.t_number_table,
  nr_seq_regra_conv    pls_util_cta_pck.t_number_table,
  ds_item_convertido    pls_util_cta_pck.t_varchar2_table_255,
  cd_item_convertido    pls_util_cta_pck.t_varchar2_table_20,
  nr_sequencia      pls_util_cta_pck.t_number_table,
  ie_origem_conta      pls_util_cta_pck.t_varchar2_table_1,
  nr_seq_pagador      pls_util_cta_pck.t_number_table,
  nr_seq_segurado      pls_util_cta_pck.t_number_table,
  ie_atualiza_prov    pls_util_cta_pck.t_varchar2_table_1,
  vl_provisao      pls_util_cta_pck.t_number_table,
  vl_provisao_old      pls_util_cta_pck.t_number_table,
  ie_status_faturamento    pls_util_cta_pck.t_varchar2_table_1,
  nr_seq_analise      pls_util_cta_pck.t_number_table,
  nr_seq_lote_fat		pls_util_cta_pck.t_number_table,
  nr_seq_pos_origem	pls_util_cta_pck.t_number_table
);

ie_lote_taxa_fat_w    pls_parametro_contabil.ie_lote_taxa_fat%type;
ie_lote_dif_fat_w    pls_parametro_contabil.ie_lote_dif_fat%type;
ie_lote_ajuste_fat_w    pls_parametro_contabil.ie_lote_ajuste_fat%type;
ie_lote_reembolso_fat_w    pls_parametro_contabil.ie_lote_reembolso_fat%type;
ie_data_rec_faturamento_w  pls_parametro_contabil.ie_data_rec_faturamento%type;

result_cursor_w     table_dados_proc_persistir;
result_cursor_mat_w    table_dados_mat_persistir;
tb_nr_seq_conta_ins_w           pls_util_cta_pck.t_number_table;
tb_nr_seq_cta_mat_pos_w			pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_proc_pos_ins_w  pls_util_cta_pck.t_number_table;
TB_NR_SEQ_CONTA_PROC_POS_1_w	pls_util_cta_pck.t_number_table;
tb_nr_seq_cta_proc_pos_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_conta_resumo_ins_w    pls_util_cta_pck.t_number_table;
tb_nr_seq_prestador_pgto_ins_w  pls_util_cta_pck.t_number_table;
tb_vl_administracao_ins_w     pls_util_cta_pck.t_number_table;
tb_vl_materiais_ins_w      pls_util_cta_pck.t_number_table;
tb_vl_tx_co_ins_w      pls_util_cta_pck.t_number_table;
tb_vl_co_ins_w      pls_util_cta_pck.t_number_table;
tb_vl_tx_servico_ins_w     pls_util_cta_pck.t_number_table;
tb_vl_servico_ins_w      pls_util_cta_pck.t_number_table;
tb_dt_mes_w      pls_util_cta_pck.t_date_table;
tb_nr_seq_conta_mat_pos_ins_w  pls_util_cta_pck.t_number_table;
TB_NR_SEQ_CONTA_MAT_POS_1_w  pls_util_cta_pck.t_number_table;
tb_proc_nr_seq_pos_estab_w   pls_util_cta_pck.t_number_table;
tb_proc_nr_seq_regra_w    pls_util_cta_pck.t_number_table;
tb_proc_vl_taxa_pos_w    pls_util_cta_pck.t_number_table;
tb_proc_ie_tipo_taxa_w    pls_util_cta_pck.t_varchar2_table_2;
tb_seq_resumo_w     pls_util_cta_pck.t_number_table;
tb_seq_pos_estab_tx_w    pls_util_cta_pck.t_number_table;
tb_seq_prest_pgto_w     pls_util_cta_pck.t_number_table;
tb_vl_taxa_w      pls_util_cta_pck.t_number_table;
tb_seq_conta_w      pls_util_cta_pck.t_number_table;
tb_seq_pos_proc_part_w    pls_util_cta_pck.t_number_table;
tb_vl_administracao_w     pls_util_cta_pck.t_number_table;
tb_vl_pos_estab_w    pls_util_cta_pck.t_number_table;
tb_seq_proc_partic_w    pls_util_cta_pck.t_number_table;
tb_seq_ocor_benef_w    pls_util_cta_pck.t_number_table;
tb_seq_fat_proc_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_proc_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_proc_fat_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_proc_tx_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_proc_tx_fat_w  pls_util_cta_pck.t_number_table;
tb_seq_pos_taxa_contab_w  pls_util_cta_pck.t_number_table;
tb_seq_fat_mat_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_mat_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_mat_fat_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_mat_tx_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_mat_tx_fat_w    pls_util_cta_pck.t_number_table;
tb_dt_mes_competencia_w   pls_util_cta_pck.t_date_table;
tb_seq_conta_resumo_w    pls_util_cta_pck.t_number_table;
tb_seq_prestador_pgto_w   pls_util_cta_pck.t_number_table;
tb_vl_custo_operacional_w   pls_util_cta_pck.t_number_table;
tb_vl_lib_taxa_co_w     pls_util_cta_pck.t_number_table;
tb_vl_lib_taxa_material_w      pls_util_cta_pck.t_number_table;
tb_vl_lib_taxa_servico_w   pls_util_cta_pck.t_number_table;
tb_vl_materiais_w     pls_util_cta_pck.t_number_table;
tb_vl_medico_w                 pls_util_cta_pck.t_number_table;
tb_vl_pos_estabelecido_w   pls_util_cta_pck.t_number_table;
tb_vl_provisao_w    pls_util_cta_pck.t_number_table;
tb_cd_classif_cred_provisao_w  pls_util_cta_pck.t_varchar2_table_50;
tb_cd_classif_deb_provisao_w  pls_util_cta_pck.t_varchar2_table_50;
tb_cd_conta_cred_provisao_w  pls_util_cta_pck.t_varchar2_table_20;
tb_cd_conta_deb_provisao_w  pls_util_cta_pck.t_varchar2_table_20;
tb_cd_historico_provisao_w  pls_util_cta_pck.t_number_table;
tb_nr_seq_esquema_prov_w  pls_util_cta_pck.t_number_table;
tb_nr_lote_contabil_prov_w  pls_util_cta_pck.t_number_table;
tb_nm_usuario_w      pls_util_cta_pck.t_varchar2_table_15;
tb_seq_dados_contab_w    pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_estab_contab_w  pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_mat_contab_w  pls_util_cta_pck.t_number_table;
tb_nr_seq_pos_proc_contab_w  pls_util_cta_pck.t_number_table;
tb_seq_conta_pos_proc_w    pls_util_cta_pck.t_number_table;
tb_seq_conta_pos_mat_w    pls_util_cta_pck.t_number_table;
cd_estabelecimento_w    pls_util_cta_pck.t_number_table;
tb_seq_pos_ctb_w    pls_util_cta_pck.t_number_table;
i        pls_integer := 0;
ie_aplicou_migracao_w    pls_visible_false.ie_aplicou_pos_estab%type;
tb_seq_pos_ctb_1_w	pls_util_cta_pck.t_number_table;

Cursor c_comp is
	select dt_mes_comp dt_ini,
	       fim_mes(dt_mes_comp) dt_fim
	from
	(      select distinct trunc(dt_mes_competencia, 'MM') dt_mes_comp
	       from   pls_protocolo_conta )
	--where dt_mes_comp not in(select to_date(substr(ds_log,56,8)) from pls_migracao_pos_log  where Ds_log like '%Final da execução da competência%'  )
	order by dt_mes_comp;

Cursor 	C00(	dt_ini_w	date,
		dt_fim_w	date) is
	select  nvl(a.cd_procedimento,c.cd_procedimento) cd_procedimento,
		a.dt_item,
		nvl(a.ie_origem_proced,c.ie_origem_proced) ie_origem_proced,
		(  	select   max(nr_sequencia)
			from   pls_conta_pos_cabecalho
			where   nr_seq_conta = b.nr_sequencia) nr_seq_cabecalho,
		a.nr_seq_conta,
		a.nr_seq_conta_proc,
		a.nr_seq_regra_horario,
		a.qt_filme_tab,
		a.qt_item,
		a.tx_administracao,
		a.tx_item,
		a.vl_cotacao_moeda,
		a.vl_custo_operacional,
		a.vl_custo_operacional_calc,
		a.vl_custo_operacional_tab,
		a.vl_liberado_co_fat,
		a.vl_liberado_hi_fat,
		a.vl_liberado_material_fat,
		a.vl_lib_taxa_co,
		a.vl_lib_taxa_material,
		a.vl_lib_taxa_servico,
		a.vl_materiais,
		a.vl_materiais_calc,
		a.vl_material_tab,
		a.vl_medico,
		a.vl_medico_calc,
		a.vl_provisao,
		null vl_provisao_old,
		a.vl_tabela_preco,
		a.vl_taxa_co,
		a.vl_taxa_material,
		a.vl_taxa_servico,
		a.nr_seq_regra_pos_estab nr_seq_regra_preco,
		a.cd_item_convertido cd_procedimento_conv,
		null nr_seq_regra_co_filme,
		null ie_origem_proced_conv,
		a.cd_item_convertido_xml cd_procedimento_conv_xml,
		null nr_seq_regra_conv_xml,
		null ie_origem_conv_xml,
		null nr_seq_regra_conv,
		a.dt_inicio_item,
		a.dt_fim_item,
		pls_conta_pos_proc_seq.nextval nr_sequencia,
		b.ie_origem_conta,
		a.nr_seq_pagador,
		a.nr_seq_segurado,
		null ie_atualiza_prov,
		decode(a.ie_status_faturamento, 'I','N', a.ie_status_faturamento) ie_status_faturamento,
		a.nr_seq_analise,
		a.nr_seq_lote_fat,
		a.nr_sequencia nr_seq_pos_origem
	from  	pls_conta_pos_estabelecido a,
		pls_conta_proc c,
		pls_conta b,
		pls_protocolo_conta d
	where  	b.nr_sequencia = c.nr_seq_conta
	and  	c.nr_sequencia = a.nr_seq_conta_proc
	and	b.nr_seq_protocolo = d.nr_sequencia
	and  	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and 	a.ie_situacao = 'A'
	and  	nvl(a.cd_procedimento,c.cd_procedimento) is not null;

Cursor C01(	dt_ini_w	date,
		dt_fim_w	date)  is
	select  a.cd_ref_fabricante,
		a.cd_ref_material_fab_opme,
		a.det_reg_anvisa_opme,
                a.dt_item,
                a.nr_registro_anvisa,
                (  	select   max(nr_sequencia)
			from   pls_conta_pos_cabecalho
			where   nr_seq_conta = b.nr_sequencia)nr_seq_cabecalho,
                a.nr_seq_conta,
                a.nr_seq_conta_mat,
                a.nr_seq_material,
                a.nr_seq_pos_estab_interc,
                a.nr_seq_regra_pos_estab,
                a.qt_item,
                a.qt_original,
                a.tx_administracao,
                a.vl_administracao,
                a.vl_liberado_material_fat,
                a.vl_lib_taxa_material,
                a.vl_materiais,
                a.vl_materiais_calc,
                a.vl_material_tab,
                a.vl_taxa_material,
                null nr_seq_regra_conv,
                a.ds_item_convertido,
                a.cd_item_convertido,
                pls_conta_pos_mat_seq.nextval nr_sequencia,
                b.ie_origem_conta,
                a.nr_seq_pagador,
                a.nr_seq_segurado,
                null ie_atualiza_prov,
                a.vl_provisao,
                null vl_provisao_old,
		decode(a.ie_status_faturamento, 'I','N', a.ie_status_faturamento) ie_status_faturamento,
		a.nr_seq_analise,
		a.nr_seq_lote_fat,
		a.nr_sequencia nr_seq_pos_origem
	from  	pls_conta_pos_estabelecido a,
			pls_conta b,
			pls_protocolo_conta c
	where  	a.nr_seq_conta = b.nr_sequencia
	and		b.nr_seq_protocolo = c.nr_sequencia
	and  	c.dt_mes_competencia between dt_ini_w and dt_fim_w
	and 	a.ie_situacao = 'A'
	and  	a.nr_seq_conta_mat is not null;

Cursor C02(	dt_ini_w	date,
		dt_fim_w	date)   is
	select  b.nr_seq_conta,
		(	select  max(nr_sequencia)
			from  	pls_conta_pos_proc c
			where  	c.nr_seq_conta_proc = b.nr_seq_conta_proc
			and 	c.nr_seq_pos_origem = a.nr_seq_conta_pos) nr_seq_cta_pos_proc,
		(  	select  max(nr_sequencia)
			from  	pls_conta_pos_proc c
			where  	c.nr_seq_conta_proc = b.nr_seq_conta_proc
			and		a.vl_medico = c.vl_medico
			and		a.vl_custo_operacional_ind = c.vl_custo_operacional
			and		a.vl_materiais = c.vl_materiais
			and 	c.nr_seq_pos_origem = a.nr_seq_conta_pos) nr_seq_conta_pos_proc,
		(	select  max(nr_sequencia)
			from  	pls_conta_pos_proc c
			where  	c.nr_seq_conta_proc = b.nr_seq_conta_proc) nr_seq_conta_pos_proc_1,
			a.nr_seq_conta_resumo,
			a.nr_seq_prestador_pgto,
			a.vl_lib_taxa_material,
			a.vl_materiais,
			a.vl_lib_taxa_servico,
			a.vl_lib_taxa_co,
			a.vl_custo_operacional_ind,
			a.vl_medico,
			a.dt_mes_competencia dt_mes_competencia
	from  	pls_conta_pos_estab_contab a,
		pls_conta_pos_estabelecido b,
		pls_conta c,
		pls_protocolo_conta d
	where  	a.nr_seq_conta_pos = b.nr_sequencia
	and	b.nr_seq_conta = c.nr_sequencia
	and	c.nr_seq_protocolo = d.nr_sequencia
	and   	b.nr_seq_conta_proc is not null
	and  	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists (select 1
			from 	pls_conta_pos_proc
			where 	nr_seq_conta_proc = b.nr_seq_conta_proc
			and		nr_seq_conta = c.nr_sequencia);

Cursor C03(	dt_ini_w	date,
		dt_fim_w	date)   is
	select
		b.nr_seq_conta,
		(	select  max(nr_sequencia)
			from  	pls_conta_pos_mat c
			where  	c.nr_seq_conta_mat = b.nr_seq_conta_mat
			and 	nr_seq_pos_origem = a.nr_seq_conta_pos) nr_seq_cta_pos_mat,
		(  	select   max(nr_sequencia)
			from  pls_conta_pos_mat c
			where  c.nr_seq_conta_mat = b.nr_seq_conta_mat
			and 	vl_materiais = a.vl_materiais) nr_seq_conta_pos_mat,
		(  	select   max(nr_sequencia)
			from  pls_conta_pos_mat c
			where  c.nr_seq_conta_mat = b.nr_seq_conta_mat
			and 	c.nr_seq_pos_origem = a.nr_seq_conta_pos) nr_seq_conta_pos_mat_1,
		a.nr_seq_conta_resumo,
		a.nr_seq_prestador_pgto,
		a.vl_administracao,
		a.vl_materiais,
		a.dt_mes_competencia dt_mes_competencia
	from  	pls_conta_pos_estab_contab a,
			pls_conta_pos_estabelecido b,
			pls_conta c,
			pls_protocolo_conta d
	where  	a.nr_seq_conta_pos = b.nr_sequencia
	and 	b.nr_seq_conta = c.nr_sequencia
	and 	c.nr_seq_protocolo = d.nr_sequencia
	and   	b.nr_seq_conta_mat is not null
	and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists (select 1 from pls_conta_pos_mat where nr_seq_conta_mat = b.nr_seq_conta_mat and		nr_seq_conta = c.nr_sequencia);

Cursor C04(	dt_ini_w	date,
			dt_fim_w	date)    is
	select  (  	select  max(nr_sequencia)
				from  	pls_conta_pos_proc c
				where  	c.nr_seq_conta_proc = b.nr_seq_conta_proc
				and 	nr_seq_pos_origem = a.nr_seq_conta_pos_estab) nr_seq_conta_pos_proc,
			a.nr_seq_regra_pos_estab,
			a.vl_taxa_manutencao,
			a.ie_tipo_taxa
	from  	pls_conta_pos_estab_taxa a,
			pls_conta_pos_estabelecido b,
			pls_conta c,
			pls_protocolo_conta d
	where  	a.nr_seq_conta_pos_estab = b.nr_sequencia
	and	b.nr_seq_conta = c.nr_sequencia
	and	c.nr_seq_protocolo = d.nr_sequencia
	and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and   	b.nr_seq_conta_proc is not null
	and  	exists (select 1 from pls_conta_pos_proc where nr_seq_conta_proc = b.nr_seq_conta_proc and		nr_seq_conta = c.nr_sequencia);

Cursor C05(	dt_ini_w	date,
			dt_fim_w	date)    is
	select  (  	select  max(nr_sequencia)
				from  	pls_conta_pos_mat c
				where  	c.nr_seq_conta_mat = b.nr_seq_conta_mat
				and 	nr_seq_pos_origem = a.nr_seq_conta_pos_estab) nr_seq_conta_pos_mat,
			a.nr_seq_regra_pos_estab,
			a.vl_taxa_manutencao,
			a.ie_tipo_taxa
	from  	pls_conta_pos_estab_taxa a,
			pls_conta_pos_estabelecido b,
			pls_conta c,
			pls_protocolo_conta d
	where	a.nr_seq_conta_pos_estab = b.nr_sequencia
	and	b.nr_seq_conta = c.nr_sequencia
	and	c.nr_seq_protocolo = d.nr_sequencia
	and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and   	b.nr_seq_conta_mat is not null
	and  	exists (select 1 from pls_conta_pos_mat where nr_seq_conta_mat = b.nr_seq_conta_mat and		nr_seq_conta = c.nr_sequencia);

cursor C06(	dt_ini_w	date,
			dt_fim_w	date)   is
	select	/*+ PARALLEL(e 5) */e.nr_sequencia nr_seq_conta,
			a.nr_seq_conta_resumo,
			a.nr_seq_prestador_pgto,
		( 	select  max(y.nr_sequencia)
			from  	pls_conta_pos_proc x,
				pls_conta_pos_proc_tx y
			where  x.nr_sequencia = y. nr_seq_conta_pos_proc
			and  x.nr_seq_conta_proc = c.nr_seq_conta_proc
			and 	x.nr_seq_pos_origem = c.nr_sequencia) nr_seq_proc_pos_tx,
			vl_taxa,
		(   	select   max(e.nr_sequencia)
			from  pls_conta_pos_proc d,
			pls_conta_pos_proc_contab e
			where  d.nr_sequencia = e.nr_seq_conta_pos_proc
			and  d.nr_seq_conta_proc = c.nr_seq_conta_proc
			and  e.nr_seq_prestador_pgto = a.nr_seq_prestador_pgto
			and 	d.nr_seq_pos_origem = c.nr_sequencia) nr_seq_pos_ctb,
		(   	select   max(e.nr_sequencia)
			from  pls_conta_pos_proc d,
			pls_conta_pos_proc_contab e
			where  d.nr_sequencia = e.nr_seq_conta_pos_proc
			and  d.nr_seq_conta_proc = c.nr_seq_conta_proc
			and 	d.nr_seq_pos_origem = c.nr_sequencia) nr_seq_pos_ctb_1
	from  	pls_conta_pos_taxa_contab a,
			pls_conta_pos_estab_taxa  b,
			pls_conta_pos_estabelecido c,
			pls_conta e,
			pls_protocolo_conta f,
			pls_conta_proc x
	where  	a.nr_seq_pos_estab_taxa  = b.nr_sequencia
	and  	b.nr_seq_conta_pos_estab = c.nr_sequencia
	and		x.nr_sequencia = c.nr_seq_conta_proc
	and		x.nr_seq_conta = e.nr_sequencia
	and		e.nr_seq_protocolo = f.nr_sequencia
	and 	f.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists(	select 	1
					from 	pls_conta_pos_proc
					where 	nr_seq_conta_proc = x.nr_sequencia
					and		nr_seq_conta = e.nr_sequencia);

cursor C07(	dt_ini_w	date,
			dt_fim_w	date)   is
	select  /*+ PARALLEL(e 5) */d.nr_sequencia nr_seq_conta,
			a.nr_seq_conta_resumo,
			a.nr_seq_prestador_pgto,
		(  	select   max(y.nr_sequencia)
			from  	pls_conta_pos_mat x,
				pls_conta_pos_mat_tx y
			where  	x.nr_sequencia = y. nr_seq_conta_mat_pos
			and  	x.nr_seq_conta_mat = c.nr_seq_conta_mat
			and		x.nr_seq_pos_origem = c.nr_sequencia) nr_seq_proc_pos_tx,
			vl_taxa,
		(   	select  max(e.nr_sequencia)
			from  	pls_conta_pos_mat d,
				pls_conta_pos_mat_contab e
			where  	d.nr_sequencia = e.nr_seq_conta_mat_pos
			and  	d.nr_seq_conta_mat = c.nr_seq_conta_mat
			and  	e.nr_seq_prestador_pgto = a.nr_seq_prestador_pgto
			and		d.nr_seq_pos_origem = c.nr_sequencia) nr_seq_pos_ctb,
		(   select   	max(e.nr_sequencia)
			from  	pls_conta_pos_mat d,
					pls_conta_pos_mat_contab e
			where  	d.nr_sequencia = e.nr_seq_conta_mat_pos
			and  	d.nr_seq_conta_mat = c.nr_seq_conta_mat) nr_seq_pos_ctb_1
	from  	pls_conta_pos_taxa_contab a,
			pls_conta_pos_estab_taxa  b,
			pls_conta_pos_estabelecido c,
			pls_conta d,
			pls_protocolo_conta e,
			pls_conta_mat x
	where  	a.nr_seq_pos_estab_taxa  = b.nr_sequencia
	and  	b.nr_seq_conta_pos_estab = c.nr_sequencia
	and		c.nr_seq_conta_mat = x.nr_sequencia
	and		x.nr_seq_conta = d.nr_sequencia
	and		d.nr_seq_protocolo = e.nr_sequencia
	and 	e.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists(	select 	1
					from 	pls_conta_pos_mat
					where 	nr_seq_conta_mat = x.nr_sequencia
					and		nr_seq_conta = d.nr_sequencia);

cursor C06_1(	dt_ini_w	date,
				dt_fim_w	date)   is
	select	e.nr_sequencia nr_seq_conta,
			a.nr_seq_conta_resumo,
			a.nr_seq_prestador_pgto,
		( 	select  max(y.nr_sequencia)
			from  	pls_conta_pos_proc x,
					pls_conta_pos_proc_tx y
			where  x.nr_sequencia = y. nr_seq_conta_pos_proc
			and  x.nr_seq_conta_proc = c.nr_seq_conta_proc
			and		x.nr_seq_pos_origem = c.nr_sequencia) nr_seq_proc_pos_tx,
			vl_taxa
	from  	pls_conta_pos_taxa_contab a,
			pls_conta_pos_estab_taxa  b,
			pls_conta_pos_estabelecido c,
			pls_conta e,
			pls_protocolo_conta f
	where  	a.nr_seq_pos_estab_taxa  = b.nr_sequencia
	and  	b.nr_seq_conta_pos_estab = c.nr_sequencia
	and		c.nr_seq_conta = e.nr_sequencia
	and		e.nr_seq_protocolo = f.nr_sequencia
	and  	c.nr_seq_conta_proc is not null
	and   	a.nr_seq_prestador_pgto is not null
	and 	f.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists(	select 	1 
					from 	pls_conta_pos_proc 
					where 	nr_seq_conta_proc = c.nr_seq_conta_proc 
					and		nr_seq_conta = e.nr_sequencia)
	union all
	select  d.nr_sequencia nr_seq_conta,
			a.nr_seq_conta_resumo,
			a.nr_seq_prestador_pgto,
		(  	select  max(y.nr_sequencia)
			from  	pls_conta_pos_proc x,
					pls_conta_pos_proc_tx y
			where  	x.nr_sequencia = y. nr_seq_conta_pos_proc
			and  	x.nr_seq_conta_proc = c.nr_seq_conta_proc
			and		x.nr_seq_pos_origem = c.nr_sequencia) nr_seq_proc_pos_tx,
			vl_taxa
	from  	pls_conta_pos_taxa_contab a,
			pls_conta_pos_estab_taxa  b,
			pls_conta_pos_estabelecido c,
			pls_conta d,
			pls_protocolo_conta e
	where  	a.nr_seq_pos_estab_taxa  = b.nr_sequencia
	and  	b.nr_seq_conta_pos_estab = c.nr_sequencia
	and		c.nr_seq_conta = d.nr_sequencia
	and		d.nr_seq_protocolo = e.nr_sequencia
	and  	c.nr_seq_conta_proc is not null
	and   	a.nr_seq_prestador_pgto is null
	and 	e.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists(	select 	1 
					from 	pls_conta_pos_proc 
					where 	nr_seq_conta_proc = c.nr_seq_conta_proc 
					and		nr_seq_conta = d.nr_sequencia);

cursor C07_1(	dt_ini_w	date,
				dt_fim_w	date)   is
	select  d.nr_sequencia nr_seq_conta,
			a.nr_seq_conta_resumo,
			a.nr_seq_prestador_pgto,
		(  	select   max(y.nr_sequencia)
			from  	pls_conta_pos_mat x,
					pls_conta_pos_mat_tx y
			where  	x.nr_sequencia = y. nr_seq_conta_mat_pos
			and  	x.nr_seq_conta_mat = c.nr_seq_conta_mat
			and		x.nr_seq_pos_origem = c.nr_sequencia) nr_seq_proc_pos_tx,
			vl_taxa
	from  	pls_conta_pos_taxa_contab a,
			pls_conta_pos_estab_taxa  b,
			pls_conta_pos_estabelecido c,
			pls_conta d,
			pls_protocolo_conta e
	where  	a.nr_seq_pos_estab_taxa  = b.nr_sequencia
	and  	b.nr_seq_conta_pos_estab = c.nr_sequencia
	and		c.nr_seq_conta = d.nr_sequencia
	and		d.nr_seq_protocolo = e.nr_sequencia
	and  	c.nr_seq_conta_mat is not null
	and  	a.nr_seq_prestador_pgto is not null
	and 	e.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists(select 1 from pls_conta_pos_mat where nr_seq_conta_mat = c.nr_seq_conta_mat and		nr_seq_conta = d.nr_sequencia)
	union all
	select 	d.nr_sequencia nr_seq_conta,
			a.nr_seq_conta_resumo,
			a.nr_seq_prestador_pgto,
		(  	select  max(y.nr_sequencia)
			from  	pls_conta_pos_mat x,
					pls_conta_pos_mat_tx y
			where  	x.nr_sequencia = y. nr_seq_conta_mat_pos
			and  	x.nr_seq_conta_mat = c.nr_seq_conta_mat
			and		x.nr_seq_pos_origem = c.nr_sequencia) nr_seq_proc_pos_tx,
			vl_taxa
	from  	pls_conta_pos_taxa_contab a,
			pls_conta_pos_estab_taxa  b,
			pls_conta_pos_estabelecido c,
			pls_conta d,
			pls_protocolo_conta e
	where  	a.nr_seq_pos_estab_taxa  = b.nr_sequencia
	and  	b.nr_seq_conta_pos_estab = c.nr_sequencia
	and		c.nr_seq_conta = d.nr_sequencia
	and		d.nr_seq_protocolo = e.nr_sequencia
	and  	c.nr_seq_conta_mat is not null
	and  	a.nr_seq_prestador_pgto is null
	and 	e.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists(	select 	1 
					from 	pls_conta_pos_mat 
					where 	nr_seq_conta_mat = c.nr_seq_conta_mat 
					and		nr_seq_conta = d.nr_sequencia);

cursor  C08(	dt_ini_w	date,
		dt_fim_w	date)   is
	select  a.nr_sequencia,
		(  	select  max(nr_sequencia)
			from  	pls_conta_pos_proc
			where  	nr_seq_conta_proc = a.nr_seq_conta_proc)   nr_seq_pos_proc,
		(  	select 	max(y.nr_sequencia)
			from  	pls_conta_pos_proc x,
				pls_conta_pos_proc_fat y
			where  	x.nr_sequencia = y.nr_seq_conta_pos_proc
			and  	x.nr_seq_conta_proc = a.nr_seq_conta_proc)   nr_seq_pos_proc_fat,
		(  	select   max(y.nr_sequencia)
			from  	pls_conta_pos_proc x,
				pls_conta_pos_proc_tx y
			where  	x.nr_sequencia = y.nr_seq_conta_pos_proc
			and  	x.nr_seq_conta_proc = a.nr_seq_conta_proc)   nr_seq_pos_proc_tx,
		(  	select   max(z.nr_sequencia)
			from  	pls_conta_pos_proc x,
				pls_conta_pos_proc_tx y,
				pls_conta_pos_proc_tx_fat z
			where  	x.nr_sequencia = y.nr_seq_conta_pos_proc
			and  	z.nr_seq_proc_pos_tx = y.nr_sequencia
			and  	x.nr_seq_conta_proc = a.nr_seq_conta_proc)   nr_seq_pos_proc_tx_fat,
		(  	select  max(x.nr_sequencia)
			from  	pls_conta_pos_taxa_contab x,
				pls_conta_pos_estab_taxa  y,
				pls_conta_pos_estabelecido z
			where  x.nr_seq_pos_estab_taxa  = y.nr_sequencia
			and  	y.nr_seq_conta_pos_estab = z.nr_sequencia
			and  	z.nr_seq_conta_proc  = a.nr_seq_conta_proc)   nr_seq_pos_taxa_contab
	from  	pls_fatura_proc a,
		pls_conta_proc b,
		pls_conta c,
		pls_protocolo_conta d
	where  	a.nr_seq_conta_proc = b.nr_sequencia
	and	b.nr_seq_conta = c.nr_sequencia
	and	c.nr_seq_protocolo = d.nr_sequencia
	and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and	exists(select 1 from pls_conta_pos_proc where nr_seq_conta_proc = a.nr_seq_conta_proc and		nr_seq_conta = c.nr_sequencia);

cursor  C09(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.nr_sequencia,
    (  select  max(nr_sequencia)
      from  pls_conta_pos_mat
      where  nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat,
    (  select  max(y.nr_sequencia)
      from  pls_conta_pos_mat x,
        pls_conta_pos_mat_fat y
      where  x.nr_sequencia = y.nr_seq_conta_mat_pos
      and  x.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_fat,
    (  select   max(y.nr_sequencia)
      from  pls_conta_pos_mat x,
        pls_conta_pos_mat_tx y
      where  x.nr_sequencia = y. nr_seq_conta_mat_pos
      and  x.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_tx,
    (  select   max(z.nr_sequencia)
      from  pls_conta_pos_mat x,
        pls_conta_pos_mat_tx y,
        pls_conta_pos_mat_tx_fat z
      where  x.nr_sequencia = y. nr_seq_conta_mat_pos
      and  z.nr_seq_pos_mat_tx = y.nr_sequencia
      and  x.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_tx_fat,
    (  select  max(x.nr_sequencia)
      from  pls_conta_pos_taxa_contab x,
        pls_conta_pos_estab_taxa  y,
        pls_conta_pos_estabelecido z
      where  x.nr_seq_pos_estab_taxa  = y.nr_sequencia
      and  y.nr_seq_conta_pos_estab = z.nr_sequencia
      and  z.nr_seq_conta_mat  = a.nr_seq_conta_mat) nr_seq_pos_taxa_contab
  from  pls_fatura_mat a,
	pls_conta_mat b,
	pls_conta c,
	pls_protocolo_conta d
  where a.nr_seq_conta_mat = b.nr_sequencia
  and	b.nr_seq_conta = c.nr_sequencia
  and	c.nr_seq_protocolo = d.nr_sequencia
  and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  exists(select 1 from pls_conta_pos_mat where nr_seq_conta_mat = a.nr_seq_conta_mat and		nr_seq_conta = c.nr_sequencia);

--PLS_CONTA_POS_ESTAB_PARTIC
Cursor C10(	dt_ini_w	date,
		dt_fim_w	date)   is
	select  (	select max(nr_sequencia)
			from  	pls_conta_pos_proc x
			where  x.nr_seq_conta_proc = b.nr_seq_conta_proc
			and		x.nr_seq_pos_origem = b.nr_sequencia) nr_seq_conta_pos_proc,
		a.vl_administracao,
		a.vl_participante_pos,
		a.nr_seq_proc_partic
	from  	pls_conta_pos_estab_partic a,
		pls_conta_pos_estabelecido b,
		pls_conta c,
		pls_protocolo_conta d
	where  	a.nr_seq_conta_pos = b.nr_sequencia
	and   	b.nr_seq_conta_proc is not null
	and 	b.nr_seq_conta = c.nr_sequencia
	and	c.nr_seq_protocolo = d.nr_sequencia
	and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	exists( select   1
			from   	pls_conta_pos_proc
			where  nr_seq_conta_proc = b.nr_seq_conta_proc and		nr_seq_conta = c.nr_sequencia);

Cursor C11(	dt_ini_w	date,
		dt_fim_w	date)   is
	select  a.nr_sequencia,
		(   	select   max(x.nr_sequencia)
			from  pls_conta_pos_proc x
			where  x.nr_seq_conta_proc = b.nr_seq_conta_proc
			and		x.nr_seq_pos_origem = b.nr_sequencia) nr_seq_conta_pos_proc
	from  	pls_ocorrencia_benef a,
		pls_conta_pos_estabelecido b,
		pls_conta c,
		pls_protocolo_conta d
	where  	a.nr_seq_conta_pos_estab = b.nr_sequencia
	and 	b.nr_seq_conta = c.nr_sequencia
	and	c.nr_seq_protocolo = d.nr_sequencia
	and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and   	b.nr_seq_conta_proc is not null;

Cursor C12(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.nr_sequencia,
    (   select  max(x.nr_sequencia)
	from  	pls_conta_pos_mat x
	where  	x.nr_seq_conta_mat = b.nr_seq_conta_mat
	and		x.nr_seq_pos_origem = b.nr_sequencia) nr_seq_conta_pos_mat
  from  pls_ocorrencia_benef a,
	pls_conta_pos_estabelecido b,
	pls_conta c,
	pls_protocolo_conta d
  where a.nr_seq_conta_pos_estab = b.nr_sequencia
  and 	b.nr_seq_conta = c.nr_sequencia
  and	c.nr_seq_protocolo = d.nr_sequencia
  and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
  and   b.nr_seq_conta_mat is not null;

--Abaixo os Cursores de valores contábeis
Cursor C13(	dt_ini_w	date,
		dt_fim_w	date)   is
  select   a.dt_mes_competencia,
	   a.nr_seq_conta,
	    (  select   max(x.nr_sequencia)
	      from  pls_conta_pos_proc x
	      where  x.nr_seq_conta_proc = a.nr_seq_conta_proc
		  and		x.nr_seq_pos_origem = a.nr_seq_conta_pos) nr_seq_conta_pos_proc,
	    a.nr_seq_conta_resumo,
	    a.nr_seq_prestador_pgto,
	    a.vl_administracao,
	    a.vl_custo_operacional,
	    a.vl_lib_taxa_co,
	    a.vl_lib_taxa_material,
	    a.vl_lib_taxa_servico,
	    a.vl_materiais,
	    a.vl_medico,
	    (  a.vl_custo_operacional + a.vl_materiais + a.vl_medico +
	      a.vl_lib_taxa_co + a.vl_lib_taxa_material + a.vl_medico)  vl_pos_estabelecido,
		a.vl_provisao
	from  	pls_conta_pos_estab_contab a,
		pls_conta_proc b,
		pls_conta c,
		pls_protocolo_conta d
	where  	a.nr_seq_conta_proc = b.nr_sequencia
	and	b.nr_seq_conta = c.nr_sequencia
	and	c.nr_seq_protocolo = d.nr_sequencia
	and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
	and  	a.nr_seq_conta_proc is not null;

cursor C14(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.dt_mes_competencia,
    a.nr_seq_conta,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat x
      where  x.nr_seq_conta_mat = a.nr_seq_conta_mat
	  and	x.nr_seq_pos_origem = a.nr_seq_conta_pos) nr_seq_conta_mat_pos,
    a.nr_seq_conta_resumo,
    a.nr_seq_prestador_pgto,
    a.vl_administracao,
    a.vl_lib_taxa_material,
    a.vl_materiais,
    (  a.vl_materiais + a.vl_lib_taxa_material) vl_pos_estabelecido,
    a.vl_provisao
  from  pls_conta_pos_estab_contab a,
	pls_conta_mat b,
	pls_conta c,
	pls_protocolo_conta d
  where a.nr_seq_conta_mat = b.nr_sequencia
  and	b.nr_seq_conta = c.nr_sequencia
  and	c.nr_seq_protocolo = d.nr_sequencia
  and 	d.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_mat is not null;

--Valores contábeis provisão
Cursor C15(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_provisao,
          a.cd_classif_deb_provisao,
          a.cd_conta_cred_provisao,
          a.cd_conta_deb_provisao,
          a.cd_historico_provisao,
          a.nr_seq_esquema_prov,
          a.vl_provisao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_mat is not null;

Cursor C16(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_provisao,
          a.cd_classif_deb_provisao,
          a.cd_conta_cred_provisao,
          a.cd_conta_deb_provisao,
          a.cd_historico_provisao,
          a.nr_seq_esquema_prov,
          a.vl_provisao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = a.nr_seq_conta_proc) nr_seq_pos_proc_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
    and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_proc is not null;

Cursor C17(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_taxa_prov,
          a.cd_classif_deb_taxa_prov,
          a.cd_conta_cred_taxa_prov,
          a.cd_conta_deb_taxa_prov,
          a.cd_historico_taxa_prov,
          a.nr_seq_esquema_taxa_prov,
          a.vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_mat is not null;

Cursor C18(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_taxa_prov,
          a.cd_classif_deb_taxa_prov,
          a.cd_conta_cred_taxa_prov,
          a.cd_conta_deb_taxa_prov,
          a.cd_historico_taxa_prov,
          a.nr_seq_esquema_taxa_prov,
          a.vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = a.nr_seq_conta_proc) nr_seq_pos_proc_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_proc is not null;

Cursor C19(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_taxa_prov,
          a.cd_classif_deb_taxa_prov,
          a.cd_conta_cred_taxa_prov,
          a.cd_conta_deb_taxa_prov,
          a.cd_historico_taxa_prov,
          a.nr_seq_esquema_taxa_prov,
          decode(d.ie_tipo_segurado,'I',to_number(pls_obter_vl_pag_fat_pos(a.nr_sequencia,'T')),'H', to_number(pls_obter_vl_pag_fat_pos(a.nr_sequencia,'T')),0) vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c,
    pls_segurado d
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and  b.nr_seq_segurado = d.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_mat is not null;

Cursor C20(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_taxa_prov,
          a.cd_classif_deb_taxa_prov,
          a.cd_conta_cred_taxa_prov,
          a.cd_conta_deb_taxa_prov,
          a.cd_historico_taxa_prov,
          a.nr_seq_esquema_taxa_prov,
          decode(d.ie_tipo_segurado, 'I',to_number(pls_obter_vl_pag_fat_pos(a.nr_sequencia,'T')), 'H', to_number(pls_obter_vl_pag_fat_pos(a.nr_sequencia,'T')), 0) vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = a.nr_seq_conta_proc) nr_seq_pos_proc_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c,
    pls_segurado d
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and  b.nr_seq_segurado = d.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_proc is not null;

Cursor C21(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_ndc_prov,
          a.cd_classif_deb_ndc_prov,
          a.cd_conta_cred_ndc_prov,
          a.cd_conta_deb_ndc_prov,
          a.cd_historico_ndc_prov,
          a.nr_seq_esquema_ndc_prov,
          nvl(a.vl_custo_operacional,0) - nvl(a.vl_administracao,0) vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_mat is not null;

Cursor C22(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_ndc_prov,
          a.cd_classif_deb_ndc_prov,
          a.cd_conta_cred_ndc_prov,
          a.cd_conta_deb_ndc_prov,
          a.cd_historico_ndc_prov,
          a.nr_seq_esquema_ndc_prov,
          nvl(a.vl_custo_operacional,0) - nvl(a.vl_administracao,0) vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = a.nr_seq_conta_proc) nr_seq_pos_proc_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_proc is not null;

Cursor C23(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_provisao,
          a.cd_classif_deb_provisao,
          a.cd_conta_cred_provisao,
          a.cd_conta_deb_provisao,
          a.cd_historico_provisao,
          a.nr_seq_esquema_prov,
          nvl(a.vl_custo_operacional,0) - nvl(a.vl_provisao,0) vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = a.nr_seq_conta_mat) nr_seq_pos_mat_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_mat is not null;

Cursor C24(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  b.cd_estabelecimento,
    a.cd_classif_cred_provisao,
          a.cd_classif_deb_provisao,
          a.cd_conta_cred_provisao,
          a.cd_conta_deb_provisao,
          a.cd_historico_provisao,
          a.nr_seq_esquema_prov,
          nvl(a.vl_custo_operacional,0) - nvl(a.vl_provisao,0) vl_administracao,
          a.nr_lote_contabil_prov,
    c.dt_mes_competencia,
    a.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    a.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = a.nr_seq_conta_proc) nr_seq_pos_proc_contab
  from  pls_conta_pos_estab_contab a,
    pls_conta b,
    pls_protocolo_conta c
  where  a.nr_Seq_conta = b.nr_sequencia
  and  b.nr_seq_protocolo = c.nr_sequencia
  and 	c.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  a.nr_seq_conta_proc is not null;

Cursor C25(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_taxa,
          c.cd_classif_deb_taxa,
          c.cd_conta_cred_taxa,
          c.cd_conta_deb_taxa,
          c.cd_historico_taxa,
          c.nr_seq_esquema_taxa,
          c.vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = c.nr_seq_conta_mat) nr_seq_pos_mat_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_mat       e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  a.nr_seq_protocolo = x.nr_sequencia
  and 	x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  c.nr_seq_conta_mat is not null;

Cursor C26(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_taxa,
          c.cd_classif_deb_taxa,
          c.cd_conta_cred_taxa,
          c.cd_conta_deb_taxa,
          c.cd_historico_taxa,
          c.nr_seq_esquema_taxa,
          c.vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = c.nr_seq_conta_proc) nr_seq_pos_proc_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_proc     e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  a.nr_seq_protocolo = x.nr_sequencia
  and x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  c.nr_seq_conta_proc is not null;

Cursor C27(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_dif,
          c.cd_classif_deb_dif,
          c.cd_conta_cred_dif,
          c.cd_conta_deb_dif,
          c.cd_historico_dif,
          c.nr_seq_esquema_dif,
          c.vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = c.nr_seq_conta_mat) nr_seq_pos_mat_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo,
    j.ie_tipo_segurado,
    to_number(pls_obter_vl_pag_fat_pos(c.nr_sequencia,'T')) vl_pag_fat_pos
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_mat       e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  a.nr_seq_protocolo = x.nr_sequencia
  and 	x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  c.nr_seq_conta_mat is not null;

Cursor C28(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_dif,
          c.cd_classif_deb_dif,
          c.cd_conta_cred_dif,
          c.cd_conta_deb_dif,
          c.cd_historico_dif,
          c.nr_seq_esquema_dif,
          c.vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = c.nr_seq_conta_proc) nr_seq_pos_proc_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo,
    j.ie_tipo_segurado,
    to_number(pls_obter_vl_pag_fat_pos(c.nr_sequencia,'T')) vl_pag_fat_pos
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_proc     e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  a.nr_seq_protocolo = x.nr_sequencia
  and 	x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  c.nr_seq_conta_proc is not null;

Cursor C29(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_ndc,
          c.cd_classif_deb_ndc,
          c.cd_conta_cred_ndc,
          c.cd_conta_deb_ndc,
          c.cd_historico_ndc,
          c.nr_seq_esquema_ndc,
          (nvl(c.vl_custo_operacional,0) - nvl(c.vl_administracao,0)) vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = c.nr_seq_conta_mat) nr_seq_pos_mat_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo,
    j.ie_tipo_segurado,
    to_number(pls_obter_vl_pag_fat_pos(c.nr_sequencia,'T')) vl_pag_fat_pos
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_mat       e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  a.nr_seq_protocolo = x.nr_sequencia
  and 	x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  c.nr_seq_conta_mat is not null;

Cursor C30(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_ndc,
          c.cd_classif_deb_ndc,
          c.cd_conta_cred_ndc,
          c.cd_conta_deb_ndc,
          c.cd_historico_ndc,
          c.nr_seq_esquema_ndc,
          (nvl(c.vl_custo_operacional,0) - nvl(c.vl_administracao,0)) vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = c.nr_seq_conta_proc) nr_seq_pos_proc_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo,
    j.ie_tipo_segurado,
    to_number(pls_obter_vl_pag_fat_pos(c.nr_sequencia,'T')) vl_pag_fat_pos
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_proc     e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  a.nr_seq_protocolo = x.nr_sequencia
  and 	x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  c.nr_seq_conta_proc is not null;

Cursor C31(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_provisao,
          c.cd_classif_deb_provisao,
          c.cd_conta_cred_provisao,
          c.cd_conta_deb_provisao,
          c.cd_historico_ajuste,
          c.nr_seq_esquema_prov,
          (nvl(c.vl_custo_operacional,0) - nvl(c.vl_administracao,0)) vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_mat_contab x,
        pls_conta_pos_mat y
      where  x.nr_seq_conta_mat_pos = y.nr_sequencia
      and  y.nr_seq_conta_mat = c.nr_seq_conta_mat) nr_seq_pos_mat_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo,
    j.ie_tipo_segurado,
    to_number(pls_obter_vl_pag_fat_pos(c.nr_sequencia,'T')) vl_pag_fat_pos
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_mat       e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  a.nr_seq_protocolo = x.nr_sequencia
  and 	x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  c.nr_seq_conta_mat is not null;

Cursor C32(	dt_ini_w	date,
		dt_fim_w	date)   is
  select  a.cd_estabelecimento,
    c.cd_classif_cred_provisao,
          c.cd_classif_deb_provisao,
          c.cd_conta_cred_provisao,
          c.cd_conta_deb_provisao,
          c.cd_historico_ajuste,
          c.nr_seq_esquema_prov,
          (nvl(c.vl_custo_operacional,0) - nvl(c.vl_administracao,0)) vl_administracao,
          c.nr_lote_contabil,
    c.nm_usuario,
    pls_conta_pos_estab_contab_seq.nextval nr_sequencia,
    c.nr_sequencia nr_seq_pos_estab_contab,
    (  select   max(x.nr_sequencia)
      from  pls_conta_pos_proc_contab x,
        pls_conta_pos_proc y
      where  x.nr_seq_conta_pos_proc = y.nr_sequencia
      and  y.nr_seq_conta_proc = c.nr_seq_conta_proc) nr_seq_pos_proc_contab,
    e.ie_tipo_cobranca ie_tipo_cobranca_item,
    f.ie_tipo_cobranca ie_tipo_cobranca_conta,
    d.dt_mes_competencia,
    d.dt_emissao,
    t.nr_titulo,
    h.dt_geracao_titulos,
    t.dt_emissao dt_emissao_titulo,
    j.ie_tipo_segurado,
    to_number(pls_obter_vl_pag_fat_pos(c.nr_sequencia,'T')) vl_pag_fat_pos
  from  pls_conta       a,
    pls_conta_pos_estabelecido   b,
    pls_conta_pos_estab_contab   c,
    pls_fatura       d,
    pls_fatura_proc     e,
    pls_fatura_conta     f,
    pls_fatura_evento     g,
    pls_lote_faturamento     h,
    pls_segurado      j,
    titulo_receber      t,
    pls_protocolo_conta x
  where  a.nr_sequencia     = b.nr_seq_conta
  and  b.nr_sequencia     = c.nr_seq_conta_pos
  and  b.nr_sequencia     = e.nr_seq_conta_pos_estab
  and  d.nr_sequencia     = g.nr_seq_fatura
  and  f.nr_sequencia     = e.nr_seq_fatura_conta
  and  g.nr_sequencia     = f.nr_seq_fatura_evento
  and  h.nr_sequencia     = d.nr_seq_lote
  and  j.nr_sequencia    = a.nr_seq_segurado
  and  nvl(d.nr_titulo, d.nr_titulo_ndc) = t.nr_titulo(+)
  and  a.nr_seq_protocolo = x.nr_sequencia
  and 	x.dt_mes_competencia between dt_ini_w and dt_fim_w
  and  c.nr_seq_conta_proc is not null;





CREATE OR REPLACE PROCEDURE insere_pos_proc ( result_cursor_p INOUT table_dados_proc_persistir, nm_usuario_p usuario.nm_usuario%type) AS $body$
BEGIN

  if ( result_cursor_p.cd_procedimento.count > 0) then

    forall i in result_cursor_p.cd_procedimento.first..result_cursor_p.cd_procedimento.last
      insert into pls_conta_pos_proc(cd_procedimento, dt_item, ie_origem_proced,
       nr_seq_cabecalho, nr_seq_conta, nr_seq_conta_proc,
       nr_seq_regra_horario,  qt_filme_tab,
       qt_item, tx_administracao, tx_item,
       vl_cotacao_moeda, vl_custo_operacional, vl_custo_operacional_calc,
       vl_custo_operacional_tab, vl_liberado_co_fat, vl_liberado_hi_fat,
       vl_liberado_material_fat, vl_lib_taxa_co, vl_lib_taxa_material,
       vl_lib_taxa_servico, vl_materiais, vl_materiais_calc,
       vl_material_tab, vl_medico, vl_medico_calc,
       vl_provisao, vl_tabela_preco, vl_taxa_co,
       vl_taxa_material, vl_taxa_servico, dt_atualizacao_nrec,
       nm_usuario, nm_usuario_nrec, dt_atualizacao,
       nr_seq_regra_preco, cd_procedimento_conv, nr_seq_regra_co_filme,
       ie_origem_proced_conv, cd_procedimento_conv_xml, nr_seq_regra_conv_xml,
       ie_origem_conv_xml, nr_seq_regra_conv, dt_inicio_item,
       dt_fim_item, nr_sequencia, ie_origem_conta,
       nr_seq_pagador, nr_seq_segurado, ie_status_faturamento,
       nr_seq_analise, nr_seq_lote_fat, nr_seq_pos_origem
       )
      values (result_cursor_p.cd_procedimento(i), result_cursor_p.dt_item(i), result_cursor_p.ie_origem_proced(i),
       result_cursor_p.nr_seq_cabecalho(i), result_cursor_p.nr_seq_conta(i), result_cursor_p.nr_seq_conta_proc(i),
       result_cursor_p.nr_seq_regra_horario(i), result_cursor_p.qt_filme_tab(i),
       result_cursor_p.qt_item(i), result_cursor_p.tx_administracao(i), result_cursor_p.tx_item(i),
       result_cursor_p.vl_cotacao_moeda(i), result_cursor_p.vl_custo_operacional(i), result_cursor_p.vl_custo_operacional_calc(i),
       result_cursor_p.vl_custo_operacional_tab(i), result_cursor_p.vl_liberado_co_fat(i), result_cursor_p.vl_liberado_hi_fat(i),
       result_cursor_p.vl_liberado_material_fat(i), result_cursor_p.vl_lib_taxa_co(i), result_cursor_p.vl_lib_taxa_material(i),
       result_cursor_p.vl_lib_taxa_servico(i), result_cursor_p.vl_materiais(i), result_cursor_p.vl_materiais_calc(i),
       result_cursor_p.vl_material_tab(i), result_cursor_p.vl_medico(i), result_cursor_p.vl_medico_calc(i),
       result_cursor_p.vl_provisao(i), result_cursor_p.vl_tabela_preco(i), result_cursor_p.vl_taxa_co(i),
      result_cursor_p.vl_taxa_material(i), result_cursor_p.vl_taxa_servico(i), clock_timestamp(),
       nm_usuario_p, nm_usuario_p, clock_timestamp(),
       result_cursor_p.nr_seq_regra_preco(i), result_cursor_p.cd_procedimento_conv(i), result_cursor_p.nr_seq_regra_co_filme(i),
       result_cursor_p.ie_origem_proced_conv(i), result_cursor_p.cd_procedimento_conv_xml(i), result_cursor_p.nr_seq_regra_conv_xml(i),
       result_cursor_p.ie_origem_conv_xml(i), result_cursor_p.nr_seq_regra_conv(i), result_cursor_p.dt_inicio_item(i),
       result_cursor_p.dt_fim_item(i), result_cursor_p.nr_sequencia(i), result_cursor_p.ie_origem_conta(i),
       result_cursor_p.nr_seq_pagador(i), result_cursor_p.nr_seq_segurado(i), result_cursor_p.ie_status_faturamento(i),
       result_cursor_p.nr_seq_analise(i), result_cursor_p.nr_seq_lote_fat(i), result_cursor_p.nr_seq_pos_origem(i)
       );
       commit;
  end if;

	result_cursor_p.nr_sequencia.delete;
	result_cursor_p.cd_procedimento.delete;
	result_cursor_p.dt_item.delete;
	result_cursor_p.ie_origem_proced.delete;
	result_cursor_p.nr_seq_cabecalho.delete;
	result_cursor_p.nr_seq_conta.delete;
	result_cursor_p.nr_seq_conta_proc.delete;
	result_cursor_p.nr_seq_regra_horario.delete;
	result_cursor_p.qt_filme_tab.delete;
	result_cursor_p.qt_item.delete;
	result_cursor_p.tx_administracao.delete;
	result_cursor_p.tx_item.delete;
	result_cursor_p.vl_cotacao_moeda.delete;
	result_cursor_p.vl_custo_operacional.delete;
	result_cursor_p.vl_custo_operacional_calc.delete;
	result_cursor_p.vl_custo_operacional_tab.delete;
	result_cursor_p.vl_liberado_co_fat.delete;
	result_cursor_p.vl_liberado_hi_fat.delete;
	result_cursor_p.vl_liberado_material_fat.delete;
	result_cursor_p.vl_lib_taxa_co.delete;
	result_cursor_p.vl_lib_taxa_material.delete;
	result_cursor_p.vl_lib_taxa_servico.delete;
	result_cursor_p.vl_materiais.delete;
	result_cursor_p.vl_materiais_calc.delete;
	result_cursor_p.vl_material_tab.delete;
	result_cursor_p.vl_medico.delete;
	result_cursor_p.vl_medico_calc.delete;
	result_cursor_p.vl_provisao.delete;
	result_cursor_p.vl_tabela_preco.delete;
	result_cursor_p.vl_taxa_co.delete;
	result_cursor_p.vl_taxa_material.delete;
	result_cursor_p.vl_taxa_servico.delete;
	result_cursor_p.nr_seq_regra_preco.delete;
	result_cursor_p.cd_procedimento_conv.delete;
	result_cursor_p.nr_seq_regra_co_filme.delete;
	result_cursor_p.ie_origem_proced_conv.delete;
	result_cursor_p.cd_procedimento_conv_xml.delete;
	result_cursor_p.nr_seq_regra_conv_xml.delete;
	result_cursor_p.ie_origem_conv_xml.delete;
	result_cursor_p.nr_seq_regra_conv.delete;
	result_cursor_p.dt_inicio_item.delete;
	result_cursor_p.dt_fim_item.delete;
	result_cursor_p.ie_origem_conta.delete;
	result_cursor_p.nr_seq_pagador.delete;
	result_cursor_p.nr_seq_segurado.delete;
	result_cursor_p.ie_status_faturamento.delete;
	result_cursor_p.nr_seq_analise.delete;
	result_cursor_p.nr_seq_lote_fat.delete;
	result_cursor_p.nr_seq_pos_origem.delete;

end;

--Faz apenas o insert na tabela  definitiva com utilização de forall
procedure insere_pos_mat(   result_cursor_p in out   table_dados_mat_persistir,
        nm_usuario_p    usuario.nm_usuario%type) is

begin

  if ( result_cursor_p.cd_ref_fabricante.count > 0) then

    forall i in result_cursor_p.cd_ref_fabricante.first..result_cursor_p.cd_ref_fabricante.last
      insert into pls_conta_pos_mat(cd_ref_fabricante, cd_ref_material_fab_opme, det_reg_anvisa_opme,
       dt_item, nr_registro_anvisa, nr_seq_analise,
       nr_seq_cabecalho, nr_seq_conta, nr_seq_conta_mat,
       nr_seq_lote_fat, nr_seq_material, nr_seq_pos_estab_interc,
       nr_seq_regra_pos_estab, qt_item, qt_original,
       tx_administracao, vl_administracao, vl_glosa_material_fat,
       vl_liberado_material_fat, vl_lib_taxa_material, vl_materiais,
       vl_materiais_calc, vl_material_tab, vl_taxa_material,
       nr_sequencia, nm_usuario, nm_usuario_nrec,
       dt_atualizacao, dt_atualizacao_nrec, nr_seq_regra_conv,
       ds_item_convertido, cd_item_convertido, ie_origem_conta,
       nr_seq_pagador, nr_seq_segurado, ie_status_faturamento,
	   nr_seq_pos_origem
       )
      values ( result_cursor_p.cd_ref_fabricante(i), result_cursor_p.cd_ref_material_fab_opme(i), result_cursor_p.det_reg_anvisa_opme(i),
       result_cursor_p.dt_item(i), result_cursor_p.nr_registro_anvisa(i), result_cursor_p.nr_seq_analise(i),
       result_cursor_p.nr_seq_cabecalho(i), result_cursor_p.nr_seq_conta(i), result_cursor_p.nr_seq_conta_mat(i),
       result_cursor_p.nr_seq_lote_fat(i), result_cursor_p.nr_seq_material(i), result_cursor_p.nr_seq_pos_estab_interc(i),
       result_cursor_p.nr_seq_regra_pos_estab(i), result_cursor_p.qt_item(i), result_cursor_p.qt_original(i),
       result_cursor_p.tx_administracao(i), result_cursor_p.vl_administracao(i), null,
       result_cursor_p.vl_liberado_material_fat(i), result_cursor_p.vl_lib_taxa_material(i), result_cursor_p.vl_materiais(i),
       result_cursor_p.vl_materiais_calc(i), result_cursor_p.vl_material_tab(i), result_cursor_p.vl_taxa_material(i),
      result_cursor_p.nr_sequencia(i), nm_usuario_p, nm_usuario_p,
      clock_timestamp(), clock_timestamp(), result_cursor_p.nr_seq_regra_conv(i),
       result_cursor_p.ds_item_convertido(i), result_cursor_p.cd_item_convertido(i), result_cursor_p.ie_origem_conta(i),
       result_cursor_p.nr_seq_pagador(i), result_cursor_p.nr_seq_segurado(i), result_cursor_p.ie_status_faturamento(i),
	   result_cursor_p.nr_seq_pos_origem(i)
      );

    commit;
  end if;

  result_cursor_p.cd_ref_fabricante.delete;
  result_cursor_p.cd_ref_material_fab_opme.delete;
  result_cursor_p.det_reg_anvisa_opme.delete;
  result_cursor_p.dt_item.delete;
  result_cursor_p.nr_registro_anvisa.delete;
  result_cursor_p.nr_seq_cabecalho.delete;
  result_cursor_p.nr_seq_conta.delete;
  result_cursor_p.nr_seq_conta_mat.delete;
  result_cursor_p.nr_seq_material.delete;
  result_cursor_p.nr_seq_pos_estab_interc.delete;
  result_cursor_p.nr_seq_regra_pos_estab.delete;
  result_cursor_p.qt_item.delete;
  result_cursor_p.qt_original.delete;
  result_cursor_p.tx_administracao.delete;
  result_cursor_p.vl_administracao.delete;
  result_cursor_p.vl_liberado_material_fat.delete;
  result_cursor_p.vl_lib_taxa_material.delete;
  result_cursor_p.vl_materiais.delete;
  result_cursor_p.vl_materiais_calc.delete;
  result_cursor_p.vl_material_tab.delete;
  result_cursor_p.vl_taxa_material.delete;
  result_cursor_p.nr_seq_regra_conv.delete;
  result_cursor_p.ds_item_convertido.delete;
  result_cursor_p.cd_item_convertido.delete;
  result_cursor_p.nr_sequencia.delete;
  result_cursor_p.ie_origem_conta.delete;
  result_cursor_p.nr_seq_pagador.delete;
  result_cursor_p.nr_seq_segurado.delete;
  result_cursor_p.ie_status_faturamento.delete;
  result_cursor_p.nr_seq_analise.delete;
  result_cursor_p.nr_seq_lote_fat.delete;
  result_cursor_p.nr_seq_pos_origem.delete;

end;

procedure atualiza_pos_cabecalho(nm_usuario_p	usuario.nm_usuario%type) is

ie_continua_w		varchar2(1) := 'S';
nr_reg_min_w		pls_conta.nr_sequencia%type;
nr_reg_max_w		pls_conta.nr_sequencia%type;
nr_reg_ini_w		pls_conta.nr_sequencia%type;
nr_seq_fim_w		pls_conta.nr_sequencia%type;
tb_nr_sequencia_w		pls_util_cta_pck.t_number_table;
tb_nr_seq_protocolo_w	pls_util_cta_pck.t_number_table;
tb_ie_preco_w			pls_util_cta_pck.t_varchar2_table_20;

C01 CURSOR(	nr_seq_inicio_pc	pls_conta.nr_sequencia%type,
		nr_seq_fim_pc		pls_conta.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia,
		(SELECT	max(y.ie_preco)
		from	pls_segurado x,
			pls_plano y
		where	y.nr_sequencia	= x.nr_seq_plano
		and	x.nr_sequencia	= b.nr_seq_segurado) ie_preco,
		b.nr_seq_protocolo
	from	pls_conta_pos_cabecalho a,
		pls_conta b
	where	b.nr_sequencia = a.nr_seq_conta
	and	b.nr_sequencia between nr_seq_inicio_pc and nr_seq_fim_pc
	and	coalesce(a.ie_preco::text, '') = '';

begin

select	min(nr_sequencia),
	max(nr_sequencia)
into STRICT	nr_reg_min_w,
	nr_reg_max_w
from	pls_conta;

nr_reg_ini_w := nr_reg_min_w;
nr_seq_fim_w := nr_reg_min_w + 500;

loop
	Open C01(nr_reg_ini_w, nr_seq_fim_w);
	loop
		tb_nr_sequencia_w.delete;
		tb_ie_preco_w.delete;
		tb_nr_seq_protocolo_w.delete;

		fetch C01 bulk collect into tb_nr_sequencia_w, tb_ie_preco_w, tb_nr_seq_protocolo_w
		limit 500;

		exit when tb_nr_sequencia_w.count = 0;

		forall i in tb_nr_sequencia_w.first .. tb_nr_sequencia_w.last
			update	pls_conta_pos_cabecalho
			set	ie_preco = tb_ie_preco_w(i),
				nr_seq_protocolo = tb_nr_seq_protocolo_w(i)
			where	nr_sequencia = tb_nr_sequencia_w(i);
		commit;
	end loop;
	close C01;

	nr_reg_ini_w := nr_seq_fim_w + 1;
	nr_seq_fim_w := nr_reg_ini_w + 500;

	if (nr_reg_ini_w > nr_reg_max_w) then
		ie_continua_w := 'N';
	end if;

	exit when ie_continua_w = 'N';
end loop;
end;

procedure insere_log_execucao(ds_log_p	varchar2) is

ds_descricao_w varchar2(4000);

begin

	ds_descricao_w := to_char(clock_timestamp(),'dd/mm/yyyy hh24:mi:ss')||' - '||ds_log_p;

	insert into pls_migracao_pos_log( nr_sequencia, ds_log)
	values (nextval('pls_migracao_pos_log_seq'), ds_descricao_w);
	commit;
end;

begin
  select coalesce(max(ie_aplicou_pos_estab),'N')
  into STRICT  ie_aplicou_migracao_w
  from  pls_visible_false;


if (ie_aplicou_migracao_w = 'N') then
  select   coalesce(max(ie_lote_taxa_fat),'R')     ie_lote_taxa_fat,
    coalesce(max(ie_lote_dif_fat), 'X')    ie_lote_dif_fat,
    coalesce(max(ie_lote_ajuste_fat), 'R')  ie_lote_ajuste_fat,
    coalesce(max(ie_lote_reembolso_fat),'R')   ie_lote_reembolso_fat,
    max(ie_data_rec_faturamento)    ie_data_rec_faturamento
  into STRICT  ie_lote_taxa_fat_w,
    ie_lote_dif_fat_w,
    ie_lote_ajuste_fat_w,
    ie_lote_reembolso_fat_w,
    ie_data_rec_faturamento_w
  from  pls_parametro_contabil;

  update   pls_visible_false
  set   ie_aplicou_pos_estab = 'S';
  commit;

  --Início tratamento de exceção durante o processo
  begin


  insere_log_execucao('Início da atualização de cabeçalho pós');
  commit;
  -- Utilizada para atualizar o campo ie_preco da pos_cabecalho
  atualiza_pos_cabecalho('MigraDadosPos');

  insere_log_execucao('Final da atualização de cabeçalho pós');
  commit;

	for r_cComp_w in c_comp loop
	
		begin -- begin .. exception, cobre todo o corpo do for.
			insere_log_execucao('Início da execução da competência '||r_cComp_w.dt_ini);

		  --Primeiramente, levanta os registros de pós referentes a procedimentos e popula a pls_conta_pos_proc
		  insere_log_execucao('Início da execução do cursor C00 para competência '||r_cComp_w.dt_ini);
		  commit;
		  open C00(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   C00 bulk collect
			into  result_cursor_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when result_cursor_w.cd_procedimento.count = 0;

			 result_cursor_w := insere_pos_proc( result_cursor_w, 'MigraDadosPos');

		  end loop;
		  close C00;
		  insere_log_execucao('Final da execução do cursor C00 para competência '||r_cComp_w.dt_ini);

		  --levanta os registros de pós referentes a materiais e popula a pls_conta_pos_mat
		  insere_log_execucao('Início da execução do cursor C01 para competência '||r_cComp_w.dt_ini);
		  commit;
		  open c01(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c01 bulk collect
			into  result_cursor_mat_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when result_cursor_mat_w.nr_seq_conta_mat.count = 0;

			insere_pos_mat( result_cursor_mat_w, 'MigraDadosPos');

		  end loop;
		  close C01;
		  insere_log_execucao('Final da execução do cursor C01 para competência '||r_cComp_w.dt_ini);
		  /*
			Da pls_conta_pos_estab_contab para a pls_conta_pos_proc_contab
		  */
		  insere_log_execucao('Início da execução do cursor C02 para competência '||r_cComp_w.dt_ini);
		  commit;
		  open c02(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c02 bulk collect
			into  tb_nr_seq_conta_ins_w, tb_nr_seq_conta_proc_pos_ins_w, tb_nr_seq_cta_proc_pos_w,
			tb_nr_seq_conta_proc_pos_1_w, tb_nr_seq_conta_resumo_ins_w,  tb_nr_seq_prestador_pgto_ins_w,
			tb_vl_administracao_ins_w, tb_vl_materiais_ins_w, tb_vl_tx_servico_ins_w, 
			tb_vl_tx_co_ins_w, tb_vl_co_ins_w, tb_vl_servico_ins_w, 
			tb_dt_mes_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_nr_seq_conta_ins_w.count = 0;

			  if ( tb_nr_seq_conta_ins_w.count > 0) then

			forall i in tb_nr_seq_conta_ins_w.first..tb_nr_seq_conta_ins_w.last
			  insert into pls_conta_pos_proc_contab(nr_seq_conta, nr_seq_conta_pos_proc, nr_seq_conta_resumo,
				  nr_seq_prestador_pgto, vl_administracao, vl_lib_taxa_material,
				  vl_materiais, nm_usuario, dt_atualizacao,
				  nm_usuario_nrec, dt_atualizacao_nrec,nr_sequencia,
				  vl_lib_taxa_servico, vl_lib_taxa_co, vl_custo_operacional,
				  vl_medico, vl_pos_estabelecido, vl_provisao,
				  dt_mes_competencia)
			  values  (  tb_nr_seq_conta_ins_w(i), coalesce( tb_nr_seq_conta_proc_pos_ins_w(i), coalesce(tb_nr_seq_cta_proc_pos_w(i), TB_NR_SEQ_CONTA_PROC_POS_1_w(i))),
					tb_nr_seq_conta_resumo_ins_w(i), tb_nr_seq_prestador_pgto_ins_w(i), (tb_vl_tx_servico_ins_w(i) + tb_vl_tx_co_ins_w(i) + tb_vl_administracao_ins_w(i)),
					tb_vl_administracao_ins_w(i), tb_vl_materiais_ins_w(i), 'migraDadosPos', clock_timestamp(),
					'migraDadosPos', clock_timestamp(), nextval('pls_conta_pos_proc_contab_seq'),
					tb_vl_tx_servico_ins_w(i), tb_vl_tx_co_ins_w(i), tb_vl_co_ins_w(i),
					tb_vl_servico_ins_w(i), (tb_vl_servico_ins_w(i) + tb_vl_co_ins_w(i) + tb_vl_materiais_ins_w(i) +
					tb_vl_tx_servico_ins_w(i) + tb_vl_tx_co_ins_w(i) + tb_vl_administracao_ins_w(i)),
				  (	tb_vl_servico_ins_w(i) + tb_vl_co_ins_w(i) + tb_vl_materiais_ins_w(i) +
					tb_vl_tx_servico_ins_w(i) + tb_vl_tx_co_ins_w(i) + tb_vl_administracao_ins_w(i)),
					tb_dt_mes_w(i));

			forall i in tb_nr_seq_conta_ins_w.first..tb_nr_seq_conta_ins_w.last
			  insert into pls_conta_pos_proc_fat(nr_seq_conta, nr_seq_conta_pos_proc, nr_seq_conta_resumo,
				  nr_seq_prestador_pgto, vl_administracao, vl_lib_taxa_material,
				  vl_materiais, nm_usuario, dt_atualizacao,
				  nm_usuario_nrec, dt_atualizacao_nrec,nr_sequencia,
				  vl_lib_taxa_servico, vl_lib_taxa_co, vl_custo_operacional,
				  vl_medico, vl_pos_estabelecido, vl_provisao,
				  dt_mes_competencia)
			  values  (  tb_nr_seq_conta_ins_w(i), coalesce(tb_nr_seq_conta_proc_pos_ins_w(i), coalesce(tb_nr_seq_cta_proc_pos_w(i), TB_NR_SEQ_CONTA_PROC_POS_1_w(i))), tb_nr_seq_conta_resumo_ins_w(i),
				  tb_nr_seq_prestador_pgto_ins_w(i), (tb_vl_tx_servico_ins_w(i) + tb_vl_tx_co_ins_w(i) + tb_vl_administracao_ins_w(i)),
				  tb_vl_administracao_ins_w(i),
				  tb_vl_materiais_ins_w(i), 'migraDadosPos', clock_timestamp(),
				  'migraDadosPos', clock_timestamp(), nextval('pls_conta_pos_proc_fat_seq'),
				  tb_vl_tx_servico_ins_w(i), tb_vl_tx_co_ins_w(i), tb_vl_co_ins_w(i),
				  tb_vl_servico_ins_w(i), (tb_vl_servico_ins_w(i) + tb_vl_co_ins_w(i) + tb_vl_materiais_ins_w(i) +
				   tb_vl_tx_servico_ins_w(i) + tb_vl_tx_co_ins_w(i) + tb_vl_administracao_ins_w(i)),
				  (tb_vl_servico_ins_w(i) + tb_vl_co_ins_w(i) + tb_vl_materiais_ins_w(i) +
				   tb_vl_tx_servico_ins_w(i) + tb_vl_tx_co_ins_w(i) + tb_vl_administracao_ins_w(i)), tb_dt_mes_w(i));

			commit;

			  end if;
			  tb_nr_seq_conta_ins_w.delete;
			  tb_nr_seq_conta_proc_pos_ins_w.delete;
			  TB_NR_SEQ_CONTA_PROC_POS_1_w.delete;
			  tb_nr_seq_conta_resumo_ins_w.delete;
			  tb_nr_seq_prestador_pgto_ins_w.delete;
			  tb_vl_administracao_ins_w.delete;
			  tb_vl_materiais_ins_w.delete;
			  tb_vl_tx_co_ins_w.delete;
			  tb_vl_co_ins_w.delete;
			  tb_vl_tx_servico_ins_w.delete;
			  tb_vl_servico_ins_w.delete;
			  tb_dt_mes_w.delete;
			  tb_nr_seq_cta_proc_pos_w.delete;
		  end loop;
		  close c02;
		  insere_log_execucao('Final da execução do cursor C02 para competência '||r_cComp_w.dt_ini);

		  insere_log_execucao('Início da execução do cursor C03 para competência '||r_cComp_w.dt_ini);
		  commit;
		  /*
			Da pls_conta_pos_estab_contab para a pls_conta_pos_mat_contab
		  */
		  open c03(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c03 bulk collect
			into  tb_nr_seq_conta_ins_w, tb_nr_seq_conta_mat_pos_ins_w, tb_nr_seq_cta_mat_pos_w,
			tb_nr_seq_conta_mat_pos_1_w, tb_nr_seq_conta_resumo_ins_w, tb_nr_seq_prestador_pgto_ins_w,
			tb_vl_administracao_ins_w, tb_vl_materiais_ins_w,  tb_dt_mes_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_nr_seq_conta_ins_w.count = 0;

			  if (tb_nr_seq_conta_ins_w.count > 0 ) then

			forall i in tb_nr_seq_conta_ins_w.first..tb_nr_seq_conta_ins_w.last

			  insert into pls_conta_pos_mat_contab(  nr_seq_conta, nr_seq_conta_mat_pos, nr_seq_conta_resumo,
				nr_seq_prestador_pgto, vl_administracao, vl_lib_taxa_material,
				vl_materiais, nm_usuario, dt_atualizacao,
				nm_usuario_nrec, dt_atualizacao_nrec,nr_sequencia,
				dt_mes_competencia, vl_provisao)
			  values  (    tb_nr_seq_conta_ins_w(i), coalesce(tb_nr_seq_conta_mat_pos_ins_w(i), coalesce(tb_nr_seq_cta_mat_pos_w(i), tb_nr_seq_conta_mat_pos_1_w(i))),
				tb_nr_seq_conta_resumo_ins_w(i), tb_nr_seq_prestador_pgto_ins_w(i), tb_vl_administracao_ins_w(i), tb_vl_administracao_ins_w(i),
				tb_vl_materiais_ins_w(i), 'migraDadosPos', clock_timestamp(),
				'migraDadosPos', clock_timestamp(), nextval('pls_conta_pos_mat_contab_seq'),
				tb_dt_mes_w(i), (tb_vl_materiais_ins_w(i) +  tb_vl_administracao_ins_w(i)));


			--Popular nova tabela  pls_conta_pos_mat_fat(No oós antigo os valoes contabeis e de faturamento eram compartilhados na tabela pls_conta_pos_mat_contab)
			forall i in tb_nr_seq_conta_ins_w.first..tb_nr_seq_conta_ins_w.last
			  insert into pls_conta_pos_mat_fat(nr_seq_conta, nr_seq_conta_mat_pos, nr_seq_conta_resumo,
				  nr_seq_prestador_pgto, vl_administracao, vl_lib_taxa_material,
				  vl_materiais, nm_usuario, dt_atualizacao,
				  nm_usuario_nrec, dt_atualizacao_nrec,nr_sequencia,
				  vl_pos_estabelecido, dt_mes_competencia)
			  values (  tb_nr_seq_conta_ins_w(i), coalesce(tb_nr_seq_conta_mat_pos_ins_w(i), coalesce(tb_nr_seq_cta_mat_pos_w(i), tb_nr_seq_conta_mat_pos_1_w(i))),
					tb_nr_seq_conta_resumo_ins_w(i), tb_nr_seq_prestador_pgto_ins_w(i), tb_vl_administracao_ins_w(i), tb_vl_administracao_ins_w(i),
				  tb_vl_materiais_ins_w(i), 'migraDadosPos', clock_timestamp(),
				  'migraDadosPos', clock_timestamp(), nextval('pls_conta_pos_mat_fat_seq'),
				  tb_vl_materiais_ins_w(i), tb_dt_mes_w(i));

			commit;

			  end if;
			  tb_nr_seq_conta_ins_w.delete;
			  tb_nr_seq_conta_mat_pos_ins_w.delete;
			  tb_nr_seq_conta_mat_pos_1_w.delete;
			  tb_nr_seq_conta_resumo_ins_w.delete;
			  tb_nr_seq_prestador_pgto_ins_w.delete;
			  tb_vl_administracao_ins_w.delete;
			  tb_vl_materiais_ins_w.delete;
			  tb_dt_mes_w.delete;

		  end loop;
		  close C03;
		  insere_log_execucao('Final da execução do cursor C03 para competência '||r_cComp_w.dt_ini);

		  insere_log_execucao('Início da execução do cursor C04 para competência '||r_cComp_w.dt_ini);
		  commit;
		  /*
			Da pls_conta_pos_estab_taxa para pls_conta_pos_proc_tx
		  */
		  open C04(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c04 bulk collect
			into  tb_proc_nr_seq_pos_estab_w, tb_proc_nr_seq_regra_w,
			  tb_proc_vl_taxa_pos_w, tb_proc_ie_tipo_taxa_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_proc_nr_seq_pos_estab_w.count = 0;

			if (tb_proc_nr_seq_pos_estab_w.count > 0) then

			  forall i in tb_proc_nr_seq_pos_estab_w.first..tb_proc_nr_seq_pos_estab_w.last
			insert into pls_conta_pos_proc_tx(  nr_sequencia, ie_tipo_taxa, vl_taxa_manutencao,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, nr_seq_regra_pos_estab, nr_seq_conta_pos_proc)
			values (  nextval('pls_conta_pos_proc_tx_seq'), tb_proc_ie_tipo_taxa_w(i) , tb_proc_vl_taxa_pos_w(i),
				clock_timestamp(), 'migraDadosPos', clock_timestamp(),
				'migraDadosPos', tb_proc_nr_seq_regra_w(i), tb_proc_nr_seq_pos_estab_w(i));

			  commit;
			  tb_proc_vl_taxa_pos_w.delete;
			  tb_proc_nr_seq_regra_w.delete;
			  tb_proc_nr_seq_pos_estab_w.delete;
			  tb_proc_ie_tipo_taxa_w.delete;

			end if;
		  end loop;
		  close C04;

		  insere_log_execucao('Final da execução do cursor C04 para competência '||r_cComp_w.dt_ini);

		  insere_log_execucao('Início da execução do cursor C05 para competência '||r_cComp_w.dt_ini);
		  commit;
		  /*
			Da pls_conta_pos_estab_taxa para pls_conta_pos_mat_tx
		  */
		  open C05(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c05 bulk collect
			into  tb_proc_nr_seq_pos_estab_w, tb_proc_nr_seq_regra_w,
			  tb_proc_vl_taxa_pos_w, tb_proc_ie_tipo_taxa_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_proc_nr_seq_pos_estab_w.count = 0;

			if (tb_proc_nr_seq_pos_estab_w.count > 0) then

			  forall i in tb_proc_nr_seq_pos_estab_w.first..tb_proc_nr_seq_pos_estab_w.last
			insert into    pls_conta_pos_mat_tx(  nr_sequencia, ie_tipo_taxa, vl_taxa_manutencao,
				dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
				nm_usuario_nrec, nr_seq_regra_pos_estab, nr_seq_conta_mat_pos)
			values (  nextval('pls_conta_pos_mat_tx_seq'), tb_proc_ie_tipo_taxa_w(i) , tb_proc_vl_taxa_pos_w(i),
				clock_timestamp(), 'migraDadosPos', clock_timestamp(),
				'migraDadosPos', tb_proc_nr_seq_regra_w(i), tb_proc_nr_seq_pos_estab_w(i));

			  commit;

			  tb_proc_vl_taxa_pos_w.delete;
			  tb_proc_nr_seq_regra_w.delete;
			  tb_proc_nr_seq_pos_estab_w.delete;
			  tb_proc_ie_tipo_taxa_w.delete;
			end if;
		  end loop;
		  close C05;

		  insere_log_execucao('Final da execução do cursor C05 para competência '||r_cComp_w.dt_ini);

		  insere_log_execucao('Início da execução do cursor C06 para competência '||r_cComp_w.dt_ini);
		  commit;
		  /*
			Da  pls_conta_pos_taxa_contab para a  pls_conta_pos_proc_tx_ctb
		  */
		open C06(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c06 bulk collect
			into  tb_seq_conta_w, tb_seq_resumo_w, tb_seq_prest_pgto_w,
			  tb_seq_pos_estab_tx_w, tb_vl_taxa_w, tb_seq_pos_ctb_w,
			  tb_seq_pos_ctb_1_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_seq_resumo_w.count = 0;

			if (tb_seq_resumo_w.count > 0) then

			  forall i in tb_seq_resumo_w.first..tb_seq_resumo_w.last
			insert into pls_conta_pos_proc_tx_ctb(  nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_resumo,
				nr_seq_proc_pos_tx, nr_seq_prestador_pgto, vl_taxa,
				nr_seq_conta, nr_seq_pos_proc_ctb)
			values (  nextval('pls_conta_pos_proc_tx_ctb_seq'), clock_timestamp(), 'migraDadosPos',
				clock_timestamp(), 'migraDadosPos', tb_seq_resumo_w(i),
				tb_seq_pos_estab_tx_w(i), tb_seq_prest_pgto_w(i), tb_vl_taxa_w(i),
				tb_seq_conta_w(i), coalesce(tb_seq_pos_ctb_w(i),tb_seq_pos_ctb_1_w(i)));
			  commit;
			  tb_seq_resumo_w.delete;
			  tb_seq_pos_estab_tx_w.delete;
			  tb_seq_prest_pgto_w.delete;
			  tb_vl_taxa_w.delete;
			  tb_seq_conta_w.delete;
			  tb_seq_pos_ctb_w.delete;
			end if;
		end loop;
		close C06;

		  insere_log_execucao('Final da execução do cursor C06 para competência '||r_cComp_w.dt_ini);
		
		  insere_log_execucao('Início da execução do cursor C07 para competência '||r_cComp_w.dt_ini);
		  commit;
		  /*
			Da  pls_conta_pos_taxa_contab para a  pls_conta_pos_mat_tx_ctb
		  */
		open C07(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c07 bulk collect
			into  tb_seq_conta_w, tb_seq_resumo_w, tb_seq_prest_pgto_w,
			  tb_seq_pos_estab_tx_w, tb_vl_taxa_w, tb_seq_pos_ctb_w , tb_seq_pos_ctb_1_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_seq_resumo_w.count = 0;

			if (tb_seq_resumo_w.count > 0) then

			  forall i in tb_seq_resumo_w.first..tb_seq_resumo_w.last
			insert into pls_conta_pos_mat_tx_ctb(  nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_resumo,
				nr_seq_pos_mat_tx, nr_seq_prestador_pgto, vl_taxa,
				nr_seq_conta, nr_seq_pos_mat_ctb)
			values (  nextval('pls_conta_pos_mat_tx_ctb_seq'), clock_timestamp(), 'migraDadosPos',
				clock_timestamp(), 'migraDadosPos', tb_seq_resumo_w(i),
				tb_seq_pos_estab_tx_w(i), tb_seq_prest_pgto_w(i), tb_vl_taxa_w(i),
				tb_seq_conta_w(i), coalesce(tb_seq_pos_ctb_w(i),tb_seq_pos_ctb_1_w(i)));
			  commit;
			  tb_seq_resumo_w.delete;
			  tb_seq_pos_estab_tx_w.delete;
			  tb_seq_prest_pgto_w.delete;
			  tb_vl_taxa_w.delete;
			  tb_seq_conta_w.delete;
			  tb_seq_pos_ctb_w.delete;

			end if;
		end loop;
		close C07;

		  insere_log_execucao('Final da execução do cursor C07 para competência '||r_cComp_w.dt_ini);

		  insere_log_execucao('Início da execução do cursor C06_1 para competência '||r_cComp_w.dt_ini);
		  commit;
				  /*
			Da  pls_conta_pos_taxa_contab para a  pls_conta_pos_proc_tx_fat
		  */
		  open C06_1(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c06_1 bulk collect
			into  tb_seq_conta_w, tb_seq_resumo_w, tb_seq_prest_pgto_w,
			  tb_seq_pos_estab_tx_w, tb_vl_taxa_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_seq_resumo_w.count = 0;

			if (tb_seq_resumo_w.count > 0) then

			  forall i in tb_seq_resumo_w.first..tb_seq_resumo_w.last
			insert into pls_conta_pos_proc_tx_fat(  nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_resumo,
				nr_seq_proc_pos_tx, nr_seq_prestador_pgto, vl_taxa,
				nr_seq_conta)
			values (  nextval('pls_conta_pos_proc_tx_fat_seq'), clock_timestamp(), 'migraDadosPos',
				clock_timestamp(), 'migraDadosPos', tb_seq_resumo_w(i),
				tb_seq_pos_estab_tx_w(i), tb_seq_prest_pgto_w(i), tb_vl_taxa_w(i),
				tb_seq_conta_w(i));
			  commit;
			  tb_seq_resumo_w.delete;
			  tb_seq_pos_estab_tx_w.delete;
			  tb_seq_prest_pgto_w.delete;
			  tb_vl_taxa_w.delete;
			  tb_seq_conta_w.delete;
			end if;
		  end loop;
		  close C06_1;

		  insere_log_execucao('Final da execução do cursor C06_1 para competência '||r_cComp_w.dt_ini);

		  insere_log_execucao('Início da execução do cursor C07_1 para competência '||r_cComp_w.dt_ini);
		  commit;
		  /*
			Da  pls_conta_pos_taxa_contab para a  pls_conta_pos_mat_tx_fat
		  */
		  open C07_1(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c07_1 bulk collect
			into  tb_seq_conta_w, tb_seq_resumo_w, tb_seq_prest_pgto_w,
			  tb_seq_pos_estab_tx_w, tb_vl_taxa_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_seq_resumo_w.count = 0;

			if (tb_seq_resumo_w.count > 0) then

			  forall i in tb_seq_resumo_w.first..tb_seq_resumo_w.last
			insert into pls_conta_pos_mat_tx_fat(  nr_sequencia, dt_atualizacao, nm_usuario,
				dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_conta_resumo,
				nr_seq_pos_mat_tx, nr_seq_prestador_pgto, vl_taxa,
				nr_seq_conta)
			values (  nextval('pls_conta_pos_mat_tx_fat_seq'), clock_timestamp(), 'migraDadosPos',
				clock_timestamp(), 'migraDadosPos', tb_seq_resumo_w(i),
				tb_seq_pos_estab_tx_w(i), tb_seq_prest_pgto_w(i), tb_vl_taxa_w(i),
				tb_seq_conta_w(i));
			  commit;
			  tb_seq_resumo_w.delete;
			  tb_seq_pos_estab_tx_w.delete;
			  tb_seq_prest_pgto_w.delete;
			  tb_vl_taxa_w.delete;
			  tb_seq_conta_w.delete;

			end if;
		  end loop;
		  close C07_1;

			insere_log_execucao('Final da execução do cursor C07_1 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C08 para competência '||r_cComp_w.dt_ini);
		  commit;
		  /*Atualiza  informações de novas tabelas na pls_fatura_proc */

		  open C08(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   C08 bulk collect
			into  tb_seq_fat_proc_w, tb_seq_pos_proc_w, tb_seq_pos_proc_fat_w,
			  tb_seq_pos_proc_tx_w, tb_seq_pos_proc_tx_fat_w, tb_seq_pos_taxa_contab_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_seq_fat_proc_w.count = 0;

			if ( tb_seq_fat_proc_w.count > 0) then
			  forall i in tb_seq_fat_proc_w.first..tb_seq_fat_proc_w.last
			update  pls_fatura_proc
			set  nr_seq_pos_proc    = tb_seq_pos_proc_w(i),
			  nr_seq_pos_proc_fat  = tb_seq_pos_proc_fat_w(i),
			  nr_seq_pos_proc_tx  = tb_seq_pos_proc_tx_w(i),
			  nr_seq_pos_proc_tx_fat  = tb_seq_pos_proc_tx_fat_w(i),
			  nr_seq_pos_taxa_contab  = tb_seq_pos_taxa_contab_w(i)
			where  nr_sequencia = tb_seq_fat_proc_w(i);

			commit;

			tb_seq_fat_proc_w.delete;
			tb_seq_pos_proc_w.delete;
			tb_seq_pos_proc_fat_w.delete;
			tb_seq_pos_proc_tx_w.delete;
			tb_seq_pos_proc_tx_fat_w.delete;
			tb_seq_pos_taxa_contab_w.delete;
			end if;

		  end loop;
		  close C08;

		  insere_log_execucao('Final da execução do cursor C08 para competência '||r_cComp_w.dt_ini);

		  insere_log_execucao('Início da execução do cursor C09 para competência '||r_cComp_w.dt_ini);
		  commit;

		  /*Atualiza  informações de novas tabelas na pls_fatura_mat */

		  open C09(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   C09 bulk collect
			into  tb_seq_fat_mat_w, tb_seq_pos_mat_w, tb_seq_pos_mat_fat_w,
			  tb_seq_pos_mat_tx_w, tb_seq_pos_mat_tx_fat_w, tb_seq_pos_taxa_contab_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_seq_fat_mat_w.count = 0;

			if ( tb_seq_fat_mat_w.count > 0) then
			  forall i in tb_seq_fat_mat_w.first..tb_seq_fat_mat_w.last
			update  pls_fatura_mat
			set  nr_seq_pos_mat    = tb_seq_pos_mat_w(i),
			  nr_seq_pos_mat_fat  = tb_seq_pos_mat_fat_w(i),
			  nr_seq_pos_mat_tx  = tb_seq_pos_mat_tx_w(i),
			  nr_seq_pos_mat_tx_fat  = tb_seq_pos_mat_tx_fat_w(i),
			  nr_seq_pos_taxa_contab  = tb_seq_pos_taxa_contab_w(i)
			where  nr_sequencia = tb_seq_fat_mat_w(i);

			commit;
			tb_seq_fat_mat_w.delete;
			tb_seq_pos_mat_w.delete;
			tb_seq_pos_mat_fat_w.delete;
			tb_seq_pos_mat_tx_w.delete;
			tb_seq_pos_mat_tx_fat_w.delete;
			tb_seq_pos_taxa_contab_w.delete;
			end if;

		  end loop;
		  close C09;

			insere_log_execucao('Final da execução do cursor C09 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C10 para competência '||r_cComp_w.dt_ini);
			commit;

		  open C10(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c10 bulk collect
			into  tb_seq_pos_proc_part_w, tb_vl_administracao_w,
			  tb_vl_pos_estab_w, tb_seq_proc_partic_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
			exit when tb_seq_pos_proc_part_w.count = 0;

			if ( tb_seq_pos_proc_part_w.count > 0) then
			  forall i in tb_seq_pos_proc_part_w.first..tb_seq_pos_proc_part_w.last

			insert into pls_conta_pos_proc_part( nr_sequencia, vl_administracao, vl_participante_pos,
				nr_seq_proc_partic, nr_seq_conta_pos_proc, nm_usuario,
				nm_usuario_nrec, dt_atualizacao, dt_atualizacao_nrec)
			values ( nextval('pls_conta_pos_proc_part_seq'), tb_vl_administracao_w(i), tb_vl_pos_estab_w(i),
			  tb_seq_proc_partic_w(i), tb_seq_pos_proc_part_w(i), 'MigraDadosPos',
				'MigraDadosPos', clock_timestamp(), clock_timestamp());

			tb_seq_pos_proc_part_w.delete;
			tb_vl_administracao_w.delete;
			tb_vl_pos_estab_w.delete;
			tb_seq_proc_partic_w.delete;

			commit;
			end if;
		  end loop;
		  close C10;

			insere_log_execucao('Final da execução do cursor C10 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C11 para competência '||r_cComp_w.dt_ini);
			commit;

		  /*
			Faz atualização da referência à pls_conta_pos_proc nos respectivos registros da
			pls_ocorrencia_benef.
		  */
		  open C11(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c11 bulk collect
			into  tb_seq_ocor_benef_w, tb_nr_seq_conta_proc_pos_ins_w
			limit   pls_util_cta_pck.qt_registro_transacao_w;
			exit  when tb_nr_seq_conta_proc_pos_ins_w.count = 0;

			if (tb_seq_ocor_benef_w.count > 0) then

			  forall i in tb_seq_ocor_benef_w.first..tb_seq_ocor_benef_w.last
			update  pls_ocorrencia_benef
			set  nr_seq_conta_pos_proc   = tb_nr_seq_conta_proc_pos_ins_w(i)
			where  nr_sequencia    = tb_seq_ocor_benef_w(i);

			  commit;

			  tb_nr_seq_conta_proc_pos_ins_w.delete;
			  tb_seq_ocor_benef_w.delete;
			end if;
		  end loop;
		  close C11;

			insere_log_execucao('Final da execução do cursor C11 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C12 para competência '||r_cComp_w.dt_ini);
			commit;

		  /*
			Faz atualização da referência à pls_conta_pos_mat nos respectivos registros da
			pls_ocorrencia_benef.
		  */
		  open C12(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   c12 bulk collect
			into  tb_seq_ocor_benef_w, tb_nr_seq_conta_mat_pos_ins_w
			limit   pls_util_cta_pck.qt_registro_transacao_w;
			exit  when tb_nr_seq_conta_mat_pos_ins_w.count = 0;

			if (tb_seq_ocor_benef_w.count > 0) then

			  forall i in tb_seq_ocor_benef_w.first..tb_seq_ocor_benef_w.last
			update  pls_ocorrencia_benef
			set  nr_seq_conta_pos_mat   = tb_nr_seq_conta_mat_pos_ins_w(i)
			where  nr_sequencia    = tb_seq_ocor_benef_w(i);

			  commit;

			  tb_nr_seq_conta_mat_pos_ins_w.delete;
			  tb_seq_ocor_benef_w.delete;
			end if;
		  end loop;
		  close C12;

			insere_log_execucao('Final da execução do cursor C12 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C13 para competência '||r_cComp_w.dt_ini);
			commit;

		  --Valores contábeis de procedimentos
		  open C13(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   C13 bulk collect
			into  tb_dt_mes_competencia_w, tb_seq_conta_w, tb_seq_conta_pos_proc_w,
			  tb_seq_conta_resumo_w, tb_seq_prestador_pgto_w, tb_vl_administracao_w,
			  tb_vl_custo_operacional_w, tb_vl_lib_taxa_co_w, tb_vl_lib_taxa_material_w,
			  tb_vl_lib_taxa_servico_w, tb_vl_materiais_w, tb_vl_medico_w,
			  tb_vl_pos_estabelecido_w, tb_vl_provisao_w
			limit   pls_util_cta_pck.qt_registro_transacao_w;
			exit  when tb_nr_seq_conta_mat_pos_ins_w.count = 0;

			if ( tb_seq_conta_w.count > 0) then

			  forall i in tb_seq_conta_w.first..tb_seq_conta_w.last
			insert into pls_conta_pos_proc_contab(
				dt_mes_competencia, nr_seq_conta, nr_seq_conta_pos_proc,
				nr_seq_conta_resumo, nr_seq_prestador_pgto, vl_administracao,
				vl_custo_operacional, vl_lib_taxa_co, vl_lib_taxa_material,
				vl_lib_taxa_servico, vl_materiais, vl_medico,
				vl_pos_estabelecido, vl_provisao, nr_sequencia,
				nm_usuario, dt_atualizacao, nm_usuario_nrec,
				dt_atualizacao_nrec            )
			  values ( tb_dt_mes_competencia_w(i), tb_seq_conta_w(i), tb_seq_conta_pos_proc_w(i),
				tb_seq_conta_resumo_w(i), tb_seq_prestador_pgto_w(i), tb_vl_administracao_w(i),
				tb_vl_custo_operacional_w(i), tb_vl_lib_taxa_co_w(i), tb_vl_lib_taxa_material_w(i),
				tb_vl_lib_taxa_servico_w(i), tb_vl_materiais_w(i), tb_vl_medico_w(i),
				tb_vl_pos_estabelecido_w(i), tb_vl_provisao_w(i), nextval('pls_conta_pos_proc_contab_seq'),
				'MigraDadosPos', clock_timestamp(), 'MigraDadosPos',
				clock_timestamp());

			  commit;

			  tb_dt_mes_competencia_w.delete;
			  tb_seq_conta_w.delete;
			  tb_seq_conta_pos_proc_w.delete;
			  tb_seq_conta_resumo_w.delete;
			  tb_seq_prestador_pgto_w.delete;
			  tb_vl_administracao_w.delete;
			  tb_vl_custo_operacional_w.delete;
			  tb_vl_lib_taxa_co_w.delete;
			  tb_vl_lib_taxa_material_w.delete;
			  tb_vl_lib_taxa_servico_w.delete;
			  tb_vl_materiais_w.delete;
			  tb_vl_medico_w.delete;
			  tb_vl_pos_estabelecido_w.delete;
			  tb_vl_provisao_w.delete;

			end if;
		  end loop;
		  close C13;

			insere_log_execucao('Final da execução do cursor C13 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C14 para competência '||r_cComp_w.dt_ini);
			commit;

		  --Valores contábeis de procedimentos
		  open C14(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   C14 bulk collect
			into  tb_dt_mes_competencia_w, tb_seq_conta_w, tb_seq_conta_pos_mat_w,
			  tb_seq_conta_resumo_w, tb_seq_prestador_pgto_w, tb_vl_administracao_w,
			  tb_vl_lib_taxa_material_w, tb_vl_materiais_w, tb_vl_pos_estabelecido_w,
			  tb_vl_provisao_w
			limit   pls_util_cta_pck.qt_registro_transacao_w;
			exit  when tb_nr_seq_conta_mat_pos_ins_w.count = 0;

			if ( tb_seq_conta_w.count > 0) then

			  forall i in tb_seq_conta_w.first..tb_seq_conta_w.last
			insert into pls_conta_pos_mat_contab(  nr_seq_conta, nr_seq_conta_mat_pos, nr_seq_conta_resumo,
				nr_seq_prestador_pgto, vl_administracao, vl_lib_taxa_material,
				vl_materiais, nm_usuario, dt_atualizacao,
				nm_usuario_nrec, dt_atualizacao_nrec,nr_sequencia,
				dt_mes_competencia, vl_provisao, vl_pos_estabelecido)
			values (  tb_seq_conta_w(i), tb_seq_conta_pos_mat_w(i), tb_seq_conta_resumo_w(i),
				tb_seq_prestador_pgto_w(i), tb_vl_administracao_w(i), tb_vl_lib_taxa_material_w(i),
				tb_vl_materiais_w(i), 'MigraDadosPos', clock_timestamp(),
				'MigraDadosPos', clock_timestamp(), nextval('pls_conta_pos_mat_contab_seq'),
				tb_dt_mes_competencia_w(i), tb_vl_provisao_w(i), tb_vl_pos_estabelecido_w(i) );

			  commit;

			  tb_dt_mes_competencia_w.delete;
			  tb_seq_conta_w.delete;
			  tb_seq_conta_pos_mat_w.delete;
			  tb_seq_conta_resumo_w.delete;
			  tb_seq_prestador_pgto_w.delete;
			  tb_vl_administracao_w.delete;
			  tb_vl_lib_taxa_material_w.delete;
			  tb_vl_materiais_w.delete;
			  tb_vl_pos_estabelecido_w.delete;
			  tb_vl_provisao_w.delete;

			end if;
		  end loop;
		  close C14;

			insere_log_execucao('Final da execução do cursor C14 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C15 para competência '||r_cComp_w.dt_ini);
			commit;

		  open C15(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   C15 bulk collect
			into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			  tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			  tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			  tb_nm_usuario_w, tb_seq_dados_contab_w,
			  tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_mat_contab_w
			limit   pls_util_cta_pck.qt_registro_transacao_w;
			exit  when tb_cd_classif_cred_provisao_w.count = 0;

			if ( tb_cd_classif_cred_provisao_w.count > 0) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VLB', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);

			  commit;

			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;

			end if;
		  end loop;
		  close C15;

			insere_log_execucao('Final da execução do cursor C15 para competência '||r_cComp_w.dt_ini);

			insere_log_execucao('Início da execução do cursor C16 para competência '||r_cComp_w.dt_ini);
			commit;

		  open C16(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
		  loop
			fetch   C16 bulk collect
			into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			  tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			  tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			  tb_nm_usuario_w, tb_seq_dados_contab_w,
			  tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_proc_contab_w
			limit   pls_util_cta_pck.qt_registro_transacao_w;
			exit  when tb_cd_classif_cred_provisao_w.count = 0;

			if ( tb_cd_classif_cred_provisao_w.count > 0) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VLB', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);

			  commit;

			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;

			end if;
		  end loop;
		  close C16;

			insere_log_execucao('Final da execução do cursor C16 para competência '||r_cComp_w.dt_ini);
			commit;

		  --Valores contábeis de taxa
		  if ( ie_lote_taxa_fat_w  in ('P','A')) then

			insere_log_execucao('Início da execução do cursor C17 para competência '||r_cComp_w.dt_ini);
			commit;

			open C17(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
			loop
			  fetch   C17 bulk collect
			  into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			tb_nm_usuario_w, tb_seq_dados_contab_w,
			tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_mat_contab_w
			  limit   pls_util_cta_pck.qt_registro_transacao_w;
			  exit  when tb_cd_classif_cred_provisao_w.count = 0;

			  if ( tb_cd_classif_cred_provisao_w.count > 0) then

			forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
			  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'VTI', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			  );

			commit;

			tb_cd_classif_cred_provisao_w.delete;
			tb_cd_classif_deb_provisao_w.delete;
			tb_cd_conta_cred_provisao_w.delete;
			tb_cd_conta_deb_provisao_w.delete;
			tb_cd_historico_provisao_w.delete;
			tb_nr_seq_esquema_prov_w.delete;
			tb_vl_provisao_w.delete;
			tb_nr_lote_contabil_prov_w.delete;
			tb_dt_mes_competencia_w.delete;
			tb_nm_usuario_w.delete;
			tb_seq_dados_contab_w.delete;
			tb_nr_seq_pos_estab_contab_w.delete;
			tb_nr_seq_pos_mat_contab_w.delete;
			cd_estabelecimento_w.delete;

			  end if;
			end loop;
			close C17;

			insere_log_execucao('Final da execução do cursor C17 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C18 para competência '||r_cComp_w.dt_ini);
			commit;

			open C18(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
			loop
			  fetch   C18 bulk collect
			  into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			tb_nm_usuario_w, tb_seq_dados_contab_w,
			tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_proc_contab_w
			  limit   pls_util_cta_pck.qt_registro_transacao_w;
			  exit  when tb_cd_classif_cred_provisao_w.count = 0;

			  if ( tb_cd_classif_cred_provisao_w.count > 0) then

			forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
			  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'VTI', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			  );

			commit;

			tb_cd_classif_cred_provisao_w.delete;
			tb_cd_classif_deb_provisao_w.delete;
			tb_cd_conta_cred_provisao_w.delete;
			tb_cd_conta_deb_provisao_w.delete;
			tb_cd_historico_provisao_w.delete;
			tb_nr_seq_esquema_prov_w.delete;
			tb_vl_provisao_w.delete;
			tb_nr_lote_contabil_prov_w.delete;
			tb_dt_mes_competencia_w.delete;
			tb_nm_usuario_w.delete;
			tb_seq_dados_contab_w.delete;
			tb_nr_seq_pos_estab_contab_w.delete;
			tb_nr_seq_pos_mat_contab_w.delete;
			cd_estabelecimento_w.delete;

			  end if;
			end loop;
			close C18;

			insere_log_execucao('Final da execução do cursor C18 para competência '||r_cComp_w.dt_ini);
			commit;

		  end if;

		  if  ( (ie_lote_dif_fat_w = 'P') or (ie_lote_dif_fat_w = 'X' and ie_lote_ajuste_fat_w = 'P'))then

			insere_log_execucao('Início da execução do cursor C19 para competência '||r_cComp_w.dt_ini);
			commit;

			open C19(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
			loop
			  fetch   C19 bulk collect
			  into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			tb_nm_usuario_w, tb_seq_dados_contab_w,
			tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_mat_contab_w
			  limit   pls_util_cta_pck.qt_registro_transacao_w;
			  exit  when tb_cd_classif_cred_provisao_w.count = 0;

			  if ( tb_cd_classif_cred_provisao_w.count > 0) then

			forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
			  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'VDI', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			  );

			commit;

			tb_cd_classif_cred_provisao_w.delete;
			tb_cd_classif_deb_provisao_w.delete;
			tb_cd_conta_cred_provisao_w.delete;
			tb_cd_conta_deb_provisao_w.delete;
			tb_cd_historico_provisao_w.delete;
			tb_nr_seq_esquema_prov_w.delete;
			tb_vl_provisao_w.delete;
			tb_nr_lote_contabil_prov_w.delete;
			tb_dt_mes_competencia_w.delete;
			tb_nm_usuario_w.delete;
			tb_seq_dados_contab_w.delete;
			tb_nr_seq_pos_estab_contab_w.delete;
			tb_nr_seq_pos_mat_contab_w.delete;
			cd_estabelecimento_w.delete;

			  end if;
			end loop;
			close C19;

			insere_log_execucao('Final da execução do cursor C19 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C20 para competência '||r_cComp_w.dt_ini);
			commit;

			open C20(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
			loop
			  fetch   C20 bulk collect
			  into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			tb_nm_usuario_w, tb_seq_dados_contab_w,
			tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_proc_contab_w
			  limit   pls_util_cta_pck.qt_registro_transacao_w;
			  exit  when tb_cd_classif_cred_provisao_w.count = 0;

			  if ( tb_cd_classif_cred_provisao_w.count > 0) then

			forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
			  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'VDI', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			  );

			commit;

			tb_cd_classif_cred_provisao_w.delete;
			tb_cd_classif_deb_provisao_w.delete;
			tb_cd_conta_cred_provisao_w.delete;
			tb_cd_conta_deb_provisao_w.delete;
			tb_cd_historico_provisao_w.delete;
			tb_nr_seq_esquema_prov_w.delete;
			tb_vl_provisao_w.delete;
			tb_nr_lote_contabil_prov_w.delete;
			tb_dt_mes_competencia_w.delete;
			tb_nm_usuario_w.delete;
			tb_seq_dados_contab_w.delete;
			tb_nr_seq_pos_estab_contab_w.delete;
			tb_nr_seq_pos_mat_contab_w.delete;
			cd_estabelecimento_w.delete;

			  end if;
			end loop;
			close C20;

			insere_log_execucao('Final da execução do cursor C20 para competência '||r_cComp_w.dt_ini);
			commit;

		  end if;

		  if (ie_lote_reembolso_fat_w in ('P', 'A')) then

			insere_log_execucao('Início da execução do cursor C21 para competência '||r_cComp_w.dt_ini);
			commit;

			open C21(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
			loop
			  fetch   C21 bulk collect
			  into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			tb_nm_usuario_w, tb_seq_dados_contab_w,
			tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_mat_contab_w
			  limit   pls_util_cta_pck.qt_registro_transacao_w;
			  exit  when tb_cd_classif_cred_provisao_w.count = 0;

			  if ( tb_cd_classif_cred_provisao_w.count > 0) then

			forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
			  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'RE', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			  );

			commit;

			tb_cd_classif_cred_provisao_w.delete;
			tb_cd_classif_deb_provisao_w.delete;
			tb_cd_conta_cred_provisao_w.delete;
			tb_cd_conta_deb_provisao_w.delete;
			tb_cd_historico_provisao_w.delete;
			tb_nr_seq_esquema_prov_w.delete;
			tb_vl_provisao_w.delete;
			tb_nr_lote_contabil_prov_w.delete;
			tb_dt_mes_competencia_w.delete;
			tb_nm_usuario_w.delete;
			tb_seq_dados_contab_w.delete;
			tb_nr_seq_pos_estab_contab_w.delete;
			tb_nr_seq_pos_mat_contab_w.delete;
			cd_estabelecimento_w.delete;

			  end if;
			end loop;
			close C21;

			insere_log_execucao('Final da execução do cursor C21 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C22 para competência '||r_cComp_w.dt_ini);
			commit;

			open C22(r_cComp_w.dt_ini, r_cComp_w.dt_fim);
			loop
			  fetch   C22 bulk collect
			  into  cd_estabelecimento_w, tb_cd_classif_cred_provisao_w, tb_cd_classif_deb_provisao_w, tb_cd_conta_cred_provisao_w,
			tb_cd_conta_deb_provisao_w, tb_cd_historico_provisao_w, tb_nr_seq_esquema_prov_w,
			tb_vl_provisao_w, tb_nr_lote_contabil_prov_w, tb_dt_mes_competencia_w,
			tb_nm_usuario_w, tb_seq_dados_contab_w,
			tb_nr_seq_pos_estab_contab_w, tb_nr_seq_pos_proc_contab_w
			  limit   pls_util_cta_pck.qt_registro_transacao_w;
			  exit  when tb_cd_classif_cred_provisao_w.count = 0;

			  if ( tb_cd_classif_cred_provisao_w.count > 0) then

			forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
			  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'RE', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			  );

			commit;

			tb_cd_classif_cred_provisao_w.delete;
			tb_cd_classif_deb_provisao_w.delete;
			tb_cd_conta_cred_provisao_w.delete;
			tb_cd_conta_deb_provisao_w.delete;
			tb_cd_historico_provisao_w.delete;
			tb_nr_seq_esquema_prov_w.delete;
			tb_vl_provisao_w.delete;
			tb_nr_lote_contabil_prov_w.delete;
			tb_dt_mes_competencia_w.delete;
			tb_nm_usuario_w.delete;
			tb_seq_dados_contab_w.delete;
			tb_nr_seq_pos_estab_contab_w.delete;
			tb_nr_seq_pos_mat_contab_w.delete;
			cd_estabelecimento_w.delete;

			  end if;
			end loop;
			close C22;
			insere_log_execucao('Final da execução do cursor C22 para competência '||r_cComp_w.dt_ini);
			commit;

		  end if;

		  if (ie_lote_ajuste_fat_w = 'P') then

			insere_log_execucao('Início da execução do cursor C23 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c23_w in C23(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if (r_c23_w.vl_administracao <> 0) then

			cd_estabelecimento_w(i)    := r_c23_w.cd_estabelecimento;
			tb_cd_classif_cred_provisao_w(i) := r_c23_w.cd_classif_cred_provisao;
			tb_cd_classif_deb_provisao_w(i)  := r_c23_w.cd_classif_deb_provisao;
			tb_cd_conta_cred_provisao_w(i)  := r_c23_w.cd_conta_cred_provisao;
			tb_cd_conta_deb_provisao_w(i)   := r_c23_w.cd_conta_deb_provisao;
			tb_cd_historico_provisao_w(i)   := r_c23_w.cd_historico_provisao;
			tb_nr_seq_esquema_prov_w(i)     := r_c23_w.nr_seq_esquema_prov;
			tb_vl_provisao_w(i)     := r_c23_w.vl_administracao;
			tb_nr_lote_contabil_prov_w(i)   := r_c23_w.nr_lote_contabil_prov;
			tb_dt_mes_competencia_w(i)   := r_c23_w.dt_mes_competencia;
			tb_nm_usuario_w(i)     := r_c23_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c23_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c23_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_mat_contab_w(i)  := r_c23_w.nr_seq_pos_mat_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VAJ', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VAJ', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C23 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C24 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c24_w in C24(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if (r_c24_w.vl_administracao <> 0) then

			cd_estabelecimento_w(i)    := r_c24_w.cd_estabelecimento;
			tb_cd_classif_cred_provisao_w(i) := r_c24_w.cd_classif_cred_provisao;
			tb_cd_classif_deb_provisao_w(i)  := r_c24_w.cd_classif_deb_provisao;
			tb_cd_conta_cred_provisao_w(i)  := r_c24_w.cd_conta_cred_provisao;
			tb_cd_conta_deb_provisao_w(i)   := r_c24_w.cd_conta_deb_provisao;
			tb_cd_historico_provisao_w(i)   := r_c24_w.cd_historico_provisao;
			tb_nr_seq_esquema_prov_w(i)     := r_c24_w.nr_seq_esquema_prov;
			tb_vl_provisao_w(i)     := r_c24_w.vl_administracao;
			tb_nr_lote_contabil_prov_w(i)   := r_c24_w.nr_lote_contabil_prov;
			tb_dt_mes_competencia_w(i)   := r_c24_w.dt_mes_competencia;
			tb_nm_usuario_w(i)     := r_c24_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c24_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c24_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_proc_contab_w(i)  := r_c24_w.nr_seq_pos_proc_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VAJ', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VAJ', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;
			insere_log_execucao('Final da execução do cursor C24 para competência '||r_cComp_w.dt_ini);
			commit;

		  end if;

		  if (ie_lote_taxa_fat_w  in ('R', 'A')) then

			insere_log_execucao('Início da execução do cursor C25 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c25_w in C25(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce(r_c25_w.ie_tipo_cobranca_conta, r_c25_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c25_w.dt_mes_competencia;
			elsif (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c25_w.dt_emissao;
			elsif (coalesce(r_c25_w.nr_titulo,0) = 0) then
			  tb_dt_mes_competencia_w(i) :=  coalesce(r_c25_w.dt_geracao_titulos, r_c25_w.dt_mes_competencia);
			else
			  tb_dt_mes_competencia_w(i) :=  r_c25_w.dt_emissao_titulo;
			end if;

			cd_estabelecimento_w(i)    := r_c25_w.cd_estabelecimento;
			tb_cd_classif_cred_provisao_w(i) := r_c25_w.cd_classif_cred_taxa;
			tb_cd_classif_deb_provisao_w(i)  := r_c25_w.cd_classif_deb_taxa;
			tb_cd_conta_cred_provisao_w(i)  := r_c25_w.cd_conta_cred_taxa;
			tb_cd_conta_deb_provisao_w(i)   := r_c25_w.cd_conta_deb_taxa;
			tb_cd_historico_provisao_w(i)   := r_c25_w.cd_historico_taxa;
			tb_nr_seq_esquema_prov_w(i)     := r_c25_w.nr_seq_esquema_taxa;
			tb_vl_provisao_w(i)     := r_c25_w.vl_administracao;
			tb_nr_lote_contabil_prov_w(i)   := r_c25_w.nr_lote_contabil;
			tb_nm_usuario_w(i)     := r_c25_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c25_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c25_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_mat_contab_w(i)  := r_c25_w.nr_seq_pos_mat_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VTX', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				);

			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if ( tb_cd_classif_cred_provisao_w.count > 0) then
			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito, cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil,cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VTX', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C25 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C26 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c26_w in C26(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce(r_c26_w.ie_tipo_cobranca_conta, r_c26_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c26_w.dt_mes_competencia;
			elsif (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c26_w.dt_emissao;
			elsif (coalesce(r_c26_w.nr_titulo,0) = 0) then
			  tb_dt_mes_competencia_w(i) :=  coalesce(r_c26_w.dt_geracao_titulos, r_c26_w.dt_mes_competencia);
			else
			  tb_dt_mes_competencia_w(i) :=  r_c26_w.dt_emissao_titulo;
			end if;

			cd_estabelecimento_w(i)    := r_c26_w.cd_estabelecimento;
			tb_cd_classif_cred_provisao_w(i) := r_c26_w.cd_classif_cred_taxa;
			tb_cd_classif_deb_provisao_w(i)  := r_c26_w.cd_classif_deb_taxa;
			tb_cd_conta_cred_provisao_w(i)  := r_c26_w.cd_conta_cred_taxa;
			tb_cd_conta_deb_provisao_w(i)   := r_c26_w.cd_conta_deb_taxa;
			tb_cd_historico_provisao_w(i)   := r_c26_w.cd_historico_taxa;
			tb_nr_seq_esquema_prov_w(i)     := r_c26_w.nr_seq_esquema_taxa;
			tb_vl_provisao_w(i)     := r_c26_w.vl_administracao;
			tb_nr_lote_contabil_prov_w(i)   := r_c26_w.nr_lote_contabil;
			tb_nm_usuario_w(i)     := r_c26_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c26_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c26_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_proc_contab_w(i)  := r_c26_w.nr_seq_pos_proc_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito, cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VTX', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				);
				commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then
			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito, cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'VTX', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i),  cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C26 para competência '||r_cComp_w.dt_ini);
			commit;

		  end if;

		  if  ((ie_lote_dif_fat_w = 'R') or (ie_lote_dif_fat_w = 'X' and ie_lote_ajuste_fat_w = 'R')) then

			insere_log_execucao('Início da execução do cursor C27 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c27_w in C27(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce(r_c27_w.ie_tipo_cobranca_conta, r_c27_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c27_w.dt_mes_competencia;
			elsif (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c27_w.dt_emissao;
			elsif (coalesce(r_c27_w.nr_titulo,0) = 0) then
			  tb_dt_mes_competencia_w(i) :=  coalesce(r_c27_w.dt_geracao_titulos, r_c27_w.dt_mes_competencia);
			else
			  tb_dt_mes_competencia_w(i) :=  r_c27_w.dt_emissao_titulo;
			end if;

			if (r_c27_w.ie_tipo_segurado in ('I','T', 'H')) then
			  tb_vl_provisao_w(i) := r_c27_w.vl_pag_fat_pos;
			else
			  tb_vl_provisao_w(i) := 0;
			end if;

			cd_estabelecimento_w(i)    := r_c27_w.cd_estabelecimento;
			tb_cd_classif_cred_provisao_w(i) := r_c27_w.cd_classif_cred_dif;
			tb_cd_classif_deb_provisao_w(i)  := r_c27_w.cd_classif_deb_dif;
			tb_cd_conta_cred_provisao_w(i)  := r_c27_w.cd_conta_cred_dif;
			tb_cd_conta_deb_provisao_w(i)   := r_c27_w.cd_conta_deb_dif;
			tb_cd_historico_provisao_w(i)   := r_c27_w.cd_historico_dif;
			tb_nr_seq_esquema_prov_w(i)     := r_c27_w.nr_seq_esquema_dif;
			tb_nr_lote_contabil_prov_w(i)   := r_c27_w.nr_lote_contabil;
			tb_nm_usuario_w(i)     := r_c27_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c27_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c27_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_mat_contab_w(i)  := r_c27_w.nr_seq_pos_mat_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'DIF', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then
			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito, cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'DIF', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C27 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C28 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c28_w in C28(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce(r_c28_w.ie_tipo_cobranca_conta, r_c28_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c28_w.dt_mes_competencia;
			elsif (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c28_w.dt_emissao;
			elsif (coalesce(r_c28_w.nr_titulo,0) = 0) then
			  tb_dt_mes_competencia_w(i) :=  coalesce(r_c28_w.dt_geracao_titulos, r_c28_w.dt_mes_competencia);
			else
			  tb_dt_mes_competencia_w(i) :=  r_c28_w.dt_emissao_titulo;
			end if;

			if (r_c28_w.ie_tipo_segurado in ('I','T','H')) then
			  tb_vl_provisao_w(i) := r_c28_w.vl_pag_fat_pos;
			else
			  tb_vl_provisao_w(i) := 0;
			end if;

			cd_estabelecimento_w(i)    := r_c28_w.cd_estabelecimento;
			tb_cd_classif_cred_provisao_w(i) := r_c28_w.cd_classif_cred_dif;
			tb_cd_classif_deb_provisao_w(i)  := r_c28_w.cd_classif_deb_dif;
			tb_cd_conta_cred_provisao_w(i)  := r_c28_w.cd_conta_cred_dif;
			tb_cd_conta_deb_provisao_w(i)   := r_c28_w.cd_conta_deb_dif;
			tb_cd_historico_provisao_w(i)   := r_c28_w.cd_historico_dif;
			tb_nr_seq_esquema_prov_w(i)     := r_c28_w.nr_seq_esquema_dif;
			tb_nr_lote_contabil_prov_w(i)   := r_c28_w.nr_lote_contabil;
			tb_nm_usuario_w(i)     := r_c28_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c28_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c28_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_proc_contab_w(i)  := r_c28_w.nr_seq_pos_proc_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito, cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'DIF', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then
			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito, cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'DIF', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C28 para competência '||r_cComp_w.dt_ini);
			commit;

		  end if;

		  if ( ie_lote_reembolso_fat_w in ('R', 'A')) then

			insere_log_execucao('Início da execução do cursor C29 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c29_w in C29(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce(r_c29_w.ie_tipo_cobranca_conta, r_c29_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c29_w.dt_mes_competencia;
			elsif (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c29_w.dt_emissao;
			elsif (coalesce(r_c29_w.nr_titulo,0) = 0) then
			  tb_dt_mes_competencia_w(i) :=  coalesce(r_c29_w.dt_geracao_titulos, r_c29_w.dt_mes_competencia);
			else
			  tb_dt_mes_competencia_w(i) :=  r_c29_w.dt_emissao_titulo;
			end if;

			cd_estabelecimento_w(i)    := r_c29_w.cd_estabelecimento;
			tb_vl_provisao_w(i)     := r_c29_w.vl_administracao;
			tb_cd_classif_cred_provisao_w(i) := r_c29_w.cd_classif_cred_ndc;
			tb_cd_classif_deb_provisao_w(i)  := r_c29_w.cd_classif_deb_ndc;
			tb_cd_conta_cred_provisao_w(i)  := r_c29_w.cd_conta_cred_ndc;
			tb_cd_conta_deb_provisao_w(i)   := r_c29_w.cd_conta_deb_ndc;
			tb_cd_historico_provisao_w(i)   := r_c29_w.cd_historico_ndc;
			tb_nr_seq_esquema_prov_w(i)     := r_c29_w.nr_seq_esquema_ndc;
			tb_nr_lote_contabil_prov_w(i)   := r_c29_w.nr_lote_contabil;
			tb_nm_usuario_w(i)     := r_c29_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c29_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c29_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_mat_contab_w(i)  := r_c29_w.nr_seq_pos_mat_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C29 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C30 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c30_w in C30(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce(r_c30_w.ie_tipo_cobranca_conta, r_c30_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c30_w.dt_mes_competencia;
			elsif (ie_data_rec_faturamento_w = 'MC') then
			  tb_dt_mes_competencia_w(i) := r_c30_w.dt_emissao;
			elsif (coalesce(r_c30_w.nr_titulo,0) = 0) then
			  tb_dt_mes_competencia_w(i) :=  coalesce(r_c30_w.dt_geracao_titulos, r_c30_w.dt_mes_competencia);
			else
			  tb_dt_mes_competencia_w(i) :=  r_c30_w.dt_emissao_titulo;
			end if;

			cd_estabelecimento_w(i)    := r_c30_w.cd_estabelecimento;
			tb_vl_provisao_w(i)     := r_c30_w.vl_administracao;
			tb_cd_classif_cred_provisao_w(i):= r_c30_w.cd_classif_cred_ndc;
			tb_cd_classif_deb_provisao_w(i)  := r_c30_w.cd_classif_deb_ndc;
			tb_cd_conta_cred_provisao_w(i)  := r_c30_w.cd_conta_cred_ndc;
			tb_cd_conta_deb_provisao_w(i)   := r_c30_w.cd_conta_deb_ndc;
			tb_cd_historico_provisao_w(i)   := r_c30_w.cd_historico_ndc;
			tb_nr_seq_esquema_prov_w(i)     := r_c30_w.nr_seq_esquema_ndc;
			tb_nr_lote_contabil_prov_w(i)   := r_c30_w.nr_lote_contabil;
			tb_nm_usuario_w(i)     := r_c30_w.nm_usuario;
			tb_seq_dados_contab_w(i)   := r_c30_w.nr_sequencia;
			tb_nr_seq_pos_estab_contab_w(i) := r_c30_w.nr_seq_pos_estab_contab;
			tb_nr_seq_pos_proc_contab_w(i)  := r_c30_w.nr_seq_pos_proc_contab;

			if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
				  )
				values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i) , cd_estabelecimento_w(i)
				);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;

			else
			  i := i + 1;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C30 para competência '||r_cComp_w.dt_ini);
			commit;

		  end if;

		  if ( ie_lote_reembolso_fat_w in ('R', 'A')) then

			insere_log_execucao('Início da execução do cursor C31 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c31_w in C31(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce( r_c31_w.ie_tipo_cobranca_conta, r_c31_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if ( r_c31_w.vl_administracao <> 0) then
			  if (ie_data_rec_faturamento_w = 'MC') then
				tb_dt_mes_competencia_w(i) := r_c31_w.dt_mes_competencia;
			  elsif (ie_data_rec_faturamento_w = 'MC') then
				tb_dt_mes_competencia_w(i) := r_c31_w.dt_emissao;
			  elsif (coalesce(r_c31_w.nr_titulo,0) = 0) then
				tb_dt_mes_competencia_w(i) :=  coalesce(r_c31_w.dt_geracao_titulos, r_c31_w.dt_mes_competencia);
			  else
				tb_dt_mes_competencia_w(i) :=  r_c31_w.dt_emissao_titulo;
			  end if;

			  cd_estabelecimento_w(i)    := r_c31_w.cd_estabelecimento;
			  tb_vl_provisao_w(i)     := r_c31_w.vl_administracao;
			  tb_cd_classif_cred_provisao_w(i):= r_c31_w.cd_classif_cred_provisao;
			  tb_cd_classif_deb_provisao_w(i)  := r_c31_w.cd_classif_deb_provisao;
			  tb_cd_conta_cred_provisao_w(i)  := r_c31_w.cd_conta_cred_provisao;
			  tb_cd_conta_deb_provisao_w(i)   := r_c31_w.cd_conta_deb_provisao;
			  tb_cd_historico_provisao_w(i)   := r_c31_w.cd_historico_ajuste;
			  tb_nr_seq_esquema_prov_w(i)     := r_c31_w.nr_seq_esquema_prov;
			  tb_nr_lote_contabil_prov_w(i)   := r_c31_w.nr_lote_contabil;
			  tb_nm_usuario_w(i)     := r_c31_w.nm_usuario;
			  tb_seq_dados_contab_w(i)   := r_c31_w.nr_sequencia;
			  tb_nr_seq_pos_estab_contab_w(i) := r_c31_w.nr_seq_pos_estab_contab;
			  tb_nr_seq_pos_mat_contab_w(i)  := r_c31_w.nr_seq_pos_mat_contab;

			  if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

				forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
				  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				  );
				commit;
				tb_cd_classif_cred_provisao_w.delete;
				tb_cd_classif_deb_provisao_w.delete;
				tb_cd_conta_cred_provisao_w.delete;
				tb_cd_conta_deb_provisao_w.delete;
				tb_cd_historico_provisao_w.delete;
				tb_nr_seq_esquema_prov_w.delete;
				tb_vl_provisao_w.delete;
				tb_nr_lote_contabil_prov_w.delete;
				tb_dt_mes_competencia_w.delete;
				tb_nm_usuario_w.delete;
				tb_seq_dados_contab_w.delete;
				tb_nr_seq_pos_estab_contab_w.delete;
				tb_nr_seq_pos_mat_contab_w.delete;
				cd_estabelecimento_w.delete;
				i := 0;

			  else
				i := i + 1;
			  end if;
			end if;


			  end if;

			end loop;

			if (tb_cd_classif_cred_provisao_w.count > 0) then

			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i),  tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), tb_nr_seq_pos_mat_contab_w(i), null,
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_mat_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

			insere_log_execucao('Final da execução do cursor C31 para competência '||r_cComp_w.dt_ini);
			commit;

			insere_log_execucao('Início da execução do cursor C32 para competência '||r_cComp_w.dt_ini);
			commit;

			i := 0;
			for r_c32_w in C32(r_cComp_w.dt_ini, r_cComp_w.dt_fim) loop

			  if  coalesce(coalesce(r_c32_w.ie_tipo_cobranca_conta, r_c32_w.ie_tipo_cobranca_item),'X') not in ('3','4') then

			if (r_c32_w.vl_administracao <> 0) then

			  if (ie_data_rec_faturamento_w = 'MC') then
				tb_dt_mes_competencia_w(i) := r_c32_w.dt_mes_competencia;
			  elsif (ie_data_rec_faturamento_w = 'MC') then
				tb_dt_mes_competencia_w(i) := r_c32_w.dt_emissao;
			  elsif (coalesce(r_c32_w.nr_titulo,0) = 0) then
				tb_dt_mes_competencia_w(i) :=  coalesce(r_c32_w.dt_geracao_titulos, r_c32_w.dt_mes_competencia);
			  else
				tb_dt_mes_competencia_w(i) :=  r_c32_w.dt_emissao_titulo;
			  end if;

			  cd_estabelecimento_w(i)    := r_c32_w.cd_estabelecimento;
			  tb_vl_provisao_w(i)     := r_c32_w.vl_administracao;
			  tb_cd_classif_cred_provisao_w(i):= r_c32_w.cd_classif_cred_provisao;
			  tb_cd_classif_deb_provisao_w(i)  := r_c32_w.cd_classif_deb_provisao;
			  tb_cd_conta_cred_provisao_w(i)  := r_c32_w.cd_conta_cred_provisao;
			  tb_cd_conta_deb_provisao_w(i)   := r_c32_w.cd_conta_deb_provisao;
			  tb_cd_historico_provisao_w(i)   := r_c32_w.cd_historico_ajuste;
			  tb_nr_seq_esquema_prov_w(i)     := r_c32_w.nr_seq_esquema_prov;
			  tb_nr_lote_contabil_prov_w(i)   := r_c32_w.nr_lote_contabil;
			  tb_nm_usuario_w(i)     := r_c32_w.nm_usuario;
			  tb_seq_dados_contab_w(i)   := r_c32_w.nr_sequencia;
			  tb_nr_seq_pos_estab_contab_w(i) := r_c32_w.nr_seq_pos_estab_contab;
			  tb_nr_seq_pos_proc_contab_w(i)  := r_c32_w.nr_seq_pos_proc_contab;

			  if ( i > pls_util_cta_pck.qt_registro_transacao_w) then

				forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
				  insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				  cd_conta_debito,  cd_historico,
				  dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				  ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				  nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				  nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				  nr_sequencia, vl_contabil, cd_estabelecimento
				)
				  values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				  tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				  clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				  'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				  tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				  tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				  tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
				  );
				commit;
				tb_cd_classif_cred_provisao_w.delete;
				tb_cd_classif_deb_provisao_w.delete;
				tb_cd_conta_cred_provisao_w.delete;
				tb_cd_conta_deb_provisao_w.delete;
				tb_cd_historico_provisao_w.delete;
				tb_nr_seq_esquema_prov_w.delete;
				tb_vl_provisao_w.delete;
				tb_nr_lote_contabil_prov_w.delete;
				tb_dt_mes_competencia_w.delete;
				tb_nm_usuario_w.delete;
				tb_seq_dados_contab_w.delete;
				tb_nr_seq_pos_estab_contab_w.delete;
				tb_nr_seq_pos_proc_contab_w.delete;
				cd_estabelecimento_w.delete;
				i := 0;

			  else
				i := i + 1;
			  end if;
			end if;

			  end if;

			end loop;

			insere_log_execucao('Final da execução do cursor C32 para competência '||r_cComp_w.dt_ini);
			commit;

			if (tb_cd_classif_cred_provisao_w.count > 0) then
			  forall i in tb_cd_classif_cred_provisao_w.first..tb_cd_classif_cred_provisao_w.last
			insert into pls_pos_estab_dados_contab(  cd_classif_credito , cd_classif_debito, cd_conta_credito,
				cd_conta_debito,  cd_historico,
				dt_atualizacao, dt_atualizacao_nrec, dt_contabil,
				ie_tipo_movto, nm_usuario, nm_usuario_nrec,
				nr_lote_contabil, nr_lote_contabil_prov, nr_seq_esquema,
				nr_seq_pos_estab_contab, nr_seq_pos_mat_contab, nr_seq_pos_proc_contab,
				nr_sequencia, vl_contabil, cd_estabelecimento
			  )
			values (  tb_cd_classif_cred_provisao_w(i), tb_cd_classif_deb_provisao_w(i), tb_cd_conta_cred_provisao_w(i),
				tb_cd_conta_deb_provisao_w(i), tb_cd_historico_provisao_w(i),
				clock_timestamp(), clock_timestamp(), tb_dt_mes_competencia_w(i),
				'NDR', tb_nm_usuario_w(i), tb_nm_usuario_w(i),
				tb_nr_lote_contabil_prov_w(i), tb_nr_lote_contabil_prov_w(i), tb_nr_seq_esquema_prov_w(i),
				tb_nr_seq_pos_estab_contab_w(i), null, tb_nr_seq_pos_proc_contab_w(i),
				tb_seq_dados_contab_w(i), tb_vl_provisao_w(i), cd_estabelecimento_w(i)
			);
			  commit;
			  tb_cd_classif_cred_provisao_w.delete;
			  tb_cd_classif_deb_provisao_w.delete;
			  tb_cd_conta_cred_provisao_w.delete;
			  tb_cd_conta_deb_provisao_w.delete;
			  tb_cd_historico_provisao_w.delete;
			  tb_nr_seq_esquema_prov_w.delete;
			  tb_vl_provisao_w.delete;
			  tb_nr_lote_contabil_prov_w.delete;
			  tb_dt_mes_competencia_w.delete;
			  tb_nm_usuario_w.delete;
			  tb_seq_dados_contab_w.delete;
			  tb_nr_seq_pos_estab_contab_w.delete;
			  tb_nr_seq_pos_proc_contab_w.delete;
			  cd_estabelecimento_w.delete;
			  i := 0;
			end if;

		  end if;

			insere_log_execucao('Final da execução da competência '||r_cComp_w.dt_ini);
			commit;
			
		exception
		  when others then

			ds_mensagem_erro_w := 'DS_ERRO='||SQLSTATE||' - '||sqlerrm;
			insere_log_execucao(ds_mensagem_erro_w);
			--wheb_mensagem_pck.exibir_mensagem_abort( 1041689,ds_mensagem_erro_w);


			-- fecha os cursores todos, para repetir o ciclo
			if (C00%isopen) then
				close C00;
			end if;

			if (C01%isopen) then
				close C01;
			end if;

			if (c02%isopen) then
				close c02;
			end if;

			if (C03%isopen) then
				close C03;
			end if;

			if (C04%isopen) then
				close C04;
			end if;

			if (C05%isopen) then
				close C05;
			end if;

			if (C06%isopen) then
				close C06;
			end if;

			if (C07%isopen) then
				close C07;
			end if;

			if (C06_1%isopen) then
				close C06_1;
			end if;

			if (C07_1%isopen) then
				close C07_1;
			end if;

			if (C08%isopen) then
				close C08;
			end if;

			if (C09%isopen) then
				close C09;
			end if;

			if (C10%isopen) then
				close C10;
			end if;

			if (C11%isopen) then
				close C11;
			end if;

			if (C12%isopen) then
				close C12;
			end if;

			if (C13%isopen) then
				close C13;
			end if;

			if (C14%isopen) then
				close C14;
			end if;

			if (C15%isopen) then
				close C15;
			end if;

			if (C16%isopen) then
				close C16;
			end if;

			if (C17%isopen) then
				close C17;
			end if;
			
			if (C18%isopen) then
				close C18;
			end if;

			if (C19%isopen) then
				close C19;
			end if;

			if (C20%isopen) then
				close C20;
			end if;

			if (C21%isopen) then
				close C21;
			end if;

			if (C22%isopen) then
				close C22;
			end if;
			
			if (C23%isopen) then
				close C23;
			end if;
			
			if (C24%isopen) then
				close C24;
			end if;
			
			if (C25%isopen) then
				close C25;
			end if;
			
			if (C26%isopen) then
				close C26;
			end if;
			
			if (C27%isopen) then
				close C27;
			end if;
			
			if (C28%isopen) then
				close C28;
			end if;
						
			if (C29%isopen) then
				close C29;
			end if;
			
			if (C30%isopen) then
				close C30;
			end if;
			
			if (C31%isopen) then
				close C31;
			end if;
			
			if (C32%isopen) then
				close C32;
			end if;
		end;

	end loop;

	insere_log_execucao('Final da execução do processo de migração.');
	commit;

  commit;

  exception
  when others then
	ds_mensagem_erro_w := 'DS_ERRO='||SQLSTATE||' - '||sqlerrm;
	insere_log_execucao(ds_mensagem_erro_w);
	CALL wheb_mensagem_pck.exibir_mensagem_abort( 1041689,ds_mensagem_erro_w);

  end;

end if;

end;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE insere_pos_proc ( result_cursor_p INOUT table_dados_proc_persistir, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

