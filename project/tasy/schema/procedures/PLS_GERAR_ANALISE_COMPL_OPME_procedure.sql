-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_analise_compl_opme ( nr_seq_analise_p pls_auditoria.nr_sequencia%type, ie_status_p pls_auditoria.ie_status%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ds_historico_p pls_requisicao_historico.ds_historico%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE

		 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: Colocar a requisição para ficar Aguardando complemento OPME/ 
	Caso a requisição esteja Aguardando complemento OPME, retorna para Análise o status da requisição. 
	Inserir historico na análise 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[X] Objetos do dicionário [X] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
	 
ds_email_envio_w		varchar(4000);
ds_email_w			varchar(255);
ds_email_origem_w		varchar(255);
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
	

BEGIN 
 
if (ie_status_p = 'ACO') then 
	update	pls_auditoria 
	set	ie_status	= 'A', 
		dt_atualizacao	= clock_timestamp(), 
		nm_usuario	= nm_usuario_p 
	where	nr_sequencia	= nr_seq_analise_p;
	 
	--Gerar histórico, informando que a requisição não está mais sendo enviada para complemento de OPME 
	CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_p, 
								'RCO', 
								ds_historico_p, 
								null, 
								nm_usuario_p);	
elsif (ie_status_p <> 'ACO') then	 
	update	pls_auditoria 
	set		ie_status		= 'ACO', 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
	where	nr_sequencia	= nr_seq_analise_p;
	 
	--Gerar histórico, informando que a requisição está sendo enviada para complemento de OPME 
	CALL pls_requisicao_gravar_hist(	nr_seq_requisicao_p, 
					'SCO', 
					ds_historico_p, 
					null, 
					nm_usuario_p);	
 
 
	begin 
	if (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
		begin 
		if (pls_obter_se_controle_estab('RE') = 'S') then 
			select	a.ds_email_envio, 
				b.ds_email, 
				b.nr_seq_prestador 
			into STRICT	ds_email_envio_w, 
				ds_email_w, 
				nr_seq_prestador_w 
			from	pls_regra_compl_anexo_opme	a, 
				pls_regra_prest_anexo_opme	b, 
				pls_requisicao			c, 
				pls_auditoria			d 
			where	b.nr_seq_regra_compl_opme	=	a.nr_sequencia 
			and	c.nr_seq_prestador_exec		=	b.nr_seq_prestador 
			and	d.nr_seq_requisicao		=	c.nr_sequencia 
			and	d.nr_seq_requisicao		=	nr_seq_requisicao_p 
			and	c.dt_requisicao	between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp()) 
			and (a.cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento)  LIMIT 1;
		else 
			select	a.ds_email_envio, 
				b.ds_email, 
				b.nr_seq_prestador 
			into STRICT	ds_email_envio_w, 
				ds_email_w, 
				nr_seq_prestador_w 
			from	pls_regra_compl_anexo_opme	a, 
				pls_regra_prest_anexo_opme	b, 
				pls_requisicao			c, 
				pls_auditoria			d 
			where	b.nr_seq_regra_compl_opme	=	a.nr_sequencia 
			and	c.nr_seq_prestador_exec		=	b.nr_seq_prestador 
			and	d.nr_seq_requisicao		=	c.nr_sequencia 
			and	d.nr_seq_requisicao		=	nr_seq_requisicao_p 
			and	c.dt_requisicao	between coalesce(a.dt_inicio_vigencia,clock_timestamp()) and coalesce(a.dt_fim_vigencia,clock_timestamp())  LIMIT 1;
		end if;
 
		select	max(ds_email) 
		into STRICT	ds_email_origem_w 
		from	usuario 
		where	nm_usuario = nm_usuario_p;
 
		if (coalesce(ds_email_w::text, '') = '') then 
			ds_email_w := substr(pls_obter_dados_prest_end(nr_seq_prestador_w, '', null,'EM'),1,255);
		end if;
		 
		if (ds_email_envio_w IS NOT NULL AND ds_email_envio_w::text <> '') and (ds_email_w IS NOT NULL AND ds_email_w::text <> '') then			 
			CALL enviar_email('Internação com solicitação de OPME', ds_email_envio_w, ds_email_origem_w, ds_email_w, nm_usuario_p,'M');
		end if;
		end;
	end if;
	end;	
						 
end if;	
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_analise_compl_opme ( nr_seq_analise_p pls_auditoria.nr_sequencia%type, ie_status_p pls_auditoria.ie_status%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, ds_historico_p pls_requisicao_historico.ds_historico%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

