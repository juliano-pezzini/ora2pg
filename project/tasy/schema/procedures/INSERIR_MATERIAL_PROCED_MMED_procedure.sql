-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_material_proced_mmed ( nr_acesso_dicom_p bigint,/* - nr_acession_number */
 cd_material_p bigint,/*N6 - codigo material */
 qt_material_p bigint,/*N9,3 - quantidade */
 nm_usuario_p text,/*V15 - ds_login */
 ds_erro_p INOUT text) AS $body$
DECLARE

/*objeto chamada no integração da multimed, os novos parâmetros que forem adicionados devem ser definidos como default para não ocorrer problemas na integração*/

cd_setor_atendimento_w	bigint;
nr_atendimento_w	bigint;
cd_local_estoque_w	smallint;
nr_seq_atepacu_w	bigint;
dt_entrada_unidade_w	timestamp;
nr_seq_mat_atend_w	bigint;
nr_prescricao_w		bigint;
cd_unidade_medida_w	varchar(30);
nr_interno_conta_w	bigint;
nr_seq_prescricao_w	bigint;
cd_estabelecimento_w	bigint;
cd_categoria_w		varchar(10);
dt_entrada_w		timestamp;
nr_doc_convenio_w	varchar(20);
cd_senha_w		varchar(20);
dt_alta_w		timestamp;
cd_convenio_w		bigint;

dt_acerto_conta_w  	timestamp;
cd_convenio_calculo_w   integer;
cd_categoria_calculo_w	varchar(10);
qt_conta_w		bigint;

ds_erro_w		varchar(255);
ds_log_w		varchar(255);
dt_prescricao_w		timestamp;
nr_seq_interno_w	bigint;


BEGIN

select	max(b.cd_setor_atendimento),
	max(c.nr_atendimento),
	max(a.cd_local_estoque),
	max(c.nr_prescricao),
	max(b.nr_sequencia),
	max(c.cd_estabelecimento),
	max(c.dt_prescricao)
into STRICT	cd_setor_atendimento_w,
	nr_atendimento_w,
	cd_local_estoque_w,
	nr_prescricao_w,
	nr_seq_prescricao_w,
	cd_estabelecimento_w,
	dt_prescricao_w
from	prescr_medica c,
	prescr_procedimento b,
	setor_atendimento a
Where	b.nr_prescricao		= c.nr_prescricao
and	a.cd_setor_atendimento	= c.cd_setor_atendimento
AND	nr_acesso_dicom		= nr_acesso_dicom_p;

select	coalesce(max(nr_seq_interno),0),
	max(dt_entrada_unidade)
into STRICT	nr_seq_atepacu_w,
	dt_entrada_unidade_w
from	atend_paciente_unidade
where	nr_atendimento		= nr_atendimento_w
and	cd_setor_atendimento	= cd_setor_atendimento_w;

if (coalesce(dt_entrada_unidade_w::text, '') = '') then

	dt_entrada_unidade_w	:=	dt_prescricao_w;

	begin
	select	max(nr_seq_interno)
	into STRICT	nr_seq_interno_w
	from 	atend_paciente_unidade
	where 	cd_setor_atendimento	= cd_setor_atendimento_w
	and	nr_atendimento 		= nr_atendimento_w
	and	dt_entrada_unidade_w between dt_entrada_unidade and coalesce(dt_saida_unidade, clock_timestamp());
	exception
	when others then
		nr_seq_interno_w := 0;
	end;

	if (coalesce(nr_seq_interno_w,0) = 0) then
		CALL gerar_passagem_setor_atend(nr_atendimento_w, cd_setor_atendimento_w, dt_entrada_unidade_w, 'N', nm_usuario_p);

		select	max(nr_seq_interno)
		into STRICT	nr_seq_interno_w
		from	atend_paciente_unidade
		where	nr_atendimento 			= nr_atendimento_w
		and	cd_setor_atendimento		= cd_setor_atendimento_w
		and	trunc(dt_entrada_unidade,'dd')	= trunc(dt_entrada_unidade_w,'dd');

	end if;

	select	max(dt_entrada_unidade)
	into STRICT	dt_entrada_unidade_w
	from	atend_paciente_unidade
	where	nr_seq_interno = nr_seq_interno_w;

	nr_seq_atepacu_w	:=	nr_seq_interno_w;

end if;


select	nextval('material_atend_paciente_seq')
into STRICT	nr_seq_mat_atend_w
;

select	max(cd_unidade_medida_consumo)
into STRICT	cd_unidade_medida_w
from	material
where	cd_material = cd_material_p;

ds_erro_w := null;


if (qt_material_p < 0) then

	select	count(*)
	into STRICT	qt_conta_w
	from	material_atend_paciente x
	where	x.nr_prescricao 	= nr_prescricao_w
	and	x.nr_Sequencia_prescricao = nr_seq_prescricao_w
	and	x.cd_material 		= cd_material_p;


	if (qt_conta_w > 0) then

		select	max(a.nr_interno_conta)
		into STRICT	nr_interno_conta_w
		from	conta_paciente a
		where	a.nr_atendimento = nr_atendimento_w
		and	a.ie_status_acerto = 1
		and	exists (SELECT	1
				from	material_atend_paciente x
				where	a.nr_atendimento = x.nr_atendimento
				and	a.nr_interno_conta = x.nr_interno_conta
				and	x.nr_prescricao = nr_prescricao_w
				and	x.nr_Sequencia_prescricao = nr_seq_prescricao_w
				and	x.cd_material = cd_material_p);

	else

		ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(280383,null);

	end if;

else

	select	max(a.nr_interno_conta)
	into STRICT	nr_interno_conta_w
	from	conta_paciente a
	where	a.nr_atendimento = nr_atendimento_w
	and	a.ie_status_acerto = 1;






end if;



/*Obter nova conta*/

if (coalesce(nr_interno_conta_w::text, '') = '') then


	select 	coalesce(max(cd_convenio),0),
		max(cd_categoria),
		max(nr_doc_convenio),
		max(cd_senha)
	into STRICT 	cd_convenio_w,
		cd_categoria_w,
		nr_doc_convenio_w,
		cd_senha_w
	from 	atend_categoria_convenio a
	where 	a.nr_atendimento	= nr_atendimento_w
	and 	a.dt_inicio_vigencia	= 	(SELECT max(dt_inicio_vigencia)
						from 	atend_categoria_convenio b
						where 	nr_atendimento	= nr_atendimento_w);



	select	max(dt_entrada),
		max(dt_alta)
	into STRICT	dt_entrada_w,
		dt_alta_w
	from	atendimento_paciente
	where	nr_atendimento = nr_atendimento_w;


	select	CASE WHEN obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_w, 'IE_DOC_CONVENIO')='N' THEN  null WHEN obter_valor_conv_estab(cd_convenio_w, cd_estabelecimento_w, 'IE_DOC_CONVENIO')='S' THEN  coalesce(cd_senha_w, nr_doc_convenio_w)  ELSE nr_doc_convenio_w END
	into STRICT	nr_doc_convenio_w
	;




	SELECT * FROM obter_conta_paciente(
			cd_estabelecimento_w, nr_atendimento_w, cd_convenio_w, cd_categoria_w, nm_usuario_p, clock_timestamp(), dt_entrada_w, dt_alta_w, nr_doc_convenio_w, cd_setor_atendimento_w, null, dt_acerto_conta_w,    	-- out
			nr_interno_conta_w, 	-- out
			cd_convenio_calculo_w, 	-- out
			cd_categoria_calculo_w  -- out
			) INTO STRICT dt_acerto_conta_w, 
			nr_interno_conta_w, 
			cd_convenio_calculo_w, 
			cd_categoria_calculo_w
			;


	if (coalesce(nr_interno_conta_w::text, '') = '')	then
		ds_erro_w := WHEB_MENSAGEM_PCK.get_texto(280385,null);
	end if;

end if;




if (coalesce(ds_erro_w::text, '') = '')	then



	begin

	CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('N');


	insert	into material_atend_paciente(nr_sequencia,
					nr_atendimento,
					dt_entrada_unidade,
					dt_atendimento,
					cd_unidade_medida,
					qt_material,
					dt_atualizacao,
					nm_usuario,
					cd_acao,
					cd_setor_atendimento,
					nr_seq_atepacu,
					cd_material,
					nr_prescricao,
					cd_local_estoque,
					nr_interno_conta,
					nr_sequencia_prescricao)
				values (nr_seq_mat_atend_w,
					nr_atendimento_w,
					dt_entrada_unidade_w,
					clock_timestamp(),
					cd_unidade_medida_w,
					qt_material_p,
					clock_timestamp(),
					nm_usuario_p,
					1,
					cd_setor_atendimento_w,
					nr_seq_atepacu_w,
					cd_material_p,
					nr_prescricao_w,
					cd_local_estoque_w,
					nr_interno_conta_w,
					null);



	CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('S');


	exception
		when others then
		CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('S');
		ds_erro_w  := ds_erro_w  || sqlerrm;
	end;

	CALL Atualiza_Preco_Material(nr_seq_mat_atend_w, nm_usuario_p);



end if;


ds_erro_p := ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_material_proced_mmed ( nr_acesso_dicom_p bigint, cd_material_p bigint, qt_material_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

