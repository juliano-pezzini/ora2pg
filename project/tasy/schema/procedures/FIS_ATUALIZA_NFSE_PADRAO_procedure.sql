-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_atualiza_nfse_padrao ( nr_nfe_imp_p text, cd_verificacao_nfse_p text, dt_emissao_nfe_p text, cd_serie_nf_p text, nr_nota_fiscal_p text, cd_cgc_emitente_p text, ds_link_rps_p text, nr_seq_transmissao_p bigint) AS $body$
DECLARE
				

dt_emissao_nfe_aux_w	varchar(50);
dt_emissao_nfe_w		timestamp;
ie_situacao_w			varchar(1);
dt_emissao_rps_w		timestamp;
cd_interno_w			nota_fiscal.cd_serie_nf%type;
nr_seq_lote_nfe_w		nota_fiscal_lote_nfe.nr_sequencia%type;
nr_seq_nota_w			nota_fiscal.nr_sequencia%type;
nr_nota_fiscal_w		nota_fiscal.nr_nota_fiscal%type;
nr_sequencia_w			nota_fiscal.nr_sequencia%type;
cd_cgc_emitente_w		nota_fiscal.cd_cgc_emitente%type;
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_seq_lote_w			nfe_transmissao.nr_seq_lote%type;


c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_nota_fiscal,
	a.cd_cgc_emitente,
	a.cd_serie_nf
from 	nota_fiscal_lote_nfe l,
	nfe_transmissao_nf n,
	nfe_transmissao t,
	nota_fiscal a
where	l.nr_seq_transmissao = t.nr_sequencia
and	t.nr_sequencia	= n.nr_seq_transmissao
and	a.nr_sequencia = n.nr_seq_nota_fiscal
and	l.nr_sequencia = nr_seq_lote_w;


BEGIN

select	nr_seq_lote
into STRICT 	nr_seq_lote_w
from	nfe_transmissao
where 	nr_sequencia	= nr_seq_transmissao_p;

open C01;
	loop
	fetch C01 into
		nr_sequencia_w,
		nr_nota_fiscal_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin					
			if (nr_nota_fiscal_w = nr_nota_fiscal_p and cd_cgc_emitente_p = cd_cgc_emitente_w
			and cd_serie_nf_w = cd_serie_nf_p) then
				begin
					nr_seq_nota_w := nr_sequencia_w;
				end;
			end if;
		end;
	end loop;
close C01;

if (dt_emissao_nfe_p IS NOT NULL AND dt_emissao_nfe_p::text <> '') then
	begin
	dt_emissao_nfe_aux_w := dt_emissao_nfe_p;
	dt_emissao_nfe_w     := replace(dt_emissao_nfe_aux_w, 'T', ' ');

	exception when others then
		begin
		
		if (length(trim(both dt_emissao_nfe_aux_w)) > 19) then
			begin
			dt_emissao_nfe_aux_w := substr(dt_emissao_nfe_aux_w,1,19);
			end;
		end if;	
		
		dt_emissao_nfe_w		:= to_date(replace(dt_emissao_nfe_aux_w, 'T', ' '), 'yyyy-mm-dd hh24:mi:ss');
		exception when others then
			begin
			dt_emissao_nfe_w	:= to_date(replace(dt_emissao_nfe_aux_w, 'T', ' '), 'dd-mm-yyyy hh24:mi:ss');
			exception when others then
			--Não foi possível converter a data de emissão enviada no arquivo:
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(186114,'DT_EMISSAO_NFE=' || dt_emissao_nfe_aux_w);
			end;
		end;


	end;
end if;


update	nota_fiscal
set 	nr_nfe_imp		=  nr_nfe_imp_p,
	cd_verificacao_nfse 	= cd_verificacao_nfse_p,
	dt_emissao_nfe		= dt_emissao_nfe_w
where	nr_sequencia		= nr_seq_nota_w;

if (ds_link_rps_p <> 'X') then	
	update	nota_fiscal
	set 	ds_link_rps	= ds_link_rps_p
	where	nr_sequencia	= nr_seq_nota_w;

end if;

commit;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_atualiza_nfse_padrao ( nr_nfe_imp_p text, cd_verificacao_nfse_p text, dt_emissao_nfe_p text, cd_serie_nf_p text, nr_nota_fiscal_p text, cd_cgc_emitente_p text, ds_link_rps_p text, nr_seq_transmissao_p bigint) FROM PUBLIC;

