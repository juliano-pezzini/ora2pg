-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_titulo_rec_cobranca ( nr_seq_cobranca_p bigint, nr_titulo_p bigint, nm_usuario_p text, cd_banco_p bigint, vl_acrescimo_p bigint, vl_desconto_p bigint, qt_dias_instrucao_p bigint, cd_ocorrencia_p text) AS $body$
DECLARE


cd_banco_w			banco_estabelecimento.cd_banco%type;
cd_agencia_bancaria_w		varchar(08);
nr_conta_w			varchar(20);
ie_digito_conta_w		varchar(02);
cd_camara_compensacao_w		smallint;
cd_moeda_w			integer;
cd_estabelecimento_W		smallint;
ie_retorno_w			integer := 1;
ie_separa_carteira_w		varchar(1) := 'N';
ie_tipo_carteira_w		varchar(5) := null;
ie_desc_previsto_w		varchar(1);
nr_seq_empresa_w		bigint;
vl_saldo_titulo_w		double precision;
nr_seq_mensalidade_w		bigint;
nr_seq_motivo_desc_w		bigint;
cd_centro_custo_desc_w		bigint;
cd_pessoa_fisica_desc_w		varchar(10);
cd_cgc_desc_w			varchar(14);
ie_situacao_w			varchar(255);
ie_permite_liquidado_w		varchar(255);
nr_seq_tit_rec_cobr_w		bigint;
ie_juros_multa_w		varchar(1);

/* Campos para geracao de arquivo de instrucao */
ie_remessa_retorno_w		varchar(1);
vl_cobranca_w			double precision;
vl_desc_previsto_w		double precision;
vl_desconto_w			double precision;
vl_acrescimo_w			double precision;
vl_despesa_bancaria_w		double precision;
qt_titulos_w			bigint;
ie_tipo_titulo_w		varchar(2);
vl_liquidacao_w			double precision	:= 0;

cd_pessoa_fisica_w		varchar(10);
cd_cgc_w			varchar(14);
nm_pessoa_w			varchar(80);
vl_titulo_w			double precision;
nr_documento_w			varchar(30);
ds_estabelecimento_w		varchar(255);

c01 CURSOR FOR
	SELECT	cd_banco,
		cd_agencia_bancaria,
		nr_conta,
		nr_digito_conta,
		cd_camara_compensacao
	from 	pessoa_fisica_conta
	where	cd_pessoa_fisica 	=
		(SELECT cd_pessoa_fisica
		from 	titulo_receber
		where 	nr_titulo 	= nr_titulo_p)
	
union

	select	cd_banco,
		cd_agencia_bancaria,
		nr_conta,
		nr_digito_conta,
		cd_camara_compensacao
	from 	pessoa_juridica_conta
	where	cd_cgc 	=
		(select cd_cgc
		from 	titulo_receber
		where 	nr_titulo 	= nr_titulo_p);


BEGIN

select	max(cd_estabelecimento),
	coalesce(max(ie_separa_carteira),'N'),
	max(nr_seq_empresa),
	coalesce(max(ie_remessa_retorno),'R')
into STRICT	cd_estabelecimento_w,
	ie_separa_carteira_w,
	nr_seq_empresa_w,
	ie_remessa_retorno_w
from	cobranca_escritural
where	nr_sequencia	= nr_seq_cobranca_p;

begin
select	cd_moeda_padrao
into STRICT	cd_moeda_w
from 	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_w;
exception when no_data_found then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(238485); /*Nao foi encontrada a informacao da Moeda padrao no
cadastro dos Parametros do contas a receber.*/
end;

begin

select	b.cd_banco,
	b.cd_agencia_bancaria,
	b.cd_conta,
	b.ie_digito_conta,
	vl_desc_previsto,
	a.vl_saldo_titulo,
	a.nr_seq_mensalidade,
	a.ie_tipo_titulo,
	a.vl_titulo,
	a.cd_pessoa_fisica,
	a.cd_cgc,
	a.nr_documento,
	substr(obter_nome_pf_pj(a.cd_pessoa_fisica, a.cd_cgc),1,80),
	substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80)
into STRICT	cd_banco_w,
	cd_agencia_bancaria_w,
	nr_conta_w,
	ie_digito_conta_w,
	vl_desconto_w,
	vl_saldo_titulo_w,
	nr_seq_mensalidade_w,
	ie_tipo_titulo_w,
	vl_titulo_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	nr_documento_w,
	nm_pessoa_w,
	ds_estabelecimento_w
from	titulo_receber a,
	banco_estabelecimento b
where	a.nr_seq_conta_banco	= b.nr_sequencia
and	a.nr_titulo		= nr_titulo_p;
exception when others then
		ie_retorno_w	:= 0;
end;

ie_desc_previsto_w := obter_param_usuario(815, 9, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_desc_previsto_w);
ie_juros_multa_w := obter_param_usuario(815, 16, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_juros_multa_w);
ie_permite_liquidado_w := obter_param_usuario(815, 18, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_permite_liquidado_w);

if (ie_retorno_w = 0) then
	OPEN C01;
	LOOP
		FETCH C01 into
			cd_banco_w,
			cd_agencia_bancaria_w,
			nr_conta_w,
			ie_digito_conta_w,
			cd_camara_compensacao_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			cd_banco_w	:= cd_banco_w;
	END LOOP;
	CLOSE C01;
end if;

if (ie_separa_carteira_w = 'S') then
	ie_tipo_carteira_w	:= obter_tipo_carteira_regra(nr_titulo_p);

	if (coalesce(ie_tipo_carteira_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(238484,'NR_TITULO_P=' || nr_titulo_p);
		/*Nao foi possivel identificar o tipo de carteira do titulo ' || nr_titulo_p || '.' 
						'Verifique as regras em Cadastros Gerais/Aplicacao Principal/Contas a Receber/Regra definicao tipo carteira cobranca.*/
	else
		update	titulo_receber
		set	ie_tipo_carteira	= ie_tipo_carteira_w
		where	nr_titulo		= nr_titulo_p;
	end if;
end if;

if (nr_seq_empresa_w IS NOT NULL AND nr_seq_empresa_w::text <> '') then
	update	titulo_receber
	set	nr_seq_empresa		= nr_seq_empresa_w
	where	nr_titulo		= nr_titulo_p;
end if;

if (ie_remessa_retorno_w = 'I') then

	select	count(*)
	into STRICT	qt_titulos_w
	from	titulo_receber_cobr
	where	nr_titulo = nr_titulo_p;

	if (qt_titulos_w > 0) then
		select	vl_cobranca,
			cd_banco,
			cd_agencia_bancaria,
			nr_conta,
			cd_moeda,
			ie_digito_conta,
			cd_camara_compensacao,
			coalesce(vl_desconto_w,vl_desconto),
			vl_acrescimo,
			vl_despesa_bancaria,
			vl_desc_previsto,
			nr_seq_mensalidade,
			nr_seq_motivo_desc,
			cd_centro_custo_desc
		into STRICT	vl_cobranca_w,
			cd_banco_w,
			cd_agencia_bancaria_w,
			nr_conta_w,
			cd_moeda_w,
			ie_digito_conta_w,
			cd_camara_compensacao_w,
			vl_desconto_w,
			vl_acrescimo_w,
			vl_despesa_bancaria_w,
			vl_desc_previsto_w,
			nr_seq_mensalidade_w,
			nr_seq_motivo_desc_w,
			cd_centro_custo_desc_w
		from	titulo_receber_cobr
		where	nr_titulo = nr_titulo_p
		and	nr_sequencia = (SELECT	max(nr_sequencia)
					from	titulo_receber_cobr
					where	nr_titulo = nr_titulo_p);

		if (coalesce(ie_permite_liquidado_w, 'S') = 'N') then
			select	max(ie_situacao)
			into STRICT	ie_situacao_w
			from	titulo_receber
			where	nr_titulo	= nr_titulo_p;
			if (ie_situacao_w in ('2','4','6')) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(238483);
				/*Este titulo ja esta liquidado!*/

			end if;
		end if;

		select	nextval('titulo_receber_cobr_seq')
		into STRICT	nr_seq_tit_rec_cobr_w
		;

		insert	into	titulo_receber_cobr(nr_seq_cobranca,
			nr_titulo,
			vl_cobranca,
			dt_atualizacao,
			nm_usuario,
			cd_banco,
			cd_agencia_bancaria,
			nr_conta,
			cd_moeda,
			ie_digito_conta,
			cd_camara_compensacao,
			vl_desconto,
			vl_acrescimo,
			nr_sequencia,
			vl_despesa_bancaria,
			vl_desc_previsto,
			vl_saldo_inclusao,
			nr_seq_motivo_desc,
			cd_centro_custo_desc,
			qt_dias_instrucao,
			cd_ocorrencia)
		values (nr_seq_cobranca_p,
			nr_titulo_p,
			vl_cobranca_w,
			clock_timestamp(),
			nm_usuario_p,
			coalesce(cd_banco_p,cd_banco_w),
			cd_agencia_bancaria_w,
			nr_conta_w,
			cd_moeda_w,
			ie_digito_conta_w,
			cd_camara_compensacao_w,
			coalesce(vl_desconto_p,coalesce(vl_desconto_w,0) + coalesce((obter_dados_titulo_receber(nr_titulo_p,'VNC'))::numeric ,0)),
			coalesce(vl_acrescimo_p,vl_acrescimo_w),
			nr_seq_tit_rec_cobr_w,
			0,
			coalesce(vl_desc_previsto_w,0),
			vl_saldo_titulo_w,
			nr_seq_motivo_desc_w,
			cd_centro_custo_desc_w,
			qt_dias_instrucao_p,
			cd_ocorrencia_p);

		insert	into titulo_rec_cobr_desc(cd_cgc,
			cd_pessoa_fisica,
			dt_atualizacao,
			nm_usuario,
			nr_seq_tit_rec_cobr,
			nr_sequencia)
		(SELECT	a.cd_cgc,
			a.cd_pessoa_fisica,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_tit_rec_cobr_w,
			nextval('titulo_rec_cobr_desc_seq')
		from	titulo_rec_cobr_desc a
		where	a.nr_seq_tit_rec_cobr =	(select	max(x.nr_sequencia)
						from	titulo_receber_cobr x
						where	x.nr_titulo = nr_titulo_p));
	end if;
else

	select	max(a.cd_centro_custo),
		max(a.nr_seq_motivo_desc),
		max(a.cd_pessoa_fisica),
		max(a.cd_cgc)
	into STRICT	cd_centro_custo_desc_w,
		nr_seq_motivo_desc_w,
		cd_pessoa_fisica_desc_w,
		cd_cgc_desc_w
	from	titulo_receber_liq_desc a
	where	a.nr_titulo	= nr_titulo_p
	and	coalesce(a.nr_bordero::text, '') = ''
	and	coalesce(a.nr_seq_liq::text, '') = '';

	if (ie_tipo_titulo_w = '9') then
		select	coalesce(max(vl_saldo_titulo),0)
		into STRICT	vl_liquidacao_w
		from	titulo_receber
		where	nr_titulo	= nr_titulo_p;
	end if;
	
	select	nextval('titulo_receber_cobr_seq')
	into STRICT	nr_seq_tit_rec_cobr_w
	;

	insert	into	titulo_receber_cobr(nr_seq_cobranca,
		nr_titulo,
		vl_cobranca,
		dt_atualizacao,
		nm_usuario,
		cd_banco,
		cd_agencia_bancaria,
		nr_conta,
		cd_moeda,
		ie_digito_conta,
		cd_camara_compensacao,
		vl_desconto,
		vl_acrescimo,
		nr_sequencia,
		vl_despesa_bancaria,
		vl_desc_previsto,
		vl_saldo_inclusao,
		nr_seq_mensalidade,
		nr_seq_motivo_desc,
		cd_centro_custo_desc,
		vl_liquidacao,
		vl_juros,
		vl_multa,
		cd_pessoa_fisica_r,
		cd_cgc_r,
		nr_documento_r,
		vl_titulo_r,
		nm_pessoa_r,
		ds_estabelecimento_r,
		qt_dias_instrucao,
		cd_ocorrencia)
	(SELECT	nr_seq_cobranca_p,
		a.nr_titulo,
		a.vl_saldo_titulo,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(cd_banco_p,cd_banco_w),
		cd_agencia_bancaria_w,
		nr_conta_w,
		cd_moeda_w,
		ie_digito_conta_w,
		cd_camara_compensacao_w,
		coalesce(vl_desconto_p,coalesce(CASE WHEN ie_desc_previsto_w='S' THEN coalesce(a.vl_desc_previsto,0)  ELSE 0 END  + coalesce((obter_dados_titulo_receber(a.nr_titulo,'VNC'))::numeric ,0), 0)),
		coalesce(vl_acrescimo_p,0),
		nr_seq_tit_rec_cobr_w,
		0,
		CASE WHEN ie_desc_previsto_w='S' THEN coalesce(a.vl_desc_previsto,0)  ELSE 0 END ,
		a.vl_saldo_titulo,
		a.nr_seq_mensalidade,
		nr_seq_motivo_desc_w,
		cd_centro_custo_desc_w,
		vl_liquidacao_w,
		CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(a.nr_titulo,clock_timestamp(),'R','J'))::numeric   ELSE null END ,
		CASE WHEN ie_juros_multa_w='S' THEN (obter_juros_multa_titulo(a.nr_titulo,clock_timestamp(),'R','M'))::numeric   ELSE null END ,
		cd_pessoa_fisica_w,
		cd_cgc_w,
		nr_documento_w,
		vl_titulo_w,
		nm_pessoa_w,
		ds_estabelecimento_w,
		qt_dias_instrucao_p,
		cd_ocorrencia_p
	from	titulo_receber a
	where	a.nr_titulo	= nr_titulo_p);

	insert	into titulo_rec_cobr_desc(cd_cgc,
		cd_pessoa_fisica,
		dt_atualizacao,
		nm_usuario,
		nr_seq_tit_rec_cobr,
		nr_sequencia)
	values (cd_cgc_desc_w,
		cd_pessoa_fisica_desc_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_tit_rec_cobr_w,
		nextval('titulo_rec_cobr_desc_seq'));

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_titulo_rec_cobranca ( nr_seq_cobranca_p bigint, nr_titulo_p bigint, nm_usuario_p text, cd_banco_p bigint, vl_acrescimo_p bigint, vl_desconto_p bigint, qt_dias_instrucao_p bigint, cd_ocorrencia_p text) FROM PUBLIC;

