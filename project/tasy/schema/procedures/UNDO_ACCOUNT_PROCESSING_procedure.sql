-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE undo_account_processing ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p conta_pac_deducao_conv.nm_usuario%type) AS $body$
DECLARE

/*
Routine created in principle for the Argentine market, but after stabilization it will be global

COINSURANCE - SUBSEQUENT COINSURANCE ("COSEGURO - COSEGURO POSTERIOR")
After changing to multiple coinsurance, it became necessary to create a specific routine to undo the processing, since the structure is 1-N and only
destination accounts with provisional status will be undone.
In the client's process, the account that is definitive, has as a subsequent process the issuance of an invoice, for the person responsible for the patient to advance the payment
of the tax to initiate the medical procedure / materials and cannot be undone.

COPAGO - PREVIOUS COINSURANCE ("COSEGURO - COSEGURO PREVIO")
COPAGO processes will be redone/undone when the account is recalculated and if parameter 746 is set to no (if the account is provisional)
*/
nr_seq_conta_des_w	conta_paciente.nr_interno_conta%type;
ie_status_conta_des_w	conta_paciente.ie_status_acerto%type;

nr_seq_proc_partic_w	procedimento_paciente.nr_sequencia%type;
ie_valor_inf_proc_w	procedimento_paciente.ie_valor_informado%type;

nr_seq_mat_partic_w	material_atend_paciente.nr_sequencia%type;
ie_valor_inf_mat_w	material_atend_paciente.ie_valor_informado%type;

/*
- select all open account procedures / materials 
- with explicit link in conta_pac_deducao_conv
- have ie_tipo_calculo in ('H','I') coinsurance - later coinsurance
- explicit link with account_pac_ded_item
*/
cursor_data_proc CURSOR FOR
	SELECT	d.nr_sequencia,
		d.nr_atendimento,
		d.cd_convenio,
		d.cd_categoria,
		d.nr_seq_proc_pacote,
		e.ie_tipo_valor,
		e.vl_procedimento,
		e.vl_medico,
		e.vl_anestesista,
		e.vl_materiais,
		e.vl_auxiliares,
		e.vl_custo_operacional,
		c.nr_seq_propaci_dest
	from	conta_pac_deducao_conv a, 
		conta_paciente b, 
		conta_pac_ded_conv_item c,
		procedimento_paciente d, 
		proc_paciente_valor e
	where	a.nr_seq_conta_orig = nr_interno_conta_p
	and	a.ie_tipo_calculo in ('H', 'I')
	and	(a.dt_processamento IS NOT NULL AND a.dt_processamento::text <> '')
	and	a.nr_Seq_conta_des = b.nr_interno_conta
	and	b.ie_status_acerto = 1
	and	c.nr_seq_deducao_conv = a.nr_sequencia
	and	d.nr_sequencia = c.nr_seq_propaci_origem
	and	d.nr_sequencia = e.nr_seq_procedimento
	and	e.ie_tipo_valor in (94,95)
	order by a.nr_sequencia desc;

cursor_data_mat CURSOR FOR
	SELECT 	d.nr_sequencia,
		e.ie_tipo_valor,
		e.vl_material,
		c.nr_seq_matpaci_dest
	from   	conta_pac_deducao_conv a, 
		conta_paciente b, 
		conta_pac_ded_conv_item c,
		material_atend_paciente d,
		mat_atend_paciente_valor e
	where	a.nr_seq_conta_orig = nr_interno_conta_p
	and	a.ie_tipo_calculo in ('H', 'I')
	and	(a.dt_processamento IS NOT NULL AND a.dt_processamento::text <> '')
	and	a.nr_seq_conta_des = b.nr_interno_conta
	and	b.ie_status_acerto = 1
	and	c.nr_seq_deducao_conv = a.nr_sequencia
	and	d.nr_sequencia = c.nr_seq_matpaci_origem
	and	d.nr_sequencia = e.nr_seq_material	
	and	e.ie_tipo_valor in (94,95)
	order by a.nr_sequencia desc, d.vl_material desc;

cursor_data_account CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_conta_des, 
		(SELECT obter_valor_conta(a.nr_seq_conta_des, 0) ) vl_conta
	from	conta_pac_deducao_conv a, 
		conta_paciente b
	where	a.nr_seq_conta_orig = nr_interno_conta_p
	and	a.ie_tipo_calculo in ('H', 'I')
	and	(a.dt_processamento IS NOT NULL AND a.dt_processamento::text <> '')
	and	a.nr_Seq_conta_des = b.nr_interno_conta
	and	b.ie_status_acerto = 1
	and 	nr_seq_conta_des > 0;

data_proc 	cursor_data_proc%rowtype;
data_mat 	cursor_data_mat%rowtype;
data_account 	cursor_data_account%rowtype;


BEGIN

if (nr_interno_conta_p IS NOT NULL AND nr_interno_conta_p::text <> '') then
	/* Return procedure values */

	open cursor_data_proc;
		loop
		fetch cursor_data_proc into data_proc;
		EXIT WHEN NOT FOUND; /* apply on cursor_data_proc */
			if (data_proc.ie_tipo_valor = 95) then
				ie_valor_inf_proc_w := 'S';
			else
				ie_valor_inf_proc_w := 'N';
			end if;

			/* Delete the item with the deduction apportionment */

			delete	
			from 	conta_pac_ded_conv_item
			where	nr_seq_propaci_origem = data_proc.nr_sequencia;

			delete	
			from 	procedimento_paciente
			where	nr_sequencia = data_proc.nr_seq_propaci_dest;

			/* Return procedure value to value before deduction */

			update	procedimento_paciente
			set	ie_valor_informado = ie_valor_inf_proc_w,
				vl_procedimento = data_proc.vl_procedimento,
				vl_medico = data_proc.vl_medico,
				vl_anestesista = data_proc.vl_anestesista,
				vl_materiais = data_proc.vl_materiais,
				vl_auxiliares = data_proc.vl_auxiliares,
				vl_custo_operacional = data_proc.vl_custo_operacional
			where	nr_sequencia = data_proc.nr_sequencia;

			/* Update the procedure value, if not informed manually, if there is any price change */

			if (ie_valor_inf_proc_w = 'N') then
				CALL atualiza_preco_procedimento(data_proc.nr_sequencia, data_proc.cd_convenio, nm_usuario_p);
			else	
				if (data_proc.nr_sequencia = coalesce(data_proc.nr_seq_proc_pacote,0)) then
					CALL calcular_pacote(data_proc.nr_atendimento, nr_interno_conta_p, data_proc.cd_convenio, data_proc.cd_categoria, nm_usuario_p, 'N', 'N', 'N', 'S', 'N');
				else
					CALL gerar_tributo_conta_pac(nr_interno_conta_p, data_proc.nr_sequencia, 'P', nm_usuario_p);
				end if;
			end if;
		end loop;
	close cursor_data_proc;

	/* Return material values */

	open cursor_data_mat;
		loop
		fetch cursor_data_mat into data_mat;
		EXIT WHEN NOT FOUND; /* apply on cursor_data_mat */
			if (data_mat.ie_tipo_valor = 95) then
				ie_valor_inf_mat_w := 'S';
			else
				ie_valor_inf_mat_w := 'N';
			end if;

			/* Delete the item with the deduction apportionment */
		
			delete	
			from 	conta_pac_ded_conv_item
			where	nr_seq_matpaci_origem = data_mat.nr_sequencia;

			delete	
			from 	material_atend_paciente
			where	nr_sequencia = data_mat.nr_seq_matpaci_dest;

			/* Return procedure value to value before deduction */

			update	material_atend_paciente
			set	ie_valor_informado = ie_valor_inf_mat_w,
				vl_material = data_mat.vl_material,
				vl_unitario = dividir(data_mat.vl_material, qt_material)
			where	nr_sequencia = data_mat.nr_sequencia;

			/* Update material and tax value */

			if (ie_valor_inf_mat_w = 'N') then
				CALL atualiza_preco_material(data_mat.nr_sequencia, nm_usuario_p);
			else
				CALL gerar_tributo_conta_pac(nr_interno_conta_p, data_mat.nr_sequencia, 'M', nm_usuario_p);
			end if;
		end loop;
	close cursor_data_mat;

	/* - Delete account_pac_deducao_conv
	   - Delete the target account, if it has zero value. */
	open cursor_data_account;
		loop
		fetch cursor_data_account into data_account;
		EXIT WHEN NOT FOUND; /* apply on cursor_data_account */
			delete
			from 	conta_pac_ded_conv_item 
			where 	nr_seq_deducao_conv = data_account.nr_sequencia;
		
			delete
			from 	conta_pac_deducao_conv		
			where	nr_sequencia = data_account.nr_sequencia;

			if (data_account.vl_conta = 0) then
				delete 
				from 	conta_paciente a
				where 	nr_interno_conta = data_account.nr_seq_conta_des
				and not exists (	SELECT	1
						from	procedimento_paciente x
						where	x.nr_interno_conta = a.nr_interno_conta)
				and not exists (	select 1
						from	material_atend_paciente x
						where	x.nr_interno_conta = a.nr_interno_conta);
			end if;
		end loop;
	close cursor_data_account;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE undo_account_processing ( nr_interno_conta_p conta_paciente.nr_interno_conta%type, nm_usuario_p conta_pac_deducao_conv.nm_usuario%type) FROM PUBLIC;

