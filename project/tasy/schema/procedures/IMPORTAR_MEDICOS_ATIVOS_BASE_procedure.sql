-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE importar_medicos_ativos_base ( ie_origem_import_p text, nm_usuario_p text, ie_vinculo_medico_p bigint, nr_seq_categoria_p bigint) AS $body$
DECLARE


C01 CURSOR FOR
	SELECT	*
	from	cadastro_medico
	where	ie_origem_import = 'X'
	and (coalesce(ie_situacao_reg_base,'N') = 'N')
	and	substr(ds_status,1,1) = 'A'
	and	coalesce(cd_pessoa_fisica::text, '') = ''
	order by 1;
			
c01_w				c01%rowtype;	
qt_registros_w			bigint;
qt_registros_atualizados_w	bigint := 0;
cd_pessoa_fisica_w		varchar(10);
cd_estabelecimento_w		smallint;
cd_perfil_ativo_w		integer;
cd_empresa_w			smallint;
dt_importacao_w			timestamp;
nr_seq_conselho_w		pessoa_fisica.nr_seq_conselho%type;
cd_especialidade_w		medico_especialidade.cd_especialidade%type;
nr_seq_cbo_saude_w		especialidade_medica.nr_seq_cbo_saude%type;



BEGIN
CALL wheb_usuario_pck.set_ie_executar_trigger('N');
cd_estabelecimento_w	:= wheb_usuario_pck.get_cd_estabelecimento;
cd_perfil_ativo_w		:= obter_perfil_ativo;

begin
	select	cd_empresa
	into STRICT	cd_empresa_w
	from	estabelecimento
	where	cd_estabelecimento = cd_estabelecimento_w;
exception
when others then
	cd_empresa_w := null;
end;

open C01;
loop
fetch C01 into	
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	count(cd_pessoa_fisica)
	into STRICT	qt_registros_w
	from	medico
	where	nr_crm = c01_w.nr_crm
	and	uf_crm = c01_w.uf_crm;
	
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_conselho_w
	from	conselho_profissional
	where	sg_conselho = c01_w.sg_conselho;	
	
	if ((c01_w.sg_conselho IS NOT NULL AND c01_w.sg_conselho::text <> '') and nr_seq_conselho_w = 0) then
		goto end_loop_c01; --continue; not suported at oracle 10g
	end if;
	
	select	max(cd_especialidade),
			max(nr_seq_cbo_saude)
	into STRICT	cd_especialidade_w,
			nr_seq_cbo_saude_w			
	from	especialidade_medica
	where	cd_especialidade = c01_w.cd_especialidade;

	if ((c01_w.cd_especialidade IS NOT NULL AND c01_w.cd_especialidade::text <> '') and coalesce(cd_especialidade_w::text, '') = '') then
		goto end_loop_c01; --continue not suported at oracle 10g
	end if;
	
	if (qt_registros_w = 0) then
		
		select	nextval('pessoa_fisica_seq')
		into STRICT	cd_pessoa_fisica_w
		;
		
		dt_importacao_w := clock_timestamp();
		
		begin
		insert into pessoa_fisica(
					cd_pessoa_fisica,
					dt_atualizacao,
					dt_atualizacao_nrec,
					nm_usuario,
					nm_usuario_nrec,
					cd_empresa,
					cd_estabelecimento,
					nm_pessoa_fisica,
					nm_pessoa_fisica_sem_acento,
					nm_pessoa_pesquisa,
					dt_integracao_externa,
					ie_fluencia_portugues, -- Valores padr천es
					ie_nf_correio,
					ie_funcionario,
					ie_perm_sms_email,
					ie_revisar,
					ie_emancipado,
					ie_dependente,
					ie_socio,
					ie_conselheiro,
					ie_vegetariano,
					ie_fumante,
					cd_perfil_ativo,
					ie_consiste_nr_serie_nf,
					dt_revisao,
					cd_nacionalidade,
					ie_tipo_pessoa,
					nr_seq_conselho
					)
		values (
					cd_pessoa_fisica_w,
					dt_importacao_w,
					dt_importacao_w,
					nm_usuario_p,
					nm_usuario_p,
					cd_empresa_w,
					cd_estabelecimento_w,
					substr(c01_w.nm_medico,1,60),
					substr(elimina_acentuacao(c01_w.nm_medico),1,60),
					substr(padronizar_nome(c01_w.nm_medico),1,60),
					dt_importacao_w,
					'F',-- Valores padr천es
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					'N',
					cd_perfil_ativo_w,
					'S',
					dt_importacao_w,
					'10',
					2,
					nr_seq_conselho_w
					);
		exception
		when others then
			cd_pessoa_fisica_w := '0';
		end;
		if (coalesce(cd_pessoa_fisica_w,'0') <> '0') then
			begin
			insert into medico(	
						cd_pessoa_fisica,
						nm_guerra,
						nr_crm,
						uf_crm,
						ie_vinculo_medico,
						nr_seq_categoria,
						dt_atualizacao,
						dt_atualizacao_nrec,
						nm_usuario,
						nm_usuario_nrec,
						ie_situacao, -- Valores padr천es
						ie_cobra_pf_pj,
						ie_conveniado_sus,
						ie_auditor_sus,
						ie_corpo_clinico,
						ie_corpo_assist,
						ie_coordenador,
						ie_tsa,
						ie_retaguarda,
						ie_ama,
						ie_email_laudo,
						ie_origem_inf
						)
			values (
						cd_pessoa_fisica_w,
						substr(c01_w.nm_medico,1,60),
						c01_w.nr_crm,
						c01_w.uf_crm,
						coalesce(ie_vinculo_medico_p,1),
						nr_seq_categoria_p,
						dt_importacao_w,
						dt_importacao_w,
						nm_usuario_p,
						nm_usuario_p,
						'A', -- Valores padr천es
						'F',
						'N',
						'N',
						'N',
						'N',
						'N',
						'N',
						'N',
						'S',
						'S',
						'U'
						);
			exception
			when others then
				cd_pessoa_fisica_w := '0';
			end;
				
			if (c01_w.cd_especialidade IS NOT NULL AND c01_w.cd_especialidade::text <> '') then
			
				insert into medico_especialidade(	
						cd_pessoa_fisica,
						cd_especialidade,
						dt_atualizacao,
						nm_usuario,
						nr_seq_prioridade,
						nr_seq_cbo_saude
						)
				values (
						cd_pessoa_fisica_w,
						cd_especialidade_w,
						dt_importacao_w,
						nm_usuario_p,
						c01_w.nr_seq_prioridade,
						nr_seq_cbo_saude_w
						);
			end if;
			
		end if;
		
		if (coalesce(cd_pessoa_fisica_w,'0') <> '0') then
			begin
			update	cadastro_medico
			set	dt_import_medico_base = dt_importacao_w,
				nm_usuario = nm_usuario_p,
				dt_atualizacao = dt_importacao_w
			where	nr_sequencia = c01_w.nr_sequencia;
			exception
			when others then
				cd_pessoa_fisica_w := '0';
			end;
		
		end if;
		
	end if;
	qt_registros_atualizados_w := qt_registros_atualizados_w + 1;
	if (qt_registros_atualizados_w = 100) then
		commit;
		qt_registros_atualizados_w := 0;
	end if;
	end;
	<<end_loop_c01>> --not allowed unless an executable statement follows
	null;
end loop;
close C01;

CALL wheb_usuario_pck.set_ie_executar_trigger('S');
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE importar_medicos_ativos_base ( ie_origem_import_p text, nm_usuario_p text, ie_vinculo_medico_p bigint, nr_seq_categoria_p bigint) FROM PUBLIC;

