-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_eventos_fatura ( nr_seq_fatura_p bigint, ie_atualiza_vl_p text, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ ]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_lote_w			bigint;
nr_seq_regra_fat_w		bigint;
nr_seq_fatura_evento_w		bigint;
nr_seq_fatura_conta_w		bigint;
nr_seq_fatura_item_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
dt_item_w			timestamp;
nr_seq_conta_w			bigint;
nr_seq_conta_pos_estab_w	bigint;
nr_seq_evento_fat_w		bigint;
nr_seq_segurado_w		bigint;
ie_tipo_cobranca_w		pls_fatura_proc.ie_tipo_cobranca%type;

nr_seq_evento_novo_w		bigint;
nr_seq_regra_event_w		bigint;
ie_tipo_vinculacao_w		varchar(1);
vl_faturado_w			double precision;
vl_faturado_ndc_w		double precision;
qt_contestacao_w		bigint := 0;
nr_seq_cong_w			bigint;
nr_seq_conta_pos_contab_w	pls_fatura_proc.nr_sequencia%type;

C01 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_evento
	from	pls_fatura_evento
	where	nr_seq_fatura = nr_seq_fatura_p;

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_conta,
		nr_seq_segurado,
		ie_tipo_vinculacao
	from	pls_fatura_conta
	where	nr_seq_fatura_evento	= nr_seq_fatura_evento_w;

C03 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_conta_pos_estab,
		nr_seq_conta_proc,
		null,
		vl_faturado,
		vl_faturado_ndc,
		nr_seq_conta_pos_contab,
		ie_tipo_cobranca
	from	pls_fatura_proc
	where	nr_seq_fatura_conta = nr_seq_fatura_conta_w
	
union all

	SELECT	nr_sequencia,
		nr_seq_conta_pos_estab,
		null,
		nr_seq_conta_mat,
		vl_faturado,
		vl_faturado_ndc,
		nr_seq_conta_pos_contab,
		ie_tipo_cobranca
	from	pls_fatura_mat
	where	nr_seq_fatura_conta = nr_seq_fatura_conta_w;

C04 CURSOR FOR
	SELECT	nr_seq_conta_pos_estab,
		nr_seq_evento,
		nr_seq_conta,
		nr_seq_conta_proc,
		nr_seq_conta_mat,
		nr_seq_segurado,
		ie_tipo_vinculacao_conta,
		coalesce(vl_faturado,0),
		coalesce(vl_faturado_ndc,0),
		nr_seq_conta_pos_contab,
		ie_tipo_cobranca
	from	w_pls_fat_proc_mat
	where	nr_seq_fatura = nr_seq_fatura_p
	order by nr_seq_evento,
		nr_seq_conta;


BEGIN
delete	FROM w_pls_fat_proc_mat
where	nr_seq_fatura	= nr_seq_fatura_p
and	nm_usuario	= nm_usuario_p;

select	max(c.nr_seq_regra_fat),
	max(c.nr_sequencia)
into STRICT	nr_seq_regra_fat_w,
	nr_seq_lote_w
from	pls_lote_faturamento	c,
	pls_fatura		a
where	a.nr_seq_lote		= c.nr_sequencia
and	a.nr_sequencia		= nr_seq_fatura_p;

-- EVENTOS
open C01;
loop
fetch C01 into
	nr_seq_fatura_evento_w,
	nr_seq_evento_fat_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	-- CONTAS
	open C02;
	loop
	fetch C02 into
		nr_seq_fatura_conta_w,
		nr_seq_conta_w,
		nr_seq_segurado_w,
		ie_tipo_vinculacao_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		-- PROCEDIMENTOS / MATERIAIS
		open C03;
		loop
		fetch C03 into
			nr_seq_fatura_item_w,
			nr_seq_conta_pos_estab_w,
			nr_seq_conta_proc_w,
			nr_seq_conta_mat_w,
			vl_faturado_w,
			vl_faturado_ndc_w,
			nr_seq_conta_pos_contab_w,
			ie_tipo_cobranca_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			qt_contestacao_w := 0;

			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				select	count(1)
				into STRICT	qt_contestacao_w
				from	pls_contestacao_proc
				where	nr_seq_fatura_proc = nr_seq_fatura_item_w;

				select	max(a.dt_procedimento)
				into STRICT	dt_item_w
				from	pls_conta_proc_v a
				where	a.nr_sequencia	= nr_seq_conta_proc_w;

			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				select	count(1)
				into STRICT	qt_contestacao_w
				from	pls_contestacao_mat
				where	nr_seq_fatura_mat = nr_seq_fatura_item_w;

				select	max(a.dt_atendimento)
				into STRICT	dt_item_w
				from	pls_conta_mat_v a
				where	a.nr_sequencia	= nr_seq_conta_mat_w;
			end if;

			if (qt_contestacao_w > 0) then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(274548);
			end if;

			nr_seq_evento_novo_w := pls_obter_evento_faturamento( nr_seq_conta_proc_w, nr_seq_conta_mat_w, dt_item_w, nr_seq_evento_novo_w, nr_seq_regra_fat_w, nr_seq_conta_pos_contab_w, nr_seq_conta_pos_estab_w);

			select	coalesce(max(a.nr_seq_regra), 0)
			into STRICT	nr_seq_regra_event_w
			from	pls_regra_fat_evento	a
			where	a.nr_seq_evento = nr_seq_evento_novo_w
			and 	a.nr_seq_regra	= nr_seq_regra_fat_w;

			if (nr_seq_regra_event_w = nr_seq_regra_fat_w) then
				nr_seq_evento_fat_w := nr_seq_evento_novo_w;
			end if;

			insert into w_pls_fat_proc_mat(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_conta_pos_estab,
				nr_seq_evento,
				nr_seq_fatura,
				nr_seq_conta,
				nr_seq_conta_proc,
				nr_seq_conta_mat,
				nr_seq_segurado,
				ie_tipo_vinculacao_conta,
				vl_faturado,
				vl_faturado_ndc,
				nr_seq_conta_pos_contab,
				ie_tipo_cobranca)
			values (nextval('w_pls_fat_proc_mat_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_conta_pos_estab_w,
				nr_seq_evento_fat_w,
				nr_seq_fatura_p,
				nr_seq_conta_w,
				nr_seq_conta_proc_w,
				nr_seq_conta_mat_w,
				nr_seq_segurado_w,
				ie_tipo_vinculacao_w,
				vl_faturado_w,
				vl_faturado_ndc_w,
				nr_seq_conta_pos_contab_w,
				ie_tipo_cobranca_w);

			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				delete	FROM pls_fatura_proc
				where	nr_sequencia = nr_seq_fatura_item_w;

			elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				delete	FROM pls_fatura_mat
				where	nr_sequencia = nr_seq_fatura_item_w;
			end if;
			end;
		end loop;
		close C03;

		delete	FROM pls_fatura_conta
		where	nr_sequencia = nr_seq_fatura_conta_w;

		end;
	end loop;
	close C02;

	delete	FROM pls_fatura_evento
	where	nr_sequencia = nr_seq_fatura_evento_w;

	end;
end loop;
close C01;

nr_seq_conta_pos_estab_w := null;
nr_seq_evento_fat_w := null;
nr_seq_conta_w := null;
nr_seq_conta_proc_w := null;
nr_seq_conta_mat_w := null;
dt_item_w := null;
nr_seq_fatura_evento_w := null;
nr_seq_fatura_conta_w := null;
nr_seq_segurado_w := null;
ie_tipo_vinculacao_w := null;

-- ATUALIZAR AS INFORMAÇÕES
open C04;
loop
fetch C04 into
	nr_seq_conta_pos_estab_w,
	nr_seq_evento_fat_w,
	nr_seq_conta_w,
	nr_seq_conta_proc_w,
	nr_seq_conta_mat_w,
	nr_seq_segurado_w,
	ie_tipo_vinculacao_w,
	vl_faturado_w,
	vl_faturado_ndc_w,
	nr_seq_conta_pos_contab_w,
	ie_tipo_cobranca_w;
EXIT WHEN NOT FOUND; /* apply on C04 */
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_fatura_evento_w
	from	pls_fatura_evento
	where	nr_seq_evento	= nr_seq_evento_fat_w
	and	nr_seq_fatura	= nr_seq_fatura_p;

	if (coalesce(nr_seq_fatura_evento_w::text, '') = '') then
		select	nextval('pls_fatura_evento_seq')
		into STRICT	nr_seq_fatura_evento_w
		;

		insert into pls_fatura_evento(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_fatura,
			nr_seq_evento,
			vl_evento)
		values (nr_seq_fatura_evento_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_fatura_p,
			nr_seq_evento_fat_w,
			0);
	end if;

	select	max(nr_sequencia)
	into STRICT	nr_seq_fatura_conta_w
	from	pls_fatura_conta
	where	nr_seq_fatura_evento	= nr_seq_fatura_evento_w
	and	nr_seq_conta		= nr_seq_conta_w;

	if (coalesce(nr_seq_fatura_conta_w::text, '') = '') then
		select	nextval('pls_fatura_conta_seq')
		into STRICT	nr_seq_fatura_conta_w
		;

		select	max(a.nr_seq_congenere)
		into STRICT	nr_seq_cong_w
		from	pls_segurado	a
		where	a.nr_sequencia	= nr_seq_segurado_w;

		insert into pls_fatura_conta(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_fatura_evento,
			nr_seq_conta,
			vl_faturado,
			nr_seq_segurado,
			ie_tipo_cobranca,
			cd_conta_debito,
			cd_conta_credito,
			nr_lote_contabil,
			vl_faturado_ndc,
			ie_tipo_vinculacao,
			nr_seq_congenere)
		values (	nr_seq_fatura_conta_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_fatura_evento_w,
			nr_seq_conta_w,
			0,
			nr_seq_segurado_w,
			null,
			null,
			null,
			0,
			0,
			ie_tipo_vinculacao_w,
			nr_seq_cong_w);
	end if;

	if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
		insert into pls_fatura_proc(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_fatura_conta,
			nr_seq_conta_proc,
			vl_faturado,
			cd_conta_debito,
			cd_conta_credito,
			nr_lote_contabil,
			cd_historico,
			nr_seq_esquema,
			cd_classif_cred,
			cd_classif_deb,
			cd_historico_baixa,
			cd_historico_estorno,
			ie_tipo_cobranca,
			ie_liberado,
			nr_seq_conta_pos_estab,
			nr_seq_fat_proc_cancel,
			vl_faturado_ndc,
			cd_conta_debito_ndc,
			cd_conta_credito_ndc,
			cd_classif_cred_ndc,
			cd_classif_deb_ndc,
			nr_seq_esquema_ndc,
			cd_historico_ndc,
			nr_seq_conta_pos_contab)
		values (	nextval('pls_fatura_proc_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_fatura_conta_w,
			nr_seq_conta_proc_w,
			vl_faturado_w,
			null,
			null,
			0,
			null,
			null,
			null,
			null,
			null,
			null,
			ie_tipo_cobranca_w,
			null,
			nr_seq_conta_pos_estab_w,
			null,
			vl_faturado_ndc_w,
			null,
			null,
			null,
			null,
			null,
			null,
			nr_seq_conta_pos_contab_w);

	elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
		insert into pls_fatura_mat(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_fatura_conta,
			nr_seq_conta_mat,
			vl_faturado,
			cd_conta_debito,
			cd_conta_credito,
			nr_lote_contabil,
			cd_historico,
			nr_seq_esquema,
			cd_classif_cred,
			cd_classif_deb,
			cd_historico_baixa,
			cd_historico_estorno,
			ie_tipo_cobranca,
			ie_liberado,
			nr_seq_conta_pos_estab,
			nr_seq_fat_mat_cancel,
			vl_faturado_ndc,
			cd_conta_debito_ndc,
			cd_conta_credito_ndc,
			cd_classif_cred_ndc,
			cd_classif_deb_ndc,
			nr_seq_esquema_ndc,
			cd_historico_ndc,
			nr_seq_conta_pos_contab)
		values (	nextval('pls_fatura_mat_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_fatura_conta_w,
			nr_seq_conta_mat_w,
			vl_faturado_w,
			null,
			null,
			0,
			null,
			null,
			null,
			null,
			null,
			null,
			ie_tipo_cobranca_w,
			null,
			nr_seq_conta_pos_estab_w,
			null,
			vl_faturado_ndc_w,
			null,
			null,
			null,
			null,
			null,
			null,
			nr_seq_conta_pos_contab_w);

	end if;

	end;
end loop;
close C04;

-- LIMPAR FATURAS E EVENTOS VAZIOS
CALL pls_limpar_faturas_vazias_lote( nr_seq_lote_w, cd_estabelecimento_p, nm_usuario_p);

-- ATUALIZAR VALORES
if (coalesce(ie_atualiza_vl_p,'N') = 'S') then
	CALL pls_atualizar_vl_lote_fatura( nr_seq_lote_w, nm_usuario_p, 'N', 'N');
end if;

if (coalesce(ie_commit_p,'N') = 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_eventos_fatura ( nr_seq_fatura_p bigint, ie_atualiza_vl_p text, ie_commit_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

