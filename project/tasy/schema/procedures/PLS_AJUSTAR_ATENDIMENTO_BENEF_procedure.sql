-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_ajustar_atendimento_benef ( nm_usuario_p text) AS $body$
DECLARE


ie_tipo_segurado_w		pls_segurado.ie_tipo_segurado%type;
ie_tipo_contrato_w		pls_intercambio.ie_tipo_contrato%type;
ie_tipo_operacao_w		pls_contrato.ie_tipo_operacao%type;

C01 CURSOR FOR
	SELECT	nr_sequencia nr_seq_segurado,
		dt_limite_utilizacao
	from	pls_segurado
	where	ie_situacao_atend	= 'A'
	and	dt_limite_utilizacao < clock_timestamp()
	and	(dt_rescisao IS NOT NULL AND dt_rescisao::text <> '');

C02 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.nr_seq_motivo_susp
	from	pls_segurado_suspensao	a
	where	trunc(a.dt_prev_inicio_susp,'dd')	<= trunc(clock_timestamp(),'dd')
	and	pls_util_pck.obter_dt_vigencia_null(a.dt_fim_suspensao,'F') > trunc(clock_timestamp(),'dd')
	and	pls_util_pck.obter_dt_vigencia_null(a.dt_prev_fim_susp,'F') > trunc(clock_timestamp(),'dd')
	and	(a.dt_inicio_suspensao IS NOT NULL AND a.dt_inicio_suspensao::text <> '')
	and	exists (	SELECT	1
				from	pls_segurado	x
				where	x.nr_sequencia		= a.nr_seq_segurado
				and	x.ie_situacao_atend	= 'A');

C03 CURSOR FOR
	SELECT	nr_sequencia nr_seq_segurado
	from	pls_segurado
	where	trunc(dt_contratacao,'dd')	<= clock_timestamp()
	and	ie_situacao_atend		= 'F';

C04 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		b.nr_seq_intercambio,
		b.nr_seq_contrato
	from	pls_segurado_repasse a,
		pls_segurado b
	where	a.nr_seq_segurado = b.nr_sequencia
	and	a.ie_tipo_compartilhamento = 1
	and	trunc(a.dt_fim_repasse,'dd') = trunc(clock_timestamp(),'dd')
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '');

C05 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_solicitacao
	from	pls_solicitacao_rescisao a
	where	a.ie_status = 2 --Liberado
	and	exists (SELECT	1
			from	pls_solic_rescisao_benef x
			where	x.nr_seq_solicitacao = a.nr_sequencia
			and	coalesce(x.ie_situacao_atend_ant::text, '') = '');

C06 CURSOR FOR
	SELECT	b.nr_sequencia		nr_seq_segurado,
		a.nr_seq_tabela		nr_seq_tabela_repasse,
		a.nr_sequencia		nr_seq_repasse_seg,
		a.dt_repasse,
		b.ie_tipo_segurado	ie_tipo_segurado_ant,
		a.ds_historico_benef
	from	pls_segurado_repasse a,
		pls_segurado b
	where	b.nr_sequencia = a.nr_seq_segurado
	and	a.ie_tipo_compartilhamento = 1
	and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and	b.ie_tipo_segurado not in ('R')
	and	trunc(a.dt_repasse,'dd') = trunc(clock_timestamp(),'dd')
	and	not exists (	SELECT	1
				from	pls_segurado_repasse x
				where	x.nr_sequencia = a.nr_sequencia
				and	trunc(a.dt_repasse,'dd') = trunc(a.dt_fim_repasse,'dd'));

C07 CURSOR FOR
	SELECT	a.nr_seq_segurado,
		a.ie_tipo_segurado,
		a.dt_ocorrencia_sib,
		CASE WHEN a.ie_tipo_segurado='I' THEN 'A'  ELSE CASE WHEN a.ie_tipo_segurado='H' THEN 'A'  ELSE null END  END  ie_situacao_atend  --Se alterar para Eventual ou Habitual, a situacao de atendimento deve ser Apto
	from	pls_segurado_historico a,
		pls_segurado b
	where	b.nr_sequencia		= a.nr_seq_segurado
	and	a.ie_tipo_historico	= '102'
	and	a.dt_ocorrencia_sib	= trunc(clock_timestamp(),'dd')
	and	a.ie_tipo_segurado <> b.ie_tipo_segurado
	and	coalesce(a.ie_situacao_compartilhamento, 'A') = 'A';

BEGIN

--Esse cursor ira inativar a situacao de atendimento quando a data limite utilizacao for menor que a data atual e a situacao de atendimento for "Apto"
for r_c01_w in C01 loop
	begin
	if (trunc(r_c01_w.dt_limite_utilizacao,'dd') < trunc(clock_timestamp(),'dd')) then --coloquei este IF pois estava inativando beneficiarios com data limite de utilizacao igual a sysdate, coloquei dentro do loop por motivo de perfomance
		update	pls_segurado
		set	ie_situacao_atend	= 'I',
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= r_c01_w.nr_seq_segurado;

		CALL pls_gerar_segurado_historico(	r_c01_w.nr_seq_segurado, '29', clock_timestamp(), wheb_mensagem_pck.get_texto(1108738),'pls_ajustar_atendimento_benef',
						null, null, null, null, null,
						null, null, null, null, null, 
						null, nm_usuario_p, 'N');
	end if;
	end;
end loop;

--Esse cursos ira tratar a situacao de atendimento do beneficiario caso possua suspensao em aberto e o beneficiario esteja ativo
for r_c02_w in C02 loop
	begin
	update	pls_segurado
	set	ie_situacao_atend	= 'S',
		nr_seq_motivo_susp	= r_c02_w.nr_seq_motivo_susp,
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= r_c02_w.nr_seq_segurado;

	CALL pls_gerar_segurado_historico(	r_c02_w.nr_seq_segurado, '29', clock_timestamp(), wheb_mensagem_pck.get_texto(1108738),'pls_ajustar_atendimento_benef',
					null, null, null, null, null,
					null, null, null, null, null, 
					null, nm_usuario_p, 'N');
	end;
end loop;

--Esse cursor ira percorrer todos os beneficiarios que estao com situancao de atendimento como "Adesao futura" e ja estao ativos
for r_c03_w in C03 loop
	begin
	update	pls_segurado
	set	ie_situacao_atend	= 'A',
		nm_usuario		= nm_usuario_p
	where	nr_sequencia		= r_c03_w.nr_seq_segurado;
	
	CALL pls_gerar_segurado_historico(	r_c03_w.nr_seq_segurado, '62', clock_timestamp(), wheb_mensagem_pck.get_texto(1108739),'pls_ajustar_atendimento_benef-3',
					null, null, null, null, null,
					null, null, null, null, null, 
					null, nm_usuario_p, 'N');
	end;
end loop;

for r_c04_w in C04 loop
	begin
	if (r_c04_w.nr_seq_contrato IS NOT NULL AND r_c04_w.nr_seq_contrato::text <> '') then
		select	max(ie_tipo_operacao)
		into STRICT	ie_tipo_operacao_w
		from	pls_contrato
		where	nr_sequencia = r_c04_w.nr_seq_contrato;
	
		if (ie_tipo_operacao_w = 'A') then
			ie_tipo_operacao_w 	:= 'A';
		else
			ie_tipo_operacao_w	:= 'B';
		end if;
	
		update	pls_segurado
		set	ie_tipo_segurado = ie_tipo_operacao_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			dt_alteracao_tipo_segurado = CASE WHEN ie_tipo_segurado='B' THEN  dt_alteracao_tipo_segurado  ELSE trunc(clock_timestamp(),'dd') END
		where	nr_sequencia = r_c04_w.nr_seq_segurado;
	elsif (r_c04_w.nr_seq_intercambio IS NOT NULL AND r_c04_w.nr_seq_intercambio::text <> '') then
		select	ie_tipo_contrato
		into STRICT	ie_tipo_contrato_w
		from	pls_intercambio
		where	nr_sequencia	= r_c04_w.nr_seq_intercambio;
		
		if (ie_tipo_contrato_w	= 'C') then
			ie_tipo_segurado_w	:= 'C';
		else
			ie_tipo_segurado_w	:= 'T';
		end if;
		
		update	pls_segurado
		set	ie_tipo_segurado = ie_tipo_segurado_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			dt_alteracao_tipo_segurado = CASE WHEN ie_tipo_segurado=ie_tipo_segurado_w THEN  dt_alteracao_tipo_segurado  ELSE trunc(clock_timestamp(),'dd') END
		where	nr_sequencia = r_c04_w.nr_seq_segurado;
	end if;
	end;
end loop;

--Esse cursor ira inativar a situacao de atendimento quando existir solicitacao de rescisao de contrato liberada
for r_c05_w in C05 loop
	begin
	CALL pls_alt_sit_atend_solic_resc(r_c05_w.nr_seq_solicitacao, 'L', 'N', nm_usuario_p);
	end;
end loop;

for r_c06_w in c06 loop
	begin
	
	CALL pls_alterar_segurado_repasase(	r_c06_w.nr_seq_segurado, r_c06_w.nr_seq_tabela_repasse, r_c06_w.nr_seq_repasse_seg,
					r_c06_w.dt_repasse, r_c06_w.ie_tipo_segurado_ant, r_c06_w.ds_historico_benef || ' - pls_ajustar_atendimento_benef',
					nm_usuario_p);
	
	end;
end loop;

--Atualizar o tipo de beneficiario conforme historico registrado
for r_c07_w in C07 loop
	begin
	CALL wheb_usuario_pck.set_ie_executar_trigger('N');
	update	pls_segurado
	set	ie_tipo_segurado	= r_c07_w.ie_tipo_segurado,
		ie_situacao_atend	= CASE WHEN r_c07_w.ie_situacao_atend = NULL THEN ie_situacao_atend  ELSE r_c07_w.ie_situacao_atend END ,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		dt_alteracao_tipo_segurado = r_c07_w.dt_ocorrencia_sib
	where	nr_sequencia		= r_c07_w.nr_seq_segurado;
	CALL wheb_usuario_pck.set_ie_executar_trigger('S');
	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_ajustar_atendimento_benef ( nm_usuario_p text) FROM PUBLIC;

