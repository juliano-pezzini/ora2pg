-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_inserir_w_glosa_ocor (nr_seq_analise_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_conta_pos_p bigint, nm_usuario_p text, ie_regra_agrup_p text default null, ie_tipo_item_p text default null, ie_mult_itens_p text default null) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Inserir nova glosa/ocorrência na tela de glosa do item (Análise Nova)
Gera apenas na tabela temporária, somente depois que clicar em Ok que irá para as tabelas quentes.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_ocorrencia_w			varchar(30);
ds_tipo_w			varchar(255);
ds_glosa_ocorrencia_w		varchar(255);
ds_glosa_vinc_w			varchar(255);
nr_seq_motivo_vinc_w		bigint;
nr_seq_glosa_w			bigint;
nr_sequencia_w			bigint;
qt_glo_ocor_w			bigint := 0;
cd_mensagem_w			varchar(30);
ie_novo_pos_estab_w		pls_visible_false.ie_novo_pos_estab%type;


BEGIN

select 	coalesce(max(ie_novo_pos_estab),'N')
into STRICT	ie_novo_pos_estab_w
from	pls_visible_false;

if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') and
	((nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') or (nr_seq_motivo_glosa_p IS NOT NULL AND nr_seq_motivo_glosa_p::text <> '')) then
	if (nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') then
		select	a.cd_ocorrencia,
			'Ocorrência',
			a.ds_ocorrencia,
			a.nr_seq_motivo_glosa
		into STRICT	cd_ocorrencia_w,
			ds_tipo_w,
			ds_glosa_ocorrencia_w,
			nr_seq_glosa_w
		from	pls_ocorrencia a
		where	a.nr_sequencia	= nr_seq_ocorrencia_p;

		if (nr_seq_glosa_w IS NOT NULL AND nr_seq_glosa_w::text <> '') then
			select	b.ds_motivo_tiss
			into STRICT	ds_glosa_vinc_w
			from	tiss_motivo_glosa b
			where	b.nr_sequencia	= nr_seq_glosa_w;
		end if;
		/*retirado tratamento para que seja possível inserir a mesma ocorrência na análise OS 538829 Diogo*/

		/* Francisco - 07/02/2013 - Incluí denovo, usuário terá que reativar as ocorrências/glosas */

		select	count(1)
		into STRICT	qt_glo_ocor_w
		from	w_pls_analise_glosa_ocor	a
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.nr_seq_ocorrencia	= nr_seq_ocorrencia_p  LIMIT 1;
	elsif (nr_seq_motivo_glosa_p IS NOT NULL AND nr_seq_motivo_glosa_p::text <> '') then
		select	a.cd_motivo_tiss,
			'Glosa',
			a.ds_motivo_tiss
		into STRICT	cd_ocorrencia_w,
			ds_tipo_w,
			ds_glosa_ocorrencia_w
		from	tiss_motivo_glosa a
		where	a.nr_sequencia	= nr_seq_motivo_glosa_p;
		/*retirado tratamento para que seja possível inserir a mesma glosa na análise OS 538829 Diogo*/

		/* Francisco - 07/02/2013 - Incluí denovo, usuário terá que reativar as ocorrências/glosas */

		if ((coalesce(ie_mult_itens_p::text, '') = '') or (ie_mult_itens_p = 'N')) then
			select	count(1)
			into STRICT	qt_glo_ocor_w
			from	w_pls_analise_glosa_ocor	a
			where	a.nr_seq_analise	= nr_seq_analise_p
			and	a.nr_seq_motivo_glosa	= nr_seq_motivo_glosa_p  LIMIT 1;
		end if;
	end if;

	if (qt_glo_ocor_w = 0) then
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_sequencia_w
		from	w_pls_analise_glosa_ocor a
		where	a.nm_usuario	= nm_usuario_p;

		insert into w_pls_analise_glosa_ocor(nr_sequencia,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_analise,
			nr_seq_ocorrencia,
			nr_seq_motivo_glosa,
			ie_situacao,
			cd_ocorrencia,
			ds_tipo,
			ds_glosa_ocorrencia,
			ds_glosa_vinc,
			ie_selecionada,
			ie_inserido_auditor,
			nr_seq_conta_pos_estab)
		values (nr_sequencia_w,
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_analise_p,
			nr_seq_ocorrencia_p,
			coalesce(nr_seq_motivo_glosa_p,nr_seq_glosa_w),
			'A',
			cd_ocorrencia_w,
			ds_tipo_w,
			ds_glosa_ocorrencia_w,
			ds_glosa_vinc_w,
			'S',
			'S',
			nr_seq_conta_pos_p);

		if (ie_novo_pos_estab_w = 'S') then

			if (ie_tipo_item_p = 'P') then
				update	w_pls_analise_glosa_ocor
				set	nr_seq_conta_pos_estab  = NULL,
					nr_seq_conta_pos_proc = nr_seq_conta_pos_p
				where	nr_sequencia = nr_sequencia_w;
			elsif (ie_tipo_item_p = 'M') then
				update	w_pls_analise_glosa_ocor
				set	nr_seq_conta_pos_estab  = NULL,
					nr_seq_conta_pos_mat = nr_seq_conta_pos_p
				where	nr_sequencia = nr_sequencia_w;
			end if;

		end if;

	elsif (coalesce(ie_regra_agrup_p,'N') = 'N') then
		if (nr_seq_ocorrencia_p IS NOT NULL AND nr_seq_ocorrencia_p::text <> '') then
			select	a.cd_ocorrencia
			into STRICT	cd_mensagem_w
			from	pls_ocorrencia a
			where	a.nr_sequencia = nr_seq_ocorrencia_p;

		elsif (nr_seq_motivo_glosa_p IS NOT NULL AND nr_seq_motivo_glosa_p::text <> '') then
			select	a.cd_motivo_tiss
			into STRICT	cd_mensagem_w
			from	tiss_motivo_glosa a
			where	a.nr_sequencia = nr_seq_motivo_glosa_p;
		end if;

		CALL wheb_mensagem_pck.exibir_mensagem_abort(227160,'CODIGO=' || cd_mensagem_w);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_inserir_w_glosa_ocor (nr_seq_analise_p bigint, nr_seq_ocorrencia_p bigint, nr_seq_motivo_glosa_p bigint, nr_seq_conta_pos_p bigint, nm_usuario_p text, ie_regra_agrup_p text default null, ie_tipo_item_p text default null, ie_mult_itens_p text default null) FROM PUBLIC;

