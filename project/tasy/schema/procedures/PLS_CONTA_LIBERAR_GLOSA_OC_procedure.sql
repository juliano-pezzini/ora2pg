-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_conta_liberar_glosa_oc ( nr_seq_analise_conta_item_p bigint, nr_seq_analise_p bigint, nr_seq_mot_liberacao_p bigint, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_grupo_atual_p bigint, ie_consistir_grupo_p text, ie_reconsistencia_p text, ie_conta_inteira_p text) AS $body$
DECLARE

 
qt_registros_w				bigint	:= 0;
ie_tipo_motivo_w			varchar(3);
ie_tipo_historico_w			smallint;
nr_seq_item_w				bigint;
ie_tipo_item_w				varchar(1);
nr_seq_ocorrencia_w			bigint;
nr_seq_glosa_w				bigint;
nr_nivel_liberacao_w			bigint;
nr_nivel_liberacao_auditor_w		bigint;
nr_seq_oc_benef_w			bigint;
nr_seq_analise_conta_glosa_w		bigint;
nr_seq_conta_proc_w			bigint;
nr_seq_conta_mat_w			bigint;
nr_seq_conta_w				bigint;
nr_seq_glosa_oc_w			bigint;
ie_grupo_liberado_w			varchar(1);
ie_se_grupo_auditor_w			varchar(1);
cd_codigo_glosa_oco_w			varchar(20);
ie_status_w				varchar(1);
nr_seq_motivo_glosa_w			bigint;
nr_seq_ocor_w				bigint;
ie_existe_grupo_glosa_w			varchar(1);
nr_seq_nivel_lib_w			bigint;
qt_glosa_w				double precision;
vl_glosa_w				double precision;
qt_apresentado_w			double precision;
vl_total_apres_w			double precision;
ds_observacao_w				varchar(4000);
ds_tipo_motivo_w			varchar(255);
ds_motivo_liberacao_w			varchar(255);
ie_origem_analise_w			bigint;
var_tipo_item_w				varchar(2);
nr_seq_proc_partic_w			bigint;
qt_ocorr_pre_w				bigint;
ie_pre_analise_w			varchar(2);
nr_nivel_liberacao_ww			bigint;
nr_seq_nivel_lib_ww			bigint;
qt_grupo_w				bigint;
ie_calculo_base_glosa_w			varchar(1);
vl_calculado_w				double precision;
vl_base_glosado_w			double precision;
qt_liberado_conta_w			bigint;
nr_seq_w_resumo_conta_w			bigint;
qt_item_analise_w			bigint;
qt_item_analise_lib_w			bigint;
qt_conta_pendente_w			bigint;
nr_seq_ocorrencia_grupo_w		pls_oc_grupo_tipo_desp.nr_seq_ocorrencia_grupo%type;
ie_tipo_despesa_proc_w			pls_oc_grupo_tipo_desp.ie_tipo_despesa_proc%type;
ie_tipo_despesa_mat_w			pls_oc_grupo_tipo_desp.ie_tipo_despesa_mat%type;


BEGIN 
 
select	max(ie_calculo_base_glosa) 
into STRICT	ie_calculo_base_glosa_w 
from	pls_parametros 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
/*Apagar o parecer de modo se este existir*/
 
delete	FROM pls_analise_parecer_item 
where	nr_seq_item	= nr_seq_analise_conta_item_p;
 
select	max(ie_origem_analise) 
into STRICT	ie_origem_analise_w 
from	pls_analise_conta 
where	nr_sequencia	= nr_seq_analise_p;
 
/*Obter dados da glosa/ocorrência*/
 
select	ie_status, 
	cd_codigo, 
	nr_seq_conta_proc, 
	nr_seq_conta_mat, 
	nr_seq_proc_partic, 
	coalesce(nr_seq_conta,0), 
	nr_seq_ocorrencia, 
	nr_seq_glosa 
into STRICT	ie_status_w, 
	cd_codigo_glosa_oco_w, 
	nr_seq_conta_proc_w, 
	nr_seq_conta_mat_w, 
	nr_seq_proc_partic_w, 
	nr_seq_conta_w,	 
	nr_seq_ocorrencia_w, 
	nr_seq_glosa_w 
from	pls_analise_conta_item 
where 	nr_sequencia	= nr_seq_analise_conta_item_p;
 
/*Verificar se a ocorrência já foi liberado*/
 
if (ie_status_w = 'C') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(175086);
	--'Esta ocorrência é uma ocorrência corrigida. Este tipo de ocorrência não pode ser liberada.'||'#@#@');	 
elsif (ie_status_w = 'E') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(175087);
	--'Esta ocorrência é uma ocorrência que necessita de correção. Este tipo de ocorrência não pode ser liberada.'||'#@#@'); 
elsif (ie_status_w = 'I') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(188572);
	--'Esta ocorrência é uma ocorrência informativa. Este tipo de ocorrência não pode ser liberada.'||'#@#@'); 
end if;
 
/*Atualizado a glosa / ocorrencia*/
 
update	pls_analise_conta_item 
set	ie_status 	= 'P', 
	nm_usuario	= nm_usuario_p, 
	dt_atualizacao 	= clock_timestamp(),	 
	ie_situacao 	= 'I' 
where	nr_sequencia	= nr_seq_analise_conta_item_p 
and	ie_status	<> 'I';
 
/*Verificar se o grupo já foi liberado*/
 
ie_grupo_liberado_w	:= pls_obter_se_grupo_liberado(nm_usuario_p, nr_seq_analise_p, nr_seq_grupo_atual_p);
 
if (ie_grupo_liberado_w = 'S') and (coalesce(ie_consistir_grupo_p,'S') = 'S') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(175091);
	--A ação deste grupo de auditores já foi encerrada.'||'#@#@'); 
end if;
 
if (coalesce(nr_seq_glosa_w,0) > 0) then 
	select	max(nr_seq_motivo_glosa) 
	into STRICT	nr_seq_motivo_glosa_w 
	from	pls_conta_glosa 
	where	nr_sequencia	= nr_seq_glosa_w;
elsif (coalesce(nr_seq_ocorrencia_w,0) > 0) then 
	select	max(nr_seq_ocorrencia) 
	into STRICT	nr_seq_ocor_w 
	from	pls_ocorrencia_benef 
	where	nr_sequencia	= nr_seq_ocorrencia_w;
end if;
 
/*Obter se é um dos auditores do grupo no caso da ocorrencia.*/
 
select count(1) 
into STRICT	qt_grupo_w 
from 	pls_ocorrencia_grupo 
where 	nr_seq_ocorrencia	= nr_seq_ocor_w 
and	ie_situacao		= 'A';
 
if (qt_grupo_w = 0) then 
	ie_se_grupo_auditor_w	:= 'S';
else	 
	select	CASE WHEN count(a.nr_sequencia)=0 THEN 'N'  ELSE 'S' END  
	into STRICT	ie_se_grupo_auditor_w 
	from	pls_membro_grupo_aud a, 
		pls_ocorrencia_grupo b 
	where	a.nr_seq_grupo			= b.nr_seq_grupo 
	and	coalesce(a.nm_usuario_exec,'X')	= nm_usuario_p 
	and	a.nr_seq_grupo			= nr_seq_grupo_atual_p 
	and 	b.nr_seq_ocorrencia 		= nr_seq_ocor_w 
	and	b.ie_situacao			= 'A' 
	and	a.ie_situacao			= 'A';
	 
	if (ie_se_grupo_auditor_w = 'S') then 
		select	max(b.nr_sequencia) 
		into STRICT	nr_seq_ocorrencia_grupo_w 
		from	pls_membro_grupo_aud a, 
			pls_ocorrencia_grupo b 
		where	a.nr_seq_grupo			= b.nr_seq_grupo 
		and	coalesce(a.nm_usuario_exec,'X')	= nm_usuario_p 
		and	a.nr_seq_grupo			= nr_seq_grupo_atual_p 
		and 	b.nr_seq_ocorrencia 		= nr_seq_ocor_w 
		and	b.ie_situacao			= 'A' 
		and	a.ie_situacao			= 'A';
		 
		if (nr_seq_ocorrencia_grupo_w IS NOT NULL AND nr_seq_ocorrencia_grupo_w::text <> '') then 
			select	count(1) 
			into STRICT	qt_grupo_w 
			from	pls_oc_grupo_tipo_desp 
			where	nr_seq_ocorrencia_grupo	= nr_seq_ocorrencia_grupo_w;
		 
			if (qt_grupo_w > 0) then 
				if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then 
					select	max(ie_tipo_despesa) 
					into STRICT	ie_tipo_despesa_proc_w 
					from	pls_conta_proc 
					where	nr_sequencia	= nr_seq_conta_proc_w;
					 
					ie_tipo_despesa_mat_w	:= '';
					ie_tipo_item_w		:= 'P';
				end if;
				 
				if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then 
					select	max(ie_tipo_despesa) 
					into STRICT	ie_tipo_despesa_mat_w 
					from	pls_conta_mat 
					where	nr_sequencia	= nr_seq_conta_mat_w;
					 
					ie_tipo_despesa_proc_w	:= '';
					ie_tipo_item_w		:= 'M';
				end if;
			 
				if (nr_seq_proc_partic_w IS NOT NULL AND nr_seq_proc_partic_w::text <> '') then 
					select	max(b.ie_tipo_despesa) 
					into STRICT	ie_tipo_despesa_proc_w 
					from	pls_conta_proc		b, 
						pls_proc_participante	a 
					where	a.nr_seq_conta_proc	= b.nr_sequencia 
					and	a.nr_sequencia		= nr_seq_proc_partic_w;
					 
					ie_tipo_despesa_mat_w	:= '';
					ie_tipo_item_w		:= 'P';
				end if;
				 
				ie_se_grupo_auditor_w	:= pls_obter_se_grupo_tipo_desp(nr_seq_ocorrencia_grupo_w,coalesce(ie_tipo_despesa_proc_w,ie_tipo_despesa_mat_w),ie_tipo_item_w);
			end if;
		end if;
	end if;
end if;
   
if	((coalesce(nr_seq_ocorrencia_w,0) > 0) and (ie_se_grupo_auditor_w = 'N')) and (coalesce(ie_consistir_grupo_p,'S') = 'S') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(175092);
	--'Você não faz parte do grupo de análise desta glosa/ocorrência. Operação abortada.'||'#@#@'); 
end if;
 
 
/*Consistência dos niveis de liberação do auditor e da ocorrência*/
 
 
if (coalesce(nr_seq_ocorrencia_w,0) > 0) and (coalesce(ie_consistir_grupo_p,'S') = 'S') then 
	/*Nivel de liberação da ocorrencia*/
 
	 
	 
	select	a.nr_seq_nivel_lib 
	into STRICT	nr_seq_nivel_lib_w 
	from	pls_ocorrencia a 
	where	a.nr_sequencia 	= nr_seq_ocor_w;
 
	select	max(nr_nivel_liberacao) 
	into STRICT	nr_nivel_liberacao_w 
	from	pls_nivel_liberacao 
	where	nr_sequencia	= nr_seq_nivel_lib_w;
	 
	 
	 
	begin 
		select	coalesce(a.nr_seq_nivel_lib,b.nr_seq_nivel_lib) 
		into STRICT	nr_seq_nivel_lib_ww 
		from	pls_membro_grupo_aud	a, 
			pls_grupo_auditor	b	 
		where	a.nr_seq_grupo 		= nr_seq_grupo_atual_p 
		and	a.nm_usuario_exec 	= nm_usuario_p 
		and	a.nr_seq_grupo 		= b.nr_sequencia;
	exception 
	when others then 
		nr_seq_nivel_lib_ww	:= null;
	end;
	 
	 
	 
	 
	select	max(nr_nivel_liberacao) 
	into STRICT	nr_nivel_liberacao_ww 
	from	pls_nivel_liberacao 
	where	nr_sequencia	= nr_seq_nivel_lib_ww;
	 
	if (coalesce(nr_nivel_liberacao_ww,0) < coalesce(nr_nivel_liberacao_w,0)) then 
		 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(175094);
		--Você não possui o nivel de liberação necessário para esta ocorrência. Verifique.'||'#@#@'); 
	end if;
end if;
 
/*Verificar se foi uma liberação favorável ou desfavorável*/
 
begin 
	select	CASE WHEN ie_tipo_motivo='S' THEN 'A' WHEN ie_tipo_motivo='N' THEN 'N' END ,	 
		ds_motivo_liberacao 
	into STRICT	ie_tipo_motivo_w,	 
		ds_motivo_liberacao_w 
	from	pls_mot_lib_analise_conta 
	where	nr_sequencia	= nr_seq_mot_liberacao_p;
exception 
when others then 
	ie_tipo_motivo_w := 'N';
	ds_motivo_liberacao_w := null;
end;
 
 
/*Obter quantidade e valor apresentado*/
 
begin 
select	qt_apresentado, 
	vl_total_apres, 
	vl_calculado, 
	nr_sequencia 
into STRICT	qt_apresentado_w,	 
	vl_total_apres_w, 
	vl_calculado_w, 
	nr_seq_w_resumo_conta_w 
from	w_pls_resumo_conta	 
where	(((nr_seq_item = nr_seq_conta_proc_w) 		and ((ie_tipo_item = 'P') or (ie_origem_analise_w = 3 and ie_tipo_item = 'R'))) or 
	(nr_seq_item = nr_seq_conta_mat_w AND ie_tipo_item = 'M') or 
	(nr_seq_partic_proc = nr_seq_proc_partic_w AND ie_tipo_item = 'R')) 
and	nr_seq_analise = nr_seq_analise_p;
exception 
when others then 
	qt_apresentado_w	:= null;
	vl_total_apres_w	:= null;
end;
 
update	pls_analise_conta_item 
set	qt_glosa	= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE CASE WHEN ie_tipo_motivo_w='A' THEN  0 WHEN ie_tipo_motivo_w='N' THEN  qt_glosa END  END , 
	vl_glosa	= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE CASE WHEN ie_tipo_motivo_w='A' THEN  0 WHEN ie_tipo_motivo_w='N' THEN  vl_glosa END  END  
where	nr_sequencia	= nr_seq_analise_conta_item_p;
 
select	vl_glosa, 
	qt_glosa 
into STRICT	vl_glosa_w, 
	qt_glosa_w 
from	pls_analise_conta_item 
where	nr_sequencia 	= nr_seq_analise_conta_item_p;
 
if (coalesce(nr_seq_conta_proc_w,coalesce(nr_seq_conta_mat_w,coalesce(nr_seq_proc_partic_w,0))) > 0) then 
	if (ie_tipo_motivo_w in ('N','L')) then 
		if (coalesce(ie_calculo_base_glosa_w,'N') = 'S') and (coalesce(vl_total_apres_w,0) = 0) then 
			vl_base_glosado_w	:= vl_calculado_w;
		else 
			vl_base_glosado_w	:= vl_total_apres_w;
		end if;
	 
		if	((coalesce(qt_apresentado_w,0) <= coalesce(qt_glosa_w,0)) and (coalesce(qt_glosa_w,0) > 0)) or 
			((coalesce(vl_base_glosado_w,0) <= coalesce(vl_glosa_w,0)) and (coalesce(vl_glosa_w,0) > 0)) then 
			ie_tipo_motivo_w	:= 'N'; --Negado 
		else
			ie_tipo_motivo_w	:= 'L'; --Parcial 
		end if;
	end if;
end if;
 
if (coalesce(nr_seq_conta_proc_w,0) > 0) then 
	nr_seq_item_w	:= nr_seq_conta_proc_w;
	ie_tipo_item_w	:= 'P';
elsif (coalesce(nr_seq_conta_mat_w,0) > 0) then 
	nr_seq_item_w	:= nr_seq_conta_mat_w;
	ie_tipo_item_w	:= 'M';
elsif (coalesce(nr_seq_proc_partic_w,0) > 0) then 
	nr_seq_item_w	:= nr_seq_proc_partic_w;
	ie_tipo_item_w	:= 'R';
end if;
 
/*Obtem o tipo de histórico se é uma liberação de glosa ou de ocorrencia*/
 
select	CASE WHEN coalesce(nr_seq_ocorrencia_w::text, '') = '' THEN  5  ELSE 6 END  
into STRICT	ie_tipo_historico_w
;
 
 
/*Atualizado a glosa / ocorrencia*/
 
update	pls_analise_conta_item 
set	ie_status 	= ie_tipo_motivo_w, 
	nm_usuario	= nm_usuario_p, 
	dt_atualizacao 	= clock_timestamp(), 
	ie_consistencia = coalesce(ie_reconsistencia_p,'N'), 
	ie_situacao	= CASE WHEN ie_tipo_motivo_w='N' THEN  'A' WHEN ie_tipo_motivo_w='L' THEN  'I' WHEN ie_tipo_motivo_w='A' THEN  'I' END  
where	nr_sequencia	= nr_seq_analise_conta_item_p 
and	ie_status	<> 'I';
 
/*Criado o parecer*/
 
insert into pls_analise_parecer_item(nr_sequencia, 
	nr_seq_item, 
	nr_seq_motivo, 
	dt_atualizacao, 
	nm_usuario, 
	dt_atualizacao_nrec, 
	nm_usuario_nrec, 
	ds_parecer, 
	ie_tipo_motivo) 
values (nextval('pls_analise_parecer_item_seq'), 
	nr_seq_analise_conta_item_p, 
	nr_seq_mot_liberacao_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	nm_usuario_p, 
	ds_observacao_p, 
	ie_tipo_motivo_w);
	 
select	CASE WHEN ie_tipo_motivo_w='A' THEN 'Liberação favorável' WHEN ie_tipo_motivo_w='N' THEN 'Liberação desfavorável' WHEN ie_tipo_motivo_w='L' THEN 'Liberação parcial' END  
into STRICT	ds_tipo_motivo_w
;
 
ds_observacao_w := 	'Tipo de liberação: '||chr(13)||chr(10)|| 
					chr(9)||ds_tipo_motivo_w||chr(13)||chr(10)||chr(13)||chr(10)|| 
					'Motivo de liberação:'||chr(13)||chr(10)|| 
					chr(9)||ds_motivo_liberacao_w||chr(13)||chr(10)||chr(13)||chr(10)|| 
					'Observação/Parecer: '||chr(13)||chr(10)|| 
					chr(9)||ds_observacao_p;
			 
/*Adiciona o histórico da ação*/
 
CALL pls_inserir_hist_analise(nr_seq_conta_w, nr_seq_analise_p, ie_tipo_historico_w, 
						nr_seq_item_w, ie_tipo_item_w, nr_seq_ocorrencia_w, 
						nr_seq_glosa_w, ds_observacao_w, nr_seq_grupo_atual_p, 
						nm_usuario_p, cd_estabelecimento_p);
begin			 
select	ie_origem_analise, 
	ie_pre_analise 
into STRICT	ie_origem_analise_w, 
	ie_pre_analise_w 
from	pls_analise_conta 
where	nr_sequencia	= nr_seq_analise_p;
exception 
when others then 
	ie_origem_analise_w	:= null;
	ie_pre_analise_w	:= null;
end;
 
if (coalesce(ie_conta_inteira_p,'N') = 'N') then 
	CALL pls_analise_status_item(nr_seq_conta_w, nr_seq_conta_mat_w, nr_seq_conta_proc_w, nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, nr_seq_proc_partic_w);
end if;
 
if (coalesce(ie_conta_inteira_p,'N') = 'N') then							 
	if (coalesce(ie_origem_analise_w,1) in (1,3)) then	 
		CALL pls_analise_status_pgto(nr_seq_conta_w, nr_seq_conta_mat_w, nr_seq_conta_proc_w, nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, 
						nr_seq_proc_partic_w, null, null, null);
 
	elsif (coalesce(ie_origem_analise_w,1) = 2) then 
		CALL pls_analise_status_pgto_pos(nr_seq_conta_w, nr_seq_conta_mat_w, nr_seq_conta_proc_w, nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p);
	end if;
end if;
 
select	count(1) 
into STRICT	qt_item_analise_w 
from	pls_analise_conta_item 
where	nr_seq_w_resumo_conta	= nr_seq_w_resumo_conta_w;
 
select	count(1) 
into STRICT	qt_item_analise_lib_w 
from	pls_analise_conta_item 
where	nr_seq_w_resumo_conta	= nr_seq_w_resumo_conta_w 
and	ie_status in ('A','I');
 
if (qt_item_analise_lib_w = qt_item_analise_w) then 
	update	w_pls_resumo_conta 
	set	qt_liberado	= qt_apresentado_w, 
		vl_glosa	= 0, 
		ie_pagamento	= 'L' 
	where	nr_sequencia	= nr_seq_w_resumo_conta_w;
end if;
 
/*Se esta em pre-analise*/
 
if (ie_pre_analise_w = 'S') then	/*OS 396221 - Askono - 23-01-11 - Solicitação da reuniao com a Unimed Litoral*/
 
	select	count(1) 
	into STRICT 	qt_ocorr_pre_w 
	from 	pls_analise_conta_item 
	where	nr_seq_analise 	= nr_seq_analise_p 
	and	ie_pre_analise 	= 'S' 
	and	ie_status 	= 'P';
 
	/*se nao existir pendencias da pre-analise, entao muda o status de pre-analise para 'F' */
 
	if (qt_ocorr_pre_w = 0) then 
		update	pls_analise_conta 
		set	ie_status_pre_analise	= 'F' 
		where	nr_sequencia		= nr_seq_analise_p;		
	end if;	
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_conta_liberar_glosa_oc ( nr_seq_analise_conta_item_p bigint, nr_seq_analise_p bigint, nr_seq_mot_liberacao_p bigint, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, nr_seq_grupo_atual_p bigint, ie_consistir_grupo_p text, ie_reconsistencia_p text, ie_conta_inteira_p text) FROM PUBLIC;

