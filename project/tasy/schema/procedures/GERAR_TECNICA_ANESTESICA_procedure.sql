-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tecnica_anestesica ( nr_seq_tec_p bigint, nm_usuario_p text, nr_cirurgia_p bigint, cd_profissional_p text, nr_seq_pepo_p bigint, ds_lista_tec_p text, ds_lista_desc_p INOUT text) AS $body$
DECLARE


qt_descricao_w		smallint;
ds_texto_padrao_w	tecnica_anestesica.ds_texto_padrao_clob%type;
ie_registra_desc_w	varchar(15);
ie_registra_desc_tec_w	varchar(15);

ds_lista_w		varchar(10000);
ds_txt_recursivo_w	text := '';
ds_txt_w		text := '';
ds_txt_var_w		varchar(32000) := ' ';
ds_txt_var2_w		varchar(32000) := ' ';
nr_max_loop_w		smallint := 0;
tamanho_lista_w		bigint;
posicao_virgula_w 	smallint := 0;
nr_seq_tec_w		bigint;
ds_valor_long_w	text;


ds_aux_w		tecnica_anestesica.ds_texto_padrao_clob%type;
nr_seq_anest_desc_w	anestesia_descricao.nr_sequencia%type;

/*
Incluído o parâmetro ds_lista_tec_p em 15/2/11.

Objetivo:
	Reduzir acesso ao servidor em Java Swing, aprimorando a performance;

Funcionamento:
	Caso seja passada somente a sequência, o sistema irá tratar as regras conforme o funcionamento normal / inicial;

	Caso seja passada somente a lista, o sistema irá tratar as regras conforme o funcionamento normal / inicial, porém, para cada sequência da lista;

	Caso sejam passadas a sequência e a lista, significa que é uma chamada recursiva, e, neste caso, o objetivo é tratar a inserção dos vários registros de descrição dentro do próprio objeto PL/SQL.
	Neste sentido foi inserido o tratamento para somente gerar a descrição da técnica caso não haja uma lista informada.
	Quando houver a lista, após o processamento da mesma (chamada recursiva) serão geradas as descrições correspondentes.
*/
BEGIN
ie_registra_desc_w := Obter_Param_Usuario(872, 25, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_registra_desc_w);
ie_registra_desc_tec_w := Obter_Param_Usuario(872, 269, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_registra_desc_tec_w);

if (coalesce(nr_seq_tec_p,0) > 0) then
	begin
	
	insert into cirurgia_tec_anestesica(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nr_seq_tecnica,
		nr_cirurgia,
		dt_inicio,
		dt_final,
		cd_profissional,
		nr_seq_pepo,
		ie_situacao)
	SELECT	nextval('cirurgia_tec_anestesica_seq'),
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_tec_p,
		nr_cirurgia_p,
		clock_timestamp(),
		clock_timestamp(),
		cd_profissional_p,
		nr_seq_pepo_p,
		'A'
	from	tecnica_anestesica
	where	nr_sequencia = nr_seq_tec_p;

	commit;

	begin
	select	count(*)
	into STRICT	qt_descricao_w
	from	anestesia_descricao
	where	nr_cirurgia = nr_cirurgia_p
	and	coalesce(dt_liberacao::text, '') = '';
	exception
	when others then
		qt_descricao_w := 0;
	end;

	if (ie_registra_desc_tec_w = 'S') then
		begin
		qt_descricao_w := 0;
		end;
	end if;

	if (qt_descricao_w = 0) and (ie_registra_desc_w = 'S') and (coalesce(ds_lista_tec_p::text, '') = '') and (ie_registra_desc_tec_w <> 'A')then
		begin
		select	coalesce(coalesce(a.ds_texto_padrao_clob, a.ds_texto_padrao),' ')
		into STRICT	ds_texto_padrao_w
		from	tecnica_anestesica a
		where	nr_sequencia = nr_seq_tec_p;
		
		if ( ds_texto_padrao_w = ' ' ) then
			ds_txt_w := '{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 MS Sans Serif;}}{\colortbl ;\red0\green0\blue0;}\viewkind4\uc1\pard\cf1\lang1046\f0\fs24\par } ';
		else
			ds_txt_w := ds_texto_padrao_w;
		end if;

		select 	nextval('anestesia_descricao_seq')
		into STRICT 	nr_seq_anest_desc_w
		;
		
		insert into anestesia_descricao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_cirurgia,
			cd_responsavel,
			ds_anestesia,
			ie_tipo_descricao,
			nr_seq_pepo,
			ie_situacao,
			nr_seq_tecnica)
		SELECT	nr_seq_anest_desc_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_cirurgia_p,
			cd_profissional_p,
			' ',
			'P',
			nr_seq_pepo_p,
			'A',
			nr_seq_tec_p
		;
		
		if (octet_length(ds_txt_w) < 65528) then
			CALL GRAVAR_VARCHAR_PARA_LONG(substr(ds_txt_w,1, 32764),
									substr(ds_txt_w,32764, 65528),	
									'anestesia_descricao',		
									'ds_anestesia',			
									'where nr_sequencia = :nr_sequencia_p ',
									'nr_sequencia_p='||nr_seq_anest_desc_w);		
		else
			update	anestesia_descricao
			set		ds_anestesia = obter_expressao_dic_objeto(1071511)
			where nr_sequencia = nr_seq_anest_desc_w;
		end if;
		
		ds_lista_desc_p	:= substr(ds_texto_padrao_w,1,255);
		commit;
		end;
	end if;
	end;
--Recebeu uma lista
elsif (ds_lista_tec_p IS NOT NULL AND ds_lista_tec_p::text <> '') and (ie_registra_desc_tec_w = 'A') then
	begin
	ds_lista_w := ds_lista_tec_p;
	
	while(ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') and (nr_max_loop_w < 100) loop
		begin
		
		tamanho_lista_w		:= length(ds_lista_w);
		posicao_virgula_w 	:= position(',' in ds_lista_w);
		
		nr_seq_tec_w 		:= 0;
		
		if (posicao_virgula_w > 0) then
			begin
			nr_seq_tec_w 	:= (substr(ds_lista_w, 1, posicao_virgula_w - 1))::numeric;
			ds_lista_w 	:= substr(ds_lista_w, posicao_virgula_w +1, tamanho_lista_w);
			end;
		elsif (ds_lista_w IS NOT NULL AND ds_lista_w::text <> '') then
			begin
			nr_seq_tec_w 	:= (replace(ds_lista_w, ',', ''))::numeric;
			ds_lista_w 	:= null;
			end;
		end if;
		
		if (coalesce(nr_seq_tec_w, 0) > 0) then
			begin
			
			ds_aux_w := gerar_tecnica_anestesica(nr_seq_tec_w, nm_usuario_p, nr_cirurgia_p, cd_profissional_p, nr_seq_pepo_p, ds_lista_tec_p, ds_aux_w);
			
			select	coalesce(coalesce(a.ds_texto_padrao_clob, a.ds_texto_padrao),' ')
			into STRICT	ds_texto_padrao_w
			from	tecnica_anestesica a
			where	nr_sequencia = nr_seq_tec_w;
			
			ds_txt_recursivo_w := ds_txt_recursivo_w || chr(13) || chr(10) || ds_texto_padrao_w;
			
			if (coalesce(ds_lista_desc_p::text, '') = '') then
				begin
				ds_lista_desc_p := to_char(nr_seq_tec_w);
				end;
			else
				begin
				ds_lista_desc_p := ds_lista_desc_p || ',' || nr_seq_tec_w;
				end;
			end if;
			end;
		end if;
		nr_max_loop_w := nr_max_loop_w +1;
		end;		
	end loop;
	
	if ( ds_txt_recursivo_w = ' ' ) then
		ds_txt_recursivo_w := '{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 MS Sans Serif;}}{\colortbl ;\red0\green0\blue0;}\viewkind4\uc1\pard\cf1\lang1046\f0\fs24\par } ';
	end if;
	
	ds_lista_desc_p := ds_txt_recursivo_w;
	
		select 	nextval('anestesia_descricao_seq')
		into STRICT 	nr_seq_anest_desc_w
		;
		
	--ao final do loop insere o ds_txt_recursivo
	insert into anestesia_descricao(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_cirurgia,
			cd_responsavel,
			ds_anestesia,
			ie_tipo_descricao,
			nr_seq_pepo,
			ie_situacao)
	SELECT	nr_seq_anest_desc_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_cirurgia_p,
			cd_profissional_p,
			' ',
			'P',
			nr_seq_pepo_p,
			'A'
	;
	
	if (octet_length(ds_txt_recursivo_w) < 65528) then
		CALL GRAVAR_VARCHAR_PARA_LONG(substr(ds_txt_recursivo_w,1,32764),
								substr(ds_txt_recursivo_w,32765,65528),			
								'anestesia_descricao',		
								'ds_anestesia',			
								'where nr_sequencia = :nr_sequencia_p ',
								'nr_sequencia_p='||nr_seq_anest_desc_w);	
	
	else
		update	anestesia_descricao
		set		ds_anestesia = obter_expressao_dic_objeto(1071511)
		where nr_sequencia = nr_seq_anest_desc_w;
	end if;
	
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tecnica_anestesica ( nr_seq_tec_p bigint, nm_usuario_p text, nr_cirurgia_p bigint, cd_profissional_p text, nr_seq_pepo_p bigint, ds_lista_tec_p text, ds_lista_desc_p INOUT text) FROM PUBLIC;

