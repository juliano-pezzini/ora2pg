-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_w_ppsc ( ie_tipo_pessoa_p text, dt_referencia_p timestamp, cd_estab_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
dt_referencia_w		timestamp;
nr_titulo_w		bigint;
dt_vencimento_w		timestamp;
dt_mensalidade_w	timestamp;
vl_titulo_w		double precision;
vl_pago_w		double precision;
nr_seq_pagador_w	bigint;
nm_pagador_w		varchar(80);
qt_dias_vencidos_w	bigint;
cd_usuario_plano_w	varchar(30);
vl_saldo_titulo_w	double precision;
nr_seq_cheque_w		w_pls_ppsc.nr_seq_cheque%type;

c01 CURSOR FOR 
	SELECT	null, 
		a.nr_titulo, 
		a.dt_vencimento, 
		b.dt_referencia, 
		a.vl_titulo, 
		a.vl_titulo - obter_saldo_titulo_receber(a.nr_titulo,dt_referencia_w), 
		b.nr_seq_pagador, 
		coalesce(pls_obter_dados_pagador(b.nr_seq_pagador,'N'),obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc)), 
		round(dt_referencia_w - a.dt_pagamento_previsto), 
		pls_obter_carteira_segurado(pls_obter_segurado_pagador(b.nr_seq_pagador)), 
		obter_saldo_titulo_receber(a.nr_titulo,dt_referencia_w) 
	FROM titulo_receber a
LEFT OUTER JOIN pls_mensalidade b ON (a.nr_seq_mensalidade = b.nr_sequencia)
WHERE coalesce(a.dt_liquidacao::text, '') = '' and a.dt_pagamento_previsto < dt_referencia_w and (a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and ((a.cd_estabelecimento = coalesce(cd_estab_p,0)) or (coalesce(cd_estab_p,0) = 0)) and ((exists (SELECT	1 
			from	pls_mensalidade	y, 
				titulo_receber x 
			where	x.nr_seq_mensalidade	= y.nr_sequencia 
			and	y.nr_seq_pagador	= b.nr_seq_pagador 
			and	x.dt_pagamento_previsto <= dt_referencia_w - 60)) or (a.dt_pagamento_previsto <= dt_referencia_w - 60)) and ie_tipo_pessoa_p = 'F' 
	 
union all
 
	select	null, 
		a.nr_titulo, 
		a.dt_vencimento, 
		b.dt_referencia, 
		a.vl_titulo, 
		a.vl_titulo - obter_saldo_titulo_receber(a.nr_titulo,dt_referencia_w), 
		b.nr_seq_pagador, 
		coalesce(pls_obter_dados_pagador(b.nr_seq_pagador,'N'),obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc)), 
		round(dt_referencia_w - a.dt_pagamento_previsto), 
		pls_obter_carteira_segurado(pls_obter_segurado_pagador(b.nr_seq_pagador)), 
		obter_saldo_titulo_receber(a.nr_titulo,dt_referencia_w) 
	FROM titulo_receber a
LEFT OUTER JOIN pls_mensalidade b ON (a.nr_seq_mensalidade = b.nr_sequencia)
WHERE coalesce(a.dt_liquidacao::text, '') = '' and a.dt_pagamento_previsto < dt_referencia_w and (a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ((a.cd_estabelecimento = coalesce(cd_estab_p,0)) or (coalesce(cd_estab_p,0) = 0)) and ((exists (select	1 
			from	pls_mensalidade	y, 
				titulo_receber x 
			where	x.nr_seq_mensalidade	= y.nr_sequencia 
			and	y.nr_seq_pagador	= b.nr_seq_pagador 
			and	x.dt_pagamento_previsto <= dt_referencia_w - 60)) or (a.dt_pagamento_previsto <= dt_referencia_w - 60)) and ie_tipo_pessoa_p = 'J' 
	 
union all
 
	select	null, 
		a.nr_titulo, 
		a.dt_vencimento, 
		a.dt_emissao, 
		a.vl_titulo, 
		a.vl_titulo - obter_saldo_titulo_receber(a.nr_titulo,dt_referencia_w), 
		(b.cd_cooperativa)::numeric  nr_seq_pagador, 
		obter_nome_pf_pj(null,a.cd_cgc), 
		round(dt_referencia_w - a.dt_pagamento_previsto), 
		b.cd_cooperativa, 
		obter_saldo_titulo_receber(a.nr_titulo,dt_referencia_w) 
	from	pls_congenere b, 
		titulo_receber a 
	where	a.cd_cgc	= b.cd_cgc 
	and	coalesce(a.dt_liquidacao::text, '') = '' 
	and	a.dt_pagamento_previsto < dt_referencia_w 
	and	((a.cd_estabelecimento = coalesce(cd_estab_p,0)) or (coalesce(cd_estab_p,0) = 0)) 
	and	exists (select	1 
			from	titulo_receber x 
			where	x.cd_cgc	= a.cd_cgc 
			and	x.dt_pagamento_previsto <= dt_referencia_w - 60) 
	and	ie_tipo_pessoa_p = 'U' 
	
union all
 
	select	a.nr_seq_cheque, 
		null, 
		a.dt_vencimento, 
		a.dt_registro, 
		a.vl_cheque, 
		a.vl_cheque, 
		null, 
		obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc), 
		round(dt_referencia_w - coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 
		null, 
		a.vl_cheque 
	from	cheque_cr a 
	where	coalesce(a.dt_compensacao::text, '') = '' 
	and	coalesce(a.dt_vencimento_atual, a.dt_vencimento) < dt_referencia_w 
	and	(a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') 
	and	((a.cd_estabelecimento = coalesce(cd_estab_p,0)) or (coalesce(cd_estab_p,0) = 0)) 
	and	((exists (select	1 
			from	cheque_cr x 
			where	x.cd_pessoa_fisica = a.cd_pessoa_fisica 
			and	x.dt_vencimento_atual <= dt_referencia_w - 60)) or (coalesce(a.dt_vencimento_atual, a.dt_vencimento) <= dt_referencia_w - 60)) 
	and	ie_tipo_pessoa_p = 'F' 
	
union all
 
	select	a.nr_seq_cheque, 
		null, 
		a.dt_vencimento, 
		a.dt_registro, 
		a.vl_cheque, 
		a.vl_cheque, 
		null, 
		obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc), 
		round(dt_referencia_w - coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 
		null, 
		a.vl_cheque 
	from	cheque_cr a 
	where	coalesce(a.dt_compensacao::text, '') = '' 
	and	coalesce(a.dt_vencimento_atual, a.dt_vencimento) < dt_referencia_w 
	and	(a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') 
	and	((a.cd_estabelecimento = coalesce(cd_estab_p,0)) or (coalesce(cd_estab_p,0) = 0)) 
	and	((exists (select	1 
			from	cheque_cr x 
			where	x.cd_cgc = a.cd_cgc 
			and	x.dt_vencimento_atual <= dt_referencia_w - 60)) or (coalesce(a.dt_vencimento_atual, a.dt_vencimento) <= dt_referencia_w - 60)) 
	and	ie_tipo_pessoa_p = 'J' 
	
union all
 
	select	a.nr_seq_cheque, 
		null, 
		a.dt_vencimento, 
		a.dt_registro, 
		a.vl_cheque, 
		a.vl_cheque, 
		null, 
		obter_nome_pf_pj(a.cd_pessoa_fisica,a.cd_cgc), 
		round(dt_referencia_w - coalesce(a.dt_vencimento_atual, a.dt_vencimento)), 
		null, 
		a.vl_cheque 
	from	cheque_cr a 
	where	coalesce(a.dt_compensacao::text, '') = '' 
	and	coalesce(a.dt_vencimento_atual, a.dt_vencimento) < dt_referencia_w 
	and	((a.cd_estabelecimento = coalesce(cd_estab_p,0)) or (coalesce(cd_estab_p,0) = 0)) 
	and	exists (select	1 
			from	pls_congenere y, 
				cheque_cr x 
			where	y.cd_cgc	= x.cd_cgc 
			and	x.cd_cgc	= a.cd_cgc 
			and	x.dt_vencimento_atual <= dt_referencia_w - 60) 
	and	ie_tipo_pessoa_p = 'U';


BEGIN 
if (dt_referencia_p IS NOT NULL AND dt_referencia_p::text <> '') then 
	delete	from w_pls_ppsc 
	where	nm_usuario	= nm_usuario_p;
 
	dt_referencia_w	:= trunc(last_day(dt_referencia_p),'dd');
	 
	if (ie_tipo_pessoa_p in ('F','J','U')) then 
		open c01;
		loop 
		fetch c01 into	 
			nr_seq_cheque_w, 
			nr_titulo_w, 
			dt_vencimento_w, 
			dt_mensalidade_w, 
			vl_titulo_w, 
			vl_pago_w, 
			nr_seq_pagador_w, 
			nm_pagador_w, 
			qt_dias_vencidos_w, 
			cd_usuario_plano_w, 
			vl_saldo_titulo_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			begin 
			insert into w_pls_ppsc(nr_sequencia, 
				nm_usuario, 
				dt_atualizacao, 
				nm_usuario_nrec, 
				dt_atualizacao_nrec, 
				nr_titulo, 
				qt_dias_vencidos, 
				dt_mes_referencia, 
				dt_vencimento, 
				vl_titulo, 
				vl_pago, 
				nr_seq_pagador, 
				nm_pagador, 
				cd_usuario_plano, 
				cd_estabelecimento, 
				vl_saldo, 
				nr_seq_cheque) 
			values (nextval('w_pls_ppsc_seq'), 
				nm_usuario_p, 
				clock_timestamp(), 
				nm_usuario_p, 
				clock_timestamp(), 
				nr_titulo_w, 
				qt_dias_vencidos_w, 
				dt_mensalidade_w, 
				dt_vencimento_w, 
				vl_titulo_w, 
				vl_pago_w, 
				nr_seq_pagador_w, 
				nm_pagador_w, 
				cd_usuario_plano_w, 
				cd_estabelecimento_p, 
				vl_saldo_titulo_w, 
				nr_seq_cheque_w);
			end;
		end loop;
		close c01;
	end if;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_w_ppsc ( ie_tipo_pessoa_p text, dt_referencia_p timestamp, cd_estab_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

