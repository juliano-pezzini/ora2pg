-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_87_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) AS $body$
DECLARE


_ora2pg_r RECORD;
tb_seq_selecao_w	pls_util_cta_pck.t_number_table;
tb_valido_w		pls_util_cta_pck.t_varchar2_table_1;
tb_observacao_w		pls_util_cta_pck.t_varchar2_table_4000;
nr_idx_w		integer := 0;
nr_seq_usuario_web_w	pls_lote_protocolo_conta.nr_seq_prestador_web%type;
is_usuario_valido_w	boolean := true;
nm_usuario_w		pls_lote_protocolo_conta.nm_usuario%type;

C01 CURSOR(	nr_seq_oc_cta_comb_pc	pls_oc_cta_combinada.nr_sequencia%type) FOR
	SELECT	a.ie_valida_usuario,
		a.ie_considera_webservice
	from	pls_oc_cta_val_usuario a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_pc;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	a.nr_sequencia nr_seq_selecao,
		d.nr_seq_lote_protocolo,
		a.nr_seq_prestador_conv
	from	pls_oc_cta_selecao_imp		x,
		pls_conta_item_equipe_imp	a,
		pls_conta_imp			c,
		pls_protocolo_conta_imp		d
	where	x.ie_valido		= 'S'
	and	x.nr_id_transacao	= nr_id_transacao_pc
	and	a.nr_seq_conta_proc	= x.nr_seq_conta_proc
	and	c.nr_sequencia 		= x.nr_seq_conta
	and 	d.nr_sequencia		= c.nr_seq_protocolo
	and	(a.nr_seq_prestador_conv IS NOT NULL AND a.nr_seq_prestador_conv::text <> '');

C03 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_imp.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		proc.nr_seq_lote_protocolo,
		conta.nr_seq_prest_exec_conv,
		proc.nr_seq_prestador_conv
	from	pls_oc_cta_selecao_imp	sel,
		pls_conta_imp		conta,
		pls_protocolo_conta_imp	proc
	where	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	conta.nr_sequencia	= sel.nr_seq_conta
	and 	proc.nr_sequencia	= conta.nr_seq_protocolo;
BEGIN

-- Deve existir informação da regra para aplicar a validação e se a regra é de Importação
if (nr_seq_combinada_p IS NOT NULL AND nr_seq_combinada_p::text <> '')  then

	for	r_C01_w in C01(nr_seq_combinada_p) loop

		/*Verifica se é para validar a ocorrência*/

		if (r_C01_w.ie_valida_usuario = 'S')	then

			-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
			CALL pls_ocor_imp_pck.atualiza_campo_auxiliar(	'V',
									'N',
									nr_id_transacao_p,
									null);

			-- Incializar as listas para cada regra.
			SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;


			for r_C02_w in C02(nr_id_transacao_p) loop
				is_usuario_valido_w	:= false;

				if (r_C02_w.nr_seq_lote_protocolo IS NOT NULL AND r_C02_w.nr_seq_lote_protocolo::text <> '')  then
					/*Obter dados do lote*/

					select	nr_seq_prestador_web,
						nm_usuario
					into STRICT	nr_seq_usuario_web_w,
						nm_usuario_w
					from	pls_lote_protocolo_conta
					where	nr_sequencia = r_C02_w.nr_seq_lote_protocolo;

					--Valida se é Webservice
					if (nm_usuario_w = 'WebService') and (coalesce(r_C01_w.ie_considera_webservice, 'S') = 'N') then
						is_usuario_valido_w	:= true;
					/*Caso o prestador participante da conta não esteja liberado para o usuário web*/

					elsif (pls_obter_prestador_login(nr_seq_usuario_web_w, r_C02_w.nr_seq_prestador_conv) = 'S') then
						is_usuario_valido_w	:= true;
						close C02;
						exit;
					end if;

				end if;
			end loop;

			if (C02%ISOPEN) then
				close C02;
			end if;


			if (not is_usuario_valido_w) then
				for r_C03_w in C03(nr_id_transacao_p) loop
					if (r_C03_w.nr_seq_lote_protocolo IS NOT NULL AND r_C03_w.nr_seq_lote_protocolo::text <> '')  then
						/*Obter dados do lote*/

						select	nr_seq_prestador_web
						into STRICT	nr_seq_usuario_web_w
						from	pls_lote_protocolo_conta
						where	nr_sequencia = r_C03_w.nr_seq_lote_protocolo;

						/*Caso o prestador executor da conta não esteja liberado para o usuário web*/

						if (pls_obter_prestador_login(nr_seq_usuario_web_w, r_C03_w.nr_seq_prest_exec_conv) = 'N') then
							/*Caso o prestador atendimento da conta não esteja liberado para o usuário web*/

							if (pls_obter_prestador_login(nr_seq_usuario_web_w, r_C03_w.nr_seq_prestador_conv) = 'N') then
								tb_valido_w(nr_idx_w)		:= 'S';
								tb_seq_selecao_w(nr_idx_w)	:= r_C03_w.nr_seq_selecao;
								tb_observacao_w(nr_idx_w)		:= wheb_mensagem_pck.get_texto(785403)|| substr(pls_obter_nm_usuario_web(nr_seq_usuario_web_w),1,20);

								if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
									--Grava as informações na tabela de seleção
									CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
															tb_valido_w,
															tb_observacao_w,
															nr_id_transacao_p,
															'SEQ');
									--limpa as variáveis
									SELECT * FROM pls_ocor_imp_pck.limpar_nested_tables(	tb_seq_selecao_w, tb_valido_w, tb_observacao_w) INTO STRICT _ora2pg_r;
 	tb_seq_selecao_w := _ora2pg_r.tb_nr_seq_selecao_p; tb_valido_w := _ora2pg_r.tb_ie_valido_p; tb_observacao_w := _ora2pg_r.tb_ds_observacao_p;
														nr_idx_w := 0;

								else
									nr_idx_w := nr_idx_w + 1;
								end if;
							end if;
						end if;
					end if;
				end loop;
			end if;

			/*Lança as glosas caso existir registros que não foram gerados*/

			if (nr_idx_w > 0)	then
				--Grava as informações na tabela de seleção
									CALL pls_ocor_imp_pck.gerencia_selecao_validacao(	tb_seq_selecao_w,
															tb_valido_w,
															tb_observacao_w,
															nr_id_transacao_p,
															'SEQ');
			end if;

			CALL pls_ocor_imp_pck.atualiza_campo_valido('V',
								'N',
								ie_regra_excecao_p,
								null,
								nr_id_transacao_p,
								null);

		end if;
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_87_imp ( nr_seq_combinada_p pls_oc_cta_combinada.nr_sequencia%type, ie_regra_excecao_p pls_oc_cta_combinada.ie_excecao%type, nr_id_transacao_p pls_oc_cta_selecao_imp.nr_id_transacao%type) FROM PUBLIC;

