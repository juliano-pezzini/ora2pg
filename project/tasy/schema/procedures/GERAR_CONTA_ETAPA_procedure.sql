-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_conta_etapa ( nr_interno_conta_p bigint, nm_usuario_p text, nr_seq_etapa_p bigint, nr_motivo_devol_p bigint, cd_setor_atendimento_p bigint, ds_observacao_p text, nr_seq_protocolo_p bigint default null) AS $body$
DECLARE


nr_sequencia_w		bigint;
dt_etapa_w		timestamp := clock_timestamp();
nr_motivo_devol_w		bigint;
cd_pessoa_fisica_w	varchar(10);
cd_setor_atendimento_w	integer;
ie_atualiza_setor_usuario_w	varchar(1);
cd_estabelecimento_w		smallint;


BEGIN

select	max(obter_estab_conta_paciente(nr_interno_conta_p))
into STRICT	cd_estabelecimento_w
;

ie_atualiza_setor_usuario_w:=  coalesce(obter_valor_param_usuario(67, 652, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N');

if (coalesce(obter_valor_param_usuario(67, 249, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w),'N') = 'S') then
	select	coalesce(max(dt_entrada_unidade), clock_timestamp())
	into STRICT	dt_etapa_w
	from	atend_paciente_unidade
	where	nr_atendimento	= obter_atendimento_conta(nr_interno_conta_p);
end if;

select	nextval('conta_paciente_etapa_seq')
into STRICT	nr_sequencia_w
;

nr_motivo_devol_w := nr_motivo_devol_p;
if (nr_motivo_devol_w = 0) then
	nr_motivo_devol_w := null;
end if;

cd_setor_atendimento_w := cd_setor_atendimento_p;
if (cd_setor_atendimento_w = 0) then
	cd_setor_atendimento_w := null;
end if;

if (ie_atualiza_setor_usuario_w = 'S') then
	select 	max(cd_setor_atendimento)
	into STRICT	cd_setor_atendimento_w
	from 	usuario
	where 	nm_usuario = nm_usuario_p;
end if;

select 	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from 	usuario
where 	nm_usuario = nm_usuario_p;

insert into conta_paciente_etapa(
			nr_sequencia,
			nr_interno_conta,
			dt_atualizacao,
			nm_usuario,
			dt_etapa,
			nr_seq_etapa,
			cd_setor_atendimento,
			cd_pessoa_fisica,
			nr_seq_motivo_dev,
			ds_observacao,
			nr_lote_barras,
			nr_seq_protocolo,
			nm_usuario_nrec,
			dt_atualizacao_nrec)
		values (nr_sequencia_w,
			nr_interno_conta_p,
			clock_timestamp(),
			nm_usuario_p,
			dt_etapa_w,
			nr_seq_etapa_p,
			cd_setor_atendimento_w,
			cd_pessoa_fisica_w,
			nr_motivo_devol_w,
			substr(ds_observacao_p,1,2000),
			null,
			CASE WHEN coalesce(nr_seq_protocolo_p,0)=0 THEN null  ELSE nr_seq_protocolo_p END ,
			nm_usuario_p,
			clock_timestamp());

CALL atualiza_final_etapa_conta(nr_sequencia_w, nm_usuario_p);

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_conta_etapa ( nr_interno_conta_p bigint, nm_usuario_p text, nr_seq_etapa_p bigint, nr_motivo_devol_p bigint, cd_setor_atendimento_p bigint, ds_observacao_p text, nr_seq_protocolo_p bigint default null) FROM PUBLIC;

