-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_cons_inclusao_benef_contr ( nr_seq_segurado_p bigint, nr_seq_benef_proposta_p bigint, nr_seq_contrato_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


qt_registros_w			bigint;
ds_erro_w			varchar(255);
ie_titularidade_w		varchar(10);
nm_beneficiario_w		varchar(255);
ie_pessoa_contrato_w		varchar(10);
ie_migracao_w			varchar(10);
cd_pessoa_fisica_w		varchar(10);
ie_novo_beneficiario_w		varchar(10);
ie_tipo_pessoa_contrato_w	varchar(10);
nr_contrato_w			bigint;
dt_contratacao_w		timestamp;
nr_seq_parentesco_w		bigint;
ie_grau_parentesco_w		bigint;
qt_dias_w			bigint;
dt_nascimento_w			timestamp;
dt_casamento_w			timestamp;
nr_seq_titular_contrato_w	bigint;
dt_rescisao_titular_w		timestamp;
dt_rescisao_w			timestamp;
nr_seq_beneficiario_ant_w	bigint;
qt_dias_rescisao_mig_w		bigint;
ie_tipo_proposta_w		smallint;
cd_matricula_est_w		varchar(30);
nr_seq_contrato_w		bigint;
ie_consistir_matricula_est_w	varchar(1);
nr_seq_beneficiario_proposta_w	bigint;
qt_idade_w			bigint;
nr_seq_plano_w			pls_plano.nr_sequencia%type;
ie_situacao_plano_w		pls_plano.ie_situacao%type;
qt_cons_dias_incl_cong_filho_w	pls_parametros.qt_cons_dias_incl_cong_filho%type;
nr_seq_motivo_susp_w		pls_plano.nr_seq_motivo_susp%type;
ie_permite_inclusao_w		pls_motivo_susp_prod.ie_permite_inclusao%type;
ie_estado_civil_w		pessoa_fisica.ie_estado_civil%type;
ie_exclusivo_benef_remido_w	pls_contrato.ie_exclusivo_benef_remido%type;


BEGIN
ds_erro_w	:= null;
ie_migracao_w	:= 'N';

select	max(ie_pessoa_contrato),
	coalesce(max(qt_dias_rescisao_mig),0),
	coalesce(max(ie_consistir_matricula_est),'N')
into STRICT	ie_pessoa_contrato_w,
	qt_dias_rescisao_mig_w,
	ie_consistir_matricula_est_w
from	pls_parametros
where	cd_estabelecimento	= cd_estabelecimento_p;

nr_contrato_w	:= null;
nr_seq_titular_contrato_w	:= null;

if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
	select	CASE WHEN coalesce(a.nr_seq_titular::text, '') = '' THEN 'T'  ELSE 'D' END ,
		substr(b.nm_pessoa_fisica,1,100) nm_pessoa_fisica,
		CASE WHEN coalesce(a.dt_migracao::text, '') = '' THEN 'N'  ELSE 'S' END ,
		b.cd_pessoa_fisica,
		a.nr_seq_plano,
		a.nr_seq_parentesco,
		b.ie_estado_civil
	into STRICT	ie_titularidade_w,
		nm_beneficiario_w,
		ie_migracao_w,
		cd_pessoa_fisica_w,
		nr_seq_plano_w,
		nr_seq_parentesco_w,
		ie_estado_civil_w
	from	pessoa_fisica	b,
		pls_segurado	a
	where	a.cd_pessoa_fisica	= b.cd_pessoa_fisica
	and	a.nr_sequencia		= nr_seq_segurado_p;
	
	dt_contratacao_w	:= dt_referencia_p;
	ie_tipo_proposta_w	:= 0;
	
elsif (nr_seq_benef_proposta_p IS NOT NULL AND nr_seq_benef_proposta_p::text <> '') then
	select	CASE WHEN coalesce(nr_seq_titular::text, '') = '' THEN CASE WHEN coalesce(nr_seq_titular_contrato::text, '') = '' THEN 'T'  ELSE 'D' END   ELSE 'D' END ,
		b.nm_pessoa_fisica,
		CASE WHEN coalesce(a.nr_seq_beneficiario::text, '') = '' THEN 'N'  ELSE 'S' END ,
		b.cd_pessoa_fisica,
		c.nr_seq_contrato,
		coalesce(a.dt_contratacao,dt_inicio_proposta),
		a.nr_seq_parentesco,
		b.dt_nascimento,
		b.dt_emissao_cert_casamento,
		a.nr_seq_titular_contrato,
		a.nr_seq_beneficiario,
		c.ie_tipo_proposta,
		a.cd_matricula_est,
		a.nr_seq_beneficiario,
		a.nr_seq_plano,
		b.ie_estado_civil
	into STRICT	ie_titularidade_w,
		nm_beneficiario_w,
		ie_migracao_w,
		cd_pessoa_fisica_w,
		nr_contrato_w,
		dt_contratacao_w,
		nr_seq_parentesco_w,
		dt_nascimento_w,
		dt_casamento_w,
		nr_seq_titular_contrato_w,
		nr_seq_beneficiario_ant_w,
		ie_tipo_proposta_w,
		cd_matricula_est_w,
		nr_seq_beneficiario_proposta_w,
		nr_seq_plano_w,
		ie_estado_civil_w
	from	pessoa_fisica			b,
		pls_proposta_beneficiario	a,
		pls_proposta_adesao		c
	where	a.cd_beneficiario		= b.cd_pessoa_fisica
	and	a.nr_seq_proposta		= c.nr_sequencia
	and	a.nr_sequencia			= nr_seq_benef_proposta_p;
end if;

qt_registros_w	:= 0;

qt_idade_w := pls_obter_idade_segurado(nr_seq_segurado_p,dt_referencia_p,'A');

if (nr_seq_contrato_p IS NOT NULL AND nr_seq_contrato_p::text <> '') then
	select	count(1)
	into STRICT	qt_registros_w
	from	pls_restricao_inclusao_seg
	where	nr_seq_contrato	= nr_seq_contrato_p
	and	dt_referencia_p between coalesce(dt_inicio_vigencia,dt_referencia_p) and coalesce(dt_fim_vigencia,dt_referencia_p)
	and	((ie_titularidade	= ie_titularidade_w) or (ie_titularidade = 'A'))
	and (qt_idade_w  between coalesce(qt_idade_inicial,qt_idade_w) and coalesce(qt_idade_final,qt_idade_w))
	and (nr_seq_parentesco = nr_seq_parentesco_w or coalesce(nr_seq_parentesco::text, '') = '')
	and (ie_estado_civil = ie_estado_civil_w or coalesce(ie_estado_civil::text, '') = '');
	
	if (qt_registros_w	> 0) then
		ds_erro_w	:= wheb_mensagem_pck.get_texto(280619, 'NM_BENEFICIARIO_P=' || nm_beneficiario_w);
		--Mensagem: Beneficiario(a) NM_BENEFICIARIO_P nao pode ser incluido(a) no contrato, favor verificar as regras de restricoes de  inclusao do contrato;
	end if;
end if;

if (ie_pessoa_contrato_w = 'S') and (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	
	if (nr_seq_segurado_p IS NOT NULL AND nr_seq_segurado_p::text <> '') then
		
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_segurado
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	cd_estabelecimento	= cd_estabelecimento_p
		and coalesce(dt_cancelamento::text, '') = ''
		and	((coalesce(dt_rescisao::text, '') = '') or ((dt_rescisao IS NOT NULL AND dt_rescisao::text <> '') and dt_rescisao > dt_contratacao_w))
		and	ie_tipo_segurado	in ('B','R')
		and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '')
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and	((nr_sequencia		<> nr_seq_segurado_p) or (coalesce(nr_seq_segurado_p::text, '') = ''));
		
	elsif (nr_seq_benef_proposta_p IS NOT NULL AND nr_seq_benef_proposta_p::text <> '') then
	
		select	count(1)
		into STRICT	qt_registros_w
		from	pls_segurado
		where	cd_pessoa_fisica	= cd_pessoa_fisica_w
		and	cd_estabelecimento	= cd_estabelecimento_p
		and	((coalesce(dt_rescisao::text, '') = '') or ((dt_rescisao IS NOT NULL AND dt_rescisao::text <> '') and dt_rescisao > dt_contratacao_w))
		and	ie_tipo_segurado	in ('B','R')
		and	(nr_seq_contrato IS NOT NULL AND nr_seq_contrato::text <> '')
		and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
		and coalesce(dt_cancelamento::text, '') = '';
		
		--Caso for Propostas de ades?o do tipo ( Migrac?o + Ades?o a um contrato existente, Migrac?o a um contrato existente)

		--Vai existir sempre 1 beneficiario ativo
		if (ie_tipo_proposta_w in (4,8) and qt_registros_w = 1) then
			qt_registros_w := 0;
		end if;
	
	end if;
	
	if (qt_registros_w > 0) then
		ds_erro_w	:= ds_erro_w || nm_beneficiario_w || wheb_mensagem_pck.get_texto(280624); --Mensagem: ja esta ativo como beneficiario em algum contrato de plano de saude;
	end if;
end if;

if (nr_seq_benef_proposta_p IS NOT NULL AND nr_seq_benef_proposta_p::text <> '') and (coalesce(ds_erro_w::text, '') = '') then
	if (nr_contrato_w IS NOT NULL AND nr_contrato_w::text <> '') then
		select	coalesce(ie_novo_beneficiario,'S'),
			CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END ,
			nr_sequencia,
      coalesce(ie_exclusivo_benef_remido, 'N')
		into STRICT	ie_novo_beneficiario_w,
			ie_tipo_pessoa_contrato_w,
			nr_seq_contrato_w,
      ie_exclusivo_benef_remido_w
		from	pls_contrato
		where	nr_contrato	= nr_contrato_w;

		if (coalesce(nr_seq_titular_contrato_w,0) = 0)and (ie_exclusivo_benef_remido_w = 'S')then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(1106080);
		end if;
		
		select	coalesce(max(ie_situacao),'A'),
			coalesce(max(nr_seq_motivo_susp),0)
		into STRICT	ie_situacao_plano_w,
			nr_seq_motivo_susp_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;
		
		if (nr_seq_motivo_susp_w > 0) then
			select	max(ie_permite_inclusao)
			into STRICT	ie_permite_inclusao_w
			from	pls_motivo_susp_prod
			where	nr_sequencia = nr_seq_motivo_susp_w;
		end if;
		
		if	((ie_tipo_pessoa_contrato_w = 'PJ' AND ie_novo_beneficiario_w = 'N') or (ie_situacao_plano_w = 'S')) then
			
			begin
			select	coalesce(qt_cons_dias_incl_cong_filho,0)
			into STRICT	qt_cons_dias_incl_cong_filho_w
			from	pls_parametros
			where	cd_estabelecimento = cd_estabelecimento_p;
			exception
			when others then
				qt_cons_dias_incl_cong_filho_w := 0;
			end;
			
			if (nr_seq_motivo_susp_w > 0 and coalesce(ie_permite_inclusao_w,'N') = 'N') or (nr_seq_motivo_susp_w = 0) then
				
				if (ie_titularidade_w = 'T') then
					ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280626);
					--Mensagem: N?o e possivel incluir titulares para o contrato;
				else
					select	max(ie_grau_parentesco)
					into STRICT	ie_grau_parentesco_w
					from	grau_parentesco
					where	nr_sequencia	= nr_seq_parentesco_w;
					
					if (ie_grau_parentesco_w = 3) then
						if (qt_cons_dias_incl_cong_filho_w > 0) then
							qt_dias_w	:= dt_contratacao_w - dt_nascimento_w;
							if (qt_dias_w > qt_cons_dias_incl_cong_filho_w) then
								ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280629, 'QT_DIAS_P=' || qt_dias_w);
								--Mensagem: N?o e possivel incluir filho nascido a mais de 30 dias! Dias nascimento: QT_DIAS_P;
							end if;
						end if;
					elsif (ie_grau_parentesco_w = 4) then
						if (qt_cons_dias_incl_cong_filho_w > 0) then
							qt_dias_w	:= dt_contratacao_w - dt_casamento_w;
							if (qt_dias_w > qt_cons_dias_incl_cong_filho_w) then
								ds_erro_w	:= ds_erro_w ||  wheb_mensagem_pck.get_texto(280632, 'QT_DIAS_P=' || qt_dias_w);
								--Mensagem: N?o e possivel incluir conjuge casado a mais de 30 dias! Dias casamento: QT_DIAS_P;
							elsif (coalesce(dt_casamento_w::text, '') = '') then
								ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280633);
								--Mensagem: N?o e possivel incluir conjuge sem data de casamento informado;
							end if;
						end if;
					else
						ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280636);
						--Mensagem: N?o e possivel incluir dependentes que n?o s?o Filhos ou Conjuge do titular;
					end if;
				end if;
				
				if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
					if (nr_seq_motivo_susp_w = 0) then
						ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(1051616); --Verifique a opc?o "Permite cadastrar novos beneficiarios no contrato" no contrato
					else
						ds_erro_w := ds_erro_w || wheb_mensagem_pck.get_texto(1051617); --O produto selecionado esta com a comercializac?o suspensa. Favor verifique.
					end if;
				end if;
				
			end if;
		end if;
	end if;
	
	if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
		select	dt_rescisao
		into STRICT	dt_rescisao_titular_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_titular_contrato_w;
		
		if (dt_rescisao_titular_w IS NOT NULL AND dt_rescisao_titular_w::text <> '') and (trunc(dt_contratacao_w,'dd')	>= trunc(dt_rescisao_titular_w,'dd')) then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280637, 'NM_BENEFICIARIO_P=' || nm_beneficiario_w);
			--Mensagem: Titular do beneficiario NM_BENEFICIARIO_P esta rescindido;
		end if;
	end if;
	
	if (nr_seq_beneficiario_ant_w IS NOT NULL AND nr_seq_beneficiario_ant_w::text <> '') then
		select	dt_rescisao
		into STRICT	dt_rescisao_w
		from	pls_segurado
		where	nr_sequencia	= nr_seq_beneficiario_ant_w;
		
		if (dt_rescisao_w IS NOT NULL AND dt_rescisao_w::text <> '') then
			if	((trunc(dt_rescisao_w,'dd') + qt_dias_rescisao_mig_w) < trunc(dt_contratacao_w,'dd')) then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280638, 'NM_BENEFICIARIO_P=' || nm_beneficiario_w ||
												';QT_DIAS_RECISAO_P=' || qt_dias_rescisao_mig_w);
				--Mensagem : Beneficiario NM_BENEFICIARIO_P n?o pode ser migrado, pois rescindiu a mais de QT_DIAS_RECISAO_P dias;
			end if;
		end if;
	end if;
	
	if (ie_tipo_proposta_w in (2,8)) and (cd_matricula_est_w IS NOT NULL AND cd_matricula_est_w::text <> '') and (ie_consistir_matricula_est_w = 'S') then
		if (nr_seq_titular_contrato_w IS NOT NULL AND nr_seq_titular_contrato_w::text <> '') then
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_segurado
			where	nr_sequencia	= nr_seq_titular_contrato_w
			and	cd_matricula_estipulante = cd_matricula_est_w;
			
			if (qt_registros_w = 0) then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280639, 'NM_BENEFICIARIO_P=' || nm_beneficiario_w);
				--Mensagem: Beneficiario NM_BENEFICIARIO_P n?o pode ser contratado, pois a matricula estipulante e diferente do titular;
			end if;
		else
			select	count(1)
			into STRICT	qt_registros_w
			from	pls_segurado
			where	nr_seq_contrato	= nr_seq_contrato_w
			and	cd_matricula_estipulante = cd_matricula_est_w
			and	coalesce(nr_seq_titular::text, '') = ''
			and coalesce(dt_cancelamento::text, '') = '';
			
			if (qt_registros_w > 0) then
				ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280640, 'NM_BENEFICIARIO_P=' || nm_beneficiario_w ||
												';CD_MATRICULA_EST_P=' || cd_matricula_est_w);
				--Mensagem: Beneficiario NM_BENEFICIARIO_P n?o pode ser contratado, pois ja existe beneficiario no contrato com a matricula CD_MATRICULA_EST_P;
			end if;
		end if;
	end if;
	
	if (ie_tipo_proposta_w in (3,4)) then
		if (coalesce(nr_seq_beneficiario_proposta_w::text, '') = '') then
			ds_erro_w	:= ds_erro_w || wheb_mensagem_pck.get_texto(280642, 'NM_BENEFICIARIO_P=' || nm_beneficiario_w);
			--Mensagem: Beneficiario NM_BENEFICIARIO_P n?o possui um beneficiario de origem vinculado;
		end if;
	end if;
end if;

ds_erro_p	:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_cons_inclusao_benef_contr ( nr_seq_segurado_p bigint, nr_seq_benef_proposta_p bigint, nr_seq_contrato_p bigint, dt_referencia_p timestamp, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

