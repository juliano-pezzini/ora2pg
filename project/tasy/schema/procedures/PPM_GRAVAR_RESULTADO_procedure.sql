-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ppm_gravar_resultado (nr_seq_metrica_p bigint, dt_resultado_p timestamp, vl_calculado_p bigint, vl_montante_p bigint, vl_individual_p bigint, nm_usuario_p text) AS $body$
DECLARE


/*
vl_calculado_p	= Representa o valor do % calculado pela rotina
vl_montante_p	= Representa a quantidade total do indicador (exemplo de um indicador de Defeitos em relação ao total de OSs do usuário, então, este parâmetro recebe o valor total de OSs do usuário)
vl_individual_p	= Representa o valor individual do indicador (exemplo, a quantidade de defeitos deste usuário no mês)
*/
nr_seq_result_w		bigint;
qt_result_w		bigint;
ie_tipo_metrica_w	ppm_metrica.ie_tipo%type;
ie_informacao_w		ppm_metrica.ie_informacao%type;
dt_fim_ano_w		timestamp;
vl_calculado_w		bigint;
vl_montante_w		bigint;
vl_individual_w		bigint;
dt_referencia_w		timestamp;
qt_registro_w		bigint;
nr_seq_acumulado_w	bigint;
dt_resultado_w		timestamp;


BEGIN

select	a.ie_tipo,
	a.ie_informacao
into STRICT	ie_tipo_metrica_w,
	ie_informacao_w
from	ppm_metrica a,
	ppm_objetivo_metrica b
where	a.nr_sequencia = b.nr_seq_metrica
and	b.nr_sequencia = nr_seq_metrica_p;

--A data do resultado, é sempre o primeiro dia do mês referente, pois o último dia do ano, é o acumulado e gerava problema com o resultado do mês de dezembro.
dt_resultado_w	:= trunc(PKG_DATE_UTILS.start_of(dt_resultado_p,'MONTH'));

if (ie_tipo_metrica_w = 'M') then

	select	max(nr_sequencia)
	into STRICT	nr_seq_result_w
	from	ppm_objetivo_result
	where	nr_seq_metrica = nr_seq_metrica_p
	and	trunc(dt_referencia) = dt_resultado_w;

elsif (ie_tipo_metrica_w = 'Q') then

	select	max(nr_sequencia)
	into STRICT	nr_seq_result_w
	from	ppm_objetivo_result
	where	nr_seq_metrica = nr_seq_metrica_p
	and	ps_obter_forecasting_quarter(dt_referencia) = ps_obter_forecasting_quarter(dt_resultado_p);

end if;

dt_fim_ano_w	:= PKG_DATE_UTILS.end_of(to_date('31/12/' || to_char(dt_resultado_p,'yyyy'),'dd/mm/yyyy'),'DAY');

select	max(nr_sequencia)
into STRICT	nr_seq_acumulado_w
from	ppm_objetivo_result a
where	a.nr_seq_metrica	= nr_seq_metrica_p
and	dt_referencia		= dt_fim_ano_w;

if (coalesce(nr_seq_result_w,0) = 0) then

	select	nextval('ppm_objetivo_result_seq')
	into STRICT	nr_seq_result_w
	;

	insert into ppm_objetivo_result(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_metrica,
		dt_referencia,
		vl_resultado_calc,
		vl_resultado_manual,
		vl_montante,
		vl_individual)
	values (nr_seq_result_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_metrica_p,
		dt_resultado_w,
		coalesce(vl_calculado_p,0),
		null,
		vl_montante_p,
		vl_individual_p);

	insert into ppm_objetivo_result_ind(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_result,
		nr_seq_metrica)
	values (nextval('ppm_objetivo_result_ind_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_result_w,
		nr_seq_metrica_p);

	insert into ppm_objetivo_result_gestor(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_result,
		nr_seq_metrica)
	values (nextval('ppm_objetivo_result_gestor_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_result_w,
		nr_seq_metrica_p);

elsif (ie_tipo_metrica_w = 'M') or
	(ie_tipo_metrica_w = 'Q' AND vl_calculado_p <> 0) then

	update	ppm_objetivo_result
	set	vl_resultado_calc 	= vl_calculado_p,
		vl_montante		= vl_montante_p,
		vl_individual		= vl_individual_p
	where	nr_sequencia 		= nr_seq_result_w;

end if;

if (dt_resultado_p < dt_fim_ano_w) then
	dt_referencia_w	:= clock_timestamp();
else
	dt_referencia_w	:= dt_fim_ano_w;
end if;

select	count(1),
	sum(vl_montante),
	sum(vl_individual)
into STRICT	qt_registro_w,
	vl_montante_w,
	vl_individual_w
from	ppm_objetivo_result a
where	a.nr_seq_metrica = nr_seq_metrica_p
and	trunc(a.dt_referencia,'year') = trunc(dt_referencia_w,'year')
and	a.nr_sequencia	<> coalesce(nr_seq_acumulado_w,0);

if (coalesce(ie_informacao_w,'P') = 'P') then

	if (coalesce(vl_montante_w::text, '') = '') and --Se ambos forem 0, faz a média dos resultados no ano
		(coalesce(vl_individual_w::text, '') = '') then
		select	avg(vl_resultado_calc)
		into STRICT	vl_calculado_w
		from	ppm_objetivo_result a
		where	a.nr_seq_metrica = nr_seq_metrica_p
		and	trunc(a.dt_referencia,'year') = trunc(dt_referencia_w,'year')
		and	a.nr_sequencia	<> coalesce(nr_seq_acumulado_w,0);
	else
		vl_calculado_w	:= dividir(vl_individual_w,vl_montante_w) * 100;
	end if;
else
	vl_calculado_w	:= dividir(vl_montante_w,qt_registro_w);
end if;

/* Inserir linha de acumulado caso não exista para essa métrica */

if (coalesce(nr_seq_acumulado_w::text, '') = '') then
	select	nextval('ppm_objetivo_result_seq')
	into STRICT	nr_seq_result_w
	;

	if (vl_calculado_w IS NOT NULL AND vl_calculado_w::text <> '') then

		insert into ppm_objetivo_result(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_metrica,
			dt_referencia,
			vl_resultado_calc,
			vl_resultado_manual,
			vl_montante,
			vl_individual)
		values (nr_seq_result_w,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_metrica_p,
			dt_fim_ano_w,
			coalesce(vl_calculado_w,0),
			null,
			vl_montante_w,
			vl_individual_w);

		insert into ppm_objetivo_result_ind(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_result,
			nr_seq_metrica)
		values (nextval('ppm_objetivo_result_ind_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_result_w,
			nr_seq_metrica_p);

		insert into ppm_objetivo_result_gestor(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_result,
			nr_seq_metrica)
		values (nextval('ppm_objetivo_result_gestor_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_result_w,
			nr_seq_metrica_p);
	end if;
else
	update	ppm_objetivo_result
	set	vl_resultado_calc 	= vl_calculado_w,
		vl_montante		= vl_montante_w,
		vl_individual		= vl_individual_w
	where	nr_sequencia 		= nr_seq_acumulado_w;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ppm_gravar_resultado (nr_seq_metrica_p bigint, dt_resultado_p timestamp, vl_calculado_p bigint, vl_montante_p bigint, vl_individual_p bigint, nm_usuario_p text) FROM PUBLIC;

