-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_36 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Aplicar a valida??o de  exig?ncia de m?dico executor da conta ou 
participante com m?dico informado
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[ X]  Objetos do dicion?rio [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relat?rios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Altera??es:
------------------------------------------------------------------------------------------------------------------

dlehmkuhl OS 688483 - 14/04/2014 -

Altera??o:	Modificada a forma de trabalho em rela??o a atualiza??o dos campos de controle
	que basicamente decidem se a ocorr?ncia ser? ou n?o gerada. Foi feita tamb?m a 
	substitui??o da rotina obterX_seX_geraX.

Motivo:	Necess?rio realizar essas altera??es para corrigir bugs principalmente no que se
	refere a quest?o de aplica??o de filtros (passo anterior ao da valida??o). Tamb?m
	tivemos um foco especial em performance, visto que a mesma precisou ser melhorada
	para n?o inviabilizar a nova solicita??o que diz que a exce??o deve verificar todo
	o atendimento.
------------------------------------------------------------------------------------------------------------------

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_sql_condicao_w	varchar(1000);
ds_sql_w		varchar(4000);
nr_seq_selecao_w	dbms_sql.number_table;
ds_observacao_w		dbms_sql.varchar2_table;
ie_valido_w		dbms_sql.varchar2_table;
v_cur			pls_util_pck.t_cursor;

-- Informa??es da valida??o de n?o-utiliza??o de item autorizado
C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.nr_sequencia	nr_seq_validacao,
		a.ie_exige_medico,
		a.ie_validar_partic_prest
	from	pls_oc_cta_val_exig_med a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type,
		ie_evento_pc		pls_oc_cta_combinada.ie_evento%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo <> 'I'
	and	((coalesce(proc.cd_medico_executor::text, '') = '') and (	SELECT count(1) 
			from 	pls_proc_participante part
			where 	proc.nr_sequencia = part.nr_seq_conta_proc
			and	(part.cd_medico IS NOT NULL AND part.cd_medico::text <> '')) = 0  
		)
	and	ie_evento_pc	<> 'IMP'
	
union all

	select	sel.nr_sequencia nr_seq_selecao, 
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo <> 'I'
	and	((coalesce(proc.cd_medico_executor_imp::text, '') = '') and (	select count(1) 
			from 	pls_proc_participante part
			where 	proc.nr_sequencia = part.nr_seq_conta_proc
			and	(part.cd_medico IS NOT NULL AND part.cd_medico::text <> '')) = 0  
		)
	and	ie_evento_pc	= 'IMP'
	
union all

	select	sel.nr_sequencia nr_seq_selecao, 
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo = 'I'
	and (	select	count(1)
			from	pls_proc_participante part
			where	part.nr_seq_conta_proc	= proc.nr_sequencia
			and	coalesce(nr_seq_prest_inter::text, '') = '') > 0  		
	
union all

	select	sel.nr_sequencia nr_seq_selecao, 
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo = 'I'
	and	(	select	count(1)
			from	pls_proc_participante part,
				pls_prestador_intercambio prest
			where	prest.nr_sequencia	= part.nr_seq_prest_inter
			and	part.nr_seq_conta_proc	= proc.nr_sequencia
			and	(
				((coalesce(prest.cd_pessoa_fisica::text, '') = '') and (coalesce(prest.cd_cgc_intercambio::text, '') = '')) or
				((prest.cd_pessoa_fisica IS NOT NULL AND prest.cd_pessoa_fisica::text <> '') and (coalesce(prest.nr_cpf::text, '') = ''))
				)) > 0; -- adicionado o or para situacoes em que o nr_seq_prest_inter era pessoa juridica e estava procurando cpf, validando incorretamente algumas situacoes
C03 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type,
		ie_evento_pc		pls_oc_cta_combinada.ie_evento%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo <> 'I'
	and	((coalesce(proc.cd_medico_executor::text, '') = '') and (	SELECT count(1) 
			from 	pls_proc_participante part
			where 	proc.nr_sequencia = part.nr_seq_conta_proc
			and	(part.cd_medico IS NOT NULL AND part.cd_medico::text <> '')) = 0  
		)
	and	ie_evento_pc	<> 'IMP'
	
union all

	select	sel.nr_sequencia nr_seq_selecao, 
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo <> 'I'
	and	((coalesce(proc.cd_medico_executor_imp::text, '') = '') and (	select count(1) 
			from 	pls_proc_participante part
			where 	proc.nr_sequencia = part.nr_seq_conta_proc
			and	(part.cd_medico IS NOT NULL AND part.cd_medico::text <> '')) = 0  
		)
	and	ie_evento_pc	= 'IMP'
	
union all

	select	sel.nr_sequencia nr_seq_selecao, 
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo = 'I'
	and (	select	count(1)
			from	pls_proc_participante part
			where	part.nr_seq_conta_proc	= proc.nr_sequencia
			and	coalesce(nr_seq_prest_inter::text, '') = '') > 0  		
	
union all

	select	sel.nr_sequencia nr_seq_selecao, 
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc
	where	sel.nr_seq_conta_proc = proc.nr_sequencia
	and	sel.nr_id_transacao = nr_id_transacao_pc 
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo = 'I'
	and	(	select	count(1)
			from	pls_proc_participante part,
				pls_prestador_intercambio prest
			where	prest.nr_sequencia	= part.nr_seq_prest_inter
			and	part.nr_seq_conta_proc	= proc.nr_sequencia
			and	(
				((coalesce(prest.cd_pessoa_fisica::text, '') = '') and (coalesce(prest.cd_cgc_intercambio::text, '') = '')) or
				((prest.cd_pessoa_fisica IS NOT NULL AND prest.cd_pessoa_fisica::text <> '') and (coalesce(prest.nr_cpf::text, '') = ''))
				)) > 0 -- adicionado o or para situacoes em que o nr_seq_prest_inter era a pessoa juridica e estava procurando cpf, validando incorretamente algumas situacoes
	
union all

	select	sel.nr_sequencia nr_seq_selecao, 
		'S' ie_registro_valido,
		null ds_obervacao 
	from	pls_oc_cta_selecao_ocor_v sel,
		pls_conta_proc_v proc,
		ptu_nota_servico serv		
	where	sel.nr_seq_conta_proc = proc.nr_sequencia	
	and 	serv.nr_seq_conta_proc = proc.nr_sequencia	
	and	sel.nr_id_transacao = nr_id_transacao_pc
	and	serv.ie_tipo_pessoa_prestador = 'J' --para os casos onde o prestador da nota de servico e PJ, mas que tem um participante pf
	and	sel.ie_valido = 'S' 
	and	proc.ie_tipo_protocolo = 'I'
	and (	select	count(1)
			from	pls_proc_participante part,
				pls_prestador_intercambio prest
			where part.nr_seq_conta_proc  = proc.nr_sequencia
			and coalesce(prest.cd_pessoa_fisica::text, '') = ''
			and serv.nm_profissional_prestador = prest.nm_prestador) > 0; --validacao utilizada para encontrar participantes PJ em contas onde ha um executor PJ, a necessidade e glosar participantes PJ			
BEGIN

-- Deve ter a informa??o da regra para que seja aplicada a valida??o.
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C01_w in C01( dados_regra_p.nr_sequencia) loop
		
		-- tratamento em campo auxiliar para identificar posteriormente os registros que foram alterados
		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

		if (r_C01_w.ie_exige_medico = 'S') then
														
			open C02(nr_id_transacao_p,dados_regra_p.ie_evento);		
			loop
				nr_seq_selecao_w	:= pls_util_cta_pck.num_table_vazia_w;
				ie_valido_w		:= pls_util_cta_pck.vchr2_table_vazia_w;	
				ds_observacao_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
				fetch C02 bulk collect
				into  nr_seq_selecao_w, ie_valido_w, ds_observacao_w
				limit pls_util_cta_pck.qt_registro_transacao_w;
					exit when nr_seq_selecao_w.count = 0;	
					
					CALL pls_tipos_ocor_pck.gerencia_selecao_validacao( nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w, 'SEQ', ds_observacao_w,
										ie_valido_w, nm_usuario_p); 						
			end loop;
			close C02;
		
		end if;
		
		if (r_C01_w.ie_validar_partic_prest = 'S') then
													
		open C03(nr_id_transacao_p,dados_regra_p.ie_evento);		
		loop
			nr_seq_selecao_w	:= pls_util_cta_pck.num_table_vazia_w;
			ie_valido_w		:= pls_util_cta_pck.vchr2_table_vazia_w;	
			ds_observacao_w		:= pls_util_cta_pck.vchr2_table_vazia_w;
			fetch C03 bulk collect
			into  nr_seq_selecao_w, ie_valido_w, ds_observacao_w
			limit pls_util_cta_pck.qt_registro_transacao_w;
				exit when nr_seq_selecao_w.count = 0;	
				
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao( nr_seq_selecao_w, pls_util_cta_pck.clob_table_vazia_w, 'SEQ', ds_observacao_w,
									ie_valido_w, nm_usuario_p); 						
		end loop;
		close C03;
		
		end if;
	end loop; -- C03
	
	-- seta os registros que ser?o v?lidos ou inv?lidos ap?s o processamento 
	CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
	
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_36 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

