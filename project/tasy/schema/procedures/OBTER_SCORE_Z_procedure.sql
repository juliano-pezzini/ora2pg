-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_score_z (nr_atendimento_p bigint, ie_tipo_p text, peso_p bigint, altura_p bigint, dt_registro_p timestamp, anos_p bigint default null, meses_p bigint default null, qt_imc_p bigint default null, qt_circ_braco_p bigint default null, qt_prega_cut_tricip_p bigint default null, qt_sd_menos_3_p INOUT bigint DEFAULT NULL, qt_sd_menos_2_p INOUT bigint DEFAULT NULL, qt_sd_menos_1_p INOUT bigint DEFAULT NULL, qt_media_p INOUT bigint DEFAULT NULL, qt_sd_mais_1_p INOUT bigint DEFAULT NULL, qt_sd_mais_2_p INOUT bigint DEFAULT NULL, qt_sd_mais_3_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE


anos_w		bigint;
meses_w		bigint;
nr_sequencia_w	bigint;
c01	  	integer;
retorno_w	integer;

QT_SD_MENOS_3_W		real;
QT_SD_MENOS_2_W		real;
QT_SD_MENOS_1_W		real;
QT_MEDIA_W			real;
QT_SD_MAIS_1_W		real;
QT_SD_MAIS_2_W		real;
QT_SD_MAIS_3_W		real;

ie_valor_inicio_w	varchar(20);
ie_valor_final_w	varchar(20);
ie_valor_igual_w	varchar(20);

cd_pf_w 		        bigint;
ds_sexo_w 		        varchar(1);
param_valor_w 	        varchar(20);
param_generic_w	        varchar(20);
param_valor_attribute_w double precision;
ds_sql_w		        varchar(400);
qt_semanas_w	        bigint;

qt_dif1_w   double precision;
qt_dif2_w   double precision;
qt_altura_w bigint;


BEGIN

select 	max(cd_pessoa_fisica)
into STRICT 	cd_pf_w
from 	atendimento_paciente
where 	nr_atendimento = nr_atendimento_p;

ds_sexo_w := obter_sexo_pf(cd_pf_w, 'C');
anos_w := coalesce(anos_p,Obter_Idade_PF(cd_pf_w, coalesce(dt_registro_p,clock_timestamp()), 'A'));
meses_w := coalesce(meses_p,Obter_Idade_PF(cd_pf_w, coalesce(dt_registro_p,clock_timestamp()), 'M'));
qt_semanas_w := trunc(Obter_Idade_PF(cd_pf_w, coalesce(dt_registro_p,clock_timestamp()), 'DIA') / 7);

--ZAI --Altura por Idade
--ZPI --Peso por Idade
--ZPA --Peso por Altura
--ZCB --Circunferencia Braco Idade
--ZPC --Pele de Triceps por Idade
--ZMC --IMC por Idade
--Maximo 19 anos/Peso por Altura.
if ( ie_tipo_p = 'ZPA' ) and
	((anos_w < 5) or (anos_w = 5 and meses_w = 0)) and (altura_p > 0) and (peso_p > 0) then
	param_valor_attribute_w := peso_p;
	param_generic_w := 'QT_ALTURA_CM';

	if (anos_w <= 2) then
		anos_w := 2;
	else
		anos_w := 5;
	end if;

	if (altura_p > (trunc(altura_p) + 0.5)) then
		qt_dif1_w := altura_p - (trunc(altura_p) + 0.5);
		qt_altura_w := trunc(altura_p) + 1;
		qt_dif2_w := qt_altura_w - altura_p;
	else
		qt_dif1_w := (trunc(altura_p) + 0.5) - altura_p;
		qt_altura_w := trunc(altura_p);
		qt_dif2_w := altura_p - qt_altura_w;
	end if;
		
	if (qt_dif1_w < qt_dif2_w) then
		param_valor_w := param_valor_w || replace(trunc(altura_p) + 0.5,',','.');
	else
		param_valor_w := param_valor_w || replace(qt_altura_w ,',','.');
	end if;

elsif (ie_tipo_p = 'ZAI' ) and (anos_w <= 19) and (altura_p > 0) then

	param_valor_w := meses_w;
	param_valor_attribute_w := altura_p;
	param_generic_w := 'QT_MESES';

--Maximo 19 anos/IMC por Idade.
elsif (ie_tipo_p = 'ZMC') and (anos_w <= 19) and (qt_imc_p > 0) then

	param_valor_w := meses_w;
	param_generic_w := 'QT_MESES';
	param_valor_attribute_w := qt_imc_p;

--Maximo 10 anos/Peso por Idade.
elsif ( ie_tipo_p = 'ZPI' ) and ( anos_w <= 10) and ( peso_p > 0) then

	param_valor_w := meses_w;
	param_valor_attribute_w := peso_p;
	param_generic_w := 'QT_MESES';

--Maximo 5 anos/Circunferencia Braco Idade
elsif ( ie_tipo_p = 'ZCB' ) and ( anos_w <= 5) and ( qt_circ_braco_p > 0) then

	param_valor_w :=  meses_w;
	param_valor_attribute_w := qt_circ_braco_p;
	param_generic_w := 'QT_MESES';
	
--Maximo 5 anos/Prega cutanea tricipital (mm)	
elsif ( ie_tipo_p = 'ZPC') and ( anos_w <= 5) and ( qt_prega_cut_tricip_p > 0) then
	
	param_valor_w :=  meses_w;
	param_valor_attribute_w := qt_prega_cut_tricip_p;
	param_generic_w := 'QT_MESES';

end if;


if (param_valor_w IS NOT NULL AND param_valor_w::text <> '')  and (param_generic_w IS NOT NULL AND param_generic_w::text <> '') then

	ds_sql_w := ' select min(nr_Sequencia) ' ||
		' from	W_AVAL_WHO ' ||
		' where	ie_tipo = ' || chr(39) || ie_tipo_p || chr(39) ||
		' and   ie_sexo = ' || chr(39) || ds_sexo_w || chr(39);


	if ((ie_tipo_p = 'ZAI') or (ie_tipo_p = 'ZMC') or (ie_tipo_p = 'ZPI')) and (qt_semanas_w <= 13) then
		ds_sql_w := ds_sql_w || ' and qt_semanas = ' || qt_semanas_w;
	else
		ds_sql_w := ds_sql_w ||' and	qt_anos = ' || anos_w ||
		' and	 ' || param_generic_w || ' = ' || param_valor_w;
	end if;
		
		
	C01 := DBMS_SQL.OPEN_CURSOR;
	DBMS_SQL.PARSE(C01, ds_sql_w, dbms_sql.Native);
	DBMS_SQL.DEFINE_COLUMN(C01, 1, nr_sequencia_w);
	retorno_w := DBMS_SQL.EXECUTE_AND_FETCH(C01, false);
	DBMS_SQL.COLUMN_VALUE(C01, 1, nr_sequencia_w);
	DBMS_SQL.CLOSE_CURSOR(C01);
end if;

if (nr_sequencia_w > 0) then

	select  (QT_SD_MENOS_3)::numeric ,
			(QT_SD_MENOS_2)::numeric ,
			(QT_SD_MENOS_1)::numeric ,
			(QT_MEDIA)::numeric ,
			(QT_SD_MAIS_1)::numeric ,
			(QT_SD_MAIS_2)::numeric ,
			(QT_SD_MAIS_3)::numeric
	into STRICT	QT_SD_MENOS_3_W,
			QT_SD_MENOS_2_W,
			QT_SD_MENOS_1_W,
			QT_MEDIA_W,
			QT_SD_MAIS_1_W,
			QT_SD_MAIS_2_W,
			QT_SD_MAIS_3_W
	from	W_AVAL_WHO
	where	nr_sequencia = nr_sequencia_w;
	
end if;

qt_sd_menos_3_p := QT_SD_MENOS_3_W;
qt_sd_menos_2_p := QT_SD_MENOS_2_W;
qt_sd_menos_1_p	:= QT_SD_MENOS_1_W;
qt_media_p  := QT_MEDIA_W;
qt_sd_mais_1_p := QT_SD_MAIS_1_W;
qt_sd_mais_2_p := QT_SD_MAIS_2_W;
qt_sd_mais_3_p := QT_SD_MAIS_3_W;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_score_z (nr_atendimento_p bigint, ie_tipo_p text, peso_p bigint, altura_p bigint, dt_registro_p timestamp, anos_p bigint default null, meses_p bigint default null, qt_imc_p bigint default null, qt_circ_braco_p bigint default null, qt_prega_cut_tricip_p bigint default null, qt_sd_menos_3_p INOUT bigint DEFAULT NULL, qt_sd_menos_2_p INOUT bigint DEFAULT NULL, qt_sd_menos_1_p INOUT bigint DEFAULT NULL, qt_media_p INOUT bigint DEFAULT NULL, qt_sd_mais_1_p INOUT bigint DEFAULT NULL, qt_sd_mais_2_p INOUT bigint DEFAULT NULL, qt_sd_mais_3_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

