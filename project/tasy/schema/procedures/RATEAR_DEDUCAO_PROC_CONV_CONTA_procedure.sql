-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ratear_deducao_proc_conv_conta ( nr_interno_conta_p bigint, nr_seq_conta_partic_p bigint, vl_conta_original_p bigint, vl_base_com_imposto_p bigint, vl_base_sem_imposto_p bigint, vl_medico_p bigint, ie_coseguro_maximo_p text, nm_usuario_p text) AS $body$
DECLARE


cd_convenio_partic_w	conta_paciente.cd_convenio_parametro%type;
cd_categoria_partic_w	conta_paciente.cd_categoria_parametro%type;

ie_valor_informado_w	procedimento_paciente.ie_valor_informado%type;
vl_medico_dif_w		procedimento_paciente.vl_medico%type;
vl_custo_oper_dif_w	procedimento_paciente.vl_custo_operacional%type;

nr_seq_proc_deduc_w	procedimento_paciente.nr_sequencia%type;
vl_proc_deducao_w	procedimento_paciente.vl_procedimento%type;
vl_medico_deducao_w	procedimento_paciente.vl_medico%type;
vl_anest_deducao_w	procedimento_paciente.vl_anestesista%type;
vl_aux_deducao_w	procedimento_paciente.vl_auxiliares%type;
vl_custo_oper_deducao_w	procedimento_paciente.vl_custo_operacional%type;
vl_mat_deducao_w	procedimento_paciente.vl_materiais%type;

ie_tipo_calculo_w	conta_pac_deducao_conv.ie_tipo_calculo%type;
nr_seq_deducao_conv_w	conta_pac_deducao_conv.nr_sequencia%type;
vl_calculado_w		conta_pac_deducao_conv.vl_calculado%type;
vl_informado_calculo_w		conta_pac_deducao_conv.vl_informado_calculo%type;
vl_calculado_com_imp_w		conta_pac_deducao_conv.vl_calculado_com_imp%type;
vl_calculado_sem_imp_w		conta_pac_deducao_conv.vl_calculado_sem_imp%type;

vl_itens_sem_tributo_w	double precision;

nr_seq_conta_ded_item_w	conta_pac_ded_conv_item.nr_sequencia%type;

nr_seq_proc_valor_w	proc_paciente_valor.nr_sequencia%type;
ie_tipo_valor_w		proc_paciente_valor.ie_tipo_valor%type;

vl_rateio_w		double precision := 0;
vl_rateio_com_imp_w		double precision := 0;
vl_rateio_sem_imp_w		double precision := 0;
vl_deducao_w		double precision := 0;
vl_diferenca_w		double precision := 0;
vl_max_coseguro_conta_w		conta_paciente.vl_maximo_coseguro%type := 0;

pr_sem_imposto_w	double precision;
pr_com_imposto_w	double precision;

vl_total_coseguro_w		conta_pac_deducao_conv.vl_calculado%type;

cursor_dados_proc CURSOR(nr_interno_conta_pc bigint) FOR
	SELECT	nr_sequencia,
			cd_procedimento,
			ie_origem_proced,
			qt_procedimento,
			dt_entrada_unidade,
			cd_setor_atendimento,
			nr_seq_atepacu,
			nr_atendimento,
			dt_procedimento,
			dt_conta,
			vl_procedimento,
			vl_medico,
			vl_anestesista,
			vl_auxiliares,
			vl_custo_operacional,
			vl_materiais,
			ie_valor_informado,
			cd_convenio,
			cd_categoria,
			(SELECT	max(x.pr_imposto) from propaci_imposto x where x.nr_seq_propaci = a.nr_sequencia) pr_imposto_item,
			nr_seq_proc_pacote
	from	procedimento_paciente a
	where	nr_interno_conta = nr_interno_conta_pc
	and	coalesce(nr_seq_proc_pacote, nr_sequencia) = nr_sequencia;

c02 CURSOR FOR
	SELECT	ie_tipo_calculo,
			nr_sequencia,
			vl_calculado,
			vl_calculado_com_imp,
			vl_calculado_sem_imp,
			vl_informado_calculo
	from	conta_pac_deducao_conv
	where	nr_seq_conta_orig = nr_interno_conta_p
	and	coalesce(vl_calculado,0) <> 0;

BEGIN

if (coalesce(nr_interno_conta_p,0) > 0) then

	select	coalesce(max(vl_maximo_coseguro),0)
	into STRICT	vl_max_coseguro_conta_w
	from	conta_paciente
	where	nr_interno_conta = nr_interno_conta_p;

	select	max(cd_convenio_parametro),
			max(cd_categoria_parametro)
	into STRICT	cd_convenio_partic_w,
			cd_categoria_partic_w
	from	conta_paciente
	where	nr_interno_conta = nr_seq_conta_partic_p;

	select	coalesce(sum(a.vl_calculado),0)
	into STRICT	vl_total_coseguro_w
	from	conta_pac_deducao_conv a
	where	a.ie_tipo_calculo in ('H','N','A')
	and		a.nr_seq_conta_orig = nr_interno_conta_p;

	if (vl_conta_original_p > 0) then
		pr_sem_imposto_w	:= vl_base_sem_imposto_p / vl_conta_original_p;
		pr_com_imposto_w	:= vl_base_com_imposto_p / vl_conta_original_p;
	end if;

	for dados_proc in cursor_dados_proc(nr_interno_conta_p) loop

		vl_deducao_w		:= 0;
		nr_seq_proc_deduc_w	:= null;

		if (dados_proc.vl_procedimento <> 0) then

			select	nextval('procedimento_paciente_seq')
			into STRICT	nr_seq_proc_deduc_w
			;

			insert into procedimento_paciente(nr_sequencia,
				cd_procedimento,
				ie_origem_proced,
				qt_procedimento,
				ie_valor_informado,
				vl_procedimento,
				dt_entrada_unidade,
				cd_setor_atendimento,
				nr_seq_atepacu,
				nr_atendimento,
				dt_procedimento,
				dt_conta,
				dt_atualizacao,
				nm_usuario,
				cd_convenio,
				vl_medico,
				vl_anestesista,
				vl_auxiliares,
				vl_materiais,
				vl_custo_operacional,
				cd_categoria,
				ie_auditoria,
				nr_interno_conta)
			values (nr_seq_proc_deduc_w,					-- nr_sequencia
				dados_proc.cd_procedimento,				-- cd_procedimento
				dados_proc.ie_origem_proced,				-- ie_origem_proced
				0,/*dados_proc.qt_procedimento,				-- qt_procedimento*/
				'S',							-- ie_valor_informado
				0,							-- vl_procedimento
				dados_proc.dt_entrada_unidade,				-- dt_entrada_unidade
				dados_proc.cd_setor_atendimento,			-- cd_setor_atendimento
				dados_proc.nr_seq_atepacu,				-- nr_seq_atepacu
				dados_proc.nr_atendimento,				-- nr_atendimento
				dados_proc.dt_procedimento,				-- dt_procedimento
				dados_proc.dt_conta,
				clock_timestamp(),						-- dt_atualizacao
				nm_usuario_p,						-- nm_usuario
				cd_convenio_partic_w,					-- cd_convenio
				0,							-- vl_medico
				0,							-- vl_anestesista
				0,							-- vl_auxiliares
				0,							-- vl_custo_operacional
				0,							-- vl_materiais
				cd_categoria_partic_w,					-- cd_categoria
				'N',							-- ie_auditoria
				nr_seq_conta_partic_p					-- nr_interno_conta
				);

			if (dados_proc.ie_valor_informado = 'S') then
				ie_tipo_valor_w	:= 95;
			else
				ie_tipo_valor_w	:= 94;
			end if;

			/*Gerar a informação dos valores antes de atualizar o preço*/

			delete	from proc_paciente_valor
			where	nr_seq_procedimento	= dados_proc.nr_sequencia
			and	ie_tipo_valor		in (94,95);

			select 	coalesce(max(nr_sequencia), 0) + 1
			into STRICT	nr_seq_proc_valor_w
			from	proc_paciente_valor
			where	nr_seq_procedimento	= dados_proc.nr_sequencia;

			insert into proc_paciente_valor(nr_seq_procedimento,
				nr_sequencia,
				ie_tipo_valor,
				dt_atualizacao,
				nm_usuario,
				vl_procedimento,
				vl_medico,
				vl_anestesista,
				vl_materiais,
				vl_custo_operacional,
				vl_auxiliares,
				cd_convenio,
				cd_categoria,
				pr_valor)
			values (dados_proc.nr_sequencia,
				nr_seq_proc_valor_w,
				ie_tipo_valor_w,
				clock_timestamp(),
				nm_usuario_p,
				dados_proc.vl_procedimento,
				dados_proc.vl_medico,
				dados_proc.vl_anestesista,
				dados_proc.vl_materiais,
				dados_proc.vl_custo_operacional,
				dados_proc.vl_auxiliares,
				dados_proc.cd_convenio,
				dados_proc.cd_categoria,
				0);

			open c02;
			loop
				fetch	c02
				into	ie_tipo_calculo_w,
					nr_seq_deducao_conv_w,
					vl_calculado_w,
					vl_calculado_com_imp_w,
					vl_calculado_sem_imp_w,
					vl_informado_calculo_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				vl_rateio_com_imp_w	:= 0;
				vl_rateio_sem_imp_w	:= 0;
				if (ie_tipo_calculo_w = 'D') then
					if (dados_proc.pr_imposto_item > 0) then
						vl_rateio_com_imp_w	:= (dados_proc.vl_procedimento * dividir_sem_round(vl_calculado_com_imp_w,vl_base_com_imposto_p));
						/* Retirar valor de imposto */

						--vl_rateio_com_imp_w		:= vl_rateio_w / ((dados_proc.pr_imposto_item + 100)/100);
					else
						vl_rateio_sem_imp_w	:= (dados_proc.vl_procedimento * dividir_sem_round(vl_calculado_sem_imp_w,vl_base_sem_imposto_p));
					end if;
				elsif (ie_tipo_calculo_w in ('H','A','N')) and (ie_coseguro_maximo_p = 'S') then
					if (dados_proc.pr_imposto_item > 0) then
						vl_rateio_com_imp_w	:= dados_proc.vl_procedimento * dividir_sem_round(vl_calculado_com_imp_w,vl_base_com_imposto_p);
						/* Retirar valor de imposto */

						--vl_rateio_com_imp_w	:= vl_rateio_w / ((dados_proc.pr_imposto_item + 100)/100);
						/* proporcional */

						--vl_rateio_com_imp_w	:= vl_rateio_w * dividir_sem_round(vl_calculado_w,vl_total_coseguro_w);
					else
						vl_rateio_sem_imp_w	:= dados_proc.vl_procedimento * dividir_sem_round(vl_calculado_sem_imp_w,vl_base_sem_imposto_p);
						/* proporcional */

						--vl_rateio_sem_imp_w	:= vl_rateio_w * dividir_sem_round(vl_calculado_w,vl_total_coseguro_w);
					end if;
				else
					/* Para coaseguro imposto entra depois */

					if (dados_proc.pr_imposto_item > 0) then
						vl_rateio_com_imp_w	:= dados_proc.vl_procedimento * dividir_sem_round(vl_calculado_com_imp_w,vl_base_com_imposto_p);
					else
						vl_rateio_sem_imp_w	:= dados_proc.vl_procedimento * dividir_sem_round(vl_calculado_sem_imp_w,vl_base_sem_imposto_p);
					end if;
				end if;

				vl_rateio_w	:= coalesce(vl_rateio_com_imp_w,0) + coalesce(vl_rateio_sem_imp_w,0);

				vl_deducao_w	:= vl_deducao_w + vl_rateio_w;

				select	nextval('conta_pac_ded_conv_item_seq')
				into STRICT	nr_seq_conta_ded_item_w
				;

				insert into conta_pac_ded_conv_item(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_seq_deducao_conv,
					nr_seq_propaci_origem,
					nr_seq_propaci_dest,
					vl_rateio,
					vl_rateio_com_imp,
					vl_rateio_sem_imp,
					nr_seq_propaci_valor_ant
				) values (
					nr_seq_conta_ded_item_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_seq_deducao_conv_w,
					dados_proc.nr_sequencia,
					nr_seq_proc_deduc_w,
					vl_rateio_w,
					vl_rateio_com_imp_w,
					vl_rateio_sem_imp_w,
					nr_seq_proc_valor_w
				);

				end;
			end loop;
			close c02;

			/*Deduzir o valor dos itens e jogar a diferença na conta particular*/

			vl_proc_deducao_w	:= dados_proc.vl_procedimento - vl_deducao_w;
			vl_medico_deducao_w	:= dividir_sem_round((dados_proc.vl_medico * vl_deducao_w), dados_proc.vl_procedimento);
			vl_anest_deducao_w	:= dividir_sem_round((dados_proc.vl_anestesista * vl_deducao_w), dados_proc.vl_procedimento);
			vl_aux_deducao_w	:= dividir_sem_round((dados_proc.vl_auxiliares * vl_deducao_w), dados_proc.vl_procedimento);
			vl_custo_oper_deducao_w	:= dividir_sem_round((dados_proc.vl_custo_operacional), dados_proc.vl_procedimento);
			vl_mat_deducao_w	:= dividir_sem_round((dados_proc.vl_materiais * vl_deducao_w), dados_proc.vl_procedimento);

			vl_diferenca_w		:= vl_deducao_w - (vl_medico_deducao_w + vl_anest_deducao_w + vl_aux_deducao_w + vl_custo_oper_deducao_w + vl_mat_deducao_w);

			if (coalesce(vl_diferenca_w,0) <> 0) then

				if (dados_proc.vl_custo_operacional <> 0) then
					vl_custo_oper_deducao_w	:= vl_custo_oper_deducao_w + vl_diferenca_w;
				elsif (dados_proc.vl_medico <> 0) then
					vl_medico_deducao_w	:= vl_medico_deducao_w + vl_diferenca_w;
				end if;

			end if;

			update	procedimento_paciente
			set	vl_procedimento = vl_proc_deducao_w,
				vl_medico = vl_medico - vl_medico_deducao_w,
				vl_anestesista = vl_anestesista - vl_anest_deducao_w,
				vl_auxiliares = vl_auxiliares - vl_aux_deducao_w,
				vl_custo_operacional = vl_custo_operacional - vl_custo_oper_deducao_w,
				vl_materiais = vl_materiais - vl_mat_deducao_w,
				ie_valor_informado = 'S'
			where	nr_sequencia = dados_proc.nr_sequencia;

			if (dados_proc.nr_sequencia = dados_proc.nr_seq_proc_pacote) then
				/*Rateia o pacote ao processar a conta*/

				CALL Calcular_Pacote(dados_proc.nr_atendimento,
						nr_interno_conta_p,
						dados_proc.cd_convenio,
						dados_proc.cd_categoria,
						nm_usuario_p,
						'N','N','N','S','N');
			else
				/*Atualizar o imposto do item após a dedução*/

				CALL gerar_tributo_conta_pac(nr_interno_conta_p, dados_proc.nr_sequencia, 'P', nm_usuario_p);
			end if;


			update	procedimento_paciente
			set	vl_procedimento = vl_deducao_w,
				vl_medico = vl_medico_deducao_w,
				vl_anestesista = vl_anest_deducao_w,
				vl_auxiliares = vl_aux_deducao_w,
				vl_custo_operacional = vl_custo_oper_deducao_w,
				vl_materiais = vl_mat_deducao_w
			where	nr_sequencia = nr_seq_proc_deduc_w;

			CALL gerar_tributo_conta_pac(nr_seq_conta_partic_p, nr_seq_proc_deduc_w, 'P', nm_usuario_p);

			/*Atualizar o imposto e informações do item gerado com a dedução*/

			CALL atualiza_preco_procedimento(nr_seq_proc_deduc_w, cd_convenio_partic_w, nm_usuario_p);

		end if;

	end loop;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ratear_deducao_proc_conv_conta ( nr_interno_conta_p bigint, nr_seq_conta_partic_p bigint, vl_conta_original_p bigint, vl_base_com_imposto_p bigint, vl_base_sem_imposto_p bigint, vl_medico_p bigint, ie_coseguro_maximo_p text, nm_usuario_p text) FROM PUBLIC;

