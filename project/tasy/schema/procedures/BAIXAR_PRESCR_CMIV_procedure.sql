-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_prescr_cmiv ( nr_seq_ordem_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_prescr_w			bigint;
nr_seq_mat_atend_w		bigint;
nr_atendimento_w		bigint;
cd_setor_atendimento_w	integer;
cd_material_w			integer;
dt_entrada_unidade_w	timestamp;
cd_unidade_medida_w		varchar(30);
qt_material_w			double precision;
qt_dose_consumo_w		double precision;
cd_convenio_w			integer;
cd_categoria_w			varchar(10);
nr_doc_convenio_w		varchar(20);
ie_tipo_guia_w			varchar(2);
dt_prescricao_w			timestamp;
ie_via_aplicacao_w		varchar(5);
cd_fornec_consignado_w	varchar(14);
nr_seq_lote_fornec_w	bigint;
nr_seq_atepacu_w		bigint;
nr_prescricao_w			bigint;
cd_local_estoque_w		smallint;
cd_motivo_baixa_w		varchar(1);
nr_seq_cabine_w			bigint;
cd_estabelecimento_w	smallint;
dt_inicio_preparo_w		timestamp;
ie_estoque_w			varchar(1);
ds_material_w			varchar(255);
nr_seq_prescr_ww		bigint;
cd_oper_perda_etq_w		smallint;
cd_oper_consumo_consig_w integer;
cd_operacao_estoque_w	smallint;
ds_setor_atendimento_w	varchar(100);
nm_prescritor_w		varchar(60);
cd_senha_w		varchar(20);
ie_generico_w		varchar(1);
dt_entrada_w		timestamp;
VarRegraLocalEstoque_w 	varchar(1);
ie_controlador_estoque_w varchar(1);
ie_lanca_conta_w	 varchar(1);
cd_material_prescr_w	integer;
ie_consiste_ficha_tecnica_w	varchar(1);
ie_utiliza_sem_motivo_w		varchar(1);	
ie_realiza_passagem_w		varchar(1);
ie_arredonda_dose_w		varchar(1);
ie_data_conta_paciente_w varchar(2);
nr_seq_item_prescr_w	bigint;
nr_seq_item_prescr_ww	bigint;
nr_seq_prescr_mat_w	bigint;
ie_baixa_estoq_pac_w	varchar(1);
ie_consignado_w 	varchar(1);
cd_material_estoque_w material.cd_material_estoque%type;
cd_cgc_fornec_w		varchar(14);
nr_seq_tipo_baixa_w	bigint;
ie_lote_consignado_w	varchar(1);
nr_sequencia_log_w	bigint;
ie_consiste_ordem_w		varchar(1);
ie_liberado_w			varchar(1);
ie_dispensa_perda_w	varchar(1);
qt_perda_w		double precision;
nr_sequencia_prescricao_w bigint;
qt_material_util_w		bigint;
ie_sobra_overfill_w		varchar(1);
cd_baixa_overfill_w		bigint;
cd_baixa_sobra_w        bigint;
ie_atualiza_estoque_overfill_w varchar(1);
cd_unidade_medida_consumo_w		varchar(30);
ds_entrada_w		varchar(4000);
ds_log_w		varchar(4000);
ds_erro_log_w		varchar(4000);
ds_erro_w			varchar(2000);
ie_baixa_Mat_kit_w	varchar(1);
ie_kit_mat_w		varchar(1);
ie_agrupador_w		smallint;
nr_seq_prescr_kit_w	bigint;
ds_observacao_w		varchar(255);
dt_validade_prescr_w timestamp;
cd_grupo_w			smallint	:= 0;
cd_subgrupo_w		smallint	:= 0;
cd_classe_w			integer	:= 0;
ie_medicacao_paciente_w varchar(1);
cd_local_estoque_pac_w far_cabine_seg_biol.cd_local_estoque_pac%type;
ie_desconsidera_overfill_w varchar(1);
ds_lote_fornec_w      material_lote_fornec.ds_lote_fornec%type;
dt_validade_w         material_lote_fornec.dt_validade%type;
regra_item_prescrito_w	regra_faturamento_onc%rowtype;
ie_tipo_materiais_w varchar(100);

itens_prescritos CURSOR FOR
SELECT	    item.nr_sequencia,
            'medication' ie_tipo  -- manipulados
from	    can_ordem_item_prescr item
inner join  can_ordem_prod ordem on item.nr_seq_ordem = ordem.nr_sequencia
where	    item.nr_seq_ordem = nr_seq_ordem_p
and         coalesce(ordem.dt_entrega_setor::text, '') = ''

union

SELECT  null nr_sequencia,
        'material' ie_tipo  -- materiais
;

c01 CURSOR FOR
SELECT	coalesce(a.nr_atendimento,c.nr_atendimento),
	b.cd_material,
	b.cd_unidade_medida_real,
	b.qt_dose_real,
	c.dt_prescricao,
	a.nr_prescricao,
	b.cd_motivo_baixa,
	c.cd_setor_atendimento,
	b.nr_seq_lote_fornec,
	a.ie_via_aplicacao,
	b.nr_seq_item_prescr,
	qt_perda,
	b.ie_sobra_overfill,
	'S',
	0,
	b.nr_seq_prescr_kit,
	c.dt_validade_prescr
FROM	prescr_medica c,
	can_ordem_prod_mat b,
	can_ordem_prod a
WHERE	a.nr_sequencia	= nr_seq_ordem_p
AND	a.nr_prescricao	= c.nr_prescricao
AND	a.nr_sequencia	= b.nr_seq_ordem
AND (coalesce(a.ie_medic_paciente,'N') = 'N' or exists (
	SELECT 	ie_medicacao_paciente
	from	can_ordem_item_prescr x,
            prescr_material y
    where   x.nr_sequencia = b.nr_seq_item_prescr
    and     x.nr_prescricao = y.nr_prescricao
    and     x.cd_material = y.cd_material
    and     x.nr_seq_prescricao = y.nr_sequencia
    and     y.ie_medicacao_paciente = 'S'
))
AND	coalesce(dt_entrega_setor::text, '') = ''
and ((ie_tipo_materiais_w = 'medication' and (b.nr_seq_item_prescr = nr_seq_item_prescr_w and coalesce(b.nr_seq_kit::text, '') = ''))
    or (ie_tipo_materiais_w = 'material' and (coalesce(b.nr_seq_item_prescr::text, '') = '' or (b.nr_seq_kit IS NOT NULL AND b.nr_seq_kit::text <> ''))))
and	((coalesce(get_if_patient_medic(nr_seq_ordem_p, b.cd_material)::text, '') = '') or (get_if_patient_medic(nr_seq_ordem_p, b.cd_material) <> b.cd_material))
order by coalesce(b.ie_sobra_overfill,'N') asc;

c02 CURSOR FOR
  SELECT 	MAX(coalesce(IE_OVERFILL, 'N'))
  FROM 		REGRA_DISP_ONCOLOGIA
  WHERE 	coalesce(cd_estabelecimento, cd_estabelecimento_w)      = cd_estabelecimento_w
  AND 		coalesce(cd_material, cd_material_w)                    = cd_material_w
  AND 		coalesce(cd_classe_material, cd_classe_w)               = cd_classe_w
  AND 		coalesce(cd_subgrupo_material, cd_subgrupo_w)           = cd_subgrupo_w
  AND 		coalesce(cd_grupo_material, cd_grupo_w)                 = cd_grupo_w
  AND 		coalesce(ie_via_aplicacao,ie_via_aplicacao_w)           = ie_via_aplicacao_w
  AND 		coalesce(cd_unidade_medida,coalesce(cd_unidade_medida_w,'X')) = coalesce(cd_unidade_medida_w,'X')
  AND 		coalesce(IE_UTILIZA_DISP,'N')                           = 'E'
  ORDER BY	coalesce(ie_via_aplicacao,'0'),
			coalesce(cd_intervalo,'0'),
			coalesce(cd_material,0),
		    coalesce(cd_classe_material,0),
		    coalesce(cd_subgrupo_material,0),
		    coalesce(cd_grupo_material,0);

BEGIN
ds_entrada_w := '1';
SELECT nextval('log_gera_dispensacao_seq')
INTO STRICT	nr_sequencia_log_w
;

INSERT INTO log_gera_dispensacao(
	nr_sequencia,
	nm_usuario,
	dt_inicio)
VALUES (nr_sequencia_log_w,
	nm_usuario_p,
	clock_timestamp());

COMMIT;

ie_liberado_w := 'N';

ie_generico_w := Obter_Param_Usuario(3130, 149, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_generico_w);
VarRegraLocalEstoque_w := Obter_Param_Usuario(3130, 158, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, VarRegraLocalEstoque_w);
ie_controlador_estoque_w := Obter_Param_Usuario(3130, 167, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_controlador_estoque_w);
ie_lanca_conta_w := Obter_Param_Usuario(3130, 172, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_lanca_conta_w);
ie_consiste_ficha_tecnica_w := Obter_Param_Usuario(3130, 225, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_ficha_tecnica_w);
ie_utiliza_sem_motivo_w := Obter_Param_Usuario(3130, 260, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utiliza_sem_motivo_w);
ie_realiza_passagem_w := Obter_Param_Usuario(3130, 281, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_realiza_passagem_w);
ie_arredonda_dose_w := Obter_Param_Usuario(3130, 286, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_arredonda_dose_w);
ie_consiste_ordem_w := Obter_Param_Usuario(3130, 370, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_ordem_w);
ie_dispensa_perda_w := Obter_Param_Usuario(3130, 373, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_dispensa_perda_w);
cd_baixa_overfill_w := Obter_Param_Usuario(3130, 395, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_baixa_overfill_w);
cd_baixa_sobra_w := Obter_Param_Usuario(3130, 509, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_baixa_sobra_w);
ie_baixa_Mat_kit_w := Obter_Param_Usuario(3130, 451, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_baixa_Mat_kit_w);
ie_data_conta_paciente_w := Obter_Param_Usuario(3130, 481, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_data_conta_paciente_w);


IF (ie_consiste_ordem_w = 'S') THEN
	WHILE(ie_liberado_w <> 'S')  LOOP
		BEGIN
		SELECT 	coalesce(MAX('N'),'S')
		INTO STRICT 	ie_liberado_w 
		FROM 	log_gera_dispensacao
		WHERE 	nr_sequencia < nr_sequencia_log_w
		AND (dt_inicio +1/288) > clock_timestamp()
		AND 	coalesce(dt_final::text, '') = '';
		END;	
	END LOOP;
END IF;
ds_entrada_w := SUBSTR(ds_entrada_w || ',2',1,4000);
BEGIN
	for item_prescrito in itens_prescritos loop
		regra_item_prescrito_w := obter_regra_fat_onc(item_prescrito.nr_sequencia);
		if (regra_item_prescrito_w.nr_sequencia IS NOT NULL AND regra_item_prescrito_w.nr_sequencia::text <> '') then
			CALL baixar_item_prescrito_onc(item_prescrito.nr_sequencia);
		else
			nr_seq_item_prescr_w := item_prescrito.nr_sequencia;
            		ie_tipo_materiais_w := item_prescrito.ie_tipo;

			OPEN c01;
			LOOP
			FETCH	c01 INTO
				nr_atendimento_w,
				cd_material_w,
				cd_unidade_medida_w,
				qt_material_w,
				dt_prescricao_w,
				nr_prescricao_w,
				cd_motivo_baixa_w,
				cd_setor_atendimento_w,
				nr_seq_lote_fornec_w,
				ie_via_aplicacao_w,
				nr_seq_item_prescr_w,
				qt_perda_w,
				ie_sobra_overfill_w,
				ie_kit_mat_w,
				ie_agrupador_w,
				nr_seq_prescr_kit_w,
				dt_validade_prescr_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				BEGIN

				SELECT	MAX(c.cd_local_estoque),
						MAX(b.nr_seq_cabine),
						MAX(a.cd_estabelecimento),
						MAX(a.dt_inicio_preparo),
						MAX(c.nr_seq_tipo_baixa)
				INTO STRICT	cd_local_estoque_w,
						nr_seq_cabine_w,
						cd_estabelecimento_w,
						dt_inicio_preparo_w,
						nr_seq_tipo_baixa_w
				FROM	far_cabine_seg_biol c,
						far_etapa_producao b,
						can_ordem_prod a
				WHERE	a.nr_sequencia	= nr_seq_ordem_p
				AND		b.nr_sequencia	= a.nr_seq_etapa_prod
				AND		b.nr_seq_cabine	= c.nr_sequencia;

				select	coalesce(max(c.cd_local_estoque), cd_local_estoque_w)
				into STRICT	cd_local_estoque_w
				from	transf_ordem_prod a,
					nota_fiscal b,
					nota_fiscal_item c
				where	b.nr_sequencia = c.nr_sequencia
				and	a.nr_ordem_compra = b.nr_ordem_compra
				and	a.nr_seq_ordem_prod = nr_seq_ordem_p
				and	substr(obter_se_nota_entrada_saida(b.nr_sequencia),1,1) = 'E'
				and 	cd_material = cd_material_w;

				ds_entrada_w := SUBSTR(ds_entrada_w || ',3',1,4000);
				SELECT 	obter_se_mat_consignado(cd_material_w)
				INTO STRICT	ie_consignado_w
				;

				select	coalesce(max(a.cd_classe_material),0),
						coalesce(max(b.cd_subgrupo_material),0),
						coalesce(max(c.cd_grupo_material),0)
				into STRICT	cd_classe_w,
						cd_subgrupo_w,
						cd_grupo_w
				from	material a,
						classe_material b,
						subgrupo_material c
				where	a.cd_material          = cd_material_w
				and 	a.cd_classe_material   = b.cd_classe_material
				and 	b.cd_subgrupo_material = c.cd_subgrupo_material;			
				
				cd_cgc_fornec_w := NULL;

				select max(cd_material_estoque)
				into STRICT cd_material_estoque_w
				from material
				where cd_material = cd_material_w;
				
				SELECT	coalesce(MAX('S'), 'N')
				INTO STRICT	ie_lote_consignado_w
				FROM	fornecedor_mat_consig_lote
				WHERE	cd_estabelecimento 	= cd_estabelecimento_p
				AND	cd_local_estoque 	= cd_local_estoque_w
				--and	cd_fornecedor = cd_cgc_fornec_w
				AND	cd_material 		= coalesce(cd_material_estoque_w, cd_material_w)
				AND	dt_mesano_referencia	= TRUNC(clock_timestamp(), 'mm')
				AND	nr_seq_lote 		= nr_seq_lote_fornec_w;

				IF (ie_consignado_w = '1') OR
					(ie_consignado_w = '2' AND ie_lote_consignado_w = 'S') THEN
					ds_entrada_w := SUBSTR(ds_entrada_w || ',3',1,4000);
					SELECT	MAX(cd_cgc_fornec)
					INTO STRICT	cd_cgc_fornec_w
					FROM	material_lote_fornec                                  
					WHERE	cd_material = cd_material_w  
					AND	nr_sequencia = nr_seq_lote_fornec_w;
					
					select ds_lote_fornec,
						dt_validade
					into STRICT   ds_lote_fornec_w,
						dt_validade_w
					from   material_lote_fornec
					where  cd_material  = cd_material_w
					and    nr_sequencia = nr_seq_lote_fornec_w;	
				
				END IF;
				
				IF (ie_dispensa_perda_w = 'S') THEN			
					qt_material_w := qt_material_w + coalesce(qt_perda_w,0);	
				END IF;

				
				open C02;
				fetch C02 into	
					ie_desconsidera_overfill_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */	
				close C02;
				
				IF (ie_arredonda_dose_w = 'S')
						AND ((coalesce(ie_sobra_overfill_w, 'N') <> 'O') OR (coalesce(ie_desconsidera_overfill_w, 'N') = 'N')) THEN
					qt_material_w := Obter_qt_dose_onco(cd_material_w,qt_material_w,ie_via_aplicacao_w,'S');
				END IF;	
				
				cd_material_prescr_w	:= cd_material_w;
				
				IF (nr_seq_item_prescr_w > 0) and (coalesce(nr_seq_prescr_kit_w,0) = 0) THEN
					SELECT	coalesce(MAX(cd_material),0)
					INTO STRICT	cd_material_prescr_w
					FROM	can_ordem_item_prescr
					WHERE	nr_sequencia	= nr_seq_item_prescr_w;
				END IF;
				
				IF (cd_material_prescr_w = 0) THEN
					cd_material_prescr_w := cd_material_w;
				END IF;	
				
				SELECT	coalesce(MAX(nr_seq_interno),0)
				INTO STRICT	nr_seq_atepacu_w
				FROM	atend_paciente_unidade
				WHERE	nr_atendimento		= nr_atendimento_w
				AND	cd_setor_atendimento	= cd_setor_atendimento_w;
					
				IF (nr_seq_atepacu_w = 0) THEN
					ds_entrada_w := SUBSTR(ds_entrada_w || ',4',1,4000);
					SELECT 	MAX(dt_entrada)
					INTO STRICT	dt_entrada_w
					FROM	atendimento_paciente
					WHERE	nr_atendimento = nr_atendimento_w;

					IF (ie_realiza_passagem_w = 'S') THEN
						IF (dt_entrada_w <= dt_prescricao_w) THEN
							IF (dt_prescricao_w > clock_timestamp()) THEN
								dt_prescricao_w := clock_timestamp();
							END IF;
							CALL Gerar_Passagem_Setor_Atend(nr_atendimento_w, cd_setor_atendimento_w, dt_prescricao_w, 'N', nm_usuario_p);
						ELSE
							CALL Gerar_Passagem_Setor_Atend(nr_atendimento_w, cd_setor_atendimento_w, dt_entrada_w, 'N', nm_usuario_p);
						END IF;
					END IF;
					
					SELECT	coalesce(MAX(nr_seq_interno),0)
					INTO STRICT	nr_seq_atepacu_w
					FROM	atend_paciente_unidade
					WHERE	nr_atendimento		= nr_atendimento_w
					AND	cd_setor_atendimento	= cd_setor_atendimento_w;

					/* Rafael em 05/01/2007 OS47601 => gerar mensagem usuario */

					IF (ie_realiza_passagem_w <> 'N') AND (coalesce(nr_seq_atepacu_w,0) = 0) THEN
						/* obter dados setor */

						ds_entrada_w := SUBSTR(ds_entrada_w || ',5',1,4000);
						SELECT	substr(obter_desc_expressao(max(cd_exp_setor_atend),max(ds_setor_atendimento)),1,100)
						INTO STRICT	ds_setor_atendimento_w
						FROM	setor_atendimento
						WHERE	cd_setor_atendimento = cd_setor_atendimento_w;

						/* obter dados prescritor */

						SELECT	substr(obter_nome_pf(a.cd_pessoa_fisica),1,60)
						INTO STRICT	nm_prescritor_w
						FROM	pessoa_fisica a,
							prescr_medica b
						WHERE	a.cd_pessoa_fisica = b.cd_prescritor
						AND	b.nr_prescricao = nr_prescricao_w;
						
						CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(179634, 'DS_SETOR_ATENDIMENTO_W='||ds_setor_atendimento_w||
												';NR_PRESCRICAO_W='||TO_CHAR(NR_PRESCRICAO_W)||
												';NM_PRESCRITOR_W='||nm_prescritor_w);
					END IF;
				END IF;

				SELECT	coalesce(MAX(dt_entrada_unidade),clock_timestamp())
				INTO STRICT	dt_entrada_unidade_w
				FROM 	atend_paciente_unidade
				WHERE 	nr_seq_interno = nr_seq_atepacu_w;
				ds_entrada_w := SUBSTR(ds_entrada_w || ',6',1,4000);

				/*	select	Obter_Atepacu_paciente(nr_atendimento_w,'IAA')
				into	nr_seq_atepacu_w
				from	dual;

				select	cd_setor_atendimento,
					dt_entrada_unidade
				into	cd_setor_atendimento_w,
					dt_entrada_unidade_w
				from 	atend_paciente_unidade
				where 	nr_seq_interno = nr_seq_atepacu_w; */
				SELECT * FROM obter_convenio_execucao(	nr_atendimento_w, clock_timestamp(), cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;

				
				IF (coalesce(cd_motivo_baixa_w::text, '') = '') AND (ie_utiliza_sem_motivo_w = 'S') THEN
					SELECT	MAX(cd_local_estoque),
						MAX(cd_oper_consumo_etq),
						MAX(cd_setor_atendimento),
						MAX(cd_oper_consumo_consig)
					INTO STRICT	cd_local_estoque_w,
						cd_oper_perda_etq_w,
						cd_setor_atendimento_w,
						cd_oper_consumo_consig_w
					FROM	far_cabine_seg_biol
					WHERE	nr_sequencia = nr_seq_cabine_w;
					ds_entrada_w := SUBSTR(ds_entrada_w || ',8',1,4000);
					IF (VarRegraLocalEstoque_w  = 'S') THEN
				
						SELECT	MAX(nr_sequencia)
						INTO STRICT 	nr_seq_prescr_w
						FROM 	prescr_material 
						WHERE	nr_prescricao	= nr_prescricao_w
						AND	((cd_material	= cd_material_w) OR ((cd_material_w = obter_material_generico(cd_material)) 
						AND (ie_generico_w = 'S')));

						cd_local_estoque_w := coalesce(obter_local_disp_prescr(nr_prescricao_w, nr_seq_prescr_w, obter_perfil_ativo, nm_usuario_p), cd_local_estoque_w);
						
					END IF;
					
					IF (ie_consignado_w = '2') THEN
						BEGIN
						
						ds_entrada_w := SUBSTR(ds_entrada_w || ',9',1,4000);
						
						ie_estoque_w := Obter_Disp_estoque(	
							cd_material_w, cd_local_estoque_w, cd_estabelecimento_w, 0, qt_material_w, NULL, ie_estoque_w);
							
						IF (ie_estoque_w = 'S') THEN
							ds_entrada_w := SUBSTR(ds_entrada_w || ',10',1,4000);
							cd_cgc_fornec_w := NULL;
						ELSE
							ds_entrada_w := SUBSTR(ds_entrada_w || ',11',1,4000);
							ie_estoque_w := Obter_Disp_estoque(	
								cd_material_w, cd_local_estoque_w, cd_estabelecimento_w, 0, qt_material_w, cd_cgc_fornec_w, ie_estoque_w);
						END IF;
						END;
					ELSE	
						ds_entrada_w := SUBSTR(ds_entrada_w || ',12',1,4000);
						ie_estoque_w := Obter_Disp_estoque(	
							cd_material_w, cd_local_estoque_w, cd_estabelecimento_w, 0, qt_material_w, cd_cgc_fornec_w, ie_estoque_w);
					END IF;
					
					IF (cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') THEN
						cd_operacao_estoque_w := cd_oper_consumo_consig_w;
					ELSE
						cd_operacao_estoque_w := cd_oper_perda_etq_w;
					END IF;
					
					ds_entrada_w := SUBSTR(ds_entrada_w || ',13',1,4000);			
					SELECT	obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_w, nr_seq_ordem_p,nr_seq_cabine_w)
					INTO STRICT	ie_baixa_estoq_pac_w
					;
					
					IF (ie_estoque_w = 'S') AND (coalesce(ie_baixa_estoq_pac_w,'S') = 'S') THEN
						BEGIN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',14',1,4000);
						ds_observacao_w := substr(obter_texto_dic_objeto(290537, wheb_usuario_pck.get_nr_seq_idioma, null) || nr_seq_ordem_p,1,255);--'Baixar_Prescr_cmiv  sem motivo baixa - Ordem ' 	
						if (coalesce(ie_sobra_overfill_w,'N') = 'S') then
							ds_observacao_w := SUBSTR(ds_observacao_w || ' - ' || obter_texto_dic_objeto(290535, wheb_usuario_pck.get_nr_seq_idioma, null),1,255); --'Dispensacao gerada via Sobra. '
						elsif (coalesce(ie_sobra_overfill_w,'N') = 'O') then
							ds_observacao_w := SUBSTR(ds_observacao_w || ' - ' || obter_texto_dic_objeto(290536, wheb_usuario_pck.get_nr_seq_idioma, null),1,255); --'Dispensacao gerada via Overfill. '
						end if;
						/* Matheus em 13/12/2006 inclui os campos nr_atendimento e nr_prescricao no insert */

						INSERT INTO movimento_estoque(
							nr_movimento_estoque,		cd_estabelecimento,
							cd_local_estoque,			dt_movimento_estoque,
							cd_operacao_estoque,		cd_acao,
							cd_material,			cd_unidade_med_mov,
							qt_movimento,			dt_mesano_referencia,
							dt_atualizacao,			nm_usuario,
							ie_origem_documento,		nr_documento,
							cd_unidade_medida_estoque,		cd_setor_atendimento,
							qt_estoque,			ds_observacao,
							nr_atendimento,			nr_prescricao,
							nr_seq_lote_fornec,		cd_fornecedor,
							cd_lote_fabricacao,		dt_validade)
						VALUES (nextval('movimento_estoque_seq'),	cd_estabelecimento_w,
							cd_local_estoque_w,		dt_inicio_preparo_w,
							cd_operacao_estoque_w,		'1',
							cd_material_w,			cd_unidade_medida_w,
							qt_material_w,			dt_inicio_preparo_w,
							clock_timestamp(),			nm_usuario_p,
							'10',				nr_seq_ordem_p,
							cd_unidade_medida_w,		cd_setor_atendimento_w,
							qt_material_w,			ds_observacao_w,
							nr_atendimento_w,		nr_prescricao_w,
							nr_seq_lote_fornec_w,	cd_cgc_fornec_w,
							ds_lote_fornec_w,		dt_validade_w);
						END;
					ELSIF (coalesce(ie_baixa_estoq_pac_w,'S') = 'S') THEN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',15',1,4000);
						SELECT	ds_material
						INTO STRICT	ds_material_w
						FROM	material
						WHERE	cd_material = cd_material_w;
						
						CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(179642, 'DS_MATERIAL_W='||DS_MATERIAL_W);
					END IF;
				/*Se tiver motivo baixa, baixa estoque lanca local cabine e setor cabine*/

				ELSIF (cd_motivo_baixa_w IS NOT NULL AND cd_motivo_baixa_w::text <> '') THEN
					BEGIN
					ds_entrada_w := SUBSTR(ds_entrada_w || ',16',1,4000);
					SELECT	MAX(cd_local_estoque),
						MAX(cd_oper_perda_etq),
						MAX(cd_setor_atendimento),
						MAX(cd_oper_consumo_consig)
					INTO STRICT	cd_local_estoque_w,
						cd_oper_perda_etq_w,
						cd_setor_atendimento_w,
						cd_oper_consumo_consig_w
					FROM	far_cabine_seg_biol
					WHERE	nr_sequencia = nr_seq_cabine_w;

					IF (VarRegraLocalEstoque_w  = 'S') THEN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',17',1,4000);
						SELECT	MAX(nr_sequencia)
						INTO STRICT 	nr_seq_prescr_w
						FROM 	prescr_material 
						WHERE	nr_prescricao	= nr_prescricao_w
						AND	((cd_material	= cd_material_w) OR ((cd_material_w = obter_material_generico(cd_material)) 
						AND (ie_generico_w = 'S')));

						cd_local_estoque_w := coalesce(obter_local_disp_prescr(nr_prescricao_w, nr_seq_prescr_w, obter_perfil_ativo, nm_usuario_p), cd_local_estoque_w);
					END IF;
					
					IF (ie_consignado_w = '2') THEN
						BEGIN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',19',1,4000);
						ie_estoque_w := Obter_Disp_estoque(	
							cd_material_w, cd_local_estoque_w, cd_estabelecimento_w, 0, qt_material_w, NULL, ie_estoque_w);
							
						IF (ie_estoque_w = 'S') THEN
							ds_entrada_w := SUBSTR(ds_entrada_w || ',20',1,4000);
							cd_cgc_fornec_w := NULL;
						ELSE
							ds_entrada_w := SUBSTR(ds_entrada_w || ',21',1,4000);
							ie_estoque_w := Obter_Disp_estoque(	
								cd_material_w, cd_local_estoque_w, cd_estabelecimento_w, 0, qt_material_w, cd_cgc_fornec_w, ie_estoque_w);
						END IF;
						END;
					ELSE
						ds_entrada_w := SUBSTR(ds_entrada_w || ',22',1,4000);
						ie_estoque_w := Obter_Disp_estoque(	
							cd_material_w, cd_local_estoque_w, cd_estabelecimento_w, 0, qt_material_w, cd_cgc_fornec_w, ie_estoque_w);
					END IF;
					ds_entrada_w := SUBSTR(ds_entrada_w || ',23',1,4000);
					IF (cd_cgc_fornec_w IS NOT NULL AND cd_cgc_fornec_w::text <> '') THEN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',24',1,4000);
						cd_operacao_estoque_w := cd_oper_consumo_consig_w;
					ELSE
						ds_entrada_w := SUBSTR(ds_entrada_w || ',25',1,4000);
						cd_operacao_estoque_w := cd_oper_perda_etq_w;
					END IF;
								
					SELECT obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_w, nr_seq_ordem_p,nr_seq_cabine_w)
					INTO STRICT	ie_baixa_estoq_pac_w
					;
					
					IF (ie_estoque_w = 'S') AND (coalesce(ie_baixa_estoq_pac_w,'S') = 'S') THEN
						BEGIN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',26',1,4000);
						ds_observacao_w := substr(obter_texto_dic_objeto(290538, wheb_usuario_pck.get_nr_seq_idioma, null) || nr_seq_ordem_p,1,255);--'Baixar_Prescr_cmiv - Ordem' 
						if (coalesce(ie_sobra_overfill_w,'N') = 'S') then
							ds_observacao_w := SUBSTR(ds_observacao_w || ' - ' || obter_texto_dic_objeto(290535, wheb_usuario_pck.get_nr_seq_idioma, null),1,255); --'Dispensacao gerada via Sobra. '
						elsif (coalesce(ie_sobra_overfill_w,'N') = 'O') then
							ds_observacao_w := SUBSTR(ds_observacao_w || ' - ' || obter_texto_dic_objeto(290536, wheb_usuario_pck.get_nr_seq_idioma, null),1,255); --'Dispensacao gerada via Overfill. '
						end if;
						/* Matheus em 13/12/2006 inclui os campos nr_atendimento e nr_prescricao no insert */
						INSERT INTO movimento_estoque(
							nr_movimento_estoque,		cd_estabelecimento,
							cd_local_estoque,			dt_movimento_estoque,
							cd_operacao_estoque,		cd_acao,
							cd_material,			cd_unidade_med_mov,
							qt_movimento,			dt_mesano_referencia,
							dt_atualizacao,			nm_usuario,
							ie_origem_documento,		nr_documento,
							cd_unidade_medida_estoque,		cd_setor_atendimento,
							qt_estoque,			ds_observacao,
							nr_atendimento,			nr_prescricao,
							nr_seq_lote_fornec,		cd_fornecedor,
							cd_lote_fabricacao,		dt_validade)
						VALUES (nextval('movimento_estoque_seq'),	cd_estabelecimento_w,
							cd_local_estoque_w,		dt_inicio_preparo_w,
							cd_operacao_estoque_w,		'1',
							cd_material_w,			cd_unidade_medida_w,
							qt_material_w,			dt_inicio_preparo_w,
							clock_timestamp(),				nm_usuario_p,
							'10',				nr_seq_ordem_p,
							cd_unidade_medida_w,		cd_setor_atendimento_w,
							qt_material_w,			ds_observacao_w,
							nr_atendimento_w,			nr_prescricao_w,
							nr_seq_lote_fornec_w,		cd_cgc_fornec_w,
							ds_lote_fornec_w,		dt_validade_w);
						END;
					ELSIF (coalesce(ie_baixa_estoq_pac_w,'S') = 'S') THEN
					ds_entrada_w := SUBSTR(ds_entrada_w || ',27',1,4000);
						SELECT	ds_material
						INTO STRICT	ds_material_w
						FROM	material
						WHERE	cd_material = cd_material_w;
						
						CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(179642, 'DS_MATERIAL_W='||DS_MATERIAL_W);
					END IF;
					END;
				/*Se nao tiver motivo baixa, lanca na conta, baixando estoque local cabine e setor paciente*/

				ELSE
					ds_entrada_w := SUBSTR(ds_entrada_w || ',28',1,4000);
					BEGIN
					SELECT	nextval('material_atend_paciente_seq')
					INTO STRICT	nr_seq_mat_atend_w
					;

					IF (VarRegraLocalEstoque_w  = 'S') THEN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',29',1,4000);
						SELECT	MAX(nr_sequencia)
						INTO STRICT 	nr_seq_prescr_w
						FROM 	prescr_material 
						WHERE	nr_prescricao	= nr_prescricao_w
						AND	((cd_material	= cd_material_w) OR ((cd_material_w = obter_material_generico(cd_material)) 
						AND (ie_generico_w = 'S')));

						cd_local_estoque_w := coalesce(obter_local_disp_prescr(nr_prescricao_w, nr_seq_prescr_w, obter_perfil_ativo, nm_usuario_p), cd_local_estoque_w);
					END IF;
					ds_entrada_w := SUBSTR(ds_entrada_w || ',30',1,4000);
					SELECT obter_se_baixa_estoque_pac(cd_setor_atendimento_w, cd_material_w, nr_seq_ordem_p,nr_seq_cabine_w)
					INTO STRICT	ie_baixa_estoq_pac_w
					;
					
					IF (coalesce(ie_baixa_estoq_pac_w,'S') = 'N') THEN
						cd_local_estoque_w := NULL;
					END IF;
					
					ds_entrada_w := SUBSTR(ds_entrada_w || ',31',1,4000);
								
					IF (coalesce(ie_sobra_overfill_w,'N') IN ('O','S')) THEN
						
						SELECT 	coalesce(MAX(ie_atualiza_estoque),'N')
						INTO STRICT   	ie_atualiza_estoque_overfill_w 
						FROM   	tipo_baixa_prescricao
						WHERE  	coalesce(ie_prescricao_devolucao,'D') = 'P'
						AND		((cd_tipo_baixa = cd_baixa_overfill_w and ie_sobra_overfill_w = 'O') 
								or (cd_tipo_baixa = cd_baixa_sobra_w and ie_sobra_overfill_w = 'S'));
						ds_entrada_w := SUBSTR(ds_entrada_w || ',32',1,4000);

						IF (ie_atualiza_estoque_overfill_w = 'N') then
							cd_local_estoque_w := null;
							ds_entrada_w := SUBSTR(ds_entrada_w || ',33',1,4000);
						else
							SELECT	MAX(c.cd_local_estoque)
							INTO STRICT	cd_local_estoque_w
							FROM	far_cabine_seg_biol c,
									far_etapa_producao b,
									can_ordem_prod a
							WHERE	a.nr_sequencia	= nr_seq_ordem_p
							AND		b.nr_sequencia	= a.nr_seq_etapa_prod
							AND		b.nr_seq_cabine	= c.nr_sequencia;
						END IF;
		
						
						IF (coalesce(ie_sobra_overfill_w,'N') = 'S') THEN
						
							ds_entrada_w := SUBSTR(ds_entrada_w || ',34',1,4000);
						
							SELECT 	MAX(cd_unidade_medida_consumo)
							INTO STRICT	cd_unidade_medida_consumo_w
							FROM	material
							WHERE	cd_material	=	cd_material_w;
							
							IF (cd_unidade_medida_consumo_w <> cd_unidade_medida_w) THEN
								qt_dose_consumo_w := Obter_dose_convertida_quimio(cd_material_w,qt_material_w,cd_unidade_medida_w, cd_unidade_medida_consumo_w);
							ELSE
								qt_dose_consumo_w := qt_material_w;
							END IF;	
							
							cd_material_w	:=	obter_mat_med_disp_sobra(cd_material_w,	qt_dose_consumo_w);
							
						END IF;
					
					END IF;	
					
					SELECT 			MAX(nr_seq_prescricao)
					INTO STRICT			nr_sequencia_prescricao_w
					FROM 			can_ordem_item_prescr
					WHERE 			nr_sequencia = nr_seq_item_prescr_w;

					-- medicacao do paciente
					select  coalesce(max('S'), 'N') ie_medicacao_paciente
					into STRICT	ie_medicacao_paciente_w
					from	can_ordem_prod_mat a,
							can_ordem_item_prescr b,
							prescr_material c
					where	a.nr_seq_item_prescr = nr_seq_item_prescr_w
					and		b.nr_sequencia = a.nr_seq_item_prescr
					and		c.nr_sequencia = b.nr_seq_prescricao
					and		c.nr_prescricao = b.nr_prescricao
					and		c.ie_medicacao_paciente = 'S';

					-- quando for medicacao do paciente

					-- utilizar o local estoque do paciente da cabine de seguranca biologica
					if (ie_medicacao_paciente_w = 'S') then
						select  max(cd_local_estoque_pac)
						into STRICT    cd_local_estoque_pac_w
						from    far_cabine_seg_biol
						where   nr_sequencia = nr_seq_cabine_w;

						if (cd_local_estoque_pac_w IS NOT NULL AND cd_local_estoque_pac_w::text <> '') then
							cd_local_estoque_w := cd_local_estoque_pac_w;
						end if;
					end if;
					
					IF (ie_lanca_conta_w = 'S') THEN
						ds_entrada_w := SUBSTR(ds_entrada_w || ',35',1,4000);
						IF (coalesce(nr_seq_atepacu_w,0) = 0) THEN
							ds_entrada_w := SUBSTR(ds_entrada_w || ',36',1,4000);
							SELECT	MAX(nr_seq_interno)
							INTO STRICT	nr_seq_atepacu_w
							FROM 	atend_paciente_unidade
							WHERE 	nr_atendimento = nr_atendimento_w;
						END IF;
						ds_entrada_w := SUBSTR(ds_entrada_w || ',37',1,4000);
						INSERT	INTO material_atend_paciente(
							nr_sequencia,			nr_atendimento,
							dt_entrada_unidade,		cd_material,
							dt_atendimento,			cd_unidade_medida,
							qt_material,			qt_estoque, dt_atualizacao,
							nm_usuario,			cd_convenio,
							cd_categoria,			nr_doc_convenio,
							ie_tipo_guia,			dt_prescricao,
							cd_material_prescricao,		cd_material_exec,
							nr_prescricao,			cd_acao,
							cd_setor_atendimento,		qt_executada,
							vl_unitario,			qt_ajuste_conta,
							ie_valor_informado,			ie_guia_informada,
							ie_auditoria,			nm_usuario_original,
							cd_situacao_glosa,			nr_seq_atepacu,
							cd_local_estoque,			nr_seq_ordem_prod, cd_senha,
							nr_seq_lote_fornec,			ie_via_aplicacao,
								nr_seq_tipo_baixa,		cd_cgc_fornecedor,
								nr_sequencia_prescricao, dt_conta)
						VALUES (nr_seq_mat_atend_w,			nr_atendimento_w,
							dt_entrada_unidade_w,		cd_material_w,
							clock_timestamp(),				cd_unidade_medida_w,
							qt_material_w,			qt_material_w, clock_timestamp(),
							nm_usuario_p,			cd_convenio_w,
							cd_categoria_w,			nr_doc_convenio_w,
							ie_tipo_guia_w,			dt_prescricao_w,
							cd_material_prescr_w,		cd_material_w,
							nr_prescricao_w,			'1',
							cd_setor_atendimento_w,		qt_material_w,
							0, 				0,
							'N',				'N',
							'N',				nm_usuario_p,
							0,				nr_seq_atepacu_w,
							cd_local_estoque_w,		nr_seq_ordem_p, cd_senha_w,
							nr_seq_lote_fornec_w,		ie_via_aplicacao_w,
							nr_seq_tipo_baixa_w,	cd_cgc_fornec_w,
							coalesce(nr_seq_prescr_kit_w,nr_sequencia_prescricao_w),
							CASE WHEN coalesce(ie_data_conta_paciente_w,'DA')='DA' THEN  clock_timestamp() WHEN coalesce(ie_data_conta_paciente_w,'DA')='DV' THEN  coalesce(dt_validade_prescr_w,clock_timestamp())   ELSE coalesce(dt_prescricao_w,clock_timestamp()) END );
					END IF;
							
					CALL Atualiza_Preco_Material(nr_seq_mat_atend_w,nm_usuario_p);
					END;
				END IF;
				ds_entrada_w := SUBSTR(ds_entrada_w || ',38',1,4000);
				SELECT 	coalesce(MAX(nr_seq_prescricao),0)
				INTO STRICT	nr_seq_prescr_ww
				FROM	can_ordem_item_prescr
				WHERE	nr_sequencia = nr_seq_item_prescr_w;

				
				SELECT   coalesce(MAX(nr_sequencia),0)
				INTO STRICT   	 nr_seq_prescr_mat_w
				FROM 	 prescr_material
				WHERE	 nr_prescricao	= nr_prescricao_w
				AND      nr_sequencia = nr_seq_prescr_ww 
				AND	 coalesce(cd_motivo_baixa,0) = 0
				AND	((cd_material	= cd_material_w) OR 
					((cd_material_w = obter_material_generico(cd_material)) AND (ie_generico_w = 'S')) OR
					((obter_ficha_tecnica_medic(cd_material) = obter_ficha_tecnica_medic(cd_material_w)) AND (coalesce(ie_consiste_ficha_tecnica_w,'N') = 'S' )) OR 
					((Obter_controlador_estoque(cd_material_w) = Obter_controlador_estoque(cd_material)) AND (ie_controlador_estoque_w = 'S')));
				ds_entrada_w := SUBSTR(ds_entrada_w || ',39',1,4000);
				SELECT 	COUNT(*)
				INTO STRICT	qt_material_util_w
				FROM	can_ordem_prod_mat a,
						can_ordem_item_prescr b,
						prescr_material c
				WHERE	a.nr_seq_item_prescr 	= nr_seq_item_prescr_w
				AND		b.nr_sequencia			=	a.nr_seq_item_prescr
				AND		c.nr_sequencia			= b.nr_seq_prescricao
				AND		c.nr_prescricao 		= b.nr_prescricao
				AND	((a.cd_material	= cd_material_w) OR
					((cd_material_w = obter_material_generico(a.cd_material)) AND (ie_generico_w = 'S')) OR
					((obter_ficha_tecnica_medic(a.cd_material) = obter_ficha_tecnica_medic(cd_material_w)) AND (coalesce(ie_consiste_ficha_tecnica_w,'N') = 'S' )) OR 
					((Obter_controlador_estoque(cd_material_w) = Obter_controlador_estoque(a.cd_material)) AND (ie_controlador_estoque_w = 'S')))
				AND	 coalesce(c.cd_motivo_baixa,0) = 0
				AND	coalesce(c.dt_baixa::text, '') = '';
				
				ds_entrada_w := SUBSTR(ds_entrada_w || ',40',1,4000);
				IF (qt_material_util_w = 1) OR (ie_kit_mat_w = 'S') THEN
					ds_entrada_w := SUBSTR(ds_entrada_w || ',41',1,4000);

					UPDATE	prescr_material
					SET		dt_baixa	= clock_timestamp(),
							nm_usuario	= nm_usuario_p,
							cd_motivo_baixa	= 1
					WHERE	nr_sequencia    = coalesce(nr_seq_prescr_mat_w,nr_seq_item_prescr_w)
					AND		nr_prescricao	= nr_prescricao_w
					AND		coalesce(dt_baixa::text, '') = '';
				ELSE
					ds_entrada_w := SUBSTR(ds_entrada_w || ',42',1,4000);
					UPDATE	prescr_material
					SET		dt_baixa	= clock_timestamp(),
							nm_usuario	= nm_usuario_p
					WHERE	nr_sequencia    = nr_seq_prescr_mat_w
					AND		nr_prescricao	= nr_prescricao_w;
				END IF;
				
				END;
				ds_entrada_w := SUBSTR(ds_entrada_w || ',43',1,4000);	
			END LOOP;
			CLOSE c01;
		end if;
	end loop;
	
	update	can_ordem_prod
	set	dt_entrega_setor	= clock_timestamp(),
		nm_usuario_disp	= nm_usuario_p,
		dt_devolucao	 = NULL,
		nm_usuario_devol	 = NULL
	where	nr_sequencia	= nr_seq_ordem_p;
	
	UPDATE  log_gera_dispensacao
	SET 	dt_final = clock_timestamp()
	WHERE 	nr_sequencia = nr_sequencia_log_w;
	COMMIT;
	
	
EXCEPTION
WHEN OTHERS THEN
	ROLLBACK;
	
	UPDATE  log_gera_dispensacao
	SET 	dt_final = clock_timestamp()
	WHERE 	nr_sequencia = nr_sequencia_log_w;
	COMMIT;
	
	
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(184695, 'ERRO='||SQLERRM);

END;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_prescr_cmiv ( nr_seq_ordem_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

