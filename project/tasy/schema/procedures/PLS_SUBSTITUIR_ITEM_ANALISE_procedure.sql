-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_substituir_item_analise ( nr_sequencia_p bigint, nr_seq_ocorrencia_p bigint, ds_tipo_despesa_p text, cd_item_p bigint, nr_seq_analise_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, cd_estabelecimento_p bigint, nr_seq_grupo_atual_p bigint, nm_usuario_p text, ie_commitar_p text, nr_seq_motivo_glosa_p bigint, nr_seq_item_criado_p INOUT bigint) AS $body$
DECLARE

 
dt_item_w			timestamp;

tx_item_w			double precision;
nr_seq_item_w			bigint;
ie_origem_proced_w		bigint;
ie_tipo_item_w			varchar(1);
cd_procedimento_anterior_w	bigint;
ie_origem_proced_anterior_w	bigint;
ds_item_w			varchar(255);
nr_seq_item_glosa_oc_w		bigint;
nr_seq_glosa_oc_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conta_mat_w		bigint;
ie_tipo_glosa_oc_w		varchar(2);
nr_seq_mot_liberacao_w		bigint;
ie_tipo_glosa_oc		varchar(2);
nr_retorno_w			bigint;
vl_total_w			double precision;
vl_unitario_w			double precision;
qt_liberado_w			bigint;
nr_seq_item_partic_w		bigint;
tx_item_proc_w			double precision;

ie_tipo_motivo_w		varchar(3);
ie_tipo_historico_w		smallint;
nr_seq_item_ww			bigint;
ie_tipo_item_ww			varchar(1);
nr_seq_ocorrencia_w		bigint;
nr_seq_glosa_w			bigint;
nr_nivel_liberacao_w		bigint;
nr_nivel_liberacao_auditor_w	bigint;
nr_seq_oc_benef_w		bigint;
nr_seq_analise_conta_glosa_w	bigint;
nr_seq_conta_w			bigint;
ie_grupo_liberado_w		varchar(1);
ie_se_grupo_auditor_w		varchar(1);
cd_codigo_glosa_oco_w		varchar(20);
ie_status_w			varchar(1);
nr_seq_motivo_glosa_w		bigint;
nr_seq_ocor_w			bigint;
ie_existe_grupo_glosa_w		varchar(1);
nr_seq_nivel_lib_w		bigint;
qt_glosa_w			double precision;
vl_glosa_w			double precision;
qt_apresentado_w		double precision;
vl_total_apres_w		double precision;
ds_observacao_w			varchar(4000);
ds_tipo_motivo_w		varchar(255);
ds_motivo_liberacao_w		varchar(255);
ie_origem_analise_w		bigint;
var_tipo_item_w			varchar(2);
nr_seq_proc_partic_w		bigint;
ie_via_acesso_w			varchar(1);
cd_procedimento_imp_w		bigint;
ds_procedimento_imp_w		varchar(255);

nr_seq_conta_mat_ww		bigint;
nr_seq_conta_proc_ww		bigint;
nr_seq_item_pos_w		bigint;
nr_seq_analise_pos_w		bigint;
nr_seq_item_criado_w		bigint;
nr_seq_item_criado_ww		bigint;

dt_inicio_w			timestamp;
dt_fim_w			timestamp;

C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_glosa_oc, 
		nr_seq_conta_mat, 
		nr_seq_conta_proc, 
		ie_tipo 
	from	pls_analise_conta_item 
	where	nr_seq_conta = nr_seq_conta_p 
	and	ie_status <> 'I' 
	and	((nr_seq_conta_proc = nr_seq_item_w and ie_tipo_item_w = 'P') or (nr_seq_conta_mat = nr_seq_item_w and ie_tipo_item_w = 'M')) 
	order by 1;
	
/*Obter os participantes do procedimento*/
 
C02 CURSOR FOR 
	SELECT	nr_sequencia 
	from	w_pls_resumo_conta 
	where	nr_seq_item = nr_seq_item_w 
	and	ie_tipo_item = 'R';


BEGIN 
CALL pls_atualizar_via_acesso_conta(nr_seq_conta_p, nm_usuario_p);
 
select	CASE WHEN coalesce(ie_origem_proced_p,0)=0 THEN pls_obter_desc_material(cd_item_p)  ELSE obter_descricao_procedimento(cd_item_p,ie_origem_proced_P) END  
into STRICT	ds_item_w
;
 
select	dt_item, 
	tx_item, 
	nr_seq_item, 
	ie_tipo_item, 
	vl_total, 
	vl_unitario, 
	qt_liberado, 
	ie_via_acesso 
into STRICT	dt_item_w, 
	tx_item_w, 
	nr_seq_item_w, 
	ie_tipo_item_w, 
	vl_total_w, 
	vl_unitario_w, 
	qt_liberado_w, 
	ie_via_acesso_w 
from	w_pls_resumo_conta 
where	nr_sequencia = nr_sequencia_p;
 
if (ie_tipo_item_w = 'P') then 
	select	cd_procedimento, 
		ie_origem_proced, 
		tx_item, 
		dt_inicio_proc, 
		dt_fim_proc, 
		cd_procedimento_imp, 
		ds_procedimento_imp 
	into STRICT	cd_procedimento_anterior_w, 
		ie_origem_proced_anterior_w, 
		tx_item_proc_w, 
		dt_inicio_w, 
		dt_fim_w, 
		cd_procedimento_imp_w, 
		ds_procedimento_imp_w 
	from	pls_conta_proc 
	where	nr_sequencia = nr_seq_item_w;
 
end if;
 
select	max(ie_origem_analise) 
into STRICT	ie_origem_analise_w 
from	pls_analise_conta 
where	nr_sequencia = nr_seq_analise_p;
 
if (coalesce(ie_origem_analise_w,1) in (1,2,3)) then 
	/*Gravar a glosa na análise*/
 
	nr_retorno_w := pls_grava_glosa_analise_conta(nr_seq_motivo_glosa_p, nr_seq_ocorrencia_p, nr_sequencia_p, 0, 0, 0, 0, 0, 'Item substituido pelo auditor '||Obter_Nome_Usuario(nm_usuario_p), nr_seq_grupo_atual_p, nr_seq_analise_p, nm_usuario_p, cd_estabelecimento_p, null, nr_retorno_w, 'N', 'S', 'S');
 
	update	pls_analise_conta_item 
	set	ie_substituido = 'S' 
	where	nr_sequencia = nr_retorno_w;	
				 
end if;	
 
if (coalesce(ie_origem_proced_p,0) > 0) then 
 
	if (ie_origem_analise_w = 3) then 
		nr_seq_item_criado_w := pls_inserir_proc_analise_ptu(	cd_item_p, ie_origem_proced_p, qt_item_p, dt_item_w, dt_inicio_w, dt_fim_w, null, null, null, nr_seq_conta_p, null, null, null, nm_usuario_p, nr_seq_analise_p, cd_estabelecimento_p, nr_sequencia_p, 'N', nr_seq_grupo_atual_p, tx_item_proc_w, null, null, null, null, null, null, null, null, null, nr_seq_item_criado_w);
	else 
		delete	FROM w_pls_proc_participante 
		where	nr_seq_analise = nr_seq_analise_p;
		 
		insert into w_pls_proc_participante(	cd_medico, dt_atualizacao, dt_atualizacao_nrec, 
				nm_usuario, nm_usuario_nrec, nr_seq_cbo_saude, 
				nr_seq_grau_partic, nr_seq_prestador, nr_sequencia, 
				nr_seq_analise, nm_medico_executor_imp) 
			(SELECT	cd_medico, dt_atualizacao, dt_atualizacao_nrec, 
				nm_usuario, nm_usuario_nrec, nr_seq_cbo_saude, 
				nr_seq_grau_partic, nr_seq_prestador, nextval('w_pls_proc_participante_seq'), 
				nr_seq_analise_p, nm_medico_executor_imp 
			from	pls_proc_participante 
			where	nr_seq_conta_proc = nr_seq_item_w	);
		 
		nr_seq_item_criado_w := pls_inserir_proc_analise(cd_item_p, ie_origem_proced_p, qt_item_p, vl_uni_apres_p, vl_total_apres_p, dt_item_w, dt_inicio_w, dt_fim_w, ie_via_acesso_w, null, null, nr_seq_conta_p, null, null, null, nm_usuario_p, nr_seq_analise_p, cd_estabelecimento_p, nr_sequencia_p, 'N', nr_seq_grupo_atual_p, tx_item_proc_w, cd_procedimento_imp_w, ds_procedimento_imp_w, nr_seq_item_criado_w);
	end if;
else 
	nr_seq_item_criado_w := pls_inserir_mat_analise(cd_item_p, qt_item_p, vl_uni_apres_p, vl_total_apres_p, dt_item_w, null, null, nr_seq_analise_p, null, nr_seq_conta_p, nr_sequencia_p, nm_usuario_p, cd_estabelecimento_p, 'N', nr_seq_grupo_atual_p, nr_seq_item_criado_w);	
end if;
 
select	max(nr_sequencia) 
into STRICT	nr_seq_mot_liberacao_w 
from	pls_mot_lib_analise_conta 
where	coalesce(ie_substitui_item,'N') = 'S';
 
if (coalesce(nr_seq_mot_liberacao_w,0) = 0) then 
	/*'Não existe um motivo de liberação padrão para substituição do item.'||chr(10)||chr(13)|| 
	'O cadastro deste é realizado em: '||chr(10)||chr(13)|| 
	'Cadastros Gerais > Plano de Saúde > OPS - Contas médicas > '||chr(10)||chr(13)|| 
	'Motivos de liberação da análise da conta > campo Substituir item.'||'#@#@');*/
 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(177514);	
end if;
 
/*Diego OS- 307670 - Setado todos os pareceres das glosas e ocorrencias deste item para ficar como o valor padrão para itens substituidos*/
 
open C01;
loop 
fetch C01 into 
	nr_seq_item_glosa_oc_w, 
	nr_seq_glosa_oc_w, 
	nr_seq_conta_mat_w, 
	nr_seq_conta_proc_w, 
	ie_tipo_glosa_oc_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	ie_tipo_motivo_w	:= 'N';
	ds_motivo_liberacao_w	:= 'Liberação desfavorável';
	 
	/*Desfeita qualquer liberação que pode ter ocorrido préviamente*/
 
	begin 
	CALL pls_desfazer_lib_glosa_oc(nr_seq_item_glosa_oc_w, nr_seq_glosa_oc_w, nm_usuario_p, 
				 nr_seq_conta_p, nr_seq_analise_p, nr_seq_item_glosa_oc_w, ie_tipo_p, 
				 cd_estabelecimento_p, nr_seq_grupo_atual_p, nr_sequencia_p, 
				 'N','N');
	exception 
	when others then 
		nr_seq_item_glosa_oc_w := nr_seq_item_glosa_oc_w;
	end;
	 
	/*Obter dados da glosa/ocorrência*/
 
	select	ie_status, 
		cd_codigo, 
		nr_seq_conta_proc, 
		nr_seq_conta_mat, 
		nr_seq_proc_partic, 
		coalesce(nr_seq_conta,0), 
		CASE WHEN ie_tipo='O' THEN  nr_seq_glosa_oc  ELSE null END , 
		CASE WHEN ie_tipo='G' THEN  nr_seq_glosa_oc  ELSE null END  
	into STRICT	ie_status_w, 
		cd_codigo_glosa_oco_w, 
		nr_seq_conta_proc_w, 
		nr_seq_conta_mat_w, 
		nr_seq_proc_partic_w, 
		nr_seq_conta_w,	 
		nr_seq_ocorrencia_w, 
		nr_seq_glosa_w 
	from	pls_analise_conta_item 
	where 	nr_sequencia = nr_seq_item_glosa_oc_w;
		 
	if (ie_tipo_glosa_oc_w = 'G') then 
		nr_seq_motivo_glosa_w := pls_obter_seq_motivo_glosa(cd_codigo_glosa_oco_w);
	else 
		nr_seq_ocor_w := pls_obter_seq_ocorrencia(cd_codigo_glosa_oco_w);
	end if;
 
	/*Consistência dos niveis de liberação do auditor e da ocorrência*/
 
	if (ie_tipo_glosa_oc_w = 'O') and (coalesce('N','S') = 'S') then 
 
		/*Nivel de liberação da ocorrencia*/
 
		select	a.nr_seq_nivel_lib, 
			a.nr_sequencia 
		into STRICT	nr_seq_nivel_lib_w, 
			nr_seq_oc_benef_w 
		from	pls_ocorrencia a, 
			pls_ocorrencia_benef b 
		where	b.nr_seq_ocorrencia = a.nr_sequencia 
		and	b.nr_sequencia 	= nr_seq_glosa_oc_w;
 
		select	max(nr_nivel_liberacao) 
		into STRICT	nr_nivel_liberacao_w 
		from	pls_nivel_liberacao 
		where	nr_sequencia = nr_seq_nivel_lib_w;
			 
	end if;
	 
	/*Obter quantidade e valor apresentado*/
 
	begin 
	select	qt_apresentado,	 
		vl_total_apres	 
	into STRICT	qt_apresentado_w,	 
		vl_total_apres_w	 
	from	w_pls_resumo_conta	 
	where	((nr_seq_item = nr_seq_conta_proc_w AND ie_tipo_item = 'P') 
	or 	 (nr_seq_item = nr_seq_conta_mat_w AND ie_tipo_item = 'M') 
	or	 (nr_seq_partic_proc = nr_seq_proc_partic_w AND ie_tipo_item = 'R')) 
	and	nr_seq_analise = nr_seq_analise_p;
	exception 
	when others then	 
		qt_apresentado_w := null;	
		vl_total_apres_w := null;	
	end;
 
	update	pls_analise_conta_item 
	set	qt_glosa	= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE CASE WHEN ie_tipo_motivo_w='A' THEN  0 WHEN ie_tipo_motivo_w='N' THEN  qt_glosa END  END , 
		vl_glosa	= CASE WHEN coalesce(nr_seq_conta_proc,coalesce(nr_seq_conta_mat,coalesce(nr_seq_proc_partic,0)))=0 THEN  0  ELSE CASE WHEN ie_tipo_motivo_w='A' THEN  0 WHEN ie_tipo_motivo_w='N' THEN  vl_glosa END  END  
	where	nr_sequencia	= nr_seq_item_glosa_oc_w;
 
	select	vl_glosa, 
		qt_glosa 
	into STRICT	vl_glosa_w, 
		qt_glosa_w 
	from	pls_analise_conta_item 
	where	nr_sequencia = nr_seq_item_glosa_oc_w;
			 
	if (coalesce(nr_seq_conta_proc_w,0) > 0) then 
		nr_seq_item_ww	:= nr_seq_conta_proc_w;
		ie_tipo_item_ww	:= 'P';
	elsif (coalesce(nr_seq_conta_mat_w,0) > 0) then 
		nr_seq_item_ww	:= nr_seq_conta_mat_w;
		ie_tipo_item_ww	:= 'M';	
	end if;
 
	if (coalesce(nr_seq_glosa_oc_w,0) > 0) then 
		if (ie_tipo_glosa_oc_w = 'G') then 
			nr_seq_glosa_w		:= nr_seq_glosa_oc_w;
		else 
			nr_seq_ocorrencia_w	:= nr_seq_glosa_oc_w;
		end if;
	end if;
		 
	/*Obtem o tipo de histórico se é uma liberação de glosa ou de ocorrencia*/
 
	select	CASE WHEN ie_tipo_glosa_oc_w='G' THEN  5 WHEN ie_tipo_glosa_oc_w='O' THEN  6 END  
	into STRICT	ie_tipo_historico_w 
	;
	 
	/*Atualizado a glosa / ocorrencia*/
 
	update	pls_analise_conta_item 
	set	ie_status 	= 'N',--ie_tipo_motivo_w, -- COLOCAR 'N' 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao 	= clock_timestamp(), 
		ie_consistencia = 'N', 
		ie_situacao	= 'A' 
	where	nr_sequencia	= nr_seq_item_glosa_oc_w;
 
	/*Criado o parecer*/
	 
	insert into pls_analise_parecer_item(nr_sequencia, nr_seq_item, nr_seq_motivo, 
		 dt_atualizacao, nm_usuario, dt_atualizacao_nrec, 
		 nm_usuario_nrec, ds_parecer, ie_tipo_motivo)		 
	values (nextval('pls_analise_parecer_item_seq'), nr_seq_item_glosa_oc_w, nr_seq_mot_liberacao_w, 
		 clock_timestamp(), nm_usuario_p, clock_timestamp(), 
		 nm_usuario_p, 'Parecer criado automáticamente pelo sistema por motivo de substituição do item.', ie_tipo_motivo_w); -- ie_tipo_motivo_w = 'N' 
		
	select	CASE WHEN ie_tipo_motivo_w='A' THEN 'Liberação favorável' WHEN ie_tipo_motivo_w='N' THEN 'Liberação desfavorável' WHEN ie_tipo_motivo_w='L' THEN 'Liberação parcial' END  
	into STRICT	ds_tipo_motivo_w 
	;
 
	ds_observacao_w := 	'Tipo de liberação: '||chr(13)||chr(10)|| 
				chr(9)||ds_tipo_motivo_w||chr(13)||chr(10)||chr(13)||chr(10)|| 
				'Motivo de liberação:'||chr(13)||chr(10)|| 
				chr(9)||ds_motivo_liberacao_w||chr(13)||chr(10)||chr(13)||chr(10)|| 
				'Observação/Parecer: '||chr(13)||chr(10)|| 
				chr(9)||'Parecer criado automáticamente pelo sistema por motivo de substituição do item.';
				 
	/*Adiciona o histórico da ação*/
 
	CALL pls_inserir_hist_analise(nr_seq_conta_p, nr_seq_analise_p, ie_tipo_historico_w, 
				 nr_seq_item_ww, ie_tipo_item_ww, nr_seq_ocorrencia_w, 
				 nr_seq_glosa_w, ds_observacao_w, nr_seq_grupo_atual_p, 
				 nm_usuario_p, cd_estabelecimento_p);				
	 
	/*copia*/
	 
	end;
	 
	commit;
end loop;
close C01;
 
select 	CASE WHEN  ie_tipo_item_w='M' THEN nr_seq_item_w  ELSE null END , 
	CASE WHEN  ie_tipo_item_w='P' THEN nr_seq_item_w  ELSE null END 		 
into STRICT	nr_seq_conta_mat_ww, 
	nr_seq_conta_proc_ww
;
 
if (coalesce(ie_origem_analise_w,1) in (1,3)) then 
	 
	CALL pls_analise_status_pgto(nr_seq_conta_p, nr_seq_conta_mat_ww, nr_seq_conta_proc_ww,				 
				nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p, 
				nr_seq_proc_partic_w,null,null,null);
				 
elsif (coalesce(ie_origem_analise_w,1) = 2) then 
	 
	CALL pls_analise_status_pgto_pos(	nr_seq_conta_p, nr_seq_conta_mat_ww, nr_seq_conta_proc_ww,				 
					nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p	);
 
	CALL pls_analise_status_fat(		nr_seq_conta_p, nr_seq_conta_mat_ww, nr_seq_conta_proc_ww,				 
					nr_seq_analise_p, cd_estabelecimento_p, nm_usuario_p	);					
end if;
 
/*Colocando o procedimento antigo como cancelado */
 
/*Diego 22/07/2011 - OS 339619 = Campos _original criados para guardar o valor liberado antes da substituição para o caso de um desfazer substituição.*/
 
update	w_pls_resumo_conta 
set	ie_status 		= 'C', 
	ie_pagamento		= 'G', 
	vl_total 		= 0, 
	vl_unitario 		= 0, 
	qt_liberado 		= 0, 
	vl_total_original 	= vl_total_w, 
	vl_unitario_original 	= vl_unitario_w, 
	qt_liberado_original 	= qt_liberado_w	 
where	nr_sequencia = nr_sequencia_p;
 
open C02;
loop 
fetch C02 into	 
	nr_seq_item_partic_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	 
	update	w_pls_resumo_conta 
	set	ie_status 		= 'C', 
		ie_pagamento		= 'G', 
		vl_total 		= 0, 
		vl_unitario 		= 0, 
		qt_liberado 		= 0, 
		vl_total_original 	= vl_total_w, 
		vl_unitario_original 	= vl_unitario_w, 
		qt_liberado_original 	= qt_liberado_w		 
	where	nr_sequencia = nr_seq_item_partic_w;
	 
	end;
end loop;
close C02;
 
CALL pls_inserir_hist_analise(nr_seq_conta_p, nr_seq_analise_p, 14, 
			 nr_seq_item_w, ie_tipo_item_w, null, 
			 null, 'O item foi substituido pelo item '||cd_item_p||' - '||ds_item_w, nr_seq_grupo_atual_p, 
			 nm_usuario_p, cd_estabelecimento_p);
 
begin 
select	nr_sequencia, 
	nr_seq_analise 
into STRICT	nr_seq_item_pos_w, 
	nr_seq_analise_pos_w 
from	w_pls_resumo_conta 
where	nr_seq_item_princ = nr_sequencia_p;
exception 
when others then 
	nr_seq_item_pos_w	:= null;
	nr_seq_analise_pos_w	:= null;
end;
			 
/*Diego OS 402760 - Ao substituir um item na produção, se este existir na análise de pós- também deve ser substituido.*/
			 
if (coalesce(nr_seq_item_pos_w,0) > 0) and (coalesce(nr_seq_analise_pos_w,0) > 0) then			 
	nr_seq_item_criado_ww := pls_substituir_item_analise(	nr_seq_item_pos_w, null, ds_tipo_despesa_p, cd_item_p, nr_seq_analise_pos_w, ie_tipo_p, ie_origem_proced_p, qt_item_p, vl_uni_apres_p, vl_total_apres_p, nr_seq_conta_p, cd_estabelecimento_p, nr_seq_grupo_atual_p, nm_usuario_p, 'N', null, nr_seq_item_criado_ww);
end if;
 
nr_seq_item_criado_p := nr_seq_item_criado_w;
			 
if (coalesce(ie_commitar_p,'S') = 'S') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_substituir_item_analise ( nr_sequencia_p bigint, nr_seq_ocorrencia_p bigint, ds_tipo_despesa_p text, cd_item_p bigint, nr_seq_analise_p bigint, ie_tipo_p text, ie_origem_proced_p bigint, qt_item_p bigint, vl_uni_apres_p bigint, vl_total_apres_p bigint, nr_seq_conta_p bigint, cd_estabelecimento_p bigint, nr_seq_grupo_atual_p bigint, nm_usuario_p text, ie_commitar_p text, nr_seq_motivo_glosa_p bigint, nr_seq_item_criado_p INOUT bigint) FROM PUBLIC;

