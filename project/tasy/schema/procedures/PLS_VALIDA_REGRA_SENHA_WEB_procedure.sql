-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_regra_senha_web ( ie_tipo_login_p text, ds_login_p text, ds_senha_md5_p text, ds_senha_limpa_p text, ds_senha_nova_p text, ie_validou_p INOUT text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ie_validou_w			varchar(255) := 'OK';
qt_tentativas_usu_w		bigint;
qt_dias_ult_troc_senha_w	bigint;
qt_troca_senha_reg_w		bigint;
qt_tentativas_usu_reg_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_usuario_w		bigint;
nr_seq_segurado_w		bigint;
ds_salt_w			varchar(15);
ds_senha_sha256_w		varchar(64);
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ds_senha_w			varchar(64);		
nm_segurado_w			varchar(15);
ie_senha_existente_w	varchar(1) := 'N';
qt_senha_diferente_w	bigint := 0;
nm_usuario_web_w		varchar(15);
		

BEGIN
if ((cd_estabelecimento_p IS NOT NULL AND cd_estabelecimento_p::text <> '') and cd_estabelecimento_p > 0) then
	cd_estabelecimento_w	:= cd_estabelecimento_p;
end if;

if (pls_obter_se_controle_estab('RE') = 'S') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_senha_login_web
	where	trunc(clock_timestamp()) between trunc(coalesce(dt_inicio_vigencia, clock_timestamp())) and trunc(coalesce(dt_fim_vigencia, clock_timestamp()))
	and (coalesce(cd_estabelecimento_w::text, '') = ''
	or	cd_estabelecimento	= cd_estabelecimento_w);
else
	select	max(nr_sequencia)
	into STRICT	nr_seq_regra_w
	from	pls_regra_senha_login_web
	where	trunc(clock_timestamp()) between trunc(coalesce(dt_inicio_vigencia, clock_timestamp())) and trunc(coalesce(dt_fim_vigencia, clock_timestamp()));
end if;

if	((nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '')
--OS 1370192, tratamento para alterar a senha quando o usuario for "forcado" a alterar a senha devido a mesma nao estar no formato sha256.
or 	((coalesce(nr_seq_regra_w::text, '') = '') and (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> ''))) then
	
	if (nr_seq_regra_w IS NOT NULL AND nr_seq_regra_w::text <> '') then
		select	coalesce(qt_dias_troca_senha,0),
			coalesce(qt_bloqueio_login,0)
		into STRICT	qt_troca_senha_reg_w,
			qt_tentativas_usu_reg_w
		from	pls_regra_senha_login_web
		where	nr_sequencia = nr_seq_regra_w;
	end if;
	
	if (ie_tipo_login_p = 'P') then
		begin
			select 	ds_tec,
				ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_usuario_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 	= 'A'
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
			
			if (ds_salt_w IS NOT NULL AND ds_salt_w::text <> '') then
				ds_senha_sha256_w := obter_sha2(upper(ds_senha_limpa_p) || ds_salt_w, 256);
			end if;		
		
			select (trunc(clock_timestamp()) - trunc(coalesce(dt_alteracao_senha, dt_atualizacao))),
					nr_sequencia,
					substr(nm_usuario_web,1,15)
			into STRICT	qt_dias_ult_troc_senha_w,
					nr_seq_usuario_w,
					nm_usuario_web_w
			from    pls_usuario_web a
			where   upper(a.nm_usuario_web) = upper(ds_login_p)
			and     a.ie_situacao 	= 'A' 
			and (a.ds_senha 		= ds_senha_sha256_w 
			or 		a.ds_senha		= ds_senha_md5_p
			or 		a.ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or		a.cd_estabelecimento	= cd_estabelecimento_w);
			
			if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then
			
				-- OS 1647949 valida se a senha nova eh igual a senha atual
				if (obter_sha2(upper(ds_senha_nova_p) || ds_salt_w, 256) = ds_senha_sha256_w) then
					ie_validou_w := 'MESMA_SENHA';
				else
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
					
					if (qt_senha_diferente_w > 0) then
						ie_senha_existente_w := pls_gerencia_senha_web_pck.verificar_senha_existente(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w);

						if (ie_senha_existente_w = 'S') then							
							ie_validou_w := 'QT_SENHA_DIFERENTE:' || qt_senha_diferente_w;
						end if;
					end if;
				end if;
				
				if (ie_validou_w = 'OK') then
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w := 'SENHA_ALTERADA';						
				end if;
				
			elsif (qt_dias_ult_troc_senha_w >= qt_troca_senha_reg_w and qt_troca_senha_reg_w > 0) then
				ie_validou_w := 'TROCA_SENHA';
			else
				update	pls_usuario_web
				set	qt_tentativa_acesso	= 0,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= substr(nm_usuario_web,1,15)
				where	nr_sequencia		= nr_seq_usuario_w;
			end if;
		exception
		when others then
			begin
				select	coalesce(qt_tentativa_acesso,0),
					nr_sequencia
				into STRICT	qt_tentativas_usu_w,
					nr_seq_usuario_w
				from    pls_usuario_web a
				where   upper(a.nm_usuario_web) = upper(ds_login_p)
				and     a.ie_situacao = 'A'
				and (coalesce(cd_estabelecimento_w::text, '') = ''
				or	a.cd_estabelecimento	= cd_estabelecimento_w);
				
				if (qt_tentativas_usu_w >= qt_tentativas_usu_reg_w and qt_tentativas_usu_reg_w > 0) then
					update	pls_usuario_web
					set	ie_situacao	= 'I',
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= substr(nm_usuario_web,1,15)
					where	nr_sequencia	= nr_seq_usuario_w;
					
					ie_validou_w := 'BLOQUEADO';
				else
					update	pls_usuario_web
					set	qt_tentativa_acesso	= (qt_tentativas_usu_w+1),
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= substr(nm_usuario_web,1,15)
					where	nr_sequencia		= nr_seq_usuario_w;
					
					CALL pls_gravar_log_acesso_portal(null, null, nr_seq_usuario_w,
								     null, null, null,
								     null, null, 40,
								     'Tentou logar no portal.','Procedure - pls_valida_regra_senha_web', 'S');	
				end if;
			exception
			when others then
				qt_tentativas_usu_w 		:= null;
				qt_dias_ult_troc_senha_w 	:= null;
			end;
		end;
	elsif (ie_tipo_login_p = 'E') then
		begin
			select 	ds_tec,
				ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_estipulante_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 	= 'A'
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
			
			if (ds_salt_w IS NOT NULL AND ds_salt_w::text <> '') then
				ds_senha_sha256_w := obter_sha2(upper(ds_senha_limpa_p) || ds_salt_w, 256);
			end if;		
				
			select (trunc(clock_timestamp()) - trunc(coalesce(dt_alteracao_senha, dt_atualizacao))),
					nr_sequencia,
					substr(nm_usuario_web,1,15)
			into STRICT	qt_dias_ult_troc_senha_w,
					nr_seq_usuario_w,
					nm_usuario_web_w
			from    pls_estipulante_web a
			where   upper(a.nm_usuario_web) = upper(ds_login_p)
			and     a.ie_situacao = 'A' 
			and (a.ds_senha 		= ds_senha_sha256_w 
			or 	a.ds_senha		= ds_senha_md5_p
			or 	a.ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	a.cd_estabelecimento	= cd_estabelecimento_w);			
			
			if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then
			
				-- OS 1647949 valida se a senha nova eh igual a senha atual
				if (obter_sha2(upper(ds_senha_nova_p) || ds_salt_w, 256) = ds_senha_sha256_w) then
					ie_validou_w := 'MESMA_SENHA';
				else
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
					
					if (qt_senha_diferente_w > 0) then
						ie_senha_existente_w := pls_gerencia_senha_web_pck.verificar_senha_existente(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w);

						if (ie_senha_existente_w = 'S') then							
							ie_validou_w := 'QT_SENHA_DIFERENTE:' || qt_senha_diferente_w;
						end if;
					end if;
				end if;
				
				if (ie_validou_w = 'OK') then
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w := 'SENHA_ALTERADA';						
				end if;
			elsif (qt_dias_ult_troc_senha_w >= qt_troca_senha_reg_w and qt_troca_senha_reg_w > 0) then
				ie_validou_w := 'TROCA_SENHA';
			else
				update	pls_estipulante_web
				set	qt_tentativa_acesso	= 0,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= substr(nm_usuario_web,1,15)
				where	nr_sequencia		= nr_seq_usuario_w;
			end if;
		exception
		when others then
			begin
				select	coalesce(qt_tentativa_acesso,0),
					nr_sequencia
				into STRICT	qt_tentativas_usu_w,
					nr_seq_usuario_w
				from    pls_estipulante_web a
				where   upper(a.nm_usuario_web) = upper(ds_login_p)
				and     a.ie_situacao = 'A'
				and (coalesce(cd_estabelecimento_w::text, '') = ''
				or	a.cd_estabelecimento	= cd_estabelecimento_w);
				
				if (qt_tentativas_usu_w >= qt_tentativas_usu_reg_w and qt_tentativas_usu_reg_w > 0) then
					update	pls_estipulante_web
					set	ie_situacao = 'I',
						dt_atualizacao = clock_timestamp()
					where	nr_sequencia = nr_seq_usuario_w;
					
					ie_validou_w := 'BLOQUEADO';
				else
					update	pls_estipulante_web
					set	qt_tentativa_acesso	= (qt_tentativas_usu_w+1),
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= substr(nm_usuario_web,1,15)
					where	nr_sequencia		= nr_seq_usuario_w;
					
					CALL pls_gravar_log_acesso_portal(null, nr_seq_usuario_w, null,
								     null, null, null,
								     null, null, 40,
								     'Tentou logar no portal.','Procedure - pls_valida_regra_senha_web', 'S');	
				end if;
			exception
			when others then
				qt_tentativas_usu_w 		:= null;
				qt_dias_ult_troc_senha_w 	:= null;
			end;
		end;
	elsif (ie_tipo_login_p = 'GC') then	
		begin		
			select 	ds_tec,
				ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_grupo_contrato_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 	= 'A'
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
			
			if (ds_salt_w IS NOT NULL AND ds_salt_w::text <> '') then
				ds_senha_sha256_w := obter_sha2(upper(ds_senha_limpa_p) || ds_salt_w, 256);
			end if;		
			
			select (trunc(clock_timestamp()) - trunc(coalesce(dt_alteracao_senha, dt_atualizacao))),
					nr_sequencia,
					substr(nm_usuario_web,1,15)
			into STRICT	qt_dias_ult_troc_senha_w,
					nr_seq_usuario_w,
					nm_usuario_web_w
			from    pls_grupo_contrato_web a
			where   upper(a.nm_usuario_web) = upper(ds_login_p)
			and     a.ie_situacao = 'A' 
			and (a.ds_senha 		= ds_senha_sha256_w 
			or 	a.ds_senha		= ds_senha_md5_p
			or 	a.ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);

			if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then
			
				-- OS 1647949 valida se a senha nova eh igual a senha atual
				if (obter_sha2(upper(ds_senha_nova_p) || ds_salt_w, 256) = ds_senha_sha256_w) then
					ie_validou_w := 'MESMA_SENHA';
				else
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
					
					if (qt_senha_diferente_w > 0) then
						ie_senha_existente_w := pls_gerencia_senha_web_pck.verificar_senha_existente(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w);

						if (ie_senha_existente_w = 'S') then							
							ie_validou_w := 'QT_SENHA_DIFERENTE:' || qt_senha_diferente_w;
						end if;
					end if;
				end if;
				
				if (ie_validou_w = 'OK') then
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w := 'SENHA_ALTERADA';						
				end if;
			elsif (qt_dias_ult_troc_senha_w >= qt_troca_senha_reg_w and qt_troca_senha_reg_w > 0) then
				ie_validou_w := 'TROCA_SENHA';
			else
				update	pls_grupo_contrato_web
				set	qt_tentativa_acesso	= 0,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= substr(nm_usuario_web,1,15)
				where	nr_sequencia		= nr_seq_usuario_w;
			end if;
		exception
		when others then
			begin
				select	coalesce(qt_tentativa_acesso,0),
					nr_sequencia
				into STRICT	qt_tentativas_usu_w,
					nr_seq_usuario_w
				from    pls_grupo_contrato_web a         
				where   upper(a.nm_usuario_web) = upper(ds_login_p)
				and     ie_situacao = 'A'
				and (coalesce(cd_estabelecimento_w::text, '') = ''
				or	cd_estabelecimento	= cd_estabelecimento_w);
				
				if (qt_tentativas_usu_w >= qt_tentativas_usu_reg_w and qt_tentativas_usu_reg_w > 0) then
					update	pls_grupo_contrato_web
					set	ie_situacao	= 'I',
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= substr(nm_usuario_web,1,15)
					where	nr_sequencia	= nr_seq_usuario_w;
					ie_validou_w := 'BLOQUEADO';
				else
					update	pls_grupo_contrato_web
					set	qt_tentativa_acesso	= (qt_tentativas_usu_w+1),
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= substr(nm_usuario_web,1,15)
					where	nr_sequencia		= nr_seq_usuario_w;
					
					CALL pls_gravar_log_acesso_portal(null, null, null,
								     null, nr_seq_usuario_w, null,
								     null, null, 40,
								     'Tentou logar no portal.','Procedure - pls_valida_regra_senha_web', 'S');	
				end if;
			exception
			when others then
				qt_tentativas_usu_w := null;
				qt_dias_ult_troc_senha_w := null;
			end;
		end;
	elsif (ie_tipo_login_p = 'B') then
		begin
			select 	a.ds_tec,
				a.ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from    pls_segurado_web a,
				pls_segurado_carteira c,    
			        pls_segurado b   
			where   a.nr_seq_segurado 	= b.nr_sequencia    
			and     b.nr_sequencia    	= c.nr_seq_segurado 
			and     a.ie_situacao     	= 'A'               
			and     c.cd_usuario_plano	= elimina_caractere_especial(ds_login_p)  
			and     pls_obter_dados_segurado(b.nr_sequencia, 'CS') = 'A'
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	a.cd_estabelecimento	= cd_estabelecimento_w);
			
			if (ds_salt_w IS NOT NULL AND ds_salt_w::text <> '') then
				ds_senha_sha256_w := obter_sha2(upper(ds_senha_limpa_p) || ds_salt_w, 256);
			end if;		
		
			select (trunc(clock_timestamp()) - trunc(coalesce(a.dt_alteracao_senha, a.dt_atualizacao))),
				a.nr_sequencia,
				substr(tws_get_name_person(b.cd_pessoa_fisica, b.cd_estabelecimento),1,15) nm_segurado
			into STRICT	qt_dias_ult_troc_senha_w,
				nr_seq_usuario_w,
				nm_segurado_w
			from    pls_segurado_web a,
				pls_segurado_carteira c,    
			        pls_segurado b              
			where   a.nr_seq_segurado   = b.nr_sequencia    
			and     b.nr_sequencia      = c.nr_seq_segurado 
			and     a.ie_situacao       = 'A'               
			and     c.cd_usuario_plano = elimina_caractere_especial(ds_login_p)  
			and     pls_obter_dados_segurado(b.nr_sequencia, 'CS') = 'A'
			and (a.ds_senha 		= ds_senha_sha256_w 
			or 	a.ds_senha		= ds_senha_md5_p
			or 	a.ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	a.cd_estabelecimento	= cd_estabelecimento_w);
								
			if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then			
				-- OS 1647949 valida se a senha nova eh igual a senha atual
				if (obter_sha2(upper(ds_senha_nova_p) || ds_salt_w, 256) = ds_senha_sha256_w) then
					ie_validou_w := 'MESMA_SENHA';
				else
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
					
					if (qt_senha_diferente_w > 0) then
						ie_senha_existente_w := pls_gerencia_senha_web_pck.verificar_senha_existente(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w);

						if (ie_senha_existente_w = 'S') then							
							ie_validou_w := 'QT_SENHA_DIFERENTE:' || qt_senha_diferente_w;
						end if;
					end if;
				end if;
				
				if (ie_validou_w = 'OK') then
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_segurado_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w := 'SENHA_ALTERADA';						
				end if;
			elsif (qt_dias_ult_troc_senha_w >= qt_troca_senha_reg_w and qt_troca_senha_reg_w > 0) then
				ie_validou_w := 'TROCA_SENHA';
			else
				update	pls_segurado_web
				set	qt_tentativa_acesso	= 0,
					dt_atualizacao		= clock_timestamp()
				where	nr_sequencia		= nr_seq_usuario_w;
			end if;
		exception
		when others then
			begin
				select	coalesce(qt_tentativa_acesso,0),
					a.nr_sequencia,
					b.nr_sequencia,
					substr(tws_get_name_person(b.cd_pessoa_fisica, b.cd_estabelecimento),1,15) nm_segurado
				into STRICT	qt_tentativas_usu_w,
					nr_seq_usuario_w,
					nr_seq_segurado_w,
					nm_segurado_w
				from    pls_segurado_web a,         
					pls_segurado_carteira c,    
					pls_segurado b              
				where   a.nr_seq_segurado   = b.nr_sequencia    
				and     b.nr_sequencia      = c.nr_seq_segurado 
				and     a.ie_situacao       = 'A'               
				and     c.cd_usuario_plano = elimina_caractere_especial(ds_login_p)  
				and     pls_obter_dados_segurado(b.nr_sequencia, 'CS') = 'A'
				and (coalesce(cd_estabelecimento_w::text, '') = ''
				or	a.cd_estabelecimento	= cd_estabelecimento_w);
		
				if (qt_tentativas_usu_w >= qt_tentativas_usu_reg_w and qt_tentativas_usu_reg_w > 0) then
					update	pls_segurado_web
					set	ie_situacao		= 'I',
						dt_atualizacao		= clock_timestamp()
					where	nr_sequencia		= nr_seq_usuario_w;
					ie_validou_w := 'BLOQUEADO';
				else
					update	pls_segurado_web
					set	qt_tentativa_acesso	= (qt_tentativas_usu_w+1),
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= nm_segurado_w
					where	nr_sequencia		= nr_seq_usuario_w;
					
					CALL pls_gravar_log_acesso_portal(nr_seq_segurado_w, null, null,
								     null, null, null,
								     null, null, 40,
								     'Tentou logar no portal.','Procedure - pls_valida_regra_senha_web', 'S');	
				end if;
			exception
			when others then
				qt_tentativas_usu_w := null;
				qt_dias_ult_troc_senha_w := null;
			end;
		end;
	elsif (ie_tipo_login_p = 'CO') then
		begin
			select 	ds_tec,
				ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_cooperado_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 	= 'A' 
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
			
			if (ds_salt_w IS NOT NULL AND ds_salt_w::text <> '') then
				ds_senha_sha256_w := obter_sha2(upper(ds_senha_limpa_p) || ds_salt_w, 256);
			end if;		
		
			select (trunc(clock_timestamp()) - trunc(coalesce(dt_alteracao_senha, dt_atualizacao))),
					nr_sequencia,
					substr(nm_usuario_web,1,15)
			into STRICT	qt_dias_ult_troc_senha_w,
					nr_seq_usuario_w,
					nm_usuario_web_w
			from    pls_cooperado_web a
			where   upper(a.nm_usuario_web) = upper(ds_login_p)
			and     a.ie_situacao 	= 'A' 
			and (a.ds_senha 	= ds_senha_sha256_w 
			or 	a.ds_senha	= ds_senha_md5_p
			or 	a.ds_senha 	= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	a.cd_estabelecimento	= cd_estabelecimento_w);
			
			if (ds_senha_nova_p IS NOT NULL AND ds_senha_nova_p::text <> '') then
			
				-- OS 1647949 valida se a senha nova eh igual a senha atual
				if (obter_sha2(upper(ds_senha_nova_p) || ds_salt_w, 256) = ds_senha_sha256_w) then
					ie_validou_w := 'MESMA_SENHA';
				else
					qt_senha_diferente_w := pls_gerencia_senha_web_pck.obter_regra_senha_diferente(cd_estabelecimento_w);
					
					if (qt_senha_diferente_w > 0) then
						ie_senha_existente_w := pls_gerencia_senha_web_pck.verificar_senha_existente(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w);

						if (ie_senha_existente_w = 'S') then							
							ie_validou_w := 'QT_SENHA_DIFERENTE:' || qt_senha_diferente_w;
						end if;
					end if;
				end if;
				
				if (ie_validou_w = 'OK') then
					SELECT * FROM pls_gerencia_senha_web_pck.pls_alterar_senha_usuario_web(ds_senha_nova_p, nr_seq_usuario_w, ie_tipo_login_p, qt_senha_diferente_w, nm_usuario_web_w, cd_estabelecimento_w, ds_senha_sha256_w, ds_salt_w) INTO STRICT ds_senha_sha256_w, ds_salt_w;
					ie_validou_w := 'SENHA_ALTERADA';						
				end if;
			elsif (qt_dias_ult_troc_senha_w >= qt_troca_senha_reg_w and qt_troca_senha_reg_w > 0) then
				ie_validou_w := 'TROCA_SENHA';
			else
				update	pls_cooperado_web
				set	qt_tentativa_acesso	= 0,
					dt_atualizacao		= clock_timestamp(),
					nm_usuario		= substr(nm_usuario_web,1,15)
				where	nr_sequencia		= nr_seq_usuario_w;
			end if;
		exception
		when others then
			begin
				select	coalesce(qt_tentativa_acesso,0),
					nr_sequencia
				into STRICT	qt_tentativas_usu_w,
					nr_seq_usuario_w
				from    pls_cooperado_web a         
				where   upper(a.nm_usuario_web) = upper(ds_login_p)
				and     a.ie_situacao = 'A'
				and (coalesce(cd_estabelecimento_w::text, '') = ''
				or	a.cd_estabelecimento	= cd_estabelecimento_w);
		
				if (qt_tentativas_usu_w >= qt_tentativas_usu_reg_w and qt_tentativas_usu_reg_w > 0) then
					update	pls_cooperado_web
					set	ie_situacao	= 'I',
						dt_atualizacao	= clock_timestamp(),
						nm_usuario	= substr(nm_usuario_web,1,15)
					where	nr_sequencia	= nr_seq_usuario_w;
					ie_validou_w := 'BLOQUEADO';
				else
					update	pls_cooperado_web
					set	qt_tentativa_acesso	= (qt_tentativas_usu_w+1),
						dt_atualizacao		= clock_timestamp(),
						nm_usuario		= substr(nm_usuario_web,1,15)
					where	nr_sequencia		= nr_seq_usuario_w;
				end if;
			exception
			when others then
				qt_tentativas_usu_w := null;
				qt_dias_ult_troc_senha_w := null;
			end;
		end;
	end if;	
end if;
--OS 1370192, tratamento para "forcar" os usuario a alterarem a senha, quando a mesma nao estiver no formato sha256.
if 	((ie_validou_w <> 'BLOQUEADO') and (ie_validou_w <> 'TROCA_SENHA') and (coalesce(ds_senha_nova_p::text, '') = '')) then
	if (ie_tipo_login_p = 'P') then
		begin
			select 	coalesce(ds_tec, 'X'),
				ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_usuario_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 		= 'A'
			and (ds_senha 		= obter_sha2(upper(ds_senha_limpa_p) || ds_tec, 256) 
			or 	ds_senha		= ds_senha_md5_p
			or 	ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
		exception
		when others then
			ds_salt_w	:= null;
		end;
	elsif (ie_tipo_login_p = 'E') then
		begin
			select 	coalesce(ds_tec, 'X'),
				ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_estipulante_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 	= 'A'
			and (ds_senha 		= obter_sha2(upper(ds_senha_limpa_p) || ds_tec, 256) 
			or 	ds_senha		= ds_senha_md5_p
			or 	ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
		exception
		when others then
			ds_salt_w	:= null;
		end;
	elsif (ie_tipo_login_p = 'GC') then
		begin
			select 	coalesce(ds_tec, 'X'),
				ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_grupo_contrato_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 	= 'A'
			and (ds_senha 		= obter_sha2(upper(ds_senha_limpa_p) || ds_tec, 256) 
			or 	ds_senha		= ds_senha_md5_p
			or 	ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
		exception
		when others then
			ds_salt_w	:= null;
		end;
	elsif (ie_tipo_login_p = 'B') then
		begin
			select 	coalesce(a.ds_tec, 'X'),
				a.ds_senha
			into STRICT	ds_salt_w,
				ds_senha_w
			from    pls_segurado_web a,
				pls_segurado_carteira c,    
				pls_segurado b   
			where   a.nr_seq_segurado 	= b.nr_sequencia    
			and     b.nr_sequencia    	= c.nr_seq_segurado 
			and     a.ie_situacao     	= 'A'               
			and     c.cd_usuario_plano = elimina_caractere_especial(ds_login_p)  
			and     pls_obter_dados_segurado(b.nr_sequencia, 'CS') = 'A'
			and (a.ds_senha 		= obter_sha2(upper(ds_senha_limpa_p) || ds_tec, 256) 
			or 	a.ds_senha		= ds_senha_md5_p
			or 	a.ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	a.cd_estabelecimento	= cd_estabelecimento_w);
		exception
		when others then
			ds_salt_w	:= null;
		end;
	elsif (ie_tipo_login_p = 'CO') then
		begin
			select 	coalesce(ds_tec, 'X'),
				ds_senha	
			into STRICT	ds_salt_w,
				ds_senha_w
			from	pls_cooperado_web
			where   upper(nm_usuario_web) 	= upper(ds_login_p)
			and     ie_situacao 	= 'A' 
			and (ds_senha 		= obter_sha2(upper(ds_senha_limpa_p) || ds_tec, 256) 
			or 	ds_senha		= ds_senha_md5_p
			or 	ds_senha 		= ds_senha_limpa_p)
			and (coalesce(cd_estabelecimento_w::text, '') = ''
			or	cd_estabelecimento	= cd_estabelecimento_w);
		exception
		when others then
			ds_salt_w	:= null;
		end;
	end if;
	
	if ((ds_salt_w = 'X') or ((coalesce(ds_salt_w, 'X') <> 'X') and (length(ds_senha_w) < 64))) then
		ie_validou_w := 'TROCA_SENHA';
	end if;
end if;
	
ie_validou_p := ie_validou_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_regra_senha_web ( ie_tipo_login_p text, ds_login_p text, ds_senha_md5_p text, ds_senha_limpa_p text, ds_senha_nova_p text, ie_validou_p INOUT text, cd_estabelecimento_p bigint) FROM PUBLIC;

