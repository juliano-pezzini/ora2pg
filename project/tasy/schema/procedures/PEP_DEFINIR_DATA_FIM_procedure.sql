-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pep_definir_data_fim ( nr_sequencia_p PACIENTE_ALERGIA.NR_SEQUENCIA%type, ie_pasta_p text, dt_fim_p PACIENTE_ALERGIA.DT_FIM%type DEFAULT clock_timestamp(), ds_observacao_p PACIENTE_ALERGIA.DS_OBSERVACAO%type DEFAULT NULL, nm_usuario_p LISTA_PROBLEMA_PAC.NM_USUARIO%type  DEFAULT NULL) AS $body$
DECLARE


ie_fim_problema_w   LISTA_PROBLEMA_PAC.IE_SITUACAO%type;

ie_status_prob_w    LISTA_PROBLEMA_PAC.IE_STATUS%type;

nm_tabela_w         LISTA_PROBLEMA_PAC_ITEM.NM_TABELA%type;
ie_tipo_registro_w  LISTA_PROBLEMA_PAC_ITEM.IE_TIPO_REGISTRO%type;

nega_w              PACIENTE_ALERGIA.IE_NEGA_ALERGIAS%type;
classificacao_w     PACIENTE_ALERGIA.IE_CLASSIFICACAO%type;
cd_pessoa_fisica_w  PACIENTE_ALERGIA.CD_PESSOA_FISICA%type;


BEGIN
  BEGIN
    SELECT  CD_PESSOA_FISICA
    INTO STRICT    cd_pessoa_fisica_w
    FROM    PACIENTE_ALERGIA
    WHERE   NR_SEQUENCIA = nr_sequencia_p;
  EXCEPTION
    WHEN    no_data_found THEN cd_pessoa_fisica_w := NULL;
    WHEN    too_many_rows THEN cd_pessoa_fisica_w := NULL;
  END;

IF (ie_pasta_p = 'DPA') THEN --Doencas previas e atuais
  BEGIN
    UPDATE  PACIENTE_ANTEC_CLINICO
    SET     DT_FIM         = dt_fim_p,
            DS_OBSERVACAO  = SUBSTR(DS_OBSERVACAO                      || 
                             CASE WHEN DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                              CHR(10) END                                   || 
                             ds_observacao_p, 1, 255),
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA   = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'ARA') THEN --Alergia / Reacoes adversas
  BEGIN
    nm_tabela_w         := 'PACIENTE_ALERGIA';
    ie_tipo_registro_w  := 'HS';

    UPDATE  PACIENTE_ALERGIA a
    SET     a.DT_FIM          = dt_fim_p,
            a.DS_OBSERVACAO   = SUBSTR(SUBSTR(a.DS_OBSERVACAO,1,3500)             || 
                                    CASE WHEN a.DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                                     CHR(10) END                                   || 
                                    ds_observacao_p, 1, 4000),
			 NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   a.NR_SEQUENCIA    = nr_sequencia_p;
  END;

ELSIF (ie_pasta_p = 'HEV') THEN --Habitos e vicios
  BEGIN
    nm_tabela_w         := 'PACIENTE_HABITO_VICIO';
    ie_tipo_registro_w  := 'HS';

    UPDATE  PACIENTE_HABITO_VICIO
    SET     DT_FIM        = dt_fim_p,
            DS_OBSERVACAO = SUBSTR(DS_OBSERVACAO                      ||
                            CASE WHEN DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                            CHR(10) END                                   ||
                            ds_observacao_p,1,255)
    WHERE   NR_SEQUENCIA  = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'FDR') THEN --Fatores de risco
  BEGIN
    UPDATE  CIH_PAC_FAT_RISCO
    SET     DT_FIM_RISCO        = dt_fim_p,
            NM_USUARIO_TERMINO  = nm_usuario_p,
            DS_OBSERVACAO       = SUBSTR(DS_OBSERVACAO                      ||
                                  CASE WHEN DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                                  CHR(10) END                                   ||
                                  ds_observacao_p, 1, 255)
    WHERE   NR_SEQUENCIA        = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'MEU') THEN --Medicamentos em uso
  BEGIN
    UPDATE  PACIENTE_MEDIC_USO
    SET     DT_FIM        = dt_fim_p,
            DS_OBSERVACAO = SUBSTR(DS_OBSERVACAO                      ||
                            CASE WHEN DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                            CHR(10) END                                   ||
                            ds_observacao_p, 1, 255),
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA  = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'CIR') THEN --Cirurgias
  BEGIN
    UPDATE  HISTORICO_SAUDE_CIRURGIA
    SET     DT_FIM          = dt_fim_p,
            DS_JUST_TERMINO = SUBSTR(DS_JUST_TERMINO                      ||
                              CASE WHEN DS_JUST_TERMINO = NULL THEN  NULL  ELSE CHR(13) ||                              CHR(10) END                                     ||
                              ds_observacao_p, 1, 255),
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA    = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'AOP') THEN --Acessorio ortese protese
  BEGIN
    UPDATE  PACIENTE_ACESSORIO
    SET     DT_FIM          = dt_fim_p,
            DS_JUST_TERMINO = SUBSTR(DS_JUST_TERMINO                      ||
                              CASE WHEN DS_JUST_TERMINO = NULL THEN  NULL  ELSE CHR(13) ||                              CHR(10) END                                     ||
                              ds_observacao_p, 1, 255),
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA    = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'RES') THEN --Restricoes
  BEGIN
    UPDATE  PACIENTE_REP_PRESCRICAO
    SET     DT_FIM        = dt_fim_p,
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA  = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'VULNEB') THEN --Vulnerabilidades do Paciente
  BEGIN
    UPDATE  PACIENTE_VULNERABILIDADE
    SET     DT_FIM         = dt_fim_p,
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA   = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'HIF') THEN --Historia familiar
  BEGIN
    nm_tabela_w         := 'PACIENTE_ANTEC_CLINICO';
    ie_tipo_registro_w  := 'HS';

    UPDATE  PACIENTE_ANTEC_CLINICO
    SET     DT_FIM        = dt_fim_p,
            DS_OBSERVACAO = SUBSTR(DS_OBSERVACAO                      ||
                            CASE WHEN DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                             CHR(10) END                                   ||
                            ds_observacao_p, 1, 255),
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA  = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'DIG') THEN -- Diagnosticos
  BEGIN
    nm_tabela_w         := 'DIAGNOSTICO_DOENCA';
    ie_tipo_registro_w  := 'DM';

    UPDATE  DIAGNOSTICO_DOENCA
    SET     DT_FIM          = dt_fim_p,
            IE_DIAG_ALTA    = CASE
                                WHEN IE_SITUACAO = 'A' AND PKG_I18N.GET_USER_LOCALE = 'es_CO' 
                                THEN 'N'
                                ELSE IE_DIAG_ALTA
                              END
    WHERE   NR_SEQ_INTERNO  = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'OCO') THEN -- Historico de Saude - Ocorrencias
  BEGIN
    UPDATE  PACIENTE_OCORRENCIA
    SET     DT_FIM        = dt_fim_p,
            DS_OBSERVACAO = SUBSTR(DS_OBSERVACAO                      ||
                            CASE WHEN DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                            CHR(10) END                                   ||
                            ds_observacao_p, 1, 255),
			NM_USUARIO_TERMINO  = nm_usuario_p
    WHERE   NR_SEQUENCIA  = nr_sequencia_p;
  END;
ELSIF (ie_pasta_p = 'PFL') THEN -- Historico de Saude - Pflegegrad
  BEGIN
    UPDATE  PACIENTE_PFLEGEGRAD
    SET     DT_FIM        = dt_fim_p,
            DS_OBSERVACAO = SUBSTR(DS_OBSERVACAO                      ||
                            CASE WHEN DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) ||                            CHR(10) END                                   ||
                            ds_observacao_p, 1, 255)
    WHERE   NR_SEQUENCIA  = nr_sequencia_p;
  END;
END IF;

IF (ie_pasta_p = 'ARA-ALL') THEN --Alergia / Reacoes adversas e Intolerancia - Finalizacao de registros opostos
  BEGIN
    SELECT  coalesce(IE_CLASSIFICACAO, 'A'),
            coalesce(IE_NEGA_ALERGIAS, 'N')
    INTO STRICT    classificacao_w,
            nega_w
    FROM    PACIENTE_ALERGIA
    WHERE   NR_SEQUENCIA = nr_sequencia_p;
  EXCEPTION
    WHEN no_data_found THEN
      nega_w          := NULL;
      classificacao_w := NULL;
    WHEN too_many_rows THEN
      nega_w          := NULL;
      classificacao_w := NULL;
  END;

  IF (classificacao_w IS NOT NULL AND classificacao_w::text <> '' AND nega_w IS NOT NULL AND nega_w::text <> '') THEN
    UPDATE  PACIENTE_ALERGIA a
    SET     a.DT_FIM                      = dt_fim_p,
            a.DS_OBSERVACAO               = SUBSTR(a.DS_OBSERVACAO ||
                                          CASE WHEN a.DS_OBSERVACAO = NULL THEN  NULL  ELSE CHR(13) || CHR(10) END  ||
                                          ds_observacao_p, 1, 4000),
			a.NM_USUARIO_TERMINO  = nm_usuario_p							  
    WHERE   a.CD_PESSOA_FISICA            = cd_pessoa_fisica_w
    AND     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
    AND     coalesce(a.dt_inativacao::text, '') = ''
    AND     coalesce(a.DT_FIM::text, '') = ''
    AND     a.NR_SEQUENCIA                <> nr_sequencia_p
    AND     coalesce(a.IE_CLASSIFICACAO, 'A')  = classificacao_w
    AND     coalesce(a.IE_NEGA_ALERGIAS, 'N')  = CASE WHEN nega_w='S' THEN  'N' WHEN nega_w='N' THEN  'S'  ELSE NULL END;
  END IF;
ELSE
  SELECT (CASE WHEN coalesce(MAX(a.NR_SEQUENCIA)::text, '') = '' THEN 'S' ELSE 'N' END) IE_FIM_PROBLEMA
  INTO STRICT    ie_fim_problema_w
  FROM    LISTA_PROBLEMA_PAC      a,
          LISTA_PROBLEMA_PAC_ITEM b
  WHERE   a.NR_SEQUENCIA    = b.NR_SEQ_PROBLEMA
  AND     b.NM_TABELA       = nm_tabela_w
  AND     b.NR_SEQ_REGISTRO <> nr_sequencia_p
  AND     b.NR_SEQ_PROBLEMA IN (SELECT  c.NR_SEQ_PROBLEMA
                                FROM    LISTA_PROBLEMA_PAC_ITEM c
                                WHERE   c.NR_SEQ_REGISTRO   = nr_sequencia_p
                                AND     c.IE_TIPO_REGISTRO  = ie_tipo_registro_w
                                AND     c.NM_TABELA         = nm_tabela_w)
  AND     OBTER_SE_ITEM_PROB_SEM_DT_FIM(b.NR_SEQ_REGISTRO, b.IE_TIPO_REGISTRO, b.NM_TABELA, a.CD_PESSOA_FISICA) = 'S';

  IF (ie_fim_problema_w = 'S') THEN
    SELECT  MAX(CASE WHEN IE_STATUS='1' THEN  '4' WHEN IE_STATUS='2' THEN  '3'  ELSE IE_STATUS END )
    INTO STRICT    ie_status_prob_w
    FROM    LISTA_PROBLEMA_PAC
    WHERE   coalesce(DT_FIM::text, '') = ''
    AND     NR_SEQUENCIA  IN (SELECT  c.NR_SEQ_PROBLEMA
                              FROM    LISTA_PROBLEMA_PAC_ITEM c 
                              WHERE   c.NR_SEQ_REGISTRO   = nr_sequencia_p 
                              AND     c.IE_TIPO_REGISTRO  = ie_tipo_registro_w
                              AND     c.NM_TABELA         = nm_tabela_w);

    UPDATE  LISTA_PROBLEMA_PAC a
    SET     a.IE_STATUS               = ie_status_prob_w,
            a.DT_FIM                  = dt_fim_p,
            a.DT_ATUALIZACAO          = clock_timestamp(),
            a.NM_USUARIO              = nm_usuario_p,
            a.NM_USUARIO_FINALIZACAO  = nm_usuario_p
    WHERE   coalesce(a.DT_FIM::text, '') = ''
    AND     a.NR_SEQUENCIA            IN (SELECT  b.NR_SEQ_PROBLEMA
                                        FROM    LISTA_PROBLEMA_PAC_ITEM b
                                        WHERE   b.NR_SEQ_REGISTRO   = nr_sequencia_p
                                        AND     b.IE_TIPO_REGISTRO  = ie_tipo_registro_w);
  END IF;
END IF;

COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pep_definir_data_fim ( nr_sequencia_p PACIENTE_ALERGIA.NR_SEQUENCIA%type, ie_pasta_p text, dt_fim_p PACIENTE_ALERGIA.DT_FIM%type DEFAULT clock_timestamp(), ds_observacao_p PACIENTE_ALERGIA.DS_OBSERVACAO%type DEFAULT NULL, nm_usuario_p LISTA_PROBLEMA_PAC.NM_USUARIO%type  DEFAULT NULL) FROM PUBLIC;

