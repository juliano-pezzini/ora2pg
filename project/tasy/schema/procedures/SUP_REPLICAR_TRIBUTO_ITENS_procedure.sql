-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_replicar_tributo_itens ( nr_sequencia_p bigint, nr_seq_contrato_p bigint, cd_tributo_p bigint, ie_todos_tributos_p text, ie_substitui_tributos_p text, nm_usuario_p text) AS $body$
DECLARE


nr_sequencia_w			bigint;
nr_seq_regra_nf_w			bigint;
vl_pagto_w				contrato_regra_nf.vl_pagto%type;											

cd_tributo_w			bigint;
vl_tributo_w			double precision;
ie_corpo_item_w         		varchar(1);
ie_regra_trib_w			varchar(1);
qt_existe_trib_w			bigint;
cd_cond_pagto_w			bigint;
cd_conta_financ_w		bigint;
nr_seq_trans_baixa_w		bigint;
cd_beneficiario_w			varchar(14);
cd_darf_w			varchar(10);
pr_tributo_w			double precision;



C01 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.vl_pagto
	from	contrato_regra_nf a
	where   	a.nr_seq_contrato = nr_seq_contrato_p
	and     	a.nr_sequencia     <> nr_sequencia_p;

C02 CURSOR FOR
	SELECT	a.cd_tributo,
		a.vl_tributo,
		a.ie_corpo_item,
		a.ie_regra_trib,
		a.cd_cond_pagto,
		a.cd_conta_financ,
		a.nr_seq_trans_baixa,
		a.cd_beneficiario,
		a.cd_darf,
		a.pr_tributo	
	from	contrato_regra_pagto_trib a
	where	a.nr_seq_regra_nf = nr_sequencia_p
	and 	ie_todos_tributos_p = 'S'
	
union

	SELECT	a.cd_tributo,
		a.vl_tributo,
		a.ie_corpo_item,
		a.ie_regra_trib,
		a.cd_cond_pagto,
		a.cd_conta_financ,
		a.nr_seq_trans_baixa,
		a.cd_beneficiario,
		a.cd_darf,
		a.pr_tributo
	from	contrato_regra_pagto_trib a
	where	a.nr_seq_regra_nf = nr_sequencia_p
	and	cd_tributo = cd_tributo_p
	and 	ie_todos_tributos_p = 'N';


BEGIN

open C01;
loop
fetch C01 into
	nr_seq_regra_nf_w,
	vl_pagto_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	open C02;
	loop
	fetch C02 into	cd_tributo_w,
			vl_tributo_w,
			ie_corpo_item_w,
			ie_regra_trib_w,
			cd_cond_pagto_w,
			cd_conta_financ_w,
			nr_seq_trans_baixa_w,
			cd_beneficiario_w,
			cd_darf_w,
			pr_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select	count(*)
		into STRICT	qt_existe_trib_w
		from	contrato_regra_pagto_trib
		where	nr_seq_regra_nf	= nr_seq_regra_nf_w
		and	cd_tributo      	= cd_tributo_w;

		if (coalesce(ie_substitui_tributos_p,'N') = 'S') and (qt_existe_trib_w > 0) then

			update	contrato_regra_pagto_trib
			set		dt_atualizacao  	= clock_timestamp(),
					nm_usuario	= nm_usuario_p,
					vl_tributo		= coalesce(vl_pagto_w,0) / 100 * coalesce(pr_tributo_w,0),
					ie_corpo_item	= ie_corpo_item_w,
					ie_regra_trib	= ie_regra_trib_w
			where	nr_seq_regra_nf	= nr_seq_regra_nf_w
			and	cd_tributo 	= cd_tributo_w;

		end if;	

		if (qt_existe_trib_w = 0) then
			begin

			select	nextval('contrato_regra_pagto_trib_seq')
			into STRICT	nr_sequencia_w
			;

			insert	into contrato_regra_pagto_trib(	nr_sequencia,
								nr_seq_regra_nf,
								cd_tributo,
								dt_atualizacao,
								nm_usuario,
								vl_tributo,
								ie_corpo_item,
								ie_regra_trib,
								cd_cond_pagto,
								cd_conta_financ,
								nr_seq_trans_baixa,
								cd_beneficiario,
								cd_darf,
								pr_tributo)
						values (	nr_sequencia_w,
								nr_seq_regra_nf_w,
								cd_tributo_w,
								clock_timestamp(),
								nm_usuario_p,
								coalesce(vl_pagto_w,0) / 100 * coalesce(pr_tributo_w,0),
								ie_corpo_item_w,
								ie_regra_trib_w,
								cd_cond_pagto_w,
								cd_conta_financ_w,
								nr_seq_trans_baixa_w,
								cd_beneficiario_w,
								cd_darf_w,
								pr_tributo_w);

			end;
		end if;	

		end;
	end loop;
	close C02;

end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_replicar_tributo_itens ( nr_sequencia_p bigint, nr_seq_contrato_p bigint, cd_tributo_p bigint, ie_todos_tributos_p text, ie_substitui_tributos_p text, nm_usuario_p text) FROM PUBLIC;

