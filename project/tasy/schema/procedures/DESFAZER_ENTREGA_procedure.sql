-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE desfazer_entrega ( nr_prescricao_p bigint, nr_seq_prescricao_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_prescr_w			bigint;
nr_prescricao_w			bigint;
nr_seq_laudo_w			bigint;
nr_seq_result_lab_w		bigint;
nr_seq_malote_w			bigint;
nr_seq_envelope_w       malote_envelope_item.nr_seq_envelope%Type;
ie_status_aux_w      prescr_procedimento.ie_status_execucao%Type;

C01 CURSOR FOR
SELECT	nr_seq_laudo,
	nr_seq_result_lab
from	envelope_laudo_item
where	nr_seq_envelope = nr_seq_envelope_w;

C02 CURSOR FOR
SELECT	nr_prescricao,
	nr_seq_prescr
from	envelope_laudo_item
where	nr_seq_envelope = nr_seq_envelope_w
and	(nr_seq_laudo IS NOT NULL AND nr_seq_laudo::text <> '')
and	coalesce(nr_seq_result_lab::text, '') = '';

C03 CURSOR FOR
SELECT nr_seq_envelope
from envelope_laudo_item
where nr_prescricao = nr_prescricao_p
and   nr_seq_prescr = nr_seq_prescricao_p;


BEGIN

open C03;
loop
fetch C03 into
	nr_seq_envelope_w;
EXIT WHEN NOT FOUND; /* apply on C03 */
	begin

	select	max(a.nr_sequencia)
	into STRICT	nr_seq_malote_w
	from	malote_envelope_laudo a,
		malote_envelope_item b
	where	a.nr_sequencia = b.nr_seq_malote
	and	b.nr_seq_envelope = nr_seq_envelope_w;

	update	malote_envelope_item
	set	dt_entrega  = NULL,
		nm_usuario_entrega  = NULL,
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p
	where	nr_seq_envelope = nr_seq_envelope_w;

	commit;

	update	envelope_laudo
	set	dt_entrega  = NULL,
		nm_usuario_entrega  = NULL,
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p,
		nr_seq_status_envelope = 30
	where	nr_sequencia = nr_seq_envelope_w;

	update	malote_envelope_laudo
	set	dt_entrega  = NULL,
		nm_usuario_entrega  = NULL,
		dt_atualizacao = clock_timestamp(),
		nm_usuario = nm_usuario_p,
		nr_seq_status_malote = 20
	where	nr_sequencia     = nr_seq_malote_w;

	open C01;
	loop
	fetch C01 into
		nr_seq_laudo_w,
		nr_seq_result_lab_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		CALL gel_gravar_historico_envelope(nr_seq_laudo_w, nr_seq_result_lab_w, nr_seq_envelope_w, NULL, 'DDEE', nm_usuario_p);
		end;
	end loop;
	close C01;

	open C02;
	loop
	fetch C02 into
		nr_prescricao_w,
		nr_seq_prescr_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		select ie_status_exec
		into STRICT ie_status_aux_w
		from (  SELECT ie_status_exec
				from prescr_proc_status
				where	nr_prescricao = nr_prescricao_w
				and	    nr_seq_prescr = nr_seq_prescr_w
				and     ie_status_exec <>'60'
				order by nr_sequencia desc) alias0 LIMIT 1;

		if (ie_status_aux_w IS NOT NULL AND ie_status_aux_w::text <> '') then
			begin
			update 	prescr_procedimento
			set	ie_status_execucao = ie_status_aux_w
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_seq_prescr_w;
			end;
		end if;
		end;
	end loop;
	close C02;

	end;
end loop;
close C03;

if (coalesce(nr_seq_envelope_w::text, '') = '') then
	begin
	select ie_status_exec
	into STRICT ie_status_aux_w
	from (  SELECT ie_status_exec
			from prescr_proc_status
			where	nr_prescricao = nr_prescricao_p
			and	    nr_seq_prescr = nr_seq_prescricao_p
			and     ie_status_exec <>'60'
			order by nr_sequencia desc) alias2 LIMIT 1;

	if (ie_status_aux_w IS NOT NULL AND ie_status_aux_w::text <> '') then
		begin
		update 	prescr_procedimento
		set	ie_status_execucao = ie_status_aux_w
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_seq_prescricao_p;
		end;
	end if;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE desfazer_entrega ( nr_prescricao_p bigint, nr_seq_prescricao_p bigint, nm_usuario_p text) FROM PUBLIC;

