-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_reprovar_inclusao_benef ( nr_seq_solicitacao_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, ie_origem_p text, ie_rejeitar_depend_p text default null, nm_usuario_p text DEFAULT NULL) AS $body$
DECLARE


qt_inclusao_benef_w		smallint;
nr_seq_intercambio_w		bigint;
ie_status_w			varchar(2)	:= 'R';
nr_seq_lote_inclusao_w		pls_lote_inclusao_benef.nr_sequencia%type;
nr_seq_proposta_w		pls_proposta_adesao.nr_sequencia%type;
ie_situacao_w			pls_lote_inclusao_benef.ie_situacao%type;


BEGIN

if (ie_origem_p	= 'T') then
	ie_status_w	:= 'RO';
end if;

begin
select	max(nr_seq_intercambio),
	max(nr_seq_lote_inclusao)
into STRICT	nr_seq_intercambio_w,
	nr_seq_lote_inclusao_w
from	pls_inclusao_beneficiario
where	nr_sequencia		= nr_seq_solicitacao_p;
exception
when others then
	nr_seq_intercambio_w	:= null;
end;

if (coalesce(nr_seq_intercambio_w::text, '') = '') then
	update	pls_inclusao_beneficiario
	set	ie_status		= ie_status_w,
		ie_status_mov		= '3',
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		nr_seq_motivo_rejeicao	= nr_seq_motivo_p,
		dt_rejeicao		= clock_timestamp(),
		ds_observacao		= ds_observacao_p
	where	nr_sequencia		= nr_seq_solicitacao_p;
	
	if (coalesce(ie_rejeitar_depend_p,'N') = 'S') then
		update	pls_inclusao_beneficiario
		set	ie_status		= ie_status_w,
			ie_status_mov		= '3',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			nr_seq_motivo_rejeicao	= nr_seq_motivo_p,
			dt_rejeicao		= clock_timestamp(),
			ds_observacao		= ds_observacao_p
		where	nr_seq_titular_solic	= nr_seq_solicitacao_p;
	end if;	
else
	update	pls_inclusao_beneficiario
	set	ie_status_intercambio	= ie_status_w,
		ie_status_mov		= '3',
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp(),
		nr_seq_motivo_rejeicao	= nr_seq_motivo_p,
		dt_rejeicao		= clock_timestamp(),
		ds_observacao		= ds_observacao_p
	where	nr_sequencia		= nr_seq_solicitacao_p;
	
	if (coalesce(ie_rejeitar_depend_p,'N') = 'S') then	
		update	pls_inclusao_beneficiario
		set	ie_status_intercambio	= ie_status_w,
			ie_status_mov		= '3',
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp(),
			nr_seq_motivo_rejeicao	= nr_seq_motivo_p,
			dt_rejeicao		= clock_timestamp(),
			ds_observacao		= ds_observacao_p
		where	nr_seq_titular_solic	= nr_seq_solicitacao_p;
	end if;		
end if;

if (nr_seq_lote_inclusao_w IS NOT NULL AND nr_seq_lote_inclusao_w::text <> '') then
	select	count(1)
	into STRICT	qt_inclusao_benef_w
	from	pls_inclusao_beneficiario
	where	nr_seq_lote_inclusao	= nr_seq_lote_inclusao_w
	and	ie_status not in ('R','RO','A','B','C','I')
	and	coalesce(nr_seq_proposta::text, '') = ''  LIMIT 1;

	if (qt_inclusao_benef_w = 0) then
		/*Mudar a situacao da proposta para IP - integrado a proposta*/

		select	max(nr_seq_proposta)
		into STRICT	nr_seq_proposta_w
		from	pls_inclusao_beneficiario
		where	nr_seq_lote_inclusao	= nr_seq_lote_inclusao_w
		and	ie_status in ('A','B','C');
		
		ie_situacao_w	:= 'IP';
		
		if (coalesce(nr_seq_proposta_w::text, '') = '') then
			ie_situacao_w	:= 'RO';
		end if;
		
		update	pls_lote_inclusao_benef
		set	ie_situacao		= ie_situacao_w,
			nr_seq_proposta		= nr_seq_proposta_w
		where	nr_sequencia		= nr_seq_lote_inclusao_w;
	end if;
end if;

if (ie_origem_p = 'T') then
	CALL pls_alerta_rejeicao_mov(null, nr_seq_solicitacao_p, null, 1, nr_seq_solicitacao_p, nm_usuario_p);
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_reprovar_inclusao_benef ( nr_seq_solicitacao_p bigint, nr_seq_motivo_p bigint, ds_observacao_p text, ie_origem_p text, ie_rejeitar_depend_p text default null, nm_usuario_p text DEFAULT NULL) FROM PUBLIC;

