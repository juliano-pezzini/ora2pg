-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reg_0140_efd_piscofins ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) AS $body$
DECLARE


nr_seq_regra_sped_w		bigint;
nr_versao_efd_w			varchar(5);
tp_registro_w			varchar(4);
nr_linha_w			bigint := qt_linha_p;
nr_seq_registro_w		bigint := nr_sequencia_p;
ds_arquivo_w			varchar(4000);
ds_arquivo_compl_w		varchar(4000);
ds_linha_w			varchar(8000);
sep_w				varchar(1) := ds_separador_p;
qt_registros_w			bigint;
cd_municipio_ibge_w		varchar(15);
ie_gerar_w			varchar(2);
ie_scp_w			fis_efd_controle.ie_scp%type;
cd_estabelecimento_scp_w	fis_efd_controle.cd_estabelecimento_scp%type;

c01 CURSOR FOR
SELECT	'0140' tp_registro,	
	a.cd_estabelecimento,
	CASE WHEN ie_scp_w='N' THEN  a.cd_estabelecimento  ELSE cd_estab_socio_ost_scp END  cd_estabelecimento_2,	
	CASE WHEN ie_scp_w='N' THEN  d.ds_razao_social  ELSE nfe_obter_dados_pj(obter_cnpj_estabelecimento(cd_estab_socio_ost_scp), 'RZ') END  ds_razao_social,	
	CASE WHEN ie_scp_w='N' THEN  a.cd_cgc  ELSE obter_cnpj_estabelecimento(a.cd_estab_socio_ost_scp) END  cd_cgc,
	CASE WHEN ie_scp_w='N' THEN  substr(obter_dados_pf_pj(null, a.cd_cgc, 'UF'),1,2)  ELSE nfe_obter_dados_pj(obter_cnpj_estabelecimento(cd_estab_socio_ost_scp), 'UF') END  sg_estado,	
	CASE WHEN ie_scp_w='N' THEN  substr(CASE WHEN upper(a.cd_inscricao_estadual)='ISENTA' THEN '' WHEN upper(a.cd_inscricao_estadual)='ISENTO' THEN ''  ELSE a.cd_inscricao_estadual END , 1, 14)  ELSE substr(CASE WHEN upper(nfe_obter_dados_pj(obter_cnpj_estabelecimento(cd_estab_socio_ost_scp), 'IN'))='ISENTA' THEN '' WHEN upper(nfe_obter_dados_pj(obter_cnpj_estabelecimento(cd_estab_socio_ost_scp), 'IN'))='ISENTO' THEN ''  ELSE a.cd_inscricao_estadual END , 1, 14) END  cd_inscricao_estadual,	
	CASE WHEN ie_scp_w='N' THEN  substr(d.cd_municipio_ibge || substr(calcula_digito('MODULO10', d.cd_municipio_ibge),1,1),1,7)  ELSE substr(nfe_obter_dados_pj(obter_cnpj_estabelecimento(cd_estab_socio_ost_scp), 'IBGE'),1,7) END  cd_municipio_ibge,
	CASE WHEN ie_scp_w='N' THEN  a.cd_inscricao_municipal  ELSE obter_dados_pf_pj(null, obter_cnpj_estabelecimento(cd_estab_socio_ost_scp), 'IM') END  cd_inscricao_municipal,	
	'' nr_suframa
from	estabelecimento a,
	pessoa_juridica	d
where	a.cd_cgc	= d.cd_cgc
and	a.cd_empresa = cd_empresa_p
and	d.ie_situacao	= 'A'
and	a.ie_situacao	= 'A'
and	coalesce(a.ie_gerar_sped,'S') = 'S'
and	((ie_scp_w = 'N' AND a.ie_scp = 'N') or
	(ie_scp_w = 'S' AND a.cd_estabelecimento = cd_estabelecimento_scp_w));

vet01	C01%RowType;


BEGIN

ie_gerar_w	:=	'S';

select	max(nr_seq_regra_efd),
	max(ie_scp),
	max(cd_estabelecimento_scp)
into STRICT	nr_seq_regra_sped_w,
	ie_scp_w,
	cd_estabelecimento_scp_w
from	fis_efd_controle
where	nr_sequencia	= nr_seq_controle_p;

open C01;
loop
fetch C01 into	
	vet01;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	
	cd_municipio_ibge_w := vet01.cd_municipio_ibge;
	
	if (vet01.sg_estado = 'DF') then
		cd_municipio_ibge_w := '5300108';
	end if;
	
	ds_linha_w	:= substr(	sep_w || vet01.tp_registro		||
				sep_w || vet01.cd_estabelecimento_2	||
				sep_w || vet01.ds_razao_social	||
				sep_w || vet01.cd_cgc		||
				sep_w || vet01.sg_estado		||
				sep_w || vet01.cd_inscricao_estadual	||
				sep_w || cd_municipio_ibge_w		||
				sep_w || vet01.cd_inscricao_municipal	||
				sep_w || vet01.nr_suframa		|| sep_w,1,8000);
	
	ds_arquivo_w		:= substr(ds_linha_w,1,4000);
	ds_arquivo_compl_w	:= substr(ds_linha_w,4001,4000);
	nr_seq_registro_w		:= nr_seq_registro_w + 1;
	nr_linha_w		:= nr_linha_w + 1;

	insert into fis_efd_arquivo(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_controle_efd,
				nr_linha,
				cd_registro,
				ds_arquivo,
				ds_arquivo_compl)
			values (nr_seq_registro_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_controle_p,
				nr_linha_w,
				vet01.tp_registro,
				ds_arquivo_w,
				ds_arquivo_compl_w);
	end;

	select	count(*)
	into STRICT	qt_registros_w
	from	fis_regra_efd_reg	
	where	nr_seq_regra_efd = nr_seq_regra_sped_w
	and	ie_gerar = 'S'
	and	cd_registro = '0150';
	
	if (qt_registros_w > 0) then
	
		SELECT * FROM fis_gerar_reg_0150_efd(	nr_seq_controle_p, nm_usuario_p, vet01.cd_estabelecimento, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;

	end if;

	select	count(*)
	into STRICT	qt_registros_w
	from	fis_regra_efd_reg	
	where	nr_seq_regra_efd = nr_seq_regra_sped_w
	and	ie_gerar = 'S'
	and	cd_registro = '0190';
	
	if (qt_registros_w > 0) then					
		SELECT * FROM fis_gerar_reg_0190_efd(	nr_seq_controle_p, nm_usuario_p, vet01.cd_estabelecimento, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
	end if;

	select	count(*)
	into STRICT	qt_registros_w
	from	fis_regra_efd_reg	
	where	nr_seq_regra_efd = nr_seq_regra_sped_w
	and	ie_gerar = 'S'
	and	cd_registro = '0200';
	
	if (qt_registros_w > 0) then					
		SELECT * FROM fis_reg_0200_efd_piscofins(	nr_seq_controle_p, nm_usuario_p, vet01.cd_estabelecimento, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
	end if;

	select	count(*)
	into STRICT	qt_registros_w
	from	fis_regra_efd_reg	
	where	nr_seq_regra_efd = nr_seq_regra_sped_w
	and	ie_gerar = 'S'
	and	cd_registro = '0400';
	
	if (qt_registros_w > 0) and (ie_gerar_w	=	'S' ) then	
		SELECT * FROM fis_gerar_reg_0400_efd(	nr_seq_controle_p, nm_usuario_p, vet01.cd_estabelecimento, dt_inicio_p, dt_fim_p, cd_empresa_p, ds_separador_p, nr_linha_w, nr_seq_registro_w) INTO STRICT nr_linha_w, nr_seq_registro_w;
		ie_gerar_w	:=	'N';		
	end if;
end loop;
close C01;

commit;

qt_linha_p	:= nr_linha_w;
nr_sequencia_p	:= nr_seq_registro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reg_0140_efd_piscofins ( nr_seq_controle_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, dt_inicio_p timestamp, dt_fim_p timestamp, cd_empresa_p bigint, ds_separador_p text, qt_linha_p INOUT bigint, nr_sequencia_p INOUT bigint) FROM PUBLIC;

