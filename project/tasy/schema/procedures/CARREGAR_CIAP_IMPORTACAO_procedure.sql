-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE carregar_ciap_importacao ( nm_usuario_p text, nr_seq_versao_p bigint, ie_somente_proc_p text, ds_code_p text, ds_chapter_p text, ds_component_p text, ds_preferred_p text, ds_short_title_p text, ds_inclusion_p text, ds_exclusion_p text, ds_criteria_p text, ds_consider_p text, ds_note_p text, ds_icd10_p text, ds_icd10_freq_p text) is ds_capitulo_ciap_w varchar(255) RETURNS bigint AS $body$
DECLARE


	cd_capitulo_seq_w	bigint := 0;
	ds_codigo			varchar(5) := '';


	
BEGIN

	ds_codigo := substr(ds_codigo_ciap_p,0,1);
	if (ds_codigo = '-') then
		ds_codigo := '-';
	end if;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	cd_capitulo_seq_w
	from	capitulo_ciap
	where	cd_capitulo = ds_codigo
	and		coalesce(ie_situacao,'A') = 'A';


	return	cd_capitulo_seq_w;

	end;
-- Fim Function
--- Início Function
	function obter_comp_cap( nr_seq_capitulo_p	number, ds_componente_ciap_p	varchar2) return number is

	cd_retorno_w		number(10) := 0;

	begin

	select 	coalesce(max(nr_sequencia),0)
	into STRICT	cd_retorno_w
	from	componente_ciap
	where	upper(ds_componente) = upper(ds_componente_ciap_p)
	and		nr_seq_capitulo = nr_seq_capitulo_p
	and		coalesce(ie_situacao,'A') = 'A';

	return	cd_retorno_w;

	end;
-- Fim Function
begin

select	CASE WHEN substr(ds_code_p,0,1)='-' THEN '-'  ELSE substr(ds_code_p,0,1) END
into STRICT	cd_capitulo_w
;

ds_cids_possiveis_w	:= ds_icd10_p;
cd_doenca_freq_w	:= ds_icd10_freq_p;
cd_doenca_freq_w	:= replace(cd_doenca_freq_w,'.','');

if ( cd_capitulo_w = '-' )  then

	open C01;
	loop
	fetch C01 into
		nr_seq_capitulo_proc_w,
		cd_capitulo_proc_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		nr_seq_componente_w := 	obter_comp_cap(nr_seq_capitulo_proc_w, ds_component_p);

		if ( nr_seq_componente_w = 0) then

			Select 	nextval('componente_ciap_seq')
			into STRICT	nr_seq_componente_w
			;

			select 	coalesce(max(cd_componente_ciap),0)
			into STRICT	cd_componente_w
			from	componente_ciap
			where	nr_seq_capitulo = nr_seq_capitulo_proc_w
			and		coalesce(ie_situacao,'A') = 'A';

			cd_componente_w := cd_componente_w + 1;


			insert into componente_ciap( nr_sequencia,
										cd_componente_ciap,
										dt_atualizacao,
										nm_usuario,
										dt_atualizacao_nrec,
										nm_usuario_nrec,
										ie_situacao,
										ds_componente,
										nr_seq_capitulo)
								values ( nr_seq_componente_w,
										cd_componente_w,
										clock_timestamp(),
										nm_usuario_p,
										clock_timestamp(),
										nm_usuario_p,
										'A',
										ds_component_p,
										nr_seq_capitulo_proc_w);

		else

				select 	coalesce(max(cd_componente_ciap),0)
				into STRICT	cd_componente_w
				from	componente_ciap
				where	nr_sequencia = nr_seq_componente_w;


		end if;


		cd_ciap_proc_w := 	cd_capitulo_proc_w||substr(ds_code_p,2,5);

		insert into	problema_ciap(	nr_sequencia,
									CD_CIAP,
									DT_ATUALIZACAO,
									NM_USUARIO,
									DT_ATUALIZACAO_NREC,
									NM_USUARIO_NREC,
									IE_SITUACAO,
									DS_CRITERIO_INCLUSAO,   -- Critérios de inclusão (Critérios de inclusão)
									DS_OBSERVACAO,         	-- Observação (Nota)
									DS_REFERENCIA,          -- Referência (Considerar)
									DS_DEFINICAO,           -- Definição (Definição)
									DS_DESCRICAO_ORIGINAL,	-- Descrição oritinal (Titulo original)
									DS_CRITERIO_EXCLUSAO,   -- Critérios de exclusão (Critérios de exclusão)
									DS_CIAP,                -- CIAP (Título leigo)
									NR_SEQ_COMPONENTE)
				values (	nextval('problema_ciap_seq'),
									cd_ciap_proc_w,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									'A',
									substr(ds_inclusion_p,0,255),
									substr(ds_note_p,0,255),
									substr(ds_inclusion_p,0,255),
									substr(ds_criteria_p,0,255),
									substr(ds_preferred_p,0,255),
									substr(ds_exclusion_p,0,255),
									substr(ds_short_title_p,0,255),
									nr_seq_componente_w);

		end;
	end loop;
	close C01;




elsif ( coalesce(ie_somente_proc_p,'N') = 'N') then

	nr_seq_capitulo_w := obter_capitulo(ds_code_p);

	if ( nr_seq_capitulo_w = 0) then

		Select 	nextval('capitulo_ciap_seq')
		into STRICT	nr_seq_capitulo_w
		;

		ds_capitulo_ciap_w	:= ds_chapter_p;

		insert into capitulo_ciap(	NR_SEQUENCIA,
									CD_CAPITULO,
									DT_ATUALIZACAO,
									NM_USUARIO,
									DT_ATUALIZACAO_NREC,
									NM_USUARIO_NREC,
									IE_SITUACAO,
									DS_CAPITULO,
									NR_SEQ_VERSAO)
							values (nr_seq_capitulo_w,
									cd_capitulo_w,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									'A',
									ds_capitulo_ciap_w,
									nr_seq_versao_p);

	end if;

	nr_seq_componente_w :=  obter_comp_cap(nr_seq_capitulo_w, ds_component_p);

	if ( nr_seq_componente_w = 0) then

		Select 	nextval('componente_ciap_seq')
		into STRICT	nr_seq_componente_w
		;

		select 	coalesce(max(cd_componente_ciap),0)
		into STRICT	cd_componente_w
		from	componente_ciap
		where	nr_seq_capitulo = nr_seq_capitulo_w
		and		coalesce(ie_situacao,'A') = 'A';

		cd_componente_w := cd_componente_w + 1;


		insert into componente_ciap( nr_sequencia,
									cd_componente_ciap,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									ie_situacao,
									ds_componente,
									nr_seq_capitulo)
							values ( nr_seq_componente_w,
									cd_componente_w,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									'A',
									ds_component_p,
									nr_seq_capitulo_w );

	else

			select 	coalesce(max(cd_componente_ciap),0)
			into STRICT	cd_componente_w
			from	componente_ciap
			where	nr_sequencia = nr_seq_componente_w;


	end if;



	select	count(*)
	into STRICT	qt_reg_cid_w
	from	cid_doenca
	where	cd_doenca_cid = coalesce(cd_doenca_freq_w,'XPTO');

	if ( qt_reg_cid_w = 0) then
		cd_doenca_freq_w	:= null;
	end if;

	Select  nextval('problema_ciap_seq')
	into STRICT	nr_seq_problema_ciap_w
	;

	insert into	problema_ciap(	nr_sequencia,
									CD_CIAP,
									DT_ATUALIZACAO,
									NM_USUARIO,
									DT_ATUALIZACAO_NREC,
									NM_USUARIO_NREC,
									IE_SITUACAO,
									DS_CRITERIO_INCLUSAO,   -- Critérios de inclusão (Critérios de inclusão)
									DS_OBSERVACAO,         	-- Observação (Nota)
									DS_REFERENCIA,          -- Referência (Considerar)
									DS_DEFINICAO,           -- Definição (Definição)
									DS_DESCRICAO_ORIGINAL,	-- Descrição oritinal (Titulo original)
									DS_CRITERIO_EXCLUSAO,   -- Critérios de exclusão (Critérios de exclusão)
									DS_CIAP,                -- CIAP (Título leigo)
									NR_SEQ_COMPONENTE,
									CD_DOENCA_CID)
				values (	nr_seq_problema_ciap_w,
									ds_code_p,
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									'A',
									substr(ds_inclusion_p,0,255),
									substr(ds_note_p,0,255),
									substr(ds_inclusion_p,0,255),
									substr(ds_criteria_p,0,255),
									substr(ds_preferred_p,0,255),
									substr(ds_exclusion_p,0,255),
									substr(ds_short_title_p,0,255),
									nr_seq_componente_w,
									cd_doenca_freq_w);

	if (cd_capitulo_w <> 'PR') and (ds_cids_possiveis_w IS NOT NULL AND ds_cids_possiveis_w::text <> '') then


		if (position(',' in ds_cids_possiveis_w) > 0) then

		   while(length(ds_cids_possiveis_w) > 0) loop
				   begin
				   vl_pos_w        := position(',' in ds_cids_possiveis_w);
				   if (vl_pos_w > 0)  then
						   ds_cids_possiveis_w2     := substr(ds_cids_possiveis_w, 1,                (vl_pos_w - 1));
						   ds_cids_possiveis_w      := substr(ds_cids_possiveis_w, (vl_pos_w + 1),   length(ds_cids_possiveis_w));
				   else
						   ds_cids_possiveis_w2     := ds_cids_possiveis_w;
						   ds_cids_possiveis_w      := '';
				   end     if;

					ds_cids_possiveis_w2	:= 	replace(ds_cids_possiveis_w2,'.','');
					ds_cids_possiveis_w2	:= 	replace(ds_cids_possiveis_w2,' ','');

					select 	count(*)
					into STRICT	qt_reg_cid_w
					from	cid_doenca
					where	cd_doenca_cid = ds_cids_possiveis_w2;


					if (qt_reg_cid_w > 0) then


						insert into diagnostico_ciap(	NR_SEQUENCIA,
												DT_ATUALIZACAO,
												NM_USUARIO,
												DT_ATUALIZACAO_NREC,
												NM_USUARIO_NREC,
												NR_SEQ_PROBLEMA,
												CD_DOENCA_CID)
								values (	nextval('diagnostico_ciap_seq'),
												clock_timestamp(),
												nm_usuario_p,
												clock_timestamp(),
												nm_usuario_p,
												nr_seq_problema_ciap_w,
												ds_cids_possiveis_w2);
					end if;


				   end;
		   end loop;

		else

			ds_cids_possiveis_w	:= 	replace(ds_cids_possiveis_w,'.','');

			select 	count(*)
			into STRICT	qt_reg_cid_w
			from	cid_doenca
			where	cd_doenca_cid = ds_cids_possiveis_w;

			if ( qt_reg_cid_w > 0) then

				insert into diagnostico_ciap(	NR_SEQUENCIA,
													DT_ATUALIZACAO,
													NM_USUARIO,
													DT_ATUALIZACAO_NREC,
													NM_USUARIO_NREC,
													NR_SEQ_PROBLEMA,
													CD_DOENCA_CID)
									values (	nextval('diagnostico_ciap_seq'),
													clock_timestamp(),
													nm_usuario_p,
													clock_timestamp(),
													nm_usuario_p,
													nr_seq_problema_ciap_w,
													ds_cids_possiveis_w);

			end if;

		end if;

	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE carregar_ciap_importacao ( nm_usuario_p text, nr_seq_versao_p bigint, ie_somente_proc_p text, ds_code_p text, ds_chapter_p text, ds_component_p text, ds_preferred_p text, ds_short_title_p text, ds_inclusion_p text, ds_exclusion_p text, ds_criteria_p text, ds_consider_p text, ds_note_p text, ds_icd10_p text, ds_icd10_freq_p text) is ds_capitulo_ciap_w varchar(255) FROM PUBLIC;

