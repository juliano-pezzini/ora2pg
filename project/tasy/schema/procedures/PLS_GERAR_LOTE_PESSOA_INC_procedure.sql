-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_pessoa_inc ( nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
-- ie_acao_p 
-- 'G' - Gerar 
-- 'D' - Desfazer geração 
 
ie_contrato_ativo_w	varchar(1);
ie_tipo_pessoa_w	varchar(1);
ie_pagador_w		varchar(1);
ie_estipulante_w	varchar(1);
ie_beneficiario_w	varchar(1);
ie_prestador_w		varchar(1);
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w	varchar(10);
cd_cgc_w		varchar(14);
nr_seq_inconsistencia_w	bigint;
qt_inconsistencia_w	bigint;
nr_seq_contrato_w	pls_contrato.nr_sequencia%type;
nr_contrato_w		pls_contrato.nr_contrato%type	:= null;
ie_tipo_segurado_w	pls_lote_pessoa_inconsist.ie_tipo_segurado%type;
nr_seq_intercambio_w	pls_intercambio.nr_sequencia%type := null;

c01 CURSOR FOR 
	SELECT	cd_pessoa_fisica, 
		cd_cgc 
	from	(SELECT	a.cd_pessoa_fisica, 
			a.cd_cgc 
		from	pls_contrato_pagador a, 
			pls_contrato b 
		where	a.nr_seq_contrato	= b.nr_sequencia 
		and	ie_pagador_w	= 'S' 
		and	(((a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ie_tipo_pessoa_w = 'J') or ((a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and ie_tipo_pessoa_w = 'F') or 
			ie_tipo_pessoa_w = 'A') 
		and	(((ie_contrato_ativo_w = 'A' and (b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '') and coalesce(a.dt_rescisao::text, '') = '') or (ie_contrato_ativo_w = 'I' and (a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '')) or (ie_contrato_ativo_w = 'T'))) 
		and	((b.nr_contrato	= nr_contrato_w) or (coalesce(nr_contrato_w::text, '') = '')) 
		
union
 
		select	a.cd_pessoa_fisica, 
			null cd_cgc 
		from	pls_segurado a, 
			pls_contrato_pagador c, 
			pls_contrato b 
		where	c.nr_seq_contrato	= b.nr_sequencia 
		and	c.nr_sequencia		= a.nr_seq_pagador 
		and	ie_beneficiario_w	= 'S' 
		and	(((ie_contrato_ativo_w = 'A' and (b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '') and coalesce(a.dt_rescisao::text, '') = '') or (ie_contrato_ativo_w = 'I' and (a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '')) or (ie_contrato_ativo_w = 'T'))) 
		and	((b.nr_contrato	= nr_contrato_w) or (coalesce(nr_contrato_w::text, '') = '')) 
		and	((ie_tipo_pessoa_w ='A') or (ie_tipo_pessoa_w='F')) 
		and	((a.ie_tipo_segurado = ie_tipo_segurado_w) or (coalesce(ie_tipo_segurado_w::text, '') = '')) 
		
union
 
		select	a.cd_pf_estipulante cd_pessoa_fisica, 
			a.cd_cgc_estipulante cd_cgc 
		from	pls_contrato a 
		where	ie_estipulante_w	= 'S' 
		and	(((a.cd_cgc_estipulante IS NOT NULL AND a.cd_cgc_estipulante::text <> '') and ie_tipo_pessoa_w = 'J') or ((a.cd_pf_estipulante IS NOT NULL AND a.cd_pf_estipulante::text <> '') and ie_tipo_pessoa_w = 'F') or 
			ie_tipo_pessoa_w = 'A') 
		and	(((ie_contrato_ativo_w = 'A' and (a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '') and coalesce(a.dt_rescisao_contrato::text, '') = '') or (ie_contrato_ativo_w = 'I' and (a.dt_rescisao_contrato IS NOT NULL AND a.dt_rescisao_contrato::text <> '')) or (ie_contrato_ativo_w = 'T'))) 
		and	((a.nr_contrato	= nr_contrato_w) or (coalesce(nr_contrato_w::text, '') = '')) 
		
union
 
		select	a.cd_pessoa_fisica, 
			a.cd_cgc 
		from	pls_prestador a 
		where	ie_prestador_w		= 'S' 
		and	(((a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ie_tipo_pessoa_w = 'J') or ((a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and ie_tipo_pessoa_w = 'F') or 
			ie_tipo_pessoa_w = 'A')) alias58;

c02 CURSOR FOR 
	SELECT	a.nr_seq_inconsistencia 
	from	pls_inconsistencia_pessoa a 
	where	a.cd_pessoa_fisica	= cd_pessoa_fisica_w 
	
union all
 
	SELECT	a.nr_seq_inconsistencia 
	from	pls_inconsistencia_pessoa a 
	where	a.cd_cgc		= cd_cgc_w;

c03 CURSOR FOR 
	SELECT	cd_pessoa_fisica, 
		cd_cgc 
	from	(SELECT	a.cd_pessoa_fisica, 
			a.cd_cgc 
		from	pls_contrato_pagador a, 
			pls_intercambio b 
		where	a.nr_seq_pagador_intercambio	= b.nr_sequencia 
		and	ie_pagador_w	= 'S' 
		and	(((a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ie_tipo_pessoa_w = 'J') or ((a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and ie_tipo_pessoa_w = 'F') or 
			ie_tipo_pessoa_w = 'A') 
		and	(((ie_contrato_ativo_w = 'A' and (b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '') and coalesce(a.dt_rescisao::text, '') = '') or (ie_contrato_ativo_w = 'I' and (a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '')) or (ie_contrato_ativo_w = 'T'))) 
		and	((b.nr_sequencia = nr_seq_intercambio_w) or (coalesce(nr_seq_intercambio_w::text, '') = '')) 
		
union
 
		select	a.cd_pessoa_fisica, 
			null cd_cgc 
		from	pls_segurado a, 
			pls_contrato_pagador c, 
			pls_intercambio b 
		where	c.nr_seq_pagador_intercambio = b.nr_sequencia 
		and	c.nr_sequencia		= a.nr_seq_pagador 
		and	ie_beneficiario_w	= 'S' 
		and	(((ie_contrato_ativo_w = 'A' and (b.dt_aprovacao IS NOT NULL AND b.dt_aprovacao::text <> '') and coalesce(a.dt_rescisao::text, '') = '') or (ie_contrato_ativo_w = 'I' and (a.dt_rescisao IS NOT NULL AND a.dt_rescisao::text <> '')) or (ie_contrato_ativo_w = 'T'))) 
		and	((b.nr_sequencia = nr_seq_intercambio_w) or (coalesce(nr_seq_intercambio_w::text, '') = '')) 
		and	((ie_tipo_pessoa_w ='A') or (ie_tipo_pessoa_w='F')) 
		and	((a.ie_tipo_segurado = ie_tipo_segurado_w) or (coalesce(ie_tipo_segurado_w::text, '') = '')) 
		
union
 
		select	a.cd_pessoa_fisica cd_pessoa_fisica, 
			a.cd_cgc cd_cgc 
		from	pls_intercambio a 
		where	ie_estipulante_w	= 'S' 
		and	(((a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ie_tipo_pessoa_w = 'J') or ((a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and ie_tipo_pessoa_w = 'F') or 
			ie_tipo_pessoa_w = 'A') 
		and	(((ie_contrato_ativo_w = 'A' and (a.dt_aprovacao IS NOT NULL AND a.dt_aprovacao::text <> '') and coalesce(a.dt_exclusao::text, '') = '') or (ie_contrato_ativo_w = 'I' and (a.dt_exclusao IS NOT NULL AND a.dt_exclusao::text <> '')) or (ie_contrato_ativo_w = 'T'))) 
		and	((a.nr_sequencia= nr_seq_intercambio_w) or (coalesce(nr_seq_intercambio_w::text, '') = '')) 
		
union
 
		select	a.cd_pessoa_fisica, 
			a.cd_cgc 
		from	pls_prestador a 
		where	ie_prestador_w		= 'S' 
		and	(((a.cd_cgc IS NOT NULL AND a.cd_cgc::text <> '') and ie_tipo_pessoa_w = 'J') or ((a.cd_pessoa_fisica IS NOT NULL AND a.cd_pessoa_fisica::text <> '') and ie_tipo_pessoa_w = 'F') or 
			ie_tipo_pessoa_w = 'A')) alias58;


BEGIN 
 
if (nr_seq_lote_p IS NOT NULL AND nr_seq_lote_p::text <> '') then 
	if (ie_acao_p	= 'G') then 
		select	ie_contrato_ativo, 
			ie_tipo_pessoa, 
			ie_pagador, 
			ie_beneficiario, 
			ie_estipulante, 
			ie_prestador, 
			nr_seq_contrato, 
			ie_tipo_segurado, 
			nr_seq_intercambio 
		into STRICT	ie_contrato_ativo_w, 
			ie_tipo_pessoa_w, 
			ie_pagador_w, 
			ie_beneficiario_w, 
			ie_estipulante_w, 
			ie_prestador_w, 
			nr_seq_contrato_w, 
			ie_tipo_segurado_w, 
			nr_seq_intercambio_w 
		from	pls_lote_pessoa_inconsist 
		where	nr_sequencia	= nr_seq_lote_p;
		 
		if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then 
			select	a.nr_contrato 
			into STRICT	nr_contrato_w 
			from	pls_contrato a 
			where	a.nr_sequencia	= nr_seq_contrato_w;
		end if;
		 
		if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') or (ie_tipo_segurado_w in ('T','C') and coalesce(nr_contrato_w::text, '') = '') then--T = Intercâmbio cooperativa ; C = Intercâmbio Congênere 
			 
				open c03;
				loop 
				fetch c03 into 
					cd_pessoa_fisica_w, 
					cd_cgc_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					CALL pls_consistir_dados_pessoa(cd_pessoa_fisica_w, 
								cd_cgc_w, 
								nr_seq_lote_p, 
								cd_estabelecimento_p, 
								nm_usuario_p);
					 
					open c02;
					loop 
					fetch c02 into 
						nr_seq_inconsistencia_w;
					EXIT WHEN NOT FOUND; /* apply on c02 */
						select	count(1) 
						into STRICT	qt_inconsistencia_w 
						from	pls_pessoa_inconsistente	a, 
							pls_lote_pessoa_inconsist	b 
						where	a.nr_seq_lote	= b.nr_sequencia 
						and	b.ie_status	= 'I' 
						and	((a.cd_pessoa_fisica = cd_pessoa_fisica_w) or (a.cd_cgc = cd_cgc_w)) 
						and	a.nr_seq_inconsistencia = nr_seq_inconsistencia_w  LIMIT 1;
						 
						if (qt_inconsistencia_w = 0) then 
							insert	into	pls_pessoa_inconsistente(nr_sequencia, 
								nm_usuario, 
								dt_atualizacao, 
								nm_usuario_nrec, 
								dt_atualizacao_nrec, 
								nr_seq_lote, 
								cd_pessoa_fisica, 
								cd_cgc, 
								nr_seq_inconsistencia) 
							values (nextval('pls_pessoa_inconsistente_seq'), 
								nm_usuario_p, 
								clock_timestamp(), 
								nm_usuario_p, 
								clock_timestamp(), 
								nr_seq_lote_p, 
								cd_pessoa_fisica_w, 
								cd_cgc_w, 
								nr_seq_inconsistencia_w);
						end if;
					end loop;
					close c02;
				end loop;
				close c03;
		elsif (nr_contrato_w IS NOT NULL AND nr_contrato_w::text <> '') or (ie_tipo_segurado_w not in ('T','C')) then 
			 
			open c01;
			loop 
			fetch c01 into 
				cd_pessoa_fisica_w, 
				cd_cgc_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				CALL pls_consistir_dados_pessoa(cd_pessoa_fisica_w, 
							cd_cgc_w, 
							nr_seq_lote_p, 
							cd_estabelecimento_p, 
							nm_usuario_p);
				 
				open c02;
				loop 
				fetch c02 into 
					nr_seq_inconsistencia_w;
				EXIT WHEN NOT FOUND; /* apply on c02 */
					select	count(1) 
					into STRICT	qt_inconsistencia_w 
					from	pls_pessoa_inconsistente	a, 
						pls_lote_pessoa_inconsist	b 
					where	a.nr_seq_lote	= b.nr_sequencia 
					and	b.ie_status	= 'I' 
					and	((a.cd_pessoa_fisica = cd_pessoa_fisica_w) or (a.cd_cgc = cd_cgc_w)) 
					and	a.nr_seq_inconsistencia = nr_seq_inconsistencia_w  LIMIT 1;
					 
					if (qt_inconsistencia_w = 0) then 
						insert	into	pls_pessoa_inconsistente(nr_sequencia, 
							nm_usuario, 
							dt_atualizacao, 
							nm_usuario_nrec, 
							dt_atualizacao_nrec, 
							nr_seq_lote, 
							cd_pessoa_fisica, 
							cd_cgc, 
							nr_seq_inconsistencia) 
						values (nextval('pls_pessoa_inconsistente_seq'), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nr_seq_lote_p, 
							cd_pessoa_fisica_w, 
							cd_cgc_w, 
							nr_seq_inconsistencia_w);
					end if;
				end loop;
				close c02;
			end loop;
			close c01;
			 
		end if;
		 
		update	pls_lote_pessoa_inconsist 
		set	dt_geracao_lote	= clock_timestamp(), 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_lote_p;
	elsif (ie_acao_p	= 'D') then 
		delete	FROM pls_pessoa_inconsistente 
		where	nr_seq_lote	= nr_seq_lote_p;
		 
		update	pls_lote_pessoa_inconsist 
		set	dt_geracao_lote	 = NULL, 
			dt_atualizacao	= clock_timestamp(), 
			ie_status	= 'I', 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_lote_p;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_pessoa_inc ( nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

