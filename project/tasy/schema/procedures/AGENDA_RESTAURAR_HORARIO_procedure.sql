-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agenda_restaurar_horario ( nr_seq_agenda_p bigint, cd_agenda_p bigint, cd_tipo_agenda_p bigint, cd_motivo_agenda_p bigint, ds_motivo_p text, nm_usuario_p text, ds_erro_p INOUT text, ie_reportar_erro_p text default null) AS $body$
DECLARE



nm_usuario_acesso_w	varchar(15);
cd_pessoa_fisica_w	varchar(10);
nm_paciente_w		varchar(80);
dt_agenda_w		timestamp;
ds_motivo_agenda_w	varchar(255);
ie_status_agenda_w	varchar(10);
ie_exige_motivo_w	varchar(1) := 'S';


BEGIN
ie_exige_motivo_w := Obter_Param_Usuario(820, 343, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_exige_motivo_w);

select	nm_usuario_acesso,
	cd_pessoa_fisica,
	nm_paciente,
	hr_inicio,
	ie_status_agenda
into STRICT	nm_usuario_acesso_w,
	cd_pessoa_fisica_w,
	nm_paciente_w,
	dt_agenda_w,
	ie_status_agenda_w
from	agenda_paciente
where	nr_sequencia	= nr_seq_agenda_p;

if (coalesce(nm_usuario_acesso_w::text, '') = '') and (ie_status_agenda_w <> 'R') then
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278082,null);
/*elsif	(nm_usuario_p <> nm_usuario_acesso_w) then
	ds_erro_p	:= 'Este horário não pode ser restaurado. Somente o usuário que cadastrou o agendamento pode restaurar o horário';*/
elsif (coalesce(cd_motivo_agenda_p::text, '') = '') and (coalesce(ds_motivo_p::text, '') = '') and (ie_exige_motivo_w = 'S') then
	ds_erro_p	:= WHEB_MENSAGEM_PCK.get_texto(278083,null);
else

	begin


	/* Pegar o motivo agenda */

	select  substr(max(ds_motivo),1,255)
	into STRICT    ds_motivo_agenda_w
	from    agenda_motivo
	where   nr_sequencia 		= cd_motivo_agenda_p;

	/* Grava o histórico de restauração */

	insert into agenda_paciente_hist(
		nr_sequencia,
		cd_agenda,
		nr_seq_agenda,
		ie_historico,
		dt_historico,
		nm_usuario_hist,
		ds_historico,
		cd_pessoa_hist,
		nm_paciente_hist,
		dt_agenda_hist,
		cd_perfil
	) values (
		nextval('agenda_paciente_hist_seq'),
		cd_agenda_p,
		nr_seq_agenda_p,
		'RES',
		clock_timestamp(),
		nm_usuario_p,
		wheb_mensagem_pck.get_texto(793514,
					'dt_agenda_w='||to_char(dt_agenda_w, pkg_date_formaters.localize_mask('timestamp', pkg_date_formaters.getUserLanguageTag(wheb_usuario_pck.get_cd_estabelecimento, nm_usuario_p)))||
					';ds_motivo_w='||ds_motivo_p||
					';ds_motivo_agenda_w='||ds_motivo_agenda_w),
		cd_pessoa_fisica_w,
		nm_paciente_w,
		dt_agenda_w,
		obter_perfil_ativo
	);

	/* Restaura o horário da agenda */

	update	agenda_paciente
	set	ie_status_agenda	= 'L',
		nm_usuario_acesso	= ''
	where	nr_sequencia		= nr_seq_agenda_p;

	commit;

	/*exception
		when others then
		ds_erro_p	:= 'Não foi possível restaurar o horário.';
		rollback; */
	end;

end if;

if (ie_reportar_erro_p	= 'S') and (ds_erro_p IS NOT NULL AND ds_erro_p::text <> '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_erro_p);
end if;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agenda_restaurar_horario ( nr_seq_agenda_p bigint, cd_agenda_p bigint, cd_tipo_agenda_p bigint, cd_motivo_agenda_p bigint, ds_motivo_p text, nm_usuario_p text, ds_erro_p INOUT text, ie_reportar_erro_p text default null) FROM PUBLIC;

