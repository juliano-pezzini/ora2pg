-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_criar_indices_dinamico (nm_indice_p text, ie_cria_indice_p text) AS $body$
DECLARE


v_sid			bigint;
v_serial		varchar(100);
v_program 		varchar(64);
v_username		varchar(30);
qt_sessao_w		bigint;
comando_w		varchar(4000);
qt_retorno_w	bigint;

nm_tabela_w  		varchar(50);
nm_integridade_w	varchar(100);
ie_criar_alterar_cons_w	varchar(001)	:= 0;
nm_indice_w  		varchar(50);
ie_dropar_w  		varchar(1);
ie_online_w  		varchar(1) := 'N';
ie_logging_w 		varchar(1) := 'N';
qt_nivel_w   		smallint := 0;
qt_indice_w			bigint;
sid_w			bigint;
serial_w		varchar(100);
job_w			bigint;

C01 CURSOR FOR
	SELECT	a.nm_tabela,
			a.nm_indice
	from   TASY_INDICE_PENDENTE a,
			 user_segments b
	where  a.nm_tabela = b.segment_name
	and		((nm_indice_p = 'T') or (upper(nm_indice_p) = upper(a.nm_indice)))
	and		((ie_cria_indice_p = 'S') or ((ie_cria_indice_p = 'N')  and (coalesce(bytes,0) < 999999)))
	and    Obter_Se_Cria_Indice(a.nm_tabela,a.nm_indice) = 'S'
	order by coalesce(bytes,0);

C02 CURSOR FOR
	SELECT	a.nm_tabela,
			b.nm_integridade_referencial,
			'N'
	from	tabela_sistema a,
			integridade_referencial b
	where	b.nm_tabela = a.nm_tabela
	and	gerar_objeto_aplicacao(a.ds_aplicacao) = 'S'
	and	not exists (
			SELECT 1
			from	user_constraints c
			where	b.nm_tabela = c.table_name
			and	b.nm_integridade_referencial = c.constraint_name);

C03 CURSOR FOR
	SELECT	sid,
			serial#
	FROM 	v$session
	WHERE	audsid <> (SELECT userenv('sessionid') )
	AND	username = (select username from v$session where audsid = (select userenv('sessionid') ))
	AND	action like '%TASY_CRIAR_INDICES_DINAMICO%'
	and	status = 'ACTIVE';

C04 CURSOR FOR
	SELECT	job
	from	user_jobs
	where	what like '%TASY_CRIAR_INDICES_DINAMICO%';


BEGIN

select	sid,
		serial#
into STRICT	v_sid,
		v_serial
from	v$session
where 	audsid = userenv('SESSIONID');

EXECUTE 'SELECT program, username FROM v$session WHERE sid = :b1'
INTO STRICT v_program, v_username
USING v_sid;

SELECT	count(*)
into STRICT	qt_sessao_w
FROM 	v$session
WHERE	audsid <> (SELECT userenv('sessionid') )
AND	username = v_username
and sid <> v_sid
AND	action like '%TASY_CRIAR_INDICES_DINAMICO%'
and	status = 'ACTIVE';

if (qt_sessao_w > 0) then

	open C03;
	loop
	fetch C03 into
		sid_w,
		serial_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
		begin

			begin

			comando_w:=	' select max(obter_min_entre_datas(s.logon_time,sysdate,1)) '||chr(10)||chr(13)||
						' from	gv$session s ' ||chr(10)||chr(13)||
						' where	sid = '||chr(39)||sid_w||chr(39) ||chr(10)||chr(13)||
						' and serial# = '||chr(39)||serial_w||chr(39);

			EXECUTE comando_w into STRICT qt_retorno_w;

			if (qt_retorno_w > 180) then
				EXECUTE 'alter system kill session '''||sid_w||','||serial_w||''' immediate';
			end if;

			exception
			when others then
				comando_w:= comando_w;
			end;

		end;
	end loop;
	close C03;

end if;

SELECT	count(*)
into STRICT	qt_sessao_w
FROM 	v$session
WHERE	audsid <> (SELECT userenv('sessionid') )
AND	username = v_username
and sid <> v_sid
AND	action like '%TASY_CRIAR_INDICES_DINAMICO%'
and	status = 'ACTIVE';

qt_sessao_w := 0;
if (qt_sessao_w = 0) then

	delete from TASY_INDICE_PENDENTE;
	commit;

	CALL tasy_atualiza_indices_pendente('TASY');
	ie_online_w  := obter_online_index_build;
	ie_logging_w := Obter_Valor_Param_Usuario(0,165,Obter_perfil_Ativo,wheb_usuario_pck.get_nm_usuario,0);

	open C01;
	loop
	fetch C01 into
		nm_tabela_w,
		nm_indice_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

		qt_nivel_w := obter_nivel_paralelismo(nm_tabela_w);
		CALL Tasy_Criar_Indice(nm_tabela_w,
						nm_indice_w,
						1,
						'N',
						ie_online_w,
						ie_logging_w,
						qt_nivel_w);

	end;
	end loop;
	close C01;
	commit;

	update TASY_INDICE_PENDENTE
	set ie_status = 'G'
	where ((nm_indice_p = 'T') or (upper(nm_indice_p) = upper(nm_indice)));
	commit;

	open C02;
	loop
	fetch C02 into
		nm_tabela_w,
		nm_integridade_w,
		ie_criar_alterar_cons_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
			CALL Tasy_Criar_Integridade(nm_tabela_w, nm_integridade_w, ie_criar_alterar_cons_w);
		end;
	end loop;
	close C02;

	open C04;
	loop
	fetch C04 into
		job_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
			DBMS_JOB.remove(job_w);
			commit;
		end;
	end loop;
	close C04;

	DBMS_JOB.SUBMIT(job_w
				   ,'TASY_CRIAR_INDICES_DINAMICO('||chr(39)||'T'||chr(39)||','||chr(39)||'S'||chr(39)||');'
				   ,clock_timestamp()
				   ,'TRUNC(SYSDATE + 1) + 04/24');
	commit;

	DBMS_JOB.NEXT_DATE(job_w, TRUNC(clock_timestamp() + interval '1 days') + 04/24);
	commit;

	CALL tasy_atualiza_indices_pendente('TASY');

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_criar_indices_dinamico (nm_indice_p text, ie_cria_indice_p text) FROM PUBLIC;

