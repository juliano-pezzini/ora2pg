-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_saida_setor_js ( nr_seq_interno_p bigint, nr_atendimento_p bigint, cd_motivo_saida_setor_p bigint, dt_saida_p timestamp, nm_usuario_p text, ds_classif_setor_p INOUT text) AS $body$
DECLARE

 
ie_inserir_motivo_perm_w	varchar(1) := 'N';
cd_setor_atendimento_w		integer;
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
qt_minuto_max_w			bigint := 0;
qt_min_perm_setor_w		numeric(20);		
cd_classif_setor_w		varchar(10);


BEGIN 
 
if (nr_seq_interno_p IS NOT NULL AND nr_seq_interno_p::text <> '')then 
	begin 
	 
	select 	cd_setor_atendimento, 
		cd_unidade_basica, 
		cd_unidade_compl 
	into STRICT	cd_setor_atendimento_w, 
		cd_unidade_basica_w, 
		cd_unidade_compl_w 
	from 	atend_paciente_unidade 
	where 	nr_seq_interno = nr_seq_interno_p;	
	 
	if (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '')then 
		begin 
		 
		select 	qt_minuto_max 
		into STRICT	qt_minuto_max_w 
		from 	setor_atendimento 
		where 	cd_setor_atendimento = cd_setor_atendimento_w;
		 
		end;
	end if;
	 
	if (qt_minuto_max_w > 0)then 
		begin 
		 
		qt_min_perm_setor_w	:= obter_min_permanencia_setor(nr_atendimento_p, cd_setor_atendimento_w, cd_unidade_basica_w, cd_unidade_compl_w);
		 
		if (qt_min_perm_setor_w > qt_minuto_max_w)then 
			begin 
			 
			if (cd_motivo_saida_setor_p = 0)then 
				begin 
				 
				--Rai1se_ap1plication_e1rror(-20011,'De acordo com a regra de setores, é necessário informar o motivo de permanência no setor! #@#@'); 
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(214004);
				 
				end;
			elsif (cd_motivo_saida_setor_p <> 0)then 
				begin 
				 
				ie_inserir_motivo_perm_w	:= 'S';
				 
				end;
			end if;
			 
			end;
		end if;
		 
		end;
	end if;
	 
	CALL registro_saida_setor(nr_seq_interno_p, dt_saida_p, nm_usuario_p);
	 
	if (ie_inserir_motivo_perm_w = 'S')then 
		begin 
		 
		CALL inserir_motivo_permanencia(nm_usuario_p, nr_atendimento_p, cd_setor_atendimento_w, cd_unidade_basica_w, cd_unidade_compl_w, cd_motivo_saida_setor_p);
		 
		end;
	end if;
	 
	if (cd_setor_atendimento_w IS NOT NULL AND cd_setor_atendimento_w::text <> '')then 
		begin 
		 
		select 	coalesce(cd_classif_setor,0) 
		into STRICT	cd_classif_setor_w 
		from 	setor_atendimento 
		where 	cd_setor_atendimento = cd_setor_atendimento_w;
		 
		if (coalesce(cd_classif_setor_w,0) > 0) then 
			ds_classif_setor_p := cd_classif_setor_w;
		end if;
		 
		end;
	end if;
	 
	end;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_saida_setor_js ( nr_seq_interno_p bigint, nr_atendimento_p bigint, cd_motivo_saida_setor_p bigint, dt_saida_p timestamp, nm_usuario_p text, ds_classif_setor_p INOUT text) FROM PUBLIC;

