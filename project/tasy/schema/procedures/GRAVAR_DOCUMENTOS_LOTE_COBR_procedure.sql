-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gravar_documentos_lote_cobr ( nr_seq_lote_p bigint, nr_documento_p bigint, ie_tipo_lote_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_cobranca_w		bigint;
ie_situacao_tit_w		varchar(1);
dt_paramento_previsto_w		timestamp;
vl_saldo_titulo_w		double precision;
ie_status_cobr_w		varchar(1);
dt_previsao_cobr_w		timestamp;
nr_seq_cobrador_w		bigint;
nr_seq_etapa_cobr_w		bigint;
ds_historico_w			varchar(4000);
nr_atendimento_w		bigint;
vl_conta_w			double precision;
cd_convenio_w			integer;
cd_categoria_w			bigint;
ie_tipo_guia_w			varchar(2);
cd_estab_conta_w		smallint;
nr_titulo_w			bigint;
qt_reg_titulo_w			bigint;
qt_reg_conta_w			bigint;
					

BEGIN 
 
select	coalesce(count(*),0) 
into STRICT	qt_reg_titulo_w 
from	cobranca_paciente_titulo 
where	ie_tipo_lote_p = 'T' 
and 	nr_titulo = nr_documento_p 
and	nr_seq_lote = nr_seq_lote_p;
 
select	coalesce(count(*),0) qt_reg 
into STRICT	qt_reg_conta_w 
from	cobranca_paciente_conta 
where	ie_tipo_lote_p = 'C' 
and 	nr_interno_conta = nr_documento_p 
and	nr_seq_lote = nr_seq_lote_p;
 
	 
if (ie_tipo_lote_p = 'T') and (qt_reg_titulo_w = 0) then 
--if	(ie_tipo_lote_p = 'T') then 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_cobranca_w 
	from	cobranca 
	where 	nr_titulo = nr_documento_p;
	 
	if (coalesce(nr_seq_cobranca_w,0) > 0) then 
		select	ie_status, 
			dt_previsao_cobranca, 
			nr_seq_cobrador, 
			nr_seq_etapa 
		into STRICT	ie_status_cobr_w, 
			dt_previsao_cobr_w, 
			nr_seq_cobrador_w, 
			nr_seq_etapa_cobr_w 
		from	cobranca 
		where 	nr_sequencia = nr_seq_cobranca_w;
 
		select	max(coalesce(ds_historico,'')) 
		into STRICT	ds_historico_w 
		from 	cobranca_historico 
		where	nr_seq_cobranca = nr_seq_cobranca_w  
		order by dt_historico desc LIMIT 1;
	end if;
		 
	select	ie_situacao, 
		dt_pagamento_previsto, 
		vl_saldo_titulo 
	into STRICT	ie_situacao_tit_w, 
		dt_paramento_previsto_w, 
		vl_saldo_titulo_w 
	from	titulo_receber 
	where	nr_titulo = nr_documento_p;
	 
	insert into cobranca_paciente_titulo( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_lote, 
		nr_titulo, 
		ie_situacao, 
		dt_pagamento_previsto, 
		vl_saldo_titulo, 
		ie_status_cobranca, 
		dt_prevista_cobr, 
		nr_seq_cobrador, 
		nr_seq_etapa_cobr, 
		ds_historico_cobr, 
		nr_seq_cobranca) 
	values (	nextval('cobranca_paciente_titulo_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_lote_p, 
		nr_documento_p, 
		ie_situacao_tit_w, 
		dt_paramento_previsto_w, 
		vl_saldo_titulo_w, 
		ie_status_cobr_w, 
		dt_previsao_cobr_w, 
		nr_seq_cobrador_w, 
		nr_seq_etapa_cobr_w, 
		substr(ds_historico_w,1,4000), 
		nr_seq_cobranca_w 
		);
 
elsif (ie_tipo_lote_p = 'C') and (qt_reg_conta_w = 0) then 
--elsif	(ie_tipo_lote_p = 'C') then 
 
	select	nr_atendimento, 
		vl_conta, 
		cd_convenio_parametro, 
		cd_categoria_parametro, 
		ie_tipo_guia, 
		cd_estabelecimento 
	into STRICT	nr_atendimento_w, 
		vl_conta_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		ie_tipo_guia_w, 
		cd_estab_conta_w 
	from	conta_paciente 
	where	nr_interno_conta = nr_documento_p;
	 
	begin 
		select	max(nr_titulo) 
		into STRICT	nr_titulo_w 
		from	titulo_receber 
		where	nr_interno_conta = nr_documento_p;
	exception 
		when no_data_found then 
			nr_titulo_w := null;
	end;
 
	insert into cobranca_paciente_conta( 
		nr_sequencia, 
		dt_atualizacao, 
		nm_usuario, 
		nr_seq_lote, 
		nr_interno_conta, 
		nr_atendimento, 
		vl_total_conta, 
		cd_convenio, 
		cd_categoria_convenio, 
		nr_seq_etapa, 
		nr_seq_motivo_dev, 
		ie_tipo_guia, 
		cd_estabelecimento, 
		nr_seq_nota_fiscal, 
		nr_titulo) 
	values (	nextval('cobranca_paciente_conta_seq'), 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_seq_lote_p, 
		nr_documento_p, 
		nr_atendimento_w, 
		vl_conta_w, 
		cd_convenio_w, 
		cd_categoria_w, 
		obter_ultima_etapa(nr_documento_p, 'ET'), 
		obter_ultima_etapa(nr_documento_p, 'SMD'), 
		ie_tipo_guia_w, 
		cd_estab_conta_w, 
		obter_nf_conta(nr_documento_p, 1), 
		nr_titulo_w);
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gravar_documentos_lote_cobr ( nr_seq_lote_p bigint, nr_documento_p bigint, ie_tipo_lote_p text, nm_usuario_p text) FROM PUBLIC;

