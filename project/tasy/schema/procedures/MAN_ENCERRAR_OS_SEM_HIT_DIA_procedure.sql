-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE man_encerrar_os_sem_hit_dia ( nr_seq_tipo_hist_p bigint default null, nr_seq_estagio_p bigint default null) AS $body$
DECLARE


nr_sequencia_w			bigint;
ie_envio_comunicacao_w		varchar(01);
nr_seq_equipamento_w		bigint;
ds_titulo_w			varchar(255);
ds_dano_breve_w			varchar(80);
ds_comunicado_w			text;
nm_usuario_w			varchar(15);
nm_usuario_destino_w		varchar(255);
ie_grau_satisfacao_w		varchar(3);
nr_seq_estagio_w		bigint;

ds_relat_tecnico_w		man_ordem_serv_tecnico.ds_relat_tecnico%type;
nr_seq_localizacao_w		man_localizacao.nr_sequencia%type;
cd_cnpj_w			man_localizacao.cd_cnpj%type;
nr_seq_idioma_w			pessoa_juridica.nr_seq_idioma%type;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_equipamento,
		nr_seq_localizacao
	from	man_estagio_processo	b,
		man_ordem_servico	a
	where	a.ie_status_ordem <> '3'
	and	b.nr_sequencia	= a.nr_seq_estagio
	and (obter_dias_entre_datas(coalesce(man_obter_data_ult_hist(a.nr_sequencia), clock_timestamp()), clock_timestamp()) > coalesce(b.qt_dias_encerramento,30))
	and	coalesce(b.qt_dias_encerramento,0) > 0;

c02 CURSOR FOR
	SELECT	distinct(nm_usuario)
	from (SELECT	distinct
			nm_usuario_exec nm_usuario
		from	man_ordem_servico_exec
		where	nr_seq_ordem		= nr_sequencia_w
		and	ie_envio_comunicacao_w	in ('E','T')
		
union

		select	min(b.nm_usuario) nm_usuario
		from	usuario b,
			man_ordem_servico a
		where	a.nr_sequencia		= nr_sequencia_w
		and	b.cd_pessoa_fisica		= a.cd_pessoa_solicitante
		and	ie_envio_comunicacao_w	in ('S','T')
		
union

		select	substr(obter_usuario_pessoa(a.cd_pessoa_resp),1,60) nm_usuario
		from	setor_atendimento a,
			man_ordem_servico_exec c
		where	a.cd_setor_atendimento	= obter_setor_usuario(c.nm_usuario_exec)
		and 	c.nr_seq_ordem		= nr_sequencia_w
		and	(a.cd_pessoa_resp IS NOT NULL AND a.cd_pessoa_resp::text <> '')
		and	ie_envio_comunicacao_w	in ('R','T')
		) alias9
	where (nm_usuario IS NOT NULL AND nm_usuario::text <> '');


BEGIN
CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('N');

select	coalesce(vl_parametro,vl_parametro_padrao)
into STRICT	ie_grau_satisfacao_w
from	funcao_parametro
where	nr_sequencia	= 218
and	cd_funcao	= 299;

select	obter_valor_param_usuario(299,93,Obter_perfil_Ativo,wheb_usuario_pck.get_nm_usuario,wheb_usuario_pck.get_cd_estabelecimento)
into STRICT	nr_seq_estagio_w
;

if (nr_seq_estagio_p IS NOT NULL AND nr_seq_estagio_p::text <> '') then
	nr_seq_estagio_w	:= nr_seq_estagio_p;
end if;

open C01;
loop
fetch C01 into	
	nr_sequencia_w,
	nr_seq_equipamento_w,
	nr_seq_localizacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin	
	update	man_ordem_servico
	set	ie_status_ordem		= '3',
		dt_fim_real		= coalesce(dt_fim_real,clock_timestamp())
	where	nr_sequencia		= nr_sequencia_w;
	
	if (ie_grau_satisfacao_w IS NOT NULL AND ie_grau_satisfacao_w::text <> '') then
		update	man_ordem_servico
		set	ie_grau_satisfacao	= ie_grau_satisfacao_w
		where	nr_sequencia 		= nr_sequencia_w;
	end if;
	
	if (nr_seq_estagio_w IS NOT NULL AND nr_seq_estagio_w::text <> '') then
		update	man_ordem_servico
		set	nr_seq_estagio		= nr_seq_estagio_w
		where	nr_sequencia		= nr_sequencia_w;
	end if;
	
	ds_comunicado_w 	:= '';
	
	ds_relat_tecnico_w	:= wheb_mensagem_pck.get_texto(305509); --'Ordem de Serviço encerrada por falta de historico do usuário.'
	
	if (nr_seq_tipo_hist_p in (1,2,6,129,130,132,143)) then -- Tipo de históricos que foram tradados no Servidor, que vão para cliente (externos)
		select	nr_seq_localizacao
		into STRICT	nr_seq_localizacao_w
		from	man_ordem_servico
		where	nr_sequencia = nr_sequencia_w;

		if (nr_seq_localizacao_w IS NOT NULL AND nr_seq_localizacao_w::text <> '') then
			select	max(a.cd_cnpj)
			into STRICT	cd_cnpj_w
			from	man_localizacao	a
			where	a.nr_sequencia	= nr_seq_localizacao_w;
			
			if (cd_cnpj_w IS NOT NULL AND cd_cnpj_w::text <> '') then
				select	max(a.nr_seq_idioma)
				into STRICT	nr_seq_idioma_w
				from	pessoa_juridica	a
				where	a.cd_cgc	= cd_cnpj_w;						
				
				if (nr_seq_idioma_w IS NOT NULL AND nr_seq_idioma_w::text <> '') then
					-- Retorna com o idioma do cliente que abriu a OS.
					ds_relat_tecnico_w	:= substr(obter_desc_expressao_idioma(305509, ds_relat_tecnico_w, nr_seq_idioma_w), 1, 255);
				end if;
			end if;
		end if;
	end if;
	
	insert into man_ordem_serv_tecnico(	nr_sequencia,
			nr_seq_ordem_serv,
			dt_atualizacao,
			nm_usuario,
			ds_relat_tecnico,
			dt_historico,
			ie_origem,
			nr_seq_tipo,
			dt_liberacao,
			nm_usuario_lib)
	values (	nextval('man_ordem_serv_tecnico_seq'),
			nr_sequencia_w,
			clock_timestamp(),
			'Tasy',
			ds_relat_tecnico_w,
			clock_timestamp(),
			'I',
			nr_seq_tipo_hist_p,
			clock_timestamp(),
			'Tasy');
	
	select	coalesce(max(a.ie_envio_comunicacao),'N')
	into STRICT	ie_envio_comunicacao_w
	from	man_tipo_equipamento a,
		man_equipamento b
	where	a.nr_sequencia	= b.nr_seq_tipo_equip
	and	b.nr_sequencia	= nr_seq_equipamento_w;
	
	if (ie_envio_comunicacao_w <> 'N') then
		begin
		ds_titulo_w	:= substr(wheb_mensagem_pck.get_texto(305512,'NR_SEQUENCIA_W=' || nr_sequencia_w),1,255); --substr('Encerramento automático de Ordem de Serviço nº' || nr_sequencia_w,1,255)
		select	substr(wheb_mensagem_pck.get_texto(305513) || ds_dano_breve,1,80)
		into STRICT	ds_dano_breve_w
		from	man_ordem_servico
		where	nr_sequencia	= nr_sequencia_w;

		ds_comunicado_w	:= ds_comunicado_w || chr(13) || chr(10) || chr(13) || chr(10) || ds_dano_breve_w;	
		
		open c02;
		loop
		fetch c02 into
			nm_usuario_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			
			nm_usuario_destino_w	:= substr(nm_usuario_w || ',',1,255);

			insert into comunic_interna(	dt_comunicado,
					ds_titulo,
					ds_comunicado,
					nm_usuario,
					dt_atualizacao,
					ie_geral,
					nm_usuario_destino,
					nr_sequencia,
					ie_gerencial,
					nr_seq_classif,
					dt_liberacao)
			values (	clock_timestamp(),
					ds_titulo_w,
					ds_comunicado_w,
					'Tasy',
					clock_timestamp(),
					'N',
					nm_usuario_destino_w,
					nextval('comunic_interna_seq'),
					'N',
					null,
					clock_timestamp());

			insert into man_ordem_serv_envio(	nr_sequencia,
					nr_seq_ordem,
					dt_atualizacao,
					nm_usuario,
					dt_envio,
					ie_tipo_envio,
					ds_destino,
					ds_observacao)
			values (	nextval('man_ordem_serv_envio_seq'),
					nr_sequencia_w,
					clock_timestamp(),
					'Tasy',
					clock_timestamp(),
					'I',
					substr(nm_usuario_destino_w,1,255),
					wheb_mensagem_pck.get_texto(305514));--'Envio da comunicação interna de encerramento automático da OS'
		end loop;
		close c02;
		end;
	end if;	
	end;
end loop;
close C01;

commit;

CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE man_encerrar_os_sem_hit_dia ( nr_seq_tipo_hist_p bigint default null, nr_seq_estagio_p bigint default null) FROM PUBLIC;

