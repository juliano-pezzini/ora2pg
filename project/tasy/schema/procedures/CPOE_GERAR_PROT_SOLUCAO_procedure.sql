-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



CREATE TYPE v_base_ds_dose_dif AS (valor double precision);
CREATE TYPE v_base_solucao AS ( qt_volume_etapa   v_ds_dose_diferenciada,
        qt_volume_total   double precision);


CREATE OR REPLACE PROCEDURE cpoe_gerar_prot_solucao ( cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_protocolo_p bigint, nr_seq_protocolo_p bigint, nr_seq_item_p bigint, nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_prescritor_p text, cd_paciente_p text, cd_medico_atend_p text, cd_setor_atendimento_p bigint, nr_seq_agrupamento_p bigint, cd_convenio_p bigint, ie_tipo_convenio_p bigint, cd_categoria_convenio_p text, cd_plano_convenio_p text, qt_idade_dia_p bigint, qt_idade_mes_p bigint, qt_idade_ano_p bigint, qt_peso_p bigint, qt_casas_retorno_p bigint, ie_origem_inf_p text, nr_seq_item_gerado_p INOUT bigint, nr_seq_pend_pac_acao_p bigint default null, nr_seq_transcricao_p bigint default null, ie_item_alta_p text default 'N', ie_prescritor_aux_p text default 'N', cd_medico_p bigint default null, ie_retrogrado_p text default 'N', dt_inicio_p timestamp default null, nr_seq_pepo_p bigint default null, nr_cirurgia_p bigint default null, nr_cirurgia_patologia_p bigint default null, nr_seq_agenda_p bigint default null, ie_oncologia_p text default 'N', nr_seq_conclusao_apae_p bigint default null, ie_forma_geracao_p text default null, dt_fim_presc_p timestamp default null, dt_inicio_presc_p timestamp default null, ie_futuro_p text default 'N', nr_seq_receita_amb_p bigint default null, nr_seq_cpoe_rp_p cpoe_rp.nr_sequencia%type default null, nr_seq_cpoe_order_unit_p cpoe_order_unit.nr_sequencia%type default null) AS $body$
DECLARE


ds_stack_w            log_cpoe.ds_stack%type;
ds_log_cpoe_w         log_cpoe.ds_log%type;
cd_material_w         material.cd_material%type;
cd_unidade_medida_dose_w    unidade_medida.cd_unidade_medida%type;
cd_intervalo_w        intervalo_prescricao.cd_intervalo%type;
cd_intervalo_agora_w      intervalo_prescricao.cd_intervalo%type;
qt_min_intervalo_w      intervalo_prescricao.qt_min_intervalo%type;
ie_dose_unica_cpoe_w      intervalo_prescricao.ie_dose_unica_cpoe%type;
ie_exibe_w        intervalo_prescricao.cd_intervalo%type;
ie_acm_interv_w       intervalo_prescricao.ie_acm%type;
ie_sn_interv_w        intervalo_prescricao.ie_se_necessario%type;
ie_via_aplicacao_w      via_aplicacao.ie_via_aplicacao%type;
ie_via_aplicacao_ww     via_aplicacao.ie_via_aplicacao%type;
nr_seq_item_prot_w      protocolo_medic_solucao.nr_seq_solucao%type;
ie_bomba_infusao_w      protocolo_medic_solucao.ie_bomba_infusao%type;
ie_solucao_pca_w      protocolo_medic_solucao.ie_solucao_pca%type;
ie_tipo_dosagem_w       protocolo_medic_solucao.ie_tipo_dosagem%type;
nr_etapas_w         protocolo_medic_solucao.nr_etapas%type;
qt_tempo_aplicacao_w      protocolo_medic_solucao.qt_tempo_aplicacao%type;
nr_etapas_prot_w      protocolo_medic_solucao.nr_etapas%type;
ds_solucao_w        protocolo_medic_solucao.ds_solucao%type;
qt_volume_fixo_w      cpoe_material.qt_volume_fixo%type;
ie_calc_aut_w         protocolo_medic_solucao.ie_calc_aut%type;
ie_duracao_w        protocolo_medic_solucao.ie_duracao%type;
qt_dose_peso_w        protocolo_medic_material.qt_dose_peso%type;
ie_diluente_w         protocolo_medic_material.ie_diluente%type;
ie_adm_mat_w        cpoe_material.ie_administracao%type;
ie_ref_calculo_w      cpoe_material.ie_ref_calculo%type;
qt_dose_w         cpoe_material.qt_dose%type;
qt_volume_sol_w       cpoe_material.qt_volume%type;
qt_volume_w         cpoe_material.qt_volume%type;
qt_dosagem_w        cpoe_material.qt_dosagem%type;
qt_total_etapa_w      cpoe_material.qt_solucao%type;
qt_solucao_total_w      cpoe_material.qt_solucao_total%type;
ie_pca_modo_prog_w      cpoe_material.ie_pca_modo_prog%type;
ie_tipo_analgesia_w       cpoe_material.ie_tipo_analgesia%type;
qt_vol_infusao_pca_w      cpoe_material.qt_vol_infusao_pca%type;
ie_um_fluxo_pca_w       cpoe_material.ie_um_fluxo_pca%type;
qt_bolus_pca_w        cpoe_material.qt_bolus_pca%type;
ie_um_bolus_pca_w       cpoe_material.ie_um_bolus_pca%type;
qt_intervalo_bloqueio_w     cpoe_material.qt_intervalo_bloqueio%type;
qt_dose_inicial_pca_w       cpoe_material.qt_dose_inicial_pca%type;
ie_um_dose_inicio_pca_w     cpoe_material.ie_um_dose_inicio_pca%type;
qt_limite_quatro_hora_w     cpoe_material.qt_limite_quatro_hora%type;
ie_um_limite_pca_w      cpoe_material.ie_um_limite_pca%type;
ie_um_limite_hora_pca_w     cpoe_material.ie_um_limite_hora_pca%type;
qt_limite_uma_hora_w      cpoe_material.qt_limite_uma_hora%type;
qt_solucao_w        cpoe_material.qt_solucao%type;
ie_antibiotico_w      cpoe_material.ie_antibiotico%type;
dt_fim_w        cpoe_material.dt_fim%type;
ie_fator_correcao_w       cpoe_material.ie_fator_correcao%type;
qt_dose_correcao_w      cpoe_material.qt_dose_correcao1%type;
ie_evento_unico_w       cpoe_material.ie_evento_unico%type := 'N';
qt_hora_fase_w              cpoe_material.qt_hora_fase%type;
qt_hora_fase_ww             cpoe_material.qt_hora_fase%type;
qt_hora_fase_dec_w              double precision;
ie_esquema_alternado_w      char(1);
ie_mesmo_zerado_w           char(1);
ie_se_necessario_w          char(1);
ie_acm_w                    char(1);
ie_urgencia_w               char(1);
ie_sol_continua_w           char(1);
ie_regra_disp_w             char(2);
hr_prim_horario_w           char(5);
ds_mat_adic_w               char(30);
qt_dose_limite_w            double precision;
qt_conversao_dose_w         double precision;
qt_dispensar_w              double precision;
qt_unitaria_w               double precision;
qt_material_w               double precision;
qt_dose_ml_w                double precision;
nr_ocorrencia_w             double precision;
i                           smallint;
nr_horas_validade_w         integer;
dt_prescricao_w             timestamp;
dt_inicio_prescr_w          timestamp;
dt_primeiro_horario_w       timestamp;
ie_tipo_sol_w               varchar(5);
qt_dosagem_final_w          varchar(50);
ds_horarios_w               varchar(4000);
ds_horarios_aux_w           varchar(4000);
ds_justificativa_w          varchar(4000);
ds_justificativa_comp_w     varchar(4000);
ds_recomendacao_w           varchar(4000);
ds_orientacao_w             varchar(4000);
ds_observacao_w             varchar(4000);
ds_erro_w                   varchar(4000);
nr_seq_retorno_w            bigint;
ds_diluicao_out       cpoe_material.ds_ref_calculo%type;
ie_prescr_alta_agora_w      varchar(1);
ie_use_item_types_w         varchar(1);
cd_material_ret_w       material.cd_material%type;
qt_total_solucao_w        double precision;
hr_prim_horario_ww          protocolo_medic_solucao.hr_prim_horario%type;
nr_seq_material_w     protocolo_medic_material.nr_seq_material%type;
ie_tipo_sol_ww        protocolo_medic_solucao.ie_tipo_sol%type;
ds_dose_diferenciada_w      protocolo_medic_material.ds_dose_diferenciada%type;
ie_div_padrao_w       char(1) := '-';
gotas_w         double precision;
tempo_w         double precision;
qt_dosagem_diferenciada_w   cpoe_material.qt_dosagem_diferenciada%type;
ds_volume_diferenciado_w    cpoe_material.ds_volume_diferenciado%type;
qt_hora_fase_diferenciada_w   cpoe_material.qt_hora_fase_diferenciada%type;
cont_w          smallint;
ie_glicose_w      material.ie_glicose%type;
ie_subtrair_volume_medic_w    protocolo_medic_material.ie_subtrair_volume_medic%type;
ie_incrementar_w      protocolo_medic_solucao.ie_incrementar%type;
ie_increment_w        cpoe_material.ie_incrementar%type;
qt_dos_inc_w        cpoe_material.qt_dosagem_inc%type;
qt_dosagem_inc_w      protocolo_medic_solucao.qt_dosagem_inc%type;
ie_tipo_dos_inc_w     cpoe_material.ie_tipo_dosagem_inc%type;
ie_tipo_dosagem_inc_w     protocolo_medic_solucao.ie_tipo_dosagem_inc%type;
qt_dosagem_min_w      protocolo_medic_solucao.qt_dosagem_min%type;
qt_dosagem_max_w      protocolo_medic_solucao.qt_dosagem_max%type;
ie_drug_info_w        cpoe_order_unit.ie_drug_info%type := null;
cd_setor_execucao_w		cpoe_order_unit.cd_setor_execucao%type := null;

ie_via_aplicacao_rp_w             cpoe_rp.ie_via_aplicacao%type := null;
nr_seq_grupo_interval_rp_w        cpoe_rp.nr_seq_grupo_interval%type := null;
nr_seq_subgrupo_interval_rp_w     cpoe_rp.nr_seq_subgrupo_interval%type := null;
cd_intervalo_rp_w                 cpoe_rp.cd_intervalo%type := null;
dt_inicio_rp_w                    cpoe_rp.dt_inicio%type := null;
dt_fim_rp_w                       cpoe_rp.dt_fim%type := null;
ds_horarios_rp_w                  cpoe_rp.ds_horarios%type := null;
ie_segunda_rp_w                   cpoe_rp.ie_segunda%type := null;
ie_terca_rp_w                     cpoe_rp.ie_terca%type := null;
ie_quarta_rp_w                    cpoe_rp.ie_quarta%type := null;
ie_quinta_rp_w                    cpoe_rp.ie_quinta%type := null;
ie_sexta_rp_w                     cpoe_rp.ie_sexta%type := null;
ie_sabado_rp_w                    cpoe_rp.ie_sabado%type := null;
ie_domingo_rp_w                   cpoe_rp.ie_domingo%type := null;
ie_duracao_rp_w                   protocolo_medic_material.ie_duracao%type := null;

ie_urgencia_rp_w                  cpoe_rp.ie_urgencia%type := null;
ie_administracao_rp_w             cpoe_rp.ie_administracao%type := null;
qt_solucao_total_rp_w             cpoe_rp.qt_solucao_total%type := null;
qt_volume_rp_w                    cpoe_rp.qt_volume%type := null;
ie_tipo_analgesia_rp_w            cpoe_rp.ie_tipo_analgesia%type := null;
ie_pca_modo_prog_rp_w             cpoe_rp.ie_pca_modo_prog%type := null;
qt_dose_inicial_pca_rp_w          cpoe_rp.qt_dose_inicial_pca%type := null;
ie_um_dose_inicio_pca_rp_w        cpoe_rp.ie_um_dose_inicio_pca%type := null;
ie_um_fluxo_pca_rp_w              cpoe_rp.ie_um_fluxo_pca%type := null;
qt_vol_infusao_pca_rp_w           cpoe_rp.qt_vol_infusao_pca%type := null;
qt_bolus_pca_rp_w                 cpoe_rp.qt_bolus_pca%type := null;
ie_um_bolus_pca_rp_w              cpoe_rp.ie_um_bolus_pca%type := null;
qt_intervalo_bloqueio_rp_w        cpoe_rp.qt_intervalo_bloqueio%type := null;
qt_limite_quatro_hora_rp_w        cpoe_rp.qt_limite_quatro_hora%type := null;
ie_um_limite_pca_rp_w             cpoe_rp.ie_um_limite_pca%type := null;
qt_limite_uma_hora_rp_w           cpoe_rp.qt_limite_uma_hora%type := null;
ie_um_limite_hora_pca_rp_w        cpoe_rp.ie_um_limite_hora_pca%type := null;
si_rapid_infusion_rp_w            cpoe_rp.si_rapid_infusion%type := null;
qt_final_concentration_rp_w       cpoe_rp.qt_final_concentration%type := null;
ie_incrementar_rp_w               cpoe_rp.ie_incrementar%type := null;
ie_tipo_dosagem_inc_rp_w          cpoe_rp.ie_tipo_dosagem_inc%type := null;
ie_um_final_conc_pca_rp_w         cpoe_rp.ie_um_final_conc_pca%type := null;
qt_dosagem_inc_rp_w               cpoe_rp.qt_dosagem_inc%type := null;
ie_fator_correcao_rp_w            cpoe_rp.ie_fator_correcao%type := null;
qt_dose_terapeutica_rp_w          cpoe_rp.qt_dose_terapeutica%type := null;

type v_ds_dose_diferenciada is table of v_base_ds_dose_dif index by integer;

type solucao is table of v_base_solucao index by integer;
inf_solucao solucao;

-- Protocolo: Solucoes
c01 CURSOR FOR
  SELECT  a.nr_seq_solucao,
    coalesce(a.ie_tipo_dosagem, 'mlh'),
    coalesce(a.ie_via_aplicacao, ie_via_aplicacao_ww),
    a.qt_dosagem,
    a.qt_solucao_total,
    a.qt_tempo_aplicacao,
    coalesce(a.qt_volume, 0),
    a.ds_solucao,
    a.qt_hora_fase,
    coalesce(a.ie_bomba_infusao, 'N'),
    a.ie_calc_aut,
    coalesce(a.ie_acm, 'N'),
    coalesce(a.ie_urgencia, 'N'),
    coalesce(a.ie_se_necessario, 'N'),
    a.ds_orientacao,
    a.hr_prim_horario,
    CASE WHEN a.ie_tipo_sol='1' THEN  'I' WHEN a.ie_tipo_sol='3' THEN  'C' WHEN a.ie_tipo_sol='4' THEN  'V' WHEN a.ie_tipo_sol='5' THEN  'P'  ELSE 'C' END ,
    coalesce(a.ie_solucao_pca, 'N'),
    a.ie_tipo_analgesia,
    a.ie_pca_modo_prog,
    a.qt_dose_inicial_pca,
    a.qt_vol_infusao_pca,
    a.qt_bolus_pca,
    a.qt_intervalo_bloqueio,
    a.qt_limite_quatro_hora,
    a.qt_limite_uma_hora,
    a.ie_um_bolus_pca,
    a.ie_um_dose_inicio_pca,
    a.ie_um_fluxo_pca,
    a.ie_um_limite_hora_pca,
    a.ie_um_limite_pca,
    a.cd_intervalo,
    a.nr_etapas,
    a.ie_esquema_alternado,
    coalesce(a.ie_duracao, 'C'),
    a.ie_tipo_sol,
    a.ie_ref_calculo,
    coalesce(a.ie_incrementar,'N'),
    a.ie_tipo_dosagem_inc,
    a.qt_dosagem_inc,
    a.qt_dosagem_min,
    a.qt_dosagem_max
  from  protocolo_medic_solucao a
  where   a.cd_protocolo = cd_protocolo_p
  and   a.nr_sequencia   = nr_seq_protocolo_p
  and   a.nr_seq_solucao = coalesce(nr_seq_item_p, a.nr_seq_solucao);

c02 CURSOR FOR
  SELECT  a.cd_material,
    a.cd_unidade_medida,
    a.qt_dose,
    a.qt_dose_peso,
    substr(a.ds_recomendacao, 1, 2000),
    a.qt_solucao,
    a.ds_justificativa,
    a.ie_diluente,
    nr_seq_material,
    CASE WHEN ie_tipo_sol_ww='2' THEN  a.ds_dose_diferenciada  ELSE null END ,
    coalesce(a.ie_subtrair_volume_medic, 'N')
  from protocolo_medic_material a
  where a.cd_protocolo = cd_protocolo_p
  and a.nr_sequencia   = nr_seq_protocolo_p
  and a.nr_seq_solucao = nr_seq_item_prot_w
  and exists (SELECT 1
        from material z
        where z.cd_material = a.cd_material
        and coalesce(z.ie_situacao, 'A')   = 'A'
        and coalesce(z.ie_prescricao, 'S') = 'S')
  and exists (select 1
        from material_estab x
        where x.cd_material = a.cd_material
        and x.cd_estabelecimento = cd_estabelecimento_p
        and coalesce(x.ie_prescricao, 'S') = 'S')
  and a.ie_agrupador = 4
  and (ds_mat_adic_w IS NOT NULL AND ds_mat_adic_w::text <> '')
  and cpoe_regra_se_permite_presc(a.cd_material, nr_atendimento_p, nm_usuario_p) = 'S'
  order by coalesce(a.ie_diluente, 'N'),
         a.nr_seq_apresentacao,
         a.nr_seq_solucao,
         CASE WHEN ds_mat_adic_w='1,2,3,4,5,6,7' THEN  CASE WHEN coalesce(obter_materiais_mat_diluicao(a.cd_material, 'C')::text, '') = '' THEN  1  ELSE 0 END  END ,
         a.nr_sequencia;

procedure gerar_componente_adic_solucao is

nr_proximo_w bigint;


BEGIN
  nr_proximo_w  := position(',' in ds_mat_adic_w);
  i             := substr(ds_mat_adic_w, 1, nr_proximo_w - 1);
  ds_mat_adic_w := substr(ds_mat_adic_w, nr_proximo_w + 1, length(ds_mat_adic_w));
  qt_dose_correcao_w := cpoe_obter_volume_corrigido(ie_bomba_infusao_w, coalesce(ie_fator_correcao_w, 'N'), qt_volume_sol_w, cd_material_w, qt_dose_w, cd_unidade_medida_dose_w);

  if (coalesce(ie_diluente_w, 'N') = 'N') then
    CALL exec_sql_dinamico_bv('CPOE', ' update  cpoe_material ' ||
               ' set   cd_mat_comp' || i || ' = :cd_mat_comp_w, ' ||
               '       qt_dose_comp' || i || ' = :qt_dose_comp_w, ' ||
               '       qt_dose_correcao' || to_char(i + 1) || ' = :qt_dose_correcao_w, ' ||
               '       cd_unid_med_dose_comp' || i || ' = :cd_unid_med_dose_comp_w, ' ||
               '       ds_justificativa = :ds_justificativa_w, ' ||
               '       ds_dose_diferenciada_comp' || i || ' = :ds_dose_diferenciada_w ' ||
               ' where    nr_sequencia = :nr_seq_item_gerado_p ',
               'cd_mat_comp_w=' || cd_material_w ||
               '#@#@qt_dose_comp_w=' || qt_dose_w ||
               '#@#@qt_dose_correcao_w=' || qt_dose_correcao_w ||
               '#@#@cd_unid_med_dose_comp_w=' || cd_unidade_medida_dose_w ||
               '#@#@ds_justificativa_w=' || ds_justificativa_w ||
               '#@#@ds_dose_diferenciada_w=' || ds_dose_diferenciada_w ||
               '#@#@nr_seq_item_gerado_p=' || nr_seq_item_gerado_p || '#@#@');
  else
    CALL exec_sql_dinamico_bv('CPOE', ' update  cpoe_material ' ||
               ' set   cd_mat_dil = :cd_mat_dil_w, ' ||
               '       qt_dose_dil = :qt_dose_dil_w, ' ||
               '       cd_unid_med_dose_dil = :cd_unid_med_dose_dil_w, ' ||
               '       ds_justificativa = :ds_justificativa_w, ' ||
               '       ds_dose_diferenciada_dil = :ds_dose_diferenciada_dil_w, ' ||
             '       qt_volume_fixo = :qt_volume_fixo_w ' ||
               ' where    nr_sequencia = :nr_seq_item_gerado_p ',
               'cd_mat_dil_w=' || cd_material_w ||
               '#@#@qt_dose_dil_w=' || qt_dose_w ||
               '#@#@cd_unid_med_dose_dil_w=' || cd_unidade_medida_dose_w ||
               '#@#@ds_justificativa_w=' || ds_justificativa_w ||
               '#@#@ds_dose_diferenciada_dil_w=' || ds_dose_diferenciada_w ||
            '#@#@qt_volume_fixo_w=' || qt_volume_fixo_w ||
               '#@#@nr_seq_item_gerado_p=' || nr_seq_item_gerado_p || '#@#@');
  end if;

  commit;
end;

procedure gerar_componente_base_solucao is
begin

  cd_material_ret_w := obter_subst_generic_medic(cd_protocolo_p, null, null, nr_seq_item_prot_w, nr_atendimento_p);

  qt_hora_fase_ww := converter_decimal_para_hora(qt_hora_fase_dec_w);

  if (coalesce(cd_material_ret_w, 0) > 0) then
    cd_material_w              := cd_material_ret_w;
  end if;

  ie_adm_mat_w     := 'P';

  if (ie_urgencia_w = 'S') then

    ie_urgencia_w  := 0;
  else

    ie_urgencia_w         := null;

    if (ie_se_necessario_w = 'S') then
      ie_adm_mat_w        := 'N';
    elsif (ie_acm_w        = 'S') then
      ie_adm_mat_w        := 'C';
    end if;
  end if;

  if (ie_retrogrado_p = 'S' or ie_futuro_p = 'S') then
    -- retrograde/backward/futuro item
    dt_primeiro_horario_w := dt_inicio_p;
    dt_fim_w              := (dt_primeiro_horario_w + 1) - 1 / 1440;
    ie_duracao_w    := 'P';
    ie_urgencia_w    := null;

    SELECT * FROM cpoe_calcula_horarios_etapas(nm_usuario_p, dt_primeiro_horario_w, ie_sol_continua_w, nr_etapas_w, cd_intervalo_w, qt_tempo_aplicacao_w, 0, 0, 'N') INTO STRICT nr_etapas_w, ds_horarios_w;

      -- Clear out the text inside the line and adds the sufix of ":00" as needed, fitting it
    ds_horarios_w       := REPLACE(Padroniza_horario_prescr(ds_horarios_w, NULL), 'A', '');
    hr_prim_horario_w   := obter_prim_dshorarios(ds_horarios_w);
  end if;

  select nextval('cpoe_material_seq')
  into STRICT nr_seq_item_gerado_p
;

  ie_antibiotico_w   := coalesce(obter_se_mat_antibiotico(cd_material_w), 'N');
  nr_seq_retorno_w   := nr_seq_item_gerado_p;
  qt_dose_correcao_w := cpoe_obter_volume_corrigido(ie_bomba_infusao_w, coalesce(ie_fator_correcao_w, 'N'), qt_volume_sol_w, cd_material_w, qt_dose_w, cd_unidade_medida_dose_w);

  if ((ie_tipo_sol_w in ('C', 'I') and ie_ref_calculo_w <> 'I') or (ie_tipo_sol_w not in ('C', 'I'))) then

    cd_intervalo_w    := null;
    ie_evento_unico_w := null;

    if (ie_tipo_sol_w not in ('C', 'I')) then
      ie_ref_calculo_w := null;
    end if;
  end if;

  select  coalesce(max(ie_glicose), 'N')
  into STRICT  ie_glicose_w
  from  material
  where cd_material = cd_material_w;

  if (ie_glicose_w = 'S') then
    qt_dose_w := null;
  end if;

  ie_use_item_types_w := obter_param_usuario(2314, 46, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_use_item_types_w);
  if (coalesce(ie_use_item_types_w, 'N') = 'S') then

		select  ie_drug_info,
            cd_setor_execucao
		into STRICT    ie_drug_info_w,
            cd_setor_execucao_w
		from    cpoe_order_unit
		where   nr_sequencia = nr_seq_cpoe_order_unit_p;

    select
       ie_via_aplicacao
      ,nr_seq_grupo_interval
      ,nr_seq_subgrupo_interval
      ,cd_intervalo
      ,dt_inicio
      ,dt_fim
      ,ds_horarios
      ,ie_segunda
      ,ie_terca
      ,ie_quarta
      ,ie_quinta
      ,ie_sexta
      ,ie_sabado
      ,ie_domingo
      ,ie_urgencia
      ,ie_administracao
      ,qt_solucao_total
      ,qt_volume
      ,ie_tipo_analgesia
      ,ie_pca_modo_prog
      ,qt_dose_inicial_pca
      ,ie_um_dose_inicio_pca
      ,ie_um_fluxo_pca
      ,qt_vol_infusao_pca
      ,qt_bolus_pca
      ,ie_um_bolus_pca
      ,qt_intervalo_bloqueio
      ,qt_limite_quatro_hora
      ,ie_um_limite_pca
      ,qt_limite_uma_hora
      ,ie_um_limite_hora_pca
      ,si_rapid_infusion
      ,qt_final_concentration
      ,ie_incrementar
      ,ie_tipo_dosagem_inc
      ,ie_um_final_conc_pca
      ,qt_dosagem_inc
      ,ie_fator_correcao
      ,qt_dose_terapeutica
    into STRICT
       ie_via_aplicacao_rp_w
      ,nr_seq_grupo_interval_rp_w
      ,nr_seq_subgrupo_interval_rp_w
      ,cd_intervalo_rp_w
      ,dt_inicio_rp_w
      ,dt_fim_rp_w
      ,ds_horarios_rp_w
      ,ie_segunda_rp_w
      ,ie_terca_rp_w
      ,ie_quarta_rp_w
      ,ie_quinta_rp_w
      ,ie_sexta_rp_w
      ,ie_sabado_rp_w
      ,ie_domingo_rp_w
      ,ie_urgencia_rp_w
      ,ie_administracao_rp_w
      ,qt_solucao_total_rp_w
      ,qt_volume_rp_w
      ,ie_tipo_analgesia_rp_w
      ,ie_pca_modo_prog_rp_w
      ,qt_dose_inicial_pca_rp_w
      ,ie_um_dose_inicio_pca_rp_w
      ,ie_um_fluxo_pca_rp_w
      ,qt_vol_infusao_pca_rp_w
      ,qt_bolus_pca_rp_w
      ,ie_um_bolus_pca_rp_w
      ,qt_intervalo_bloqueio_rp_w
      ,qt_limite_quatro_hora_rp_w
      ,ie_um_limite_pca_rp_w
      ,qt_limite_uma_hora_rp_w
      ,ie_um_limite_hora_pca_rp_w
      ,si_rapid_infusion_rp_w
      ,qt_final_concentration_rp_w
      ,ie_incrementar_rp_w
      ,ie_tipo_dosagem_inc_rp_w
      ,ie_um_final_conc_pca_rp_w
      ,qt_dosagem_inc_rp_w
      ,ie_fator_correcao_rp_w
      ,qt_dose_terapeutica_rp_w
    from cpoe_rp
    where  nr_sequencia = nr_seq_cpoe_rp_p;

	ie_duracao_rp_w := 'P';

  end if;

  insert into cpoe_material( nr_sequencia,
    nr_atendimento,
    cd_pessoa_fisica,
    dt_atualizacao,
    dt_atualizacao_nrec,
    nm_usuario,
    nm_usuario_nrec,
    cd_material,
    qt_dose,
    cd_unidade_medida,
    ie_via_aplicacao,
    cd_intervalo,
    nr_etapas,
    qt_solucao_total,
    dt_inicio,
    hr_prim_horario,
    ie_solucao,
    ie_controle_tempo,
    ie_tipo_solucao,
    ie_administracao,
    ie_urgencia,
    ds_observacao,
    ds_justificativa,
    qt_tempo_aplicacao,
    qt_hora_fase,
    qt_volume,
    --qt_solucao, OS 984495 - Campo somenta para medicamento
    ie_tipo_analgesia,
    ie_pca_modo_prog,
    qt_dose_inicial_pca,
    qt_vol_infusao_pca,
    qt_bolus_pca,
    qt_intervalo_bloqueio,
    qt_limite_quatro_hora,
    qt_limite_uma_hora,
    ie_um_bolus_pca,
    ie_um_dose_inicio_pca,
    ie_um_fluxo_pca,
    ie_um_limite_hora_pca,
    ie_um_limite_pca,
    ie_ref_calculo,
    ie_duracao,
    ie_tipo_registro,
    ds_solucao,
    ds_horarios,
    ie_acm,
    ie_se_necessario,
    nr_ocorrencia,
    cd_perfil_ativo,
    cd_funcao_origem,
    cd_protocolo,
    nr_seq_protocolo,
    ie_bomba_infusao,
    ie_tipo_dosagem,
    nr_seq_mat_protocolo,
    ie_antibiotico,
    nr_seq_pend_pac_acao,
    dt_fim,
    nr_seq_transcricao,
    ie_fator_correcao,
    qt_dose_correcao1,
    ie_item_alta,
    ie_prescritor_aux,
    cd_medico,
    ie_retrogrado,
    ie_futuro,
    nr_seq_pepo,
    nr_cirurgia,
    nr_cirurgia_patologia,
    nr_seq_agenda,
    ie_oncologia,
    nr_seq_conclusao_apae,
    ie_forma_geracao,
    ie_evento_unico,
    qt_dosagem,
    nr_seq_receita_amb,
    ds_dose_diferenciada,
    nr_seq_cpoe_rp,
    nr_seq_cpoe_order_unit,
    ie_incrementar,
    qt_dosagem_inc,
    ie_tipo_dosagem_inc,
    qt_dosagem_min,
    qt_dosagem_max,
    ie_drug_info,
    cd_setor_atendimento
    ,nr_seq_grupo_interval
    ,nr_seq_subgrupo_interval
    ,ie_segunda
    ,ie_terca
    ,ie_quarta
    ,ie_quinta
    ,ie_sexta
    ,ie_sabado
    ,ie_domingo
    ,si_rapid_infusion
    ,qt_final_concentration
    ,ie_um_final_conc_pca
    ,qt_dose_terapeutica
    )
  values ( nr_seq_item_gerado_p,
    nr_atendimento_p,
    cd_paciente_p,
    clock_timestamp(),
    clock_timestamp(),
    nm_usuario_p,
    nm_usuario_p,
    cd_material_w,
    qt_dose_w,
    cd_unidade_medida_dose_w,
    coalesce(ie_via_aplicacao_rp_w,ie_via_aplicacao_w),
    coalesce(cd_intervalo_rp_w,cd_intervalo_w),
    nr_etapas_w,
    coalesce(qt_solucao_total_rp_w,qt_solucao_total_w),
    coalesce(dt_inicio_rp_w,dt_primeiro_horario_w),
    hr_prim_horario_w,
    'S',
    'S',
    ie_tipo_sol_w,
    coalesce(ie_administracao_rp_w,ie_adm_mat_w),
    coalesce(ie_urgencia_rp_w,ie_urgencia_w),
    ds_observacao_w,
    ds_justificativa_comp_w,
    qt_tempo_aplicacao_w,
    qt_hora_fase_ww,
    coalesce(qt_volume_rp_w,qt_volume_sol_w),
    --qt_solucao_w,
    coalesce(ie_tipo_analgesia_rp_w,ie_tipo_analgesia_w),
    coalesce(ie_pca_modo_prog_rp_w,ie_pca_modo_prog_w),
    coalesce(qt_dose_inicial_pca_rp_w,qt_dose_inicial_pca_w),
    coalesce(qt_vol_infusao_pca_rp_w,qt_vol_infusao_pca_w),
    coalesce(qt_bolus_pca_rp_w,qt_bolus_pca_w),
    coalesce(qt_intervalo_bloqueio_rp_w,qt_intervalo_bloqueio_w),
    coalesce(qt_limite_quatro_hora_rp_w,qt_limite_quatro_hora_w),
    coalesce(qt_limite_uma_hora_rp_w,qt_limite_uma_hora_w),
    coalesce(ie_um_bolus_pca_rp_w,ie_um_bolus_pca_w),
    coalesce(ie_um_dose_inicio_pca_rp_w,ie_um_dose_inicio_pca_w),
    coalesce(ie_um_fluxo_pca_rp_w,ie_um_fluxo_pca_w),
    coalesce(ie_um_limite_hora_pca_rp_w,ie_um_limite_hora_pca_w),
    coalesce(ie_um_limite_pca_rp_w,ie_um_limite_pca_w),
    ie_ref_calculo_w,
    coalesce(ie_duracao_rp_w,ie_duracao_w),
    '2',
    ds_solucao_w,
    coalesce(ds_horarios_rp_w,ds_horarios_w),
    ie_acm_w,
    ie_se_necessario_w,
    nr_ocorrencia_w,
    cd_perfil_p,
    2314,
    cd_protocolo_p,
    nr_seq_protocolo_p,
    ie_bomba_infusao_w,
    ie_tipo_dosagem_w,
    nr_seq_material_w,
    ie_antibiotico_w,
    nr_seq_pend_pac_acao_p,
    coalesce(dt_fim_rp_w,dt_fim_w),
    nr_seq_transcricao_p,
    coalesce(ie_fator_correcao_rp_w,ie_fator_correcao_w),
    qt_dose_correcao_w,
    ie_item_alta_p,
    ie_prescritor_aux_p,
    cd_medico_p,
    ie_retrogrado_p,
    ie_futuro_p,
    nr_seq_pepo_p,
    nr_cirurgia_p,
    nr_cirurgia_patologia_p,
    nr_seq_agenda_p,
    ie_oncologia_p,
    nr_seq_conclusao_apae_p,
    ie_forma_geracao_p,
    ie_evento_unico_w,
    qt_dosagem_w,
    nr_seq_receita_amb_p,
    ds_dose_diferenciada_w,
    nr_seq_cpoe_rp_p,
    nr_seq_cpoe_order_unit_p,
    coalesce(ie_incrementar_rp_w,ie_incrementar_w),
    coalesce(qt_dosagem_inc_rp_w,qt_dosagem_inc_w),
    coalesce(ie_tipo_dosagem_inc_rp_w,ie_tipo_dosagem_inc_w),
    qt_dosagem_min_w,
    qt_dosagem_max_w,
    ie_drug_info_w,
    coalesce(cd_setor_execucao_w,cd_setor_atendimento_p)
    ,nr_seq_grupo_interval_rp_w
    ,nr_seq_subgrupo_interval_rp_w
    ,ie_segunda_rp_w
    ,ie_terca_rp_w
    ,ie_quarta_rp_w
    ,ie_quinta_rp_w
    ,ie_sexta_rp_w
    ,ie_sabado_rp_w
    ,ie_domingo_rp_w
    ,si_rapid_infusion_rp_w
    ,qt_final_concentration_rp_w
    ,ie_um_final_conc_pca_rp_w
    ,qt_dose_terapeutica_rp_w
    );

  CALL cpoe_consis_med_insert(nr_seq_item_gerado_p,nm_usuario_p);

  commit;
end;

procedure cpoe_calcular_volume_total_sol(  ie_tipo_dosagem_p    varchar2,
            qt_tempo_aplicacao_p number,
            qt_solucao_total_p   number,
            qt_dosagem_p         number,
            campo_p              number,
            vl_retorno_p out number,
            ie_arredonda_p          varchar2,
            nr_etapas_p             number default 1,
            ie_vel_conforme_etapa_p varchar2 default 'N',
            qt_hora_fase_p          number ) is
qt_gotas_aux_w     number(18, 6);
qt_tempo_aux_w     number(18, 6);
qt_resultado_aux_w number(18, 6);
nr_etapas_aux_w    number(18, 6);
qt_solucao_aux_w   number(18, 6);

begin

  if (ie_tipo_dosagem_p    = 'GTM') then
    qt_gotas_aux_w        := 20;
    qt_tempo_aux_w        := 60;
  elsif (ie_tipo_dosagem_p = 'MLH') then
    qt_gotas_aux_w        := 1;
    qt_tempo_aux_w        := 1;
  else
    qt_gotas_aux_w := 60;
    qt_tempo_aux_w := 60;
  end if;

  qt_resultado_aux_w := 0;

  case campo_p
  when 1 then

    if (ie_vel_conforme_etapa_p = 'N') then
      qt_resultado_aux_w       := dividir(dividir((round(qt_solucao_total_p) * qt_gotas_aux_w), qt_tempo_aplicacao_p), qt_tempo_aux_w);
    else
      nr_etapas_aux_w   := nr_etapas_p;

      if (nr_etapas_p    = 0) then
        nr_etapas_aux_w := 1;
      end if;

      qt_solucao_aux_w   := qt_solucao_total_p                       / nr_etapas_aux_w;
      qt_resultado_aux_w := dividir(dividir((round(qt_solucao_aux_w) * qt_gotas_aux_w), qt_hora_fase_p), qt_tempo_aux_w);
    end if;
  when 2 then
    qt_resultado_aux_w := round(dividir((qt_dosagem_p * qt_tempo_aux_w * qt_tempo_aplicacao_p), qt_gotas_aux_w));
    qt_resultado_aux_w := (round(qt_resultado_aux_w   / 100) * 100);
  when 3 then
    qt_resultado_aux_w := round(dividir(dividir((qt_solucao_total_p * qt_gotas_aux_w), qt_dosagem_p), qt_tempo_aux_w));
  end case;

  if (qt_resultado_aux_w = 0) then
    qt_resultado_aux_w  := null;
  elsif (ie_arredonda_p  = 'S') and (ie_tipo_dosagem_p = 'GTM') and (coalesce(ie_bomba_infusao_w, 'N') = 'N') then
    qt_resultado_aux_w  := round(qt_resultado_aux_w);
  end if;

  vl_retorno_p := qt_resultado_aux_w;
end;

-- Procedure que soma as doses em cada etapa, e define o volume total da solucao
procedure Totalizar_valores_dif(cd_material_p   material.cd_material%type,
        ds_dose_dif_p   in out cpoe_material.ds_dose_diferenciada%type,
        cd_unidade_medida_p unidade_medida.cd_unidade_medida%type ) is
posicao   Integer := 0;
qt_valor_w  number(18,6);
qt_valor_ant_w  number(18,6);

begin
  if (ds_dose_dif_p IS NOT NULL AND ds_dose_dif_p::text <> '') then

    if (substr(ds_dose_dif_p, length(ds_dose_dif_p)-1) <> ie_div_padrao_w) then
      ds_dose_dif_p := ds_dose_dif_p || ie_div_padrao_w;
    end if;

    posicao := position(ie_div_padrao_w in ds_dose_dif_p);
    qt_valor_w := coalesce((substr(ds_dose_dif_p, 1, posicao - 1))::numeric ,0);
    qt_valor_w := coalesce(obter_conversao_ml(cd_material_p, qt_valor_w, cd_unidade_medida_p),0);

    qt_valor_ant_w := inf_solucao[1].qt_volume_etapa(cont_w).valor;

    inf_solucao[1].qt_volume_etapa(cont_w).valor  := qt_valor_ant_w + qt_valor_w;
    inf_solucao[1].qt_volume_total := inf_solucao[1].qt_volume_total + qt_valor_w;

    ds_dose_dif_p := substr(ds_dose_dif_p, posicao + 1);
  end if;

  ds_dose_dif_p := trim(both ds_dose_dif_p);
end;

-- Procedure que gera os valores, conforme o intervalo
procedure gerar_valores_intervalo is

ie_operacao_w intervalo_prescricao.ie_operacao%type;
qt_operacao_w intervalo_prescricao.qt_operacao%type;
ie_continuo_w intervalo_prescricao.ie_continuo%type;

begin
  -- Consultar informacoes do cadastro
  select  max(a.ie_operacao),
    max(a.qt_operacao),
    coalesce(max(a.ie_continuo),'N')
  into STRICT  ie_operacao_w,
    qt_operacao_w,
    ie_continuo_w
  from  intervalo_prescricao a
  where a.cd_intervalo = cd_intervalo_w;

  -- Calcula tempo da etapa, baseado no intervalo e no tempo total da fase ( Calcular_etapas_interv_solucao )
  if (ie_operacao_w in ('X', 'F','V')) then

    qt_hora_fase_w  := dividir(24,qt_operacao_w);
  elsif (ie_continuo_w = 'S') and (ie_operacao_w = 'H') and (qt_solucao_total_w IS NOT NULL AND qt_solucao_total_w::text <> '') and (qt_solucao_total_w > 0) and (qt_dosagem_w IS NOT NULL AND qt_dosagem_w::text <> '') and (qt_dosagem_w > 0) then

    qt_hora_fase_w  := dividir( qt_solucao_total_w, qt_dosagem_w );
  elsif (ie_operacao_w = 'H') then

    qt_hora_fase_w  := qt_operacao_w;
  else
    qt_hora_fase_w  := dividir( qt_dosagem_w, qt_operacao_w );
  end if;

  if (qt_hora_fase_w > qt_tempo_aplicacao_w ) then
    qt_hora_fase_w  := qt_tempo_aplicacao_w;
  end if;

  -- Calcula as Etapas
  nr_etapas_w := dividir( qt_tempo_aplicacao_w, qt_hora_fase_w );
end;

begin

  ie_prescr_alta_agora_w := obter_param_usuario(924, 409, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_prescr_alta_agora_w);
  ie_fator_correcao_w := obter_param_usuario(924, 1082, cd_perfil_p, nm_usuario_p, cd_estabelecimento_p, ie_fator_correcao_w);

  if (dt_inicio_presc_p IS NOT NULL AND dt_inicio_presc_p::text <> '') then
    dt_prescricao_w := dt_inicio_presc_p;
  else
    dt_prescricao_w := trunc(clock_timestamp(), 'hh24') + 1 / 24;
  end if;

  dt_primeiro_horario_w := dt_prescricao_w;
  dt_inicio_prescr_w    := dt_primeiro_horario_w;
  nr_horas_validade_w   := 24;

  select coalesce(max(ie_via_aplicacao),null)
  into STRICT   ie_via_aplicacao_ww
  from   via_aplicacao
  where  ie_via_aplicacao = 'IV'
  and    coalesce(ie_situacao, 'A')= 'A';

  open c01;
  loop
  fetch c01
  into nr_seq_item_prot_w,
    ie_tipo_dosagem_w,
    ie_via_aplicacao_w,
    qt_dosagem_w,
    qt_solucao_total_w,
    qt_tempo_aplicacao_w,
    qt_volume_w,
    ds_solucao_w,
    qt_hora_fase_dec_w,
    ie_bomba_infusao_w,
    ie_calc_aut_w,
    ie_acm_w,
    ie_urgencia_w,
    ie_se_necessario_w,
    ds_orientacao_w,
    hr_prim_horario_w,
    ie_tipo_sol_w,
    ie_solucao_pca_w,
    ie_tipo_analgesia_w,
    ie_pca_modo_prog_w,
    qt_dose_inicial_pca_w,
    qt_vol_infusao_pca_w,
    qt_bolus_pca_w,
    qt_intervalo_bloqueio_w,
    qt_limite_quatro_hora_w,
    qt_limite_uma_hora_w,
    ie_um_bolus_pca_w,
    ie_um_dose_inicio_pca_w,
    ie_um_fluxo_pca_w,
    ie_um_limite_hora_pca_w,
    ie_um_limite_pca_w,
    cd_intervalo_w,
    nr_etapas_prot_w,
    ie_esquema_alternado_w,
    ie_duracao_w,
    ie_tipo_sol_ww,
    ie_ref_calculo_w,
    ie_incrementar_w,
    ie_tipo_dosagem_inc_w,
    qt_dosagem_inc_w,
    qt_dosagem_min_w,
    qt_dosagem_max_w;
  EXIT WHEN NOT FOUND; /* apply on c01 */
  begin
    dt_fim_w          := null;
    nr_etapas_w           := null;
    dt_primeiro_horario_w := dt_inicio_prescr_w;
    ie_sol_continua_w     := 'N';
    hr_prim_horario_ww    := hr_prim_horario_w;

    if (ie_solucao_pca_w   = 'S') then
      ie_tipo_sol_w       := 'P';
    end if;

    if (ie_tipo_sol_w = 'P') then

      if (coalesce(ie_pca_modo_prog_w::text, '') = '') then
        qt_vol_infusao_pca_w   := null;
        ie_um_fluxo_pca_w      := null;
        qt_bolus_pca_w         := null;
        ie_um_bolus_pca_w      := null;
      elsif (ie_pca_modo_prog_w = 'B') then
        qt_vol_infusao_pca_w   := null;
        ie_um_fluxo_pca_w      := null;
      elsif (ie_pca_modo_prog_w = 'C') then
        qt_bolus_pca_w    := null;
        ie_um_bolus_pca_w := null;
      end if;
    else

      if (ie_tipo_sol_w = 'C') then
        ie_sol_continua_w := 'S';
      end if;

      ie_tipo_analgesia_w     := null;
      ie_pca_modo_prog_w      := null;
      qt_vol_infusao_pca_w    := null;
      ie_um_fluxo_pca_w       := null;
      qt_bolus_pca_w          := null;
      ie_um_bolus_pca_w       := null;
      qt_intervalo_bloqueio_w := null;
      qt_dose_inicial_pca_w   := null;
      ie_um_dose_inicio_pca_w := null;
      qt_limite_quatro_hora_w := null;
      ie_um_limite_pca_w      := null;
      qt_limite_uma_hora_w    := null;
      ie_um_limite_hora_pca_w := null;
    end if;

    if ((coalesce(dt_inicio_presc_p::text, '') = '') and (coalesce(obter_se_marca_agora(cpoe_obter_setor_atend_prescr(nr_atendimento_p, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p)), 'N') = 'S')) then

      cd_intervalo_agora_w := cpoe_busca_intervalo_agora(nr_atendimento_p, '4', cd_estabelecimento_p, cd_perfil_p, nm_usuario_p);

      if (cd_intervalo_agora_w IS NOT NULL AND cd_intervalo_agora_w::text <> '') then
        cd_intervalo_w := cd_intervalo_agora_w;
        ie_urgencia_w := 'S';
      end if;
    end if;

    if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

      select max(ie_dose_unica_cpoe)
      into STRICT ie_dose_unica_cpoe_w
      from intervalo_prescricao
      where cd_intervalo = cd_intervalo_w;

      if (coalesce(ie_dose_unica_cpoe_w, 'N') = 'S') then
        ie_duracao_w       := 'P';
        ie_evento_unico_w  := 'S';
        ie_se_necessario_w := 'N';
        ie_acm_w           := 'N';
      end if;
    end if;

    --ie_ref_calculo_w := null;


    -- Caso exista intervalo no cadastro, assumir a informacao
    if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

      ie_ref_calculo_w := 'I';

      -- Tratamento para intervalos de itens ACM e SN (Quando intervalo informado)
      if ((coalesce(ie_urgencia_w, 'N') = 'N') and (ie_acm_w = 'S') or (ie_se_necessario_w = 'S')) then

        select  max(cd_intervalo)
        into STRICT  cd_intervalo_w
        from intervalo_prescricao a
        where coalesce(a.ie_situacao, 'A') = 'A'
        and obter_se_intervalo(a.cd_intervalo, 15) = 'S'
        and coalesce(a.ie_agora, 'N') = 'N'
        and obter_se_interv_superior_24h(a.cd_intervalo, nm_usuario_p) = 'N'
        and ((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estabelecimento_p))
        and a.cd_intervalo = cd_intervalo_w;

        -- Tratamento para intervals de itens nao ACM e SN (Quando intervalo informado)
      else

        select  CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END ,
            coalesce(max(ie_se_necessario), 'N'),
            coalesce(max(ie_acm), 'N')
        into STRICT  ie_exibe_w,
            ie_sn_interv_w,
            ie_acm_interv_w
        from intervalo_prescricao
        where cd_intervalo = cd_intervalo_w
        and ie_situacao = 'A'
        and obter_se_intervalo(cd_intervalo_w, '15') = 'S'
        and cpoe_obter_se_exibe_interv( nr_atendimento_p,
                        cd_estabelecimento_p,
                        cd_intervalo_w,
                        cd_perfil_p,
                        nm_usuario_p) = 'S'
        and   ((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = cd_estabelecimento_p))
        and   obter_se_intervalo_estab(cd_intervalo_w,cd_estabelecimento_p) = 'S'
        and   obter_se_intervalo_sugerido(cd_material_w, cd_intervalo_w) = 'S';

        if (ie_exibe_w = 'N' or (ie_adm_mat_w = 'N' and ie_sn_interv_w = 'N') or (ie_adm_mat_w = 'C' and ie_acm_interv_w = 'N')) then

          cd_intervalo_w := null;
        end if;
      end if;

      if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
        nr_etapas_prot_w := null;
        nr_etapas_w := coalesce(obter_ocorrencia_intervalo(cd_intervalo_w, 24, 'O'), 1);
      end if;
    end if;

    if (coalesce(cd_intervalo_w::text, '') = '' and coalesce(ie_ref_calculo_w::text, '') = '') then
      ie_ref_calculo_w := 'NE';
    end if;

    -- Caso nao exista intervalo no cadastro, assumir a informacao
    if (nr_etapas_prot_w IS NOT NULL AND nr_etapas_prot_w::text <> '') then

      ie_ref_calculo_w   := 'NE';
      nr_etapas_w        := coalesce(nr_etapas_prot_w, 1);

      if ((ie_acm_w = 'S') or (ie_se_necessario_w = 'S')) then

        select  max(cd_intervalo)
        into STRICT  cd_intervalo_w
        from  intervalo_prescricao a
        where coalesce(a.ie_situacao, 'A')              = 'A'
        and obter_se_intervalo(a.cd_intervalo, 15) = 'S'
        and coalesce(a.ie_agora, 'N')                   = 'N'
        and coalesce(obter_ocorrencia_intervalo(a.cd_intervalo, 24, 'O'), 1) = nr_etapas_w
        and obter_se_interv_superior_24h(a.cd_intervalo, nm_usuario_p)  = 'N'
        and ((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estabelecimento_p))
        and a.cd_intervalo = cd_intervalo_w;
      else
        select max(cd_intervalo)
        into STRICT cd_intervalo_w
        from intervalo_prescricao a
        where a.qt_operacao = nr_etapas_w
        and coalesce(a.ie_situacao, 'A') = 'A'
        and obter_se_intervalo(a.cd_intervalo, 15) = 'S'
        and coalesce(a.ie_acm, 'N') = 'N'
        and coalesce(a.ie_se_necessario, 'N') = 'N'
        and coalesce(obter_ocorrencia_intervalo(a.cd_intervalo, 24, 'O'), 1) = nr_etapas_w
        and obter_se_interv_superior_24h(a.cd_intervalo, nm_usuario_p) = 'N'
        and ((coalesce(a.cd_estabelecimento::text, '') = '') or (a.cd_estabelecimento = cd_estabelecimento_p));
      end if;
    end if;

    begin
      qt_volume_sol_w := qt_solucao_total_w / coalesce(nr_etapas_prot_w, 1);
    exception
    when others then
      qt_volume_sol_w := 0;
    end;

    if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and (coalesce(nr_etapas_prot_w::text, '') = '') then
      if (coalesce(qt_tempo_aplicacao_w, 0) > 0) then
        SELECT * FROM Calcular_etapas_interv_solucao(cd_intervalo_w, qt_tempo_aplicacao_w, 'N', qt_hora_fase_w, nr_etapas_w, qt_volume_sol_w, qt_dosagem_w) INTO STRICT qt_hora_fase_w, nr_etapas_w;
      end if;
    end if;

    nr_etapas_w   := coalesce(nr_etapas_w, 1);
    nr_ocorrencia_w := nr_etapas_w;

    if (coalesce(qt_tempo_aplicacao_w, 0) = 0) then
      if (coalesce(qt_hora_fase_w, 0)     > 0) then
        qt_tempo_aplicacao_w        := qt_hora_fase_w * nr_etapas_w;
      else
        qt_tempo_aplicacao_w := 24;
        qt_hora_fase_w       := dividir(qt_tempo_aplicacao_w, nr_etapas_w);
      end if;
    end if;

    if (ie_urgencia_w = 'S') then
      dt_primeiro_horario_w := clock_timestamp();
      hr_prim_horario_w     := to_char(clock_timestamp(), 'hh24:mi');
      ds_horarios_w         := hr_prim_horario_w;
    else
      hr_prim_horario_w        := coalesce(obter_prim_horario_sol_regra(nr_etapas_w, dt_prescricao_w, hr_prim_horario_w), to_char(dt_inicio_prescr_w, 'hh24:mi'));
      dt_primeiro_horario_w    := ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_inicio_prescr_w, hr_prim_horario_w);

      if (dt_primeiro_horario_w < dt_inicio_prescr_w) then
        dt_primeiro_horario_w  := dt_primeiro_horario_w + 1;
      end if;
    end if;

    SELECT * FROM cpoe_calcula_horarios_etapas(nm_usuario_p, dt_primeiro_horario_w, ie_sol_continua_w, nr_etapas_w, cd_intervalo_w, qt_tempo_aplicacao_w, coalesce(qt_hora_fase_w,0), 0, 'N') INTO STRICT nr_etapas_w, ds_horarios_w;

    if (ie_duracao_w = 'P') then
      dt_fim_w      := (dt_primeiro_horario_w + 1) - 1 / 1440;
    end if;

    if (dt_fim_presc_p IS NOT NULL AND dt_fim_presc_p::text <> '') then
      dt_fim_w := dt_fim_presc_p;
      ie_duracao_w := 'P';
    end if;

    -- Clear out the text inside the line and adds the sufix of ":00" as needed, fitting it
    ds_horarios_w := replace(Padroniza_horario_prescr(ds_horarios_w, NULL), 'A', '');

    if ((ie_acm_w = 'S') or (ie_se_necessario_w = 'S')) then
      ds_horarios_w     := null;
      hr_prim_horario_w := null;
    end if;

    qt_total_etapa_w     := 0;
    nr_seq_item_gerado_p := NULL;
    ds_justificativa_w   := NULL;
    ds_mat_adic_w        := '1,2,3,4,5,6,7';

    if (ds_orientacao_w IS NOT NULL AND ds_orientacao_w::text <> '') then
      ds_observacao_w    := substr(ds_orientacao_w || chr(10), 1, 2000);
    else
      ds_observacao_w := null;
    end if;

    if (coalesce(ie_prescr_alta_agora_w, 'N') = 'S') and (coalesce(ie_item_alta_p, 'N') = 'S') then

      ie_urgencia_w := 0;

      select max(qt_min_intervalo)
      into STRICT qt_min_intervalo_w
      from intervalo_prescricao
      where cd_intervalo = cd_intervalo_w;

      SELECT * FROM cpoe_calcular_horario_prescr(nr_atendimento_p, cd_intervalo_w, cd_material_w, clock_timestamp(), 0, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios_aux_w, nm_usuario_p, cd_estabelecimento_p, cd_perfil_p, NULL) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios_aux_w;

      ds_horarios_w            := ds_horarios_w || ds_horarios_aux_w;
      hr_prim_horario_w        := obter_prim_dshorarios(ds_horarios_w);
      dt_primeiro_horario_w    := ESTABLISHMENT_TIMEZONE_UTILS.todayAtTime(hr_prim_horario_w);

      if (dt_primeiro_horario_w < clock_timestamp()) then
        dt_primeiro_horario_w  := dt_primeiro_horario_w + 1;
      end if;
    end if;

    qt_total_solucao_w := 0;
    inf_solucao[1].qt_volume_total  := 0;

    cont_w := 0;

    while(cont_w < nr_etapas_w) loop
      inf_solucao[1].qt_volume_etapa(cont_w).valor := 0;
      cont_w := cont_w+1;
    end loop;

    open c02;
    loop
    fetch c02 into
      cd_material_w,
      cd_unidade_medida_dose_w,
      qt_dose_w,
      qt_dose_peso_w,
      ds_recomendacao_w,
      qt_solucao_w,
      ds_justificativa_comp_w,
      ie_diluente_w,
      nr_seq_material_w,
      ds_dose_diferenciada_w,
      ie_subtrair_volume_medic_w;
    EXIT WHEN NOT FOUND; /* apply on c02 */
    begin

      if (qt_dose_peso_w > 0) and (qt_peso_p > 0) then

        qt_dose_w := qt_dose_peso_w * qt_peso_p;

        if (upper(cd_unidade_medida_dose_w) = 'GTS') then
          qt_dose_w := round(qt_dose_w);
        end if;
      end if;

      qt_dose_limite_w    := CPOE_obter_dose_maxima(cd_estabelecimento_p, cd_material_w, cd_unidade_medida_dose_w, coalesce(qt_dose_w, 0), ie_via_aplicacao_w, cd_setor_atendimento_p, nr_seq_agrupamento_p, cd_prescritor_p, qt_idade_dia_p, qt_idade_mes_p, qt_idade_ano_p, qt_peso_p);

      if (qt_dose_limite_w > 0) then
        qt_dose_w         := qt_dose_limite_w;
      end if;

      if (qt_casas_retorno_p > 0 AND qt_dose_w IS NOT NULL AND qt_dose_w::text <> '') then
        qt_dose_w := round(qt_dose_w, qt_casas_retorno_p);
      end if;

      qt_conversao_dose_w     := obter_conversao_unid_med(cd_material_w, cd_unidade_medida_dose_w);
      qt_total_solucao_w            := qt_total_solucao_w + obter_conversao_ml(cd_material_w, coalesce(qt_dose_w, 0), cd_unidade_medida_dose_w);

      if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') then

        dt_primeiro_horario_w := ESTABLISHMENT_TIMEZONE_UTILS.dateAtTime(dt_prescricao_w, hr_prim_horario_w);

        if (dt_primeiro_horario_w < dt_inicio_prescr_w) and (coalesce(ie_urgencia_w,'N') <> 'S') and (coalesce(hr_prim_horario_ww,'  :  ') <> '  :  ') then -- Restricao para identificar se existe 1o horario padrao no cadastro do protocolo
          dt_primeiro_horario_w  := dt_primeiro_horario_w + 1;
        end if;
      end if;

      qt_unitaria_w := dividir(trunc(dividir(coalesce(qt_dose_w, 0) * 1000, qt_conversao_dose_w)), 1000);
      begin
        SELECT * FROM cpoe_obter_quant_dispensar(cd_estabelecimento_p, cd_material_w, nr_seq_item_gerado_p, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, 0, nr_ocorrencia_w, NULL, ie_origem_inf_p, cd_unidade_medida_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
      exception when others then
        CALL gravar_log_cpoe(substr('CPOE_GERAR_PROT_SOLUCAO EXCEPTION cpoe_obter_quant_dispensar: '|| substr(to_char(sqlerrm), 1, 2000)
        || 'cd_estabelecimento_p: ' || cd_estabelecimento_p
        || 'cd_material_w: ' || cd_material_w
        || 'nr_seq_item_gerado_p: ' || nr_seq_item_gerado_p
        || 'cd_intervalo_w: ' || cd_intervalo_w
        || 'ie_via_aplicacao_w: ' || ie_via_aplicacao_w
        || 'qt_unitaria_w: ' || qt_unitaria_w
        || 'nr_ocorrencia_w: ' || nr_ocorrencia_w
        || 'ie_origem_inf_p: ' || ie_origem_inf_p
        || 'cd_unidade_medida_dose_w: ' || cd_unidade_medida_dose_w
        || 'qt_material_w: ' || qt_material_w
        || 'qt_dispensar_w: ' || qt_dispensar_w
        || 'ie_regra_disp_w: ' || ie_regra_disp_w
        || 'ds_erro_w: ' || ds_erro_w
        || 'ie_se_necessario_w: ' || ie_se_necessario_w
        || 'ie_acm_w: ' || ie_acm_w, 1,2000),
        nr_atendimento_p, 'M', nr_seq_item_gerado_p);
      end;
      ds_orientacao_w     := Obter_orientacao_medic(cd_material_w);

      if (ds_orientacao_w IS NOT NULL AND ds_orientacao_w::text <> '') then
        ds_observacao_w := substr(ds_observacao_w || ds_orientacao_w || chr(13), 1, 2000);
        ds_orientacao_w := null;
      end if;

      if (ds_recomendacao_w IS NOT NULL AND ds_recomendacao_w::text <> '') then
        ds_observacao_w := substr(ds_observacao_w || ds_recomendacao_w || chr(13), 1, 2000);
      end if;

      if (coalesce(ds_observacao_w::text, '') = '') then
        ds_observacao_w := substr(cpoe_obter_padrao_param_prescr(nr_atendimento_p, cd_material_w, ie_via_aplicacao_w, ie_se_necessario_w, 'O', cd_intervalo_w, cd_estabelecimento_p, cd_perfil_p, nm_usuario_p, cd_paciente_p), 1, 2000);
      end if;

      if (ds_justificativa_comp_w IS NOT NULL AND ds_justificativa_comp_w::text <> '') then
        ds_justificativa_w := substr(ds_justificativa_comp_w || chr(10), 1, 2000);
      end if;

      commit;

      if (ie_calc_aut_w = 'S') then
        qt_dose_ml_w := obter_conversao_ml(cd_material_w, coalesce(qt_dose_w, 0), cd_unidade_medida_dose_w);
        qt_total_etapa_w := qt_total_etapa_w + qt_dose_ml_w;
      end if;

      if (ie_diluente_w = 'S' and ie_subtrair_volume_medic_w = 'S') then
        qt_volume_fixo_w := qt_solucao_w;
      end if;

      if (coalesce(nr_seq_item_gerado_p::text, '') = '') then
        gerar_componente_base_solucao;
      else
        gerar_componente_adic_solucao;
      end if;

      if (ie_tipo_sol_ww = '2') and (ds_dose_diferenciada_w IS NOT NULL AND ds_dose_diferenciada_w::text <> '') then

        cont_w := 0;

        while(cont_w < nr_etapas_w) loop

          Totalizar_valores_dif(cd_material_w, ds_dose_diferenciada_w, cd_unidade_medida_dose_w);
          cont_w := cont_w+1;
        end loop;
      end if;
    end;
    end loop;
    close c02;

    qt_dosagem_diferenciada_w := null;
    qt_dosagem_w      := null;
    qt_solucao_total_w    := null;
    ds_volume_diferenciado_w  := null;

    if (ie_calc_aut_w = 'S') then

      if (ie_tipo_sol_ww = '2') and (coalesce(nr_etapas_w,0) > 0) then

        if (upper(ie_tipo_dosagem_w) = 'GTM') then
          gotas_w := 20;
          tempo_w := 60;
        elsif (upper(ie_tipo_dosagem_w) = 'MLH') then
          gotas_w := 1;
          tempo_w := 1;
        else
          gotas_w := 60;
          tempo_w := 60;
        end if;

        qt_solucao_total_w    := inf_solucao[1].qt_volume_total;

        for i in 0..nr_etapas_w-1 loop

          if (ie_tipo_sol_w = 'C') then
            begin
            if (ie_ref_calculo_w = 'I') then

              if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then
                gerar_valores_intervalo;
              end if;
            elsif (ie_ref_calculo_w = 'NE') then

              if (nr_etapas_w IS NOT NULL AND nr_etapas_w::text <> '') then
                qt_hora_fase_w := dividir(qt_tempo_aplicacao_w, nr_etapas_w );
              end if;
            end if;
            end;
          elsif (ie_tipo_sol_w = 'I') then

            if (ie_ref_calculo_w = 'I') and (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then

              gerar_valores_intervalo;
            end if;
          end if;

          qt_dosagem_w := Dividir(Dividir((round( inf_solucao[1].qt_volume_etapa(i).valor) * gotas_w), qt_hora_fase_w), tempo_w);

          qt_hora_fase_diferenciada_w := qt_hora_fase_diferenciada_w || substr(numtodsinterval(qt_hora_fase_w, 'HOUR'), 12,5) || ie_div_padrao_w;
          ds_volume_diferenciado_w := ds_volume_diferenciado_w || inf_solucao[1].qt_volume_etapa(i).valor || ie_div_padrao_w;
          qt_dosagem_diferenciada_w := qt_dosagem_diferenciada_w || qt_dosagem_w || ie_div_padrao_w;
        end loop;

        update cpoe_material
        set qt_solucao_total = qt_solucao_total_w,
            qt_dosagem_diferenciada = substr(qt_dosagem_diferenciada_w,1,length(qt_dosagem_diferenciada_w)-1),
            ds_volume_diferenciado = substr(ds_volume_diferenciado_w,1,length(ds_volume_diferenciado_w)-1),
            qt_hora_fase_diferenciada = substr(qt_hora_fase_diferenciada_w,1,length(qt_hora_fase_diferenciada_w)-1),
            nr_etapas        = nr_etapas_w
        where nr_sequencia = nr_seq_item_gerado_p;
      else

        qt_total_etapa_w := qt_total_solucao_w * nr_etapas_w;

        qt_hora_fase_ww := converter_decimal_para_hora(qt_hora_fase_dec_w);

        if (ie_tipo_sol_w = 'I') then
          qt_tempo_aplicacao_w := nr_etapas_w * (obter_minutos_hora(qt_hora_fase_ww) / 60);
        end if;

        CPOE_Calcular_volume_total_sol(upper(ie_tipo_dosagem_w), qt_tempo_aplicacao_w, qt_total_etapa_w, qt_dosagem_w, 1, qt_dosagem_final_w, 'N', nr_etapas_w, 'N');

        if (substr(qt_dosagem_final_w, 1, 1) = ',') then
          qt_dosagem_final_w := '0' || qt_dosagem_final_w;
          qt_dosagem_final_w := replace(qt_dosagem_final_w, '.', ',');
        end if;

        update cpoe_material
        set qt_solucao_total = qt_total_etapa_w,
          qt_hora_fase     = qt_hora_fase_ww,
          nr_etapas        = nr_etapas_w,
          qt_dosagem       = qt_dosagem_final_w,
          qt_volume        = cpoe_obter_volume_total( cd_material, qt_dose, cd_unidade_medida,
                        cd_mat_dil, qt_dose_dil, cd_unid_med_dose_dil,
                        qt_solucao_red,
                        cd_mat_red, qt_dose_red, cd_unid_med_dose_red,
                        cd_mat_comp1, qt_dose_comp1, cd_unid_med_dose_comp1,
                        cd_mat_comp2, qt_dose_comp2, cd_unid_med_dose_comp2,
                        cd_mat_comp3, qt_dose_comp3, cd_unid_med_dose_comp3,
                        cd_mat_comp4, qt_dose_comp4, cd_unid_med_dose_comp4,
                        cd_mat_comp5, qt_dose_comp5, cd_unid_med_dose_comp5,
                        cd_mat_comp6, qt_dose_comp6, cd_unid_med_dose_comp6,
                        cd_mat_comp7, qt_dose_comp7, cd_unid_med_dose_comp7,
                        nr_seq_mat_diluicao)
        where nr_sequencia = nr_seq_item_gerado_p;
      end if;
    end if;

    ds_diluicao_out := CPOE_obter_diluicao( ie_tipo_sol_w, qt_volume_sol_w, qt_tempo_aplicacao_w, cd_intervalo_w, nr_etapas_w, to_char(qt_dosagem_final_w), qt_solucao_total_w,
                        lpad(qt_hora_fase_w, 2, '0') || ':00', qt_hora_fase_w, null, ie_ref_calculo_w);

    update cpoe_material
    set   ds_ref_calculo = ds_diluicao_out,
      ds_observacao = ds_observacao_w
    where nr_sequencia = nr_seq_item_gerado_p;

    CALL cpoe_utils_pck.set_list_itens(nr_seq_item_gerado_p, 'M');
	
  exception
  when others then
    ds_erro_w := sqlerrm(SQLSTATE);
    CALL gravar_log_cpoe(substr('CPOE_GERAR_PROT_SOLUCAO EXCEPTION 2 cpoe_obter_quant_dispensar: '|| substr(ds_erro_w, 1, 2000)
        || 'cd_estabelecimento_p: ' || cd_estabelecimento_p
        || 'cd_material_w: ' || cd_material_w
        || 'nr_seq_item_gerado_p: ' || nr_seq_item_gerado_p
        || 'cd_intervalo_w: ' || cd_intervalo_w
        || 'ie_via_aplicacao_w: ' || ie_via_aplicacao_w
        || 'qt_unitaria_w: ' || qt_unitaria_w
        || 'nr_ocorrencia_w: ' || nr_ocorrencia_w
        || 'ie_origem_inf_p: ' || ie_origem_inf_p
        || 'cd_unidade_medida_dose_w: ' || cd_unidade_medida_dose_w
        || 'qt_material_w: ' || qt_material_w
        || 'qt_dispensar_w: ' || qt_dispensar_w
        || 'ie_regra_disp_w: ' || ie_regra_disp_w
        || 'ds_erro_w: ' || ds_erro_w
        || 'ie_se_necessario_w: ' || ie_se_necessario_w
        || 'ie_acm_w: ' || ie_acm_w, 1,2000),
        nr_atendimento_p, 'M', nr_seq_item_gerado_p);
  end;

    CALL cpoe_gerar_plano_protocolo(nr_atendimento_p, dt_fim_presc_p, nr_seq_item_gerado_p, nm_usuario_p, 'M');
  end loop;
  close c01;

  commit;

  nr_seq_item_gerado_p := nr_seq_retorno_w;

exception when others then
  rollback;

  ds_stack_w  := substr(dbms_utility.format_call_stack,1,2000);
  ds_log_cpoe_w := substr('CPOE_GERAR_PROT_SOLUCAO'
    || chr(13) || ' - cd_estabelecimento_p: ' || cd_estabelecimento_p
    || chr(13) || ' - cd_perfil_p: ' || cd_perfil_p
    || chr(13) || ' - nm_usuario_p: ' || nm_usuario_p
    || chr(13) || ' - cd_protocolo_p: ' || cd_protocolo_p
    || chr(13) || ' - nr_seq_protocolo_p: ' || nr_seq_protocolo_p
    || chr(13) || ' - nr_seq_item_p: ' || nr_seq_item_p
    || chr(13) || ' - nr_atendimento_p: ' || nr_atendimento_p
    || chr(13) || ' - ie_tipo_atendimento_p: ' || ie_tipo_atendimento_p
    || chr(13) || ' - cd_prescritor_p: ' || cd_prescritor_p
    || chr(13) || ' - cd_paciente_p: ' || cd_paciente_p
    || chr(13) || ' - cd_medico_atend_p: ' || cd_medico_atend_p
    || chr(13) || ' - cd_setor_atendimento_p: ' || cd_setor_atendimento_p
    || chr(13) || ' - nr_seq_agrupamento_p: ' || nr_seq_agrupamento_p
    || chr(13) || ' - cd_convenio_p: ' || cd_convenio_p
    || chr(13) || ' - ie_tipo_convenio_p: ' || ie_tipo_convenio_p
    || chr(13) || ' - cd_categoria_convenio_p: ' || cd_categoria_convenio_p
    || chr(13) || ' - cd_plano_convenio_p: ' || cd_plano_convenio_p
    || chr(13) || ' - qt_idade_dia_p: ' || qt_idade_dia_p
    || chr(13) || ' - qt_idade_mes_p: ' || qt_idade_mes_p
    || chr(13) || ' - qt_idade_ano_p: ' || qt_idade_ano_p
    || chr(13) || ' - qt_peso_p: ' || qt_peso_p
    || chr(13) || ' - qt_casas_retorno_p: ' || qt_casas_retorno_p
    || chr(13) || ' - ie_origem_inf_p: ' || ie_origem_inf_p
    || chr(13) || ' - nr_seq_item_gerado_p: ' || nr_seq_item_gerado_p
    || chr(13) || ' - nr_seq_pend_pac_acao_p: ' || nr_seq_pend_pac_acao_p
    || chr(13) || ' - nr_seq_transcricao_p: ' || nr_seq_transcricao_p
    || chr(13) || ' - ie_item_alta_p: ' || ie_item_alta_p
    || chr(13) || ' - ie_prescritor_aux_p: ' || ie_prescritor_aux_p
    || chr(13) || ' - cd_medico_p: ' || cd_medico_p
    || chr(13) || ' - ie_retrogrado_p: ' || ie_retrogrado_p
    || chr(13) || ' - ie_futuro_p: ' || ie_futuro_p
    || chr(13) || ' - dt_inicio_p: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicio_p,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone)
    || chr(13) || ' - nr_seq_pepo_p: ' || nr_seq_pepo_p
    || chr(13) || ' - nr_cirurgia_p: ' || nr_cirurgia_p
    || chr(13) || ' - nr_cirurgia_patologia_p: ' || nr_cirurgia_patologia_p
    || chr(13) || ' - nr_seq_agenda_p: ' || nr_seq_agenda_p
    || chr(13) || ' - ie_oncologia_p: ' || ie_oncologia_p
    || chr(13) || ' - nr_seq_conclusao_apae_p: ' || nr_seq_conclusao_apae_p
    || chr(13) || ' - ie_forma_geracao_p: ' || ie_forma_geracao_p
    || chr(13) || ' - dt_fim_presc_p: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_fim_presc_p,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone)
    || chr(13) || ' - dt_inicio_presc_p: ' || PKG_DATE_FORMATERS_TZ.TO_VARCHAR(dt_inicio_presc_p,'timestamp',ESTABLISHMENT_TIMEZONE_UTILS.gettimezone)
    || chr(13) || ' - ERRO: ' || sqlerrm
    || chr(13) || ' - FUNCAO('||to_char(obter_funcao_ativa)||'); PERFIL('||to_char(obter_perfil_ativo)||')',1,2000);

  insert into log_cpoe(
    nr_sequencia,
    nr_atendimento,
    dt_atualizacao,
    nm_usuario,
    ds_log,
    ds_stack)
  values (
    nextval('log_cpoe_seq'),
    nr_atendimento_p,
    clock_timestamp(),
    nm_usuario_p,
    ds_log_cpoe_w,
    ds_stack_w);

  commit;

  CALL wheb_mensagem_pck.exibir_mensagem_abort(sqlerrm);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_gerar_prot_solucao ( cd_estabelecimento_p bigint, cd_perfil_p bigint, nm_usuario_p text, cd_protocolo_p bigint, nr_seq_protocolo_p bigint, nr_seq_item_p bigint, nr_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_prescritor_p text, cd_paciente_p text, cd_medico_atend_p text, cd_setor_atendimento_p bigint, nr_seq_agrupamento_p bigint, cd_convenio_p bigint, ie_tipo_convenio_p bigint, cd_categoria_convenio_p text, cd_plano_convenio_p text, qt_idade_dia_p bigint, qt_idade_mes_p bigint, qt_idade_ano_p bigint, qt_peso_p bigint, qt_casas_retorno_p bigint, ie_origem_inf_p text, nr_seq_item_gerado_p INOUT bigint, nr_seq_pend_pac_acao_p bigint default null, nr_seq_transcricao_p bigint default null, ie_item_alta_p text default 'N', ie_prescritor_aux_p text default 'N', cd_medico_p bigint default null, ie_retrogrado_p text default 'N', dt_inicio_p timestamp default null, nr_seq_pepo_p bigint default null, nr_cirurgia_p bigint default null, nr_cirurgia_patologia_p bigint default null, nr_seq_agenda_p bigint default null, ie_oncologia_p text default 'N', nr_seq_conclusao_apae_p bigint default null, ie_forma_geracao_p text default null, dt_fim_presc_p timestamp default null, dt_inicio_presc_p timestamp default null, ie_futuro_p text default 'N', nr_seq_receita_amb_p bigint default null, nr_seq_cpoe_rp_p cpoe_rp.nr_sequencia%type default null, nr_seq_cpoe_order_unit_p cpoe_order_unit.nr_sequencia%type default null) FROM PUBLIC;

