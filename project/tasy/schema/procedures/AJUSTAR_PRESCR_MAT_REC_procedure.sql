-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ajustar_prescr_mat_rec ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_ocorrencia_w			bigint;
nr_sequencia_w			integer;
cd_material_w			integer;
qt_unitaria_w			double precision;
qt_material_w			double precision;
qt_dose_especial_w		double precision;
ds_dose_diferenciada_w	varchar(50);
ie_origem_inf_w			varchar(1);
qt_dispensar_w			double precision;
qt_dose_w				double precision;
ds_erro_w				varchar(255);
cd_intervalo_w			varchar(7);
ie_suspenso_w			varchar(1);
ie_via_aplicacao_w		varchar(5);
cd_unidade_medida_dose_w varchar(30);
dt_primeiro_horario_w	timestamp;
dt_primeiro_horario_ww	timestamp;
nr_horas_validade_w		integer;
ds_horarios_w			varchar(255);
ds_horarios2_w			varchar(255);
ds_horarios3_w			varchar(255);
ie_regra_disp_w			varchar(1);
qt_hora_intervalo_w		smallint;
qt_min_intervalo_w		integer;
ie_prescr_mat_sem_lib_w	varchar(30);
cd_estabelecimento_w	smallint;
hr_prim_horario_w		varchar(5);
ie_urgencia_w			varchar(1);
ie_acm_w				varchar(1);
ie_se_necessario_w		varchar(1);
nr_ocorrencia_ww		prescr_recomendacao.nr_ocorrencia%type;

C01 CURSOR FOR
SELECT	a.cd_intervalo,
		coalesce(b.nr_sequencia,0),
		c.dt_primeiro_horario,
		c.nr_horas_validade,
		coalesce(b.cd_material,0),
		coalesce(b.qt_unitaria,0),
		coalesce(b.qt_material,0),
		coalesce(b.qt_dose_especial,0),
		coalesce(b.ds_dose_diferenciada,''),
		coalesce(b.ie_origem_inf,'1'),
		b.ie_via_aplicacao,
		b.cd_unidade_medida_dose,
		CASE WHEN coalesce(a.ie_suspenso,'N')='N' THEN coalesce(b.ie_suspenso,'N')  ELSE coalesce(a.ie_suspenso,'N') END ,
		substr(a.ds_horarios,1,255),
		b.qt_dose,
		b.qt_hora_intervalo,
		b.qt_min_intervalo,
		coalesce(a.ie_urgencia,'N'),
		coalesce(a.ie_acm,'N'),
		coalesce(a.ie_se_necessario,'N'),
		a.hr_prim_horario,
		a.nr_ocorrencia
from	prescr_material b,
		prescr_recomendacao a,
		prescr_medica c
where	a.nr_sequencia	= b.nr_seq_recomendacao
and		a.nr_prescricao = b.nr_prescricao
and		b.nr_prescricao = c.nr_prescricao
and		b.nr_prescricao = nr_prescricao_p
and		a.nr_sequencia  = nr_sequencia_p
and		a.nr_prescricao = nr_prescricao_p
and		c.nr_prescricao	= nr_prescricao_p;


BEGIN

select	max(cd_estabelecimento)
into STRICT	cd_estabelecimento_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p;

ie_prescr_mat_sem_lib_w := Obter_Param_Usuario(924, 530, cd_perfil_p, nm_usuario_p, cd_estabelecimento_w, ie_prescr_mat_sem_lib_w);

open C01;
loop
fetch C01 into
	cd_intervalo_w,
	nr_sequencia_w,
	dt_primeiro_horario_w,
	nr_horas_validade_w,
	cd_material_w,
	qt_unitaria_w,
	qt_material_w,
	qt_dose_especial_w,
	ds_dose_diferenciada_w,
	ie_origem_inf_w,
	ie_via_aplicacao_w,
	cd_unidade_medida_dose_w,
	ie_suspenso_w,
	ds_horarios3_w,
	qt_dose_w,
	qt_hora_intervalo_w,
	qt_min_intervalo_w,
	ie_urgencia_w,
	ie_acm_w,
	ie_se_necessario_w,
	hr_prim_horario_w,
	nr_ocorrencia_ww;
EXIT WHEN NOT FOUND; /* apply on C01 */

	if (hr_prim_horario_w IS NOT NULL AND hr_prim_horario_w::text <> '') and (hr_prim_horario_w <> ':') and (hr_prim_horario_w <> '  :  ') and (hr_prim_horario_w <> '__:__')then
		dt_primeiro_horario_ww := to_date(to_char(dt_primeiro_horario_w,'dd/mm/yyyy')||hr_prim_horario_w||':00','dd/mm/yyyy hh24:mi:ss');
	end if;

	qt_material_w	:= 0;
	nr_ocorrencia_w	:= 0;
	SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_primeiro_horario_ww, to_date(to_char(dt_primeiro_horario_w,'hh24:mi'),'hh24:mi'), nr_horas_validade_w, cd_material_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w, 'N', null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios2_w;

	ds_horarios_w	:= ds_horarios_w || ds_horarios2_w;

	if (ds_horarios3_w IS NOT NULL AND ds_horarios3_w::text <> '') then
		nr_ocorrencia_w := nr_ocorrencia_ww;
	end if;

	SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_p, nr_sequencia_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, coalesce(qt_dose_especial_w,0), nr_ocorrencia_w, ds_dose_diferenciada_w, ie_origem_inf_w, cd_unidade_medida_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, 'N', 'N') INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;

	Update	prescr_material
	set		cd_intervalo		= cd_intervalo_w,
			ie_suspenso			= ie_suspenso_w,
			ie_utiliza_kit		= 'N',
			ie_medicacao_paciente	= 'N',
			hr_prim_horario		= to_char(dt_primeiro_horario_ww,'hh24:mi'),
			qt_hora_intervalo	= qt_hora_intervalo_w,
			qt_min_intervalo	= qt_min_intervalo_w,
			ds_horarios			= coalesce(ds_horarios3_w,ds_horarios_w),
			nr_ocorrencia		= nr_ocorrencia_w,
			qt_total_dispensar	= qt_dispensar_w,
			qt_material			= qt_material_w,
			ie_regra_disp		= CASE WHEN coalesce(ie_regra_disp,'X')='D' THEN  ie_regra_disp  ELSE ie_regra_disp_w END ,
			qt_dose				= qt_dose_w,
			ie_se_necessario	= ie_se_necessario_w,
			ie_urgencia			= ie_urgencia_w,
			ie_acm				= ie_acm_w
	where	nr_sequencia	= nr_sequencia_w
	and		nr_prescricao	= nr_prescricao_p;

	if (ie_prescr_mat_sem_lib_w = 'S') then
		CALL Gerar_prescr_mat_sem_dt_lib(nr_prescricao_p,nr_sequencia_w,cd_perfil_p,'N',nm_usuario_p,null);
	end if;

end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ajustar_prescr_mat_rec ( nr_prescricao_p bigint, nr_sequencia_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

