-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE carregar_escopo_atuacao_espec ( cd_especialidade_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Copiar as informações de escopo de atuação da especialidade para os privilégios
do médico.
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------
Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
ds_especialidade_w			medico_privilegio.ds_titulo%type;
nr_sequencia_w          bigint;

c_escopo_atua CURSOR FOR
	SELECT	ie_privilegio,
		ie_forma
	from	especialidade_escopo_atua	a
	where	a.cd_especialidade	= cd_especialidade_p;

BEGIN
if (cd_especialidade_p IS NOT NULL AND cd_especialidade_p::text <> '') then
	ds_especialidade_w	:= substr(Obter_Desc_Espec_medica(cd_especialidade_p),1,80);

	for reg in c_escopo_atua loop
		begin
      select min(nr_sequencia)
        into STRICT nr_sequencia_w
        from medico_privilegio
       where cd_pessoa_fisica	= cd_pessoa_fisica_p and
             ie_privilegio = reg.ie_privilegio and
             ie_forma = reg.ie_forma and
             cd_especialidade = cd_especialidade_p and
             coalesce(dt_vigencia_final::text, '') = ''
    order by dt_atualizacao_nrec LIMIT 1;

      if (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '') then
        update medico_privilegio
           set dt_vigencia_final = clock_timestamp(),
               dt_atualizacao = clock_timestamp(),
               nm_usuario = nm_usuario_p
         where nr_sequencia = nr_sequencia_w;
      end if;

      insert into medico_privilegio(	nr_sequencia,
          dt_atualizacao,
          nm_usuario,
          dt_atualizacao_nrec,
          nm_usuario_nrec,
          ds_titulo,
          cd_especialidade,
          cd_pessoa_fisica,
          ie_forma,
          ie_privilegio,
          ds_privilegio,
          dt_vigencia_inicial,
          ie_supervisao)
      values (	nextval('medico_privilegio_seq'),
        	clock_timestamp(),
          nm_usuario_p,
          clock_timestamp(),
          nm_usuario_p,
          ds_especialidade_w,
          cd_especialidade_p,
          cd_pessoa_fisica_p,
          reg.ie_forma,
          reg.ie_privilegio,
          wheb_mensagem_pck.get_texto(455381),
          clock_timestamp(),
          'N');
      end;
	end loop;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE carregar_escopo_atuacao_espec ( cd_especialidade_p bigint, cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

