-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE prescr_material_before_post ( nr_prescricao_p bigint, nr_agrupamento_p bigint, cd_intervalo_p text, dt_prim_horario_presc_p timestamp, dt_hora_inicio_p timestamp, nr_hora_validade_p bigint, cd_material_p bigint, qt_hora_intervalo_p bigint, qt_min_intervalo_p bigint, nr_intervalo_p INOUT bigint, ds_horarios_p INOUT text, ds_horarios2_p INOUT text, ie_solucao_p text, ds_dose_diferenciada_p text, cd_estabelecimento_p bigint, nr_prescr_p bigint, nr_sequencia_p bigint, ie_via_aplicacao_p text, qt_unitaria_p bigint, qt_dose_esp_p bigint, nr_ocorrencia_p bigint, ds_dose_dif_p text, ie_origem_inf_p text, cd_unid_med_dose_p text, qt_dias_p bigint, qt_material_p INOUT bigint, qt_dispensar_p INOUT bigint, ie_regra_disp_p INOUT text, ds_erro_p INOUT text, qt_itens_superior_p INOUT bigint, ds_texto_pri_p INOUT text, ds_texto_sec_p INOUT text, ds_texto_ter_p INOUT text, ie_consistir_horarios_p INOUT text, obter_intervalo_p INOUT text) AS $body$
DECLARE


nr_intervalo_w		smallint 	:= 0;	
ds_horarios_w		varchar(2000) 	:= '';
qt_material_w		double precision    := 0;
qt_itens_superior_w	smallint    	:= 0;
ds_texto_pri_w		varchar(100) 	:= '';
ds_texto_sec_w		varchar(100) 	:= '';
ds_texto_ter_w		varchar(100)	:= '';
ds_horarios2_W		varchar(250) 	:= '';
qt_dispensar_w		double precision	:= 0;
ie_regra_disp_w		varchar(255)	:= '';
ds_erro_w		varchar(255)	:= '';
ie_consistir_horarios_w varchar(1)	:= '';
obter_intervalo_w	varchar(1)	:= '';
ie_sn_w			varchar(1);
ie_acm_w		varchar(1);


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '')then
	begin
		select	coalesce(count(*),0)
		into STRICT	qt_itens_superior_w
		from	prescr_material a
		where  	nr_prescricao  	 = nr_prescricao_p
		and    	nr_agrupamento 	 = nr_agrupamento_p
		and	ie_item_superior = 'S';
		
		ds_texto_pri_w := obter_texto_tasy(36784,1);
		ds_texto_sec_w := obter_texto_tasy(36785,1);
		
		nr_intervalo_w		 := nr_intervalo_p;	
		ds_horarios_w		 := ds_horarios_p;
		
		if (dt_hora_inicio_p IS NOT NULL AND dt_hora_inicio_p::text <> '') then		
			SELECT * FROM calcular_horario_prescricao(nr_prescr_p, cd_intervalo_p, dt_prim_horario_presc_p, dt_hora_inicio_p, nr_hora_validade_p, cd_material_p, qt_hora_intervalo_p, qt_min_intervalo_p, nr_intervalo_w, ds_horarios_w, ds_horarios2_w, ie_solucao_p, ds_dose_diferenciada_p) INTO STRICT nr_intervalo_w, ds_horarios_w, ds_horarios2_w;

		elsif ((trim(both ds_horarios_p) IS NOT NULL AND (trim(both ds_horarios_p))::text <> '')) then

			  nr_intervalo_w := obter_ocorrencias_horarios_rep(ds_horarios_p);
		end if;
		
		qt_material_w 		:= qt_material_p;

		select 	coalesce(max(ie_se_necessario),'N'),
			coalesce(max(ie_acm),'N')
		into STRICT	ie_sn_w,
			ie_acm_w
		from 	prescr_material
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia  = nr_sequencia_p;
			
		SELECT * FROM Obter_Quant_Dispensar(cd_estabelecimento_p, cd_material_p, nr_prescricao_p, nr_sequencia_p, cd_intervalo_p, ie_via_aplicacao_p, qt_unitaria_p, qt_dose_esp_p, nr_ocorrencia_p, ds_dose_dif_p, ie_origem_inf_p, cd_unid_med_dose_p, qt_dias_p, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_sn_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
				
		select 	coalesce(max(ie_consistir_horarios),'N')
		into STRICT	ie_consistir_horarios_w
		from   	intervalo_prescricao 
		where  	cd_intervalo = cd_intervalo_p;
		
		obter_intervalo_w := obter_se_intervalo_correto(ds_horarios_p, cd_intervalo_p);
		
		ds_texto_ter_w := obter_texto_tasy(36801,1);		
	end;
end if;

nr_intervalo_p		:= nr_intervalo_w;	
ds_horarios_p		:= ds_horarios_w;
qt_material_p		:= qt_material_w;
qt_itens_superior_p 	:= qt_itens_superior_w;
ds_texto_pri_p		:= ds_texto_pri_w;
ds_texto_sec_p		:= ds_texto_sec_w;
ds_texto_ter_p		:= ds_texto_ter_w;
ds_horarios2_p		:= ds_horarios2_w;
qt_dispensar_p		:= qt_dispensar_w;
ie_regra_disp_p		:= ie_regra_disp_w;
ds_erro_p		:= ds_erro_w;
ie_consistir_horarios_p	:= ie_consistir_horarios_w;
obter_intervalo_p	:= obter_intervalo_w;

					
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE prescr_material_before_post ( nr_prescricao_p bigint, nr_agrupamento_p bigint, cd_intervalo_p text, dt_prim_horario_presc_p timestamp, dt_hora_inicio_p timestamp, nr_hora_validade_p bigint, cd_material_p bigint, qt_hora_intervalo_p bigint, qt_min_intervalo_p bigint, nr_intervalo_p INOUT bigint, ds_horarios_p INOUT text, ds_horarios2_p INOUT text, ie_solucao_p text, ds_dose_diferenciada_p text, cd_estabelecimento_p bigint, nr_prescr_p bigint, nr_sequencia_p bigint, ie_via_aplicacao_p text, qt_unitaria_p bigint, qt_dose_esp_p bigint, nr_ocorrencia_p bigint, ds_dose_dif_p text, ie_origem_inf_p text, cd_unid_med_dose_p text, qt_dias_p bigint, qt_material_p INOUT bigint, qt_dispensar_p INOUT bigint, ie_regra_disp_p INOUT text, ds_erro_p INOUT text, qt_itens_superior_p INOUT bigint, ds_texto_pri_p INOUT text, ds_texto_sec_p INOUT text, ds_texto_ter_p INOUT text, ie_consistir_horarios_p INOUT text, obter_intervalo_p INOUT text) FROM PUBLIC;

