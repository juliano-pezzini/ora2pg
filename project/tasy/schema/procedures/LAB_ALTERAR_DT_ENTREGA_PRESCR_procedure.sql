-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_alterar_dt_entrega_prescr (nr_prescricao_p bigint, cd_perfil_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
ie_ajustar_entrega_w		varchar(1);
dt_entrega_w			timestamp;
nr_seq_entrega_atend_w		bigint;
dt_entrega_atendimento_w	timestamp;
nr_atendimento_w		bigint;
qt_registros_w			bigint;
ie_maior_dt_prescr_w		varchar(1);
dt_entrega_prescr_w		timestamp;


BEGIN 
 
ie_ajustar_entrega_w := obter_param_usuario(924, 350, cd_perfil_p, nm_usuario_p, 0, ie_ajustar_entrega_w);
 
ie_maior_dt_prescr_w := obter_param_usuario(916, 751, cd_perfil_p, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_maior_dt_prescr_w);
 
IF (ie_ajustar_entrega_w	= 'S') THEN 
	CALL Ajustar_Data_Entrega_Prescr(nr_prescricao_p, 
				  nm_usuario_p, 
				  'S');
end if;
 
 
--Atualizar a Data de Entrega da Prescricao, pegando a maior entre a dt_prev_execuacao e dt_resultado dos procedimentos (Bruno) 
IF (ie_ajustar_entrega_w	= 'M') then 
	CALL Ajustar_Data_Entrega_Maior( nr_prescricao_p, 
						  nm_usuario_p);
END IF;
 
-- Guarda a data de entrega mais alta da prescricao na tabela de relacionamento com o atendimento 
--Bruno 
begin 
	 
	select 	max(a.dt_entrega), 
			max(coalesce(a.nr_atendimento,0)) 
	into STRICT	dt_entrega_w, 
			nr_atendimento_w 
	from	prescr_medica a 
	where	a.nr_prescricao = nr_prescricao_p 
	and		coalesce(a.dt_suspensao::text, '') = '' 
	and		exists (	SELECT	1 
						from 	prescr_procedimento b 
						where	b.nr_prescricao = a.nr_prescricao 
						and		coalesce(b.dt_suspensao::text, '') = ''  LIMIT 1);
 
	if (coalesce(nr_atendimento_w,0) > 0) then 
		select 	count(*) 
		into STRICT	qt_registros_w 
		from	atend_pac_data_entrega 
		where	nr_atendimento = nr_atendimento_w;
 
		if (qt_registros_w > 0 ) then 
		 
			select	nr_sequencia, 
					dt_entrega_atendimento 
			into STRICT	nr_seq_entrega_atend_w, 
					dt_entrega_atendimento_w 
			from	atend_pac_data_entrega 
			where	nr_atendimento = nr_atendimento_w;
		 
			if (ie_maior_dt_prescr_w = 'S') then 
			 
				select	max(a.dt_entrega) 
				into STRICT	dt_entrega_prescr_w 
				from	prescr_medica a 
				where 	a.nr_atendimento = nr_atendimento_w 
				and		coalesce(a.dt_suspensao::text, '') = '' 
				and		exists (	SELECT	1 
									from 	prescr_procedimento b 
									where	b.nr_prescricao = a.nr_prescricao 
									and		coalesce(b.dt_suspensao::text, '') = ''  LIMIT 1);	
				if (dt_entrega_prescr_w IS NOT NULL AND dt_entrega_prescr_w::text <> '') then 
				 
					update	atend_pac_data_entrega 
					set		dt_entrega_atendimento = dt_entrega_prescr_w, 
							nm_usuario = nm_usuario_p, 
							dt_atualizacao = clock_timestamp() 
					where	nr_sequencia = nr_seq_entrega_atend_w;
				end if;
				 
			else 
 
				if (trunc(dt_entrega_w) > trunc(dt_entrega_atendimento_w)) then 
					update	atend_pac_data_entrega 
					set		dt_entrega_atendimento = dt_entrega_w, 
							nm_usuario = nm_usuario_p, 
							dt_atualizacao = clock_timestamp() 
					where	nr_sequencia = nr_seq_entrega_atend_w;
				end if;
			end if;
		elsif (dt_entrega_w IS NOT NULL AND dt_entrega_w::text <> '') then 
			insert 
			into	atend_pac_data_entrega(nr_sequencia, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					dt_entrega_atendimento, 
					nr_atendimento) 
			values (nextval('atend_pac_data_entrega_seq'), 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					dt_entrega_w, 
					nr_atendimento_w);
 
		end if;
 
 
	end if;
exception 
	when others then 
		nr_atendimento_w := 0;
	end;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_alterar_dt_entrega_prescr (nr_prescricao_p bigint, cd_perfil_p bigint, nm_usuario_p text) FROM PUBLIC;

