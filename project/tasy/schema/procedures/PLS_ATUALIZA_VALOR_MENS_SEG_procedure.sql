-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualiza_valor_mens_seg ( nr_seq_mensalidade_seg_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
vl_mensalidade_w		double precision;
dt_mesano_referencia_w		timestamp;
nr_seq_contrato_w		bigint;
dt_ultima_mens_gerada_w		timestamp;
qt_mensalidade_w		bigint;
vl_pre_estabelecido_w		double precision;
vl_coparticipacao_w		double precision;
vl_outros_w			double precision;
vl_adicional_w			double precision;
vl_pos_estabelecido_w		double precision;
qt_itens_adic_w			bigint;
qt_bonific_w			bigint;
vl_pro_rata_dia_w		double precision;
vl_antecipacao_w		double precision;
qt_mensalidade_pagador_w	bigint;
nr_seq_mensalidade_w		bigint;
record_mensalidade_seg_w 	pls_mensalidade_segurado%rowtype;


BEGIN 
 
begin 
select	nr_seq_mensalidade, 
	NR_SEQ_SEGURADO, 
	DT_MESANO_REFERENCIA, 
	QT_IDADE, 
	NR_PARCELA 
into STRICT	nr_seq_mensalidade_w, 
	record_mensalidade_seg_w.nr_seq_segurado, 
	record_mensalidade_seg_w.dt_mesano_referencia, 
	record_mensalidade_seg_w.qt_idade, 
	record_mensalidade_seg_w.nr_parcela 
from	pls_mensalidade_segurado 
where	nr_sequencia	= nr_seq_mensalidade_seg_p;
 
record_mensalidade_seg_w.nr_sequencia		:= nr_seq_mensalidade_seg_p;
record_mensalidade_seg_w.nr_seq_mensalidade	:= nr_seq_mensalidade_w;
 
select	count(*) 
into STRICT	qt_mensalidade_pagador_w 
from	pls_mensalidade_seg_item 
where	nr_seq_mensalidade	= nr_seq_mensalidade_w;
exception 
when others then 
	qt_mensalidade_pagador_w	:= 0;
end;
 
select	count(*) 
into STRICT	qt_mensalidade_w 
from	pls_mensalidade_seg_item 
where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p;
 
/* Lepinski - OS 297189 - Não somar os valores do pagador ao valor do beneficiário */
 
select	sum(vl_item) 
into STRICT	vl_mensalidade_w 
from	pls_mensalidade_seg_item 
where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p 
and	coalesce(ie_tipo_mensalidade,'N') <> 'P';
 
select	count(*) 
into STRICT	qt_itens_adic_w 
from	pls_mensalidade_seg_item 
where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p 
and	coalesce(ie_tipo_mensalidade,'N')	= 'A';
 
select count(*) 
into STRICT  qt_bonific_w 
from  pls_mensalidade_seg_item 
where  nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p 
and   ie_tipo_item = '14';
 
/* qt_mensalidade_w	:= nvl(qt_mensalidade_w,0) + nvl(qt_mensalidade_pagador_w,0); Lepinski - comentado, pois no caso de existir vários beneficiários no mesmo contrato, existe o lançamento programado apra o pagador, não pode listar vários beneficiários com o vlaor zero*/
 
 
if (qt_mensalidade_w > 0)then 
	select	sum(vl_item) 
	into STRICT	vl_pre_estabelecido_w 
	from	pls_mensalidade_seg_item 
	where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p 
	and	ie_tipo_item	= '1' 
	and	coalesce(ie_tipo_mensalidade,'N')	= 'N';
 
	select	sum(vl_item) 
	into STRICT	vl_coparticipacao_w 
	from	pls_mensalidade_seg_item 
	where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p 
	and	ie_tipo_item	= '3' 
	and	coalesce(ie_tipo_mensalidade,'N')	= 'N';
 
	select	sum(vl_item) 
	into STRICT	vl_adicional_w 
	from	pls_mensalidade_seg_item 
	where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p 
	and	coalesce(ie_tipo_mensalidade,'N')	= 'A';
 
	select	sum(vl_item) 
	into STRICT	vl_pos_estabelecido_w 
	from	pls_mensalidade_seg_item 
	where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p 
	and	ie_tipo_item in ('6','7','8') 
	and	coalesce(ie_tipo_mensalidade,'N')	= 'N';
 
	select sum(vl_pro_rata_dia), 
		sum(vl_antecipacao) 
	into STRICT  vl_pro_rata_dia_w, 
		vl_antecipacao_w 
	from  pls_mensalidade_seg_item 
	where  nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p;
 
	record_mensalidade_seg_w.vl_mensalidade		:= coalesce(vl_mensalidade_w,0);
	record_mensalidade_seg_w.vl_coparticipacao	:= coalesce(vl_coparticipacao_w,0);
	record_mensalidade_seg_w.vl_pre_estabelecido	:= coalesce(vl_pre_estabelecido_w,0);
	record_mensalidade_seg_w.vl_outros		:= coalesce(vl_mensalidade_w,0) - coalesce(vl_pre_estabelecido_w,0) - coalesce(vl_coparticipacao_w,0) - coalesce(vl_pos_estabelecido_w,0);
	record_mensalidade_seg_w.vl_adicionais		:= coalesce(vl_adicional_w,0);
	record_mensalidade_seg_w.vl_pos_estabelecido	:= coalesce(vl_pos_estabelecido_w,0);
 
	update	pls_mensalidade_segurado 
	set	vl_mensalidade		= coalesce(vl_mensalidade_w,0), 
		vl_coparticipacao	= coalesce(vl_coparticipacao_w,0), 
		vl_pre_estabelecido	= coalesce(vl_pre_estabelecido_w,0), 
		vl_outros		= coalesce(vl_mensalidade_w,0) - coalesce(vl_pre_estabelecido_w,0) - coalesce(vl_coparticipacao_w,0) - coalesce(vl_pos_estabelecido_w,0), 
		vl_adicionais		= coalesce(vl_adicional_w,0), 
		vl_pos_estabelecido	= coalesce(vl_pos_estabelecido_w,0), 
		vl_pro_rata_dia		= vl_pro_rata_dia_w, 
		vl_antecipacao		= vl_antecipacao_w, 
		nm_usuario		= nm_usuario_p 
	where	nr_sequencia		= nr_seq_mensalidade_seg_p;
 
	CALL pls_criticar_mensalides_pck.updating_vector_mens_seg(record_mensalidade_seg_w);
 
	select	a.dt_mesano_referencia, 
		b.nr_seq_contrato, 
		coalesce(c.dt_ultima_mens_gerada,add_months(a.dt_mesano_referencia,-1)) 
	into STRICT	dt_mesano_referencia_w, 
		nr_seq_contrato_w, 
		dt_ultima_mens_gerada_w 
	FROM pls_mensalidade_segurado a, pls_segurado b
LEFT OUTER JOIN pls_contrato c ON (b.nr_seq_contrato = c.nr_sequencia)
LEFT OUTER JOIN pls_intercambio d ON (b.nr_seq_intercambio = d.nr_sequencia)
WHERE b.nr_sequencia		= a.nr_seq_segurado   and a.nr_sequencia		= nr_seq_mensalidade_seg_p;
 
	if (trunc(dt_ultima_mens_gerada_w,'month')	< trunc(dt_mesano_referencia_w,'month')) then 
		update	pls_contrato 
		set	dt_ultima_mens_gerada = dt_mesano_referencia_w 
		where	nr_sequencia	= nr_seq_contrato_w;
	end if;
else 
	if (qt_itens_adic_w = 0) then 
		update	pls_lancamento_mensalidade a 
		set	a.nr_seq_mensalidade_item	 = NULL, 
			ie_situacao	= 'A' 
		where	exists (SELECT	1 
				from	pls_mensalidade_seg_item x 
				where	x.nr_sequencia	= a.nr_seq_mensalidade_item 
				and	x.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p);
 
		update	pls_conta_coparticipacao 
		set	nr_seq_mensalidade_seg  = NULL 
		where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p;
 
		update	pls_conta_pos_estabelecido 
		set	nr_seq_mensalidade_seg	 = NULL, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p;
 
		update	pls_segurado_mensalidade a 
		set	a.nr_seq_item_mensalidade  = NULL, 
			a.dt_atualizacao = clock_timestamp(), 
			a.nm_usuario = nm_usuario_p 
		where	exists (SELECT	1 
				from	pls_mensalidade_seg_item x 
				where	x.nr_sequencia	= a.nr_seq_item_mensalidade 
				and	x.nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p);
 
		delete	from	pls_mensalidade_seg_adic 
		where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p;
 
		delete	from 	pls_mensalidade_seg_item 
		where	nr_seq_mensalidade_seg	= nr_seq_mensalidade_seg_p;
 
		delete	from	pls_mensalidade_segurado 
		where	nr_sequencia	= nr_seq_mensalidade_seg_p;
	end if;
end if;
 
/* Não dar commit */
 
--commit; 
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualiza_valor_mens_seg ( nr_seq_mensalidade_seg_p bigint, nm_usuario_p text) FROM PUBLIC;

