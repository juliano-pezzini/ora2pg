-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_d301_segmento_ena (nr_seq_dataset_p bigint, nm_usuario_p text) AS $body$
DECLARE

 c01 CURSOR FOR 
  SELECT d3.nr_sequencia,  
      null             nr_seq_301_tipo_pag, 
      pp.cd_especialidade     cd_especialidade, 
      pp.ds_observacao       ds_justif_cobranca, 
      null             ie_taxa_pacote, 
      pp.dt_procedimento      ds_dt_tratamento, 
      null             qt_ponto_ebm, 
      null             nr_cobranca, 
      null             vl_ponto_ebm, 
      pp.vl_custo_operacional   vl_taxa, 
      null             ie_dupla_investigacao, 
      obter_equipe_medico_espec(pp.cd_especialidade,pp.cd_medico_executor) cd_membro_equipe, 
      obter_equipe_medico_espec(pp.cd_especialidade,pp.cd_medico_executor) nr_seq_cargo_equipe, 
      null             cd_ebm_tipo_exame, 
      null             qt_ebm_exame 
   from procedimento_paciente pp, 
     d301_dataset_envio  d3 
   where d3.nr_sequencia   = nr_seq_dataset_p 
   and  d3.nr_atendimento  = pp.nr_atendimento;

 c01_w c01%rowtype;

 nr_seq_301_indic_adic_ebm_w c301_conversao_dados.ds_valor_tasy%type;
 cd_membro_equipe_w     c301_conversao_dados.ds_valor_tasy%type;
 nr_seq_301_nivel_equipe_w  c301_conversao_dados.ds_valor_tasy%type;

BEGIN
 open c01;
 fetch c01 into c01_w;
 loop 
  
   nr_seq_301_indic_adic_ebm_w := obter_conversao_301('C301_19_INDIC_ADIC_EBM','ESPECIALIDADE_MEDICA',null,c01_w.cd_especialidade,'I');
   cd_membro_equipe_w     :='';
   nr_seq_301_nivel_equipe_w  := obter_conversao_301('C301_NIVEL_EQUIPE','PF_CARGO_EQUIPE',null,c01_w.nr_seq_cargo_equipe,'I');
   
    
   insert into d301_segmento_ena(nr_sequencia, 
                  dt_atualizacao, 
                  nm_usuario, 
                  dt_atualizacao_nrec, 
                  nm_usuario_nrec, 
                  nr_seq_301_tipo_pag, 
                  nr_seq_301_indic_adic_ebm, 
                  ds_justif_cobranca, 
                  ie_taxa_pacote, 
                  ds_dt_tratamento, 
                  qt_ponto_ebm, 
                  nr_cobranca, 
                  vl_ponto_ebm, 
                  vl_taxa, 
                  ie_dupla_investigacao, 
                  cd_membro_equipe, 
                  nr_seq_301_nivel_equipe, 
                  cd_ebm_tipo_exame, 
                  qt_ebm_exame, 
                  nr_seq_dataset, 
                  nr_seq_dataset_ret) values (nextval('d301_segmento_ena_seq'), 
                                clock_timestamp(), 
                                nm_usuario_p, 
                                clock_timestamp(), 
                                nm_usuario_p, 
                                c01_w.nr_seq_301_tipo_pag, 
                                nr_seq_301_indic_adic_ebm_w, 
                                c01_w.ds_justif_cobranca,   
                                c01_w.ie_taxa_pacote, 
                                c01_w.ds_dt_tratamento, 
                                c01_w.qt_ponto_ebm, 
                                c01_w.nr_cobranca, 
                                c01_w.vl_ponto_ebm, 
                                c01_w.vl_taxa, 
                                c01_w.ie_dupla_investigacao, 
                                cd_membro_equipe_w, 
                                nr_seq_301_nivel_equipe_w, 
                                c01_w.cd_ebm_tipo_exame, 
                                c01_w.qt_ebm_exame, 
                                nr_seq_dataset_p, 
                                null );
      
  
  fetch c01 into c01_w;
  EXIT WHEN NOT FOUND; /* apply on c01 */
                              
  end loop;
  close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_d301_segmento_ena (nr_seq_dataset_p bigint, nm_usuario_p text) FROM PUBLIC;

