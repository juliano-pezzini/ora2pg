-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE duplicar_passagem_turno ( nr_ocorrencia_p bigint, nm_usuario_p text, nr_ocorrencia_criada_p INOUT bigint) AS $body$
DECLARE


cd_pessoa_fisica_w             varchar(10);
DS_OCORRENCIA                  text;
nr_seq_ocorrencia_w            bigint;
dataCopia                      timestamp;
iePassagemTemAvaliacao_w       char;
ieTipoOcorrenciaTemAvaliacao_w char;
ieTipoOcorrencia_w             varchar(2);

C01 CURSOR FOR
	SELECT	cd_setor_atendimento,
		ie_tipo_ocorrencia,
		cd_estabelecimento
	from	ocorrencia
	where	nr_ocorrencia = nr_ocorrencia_p;

c01_w	c01%rowtype;


BEGIN

select 	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	usuario
where	nm_usuario = nm_usuario_p;

select	nextval('ocorrencia_seq')
into STRICT	nr_seq_ocorrencia_w
;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
    ieTipoOcorrencia_w := c01_w.ie_tipo_ocorrencia;
	insert into ocorrencia(
		nr_ocorrencia,
		dt_ocorrencia,
		ie_tipo_ocorrencia,
		dt_atualizacao,
		nm_usuario,
		cd_pessoa_fisica,
		cd_setor_atendimento,
		cd_estabelecimento,
		ie_situacao)
	values (nr_seq_ocorrencia_w,
		clock_timestamp(),
		c01_w.ie_tipo_ocorrencia,
		clock_timestamp(),
		nm_usuario_p,
		cd_pessoa_fisica_w,
		c01_w.cd_setor_atendimento,
		c01_w.cd_estabelecimento,
		'A');
		end;
end loop;
close C01;

nr_ocorrencia_criada_p := nr_seq_ocorrencia_w;

commit;

begin
	copia_campo_long_de_para_java('ocorrencia',
				      'ds_ocorrencia',
				      ' where nr_ocorrencia = :nr_ocorrencia ',
				      'nr_ocorrencia='||nr_ocorrencia_p,
				      'ocorrencia',
				      'ds_ocorrencia',
				      ' where nr_ocorrencia = :nr_ocorrencia',
				      'nr_ocorrencia='||nr_seq_ocorrencia_w,
				      'L');
exception
when others then
	CALL copia_campo_long_de_para('ocorrencia',
				'ds_ocorrencia',
				' where nr_ocorrencia = :nr_ocorrencia ',
				'nr_ocorrencia='||nr_ocorrencia_p,
				'ocorrencia',
				'ds_ocorrencia',
				' where nr_ocorrencia = :nr_ocorrencia',
				'nr_ocorrencia='||nr_seq_ocorrencia_w);
end;

select coalesce(max('S'), 'N')
into STRICT   iePassagemTemAvaliacao_w
from   ocorrencia_result
where  nr_ocorrencia = nr_ocorrencia_p;

select coalesce(max('S'), 'N')
into STRICT   ieTipoOcorrenciaTemAvaliacao_w
from   tipo_ocorrencia_turno
where  cd_tipo_ocorrencia = ieTipoOcorrencia_w
and    (nr_seq_tipo_avaliacao IS NOT NULL AND nr_seq_tipo_avaliacao::text <> '');


if (iePassagemTemAvaliacao_w = 'S' AND ieTipoOcorrenciaTemAvaliacao_w = 'S') then
    dataCopia := clock_timestamp();

    insert into ocorrencia_result(  nr_ocorrencia,
                                    nr_seq_item,
                                    qt_resultado,
                                    dt_atualizacao,
                                    nm_usuario,
                                    dt_atualizacao_nrec,
                                    nm_usuario_nrec,
                                    ds_resultado)
                            SELECT  nr_seq_ocorrencia_w,
                                    nr_seq_item,
                                    qt_resultado,
                                    dataCopia,
                                    nm_usuario_p,
                                    dataCopia,
                                    nm_usuario_p,
                                    ds_resultado
                               from ocorrencia_result
                              where nr_ocorrencia = nr_ocorrencia_p;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE duplicar_passagem_turno ( nr_ocorrencia_p bigint, nm_usuario_p text, nr_ocorrencia_criada_p INOUT bigint) FROM PUBLIC;

