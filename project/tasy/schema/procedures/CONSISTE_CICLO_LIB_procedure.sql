-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consiste_ciclo_lib ( nr_seq_paciente_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, ie_regra_lib_ciclo_p text default null) AS $body$
DECLARE


nr_ciclo_w		smallint;
ie_regra_lib_w		varchar(10);
ds_mensagem_w		varchar(4000);
ds_texto1_w		varchar(500);
ds_texto2_w		varchar(500);
i			smallint;
caractere		varchar(1);


BEGIN
ie_regra_lib_w	:= coalesce(ie_regra_lib_ciclo_p, Obter_Valor_Param_Usuario(281,116, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario,0));

if (ie_regra_lib_w = 'S') then
	ie_regra_lib_w := 'M'; -- altera porque o parâmetro 116 era somente 'S' ou 'N' e foi alterado para o domínio.
end if;

if (ie_regra_lib_w <> 'N') then

	for i in 1..length(ie_regra_lib_w) loop
		begin
		caractere := substr(ie_regra_lib_w, i, 1);
		
		select	coalesce(max(nr_ciclo),0)
		into STRICT	nr_ciclo_w
		from	paciente_setor_lib
		where	nr_seq_paciente	= nr_seq_paciente_p
		and	coalesce(dt_cancelamento::text, '') = ''
		and	coalesce(ie_tipo_liberacao,'M') = caractere;

		if (nr_ciclo_final_p > nr_ciclo_w) then
			if (caractere = 'M') then
				ds_texto1_w	:= wheb_mensagem_pck.get_texto(278860);
				ds_texto2_w	:= wheb_mensagem_pck.get_texto(278861);
			elsif (caractere = 'E') then
				ds_texto1_w	:= wheb_mensagem_pck.get_texto(278862);
				ds_texto2_w	:= wheb_mensagem_pck.get_texto(278864);
			elsif (caractere = 'F') then
				ds_texto1_w	:= wheb_mensagem_pck.get_texto(278866);
				ds_texto2_w	:= wheb_mensagem_pck.get_texto(278868);
			elsif (caractere = 'N') then
				ds_texto1_w	:= wheb_mensagem_pck.get_texto(278869);
				ds_texto2_w	:= wheb_mensagem_pck.get_texto(278870);
			else
				ds_texto1_w	:= wheb_mensagem_pck.get_texto(278871);
				ds_texto2_w	:= wheb_mensagem_pck.get_texto(278872);
			end if;
			
			if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
				ds_mensagem_w := ds_mensagem_w || chr(13)||chr(10);
			end if;
 			if (ds_texto1_w IS NOT NULL AND ds_texto1_w::text <> '') then
     			 	  ds_texto1_w := ds_texto1_w ||' ';
    			  end if;
			ds_mensagem_w := ds_mensagem_w || ds_texto1_w || wheb_mensagem_pck.get_texto(278873, 'NR_CICLO_P=' || to_char(nr_ciclo_w) || ';DS_TEXTO2_P=' || ds_texto2_w);
		end if;
		
		end;
	end loop;

	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(278880, 'DS_MENSAGEM_P=' || ds_mensagem_w);
	end if;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consiste_ciclo_lib ( nr_seq_paciente_p bigint, nr_ciclo_inicial_p bigint, nr_ciclo_final_p bigint, ie_regra_lib_ciclo_p text default null) FROM PUBLIC;

