-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_leite_rotina ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_p text, cd_perfil_p bigint) AS $body$
DECLARE

 
cd_intervalo_w			intervalo_prescricao.cd_intervalo%type;

ie_via_aplicacao_w		via_aplicacao.ie_via_aplicacao%type;

nr_seq_disp_succao_w	dispositivo_succao.nr_sequencia%type;

nr_seq_leite_deriv_w	prescr_leite_deriv.nr_sequencia%type;
qt_volume_total_w		prescr_leite_deriv.qt_volume_total%type;
qt_volume_oral_w		prescr_leite_deriv.qt_volume_oral%type;
qt_volume_sonda_w		prescr_leite_deriv.qt_volume_sonda%type;
ie_se_necessario_w		prescr_leite_deriv.ie_se_necessario%type;
hr_prim_horario_w		prescr_leite_deriv.hr_prim_horario%type;

qt_dose_w				prescr_material.qt_dose%type;
qt_porcentagem_w		prescr_material.qt_porcentagem%type;
nr_sequencia_w			prescr_material.nr_sequencia%type := null;
nr_sequencia_dil_w		nr_sequencia_w%type := null;
ds_horarios_w			prescr_material.ds_horarios%type;
ds_horarios_ww			ds_horarios_w%type;

nr_agrupamento_w		prescr_material.nr_agrupamento%type;

nr_horas_validade_w		prescr_medica.nr_horas_validade%type;

cd_material_w			material.cd_material%type;
cd_diluente_w			cd_material_w%type;

nr_seq_prot_leite_w		protocolo_medic_leite.nr_sequencia%type;

nr_seq_prod_w			protocolo_medic_produto.nr_sequencia%type;

cd_unidade_medida_w		unidade_medida.cd_unidade_medida%type;

dt_prim_hor_prescr_w	timestamp;
dt_inicio_prescr_w		timestamp;

hr_prim_hor_prescr_w	varchar(5);
nr_ocorrencia_w			double precision;
cd_unidade_med_dil_w	varchar(30);
ds_erro_w				varchar(255);

c01 CURSOR FOR 
SELECT	cd_intervalo, 
		coalesce(ie_se_necessario,'N'), 
		hr_prim_horario, 
		ie_via_aplicacao, 
		qt_volume_oral, 
		qt_volume_sonda, 
		nr_seq_disp_succao, 
		nr_sequencia 
from	protocolo_medic_leite 
where	nr_sequencia	= nr_sequencia_p;

c02 CURSOR FOR 
SELECT	cd_material, 
		nr_sequencia 
from	protocolo_medic_produto 
where	nr_seq_prot_leite	= nr_seq_prot_leite_w;

c03 CURSOR FOR 
SELECT	cd_material, 
		qt_porcentagem, 
		cd_unidade_medida_dose, 
		qt_dose 
from	protocolo_medic_prod_adic 
where	nr_seq_produto	=	nr_seq_prod_w;

c04 CURSOR FOR 
SELECT	nr_sequencia, 
		nr_seq_leite_deriv 
from	prescr_material 
where	nr_prescricao	= nr_prescricao_p 
and		ie_agrupador	= 16;


BEGIN 
 
select	max(dt_inicio_prescr), 
		coalesce(max(nr_horas_validade),24), 
		to_char(max(dt_primeiro_horario),'hh24:mi') 
into STRICT	dt_inicio_prescr_w, 
		nr_horas_validade_w, 
		hr_prim_hor_prescr_w 
from	prescr_medica 
where	nr_prescricao	= nr_prescricao_p;
 
select	coalesce(max(nr_sequencia),0) 
into STRICT	nr_sequencia_w 
from	prescr_material 
where	nr_prescricao	= nr_prescricao_p;
		 
open C01;
loop 
fetch C01 into	 
	cd_intervalo_w, 
	ie_se_necessario_w, 
	hr_prim_horario_w, 
	ie_via_aplicacao_w, 
	qt_volume_oral_w, 
	qt_volume_sonda_w, 
	nr_seq_disp_succao_w, 
	nr_seq_prot_leite_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
	 
	if (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') then 
		 
		if (coalesce(hr_prim_horario_w,' : ') = ' : ') then 
			hr_prim_horario_w	:= obter_primeiro_horario(cd_intervalo_w, nr_prescricao_p, null,null);
		end if;
		 
		dt_prim_hor_prescr_w	:= to_date(to_char(dt_inicio_prescr_w,'dd/mm/yyyy')||' '||coalesce(hr_prim_horario_w,hr_prim_hor_prescr_w)||':00','dd/mm/yyyy hh24:mi:ss');
 
		if (dt_inicio_prescr_w	> dt_prim_hor_prescr_w) then 
			dt_prim_hor_prescr_w	:= dt_prim_hor_prescr_w + 1;
		end if;	
		 
		qt_volume_total_w	:= coalesce(qt_volume_oral_w,0)	+ coalesce(qt_volume_sonda_w,0);
 
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, dt_prim_hor_prescr_w, dt_prim_hor_prescr_w, nr_horas_validade_w, null, 0, 0, nr_ocorrencia_w, ds_horarios_w, ds_horarios_ww, 'N', null, null, null, null, null) INTO STRICT nr_ocorrencia_w, ds_horarios_w, ds_horarios_ww;
 
		ds_horarios_w	:= eliminar_horarios_vigencia(ds_horarios_w, cd_intervalo_w, dt_prim_hor_prescr_w, dt_inicio_prescr_w, 0, 0, nr_prescricao_p);			
					   
		select	nextval('prescr_leite_deriv_seq') 
		into STRICT	nr_seq_leite_deriv_w 
		;
		 
		insert into	prescr_leite_deriv(nr_sequencia, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec, 
							nr_prescricao, 
							cd_intervalo, 
							ie_via_aplicacao, 
							qt_volume_oral, 
							qt_volume_sonda, 
							qt_volume_total, 
							nr_seq_disp_succao, 
							ie_se_necessario, 
							ds_horarios, 
							hr_prim_horario 
			) values ( 
							nr_seq_leite_deriv_w, 
							clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p, 
							nr_prescricao_p, 
							cd_intervalo_w, 
							ie_via_aplicacao_w, 
							qt_volume_oral_w, 
							qt_volume_sonda_w, 
							qt_volume_total_w, 
							nr_seq_disp_succao_w, 
							ie_se_necessario_w, 
							ds_horarios_w, 
							hr_prim_horario_w);
							 
		nr_agrupamento_w	:= 0;
		 
		open C02;
		loop 
		fetch C02 into	 
			cd_material_w, 
			nr_seq_prod_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			nr_sequencia_w		:= nr_sequencia_w + 1;
			nr_agrupamento_w	:= nr_agrupamento_w + 1;
			 
			select	max(cd_unidade_medida_consumo) 
			into STRICT	cd_unidade_medida_w 
			from	material 
			where	cd_material	= cd_material_w;
			 
			insert	into prescr_material( 
							nr_sequencia, 
							nr_prescricao, 
							cd_material, 
							cd_unidade_medida_dose, 
							cd_unidade_medida, 
							dt_atualizacao, 
							ie_origem_inf, 
							nm_usuario, 
							ie_agrupador, 
							qt_material, 
							qt_unitaria, 
							nr_seq_leite_deriv, 
							nr_agrupamento, 
							ds_horarios, 
							nr_ocorrencia, 
							cd_intervalo, 
							hr_prim_horario 
						) values (	 
							nr_sequencia_w, 
							nr_prescricao_p, 
							cd_material_w, 
							obter_unid_med_usua('ml'), 
							cd_unidade_medida_w,					 
							clock_timestamp(), 
							'1', 
							nm_usuario_p, 
							16, 
							0, 
							0, 
							nr_seq_leite_deriv_w, 
							nr_agrupamento_w, 
							ds_horarios_w, 
							nr_ocorrencia_w, 
							cd_intervalo_w, 
							hr_prim_horario_w);
			 
			nr_sequencia_dil_w := nr_sequencia_w;
			 
			open C03;
			loop 
			fetch C03 into	 
				cd_diluente_w, 
				qt_porcentagem_w, 
				cd_unidade_med_dil_w, 
				qt_dose_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin 
 
				nr_sequencia_dil_w	:= nr_sequencia_dil_w + 1;
				 
				insert	into prescr_material(nr_sequencia, 
								nr_prescricao, 
								cd_material, 
								cd_unidade_medida_dose, 
								cd_unidade_medida, 
								dt_atualizacao, 
								ie_origem_inf, 
								nm_usuario, 
								ie_agrupador, 
								qt_material, 
								qt_unitaria, 
								nr_seq_leite_deriv, 
								nr_agrupamento, 
								nr_sequencia_diluicao, 
								qt_porcentagem, 
								qt_dose, 
								hr_prim_horario, 
								ds_horarios, 
								nr_ocorrencia 
							) values ( 
								nr_sequencia_dil_w, 
								nr_prescricao_p, 
								cd_diluente_w, 
								cd_unidade_med_dil_w, 
								cd_unidade_med_dil_w, 
								clock_timestamp(), 
								'1', 
								nm_usuario_p, 
								17, 
								0, 
								0, 
								nr_seq_leite_deriv_w, 
								nr_agrupamento_w, 
								nr_sequencia_w, 
								qt_porcentagem_w, 
								qt_dose_w, 
								hr_prim_horario_w, 
								ds_horarios_w, 
								nr_ocorrencia_w);			
				 
				nr_sequencia_w	:= nr_sequencia_dil_w;
				end;
			end loop;
			close C03;
			end;
		end loop;
		close C02;
		CALL atualiza_produto_lactario(nr_seq_leite_deriv_w, nm_usuario_p, cd_perfil_p);	
	end if;
	end;
end loop;
close C01;
 
commit;
 
if (nr_seq_leite_deriv_w IS NOT NULL AND nr_seq_leite_deriv_w::text <> '') then 
	ds_erro_w := consistir_prod_leites_deriv(nr_prescricao_p, null, nr_seq_leite_deriv_w, nm_usuario_p, cd_perfil_p, ds_erro_w);
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_leite_rotina ( nr_prescricao_p bigint, nr_sequencia_p bigint, nm_usuario_p text, cd_perfil_p bigint) FROM PUBLIC;

