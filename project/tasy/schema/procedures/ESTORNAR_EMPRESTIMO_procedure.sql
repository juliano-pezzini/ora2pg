-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE estornar_emprestimo ( nr_emprestimo_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

						
	cd_material_w			emprestimo_material.cd_material%type;	
	cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
	ie_estoque_lote_w		material_estab.ie_estoque_lote%type;	
	nr_lote_fornec_w		material_lote_fornec.nr_sequencia%type;
	qt_existe_w		integer;
	
c01 CURSOR FOR
SELECT	cd_material
from	emprestimo_material
where	nr_emprestimo = nr_emprestimo_p;

	

BEGIN
if (nr_emprestimo_p IS NOT NULL AND nr_emprestimo_p::text <> '') then

	select		cd_estabelecimento
		into STRICT	cd_estabelecimento_w
		from	emprestimo
		where	nr_emprestimo = nr_emprestimo_p;		

	open c01;
	loop
	fetch c01 into
		cd_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
      	begin
		if (coalesce(ds_erro_p::text, '') = '') then
		ie_estoque_lote_w := obter_se_material_estoque_lote(cd_estabelecimento_w, cd_material_w);	
		
			if (ie_estoque_lote_w = 'S') then
				select	max(nr_sequencia)
					into STRICT	nr_lote_fornec_w	
					from	material_lote_fornec
					where	nr_emprestimo = nr_emprestimo_p
					and 	cd_material = cd_material_w;
					
				select	count(*)
					into STRICT	qt_existe_w
					from	lote_fornec_utilizado_v
					where	nr_seq_lote_fornec = nr_lote_fornec_w;
			
					if (qt_existe_w = 0) then
						begin
							delete FROM saldo_estoque_lote
							where nr_seq_lote = nr_lote_fornec_w;
							
							update	emprestimo_material
							set		nr_seq_lote 	 = NULL 			
							where	nr_emprestimo = nr_emprestimo_p
							and 	cd_material   = cd_material_w
							and     nr_seq_lote   = nr_lote_fornec_w;
							
							delete from 	material_lote_fornec
							where 		nr_sequencia = nr_lote_fornec_w;					
							exception
								when others then
								ds_erro_p	:=  WHEB_MENSAGEM_PCK.get_texto(176857, 'DS_MACRO= ' || nr_lote_fornec_w || '. ') || WHEB_MENSAGEM_PCK.get_texto(280350);		
								rollback;									
						end;		
					end if;			
				end if;	
			end if;
		end;
	end loop;
	close c01;	

	if (coalesce(ds_erro_p::text, '') = '') then
		commit;
	end if;
	
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE estornar_emprestimo ( nr_emprestimo_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

