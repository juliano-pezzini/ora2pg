-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_guia_morte_fetal_noms ( dt_inicial_p timestamp, dt_final_p timestamp, ie_sobreescrever_p text, nm_usuario_p text) AS $body$
DECLARE

			
			
record_w 		guia_morte_fetal_noms%ROWTYPE;
qt_registros_w		bigint;
valor_local_obito_w varchar(2);
person_name_mae_w	person_name.nr_sequencia%TYPE;
person_name_cert_w	person_name.nr_sequencia%TYPE;
person_name_inf_w		person_name.nr_sequencia%TYPE;
nr_seq_morte_fetal_w	guia_morte_fetal_noms.nr_sequencia%type;
nr_seq_person_name_w	person_name.nr_sequencia%type;
cd_pessoa_fisica_mae_w		pessoa_fisica.cd_pessoa_fisica%type;
cd_estabelecimento_w	atendimento_paciente.cd_estabelecimento%type;
ie_risco_gravidez_w 	atendimento_gravidez.ie_risco_gravidez%type;
count_linha_w		bigint;
nr_seq_catalogo_estab_w	end_catalogo.nr_sequencia%type;
qt_nascimento_atual_w	bigint;
qt_natimorto_atual_w	bigint;

c01 CURSOR FOR
	SELECT	a.nr_atendimento nr_atendimento_filho,
		a.nr_atendimento_mae nr_atendimento_mae,
		b.dt_obito,
		a.cd_estabelecimento
	from	atendimento_paciente a,
		declaracao_obito b,
		pessoa_fisica p
	where	(a.nr_atendimento_mae IS NOT NULL AND a.nr_atendimento_mae::text <> '')
	and	a.nr_atendimento = b.nr_atendimento
	and	p.cd_pessoa_fisica = a.cd_pessoa_fisica
	and	b.ie_situacao = 'A'
	and	b.dt_obito between pkg_date_utils.start_of(dt_inicial_p,'MONTH') and pkg_date_utils.end_of(dt_final_p,'MONTH')
	and	not exists (
		SELECT 	1
		from	guia_morte_fetal_noms x
		where 	x.nr_atendimento = a.nr_atendimento)
	and	exists (
		select 	1
		from	nascimento x
		where	x.ie_unico_nasc_vivo = 'N'
		and	x.nr_atend_rn = a.nr_atendimento);

c_dados_produto CURSOR FOR
SELECT lpad((x.nr_declaracao)::numeric ,9,'0') NR_FOLIO,
	lpad(x.nr_declaracao,9,'0') NR_FOLIO_CONTROL,
	CASE WHEN coalesce(b.ie_sexo,'X')='F' THEN '2' WHEN coalesce(b.ie_sexo,'X')='M' THEN '1'  ELSE '9' END  IE_SEXO_PROD,
	coalesce(coalesce(b.qt_sem_ig_total, obter_idade_gest_parto(b.nr_atendimento)),'88') QT_IDADE_PROD,
	rpad(coalesce(b.qt_peso_sala_parto,'9999'),4) QT_PESO_PROD,
	CASE WHEN coalesce(b.ie_tipo_nascimento,'')='10' THEN '2' WHEN coalesce(b.ie_tipo_nascimento,'')='11' THEN '2' WHEN coalesce(b.ie_tipo_nascimento,'')='5' THEN '1'  ELSE '2' END  IE_TIPO_NASCIMENTO,	
	to_char(b.dt_nascimento, 'dd') NR_DIA_NASCIMENTO,
	to_char(b.dt_nascimento, 'mm') NR_MES_NASCIMENTO,
	to_char(b.dt_nascimento, 'yyyy') NR_ANO_NASCIMENTO,
	to_char(b.dt_nascimento, 'HH24') NR_HORA_NASCIMENTO,
	to_char(b.dt_nascimento, 'MI') NR_MIN_NASCIMENTO,
	rpad(Elimina_Acentuacao(b.ds_observacao),50) DS_ESPEC_PARTO,
	CASE WHEN coalesce(x.IE_AUTOPSIA,'N')='S' THEN '1'  ELSE '2' END  IE_NECROPCIA,
	b.dt_nascimento
from	nascimento b,
	declaracao_obito x
where	b.nr_atendimento 			= record_w.nr_atendimento_mae
and 	x.nr_atendimento			= b.nr_atend_rn
and		b.nr_atend_rn 				= record_w.nr_atendimento  LIMIT 1;

c_dados_produto_w c_dados_produto%ROWTYPE;


c_dados_mae CURSOR FOR
SELECT	y.NR_SEQUENCIA NR_SEQ_PERSON_NAME_MAE,
	coalesce(b.cd_curp,'XXXX999999XXXXXX99') cd_curp_mae,
	b.cd_nacionalidade cd_nacionalidade,
	--(select a.cd_pais from cat_pais a, pais p where c.nr_seq_pais = p.nr_sequencia and a.nr_sequencia = p.nr_seq_cat_pais) cd_pais_mae,
	(SELECT p.cd_codigo_pais from  pais p where c.nr_seq_pais = p.nr_sequencia) cd_pais_mae,
	b.IE_CONSIDERA_INDIO nr_seq_lingua_indig_mae,
	(CASE WHEN (b.dt_nascimento IS NOT NULL AND b.dt_nascimento::text <> '') THEN obter_idade(b.dt_nascimento,clock_timestamp(),'A') ELSE '99' END)  qt_idade_mae,
	coalesce(CASE WHEN b.ie_estado_civil=11 THEN 5 WHEN b.ie_estado_civil=12 THEN 1 WHEN b.ie_estado_civil=13 THEN 3 WHEN b.ie_estado_civil=14 THEN 2 WHEN b.ie_estado_civil=15 THEN 4 WHEN b.ie_estado_civil=16 THEN 6 WHEN b.ie_estado_civil=99 THEN 9 END ,'9') ie_estado_civil_mae,
	coalesce(UPPER(Elimina_Acentuacao(coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D'), c.ds_endereco))),'NO ESPECIFICADO') ds_endereco_mae,
	coalesce(coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'NUMERO','D') || ' ','') || coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D'),''), 'SE IGNORA')  nr_exterior_mae,
	coalesce(coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'NUMERO_INT','D') || ' ','') || coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'COMPLEMENTO','D'),''), 'SE IGNORA') nr_interior_mae,
	coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C'), obter_conversao_catalogo_nom('MUERTES_FETALES','TIPO_BAIRRO','R','NO_ESPECIFICADO')) cd_tipo_asentamiento_mae,
	get_info_end_endereco(c.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_asentamiento_mae,
	get_info_end_endereco(c.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_codigo_postal_mae,
	coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco, 'TIPO_LOGRAD', 'C'), obter_conversao_catalogo_nom('MUERTES_FETALES','TIPO_LOGRAD','R', 'NO_ESPECIFICADO')) cd_tipo_vialidad_mae,
	coalesce(UPPER(Elimina_Acentuacao(coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'BAIRRO_VILA','D'), c.DS_BAIRRO))), 'NO ESPECIFICADO') ds_bairro_mae,
	coalesce(coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C'), obter_dados_cat_localidade(c.nr_seq_localizacao_mx,'CD_CAT_LOCALIDADE')),obter_conversao_catalogo_nom('MUERTES_FETALES','LOCALIDADE_AREA','R','NO_ESPECIFICADO')) cd_localidade_mae,
	coalesce(coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'MUNICIPIO','C'), obter_dados_cat_localidade(c.nr_seq_localizacao_mx,'CD_CAT_MUNICIPIO')),obter_conversao_catalogo_nom('MUERTES_FETALES','MUNICIPIO','R','NO_ESPECIFICADO'))  cd_municipio_mae,
	coalesce(coalesce(get_info_end_endereco(c.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C'), obter_dados_cat_localidade(c.nr_seq_localizacao_mx,'CD_EFE')),obter_conversao_catalogo_nom('MUERTES_FETALES','ESTADO_PROVINCI','R','NO_ESPECIFICADO')) cd_estado_mae,
	coalesce(c.nr_ddd_telefone, '') || coalesce(c.nr_telefone, '9999999999') nr_telefone_mae,
	CASE WHEN c.nr_telefone='' THEN  '99'  ELSE c.nr_ddi_telefone END  nr_ddi_fone_mae,
	(select max(x.ie_ocupacao_habitual) from complemento_mexico x where nr_atendimento = record_w.nr_atendimento_mae) cd_cargo_mae,
	--nvl(b.ie_ocupacao_habitual, case when obter_idade(b.dt_nascimento, sysdate, 'A') >= 11 then '00' else '97' end) cd_cargo_mae,
	(select max(x.ie_trabalha_atual) from complemento_mexico x where nr_atendimento = record_w.nr_atendimento_mae) ie_trabalha_mae,
	--nvl2(b.ie_ocupacao_habitual,'1','9') ie_trabalha_mae,
	(coalesce(p.qt_gestacoes, '0') + 1) qt_gestacoes,
	p.ie_tipo_gravidez ie_embarazo_esp_assis,
	case when obter_idade(b.dt_nascimento, clock_timestamp(), 'A') < 4 then '88' else CASE WHEN b.ie_grau_instrucao='1' THEN '03' WHEN b.ie_grau_instrucao='2' THEN '02' WHEN b.ie_grau_instrucao='3' THEN '05' WHEN b.ie_grau_instrucao='4' THEN '04' WHEN b.ie_grau_instrucao='5' THEN '07' WHEN b.ie_grau_instrucao='6' THEN '06' WHEN b.ie_grau_instrucao='7' THEN '09' WHEN b.ie_grau_instrucao='8' THEN '08' WHEN b.ie_grau_instrucao='9' THEN '11' WHEN b.ie_grau_instrucao='10' THEN '10' WHEN b.ie_grau_instrucao='11' THEN '11' WHEN b.ie_grau_instrucao='12' THEN '10' WHEN b.ie_grau_instrucao='16' THEN '11' WHEN b.ie_grau_instrucao='17' THEN '10' WHEN b.ie_grau_instrucao='18' THEN '12' WHEN b.ie_grau_instrucao='19' THEN '13' WHEN b.ie_grau_instrucao='20' THEN '01' WHEN b.ie_grau_instrucao='99' THEN '99'  ELSE '00' END  end ie_grau_instrucao,
	lpad(coalesce(obter_dados_cat_derecho(f.cd_tipo_convenio_mx,'CD_DER_FETAL'),'00'),2,'0') cd_der_fetal,
	CASE WHEN lpad(coalesce(obter_dados_cat_derecho(f.cd_tipo_convenio_mx,'CD_DER_FETAL'),'1000'),2,'0')='00' THEN 'NO APLICA' WHEN lpad(coalesce(obter_dados_cat_derecho(f.cd_tipo_convenio_mx,'CD_DER_FETAL'),'1000'),2,'0')='01' THEN  'NO APLICA' WHEN lpad(coalesce(obter_dados_cat_derecho(f.cd_tipo_convenio_mx,'CD_DER_FETAL'),'1000'),2,'0')='88' THEN  'NO APLICA' WHEN lpad(coalesce(obter_dados_cat_derecho(f.cd_tipo_convenio_mx,'CD_DER_FETAL'),'1000'),2,'0')='99' THEN  'NO APLICA' WHEN lpad(coalesce(obter_dados_cat_derecho(f.cd_tipo_convenio_mx,'CD_DER_FETAL'),'1000'),2,'0')='1000' THEN  'NO ESPECIFICADO'  ELSE coalesce(b.nr_spss, 'NO ESPECIFICADO') END  nr_spss_madre,
	c.nr_seq_pessoa_endereco,
	case when coalesce(p.QT_BAT_CARDIO_FETAIS,0) > 0 then 2 else 1 end ie_tipo_nascimento_parto
FROM parto p, convenio f, atend_categoria_convenio e, compl_pessoa_fisica c, pessoa_fisica b
LEFT OUTER JOIN person_name y ON (b.nr_seq_person_name = y.nr_sequencia AND 'main' = y.ds_type)
WHERE b.cd_pessoa_fisica = cd_pessoa_fisica_mae_w and b.cd_pessoa_fisica 	= c.cd_pessoa_fisica and e.nr_atendimento = record_w.nr_atendimento_mae and p.nr_atendimento = record_w.nr_atendimento_mae and e.cd_convenio = f.cd_convenio and c.ie_tipo_complemento 	= 1   LIMIT 1;

c_dados_mae_w c_dados_mae%ROWTYPE;

c_dados_informante CURSOR FOR
SELECT	/*nvl(z.ds_given_name,'NO ESPECIFICADO') CERNOMBINFOR,
	nvl(z.ds_family_name,'NO ESPECIFICADO') PRO_APECERTINF,
	nvl(z.ds_component_name_1,'NO ESPECIFICADO') PRO_APEMCERTINF,	*/
	coalesce(UPPER(Elimina_Acentuacao(coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D'), pj.ds_endereco ||' - ' || coalesce(pj.nr_endereco, pj.ds_complemento)))),'NO ESPECIFICADO') DS_ENDERECO_CERTIF,
	coalesce(UPPER(Elimina_Acentuacao(coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'BAIRRO_VILA','D'), pj.DS_BAIRRO))),'NO ESPECIFICADO') DS_BAIRRO_CERTIF,
	coalesce(coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C'), obter_dados_cat_localidade(pj.NR_SEQ_TIPO_ASEN,'CD_CAT_LOCALIDADE')),obter_conversao_catalogo_nom('MUERTES_FETALES','LOCALIDADE_AREA','R','NO_ESPECIFICADO')) CD_LOCALIDADE_CERTIF,
	coalesce(coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'MUNICIPIO','C'), obter_dados_cat_localidade(pj.NR_SEQ_TIPO_ASEN,'CD_CAT_MUNICIPIO')),obter_conversao_catalogo_nom('MUERTES_FETALES','MUNICIPIO','R','NO_ESPECIFICADO')) CD_MUNICIPIO_CERTIF,
	coalesce(coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C'), obter_dados_cat_localidade(pj.NR_SEQ_TIPO_ASEN,'CD_EFE')),obter_conversao_catalogo_nom('ESTADO_PROVINCI','ESTADO_PROVINCI','R','NO_ESPECIFICADO')) CD_ESTADO_CERTIF,	
	coalesce(pj.nr_ddd_telefone,'') || coalesce(pj.nr_telefone,'8888888888') NR_TELEFONE_CERTIF,
	coalesce(pj.nr_ddi_telefone,'') NR_DDI_TELEFONE,				
	coalesce(coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'NUMERO','D') || ' ','') || coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D'),''),'SIN NUMERO') NR_EXTERIOR_CERT,
	coalesce(coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'NUMERO_INT','D') || ' ','') || coalesce(get_info_end_endereco(pj.nr_seq_pessoa_endereco,'COMPLEMENTO','D'),''), 'SIN NUMERO') NR_INTERIOR_CERT,
	get_info_end_endereco(pj.nr_seq_pessoa_endereco, 'TIPO_LOGRAD', 'C') CD_TIPO_VIALIDAD_CERT,	
	get_info_end_endereco(pj.nr_seq_pessoa_endereco, 'TIPO_BAIRRO', 'C') CD_TIPO_ASENTAMIENTO_CERT,
	get_info_end_endereco(pj.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') CD_ASENTAMIENTO_CERT,
	get_info_end_endereco(pj.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') CD_CODIGO_POSTAL_CERT,
	pj.nr_seq_pessoa_endereco
FROM	pessoa_juridica pj,
	estabelecimento es
WHERE	es.cd_estabelecimento = cd_estabelecimento_w
AND	pj.cd_cgc = es.cd_cgc  LIMIT 1;

c_dados_informante_w c_dados_informante%ROWTYPE;

c_declaracao_obito CURSOR FOR
SELECT	x.cd_doenca cd_causa_cie10,
	coalesce(x.ds_causa, obter_desc_cid_doenca(x.cd_doenca)) ds_causa_cie10,
	CASE WHEN x.ie_tipo_responsavel='A' THEN '0' WHEN x.ie_tipo_responsavel='M' THEN '1' WHEN x.ie_tipo_responsavel='F' THEN '2' END   ie_tipo_responsavel
From	causa_morte_fetal x
Where	x.nr_atendimento = record_w.nr_atendimento_mae
Order by x.nr_sequencia;
	
c_declaracao_obito_w c_declaracao_obito%ROWTYPE;
	


c_anomalia CURSOR FOR
									
	SELECT coalesce(ds_doenca_sup,obter_desc_cid_doenca(cd_doenca_superior)) ds_doenca_sup, 
		   cd_doenca_superior, 
		   coalesce(ds_doenca,obter_desc_cid_doenca(cd_doenca)) ds_doenca, 		  
		   cd_doenca 		   
	from nascimento_evento a 
	where nr_atendimento = record_w.nr_atendimento_mae
	and		a.ie_malformacao = 'S'
	and	nr_seq_nascimento = (SELECT max(b.nr_sequencia)
							from	nascimento b
							where	a.nr_atendimento = b.nr_atendimento
							and		b.nr_atend_rn = record_w.nr_atendimento);
	
c_anomalia_w	c_anomalia%ROWTYPE;
		

BEGIN
if (dt_inicial_p IS NOT NULL AND dt_inicial_p::text <> '') and (dt_final_p IS NOT NULL AND dt_final_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	begin
	
	if (ie_sobreescrever_p = 'S') then
		delete from guia_morte_fetal_noms
		where dt_obito between pkg_date_utils.start_of(dt_inicial_p,'MONTH') and pkg_date_utils.end_of(dt_final_p,'MONTH')
		and coalesce(dt_liberacao::text, '') = '';
		commit;
	end if;
	
	open c01;
	loop
	fetch c01 into
		record_w.nr_atendimento,
		record_w.nr_atendimento_mae,
		record_w.dt_obito,		
		cd_estabelecimento_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin	
		
		select	cd_pessoa_fisica
		into STRICT	cd_pessoa_fisica_mae_w
		from	atendimento_paciente
		where	nr_atendimento = record_w.nr_atendimento_mae;

		open c_dados_produto;
		loop
		fetch c_dados_produto into
			c_dados_produto_w;
		EXIT WHEN NOT FOUND; /* apply on c_dados_produto */
			begin
			open c_dados_mae;
			loop
			fetch c_dados_mae into
				c_dados_mae_w;
			EXIT WHEN NOT FOUND; /* apply on c_dados_mae */
				begin
				open c_dados_informante;
				loop
				fetch c_dados_informante into
					c_dados_informante_w;
				EXIT WHEN NOT FOUND; /* apply on c_dados_informante */
					begin
											
					select	nextval('guia_morte_fetal_noms_seq')
					into STRICT	nr_seq_morte_fetal_w
					;						
					
					select	count(*)
					into STRICT	qt_registros_w
					from	atendimento_gravidez ag
					where	nr_atendimento = record_w.nr_atendimento_mae;
					
					if (qt_registros_w > 0) then
						select	CASE WHEN coalesce(max(ag.ie_risco_gravidez),'X')='N' THEN '1' WHEN coalesce(max(ag.ie_risco_gravidez),'X')='B' THEN '1'  ELSE '2' END
						into STRICT 	ie_risco_gravidez_w
						from	atendimento_gravidez ag
						where	nr_atendimento = record_w.nr_atendimento_mae;
					end if;

					select	count(*)
					into STRICT	qt_registros_w
					from	parto g
					where	nr_atendimento = record_w.nr_atendimento_mae;
					
										
					select count(x.dt_nascimento)
					into STRICT qt_nascimento_atual_w
					from nascimento x,
						 parto p
					where p.nr_atendimento = record_w.nr_atendimento_mae
					and   p.nr_atendimento = x.nr_atendimento
					and   x.dt_nascimento <= c_dados_produto_w.dt_nascimento
					and   ie_unico_nasc_vivo = 'S';
					
					select count(x.dt_nascimento)
					into STRICT qt_natimorto_atual_w
					from nascimento x,
						 parto p
					where p.nr_atendimento = record_w.nr_atendimento_mae
					and   p.nr_atendimento = x.nr_atendimento
					and   x.dt_nascimento <= c_dados_produto_w.dt_nascimento 
					and   ie_unico_nasc_vivo = 'N';
										
					
					if (qt_registros_w > 0) then
						select	g.ie_parto_normal,
							g.ie_parto_cesaria,
							g.ie_parto_forceps,
							--decode(nvl(nvl(ie_risco_gravidez_w, g.ie_risco_gestacao),'X'),'N','1','B','1', '2') ie_risco_gravidez,
							CASE WHEN n.ie_tipo_nascimento=1 THEN 1 WHEN n.ie_tipo_nascimento=10 THEN 2 END  ie_risco_gravidez,
							coalesce(CASE WHEN n.ie_parto_normal='S' THEN '5'  ELSE CASE WHEN n.ie_parto_cesaria='S' THEN '1'  ELSE CASE WHEN n.ie_parto_forceps='S' THEN '2'  ELSE CASE WHEN n.IE_OUTRO_TIPO_PARTO='S' THEN '4'   ELSE CASE WHEN g.ie_parto_analgesia='S' THEN '4' END  END  END  END  END ,'9') ie_tipo_parto,
							CASE WHEN n.ie_parto_normal='S' THEN ''  ELSE CASE WHEN n.ie_parto_cesaria='S' THEN ''  ELSE CASE WHEN n.ie_parto_forceps='S' THEN ''  ELSE CASE WHEN n.IE_OUTRO_TIPO_PARTO='S' THEN n.DS_OUTRO_TIPO_PARTO  ELSE CASE WHEN g.ie_parto_analgesia='S' THEN obter_desc_expressao(283445) END  END  END  END  END  ds_outro_tipo_parto,
							CASE WHEN coalesce(g.qt_feto,'1')='1' THEN '1' WHEN coalesce(g.qt_feto,'1')='2' THEN '2'  ELSE '3' END  qt_fetos,
							CASE WHEN coalesce(g.ie_pre_natal,'N')='S' THEN '1'  ELSE '2' END  ie_pre_natal,
							CASE WHEN coalesce(g.ie_pre_natal, 'N')='N' THEN  '00'  ELSE g.qt_consultas END  qt_consultas,
							coalesce(obter_dados_cat_prof_parto(n.nr_seq_prof_parto,'CD_ATEND_PARTO_MF'),'9') cd_atend_parto_mf,
							coalesce(g.nr_seq_indic_cesarea, '') nr_seq_indic_cesarea,
							LPAD(CASE WHEN qt_nascimento_atual_w=0 THEN coalesce(g.qt_filhos_vivos,'99')  ELSE coalesce(g.qt_filhos_vivos,0) + qt_nascimento_atual_w END , 2,'00') qt_filhos_vivos,
							LPAD(CASE WHEN qt_natimorto_atual_w=0 THEN coalesce(g.qt_natimortos,'99')  ELSE coalesce(g.qt_natimortos,0) + qt_natimorto_atual_w END , 2,'00') qt_natimortos,
							CASE WHEN qt_nascimento_atual_w=0 THEN coalesce(g.qt_sobreviventes,'99')  ELSE coalesce(g.qt_sobreviventes,0) + qt_nascimento_atual_w END  qt_sobreviventes,
							n.ie_textura_pele
						into STRICT	record_w.ie_parto_normal,
							record_w.ie_parto_cesaria,
							record_w.ie_parto_forceps,
							record_w.IE_RISCO_GRAVIDEZ,
							record_w.ie_tipo_parto,
							record_w.DS_OUTRO_TIPO_PARTO,
							record_w.QT_FETOS,
							record_w.IE_PRE_NATAL,
							record_w.QT_CONSULTAS,
							record_w.CD_ATEND_PARTO_MF,
							record_w.NR_SEQ_INDIC_CESAREA,
							record_w.QT_FILHOS_VIVOS,
							record_w.QT_NATIMORTOS,
							record_w.QT_SOBREVIVENTES,
							record_w.QT_TEXTURA_PELE
						from	parto g,
								nascimento n
						where	g.nr_atendimento = record_w.nr_atendimento_mae
						and 	g.nr_atendimento = n.nr_atendimento 
						and 	n.nr_atend_rn = record_w.nr_atendimento  LIMIT 1;
					end if;
					
					/*select	count(*)
					into	qt_registros_w
					from	escala_capurro_neuro e
					where	e.nr_atendimento = record_w.nr_atendimento_mae
					and 	e.nr_seq_nascimento = (select 	max(b.nr_sequencia)
												   from 	nascimento b 
												   where 	e.nr_atendimento = b.nr_atendimento
												   and 		b.nr_atend_rn = record_w.nr_atendimento);										
								  
														 
																																		   
					
					if	(qt_registros_w > 0) then
						Select	decode(nvl(e.qt_textura_pele,'99'),'0','1','5','1','10','1','2')
						into	record_w.QT_TEXTURA_PELE  
						from	escala_capurro_neuro e
						where	e.nr_atendimento = record_w.nr_atendimento_mae
						and 	e.nr_seq_nascimento = (select 	max(b.nr_sequencia)
													   from 	nascimento b 
													   where 	e.nr_atendimento = b.nr_atendimento
													   and 		b.nr_atend_rn = record_w.nr_atendimento)									 
								   
																																  
																																		   
						and	rownum <= 1;
					end if;	*/
					

					select 	obter_dados_cat_sitios(a.nr_seq_local_obito, 'CD_SITIO')
					into STRICT 	valor_local_obito_w
					from 	declaracao_obito a,
							pessoa_juridica d,
							estabelecimento c
					where 	c.cd_estabelecimento = cd_estabelecimento_w
					and		c.cd_cgc 			 = d.cd_cgc
					and		a.nr_atendimento	 = record_w.nr_atendimento  LIMIT 1;
					
					if ((valor_local_obito_w)::numeric  > 0 and (valor_local_obito_w)::numeric  <= 9) then
						select	substr(get_info_end_endereco(d.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C'),1,10) CD_TIPO_VIALIDAD_ESTAB,
							substr(Upper(Elimina_Acentuacao(coalesce(d.ds_endereco,'F8'))),1,50) DS_ENDERECO_PROD,
							substr(coalesce(get_info_end_endereco(d.nr_seq_pessoa_endereco,'NUMERO','D')|| ' ','') || coalesce(get_info_end_endereco(d.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D'),''),1,10) NR_EXTERIOR_ESTAB,
							substr(coalesce(get_info_end_endereco(d.nr_seq_pessoa_endereco,'NUMERO_INT','D') || ' ','') || coalesce(get_info_end_endereco(d.nr_seq_pessoa_endereco,'COMPLEMENTO','D'),''),1,10) NR_INTERIOR_ESTAB,
							substr(get_info_end_endereco(d.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C'),1,10) CD_TIPO_ASENTAMIENTO_ESTAB,
							lpad(substr(coalesce(get_info_end_endereco(d.nr_seq_pessoa_endereco,'BAIRRO_VILA','C'),'9999'),1,4),4,'0') CD_ASENTAMIENTO_ESTAB,
							substr(trim(both coalesce(get_info_end_endereco(d.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D'),'99999')),1,5) CD_CODIGO_POSTAL_ESTAB,
							substr(Upper(Elimina_Acentuacao(coalesce(d.ds_bairro,'F8'))),1,50) DS_BAIRRO_PROD,
							lpad(coalesce(obter_dados_cat_clues(d.cd_internacional,'CD_LOCALIDADE'), obter_conversao_catalogo_nom('MUERTES_FETALES','LOCALIDADE_AREA','R','NO_ESPECIFICADO')),4,'0') CD_LOCALIDADE_PROD,
							lpad(coalesce(obter_dados_cat_clues(d.cd_internacional,'CD_MUNICIPIO'), obter_conversao_catalogo_nom('MUERTES_FETALES','MUNICIPIO','R','NO_ESPECIFICADO')),3,'0') CD_MUNICIPIO_PROD,
							lpad(coalesce(obter_dados_cat_clues(d.cd_internacional,'CD_ESTADO'), obter_conversao_catalogo_nom('MUERTES_FETALES','ESTADO_PROVINCI','R','NO_ESPECIFICADO')),2,'0') CD_ESTADO_PROD,
							coalesce(valor_local_obito_w, '99') IE_TIPO_INST_SAUDE_PROD,
							substr(CASE WHEN coalesce(obter_dados_cat_clues(d.cd_internacional,'DS_ESTAB_SAUDE'), '9998')='9998' THEN  ''  ELSE obter_dados_cat_clues(d.cd_internacional,'DS_ESTAB_SAUDE') END ,1,150) DS_ESTAB_SAUDE,
							substr(coalesce(obter_dados_cat_clues(d.cd_internacional,'CD_CLUES'),'9998'),1,11) CD_PRO_CLUES,
							d.nr_seq_pessoa_endereco
						into STRICT	record_w.CD_TIPO_VIALIDAD_ESTAB,
							record_w.DS_ENDERECO_PROD,
							record_w.NR_EXTERIOR_ESTAB,
							record_w.NR_INTERIOR_ESTAB,
							record_w.CD_TIPO_ASENTAMIENTO_ESTAB,								
							record_w.CD_ASENTAMIENTO_ESTAB,	 
							record_w.CD_CODIGO_POSTAL_ESTAB,	 
							record_w.DS_BAIRRO_PROD,              
							record_w.CD_LOCALIDADE_PROD,
							record_w.CD_MUNICIPIO_PROD,            
							record_w.CD_ESTADO_PROD,            
							record_w.IE_TIPO_INST_SAUDE_PROD,
							record_w.DS_ESTAB_SAUDE,               
							record_w.CD_PRO_CLUES,
							nr_seq_catalogo_estab_w
						from	estabelecimento c,
								pessoa_juridica d
						where 	c.cd_estabelecimento = cd_estabelecimento_w
						and		c.cd_cgc 			 = d.cd_cgc;
					end if;
					
					if ((valor_local_obito_w)::numeric  > 9) then
						select	coalesce(substr(get_info_end_endereco(a.nr_seq_ocor_endereco,'TIPO_LOGRAD','C'),1,10), obter_conversao_catalogo_nom('MUERTES_FETALES','TIPO_LOGRAD','R','NO_ESPECIFICADO')) CD_TIPO_VIALIDAD_ESTAB,
							substr(upper(elimina_acentuacao(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'RUA_VIALIDADE','D'), 'NO ESPECIFICADO'))),1,50) DS_ENDERECO_PROD,
							coalesce(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'NUMERO','D') || ' ','') || coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'NUM_EXT_ALFA','D'),''), 'SIN NUMERO') NR_EXTERIOR_ESTAB,
							coalesce(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'NUMERO_INT','D') || ' ','') || coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'COMPLEMENTO','D'),''), 'SIN NUMERO') NR_INTERIOR_ESTAB,
							coalesce(substr(get_info_end_endereco(a.nr_seq_ocor_endereco,'TIPO_BAIRRO','C'),1,10), obter_conversao_catalogo_nom('MUERTES_FETALES','TIPO_BAIRRO','R','NO_ESPECIFICADO')) CD_TIPO_ASENTAMIENTO_ESTAB,
							lpad(substr(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'BAIRRO_VILA','C'),'9999'),1,4),4,'0') CD_ASENTAMIENTO_ESTAB,
							substr(trim(both coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'CODIGO_POSTAL','D'),'99999')),1,5) CD_CODIGO_POSTAL_ESTAB,
							substr(upper(elimina_acentuacao(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco, 'BAIRRO_VILA', 'D'),'NO ESPECIFICADO'))),1,50) DS_BAIRRO_PROD, /* Não contém essa coluna no arquivo mdb */
							lpad(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'LOCALIDADE_AREA','C'),obter_conversao_catalogo_nom('MUERTES_FETALES','LOCALIDADE_AREA','R','NO_ESPECIFICADO')),4,'0') CD_LOCALIDADE_PROD,
							lpad(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'MUNICIPIO','C'),obter_conversao_catalogo_nom('MUERTES_FETALES','MUNICIPIO','R','NO_ESPECIFICADO')),3,'0') CD_MUNICIPIO_PROD,
							lpad(coalesce(get_info_end_endereco(a.nr_seq_ocor_endereco,'ESTADO_PROVINCI', 'C'), obter_conversao_catalogo_nom('MUERTES_FETALES','ESTADO_PROVINCI','R','NO_ESPECIFICADO')),2,'0') CD_ESTADO_PROD,
							coalesce(valor_local_obito_w, '99') IE_TIPO_INST_SAUDE_PROD,
							'NO APLICA' DS_ESTAB_SAUDE,
							'9997' CD_PRO_CLUES,
							d.nr_seq_pessoa_endereco
						into STRICT	record_w.CD_TIPO_VIALIDAD_ESTAB,
							record_w.DS_ENDERECO_PROD,
							record_w.NR_EXTERIOR_ESTAB,
							record_w.NR_INTERIOR_ESTAB,
							record_w.CD_TIPO_ASENTAMIENTO_ESTAB,								
							record_w.CD_ASENTAMIENTO_ESTAB,	
							record_w.CD_CODIGO_POSTAL_ESTAB,	 
							record_w.DS_BAIRRO_PROD,              
							record_w.CD_LOCALIDADE_PROD,
							record_w.CD_MUNICIPIO_PROD,            
							record_w.CD_ESTADO_PROD,            
							record_w.IE_TIPO_INST_SAUDE_PROD,
							record_w.DS_ESTAB_SAUDE,               
							record_w.CD_PRO_CLUES,
							nr_seq_catalogo_estab_w
						from	estabelecimento c,
								pessoa_juridica d,
								declaracao_obito a
						where 	c.cd_estabelecimento = cd_estabelecimento_w
						and		c.cd_cgc 			 = d.cd_cgc
						and		a.nr_atendimento	 = record_w.nr_atendimento  LIMIT 1;
					end if;
					
					if (nr_seq_catalogo_estab_w > 0) then
						begin
						select	max(b.nr_seq_catalogo)
						into STRICT	record_w.NR_SEQ_CATALOGO_ESTAB
						from	end_endereco b,
							pessoa_endereco_item a
						where	b.nr_sequencia = a.nr_seq_end_endereco
						and	a.nr_seq_pessoa_endereco = nr_seq_catalogo_estab_w;	
						end;
					end if;
					
					select	count(*)
					into STRICT	qt_registros_w
					from	historico_saude_mulher k
					where	k.cd_pessoa_fisica = cd_pessoa_fisica_mae_w;
					
					if (qt_registros_w > 0) then
						Select	k.qt_abortos_esp,
							k.qt_abortos_prov,
							k.qt_abortos_terap,
							CASE WHEN coalesce(k.ie_parentesco_agressor::text, '') = '' THEN '2' WHEN k.ie_parentesco_agressor='88' THEN '99'  ELSE '1' END  ie_agressao,
							lpad(coalesce(k.ie_parentesco_agressor,'88'),2,0) ie_parentesco_agressor
						into STRICT	record_w.QT_ABORTOS_ESP,
							record_w.QT_ABORTOS_PROV,
							record_w.QT_ABORTOS_TERAP,
							record_w.IE_AGRESSAO,
							record_w.IE_PARENTESCO_AGRESSOR
						from	historico_saude_mulher k
						where	k.cd_pessoa_fisica = cd_pessoa_fisica_mae_w  LIMIT 1;
		
								  
											  
					end if;						
					
					Select	CASE WHEN count(1)='0' THEN '1'  ELSE '2' END  ie_tipo_parto_prod
					into STRICT	record_w.IE_TIPO_PARTO_PROD	
					from	parto_eventos z
					where	z.nr_atendimento = record_w.nr_atendimento_mae;
					
					record_w.NR_SEQUENCIA		:= nr_seq_morte_fetal_w;
					record_w.NM_USUARIO			:= nm_usuario_p;
					record_w.DT_ATUALIZACAO		:= clock_timestamp();
					record_w.NM_USUARIO_NREC	:= nm_usuario_p;
					record_w.DT_ATUALIZACAO_NREC	:= clock_timestamp();
					record_w.NR_FOLIO			:= c_dados_produto_w.NR_FOLIO;
					record_w.NR_FOLIO_CONTROL 	:= c_dados_produto_w.NR_FOLIO_CONTROL;
					record_w.IE_SEXO_PROD		:= c_dados_produto_w.IE_SEXO_PROD;
					record_w.QT_IDADE_PROD		:= c_dados_produto_w.QT_IDADE_PROD;
					record_w.QT_PESO_PROD		:= c_dados_produto_w.QT_PESO_PROD;		
					--record_w.IE_TIPO_NASCIMENTO	:= nvl(1,c_dados_produto_w.IE_TIPO_NASCIMENTO); -- Alterado para não perder qual campo era antes, de acordo com a Camila sempre vai ser antes do parto	
					record_w.IE_TIPO_NASCIMENTO := c_dados_mae_w.IE_TIPO_NASCIMENTO_PARTO;	
					record_w.NR_DIA_NASCIMENTO	:= c_dados_produto_w.NR_DIA_NASCIMENTO;
					record_w.NR_MES_NASCIMENTO	:= c_dados_produto_w.NR_MES_NASCIMENTO;
					record_w.NR_ANO_NASCIMENTO	:= c_dados_produto_w.NR_ANO_NASCIMENTO;
					record_w.NR_HORA_NASCIMENTO	:= c_dados_produto_w.NR_HORA_NASCIMENTO;
					record_w.NR_MIN_NASCIMENTO	:= c_dados_produto_w.NR_MIN_NASCIMENTO;
					record_w.DS_ESPEC_PARTO		:= c_dados_produto_w.DS_ESPEC_PARTO;		
					record_w.IE_NECROPCIA		:= c_dados_produto_w.IE_NECROPCIA;
					
					select	count(*)
					into STRICT	qt_registros_w
					from 	declaracao_obito g
					where 	g.nr_atendimento = record_w.nr_atendimento_mae
					and	(g.dt_liberacao IS NOT NULL AND g.dt_liberacao::text <> '')
					and	coalesce(g.dt_inativacao::text, '') = '';
					
					if (qt_registros_w > 0) then
						Select	(CASE WHEN (g.nr_declaracao IS NOT NULL AND g.nr_declaracao::text <> '') THEN '2' ELSE '0' END) IE_SOBREVIVE_MAE,
								coalesce(CASE WHEN g.nr_declaracao=1 THEN  '00000000' WHEN g.nr_declaracao=9 THEN  '00000000'  ELSE g.nr_declaracao END , '888888888') NR_FOLIO_DEF_MAE
						into STRICT	record_w.IE_SOBREVIVE_MAE,
							record_w.NR_FOLIO_DEF_MAE
						from 	declaracao_obito g
						where 	g.nr_atendimento = record_w.nr_atendimento_mae
						and	(g.dt_liberacao IS NOT NULL AND g.dt_liberacao::text <> '')
						and	coalesce(g.dt_inativacao::text, '') = ''  LIMIT 1;
					else	
						if (coalesce(record_w.ie_sobrevive_mae::text, '') = '') or (record_w.ie_sobrevive_mae = '0') then
							select max(CASE WHEN ie_sobreviveu_parto='S' THEN '1' WHEN ie_sobreviveu_parto='N' THEN '2'  ELSE '0' END )
							into STRICT	record_w.ie_sobrevive_mae
							from	parto
							where	nr_atendimento = record_w.nr_atendimento_mae;
						end if;
					end if;						
					
					if (c_dados_mae_w.cd_nacionalidade > 0) then
						Select	CASE WHEN coalesce(x.ie_brasileiro::text, '') = '' THEN  '9'  WHEN x.ie_brasileiro='S' THEN '1'  ELSE '2' END  cd_nacionalidade_mae,
							    CASE WHEN coalesce(x.ie_brasileiro::text, '') = '' THEN  'NO APLICA' WHEN x.ie_brasileiro='S' THEN  'NO APLICA'  ELSE (select nm_pais from cat_pais where to_char(cd_pais) = to_char(x.cd_externo)) END  ds_nacionalidade_mae
						into STRICT	record_w.CD_NACIONALIDADE_MAE,
								record_w.DS_NACIONALIDADE_MAE
						from	nacionalidade x
						WHERE	x.cd_nacionalidade = c_dados_mae_w.cd_nacionalidade;
					end if;
					
					SELECT nextval('person_name_seq')
					INTO STRICT record_w.NR_SEQ_PERSON_NAME_MAE
					;
			
					INSERT INTO person_name(nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,ds_type,ds_given_name,ds_family_name,ds_component_name_1,ds_component_name_2,ds_component_name_3)
					SELECT record_w.NR_SEQ_PERSON_NAME_MAE,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,ds_type,ds_given_name,ds_family_name,coalesce(ds_component_name_1, 'SIN INFORMACION'),ds_component_name_2,ds_component_name_3
					FROM person_name
					WHERE nr_sequencia = c_dados_mae_w.NR_SEQ_PERSON_NAME_MAE;
					
					record_w.CD_CURP_MAE			:= c_dados_mae_w.CD_CURP_MAE;							
					record_w.NR_SEQ_LINGUA_INDIG_MAE := c_dados_mae_w.NR_SEQ_LINGUA_INDIG_MAE;
					record_w.QT_IDADE_MAE			:= c_dados_mae_w.QT_IDADE_MAE;
					record_w.IE_ESTADO_CIVIL_MAE	:= c_dados_mae_w.IE_ESTADO_CIVIL_MAE;					
					record_w.CD_CARGO_MAE			:= c_dados_mae_w.CD_CARGO_MAE;
					record_w.IE_TRABALHA_MAE		:= c_dados_mae_w.IE_TRABALHA_MAE;
					record_w.QT_GESTACOES			:= c_dados_mae_w.QT_GESTACOES;
					record_w.IE_EMBARAZO_ESP_ASSIS	:= c_dados_mae_w.IE_EMBARAZO_ESP_ASSIS;
					record_w.IE_GRAU_INSTRUCAO		:= c_dados_mae_w.IE_GRAU_INSTRUCAO;
					record_w.CD_DER_FETAL			:= c_dados_mae_w.CD_DER_FETAL;
					record_w.NR_SPSS_MADRE			:= c_dados_mae_w.NR_SPSS_MADRE;
					record_w.NR_TELEFONE_MAE        := c_dados_mae_w.NR_TELEFONE_MAE;
					record_w.NR_DDI_FONE_MAE		:= c_dados_mae_w.NR_DDI_FONE_MAE;	
						
					if (c_dados_mae_w.CD_PAIS_MAE = 142) then
						record_w.IE_RESIDE_EXTERIOR := 'N';
															
						record_w.DS_ENDERECO_MAE		:= c_dados_mae_w.DS_ENDERECO_MAE;
						record_w.DS_BAIRRO_MAE			:= c_dados_mae_w.DS_BAIRRO_MAE;
						record_w.NR_EXTERIOR_MAE		:= c_dados_mae_w.NR_EXTERIOR_MAE;
						record_w.NR_INTERIOR_MAE		:= c_dados_mae_w.NR_INTERIOR_MAE;
						record_w.CD_TIPO_ASENTAMIENTO_MAE	:= c_dados_mae_w.CD_TIPO_ASENTAMIENTO_MAE;
						record_w.CD_ASENTAMIENTO_MAE		:= c_dados_mae_w.CD_ASENTAMIENTO_MAE;
						record_w.CD_CODIGO_POSTAL_MAE		:= c_dados_mae_w.CD_CODIGO_POSTAL_MAE;
						record_w.CD_TIPO_VIALIDAD_MAE		:= c_dados_mae_w.CD_TIPO_VIALIDAD_MAE;
						record_w.CD_LOCALIDADE_MAE		:= c_dados_mae_w.CD_LOCALIDADE_MAE;
						record_w.CD_MUNICIPIO_MAE		:= c_dados_mae_w.CD_MUNICIPIO_MAE;
						record_w.CD_ESTADO_MAE			:= c_dados_mae_w.CD_ESTADO_MAE;
						record_w.CD_PAIS				:= c_dados_mae_w.CD_PAIS_MAE;
					else
						record_w.IE_RESIDE_EXTERIOR 	:= 'S';
						record_w.IE_IGNORA_CP_MAE		:= 'S';
						record_w.CD_PAIS				:= c_dados_mae_w.CD_PAIS_MAE;
						record_w.DS_ENDERECO_MAE		:= 'NO ESPECIFICADO';
						record_w.DS_BAIRRO_MAE			:= 'NO APLICA';
						record_w.NR_EXTERIOR_MAE		:= 'NO APLICA';
						record_w.NR_INTERIOR_MAE		:= 'NO APLICA';
						record_w.CD_TIPO_ASENTAMIENTO_MAE	:= '44';
						record_w.CD_CODIGO_POSTAL_MAE		:= '00000';
						record_w.CD_TIPO_VIALIDAD_MAE		:= '97';
						record_w.CD_LOCALIDADE_MAE		:= '9997';
						record_w.CD_MUNICIPIO_MAE		:= '997';
						record_w.CD_ESTADO_MAE			:= '00';						
					end if;
						
					
					
					if (c_dados_mae_w.nr_seq_pessoa_endereco > 0) then
						begin
						select	max(b.nr_seq_catalogo)
						into STRICT	record_w.nr_seq_catalogo_mae
						from	end_endereco b,
							pessoa_endereco_item a
						where	b.nr_sequencia = a.nr_seq_end_endereco
						and	a.nr_seq_pessoa_endereco = c_dados_mae_w.nr_seq_pessoa_endereco;	
						end;
					end if;		
					
					select	count(*)
					into STRICT	qt_registros_w
					FROM declaracao_obito d, pessoa_fisica pf_medico
LEFT OUTER JOIN person_name w ON (pf_medico.nr_seq_person_name = w.nr_sequencia AND 'main' = w.ds_type)
WHERE d.nr_atendimento = record_w.nr_atendimento and d.ie_situacao = 'A' and d.cd_medico = pf_medico.cd_pessoa_fisica;
					
					if (qt_registros_w > 0) then
					
						Select	d.nr_seq_person_name nr_seq_person_name_inf,
							--nvl(obter_dados_cat_cert_parto(d.ie_emissor,'CD_CERT_PARTO_MF'),'8') cd_cert_parto_mf_inf,
							coalesce(d.ie_emissor,'8') cd_cert_parto_mf_inf,
							CASE WHEN d.IE_ASSINOU_CERT_OBITO='S' THEN '1'  ELSE '0' END  ie_assinou_cert_obito,
							coalesce(to_char(d.dt_liberacao,'dd'),'99') nr_dia_certificacao,
							coalesce(to_char(d.dt_liberacao,'MM'),'99') nr_mes_certificacao,
							coalesce(to_char(d.dt_liberacao,'yyyy'),'9999') nr_ano_certificacao,
							CASE WHEN d.ds_espc_cert='' THEN  'NO APLICA'  ELSE d.ds_espc_cert END  ds_espc_cert,
							CASE WHEN d.ie_emissor=2 THEN  d.ds_cedula_prof_cert WHEN d.ie_emissor=3 THEN  d.ds_cedula_prof_cert WHEN d.ie_emissor=1 THEN d.ds_cedula_prof_cert  ELSE '88888888' END  ds_codigo_prof_certif,
							CASE WHEN d.ie_emissor='1' THEN  w.nr_sequencia WHEN d.ie_emissor='' THEN  ''  ELSE d.nr_seq_person_cert END  nr_seq_person_name_cert,
							coalesce(d.nr_ddd_telefone_cert,'') || coalesce(d.nr_telefone_cert,'8888888888') nr_telefone_certif,
							coalesce(coalesce(get_info_end_endereco(d.nr_seq_cert_endereco,'NUMERO_INT','D') || ' ','') || coalesce(get_info_end_endereco(d.nr_seq_cert_endereco,'COMPLEMENTO','D'),''), '') nr_interior_cert,
							coalesce(coalesce(get_info_end_endereco(d.nr_seq_cert_endereco,'NUMERO','D') || ' ','') || coalesce(get_info_end_endereco(d.nr_seq_cert_endereco,'NUM_EXT_ALFA','D'),''), '') nr_exterior_cert,
							get_info_end_endereco(d.nr_seq_cert_endereco, 'TIPO_LOGRAD', 'C') cd_tipo_vialidad_cert,
							get_info_end_endereco(d.nr_seq_cert_endereco,'CODIGO_POSTAL','D') cd_codigo_postal_cert,
							coalesce(UPPER(Elimina_Acentuacao(get_info_end_endereco(d.nr_seq_cert_endereco,'BAIRRO_VILA','D'))),'NO ESPECIFICADO') ds_bairro_certif,
							get_info_end_endereco(d.nr_seq_cert_endereco,'ESTADO_PROVINCI','C') cd_estado_certif,
							get_info_end_endereco(d.nr_seq_cert_endereco,'MUNICIPIO','C') cd_municipio_certif,
							get_info_end_endereco(d.nr_seq_cert_endereco,'LOCALIDADE_AREA','C') cd_localidade_certif,
							get_info_end_endereco(d.nr_seq_cert_endereco,'TIPO_BAIRRO','C') CD_TIPO_ASENTAMIENTO_CERT,
							coalesce(UPPER(Elimina_Acentuacao(get_info_end_endereco(d.nr_seq_cert_endereco,'RUA_VIALIDADE','D'))),'NO ESPECIFICADO') ds_endereco_certif
							-- nvl(w.ds_given_name,'NO ESPECIFICADO') CERNOMBCERTIFI,

							-- nvl(w.ds_family_name,'NO ESPECIFICADO') PRO_APECERTIFI,

							-- nvl(w.ds_component_name_1,'NO ESPECIFICADO') PRO_APEMCERTIFI							   
						into STRICT	person_name_inf_w,
							record_w.CD_CERT_PARTO_MF_INF,
							record_w.IE_ASSINOU_CERT_OBITO,
							record_w.NR_DIA_CERTIFICACAO,
							record_w.NR_MES_CERTIFICACAO,
							record_w.NR_ANO_CERTIFICACAO,
							record_w.DS_ESPC_CERT,
							record_w.DS_CODIGO_PROF_CERTIF,
							record_w.NR_SEQ_PERSON_NAME_CERT,
							record_w.NR_TELEFONE_CERTIF,
							record_w.NR_INTERIOR_CERT,
							record_w.NR_EXTERIOR_CERT,
							record_w.CD_TIPO_VIALIDAD_CERT,
							record_w.CD_CODIGO_POSTAL_CERT,
							record_w.DS_BAIRRO_CERTIF,
							record_w.CD_ESTADO_CERTIF,
							record_w.CD_MUNICIPIO_CERTIF,
							record_w.CD_LOCALIDADE_CERTIF,
							record_w.CD_TIPO_ASENTAMIENTO_CERT,
							record_w.DS_ENDERECO_CERTIF
						FROM declaracao_obito d, pessoa_fisica pf_medico
LEFT OUTER JOIN person_name w ON (pf_medico.nr_seq_person_name = w.nr_sequencia AND 'main' = w.ds_type)
WHERE d.nr_atendimento = record_w.nr_atendimento and d.ie_situacao = 'A' and d.cd_medico = pf_medico.cd_pessoa_fisica   LIMIT 1;
					end if;
					
					SELECT nextval('person_name_seq')
					INTO STRICT record_w.NR_SEQ_PERSON_NAME_INF
					;
			
					INSERT INTO person_name(nr_sequencia,dt_atualizacao,nm_usuario,dt_atualizacao_nrec,nm_usuario_nrec,ds_type,ds_given_name,ds_family_name,ds_component_name_1,ds_component_name_2,ds_component_name_3)
					SELECT record_w.NR_SEQ_PERSON_NAME_INF,clock_timestamp(),nm_usuario_p,clock_timestamp(),nm_usuario_p,ds_type,ds_given_name,ds_family_name,coalesce(ds_component_name_1, 'NO ESPECIFICADO'),ds_component_name_2,ds_component_name_3
					FROM person_name
					WHERE nr_sequencia = person_name_inf_w;
					
					/*select	count (*)
					into	qt_registros_w
					from	cat_grau_parentesco x,
						grau_parentesco p, 
						compl_pessoa_fisica c,	
						pessoa_fisica pf,
						person_name z
					where	x.nr_sequencia = p.cd_parentesco_mx
					and	p.nr_sequencia = c.nr_seq_parentesco
					and 	c.cd_pessoa_fisica = cd_pessoa_fisica_mae_w
					and	c.ie_tipo_complemento = 3
					and	c.cd_pessoa_fisica_ref = pf.cd_pessoa_fisica
					and	z.nr_sequencia = pf.nr_seq_person_name (+)
					and	z.ds_type (+) = 'main';
					
					if	(qt_registros_w > 0) then		
						
					end if;*/
					select 	lpad(coalesce(max(x.cd_grau_parentesco_mx), '99'),2,'0') cd_grau_parentesco_inf		
						into STRICT  	record_w.CD_GRAU_PARENTESCO_INF	
						from	cat_grau_parentesco x,
								declaracao_obito a,
								grau_parentesco p
						where	a.nr_atendimento = record_w.nr_atendimento
						and		p.nr_sequencia = a.nr_seq_parentesco
						and		x.nr_sequencia = p.cd_parentesco_mx;
										
																
					record_w.DS_ENDERECO_CERTIF		:= c_dados_informante_w.DS_ENDERECO_CERTIF;
					record_w.DS_BAIRRO_CERTIF		:= c_dados_informante_w.DS_BAIRRO_CERTIF;
					record_w.CD_LOCALIDADE_CERTIF		:= c_dados_informante_w.CD_LOCALIDADE_CERTIF;
					record_w.CD_MUNICIPIO_CERTIF		:= c_dados_informante_w.CD_MUNICIPIO_CERTIF;
					record_w.CD_ESTADO_CERTIF		:= substr(c_dados_informante_w.CD_ESTADO_CERTIF,1,255);						
					record_w.NR_TELEFONE_CERTIF		:= substr(c_dados_informante_w.NR_TELEFONE_CERTIF,1,15);
					record_w.NR_DDI_TELEFONE		:= c_dados_informante_w.NR_DDI_TELEFONE;						
					record_w.NR_EXTERIOR_CERT		:= c_dados_informante_w.NR_EXTERIOR_CERT;
					record_w.NR_INTERIOR_CERT		:= c_dados_informante_w.NR_INTERIOR_CERT;						
					record_w.CD_TIPO_VIALIDAD_CERT		:= c_dados_informante_w.CD_TIPO_VIALIDAD_CERT;						
					record_w.CD_TIPO_ASENTAMIENTO_CERT	:= c_dados_informante_w.CD_TIPO_ASENTAMIENTO_CERT;
					record_w.CD_ASENTAMIENTO_CERT		:= c_dados_informante_w.CD_ASENTAMIENTO_CERT;
					record_w.CD_CODIGO_POSTAL_CERT		:= c_dados_informante_w.CD_CODIGO_POSTAL_CERT;
					
					if (c_dados_informante_w.nr_seq_pessoa_endereco > 0) then
						begin													
						select	max(b.nr_seq_catalogo)
						into STRICT	record_w.nr_seq_catalogo_cert
						from	end_endereco b,
							pessoa_endereco_item a
						where	b.nr_sequencia = a.nr_seq_end_endereco
						and	a.nr_seq_pessoa_endereco = c_dados_informante_w.nr_seq_pessoa_endereco;	
						end;						
					end if;						
					
					select  substr(b.nm_usuario, 1, 10) nm_usuario_registro,
						coalesce(b.dt_atualizacao,to_date(clock_timestamp(), 'dd/mm/yyyy')) dt_registro,
						substr(b.nm_usuario, 1, 10) nm_usuario_modificacao,
						coalesce(b.dt_atualizacao,clock_timestamp()) dt_modificacao,
						coalesce(b.IE_TIPO_CERTIF_OBT,'8') ie_tipo_certif_obt,
						lpad(coalesce(obter_dados_cat_clues(d.cd_internacional,'CD_ESTADO'),obter_conversao_catalogo_nom('MUERTES_FETALES','ESTADO_PROVINCI','R','NO_ESPECIFICADO')),2,'0') cd_estado_capt_cert,
						lpad(coalesce(obter_dados_cat_clues(d.cd_internacional,'CD_LOCALIDADE'),obter_conversao_catalogo_nom('MUERTES_FETALES','LOCALIDADE_AREA','R','NO_ESPECIFICADO')),2,'0') CD_LOCALIDADE_REG,
						lpad(coalesce(obter_dados_cat_clues(d.cd_internacional,'CD_JURISDICAO'),'99'),2,'0') CD_JURISDICAO_REG 
					into STRICT	record_w.NM_USUARIO_REGISTRO,
						record_w.DT_REGISTRO,
						record_w.NM_USUARIO_MODIFICACAO,
						record_w.DT_MODIFICACAO,
						record_w.IE_TIPO_CERTIF_OBT,
						record_w.CD_ESTADO_CAPT_CERT,
						record_w.CD_LOCALIDADE_REG,
						record_w.CD_JURISDICAO_REG
					from	declaracao_obito b,
						estabelecimento c,
						pessoa_juridica d
					where	b.nr_atendimento = record_w.nr_atendimento
					and	b.ie_situacao = 'A'
					and	c.cd_estabelecimento = cd_estabelecimento_w
					and	c.cd_cgc = d.cd_cgc  LIMIT 1;
					
					select	max(NR_SEQ_CATALOGO)
					into STRICT	record_w.NR_SEQ_CATALOGO_PROD
					from	CONFIG_NOM
					where	cd_estabelecimento = cd_estabelecimento_w;
					
					record_w.NR_SEQ_CATALOGO_CAPT := record_w.NR_SEQ_CATALOGO_PROD;
										
				
					for c_anomalia_w in c_anomalia loop
					begin 				
											
						
								 
						--record_w.cd_anomalia1 	:= c_anomalia_w.cd_doenca_superior; 
						record_w.cd_anomalia1 	:= null;
						record_w.ds_anomalia1	:= c_anomalia_w.ds_doenca_sup;
			 
	  
								 
						--record_w.cd_anomalia2 	:= c_anomalia_w.cd_doenca; 
						record_w.cd_anomalia2 	:= null;
						record_w.ds_anomalia2	:= c_anomalia_w.ds_doenca;
					
					end;
					end loop;
					
					count_linha_w := 0;

    
					for c_declaracao_obito_w in c_declaracao_obito loop  
					begin    
						count_linha_w := c_declaracao_obito%ROWCOUNT;
							
						if (count_linha_w = 1) then
							--record_w.CD_CIE10_CAUSA_BASICA 	:= c_declaracao_obito_w.cd_causa_cie10;
							record_w.CD_CIE10_CAUSA_BASICA 	:= null;
							--record_w.CD_CIE10_CAUSA_A 		:= c_declaracao_obito_w.cd_causa_cie10;
							record_w.CD_CIE10_CAUSA_A 		:= null;
							record_w.DS_CIE10_CAUSA_A 		:= c_declaracao_obito_w.ds_causa_cie10;
							record_w.IE_TIPO_RESP_CAUSA_A 	:= c_declaracao_obito_w.ie_tipo_responsavel;
						end if;
						
						if (count_linha_w = 2) then
																												
																												  
																														   
			 
	 
								 
							--record_w.CD_CIE10_CAUSA_B 		:= c_declaracao_obito_w.cd_causa_cie10;
							record_w.CD_CIE10_CAUSA_B 		:= null;
							record_w.DS_CIE10_CAUSA_B 		:= c_declaracao_obito_w.ds_causa_cie10;
							record_w.IE_TIPO_RESP_CAUSA_B 	:= c_declaracao_obito_w.ie_tipo_responsavel;
						end if;
											
						if (count_linha_w = 3) then
							--record_w.CD_CIE10_CAUSA_C  		:= c_declaracao_obito_w.cd_causa_cie10;
							record_w.CD_CIE10_CAUSA_C  		:= null;
							record_w.DS_CIE10_CAUSA_C  		:= c_declaracao_obito_w.ds_causa_cie10;
							record_w.IE_TIPO_RESP_CAUSA_C 	:= c_declaracao_obito_w.ie_tipo_responsavel;
						end if;
						
						if (count_linha_w = 4) then
							--record_w.CD_CIE10_CAUSA_D 		:= c_declaracao_obito_w.cd_causa_cie10;
							record_w.CD_CIE10_CAUSA_D 		:= null;
							record_w.DS_CIE10_CAUSA_D 		:= c_declaracao_obito_w.ds_causa_cie10;
							record_w.IE_TIPO_RESP_CAUSA_D 	:= c_declaracao_obito_w.ie_tipo_responsavel;
						end if;
						
						if (count_linha_w = 5) then
							--record_w.CD_CIE10_CAUSA_E 		:= c_declaracao_obito_w.cd_causa_cie10;
							record_w.CD_CIE10_CAUSA_E 		:= null;
							record_w.DS_CIE10_CAUSA_E 		:= c_declaracao_obito_w.ds_causa_cie10;
							record_w.IE_TIPO_RESP_CAUSA_E 	:= c_declaracao_obito_w.ie_tipo_responsavel;
						end if;
						
						if (count_linha_w = 6) then
							--record_w.CD_CIE10_CAUSA_F 		:= c_declaracao_obito_w.cd_causa_cie10;
							record_w.CD_CIE10_CAUSA_F 		:= null;
							record_w.DS_CIE10_CAUSA_F 		:= c_declaracao_obito_w.ds_causa_cie10;
							record_w.IE_TIPO_RESP_CAUSA_F	:= c_declaracao_obito_w.ie_tipo_responsavel;
						end if;
					end;
					end loop;
				
					insert into guia_morte_fetal_noms values (record_w.*);
					record_w := null;
					end;

				end loop;
				close c_dados_informante;
				end;
			end loop;
			close c_dados_mae;
			end;
		end loop;
		close c_dados_produto;
		end;
	end loop;
	close c01;
	end;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_guia_morte_fetal_noms ( dt_inicial_p timestamp, dt_final_p timestamp, ie_sobreescrever_p text, nm_usuario_p text) FROM PUBLIC;

