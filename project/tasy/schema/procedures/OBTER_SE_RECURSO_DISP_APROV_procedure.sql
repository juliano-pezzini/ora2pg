-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_recurso_disp_aprov ( nr_sequencia_p bigint, nr_seq_status_p bigint, ie_tipo_reserva_p text, ie_consiste_prazo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE

						 
ds_erro_w		varchar(2000);	
cd_equipamento_w	bigint;
nr_seq_agenda_w		bigint;
ie_gera_recurso_w	varchar(1);
qt_equipamento_w	bigint;
nr_seq_conjunto_w	bigint;
qt_conjunto_w		bigint;
		

BEGIN 
 
if (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (nr_seq_status_p IS NOT NULL AND nr_seq_status_p::text <> '') and (ie_tipo_reserva_p IS NOT NULL AND ie_tipo_reserva_p::text <> '') then 
	if (ie_tipo_reserva_p = 'EQUIP') then 
		select	max(cd_equipamento), 
			max(nr_seq_agenda) 
		into STRICT	cd_equipamento_w, 
			nr_seq_agenda_w 
		from	reserva_agenda_equip 
		where	nr_sequencia = nr_sequencia_p;
		 
		if (cd_equipamento_w IS NOT NULL AND cd_equipamento_w::text <> '') and (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then 
			select	coalesce(max(ie_gera_recurso),'N') 
			into STRICT	ie_gera_recurso_w 
			from	status_res_agenda_recurso 
			where	nr_sequencia = nr_seq_status_p 
			and	coalesce(ie_situacao,'A') = 'A';
			if (ie_gera_recurso_w = 'S') then 
				-- Analisa se o equipamento já não está vinculado ao agendamento 
				select	count(*) 
				into STRICT	qt_equipamento_w 
				from	agenda_pac_equip 
				where	cd_equipamento = cd_equipamento_w 
				and	coalesce(ie_origem_inf,'I') = 'I' 
				and	nr_seq_agenda = nr_seq_agenda_w;
 
				if (qt_equipamento_w = 0) then 
					ds_erro_w := obter_se_equip_disp_aprovavao(nr_seq_agenda_w, cd_equipamento_w, ie_consiste_prazo_p, nm_usuario_p, cd_estabelecimento_p, ds_erro_w);
				end if;
			end if;
		end if;
	elsif (ie_tipo_reserva_p = 'CME') then 
		select	max(nr_seq_conjunto), 
			max(nr_seq_agenda) 
		into STRICT	nr_seq_conjunto_w, 
			nr_seq_agenda_w 
		from	reserva_agenda_cme 
		where	nr_sequencia = nr_sequencia_p;
 
		select	coalesce(max(ie_gera_recurso),'N') 
		into STRICT	ie_gera_recurso_w 
		from	status_res_agenda_recurso 
		where	nr_sequencia = nr_seq_status_p 
		and	coalesce(ie_situacao,'A') = 'A';
 
		if (nr_seq_agenda_w IS NOT NULL AND nr_seq_agenda_w::text <> '') then 
			if (ie_gera_recurso_w = 'S') and (nr_seq_conjunto_w IS NOT NULL AND nr_seq_conjunto_w::text <> '') then 
				-- Analisa se o cme já não está vinculado ao agendamento 
				select	count(*) 
				into STRICT	qt_conjunto_w 
				from	agenda_pac_cme 
				where	nr_seq_conjunto = nr_seq_conjunto_w 
				and	coalesce(ie_origem_inf,'I') = 'I' 
				and	nr_seq_agenda = nr_seq_agenda_w;
 
				if (qt_conjunto_w = 0) then 
					ds_erro_w := obter_se_cme_disp_aprovavao(nr_seq_agenda_w, nr_seq_conjunto_w, ie_consiste_prazo_p, nm_usuario_p, cd_estabelecimento_p, ds_erro_w);
				end if;
			end if;
		end if;	
	end if;
end if;	
	 
ds_erro_p := substr(ds_erro_w,1,255);
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_recurso_disp_aprov ( nr_sequencia_p bigint, nr_seq_status_p bigint, ie_tipo_reserva_p text, ie_consiste_prazo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

