-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE hd_gerar_lote_exame (NR_SEQ_LOTE_P bigint, CD_ESTABELECIMENTO_P bigint, NR_FORMA_P bigint, NM_USUARIO_P text, CD_INTERFACE_P bigint) AS $body$
DECLARE

  DT_PERIODO_INICIAL_W    HD_LOTE_ENVIO.DT_PERIODO_INICIAL%TYPE;
  DT_PERIODO_FINAL_W      HD_LOTE_ENVIO.DT_PERIODO_FINAL%TYPE;
  NR_SEQ_PROTOCOLO_W      HD_LOTE_ENVIO.NR_SEQ_PROTOCOLO%TYPE;
  NR_SEQ_PROC_MEDIC_W     HD_LOTE_ENVIO.NR_SEQ_PROC_MEDIC%TYPE;
  CD_SETOR_COLETA_W       HD_LOTE_ENVIO.CD_SETOR_COLETA%TYPE;
  IE_PAC_HEMODIALISE_W    HD_LOTE_ENVIO.IE_SOMENTE_PAC_DIALISE%TYPE;
  DS_UNIDADE_W            HD_UNIDADE_DIALISE.DS_UNIDADE%TYPE;
  CD_UNIDADE_INTEGR_W     HD_UNIDADE_DIALISE.CD_UNIDADE_INTEGR%TYPE;
  NR_CPF_W                PESSOA_FISICA.NR_CPF%TYPE;
  NM_PESSOA_FISICA_W      PESSOA_FISICA.NM_PESSOA_FISICA%TYPE;
  CD_PESSOA_FISICA_W      PESSOA_FISICA.CD_PESSOA_FISICA%TYPE;
  NR_PRONTUARIO_W         PESSOA_FISICA.NR_PRONTUARIO%TYPE;
  CD_EXAME_W              EXAME_LABORATORIO.CD_EXAME%TYPE;
  NM_EXAME_W              EXAME_LABORATORIO.NM_EXAME%TYPE;
  IE_FORMATO_RESULTADO_W  EXAME_LABORATORIO.IE_FORMATO_RESULTADO%TYPE;
  NR_SEQ_EXAME_W          EXAME_LABORATORIO.NR_SEQ_EXAME%TYPE;
  CD_EXAME_WW             EXAME_LABORATORIO.CD_EXAME%TYPE;
  DS_UNIDADE_MEDIDA_W     EXAME_LAB_RESULT_ITEM.DS_UNIDADE_MEDIDA%TYPE;
  DT_RESULTADO_W          EXAME_LAB_RESULT_ITEM.DT_APROVACAO%TYPE;
  QT_RESULTADO_W          EXAME_LAB_RESULT_ITEM.QT_RESULTADO%TYPE;
  DS_RESULTADO_W          EXAME_LAB_RESULT_ITEM.DS_RESULTADO%TYPE;
  NR_SEQ_PRECR_W          EXAME_LAB_RESULT_ITEM.NR_SEQ_PRESCR%TYPE;
  NR_PRESCRICAO_W         EXAME_LAB_RESULTADO.NR_PRESCRICAO%TYPE;
  DT_RESULTADO_WW         EXAME_LAB_RESULTADO.DT_RESULTADO%TYPE;
  NR_PRESCRICAO_WW        PRESCR_MEDICA.NR_PRESCRICAO%TYPE;
  NR_ATENDIMENTO_W        PRESCR_MEDICA.NR_ATENDIMENTO%TYPE;
  NR_PRESCRICAO_OLD_W     PRESCR_MEDICA.NR_PRESCRICAO%TYPE;
  NR_SEQ_PRESCR_W         PRESCR_PROCEDIMENTO.NR_SEQUENCIA%TYPE;
  DT_COLETA_W             PRESCR_PROCEDIMENTO.DT_COLETA%TYPE;
  DT_ATUALIZACAO_W        PRESCR_PROC_ETAPA.DT_ATUALIZACAO%TYPE;
  IE_RESULTADO_W          HD_LOTE_ITEM_ENVIO.IE_RESULTADO_LOGICO%TYPE;
  QT_RESULTADO_DESC_W     varchar(100);
  IE_CONSISTE_NEFRODATA_W varchar(1);
  DT_COLETA_OLD_W         varchar(20);

  C01 CURSOR FOR
    SELECT F.NR_CPF,
           F.NM_PESSOA_FISICA,
           SUBSTR(coalesce(OBTER_EQUIPAMENTO_EXAME(G.NR_SEQ_EXAME, NULL, 'DIALSIST'), G.CD_EXAME), 1, 10),
           SUBSTR(G.NM_EXAME, 1, 60),
           B.DS_UNIDADE_MEDIDA,
           OBTER_DATA_APROV_LAB(C.NR_PRESCRICAO, C.NR_SEQUENCIA),
           B.QT_RESULTADO,
           TO_CHAR(B.QT_RESULTADO),
           SUBSTR(B.DS_RESULTADO, 1, 2000),
           A.NR_PRESCRICAO,
           B.NR_SEQ_PRESCR,
           E.NR_ATENDIMENTO,
           F.CD_PESSOA_FISICA,
           G.IE_FORMATO_RESULTADO,
           G.NR_SEQ_EXAME
      FROM EXAME_LAB_RESULTADO   A,
           EXAME_LAB_RESULT_ITEM B,
           PRESCR_PROCEDIMENTO   C,
           PROTOCOLO_MEDICACAO   D,
           PRESCR_MEDICA         E,
           PESSOA_FISICA         F,
           EXAME_LABORATORIO     G,
           PROTOCOLO_MEDIC_PROC  H
     WHERE A.NR_SEQ_RESULTADO = B.NR_SEQ_RESULTADO
       AND C.NR_PRESCRICAO = E.NR_PRESCRICAO
       AND C.NR_PRESCRICAO = A.NR_PRESCRICAO
       AND B.NR_SEQ_PRESCR = C.NR_SEQUENCIA
       AND H.NR_SEQ_EXAME = C.NR_SEQ_EXAME
       AND E.CD_PESSOA_FISICA = F.CD_PESSOA_FISICA
       AND G.NR_SEQ_EXAME = B.NR_SEQ_EXAME
       AND D.CD_PROTOCOLO = H.CD_PROTOCOLO
       AND D.NR_SEQUENCIA = H.NR_SEQUENCIA
       AND D.CD_PROTOCOLO = NR_SEQ_PROTOCOLO_W
       AND D.NR_SEQUENCIA = NR_SEQ_PROC_MEDIC_W
       AND (B.QT_RESULTADO > 0 OR coalesce(B.DS_RESULTADO, '0') <> '0')
       AND ((C.CD_SETOR_COLETA = CD_SETOR_COLETA_W) OR (CD_SETOR_COLETA_W = 0))
       AND (F.NR_CPF IS NOT NULL AND F.NR_CPF::text <> '')
       AND (OBTER_EQUIPAMENTO_EXAME(G.NR_SEQ_EXAME, NULL, 'DIALSIST') IS NOT NULL AND (OBTER_EQUIPAMENTO_EXAME(G.NR_SEQ_EXAME, NULL, 'DIALSIST'))::text <> '')
       AND C.IE_STATUS_ATEND > 30
       AND ((IE_PAC_HEMODIALISE_W = 'N') OR
           ((IE_PAC_HEMODIALISE_W = 'S') AND (F.CD_PESSOA_FISICA IN (SELECT CD_PESSOA_FISICA FROM HD_PAC_RENAL_CRONICO))))
       AND OBTER_DATA_APROV_LAB(C.NR_PRESCRICAO, C.NR_SEQUENCIA) BETWEEN
           DT_PERIODO_INICIAL_W AND DT_PERIODO_FINAL_W;

  C02 CURSOR FOR
    SELECT F.NR_CPF,
           F.NM_PESSOA_FISICA,
           SUBSTR(coalesce(OBTER_EQUIPAMENTO_EXAME_INTEGR(B.NR_SEQ_EXAME, 'NEFRODATA'), G.NM_EXAME), 1, 60),
           B.QT_RESULTADO,
           CASE WHEN G.IE_FORMATO_RESULTADO='SM' THEN  B.DS_RESULTADO WHEN G.IE_FORMATO_RESULTADO='SDM' THEN  B.DS_RESULTADO WHEN G.IE_FORMATO_RESULTADO='S' THEN  B.DS_RESULTADO  ELSE NULL END ,
           F.NR_PRONTUARIO,
           C.DT_COLETA,
           E.NR_PRESCRICAO,
           C.NR_SEQUENCIA,
           SUBSTR(coalesce(OBTER_EQUIPAMENTO_EXAME_INTEGR(B.NR_SEQ_EXAME, 'NEFRODATA'), G.CD_EXAME), 1, 10),
           A.DT_RESULTADO
      FROM EXAME_LAB_RESULTADO   A,
           EXAME_LAB_RESULT_ITEM B,
           PRESCR_PROCEDIMENTO   C,
           PRESCR_MEDICA         E,
           PESSOA_FISICA         F,
           EXAME_LABORATORIO     G
     WHERE A.NR_SEQ_RESULTADO = B.NR_SEQ_RESULTADO
       AND C.NR_PRESCRICAO = E.NR_PRESCRICAO
       AND C.NR_PRESCRICAO = A.NR_PRESCRICAO
       AND B.NR_SEQ_PRESCR = C.NR_SEQUENCIA
       AND E.CD_PESSOA_FISICA = F.CD_PESSOA_FISICA
       AND G.NR_SEQ_EXAME = B.NR_SEQ_EXAME
       AND (B.QT_RESULTADO > 0 OR coalesce(B.DS_RESULTADO, '0') <> '0')
       AND ((C.CD_SETOR_COLETA = CD_SETOR_COLETA_W) OR (CD_SETOR_COLETA_W = 0))
       AND ((E.NR_SEQ_FORMA_LAUDO = NR_FORMA_P) OR (NR_FORMA_P = 0))
       AND (F.NR_CPF IS NOT NULL AND F.NR_CPF::text <> '')
       AND (((coalesce(IE_CONSISTE_NEFRODATA_W, 'N') = 'S') AND ((OBTER_EQUIPAMENTO_EXAME(G.NR_SEQ_EXAME, NULL, 'NEFRODATA') IS NOT NULL AND (OBTER_EQUIPAMENTO_EXAME(G.NR_SEQ_EXAME, NULL, 'NEFRODATA'))::text <> ''))) OR
           ((coalesce(IE_CONSISTE_NEFRODATA_W, 'N') = 'N') AND (coalesce(OBTER_EQUIPAMENTO_EXAME(G.NR_SEQ_EXAME, NULL, 'NEFRODATA')::text, '') = '')))
       AND C.IE_STATUS_ATEND > 30
       AND ((IE_PAC_HEMODIALISE_W = 'N') OR
           ((IE_PAC_HEMODIALISE_W = 'S') AND (F.CD_PESSOA_FISICA IN (SELECT CD_PESSOA_FISICA FROM HD_PAC_RENAL_CRONICO))))
       AND OBTER_DATA_APROV_LAB(C.NR_PRESCRICAO, C.NR_SEQUENCIA) BETWEEN
           DT_PERIODO_INICIAL_W AND DT_PERIODO_FINAL_W;

  C03 CURSOR FOR
    SELECT F.NR_CPF,
           F.NM_PESSOA_FISICA,
           SUBSTR(CASE WHEN coalesce(IE_CONSISTE_NEFRODATA_W, 'N')='N' THEN  G.NM_EXAME  ELSE coalesce(OBTER_EQUIPAMENTO_EXAME_INTEGR(B.NR_SEQ_EXAME, 'NEFRODATA'), G.NM_EXAME) END , 1, 60),
           SUBSTR(coalesce(TO_CHAR(QT_RESULTADO), DS_RESULTADO), 1, 2000),
           B.QT_RESULTADO,
           F.NR_PRONTUARIO,
           C.DT_COLETA,
           E.NR_PRESCRICAO,
           C.NR_SEQUENCIA,
           SUBSTR(CASE WHEN coalesce(IE_CONSISTE_NEFRODATA_W, 'N')='N' THEN  G.CD_EXAME  ELSE coalesce(OBTER_EQUIPAMENTO_EXAME_INTEGR(B.NR_SEQ_EXAME, 'NEFRODATA'), G.CD_EXAME) END , 1, 10),
           A.DT_RESULTADO
      FROM EXAME_LAB_RESULTADO   A,
           EXAME_LAB_RESULT_ITEM B,
           PRESCR_PROCEDIMENTO   C,
           PRESCR_MEDICA         E,
           PESSOA_FISICA         F,
           EXAME_LABORATORIO     G
     WHERE A.NR_SEQ_RESULTADO = B.NR_SEQ_RESULTADO
       AND C.NR_PRESCRICAO = E.NR_PRESCRICAO
       AND C.NR_PRESCRICAO = A.NR_PRESCRICAO
       AND B.NR_SEQ_PRESCR = C.NR_SEQUENCIA
       AND E.CD_PESSOA_FISICA = F.CD_PESSOA_FISICA
       AND G.NR_SEQ_EXAME = B.NR_SEQ_EXAME
       AND (B.QT_RESULTADO > 0 OR coalesce(B.DS_RESULTADO, '0') <> '0')
       AND ((C.CD_SETOR_COLETA = CD_SETOR_COLETA_W) OR (CD_SETOR_COLETA_W = 0))
       AND ((E.NR_SEQ_FORMA_LAUDO = NR_FORMA_P) OR (NR_FORMA_P = 0))
       AND (F.NR_CPF IS NOT NULL AND F.NR_CPF::text <> '')
       AND (((coalesce(IE_CONSISTE_NEFRODATA_W, 'N') = 'S') AND EXISTS (SELECT 1
               FROM EQUIPAMENTO_LAB A, LAB_EXAME_EQUIP B
              WHERE A.CD_EQUIPAMENTO = B.CD_EQUIPAMENTO
                AND B.NR_SEQ_EXAME = G.NR_SEQ_EXAME
                AND A.DS_SIGLA = 'NEFRODATA'  LIMIT 1))
         OR ((coalesce(IE_CONSISTE_NEFRODATA_W, 'N') = 'N') AND NOT EXISTS (SELECT 1
               FROM EQUIPAMENTO_LAB A, LAB_EXAME_EQUIP B
              WHERE A.CD_EQUIPAMENTO = B.CD_EQUIPAMENTO
                AND B.NR_SEQ_EXAME = G.NR_SEQ_EXAME
                AND A.DS_SIGLA = 'NEFRODATA'  LIMIT 1)))
       AND C.IE_STATUS_ATEND > 30
       AND ((IE_PAC_HEMODIALISE_W = 'N') OR
           ((IE_PAC_HEMODIALISE_W = 'S') AND EXISTS (SELECT 1
                FROM HD_PAC_RENAL_CRONICO HPRC
               WHERE HPRC.CD_PESSOA_FISICA = F.CD_PESSOA_FISICA  LIMIT 1)))
       AND OBTER_DATA_APROV_LAB(C.NR_PRESCRICAO, C.NR_SEQUENCIA) BETWEEN DT_PERIODO_INICIAL_W AND DT_PERIODO_FINAL_W
     ORDER BY E.NR_PRESCRICAO, C.DT_COLETA;

BEGIN
  IF (NR_SEQ_LOTE_P IS NOT NULL AND NR_SEQ_LOTE_P::text <> '') THEN
    IE_CONSISTE_NEFRODATA_W := OBTER_PARAM_USUARIO(7009, 104, OBTER_PERFIL_ATIVO, NM_USUARIO_P, CD_ESTABELECIMENTO_P, IE_CONSISTE_NEFRODATA_W);

    DELETE FROM HD_LOTE_ITEM_ENVIO WHERE NR_SEQ_LOTE = NR_SEQ_LOTE_P;

    SELECT DT_PERIODO_INICIAL,
           DT_PERIODO_FINAL,
           NR_SEQ_PROTOCOLO,
           NR_SEQ_PROC_MEDIC,
           coalesce(CD_SETOR_COLETA, 0),
           coalesce(IE_SOMENTE_PAC_DIALISE, 'N')
      INTO STRICT DT_PERIODO_INICIAL_W,
           DT_PERIODO_FINAL_W,
           NR_SEQ_PROTOCOLO_W,
           NR_SEQ_PROC_MEDIC_W,
           CD_SETOR_COLETA_W,
           IE_PAC_HEMODIALISE_W
      FROM HD_LOTE_ENVIO
     WHERE NR_SEQUENCIA = NR_SEQ_LOTE_P;

    SELECT MAX(DS_UNIDADE), MAX(CD_UNIDADE_INTEGR)
      INTO STRICT DS_UNIDADE_W, CD_UNIDADE_INTEGR_W
      FROM HD_UNIDADE_DIALISE
     WHERE CD_ESTABELECIMENTO = CD_ESTABELECIMENTO_P;

    IF (CD_INTERFACE_P = 1644) THEN
      BEGIN
        OPEN C02;
        LOOP
          FETCH C02
            INTO NR_CPF_W, NM_PESSOA_FISICA_W, NM_EXAME_W, QT_RESULTADO_W, DS_RESULTADO_W, NR_PRONTUARIO_W,
                 DT_COLETA_W, NR_PRESCRICAO_WW, NR_SEQ_PRESCR_W, CD_EXAME_WW, DT_RESULTADO_WW;
          EXIT WHEN NOT FOUND; /* apply on C02 */

          IF (DS_RESULTADO_W IS NOT NULL AND DS_RESULTADO_W::text <> '') AND (coalesce(QT_RESULTADO_W, 0) = 0) THEN
            IF (SUBSTR(UPPER(DS_RESULTADO_W), 1, 8) = UPPER(WHEB_MENSAGEM_PCK.GET_TEXTO(309095))) THEN -- POSITIVO
              DS_RESULTADO_W := '0000000001';
            ELSIF (SUBSTR(UPPER(DS_RESULTADO_W), 1, 8) = UPPER(WHEB_MENSAGEM_PCK.GET_TEXTO(309096))) THEN -- NEGATIVO
              DS_RESULTADO_W := '0000000000';
            ELSIF (SUBSTR(UPPER(DS_RESULTADO_W), 1, 13) = UPPER(WHEB_MENSAGEM_PCK.GET_TEXTO(309097))) THEN -- INDETERMINADO
              DS_RESULTADO_W := '0000000002';
            ELSIF (SUBSTR(UPPER(DS_RESULTADO_W), 1, 8) = UPPER(WHEB_MENSAGEM_PCK.GET_TEXTO(309098))) THEN -- REAGENTE
              DS_RESULTADO_W := '0000000003';
            ELSIF (SUBSTR(UPPER(DS_RESULTADO_W), 1, 12) = UPPER(WHEB_MENSAGEM_PCK.GET_TEXTO(309101))) THEN -- NAO REAGENTE
              DS_RESULTADO_W := '0000000004';
            END IF;
            IF (QT_RESULTADO_W = 0) THEN
              QT_RESULTADO_W := NULL;
            END IF;
          END IF;

          INSERT INTO HD_LOTE_ITEM_ENVIO(NR_SEQUENCIA,
             DT_ATUALIZACAO,
             NM_USUARIO,
             DT_ATUALIZACAO_NREC,
             NM_USUARIO_NREC,
             NR_SEQ_LOTE,
             NR_PRONTUARIO,
             NM_PACIENTE,
             DT_COLETA,
             NM_EXAME,
             NR_CPF,
             QT_RESULTADO,
             CD_EXAME,
             DT_RESULTADO,
             NR_SEQ_PRESCR,
             NR_PRESCRICAO)
          VALUES (nextval('hd_lote_item_envio_seq'),
             clock_timestamp(),
             NM_USUARIO_P,
             clock_timestamp(),
             NM_USUARIO_P,
             NR_SEQ_LOTE_P,
             NULL,
             NM_PESSOA_FISICA_W,
             DT_COLETA_W,
             NM_EXAME_W,
             NR_CPF_W,
             SUBSTR(coalesce(TO_CHAR(QT_RESULTADO_W), DS_RESULTADO_W), 1, 20),
             CD_EXAME_WW,
             DT_RESULTADO_WW,
             NR_SEQ_PRESCR_W,
             NR_PRESCRICAO_WW);
        END LOOP;
        CLOSE C02;
      END;
    ELSIF (CD_INTERFACE_P = 1838) THEN
      BEGIN
        OPEN C03;
        LOOP
          FETCH C03
            INTO NR_CPF_W, NM_PESSOA_FISICA_W, NM_EXAME_W, DS_RESULTADO_W, QT_RESULTADO_W, NR_PRONTUARIO_W,
                 DT_COLETA_W, NR_PRESCRICAO_WW, NR_SEQ_PRESCR_W, CD_EXAME_WW, DT_RESULTADO_WW;
          EXIT WHEN NOT FOUND; /* apply on C03 */

          IF (coalesce(NR_PRESCRICAO_OLD_W::text, '') = ''
          OR coalesce(DT_COLETA_OLD_W::text, '') = ''
          OR NR_PRESCRICAO_OLD_W <> NR_PRESCRICAO_WW
          OR DT_COLETA_OLD_W <> TO_CHAR(DT_COLETA_W, 'DD/MM/YYYY HH24:MI:SS')) THEN
            INSERT INTO HD_LOTE_ITEM_ENVIO(NR_SEQUENCIA,
               DT_ATUALIZACAO,
               NM_USUARIO,
               DT_ATUALIZACAO_NREC,
               NM_USUARIO_NREC,
               NR_SEQ_LOTE,
               NM_PACIENTE,
               DT_COLETA,
               NR_CPF,
               NR_PRESCRICAO,
               CD_TIPO_REGISTRO)
            VALUES (nextval('hd_lote_item_envio_seq'),
               clock_timestamp(),
               NM_USUARIO_P,
               clock_timestamp(),
               NM_USUARIO_P,
               NR_SEQ_LOTE_P,
               NM_PESSOA_FISICA_W,
               DT_COLETA_W,
               NR_CPF_W,
               NR_PRESCRICAO_WW,
               1);
          END IF;

          NR_PRESCRICAO_OLD_W := NR_PRESCRICAO_WW;
          DT_COLETA_OLD_W     := TO_CHAR(DT_COLETA_W, 'DD/MM/YYYY HH24:MI:SS');

          INSERT INTO HD_LOTE_ITEM_ENVIO(NR_SEQUENCIA,
             DT_ATUALIZACAO,
             NM_USUARIO,
             DT_ATUALIZACAO_NREC,
             NM_USUARIO_NREC,
             NR_SEQ_LOTE,
             NR_PRONTUARIO,
             NM_PACIENTE,
             DT_COLETA,
             NM_EXAME,
             NR_CPF,
             DS_RESULTADO,
             QT_RESULTADO,
             CD_EXAME,
             DT_RESULTADO,
             NR_SEQ_PRESCR,
             NR_PRESCRICAO,
             CD_TIPO_REGISTRO)
          VALUES (nextval('hd_lote_item_envio_seq'),
             clock_timestamp(),
             NM_USUARIO_P,
             clock_timestamp(),
             NM_USUARIO_P,
             NR_SEQ_LOTE_P,
             NULL,
             NULL, --NM_PESSOA_FISICA_W,
             DT_COLETA_W,
             NM_EXAME_W,
             NULL, --NR_CPF_W,
             DS_RESULTADO_W,
             SUBSTR(QT_RESULTADO_W, 1, 20),
             CD_EXAME_WW,
             DT_RESULTADO_WW,
             NR_SEQ_PRESCR_W,
             NR_PRESCRICAO_WW,
             2);
        END LOOP;
        CLOSE C03;
      END;
    ELSE
      BEGIN
        OPEN C01;
        LOOP
          FETCH C01
            INTO NR_CPF_W, NM_PESSOA_FISICA_W, CD_EXAME_W, NM_EXAME_W, DS_UNIDADE_MEDIDA_W, DT_RESULTADO_W,
                 QT_RESULTADO_W, QT_RESULTADO_DESC_W, DS_RESULTADO_W, NR_PRESCRICAO_W, NR_SEQ_PRECR_W, 
                 NR_ATENDIMENTO_W, CD_PESSOA_FISICA_W, IE_FORMATO_RESULTADO_W, NR_SEQ_EXAME_W;
          EXIT WHEN NOT FOUND; /* apply on C01 */

          SELECT MIN(DT_ATUALIZACAO)
            INTO STRICT DT_ATUALIZACAO_W
            FROM PRESCR_PROC_ETAPA
           WHERE NR_PRESCRICAO = NR_PRESCRICAO_W
             AND IE_ETAPA = 25;

          IF (IE_FORMATO_RESULTADO_W IN ('CA', 'CV', 'P', 'V', 'VP', 'DV')) THEN
            DS_RESULTADO_W := NULL;
          ELSE
            QT_RESULTADO_DESC_W := NULL;
            DS_RESULTADO_W      := REPLACE(DS_RESULTADO_W, CHR(13), '&');
          END IF;

          IE_RESULTADO_W := NULL;
          IF (SUBSTR(UPPER(DS_RESULTADO_W), 1, 7) = WHEB_MENSAGEM_PCK.GET_TEXTO(309102)) -- POSITIV
          OR (SUBSTR(UPPER(DS_RESULTADO_W), 1, 7) = WHEB_MENSAGEM_PCK.GET_TEXTO(309103)) -- NEGATIV
          OR (SUBSTR(UPPER(DS_RESULTADO_W), 1, 7) = WHEB_MENSAGEM_PCK.GET_TEXTO(309104)) -- REAGENT
          OR (SUBSTR(UPPER(DS_RESULTADO_W), 5, 7) = WHEB_MENSAGEM_PCK.GET_TEXTO(309104)) THEN -- REAGENT
            IE_RESULTADO_W := SUBSTR(DS_RESULTADO_W, 1, 30);
            DS_RESULTADO_W := NULL;
          END IF;

          INSERT INTO HD_LOTE_ITEM_ENVIO(NR_SEQUENCIA,
             DT_ATUALIZACAO,
             NM_USUARIO,
             DT_ATUALIZACAO_NREC,
             NM_USUARIO_NREC,
             NR_SEQ_LOTE,
             NM_CENTRO_DIALISE,
             CD_CENTRO_DIALISE,
             CD_PESSOA_FISICA,
             NR_PRESCRICAO,
             NR_SEQ_PRESCR,
             NR_ATENDIMENTO,
             NM_PACIENTE,
             CD_EXAME,
             NR_CPF,
             NM_EXAME,
             DS_UNIDADE_MEDIDA,
             DT_RESULTADO,
             QT_RESULTADO,
             IE_RESULTADO_LOGICO,
             DS_RESULTADO,
             CD_TIPO_REGISTRO,
             DS_TRACO)
          VALUES (nextval('hd_lote_item_envio_seq'),
             clock_timestamp(),
             NM_USUARIO_P,
             clock_timestamp(),
             NM_USUARIO_P,
             NR_SEQ_LOTE_P,
             DS_UNIDADE_W,
             CD_UNIDADE_INTEGR_W,
             CD_PESSOA_FISICA_W,
             NR_PRESCRICAO_W,
             NR_SEQ_PRECR_W,
             NR_ATENDIMENTO_W,
             NM_PESSOA_FISICA_W,
             CD_EXAME_W,
             NR_CPF_W,
             NM_EXAME_W,
             DS_UNIDADE_MEDIDA_W,
             coalesce(DT_ATUALIZACAO_W, DT_RESULTADO_W),
             SUBSTR(QT_RESULTADO_DESC_W, 1, 20),
             IE_RESULTADO_W,
             DS_RESULTADO_W,
             1,
             '|');
        END LOOP;
        CLOSE C01;
      END;
    END IF;

    UPDATE HD_LOTE_ENVIO
       SET DT_GERACAO = clock_timestamp()
     WHERE NR_SEQUENCIA = NR_SEQ_LOTE_P;
  END IF;

  COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE hd_gerar_lote_exame (NR_SEQ_LOTE_P bigint, CD_ESTABELECIMENTO_P bigint, NR_FORMA_P bigint, NM_USUARIO_P text, CD_INTERFACE_P bigint) FROM PUBLIC;

