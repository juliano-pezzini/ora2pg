-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atend_pac_befpost_abort_eup ( dt_entrada_p timestamp, ie_responsavel_p text, ie_obriga_resp_p text, ie_permite_resp_paciente_p text, nr_seq_indicacao_p bigint, ie_classif_obriga_indic_w text, ie_proced_atend_pa_p text, nr_atend_origem_pa_p bigint, ie_verifica_atend_vali_p text, ie_consis_medico_estab_p text, cd_procedencia_p bigint, ie_novo_p text, ie_tipo_convenio_atend_p bigint, ie_consis_tipo_convenio_w text, ie_consis_medico_tipo_atend_p text, ie_tipo_atend_tiss_p bigint, nr_atendimento_p bigint, ie_novo_atend_alta_anterior_p text, ie_vinculo_medico_inst_p text, cd_setor_usuario_p bigint, ie_considerar_regra_atual_p text, nr_seq_regra_funcao_atual_p bigint, nr_seq_regra_funcao_p bigint, ie_resp_nao_medico_w text, ie_exige_resp_atend_intern_p text, ie_qt_max_min_idade_p text, cd_pessoa_fisica_p text, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, ie_resp_menor_idade_p text, qt_idade_min_cons_cpf_p bigint, cd_pessoa_responsavel_p text, ie_resp_sem_cpf_p text, cd_medico_referido_p text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, ie_clinica_p bigint, nr_seq_classificacao_p bigint, ie_modo_edicao_novo_p text, ie_consistir_classif_atend_p text, ie_modo_edicao_p text, nm_usuario_p text, cd_medico_resp_p text, cd_medico_resp_old_p text, ie_perm_alt_medico_resp_p text, ds_msg_erro_p INOUT text, ds_msg_erro_cancel_p INOUT text) AS $body$
DECLARE


ds_msg_erro_w		varchar(255);
ds_msg_erro_cancel_w	varchar(255);	
ie_regra_atend_lib_w	varchar(1);	
ie_medico_w		varchar(1);	
qt_idade_responsavel_w	bigint;	
ie_resp_brasileiro_w	varchar(1);
ie_pac_brasileiro_w	varchar(1);
nr_cpf_resp_w		varchar(11);
nr_cpf_pac_w		pessoa_fisica.nr_cpf%type;
nr_RNE_resp_w		varchar(30);
nr_passaporte_resp_w	varchar(255);
nr_carteira_estr_resp_w	varchar(30);
ie_documento_inform_w	varchar(30);
qt_idade_resp_w		integer;
ie_emancipado_w		varchar(1);
ie_resp_dt_obito_w	varchar(1);
cd_pessoa_agenda_w	varchar(10);
ie_verifica_idade_w	varchar(1);
qt_medico_w		bigint;
ie_conselho_liberado_w	varchar(1);
nr_seq_regra_funcao_w   bigint;
ie_consistir_vinc_medico_w	varchar(1);
qt_possui_convenio_w	bigint;
ie_tipo_convenio_w	smallint;
ie_medico_estab_w	varchar(1);
ie_verifica_atend_pa_w	varchar(1);
ie_proced_valida_w	varchar(1);
ie_contido_classificacao_w	varchar(1);
ie_perm_agendar_classif_w	varchar(80);
ie_possui_atend_w	varchar(1);
ie_consiste_atend_sem_alta_w	varchar(3);
				

BEGIN

if (ie_modo_edicao_p = 'S') and (ie_perm_alt_medico_resp_p = 'N') and (cd_medico_resp_old_p IS NOT NULL AND cd_medico_resp_old_p::text <> '') then

	if (cd_medico_resp_p <> cd_medico_resp_old_p) then
		ds_msg_erro_cancel_w := substr(obter_texto_tasy(293079, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
end if;

if (cd_medico_resp_p IS NOT NULL AND cd_medico_resp_p::text <> '') then

	select	count(*)
	into STRICT	qt_medico_w
	from	medico 
	where	cd_pessoa_fisica = cd_medico_resp_p;
	
	ie_conselho_liberado_w := obter_se_responsavel_atend(obter_perfil_ativo,cd_medico_resp_p,0,0);
	if (ie_resp_nao_medico_w = 'S') and (coalesce(qt_medico_w,0) = 0) and (ie_conselho_liberado_w = 'N') then
		ds_msg_erro_w := substr(obter_texto_tasy(97922, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
	if	((ie_resp_nao_medico_w <> 'S') or
		 ((coalesce(qt_medico_w,0) > 0) and (ie_resp_nao_medico_w = 'S') and (ie_conselho_liberado_w = 'N'))) and (coalesce(qt_medico_w,0) < 1) then
		ds_msg_erro_w := substr(obter_texto_tasy(97923, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
		
	if (ie_vinculo_medico_inst_p IS NOT NULL AND ie_vinculo_medico_inst_p::text <> '') then
		ie_consistir_vinc_medico_w := consistir_vinculo_medico_atend(cd_medico_resp_p, ie_vinculo_medico_inst_p);
		if (ie_consistir_vinc_medico_w = 'N') then
			ds_msg_erro_cancel_w := substr(obter_texto_tasy(93618, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;
	if (ie_consis_medico_tipo_atend_p = 'N') then
		ds_msg_erro_w := Consiste_Medico_Tipo_Atend(cd_estabelecimento_p, ie_tipo_atendimento_p, cd_medico_resp_p, nm_usuario_p, ds_msg_erro_w);
		if (ds_msg_erro_w IS NOT NULL AND ds_msg_erro_w::text <> '') then
			goto final;
		end if;
	end if;
	
	if (ie_consis_medico_estab_p = 'S') then
		ie_medico_estab_w := obter_se_medico_estab2(cd_medico_resp_p, cd_estabelecimento_p);
		if (ie_medico_estab_w = 'N') then
			ds_msg_erro_w := substr(obter_texto_tasy(93824, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;
	if (ie_modo_edicao_novo_p = 'S') and (coalesce(ie_tipo_atendimento_p,0) > 0) then
		CALL consiste_imped_medico_atend(cd_medico_resp_p,ie_tipo_atendimento_p);
	end if;
end if;
if (coalesce(nr_seq_classificacao_p,0) > 0) then	
	
	if	((ie_modo_edicao_p = 'S' AND ie_consistir_classif_atend_p = 'S') or
		(ie_modo_edicao_novo_p = 'S' AND ie_consistir_classif_atend_p = 'T')) and (coalesce(ie_clinica_p,0) > 0) then
		
		ie_regra_atend_lib_w := Obter_regra_atend_lib(obter_perfil_ativo,nr_seq_classificacao_p,cd_estabelecimento_p,ie_clinica_p,ie_tipo_atendimento_p);
		if (ie_regra_atend_lib_w <> 'S') then
			ds_msg_erro_w := substr(obter_texto_tasy(93391, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;

	if (ie_classif_obriga_indic_w IS NOT NULL AND ie_classif_obriga_indic_w::text <> '') and (nr_seq_indicacao_p = 0) then
		ie_contido_classificacao_w := obter_se_contido_entre_virgula(ie_classif_obriga_indic_w,nr_seq_classificacao_p);
		if (ie_contido_classificacao_w = 'S') then
			ds_msg_erro_w := substr(obter_texto_tasy(114538, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;
end if;

if (cd_medico_referido_p IS NOT NULL AND cd_medico_referido_p::text <> '') then
	
	ie_medico_w := Obter_se_Medico(cd_medico_referido_p,'M');
	if (ie_medico_w = 'N') then
	
		ds_msg_erro_w := substr(obter_texto_tasy(93397, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
end if;	

if (cd_pessoa_responsavel_p IS NOT NULL AND cd_pessoa_responsavel_p::text <> '') then
	if (ie_resp_sem_cpf_p <> 'S') then
		
		qt_idade_responsavel_w 	:= coalesce(obter_idade_pf(cd_pessoa_responsavel_p, clock_timestamp(), 'A'),0);
		ie_resp_brasileiro_w   	:= obter_se_brasileiro(cd_pessoa_responsavel_p);
		ie_pac_brasileiro_w		:= obter_se_brasileiro(cd_pessoa_fisica_p);
		
		if (coalesce(ie_resp_brasileiro_w,'N') <> 'S') or (qt_idade_responsavel_w >= coalesce(qt_idade_min_cons_cpf_p,0)) then
		
			nr_cpf_resp_w 	:= obter_cpf_pessoa_fisica(cd_pessoa_responsavel_p);
			nr_cpf_pac_w 	:= obter_cpf_pessoa_fisica(cd_pessoa_fisica_p);
			--Consistir
			if (ie_resp_sem_cpf_p = 'N') and (coalesce(nr_cpf_resp_w::text, '') = '') then
				ds_msg_erro_w := substr(obter_texto_tasy(93407, wheb_usuario_pck.get_nr_seq_idioma),1,255);
				goto final;
			--Somente brasileiros, caso estrangeiro consiste o Passaporte
			elsif (ie_resp_sem_cpf_p = 'E') then	
				
				nr_RNE_resp_w := obter_dados_pf(cd_pessoa_responsavel_p,'RGE');
				nr_passaporte_resp_w   := obter_dados_pf(cd_pessoa_responsavel_p,'PA');
				nr_carteira_estr_resp_w := obter_dados_pf(cd_pessoa_responsavel_p,'CE');
				
				if	(((coalesce(ie_resp_brasileiro_w,'N') = 'S') and (coalesce(nr_cpf_resp_w::text, '') = '')) or
					 ((coalesce(ie_resp_brasileiro_w,'N') = 'N') and
					  ((coalesce(nr_RNE_resp_w::text, '') = '') and (coalesce(nr_passaporte_resp_w::text, '') = '') and (coalesce(nr_carteira_estr_resp_w::text, '') = '')))) then
				
					if (coalesce(ie_resp_brasileiro_w,'N') = 'S') and (coalesce(nr_cpf_resp_w::text, '') = '') then
						ie_documento_inform_w := substr(obter_texto_tasy(293201, wheb_usuario_pck.get_nr_seq_idioma),1,30);
					else
						ie_documento_inform_w := substr(obter_texto_tasy(293202, wheb_usuario_pck.get_nr_seq_idioma),1,30);
					end if;
					ds_msg_erro_w := substr(obter_texto_dic_objeto(93468, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||ie_documento_inform_w),1,255);
					goto final;
				end if;
			--Somente brasileiros
			elsif (ie_resp_sem_cpf_p = 'B') then	
				
				if (ie_resp_brasileiro_w = 'S') and (coalesce(nr_cpf_resp_w::text, '') = '') then
					ie_documento_inform_w := substr(obter_texto_tasy(293201, wheb_usuario_pck.get_nr_seq_idioma),1,30);
					ds_msg_erro_w := substr(obter_texto_dic_objeto(93468, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||ie_documento_inform_w),1,255);
					goto final;
				end if;	
			--Somente se paciente brasileiro com CPF
			elsif (ie_resp_sem_cpf_p = 'C') then	
				
				if (ie_pac_brasileiro_w = 'S') and (coalesce(nr_cpf_pac_w::text, '') = '') and (coalesce(nr_cpf_resp_w::text, '') = '')then
					ie_documento_inform_w := substr(obter_texto_tasy(293201, wheb_usuario_pck.get_nr_seq_idioma),1,30);
					ds_msg_erro_w := substr(obter_texto_dic_objeto(315586, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||ie_documento_inform_w),1,255);
					goto final;
				end if;	
			end if;	
		
		end if;
	end if;
	
	if (ie_resp_menor_idade_p = 'S') then
		
		qt_idade_resp_w := Obter_Idade_PF(cd_pessoa_responsavel_p,clock_timestamp(), 'A');
		select	coalesce(max(ie_emancipado),'N') 
		into STRICT	ie_emancipado_w
		from	pessoa_fisica 
		where	cd_pessoa_fisica = cd_pessoa_responsavel_p;
		
		if (qt_idade_resp_w < 18) and (ie_emancipado_w = 'N') then
			ds_msg_erro_w := substr(obter_texto_tasy(93450, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
		
	end if;	
		
	select	CASE WHEN coalesce(dt_obito::text, '') = '' THEN 'N'  ELSE 'S' END
	into STRICT	ie_resp_dt_obito_w
	from	pessoa_fisica 
	where	cd_pessoa_fisica = cd_pessoa_responsavel_p;
	if (ie_resp_dt_obito_w = 'S') then
		
		ds_msg_erro_w := substr(obter_texto_tasy(93457, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
	
	if	((ie_permite_resp_paciente_p = 'N') or
                 (ie_permite_resp_paciente_p = 'I' AND ie_tipo_atendimento_p = 1)) and (cd_pessoa_responsavel_p = cd_pessoa_fisica_p) then
		ds_msg_erro_w := substr(obter_texto_tasy(207329, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
	if (ie_obriga_resp_p = 'S') and (coalesce(ie_responsavel_p::text, '') = '') then
		ds_msg_erro_w := substr(obter_texto_tasy(236024, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
/*else  -- Transferido o tratamento para o JAVA, pois ele deve ocorrer após a consistência do parâmetro 89
	if	(ie_qt_max_min_idade_p is not null) and
		((ie_exige_resp_atend_intern_p = 'N') or 
		 ((ie_exige_resp_atend_intern_p = 'S') and 
		  (ie_tipo_atendimento_p = 1))) and
		(cd_pessoa_fisica_p is not null) then
		  
		ie_verifica_idade_w := verifica_idade_min_max(ie_qt_max_min_idade_p, cd_pessoa_fisica_p);
		if	(ie_verifica_idade_w = 'S') then
		
			ds_msg_erro_w := substr(obter_texto_tasy(93527, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;*/
end if;	
	
if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then	
	if (coalesce(nr_seq_agenda_p,0) > 0) and (cd_tipo_agenda_p in (1,2)) then
		
		select	cd_pessoa_fisica
		into STRICT	cd_pessoa_agenda_w
		from	agenda_paciente
		where   nr_sequencia = nr_seq_agenda_p;
		
		if (cd_pessoa_agenda_w IS NOT NULL AND cd_pessoa_agenda_w::text <> '') and (cd_pessoa_fisica_p <> cd_pessoa_agenda_w) then
			ds_msg_erro_w := substr(obter_texto_tasy(93513, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;	
	if (ie_verifica_atend_vali_p = 'S') and (coalesce(nr_atend_origem_pa_p,0) > 0) then
		ie_verifica_atend_pa_w := verifica_se_atendPA(nr_atend_origem_pa_p, cd_pessoa_fisica_p);
		if (ie_verifica_atend_pa_w = 'N') then
			ds_msg_erro_w := substr(obter_texto_tasy(93853, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;
	if (dt_entrada_p IS NOT NULL AND dt_entrada_p::text <> '') then
		ie_perm_agendar_classif_w := obter_se_perm_pf_classif(916, 0, cd_pessoa_fisica_p, dt_entrada_p, 'DS');
		if (ie_perm_agendar_classif_w IS NOT NULL AND ie_perm_agendar_classif_w::text <> '') then
			ds_msg_erro_cancel_w := substr(obter_texto_dic_objeto(93364, wheb_usuario_pck.get_nr_seq_idioma, 'ITEM='||ie_perm_agendar_classif_w),1,255);
			goto final;
		end if;
	end if;
end if;

if (ie_proced_atend_pa_p IS NOT NULL AND ie_proced_atend_pa_p::text <> '') and (coalesce(nr_atend_origem_pa_p,0) > 0) then
	ie_proced_valida_w := obter_se_contido_entre_virgula(ie_proced_atend_pa_p,cd_procedencia_p);
	if (ie_proced_valida_w = 'N') then
		ds_msg_erro_w := substr(obter_texto_tasy(93855, wheb_usuario_pck.get_nr_seq_idioma),1,255);
		goto final;
	end if;
end if;

if (ie_considerar_regra_atual_p = 'S') then
	nr_seq_regra_funcao_w := nr_seq_regra_funcao_atual_p;
elsif (coalesce(nr_seq_regra_funcao_p,0) > 0) then
	nr_seq_regra_funcao_w := nr_seq_regra_funcao_p;
else
	nr_seq_regra_funcao_w := nr_seq_regra_funcao_atual_p;
end if;
ds_msg_erro_w := Consiste_clinica_tipo_atend(cd_estabelecimento_p, ie_clinica_p, ie_tipo_atendimento_p, nr_seq_regra_funcao_w, cd_setor_usuario_p, ds_msg_erro_w);
if (ds_msg_erro_w IS NOT NULL AND ds_msg_erro_w::text <> '') then
	goto final;
end if;


if (ie_novo_atend_alta_anterior_p = 'R') and (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') then

	ds_msg_erro_w := consistir_atend_sem_alta(nr_atendimento_p, ie_tipo_atendimento_p, cd_pessoa_fisica_p, cd_estabelecimento_p, cd_setor_usuario_p, ie_tipo_atend_tiss_p, ie_clinica_p, ds_msg_erro_w, ie_tipo_convenio_atend_p);
	if (ds_msg_erro_w IS NOT NULL AND ds_msg_erro_w::text <> '') then
		goto final;
	end if;
end if;

if (ie_consis_tipo_convenio_w = 'S') and
	((ie_modo_edicao_p = 'S') and (coalesce(ie_tipo_convenio_atend_p,0) > 0)) then
	
	select	count(*)
	into STRICT	qt_possui_convenio_w
	from	atend_categoria_convenio 
	where	nr_atendimento = nr_atendimento_p;
	
	if (qt_possui_convenio_w > 0) then
		ie_tipo_convenio_w := obter_tipo_convenio(obter_convenio_atendimento(nr_atendimento_p));
		if (coalesce(ie_tipo_convenio_w,0) > 0) and (ie_tipo_convenio_atend_p <> ie_tipo_convenio_w) then
			ds_msg_erro_w := substr(obter_texto_tasy(93785, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;
		end if;
	end if;
	
end if;
if (ie_novo_p = 'S') then
	ds_msg_erro_w := regra_gerar_atend_proc(cd_procedencia_p, ds_msg_erro_w);
	if (ds_msg_erro_w IS NOT NULL AND ds_msg_erro_w::text <> '') then
		goto final;
	end if;
end if;
ie_consiste_atend_sem_alta_w := obter_param_usuario(915, 15, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_consiste_atend_sem_alta_w);
if (ie_consiste_atend_sem_alta_w = 'S') and (coalesce(nr_seq_agenda_p,0) > 0) then
	
	if (cd_tipo_agenda_p in (2)) then
	
		begin
			
			select	'S'
			into STRICT	ie_possui_atend_w
			from	agenda_paciente
			where   nr_sequencia = nr_seq_agenda_p
			and	nr_atendimento <> nr_atendimento_p 
			and	(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '') LIMIT 1;

			ds_msg_erro_w := substr(obter_texto_tasy(325323, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;   		
		
		exception
		when others then
			ie_possui_atend_w := 'N';
		end;
	
	elsif (cd_tipo_agenda_p in (3,4,5)) then
		begin
		
			select	'S'
			into STRICT	ie_possui_atend_w
			from	agenda_consulta
			where   nr_sequencia = nr_seq_agenda_p
			and	nr_atendimento <> nr_atendimento_p 
			and	(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '') LIMIT 1;			
	
			ds_msg_erro_w := substr(obter_texto_tasy(325323, wheb_usuario_pck.get_nr_seq_idioma),1,255);
			goto final;   		
		
		exception
		when others then
			ie_possui_atend_w := 'N';
		end;	
	end if;
	
	
end if;
<<final>>

ds_msg_erro_p := ds_msg_erro_w;
ds_msg_erro_cancel_p := ds_msg_erro_cancel_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atend_pac_befpost_abort_eup ( dt_entrada_p timestamp, ie_responsavel_p text, ie_obriga_resp_p text, ie_permite_resp_paciente_p text, nr_seq_indicacao_p bigint, ie_classif_obriga_indic_w text, ie_proced_atend_pa_p text, nr_atend_origem_pa_p bigint, ie_verifica_atend_vali_p text, ie_consis_medico_estab_p text, cd_procedencia_p bigint, ie_novo_p text, ie_tipo_convenio_atend_p bigint, ie_consis_tipo_convenio_w text, ie_consis_medico_tipo_atend_p text, ie_tipo_atend_tiss_p bigint, nr_atendimento_p bigint, ie_novo_atend_alta_anterior_p text, ie_vinculo_medico_inst_p text, cd_setor_usuario_p bigint, ie_considerar_regra_atual_p text, nr_seq_regra_funcao_atual_p bigint, nr_seq_regra_funcao_p bigint, ie_resp_nao_medico_w text, ie_exige_resp_atend_intern_p text, ie_qt_max_min_idade_p text, cd_pessoa_fisica_p text, cd_tipo_agenda_p bigint, nr_seq_agenda_p bigint, ie_resp_menor_idade_p text, qt_idade_min_cons_cpf_p bigint, cd_pessoa_responsavel_p text, ie_resp_sem_cpf_p text, cd_medico_referido_p text, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, ie_clinica_p bigint, nr_seq_classificacao_p bigint, ie_modo_edicao_novo_p text, ie_consistir_classif_atend_p text, ie_modo_edicao_p text, nm_usuario_p text, cd_medico_resp_p text, cd_medico_resp_old_p text, ie_perm_alt_medico_resp_p text, ds_msg_erro_p INOUT text, ds_msg_erro_cancel_p INOUT text) FROM PUBLIC;

