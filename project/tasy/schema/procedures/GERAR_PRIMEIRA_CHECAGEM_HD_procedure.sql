-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_primeira_checagem_hd ( nr_prescricao_p bigint, nr_seq_item_p bigint, nr_horario_evento_p bigint, nm_usuario_p text, ie_acao_p bigint ) AS $body$
DECLARE


nr_sequencia_w				bigint;
nr_etapa_atual_sol_w		prescr_mat_hor.nr_etapa_sol%type;
nr_etapa_atual_w			prescr_solucao.nr_etapas%type;
dt_horario_w				prescr_mat_hor.dt_horario%type;
ie_existe_etapa_anterior_w	varchar(1);


BEGIN
	if (nr_horario_evento_p IS NOT NULL AND nr_horario_evento_p::text <> '') 	and (nr_horario_evento_p > 0 )			then
		
		select	coalesce(max(nr_etapa_sol),0),
				max(dt_horario)
		into STRICT	nr_etapa_atual_sol_w,
				dt_horario_w
		from	prescr_mat_hor
		where	nr_sequencia = nr_horario_evento_p;
				
		select	coalesce(max('S'), 'N')
		into STRICT	ie_existe_etapa_anterior_w	
		from	prescr_mat_hor
		where	nr_prescricao 	= nr_prescricao_p
		and		nr_seq_solucao 	= nr_seq_item_p
		and		dt_horario 		< dt_horario_w
		and		coalesce(coalesce(dt_fim_horario, dt_suspensao, dt_inicio_horario)::text, '') = ''
		and		coalesce(ie_horario_especial, 'N') <> 'S'
		and		ie_agrupador = 4;
	
	    if (ie_existe_etapa_anterior_w = 'S') then			
			CALL wheb_mensagem_pck.exibir_mensagem_abort(1047492);
		end if;
				
	else
		nr_etapa_atual_sol_w := obter_etapa_atual(nr_prescricao_p, nr_seq_item_p);
	end if;

	if (coalesce(nr_etapa_atual_sol_w::text, '') = '') then
		nr_etapa_atual_sol_w := nr_horario_evento_p;
	end if;	
	
	if (nr_etapa_atual_sol_w = 0) then
		nr_etapa_atual_sol_w := obter_etapa_atual(nr_prescricao_p, nr_seq_item_p);
	end if;	
	
	--Quando for reinicio
	if	((coalesce(ie_acao_p,0) > 0) and (coalesce(nr_etapa_atual_sol_w,0) > 0) and (ie_acao_p = 3) and (nr_horario_evento_p = 0)) then
		nr_etapa_atual_sol_w	:= nr_etapa_atual_sol_w +1;
	end if;
	
	--Tratamento criado para verificar se a etapa que esta sendo efetuada a acao nao esta suspensa
	select	min(a.nr_etapa_sol)
	into STRICT	nr_etapa_atual_w
	from	prescr_mat_hor a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.nr_seq_solucao = nr_seq_item_p
	and		a.nr_etapa_sol >= nr_etapa_atual_sol_w
	and		coalesce(a.dt_suspensao::text, '') = ''
	and		coalesce(a.ie_horario_especial,'N') <> 'S'
	and		coalesce(a.dt_inicio_horario::text, '') = '';
		
	update	prescr_mat_hor
	set		dt_primeira_checagem 	= clock_timestamp(),
			nm_usuario 				= nm_usuario_p
	where	nr_prescricao 			= nr_prescricao_p
	and		nr_seq_solucao 			= nr_seq_item_p
	and		nr_etapa_sol 			= nr_etapa_atual_w;
	
	select	nextval('hd_prescricao_evento_seq')
	into STRICT	nr_sequencia_w
	;
	
	insert into hd_prescricao_evento(
		nr_sequencia,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_atualizacao,
		nm_usuario,
		nr_prescricao,
		nr_seq_solucao,
		ie_evento,
		dt_evento,
		cd_pessoa_evento,
    nr_etapa_evento)
	values (
		nr_sequencia_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_prescricao_p,
		nr_seq_item_p,
		'PC',
		clock_timestamp(),
		substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10),
    nr_etapa_atual_w);
commit;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_primeira_checagem_hd ( nr_prescricao_p bigint, nr_seq_item_p bigint, nr_horario_evento_p bigint, nm_usuario_p text, ie_acao_p bigint ) FROM PUBLIC;

