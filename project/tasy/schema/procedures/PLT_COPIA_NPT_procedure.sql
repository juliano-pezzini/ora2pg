-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE plt_copia_npt ( nr_seq_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nm_usuario_p text, ie_tipo_item_p text, ie_modificar_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text) AS $body$
DECLARE


nr_seq_pac_elem_mat_w	bigint;
qt_dia_npt_w		bigint;
nr_nut_pac_w		bigint;
nut_pac_elem_w		bigint;
nr_seq_pac_elem_w	bigint;
dt_inicio_prescr_w	timestamp;
dt_validade_prescr_w	timestamp;
nr_prescr_orig_w	bigint;
qt_inconsistencia_w	bigint;
ie_npt_w		varchar(10);
qt_peso_w		real;
qt_ano_w		integer	:= 0;
qt_mes_w		bigint	:= 0;
qt_dia_w		bigint	:= 0;
		


c03 CURSOR FOR
SELECT	nr_sequencia
from	nut_pac_elemento
where	nr_seq_nut_pac	= nr_seq_orig_p
order by nr_sequencia;

c04 CURSOR FOR
SELECT	nr_sequencia
from	nut_pac_elem_mat
where	nr_seq_pac_elem	= nut_pac_elem_w
order by nr_sequencia;


BEGIN

select	dt_inicio_prescr,
		dt_validade_prescr
into STRICT	dt_inicio_prescr_w,
		dt_validade_prescr_w
from	prescr_medica
where	nr_prescricao = nr_prescricao_p  LIMIT 1;

select	nr_prescricao,
		CASE WHEN ie_npt_adulta='S' THEN  'NAN' WHEN ie_npt_adulta='N' THEN  'NPN' END
into STRICT	nr_prescr_orig_w,
		ie_npt_w
from	nut_pac
where	nr_sequencia = nr_seq_orig_p  LIMIT 1;

if (ie_npt_w IS NOT NULL AND ie_npt_w::text <> '') then
	CALL PLT_consiste_extensao_item(dt_inicio_prescr_w, dt_validade_prescr_w, nr_prescr_orig_w, nr_seq_orig_p, ie_npt_w, nr_seq_regra_p, nm_usuario_p, cd_perfil_p, cd_estabelecimento_p);
end if;

select	count(nr_sequencia)
into STRICT	qt_inconsistencia_w
from	w_copia_plano
where	nr_prescricao	= nr_prescr_orig_w
and		nr_seq_item	= nr_seq_orig_p
and		ie_tipo_item	= ie_npt_w
and		nm_usuario	= nm_usuario_p
and		((ie_permite	= 'N') or (ie_estende_inc_p = 'N'))  LIMIT 1;

if	((qt_inconsistencia_w	= 0) or (ie_modificar_p 	= 'S')) then

	select	count(distinct(ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_prescricao))) + 1
	into STRICT	qt_dia_npt_w
	from	prescr_medica b,
			nut_pac a
	where	a.nr_prescricao = b.nr_prescricao
	and		ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(b.dt_prescricao) <> ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(clock_timestamp())
	and		b.nr_atendimento = (SELECT obter_atendimento_prescr(nr_prescricao_p) );

	Select	nextval('nut_pac_seq')
	into STRICT	nr_nut_pac_w
	;

	select	coalesce(max(obter_ultimo_sinal_vital_pf(b.cd_pessoa_fisica,'Peso')),max(b.qt_peso)),
			coalesce(max(substr(obter_idade(a.dt_nascimento,clock_timestamp(),'A'),1,5)),0),
			coalesce(max(substr(obter_idade(a.dt_nascimento,clock_timestamp(),'MM'),1,5)),0),
	        coalesce(max(substr(obter_idade(a.dt_nascimento,clock_timestamp(),'DI'),1,5)),0)
	into STRICT	qt_peso_w,
			qt_ano_w,
			qt_mes_w,
            qt_dia_w
	from 	pessoa_fisica a,
			prescr_medica b
 	where 	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and		b.nr_prescricao    = nr_prescricao_p  LIMIT 1;	
	
	Insert into nut_pac(
		nr_sequencia,
		nr_prescricao,
		dt_atualizacao,
		nm_usuario,
		ie_forma,
		nr_seq_protocolo,
		qt_peso,
		qt_idade_dia,
		qt_idade_mes,
		qt_idade_ano,
		qt_altura_cm,
		qt_dia_npt,
		qt_kcal_total,
		qt_kcal_kg,
		qt_fase_npt,
		qt_nec_hidrica_diaria,
		qt_aporte_hidrico_diario,
		qt_vel_inf_glicose,
		qt_nec_kcal_kg_dia,
		nr_seq_fator_ativ,
		nr_seq_fator_stress,
		pr_conc_glic_solucao,
		qt_rel_cal_nit,
		qt_equipo,
		ie_calculo_auto,
		qt_nec_kcal_dia,
		ie_correcao,
		hr_prim_horario,
		ie_ajustar_potassio,
		qt_gotejo_npt,
		ie_emissao,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_suspenso,
		qt_volume_adep,
		ie_forma_infusao,
		pr_carboidrato,
		pr_lipidio,
		pr_npt,
		pr_proteina,
		ie_bomba_infusao,
		qt_grama_nitrogenio,
		ie_npt_adulta,
		qt_hora_inf,
		qt_min_inf,
		ie_status,
		dt_status,
		nr_seq_anterior,
		qt_osmolaridade_total,
		ie_via_administracao,
		ie_ajustar_sodio,
		ie_zinco,
		nr_sequencia_anterior,
		qt_kcal_kg_ped)
	SELECT	nr_nut_pac_w,
		nr_prescricao_p,
		clock_timestamp(),
		nm_usuario_p,
		ie_forma,
		nr_seq_protocolo,
		coalesce(qt_peso_w,qt_peso),
		coalesce(qt_dia_w,qt_idade_dia),
		coalesce(qt_mes_w,qt_idade_mes),
		coalesce(qt_ano_w,qt_idade_ano),
		qt_altura_cm,
		qt_dia_npt_w,
		qt_kcal_total,
		qt_kcal_kg,
		qt_fase_npt,
		qt_nec_hidrica_diaria,
		qt_aporte_hidrico_diario,
		qt_vel_inf_glicose,
		qt_nec_kcal_kg_dia,
		nr_seq_fator_ativ,
		nr_seq_fator_stress,
		pr_conc_glic_solucao,
		qt_rel_cal_nit,
		qt_equipo,
		ie_calculo_auto,
		qt_nec_kcal_dia,
		ie_correcao,
		hr_prim_horario,
		ie_ajustar_potassio,
		qt_gotejo_npt,
		0,
		clock_timestamp(),
		nm_usuario_p,
		'N',
		qt_volume_adep,
		ie_forma_infusao,
		pr_carboidrato,
		pr_lipidio,
		pr_npt,
		pr_proteina,
		ie_bomba_infusao,
		qt_grama_nitrogenio,
		ie_npt_adulta,
		qt_hora_inf,
		qt_min_inf,
		'P',
		clock_timestamp(),
		coalesce(nr_seq_anterior,nr_sequencia),
		qt_osmolaridade_total,
		ie_via_administracao,
		ie_ajustar_sodio,
		ie_zinco,
		nr_sequencia,
		qt_kcal_kg_ped
	from	nut_pac
	where	nr_sequencia	= nr_seq_orig_p;
	
	CALL atualizar_status_item_prescr(nr_prescricao_p,nr_nut_pac_w,'P','N',nm_usuario_p);
	
	open c03;
	loop
	fetch c03 into
		nut_pac_elem_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin
		select	nextval('nut_pac_elemento_seq')
		into STRICT	nr_seq_pac_elem_w
		;

		Insert into nut_pac_elemento(
			nr_sequencia,
			nr_seq_nut_pac,
			nr_seq_elemento,
			dt_atualizacao,
			nm_usuario,
			cd_unidade_medida,
			qt_elem_kg_dia,
			qt_diaria,
			pr_total,
			qt_kcal,
			ie_prim_fase,
			ie_seg_fase,
			ie_terc_fase,
			ie_quar_fase,
			ie_npt)
		SELECT	nr_seq_pac_elem_w,
			nr_nut_pac_w,
			nr_seq_elemento,
			clock_timestamp(),
			nm_usuario_p,
			cd_unidade_medida,
			qt_elem_kg_dia,
			qt_diaria,
			pr_total,
			qt_kcal,
			ie_prim_fase,
			ie_seg_fase,
			ie_terc_fase,
			ie_quar_fase,			
			ie_npt
		from	nut_pac_elemento
		where	nr_sequencia = nut_pac_elem_w;

		open c04;
		loop
		fetch c04 into
			nr_seq_pac_elem_mat_w;
		EXIT WHEN NOT FOUND; /* apply on c04 */

			insert into nut_pac_elem_mat(
				nr_sequencia,
				nr_seq_pac_elem,
				dt_atualizacao,
				nm_usuario,
				nr_seq_elem_mat,
				qt_volume,
				qt_vol_1_fase,
				qt_vol_2_fase,
				qt_vol_3_fase,
				qt_vol_4_fase,
				qt_vol_cor,
				nr_seq_nut_pac,
				cd_material,
				qt_protocolo)
			SELECT	nextval('nut_pac_elem_mat_seq'),
				nr_seq_pac_elem_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_elem_mat,
				qt_volume,
				qt_vol_1_fase,
				qt_vol_2_fase,
				qt_vol_3_fase,
				qt_vol_4_fase,
				qt_vol_cor,
				nr_nut_pac_w,
				cd_material,
				qt_protocolo
			from	nut_pac_elem_mat
			where	nr_sequencia	= nr_seq_pac_elem_mat_w;
			
		end loop;
		close c04;
		end;
	end loop;
	close c03;
	CALL calcular_nut_pac_ped(nr_nut_pac_w,nm_usuario_p,cd_estabelecimento_p);
	if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE plt_copia_npt ( nr_seq_orig_p bigint, nr_prescricao_p bigint, nr_seq_regra_p bigint, nm_usuario_p text, ie_tipo_item_p text, ie_modificar_p text, cd_perfil_p bigint, cd_estabelecimento_p bigint, ie_estende_inc_p text) FROM PUBLIC;

