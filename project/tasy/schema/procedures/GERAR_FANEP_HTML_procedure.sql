-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_fanep_html ( cd_pessoa_fisica_p text, cd_medico_anestesista_p text, ie_medico_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_sequencia_p INOUT bigint, nm_usuario_p text, dt_processo_p timestamp default null) AS $body$
DECLARE

nr_sequencia_w 	bigint;
nr_prescricao_w	bigint;
dt_processo_w	timestamp;
nr_atendiemnto_w	bigint;
ie_gera_proc_pepo_w	varchar(1) := 'N';
nr_seq_proc_interno_w 	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
ie_gera_prescricao_w	varchar(1) := 'N';
cd_medico_anestesista_w varchar(10);

c01 CURSOR FOR 
SELECT 	cd_procedimento, 
	ie_origem_proced, 
	nr_seq_proc_interno 
from	agenda_paciente_proc 
where 	nr_sequencia = nr_seq_agenda_p;


BEGIN 
 
ie_gera_proc_pepo_w := obter_param_usuario(10026, 42, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gera_proc_pepo_w);
ie_gera_prescricao_w := obter_param_usuario(10026, 48, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_gera_prescricao_w);
 
if (dt_processo_p IS NOT NULL AND dt_processo_p::text <> '') then 
	dt_processo_w := dt_processo_p;
else 
	dt_processo_w := clock_timestamp();
	 
end if;
	 
select 	nextval('pepo_cirurgia_seq') 
into STRICT	nr_sequencia_w
;
	 
if (ie_medico_p = 'S') then 
	begin 
	cd_medico_anestesista_w := cd_medico_anestesista_p;
	end;
end if;
 
insert into pepo_cirurgia(nr_sequencia, 
	dt_atualizacao, 
	nm_usuario, 
	cd_pessoa_fisica, 
	dt_cirurgia, 
	cd_medico_anestesista, 
	nr_atendimento, 
	ie_carater_cirurgia, 
	ie_tipo_procedimento) 
values (nr_sequencia_w, 
	clock_timestamp(), 
	nm_usuario_p, 
	cd_pessoa_fisica_p, 
	dt_processo_w, 
	cd_medico_anestesista_w, 
	CASE WHEN coalesce(nr_atendimento_p,0)=0 THEN null  ELSE nr_atendimento_p END , 
	'E', 
	'F' 
	);
	 
	 
if (ie_gera_proc_pepo_w = 'S') then 
 
	select	max(nr_seq_proc_interno), 
		max(cd_procedimento), 
		max(ie_origem_proced) 
	into STRICT	nr_seq_proc_interno_w, 
		cd_procedimento_w, 
		ie_origem_proced_w 
	from	agenda_paciente 
	where	nr_sequencia = nr_seq_agenda_p;
 
	 
	if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') then 
		insert into pepo_cirurgia_proc(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			nr_seq_pepo, 
			nr_seq_proc_interno, 
			cd_procedimento, 
			ie_origem_proced, 
			ie_proc_principal) 
		values (nextval('pepo_cirurgia_proc_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_sequencia_w, 
			nr_seq_proc_interno_w, 
			cd_procedimento_w, 
			ie_origem_proced_w, 
			'S');
	end if;		
	 
end if;	
	 
if (coalesce(nr_seq_agenda_p,0) > 0) then 
	update	agenda_paciente 
	set	nr_seq_pepo	= nr_sequencia_w 
	where	nr_sequencia 	= nr_seq_agenda_p;
 
	select	coalesce(max(nr_prescricao),0) 
	into STRICT	nr_prescricao_w 
	from 	prescr_medica 
	where	nr_seq_agenda = nr_seq_agenda_p;
	if (nr_prescricao_w > 0) then 
		update	pepo_cirurgia 
		set	nr_prescricao	= nr_prescricao_w 
		where	nr_sequencia	= nr_sequencia_w;
	end if;	
else 
	begin	 
	if (ie_gera_prescricao_w = 'S') then	 
		nr_prescricao_w := Gerar_prescr_Fanep(wheb_usuario_pck.get_cd_estabelecimento, nr_sequencia_w, nm_usuario_p, nr_prescricao_w);
		update	pepo_cirurgia 
		set	nr_prescricao	= nr_prescricao_w 
		where	nr_sequencia	= nr_sequencia_w;
	end if;		
	exception 
		when others then 
		null;
	end;
end if;	
	 
open C01;
loop 
	fetch C01 into	cd_procedimento_w, 
			ie_origem_proced_w, 
			nr_seq_proc_interno_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	 
	insert into pepo_cirurgia_proc(nr_sequencia, 
	  dt_atualizacao, 
	  nm_usuario, 
	  nr_seq_pepo, 
	  nr_seq_proc_interno, 
	  cd_procedimento, 
	  ie_origem_proced, 
		ie_proc_principal) 
	values (nextval('pepo_cirurgia_proc_seq'), 
	  clock_timestamp(), 
	  nm_usuario_p, 
	  nr_sequencia_w, 
	  nr_seq_proc_interno_w, 
	  cd_procedimento_w, 
	  ie_origem_proced_w, 
		'N');
end loop;
close c01;	
 
nr_sequencia_p := nr_sequencia_w;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_fanep_html ( cd_pessoa_fisica_p text, cd_medico_anestesista_p text, ie_medico_p text, nr_atendimento_p bigint, nr_seq_agenda_p bigint, nr_sequencia_p INOUT bigint, nm_usuario_p text, dt_processo_p timestamp default null) FROM PUBLIC;

