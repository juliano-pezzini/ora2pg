-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_susp_atend (nr_seq_suspensao_p bigint, nr_seq_notificacao_p bigint, ie_opcao_p text, nr_seq_motivo_susp_p bigint, ds_observacao_p text, nm_usuario_p text, ie_commit_p text, ie_suspender_depen_p text, ds_motivo_p text default null) AS $body$
DECLARE


/* ie_opcao_p
S - Suspender atendimento
D - Desfazer suspensão atendimento
*/
nr_seq_segurado_w		bigint;
ie_regulamentacao_plano_w	varchar(2)	:= null;
nr_seq_regra_susp_w		bigint;
dt_prev_inicio_susp_w		timestamp;
nr_seq_contrato_w		pls_contrato.nr_sequencia%type;
nr_seq_motivo_susp_w		pls_segurado_suspensao.nr_seq_motivo_susp%type;
ie_rescindir_contrato_w		varchar(2)	:= null;
tipo_registro_w			varchar(2);
nr_seq_segurado_internado_w	bigint;
cd_guia_referencia_w		varchar(20);
nr_seq_registro_w		bigint;
tipo_guia_w			varchar(2);
status_w			varchar(2);
dt_entrada_w			timestamp;
dt_alta_w			timestamp;
dt_alta_estimado_w		timestamp;
dt_atendimento_w		timestamp;
cd_tiss_atendimento_w		varchar(20);
ie_internado_w			varchar(1) 	:= 'N';
ds_mensagem_w			varchar(4000)	:= 'Não foi possível suspender Beneficiário(s) pois este(s) se encontra(m) em internação :';
nm_segurado_internado_w		varchar(60);
nr_seq_pagador_w		pls_segurado.nr_seq_pagador%type;

c01 CURSOR FOR
	SELECT	c.nr_sequencia nr_seq_segurado
	from	pls_notificacao_pagador a,
		pls_contrato_pagador b,
		pls_segurado c,
		pls_plano d,
		pls_contrato e
	where	b.nr_sequencia = a.nr_seq_pagador
	and	b.nr_sequencia = c.nr_seq_pagador
	and	d.nr_sequencia = c.nr_seq_plano
	and	e.nr_sequencia = b.nr_seq_contrato
	and	exists (SELECT	1
			from	pls_notificacao_item x
			where	x.nr_seq_notific_pagador	= a.nr_sequencia
			and (x.nr_seq_contrato = e.nr_sequencia or x.nr_seq_contrato = e.nr_contrato_principal))
	and	(c.dt_liberacao IS NOT NULL AND c.dt_liberacao::text <> '')
	and	coalesce(c.dt_rescisao::text, '') = ''
	and	a.nr_sequencia = nr_seq_notificacao_p
	and	coalesce(d.ie_regulamentacao,0)	= coalesce(ie_regulamentacao_plano_w,coalesce(d.ie_regulamentacao,0))
	and	coalesce(c.ie_situacao_atend,'A') = 'A';

c02 CURSOR FOR
	SELECT	nr_sequencia nr_seq_segurado,
		dt_rescisao
	from	pls_segurado
	where	nr_seq_contrato = nr_seq_contrato_w
	and	(nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '')
	
union all

	SELECT	nr_sequencia nr_seq_segurado,
		dt_rescisao
	from	pls_segurado
	where	nr_sequencia = nr_seq_segurado_w
	and	(nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '')
	
union all

	select	nr_sequencia nr_seq_segurado,
		dt_rescisao
	from	pls_segurado
	where	nr_seq_pagador = nr_seq_pagador_w
	and	(nr_seq_pagador_w IS NOT NULL AND nr_seq_pagador_w::text <> '');

c03 CURSOR(	nr_seq_segurado_pc	pls_segurado.nr_sequencia%type,
		dt_referencia_pc	timestamp) FOR
	SELECT 	tipo_registro,
		nr_seq_segurado,
		cd_guia_referencia,
		nr_seq_registro,
		tipo_guia,
		status,
		dt_entrada,
		dt_alta,
		dt_alta_estimado,
		dt_atendimento,
		cd_tiss_atendimento
	from	table(pls_cta_beneficiario_pck.obter_se_internado(nr_seq_segurado_pc, trunc(dt_referencia_pc,'dd')));

C04 CURSOR FOR
	SELECT	coalesce(ie_rescindir_contrato,'N')
	from	pls_notificacao_item
	where	nr_seq_notific_pagador = nr_seq_notificacao_p;

C05 CURSOR(	nr_seq_notificacao_pc	pls_notificacao_pagador.nr_sequencia%type) FOR
	SELECT	nr_sequencia nr_seq_segurado
	from	pls_segurado
	where	nr_seq_notific_susp = nr_seq_notificacao_pc;
BEGIN
if (ie_opcao_p	= 'S') then
	if (nr_seq_suspensao_p IS NOT NULL AND nr_seq_suspensao_p::text <> '') then
		select	max(a.nr_seq_segurado),
			max(dt_prev_inicio_susp),
			max(nr_seq_motivo_susp)
		into STRICT	nr_seq_segurado_w,
			dt_prev_inicio_susp_w,
			nr_seq_motivo_susp_w
		from	pls_segurado_suspensao a
		where	a.nr_sequencia	= nr_seq_suspensao_p;

		update	pls_segurado_suspensao
		set	dt_inicio_suspensao	= clock_timestamp(),
			nm_usuario		= nm_usuario_p,
			dt_atualizacao		= clock_timestamp()
		where	nr_sequencia		= nr_seq_suspensao_p;

		/*Apenas suspender caso a data seja menor ou atual, senão a JOB irá atualizar o atendimento*/

		if (trunc(dt_prev_inicio_susp_w,'dd') <= trunc(clock_timestamp(),'dd')) then
			update	pls_segurado
			set	ie_situacao_atend	= 'S',
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_susp	= nr_seq_motivo_susp_w
			where	nr_sequencia		= nr_seq_segurado_w;
		end if;

		/*Suspender os dependentes do titular*/

		if (ie_suspender_depen_p	= 'S') then
			CALL pls_suspender_atend_dependente(nr_seq_segurado_w,nr_seq_suspensao_p,'S',nm_usuario_p);
		end if;
	elsif (nr_seq_notificacao_p IS NOT NULL AND nr_seq_notificacao_p::text <> '') then
		select	a.nr_seq_regra_susp
		into STRICT	nr_seq_regra_susp_w
		from	pls_notificacao_pagador a
		where	a.nr_sequencia	= nr_seq_notificacao_p;

		if (nr_seq_regra_susp_w IS NOT NULL AND nr_seq_regra_susp_w::text <> '') then
			begin
			select	a.ie_regulamentacao_plano
			into STRICT	ie_regulamentacao_plano_w
			from	pls_regra_suspensao a
			where	a.nr_sequencia	= nr_seq_regra_susp_w;
			exception
			when others then
				CALL wheb_mensagem_pck.exibir_mensagem_abort(296792);
			end;
		end if;

		open C04;
		loop
		fetch C04 into
			ie_rescindir_contrato_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			if (ie_rescindir_contrato_w = 'S') then
				open C03(nr_seq_segurado_w, clock_timestamp());
				loop
				fetch C03 into
					tipo_registro_w,
					nr_seq_segurado_internado_w,
					cd_guia_referencia_w,
					nr_seq_registro_w,
					tipo_guia_w,
					status_w,
					dt_entrada_w,
					dt_alta_w,
					dt_alta_estimado_w,
					dt_atendimento_w,
					cd_tiss_atendimento_w;
				EXIT WHEN NOT FOUND; /* apply on C03 */
					begin
					ie_internado_w := 'S';
					nm_segurado_internado_w := pls_obter_dados_segurado(nr_seq_segurado_internado_w, 'N');
					ds_mensagem_w  := ds_mensagem_w||chr(13)||'Beneficiário : '||nr_seq_segurado_internado_w ||' - '||nm_segurado_internado_w||' , Guia :'||cd_guia_referencia_w||', Alta: '||dt_alta_w||' , Alta prevista: '||dt_alta_estimado_w;
					end;
				end loop;
				close C03;
				if (coalesce(ie_internado_w,'N') = 'S') then
					CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_mensagem_w);
				end if;
			end if;
			end;
		end loop;
		close C04;

		open c01;
		loop
		fetch c01 into
			nr_seq_segurado_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
			insert	into	pls_segurado_suspensao(nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_segurado,
				dt_prev_inicio_susp,
				dt_inicio_suspensao,
				nr_seq_notificacao_pag,
				nr_seq_motivo_susp,
				ds_observacao)
			values (nextval('pls_segurado_suspensao_seq'),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nr_seq_segurado_w,
				clock_timestamp(),
				clock_timestamp(),
				nr_seq_notificacao_p,
				nr_seq_motivo_susp_p,
				ds_observacao_p);

			update	pls_segurado
			set	ie_situacao_atend	= 'S',
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_susp	= nr_seq_motivo_susp_p,
				nr_seq_notific_susp	= nr_seq_notificacao_p
			where	nr_sequencia		= nr_seq_segurado_w;
		end loop;
		close c01;
	end if;
elsif (ie_opcao_p	= 'D') then
	if (nr_seq_suspensao_p IS NOT NULL AND nr_seq_suspensao_p::text <> '') then
		select	max(a.nr_seq_segurado),
			max(a.nr_seq_contrato),
			max(a.nr_seq_pagador)
		into STRICT	nr_seq_segurado_w,
			nr_seq_contrato_w,
			nr_seq_pagador_w
		from	pls_segurado_suspensao a
		where	a.nr_sequencia	= nr_seq_suspensao_p;

		update	pls_segurado_suspensao
		set	dt_fim_suspensao   = clock_timestamp(),
			nm_usuario	   = nm_usuario_p,
			dt_atualizacao	   = clock_timestamp(),
			ds_motivo_fim_susp = ds_motivo_p
		where	nr_sequencia	= nr_seq_suspensao_p;

		for c02_w in c02 loop
			if (coalesce(c02_w.dt_rescisao::text, '') = '' or c02_w.dt_rescisao > clock_timestamp()) then
				update	pls_segurado
				set	ie_situacao_atend	= 'A',
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp(),
					nr_seq_motivo_susp	 = NULL
				where	nr_sequencia		= c02_w.nr_seq_segurado;
			end if;

			/*Desfazer a suspensão dos dependentes do titular*/

			if (ie_suspender_depen_p	= 'S') then
				CALL pls_suspender_atend_dependente(c02_w.nr_seq_segurado,nr_seq_suspensao_p,'D',nm_usuario_p);
			end if;
		end loop;
	elsif (nr_seq_notificacao_p IS NOT NULL AND nr_seq_notificacao_p::text <> '') then
		for r_c05_w in c05(nr_seq_notificacao_p) loop
			begin
			update	pls_segurado_suspensao
			set	dt_fim_suspensao = clock_timestamp(),
				nm_usuario	= nm_usuario_p,
				dt_atualizacao	= clock_timestamp()
			where	nr_seq_segurado	= r_c05_w.nr_seq_segurado
			and	nr_seq_notificacao_pag = nr_seq_notificacao_p
			and	coalesce(dt_fim_suspensao::text, '') = '';

			update	pls_segurado
			set	ie_situacao_atend	= CASE WHEN dt_rescisao = NULL THEN  'A'  ELSE ie_situacao_atend END ,
				nm_usuario		= nm_usuario_p,
				dt_atualizacao		= clock_timestamp(),
				nr_seq_motivo_susp	 = NULL,
				nr_seq_notific_susp	 = NULL
			where	nr_sequencia		= r_c05_w.nr_seq_segurado;
			end;
		end loop;
	end if;
end if;

if (ie_commit_p	= 'S') then
	commit;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_susp_atend (nr_seq_suspensao_p bigint, nr_seq_notificacao_p bigint, ie_opcao_p text, nr_seq_motivo_susp_p bigint, ds_observacao_p text, nm_usuario_p text, ie_commit_p text, ie_suspender_depen_p text, ds_motivo_p text default null) FROM PUBLIC;

