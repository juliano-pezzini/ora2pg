-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_valida_ocor_aut_est_itens ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
Validar a ocorrência combinada Validação de estrutura de itens. 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ x] Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ie_gerar_ocorrencia_w		varchar(2);
nr_seq_requisicao_w		pls_requisicao.nr_sequencia%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;	
dt_atendimento_w		timestamp;
dt_ref_inicial_w		timestamp;
dt_ref_final_w			timestamp;
ie_tipo_ocorrencia_w		varchar(2);
ie_regra_w			varchar(2);	
nr_seq_oc_benef_w		pls_ocorrencia_benef.nr_sequencia%type;	
ie_gerou_ocor_cabecalho_w	varchar(2);
ie_estrutura_w			varchar(1)	:= 'S';

C01 CURSOR FOR 
	SELECT	nr_seq_estrutura, 
		qt_liberada, 
		qt_tipo_quantidade, 
		ie_tipo_qtde, 
		ie_exige_procedimento, 
		coalesce(ie_somar_estrutura,'N') ie_somar_estrutura 
	from	pls_validacao_aut_est_ocor 
	where	nr_seq_ocor_aut_combinada	= nr_seq_ocor_combinada_p 
	and	ie_situacao			= 'A';

C02 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced, 
		qt_solicitada 
	from	pls_guia_plano_proc 
	where	nr_seq_guia	= nr_seq_guia_p;

C03 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material, 
		qt_solicitada 
	from	pls_guia_plano_mat 
	where	nr_seq_guia	= nr_seq_guia_p;
	
C04 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced, 
		qt_solicitado 
	from	pls_requisicao_proc 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C05 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material, 
		qt_solicitado 
	from	pls_requisicao_mat 
	where	nr_seq_requisicao	= nr_seq_requisicao_p;

C06 CURSOR FOR 
	SELECT	nr_sequencia, 
		cd_procedimento, 
		ie_origem_proced, 
		qt_item 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_p 
	and	coalesce(nr_seq_material::text, '') = '';

C07 CURSOR FOR 
	SELECT	nr_sequencia, 
		nr_seq_material, 
		qt_item 
	from	pls_execucao_req_item 
	where	nr_seq_execucao		= nr_seq_execucao_p 
	and	coalesce(cd_procedimento::text, '') = '';

BEGIN 
 
if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
	begin 
		select	nr_seq_prestador, 
			nr_seq_segurado, 
			dt_solicitacao 
		into STRICT	nr_seq_prestador_w, 
			nr_seq_segurado_w, 
			dt_atendimento_w 
		from	pls_guia_plano 
		where 	nr_sequencia	= nr_seq_guia_p;
	exception 
	when others then 
		nr_seq_prestador_w	:= null;
	end;
			 
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then	 
	begin 
		select	nr_seq_prestador, 
			nr_seq_segurado, 
			dt_requisicao 
		into STRICT	nr_seq_prestador_w, 
			nr_seq_segurado_w, 
			dt_atendimento_w 
		from	pls_requisicao 
		where 	nr_sequencia	= nr_seq_requisicao_p;
	exception 
	when others then 
		nr_seq_prestador_w	:= null;
	end;
			 
elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then	 
	begin 
		select	a.nr_seq_requisicao, 
			b.nr_seq_prestador, 
			b.nr_seq_segurado, 
			dt_execucao 
		into STRICT	nr_seq_requisicao_w, 
			nr_seq_prestador_w, 
			nr_seq_segurado_w, 
			dt_atendimento_w 
		from	pls_execucao_requisicao a, 
			pls_requisicao b 
		where 	a.nr_seq_requisicao	= b.nr_sequencia 
		and	a.nr_sequencia		= nr_seq_execucao_p;
	exception 
	when others then 
		nr_seq_prestador_w	:= null;
	end;
end if;
 
dt_ref_inicial_w := coalesce(dt_atendimento_w,clock_timestamp());
			 
for r_C01_w in C01 loop 
	begin 
		if (r_C01_w.ie_tipo_qtde	= 'D') then				  	 
			dt_ref_final_w		:= trunc(dt_ref_inicial_w);
			dt_ref_inicial_w	:= trunc(dt_ref_inicial_w - (r_C01_w.qt_tipo_quantidade - 1));
		elsif (r_C01_w.ie_tipo_qtde	= 'M') then			 
			dt_ref_final_w		:= trunc(dt_ref_inicial_w);				
			dt_ref_inicial_w	:= (add_months(dt_ref_inicial_w, - r_C01_w.qt_tipo_quantidade) + 1);
		elsif (r_C01_w.ie_tipo_qtde	= 'A') then			 
			dt_ref_final_w		:= trunc(dt_ref_inicial_w);
			dt_ref_inicial_w	:= (add_months(dt_ref_inicial_w, - r_C01_w.qt_tipo_quantidade * 12) + 1); 		
		elsif (r_C01_w.ie_tipo_qtde = 'H') then 
			dt_ref_final_w		:= dt_ref_inicial_w;
			dt_ref_inicial_w	:= dt_ref_final_w - (r_C01_w.qt_tipo_quantidade/24);
		end if;
		 
		if (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then 
			for r_C02_w in C02 loop 
				begin 
					ie_gerar_ocorrencia_w	:= 'S';	
					 
					if (ie_utiliza_filtro_p	= 'S') then 
						/* Tratamento para filtros */
 
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, r_C02_w.nr_sequencia, null, null, null, null, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
										 
						if (ie_regra_w	= 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;		
					 
					if (ie_gerar_ocorrencia_w	= 'S') then 
						/*Verificar se a ocorrencia possui regra cadastradade exigência de procedimento. */
 
						if (coalesce(r_C01_w.ie_exige_procedimento,'N') <> 'N') then			 
							/*Exige ao menos um dos procedimentos da estrutura ou o procedimento informado.*/
 
							if (r_C01_w.ie_exige_procedimento = 'U') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ao_menos_um_aut(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, null);									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'T') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ocor_todos_aut(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, null); 									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir e nenhum procedimento além.*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'S') then 
								/*Verifica-se se todos os procedimentos da regra estão na conta/guia e nenhum outro procedimento*/
 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_somen_itens_aut(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, null);								
							end if;
							 
						/*Verificar as regras do campos de procedimento, material e estrutura, quando o valor do campo "Exigencia de procedimento" for nunhum */
 
						elsif (coalesce(r_C01_w.ie_exige_procedimento, 'N') = 'N') then 
							ie_gerar_ocorrencia_w	:= pls_obter_se_estrut_ocorrencia(r_C01_w.nr_seq_estrutura, r_C02_w.cd_procedimento, r_C02_w.ie_origem_proced, null);	
				 
							if (ie_gerar_ocorrencia_w = 'S') and (r_C01_w.qt_liberada IS NOT NULL AND r_C01_w.qt_liberada::text <> '') then 
								ie_gerar_ocorrencia_w	:= pls_obter_qt_incid_estrutura(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, 
															null, nr_seq_segurado_w, r_C02_w.cd_procedimento, 
															r_C02_w.ie_origem_proced, null,	r_C02_w.qt_solicitada, 
															r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, 
															r_C01_w.ie_tipo_qtde, r_C01_w.ie_somar_estrutura, cd_estabelecimento_p);
							end if;							
						end if;
					 
						if (ie_gerar_ocorrencia_w	= 'S') then							 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, r_C02_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 1, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											nr_seq_guia_p, null, null, 
											r_C02_w.nr_sequencia, null, null, 
											null, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;	
				end;
			end loop;
			for r_C03_w in C03 loop 
				begin 
					ie_gerar_ocorrencia_w	:= 'S';	
					 
					if (ie_utiliza_filtro_p	= 'S') then 
						/* Tratamento para filtros */
 
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, nr_seq_guia_p, nr_seq_requisicao_p, nr_seq_execucao_p, null, r_C03_w.nr_sequencia, null, null, null, null, null, r_C03_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
										 
						if (ie_regra_w	= 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;
					 
					if (ie_gerar_ocorrencia_w	= 'S') then					 
						/*Verificar se a ocorrencia possui regra cadastradade exigência de procedimento. */
 
						if (coalesce(r_C01_w.ie_exige_procedimento,'N') <> 'N') then			 
							/*Exige ao menos um dos procedimentos da estrutura ou o procedimento informado.*/
 
							if (r_C01_w.ie_exige_procedimento = 'U') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ao_menos_um_aut(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, null);									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'T') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ocor_todos_aut(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, null); 									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir e nenhum procedimento além.*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'S') then 
								/*Verifica-se se todos os procedimentos da regra estão na conta/guia e nenhum outro procedimento*/
 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_somen_itens_aut(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, null);								
							end if;
							 
						/*Verificar as regras do campos de procedimento, material e estrutura, quando o valor do campo "Exigencia de procedimento" for nunhum */
 
						elsif (coalesce(r_C01_w.ie_exige_procedimento, 'N') = 'N') then 
							ie_gerar_ocorrencia_w	:= pls_obter_se_estrut_ocorrencia(r_C01_w.nr_seq_estrutura, null, null, r_C03_w.nr_seq_material);	
 
							if (ie_gerar_ocorrencia_w = 'S') and (r_C01_w.qt_liberada IS NOT NULL AND r_C01_w.qt_liberada::text <> '') then 
								ie_gerar_ocorrencia_w	:= pls_obter_qt_incid_estrutura(r_C01_w.nr_seq_estrutura, nr_seq_guia_p, null, 
															null, nr_seq_segurado_w, null, 
															null, r_C03_w.nr_seq_material, r_C03_w.qt_solicitada, 
															r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, 
															r_C01_w.ie_tipo_qtde, r_C01_w.ie_somar_estrutura, cd_estabelecimento_p);
							end if;		
						end if;												
														 
						if (ie_gerar_ocorrencia_w	= 'S') then 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, nr_seq_guia_p, null, null, r_C03_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 2, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											nr_seq_guia_p, null, null, 
											null, r_C03_w.nr_sequencia, null, 
											null, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;
		elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then 
			for r_C04_w in C04 loop 
				begin 
					ie_gerar_ocorrencia_w	:= 'S';	
							 
					if (ie_utiliza_filtro_p	= 'S') then 
						/* Tratamento para filtros */
 
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, r_C04_w.nr_sequencia, null, null, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null, null, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
										 
						if (ie_regra_w	= 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						end if;							
					end if;
					 
					if (ie_gerar_ocorrencia_w	= 'S') then 
					 
						/*Verificar se a ocorrencia possui regra cadastradade exigência de procedimento. */
 
						if (coalesce(r_C01_w.ie_exige_procedimento,'N') <> 'N') then			 
							/*Exige ao menos um dos procedimentos da estrutura ou o procedimento informado.*/
 
							if (r_C01_w.ie_exige_procedimento = 'U') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ao_menos_um_aut(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, null);									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'T') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ocor_todos_aut(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, null); 									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir e nenhum procedimento além.*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'S') then 
								/*Verifica-se se todos os procedimentos da regra estão na conta/guia e nenhum outro procedimento*/
 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_somen_itens_aut(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, null);								
							end if;
							 
						/*Verificar as regras do campos de procedimento, material e estrutura, quando o valor do campo "Exigencia de procedimento" for nunhum */
 
						elsif (coalesce(r_C01_w.ie_exige_procedimento, 'N') = 'N') then 
							ie_gerar_ocorrencia_w	:= pls_obter_se_estrut_ocorrencia(r_C01_w.nr_seq_estrutura, r_C04_w.cd_procedimento, r_C04_w.ie_origem_proced, null);	
 
							if (ie_gerar_ocorrencia_w = 'S') and (r_C01_w.qt_liberada IS NOT NULL AND r_C01_w.qt_liberada::text <> '') then 
								ie_gerar_ocorrencia_w	:= pls_obter_qt_incid_estrutura(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, 
															null, nr_seq_segurado_w, r_C04_w.cd_procedimento, 
															r_C04_w.ie_origem_proced, null,	r_C04_w.qt_solicitado, 
															r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, 
															r_C01_w.ie_tipo_qtde, r_C01_w.ie_somar_estrutura, cd_estabelecimento_p);
							end if;	
						end if;														
													 
						if (ie_gerar_ocorrencia_w	= 'S') then							 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, r_C04_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 5, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
									 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											null, nr_seq_requisicao_p, null, 
											null, null, r_C04_w.nr_sequencia, 
											null, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;
			for r_C05_w in C05 loop 
				begin 
					ie_gerar_ocorrencia_w	:= 'S';
					 
					if (ie_utiliza_filtro_p	= 'S') then 
						/* Tratamento para filtros */
 
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, nr_seq_requisicao_p, null, null, null, null, r_C05_w.nr_sequencia, null, null, null, r_C05_w.nr_seq_material, null, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
										 
						if (ie_regra_w	= 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;
					 
					if (ie_gerar_ocorrencia_w	= 'S') then 
					 
						/*Verificar se a ocorrencia possui regra cadastradade exigência de procedimento. */
 
						if (coalesce(r_C01_w.ie_exige_procedimento,'N') <> 'N') then			 
							/*Exige ao menos um dos procedimentos da estrutura ou o procedimento informado.*/
 
							if (r_C01_w.ie_exige_procedimento = 'U') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ao_menos_um_aut(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, null);									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'T') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ocor_todos_aut(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, null); 									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir e nenhum procedimento além.*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'S') then 
								/*Verifica-se se todos os procedimentos da regra estão na conta/guia e nenhum outro procedimento*/
 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_somen_itens_aut(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, null);								
							end if;
							 
						/*Verificar as regras do campos de procedimento, material e estrutura, quando o valor do campo "Exigencia de procedimento" for nunhum */
 
						elsif (coalesce(r_C01_w.ie_exige_procedimento, 'N') = 'N') then 
							ie_gerar_ocorrencia_w	:= pls_obter_se_estrut_ocorrencia(r_C01_w.nr_seq_estrutura, null, null, r_C05_w.nr_seq_material);
 
							if (ie_gerar_ocorrencia_w = 'S') and (r_C01_w.qt_liberada IS NOT NULL AND r_C01_w.qt_liberada::text <> '') then 
								ie_gerar_ocorrencia_w	:= pls_obter_qt_incid_estrutura(r_C01_w.nr_seq_estrutura, null, nr_seq_requisicao_p, 
															null, nr_seq_segurado_w, null, 
															null, r_C05_w.nr_seq_material, r_C05_w.qt_solicitado, 
															r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, 
															r_C01_w.ie_tipo_qtde, r_C01_w.ie_somar_estrutura, cd_estabelecimento_p);
							end if;	
						end if;															
												 
						if (ie_gerar_ocorrencia_w	= 'S') then 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, nr_seq_requisicao_p, null, null, null, r_C05_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 6, cd_estabelecimento_p, 'N', null, nr_seq_oc_benef_w, null, null, null, null);
										 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											null, nr_seq_requisicao_p, null, 
											null, r_C05_w.nr_sequencia, null, 
											null, null, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;
		elsif (nr_seq_execucao_p IS NOT NULL AND nr_seq_execucao_p::text <> '') then		 
			for r_C06_w in C06 loop 
				begin 
					ie_gerar_ocorrencia_w	:= 'S';
 
					if (ie_utiliza_filtro_p	= 'S') then 
						/* Tratamento para filtros */
 
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, r_C06_w.nr_sequencia, r_C06_w.cd_procedimento, r_C06_w.ie_origem_proced, null, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
										 
						if (ie_regra_w	= 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;
					 
					if (ie_gerar_ocorrencia_w	= 'S') then 
					 
						/*Verificar se a ocorrencia possui regra cadastradade exigência de procedimento. */
 
						if (coalesce(r_C01_w.ie_exige_procedimento,'N') <> 'N') then			 
							/*Exige ao menos um dos procedimentos da estrutura ou o procedimento informado.*/
 
							if (r_C01_w.ie_exige_procedimento = 'U') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ao_menos_um_aut(r_C01_w.nr_seq_estrutura, null, null, nr_seq_execucao_p);									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'T') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ocor_todos_aut(r_C01_w.nr_seq_estrutura, null, null, nr_seq_execucao_p); 									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir e nenhum procedimento além.*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'S') then 
								/*Verifica-se se todos os procedimentos da regra estão na conta/guia e nenhum outro procedimento*/
 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_somen_itens_aut(r_C01_w.nr_seq_estrutura, null, null, nr_seq_execucao_p);								
							end if;
							 
						/*Verificar as regras do campos de procedimento, material e estrutura, quando o valor do campo "Exigencia de procedimento" for nunhum */
 
						elsif (coalesce(r_C01_w.ie_exige_procedimento, 'N') = 'N') then 
							ie_gerar_ocorrencia_w	:= pls_obter_se_estrut_ocorrencia(r_C01_w.nr_seq_estrutura, r_C06_w.cd_procedimento, r_C06_w.ie_origem_proced, null);		
 
							if (ie_gerar_ocorrencia_w = 'S') and (r_C01_w.qt_liberada IS NOT NULL AND r_C01_w.qt_liberada::text <> '') then 
								ie_gerar_ocorrencia_w	:= pls_obter_qt_incid_estrutura(r_C01_w.nr_seq_estrutura, null, null, 
															nr_seq_execucao_p, nr_seq_segurado_w, r_C06_w.cd_procedimento, 
															r_C06_w.ie_origem_proced, null,	r_C06_w.qt_item, 
															r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, 
															r_C01_w.ie_tipo_qtde, r_C01_w.ie_somar_estrutura, cd_estabelecimento_p);
							end if;	
						end if;	
						 
						if (ie_gerar_ocorrencia_w	= 'S') then						 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, null, null, r_C06_w.nr_sequencia, null, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 10, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
								 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											null, null, nr_seq_execucao_p, 
											null, null, null, 
											null, r_C06_w.nr_sequencia, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;			
			for r_C07_w in C07 loop 
				begin 
					ie_gerar_ocorrencia_w	:= 'S';
 
					if (ie_utiliza_filtro_p	= 'S') then 
						/* Tratamento para filtros */
 
						SELECT * FROM pls_gerar_ocor_aut_filtro(	nr_seq_ocor_combinada_p, null, null, nr_seq_execucao_p, null, null, null, null, r_C07_w.nr_sequencia, null, null, r_C07_w.nr_seq_material, ie_gerou_ocor_cabecalho_w, nr_seq_prestador_w, nr_seq_ocorrencia_p, null, null, null, nm_usuario_p, ie_regra_w, ie_tipo_ocorrencia_w) INTO STRICT ie_regra_w, ie_tipo_ocorrencia_w;
										 
						if (ie_regra_w	= 'S') then 
							ie_gerar_ocorrencia_w	:= 'S';
						elsif (ie_regra_w	in ('E','N')) then 
							ie_gerar_ocorrencia_w	:= 'N';
						end if;
					end if;
					 
					if (ie_gerar_ocorrencia_w	= 'S') then 
					 
						/*Verificar se a ocorrencia possui regra cadastradade exigência de procedimento. */
 
						if (coalesce(r_C01_w.ie_exige_procedimento,'N') <> 'N') then			 
							/*Exige ao menos um dos procedimentos da estrutura ou o procedimento informado.*/
 
							if (r_C01_w.ie_exige_procedimento = 'U') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ao_menos_um_aut(r_C01_w.nr_seq_estrutura, null, null, nr_seq_execucao_p);									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'T') then 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_ocor_todos_aut(r_C01_w.nr_seq_estrutura, null, null, nr_seq_execucao_p); 									
							/*Exige todos os procedimentos da estrutura, mais o procedimento se existir e nenhum procedimento além.*/
 
							elsif (r_C01_w.ie_exige_procedimento = 'S') then 
								/*Verifica-se se todos os procedimentos da regra estão na conta/guia e nenhum outro procedimento*/
 
								ie_gerar_ocorrencia_w	:= pls_obter_estr_somen_itens_aut(r_C01_w.nr_seq_estrutura, null, null, nr_seq_execucao_p);								
							end if;
							 
						/*Verificar as regras do campos de procedimento, material e estrutura, quando o valor do campo "Exigencia de procedimento" for nunhum */
 
						elsif (coalesce(r_C01_w.ie_exige_procedimento, 'N') = 'N') then 
							ie_gerar_ocorrencia_w	:= pls_obter_se_estrut_ocorrencia(r_C01_w.nr_seq_estrutura, null, null, r_C07_w.nr_seq_material);
 
							if (ie_gerar_ocorrencia_w = 'S') and (r_C01_w.qt_liberada IS NOT NULL AND r_C01_w.qt_liberada::text <> '') then 
								ie_gerar_ocorrencia_w	:= pls_obter_qt_incid_estrutura(r_C01_w.nr_seq_estrutura, null, null, 
															nr_seq_execucao_p, nr_seq_segurado_w, null, 
															null, r_C07_w.nr_seq_material, r_C07_w.qt_item, 
															r_C01_w.qt_liberada, dt_ref_inicial_w, dt_ref_final_w, 
															r_C01_w.ie_tipo_qtde, r_C01_w.ie_somar_estrutura, cd_estabelecimento_p);
							end if;	
						end if;	
														 
						if (ie_gerar_ocorrencia_w	= 'S') then 
							nr_seq_oc_benef_w := pls_inserir_ocorrencia(	nr_seq_segurado_w, nr_seq_ocorrencia_p, null, null, null, null, r_C07_w.nr_sequencia, nr_seq_ocor_combinada_p, nm_usuario_p, null, nr_seq_motivo_glosa_p, 11, cd_estabelecimento_p, 'N', nr_seq_execucao_p, nr_seq_oc_benef_w, null, null, null, null);
								 
							CALL pls_atualizar_status_ocor_comb(	nr_seq_ocorrencia_p, nr_seq_ocor_combinada_p, nr_seq_motivo_glosa_p, 
											null, null, nr_seq_execucao_p, 
											null, null, null, 
											null, r_C07_w.nr_sequencia, null, 
											nm_usuario_p, cd_estabelecimento_p);
						end if;
					end if;
				end;
			end loop;
		end if;
	end;
end loop;
	 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_valida_ocor_aut_est_itens ( nr_seq_ocor_combinada_p pls_ocor_aut_combinada.nr_sequencia%type, nr_seq_ocorrencia_p pls_ocorrencia.nr_sequencia%type, nr_seq_motivo_glosa_p tiss_motivo_glosa.nr_sequencia%type, nr_seq_guia_p pls_guia_plano.nr_sequencia%type, nr_seq_requisicao_p pls_requisicao.nr_sequencia%type, nr_seq_execucao_p pls_execucao_requisicao.nr_sequencia%type, ie_utiliza_filtro_p pls_ocor_aut_combinada.ie_utiliza_filtro%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type ) FROM PUBLIC;

