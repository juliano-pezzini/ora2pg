-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_diops ( nr_seq_operadora_p bigint, nr_seq_periodo_p bigint, ie_tipo_transacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
Finalidade: 
------------------------------------------------------------------------------------------------------------------- 
Locais de chamada direta: 
[ ] Objetos do dicionário [ X ] Tasy (Delphi/Java) [ ] Portal [ ] Relatórios [ ] Outros: 
 ------------------------------------------------------------------------------------------------------------------ 
Pontos de atenção: 
	IE_TIPO_TRANSACAO_P 
	0 - Todos 
	1 - Cadastral 
	2 - Financeiro 
	3 - Complementar Semestral 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
 
 
ds_razao_social_w		varchar(80);
ds_transacao_w			varchar(60);
cd_ans_w			varchar(20);
cd_cgc_w			varchar(14);
ie_tipo_periodo_diops_w		varchar(1);
dt_periodo_inicial_w		timestamp;
dt_periodo_final_w		timestamp;
dt_inicio_geracao_w		timestamp;
dt_fim_geracao_w		timestamp;


BEGIN 
dt_inicio_geracao_w	:= clock_timestamp();
 
/* Limpar tabelas transitórias */
 
delete	from w_diops_identificador 
where	nr_seq_operadora	= nr_seq_operadora_p 
and	nr_seq_periodo		= nr_seq_periodo_p 
and	((ie_tipo_transacao	= ie_tipo_transacao_p) or (ie_tipo_transacao_p = 0));
 
/* Obter dados da operadora */
 
begin 
select	cd_ans, 
	substr(elimina_acentuacao(obter_razao_social(cd_cgc_outorgante)), 1, 80), 
	cd_cgc_outorgante 
into STRICT	cd_ans_w, 
	ds_razao_social_w, 
	cd_cgc_w 
from	pls_outorgante 
where	nr_sequencia	= nr_seq_operadora_p;
exception 
when others then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(233796, 'NR_SEQ_OPERADORA=' + nr_seq_operadora_p);
end;
 
/* Obter dados do DIOPS */
 
begin 
select	coalesce(dt_periodo_inicial,''), 
	coalesce(dt_periodo_final, ''), 
	coalesce(ie_tipo_periodo_diops,'T') 
into STRICT	dt_periodo_inicial_w, 
	dt_periodo_final_w, 
	ie_tipo_periodo_diops_w 
from	diops_periodo 
where	nr_sequencia	= nr_seq_periodo_p;
exception 
when others then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(183308, 'NR_SEQ_OPERADORA='|| nr_seq_operadora_p || ';' || 'NR_SEQ_PERIODO=' || nr_seq_periodo_p);
end;
 
CALL pls_consistir_diops_pck.pls_carregar_info_diops(nr_seq_periodo_p,cd_estabelecimento_p);
 
if	((ie_tipo_transacao_p in (0, 1)) and (ie_tipo_periodo_diops_w = 'T')) or (ie_tipo_periodo_diops_w = 'C') then 
	ds_transacao_w	:= 'ENVIO_DIOPS_CADASTRAL';
	 
	CALL pls_gerar_diops_cadastral(	nr_seq_operadora_p, 
					nr_seq_periodo_p, 
					nm_usuario_p);
	 
	insert into w_diops_identificador(nr_sequencia, 
		nr_seq_operadora, 
		nr_seq_periodo, 
		ie_tipo_transacao, 
		cd_ans, 
		ds_razao_social, 
		cd_cgc, 
		dt_periodo_inicial, 
		dt_periodo_final, 
		ds_transacao, 
		dt_atualizacao, 
		nm_usuario) 
	values (nextval('w_diops_identificador_seq'), 
		nr_seq_operadora_p, 
		nr_seq_periodo_p, 
		1, 
		cd_ans_w, 
		ds_razao_social_w, 
		cd_cgc_w, 
		dt_periodo_inicial_w, 
		dt_periodo_final_w, 
		ds_transacao_w, 
		clock_timestamp(), 
		nm_usuario_p);
end if;
 
if	((ie_tipo_transacao_p in (0, 2)) and (ie_tipo_periodo_diops_w in ('T','M'))) OR (ie_tipo_periodo_diops_w = 'F') then 
	ds_transacao_w	:= 'ENVIO_DIOPS_FINANCEIRO';
	 
	CALL pls_gerar_diops_financeiro(	nr_seq_operadora_p, 
					nr_seq_periodo_p, 
					cd_estabelecimento_p, 
					nm_usuario_p);
	 
	insert into w_diops_identificador(nr_sequencia, 
		nr_seq_operadora, 
		nr_seq_periodo, 
		ie_tipo_transacao, 
		cd_ans, 
		ds_razao_social, 
		cd_cgc, 
		dt_periodo_inicial, 
		dt_periodo_final, 
		ds_transacao, 
		dt_atualizacao, 
		nm_usuario) 
	values (nextval('w_diops_identificador_seq'), 
		nr_seq_operadora_p, 
		nr_seq_periodo_p, 
		2, 
		cd_ans_w, 
		ds_razao_social_w, 
		cd_cgc_w, 
		dt_periodo_inicial_w, 
		dt_periodo_final_w, 
		ds_transacao_w, 
		clock_timestamp(), 
		nm_usuario_p);
end if;
 
if (ie_tipo_transacao_p in (0, 3)) and (ie_tipo_periodo_diops_w = 'T') then 
	ds_transacao_w	:= 'ENVIO_COMPLEMENTAR_SEMESTRAL';
	 
	CALL pls_gerar_diops_compl_sem(	nr_seq_operadora_p, 
					nr_seq_periodo_p, 
					cd_estabelecimento_p, 
					nm_usuario_p);
	 
	insert into w_diops_identificador(nr_sequencia, 
		nr_seq_operadora, 
		nr_seq_periodo, 
		ie_tipo_transacao, 
		cd_ans, 
		ds_razao_social, 
		cd_cgc, 
		dt_periodo_inicial, 
		dt_periodo_final, 
		ds_transacao, 
		dt_atualizacao, 
		nm_usuario) 
	values (nextval('w_diops_identificador_seq'), 
		nr_seq_operadora_p, 
		nr_seq_periodo_p, 
		3, 
		cd_ans_w, 
		ds_razao_social_w, 
		cd_cgc_w, 
		dt_periodo_inicial_w, 
		dt_periodo_final_w, 
		ds_transacao_w, 
		clock_timestamp(), 
		nm_usuario_p);
end if;
 
dt_fim_geracao_w	:= clock_timestamp();
 
update	diops_periodo 
set	dt_inicio_geracao	= dt_inicio_geracao_w, 
	dt_fim_geracao		= dt_fim_geracao_w 
where	nr_sequencia		= nr_seq_periodo_p;
 
CALL pls_diops_gravar_historico(	nr_seq_periodo_p, 
				1, 
				'', 
				'', 
				nm_usuario_p);
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_diops ( nr_seq_operadora_p bigint, nr_seq_periodo_p bigint, ie_tipo_transacao_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

