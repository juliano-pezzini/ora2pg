-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rep_suspender_dieta_vigente ( nr_atendimento_p bigint, nr_seq_jejum_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_horario_w		bigint;
nr_seq_item_w			bigint;
nr_prescricao_w			bigint;
dt_inicio_w				timestamp;
dt_fim_w				timestamp;
cd_estabelecimento_w  	prescr_medica.cd_estabelecimento%type;
cd_refeicao_w			prescr_dieta.cd_dieta%type;
cd_material_w			prescr_mat_hor.cd_material%type;
nr_horas_validade_w		prescr_medica.nr_horas_validade%type;
dt_horario_w			prescr_mat_hor.dt_horario%type;
dt_horario_ww			prescr_dieta_hor.dt_horario%type;
ie_tipo_item_w			varchar(5);
cd_evolucao_w			bigint;
cd_intervalo_w			varchar(7);
dt_atualizacao_w		timestamp := clock_timestamp();
nr_seq_alteracao_w		bigint;
ie_mostra_adep_w		varchar(1);
nr_seq_evento_w			bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_material,
	a.nr_prescricao,
	a.cd_material,
	a.dt_horario,
	CASE WHEN a.ie_agrupador=12 THEN  'S' WHEN a.ie_agrupador=8 THEN  'SNE' WHEN a.ie_agrupador=16 THEN  'LD' END
from	prescr_mat_hor a,
	prescr_medica b
where	a.nr_prescricao	 = b.nr_prescricao
and	b.nr_atendimento = nr_atendimento_p
and	a.dt_horario between dt_inicio_w and (dt_fim_w - 1/1440)
and	coalesce(a.dt_suspensao::text, '') = ''
and	coalesce(a.dt_fim_horario::text, '') = ''
and	a.ie_agrupador in (8,12, 16)
and	((b.nm_usuario_original = nm_usuario_p) or ((coalesce(b.dt_liberacao_medico,b.dt_liberacao) IS NOT NULL AND (coalesce(b.dt_liberacao_medico,b.dt_liberacao))::text <> '')));

c02 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_dieta,
	a.nr_prescricao,
	b.cd_estabelecimento,
	b.nr_horas_validade,
	a.dt_horario,
	c.cd_dieta
from	prescr_dieta_hor a,
	prescr_medica b,
	prescr_dieta c
where	a.nr_prescricao = b.nr_prescricao
and a.nr_prescricao = c.nr_prescricao
and	a.nr_seq_dieta = c.nr_sequencia
and	b.nr_atendimento = nr_atendimento_p
and	a.dt_horario between dt_inicio_w and (dt_fim_w - 1/1440)
and	coalesce(a.dt_suspensao::text, '') = ''
and	coalesce(a.dt_fim_horario::text, '') = ''
and	((b.nm_usuario_original = nm_usuario_p) or ((coalesce(b.dt_liberacao_medico,b.dt_liberacao) IS NOT NULL AND (coalesce(b.dt_liberacao_medico,b.dt_liberacao))::text <> '')));


BEGIN

select	max(dt_inicio),
	max(dt_fim)
into STRICT	dt_inicio_w,
	dt_fim_w
from	rep_jejum
where	nr_sequencia	= nr_seq_jejum_p;

if (dt_inicio_w IS NOT NULL AND dt_inicio_w::text <> '') and (dt_fim_w IS NOT NULL AND dt_fim_w::text <> '') then

	open c01;
	loop
	fetch c01 into
		nr_seq_horario_w,
		nr_seq_item_w,
		nr_prescricao_w,
		cd_material_w,
		dt_horario_w,
		ie_tipo_item_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		update	prescr_mat_hor
		set	dt_suspensao		= clock_timestamp(),
			nm_usuario_susp		= nm_usuario_p,
			ie_suspenso_adep	= 'S',
			nr_seq_jejum_susp	= nr_seq_jejum_p
		where	nr_sequencia		= nr_seq_horario_w;

		update	prescr_mat_hor
			set	dt_suspensao		= clock_timestamp(),
				nm_usuario_susp		= nm_usuario_p,
				ie_suspenso_adep	= 'S',
				nr_seq_jejum_susp	= nr_seq_jejum_p
		where dt_horario between dt_inicio_w and (dt_fim_w - 1/1440)
		and	coalesce(dt_suspensao::text, '') = ''
		and	coalesce(dt_fim_horario::text, '') = ''
		and nr_prescricao = nr_prescricao_w
		and nr_seq_material in (SELECT nr_sequencia from prescr_material a where nr_prescricao = nr_prescricao_w and nr_seq_kit = nr_seq_item_w);

		CALL atualiza_ie_horario_susp(nr_prescricao_w, 2, 'PRESCR_MATERIAL');
		--  gerar evento adep
			if (ie_tipo_item_w = 'S') or (ie_tipo_item_w = 'LD') then
				CALL gerar_alter_hor_prescr_adep(nr_atendimento_p, ie_tipo_item_w, cd_material_w , nr_prescricao_w, nr_seq_item_w, nr_seq_horario_w,dt_horario_w, 12, '', '', null, nm_usuario_p);				
		   elsif (ie_tipo_item_w	= 'SNE') then
			
				select	nextval('prescr_solucao_evento_seq')
						into STRICT	nr_seq_evento_w
						;
				
				insert into prescr_solucao_evento(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_solucao,
							nr_seq_material,
							nr_seq_procedimento,
							nr_seq_nut,
							nr_seq_nut_neo,
							ie_tipo_dosagem,
							qt_dosagem,
							qt_vol_infundido,
							qt_vol_desprezado,
							cd_pessoa_fisica,
							ie_alteracao,
							dt_alteracao,
							ie_evento_valido,
							nr_seq_motivo,
							ds_observacao,
							ds_justificativa,
							ie_tipo_solucao,
							dt_horario)
					values (
							nr_seq_evento_w,
							dt_atualizacao_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_prescricao_w,
							null,
							nr_seq_item_w,
							null,
							null,
							null,
							null,
							null,
							null,
							null,
							obter_dados_usuario_opcao(nm_usuario_p, 'C'),
							12,
							dt_atualizacao_w,
							'S',
							null,
							wheb_mensagem_pck.get_texto(819488),
							'',
							2,
							dt_horario_w);
							
			end if;					
	end loop;
	close c01;

	open c02;
	loop
	fetch c02 into
		nr_seq_horario_w,
		nr_seq_item_w,
		nr_prescricao_w,
		cd_estabelecimento_w,
		nr_horas_validade_w,
		dt_horario_ww,
		cd_refeicao_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	
		update	prescr_dieta_hor
		set	dt_suspensao 		= clock_timestamp(),
			nm_usuario_susp		= nm_usuario_p,
			nr_seq_jejum_susp	= nr_seq_jejum_p
		where	nr_sequencia 		= nr_seq_horario_w;

		CALL atualiza_ie_horario_susp(nr_prescricao_w, nr_seq_item_w, 'PRESCR_DIETA');
		ie_mostra_adep_w	:= coalesce(wheb_assist_pck.obterparametrofuncao(1113,459),'S');
		select	nextval('prescr_mat_alteracao_seq')
		into STRICT	nr_seq_alteracao_w
		;		

		insert	into	prescr_mat_alteracao(
							nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							nr_prescricao,
							nr_seq_horario_dieta,
							dt_alteracao,
							cd_pessoa_fisica,
							ie_alteracao,
							nr_seq_qualidade,
							ds_justificativa,
							ds_observacao,
							ie_tipo_item,
							dt_horario,
							nr_atendimento,
							cd_item,
							qt_dose_adm,
							qt_dose_original,
							cd_medico_solic,
							cd_um_dose_adm,
							ie_mostra_adep,
							nr_seq_assinatura,
							nr_seq_lote,
							cd_funcao
							)
						values (
							nr_seq_alteracao_w,
							dt_atualizacao_w,
							nm_usuario_p,
							dt_atualizacao_w,
							nm_usuario_p,
							nr_prescricao_w,
							nr_seq_horario_w,
							dt_atualizacao_w,
							obter_dados_usuario_opcao(nm_usuario_p,'C'),
							12,
							null,
							wheb_mensagem_pck.get_texto(819488),
							'',
							'D',
							dt_horario_w,
							nr_atendimento_p,
							cd_refeicao_w,
							null,
							null,
							null,
							null,
							ie_mostra_adep_w,
							null,
							null,
							null);
			

	end loop;
	close c02;

	commit;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rep_suspender_dieta_vigente ( nr_atendimento_p bigint, nr_seq_jejum_p bigint, nm_usuario_p text) FROM PUBLIC;

