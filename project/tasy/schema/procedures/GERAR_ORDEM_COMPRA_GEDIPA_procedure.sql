-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ordem_compra_gedipa ( nm_usuario_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_local_estoque_p bigint, ie_status_processo_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_area_prep_p bigint, ie_processo_p bigint, ie_alta_p text ) AS $body$
DECLARE

 
 
 
nr_ordem_compra_w			bigint;
cd_material_w				integer;
ds_material_w				varchar(255);
qt_material_w				double precision;
cd_unidade_medida_w			varchar(30);
cond_pag_padrao_w			varchar(255);
nr_item_oci_w				integer;
moeda_padrao_w				integer;
cd_comprador_w				varchar(10);
cd_estabelecimento_transf_w		smallint;
cd_cgc_estab_transf_w			varchar(14);
cd_local_transf_w			smallint;

 
C01 CURSOR FOR 
SELECT  b.cd_material, 
     c.ds_material, 
     ceil(sum(coalesce(b.qt_dispensar_hor,0))) qt_solicitacao, 
     b.cd_unidade_medida 
from   material c, 
     prescr_mat_hor b, 
     adep_processo a 
where  b.nr_seq_processo    = a.nr_sequencia 
and   b.cd_material      = c.cd_material 
and   a.cd_local_estoque   = cd_local_estoque_p 
and   ((nr_seq_area_prep_p  = 0 AND a.ie_status_processo = ie_status_processo_p) or 
     ((nr_seq_area_prep_p  > 0) and (obter_status_processo_area(a.nr_sequencia,b.nr_seq_area_prep) = ie_status_processo_p))) 
and   coalesce(b.dt_suspensao::text, '') = '' 
and   a.dt_horario_processo  between dt_inicial_p and dt_final_p 
and   ((nr_seq_area_prep_p   = 0) or (to_char(b.nr_seq_area_prep)  = to_char(nr_seq_area_prep_p))) 
and   ((ie_alta_p       = 'S') or (obter_se_atendimento_alta(a.nr_atendimento) = 'N')) 
and   coalesce(coalesce(b.ie_transferido,a.ie_transferido),'N') = 'N' 
and   coalesce(b.qt_dispensar_hor,0) > 0 
and   ((ie_processo_p = 2) or 
     ((ie_processo_p = 0) and (coalesce(a.ie_gedipa,'S') = 'S')) or 
     ((ie_processo_p = 1) and (coalesce(a.ie_gedipa,'S') = 'N'))) 
and	 Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S' 
group by b.cd_material, 
     b.cd_unidade_medida, 
     c.ds_material;


BEGIN 
 
select 	max(cd_comprador_padrao) 
into STRICT	cd_comprador_w 
from 	PARAMETRO_COMPRAS 
where 	cd_estabelecimento = cd_estabelecimento_p;
 
select	nextval('ordem_compra_seq') 
into STRICT	nr_ordem_compra_w
;
 
 
cond_pag_padrao_w := obter_param_usuario(3112, 34, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cond_pag_padrao_w);
if (coalesce(cond_pag_padrao_w::text, '') = '') then 
	-- É necessário informar a condição de pagamento padrão - Parâmetro [34] 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264492);
end if;
 
moeda_padrao_w := obter_param_usuario(3112, 35, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, moeda_padrao_w);
if (coalesce(moeda_padrao_w::text, '') = '') then 
	-- É necessário informar a moeda padrão - Parâmetro [35] 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264493);
end if;
 
cd_estabelecimento_transf_w := obter_param_usuario(3112, 38, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_estabelecimento_transf_w);
if (coalesce(cd_estabelecimento_transf_w::text, '') = '') then 
	-- É necessário informar o estabelecimento - Parâmetro [38] 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(264494);
end if;
 
cd_local_transf_w := obter_param_usuario(3112, 42, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, cd_local_transf_w);
 
select obter_cgc_estabelecimento(cd_estabelecimento_transf_w) 
into STRICT  cd_cgc_estab_transf_w
;
 
insert into ordem_compra( 
	nr_ordem_compra, 
	cd_estabelecimento, 
	cd_condicao_pagamento, 
	cd_comprador, 
	cd_moeda, 
	dt_ordem_compra, 
	dt_atualizacao, 
	nm_usuario, 
	dt_inclusao, 
	cd_pessoa_solicitante, 
	ie_emite_obs, 
	ie_somente_pagto, 
	ie_tipo_ordem, 
	dt_entrega, 
	ie_aviso_chegada, 
	ie_urgente, 
	ie_frete, 
	ie_situacao, 
	cd_cgc_fornecedor, 
	cd_local_entrega, 
	cd_estab_transf, 
	cd_local_transf) 
values (	nr_ordem_compra_w, 
	cd_estabelecimento_p, 
	cond_pag_padrao_w, 
	cd_comprador_w, 
	moeda_padrao_w, 
	clock_timestamp(), 
	clock_timestamp(), 
	nm_usuario_p, 
	clock_timestamp(), 
	cd_pessoa_fisica_p, 
	'N', 
	'N', 
	'T', 
	clock_timestamp(), 
	'N', 
	'N', 
	'N', 
	'A', 
	cd_cgc_estab_transf_w, 
	cd_local_estoque_p, 
	cd_estabelecimento_transf_w, 
	cd_local_transf_w);
 
open C01;
loop 
fetch C01 into 
	cd_material_w, 
	ds_material_w, 
	qt_material_w, 
	cd_unidade_medida_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin 
 
	select	coalesce(max(nr_item_oci),0)+1 
	into STRICT	nr_item_oci_w 
	from 	ordem_compra_item 
	where 	nr_ordem_compra = nr_ordem_compra_w;
 
	insert into ordem_compra_item( 
		nr_ordem_compra, 
		nr_item_oci, 
		cd_material, 
		cd_unidade_medida_compra, 
		qt_material, 
		qt_original, 
		dt_atualizacao, 
		nm_usuario, 
		cd_pessoa_solicitante, 
		cd_local_estoque, 
		vl_unitario_material, 
		vl_unit_mat_original, 
		ie_situacao, 
		vl_total_item) 
	values (	nr_ordem_compra_w, 
		nr_item_oci_w, 
		cd_material_w, 
		cd_unidade_medida_w, 
		qt_material_w, 
		qt_material_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		cd_pessoa_fisica_p, 
		cd_local_estoque_p, 
		0, 
		0, 
		'A', 
		round((qt_material_w * 0)::numeric,4));
 
 
 
	insert into ordem_compra_item_entrega( 
		nr_sequencia, 
		nr_ordem_compra, 
		nr_item_oci, 
		dt_prevista_entrega, 
		qt_prevista_entrega, 
		dt_atualizacao, 
		nm_usuario, 
		dt_entrega_original, 
		dt_entrega_limite) 
	values (	nextval('ordem_compra_item_entrega_seq'), 
		nr_ordem_compra_w, 
		nr_item_oci_w, 
		clock_timestamp(), 
		qt_material_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		clock_timestamp());
 
 
 
	update	prescr_mat_hor p 
	set	p.ie_transferido 	= 'S', 
		p.nr_ordem_compra 	= nr_ordem_compra_w 
	where	coalesce(p.dt_emissao_farmacia::text, '') = '' 
	and	p.nr_sequencia in ( 
					SELECT	b.nr_sequencia 
					from  material c, 
						prescr_mat_hor b, 
						adep_processo a 
					where  b.nr_seq_processo    = a.nr_sequencia 
					and   b.cd_material      = c.cd_material 
					and   a.cd_local_estoque   = cd_local_estoque_p 
					and   ((nr_seq_area_prep_p  = 0 AND a.ie_status_processo = ie_status_processo_p) or 
						((nr_seq_area_prep_p  > 0) and (obter_status_processo_area(a.nr_sequencia,b.nr_seq_area_prep) = ie_status_processo_p))) 
					and   coalesce(b.dt_suspensao::text, '') = '' 
					and   a.dt_horario_processo  between dt_inicial_p and dt_final_p 
					and   ((nr_seq_area_prep_p   = 0) or (to_char(b.nr_seq_area_prep)  = to_char(nr_seq_area_prep_p))) 
					and   ((ie_alta_p       = 'S') or (obter_se_atendimento_alta(a.nr_atendimento) = 'N')) 
					and   coalesce(coalesce(b.ie_transferido,a.ie_transferido),'N') = 'N' 
					and   coalesce(b.qt_dispensar_hor,0) > 0 
					and   ((ie_processo_p = 2) or 
						((ie_processo_p = 0) and (coalesce(a.ie_gedipa,'S') = 'S')) or 
						((ie_processo_p = 1) and (coalesce(a.ie_gedipa,'S') = 'N'))) 
					and	 Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S');
 
	update	prescr_mat_hor r 
	set	r.ie_transferido	= 'S', 
		r.nr_ordem_compra	= nr_ordem_compra_w 
	where	(r.dt_emissao_farmacia IS NOT NULL AND r.dt_emissao_farmacia::text <> '') 
	and	coalesce(r.ie_transferido,'N') = 'N' 
	and	r.nr_sequencia in (	SELECT	b.nr_sequencia 
					from  material c, 
						prescr_mat_hor b, 
						adep_processo a 
					where  b.nr_seq_processo    = a.nr_sequencia 
					and   b.cd_material      = c.cd_material 
					and   a.cd_local_estoque   = cd_local_estoque_p 
					and   ((nr_seq_area_prep_p  = 0 AND a.ie_status_processo = ie_status_processo_p) or 
						((nr_seq_area_prep_p  > 0) and (obter_status_processo_area(a.nr_sequencia,b.nr_seq_area_prep) = ie_status_processo_p))) 
					and   coalesce(b.dt_suspensao::text, '') = '' 
					and   a.dt_horario_processo  between dt_inicial_p and dt_final_p 
					and   ((nr_seq_area_prep_p   = 0) or (to_char(b.nr_seq_area_prep)  = to_char(nr_seq_area_prep_p))) 
					and   ((ie_alta_p       = 'S') or (obter_se_atendimento_alta(a.nr_atendimento) = 'N')) 
					and   coalesce(coalesce(b.ie_transferido,a.ie_transferido),'N') = 'N' 
					and   coalesce(b.qt_dispensar_hor,0) > 0 
					and   ((ie_processo_p = 2) or 
						((ie_processo_p = 0) and (coalesce(a.ie_gedipa,'S') = 'S')) or 
						((ie_processo_p = 1) and (coalesce(a.ie_gedipa,'S') = 'N'))) 
					and	 Obter_se_horario_liberado(b.dt_lib_horario, b.dt_horario) = 'S');
 
	end;
end loop;
close C01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ordem_compra_gedipa ( nm_usuario_p text, cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_local_estoque_p bigint, ie_status_processo_p text, dt_inicial_p timestamp, dt_final_p timestamp, nr_seq_area_prep_p bigint, ie_processo_p bigint, ie_alta_p text ) FROM PUBLIC;

