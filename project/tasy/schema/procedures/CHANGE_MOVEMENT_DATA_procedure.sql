-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE change_movement_data (NR_ATENDIMENTO_P atendimento_paciente.nr_atendimento%type, NR_SEQ_CLASSIF_ESP_P classif_especial_paciente.nr_sequencia%type, CD_DEPART_DESTINO_P departamento_medico.cd_departamento%type, IE_NOVO_REGISTRO_P text default 'N') AS $body$
DECLARE

	
nr_sequencia_w 			atend_paciente_unidade.nr_sequencia%type;
nr_seq_interno_w		atend_paciente_unidade.nr_seq_interno%type;
cd_depart_original_w	atend_paciente_unidade.cd_departamento%type;
nr_seq_classif_esp_w  atendimento_paciente.nr_seq_classif_esp%type;


BEGIN

nr_seq_classif_esp_w  :=  nr_seq_classif_esp_p;

if (coalesce(nr_seq_classif_esp_w::text, '') = '') then
  select  max(nr_seq_classif_esp)
  into STRICT    nr_seq_classif_esp_w
  from    atendimento_paciente
  where   nr_atendimento = nr_atendimento_p;
end if;

select 	max(nr_sequencia)
into STRICT 	nr_sequencia_w
from 	atend_paciente_unidade
where 	nr_atendimento = nr_atendimento_p;

if (cd_depart_destino_p IS NOT NULL AND cd_depart_destino_p::text <> '') then
	select 	cd_departamento,
			nr_seq_interno
	into STRICT 	cd_depart_original_w,
			nr_seq_interno_w
	from 	atend_paciente_unidade
	where 	nr_atendimento = nr_atendimento_p
	and 	nr_sequencia = nr_sequencia_w;

	insert into transf_departamento_medico(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		dt_transferencia,
		nr_atendimento,
		nr_atend_paciente_unidade,
		cd_depart_destino,
		cd_depart_origem
	) values (
		nextval('transf_departamento_medico_seq'),
		clock_timestamp(),
		wheb_usuario_pck.get_nm_usuario,
		clock_timestamp(),
		wheb_usuario_pck.get_nm_usuario,
		clock_timestamp(),
		nr_atendimento_p,
		nr_seq_interno_w, 
		cd_depart_destino_p, 
		cd_depart_original_w
	);
end if;

if (nr_seq_classif_esp_w IS NOT NULL AND nr_seq_classif_esp_w::text <> '') then
	CALL atualizar_classif_especial(nr_seq_classif_esp_w, nr_atendimento_p);
end if;

if (ie_novo_registro_p = 'S') then
	update 	atend_paciente_unidade
	set		dt_saida_unidade 	= clock_timestamp()
	where	nr_atendimento		= nr_atendimento_p
	and 	nr_sequencia 		= nr_sequencia_w;

	insert into atend_paciente_unidade(
				nr_atendimento,
				nr_sequencia, 
				cd_setor_atendimento, 
				cd_unidade_basica, 
				cd_unidade_compl, 
				dt_entrada_unidade, 
				dt_atualizacao, 
				nm_usuario,
				nr_atend_dia, 
				ds_observacao, 
				nm_usuario_original,
				ie_passagem_setor, 
				nr_acompanhante, 
				nr_seq_interno, 
				ie_calcular_dif_diaria, 
				nr_seq_motivo_transf, 
				dt_entrada_real, 
				nm_usuario_real, 
				ie_radiacao, 
				nr_seq_motivo_dif, 
				nr_seq_mot_dif_diaria, 
				cd_unidade_externa, 
				dt_alta_medico_setor, 
				cd_motivo_alta_setor, 
				cd_procedencia_setor, 
				nr_seq_motivo_int, 
				nr_seq_motivo_int_sub, 
				nr_seq_motivo_perm, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_cirurgia, 
				nr_seq_pepo, 
				nr_seq_agrupamento, 
				cd_tipo_acomodacao, 
				qt_tempo_prev, 
				nr_seq_unid_ant,
				id_leito_temp_cross, 
				cd_departamento, 
				cd_procedencia_atend, 
				nr_seq_classif_esp
	) SELECT 	nr_atendimento_p, 
				nr_sequencia_w + 1, 
				cd_setor_atendimento, 
				cd_unidade_basica, 
				cd_unidade_compl, 
				clock_timestamp(), 
				clock_timestamp(), 
				wheb_usuario_pck.get_nm_usuario,
				nr_atend_dia, 
				ds_observacao, 
				nm_usuario_original,
				ie_passagem_setor, 
				nr_acompanhante, 
				nextval('atend_paciente_unidade_seq'), 
				ie_calcular_dif_diaria, 
				nr_seq_motivo_transf, 
				clock_timestamp(), 
				wheb_usuario_pck.get_nm_usuario, 
				ie_radiacao, 
				nr_seq_motivo_dif, 
				nr_seq_mot_dif_diaria, 
				cd_unidade_externa, 
				dt_alta_medico_setor, 
				cd_motivo_alta_setor, 
				cd_procedencia_setor, 
				nr_seq_motivo_int, 
				nr_seq_motivo_int_sub, 
				nr_seq_motivo_perm, 
				clock_timestamp(), 
				wheb_usuario_pck.get_nm_usuario, 
				nr_cirurgia, 
				nr_seq_pepo, 
				nr_seq_agrupamento, 
				cd_tipo_acomodacao, 
				qt_tempo_prev, 
				nr_seq_unid_ant,
				id_leito_temp_cross, 
				coalesce(cd_depart_destino_p, cd_departamento), 
				cd_procedencia_atend, 
				coalesce(nr_seq_classif_esp_w, nr_seq_classif_esp)
	from 	atend_paciente_unidade
	where 	nr_atendimento = nr_atendimento_p
	and 	nr_sequencia = nr_sequencia_w;
else
	update 	atend_paciente_unidade
	set		nr_seq_classif_esp 	= coalesce(nr_seq_classif_esp_w, nr_seq_classif_esp),
			cd_departamento 	= coalesce(cd_depart_destino_p, cd_departamento)
	where 	nr_atendimento 		= nr_atendimento_p
	and		nr_sequencia 		= nr_sequencia_w;
end if;
CALL generate_soap_patient_transfer(nr_seq_interno_p	=> nr_seq_interno_w,
                               nr_atendimento_p => nr_atendimento_p,
                               cd_pessoa_fisica_p => obter_pessoa_atendimento(nr_atendimento_p,'C'));
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE change_movement_data (NR_ATENDIMENTO_P atendimento_paciente.nr_atendimento%type, NR_SEQ_CLASSIF_ESP_P classif_especial_paciente.nr_sequencia%type, CD_DEPART_DESTINO_P departamento_medico.cd_departamento%type, IE_NOVO_REGISTRO_P text default 'N') FROM PUBLIC;

