-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_status_prep_prescr ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_preparo_p timestamp, nm_usuario_preparo_p text) AS $body$
DECLARE


  nr_seq_agenda_w             agenda_paciente.nr_sequencia%type;
  ie_atualiza_status_agenda_w varchar(1);
  nr_atendimento_w            bigint;
  dt_atendido_w               timestamp;
  dt_atendimento_w            timestamp;
  ie_status_w                 varchar(15);
  cd_procedimento_w           bigint;
  ie_origem_proced_w          bigint;
  nr_seq_proc_interno_W       bigint;
  nr_seq_proc_compl_w         bigint;
  cd_pessoa_fisica_w		  varchar(10);
  nr_seq_prescr_w			  bigint;
  ds_param_integ_hl7_w		  varchar(4000);
  ds_sep_bv_w				  varchar(100);
  nr_seq_interno_w			  bigint;
  ie_envia_w				  varchar(1);
  qt_proc_laudo_w			  bigint;
  dt_inicio_preparo_w         timestamp;
  dt_fim_preparo_w            timestamp;

c_xcelera CURSOR FOR
	SELECT	a.nr_sequencia	
	from	prescr_procedimento a,
			proc_interno_integracao b
	where	a.nr_prescricao	= nr_prescricao_p
	and		b.nr_seq_proc_interno = a.nr_seq_proc_interno 
	and		coalesce(b.cd_estabelecimento,coalesce(cd_estabelecimento_p,0)) = coalesce(cd_estabelecimento_p,0)
	and		coalesce(a.nr_seq_exame::text, '') = ''
	and		b.nr_seq_sistema_integ in (200); 		--Xcelera  
BEGIN

ds_sep_bv_w := obter_separador_bv;

  IF (coalesce(nr_prescricao_p,0) > 0) THEN
    SELECT MAX(cd_procedimento),
      MAX(ie_origem_proced),
      MAX(nr_seq_proc_interno)
    INTO STRICT cd_procedimento_w,
      ie_origem_proced_w,
      nr_seq_proc_interno_W
    FROM prescr_procedimento
    WHERE nr_prescricao = nr_prescricao_p
    AND nr_sequencia    = nr_seq_prescr_p;

    IF (ie_opcao_p      = 'I' OR ie_opcao_p = 'A') THEN
      UPDATE prescr_procedimento
      SET ie_status_execucao  = 14,
        dt_status_previsto    = clock_timestamp(),
        dt_inicio_preparo     = dt_preparo_p,
	nm_usuario	  = nm_usuario_p
      WHERE nr_prescricao     = nr_prescricao_p
      AND nr_sequencia        = nr_seq_prescr_p
      AND ie_status_execucao IN (10,11,13);

      ie_atualiza_status_agenda_w := obter_param_usuario(942, 124, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_status_agenda_w);

      IF (ie_atualiza_status_agenda_w = 'S') THEN
        SELECT coalesce(MAX(nr_seq_agenda),0)
        INTO STRICT nr_seq_agenda_w
        FROM prescr_medica
        WHERE nr_prescricao = nr_prescricao_p;

        IF (nr_seq_agenda_w = 0) THEN
          SELECT MAX(nr_atendimento)
          INTO STRICT nr_atendimento_w
          FROM prescr_medica
          WHERE nr_prescricao = nr_prescricao_p;

          SELECT coalesce(MAX(nr_sequencia),0)
          INTO STRICT nr_seq_agenda_w
          FROM agenda_paciente
          WHERE nr_atendimento      = nr_atendimento_w
          AND ie_status_agenda NOT IN ('B','C','E')
          AND ((cd_procedimento     = cd_procedimento_w
          AND ie_origem_proced      = ie_origem_proced_w)
          OR (nr_seq_proc_interno   = nr_seq_proc_interno_w));
        END IF;

        IF (nr_seq_agenda_w > 0) THEN
          UPDATE agenda_paciente
          SET ie_status_agenda      = 'EP',
            dt_em_exame             = clock_timestamp(),
	nm_usuario	  = nm_usuario_p
          WHERE nr_sequencia        = nr_seq_agenda_w
          AND ie_status_agenda NOT IN ('B','C','E');
        END IF;
      END IF;

      SELECT nr_seq_proc_compl
      INTO STRICT nr_seq_proc_compl_w
      FROM prescr_procedimento
      WHERE nr_prescricao      = nr_prescricao_p
      AND nr_sequencia         = nr_seq_prescr_p;

      IF (coalesce(nr_seq_proc_compl_w::text, '') = '') THEN
        CALL gerar_prescr_proc_compl(nr_prescricao_p, nr_seq_prescr_p, nm_usuario_p, 'N');
        SELECT nr_seq_proc_compl
        INTO STRICT nr_seq_proc_compl_w
        FROM prescr_procedimento
        WHERE nr_prescricao = nr_prescricao_p
        AND nr_sequencia    = nr_seq_prescr_p;
      END IF;

      UPDATE prescr_procedimento_compl
      SET nm_usuario_preparo = nm_usuario_preparo_p
      WHERE nr_sequencia     = nr_seq_proc_compl_w;
    END IF;

    IF (ie_opcao_p = 'S') THEN
      UPDATE prescr_procedimento
      SET 	dt_chegada_paciente = dt_preparo_p,
			ie_status_execucao    = 11,
			nm_usuario	  = nm_usuario_p
      WHERE nr_prescricao     = nr_prescricao_p
      AND 	nr_sequencia        = nr_seq_prescr_p
      AND 	ie_status_execucao  = 10;

      COMMIT;
	
		open c_xcelera;
		loop
		fetch c_xcelera into	
			nr_seq_prescr_w;
		EXIT WHEN NOT FOUND; /* apply on c_xcelera */
			begin
			
			SELECT MAX(nr_atendimento)
			INTO STRICT nr_atendimento_w
			FROM prescr_medica
			WHERE nr_prescricao = nr_prescricao_p;		

			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;
			
			select	max(obter_atepacu_paciente( nr_atendimento_w ,'A'))
			into STRICT	nr_seq_interno_w
			;			
			
			
			ds_param_integ_hl7_w :=	'cd_pessoa_fisica=' || cd_pessoa_fisica_w		|| ds_sep_bv_w ||
									'nr_atendimento='   || nr_atendimento_w			|| ds_sep_bv_w ||               
									'nr_seq_interno='   || nr_seq_interno_w			|| ds_sep_bv_w ||               
									'nr_prescricao='    || nr_prescricao_p			|| ds_sep_bv_w ||               
									'nr_seq_presc='	    || nr_seq_prescr_w			|| ds_sep_bv_w ||               
									'order_control='    || 'NW'						|| ds_sep_bv_w ||               
									'order_status='     || 'SC'						|| ds_sep_bv_w ||
									'receiving_app='    || 'XCELERA' 				|| ds_sep_bv_w									;

			CALL gravar_agend_integracao(862, ds_param_integ_hl7_w);
			end;
		end loop;
		close c_xcelera;

		
    END IF;

    IF (ie_opcao_p = 'SD') THEN
      UPDATE 	prescr_procedimento
      SET 		dt_chegada_paciente  = NULL,
				ie_status_execucao    = 10,
				nm_usuario	  = nm_usuario_p
      WHERE 	nr_prescricao     = nr_prescricao_p
      AND 		nr_sequencia        = nr_seq_prescr_p
      AND 	ie_status_execucao  = 11;
	
      COMMIT;
	
		open c_xcelera;
		loop
		fetch c_xcelera into	
			nr_seq_prescr_w;
		EXIT WHEN NOT FOUND; /* apply on c_xcelera */
			begin
			
			SELECT MAX(nr_atendimento)
			INTO STRICT nr_atendimento_w
			FROM prescr_medica
			WHERE nr_prescricao = nr_prescricao_p;		

			select	max(cd_pessoa_fisica)
			into STRICT	cd_pessoa_fisica_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_w;			
			
			select	max(obter_atepacu_paciente( nr_atendimento_w ,'A'))
			into STRICT	nr_seq_interno_w
			;
			
			ie_envia_w := 'S';

			select	count(*)
			into STRICT	qt_proc_laudo_w                                                         
			from	prescr_proc_status                                                      
			where	nr_prescricao	= nr_prescricao_p                                   
			and		nr_seq_prescr	= nr_seq_prescr_w                                        
			and		ie_status_exec 	= '40';

			if (qt_proc_laudo_w > 0) then                                                
				ie_envia_w := 'N';
			end if;
			
			if (ie_envia_w = 'S') then    
			
				ds_param_integ_hl7_w :=	'cd_pessoa_fisica=' || cd_pessoa_fisica_w	|| ds_sep_bv_w ||                                                                          
										'nr_atendimento='   || nr_atendimento_w		|| ds_sep_bv_w ||               
										'nr_seq_interno='   || nr_seq_interno_w		|| ds_sep_bv_w ||               
										'nr_prescricao='    || nr_prescricao_p		|| ds_sep_bv_w ||               
										'nr_seq_presc='	    || nr_seq_prescr_w		|| ds_sep_bv_w ||               
										'order_control='    || 'CA'					|| ds_sep_bv_w ||               
										'order_status='     || 'CA'					|| ds_sep_bv_w ||
										'receiving_app='    || 'XCELERA' 			|| ds_sep_bv_w;

				CALL gravar_agend_integracao(862, ds_param_integ_hl7_w);
			end if;	
			end;
		end loop;
		close c_xcelera;		
	  
    END IF;

    IF (ie_opcao_p = 'D') THEN
      UPDATE prescr_procedimento
      SET ie_status_execucao  = 10,
        dt_status_previsto     = NULL,
        dt_inicio_preparo      = NULL,
        dt_fim_preparo         = NULL,
	nm_usuario	  = nm_usuario_p
      WHERE nr_prescricao     = nr_prescricao_p
      AND nr_sequencia        = nr_seq_prescr_p
      AND ie_status_execucao IN (13,14);

      ie_atualiza_status_agenda_w := obter_param_usuario(942, 124, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_atualiza_status_agenda_w);

      IF (ie_atualiza_status_agenda_w = 'S') THEN
        SELECT coalesce(MAX(nr_seq_agenda),0)
        INTO STRICT nr_seq_agenda_w
        FROM prescr_medica
        WHERE nr_prescricao = nr_prescricao_p;

        IF (nr_seq_agenda_w = 0) THEN
          SELECT MAX(nr_atendimento)
          INTO STRICT nr_atendimento_w
          FROM prescr_medica
          WHERE nr_prescricao = nr_prescricao_p;

          SELECT coalesce(MAX(nr_sequencia),0)
          INTO STRICT nr_seq_agenda_w
          FROM agenda_paciente
          WHERE nr_atendimento    = nr_atendimento_w
          AND ie_status_agenda    = 'EP'
          AND ((cd_procedimento   = cd_procedimento_w
          AND ie_origem_proced    = ie_origem_proced_w)
          OR (nr_seq_proc_interno = nr_seq_proc_interno_w));
        END IF;

        IF (nr_seq_agenda_w > 0) THEN
          SELECT dt_atendido,
            dt_atendimento
          INTO STRICT dt_atendido_w,
            dt_atendimento_w
          FROM agenda_paciente
          WHERE nr_sequencia = nr_seq_agenda_w;
          IF (dt_atendido_w IS NOT NULL AND dt_atendido_w::text <> '') THEN
            ie_status_w     := 'AD';
          ELSE
            ie_status_w := 'O';
          END IF;

          UPDATE agenda_paciente
          SET ie_status_agenda = ie_status_w,
            dt_em_exame         = NULL,
	nm_usuario	= nm_usuario_p
          WHERE nr_sequencia   = nr_seq_agenda_w
          AND ie_status_agenda = 'EP';
        END IF;
      END IF;

      SELECT nr_seq_proc_compl
      INTO STRICT nr_seq_proc_compl_w
      FROM prescr_procedimento
      WHERE nr_prescricao      = nr_prescricao_p
      AND nr_sequencia         = nr_seq_prescr_p;

      IF (nr_seq_proc_compl_w IS NOT NULL AND nr_seq_proc_compl_w::text <> '') THEN
        UPDATE prescr_procedimento_compl
        SET nm_usuario_preparo  = NULL
        WHERE nr_sequencia     = nr_seq_proc_compl_w;
      END IF;
    END IF;

    -- Finalizar paciente em preparo
    IF (ie_opcao_p = 'F' OR ie_opcao_p = 'A') THEN
      BEGIN
      IF (dt_inicio_preparo_w IS NOT NULL AND dt_inicio_preparo_w::text <> '') THEN
        SELECT dt_inicio_preparo
        INTO STRICT dt_inicio_preparo_w
        FROM PRESCR_PROCEDIMENTO
        WHERE nr_prescricao = nr_prescricao_p
        AND nr_sequencia = nr_seq_prescr_p;

            IF (dt_inicio_preparo_w > dt_preparo_p) then
                CALL wheb_mensagem_pck.exibir_mensagem_abort(1208701, null);
            ELSE
                UPDATE prescr_procedimento
                SET dt_fim_preparo     = dt_preparo_p,
                nm_usuario  = nm_usuario_p
                WHERE nr_prescricao    = nr_prescricao_p
                AND nr_sequencia       = nr_seq_prescr_p
                AND (dt_inicio_preparo IS NOT NULL AND dt_inicio_preparo::text <> '');
            END IF;
        END IF;
    END;
    END IF;

    --Desfazer entrega sem laudo
    IF (ie_opcao_p = 'DESL') THEN
      BEGIN
        UPDATE prescr_procedimento
        SET ie_status_execucao = '20',
	nm_usuario			  = nm_usuario_p
        WHERE nr_prescricao    = nr_prescricao_p
        AND nr_sequencia       = nr_seq_prescr_p
        AND ie_status_execucao = '33';
      END;
    END IF;
  END IF;
  COMMIT;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_status_prep_prescr ( nr_prescricao_p bigint, nr_seq_prescr_p bigint, ie_opcao_p text, nm_usuario_p text, cd_estabelecimento_p bigint, dt_preparo_p timestamp, nm_usuario_preparo_p text) FROM PUBLIC;

