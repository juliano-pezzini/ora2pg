-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_copiar_produto ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_plano_w			bigint;
nr_seq_plano_novo_w		bigint;
qt_planos_w			bigint;
nr_seq_classificacao_nova_w	bigint;
nr_seq_classificacao_ant_w	bigint;

nr_seq_plano_area_w		bigint;

nr_seq_plano_acomod_w		bigint;
nr_seq_tipo_acomodacao_ant_w	bigint;
nr_seq_categoria_ant_w		bigint;
nr_seq_tipo_acomodacao_nova_w	bigint;
nr_seq_categoria_nova_w		bigint;

nr_seq_cobertura_w		bigint;
nr_seq_tipo_cobertura_w		bigint;
nr_seq_tipo_cobert_novo_w	bigint;

nr_seq_limitacao_w		bigint;
nr_seq_tipo_limitacao_w		bigint;
nr_seq_tipo_limit_novo_w	bigint;

nr_seq_carencia_w		bigint;
nr_seq_tipo_carencia_w		bigint;
nr_seq_tipo_carencia_novo_w	bigint;

qt_tabelas_preco_w		bigint;
nr_seq_tabela_preco_w		bigint;
nr_seq_tabela_origem_w		bigint;
nr_seq_tablela_nova_w		bigint;
nr_seq_tabela_origem_nova_w	bigint;
nr_seq_plano_preco_w		bigint;
nr_seq_plano_preco_novo_w	bigint;
nr_seq_reaj_preco_w		bigint;

nr_seq_regra_inscr_w		bigint;
nr_seq_regra_copartic_w		bigint;
nr_seq_tipo_copartic_w		bigint;
nr_seq_tipo_copartic_novo_w	bigint;
nr_seq_regra_pos_estab_w	bigint;
nr_seq_regra_simul_w		bigint;
nr_seq_tabela_simul_w		bigint;
nr_seq_tabela_simul_nova_w	bigint;
nr_seq_plano_lib_prop_w		bigint;

nr_seq_historico_w		bigint;
nr_seq_livre_escolha_w		bigint;

nr_seq_sca_w			bigint;
nr_seq_plano_adic_w		bigint;
nr_seq_tabela_sca_w		bigint;
nr_seq_plano_ww			bigint;
nr_seq_plano_www		bigint;
nr_seq_tabela_ww		bigint;

nr_seq_instrumento_w		bigint;
nr_seq_instrumento_novo_w	bigint;
nr_seq_plano_instrumento_w	bigint;
nr_seq_plano_intr_novo_w	bigint;
nr_seq_tema_w			bigint;

nr_seq_plano_nota_w		bigint;
nr_seq_plano_complemento_w	bigint;
nr_seq_plano_prestador_w	bigint;
qt_registro_w			bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano
	where	cd_estabelecimento	= cd_estab_origem_p
	order by nr_sequencia;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_area
	where	nr_seq_plano	= nr_seq_plano_w;
	
C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_acomodacao
	where	nr_seq_plano	= nr_seq_plano_w;

C04 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_cobertura
	from	pls_cobertura
	where	nr_seq_plano	= nr_seq_plano_w
	and ie_situacao = 'A'
	and clock_timestamp() between coalesce(dt_inicio_vigencia, clock_timestamp()) and coalesce(dt_fim_vigencia, clock_timestamp());	
	

C05 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_limitacao
	from	pls_limitacao
	where	nr_seq_plano	= nr_seq_plano_w;

C06 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_carencia
	from	pls_carencia
	where	nr_seq_plano	= nr_seq_plano_w;

C07 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tabela_origem
	from	pls_tabela_preco
	where	nr_seq_plano	= nr_seq_plano_w
	order by	coalesce(nr_seq_tabela_origem,-1);

C08 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_preco
	where	nr_seq_tabela	= nr_seq_tabela_preco_w;

C09 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_reajuste_preco
	where	nr_seq_preco	= nr_seq_plano_preco_w;

C10 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_inscricao
	where	nr_seq_plano	= nr_seq_plano_w;

C11 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tipo_coparticipacao
	from	pls_regra_coparticipacao
	where	nr_seq_plano	= nr_seq_plano_w
	and	coalesce(nr_seq_contrato::text, '') = ''
	and	coalesce(nr_seq_proposta::text, '') = '';

C12 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_pos_estabelecido
	where	nr_seq_plano	= nr_seq_plano_w;

C13 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_tabela
	from	pls_regra_simulador_web
	where	nr_seq_plano	= nr_seq_plano_w;

C14 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_lib_proposta
	where	nr_seq_plano	= nr_seq_plano_w;

/*	
Cursor C15 is
	select	nr_sequencia
	from	pls_plano_historico
	where	nr_seq_plano	= nr_seq_plano_w;

*/
	
C16 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_livre_escolha
	where	nr_seq_plano	= nr_seq_plano_w;

C17 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_plano_adic,
		nr_seq_tabela,
		nr_seq_plano
	from	pls_plano_servico_adic;

C18 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_instrumento
	where	nr_seq_plano	= nr_seq_plano_w;

C19 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_instrumento
	where	nr_seq_instrumento = nr_seq_instrumento_w;

C20 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_instrumento_tema
	where	nr_seq_instrumento = nr_seq_plano_instrumento_w;

C21 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_nota
	where	nr_seq_plano	= nr_seq_plano_w;

C22 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_plano_complemento
	where	nr_seq_plano	= nr_seq_plano_w;

/*Cursor C23 is
	select	nr_sequencia
	from	pls_plano_prestador
	where	nr_seq_plano	= nr_seq_plano_w;*/
BEGIN


open C01;
loop
fetch C01 into	
	nr_seq_plano_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	count(1)
	into STRICT	qt_planos_w
	from	pls_plano
	where	nr_seq_plano_ant = nr_seq_plano_w;
	
	if (qt_planos_w	= 0) then
		select	nextval('pls_plano_seq')
		into STRICT	nr_seq_plano_novo_w
		;
		
		select	nr_seq_classificacao
		into STRICT	nr_seq_classificacao_ant_w
		from	pls_plano
		where	nr_sequencia	= nr_seq_plano_w;
		
		begin
		select	nr_sequencia
		into STRICT	nr_seq_classificacao_nova_w
		from	pls_sca_classificacao
		where	nr_seq_classificacao_ant	= nr_seq_classificacao_ant_w;
		exception
		when others then
			nr_seq_classificacao_nova_w	:= null;
		end;
		
		insert into pls_plano(	nr_sequencia, cd_estabelecimento, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
					ds_plano, nr_seq_outorgante, nr_protocolo_ans, cd_codigo_ant, ie_segmentacao, ie_situacao, 
					ie_tipo_contratacao, ie_regulamentacao, ie_abrangencia, ie_franquia, ie_acomodacao, ie_coparticipacao, 
					ie_preco, nm_fantasia, ie_vinculo_ativo, ie_vinculo_inativo, ie_sem_vinculo, ie_participacao, 
					ie_livre_escolha, cd_plano, ie_simulacao_preco, ie_proposta_adesao, ie_tipo_operacao, dt_liberacao, 
					cd_tarja_magnetica, cd_plano_intercambio, cd_scpa, ie_tipo_produto, ie_utilizacao_plano, nr_seq_classificacao, 
					ds_descricao_plano, ie_rede_exclusiva, qt_idade_sca, ds_combinacao_opcionais, dt_ativacao, dt_suspensao, 
					dt_cancelamento, nr_seq_plano_ant)
				(SELECT	nr_seq_plano_novo_w, cd_estab_destino_p, clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, 
					ds_plano, nr_seq_outorgante, nr_protocolo_ans, cd_codigo_ant, ie_segmentacao, ie_situacao, 
					ie_tipo_contratacao, ie_regulamentacao, ie_abrangencia, ie_franquia, ie_acomodacao, ie_coparticipacao, 
					ie_preco, nm_fantasia, ie_vinculo_ativo, ie_vinculo_inativo, ie_sem_vinculo, ie_participacao, 
					ie_livre_escolha, cd_plano, ie_simulacao_preco, ie_proposta_adesao, ie_tipo_operacao, dt_liberacao, 
					cd_tarja_magnetica, cd_plano_intercambio, cd_scpa, ie_tipo_produto, ie_utilizacao_plano, nr_seq_classificacao_nova_w, 
					ds_descricao_plano, ie_rede_exclusiva, qt_idade_sca, ds_combinacao_opcionais, dt_ativacao, dt_suspensao, 
					dt_cancelamento, nr_seq_plano_w
				from	pls_plano
				where	nr_sequencia	= nr_seq_plano_w);
		
		open C02;
		loop
		fetch C02 into	
			nr_seq_plano_area_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			insert into pls_plano_area(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, sg_estado,
							nr_seq_plano, cd_municipio_ibge, nr_seq_sca, nr_seq_regiao)
						(SELECT	nextval('pls_plano_area_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, sg_estado, 
							nr_seq_plano_novo_w, cd_municipio_ibge, nr_seq_sca, nr_seq_regiao
						from	pls_plano_area
						where	nr_sequencia	= nr_seq_plano_area_w);
			end;
		end loop;
		close C02;
		
		open C03;
		loop
		fetch C03 into	
			nr_seq_plano_acomod_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
			select	nr_seq_tipo_acomodacao,
				nr_seq_categoria
			into STRICT	nr_seq_tipo_acomodacao_ant_w,
				nr_seq_categoria_ant_w
			from	pls_plano_acomodacao
			where	nr_sequencia	= nr_seq_plano_acomod_w;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_categoria_nova_w
			from	pls_categoria
			where	nr_seq_categoria_ant	= nr_seq_categoria_ant_w;
			exception
			when others then
				nr_seq_categoria_nova_w	:= null;
			end;
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tipo_acomodacao_nova_w
			from	pls_tipo_acomodacao
			where	nr_seq_tipo_acomod_ant	= nr_seq_tipo_acomodacao_ant_w;
			exception
			when others then
				nr_seq_tipo_acomodacao_nova_w	:= null;
			end;
			
			insert into pls_plano_acomodacao(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano,
							nr_seq_tipo_acomodacao, nr_seq_categoria, ie_acomod_padrao)
						(SELECT	nextval('pls_plano_acomodacao_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano_novo_w, 
							nr_seq_tipo_acomodacao_nova_w, nr_seq_categoria_nova_w, ie_acomod_padrao
						from	pls_plano_acomodacao
						where	nr_sequencia	= nr_seq_plano_acomod_w);
			end;
		end loop;
		close C03;
		
		open C04;
		loop
		fetch C04 into	
			nr_seq_cobertura_w,
			nr_seq_tipo_cobertura_w;
		EXIT WHEN NOT FOUND; /* apply on C04 */
			begin
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tipo_cobert_novo_w
			from	pls_tipo_cobertura
			where	nr_seq_tipo_cobert_ant	= nr_seq_tipo_cobertura_w;
			exception
			when others then
				nr_seq_tipo_cobert_novo_w := nr_seq_tipo_cobertura_w;
			end;
			
			insert into pls_cobertura(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano, nr_seq_contrato,
							nr_seq_tipo_cobertura, nr_seq_sca, ie_tipo_atendimento, ie_sexo, ie_situacao, dt_inicio_vigencia, dt_fim_vigencia)
						(SELECT	nextval('pls_cobertura_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano_novo_w, nr_seq_contrato, 
							nr_seq_tipo_cobert_novo_w, nr_seq_sca, ie_tipo_atendimento, ie_sexo, ie_situacao, dt_inicio_vigencia, dt_fim_vigencia
						from	pls_cobertura
						where	nr_sequencia	= nr_seq_cobertura_w);
			end;
		end loop;
		close C04;
		
		open C05;
		loop
		fetch C05 into	
			nr_seq_limitacao_w,
			nr_seq_tipo_limitacao_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tipo_limit_novo_w
			from	pls_tipo_limitacao
			where	nr_seq_limitacao_ant	= nr_seq_tipo_limitacao_w;
			exception
			when others then
				nr_seq_tipo_limit_novo_w := nr_seq_tipo_limitacao_w;
			end;
			
			insert into pls_limitacao(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano,
							nr_seq_contrato, nr_seq_tipo_limitacao, qt_permitida, qt_meses_intervalo, ie_periodo, qt_dia_internacao,
							ie_tipo_periodo, ie_qt_familia)
						(SELECT	nextval('pls_limitacao_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano_novo_w,
							nr_seq_contrato, nr_seq_tipo_limit_novo_w, qt_permitida, qt_meses_intervalo, ie_periodo, qt_dia_internacao,
							ie_tipo_periodo, ie_qt_familia
						from	pls_limitacao
						where	nr_sequencia	= nr_seq_limitacao_w);
			end;
		end loop;
		close C05;
		
		open C06;
		loop
		fetch C06 into	
			nr_seq_carencia_w,
			nr_seq_tipo_carencia_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tipo_carencia_novo_w
			from	pls_tipo_carencia
			where	nr_seq_carencia_ant	= nr_seq_tipo_carencia_w;
			exception
			when others then
				
			nr_seq_tipo_carencia_novo_w	:= nr_seq_tipo_carencia_w;
			
			end;
			
			insert into pls_carencia(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano,
							nr_seq_contrato, nr_seq_tipo_carencia, nr_seq_segurado, qt_dias, dt_inicio_vigencia, ds_observacao, 
							nr_seq_pessoa_proposta, nr_seq_regra_aut, nr_seq_sca, ie_mes_posterior,ie_origem_carencia_benef,
							dt_inicio_vig_plano, dt_fim_vig_plano)
						(SELECT	nextval('pls_carencia_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_plano_novo_w, 
							nr_seq_contrato, nr_seq_tipo_carencia_novo_w, nr_seq_segurado, qt_dias, dt_inicio_vigencia, ds_observacao, 
							nr_seq_pessoa_proposta, nr_seq_regra_aut, nr_seq_sca, ie_mes_posterior,'P',
							dt_inicio_vig_plano, dt_fim_vig_plano
						from	pls_carencia
						where	nr_sequencia	= nr_seq_carencia_w);
			end;
		end loop;
		close C06;
		
		open C07;
		loop
		fetch C07 into	
			nr_seq_tabela_preco_w,
			nr_seq_tabela_origem_w;
		EXIT WHEN NOT FOUND; /* apply on C07 */
			begin
			
			select	count(1)
			into STRICT	qt_tabelas_preco_w
			from	pls_tabela_preco
			where	nr_seq_tabela_ant	= nr_seq_tabela_preco_w;
			
			if (qt_tabelas_preco_w = 0) then
				begin
				select	nr_sequencia
				into STRICT	nr_seq_tabela_origem_nova_w
				from	pls_tabela_preco
				where	nr_seq_tabela_ant	= nr_seq_tabela_origem_w;
				exception
				when others then
					nr_seq_tabela_origem_nova_w	:= null;
				end;
				
				select	nextval('pls_tabela_preco_seq')
				into STRICT	nr_seq_tablela_nova_w
				;
				
				insert into pls_tabela_preco(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela,
								dt_inicio_vigencia, dt_fim_vigencia, nr_seq_plano, dt_liberacao, cd_codigo_ant, ie_tabela_base, 
								nr_contrato, ie_tabela_contrato, nr_segurado, nr_seq_tabela_origem, ie_proposta_adesao, ie_simulacao_preco, 
								nr_seq_sca, nr_seq_tabela_ant,nr_seq_faixa_etaria)
							(SELECT	nr_seq_tablela_nova_w, clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, nm_tabela, 
								dt_inicio_vigencia, dt_fim_vigencia, nr_seq_plano_novo_w, dt_liberacao, cd_codigo_ant, ie_tabela_base, 
								nr_contrato, ie_tabela_contrato, nr_segurado, nr_seq_tabela_origem_nova_w, ie_proposta_adesao, ie_simulacao_preco, 
								nr_seq_sca, nr_seq_tabela_preco_w, nr_seq_faixa_etaria
							from	pls_tabela_preco
							where	nr_sequencia	= nr_seq_tabela_preco_w);
				
				open C08;
				loop
				fetch C08 into	
					nr_seq_plano_preco_w;
				EXIT WHEN NOT FOUND; /* apply on C08 */
					begin
					select	nextval('pls_plano_preco_seq')
					into STRICT	nr_seq_plano_preco_novo_w
					;
					
					insert into pls_plano_preco(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_tabela,
									qt_idade_inicial, qt_idade_final, vl_preco_inicial, vl_preco_atual, tx_acrescimo, vl_preco_nao_subsidiado, 
									vl_preco_nao_subsid_atual, vl_minimo)
								(SELECT	nr_seq_plano_preco_novo_w, clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_tablela_nova_w	,
									qt_idade_inicial, qt_idade_final, vl_preco_inicial, vl_preco_atual, tx_acrescimo, vl_preco_nao_subsidiado, 
									vl_preco_nao_subsid_atual, vl_minimo
								from	pls_plano_preco
								where	nr_sequencia	= nr_seq_plano_preco_w);
					
					open C09;
					loop
					fetch C09 into	
						nr_seq_reaj_preco_w;
					EXIT WHEN NOT FOUND; /* apply on C09 */
						begin
						
						insert into pls_reajuste_preco(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_reajuste,
										dt_reajuste, pr_reajustado, vl_base, vl_reajustado, nr_seq_preco, nr_seq_tabela, 
										dt_liberacao, nm_usuario_lib, dt_periodo_inicial, dt_periodo_final, dt_autorizacao_ans, 
										vl_preco_nao_subsidiado, vl_preco_nao_subsid_base, vl_minimo, vl_adaptacao_base, vl_adaptacao, vl_minimo_base)
									(SELECT	nextval('pls_reajuste_preco_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, nr_seq_reajuste, 
										dt_reajuste, pr_reajustado, vl_base, vl_reajustado, nr_seq_plano_preco_novo_w, nr_seq_tabela, 
										dt_liberacao, nm_usuario_lib, dt_periodo_inicial, dt_periodo_final, dt_autorizacao_ans, 
										vl_preco_nao_subsidiado, vl_preco_nao_subsid_base, vl_minimo, vl_adaptacao_base, vl_adaptacao, vl_minimo_base
									from	pls_reajuste_preco
									where	nr_sequencia	= nr_seq_reaj_preco_w);
						
						end;
					end loop;
					close C09;
					end;
				end loop;
				close C08;
			end if;	
			end;
		end loop;
		close C07;
		
		open C10;
		loop
		fetch C10 into	
			nr_seq_regra_inscr_w;
		EXIT WHEN NOT FOUND; /* apply on C10 */
			begin
			insert into pls_regra_inscricao(nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, vl_inscricao,
							tx_inscricao, qt_parcela_inicial, qt_parcela_final, nr_seq_plano, nr_seq_contrato, dt_inicio_vigencia, 
							dt_fim_vigencia, nr_seq_subestipulante, ie_acao_contrato, nr_seq_proposta, ie_grau_dependencia)
						(SELECT	nextval('pls_regra_inscricao_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, vl_inscricao, 
							tx_inscricao, qt_parcela_inicial, qt_parcela_final, nr_seq_plano_novo_w, nr_seq_contrato, dt_inicio_vigencia, 
							dt_fim_vigencia, nr_seq_subestipulante, ie_acao_contrato, nr_seq_proposta, ie_grau_dependencia
						from	pls_regra_inscricao
						where	nr_sequencia	= nr_seq_regra_inscr_w);
			end;
		end loop;
		close C10;
		
		open C11;
		loop
		fetch C11 into	
			nr_seq_regra_copartic_w,
			nr_seq_tipo_copartic_w;
		EXIT WHEN NOT FOUND; /* apply on C11 */
			begin
			
			begin
			
			select	nr_sequencia
			into STRICT	nr_seq_tipo_copartic_novo_w
			from	pls_tipo_coparticipacao
			where	nr_seq_copartic_ant	= nr_seq_tipo_copartic_w;
			exception
			when others then
				nr_seq_tipo_copartic_novo_w	:= nr_seq_tipo_copartic_w;	
			end;
			
			insert into pls_regra_coparticipacao(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
								nr_seq_plano, tx_coparticipacao, nr_seq_tipo_coparticipacao, vl_maximo, ie_tipo_atendimento, 
								ie_situacao, nr_seq_contrato, vl_coparticipacao, dt_inicio_vigencia, dt_fim_vigencia, 
								dt_contrato_de, dt_contrato_ate, ie_reajuste, nr_seq_prestador, nr_seq_tipo_prestador,
								ie_inc_demais_itens, vl_base_min, vl_base_max, ie_incidencia_psiquiatria)
							(SELECT	nextval('pls_regra_coparticipacao_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, 
								nr_seq_plano_novo_w, tx_coparticipacao, nr_seq_tipo_copartic_novo_w, vl_maximo, ie_tipo_atendimento, 
								ie_situacao, nr_seq_contrato, vl_coparticipacao, dt_inicio_vigencia, dt_fim_vigencia, 
								dt_contrato_de, dt_contrato_ate, ie_reajuste, nr_seq_prestador, nr_seq_tipo_prestador,
								ie_inc_demais_itens, vl_base_min, vl_base_max, ie_incidencia_psiquiatria
							from	pls_regra_coparticipacao
							where	nr_sequencia	= nr_seq_regra_copartic_w);
			end;
		end loop;
		close C11;
		
		open C12;
		loop
		fetch C12 into	
			nr_seq_regra_pos_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C12 */
			begin
			insert into pls_regra_pos_estabelecido(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
								nr_seq_plano, nr_seq_contrato, tx_administracao, vl_informado, dt_vigencia_inicio, 
								dt_vigencia_fim, ie_cobranca, ie_autorizacao_previa)
							(SELECT	nextval('pls_regra_pos_estabelecido_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, 
								nr_seq_plano_novo_w, nr_seq_contrato, tx_administracao, vl_informado, dt_vigencia_inicio, 
								dt_vigencia_fim, ie_cobranca, ie_autorizacao_previa
							from	pls_regra_pos_estabelecido
							where	nr_sequencia	= nr_seq_regra_pos_estab_w);
			end;
		end loop;
		close C12;
		
		open C13;
		loop
		fetch C13 into	
			nr_seq_regra_simul_w,
			nr_seq_tabela_simul_w;
		EXIT WHEN NOT FOUND; /* apply on C13 */
			begin
			
			begin
			select	nr_sequencia
			into STRICT	nr_seq_tabela_simul_nova_w
			from	pls_tabela_preco
			where	nr_seq_tabela_ant	= nr_seq_tabela_simul_w;
			exception
			when others then
				nr_seq_tabela_simul_nova_w := nr_seq_tabela_simul_w;
			end;
			
			insert into pls_regra_simulador_web(	nr_sequencia, nr_seq_plano, nr_seq_tabela, dt_inicio_vigencia,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, dt_fim_vigencia, 
								dt_liberacao, nm_usuario_liberacao, ds_observacao)
							(SELECT	nextval('pls_regra_simulador_web_seq'), nr_seq_plano_novo_w, nr_seq_tabela_simul_nova_w, dt_inicio_vigencia, 
								clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, dt_fim_vigencia, 
								dt_liberacao, nm_usuario_liberacao, ds_observacao
							from	pls_regra_simulador_web
							where	nr_sequencia	= nr_seq_regra_simul_w);
			end;
		end loop;
		close C13;
		
		open C14;
		loop
		fetch C14 into	
			nr_seq_plano_lib_prop_w;
		EXIT WHEN NOT FOUND; /* apply on C14 */
			begin
			insert into pls_plano_lib_proposta(	nr_sequencia, nr_seq_plano, dt_inicio_vigencia, dt_liberacao,
								dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, dt_fim_vigencia, 
								nm_usuario_liberacao, ds_observacao)
							(SELECT	nextval('pls_plano_lib_proposta_seq'), nr_seq_plano_novo_w, dt_inicio_vigencia, dt_liberacao, 
								clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, dt_fim_vigencia, 
								nm_usuario_liberacao, ds_observacao
							from	pls_plano_lib_proposta
							where	nr_sequencia	= nr_seq_plano_lib_prop_w);
			end;
		end loop;
		close C14;
		
		/*open C15;
		loop
		fetch C15 into	
			nr_seq_historico_w;
		exit when C15%notfound;
			begin
			
			insert into pls_plano_historico(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
								nr_seq_plano, dt_historico, ds_titulo)
							(select	pls_plano_historico_seq.NextVal, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, 
								nr_seq_plano_novo_w, dt_historico, ds_titulo
							from	pls_plano_historico
							where	nr_sequencia	= nr_seq_historico_w);
			end;
		end loop;
		close C15;*/
		
		open C16;
		loop
		fetch C16 into	
			nr_seq_livre_escolha_w;
		EXIT WHEN NOT FOUND; /* apply on C16 */
			begin
			insert into pls_plano_livre_escolha(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
								nm_usuario_nrec, nr_seq_livre_escolha, nr_seq_plano)
							(SELECT	nextval('pls_plano_livre_escolha_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, 
								nm_usuario_nrec, nr_seq_livre_escolha, nr_seq_plano_novo_w
							from	pls_plano_livre_escolha
							where	nr_sequencia	= nr_seq_livre_escolha_w);
			end;
		end loop;
		close C16;
		
		open C18;
		loop
		fetch C18 into	
			nr_seq_instrumento_w;
		EXIT WHEN NOT FOUND; /* apply on C18 */
			begin
			select	nextval('pls_instrumento_seq')
			into STRICT	nr_seq_instrumento_novo_w
			;
			
			insert into pls_instrumento(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							ds_instrumento, nr_seq_plano, ie_situacao, dt_inicio_vigencia, dt_fim_vigencia)
						(SELECT	nr_seq_instrumento_novo_w, clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, 
							ds_instrumento, nr_seq_plano_novo_w, ie_situacao, dt_inicio_vigencia, dt_fim_vigencia
						from	pls_instrumento
						where	nr_sequencia	= nr_seq_instrumento_w);
			
			open C19;
			loop
			fetch C19 into	
				nr_seq_plano_instrumento_w;
			EXIT WHEN NOT FOUND; /* apply on C19 */
				begin
				select	nextval('pls_plano_instrumento_seq')
				into STRICT	nr_seq_plano_intr_novo_w
				;
				
				insert into pls_plano_instrumento(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
									nm_dispositivo, nr_seq_instrumento, ie_gerar_titulo, cd_classificacao, 
									ie_quebra_pagina)
								(SELECT	nr_seq_plano_intr_novo_w, clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, 
									nm_dispositivo, nr_seq_instrumento_novo_w, ie_gerar_titulo, cd_classificacao, 
									ie_quebra_pagina
								from	pls_plano_instrumento
								where	nr_sequencia	= nr_seq_plano_instrumento_w);
				
				open C20;
				loop
				fetch C20 into	
					nr_seq_tema_w;
				EXIT WHEN NOT FOUND; /* apply on C20 */
					begin
					insert into pls_instrumento_tema(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
										nm_usuario_nrec, nr_seq_tema, nr_seq_instrumento)
									(SELECT	nextval('pls_instrumento_tema_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, 
										nm_usuario_nrec, nr_seq_tema, nr_seq_plano_intr_novo_w
									from	pls_instrumento_tema
									where	nr_sequencia	= nr_seq_tema_w);
					end;
				end loop;
				close C20;
				
				end;
			end loop;
			close C19;
			
			end;
		end loop;
		close C18;
		
		open C21;
		loop
		fetch C21 into	
			nr_seq_plano_nota_w;
		EXIT WHEN NOT FOUND; /* apply on C21 */
			begin
			insert into pls_plano_nota(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_plano, ds_titulo, ds_arquivo, nr_protocolo, dt_protocolo, ds_observacao)
						(SELECT	nextval('pls_plano_nota_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, 
							nr_seq_plano_novo_w, ds_titulo, ds_arquivo, nr_protocolo, dt_protocolo, ds_observacao
						from	pls_plano_nota
						where	nr_sequencia	= nr_seq_plano_nota_w);
			end;
		end loop;
		close C21;
		
		open C22;
		loop
		fetch C22 into	
			nr_seq_plano_complemento_w;
		EXIT WHEN NOT FOUND; /* apply on C22 */
			begin
			insert into pls_plano_complemento(	nr_sequencia, nr_seq_plano, dt_inicio_vigencia, dt_atualizacao, nm_usuario,
								dt_atualizacao_nrec, nm_usuario_nrec, dt_fim_vigencia)
							(SELECT	nextval('pls_plano_complemento_seq'), nr_seq_plano_novo_w, dt_inicio_vigencia, clock_timestamp(), nm_usuario_p, 
								dt_atualizacao_nrec, nm_usuario_nrec, dt_fim_vigencia
							from	pls_plano_complemento
							where	nr_sequencia	= nr_seq_plano_complemento_w);
			end;
		end loop;
		close C22;
		
		/*open C23;
		loop
		fetch C23 into	
			nr_seq_plano_prestador_w;
		exit when C23%notfound;
			begin
			insert into pls_plano_prestador(	nr_sequencia, nr_seq_plano, cd_estabelecimento, nr_seq_prestador, dt_atualizacao, 
								nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_situacao)
							(select	pls_plano_prestador_seq.NextVal, nr_seq_plano_novo_w, cd_estab_destino_p, nr_seq_prestador, sysdate, 
								nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec, ie_situacao
							from	pls_plano_prestador
							where	nr_sequencia	= nr_seq_plano_prestador_w);
			end;
		end loop;
		close C23;*/
	end if;	
	end;
end loop;
close C01;

open C17;
loop
fetch C17 into	
	nr_seq_sca_w,
	nr_seq_plano_adic_w,
	nr_seq_tabela_sca_w,
	nr_seq_plano_ww;
EXIT WHEN NOT FOUND; /* apply on C17 */
	begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_plano_www
	from	pls_plano
	where	nr_seq_plano_ant	= nr_seq_plano_ww;
	
	select	max(nr_sequencia)
	into STRICT	nr_seq_tabela_ww
	from	pls_tabela_preco
	where	nr_seq_tabela_ant	= nr_seq_tabela_sca_w;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	pls_plano_servico_adic
	where	nr_seq_anterior		= nr_seq_sca_w;
	
	if (qt_registro_w	= 0) then
		insert into pls_plano_servico_adic(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_plano, nr_seq_servico, ds_complemento, ie_grau_dependencia, dt_inicio_vigencia,
							dt_fim_vigencia, qt_idade_limite, nr_seq_plano_adic, nr_seq_tabela, nr_seq_anterior)
						(SELECT	nextval('pls_plano_servico_adic_seq'), clock_timestamp(), nm_usuario_p, dt_atualizacao_nrec, nm_usuario_nrec,
							nr_seq_plano_www, nr_seq_servico, ds_complemento, ie_grau_dependencia, dt_inicio_vigencia,
							dt_fim_vigencia, qt_idade_limite, nr_seq_plano_adic, nr_seq_tabela_ww, nr_seq_sca_w
						from	pls_plano_servico_adic
						where	nr_sequencia	= nr_seq_sca_w);
	end if;
	
	end;
end loop;
close C17;
	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_copiar_produto ( cd_estab_origem_p bigint, cd_estab_destino_p bigint, nm_usuario_p text) FROM PUBLIC;

