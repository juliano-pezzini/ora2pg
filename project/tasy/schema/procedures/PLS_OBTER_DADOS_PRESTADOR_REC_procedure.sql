-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_dados_prestador_rec (nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_classe_p pls_prestador_rec.nr_seq_classe%type, nr_seq_conta_banco_p INOUT pls_prestador_rec.nr_seq_conta_banco%type, ie_bloqueto_p INOUT pls_prestador_rec.ie_bloqueto%type, nr_seq_carteira_cobr_p INOUT pls_prestador_rec.nr_seq_carteira_cobr%type, nr_seq_trans_fin_contab_p INOUT pls_prestador_rec.nr_seq_trans_fin_contab%type, nr_seq_trans_fin_baixa_p INOUT pls_prestador_rec.nr_seq_trans_fin_baixa%type, ds_observacao_p INOUT pls_prestador_rec.ds_observacao%type, ie_data_emissao_geracao_p INOUT pls_prestador_rec.ie_data_emissao_geracao%type, qt_dias_vencimento_p INOUT pls_prestador_rec.qt_dias_vencimento%type, nr_seq_forma_cobranca_p INOUT pls_prestador_rec.nr_seq_forma_cobranca%type) AS $body$
DECLARE






ie_valido_w	boolean;

C01 CURSOR(	nr_seq_prestador_pc	pls_prestador.nr_sequencia%type) FOR
	SELECT	nr_seq_conta_banco,
		ie_bloqueto,
		nr_seq_carteira_cobr,
		nr_seq_trans_fin_contab, 
		nr_seq_trans_fin_baixa, 
		ds_observacao,
		ie_data_emissao_geracao,
		qt_dias_vencimento,
		nr_seq_classe,
		nr_seq_forma_cobranca
	from	pls_prestador_rec
	where	nr_seq_prestador = nr_seq_prestador_pc
	order by coalesce(nr_seq_classe,0) desc;

BEGIN
-- inicia os par?tros out como null
ie_bloqueto_p := null;
ds_observacao_p := null;
qt_dias_vencimento_p := null;
nr_seq_conta_banco_p := null;
nr_seq_carteira_cobr_p := null;
nr_seq_trans_fin_baixa_p := null;
nr_seq_trans_fin_contab_p := null;
ie_data_emissao_geracao_p := null;
nr_seq_forma_cobranca_p	:= null;


-- s?rifica caso seja passado um prestador
if (nr_seq_prestador_p IS NOT NULL AND nr_seq_prestador_p::text <> '') then

	for r_c01_w in c01(nr_seq_prestador_p) loop

		-- come?como sendo v?da a regra
		ie_valido_w := true;

		-- se estiver informada a classe e n?for a mesma passada de par?tro ent?a regra n???da
		if (r_c01_w.nr_seq_classe IS NOT NULL AND r_c01_w.nr_seq_classe::text <> '') and (r_c01_w.nr_seq_classe != nr_seq_classe_p) then
		
			ie_valido_w := false;
		end if;

		-- se a regra for v?da ent?alimenta os par?tros out e sai do cursor, pois a primeira regra v?da ? correta
		if (ie_valido_w) then

			ie_bloqueto_p := r_c01_w.ie_bloqueto;
			ds_observacao_p := r_c01_w.ds_observacao;
			qt_dias_vencimento_p := r_c01_w.qt_dias_vencimento;
			nr_seq_conta_banco_p := r_c01_w.nr_seq_conta_banco;
			nr_seq_carteira_cobr_p := r_c01_w.nr_seq_carteira_cobr;
			nr_seq_trans_fin_contab_p := r_c01_w.nr_seq_trans_fin_contab;
			nr_seq_trans_fin_baixa_p := r_c01_w.nr_seq_trans_fin_baixa;
			ie_data_emissao_geracao_p := r_c01_w.ie_data_emissao_geracao;
			nr_seq_forma_cobranca_p 	:= r_c01_w.nr_seq_forma_cobranca;			
			exit;
		end if;
	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_dados_prestador_rec (nr_seq_prestador_p pls_prestador.nr_sequencia%type, nr_seq_classe_p pls_prestador_rec.nr_seq_classe%type, nr_seq_conta_banco_p INOUT pls_prestador_rec.nr_seq_conta_banco%type, ie_bloqueto_p INOUT pls_prestador_rec.ie_bloqueto%type, nr_seq_carteira_cobr_p INOUT pls_prestador_rec.nr_seq_carteira_cobr%type, nr_seq_trans_fin_contab_p INOUT pls_prestador_rec.nr_seq_trans_fin_contab%type, nr_seq_trans_fin_baixa_p INOUT pls_prestador_rec.nr_seq_trans_fin_baixa%type, ds_observacao_p INOUT pls_prestador_rec.ds_observacao%type, ie_data_emissao_geracao_p INOUT pls_prestador_rec.ie_data_emissao_geracao%type, qt_dias_vencimento_p INOUT pls_prestador_rec.qt_dias_vencimento%type, nr_seq_forma_cobranca_p INOUT pls_prestador_rec.nr_seq_forma_cobranca%type) FROM PUBLIC;

