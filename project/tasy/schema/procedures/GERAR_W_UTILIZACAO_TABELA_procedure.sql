-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_utilizacao_tabela ( nm_tabela_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_utilizacao_p text) AS $body$
DECLARE


c01			integer;
c02 			integer;
c03			integer;
c04			integer;
nr_pos_pref_w		smallint;
nm_restricao_tabela_w	varchar(30);
nm_rest_pk_tabela_w	varchar(30);
nm_coluna_pk_tabela_w	varchar(4000) := '';
nr_chave_tabela_w	varchar(30)   := '';
ds_comando_tabelas_w	varchar(4000) := '';
ds_comando_colunas_w	varchar(4000) := '';
ds_comando_dados_w	varchar(4000) := '';
ds_valor_coluna_ds_w	varchar(4000) := '';
nm_coluna_cd_tabela_w	varchar(4000) := '';
nm_coluna_ds_tabela_w	varchar(4000) := '';
nm_coluna_tabela_w	varchar(4000) := '';
nm_restricao_ref_w	varchar(30);
nm_tabela_w		varchar(30);
nm_coluna_w		varchar(4000);
nm_pref_w		varchar(10);
retorno_w		integer;
dt_utilizacao_w		timestamp;
qt_utilizacao_w		bigint;
nr_chave_w		varchar(30);

dt_inicial_w		varchar(20);
dt_final_w		varchar(20);


BEGIN

select	constraint_name
into STRICT	nm_restricao_tabela_w
from	user_constraints
where	table_name = upper(nm_tabela_p)
and	constraint_type = 'P';

delete	from w_utilizacao_tabela
where	nm_usuario = nm_usuario_p;

ds_comando_tabelas_w	:= 	'select a.constraint_name,
					a.table_name
				 from 	user_constraints a
				 where 	a.r_constraint_name = :nm_pk';

ds_comando_colunas_w	:=  	'select	column_name
				 from 	user_cons_columns
				 where	constraint_name = :nm_const';

c01 := dbms_sql.open_cursor;

dbms_sql.parse(c01,ds_comando_tabelas_w,dbms_sql.native);
dbms_sql.define_column(c01,1,nm_restricao_ref_w,50);
dbms_sql.define_column(c01,2,nm_tabela_w,50);
dbms_sql.bind_variable(c01,'NM_PK',nm_restricao_tabela_w,50);

retorno_w := dbms_sql.execute(c01);

while(dbms_sql.fetch_rows(c01) > 0) loop
	begin
	dbms_sql.column_value(c01,1,nm_restricao_ref_w);
	dbms_sql.column_value(c01,2,nm_tabela_w);

	c02	:= dbms_sql.open_cursor;
	dbms_sql.parse(c02,ds_comando_colunas_w,dbms_sql.native);
	dbms_sql.define_column(c02,1,nm_coluna_w,50);
	dbms_sql.bind_variable(c02,'NM_CONST',nm_restricao_ref_w,50);

	retorno_w := dbms_sql.execute(c02);

	while(dbms_sql.fetch_rows(c02) > 0) loop
		begin
		dbms_sql.column_value(c02,1,nm_coluna_w);

		begin

		select	max(constraint_name)
		into STRICT 	nm_rest_pk_tabela_w
		from	user_constraints
		where	table_name = nm_tabela_w
		and	constraint_type = 'P';

		select	max(column_name)
		into STRICT	nm_coluna_pk_tabela_w
		from	user_cons_columns
		where	constraint_name = nm_rest_pk_tabela_w
		and	table_name = nm_tabela_w;

		dt_inicial_w 	:= to_char(dt_inicial_p,'dd/mm/yyyy');
		dt_final_w	:= to_char(trunc(coalesce(dt_final_p, clock_timestamp()),'dd') + 86399/86400,'dd/mm/yyyy hh24:mi:ss');

		if (ie_utilizacao_p = 'S') then
			ds_comando_dados_w :=	'select	trunc(dt_atualizacao),
							count(*),' || ' ' ||
							'to_char(' || nm_coluna_w || '), ' ||
							'to_char(' || nm_coluna_pk_tabela_w || ') ' ||
						'from ' || nm_tabela_w || ' ' ||
						'where ' || nm_coluna_w || ' is not null
						 and dt_atualizacao between to_date('|| chr(39) || dt_inicial_w || chr(39) ||','|| chr(39) || 'dd/mm/yyyy' || chr(39) ||')
						 and to_date(' || chr(39) || dt_final_w || chr(39) ||','|| chr(39) || 'dd/mm/yyyy hh24:mi:ss' || chr(39) ||')
						 group by trunc(dt_atualizacao),' ||
							  nm_coluna_w || ',' ||
							  nm_coluna_pk_tabela_w;
		else
			ds_comando_dados_w :=	'select	null,
							null,
							null,
							null ' ||
						'from dual ' ||
						'where not exists(select 1 ' ||
								  ' from  ' || nm_tabela_w || ' ' ||
								  ' where ' || nm_coluna_w || ' is not null ' ||
								  ' and dt_atualizacao between to_date('|| chr(39) || dt_inicial_w || chr(39) ||','|| chr(39) || 'dd/mm/yyyy' || chr(39) ||')
						 and to_date(' || chr(39) || dt_final_w || chr(39) ||','|| chr(39) || 'dd/mm/yyyy hh24:mi:ss' || chr(39) ||'))';
		end if;

		c03 := dbms_sql.open_cursor;
		dbms_sql.parse(c03,ds_comando_dados_w,dbms_sql.native);
		dbms_sql.define_column(c03,1,dt_utilizacao_w);
		dbms_sql.define_column(c03,2,qt_utilizacao_w);
		dbms_sql.define_column(c03,3,nr_chave_w,30);
		dbms_sql.define_column(c03,4,nr_chave_tabela_w,30);

		retorno_w := dbms_sql.execute(c03);

		while(dbms_sql.fetch_rows(c03) > 0) loop
			begin
			dbms_sql.column_value(c03,1,dt_utilizacao_w);
			dbms_sql.column_value(c03,2,qt_utilizacao_w);
			dbms_sql.column_value(c03,3,nr_chave_w);
			dbms_sql.column_value(c03,4,nr_chave_tabela_w);

			select	upper(max(column_name))
			into STRICT	nm_coluna_cd_tabela_w
			from	user_cons_columns
			where	table_name = nm_tabela_p
			and	constraint_name = nm_restricao_tabela_w;

			nm_pref_w := 'CD_';
			nr_pos_pref_w := position(nm_pref_w in nm_coluna_cd_tabela_w);
			if (nr_pos_pref_w = 0) then
				nm_pref_w := 'NR_SEQ_';
				nr_pos_pref_w := position(nm_pref_w in nm_coluna_cd_tabela_w);
			end if;
			if (nr_pos_pref_w = 0) then
				nm_pref_w := 'NR_';
				nr_pos_pref_w := position(nm_pref_w in nm_coluna_cd_tabela_w);
			end if;

			if (nr_pos_pref_w > 0) then
				nm_coluna_tabela_w := substr(nm_coluna_cd_tabela_w,nr_pos_pref_w + length(nm_pref_w),length(nm_coluna_cd_tabela_w) - length(nm_pref_w));

				select	max(column_name)
				into STRICT	nm_coluna_ds_tabela_w
				from	user_cons_columns
				where	table_name = nm_tabela_p
				and	((column_name = 'NM_' || nm_coluna_tabela_w)
					 or (column_name = 'DS_' || nm_coluna_tabela_w)
					 or (column_name = 'NM_' || nm_tabela_p)
					 or (column_name = 'DS_' || nm_tabela_p));

				if ((nm_coluna_ds_tabela_w IS NOT NULL AND nm_coluna_ds_tabela_w::text <> '') and (nr_chave_w IS NOT NULL AND nr_chave_w::text <> '') and (nm_coluna_cd_tabela_w IS NOT NULL AND nm_coluna_cd_tabela_w::text <> '')) then
					ds_comando_dados_w :=	' select substr(' || nm_coluna_ds_tabela_w || ',1,4000)' ||
						' from '  || nm_tabela_p ||
						' where ' || nm_coluna_cd_tabela_w || ' = to_char(' || chr(39) || nr_chave_w || chr(39) || ')';

					c04 := dbms_sql.open_cursor;
					dbms_sql.parse(c04,ds_comando_dados_w,dbms_sql.native);
					dbms_sql.define_column(c04,1,ds_valor_coluna_ds_w,4000);
					retorno_w := dbms_sql.execute(c04);
					while(dbms_sql.fetch_rows(c04) > 0) loop
						begin
						dbms_sql.column_value(c04,1,ds_valor_coluna_ds_w);
						end;
					end loop;
					dbms_sql.close_cursor(c04);
				end if;
			end if;

			insert into w_utilizacao_tabela(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nm_tabela,
				nm_coluna,
				nr_chave,
				nr_chave_ref,
				dt_utilizacao,
				qt_utilizacao,
				ds_descricao)
			values ( nextval('w_utilizacao_tabela_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				nm_tabela_w,
				nm_coluna_w,
				nr_chave_w,
				nr_chave_tabela_w,
				dt_utilizacao_w,
				qt_utilizacao_w,
				ds_valor_coluna_ds_w);
			end;
		end loop;
		dbms_sql.close_cursor(c03);
		end;
		exception
			when others then
			dbms_sql.close_cursor(c03);
		end;
	end loop;
	dbms_sql.close_cursor(c02);
	end;
end loop;

dbms_sql.close_cursor(c01);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_utilizacao_tabela ( nm_tabela_p text, dt_inicial_p timestamp, dt_final_p timestamp, nm_usuario_p text, ie_utilizacao_p text) FROM PUBLIC;

