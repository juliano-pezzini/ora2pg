-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_conta_proc_w (nr_interno_conta_p bigint, nm_usuario_p text, ie_proc_zerado_spsadt_p text, ie_proc_zerado_ri_p text) AS $body$
DECLARE


nr_seq_tiss_proc_w		bigint;
nr_sequencia_w			bigint;
ie_forcar_agrup_partic_w	varchar(1);
nr_seq_proc_w			bigint;
nr_seq_partic_w			bigint;
nm_medico_executor_w		varchar(255);
count_w				bigint;
ie_honor_zerado_w		varchar(10);

c01 CURSOR FOR
SELECT	*
from	tiss_conta_proc
where	nr_interno_conta = nr_interno_conta_p
and	ie_tiss_tipo_guia in ('4','5') --lhalves  - Apenas SADT e RI, para não dar problema com a guia de HI
and	coalesce(ie_xml,'S') = 'S'
and	((count_w = 0) or (OBTER_SE_TISS_REGRA_AGRUP(nr_seq_proc) = 'S') or (coalesce(nr_seq_proc::text, '') = ''))
order by nr_seq_apresentacao;

c01_w	c01%rowtype;

c02 CURSOR FOR
SELECT	a.nr_seq_proc,
	max(a.nr_sequencia),
	a.nm_medico_executor
from	tiss_conta_partic a,
	tiss_conta_proc b
where	a.nr_seq_proc		= b.nr_sequencia
and	a.nr_interno_conta	= nr_interno_conta_p
and	b.ie_tiss_tipo_guia	in ('4','5')
group by a.nr_seq_proc,
	a.nm_medico_executor
order by 1;


BEGIN

select	coalesce(max(ie_forcar_agrup_partic),'N'),
	coalesce(max(ie_honor_zerado), 'S')
into STRICT	ie_forcar_agrup_partic_w,
	ie_honor_zerado_w
from	tiss_parametros_convenio a,
	conta_paciente b
where	a.cd_convenio		= b.cd_convenio_parametro
and	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.nr_interno_conta	= nr_interno_conta_p;

select	count(*)
into STRICT	count_w
from	tiss_regra_agrup a,
	conta_paciente b
where	a.cd_convenio		= b.cd_convenio_parametro
and	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.nr_interno_conta	= nr_interno_conta_p;

open C01;
loop
fetch C01 into
	c01_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	/*Verifica se já existe um registro NOVO (IE_AGRUPADO = 'S') e  idêntico na TISS_CONTA_PROC*/

	begin
	select	nr_sequencia
	into STRICT	nr_seq_tiss_proc_w
	from	tiss_conta_proc
	where	nr_interno_conta	= nr_interno_conta_p
	and	ie_agrupado		= 'S'
	and	ie_tiss_tipo_guia	= c01_w.ie_tiss_tipo_guia
	and	coalesce( cd_autorizacao,coalesce(c01_w.cd_autorizacao,'Não Informada'))			= coalesce(c01_w.cd_autorizacao,'Não Informada')
	and	coalesce( cd_senha,coalesce(c01_w.cd_senha,'X'))						= coalesce(c01_w.cd_senha,'X')
	and	coalesce( cd_procedimento,coalesce(c01_w.cd_procedimento,'X'))				= coalesce(c01_w.cd_procedimento,'X')
	and	coalesce( cd_edicao_amb,coalesce(c01_w.cd_edicao_amb,'X'))				= coalesce(c01_w.cd_edicao_amb,'X')
	and	coalesce( cd_cbos,coalesce(c01_w.cd_cbos,'X'))						= coalesce(c01_w.cd_cbos,'X')
	and	coalesce( cd_cgc_prestador,coalesce(c01_w.cd_cgc_prestador,'X'))				= coalesce(c01_w.cd_cgc_prestador,'X')
	and	coalesce( cd_cgc_prest_solic_tiss,coalesce(c01_w.cd_cgc_prest_solic_tiss,'X'))		= coalesce(c01_w.cd_cgc_prest_solic_tiss,'X')
	and	coalesce( cd_especialidade,coalesce(c01_w.cd_especialidade,0))				= coalesce(c01_w.cd_especialidade,0)
	and	coalesce( cd_funcionario_honor,coalesce(c01_w.cd_funcionario_honor,'X'))			= coalesce(c01_w.cd_funcionario_honor,'X')
	and	coalesce( cd_medico_convenio,coalesce(c01_w.cd_medico_convenio,'X'))			= coalesce(c01_w.cd_medico_convenio,'X')
	and	coalesce( cd_medico_exec_proc_honor,coalesce(c01_w.cd_medico_exec_proc_honor,'X'))	= coalesce(c01_w.cd_medico_exec_proc_honor,'X')
	and	coalesce( cd_medico_exec_tiss,coalesce(c01_w.cd_medico_exec_tiss,'X'))			= coalesce(c01_w.cd_medico_exec_tiss,'X')
	and	coalesce( cd_medico_executor,coalesce(c01_w.cd_medico_executor,'X'))			= coalesce(c01_w.cd_medico_executor,'X')
	and	coalesce( cd_medico_honor_tiss,coalesce(c01_w.cd_medico_honor_tiss,'X'))			= coalesce(c01_w.cd_medico_honor_tiss,'X')
	and	coalesce( cd_medico_prof_solic_tiss,coalesce(c01_w.cd_medico_prof_solic_tiss,'X'))	= coalesce(c01_w.cd_medico_prof_solic_tiss,'X')
	and	coalesce( cd_medico_solic_tiss,coalesce(c01_w.cd_medico_solic_tiss,'X'))			= coalesce(c01_w.cd_medico_solic_tiss,'X')
	and	coalesce( cd_prestador_tiss,coalesce(c01_w.cd_prestador_tiss,'X'))			= coalesce(c01_w.cd_prestador_tiss,'X')
	and	coalesce( crm_medico_externo,coalesce(c01_w.crm_medico_externo,'X'))			= coalesce(c01_w.crm_medico_externo,'X')
	and	coalesce( ds_procedimento,coalesce(c01_w.ds_procedimento,'X'))				= coalesce(c01_w.ds_procedimento,'X')
	and	coalesce( dt_fim_cir,coalesce(c01_w.dt_fim_cir,clock_timestamp()))					= coalesce(c01_w.dt_fim_cir,clock_timestamp())
	and	coalesce( dt_inicio_cir,coalesce(c01_w.dt_inicio_cir,clock_timestamp()))				= coalesce(c01_w.dt_inicio_cir,clock_timestamp())
	and	coalesce( dt_procedimento,coalesce(c01_w.dt_procedimento,clock_timestamp()))			= coalesce(c01_w.dt_procedimento,clock_timestamp())
	and	coalesce( ie_funcao_medico,coalesce(c01_w.ie_funcao_medico,'X'))				= coalesce(c01_w.ie_funcao_medico,'X')
	and	coalesce( ie_responsavel_credito,coalesce(c01_w.ie_responsavel_credito,'X'))		= coalesce(c01_w.ie_responsavel_credito,'X')
	and	coalesce( ie_tecnica_utilizada,coalesce(c01_w.ie_tecnica_utilizada,'X'))			= coalesce(c01_w.ie_tecnica_utilizada,'X')
	and	coalesce( ie_tipo_atend_tiss,coalesce(c01_w.ie_tipo_atend_tiss,'X'))			= coalesce(c01_w.ie_tipo_atend_tiss,'X')
	and	coalesce( ie_via_acesso,coalesce(c01_w.ie_via_acesso,'X'))				= coalesce(c01_w.ie_via_acesso,'X')
	and	coalesce( ie_honorario,coalesce(c01_w.ie_honorario,'X'))					= coalesce(c01_w.ie_honorario,'X')
	and	coalesce( nm_medico_externo,coalesce(c01_w.nm_medico_externo,'X'))			= coalesce(c01_w.nm_medico_externo,'X')
	and	coalesce( nm_medico_externo,coalesce(c01_w.nm_medico_externo,'X'))			= coalesce(c01_w.nm_medico_externo,'X')
	and	coalesce( vl_unitario,coalesce(c01_w.vl_unitario,0))					= coalesce(c01_w.vl_unitario,0)
	and	coalesce( vl_reducao_acrescimo,coalesce(c01_w.vl_reducao_acrescimo,0))			= coalesce(c01_w.vl_reducao_acrescimo,0)
	and	coalesce( nr_seq_med_fatur,coalesce(c01_w.nr_seq_med_fatur,0))				= coalesce(c01_w.nr_seq_med_fatur,0)
	and	coalesce( nr_seq_prot_med,coalesce(c01_w.nr_seq_prot_med,0))				= coalesce(c01_w.nr_seq_prot_med,0)
	and	coalesce( nr_seq_reap_conta,coalesce(c01_w.nr_seq_reap_conta,0))				= coalesce(c01_w.nr_seq_reap_conta,0)
	and	coalesce( ds_indicacao_proc,coalesce(c01_w.ds_indicacao_proc,'X'))			= coalesce(c01_w.ds_indicacao_proc,'X')
	and	coalesce( nr_guia_prestador,coalesce(c01_w.nr_guia_prestador,'X'))			= coalesce(c01_w.nr_guia_prestador,'X')  LIMIT 1;
	exception
	when others then
		nr_seq_tiss_proc_w	:= 0;
	end;

	if (nr_seq_tiss_proc_w = 0) then --Se não existe, cria um novo.
		select	nextval('tiss_conta_proc_seq')
		into STRICT	nr_sequencia_w
		;

		insert into tiss_conta_proc(cd_autorizacao,
			cd_cbos,
			cd_cgc_prestador,
			cd_cgc_prest_honor_tiss,
			cd_cgc_prest_solic_tiss,
			cd_edicao_amb,
			cd_especialidade,
			cd_funcionario_honor,
			cd_medico_convenio,
			cd_medico_exec_proc_honor,
			cd_medico_exec_tiss,
			cd_medico_executor,
			cd_medico_honor_tiss,
			cd_medico_prof_solic_tiss,
			cd_medico_solic_tiss,
			cd_med_solic_tasymed,
			cd_prestador_solic_tiss,
			cd_prestador_tiss,
			cd_procedimento,
			cd_senha,
			crm_medico_externo,
			ds_justificativa_revisao,
			ds_prestador_solic_tiss,
			ds_prestador_tiss,
			ds_procedimento,
			dt_atualizacao,
			dt_fim_cir,
			dt_inicio_cir,
			dt_procedimento,
			ie_agrupado,
			ie_contrat_med,
			ie_funcao_medico,
			ie_honorario,
			ie_responsavel_credito,
			ie_tecnica_utilizada,
			ie_tipo_atend_tiss,
			ie_tiss_tipo_guia,
			ie_via_acesso,
			ie_xml,
			nm_medico_externo,
			nm_usuario,
			nr_atend_med,
			nr_interno_conta,
			nr_seq_apresentacao,
			nr_seq_guia,
			nr_seq_lote_hist,
			nr_seq_med_fatur,
			nr_seq_proc,
			nr_seq_prot_med,
			nr_seq_reap_conta,
			nr_sequencia,
			qt_procedimento,
			vl_procedimento,
			vl_reducao_acrescimo,
			vl_unitario,
			ds_indicacao_proc,
			nr_guia_prestador)
		values (	c01_w.cd_autorizacao,
			c01_w.cd_cbos,
			c01_w.cd_cgc_prestador,
			c01_w.cd_cgc_prest_honor_tiss,
			c01_w.cd_cgc_prest_solic_tiss,
			c01_w.cd_edicao_amb,
			c01_w.cd_especialidade,
			c01_w.cd_funcionario_honor,
			c01_w.cd_medico_convenio,
			c01_w.cd_medico_exec_proc_honor,
			c01_w.cd_medico_exec_tiss,
			c01_w.cd_medico_executor,
			c01_w.cd_medico_honor_tiss,
			c01_w.cd_medico_prof_solic_tiss,
			c01_w.cd_medico_solic_tiss,
			c01_w.cd_med_solic_tasymed,
			c01_w.cd_prestador_solic_tiss,
			c01_w.cd_prestador_tiss,
			c01_w.cd_procedimento,
			c01_w.cd_senha,
			c01_w.crm_medico_externo,
			c01_w.ds_justificativa_revisao,
			c01_w.ds_prestador_solic_tiss,
			c01_w.ds_prestador_tiss,
			c01_w.ds_procedimento,
			c01_w.dt_atualizacao,
			c01_w.dt_fim_cir,
			c01_w.dt_inicio_cir,
			c01_w.dt_procedimento,
			'S', --ie_agrupado
			c01_w.ie_contrat_med,
			c01_w.ie_funcao_medico,
			c01_w.ie_honorario,
			c01_w.ie_responsavel_credito,
			c01_w.ie_tecnica_utilizada,
			c01_w.ie_tipo_atend_tiss,
			c01_w.ie_tiss_tipo_guia,
			c01_w.ie_via_acesso,
			c01_w.ie_xml,
			c01_w.nm_medico_externo,
			nm_usuario_p,
			c01_w.nr_atend_med,
			c01_w.nr_interno_conta,
			c01_w.nr_seq_apresentacao,
			c01_w.nr_seq_guia,
			c01_w.nr_seq_lote_hist,
			c01_w.nr_seq_med_fatur,
			c01_w.nr_seq_proc,
			c01_w.nr_seq_prot_med,
			c01_w.nr_seq_reap_conta,
			nr_sequencia_w,
			c01_w.qt_procedimento,
			c01_w.vl_procedimento,
			c01_w.vl_reducao_acrescimo,
			c01_w.vl_unitario,
			c01_w.ds_indicacao_proc,
			c01_w.nr_guia_prestador);

		update	tiss_conta_partic
		set	nr_seq_proc		= nr_sequencia_w
		where	nr_interno_conta	= nr_interno_conta_p
		and	nr_seq_proc		= c01_w.nr_sequencia;

		delete	from tiss_conta_proc
		where	nr_sequencia	= c01_w.nr_sequencia;

	else --Se existe, atualiza qt e valor
		update	tiss_conta_proc
		set	qt_procedimento	= qt_procedimento + c01_w.qt_procedimento,
			vl_procedimento	= vl_procedimento + c01_w.vl_procedimento
		where	nr_sequencia	= nr_seq_tiss_proc_w;

		update	tiss_conta_partic --Vincula o participante ao novo registro
		set	nr_seq_proc		= nr_seq_tiss_proc_w
		where	nr_interno_conta	= nr_interno_conta_p
		and	nr_seq_proc		= c01_w.nr_sequencia;

		delete	from tiss_conta_proc
		where	nr_sequencia	= c01_w.nr_sequencia;

	end if;

	end;
end loop;
close C01;

if (ie_proc_zerado_spsadt_p in ('N','ZX','Q')) then

	if (ie_honor_zerado_w = 'N') then --Tratar questão do honorário, pois se é honorário e estiver parametrizado, pode emitir zerado.
		update	tiss_conta_proc
		set	ie_xml			= 'N'
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '4'
		and	vl_procedimento		= 0
		and	ie_proc_zerado_spsadt_p	= 'ZX';

		delete	from tiss_conta_proc
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '4'
		and	vl_procedimento		= 0
		and	ie_proc_zerado_spsadt_p	= 'N';
	else
		update	tiss_conta_proc
		set	ie_xml			= 'N'
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '4'
		and	vl_procedimento		= 0
		and	ie_honorario		= 'N' --excluir apenas se não for honorário
		and	ie_proc_zerado_spsadt_p	= 'ZX';

		delete	from tiss_conta_proc
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '4'
		and	vl_procedimento		= 0
		and	ie_honorario		= 'N' --excluir apenas se não for honorário
		and	ie_proc_zerado_spsadt_p	= 'N';

		delete	from tiss_conta_proc
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '4'
		and	qt_procedimento		= 0
		and	ie_honorario		= 'N' --excluir apenas se não for honorário
		and	ie_proc_zerado_spsadt_p	= 'Q';

	end if;
end if;

if (ie_proc_zerado_ri_p in ('N','G','ZX','Q','R')) then

	if (ie_honor_zerado_w = 'N') then --Tratar questão do honorário, pois se é honorário e estiver parametrizado, pode emitir zerado.
		update	tiss_conta_proc
		set	ie_xml			= 'N'
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '5'
		and	vl_procedimento		= 0
		and	ie_proc_zerado_ri_p	= 'ZX';

		delete	from tiss_conta_proc
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '5'
		and	vl_procedimento		= 0
		and	ie_proc_zerado_ri_p	in ('N','G');
	else

		update	tiss_conta_proc
		set	ie_xml			= 'N'
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '5'
		and	vl_procedimento		= 0
		and	ie_honorario		= 'N' --excluir apenas se não for honorário
		and	ie_proc_zerado_ri_p	= 'ZX';

		delete	from tiss_conta_proc
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '5'
		and	vl_procedimento		= 0
		and	ie_honorario		= 'N' --excluir apenas se não for honorário
		and	ie_proc_zerado_ri_p	in ('N','G');

		delete	from tiss_conta_proc
		where	nr_interno_conta	= nr_interno_conta_p
		and	ie_tiss_tipo_guia	= '5'
		and	qt_procedimento		= 0
		and	ie_honorario		= 'N' --excluir apenas se não for honorário
		and	ie_proc_zerado_ri_p	= 'Q';

		delete	from tiss_conta_proc
		where	nr_interno_conta		= nr_interno_conta_p
		and	ie_tiss_tipo_guia		= '5'
		and	qt_procedimento		= 0
		and	ie_honorario		= 'N' -- Excluir apenas se não for honorário
		and	ie_proc_zerado_ri_p	= 'R' -- Regra de geração de itens Zerados
		and 	ie_proc_zerado_spsadt_p	= 'Q';-- Quantidade zerada
	end if;
end if;

if (ie_forcar_agrup_partic_w = 'S') then --Exclui os participantes duplicados
	open C02;
	loop
	fetch C02 into
		nr_seq_proc_w,
		nr_seq_partic_w,
		nm_medico_executor_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin

		delete	from tiss_conta_partic
		where	nr_seq_proc		= nr_seq_proc_w
		and	nm_medico_executor	= nm_medico_executor_w
		and	nr_sequencia		<> nr_seq_partic_w
		and	nr_interno_conta	= nr_interno_conta_p;

		end;
	end loop;
	close C02;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_conta_proc_w (nr_interno_conta_p bigint, nm_usuario_p text, ie_proc_zerado_spsadt_p text, ie_proc_zerado_ri_p text) FROM PUBLIC;

