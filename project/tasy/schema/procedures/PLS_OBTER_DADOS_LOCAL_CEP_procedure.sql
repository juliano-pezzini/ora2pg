-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_dados_local_cep ( cd_cep_p bigint, ie_cep_internet_p text, nm_logradouro_p INOUT text, nm_localidade_p INOUT text, nm_bairro_p INOUT text, ds_uf_p INOUT text, cd_cep_retorno_p INOUT text, nr_seq_regiao_p INOUT text, cd_municipio_ibge_p INOUT text, cd_tipo_logradouro_p INOUT text ) AS $body$
DECLARE


/* ie_cep_internet_p = 'S' ou 'N'*/

nm_logradouro_w             varchar(500);
nm_localidade_w             varchar(500);
nm_bairro_w                 varchar(500);
ds_uf_w                     valor_dominio.vl_dominio%type;
cd_cep_retorno_w            varchar(500);
nr_seq_regiao_w             varchar(500);
cd_municipio_ibge_w         varchar(500);
ds_tipo_logradouro_w        varchar(2000);
cd_tipo_logradouro_w        varchar(500);


BEGIN

    if (ie_cep_internet_p = 'S') then

            select  a.nm_logradouro,
                    a.nm_localidade,
                    a.nm_bairro,
                    a.cd_unidade_federacao,
                    a.nr_logradouro,
                    null
            into STRICT    nm_logradouro_w,
                    nm_localidade_w,
                    nm_bairro_w,
                    ds_uf_w,
                    cd_cep_retorno_w,
                    nr_seq_regiao_w
            from    cep_logradouro a
            where   a.cd_logradouro = cd_cep_p;

    elsif (ie_cep_internet_p = 'N') then

            select  a.nm_logradouro,
                    b.nm_localidade,
                    c.ds_bairro,
                    a.ds_uf,
                    a.cd_cep,
                    c.nr_seq_regiao
            into STRICT    nm_logradouro_w,
                    nm_localidade_w,
                    nm_bairro_w,
                    ds_uf_w,
                    cd_cep_retorno_w,
                    nr_seq_regiao_w
            from    cep_loc b,
                    cep_bairro c,
                    cep_log a
            where   b.nr_sequencia      = c.nr_seq_loc
            and     a.cd_bairro_inicial = c.nr_sequencia
            and     b.nr_sequencia      = a.nr_seq_loc
            and     a.cd_cep            = cd_cep_p;

            if (coalesce(cd_cep_retorno_p::text, '') = '') then

                select  null log,
                        b.nm_localidade loc,
                        null bairro,
                        b.ds_uf uf,
                        b.cd_cep cep,
                        null reg
                into STRICT    nm_logradouro_w,
                        nm_localidade_w,
                        nm_bairro_w,
                        ds_uf_w,
                        cd_cep_retorno_w,
                        nr_seq_regiao_w
                from    cep_loc b
                where   b.cd_cep       = cd_cep_p;

            end if;

    end if;

    if (ie_cep_internet_p IS NOT NULL AND ie_cep_internet_p::text <> '') then

            select  max(cd_municipio_ibge) cd_municipio_ibge
            into STRICT    cd_municipio_ibge_w
            from (   SELECT  cd_municipio_ibge
                        from    cep_municipio
                        where   cd_cep = cd_cep_p

union

                        SELECT  cd_municipio_ibge
                        from    sus_cep
                        where   cd_cep = cd_cep_p   ) alias2;

            select  ds_tipo_logradouro
            into STRICT    ds_tipo_logradouro_w
            from    cep_logradouro_v
            where   cd_cep = cd_cep_p;

            select  cd_tipo_logradouro
            into STRICT    cd_tipo_logradouro_w
            from    sus_tipo_logradouro
            where   upper(ds_tipo_logradouro) = upper(ds_tipo_logradouro_w);

    end if;

    nm_logradouro_p         := '';
    nm_localidade_p         := '';
    nm_bairro_p             := '';
    ds_uf_p                 := '';
    cd_cep_retorno_p        := '';
    nr_seq_regiao_p         := '';
    cd_municipio_ibge_p     := '';
    cd_tipo_logradouro_p    := '';

    if (nm_logradouro_w IS NOT NULL AND nm_logradouro_w::text <> '') then
        nm_logradouro_p := nm_logradouro_w;
    end if;

    if (nm_localidade_w IS NOT NULL AND nm_localidade_w::text <> '') then
        nm_localidade_p := nm_localidade_w;
    end if;

    if (nm_bairro_w IS NOT NULL AND nm_bairro_w::text <> '') then
        nm_bairro_p := nm_bairro_w;
    end if;

    if (ds_uf_w IS NOT NULL AND ds_uf_w::text <> '') then
        ds_uf_p := ds_uf_w;
    end if;

    if (cd_cep_retorno_w IS NOT NULL AND cd_cep_retorno_w::text <> '') then
        cd_cep_retorno_p := cd_cep_retorno_w;
    end if;

    if (nr_seq_regiao_w IS NOT NULL AND nr_seq_regiao_w::text <> '') then
        nr_seq_regiao_p := nr_seq_regiao_w;
    end if;

    if (cd_municipio_ibge_w IS NOT NULL AND cd_municipio_ibge_w::text <> '') then
        cd_municipio_ibge_p := cd_municipio_ibge_w;
    end if;

    if (cd_tipo_logradouro_w IS NOT NULL AND cd_tipo_logradouro_w::text <> '') then
        cd_tipo_logradouro_p := cd_tipo_logradouro_w;
    end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_dados_local_cep ( cd_cep_p bigint, ie_cep_internet_p text, nm_logradouro_p INOUT text, nm_localidade_p INOUT text, nm_bairro_p INOUT text, ds_uf_p INOUT text, cd_cep_retorno_p INOUT text, nr_seq_regiao_p INOUT text, cd_municipio_ibge_p INOUT text, cd_tipo_logradouro_p INOUT text ) FROM PUBLIC;

