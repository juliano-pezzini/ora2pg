-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_int_nota_fiscal ( nr_seq_nota_fiscal_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE


					
ds_erro_w				varchar(2000);
cd_estab_int_w				w_int_nota_fiscal.cd_estabelecimento%type;
nr_nota_fiscal_int_w			w_int_nota_fiscal.nr_nota_fiscal%type;
cd_cnpj_int_w				w_int_nota_fiscal.cd_cnpj%type;
cd_cnpj_emitente_tasy_w			pessoa_juridica.cd_cgc%type;
cd_cnpj_tasy_w				pessoa_juridica.cd_cgc%type;
cd_pessoa_fisica_int_w			w_int_nota_fiscal.cd_pessoa_fisica%type;
cd_serie_nf_int_w				w_int_nota_fiscal.cd_serie_nf%type;
cd_operacao_nf_int_w			w_int_nota_fiscal.cd_operacao_nf%type;
cd_natureza_operacao_int_w			w_int_nota_fiscal.cd_natureza_operacao%type;
dt_emissao_int_w				w_int_nota_fiscal.dt_emissao%type;
dt_entrada_saida_int_w			w_int_nota_fiscal.dt_entrada_saida%type;
cd_condicao_pagamento_int_w		w_int_nota_fiscal.cd_condicao_pagamento%type;
qt_registros_w				bigint;
ie_status_w				varchar(15);
cd_estab_tasy_w				estabelecimento.cd_estabelecimento%type;
cd_operacao_nf_tasy_w			operacao_nota.cd_operacao_nf%type;
cd_natureza_operacao_tasy_w		natureza_operacao.cd_natureza_operacao%type;	
cd_condicao_pagamento_tasy_w		condicao_pagamento.cd_condicao_pagamento%type;
cd_material_int_w				w_int_nota_fiscal_item.cd_material%type;
cd_unidade_medida_compra_int_w		w_int_nota_fiscal_item.cd_unidade_medida_compra%type;
vl_unitario_item_nf_int_w			w_int_nota_fiscal_item.vl_unitario_item_nf%type;
qt_item_nf_int_w				w_int_nota_fiscal_item.qt_item_nf%type;
cd_local_estoque_int_w			w_int_nota_fiscal_item.cd_local_estoque%type;
cd_centro_custo_int_w			w_int_nota_fiscal_item.cd_centro_custo%type;
cd_setor_atendimento_int_w			w_int_nota_fiscal_item.cd_setor_atendimento%type;
cd_conta_contabil_int_w			w_int_nota_fiscal_item.cd_conta_contabil%type;
cd_marca_int_w				w_int_nota_fiscal_item.cd_marca%type;
pr_desconto_item_w			w_int_nota_fiscal_item.pr_desconto%type;
vl_descontos_item_w			w_int_nota_fiscal_item.vl_desconto%type;
vl_descontos_item_ww			nota_fiscal_item.vl_desconto%type;
vl_frete_item_w				w_int_nota_fiscal_item.vl_frete%type;
vl_seguro_item_w				w_int_nota_fiscal_item.vl_seguro%type;
vl_despesa_acessoria_item_w		w_int_nota_fiscal_item.vl_despesa_acessoria%type;
ds_observacao_item_w			w_int_nota_fiscal_item.ds_observacao%type;
cd_local_estoque_tasy_w			local_estoque.cd_local_estoque%type;
cd_centro_custo_tasy_w			centro_custo.cd_centro_custo%type;
cd_marca_tasy_w				marca.nr_sequencia%type;
cd_material_tasy_w				material.cd_material%type;
cd_unidade_medida_tasy_w			unidade_medida.cd_unidade_medida%type;
cd_conta_contabil_tasy_w			conta_contabil.cd_conta_contabil%type;
cd_setor_atendimento_tasy_w		setor_atendimento.cd_setor_atendimento%type;
ie_tipo_local_w				local_estoque.ie_tipo_local%type;
nr_sequencia_nova_nf_w			nota_fiscal.nr_sequencia%type;
vl_descontos_w				nota_fiscal.vl_descontos%type;
vl_frete_w				nota_fiscal.vl_frete%type;
vl_seguro_w				nota_fiscal.vl_seguro%type;
vl_despesa_acessoria_w			nota_fiscal.vl_despesa_acessoria%type;
ds_observacao_w				nota_fiscal.ds_observacao%type;
ie_tipo_nota_w				nota_fiscal.ie_tipo_nota%type;
ie_tipo_nota_ww				bigint;
nr_item_nf_w				nota_fiscal_item.nr_item_nf%type;
vl_total_item_nf_w				nota_fiscal_item.vl_total_item_nf%type;
cd_material_estoque_w			material.cd_material_estoque%type;
cd_unidade_medida_estoque_w		material.cd_unidade_medida_estoque%type;
qt_conv_compra_estoque_w			material.qt_conv_compra_estoque%type;
qt_item_estoque_w				nota_fiscal_item.qt_item_estoque%type;
vl_liquido_w				nota_fiscal_item.vl_liquido%type;
cd_pessoa_fisica_tasy_w			pessoa_fisica.cd_pessoa_fisica%type;
pr_desconto_item_ww			nota_fiscal_item.pr_desconto%type;
ds_complemento_item_w			nota_fiscal_item.ds_complemento%type;
ie_devolucao_w				operacao_nota.ie_devolucao%type;
ie_operacao_fiscal_w			operacao_nota.ie_operacao_fiscal%type;
ie_entrada_saida_w			natureza_operacao.ie_entrada_saida%type;
nr_seq_nota_fiscal_w			nota_fiscal.nr_sequencia%type;
nr_sequencia_ref_w			nota_fiscal.nr_sequencia_ref%type;
cd_barras_material_w			w_int_nota_fiscal_item.cd_barras_material%type;
cd_lote_fabricacao_w			w_int_nota_fiscal_item.cd_lote_fabricacao%type;
dt_validade_w				w_int_nota_fiscal_item.dt_validade%type;
nr_sequencia_w				nota_fiscal.nr_sequencia%type;
ie_validade_indeterminada_w		material_lote_fornec.ie_validade_indeterminada%type;
ie_tipo_conta_w				smallint;


c01 CURSOR FOR
SELECT	cd_material,
	cd_unidade_medida_compra,
	vl_unitario_item_nf,
	qt_item_nf,
	cd_local_estoque,
	cd_centro_custo,
	cd_setor_atendimento,
	cd_conta_contabil,
	cd_marca,
	vl_desconto,
	pr_desconto,
	coalesce(vl_frete,0),
	coalesce(vl_seguro,0),
	coalesce(vl_despesa_acessoria,0),
	ds_observacao,
	ds_complemento,
	cd_barras_material,
	cd_lote_fabricacao,
	dt_validade
from	w_int_nota_fiscal_item
where	nr_seq_int_nf = nr_seq_nota_fiscal_w;



BEGIN
ie_devolucao_w		:= 'N';
nr_seq_nota_fiscal_w	:= nr_seq_nota_fiscal_p;
nr_sequencia_ref_w	:= null;

if (coalesce(nr_seq_nota_fiscal_p,0)=0) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_nota_fiscal_w
	from	w_int_nota_fiscal;
end if;

ie_status_w	:= 'OK';

select	count(*)
into STRICT	qt_registros_w
from	w_int_nota_fiscal
where	nr_sequencia = nr_seq_nota_fiscal_w;

if (qt_registros_w > 0) then

	select	cd_estabelecimento,
		somente_numero(nr_nota_fiscal),
		cd_cnpj,
		cd_pessoa_fisica,
		cd_serie_nf,
		cd_operacao_nf,
		cd_natureza_operacao,
		dt_emissao,
		dt_entrada_saida,			
		cd_condicao_pagamento,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		ds_observacao
	into STRICT	cd_estab_int_w,
		nr_nota_fiscal_int_w,
		cd_cnpj_int_w,
		cd_pessoa_fisica_int_w,
		cd_serie_nf_int_w,
		cd_operacao_nf_int_w,
		cd_natureza_operacao_int_w,
		dt_emissao_int_w,
		dt_entrada_saida_int_w,
		cd_condicao_pagamento_int_w,
		vl_descontos_w,
		vl_frete_w,
		vl_seguro_w,
		vl_despesa_acessoria_w,
		ds_observacao_w
	from	w_int_nota_fiscal
	where	nr_sequencia = nr_seq_nota_fiscal_w;
else
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(446435,'NR_SEQUENCIA_W=' || nr_seq_nota_fiscal_p); /*Não existe nenhum registro na tabela de passos com o código #@NR_SEQUENCIA_W#@.*/
end if;

if (ie_status_w = 'OK') then
	select	count(*)
	into STRICT	qt_registros_w
	from	w_int_nota_fiscal_item
	where	nr_seq_int_nf = nr_seq_nota_fiscal_w;
	
	if (qt_registros_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(485197); /*Não foi importado nenhum item para esta nota fiscal.*/
	end if;	
end if;



/*ESTABELECIMENTO*/

if (ie_status_w = 'OK') and (coalesce(cd_estab_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(446436); /*Favor preencher o estabelecimento para a geração da nota fiscal.*/
	
end if;

if (ie_status_w = 'OK') and (cd_estab_int_w IS NOT NULL AND cd_estab_int_w::text <> '') then
	
	select	coalesce(somente_numero(bkf_obter_conv_interna('','ESTABELECIMENTO','CD_ESTABELECIMENTO',cd_estab_int_w,'BKF')),0)
	into STRICT	cd_estab_tasy_w
	;
	
	if (cd_estab_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(446441,'CD_ESTABELECIMENTO_W='||cd_estab_int_w); /*Não foi cadastrada a conversão para o estabelecimento código #@CD_ESTABELECIMENTO_W#@ que veio do sistema externo.*/
		
	else

		select	count(*)
		into STRICT	qt_registros_w
		from	estabelecimento
		where	cd_estabelecimento = cd_estab_tasy_w
		and	ie_situacao = 'A';
		
		if (qt_registros_w = 0) then
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(446447,'CD_ESTAB_TASY_W='|| cd_estab_tasy_w ||';CD_ESTABELECIMENTO_W='|| cd_estab_int_w);
					/*Não existe no Tasy o estabelecimento com código  #@CD_ESTAB_TASY_W#@.Verifique o cadastro de conversão para o código do estabelecimento #@CD_ESTABELECIMENTO_W#@ que veio do sistema externo.*/

		end if;	
	end if;	
end if;





/*NUMERO DA NOTA*/

if (ie_status_w = 'OK') and (coalesce(nr_nota_fiscal_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(446461); /*Não foi informado o número da nota fiscal.*/
end if;

if (ie_status_w = 'OK') and (length(nr_nota_fiscal_int_w) > 255) then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(446462); /*O número da nota não pode ser maior que 255 números.*/
end if;

if (ie_status_w = 'OK') and (length(nr_nota_fiscal_int_w)) <> (length(somente_numero(nr_nota_fiscal_int_w))) then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(446463); /*O número da nota fiscal não deve conter letras, caracteres especiais e espaços em branco.*/
end if;



/*PESSOA FISICA E JURIDICA*/

if (ie_status_w = 'OK') and (cd_cnpj_int_w IS NOT NULL AND cd_cnpj_int_w::text <> '') and (cd_pessoa_fisica_int_w IS NOT NULL AND cd_pessoa_fisica_int_w::text <> '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(446513); /*Favor informar um somente pessoa física ou jurídica.*/
end if;


if (ie_status_w = 'OK') and (coalesce(cd_cnpj_int_w::text, '') = '') and (coalesce(cd_pessoa_fisica_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(446514); /*Falta informar a pessoa física ou jurídica.*/
end if;




/*PESSOA JURIDICA*/

if (ie_status_w = 'OK') and (cd_cnpj_int_w IS NOT NULL AND cd_cnpj_int_w::text <> '') then
	
	select	count(*)
	into STRICT	qt_registros_w
	from	pessoa_juridica
	where	cd_sistema_ant = cd_cnpj_int_w
	and	ie_situacao = 'A';
	
	if (qt_registros_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(488913,'CD_CNPJ_W='||cd_cnpj_int_w); /*Não existe nenhuma pessoa jurídica ativa com o código do sistema externo #@CD_CNPJ_W#@.*/
	else
		select	max(cd_cgc)
		into STRICT	cd_cnpj_emitente_tasy_w
		from	pessoa_juridica
		where	cd_sistema_ant = cd_cnpj_int_w
		and	ie_situacao = 'A';
	end if;
end if;




/*PESSOA FISICA*/

if (ie_status_w = 'OK') and (cd_pessoa_fisica_int_w IS NOT NULL AND cd_pessoa_fisica_int_w::text <> '') then
	
	select	count(*)
	into STRICT	qt_registros_w
	from	pessoa_fisica
	where	nr_cpf = cd_pessoa_fisica_int_w;
	
	if (qt_registros_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(449240,'CD_CPF_W='||cd_pessoa_fisica_int_w); /*Não existe no Tasy uma pessoa física cadastrada com o CPF #@CD_CPF_W#@.*/
	
	else
	
		select	max(cd_pessoa_fisica)
		into STRICT	cd_pessoa_fisica_tasy_w
		from	pessoa_fisica
		where	nr_cpf = cd_pessoa_fisica_int_w;
		
	end if;	
end if;




/*SERIE*/

if (ie_status_w = 'OK') and (coalesce(cd_serie_nf_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(449241); /*Não foi informado a série da nota fiscal.*/
end if;




/*OPERACAO DA NOTA*/

if (ie_status_w = 'OK') and (coalesce(cd_operacao_nf_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(449242); /*Não foi informado a operação da nota.*/
end if;

if (ie_status_w = 'OK') and (cd_operacao_nf_int_w IS NOT NULL AND cd_operacao_nf_int_w::text <> '') then
	
	select	coalesce(somente_numero(bkf_obter_conv_interna('','OPERACAO_NOTA','CD_OPERACAO_NF',cd_operacao_nf_int_w,'BKF')),0)
	into STRICT	cd_operacao_nf_tasy_w
	;
	
	if (cd_operacao_nf_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(449243,'CD_OPERACAO_NF_W='||cd_operacao_nf_int_w); /*Não foi cadastrada a conversão para a operação da nota código #@CD_OPERACAO_NF_W#@ que veio do sistema externo.*/
		
	else

		select	count(*)
		into STRICT	qt_registros_w
		from	operacao_nota
		where	ie_situacao = 'A'
		and	cd_operacao_nf = CD_OPERACAO_NF_TASY_W;
		
		if (qt_registros_w = 0) then
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449244,'CD_OPERACAO_NF_TASY_W='|| CD_OPERACAO_NF_TASY_W ||';CD_OPERACAO_NF_INT_W='|| CD_OPERACAO_NF_INT_W);
					/*Não existe no Tasy a operação da nota COM O CÓDIGO #@CD_OPERACAO_NF_TASY_W#@. Verifique o cadastro de conversão para o código da operação #@CD_OPERACAO_NF_INT_W#@ que veio do sistema externo.*/

		else		
			select	coalesce(ie_devolucao,'N'),
				coalesce(ie_operacao_fiscal,'E')
			into STRICT	ie_devolucao_w,
				ie_operacao_fiscal_w
			from	operacao_nota
			where	cd_operacao_nf = CD_OPERACAO_NF_TASY_W;					
		end if;	
	end if;	
end if;




/*NATUREZA OPERACAO*/

if (ie_status_w = 'OK') and (coalesce(cd_natureza_operacao_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(449246); /*Não foi informado a natureza de operação da nota.*/
end if;

if (ie_status_w = 'OK') and (cd_natureza_operacao_int_w IS NOT NULL AND cd_natureza_operacao_int_w::text <> '') then
	
	select	coalesce(somente_numero(bkf_obter_conv_interna('','NATUREZA_OPERACAO','CD_NATUREZA_OPERACAO',CD_NATUREZA_OPERACAO_INT_W,'BKF')),0)
	into STRICT	cd_natureza_operacao_tasy_w
	;
	
	if (cd_natureza_operacao_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(449249,'CD_NATUREZA_OPERACAO_INT_W='||CD_NATUREZA_OPERACAO_INT_W);
				/*Não foi cadastrada a conversão para a natureza de operação da nota código #@CD_NATUREZA_OPERACAO_INT_W#@ que veio do sistema externo.*/

		
	else

		select	count(*)
		into STRICT	qt_registros_w
		from	natureza_operacao
		where	ie_situacao = 'A'
		and	cd_natureza_operacao = cd_natureza_operacao_tasy_w;
		
		if (qt_registros_w = 0) then
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449252,'CD_NATUREZA_OPERACAO_TASY_W='|| CD_NATUREZA_OPERACAO_TASY_W ||';CD_NATUREZA_OPERACAO_INT_W='|| CD_NATUREZA_OPERACAO_INT_W);
					/*Não existe no Tasy a natureza operação com o código #@CD_NATUREZA_OPERACAO_TASY_W#@. Verifique o cadastro de conversão para o código da natureza operação #@CD_NATUREZA_OPERACAO_INT_W#@ que veio do sistema externo.*/

		else
			select	coalesce(ie_entrada_saida,'E')
			into STRICT	ie_entrada_saida_w
			from	natureza_operacao
			where	cd_natureza_operacao = cd_natureza_operacao_tasy_w;
			
			if (ie_operacao_fiscal_w <> ie_entrada_saida_w) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_texto(479054); /*A operação fiscal da natureza é diferente da operação da nota. Se a natureza é de entrada a operação deve ser de entrada, e vice-versa.*/
			end if;
		end if;	
	end if;	
end if;





/*CONDICAO DE PAGAMENTO*/

if (ie_status_w = 'OK') and (coalesce(cd_condicao_pagamento_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(449251); /*Não foi informado a condição de pagamento da nota*/
end if;

if (ie_status_w = 'OK') and (cd_condicao_pagamento_int_w IS NOT NULL AND cd_condicao_pagamento_int_w::text <> '') then
	
	select	coalesce(somente_numero(bkf_obter_conv_interna('','CONDICAO_PAGAMENTO','CD_CONDICAO_PAGAMENTO',CD_CONDICAO_PAGAMENTO_INT_W,'BKF')),0)
	into STRICT	cd_condicao_pagamento_tasy_w
	;
	
	if (cd_condicao_pagamento_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(449254,'CD_CONDICAO_PAGAMENTO_INT_W='||CD_CONDICAO_PAGAMENTO_INT_W);
				/*Não foi cadastrada a conversão para a condição de pagamento código #@CD_CONDICAO_PAGAMENTO_INT_W#@ que veio do sistema externo.*/

		
	else

		select	count(*)
		into STRICT	qt_registros_w
		from	condicao_pagamento
		where	ie_situacao = 'A'
		and	cd_condicao_pagamento = CD_CONDICAO_PAGAMENTO_TASY_W;
		
		if (qt_registros_w = 0) then
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449255,'CD_CONDICAO_PAGAMENTO_TASY_W='|| CD_CONDICAO_PAGAMENTO_TASY_W ||';CD_CONDICAO_PAGAMENTO_INT_W='|| CD_CONDICAO_PAGAMENTO_INT_W);
					/*Não existe no Tasy a condição de pagamento com o código #@CD_CONDICAO_PAGAMENTO_TASY_W#@. Verifique o cadastro de conversão para o código da condição de pagamento #@CD_CONDICAO_PAGAMENTO_INT_W#@ que veio do sistema externo.*/

		end if;	
	end if;	
end if;


if (ie_status_w = 'OK') and (coalesce(dt_emissao_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(449256); /*Não foi informado a data de emissão da nota.*/
	
end if;


if (ie_status_w = 'OK') and (coalesce(dt_entrada_saida_int_w::text, '') = '') then
	
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(449257); /*Não foi informado a data de entrada/saída da nota.*/
	
end if;
	

	
if (ie_status_w = 'OK') and (dt_entrada_saida_int_w < dt_emissao_int_w) then

	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_texto(449258); /*A data de entrada/saída é menor que a data de emissão!*/
end if;

if (ie_status_w = 'OK') and (ie_entrada_saida_w = 'E') then
	
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	nota_fiscal
	where	cd_estabelecimento = cd_estab_tasy_w
	and	cd_cgc_emitente = cd_cnpj_emitente_tasy_w
	and	nr_nota_fiscal = nr_nota_fiscal_int_w
	and	ie_situacao = '1';
	
	if (nr_sequencia_w > 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_texto(485188,'NR_SEQUENCIA_W='||nr_sequencia_w);/*Já existe a nota fiscal (Seq: #@NR_SEQUENCIA_W#@) que está ativa, com mesmo número, mesmo emitente, para a mesma série e para o mesmo estabelecimento. Verifique!*/
	end if;
end if;





/*INSERT INTO NOVA NOTA*/

if (ie_status_w = 'OK') then

	select	nextval('nota_fiscal_seq')
	into STRICT	nr_sequencia_nova_nf_w
	;
	
	if (ie_entrada_saida_w = 'E') then
		begin
		if (cd_pessoa_fisica_tasy_w IS NOT NULL AND cd_pessoa_fisica_tasy_w::text <> '') then
			ie_tipo_nota_w 	:= 'EF';
			ie_tipo_nota_ww	:= '2';
		else
			ie_tipo_nota_w	:= 'EN';
			ie_tipo_nota_ww	:= '0';
			cd_cnpj_tasy_w	:= cd_cnpj_emitente_tasy_w;
		end if;
		
		end;
	elsif (ie_entrada_saida_w = 'S') then
		begin
		cd_cnpj_tasy_w	:= cd_cnpj_emitente_tasy_w;
		
		select	cd_cgc
		into STRICT	cd_cnpj_emitente_tasy_w
		from	estabelecimento
		where	cd_estabelecimento = cd_estab_tasy_w;
		
		if (cd_pessoa_fisica_tasy_w IS NOT NULL AND cd_pessoa_fisica_tasy_w::text <> '') then
			ie_tipo_nota_w 	:= 'SF';
			ie_tipo_nota_ww	:= '4';			
		else
			ie_tipo_nota_w := 'SD';
			ie_tipo_nota_ww	:= '1';
		end if;
		
		select	cd_cgc
		into STRICT	cd_cnpj_emitente_tasy_w
		from	estabelecimento
		where	cd_estabelecimento = cd_estab_tasy_w;
		
		select	max(nr_sequencia)
		into STRICT	nr_sequencia_ref_w
		from	nota_fiscal
		where	ie_sistema_origem = 'INT_PHILIPS'
		and	nr_nota_fiscal = nr_nota_fiscal_int_w
		and	cd_cgc_emitente = cd_cnpj_tasy_w
		and	ie_tipo_nota in ('EN','EF');

		select	nr_ultima_nf + 1
		into STRICT	nr_nota_fiscal_int_w
		from	serie_nota_fiscal
		where	cd_serie_nf 			= cd_serie_nf_int_w
		and	cd_estabelecimento 		= cd_estab_tasy_w;		
		end;
	end if;
	
	insert into nota_fiscal(
		nr_sequencia,
		nr_nota_fiscal,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_cgc,
		cd_pessoa_fisica,
		cd_serie_nf,
		nr_sequencia_nf,
		cd_operacao_nf,
		cd_natureza_operacao,
		cd_condicao_pagamento,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		ds_observacao,		
		ie_situacao,
		ie_tipo_nota,
		ie_sistema_origem,
		nr_sequencia_ref)
	values (	nr_sequencia_nova_nf_w,
		nr_nota_fiscal_int_w,
		cd_estab_tasy_w,
		cd_cnpj_emitente_tasy_w,
		cd_cnpj_tasy_w,
		cd_pessoa_fisica_tasy_w,
		cd_serie_nf_int_w,
		1,
		cd_operacao_nf_tasy_w,
		cd_natureza_operacao_tasy_w,
		cd_condicao_pagamento_tasy_w,
		dt_emissao_int_w,
		dt_entrada_saida_int_w,
		'1',
		'0',
		'0',
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		coalesce(vl_descontos_w,0),
		coalesce(vl_frete_w,0),
		coalesce(vl_seguro_w,0),
		coalesce(vl_despesa_acessoria_w,0),
		ds_observacao_w,		
		'1',
		ie_tipo_nota_w,
		'INT_PHILIPS',
		nr_sequencia_ref_w);
end if;





/*CONSISTENCIAS DO ITEM*/

if (ie_status_w = 'OK') then


	open C01;
	loop
	fetch C01 into	
		cd_material_int_w,
		cd_unidade_medida_compra_int_w,
		vl_unitario_item_nf_int_w,
		qt_item_nf_int_w,
		cd_local_estoque_int_w,
		cd_centro_custo_int_w,
		cd_setor_atendimento_int_w,
		cd_conta_contabil_int_w,
		cd_marca_int_w,
		vl_descontos_item_w,
		pr_desconto_item_w,
		vl_frete_item_w,
		vl_seguro_item_w,
		vl_despesa_acessoria_item_w,
		ds_observacao_item_w,
		ds_complemento_item_w,
		cd_barras_material_w,
		cd_lote_fabricacao_w,
		dt_validade_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		
		cd_local_estoque_tasy_w	:= null;
		cd_centro_custo_tasy_w	:= null;
		CD_MARCA_TASY_W		:= null;
		cd_material_tasy_w	:= null;
		vl_descontos_item_ww	:= 0;
		pr_desconto_item_ww	:= 0;
		cd_unidade_medida_tasy_w:= null;
		
		/*MATERIAL*/

		if (ie_status_w = 'OK') and (coalesce(cd_material_int_w::text, '') = '') then
			
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449315); /*Não foi informado o código do material da nota fiscal*/
		end if;

		if (ie_status_w = 'OK') and (cd_material_int_w IS NOT NULL AND cd_material_int_w::text <> '') then
			
			select	coalesce(max(cd_material),0)
			into STRICT	cd_material_tasy_w
			from	material
			where	cd_sistema_ant = cd_material_int_w
			and	ie_situacao = 'A';
			
			if (cd_material_tasy_w = 0) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_Texto(449328,'CD_MATERIAL_INT_W='||CD_MATERIAL_INT_W);
						/*Não existe no sistema um material cujo o código do sistema externo seja #@CD_MATERIAL_INT_W#@.*/

						
			else
			
				select	cd_material_estoque,
					cd_unidade_medida_estoque,
					qt_conv_compra_estoque
				into STRICT	cd_material_estoque_w,
					cd_unidade_medida_estoque_w,
					qt_conv_compra_estoque_w
				from	material
				where	cd_material = cd_material_tasy_w;
			
			end if;	
		end if;
		
		
		
				


		/*UNIDADE DE MEDIDA*/

		if (ie_status_w = 'OK') and (coalesce(cd_unidade_medida_compra_int_w::text, '') = '') then
			
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449335,'CD_MATERIAL_INT_W='||CD_MATERIAL_INT_W);  /*Não foi informado a unidade de medida para o material #@CD_MATERIAL_INT_W#@.*/
		end if;

		if (ie_status_w = 'OK') and (cd_unidade_medida_compra_int_w IS NOT NULL AND cd_unidade_medida_compra_int_w::text <> '') then
			
			select	count(*)
			into STRICT	qt_registros_w
			from	unidade_medida
			where	CD_SISTEMA_ANT = cd_unidade_medida_compra_int_w
			and	ie_situacao = 'A';
			

			if (qt_registros_w = 0) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_texto(482479,'CD_UNIDADE_W='||cd_unidade_medida_compra_int_w); /*Não existe no Tasy nenhuma unidade de medida ativa com o código do sistema anterior #@CD_UNIDADE_W#@.*/
			else
				select	max(cd_unidade_medida)
				into STRICT	cd_unidade_medida_tasy_w
				from	unidade_medida
				where	CD_SISTEMA_ANT = cd_unidade_medida_compra_int_w
				and	ie_situacao = 'A';		
			end if;
		else
			if (ie_status_w = 'OK') and (coalesce(cd_unidade_medida_compra_int_w::text, '') = '') then	
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_texto(458548,'DS_CAMPO='||'CD_UNIDADE_MEDIDA_CONSUMO'); /*Não foi informado o campo #@DS_CAMPO#@. Esse campo é necessário para o cadastro do material.*/
			end if;		
		end if;
		
		
		
		
		
		
		/*VALOR UNITARIO*/

		if (ie_status_w = 'OK') and (coalesce(vl_unitario_item_nf_int_w,0) = 0) then
			
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449338,'CD_MATERIAL_INT_W='||CD_MATERIAL_INT_W);  /*O valor unitário do material #@CD_MATERIAL_INT_W#@ deve ser maior que zero.*/
		end if;
		
		
		
		
		/*QUANTIDADE*/

		if (ie_status_w = 'OK') and (coalesce(qt_item_nf_int_w,0) = 0) then
			
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449339,'CD_MATERIAL_INT_W='||CD_MATERIAL_INT_W);  /*A quantidade do material #@CD_MATERIAL_INT_W#@ deve ser maior que zero.*/
		end if;

		
		
		
		/*LOCAL DE ESTOQUE E CENTRO DE CUSTO VAZIO*/

		if (ie_status_w = 'OK') and (coalesce(cd_local_estoque_int_w::text, '') = '') and (coalesce(cd_centro_custo_int_w::text, '') = '') then
			
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449345,'CD_MATERIAL_INT_W='||CD_MATERIAL_INT_W);  /*Deve ser informado o local de estoque ou centro de custo para o material #@CD_MATERIAL_INT_W#@.*/
		end if;

		
		
		
		
		/*LOCAL ESTOQUE*/

		if (ie_status_w = 'OK') and (cd_local_estoque_int_w IS NOT NULL AND cd_local_estoque_int_w::text <> '') then
			
			select	coalesce(somente_numero(bkf_obter_conv_interna('','LOCAL_ESTOQUE','CD_LOCAL_ESTOQUE',cd_local_estoque_int_w,'BKF')),0)
			into STRICT	cd_local_estoque_tasy_w
			;
			
			if (cd_local_estoque_tasy_w = 0) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_Texto(449346,'CD_LOCAL_ESTOQUE_INT_W='||cd_local_estoque_int_w);
						/*Não foi cadastrada a conversão para o local de estoque código #@CD_LOCAL_ESTOQUE_INT_W#@ que veio do sistema externo.*/

				
			else

				select	count(*)
				into STRICT	qt_registros_w
				from	local_estoque
				where	ie_situacao = 'A'
				and	cd_estabelecimento = cd_estab_tasy_w
				and	cd_local_estoque = cd_local_estoque_tasy_w;
				
				if (qt_registros_w = 0) then
					ie_status_w	:= 'E';
					ds_erro_w	:= wheb_mensagem_pck.get_texto(449347,'CD_LOCAL_ESTOQUE_TASY_W='|| cd_local_estoque_tasy_w ||';CD_LOCAL_ESTOQUE_INT_W='|| CD_LOCAL_ESTOQUE_INT_W);
							/*Não existe no Tasy o local de estoque com o código #@CD_LOCAL_ESTOQUE_TASY_W#@. Verifique o cadastro de conversão para o código do local de estoque #@CD_LOCAL_ESTOQUE_INT_W#@ que veio do sistema externo.*/


							/*Verifique também se o local de estoque é do mesmo estabelecimento da nota fiscal.*/

				end if;	
			end if;	
		end if;
		
		
		
		
		
		/*CENTRO CUSTO*/

		if (ie_status_w = 'OK') and (cd_centro_custo_int_w IS NOT NULL AND cd_centro_custo_int_w::text <> '') then
			
			select	count(*)
			into STRICT	qt_registros_w
			from	centro_custo
			where	ie_situacao = 'A'
			and	cd_estabelecimento = cd_estab_tasy_w
			and	CD_SISTEMA_CONTABIL = cd_centro_custo_int_w;
			
			if (qt_registros_w = 0) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_texto(482179,'CD_CENTRO_W='||cd_centro_custo_int_w); /*Não existe no Tasy nenhum centro de custo ativo no estabelecimento, com o código do sistema anterior #@CD_CENTRO_W#@*/
			else

				select	max(cd_centro_custo)
				into STRICT	cd_centro_custo_tasy_w
				from	centro_custo
				where	ie_situacao = 'A'
				and	cd_estabelecimento = cd_estab_tasy_w
				and	CD_SISTEMA_CONTABIL = cd_centro_custo_int_w;
			end if;	
		end if;

		
		
		
		
		/*LOCAL DO TIPO DIRETO*/

		if (ie_status_w = 'OK') and (cd_centro_custo_tasy_w > 0) and (cd_local_estoque_tasy_w > 0) then
			
			select	ie_tipo_local
			into STRICT	ie_tipo_local_w
			from	local_estoque
			where	cd_local_estoque = cd_local_estoque_tasy_w;
			
			
			if (ie_tipo_local_w <> 8) then
				
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_texto(449354,'CD_MATERIAL_INT_W='||CD_MATERIAL_INT_W);
						/*No material #@CD_MATERIAL_INT_W#@ está informado centro de custo e local de estoque. Para esse caso, o local de estoque tem que ser do tipo Direto.*/

			
			end if;			
		end if;
			
			
		
		
		
		
		/*SETOR ATENDIMENTO*/

		if (ie_status_w = 'OK') and (cd_setor_atendimento_int_w IS NOT NULL AND cd_setor_atendimento_int_w::text <> '') then
			
			select	coalesce(somente_numero(bkf_obter_conv_interna('','SETOR_ATENDIMENTO','CD_SETOR_ATENDIMENTO',CD_SETOR_ATENDIMENTO_INT_W,'BKF')),0)
			into STRICT	CD_SETOR_ATENDIMENTO_TASY_W
			;
			
			if (cd_setor_atendimento_tasy_w = 0) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_Texto(449368,'CD_SETOR_ATENDIMENTO_INT_W='||CD_SETOR_ATENDIMENTO_INT_W);
						/*Não foi cadastrada a conversão para o setor de atendimento o código #@CD_SETOR_ATENDIMENTO_INT_W#@ que veio do sistema externo.*/

				
			else

				select	count(*)
				into STRICT	qt_registros_w
				from	setor_atendimento
				where	ie_situacao = 'A'
				and	cd_estabelecimento_base = cd_estab_tasy_w
				and	cd_setor_atendimento = cd_setor_atendimento_tasy_w;
				
				if (qt_registros_w = 0) then
					ie_status_w	:= 'E';
					ds_erro_w	:= wheb_mensagem_pck.get_texto(449369,'CD_SETOR_ATENDIMENTO_TASY_W='|| CD_SETOR_ATENDIMENTO_TASY_W ||';CD_SETOR_ATENDIMENTO_INT_W='|| CD_SETOR_ATENDIMENTO_INT_W);
							/*Não existe no Tasy o setor de atendimento com o código #@CD_SETOR_ATENDIMENTO_TASY_W#@. Verifique o cadastro de conversão para o código do setor de atendimento #@CD_SETOR_ATENDIMENTO_INT_W#@ que veio do sistema externo.
							/*Verifique também se o setor atendimento é do mesmo estabelecimento da nota fiscal.*/

				end if;	
			end if;	
		end if;
		

		
		
		
		/*CONTA CONTABIL*/

		if (ie_status_w = 'OK') and (cd_conta_contabil_int_w IS NOT NULL AND cd_conta_contabil_int_w::text <> '') then
			
			select	coalesce(somente_numero(bkf_obter_conv_interna('','CONTA_CONTABIL','CD_CONTA_CONTABIL',CD_CONTA_CONTABIL_INT_W,'BKF')),'0')
			into STRICT	CD_CONTA_CONTABIL_TASY_W
			;
			
			if (CD_CONTA_CONTABIL_TASY_W = '0') then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_Texto(449370,'CD_CONTA_CONTABIL_INT_W='||CD_CONTA_CONTABIL_INT_W);
						/*Não foi cadastrada a conversão para a conta contábil o código #@CD_CONTA_CONTABIL_INT_W#@ que veio do sistema externo.*/

				
			else

				select	count(*)
				into STRICT	qt_registros_w
				from	conta_contabil
				where	ie_situacao = 'A'
				and	cd_conta_contabil = CD_CONTA_CONTABIL_TASY_W;
				
				if (qt_registros_w = 0) then
					ie_status_w	:= 'E';
					ds_erro_w	:= wheb_mensagem_pck.get_texto(449371,'CD_CONTA_CONTABIL_TASY_W='|| CD_CONTA_CONTABIL_TASY_W ||';CD_CONTA_CONTABIL_INT_W='|| CD_CONTA_CONTABIL_INT_W);
							/*Não existe no Tasy o setor de atendimento com o código #@CD_CONTA_CONTABIL_TASY_W#@. Verifique o cadastro de conversão para o código do setor de atendimento #@CD_CONTA_CONTABIL_INT_W#@ que veio do sistema externo.
							/*Verifique também se o setor atendimento é do mesmo estabelecimento da nota fiscal.*/

				end if;	
			end if;	
		end if;
		
		

		
		/*MARCA*/

		if (ie_status_w = 'OK') and (cd_marca_int_w IS NOT NULL AND cd_marca_int_w::text <> '') then
			

			select	count(*)
			into STRICT	qt_registros_w
			from	marca
			where	cd_sistema_ant = cd_marca_int_w
			and	ie_situacao = 'A';
			
			if (qt_registros_w = 0) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_texto(481879,'NR_SEQ_MARCA_W='||cd_marca_int_w); /*Não existe nenhuma marca ativa cadastrada com o código do sistema externo #@NR_SEQ_MARCA_W#@*/
			else
				select	max(nr_sequencia)
				into STRICT	cd_marca_TASY_w
				from	marca
				where	cd_sistema_ant = cd_marca_int_w
				and	ie_situacao = 'A';
			end if;
		end if;
		
		
		
		
		if (ie_status_w = 'OK') and (CD_MARCA_TASY_W > 0) and (cd_material_tasy_w > 0) then
			
			
			select	count(*)
			into STRICT	qt_registros_w
			from	material_marca
			where	cd_material = CD_MATERIAL_TASY_W
			and	nr_sequencia = CD_MARCA_TASY_W;
			
			if (qt_registros_w = 0) then
				ie_status_w	:= 'E';
				ds_erro_w	:= wheb_mensagem_pck.get_texto(449375,'CD_MARCA_INT_W='|| CD_MARCA_INT_W ||';CD_MARCA_TASY_W='|| CD_MARCA_TASY_W);
						/*A marca #@CD_MARCA_TASY_W#@ não está vinculada com o material #@CD_MATERIAL_TASY_W#@. Verifique a pasta Marca no Cadastro de Materiais.*/

			
			end if;
		end if;

		if (coalesce(cd_conta_contabil_tasy_w::text, '') = '') then
			
			ie_tipo_conta_w	:= 3;
			
			if (coalesce(cd_centro_custo_tasy_w::text, '') = '') then
				ie_tipo_conta_w	:= 2;
			end if;

			SELECT * FROM define_conta_material(
				cd_estab_tasy_w, cd_material_tasy_w, ie_tipo_conta_w, 0, 0, 0, 0, 0, 0, 0, cd_local_estoque_tasy_w, cd_operacao_nf_tasy_w, trunc(clock_timestamp()), CD_CONTA_CONTABIL_TASY_W, cd_centro_custo_tasy_w, null) INTO STRICT CD_CONTA_CONTABIL_TASY_W, cd_centro_custo_tasy_w;		
		end if;




		/*INSERT INTO NOS ITENS DA NOTA*/

		if (ie_status_w = 'OK') and (nr_sequencia_nova_nf_w > 0) then
		
		
			select	coalesce(max(nr_item_nf),0) +1
			into STRICT	nr_item_nf_w
			from	nota_fiscal_item
			where	nr_sequencia = nr_sequencia_nova_nf_w;
			
			
			
			vl_total_item_nf_w	:= qt_item_nf_int_w * vl_unitario_item_nf_int_w;			
			
			
			
			
			if (pr_desconto_item_w > 0) then
			
				vl_descontos_item_ww		:= dividir((pr_desconto_item_w * vl_total_item_nf_w), 100);
				pr_desconto_item_ww		:= pr_desconto_item_w;
			
			elsif (vl_descontos_item_w > 0) then
				
				pr_desconto_item_ww		:= dividir((vl_descontos_item_w * 100), vl_total_item_nf_w);
				vl_descontos_item_ww		:= vl_descontos_item_w;
			
			end if;
			
			
			
			
			qt_item_estoque_w	:= qt_item_nf_int_w * coalesce(qt_conv_compra_estoque_w,0);
			vl_liquido_w		:= vl_total_item_nf_w - vl_descontos_item_ww;
			
			ie_validade_indeterminada_w := 'N';
			if (cd_lote_fabricacao_w IS NOT NULL AND cd_lote_fabricacao_w::text <> '') and (coalesce(dt_validade_w::text, '') = '') then
				ie_validade_indeterminada_w := 'S';
			end if;


			insert into nota_fiscal_item(
				nr_sequencia,
				cd_estabelecimento,
				cd_cgc_emitente,
				cd_serie_nf,
				nr_sequencia_nf,
				nr_item_nf,
				cd_natureza_operacao,
				qt_item_nf,
				vl_unitario_item_nf,
				vl_total_item_nf,
				dt_atualizacao,
				nm_usuario,
				cd_material,
				cd_setor_atendimento,
				cd_local_estoque,
				cd_centro_custo,
				cd_conta_contabil,
				cd_material_estoque,
				cd_unidade_medida_compra,
				cd_unidade_medida_estoque,
				ds_observacao,
				ds_complemento,
				qt_item_estoque,
				vl_frete,
				vl_desconto,
				vl_despesa_acessoria,
				vl_seguro,
				vl_desconto_rateio,
				vl_liquido,
				pr_desconto,
				nr_nota_fiscal,
				nr_seq_marca,
				cd_barra_material,
				cd_lote_fabricacao,
				dt_validade,
				ie_indeterminado,
				cd_sequencia_parametro)
			values (	nr_sequencia_nova_nf_w,
				cd_estab_tasy_w,
				cd_cnpj_emitente_tasy_w,
				cd_serie_nf_int_w,
				1,
				nr_item_nf_w,
				cd_natureza_operacao_tasy_w,
				qt_item_nf_int_w,
				vl_unitario_item_nf_int_w,
				vl_total_item_nf_w,
				clock_timestamp(),
				nm_usuario_p,
				cd_material_tasy_w,
				cd_setor_atendimento_tasy_w,
				cd_local_estoque_tasy_w,
				cd_centro_custo_tasy_w,
				cd_conta_contabil_tasy_w,
				cd_material_estoque_w,
				cd_unidade_medida_tasy_w,
				cd_unidade_medida_estoque_w,
				ds_observacao_item_w,
				ds_complemento_item_w,
				qt_item_estoque_w,
				vl_frete_item_w,
				vl_descontos_item_ww,
				vl_despesa_acessoria_item_w,
				vl_seguro_item_w,
				0,
				vl_liquido_w,
				pr_desconto_item_ww,
				nr_nota_fiscal_int_w,
				cd_marca_TASY_w,
				cd_barras_material_w,
				cd_lote_fabricacao_w,
				dt_validade_w,
				ie_validade_indeterminada_w,
				philips_contabil_pck.get_parametro_conta_contabil);
		end if;

		end;
	end loop;
	close C01;
end if;


if (ie_status_w = 'OK') then
	commit;
else
	rollback;
end if;

if (ie_status_w = 'OK') and (nr_sequencia_nova_nf_w > 0) then
	

	CALL atualiza_total_nota_fiscal(nr_sequencia_nova_nf_w, nm_usuario_p);
	CALL gerar_vencimento_nota_fiscal(nr_sequencia_nova_nf_w, nm_usuario_p);

	if (ie_entrada_saida_w = 'E') then
		CALL gerar_lote_fornec_nf(nr_sequencia_nova_nf_w,'S',nm_usuario_p,'S');
	end if;	

	CALL atualizar_nota_fiscal(nr_sequencia_nova_nf_w, 'I', nm_usuario_p, ie_tipo_nota_ww);	
	
elsif (ie_status_w = 'E') and (nr_sequencia_nova_nf_w > 0) then

	delete from nota_fiscal
	where nr_sequencia = nr_sequencia_nova_nf_w;
end if;

delete from w_int_nota_fiscal
where nr_sequencia = nr_seq_nota_fiscal_w;
commit;
	
ie_status_p	:= ie_status_w;
ds_erro_p	:= ds_erro_w;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_int_nota_fiscal ( nr_seq_nota_fiscal_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

