-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE agenda_paciente_atribfocuslost ( cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_agenda_p timestamp, dt_nascimento_p timestamp, cd_convenio_p bigint, cd_plano_p text, cd_categoria_p text, cd_usuario_conv_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, qt_idade_paciente_p INOUT text, qt_convenio_doc_p INOUT bigint, cd_setor_atendimento_p INOUT bigint, ie_se_conv_doc_lib_p INOUT text, ie_se_perm_pf_classif_p INOUT text, cd_plano_padrao_p INOUT text, nr_digitos_codigo_p INOUT text, ds_rotina_digito_p INOUT text, cd_plano_cod_usu_conv_p INOUT text, ds_plano_p INOUT text, cd_medico_regra_p INOUT text, ds_msg_p INOUT text, hr_inicio_p timestamp default null) AS $body$
DECLARE


qt_idade_paciente_w	varchar(3)	:= '';
qt_conv_doc_w		bigint	:= 0;
qt_conv_doc_atend_w	bigint	:= 0;
qt_convenio_doc_w	bigint	:= 0;
qt_conv_plano_w		bigint	:= 0;
ie_se_conv_doc_lib_w	varchar(1);
ie_se_perm_pf_classif_w	varchar(80);
cd_plano_padrao_w	varchar(10);
nr_digitos_codigo_w	varchar(15);
ds_rotina_digito_w		varchar(50);
cd_plano_cod_usu_conv_w	varchar(10);
ds_plano_w		varchar(80);
cd_medico_regra_w	varchar(10);
cd_setor_atend_w		integer	:= 0;
ds_msg_w		varchar(255);


BEGIN
if (cd_convenio_p > 0) and (cd_usuario_conv_p IS NOT NULL AND cd_usuario_conv_p::text <> '') then
	select	substr(consiste_carteira_usuario(cd_convenio_p, cd_usuario_conv_p), 1, 255)
	into STRICT	ds_msg_w
	;	
end if;

if (dt_nascimento_p IS NOT NULL AND dt_nascimento_p::text <> '') then
	qt_idade_paciente_w	:= substr(obter_idade(dt_nascimento_p, clock_timestamp(), 'A'),1,3);
end if;

if (cd_convenio_p > 0) then
	begin
	select	count(*)
	into STRICT	qt_conv_doc_w
	from	convenio_documento
	where	cd_convenio = cd_convenio_p;

	select	count(*)
	into STRICT	qt_conv_doc_atend_w
	from	convenio_doc_atend
	where	cd_convenio = cd_convenio_p;

	qt_convenio_doc_w	:= qt_conv_doc_w + qt_conv_doc_atend_w;	
	ie_se_conv_doc_lib_w	:= substr(Obter_Se_Conv_Doc_Lib(cd_convenio_p,null,null, cd_plano_p),1,1);
	cd_plano_cod_usu_conv_w	:= substr(obter_plano_cod_usuario_conv(cd_convenio_p, cd_usuario_conv_p),1,10);

	if (cd_categoria_p IS NOT NULL AND cd_categoria_p::text <> '') then
		select	max(cd_plano_padrao)
		into STRICT	cd_plano_padrao_w
		from	categoria_convenio
		where	cd_convenio	= cd_convenio_p
		and	cd_categoria	= cd_categoria_p;
	end if;

	select	nr_digitos_codigo,
		ds_rotina_digito
	into STRICT	nr_digitos_codigo_w,
		ds_rotina_digito_w
	from 	convenio
	where	cd_convenio = cd_convenio_p;

	select	count(*)	
	into STRICT	qt_conv_plano_w
	from	convenio_plano
	where	cd_convenio	= cd_convenio_p
	and	cd_plano	= cd_plano_p;

	if (qt_conv_plano_w > 0) then
		select	ds_plano
		into STRICT	ds_plano_w
		from	convenio_plano
		where	cd_convenio	= cd_convenio_p
		and	cd_plano	= cd_plano_p;
	end if;
	end;
end if;

if (cd_agenda_p > 0) then
	begin
	if (cd_pessoa_fisica_p IS NOT NULL AND cd_pessoa_fisica_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') then
		ie_se_perm_pf_classif_w	:= substr(Obter_Se_Perm_PF_Classif(820, cd_agenda_p, cd_pessoa_fisica_p, coalesce(hr_inicio_p,dt_agenda_p), 'DS'),1,255);
	end if;

	if	((cd_procedimento_p > 0) or (nr_seq_proc_interno_p > 0)) and (ie_origem_proced_p > 0) then
		cd_medico_regra_w	:= substr(obter_medico_por_exame_regra(cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p, cd_agenda_p, dt_agenda_p),1,255);
	end if;
	if (cd_procedimento_p > 0) and (ie_origem_proced_p >0) then
		begin
		select	max(cd_setor_exclusivo)
		into STRICT	cd_setor_atend_w
		from	procedimento
		where	cd_procedimento = cd_procedimento_p
		and	ie_origem_proced = ie_origem_proced_p;
		end;
	end if;
	end;
end if;

qt_idade_paciente_p	:= qt_idade_paciente_w;
qt_convenio_doc_p		:= qt_convenio_doc_w;
ie_se_conv_doc_lib_p	:= ie_se_conv_doc_lib_w;
ie_se_perm_pf_classif_p	:= ie_se_perm_pf_classif_w;
cd_plano_padrao_p		:= cd_plano_padrao_w;
nr_digitos_codigo_p		:= nr_digitos_codigo_w;
ds_rotina_digito_p		:= ds_rotina_digito_w;
cd_plano_cod_usu_conv_p	:= cd_plano_cod_usu_conv_w;
ds_plano_p		:= ds_plano_w;
cd_medico_regra_p		:= cd_medico_regra_w;
cd_setor_atendimento_p	:= cd_setor_atend_w;
ds_msg_p		:= ds_msg_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE agenda_paciente_atribfocuslost ( cd_agenda_p bigint, cd_pessoa_fisica_p text, dt_agenda_p timestamp, dt_nascimento_p timestamp, cd_convenio_p bigint, cd_plano_p text, cd_categoria_p text, cd_usuario_conv_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, qt_idade_paciente_p INOUT text, qt_convenio_doc_p INOUT bigint, cd_setor_atendimento_p INOUT bigint, ie_se_conv_doc_lib_p INOUT text, ie_se_perm_pf_classif_p INOUT text, cd_plano_padrao_p INOUT text, nr_digitos_codigo_p INOUT text, ds_rotina_digito_p INOUT text, cd_plano_cod_usu_conv_p INOUT text, ds_plano_p INOUT text, cd_medico_regra_p INOUT text, ds_msg_p INOUT text, hr_inicio_p timestamp default null) FROM PUBLIC;

