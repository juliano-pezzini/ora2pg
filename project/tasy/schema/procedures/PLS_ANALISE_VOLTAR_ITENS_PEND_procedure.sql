-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_analise_voltar_itens_pend ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_grupo_atual_p pls_grupo_auditor.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


tb_seq_w			pls_util_cta_pck.t_number_table;
tb_seq_ocorrencia_benef_w	pls_util_cta_pck.t_number_table;
tb_seq_glosa_w			pls_util_cta_pck.t_number_table;
ie_ocorrencia_w			pls_controle_estab.ie_ocorrencia%type := 'N';

nr_idx_ocor_benef_w		integer;
nr_idx_seq_glosa_w		integer;



c_proc CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		ie_ocorrencia_pc	pls_controle_estab.ie_ocorrencia%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	b.nr_sequencia	nr_seq_conta_proc
	from	pls_conta_proc b
	where	b.nr_seq_conta	= nr_seq_conta_pc
	and	b.ie_status_pagamento	in ('P','L','I')
	and	exists (SELECT	1
			from	pls_conta_glosa 	x,
				tiss_motivo_glosa	y
			where	x.nr_seq_conta_proc	= b.nr_sequencia
			and	x.ie_situacao		= 'A'
			and	y.nr_sequencia		= x.nr_seq_motivo_glosa
			and	y.cd_motivo_tiss 	not in ('1705','1706','1707','9919')
			and	not exists (select	1
						 from	pls_ocorrencia oc
						 where	oc.nr_seq_motivo_glosa 	= x.nr_seq_motivo_glosa
						 and	oc.ie_glosar_pagamento	= 'N'
						 and	ie_ocorrencia_pc = 'S'
						 and	oc.cd_estabelecimento = cd_estabelecimento_pc
						
union all

						 select	1
						 from	pls_ocorrencia oc
						 where	oc.nr_seq_motivo_glosa 	= x.nr_seq_motivo_glosa
						 and	oc.ie_glosar_pagamento	= 'N'
						 and	ie_ocorrencia_pc = 'N'))
	and not exists (select	1
			from	pls_conta_glosa x
			where	x.nr_seq_conta_proc	= b.nr_sequencia
			and	x.ie_situacao		= 'A'
			and	x.ie_lib_manual 	= 'S')
	
union all

	select	b.nr_sequencia	nr_seq_conta_proc
	from	pls_conta_proc b
	where	b.nr_seq_conta	= nr_seq_conta_pc
	and	b.ie_status	not in ('P','S','L')
	and	b.vl_liberado	> 0;

c_mat CURSOR(	nr_seq_conta_pc		pls_conta.nr_sequencia%type,
		ie_ocorrencia_pc	pls_controle_estab.ie_ocorrencia%type,
		cd_estabelecimento_pc	estabelecimento.cd_estabelecimento%type) FOR
	SELECT	b.nr_sequencia	nr_seq_conta_mat
	from	pls_conta_mat b
	where	b.nr_seq_conta	= nr_seq_conta_pc
	and	b.ie_status_pagamento	in ('P','L','I')
	and	exists (SELECT	1
			from	pls_conta_glosa 	x,
				tiss_motivo_glosa	y
			where	x.nr_seq_conta_mat	= b.nr_sequencia
			and	x.ie_situacao		= 'A'
			and	y.nr_sequencia		= x.nr_seq_motivo_glosa
			and	y.cd_motivo_tiss 	not in ('1705','1706','1707','9919')
			and	not exists (select	1
						 from	pls_ocorrencia oc
						 where	oc.nr_seq_motivo_glosa 	= x.nr_seq_motivo_glosa
						 and	oc.ie_glosar_pagamento	= 'N'
						 and	ie_ocorrencia_pc = 'S'
						 and	oc.cd_estabelecimento = cd_estabelecimento_pc
						
union all

						 select	1
						 from	pls_ocorrencia oc
						 where	oc.nr_seq_motivo_glosa 	= x.nr_seq_motivo_glosa
						 and	oc.ie_glosar_pagamento	= 'N'
						 and	ie_ocorrencia_pc = 'N'))
	and	not exists (select	1
				from	pls_conta_glosa x
				where	x.nr_seq_conta_mat	= b.nr_sequencia
				and	x.ie_situacao		= 'A'
				and (x.ie_lib_manual 	= 'S'))
	
union all

	select	b.nr_sequencia	nr_seq_conta_mat
	from	pls_conta_mat b
	where	b.nr_seq_conta	= nr_seq_conta_pc
	and	b.ie_status	not in ('P','S','L')
	and	b.vl_liberado	> 0;

c02 CURSOR(nr_seq_conta_pc	pls_conta_proc.nr_seq_conta%type)FOR(
	SELECT	b.nr_sequencia nr_seq_conta_proc,
		null nr_seq_conta_mat,
		c.nr_sequencia nr_seq_glosa,
		d.nr_sequencia nr_seq_ocorrencia_benef
	 from	pls_conta_proc b,
		pls_conta_glosa c,
		pls_ocorrencia_benef d
	 where	b.nr_seq_conta = nr_seq_conta_pc
	 and	b.ie_status_pagamento in ('P', 'L')
	 and	b.vl_liberado > 0
	 and	b.vl_glosa = 0
	 and	c.nr_seq_conta_proc = b.nr_sequencia
	 and	c.ie_situacao = 'A'
	 and 	exists (SELECT	1
			from	tiss_motivo_glosa y
			where	y.nr_sequencia = c.nr_seq_motivo_glosa
			and 	y.cd_motivo_tiss = '1706')
	 and 	not exists (select	1
			    from	pls_conta_glosa x
			    where	x.nr_seq_conta_proc = b.nr_sequencia
			    and		x.ie_situacao = 'A'
			    and		x.ie_lib_manual = 'S')
	and 	d.nr_seq_glosa = c.nr_sequencia
	
union

	select 	b.nr_sequencia nr_seq_conta_proc,
		null	nr_seq_conta_mat,
		c.nr_sequencia nr_seq_glosa,
		d.nr_sequencia nr_seq_ocorrencia_benef
	from 	pls_conta_proc b,
		pls_conta_glosa c,
		pls_ocorrencia_benef d
	where 	b.nr_seq_conta = nr_seq_conta_pc
	and 	b.ie_status_pagamento in ('P', 'L')
	and 	b.vl_liberado > 0
	and 	b.vl_glosa = 0
	and 	c.nr_seq_conta_proc = b.nr_sequencia
	and 	c.ie_situacao = 'A'
	and 	exists (select	1
			from 	tiss_motivo_glosa y
			where 	y.nr_sequencia = c.nr_seq_motivo_glosa
			and 	y.cd_motivo_tiss = '1706')
	and 	not exists (select	1
			    from	pls_conta_glosa x
			    where	x.nr_seq_conta_proc = b.nr_sequencia
			    and		x.ie_situacao = 'A'
			    and		x.ie_lib_manual = 'S')
	and 	d.nr_sequencia = c.nr_seq_ocorrencia_benef
	)
	
union all
(
	select	null  nr_seq_conta_proc,
		b.nr_sequencia nr_seq_conta_mat,
		c.nr_sequencia nr_seq_glosa,
		d.nr_sequencia nr_seq_ocorrencia_benef
	from 	pls_conta_mat b,
		pls_conta_glosa c,
		pls_ocorrencia_benef d
	where 	b.nr_seq_conta = nr_seq_conta_pc
	and 	b.ie_status_pagamento in ('P', 'L')
	and 	b.vl_liberado > 0
	and 	b.vl_glosa = 0
	and 	c.nr_seq_conta_mat = b.nr_sequencia
	and 	c.ie_situacao = 'A'
	and 	exists (select	1
			from 	tiss_motivo_glosa y
			where 	y.nr_sequencia = c.nr_seq_motivo_glosa
			and   	y.cd_motivo_tiss = '1706')
	and 	not exists (select	1
			    from 	pls_conta_glosa x
			    where	x.nr_seq_conta_mat = b.nr_sequencia
			    and 	x.ie_situacao = 'A'
			    and 	x.ie_lib_manual = 'S')
	and 	d.nr_seq_glosa = c.nr_sequencia
	
union

	select	null  nr_seq_conta_proc,
		b.nr_sequencia nr_seq_conta_mat,
		c.nr_sequencia nr_seq_glosa,
		d.nr_sequencia nr_seq_ocorrencia_benef
	from 	pls_conta_mat b,
		pls_conta_glosa c,
		pls_ocorrencia_benef d
	where 	b.nr_seq_conta = nr_seq_conta_pc
	and 	b.ie_status_pagamento in ('P', 'L')
	and 	b.vl_liberado > 0
	and 	b.vl_glosa = 0
	and 	c.nr_seq_conta_mat = b.nr_sequencia
	and 	c.ie_situacao = 'A'
	and 	exists (select	1
			from 	tiss_motivo_glosa y
			where 	y.nr_sequencia = c.nr_seq_motivo_glosa
			and   	y.cd_motivo_tiss = '1706')
	and 	not exists (select	1
			    from	pls_conta_glosa x
			    where	x.nr_seq_conta_mat = b.nr_sequencia
			    and		x.ie_situacao = 'A'
			    and		x.ie_lib_manual = 'S')
	and d.nr_sequencia = c.nr_seq_ocorrencia_benef
	);

procedure atualiza_ocor(	tb_seq_ocorrencia_benef_p	pls_util_cta_pck.t_number_table,
				nr_seq_analise_p		pls_analise_conta.nr_sequencia%type) is
;
BEGIN

if (tb_seq_ocorrencia_benef_p.count > 0) then

	forall i in tb_seq_ocorrencia_benef_p.first .. tb_seq_ocorrencia_benef_p.last
		update	pls_ocorrencia_benef set
			ie_situacao		= 'I',
			ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN 'US' WHEN ie_forma_inativacao='US' THEN 'US'  ELSE 'S' END
		where	nr_sequencia		= tb_seq_ocorrencia_benef_p(i);
	commit;

	forall i in tb_seq_ocorrencia_benef_p.first .. tb_seq_ocorrencia_benef_p.last
		update	pls_analise_glo_ocor_grupo a set
			a.ie_status		= 'L'
		where	a.nr_seq_analise	= nr_seq_analise_p
		and	a.ie_status		= 'P'
		and	a.nr_seq_ocor_benef	= tb_seq_ocorrencia_benef_p(i);
	commit;
end if;

end;

procedure atualiza_glosa(	tb_seq_glosa_p	pls_util_cta_pck.t_number_table) is

begin

if (tb_seq_glosa_p.count > 0) then

	forall i in tb_seq_glosa_p.first .. tb_seq_glosa_p.last
		update	pls_conta_glosa set
			ie_situacao		= 'I',
			ie_forma_inativacao	= CASE WHEN ie_forma_inativacao='U' THEN  'US' WHEN ie_forma_inativacao='US' THEN  'US'  ELSE 'S' END
		where	nr_sequencia		= tb_seq_glosa_p(i);
	commit;
end if;

end;

begin

if (nr_seq_analise_p IS NOT NULL AND nr_seq_analise_p::text <> '') and (nr_seq_conta_p IS NOT NULL AND nr_seq_conta_p::text <> '') then

	-- Verificar todos os itens que est√£o liberados e que tem glosa ativa
	-- Tem que voltar para pendente
	-- faz para procedimentos
	open c_proc(nr_seq_conta_p, ie_ocorrencia_w, cd_estabelecimento_p);
	loop
		tb_seq_w.delete;

		fetch c_proc bulk collect into tb_seq_w
		limit pls_util_pck.qt_registro_transacao_w;

		exit when tb_seq_w.count = 0;

		forall i in tb_seq_w.first .. tb_seq_w.last
			update	pls_conta_proc
			set	ie_status_pagamento	= 'I',
				qt_procedimento		= 0,
				vl_liberado		= 0,
				vl_liberado_hi		= 0,
				vl_liberado_co		= 0,
				vl_liberado_material	= 0,
				vl_glosa		= 0,
				vl_glosa_hi		= 0,
				vl_glosa_co		= 0,
				vl_glosa_material	= 0
			where	nr_sequencia		= tb_seq_w(i);
		commit;
	end loop;
	close c_proc;

	-- faz para materiais
	open c_mat(nr_seq_conta_p, ie_ocorrencia_w, cd_estabelecimento_p);
	loop
		tb_seq_w.delete;

		fetch c_mat bulk collect into tb_seq_w
		limit pls_util_pck.qt_registro_transacao_w;

		exit when tb_seq_w.count = 0;

		forall i in tb_seq_w.first .. tb_seq_w.last
			update	pls_conta_mat
			set	ie_status_pagamento	= 'I',
				qt_material		= 0,
				vl_liberado		= 0,
				vl_glosa		= 0
			where	nr_sequencia		= tb_seq_w(i);
		commit;
	end loop;
	close c_mat;

	tb_seq_ocorrencia_benef_w.delete;
	tb_seq_glosa_w.delete;
	nr_idx_ocor_benef_w := 0;
	nr_idx_seq_glosa_w := 0;

	for r_c02_w in c02(nr_seq_conta_p) loop

		if (r_c02_w.nr_seq_ocorrencia_benef IS NOT NULL AND r_c02_w.nr_seq_ocorrencia_benef::text <> '') then

			tb_seq_ocorrencia_benef_w(nr_idx_ocor_benef_w) := r_c02_w.nr_seq_ocorrencia_benef;

			-- se atingiu a quantidade envia para o banco
			if (nr_idx_ocor_benef_w >= pls_util_pck.qt_registro_transacao_w) then

				atualiza_ocor(	tb_seq_ocorrencia_benef_w, nr_seq_analise_p);

				tb_seq_ocorrencia_benef_w.delete;
				nr_idx_ocor_benef_w := 0;
			else
				nr_idx_ocor_benef_w := nr_idx_ocor_benef_w + 1;
			end if;
		end if;

		if (r_c02_w.nr_seq_glosa IS NOT NULL AND r_c02_w.nr_seq_glosa::text <> '') then

			tb_seq_glosa_w(nr_idx_seq_glosa_w) := r_c02_w.nr_seq_glosa;

			-- se atingiu a quantidade envia para o banco
			if (nr_idx_seq_glosa_w >= pls_util_pck.qt_registro_transacao_w) then

				atualiza_glosa(tb_seq_glosa_w);

				tb_seq_ocorrencia_benef_w.delete;
				nr_idx_seq_glosa_w := 0;
			else
				nr_idx_seq_glosa_w := nr_idx_seq_glosa_w + 1;
			end if;
		end if;
	end loop;

	-- se sobrou alguma coisa manda para o banco (ocorr√™ncia)
	atualiza_ocor(	tb_seq_ocorrencia_benef_w, nr_seq_analise_p);
	tb_seq_ocorrencia_benef_w.delete;
	nr_idx_ocor_benef_w := 0;

	-- se sobrou alguma coisa manda para o banco (glosa)
	atualiza_glosa(tb_seq_glosa_w);
	tb_seq_ocorrencia_benef_w.delete;
	nr_idx_seq_glosa_w := 0;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_analise_voltar_itens_pend ( nr_seq_analise_p pls_analise_conta.nr_sequencia%type, nr_seq_grupo_atual_p pls_grupo_auditor.nr_sequencia%type, nr_seq_conta_p pls_conta.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

