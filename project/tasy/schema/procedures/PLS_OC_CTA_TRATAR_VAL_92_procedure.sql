-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_92 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar regime de internação
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
dados_tb_sel_w			pls_tipos_ocor_pck.dados_table_selecao_ocor;
dados_tb_selecao_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;

nr_idx_w			integer := 0;

nr_seq_conta_w			pls_conta.nr_sequencia%type;

C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	coalesce(a.ie_restringe_benef,'S') ie_restringe_benef,
		coalesce(a.ie_valida_nf_dup,'S') ie_valida_nf_dup
	from	pls_oc_cta_val_nf a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	b.nr_sequencia nr_seq_selecao,
		a.nr_seq_conta,
		a.nr_nota_fiscal,
		a.nr_seq_prest_fornec,
		a.nr_seq_segurado,
		a.nr_sequencia
	from	pls_oc_cta_selecao_ocor_v	b,
		pls_conta_mat_ocor_v a
	where	b.nr_id_transacao	= nr_id_transacao_pc
	and	b.ie_valido		= 'S'
	and	a.nr_sequencia = b.nr_seq_conta_mat;
BEGIN

-- Deve existir informação da regra para aplicar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);

		/*Verifica se é para validar a ocorrência*/

		if (r_C01_w.ie_valida_nf_dup = 'S') then

			for r_C02_w in C02(nr_id_transacao_p) loop

				if (r_C01_w.ie_restringe_benef	= 'S') then
					select	max(nr_seq_conta)
					into STRICT	nr_seq_conta_w
					from	pls_conta_mat_ocor_v a
					where	a.nr_seq_prest_fornec	= r_C02_w.nr_seq_prest_fornec
					and	a.nr_nota_fiscal	= r_C02_w.nr_nota_fiscal
					and	a.nr_seq_segurado	= r_C02_w.nr_seq_segurado
					and	a.nr_sequencia		<> r_C02_w.nr_sequencia
					and	a.nr_seq_conta		<> r_C02_w.nr_seq_conta
					and	a.ie_status 		not in ('D','M')
					and	coalesce(a.ie_glosa,'N')		= 'N';
				else
					select	max(nr_seq_conta)
					into STRICT	nr_seq_conta_w
					from	pls_conta_mat a
					where	a.nr_seq_prest_fornec	= r_C02_w.nr_seq_prest_fornec
					and	a.nr_nota_fiscal	= r_C02_w.nr_nota_fiscal
					and	a.nr_sequencia		<> r_C02_w.nr_sequencia
					and	a.nr_seq_conta		<> r_C02_w.nr_seq_conta
					and	a.ie_status not in ('D','M')
					and	coalesce(a.ie_glosa,'N')		= 'N';
				end if;

				if (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') and (r_C02_w.nr_seq_conta = nr_seq_conta_w) then

					dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
					dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
					dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'Na conta '||nr_seq_conta_w||' existem materiais com nota fiscal duplicada! Nota Fiscal: '||r_C02_w.nr_nota_fiscal||'.';

				elsif (nr_seq_conta_w IS NOT NULL AND nr_seq_conta_w::text <> '') and (r_C02_w.nr_seq_conta <> nr_seq_conta_w) then

					dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
					dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
					dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'A nota fiscal ' ||r_C02_w.nr_nota_fiscal|| ' está duplicada nas contas '||r_C02_w.nr_seq_conta||' e '||nr_seq_conta_w||'.';

				end if;

				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
											'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);

				pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);

			end loop;

		end if;
		CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
	end loop;
end if;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_92 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

