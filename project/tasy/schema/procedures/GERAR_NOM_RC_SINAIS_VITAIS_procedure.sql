-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_sinais_vitais ( nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_atendimento_w				atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w				episodio_paciente.nr_sequencia%type;

cd_sinal_vital_w				nom_rc_sinais_vitais.cd_sinal_vital%type;
dt_sinal_vital_w				nom_rc_sinais_vitais.dt_sinal_vital%type;
ds_resultado_w				nom_rc_sinais_vitais.ds_resultado%type;
ds_unidade_medida_w				nom_rc_sinais_vitais.ds_unidade_medida%type;
ds_sinais_vitais_w				nom_rc_sinais_vitais.ds_sinais_vitais%type;
ds_observacao_w				atendimento_sinal_vital.ds_observacao%type;
ds_unidade_extenso_w		varchar(255);

qt_registro_w		bigint	:= 0;

ds_html_w			varchar(32000)	:= null;

c_sinal_vital CURSOR FOR
	SELECT	1 ie_union,
			'8302-2' cd_sinal_vital,
			'Talla' ds_sinal_vital,
			qt_altura_cm qt_sinal_vital,
			'cm' ds_unidade_medida,
			'centímetros' ds_unidade_extenso,
			dt_sinal_vital dt_sinal_vital,
			ds_observacao ds_observacao
	from	atendimento_sinal_vital
	where	nr_sequencia in (SELECT	nr_sequencia
								from (select    row_number() over (order by dt_sinal_vital) num_seq,
												count(*) over () cnt,
												nr_sequencia
										from	atendimento_sinal_vital
										where	(qt_altura_cm IS NOT NULL AND qt_altura_cm::text <> '')
										and		coalesce(ie_situacao,'A') = 'A'
										and		coalesce(ie_rn,'N') = 'N'
										and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		coalesce(dt_inativacao::text, '') = ''
										and		nr_atendimento in (select		x.nr_atendimento
																from	nom_rc_cabecalho x
																where	x.nr_sequencia = nr_seq_cabecalho_p
																and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
																
union

																select	y.nr_atendimento
																from	atendimento_paciente y,
																		nom_rc_cabecalho x
																where	x.nr_seq_episodio = y.nr_seq_episodio
																and		x.nr_sequencia = nr_seq_cabecalho_p)) alias11
								where num_seq = cnt or num_seq = 1)
	
union

	select	2 ie_union,
			'3141-9' cd_sinal_vital,
			'Peso' ds_sinal_vital,
			qt_peso qt_sinal_vital,
			'Kg' ds_unidade_medida,
			'Kilogramos' ds_unidade_extenso,
			dt_sinal_vital dt_sinal_vital,
			ds_observacao ds_observacao
	from	atendimento_sinal_vital	
	where	nr_sequencia in (select	nr_sequencia
								from (select    row_number() over (order by dt_sinal_vital) num_seq,
												count(*) over () cnt,
												nr_sequencia
										from	atendimento_sinal_vital
										where	(qt_peso IS NOT NULL AND qt_peso::text <> '')
										and		coalesce(ie_situacao,'A') = 'A'
										and		coalesce(ie_rn,'N') = 'N'
										and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		coalesce(dt_inativacao::text, '') = ''
										and		nr_atendimento in (select		x.nr_atendimento
																from	nom_rc_cabecalho x
																where	x.nr_sequencia = nr_seq_cabecalho_p
																and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
																
union

																select	y.nr_atendimento
																from	atendimento_paciente y,
																		nom_rc_cabecalho x
																where	x.nr_seq_episodio = y.nr_seq_episodio
																and		x.nr_sequencia = nr_seq_cabecalho_p)) alias24
								where num_seq = cnt or num_seq = 1)
	
union

	select	3 ie_union,
			'8480-6' cd_sinal_vital,
			'Tensión arterial (Sistólica)' ds_sinal_vital,
			qt_pa_sistolica qt_sinal_vital,
			'mmHg' ds_unidade_medida,
			'Milímetro de mercurio' ds_unidade_extenso,
			dt_sinal_vital dt_sinal_vital,
			ds_observacao ds_observacao
	from	atendimento_sinal_vital
	where	nr_sequencia in (select	nr_sequencia
								from (select    row_number() over (order by dt_sinal_vital) num_seq,
												count(*) over () cnt,
												nr_sequencia
										from	atendimento_sinal_vital
										where	(qt_pa_sistolica IS NOT NULL AND qt_pa_sistolica::text <> '')
										and		coalesce(ie_situacao,'A') = 'A'
										and		coalesce(ie_rn,'N') = 'N'
										and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		coalesce(dt_inativacao::text, '') = ''
										and		nr_atendimento in (select	x.nr_atendimento
																from	nom_rc_cabecalho x
																where	x.nr_sequencia = nr_seq_cabecalho_p
																and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
																
union

																select	y.nr_atendimento
																from	atendimento_paciente y,
																		nom_rc_cabecalho x
																where	x.nr_seq_episodio = y.nr_seq_episodio
																and		x.nr_sequencia = nr_seq_cabecalho_p)) alias37
								where num_seq = cnt or num_seq = 1)
	
union

	select	4 ie_union,
			'8462-4' cd_sinal_vital,
			'Tensión arterial (Diastólica)' ds_sinal_vital,
			qt_pa_diastolica qt_sinal_vital,
			'mmHg' ds_unidade_medida,
			'Milímetro de mercurio' ds_unidade_extenso,
			dt_sinal_vital dt_sinal_vital,
			ds_observacao ds_observacao
	from	atendimento_sinal_vital	
	where	nr_sequencia in (select	nr_sequencia
								from (select    row_number() over (order by dt_sinal_vital) num_seq,
												count(*) over () cnt,
												nr_sequencia
										from	atendimento_sinal_vital
										where	(qt_pa_diastolica IS NOT NULL AND qt_pa_diastolica::text <> '')
										and		coalesce(ie_situacao,'A') = 'A'
										and		coalesce(ie_rn,'N') = 'N'
										and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		coalesce(dt_inativacao::text, '') = ''
										and		nr_atendimento in (select	x.nr_atendimento
																	from	nom_rc_cabecalho x
																	where	x.nr_sequencia = nr_seq_cabecalho_p
																	and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
																	
union

																	select	y.nr_atendimento
																	from	atendimento_paciente y,
																			nom_rc_cabecalho x
																	where	x.nr_seq_episodio = y.nr_seq_episodio
																	and		x.nr_sequencia = nr_seq_cabecalho_p)) alias50
								where num_seq = cnt or num_seq = 1)
	
union

	select	5 ie_union,
			'8886-4' cd_sinal_vital,
			'Frecuencia cardiaca' ds_sinal_vital,
			qt_freq_cardiaca qt_sinal_vital,
			'bpm' ds_unidade_medida,
			'Batimentos por minuto' ds_unidade_extenso,
			dt_sinal_vital dt_sinal_vital,
			ds_observacao ds_observacao
	from	atendimento_sinal_vital	
	where	nr_sequencia in (select	nr_sequencia
								from (select    row_number() over (order by dt_sinal_vital) num_seq,
												count(*) over () cnt,
												nr_sequencia
										from	atendimento_sinal_vital
										where	(qt_freq_cardiaca IS NOT NULL AND qt_freq_cardiaca::text <> '')
										and		coalesce(ie_situacao,'A') = 'A'
										and		coalesce(ie_rn,'N') = 'N'
										and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		coalesce(dt_inativacao::text, '') = ''
										and		nr_atendimento in (select	x.nr_atendimento
																	from	nom_rc_cabecalho x
																	where	x.nr_sequencia = nr_seq_cabecalho_p
																	and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
																	
union

																	select	y.nr_atendimento
																	from	atendimento_paciente y,
																			nom_rc_cabecalho x
																	where	x.nr_seq_episodio = y.nr_seq_episodio
																	and		x.nr_sequencia = nr_seq_cabecalho_p)) alias63
								where num_seq = cnt or num_seq = 1)
	
union

	select	6 ie_union,
			'9275-9' cd_sinal_vital,
			'Frecuencia respiratoria' ds_sinal_vital,
			qt_freq_resp qt_sinal_vital,
			'mrpm' ds_unidade_medida,
			'Respirações por minuto' ds_unidade_extenso,
			dt_sinal_vital dt_sinal_vital,
			ds_observacao ds_observacao
	from	atendimento_sinal_vital	
	where	nr_sequencia in (select	nr_sequencia
								from (select    row_number() over (order by dt_sinal_vital) num_seq,
												count(*) over () cnt,
												nr_sequencia
										from	atendimento_sinal_vital
										where	(qt_freq_resp IS NOT NULL AND qt_freq_resp::text <> '')
										and		coalesce(ie_situacao,'A') = 'A'
										and		coalesce(ie_rn,'N') = 'N'
										and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		coalesce(dt_inativacao::text, '') = ''
										and		nr_atendimento in (select	x.nr_atendimento
																	from	nom_rc_cabecalho x
																	where	x.nr_sequencia = nr_seq_cabecalho_p
																	and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
																	
union

																	select	y.nr_atendimento
																	from	atendimento_paciente y,
																			nom_rc_cabecalho x
																	where	x.nr_seq_episodio = y.nr_seq_episodio
																	and		x.nr_sequencia = nr_seq_cabecalho_p)) alias76
								where num_seq = cnt or num_seq = 1)
	
union

	select	7 ie_union,
			'8310-5' cd_sinal_vital,
			'Temperatura' ds_sinal_vital,
			qt_temp qt_sinal_vital,
			'°C' ds_unidade_medida,
			'Grados celsius' ds_unidade_extenso,
			dt_sinal_vital dt_sinal_vital,
			ds_observacao ds_observacao
	from	atendimento_sinal_vital
	where	nr_sequencia in (select	nr_sequencia
								from (select    row_number() over (order by dt_sinal_vital) num_seq,
												count(*) over () cnt,
												nr_sequencia
										from	atendimento_sinal_vital
										where	(qt_temp IS NOT NULL AND qt_temp::text <> '')
										and		coalesce(ie_situacao,'A') = 'A'
										and		coalesce(ie_rn,'N') = 'N'
										and		(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
										and		coalesce(dt_inativacao::text, '') = ''
										and		nr_atendimento in (select	x.nr_atendimento
																	from	nom_rc_cabecalho x
																	where	x.nr_sequencia = nr_seq_cabecalho_p
																	and		(x.nr_atendimento IS NOT NULL AND x.nr_atendimento::text <> '')
																	
union

																	select	y.nr_atendimento
																	from	atendimento_paciente y,
																			nom_rc_cabecalho x
																	where	x.nr_seq_episodio = y.nr_seq_episodio
																	and		x.nr_sequencia = nr_seq_cabecalho_p)) alias89
								where num_seq = cnt or num_seq = 1)
	order by 	ie_union,
				dt_sinal_vital
;

BEGIN

delete from nom_rc_sinais_vitais
where nr_seq_cabecalho = nr_seq_cabecalho_p;

select	a.nr_atendimento,
		a.nr_seq_episodio
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;


if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	null;
elsif (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;


if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') THEN

	ds_html_w	:= '<table class="wrichedit-table" width="100%" xmlns="urn:hl7-org:v3">';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || '<thead>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '<tr>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<th>Fecha</th>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<th>Signo</th>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<th>Valor</th>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<th>Observaciones</th>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '</tr>';
	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) ||  '</thead>';

	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || '<tbody>';

	for	r_c_sinal_vital in c_sinal_vital LOOP

		qt_registro_w	:= qt_registro_w + 1;

		cd_sinal_vital_w	:= r_c_sinal_vital.cd_sinal_vital;
		dt_sinal_vital_w	:= r_c_sinal_vital.dt_sinal_vital;
		ds_resultado_w	:= r_c_sinal_vital.qt_sinal_vital;
		ds_unidade_medida_w	:= r_c_sinal_vital.ds_unidade_medida;
		ds_sinais_vitais_w	:= r_c_sinal_vital.ds_sinal_vital;
		ds_observacao_w	:= r_c_sinal_vital.ds_observacao;
		ds_unidade_extenso_w	:= r_c_sinal_vital.ds_unidade_extenso;

		insert into nom_rc_sinais_vitais(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_sinal_vital,
			dt_sinal_vital,
			ds_resultado,
			ds_unidade_medida,
			nr_seq_cabecalho,
			nm_sinal_vital)
		values (nextval('nom_rc_sinais_vitais_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_sinal_vital_w,
			dt_sinal_vital_w,
			replace(ds_resultado_w,',','.'), /* To have number as real */
			ds_unidade_medida_w,
			nr_seq_cabecalho_p,
			ds_sinais_vitais_w);

		ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '<tr>';

		ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<td>' || obter_data_utc(dt_sinal_vital_w,'NOM_TABLE') || '</td>';
		ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<td>' || ds_sinais_vitais_w || '</td>';
		ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<td>' || ds_resultado_w || ' ' || ds_unidade_extenso_w || '</td>';
		ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || chr(9) || '<td>' || ds_observacao_w || '</td>';

		ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || chr(9) || '</tr>';


	end loop;

	ds_html_w	:= ds_html_w || chr(13) || chr(10) || chr(9) || '</tbody>';

	ds_html_w	:= ds_html_w || chr(13) || chr(10) || '</table>';

	if (qt_registro_w > 0) then

		insert into nom_rc_sinais_vitais(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_sinais_vitais,
			nr_seq_cabecalho)
		values (nextval('nom_rc_sinais_vitais_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			ds_html_w,
			nr_seq_cabecalho_p);

	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_sinais_vitais ( nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

