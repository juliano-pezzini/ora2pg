-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_passagem_setor_evento ( nr_atendimento_p bigint, nr_cirurgia_p bigint, nr_seq_pepo_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, dt_entrada_unidade_p timestamp, dt_saida_unidade_p timestamp, nr_seq_interno_p bigint, ie_opcao_p text, nm_usuario_p text, nr_seq_aten_pac_unid_p INOUT bigint) AS $body$
DECLARE


/*										
I - Inicia										
F - Finaliza
*/
qt_atendimento_w	bigint;
qt_passagem_w		bigint;
nr_sequencia_w		bigint;
nr_seq_interno_w	bigint;
nr_atendimento_w	bigint;
ie_movimentacao_w	varchar(1);
nr_seq_pepo_w		bigint := null;
nr_cirurgia_w		bigint := null;
ie_rpa_monitorado_w	varchar(1);
cd_classif_setor_w	varchar(15);
ds_sep_bv_w		varchar(100);
ds_param_integ_hl7_w	varchar(4000);
nr_atendimento_p_w	bigint;
qt_existe_regra_setor_w	bigint;
qt_existe_dips_setor_w	bigint;
ie_integrar_paciente_cir_w	parametros_farmacia.ie_integrar_paciente_cir%type;
cd_departamento_w     	atend_paciente_unidade.cd_departamento%type;
ie_considerar_cirurgia_w ajuste_ap_lote_evento.ie_considerar_cirurgia%type;


BEGIN
nr_atendimento_p_w	:= nr_atendimento_p;

if (nr_atendimento_p_w = 0) and (ie_opcao_p = 'I') then
	if (coalesce(nr_cirurgia_p,0) > 0) then
		select   coalesce(max(nr_atendimento),0)
		into STRICT	 nr_atendimento_p_w
		from 	 cirurgia
                where    nr_cirurgia = nr_cirurgia_p;
	elsif (coalesce(nr_seq_pepo_p,0) > 0) then
		select   coalesce(max(nr_atendimento),0)
		into STRICT	 nr_atendimento_p_w
		from 	 cirurgia
                where    nr_seq_pepo = nr_seq_pepo_p;
	end if;
	if (nr_atendimento_p_w = 0) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(313473);
	end if;
end if;	
	

nr_seq_aten_pac_unid_p 	:= null;

if (coalesce(nr_cirurgia_p,0) > 0) then
	nr_cirurgia_w := nr_cirurgia_p;
end if;	

if (coalesce(nr_seq_pepo_p,0) > 0) then
	nr_seq_pepo_w := nr_seq_pepo_p;
end if;	


if (ie_opcao_p = 'I') then
	select	count(*)
	into STRICT	qt_atendimento_w
	from	atendimento_paciente
	where	(dt_fim_conta IS NOT NULL AND dt_fim_conta::text <> '')
	and	nr_atendimento	= nr_atendimento_p_w;

	if (qt_atendimento_w > 0) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(206950);
	end if;

	select	count(*)
	into STRICT	qt_passagem_w
	from	atend_paciente_unidade
	where	nr_atendimento 		= nr_atendimento_p_w
	and	dt_entrada_unidade 	= dt_entrada_unidade_p;

	if (qt_passagem_w > 0) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(206951);
	end if;

	select	coalesce(max(nr_sequencia),0) + 1
	into STRICT	nr_sequencia_w
	from	atend_paciente_unidade
	where	nr_atendimento	= nr_atendimento_p_w;

	

	if (cd_unidade_basica_p IS NOT NULL AND cd_unidade_basica_p::text <> '') and (cd_unidade_compl_p IS NOT NULL AND cd_unidade_compl_p::text <> '') then
		
		select	nextval('atend_paciente_unidade_seq')
		into STRICT	nr_seq_interno_w
		;

		select	max(atpa.cd_departamento)
		into STRICT	cd_departamento_w
		from	atend_paciente_unidade atpa
		where	atpa.nr_atendimento = nr_atendimento_p
		and     atpa.nr_seq_interno = (SELECT   max(a.nr_seq_interno)
						from    atend_paciente_unidade a
						where   a.nr_atendimento = atpa.nr_atendimento
						and     (a.cd_departamento IS NOT NULL AND a.cd_departamento::text <> '')
						and     coalesce(a.dt_saida_unidade::text, '') = '');
		
		insert	into atend_paciente_unidade(nr_atendimento,
			nr_sequencia,
			cd_setor_atendimento,
			cd_unidade_basica,
			cd_unidade_compl,
			dt_entrada_unidade,
			dt_atualizacao,
			nm_usuario,
			cd_tipo_acomodacao,
			dt_saida_unidade,
			nr_atend_dia,
			ds_observacao,
			nm_usuario_original,
			dt_saida_interno,
			ie_passagem_setor,
			nr_acompanhante,
			nr_seq_interno,
			IE_CALCULAR_DIF_DIARIA,
			nr_seq_motivo_transf,
			nr_cirurgia,
			nr_seq_pepo,
			cd_departamento)
		values (nr_atendimento_p_w,
			nr_sequencia_w,
			cd_setor_atendimento_p,
			cd_unidade_basica_p,
			cd_unidade_compl_p,
			dt_entrada_unidade_p,
			clock_timestamp(),
			nm_usuario_p,
			obter_tipo_acomod_leito(cd_setor_atendimento_p, cd_unidade_basica_p, cd_unidade_compl_p, 'C'),
			dt_saida_unidade_p,
			null,
			null,
			nm_usuario_p,
			null,
			'S',
			null,
			nr_seq_interno_w,
			'S',
			null,
			nr_cirurgia_w,
			nr_seq_pepo_w,
			cd_departamento_w);
			
		nr_seq_aten_pac_unid_p := nr_seq_interno_w;
	
		CALL Atend_Paciente_Unid_AfterPost(nr_seq_interno_w, 'I', nm_usuario_p);
		
		select  coalesce(max(a.ie_rpa),'N'),
			max(a.cd_classif_setor)
		into STRICT   	ie_rpa_monitorado_w,
			cd_classif_setor_w
		from    setor_atendimento a,
			unidade_atendimento b
		where 	a.cd_setor_atendimento	= b.cd_setor_atendimento
		and 	a.cd_setor_atendimento  = cd_setor_atendimento_p
		and 	b.cd_unidade_basica 	= cd_unidade_basica_p
		and 	b.cd_unidade_compl 	= cd_unidade_compl_p
		and    	b.ie_leito_monitorado 	= 'S';
		
		
		ie_movimentacao_w := obter_param_usuario(872, 340, Obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_movimentacao_w);	
		
		select	coalesce(max(ie_considerar_cirurgia), 'N')
		into STRICT	ie_considerar_cirurgia_w
		from	ajuste_ap_lote_evento
		where	ie_evento = 'M'
		and	((coalesce(cd_estabelecimento::text, '') = '') or (cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento));		
		
		if	((coalesce(ie_movimentacao_w,'N') = 'S') and (coalesce(ie_considerar_cirurgia_w,'N') = 'S')) then
			CALL gerar_ajustes_ap_lote('M', nr_atendimento_p_w, nm_usuario_p, 'F');
		end if;

	
		-- Integração DIXTAL para iniciar a integração do paciente na RPA - M - Admissão de paciente (ADT_A01)
		if (ie_rpa_monitorado_w = 'S') and (cd_classif_setor_w = 2) then
			ds_sep_bv_w 		:= 	obter_separador_bv;
			ds_param_integ_hl7_w 	:= 	'nr_atendimento=' || nr_atendimento_p_w || ds_sep_bv_w ||
							'nr_seq_interno=' || nr_seq_interno_w || ds_sep_bv_w||
							'cd_pessoa_fisica=' || obter_pessoa_atendimento(nr_atendimento_p_w,'C')  || ds_sep_bv_w;
			CALL gravar_agend_integracao(67, ds_param_integ_hl7_w, cd_setor_atendimento_p);
		end if;	
	end if;
	
elsif (ie_opcao_p = 'F') then
	
	update	atend_paciente_unidade
	set	dt_saida_unidade 	= coalesce(dt_saida_unidade_p,clock_timestamp())
	where	nr_seq_interno		= nr_seq_interno_p;
	
	ie_movimentacao_w := obter_param_usuario(872, 340, Obter_perfil_Ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_movimentacao_w);
	
	select	coalesce(max(nr_atendimento),0)
	into STRICT	nr_atendimento_w
	from	atend_paciente_unidade
	where	nr_seq_interno = nr_seq_interno_p;
	
	if (coalesce(ie_movimentacao_w,'N') = 'S')	then
		CALL gerar_ajustes_ap_lote('M', nr_atendimento_w, nm_usuario_p);
	end if;
	
	select  coalesce(max(a.ie_rpa),'N'),
		max(a.cd_classif_setor)
	into STRICT   	ie_rpa_monitorado_w,
		cd_classif_setor_w
	from    setor_atendimento a,
		unidade_atendimento b,
		atend_paciente_unidade c
	where 	a.cd_setor_atendimento	= b.cd_setor_atendimento
	and	a.cd_setor_atendimento	= c.cd_setor_atendimento
	and 	b.cd_unidade_basica 	= c.cd_unidade_basica
	and 	b.cd_unidade_compl 	= c.cd_unidade_compl
	and	c.nr_seq_interno	= nr_seq_interno_p
	and    	b.ie_leito_monitorado 	= 'S';

	
	-- Integração DIXTAL para finalizar a integração do paciente na RPA - M - Alta de paciente  (ADT_A03)
	if (ie_rpa_monitorado_w = 'S') and (cd_classif_setor_w = 2) then
		ds_sep_bv_w 		:= 	obter_separador_bv;
		ds_param_integ_hl7_w 	:= 	'nr_atendimento=' || nr_atendimento_w || ds_sep_bv_w ||
						'nr_seq_interno=' || nr_seq_interno_p || ds_sep_bv_w||
						'cd_pessoa_fisica=' || obter_pessoa_atendimento(nr_atendimento_w,'C')  || ds_sep_bv_w;
		CALL gravar_agend_integracao(69, ds_param_integ_hl7_w, cd_setor_atendimento_p);
	end if;	
end if;	
	
select	coalesce(max(ie_integrar_paciente_cir),'N')
into STRICT	ie_integrar_paciente_cir_w
from	parametros_farmacia
where 	cd_estabelecimento = wheb_usuario_pck.get_cd_estabelecimento;
	
if (coalesce(ie_integrar_paciente_cir_w,'N') = 'S') then
	begin
	select	1
	into STRICT	qt_existe_regra_setor_w
	from	dis_regra_setor
	where	cd_setor_atendimento = cd_setor_atendimento_p  LIMIT 1;
	exception
	when others then
		qt_existe_regra_setor_w := 0;
	end;

	if (qt_existe_regra_setor_w > 0) then
		CALL intdisp_gerar_movimento(nr_atendimento_p, 'EPA');
	end if;	
	if (qt_existe_regra_setor_w = 0) then
		begin
			begin
			select	1
			into STRICT	qt_existe_dips_setor_w
			from	int_disp_movt_pac
			where	nr_atendimento = nr_atendimento_p  LIMIT 1;
			exception
			when others then
				qt_existe_dips_setor_w := 0;
			end;	
			if (qt_existe_dips_setor_w > 0) then
			CALL intdisp_gerar_movimento(nr_atendimento_p, 'EPD');
			end if;
		end;	
	end if;	
end if;	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_passagem_setor_evento ( nr_atendimento_p bigint, nr_cirurgia_p bigint, nr_seq_pepo_p bigint, cd_setor_atendimento_p bigint, cd_unidade_basica_p text, cd_unidade_compl_p text, dt_entrada_unidade_p timestamp, dt_saida_unidade_p timestamp, nr_seq_interno_p bigint, ie_opcao_p text, nm_usuario_p text, nr_seq_aten_pac_unid_p INOUT bigint) FROM PUBLIC;

