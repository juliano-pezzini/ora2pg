-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_mens_item_acrescimo ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_sequencia%type, nr_seq_parentesco_p pls_segurado.nr_seq_parentesco%type, ie_tipo_parentesco_p grau_parentesco.ie_tipo_parentesco%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, ie_mensalidade_mes_rescisao_p pls_regra_mens_contrato.ie_mensalidade_mes_rescisao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


vl_total_w			pls_mensalidade_seg_item.vl_item%type;
vl_mensalidade_w		pls_mensalidade_seg_item.vl_item%type;
vl_rateio_w			pls_mensalidade_seg_item.vl_item%type;
vl_mens_nao_inserido_w		pls_mensalidade_seg_item.vl_item%type;
qt_vidas_w			integer;
qt_mensalidade_seg_w		integer;
nr_seq_mens_arredondamento_w	pls_mensalidade_segurado.nr_sequencia%type;
ie_tipo_mensalidade_w		varchar(1);
ie_inseriu_item_w		varchar(1);

C01 CURSOR FOR
	SELECT	b.nr_sequencia nr_seq_regra,
		'C' ie_origem_regra, --Contrato
		b.nr_seq_tipo_acrescimo,
		coalesce(a.vl_acrescimo,0) vl_acrescimo,
		coalesce(a.tx_acrescimo,0) tx_acrescimo,
		a.qt_min_vidas,
		a.qt_max_vidas,
		b.ie_tipo_regra,
		b.ie_tipo_item_mensalidade,
		coalesce(a.ie_tipo_segurado,'T') ie_tipo_segurado
	from	pls_criterio_acrescimo	a,
		pls_regra_acrescimo	b
	where	a.nr_seq_regra		= b.nr_sequencia
	and	b.ie_situacao		= 'A'
	and	b.nr_seq_contrato	= nr_seq_contrato_p
	and	dt_referencia_p	between coalesce(b.dt_inicio_vigencia,dt_referencia_p) and coalesce(b.dt_fim_vigencia,dt_referencia_p)
	
union

	SELECT	b.nr_sequencia nr_seq_regra,
		'B' ie_origem_regra, --Benefici√°rio
		b.nr_seq_tipo_acrescimo,
		coalesce(a.vl_acrescimo,0) vl_acrescimo,
		coalesce(a.tx_acrescimo,0) tx_acrescimo,
		a.qt_min_vidas,
		a.qt_max_vidas,
		b.ie_tipo_regra,
		b.ie_tipo_item_mensalidade,
		coalesce(a.ie_tipo_segurado,'T') ie_tipo_segurado
	from	pls_criterio_acrescimo	a,
		pls_regra_acrescimo	b
	where	a.nr_seq_regra		= b.nr_sequencia
	and	b.ie_situacao		= 'A'
	and	b.nr_seq_segurado	= nr_seq_segurado_p
	and	dt_referencia_p	between coalesce(b.dt_inicio_vigencia,dt_referencia_p) and coalesce(b.dt_fim_vigencia,dt_referencia_p)
	
union

	select	b.nr_sequencia nr_seq_regra,
		'P' ie_origem_regra, --Pagador
		b.nr_seq_tipo_acrescimo,
		coalesce(a.vl_acrescimo,0) vl_acrescimo,
		coalesce(a.tx_acrescimo,0) tx_acrescimo,
		a.qt_min_vidas,
		a.qt_max_vidas,
		b.ie_tipo_regra,
		b.ie_tipo_item_mensalidade,
		coalesce(a.ie_tipo_segurado,'T') ie_tipo_segurado
	from	pls_criterio_acrescimo	a,
		pls_regra_acrescimo	b
	where	a.nr_seq_regra		= b.nr_sequencia
	and	b.nr_seq_pagador	= nr_seq_pagador_p
	and	dt_referencia_p	between coalesce(b.dt_inicio_vigencia,dt_referencia_p) and coalesce(b.dt_fim_vigencia,dt_referencia_p);

BEGIN

for r_c01_w in C01 loop
	begin
	vl_total_w	:= 0;
	if (r_c01_w.ie_tipo_item_mensalidade IS NOT NULL AND r_c01_w.ie_tipo_item_mensalidade::text <> '') then
		select	sum(vl_item)
		into STRICT	vl_mensalidade_w
		from	pls_mensalidade_seg_item
		where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p
		and	obter_se_contido(ie_tipo_item,r_c01_w.ie_tipo_item_mensalidade) = 'S';
	elsif (coalesce(r_c01_w.ie_tipo_item_mensalidade::text, '') = '') then
		select	sum(vl_item)
		into STRICT	vl_mensalidade_w
		from	pls_mensalidade_seg_item
		where	nr_seq_mensalidade_seg = nr_seq_mensalidade_seg_p;
	end if;
	vl_mens_nao_inserido_w	:= pls_mens_itens_pck.obter_valor_mens(nr_seq_mensalidade_seg_p, null, r_c01_w.ie_tipo_item_mensalidade);
	vl_mensalidade_w	:= coalesce(vl_mensalidade_w,0) + vl_mens_nao_inserido_w;

	if (r_c01_w.ie_origem_regra = 'P') then
		ie_tipo_mensalidade_w	:= 'P';
		if (r_c01_w.tx_acrescimo > 0) then
			vl_total_w	:= vl_total_w + round(vl_mensalidade_w * (r_c01_w.tx_acrescimo/100),2);
		end if;
		if (r_c01_w.vl_acrescimo > 0) then
			select	count(1),
				max(nr_sequencia)
			into STRICT	qt_mensalidade_seg_w,
				nr_seq_mens_arredondamento_w
			from	pls_mensalidade_segurado
			where	nr_seq_mensalidade	= nr_seq_mensalidade_p
			and	dt_mesano_referencia	= dt_referencia_p
			and	(((coalesce(dt_rescisao_benef::text, '') = '') or (trunc(dt_rescisao_benef,'month') > dt_referencia_p)) or
				 ((ie_mensalidade_mes_rescisao_p = 'S') and (trunc(dt_rescisao_benef,'month') = dt_referencia_p)));

			vl_rateio_w	:= dividir_sem_round(r_c01_w.vl_acrescimo,qt_mensalidade_seg_w);
			if (nr_seq_mensalidade_seg_p = nr_seq_mens_arredondamento_w) then
				vl_total_w	:= vl_total_w + vl_rateio_w + (r_c01_w.vl_acrescimo - (vl_rateio_w * qt_mensalidade_seg_w));
			else
				vl_total_w	:= vl_total_w + vl_rateio_w;
			end if;
		end if;
	else
		ie_tipo_mensalidade_w	:= 'N';

		if (r_c01_w.ie_tipo_segurado = 'T') then --Todos
			select	count(1)
			into STRICT	qt_vidas_w
			from	pls_segurado
			where	nr_seq_contrato	= nr_seq_contrato_p
			and	(dt_liberacao IS NOT NULL AND dt_liberacao::text <> '')
			and	((coalesce(dt_rescisao::text, '') = '') or (trunc(dt_rescisao,'month') > dt_referencia_p));
		elsif (r_c01_w.ie_tipo_segurado = 'E') then --Titular + Dependentes legais
			select	count(1)
			into STRICT	qt_vidas_w
			FROM pls_segurado a
LEFT OUTER JOIN grau_parentesco b ON (a.nr_seq_parentesco = b.nr_sequencia)
WHERE a.nr_seq_contrato = nr_seq_contrato_p and a.nr_seq_titular = coalesce(nr_seq_titular_p,nr_seq_segurado_p) and coalesce(a.ie_tipo_parentesco,b.ie_tipo_parentesco) = '1' and (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '') and ((coalesce(a.dt_rescisao::text, '') = '') or (trunc(a.dt_rescisao,'month') > dt_referencia_p));

			qt_vidas_w	:= (qt_vidas_w + 1); --Somar o titular
		end if;

		if (r_c01_w.ie_tipo_regra = 'T') or
			((r_c01_w.ie_tipo_regra = 'I') and (coalesce(nr_seq_titular_p::text, '') = '')) or
			(r_c01_w.ie_tipo_regra = 'L' AND ie_tipo_parentesco_p = '1') or
			((r_c01_w.ie_tipo_regra = 'E') and ((ie_tipo_parentesco_p = '1') or (coalesce(nr_seq_titular_p::text, '') = ''))) then

			if (qt_vidas_w between coalesce(r_c01_w.qt_min_vidas,1) and coalesce(r_c01_w.qt_max_vidas,qt_vidas_w)) then
				if (r_c01_w.tx_acrescimo > 0) then
					vl_total_w	:= vl_total_w + round(vl_mensalidade_w * (r_c01_w.tx_acrescimo/100),2);
				end if;
				if (r_c01_w.vl_acrescimo > 0) then
					vl_total_w	:= vl_total_w + r_c01_w.vl_acrescimo;
				end if;
			end if;
		end if;
	end if;

	if (vl_total_w > 0) then
		ie_inseriu_item_w := pls_mens_itens_pck.add_item_acrescimo(nr_seq_mensalidade_seg_p, '22', vl_total_w, ie_tipo_mensalidade_w, r_c01_w.nr_seq_regra, r_c01_w.nr_seq_tipo_acrescimo, '', ie_inseriu_item_w);
	end if;

	end;
end loop; --C01
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_mens_item_acrescimo ( nr_seq_mensalidade_seg_p pls_mensalidade_segurado.nr_sequencia%type, dt_referencia_p pls_mensalidade_segurado.dt_mesano_referencia%type, nr_seq_mensalidade_p pls_mensalidade.nr_sequencia%type, nr_seq_segurado_p pls_segurado.nr_sequencia%type, nr_seq_titular_p pls_segurado.nr_sequencia%type, nr_seq_parentesco_p pls_segurado.nr_seq_parentesco%type, ie_tipo_parentesco_p grau_parentesco.ie_tipo_parentesco%type, nr_seq_pagador_p pls_contrato_pagador.nr_sequencia%type, nr_seq_contrato_p pls_contrato.nr_sequencia%type, ie_mensalidade_mes_rescisao_p pls_regra_mens_contrato.ie_mensalidade_mes_rescisao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

