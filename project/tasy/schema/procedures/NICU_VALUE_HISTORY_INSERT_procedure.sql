-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE nicu_value_history_insert ( id_rule_p text, nr_seq_patient_p bigint) AS $body$
DECLARE


type value_history_t is table of nicuan_value_history_temp%rowtype;
nicuan_value_history_temp_w			value_history_t;

downsampling_rules CURSOR(id_rule_cp  text ) FOR
  SELECT  NCR.ID_DECIMATION_TYPE,
		  NDDI.DS_TIME_SPAN,
          NDDI.IE_FREQUENCY  
  FROM    NICU_CLINICAL_RULE        NCR,
          NICU_DATA_DECIMATION      NDD,
          NICU_DATA_DECIMATION_ITEM NDDI
  WHERE   1=1
  AND     NCR.ID_RULE             = ID_RULE_CP
  AND     NDD.ID_DATA_DECIMATION  = NCR.ID_DECIMATION_TYPE
  AND     NDD.NR_SEQUENCIA        = NDDI.NR_SEQ_DECIMATION
  ORDER BY  DS_TIME_SPAN,
            IE_FREQUENCY;

dt_observation_first_w  timestamp;
dt_frequency_w  		timestamp := null;
dt_control_w			timestamp := null;
qt_hours_elapsed_w      bigint;
ie_frequency_w          nicu_data_decimation_item.ie_frequency%type := null;
ie_is_ok_to_group_w		bigint := 0;


type date_control_table is table of timestamp
index by varchar(64);

date_control_array  date_control_table;
i  varchar(64);

BEGIN

DELETE FROM NICUAN_VALUE_HISTORY_TEMP;

SELECT  MIN(DT_OBSERVATION)
INTO STRICT    DT_OBSERVATION_FIRST_W
FROM    NICU_OBSERVATION
WHERE   NR_SEQ_PATIENT  = NR_SEQ_PATIENT_P
AND     ID_RULE 	    = ID_RULE_P;

begin

qt_hours_elapsed_w := (clock_timestamp() - dt_observation_first_w) * 24;

for rulew in downsampling_rules(id_rule_p) loop

  if (qt_hours_elapsed_w >= rulew.ds_time_span) then
      ie_frequency_w := rulew.ie_frequency;
  end if;
end loop;


	if (ie_frequency_w IS NOT NULL AND ie_frequency_w::text <> '') and ((ie_frequency_w)::numeric  > 0) then

		SELECT coalesce(ATT.DS_LABEL,A.DS_LABEL) DS_LABEL,
			TO_CHAR((A.VALUE_RESULT)::numeric ) VALUE_RESULT, 
			A.DS_UOFM_IN, 
			A.DT_OBSERVATION,
			clock_timestamp() DT_FREQUENCY,
			A.ID_RULE,
			A.NR_SEQ_PATIENT		
		BULK COLLECT INTO STRICT NICUAN_VALUE_HISTORY_TEMP_W
		FROM nicu_observation a
LEFT OUTER JOIN (SELECT DISTINCT CD_SNOMED,
				  DS_LABEL, 
				  ID_RULE,
				  NR_ORDER_BY
		   FROM 	NICU_CLINICAL_ATTRIBUTE
		   WHERE 	ID_RULE  = ID_RULE_P ) att ON (A.ID_RULE = ATT.ID_RULE AND A.CD_SNOMED_IN = ATT.CD_SNOMED)
WHERE NR_SEQ_PATIENT = NR_SEQ_PATIENT_P AND A.ID_RULE 	   = ID_RULE_P   ORDER BY DT_OBSERVATION ASC,
			   ATT.NR_ORDER_BY ASC,
			   ATT.DS_LABEL   ASC;

		/*OBSERVATION MAPPING*/

		for i in 1..nicuan_value_history_temp_w.count loop

			if (coalesce(dt_frequency_w::text, '') = '') then
				dt_frequency_w := nicuan_value_history_temp_w[i].dt_observation;
			end if;			

			if (not date_control_array.exists(nicuan_value_history_temp_w[i].ds_label)) then
				date_control_array(nicuan_value_history_temp_w[i].ds_label)
					:= nicuan_value_history_temp_w[i].dt_observation + ((ie_frequency_w)::numeric /24/60);
			end if;
			
			if (nicuan_value_history_temp_w[i].dt_observation >= date_control_array(nicuan_value_history_temp_w[i].ds_label)) then
				dt_frequency_w 	:= nicuan_value_history_temp_w[i].dt_observation;
				date_control_array(nicuan_value_history_temp_w[i].ds_label) 	
					:= nicuan_value_history_temp_w[i].dt_observation + ((ie_frequency_w)::numeric /24/60);
			end if;
			
			nicuan_value_history_temp_w[i].dt_frequency := trunc(dt_frequency_w,'mi');

		end loop;
		
		if (nicuan_value_history_temp_w.count > 0) then
			forall i in 1..nicuan_value_history_temp_w.count
				insert into nicuan_value_history_temp values nicuan_value_history_temp_w(i);
		end if;
		
	end if;

	commit;

exception
	when data_exception or data_exception then
	rollback;
end;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE nicu_value_history_insert ( id_rule_p text, nr_seq_patient_p bigint) FROM PUBLIC;

