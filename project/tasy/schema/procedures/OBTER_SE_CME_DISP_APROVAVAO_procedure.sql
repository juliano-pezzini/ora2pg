-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_se_cme_disp_aprovavao ( nr_seq_agenda_p bigint, nr_seq_conjunto_p bigint, ie_consiste_prazo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) AS $body$
DECLARE


qt_agenda_per_w			bigint;
qt_tempo_esterilizacao_w	bigint	:= 0;
dt_inicial_w			timestamp;
dt_final_w			timestamp;
qt_conj_agenda_w		bigint;
nr_seq_agenda_w			agenda_paciente.nr_sequencia%type;
ds_conjunto_w			varchar(100);
ds_agenda_w			varchar(50);
dt_agenda_w			timestamp;
nm_paciente_w			varchar(60);
qt_equipamento_w		bigint;
nm_medico_w			varchar(50);
qt_consiste_agenda_w		bigint;
qt_conj_agenda_exec_w		bigint;
nr_seq_agenda_exec_w		bigint;
qt_agenda_per_exec_w		bigint;
qt_tempo_esterelizacao_w	bigint;
qt_tempo_transporte_w		bigint;
dt_prazo_maximo_w		timestamp;
ds_erro_w			varchar(2000);
nr_minuto_duracao_w		bigint;
hr_duracao_w			varchar(255);
hr_fim_w			timestamp;
dt_chegada_equip_w		timestamp;


BEGIN

qt_tempo_transporte_w := Obter_Param_Usuario(871, 484, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, qt_tempo_transporte_w);

select	hr_inicio,
	hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400)
into STRICT	dt_inicial_w,
	dt_final_w
from	agenda_paciente
where	nr_sequencia	= nr_seq_agenda_p;

if (ie_consiste_prazo_p = 'S') then
	--Tempo para chegar o equipamento ate no estabelecimento destino com base na data da aprovacao

	--Ele tem que chegar antes do inicio da cirurgia.
	dt_chegada_equip_w 	:= clock_timestamp() + (qt_tempo_transporte_w/24);
	
	if (dt_chegada_equip_w > dt_inicial_w) then
		ds_erro_w :=	wheb_mensagem_pck.get_texto(278533, 'DT_INICIAL_P=' || to_char(dt_inicial_w,'dd/mm/yyyy hh24:mi:ss') ||
								';DT_CHEGADA_EQUIP_P=' || to_char(dt_chegada_equip_w,'dd/mm/yyyy hh24:mi:ss')); 	
	end if;
else
	dt_inicial_w	:= dt_inicial_w - (qt_tempo_transporte_w/24);
	dt_final_w	:= dt_final_w   + (qt_tempo_transporte_w/24);

	select	coalesce(max(qt_consiste_agenda), 0)
	into STRICT	qt_consiste_agenda_w
	from	cm_conjunto
	where	nr_sequencia		= nr_seq_conjunto_p;

	select	coalesce(max(qt_tempo_esterelizacao),0)
	into STRICT	qt_tempo_esterilizacao_w
	from	cm_conjunto
	where	nr_sequencia = nr_seq_conjunto_p;

	/* Obter qtde de agendamentos que foram executadas no periodo - neste so eh contado o tempo de esterilizacao e nao considera mais o tempo de duracao pois o mesmo ja foi realizado */

	select 	count(*)
	into STRICT	qt_conj_agenda_exec_w
	from	agenda_pac_cme a,
		agenda_paciente b
	where	b.nr_sequencia = a.nr_seq_agenda 
	and	((hr_inicio between dt_inicial_w and dt_final_w) or  
		(hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
		((hr_inicio < dt_inicial_w) and (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))
	and	a.nr_seq_conjunto = nr_seq_conjunto_p
	and	b.ie_status_agenda = 'E'
	and	a.ie_origem_inf = 'I'
	and	b.nr_sequencia <> nr_seq_agenda_p;
			
	/* Obter qtde de agendamentos que nao foram executados e/ou cancelados no periodo */

	select 	count(*)
	into STRICT	qt_conj_agenda_w
	from	agenda_pac_cme a,
		agenda_paciente b
	where	b.nr_sequencia = a.nr_seq_agenda 
	and	((hr_inicio between dt_inicial_w and dt_final_w) or  
		(hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
		((hr_inicio < dt_inicial_w) and (hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))
	and	a.nr_seq_conjunto = nr_seq_conjunto_p
	and	b.ie_status_agenda not in ('C','E')
	and	a.ie_origem_inf = 'I'
	and	b.nr_sequencia <> nr_seq_agenda_p;

	/* Somado todos os agendamentos */

	qt_conj_agenda_w	:= qt_conj_agenda_exec_w + qt_conj_agenda_w + 1;

	if (qt_conj_agenda_w > 0) then
		/* Obter o ultimo agendamento executado - Obter o ultimo agendamento desconsiderando os executados e os cancelados */

		select	max(nr_seq_agenda),
			max(qt_agenda_per)
		into STRICT	nr_seq_agenda_w,
			qt_agenda_per_w
		from	(SELECT	coalesce(max(b.nr_sequencia),0) nr_seq_agenda,
				count(*) qt_agenda_per
			from	agenda_pac_cme a,
				agenda_paciente b
			where	b.nr_sequencia = a.nr_seq_agenda 
			and	((hr_inicio between dt_inicial_w and dt_final_w) or  
				(hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
				((hr_inicio < dt_inicial_w) and (hr_inicio + (qt_tempo_esterilizacao_w / 1440) - (1/86400) > dt_final_w)))
			and	a.nr_seq_conjunto = nr_seq_conjunto_p
			and	b.ie_status_agenda = 'E'
			and	a.ie_origem_inf = 'I'
			and	b.nr_sequencia <> nr_seq_agenda_p
			
union

			SELECT	coalesce(max(b.nr_sequencia),0),
				count(*)
			from	agenda_pac_cme a,
				agenda_paciente b 
			where	b.nr_sequencia = a.nr_seq_agenda 
			and	((hr_inicio between dt_inicial_w and dt_final_w) or  
				(hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) between dt_inicial_w and dt_final_w) or
				((hr_inicio < dt_inicial_w) and (hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) - (1/86400) > dt_final_w)))
			and	a.nr_seq_conjunto = nr_seq_conjunto_p
			and	b.ie_status_agenda not in ('C','E')
			and	a.ie_origem_inf = 'I'
			and	b.nr_sequencia <> nr_seq_agenda_p) alias34;
		
		if (nr_seq_agenda_w > 0) and (qt_agenda_per_w >= qt_consiste_agenda_w) then
			select	substr(cme_obter_nome_conjunto(nr_seq_conjunto_p),1,100),
				hr_inicio,
				hr_inicio + ((nr_minuto_duracao + coalesce(qt_tempo_esterilizacao_w,0)) / 1440) + (qt_tempo_transporte_w/24),
				substr(obter_nome_agenda(cd_agenda),1,50),
				nm_paciente,
				substr(obter_nome_pf(cd_medico),1,50),
				cm_obter_dados_conjunto(nr_seq_conjunto_p,'T'),
				nr_minuto_duracao,
				obter_horario_formatado(nr_minuto_duracao/60)
			into STRICT	ds_conjunto_w,
				dt_agenda_w,
				hr_fim_w,
				ds_agenda_w,
				nm_paciente_w,
				nm_medico_w,
				qt_tempo_esterelizacao_w,
				nr_minuto_duracao_w,
				hr_duracao_w
			from	agenda_paciente
			where	nr_sequencia	= nr_seq_agenda_w;		
			
			ds_erro_w := wheb_mensagem_pck.get_texto(278534, 'DT_AGENDA_P=' || to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi') ||
									';DS_AGENDA_P=' || ds_agenda_w ||
									';NR_MINUTO_DURACAO_P=' || to_char(nr_minuto_duracao_w) ||
									';HR_DURACAO_P=' || hr_duracao_w ||
									';QT_TEMPO_ESTERILIZACAO_P=' || qt_tempo_esterelizacao_w ||
									';HR_FIM_P=' || to_char(hr_fim_w,'dd/mm/yyyy hh24:mi:ss'));			
		end if;
	end if;
end if;	

ds_erro_p := substr(ds_erro_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_se_cme_disp_aprovavao ( nr_seq_agenda_p bigint, nr_seq_conjunto_p bigint, ie_consiste_prazo_p text, nm_usuario_p text, cd_estabelecimento_p bigint, ds_erro_p INOUT text) FROM PUBLIC;

