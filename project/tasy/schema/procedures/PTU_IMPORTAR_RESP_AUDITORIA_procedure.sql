-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ptu_importar_resp_auditoria ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_execucao_p INOUT bigint) AS $body$
DECLARE


cd_transacao_w			varchar(5);
ie_tipo_cliente_w		varchar(15);
cd_unimed_executora_w		smallint;
cd_unimed_beneficiario_w	smallint;
nr_seq_origem_w			bigint;
ds_conteudo_w			varchar(4000);
dt_atendimento_ww		timestamp;
dt_validade_senha_w		timestamp;
ds_observacao_w			varchar(4000);
ie_tipo_tabela_w		varchar(3);
cd_servico_w			integer;
ds_servico_w			varchar(255);
qt_autorizada_w			smallint;
ie_autorizado_w			smallint;
cd_mens_espec_1			smallint;
cd_mens_espec_2			smallint;
cd_mens_espec_3			smallint;
cd_mens_espec_4			smallint;
cd_mens_espec_5			smallint;
ie_status_w			varchar(2);
nr_seq_auditoria_w		bigint;
ie_origem_proced_w		smallint;
nr_seq_prestador_w		bigint;
nr_seq_import_w			smallint;
nr_seq_transacao_w		bigint;
ie_tipo_transacao_w		varchar(3);
qt_reg_liberado_w		smallint;
qt_reg_liberado_ww		smallint;
qt_reg_negado_w			smallint;
qt_reg_negado_ww		smallint;
qt_registro_w			smallint;
qt_registro_ww			smallint;
nr_seq_procedimento_w		bigint;
nr_seq_material_w		bigint;
ie_tipo_resposta_w		varchar(2);
ie_status_ww			smallint;
nr_seq_compl_serv_w		bigint;
nr_seq_pedido_compl_w		bigint;
nr_seq_pedido_aut_w		bigint;
nr_seq_requisicao_w		bigint;
nr_seq_guia_w			bigint;
ie_tipo_servico_w		varchar(2);
nr_seq_congenere_w		bigint;
cd_cgc_outorgante_w		varchar(20);
ie_origem_proced_ww		bigint;
nr_seq_regra_w			bigint;
ie_status_item_w		varchar(255);
ds_estagio_req_w		varchar(255);
nm_usuario_item_w		varchar(255);
dt_atualizacao_item_w		timestamp;
cd_material_ops_w		varchar(255);
cd_procedimento_w		bigint;
cd_servico_conversao_w		bigint;
qt_reg_audit_w			bigint;
nr_seq_pedido_aut_serv_w	bigint;
ie_compara_desc_w		varchar(2)	:= 'N';
nr_seq_pedido_w			bigint;
ie_tipo_conversao_w		varchar(255);

c01 CURSOR FOR
	SELECT	nr_seq_importacao,
		ds_valores
	from	w_scs_importacao
	where	nm_usuario	= nm_usuario_p
	order by nr_seq_importacao;

C02 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_guia_plano_proc
	where	cd_procedimento 	= coalesce(cd_servico_conversao_w,cd_servico_w)
	and	nr_seq_guia		= nr_seq_guia_w
	
union

	SELECT	nr_sequencia
	from	pls_requisicao_proc
	where	cd_procedimento 	= coalesce(cd_servico_conversao_w,cd_servico_w)
	and	nr_seq_requisicao	= nr_seq_requisicao_w
	and	((ie_compara_desc_w	= 'S'
	and	Elimina_Acentuacao(upper(substr(obter_descricao_procedimento(cd_procedimento,ie_origem_proced),1,80)))	= Elimina_Acentuacao(upper(ds_servico_w)))
	or (ie_compara_desc_w	= 'N'));

C03 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_guia_plano_mat
	where	pls_obter_seq_codigo_material(nr_seq_material,'')	= coalesce(cd_servico_conversao_w,cd_servico_w)
	and	nr_seq_guia						= nr_seq_guia_w
	
union

	SELECT	nr_sequencia
	from	pls_requisicao_mat
	where (pls_obter_seq_codigo_material(nr_seq_material,'')	= coalesce(cd_servico_conversao_w,cd_servico_w)
	or	nr_seq_material						= coalesce(cd_servico_conversao_w,cd_servico_w))
	and	nr_seq_requisicao					= nr_seq_requisicao_w
	and	((ie_compara_desc_w					= 'S'
	and	Elimina_Acentuacao(upper(substr(pls_obter_desc_material(nr_seq_material),1,80)))	= Elimina_Acentuacao(upper(ds_servico_w)))
	or (ie_compara_desc_w	= 'N'));

C04 CURSOR FOR
	SELECT	nr_sequencia,
		CASE WHEN ds_opme='' THEN 'N'  ELSE 'S' END
	from	ptu_pedido_aut_servico
	where	nr_seq_pedido		= nr_seq_pedido_aut_w
	
union

	SELECT	nr_sequencia,
		CASE WHEN ds_opme='' THEN 'N'  ELSE 'S' END 
	from	ptu_pedido_compl_aut_serv
	where	nr_seq_pedido	= nr_seq_pedido_compl_w;


BEGIN

open c01;
loop
fetch c01 into
	nr_seq_import_w,
	ds_conteudo_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (substr(ds_conteudo_w,1,4)	<> 'FIM$') then
		if (nr_seq_import_w	= 1) then
			select  substr(ds_conteudo_w,1,5),
				trim(both substr(ds_conteudo_w,6,15)),
				CASE WHEN (substr(ds_conteudo_w,21,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,21,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,25,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,25,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,29,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,29,10))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,39,10))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,39,10))::numeric  END
			into STRICT	cd_transacao_w,
				ie_tipo_cliente_w,
				cd_unimed_executora_w,
				cd_unimed_beneficiario_w,
				nr_seq_execucao_p,
				nr_seq_origem_w
			;

			dt_atendimento_ww	:= substr(ds_conteudo_w,55,2)||substr(ds_conteudo_w,53,2)||substr(ds_conteudo_w,49,4);
			dt_validade_senha_w	:= to_date(to_char(dt_atendimento_ww,'dd/mm/yyyy'));

			begin
			select	coalesce(nr_seq_pedido_compl,0),
				coalesce(nr_seq_pedido_aut,0)
			into STRICT	nr_seq_pedido_compl_w,
				nr_seq_pedido_aut_w
			from	ptu_controle_execucao
			where	nr_sequencia	= nr_seq_execucao_p;
			exception
			when others then
				nr_seq_pedido_compl_w	:= 0;
				nr_seq_pedido_aut_w	:= 0;
			end;

			if (nr_seq_pedido_compl_w	<> 0) then
				select	nr_seq_guia,
					nr_seq_requisicao
				into STRICT	nr_seq_guia_w,
					nr_seq_requisicao_w
				from	ptu_pedido_compl_aut
				where	nr_sequencia	= nr_seq_pedido_compl_w;

				ie_tipo_resposta_w	:= 'PC';
				nr_seq_pedido_w		:= nr_seq_pedido_compl_w;
				ie_tipo_conversao_w	:= 'RAC';
			elsif (nr_seq_pedido_aut_w	<> 0) then
				select	nr_seq_guia,
					nr_seq_requisicao
				into STRICT	nr_seq_guia_w,
					nr_seq_requisicao_w
				from	ptu_pedido_autorizacao
				where	nr_sequencia	= nr_seq_pedido_aut_w;

				ie_tipo_resposta_w	:= 'PA';
				nr_seq_pedido_w		:= nr_seq_pedido_aut_w;
				ie_tipo_conversao_w	:= 'RA';
			elsif (nr_seq_pedido_compl_w	= 0) and (nr_seq_pedido_aut_w	= 0) then
				nr_seq_execucao_p	:= 0;
				goto final;
			end if;

			select	nextval('ptu_resposta_auditoria_seq')
			into STRICT	nr_seq_auditoria_w
			;

			if (ie_tipo_cliente_w	= 'UNIMED') then
				ie_tipo_cliente_w	:= 'U';
			elsif (ie_tipo_cliente_w	= 'PORTAL') then
				ie_tipo_cliente_w	:= 'P';
			elsif (ie_tipo_cliente_w	= 'PRESTADOR') then
				ie_tipo_cliente_w	:= 'R';
			end if;


			insert	into ptu_resposta_auditoria(nr_sequencia, cd_transacao, ie_tipo_cliente,
				 cd_unimed_executora, cd_unimed_beneficiario, nr_seq_execucao,
				 nr_seq_origem, dt_atualizacao, nm_usuario,
				 dt_validade, nr_seq_guia, nr_seq_requisicao,
				 ds_observacao, ds_arquivo_pedido)
			values (nr_seq_auditoria_w, cd_transacao_w, ie_tipo_cliente_w,
				 cd_unimed_executora_w, cd_unimed_beneficiario_w, nr_seq_execucao_p,
				 nr_seq_origem_w, clock_timestamp(), nm_usuario_p,
				 dt_validade_senha_w, nr_seq_guia_w, nr_seq_requisicao_w,
				 ' ', ds_arquivo_p);
		elsif (nr_seq_import_w	= 2) then
			select	trim(both substr(ds_conteudo_w,1,255))
			into STRICT	ds_observacao_w
			;

			update	ptu_resposta_auditoria
			set	ds_observacao	= ds_observacao_w
			where	nr_sequencia	= nr_seq_auditoria_w;
		elsif (substr(ds_conteudo_w,1,1) in ('0','1','2','3', '4'))  then
			select  substr(ds_conteudo_w,1,1),
				CASE WHEN (substr(ds_conteudo_w,2,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,2,8))::numeric  END ,
				trim(both substr(ds_conteudo_w,10,80)),
				CASE WHEN (substr(ds_conteudo_w,90,8))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,90,8))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,98,1))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,98,1))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,99,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,99,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,103,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,103,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,107,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,107,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,111,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,111,4))::numeric  END ,
				CASE WHEN (substr(ds_conteudo_w,115,4))::numeric =0 THEN ''  ELSE (substr(ds_conteudo_w,115,4))::numeric  END
			into STRICT	ie_tipo_tabela_w,
				cd_servico_w,
				ds_servico_w,
				qt_autorizada_w,
				ie_autorizado_w,
				cd_mens_espec_1,
				cd_mens_espec_2,
				cd_mens_espec_3,
				cd_mens_espec_4,
				cd_mens_espec_5
			;

			if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '')then
				nr_seq_transacao_w 	:= nr_seq_guia_w;
				ie_tipo_transacao_w	:= 'G';
			elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
				nr_seq_transacao_w	:= nr_seq_requisicao_w;
				ie_tipo_transacao_w	:= 'R';
			end if;

			if (ie_autorizado_w	= 1) then
				ie_status_w	:= 'N';
				ie_status_ww	:= 2;
			elsif (ie_autorizado_w	= 2) then
				ie_status_w	:= 'S';
				ie_status_ww	:= 1;
			end if;

			if (ie_tipo_tabela_w	in ('0','1', '4')) then
				open C04;
				loop
				fetch C04 into
					nr_seq_pedido_aut_serv_w,
					ie_compara_desc_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					cd_servico_conversao_w	:= ptu_obter_servico_conversao(	cd_servico_w, nr_seq_pedido_w, nr_seq_pedido_aut_serv_w,
												ie_tipo_conversao_w);
					open C02;
					loop
					fetch C02 into
						nr_seq_procedimento_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin
						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
							update	pls_guia_plano_proc
							set	ie_status	= ie_status_w,
								qt_autorizada	= CASE WHEN ie_status_w='N' THEN 0  ELSE qt_autorizada_w END
							where	nr_sequencia	= nr_seq_procedimento_w;
						elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
							select	a.ie_status,
								obter_valor_dominio(3431, b.ie_estagio),
								a.nm_usuario,
								a.dt_atualizacao,
								a.cd_procedimento
							into STRICT	ie_status_item_w,
								ds_estagio_req_w,
								nm_usuario_item_w,
								dt_atualizacao_item_w,
								cd_procedimento_w
							from	pls_requisicao		b,
								pls_requisicao_proc	a
							where	a.nr_sequencia		= nr_seq_procedimento_w
							and	a.nr_seq_requisicao	= b.nr_sequencia;

							if (ie_status_item_w	in ('I','A')) then
								update	pls_requisicao_proc
								set	ie_status	= ie_status_w,
									qt_procedimento	= CASE WHEN ie_status_w='N' THEN 0  ELSE qt_autorizada_w END
								where	nr_sequencia	= nr_seq_procedimento_w;
							else
								pls_requisicao_gravar_hist(	nr_seq_requisicao_w,'L',substr(cd_procedimento_w||' - Status não atualizado com a resposta '||
												' de auditoria da operadora de origem, requisição já '||
												ds_estagio_req_w||' internamente pelo usuário '||nm_usuario_item_w||
												' em '||to_char(dt_atualizacao_item_w,'dd/mm/yyyy hh24:mi:ss'),1,4000),null,
												nm_usuario_p);
							end if;
						end if;

						if (cd_mens_espec_1	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_1,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_2	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_2,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_3	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_3,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_4	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_4,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_5	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_5,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, nr_seq_procedimento_w, null, null, nm_usuario_p);
						end if;
						end;
					end loop;
					close C02;
					end;
				end loop;
				close C04;
			elsif (ie_tipo_tabela_w	in ('2','3')) then
				open C04;
				loop
				fetch C04 into
					nr_seq_pedido_aut_serv_w,
					ie_compara_desc_w;
				EXIT WHEN NOT FOUND; /* apply on C04 */
					begin
					cd_servico_conversao_w	:= ptu_obter_servico_conversao(	cd_servico_w, nr_seq_pedido_w, nr_seq_pedido_aut_serv_w,
												ie_tipo_conversao_w);

					open C03;
					loop
					fetch C03 into
						nr_seq_material_w;
					EXIT WHEN NOT FOUND; /* apply on C03 */
						begin
						if (nr_seq_guia_w IS NOT NULL AND nr_seq_guia_w::text <> '') then
							update	pls_guia_plano_mat
							set	ie_status	= ie_status_w,
								qt_autorizada	= CASE WHEN ie_status_w='N' THEN 0  ELSE qt_autorizada_w END
							where	nr_sequencia	= nr_seq_material_w;
						elsif (nr_seq_requisicao_w IS NOT NULL AND nr_seq_requisicao_w::text <> '') then
							select	a.ie_status,
								obter_valor_dominio(3431, b.ie_estagio),
								a.nm_usuario,
								a.dt_atualizacao,
								pls_obter_seq_codigo_material(nr_seq_material,'')
							into STRICT	ie_status_item_w,
								ds_estagio_req_w,
								nm_usuario_item_w,
								dt_atualizacao_item_w,
								cd_material_ops_w
							from	pls_requisicao		b,
								pls_requisicao_mat	a
							where	a.nr_sequencia		= nr_seq_material_w
							and	a.nr_seq_requisicao	= b.nr_sequencia;

							if (ie_status_item_w	in ('I','A')) then
								update	pls_requisicao_mat
								set	ie_status	= ie_status_w,
									qt_material	= CASE WHEN ie_status_w='N' THEN 0  ELSE qt_autorizada_w END
								where	nr_sequencia	= nr_seq_material_w;
							else
								pls_requisicao_gravar_hist(	nr_seq_requisicao_w,'L',substr(cd_material_ops_w||' - Status não atualizado com a resposta '
												||'de auditoria da operadora de origem, requisição já '||
												ds_estagio_req_w||' internamente pelo usuário '||nm_usuario_item_w||
												' em '||to_char(dt_atualizacao_item_w,'dd/mm/yyyy hh24:mi:ss'),1,4000),null,
												nm_usuario_p);
							end if;
						end if;

						if (cd_mens_espec_1	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_1,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_2	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_2,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_3	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_3,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_4	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_4,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;

						if (cd_mens_espec_5	<> 0) then
							CALL ptu_inserir_inconsistencia(	null, null, cd_mens_espec_5,'',cd_estabelecimento_p, nr_seq_transacao_w, ie_tipo_transacao_w,
											cd_transacao_w, null, nr_seq_material_w, null, nm_usuario_p);
						end if;
						end;
					end loop;
					close C03;
					end;
				end loop;
				close C04;
			end if;

			select	max(ie_origem_proced)
			into STRICT	ie_origem_proced_w
			from    procedimento
			where   cd_procedimento		= cd_servico_w
			and	ie_origem_proced	in (1,4,5)
			and	ie_situacao		= 'A';

			insert	into ptu_resp_auditoria_servico(nr_sequencia, ie_tipo_tabela, cd_servico,
				 ie_origem_servico, ds_servico, ie_autorizado,
				 dt_atualizacao, nm_usuario, qt_autorizado,
				 nr_seq_auditoria, cd_servico_conversao)
			values (nextval('ptu_resp_auditoria_servico_seq'), ie_tipo_tabela_w, cd_servico_w,
				 ie_origem_proced_w, coalesce(ds_servico_w,'Não encontrado'), ie_autorizado_w,
				 clock_timestamp(), nm_usuario_p, qt_autorizada_w,
				 nr_seq_auditoria_w, cd_servico_conversao_w);
		end if;
	end if;

	end;
end loop;
close c01;

if (ie_tipo_transacao_w	= 'G') then
	select	count(1)
	into STRICT	qt_reg_liberado_w
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_w
	and	ie_status	= 'S';

	select	count(1)
	into STRICT	qt_reg_liberado_ww
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_w
	and	ie_status	= 'S';

	qt_registro_w	:= qt_reg_liberado_w + qt_reg_liberado_ww;

	select	count(1)
	into STRICT	qt_reg_negado_w
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_w
	and	ie_status	= 'N';

	select	count(1)
	into STRICT	qt_reg_negado_ww
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_w
	and	ie_status	= 'N';

	qt_registro_ww	:= qt_reg_negado_w + qt_reg_negado_ww;

	if (qt_registro_w	> 0) and (qt_registro_ww = 0) then
		update	pls_guia_plano
		set	ie_estagio		= 6,
			ie_status		= 1,
			dt_autorizacao		= clock_timestamp(),
			nm_usuario_liberacao	= nm_usuario_p
		where	nr_sequencia		= nr_seq_guia_w;
	elsif (qt_registro_w	> 0) and (qt_registro_ww > 0) then
		update	pls_guia_plano
		set	ie_estagio		= 10,
			ie_status		= 1,
			dt_autorizacao		= clock_timestamp(),
			nm_usuario_liberacao	= nm_usuario_p
		where	nr_sequencia		= nr_seq_guia_w;
	elsif (qt_registro_w	= 0) and (qt_registro_ww > 0) then
		update	pls_guia_plano
		set	ie_estagio		= 4,
			ie_status		= 3,
			dt_autorizacao		= clock_timestamp(),
			nm_usuario_liberacao	= nm_usuario_p
		where	nr_sequencia		= nr_seq_guia_w;
	end if;

	CALL pls_guia_gravar_historico(nr_seq_guia_w,2,substr('Recebida e processada a resposta de auditoria da Unimed '||cd_unimed_beneficiario_w||' com a mensagem: '||chr(10)||ds_observacao_w,1,4000),'',nm_usuario_p);
elsif (ie_tipo_transacao_w	= 'R') then
	select	count(1)
	into STRICT	qt_reg_liberado_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	ie_status	= 'S';

	select	count(1)
	into STRICT	qt_reg_liberado_ww
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	ie_status	= 'S';

	qt_registro_w	:= qt_reg_liberado_w + qt_reg_liberado_ww;

	select	count(1)
	into STRICT	qt_reg_negado_w
	from	pls_requisicao_proc
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	ie_status	= 'N';

	select	count(1)
	into STRICT	qt_reg_negado_ww
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	ie_status	= 'N';

	qt_registro_ww	:= qt_reg_negado_w + qt_reg_negado_ww;

	if (qt_registro_w > 0) and (qt_registro_ww > 0) then
		update	pls_requisicao
		set	ie_estagio		= 6,
			dt_valid_senha_ext	= dt_validade_senha_w,
			dt_validade_senha	= dt_validade_senha_w,
			cd_senha_externa	= nr_seq_origem_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_requisicao_w;
	elsif (qt_registro_ww > 0) and (qt_registro_w = 0) then
		update	pls_requisicao
		set	ie_estagio		= 7,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_requisicao_w;
	elsif (qt_registro_ww = 0) and (qt_registro_w > 0) then
		update	pls_requisicao
		set	ie_estagio		= 2,
			dt_valid_senha_ext	= dt_validade_senha_w,
			dt_validade_senha	= dt_validade_senha_w,
			cd_senha_externa	= nr_seq_origem_w,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_sequencia		= nr_seq_requisicao_w;
	end if;

	select	count(1)
	into STRICT	qt_reg_audit_w
	from	pls_auditoria
	where	nr_seq_requisicao	= nr_seq_requisicao_w
	and	coalesce(dt_liberacao::text, '') = '';

	if (qt_reg_audit_w	> 0) then
		update	pls_auditoria
		set	dt_liberacao		= clock_timestamp(),
			ie_status		= 'F',
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_requisicao	= nr_seq_requisicao_w
		and	ie_status		= 'A';

		update	pls_auditoria_item
		set	ie_status		= CASE WHEN ie_status_w='S' THEN 'A'  ELSE 'N' END ,
			ie_status_solicitacao	= CASE WHEN ie_status_w='S' THEN 'A'  ELSE 'N' END ,
			dt_atualizacao		= clock_timestamp(),
			nm_usuario		= nm_usuario_p
		where	nr_seq_auditoria	in (	SELECT	nr_sequencia
							from	pls_auditoria
							where	nr_seq_requisicao	= nr_seq_requisicao_w)
		and	ie_status	= 'P';
	end if;

	CALL pls_requisicao_gravar_hist(nr_seq_requisicao_w,'L',substr('Recebida e processada a resposta de auditoria da Unimed '||cd_unimed_beneficiario_w||' com a mensagem: '||chr(10)||ds_observacao_w,1,4000),null,nm_usuario_p);
end if;

CALL ptu_gerar_confirmacao(nr_seq_execucao_p, cd_estabelecimento_p, 'RA', nm_usuario_p);

<<final>>
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ptu_importar_resp_auditoria ( ds_arquivo_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_execucao_p INOUT bigint) FROM PUBLIC;

