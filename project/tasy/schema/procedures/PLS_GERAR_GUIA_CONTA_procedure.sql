-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_guia_conta ( nr_seq_protocolo_p bigint, nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_conta_p INOUT bigint) AS $body$
DECLARE


ds_diagnostico_w		varchar(2000);
dt_emissao_w			varchar(30);
cd_guia_w			pls_guia_plano.cd_guia%type;
nr_crm_exec_w			varchar(20);
sg_conselho_exec_w		varchar(20);
cd_medico_exec_w		pls_guia_plano.cd_medico_solicitante%type;
cd_medico_solicitante_w		varchar(10);
cd_cooperativa_w		varchar(10);
cd_doenca_w			varchar(10);
ie_pagamento_automatico_w	pls_guia_plano.ie_pagamento_automatico%type;
ie_tipo_guia_w			pls_guia_plano.ie_tipo_guia%type;
ie_tipo_proc_w			varchar(2);
uf_crm_exec_w			valor_dominio.vl_dominio%type;
ie_parametro_w			varchar(2);
ie_tipo_atend_tiss_w		pls_guia_plano.ie_tipo_atend_tiss%type;
ie_acao_regra_w			varchar(2);
ie_carater_internacao_w		pls_guia_plano.ie_carater_internacao%type;
ie_classificacao_proc_w		varchar(1);
ie_tipo_doenca_w		varchar(1);
ie_indicacao_acidente_w		varchar(1);
ie_classificacao_w		varchar(1);
ie_tipo_saida_w			pls_guia_plano.ie_tipo_saida%type;
nr_seq_segurado_w		pls_guia_plano.nr_seq_segurado%type;
nr_seq_prestador_w		pls_guia_plano.nr_seq_prestador%type;
nr_seq_tipo_atendimento_w	bigint;
nr_seq_conta_w			bigint;
cd_estabelecimento_w		pls_guia_plano.cd_estabelecimento%type;
cd_proc_mat_w			bigint;
ie_origem_proced_w		bigint;
nr_seq_cbo_saude_w		bigint;
nr_seq_conta_mat_w		bigint;
nr_seq_conta_proc_w		bigint;
nr_seq_conselho_exec_w		bigint;
ie_tipo_consulta_w		pls_guia_plano.ie_tipo_consulta%type;
ie_estagio_complemento_w	pls_guia_plano.ie_estagio_complemento%type;
nr_seq_prest_fornec_w		bigint;
nr_seq_tipo_acomodacao_w	pls_guia_plano.nr_seq_tipo_acomodacao%type;
nr_seq_regra_pend_w		bigint;
nr_seq_saida_spsadt_w		bigint;
nr_seq_saida_consulta_w		bigint;
nr_seq_saida_internacao_w	bigint;
qt_solicitada_w			pls_conta_proc.qt_procedimento%type;
qt_autorizada_w			pls_conta_proc.qt_procedimento%type;
nr_seq_conta_proc_ww		bigint;
dt_liberacao_w			timestamp;
nr_seq_prestador_solic_w 	bigint;
ie_recem_nascido_w		pls_guia_plano.ie_recem_nascido%type;
nm_recem_nascido_w		pls_guia_plano.nm_recem_nascido%type;
dt_nasc_recem_nascido_w		pls_guia_plano.dt_nasc_recem_nascido%type;
nr_seq_guia_w			pls_guia_plano.nr_sequencia%type;
cd_guia_principal_w		pls_guia_plano.cd_guia_principal%type;
cd_especialidade_w		pls_guia_plano.cd_especialidade%type;
nr_seq_cbo_saude_solic_w	pls_guia_plano.nr_seq_cbo_saude%type;
nr_seq_clinica_w		pls_guia_plano.nr_seq_clinica%type;
ie_regime_internacao_w		pls_guia_plano.ie_regime_internacao%type;
nr_seq_guia_aux_w		pls_guia_plano.nr_sequencia%type;
cd_cnes_w			pls_conta.cd_cnes%type;
ds_incicacao_clinica_w		pls_guia_plano.ds_indicacao_clinica%type;
dt_autorizacao_w		pls_guia_plano.dt_autorizacao%type;
cd_senha_w			pls_guia_plano.cd_senha%type;
dt_validade_senha_w		pls_guia_plano.dt_validade_senha%type;
cd_guia_prestador_w		pls_guia_plano.cd_guia_prestador%type;
cd_senha_externa_w		pls_guia_plano.cd_senha_externa%type;
vl_item_w			pls_guia_plano_mat.vl_material%type;
vl_mat_apres_w			double precision;
ie_forma_complemento_w		pls_web_param_geral.ie_forma_compl_guia%type;
ie_medico_requisicao_compl_w	pls_parametros.ie_medico_requisicao_compl%type;
nr_seq_prestador_exec_req_w	pls_requisicao.nr_seq_prestador_exec%type;
cd_medico_exec_req_w		pls_execucao_req_item.cd_medico_executor%type;
ie_gera_partic_w		varchar(2) := 'N';
nr_seq_grau_partic_regra_w	pls_proc_participante.nr_seq_grau_partic%type;
nr_seq_grau_partic_w		pls_grau_participacao.nr_sequencia%type;
cd_medico_partic_w		pls_guia_plano.cd_medico_solicitante%type;
nr_seq_cbo_partic_w		pls_proc_participante.nr_seq_cbo_saude%type;
nr_seq_item_tiss_w		pls_guia_plano_proc.nr_seq_item_tiss%type;


cd_validacao_benef_tiss_w	pls_conta_tiss.cd_validacao_benef_tiss%type;
cd_ausencia_val_benef_tiss_w	pls_conta_tiss.cd_ausencia_val_benef_tiss%type;
cd_ident_biometria_benef_w	pls_conta_tiss.cd_ident_biometria_benef%type;
cd_template_biomet_benef_w	pls_conta_tiss.cd_template_biomet_benef%type;
ie_tipo_ident_benef_w		pls_conta_tiss.ie_tipo_ident_benef%type;
ie_regime_atendimento_w		pls_guia_plano.ie_regime_atendimento%type;
ie_saude_ocupacional_w		pls_guia_plano.ie_saude_ocupacional%type;


C01 CURSOR FOR
	SELECT	cd_procedimento cd_proc_mat,
		qt_solicitada,
		qt_autorizada,
		ie_origem_proced,
		'P'	ie_tipo_proc,
		null	nr_seq_prest_fornec,
		dt_liberacao,
		vl_procedimento	vl_item,
		nr_seq_item_tiss
	from	pls_guia_plano_proc
	where	nr_seq_guia	= nr_seq_guia_aux_w
	and	pls_conta_autor_pck.pls_obter_ie_utilizado_guia(nr_seq_guia, nr_sequencia, null, cd_estabelecimento_p)	in ('P','N')
	and	coalesce(nr_seq_motivo_exc::text, '') = ''
	and	ie_status 	in ('L', 'P', 'S')
	
union all

	SELECT	nr_seq_material cd_proc_mat,
		qt_solicitada,
		qt_autorizada,
		null,
		'M'	ie_tipo_proc,
		nr_seq_prest_fornec nr_seq_prest_fornec,
		dt_liberacao,
		vl_material vl_item,
		nr_seq_item_tiss
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_aux_w
	and	pls_conta_autor_pck.pls_obter_ie_utilizado_guia(nr_seq_guia, null, nr_sequencia, cd_estabelecimento_p)	in ('P','N')
	and	coalesce(nr_seq_motivo_exc::text, '') = ''
	and	ie_status 	in ('L', 'P', 'S')
	order by	2,1;

C02 CURSOR FOR
	SELECT	cd_doenca,
		ie_tipo_doenca,
		ie_indicacao_acidente,
		ie_classificacao,
		ds_diagnostico
	from 	pls_diagnostico
	where	nr_seq_guia = nr_seq_guia_p;

C03 CURSOR(nr_seq_guia_pc	pls_guia_plano.nr_sequencia%type) FOR
	SELECT	nr_sequencia,
		'S' ie_principal
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p
	
union all

	SELECT	nr_sequencia,
		'N' ie_principal
	from	pls_guia_plano
	where	nr_seq_guia_principal	= nr_seq_guia_p
	and	ie_status             	= '1'
	and	ie_estagio		<> 8
	and	ie_estagio_complemento	=  1
	and	lower(ie_forma_complemento_w)	= lower('p')
	and	coalesce(ie_pagamento_automatico_w,'N') <> 'PA';
BEGIN

select	cd_guia,
	nr_seq_segurado,
	nr_seq_prestador,
	cd_medico_solicitante,
	CASE WHEN ie_tipo_guia=1 THEN 5 WHEN ie_tipo_guia=2 THEN 4 WHEN ie_tipo_guia=3 THEN 3 WHEN ie_tipo_guia=8 THEN 5 END ,
	ie_carater_internacao,
	ie_tipo_atend_tiss,
	cd_estabelecimento,
	substr(obter_dados_medico(cd_medico_solicitante,'CRM'),1,255),
	substr(obter_dados_medico(cd_medico_solicitante,'UFCRM'),1,255),
	substr(obter_dados_medico(cd_medico_solicitante, 'SGCRM'),1,255),
	to_char(dt_solicitacao,'dd/mm/yyyy hh24:mi:ss'),
	substr(obter_cooperativa_benef(nr_seq_segurado,cd_estabelecimento),1,4),
	ie_tipo_consulta,
	ie_pagamento_automatico,
	ie_estagio_complemento,
	nr_seq_tipo_acomodacao,
	ie_tipo_saida,
	nr_sequencia,
	cd_guia_principal,
	cd_especialidade,
	nr_seq_cbo_saude,
	ie_recem_nascido,
	nm_recem_nascido,
	dt_nasc_recem_nascido,
	nr_seq_clinica,
	ie_regime_internacao,
	ds_indicacao_clinica,
	dt_autorizacao,
	cd_senha,
	dt_validade_senha,
	coalesce(cd_guia_prestador,cd_guia),
	cd_senha_externa,
	( 	select 	max(nr_seq_grau_partic)
		from	pls_regra_conta_aut c
		where	c.nr_sequencia = nr_seq_pgto_aut) nr_seq_grau_partic_regra,
	cd_validacao_benef_tiss,
	cd_ausencia_val_benef_tiss,
	cd_ident_biometria_benef,
	cd_template_biomet_benef,
	ie_tipo_ident_benef,
	ie_regime_atendimento,
	ie_saude_ocupacional
into STRICT	cd_guia_w,
	nr_seq_segurado_w,
	nr_seq_prestador_w,
	cd_medico_exec_w,
	ie_tipo_guia_w,
	ie_carater_internacao_w,
	ie_tipo_atend_tiss_w,
	cd_estabelecimento_w,
	nr_crm_exec_w,
	uf_crm_exec_w,
	sg_conselho_exec_w,
	dt_emissao_w,
	cd_cooperativa_w,
	ie_tipo_consulta_w,
	ie_pagamento_automatico_w,
	ie_estagio_complemento_w,
	nr_seq_tipo_acomodacao_w,
	ie_tipo_saida_w,
	nr_seq_guia_w,
	cd_guia_principal_w,
	cd_especialidade_w,
	nr_seq_cbo_saude_solic_w,
	ie_recem_nascido_w,
	nm_recem_nascido_w,
	dt_nasc_recem_nascido_w,
	nr_seq_clinica_w,
	ie_regime_internacao_w,
	ds_incicacao_clinica_w,
	dt_autorizacao_w,
	cd_senha_w,
	dt_validade_senha_w,
	cd_guia_prestador_w,
	cd_senha_externa_w,
	nr_seq_grau_partic_regra_w,
	cd_validacao_benef_tiss_w,
	cd_ausencia_val_benef_tiss_w,
	cd_ident_biometria_benef_w,
	cd_template_biomet_benef_w,
	ie_tipo_ident_benef_w,
	ie_regime_atendimento_w,
	ie_saude_ocupacional_w
from	pls_guia_plano
where	nr_sequencia	= nr_seq_guia_p;

begin
	select	max(nr_sequencia)
	into STRICT	nr_seq_tipo_atendimento_w
	from	pls_tipo_atendimento
	where	(cd_tiss)::numeric 	= ie_tipo_atend_tiss_w
	and	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	nr_seq_tipo_atendimento_w	:= null;
end;

if (coalesce(nr_seq_tipo_atendimento_w::text, '') = '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_tipo_atendimento_w
	from	pls_tipo_atendimento
	where	cd_tipo_atendimento	= ie_tipo_atend_tiss_w;
end if;

if (ie_tipo_guia_w = '2') then
	begin
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_saida_spsadt_w
	from	pls_motivo_saida_sadt	a
	where	a.cd_tiss		= ie_tipo_saida_w
	and	a.ie_situacao		= 'A'
	and	a.cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		nr_seq_saida_spsadt_w	:= null;
	end;
elsif (ie_tipo_guia_w = '3') then

	nr_seq_cbo_saude_w := nr_seq_cbo_saude_solic_w;
	begin
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_saida_consulta_w
	from	pls_motivo_saida_consulta	a
	where	a.cd_tiss		= ie_tipo_saida_w
	and	a.ie_situacao		= 'A'
	and	a.cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		nr_seq_saida_consulta_w	:= null;
	end;
else
	begin
	select	max(a.nr_sequencia)
	into STRICT	nr_seq_saida_internacao_w
	from	pls_motivo_saida	a
	where	a.cd_tiss		= ie_tipo_saida_w
	and	a.ie_situacao		= 'A'
	and	a.cd_estabelecimento	= cd_estabelecimento_p;
	exception
	when others then
		nr_seq_saida_internacao_w	:= null;
	end;
end if;

cd_medico_solicitante_w	:= cd_medico_exec_w;
nr_seq_cbo_partic_w	:= nr_seq_cbo_saude_solic_w;

-- carrega o prestador requisicao
select	max(coalesce(c.nr_seq_prestador_exec,d.nr_seq_prestador)),
	max(a.cd_medico_executor)
into STRICT	nr_seq_prestador_exec_req_w,
	cd_medico_exec_req_w
from	pls_guia_plano    	b,
	pls_execucao_req_item 	a,
	pls_requisicao   	c,
	pls_execucao_requisicao d
where 	b.nr_sequencia    	= a.nr_seq_guia
and   	d.nr_sequencia 		= a.nr_seq_execucao
and 	a.nr_seq_requisicao   	= c.nr_sequencia
and 	(a.nr_seq_requisicao IS NOT NULL AND a.nr_seq_requisicao::text <> '')
and	a.nr_seq_guia 		= nr_seq_guia_w;

select	coalesce(max(a.ie_medico_requisicao_compl),'N')
into STRICT	ie_medico_requisicao_compl_w
from	pls_parametros	a
where	a.cd_estabelecimento	= cd_estabelecimento_p;



-- seleciona o medico executor conforme parametro
if (ie_medico_requisicao_compl_w	= 'S') and (ie_tipo_guia_w			= '3') then

	-- se existir o prestador da requisicao
	if (nr_seq_prestador_exec_req_w IS NOT NULL AND nr_seq_prestador_exec_req_w::text <> '') then

		select 	max(p.cd_pessoa_fisica)
		into STRICT	cd_medico_exec_w
		from	pls_prestador	p,
			medico		m
		where	p.nr_sequencia 		= nr_seq_prestador_exec_req_w
		and	p.cd_pessoa_fisica	= m.cd_pessoa_fisica;

		if (cd_medico_exec_w IS NOT NULL AND cd_medico_exec_w::text <> '') then

			nr_crm_exec_w		:= substr(obter_dados_medico(cd_medico_exec_w,'CRM'),1,20);
			uf_crm_exec_w		:= substr(obter_dados_medico(cd_medico_exec_w,'UFCRM'),1,2);
			sg_conselho_exec_w	:= substr(obter_dados_medico(cd_medico_exec_w, 'SGCRM'),1,20);

			select	max(nr_seq_cbo_saude)
			into STRICT	nr_seq_cbo_saude_w
			from	medico_especialidade
			where	cd_pessoa_fisica	= cd_medico_exec_w
			and	nr_seq_prioridade	=	(SELECT	min(nr_seq_prioridade)
								from	medico_especialidade
								where	cd_pessoa_fisica	= cd_medico_exec_w
								and	(nr_seq_cbo_saude IS NOT NULL AND nr_seq_cbo_saude::text <> ''));

		end if;

	end if;

elsif (ie_medico_requisicao_compl_w	= 'E') and (cd_medico_exec_req_w IS NOT NULL AND cd_medico_exec_req_w::text <> '') and (ie_tipo_guia_w IS NOT NULL AND ie_tipo_guia_w::text <> '') then

	cd_medico_exec_w	:= cd_medico_exec_req_w;
	nr_crm_exec_w		:= substr(obter_dados_medico(cd_medico_exec_w,'CRM'),1,20);
	uf_crm_exec_w		:= substr(obter_dados_medico(cd_medico_exec_w,'UFCRM'),1,2);
	sg_conselho_exec_w	:= substr(obter_dados_medico(cd_medico_exec_w, 'SGCRM'),1,20);

	select	max(nr_seq_cbo_saude)
	into STRICT	nr_seq_cbo_saude_w
	from	medico_especialidade
	where	cd_pessoa_fisica	= cd_medico_exec_w
	and	nr_seq_prioridade	=	(SELECT	min(nr_seq_prioridade)
						from	medico_especialidade
						where	cd_pessoa_fisica	= cd_medico_exec_w
						and	(nr_seq_cbo_saude IS NOT NULL AND nr_seq_cbo_saude::text <> ''));

end if;


cd_medico_partic_w	:= cd_medico_exec_w;

nr_seq_regra_pend_w := pls_obter_regra_autor_pend(ie_tipo_guia_w, nr_seq_regra_pend_w);

if (coalesce(nr_seq_regra_pend_w::text, '') = '') then
	ie_parametro_w	:= obter_valor_param_usuario(1208,30,Obter_Perfil_Ativo,nm_usuario_p,cd_estabelecimento_p);
else
	select	coalesce(max(a.ie_acao_regra),'R')
	into STRICT	ie_acao_regra_w
	from	pls_regra_autorizacao_pend	a
	where	a.nr_sequencia	= nr_seq_regra_pend_w;

	if (ie_acao_regra_w = 'R') then
		ie_parametro_w	:= obter_valor_param_usuario(1208,30,Obter_Perfil_Ativo,nm_usuario_p,cd_estabelecimento_p);
	elsif (ie_acao_regra_w = 'N') then
		ie_parametro_w	:= 'N';
	elsif (ie_acao_regra_w = 'S') then
		ie_parametro_w	:= 'S';
	elsif (ie_acao_regra_w = 'E') then
		ie_parametro_w	:= 'E';
	end if;
end if;

if (ie_estagio_complemento_w <> 1) then
	if (ie_parametro_w	= 'E') then
		cd_medico_solicitante_w	:= null;
	elsif (ie_parametro_w	= 'S') then
		cd_medico_exec_w := null;
		nr_crm_exec_w	 := null;
		uf_crm_exec_w	 := null;
		sg_conselho_exec_w	:= null;
		nr_seq_cbo_saude_w	:= null;
	elsif (ie_parametro_w	= 'N') then
		cd_medico_exec_w	:= null;
		cd_medico_solicitante_w	:= null;
		nr_crm_exec_w		:= null;
		uf_crm_exec_w		:= null;
		sg_conselho_exec_w	:= null;
		nr_seq_cbo_saude_w	:= null;
	end if;
end if;



--OS 818611 - Alterado para carregar as informacoes de recem nascido direto da guia.
begin
	select	max(c.nr_seq_prestador)
	into STRICT	nr_seq_prestador_solic_w
	from	pls_guia_plano		b,
		pls_execucao_req_item	a,
		pls_requisicao 		c
	where	b.nr_sequencia 		= a.nr_seq_guia
	and	a.nr_seq_requisicao 	= c.nr_sequencia
	and	(a.nr_seq_requisicao IS NOT NULL AND a.nr_seq_requisicao::text <> '')
	and	a.nr_seq_guia 		= nr_seq_guia_w;
exception
when others then
	nr_seq_prestador_solic_w 	:= nr_seq_prestador_w;
end;

select	substr(pls_obter_seq_conselho_prof(cd_medico_exec_w),1,255)
into STRICT	nr_seq_conselho_exec_w
;

if (ie_tipo_guia_w = '5') and (coalesce(cd_guia_principal_w::text, '') = '') then
	cd_guia_principal_w	:= cd_guia_w;
end if;

if (ie_tipo_guia_w = '4') then



	cd_medico_exec_w	:= null;
	nr_crm_exec_w		:= null;
	uf_crm_exec_w		:= null;
	sg_conselho_exec_w	:= null;
end if;

cd_cnes_w:= pls_obter_cnes_prestador(nr_seq_prestador_w);

select	nextval('pls_conta_seq')
into STRICT	nr_seq_conta_w
;

--De acordo com manual TISS, tamanho do campo devera ser de 500 caracteres.
ds_incicacao_clinica_w := substr(ds_incicacao_clinica_w, 1, 500);

insert into pls_conta(nr_sequencia, cd_guia_prestador, dt_emissao,
	nr_seq_segurado, nr_seq_prestador_exec, cd_medico_executor,
	ie_tipo_guia, ie_carater_internacao, nr_seq_tipo_atendimento,
	ie_status, nr_seq_protocolo, nr_seq_saida_spsadt,
	dt_atualizacao, nm_usuario, dt_atualizacao_nrec,
	nm_usuario_nrec, cd_estabelecimento, nr_crm_exec,
	nr_seq_cbo_saude, uf_crm_exec, sg_conselho_exec,
	cd_guia, cd_medico_solicitante, cd_cooperativa,
	ie_tipo_consulta, nr_seq_conselho_exec,
	vl_adic_co,vl_adic_materiais,vl_adic_procedimento,
	vl_cobrado,vl_coparticipacao,vl_diarias,
	vl_diarias_imp,vl_gases,vl_gases_imp,
	vl_glosa,vl_liberado_ptu,vl_materiais,
	vl_materiais_imp,vl_medicamentos,vl_medicamentos_imp,
	vl_opm,vl_opm_imp,vl_pacotes,
	vl_pagamento_medico,vl_procedimentos,vl_procedimentos_imp,
	vl_saldo,vl_taxas,vl_taxas_imp,
	vl_total,vl_total_beneficiario,vl_total_imp,
	nr_seq_tipo_acomodacao, ie_origem_conta,nr_seq_guia,
	nr_seq_saida_consulta, nr_seq_saida_int,
	nr_seq_prestador, dt_nascimento,
	nm_recem_nascido, ie_recem_nascido, cd_guia_referencia,
	nr_seq_cbo_saude_solic,nr_seq_clinica,ie_regime_internacao,
	cd_cnes, ds_indicacao_clinica,dt_autorizacao,cd_senha,dt_validade_senha,
	cd_senha_externa, ie_regime_atendimento, ie_saude_ocupacional)
values (nr_seq_conta_w, cd_guia_prestador_w, to_date(dt_emissao_w,'dd/mm/yyyy hh24:mi:ss'),
	nr_seq_segurado_w, nr_seq_prestador_w, cd_medico_exec_w,
	ie_tipo_guia_w, ie_carater_internacao_w, nr_seq_tipo_atendimento_w,
	'U', nr_seq_protocolo_p, nr_seq_saida_spsadt_w,
	clock_timestamp(), nm_usuario_p, clock_timestamp(),
	nm_usuario_p, coalesce(cd_estabelecimento_p, cd_estabelecimento_w), nr_crm_exec_w,
	nr_seq_cbo_saude_w, uf_crm_exec_w, sg_conselho_exec_w,
	cd_guia_w, cd_medico_solicitante_w, cd_cooperativa_w,
	ie_tipo_consulta_w, nr_seq_conselho_exec_w,
	0,0,0,
	0,0,0,
	0,0,0,
	0,0,0,
	0,0,0,
	0,0,0,
	0,0,0,
	0,0,0,
	0,0,0,
	nr_seq_tipo_acomodacao_w, 'T',nr_seq_guia_p,
	nr_seq_saida_consulta_w, nr_seq_saida_internacao_w,
	nr_seq_prestador_solic_w,dt_nasc_recem_nascido_w,
	nm_recem_nascido_w,coalesce(ie_recem_nascido_w,'N'), cd_guia_principal_w,
	nr_seq_cbo_saude_solic_w,nr_seq_clinica_w,ie_regime_internacao_w,
	cd_cnes_w, ds_incicacao_clinica_w,dt_autorizacao_w,cd_senha_w,dt_validade_senha_w,
	cd_senha_externa_w, ie_regime_atendimento_w, ie_saude_ocupacional_w);

CALL pls_conta_tiss_pck.criar_registro(	nr_seq_conta_w,			cd_estabelecimento_p,		cd_validacao_benef_tiss_w,
					cd_ausencia_val_benef_tiss_w,	cd_ident_biometria_benef_w,	cd_template_biomet_benef_w,
					ie_tipo_ident_benef_w,		null,	nm_usuario_p);

open C02;
loop
fetch C02 into
	cd_doenca_w,
	ie_tipo_doenca_w,
	ie_indicacao_acidente_w,
	ie_classificacao_w,
	ds_diagnostico_w;
EXIT WHEN NOT FOUND; /* apply on C02 */

	insert into pls_diagnostico_conta(nr_sequencia,
		cd_doenca,
		ie_tipo_doenca,
		ie_indicacao_acidente,
		ie_classificacao,
		ds_diagnostico,
		dt_atualizacao,
		nm_usuario,
		nr_seq_conta)
	values (nextval('pls_diagnostico_conta_seq'),
		cd_doenca_w,
		ie_tipo_doenca_w,
		ie_indicacao_acidente_w,
		ie_classificacao_w,
		ds_diagnostico_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_conta_w);

	if (ie_indicacao_acidente_w IS NOT NULL AND ie_indicacao_acidente_w::text <> '') then
		update	pls_conta
		set	ie_indicacao_acidente = ie_indicacao_acidente_w
		where	nr_sequencia = nr_seq_conta_w;
	end if;

end loop;
close C02;

select	coalesce(max(ie_forma_compl_guia),'p')
into STRICT	ie_forma_complemento_w
from	pls_web_param_geral
where	cd_estabelecimento = cd_estabelecimento_w;

for r_03_w in C03(nr_seq_guia_p) loop

	nr_seq_guia_aux_w	:= r_03_w.nr_sequencia;

	open C01;
	loop
	fetch C01 into
		cd_proc_mat_w,
		qt_solicitada_w,
		qt_autorizada_w,
		ie_origem_proced_w,
		ie_tipo_proc_w,
		nr_seq_prest_fornec_w,
		dt_liberacao_w,
		vl_item_w,
		nr_seq_item_tiss_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin

		if (ie_tipo_proc_w = 'P') then
			begin
				select	ie_classificacao
				into STRICT	ie_classificacao_proc_w
				from	procedimento
				where	cd_procedimento		= cd_proc_mat_w
				and	ie_origem_proced	= ie_origem_proced_w;
			exception
			when others then
				ie_classificacao_proc_w	:= '1';
			end;

			/*Alteracao realizada para fazer o tratamento da quantidade que ja foi executada pelo item*/

			select	max(a.nr_seq_item)
			into STRICT	nr_seq_conta_proc_ww
			from	pls_conta_autor_utilizada_v	a,
				pls_conta			b
			where	a.nr_seq_guia		=  nr_seq_guia_p
			and	a.nr_seq_conta		!= nr_seq_conta_w
			and	a.cd_procedimento 	= cd_proc_mat_w
			and	a.ie_origem_proced	= ie_origem_proced_w
			and	b.nr_sequencia		= a.nr_seq_conta
			and	b.ie_estagio_complemento <> '1';

			if (nr_seq_conta_proc_ww IS NOT NULL AND nr_seq_conta_proc_ww::text <> '')        then
				/*tem que pegar o max para sempre utilizar o ultimo registro da guia*/

				select 	coalesce(max(qt_saldo),0)
				into STRICT	qt_solicitada_w
				from 	table(pls_conta_autor_pck.obter_dados(nr_seq_guia_p,'P', cd_estabelecimento_p))
				where	ie_origem_proced	= ie_origem_proced_w
				and	cd_procedimento 	= cd_proc_mat_w;
			end if;

			select	nextval('pls_conta_proc_seq')
			into STRICT	nr_seq_conta_proc_w
			;

			insert into pls_conta_proc(nr_sequencia, cd_procedimento, qt_procedimento_imp,
				qt_procedimento,ie_status, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_conta, ie_situacao, tx_item,
				ie_origem_proced, ie_tipo_despesa, ie_estagio_complemento,
				vl_adic_co, vl_adic_materiais,	vl_adic_procedimento,
				vl_anestesista,vl_auxiliares,vl_beneficiario,
				vl_coparticipacao,vl_co_ptu,vl_custo_operacional,
				vl_exame_coleta,vl_glosa,vl_intercambio,
				vl_liberado,vl_liberado_regra,vl_liquido,
				vl_materiais,vl_material_ptu,vl_medico,
				vl_pag_medico_conta,vl_participacao,vl_pcmso,
				vl_prestador,vl_proc_copartic,vl_procedimento,
				vl_procedimento_imp,vl_procedimento_ptu,vl_proc_unitario,
				vl_saldo,vl_total_procedimento,vl_unitario,
				vl_unitario_imp, qt_autorizado, ie_alterado_prestador,
				dt_procedimento, dt_inicio_proc)
			values (nr_seq_conta_proc_w, cd_proc_mat_w, qt_solicitada_w,
				qt_autorizada_w,'U', clock_timestamp(),
				nm_usuario_p, clock_timestamp(), nm_usuario_p,
				nr_seq_conta_w, 'D', 100,
				ie_origem_proced_w, ie_classificacao_proc_w, 3,
				0,0,0,
				0,0,0,
				0,0,0,
				0,0,0,
				0,0,0,
				0,0,0,
				0,0,0,
				0,0,0,
				0,0,0,
				0,0,0,
				0, qt_autorizada_w, 'G',
				dt_liberacao_w, dt_liberacao_w);

			-- verifica se foi informado o sequencial do tiss, para gerar as regras
			if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then

				-- Se existe a regra, so atualiza, senao gera novamente
				CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_proc(nr_seq_conta_proc_w, nm_usuario_p);

				CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_proc(nr_seq_conta_proc_w, nr_seq_item_tiss_w, null, nm_usuario_p);

			end if;

			-- verifica se deve inserir participantes
			ie_gera_partic_w := obter_valor_param_usuario(1285, 29, Obter_Perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);

			if (ie_gera_partic_w = 'S') and (ie_tipo_guia_w = '4') then

				-- busca o sequencial do CBO, respeitando a especialidade, em seguida o vinculo direto com o PF
				select	max(pls_util_cta_pck.obter_nr_seq_cbo_espec_med(cd_medico_partic_w))
				into STRICT	nr_seq_cbo_partic_w
				;


				-- se nao localizou um grau de participacao via regra, pega um default
				if (coalesce(nr_seq_grau_partic_regra_w::text, '') = '') then

					select	max(nr_sequencia)
					into STRICT	nr_seq_grau_partic_w
					from	pls_grau_participacao
					where	cd_tiss = '12'
					and	ie_situacao = 'A';
				end if;

				insert	into	pls_proc_participante(	cd_medico, dt_atualizacao, dt_atualizacao_nrec,
						ie_status, nm_usuario, nm_usuario_nrec,
						nr_seq_conta_proc, nr_seq_grau_partic, nr_sequencia,
						vl_anestesista, vl_anestesista_base, vl_apresentado,
						vl_auxiliares, vl_auxiliares_base, vl_calculado,
						vl_calculado_ant, vl_digitado_complemento, vl_glosa,
						vl_honorario_medico, vl_medico, vl_medico_base,
						vl_negociado, vl_participante, vl_pos_estab,
						nr_seq_cbo_saude)
				values (	cd_medico_partic_w, clock_timestamp(), clock_timestamp(),
						'U', nm_usuario_p, nm_usuario_p,
						nr_seq_conta_proc_w, coalesce(nr_seq_grau_partic_regra_w, nr_seq_grau_partic_w), nextval('pls_proc_participante_seq'),
						0,0,0,
						0,0,0,
						0,0,0,
						0,0,0,
						0,0,0,
						nr_seq_cbo_partic_w);

			end if;

		end if;

		if (ie_tipo_proc_w = 'M') then
			 vl_mat_apres_w := pls_obter_valor_material_espec(nr_seq_guia_p, cd_proc_mat_w, vl_mat_apres_w);

			select	nextval('pls_conta_mat_seq')
			into STRICT	nr_seq_conta_mat_w
			;

			insert into pls_conta_mat(nr_sequencia, nr_seq_material, qt_material_imp,
				qt_material, ie_status, dt_atualizacao,
				nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec,
				nr_seq_conta, ie_situacao, ie_estagio_complemento,
				vl_adic_material,vl_beneficiario,vl_gerado,
				vl_glosa,vl_intercambio,vl_liberado,
				vl_liberado_regra,vl_mat_copartic,vl_material,
				vl_material_imp,vl_material_ptu,vl_participacao,
				vl_pcmso,vl_saldo,vl_unitario,
				vl_unitario_imp, nr_seq_prest_fornec, qt_autorizado,
				ie_alterado_prestador, dt_atendimento)
			values (nr_seq_conta_mat_w, cd_proc_mat_w, qt_solicitada_w,
				qt_autorizada_w,'U', clock_timestamp(),
				nm_usuario_p,clock_timestamp(), nm_usuario_p,
				nr_seq_conta_w,'D', 3,
				0,0,0,
				0,0,0,
				0,0,0,
				(vl_mat_apres_w *qt_solicitada_w) ,0,0,
				0,0,0,
				vl_mat_apres_w, nr_seq_prest_fornec_w, qt_autorizada_w,
				'G', dt_liberacao_w);

			-- so gera neste momento quando possui informacao
			if (nr_seq_item_tiss_w IS NOT NULL AND nr_seq_item_tiss_w::text <> '') then

				-- Se existe a regra, so atualiza, senao gera novamente
				CALL pls_cta_proc_mat_regra_pck.cria_registro_regra_mat(nr_seq_conta_mat_w, nm_usuario_p);

				CALL pls_cta_proc_mat_regra_pck.atualiza_seq_tiss_mat(nr_seq_conta_mat_w, nr_seq_item_tiss_w, null, nm_usuario_p);

			end if;

		end if;



		if (coalesce(nr_seq_protocolo_p::text, '') = '') then
			CALL pls_gerar_protocolo_conta(nr_seq_conta_w,cd_estabelecimento_w,nm_usuario_p);

			if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				CALL pls_atualiza_valor_proc(nr_seq_conta_proc_w,'N',nm_usuario_p,'S',null,null);
			end if;

			if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then
				CALL pls_atualiza_valor_mat(nr_seq_conta_mat_w, 'N', nm_usuario_p,null,null);
			end if;

			if (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') or (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then
				CALL pls_consistir_conta(nr_seq_conta_w, cd_estabelecimento_p, nm_usuario_p,'N',null,null,null,'S');
			end if;
		end if;

		end;
	end loop;
	close c01;
end loop;

/*Diego Os 315626 - 18/05/2011 - Caso seja uma importacao de guia de pagamento automatico e atualizado para que conste a informacao de "Conta gerada" */

if (ie_pagamento_automatico_w = 'PA') then
	update	pls_guia_plano
	set	ie_pagamento_automatico = 'CG'
	where	nr_sequencia	= nr_seq_guia_p;
end if;

nr_seq_conta_p	:=  nr_seq_conta_w;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_guia_conta ( nr_seq_protocolo_p bigint, nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, nr_seq_conta_p INOUT bigint) FROM PUBLIC;

