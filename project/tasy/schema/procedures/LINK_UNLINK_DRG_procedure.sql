-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE link_unlink_drg ( ie_situacao_p text, nr_interno_conta_p bigint, nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



qt_reg_dados_w	bigint;
cd_convenio_w  	bigint;
nr_seq_dado_w  	bigint;
nr_sequencia_w 	bigint;
nr_seq_proc_w  	bigint;

c01 CURSOR FOR
	SELECT	nr_sequencia,
			cd_convenio
	from 	procedimento_paciente
	where 	nr_interno_conta = nr_interno_conta_p
	and		nr_sequencia <> nr_sequencia_p  --- Here because this is the DRG
	and 	coalesce(cd_motivo_exc_conta::text, '') = ''
	and 	obter_classif_material_proced(null,cd_procedimento,ie_origem_proced) = '1' --- Procedures (Same activation from filter "Procedures" patient billing and patient account
	and (coalesce(ie_responsavel_credito::text, '') = '' or (coalesce(vl_custo_operacional,0) + coalesce(vl_materiais,0)) > 0 or obter_se_pasta_honorario(ie_responsavel_credito) = 'N');

c02 CURSOR FOR
	SELECT	a.nr_sequencia,
			a.nr_seq_proc
	from 	procedimento_paciente_dado a,
			procedimento_paciente b	
	where 	a.nr_seq_proc = b.nr_sequencia
	and		coalesce(b.cd_motivo_exc_conta::text, '') = ''
	and		a.nr_seq_proc_drg = nr_sequencia_p;


BEGIN

if (ie_situacao_p = 'A') then
	open c01;
    loop
	fetch c01 into
		nr_sequencia_w,
		cd_convenio_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin

		select	count(*)
		into STRICT 	qt_reg_dados_w
		from 	procedimento_paciente_dado
		where 	nr_seq_proc = nr_sequencia_w;

		if (qt_reg_dados_w = 0) then

			select	nextval('procedimento_paciente_dado_seq')
			into STRICT 	nr_seq_dado_w
			;
		
			insert into procedimento_paciente_dado( nr_sequencia,
					nr_seq_proc,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					dt_atualizacao,
					nm_usuario,
					nr_seq_proc_drg)
			values ( nr_seq_dado_w,
					nr_sequencia_w,
					clock_timestamp(),
					nm_usuario_p,
					clock_timestamp(),
					nm_usuario_p,
					nr_sequencia_p);
		else

			update	procedimento_paciente_dado
			set 	nr_seq_proc_drg = nr_sequencia_p
			where 	nr_seq_proc = nr_sequencia_w;
		end if;

		CALL atualiza_preco_procedimento(nr_sequencia_w,cd_convenio_w,nm_usuario_p);

		end;
	end loop;
    close c01;

elsif (ie_situacao_p = 'I') then
    open c02;
    loop
    fetch c02 into
		nr_sequencia_w, 
		nr_seq_proc_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		select	max(cd_convenio)
		into STRICT 	cd_convenio_w
		from 	procedimento_paciente
		where 	nr_sequencia = nr_seq_proc_w;
	
		update	procedimento_paciente_dado
		set 	nr_seq_proc_drg  = NULL --- We are updating to null, cause the drg is inactive
		where 	nr_sequencia = nr_sequencia_w;
	
		CALL atualiza_preco_procedimento(nr_seq_proc_w,cd_convenio_w,nm_usuario_p);
		
		end;
    end loop;
    close c02;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE link_unlink_drg ( ie_situacao_p text, nr_interno_conta_p bigint, nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

