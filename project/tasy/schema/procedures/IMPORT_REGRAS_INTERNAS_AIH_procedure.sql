-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE import_regras_internas_aih (nr_sequencia_p bigint, nr_seq_regra_p bigint, cd_procedimento_p bigint, ie_opcao_p text, nm_usuario_p text, dt_comp_inicial_p text default null, dt_comp_final_p text default null) AS $body$
DECLARE

			
ie_existe_proc_w		varchar(255);
dt_comp_inicial_w 		timestamp;
dt_comp_final_w		timestamp;
 		
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Importar dados AIH
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [X] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
ie_opcao_p
DL - Atualizacao_Padrao_parametros (delete)
IN - insere dado tabela sus_regra_proc
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
BEGIN
dt_comp_inicial_w := to_date(dt_comp_inicial_p,'YYYY/MM');
if (dt_comp_final_p <> '999999') then
dt_comp_final_w := to_date(dt_comp_final_p,'YYYY/MM');
end if;

if (upper(ie_opcao_p) = 'DL') then
	delete	from sus_regra_proc
	where	nr_seq_regra in (2,3,4,6,7,8,9,10,11,12,13,19,21,22,23,24,27,28,31,32,33,41,46,47,48,49,50,51,52,53,54,63,66,67,68)
	and		Obter_Situacao_Procedimento(cd_procedimento,ie_origem_proced) = 'A'
	and (dt_comp_inicial = dt_comp_inicial_w or coalesce(dt_comp_inicial::text, '') = '');

elsif (upper(ie_opcao_p) = 'IN') then

		begin
			select	coalesce(max('S'),'N')
			into STRICT 	ie_existe_proc_w
			from 	sus_regra_proc
			where	cd_procedimento = cd_procedimento_p
			and	nr_seq_regra = nr_seq_regra_p
			and 	ie_origem_proced = 7
			and          dt_comp_inicial = dt_comp_inicial_w;
		exception when others then
			ie_existe_proc_w := 'N';
		end;
		
		if (ie_existe_proc_w = 'N') and (nr_sequencia_p IS NOT NULL AND nr_sequencia_p::text <> '') and (cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '') and (nr_seq_regra_p IS NOT NULL AND nr_seq_regra_p::text <> '') then
					insert	into sus_regra_proc(nr_sequencia,
							nr_seq_regra, 
							cd_procedimento, 
							ie_origem_proced, 
							dt_atualizacao, 
							nm_usuario, 
							dt_atualizacao_nrec, 
							nm_usuario_nrec,
							dt_comp_inicial,
							dt_comp_final) 
					values (nr_sequencia_p, 
							nr_seq_regra_p, 
							cd_procedimento_p, 
							7, clock_timestamp(), 
							nm_usuario_p, 
							clock_timestamp(), 
							nm_usuario_p,
							dt_comp_inicial_w,
							dt_comp_final_w);
			end if;
end if;
commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE import_regras_internas_aih (nr_sequencia_p bigint, nr_seq_regra_p bigint, cd_procedimento_p bigint, ie_opcao_p text, nm_usuario_p text, dt_comp_inicial_p text default null, dt_comp_final_p text default null) FROM PUBLIC;

