-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eup_focuslost_convenio_js ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_pessoa_fisica_p text, dt_entrada_p timestamp, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, ie_selecionar_cartao_p INOUT text, nm_pessoa_p INOUT text, dt_nascimento_p INOUT timestamp, nr_cpf_p INOUT text, nr_identidade INOUT text, nm_pai_p INOUT text, nm_mae_p INOUT text, ie_proc_obter_usu_p INOUT text, ie_obter_se_reg_conv_pl_p INOUT text, ie_forma_doc_conv_p INOUT text, qt_dias_internacao_p INOUT bigint, cd_prim_digi_p INOUT text) AS $body$
DECLARE


ds_procedure_w		varchar(255) := null;
ds_carteira_w		varchar(2000)	:= '';
dt_validade_carteira_w	timestamp		:= null;
qt_registros_w		bigint;
is_conveniio_w varchar(1) := 'N';


BEGIN

select CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
into STRICT is_conveniio_w
from convenio
where CD_CONVENIO = cd_convenio_p;

if (coalesce(cd_convenio_p,0) > 0 and is_conveniio_w = 'S') then

	ds_procedure_w := Obter_Regra_Valid_Usuario_Conv(cd_convenio_p, cd_categoria_p, ie_tipo_atendimento_p, ds_procedure_w);


	if (ds_procedure_w IS NOT NULL AND ds_procedure_w::text <> '') then

		if (upper(ds_procedure_w) = 'PLS_OBTER_USUARIO_PLANO') then

			ie_proc_obter_usu_p := 'S';
			SELECT * FROM pls_obter_usuario_plano(cd_pessoa_fisica_p, dt_entrada_p, cd_estabelecimento_p, ds_carteira_w, dt_validade_carteira_w) INTO STRICT ds_carteira_w, dt_validade_carteira_w;

			if (ds_carteira_w IS NOT NULL AND ds_carteira_w::text <> '') then

				cd_usuario_convenio_p := substr(ds_carteira_w,1,30);
				dt_validade_carteira_p := dt_validade_carteira_w;
				if (position(',' in ds_carteira_w) = 0) then
					ie_selecionar_cartao_p := 'N';
				else
					ie_selecionar_cartao_p := 'S';
				end if;
			end if;
		else

			ie_proc_obter_usu_p := 'N';
			select	coalesce(nm_pessoa_fisica, ''),
				dt_nascimento,
				coalesce(nr_cpf,''),
				coalesce(nr_identidade,''),
				coalesce(obter_compl_pf(cd_pessoa_fisica_p, 4, 'N'),''),
				coalesce(obter_compl_pf(cd_pessoa_fisica, 5, 'N'),'')
			into STRICT	nm_pessoa_p,
				dt_nascimento_p,
				nr_cpf_p,
				nr_identidade,
				nm_pai_p,
				nm_mae_p
			from	pessoa_fisica
			where  cd_pessoa_fisica = cd_pessoa_fisica_p;

		end if;
	else
		select	count(*)
		into STRICT	qt_registros_w
		from	intpd_eventos a,
			intpd_eventos_sistema b
		where	a.nr_sequencia = b.nr_seq_evento
		and	a.ie_evento = '213'
		and	a.ie_situacao = 'A'
		and	b.ie_situacao = 'A';

		if (qt_registros_w > 0) then
			ie_proc_obter_usu_p := 'N';
		end if;
	end if;


	ie_obter_se_reg_conv_pl_p := obter_se_reg_conv_pl_cat(cd_convenio_p, 'C', null, null);

	begin
		select	coalesce(ie_forma_doc_conv,'T')
		into STRICT	ie_forma_doc_conv_p
		from	parametro_atendimento
		where 	cd_estabelecimento = cd_estabelecimento_p;
	exception
	when others then
		ie_forma_doc_conv_p := 'T';
	end;

	select 	coalesce(max(qt_dias_internacao),0)
	into STRICT	qt_dias_internacao_p
	from 	convenio_estabelecimento
	where	cd_convenio = cd_convenio_p
	and	cd_estabelecimento = cd_estabelecimento_p;

  cd_prim_digi_p := obter_prim_digitos_convenio(cd_convenio_p);

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eup_focuslost_convenio_js ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, ie_tipo_atendimento_p bigint, cd_pessoa_fisica_p text, dt_entrada_p timestamp, cd_usuario_convenio_p INOUT text, dt_validade_carteira_p INOUT timestamp, ie_selecionar_cartao_p INOUT text, nm_pessoa_p INOUT text, dt_nascimento_p INOUT timestamp, nr_cpf_p INOUT text, nr_identidade INOUT text, nm_pai_p INOUT text, nm_mae_p INOUT text, ie_proc_obter_usu_p INOUT text, ie_obter_se_reg_conv_pl_p INOUT text, ie_forma_doc_conv_p INOUT text, qt_dias_internacao_p INOUT bigint, cd_prim_digi_p INOUT text) FROM PUBLIC;

