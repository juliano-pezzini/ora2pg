-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tasy_preparar_base ( nr_seq_atualizacao_p bigint default null) AS $body$
DECLARE


qt_registro_w 			bigint;
qt_registro_ww			bigint;
ds_comando_w			varchar(2000);
char_col_decl_length_w		bigint;
nm_user_w			varchar(60);
ie_base_wheb_w			boolean := false;
ie_base_corp_w			boolean := false;
ie_base_cliente_w 		boolean := false;
dt_versao_atual_cliente_w	timestamp;
ds_sep_bv_w			varchar(10);
nm_tabela_w			varchar(50);
ds_retorno_w			varchar(255);
i				bigint;
nr_sequencia_w			bigint;
cd_versao_atual_w		varchar(15);
dt_atualizacao_w		timestamp;
ie_atualizacao_w		varchar(1);
nr_seq_motivo_desap_w           integer;
SQL_w				varchar(1000);

qt_varchar_w 			integer;
qt_number_w 			integer;
nm_tablespace_index_w		varchar(100);
dt_versao_objeto_w		timestamp;
ie_seq_criacao_w		bigint;

c01 CURSOR FOR
	SELECT	nm_tabela
	from	tabela_sistema
	where	substr(upper(nm_tabela),1,3)	= 'RXT'
	and	upper(nm_tabela)		<> 'RXT_TIPO'
	and	upper(nm_tabela)		<> 'RXT_EQUIP_TIPO'
	and	upper(nm_tabela)		<> 'RXT_ACESSORIO'
	and	upper(nm_tabela)		<> 'RXT_CLASSIF_ACESSORIO'
	and	upper(nm_tabela)		<> 'RXT_EQUIPAMENTO'
	and	upper(nm_tabela)		<> 'RXT_TUMOR'
	and	upper(nm_tabela)		<> 'RXT_TRATAMENTO'
	and	upper(nm_tabela)		<> 'RXT_CAMPO'
	and	upper(nm_tabela)		<> 'RXT_ACESSORIO_PAC'
	and	upper(nm_tabela)		<> 'RXT_INTERCORRENCIA'
	order by	nm_tabela;
	
	
c02 CURSOR FOR
	SELECT distinct nr_seq_motivo_desap
	from laudo_paciente a 
	where nr_seq_motivo_desap not in (SELECT nr_sequencia from laudo_paciente_mot_des b where a.nr_seq_motivo_desap = b.nr_sequencia);	

      

BEGIN

begin
	qt_registro_w := obter_valor_dinamico('select count(*) from tasy_versao.objeto_sistema where ds_script_criacao is null', qt_registro_w);
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('ldneto', 'delete from tasy_versao.objeto_sistema where ds_script_criacao is null');
		commit;
	end if;
	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--Remover triggers do Schematic
if (dt_versao_atual_cliente_w < to_date('02/02/2017','dd/mm/yyyy')) then
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'OBJETO_SCHEMATIC_INSERT';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy',' drop trigger OBJETO_SCHEMATIC_INSERT ');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'OBJETO_SCHEMATIC_DELETE';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy',' drop trigger OBJETO_SCHEMATIC_DELETE ');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'OBJETO_SCHEMATIC_UPDATE';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy',' drop trigger OBJETO_SCHEMATIC_UPDATE ');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'SCHEMATIC_RELATORIO_ATUAL';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy',' drop trigger SCHEMATIC_RELATORIO_ATUAL ');
	end if;	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PROJ_CRON_ETAPA_ATUAL_HTML5';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy',' drop trigger PROJ_CRON_ETAPA_ATUAL_HTML5 ');
	end if;	
	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
	end;
end if;

if (dt_versao_atual_cliente_w < to_date('01/08/2016','dd/mm/yyyy')) then
begin
/* htneto - Domínios */

  select count(1)
    into STRICT qt_registro_w
    from user_tab_columns
   where table_name = 'VALOR_DOMINIO'
     and column_name = 'DS_VALOR_DOMINIO_CLIENTE';

  if (qt_registro_w <= 0) then
    CALL exec_sql_dinamico('htneto', 'ALTER TABLE VALOR_DOMINIO ADD DS_VALOR_DOMINIO_CLIENTE VARCHAR2(255)');
  end if;

  CALL exec_sql_dinamico('htneto', 'create table valor_dominio_backup2 as select * from valor_dominio');

  CALL exec_sql_dinamico('htneto', 'update valor_dominio vd ' ||
                                 'set vd.ds_valor_dominio_cliente = vd.ds_valor_dominio ' ||
                               'where vd.ds_valor_dominio_cliente is null ' ||
                                 'and (    (     upper(vd.nm_usuario) not in (''TASY'', ''WHEB'') ' ||
                                            'and vd.nm_usuario in (select nm_usuario from usuario)) ' ||
                                       'or ( vd.ds_valor_dominio <> (select ds_valor_dominio from tasy_versao.valor_dominio where cd_dominio = vd.cd_dominio and vl_dominio = vd.vl_dominio)))');
  commit;

exception
  when others then
    CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

qt_registro_w := obter_valor_dinamico_bv('select count(*) from user_objects where object_name = :nm_objeto', 'nm_objeto=ABORTAR_SE_BASE_WHEB', qt_registro_w);

if ( qt_registro_w > 0 ) then
 ds_comando_w := 'BEGIN ABORTAR_SE_BASE_WHEB; END;';
 CALL exec_sql_dinamico_bv('Coelho',ds_comando_w,'');
end if;

dt_versao_atual_cliente_w := coalesce(TO_DATE(TO_CHAR(obter_data_geracao_versao-1,'dd/mm/yyyy') ||' 23:59:59','dd/mm/yyyy hh24:mi:ss'),clock_timestamp() - interval '90 days');

/*INICIO VERIFICA SE BASE WHEB OU CORP - Coelho NÂO REMOVER
Se for necessário realizar algum tratamento verificando se é base Wheb ou Corp
pode utilizar as variáveis IE_BASE_WHEB_W e IE_BASE_CORP_W respectivamente
*/
ds_sep_bv_w := obter_separador_bv;

qt_registro_w := obter_valor_dinamico_bv('select 1 from estabelecimento where cd_cgc = :cd_cgc and cd_estabelecimento = :cd_estabelecimento and ie_situacao 
= :ie_situacao', 'cd_cgc=01950338000177'||ds_sep_bv_w||'cd_estabelecimento=1'||ds_sep_bv_w||'ie_situacao=A', qt_registro_w);
	
if ( qt_registro_w > 0 ) then
	ie_base_wheb_w := true;
	select	substr(user,1,4)
	into STRICT	nm_user_w
	;
	if ( nm_user_w = 'CORP' ) then
		ie_base_corp_w := true;
		ie_base_wheb_w := false;
	elsif ( nm_user_w = 'CLIE') then
		ie_base_cliente_w := true;
		ie_base_corp_w := false;
		ie_base_wheb_w := false;
	end if;
end if;

ie_atualizacao_w	:= OBTER_SE_ATUALIZACAO_VERSAO;
if (ie_atualizacao_w = 'S') and (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then

	SQL_w := 'select b.CD_VERSAO_ATUAL, b.DT_ATUALIZACAO from tasy_versao.aplicacao_tasy_versao a,	aplicacao_tasy b ' ||
		 'where	a.cd_versao = b.cd_versao_atual ' ||
		 'and	a.cd_aplicacao_tasy = b.cd_aplicacao_tasy ' ||
		 'and	a.cd_aplicacao_tasy	= ' || chr(39) || 'Tasy' || chr(39);
	EXECUTE SQL_w into STRICT cd_versao_atual_w,  dt_atualizacao_w;

	select nextval('log_atualizacao_seq')
	into STRICT	nr_sequencia_w
	;

	insert into Log_Atualizacao(
		nr_sequencia,
		nr_seq_atualizacao,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_evento,
		dt_evento,
		ds_ocorrencia)
	values (
		nr_sequencia_w,
		nr_seq_atualizacao_p,
		clock_timestamp(),
		'cetrentin',
		clock_timestamp(),
		'cetrentin',
		'107',
		clock_timestamp(),
		'Atualização Sistema Tasy Procedure tasy_preparar_base, data da versão atravez da procedure obter_data_geracao_versao: '
 || dt_versao_atual_cliente_w ||
		' data da base: ' || dt_atualizacao_w || ' CD Versão: ' || cd_versao_atual_w || ' data atual: ' || clock_timestamp()
		);
end	if;

begin
/*Sempre deve executar no ambiente do cliente.*/

ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'EXEC_PROC_BACA'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
CALL exec_sql_dinamico('Coelho',ds_comando_w);
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('16/04/2012','dd/mm/yyyy')) then
	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'OBTER_NOME_TABLESPACE'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Fernando',ds_comando_w);
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

if (dt_versao_atual_cliente_w < TO_DATE('20/07/2015','dd/mm/yyyy')) then

	begin
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	integridade_Atributo
		where 	nm_tabela in ('QRTZ_SIMPROP_TRIGGERS', 'QRTZ_SIMPLE_TRIGGERS', 'QRTZ_CRON_TRIGGERS', 'QRTZ_BLOB_TRIGGERS');
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_atributo where nm_tabela in (' + chr(39) + 'QRTZ_SIMPROP_TRIGGERS' + chr(39) + ', '+ chr(39) + 'QRTZ_SIMPLE_TRIGGERS' + chr(39) + ', '+ chr(39) + 'QRTZ_CRON_TRIGGERS' + chr(39) +', '+ chr(39) + 'QRTZ_BLOB_TRIGGERS' + chr(39) +')');
		end	if;
	
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	integridade_referencial
		where 	nm_tabela in ('QRTZ_SIMPROP_TRIGGERS', 'QRTZ_SIMPLE_TRIGGERS', 'QRTZ_CRON_TRIGGERS', 'QRTZ_BLOB_TRIGGERS');
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_referencial where nm_tabela in (' + chr(39) + 'QRTZ_SIMPROP_TRIGGERS' + chr(39) + ', '+ chr(39) + 'QRTZ_SIMPLE_TRIGGERS' + chr(39) + ', '+ chr(39) + 'QRTZ_CRON_TRIGGERS' + chr(39) +', '+ chr(39) + 'QRTZ_BLOB_TRIGGERS' + chr(39) +')');
		end	if;
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	indice
		where nm_Tabela = 'QRTZ_BLOB_TRIGGERS'
		and nm_indice = 'QRTBLTR_QRTTRIG_FK_I';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice_atributo where nm_Tabela = ' + chr(39) + 'QRTZ_BLOB_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTBLTR_QRTTRIG_FK_I'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice where nm_Tabela = ' + chr(39) + 'QRTZ_BLOB_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTBLTR_QRTTRIG_FK_I'+ chr(39));
		end	if;
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	indice
		where nm_Tabela = 'QRTZ_CRON_TRIGGERS'
		and nm_indice = 'QRTCRTR_QRTTRIG_FK_I';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice_atributo where nm_Tabela = ' + chr(39) + 'QRTZ_CRON_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTCRTR_QRTTRIG_FK_I'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice where nm_Tabela = ' + chr(39) + 'QRTZ_CRON_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTCRTR_QRTTRIG_FK_I'+ chr(39));
		end	if;

		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	indice
		where nm_Tabela = 'QRTZ_SIMPLE_TRIGGERS'
		and nm_indice = 'QRTSITR_QRTTRIG_FK_I';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice_atributo where nm_Tabela = ' + chr(39) + 'QRTZ_SIMPLE_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTSITR_QRTTRIG_FK_I'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice where nm_Tabela = ' + chr(39) + 'QRTZ_SIMPLE_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTSITR_QRTTRIG_FK_I'+ chr(39));
		end	if;
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	indice
		where nm_Tabela = 'QRTZ_SIMPROP_TRIGGERS'
		and nm_indice = 'QRTSPTR_QRTTRIG_FK_I';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice_atributo where nm_Tabela = ' + chr(39) + 'QRTZ_SIMPROP_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTSPTR_QRTTRIG_FK_I'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from indice where nm_Tabela = ' + chr(39) + 'QRTZ_SIMPROP_TRIGGERS' + chr(39) + 'and nm_indice = ' + chr(39) + 'QRTSPTR_QRTTRIG_FK_I'+ chr(39));
		end	if;
		
	exception
		when others then
			CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE Indicador de gestão cetrentin',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
		end;
									
end	if;

if (dt_versao_atual_cliente_w < TO_DATE('23/07/2015','dd/mm/yyyy')) then

	begin

		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	user_constraints
		WHERE	constraint_name = 'DICEXPTR_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','Alter Table DIC_EXPRESSAO_TRADUCAO drop constraint DICEXPTR_DICEXPR_FK');
		end	if;
		
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	integridade_referencial
		where 	nm_Tabela = 'DIC_EXPRESSAO_TRADUCAO'
		and 	nm_integridade_referencial = 'DICEXPTR_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_Atributo where nm_Tabela = ' + chr(39) + 'DIC_EXPRESSAO_TRADUCAO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'DICEXPTR_DICEXPR_FK'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_referencial where nm_Tabela = ' + chr(39) + 'DIC_EXPRESSAO_TRADUCAO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'DICEXPTR_DICEXPR_FK'+ chr(39));
		end	if;
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	user_constraints
		WHERE	constraint_name = 'WDICEUS_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','Alter Table W_DIC_EXPRESSAO_USO drop constraint WDICEUS_DICEXPR_FK');
		end	if;
		
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	integridade_referencial
		where 	nm_Tabela = 'W_DIC_EXPRESSAO_USO'
		and 	nm_integridade_referencial = 'WDICEUS_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_Atributo where nm_Tabela = ' + chr(39) + 'W_DIC_EXPRESSAO_USO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'DICEXPTR_DICEXPR_FK'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_referencial where nm_Tabela = ' + chr(39) + 'W_DIC_EXPRESSAO_USO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'DICEXPTR_DICEXPR_FK'+ chr(39));
		end	if;
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	user_constraints
		WHERE	constraint_name = 'DICEXPHIS_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','Alter Table DIC_EXPRESSAO_HISTORICO drop constraint DICEXPHIS_DICEXPR_FK');
		end	if;
		
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	integridade_referencial
		where 	nm_Tabela = 'DIC_EXPRESSAO_HISTORICO'
		and 	nm_integridade_referencial = 'DICEXPHIS_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_Atributo where nm_Tabela = ' + chr(39) + 'DIC_EXPRESSAO_HISTORICO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'DICEXPHIS_DICEXPR_FK'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_referencial where nm_Tabela = ' + chr(39) + 'DIC_EXPRESSAO_HISTORICO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'DICEXPHIS_DICEXPR_FK'+ chr(39));
		end	if;

		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	user_constraints
		WHERE	constraint_name = 'LOTRAEX_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','Alter Table LOTE_TRADUCAO_EXPRESSAO drop constraint LOTRAEX_DICEXPR_FK');
		end	if;
		
		
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	integridade_referencial
		where 	nm_Tabela = 'LOTE_TRADUCAO_EXPRESSAO'
		and 	nm_integridade_referencial = 'LOTRAEX_DICEXPR_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_Atributo where nm_Tabela = ' + chr(39) + 'LOTE_TRADUCAO_EXPRESSAO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'LOTRAEX_DICEXPR_FK'+ chr(39));
			CALL Exec_Sql_Dinamico('cetrentin','delete from integridade_referencial where nm_Tabela = ' + chr(39) + 'LOTE_TRADUCAO_EXPRESSAO' + chr(39) + 'and nm_integridade_referencial = ' + chr(39) + 'LOTRAEX_DICEXPR_FK'+ chr(39));
		end	if;		

	exception
		when others then
			CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE Indicador de gestão cetrentin',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
		end;
									
end	if;

if (dt_versao_atual_cliente_w < TO_DATE('01/09/2014','dd/mm/yyyy')) then

	begin
		SELECT	COUNT(*)
		INTO STRICT	qt_registro_w
		FROM	user_constraints
		WHERE	constraint_name = 'SUBINGE_SUBINGE_FK';
	
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('cetrentin','Alter Table SUBINDICADOR_GESTAO drop constraint SUBINGE_SUBINGE_FK');
		end	if;
	
		CALL Exec_Sql_Dinamico('cetrentin',	' Alter Table SUBINDICADOR_GESTAO add ( ' ||
										' Constraint SUBINGE_SUBINGE_FK Foreign Key ( ' ||
										' NR_SEQ_SUPERIOR ' ||
										' ) References SUBINDICADOR_GESTAO ( ' ||
										' NR_SEQUENCIA ' ||
										' ) on delete cascade) ');
	exception
		when others then
			CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE Indicador de gestão cetrentin',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
		end;
									
end	if;

if (dt_versao_atual_cliente_w < TO_DATE('08/05/2014','dd/mm/yyyy')) THEN	
	
	SELECT	COUNT(*)
	INTO STRICT	qt_registro_w
	FROM	user_constraints
	WHERE	constraint_name = 'DICOBJPA_DICOBJE_FK';
	
	if (qt_registro_w > 0) then		
		CALL Exec_Sql_Dinamico('Tasy','ALTER TABLE DIC_OBJETO_PAIS DROP CONSTRAINT DICOBJPA_DICOBJE_FK');
	end	if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'DICOBJPA_DICOBJE_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index DICOBJPA_DICOBJE_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'DIC_OBJETO_PAIS';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy', 'drop table DIC_OBJETO_PAIS');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'DICOBJPA_PK';	

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index DICOBJPA_PK');
	end if;
			
		
end	if;	

if (dt_versao_atual_cliente_w < TO_DATE('08/05/2014','dd/mm/yyyy')) THEN	
	
	SELECT	COUNT(*)
	INTO STRICT	qt_registro_w
	FROM	user_constraints
	WHERE	constraint_name = 'DICOBJPA_DICOBJE_FK';	
	
	if (qt_registro_w > 0) then		
		CALL Exec_Sql_Dinamico('Tasy','ALTER TABLE DIC_OBJETO_PAIS DROP CONSTRAINT DICOBJPA_DICOBJE_FK');
	end	if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'DICOBJPA_DICOBJE_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index DICOBJPA_DICOBJE_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'DIC_OBJETO_PAIS';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy', 'drop table DIC_OBJETO_PAIS');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'DICOBJPA_PK';	

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index DICOBJPA_PK');
	end if;
			
		
end	if;	

begin
if (dt_versao_atual_cliente_w <= to_date('24/01/2014','dd/mm/yyyy')) then

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'DIC_EXPRESSAO'
	AND	column_name = 'DS_EXPRESSAO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Fernando','alter table dic_expressao drop column ds_expressao');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'DIC_EXPRESSAO'
	AND		column_name = 'DS_ESPANHOL_MEXICO';	
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Fernando','alter table dic_expressao drop column ds_espanhol_mexico');
	END	IF;
	
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('02/05/2013','dd/mm/yyyy')) then
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'OBJETO_SISTEMA'
	AND	column_name = 'CD_CNPJ';	

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Fernando','alter table objeto_sistema add cd_cnpj varchar2(14) ');		
	end	if;
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('27/05/2011','dd/mm/yyyy')) then	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'MATERIAL_WBARRAS2'
	and	column_name = 'CD'
	and	data_type = 'NUMBER';
	
	if (qt_registro_w > 0 ) then
		CALL exec_sql_dinamico('Tasy','alter table material_wbarras2 modify (CD varchar2(20))');
	end if;	
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('01/06/2011','dd/mm/yyyy')) then	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'OBJETO_CIRURGIA_COORDENADA';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Fernando',' DROP TABLE OBJETO_CIRURGIA_COORDENADA');
	end	if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('09/06/2011','dd/mm/yyyy')) then	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'MATERIAL_WBARRAS';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('epmallmann',' DROP TABLE MATERIAL_WBARRAS');
	end	if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('16/06/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'WCOBDIH_WCOBDIT_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco', 'drop index WCOBDIH_WCOBDIT_FK_I');
		CALL exec_sql_dinamico('Francisco', 'alter table W_COBR_DESEMP_ITEM_HIST drop constraint WCOBDIH_WCOBDIT_FK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('01/07/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'QUANACC_UK';

	if (qt_registro_w < 3) then
		CALL exec_sql_dinamico('Anderson', 'alter table QUA_NAO_CONFORM_CAUSA drop constraint QUANACC_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('05/07/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'PEIPRPA_UK';

	if (qt_registro_w < 3) then
		CALL exec_sql_dinamico('Dalcastagne', 'alter table PERFIL_ITEM_PRONT_PASTA drop constraint PEIPRPA_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('07/07/2011','dd/mm/yyyy')) then
	
	CALL Exec_sql_Dinamico('Takano','alter table PRESCR_ETIQUETA drop constraint PRESETI_PK');
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name = 'PRESCR_ETIQUETA'
	and	index_name = 'PRESETI_PK';
	
	if (qt_registro_w > 0) then	
		CALL Exec_sql_Dinamico('Takano','drop index PRESETI_PK');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('22/07/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'SIBINCO_UK';
	
	if (qt_registro_w > 0) then	
		CALL Exec_sql_Dinamico('prosa','Alter Table SIB_INCONSISTENCIA Drop Constraint SIBINCO_UK');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/07/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'AJAPLEV_UK';

	if (qt_registro_w < 3) then
		CALL exec_sql_dinamico('Jonas', 'alter table ajuste_ap_lote_evento drop constraint AJAPLEV_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Francisco - 03/08/2011  */

if (dt_versao_atual_cliente_w < to_date('03/08/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLPREPR_UK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Francisco', 'alter table PLS_PRESTADOR_PROC drop constraint PLPREPR_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Paulo - 04/08/2011  */

if (dt_versao_atual_cliente_w < to_date('04/08/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'SIBINCO_UK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Paulo', 'alter table SIB_INCONSISTENCIA drop constraint SIBINCO_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*thlima - 10/08/2011*/

if (dt_versao_atual_cliente_w < to_date('10/08/2011','dd/mm/yyyy')) then
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'ATETRME_MEDICO_FK_I';
	
	if (qt_registro_w	= 0) then
		CALL exec_sql_dinamico('Thlima', 'Create Index ATETRME_PESFISI_FK_I on ATENDIMENTO_TROCA_MEDICO(CD_MEDICO_ATUAL)');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'ATETRME_MEDICO_FK2_I';
	
	if (qt_registro_w	= 0) then
		CALL exec_sql_dinamico('Thlima', 'Create Index ATETRME_MEDICO_FK2_I on ATENDIMENTO_TROCA_MEDICO(CD_MEDICO_ANTERIOR)');
	end if;	
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eberns em 11/08/2011 */

if (dt_versao_atual_cliente_w < to_date('11/08/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PROJCEE_PROCRET_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Eberns', 'alter table PROJ_CRON_ETAPA_EQUIPE drop constraint PROJCEE_PROCRET_FK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*thlima - 16/08/2011*/

if (dt_versao_atual_cliente_w < to_date('16/08/2011','dd/mm/yyyy')) then
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PROPACI_PESFISI_FK8_I';
	
	if (qt_registro_w	= 0) then
		CALL exec_sql_dinamico('Thlima', 'Create Index PROPACI_PESFISI_FK8_I on PROCEDIMENTO_PACIENTE(CD_MEDICO)');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PROPACI_PESFISI_FK7_I';
	
	if (qt_registro_w	= 0) then
		CALL exec_sql_dinamico('Thlima', 'Create Index PROPACI_PESFISI_FK7_I on PROCEDIMENTO_PACIENTE(CD_MEDICO_EXECUTOR)');
	end if;	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PROPACI_PESFISI_FK9_I';
	
	if (qt_registro_w	= 0) then
		CALL exec_sql_dinamico('Thlima', 'Create Index PROPACI_PESFISI_FK9_I on PROCEDIMENTO_PACIENTE(CD_MEDICO_REQ)');
	end if;	
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('24/08/2011','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'W_INCONSISTENCIAS_CIHA';

	If (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('TASY','create table w_inconsistencias_ciha(nr_atendimento	number(10),'||
					'		nm_paciente	varchar2(60), ' ||
					'		dt_entrada	date, '||
					'		dt_alta		date, '||
					'		ds_procedimento	varchar2(40), '||
					'		cd_motivo_alta	number(10), '||
					'		ds_inconsistencia	varchar(255))');
	End if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('01/09/2011','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_types
	where	type_name = 'T_PARAM_INTEGRACAO';

	if (qt_registro_w = 0 ) then
		ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'T_PARAM_INTEGRACAO'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
		CALL exec_sql_dinamico('Coelho',ds_comando_w);
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_types
	where	type_name = 'LT_PARAM_INTEGRACAO';
	
	if (qt_registro_w = 0 ) then
		ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'LT_PARAM_INTEGRACAO'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
		CALL exec_sql_dinamico('Coelho',ds_comando_w);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*Matheus 28/09 - Colocado nesta procedure para dropar a UK */

if (dt_versao_atual_cliente_w < to_date('28/09/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	table_name	= 'FICHA_TECNICA'
	and	constraint_name = 'FICTECN_UK'
	and	column_name	= 'NR_SEQ_EXAME';

	if (qt_registro_w = 0) then
	
		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	table_name	= 'FICHA_TECNICA'
		and	constraint_name	= 'FICTECN_UK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Matheus','alter table ficha_tecnica drop constraint fictecn_uk');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	table_name	= 'FICHA_TECNICA'
		and	index_name	= 'FICTECN_UK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Matheus','drop index fictecn_uk');
		end if;
		
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('09/12/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PRMFIOO_PRMAROR_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Eberns', 'alter table PRM_FICHA_ORIGEM_OCO drop constraint PRMFIOO_PRMAROR_FK');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PRMFIOO_PRMAROR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Matheus','drop index PRMFIOO_PRMAROR_FK_I');
	end if;
	
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('12/12/2011','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Coelho','UPDATE HL7_PROJETO SET nr_seq_sistema = NULL WHERE nr_sequencia = 333');
	commit;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*Matheus 14/12/2011 - Colocado nesta procedure para dropar a UK */

if (dt_versao_atual_cliente_w < to_date('16/12/2011','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	table_name	= 'FICHA_TECNICA'
	and	constraint_name = 'FICTECN_UK'
	and	column_name	= 'CD_SETOR_ATENDIMENTO';

	if (qt_registro_w = 0) then
	
		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	table_name	= 'FICHA_TECNICA'
		and	constraint_name	= 'FICTECN_UK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Matheus','alter table ficha_tecnica drop constraint fictecn_uk');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	table_name	= 'FICHA_TECNICA'
		and	index_name	= 'FICTECN_UK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Matheus','drop index fictecn_uk');
		end if;
		
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*Coelho 05/01/2012 - OS395114 */

if (dt_versao_atual_cliente_w < to_date('05/01/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'LOGTASY_I2';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Coelho','drop index LOGTASY_I2');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (trunc(dt_versao_atual_cliente_w) < trunc(to_date('18/01/2012','dd/mm/yyyy'))) then
	qt_registro_w := obter_valor_dinamico('select count(*) from user_tab_columns where table_name = ''TIPO_LOCALIZAR_ATRIBUTO'' AND column_name = ''IE_DESC_RESULT'' and NULLABLE=''N'' ', qt_registro_w);
	if (qt_registro_w > 0 ) then
		CALL exec_sql_dinamico('Luis','alter table tipo_localizar_atributo modify ie_desc_result null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('02/02/2012','dd/mm/yyyy')) then	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'EMPREFC_EMPREFE_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Fabrício','drop index EMPREFC_EMPREFE_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'EMPREFC_EMPREFE_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Fabrício', 'alter table EMPRESA_REFERENCIA_CONV drop constraint EMPREFC_EMPREFE_FK');
	end if;	
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('01/02/2012','dd/mm/yyyy')) then
	select 	count(*)
	into STRICT	qt_registro_w
	from 	user_constraints 
	where 	constraint_name = 'INFINTE_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Coelho','alter table INFORMACAO_INTEGRACAO drop constraint INFINTE_UK');
	end if;
		
	select 	count(*)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'INFINTE_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Coelho','drop index  INFINTE_UK');
	end if;
		
	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'MUDAR_INTEGRIDADE_TABELA'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Coelho',ds_comando_w);
	
	ds_comando_w	:= 'ALTER PROCEDURE TASY_ATUALIZAR_BASE COMPILE'
;
	CALL exec_sql_dinamico('Coelho',ds_comando_w);
	
	ds_comando_w	:= 'ALTER PROCEDURE TASY_ATUALIZAR_BASE_VERSAO COMPILE'
;
	CALL exec_sql_dinamico('Coelho',ds_comando_w);
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (trunc(dt_versao_atual_cliente_w) < trunc(to_date('23/02/2012','dd/mm/yyyy'))) then
	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'TASY_ATUALIZAR_TABELA'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Coelho',ds_comando_w);
	ds_comando_w	:= 'ALTER PROCEDURE TASY_ATUALIZAR_BASE COMPILE'
;
	CALL exec_sql_dinamico('Coelho',ds_comando_w);
	ds_comando_w	:= 'ALTER PROCEDURE TASY_ATUALIZAR_BASE_VERSAO COMPILE'
;
	CALL exec_sql_dinamico('Coelho',ds_comando_w);
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('24/02/2012','dd/mm/yyyy')) then	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_TED_REGRA_MENS_INCID'
	and	column_name	= 'CD_CGC_ESTIUPLANTE';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('dhoffman','alter table PLS_TED_REGRA_MENS_INCID drop column cd_cgc_estiuplante');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Paulo - Definir integridade como cascade */

if (dt_versao_atual_cliente_w < to_date('27/02/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSLLVA_PLSCOMAT_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('prosa', 'alter table PLS_LOG_LIB_VALOR_ANALISE drop constraint PLSLLVA_PLSCOMAT_FK');
	end if;	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSLLVA_PLSCOPRO_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('prosa', 'alter table PLS_LOG_LIB_VALOR_ANALISE drop constraint PLSLLVA_PLSCOPRO_FK');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Paulo - Definir integridade como cascade */

if (dt_versao_atual_cliente_w < to_date('28/02/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSLLVA_PLSANCO_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('prosa', 'alter table PLS_LOG_LIB_VALOR_ANALISE drop constraint PLSLLVA_PLSANCO_FK');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* aaschlote - Definir integridade como cascade */

if (dt_versao_atual_cliente_w < to_date('28/02/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'SIPBEEX_PLSSEGU_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('aaschlote', 'alter table SIP_BENEFICIARIO_EXPOSTO drop constraint SIPBEEX_PLSSEGU_FK');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('17/03/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'TASY_INDICE_PENDENTE';

	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('TASY', 'create table tasy_indice_pendente( ' ||
					'	nm_tabela	varchar2(50) not null,' ||	
					'	nm_indice	varchar2(50) not null, ' ||
					'	ie_dropar	varchar2(1), ' ||
					'	ie_status	varchar2(1))');
	end	if;
end	if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('21/03/2012','dd/mm/yyyy')) then
	select  count(*)
	into STRICT    qt_registro_w
	from    user_cons_columns
	where   constraint_name = 'FUNPAPE_PK';
	if (qt_registro_w = 3) then
		CALL Exec_Sql_Dinamico('TASY', 'alter table FUNCAO_PARAM_PERFIL drop constraint FUNPAPE_PK');
	end     if;

	select  count(*)
	into STRICT    qt_registro_w
	from    user_ind_columns
	where   index_name = 'FUNPAPE_PK';
	if (qt_registro_w = 3) then
		CALL Exec_Sql_Dinamico('TASY', 'drop index FUNPAPE_PK');
	end     if;
end       if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('26/03/2012','dd/mm/yyyy')) then

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	TABELA_ATRIBUTO
	where	nm_tabela = 'TASY_PADRAO_IMAGEM'
	AND	NM_atributo = 'IE_IMAGEM'
	AND	IE_TIPO_ATRIBUTO = 'LONG';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Fernando','alter table TASY_PADRAO_IMAGEM drop column ie_imagem');
		CALL exec_sql_dinamico('Fernando','alter table TASY_PADRAO_IMAGEM add ie_imagem long raw');
	end	if;
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Daniel Sousa em 26/03/2012 */

if (dt_versao_atual_cliente_w <= to_date('26/03/2012', 'dd/mm/yyyy')) then
	select count(*)
	into STRICT   qt_registro_w
	from   user_ind_columns
	where  index_name = 'INDGEST_I1';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('DanielSousa','drop index INDGEST_I1');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Daniel Sousa em 26/03/2012 */


/* Tratamento para atualizar todas as tabelas do dicionário de objetos*/

begin
if (dt_versao_atual_cliente_w <= to_date('13/04/2012', 'dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Coelho','update DIC_OBJETO_WDW_EVENTO set dt_atualizacao = sysdate - 5000');
	CALL exec_sql_dinamico('Coelho','update DIC_OBJETO_WDETALHEWEB set dt_atualizacao = sysdate - 5000');
	CALL exec_sql_dinamico('Coelho','update DIC_OBJETO_IDIOMA set dt_atualizacao = sysdate - 5000');
	CALL exec_sql_dinamico('Coelho','update DIC_OBJETO_FILTRO_IDIOMA set dt_atualizacao = sysdate - 5000');
	CALL exec_sql_dinamico('Coelho','update DIC_OBJETO set dt_atualizacao = sysdate - 5000');
	commit;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('18/04/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'REGRA_TAB_INDICE_PENDENTE';

	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('TASY', 'create table regra_tab_indice_pendente( ' ||						
						' nr_sequencia            number(10)    not null, ' ||
						' qt_bytes                number(15)  not null, ' ||
						' qt_nivel_paralelismo    number(3)     not null, ' ||
						' dt_atualizacao          date          not null, ' ||
						' nm_usuario              varchar2(15)  not null) ');

		CALL Exec_sql_Dinamico('TASY', ' Create Sequence REGRA_TAB_INDICE_PENDENTE_SEQ ' ||
					' Increment by 1 Start With 1 ' ||
					' MaxValue 9999999999 Cycle NoCache ');
	end	if;
	
	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'OBTER_TABLESPACE_TAB_TEMP'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Fernando',ds_comando_w);
	
	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'OBTER_ONLINE_INDEX_BUILD'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Fernando', ds_comando_w);
	
	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'OBTER_NIVEL_PARALELISMO'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Fernando', ds_comando_w);

	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'TASY_CRIAR_INDICE'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Coelho',ds_comando_w);

	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'TASY_SINCRONIZAR_BASE'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Fernando',ds_comando_w);

	ds_comando_w	:= 'ALTER PROCEDURE TASY_SINCRONIZAR_BASE COMPILE'
;
	CALL exec_sql_dinamico('Coelho',ds_comando_w);
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w > to_date('18/04/2012','dd/mm/yyyy')) and (dt_versao_atual_cliente_w < to_date('20/04/2012','dd/mm/yyyy')) then	
	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'OBTER_TABLESPACE_INDEX'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Fernando', ds_comando_w);

	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'TASY_CRIAR_INDICE'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Coelho',ds_comando_w);

	ds_comando_w	:= 'BEGIN TASY_CRIAR_OBJETO_SISTEMA('|| chr(39) ||'TASY_SINCRONIZAR_BASE'|| chr(39) ||','||chr(39) ||'TASY_VERSAO'|| chr(39)||'); END;';
	CALL exec_sql_dinamico('Fernando',ds_comando_w);
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('22/05/2012', 'dd/mm/yyyy')) then
	-- Definir a classificação dos índices que são de integridade referencial
	update	INDICE
	set	ie_classificacao = 'IR',
		dt_atualizacao = clock_timestamp() - interval '5000 days'
	where	ie_tipo in ('PK','UK')
	or	nm_indice like '%_FK'
	or	nm_indice like '%_FK%_I%';
	
	commit;
	
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w > to_date('25/04/2012','dd/mm/yyyy')) and (dt_versao_atual_cliente_w < to_date('09/05/2012','dd/mm/yyyy')) then	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'W_AUTORIZACAO_CONVENIO';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('lhalves',' DROP TABLE W_AUTORIZACAO_CONVENIO');
	end	if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
select	COUNT(1)
into STRICT	qt_registro_w
from	user_objects
where	object_name = 'TASY_SINCRONIZAR_BASE'
and	status	= 'INVALID';

if (qt_registro_w > 0) then
	ds_comando_w := 'ALTER PROCEDURE TASY_SINCRONIZAR_BASE COMPILE'
;
	CALL exec_sql_dinamico('Fernando', ds_comando_w);
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Lepinski - 05/06/2012 - Retirar a obrigatoriedade do campo */

if (dt_versao_atual_cliente_w < to_date('05/06/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_CONTRATO_MENSAGEM_CART'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_CONTRATO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('lepinski', 'alter table PLS_CONTRATO_MENSAGEM_CART modify (NR_SEQ_CONTRATO null)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Djavan  13/06/2012  alterar os campos IE_TIPO_TABELA e IE_ORIGEM_SERVICO para aceitar valor nulo */

if (dt_versao_atual_cliente_w < to_date('13/06/2012','dd/mm/yyyy')) then
	/* Alterar o campo IE_TIPO_TABELA para null*/

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_PEDIDO_COMPL_AUT_SERV'
	and	column_name	= 'IE_TIPO_TABELA'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table ptu_pedido_compl_aut_serv modify  ie_tipo_tabela null');
	end if;

	/* Alterar o campo IE_ORIGEM_SERVICO para null*/

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_PEDIDO_COMPL_AUT_SERV'
	and	column_name	= 'IE_ORIGEM_SERVICO'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table ptu_pedido_compl_aut_serv modify  ie_origem_servico null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 19/06/2012  Ajustar sequence da tabela PLS_SOLIC_LIB_ANEXO*/

if (dt_versao_atual_cliente_w < to_date('19/06/2012','dd/mm/yyyy')) then
	CALL tasy_posicionar_sequence('PLS_SOLIC_LIB_ANEXO','NR_SEQUENCIA','R');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Djavan 29/06/2012 - Dropar  a trigger PTU_PED_COMPL_AUT_SERV_INSERT */

if (dt_versao_atual_cliente_w < to_date('29/06/2012','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PTU_PED_COMPL_AUT_SERV_INSERT';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('djavan', 'drop trigger PTU_PED_COMPL_AUT_SERV_INSERT');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('08/06/2012','dd/mm/yyyy')) then
	begin
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'SCAREME_UK';
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('jtoliveira', 'alter table SUP_CARTAO_EMERGENCIA drop constraint SCAREME_UK');
	end if;
	
	SELECT 	COUNT(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'SCAREME_UK';
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('jtoliveira', 'DROP INDEX SCAREME_UK');
	end if;
	
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('20/06/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSPCNF_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', ' alter table PLS_PROT_CONTA_NF drop constraint PLSPCNF_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/06/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	tabela_atributo
	where	nm_tabela	= 'PLS_SEGURADO'
	and	nm_atributo	= 'NR_SEQ_CONGENERE_EMP';

	if (qt_registro_w = 0) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_SEGURADO'
		and	column_name	= 'NR_SEQ_CONGENERE_EMP';

		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('Edgar', ' alter table PLS_SEGURADO drop COLUMN NR_SEQ_CONGENERE_EMP');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('15/06/2012','dd/mm/yyyy')) then
	begin
	
	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'CMCICLO_UK';
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('jtoliveira', 'Alter Table CM_CICLO Drop Constraint CMCICLO_UK');
	end if;
	
	SELECT	COUNT(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'CMCICLO_UK';
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('jtoliveira', 'DROP INDEX CMCICLO_UK');
	end if;
	
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('11/07/2012','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSOCBR_I5';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Francisco', 'drop index PLSOCBR_I5');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('02/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	objeto_sistema
	where	nm_objeto	= 'PLS_GERAR_LOTE_DITRIBUICAO';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', ' drop procedure PLS_GERAR_LOTE_DITRIBUICAO'
);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('16/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_CONSISTIR_CAD_COPARTIC'
	and	object_type = 'PROCEDURE';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_Dinamico('aaschlote', 'drop procedure PLS_CONSISTIR_CAD_COPARTIC'
);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('17/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'ONCREM_ONCPLRA_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index ONCREM_ONCPLRA_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'ONCREM_ONCTIEX_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index ONCREM_ONCTIEX_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'ONCPLR_ONCTIEX_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index ONCPLR_ONCTIEX_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'ONCPLR_ONCPLRA_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index ONCPLR_ONCPLRA_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'DIAMEDI_ATEPACU_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index DIAMEDI_ATEPACU_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'DIAMEDI_MEDICO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index DIAMEDI_MEDICO_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'FICTECN_FICTECO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index FICTECN_FICTECO_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'CIRTEMP_CIRURGI_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index CIRTEMP_CIRURGI_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'MEDMATE_MATERIA_FK_I2';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index MEDMATE_MATERIA_FK_I2');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'MEDMATE_UNIMEDI_FK_I2';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index MEDMATE_UNIMEDI_FK_I2');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'MEDMATE_MATERIA_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index MEDMATE_MATERIA_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'PEEVORE_PEITEMRE_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index PEEVORE_PEITEMRE_FK_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 18/07/2012 - Alterar o nome dos campos da transação do SCS PTU_RESP_PEDIDO_STATUS */

if (dt_versao_atual_cliente_w < to_date('18/07/2012','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_RESP_PEDIDO_STATUS'
	and	column_name	= 'NR_TRANSACAO_UNI_EXEC';

	if (qt_registro_w	> 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PTU_RESP_PEDIDO_STATUS'
		and	column_name	= 'NR_SEQ_ORIGEM';

		if (qt_registro_w	= 0) then
			CALL exec_sql_dinamico('Tasy',' alter table PTU_RESP_PEDIDO_STATUS rename column NR_TRANSACAO_UNI_BENEF to  NR_SEQ_ORIGEM 	');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PTU_RESP_PEDIDO_STATUS'
		and	column_name	= 'NR_SEQ_EXECUCAO';

		if (qt_registro_w	= 0) then
			CALL exec_sql_dinamico('Tasy',' alter table PTU_RESP_PEDIDO_STATUS rename column NR_TRANSACAO_UNI_EXEC  to  NR_SEQ_EXECUCAO 	');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('18/07/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'MEDAVPA_MEDTIAV_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index MEDAVPA_MEDTIAV_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'PARTO_MEDICO_FK_I2';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index PARTO_MEDICO_FK_I2');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'ATEPACI_MEDAVPA_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index ATEPACI_MEDAVPA_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'TASPAIP_TASPACO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index TASPAIP_TASPACO_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'LIBPAMA_MATERIAL_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index LIBPAMA_MATERIAL_FK_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('24/07/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'PRESMED_SETATEN_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index PRESMED_SETATEN_FK');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'PRESMAT_UNIMEDI_FK_I2';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index PRESMAT_UNIMEDI_FK_I2');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'PRESMAT_MATERIA_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index PRESMAT_MATERIA_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'PRESMED_MEDICO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index PRESMED_MEDICO_FK_I');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name	= 'PRESMED_PESFISIM_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edilson','drop index PRESMED_PESFISIM_FK_I');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote -Aumentar o campo do QTTIPOS da tabela PLS_INTERF_SIB*/

if (dt_versao_atual_cliente_w < to_date('11/07/2012','dd/mm/yyyy')) then
	CALL Exec_sql_Dinamico('aaschlote','alter table PLS_INTERF_SIB modify QT_TIPO1 number(10)');
	CALL Exec_sql_Dinamico('aaschlote','alter table PLS_INTERF_SIB modify QT_TIPO2 number(10)');
	CALL Exec_sql_Dinamico('aaschlotea','alter table PLS_INTERF_SIB modify QT_TIPO3 number(10)');
	CALL Exec_sql_Dinamico('aaschlote','alter table PLS_INTERF_SIB modify QT_TIPO4 number(10)');
	CALL Exec_sql_Dinamico('aaschlote','alter table PLS_INTERF_SIB modify QT_TIPO5 number(10)');
	CALL Exec_sql_Dinamico('aaschlote','alter table PLS_INTERF_SIB modify QT_TIPO6 number(10)');
	CALL Exec_sql_Dinamico('aaschlote','alter table PLS_INTERF_SIB modify QT_TIPO7 number(10)');
	CALL Exec_sql_Dinamico('aaschlote','alter table PLS_INTERF_SIB modify QT_TIPO8 number(10)');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*rlepinski -Aumentar o tamanho do campo DS_ENDERECO da tabela PLS_SEGURADO_SIB*/

if (dt_versao_atual_cliente_w < to_date('01/08/2012','dd/mm/yyyy')) then
	CALL Exec_sql_Dinamico('rlepinski','alter table PLS_SEGURADO_SIB modify DS_ENDERECO varchar2(50)');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('04/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	tabela_atributo
	where	nm_tabela	= 'PLS_REGRA_FAT_PAGADOR'
	and	nm_atributo	= 'NR_SEQ_CLASSIFICACAO_SCA';

	if (qt_registro_w = 0) then

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_REGRA_FAT_PAGADOR'
		and	column_name	= 'NR_SEQ_CLASSIFICACAO_SCA';

		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('Edgar', ' alter table PLS_REGRA_FAT_PAGADOR drop column NR_SEQ_CLASSIFICACAO_SCA');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('07/08/2012','dd/mm/yyyy')) then	
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_OC_PROC_ESPEC_REGRA'
		and	column_name = 'CD_ESPEC_MEDICA'
		and	nullable = 'N';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('prosa', 'alter table PLS_OC_PROC_ESPEC_REGRA modify CD_ESPEC_MEDICA null');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_OC_PROC_ESPEC_REGRA'
		and	column_name = 'IE_TIPO_MEDICO'
		and	nullable = 'N';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('prosa', 'alter table PLS_OC_PROC_ESPEC_REGRA modify IE_TIPO_MEDICO null');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('09/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSEXOW_PROCEDI_FK_I';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLSEXOW_PROCEDI_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSOCCW_PROCEDI_FK_I';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLSOCCW_PROCEDI_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPAFA_SERNOFI_FK_I';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLSPAFA_SERNOFI_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSRCOA_PROCEDI_FK_I';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLSRCOA_PROCEDI_FK_I');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSXRCE_PROCEDI_FK_I';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLSXRCE_PROCEDI_FK_I');
	end if;

	CALL Exec_sql_Dinamico('Edgar', 'Create Index PLSEXOW_PROCEDI_FK_I on PLS_EXCECAO_OCORRENCIA_WEB(CD_PROCEDIMENTO, IE_ORIGEM_PROCED) ');
	CALL Exec_sql_Dinamico('Edgar', 'Create Index PLSOCCW_PROCEDI_FK_I on PLS_OCORRENCIA_CONTA_WEB( CD_PROCEDIMENTO, IE_ORIGEM_PROCED) ');
	CALL Exec_sql_Dinamico('Edgar', 'Create Index PLSPAFA_SERNOFI_FK_I on PLS_PARAMETRO_FATURAMENTO( CD_SERIE_NF, CD_ESTABELECIMENTO) ');
	CALL Exec_sql_Dinamico('Edgar', 'Create Index PLSRCOA_PROCEDI_FK_I on PLS_REGRA_CONTA_AUT( CD_PROCEDIMENTO, IE_ORIGEM_PROCED) ');
	CALL Exec_sql_Dinamico('Edgar', 'Create Index PLSXRCE_PROCEDI_FK_I on PLS_XML_REGRA_CAMPO_ESP( CD_PROCEDIMENTO, IE_ORIGEM_PROCED) ');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('12/07/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'TIRECOB_BANOCES_FK_I';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index TIRECOB_BANOCES_FK_I');
	end if;
	CALL Exec_sql_Dinamico('Edgar', 'Create Index TIRECOB_BANOCES_FK_I on TITULO_RECEBER_COBR(CD_BANCO, CD_OCORRENCIA) ');

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPARA_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLSPARA_UK');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPARA_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'alter table  PLS_PARAMETROS drop constraint PLSPARA_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Diether OS 480302 - Alterar nota fiscal para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('08/08/2012','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_CONTA_MAT'
		and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
		and	column_name	= 'NR_NOTA_FISCAL';

		if (qt_registro_w > 0) then
			/* Alterar o campo nr_nota_fiscal da tabela pls_conta_mat */

			CALL exec_sql_dinamico('Tasy',' alter table pls_conta_mat add nr_nota_fiscal_var Varchar2(20)');
			
			CALL exec_sql_dinamico('Tasy',' alter table pls_conta_mat rename column nr_nota_fiscal to nr_nota_number ');
			CALL exec_sql_dinamico('Tasy',' alter table pls_conta_mat rename column nr_nota_fiscal_var to nr_nota_fiscal ');
			
			qt_varchar_w	:= obter_select_concatenado_bv('select count(1) from pls_conta_mat where nr_nota_fiscal is not null',null,null);
			qt_number_w	:= obter_select_concatenado_bv('select count(1) from pls_conta_mat where nr_nota_number is not null',null,null);
			
			if (qt_varchar_w = qt_number_w) then
				CALL exec_sql_dinamico('Tasy',' alter table pls_conta_mat drop column nr_nota_number');
			end if;
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Paulo - Alterar nota fiscal para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('24/08/2012','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_CONTA_ATEND_ITEM'
		and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
		and	column_name	= 'NR_NOTA_FISCAL';

		if (qt_registro_w > 0) then
			/* Alterar o campo nr_nota_fiscal da tabela pls_conta_atend_item */

			CALL exec_sql_dinamico('Tasy',' alter table pls_conta_atend_item add nr_nota_fiscal_var Varchar2(255)');
			CALL exec_sql_dinamico('Tasy',' alter table pls_conta_atend_item drop column nr_nota_fiscal ');
			CALL exec_sql_dinamico('Tasy',' alter table pls_conta_atend_item rename column nr_nota_fiscal_var to nr_nota_fiscal ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('09/08/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'FUNTABE_UK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('cetrentin','drop index FUNTABE_UK');	
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'FUNTABE_UK'
	and	table_name = 'FUNCAO_TABELA';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('cetrentin', 'alter table FUNCAO_TABELA drop constraint FUNTABE_UK');
	end if;	
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/08/2012','dd/mm/yyyy')) then
	begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'RESCECO_UK'
	and	table_name = 'RESULTADO_CENTRO_CONTROLE';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('OS436040', 'alter table RESULTADO_CENTRO_CONTROLE drop constraint RESCECO_UK');
	end if;	
	
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Excluir o objeto da base */

	if (dt_versao_atual_cliente_w < to_date('24/08/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_source
		where	name = 'PLS_CONTA_GERAR_SPSADT';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop procedure PLS_CONTA_GERAR_SPSADT'
);
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Ajustar tabela nova da análise - Francisco */

	if (dt_versao_atual_cliente_w < to_date('28/08/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'WPLSAIT_PK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','alter table w_pls_analise_item drop constraint WPLSAIT_PK');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'WPLSAGO_PK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','alter table w_pls_analise_glosa_ocor drop constraint WPLSAGO_PK');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'WPLSAIE_PK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','alter table w_pls_analise_item_exp drop constraint WPLSAIE_PK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_sequences
		where	sequence_name = 'W_PLS_ANALISE_ITEM_SEQ';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop sequence W_PLS_ANALISE_ITEM_SEQ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_sequences
		where	sequence_name = 'W_PLS_ANALISE_GLOSA_OCOR_SEQ';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop sequence W_PLS_ANALISE_GLOSA_OCOR_SEQ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_sequences
		where	sequence_name = 'W_PLS_ANALISE_ITEM_EXP_SEQ';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop sequence W_PLS_ANALISE_ITEM_EXP_SEQ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Paulo - Alterar nota fiscal para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('03/09/2012','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_LOTE_PROTOCOLO'
		and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
		and	column_name	= 'NR_NOTA_FISCAL';

		if (qt_registro_w > 0) then
			/* Alterar o campo nr_nota_fiscal da tabela pls_lote_protocolo */

			CALL exec_sql_dinamico('Tasy', 'alter trigger pls_lote_protocolo_update disable');
			CALL exec_sql_dinamico('Tasy',' alter table pls_lote_protocolo add nr_nota_fiscal_var Varchar2(255)');
			CALL exec_sql_dinamico('Tasy',' alter table pls_lote_protocolo drop column nr_nota_fiscal ');
			CALL exec_sql_dinamico('Tasy',' alter table pls_lote_protocolo rename column nr_nota_fiscal_var to nr_nota_fiscal ');
			CALL exec_sql_dinamico('Tasy', 'alter trigger pls_lote_protocolo_update enable');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Dropar índice incorreto da análise nova - Francisco */

	if (dt_versao_atual_cliente_w < to_date('03/09/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSACPA_PLSAUGR_FK_I';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSACPA_PLSAUGR_FK_I');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 31/08/2012 -  Retirar os campos  DT_INICIO_VIGENCIA e  DT_FIM_VIGENCIA da tabela  PLS_OCORRENCIA_EXIGE_VALOR */

if (dt_versao_atual_cliente_w < to_date('31/08/2012','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_OCORRENCIA_EXIGE_VALOR'
	and	column_name	= 'DT_INICIO_VIGENCIA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_ocorrencia_exige_valor drop column DT_INICIO_VIGENCIA');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_OCORRENCIA_EXIGE_VALOR'
	and	column_name	= 'DT_FIM_VIGENCIA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_ocorrencia_exige_valor drop column DT_FIM_VIGENCIA');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Djavan  31/08/2012  alterar os campos IE_TIPO_TABELA e IE_ORIGEM_SERVICO para aceitar valor nulo */

if (dt_versao_atual_cliente_w < to_date('31/08/2012','dd/mm/yyyy')) then
	/* Alterar o campo IE_TIPO_TABELA para null*/

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_OCORRENCIA_EXIGE_VALOR'
	and	column_name	= 'NR_SEQ_OCORRENCIA'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table pls_ocorrencia_exige_valor modify  NR_SEQ_OCORRENCIA null;');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*lepinski - Dropar a tabela W_PLS_PROP_BENEF_DOCUMENTO */

if (dt_versao_atual_cliente_w < to_date('19/09/2012','dd/mm/yyyy')) then
	select 	count(*)
	into STRICT	qt_registro_w
	from	tabela_sistema
	where	upper(nm_tabela) = 'W_PLS_PROP_BENEF_DOCUMENTO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rlepinski','drop table W_PLS_PROP_BENEF_DOCUMENTO');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*rlepinski -Aumentar o tamanho do campo IE_TIPO_ITEM_MENSALIDADE da tabela PLS_REGRA_ACRESCIMO*/

if (dt_versao_atual_cliente_w < to_date('22/09/2012','dd/mm/yyyy')) then
	CALL Exec_sql_Dinamico('rlepinski','alter table PLS_REGRA_ACRESCIMO modify IE_TIPO_ITEM_MENSALIDADE varchar2(255)');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Ajustar UK análise nova - Francisco */

	if (dt_versao_atual_cliente_w < to_date('07/09/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSGOGR_UK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','alter table PLS_ANALISE_GLO_OCOR_GRUPO drop constraint PLSGOGR_UK');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('14/09/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_GERAR_ANALISE_ITEM_PARTIC';
		
		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('dhoffman', 'DROP PROCEDURE PLS_GERAR_ANALISE_ITEM_PARTIC'
);
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Alexandre 29/09/2012  - Alterar campo NR_SEQ_EVENTO_MENS  para null da tabela PLS_ALERTA_EVENT_DEST_FIXO  */

if (dt_versao_atual_cliente_w < to_date('29/09/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_ALERTA_EVENT_DEST_FIXO'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_EVENTO_MENS';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_alerta_event_dest_fixo modify nr_seq_evento_mens null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 03/10/2012  - Dropar constraint e indice que estavam incorretos  na tabela PLS_SOLIC_ALT_CADASTRO  */

if (dt_versao_atual_cliente_w < to_date('03/10/2012','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSSALC_TASLOAL_FK'
	and	column_name	= 'NR_SEQ_SOLIC_ALTERACAO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_solic_alt_cadastro drop constraint PLSSALC_TASLOAL_FK'); /* integridade */
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSSALC_TASLOAL_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'drop index PLSSALC_TASLOAL_FK_I'); /* índice */
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Alexandre 29/10/2012  - Alterar campo NR_SEQ_SEGURADO  para null da tabela PROCESSO_JUDICIAL_LIMINAR  */

if (dt_versao_atual_cliente_w < to_date('29/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PROCESSO_JUDICIAL_LIMINAR'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_SEGURADO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table processo_judicial_liminar modify nr_seq_segurado null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Djavan 19/11/2012  - Alterar os campos QT_TEMPO_SEM_MAT e QT_TEMPO_COM_MAT  para null da tabela PLS_REGRA_LIMITE_ENVIO_SCS  */

if (dt_versao_atual_cliente_w < to_date('19/11/2012','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REGRA_LIMITE_ENVIO_SCS'
	and	nullable 	= 'N'
	and	column_name	= 'QT_TEMPO_SEM_MAT';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_regra_limite_envio_scs modify qt_tempo_sem_mat null');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REGRA_LIMITE_ENVIO_SCS'
	and	nullable 	= 'N'
	and	column_name	= 'QT_TEMPO_COM_MAT';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_regra_limite_envio_scs modify qt_tempo_com_mat null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Djavan 29/11/2012  - Alterar os campos NR_TRANSACAO_UNI_EXEC e NR_TRANSACAO_UNI_BENEF  para null da tabela PTU_RESP_PEDIDO_STATUS  */

if (dt_versao_atual_cliente_w < to_date('29/11/2012','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_RESP_PEDIDO_STATUS'
	and	nullable 	= 'N'
	and	column_name	= 'NR_TRANSACAO_UNI_EXEC';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table PTU_RESP_PEDIDO_STATUS modify NR_TRANSACAO_UNI_EXEC null');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_RESP_PEDIDO_STATUS'
	and	nullable 	= 'N'
	and	column_name	= 'NR_TRANSACAO_UNI_BENEF';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table PTU_RESP_PEDIDO_STATUS modify NR_TRANSACAO_UNI_BENEF null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Paulo - 06/11/2012 - Ajustar a obrigatoriedade dos campos */

	if (dt_versao_atual_cliente_w < to_date('06/11/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_PROCEDIMENTO_OPM'
		and	column_name = 'CD_PROCEDIMENTO'
		and	nullable = 'N';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('prosa', 'alter table PLS_PROCEDIMENTO_OPM modify CD_PROCEDIMENTO null');
			CALL exec_sql_dinamico('prosa', 'alter table PLS_PROCEDIMENTO_OPM modify IE_ORIGEM_PROCED null');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_PROCEDIMENTO_OPM'
		and	column_name = 'QT_LIBERADA'
		and	nullable = 'N';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('prosa', 'alter table PLS_PROCEDIMENTO_OPM modify QT_LIBERADA null');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('06/11/2012','dd/mm/yyyy')) then
	begin
	select 	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSCOPRO_PLSRCIO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('dhoffman', 'DROP INDEX PLSCOPRO_PLSRCIO_FK_I');
	end if;
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote 13/11/2012 - Ajustar o campo NR_CNS da tabela PLS_RETORNO_SIB*/

if (dt_versao_atual_cliente_w < to_date('13/11/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_RETORNO_SIB'
	and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
	and	column_name	= 'NR_CNS';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_RETORNO_SIB add NR_CNS_VAR Varchar2(20)');
		CALL exec_sql_dinamico('Tasy',' update PLS_RETORNO_SIB set NR_CNS_VAR = NR_CNS WHERE NR_CNS <> 0 ');
		CALL exec_sql_dinamico('Tasy',' alter table PLS_RETORNO_SIB drop column NR_CNS ');
		CALL exec_sql_dinamico('Tasy',' alter table PLS_RETORNO_SIB rename column NR_CNS_VAR to NR_CNS ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Lepinski - 28/11/2012 - Retirar a obrigatoriedade do campo cd_centro_custo */

if (dt_versao_atual_cliente_w < to_date('28/11/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REGRA_CENTRO_CUSTO'
	and	nullable 	= 'N'
	and	column_name	= 'CD_CENTRO_CUSTO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rlepinski', 'alter table pls_regra_centro_custo modify (cd_centro_custo null)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('26/11/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSPROO_UK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','alter table PLS_PROCEDIMENTO_OPM drop constraint PLSPROO_UK');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('03/09/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	upper(object_name)	= 'PLS_OBTER_REGRA_BLOQ_COPARTIC';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop procedure PLS_OBTER_REGRA_BLOQ_COPARTIC'
);
	end if;
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name	= 'PLS_REGRA_BLOQ_COPARTIC';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop table  PLS_REGRA_BLOQ_COPARTIC');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('10/09/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSPGPA_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'alter table PLS_PROC_GRAU_PARTIC drop constraint PLSPGPA_UK');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPGPA_UK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLSPGPA_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('01/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_MAT_UNI_FED_SC_PRECO'
	and	column_name	= 'NR_SEQ_MAT_IMP';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edgar','alter table PLS_MAT_UNI_FED_SC_PRECO drop column NR_SEQ_MAT_IMP');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('11/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PRESTADOR_PLANTONISTA'
	and	column_name	= 'NR_SEQ_PRESTADOR_EXEC';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edgar','alter table PLS_PRESTADOR_PLANTONISTA drop column NR_SEQ_PRESTADOR_EXEC');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('31/10/2012','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_INCLUSAO_PRESTADOR'
	and	column_name	= 'SG_CONSELHO';
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Edgar','alter table PLS_INCLUSAO_PRESTADOR drop column SG_CONSELHO');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('12/03/2013', 'dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLPREPR_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'Alter Table PLS_PRESTADOR_PROC drop constraint PLPREPR_UK');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLPREPR_UK';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('Edgar', 'drop index PLPREPR_UK');
	end if;

	CALL Exec_sql_Dinamico('Edgar', 	'Alter Table PLS_PRESTADOR_PROC add Constraint PLPREPR_UK Unique ( ' ||
					'	NR_SEQ_PRESTADOR, ' || 
					'	CD_AREA_PROCEDIMENTO, ' || 
					'	CD_ESPECIALIDADE_PROC, ' || 
					'	CD_GRUPO_PROC, ' || 
					'	CD_PROCEDIMENTO, ' || 
					'	IE_ORIGEM_PROCED, ' || 
					'	NR_SEQ_GRUPO_SERV, ' || 
					'	DT_INICIO_VIGENCIA, ' || 
					'	DT_FIM_VIGENCIA, ' || 
					'	NR_SEQ_PRESTADOR_EXEC, ' || 
					'	IE_TIPO_GUIA, ' || 
					'	NR_SEQ_PLANO) ');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('08/05/2013', 'dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'GERAR_COBR_ESCR_UNICRED_250';
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('wcbernardino', 'drop procedure gerar_cobr_escr_unicred_250'
);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('05/12/2012','dd/mm/yyyy')) then
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSCOVB_I1';	
		exception
		when others then
			qt_registro_w	:= 0;
		end;
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('prosa', 'Drop Index PLSCOVB_I1');
		end if;	
		
		begin
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSCOVB_I2';
		exception
		when others then
			qt_registro_w	:= 0;
		end;
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('prosa', 'Drop Index PLSCOVB_I2');
		end if;	
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote 07/12/2012 - Aumentar o campo CD_AGENCIA_BANCARIA da tabela  W_PLS_RELAT_BOLETO*/

if (dt_versao_atual_cliente_w < to_date('07/12/2012','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'W_PLS_RELAT_BOLETO'
	and	column_name = 'CD_AGENCIA_BANCARIA'
	and	data_length = 8;

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('aaschlote','alter table W_PLS_RELAT_BOLETO modify CD_AGENCIA_BANCARIA varchar2(255)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Excluir integridades de tabelas temporárias. */

	if (dt_versao_atual_cliente_w < to_date('24/12/2012','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'WPLSOPA_PLSOCOR_FK';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('prosa', 'alter table W_PLS_OCORRENCIA_PARTIC drop constraint WPLSOPA_PLSOCOR_FK'); /* Integridade */
		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'WPLSOPA_PLSPRPAR_FK';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('prosa', 'alter table W_PLS_OCORRENCIA_PARTIC drop constraint WPLSOPA_PLSPRPAR_FK'); /* Integridade */
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Lepinski - Retirar a obrigatoriedade do campo NR_SEQ_REPASSE */

if (dt_versao_atual_cliente_w < to_date('11/01/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REPASSE_LANC'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_REPASSE';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rlepinski', 'alter table PLS_REPASSE_LANC modify (NR_SEQ_REPASSE NULL)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*Djavan 11/02/2013  - Alterar oscampo QT_TIPO_QUANTIDADE  para NULL da tabela PLS_VALIDACAO_AUT_CAD*/

if (dt_versao_atual_cliente_w < to_date('11/02/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_VALIDACAO_AUT_CAD'
	and	nullable 	= 'N'
	and	column_name	= 'QT_TIPO_QUANTIDADE';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table PLS_VALIDACAO_AUT_CAD modify QT_TIPO_QUANTIDADE null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*Djavan 04/03/2013  - Alterar oscampo NR_SEQ_OCOR_AUT_COMBINADA  para NOT NULL da tabela PLS_VALIDACAO_AUT_QT_INCID*/

if (dt_versao_atual_cliente_w < to_date('04/03/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_VALIDACAO_AUT_QT_INCID'
	and	nullable 	= 'Y'
	and	column_name	= 'NR_SEQ_OCOR_AUT_COMBINADA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table PLS_VALIDACAO_AUT_QT_INCID modify NR_SEQ_OCOR_AUT_COMBINADA not null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Lepinski - Retirar a obrigatoriedade do campo nr_seq_grupo_ans, que não é mais obrigatório na contabilidade, de acordo com RN314 */

if (dt_versao_atual_cliente_w < to_date('05/03/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REGRA_CTB_MENSAL_DESP'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_GRUPO_ANS';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('lepinski', 'alter table PLS_REGRA_CTB_MENSAL_DESP modify (NR_SEQ_GRUPO_ANS null)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Lepinski - Retirar a obrigatoriedade do campo nr_seq_grupo_ans, que não é mais obrigatório na contabilidade, de acordo com RN314 */

if (dt_versao_atual_cliente_w < to_date('19/03/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REGRA_CTB_MENSAL_REEMB'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_GRUPO_ANS';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('lepinski', 'alter table PLS_REGRA_CTB_MENSAL_REEMB modify (NR_SEQ_GRUPO_ANS null)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('04/02/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints a
	where	a.constraint_name = 'PLSGOGR_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco', 'alter table pls_analise_glo_ocor_grupo drop constraint PLSGOGR_UK'); /* Integridade */
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes a
	where	a.index_name = 'PLSGOGR_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco', 'drop index PLSGOGR_UK'); /* Integridade */
	end if;
	
	/* Coloquei tratamento de exception pois pode ter registros já errados 
	begin
		exec_sql_dinamico('Francisco', 'Alter Table PLS_ANALISE_GLO_OCOR_GRUPO add ( Constraint PLSGOGR_UK Unique (NR_SEQ_ANALISE,NR_SEQ_GRUPO,NR_SEQ_OCOR_BENEF,NR_SEQ_CONTA_GLOSA) Using Index Tablespace TASY_INDEX)');
	exception
		when others then
		null;
	end;*/
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Décio Lehmkuhl 14/02/2013 excluir integridade da tabela sip_nv_vinc_dados */

	if (dt_versao_atual_cliente_w < to_date('14/02/2013','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'SIPNVVD_UK';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('dlehmkuhl', 'alter table SIP_NV_VINC_DADOS drop constraint SIPNVVD_UK'); /* Integridade */
		end if;

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'SIP_NV_VINC_DADOS'
		and	column_name	= 'NR_SEQ_NV_DADOS';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('dlehmkuhl', 'alter table SIP_NV_VINC_DADOS drop column NR_SEQ_NV_DADOS'); /* campo */
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('28/03/2013','dd/mm/yyyy')) then
	begin
	qt_registro_w := obter_valor_dinamico('select count(*) from user_constraints where constraint_name = ''DESREQD_UK'' ', qt_registro_w);
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco','alter table des_requisito_item_detalhe drop constraint DESREQD_UK ');
		qt_registro_w := obter_valor_dinamico('select count(*) from user_indexes where index_name = ''DESREQD_UK'' ', qt_registro_w);
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco','drop index DESREQD_UK ');
			commit;
		end if;
	end if;
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
select 	count(*)
into STRICT 	qt_registro_w
from 	user_tab_columns
where	table_name 	= 'TABELA_SISTEMA'
and	column_name 	= 'IE_CALLSTACK';
	
if (qt_registro_w = 0) then
	CALL exec_sql_dinamico('cetrentin','alter table tabela_sistema add IE_CALLSTACK VARCHAR2(1)');
	CALL valida_objetos_sistema();
end if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 26/04/2013  - Alterar o campo DS_COR_FUNDO para Varchar2 */

if (dt_versao_atual_cliente_w < to_date('26/04/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'DES_DIAGRAMA_OBJETO'
	and	column_name	= 'DS_COR_FUNDO'
	and	data_type = 'NUMBER';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table DES_DIAGRAMA_OBJETO modify DS_COR_FUNDO Varchar2(255)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 30/04/2013  - Deletar campo IE_TIPO_ACOMOCADAO  */

if (dt_versao_atual_cliente_w < to_date('30/04/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_COMUNICACAO_INTERNACAO'
	and	column_name	= 'IE_TIPO_ACOMOCADAO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_comunicacao_internacao drop column IE_TIPO_ACOMOCADAO');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Sestari 08/04/2013  */

begin
if (dt_versao_atual_cliente_w < to_date('08/05/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'DESC_SALVAR_DIAGRAMA_OBJETO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aasestari', 'drop procedure desc_salvar_diagrama_objeto'
); /* procedure */
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('10/05/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT 	qt_registro_w
	from	user_Tables
	where	table_name  = 'W_BANDA_RELAT_VARIAVEL';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','create table w_banda_relat_variavel (NR_SEQUENCIA NUMBER(10) NOT NULL, DT_ATUALIZACAO DATE NOT NULL, NM_USUARIO VARCHAR2(15) NOT NULL, DT_ATUALIZACAO_NREC DATE, NM_USUARIO_NREC VARCHAR2(15), NR_SEQ_BANDA NUMBER(10), NM_VARIAVEL VARCHAR2(60), DS_EXPRESSAO VARCHAR2(255), DS_VALOR_INICIAL VARCHAR2(60), IE_CLASSE_VARIAVEL VARCHAR2(1), IE_OPERACAO VARCHAR2(2))');
		CALL valida_objetos_sistema();
	end	if;	
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
	
begin	
if (dt_versao_atual_cliente_w < to_date('08/05/2013','dd/mm/yyyy')) then
	begin
	qt_registro_w := obter_valor_dinamico('select count(1) from user_sequences where sequence_name = ''PLS_CONTA_MEDICA_RESUMO_SEQ'' ', qt_registro_w);
	if (qt_registro_w = 0) then
		CALL Exec_sql_Dinamico('TASY', ' Create Sequence PLS_CONTA_MEDICA_RESUMO_SEQ ' ||
					' Increment by 1 Start With 1 ' ||
					' MaxValue 9999999999 Cycle NoCache ');
					
					
	end if;
	end;
end if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Sestari 24/05/2013  OS592511  */

if (dt_versao_atual_cliente_w < to_date('24/05/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_ANEXO_AUT'
	and	column_name	= 'NR_LOTE_PRESTADOR'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aasestari', 'alter table pls_lote_anexo_aut modify nr_lote_prestador null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 04/06/2013  Alterar o campo CD_GUIA_REFERENCIA para não ser obrigatório  */

if (dt_versao_atual_cliente_w < to_date('04/06/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_ANEXO_GUIAS_IMP'
	and	column_name	= 'CD_GUIA_REFERENCIA'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'alter table pls_lote_anexo_guias_imp modify cd_guia_referencia null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('21/05/2013','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_BENEF';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_BENEF'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_CONTA';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_CONTA'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_INTERC';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_INTERC'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_MAT';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_MAT'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_PREST';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_PREST'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_PROC';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_PROC'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_PROD';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_PROD'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_FILTRO_PROF';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_FILTRO_PROF'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_OBTER_SE_FILTRO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function PLS_OC_CTA_OBTER_SE_FILTRO'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'PLS_OC_CTA_GERAR_COMBINADA_OLD';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop procedure PLS_OC_CTA_GERAR_COMBINADA_OLD'
);
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 10/06/2013  Alterar o campo CD_UNIMED_BENEFICIARIO para não ser obrigatório  */

if (dt_versao_atual_cliente_w < to_date('10/06/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_REGRA_OBSERV_INTERC'
	and	column_name	= 'CD_UNIMED_BENEFICIARIO'
	and	nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'alter table pls_regra_observ_interc modify cd_unimed_beneficiario null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder  18/06/2013 - Dropar a integridade da PLS_REC_GLOSA_CONTA_IMP com a PLS_REC_GLOSA_PROTOCOLO, campo NR_SEQ_PROTOCOLO */

if (dt_versao_atual_cliente_w < to_date('18/06/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PRGCIMP_PRGPROT_FK'
	and		column_name	= 'NR_SEQ_PROTOCOLO';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('baca', 'alter table pls_rec_glosa_conta_imp drop constraint PRGCIMP_PRGPROT_FK'); /* integridade */
		CALL exec_sql_dinamico('baca', 'drop index PRGCIMP_PRGPROT_FK_I'); /* índice */
		CALL exec_sql_dinamico('baca', 'alter table pls_rec_glosa_conta_imp drop column NR_SEQ_PROTOCOLO'); /* campo */
		end;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Sestari - ajuste na tabela PLS_REC_GLOSA_PROC_IMP */

if (dt_versao_atual_cliente_w < to_date('23/07/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PRGPIMP_PRGCIMP_FK1';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table PLS_REC_GLOSA_PROC_IMP drop constraint PRGPIMP_PRGCIMP_FK1'); /* integridade */
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PRGPIMP_PRGCIMP_FK1_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'drop index PRGPIMP_PRGCIMP_FK1_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Sestari - ajuste na tabela PLS_REC_GLOSA_PROC_IMP */

if (dt_versao_atual_cliente_w < to_date('24/07/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PRGPIMP_PRGCIMP_FK2';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table PLS_REC_GLOSA_PROC_IMP drop constraint PRGPIMP_PRGCIMP_FK2'); /* integridade */
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PRGPIMP_PRGCIMP_FK2_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'drop index PRGPIMP_PRGCIMP_FK2_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Sestari 24/06/2013  OS601398  */

if (dt_versao_atual_cliente_w < to_date('24/06/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_ANEXO_AUT'
	and		column_name	= 'NR_SEQ_LOTE_ANEXO'
	and		nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aasestari', 'alter table pls_lote_anexo_aut modify nr_seq_lote_anexo null');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_LOTE_ANEXO_GUIAS_IMP'
	and		column_name	= 'NR_SEQ_LOTE_ANEXO'
	and		nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aasestari', 'alter table pls_lote_anexo_guias_imp modify nr_seq_lote_anexo null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder 24/06/2013  Retirar o campo NR_SEQ_PEDIDO de obrigatório da tabela PTU_PEDIDO_AUT_ANEXO de anexo na transação do SCS  */

if (dt_versao_atual_cliente_w < to_date('24/06/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PTU_PEDIDO_AUT_ANEXO'
	and		column_name	= 'NR_SEQ_PEDIDO'
	and		nullable	= 'N';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'alter table ptu_pedido_aut_anexo modify nr_seq_pedido null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*rlepinski Ajustar o campo CD_CNS da tabela PLS_INTERF_SIB*/

if (dt_versao_atual_cliente_w < to_date('03/07/2013','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_INTERF_SIB'
	and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2'
	and	column_name	= 'CD_CNS';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('lepinski',' alter table PLS_INTERF_SIB add CD_CNS_VAR Varchar2(20) ');
		CALL exec_sql_dinamico('lepinski',' update PLS_INTERF_SIB set CD_CNS_VAR = CD_CNS WHERE CD_CNS <> 0 ');
		CALL exec_sql_dinamico('lepinski',' alter table PLS_INTERF_SIB drop column CD_CNS ');
		CALL exec_sql_dinamico('lepinski',' alter table PLS_INTERF_SIB rename column CD_CNS_VAR to CD_CNS ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- JJUNG 10/10/2013 - Dropar o campo ie_filtro_saida da PLS_SELECAO_OCOR_CTA - Não será utilizado
	if (dt_versao_atual_cliente_w < to_date('10/10/2013','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_SELECAO_OCOR_CTA'
		and	column_name	= 'IE_FILTRO_SAIDA';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Felipe', 'alter table PLS_SELECAO_OCOR_CTA drop column IE_FILTRO_SAIDA'); /* campo */
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('09/07/2013','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'OBTER_NM_TIPO_DETALHE';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function OBTER_NM_TIPO_DETALHE'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'OBTER_DESC_AREA_ATENCAO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function OBTER_DESC_AREA_ATENCAO'
);
		end if;
		
			select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name	= 'OBTER_DESC_TEMA';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop function OBTER_DESC_TEMA'
);
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('19/07/2013','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'MPREV_CAMPANHA_PARTIC'
		and	column_name	= 'CD_PESSOA_FISICA';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_CAMPANHA_PARTIC drop column CD_PESSOA_FISICA');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'MPREV_REGRA_CUBO_PESSOA'
		and	column_name	= 'QT_IDADE_MINIMA'
		and	data_scale	= 2;
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_PESSOA modify QT_IDADE_MINIMA number(3)');
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_PESSOA modify QT_IDADE_MAXIMA number(3)');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('24/07/2013','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'MPREV_REGRA_CUBO_ATEND'
		and	column_name	= 'QT_DIAS_CONSIDERAR';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_ATEND drop column QT_DIAS_CONSIDERAR');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'MPREV_REGRA_CUBO_CUSTO'
		and	column_name	= 'QT_MESES_CONSIDERAR';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_CUSTO drop column QT_MESES_CONSIDERAR');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'MPREV_REGRA_CUBO_ATEND'
		and	column_name	= 'CD_PROCEDIMENTO';
		
		if (qt_registro_w > 0) then
			select	count(*)
			into STRICT	qt_registro_w
			from	user_indexes
			where	index_name = 'MPRRCAT_PROCEDI_FK_I';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('Francisco', 'drop index MPRRCAT_PROCEDI_FK_I');
			end if;
			
			select	count(*)
			into STRICT	qt_registro_w
			from	user_constraints
			where	constraint_name = 'MPRRCAT_PROCEDI_FK';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_ATEND drop constraint MPRRCAT_PROCEDI_FK');
			end if;
			
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_ATEND drop column CD_PROCEDIMENTO');
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_ATEND drop column IE_ORIGEM_PROCED');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'MPREV_REGRA_CUBO_ATEND'
		and	column_name	= 'CD_DOENCA';
		
		if (qt_registro_w > 0) then
			select	count(*)
			into STRICT	qt_registro_w
			from	user_indexes
			where	index_name = 'MPRRCAT_CIDDOEN_FK_I';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('Francisco', 'drop index MPRRCAT_CIDDOEN_FK_I');
			end if;
			
			select	count(*)
			into STRICT	qt_registro_w
			from	user_constraints
			where	constraint_name = 'MPRRCAT_CIDDOEN_FK';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_ATEND drop constraint MPRRCAT_CIDDOEN_FK');
			end if;
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_REGRA_CUBO_ATEND drop column CD_DOENCA');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('31/07/2013','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tables
		where	table_name = 'W_PLS_GRUPO_PRECO_SERVICO';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'drop table W_PLS_GRUPO_PRECO_SERVICO');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('22/05/2013','dd/mm/yyyy')) then
	qt_registro_w := obter_valor_dinamico('select count(1) from user_objects where object_name = ''PLS_OC_CTA_GERAR_COMBINADA_OLD'' ', qt_registro_w);
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco', 'drop procedure PLS_OC_CTA_GERAR_COMBINADA_OLD'
);
	end if;
end if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- Dropar Integridade Referêncial da tabela: TISS_ANEXO_GUIA cascade
if (dt_versao_atual_cliente_w < to_date('26/06/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'TISSANGUI_TISSANELO_FK';
	
	if (qt_registro_w > 0) then		
		CALL exec_sql_dinamico('lhalves', 'Alter Table TISS_ANEXO_GUIA drop constraint TISSANGUI_TISSANELO_FK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Brown 16/08/2013 - OS 632613 - Alterar campo para null*/

if (dt_versao_atual_cliente_w < to_date('16/08/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_PEDIDO_INSISTENCIA'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_ORIGEM'  LIMIT 1;

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('ebcabral', 'alter table ptu_pedido_insistencia modify nr_seq_origem null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- DLEHMKUHL 02/06/2013 - Colocar o campo  NR_SEQ_FILTRO na tabela PLS_SELECAO_OCOR_CTA
if (dt_versao_atual_cliente_w < to_date('02/07/2013','dd/mm/yyyy')) then
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where	constraint_name = 'PLSSOCT_UK';
	
	-- se existir a uk
	if (qt_registro_w	> 0) then
		
		select 	count(1)
		into STRICT	qt_registro_w
		from	user_cons_columns
		where 	constraint_name = 'PLSSOCT_UK'
		and 	column_name = 'NR_SEQ_FILTRO';
		
		-- se não existir o campo, apaga a UK e cria novamente
		if (qt_registro_w = 0) then
	
			CALL exec_sql_dinamico('baca', 'alter table PLS_SELECAO_OCOR_CTA drop constraint PLSSOCT_UK');
			
			CALL exec_sql_dinamico('baca', 'Alter Table PLS_SELECAO_OCOR_CTA add ( Constraint PLSSOCT_UK Unique (  NR_ID_TRANSACAO,  NR_SEQ_CONTA,  NR_SEQ_CONTA_PROC,  NR_SEQ_CONTA_MAT,  NR_SEQ_FILTRO))');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder - OS 632986  - Criado integridade com PLS_PRESTADOR deletado o index  PLSEXRE_I4 */

if (dt_versao_atual_cliente_w < to_date('03/09/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSEXRE_I4';
		
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'drop index PLSEXRE_I4');
	end if;	
end if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- tratamento realizado no local errado OS 651197

/*if	(dt_versao_atual_cliente_w < to_date('17/09/2013','dd/mm/yyyy')) then
	select	COUNT(1)
	into	qt_registro_w
	from	user_tab_columns
	where	table_name = 'INDICE'
	AND	column_name = 'DS_MENSAGEM';	

	if	(qt_registro_w = 0) then
		exec_sql_dinamico('Fernando','alter table indice add ds_mensagem varchar2(80) ');
	end	if;
end	if;*/
begin
if (dt_versao_atual_cliente_w < to_date('03/10/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'TIPHICO_PORTADO_FK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('ahoffelder', 'Alter Table TIPO_HIST_COB drop constraint TIPHICO_PORTADO_FK');
		CALL exec_sql_dinamico('ahoffelder', 'Alter Table TIPO_HIST_COB add (Constraint TIPHICO_PORTADO_FK Foreign Key (CD_PORTADOR,CD_TIPO_PORTADOR) References PORTADOR (CD_PORTADOR,CD_TIPO_PORTADOR))');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'TIPHICO_PORTADO_FK_I';
		
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('ahoffelder', 'drop index TIPHICO_PORTADO_FK_I');
		CALL exec_sql_dinamico('ahoffelder', 'create index TIPHICO_PORTADO_FK_I on TIPO_HIST_COB (CD_PORTADOR,CD_TIPO_PORTADOR)');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Eder - OS 632986  - Criado integridade com PLS_PRESTADOR deletado o index  PLSEXRE_I4 */

begin
if (dt_versao_atual_cliente_w < to_date('03/09/2013','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSEXRE_I4';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'drop index PLSEXRE_I4'); /* índice */
	end if;	
end if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- JJUNG - Dropar as functions que não são mais utilizadas na ocorrência nova.
	if (dt_versao_atual_cliente_w < to_date('09/08/2013','dd/mm/yyyy'))	then

		select	count(1)
		into STRICT	qt_registro_w
		from	user_source
		where	name = 'PLS_OC_CTA_GERAR_BINDS_PADRAO';
		
		if (qt_registro_w > 0) then
			
			CALL exec_sql_dinamico('jjung', 'drop function PLS_OC_CTA_GERAR_BINDS_PADRAO'
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_source
		where	name = 'PLS_OC_CTA_OBTER_SEL_PAD';
		
		if (qt_registro_w > 0) then
			
			CALL exec_sql_dinamico('jjung', 'drop function PLS_OC_CTA_OBTER_SEL_PAD'
);
		end if;
		
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('14/08/2013','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'MPREV_GRUPO_COL_TURMA_HOR'
		and	column_name = 'NR_SEQ_LOCAL_ATEND'
		and	nullable = 'N';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Francisco', 'alter table MPREV_GRUPO_COL_TURMA_HOR modify NR_SEQ_LOCAL_ATEND null');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('16/08/2013','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_source
		where	name = 'OBTER_NOME_ACAO';
		
		if (qt_registro_w > 0) then
			
			CALL exec_sql_dinamico('Francisco', 'drop function OBTER_NOME_ACAO'
);
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('04/09/2013','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_REGRA_VALOR_CONTA'
		and	column_name = 'IE_FORMA_GLOSA_INTERC';
		
		if (qt_registro_w > 0) then
			
			CALL exec_sql_dinamico('Francisco', 'alter table PLS_REGRA_VALOR_CONTA drop column IE_FORMA_GLOSA_INTERC');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Dropar índices da tabela PLS_ANALISE_CONTA - Décio */

	if (dt_versao_atual_cliente_w < to_date('05/09/2013','dd/mm/yyyy')) then
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSANCO_I2';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSANCO_I2');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSANCO_I4';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSANCO_I4');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* jjung 12/09/2013 - Alterar ie_ocorrencia_conta para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('10/09/2013','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_COMBINACAO_ITEM_CTA'
		and	column_name	= 'IE_OCORRENCIA_CONTA'
		and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2';

		if (qt_registro_w > 0) then
			/* Alterar o campo ie_ocorrencia_conta da tabela PLS_COMBINACAO_ITEM_CTA */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_COMBINACAO_ITEM_CTA add ie_ocorrencia_conta_var Varchar2(1)');
			CALL exec_sql_dinamico('Tasy',' update PLS_COMBINACAO_ITEM_CTA set ie_ocorrencia_conta_var = to_char(ie_ocorrencia_conta) where ie_ocorrencia_conta is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_COMBINACAO_ITEM_CTA drop column ie_ocorrencia_conta ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_COMBINACAO_ITEM_CTA rename column ie_ocorrencia_conta_var to ie_ocorrencia_conta ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- jjung 19/09/2013 - Em conexão para ajustar os objetos inválidos foi identificado que o campo DS_SETOR_ATENDIMENTO foi excluído do dicionário em 19/02/2013, involuntáriamente, portanto este campo deve ser 

	-- recriado para que não ocorra de bases onde ele não existia ficar objetos inválidos.
	if (dt_versao_atual_cliente_w < to_date('19/09/2013','dd/mm/yyyy')) then

		select	count(1)
		into STRICT	qt_registro_w
		from	tabela_atributo
		where	nm_tabela = 'W_PLS_RESUMO_CONTA'
		and	nm_atributo = 'DS_SETOR_ATENDIMENTO';
		
		if (qt_registro_w = 0) then
		
			insert into TABELA_ATRIBUTO(NM_ATRIBUTO,IE_OBRIGATORIO,NR_SEQUENCIA_CRIACAO,IE_TIPO_ATRIBUTO,IE_LOG_EXCLUSAO,QT_TAMANHO,QT_DECIMAIS,QT_TAMANHO_CALCULO,QT_SEQ_INICIO,QT_SEQ_INCREMENTO,QT_CACHE,DS_ATRIBUTO,IE_READONLY,IE_LOG_UPDATE,IE_COMPONENTE,IE_ATUALIZAR_VERSAO,NR_SEQ_APRESENT,VL_DEFAULT,QT_TAM_DELPHI,QT_TAM_GRID,QT_ALTURA,IE_CRIAR_DESCRICAO,QT_DESLOC_DIREITA,QT_TAM_LABEL,NR_SEQ_GRID,DS_LABEL,DS_LABEL_GRID,IE_TABSTOP,CD_DOMINIO,IE_CRIAR_DESC_FK,NR_SEQ_LOCALIZADOR,IE_SITUACAO,DS_VALORES,IE_CRIAR_ALTERAR,NR_SEQ_ORDEM,QT_COLUNA,NR_SEQ_TABSTOP,DS_MASCARA,DT_CRIACAO,NM_ATRIBUTO_PAI,NR_SEQ_ORDEM_SERV,DS_LABEL_LONGO,DS_FILTER,DS_COR,QT_TAM_FONTE,DS_ESTILO_FONTE,IE_APLICABILIDADE_ESTILO,IE_UNIDADE_MEDIDA,IE_CONVERTE_NEGATIVO,IE_REGRA_UNID_MEDIDA,IE_DEFAULT_BANCO,IE_DBL_CLICK_READONLY,IE_TIPO_BOTAO,DT_ATUALIZACAO,NM_TABELA,NM_USUARIO,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,IE_STATUS,IE_TOTALIZAR,DS_COMANDO)
				 values ('DS_SETOR_ATENDIMENTO','N',130,'VARCHAR2','N',170,null,null,null,null,null,'Descrição do setor de atendimento.','N','N','','S',null,'',null,null,null,'N',null,null,null,'','','S',null,'S',null,'A','','M',null,null,null,'',TO_DATE('19/09/2013 17:00:46','dd/mm/yyyy hh24:mi:ss'),'',null,'','','',null,'','','S','N','N','N','N','',TO_DATE('19/09/2013 17:01:37','dd/mm/yyyy hh24:mi:ss'),'W_PLS_RESUMO_CONTA','dlehmkuhl',TO_DATE('19/09/2013 17:00:46','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl','N','','');

		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'W_PLS_RESUMO_CONTA'
		and	column_name = 'DS_SETOR_ATENDIMENTO';
		
		if (qt_registro_w = 0) then
		
			CALL exec_sql_dinamico('Tasy',' alter table w_pls_resumo_conta add (DS_SETOR_ATENDIMENTO varchar2(170)) ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- jjung - Ajustes nos cadastros dos tipos de validações nas ocorrências.
	if (dt_versao_atual_cliente_w < to_date('25/09/2013','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name = 'PLS_OC_CTA_VALIDAR_EXIG_INDIC';
		
		if (qt_registro_w > 0) then
		
			-- Dropar a procedure  de aplicação da validação de exigência de indicação clínica.
			CALL exec_sql_dinamico('Tasy',' drop procedure pls_oc_cta_validar_exig_indic '
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name = 'PLS_OC_CTA_VAL_EXIG_INDIC';
		
		if (qt_registro_w > 0) then
		
			-- dropar a tabela da validação de exigência clínica.
			CALL exec_sql_dinamico('Tasy',' drop table PLS_OC_CTA_VAL_EXIG_INDIC ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- foi usada a trigger pls_conta_atual para agrupar as PLS_CONTA_IE_TIPO_CONTA e PLS_CONTA_POPULA_CD_GUIA
	if (dt_versao_atual_cliente_w < to_date('02/10/2013','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name = 'PLS_CONTA_IE_TIPO_CONTA';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' drop trigger PLS_CONTA_IE_TIPO_CONTA ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name = 'PLS_CONTA_POPULA_CD_GUIA';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' drop trigger PLS_CONTA_POPULA_CD_GUIA ');
		end if;
		
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');

end;

begin
if (dt_versao_atual_cliente_w < to_date('14/10/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	indice
	where	nm_tabela	= 'REGRA_TIT_PAGAR_NF'
	and	nm_indice	= 'REGTITPAN_OPENOTA_FK_I';

	if (qt_registro_w	> 0) then

		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'REGTITPAN_OPENOTA_FK_I';

		if (qt_registro_w	= 0) then

			CALL exec_sql_dinamico('ahoffelder', 'delete from indice where nm_indice = ' || chr(39) || 'REGTITPAN_OPENOTA_FK_I' || chr(39) || ' and nm_tabela = ' || chr(39) || 'REGRA_TIT_PAGAR_NF' || chr(39));

		end if;

	end if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote 28/10/2013 - Caso não existir a coluna na UK, então dropa para depois recriar*/

if (dt_versao_atual_cliente_w < to_date('28/10/2013','dd/mm/yyyy')) then	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSBOBI_UK'
	and	upper(COLUMN_NAME)	= upper('NR_SEQ_ESTRUT_INFO');

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('aaschlote','alter table PLS_BOLETO_BANDA_INFO drop constraint PLSBOBI_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/10/2013','dd/mm/yyyy')) then	
		
	CALL exec_sql_dinamico('lhalves','delete from xml_atributo where nr_seq_elemento in (select nr_sequencia from xml_elemento where nr_seq_projeto = 101116)');
	CALL exec_sql_dinamico('lhalves','delete from xml_elemento where nr_seq_projeto = 101116');	

	CALL exec_sql_dinamico('lhalves','delete from xml_atributo where nr_seq_elemento in (select nr_sequencia from xml_elemento where nr_seq_projeto = 101080)');
	CALL exec_sql_dinamico('lhalves','delete from xml_elemento where nr_seq_projeto = 101080');
	
	CALL exec_sql_dinamico('lhalves','delete from xml_atributo where nr_seq_elemento in (select nr_sequencia from xml_elemento where nr_seq_projeto = 101046)');
	CALL exec_sql_dinamico('lhalves','delete from xml_elemento where nr_seq_projeto = 101046');	

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Christian 06/11/2013 - OS 630538 - Alterar campo para não obrigatório*/

if (dt_versao_atual_cliente_w < to_date('06/11/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_CONV_ITEM_INEXIST_PTU'
	and	nullable 	= 'N'
	and	column_name	= 'IE_ORIGEM_PROCED'  LIMIT 1;

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('cmgross', 'alter table pls_conv_item_inexist_ptu modify ie_origem_proced null');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_CONV_ITEM_INEXIST_PTU'
	and	nullable 	= 'N'
	and	column_name	= 'CD_PROCEDIMENTO'  LIMIT 1;

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('cmgross', 'alter table pls_conv_item_inexist_ptu modify cd_procedimento null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Takano 11/11/2013 - OS 662528 - remover indexes e fk não necessárias*/

if (dt_versao_atual_cliente_w < to_date('12/11/2013','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'LISINTA_LISTINT_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rhtakano', 'alter table listener_integracao_ativo drop constraint LISINTA_LISTINT_FK');
	end if;

	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'LISINTA_LISINTC_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('rhtakano', 'alter table LISTENER_INTEGRACAO_ATIVO add ( Constraint LISINTA_LISINTC_FK Foreign Key ( NR_SEQ_LISTENER ) References LISTENER_INTEGRACAO_CAD ( NR_SEQUENCIA ))');
	end if;
	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'LISINTA_LISTINT_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('rhtakano', 'drop index LISINTA_LISTINT_FK_I');
		CALL exec_sql_dinamico('rhtakano', 'create Index LISINTA_LISINTC_FK_I on LISTENER_INTEGRACAO_ATIVO(NR_SEQ_LISTENER)');		
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Eder  12/11/2013 - Dropar a integridade da PLS_MONITOR_TISS_PROC com a PLS_MONITOR_TISS_LOTE, campo NR_SEQ_LOTE_MONITOR */

begin
if (dt_versao_atual_cliente_w < to_date('12/11/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'PLSMOTP_PLSMOTL_FK'
	and	column_name	= 'NR_SEQ_LOTE_MONITOR';

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_proc drop constraint PLSMOTP_PLSMOTL_FK'); /* integridade */
		CALL exec_sql_dinamico('baca', 'drop index PLSMOTP_PLSMOTL_FK_I'); /* índice */
		CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_proc drop column NR_SEQ_LOTE_MONITOR'); /* campo */
		end;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


/* Eder  18/11/2013 -  Alterar campo DT_GERACAO_LOTE para não ser obrigatório na tabela PLS_MONITOR_TISS_LOTE */

begin
if (dt_versao_atual_cliente_w < to_date('18/11/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_LOTE'
	and	nullable 	= 'N'
	and	column_name	= 'DT_GERACAO_LOTE';
	

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_lote modify dt_geracao_lote null'); /* campo */
		end;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- JJUNG 27/11/2013 - Dropar a FK PLOCLO_PLSLOPO_FK, estava com a tabela de referencia errada.
begin
	if (dt_versao_atual_cliente_w < to_date('27/11/2013','dd/mm/yyyy')) then

		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLOCLOC_PLSLOPO_FK';
		
		if (qt_registro_w > 0) then
			
			-- Dropar a constraint.
			CALL exec_sql_dinamico('jjung', 'alter table pls_oc_cta_log_ocor drop constraint PLOCLOC_PLSLOPO_FK');
			-- Dropar o indice
			CALL exec_sql_dinamico('jjung', 'drop index PLOCLOC_PLSLOPO_FK_I');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- DLEHMKUHL - apagar a trigger, pois a mesma não tem mais necessidade de existir porque decidimos recriar a pls_parametros_v a cada atualização
	if (dt_versao_atual_cliente_w < to_date('28/11/2013','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name = 'PLS_PARAMETROS_IUD'
		and	object_type = 'TRIGGER';
		if (qt_registro_w > 0) then
			CALL exec_sql_Dinamico('dlehmkuhl', 'drop trigger pls_parametros_iud');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- DLEHMKUHL - criar campos
	if (dt_versao_atual_cliente_w < to_date('04/12/2013','dd/mm/yyyy')) then
	
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_CONTA_POS_CABECALHO'
		and	column_name	= 'NR_SEQ_DISCUSSAO';


		if (qt_registro_w = 0) then
			begin
			CALL exec_sql_dinamico('baca', 'alter table pls_conta_pos_cabecalho add (nr_seq_discussao number(10,0))'); /* campo */
			end;
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCPCA_PLSCODI_FK';

		if (qt_registro_w = 0) then
			
			-- Dropar a constraint.
			CALL exec_sql_dinamico('baca', 'Alter Table pls_conta_pos_cabecalho add ( constraint plscpca_plscodi_fk Foreign Key ( ' ||
						   ' nr_seq_discussao ) References pls_contestacao_discussao ( nr_sequencia))');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSCPCA_PLSCODI_FK_I';

		if (qt_registro_w = 0) then
			CALL exec_sql_dinamico('baca', 'create index plscpca_plscodi_fk_i on pls_conta_pos_cabecalho(nr_seq_discussao)');		
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Sestari */

begin
if (dt_versao_atual_cliente_w <= to_date('28/11/2013','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('aasestari','drop procedure mprev_valida_horario_agenda'
);
	CALL exec_sql_dinamico('aasestari','drop procedure mprev_gerar_horario_individual'
);
	CALL exec_sql_dinamico('aasestari','drop procedure mprev_gerar_horario'
);
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('03/12/2013','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name = 'WMPRAGI_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco','alter table W_MPREV_AGENDA_INCONSIST drop constraint WMPRAGI_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- DLEHMKUHL - alterar campo de data para number
	if (dt_versao_atual_cliente_w < to_date('19/12/2013','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name   = 'PLS_CONTA_MAT'
		and	column_name  = 'DT_DIA_SEMANA'
		and	data_type = 'DATE';


		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_conta_mat drop column dt_dia_semana');
			CALL exec_sql_dinamico('baca', 'alter table pls_conta_mat add (dt_dia_semana number(2,0))'); /* campo */
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- DLEHMKUHL - alterar campo de clob para varchar2
	if (dt_versao_atual_cliente_w < to_date('20/12/2013','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name   = 'PLS_CONTA_PROC'
		and	column_name  = 'DS_REDUNDANCIA'
		and	data_type = 'CLOB';


		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_conta_proc drop column ds_redundancia');
			CALL exec_sql_dinamico('baca', 'alter table pls_conta_proc add ds_redundancia varchar2(4000)'); /* campo */
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name   = 'PLS_CONTA_MAT'
		and	column_name  = 'DS_REDUNDANCIA'
		and	data_type = 'CLOB';


		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_conta_mat drop column ds_redundancia');
			CALL exec_sql_dinamico('baca', 'alter table pls_conta_mat add ds_redundancia varchar2(4000)'); /* campo */
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- DLEHMKUHL - apagar índices desnecessários
	if (dt_versao_atual_cliente_w < to_date('13/01/2014','dd/mm/yyyy')) then
		
		-- início tabela pls_conta_mat
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOMAT_I2';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOMAT_I2');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOMAT_I3';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOMAT_I3');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOMAT_I5';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOMAT_I5');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOMAT_I6';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOMAT_I6');
		end if;
		-- fim tabela pls_conta_mat

		
		-- início tabela pls_conta_proc
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOPRO_I4';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOPRO_I4');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOPRO_I5';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOPRO_I5');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOPRO_I7';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOPRO_I7');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_ind_columns
		where 	index_name	= 'PLSCOPRO_I8';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('wheb', 'drop Index PLSCOPRO_I8');
		end if;
		-- fim tabela pls_conta_proc
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* rlepinski 14/01/2014 - Alterar NR_SERIE_CTPS para varchar2 */

	if (dt_versao_atual_cliente_w < to_date('14/01/2014','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_INCLUSAO_BENEFICIARIO'
		and	column_name	= 'NR_SERIE_CTPS'
		and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2';
		
		if (qt_registro_w > 0) then
			/* Alterar o campo NR_SERIE_CTPS da tabela PLS_INCLUSAO_BENEFICIARIO */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO add NR_SERIE_CTPS_VAR Varchar2(5)');
			CALL exec_sql_dinamico('Tasy',' update PLS_INCLUSAO_BENEFICIARIO set NR_SERIE_CTPS_VAR = to_char(NR_SERIE_CTPS) where NR_SERIE_CTPS is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO drop column NR_SERIE_CTPS ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO rename column NR_SERIE_CTPS_VAR to NR_SERIE_CTPS ');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_CAT'
		and	column_name	= 'NR_SERIE_CTPS'
		and	upper(coalesce(data_type,'NUMBER')) <> 'VARCHAR2';
		
		if (qt_registro_w > 0) then
			/* Alterar o campo NR_SERIE_CTPS da tabela PLS_CAT */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_CAT add NR_SERIE_CTPS_VAR Varchar2(5)');
			CALL exec_sql_dinamico('Tasy',' update PLS_CAT set NR_SERIE_CTPS_VAR = to_char(NR_SERIE_CTPS) where NR_SERIE_CTPS is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CAT drop column NR_SERIE_CTPS ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CAT rename column NR_SERIE_CTPS_VAR to NR_SERIE_CTPS ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (trunc(dt_versao_atual_cliente_w) <= trunc(to_date('25/05/2015','dd/mm/yyyy'))) then
	CALL exec_sql_dinamico('lafeller','delete from prontuario_item_pasta where nr_sequencia = 35');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- DLEHMKUHL - alterar campo de data para number
	if (dt_versao_atual_cliente_w < to_date('21/01/2014','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name   = 'PLS_CTA_LOG_EXEC'
		and	column_name  = 'NR_SEQ_PROCESSO_EXEC';


		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_cta_log_exec drop column nr_seq_processo_exec');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	-- DLEHMKUHL - alterar chave primária de tabela
	if (dt_versao_atual_cliente_w < to_date('27/01/2014','dd/mm/yyyy')) then
		
		select  count(1)
		into STRICT	qt_registro_w
		from  	user_cons_columns
		where  	constraint_name  = 'PLSATXI_PK'
		and   	column_name = 'IE_TIPO_REGRA';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_aux_tx_inter drop constraint PLSATXI_PK');
			CALL exec_sql_dinamico('baca', 'alter table pls_aux_tx_inter add( Constraint PLSATXI_PK Primary Key (NR_SEQ_CONTA))');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* rlepinski 08/02/2014 - Alterar NR_SEQ_CONTA_PROC e NR_SEQ_CONTA_MAT para number(10) */

	if (dt_versao_atual_cliente_w < to_date('08/02/2014','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_CONTA_COPARTICIPACAO'
		and	column_name	= 'NR_SEQ_CONTA_PROC'
		and	data_precision	= 15;
		
		if (qt_registro_w > 0) then
			/* Alterar o campo NR_SEQ_CONTA_PROC da tabela PLS_CONTA_COPARTICIPACAO */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_COPARTICIPACAO add NR_SEQ_CONTA_PROC_VAR number(10)');
			CALL exec_sql_dinamico('Tasy',' update PLS_CONTA_COPARTICIPACAO set NR_SEQ_CONTA_PROC_VAR = NR_SEQ_CONTA_PROC where NR_SEQ_CONTA_PROC is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_COPARTICIPACAO drop column NR_SEQ_CONTA_PROC ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_COPARTICIPACAO rename column NR_SEQ_CONTA_PROC_VAR to NR_SEQ_CONTA_PROC ');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_CONTA_COPARTICIPACAO'
		and	column_name	= 'NR_SEQ_CONTA_MAT'
		and	data_precision	= 15;
		
		if (qt_registro_w > 0) then
			/* Alterar o campo NR_SEQ_CONTA_MAT da tabela PLS_CONTA_COPARTICIPACAO */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_COPARTICIPACAO add NR_SEQ_CONTA_MAT_VAR number(10)');
			CALL exec_sql_dinamico('Tasy',' update PLS_CONTA_COPARTICIPACAO set NR_SEQ_CONTA_MAT_VAR = NR_SEQ_CONTA_MAT where NR_SEQ_CONTA_MAT is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_COPARTICIPACAO drop column NR_SEQ_CONTA_MAT ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_COPARTICIPACAO rename column NR_SEQ_CONTA_MAT_VAR to NR_SEQ_CONTA_MAT ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('10/02/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_sequences
		where	sequence_name = 'TASY_IDIOMA_SEQ';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop sequence tasy_idioma_seq');
		end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- jjung ajustes na tabela PLS_OC_CTA_VAL_47 - Dropando campo desnecessário.
if (dt_versao_atual_cliente_w < to_date('10/02/2014','dd/mm/yyyy')) then
	
	begin
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSOC47_PLSORPP_FK_I';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('jjung','drop index PLSOC47_PLSORPP_FK_I');
		end if;	
	exception
	when others then
		null;
	end;
	
	begin
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSOC47_PLSORPP_FK';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('jjung','alter table pls_oc_cta_val_47 drop constraint PLSOC47_PLSORPP_FK');
		end if;
	exception
	when others then
		null;
	end;
	
	begin
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_OC_CTA_VAL_47'
		and	column_name = 'NR_SEQ_REGRA_GRAU_PART';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('jjung','alter table pls_oc_cta_val_47 drop column NR_SEQ_REGRA_GRAU_PART');
		end if;
	exception
	when others then
		CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
	end;
end if;

begin
/* Eder  11/02/2014 -  Alterar campo DT_PROCESSAMENTO para não ser obrigatório na tabela PLS_MONITOR_TISS_ALT */

if (dt_versao_atual_cliente_w < to_date('11/02/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_ALT'
	and	nullable 	= 'N'
	and	column_name	= 'DT_PROCESSAMENTO';
	

	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_alt modify dt_processamento null'); /* campo */
		end;
	end if;

	/* Eder 11/02/2014 - Deletar campo NM_ARQUIVO_XML  */

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_MONITOR_TISS_LOTE'
	and		column_name	= 'NM_ARQUIVO_XML';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table pls_monitor_tiss_lote drop column nm_arquivo_xml');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


begin
if (dt_versao_atual_cliente_w < to_date('12/02/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_AUX_TX_INTER'
		and	column_name = 'IE_COBRANCA_PAGAMENTO';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('baca','alter table PLS_AUX_TX_INTER drop column IE_COBRANCA_PAGAMENTO');
		end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- jjung OS 701070 - Alterar o cache das sequences do SIP. Colocamos no dicionário de dados estes valores porém na sincronização de base

-- o cache fica com 20 para cada uma delas.
if (dt_versao_atual_cliente_w < to_date('14/02/2014','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'SIP_NV_DADOS_SEQ';
	
	if (qt_registro_w > 0) then
	
		CALL exec_sql_dinamico('jjung',
		'begin pls_posicionar_sequence_cache(''SIP_NV_DADOS'', ''NR_SEQUENCIA'', ''R'',  1000); end;');
	end if;
		
	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'SIP_NV_REGRA_VINC_IT_SEQ';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('jjung',
		'begin pls_posicionar_sequence_cache(''SIP_NV_REGRA_VINC_IT'', ''NR_SEQUENCIA'', ''R'',  1500); end;');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'SIP_NV_VINC_DADOS_SEQ';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('jjung',
		'begin pls_posicionar_sequence_cache(''SIP_NV_VINC_DADOS'', ''NR_SEQUENCIA'', ''R'',  2000); end;');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

begin
/* Eder  17/02/2014 -   Retirar a integridade com a tabela PLS_MONITOR_TISS_INC ,  e deletar o campo  NR_SEQ_INCONSISTENCIA  */

if (dt_versao_atual_cliente_w < to_date('17/02/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSMTIV_PLSMOTI_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_inc_val drop constraint PLSMTIV_PLSMOTI_FK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSMTIV_PLSMOTI_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'drop index PLSMTIV_PLSMOTI_FK_I');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_INC_VAL'
	and	column_name = 'NR_SEQ_INCONSISTENCIA';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('baca','alter table pls_monitor_tiss_inc_val drop column nr_seq_inconsistencia');
	end if;	
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_PROC_VAL'
	and	column_name = 'CD_GUPO_PROC';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('baca','alter table pls_monitor_tiss_proc_val drop column cd_gupo_proc');
	end if;	
	
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Francisco - 13/02/2014 - Excluir coluna que não será mais utilizada */

	if (dt_versao_atual_cliente_w < to_date('13/02/2014','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_MONITOR_TISS_ALT'
		and	column_name	= 'IE_TIPO_REGISTRO';

		if (qt_registro_w > 0) then
			/* Alterar o campo nr_nota_fiscal da tabela pls_lote_protocolo */

			CALL exec_sql_dinamico('Tasy',' alter table pls_monitor_tiss_alt drop column IE_TIPO_REGISTRO');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* Francisco - 13/02/2014 - Modificar tipo de coluna*/

	if (dt_versao_atual_cliente_w < to_date('17/02/2014','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_AME_REGRA_RETORNO'
		and	column_name	= 'NM_ARQUIVO_CONTEM'
		and	data_type	= 'NUMBER';

		if (qt_registro_w > 0) then
			/* Alterar o campo nr_nota_fiscal da tabela pls_lote_protocolo */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_AME_REGRA_RETORNO modify NM_ARQUIVO_CONTEM varchar2(255)');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Eder  19/02/2014 -   Dropar o campo IE_SITUACAO da tabela PLS_MONITOR_TISS_LOTE  */

if (dt_versao_atual_cliente_w < to_date('19/02/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_LOTE'
	and	column_name 	= 'IE_SITUACAO';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('baca','alter table pls_monitor_tiss_lote drop column ie_situacao');
	end if;			
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- jjung OS 668475 -  Precisão incorreta do campo CD_MATERIAL na tabela SIP_NV_DADOS
if (dt_versao_atual_cliente_w < to_date('21/02/2014','dd/mm/yyyy')) then
begin
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'SIP_NV_DADOS'
	and	column_name = 'CD_MATERIAL'
	and	data_precision = 6;

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('jjung',
		'ALTER TABLE SIP_NV_DADOS MODIFY CD_MATERIAL NUMBER(10)');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

begin
/* Eder  23/02/2014 -   Dropar o campo QT_PROCEDIMENTO_IMP da tabela PLS_MONITOR_TISS_PROC_VAL  */

if (dt_versao_atual_cliente_w < to_date('23/02/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_PROC_VAL'
	and	column_name 	= 'QT_PROCEDIMENTO_IMP';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('baca','alter table pls_monitor_tiss_proc_val drop column qt_procedimento_imp');
	end if;		

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_MAT_VAL'
	and	column_name 	= 'QT_MATERIAL_IMP';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('baca','alter table pls_monitor_tiss_mat_val drop column qt_material_imp');
	end if;		
	
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_PROC'
	and	column_name 	= 'CD_GUPO_PROC';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca','alter table pls_monitor_tiss_proc drop column cd_gupo_proc');
	end if;	
	
	/*Retirar de obrigatório os campos DT_GERACAO_ARQUIVO e NM_ARQUIVO da tabela  PLS_MONITOR_TISS_ARQUIVO */

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_ARQUIVO'
	and	nullable 	= 'N'
	and	column_name	= 'DT_GERACAO_ARQUIVO'  LIMIT 1;

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('cmgross', 'alter table pls_monitor_tiss_arquivo modify dt_geracao_arquivo null');
		CALL exec_sql_dinamico('cmgross', 'alter table pls_monitor_tiss_arquivo modify nm_arquivo null');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


-- jjung OS 699784 -  Adicionar campo para validação de liberação de mat/med.
if (dt_versao_atual_cliente_w < to_date('24/02/2014','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_OC_CTA_VAL_LIBER_MAT'
	and	column_name = 'IE_FORMA_VALIDACAO_VL_APRES';

	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('jjung',
		'ALTER TABLE PLS_OC_CTA_VAL_LIBER_MAT ADD IE_FORMA_VALIDACAO_VL_APRES VARCHAR2(5) NULL');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- Francisco - OS 708715 - 25/02/2014
if (dt_versao_atual_cliente_w < to_date('25/02/2014','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSAMDR_UK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco','alter table PLS_AME_REM_VALOR_DET_REF drop constraint PLSAMDR_UK');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

/* Sestari */

if (dt_versao_atual_cliente_w < to_date('26/02/2014','dd/mm/yyyy')) then
	begin
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_LOTE_ANEXO_GUIAS_AUT'
	and	nullable 	= 'N'
	and	column_name	= 'CD_GUIA_REFERENCIA';
	
	if (qt_registro_w > 0) then
		begin
		CALL exec_sql_dinamico('sestari', 'alter table pls_lote_anexo_guias_aut modify cd_guia_referencia null'); /* campo */
		end;
	end if;
	
	exception
	when others then
		CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
	end;
end if;

/* Sestari  OS - 708284 */

if (dt_versao_atual_cliente_w < to_date('26/02/2014','dd/mm/yyyy')) then
	begin
		select	count(1)
		into STRICT	qt_registro_w
		from	user_objects
		where	object_name = 'PLS_CONSISTIR_SOLIC_PROC';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('sestari',' drop procedure PLS_CONSISTIR_SOLIC_PROC '
);
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_PARAM_LOTE_ANEXO_GUIA'
		and	column_name	= 'IE_TIPO_GERACAO_GUIA';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('sestari','alter table PLS_PARAM_LOTE_ANEXO_GUIA drop column IE_TIPO_GERACAO_GUIA');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_cons_columns
		where	constraint_name = 'PLSLAGI_PLSGUSP_FK'
		and	column_name	= 'NR_SEQ_GUIA_SOLIC_PROC';

		if (qt_registro_w > 0) then
			begin
			CALL exec_sql_dinamico('sestari', 'alter table pls_lote_anexo_guias_imp drop constraint PLSLAGI_PLSGUSP_FK'); /* integridade */
			CALL exec_sql_dinamico('sestari', 'drop index PLSLAGI_PLSGUSP_FK_I'); /* índice */
			CALL exec_sql_dinamico('sestari', 'alter table pls_lote_anexo_guias_imp drop column NR_SEQ_GUIA_SOLIC_PROC'); /* campo */
			end;
		end if;
	exception
	when others then
		CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
	end;
end if;

/* Eder  26/02/2014 -  OS709262 -  Dropar tabela   PLS_MONITOR_TISS_MAT_RET e ajustar a tabela PLS_MONITOR_TISS_PROC_RET */

begin
	if (dt_versao_atual_cliente_w < to_date('26/02/2014','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_MONITOR_TISS_GLOSA'
		and	column_name 	= 'NR_SEQ_GUIA_MAT_RET';	
		
		if (qt_registro_w > 0) then
			select	count(1)
			into STRICT	qt_registro_w
			from	user_indexes
			where	index_name = 'PLSMOGL_PLSMTMR_FK_I';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('baca', 'drop index PLSMOGL_PLSMTMR_FK_I');
			end if;
			
			select	count(1)
			into STRICT	qt_registro_w
			from	user_constraints
			where	constraint_name = 'PLSMOGL_PLSMTMR_FK';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('baca', 'alter table PLS_MONITOR_TISS_GLOSA drop constraint PLSMOGL_PLSMTMR_FK');
			end if;
			CALL exec_sql_dinamico('baca', 'alter table PLS_MONITOR_TISS_GLOSA drop column NR_SEQ_GUIA_MAT_RET');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tables
		where	table_name = 'PLS_MONITOR_TISS_MAT_RET';	
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca','drop table pls_monitor_tiss_mat_ret');
		end if;		
		
		--Ajustar os campos de procedimento da tabela PLS_MONITOR_TISS_PROC_RET
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_MONITOR_TISS_PROC_RET'
		and	column_name 	= 'CD_PROCEDIMENTO';
		
		if (qt_registro_w > 0) then
		
			select	count(1)
			into STRICT	qt_registro_w
			from	user_indexes
			where	index_name = 'PLSMTPR_PROCEDI_FK_I';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('baca', 'drop index PLSMTPR_PROCEDI_FK_I');
			end if;
			
			select	count(1)
			into STRICT	qt_registro_w
			from	user_constraints
			where	constraint_name = 'PLSMTPR_PROCEDI_FK';
			
			if (qt_registro_w > 0) then
				CALL exec_sql_dinamico('baca', 'alter table PLS_MONITOR_TISS_PROC_RET drop constraint PLSMTPR_PROCEDI_FK');
			end if;
		end if;			
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


/* Eder  27/02/2014 -  OS709527 -  Retirar o campo  NR_SEQ_GUIA_MONITOR de obrigatório */

begin
	if (dt_versao_atual_cliente_w < to_date('27/02/2014','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_MONITOR_TISS_ALT_GUIA'
		and	nullable 	= 'N'
		and	column_name	= 'NR_SEQ_GUIA_MONITOR';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_alt_guia modify (nr_seq_guia_monitor null)');
		end if;		
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Stefanie 05/03/2014 - OS 700759 - Retira a constraint da tabela PLS_AUX_GUIA_REF e cria um índice caso ainda não exista algum */

begin
	if (dt_versao_atual_cliente_w < to_date('05/03/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSAGRE_PK';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_AUX_GUIA_REF drop constraint PLSAGRE_PK');
		end if;
		
		qt_registro_w := 0;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSAGRE_I1'
		and	table_name = 'PLS_AUX_GUIA_REF';

		if (qt_registro_w = 0) then
			CALL exec_sql_dinamico('baca', 'create index PLSAGRE_I1 on PLS_AUX_GUIA_REF(NR_SEQ_CONTA_PROC)');
		end if;		
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
	
	
begin
/* Eder  06/03/2014 -   Alterar o campo CD_MATERIAL para Varchar2  */

if (dt_versao_atual_cliente_w < to_date('06/03/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_MAT_VAL'
	and	column_name 	= 'CD_MATERIAL'
	and	data_type 	= 'NUMBER';
	
	if (qt_registro_w > 0) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSMTMV_MATERIA_FK_I';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'drop index PLSMTMV_MATERIA_FK_I');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSMTMV_MATERIA_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_MONITOR_TISS_MAT_VAL drop constraint PLSMTMV_MATERIA_FK');
		end if;
	
		CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_mat_val drop column cd_material');
		CALL exec_sql_dinamico('baca', 'alter table pls_monitor_tiss_mat_val add ( cd_material varchar2(10))');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('18/03/2014','dd/mm/yyyy')) then
	delete	FROM indice
	where	nm_tabela	= 'DIC_EXPRESSAO'
	and		ie_tipo 	= 'UK'
	AND		nm_indice	= 'DICEXPR_UK';
	
	commit;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'DICEXPR_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('ascarneiro', 'drop index DICEXPR_UK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'DICEXPR_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('ascarneiro', 'alter table dic_expressao drop constraint DICEXPR_UK');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- JJUNG OS 701070 - Ajustar ordem da SINRVIT_UK.
begin
if (dt_versao_atual_cliente_w < to_date('12/03/2014','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'SINRVIT_UK'
	and	column_name	= 'NR_SEQ_SIP_NV_DADOS'
	and	position	<> 1;
	
	if (qt_registro_w > 0) then
	
		
		CALL exec_sql_dinamico('jjung', 'alter table sip_nv_regra_vinc_it drop constraint SINRVIT_UK');
		CALL exec_sql_dinamico('jjung',	'alter table sip_nv_regra_vinc_it add constraint ' ||
						'SINRVIT_UK unique ' || 
						'(NR_SEQ_SIP_NV_DADOS, NR_SEQ_REGRA_ASSIST, NR_SEQ_ITEM_ASSIST) ');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--tratamento para retirar as integridades da tabela pls_cta_log_exec
begin
	if (dt_versao_atual_cliente_w < to_date('11/03/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCLOE_PLSPRPAR_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_CTA_LOG_EXEC drop constraint PLSCLOE_PLSPRPAR_FK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCLOE_PLSLOPC_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_CTA_LOG_EXEC drop constraint PLSCLOE_PLSLOPC_FK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCLOE_PLSCOMAT_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_CTA_LOG_EXEC drop constraint PLSCLOE_PLSCOMAT_FK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCLOE_PLSCOME_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_CTA_LOG_EXEC drop constraint PLSCLOE_PLSCOME_FK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCLOE_PLSCOPRO_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_CTA_LOG_EXEC drop constraint PLSCLOE_PLSCOPRO_FK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCLOE_PLSCTLP_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_CTA_LOG_EXEC drop constraint PLSCLOE_PLSCTLP_FK');
		end if;	
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCLOE_PLSPRCO_FK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_CTA_LOG_EXEC drop constraint PLSCLOE_PLSPRCO_FK');
		end if;	
	end if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- JJUNG - Alterar tipo do campo DS_SQL da tabela SIP_NV_TEMPO_REGRA para CLOB 
begin
	if (dt_versao_atual_cliente_w < to_date('14/03/2014','dd/mm/yyyy')) then
	
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'SIP_NV_TEMPO_REGRA'
		and	column_name = 'DS_SQL'
		and	data_type <> 'CLOB';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('jjung', 'alter table SIP_NV_TEMPO_REGRA add ds_sql_new clob ');
			CALL exec_sql_dinamico('jjung', 'update SIP_NV_TEMPO_REGRA set ds_sql_new = ds_sql ');
			CALL exec_sql_dinamico('jjung', 'alter table SIP_NV_TEMPO_REGRA drop column ds_sql ');
			CALL exec_sql_dinamico('jjung', 'alter table SIP_NV_TEMPO_REGRA rename column ds_sql_new to ds_sql ');
			commit;
		end if;
	end if;	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	/* rlepinski - Alterar CD_DECLARACAO_NASC_VIVO para varchar2(30) */

	if (dt_versao_atual_cliente_w < to_date('18/03/2014','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_INCLUSAO_BENEFICIARIO'
		and	column_name	= 'CD_DECLARACAO_NASC_VIVO'
		and	data_type	= 'NUMBER';
		
		if (qt_registro_w > 0) then
			/* Alterar o campo CD_DECLARACAO_NASC_VIVO da tabela PLS_INCLUSAO_BENEFICIARIO */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO add CD_DECLARACAO_NASC_VIVO_VAR VARCHAR2(30)');
			CALL exec_sql_dinamico('Tasy',' update PLS_INCLUSAO_BENEFICIARIO set CD_DECLARACAO_NASC_VIVO_VAR = TO_CHAR(CD_DECLARACAO_NASC_VIVO) where CD_DECLARACAO_NASC_VIVO is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO drop column CD_DECLARACAO_NASC_VIVO ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO rename column CD_DECLARACAO_NASC_VIVO_VAR to CD_DECLARACAO_NASC_VIVO ');
		end if;
		
		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PESSOA_FISICA'
		and	column_name	= 'CD_DECLARACAO_NASC_VIVO'
		and	data_type	= 'NUMBER';
		
		if (qt_registro_w > 0) then
			/* Alterar o campo CD_DECLARACAO_NASC_VIVO da tabela PESSOA_FISICA */

			CALL exec_sql_dinamico('Tasy',' alter table PESSOA_FISICA add CD_DECLARACAO_NASC_VIVO_VAR VARCHAR2(30)');
			CALL exec_sql_dinamico('Tasy',' update PESSOA_FISICA set CD_DECLARACAO_NASC_VIVO_VAR = TO_CHAR(CD_DECLARACAO_NASC_VIVO) where CD_DECLARACAO_NASC_VIVO is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PESSOA_FISICA drop column CD_DECLARACAO_NASC_VIVO ');
			CALL exec_sql_dinamico('Tasy',' alter table PESSOA_FISICA rename column CD_DECLARACAO_NASC_VIVO_VAR to CD_DECLARACAO_NASC_VIVO ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*aaschlote 20/03/2014 OS 716608*/

begin
if (dt_versao_atual_cliente_w < to_date('18/03/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name	= 'PLS_ALT_STATUS_REC_GLOSA_PROT'
	AND	OBJECT_TYPE	= 'FUNCTION';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aaschlote', 'drop function PLS_ALT_STATUS_REC_GLOSA_PROT'
);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
	
begin
/* Eder  20/03/2014 -   Alterar o campo VL_PROCESSADO para Number(10,2)  */

if (dt_versao_atual_cliente_w < to_date('20/03/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_MONITOR_TISS_GUIA'
	and	column_name 	= 'VL_PROCESSADO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', ' update pls_monitor_tiss_guia set vl_processado = null');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- Sestari
begin
	if (dt_versao_atual_cliente_w < to_date('26/03/2014','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_LOTE_ANEXO_GUIAS_AUT'
		and	nullable 	= 'N'
		and	column_name	= 'CD_GUIA_PRESTADOR';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_LOTE_ANEXO_GUIAS_AUT modify (CD_GUIA_PRESTADOR null)');
		end if;		
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--jtonon - 28/03/2014
begin
	if (dt_versao_atual_cliente_w < to_date('28/03/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PTU_FATURA'
		and	column_name	= 'NR_FATURA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PTU_FATURA add nr_fatura_varchar varchar2(30) ');		
			CALL exec_sql_dinamico('Tasy',' update PTU_FATURA set nr_fatura_varchar = nr_fatura ');		
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PTU_FATURA drop column nr_fatura ');
			CALL exec_sql_dinamico('Tasy',' alter table PTU_FATURA rename column nr_fatura_varchar to nr_fatura ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PTU_NOTA_COBRANCA'
		and	column_name	= 'NR_FATURA_GLOSADA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA add nr_fatura_glosada_varchar varchar2(30) ');
			CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COBRANCA set nr_fatura_glosada_varchar = nr_fatura_glosada ');
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA drop column nr_fatura_glosada ');
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA rename column nr_fatura_glosada_varchar to nr_fatura_glosada ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PTU_NOTA_COBRANCA'
		and	column_name	= 'NR_NDR_GLOSADA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA add nr_ndr_glosada_varchar varchar2(30) ');
			CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_COBRANCA set nr_ndr_glosada_varchar = nr_ndr_glosada ');
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA drop column nr_ndr_glosada ');
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_COBRANCA rename column nr_ndr_glosada_varchar to nr_ndr_glosada ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--lrpossamai 27/03/2014
begin
	if (dt_versao_atual_cliente_w < to_date('27/03/2014','dd/mm/yyyy')) then

		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_CP_CTA_COMBINADA'
		and	column_name	= 'IE_DEST_COPARTICIPACAO';
		
		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CP_CTA_COMBINADA drop column ie_dest_coparticipacao varchar2(1) ');				
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_CP_CTA_COMBINADA'
		and	column_name	= 'IE_DEST_FATURA_POS';
		
		if (qt_registro_w > 0) then		
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CP_CTA_COMBINADA drop column ie_dest_fatura_pos varchar2(30) ');		
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_CP_CTA_COMBINADA'
		and	column_name	= 'IE_DEST_INTERCAMBIO';
		
		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CP_CTA_COMBINADA drop column ie_dest_intercambio varchar2(30) ');	
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_CP_CTA_COMBINADA'
		and	column_name	= 'IE_DEST_PRESTADOR';
		
		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CP_CTA_COMBINADA drop column ie_dest_prestador varchar2(30) ');		
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_CP_CTA_COMBINADA'
		and	column_name	= 'IE_DEST_REEMBOLSO';
		
		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_CP_CTA_COMBINADA drop column ie_dest_reembolso varchar2(30) ');		
		end if;

	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- wcbernardino 01/04/2014
begin
	if (dt_versao_atual_cliente_w < to_date('01/04/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PTU_CAMARA_CONTESTACAO'
		and	column_name	= 'NR_FATURA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PTU_CAMARA_CONTESTACAO add nr_fatura_varchar varchar2(30) ');		
			CALL exec_sql_dinamico('Tasy',' update PTU_CAMARA_CONTESTACAO set nr_fatura_varchar = nr_fatura ');		
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PTU_CAMARA_CONTESTACAO drop column nr_fatura ');
			CALL exec_sql_dinamico('Tasy',' alter table PTU_CAMARA_CONTESTACAO rename column nr_fatura_varchar to nr_fatura ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PTU_NOTA_DEBITO'
		and	column_name	= 'NR_FATURA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEBITO add nr_fatura_varchar varchar2(30) ');		
			CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_DEBITO set nr_fatura_varchar = nr_fatura ');		
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEBITO drop column nr_fatura ');
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEBITO rename column nr_fatura_varchar to nr_fatura ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PTU_NOTA_DEB_FAT_NDR'
		and	column_name	= 'NR_FATURA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEB_FAT_NDR add nr_fatura_varchar varchar2(30) ');		
			CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_DEB_FAT_NDR set nr_fatura_varchar = nr_fatura ');		
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEB_FAT_NDR drop column nr_fatura ');
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEB_FAT_NDR rename column nr_fatura_varchar to nr_fatura ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PTU_NOTA_DEB_FAT_NDR'
		and	column_name	= 'NR_NDR'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEB_FAT_NDR add nr_ndr_varchar varchar2(30) ');		
			CALL exec_sql_dinamico('Tasy',' update PTU_NOTA_DEB_FAT_NDR set nr_ndr_varchar = nr_ndr ');		
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEB_FAT_NDR drop column nr_ndr ');
			CALL exec_sql_dinamico('Tasy',' alter table PTU_NOTA_DEB_FAT_NDR rename column nr_ndr_varchar to nr_ndr ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- jjung 02/04/2014 - Dropar as triggers de gravação de log de alteração de campos.
if (dt_versao_atual_cliente_w < to_date('02/04/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_triggers
	where	upper(trigger_name) = 'SIP_ITEM_ASSIST_REGRA_TP';

	if (qt_registro_w > 0) then
		
		CALL exec_sql_dinamico('jjung', 'drop trigger SIP_ITEM_ASSIST_REGRA_TP');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_triggers
	where	upper(trigger_name) = 'SIP_ITEM_ASSIST_REGRA_NV_TP';

	if (qt_registro_w > 0) then
		
		CALL exec_sql_dinamico('jjung', 'drop trigger SIP_ITEM_ASSIST_REGRA_NV_TP');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_triggers
	where	upper(trigger_name) = 'SIP_ITEM_ASSIST_REGRA_PAD_TP';

	if (qt_registro_w > 0) then
		
		CALL exec_sql_dinamico('jjung', 'drop trigger SIP_ITEM_ASSIST_REGRA_PAD_TP');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_triggers
	where	upper(trigger_name) = 'SIP_NV_DADOS_TP';

	if (qt_registro_w > 0) then
		
		CALL exec_sql_dinamico('jjung', 'drop trigger SIP_NV_DADOS_TP');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_triggers
	where	upper(trigger_name) = 'SIP_REGRA_EXPOSTOS_TP';

	if (qt_registro_w > 0) then
		
		CALL exec_sql_dinamico('jjung', 'drop trigger SIP_REGRA_EXPOSTOS_TP');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- Francisco 10/04/2014
begin
	if (dt_versao_atual_cliente_w < to_date('09/04/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_ANALISE_CONTA'
		and	column_name	= 'NR_FATURA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_ANALISE_CONTA add nr_fatura_varchar varchar2(30) ');		
			CALL exec_sql_dinamico('Tasy',' update PLS_ANALISE_CONTA set nr_fatura_varchar = nr_fatura ');		
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PLS_ANALISE_CONTA drop column nr_fatura ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_ANALISE_CONTA rename column nr_fatura_varchar to nr_fatura ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_OC_CTA_VAL_UTIT_AUX'
		and	column_name	= 'NR_FATURA'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 0) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_OC_CTA_VAL_UTIT_AUX add nr_fatura_varchar varchar2(30) ');		
			CALL exec_sql_dinamico('Tasy',' update PLS_OC_CTA_VAL_UTIT_AUX set nr_fatura_varchar = nr_fatura ');		
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PLS_OC_CTA_VAL_UTIT_AUX drop column nr_fatura ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_OC_CTA_VAL_UTIT_AUX rename column nr_fatura_varchar to nr_fatura ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--Sestari 23/04/14
begin
	if (dt_versao_atual_cliente_w < to_date('23/04/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_LOTE_ANEXO_DIAG_AUT'
		and	column_name	= 'IE_ESTAD_TUMOR'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 1) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_LOTE_ANEXO_DIAG_AUT drop column ie_estad_tumor ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- jjung 23/04/2014 - Dropar campo NR_SEQ_OC_CTA_COMBINADA da tabela PLS_OC_CTA_VAL_CTA_PER_INT
begin
	if (dt_versao_atual_cliente_w < to_date('23/04/2014','dd/mm/yyyy')) then
	
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSVPEI_PLSOCCC_FK_I';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('jjung',' drop index PLSVPEI_PLSOCCC_FK_I ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSVPEI_PLSOCCC_FK';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('jjung',' drop constraint PLSVPEI_PLSOCCC_FK ');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_OC_CTA_VAL_CTA_PER_INT'
		and	column_name = 'NR_SEQ_OC_CTA_COMBINADA';
		
		if (qt_registro_w > 0) then
		
			CALL exec_sql_dinamico('jjung',' alter table PLS_OC_CTA_VAL_CTA_PER_INT drop column NR_SEQ_OC_CTA_COMBINADA ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--Eder 24/04/14 - Deletar o campo IE_ESTAD_TUMOR o mesmo estava duplicado na tabela
begin
	if (dt_versao_atual_cliente_w < to_date('24/04/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_LOTE_ANEXO_DIAG_AUT'
		and	column_name	= 'IE_ESTAD_TUMOR'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w = 1) then	
			CALL exec_sql_dinamico('Tasy',' alter table PLS_LOTE_ANEXO_DIAG_AUT drop column ie_estad_tumor ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Eder 28/04/2014 -  Retirar o campo  IE_TIPO_DIAGNOSTICO de obrigatório */

begin
	if (dt_versao_atual_cliente_w < to_date('28/04/2014','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_LOTE_ANEXO_DIAG_AUT'
		and	nullable 	= 'N'
		and	column_name	= 'IE_TIPO_DIAGNOSTICO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_lote_anexo_diag_aut modify (ie_tipo_diagnostico null)');
		end if;		
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('01/05/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSRCPO_PLSCOCOP_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Lepinski', 'Drop Index PLSRCPO_PLSCOCOP_FK_I');
		CALL exec_sql_dinamico('Lepinski', 'Alter Table PLS_RECALC_COPARTICIPACAO drop constraint PLSRCPO_PLSCOCOP_FK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('24/01/2014','dd/mm/yyyy')) then

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'TASY_IDIOMA'
	AND	column_name = 'NM_USUARIO_NREC';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy','alter table TASY_IDIOMA drop column NM_USUARIO_NREC');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'TASY_IDIOMA'
	AND		column_name = 'DT_ATUALIZACAO_NREC';	
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy','alter table TASY_IDIOMA drop column DT_ATUALIZACAO_NREC');
	END	IF;
	
end	if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('06/05/2014','dd/mm/yyyy')) then

	select 	count(1)
	into STRICT	qt_registro_w
	from   	user_cons_columns
	where  	constraint_name = 'PACTEMP_PK'
	and    	column_name 	= 'NR_ID_TRANSACAO';

	if (qt_registro_w = 0)  then
		CALL exec_sql_dinamico('versao', 'alter table pls_analise_conta_temp drop constraint PACTEMP_PK');
		CALL exec_sql_dinamico('versao', 'alter table pls_analise_conta_temp add constraint PACTEMP_PK primary key (nr_id_transacao, nr_sequencia)');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('06/05/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REC_GLOSA_CONTA'
	and	column_name = 'CD_GUIA';	
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy','alter table PLS_REC_GLOSA_CONTA drop column CD_GUIA');
		CALL exec_sql_dinamico('Tasy','alter table PLS_REC_GLOSA_CONTA drop column CD_GUIA_PRESTADOR');
		CALL exec_sql_dinamico('Tasy','alter table PLS_REC_GLOSA_CONTA drop column CD_GUIA_RECURSO');
		CALL exec_sql_dinamico('Tasy','alter table PLS_REC_GLOSA_CONTA drop column DS_SENHA');
		CALL exec_sql_dinamico('Tasy','alter table PLS_REC_GLOSA_CONTA drop column CD_PRESTADOR_EXECUTOR');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('06/05/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PACTEMP_I1'
	and   	table_name = 'PLS_ANALISE_CONTA_TEMP';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy','drop index PACTEMP_I1');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('19/05/2014', 'dd/mm/yyyy')) then
	
	CALL pls_posicionar_sequence_cache('W_SIP_BENEF_EXPOSTO', 'NR_SEQUENCIA', 'R',  1000);
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('21/05/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'PLS_ESTRUTURA_MATERIAL_TM_SEQ';
	
	if (qt_registro_w > 0) then
	
		CALL exec_sql_dinamico('versao',
		'begin pls_posicionar_sequence_cache(''PLS_ESTRUTURA_MATERIAL_TM'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- DLEHMKUHL ajustes diversos performance ocorrência combinada
if (dt_versao_atual_cliente_w < to_date('23/05/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'PLS_SELECAO_OCOR_CTA_SEQ';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'begin pls_posicionar_sequence_cache(''PLS_SELECAO_OCOR_CTA'', ''NR_SEQUENCIA'', ''R'',  500); end;');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'PLS_SELECAO_EX_OCOR_CTA_SEQ';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'begin pls_posicionar_sequence_cache(''PLS_SELECAO_EX_OCOR_CTA'', ''NR_SEQUENCIA'', ''R'',  500); end;');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_EX_OCOR_CTA'
	and    	column_name = 'DT_ATUALIZACAO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_EX_OCOR_CTA drop column DT_ATUALIZACAO');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_EX_OCOR_CTA'
	and    	column_name = 'NM_USUARIO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_EX_OCOR_CTA drop column NM_USUARIO');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_EX_OCOR_CTA'
	and    	column_name = 'DT_ATUALIZACAO_NREC';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_EX_OCOR_CTA drop column DT_ATUALIZACAO_NREC');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_EX_OCOR_CTA'
	and    	column_name = 'NM_USUARIO_NREC';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_EX_OCOR_CTA drop column NM_USUARIO_NREC');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_OCOR_CTA'
	and    	column_name = 'DT_ATUALIZACAO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop column DT_ATUALIZACAO');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_OCOR_CTA'
	and    	column_name = 'NM_USUARIO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop column NM_USUARIO');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_OCOR_CTA'
	and    	column_name = 'DT_ATUALIZACAO_NREC';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop column DT_ATUALIZACAO_NREC');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where  	table_name = 'PLS_SELECAO_OCOR_CTA'
	and    	column_name = 'NM_USUARIO_NREC';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop column NM_USUARIO_NREC');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where  	constraint_name = 'PLSSOCT_PLSCOME_FK'
	and     table_name = 'PLS_SELECAO_OCOR_CTA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop constraint PLSSOCT_PLSCOME_FK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where  	constraint_name = 'PLSSOCT_PLSCOPRO_FK'
	and     table_name = 'PLS_SELECAO_OCOR_CTA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop constraint PLSSOCT_PLSCOPRO_FK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where  	constraint_name = 'PLSSOCT_PLSCOMAT_FK'
	and     table_name = 'PLS_SELECAO_OCOR_CTA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop constraint PLSSOCT_PLSCOMAT_FK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where  	constraint_name = 'PLSSOCT_PLSOCCF_FK'
	and     table_name = 'PLS_SELECAO_OCOR_CTA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_SELECAO_OCOR_CTA drop constraint PLSSOCT_PLSOCCF_FK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	table_name = 'PLS_SELECAO_OCOR_CTA'
	and   	index_name = 'PLSSOCT_PLSCOME_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'drop index PLSSOCT_PLSCOME_FK_I');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	table_name = 'PLS_SELECAO_OCOR_CTA'
	and   	index_name = 'PLSSOCT_PLSCOPRO_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'drop index PLSSOCT_PLSCOPRO_FK_I');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	table_name = 'PLS_SELECAO_OCOR_CTA'
	and   	index_name = 'PLSSOCT_PLSCOMAT_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'drop index PLSSOCT_PLSCOMAT_FK_I');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	table_name = 'PLS_SELECAO_OCOR_CTA'
	and   	index_name = 'PLSSOCT_PLSOCCF_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'drop index PLSSOCT_PLSOCCF_FK_I');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	table_name = 'PLS_SELECAO_OCOR_CTA'
	and   	index_name = 'PLSSOCT_I1';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'drop index PLSSOCT_I1');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	table_name = 'PLS_SELECAO_OCOR_CTA'
	and   	index_name = 'PLSSOCT_I2';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'drop index PLSSOCT_I2');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	table_name = 'PLS_SELECAO_OCOR_CTA'
	and   	index_name = 'PLSSOCT_I3';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('versao', 'drop index PLSSOCT_I3');
	end if;	
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- wcbernardino OS 739652
if (dt_versao_atual_cliente_w < to_date('26/05/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'W_PLS_GUIA_MEDICO'
	and	column_name	= 'DS_TIPO_PRESTADOR'
	and	data_length	= 255;

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('baca', 'alter table w_pls_guia_medico modify ds_tipo_prestador varchar2(4000)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- wcbernardino OS 738296
if (dt_versao_atual_cliente_w < to_date('28/05/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	indice_atributo
	where	nm_tabela	= 'PLS_PRESTADOR_PROC'
	and	nm_indice	= 'PLPREPR_UK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'delete from INDICE_ATRIBUTO where nm_indice = ' || chr(39) || 'PLPREPR_UK' || chr(39) || ' and nm_tabela = ' || chr(39) || 'PLS_PRESTADOR_PROC' || chr(39));
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	indice
	where	nm_tabela	= 'PLS_PRESTADOR_PROC'
	and	nm_indice	= 'PLPREPR_UK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'delete from INDICE where nm_indice = ' || chr(39) || 'PLPREPR_UK' || chr(39) || ' and nm_tabela = ' || chr(39) || 'PLS_PRESTADOR_PROC' || chr(39));
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLPREPR_UK';	
	
	if (qt_registro_w > 0) then		
		CALL exec_sql_dinamico('Tasy','ALTER TABLE PLS_PRESTADOR_PROC DROP CONSTRAINT PLPREPR_UK');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLPREPR_UK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','DROP INDEX PLPREPR_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl OS 740887
if (dt_versao_atual_cliente_w < to_date('29/05/2014','dd/mm/yyyy')) then
	
	select 	count(1)
	into STRICT	qt_registro_w
	from   	user_tab_columns
	where  	table_name 	= 'PLS_ANALISE_CONTA_TEMP'
	and    	column_name 	= 'NR_FATURA_F'
	and    	data_type 	= 'NUMBER';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table pls_analise_conta_temp modify nr_fatura_f varchar2(30)');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl OS 740502
if (dt_versao_atual_cliente_w < to_date('04/06/2014','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where  	constraint_name = 'POCVUAX_PLSSOCT_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table pls_oc_cta_val_utit_aux drop constraint POCVUAX_PLSSOCT_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	integridade_referencial
	where  	nm_tabela = 'PLS_OC_CTA_VAL_UTIT_AUX'
	and    	nm_integridade_referencial = 'POCVUAX_PLSSOCT_FK';
	
	if (qt_registro_w > 0) then
		delete 	from integridade_referencial
		where  	nm_tabela = 'PLS_OC_CTA_VAL_UTIT_AUX'
		and    	nm_integridade_referencial = 'POCVUAX_PLSSOCT_FK';
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- Francisco OS 747048
if (dt_versao_atual_cliente_w < to_date('19/06/2014','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from 	user_tab_columns
	where  	table_name = 'PLS_OC_CTA_VAL_INF_NASC'
	and	column_name = 'IE_NASCIMENTO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_OC_CTA_VAL_INF_NASC drop column IE_NASCIMENTO');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- Francisco OS 751708
if (dt_versao_atual_cliente_w < to_date('30/06/2014','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from 	user_tab_columns
	where  	table_name = 'PLS_REGRA_REEMB_FIL_BENEF'
	and	column_name = 'NR_SEQ_REGRA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_REGRA_REEMB_FIL_BENEF drop column NR_SEQ_REGRA');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_REGRA_REEMB_FIL_ATEND drop column NR_SEQ_REGRA');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_REGRA_REEMB_FIL_PROC drop column NR_SEQ_REGRA');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_REGRA_REEMB_FIL_MAT drop column NR_SEQ_REGRA');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_REGRA_REEMB_FIL_QTD drop column NR_SEQ_REGRA');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- Francisco OS 753749
if (dt_versao_atual_cliente_w < to_date('01/07/2014','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from 	user_tables
	where  	table_name = 'PLS_OC_CTA_VAL_DOC_REEMB';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'drop table PLS_OC_CTA_VAL_DOC_REEMB');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from 	user_tables
	where  	table_name = 'PLS_OC_CTA_VAL_DT_REEMB';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'drop table PLS_OC_CTA_VAL_DT_REEMB');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PLSRRFA_PLSRREE_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'delete from indice where nm_indice = ' || chr(39) || 'PLSRRFA_PLSRREE_FK_I' || chr(39));
		CALL exec_sql_dinamico('Tasy', 'delete from indice where nm_indice = ' || chr(39) || 'PLSRRFB_PLSRREE_FK_I' || chr(39));
		CALL exec_sql_dinamico('Tasy', 'delete from indice where nm_indice = ' || chr(39) || 'PLSRRFP_PLSRREE_FK_I' || chr(39));
		CALL exec_sql_dinamico('Tasy', 'delete from indice where nm_indice = ' || chr(39) || 'PLSRRFQ_PLSRREE_FK_I' || chr(39));
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('15/07/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'OFT_IRIDECTOMIA'
	and	column_name	= 'IE_OLHO_DOMINANTE';

	if (qt_registro_w	> 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'OFT_IRIDECTOMIA'
		and	column_name	= 'IE_OLHO';

		if (qt_registro_w	= 0) then
			CALL exec_sql_dinamico('Tasy',' ALTER TABLE OFT_IRIDECTOMIA RENAME COLUMN IE_OLHO_DOMINANTE TO IE_OLHO 	');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- Francisco OS 753749
if (dt_versao_atual_cliente_w < to_date('17/07/2014','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where  	constraint_name  = 'WMPRAGI_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table W_MPREV_AGENDA_INCONSIST drop constraint WMPRAGI_UK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Lepinski  Alterar campo NR_SEQ_REGRA_APROP para não ser obrigatório nas tabelas PLS_CONTA_PROC_APROP e PLS_CONTA_MAT_APROP */

if (dt_versao_atual_cliente_w < to_date('18/07/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_CONTA_PROC_APROP'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_REGRA_APROP';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_CONTA_PROC_APROP modify NR_SEQ_REGRA_APROP null');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_CONTA_MAT_APROP'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_REGRA_APROP';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_CONTA_MAT_APROP modify NR_SEQ_REGRA_APROP null');
	end if;
end if;

/* Lepinski  Alterar campo NR_SEQ_REGRA para não ser obrigatório nas tabelas PLS_CONTA_COPARTICIPACAO */

if (dt_versao_atual_cliente_w < to_date('21/07/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_CONTA_COPARTICIPACAO'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_REGRA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_CONTA_COPARTICIPACAO modify NR_SEQ_REGRA null');
	end if;
end if;

begin
-- Paulo 23/07/2014 - Colocar o campo  IE_ORIGEM_PROCED na tabela PRECO_AMB
if (dt_versao_atual_cliente_w < to_date('23/07/2014','dd/mm/yyyy')) then
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where	constraint_name = 'PREAMB_UK';
	
	-- se existir a uk
	if (qt_registro_w	> 0) then
		select 	count(1)
		into STRICT	qt_registro_w
		from	user_cons_columns
		where 	constraint_name = 'PREAMB_UK'
		and 	column_name = 'IE_ORIGEM_PROCED';
		
		-- se não existir o campo, apaga a UK e cria novamente
		if (qt_registro_w = 0) then
			CALL exec_sql_dinamico('baca', 'alter table PRECO_AMB drop constraint PREAMB_UK');
			CALL exec_sql_dinamico('baca', 'drop index PREAMB_UK');
			CALL exec_sql_dinamico('baca', 'Alter Table PRECO_AMB add ( Constraint PREAMB_UK Unique ( CD_EDICAO_AMB,  CD_PROCEDIMENTO,  IE_ORIGEM_PROCED,  DT_INICIO_VIGENCIA))');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- Francisco - 23/07/2014 - Eliminar integridade de novo campo
if (dt_versao_atual_cliente_w < to_date('23/07/2014','dd/mm/yyyy')) then
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where	constraint_name = 'PLSCOPRO_PLSRRAC_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table pls_conta_proc drop constraint PLSCOPRO_PLSRRAC_FK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- Lepinski - 29/07/2014 - Excluir integridade e índice
if (dt_versao_atual_cliente_w < to_date('29/07/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSRGCG_PLSCIGU_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','ALTER TABLE PLS_REGRA_COPARTIC_GUIA DROP CONSTRAINT PLSRGCG_PLSCIGU_FK');
	end	if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSRGCG_PLSCIGU_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSRGCG_PLSCIGU_FK_I');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	integridade_referencial
	where	nm_integridade_referencial = 'PLSRGCG_PLSCIGU_FK';
	
	if (qt_registro_w > 0) then
		delete	from	integridade_referencial
		where	nm_integridade_referencial = 'PLSRGCG_PLSCIGU_FK';
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PLSRGCG_PLSCIGU_FK_I';
	
	if (qt_registro_w > 0) then
		delete	from	indice
		where	nm_indice = 'PLSRGCG_PLSCIGU_FK_I';
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- aaschlote - Ajustar ordem da PLSAMRV_UK. (Melhoria de performance)
begin
if (dt_versao_atual_cliente_w < to_date('05/08/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'PLSAMRV_UK'
	and	column_name	= 'NR_SEQ_SEGURADO'
	and	position	= 2;
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aaschlote', 'Alter Table PLS_AME_LOTE_REM_VALOR Drop Constraint PLSAMRV_UK');
		CALL exec_sql_dinamico('aaschlote', 'DROP INDEX PLSAMRV_UK');
		
		CALL exec_sql_dinamico('aaschlote', 'Alter Table PLS_AME_LOTE_REM_VALOR add ( Constraint PLSAMRV_UK Unique (NR_SEQ_LOTE_REM_ARQ,'||
						'NR_SEQ_TITULAR,NR_SEQ_SEGURADO))');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- aaschlote - Ajustar o tipo do Indice.
begin
if (dt_versao_atual_cliente_w < to_date('07/08/2014','dd/mm/yyyy')) then
	SELECT	COUNT(1)
	into STRICT	qt_registro_w
	FROM	USER_INDEXES
	WHERE	INDEX_NAME	= 'WPTUMBE_I'
	AND	UNIQUENESS	= 'UNIQUE';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aaschlote', 'DROP INDEX WPTUMBE_I');
		CALL exec_sql_dinamico('aaschlote', 'Create Index WPTUMBE_I on W_PTU_MOV_BENEF(NR_SEQ_LOTE)');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl - 03/09/2014 - Excluir UK e índice
if (dt_versao_atual_cliente_w < to_date('03/09/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLCPROC_UK_CD_PROCESSO';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','ALTER TABLE PLS_CTA_PROCESSO DROP CONSTRAINT PLCPROC_UK_CD_PROCESSO');
	end	if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLCPROC_UK_CD_PROCESSO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLCPROC_UK_CD_PROCESSO');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PLCPROC_UK_CD_PROCESSO';
	
	if (qt_registro_w > 0) then
		delete	from	indice
		where	nm_indice = 'PLCPROC_UK_CD_PROCESSO';
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl - 03/09/2014 - Excluir UK e índice e criar nova UK com outra ordenação
if (dt_versao_atual_cliente_w < to_date('03/09/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PMAVAIT_UK';

	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','ALTER TABLE PLS_MATERIAL_VALOR_ITEM DROP CONSTRAINT PMAVAIT_UK');
	end	if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PMAVAIT_UK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PMAVAIT_UK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PMAVAIT_UK';

	if (qt_registro_w > 0) then
		delete	from	indice
		where	nm_indice = 'PMAVAIT_UK';
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PMAVAIT_UK1';

	if (qt_registro_w = 0) then
		insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
		values ('PMAVAIT_UK1','','UK','I','A',TO_DATE('03/09/2014 16:39:42','dd/mm/yyyy hh24:mi:ss'),'','','','PLS_MATERIAL_VALOR_ITEM',TO_DATE('03/09/2014 16:39:53','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl');
		
		insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
		values (1,'DT_INICIO_VIGENCIA','','PLS_MATERIAL_VALOR_ITEM','PMAVAIT_UK1',TO_DATE('03/09/2014 16:40:03','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl');
		insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
		values (2,'NR_SEQ_PRECO_ITEM','','PLS_MATERIAL_VALOR_ITEM','PMAVAIT_UK1',TO_DATE('03/09/2014 16:40:08','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl');
	end if;
	commit;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PMAVAIT_UK1';

	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('Tasy', 'ALTER TABLE PLS_MATERIAL_VALOR_ITEM ADD (CONSTRAINT PMAVAIT_UK1 UNIQUE (DT_INICIO_VIGENCIA, NR_SEQ_PRECO_ITEM))');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl - 03/09/2014 - colocar cache nas sequences
if (dt_versao_atual_cliente_w < to_date('03/09/2014','dd/mm/yyyy')) then
	CALL pls_posicionar_sequence_cache('PLS_OC_CTA_LOG_OCOR', 'NR_SEQUENCIA', 'R', 1000);
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;	


begin
/* Djavan  13/06/2012  alterar os campos CD_UNIMED e CD_USUARIO_PLANO da tabela  PTU_REQUISICAO_ORDEM_SERV para aceitar valor nulo */

if (dt_versao_atual_cliente_w < to_date('05/09/2014','dd/mm/yyyy')) then
	/* Alterar o campo CD_UNIMED para null*/

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_REQUISICAO_ORDEM_SERV'
	and	column_name	= 'CD_UNIMED'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table PTU_REQUISICAO_ORDEM_SERV modify CD_UNIMED null');
	end if;

	/* Alterar o campo CD_USUARIO_PLANO para null*/

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_REQUISICAO_ORDEM_SERV'
	and	column_name	= 'CD_USUARIO_PLANO'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table PTU_REQUISICAO_ORDEM_SERV modify CD_USUARIO_PLANO null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- aaschlote OS 786097 Dropar integridade da PLS_PACOTE da tabela PTU_NOTA_SERVICO
begin
if (dt_versao_atual_cliente_w < to_date('07/08/2014','dd/mm/yyyy')) then
	SELECT	COUNT(1)
	into STRICT	qt_registro_w
	FROM	USER_INDEXES
	WHERE	INDEX_NAME	= 'PTUNOSE_PLSPACO_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aaschlote', 'DROP INDEX PTUNOSE_PLSPACO_FK_I');
	end if;	
	
	SELECT	COUNT(*)
	INTO STRICT	qt_registro_w
	FROM	user_constraints
	WHERE	constraint_name = 'PTUNOSE_PLSPACO_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aaschlote', 'Alter Table PTU_NOTA_SERVICO Drop Constraint PTUNOSE_PLSPACO_FK');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Lepinski Correção no tipo do campo */

begin
	if (dt_versao_atual_cliente_w < to_date('12/09/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_INCLUSAO_BENEFICIARIO'
		and	column_name	= 'NR_SERIE_CTPS'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO add NR_SERIE_CTPS_NUMBER number(5) ');
			CALL exec_sql_dinamico('Tasy',' update PLS_INCLUSAO_BENEFICIARIO set NR_SERIE_CTPS_NUMBER = somente_numero(NR_SERIE_CTPS) ');
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO drop column NR_SERIE_CTPS ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO rename column NR_SERIE_CTPS_NUMBER to NR_SERIE_CTPS ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


/* jjung - Removendo constraints da SIP_NV_DADOS, nenhuma é necessária */

begin

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_CBOSAUD_FK';
	
	if (qt_registro_w > 0) then
	
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_CBOSAUD_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_CIDCATE_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_CIDCATE_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_MATERIA_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung', 'ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_MATERIA_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSCLIN_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSCLIN_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSCODI_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSCODI_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSCONG_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSCONG_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSDIMA_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSDIMA_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSDISP_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSDISP_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSLODI_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSLODI_FK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSLSIP_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSLSIP_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSMAT_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSMAT_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSPRES_FK2';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSPRES_FK2');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSRGCO_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSRGCO_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSSEGU_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSSEGU_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PLSTIAT_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung','ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PLSTIAT_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PRGLMAT_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung', 'ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PRGLMAT_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PRGPROC_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung', 'ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PRGPROC_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_PRGPROT_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung', 'ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_PRGPROT_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'SIP_NV_DADOS'
	and	constraint_name	= 'SIPNVDA_SIASRNV_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('jjung', 'ALTER TABLE SIP_NV_DADOS DROP CONSTRAINT SIPNVDA_SIASRNV_FK');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Francisco - OS 795569 - Para criar a intregridade será necessário ajustar os registros errados */

if (dt_versao_atual_cliente_w < to_date('01/10/2014','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Tasy',' update pls_atendimento a set	a.nr_seq_regra_tempo = null where a.nr_seq_regra_tempo is not null ' ||
				' and not exists (select 1 from PLS_ATEND_REGRA_TEMPO x where	x.nr_sequencia = a.nr_seq_regra_tempo)');
end if;

/* Lepinski Correção no tipo do campo */

begin
	if (dt_versao_atual_cliente_w < to_date('10/10/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_ROL_GRUPO_PROC'
		and	column_name	= 'DS_DIRETRIZ_UTILIZACAO'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' alter table PLS_ROL_GRUPO_PROC add DS_DIRETRIZ_UTILIZACAO_LONG long ');
			CALL exec_sql_dinamico('Tasy',' update PLS_ROL_GRUPO_PROC set DS_DIRETRIZ_UTILIZACAO_LONG = DS_DIRETRIZ_UTILIZACAO ');
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PLS_ROL_GRUPO_PROC drop column DS_DIRETRIZ_UTILIZACAO ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_ROL_GRUPO_PROC rename column DS_DIRETRIZ_UTILIZACAO_LONG to DS_DIRETRIZ_UTILIZACAO ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- aaschlote OS 798158 - Aumentar o tamanho da coluna
begin
if (dt_versao_atual_cliente_w < to_date('13/10/2014','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_MONITOR_TISS_CTA_VAL'
	and	column_name	= 'CD_CBO_EXECUTANTE'
	and	data_LENGTH	= 6;
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aaschlote', 'alter table pls_monitor_tiss_cta_val modify cd_cbo_executante varchar2(15)');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl - 16/10/2014 - Excluir UK e índice e criar nova UK com outra ordenação
if (dt_versao_atual_cliente_w < to_date('16/10/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PMAVAIT_UK1';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PMAVAIT_UK1');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PMAVAIT_UK1';

	if (qt_registro_w > 0) then
		delete	from	indice
		where	nm_indice = 'PMAVAIT_UK1';
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PMAVAIT_UK1';

	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','ALTER TABLE PLS_MATERIAL_VALOR_ITEM DROP CONSTRAINT PMAVAIT_UK1');
	end	if;

	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PMAVAIT_UK1';

	if (qt_registro_w = 0) then
		insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO)
		values ('PMAVAIT_UK1','','UK','I','A',TO_DATE('03/09/2014 16:39:42','dd/mm/yyyy hh24:mi:ss'),'','','','PLS_MATERIAL_VALOR_ITEM',TO_DATE('03/09/2014 16:39:53','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl');
		
		insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
		values (1,'IE_TIPO_PRECO','','PLS_MATERIAL_VALOR_ITEM','PMAVAIT_UK1',TO_DATE('16/10/2014 13:33:09','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl');
		insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
		values (2,'DT_INICIO_VIGENCIA','','PLS_MATERIAL_VALOR_ITEM','PMAVAIT_UK1',TO_DATE('03/09/2014 16:40:03','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl');
		insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
		values (3,'NR_SEQ_PRECO_ITEM','','PLS_MATERIAL_VALOR_ITEM','PMAVAIT_UK1',TO_DATE('03/09/2014 16:40:08','dd/mm/yyyy hh24:mi:ss'),'dlehmkuhl');
	end if;
	commit;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PMAVAIT_UK1';

	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('Tasy', 'ALTER TABLE PLS_MATERIAL_VALOR_ITEM ADD (CONSTRAINT PMAVAIT_UK1 UNIQUE (IE_TIPO_PRECO, DT_INICIO_VIGENCIA, NR_SEQ_PRECO_ITEM))');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('15/10/2014','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_GRAU_CLASSIF_ITEM'
	and	column_name = 'VL_PORTE';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy','alter table PLS_GRAU_CLASSIF_ITEM drop column VL_PORTE');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*aaschlote 10/11/2014 OS 759310*/

begin
if (dt_versao_atual_cliente_w <= to_date('10/11/2014','dd/mm/yyyy')) then
	/*Se a UK existir na base apenas como indice então altera ele e coloca como UK*/

	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'PREANVE_UK'
	and	ie_tipo	  = 'I';

	if (qt_registro_w > 0) then	
		update	indice
		set	ie_tipo	= 'UK'
		where	nm_indice = 'PREANVE_UK';
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PREANVE_UK'
		and	uniqueness	= 'NONUNIQUE';
		
		/*Caso existir a UK como índice, então dropa ele para depois recriar corretamente*/

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PREANVE_UK');
		end if;
	else
		/*Caso existir a UK como índice, então dropa ele para depois recriar corretamente*/

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'PREANVE_UK'
		and	uniqueness	= 'NONUNIQUE';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index PREANVE_UK');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* wcbernardino 12/11/2014 - 814544*/

begin
if (dt_versao_atual_cliente_w <= to_date('12/11/2014','dd/mm/yyyy')) then

	SELECT	COUNT(*)
	INTO STRICT	qt_registro_w
	FROM	user_constraints
	WHERE	constraint_name = 'PLSCPE_CK';

	if (qt_registro_w = 0) then	
		CALL exec_sql_dinamico('Tasy','alter table PLS_CONTA_POS_ESTABELECIDO add constraint PLSCPE_CK 
					check (((nr_seq_lote_fat is null and nr_seq_evento_fat is null) 
					or (nr_seq_lote_fat is not null and nr_seq_evento_fat is not null)))');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl 13/11/2014
if (dt_versao_atual_cliente_w < to_date('13/11/2014','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSMOTA_I1';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('tasy', 'drop index PLSMOTA_I1');
	end if;
	
	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_index_w
	;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSMOTA_I2';

	if (qt_registro_w = 0) then	
		CALL exec_sql_dinamico('Tasy','create index plsmota_i2 on pls_monitor_tiss_alt (dt_evento, ie_tipo_evento, ie_status) tablespace ' || nm_tablespace_index_w);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
--aaschlote 17/11/2014 - Ajuste do campo na tabela
if (dt_versao_atual_cliente_w < to_date('17/11/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REL_AN_VERSAO'
	and	column_name	= 'NR_SEQ_LOTE'
	and	data_type	<> 'VARCHAR2';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_REL_AN_VERSAO modify NR_SEQ_LOTE varchar2(20)');
		
		update	TABELA_ATRIBUTO
		set	IE_TIPO_ATRIBUTO	= 'VARCHAR2',
			QT_TAMANHO		= 20,
			QT_DECIMAIS		 = NULL
		where	NM_TABELA		= 'PLS_REL_AN_VERSAO'
		and	NM_ATRIBUTO		= 'NR_SEQ_LOTE';
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REL_AN_VERSAO'
	and	column_name	= 'NR_SEQ_PRESTADOR'
	and	data_type	<> 'VARCHAR2';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('versao', 'alter table PLS_REL_AN_VERSAO modify NR_SEQ_PRESTADOR varchar2(30)');		
		update	TABELA_ATRIBUTO
		set	IE_TIPO_ATRIBUTO	= 'VARCHAR2',
			QT_TAMANHO		= 30,
			QT_DECIMAIS		 = NULL
		where	NM_TABELA		= 'PLS_REL_AN_VERSAO'
		and	NM_ATRIBUTO		= 'NR_SEQ_PRESTADOR';
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('24/11/2014','dd/mm/yyyy')) then	
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSMTPV_TISSFAD_FK';
	
	if (qt_registro_w > 0) then		
		CALL Exec_Sql_Dinamico('Tasy','ALTER TABLE PLS_MONITOR_TISS_PROC_VAL DROP CONSTRAINT PLSMTPV_TISSFAD_FK');
	end	if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSMTPV_TISSFAD_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSMTPV_TISSFAD_FK_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*822190*/

begin
if (dt_versao_atual_cliente_w < to_date('03/12/2014','dd/mm/yyyy')) then	
	begin
	select	count(1)
	into STRICT	qt_registro_w
	from	tabela_atributo
	where	nm_tabela = 'ITENS_REQ_REPOSICAO_W';
	
	if (qt_registro_w > 0) then		
		delete	FROM tabela_atributo
		where	nm_tabela = 'ITENS_REQ_REPOSICAO_W';
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	tabela_sistema
	where	nm_tabela = 'ITENS_REQ_REPOSICAO_W';
	
	if (qt_registro_w > 0) then		
		delete	FROM tabela_sistema
		where	nm_tabela = 'ITENS_REQ_REPOSICAO_W';
	end if;
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Lepinski Correção no tipo do campo */

begin
	if (dt_versao_atual_cliente_w < to_date('09/12/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_INCLUSAO_BENEFICIARIO'
		and	column_name	= 'NR_ENDERECO'
		and	data_type	= 'VARCHAR2';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy',' update PLS_INCLUSAO_BENEFICIARIO set NR_ENDERECO_VARCHAR = NR_ENDERECO ');
			CALL exec_sql_dinamico('Tasy',' update PLS_INCLUSAO_BENEFICIARIO set NR_ENDERECO = null ');
			commit;
			CALL exec_sql_dinamico('Tasy',' alter table PLS_INCLUSAO_BENEFICIARIO modify NR_ENDERECO number(5) ');
			CALL exec_sql_dinamico('Tasy',' update PLS_INCLUSAO_BENEFICIARIO set NR_ENDERECO = somente_numero(NR_ENDERECO_VARCHAR) where NR_ENDERECO_VARCHAR is not null ');
			commit;
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Lepinski - Correção no tamanho do atributo */

begin
	if (dt_versao_atual_cliente_w < to_date('29/12/2014','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name	= 'PLS_TED_REGRA_COPARTIC'
		and	column_name	= 'IE_TIPO_PAGADOR'
		and	data_length	= 1;
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('Lepinski', 'alter table PLS_TED_REGRA_COPARTIC modify IE_TIPO_PAGADOR varchar2(2)');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
	if (dt_versao_atual_cliente_w < to_date('20/01/2015', 'dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from 	user_tables
		where 	table_name = 'PLS_SELECAO_EX_OCOR_CTA' 
		and 	temporary = 'Y';
		
		if (qt_registro_w > 0) then
			-- para fazer essa troca é preciso apagar a tabela e criá-la novamente
			CALL Exec_sql_Dinamico('tasy', 'drop table PLS_SELECAO_EX_OCOR_CTA');
			
			select	Obter_Tablespace_Index(null)
			into STRICT	nm_tablespace_index_w
			;
		
			ds_comando_w := 'create table PLS_SELECAO_EX_OCOR_CTA(' || chr(13) || chr(10) ||
					'nr_sequencia      NUMBER(10) not null,' || chr(13) || chr(10) ||
					'ie_tipo_registro  VARCHAR2(2) not null,' || chr(13) || chr(10) ||
					'nr_seq_conta      NUMBER(10) not null,' || chr(13) || chr(10) ||
					'nr_seq_conta_proc NUMBER(10),' || chr(13) || chr(10) ||
					'nr_seq_conta_mat  NUMBER(10),' || chr(13) || chr(10) ||
					'ie_valido         VARCHAR2(1) not null,' || chr(13) || chr(10) ||
					'ie_valido_temp    VARCHAR2(1) not null,' || chr(13) || chr(10) ||
					'nr_seq_segurado   NUMBER(10) not null,' || chr(13) || chr(10) ||
					'cd_guia_referencia   varchar2(20) not null,' || chr(13) || chr(10) ||
					'nr_id_transacao   NUMBER(10) not null) nologging';
			
			CALL Exec_sql_Dinamico('tasy', ds_comando_w);
			CALL Exec_sql_Dinamico('tasy', 'create index PSEXOCT_I1 on PLS_SELECAO_EX_OCOR_CTA (NR_ID_TRANSACAO, NR_SEQ_CONTA) tablespace ' || nm_tablespace_index_w);
			CALL Exec_sql_Dinamico('tasy', 'create index PSEXOCT_I2 on PLS_SELECAO_EX_OCOR_CTA (NR_ID_TRANSACAO, NR_SEQ_CONTA_PROC) tablespace ' || nm_tablespace_index_w);
			CALL Exec_sql_Dinamico('tasy', 'create index PSEXOCT_I3 on PLS_SELECAO_EX_OCOR_CTA (NR_ID_TRANSACAO, NR_SEQ_CONTA_MAT) tablespace ' || nm_tablespace_index_w);
			CALL Exec_sql_Dinamico('tasy', 'create index PSEXOCT_I5 on PLS_SELECAO_EX_OCOR_CTA (NR_ID_TRANSACAO, IE_VALIDO) tablespace ' || nm_tablespace_index_w);
			CALL Exec_sql_Dinamico('tasy', 'create index PSEXOCT_I6 on PLS_SELECAO_EX_OCOR_CTA (NR_ID_TRANSACAO, IE_VALIDO_TEMP) tablespace ' || nm_tablespace_index_w);
			CALL Exec_sql_Dinamico('tasy', 'create index PSEXOCT_I7 on PLS_SELECAO_EX_OCOR_CTA (NR_ID_TRANSACAO, NR_SEQ_SEGURADO, CD_GUIA_REFERENCIA, IE_VALIDO) tablespace ' || nm_tablespace_index_w);

			CALL Exec_sql_Dinamico('tasy', 'alter table PLS_SELECAO_EX_OCOR_CTA add constraint PSEXOCT_PK primary key (NR_SEQUENCIA) using index tablespace ' || nm_tablespace_index_w);
			
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl - trocar para o Oracle não gravar redo da tabela
begin
	if (dt_versao_atual_cliente_w < to_date('21/01/2015', 'dd/mm/yyyy')) then
	
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tables
		where	table_name = 'PLS_SELECAO_OCOR_CTA' 
		and	logging = 'YES';
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('tasy', 'alter table PLS_SELECAO_OCOR_CTA nologging');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('13/02/2015', 'dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from 	user_tables
	where 	table_name	= 'W_PLS_GUIA_MEDICO'
	and 	temporary 	= 'Y';

	if (qt_registro_w = 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from 	user_tables
		where 	table_name	= 'W_PLS_GUIA_MED_ESPEC'
		and 	temporary 	= 'Y';
	end if;

	if (qt_registro_w > 0) then
		ds_comando_w := null;
		-- para fazer essa troca é preciso apagar a tabela e criá-la novamente
		CALL Exec_sql_Dinamico('wcbernardino',' drop table W_PLS_GUIA_MED_ESPEC ');
		CALL Exec_sql_Dinamico('wcbernardino',' drop table W_PLS_GUIA_MEDICO ');
		
		ds_comando_w :=	' Create Table W_PLS_GUIA_MEDICO( ' ||
				' DS_EMAIL VARCHAR2(0255),' ||
				' NR_SEQUENCIA NUMBER(10,0) not null,' ||
				' DT_ATUALIZACAO DATE not null,' ||
				' NM_USUARIO VARCHAR2(0060) not null,' ||
				' NR_SEQ_PRESTADOR NUMBER(10,0),' ||
				' CD_MEDICO VARCHAR2(0010),' ||
				' CD_MUNICIPIO_IBGE VARCHAR2(0006),' ||
				' DS_WEBSITE VARCHAR2(0255),' ||
				' CD_CGC_PRESTADOR VARCHAR2(0014),' ||
				' CD_PF_PRESTADOR VARCHAR2(0010),' ||
				' CD_PROCEDIMENTO NUMBER(15,0),' ||
				' IE_ORIGEM_PROCED NUMBER(10,0),' ||
				' NR_CRM VARCHAR2(0020),' ||
				' DS_ENDERECO VARCHAR2(0255),' ||
				' NR_TELEFONE_PREST VARCHAR2(0030),' ||
				' DS_ESPECIALIDADES_MED VARCHAR2(4000),' ||
				' NR_RAMAL NUMBER(05,0),' ||
				' CD_CEP VARCHAR2(0015),' ||
				' NR_ENDERECO NUMBER(05,0),' ||
				' DS_COMPLEMENTO VARCHAR2(0255),' ||
				' DS_BAIRRO VARCHAR2(0040),' ||
				' CD_ESTABELECIMENTO NUMBER(04,0) not null,'||
				' CD_PRESTADOR VARCHAR2(0030),' ||
				' SG_ESTADO VARCHAR2(0002),' ||
				' NR_DDD VARCHAR2(0003),' ||
				' NR_TELEFONE VARCHAR2(0015),' ||
				' DS_FONE_ADIC VARCHAR2(0020),' ||
				' NR_DDD_FAX VARCHAR2(0003),' ||
				' DS_FAX VARCHAR2(0020),' ||
				' DS_TIPO_PRESTADOR VARCHAR2(4000),' ||
				' IE_AUSENTE VARCHAR2(0001),' ||
				' IE_APALC VARCHAR2(0001),' ||
				' IE_ADICQ VARCHAR2(0001),' ||
				' IE_AONA VARCHAR2(0001),' ||
				' IE_ACBA VARCHAR2(0001),' ||
				' IE_AIQG VARCHAR2(0001),' ||
				' IE_NOTIVISA VARCHAR2(0001),' ||
				' IE_POS_GRAD_360 VARCHAR2(0001),' ||
				' IE_RESIDENCIA VARCHAR2(0001),' ||
				' IE_ESPECIALISTA VARCHAR2(0001),' ||
				' IE_QUALISS VARCHAR2(0001)) ';
		
		CALL Exec_sql_Dinamico('wcbernardino',ds_comando_w);
						
		CALL Exec_sql_Dinamico('wcbernardino',' Alter Table W_PLS_GUIA_MEDICO add ( Constraint WGUIAME_PK Primary Key (NR_SEQUENCIA)) ');
		
		CALL Exec_sql_Dinamico('wcbernardino',' Create Sequence W_PLS_GUIA_MEDICO_SEQ Increment by 1 Start With 1 MaxValue 9999999999 Cycle NoCache ');
		
		CALL Exec_sql_Dinamico('wcbernardino',' Create  Index WGUIAME_PK on W_PLS_GUIA_MEDICO(NR_SEQUENCIA) ');
		
		ds_comando_w := ' Create Table W_PLS_GUIA_MED_ESPEC( ' ||
						' NR_SEQUENCIA NUMBER(10,0) not null, ' ||
						' DT_ATUALIZACAO DATE not null, ' ||
						' NM_USUARIO VARCHAR2(0060) not null, ' ||
						' DT_ATUALIZACAO_NREC DATE, ' ||
						' NM_USUARIO_NREC VARCHAR2(0060), ' ||
						' NR_SEQ_GUIA_MEDICO NUMBER(10,0), ' ||
						' CD_ESPECIALIDADE NUMBER(05,0) not null) ';
		
		CALL Exec_sql_Dinamico('wcbernardino',ds_comando_w);
						
		CALL Exec_sql_Dinamico('wcbernardino',' Alter Table W_PLS_GUIA_MED_ESPEC add ( Constraint WPLSGME_PK Primary Key (NR_SEQUENCIA)) ');
		
		CALL Exec_sql_Dinamico('wcbernardino',' Create Sequence W_PLS_GUIA_MED_ESPEC_SEQ Increment by 1 Start With 1 MaxValue 9999999999 Cycle NoCache ');
		
		CALL Exec_sql_Dinamico('wcbernardino',' Create  Index WPLSGME_PK on W_PLS_GUIA_MED_ESPEC(NR_SEQUENCIA) ');
		
		CALL Exec_sql_Dinamico('wcbernardino',' Create  Index WPLSGME_WGUIAME_FK_I on W_PLS_GUIA_MED_ESPEC(NR_SEQ_GUIA_MEDICO) ');
		
		CALL Exec_sql_Dinamico('wcbernardino',' Create  Index WPLSGME_ESPMEDI_FK_I on W_PLS_GUIA_MED_ESPEC(CD_ESPECIALIDADE) ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- apagar a UK da PLS_MONITOR_TISS_INC
if (dt_versao_atual_cliente_w < to_date('19/02/2014','dd/mm/yyyy')) then

	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_index_w
	;
			
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'PLSMOTI_UK';

	if (qt_registro_w < 3) then
		CALL exec_sql_dinamico('tasy', 'alter table PLS_MONITOR_TISS_INC drop constraint PLSMOTI_UK cascade');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name = 'PLSMOTI_I1';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy', 'create index PLSMOTI_I1 on PLS_MONITOR_TISS_INC(CD_INCONSISTENCIA) tablespace ' || nm_tablespace_index_w);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*aaschlote 23/02/2015 OS 848338*/

begin
if (dt_versao_atual_cliente_w <= to_date('23/02/2015','dd/mm/yyyy')) then
	/*Se o indíce existir na base apenas como indice único então altera ele e coloca como indíce normal*/

	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice = 'WPLSRCG_I1'
	and	ie_tipo	  = 'IU';

	if (qt_registro_w > 0) then	
		update	indice
		set	ie_tipo	= 'I'
		where	nm_indice = 'WPLSRCG_I1';
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'WPLSRCG_I1'
		and	uniqueness	= 'NONUNIQUE';
		
		/*Caso existir o índice como índice único , então dropa ele para depois recriar corretamente*/

		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index WPLSRCG_I1');
		end if;
	else
		/*Caso existir o índice como índice único , então dropa ele para depois recriar corretamente*/

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'WPLSRCG_I1'
		and	uniqueness	= 'NONUNIQUE';
		
		if (qt_registro_w	> 0) then
			CALL exec_sql_dinamico('Tasy','drop index WPLSRCG_I1');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('23/02/2015','dd/mm/yyyy')) then
	
	select  count(1)
	into STRICT    qt_registro_w
	from    user_ind_columns
	where   index_name = 'PAMENSA_I11'
	and	column_name = 'IE_TIPO_VINCULO_OPERADORA';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('TASY', 'drop index PAMENSA_I11');
	end     if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- apagar campos que não serão mais utilizados
begin
if (dt_versao_atual_cliente_w <= to_date('25/02/2015', 'dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_AR_MENSALIDADE'
	and	column_name = 'NR_SEQ_GRUPO_CONTRATO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('tasy', 'alter table PLS_AR_MENSALIDADE drop column NR_SEQ_GRUPO_CONTRATO');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PAMENSA_I1';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','drop index pamensa_i1');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_AR_COPARTICIPACAO'
	and	column_name = 'NR_SEQ_GRUPO_CONTRATO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('tasy', 'alter table PLS_AR_COPARTICIPACAO drop column NR_SEQ_GRUPO_CONTRATO');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_AR_CONTA'
	and	column_name = 'NR_SEQ_GRUPO_CONTRATO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('tasy', 'alter table PLS_AR_CONTA drop column NR_SEQ_GRUPO_CONTRATO');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- reposicionar as sequences para as tabelas da análise de resultado
if (dt_versao_atual_cliente_w < to_date('25/02/2015', 'dd/mm/yyyy')) then
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_MENSALIDADE'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_COPARTICIPACAO'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_RESS_SUS'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_CONTA'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_REC_GLOSA'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_FATURAMENTO'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_GRUPO_CONTRATO'', ''NR_SEQUENCIA'', ''R'',  100); end;');
	CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''PLS_AR_COMISSAO'', ''NR_SEQUENCIA'', ''R'',  100); end;');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*Eder 08-12-2014 - Retirar a integridade do campo CD_FACE_DENTE */

begin
if (dt_versao_atual_cliente_w < to_date('08/12/2014','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name	= 'PLSMOTP_TISSFAD_FK';


	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('BACA','alter table PLS_MONITOR_TISS_PROC drop constraint PLSMOTP_TISSFAD_FK');
	end if;
		
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSMOTP_TISSFAD_FK_I';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('BACA',' drop index PLSMOTP_TISSFAD_FK_I');
	end if;

end if;
exception
when others then
	null;
end;

begin
	/* rlepinski - Alterar CD_DECLARACAO_NASC_VIVO para varchar2(30) */

	if (dt_versao_atual_cliente_w < to_date('04/03/2015','dd/mm/yyyy')) then
		/* obter tipo atributo */

		select	count(*)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_MOVIMENTACAO_BENEF'
		and	column_name	= 'CD_DECLARACAO_NASC_VIVO'
		and	data_type	= 'NUMBER';
		
		if (qt_registro_w > 0) then
			/* Alterar o campo CD_DECLARACAO_NASC_VIVO da tabela PLS_MOVIMENTACAO_BENEF */

			CALL exec_sql_dinamico('Tasy',' alter table PLS_MOVIMENTACAO_BENEF add CD_DECLARACAO_NASC_VIVO_VAR VARCHAR2(30)');
			CALL exec_sql_dinamico('Tasy',' update PLS_MOVIMENTACAO_BENEF set CD_DECLARACAO_NASC_VIVO_VAR = TO_CHAR(CD_DECLARACAO_NASC_VIVO) where CD_DECLARACAO_NASC_VIVO is not null');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_MOVIMENTACAO_BENEF drop column CD_DECLARACAO_NASC_VIVO ');
			CALL exec_sql_dinamico('Tasy',' alter table PLS_MOVIMENTACAO_BENEF rename column CD_DECLARACAO_NASC_VIVO_VAR to CD_DECLARACAO_NASC_VIVO ');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--Francisco - 04/03/2015 - Ajuste de cache Prevmed
begin
	if (dt_versao_atual_cliente_w < to_date('04/03/2015','dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_sequences
		where	sequence_name = 'MPREV_POP_ALVO_SELECAO_SEQ';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''MPREV_POP_ALVO_BENEF'', ''NR_SEQUENCIA'', ''R'',  1000); end;');
			CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''MPREV_POP_ALVO_PESSOA'', ''NR_SEQUENCIA'', ''R'', 1000); end;');
			CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''MPREV_POP_ALVO_SELECAO'', ''NR_SEQUENCIA'', ''R'', 1000); end;');
			CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''MPREV_POP_PES_ATEND'', ''NR_SEQUENCIA'', ''R'',  1000); end;');
			CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''MPREV_POP_PES_ATEND_PROC'', ''NR_SEQUENCIA'', ''R'',  1000); end;');
			CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''MPREV_POP_PES_CUSTO'', ''NR_SEQUENCIA'', ''R'',  1000); end;');
			CALL exec_sql_dinamico('tasy', 'begin pls_posicionar_sequence_cache(''MPREV_POP_PES_DIAGNOSTICO'', ''NR_SEQUENCIA'', ''R'',  1000); end;');
		end if;

	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl Ajustar ordem da SINRVIT_UK.
begin
if (dt_versao_atual_cliente_w < to_date('05/03/2015','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'SINRVIT_UK'
	and	column_name	= 'NR_SEQ_SIP_NV_DADOS'
	and	position	= 1;
	
	if (qt_registro_w > 0) then
	
		CALL exec_sql_dinamico('tasy', 'drop index SINRVIT_UK');
		CALL exec_sql_dinamico('tasy', 'alter table sip_nv_regra_vinc_it drop constraint SINRVIT_UK');
		CALL exec_sql_dinamico('tasy',	'alter table sip_nv_regra_vinc_it add constraint ' ||
						'SINRVIT_UK unique ' ||
						'(NR_SEQ_ITEM_ASSIST, NR_SEQ_REGRA_ASSIST, NR_SEQ_SIP_NV_DADOS) ');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- Lepinski Retirar obrigatoriedade de campo
begin
if (dt_versao_atual_cliente_w < to_date('05/03/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_REGRA_INTERFACE'
	and	nullable 	= 'N'
	and	column_name	= 'CD_INTERFACE';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tasy', 'alter table PTU_REGRA_INTERFACE modify (CD_INTERFACE null)');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- Francisco - Colunas que não existem mais na Requisição 851148
begin
if (dt_versao_atual_cliente_w < to_date('06/03/2015','dd/mm/yyyy')) then
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_CID';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_CID');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_ESPECIALIDADE_MEDICA';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_ESPECIALIDADE_MEDICA');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_PRESTADOR_REQUISITANTE';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_PRESTADOR_REQUISITANTE');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_PRESTADOR';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_PRESTADOR');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_UNIMED';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_UNIMED');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_UNIMED_BENEF';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_UNIMED_BENEF');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_UNIMED_EXEC';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_UNIMED_EXEC');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_UNIMED_PRESTADOR';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_UNIMED_PRESTADOR');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_UNIMED_PREST_REQ';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_UNIMED_PREST_REQ');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'CD_USUARIO_PLANO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column CD_USUARIO_PLANO');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'DT_ATENDIMENTO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column DT_ATENDIMENTO');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'IE_ALTO_CUSTO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column IE_ALTO_CUSTO');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'IE_TIPO_CLIENTE';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column IE_TIPO_CLIENTE');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'IE_URGENCIA_EMERGENCIA';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column IE_URGENCIA_EMERGENCIA');
	END	IF;
	
	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'NM_PRESTADOR';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column NM_PRESTADOR');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'NR_IDENT_EXEC';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column NR_IDENT_EXEC');
	END	IF;

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'NR_VIA_CARTAO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column NR_VIA_CARTAO');
	END	IF;
	

	select	COUNT(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REQUISICAO'
	AND	column_name = 'QT_DIAS_DOENCA';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Francisco','alter table PLS_REQUISICAO drop column QT_DIAS_DOENCA');
	END	IF;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- aaschlote 16/03/2015 -Mudar o campo de Varchar2 para CLOB
begin
if (dt_versao_atual_cliente_w < to_date('16/03/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name  	= 'W_PLS_MONITOR_ANS_RET'
	and	column_name 	= 'DS_XML'
	and	data_type 	<> 'CLOB';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('aaschlote', 'alter table W_PLS_MONITOR_ANS_RET add DS_XML_new clob ');
		CALL exec_sql_dinamico('aaschlote', 'update W_PLS_MONITOR_ANS_RET set DS_XML_new = DS_XML ');
		CALL exec_sql_dinamico('aaschlote', 'alter table W_PLS_MONITOR_ANS_RET drop column DS_XML ');
		CALL exec_sql_dinamico('aaschlote', 'alter table W_PLS_MONITOR_ANS_RET rename column DS_XML_new to DS_XML ');
	end if;	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote 20/03/2015 - Aumentar o campo CD_MATERIAL da tabela  PLS_MONITOR_TISS_MAT */

if (dt_versao_atual_cliente_w < to_date('20/03/2015','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_MONITOR_TISS_MAT'
	and	column_name = 'CD_MATERIAL'
	and	data_length = 10;

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('aaschlote','alter table PLS_MONITOR_TISS_MAT modify CD_MATERIAL varchar2(15)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote 30/03/2015 - Aumentar o campo CD_MATERIAL da tabela  PLS_MONITOR_TISS_PROC_RET */

if (dt_versao_atual_cliente_w < to_date('30/03/2015','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_MONITOR_TISS_PROC_RET'
	and	column_name = 'CD_MATERIAL'
	and	data_length = 10;

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('aaschlote','alter table PLS_MONITOR_TISS_PROC_RET modify CD_MATERIAL varchar2(15)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*dlehmkuhl 02/04/2015 - exclusão de índice desnecessário */

if (dt_versao_atual_cliente_w < to_date('02/04/2015','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name = 'PLS_GRUPO_PARTIC_TM'
	and	index_name = 'PGRUPTM_I1';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'drop index PGRUPTM_I1');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote 03/04/2015 - Aumentar os campos QT_TOTAL_INCLUIDO,QT_TOTAL_ALTERADO,QT_TOTAL_EXCLUIDO,QT_TOTAL_ERRO da tabela  PLS_MONITOR_TISS_LOTE_COM  */

if (dt_versao_atual_cliente_w < to_date('03/04/2015','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_MONITOR_TISS_LOTE_COM'
	and	column_name = 'QT_TOTAL_INCLUIDO'
	and	data_precision = 5;

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('aaschlote','alter table PLS_MONITOR_TISS_LOTE_COM modify QT_TOTAL_INCLUIDO number(10)');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_MONITOR_TISS_LOTE_COM'
	and	column_name = 'QT_TOTAL_ALTERADO'
	and	data_precision = 5;

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('aaschlote','alter table PLS_MONITOR_TISS_LOTE_COM modify QT_TOTAL_ALTERADO number(10)');
	end if;
	
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_MONITOR_TISS_LOTE_COM'
	and	column_name = 'QT_TOTAL_EXCLUIDO'
	and	data_precision = 5;

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('aaschlote','alter table PLS_MONITOR_TISS_LOTE_COM modify QT_TOTAL_EXCLUIDO number(10)');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_MONITOR_TISS_LOTE_COM'
	and	column_name = 'QT_TOTAL_ERRO'
	and	data_precision = 5;

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('aaschlote','alter table PLS_MONITOR_TISS_LOTE_COM modify QT_TOTAL_ERRO number(10)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl 17/04/2015 - conversão tabela PLS_OC_CTA_CONTA_EX para nologging
if (dt_versao_atual_cliente_w < to_date('17/04/2015','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from 	user_tables
	where 	table_name = 'PLS_OC_CTA_CONTA_EX' 
	and 	temporary = 'Y';
	
	if (qt_registro_w > 0) then
	
		select	Obter_Tablespace_Index(null)
		into STRICT	nm_tablespace_index_w
		;
		
		-- para fazer essa troca é preciso apagar a tabela e criá-la novamente
		CALL Exec_sql_Dinamico('tasy', 'drop table PLS_OC_CTA_CONTA_EX');
	
		ds_comando_w := 'create table PLS_OC_CTA_CONTA_EX(' || chr(13) || chr(10) ||
				'nr_seq_conta      NUMBER(10) not null' || chr(13) || chr(10) ||
				') nologging';
		
		CALL Exec_sql_Dinamico('tasy', ds_comando_w);
		CALL Exec_sql_Dinamico('tasy', 'create index POCCEEX_I1 on PLS_OC_CTA_CONTA_EX (NR_SEQ_CONTA) tablespace ' || nm_tablespace_index_w);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl 17/04/2015 - manutenção tabela PLS_OC_CTA_LOG_OCOR para nologging e exclusão de relacionamentos 
if (dt_versao_atual_cliente_w < to_date('17/04/2015','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'PLS_OC_CTA_LOG_OCOR' 
	and	logging = 'YES';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table PLS_OC_CTA_LOG_OCOR nologging');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'PLS_OC_CTA_LOG_OCOR'
	and	constraint_name = 'PLOCLOC_PLSLOPC_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table PLS_OC_CTA_LOG_OCOR drop constraint PLOCLOC_PLSLOPC_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'PLS_OC_CTA_LOG_OCOR'
	and	constraint_name = 'PLOCLOC_PLSPRCO_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table PLS_OC_CTA_LOG_OCOR drop constraint PLOCLOC_PLSPRCO_FK');
	end if;	
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'PLS_OC_CTA_LOG_OCOR'
	and	constraint_name = 'PLOCLOC_PLSCOME_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table PLS_OC_CTA_LOG_OCOR drop constraint PLOCLOC_PLSCOME_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'PLS_OC_CTA_LOG_OCOR'
	and	constraint_name = 'PLOCLOC_PLSOCOR_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table PLS_OC_CTA_LOG_OCOR drop constraint PLOCLOC_PLSOCOR_FK');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'PLS_OC_CTA_LOG_OCOR'
	and	constraint_name = 'PLOCLOC_PLSCTLP_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table PLS_OC_CTA_LOG_OCOR drop constraint PLOCLOC_PLSCTLP_FK');
	end if;	
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'PLS_OC_CTA_LOG_OCOR'
	and	constraint_name = 'PLOCLOC_PLSOCCC_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table PLS_OC_CTA_LOG_OCOR drop constraint PLOCLOC_PLSOCCC_FK');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*dlehmkuhl 13/05/2015 - alterar índice */

if (dt_versao_atual_cliente_w < to_date('13/05/2015','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name = 'PLS_CARENCIA_PROC'
	and	index_name = 'PLSCAPR_I1';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'drop index PLSCAPR_I1');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*jlsilva 25/06/2015 - Alterar tipo do campo IE_TIPO_TABELA para varchar2 que estava como Number */

begin
if (dt_versao_atual_cliente_w < to_date('25/06/2015','dd/mm/yyyy')) then

	select 	count(1)
	into STRICT 	qt_registro_w
	from 	user_tab_columns
	where 	table_name = 'PLS_CONVERSAO_MAT'
	and	column_name = 'IE_TIPO_TABELA';

	if (qt_registro_w > 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CONVERSAO_MAT'
		and	column_name = 'IE_TIPO_TABELA'
		and	data_type = 'NUMBER';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','alter table PLS_CONVERSAO_MAT modify IE_TIPO_TABELA VARCHAR2(10)');
		end if;
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


-- ESTE CÓDIGO SEMPRE DEVE SER EXECUTADO PARA FAZER O GERENCIAMENTO CORRETO DA CRIAÇÃO DE TYPES

-- PARA FINS DE ORGANIZAÇÃO, TAMBÉM DEVE SER SEMPRE O ÚLTIMO A SER EXECUTADO
begin
-- gerencia a criação do objeto TAB_PLS_PARAMETRO
EXECUTE 'select dt_atualizacao from tasy_versao.objeto_sistema where nm_objeto = ' || chr(39) || 'TAB_PLS_PARAMETRO' || chr(39) INTO STRICT dt_versao_objeto_w;
if (dt_versao_objeto_w > dt_versao_atual_cliente_w) then
	CALL exec_sql_dinamico('Decio', 'drop type TAB_PLS_PARAMETRO');
end if;

exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('20/03/2015','dd/mm/yyyy')) then

		open	c02;
		loop
		fetch	c02 into
			nr_seq_motivo_desap_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */

			insert into LAUDO_PACIENTE_MOT_DES(nr_sequencia, dt_atualizacao, nm_usuario, ds_motivo_desaprovacao) VALUES (1, clock_timestamp(), 'jrviel', 'Motivo Desaprov. ' || nr_seq_motivo_desap_w);

		end	loop;
		close	c02;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('07/05/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PORTAB_INCONSISTENCIA'
	and	nullable 	= 'N'
	and	column_name	= 'CD_ESTABELECIMENTO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tasy', 'alter table PLS_PORTAB_INCONSISTENCIA modify (CD_ESTABELECIMENTO null)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('11/05/2015','dd/mm/yyyy')) then
	CALL tasy_posicionar_sequence('PLS_INCLUSAO_ANEXO','NR_SEQUENCIA','R');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- transformar UK em índice
if (dt_versao_atual_cliente_w < to_date('11/02/2015', 'dd/mm/yyyy')) then

	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_index_w
	;
			
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'PLSMOTI_I1';

	if (qt_registro_w < 3) then
		CALL exec_sql_dinamico('tasy', 'alter table PLS_MONITOR_TISS_INC drop constraint PLSMOTI_I1 cascade');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name = 'PLSMOTI_I1';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy', 'create index PLSMOTI_I1 on PLS_MONITOR_TISS_INC(CD_INCONSISTENCIA) tablespace ' || nm_tablespace_index_w);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
-- OS 878225 Objeto MPREV_GERAR_COMUNIC_RESCISAO substituido por mprev_gerar_comunic_exc_part.
if (dt_versao_atual_cliente_w < to_date('01/06/2015', 'dd/mm/yyyy')) then
	--delete do objeto MPREV_GERAR_COMUNIC_RESCISAO
	CALL exec_sql_dinamico('spkoth','delete from objeto_sistema where nr_sequencia = 54326');	
end if;

/* Eder 04/06/2015  OS892702 -  Retirar o campo  NR_SEQ_PROTOCOLO de obrigatório  das tabelas  PLS_RESUMO_IMPORTACAO e PLS_MENSAGEM_IMPORTACAO */

begin
	if (dt_versao_atual_cliente_w < to_date('04/06/2015','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_RESUMO_IMPORTACAO'
		and	nullable 	= 'N'
		and	column_name	= 'NR_SEQ_PROTOCOLO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_resumo_importacao modify (nr_seq_protocolo null)');
		end if;	

		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_MENSAGEM_IMPORTACAO'
		and	nullable 	= 'N'
		and	column_name	= 'NR_SEQ_PROTOCOLO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_mensagem_importacao modify (nr_seq_protocolo null)');
		end if;	
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl 17/06/2015  Retirar o campo  IE_INDICACAO_ACIDENTE da PLS_DIAGNOSTICO_CONTA_IMP
begin
	if (dt_versao_atual_cliente_w < to_date('17/06/2015', 'dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_DIAGNOSTICO_CONTA_IMP'
		and	column_name	= 'IE_INDICACAO_ACIDENTE';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table PLS_DIAGNOSTICO_CONTA_IMP drop column ie_indicacao_acidente');
		end if;	
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- cmgross Retirar obrigatoriedade dos campos
begin
	if (dt_versao_atual_cliente_w < to_date('08/07/2015','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PTU_REQUISICAO_ORDEM_SERV'
		and	nullable 	= 'N'
		and	column_name	= 'CD_UNIMED';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('tasy', 'alter table PTU_REQUISICAO_ORDEM_SERV modify (CD_UNIMED null)');
		end if;	

			select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PTU_REQUISICAO_ORDEM_SERV'
		and	nullable 	= 'N'
		and	column_name	= 'CD_USUARIO_PLANO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('tasy', 'alter table PTU_REQUISICAO_ORDEM_SERV modify (CD_USUARIO_PLANO null)');
		end if;	
		
			select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PTU_REQUISICAO_ORDEM_SERV'
		and	nullable 	= 'N'
		and	column_name	= 'CD_UNIMED_SOLICITANTE';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('tasy', 'alter table PTU_REQUISICAO_ORDEM_SERV modify (CD_UNIMED_SOLICITANTE null)');
		end if;	
		
			select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PTU_REQUISICAO_ORDEM_SERV'
		and	nullable 	= 'N'
		and	column_name	= 'NR_SEQ_SEGURADO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('tasy', 'alter table PTU_REQUISICAO_ORDEM_SERV modify (NR_SEQ_SEGURADO null)');
		end if;	
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl 05/08/2015  apagar campos dos filtros das regras e critérios de preço
begin
	if (dt_versao_atual_cliente_w < to_date('05/08/2015', 'dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CP_CTA_FILTRO_BENEF'
		and	column_name = 'NR_SEQ_GRUPO_INTERCAMBIO';	

		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy','alter table PLS_CP_CTA_FILTRO_BENEF drop column NR_SEQ_GRUPO_INTERCAMBIO');
		end if;	
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CP_CTA_FILTRO_BENEF'
		and	column_name = 'IE_TIPO_VINCULO';	

		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy','alter table PLS_CP_CTA_FILTRO_BENEF drop column IE_TIPO_VINCULO');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CP_CTA_FILTRO_BENEF'
		and	column_name = 'NR_SEQ_INTERCAMBIO';	

		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy','alter table PLS_CP_CTA_FILTRO_BENEF drop column NR_SEQ_INTERCAMBIO');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CP_CTA_FILTRO_PREST'
		and	column_name = 'NR_SEQ_GRUPO_SERVICO';	

		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy','alter table PLS_CP_CTA_FILTRO_PREST drop column NR_SEQ_GRUPO_SERVICO');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CP_CTA_FILTRO_CONTA'
		and	column_name = 'IE_TIPO_ACOMODACAO_PTU';	

		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy','alter table PLS_CP_CTA_FILTRO_CONTA drop column IE_TIPO_ACOMODACAO_PTU');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl 12/08/2015  apagar campos antigos não utilizados da pls_conta_proc e pls_conta_mat referente a regras e critérios de preço
begin
	if (dt_versao_atual_cliente_w < to_date('12/08/2015', 'dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name  = 'PLSCOPRO_PLSCPCC_FK_I';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy', 'drop index plscopro_plscpcc_fk_i');
		end if;	
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCOPRO_PLSCPCC_FK';
	
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy', 'Alter Table PLS_CONTA_PROC Drop Constraint PLSCOPRO_PLSCPCC_FK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CONTA_PROC'
		and	column_name = 'NR_SEQ_REGRA_PRECO_COMB';	

		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy','alter table PLS_CONTA_PROC drop column NR_SEQ_REGRA_PRECO_COMB');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name  = 'PLSCOMAT_PLSCPCC_FK_I';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy', 'drop index PLSCOMAT_PLSCPCC_FK_I');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLSCOMAT_PLSCPCC_FK';
	
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy', 'Alter Table PLS_CONTA_MAT Drop Constraint PLSCOMAT_PLSCPCC_FK');
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name = 'PLS_CONTA_MAT'
		and	column_name = 'NR_SEQ_REGRA_PRECO_COMB';	

		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy','alter table PLS_CONTA_MAT drop column NR_SEQ_REGRA_PRECO_COMB');
		end if;
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* WCBERNARDINO - OS 920619 */

begin
	if (dt_versao_atual_cliente_w < to_date('24/08/2015','dd/mm/yyyy')) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_PROCESSO_PROCEDIMENTO'
		and	nullable 	= 'N'
		and	column_name	= 'CD_PROCEDIMENTO';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_processo_procedimento modify (cd_procedimento null)');
		end if;	

		select	count(1)
		into STRICT	qt_registro_w
		from	user_tab_columns
		where	table_name 	= 'PLS_PROCESSO_PROCEDIMENTO'
		and	nullable 	= 'N'
		and	column_name	= 'IE_ORIGEM_PROCED';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('baca', 'alter table pls_processo_procedimento modify (ie_origem_proced null)');
		end if;	
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* WCBERNARDINO - OS 925377 */

begin
if (dt_versao_atual_cliente_w < to_date('25/08/2015','dd/mm/yyyy')) then
	CALL Exec_sql_Dinamico('baca','alter table pls_ar_faturamento modify vl_taxa number(15,4)');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* WCBERNARDINO - OS 930492 */

begin
if (dt_versao_atual_cliente_w < to_date('02/09/2015','dd/mm/yyyy')) then
	update	TABELA_ATRIBUTO
	set	IE_OBRIGATORIO	= 'N'
	where	nm_tabela	= 'PTU_FATURA'
	and	NM_ATRIBUTO	= 'NR_SEQ_CONG_RESP_FINANC';

	CALL exec_sql_dinamico('Tasy',' alter table PTU_FATURA modify NR_SEQ_CONG_RESP_FINANC null ');
	
	update	TABELA_ATRIBUTO
	set	IE_OBRIGATORIO	= 'N'
	where	nm_tabela	= 'PTU_CAMARA_CONTESTACAO'
	and	NM_ATRIBUTO	= 'NR_SEQ_CONTESTACAO';

	CALL exec_sql_dinamico('Tasy',' alter table PTU_CAMARA_CONTESTACAO modify NR_SEQ_CONTESTACAO null ');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*SPKOTH OS 932157*/

begin
if (dt_versao_atual_cliente_w < to_date('10/09/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_source
	where	name	= 'MPREV_GRAVAR_AGENDAMENTO_REC';

	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('spkoth', ' drop procedure MPREV_GRAVAR_AGENDAMENTO_REC'
);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- WCBERNARDINO - OS 906608
begin
if (trunc(dt_versao_atual_cliente_w) < trunc(to_date('11/09/2015','dd/mm/yyyy'))) then
	qt_registro_w := obter_valor_dinamico('select count(*) from user_tab_columns where table_name = ''PTU_QUESTIONAMENTO_CODIGO'' AND column_name = ''NR_SEQ_REGISTRO'' and NULLABLE=''N'' ', qt_registro_w);
	if (qt_registro_w > 0 ) then
		CALL exec_sql_dinamico('Tasy','alter table PTU_QUESTIONAMENTO_CODIGO modify NR_SEQ_REGISTRO null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- jlsilva 11/09/2015 apagar campo que não será utilizado nos filtros de regras e critérios de preço
begin
if (dt_versao_atual_cliente_w < to_date('11/09/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_CP_CTA_FILTRO_CONT'
	and	column_name = 'IE_FRANQUIA';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('Tasy', ' alter table PLS_CP_CTA_FILTRO_CONT drop column IE_FRANQUIA ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*aaschlote 17/09/2015  - Alterar oscampo PLS_REL_AN_ITENS  para NOT NULL da tabela NR_SEQ_AN_PAGINA*/

if (dt_versao_atual_cliente_w < to_date('17/09/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_REL_AN_ITENS'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_AN_PAGINA';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('BACA', 'alter table PLS_REL_AN_ITENS modify NR_SEQ_AN_PAGINA null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Lepinski - Ajustar tamanho de campo */

begin
if (dt_versao_atual_cliente_w < to_date('18/09/2015','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PLANO_PRECO'
	and	data_precision 	= 7
	and	column_name	= 'TX_ACRESCIMO';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('baca','alter table PLS_PLANO_PRECO modify TX_ACRESCIMO number(15,4)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- apagar a UK da PLS_MONITOR_TISS_INC
if (dt_versao_atual_cliente_w < to_date('01/10/2015','dd/mm/yyyy')) then

	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_index_w
	;
			
	select	count(1)
	into STRICT	qt_registro_w
	from	user_cons_columns
	where	constraint_name	= 'PLSMOTI_UK';

	if (qt_registro_w < 3) then
		CALL exec_sql_dinamico('tasy', 'alter table PLS_MONITOR_TISS_INC drop constraint PLSMOTI_UK cascade');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where 	index_name = 'PLSMOTI_I1';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy', 'create index PLSMOTI_I1 on PLS_MONITOR_TISS_INC(CD_INCONSISTENCIA) tablespace ' || nm_tablespace_index_w);
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*aaschlote OS 923624 01/10/2015 -Ajustar o tamanho do campo*/

begin
if (dt_versao_atual_cliente_w < to_date('01/10/2015','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_FAT_GUIA_ENVIO_PROC'
	and	column_name	= 'QT_PROCEDIMENTO'
	and	data_scale	= 4;

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('aaschlote', 'alter table PLS_FAT_GUIA_ENVIO_PROC add QT_PROCEDIMENTO_NEW number(12,4) ');
		CALL exec_sql_dinamico('aaschlote', 'update PLS_FAT_GUIA_ENVIO_PROC set QT_PROCEDIMENTO_NEW = QT_PROCEDIMENTO ');
		CALL exec_sql_dinamico('aaschlote', 'alter table PLS_FAT_GUIA_ENVIO_PROC drop column QT_PROCEDIMENTO ');
		CALL exec_sql_dinamico('aaschlote', 'alter table PLS_FAT_GUIA_ENVIO_PROC rename column QT_PROCEDIMENTO_NEW to QT_PROCEDIMENTO ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/*Francisco - 07/10/2015 - Exclusão de FK e Indices criados indevidamente */

if (dt_versao_atual_cliente_w < to_date('14/10/2015','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name = 'HDM_INDIC_FT_VITAL_SIGN'
	and	index_name = 'HDMIFTVS_HDMIDGR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIDGR_FK_I');
		CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIDGR_FK2_I');
		CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIDGR_FK3_I');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'HDM_INDIC_FT_VITAL_SIGN'
	and	constraint_name = 'HDMIFTVS_HDMIDGR_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIDGR_FK');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIDGR_FK2');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIDGR_FK3');
	end if;
	/*Glicemia */

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'HDM_INDIC_FT_VITAL_SIGN'
	and	constraint_name = 'HDMIFTVS_HDMIGLR_FK';
	
	if (qt_registro_w > 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'HDMIFTVS_HDMIGLR_FK_I';
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIGLR_FK_I');
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIGLR_FK2_I');
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIGLR_FK3_I');
		end if;
		
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIGLR_FK');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIGLR_FK2');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIGLR_FK3');
	end if;
	/* IMC */

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'HDM_INDIC_FT_VITAL_SIGN'
	and	constraint_name = 'HDMIFTVS_HDMINBR_FK';
	
	if (qt_registro_w > 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'HDMIFTVS_HDMINBR_FK_I';
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMINBR_FK_I');
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMINBR_FK2_I');
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMINBR_FK3_I');
		end if;
		
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMINBR_FK');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMINBR_FK2');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMINBR_FK3');
	end if;
	
	/* PA */

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'HDM_INDIC_FT_VITAL_SIGN'
	and	constraint_name = 'HDMIFTVS_HDMIBPR_FK';
	
	if (qt_registro_w > 0) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'HDMIFTVS_HDMIBPR_FK_I';
		
		if (qt_registro_w > 0) then
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIBPR_FK_I');
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIBPR_FK2_I');
			CALL Exec_sql_Dinamico('tasy', 'drop index HDMIFTVS_HDMIBPR_FK3_I');
		end if;
		
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIBPR_FK');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIBPR_FK2');
		CALL Exec_sql_Dinamico('tasy', 'alter table HDM_INDIC_FT_VITAL_SIGN drop constraint HDMIFTVS_HDMIBPR_FK3');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*Lepinski -Ajustar o tamanho do campo*/

begin
if (dt_versao_atual_cliente_w < to_date('15/10/2015','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_SOLICITACAO_COMERCIAL'
	and	column_name	= 'NM_PESSOA_FISICA'
	and	data_length	= 80;

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('lepinski', 'alter table PLS_SOLICITACAO_COMERCIAL modify NM_PESSOA_FISICA varchar2(80) ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Lepinski - Retirar a obrigatoriedade do campo */

begin
if (dt_versao_atual_cliente_w < to_date('16/10/2015','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PROPOSTA_VALIDACAO'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_INCONSISTENCIA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('lepinski', 'alter table PLS_PROPOSTA_VALIDACAO modify (NR_SEQ_INCONSISTENCIA null)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Francisco - Dropar tabelas para na sincronização criar certo */

begin
if (dt_versao_atual_cliente_w < to_date('22/10/2015','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name 	= 'HDM_INDIC_FT_VITAL_SIGN_AG';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco','drop table HDM_INDIC_FT_VITAL_SIGN_AG');
		CALL exec_sql_dinamico('Francisco','drop table HDM_INDIC_FT_VITAL_SIGN_CP');
		CALL exec_sql_dinamico('Francisco','drop table HDM_INDIC_FT_VITAL_SIGN_PR');
		CALL exec_sql_dinamico('Francisco','drop table HDM_INDIC_FT_VITAL_SIGN_RD');
	end if;

	select	count(*)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'HDM_INDIC_FT_VITAL_SIGN_SEQ';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Francisco','begin pls_posicionar_sequence_cache(''HDM_INDIC_FT_VITAL_SIGN'', ''NR_SEQUENCIA'', ''R'',  1000); end;');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Lepinski - Retirar a obrigatoriedade do campo */

begin
if (dt_versao_atual_cliente_w < to_date('28/10/2015','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_ANALISE_ADESAO'
	and	nullable 	= 'N'
	and	column_name	= 'NR_SEQ_PESSOA_PROPOSTA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('lepinski', 'alter table PLS_ANALISE_ADESAO modify (NR_SEQ_PESSOA_PROPOSTA null)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* Francisco - Mudar campos para Varchar2 */

begin
if (dt_versao_atual_cliente_w < to_date('10/11/2015','dd/mm/yyyy')) then	
	/* HDM_INDIC_FT_VITAL_SIGN */

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'HDM_INDIC_FT_VITAL_SIGN'
	and	column_name	= 'NR_DIF_PERSON'
	and	data_type	= 'VARCHAR2';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_VITAL_SIGN add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_VITAL_SIGN set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_VITAL_SIGN drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_VITAL_SIGN rename column nr_dif_person_var to nr_dif_person ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'HDM_INDIC_FT_APPOINT'
	and	column_name	= 'NR_DIF_PERSON'
	and	data_type	= 'VARCHAR2';
	
	if (qt_registro_w = 0) then
		/*HDM_INDIC_FT_APPOINT*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_APPOINT add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_APPOINT set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_APPOINT drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_APPOINT rename column nr_dif_person_var to nr_dif_person ');
		
		/*HDM_INDIC_FT_CLINIC_ANT*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_CLINIC_ANT add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_CLINIC_ANT set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_CLINIC_ANT drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_CLINIC_ANT rename column nr_dif_person_var to nr_dif_person ');
		
		/*HDM_INDIC_FT_COST*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_COST add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_COST set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_COST drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_COST rename column nr_dif_person_var to nr_dif_person ');
		
		/*HDM_INDIC_FT_EPISODE*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_EPISODE add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_EPISODE set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_EPISODE drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_EPISODE rename column nr_dif_person_var to nr_dif_person ');
		
		/*HDM_INDIC_FT_EXAM*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_EXAM add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_EXAM set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_EXAM drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_EXAM rename column nr_dif_person_var to nr_dif_person ');
		
		/*HDM_INDIC_FT_HABIT*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_HABIT add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_HABIT set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_HABIT drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_HABIT rename column nr_dif_person_var to nr_dif_person ');
		
		/*HDM_INDIC_FT_MED_BILL*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_MED_BILL add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_MED_BILL set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_MED_BILL drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_MED_BILL rename column nr_dif_person_var to nr_dif_person ');
		
		/* HDM_INDIC_FT_MEDICATION*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_MEDICATION add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_MEDICATION set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_MEDICATION drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_MEDICATION rename column nr_dif_person_var to nr_dif_person ');
		
		/* HDM_INDIC_FT_PLAN_REAL*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_PLAN_REAL add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_PLAN_REAL set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_PLAN_REAL drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_PLAN_REAL rename column nr_dif_person_var to nr_dif_person ');
		
		/* HDM_INDIC_FT_PROCEDURE*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_PROCEDURE add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_PROCEDURE set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_PROCEDURE drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_PROCEDURE rename column nr_dif_person_var to nr_dif_person ');
		
		/* HDM_INDIC_FT_SUSPENSION*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_SUSPENSION add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_SUSPENSION set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_SUSPENSION drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_SUSPENSION rename column nr_dif_person_var to nr_dif_person ');
		
		/* HDM_INDIC_FT_VACCINE*/

		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_VACCINE add nr_dif_person_var varchar2(10) ');		
		CALL exec_sql_dinamico('Tasy',' update HDM_INDIC_FT_VACCINE set nr_dif_person_var = nr_dif_person ');		
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_VACCINE drop column nr_dif_person ');
		CALL exec_sql_dinamico('Tasy',' alter table HDM_INDIC_FT_VACCINE rename column nr_dif_person_var to nr_dif_person ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('16/11/2015','dd/mm/yyyy')) then

	begin
	CALL exec_sql_dinamico('Tasy','alter table w_pls_mat_unimed_bras modify des_produto varchar2(255) null');
	exception
	when others then
		null;
	end;

	begin
	CALL exec_sql_dinamico('Tasy','alter table w_pls_mat_unimed_bras modify des_apresentacao varchar2(255) null');
	exception
	when others then
		null;
	end;

	begin
	CALL exec_sql_dinamico('Tasy','alter table pls_material_unimed_bras modify ds_produto varchar2(255) null');
	exception
	when others then
		null;
	end;

	begin
	CALL exec_sql_dinamico('Tasy','alter table pls_material_unimed_bras modify ds_apresentacao varchar2(255) null');
	exception
	when others then
		null;
	end;

	begin
	CALL exec_sql_dinamico('tasy','alter table pls_lote_imp_mat_uni_bras modify ds_produto varchar2(255) null');
	exception
	when others then
		null;
	end;

	begin
	CALL exec_sql_dinamico('tasy','alter table pls_lote_imp_mat_uni_bras modify ds_apresentacao varchar2(255) null');
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'W_PLS_MAT_UNIMED_BRAS'
	and	nm_atributo	= 'DES_PRODUTO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'W_PLS_MAT_UNIMED_BRAS'
	and	nm_atributo	= 'DES_APRESENTACAO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_MATERIAL_UNIMED_BRAS'
	and	nm_atributo	= 'DS_PRODUTO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_MATERIAL_UNIMED_BRAS'
	and	nm_atributo	= 'DS_APRESENTACAO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_LOTE_IMP_MAT_UNI_BRAS'
	and	nm_atributo	= 'DS_PRODUTO'  LIMIT 1;
	exception
	when others then
		null;
	end;

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_tabela	= 'PLS_LOTE_IMP_MAT_UNI_BRAS'
	and	nm_atributo	= 'DS_APRESENTACAO'  LIMIT 1;
	exception
	when others then
		null;
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('03/12/2015','dd/mm/yyyy')) then
	begin
	CALL exec_sql_dinamico('tasy',' alter table ptu_mov_benef_seg_plano modify ds_plano_origem varchar2(60) ');
	exception
	when others then
		null;
	end;
	
	begin
	update	tabela_atributo
	set	qt_tamanho	= 60
	where	nm_tabela	= 'PTU_MOV_BENEF_SEG_PLANO'
	and	nm_atributo	= 'DS_PLANO_ORIGEM'  LIMIT 1;
	exception
	when others then
		null;
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('09/12/2015','dd/mm/yyyy')) then
	begin
	CALL Exec_sql_Dinamico('TASY', ' Create Index WPLSLRS_UK on W_PLS_LOTE_RESULTADO_SEG( NR_SEQ_LOTE, NR_SEQ_SEGURADO) ');
	exception
	when others then
		null;
	end;

	begin
	CALL Exec_sql_Dinamico('TASY', ' Alter Table W_PLS_LOTE_RESULTADO_SEG add ( Constraint WPLSLRS_UK Unique ( NR_SEQ_LOTE, NR_SEQ_SEGURADO)) ');
	exception
	when others then
		null;
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('28/12/2015','dd/mm/yyyy')) then

	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_atributo	in ('CD_UNIMED_ORIGEM','CD_UNIMED_DESTINO')
	and	nm_tabela	= 'PTU_MOVIMENTACAO_PRODUTO';	
	exception
	when others then
		null;
	end;
	
	begin
	update	tabela_visao_atributo
	set	ie_obrigatorio	= 'N'
	where	nr_sequencia	in (9219,8791)
	and	nm_atributo	in ('CD_UNIMED_ORIGEM','CD_UNIMED_DESTINO');
	exception
	when others then
		null;
	end;
	
	begin
	update	tabela_atributo
	set	ie_obrigatorio	= 'N'
	where	nm_atributo	in ('CD_UNIMED')
	and	nm_tabela	= 'PTU_MOV_PRODUTO_BENEF';
	exception
	when others then
		null;
	end;

	begin
	CALL exec_sql_dinamico('Tasy','alter table PTU_MOVIMENTACAO_PRODUTO modify CD_UNIMED_ORIGEM varchar2(10) null');
	exception
	when others then
		null;
	end;

	begin
	CALL exec_sql_dinamico('Tasy','alter table PTU_MOVIMENTACAO_PRODUTO modify CD_UNIMED_DESTINO varchar2(10) null');
	exception
	when others then
		null;
	end;
	
	begin
	CALL exec_sql_dinamico('Tasy','alter table PTU_MOV_PRODUTO_BENEF modify CD_UNIMED varchar2(10) null');
	exception
	when others then
		null;
	end;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--aschlote 19/01/2016 OS 985015 - Excluir constraint
begin
if (dt_versao_atual_cliente_w < to_date('19/01/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSDRSE_PK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','Alter Table PLS_DEF_REEMB_SELECAO drop constraint PLSDRSE_PK');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--aldellandrea  OS 995624- Excluir constraint
begin
if (dt_versao_atual_cliente_w < to_date('11/02/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PESOCTM_PK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy', 'Alter Table PLS_ESTRUTURA_OCOR_TM Drop Constraint PESOCTM_PK');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('26/02/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLREPAREI_PORTADO_FK';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','Alter Table PLS_REGRA_PAG_REINCLUSAO drop constraint PLREPAREI_PORTADO_FK');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	integridade_referencial
	where 	nm_integridade_referencial 	= 'PLREPAREI_PORTADO_FK'
	and 	nm_tabela 			= 'PLS_REGRA_PAG_REINCLUSAO';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','delete from integridade_referencial where nm_integridade_referencial = ' || chr(39) || 'PLREPAREI_PORTADO_FK' || chr(39) || ' and NM_TABELA = ' || chr(39) || 'PLS_REGRA_PAG_REINCLUSAO' || chr(39));
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLREPAREI_PORTADO_FK_I';
	
	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLREPAREI_PORTADO_FK_I');
		CALL exec_sql_dinamico('Tasy','Create Index PLREPAREI_PORTADO_FK_I on PLS_REGRA_PAG_REINCLUSAO( CD_TIPO_PORTADOR, CD_PORTADOR)');
	end if;	
	
	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice 	= 'PLREPAREI_PORTADO_FK_I'
	and	ie_classificacao <> 'IC';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','update indice set ie_classificacao = ' ||  chr(39) || 'IC' || chr(39) || ' where nm_indice = ' || chr(39) || 'PLREPAREI_PORTADO_FK_I' || chr(39));
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	indice_atributo
	where	nm_indice	= 'PLREPAREI_PORTADO_FK_I'
	and	nm_atributo	= 'CD_TIPO_PORTADOR'
	and	nr_sequencia	<> 1;
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','update indice_atributo set nr_sequencia = 1 where nm_indice = ' || chr(39) || 'PLREPAREI_PORTADO_FK_I' || chr(39) || ' and nm_atributo = ' || chr(39) || 'CD_TIPO_PORTADOR' || chr(39));
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	indice_atributo
	where	nm_indice	= 'PLREPAREI_PORTADO_FK_I'
	and	nm_atributo	= 'CD_PORTADOR'
	and	nr_sequencia	<> 2;
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','update indice_atributo set nr_sequencia = 2 where nm_indice = ' || chr(39) || 'PLREPAREI_PORTADO_FK_I' || chr(39) || ' and nm_atributo = ' || chr(39) || 'CD_PORTADOR' || chr(39));
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('02/03/2016','dd/mm/yyyy')) then
	
	select	count(1)
	into STRICT	qt_registro_w
	from	indice
	where 	nm_tabela = 'PLS_SEGURADO_SOLIC_ALT'
	and	nm_indice = 'PLSSESA_PLMTRSOL_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','delete from indice where nm_tabela = ' || chr(39) || 'PLS_SEGURADO_SOLIC_ALT' || chr(39) || ' and nm_indice = ' || chr(39) || 'PLSSESA_PLMTRSOL_FK_I' || chr(39));
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name	= 'PLSSESA_PLMTRSOL_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSSESA_PLMTRSOL_FK_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('03/02/2016', 'dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_PRESTADOR'
	and	column_name = 'VL_PAGAMENTO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('tasy', 'alter table pls_pp_prestador drop column vl_pagamento');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w <= to_date('03/02/2016', 'dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_PREST_EVENTO_VALOR'
	and	column_name = 'NR_SEQ_PRESTADOR_MATRIZ';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('tasy', 'alter table pls_pp_prest_evento_valor drop column nr_seq_prestador_matriz');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


begin
if (dt_versao_atual_cliente_w <= to_date('04/02/2016', 'dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'REGRA_LIB_CP_USUARIO'
	and	column_name = 'IE_APROVADOR_CHEFE';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('tasy', 'alter table regra_lib_cp_usuario drop column ie_aprovador_chefe');
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*ejsilva  - OS 995708 - Dropar campos da tabela SCHEM_TEST_LOG*/

begin
if (dt_versao_atual_cliente_w <= to_date('16/02/2016', 'dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'SCHEM_TEST_LOG'
	and	column_name = 'NR_TIIME_RUN';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('tasy', 'alter table schem_test_log drop column nr_tiime_run');
		CALL exec_sql_dinamico('tasy', 'alter table schem_test_log drop column ds_action');		
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*ljmartins  - OS 1000808 - ajustar campo movto_trans_doc_monetario.nr_seq_trans_cartao*/

begin
if (dt_versao_atual_cliente_w <= to_date('18/02/2016', 'dd/mm/yyyy')) then

	qt_registro_w := obter_valor_dinamico('select count(1) from movto_trans_doc_monetario ', qt_registro_w);
	
	if (qt_registro_w > 0) then
	begin
		--cria um campo temporário
		CALL exec_sql_dinamico('Tasy','alter table movto_trans_doc_monetario add NR_SEQ_TRANS_CARTAO_TEMP NUMBER(10,0)');
		
		--carrega os dados do campo antigo para o novo
		CALL exec_sql_dinamico('Tasy','update movto_trans_doc_monetario set nr_seq_trans_cartao_temp = nr_seq_trans_cartao');		
		commit;
		
		--limpa os dados do campo
		CALL exec_sql_dinamico('Tasy','update movto_trans_doc_monetario set nr_seq_trans_cartao = null');		
		commit;
		
		-- dropa e recria o campo na tabela com o tamanho correto
		CALL exec_sql_dinamico('Tasy','alter table movto_trans_doc_monetario drop column NR_SEQ_TRANS_CARTAO');
		CALL exec_sql_dinamico('Tasy','alter table movto_trans_doc_monetario add NR_SEQ_TRANS_CARTAO NUMBER(10,0)');
		
		CALL exec_sql_dinamico('Tasy','Create 
		 Index 
		MOTDMO_MOVTRF3_FK_I on MOVTO_TRANS_DOC_MONETARIO(
				   NR_SEQ_TRANS_CARTAO)');
				
		CALL exec_sql_dinamico('Tasy','Alter Table MOVTO_TRANS_DOC_MONETARIO add ( 
			  Constraint MOTDMO_MOVTRF3_FK Foreign Key ( 
				   NR_SEQ_TRANS_CARTAO
		 ) References MOVTO_TRANS_FINANC (
				   NR_SEQUENCIA
		))');
		
		-- volta os dados para o campo padrão
		CALL exec_sql_dinamico('Tasy','update movto_trans_doc_monetario set nr_seq_trans_cartao = nr_seq_trans_cartao_temp');		
		commit;
		
		-- elimina o campo temporário da tabela
		CALL exec_sql_dinamico('Tasy','alter table movto_trans_doc_monetario drop column NR_SEQ_TRANS_CARTAO_TEMP');
	end;
	else
	begin
		CALL exec_sql_dinamico('Tasy','alter table movto_trans_doc_monetario drop column NR_SEQ_TRANS_CARTAO');
		CALL exec_sql_dinamico('Tasy','alter table movto_trans_doc_monetario add NR_SEQ_TRANS_CARTAO NUMBER(10,0)');

		CALL exec_sql_dinamico('Tasy','Create 
		 Index 
		MOTDMO_MOVTRF3_FK_I on MOVTO_TRANS_DOC_MONETARIO(
				   NR_SEQ_TRANS_CARTAO)');
				
		CALL exec_sql_dinamico('Tasy','Alter Table MOVTO_TRANS_DOC_MONETARIO add ( 
			  Constraint MOTDMO_MOVTRF3_FK Foreign Key ( 
				   NR_SEQ_TRANS_CARTAO
		 ) References MOVTO_TRANS_FINANC (
				   NR_SEQUENCIA
		))');
	end;
	end if;
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*ljmartins  - OS 1010604 - drop constraint cairec_recibo_uk*/

begin
if (dt_versao_atual_cliente_w <= to_date('25/02/2016', 'dd/mm/yyyy')) then

		select	count(*)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'cairec_recibo_uk';
	
		if (qt_registro_w > 0) then		
			CALL exec_sql_dinamico('ljmartins','alter table caixa_receb drop constraint cairec_recibo_uk');
		end	if;
				
		select	count(*)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name	= 'CAIREC_RECIBO_UK';
		
		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Fabrício','drop index CAIREC_RECIBO_UK');
		end if;			
		
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*dlehmkuhl  - OS 1013973 - Tirar obrigatoriedade do campo*/

begin
if (dt_versao_atual_cliente_w <= to_date('01/03/2016', 'dd/mm/yyyy')) then

	select 	count(1)
	into STRICT	qt_registro_w
	from   	user_tab_columns
	where  	table_name = 'PLS_LOTE_PROTOCOLO_CONTA'
	and    	column_name = 'IE_TIPO_LOTE'
	and    	nullable = 'N';

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_LOTE_PROTOCOLO_CONTA modify ie_tipo_lote null');
	end if;	
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*dlehmkuhl  - OS 1015403 - Criar chave primária tabela pls_conta_medica_resumo */

begin
if (dt_versao_atual_cliente_w <= to_date('01/03/2016', 'dd/mm/yyyy')) then

	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_index_w
	;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name = 'PLS_CONTA_MEDICA_RESUMO'
	and	constraint_name = 'PLSCOMR_PK';
	
	-- se não tem pk
	if (qt_registro_w = 0) then
		
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	table_name = 'PLS_CONTA_MEDICA_RESUMO'
		and	index_name = 'PLSCOMR_PK';
	
		-- se tem índice exclui ele primeiro
		if (qt_registro_w > 0) then	
			CALL exec_sql_dinamico('Tasy', 'drop index PLSCOMR_PK');
		end if;
		
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_CONTA_MEDICA_RESUMO add constraint PLSCOMR_PK primary key (NR_SEQ_CONTA,NR_SEQUENCIA) using index tablespace ' || nm_tablespace_index_w);
		
		-- se por algum motivo não criou a PK
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	table_name = 'PLS_CONTA_MEDICA_RESUMO'
		and	index_name = 'PLSCOMR_PK';
		
		if (qt_registro_w = 0) then
			CALL exec_sql_dinamico('Tasy', 'create index PLSCOMR_PK on PLS_CONTA_MEDICA_RESUMO (NR_SEQ_CONTA,NR_SEQUENCIA) tablespace ' || nm_tablespace_index_w);
		end if;
	end if;
	
	CALL exec_sql_dinamico('Tasy', 'alter table pls_conta_medica_resumo  modify constraint PLSCOMR_PK using index PLSCOMR_PK');
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*dlehmkuhl  - OS 990413 - Mudar tabela W_PLS_LOTE_FAT_ITEM para temporária */

begin
if (dt_versao_atual_cliente_w <= to_date('03/03/2016', 'dd/mm/yyyy')) then

	select 	count(1)
	into STRICT	qt_registro_w
	from   	user_tables
	where  	table_name = 'W_PLS_LOTE_FAT_ITEM'
	and    	temporary = 'N';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy', 'drop table W_PLS_LOTE_FAT_ITEM cascade constraints');
		
		ds_comando_w := '
			create global temporary table W_PLS_LOTE_FAT_ITEM
			(
			  nr_sequencia            NUMBER(10) not null,
			  dt_atualizacao          DATE not null,
			  nm_usuario              VARCHAR2(15) not null,
			  nr_seq_lote             NUMBER(10) not null,
			  nr_seq_conta_proc       NUMBER(10),
			  nr_seq_conta_mat        NUMBER(10),
			  nr_seq_evento           NUMBER(10),
			  ie_evento_lote          VARCHAR2(1),
			  nr_seq_segurado         NUMBER(10),
			  nr_seq_conta            NUMBER(10),
			  nr_seq_conta_pos        NUMBER(10),
			  vl_item                 NUMBER(15,2),
			  ie_tipo_cobranca        VARCHAR2(3),
			  ie_impedimento_cobranca VARCHAR2(3),
			  vl_item_ndc             NUMBER(15,2),
			  ie_origem_item          VARCHAR2(1),
			  nr_seq_conta_pos_contab NUMBER(10)
			)
			on commit preserve rows';
		CALL exec_sql_dinamico('Tasy', ds_comando_w);
		
		ds_comando_w := 'create index WPLSLFI_I1 on W_PLS_LOTE_FAT_ITEM (NR_SEQ_CONTA)';
		CALL exec_sql_dinamico('Tasy', ds_comando_w);
		
		ds_comando_w := 'create index WPLSLFI_I2 on W_PLS_LOTE_FAT_ITEM (NR_SEQ_LOTE, NM_USUARIO)';
		CALL exec_sql_dinamico('Tasy', ds_comando_w);
		
		ds_comando_w := 'alter table W_PLS_LOTE_FAT_ITEM add constraint WPLSLFI_PK primary key (NR_SEQUENCIA)';
		CALL exec_sql_dinamico('Tasy', ds_comando_w);		
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*ljmartins  - OS 1001632 - banco_estabelecimento */

begin
if (dt_versao_atual_cliente_w <= to_date('04/03/2016', 'dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'BANESTA_MOEDA_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index BANESTA_MOEDA_FK_I');
		CALL exec_sql_dinamico('Tasy','Create Index BANESTA_MOEDA_FK_I on BANCO_ESTABELECIMENTO(CD_MOEDA)');
	end if;	

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'BANESTA_MOEDA_FK';
	
	if (qt_registro_w > 0) then		
		CALL exec_sql_dinamico('Tasy','Alter Table BANCO_ESTABELECIMENTO drop constraint BANESTA_MOEDA_FK');
		CALL exec_sql_dinamico('Tasy','Alter Table BANCO_ESTABELECIMENTO add (Constraint BANESTA_MOEDA_FK Foreign Key (CD_MOEDA) References MOEDA (CD_MOEDA))');
	end	if;		

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


-- OS 1039670
begin
	if (dt_versao_atual_cliente_w <= to_date('23/03/2016', 'dd/mm/yyyy')) then
		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLSREQU_I1';

		if (qt_registro_w > 0) then
			CALL exec_sql_dinamico('Tasy','drop index PLSREQU_I1');
			CALL exec_sql_dinamico('Tasy','Create Index PLSREQU_I1 on PLS_REQUISICAO(NR_SEQ_PRESTADOR,DT_REQUISICAO)');
		end if;
	end if;
exception
when others then
	null;
end;

begin
if (dt_versao_atual_cliente_w < to_date('23/03/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_PRECO_MATERIAL_ATUAL_TOT';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('dgkorz', 'drop trigger PLS_PRECO_MATERIAL_ATUAL_TOT');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('28/03/2016','dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSANCI_PRGGLOS_FK';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('wcbernardino', 'add constraint PLSANCI_PRGGLOS_FK foreign key (NR_SEQ_GLOSA_CONTA_REC) references PLS_REC_GLOSA_GLOSAS (NR_SEQUENCIA)');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then

	CALL exec_sql_dinamico('wcbernardino', ' alter table pls_trib_conta_pagar_log modify ie_tipo_tributacao varchar2(5) ');

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_ITEM_LOTE'
	and	column_name = 'NR_SEQ_TIT_PAG_SOMA';
	
	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_ITEM_LOTE drop column NR_SEQ_TIT_PAG_SOMA');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_ITEM_LOTE'
	and	column_name = 'NR_SEQ_TIT_REC_SOMA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_ITEM_LOTE drop column NR_SEQ_TIT_REC_SOMA');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'PLS_PP_TITULO_PAGAR';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop table PLS_PP_TITULO_PAGAR');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'PLS_PP_TIT_PAG_SOMA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop table PLS_PP_TIT_PAG_SOMA');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'PLS_PP_TITULO_RECEBER';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop table PLS_PP_TITULO_RECEBER');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
if (dt_versao_atual_cliente_w < to_date('29/03/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tables
	where	table_name = 'PLS_PP_TIT_REC_SOMA';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop table PLS_PP_TIT_REC_SOMA');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* sideker - OS 1032812 */

if (dt_versao_atual_cliente_w < to_date('30/03/2016','dd/mm/yyyy')) then	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_MOV_PRODUTO_BENEF'
	and	column_name	= 'CD_USUARIO_PLANO'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table ptu_mov_produto_benef modify cd_usuario_plano null');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PTU_MOV_PRODUTO_BENEF'
	and	column_name	= 'CD_TITULAR_PLANO'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('baca', 'alter table ptu_mov_produto_benef modify cd_titular_plano null');
	end if;		
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin -- wcbernardino
if (dt_versao_atual_cliente_w < to_date('12/04/2016','dd/mm/yyyy')) then	
	
	-- Integridade
	CALL exec_sql_dinamico('wcbernardino', ' ALTER TABLE W_PLS_EIS_CONTAS_MEDICAS DROP CONSTRAINT WPLSECM_ESPMEDI_FK ');
	CALL exec_sql_dinamico('wcbernardino', ' DELETE INTEGRIDADE_ATRIBUTO WHERE NM_ATRIBUTO = ' + chr(39) + 'CD_ESPECIALIDADE' + chr(39) + ' AND NM_TABELA = ' + chr(39) + 'W_PLS_EIS_CONTAS_MEDICAS'+ chr(39));
	CALL exec_sql_dinamico('wcbernardino', ' DELETE INTEGRIDADE_REFERENCIAL WHERE NM_TABELA = ' + chr(39) + 'W_PLS_EIS_CONTAS_MEDICAS' + chr(39) + ' AND NM_INTEGRIDADE_REFERENCIAL = ' + chr(39) + 'WPLSECM_ESPMEDI_FK' + chr(39));
	
	-- Indice
	CALL exec_sql_dinamico('wcbernardino', ' DROP INDEX WPLSECM_ESPMEDI_FK_I ');
	CALL exec_sql_dinamico('wcbernardino', ' DELETE INDICE_ATRIBUTO WHERE NM_ATRIBUTO = ' + chr(39) + 'CD_ESPECIALIDADE' + chr(39) + ' AND NM_TABELA = ' + chr(39) + 'W_PLS_EIS_CONTAS_MEDICAS' + chr(39));
	CALL exec_sql_dinamico('wcbernardino', ' DELETE INDICE WHERE NM_TABELA = ' + chr(39) + 'W_PLS_EIS_CONTAS_MEDICAS' + chr(39) + ' AND NM_INDICE = ' + chr(39) + 'WPLSECM_ESPMEDI_FK_I' + chr(39));
	
	-- Alter tamanho
	CALL exec_sql_dinamico('wcbernardino',' alter table ptu_prestador_endereco modify ds_email varchar2(80) ');		
	CALL exec_sql_dinamico('wcbernardino',' alter table ptu_prestador_endereco modify ds_endereco_web varchar2(80) ');		
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin -- lrpossamai
if (dt_versao_atual_cliente_w < to_date('13/04/2016','dd/mm/yyyy')) then	

	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_index_w
	;
	
	-- Integridade
	CALL exec_sql_dinamico('lrpossamai', ' drop index PLSCPTC_PLSCOMR_FK_I ');
	CALL exec_sql_dinamico('lrpossamai', ' drop index PLSANCO_I6 ');

	CALL exec_sql_dinamico('lrpossamai', ' create index PLSANCO_I6 on PLS_ANALISE_CONTA(DT_ANALISE) tablespace ' || nm_tablespace_index_w);
	CALL exec_sql_dinamico('lrpossamai', ' create index PLSCPTC_PLSCOMR_FK_I on PLS_CONTA_POS_TAXA_CONTAB(NR_SEQ_CONTA, NR_SEQ_CONTA_RESUMO) tablespace ' || nm_tablespace_index_w);
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*wcsilva  - OS 730829 */

begin
if (dt_versao_atual_cliente_w <= to_date('20/04/2016', 'dd/mm/yyyy')) then

	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'HDMIFVP_HDMIDVA_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','Alter Table HDM_INDIC_FT_VACCINE_PR drop constraint HDMIFVP_HDMIDVA_FK');		
	end	if;		
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'HDMIFVP_HDMIDPR_FK_I';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','Create Index HDMIFVP_HDMIDPR_FK_I on HDM_INDIC_FT_VACCINE_PR(NR_SEQ_DIMENSION)');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'HDMIFVP_HDMIDPR_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','Alter Table HDM_INDIC_FT_VACCINE_PR add (Constraint HDMIFVP_HDMIDPR_FK Foreign Key (NR_SEQ_DIMENSION) References HDM_INDIC_DM_PROGRAM (NR_SEQUENCIA))');
	end	if;	

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin -- wcbernardino
if (dt_versao_atual_cliente_w < to_date('25/04/2016','dd/mm/yyyy')) then	

	select	Obter_Tablespace_Index(null)
	into STRICT	nm_tablespace_index_w
	;
	
	-- Integridade
	CALL exec_sql_dinamico('wcbernardino', ' drop index WPLSECM_ESPMEDI_FK_I ');
	CALL exec_sql_dinamico('wcbernardino', ' update indice_atributo set nm_atributo = ' || chr(39) || 'CD_ESPECIALIDADE_MEDICA' || chr(39) || ' where nm_indice = ' || chr(39) || 'WPLSECM_ESPMEDI_FK_I' );
	CALL exec_sql_dinamico('wcbernardino', ' Create Index WPLSECM_ESPMEDI_FK_I on W_PLS_EIS_CONTAS_MEDICAS(CD_ESPECIALIDADE_MEDICA) tablespace ' || nm_tablespace_index_w);
	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;


/* hxafranski 26/04/2016 - Dropar  a trigger PLS_ATEND_EVT_AGENDA_EXT_ALT */

begin
if (dt_versao_atual_cliente_w < to_date('26/04/2016','dd/mm/yyyy')) then	
	CALL exec_sql_dinamico('djavan', 'drop trigger PLS_ATEND_EVT_AGENDA_EXT_ALT');	
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--aaschlote 27/04/2016 - OS 1077779
begin
if (dt_versao_atual_cliente_w < to_date('27/04/2016','dd/mm/yyyy')) then	

	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_CONTA_EXCLUSAO'
	and	data_type	= 'NUMBER'
	and	column_name	= 'NR_PROTOCOLO_PRESTADOR';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table pls_conta_exclusao add NR_PROTOCOLO_PRESTADOR_VAR Varchar2(20) ');
		CALL exec_sql_dinamico('Tasy',' update pls_conta_exclusao set NR_PROTOCOLO_PRESTADOR_VAR = NR_PROTOCOLO_PRESTADOR ');
		CALL exec_sql_dinamico('Tasy',' alter table pls_conta_exclusao drop column NR_PROTOCOLO_PRESTADOR ');
		CALL exec_sql_dinamico('Tasy',' alter table pls_conta_exclusao rename column NR_PROTOCOLO_PRESTADOR_VAR to NR_PROTOCOLO_PRESTADOR ');
	end if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- wcbernardino
begin
if (dt_versao_atual_cliente_w < to_date('06/05/2016','dd/mm/yyyy')) then

	CALL exec_sql_dinamico('wcbernardino', ' update integridade_atributo set nm_atributo = ' || chr(39) || 'CD_ESPECIALIDADE_MEDICA' || chr(39) || ' where nm_integridade_referencial = ' || chr(39) || 'WPLSECM_ESPMEDI_FK' );

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- Lepinski
begin
if (dt_versao_atual_cliente_w < to_date('09/05/2016','dd/mm/yyyy')) then
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PROG_REAJ_DOCUMENTACAO'
	and	column_name	= 'NR_SEQ_LOTE'
	and	nullable	= 'N';

	if (qt_registro_w	> 0) then
		CALL exec_sql_dinamico('rlepinski', 'alter table PLS_PROG_REAJ_DOCUMENTACAO modify NR_SEQ_LOTE null');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- wcbernardino
begin
if (dt_versao_atual_cliente_w < to_date('16/05/2016','dd/mm/yyyy')) then

	CALL exec_sql_dinamico('wcbernardino', ' Create Index PLSPAGP_I2 on PLS_PAGAMENTO_PRESTADOR(NR_SEQ_LOTE, NR_SEQ_PRESTADOR, NVL(IE_CANCELAMENTO,'|| chr(39) ||'X'|| chr(39) ||')) ');

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- wcbernardino
begin
if (dt_versao_atual_cliente_w < to_date('19/05/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PP_ITEM_LOTE_ORIGEM'
	and	column_name	= 'VL_ITEM';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', ' alter table PLS_PP_ITEM_LOTE_ORIGEM drop column VL_ITEM ');
	end if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* dlehmkuhl 20/05/2016 */

if (dt_versao_atual_cliente_w < to_date('20/05/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPIA_PPILOTE_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tasy', 'drop index PLSPPIA_PPILOTE_FK_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl - apagar a coluna NR_SEQ_VL_DISTR_TRIB da tabela PLS_PP_BASE_ACUM_TRIB
begin
if (dt_versao_atual_cliente_w < to_date('25/05/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PP_BASE_ACUM_TRIB'
	and	column_name	= 'NR_SEQ_VL_DISTR_TRIB';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_DLDTRIB_FK');
		CALL exec_sql_dinamico('Tasy', 'drop index PLSPPBA_DLDTRIB_FK_I');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop column nr_seq_vl_distr_trib');
	end if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl - apagar a coluna NR_SEQ_VL_PAG_PROT da tabela PLS_PP_BASE_ACUM_TRIB
begin
if (dt_versao_atual_cliente_w < to_date('25/05/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PP_BASE_ACUM_TRIB'
	and	column_name	= 'NR_SEQ_VL_PAG_PROT';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_PLSLPVC_FK');
		CALL exec_sql_dinamico('Tasy', 'drop index PLSPPBA_PLSLPVC_FK_I');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop column NR_SEQ_VL_PAG_PROT');
	end if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
-- dlehmkuhl 02/06/2016
if (dt_versao_atual_cliente_w < to_date('02/06/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBT_PPVTPES_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('tasy', 'drop index PLSPPBT_PPVTPES_FK_I');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl - apagar a coluna NR_SEQ_ITEM_LOTE da tabela PLS_PP_BASE_ACUM_TRIB
begin
if (dt_versao_atual_cliente_w < to_date('02/06/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PP_BASE_ACUM_TRIB'
	and	column_name	= 'NR_SEQ_ITEM_LOTE';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_PPILOTE_FK');
		CALL exec_sql_dinamico('Tasy', 'drop index PLSPPBA_PPILOTE_FK_I');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop column NR_SEQ_ITEM_LOTE');
	end if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

-- dlehmkuhl - apagar a coluna NR_SEQ_PP_LOTE da tabela PLS_PP_BASE_ACUM_TRIB
begin
if (dt_versao_atual_cliente_w < to_date('02/06/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name 	= 'PLS_PP_BASE_ACUM_TRIB'
	and	column_name	= 'NR_SEQ_PP_LOTE';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_PPPLOTE_FK');
		CALL exec_sql_dinamico('Tasy', 'drop index PLSPPBA_PPPLOTE_FK_I');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_BASE_ACUM_TRIB drop column NR_SEQ_PP_LOTE');
	end if;

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

begin
/* Francisco - 27/05/2016 -  Correção ref OS 993989, cuja documentação do TASY_PREPAPAR_BASE não gerou parâmetros devido à BDE 
Foi documentado novamente (com parâmetros) no dia 19/01/206, por isso essa data na consistência */
if (dt_versao_atual_cliente_w < to_date('19/01/2016','dd/mm/yyyy')) then	
	qt_registro_w := obter_valor_dinamico('select count(*) from OBJETO_SISTEMA_PARAM where nr_sequencia in (225521,225522)', qt_registro_w);
	
	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('Tasy','delete from OBJETO_SISTEMA_PARAM where nr_sequencia in(225521,225522)');
		
		CALL exec_sql_dinamico('Tasy','delete from tasy_versao.OBJETO_SISTEMA_PARAM where nr_sequencia in(225521,225522)');	

	end if;

	CALL exec_sql_dinamico('Tasy','insert into OBJETO_SISTEMA_PARAM (NM_PARAMETRO,VL_DEFAULT,IE_TIPO_PARAMETRO,NR_SEQ_APRESENTACAO,IE_TIPO_DADO_PARAM,NR_SEQUENCIA,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,DT_ATUALIZACAO,NM_USUARIO,NR_SEQ_OBJETO) 
	 values (''NM_USUARIO_P'','''',''IN'',1,''VARCHAR2'',232448,TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',2162)');


	CALL exec_sql_dinamico('Tasy','insert into OBJETO_SISTEMA_PARAM (NM_PARAMETRO,VL_DEFAULT,IE_TIPO_PARAMETRO,NR_SEQ_APRESENTACAO,IE_TIPO_DADO_PARAM,NR_SEQUENCIA,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,DT_ATUALIZACAO,NM_USUARIO,NR_SEQ_OBJETO) 
	 values (''NM_OWNER_ORIGEM_P'','''',''IN'',2,''VARCHAR2'',232449,TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',2162)');
	
	qt_registro_w := obter_valor_dinamico('select count(*) from tasy_versao.OBJETO_SISTEMA_PARAM where nr_sequencia = 232448', qt_registro_w);

	if (qt_registro_w <= 0) then

		CALL exec_sql_dinamico('Tasy','insert into tasy_versao.OBJETO_SISTEMA_PARAM (NM_PARAMETRO,VL_DEFAULT,IE_TIPO_PARAMETRO,NR_SEQ_APRESENTACAO,IE_TIPO_DADO_PARAM,NR_SEQUENCIA,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,DT_ATUALIZACAO,NM_USUARIO,NR_SEQ_OBJETO) 
			values (''NM_USUARIO_P'','''',''IN'',1,''VARCHAR2'',232448,TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',2162)');

	end if;

	
	qt_registro_w := obter_valor_dinamico('select count(*) from tasy_versao.OBJETO_SISTEMA_PARAM where nr_sequencia = 232449', qt_registro_w);

	if (qt_registro_w <= 0) then

		CALL exec_sql_dinamico('Tasy','insert into tasy_versao.OBJETO_SISTEMA_PARAM (NM_PARAMETRO,VL_DEFAULT,IE_TIPO_PARAMETRO,NR_SEQ_APRESENTACAO,IE_TIPO_DADO_PARAM,NR_SEQUENCIA,DT_ATUALIZACAO_NREC,NM_USUARIO_NREC,DT_ATUALIZACAO,NM_USUARIO,NR_SEQ_OBJETO) 
		values (''NM_OWNER_ORIGEM_P'','''',''IN'',2,''VARCHAR2'',232449,TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',TO_DATE(''19/01/2016 15:56:07'',''dd/mm/yyyy hh24:mi:ss''),''jrfusinato'',2162)');
	
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*Lepinski -Ajustar o tamanho do campo*/

begin
if (dt_versao_atual_cliente_w < to_date('03/06/2016','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_REGRA_DEVOLUCAO_MENS'
	and	column_name	= 'IE_TIPO_PAGADOR'
	and	data_length	= 2;

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('lepinski', 'alter table PLS_REGRA_DEVOLUCAO_MENS modify IE_TIPO_PAGADOR varchar2(2) ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/*Possamai*/

begin
if (dt_versao_atual_cliente_w < to_date('03/06/2016','dd/mm/yyyy')) then
	select	count(*)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PACOTE_TIPO_ACOMODACAO'
	and	column_name	= 'IE_ACOMODACAO';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('tasy', 'alter table PLS_PACOTE_TIPO_ACOMODACAO add IE_ACOMODACAO varchar2(1) ');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--dlehmkuhl 08/06/2016 - apagar o campo NR_SEQ_ITEM_BASE_ATUAL da tabela PLS_PP_LR_BASE_TRIB
begin
if (dt_versao_atual_cliente_w < to_date('08/06/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PP_LR_BASE_TRIB'
	and	column_name	= 'NR_SEQ_ITEM_BASE_ATUAL';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_LR_BASE_TRIB drop constraint PPLBTRI_PPBATRI_FK');
		CALL exec_sql_dinamico('Tasy', 'drop index PPLBTRI_PPBATRI_FK_I');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_LR_BASE_TRIB drop column NR_SEQ_ITEM_BASE_ATUAL');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--dlehmkuhl 09/06/2016 - apagar o campo NR_SEQ_ITEM_BASE_ATUAL da tabela PLS_PP_LR_TRIB_PESSOA
begin
if (dt_versao_atual_cliente_w < to_date('09/06/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name	= 'NR_SEQ_REGRA_IRPF';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_LR_TRIB_PESSOA drop constraint PPLRTPE_REGCAIR_FK');
		CALL exec_sql_dinamico('Tasy', 'drop index PPLRTPE_REGCAIR_FK_I');
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_LR_TRIB_PESSOA drop column NR_SEQ_REGRA_IRPF');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name	= 'QT_DEPENDENTE';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_LR_TRIB_PESSOA drop column QT_DEPENDENTE');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name	= 'VL_DESC_DEPENDENTE';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_LR_TRIB_PESSOA drop column VL_DESC_DEPENDENTE');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name	= 'VL_REDUCAO';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_LR_TRIB_PESSOA drop column VL_REDUCAO');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--jlsilva 16/06/2016 - apagar o campo VL_ITEM da tabela PLS_PP_PRESTADOR
begin
if (dt_versao_atual_cliente_w < to_date('16/06/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name	= 'PLS_PP_PRESTADOR'
	and	column_name	= 'VL_ITEM';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy', 'alter table PLS_PP_PRESTADOR drop column VL_ITEM');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--jlsilva 20/06/2016 - apagar o campo DT_GERACAO_TITULO da tabela PLS_PP_PRESTADOR
begin
if (dt_versao_atual_cliente_w < to_date('20/06/2016','dd/mm/yyyy')) then

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_PRESTADOR'
	and	column_name = 'DT_GERACAO_TITULO';	

	if (qt_registro_w > 0) then	
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_PRESTADOR drop column DT_GERACAO_TITULO');
	end if;
end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

--Alterado Cache da sequence da tabela PLS_RESULTADO e PLS_RESULTADO_VALORES
if (dt_versao_atual_cliente_w < to_date('29/06/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'PLS_RESULTADO_SEQ';
	
	if (qt_registro_w > 0) then
	
		CALL exec_sql_dinamico('dutpadel',
		'begin pls_posicionar_sequence_cache(''PLS_RESULTADO'', ''NR_SEQUENCIA'', ''R'',  50); end;');
	end if;
		
	select	count(1)
	into STRICT	qt_registro_w
	from	user_sequences
	where	sequence_name = 'PLS_SEGURADO_VALORES_SEQ';

	if (qt_registro_w > 0) then

		CALL exec_sql_dinamico('dutpadel',
		'begin pls_posicionar_sequence_cache(''PLS_SEGURADO_VALORES'', ''NR_SEQUENCIA'', ''R'',  50); end;');
	end if;
	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--Alterado campo NR_CONTRATO da tabela PLS_REGRA_RESC_CONTRATO para não obrigatório 
if (dt_versao_atual_cliente_w < to_date('04/07/2016','dd/mm/yyyy')) then
begin
	-- jlsilva alterei para fazer o select da user_tab_columns, o dicionário pode já ter sido alterado pela atualização de versão
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REGRA_RESC_CONTRATO'
	and	column_name = 'NR_CONTRATO'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','update TABELA_ATRIBUTO set IE_OBRIGATORIO = ''N'' where NM_TABELA = ''PLS_REGRA_RESC_CONTRATO'' and NM_ATRIBUTO = ''NR_CONTRATO'' ');
	end if;
	
	CALL exec_sql_dinamico('Tasy','alter table PLS_REGRA_RESC_CONTRATO modify( NR_CONTRATO NUMBER(10) NULL) ');
	
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

begin
-- wcbernardino 06/07/2016
if (dt_versao_atual_cliente_w < to_date('06/07/2016','dd/mm/yyyy')) then

	CALL exec_sql_dinamico('tasy', 'alter table PLS_END_WEBSERVICE_A510 modify DS_CAMINHO_CERT_DIGITAL varchar2(255)');
	CALL exec_sql_dinamico('tasy', 'alter table PLS_END_WEBSERVICE_A510 modify DS_SENHA_CERT_DIGITAL varchar2(255)');

end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;

/* jlsilva - 07/07/2016 - OS1150595 - Tirar a obrigatoriedade dos campos.
Alterados os campos e tabelas abaixo listadas:
	PLS_PP_LR_TRIB_PESSOA IE_PERIODICIDADE 
	PLS_PP_LR_TRIB_PESSOA IE_GERAR_TITULO_PAGAR 
	PLS_PP_LR_TRIB_PESSOA IE_VENCIMENTO 
	PLS_PP_LR_TRIB_PESSOA CD_PESSOA_FISICA
	PLS_PP_ITEM_LOTE CD_CONTA_FINANC 
	PLS_PP_VALOR_TRIB_PESSOA CD_VARIACAO 
	PLS_PP_VALOR_TRIB_PESSOA IE_PERIODICIDADE 
	PLS_PP_VALOR_TRIB_PESSOA IE_GERAR_TITULO_PAGAR 
	PLS_PP_VALOR_TRIB_PESSOA IE_VENCIMENTO 
	PLS_PP_VALOR_TRIB_PESSOA CD_PESSOA_FISICA
	PLS_FRANQ_PAG_PREST_PROD NR_SEQ_PAG_PREST
*/
if (dt_versao_atual_cliente_w < to_date('07/07/2016','dd/mm/yyyy')) then
begin
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name = 'IE_PERIODICIDADE'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_TRIB_PESSOA modify(IE_PERIODICIDADE NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name = 'IE_GERAR_TITULO_PAGAR'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_TRIB_PESSOA modify(IE_GERAR_TITULO_PAGAR NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name = 'IE_VENCIMENTO'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_TRIB_PESSOA modify(IE_VENCIMENTO NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_LR_TRIB_PESSOA'
	and	column_name = 'CD_PESSOA_FISICA'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_TRIB_PESSOA modify(CD_PESSOA_FISICA NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_ITEM_LOTE'
	and	column_name = 'CD_CONTA_FINANC'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_ITEM_LOTE modify(CD_CONTA_FINANC NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_VALOR_TRIB_PESSOA'
	and	column_name = 'CD_VARIACAO'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_VALOR_TRIB_PESSOA modify(CD_VARIACAO NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_VALOR_TRIB_PESSOA'
	and	column_name = 'IE_PERIODICIDADE'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_VALOR_TRIB_PESSOA modify(IE_PERIODICIDADE NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_VALOR_TRIB_PESSOA'
	and	column_name = 'IE_GERAR_TITULO_PAGAR'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_VALOR_TRIB_PESSOA modify(IE_GERAR_TITULO_PAGAR NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_VALOR_TRIB_PESSOA'
	and	column_name = 'IE_VENCIMENTO'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_VALOR_TRIB_PESSOA modify(IE_VENCIMENTO NULL) ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PP_VALOR_TRIB_PESSOA'
	and	column_name = 'CD_PESSOA_FISICA'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_VALOR_TRIB_PESSOA modify(CD_PESSOA_FISICA NULL) ');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_FRANQ_PAG_PREST_PROD'
	and	column_name = 'NR_SEQ_PAG_PREST'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_FRANQ_PAG_PREST_PROD modify(NR_SEQ_PAG_PREST NULL) ');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- jlsilva' 14/07/2016
if (dt_versao_atual_cliente_w < to_date('14/07/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_NFVTRIB_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_NFVTRIB_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_NOTFITR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_NOTFITR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_PESFISTR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_PESFISTR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_NOTFISC_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_NOTFISC_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_PESFISTR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PPLBTRI_PESFISTR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_NOTFISC_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_BASE_TRIB drop constraint PPLBTRI_NOTFISC_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_NOTFITR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_BASE_TRIB drop constraint PPLBTRI_NOTFITR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_NFVTRIB_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_BASE_TRIB drop constraint PPLBTRI_NFVTRIB_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_REPTEVT_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_REPTEVT_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_NFVTRIB_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_NFVTRIB_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_NOTFITR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_NOTFITR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_PESFISTR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_PESFISTR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_NOTFISC_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_NOTFISC_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_NOTFISC_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_NOTFISC_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_NOTFITR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_NOTFITR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_NFVTRIB_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_NFVTRIB_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_PESFISTR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_PESFISTR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_REPTEVT_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_REPTEVT_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_I5';

	if (qt_registro_w = 0) then

		select	obter_tablespace_index(null)
		into STRICT	nm_tablespace_index_w
		;
		
		CALL exec_sql_dinamico('Tasy','Create Index  PLSPPBA_I5 on PLS_PP_BASE_ACUM_TRIB(NR_SEQ_VL_REPASSE) tablespace ' || nm_tablespace_index_w);
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- jlsilva 22/07/2016 recriar o indice PPPLOTE_I1 com o campo IE_EXIBE_PORTAL
if (dt_versao_atual_cliente_w < to_date('22/07/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	all_ind_columns
	where	index_name = 'PPPLOTE_I1' 
	and	column_name = 'IE_EXIBE_PORTAL';

	if (qt_registro_w = 0) then

		select	obter_tablespace_index(null)
		into STRICT	nm_tablespace_index_w
		;

		select	count(1)
		into STRICT	qt_registro_w
		from	all_indexes
		where	index_name = 'PPPLOTE_I1';

		-- se o indice já existe porém sem o campo IE_EXIBE_PORTAL então precisa ser dropado e recriado
		if (qt_registro_w > 0) then

			CALL exec_sql_dinamico('Tasy','drop index PPPLOTE_I1');
		end if;
		
		CALL exec_sql_dinamico('Tasy','Create Index  PPPLOTE_I1 on PLS_PP_LOTE(DT_MES_COMPETENCIA, IE_EXIBE_PORTAL) tablespace ' || nm_tablespace_index_w);
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- lepinski 25/07/2016
if (dt_versao_atual_cliente_w < to_date('25/07/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_DOCUMENTO_PF'
	and	column_name = 'NR_SEQ_TIPO_DOCUMENTO'
	and	nullable = 'Y';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_DOCUMENTO_PF modify(NR_SEQ_TIPO_DOCUMENTO NULL) ');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--lepinski
if (dt_versao_atual_cliente_w < to_date('27/07/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PROG_REAJ_DOCUMENTACAO'
	and	column_name = 'DS_DOCUMENTACAO'
	and	data_type = 'LONG';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PROG_REAJ_DOCUMENTACAO add DS_DOCUMENTACAO_LONG long ');
		CALL exec_sql_dinamico('Tasy','update PLS_PROG_REAJ_DOCUMENTACAO set DS_DOCUMENTACAO_LONG = DS_DOCUMENTACAO ');
		commit;
		CALL exec_sql_dinamico('Tasy','alter table PLS_PROG_REAJ_DOCUMENTACAO drop column DS_DOCUMENTACAO ');
		CALL exec_sql_dinamico('Tasy','alter table PLS_PROG_REAJ_DOCUMENTACAO rename column DS_DOCUMENTACAO_LONG to DS_DOCUMENTACAO ');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

if (dt_versao_atual_cliente_w < to_date('28/07/2016','dd/mm/yyyy')) then
	CALL exec_sql_dinamico('Tasy','drop table USER_LOCALES');
	CALL exec_sql_dinamico('Tasy', 'delete from TABELA_SISTEMA where nm_tabela = ' || chr(39) || 'USER_LOCALES' || chr(39));	
	CALL exec_sql_dinamico('Tasy', 'CREATE INDEX ESTLOCA_ESTABEL_FK_I ON ESTABLISHMENT_LOCALE(CD_ESTABELECIMENTO)');
end if;

if (dt_versao_atual_cliente_w < to_date('14/07/2016','dd/mm/yyyy')) then
begin
	
	CALL exec_sql_dinamico('Tasy','update  HL7_PROJETO set NR_SEQ_SISTEMA = null where NR_SEQ_SISTEMA = 7 ');

exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--wcbernardino - 12/08/2016
if (dt_versao_atual_cliente_w < to_date('12/08/2016','dd/mm/yyyy')) then
begin
	CALL exec_sql_dinamico('Tasy',' alter table w_pls_guia_medico modify sg_estado varchar2(15) ');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--jlsilva - 12/08/2016 - a PLS_OBTER_SE_COBRA_CO_FILME era uma function e foi alterada para procedure, como na atualização de versão

-- não existe tratamento para identificar esta alteração e dropar a function antes de criar a procedure, é necessário este tratamento aqui
if (dt_versao_atual_cliente_w < to_date('12/08/2016','dd/mm/yyyy')) then
begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_objects
	where	object_name = 'PLS_OBTER_SE_COBRA_CO_FILME'
	and	object_type = 'FUNCTION';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' drop function PLS_OBTER_SE_COBRA_CO_FILME '
);
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

if (dt_versao_atual_cliente_w < to_date('16/08/2016','dd/mm/yyyy')) then
begin
	CALL exec_sql_dinamico('Tasy',' update funcao set ie_versao_uso = ''J'' where cd_funcao = 914 ');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- htneto
if (dt_versao_atual_cliente_w < to_date('18/08/2016','dd/mm/yyyy')) then

  begin
    select count(1) into STRICT qt_registro_w from FUNCAO_PARAMETRO where CD_FUNCAO = 0 AND NR_SEQUENCIA = 3;

    if (qt_registro_w > 0) then
      CALL exec_sql_dinamico('htneto', 'CREATE TABLE BACKUP_F0P3_FP AS SELECT * FROM FUNCAO_PARAMETRO WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
      CALL exec_sql_dinamico('htneto', 'UPDATE FUNCAO_PARAMETRO SET VL_PARAMETRO_PADRAO = ''S'', VL_PARAMETRO = NULL WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
    end if;

  exception
    when others then
      CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'htneto');
  end;

  begin
    select count(1) into STRICT qt_registro_w from FUNCAO_PARAM_ESTAB where CD_FUNCAO = 0 AND NR_SEQUENCIA = 3;

    if (qt_registro_w > 0) then
      CALL exec_sql_dinamico('htneto', 'CREATE TABLE BACKUP_F0P3_FPE AS SELECT * FROM FUNCAO_PARAM_ESTAB WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
      CALL exec_sql_dinamico('htneto', 'DELETE FROM FUNCAO_PARAM_ESTAB WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
    end if;

  exception
    when others then
      CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'htneto');
  end;

  begin
    select count(1) into STRICT qt_registro_w from FUNCAO_PARAM_PERFIL where CD_FUNCAO = 0 AND NR_SEQUENCIA = 3;

    if (qt_registro_w > 0) then
      CALL exec_sql_dinamico('htneto', 'CREATE TABLE BACKUP_F0P3_FPP AS SELECT * FROM FUNCAO_PARAM_PERFIL WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
      CALL exec_sql_dinamico('htneto', 'DELETE FROM FUNCAO_PARAM_PERFIL WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
    end if;

  exception
    when others then
      CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'htneto');
  end;

  begin
    select count(1) into STRICT qt_registro_w from FUNCAO_PARAM_USUARIO where CD_FUNCAO = 0 AND NR_SEQUENCIA = 3;

    if (qt_registro_w > 0) then
      CALL exec_sql_dinamico('htneto', 'CREATE TABLE BACKUP_F0P3_FPU AS SELECT * FROM FUNCAO_PARAM_USUARIO WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
      CALL exec_sql_dinamico('htneto', 'DELETE FROM FUNCAO_PARAM_USUARIO WHERE CD_FUNCAO = 0 AND NR_SEQUENCIA = 3');
    end if;

  exception
    when others then
      CALL gravar_log_atualizacao_erro(nr_sequencia_w, 'TASY_PREPARAR_BASE', substr(sqlerrm(SQLSTATE), 1, 1800), 'htneto');
  end;

end if;

-- jlsilva - colocar o campo NR_SEQ_LOTE_PGTO da tabela PLS_TRIBUTO_LOG como not null
if (dt_versao_atual_cliente_w < to_date('26/08/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_TRIBUTO_LOG'
	and	column_name = 'NR_SEQ_LOTE_PGTO'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_TRIBUTO_LOG modify(NR_SEQ_LOTE_PGTO NULL) ');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- lepinski - alterar o campo DS_DOCUMENTACAO da tabela PLS_PROG_REAJ_DOCUMENTACAO para long
if (dt_versao_atual_cliente_w < to_date('30/08/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PROG_REAJ_DOCUMENTACAO'
	and	column_name = 'DS_DOCUMENTACAO'
	and	data_type = 'LONG';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROG_REAJ_DOCUMENTACAO add DS_DOCUMENTACAO_LONG long ');
		CALL exec_sql_dinamico('Tasy',' update PLS_PROG_REAJ_DOCUMENTACAO set DS_DOCUMENTACAO_LONG = DS_DOCUMENTACAO ');
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROG_REAJ_DOCUMENTACAO drop column DS_DOCUMENTACAO ');
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROG_REAJ_DOCUMENTACAO rename column DS_DOCUMENTACAO_LONG to DS_DOCUMENTACAO ');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- lepinski - alterar o tamanho do campo IE_DIGITO_CONTA da tabela PLS_PROPOSTA_PAGADOR
if (dt_versao_atual_cliente_w < to_date('31/08/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_PROPOSTA_PAGADOR'
	and	column_name = 'IE_DIGITO_CONTA'
	and	data_length = 1;
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROPOSTA_PAGADOR add IE_DIGITO_CONTA_NOVO varchar2(1) ');
		CALL exec_sql_dinamico('Tasy',' update PLS_PROPOSTA_PAGADOR set IE_DIGITO_CONTA_NOVO = substr(IE_DIGITO_CONTA,1,1) ');
		commit;
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROPOSTA_PAGADOR drop column IE_DIGITO_CONTA ');
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROPOSTA_PAGADOR rename column IE_DIGITO_CONTA_NOVO to IE_DIGITO_CONTA ');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- jlsilva - existiam várias inconsistências na base corp e na base wheb, muitas delas referente ao novo pagamento de produção médica

-- inclui todos os tratamentos necessários para estas inconsistências apontadas no script abaixo
if (dt_versao_atual_cliente_w < to_date('28/08/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_NFVTRIB_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_NFVTRIB_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_NOTFITR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_NOTFITR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_PESFISTR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_PESFISTR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_NOTFISC_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_NOTFISC_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_PESFISTR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PPLBTRI_PESFISTR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_NOTFISC_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_BASE_TRIB drop constraint PPLBTRI_NOTFISC_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_NOTFITR_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_BASE_TRIB drop constraint PPLBTRI_NOTFITR_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PPLBTRI_NFVTRIB_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_LR_BASE_TRIB drop constraint PPLBTRI_NFVTRIB_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPPBA_REPTEVT_FK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_PP_BASE_ACUM_TRIB drop constraint PLSPPBA_REPTEVT_FK ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_NFVTRIB_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_NFVTRIB_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_NOTFITR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_NOTFITR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_PESFISTR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_PESFISTR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_NOTFISC_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_NOTFISC_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_NOTFISC_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_NOTFISC_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_NOTFITR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_NOTFITR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_NFVTRIB_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_NFVTRIB_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PPLBTRI_PESFISTR_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPLBTRI_PESFISTR_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_REPTEVT_FK_I';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSPPBA_REPTEVT_FK_I ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSPPBA_I5';

	select	obter_tablespace_index(null)
	into STRICT	nm_tablespace_index_w
	;
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy','Create Index  PLSPPBA_I5 on PLS_PP_BASE_ACUM_TRIB(NR_SEQ_VL_REPASSE) tablespace ' || nm_tablespace_index_w);
	end if;

	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPBA_I1';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','create index PLSPPBA_I1 on PLS_PP_BASE_ACUM_TRIB (NR_SEQ_VL_OUTRA_FONTE, DT_COMPETENCIA) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPBA_I2';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','create index PLSPPBA_I2 on PLS_PP_BASE_ACUM_TRIB (DT_COMPETENCIA, CD_PESSOA_FISICA, IE_TIPO_TRIBUTO, NR_SEQ_TIPO_PRESTADOR, IE_TIPO_CONTRATACAO) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPBA_I3';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','create index PLSPPBA_I3 on PLS_PP_BASE_ACUM_TRIB (NR_SEQ_VL_NF_TRIB) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPBA_I4';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','create index PLSPPBA_I4 on PLS_PP_BASE_ACUM_TRIB (CD_TRIBUTO_NF_VENC_TRIB, DT_VENCIMENTO_NF_VENC_TRIB, NR_SEQ_NF_VENC_TRIB) tablespace ' || nm_tablespace_index_w);
	end if;

	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPBA_I5';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','create index PLSPPBA_I5 on PLS_PP_BASE_ACUM_TRIB (NR_SEQ_VL_REPASSE) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPBA_I6';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy','create index PLSPPBA_I6 on PLS_PP_BASE_ACUM_TRIB (NR_SEQ_NOTA_FISCAL) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_CONTA_REC_RESUMO_ITEM'
	and	constraint_name = 'PLSRESIT_PPPLOTE_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_REC_RESUMO_ITEM add ( constraint PLSRESIT_PPPLOTE_FK Foreign Key (NR_SEQ_PP_LOTE) References PLS_PP_LOTE(NR_SEQUENCIA)) ');
	end if;

	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PP_BA_ACU_TRIB_PESS'
	and	constraint_name = 'PLSPPBT_PPVTPES_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PP_BA_ACU_TRIB_PESS add ( constraint PLSPPBT_PPVTPES_FK Foreign Key (NR_SEQ_TRIB_PESSOA) References PLS_PP_VALOR_TRIB_PESSOA(NR_SEQUENCIA)) ');
	end if;

	-- verifica o indice que está sendo utilizado pela PK
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PP_ITEM_APROPRIACAO'
	and	constraint_name = 'PLSPPIA_PK'
	and	index_name = 'PLSPPIA_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PP_ITEM_APROPRIACAO modify primary key using index PLSPPIA_PK ');
	end if;

	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PPPLPRO_PLSPEPA_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PPPLPRO_PLSPEPA_FK_I ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PP_ITEM_APROPRIACAO'
	and	constraint_name = 'PPPLPRO_PLSPEPA_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PP_ITEM_APROPRIACAO drop constraint PPPLPRO_PLSPEPA_FK ');
	end if;

	delete from indice_atributo
	where nm_indice = 'PPPLPRO_PLSPEPA_FK_I';

	delete from indice
	where	nm_indice = 'PPPLPRO_PLSPEPA_FK_I';

	delete from integridade_atributo
	where	nm_tabela = 'PLS_PP_LANC_PROGRAMADO'
	and	nm_integridade_referencial = 'PPPLPRO_PLSPEPA_FK';
	
	delete from integridade_referencial
	where	nm_tabela = 'PLS_PP_LANC_PROGRAMADO'
	and	nm_integridade_referencial = 'PPPLPRO_PLSPEPA_FK';
	
	commit;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PP_RP_APROP_SELECAO'
	and	constraint_name = 'PLSPPRPA_PLSPPIA_FK';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PP_RP_APROP_SELECAO drop constraint PLSPPRPA_PLSPPIA_FK ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PP_RP_CTA_FILTRO'
	and	constraint_name = 'PPRPFIL_PPPLOTE_FK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PP_RP_CTA_FILTRO add ( constraint PPRPFIL_PPPLOTE_FK Foreign Key (NR_SEQ_LOTE) References PLS_PP_LOTE(NR_SEQUENCIA)) ');
	end if;

	-- verifica se a tabela está como temporária, caso não esteja vai dropar e recriar tudo relacionada a mesma
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_tables
	where	table_name = 'PLS_PP_RP_APROP_SELECAO'
	and	temporary = 'N';

	if (qt_registro_w > 0) then
	
		CALL exec_sql_dinamico('Tasy',' truncate table PLS_PP_RP_APROP_SELECAO ');
		
		CALL exec_sql_dinamico('Tasy',' Alter Table PLS_PP_RP_APROP_SELECAO Drop Constraint PLSPPRPA_PK ');
				
		CALL exec_sql_dinamico('Tasy',' Drop Sequence PLS_PP_RP_APROP_SELECAO_SEQ ');
		
		CALL exec_sql_dinamico('Tasy',' Drop Index PLSPPRPA_PK ');
		
		CALL exec_sql_dinamico('Tasy',' Drop Index PLSPPRPA_PLSPPIA_FK_I ');
		
		CALL exec_sql_dinamico('Tasy',' Drop Index PLSPPRPA_I1 ');
		
		CALL exec_sql_dinamico('Tasy',' Drop Index PLSPPRPA_I2 ');
		
		CALL exec_sql_dinamico('Tasy',' Drop Index PLSPPRPA_I3 ');
		
		CALL exec_sql_dinamico('Tasy',' Drop Index PLSPPRPA_I4 ');
		
		CALL exec_sql_dinamico('Tasy',' Alter Table PLS_PP_RP_APROP_SELECAO drop constraint PLSPPRPA_PLSPPIA_FK ');
		
		CALL exec_sql_dinamico('Tasy',' Drop Table PLS_PP_RP_APROP_SELECAO ');
		
		CALL exec_sql_dinamico('Tasy',' Create GLOBAL TEMPORARY Table PLS_PP_RP_APROP_SELECAO( ' ||
						'  NR_SEQUENCIA NUMBER(10,0)     not null  , ' ||
						'  IE_EXCECAO VARCHAR2(0001)     not null  , ' ||
						'  IE_VALIDO VARCHAR2(0001)     not null  , ' ||
						'  IE_VALIDO_TEMP VARCHAR2(0001)     not null  , ' ||
						'  NR_ID_TRANSACAO NUMBER(10,0)     not null  , ' ||
						'  NR_SEQ_EVENTO NUMBER(10,0)     not null  , ' ||
						'  NR_SEQ_FILTRO NUMBER(10,0)     not null  , ' ||
						'  NR_SEQ_PRESTADOR NUMBER(10,0)     not null  , ' ||
						'  NR_SEQ_PP_IT_APROP NUMBER(10,0) ' ||
						') ON COMMIT PRESERVE ROWS');
		
		CALL exec_sql_dinamico('Tasy',' Alter Table PLS_PP_RP_APROP_SELECAO add ( Constraint PLSPPRPA_PK Primary Key (NR_SEQUENCIA)) ');
		
		CALL exec_sql_dinamico('Tasy',' create index PLSPPRPA_PK on PLS_PP_RP_APROP_SELECAO (NR_SEQUENCIA)');
		
		CALL exec_sql_dinamico('Tasy',' Create Sequence PLS_PP_RP_APROP_SELECAO_SEQ Increment by 1 Start With 1 MaxValue 9999999999 Cycle  NoCache ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPRPA_PLSPPIA_FK_I';

	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy',' drop index PLSPPRPA_PLSPPIA_FK_I ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPRPA_I1';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPPRPA_I1 on PLS_PP_RP_APROP_SELECAO ( NR_ID_TRANSACAO, IE_EXCECAO, IE_VALIDO_TEMP) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPRPA_I2';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPPRPA_I2 on PLS_PP_RP_APROP_SELECAO ( NR_ID_TRANSACAO, NR_SEQ_FILTRO, IE_VALIDO) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPRPA_I3';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPPRPA_I3 on PLS_PP_RP_APROP_SELECAO ( NR_ID_TRANSACAO, NR_SEQ_FILTRO, IE_VALIDO_TEMP) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPRPA_I4';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPPRPA_I4 on PLS_PP_RP_APROP_SELECAO ( NR_ID_TRANSACAO, IE_VALIDO) ');
	end if;

	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPRPA_I5';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPPRPA_I5 on PLS_PP_RP_APROP_SELECAO ( NR_SEQ_PP_IT_APROP ) ');
	end if;

	delete from integridade_atributo
	where nm_integridade_referencial = 'PLSPPRPA_PLSPPIA_FK';
	
	delete from integridade_referencial
	where nm_integridade_referencial = 'PLSPPRPA_PLSPPIA_FK';
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	indice
	where 	nm_indice = 'PLSPPRPA_I5';

	if (qt_registro_w = 0) then
		insert into INDICE(NM_INDICE,DS_INDICE,IE_TIPO,IE_CRIAR_ALTERAR,IE_SITUACAO,DT_CRIACAO,IE_IGNORADO_CLIENTE,IE_CLASSIFICACAO,DS_MENSAGEM,NM_TABELA,DT_ATUALIZACAO,NM_USUARIO) 
		values ('PLSPPRPA_I5','','I','I','A',TO_DATE('31/08/2016 14:00:49','dd/mm/yyyy hh24:mi:ss'),'','IS','','PLS_PP_RP_APROP_SELECAO',TO_DATE('31/08/2016 14:00:56','dd/mm/yyyy hh24:mi:ss'),'wcbernardino');

		insert into INDICE_ATRIBUTO(NR_SEQUENCIA,NM_ATRIBUTO,DS_INDICE_FUNCTION,NM_TABELA,NM_INDICE,DT_ATUALIZACAO,NM_USUARIO)
		values (1,'NR_SEQ_PP_IT_APROP','','PLS_PP_RP_APROP_SELECAO','PLSPPRPA_I5',TO_DATE('31/08/2016 14:01:11','dd/mm/yyyy hh24:mi:ss'),'wcbernardino');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	integridade_atributo
	where	nm_integridade_referencial = 'PLSDIMA_CENCUST_FK3'
	and	nm_tabela = 'PLS_DISCUSSAO_MAT'
	and	nm_atributo = 'CD_CENTRO_CUSTO';

	if (qt_registro_w > 0) then
	
		delete from integridade_atributo
		where	nm_integridade_referencial = 'PLSDIMA_CENCUST_FK3'
		and	nm_tabela = 'PLS_DISCUSSAO_MAT'
		and	nm_atributo = 'CD_CENTRO_CUSTO';
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	integridade_atributo
	where	nm_integridade_referencial = 'PLSDISP_CENCUST_FK3'
	and	nm_tabela = 'PLS_DISCUSSAO_PROC'
	and	nm_atributo = 'CD_CENTRO_CUSTO';

	if (qt_registro_w > 0) then
	
		delete from integridade_atributo
		where	nm_integridade_referencial = 'PLSDISP_CENCUST_FK3'
		and	nm_tabela = 'PLS_DISCUSSAO_PROC'
		and	nm_atributo = 'CD_CENTRO_CUSTO';
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLPREPR_PLSTIPR_FK2';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy',' alter table PLS_PRESTADOR_PROC add ( constraint PLPREPR_PLSTIPR_FK2 Foreign Key (NR_SEQ_TIPO_PREST_PROT) References PLS_TIPO_PRESTADOR(NR_SEQUENCIA)) ');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLPREPR_PLSTIPR_FK2_I';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy','Create Index  PLPREPR_PLSTIPR_FK2_I on PLS_PRESTADOR_PROC(NR_SEQ_TIPO_PREST_PROT) tablespace ' || nm_tablespace_index_w);
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PRGLOTE_ESTABEL_FK';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy',' alter table PLS_REC_GLOSA_LOTE add ( constraint PRGLOTE_ESTABEL_FK Foreign Key (CD_ESTABELECIMENTO) References ESTABELECIMENTO(CD_ESTABELECIMENTO)) ');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PRGLOTE_ESTABEL_FK_I';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy','Create Index  PRGLOTE_ESTABEL_FK_I on PLS_REC_GLOSA_LOTE(CD_ESTABELECIMENTO) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSRCIL_PPPLOTE_FK';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy',' alter table PLS_REGRA_CALCULO_IRPF_LOG add ( constraint PLSRCIL_PPPLOTE_FK Foreign Key (NR_SEQ_PP_LOTE) References PLS_PP_LOTE(NR_SEQUENCIA)) ');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSRCIL_PPPLOTE_FK_I';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy','Create Index  PLSRCIL_PPPLOTE_FK_I on PLS_REGRA_CALCULO_IRPF_LOG(NR_SEQ_PP_LOTE) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PRGLOTE_ESTABEL_FK_I';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy','Create Index  PRGLOTE_ESTABEL_FK_I on PLS_REC_GLOSA_LOTE(CD_ESTABELECIMENTO) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSSMPR_PLSSMRP_FK';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy',' alter table PLS_SMP add ( constraint PLSSMPR_PLSSMRP_FK Foreign Key (NR_SEQ_RESULT_PREST) References PLS_SMP_RESULT_PREST(NR_SEQUENCIA)) ');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSSMPR_PLSSMRP_FK_I';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy','Create Index  PLSSMPR_PLSSMRP_FK_I on PLS_SMP(NR_SEQ_RESULT_PREST) tablespace ' || nm_tablespace_index_w);
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSTCPL_PPPLOTE_FK';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy',' alter table PLS_TRIB_CONTA_PAGAR_LOG add ( constraint PLSTCPL_PPPLOTE_FK Foreign Key (NR_SEQ_PP_LOTE) References PLS_PP_LOTE(NR_SEQUENCIA)) ');
	end if;

	select	count(1)
	into STRICT	qt_registro_w
	from	user_indexes
	where	index_name = 'PLSTCPL_PPPLOTE_FK_I';
	
	if (qt_registro_w = 0) then

		CALL exec_sql_dinamico('Tasy','Create Index  PLSTCPL_PPPLOTE_FK_I on PLS_TRIB_CONTA_PAGAR_LOG(NR_SEQ_PP_LOTE) tablespace ' || nm_tablespace_index_w);
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- wcbernardino - colocar o campo IE_GRUPO_GLOSA da tabela TISS_MOTIVO_GLOSA modify como null
if (dt_versao_atual_cliente_w < to_date('13/09/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'TISS_MOTIVO_GLOSA'
	and	column_name = 'IE_GRUPO_GLOSA'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table TISS_MOTIVO_GLOSA modify IE_GRUPO_GLOSA null ');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- wcbernardino
if (dt_versao_atual_cliente_w < to_date('22/09/2016','dd/mm/yyyy')) then
begin
	-- A1200
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PTU_PACOTE_REG'
	and	column_name = 'CD_PACOTE'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_PACOTE_REG modify CD_PACOTE null ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PTU_PACOTE_REG'
	and	column_name = 'NM_PACOTE'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_PACOTE_REG modify NM_PACOTE null ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PTU_PACOTE_REG'
	and	column_name = 'IE_TIPO_ACOMODACAO'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_PACOTE_REG modify IE_TIPO_ACOMODACAO null ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PTU_PACOTE_REG'
	and	column_name = 'IE_TIPO_PACOTE'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_PACOTE_REG modify IE_TIPO_PACOTE null ');
	end if;
	
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PTU_PACOTE_SERVICO'
	and	column_name = 'QT_SERVICO'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PTU_PACOTE_SERVICO modify QT_SERVICO null ');
	end if;
	
	-- A400
	CALL exec_sql_dinamico('Tasy',' alter table PTU_PRESTADOR modify NM_FANTASIA varchar2(60) ');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- wcbernardino - colocar campo NR_SEQ_PERIODO da PLS_REGRA_FRANQ_PAG_PER como null

-- aumentar tamnho do campo IE_INSTITUICAO_ACRED_PTU
if (dt_versao_atual_cliente_w < to_date('04/10/2016','dd/mm/yyyy')) then
begin
	select	count(1)
	into STRICT	qt_registro_w
	from	user_tab_columns
	where	table_name = 'PLS_REGRA_FRANQ_PAG_PER'
	and	column_name = 'NR_SEQ_PERIODO'
	and	nullable = 'Y';

	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_REGRA_FRANQ_PAG_PER modify NR_SEQ_PERIODO null ');
	end if;
	
	CALL exec_sql_dinamico('Tasy',' alter table pls_prestador modify ie_instituicao_acred_ptu varchar2(10) ');
	CALL exec_sql_dinamico('Tasy',' alter table ptu_prestador modify ie_instituicao_acred_ptu varchar2(10) ');
	CALL exec_sql_dinamico('Tasy',' alter table ptu_prestador_endereco modify ie_instituicao_acred_ptu varchar2(10) ');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--Alterar integridade para CASCADE
if (dt_versao_atual_cliente_w < to_date('11/10/2016','dd/mm/yyyy')) then
begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PAMENSA_PLSMSI_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','Alter Table PLS_AR_MENSALIDADE drop constraint PAMENSA_PLSMSI_FK');
	end if;
	
	CALL Exec_Sql_Dinamico('Tasy','Alter Table PLS_AR_MENSALIDADE add (Constraint PAMENSA_PLSMSI_FK Foreign Key (NR_SEQ_ITEM_MENS) References PLS_MENSALIDADE_SEG_ITEM(NR_SEQUENCIA) on delete cascade)');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- Excluir a UK
if (dt_versao_atual_cliente_w < to_date('18/10/2016','dd/mm/yyyy')) then
begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	table_name	= 'PLS_CNAE'
	and	constraint_name	= 'PLSCNAE_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','alter table PLS_CNAE drop constraint PLSCNAE_UK');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name	= 'PLS_CNAE'
	and	index_name	= 'PLSCNAE_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','drop index PLSCNAE_UK');
	end if;
	
	select	count(*)
	into STRICT	qt_registro_w
	from	indice
	where	nm_indice	= 'PLSCNAE_UK';
	
	if (qt_registro_w > 0) then
		CALL exec_sql_dinamico('Tasy','delete from indice where nm_indice = ''PLSCNAE_UK''');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--Alterar integridade para CASCADE
if (dt_versao_atual_cliente_w < to_date('21/10/2016','dd/mm/yyyy')) then
begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSMLGE_PLLOMEN_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','Alter Table PLS_MENS_LOG_GERACAO drop constraint PLSMLGE_PLLOMEN_FK');
	end if;
	
	CALL Exec_Sql_Dinamico('Tasy','Alter Table PLS_MENS_LOG_GERACAO add (Constraint PLSMLGE_PLLOMEN_FK Foreign Key (NR_SEQ_LOTE) References PLS_LOTE_MENSALIDADE(NR_SEQUENCIA) on delete cascade)');
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name	= 'PLS_MENS_LOG_GERACAO'
	and	index_name	= 'PLSMLGE_PLLOMEN_FK_I';
	
	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('Tasy','Create Index PLSMLGE_PLLOMEN_FK_I on PLS_MENS_LOG_GERACAO(NR_SEQ_LOTE)');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--Alterar campo para null
if (dt_versao_atual_cliente_w < to_date('22/10/2016','dd/mm/yyyy')) then
begin
	CALL Exec_Sql_Dinamico('Tasy',' alter table PLS_PRESTADOR_QUALIF modify IE_ACREDITACAO varchar2(10) null ');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

if (dt_versao_atual_cliente_w < to_date('07/11/2016','dd/mm/yyyy')) then
	CALL Exec_Sql_Dinamico('Tasy','drop type person_name_table');
	CALL Exec_Sql_Dinamico('Tasy','drop type person_name_row');
end if;

--Alterar integridade para CASCADE
if (dt_versao_atual_cliente_w < to_date('22/11/2016','dd/mm/yyyy')) then
begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSPAQA_PLSMENS_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','Alter Table pls_pagador_quitacao_anual drop constraint PLSPAQA_PLSMENS_FK');
	end if;
	
	CALL Exec_Sql_Dinamico('Tasy','Alter Table pls_pagador_quitacao_anual add (Constraint PLSPAQA_PLSMENS_FK Foreign Key (NR_SEQ_MENSALIDADE) References PLS_MENSALIDADE(NR_SEQUENCIA) on delete cascade)');
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name	= 'PLS_PAGADOR_QUITACAO_ANUAL'
	and	index_name	= 'PLSPAQA_PLSMENS_FK_I';
	
	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('Tasy','Create Index PLSPAQA_PLSMENS_FK_I on pls_pagador_quitacao_anual(NR_SEQ_MENSALIDADE)');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--Alterar integridade para CASCADE
if (dt_versao_atual_cliente_w < to_date('22/11/2016','dd/mm/yyyy')) then
begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'WPLSCAA_PLSSEGU_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','Alter Table W_PLS_CARENCIA_ABRANG_ANT drop constraint WPLSCAA_PLSSEGU_FK');
	end if;
	
	CALL Exec_Sql_Dinamico('Tasy','Alter Table W_PLS_CARENCIA_ABRANG_ANT add (Constraint WPLSCAA_PLSSEGU_FK Foreign Key (NR_SEQ_SEGURADO) References PLS_SEGURADO(NR_SEQUENCIA) on delete cascade)');
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name	= 'W_PLS_CARENCIA_ABRANG_ANT'
	and	index_name	= 'WPLSCAA_PLSSEGU_FK_I';
	
	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('Tasy','Create Index WPLSCAA_PLSSEGU_FK_I on W_PLS_CARENCIA_ABRANG_ANT(NR_SEQ_SEGURADO)');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--Alterar campo para tamanho 5
if (dt_versao_atual_cliente_w < to_date('14/12/2016','dd/mm/yyyy')) then
begin
	CALL Exec_Sql_Dinamico('Tasy',' alter table pls_rec_glosa_protocolo modify ie_status varchar2(5) ');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

if (dt_versao_atual_cliente_w < to_date('16/12/2016','dd/mm/yyyy')) then
	--PLS_PP_ITEM_APROPRIACAO
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPPIA_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPPIA_PK on PLS_PP_ITEM_APROPRIACAO (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PP_ITEM_APROPRIACAO'
	and	constraint_name = 'PLSPPIA_PK'
	and	index_name = 'PLSPPIA_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PP_ITEM_APROPRIACAO modify constraint PLSPPIA_PK using index PLSPPIA_PK ');
	end if;
	
	--PLS_MENSALIDADE
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSMENS_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSMENS_PK on PLS_MENSALIDADE (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_MENSALIDADE'
	and	constraint_name = 'PLSMENS_PK'
	and	index_name = 'PLSMENS_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_MENSALIDADE modify constraint PLSMENS_PK using index PLSMENS_PK ');
	end if;
	
	--PLS_PROTOCOLO_CONTA
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPRCO_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPRCO_PK on PLS_PROTOCOLO_CONTA (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PROTOCOLO_CONTA'
	and	constraint_name = 'PLSPRCO_PK'
	and	index_name = 'PLSPRCO_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PROTOCOLO_CONTA modify constraint PLSPRCO_PK using index PLSPRCO_PK ');
	end if;
	
	--PLS_PLANO
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSPLAN_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSPLAN_PK on PLS_PLANO (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PLANO'
	and	constraint_name = 'PLSPLAN_PK'
	and	index_name = 'PLSPLAN_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PLANO modify constraint PLSPLAN_PK using index PLSPLAN_PK ');
	end if;
	
	--PLS_TIPO_CARENCIA
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSTICA_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSTICA_PK on PLS_TIPO_CARENCIA (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_TIPO_CARENCIA'
	and	constraint_name = 'PLSTICA_PK'
	and	index_name = 'PLSTICA_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_TIPO_CARENCIA modify constraint PLSTICA_PK using index PLSTICA_PK ');
	end if;
	
	--PLS_CONTA_MEDICA_RESUMO
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSCOMR_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSCOMR_PK on PLS_CONTA_MEDICA_RESUMO (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_CONTA_MEDICA_RESUMO'
	and	constraint_name = 'PLSCOMR_PK'
	and	index_name = 'PLSCOMR_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_MEDICA_RESUMO modify constraint PLSCOMR_PK using index PLSCOMR_PK ');
	end if;
	
	--PLS_CONTA_REC_RESUMO_ITEM
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PLSRESIT_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PLSRESIT_PK on PLS_CONTA_REC_RESUMO_ITEM (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_CONTA_REC_RESUMO_ITEM'
	and	constraint_name = 'PLSRESIT_PK'
	and	index_name = 'PLSRESIT_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_CONTA_REC_RESUMO_ITEM modify constraint PLSRESIT_PK using index PLSRESIT_PK ');
	end if;
	
	--PLS_PP_VALOR_TRIB_PESSOA
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_indexes
	where 	index_name = 'PPVTPES_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' create index PPVTPES_PK on PLS_PP_VALOR_TRIB_PESSOA (NR_SEQUENCIA) ');
	end if;
	
	select 	count(1)
	into STRICT	qt_registro_w
	from 	user_constraints
	where 	table_name = 'PLS_PP_VALOR_TRIB_PESSOA'
	and	constraint_name = 'PPVTPES_PK'
	and	index_name = 'PPVTPES_PK';
	
	if (qt_registro_w = 0) then
		CALL exec_sql_dinamico('Tasy',' alter table PLS_PP_VALOR_TRIB_PESSOA modify constraint PPVTPES_PK using index PPVTPES_PK ');
	end if;
end if;

--Alterar campo para nulo
if (dt_versao_atual_cliente_w < to_date('16/12/2016','dd/mm/yyyy')) then
begin
	CALL Exec_Sql_Dinamico('Tasy',' alter table PARAMETRO_GESTAO_MATERIAL modify NR_SEQ_UNIDADE_HOSP null ');
	CALL Exec_Sql_Dinamico('Tasy',' alter table PARAMETRO_GESTAO_MATERIAL modify NR_SEQ_UNIDADE_OPER null ');
	CALL Exec_Sql_Dinamico('Tasy',' alter table PARAMETRO_GESTAO_MATERIAL modify NR_SEQ_UNIDADE_FARM null ');
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

-- Alterar integridade para cascade
if (dt_versao_atual_cliente_w < to_date('22/11/2016','dd/mm/yyyy')) then
begin
	select	count(*)
	into STRICT	qt_registro_w
	from	user_constraints
	where	constraint_name = 'PLSDCOB_PLSCOME_FK';
	
	if (qt_registro_w > 0) then
		CALL Exec_Sql_Dinamico('Tasy','Alter Table PLS_DIAGNOST_CONTA_OBITO drop constraint PLSDCOB_PLSCOME_FK');
	end if;
	
	CALL Exec_Sql_Dinamico('Tasy','Alter Table PLS_DIAGNOST_CONTA_OBITO add (Constraint PLSDCOB_PLSCOME_FK Foreign Key (NR_SEQ_CONTA) References PLS_CONTA(NR_SEQUENCIA) on delete cascade)');
	
	select	count(*)
	into STRICT	qt_registro_w
	from	user_indexes
	where	table_name	= 'PLS_DIAGNOST_CONTA_OBITO'
	and	index_name	= 'PLSDCOB_PLSCOME_FK_I';
	
	if (qt_registro_w = 0) then
		CALL Exec_Sql_Dinamico('Tasy','Create Index PLSDCOB_PLSCOME_FK_I on PLS_DIAGNOST_CONTA_OBITO(NR_SEQ_CONTA)');
	end if;
exception
when others then
	CALL gravar_log_atualizacao_erro(nr_sequencia_w,'TASY_PREPARAR_BASE',substr(sqlerrm(SQLSTATE), 1, 1800), 'Tasy');
end;
end if;

--Corrigir integridade tabela PLS_EMAIL_ANEXO_PARAM 
if (dt_versao_atual_cliente_w < to_date('06/01/2017','dd/mm/yyyy')) then
	select count(1)
	into STRICT	qt_registro_w
	from   	user_tables
	where  	table_name = 'PLS_EMAIL_ANEXO_PARAM';
	--Verifica se a tabela existe na versão
	if (qt_registro_w > 0) then	
		--Corrigir no diiconário
		select 	max(nr_sequencia)
		into STRICT	ie_seq_criacao_w
		from   	INDICE_ATRIBUTO
		where  	nm_indice = 'PLEMAPAR_PLSEMANEX_FK_I'
		and    	nm_atributo = 'NR_SEQ_ANEXO';

		if (ie_seq_criacao_w <> 1) then
			update	INDICE_ATRIBUTO
			set	NR_SEQUENCIA	= 1
			where  	nm_indice = 'PLEMAPAR_PLSEMANEX_FK_I'
			and    	nm_atributo = 'NR_SEQ_ANEXO';
			commit;
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLEMAPAR_PLSEMANEX_FK_I';
		--Dropa
		if (qt_registro_w > 0) then		
			CALL Exec_Sql_Dinamico('dutpadel', 'drop index PLEMAPAR_PLSEMANEX_FK_I ');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_indexes
		where	index_name = 'PLEMAPAR_PLSEMANEX_FK_I';
		--cria
		if (qt_registro_w = 0) then		
			CALL Exec_Sql_Dinamico('dutpadel', 'Create Index PLEMAPAR_PLSEMANEX_FK_I on PLS_EMAIL_ANEXO_PARAM( NR_SEQ_ANEXO ) ');
		end if;

		--Corrigir no diiconário
		select 	max(IE_SEQUENCIA_CRIACAO)
		into STRICT	ie_seq_criacao_w
		from  	INTEGRIDADE_ATRIBUTO
		where  	nm_integridade_referencial = 'PLEMAPAR_PLSEMANEX_FK'
		and    	nm_atributo 		   = 'NR_SEQ_ANEXO';

		if (ie_seq_criacao_w <> 1) then
			update	INTEGRIDADE_ATRIBUTO
			set	IE_SEQUENCIA_CRIACAO = 1
			where  	nm_integridade_referencial = 'PLEMAPAR_PLSEMANEX_FK'
			and    	nm_atributo 		   = 'NR_SEQ_ANEXO';	
			commit;
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLEMAPAR_PLSEMANEX_FK';
		--dropa
		if (qt_registro_w > 0) then
			CALL Exec_Sql_Dinamico('dutpadel', 'alter table drop constraint PLEMAPAR_PLSEMANEX_FK ');
		end if;

		select	count(1)
		into STRICT	qt_registro_w
		from	user_constraints
		where	constraint_name = 'PLEMAPAR_PLSEMANEX_FK';
		--cria
		if (qt_registro_w = 0) then
			CALL Exec_Sql_Dinamico('dutpadel', 'Alter Table PLS_EMAIL_ANEXO_PARAM add ( Constraint PLEMAPAR_PLSEMANEX_FK Foreign Key ( NR_SEQ_ANEXO ) References PLS_EMAIL_ANEXO ( NR_SEQUENCIA) on delete cascade) ');
		end if;
	end if;
end if;

-- Ajuste de tabela
if (dt_versao_atual_cliente_w < to_date('06/04/2017','dd/mm/yyyy')) then
	begin
	delete	FROM integridade_atributo
	where	nm_tabela	= 'W_PLS_UTILIZACAO_BENEF'
	and	nm_atributo	= 'CD_MUNICIO_IBGE';
	exception
	when others then
		null;
	end;

	begin
	delete	FROM integridade_referencial
	where	nm_tabela	= 'W_PLS_UTILIZACAO_BENEF'
	and	nm_tabela_referencia = 'SUS_MUNICIPIO';
	exception
	when others then
		null;
	end;

	begin
	delete	FROM indice_atributo
	where	nm_indice	= 'WPLSUBF_SUSMUNI_FK_I'
	and	nm_tabela	= 'W_PLS_UTILIZACAO_BENEF'
	and	nm_atributo	= 'CD_MUNICIO_IBGE';
	exception
	when others then
		null;
	end;

	begin
	delete	FROM indice
	where	nm_indice	= 'WPLSUBF_SUSMUNI_FK_I'
	and	nm_tabela	= 'W_PLS_UTILIZACAO_BENEF';
	exception
	when others then
		null;
	end;

	begin
	delete	FROM tabela_atributo
	where	nm_atributo	= 'CD_MUNICIO_IBGE'
	and	nm_tabela	= 'W_PLS_UTILIZACAO_BENEF';
	exception
	when others then
		null;
	end;

	begin
	CALL Exec_Sql_Dinamico('Tasy', ' ALTER TABLE W_PLS_UTILIZACAO_BENEF MODIFY CD_PROCEDIMENTO NUMBER(15) IS NULL ');
	CALL Exec_Sql_Dinamico('Tasy', ' ALTER TABLE W_PLS_UTILIZACAO_BENEF MODIFY IE_ORIGEM_PROCED NUMBER(10) IS NULL ');
	CALL Exec_Sql_Dinamico('Tasy', ' ALTER TABLE W_PLS_UTILIZACAO_BENEF DROP CONSTRAINT WPLSUBF_SUSMUNI_FK ');
	CALL Exec_Sql_Dinamico('Tasy', ' DROP INDEX WPLSUBF_SUSMUNI_FK_I ');
	CALL Exec_Sql_Dinamico('Tasy', ' ALTER TABLE W_PLS_UTILIZACAO_BENEF DROP COLUMN CD_MUNICIO_IBGE ');
	CALL Exec_Sql_Dinamico('Tasy', ' ALTER TABLE W_PLS_UTILIZACAO_BENEF ADD CD_MUNICIPIO_IBGE VARCHAR2(6) NULL ');
	exception
	when others then
		null;
	end;
end if;

-- ESTE CÓDIGO DEVE SER O ÚLTIMO DA PROCEDURE, PARA INDICAR QUE EXECUTOU A MESMA POR COMPLETO.
if (ie_atualizacao_w = 'S') and (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
	
	update	log_atualizacao
	set	dt_fim_evento	= clock_timestamp(),
		dt_atualizacao	= clock_timestamp(),
		ds_ocorrencia	= ds_ocorrencia || ' Executou a procedure tasy_preparar_base até o final.'
	where	nr_sequencia 	= nr_sequencia_w
	and     nr_seq_atualizacao = nr_seq_atualizacao_p
	and	ie_evento	= '107'
	and	coalesce(dt_fim_evento::text, '') = '';
end if;

-- ESTE CÓDIGO DEVE SER O ÚLTIMO DA PROCEDURE, PARA INDICAR QUE EXECUTOU A MESMA POR COMPLETO.

-- ESTE CÓDIGO DEVE SER O ÚLTIMO DA PROCEDURE, PARA INDICAR QUE EXECUTOU A MESMA POR COMPLETO.

-- ESTE CÓDIGO DEVE SER O ÚLTIMO DA PROCEDURE, PARA INDICAR QUE EXECUTOU A MESMA POR COMPLETO.
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tasy_preparar_base ( nr_seq_atualizacao_p bigint default null) FROM PUBLIC;

