-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_cobr_deb_caixa_150_v08 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* OS 2866150
MANUAL DO DEBITO AUTOMATICO Versao 08
Cadastramento pela Instituicao Financeira
Destinataria - Resolucao N 4.790/2020 e
Circular 4.022/2020
03.11.2020 */
subtype date_char is varchar(8);
subtype string_20 is varchar(20);

ds_conteudo_w		      w_envio_banco.ds_conteudo%type;
qt_reg_arquivo_w	    integer := 0;

/* Header - A - Trailler - Z*/

dt_geracao_arquivo_w	date_char;
ds_banco_w		        string_20;
cd_banco_w		        banco.cd_banco%type;
nm_empresa_w		      string_20;
cd_convenio_banco_w	  string_20;
vl_total_w		        string_20;
vl_soma_w		          titulo_receber_cobr.vl_cobranca%type := 0;

/* Registros */

ie_ident_cliente_w	  pls_segurado_carteira.cd_usuario_plano%type;
nr_conta_w		        string_20;
cd_agencia_bancaria_w banco_estabelecimento.cd_agencia_bancaria%type;
cd_conta_w            banco_estabelecimento.cd_conta%type;
ie_digito_w           banco_estabelecimento.ie_digito_conta%type;

C01 CURSOR FOR
	SELECT	substr(pls_obter_dados_segurado(pls_obter_segurado_pagador(e.nr_seq_pagador),'C'),1,25) ie_ident_cliente,
		lpad(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'A'),b.cd_agencia_bancaria),4,'0') cd_agencia_bancaria,
		rpad(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'C'),b.nr_conta),8,' ') nr_conta,
		rpad(substr(coalesce(coalesce(pls_obter_dados_pagador_fin(e.nr_seq_pagador,'DC'),b.ie_digito_conta),'   '),1,2),3,' ') ie_digito,
		rpad(substr(to_char(d.dt_pagamento_previsto,'YYYYMMDD'),1,8),8,' ') dt_vencimento,
		lpad(replace(to_char(b.vl_cobranca, 'fm0000000000000.00'), '.', null),15,'0') vl_debito,
		replace(to_char(b.vl_cobranca, 'fm0000000000000.00'), '.', null) vl_cobranca,
		rpad(d.nr_titulo,54,' ') nr_titulo,
		e.nr_seq_pagador nr_seq_pagador
	FROM banco_estabelecimento c, titulo_receber_cobr b, cobranca_escritural a, titulo_receber d
LEFT OUTER JOIN pls_mensalidade e ON (d.nr_seq_mensalidade = e.nr_sequencia)
WHERE a.nr_seq_conta_banco	= c.nr_sequencia and b.nr_seq_cobranca	= a.nr_sequencia and b.nr_titulo		= d.nr_titulo  and a.nr_sequencia		= nr_seq_cobr_escrit_p;

BEGIN
delete from w_envio_banco where nm_usuario = nm_usuario_p;

qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;

/* Header A */

begin
  select	to_char(clock_timestamp(),'YYYYMMDD') dt_geracao_arquivo,
    rpad(substr(upper(elimina_acentuacao(obter_nome_banco(c.cd_banco))),1,20),20,' ') ds_banco,
    lpad(c.cd_banco,3,'0') cd_banco,
    rpad(upper(substr(elimina_acentuacao(obter_razao_social(b.cd_cgc)),1,20)),20,' ') nm_empresa,
    rpad(coalesce(coalesce(c.cd_conv_banco_deb,c.cd_convenio_banco),' '),20,' ') cd_convenio_banco,
 		lpad(coalesce(c.cd_agencia_bancaria,'0'),4,'0') cd_agencia_bancaria,
		rpad(coalesce(c.cd_conta,'0'),11,' ') cd_conta,
		coalesce(c.ie_digito_conta,' ') ie_digito
  into STRICT	dt_geracao_arquivo_w,
    ds_banco_w,
    cd_banco_w,
    nm_empresa_w,
    cd_convenio_banco_w,
    cd_agencia_bancaria_w,
    cd_conta_w,
    ie_digito_w
  FROM banco_estabelecimento c, estabelecimento b, cobranca_escritural a
LEFT OUTER JOIN banco_carteira d ON (a.nr_seq_carteira_cobr = d.nr_sequencia)
WHERE a.cd_estabelecimento	= b.cd_estabelecimento and a.nr_seq_conta_banco	= c.nr_sequencia  and a.nr_sequencia		= nr_seq_cobr_escrit_p;
exception
  when no_data_found then raise;
  when too_many_rows then raise;
end;

ds_conteudo_w	:=	'A1' || -- 001 - 002
                  cd_convenio_banco_w || -- 003 - 022
                  nm_empresa_w || -- 023 - 042
                  cd_banco_w || -- 043 - 045
                  ds_banco_w || -- 046 - 065
                  dt_geracao_arquivo_w || -- 066 - 073
                  lpad(qt_reg_arquivo_w,6,'0') || -- 074 - 079
                  '08' || -- 080 - 081
                  'DEBITO AUTOMATICO' || -- 082 - 098
                  rpad(cd_agencia_bancaria_w||cd_conta_w||ie_digito_w, 16, ' ') || -- 099 - 114
                  'PP' || -- 115 - 116                  
                  lpad(' ',27,' ') || -- 117 - 143
                  lpad(qt_reg_arquivo_w,6,'0') || -- 144 - 149
                  ' '; -- 150 - 150;
insert into w_envio_banco(	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_estabelecimento,
		ds_conteudo,
		nr_seq_apres)
values (	nextval('w_envio_banco_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_estabelecimento_p,
		ds_conteudo_w,
		qt_reg_arquivo_w);

<<reg_segmentos_w>>
for reg_segmentos_w in C01
loop

	vl_soma_w	:= vl_soma_w + reg_segmentos_w.vl_cobranca;

	/* Caso o pagador nao tenha carteira, buscar a carteira do titular */

	if (coalesce(reg_segmentos_w.ie_ident_cliente,'0') = '0') then
		select	substr(coalesce(max(b.cd_usuario_plano),'0'),1,25)
		into STRICT	ie_ident_cliente_w
		from	pls_segurado_carteira	b,
			pls_segurado		a
		where	a.nr_sequencia	 = b.nr_seq_segurado
		and	coalesce(a.nr_seq_titular::text, '') = ''
		and	a.nr_seq_pagador = reg_segmentos_w.nr_seq_pagador;
	end if;

	qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;

  nr_conta_w := rpad(reg_segmentos_w.nr_conta||reg_segmentos_w.ie_digito, 20, ' ');

	-- Registro E
	ds_conteudo_w	:=	'E' || -- 001 - 001
                    rpad(ie_ident_cliente_w,25,' ') || -- 002 - 026
                    reg_segmentos_w.cd_agencia_bancaria || -- 027 - 030
                    nr_conta_w || -- 031 - 050
                    reg_segmentos_w.dt_vencimento || -- 051 - 058
                    reg_segmentos_w.vl_debito || -- 059 - 073
                    '03' || -- 074 - 075
                    reg_segmentos_w.nr_titulo || -- 076 - 129
                    lpad(qt_reg_arquivo_w,6,'0') || -- 131 - 135
                    '000' || -- 136 - 138
                    lpad(' ',5,' ') || -- 139 - 143
                    lpad(qt_reg_arquivo_w,6,'0') || -- 144 - 149
                    '0'; -- 150 - 150;
	insert into w_envio_banco(	nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			cd_estabelecimento,
			ds_conteudo,
			nr_seq_apres)
	values (	nextval('w_envio_banco_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			cd_estabelecimento_p,
			ds_conteudo_w,
			qt_reg_arquivo_w);

end loop reg_lote01;

/* Trailler Z */

vl_total_w		:= to_char(vl_soma_w);
qt_reg_arquivo_w	:= qt_reg_arquivo_w + 1;

ds_conteudo_w	:=	'Z' ||
                  lpad(qt_reg_arquivo_w,6,'0') || 
                  lpad(vl_total_w,17,'0') || 
                  rpad(' ',119,' ') ||
                  lpad(qt_reg_arquivo_w,6,'0') ||
                  ' ';

insert into w_envio_banco(	nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		cd_estabelecimento,
		ds_conteudo,
		nr_seq_apres)
values (	nextval('w_envio_banco_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		cd_estabelecimento_p,
		ds_conteudo_w,
		qt_reg_arquivo_w);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_cobr_deb_caixa_150_v08 ( nr_seq_cobr_escrit_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

