-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE eis_gerar_subind_censo_esp ( NM_USUARIO_P text, CD_ESTABELECIMENTO_P text, QT_MESES_P integer, NR_DIAS_CENSO_P integer, DT_INICIAL_PARAM_P timestamp, DT_FINAL_PARAM_P timestamp, DS_SQL_P INOUT text ) AS $body$
DECLARE


DS_VIEW_W text;
DT_INICIAL_PARAM_W varchar(100);
DT_FINAL_PARAM_W varchar(100);
DS_NOME_VIEW_W varchar(30);

C001	  	integer;		
RETORNO_W	integer;

BEGIN

DT_INICIAL_PARAM_W	:=	'TO_DATE(''' || TO_CHAR(DT_INICIAL_PARAM_P, 'DD/MM/YYYY HH24:MI:SS') || ''', ''DD/MM/YYYY HH24:MI:SS'')';
DT_FINAL_PARAM_W 	:=	'TO_DATE(''' || TO_CHAR(DT_FINAL_PARAM_P  , 'DD/MM/YYYY HH24:MI:SS') || ''', ''DD/MM/YYYY HH24:MI:SS'')';

DS_NOME_VIEW_W := UPPER(SUBSTR('EIS_SUBIND_ESP_' || NM_USUARIO_P, 1, 30));

DS_VIEW_W := 'CREATE OR REPLACE VIEW '|| DS_NOME_VIEW_W || ' AS ';

DS_VIEW_W := DS_VIEW_W ||
'SELECT
	1 ORDEM,
	CD_ESPECIALIDADE,
	NVL(SUBSTR(DS_ESPECIALIDADE, 1 , 200), ''NÃ£o informada'') DS_ESPECIALIDADE,
	(SUM(NR_LEITOS_OCUPADOS)/ AVG('|| NR_DIAS_CENSO_P || ')/'|| QT_MESES_P || ')QT_MEDIA_PACIENTES,
	DECODE(SUM(NR_ALTAS + NR_TRANSF_SAIDA + NR_OBITOS), 0, 0, SUM(NR_LEITOS_OCUPADOS)/ SUM(NR_ALTAS + NR_TRANSF_SAIDA + NR_OBITOS)) QT_MEDIA_PERM,
	DECODE(SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES), 0, 0, SUM(NR_ALTAS + NR_TRANSF_SAIDA + NR_OBITOS)/(SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES)/ AVG('|| NR_DIAS_CENSO_P || ')))QT_GIRO,
	(SUM(NR_LEITOS_OCUPADOS)/ (
		SELECT SUM(DECODE(IE_TEMP, ''S'', NR_LEITOS_OCUPADOS, NR_UNIDADES_SETOR))
	FROM
		EIS_OCUPACAO_ESPECIALIDADE_V2 A
	WHERE
		DT_REFERENCIA BETWEEN '|| DT_INICIAL_PARAM_W || ' AND FIM_DIA('|| DT_FINAL_PARAM_W || ')
		AND IE_PERIODO = ''D''
		AND CD_ESTABELECIMENTO = 1) * 100) QT_OCUPACAO,
	(SUM(NR_LEITOS_OCUPADOS) / 1) QT_PACIENTES_DIA,
	(SUM(NR_LEITOS_LIVRES) / 1) QT_LEITOS_LIVRES,
	(SUM(NR_ALTAS + NR_TRANSF_SAIDA + NR_OBITOS) / 1) QT_SAIDAS,
	AVG('|| NR_DIAS_CENSO_P || ') QT_DIAS_PERIODO,
	(SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES)/ AVG('|| NR_DIAS_CENSO_P || ') / 1) QT_MEDIA_LEITO,
	DECODE(SUM(NR_ALTAS + NR_TRANSF_SAIDA + NR_OBITOS), 0, 0, SUM(NR_OBITOS * 100)/ SUM(NR_ALTAS + NR_TRANSF_SAIDA + NR_OBITOS)) QT_MEDIA_OBITO,
	SUM((DIVIDIR(QT_DISPONIVEIS, NR_UNIDADES_SETOR) * 100)) QT_DISP,
	CASE 
		WHEN SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) > 0
			AND OBTER_DADOS_PARAM_ATEND('|| CD_ESTABELECIMENTO_P || ', ''TO'') = ''N''
			THEN ((SUM(NR_LEITOS_OCUPADOS) * 100) / SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES))
		ELSE SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES))
		END QT_OCUP_NOVO,
	CASE 
		WHEN (SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) - NR_U_INT) - SUM(NR_U_TEMP)) > 0
			AND OBTER_DADOS_PARAM_ATEND('|| CD_ESTABELECIMENTO_P || ', ''TO'') = ''N''
			THEN ((SUM(NR_LEITOS_OCUPADOS) * 100) / (SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) - NR_U_INT) - SUM(NR_U_TEMP)))
		ELSE (SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) - NR_U_INT) - SUM(NR_U_TEMP))
		END PR_OCUP_SEM_TEMP,
	CASE 
		WHEN (SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES)) - SUM(NR_U_TEMP)) > 0
			AND OBTER_DADOS_PARAM_ATEND('|| CD_ESTABELECIMENTO_P || ', ''TO'') = ''N''
			THEN ((SUM(NR_LEITOS_OCUPADOS) * 100) / (SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES)) - SUM(NR_U_TEMP)))
		ELSE (SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES)) - SUM(NR_U_TEMP))
		END PR_OCUP_NOVO_SEM_TEMP
FROM
	EIS_OCUPACAO_ESPECIALIDADE_V2 A
WHERE
	DT_REFERENCIA BETWEEN '|| DT_INICIAL_PARAM_W || ' AND '|| DT_FINAL_PARAM_W || '
	AND IE_PERIODO = ''D''
	AND CD_ESTABELECIMENTO = 1
GROUP BY
	1,
	CD_ESPECIALIDADE,
	DS_ESPECIALIDADE
HAVING
	(AVG('|| NR_DIAS_CENSO_P || ') > 0)
	AND (SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) > 0)
UNION SELECT
	2,
	''0'',
	''     TOTAL GERAL '',
	(SUM(NR_LEITOS_OCUPADOS)/ AVG('|| NR_DIAS_CENSO_P || ')/'|| QT_MESES_P || ') QT_MEDIA_PACIENTES,
	DECODE(SUM(NR_ALTAS + NR_OBITOS), 0, 0, SUM(NR_LEITOS_OCUPADOS) / SUM(NR_ALTAS + NR_OBITOS)) QT_MEDIA_PERM,
	DECODE(SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES), 0, 0, SUM(NR_ALTAS + NR_OBITOS) / (SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) / AVG('|| NR_DIAS_CENSO_P || '))) QT_GIRO,
	SUM(DECODE(ROWNUM, 1, EIS_OBTER_OCUP_ESPECIALIDADE(NULL,'|| DT_INICIAL_PARAM_W || ', FIM_DIA('|| DT_FINAL_PARAM_W || '), 1), 0)) PR_OCUPACAO,
	(SUM(NR_LEITOS_OCUPADOS) / 1) NR_PACIENTES_DIA,
	(SUM(NR_LEITOS_LIVRES) / 1) NR_LEITOS_LIVRES,
	(SUM(NR_ALTAS + NR_TRANSF_SAIDA + NR_OBITOS) / 1),
	AVG('|| NR_DIAS_CENSO_P || ') NR_DIAS_PERIODO,
	(SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES)/ AVG('|| NR_DIAS_CENSO_P || ')/ 1),
	DECODE(SUM(NR_ALTAS + NR_OBITOS), 0, 0, SUM(NR_OBITOS*100)/ SUM(NR_ALTAS + NR_OBITOS)) QT_MEDIA_OBITO,
	SUM((DIVIDIR(QT_DISPONIVEIS, NR_UNIDADES_SETOR) * 100)),
	(DECODE(OBTER_DADOS_PARAM_ATEND('|| CD_ESTABELECIMENTO_P || ',''TO''), ''N'', SUM(NR_LEITOS_OCUPADOS  + NR_LEITOS_LIVRES), EIS_OBTER_OCUP_SETOR(NULL, '|| DT_INICIAL_PARAM_W || ', FIM_DIA('|| DT_FINAL_PARAM_W || '),'|| CD_ESTABELECIMENTO_P || '))) QT_OCUP_NOVO,
	(DECODE(OBTER_DADOS_PARAM_ATEND('|| CD_ESTABELECIMENTO_P || ',''TO''), ''N'', SUM((NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) - NR_U_INT) - SUM(NR_U_TEMP), EIS_OBTER_OCUP_SETOR(NULL, '|| DT_INICIAL_PARAM_W || ', FIM_DIA('|| DT_FINAL_PARAM_W || '),'|| CD_ESTABELECIMENTO_P || ',''OSTI''))) OCUP_SEM_TEMP,
	(DECODE(OBTER_DADOS_PARAM_ATEND('|| CD_ESTABELECIMENTO_P || ',''TO''), ''N'', SUM(NR_LEITOS_OCUPADOS  + NR_LEITOS_LIVRES) - SUM(NR_U_TEMP), EIS_OBTER_OCUP_SETOR(NULL, '|| DT_INICIAL_PARAM_W || ', FIM_DIA('|| DT_FINAL_PARAM_W || '),'|| CD_ESTABELECIMENTO_P || ',''OST''))) OCUP_NOVO_SEM_TEMP
FROM
	EIS_OCUPACAO_ESPECIALIDADE_V2 A
WHERE
	DT_REFERENCIA BETWEEN '|| DT_INICIAL_PARAM_W || ' AND '|| DT_FINAL_PARAM_W || '
	AND IE_PERIODO = ''D''
	AND CD_ESTABELECIMENTO = ' ||  CD_ESTABELECIMENTO_P || ' 
GROUP BY
	2,
	''     TOTAL GERAL ''
HAVING
	(AVG('|| NR_DIAS_CENSO_P || ') > 0)
	AND (SUM(NR_LEITOS_OCUPADOS + NR_LEITOS_LIVRES) > 0)
ORDER BY
	1,
	2';

C001 := DBMS_SQL.OPEN_CURSOR;
DBMS_SQL.PARSE(C001, DS_VIEW_W, DBMS_SQL.NATIVE);
RETORNO_W := DBMS_SQL.EXECUTE(C001);
DBMS_SQL.CLOSE_CURSOR(C001);

DS_SQL_P := 'SELECT * FROM ' || DS_NOME_VIEW_W;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eis_gerar_subind_censo_esp ( NM_USUARIO_P text, CD_ESTABELECIMENTO_P text, QT_MESES_P integer, NR_DIAS_CENSO_P integer, DT_INICIAL_PARAM_P timestamp, DT_FINAL_PARAM_P timestamp, DS_SQL_P INOUT text ) FROM PUBLIC;

