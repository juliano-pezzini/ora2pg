-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pat_contabiliza_transf_bem ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text) AS $body$
DECLARE



cd_bem_w			varchar(20);
cd_conta_contabil_w		varchar(20);
cd_estabelecimento_w		smallint;
cd_tipo_lote_contabil_w		bigint;
ds_bem_w			varchar(255);
ds_conteudo_w			varchar(4000);
ds_documento_w			varchar(255);
dt_contabil_w			timestamp;
dt_referencia_w			timestamp;
ie_forma_contab_w		varchar(15);
ie_movimento_w			bigint;
nm_atributo_w			varchar(50);
nr_seq_bem_w			bigint;
nr_seq_trans_financ_w		bigint;
vl_movimento_w			double precision;
nr_seq_movto_w			bigint;
nr_seq_agrupamento_w		ctb_movimento.nr_seq_agrupamento%type;
nm_agrupador_w			varchar(255);
ds_mesano_w			varchar(255);
cd_centro_custo_w 	pat_bem.cd_centro_custo%type;

nr_documento_w			movimento_contabil.nr_documento%type;
ie_origem_documento_w		movimento_contabil.ie_origem_documento%type;

c010 CURSOR FOR
	SELECT	1,
		a.nr_seq_bem,
		a.dt_transacao,
		a.cd_conta_antiga,
		a.cd_centro_custo_antiga,
		a.nr_seq_trans_financ,
		'VL_BEM_TRANSF_CONTA_ANT',
		sum(a.vl_original)
	from	pat_conta_alteracao a
	where	a.nr_lote_contabil = nr_lote_contabil_p
	group by
		a.nr_seq_bem,
		a.dt_transacao,
		a.cd_conta_antiga,
		a.cd_centro_custo_antiga,
		a.nr_seq_trans_financ
	
union all

	SELECT	1,
		a.nr_seq_bem,
		a.dt_transacao,
		a.cd_conta_nova,
		a.cd_centro_custo_nova,
		a.nr_seq_trans_financ,
		'VL_BEM_TRANSF_CONTA',
		sum(a.vl_original)
	from	pat_conta_alteracao a
	where	a.nr_lote_contabil = nr_lote_contabil_p
	group by
		a.nr_seq_bem,
		a.dt_transacao,
		a.cd_conta_nova,
		a.cd_centro_custo_nova,
		a.nr_seq_trans_financ
	
union all

	select	2,
		a.nr_seq_bem,
		a.dt_transacao,
		substr(pat_obter_conta_deprec_acum(a.cd_conta_antiga,a.nr_seq_regra_conta_ant),1,20) cd_conta_antiga,
		NULL,
		a.nr_seq_trans_financ,
		'VL_DEPREC_TRANSF_CONTA_ANT',
		sum(a.vl_deprec_acum)
	from	pat_conta_alteracao a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	and	pat_obter_conta_deprec_acum(a.cd_conta_antiga,a.nr_seq_regra_conta_ant) <> pat_obter_conta_deprec_acum(a.cd_conta_nova,a.nr_seq_regra_conta_nova)
	group by
		a.nr_seq_bem,
		a.dt_transacao,
		a.cd_conta_antiga,
		5,
		a.nr_seq_trans_financ,
		a.nr_seq_regra_conta_ant
	
union all

	select	2,
		a.nr_seq_bem,
		a.dt_transacao,
		substr(pat_obter_conta_deprec_acum(a.cd_conta_nova,a.nr_seq_regra_conta_nova),1,20) cd_conta_nova,
		NULL,
		a.nr_seq_trans_financ,
		'VL_DEPREC_TRANSF_CONTA',
		sum(a.vl_deprec_acum)
	from	pat_conta_alteracao a
	where	a.nr_lote_contabil	= nr_lote_contabil_p
	and	pat_obter_conta_deprec_acum(a.cd_conta_antiga,a.nr_seq_regra_conta_ant) <> pat_obter_conta_deprec_acum(a.cd_conta_nova,a.nr_seq_regra_conta_nova)
	group by
		a.nr_seq_bem,
		a.dt_transacao,
		a.cd_conta_nova,
		5,
		a.nr_seq_trans_financ,
		a.nr_seq_regra_conta_nova;


BEGIN

select	trunc(dt_referencia,'month'),
	cd_estabelecimento,
	cd_tipo_lote_contabil
into STRICT	dt_referencia_w,
	cd_estabelecimento_w,
	cd_tipo_lote_contabil_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

ds_mesano_w		:= to_char(dt_referencia_w,'mmyyyy');
ie_forma_contab_w	:= substr(coalesce(obter_valor_param_usuario(135,22,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_w),'S'),1,1);

/* Identifica se eh exclusao do lote */

if (ie_exclusao_p = 'S') then
	begin
	update	pat_conta_alteracao
	set	nr_lote_contabil = 0
	where	nr_lote_contabil = nr_lote_contabil_p;
	commit;
	end;
else
	begin
	update	pat_conta_alteracao a
	set	a.nr_lote_contabil = nr_lote_contabil_p
	where	a.dt_transacao between trunc(dt_referencia_w,'month') and fim_dia(last_day(trunc(dt_referencia_w,'month')))
	and	exists (
		SELECT	1
		from	pat_bem b
		where	b.nr_sequencia = a.nr_seq_bem
		and	b.cd_estabelecimento = cd_estabelecimento_w);

	commit;

	nm_agrupador_w := coalesce(trim(both obter_agrupador_contabil(17)),'');
	if (coalesce(nm_agrupador_w,'X') = 'X') then
		begin
		if (ie_forma_contab_w = 'A') then
			nm_agrupador_w	:= 'NR_SEQ_BEM';
		elsif (ie_forma_contab_w = 'S') then
			nm_agrupador_w	:= 'DS_MES_ANO';
		end if;
		end;
	end if;

	open c010;
	loop
	fetch c010 into
		ie_movimento_w,
		nr_seq_bem_w,
		dt_contabil_w,
		cd_conta_contabil_w,
		cd_centro_custo_w,
		nr_seq_trans_financ_w,
		nm_atributo_w,
		vl_movimento_w;
	EXIT WHEN NOT FOUND; /* apply on c010 */
		begin
		ds_documento_w := substr(wheb_mensagem_pck.get_texto(299294),1,255); /* Transferencia do valor do Bem */
		if (ie_movimento_w = '2') then
			ds_documento_w := substr(wheb_mensagem_pck.get_texto(299296),1,255); /* Transferencia do valor depreciacao */
		end if;

		if (nr_seq_bem_w IS NOT NULL AND nr_seq_bem_w::text <> '') then
			begin
			select	cd_bem,
				ds_bem
			into STRICT	cd_bem_w,
				ds_bem_w
			from	pat_bem
			where	nr_sequencia = nr_seq_bem_w;
			end;
		end if;

		ds_conteudo_w	:= substr(	cd_bem_w	|| '#@' ||
						''		|| '#@' ||
						''		|| '#@' ||
						ds_bem_w	|| '#@' ||
						ds_documento_w,1,4000);

		if (coalesce(nr_seq_bem_w,'0') <> '0') then
			nr_documento_w := nr_seq_bem_w;
			ie_origem_documento_w := 6;
		end if;

		if (nm_agrupador_w = 'NR_SEQ_BEM')then
			nr_seq_agrupamento_w := nr_seq_bem_w;
		elsif (nm_agrupador_w = 'DS_MES_ANO')then
			nr_seq_agrupamento_w := ds_mesano_w;
		end if;

		if (coalesce(nr_seq_agrupamento_w,0) = 0)then
			nr_seq_agrupamento_w := ds_mesano_w;
		end if;

		nr_seq_movto_w := gerar_contab_trans_financ(
			cd_estabelecimento_w, null, nr_lote_contabil_p, nm_usuario_p, cd_conta_contabil_w, cd_centro_custo_w, ds_documento_w, nr_seq_agrupamento_w, dt_contabil_w, vl_movimento_w, nr_seq_trans_financ_w, null, nm_atributo_w, null, null, 0, null, nr_documento_w, null, ds_conteudo_w, null, null, null, null, null, null, null, null, null, null, null, null, null, null, nr_seq_movto_w, null, null, null, ie_origem_documento_w);
		end;
	end loop;
	close c010;
	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pat_contabiliza_transf_bem ( nr_lote_contabil_p bigint, nm_usuario_p text, ie_exclusao_p text) FROM PUBLIC;

