-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_cotacao_moeda_convenio ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_p timestamp, ie_previsto_realizado_p text, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_medico_p text, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_edicao_amb_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_lab_p bigint, cd_tipo_acomodacao_p bigint, vl_honorarios_p INOUT bigint, vl_custo_oper_p INOUT bigint, vl_filme_p INOUT bigint) AS $body$
DECLARE

					
qt_pontos_w			preco_amb.qt_pontuacao%type;
vl_honorarios_w			double precision	:= 0;
vl_custo_oper_w			double precision	:= 0;
vl_filme_w			double precision	:= 0;
vl_honorarios1_w		double precision	:= 0;
vl_custo_oper1_w		double precision	:= 0;
vl_filme1_w			double precision	:= 0;
cd_convenio_w           	integer		:= 0;
cd_categoria_w   		varchar(10)	:= '';
cd_procedimento_w           	bigint	:= 0;
cd_grupo_w			bigint	:= 0;
cd_especialidade_w		bigint	:= 0;
cd_area_w			bigint	:= 0;
cd_estabelecimento_w         	smallint		:= 0;
cd_setor_atendimento_w		integer;
ie_tipo_atendimento_w		smallint;
ie_credenciado_w		varchar(01);
qt_reg_w			bigint;
ie_origem_proced_w		bigint	:= 0;
ie_prioridade_edicao_w		varchar(01);
cd_edicao_amb_w			integer;
dt_inicio_vigencia_w		timestamp;
tx_ajuste_geral_w		double precision;
nr_seq_cbhpm_edicao_w		bigint;
ie_origem_proc_edicao_w		bigint;
cd_moeda_w			smallint;
dt_vigencia_w			timestamp;
ie_consiste_moeda_w		varchar(1);
nr_seq_grupo_lab_w		bigint;

c01 CURSOR FOR
	SELECT 	a.vl_honorarios,
		a.vl_custo_oper,
		a.vl_filme
	from	moeda b,
		cotacao_moeda_convenio a
	where 	a.cd_estabelecimento = cd_estabelecimento_p
	and	a.cd_convenio = cd_convenio_p
    	--and 	a.dt_referencia <= dt_vigencia_p			/* Comentado essa linha e substituido pela linha abaixo (Fabricio em 05/11/2009 OS 176674 */
	and 	dt_vigencia_p between a.dt_referencia and (coalesce(ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(a.dt_referencia_final), ESTABLISHMENT_TIMEZONE_UTILS.endOfDay(dt_vigencia_p)))
	and	a.cd_moeda = b.cd_moeda
	and	b.ie_calcular_cotacao_conv = 'S'
	and  	a.ie_previsto_realizado = ie_previsto_realizado_p
	and 	coalesce(a.cd_categoria,cd_categoria_p) = cd_categoria_p
	and	coalesce(a.cd_procedimento,cd_procedimento_p) = cd_procedimento_p
	and	((coalesce(a.cd_procedimento, 0) = 0) or (coalesce(a.ie_origem_proced,ie_origem_proced_w) = ie_origem_proced_w))
	and 	coalesce(a.nr_seq_proc_interno, coalesce(nr_seq_proc_interno_p,0)) = coalesce(nr_seq_proc_interno_p,0)
	and	coalesce(a.cd_grupo_proced,cd_grupo_w) = cd_grupo_w
	and	coalesce(a.cd_especial_proced,cd_especialidade_w) = cd_especialidade_w
	and	coalesce(a.cd_area_proced,cd_area_w) = cd_area_w
	and	((ie_credenciado = 'S' AND ie_credenciado_w = 'S') or
		(ie_credenciado = 'O' AND ie_credenciado_w = 'N') or (ie_credenciado = 'N'))
	and	coalesce(a.ie_tipo_atendimento, coalesce(ie_tipo_atendimento_p,0)) = coalesce(ie_tipo_atendimento_p,0)
	and	coalesce(a.cd_setor_atendimento, coalesce(cd_setor_atendimento_p,0))	= coalesce(cd_setor_atendimento_p,0)
	and	((coalesce(ie_clinica::text, '') = '') or (ie_clinica = ie_clinica_p))
	and	((coalesce(cd_empresa_ref::text, '') = '') or (cd_empresa_ref = cd_empresa_ref_p))
	and	((coalesce(cd_plano::text, '') = '') or (cd_plano = cd_plano_p))
	and	((coalesce(cd_edicao_amb::text, '') = '') or (cd_edicao_amb = coalesce(cd_edicao_amb_p,cd_edicao_amb)))
	and	((coalesce(cd_medico, coalesce(cd_medico_p, 0)) = coalesce(cd_medico_p, 0)) or (coalesce(cd_medico_p,0) = 0))
	and	a.cd_moeda = coalesce(cd_moeda_w, a.cd_moeda)
	and	((coalesce(nr_seq_grupo_lab::text, '') = '') or (nr_seq_grupo_lab = coalesce(nr_seq_grupo_lab_w,0)))
	and	coalesce(a.cd_tipo_acomodacao, coalesce(cd_tipo_acomodacao_p,0))	= coalesce(cd_tipo_acomodacao_p,0)
	and	coalesce(a.ie_situacao,'A')	= 'A'
	order by	coalesce(a.cd_procedimento,0),
		coalesce(a.nr_seq_proc_interno,0),
		coalesce(a.cd_grupo_proced,0),
		coalesce(a.cd_especial_proced,0),
		coalesce(a.cd_area_proced,0),
		coalesce(a.cd_setor_atendimento,0),
		coalesce(a.ie_tipo_atendimento,0),
		coalesce(a.cd_convenio,0),
		coalesce(a.cd_plano,0),
		coalesce(a.ie_clinica,0),
		coalesce(a.cd_empresa_ref,0),
		coalesce(nr_seq_grupo_lab,0),
		ie_credenciado,
		a.dt_referencia,
		coalesce(cd_tipo_acomodacao, 0);

BEGIN

select	coalesce(max(ie_prioridade_edicao_amb), 'N'),
	coalesce(max(ie_consiste_moeda),'N')
into STRICT	ie_prioridade_edicao_w,
	ie_consiste_moeda_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;


ie_origem_proced_w	:= ie_origem_proced_p;
dt_vigencia_w		:= coalesce(dt_vigencia_p, clock_timestamp());
/* obter estrutura do procedimento */

begin
select 	coalesce(cd_grupo_proc,0),
	coalesce(cd_especialidade,0),
	coalesce(cd_area_procedimento,0)
into STRICT	cd_grupo_w,
	cd_especialidade_w,
	cd_area_w
from	estrutura_procedimento_v
where	cd_procedimento 	= cd_procedimento_p
and	ie_origem_proced	= ie_origem_proced_w;
exception
     	when others then
	cd_grupo_w			:= 0;
end;

cd_moeda_w	:= null;

if (nr_seq_exame_lab_p IS NOT NULL AND nr_seq_exame_lab_p::text <> '') then
	begin
	
	select	nr_seq_grupo
	into STRICT	nr_seq_grupo_lab_w
	from	exame_laboratorio
	where	nr_seq_exame = nr_seq_exame_lab_p;
	
	exception
	when others then
		nr_seq_grupo_lab_w := 0;
	end;
end if;

if (ie_consiste_moeda_w = 'S') and (coalesce(cd_edicao_amb_p,0) > 0) then

	select	coalesce(max(ie_origem_proced),0)
	into STRICT	ie_origem_proc_edicao_w
	from	edicao_amb
	where	cd_edicao_amb = cd_edicao_amb_p;
	
	if (ie_origem_proc_edicao_w in (1,4)) then
	
		begin
		select	max(cd_moeda)
		into STRICT	cd_moeda_w
		from	preco_amb a
		where	a.cd_edicao_amb = cd_edicao_amb_p
		and	a.cd_procedimento = cd_procedimento_p
		and	coalesce(a.dt_inicio_vigencia,clock_timestamp() - interval '3650 days') =
					(SELECT	max(coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days'))
					from	preco_amb b
					where	b.cd_edicao_amb = cd_edicao_amb_p
					and	b.cd_procedimento = cd_procedimento_p
					and	ESTABLISHMENT_TIMEZONE_UTILS.startOfDay(dt_vigencia_w) between coalesce(b.dt_inicio_vigencia,clock_timestamp() - interval '3650 days') and coalesce(b.dt_final_vigencia, dt_vigencia_w));
		exception
			when others then
			cd_moeda_w:= null;
		end;
	end if;
end if;

/* trocar origem proced qdo cbhpm com ajuste amb ou invertido */


/* precisa incluir origem na chamada da define preco procedimento para eliminar */

if (cd_grupo_w			= 0)	and (cd_especialidade_w	= 0)	and (cd_area_w			= 0)	then
	begin
	qt_reg_w	:= 0;
	select 	 count(*)
	into STRICT	 qt_reg_w
	from	 procedimento
	where	 cd_procedimento	= cd_procedimento_p
	and	 ie_origem_proced	= ie_origem_proced_w;
	if (qt_reg_w	= 0) then
		 begin
		 if (ie_origem_proced_w = 1) then
			ie_origem_proced_w := 5;
		 elsif (ie_origem_proced_w = 5) then
			ie_origem_proced_w := 1;
		 end if;
		 /* obter estrutura do procedimento */

		 select coalesce(max(cd_grupo_proc),0),
			  coalesce(max(cd_especialidade),0),
			  coalesce(max(cd_area_procedimento),0)
		 into STRICT	  cd_grupo_w,
			  cd_especialidade_w,
			  cd_area_w
		 from	  estrutura_procedimento_v
		 where  cd_procedimento 	= cd_procedimento_p
		 and	  ie_origem_proced	= ie_origem_proced_w;
		 if (cd_grupo_w = 0) then
		 	ie_origem_proced_w	:= ie_origem_proced_p;
		 end if;
		 end;
	end if;
	end;
end if;
select 	obter_se_medico_credenciado(cd_estabelecimento_p, cd_medico_p, cd_convenio_p, null, null, null,cd_setor_atendimento_p,cd_plano_p, null,null,null,null)
into STRICT		ie_credenciado_w;
open c01;
loop
fetch c01 into
		vl_honorarios_w,
		vl_custo_oper_w,
		vl_filme_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		vl_honorarios1_w		:= vl_honorarios_w;
		vl_custo_oper1_w		:= vl_custo_oper_w;
		vl_filme1_w			:= vl_filme_w;
	end;
end loop;
close c01;
if (vl_honorarios1_w	= 0) then
	begin

	if (ie_prioridade_edicao_w = 'N') then
		begin
		select 	CASE WHEN coalesce(vl_ch_honorarios::text, '') = '' THEN 1 WHEN vl_ch_honorarios=0 THEN 1  ELSE vl_ch_honorarios END ,
       			CASE WHEN coalesce(vl_ch_custo_oper::text, '') = '' THEN 1 WHEN vl_ch_custo_oper=0 THEN 1  ELSE vl_ch_custo_oper END ,
       			coalesce(vl_filme,0)
		into STRICT	vl_honorarios1_w,
			vl_custo_oper1_w,
			vl_filme1_w
		from	convenio_amb
		where	cd_estabelecimento	= cd_estabelecimento_p
		and	cd_convenio			= cd_convenio_p
		and	cd_categoria		= cd_categoria_p
	      	and 	coalesce(ie_situacao,'A')= 'A'
		and	dt_inicio_vigencia	=
			(SELECT max(a.dt_inicio_vigencia)
			from	convenio_amb a
			where	a.cd_estabelecimento	= cd_estabelecimento_p
			and	a.cd_convenio		= cd_convenio_p
			and	a.cd_categoria		= cd_categoria_p
   			and 	coalesce(ie_situacao,'A')	= 'A'
			and	a.dt_inicio_vigencia	<= dt_vigencia_p);
		exception
     			when others then
				begin
				vl_honorarios1_w	:= 1;
				vl_custo_oper1_w	:= 1;
				vl_filme1_w		:= 1;
				end;
		end;	
	else
		begin
		SELECT * FROM obter_edicao_proc_conv(cd_estabelecimento_p, cd_convenio_p, cd_categoria_p, dt_vigencia_p, cd_procedimento_p, cd_edicao_amb_w, vl_honorarios1_w, vl_custo_oper1_w, vl_filme1_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w) INTO STRICT cd_edicao_amb_w, vl_honorarios1_w, vl_custo_oper1_w, vl_filme1_w, dt_inicio_vigencia_w, tx_ajuste_geral_w, nr_seq_cbhpm_edicao_w;

		end;
	end if;
	end;
end if;
vl_honorarios_p		:= vl_honorarios1_w;
vl_custo_oper_p		:= vl_custo_oper1_w;
vl_filme_p			:= vl_filme1_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_cotacao_moeda_convenio ( cd_estabelecimento_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, dt_vigencia_p timestamp, ie_previsto_realizado_p text, cd_setor_atendimento_p bigint, ie_tipo_atendimento_p bigint, cd_medico_p text, cd_usuario_convenio_p text, cd_plano_p text, ie_clinica_p bigint, cd_empresa_ref_p bigint, cd_edicao_amb_p bigint, nr_seq_proc_interno_p bigint, nr_seq_exame_lab_p bigint, cd_tipo_acomodacao_p bigint, vl_honorarios_p INOUT bigint, vl_custo_oper_p INOUT bigint, vl_filme_p INOUT bigint) FROM PUBLIC;

