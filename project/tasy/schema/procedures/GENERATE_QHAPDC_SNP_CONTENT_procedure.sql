-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE generate_qhapdc_snp_content (nr_seq_dataset_p bigint , nm_usuario_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) AS $body$
DECLARE

  ds_segment_w                 varchar(32767);
  ds_segment_clob_w            text := '';
  is_clob_insertion_successful bigint := 0;
  excp_caught_dataset_clob_ins varchar(500 );

BEGIN
    BEGIN 
        SELECT 'N' --Record Identifier  
               || Lpad(nr_atendimento, 12, '0') -- Unique Number  
               || Lpad(Obter_pessoa_atendimento(nr_atendimento, 'C'), 8, '0') 
               --Patient Identifier  
               || Lpad(nr_atendimento, 12, '0') --Admission Number  
               || CASE WHEN coalesce(an_snap_group::text, '') = '' THEN  '001'  ELSE Lpad(trim(both an_snap_group), 3, '0') END  
               -- Please note we are using an_snap_group as snap episode number as this field is not currently used
               || trim(both snap_type) 
               || '   ' 
               || CASE WHEN coalesce(dt_snap_start::text, '') = '' THEN  '        '  ELSE To_char(dt_snap_start, 'yyyymmdd') END  
               || CASE WHEN coalesce(dt_snap_end::text, '') = '' THEN  '        '  ELSE To_char(dt_snap_end, 'yyyymmdd') END  
               || CASE WHEN coalesce(multidisc_care_plan_flag::text, '') = '' THEN  'U'  ELSE trim(both multidisc_care_plan_flag) END  
               || CASE WHEN coalesce(dt_multidisc_care_plan::text, '') = '' THEN  '        '  ELSE To_char(dt_multidisc_care_plan,                                                  'yyyymmdd') END  
               || CASE WHEN coalesce(principal_ref_service::text, '') = '' THEN  '   '  ELSE Rpad(trim(both principal_ref_service)                                                 , 3,                                                 '0'                                                 ) END  
               || CASE WHEN coalesce(primary_impair_type::text, '') = '' THEN  '       '  ELSE Rpad(trim(both primary_impair_type), 7,                                               ' '                                               ) END  
               || CASE WHEN coalesce(ie_clinical_only::text, '') = '' THEN  '1'  ELSE trim(both ie_clinical_only) END  
               || Chr(10) 
        INTO STRICT   ds_segment_w 
        FROM   qhapdc_segment_snp 
        WHERE  nr_dataset = nr_seq_dataset_p;
    EXCEPTION 
        WHEN OTHERS THEN 
          ds_segment_w := NULL;
    END;

    SELECT Concat(ds_segment_clob_w, ds_segment_w) 
    INTO STRICT   ds_segment_clob_w 
;

    SELECT * FROM Insert_dataset_content(nm_usuario_p, nr_seq_dataset_p, ds_segment_clob_w, is_clob_insertion_successful, excp_caught_dataset_clob_ins) INTO STRICT is_clob_insertion_successful, excp_caught_dataset_clob_ins;

    IF ( is_clob_insertion_successful = 1 ) THEN 
      returned_value_p := 1;

      other_exception_p := NULL;
    ELSE 
      IF (excp_caught_dataset_clob_ins IS NOT NULL AND excp_caught_dataset_clob_ins::text <> '') THEN 
        returned_value_p := 0;

        other_exception_p := excp_caught_dataset_clob_ins;
      END IF;
    END IF;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE generate_qhapdc_snp_content (nr_seq_dataset_p bigint , nm_usuario_p text, returned_value_p INOUT bigint, other_exception_p INOUT text) FROM PUBLIC;

