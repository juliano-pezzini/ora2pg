-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_encerrar_analise ( nr_seq_analise_p bigint, ie_opcao_p text, nm_usuario_p text) AS $body$
DECLARE


qt_solicitacoes_w		integer	:= 0;
nr_seq_proposta_w		bigint;
qt_propostas_w			integer	:= 0;
ie_status_prop_w		varchar(10);
cd_estabelecimento_w		bigint;
ie_encerra_sem_acao_w		varchar(2);
qt_preexistencia_w		bigint;
qt_acao_cpt_w			bigint;
qt_acao_agravo_w		bigint;
qt_analise_w			bigint;
nr_seq_pessoa_proposta_w	bigint;
nr_seq_preexistencia_w		bigint;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_segurado_pericia_w	pls_segurado.nr_sequencia%type;
nr_seq_prop_online_w		pls_proposta_online.nr_sequencia%type;
nr_seq_prop_benef_online_w	pls_proposta_benef_online.nr_sequencia%type;
ie_copiar_anexo_analise_prop_w	pls_parametros.ie_copiar_anexo_analise_prop%type;
ie_estagio_w			pls_proposta_online.ie_estagio%type;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_analise_preexistencia
	where	nr_seq_analise		= nr_seq_analise_p
	and	ie_acao_sugerida	= 'CA';


BEGIN
ie_encerra_sem_acao_w		:= coalesce(obter_valor_param_usuario(1236, 17, Obter_Perfil_Ativo, nm_usuario_p, 0),'N');

select	nr_seq_proposta,
	cd_estabelecimento,
	nr_seq_pessoa_proposta,
	nr_seq_segurado,
	nr_seq_prop_online,
	nr_seq_prop_benef_online
into STRICT	nr_seq_proposta_w,
	cd_estabelecimento_w,
	nr_seq_pessoa_proposta_w,
	nr_seq_segurado_w,
	nr_seq_prop_online_w,
	nr_seq_prop_benef_online_w
from	pls_analise_adesao
where	nr_sequencia = nr_seq_analise_p;

select	coalesce(max(ie_copiar_anexo_analise_prop),'N')
into STRICT	ie_copiar_anexo_analise_prop_w
from	pls_parametros
where	cd_estabelecimento = cd_estabelecimento_w;

--Analise do beneficiario da solicitacao de proposta online
if (nr_seq_prop_online_w IS NOT NULL AND nr_seq_prop_online_w::text <> '') then
	if (ie_opcao_p	= 'E') then
		update	pls_analise_adesao
		set	ie_status	= 'E',
			dt_encerramento	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_analise_p;
		
		select	count(1)
		into STRICT	qt_analise_w
		from	pls_analise_adesao
		where	nr_seq_prop_online	= nr_seq_prop_online_w
		and	ie_status		<> 'E';
		
		if (qt_analise_w	= 0) then
			update	pls_proposta_online
			set	ie_estagio	= 'EA',
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_prop_online_w;
		end if;
		
		CALL hpms_proposal_request_pck.wsuite_generate_hist_proposal(nr_seq_prop_online_w, nr_seq_prop_benef_online_w, wheb_mensagem_pck.get_texto(1125979) || ' em ' ||
			to_char(clock_timestamp(), 'dd/MM/yyyy')||', pelo ' || lower(wheb_mensagem_pck.get_texto(1125983)) || ' ' || nm_usuario_p||'.', nm_usuario_p, 'N');
		
		if (ie_copiar_anexo_analise_prop_w = 'S') then
			insert into pls_proposta_anexo_online(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
				nm_usuario, nm_usuario_nrec, ie_tipo_anexo,
				nr_seq_prop_benef_online, ds_diretorio, dt_criacao,
				nr_seq_prop_online)
			SELECT	nextval('pls_proposta_anexo_online_seq'), clock_timestamp(), clock_timestamp(),
				nm_usuario_p, nm_usuario_p, 'PA',
				nr_seq_prop_benef_online_w, ds_arquivo, dt_arquivo,
				nr_seq_prop_online_w
			from	pls_analise_anexo
			where	nr_seq_analise = nr_seq_analise_p;
		end if;
	elsif (ie_opcao_p	= 'D') then
		update	pls_analise_adesao
		set	ie_status	= 'C',
			dt_encerramento	 = NULL,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_analise_p;
		
		select	ie_estagio
		into STRICT	ie_estagio_w
		from	pls_proposta_online
		where	nr_sequencia = nr_seq_prop_online_w;
		
		if (ie_estagio_w	= 'EA') then
			update	pls_proposta_online
			set	ie_estagio	= 'AA',
				dt_atualizacao	= clock_timestamp(),
				nm_usuario	= nm_usuario_p
			where	nr_sequencia	= nr_seq_prop_online_w;
		end if;
	end if;
--Analise do beneficiario da proposta de adesao
else
	if (ie_opcao_p	= 'E') then /* Encerrar analise */
		if (ie_encerra_sem_acao_w = 'N') then
			select	count(*)
			into STRICT	qt_preexistencia_w
			from	pls_analise_preexistencia
			where	nr_seq_analise		= nr_seq_analise_p
			and	ie_acao_sugerida	= 'CA';
			
			if (qt_preexistencia_w > 0) then
				open C01;
				loop
				fetch C01 into
					nr_seq_preexistencia_w;
				EXIT WHEN NOT FOUND; /* apply on C01 */
					begin
					select	count(*)
					into STRICT	qt_acao_agravo_w
					from	pls_analise_adesao		b,
						pls_analise_preexistencia 	p
					where	b.nr_sequencia	= p.nr_seq_analise
					and	b.nr_sequencia	= nr_seq_analise_p
					and	p.ie_acao_sugerida	= 'CA'
					and	p.nr_sequencia		= nr_seq_preexistencia_w
					and	not exists (	SELECT	1
								from	pls_analise_agravo v
								where	v.nr_seq_analise_preexist = p.nr_sequencia
								and	v.nr_seq_analise = b.nr_sequencia);
					
					select	count(*)
					into STRICT	qt_acao_cpt_w
					from	pls_analise_adesao		b,
						pls_analise_preexistencia 	p
					where	b.nr_sequencia	= p.nr_seq_analise
					and	b.nr_sequencia	= nr_seq_analise_p
					and	p.ie_acao_sugerida	= 'CA'
					and	p.nr_sequencia		= nr_seq_preexistencia_w
					and	not exists (	SELECT	1
								from	pls_carencia t
								where	t.nr_seq_analise_preexist	= p.nr_sequencia
								and (t.nr_seq_pessoa_proposta	= nr_seq_pessoa_proposta_w or coalesce(t.nr_seq_pessoa_proposta::text, '') = ''));
					if (qt_acao_cpt_w > 0) and (qt_acao_agravo_w > 0) then
						CALL wheb_mensagem_pck.exibir_mensagem_abort(265269);
						--Mensagem: Existe(m) DLP(s) que necessitam de uma acao, porem nao ha uma acao informada!'
					end if;
					end;
				end loop;
				close C01;
			end if;
		end if;
		
		select	count(*)
		into STRICT	qt_solicitacoes_w
		from	pls_analise_solicitacao
		where	nr_seq_analise	= nr_seq_analise_p
		and	coalesce(dt_conclusao::text, '') = '';
		
		if (qt_solicitacoes_w	> 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(265268);
			--Mensagem: Existe solicitacoes abertas, e necessario que todas estejam concluidas. Processo abortado.
		end if;
		
		update	pls_analise_adesao
		set	ie_status	= 'E',
			dt_encerramento	= clock_timestamp(),
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_analise_p;
		
		/*Gerar os agravos da analise para o beneficiario da proposta*/

		if (nr_seq_proposta_w IS NOT NULL AND nr_seq_proposta_w::text <> '') then
			CALL pls_gerar_agravo_benef_prop(nr_seq_analise_p,'G',cd_estabelecimento_w,nm_usuario_p);
		else
			CALL pls_gerar_agravo_benef(nr_seq_analise_p,'G',cd_estabelecimento_w,nm_usuario_p);
		end if;
		/*Ao encerrar uma analise verifica-se se ha mais analises em aberto da proposta e se nao houver modifica-se para Analise Enecerrada.*/

		if (nr_seq_proposta_w IS NOT NULL AND nr_seq_proposta_w::text <> '') then
			select	count(*)
			into STRICT	qt_propostas_w
			from	pls_analise_adesao
			where	nr_seq_proposta = nr_seq_proposta_w
			and	ie_status	<> 'E';
			if (qt_propostas_w = 0) then
				select	ie_status
				into STRICT	ie_status_prop_w
				from	pls_proposta_adesao
				where	nr_sequencia	= nr_seq_proposta_w;
				
				if (ie_status_prop_w <> 'T') then
					update	pls_proposta_adesao
					set	ie_status  = 'M'
					where	nr_sequencia = nr_seq_proposta_w;
				end if;
			end if;
		end if;
		
		if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
			update	pls_carencia
			set	nr_seq_segurado = nr_seq_segurado_w
			where 	nr_seq_analise_adesao = nr_seq_analise_p
			and	coalesce(nr_seq_segurado::text, '') = '';
		end if;
		
		if (nr_seq_pessoa_proposta_w IS NOT NULL AND nr_seq_pessoa_proposta_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_segurado_pericia_w
			from	pls_segurado
			where	nr_seq_pessoa_proposta	= nr_seq_pessoa_proposta_w
			and	ie_tipo_segurado	= 'P';
			
			if (nr_seq_segurado_pericia_w IS NOT NULL AND nr_seq_segurado_pericia_w::text <> '') then
				update	pls_segurado
				set	dt_rescisao			= clock_timestamp(),
					dt_limite_utilizacao		= clock_timestamp(),
					nm_usuario			= nm_usuario_p,
					dt_atualizacao			= clock_timestamp(),
					ie_situacao_atend		= 'I'
				where	nr_sequencia			= nr_seq_segurado_pericia_w;

				CALL pls_gerar_segurado_historico(	nr_seq_segurado_pericia_w, '1', clock_timestamp(), wheb_mensagem_pck.get_texto(1125981),
								wheb_mensagem_pck.get_texto(1125982), null, null, null,
								null, clock_timestamp(), null, null,
								null, null, null, null,
								nm_usuario_p, 'N');
			end if;
		end if;
	
		if (ie_copiar_anexo_analise_prop_w = 'S') then
			insert into pls_proposta_benef_anexo(nr_sequencia, dt_atualizacao, dt_atualizacao_nrec,
				nm_usuario, nm_usuario_nrec, dt_anexo,
				ds_anexo, nr_seq_beneficiario)
			SELECT	nextval('pls_proposta_benef_anexo_seq'), clock_timestamp(), clock_timestamp(),
				nm_usuario_p, nm_usuario_p, dt_arquivo,
				ds_arquivo, nr_seq_pessoa_proposta_w
			from	pls_analise_anexo
			where	nr_seq_analise = nr_seq_analise_p;
		end if;
	elsif (ie_opcao_p	= 'D') then /* Desfazer liberacao da analise */
		update	pls_analise_adesao
		set	ie_status	= 'C',
			dt_encerramento	 = NULL,
			nm_usuario	= nm_usuario_p,
			dt_atualizacao	= clock_timestamp()
		where	nr_sequencia	= nr_seq_analise_p;
		
		/*Desfazer os agravos da analise para o beneficiario da proposta*/

		if (nr_seq_proposta_w IS NOT NULL AND nr_seq_proposta_w::text <> '') then
			CALL pls_gerar_agravo_benef_prop(nr_seq_analise_p,'D',cd_estabelecimento_w,nm_usuario_p);
			/*Modifica o stautus da proposta para Em analise de Adesao
			Caso a proposta nao estaja Contratada*/
			
			select	ie_status
			into STRICT	ie_status_prop_w
			from	pls_proposta_adesao
			where	nr_sequencia	= nr_seq_proposta_w;
			
			if (ie_status_prop_w <> 'T') then
				update	pls_proposta_adesao
				set	ie_status  = 'N'
				where	nr_sequencia = nr_seq_proposta_w;
			end if;
		else
			CALL pls_gerar_agravo_benef(nr_seq_analise_p,'D',cd_estabelecimento_w,nm_usuario_p);
		end if;
		
		update	pls_carencia
		set	nr_seq_segurado  = NULL
		where 	nr_seq_analise_adesao = nr_seq_analise_p
		and	nr_seq_segurado = nr_seq_segurado_w;
	end if;
	
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_encerrar_analise ( nr_seq_analise_p bigint, ie_opcao_p text, nm_usuario_p text) FROM PUBLIC;

