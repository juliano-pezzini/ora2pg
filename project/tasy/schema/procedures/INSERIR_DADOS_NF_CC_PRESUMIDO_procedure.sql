-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE inserir_dados_nf_cc_presumido ( nr_sequencia_p bigint) AS $body$
DECLARE


vl_pis_retido_w		double precision;
vl_pis_nao_retido_w	double precision;
vl_base_calculo_w	double precision;
vl_aliquota_w		double precision;
vl_tributo_w		double precision;
vl_tributo_nao_retido_w	double precision;
vl_cofins_retido_w	double precision;
vl_cofins_nao_retido_w	double precision;
vl_iss_retido_w		double precision;
vl_iss_nao_retido_w	double precision;
cd_conta_contabil_w	varchar(10);
cd_estabelecimento_w	smallint;
cd_tributo_w		smallint;
contador_w		bigint;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
ie_soma_diminui_w		varchar(1);
nr_seq_nota_w		bigint;
vl_adicional_w		varchar(20);
vl_desconto_w		varchar(20);
vl_saldo_w		double precision;
nr_nota_fiscal_w		nota_fiscal.nr_nota_fiscal%type;
vl_base_w		nota_fiscal.vl_total_nota%type;
vl_receber_w		titulo_receber.vl_titulo%type;
vl_recebido_w		titulo_receber_liq.vl_recebido%type;
vl_recebido_base_w	titulo_receber_liq.vl_recebido%type;
dt_recebimento_w		titulo_receber_liq.dt_recebimento%type;
ie_all_invoice_w	fis_tributo_presumido.ie_all_invoice%type;
cd_empresa_w		estabelecimento.cd_empresa%type;
ie_filter_by_estab_w	fis_tributo_presumido.ie_filter_by_estab%type;


C01 CURSOR FOR
	
	SELECT	n.nr_sequencia
	from	nota_fiscal n,
		nota_fiscal_trib b,
		tributo d,
		operacao_nota o
	where	n.nr_sequencia = b.nr_sequencia
	and	n.cd_operacao_nf = o.cd_operacao_nf
	and	b.cd_tributo = d.cd_tributo
	and	o.ie_servico = 'S'
	and	o.ie_operacao_fiscal = 'S'
	and	n.ie_situacao = 1
	and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')
	and	trunc(n.dt_emissao) between to_char(dt_inicial_w, 'dd/mm/yyyy') and fim_dia(to_char(dt_final_w, 'dd/mm/yyyy'))
	and	d.cd_tributo = cd_tributo_w
	and	obter_empresa_estab(n.cd_estabelecimento) = cd_empresa_w
	and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and n.cd_estabelecimento = cd_estabelecimento_w))
	and	b.vl_tributo > 0
	order by 	n.nr_nota_fiscal;

C02 CURSOR FOR

	SELECT	a.cd_conta_contabil,
		a.vl_saldo,
		c.ie_soma_diminui
	from	tributo_regra_ctb c,
		tributo d,
		ctb_mes_ref b,
		ctb_saldo a
	where	b.nr_sequencia = a.nr_seq_mes_ref
	and	c.cd_conta_contabil = a.cd_conta_contabil
	and	c.cd_tributo = d.cd_tributo
	and	b.cd_empresa = obter_empresa_estab(cd_estabelecimento_w)
	and	to_char(b.dt_referencia,'mm/yyyy') = to_char(dt_final_w, 'mm/yyyy')
	and	a.cd_estabelecimento = cd_estabelecimento_w
	and	d.cd_tributo = cd_tributo_w;
		
C03 CURSOR FOR

	SELECT	n.nr_sequencia,
		max(n.nr_nota_fiscal) nr_nota_fiscal,
		max(b.vl_base_calculo) vl_base,
		max(r.vl_titulo) vl_receber,
		sum(l.vl_recebido) vl_recebido,
		max(l.dt_recebimento) dt_recebimento
	from	nota_fiscal n,
		nota_fiscal_trib b,
		tributo d,
		operacao_nota o,
		titulo_receber r,
		titulo_receber_liq l
	where	n.nr_sequencia = b.nr_sequencia
	and	n.cd_operacao_nf = o.cd_operacao_nf
	and	b.cd_tributo = d.cd_tributo
	and	obter_empresa_estab(n.cd_estabelecimento) = cd_empresa_w
	and 	((ie_filter_by_estab_w = 'N') or (ie_filter_by_estab_w = 'S' and n.cd_estabelecimento = cd_estabelecimento_w))
	and	o.ie_servico = 'S'
	and	o.ie_operacao_fiscal = 'S'
	and	n.ie_situacao = 1
	and	(n.dt_atualizacao_estoque IS NOT NULL AND n.dt_atualizacao_estoque::text <> '')
	and	d.cd_tributo = cd_tributo_w
	and	b.vl_tributo > 0
	and 	r.nr_titulo = l.nr_titulo
	and 	r.nr_seq_nf_saida = b.nr_sequencia
	and	trunc(l.dt_recebimento) between to_char(dt_inicial_w, 'dd/mm/yyyy') and fim_dia(to_char(dt_final_w, 'dd/mm/yyyy'))	
	group by	n.nr_sequencia
	order by 	nr_nota_fiscal;	
	

BEGIN

contador_w := 0;

select 	cd_estabelecimento,
	cd_tributo,
	dt_inicio,
	dt_fim,
	ie_filter_by_estab
into STRICT	cd_estabelecimento_w,
	cd_tributo_w,
	dt_inicial_w,
	dt_final_w,
	ie_filter_by_estab_w
from	fis_tributo_presumido
where	nr_sequencia = nr_sequencia_p;

cd_empresa_w := obter_empresa_estab(cd_estabelecimento_w);

open C01;
loop
fetch C01 into
	nr_seq_nota_w;
EXIT WHEN NOT FOUND; /* apply on C01 */	
	
insert into fis_tributo_presumido_nf(
				nr_sequencia,
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_trib_presumido, 
				nr_seq_nota_fiscal,
				ie_tipo_apuracao
				)
values (
				nextval('fis_tributo_presumido_nf_seq'),
				clock_timestamp(),
				'Tasy',
				clock_timestamp(),
				'Tasy',
				nr_sequencia_p,
				nr_seq_nota_w,
				'E'
				);
contador_w := contador_w + 1;

if (mod(contador_w,100) = 0) then
	commit;
end if;

end loop;
close C01;
commit;

open C03;
loop
fetch C03 into
	nr_seq_nota_w,
	nr_nota_fiscal_w,
	vl_base_w,		
	vl_receber_w,	
	vl_recebido_w,
	dt_recebimento_w;	
EXIT WHEN NOT FOUND; /* apply on C03 */	

vl_recebido_base_w := vl_recebido_w;

vl_recebido_w := (vl_recebido_w / vl_receber_w) * vl_base_w;
	
insert into fis_tributo_presumido_nf(
				nr_sequencia,
				dt_atualizacao, 
				nm_usuario, 
				dt_atualizacao_nrec, 
				nm_usuario_nrec, 
				nr_seq_trib_presumido, 
				nr_seq_nota_fiscal,
				ie_tipo_apuracao,
				dt_recebimento,
				vl_base_recebimento,
				vl_recebimento
				)
values (
				nextval('fis_tributo_presumido_nf_seq'),
				clock_timestamp(),
				'Tasy',
				clock_timestamp(),
				'Tasy',
				nr_sequencia_p,
				nr_seq_nota_w,
				'R',
				dt_recebimento_w,
				vl_recebido_base_w,		
				vl_recebido_w			
				);
contador_w := contador_w + 1;

if (mod(contador_w,100) = 0) then
	commit;
end if;

end loop;
close C03;
commit;

	open C02;
	loop
	fetch C02 into
		cd_conta_contabil_w,
		vl_saldo_w,
		ie_soma_diminui_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */	

	insert into fis_tributo_presumido_ct(
					nr_sequencia,
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					cd_conta_contabil, 
					vl_saldo, 
					ie_soma_dimnui, 
					nr_seq_trib_presumido
					)
	values (
					nextval('fis_tributo_presumido_ct_seq'),
					clock_timestamp(),
					'Tasy',
					clock_timestamp(),
					'Tasy',
					cd_conta_contabil_w,
					vl_saldo_w,
					ie_soma_diminui_w,
					nr_sequencia_p
					);
	if (mod(contador_w,100) = 0) then
		commit;
	end if;
	end loop;
	close C02;
	commit;

select 	vl_adicional,
	vl_desconto,
	ie_all_invoice
into STRICT	vl_adicional_w,
	vl_desconto_w,
	ie_all_invoice_w
from 	fis_tributo_presumido
where	nr_sequencia = nr_sequencia_p;	

update fis_tributo_presumido set dt_geracao = clock_timestamp()
where nr_sequencia = nr_sequencia_p;

if ((obter_tipo_tributo(cd_tributo_w) = 'IR') or (obter_tipo_tributo(cd_tributo_w) = 'CSLL')) then
	update fis_tributo_presumido set vl_tributo = calcular_ir_csll_presumido(cd_estabelecimento_w, to_char(dt_inicial_w, 'dd/mm/yyyy'), to_char(dt_final_w,'dd/mm/yyyy'), null, vl_adicional_w, vl_desconto_w, 65, cd_tributo_w, 2)
	where nr_sequencia = nr_sequencia_p;

	update fis_tributo_presumido set vl_base_calculo = calcular_ir_csll_presumido(cd_estabelecimento_w, to_char(dt_inicial_w,'dd/mm/yyyy'), to_char(dt_final_w,'dd/mm/yyyy'), null, vl_adicional_w, vl_desconto_w, 5, cd_tributo_w, 2)
	where nr_sequencia = nr_sequencia_p;
end if;

if (obter_tipo_tributo(cd_tributo_w) = 'PIS') then

	vl_pis_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TNPR'),0);

	vl_pis_nao_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TNSPR'),0);

	update fis_tributo_presumido set vl_base_calculo = (vl_pis_retido_w + vl_pis_nao_retido_w)
	where nr_sequencia = nr_sequencia_p;
	
	if (ie_all_invoice_w = 'S') then
		vl_base_calculo_w := vl_pis_retido_w + vl_pis_nao_retido_w;
		vl_aliquota_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'AP'),0);
		
		vl_tributo_w := (vl_aliquota_w/100) * vl_base_calculo_w;
		
	else
		vl_aliquota_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'AP'),0);
		vl_base_calculo_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TBC'),0);
		
		vl_tributo_w := (vl_aliquota_w/100) * vl_base_calculo_w;

	end if;
	
	vl_tributo_nao_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TPR'),0);

	update fis_tributo_presumido
	set vl_tributo = (vl_tributo_w - vl_tributo_nao_retido_w)
	where nr_sequencia = nr_sequencia_p;
end if;

if (obter_tipo_tributo(cd_tributo_w) = 'COFINS') then
	
	vl_cofins_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TNCR'),0);
	
	vl_cofins_nao_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TNSCR'),0);
	
	update fis_tributo_presumido set vl_base_calculo = (vl_cofins_retido_w + vl_cofins_nao_retido_w)
	where nr_sequencia = nr_sequencia_p;
	
	if (ie_all_invoice_w = 'S') then
		vl_base_calculo_w := vl_cofins_retido_w + vl_cofins_nao_retido_w;
		vl_aliquota_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'AC'),0);
		vl_tributo_w := (vl_aliquota_w/100) * vl_base_calculo_w;
	else
		vl_aliquota_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'AC'),0);
		vl_base_calculo_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TBC'),0);
		vl_tributo_w := (vl_aliquota_w/100) * vl_base_calculo_w;
	end if;
	
	vl_tributo_nao_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TCR'),0);

	update fis_tributo_presumido
	set vl_tributo = (vl_tributo_w - vl_tributo_nao_retido_w)
	where nr_sequencia = nr_sequencia_p;

end if;

if (obter_tipo_tributo(cd_tributo_w) = 'ISS') then
	
	vl_iss_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TNIR'),0);
	
	vl_iss_nao_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TNSIR'),0);

	update fis_tributo_presumido set vl_base_calculo = (vl_iss_retido_w + vl_iss_nao_retido_w)
	where nr_sequencia = nr_sequencia_p;
	
	if (ie_all_invoice_w = 'S') then
		vl_base_calculo_w := vl_iss_retido_w + vl_iss_nao_retido_w;
		vl_aliquota_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'AI'),0);
		vl_tributo_w := (vl_aliquota_w/100) * vl_base_calculo_w;
	else
		vl_aliquota_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'AI'),0);
		vl_base_calculo_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TBC'),0);
		vl_tributo_w := (vl_aliquota_w/100) * vl_base_calculo_w;
	end if;
	
	vl_tributo_nao_retido_w := coalesce(calcular_pis_cofins_presumido(nr_sequencia_p, 'TIR'),0);

	update fis_tributo_presumido set vl_tributo = (vl_tributo_w - vl_tributo_nao_retido_w)
	where nr_sequencia = nr_sequencia_p;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE inserir_dados_nf_cc_presumido ( nr_sequencia_p bigint) FROM PUBLIC;

