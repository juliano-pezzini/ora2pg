-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE tiss_gerar_guia_prest_proc (cd_estabelecimento_p bigint, cd_convenio_p bigint, ie_tiss_tipo_guia_p text, nr_interno_conta_p bigint, nr_seq_procedimento_p bigint, nr_seq_partic_p bigint, ie_honorario_p text, nm_usuario_p text) AS $body$
DECLARE


nr_guia_prest_w		varchar(60);
nr_sequencia_w		bigint;
nr_atual_w		bigint;
ie_forma_w		varchar(3);
ds_campo_w		varchar(255);
nr_doc_convenio_w	varchar(20);
qt_w			bigint;
ds_nao_informada_w	varchar(255);

c01 CURSOR FOR
SELECT	nr_sequencia,
	nr_atual,
	ie_forma
from	tiss_regra_guia_prest
where	cd_estabelecimento					= cd_estabelecimento_p
and	cd_convenio						= cd_convenio_p
and	coalesce(ie_tiss_tipo_guia,coalesce(ie_tiss_tipo_guia_p,'X'))	= coalesce(ie_tiss_tipo_guia_p,'X')
order by coalesce(ie_tiss_tipo_guia,'X');


BEGIN

nr_guia_prest_w	:= null;

open c01;
loop
fetch c01 into
	nr_sequencia_w,
	nr_atual_w,
	ie_forma_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
end loop;
close c01;

ds_nao_informada_w	:= wheb_mensagem_pck.get_texto(305913);

if (ie_forma_w = '15') then

	if (coalesce(nr_seq_partic_p::text, '') = '') then

		if (ie_honorario_p = 'N') then
			select	max(nr_doc_convenio)
			into STRICT	nr_doc_convenio_w
			from	procedimento_paciente
			where	nr_sequencia	= nr_seq_procedimento_p;

			ds_campo_w	:= 'NR_GUIA_PRESTADOR';

			begin
			select	substr(t.vl_campo,1,20)
			into STRICT	nr_guia_prest_w
			from	procedimento_paciente a,
				proc_paciente_tiss t
			where	a.nr_interno_conta				= nr_interno_conta_p
			and	a.nr_sequencia					= t.nr_seq_procedimento
			and	t.ds_campo					= ds_campo_w
			and	coalesce(a.nr_doc_convenio,ds_nao_informada_w)	= coalesce(nr_doc_convenio_w,ds_nao_informada_w)
			and	a.ie_tiss_tipo_guia				= ie_tiss_tipo_guia_p  LIMIT 1;
			exception
			when others then
				nr_guia_prest_w					:= null;
			end;

		else
			select	max(coalesce(nr_doc_honor_conv,nr_doc_convenio))
			into STRICT	nr_doc_convenio_w
			from	procedimento_paciente
			where	nr_sequencia	= nr_seq_procedimento_p;

			ds_campo_w	:= 'NR_GUIA_PRESTADOR_HONOR';

			begin
			select	substr(t.vl_campo,1,20)
			into STRICT	nr_guia_prest_w
			from	procedimento_paciente a,
				proc_paciente_tiss t
			where	a.nr_interno_conta		= nr_interno_conta_p
			and	a.nr_sequencia			= t.nr_seq_procedimento
			and	t.ds_campo			= ds_campo_w
			and	coalesce(coalesce(a.nr_doc_honor_conv,a.nr_doc_convenio),ds_nao_informada_w)		= coalesce(nr_doc_convenio_w,ds_nao_informada_w)
			and	a.ie_tiss_tipo_guia_honor	= ie_tiss_tipo_guia_p  LIMIT 1;
			exception
			when others then
				nr_guia_prest_w			:= null;
			end;
		end if;
	else
		select	max(b.nr_doc_honor_conv)
		into STRICT	nr_doc_convenio_w
		from	procedimento_paciente a,
			procedimento_participante b
		where	a.nr_sequencia	= b.nr_sequencia
		and	a.nr_sequencia	= nr_seq_procedimento_p
		and	b.nr_seq_partic	= nr_seq_partic_p;

		ds_campo_w	:= 'NR_GUIA_PRESTADOR';

		begin
		select	substr(t.vl_campo,1,20)
		into STRICT	nr_guia_prest_w
		from	procedimento_paciente a,
			procedimento_participante b,
			proc_paciente_tiss t
		where	a.nr_interno_conta				= nr_interno_conta_p
		and	a.nr_sequencia					= t.nr_seq_procedimento
		and	b.nr_seq_partic					= t.nr_seq_partic
		and	a.nr_sequencia					= b.nr_sequencia
		and	t.ds_campo					= ds_campo_w
		and	coalesce(b.nr_doc_honor_conv,ds_nao_informada_w)	= coalesce(nr_doc_convenio_w,ds_nao_informada_w)
		and	b.ie_tiss_tipo_guia				= ie_tiss_tipo_guia_p  LIMIT 1;
		exception
		when others then
			nr_guia_prest_w					:= null;
		end;

	end if;

	select	count(*)
	into STRICT	qt_w
	from	proc_paciente_tiss
	where	nr_seq_procedimento 				= nr_seq_procedimento_p
	and	ie_tiss_tipo_guia				= ie_tiss_tipo_guia_p
	and	ds_campo					= ds_campo_w
	and	coalesce(nr_seq_partic,coalesce(nr_seq_partic_p,0))	= coalesce(nr_seq_partic_p,0);

	if (qt_w = 0) and (nr_atual_w IS NOT NULL AND nr_atual_w::text <> '') then
		if (coalesce(nr_guia_prest_w::text, '') = '') then

			nr_guia_prest_w	:= nr_atual_w;

			update	tiss_regra_guia_prest
			set	nr_atual 	= nr_atual_w + 1,
				dt_atualizacao	= clock_timestamp()
			where	nr_sequencia	= nr_sequencia_w;
		end if;

		insert into proc_paciente_tiss(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			nr_seq_procedimento,
			nr_seq_partic,
			ds_campo,
			vl_campo,
			ie_tiss_tipo_guia)
		values (nextval('proc_paciente_tiss_seq'),
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			nr_seq_procedimento_p,
			nr_seq_partic_p,
			ds_campo_w,
			nr_guia_prest_w,
			ie_tiss_tipo_guia_p);

	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE tiss_gerar_guia_prest_proc (cd_estabelecimento_p bigint, cd_convenio_p bigint, ie_tiss_tipo_guia_p text, nr_interno_conta_p bigint, nr_seq_procedimento_p bigint, nr_seq_partic_p bigint, ie_honorario_p text, nm_usuario_p text) FROM PUBLIC;

