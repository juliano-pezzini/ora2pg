-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE consistir_tempo_duracao_proced (cd_agenda_p bigint, cd_profissional_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_pessoa_fisica_p text, nr_min_duracao_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, nr_seq_agenda_p bigint default null, ds_consistencia_p INOUT text DEFAULT NULL) AS $body$
DECLARE


nr_seq_tempo_w		bigint := 0;
nr_min_duracao_w	bigint := 0;
ds_consistencia_w	varchar(255):='';
ds_exame_w		varchar(255);
qt_anos_w		integer;
dt_agenda_w		timestamp;
ie_dia_semana_w		smallint;



BEGIN

if (nr_seq_agenda_p IS NOT NULL AND nr_seq_agenda_p::text <> '') then

	select	max(hr_inicio)
	into STRICT	dt_agenda_w
	from	agenda_paciente
	where	nr_sequencia = nr_seq_agenda_p;

	if (dt_agenda_w IS NOT NULL AND dt_agenda_w::text <> '') then
		ie_dia_semana_w	:= obter_cod_dia_semana(dt_agenda_w);
	else
		ie_dia_semana_w	:= null;
	end if;

end if;

if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and
	((cd_procedimento_p IS NOT NULL AND cd_procedimento_p::text <> '' AND ie_origem_proced_p IS NOT NULL AND ie_origem_proced_p::text <> '') or (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '')) and (nr_min_duracao_p IS NOT NULL AND nr_min_duracao_p::text <> '') then
	/* obter se duracao */

	begin
	select	(obter_idade(dt_nascimento, clock_timestamp(), 'A'))::numeric
	into STRICT	qt_anos_w
	from	pessoa_fisica
	where	cd_pessoa_fisica = cd_pessoa_fisica_p;
	exception
	when others then
		qt_anos_w := 0;
	end;

	if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') and (nr_seq_proc_interno_p > 0) then
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_tempo_w
		from	tempo_procedimento
		where	nr_seq_proc_interno = nr_seq_proc_interno_p
		and	coalesce(cd_procedimento::text, '') = ''
		and	coalesce(ie_origem_proced::text, '') = ''
		and	((cd_agenda = cd_agenda_p) or (coalesce(cd_agenda::text, '') = ''))
		and	((cd_pessoa_fisica = cd_profissional_p) or (coalesce(cd_pessoa_fisica::text, '') = ''))
		and	qt_anos_w  between coalesce(qt_idade_minima,0) and coalesce(qt_idade_maxima,999)
		and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
		and	coalesce(cd_categoria,cd_categoria_p)			= cd_categoria_p
		and	coalesce(cd_plano,cd_plano_p)				= cd_plano_p
		and	coalesce(qt_minuto,0) > 0
		and	((ie_dia_semana = ie_dia_semana_w) or ((ie_dia_semana = 9) and (ie_dia_semana_w not in (1,7))) or (coalesce(ie_dia_semana::text, '') = ''));
	elsif (cd_procedimento_p > 0) and (ie_origem_proced_p > 0) then
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_tempo_w
		from	tempo_procedimento
		where	cd_procedimento = cd_procedimento_p
		and	ie_origem_proced = ie_origem_proced_p
		and	coalesce(nr_seq_proc_interno::text, '') = ''
		and	((cd_agenda = cd_agenda_p) or (coalesce(cd_agenda::text, '') = ''))
		and	qt_anos_w  between coalesce(qt_idade_minima,0) and coalesce(qt_idade_maxima,999)
		and	((cd_pessoa_fisica = cd_profissional_p) or (coalesce(cd_pessoa_fisica::text, '') = ''))
		and	qt_anos_w  between coalesce(qt_idade_minima,0) and coalesce(qt_idade_maxima,999)
		and	coalesce(cd_convenio,cd_convenio_p)				= cd_convenio_p
		and	coalesce(cd_categoria,cd_categoria_p)			= cd_categoria_p
		and	coalesce(cd_plano,cd_plano_p)				= cd_plano_p
		and	coalesce(qt_minuto,0) > 0
		and	((ie_dia_semana = ie_dia_semana_w) or ((ie_dia_semana = 9) and (ie_dia_semana_w not in (1,7))) or (coalesce(ie_dia_semana::text, '') = ''));
	end if;

	/* obter duracao */

	if (nr_seq_tempo_w > 0) then
		select	coalesce(max(qt_minuto),0)
		into STRICT	nr_min_duracao_w
		from	tempo_procedimento
		where	nr_sequencia = nr_seq_tempo_w;

		/* consistir duracao */

		if (nr_min_duracao_w > 0) and (nr_min_duracao_p > 0) and (nr_min_duracao_w > nr_min_duracao_p) then
			/* obter dados exame mensagem */

			select	obter_desc_prescr_proc(cd_procedimento_p, ie_origem_proced_p, nr_seq_proc_interno_p)
			into STRICT	ds_exame_w
			;

			/* montar mensagem */

			ds_consistencia_w := Wheb_mensagem_pck.get_texto(306900, 'DS_EXAME_W='||ds_exame_w||';NR_MIN_DURACAO_W='||nr_min_duracao_w||';NR_MIN_DURACAO_P='||nr_min_duracao_p);
					/*'O tempo de duração do exame ' || ds_exame_w || ' é de ' || nr_min_duracao_w || ' minutos.' || chr(10) ||
					'Este tempo é superior ao tempo de duração da agenda (' || nr_min_duracao_p || ' minutos), o que impossibilita este agendamento!';*/
		end if;
	end if;
end if;

ds_consistencia_p := ds_consistencia_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE consistir_tempo_duracao_proced (cd_agenda_p bigint, cd_profissional_p text, cd_procedimento_p bigint, ie_origem_proced_p bigint, nr_seq_proc_interno_p bigint, cd_pessoa_fisica_p text, nr_min_duracao_p bigint, cd_convenio_p bigint, cd_categoria_p text, cd_plano_p text, nr_seq_agenda_p bigint default null, ds_consistencia_p INOUT text DEFAULT NULL) FROM PUBLIC;

