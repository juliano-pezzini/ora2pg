-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_atualizar_glosas_pgto ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nm_usuario_p text, nr_seq_grupo_p bigint, cd_estabelecimento_p bigint, nr_seq_analise_p bigint ) AS $body$
DECLARE

				 
/* DEPRECIADA. 
NÃO É MAIS UTILIZADA. 
 
 ie_tipo_item_p 
	P - Procedimento 
	M - Material 
*/
 
 
nr_seq_item_w			bigint;
vl_apresentado_w		double precision	:= 0;
vl_calculado_w			double precision	:= 0;
vl_total_calculado_w		double precision	:= 0;
vl_liberado_w			double precision	:= 0;
vl_glosa_w			double precision	:= 0;
nr_seq_regra_w			bigint;
nr_seq_regra_ww			bigint;
ie_apresentado_menor_w		varchar(1);
ie_tipo_conta_w			varchar(10);
ie_tipo_valor_w			bigint;
ie_tipo_valor_ww		bigint;
ie_regra_liberacao_w		bigint;
ie_tipo_despesa_proc_w		varchar(5);
ie_tipo_despesa_mat_w		varchar(5);
nr_seq_protocolo_w		bigint;
nr_seq_prestador_w		bigint;
cd_estabelecimento_w		bigint;
ie_autorizado_w			varchar(1);
vl_medico_w			double precision;
vl_anestesista_w		double precision;
vl_auxiliares_w			double precision;
vl_custo_operacional_w		double precision;
vl_materiais_w			double precision;
ie_origem_conta_w		varchar(10);
nr_seq_prestador_exec_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
ie_tipo_despesa_w		varchar(2);
ie_tipo_guia_w			varchar(2);
nr_seq_glosa_w			bigint;
nr_seq_ocorrencia_w		bigint;
nr_seq_analise_conta_item_w	bigint;
cd_motivo_tiss_w		varchar(10);
nr_seq_conta_w			bigint;
nr_glosa_oc_criada_w		bigint;
nr_seq_motivo_glosa_w		bigint;
qt_reg_glosas_analise_w		bigint;
qt_apresentado_w		bigint;
nr_seq_evento_w			bigint;
ie_participante_w		varchar(1):= 'N';
cd_estab_regra_w		estabelecimento.cd_estabelecimento%type;
ie_restringe_estab_w		varchar(1):= 'N';
vl_unitario_apresentado_w	double precision	:= 0;
			
C01 CURSOR FOR 
	SELECT	nr_sequencia, 
		ie_tipo_valor, 
		ie_regra_liberacao, 
		cd_estabelecimento 
	from	pls_regra_valor_conta 
	where	ie_situacao = 'A' 
	and	((ie_tipo_conta = 'A') or (ie_tipo_conta = ie_tipo_conta_w)) 
	and	((ie_tipo_despesa_proc = ie_tipo_despesa_proc_w) or (coalesce(ie_tipo_despesa_proc::text, '') = '')) 
	and	((ie_tipo_despesa_mat = ie_tipo_despesa_mat_w) or (coalesce(ie_tipo_despesa_mat::text, '') = '')) 
	and	((coalesce(ie_origem_conta::text, '') = '') or (ie_origem_conta = coalesce(ie_origem_conta_w, ie_origem_conta))) 
	and	((nr_seq_prestador_exec = nr_seq_prestador_exec_w) or (coalesce(nr_seq_prestador_exec,0) = 0 )) 
	and	((pls_se_grupo_preco_servico(nr_seq_grupo_servico, cd_procedimento_w, ie_origem_proced_w) = 'S') or (coalesce(nr_seq_grupo_servico,0) = 0)) 
	and	((cd_procedimento = cd_procedimento_w AND ie_origem_proced = ie_origem_proced_w) or (coalesce(cd_procedimento,0) = 0)) 
	and	((vl_apresentado_max >= vl_apresentado_w) or (coalesce(vl_apresentado_max,0) = 0)) 
	and	((ie_tipo_guia	= ie_tipo_guia_w) or (coalesce(ie_tipo_guia::text, '') = '')) 
	and	((coalesce(ie_participante,'A') = 'A')or (coalesce(ie_participante,'A') = ie_participante_w)) 
	and	((vl_uni_apres_max >= vl_unitario_apresentado_w) or (coalesce(vl_uni_apres_max,0) = 0)) 
	order by 
		coalesce(ie_participante,'A'), 
		coalesce(ie_tipo_guia,0), 
		coalesce(cd_procedimento,0), 
		coalesce(nr_seq_grupo_servico,0), 
		coalesce(ie_tipo_despesa_proc,'X'),		 
		coalesce(ie_tipo_despesa_mat,'X'), 
		coalesce(ie_tipo_conta,'X'),		 
		coalesce(ie_origem_conta,'X'),		 
		coalesce(nr_seq_prestador_exec,0), 
		coalesce(vl_apresentado_max,0), 
		coalesce(vl_uni_apres_max,0);


BEGIN 
 
select coalesce(max(ie_cad_conta_medica), 'N') 
into STRICT	ie_restringe_estab_w 
from	pls_controle_estab;
 
if (coalesce(nr_seq_conta_proc_p,0) > 0) then 
 
	/* Obter dados da conta */
 
	select	a.nr_sequencia, 
		coalesce(a.vl_procedimento_imp,0), 
		coalesce(a.vl_procedimento,0), 
		coalesce(a.vl_medico,0), 
		coalesce(a.vl_anestesista,0), 
		coalesce(a.vl_auxiliares,0), 
		coalesce(a.vl_custo_operacional,0), 
		coalesce(a.vl_materiais,0),		 
		a.ie_tipo_despesa, 
		a.cd_procedimento, 
		a.ie_origem_proced, 
		b.nr_seq_prestador_exec, 
		a.ie_tipo_despesa, 
		coalesce(b.ie_tipo_conta,'O'), 
		b.nr_seq_protocolo, 
		b.ie_origem_conta, 
		b.ie_tipo_guia, 
		b.nr_sequencia, 
		a.qt_procedimento_imp, 
		a.vl_unitario_imp 
	into STRICT	nr_seq_item_w, 
		vl_apresentado_w, 
		vl_calculado_w, 
		vl_medico_w, 
		vl_anestesista_w, 
		vl_auxiliares_w, 
		vl_custo_operacional_w, 
		vl_materiais_w, 
		ie_tipo_despesa_proc_w,	 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_prestador_exec_w, 
		ie_tipo_despesa_w, 
		ie_tipo_conta_w, 
		nr_seq_protocolo_w, 
		ie_origem_conta_w, 
		ie_tipo_guia_w, 
		nr_seq_conta_w, 
		qt_apresentado_w, 
		vl_unitario_apresentado_w 
	from	pls_conta_proc a, 
		pls_conta b 
	where	b.nr_sequencia	= a.nr_seq_conta 
	and	a.nr_sequencia	= nr_seq_conta_proc_p;
 
	ie_participante_w := pls_obter_se_conta_partic(nr_seq_conta_w, nm_usuario_p);
	 
	/* Obter dados do protocolo */
 
	select 	nr_seq_prestador, 
		cd_estabelecimento 
	into STRICT	nr_seq_prestador_w, 
		cd_estabelecimento_w 
	from	pls_protocolo_conta 
	where	nr_sequencia	= nr_seq_protocolo_w;
	 
	nr_seq_regra_w := 0;	/*Diego 26/05/2011 - OS 323656 - Limpar a variavel*/
 
	 
	/* Felipe - OS 284492 - 28/01/2011 - Solicitado para o valor calculado ser a soma de todos os valores */
 
	/* Felipe - OS 288481 - 16/03/2011 - Solicitado para calcular o valor da glosa seja a soma dos valores, mas para liberar automatico, seja verificado somente o calculado */
 
	/*Diego - OS 315390 - 12/05/2011 - No caso de pacotes não ira haver os valore medico, anestesia, auxiliares, etc somente o vl_calculado.*/
	if (ie_tipo_despesa_w = '4') then 
		vl_total_calculado_w	:= vl_calculado_w;
	else	 
		vl_total_calculado_w	:= vl_medico_w + vl_anestesista_w + vl_auxiliares_w + 
					  vl_custo_operacional_w + vl_materiais_w;			
	end if;
				 
	/*insert into log_tasy 
		(cd_log, ds_log, nm_usuario, dt_atualizacao) 
	values	(65487, 'ie_tipo_conta_w='||chr(39)||ie_tipo_conta_w||chr(39)|| 
			';ie_tipo_despesa_proc_w='||chr(39)||ie_tipo_despesa_proc_w||chr(39)|| 
			';ie_tipo_despesa_mat_w='||chr(39)||ie_tipo_despesa_mat_w||chr(39)|| 
			';ie_origem_conta_w='||chr(39)||ie_origem_conta_w||chr(39)|| 
			';nr_seq_prestador_exec_w='||chr(39)||nr_seq_prestador_exec_w||chr(39)|| 
			';cd_procedimento_w='||chr(39)||cd_procedimento_w||chr(39)|| 
			';ie_origem_proced_w='||chr(39)||ie_origem_proced_w||chr(39)|| 
			';vl_apresentado_w='||chr(39)||vl_apresentado_w||chr(39), 'tasy', sysdate);*/
 
	 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_regra_ww, 
		ie_tipo_valor_ww, 
		ie_regra_liberacao_w, 
		cd_estab_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */		
		begin	 
			if	((ie_restringe_estab_w = 'N') or (ie_restringe_estab_w = 'S') and ( cd_estabelecimento_p = cd_estab_regra_w))then 
				/* Valor apresentado menor do que valor Calculado */
 
				if (ie_regra_liberacao_w	= 1) and (vl_apresentado_w < vl_calculado_w) then 
					nr_seq_regra_w	:= nr_seq_regra_ww;
					ie_tipo_valor_w	:= ie_tipo_valor_ww;
				/* Valor Calculado menor do que o valor Apresentado */
 
				elsif (ie_regra_liberacao_w	= 2) and (vl_calculado_w < vl_apresentado_w) then 
					nr_seq_regra_w	:= nr_seq_regra_ww;
					ie_tipo_valor_w	:= ie_tipo_valor_ww;
				/*Valor calculado zerado*/
 
				elsif (ie_regra_liberacao_w	= 3) and (coalesce(vl_calculado_w,0)	= 0) then	 
					nr_seq_regra_w	:= nr_seq_regra_ww;
					ie_tipo_valor_w	:= ie_tipo_valor_ww;
				end if;
			end if;
		end;
	end loop;
	close C01;
	 
	if (nr_seq_regra_w	> 0) then	 
		/* Aceita valor apresentado */
 
		if (ie_tipo_valor_w	= 1) then 
			vl_liberado_w	:= vl_apresentado_w;
			vl_glosa_w	:= 0;
		/* Aceita valor calculado e glosa o excedente */
 
		elsif (ie_tipo_valor_w	= 2) then 
			vl_liberado_w	:= vl_calculado_w;
			vl_glosa_w	:= vl_apresentado_w - vl_total_calculado_w;
		/* Aceita valor calculado */
 
		elsif (ie_tipo_valor_w	= 3) then 
			vl_liberado_w	:= vl_calculado_w;
			vl_glosa_w	:= 0;
		end if;
		 
		update	pls_conta_proc 
		set	vl_liberado		= vl_liberado_w, 
			vl_glosa		= vl_glosa_w, 
			nr_seq_regra_valor	= nr_seq_regra_w, 
			vl_liberado_regra	= vl_liberado_w 
		where	nr_sequencia		= nr_seq_item_w;
	end if;	
 
	select	min(nr_sequencia) 
	into STRICT	nr_seq_motivo_glosa_w 
	from	tiss_motivo_glosa 
	where	cd_motivo_tiss	= '1707';
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_evento_w 
	from	pls_glosa_evento 
	where	ie_evento		= 'CC' 
	and	ie_plano		= 'S' 
	and	nr_seq_motivo_glosa 	= nr_seq_motivo_glosa_w;
	 
	if (coalesce(vl_calculado_w,0) = 0) and (coalesce(nr_seq_evento_w,0) > 0) then 
		 
		select	count(1) 
		into STRICT	qt_reg_glosas_analise_w 
		from	pls_analise_conta_item 
		where	((nr_seq_conta_proc = nr_seq_conta_proc_p) 
		or (nr_seq_conta_mat = nr_seq_conta_mat_p)) 
		and	cd_codigo = '1707';
		 
		/*if	(qt_reg_glosas_analise_w = 0) then	 
			pls_grava_glosa_analise_conta(	nr_seq_motivo_glosa_w, null, nr_seq_item_w, 
							'P'||ie_tipo_despesa_w, '', qt_apresentado_w, 
							nr_seq_analise_p, nm_usuario_p, nr_seq_conta_w, 
							vl_apresentado_w, cd_estabelecimento_p, nr_seq_grupo_p, 
							'N', nr_glosa_oc_criada_w, null, 'N');--param nr_seq_item_analise 
		end if;*/
 
	else	 
		CALL pls_apagar_glosa_oc_analise(	nr_seq_conta_proc_p, nr_seq_conta_mat_p, '1707', 
						nm_usuario_p, cd_estabelecimento_p);
	end if;
	 
	select	min(nr_sequencia) 
	into STRICT	nr_seq_motivo_glosa_w 
	from	tiss_motivo_glosa 
	where	cd_motivo_tiss	= '1705';
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_evento_w 
	from	pls_glosa_evento 
	where	ie_evento		= 'CC' 
	and	ie_plano		= 'S' 
	and	nr_seq_motivo_glosa 	= nr_seq_motivo_glosa_w;
	 
	if	((coalesce(vl_calculado_w,0) > 0) and (coalesce(vl_apresentado_w,0) > coalesce(vl_calculado_w,0))) and (coalesce(nr_seq_evento_w,0) > 0) then 
		 
		select	count(1) 
		into STRICT	qt_reg_glosas_analise_w 
		from	pls_analise_conta_item 
		where	((nr_seq_conta_proc = nr_seq_conta_proc_p) 
		or (nr_seq_conta_mat = nr_seq_conta_mat_p)) 
		and	cd_codigo = '1705';
		 
		/*if	(qt_reg_glosas_analise_w = 0) then			 
			/*pls_grava_glosa_analise_conta(	nr_seq_motivo_glosa_w, null, nr_seq_item_w, 
							'P'||ie_tipo_despesa_w, '', qt_apresentado_w, 
							nr_seq_analise_p, nm_usuario_p, nr_seq_conta_w, 
							vl_apresentado_w, cd_estabelecimento_p, nr_seq_grupo_p, 
							'N', nr_glosa_oc_criada_w,null, 'N'); 
		end if;*/
 
	else 
		CALL pls_apagar_glosa_oc_analise(	nr_seq_conta_proc_p, nr_seq_conta_mat_p, '1705', 
						nm_usuario_p, cd_estabelecimento_p);
	end if;
	 
	select	min(nr_sequencia) 
	into STRICT	nr_seq_motivo_glosa_w 
	from	tiss_motivo_glosa 
	where	cd_motivo_tiss	= '1706';
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_evento_w 
	from	pls_glosa_evento 
	where	ie_evento		= 'CC' 
	and	ie_plano		= 'S' 
	and	nr_seq_motivo_glosa 	= nr_seq_motivo_glosa_w;
	 
	if	((coalesce(vl_calculado_w,0) > 0) and (coalesce(vl_apresentado_w,0) < coalesce(vl_calculado_w,0)) and (coalesce(vl_apresentado_w,0) > 0)) and (coalesce(nr_seq_evento_w,0) > 0) then		 
		 
		select	count(1) 
		into STRICT	qt_reg_glosas_analise_w 
		from	pls_analise_conta_item 
		where	((nr_seq_conta_proc = nr_seq_conta_proc_p) 
		or (nr_seq_conta_mat = nr_seq_conta_mat_p)) 
		and	cd_codigo = '1706';
		 
		/*if	(qt_reg_glosas_analise_w = 0) then	 
			/*pls_grava_glosa_analise_conta(	nr_seq_motivo_glosa_w, null, nr_seq_item_w, 
							'P'||ie_tipo_despesa_w, '', qt_apresentado_w, 
							nr_seq_analise_p, nm_usuario_p, nr_seq_conta_w, 
							vl_apresentado_w, cd_estabelecimento_p, nr_seq_grupo_p, 
							'N', nr_glosa_oc_criada_w,null, 'N'); 
		end if;				*/
 
						 
	else 
		CALL pls_apagar_glosa_oc_analise(	nr_seq_conta_proc_p, nr_seq_conta_mat_p, '1706', 
						nm_usuario_p, cd_estabelecimento_p);		
		 
	end if;
	 
elsif (coalesce(nr_seq_conta_mat_p,0) > 0) then 
 
	/* Obter dados da conta */
 
	select	coalesce(a.ie_tipo_conta,'O'), 
		a.nr_seq_protocolo, 
		a.ie_origem_conta, 
		a.ie_tipo_guia, 
		a.nr_sequencia, 
		b.qt_material_imp, 
		b.nr_sequencia, 
		coalesce(b.vl_material_imp,0), 
		coalesce(b.vl_material,0), 
		b.ie_tipo_despesa, 
		b.ie_autorizado, 
		a.nr_seq_prestador_exec, 
		b.vl_unitario_imp 
	into STRICT	ie_tipo_conta_w, 
		nr_seq_protocolo_w, 
		ie_origem_conta_w, 
		ie_tipo_guia_w, 
		nr_seq_conta_w, 
		qt_apresentado_w, 
		nr_seq_item_w, 
		vl_apresentado_w, 
		vl_calculado_w, 
		ie_tipo_despesa_mat_w, 
		ie_autorizado_w, 
		nr_seq_prestador_exec_w, 
		vl_unitario_apresentado_w 
	from	pls_conta a, 
		pls_conta_mat b 
	where	a.nr_sequencia	= b.nr_seq_conta 
	and	b.nr_sequencia	= nr_seq_conta_mat_p;
	 
	/* Obter dados do protocolo */
 
	select 	nr_seq_prestador, 
		cd_estabelecimento 
	into STRICT	nr_seq_prestador_w, 
		cd_estabelecimento_w 
	from	pls_protocolo_conta 
	where	nr_sequencia	= nr_seq_protocolo_w;
 
	ie_participante_w := pls_obter_se_conta_partic(nr_seq_conta_w, nm_usuario_p);
	nr_seq_regra_w := 0;	/*Diego 26/05/2011 - OS 323656 - Limpar a variavel*/
		 
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_regra_ww, 
		ie_tipo_valor_ww, 
		ie_regra_liberacao_w, 
		cd_estab_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */	
		begin 
			if	((ie_restringe_estab_w = 'N') or (ie_restringe_estab_w = 'S') and ( cd_estabelecimento_p = cd_estab_regra_w))then 
				/* Valor apresentado menor do que valor Calculado */
 
				if (ie_regra_liberacao_w	= 1) and (vl_apresentado_w < vl_calculado_w) then 
					nr_seq_regra_w	:= nr_seq_regra_ww;
					ie_tipo_valor_w	:= ie_tipo_valor_ww;
				/* Valor Calculado menor do que o valor Apresentado */
 
				elsif (ie_regra_liberacao_w	= 2) and (vl_calculado_w < vl_apresentado_w) then 
					nr_seq_regra_w	:= nr_seq_regra_ww;
					ie_tipo_valor_w	:= ie_tipo_valor_ww;
				/*Valor calculado zerado*/
 
				elsif (ie_regra_liberacao_w	= 3) and (coalesce(vl_calculado_w,0)	= 0) then	 
					nr_seq_regra_w	:= nr_seq_regra_ww;
					ie_tipo_valor_w	:= ie_tipo_valor_ww;
				end if;
			end if;
		end;
	end loop;
	close C01;
	 
	if (nr_seq_regra_w	> 0) then	 
		/* Aceita valor apresentado */
 
		if (ie_tipo_valor_w	= 1) then 
			vl_liberado_w	:= vl_apresentado_w;
			vl_glosa_w	:= 0;
		/* Aceita valor calculado e glosa o excedente */
 
		elsif (ie_tipo_valor_w	= 2) then 
			vl_liberado_w	:= vl_calculado_w;
			vl_glosa_w	:= vl_apresentado_w - vl_calculado_w;
		/* Aceita valor calculado */
 
		elsif (ie_tipo_valor_w	= 3) then 
			vl_liberado_w	:= vl_calculado_w;
			vl_glosa_w	:= 0;
		end if;
		 
		update	pls_conta_mat 
		set	vl_liberado		= vl_liberado_w, 
			vl_glosa		= vl_glosa_w, 
			nr_seq_regra_valor	= nr_seq_regra_w, 
			vl_liberado_regra	= vl_liberado_w 
		where	nr_sequencia		= nr_seq_item_w;
	end if;	
		 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_motivo_glosa_w 
	from	tiss_motivo_glosa 
	where	cd_motivo_tiss	= '1707' 
	and	ie_acao_pls	<> 'N';	
 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_evento_w 
	from	pls_glosa_evento 
	where	ie_evento		= 'CC' 
	and	ie_plano		= 'S' 
	and	nr_seq_motivo_glosa 	= nr_seq_motivo_glosa_w;	
		 
	if (coalesce(vl_calculado_w,0) = 0) and (coalesce(nr_seq_evento_w,0) > 0) then 
		 
		select	count(1) 
		into STRICT	qt_reg_glosas_analise_w 
		from	pls_analise_conta_item 
		where	((nr_seq_conta_proc = nr_seq_conta_proc_p) 
		or (nr_seq_conta_mat = nr_seq_conta_mat_p)) 
		and	cd_codigo = '1707';
		 
		/*if	(qt_reg_glosas_analise_w = 0) then	 
			/*pls_grava_glosa_analise_conta(	nr_seq_motivo_glosa_w, null, nr_seq_item_w, 
							'M'||ie_tipo_despesa_w, '', qt_apresentado_w, 
							nr_seq_analise_p, nm_usuario_p, nr_seq_conta_w, 
							vl_apresentado_w, cd_estabelecimento_p, nr_seq_grupo_p, 
							'N', nr_glosa_oc_criada_w,null, 'N'); 
		end if; 
						 
	else	 
		pls_apagar_glosa_oc_analise(	nr_seq_conta_proc_p, nr_seq_conta_mat_p, '1707', 
						nm_usuario_p, cd_estabelecimento_p); 
	end if; 
	 
	select	max(nr_sequencia) 
	into	nr_seq_motivo_glosa_w 
	from	tiss_motivo_glosa		 
	where	cd_motivo_tiss	= '1705' 
	and	ie_acao_pls	<> 'N'; 
 
	select	max(nr_sequencia) 
	into	nr_seq_evento_w 
	from	pls_glosa_evento 
	where	ie_evento		= 'CC' 
	and	ie_plano		= 'S' 
	and	nr_seq_motivo_glosa 	= nr_seq_motivo_glosa_w; 
		 
	if	((nvl(vl_calculado_w,0) > 0) and 
		 (nvl(vl_apresentado_w,0) > nvl(vl_calculado_w,0))) and 
		 (nvl(nr_seq_evento_w,0) > 0) then 
		 
		select	count(*) 
		into	qt_reg_glosas_analise_w 
		from	pls_analise_conta_item 
		where	((nr_seq_conta_proc = nr_seq_conta_proc_p) 
		or	 (nr_seq_conta_mat = nr_seq_conta_mat_p)) 
		and	cd_codigo = '1705'; 
		 
		if	(qt_reg_glosas_analise_w = 0) then	 
			/*pls_grava_glosa_analise_conta(	nr_seq_motivo_glosa_w, null, nr_seq_item_w, 
							'M'||ie_tipo_despesa_w, '', qt_apresentado_w, 
							nr_seq_analise_p, nm_usuario_p, nr_seq_conta_w, 
							vl_apresentado_w, cd_estabelecimento_p, nr_seq_grupo_p, 
							'N', nr_glosa_oc_criada_w,null, 'N'); 
		end if;*/
 
		 
	else	 
		CALL pls_apagar_glosa_oc_analise(	nr_seq_conta_proc_p, nr_seq_conta_mat_p, '1705', 
						nm_usuario_p, cd_estabelecimento_p);
	end if;	
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_motivo_glosa_w 
	from	tiss_motivo_glosa 
	where	cd_motivo_tiss	= '1706' 
	and	ie_acao_pls	<> 'N';
	 
	select	max(nr_sequencia) 
	into STRICT	nr_seq_evento_w 
	from	pls_glosa_evento 
	where	ie_evento		= 'CC' 
	and	ie_plano		= 'S' 
	and	nr_seq_motivo_glosa 	= nr_seq_motivo_glosa_w;
	 
	if	((coalesce(vl_calculado_w,0) > 0) and (coalesce(vl_apresentado_w,0) < coalesce(vl_calculado_w,0)) and (coalesce(vl_apresentado_w,0) > 0)) and (coalesce(nr_seq_evento_w,0) > 0) then		 
		 
		select	count(1) 
		into STRICT	qt_reg_glosas_analise_w 
		from	pls_analise_conta_item 
		where	((nr_seq_conta_proc = nr_seq_conta_proc_p) 
		or (nr_seq_conta_mat = nr_seq_conta_mat_p)) 
		and	cd_codigo = '1706';
		 
		 
		 
		/*if	(qt_reg_glosas_analise_w = 0) then	 
			/*pls_grava_glosa_analise_conta(	nr_seq_motivo_glosa_w, null, nr_seq_item_w, 
							'M'||ie_tipo_despesa_w, '', qt_apresentado_w, 
							nr_seq_analise_p, nm_usuario_p, nr_seq_conta_w, 
							vl_apresentado_w, cd_estabelecimento_p, nr_seq_grupo_p, 
							'N', nr_glosa_oc_criada_w,null, 'N'); 
		end if;*/
 
					 
	else 
		CALL pls_apagar_glosa_oc_analise(	nr_seq_conta_proc_p, nr_seq_conta_mat_p, '1706', 
						nm_usuario_p, cd_estabelecimento_p);
	end if;
	 
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_atualizar_glosas_pgto ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, nm_usuario_p text, nr_seq_grupo_p bigint, cd_estabelecimento_p bigint, nr_seq_analise_p bigint ) FROM PUBLIC;

