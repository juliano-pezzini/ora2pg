-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tit_rec_controle_pes ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_base_vencimento_p timestamp, vl_conta_p bigint, nr_documento_p bigint, nm_usuario_p text, nr_seq_controle_pessoa_p bigint, nr_seq_conta_banco_p bigint, nr_seq_trans_fin_contab_p bigint default null, nr_titulo_p INOUT bigint DEFAULT NULL) AS $body$
DECLARE

 
ie_erro_w			smallint		:= 0;
cont_portador_w		smallint;
ie_forma_pagamento_w		smallint		:= 0;
nr_titulo_w			bigint		:= 0;
tx_fracao_parcela_w		double precision		:= 0;
tx_acrescimo_w		double precision		:= 0;
dt_base_w			timestamp			:= clock_timestamp();
vl_total_w			double precision		:= 0;
vl_ajuste_w			double precision		:= 0;
cd_moeda_padrao_w		integer		:= 0;
cd_tipo_portador_w		integer   	:= 0;
cd_portador_w			bigint  	:= 0;
nr_bloqueto_w			varchar(20)		:= null;
nr_sequencia_w		integer		:= 0;
vl_devolucao_w		double precision 	:= 0;
cd_condicao_pagamento_w	bigint		:= null;
dt_vencimento_w		timestamp			:= null;
vl_vencimento_w		double precision		:= 0;	
ie_acao_venc_nao_util_w	varchar(01)		:= 'M';
nr_seq_Venc_conta_w		bigint;
nr_seq_Venc_Prot_w		bigint;
ie_gerar_imposto_w		varchar(01);
cd_tipo_taxa_w		bigint;
cd_estab_financeiro_w	bigint;
ie_tipo_acrescimo_w	varchar(1)	:= 'P';
vl_base_juros_w		double precision;

c01 CURSOR FOR 
	SELECT	/* A Prazo  */
 
       	tx_fracao_parcela, 
       	coalesce(tx_acrescimo,0), 
		Obter_data_vencimento( 
      			dt_base_w, 
				qt_dias_parcela, 
				cd_estabelecimento_p, 
				ie_corrido_util, 
				ie_acao_venc_nao_util_w),  
		0 
	from 	parcela 
	where 	cd_condicao_pagamento 	= cd_condicao_pagamento_w 
	and 	ie_forma_pagamento_w	<> 1 
	and 	nr_seq_venc_conta_w 	= 0 
	and	nr_seq_Venc_Prot_w	= 0 
	
union
 
	SELECT 100, 
		0,	/* A Vista  */
	 
		dt_base_w, 0 
	 
	where 	ie_forma_pagamento_w	= 1 
	and 	nr_seq_venc_conta_w 	= 0 
	and	nr_seq_Venc_Prot_w	= 0 
	
union
 
	select	/* Vencimentos da conta */
 
		pr_vencimento, 
		coalesce(pr_acrescimo,0), 
		dt_vencimento, 
		vl_vencimento 
	from 	vencimento_titulo 
	where 	nr_interno_conta 	= nr_interno_conta_p 
	
union
 
	select /* Vencimentos do Protocolo */
 
		pr_vencimento, 
		coalesce(pr_acrescimo,0), 
		dt_vencimento, 
		vl_vencimento 
	from 	vencimento_titulo 
	where 	nr_seq_protocolo 	= nr_seq_protocolo_p;

BEGIN
 
select	coalesce(min(a.cd_tipo_taxa),0) 
into STRICT	cd_tipo_taxa_w 
from	Tipo_Taxa a, 
	Valor_Dominio b 
where	b.cd_dominio = 707 
and	a.ie_tipo_taxa = b.vl_dominio;
 
select	coalesce(max(nr_sequencia),0) 
into STRICT 	nr_seq_Venc_conta_w 
from 	vencimento_titulo 
where	nr_interno_conta = nr_interno_conta_p;
 
select coalesce(max(nr_sequencia),0) 
into STRICT 	nr_seq_Venc_prot_w 
from 	vencimento_titulo 
where 	nr_seq_protocolo = nr_seq_protocolo_p;
 
 
ie_erro_w := 0;
if (cd_condicao_pagamento_p > 0) then 
  	cd_condicao_pagamento_w := cd_condicao_pagamento_p;
else 
 	begin 
  	select cd_condicao_pagamento 
  	into STRICT 	cd_condicao_pagamento_w 
  	from 	nota_fiscal 
  	where 	nr_interno_conta = nr_interno_conta_p;
  	end;
end if;
 
/* verifica se nota possui condicao de pagamento - erro(2)*/
 
if (ie_erro_w = 0) and (cd_condicao_pagamento_w = 0) then 
   	ie_erro_w := 2;
end if;
 
/* seleciona dados do parametro_contas_receber erro(1)*/
 
if  	ie_erro_w = 0 then 
	select coalesce(max(cd_moeda_padrao),1), 
		coalesce(max(ie_gerar_imposto_tit_rec),'N') 
 	into STRICT 	cd_moeda_padrao_w, 
		ie_gerar_imposto_w 
 	from 	parametro_contas_receber 
 	where	cd_estabelecimento = cd_estabelecimento_p;
end if;
 
/* seleciona dados da condicao de pagamento - erro(3)*/
 
if  	ie_erro_w = 0 then 
	select coalesce(max(ie_forma_pagamento),3), 
		coalesce(max(ie_acao_nao_util),'M'), 
		coalesce(max(ie_tipo_acrescimo),'P') 
	into STRICT 	ie_forma_pagamento_w, 
		ie_acao_venc_nao_util_w, 
		ie_tipo_acrescimo_w 
 	from 	condicao_pagamento 
 	where 	cd_condicao_pagamento = cd_condicao_pagamento_w 
    and 	ie_situacao	= 'A';
end if;
 
dt_base_w	:= dt_base_vencimento_p;
 
/* define data base para condicao pagamento */
 
if (ie_erro_w = 0) then 
	Select	coalesce(Obter_Data_Base_Venc(dt_base_w, ie_forma_pagamento_w), dt_base_w) 
	into STRICT	dt_base_w 
	;
end if;
 
select	count(*) 
into STRICT	cont_portador_w 
from	portador 
where	cd_portador = 0 
and	cd_tipo_portador = 0;
if (cont_portador_w = 0) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(265504,'');
	--Existe a necessidade de se cadastrar um portador com cÃ³digo 0 (Carteira) 
end if;
 
select	coalesce(cd_estab_financeiro, cd_estabelecimento) 
into STRICT	cd_estab_financeiro_w 
from	estabelecimento	 
where	cd_estabelecimento = cd_estabelecimento_p;
 
/* gravar Titulo */
 
if (ie_erro_w = 0)     then 
   	begin 
 
	SELECT * FROM OBTER_PORTADOR_PF_PJ(cd_estabelecimento_p, cd_pessoa_fisica_p, cd_cgc_p, cd_portador_w, cd_tipo_portador_w) INTO STRICT cd_portador_w, cd_tipo_portador_w;
 
	/* Francisco - OS 106247 - 19/03/2009 - Calcular juros pela base */
 
	if (ie_tipo_acrescimo_w = 'B') then 
		vl_base_juros_w	:= obter_base_acresc_cond_pagto(cd_condicao_pagamento_w,vl_conta_p);
	end if;
 
   	OPEN C01;
   	LOOP 
	FETCH c01 into 
      	tx_fracao_parcela_w, 
      	tx_acrescimo_w, 
		dt_vencimento_w, 
		vl_vencimento_w;
   	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		if (vl_vencimento_w = 0) then 
			begin 
			if (coalesce(tx_fracao_parcela_w,0) > 0) then 
      			vl_vencimento_w 	:= ((vl_conta_p * tx_fracao_parcela_w) / 100);
			end if;
        		vl_total_w  		:= vl_total_w + vl_vencimento_w;
			end;
    		end if;
 
    		if (tx_acrescimo_w <> 0) then 
			if (ie_tipo_acrescimo_w = 'P') then 
       			vl_vencimento_w 	:= vl_vencimento_w + ((vl_vencimento_w * tx_acrescimo_w) / 100);
			elsif (ie_tipo_acrescimo_w = 'B') then 
				vl_vencimento_w 	:= vl_vencimento_w + ((vl_base_juros_w * tx_acrescimo_w) / 100);
			end if;
   		end if;
 
		select	nextval('titulo_seq') 
		into STRICT	nr_titulo_w 
		;
 
      	insert into titulo_receber( 
     			nr_titulo, 
			cd_estabelecimento, 
			dt_atualizacao, 
			nm_usuario, 
		 	dt_emissao, 
			dt_vencimento, 
			dt_pagamento_previsto, 
		 	vl_titulo, 
			vl_saldo_titulo, 
			vl_saldo_juros, 
		 	vl_saldo_multa, 
			cd_moeda, 
			cd_portador, 
			cd_tipo_portador, 
			ie_situacao, 
			ie_tipo_emissao_titulo, 
		 	ie_origem_titulo, 
			ie_tipo_titulo, 
			ie_tipo_inclusao, 
		 	cd_pessoa_fisica, 
			cd_cgc, 
			nr_interno_conta, 
		 	nr_documento, 
			nr_bloqueto, 
			dt_contabil, 
       			nr_seq_protocolo, 
			tx_juros, 
			cd_tipo_taxa_juro, 
			tx_multa, 
			cd_tipo_taxa_multa, 
			tx_desc_antecipacao, 
			nr_seq_controle_pessoa, 
			cd_estab_financeiro, 
			nm_usuario_orig, 
			dt_inclusao, 
			nr_seq_trans_fin_contab) 
   		values (nr_titulo_w, 
			cd_estabelecimento_p, 
			clock_timestamp(), 
			nm_usuario_p, 
		 	clock_timestamp(), 
			dt_vencimento_w, 
			dt_vencimento_w, 
			vl_vencimento_w, 
			vl_vencimento_w, 
		 	0, 
			0, 
			cd_moeda_padrao_w, 
			cd_portador_w, 
			cd_tipo_portador_w, 
		 	'1', 
			2, 
		 	'9', 
			'1', 
			'2', 
		 	cd_pessoa_fisica_p, 
			cd_cgc_p, 
			nr_interno_conta_p, 
       			nr_documento_p, 
			nr_bloqueto_w, 
			clock_timestamp(), 
			nr_seq_protocolo_p, 
			0, 
			cd_tipo_taxa_w, 
			0, 
			cd_tipo_taxa_w, 
			0, 
			nr_seq_controle_pessoa_p, 
			cd_estab_financeiro_w, 
			nm_usuario_p, 
			clock_timestamp(), 
			nr_seq_trans_fin_contab_p);
 
		if (nr_seq_conta_banco_p <> 0) then 
			update	titulo_receber 
			set	nr_seq_conta_banco = nr_seq_conta_banco_p 
			where	nr_titulo = nr_titulo_w;
		end if;
 
		if (ie_gerar_imposto_w = 'S') and 
			((coalesce(nr_interno_conta_p,0) <> 0) or (coalesce(nr_seq_protocolo_p,0) <> 0))then 
			CALL Gerar_Imposto_Tit_Rec(nr_titulo_w, nm_usuario_p);
		end if;
     	end;
	end loop;
   	close c01;
 
	if (vl_total_w > 0) and (vl_total_w <> vl_conta_p)  then 
		begin 
		vl_ajuste_w 	:= (vl_conta_p - vl_total_w);
		update titulo_receber 
		set 	vl_titulo		= vl_titulo + vl_ajuste_w, 
		 	vl_saldo_titulo	= vl_saldo_titulo + vl_ajuste_w 
		where	nr_titulo		= nr_titulo_w;
		end;
	end if;
   	end;
end if;
 
commit;
 
nr_titulo_p := nr_titulo_w;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tit_rec_controle_pes ( cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_interno_conta_p bigint, nr_seq_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_base_vencimento_p timestamp, vl_conta_p bigint, nr_documento_p bigint, nm_usuario_p text, nr_seq_controle_pessoa_p bigint, nr_seq_conta_banco_p bigint, nr_seq_trans_fin_contab_p bigint default null, nr_titulo_p INOUT bigint DEFAULT NULL) FROM PUBLIC;

