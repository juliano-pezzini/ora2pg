-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calculate_average_time ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) is c01 CURSOR FOR SELECT c.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(c.cd_pessoa_fisica, 'list'), obter_nome_pf(c.cd_pessoa_fisica)) nm_patient, pfcs_obter_lista_dados_classif(c.cd_pessoa_fisica) ds_classification, obter_sexo_pf(c.cd_pessoa_fisica, 'D') ds_gender, pf.dt_nascimento dt_birthdate, obter_dados_pf(c.cd_pessoa_fisica, 'I') qt_idade_paciente, c.nr_atendimento nr_encounter, c.dt_entrada dt_entrance, a.dt_desfecho dt_outcome, b.dt_entrada_unidade dt_entry_date_entity from atendimento_alta a, atend_paciente_unidade b, atendimento_paciente c, pessoa_fisica pf where a.nr_atendimento = b.nr_atendimento and b.nr_atendimento = c.nr_atendimento and c.cd_pessoa_fisica = pf.cd_pessoa_fisica and b.nr_seq_interno = Obter_Atepacu_paciente(a.nr_atendimento, 'PI') and a.ie_desfecho = 'I' and ((a.ie_tipo_orientacao <> 'P') or ((select max(nvl(p.ie_liberar_desfecho,'N')) from parametro_medico p where p.cd_estabelecimento = to_number(cd_estabelecimento_p)) = 'N') or ((a.dt_liberacao is not null) and (a.dt_inativacao is null))) and a.dt_desfecho is not null and b.dt_entrada_unidade is not null and a.dt_desfecho >= pfcs_get_pa_period and c.cd_estabelecimento = to_number(cd_estabelecimento_p) union select c.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(c.cd_pessoa_fisica, 'list'), obter_nome_pf(c.cd_pessoa_fisica)) nm_patient, pfcs_obter_lista_dados_classif(c.cd_pessoa_fisica) ds_classification, obter_sexo_pf(c.cd_pessoa_fisica, 'D') ds_gender, pf.dt_nascimento dt_birthdate, obter_dados_pf(c.cd_pessoa_fisica, 'I') qt_idade_paciente, c.nr_atendimento nr_encounter, c.dt_entrada dt_entrance, a.dt_desfecho dt_outcome, b.dt_entrada_unidade dt_entry_date_entity from atendimento_alta a, atend_paciente_unidade b, atendimento_paciente c, pessoa_fisica pf where a.nr_atendimento = c.nr_atend_origem_pa and b.nr_atendimento = c.nr_atendimento and c.cd_pessoa_fisica = pf.cd_pessoa_fisica and b.nr_seq_interno = Obter_Atepacu_paciente(c.nr_atendimento, 'PI') and a.ie_desfecho = 'I' and ((a.ie_tipo_orientacao <> 'P') or ((select max(nvl(p.ie_liberar_desfecho,'N')) from parametro_medico p where p.cd_estabelecimento = to_number(cd_estabelecimento_p)) = 'N') or ((a.dt_liberacao is not null) and (a.dt_inativacao is null))) and a.dt_desfecho is not null and b.dt_entrada_unidade is not null and c.nr_atend_origem_pa is not null and a.dt_desfecho >= pfcs_get_pa_period and c.cd_estabelecimento = to_number(cd_estabelecimento_p) RETURNS bigint AS $body$
DECLARE


final_value_w bigint;

BEGIN

	if (persons_field_p = 0 ) then
		final_value_w := 0;
	else
		final_value_w := time_field_p / persons_field_p;
	end if;

	return final_value_w;

end;

begin

	nr_seq_operational_level_w := pfcs_get_structure_level(
									cd_establishment_p => cd_estabelecimento_p,
									ie_level_p => 'O',
									ie_info_p => 'C');

	for r_c01 in c01 loop
		begin

			qt_time_awaiting_bed_w := round((r_c01.dt_entry_date_entity - r_c01.dt_outcome) * 1440);

			qt_total_time_patient_w := qt_total_time_patient_w + qt_time_awaiting_bed_w;
			qt_total_patient_w := qt_total_patient_w + 1;

			select 	nextval('pfcs_panel_detail_seq')
			into STRICT 	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			insert into pfcs_detail_patient(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_encounter,
				dt_entrance,
				id_patient,
				nm_patient,
				ds_gender,
				ds_classification,
				dt_birthdate,
                ds_age_range,
				qt_time_awaiting_bed,
				nr_seq_detail)
			values (
				nextval('pfcs_detail_patient_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				r_c01.nr_encounter,
				r_c01.dt_entrance,
				r_c01.id_patient,
				r_c01.nm_patient,
				r_c01.ds_gender,
				r_c01.ds_classification,
				r_c01.dt_birthdate,
                r_c01.qt_idade_paciente,
				qt_time_awaiting_bed_w,
				pfcs_panel_detail_seq_w);

			qt_time_awaiting_bed_w := null;


		end;
	end loop;

	qt_average_time_w := round(pfcs_average_time(qt_total_time_patient_w, qt_total_patient_w));

	commit;

	 := pfcs_pck.pfcs_generate_results(
			vl_indicator_p => qt_average_time_w, ds_reference_value_p => '', nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck.pfcs_update_detail(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_panel_p => nr_seq_panel_w,
			nr_seq_operational_level_p => nr_seq_operational_level_w,
			nm_usuario_p => nm_usuario_p);

	CALL pfcs_pck.pfcs_activate_records(
			nr_seq_indicator_p => nr_seq_indicator_p,
			nr_seq_operational_level_p => nr_seq_operational_level_w,
			nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calculate_average_time ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) is c01 CURSOR FOR SELECT c.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(c.cd_pessoa_fisica, 'list'), obter_nome_pf(c.cd_pessoa_fisica)) nm_patient, pfcs_obter_lista_dados_classif(c.cd_pessoa_fisica) ds_classification, obter_sexo_pf(c.cd_pessoa_fisica, 'D') ds_gender, pf.dt_nascimento dt_birthdate, obter_dados_pf(c.cd_pessoa_fisica, 'I') qt_idade_paciente, c.nr_atendimento nr_encounter, c.dt_entrada dt_entrance, a.dt_desfecho dt_outcome, b.dt_entrada_unidade dt_entry_date_entity from atendimento_alta a, atend_paciente_unidade b, atendimento_paciente c, pessoa_fisica pf where a.nr_atendimento = b.nr_atendimento and b.nr_atendimento = c.nr_atendimento and c.cd_pessoa_fisica = pf.cd_pessoa_fisica and b.nr_seq_interno = Obter_Atepacu_paciente(a.nr_atendimento, 'PI') and a.ie_desfecho = 'I' and ((a.ie_tipo_orientacao <> 'P') or ((select max(nvl(p.ie_liberar_desfecho,'N')) from parametro_medico p where p.cd_estabelecimento = to_number(cd_estabelecimento_p)) = 'N') or ((a.dt_liberacao is not null) and (a.dt_inativacao is null))) and a.dt_desfecho is not null and b.dt_entrada_unidade is not null and a.dt_desfecho >= pfcs_get_pa_period and c.cd_estabelecimento = to_number(cd_estabelecimento_p) union select c.cd_pessoa_fisica id_patient, nvl(get_formatted_person_name(c.cd_pessoa_fisica, 'list'), obter_nome_pf(c.cd_pessoa_fisica)) nm_patient, pfcs_obter_lista_dados_classif(c.cd_pessoa_fisica) ds_classification, obter_sexo_pf(c.cd_pessoa_fisica, 'D') ds_gender, pf.dt_nascimento dt_birthdate, obter_dados_pf(c.cd_pessoa_fisica, 'I') qt_idade_paciente, c.nr_atendimento nr_encounter, c.dt_entrada dt_entrance, a.dt_desfecho dt_outcome, b.dt_entrada_unidade dt_entry_date_entity from atendimento_alta a, atend_paciente_unidade b, atendimento_paciente c, pessoa_fisica pf where a.nr_atendimento = c.nr_atend_origem_pa and b.nr_atendimento = c.nr_atendimento and c.cd_pessoa_fisica = pf.cd_pessoa_fisica and b.nr_seq_interno = Obter_Atepacu_paciente(c.nr_atendimento, 'PI') and a.ie_desfecho = 'I' and ((a.ie_tipo_orientacao <> 'P') or ((select max(nvl(p.ie_liberar_desfecho,'N')) from parametro_medico p where p.cd_estabelecimento = to_number(cd_estabelecimento_p)) = 'N') or ((a.dt_liberacao is not null) and (a.dt_inativacao is null))) and a.dt_desfecho is not null and b.dt_entrada_unidade is not null and c.nr_atend_origem_pa is not null and a.dt_desfecho >= pfcs_get_pa_period and c.cd_estabelecimento = to_number(cd_estabelecimento_p) FROM PUBLIC;

