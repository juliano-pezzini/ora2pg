-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_apropriar_lanc_prog_pag ( nr_seq_pagador_p bigint, nr_seq_mensalidade_p bigint, dt_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE


qt_segurados_w			bigint;
vl_rateio_w			double precision;
ie_tipo_mensalidade_w		varchar(10);
ie_tipo_item_w			varchar(10);
vl_lanc_prog_w			double precision :=0;
vl_soma_item_w			double precision :=0;
nr_seq_mensalidade_seg_w	bigint;
vl_mens_segurado_w		double precision :=0;
vl_mens_segurado_abat_w		double precision :=0;
dt_referencia_lanc_w		timestamp;
nr_seq_mens_seg_item_w		bigint;
nr_seq_segurado_mens_w		bigint;
nr_seq_item_mensalidade_w	pls_mensalidade_seg_item.nr_sequencia%type;

-- Este cursor busca o valor de saldo do segurado mensalidade
C01 CURSOR FOR
	SELECT	CASE WHEN b.ie_tipo_lanc='P' THEN 'P'  ELSE 'N' END ,
		b.ie_tipo_item,
		b.vl_item
	from	pls_segurado_mensalidade b
	where	b.nr_seq_pagador		= nr_seq_pagador_p
	and	b.ie_situacao			= 'A'
	and	b.ie_rateio_beneficiarios	= 'S'
	and	trunc(b.dt_referencia,'month')	= dt_referencia_p;

-- Este cursor varre todas as mensalidaddes de segurados da mensalidade do parâmetro
C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_mensalidade_segurado a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p;


BEGIN

open C01;
loop
fetch C01 into
	ie_tipo_mensalidade_w,
	ie_tipo_item_w,
	vl_lanc_prog_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	/* Se for lançamento programado gerado de título a receber */

	select	count(*)
	into STRICT	qt_segurados_w
	from	pls_mensalidade_segurado a
	where	a.nr_seq_mensalidade	= nr_seq_mensalidade_p;

	vl_rateio_w	:= dividir_sem_round(vl_lanc_prog_w,coalesce(qt_segurados_w,1));

	/* Senão, efetua o rateio para os beneficiarios do pagador em questão*/

	if (coalesce(vl_rateio_w,0) <> 0) then
		open C02;
		loop
		fetch C02 into
			nr_seq_mensalidade_seg_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			nr_seq_item_mensalidade_w	:= null;

			nr_seq_item_mensalidade_w := pls_insert_mens_seg_item(ie_tipo_item_w, nm_usuario_p, null, null, null, null, null, null, null, ie_tipo_mensalidade_w, null, null, null, null, null, null, null, nr_seq_mensalidade_seg_w, nr_seq_mensalidade_p, null, null, null, null, null, null, null, null, null, null, null, null, coalesce(vl_rateio_w,0), nr_seq_item_mensalidade_w);

			if (nr_seq_item_mensalidade_w IS NOT NULL AND nr_seq_item_mensalidade_w::text <> '') then
				vl_soma_item_w	:= vl_soma_item_w + vl_rateio_w;
			end if;

			end;
		end loop;
		close C02;

		/* Arrendondar no último segurado */

		if (vl_lanc_prog_w <> vl_soma_item_w) then
			update	pls_mensalidade_seg_item
			set	vl_item	= vl_rateio_w + (vl_lanc_prog_w - vl_soma_item_w)
			where	nr_seq_mensalidade_seg 	= nr_seq_mensalidade_seg_w
			and	ie_tipo_item		= ie_tipo_item_w
			and	ie_tipo_mensalidade	= ie_tipo_mensalidade_w;
		end if;
	end if;
	end;
end loop;
close C01;

--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_apropriar_lanc_prog_pag ( nr_seq_pagador_p bigint, nr_seq_mensalidade_p bigint, dt_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

