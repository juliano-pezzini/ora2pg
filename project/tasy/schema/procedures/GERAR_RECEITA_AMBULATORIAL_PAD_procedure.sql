-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_receita_ambulatorial_pad ( nm_usuario_p text, dt_inicio_receita_p timestamp, dt_validade_receita_p timestamp, ie_tipo_receita_p text, nr_serie_p text, nr_receita_p text, nr_dias_p bigint, cd_medico_p text, cd_pessoa_fisica_p text, nr_seq_pac_homecare_p text ) AS $body$
DECLARE



nr_sequencia_w 				bigint;
nr_sequencia_item_w 		bigint;
qt_registro_farmacia_w		bigint;
cd_intervalo_w				varchar(100);
cd_unidade_medida_w			varchar(100);
ie_via_aplicacao_w			varchar(100);
qt_material_w				varchar(100);
cd_material_w				varchar(100);
nr_atendimento_origem_w 	varchar(10);
dt_validade_receita_w       timestamp;



C01 CURSOR FOR
SELECT cd_material,
	   cd_intervalo,
	   cd_unidade_medida,
	   ie_via_aplicacao,
	   qt_material
from hc_paciente_material
where nr_seq_pac_home_care = nr_seq_pac_homecare_p
and obter_se_permite_receita_hc(nr_sequencia) = 'S';



BEGIN

select nextval('fa_receita_farmacia_seq')
into STRICT nr_sequencia_w
;

if ( coalesce(cd_medico_p::text, '') = '') then

	select max(nr_atendimento_origem)
	into STRICT nr_atendimento_origem_w
	from paciente_home_care
	where nr_sequencia = nr_seq_pac_homecare_p;
	
	if ( coalesce(nr_atendimento_origem_w::text, '') = '') then

		select obter_ultimo_atendimento(cd_pessoa_fisica_p)
		into STRICT nr_atendimento_origem_w
		;
		
	end if;
end if;


 
insert into fa_receita_farmacia( nr_sequencia,
								  dt_receita,
								  nm_usuario,
								  nm_usuario_nrec,
								  dt_atualizacao,
								  dt_atualizacao_nrec,
								  dt_inicio_receita,
								  dt_validade_receita,
								  ie_tipo_receita,
								  nr_serie,
								  nr_receita,
								  nr_dias_receita,
								  cd_medico,
								  cd_pessoa_fisica,
								  cd_estabelecimento) values (  nr_sequencia_w,
															 clock_timestamp(),
															 nm_usuario_p,
															 nm_usuario_p,
															 clock_timestamp(),
															 clock_timestamp(),
															 dt_inicio_receita_p,
															 dt_validade_receita_p,
															 ie_tipo_receita_p,
															 nr_serie_p,
															 nr_receita_p,
															 nr_dias_p,
															 coalesce(cd_medico_p,OBTER_MEDICO_RESP_ATEND(nr_atendimento_origem_w,'C')),
															 cd_pessoa_fisica_p,
															 wheb_usuario_pck.get_cd_estabelecimento);
															
commit;

select count(*)
into STRICT qt_registro_farmacia_w
from fa_receita_farmacia
where nr_sequencia = nr_sequencia_w;

if (qt_registro_farmacia_w > 0) then
	
	open C01;
		loop
		fetch C01 into
			cd_material_w,
			cd_intervalo_w,
			cd_unidade_medida_w,		
			ie_via_aplicacao_w,		
			qt_material_w;			
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			if ((cd_material_w IS NOT NULL AND cd_material_w::text <> '') and
			   (cd_intervalo_w IS NOT NULL AND cd_intervalo_w::text <> '') and
			   (cd_unidade_medida_w IS NOT NULL AND cd_unidade_medida_w::text <> '') and
			   (qt_material_w IS NOT NULL AND qt_material_w::text <> '')) then
			
				select nextval('fa_receita_farmacia_item_seq')
				into STRICT nr_sequencia_item_w
				;
				
				if (nr_dias_p IS NOT NULL AND nr_dias_p::text <> '' AND dt_inicio_receita_p IS NOT NULL AND dt_inicio_receita_p::text <> '') then
				
					dt_validade_receita_w := dt_inicio_receita_p + nr_dias_p;
					
				end if;
				
		
					insert into fa_receita_farmacia_item( nr_sequencia,
														dt_atualizacao,
														dt_atualizacao_nrec,
														nm_usuario,
														nm_usuario_nrec,
														cd_intervalo,
														cd_material,
														cd_unidade_medida,
														ie_via_aplicacao,
														nr_seq_receita,
														qt_dose,
														dt_inicio_receita,
														nr_dias_receita,
														dt_validade_receita) values ( nr_sequencia_item_w,
																			clock_timestamp(),
																			clock_timestamp(),
																			nm_usuario_p,
																			nm_usuario_p,
																			cd_intervalo_w,
																			cd_material_w,
																			cd_unidade_medida_w,
																			ie_via_aplicacao_w,
																			nr_sequencia_w,
																			qt_material_w,
																			dt_inicio_receita_p,
																			nr_dias_p,
																			dt_validade_receita_w);
																			
					commit;
				end if;															
			end;
		end loop;
close C01;


end if;
															

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_receita_ambulatorial_pad ( nm_usuario_p text, dt_inicio_receita_p timestamp, dt_validade_receita_p timestamp, ie_tipo_receita_p text, nr_serie_p text, nr_receita_p text, nr_dias_p bigint, cd_medico_p text, cd_pessoa_fisica_p text, nr_seq_pac_homecare_p text ) FROM PUBLIC;

