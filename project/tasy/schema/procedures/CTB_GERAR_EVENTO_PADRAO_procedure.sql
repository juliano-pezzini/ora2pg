-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_evento_padrao ( cd_tipo_lote_contabil_p bigint, cd_evento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_tipo_lote_contabil_w		tipo_lote_contabil.cd_tipo_lote_contabil%type := cd_tipo_lote_contabil_p;
cd_evento_w			evento_contabil_param.cd_evento%type := cd_evento_p;
ds_parametro_w			evento_contabil_param.ds_parametro%type;
nm_tabela_w			evento_contabil_param.nm_tabela%type;
nm_atributo_w			evento_contabil_param.nm_atributo%type;
ie_debito_credito_w			evento_contabil_param.ie_debito_credito%type;
cd_tributo_w			evento_contabil_param.cd_tributo%type;
ie_so_sem_rateio_w 		evento_contabil_param.ie_so_sem_rateio%type;
nr_sequencia_w			evento_contabil_param.nr_sequencia%type;


BEGIN

select 	max(nr_sequencia)
into STRICT	nr_sequencia_w
from	evento_contabil_param;

if ((coalesce(cd_tipo_lote_contabil_w, 0) = 2) or (coalesce(cd_tipo_lote_contabil_w, 0) = 51)) then
	begin

	ds_parametro_w	:= wheb_mensagem_pck.get_texto(671635);
	nm_tabela_w	:= 'NOTA_FISCAL';
	nm_atributo_w	:= 'VL_TOTAL_NOTA';
	ie_debito_credito_w:= 'C';
	cd_tributo_w	:= null;
	ie_so_sem_rateio_w:= 'S';
	nr_sequencia_w	:= nr_sequencia_w + 1;

	insert into evento_contabil_param(	nr_sequencia,
						cd_tipo_lote_contabil,
						cd_evento,
						ds_parametro,
						nm_tabela,
						nm_atributo,
						ie_debito_credito,
						dt_atualizacao,
						nm_usuario,
						cd_tributo,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_so_sem_rateio)
				values (	nr_sequencia_w,
						cd_tipo_lote_contabil_w,
						cd_evento_w,
						ds_parametro_w,
						nm_tabela_w,
						nm_atributo_w,
						ie_debito_credito_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tributo_w,
						clock_timestamp(),
						nm_usuario_p,
						ie_so_sem_rateio_w);

	ds_parametro_w	:= wheb_mensagem_pck.get_texto(671636);
	nm_tabela_w	:= 'NOTA_FISCAL_ITEM';
	nm_atributo_w	:= 'VL_TOTAL_ITEM_NF';
	ie_debito_credito_w:= 'D';
	cd_tributo_w	:= null;
	ie_so_sem_rateio_w:= 'S';
	nr_sequencia_w	:= nr_sequencia_w + 1;

	insert into evento_contabil_param(	nr_sequencia,
						cd_tipo_lote_contabil,
						cd_evento,
						ds_parametro,
						nm_tabela,
						nm_atributo,
						ie_debito_credito,
						dt_atualizacao,
						nm_usuario,
						cd_tributo,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						ie_so_sem_rateio)
				values (	nr_sequencia_w,
						cd_tipo_lote_contabil_w,
						cd_evento_w,
						ds_parametro_w,
						nm_tabela_w,
						nm_atributo_w,
						ie_debito_credito_w,
						clock_timestamp(),
						nm_usuario_p,
						cd_tributo_w,
						clock_timestamp(),
						nm_usuario_p,
						ie_so_sem_rateio_w);

	if (coalesce(cd_tipo_lote_contabil_w, 0) = 51) then
		begin

		ds_parametro_w	:= wheb_mensagem_pck.get_texto(671637);
		nm_tabela_w	:= 'NOTA_FISCAL_ITEM_TRIB';
		nm_atributo_w	:= 'VL_TRIBUTO';
		ie_debito_credito_w:= 'C';
		cd_tributo_w	:= null;
		ie_so_sem_rateio_w:= 'S';
		nr_sequencia_w	:= nr_sequencia_w + 1;

		insert into evento_contabil_param(	nr_sequencia,
							cd_tipo_lote_contabil,
							cd_evento,
							ds_parametro,
							nm_tabela,
							nm_atributo,
							ie_debito_credito,
							dt_atualizacao,
							nm_usuario,
							cd_tributo,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_so_sem_rateio)
					values (	nr_sequencia_w,
							cd_tipo_lote_contabil_w,
							cd_evento_w,
							ds_parametro_w,
							nm_tabela_w,
							nm_atributo_w,
							ie_debito_credito_w,
							clock_timestamp(),
							nm_usuario_p,
							cd_tributo_w,
							clock_timestamp(),
							nm_usuario_p,
							ie_so_sem_rateio_w);

		end;
	end if;

	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_evento_padrao ( cd_tipo_lote_contabil_p bigint, cd_evento_p bigint, nm_usuario_p text) FROM PUBLIC;

