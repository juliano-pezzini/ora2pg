-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_exame_rotina_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_tipo_exame_p bigint, dt_prev_exec_p timestamp, cd_intervalo_p text, ds_dado_clinico_p text, ds_resumo_clinico_p text, ds_exame_fisico_p text, cd_cid_p text, nm_usuario_p text, cd_material_p text, cd_medico_exec_p text, qt_procedimento_p bigint, ie_lado_p text, nr_seq_topografia_p bigint, nr_seq_prot_glic_p text, cd_funcao_p bigint, cd_setor_atendimento_p bigint, ds_observacao_p text, ie_beira_leito_p text, ie_seleciou_horario_rotina_p text, ds_lista_proced_p text, nr_seq_prescr_p INOUT text, hr_exec_proced_p text, ds_justificativa_p text, ie_exec_urgencia_p text, nr_seq_condicao_p bigint, cd_cgc_externo_p text, ds_material_especial_p text, ds_lista_mat_proced_p text, ie_anestesia_p text, ie_forma_exame_p text, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, ie_origem_proced_p text, ds_lista_kit_proced_p text, nr_seq_exame_p bigint, ds_exame_dia_p INOUT text, nr_seq_contraste_p bigint, ds_exames_dep_p text, nr_seq_rotina_p bigint, ie_acm_p text default 'N', cd_material_rotina_p text DEFAULT NULL) AS $body$
DECLARE

			
c_fmt_data	constant varchar(21) := 'dd/mm/yyyy hh24:mi:ss';

nr_sequencia_w				bigint;
nr_agrupamento_w			bigint;
nr_seq_exame_w				bigint;
nr_seq_exame_ww				bigint;
nr_seq_material_w			bigint;
CD_KIT_W					bigint;
cd_procedimento_w			bigint;
nr_seq_interno_w			bigint;
ie_origem_proced_w			bigint;
cd_setor_exclusivo_w		integer;
dt_prescricao_w				timestamp;
dt_inicio_prescr_w			timestamp;
dt_coleta_w					timestamp;
dt_validade_prescr_w		timestamp;
cd_mate_exame_rotina_w		varchar(20);
CD_LADO_w					varchar(20);
ds_lista_kit_proced_w		varchar(150);
ds_exames_dep_w				varchar(150);
ds_dado_clinico_w			varchar(4000);
nr_sequencia_proc_w			bigint;
cd_intervalo_2w				varchar(07);
cd_intervalo_Gliw			varchar(07) :=  null;
VarParam998_w				varchar(07);
ie_data_prescricao_w		varchar(1) := 'N';
ie_pos_virgula_3w			bigint;
tam_lista_3w				bigint;
qt_w						bigint;
cd_material_exame_w			varchar(20);
ds_resumo_clinico_w			varchar(2000);
cd_material_exame2_w		varchar(20);
ie_permite_w				varchar(2) := 'S';
ie_setor_paciente_w			varchar(07);
cd_intervalo_w				varchar(07);
ie_gerar_exame_interno_w	varchar(07);
ie_amostra_w				varchar(07);
ie_data_prev_w				varchar(10);
ie_tipo_proced_w			varchar(10);
ie_gerar_assoc_proc_w		varchar(10);
VarEliminaHorFinalVig_w 	varchar(10);
ie_gerar_horarios_w			varchar(10);
cd_especialidade_w			varchar(10);
ie_amostra_entregue_w		varchar(10);
ie_operacao_w				varchar(10);
ie_kit_automatico_w			varchar(10);
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
cd_plano_convenio_w			varchar(10);
ie_cig_w					varchar(50);
cd_pessoa_coleta_w			varchar(50);
ie_obs_laboratorio_w		varchar(10);
ie_origem_w					bigint;
qt_peca_ap_w				smallint;
ie_hor_proced_interv_w		varchar(10);
cd_setor_atend_conv_w		bigint;
cd_setor_prescr_w			bigint;
cd_prescritor_w				varchar(20);
ds_orientacao_usuario_w		varchar(4000);
ds_observacao_final_w		varchar(4000);
ds_indicacao_w				varchar(255);
cd_kit_material_w			bigint;
ie_tipo_atendimento_w		smallint;
ie_tipo_convenio_w			smallint;
cd_estab_w					smallint;
ie_data_prescricao_ww		varchar(50);
nr_atendimento_w			bigint;
ie_tipo_atend_w				smallint;
ie_tipo_conv_w				smallint;
ds_rotina_w					varchar(80);
ie_guia_w					varchar(255);
ds_material_esp_w			varchar(45);
nr_horas_validade_w			integer;
nr_ocorrencia_proced_w		double precision := 0;
ds_horarios_proced_w       	varchar(2000) := '';
ds_horarios_proced2_w		varchar(2000) := '';
cd_estabelecimento_w		smallint;
ds_observacao_w				varchar(2000);
ie_Gera_Setor_PrescrProc_w	varchar(1);
nr_proc_interno_w			bigint;
ie_horario_regra_w			varchar(1);
dt_prev_execucao_w			timestamp;
dt_primeiro_horario_w		timestamp;
hr_prev_execucao_w			varchar(5);
ds_erro_w					varchar(255);
ds_erro_autorizacao_w		varchar(255);
qt_material_w				bigint;
VarMatExame_w				varchar(1);
cd_setor_atendimento_w		integer;
ie_lado_w					varchar(1);
nr_seq_topografia_w			bigint;
nr_seq_topografia_ww 		bigint;
ds_observ_proc_interno_w	varchar(2000) := '';/* Ivan em 24/08/2007 OS66472 */
ds_observacao_nao_lab_w		varchar(4000);
ds_observacao_lab_w			varchar(4000);
cd_setor_coleta_w			integer:= null;/* Oraci em 10/10/2007 OS70724 */
cd_setor_atend_w			varchar(255);
cd_setor_col_w				varchar(255);
cd_setor_entrega_w			varchar(255):= null;
qt_dia_entrega_w			numeric(20);
ie_emite_mapa_w				varchar(255);
ds_hora_fixa_w				varchar(255);
ie_data_resultado_w			varchar(255);
ie_atualizar_recoleta_w		varchar(255);
ie_gerar_setor_w			varchar(1);
qt_min_entrega_w			bigint;
qt_hora_intervalo_w			bigint;
qt_procedimento_w			double precision;
cd_perfil_w					integer;
qt_proced_ambos_w			varchar(255);
nr_seq_prot_glic_w			bigint;
ie_agora_w					varchar(1);/* Dalcastagne em 15/07/2008 OS 92884 */
cd_intervalo_agora_w		varchar(7);
ie_horario_prescr_w			varchar(15);
qt_min_intervalo_w			integer;
cd_setor_entrega_ww			integer;
ie_gerar_setor_entrega_w	varchar(15);
ie_somente_setor_exclusivo_w varchar(1);
qt_proc_padrao_w			double precision;
cd_intervalo_padrao_w		varchar(7);
ds_horarios_padrao_w		varchar(2000);
VarAtualDataPrevResult_w	varchar(1);
dt_resultado_w				timestamp := null;
cd_setor_atual_usuario_w	integer;
ie_interv_agora_w			varchar(1);
ie_considera_agora_w		varchar(10);
nr_doc_convenio_w			varchar(255);
ie_executar_leito_w			varchar(10);
ie_regra_lanc_aut_w			varchar(1);
nr_seq_contraste_w			bigint := null;
ie_prescr_proc_sem_lib_w	varchar(30);
ie_Permite_Duplicar_w		varchar(1);
ds_lista_proced_w			varchar(4000) := '';
tam_lista_w					bigint;
tam_lista2_w				bigint;
ie_pos_virgula_w			smallint;
ie_pos_espaco_w				smallint;
ds_lista_rotina_w			varchar(4000);
ds_lista_lab_w				varchar(255);
ds_lista_proc_w				varchar(255);
ie_tipo_lista_w				varchar(1);
nr_seq_lista_w				varchar(10);
ie_exame_regra_edicao_w		varchar(1);
qt_existe_setores_w			bigint;
cd_setor_w					bigint;
ie_verifica_setores_adic_w	varchar(10);
qt_existe_setores_int_w		bigint;
ie_acm_sn_w 				varchar(1);
ie_se_necessario_w 			varchar(1);
ie_acm_w 					varchar(1);
ie_excluir_proc_princ_w		varchar(1);
ie_proc_sem_dt_prev_w		varchar(1);
ie_gerar_proc_sem_dt_prev_w	varchar(1) := 'N';
cd_classif_setor_w			bigint;
ie_setor_classif_w			varchar(1);
ie_avisa_result_w			varchar(1);
ie_gravar_indic_w			varchar(1);
ie_marca_campo_w			varchar(1);
ie_agora_acm_sn_w			varchar(15);	
ie_exige_aprovacao_w 		varchar(1);
ie_dia_semana_final_w 		bigint;
ie_dia_semana_upd_w			smallint;
cd_intervalo_ww				varchar(7);
cd_medico_exec_w			varchar(10);
qt_min_atraso_w   	bigint;
ie_medico_executor_w		varchar(1);
cd_cgc_w					varchar(14);
cd_medico_executor_w		varchar(10);
cd_medico_exec_examLab_w	varchar(10);
cd_pessoa_fisica_w			varchar(10);
cd_pessoa_fisica_prescr_w	varchar(10);
ie_utiliza_regra_medico_w	varchar(1);
ie_proc_interno_exam_lab_w	varchar(1);
nr_seq_proc_interno_aux_w	bigint;
dt_agenda_w					timestamp;
cd_pessoa_fis_agenda_w		varchar(10);
ie_atualizar_nr_seq_ag_w	varchar(1);
nr_seq_agenda_serv_w		bigint;
ie_vinc_seq_agend_w			varchar(1);
ie_prescr_liberada_w		varchar(1);
ie_interv_padrao_prescr_w	varchar(1);
ie_consiste_duplic_w		varchar(1);
ie_lancar_contrastes_w		varchar(1)	:= 'N';
ds_justificativa_w			varchar(2000);
ie_entrou_c03_w			varchar(1)	:= 'N';
cd_medico_proc_urgente_w	varchar(10);
cd_intervalo_exame_w		varchar(15);
cd_intervalo_exame_ww		varchar(15);
ie_forma_atual_dt_result_w	exame_lab_regra_setor.ie_atul_data_result%type;
dt_prev_exec_agora_w		timestamp	:= clock_timestamp();
ie_regra_w					smallint;
nr_seq_regra_w				bigint;
ie_glosa_w					varchar(3);
nr_seq_regra_ajuste_w		bigint;
ie_autorizacao_w			varchar(5) := 'L';
ie_check_sn_w				varchar(1);
ie_pos_hifen_w   			bigint;
qt_proced_depend_w			integer;
ie_considera_data_prevista_w	varchar(1);

ie_log_dt_prev_execucao_w		varchar(1);
ds_log_dt_prev_execucao_w	varchar(4000);

cd_edicao_amb_w             convenio_amb.cd_edicao_amb%type;
cd_edicao_amb_exame_w       convenio_amb.cd_edicao_amb%type;
vl_parametro1209_w      varchar(3);

c01 CURSOR FOR 
SELECT	coalesce(cd_procedimento_p, a.cd_procedimento), 
		coalesce(ie_origem_proced_p, a.ie_origem_proced), 
		a.ds_prescricao, 
		a.ds_mat_esp, 
		coalesce(nr_seq_proc_interno_p, a.nr_proc_interno), 
		coalesce(a.ie_agora,'N'), 
		ie_horario_prescr, 
		a.qt_min_intervalo, 
		a.qt_hora_intervalo, 
		coalesce(obter_interv_w_rot_esp(a.nr_sequencia,'P'),coalesce(a.cd_intervalo, cd_intervalo_w)), 
		coalesce(ie_amostra,'N'), 
		coalesce(ie_executar_leito,'N'), 
		coalesce(a.qt_procedimento,qt_procedimento_p), 
		CASE WHEN ie_acm_p='S' THEN  'S'  ELSE coalesce(a.ie_acm,'N') END , 
		coalesce(a.ie_se_necessario,'N'), 
		substr(a.ds_observacao,1,255) ds_observacao, 
		a.cd_medico_exec, 
		a.cd_kit_material, 
		a.ds_resumo_clinico, 
		a.ds_justificativa, 
		a.CD_LADO,
		a.nr_seq_topografia
from	procedimento_rotina a 
where	((obter_se_contido(a.nr_sequencia,ds_lista_proc_w) = 'S') or (coalesce(ds_lista_proced_p::text, '') = '')) 
and		((coalesce(a.cd_perfil::text, '') = '') or (a.cd_perfil = cd_perfil_w)) 
and		a.nr_seq_rotina		= nr_sequencia_p;

c02 CURSOR FOR 
SELECT	coalesce(cd_procedimento_p, coalesce(c.cd_procedimento, a.cd_procedimento)), 
		coalesce(ie_origem_proced_p, coalesce(c.ie_origem_proced, a.ie_origem_proced)), 
		b.cd_setor_exclusivo, 
		coalesce(nr_seq_exame_p, a.nr_seq_exame), 
		x.nr_seq_material, 
		coalesce(x.ds_prescricao,a.ds_exame_prescricao), 
		x.ds_mat_esp, 
		coalesce(x.ie_agora,'N'), 
		x.ie_horario_prescr, 
		x.qt_hora_intervalo, 
		x.qt_min_intervalo, 
		coalesce(x.cd_intervalo, cd_intervalo_w), 
		coalesce(x.ie_amostra,'N'), 
		a.ds_orientacao_usuario, 
		coalesce(nr_seq_proc_interno_p, x.nr_seq_exame_interno), 
		substr(x.ds_observacao,1,255) ds_observacao, 
		x.nr_sequencia, 
		coalesce(cd_material_rotina_p, obter_mat_exame_selecionado(nr_sequencia_p,ds_lista_mat_proced_p,x.nr_sequencia)), 
		x.cd_medico_exec, 
		x.ds_resumo_clinico,
		CASE WHEN ie_acm_p='S' THEN  'S'  ELSE coalesce(x.ie_acm,'N') END ,
		coalesce(x.ie_se_necessario, 'N'),
        c.cd_edicao_amb
FROM exame_lab_rotina x, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio AND cd_categoria_w = c.cd_categoria AND obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w, cd_convenio_w, cd_categoria_w) = c.ie_origem_proced)
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE x.nr_seq_exame		= a.nr_seq_exame       and ((not exists (	SELECT	y.cd_procedimento 
						from	prescr_procedimento y 
						where	y.nr_prescricao		= nr_prescricao_p 
						and		y.cd_procedimento	= coalesce(c.cd_procedimento, b.cd_procedimento) 
						and		y.ie_origem_proced	= coalesce(c.ie_origem_proced ,b.ie_origem_proced))) or (ie_permite_Duplicar_w = 'S')) and coalesce(c.ie_tipo_atendimento, ie_tipo_atend_w)	= ie_tipo_atend_w  and clock_timestamp() between coalesce(c.dt_inicio_vigencia,clock_timestamp()) and coalesce(c.dt_fim_vigencia,clock_timestamp()) and ((obter_se_contido(x.nr_sequencia,ds_lista_lab_w) = 'S') or (coalesce(ds_lista_proced_p::text, '') = '')) and x.nr_seq_rotina		= nr_sequencia_p;

c03 CURSOR FOR 
SELECT	coalesce(cd_procedimento_p, coalesce(c.cd_procedimento, a.cd_procedimento)), 
		coalesce(ie_origem_proced_p, coalesce(c.ie_origem_proced, a.ie_origem_proced)), 
		b.cd_setor_exclusivo, 
		coalesce(nr_seq_exame_p, a.nr_seq_exame), 
		x.nr_seq_material, 
		coalesce(x.ds_prescricao,a.ds_exame_prescricao), 
		x.ds_mat_esp, 
		coalesce(x.ie_agora,'N'), 
		x.ie_horario_prescr, 
		coalesce(x.ie_amostra,'N'), 
		coalesce(nr_seq_proc_interno_p, x.nr_seq_exame_interno), 
		substr(x.ds_observacao,1,255) ds_observacao, 
		x.cd_medico_exec, 
		coalesce(cd_intervalo_p,coalesce(x.cd_intervalo,cd_intervalo_exame_ww)) cd_intervalo,
		CASE WHEN ie_acm_p='S' THEN  'S'  ELSE coalesce(x.ie_acm,'N') END ,
		coalesce(x.ie_se_necessario, 'N')
FROM exame_lab_rotina x, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio AND obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w, cd_convenio_w, cd_categoria_w) = c.ie_origem_proced)
LEFT OUTER JOIN procedimento b ON (a.cd_procedimento = b.cd_procedimento AND a.ie_origem_proced = b.ie_origem_proced)
WHERE x.nr_seq_exame		= a.nr_seq_exame     and clock_timestamp() between coalesce(c.dt_inicio_vigencia,clock_timestamp()) and coalesce(c.dt_fim_vigencia,clock_timestamp())  and coalesce(c.ie_tipo_atendimento, coalesce(ie_tipo_atend_w,1))	= coalesce(ie_tipo_atend_w,1) and x.nr_sequencia		= nr_sequencia_p and coalesce(x.ie_situacao,'A') = 'A' and coalesce(c.ie_situacao,'A') = 'A';

procedure add_log_dt_prev_execucao(nr_linha integer, nr_seq_proc prescr_procedimento.nr_sequencia%type, ds_log_p text) is
;
BEGIN
	if (ie_log_dt_prev_execucao_w = 'S') then
		ds_log_dt_prev_execucao_w := substr(ds_log_dt_prev_execucao_w||chr(10)||$$PLSQL_UNIT||':'||nr_linha||' NR_SEQ_PROCEDIMENTO('||nr_seq_proc||') '||ds_log_p, 1, 4000);
	end if;
end;

begin
 
ds_dado_clinico_w	:= substr(ds_dado_clinico_p,1,2000);
 
select	max(nr_atendimento), 
		max(dt_prescricao), 
		max(dt_validade_prescr), 
		max(dt_inicio_prescr), 
		max(nr_horas_validade), 
		coalesce(max(cd_estabelecimento),1), 
		max(dt_primeiro_horario), 
		max(cd_setor_atendimento), 
		max(cd_setor_atendimento), 
		max(cd_setor_entrega), 
		obter_classif_setor(max(cd_setor_atendimento)), 
		max(cd_prescritor), 
		obter_especialidade_medico(max(cd_prescritor), 'C'), 
		max(cd_medico), 
		CASE WHEN coalesce(max(dt_liberacao),max(dt_liberacao_medico)) IS NULL THEN 'N'  ELSE 'S' END ,
		max(cd_pessoa_fisica)
into STRICT	nr_atendimento_w, 
		dt_prescricao_w, 
		dt_validade_prescr_w, 
		dt_inicio_prescr_w, 
		nr_horas_validade_w, 
		cd_estabelecimento_w, 
		dt_primeiro_horario_w, 
		cd_setor_atendimento_w, 
		cd_setor_prescr_w, 
		cd_setor_entrega_ww, 
		cd_classif_setor_w, 
		cd_prescritor_w, 
		cd_especialidade_w, 
		cd_medico_proc_urgente_w, 
		ie_prescr_liberada_w,
		cd_pessoa_fisica_prescr_w
from	prescr_medica 
where 	nr_prescricao	= nr_prescricao_p;
 
if (ie_prescr_liberada_w	= 'S') then  
    -- Esta prescricao ja foi liberada, a inclusao do exame/procedimento nao sera realizada
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(197691);
end if;
 
select	max(coalesce(ie_cons_dt_prev_regra, 'N')) 
into STRICT	ie_considera_data_prevista_w
from	lab_parametro
where 	cd_estabelecimento = cd_estabelecimento_w;
if (ds_lista_proced_p IS NOT NULL AND ds_lista_proced_p::text <> '') then
 
	ds_lista_proced_w := ds_lista_proced_p;
 
	while(ds_lista_proced_w IS NOT NULL AND ds_lista_proced_w::text <> '') loop 
		begin 		
		tam_lista_w				:= length(ds_lista_proced_w);
		ie_pos_virgula_w		:= position(';' in ds_lista_proced_w); 		
		ds_lista_rotina_w		:= substr(ds_lista_proced_w,1,(ie_pos_virgula_w - 1));
		ie_pos_espaco_w			:= position('--' in ds_lista_rotina_w);
		nr_seq_lista_w			:= substr(ds_lista_rotina_w,1,ie_pos_espaco_w - 1);
		ds_lista_rotina_w		:= substr(ds_lista_rotina_w,ie_pos_espaco_w + 2,(ie_pos_virgula_w - (ie_pos_espaco_w + 2)));
				
		
		if (nr_sequencia_p = (nr_seq_lista_w)::numeric ) then 
			while(ds_lista_rotina_w IS NOT NULL AND ds_lista_rotina_w::text <> '') loop 
				begin 
				tam_lista2_w			:= length(ds_lista_rotina_w);
				ie_pos_virgula_w		:= position(',' in ds_lista_rotina_w);

				if (ie_pos_virgula_w = 0) then
            nr_seq_lista_w := substr(ds_lista_rotina_w, 2,tam_lista2_w);
        else
            nr_seq_lista_w := substr(ds_lista_rotina_w, 2,(ie_pos_virgula_w - 2));
        end if;

				ie_tipo_lista_w			:= substr(ds_lista_rotina_w,1,1);
				if (ie_tipo_lista_w = 'L') then 
					if (coalesce(ds_lista_lab_w::text, '') = '') then 
						ds_lista_lab_w := nr_seq_lista_w;
					else 
						ds_lista_lab_w := ds_lista_lab_w||','||nr_seq_lista_w;
					end if;
				else 
					if (coalesce(ds_lista_proc_w::text, '') = '') then 
						ds_lista_proc_w := nr_seq_lista_w;
					else 
						ds_lista_proc_w := ds_lista_proc_w||','||nr_seq_lista_w;
					end if;
				end if;

				if (ie_pos_virgula_w = 0) then
            ds_lista_rotina_w:= '';
        else
            ds_lista_rotina_w := substr(ds_lista_rotina_w,(ie_pos_virgula_w + 1), tam_lista2_w);
        end if;

				end;
			end loop;
		end if;

		if (ie_pos_virgula_w = 0) then
        ds_lista_proced_w := '';
    else
        ds_lista_proced_w := substr(ds_lista_proced_w,(ie_pos_virgula_w + 1), tam_lista_w);
    end if;

		end;
	end loop; 	
end if;
 
if (nr_seq_prot_glic_p = '0') then 
	nr_seq_prot_glic_w	:= null;
else 
	nr_seq_prot_glic_w	:= nr_seq_prot_glic_p;
end if;
 
qt_procedimento_w	:= qt_procedimento_p;
if (ie_lado_p = '0') then 
	ie_lado_w	:= null;
else 
	ie_lado_w	:= ie_lado_p;
end if;

if (nr_seq_topografia_p = 0) then 
	nr_seq_topografia_w := null;
else
	nr_seq_topografia_w := nr_seq_topografia_p;
	nr_seq_topografia_ww := nr_seq_topografia_p;	
end if;
 
cd_perfil_w	:= obter_perfil_ativo;
 
CALL wheb_assist_pck.set_informacoes_usuario(cd_estabelecimento_w, cd_perfil_w, nm_usuario_p);
 
ie_horario_regra_w			:= wheb_assist_pck.obterParametroFuncao(924,69);
VarMatExame_w				:= wheb_assist_pck.obterParametroFuncao(924,88);
qt_proced_ambos_w			:= wheb_assist_pck.obterParametroFuncao(924,147);
ie_regra_lanc_aut_w			:= wheb_assist_pck.obterParametroFuncao(924,172);
VarAtualDataPrevResult_w	:= wheb_assist_pck.obterParametroFuncao(924,265);
ie_data_prev_w				:= wheb_assist_pck.obterParametroFuncao(924,277);
ie_considera_agora_w		:= wheb_assist_pck.obterParametroFuncao(924,309);
ie_gerar_horarios_w			:= wheb_assist_pck.obterParametroFuncao(924,398);
ie_hor_proced_interv_w		:= wheb_assist_pck.obterParametroFuncao(924,417);
VarEliminaHorFinalVig_w		:= wheb_assist_pck.obterParametroFuncao(924,443);
ie_obs_laboratorio_w		:= wheb_assist_pck.obterParametroFuncao(924,480);
ie_Gera_Setor_PrescrProc_w	:= wheb_assist_pck.obterParametroFuncao(924,493);
ie_prescr_proc_sem_lib_w	:= wheb_assist_pck.obterParametroFuncao(924,530);
ie_Permite_Duplicar_w		:= wheb_assist_pck.obterParametroFuncao(924,582);
ie_data_prescricao_w		:= wheb_assist_pck.obterParametroFuncao(924,608);
ie_gerar_exame_interno_w	:= wheb_assist_pck.obterParametroFuncao(924,649);
ie_exame_regra_edicao_w		:= wheb_assist_pck.obterParametroFuncao(924,666);
ie_gerar_assoc_proc_w		:= wheb_assist_pck.obterParametroFuncao(924,682);
ie_consiste_duplic_w		:= wheb_assist_pck.obterParametroFuncao(924,704);
ie_amostra_entregue_w		:= wheb_assist_pck.obterParametroFuncao(924,743);
ie_proc_sem_dt_prev_w		:= wheb_assist_pck.obterParametroFuncao(924,787);
ie_kit_automatico_w			:= wheb_assist_pck.obterParametroFuncao(924,810);
ie_setor_classif_w			:= wheb_assist_pck.obterParametroFuncao(924,835);
ie_marca_campo_w			:= wheb_assist_pck.obterParametroFuncao(924,809);
ie_gravar_indic_w			:= wheb_assist_pck.obterParametroFuncao(924,987);
VarParam998_w				:= wheb_assist_pck.obterParametroFuncao(924,998);
ie_proc_interno_exam_lab_w	:= wheb_assist_pck.obterParametroFuncao(924,1001);
ie_vinc_seq_agend_w			:= wheb_assist_pck.obterParametroFuncao(924,1020);
ie_interv_padrao_prescr_w	:= wheb_assist_pck.obterParametroFuncao(924,1058);
ie_check_sn_w				:= wheb_assist_pck.obterParametroFuncao(924,650);

ie_log_dt_prev_execucao_w := obter_se_info_rastre_prescr('D', wheb_usuario_pck.get_nm_usuario, cd_perfil_w, wheb_usuario_pck.get_cd_estabelecimento);

if (VarParam998_w = 'S') then 
	VarParam998_w	:= obter_se_usuario_medico(nm_usuario_p);
end if;
 
ie_verifica_setores_adic_w := Obter_Param_Usuario(916, 562, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_verifica_setores_adic_w);
 
if (cd_funcao_p = 916) then 
	ie_utiliza_regra_medico_w := Obter_Param_Usuario(916, 887, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_utiliza_regra_medico_w);
	ie_data_prescricao_ww := Obter_Param_Usuario(916, 433, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_data_prescricao_ww);
	ie_gerar_setor_entrega_w := Obter_Param_Usuario(916, 259, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_gerar_setor_entrega_w);
	ie_somente_setor_exclusivo_w := Obter_Param_Usuario(916, 200, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_somente_setor_exclusivo_w);
  vl_parametro1209_w := Obter_Param_Usuario(916, 1209, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, vl_parametro1209_w);


	if (obter_valor_param_usuario(916, 138, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w) = 'S') then 
		cd_setor_coleta_w := cd_setor_atendimento_w;
	end if;	
else 
	ie_utiliza_regra_medico_w		:= 'N';
	ie_data_prescricao_ww			:= 'N';
	ie_gerar_setor_entrega_w		:= 'N';
	ie_somente_setor_exclusivo_w	:= 'N';
end if;
 
if (ie_lado_p = 'A') and (somente_numero(qt_proced_ambos_w) > qt_procedimento_w) then 
	qt_procedimento_w	:= somente_numero(qt_proced_ambos_w);
end if;
 
dt_prev_execucao_w	:= dt_prev_exec_p;

add_log_dt_prev_execucao($$PLSQL_LINE, null, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data));

begin 
	select	max(cd_convenio), 
			max(cd_categoria), 
			max(cd_plano_convenio) 
	into STRICT	cd_convenio_w, 
			cd_categoria_w, 
			cd_plano_convenio_w 
	from	atend_categoria_convenio 
	where	nr_atendimento = nr_atendimento_w 
	and		nr_seq_interno = obter_atecaco_atendimento(nr_atendimento_w);
exception 
when others then 
	cd_convenio_w := null;
end;
 
cd_setor_atual_usuario_w	:= obter_setor_usuario(nm_usuario_p);
 
select	coalesce(max(nr_sequencia),0) + 1, 
		coalesce(max(nr_agrupamento),0) + 1 
into STRICT	nr_sequencia_w, 
		nr_agrupamento_w 
from 	prescr_procedimento 
where 	nr_prescricao = nr_prescricao_p;
 
if (cd_intervalo_p IS NOT NULL AND cd_intervalo_p::text <> '') then 
	cd_intervalo_w	:= cd_intervalo_p;
else 
	cd_intervalo_w			:= wheb_assist_pck.obterParametroFuncao(924,35);
	cd_intervalo_exame_ww	:= cd_intervalo_w;
end if;
 
if (nr_seq_prot_glic_w IS NOT NULL AND nr_seq_prot_glic_w::text <> '') then 
	select	coalesce(coalesce(cd_intervalo_p, max(cd_intervalo)),cd_intervalo_w), 
		max(ds_indicacao) 
	into STRICT	cd_intervalo_w, 
		ds_indicacao_w 
	from	pep_protocolo_glicemia 
	where	nr_sequencia = nr_seq_prot_glic_w;
 
	cd_intervalo_Gliw := cd_intervalo_w;
end if;
 
cd_intervalo_2w := cd_intervalo_w;
 
select	max(coalesce(ie_tipo_atendimento,'1')) 
into STRICT	ie_tipo_atend_w 
from	atendimento_paciente 
where	nr_atendimento	= nr_atendimento_w;
 
select	coalesce(max(ie_tipo_convenio),0) 
into STRICT	ie_tipo_conv_w 
from	convenio 
where	cd_convenio = cd_convenio_w;

if (ie_tipo_exame_p = 0) then
	begin 
	 
	open c03;
	loop 
	fetch c03 into 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		cd_setor_exclusivo_w, 
		nr_seq_exame_w, 
		nr_seq_material_w, 
		ds_rotina_w, 
		ds_material_esp_w, 
		ie_agora_w, 
		ie_horario_prescr_w, 
		ie_amostra_w, 
		nr_proc_interno_w, 
		ds_observacao_lab_w, 
		cd_medico_exec_examlab_w, 
		cd_intervalo_exame_w,
		ie_acm_w,
		ie_se_necessario_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 

		if (hr_exec_proced_p = 'S') then 
			ie_agora_w := 'N';
		end if;

		if (coalesce(ie_exec_urgencia_p,'N') = 'S') then 
			ie_agora_w := 'S';	
		end if;
 
		cd_procedimento_w	 := cd_procedimento_w;
		ie_origem_proced_w	 := ie_origem_proced_w;
		cd_setor_exclusivo_w	 := cd_setor_exclusivo_w;
		nr_seq_exame_w:= nr_seq_exame_w;
		nr_seq_material_w	 := nr_seq_material_w;
		ds_rotina_w:= ds_rotina_w;
		ds_material_esp_w	 := ds_material_esp_w;
		ie_amostra_w:= ie_amostra_w;
		nr_proc_interno_w	 := nr_proc_interno_w;
		ds_observacao_lab_w      := ds_observacao_lab_w;
		cd_medico_exec_examlab_w := cd_medico_exec_examlab_w;
		cd_intervalo_w			:= cd_intervalo_exame_w;
		ie_entrou_c03_w:= 'S';
		end;
	end loop;
	close c03;
	 
	if (ie_entrou_c03_w	= 'N') then 

		select	max(a.cd_procedimento), 
			max(a.ie_origem_proced), 
			max(a.nr_seq_exame) 
		into STRICT	cd_procedimento_w, 
			ie_origem_proced_w, 
			nr_seq_exame_w 
		from 	exame_laboratorio a, 
			exame_lab_rotina x 
		where	x.nr_seq_exame		= a.nr_seq_exame 
		and	x.nr_sequencia		= nr_sequencia_p 
		and	exists (SELECT 1 
					from exame_lab_convenio c 	 
					where a.nr_seq_exame = c.nr_seq_exame  
					and coalesce(c.ie_situacao,'A') = 'I' 
					and cd_convenio_w = c.cd_convenio) 
		and	not exists (select 1 
					from exame_lab_convenio c  
					where a.nr_seq_exame = c.nr_seq_exame  
					and clock_timestamp() between coalesce(c.dt_inicio_vigencia,clock_timestamp()) and coalesce(c.dt_fim_vigencia,clock_timestamp()) 
					and coalesce(c.ie_situacao,'A') = 'A' 
					and cd_convenio_w = c.cd_convenio);
 
	end if;	
	 
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
			begin 
			select	a.ie_tipo_convenio, 
				a.ie_tipo_atendimento, 
				b.cd_convenio, 
				b.cd_categoria, 
				a.cd_estabelecimento 
			into STRICT	ie_tipo_convenio_w, 
				ie_tipo_atendimento_w, 
				cd_convenio_w, 
				cd_categoria_w, 
				cd_estab_w 
			from	atend_categoria_convenio b, 
				atendimento_paciente a 
			where	a.nr_atendimento	= nr_atendimento_w 
			and	b.nr_atendimento	= a.nr_atendimento 
			and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento);
			exception when no_data_found then  
                --Faltam informacoes do convenio na entrada unica
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(174321);
			end;
		end if;
 
		if (coalesce(cd_procedimento_w::text, '') = '') or (ie_exame_regra_edicao_w = 'S') then 
 
			if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
				select	max(cd_material_exame) 
				into STRICT	cd_material_exame_w 
				from	material_exame_lab 
				where	nr_sequencia = nr_seq_material_w;
			end if;	
	
			SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, null, cd_material_exame_w, cd_plano_convenio_w, cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
		end if;
 
		select	max(b.cd_setor_exclusivo) 
		into STRICT	cd_setor_exclusivo_w 
		from	procedimento b 
		where	b.cd_procedimento	= cd_procedimento_w 
		and	b.ie_origem_proced	= ie_origem_proced_w;
	end if;
 
	select  count(*) 
	into STRICT	qt_material_w 
	from    material_exame_lab b, 
        	exame_lab_material a 
	where	a.nr_seq_material = b.nr_sequencia 
	and		a.nr_seq_exame    = nr_seq_exame_w 
	and		a.ie_situacao	= 'A';
 
	if (qt_material_w = 1) or (varmatexame_w = 'S') or (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
		if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
			select	max(cd_material_exame) 
			into STRICT	cd_material_exame_w 
			from	material_exame_lab 
			where	nr_sequencia = nr_seq_material_w;
		else 
			select	max(cd_material_exame) 
			into STRICT	cd_material_exame_w 
			from	material_exame_lab b, 
				exame_lab_material a 
			where	a.nr_seq_material = b.nr_sequencia 
	   and	a.nr_seq_exame 	= nr_seq_exame_w 
	 and	a.ie_situacao	= 'A' 
	 and	ie_prioridade	= 
				(SELECT	min(ie_prioridade) 
				from	exame_lab_material x 
				where	nr_seq_exame	= nr_seq_exame_w 
				and	x.ie_situacao	= 'A');
		end if;
	end if;
 
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') and (varatualdataprevresult_w = 'S') then 
 
		dt_prev_execucao_w := atualiza_dt_realizacao_exame(nr_seq_exame_w, nr_prescricao_p, dt_prev_execucao_w, dt_prev_execucao_w);

		add_log_dt_prev_execucao($$PLSQL_LINE, null, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data));
		
		SELECT * FROM obter_setor_exame_lab(	nr_prescricao_p, nr_seq_exame_w, cd_setor_atual_usuario_w, cd_material_exame_w, null, 'S', cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, coalesce(ie_agora_w,'N'), ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w, dt_prev_execucao_w) INTO STRICT cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;
		dt_resultado_w	:= null;
 
		if (ds_hora_fixa_w IS NOT NULL AND ds_hora_fixa_w::text <> '') then 
 
			select	(trunc(CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END ) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
			into STRICT	dt_resultado_w 
			from	prescr_medica 
			where 	nr_prescricao = nr_prescricao_p;
		else 
			select	CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END  + qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
			into STRICT	dt_resultado_w 
			from 	prescr_medica 
			where 	nr_prescricao = nr_prescricao_p;
		end if;

		if (ie_dia_semana_final_w > 0) then  
			ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(dt_resultado_w);
	
			while(ie_dia_semana_upd_w <> ie_dia_semana_final_w) loop 
				dt_resultado_w := dt_resultado_w + 1;
				ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(dt_resultado_w);
			end loop;
		end if;

	end if;
 
	end;
elsif (ie_tipo_exame_p = 1) then 
	begin 
	 
	select	coalesce(cd_procedimento_p, a.cd_procedimento), 
		coalesce(ie_origem_proced_p, a.ie_origem_proced), 
		a.ds_prescricao, 
		a.ds_mat_esp, 
		coalesce(nr_seq_proc_interno_p, a.nr_proc_interno), 
		coalesce(a.ie_agora,'N'), 
		ie_horario_prescr, 
		coalesce(ie_amostra,'N'), 
		coalesce(ie_executar_leito,'N'), 
		a.nr_seq_contraste, 
		coalesce(a.qt_procedimento,qt_procedimento_p), 
		CASE WHEN ie_acm_p='S' THEN  'S'  ELSE coalesce(a.ie_acm,'N') END , 
		coalesce(a.ie_se_necessario,'N'), 
		ie_exige_aprovacao, 
		ds_observacao, 
		a.cd_medico_exec, 
		a.cd_kit_material, 
		a.ds_resumo_clinico, 
		a.ds_justificativa, 
		a.CD_LADO, 
		CASE WHEN ie_intervalo='S' THEN coalesce(cd_intervalo_2w,a.cd_intervalo)  ELSE (coalesce(a.cd_intervalo,cd_intervalo_2w)) END ,
		coalesce(nr_seq_topografia_w, nr_seq_topografia)
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		ds_rotina_w, 
		ds_material_esp_w, 
		nr_proc_interno_w, 
		ie_agora_w, 
		ie_horario_prescr_w, 
		ie_amostra_w, 
		ie_executar_leito_w, 
		nr_seq_contraste_w, 
		qt_procedimento_w, 
		ie_acm_w, 
		ie_se_necessario_w, 
		ie_exige_aprovacao_w, 
		ds_observacao_nao_lab_w, 
		cd_medico_exec_examlab_w, 
		cd_kit_material_w, 
		ds_resumo_clinico_w, 
		ds_justificativa_w, 
		CD_LADO_w, 
		cd_intervalo_w,
		nr_seq_topografia_ww
	from 	procedimento_rotina a 
	where	a.nr_sequencia		= nr_sequencia_p;
	 
	if (cd_intervalo_Gliw IS NOT NULL AND cd_intervalo_Gliw::text <> '') and (nr_seq_prot_glic_p IS NOT NULL AND nr_seq_prot_glic_p::text <> '') then  
	    cd_intervalo_w := cd_intervalo_Gliw;
	end if;
 
	if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') and (coalesce(cd_procedimento_w::text, '') = '') then 
		cd_procedimento_w := obter_procedimento_proc_int(nr_proc_interno_w);
	end if;
 
	end;
elsif (ie_tipo_exame_p = 2) then 
	begin 
	 
	if (coalesce(nr_seq_rotina_p,0) > 0) then 
		select	max(nr_seq_exame) 
		into STRICT	nr_seq_exame_w 
		from	exame_lab_rotina 
		where	nr_sequencia = nr_seq_rotina_p;
	else 
		nr_seq_exame_w := nr_sequencia_p;	
	end if;

	select	max(coalesce(c.cd_procedimento, a.cd_procedimento)), 
		max(coalesce(c.ie_origem_proced, a.ie_origem_proced)), 
		max(a.nr_seq_exame), 
		max(b.cd_setor_exclusivo), 
		max(substr(a.ds_exame_prescricao,1,80)),
		max(a.ds_orientacao_medicamento) 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_exame_w, 
		cd_setor_exclusivo_w, 
		ds_rotina_w, 
		ds_observacao_lab_w 
	FROM procedimento b, exame_laboratorio a
LEFT OUTER JOIN exame_lab_convenio c ON (a.nr_seq_exame = c.nr_seq_exame AND cd_convenio_w = c.cd_convenio)
WHERE a.cd_procedimento	= b.cd_procedimento and a.ie_origem_proced	= b.ie_origem_proced   and a.nr_seq_exame		= nr_seq_exame_w;
 
	nr_proc_interno_w := null;
	 
	if (ie_proc_interno_exam_lab_w = 'S') then 
		select	max(nr_sequencia) 
		into STRICT	nr_proc_interno_w 
		from	proc_interno 
		where	nr_seq_exame_lab = nr_seq_exame_w;
	end if;
	 
	ie_amostra_w := ie_amostra_entregue_w;
 
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then 
			begin 
			select	a.ie_tipo_convenio, 
				a.ie_tipo_atendimento, 
				b.cd_convenio, 
				b.cd_categoria, 
				a.cd_estabelecimento 
			into STRICT	ie_tipo_convenio_w, 
				ie_tipo_atendimento_w, 
				cd_convenio_w, 
				cd_categoria_w, 
				cd_estab_w 
			from	atend_categoria_convenio b, 
				atendimento_paciente a 
			where	a.nr_atendimento	= nr_atendimento_w 
			and	b.nr_atendimento	= a.nr_atendimento 
			and	b.nr_seq_interno	= obter_atecaco_atendimento(a.nr_atendimento);
			exception 
				when no_data_found then  
                -- Faltam informacoes do convenio na entrada unica
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(174321);
			end;
		end if;
 
		if (coalesce(cd_procedimento_w::text, '') = '') or (ie_exame_regra_edicao_w = 'S') then 
 
			SELECT * FROM obter_exame_lab_convenio(nr_seq_exame_w, cd_convenio_w, cd_categoria_w, ie_tipo_atendimento_w, cd_estab_w, ie_tipo_convenio_w, null, cd_material_exame_w, cd_plano_convenio_w, cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w) INTO STRICT cd_setor_atend_conv_w, cd_procedimento_w, ie_origem_proced_w, ds_erro_w, nr_seq_proc_interno_aux_w;
 
		end if;
 
		select	max(b.cd_setor_exclusivo) 
		into STRICT	cd_setor_exclusivo_w 
		from	procedimento b 
		where	b.cd_procedimento	= cd_procedimento_w 
		and	b.ie_origem_proced	= ie_origem_proced_w;
 
		begin  
			
		select  count(*) 
		into STRICT	qt_material_w 
		from    material_exame_lab b, 
				exame_lab_material a 
		where a.nr_seq_material = b.nr_sequencia 
		and a.nr_seq_exame    = nr_seq_exame_w 
		and a.ie_situacao	= 'A';

		if (qt_material_w = 1) or (varmatexame_w = 'S') then 
			select	max(cd_material_exame) 
			into STRICT	cd_material_exame_w 
			from	material_exame_lab b, 
				exame_lab_material a 
			where	a.nr_seq_material 	= b.nr_sequencia 
			and	a.nr_seq_exame 		= nr_seq_exame_w 
			and	a.ie_situacao		= 'A' 
			and	ie_prioridade		= 
					(SELECT	min(ie_prioridade) 
					from 		exame_lab_material x 
					where		nr_seq_exame	= nr_seq_exame_w 
					and			x.ie_situacao	= 'A');
		else 

			select	max(cd_material_exame) 
			into STRICT	cd_material_exame_w 
			from	material_exame_lab b, 
				exame_lab_material a 
			where	a.nr_seq_material 	= b.nr_sequencia 
			and	a.nr_seq_exame 			= nr_seq_exame_w 
			and	a.nr_seq_material 		=  (	SELECT 	coalesce(nr_seq_material,0)  
												from 	exame_lab_rotina 
												where	nr_sequencia = nr_sequencia_p);
		end if;

		end;

	end if;
 
	end;
elsif (ie_tipo_exame_p = 3) then 
	begin 
 
	ie_origem_w := obter_origem_proced_cat(cd_estabelecimento_w, ie_tipo_atend_w, ie_tipo_conv_w,cd_convenio_w, cd_categoria_w);
 
	select	cd_procedimento, 
		ie_origem_proced, 
		'' nr_seq_exame, 
		cd_setor_exclusivo 
	into STRICT	cd_procedimento_w, 
		ie_origem_proced_w, 
		nr_seq_exame_w, 
		cd_setor_exclusivo_w 
	from	procedimento 
	where	cd_procedimento		= nr_sequencia_p 
	and	ie_origem_proced	= ie_origem_w;
	end;
 
elsif (ie_tipo_exame_p = 4) then 
	begin 
	open c01;
	loop 
	fetch c01 into 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		ds_rotina_w, 
		ds_material_esp_w, 
		nr_proc_interno_w, 
		ie_agora_w, 
		ie_horario_prescr_w, 
		qt_min_intervalo_w, 
		qt_hora_intervalo_w, 
		cd_intervalo_w, 
		ie_amostra_w, 
		ie_executar_leito_w, 
		qt_procedimento_w, 
		ie_acm_w, 
		ie_se_necessario_w, 
		ds_observacao_nao_lab_w, 
		cd_medico_exec_examlab_w, 
		cd_kit_material_w, 
		ds_resumo_clinico_w, 
		ds_justificativa_w, 
		CD_LADO_w,
		nr_seq_topografia_ww;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		ds_observacao_final_w := '';
		ds_observ_proc_interno_w := '';
		ds_observacao_w := '';
		ie_autorizacao_w := 'L';
		if (hr_exec_proced_p = 'S') then
			ie_agora_w := 'N';
		end if;

		if	coalesce(ie_exec_urgencia_p,'N') = 'S' then	 
			ie_agora_w	:= 'S';
	
			select	max(cd_intervalo) 
			into STRICT	cd_intervalo_ww 
			from	intervalo_prescricao 
			where	ie_agora = 'S' 
			and 	ie_situacao = 'A' 
			and	cd_intervalo = cd_intervalo_w;
 
			if (coalesce(cd_intervalo_ww::text, '') = '') then 
				select	max(cd_intervalo) 
				into STRICT	cd_intervalo_agora_w 
				from	intervalo_prescricao 
				where	ie_agora = 'S' 
				and 	ie_situacao = 'A';
	
				if (cd_intervalo_agora_w IS NOT NULL AND cd_intervalo_agora_w::text <> '') then 
					cd_intervalo_w	:= cd_intervalo_agora_w;
				end if;
			end if;
			dt_prev_execucao_w	:= clock_timestamp();
			add_log_dt_prev_execucao($$PLSQL_LINE, null, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data));
			ds_horarios_proced_w	:= to_char(clock_timestamp(),'hh24:mi');
		end if;
		
		if	coalesce(ie_acm_p,'N') = 'S' then	 
			ie_acm_w	:= 'S';
	
			select	max(cd_intervalo) 
			into STRICT	cd_intervalo_ww 
			from	intervalo_prescricao 
			where	ie_acm = 'S' 
			and 	ie_situacao = 'A' 
			and	cd_intervalo = cd_intervalo_w;
 
			if (coalesce(cd_intervalo_ww::text, '') = '') then 
				select	max(cd_intervalo) 
				into STRICT	cd_intervalo_agora_w 
				from	intervalo_prescricao 
				where	ie_acm = 'S' 
				and 	ie_situacao = 'A';
	
				if (cd_intervalo_agora_w IS NOT NULL AND cd_intervalo_agora_w::text <> '') then 
					cd_intervalo_w	:= cd_intervalo_agora_w;
				end if;
			end if;
			dt_prev_execucao_w	:= clock_timestamp();
			add_log_dt_prev_execucao($$PLSQL_LINE, null, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data));
			ds_horarios_proced_w	:= 'ACM';
		end if;
		
		if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then 
			SELECT * FROM obter_proc_tab_interno(nr_proc_interno_w, nr_prescricao_p, nr_atendimento_w, 0, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		end if;
 
		begin 
		select	cd_setor_exclusivo 
		into STRICT	cd_setor_exclusivo_w 
		from	procedimento 
		where	cd_procedimento		= cd_procedimento_w 
		and	ie_origem_proced	= ie_origem_proced_w;
		exception 
		when others then 
			cd_setor_exclusivo_w := null;
		end;
 
		if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (ie_Gera_Setor_PrescrProc_w = 'S') and (obter_se_setor_exec(cd_setor_prescr_w, cd_estabelecimento_w, cd_procedimento_w,ie_origem_proced_w, nr_proc_interno_w) = 'S') then 
			cd_setor_exclusivo_w	:= cd_setor_prescr_w;
		end if;
 
		select	coalesce(max(nr_sequencia),0) + 1 
		into STRICT	nr_sequencia_w 
		from 	prescr_procedimento 
		where 	nr_prescricao = nr_prescricao_p;
 
		if (coalesce(cd_setor_exclusivo_w::text, '') = '') then 
			cd_setor_exclusivo_w	:= obter_setor_atend_proc(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,cd_setor_atendimento_w,null,nr_proc_interno_w,nr_atendimento_w);
		end if;
		if (coalesce(nr_proc_interno_w,0) > 0) then 
			select	coalesce(max(ie_setor_paciente),'N') 
			into STRICT	ie_setor_paciente_w 
			from	proc_interno 
			where	nr_sequencia	= nr_proc_interno_w;
 
			if (ie_setor_paciente_w = 'S') then 
				cd_setor_exclusivo_w	:= obter_setor_atendimento(nr_atendimento_w);
			end if;
		end if;
 
		if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
			cd_setor_exclusivo_w	:= obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,cd_setor_atendimento_w,null,nr_seq_exame_w);
		end if;
 
		begin 
		select	ds_observacao 
		into STRICT	ds_observacao_w 
		from	procedimento_prescricao 
		where	cd_procedimento		= cd_procedimento_w 
		and	ie_origem_proced	= ie_origem_proced_w 
		and	coalesce(ie_somente_alerta,'N') = 'N';
		exception 
			when others then 
			ds_observacao_w := null;
		end;
 
		/* ivan em 24/08/2007 os66472 */
 
		begin 
		select	ds_observacao 
		into STRICT	ds_observ_proc_interno_w 
		from	proc_interno 
		where	nr_sequencia	= nr_proc_interno_w;
		exception 
			when others then 
			ds_observ_proc_interno_w := null;
		end;
 
		if (ie_horario_regra_w = 'S') then 
			dt_prev_execucao_w	:= obter_data_prev_exec(dt_prescricao_w,dt_prev_exec_p,cd_setor_exclusivo_w, nr_prescricao_p, ie_data_prev_w);
			add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|ie_horario_regra_w:'||ie_horario_regra_w);
		end if;

		/* Dalcastagne em 29/07/2008 OS 92844*/
		if (ie_interv_padrao_prescr_w = 'S') then 
			cd_intervalo_w	:= coalesce(obter_param_proced_prescr(cd_procedimento_w, ie_origem_proced_w,cd_setor_atendimento_w, cd_perfil_w,'I',nr_proc_interno_w,nr_seq_exame_w),cd_intervalo_w);
		end if;
 
		cd_intervalo_w		:= coalesce(obter_dados_exame_lab_rep(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'I'), cd_intervalo_w);
		hr_prev_execucao_w	:= obter_dados_exame_lab_rep(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'H');
 
		if (ie_hor_proced_interv_w = 'N')  then 
	 
			if (ie_horario_prescr_w IS NOT NULL AND ie_horario_prescr_w::text <> '') and (hr_exec_proced_p <> 'S')		then	
	  if (ie_horario_prescr_w = '5') then 
		   if (cd_funcao_p = 916) then 
			    dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_prescricao_w, '2', nm_usuario_p, cd_estabelecimento_w);
		   else
			    dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_inicio_prescr_w, '2', nm_usuario_p, cd_estabelecimento_w);
		   end if;
				else 
					dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_inicio_prescr_w, ie_horario_prescr_w, nm_usuario_p, cd_estabelecimento_w);
				end if;
			end if;
		elsif ((coalesce(cd_intervalo_padrao_w, cd_intervalo_w) IS NOT NULL AND (coalesce(cd_intervalo_padrao_w, cd_intervalo_w))::text <> '')) then 

			select	max(ie_operacao) 
			into STRICT	ie_operacao_w 
			from	intervalo_prescricao 
			where	cd_intervalo	= coalesce(cd_intervalo_padrao_w, cd_intervalo_w);
 
			if	(((ie_hor_proced_interv_w = 'S') and (ie_operacao_w  in ('V','F'))) or (ie_hor_proced_interv_w) = 'I')	then 
	   dt_prev_execucao_w	:= coalesce(obter_horario_proced_interv(coalesce(cd_intervalo_padrao_w, cd_intervalo_w), nr_prescricao_p, dt_inicio_prescr_w, dt_inicio_prescr_w),dt_prev_execucao_w);
			end if;
		end if;	

		select	coalesce(max(ie_agora),'N') 
		into STRICT	ie_interv_agora_w 
		from	intervalo_prescricao 
		where	cd_intervalo	= cd_intervalo_w;
 
		if (ie_interv_agora_w	= 'S') and (coalesce(ie_considera_agora_w,'S')	= 'S') then 
			dt_prev_execucao_w := dt_prev_exec_agora_w;
		end if;
			
		add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|ie_interv_agora_w:'||ie_interv_agora_w||'|ie_considera_agora_w:'||ie_considera_agora_w||'|hr_exec_proced_p:'||hr_exec_proced_p
			||'|ie_horario_prescr_w:'||ie_horario_prescr_w||'|cd_funcao_p:'||cd_funcao_p||'|ie_hor_proced_interv_w:'||ie_hor_proced_interv_w||'|ie_operacao_w:'||ie_operacao_w);

		select	 max(coalesce(qt_min_intervalo_w, coalesce(qt_min_intervalo,0))) 
		into STRICT	 qt_min_intervalo_w 
		from	 intervalo_prescricao 
		where	 cd_intervalo = cd_intervalo_w;

		SELECT * FROM calcular_horario_prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_prev_execucao_w,dt_prescricao_w), nr_horas_validade_w, cd_procedimento_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w;
 
		ds_horarios_proced_w	:= ds_horarios_proced_w || ds_horarios_proced2_w;

		if (vareliminahorfinalvig_w = 'S') and (ds_horarios_proced_w IS NOT NULL AND ds_horarios_proced_w::text <> '') then 
			ds_horarios_padrao_w := Eliminar_hor_vigencia_proc(ds_horarios_proced_w, cd_intervalo_w,coalesce(dt_prev_execucao_w,dt_prescricao_w), dt_inicio_prescr_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_prescricao_p,coalesce(ie_agora_w,'N'),dt_prev_execucao_w);
		end if;
 
		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then /* Oraci em 10/10/2007 OS70724 */
 
			dt_prev_execucao_w := atualiza_dt_realizacao_exame(nr_seq_exame_w, nr_prescricao_p, dt_prev_execucao_w, dt_prev_execucao_w); 	
			
			add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|nr_seq_exame_w:'||nr_seq_exame_w);	
		
			SELECT * FROM obter_setor_exame_lab(	nr_prescricao_p, nr_seq_exame_w, cd_setor_atual_usuario_w, cd_material_exame_w, null, 'S', cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, coalesce(ie_agora_w,'N'), ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w, dt_prev_execucao_w) INTO STRICT cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w; 	 		

			cd_setor_entrega_w	:= trunc((replace(replace(cd_setor_entrega_w,'(',''), ')',''))::numeric );
			dt_resultado_w	:= null;
 
			if (varatualdataprevresult_w = 'S') and (ds_hora_fixa_w IS NOT NULL AND ds_hora_fixa_w::text <> '') then 
 
				select	(trunc(CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END ) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
				into STRICT	dt_resultado_w 
				from	prescr_medica 
				where 	nr_prescricao = nr_prescricao_p;
			else 
				select	CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END  + qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
				into STRICT	dt_resultado_w 
				from 	prescr_medica 
				where 	nr_prescricao = nr_prescricao_p;
			end if;
 
			if (ie_dia_semana_final_w > 0) then  
				ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(dt_resultado_w);
		
				while(ie_dia_semana_upd_w <> ie_dia_semana_final_w) loop 
					dt_resultado_w := dt_resultado_w + 1;
					ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(dt_resultado_w);
				end loop;
			end if;
 
			if (coalesce(cd_setor_coleta_w::text, '') = '') then 
				cd_setor_coleta_w	:= gerar_setor_exame_lab(cd_setor_col_w);
			end if;
 
			/* Rafael e Bruna em 14/3/8 OS84471 */
 
			if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (cd_setor_atend_w IS NOT NULL AND cd_setor_atend_w::text <> '') and (somente_numero(cd_setor_atend_w) > 0) and (ie_somente_setor_exclusivo_w = 'N') then 
				cd_setor_exclusivo_w	:= gerar_setor_exame_lab(cd_setor_atend_w);
			end if;
		end if;
 
		/* Rafael em 18/2/8 OS80263 */
 
		ie_gerar_setor_w	:= obter_se_gerar_setor_rotina(cd_estabelecimento_w, cd_funcao_p,cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w, nr_seq_exame_w, cd_setor_atendimento_w, nm_usuario_p);
 
		if (ie_gerar_setor_w = 'N') then 
			cd_setor_exclusivo_w := null;
		end if;
		/* Fim Rafael em 18/2/8 OS80263 */
 
 
		if (coalesce(cd_setor_atendimento_p,0) <> 0) then 
			cd_setor_exclusivo_w	:= cd_setor_atendimento_p;
		end if;

		/* Rafael em 27/8/8 OS96279 */
 
		if (ie_gerar_setor_entrega_w = 'S') and (ie_gerar_setor_w = 'S') and (coalesce(cd_setor_exclusivo_w::text, '') = '') and (cd_setor_entrega_ww IS NOT NULL AND cd_setor_entrega_ww::text <> '') then 
 
			cd_setor_exclusivo_w	:= cd_setor_entrega_ww;
		end if;
		/* Fim Rafael em 27/8/8 OS96279 */
 
 
		if (ie_verifica_setores_adic_w = 'S')	then 
			begin 
			if (coalesce(nr_proc_interno_w,0) > 0) then 
				begin 
				select	count(*) 
				into STRICT	qt_existe_setores_int_w 
				from	proc_interno_setor 
				where	nr_seq_proc_interno	= nr_proc_interno_w;
				end;
 
				if (qt_existe_setores_int_w > 1) then 
					begin 
					cd_setor_exclusivo_w	:=	null;
					end;
				else 
					cd_setor_exclusivo_w	:= cd_setor_exclusivo_w;
				end if;
			else 
				begin 
				select	coalesce(max(b.cd_setor_exclusivo),0) 
				into STRICT	cd_setor_w 
				from	procedimento b 
				where	b.cd_procedimento	= cd_procedimento_w 
				and	b.ie_origem_proced	= ie_origem_proced_w;
 
				if (cd_setor_w = 0) then 
					begin 
					select	count(*) 
					into STRICT	qt_existe_setores_w 
					from	procedimento_setor_atend 
					where	cd_procedimento 	= cd_procedimento_w 
					and	ie_origem_proced 	= ie_origem_proced_w 
					and	cd_estabelecimento = cd_estabelecimento_w;
					if (qt_existe_setores_w > 1) then 
						cd_setor_exclusivo_w	:=	null;
					elsif (qt_existe_setores_w = 1) then 
						select	max(cd_setor_atendimento) 
						into STRICT	cd_setor_exclusivo_w 
						from	procedimento_setor_atend 
						where	cd_procedimento 	= cd_procedimento_w 
						and	ie_origem_proced 	= ie_origem_proced_w 
						and	cd_estabelecimento = cd_estabelecimento_w;
					else 
						cd_setor_exclusivo_w	:=	null;
					end if;
					end;
				else 
					cd_setor_exclusivo_w	:=	cd_setor_w;
				end if;
				end;
			end if;
			end;
		end if;
 
		if (cd_cgc_externo_p IS NOT NULL AND cd_cgc_externo_p::text <> '') then 
			cd_setor_exclusivo_w	:= obter_setor_laboratorio_ext(cd_cgc_externo_p);
		end if;
 
		if (coalesce(ie_agora_w,'N') = 'N') and (ie_seleciou_horario_rotina_p <> 'S') then 
			ie_agora_w	:= coalesce(obter_se_proc_urgente(cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w, nr_seq_exame_w, ie_tipo_atend_w,'S',cd_perfil_w,cd_medico_proc_urgente_w), 'N');
		end if;
 
		/* Verificar se intervalo agora  -  Hudson OS380015 */
 
		if (coalesce(ie_agora_w,'N') = 'S') then 
			cd_intervalo_w	:= coalesce(Obter_interv_acm_sn_agora_lib(cd_estabelecimento_w, 1, 2, 'P', cd_procedimento_w, cd_intervalo_w, nr_prescricao_p, ie_origem_proced_w, nr_proc_interno_w), cd_intervalo_w);
			dt_prev_execucao_w		:= dt_prev_exec_agora_w;			
			add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|ie_agora_w:'||ie_agora_w);
			ds_horarios_proced_w	:= to_char(dt_prev_exec_agora_w,'hh24:mi');
		end if;

		qt_proc_padrao_w		:= obter_param_Prescr_Proc_Int(nr_proc_interno_w,cd_setor_atendimento_w, 'Q', nr_atendimento_w);
		cd_intervalo_padrao_w	:= Obter_Param_Prescr_Proc_Int(nr_proc_interno_w,cd_setor_atendimento_w, 'I', nr_atendimento_w);
		ds_horarios_padrao_w	:= Obter_Param_Prescr_Proc_Int(nr_proc_interno_w,cd_setor_atendimento_w, 'H', nr_atendimento_w);

		if (ie_interv_padrao_prescr_w = 'N') then 
			cd_intervalo_padrao_w := null;
		end if;

		if (vareliminahorfinalvig_w = 'S') and (ds_horarios_padrao_w IS NOT NULL AND ds_horarios_padrao_w::text <> '') then 
			ds_horarios_padrao_w	:= Eliminar_hor_vigencia_proc(ds_horarios_padrao_w, cd_intervalo_w,coalesce(dt_prev_execucao_w,dt_prescricao_w), dt_inicio_prescr_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_prescricao_p,coalesce(ie_agora_w,'N'),dt_prev_execucao_w);
		end if;
 
		nr_doc_convenio_w	:= null;
		SELECT * FROM tiss_obter_guia(4, null, nr_doc_convenio_w, 'N', null, null, null, null, null, ie_guia_w, null, nr_prescricao_p, null, cd_setor_exclusivo_w, null, nr_prescricao_p, null, null, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null) INTO STRICT nr_doc_convenio_w, ie_guia_w;
 
		ie_cig_w	:= obter_ctrl_glic_proc(nr_proc_interno_w);

		if (ie_cig_w = 'CIG') then 
			ds_horarios_padrao_w	:= to_char(dt_prev_execucao_w,'hh24:mi');
		end if;

		if (coalesce(qt_proc_padrao_w, qt_procedimento_w) = 1) then 
			qt_proc_padrao_w	:= coalesce(obter_quantidade_prescr_proced(coalesce(cd_intervalo_padrao_w,cd_intervalo_w),coalesce(ie_lado_w,CD_LADO_w),cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w, nr_atendimento_w),1);
		end if;
 
		if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') then 
			ds_observacao_w	:= substr(ds_observacao_p || '   ' || ds_observacao_w,1,2000);
		end if;
 
		select	max(ds_orientacao_usuario) 
		into STRICT	ds_orientacao_usuario_w 
		from	exame_laboratorio 
		where	nr_seq_exame	= nr_seq_exame_w;
 
		if (ds_orientacao_usuario_w IS NOT NULL AND ds_orientacao_usuario_w::text <> '') and (ie_obs_laboratorio_w = 'S') then 
			ds_observacao_w	:= substr(ds_orientacao_usuario_w || '   ' || ds_observacao_w,1,2000);
		end if;
 
		ie_acm_sn_w := obter_info_proced(cd_setor_atendimento_p,cd_procedimento_w);

		if (ie_acm_sn_w	= 'N') or (ie_se_necessario_w = 'S') then 
			ie_se_necessario_w := 'S';
			ds_horarios_padrao_w := 'SN';
		elsif (ie_acm_sn_w	= 'A') or (ie_acm_w = 'S') then 
			ie_acm_w := 'S';
			ds_horarios_padrao_w := 'ACM';
		end if;

		if (ie_marca_campo_w = 'S') then 
	
			ie_agora_acm_sn_w	:= obter_se_interv_agora_acm_sn(coalesce(cd_intervalo_padrao_w, cd_intervalo_w));
	
			if (ie_agora_acm_sn_w = 'AGORA') then 
				ie_agora_w		:= 'S';
				ie_acm_w		:= 'N';
				ie_se_necessario_w	:= 'N';
				ds_horarios_padrao_w	:= to_char(clock_timestamp(),'hh24:mi');
			elsif (ie_agora_acm_sn_w = 'ACM') then 
				ie_agora_w		:= 'N';
				ie_acm_w		:= 'S';
				ie_se_necessario_w	:= 'N';
				ds_horarios_padrao_w	:= 'ACM';
			elsif	(ie_agora_acm_sn_w = 'SN' AND ie_check_sn_w = 'S') then 
				ie_agora_w		:= 'N';
				ie_acm_w		:= 'N';
				ie_se_necessario_w	:= 'S';
				ds_horarios_padrao_w	:= 'SN';		
			end if;	
	
		end if;

		if (ie_setor_classif_w	= 'S') and (cd_classif_setor_w	= 1) then 
			ie_avisa_result_w := 'S';
		end if;

		if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then 
			ds_observacao_final_w	:= substr(ds_observacao_w,1,2000);
		end if;

		if (ds_observ_proc_interno_w IS NOT NULL AND ds_observ_proc_interno_w::text <> '') then 
			ds_observacao_final_w	:= substr(ds_observacao_final_w || ' '  || ds_observ_proc_interno_w,1,2000);
		end if;

		if (ds_observacao_nao_lab_w IS NOT NULL AND ds_observacao_nao_lab_w::text <> '') then 
			ds_observacao_final_w	:= substr(ds_observacao_final_w || ' ' || ds_observacao_nao_lab_w,1,2000);
		end if;

		if (ie_gravar_indic_w = 'S') and (ds_indicacao_w IS NOT NULL AND ds_indicacao_w::text <> '') then
			ds_observacao_final_w	:= substr(ds_observacao_final_w || ' ' || ds_indicacao_w,1,2000);
		end if;

		if (coalesce(ie_lado_w,CD_LADO_w) = 'A') and (somente_numero(qt_proced_ambos_w) > coalesce(qt_proc_padrao_w, qt_procedimento_w)) then 
			qt_proc_padrao_w	:= somente_numero(qt_proced_ambos_w);
		end if;

		if (cd_medico_exec_examLab_w IS NOT NULL AND cd_medico_exec_examLab_w::text <> '') then 
            cd_medico_exec_w := cd_medico_exec_examLab_w;
		else  
            select	coalesce(max(a.cd_medico_exec),cd_medico_exec_p) 
            into STRICT	cd_medico_exec_w 
            from	proc_interno a 
            where	a.nr_sequencia = nr_proc_interno_w 
            and		a.cd_procedimento = Obter_procedimento_proc_int(nr_proc_interno_w);
		end if;

		if (coalesce(cd_medico_exec_w::text, '') = '') then 
			cd_medico_exec_w	:= obter_medico_exec_proc(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w);
		end if;

		if (ie_utiliza_regra_medico_w = 'S') then 
			SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, Obter_Tipo_Atendimento(nr_atendimento_w), nr_seq_exame_w, nr_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '', coalesce(dt_prev_execucao_w,dt_prescricao_w), Obter_Classificacao_Atend(nr_atendimento_w,'C'), 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
				
			if (ie_medico_executor_w = 'F') then 
				cd_medico_exec_w:= coalesce(cd_medico_exec_w,cd_medico_executor_w);
			end if;	
		end if;

		if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (ie_vinc_seq_agend_w = 'S')then 
			select	max(a.cd_pessoa_fisica) 
			into STRICT	cd_pessoa_fis_agenda_w 
			from	atendimento_paciente a 
			where	a.nr_atendimento	= nr_atendimento_w;

			nr_seq_agenda_serv_w 
							 := Age_obt_regra_vinc_proc_rep(dt_prescricao_w, cd_pessoa_fis_agenda_w, cd_estabelecimento_w, nr_proc_interno_w, nm_usuario_p, nr_seq_agenda_serv_w 
							);	
		end if;

		if (coalesce(ie_data_prescricao_w,'N') <> 'N') and (coalesce(ie_agora_w,'N') = 'S') then 
			if (coalesce(ie_data_prescricao_w,'N') = 'I') then 
				dt_prev_execucao_w := dt_inicio_prescr_w;
			else 
				dt_prev_execucao_w := dt_prescricao_w;
			end if;
			add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|ie_data_prescricao_w:'||ie_data_prescricao_w);
			ds_horarios_padrao_w := to_char(dt_prev_execucao_w,'hh24:mi');
		end if;	

		if (hr_prev_execucao_w IS NOT NULL AND hr_prev_execucao_w::text <> '') then 
			dt_prev_execucao_w	:= to_date(to_char(dt_prev_execucao_w,'dd/mm/yyyy ') || hr_prev_execucao_w,'dd/mm/yyyy hh24:mi');
			add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|hr_prev_execucao_w:'||hr_prev_execucao_w);
			if (dt_prev_execucao_w < dt_prescricao_w) then 
				dt_prev_execucao_w := dt_prev_execucao_w + 1;
				add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|dt_prescricao_w:'||to_char(dt_prescricao_w, c_fmt_data));
			elsif (dt_prev_execucao_w > dt_validade_prescr_w) then 
				dt_prev_execucao_w := dt_prescricao_w;
				add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|dt_validade_prescr_w:'||to_char(dt_validade_prescr_w, c_fmt_data));
			end if;
			ds_horarios_padrao_w	:= to_char(dt_prev_execucao_w,'hh24:mi');
		end if;

		if (coalesce(cd_medico_exec_w::text, '') = '') and (VarParam998_w = 'S') then 
			cd_medico_exec_w	:= obter_pessoa_fisica_usuario(nm_usuario_p,'C');
		end if;

		select	max(b.cd_material_exame) 
		into STRICT	cd_material_exame_w 
		from	material_exame_lab b, 
			exame_lab_material a 
		where	a.nr_seq_material	= b.nr_sequencia 
		and	a.nr_seq_exame		= nr_seq_exame_w 
		and	a.ie_situacao		= 'A' 
		and	b.cd_material_exame	= cd_material_exame_w;

		if (dt_prev_execucao_w < dt_prescricao_w) then 
			dt_prev_execucao_w := trunc((dt_prev_execucao_w + 1/1440),'mi');
			add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|dt_prescricao_w:'||to_char(dt_prescricao_w, c_fmt_data));
		end if;

		if (ie_data_prescricao_ww = 'SA') and (dt_prescricao_w IS NOT NULL AND dt_prescricao_w::text <> '') and (to_char(dt_prev_execucao_w,'dd/mm/yyyy hh24:mi:ss') <> to_char(dt_prescricao_w,'dd/mm/yyyy hh24:mi:ss')) then 
			dt_prev_execucao_w := dt_prescricao_w;
			add_log_dt_prev_execucao($$PLSQL_LINE, nr_sequencia_w, 'dt_prev_execucao_w:'||to_char(dt_prev_execucao_w, c_fmt_data)||'|dt_prescricao_w:'||to_char(dt_prescricao_w, c_fmt_data)||'|ie_data_prescricao_ww:'||ie_data_prescricao_ww);
		end if;
		
		if (coalesce(nr_seq_prot_glic_w,0)  = 0) then
			select	max(nr_seq_prot_glic)
			into STRICT	nr_seq_prot_glic_w
			from 	proc_interno
			where	nr_sequencia = nr_proc_interno_w;
		
		end if;
		
		if (cd_funcao_p = 916) then
			
			SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), coalesce(qt_proc_padrao_w, qt_procedimento_w), ie_tipo_atendimento_w, cd_plano_convenio_w, '', ds_erro_autorizacao_w, cd_setor_exclusivo_w, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, cd_setor_entrega_w, cd_medico_exec_w, cd_pessoa_fisica_prescr_w, ie_glosa_w, nr_seq_regra_ajuste_w, nr_prescricao_p, null) INTO STRICT ds_erro_autorizacao_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_ajuste_w;
			
			if (ie_regra_w in (1,2) or (vl_parametro1209_w = 'S' and ie_regra_w in (5,8))) then
				ie_autorizacao_w := 'B';
			elsif (ie_regra_w in (3,6,7)) then
				ie_autorizacao_w := 'PA';
			end if;
		end if;
		
		if (coalesce(ie_agora_w,'N') = 'S') then
			if (ds_horarios_padrao_w not in ('ACM', 'SN')) then
				if (to_char(to_date(ds_horarios_padrao_w, 'hh24:mi'), 'hh24:mi') < to_char(dt_prev_execucao_w, 'hh24:mi')) then

					ds_horarios_padrao_w := to_char(dt_prev_execucao_w, 'hh24:mi');
				end if;
			end if;	
		end if;
	
		insert into prescr_procedimento( 
			nr_prescricao,  
			nr_sequencia,  
			cd_procedimento,  
			qt_procedimento,  
			dt_atualizacao, 
			nm_usuario,  
			cd_motivo_baixa,  
			ie_origem_proced,  
			cd_intervalo, 
			ie_urgencia,  
			ie_suspenso,  
			cd_setor_atendimento,  
			dt_prev_execucao, 
			cd_material_exame,  
			nr_seq_exame,  
			ie_status_atend,  
			ie_origem_inf, 
			ie_amostra,  
			ds_dado_clinico,  
			ie_executar_leito,  
			ds_rotina,  
			ie_se_necessario,
			ie_acm, 
			DS_MATERIAL_ESPECIAL,  
			ds_horarios,  
			nr_ocorrencia,  
			ds_observacao,  
			nr_seq_interno, 
			nr_seq_proc_interno,  
			ie_avisar_result,  
			ds_resumo_clinico,  
			ds_exame_fis_achado_cirur, 
			cd_medico_exec, 
			ie_lado,  
			cd_setor_coleta,  
			cd_setor_entrega,  
			nr_seq_prot_glic, 
			qt_min_intervalo,  
			qt_hora_intervalo,  
			nr_seq_topografia, 
			dt_resultado,  
			nr_doc_convenio, 
			ie_tipo_proced,  
			nr_seq_contraste,  
			ds_justificativa,  
			nr_seq_condicao,  
			nr_seq_rotina,  
			cd_cgc_laboratorio, 
			ie_anestesia, 
			ie_forma_exame, 
			nr_seq_agenda_cons, 
			nr_seq_rotina_especial, 
			ie_autorizacao, 
			nr_agrupamento,
			ie_exame_bloqueado) 
		values ( 
			nr_prescricao_p,  
			nr_sequencia_w,  
			cd_procedimento_w,  
			coalesce(qt_proc_padrao_w, qt_procedimento_w),  
			clock_timestamp(), 
			nm_usuario_p,  
			0,  
			ie_origem_proced_w,  
			coalesce(cd_intervalo_padrao_w, cd_intervalo_w), 
			coalesce(ie_agora_w,'N'),  
			'N',  
			cd_setor_exclusivo_w,  
			coalesce(dt_prev_execucao_w,dt_prescricao_w), 
			cd_material_exame_w,  
			nr_seq_exame_w,  
			5,  
			'1',  
			coalesce(ie_amostra_w,'N'),  
			substr(ds_dado_clinico_w,1,2000),  
			CASE WHEN ie_beira_leito_p='S' THEN ie_beira_leito_p  ELSE coalesce(ie_executar_leito_w,'N') END ,  
			substr(ds_rotina_w,1,80), 
			coalesce(ie_se_necessario_w,'N'), 
			coalesce(ie_acm_w,'N'), 
			substr(coalesce(ds_material_especial_p,ds_material_esp_w),1,255),  
			substr(coalesce(ds_horarios_padrao_w, ds_horarios_proced_w),1,2000),  
			nr_ocorrencia_proced_w, 
			substr(ds_observacao_final_w,1,2000),  
			nextval('prescr_procedimento_seq'), 
			nr_proc_interno_w,  
			coalesce(ie_avisa_result_w,'N'),  
			substr(coalesce(ds_resumo_clinico_p,ds_resumo_clinico_w),1,2000),  
			substr(ds_exame_fisico_p,1,2000),  
			cd_medico_exec_w, 
			coalesce(ie_lado_w,CD_LADO_w), 
			cd_setor_coleta_w,  
			cd_setor_entrega_w,  
			nr_seq_prot_glic_w,  
			CASE WHEN qt_min_intervalo_w=0 THEN null  ELSE qt_min_intervalo_w END , 
			CASE WHEN qt_hora_intervalo_w=0 THEN null  ELSE qt_hora_intervalo_w END ,  
			nr_seq_topografia_ww, 
			dt_resultado_w,  
			nr_doc_convenio_w, 
			ie_tipo_proced_w, 
			coalesce(nr_seq_contraste_p,nr_seq_contraste_w),  
			substr(coalesce(ds_justificativa_p,ds_justificativa_w),1,4000),  
			nr_seq_condicao_p,  
			nr_sequencia_p,  
			cd_cgc_externo_p,  
			coalesce(coalesce(ie_anestesia_p,'N'),'N'), 
			ie_forma_exame_p, 
			nr_seq_agenda_serv_w, 
			nr_sequencia_p, 
			ie_autorizacao_w, --'L', 
			nr_agrupamento_w,
			'N');	
 
		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') and (cd_material_exame_w IS NOT NULL AND cd_material_exame_w::text <> '') then
			
			CALL gerar_exame_lab_dependente(nr_prescricao_p, nr_sequencia_w, 10, nr_atendimento_w, nm_usuario_p, nr_seq_exame_w, null, null);
			
		end if;

		if (ie_proc_sem_dt_prev_w = 'D') then 
			ie_gerar_proc_sem_dt_prev_w := obter_se_data_prev_exec_proc(cd_procedimento_w,ie_origem_proced_w,nr_proc_interno_w,nr_seq_exame_w);
		end if;

		if	((ie_proc_sem_dt_prev_w = 'S') or (ie_gerar_proc_sem_dt_prev_w = 'S')) then
			update	prescr_procedimento 
			set	dt_prev_execucao	 = NULL, 
				ds_horarios		 = NULL 
			where	nr_sequencia		= nr_sequencia_w 
			and	nr_prescricao 		= nr_prescricao_p 
			and	coalesce(nr_seq_exame::text, '') = '';
		end if;

		if (coalesce(ds_exames_dep_p,'0') <> '0') then 
			ds_exames_dep_w	:= ds_exames_dep_p;
			while(ds_exames_dep_w IS NOT NULL AND ds_exames_dep_w::text <> '') loop 
				tam_lista_3w		:= length(ds_exames_dep_w);
				ie_pos_hifen_w		:= position('-' in ds_exames_dep_w); 		
				ie_pos_virgula_3w	:= position(',' in ds_exames_dep_w);
 
			if (ie_pos_hifen_w <> 0 AND ie_pos_hifen_w < ie_pos_virgula_3w)	then				
				qt_proced_depend_w := (substr(ds_exames_dep_w,ie_pos_hifen_w + 1,(ie_pos_virgula_3w - ie_pos_hifen_w)))::numeric;
				nr_seq_exame_ww	   := (substr(ds_exames_dep_w,1,(ie_pos_hifen_w - 1)))::numeric;
				ds_exames_dep_w	   := substr(ds_exames_dep_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
			elsif (ie_pos_virgula_3w <> 0) then
				nr_seq_exame_ww	   := (substr(ds_exames_dep_w,1,(ie_pos_virgula_3w - 1)))::numeric;
				ds_exames_dep_w	   := substr(ds_exames_dep_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
				qt_proced_depend_w := null;				
			else
				nr_seq_exame_w	   := (ds_exames_dep_w)::numeric;
				ds_exames_dep_w	   := null;
			end if;
	
			if (coalesce(nr_seq_exame_ww, nr_seq_exame_w) > 0) then 
				CALL Gerar_Exame_Lab_Dependente(nr_prescricao_p,nr_sequencia_w,7,nr_atendimento_w,nm_usuario_p,coalesce(nr_seq_exame_ww, nr_seq_exame_w),null,qt_proced_depend_w);
			end if;	
			end loop;
		end if;	

		if (coalesce(ds_lista_kit_proced_p,'0') <> '0') then 
			ds_lista_kit_proced_w	:= ds_lista_kit_proced_p;
			while(ds_lista_kit_proced_w IS NOT NULL AND ds_lista_kit_proced_w::text <> '') loop 
				tam_lista_3w	:= length(ds_lista_kit_proced_w);
				ie_pos_virgula_3w	:= position(',' in ds_lista_kit_proced_w);
 
				if (ie_pos_virgula_3w <> 0) then 
					cd_kit_w		:= (substr(ds_lista_kit_proced_w,1,(ie_pos_virgula_3w - 1)))::numeric;
					ds_lista_kit_proced_w	:= substr(ds_lista_kit_proced_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
				else 
					cd_kit_w		:= (ds_lista_kit_proced_w)::numeric;
					ds_lista_kit_proced_w	:= null;
				end if;
		
				if (cd_kit_w > 0) then 
					CALL Gerar_kit_proced_manual(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, cd_kit_w, nm_usuario_p);
				end if;
			end loop;
		elsif (ie_kit_automatico_w = 'S') then 

			if (cd_kit_material_w IS NOT NULL AND cd_kit_material_w::text <> '') then 
				CALL Gerar_kit_proced_manual(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, cd_kit_material_w, nm_usuario_p);
			else 
				CALL GERAR_KIT_PROCEDIMENTO(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
			end if;
		end if;
 
		if (ie_prescr_proc_sem_lib_w = 'S') then 
			CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_p,nr_Sequencia_w,cd_perfil_w,'N',nm_usuario_p);
		end if;
 
		nr_seq_prescr_p	:= nr_sequencia_w || ',' ||nr_seq_prescr_p;
 
		CALL gerar_prescr_proc_glic(nr_prescricao_p, nr_sequencia_w, nr_seq_prot_glic_w, nm_usuario_p);
		if (ie_gerar_assoc_proc_w = 'S') then 
			CALL Gerar_med_mat_assoc(nr_prescricao_p,nr_sequencia_w);
		end if;
		CALL Gerar_prescr_proc_assoc(nr_prescricao_p,nr_sequencia_w, nm_usuario_p);

		if (nr_seq_contraste_p IS NOT NULL AND nr_seq_contraste_p::text <> '') then 
			select	coalesce(max(c.ie_itens_associados),'N') 
			into STRICT	ie_lancar_contrastes_w 
			from	proc_int_mat_contraste a, 
				proc_interno_contraste c, 
				prescr_procedimento p, 
				prescr_medica x 
			where	x.nr_prescricao			= p.nr_prescricao 
			and	c.nr_seq_proc_interno		= p.nr_seq_proc_interno 
			and	a.nr_seq_contraste		= c.nr_sequencia 
			and	p.nr_prescricao			= nr_prescricao_p 
			and	p.nr_sequencia			= nr_sequencia_w  
			and	a.nr_seq_contraste		= nr_seq_contraste_p 
			order by 1;
 
			if (ie_lancar_contrastes_w = 'S') then 
				CALL Gerar_Med_Mat_Assoc_contraste(nr_prescricao_p,nr_sequencia_w ,nr_seq_contraste_p);
			end if;
		end if;

		ds_erro_w := consistir_prescr_procedimento(nr_prescricao_p, nr_sequencia_w, nm_usuario_p, cd_perfil_w, ds_erro_w);
 
		if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then 
			begin 
			select	coalesce(max(ie_excluir_proc_princ),'N') 
			into STRICT	ie_excluir_proc_princ_w 
			from	proc_interno 
			where	nr_sequencia = nr_proc_interno_w;
	
			if (ie_excluir_proc_princ_w = 'S') then 
				select	max(nr_seq_interno) 
				into STRICT	nr_seq_interno_w 
				from	prescr_procedimento 
				where	nr_prescricao	= nr_prescricao_p 
				and		nr_sequencia		= nr_sequencia_w;
		
				select	count(*) 
				into STRICT	qt_w 
				from	prescr_Procedimento where		nr_prescricao	= nr_prescricao_p 
				and		nr_seq_proc_excl = nr_seq_interno_w LIMIT 1;
		
				if (qt_w > 0) then 
					delete 
					from	prescr_procedimento 
					where	nr_prescricao	= nr_prescricao_p 
					and		nr_sequencia	= nr_sequencia_w;
				end if;
			end if;
			end;
		end if;
 
		if	((ie_regra_lanc_aut_w = 'S') or (ie_regra_lanc_aut_w = 'E')) then 
			CALL Gerar_lancto_aut_prescr_proc(nr_prescricao_p, nr_sequencia_w, 151, nm_usuario_p, cd_procedimento_w, ie_origem_proced_w, 0, nr_seq_exame_w, ie_regra_lanc_aut_w);
		end if;
 
		if (nr_seq_prot_glic_w > 0) then 
			CALL Gerar_Med_Mat_Assoc_Glic(nr_prescricao_p, nr_sequencia_w, nr_seq_prot_glic_w);
		end if;

		if (cd_cid_p IS NOT NULL AND cd_cid_p::text <> '') then
			CALL gerar_cid_procedimento(	nr_prescricao_p => nr_prescricao_p,
									nr_seq_proced_p => nr_sequencia_w,
									cd_cid_p => cd_cid_p,
									nm_usuario_p => nm_usuario_p);
		end if;

		if (coalesce(qt_min_atraso_w, 0) > 0)  then
			dt_resultado_w := dt_resultado_w + (qt_min_atraso_w / 1440);
			CALL lab_gerar_dt_result_atraso(nr_prescricao_p, nr_sequencia_w, dt_resultado_w, nm_usuario_p);
		end if;
        CALL ajustar_prescr_mat_proc(nr_prescricao_p, nr_sequencia_w, cd_perfil_w,null);

		end;
	end loop;
	close C01;
	 
	if (ie_gerar_assoc_proc_w = 'S') then 
		CALL Gerar_Med_Mat_Assoc_rotina(nr_prescricao_p, nr_sequencia_p, nm_usuario_p);
	end if;
 
	select	coalesce(max(ie_tipo_atendimento),'1') 
	into STRICT	ie_tipo_atend_w 
	from	atendimento_paciente 
	where	nr_atendimento	= nr_atendimento_w;
 
	select	coalesce(max(ie_tipo_convenio),0) 
	into STRICT	ie_tipo_conv_w 
	from	convenio 
	where	cd_convenio = cd_convenio_w;
 
    begin
        select cd_edicao_amb 
        into STRICT cd_edicao_amb_w
        from (
            SELECT coalesce(cd_edicao_amb,0) cd_edicao_amb
            from convenio_amb
            where (cd_estabelecimento       = cd_estabelecimento_w)
              and (cd_convenio              = cd_convenio_w)
              and (cd_categoria	            = cd_categoria_w)
              and (coalesce(ie_situacao,'A')     = 'A')
              and (dt_inicio_vigencia   <= clock_timestamp())
            order by dt_inicio_vigencia desc
        ) alias8 LIMIT 1;
    exception when no_data_found then
        cd_edicao_amb_w := null;
    end;

	open C02;
	loop 
	fetch C02 into 
		cd_procedimento_w, 
		ie_origem_proced_w, 
		cd_setor_exclusivo_w, 
		nr_seq_exame_w, 
		nr_seq_material_w, 
		ds_rotina_w, 
		ds_material_esp_w, 
		ie_agora_w, 
		ie_horario_prescr_w, 
		qt_hora_intervalo_w, 
		qt_min_intervalo_w, 
		cd_intervalo_w, 
		ie_amostra_w, 
		ds_orientacao_usuario_w, 
		nr_proc_interno_w, 
		ds_observacao_lab_w, 
		nr_sequencia_proc_w, 
		cd_mate_exame_rotina_w, 
		cd_medico_exec_examLab_w,
		ds_resumo_clinico_w,
		ie_acm_w,
		ie_se_necessario_w,
        cd_edicao_amb_exame_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
    begin 
        
        if (coalesce(cd_edicao_amb_exame_w::text, '') = '') or (cd_edicao_amb_exame_w = cd_edicao_amb_w) then
        
            ds_observacao_final_w   := '';
            ds_observacao_w := '';
            nr_ocorrencia_proced_w	:= 0;
            ds_horarios_proced_w	:= '';
            ds_horarios_proced2_w	:= '';
            ie_autorizacao_w := 'L';

            if (hr_exec_proced_p = 'S') then 
                ie_agora_w := 'N';
            end if;
    
            if (coalesce(ie_exec_urgencia_p,'N') = 'S') then 
                ie_agora_w := 'S';
        
                select	max(cd_intervalo) 
                into STRICT	cd_intervalo_ww 
                from	intervalo_prescricao 
                where	ie_agora = 'S' 
                and 	ie_situacao = 'A' 
                and	cd_intervalo = cd_intervalo_w;
     
                if (coalesce(cd_intervalo_ww::text, '') = '') then 
                    select	max(cd_intervalo) 
                    into STRICT	cd_intervalo_agora_w 
                    from	intervalo_prescricao 
                    where	ie_agora = 'S' 
                    and 	ie_situacao = 'A';
        
                    if (cd_intervalo_agora_w IS NOT NULL AND cd_intervalo_agora_w::text <> '') then 
                        cd_intervalo_w	:= cd_intervalo_agora_w;
                    end if;
                end if;
                dt_prev_execucao_w	:= clock_timestamp();
                ds_horarios_proced_w	:= to_char(clock_timestamp(),'hh24:mi');
            end if;
            
            if (coalesce(ie_acm_p,'N') = 'S') then 
                ie_acm_w := 'S';
        
                select	max(cd_intervalo) 
                into STRICT	cd_intervalo_ww 
                from	intervalo_prescricao 
                where	ie_acm = 'S' 
                and 	ie_situacao = 'A' 
                and	cd_intervalo = cd_intervalo_w;
     
                if (coalesce(cd_intervalo_ww::text, '') = '') then 
                    select	max(cd_intervalo) 
                    into STRICT	cd_intervalo_agora_w 
                    from	intervalo_prescricao 
                    where	ie_acm = 'S' 
                    and 	ie_situacao = 'A';
        
                    if (cd_intervalo_agora_w IS NOT NULL AND cd_intervalo_agora_w::text <> '') then 
                        cd_intervalo_w	:= cd_intervalo_agora_w;
                    end if;
                end if;
                dt_prev_execucao_w	:= clock_timestamp();
                ds_horarios_proced_w	:= 'ACM';
            end if;
         
            select  count(*) 
            into STRICT	qt_material_w 
            from    material_exame_lab b, 
                    exame_lab_material a 
            where a.nr_seq_material = b.nr_sequencia 
            and a.nr_seq_exame    = nr_seq_exame_w 
            and a.ie_situacao	= 'A';
    
            if (ie_interv_padrao_prescr_w = 'S') then 
                cd_intervalo_w	:= coalesce(obter_param_proced_prescr(cd_procedimento_w, ie_origem_proced_w,cd_setor_atendimento_w,cd_perfil_w,'I',null,nr_seq_exame_w),cd_intervalo_w);
            end if;
            
            if (qt_material_w = 1) or (VarMatExame_w = 'S') or (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
                if (nr_seq_material_w IS NOT NULL AND nr_seq_material_w::text <> '') then 
                    select	max(cd_material_exame) 
                    into STRICT	cd_material_exame_w 
                    from	material_exame_lab 
                    where	nr_sequencia = nr_seq_material_w;
                else 
                    select	max(cd_material_exame) 
                    into STRICT	cd_material_exame_w 
                    from	material_exame_lab b, 
                        exame_lab_material a 
                    where	a.nr_seq_material = b.nr_sequencia 
             and	a.nr_seq_exame 	= nr_seq_exame_w 
             and	a.ie_situacao	= 'A' 
             and	ie_prioridade	= 
                            (SELECT	min(ie_prioridade) 
                            from	exame_lab_material x 
                            where	nr_seq_exame	= nr_seq_exame_w 
                            and 	x.ie_situacao	= 'A');
                end if;
            end if;
     
            select	coalesce(max(nr_sequencia),0) + 1 
            into STRICT	nr_sequencia_w 
            from 	prescr_procedimento 
            where 	nr_prescricao = nr_prescricao_p;
     
            if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (ie_Gera_Setor_PrescrProc_w = 'S') and (obter_se_setor_exec(cd_setor_prescr_w, cd_estabelecimento_w, cd_procedimento_w,ie_origem_proced_w, nr_proc_interno_w) = 'S') then 
                cd_setor_exclusivo_w	:= cd_setor_prescr_w;
            end if;
     
            if (coalesce(cd_setor_exclusivo_w::text, '') = '') then 
                cd_setor_exclusivo_w	:= obter_setor_atend_proc(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, null, cd_setor_atendimento_w, null,null,nr_atendimento_w);
            end if;
     
            if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
                cd_setor_exclusivo_w	:= obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,cd_setor_atendimento_w,null,nr_seq_exame_w);
            end if;
     
            begin 
            select	ds_observacao 
            into STRICT	ds_observacao_w 
            from	procedimento_prescricao 
            where	cd_procedimento		= cd_procedimento_w 
            and	ie_origem_proced	= ie_origem_proced_w 
            and	coalesce(ie_somente_alerta,'N') = 'N';
            exception 
                when others then 
                ds_observacao_w := null;
            end;
     
            /* Dalcastagne em 29/07/2008 OS 92844*/
 
            if (ie_horario_prescr_w IS NOT NULL AND ie_horario_prescr_w::text <> '') and (hr_exec_proced_p <> 'S')		then	
                if (ie_horario_prescr_w = '5') then 
                    if (cd_funcao_p = 916) then 
                        dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_prescricao_w, '2', nm_usuario_p, cd_estabelecimento_w);
                    else 
                        dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_inicio_prescr_w, '2', nm_usuario_p, cd_estabelecimento_w);
                    end if;
                else 
                    dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_inicio_prescr_w, ie_horario_prescr_w, nm_usuario_p, cd_estabelecimento_w);
                end if;
            end if;
     
            cd_intervalo_w		:= coalesce(OBTER_DADOS_EXAME_LAB_REP(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'I'), cd_intervalo_w);
            hr_prev_execucao_w	:= obter_dados_exame_lab_rep(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'H');
     
            select	coalesce(max(ie_agora),'N') 
            into STRICT	ie_interv_agora_w 
            from	INTERVALO_PRESCRICAO 
            where	cd_intervalo	= cd_intervalo_w;
     
            if (ie_interv_agora_w = 'S') and (coalesce(ie_considera_agora_w,'S')	= 'S') then 
                dt_prev_execucao_w := dt_prev_exec_agora_w;
            end if;
     
            select	 max(coalesce(qt_min_intervalo_w, coalesce(qt_min_intervalo,0))) 
            into STRICT	 qt_min_intervalo_w 
            from	 intervalo_prescricao 
            where	 cd_intervalo = cd_intervalo_w;
     
            SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, cd_intervalo_w, coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_prev_execucao_w,dt_prescricao_w), nr_horas_validade_w, cd_procedimento_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w;
     
            ds_horarios_proced_w	:= ds_horarios_proced_w || ds_horarios_proced2_w;
    
            if (VarEliminaHorFinalVig_w = 'S') and (ds_horarios_proced_w IS NOT NULL AND ds_horarios_proced_w::text <> '') then 
                ds_horarios_padrao_w	:= Eliminar_hor_vigencia_proc(ds_horarios_proced_w, cd_intervalo_w,coalesce(dt_prev_execucao_w,dt_prescricao_w), dt_inicio_prescr_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_prescricao_p,coalesce(ie_agora_w,'N'),dt_prev_execucao_w);
            end if;
     
            if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then /* Oraci em 10/10/2007 OS70724 */
 
                dt_prev_execucao_w := atualiza_dt_realizacao_exame(nr_seq_exame_w, nr_prescricao_p, dt_prev_execucao_w, dt_prev_execucao_w);
                
                SELECT * FROM obter_setor_exame_lab(	nr_prescricao_p, nr_seq_exame_w, cd_setor_atual_usuario_w, cd_material_exame_w, null, 'S', cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, coalesce(ie_agora_w,'N'), ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w, dt_prev_execucao_w) INTO STRICT cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w; 		

                if (VarAtualDataPrevResult_w = 'S') then	 
                    dt_resultado_w := null;
                    if (ds_hora_fixa_w IS NOT NULL AND ds_hora_fixa_w::text <> '') then 
                        select (trunc(CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END ) + 
    
                        (ds_hora_fixa_w/24)) + qt_dia_entrega_w +  
                        (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
                        into STRICT dt_resultado_w 
                        from prescr_medica 
                        where  nr_prescricao = nr_prescricao_p;
                    else 
                        select CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END  +  
    
                        qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
                        into STRICT dt_resultado_w 
                        from  prescr_medica 
                        where  nr_prescricao = nr_prescricao_p;
                    end if;
                    if (ie_dia_semana_final_w > 0) then  
                        ie_dia_semana_upd_w := pkg_date_utils.get_WeekDay(dt_resultado_w);
                        while(ie_dia_semana_upd_w <> ie_dia_semana_final_w) loop 
                            dt_resultado_w := dt_resultado_w + 1;
                            ie_dia_semana_upd_w := pkg_date_utils.get_WeekDay(dt_resultado_w);
                        end loop;
                    end if;
                end if;
                cd_setor_entrega_w	:= trunc((replace(replace(cd_setor_entrega_w,'(',''), ')',''))::numeric );
                if (coalesce(cd_setor_coleta_w::text, '') = '') then 
                    cd_setor_coleta_w	:= gerar_setor_exame_lab(cd_setor_col_w);
                end if;
     
                /* Rafael e Bruna em 14/3/8 OS84471 */
 
                if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (cd_setor_atend_w IS NOT NULL AND cd_setor_atend_w::text <> '') and (somente_numero(cd_setor_atend_w) > 0) and (ie_somente_setor_exclusivo_w = 'N') then 
                    cd_setor_exclusivo_w	:= gerar_setor_exame_lab(cd_setor_atend_w);
                end if;
            end if;
     
            /* Rafael em 18/2/8 OS80263 */
 
            ie_gerar_setor_w	:= obter_se_gerar_setor_rotina(cd_estabelecimento_w, cd_funcao_p, cd_procedimento_w, ie_origem_proced_w, null, nr_seq_exame_w, cd_setor_atendimento_w, nm_usuario_p);
     
            if (ie_gerar_setor_w = 'N') then 
                cd_setor_exclusivo_w := null;
            end if;
            /* Fim Rafael em 18/2/8 OS80263 */
 
     
            if (coalesce(cd_setor_atendimento_p,0) <> 0) then 
                cd_setor_exclusivo_w	:= cd_setor_atendimento_p;
            end if;
     
            /* Rafael em 27/8/8 OS96279 */
 
            if (ie_gerar_setor_entrega_w = 'S') and (ie_gerar_setor_w = 'S') and (coalesce(cd_setor_exclusivo_w::text, '') = '') and (cd_setor_entrega_ww IS NOT NULL AND cd_setor_entrega_ww::text <> '') then 
                cd_setor_exclusivo_w	:= cd_setor_entrega_ww;
            end if;
            /* Fim Rafael em 27/8/8 OS96279 */
 
     
            if (ie_verifica_setores_adic_w = 'S')	then 
                begin 
                if (coalesce(nr_proc_interno_w,0) > 0) then 
                    begin 
                    select	count(*) 
                    into STRICT	qt_existe_setores_int_w 
                    from	proc_interno_setor 
                    where	nr_seq_proc_interno	= nr_proc_interno_w;
                    end;
     
                    if (qt_existe_setores_int_w > 1) then 
                        begin 
                        cd_setor_exclusivo_w	:=	null;
                        end;
                    else 
                        cd_setor_exclusivo_w	:= cd_setor_exclusivo_w;
                    end if;
                else 
                    begin 
                    select	coalesce(max(b.cd_setor_exclusivo),0) 
                    into STRICT	cd_setor_w 
                    from	procedimento b 
                    where	b.cd_procedimento	= cd_procedimento_w 
                    and	b.ie_origem_proced	= ie_origem_proced_w;
     
                    if (cd_setor_w = 0) then 
                        begin 
                        select	count(*) 
                        into STRICT	qt_existe_setores_w 
                        from	procedimento_setor_atend 
                        where	cd_procedimento 	= cd_procedimento_w 
                        and	ie_origem_proced 	= ie_origem_proced_w 
                        and	cd_estabelecimento = cd_estabelecimento_w;
                        if (qt_existe_setores_w > 1) then 
                            cd_setor_exclusivo_w	:=	null;
                        elsif (qt_existe_setores_w = 1) then 
                            select	max(cd_setor_atendimento) 
                            into STRICT	cd_setor_exclusivo_w 
                            from	procedimento_setor_atend 
                            where	cd_procedimento 	= cd_procedimento_w 
                            and	ie_origem_proced 	= ie_origem_proced_w 
                            and	cd_estabelecimento = cd_estabelecimento_w;
                        else 
                            cd_setor_exclusivo_w	:=	null;
                        end if;
                        end;
                    else 
                        cd_setor_exclusivo_w	:=	cd_setor_w;
                    end if;
                    end;
                end if;
                end;
            end if;
     
            if (cd_cgc_externo_p IS NOT NULL AND cd_cgc_externo_p::text <> '') then 
                cd_setor_exclusivo_w	:= Obter_setor_Laboratorio_ext(cd_cgc_externo_p);
            end if;
     
            if (coalesce(ie_agora_w,'N') = 'N') then 
                ie_agora_w	:= coalesce(obter_se_proc_urgente(cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, null, nr_seq_exame_w, ie_tipo_atend_w), 'N');
            end if;
     
            /* Verificar se intervalo agora  -  Hudson OS380015 */
 
            if (ie_agora_w = 'S') then 
                cd_intervalo_w	:= coalesce(Obter_interv_acm_sn_agora_lib(cd_estabelecimento_w,  
                                        1, 2, 'P', cd_procedimento_w, cd_intervalo_w, nr_prescricao_p, ie_origem_proced_w, null), cd_intervalo_w);
     
                dt_prev_execucao_w		:= dt_prev_exec_agora_w;
                ds_horarios_proced_w	:= to_char(dt_prev_exec_agora_w,'hh24:mi');
            end if;
     
            nr_doc_convenio_w		:= null;
            SELECT * FROM tiss_obter_guia(4, null, nr_doc_convenio_w, 'N', null, null, null, null, null, ie_guia_w, null, nr_prescricao_p, null, cd_setor_exclusivo_w, null, nr_prescricao_p, null, null, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null) INTO STRICT nr_doc_convenio_w, ie_guia_w;
     
            if (ie_gerar_horarios_w = 'N') then 
                ds_horarios_proced_w	:= null;
            end if;
     
            if (ie_hor_proced_interv_w <> 'N') and ((coalesce(cd_intervalo_padrao_w, cd_intervalo_w) IS NOT NULL AND (coalesce(cd_intervalo_padrao_w, cd_intervalo_w))::text <> '')) then 
                select	max(ie_operacao) 
                into STRICT	ie_operacao_w 
                from	intervalo_prescricao 
                where	cd_intervalo	= coalesce(cd_intervalo_padrao_w, cd_intervalo_w);
                 
                if	(((ie_hor_proced_interv_w = 'S') and (ie_operacao_w  in ('V','F'))) or (ie_hor_proced_interv_w = 'I'))	then 
         
                    dt_prev_execucao_w	:= coalesce(Obter_Horario_Proced_interv(cd_intervalo_w, nr_prescricao_p, dt_inicio_prescr_w, dt_inicio_prescr_w),dt_prev_execucao_w);
                end if;
            end if;
    
            ie_cig_w	:= obter_ctrl_glic_proc(nr_proc_interno_w);
    
            if (ie_cig_w = 'CIG') then 
                ds_horarios_padrao_w	:= to_char(dt_prev_execucao_w,'hh24:mi');
            end if;
     
            if (qt_procedimento_w = 1) then 
                qt_procedimento_w	:= coalesce(Obter_Quantidade_prescr_proced(cd_intervalo_w,coalesce(ie_lado_w,CD_LADO_w),cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w, nr_atendimento_w),1);
            end if;
     
            if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') then 
                ds_observacao_w	:= substr(ds_observacao_p || '   ' || ds_observacao_w,1,2000);
            end if;
     
            if (ds_orientacao_usuario_w IS NOT NULL AND ds_orientacao_usuario_w::text <> '') and (ie_obs_laboratorio_w = 'S') then 
                ds_observacao_w	:= substr(ds_orientacao_usuario_w || '   ' || ds_observacao_w,1,2000);
            end if;
     
            /* if	(trunc(nvl(dt_prev_execucao_w,dt_prescricao_w),'mi') = trunc(dt_prescricao_w,'mi')) then 
                dt_prev_execucao_w	:= nvl(dt_prev_execucao_w,dt_prescricao_w) + 1/1440; 
                Calcular_Horario_Prescricao(nr_prescricao_p,cd_intervalo_w, nvl(dt_primeiro_horario_w,dt_prescricao_w), nvl(dt_prev_execucao_w,dt_prescricao_w), 
                        nr_horas_validade_w, cd_procedimento_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_ocorrencia_proced_w, ds_horarios_proced_w,ds_horarios_proced2_w, 'N', null); 
     
                ds_horarios_proced_w	:= ds_horarios_proced_w || ds_horarios_proced2_w; 
            end if; */
 
     
            --ie_se_necessario_w := ''; 

        --	ie_acm_w := ''; 
            ds_horarios_padrao_w	:= null;
            ie_acm_sn_w := obter_info_proced(cd_setor_atendimento_p,cd_procedimento_w);
            if (ie_acm_sn_w = 'N') or (ie_se_necessario_w = 'S') then 
                ie_se_necessario_w := 'S';
                ds_horarios_padrao_w := 'SN';
            elsif (ie_acm_sn_w = 'A') or (ie_acm_w = 'S') then 
                ie_acm_w := 'S';
                ds_horarios_padrao_w := 'ACM';
            end if;
    
            if (ie_setor_classif_w = 'S') and (cd_classif_setor_w = 1) then 
                ie_avisa_result_w := 'S';
            end if;
    
            if (ie_marca_campo_w = 'S') then 
        
                ie_agora_acm_sn_w	:= obter_se_interv_agora_acm_sn(coalesce(cd_intervalo_padrao_w, cd_intervalo_w));
        
                if (ie_agora_acm_sn_w = 'AGORA') then 
                    ie_agora_w		:= 'S';
                    ie_acm_w		:= 'N';
                    ie_se_necessario_w	:= 'N';
                    ds_horarios_padrao_w	:= to_char(clock_timestamp(),'hh24:mi');
                elsif (ie_agora_acm_sn_w = 'ACM') then 
                    ie_agora_w		:= 'N';
                    ie_acm_w		:= 'S';
                    ie_se_necessario_w	:= 'N';
                    ds_horarios_padrao_w	:= 'ACM';
                elsif	(ie_agora_acm_sn_w = 'SN' AND ie_check_sn_w = 'S') then 
                    ie_agora_w		:= 'N';
                    ie_acm_w		:= 'N';
                    ie_se_necessario_w	:= 'S';
                    ds_horarios_padrao_w	:= 'SN';		
                end if;	

            end if;
    
            if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then 
                ds_observacao_final_w	:= substr(ds_observacao_w,1,2000);
            end if;
            if (ds_observacao_lab_w IS NOT NULL AND ds_observacao_lab_w::text <> '') then 
                ds_observacao_final_w	:= substr(ds_observacao_final_w || ' ' || ds_observacao_lab_w,1,2000);
            end if;
    
            if (ie_gravar_indic_w = 'S') and (ds_indicacao_w IS NOT NULL AND ds_indicacao_w::text <> '') then 
                ds_observacao_final_w	:= substr(ds_observacao_final_w || ' ' || ds_indicacao_w,1,2000);
            end if;
    
            if (coalesce(ie_lado_w,CD_LADO_w) = 'A') and (somente_numero(qt_proced_ambos_w) > qt_procedimento_w) then 
                qt_procedimento_w	:= somente_numero(qt_proced_ambos_w);
            end if;
     
            if (cd_medico_exec_examLab_w IS NOT NULL AND cd_medico_exec_examLab_w::text <> '') then 
            cd_medico_exec_w := cd_medico_exec_examLab_w;
            else  
            select	coalesce(max(a.cd_medico_exec),cd_medico_exec_p) 
            into STRICT	cd_medico_exec_w 
            from	proc_interno a 
            where	a.nr_sequencia = nr_proc_interno_w 
            and		a.cd_procedimento = Obter_procedimento_proc_int(nr_proc_interno_w);
            end if;
    
            if (coalesce(cd_medico_exec_w::text, '') = '') then 
                cd_medico_exec_w	:= obter_medico_exec_proc(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w);
            end if;
    
            if (ie_utiliza_regra_medico_w = 'S') then 
                SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, Obter_Tipo_Atendimento(nr_atendimento_w), nr_seq_exame_w, nr_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '', coalesce(dt_prev_execucao_w,dt_prescricao_w), Obter_Classificacao_Atend(nr_atendimento_w,'C'), 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
        
                if (ie_medico_executor_w = 'F') then 
                    cd_medico_exec_w:= coalesce(cd_medico_exec_w,cd_medico_executor_w);
                end if;	
            end if;
    
            if (coalesce(nr_seq_material_w::text, '') = '') then 
                cd_material_exame_w := null;	
            end if;
    
            if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (ie_vinc_seq_agend_w = 'S')then 
                select	max(a.cd_pessoa_fisica) 
                into STRICT	cd_pessoa_fis_agenda_w 
                from	atendimento_paciente a 
                where	a.nr_atendimento	= nr_atendimento_w;
    
                nr_seq_agenda_serv_w 
                                 := Age_obt_regra_vinc_proc_rep(dt_prescricao_w, cd_pessoa_fis_agenda_w, cd_estabelecimento_w, nr_proc_interno_w, nm_usuario_p, nr_seq_agenda_serv_w 
                                );	
            end if;

            if (coalesce(ie_data_prescricao_w,'N') <> 'N') and (coalesce(ie_agora_w,'N') = 'S') then 
                if (coalesce(ie_data_prescricao_w,'N') = 'I') then 
                    dt_prev_execucao_w := dt_inicio_prescr_w;
                else 
                    dt_prev_execucao_w := dt_prescricao_w;
                end if;
                ds_horarios_padrao_w := to_char(dt_prev_execucao_w,'hh24:mi');
            end if;	
    
            if (hr_prev_execucao_w IS NOT NULL AND hr_prev_execucao_w::text <> '') then 
                dt_prev_execucao_w	:= to_date(to_char(dt_prev_execucao_w,'dd/mm/yyyy ') || hr_prev_execucao_w,'dd/mm/yyyy hh24:mi');
                if (dt_prev_execucao_w < dt_prescricao_w) then 
                    dt_prev_execucao_w := dt_prev_execucao_w + 1;
                elsif (dt_prev_execucao_w > dt_validade_prescr_w) then 
                    dt_prev_execucao_w := dt_prescricao_w;
                end if;
                ds_horarios_padrao_w	:= to_char(dt_prev_execucao_w,'hh24:mi');
            end if;
    
            if (coalesce(cd_medico_exec_w::text, '') = '') and (VarParam998_w = 'S') then 
                cd_medico_exec_w	:= obter_pessoa_fisica_usuario(nm_usuario_p,'C');
            end if;
     
            select	max(b.cd_material_exame) 
            into STRICT	cd_material_exame_w 
            from	material_exame_lab b, 
                exame_lab_material a 
            where	a.nr_seq_material	= b.nr_sequencia 
            and	a.nr_seq_exame		= nr_seq_exame_w 
            and	a.ie_situacao		= 'A' 
            and	b.cd_material_exame =   CASE WHEN coalesce(cd_material_rotina_p::text, '') = '' THEN  coalesce(cd_material_exame_w,cd_mate_exame_rotina_w)  ELSE coalesce(cd_mate_exame_rotina_w, cd_material_exame_w) END;

            if (dt_prev_execucao_w < dt_prescricao_w) then 
                dt_prev_execucao_w := trunc((dt_prev_execucao_w + 1/1440),'mi');
            end if;
    
            if (ie_data_prescricao_ww = 'SA') and (dt_prescricao_w IS NOT NULL AND dt_prescricao_w::text <> '') and (to_char(dt_prev_execucao_w,'dd/mm/yyyy hh24:mi:ss') <> to_char(dt_prescricao_w,'dd/mm/yyyy hh24:mi:ss')) then 
                dt_prev_execucao_w := dt_prescricao_w;
            end if;
            
            if (coalesce(nr_seq_prot_glic_w,0)  = 0) then
                select	max(nr_seq_prot_glic)
                into STRICT	nr_seq_prot_glic_w
                from 	proc_interno
                where	nr_sequencia = nr_proc_interno_w;

            end if;

            if (cd_funcao_p = 916) then
                
                SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), qt_procedimento_w, ie_tipo_atendimento_w, cd_plano_convenio_w, '', ds_erro_autorizacao_w, cd_setor_exclusivo_w, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, cd_setor_entrega_w, cd_medico_exec_w, cd_pessoa_fisica_prescr_w, ie_glosa_w, nr_seq_regra_ajuste_w, nr_prescricao_p, null) INTO STRICT ds_erro_autorizacao_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_ajuste_w;

                if (ie_regra_w in (1,2) or (vl_parametro1209_w = 'S' and ie_regra_w in (5,8))) then
                    ie_autorizacao_w := 'B';
                elsif (ie_regra_w in (3,6,7)) then
                    ie_autorizacao_w := 'PA';
                end if;
            end if;

            if (coalesce(ie_agora_w,'N') = 'S') then
                if (ds_horarios_padrao_w not in ('ACM', 'SN')) then
                    if (to_char(to_date(ds_horarios_padrao_w, 'hh24:mi'), 'hh24:mi') < to_char(dt_prev_execucao_w, 'hh24:mi')) then
    
                        ds_horarios_padrao_w := to_char(dt_prev_execucao_w, 'hh24:mi');
                    end if;
                end if;	
            end if;	

            insert into prescr_procedimento( 
                nr_prescricao,  
                nr_sequencia,  
                cd_procedimento,  
                qt_procedimento,  
                dt_atualizacao,  
                nm_usuario,  
                cd_motivo_baixa,  
                ie_origem_proced,  
                cd_intervalo, 
                ie_urgencia,  
                ie_suspenso,  
                cd_setor_atendimento,  
                dt_prev_execucao, 
                cd_material_exame,  
                nr_seq_exame,  
                ie_status_atend,  
                ie_origem_inf, 
                ie_amostra,  
                ds_dado_clinico,  
                ie_executar_leito,  
                ds_rotina,  
                ie_se_necessario,ie_acm, 
                DS_MATERIAL_ESPECIAL,  
                ds_horarios,  
                nr_ocorrencia,  
                ds_observacao,  
                nr_seq_interno, 
                ie_avisar_result,  
                ds_resumo_clinico,  
                ds_exame_fis_achado_cirur,  
                cd_medico_exec,ie_lado, 
                cd_setor_coleta,  
                cd_setor_entrega,  
                nr_seq_prot_glic,  
                qt_min_intervalo,  
                qt_hora_intervalo,  
                nr_seq_topografia,  
                dt_resultado,  
                nr_doc_convenio,  
                ds_justificativa, 
                nr_seq_proc_interno,  
                nr_seq_condicao,  
                nr_seq_rotina,  
                cd_cgc_laboratorio,  
                ie_anestesia, 
                ie_forma_exame, 
                nr_seq_agenda_cons, 
                nr_seq_contraste, 
                nr_seq_rotina_especial, 
                ie_autorizacao, 
                nr_agrupamento,
                ie_exame_bloqueado) 
            values ( 
                nr_prescricao_p,  
                nr_sequencia_w,  
                cd_procedimento_w,  
                qt_procedimento_w,  
                clock_timestamp(), 
                nm_usuario_p,  
                0,  
                ie_origem_proced_w,  
                cd_intervalo_w, 
                coalesce(ie_agora_w,'N'),  
                'N',  
                cd_setor_exclusivo_w,  
                coalesce(dt_prev_execucao_w,dt_prescricao_w), 
                coalesce(cd_material_exame_w,cd_mate_exame_rotina_w),  
                nr_seq_exame_w,  
                5,  
                '1',  
                coalesce(ie_amostra_w, 'N'),  
                substr(coalesce(ds_dado_clinico_w,ds_resumo_clinico_w),1,2000),  
                CASE WHEN ie_beira_leito_p='S' THEN ie_beira_leito_p  ELSE coalesce(ie_executar_leito_w,'N') END ,  
                substr(ds_rotina_w,1,80), 
                coalesce(ie_se_necessario_w,'N'), 
                'N', 
                substr(coalesce(ds_material_especial_p,ds_material_esp_w),1,255),  
                substr(coalesce(ds_horarios_padrao_w, ds_horarios_proced_w),1,2000),  
                nr_ocorrencia_proced_w,  
                substr(ds_observacao_final_w,1,2000),  
                nextval('prescr_procedimento_seq'),  
                coalesce(ie_avisa_result_w,'N'),  
                substr(coalesce(ds_resumo_clinico_p,ds_resumo_clinico_w),1,2000),  
                substr(ds_exame_fisico_p,1,2000),  
                cd_medico_exec_w, 
                coalesce(ie_lado_w,CD_LADO_w),  
                cd_setor_coleta_w,  
                cd_setor_entrega_w,  
                nr_seq_prot_glic_w, 
                CASE WHEN qt_min_intervalo_w=0 THEN null  ELSE qt_min_intervalo_w END ,  
                CASE WHEN qt_hora_intervalo_w=0 THEN null  ELSE qt_hora_intervalo_w END ,  
                nr_seq_topografia_ww,  
                dt_resultado_w,  
                nr_doc_convenio_w,  
                substr(coalesce(ds_justificativa_p,ds_justificativa_w),1,4000), 
                nr_proc_interno_w,  
                nr_seq_condicao_p,  
                nr_sequencia_p,  
                cd_cgc_externo_p,  
                coalesce(ie_anestesia_p,'N'), 
                ie_forma_exame_p, 
                nr_seq_agenda_serv_w, 
                coalesce(nr_seq_contraste_p,0), 
                nr_sequencia_p, 
                ie_autorizacao_w, --'L', 
                nr_agrupamento_w,
                'N');
        
            commit;
            
            if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') and (cd_material_exame_w IS NOT NULL AND cd_material_exame_w::text <> '') then
                
                CALL gerar_exame_lab_dependente(nr_prescricao_p, nr_sequencia_w, 10, nr_atendimento_w, nm_usuario_p, nr_seq_exame_w, null, null);

            end if;

            if (ie_proc_sem_dt_prev_w = 'D') then 
                ie_gerar_proc_sem_dt_prev_w := obter_se_data_prev_exec_proc(cd_procedimento_w,ie_origem_proced_w,nr_proc_interno_w,nr_seq_exame_w);
            end if;
    
            if	((ie_proc_sem_dt_prev_w = 'S') or (ie_gerar_proc_sem_dt_prev_w = 'S')) then 
                update	prescr_procedimento 
                set	dt_prev_execucao	 = NULL, 
                    ds_horarios		 = NULL 
                where	nr_sequencia		= nr_sequencia_w 
                and	nr_prescricao 		= nr_prescricao_p 
                and	coalesce(nr_seq_exame::text, '') = '';
            end if;
    
            if (coalesce(ds_exames_dep_p,'0') <> '0') then 
                ds_exames_dep_w	:= ds_exames_dep_p;
                while(ds_exames_dep_w IS NOT NULL AND ds_exames_dep_w::text <> '') loop 
                    tam_lista_3w	:= length(ds_exames_dep_w);
                    ie_pos_hifen_w		:= position('-' in ds_exames_dep_w);				
                    ie_pos_virgula_3w	:= position(',' in ds_exames_dep_w);
     
                if (ie_pos_hifen_w <> 0 AND ie_pos_hifen_w < ie_pos_virgula_3w)	then				
                    qt_proced_depend_w := (substr(ds_exames_dep_w,ie_pos_hifen_w + 1,(ie_pos_virgula_3w - ie_pos_hifen_w)))::numeric;
                    nr_seq_exame_ww	   := (substr(ds_exames_dep_w,1,(ie_pos_hifen_w - 1)))::numeric;
                    ds_exames_dep_w	   := substr(ds_exames_dep_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
                elsif (ie_pos_virgula_3w <> 0) then
                    nr_seq_exame_ww	   := (substr(ds_exames_dep_w,1,(ie_pos_virgula_3w - 1)))::numeric;
                    ds_exames_dep_w	   := substr(ds_exames_dep_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
                    qt_proced_depend_w := null;
                else
                    nr_seq_exame_w	   := (ds_exames_dep_w)::numeric;
                    ds_exames_dep_w	   := null;
                end if; 	
                if (coalesce(nr_seq_exame_ww, nr_seq_exame_w) > 0) then
                    CALL Gerar_Exame_Lab_Dependente(nr_prescricao_p,nr_sequencia_w,7,nr_atendimento_w,nm_usuario_p,coalesce(nr_seq_exame_ww, nr_seq_exame_w),null,qt_proced_depend_w);
                end if;
                end loop;
            end if;	
    
            if (coalesce(ds_lista_kit_proced_p,'0') <> '0') then 
                ds_lista_kit_proced_w	:= ds_lista_kit_proced_p;
                while(ds_lista_kit_proced_w IS NOT NULL AND ds_lista_kit_proced_w::text <> '') loop 
                    tam_lista_3w	:= length(ds_lista_kit_proced_w);
                    ie_pos_virgula_3w	:= position(',' in ds_lista_kit_proced_w);
     
                    if (ie_pos_virgula_3w <> 0) then 
                        cd_kit_w		:= (substr(ds_lista_kit_proced_w,1,(ie_pos_virgula_3w - 1)))::numeric;
                        ds_lista_kit_proced_w	:= substr(ds_lista_kit_proced_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
                    else 
                        cd_kit_w		:= (ds_lista_kit_proced_w)::numeric;
                        ds_lista_kit_proced_w	:= null;
                    end if;
            
                    if (cd_kit_w > 0) then 
                        CALL Gerar_kit_proced_manual(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, cd_kit_w, nm_usuario_p);
                    end if;
                end loop;
            elsif (ie_kit_automatico_w = 'S') then 
                CALL GERAR_KIT_PROCEDIMENTO(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
            end if;
    
            nr_seq_prescr_p	:= nr_sequencia_w || ',' ||nr_seq_prescr_p;
     
            CALL gerar_prescr_proc_glic(nr_prescricao_p, nr_sequencia_w, nr_seq_prot_glic_w, nm_usuario_p);
            if (ie_gerar_assoc_proc_w = 'S') then 
                CALL Gerar_med_mat_assoc(nr_prescricao_p,nr_sequencia_w);
            end if;
            CALL Gerar_prescr_proc_assoc(nr_prescricao_p,nr_sequencia_w, nm_usuario_p);
    
            if (nr_seq_contraste_p IS NOT NULL AND nr_seq_contraste_p::text <> '') then 
                select	coalesce(max(c.ie_itens_associados),'N') 
                into STRICT	ie_lancar_contrastes_w 
                from	proc_int_mat_contraste a, 
                    proc_interno_contraste c, 
                    prescr_procedimento p, 
                    prescr_medica x 
                where	x.nr_prescricao			= p.nr_prescricao 
                and	c.nr_seq_proc_interno		= p.nr_seq_proc_interno 
                and	a.nr_seq_contraste		= c.nr_sequencia 
                and	p.nr_prescricao			= nr_prescricao_p 
                and	p.nr_sequencia			= nr_sequencia_w  
                and	a.nr_seq_contraste		= nr_seq_contraste_p 
                order by 1;
     
                if (ie_lancar_contrastes_w = 'S') then 
                    CALL Gerar_Med_Mat_Assoc_contraste(nr_prescricao_p,nr_sequencia_w ,nr_seq_contraste_p);
                end if;
            end if;
     
            ds_erro_w := consistir_prescr_procedimento(nr_prescricao_p, nr_sequencia_w, nm_usuario_p, cd_perfil_w, ds_erro_w);
    
            if (ie_prescr_proc_sem_lib_w = 'S') then --OS 703120. Primeiro o procedimento para depois chamar a rotina Gerar_prescr_proc_sem_dt_lib 
                CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_p,nr_Sequencia_w,cd_perfil_w,'N',nm_usuario_p);
            end if;
    
            if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then 
                begin 
                select	coalesce(max(ie_excluir_proc_princ),'N') 
                into STRICT	ie_excluir_proc_princ_w 
                from	proc_interno 
                where	nr_sequencia = nr_proc_interno_w;
        
                if (ie_excluir_proc_princ_w = 'S') then 
                    select	max(nr_seq_interno) 
                    into STRICT	nr_seq_interno_w 
                    from	prescr_procedimento 
                    where	nr_prescricao	= nr_prescricao_p 
                    and		nr_sequencia		= nr_sequencia_w;
            
                    select	count(*) 
                    into STRICT	qt_w 
                    from	prescr_Procedimento where		nr_prescricao	= nr_prescricao_p 
                    and		nr_seq_proc_excl = nr_seq_interno_w LIMIT 1;
            
                    if (qt_w > 0) then 
                        delete 
                        from	prescr_procedimento 
                        where	nr_prescricao	= nr_prescricao_p 
                        and		nr_sequencia	= nr_sequencia_w;
                    end if;
                end if;
                end;
            end if;
     
            if	((ie_regra_lanc_aut_w = 'S') or (ie_regra_lanc_aut_w = 'E')) then 
                CALL Gerar_lancto_aut_prescr_proc(nr_prescricao_p, nr_sequencia_w, 151, nm_usuario_p, cd_procedimento_w, ie_origem_proced_w, 0, nr_seq_exame_w, ie_regra_lanc_aut_w);
            end if;
     
            if (nr_seq_prot_glic_w > 0) then 
                CALL Gerar_Med_Mat_Assoc_Glic(nr_prescricao_p, nr_sequencia_w, nr_seq_prot_glic_w);
            end if;	

			if (cd_cid_p IS NOT NULL AND cd_cid_p::text <> '') then
				CALL gerar_cid_procedimento(	nr_prescricao_p => nr_prescricao_p,
										nr_seq_proced_p => nr_sequencia_w,
										cd_cid_p => cd_cid_p,
										nm_usuario_p => nm_usuario_p);
			end if;

            if (coalesce(qt_min_atraso_w, 0) > 0)  then
                dt_resultado_w := dt_resultado_w + (qt_min_atraso_w / 1440);
                CALL lab_gerar_dt_result_atraso(nr_prescricao_p, nr_sequencia_w, dt_resultado_w, nm_usuario_p);
            end if;
            CALL ajustar_prescr_mat_proc(nr_prescricao_p, nr_sequencia_w, cd_perfil_w,null);

        else
            CALL gravar_log_lab(302, 'Erro REP -> Exames de Rotina: Problema ao prescrever o exame '||nr_seq_exame_w||'. Verifique as configuracoes de convenio do exame.', nm_usuario_p);
        end if;
    end;
	end loop;
	close C02;
	end;
elsif (ie_tipo_exame_p = 5) then 
	nr_proc_interno_w	:= nr_sequencia_p;
end if;
 
if (ie_tipo_exame_p <> 4) then 
	begin 
	
	if (coalesce(ie_acm_p,'N') = 'S') then 
		ie_acm_w := 'S';
		ie_agora_w		:= 'N';
		ie_se_necessario_w	:= 'N';

		select	max(cd_intervalo) 
		into STRICT	cd_intervalo_ww 
		from	intervalo_prescricao 
		where	ie_acm = 'S' 
		and 	ie_situacao = 'A' 
		and	cd_intervalo = cd_intervalo_w;

		if (coalesce(cd_intervalo_ww::text, '') = '') then 
		
			cd_intervalo_w	:= Obter_interv_acm_sn_agora_lib(cd_estabelecimento_w, 3, 2, 'P', cd_procedimento_w, cd_intervalo_w, nr_prescricao_p, ie_origem_proced_w, null);
			
			if (coalesce(cd_intervalo_w::text, '') = '') then 
		
				select	max(cd_intervalo) 
				into STRICT	cd_intervalo_agora_w 
				from	intervalo_prescricao 
				where	ie_acm = 'S' 
				and 	ie_situacao = 'A';
	
				if (cd_intervalo_agora_w IS NOT NULL AND cd_intervalo_agora_w::text <> '') then 
					cd_intervalo_w	:= cd_intervalo_agora_w;
				end if;
			
			end if;
		end if;
		dt_prev_execucao_w	:= clock_timestamp();
		ds_horarios_proced_w	:= 'ACM';
	end if;
	
	ds_observacao_final_w := '';
	ds_observ_proc_interno_w := '';
	ds_observacao_w := '';
		
	if (hr_exec_proced_p = 'S') then
		ie_agora_w := 'N';
	end if;
		
	if	coalesce(ie_exec_urgencia_p,'N') = 'S' then	 
		ie_agora_w		:= 'S';
		ie_se_necessario_w	:= 'N';
		ie_acm_w		:= 'N';
	end if;

	if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then 
		SELECT * FROM Obter_Proc_Tab_Interno(nr_proc_interno_w, nr_prescricao_p, nr_atendimento_w, 0, cd_procedimento_w, ie_origem_proced_w, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
		if (ie_gerar_exame_interno_w = 'S') then 
			select	coalesce(max(nr_seq_exame_lab), nr_seq_exame_w)
			into STRICT	nr_seq_exame_w 
			from	proc_interno 
			where	nr_sequencia	= nr_proc_interno_w;
			
			select	max(cd_material_exame) 
			into STRICT	cd_material_exame_w 
			from	material_exame_lab b, 
				exame_lab_material a 
			where	a.nr_seq_material = b.nr_sequencia 
	 and	a.nr_seq_exame 	= nr_seq_exame_w 
	 and	a.ie_situacao	= 'A' 
	 and	ie_prioridade	= 
				(SELECT	min(ie_prioridade) 
				from	exame_lab_material x 
				where	nr_seq_exame	= nr_seq_exame_w 
				and	x.ie_situacao	= 'A');
		end if;
	end if;
 
	begin 
	select	coalesce(cd_setor_exclusivo,cd_setor_exclusivo_w) 
	into STRICT	cd_setor_exclusivo_w 
	from	procedimento 
	where	cd_procedimento		= cd_procedimento_w 
	and	ie_origem_proced	= ie_origem_proced_w;
	exception 
		when others then 
		cd_setor_exclusivo_w := null;
	end;
 
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (ie_Gera_Setor_PrescrProc_w = 'S') and (obter_se_setor_exec(cd_setor_prescr_w, cd_estabelecimento_w, cd_procedimento_w,ie_origem_proced_w, nr_proc_interno_w) = 'S') then 
		cd_setor_exclusivo_w	:= cd_setor_prescr_w;
	end if;
 
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') then 
		cd_setor_exclusivo_w	:= obter_setor_atend_proc(cd_estabelecimento_w, cd_procedimento_w, ie_origem_proced_w, null, cd_setor_atendimento_w,null,nr_proc_interno_w,nr_atendimento_w);
	end if;
 
	if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
		cd_setor_exclusivo_w	:= obter_setor_atend_proc_lab(cd_estabelecimento_w,cd_procedimento_w,ie_origem_proced_w, null,cd_setor_atendimento_w,null,nr_seq_exame_w);
	end if;
 
	begin 
	select	ds_observacao 
	into STRICT	ds_observacao_w 
	from	procedimento_prescricao 
	where	cd_procedimento		= cd_procedimento_w 
	and		ie_origem_proced	= ie_origem_proced_w 
	and		coalesce(ie_somente_alerta,'N') = 'N';
	exception when others then 
		ds_observacao_w := null;
	end;
 
	/* Ivan em 24/08/2007 OS66472 */
 
	begin 
	select	ds_observacao 
	into STRICT	ds_observ_proc_interno_w 
	from	proc_interno 
	where	nr_sequencia	= nr_proc_interno_w;
	exception 
		when others then 
		ds_observ_proc_interno_w := null;
	end;
 
	if (ie_horario_regra_w = 'S') then 
		dt_prev_execucao_w	:= Obter_data_prev_exec(dt_prescricao_w,dt_prev_exec_p,cd_setor_exclusivo_w, nr_prescricao_p, ie_data_prev_w);
	end if;
 
	/* Dalcastagne em 29/07/2008 OS 92844*/
 
	if (ie_horario_prescr_w IS NOT NULL AND ie_horario_prescr_w::text <> '') and (hr_exec_proced_p <> 'S')		then	
		if (ie_horario_prescr_w = '5') then 
			if (cd_funcao_p = 916) then 
				dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_prescricao_w, '2', nm_usuario_p, cd_estabelecimento_w);
			else 
				dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_inicio_prescr_w, '2', nm_usuario_p, cd_estabelecimento_w);
			end if;
		else 
			dt_prev_execucao_w	:= obter_horario_exec_prescr(dt_inicio_prescr_w, ie_horario_prescr_w, nm_usuario_p, cd_estabelecimento_w);
		end if;
	end if;
 
	if (ie_interv_padrao_prescr_w = 'S') then 
		cd_intervalo_w	:= coalesce(obter_param_proced_prescr(cd_procedimento_w, ie_origem_proced_w,cd_setor_atendimento_w,cd_perfil_w,'I',nr_proc_interno_w,nr_seq_exame_w),cd_intervalo_w);
	end if;
 
	cd_intervalo_w		:= coalesce(obter_dados_exame_lab_rep(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'I'), cd_intervalo_w);
	hr_prev_execucao_w	:= obter_dados_exame_lab_rep(cd_perfil_w, cd_especialidade_w, cd_setor_prescr_w, nr_seq_exame_w, cd_estabelecimento_w, 'H');
 
	select	coalesce(max(ie_agora),'N') 
	into STRICT	ie_interv_agora_w 
	from	intervalo_prescricao 
	where	cd_intervalo	= cd_intervalo_w;
 
	if (ie_interv_agora_w = 'S') and (coalesce(ie_considera_agora_w,'S')	= 'S') then 
		dt_prev_execucao_w := dt_prev_exec_agora_w; 				
	end if;
	 
	qt_proc_padrao_w		:= Obter_Param_Prescr_Proc_Int(nr_proc_interno_w,cd_setor_atendimento_w, 'Q', nr_atendimento_w);
	cd_intervalo_padrao_w	:= Obter_Param_Prescr_Proc_Int(nr_proc_interno_w,cd_setor_atendimento_w, 'I', nr_atendimento_w);
	ds_horarios_padrao_w	:= Obter_Param_Prescr_Proc_Int(nr_proc_interno_w,cd_setor_atendimento_w, 'H', nr_atendimento_w);
	 
	if (ie_interv_padrao_prescr_w = 'N') then 
		cd_intervalo_padrao_w :=  null;
	end if;
	 
	select	 max(coalesce(qt_min_intervalo,0)) 
	into STRICT	 qt_min_intervalo_w 
	from	 intervalo_prescricao 
	where	 cd_intervalo = coalesce(cd_intervalo_padrao_w, cd_intervalo_w);
 
	SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, coalesce(cd_intervalo_padrao_w, cd_intervalo_w), coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_prev_execucao_w,dt_prescricao_w), nr_horas_validade_w, cd_procedimento_w, 0, qt_min_intervalo_w, nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w;
 
	ds_horarios_proced_w	:= ds_horarios_proced_w || ds_horarios_proced2_w;	
	 
	if (VarEliminaHorFinalVig_w = 'S') and (ds_horarios_proced_w IS NOT NULL AND ds_horarios_proced_w::text <> '') then 
		ds_horarios_proced_w	:= Eliminar_hor_vigencia_proc(ds_horarios_proced_w, cd_intervalo_w,coalesce(dt_prev_execucao_w,dt_prescricao_w), dt_inicio_prescr_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_prescricao_p,coalesce(ie_agora_w,'N'),dt_prev_execucao_w);
	end if;
 
	if (cd_material_p <> '0') then 
		cd_material_exame_w := cd_material_p;
	end if;
 
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then /* Oraci em 10/10/2007 OS70724 */
 
 
		dt_prev_execucao_w := atualiza_dt_realizacao_exame(nr_seq_exame_w, nr_prescricao_p, dt_prev_execucao_w, dt_prev_execucao_w);

		SELECT * FROM obter_setor_exame_lab(	nr_prescricao_p, nr_seq_exame_w, cd_setor_atual_usuario_w, cd_material_exame_w, null, 'S', cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, coalesce(ie_agora_w,'N'), ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w, dt_prev_execucao_w) INTO STRICT cd_setor_atend_w, cd_setor_col_w, cd_setor_entrega_w, qt_dia_entrega_w, ie_emite_mapa_w, ds_hora_fixa_w, ie_data_resultado_w, qt_min_entrega_w, ie_atualizar_recoleta_w, ie_dia_semana_final_w, ie_forma_atual_dt_result_w, qt_min_atraso_w;

		dt_resultado_w	:= null;
		if (VarAtualDataPrevResult_w = 'S') and (ds_hora_fixa_w IS NOT NULL AND ds_hora_fixa_w::text <> '') then 
 
			select	(trunc(CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END ) + (ds_hora_fixa_w/24)) + qt_dia_entrega_w + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
			into STRICT	dt_resultado_w 
			from	prescr_medica 
			where 	nr_prescricao = nr_prescricao_p;
		else 
			select	CASE WHEN ie_considera_data_prevista_w='S' THEN  coalesce(dt_prev_execucao_w, coalesce(dt_entrada_unidade,dt_prescricao))  ELSE coalesce(dt_entrada_unidade,dt_prescricao) END  + qt_dia_entrega_w  + (CASE WHEN qt_min_entrega_w=0 THEN 0  ELSE qt_min_entrega_w/1440 END ) 
			into STRICT	dt_resultado_w 
			from 	prescr_medica 
			where 	nr_prescricao = nr_prescricao_p;
		end if;

		if (ie_dia_semana_final_w > 0) then  
			ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(dt_resultado_w);
	
			while(ie_dia_semana_upd_w <> ie_dia_semana_final_w) loop 
				dt_resultado_w		:= dt_resultado_w + 1;
				ie_dia_semana_upd_w	:= pkg_date_utils.get_WeekDay(dt_resultado_w);
			end loop;
		end if;
 
		cd_setor_entrega_w	:= trunc((replace(replace(cd_setor_entrega_w,'(',''), ')',''))::numeric );

		if (coalesce(cd_setor_coleta_w::text, '') = '') then 
			cd_setor_coleta_w	:= gerar_setor_exame_lab(cd_setor_col_w);
		end if;
 
		/* Rafael e Bruna em 14/3/8 OS84471 */
 
		if (coalesce(cd_setor_exclusivo_w::text, '') = '') and (cd_setor_atend_w IS NOT NULL AND cd_setor_atend_w::text <> '') and (somente_numero(cd_setor_atend_w) > 0) and (ie_somente_setor_exclusivo_w = 'N') then 
			cd_setor_exclusivo_w	:= gerar_setor_exame_lab(cd_setor_atend_w);
		end if;

		if (coalesce(dt_resultado_w::text, '') = '') then
			dt_resultado_w := Obter_Data_Result_Prescr_Lab(nr_prescricao_p, nr_seq_exame_w, nr_sequencia_p);	
		end if;
 
	end if;
 
	if (ie_verifica_setores_adic_w = 'S')	then 
		begin 
		if (coalesce(nr_proc_interno_w,0) > 0) then 
			begin 
			select	count(*) 
			into STRICT	qt_existe_setores_int_w 
			from	proc_interno_setor 
			where	nr_seq_proc_interno	= nr_proc_interno_w;
			end;
 
			if (qt_existe_setores_int_w > 1) then 
				begin 
				cd_setor_exclusivo_w	:=	null;
				end;
			else 
				cd_setor_exclusivo_w	:= cd_setor_exclusivo_w;
			end if;
		else 
			begin 
			select	coalesce(max(b.cd_setor_exclusivo),0) 
			into STRICT	cd_setor_w 
			from	procedimento b 
			where	b.cd_procedimento	= cd_procedimento_w 
			and	b.ie_origem_proced	= ie_origem_proced_w;
 
			if (cd_setor_w = 0) then 
				begin 
				select	count(*) 
				into STRICT	qt_existe_setores_w 
				from	procedimento_setor_atend 
				where	cd_procedimento 	= cd_procedimento_w 
				and	ie_origem_proced 	= ie_origem_proced_w 
			and	cd_estabelecimento = cd_estabelecimento_w;
				if (qt_existe_setores_w > 1) then 
					cd_setor_exclusivo_w	:=	null;
				elsif (qt_existe_setores_w = 1) then 
					select	max(cd_setor_atendimento) 
					into STRICT	cd_setor_exclusivo_w 
					from	procedimento_setor_atend 
					where	cd_procedimento 	= cd_procedimento_w 
					and	ie_origem_proced 	= ie_origem_proced_w 
					and	cd_estabelecimento = cd_estabelecimento_w;
				else 
					cd_setor_exclusivo_w	:=	null;
				end if;
				end;
			else 
				cd_setor_exclusivo_w	:=	cd_setor_w;
			end if;
			end;
		end if;
		end;
	end if;
 
	/* Rafael em 18/2/8 OS80263 */
 
	ie_gerar_setor_w	:= obter_se_gerar_setor_rotina(cd_estabelecimento_w, cd_funcao_p, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w, nr_seq_exame_w, cd_setor_atendimento_w, nm_usuario_p);
 
	if (ie_gerar_setor_w = 'N') then 
		cd_setor_exclusivo_w := null;
	end if;
	/* Fim Rafael em 18/2/8 OS80263 */
 
 
	if (coalesce(cd_setor_atendimento_p,0) <> 0) then 
		cd_setor_exclusivo_w	:= cd_setor_atendimento_p;
	end if;
 
	/* Rafael em 27/8/8 OS96279 */
 
	if (ie_gerar_setor_entrega_w = 'S') and (ie_gerar_setor_w = 'S') and (coalesce(cd_setor_exclusivo_w::text, '') = '') and (cd_setor_entrega_ww IS NOT NULL AND cd_setor_entrega_ww::text <> '') then 
		cd_setor_exclusivo_w	:= cd_setor_entrega_ww;
	end if;
	/* Fim Rafael em 27/8/8 OS96279 */
 
 
	if (cd_cgc_externo_p IS NOT NULL AND cd_cgc_externo_p::text <> '') then 
		cd_setor_exclusivo_w	:= Obter_setor_Laboratorio_ext(cd_cgc_externo_p);
	end if;
	 
	if (coalesce(ie_agora_w,'N') = 'N') then 
		ie_agora_w := coalesce(obter_se_proc_urgente(cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w, nr_seq_exame_w, ie_tipo_atend_w,'S',cd_perfil_w,cd_medico_proc_urgente_w), 'N');
	end if;
 
	/* Verificar se intervalo agora  -  Hudson OS380015 */
 
	if (ie_agora_w = 'S') then 
		cd_intervalo_w	:= coalesce(Obter_interv_acm_sn_agora_lib(cd_estabelecimento_w, 1, 2, 'P', cd_procedimento_w, cd_intervalo_w, nr_prescricao_p, ie_origem_proced_w, null), cd_intervalo_w);
		dt_prev_execucao_w		:= dt_prev_exec_agora_w;
		ds_horarios_proced_w	:= to_char(dt_prev_exec_agora_w,'hh24:mi');
	end if;
	 
	if (VarEliminaHorFinalVig_w = 'S') and (ds_horarios_padrao_w IS NOT NULL AND ds_horarios_padrao_w::text <> '') then 
		ds_horarios_padrao_w	:= Eliminar_hor_vigencia_proc(ds_horarios_padrao_w, cd_intervalo_w,coalesce(dt_prev_execucao_w,dt_prescricao_w), dt_inicio_prescr_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_prescricao_p,coalesce(ie_agora_w,'N'),dt_prev_execucao_w);
	end if;
 
	nr_doc_convenio_w	:= null;
	SELECT * FROM tiss_obter_guia(4, null, nr_doc_convenio_w, 'N', null, null, null, null, null, ie_guia_w, null, nr_prescricao_p, null, cd_setor_exclusivo_w, null, nr_prescricao_p, null, null, null, null, null, null, cd_procedimento_w, ie_origem_proced_w, null) INTO STRICT nr_doc_convenio_w, ie_guia_w;
 
	if (ie_gerar_horarios_w = 'N') then 
		ds_horarios_proced_w	:= null;
	end if;
 
	ds_observacao_w	:= coalesce(OBTER_DADOS_EXAME_LAB_REP(cd_perfil_w, cd_especialidade_w, cd_setor_exclusivo_w, nr_seq_exame_w, cd_estabelecimento_w, 'O'), ds_observacao_w);
     
	if (ie_hor_proced_interv_w <> 'N') and ((coalesce(cd_intervalo_padrao_w, cd_intervalo_w) IS NOT NULL AND (coalesce(cd_intervalo_padrao_w, cd_intervalo_w))::text <> '')) then 
		select	max(ie_operacao) 
		into STRICT	ie_operacao_w 
		from	intervalo_prescricao 
		where	cd_intervalo	= coalesce(cd_intervalo_padrao_w, cd_intervalo_w);
 
		if	(((ie_hor_proced_interv_w = 'S') and (ie_operacao_w  in ('V','F'))) or (ie_hor_proced_interv_w) = 'I')	then 
 
		dt_prev_execucao_w	:= coalesce(Obter_Horario_Proced_interv(coalesce(cd_intervalo_padrao_w, cd_intervalo_w), nr_prescricao_p, dt_inicio_prescr_w, dt_inicio_prescr_w),dt_prev_execucao_w);
		nr_ocorrencia_proced_w := 0;

		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, coalesce(cd_intervalo_padrao_w,cd_intervalo_w), coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_prev_execucao_w,dt_prescricao_w), nr_horas_validade_w, cd_procedimento_w, 0, qt_min_intervalo_w, nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w;
		ds_horarios_proced_w	:= ds_horarios_proced_w || ds_horarios_proced2_w;
		end if;
	end if;
	 
	if (VarEliminaHorFinalVig_w = 'S') and (ds_horarios_proced_w IS NOT NULL AND ds_horarios_proced_w::text <> '') then 
		ds_horarios_proced_w	:= Eliminar_hor_vigencia_proc(ds_horarios_proced_w, cd_intervalo_w,coalesce(dt_prev_execucao_w,dt_prescricao_w), dt_inicio_prescr_w, qt_hora_intervalo_w, qt_min_intervalo_w, nr_prescricao_p,coalesce(ie_agora_w,'N'),dt_prev_execucao_w);
	end if;
 
	if (coalesce(qt_proc_padrao_w, qt_procedimento_w) = 1) then 
		qt_proc_padrao_w	:= coalesce(Obter_Quantidade_prescr_proced(coalesce(cd_intervalo_padrao_w,cd_intervalo_w),coalesce(ie_lado_w,CD_LADO_w),cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w, nr_atendimento_w),1);
	end if;
 
	if (ds_observacao_p IS NOT NULL AND ds_observacao_p::text <> '') then 
		ds_observacao_w	:= substr(ds_observacao_p || '   ' || ds_observacao_w,1,2000);
	end if;
 
	select	max(ds_orientacao_usuario) 
	into STRICT	ds_orientacao_usuario_w 
	from	exame_laboratorio 
	where	nr_seq_exame	= nr_seq_exame_w;
 
	if (ds_orientacao_usuario_w IS NOT NULL AND ds_orientacao_usuario_w::text <> '') and (ie_obs_laboratorio_w = 'S') then 
		ds_observacao_w	:= substr(ds_orientacao_usuario_w || '   ' || ds_observacao_w,1,2000);
	end if;
 
	cd_pessoa_coleta_w	:= null;
	dt_coleta_w			:= null;
	qt_peca_ap_w		:= null;
	 
	if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then 
		ie_tipo_proced_w	:= Obter_tipo_proc_interno(nr_proc_interno_w);
 
		if (ie_tipo_proced_w in ('AP','APH','APC')) then 
			cd_pessoa_coleta_w	:= Obter_Pessoa_Fisica_Usuario(nm_usuario_p,'C');
			dt_coleta_w		:= clock_timestamp();
			qt_peca_ap_w		:= 1;
		end if;
	end if;
	
	if (coalesce(nr_seq_prot_glic_w,0)  = 0) then
		select	max(nr_seq_prot_glic)
		into STRICT	nr_seq_prot_glic_w
		from 	proc_interno
		where	nr_sequencia = nr_proc_interno_w;
	
	end if;	

	ie_cig_w	:= obter_ctrl_glic_proc(nr_proc_interno_w);
	 
	if (ie_cig_w 		= 'CIG') then 
		ds_horarios_padrao_w	:= to_char(dt_prev_execucao_w,'hh24:mi');
	elsif (ie_cig_w		= 'CCG') and (coalesce(nr_seq_prot_glic_w::text, '') = '') then 
		cd_intervalo_w		:= '';
		ds_horarios_proced_w	:= '';
	end if;

	if (coalesce(ie_seleciou_horario_rotina_p,'N') = 'S') and (ie_tipo_exame_p in ('1','0')) then 
		dt_prev_execucao_w := dt_prev_exec_p;
		nr_ocorrencia_proced_w := 0;
		SELECT * FROM Calcular_Horario_Prescricao(nr_prescricao_p, coalesce(cd_intervalo_padrao_w,cd_intervalo_w), coalesce(dt_primeiro_horario_w,dt_prescricao_w), coalesce(dt_prev_execucao_w,dt_prescricao_w), nr_horas_validade_w, cd_procedimento_w, 0, qt_min_intervalo_w, nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w, 'N', null, null, cd_procedimento_w, ie_origem_proced_w, nr_proc_interno_w) INTO STRICT nr_ocorrencia_proced_w, ds_horarios_proced_w, ds_horarios_proced2_w;
		ds_horarios_proced_w	:= ds_horarios_proced_w || ds_horarios_proced2_w;
	end if;
 
	ie_acm_sn_w := obter_info_proced(cd_setor_atendimento_p,cd_procedimento_w);
	if (ie_acm_sn_w = 'N') or (ie_se_necessario_w = 'S') then 
		ie_se_necessario_w := 'S';
		ds_horarios_padrao_w := 'SN';
	elsif (ie_acm_sn_w = 'A') or (ie_acm_w = 'S') then 
		ie_acm_w := 'S';
		ds_horarios_padrao_w := 'ACM';
	end if;
	 
	if (ie_setor_classif_w = 'S') and (cd_classif_setor_w = 1) then 
		ie_avisa_result_w := 'S';
	end if;
 
	if (ie_marca_campo_w = 'S') then 

		ie_agora_acm_sn_w	:= obter_se_interv_agora_acm_sn(coalesce(cd_intervalo_padrao_w, cd_intervalo_w));

		if (ie_agora_acm_sn_w = 'AGORA') and (hr_exec_proced_p <> 'S') then
			ie_agora_w		:= 'S';
			ie_acm_w		:= 'N';
			ie_se_necessario_w	:= 'N';
			ds_horarios_padrao_w	:= to_char(clock_timestamp(),'hh24:mi');
		elsif (ie_agora_acm_sn_w = 'ACM') then 
			ie_agora_w		:= 'N';
			ie_acm_w		:= 'S';
			ie_se_necessario_w	:= 'N';
			ds_horarios_padrao_w	:= 'ACM';
		elsif	(ie_agora_acm_sn_w = 'SN' AND ie_check_sn_w = 'S') then 
			ie_agora_w		:= 'N';
			ie_acm_w		:= 'N';
			ie_se_necessario_w	:= 'S';
			ds_horarios_padrao_w	:= 'SN';		
		end if;	

	end if;
	 
	if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then 
		ds_observacao_final_w	:= substr(ds_observacao_w,1,2000);
	end if;
	 
	if (ds_observ_proc_interno_w IS NOT NULL AND ds_observ_proc_interno_w::text <> '') then 
		ds_observacao_final_w	:= substr(ds_observacao_final_w || ' '  || ds_observ_proc_interno_w,1,2000);
	end if;
	 
	if ((coalesce(ds_observacao_nao_lab_w,ds_observacao_lab_w) IS NOT NULL AND (coalesce(ds_observacao_nao_lab_w,ds_observacao_lab_w))::text <> '')) then 
		ds_observacao_final_w	:= substr(ds_observacao_final_w || ' ' || coalesce(ds_observacao_nao_lab_w,ds_observacao_lab_w),1,2000);
	end if;
	 
	if (ie_gravar_indic_w = 'S') and (ds_indicacao_w IS NOT NULL AND ds_indicacao_w::text <> '') then 
		ds_observacao_final_w	:= substr(ds_observacao_final_w || ' ' || ds_indicacao_w,1,2000);
	end if;
	 
	if (coalesce(ie_lado_w,CD_LADO_w) = 'A') and (somente_numero(qt_proced_ambos_w) > coalesce(qt_proc_padrao_w, qt_procedimento_w)) then 
		qt_proc_padrao_w	:= somente_numero(qt_proced_ambos_w);
	end if;
	 
	if (cd_medico_exec_examLab_w IS NOT NULL AND cd_medico_exec_examLab_w::text <> '') then 
  	    cd_medico_exec_w := cd_medico_exec_examLab_w;
	else  
	    select	coalesce(max(a.cd_medico_exec),cd_medico_exec_p) 
	    into STRICT	cd_medico_exec_w 
	    from	proc_interno a 
	    where	a.nr_sequencia = nr_proc_interno_w 
	    and		a.cd_procedimento = Obter_procedimento_proc_int(nr_proc_interno_w);
	end if;
	 
	if (coalesce(cd_medico_exec_w::text, '') = '') then 
		cd_medico_exec_w	:= obter_medico_exec_proc(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w);
	end if;	
	 
	if (ie_utiliza_regra_medico_w = 'S') then 
		SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_exclusivo_w, cd_procedimento_w, ie_origem_proced_w, Obter_Tipo_Atendimento(nr_atendimento_w), nr_seq_exame_w, nr_proc_interno_w, ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w, '', coalesce(dt_prev_execucao_w,dt_prescricao_w), Obter_Classificacao_Atend(nr_atendimento_w,'C'), 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_w, cd_medico_executor_w, cd_pessoa_fisica_w;
	
		if (ie_medico_executor_w = 'F') then 
			cd_medico_exec_w:= coalesce(cd_medico_exec_w,cd_medico_executor_w);
		end if;	
	end if;
	 
	if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (ie_vinc_seq_agend_w = 'S')then 
		select	max(a.cd_pessoa_fisica) 
		into STRICT	cd_pessoa_fis_agenda_w 
		from	atendimento_paciente a 
		where	a.nr_atendimento	= nr_atendimento_w;

		nr_seq_agenda_serv_w 
						 := Age_obt_regra_vinc_proc_rep(dt_prescricao_w, cd_pessoa_fis_agenda_w, cd_estabelecimento_w, nr_proc_interno_w, nm_usuario_p, nr_seq_agenda_serv_w 
						);	
	end if;	
	
	if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') then 
	
		ie_permite_w := valida_exame_dia_semana(nr_seq_exame_w, cd_material_exame_w, coalesce(dt_prev_execucao_w,dt_prescricao_w), nm_usuario_p, cd_estabelecimento_w, ie_permite_w);

		if (ie_permite_w = 'N')	then 
        begin
			select	substr(a.ds_prescricao,1,80) 
			into STRICT	ds_exame_dia_p 
			from	exame_lab_rotina a 
			where	a.nr_seq_exame		= nr_seq_exame_w    
			and	a.nr_sequencia		= nr_sequencia_p;
            exception when no_data_found then
                select    substr(a.nm_exame,1,80)
                into STRICT    ds_exame_dia_p
                from    exame_laboratorio a
                where    a.nr_seq_exame = nr_seq_exame_w;
            end;
		end if;

		if (ie_consiste_duplic_w = 'L') then 
	
			ds_erro_w	:= Verifica_exame_duplic_dia(nr_seq_exame_w, cd_procedimento_w, coalesce(dt_prev_execucao_w,dt_prescricao_w), nr_atendimento_w, null, null);
	
			if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then 
				-- 219321: #@DS_MENSAGEM#@ 

                -- 219312: O exame #@DS_EXAME#@ ja foi prescrito neste dia para paciente
				CALL Wheb_mensagem_pck.exibir_mensagem_abort(219321,'DS_MENSAGEM='||ds_erro_w);
			end if;
		end if;

	end if;
 
	if (coalesce(ie_data_prescricao_w,'N') <> 'N') and (coalesce(ie_agora_w,'N') = 'S') then 
		if (coalesce(ie_data_prescricao_w,'N') = 'I') then 
			dt_prev_execucao_w := dt_inicio_prescr_w;
		else 
			dt_prev_execucao_w := dt_prescricao_w;
		end if;
		ds_horarios_padrao_w := to_char(dt_prev_execucao_w,'hh24:mi');
	elsif (coalesce(ie_agora_w,'N') = 'S') then 
		ds_horarios_padrao_w := to_char(clock_timestamp(),'hh24:mi');
	end if;
	 
	if (hr_prev_execucao_w IS NOT NULL AND hr_prev_execucao_w::text <> '') and (coalesce(ie_agora_w,'N') = 'N')	then 

		dt_prev_execucao_w	:= to_date(to_char(dt_prev_execucao_w,'dd/mm/yyyy ') || hr_prev_execucao_w,'dd/mm/yyyy hh24:mi');
		if (dt_prev_execucao_w < dt_prescricao_w) then
			dt_prev_execucao_w := dt_prev_execucao_w + 1;
		elsif (dt_prev_execucao_w > dt_validade_prescr_w) then 
			dt_prev_execucao_w := dt_prescricao_w;
		end if;
		ds_horarios_padrao_w	:= to_char(dt_prev_execucao_w,'hh24:mi');
	end if;
	 
	if (ie_permite_w = 'S') and (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '')	then
		select	max(b.cd_material_exame) 
		into STRICT	cd_material_exame_w 
		from	material_exame_lab b, 
			exame_lab_material a 
		where	a.nr_seq_material	= b.nr_sequencia 
		and	a.nr_seq_exame		= nr_seq_exame_w 
		and	a.ie_situacao		= 'A' 
		and	b.cd_material_exame	= cd_material_exame_w;
 
		if (coalesce(cd_medico_exec_w::text, '') = '') and (VarParam998_w = 'S') then 
			cd_medico_exec_w	:= obter_pessoa_fisica_usuario(nm_usuario_p,'C');
		end if;

		if (dt_prev_execucao_w < dt_prescricao_w) then	
			dt_prev_execucao_w := trunc((dt_prev_execucao_w + 1/1440),'mi');				
		end if;

		if (ie_data_prescricao_ww = 'SA') and (dt_prescricao_w IS NOT NULL AND dt_prescricao_w::text <> '') and (dt_prev_execucao_w <> dt_prescricao_w) then 
			dt_prev_execucao_w := dt_prescricao_w;
		end if;

		if (ie_data_prescricao_ww = 'SA') and (dt_prescricao_w IS NOT NULL AND dt_prescricao_w::text <> '') and (to_char(dt_prev_execucao_w,'dd/mm/yyyy hh24:mi:ss') <> to_char(dt_prescricao_w,'dd/mm/yyyy hh24:mi:ss')) then 
			dt_prev_execucao_w := dt_prescricao_w;
		end if;
		

	
		if (cd_funcao_p = 916) then
			
			SELECT * FROM consiste_plano_convenio(nr_atendimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), coalesce(qt_proc_padrao_w, qt_procedimento_w), ie_tipo_atendimento_w, cd_plano_convenio_w, '', ds_erro_autorizacao_w, cd_setor_exclusivo_w, nr_seq_exame_w, ie_regra_w, null, nr_seq_regra_w, nr_proc_interno_w, cd_categoria_w, cd_estabelecimento_w, cd_setor_entrega_w, cd_medico_exec_w, cd_pessoa_fisica_prescr_w, ie_glosa_w, nr_seq_regra_ajuste_w, nr_prescricao_p, null) INTO STRICT ds_erro_autorizacao_w, ie_regra_w, nr_seq_regra_w, ie_glosa_w, nr_seq_regra_ajuste_w;
			
			if (ie_regra_w in (1,2) or (vl_parametro1209_w = 'S' and ie_regra_w in (5,8))) then
				ie_autorizacao_w := 'B';
			elsif (ie_regra_w in (3,6,7)) then
				ie_autorizacao_w := 'PA';
			end if;
		end if;

		if (coalesce(ie_agora_w,'N') = 'S') then
			if (ds_horarios_padrao_w not in ('ACM', 'SN')) then
				if (to_char(to_date(ds_horarios_padrao_w, 'hh24:mi'), 'hh24:mi') < to_char(dt_prev_execucao_w, 'hh24:mi')) then
					ds_horarios_padrao_w := to_char(dt_prev_execucao_w, 'hh24:mi');
				end if;
			end if;	
		end if;	

		insert into prescr_procedimento(
						nr_prescricao,  
						nr_sequencia,  
						cd_procedimento,  
						qt_procedimento,  
						dt_atualizacao, 
						nm_usuario, 
						cd_motivo_baixa,  
						ie_origem_proced,  
						cd_intervalo, 
						ie_urgencia,  
						ie_suspenso,  
						cd_setor_atendimento,  
						dt_prev_execucao, 
						cd_material_exame,  
						nr_seq_exame,  
						ie_status_atend,  
						ie_origem_inf, 
						ie_amostra,  
						ds_dado_clinico,  
						ie_executar_leito,  
						ds_rotina,  
						ie_se_necessario,  
						ie_acm, 
						DS_MATERIAL_ESPECIAL,  
						ds_horarios,  
						nr_ocorrencia,  
						ds_observacao,  
						nr_seq_interno, 
						nr_seq_proc_interno,  
						ie_avisar_result,  
						ds_resumo_clinico,  
						ds_exame_fis_achado_cirur, 
						cd_medico_exec, 
						ie_lado,  
						cd_setor_coleta,  
						cd_setor_entrega,  
						nr_seq_prot_glic,  
						qt_min_intervalo, 
						nr_seq_topografia,  
						dt_resultado,  
						nr_doc_convenio, 
						cd_pessoa_coleta, 
						dt_coleta, 
						qt_peca_ap, 
						nr_seq_contraste,  
						ds_justificativa,  
						ie_aprovacao_execucao,  
						nr_seq_condicao,  
						nr_seq_rotina,  
						cd_cgc_laboratorio,  
						ie_anestesia,  
						ie_forma_exame, 
						nr_seq_agenda_cons, 
						ie_autorizacao, 
						nr_agrupamento,
						ie_exame_bloqueado) 
					values (	 
						nr_prescricao_p,  
						nr_sequencia_w,  
						cd_procedimento_w,  
						coalesce(qt_proc_padrao_w, qt_procedimento_w),  
						clock_timestamp(), 
						nm_usuario_p,  
						0,  
						ie_origem_proced_w,  
						coalesce(cd_intervalo_padrao_w, cd_intervalo_w), 
						coalesce(ie_agora_w,'N'), 
						'N',  
						cd_setor_exclusivo_w,  
						coalesce(dt_prev_execucao_w,dt_prescricao_w), 
						cd_material_exame_w,  
						nr_seq_exame_w,  
						5,  
						'1',  
						coalesce(ie_amostra_w, 'N'),  
						substr(ds_dado_clinico_w,1,2000),  
						CASE WHEN ie_beira_leito_p='S' THEN ie_beira_leito_p  ELSE coalesce(ie_executar_leito_w,'N') END ,  
						substr(ds_rotina_w,1,80), 
						coalesce(ie_se_necessario_w,'N'), 
						coalesce(ie_acm_w,'N'), 
						substr(coalesce(ds_material_especial_p,ds_material_esp_w),1,255),  
						substr(coalesce(ds_horarios_padrao_w, ds_horarios_proced_w),1,2000),  
						nr_ocorrencia_proced_w, 
						substr(ds_observacao_final_w,1,2000),  
						nextval('prescr_procedimento_seq'), 
						nr_proc_interno_w, 
						coalesce(ie_avisa_result_w,'N'),  
						substr(coalesce(ds_resumo_clinico_p,ds_resumo_clinico_w),1,2000),  
						substr(ds_exame_fisico_p,1,2000),  
						cd_medico_exec_w, 
						coalesce(ie_lado_w,CD_LADO_w),  
						cd_setor_coleta_w,  
						cd_setor_entrega_w,  
						nr_seq_prot_glic_w,  
						CASE WHEN qt_min_intervalo_w=0 THEN null  ELSE qt_min_intervalo_w END , 
						nr_seq_topografia_ww,  
						dt_resultado_w,  
						nr_doc_convenio_w, 
						cd_pessoa_coleta_w, 
						dt_coleta_w, 
						qt_peca_ap_w, 
						coalesce(nr_seq_contraste_p,nr_seq_contraste_w),  
						substr(coalesce(ds_justificativa_p,ds_justificativa_w),1,4000),  
						CASE WHEN ie_exige_aprovacao_w='S' THEN 'N'  ELSE 'S' END ,  
						nr_seq_condicao_p,  
						nr_sequencia_p,  
						cd_cgc_externo_p,  
						coalesce(ie_anestesia_p,'N'),  
						ie_forma_exame_p, 
						nr_seq_agenda_serv_w, 
						ie_autorizacao_w, --'L', 
						nr_agrupamento_w,
						'N');
		commit;
  
		if (nr_seq_exame_w IS NOT NULL AND nr_seq_exame_w::text <> '') and (cd_material_exame_w IS NOT NULL AND cd_material_exame_w::text <> '') then
			
			CALL gerar_exame_lab_dependente(nr_prescricao_p, nr_sequencia_w, 10, nr_atendimento_w, nm_usuario_p, nr_seq_exame_w, null, null);
			
		end if;

		if (ie_proc_sem_dt_prev_w = 'D') then 
			ie_gerar_proc_sem_dt_prev_w := obter_se_data_prev_exec_proc(cd_procedimento_w,ie_origem_proced_w,nr_proc_interno_w,nr_seq_exame_w);
		end if;
 
		if	((ie_proc_sem_dt_prev_w = 'S') or (ie_gerar_proc_sem_dt_prev_w = 'S')) then 
			update	prescr_procedimento 
			set	dt_prev_execucao	 = NULL, 
				ds_horarios		 = NULL 
			where	nr_sequencia		= nr_sequencia_w 
			and	nr_prescricao 		= nr_prescricao_p 
			and	coalesce(nr_seq_exame::text, '') = '';
		end if;

		if (coalesce(ds_exames_dep_p,'0') <> '0') then 
			ds_exames_dep_w	:= ds_exames_dep_p;
			while(ds_exames_dep_w IS NOT NULL AND ds_exames_dep_w::text <> '') loop 
				tam_lista_3w	:= length(ds_exames_dep_w);
				ie_pos_hifen_w		:= position('-' in ds_exames_dep_w);
				ie_pos_virgula_3w	:= position(',' in ds_exames_dep_w);

			if (ie_pos_hifen_w <> 0 AND ie_pos_hifen_w < ie_pos_virgula_3w)	then				
				qt_proced_depend_w := (substr(ds_exames_dep_w,ie_pos_hifen_w + 1,(ie_pos_virgula_3w - ie_pos_hifen_w)))::numeric;
				nr_seq_exame_ww	   := (substr(ds_exames_dep_w,1,(ie_pos_hifen_w - 1)))::numeric;
				ds_exames_dep_w	   := substr(ds_exames_dep_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
			elsif (ie_pos_virgula_3w <> 0) then
				nr_seq_exame_ww	   := (substr(ds_exames_dep_w,1,(ie_pos_virgula_3w - 1)))::numeric;
				ds_exames_dep_w	   := substr(ds_exames_dep_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
				qt_proced_depend_w := null;	
			else
				nr_seq_exame_ww	   := (ds_exames_dep_w)::numeric;
				ds_exames_dep_w	   := null;
			end if;

			if (nr_seq_exame_ww > 0) then 

				CALL Gerar_Exame_Lab_Dependente(nr_prescricao_p,nr_sequencia_w,7,nr_atendimento_w,nm_usuario_p,nr_seq_exame_ww,null,qt_proced_depend_w);
			end if;
			end loop;
		end if;	

		if (coalesce(ds_lista_kit_proced_p,'0') <> '0') then 
			ds_lista_kit_proced_w	:= ds_lista_kit_proced_p;
			while(ds_lista_kit_proced_w IS NOT NULL AND ds_lista_kit_proced_w::text <> '') loop 
				tam_lista_3w	:= length(ds_lista_kit_proced_w);
				ie_pos_virgula_3w	:= position(',' in ds_lista_kit_proced_w);

			if (ie_pos_virgula_3w <> 0) then 
				cd_kit_w		:= (substr(ds_lista_kit_proced_w,1,(ie_pos_virgula_3w - 1)))::numeric;
				ds_lista_kit_proced_w	:= substr(ds_lista_kit_proced_w,(ie_pos_virgula_3w + 1),tam_lista_3w);
			else 
				cd_kit_w		:= (ds_lista_kit_proced_w)::numeric;
				ds_lista_kit_proced_w	:= null;
			end if;

			if (cd_kit_w > 0) then 
				CALL Gerar_kit_proced_manual(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, cd_kit_w, nm_usuario_p);
			end if;
			end loop;
		elsif (ie_kit_automatico_w = 'S') then 
			if (cd_kit_material_w IS NOT NULL AND cd_kit_material_w::text <> '') then 
				CALL Gerar_kit_proced_manual(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, cd_kit_material_w, nm_usuario_p);
			else 
				CALL gerar_kit_procedimento(cd_estabelecimento_w, nr_prescricao_p, nr_sequencia_w, nm_usuario_p);
			end if;
		end if;

		nr_seq_prescr_p	:= nr_sequencia_w || ',' ||nr_seq_prescr_p;

		CALL gerar_prescr_proc_glic(nr_prescricao_p, nr_sequencia_w, nr_seq_prot_glic_w, nm_usuario_p);
		if (ie_gerar_assoc_proc_w = 'S') then 
			CALL Gerar_med_mat_assoc(nr_prescricao_p,nr_sequencia_w);
		end if;
		CALL Gerar_prescr_proc_assoc(nr_prescricao_p,nr_sequencia_w, nm_usuario_p);

		if (nr_seq_contraste_p IS NOT NULL AND nr_seq_contraste_p::text <> '') then 
			select	coalesce(max(c.ie_itens_associados),'N') 
			into STRICT	ie_lancar_contrastes_w 
			from	proc_int_mat_contraste a, 
				proc_interno_contraste c, 
				prescr_procedimento p, 
				prescr_medica x 
			where	x.nr_prescricao			= p.nr_prescricao 
			and	c.nr_seq_proc_interno		= p.nr_seq_proc_interno 
			and	a.nr_seq_contraste		= c.nr_sequencia 
			and	p.nr_prescricao			= nr_prescricao_p 
			and	p.nr_sequencia			= nr_sequencia_w  
			and	a.nr_seq_contraste		= nr_seq_contraste_p 
			order by 1;

			if (ie_lancar_contrastes_w = 'S') then 
				CALL Gerar_Med_Mat_Assoc_contraste(nr_prescricao_p,nr_sequencia_w ,nr_seq_contraste_p);
			end if;
		end if;

		ds_erro_w := consistir_prescr_procedimento(nr_prescricao_p, nr_sequencia_w, nm_usuario_p, cd_perfil_w, ds_erro_w);

		if (ie_prescr_proc_sem_lib_w = 'S') then 
			CALL Gerar_prescr_proc_sem_dt_lib(nr_prescricao_p,nr_Sequencia_w,cd_perfil_w,'N',nm_usuario_p);
		end if;

		if (nr_proc_interno_w IS NOT NULL AND nr_proc_interno_w::text <> '') then 
				begin 
				select	coalesce(max(ie_excluir_proc_princ),'N') 
				into STRICT	ie_excluir_proc_princ_w 
				from	proc_interno 
				where	nr_sequencia = nr_proc_interno_w;

				if (ie_excluir_proc_princ_w = 'S') then 
					select	max(nr_seq_interno) 
					into STRICT	nr_seq_interno_w 
					from	prescr_procedimento 
					where	nr_prescricao	= nr_prescricao_p 
					and		nr_sequencia		= nr_sequencia_w;

					select	count(*) 
					into STRICT	qt_w 
					from	prescr_Procedimento where		nr_prescricao	= nr_prescricao_p 
					and		nr_seq_proc_excl = nr_seq_interno_w LIMIT 1;

					if (qt_w > 0) then 
						delete 
						from	prescr_procedimento 
						where	nr_prescricao	= nr_prescricao_p 
						and		nr_sequencia	= nr_sequencia_w;
					end if;
				end if;
				end;
			end if;

		if	((ie_regra_lanc_aut_w = 'S') or (ie_regra_lanc_aut_w = 'E')) then 
			CALL Gerar_lancto_aut_prescr_proc(nr_prescricao_p, nr_sequencia_w, 151, nm_usuario_p, cd_procedimento_w, ie_origem_proced_w, 0, nr_seq_exame_w, ie_regra_lanc_aut_w);
		end if;

		if (nr_seq_prot_glic_w > 0) then 
			CALL Gerar_Med_Mat_Assoc_Glic(nr_prescricao_p, nr_sequencia_w, nr_seq_prot_glic_w);
		end if;

		if (cd_cid_p IS NOT NULL AND cd_cid_p::text <> '') then 
			CALL gerar_cid_procedimento(nr_prescricao_p, nr_sequencia_w, cd_cid_p, nm_usuario_p);
		end if;

		if (coalesce(qt_min_atraso_w, 0) > 0)  then
			dt_resultado_w := dt_resultado_w + (qt_min_atraso_w / 1440);
			CALL lab_gerar_dt_result_atraso(nr_prescricao_p, nr_sequencia_w, dt_resultado_w, nm_usuario_p);
		end if;
        CALL ajustar_prescr_mat_proc(nr_prescricao_p, nr_sequencia_w, cd_perfil_w,null);

	end if;
	end;
end if;
delete FROM w_rotina_interv;

if (ds_log_dt_prev_execucao_w IS NOT NULL AND ds_log_dt_prev_execucao_w::text <> '' AND ie_log_dt_prev_execucao_w = 'S') then
	CALL gerar_log_prescricao(nr_prescricao_p, null, null, null, null, 'Rastreabilidade DT_PREV_EXECUCAO NR_SEQ_PROCEDIMENTO('||nr_sequencia_w||')'||ds_log_dt_prev_execucao_w, wheb_usuario_pck.get_nm_usuario, 889, 'N');
end if;

COMMIT;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_exame_rotina_prescricao ( nr_prescricao_p bigint, nr_sequencia_p bigint, ie_tipo_exame_p bigint, dt_prev_exec_p timestamp, cd_intervalo_p text, ds_dado_clinico_p text, ds_resumo_clinico_p text, ds_exame_fisico_p text, cd_cid_p text, nm_usuario_p text, cd_material_p text, cd_medico_exec_p text, qt_procedimento_p bigint, ie_lado_p text, nr_seq_topografia_p bigint, nr_seq_prot_glic_p text, cd_funcao_p bigint, cd_setor_atendimento_p bigint, ds_observacao_p text, ie_beira_leito_p text, ie_seleciou_horario_rotina_p text, ds_lista_proced_p text, nr_seq_prescr_p INOUT text, hr_exec_proced_p text, ds_justificativa_p text, ie_exec_urgencia_p text, nr_seq_condicao_p bigint, cd_cgc_externo_p text, ds_material_especial_p text, ds_lista_mat_proced_p text, ie_anestesia_p text, ie_forma_exame_p text, cd_procedimento_p bigint, nr_seq_proc_interno_p bigint, ie_origem_proced_p text, ds_lista_kit_proced_p text, nr_seq_exame_p bigint, ds_exame_dia_p INOUT text, nr_seq_contraste_p bigint, ds_exames_dep_p text, nr_seq_rotina_p bigint, ie_acm_p text default 'N', cd_material_rotina_p text DEFAULT NULL) FROM PUBLIC;

