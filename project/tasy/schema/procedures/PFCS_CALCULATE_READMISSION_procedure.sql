-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pfcs_calculate_readmission ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) AS $body$
DECLARE


c01_tasy CURSOR(qt_time_readmitted_rule_w pfcs_general_rule.qt_time_readmitted_rule%type) FOR
	SELECT  pa.cd_pessoa_fisica id_patient,
        coalesce(get_formatted_person_name(pa.cd_pessoa_fisica, 'list'), obter_nome_pf(pa.cd_pessoa_fisica)) nm_patient,
        pfcs_obter_lista_dados_classif(pa.cd_pessoa_fisica) ds_classification,
        obter_sexo_pf(pa.cd_pessoa_fisica, 'D') ds_gender,
        pf.dt_nascimento dt_birthdate,
        obter_dados_pf(pa.cd_pessoa_fisica, 'I') qt_idade_paciente,
        pa.nr_atendimento nr_current_encounter,
        pa.dt_entrada dt_current_entry_date,
        sa.cd_setor_atendimento cd_current_department,
        sa.ds_setor_atendimento ds_current_department,
        pu.dt_entrada_unidade dt_entry_unit,
        ua.cd_unidade_basica || ' ' || ua.cd_unidade_compl ds_location,
        substr(obter_valor_dominio(82, ua.ie_status_unidade),1,255) ds_status,
        ua.ie_status_unidade ie_status,
        pb.nr_atendimento nr_last_encounter,
        pb.dt_alta dt_last_discharge
  from  atendimento_paciente pa,
    atend_paciente_unidade pu,
    unidade_atendimento ua,
    setor_atendimento sa,
    pessoa_fisica pf,
    atendimento_paciente pb,
    setor_atendimento sb
  where  pa.cd_estabelecimento = (cd_estabelecimento_p)::numeric
      and  coalesce(pa.dt_alta::text, '') = ''
      and  coalesce(pa.dt_cancelamento::text, '') = ''
      and  pu.cd_setor_atendimento = sa.cd_setor_atendimento
      and  sa.ie_ocup_hospitalar <> 'N'
      and  sa.ie_situacao = 'A'
      and  pa.cd_pessoa_fisica = pf.cd_pessoa_fisica
      and  pu.nr_seq_interno = obter_atepacu_paciente(pa.nr_atendimento,'A')
      and  pu.nr_atendimento = pa.nr_atendimento
      and  ua.cd_setor_atendimento = pu.cd_setor_atendimento
      and  ua.cd_unidade_basica = pu.cd_unidade_basica
      and  ua.cd_unidade_compl = pu.cd_unidade_compl
      and  ua.ie_situacao = 'A'
      and  pa.cd_pessoa_fisica = pb.cd_pessoa_fisica
      and  pb.dt_entrada < pa.dt_entrada
      and  pb.dt_alta <= pa.dt_entrada
      and (trunc(pa.dt_entrada) - trunc(pb.dt_alta)) <=  qt_time_readmitted_rule_w
      and  coalesce(pb.dt_cancelamento::text, '') = ''
      and  (pb.dt_alta IS NOT NULL AND pb.dt_alta::text <> '')
      and  pu.cd_setor_atendimento = sb.cd_setor_atendimento 
      and  sb.cd_classif_setor in ('1','3','4','9','11','12')
      and  sb.ie_ocup_hospitalar <> 'N';
	
c01_fhir CURSOR(qt_time_readmitted_rule_w pfcs_general_rule.qt_time_readmitted_rule%type) FOR
    SELECT 
        pat.patient_id id_patient,
        pfcs_get_human_name(pat.nr_sequencia, 'Patient') nm_patient,
        enc.ds_classification ds_classification,
        pat.gender ds_gender,
        pat.birthdate dt_birthdate,
        trunc(months_between(coalesce(pat.deceased_date, clock_timestamp()), pat.birthdate)/12) qt_idade_paciente,	
        enc.id_encounter nr_current_encounter,
        enc.period_start dt_current_entry_date,
        sec.cd_setor_atendimento cd_current_department,
        sec.ds_setor_atendimento ds_current_department,
        uni.dt_entrada_unidade dt_entry_unit,
        uni.cd_unidade_basica || ' ' || uni.cd_unidade_compl ds_location,
        substr(obter_valor_dominio(82, uni.ie_status_unidade),1,255) ds_status,
        uni.ie_status_unidade ie_status,
        enc_ant.id_encounter nr_last_encounter,
        enc_ant.period_end dt_last_discharge
    from 
        pfcs_encounter enc,	
        pfcs_service_request ser,
        pfcs_patient pat,
        setor_atendimento	sec,
        pfcs_encounter enc_ant,
        unidade_atendimento	uni	
    where     
        enc.nr_seq_patient = pat.nr_sequencia
        and ser.nr_seq_encounter = enc.nr_sequencia
        and sec.cd_setor_atendimento = uni.cd_setor_atendimento
        and enc_ant.nr_seq_patient = enc.nr_seq_patient
        and ser.nr_seq_location = uni.nr_seq_location        
        and (ser.cd_service = 'E0402' or (ser.cd_service = 'E0401' and ser.si_status = 'COMPLETED' and ser.si_intent = 'ORDER'))       
        and sec.ie_situacao = 'A'
        and	uni.ie_situacao = 'A'  
        and	sec.cd_classif_setor in ('1','3','4','9','11','12')
        and (trunc(enc.period_start) - trunc(enc_ant.period_end)) <=  qt_time_readmitted_rule_w
        and	sec.cd_estabelecimento = cd_estabelecimento_p
        and (enc.period_start IS NOT NULL AND enc.period_start::text <> '')
        and coalesce(enc.period_end::text, '') = ''
        and (enc_ant.period_end IS NOT NULL AND enc_ant.period_end::text <> '')	
        and enc_ant.period_end <= enc.period_start;

nr_seq_operational_level_w		pfcs_operational_level.nr_sequencia%type;
pfcs_panel_detail_seq_w			pfcs_panel_detail.nr_sequencia%type;
nr_seq_panel_w					pfcs_panel_detail.nr_seq_panel%type;
qt_time_readmitted_rule_w		pfcs_general_rule.qt_time_readmitted_rule%type;
qt_exists_w						bigint := 0;
qt_total_w						bigint := 0;
pfcs_flag_settings_w			pfcs_general_rule.ie_table_origin%type;
BEGIN

	nr_seq_operational_level_w := pfcs_get_structure_level(
									cd_establishment_p => cd_estabelecimento_p,
									ie_level_p => 'O',
									ie_info_p => 'C');

	select qt_time_readmitted_rule
	into STRICT qt_time_readmitted_rule_w
	from pfcs_general_rule LIMIT 1;
	
	select ie_table_origin
	into STRICT pfcs_flag_settings_w
	from pfcs_general_rule;
	
	if (pfcs_flag_settings_w = 0 or pfcs_flag_settings_w = 2) then

		for c01_w in c01_tasy(qt_time_readmitted_rule_w) loop
		begin	

			qt_total_w := qt_total_w + 1;

			select 	nextval('pfcs_panel_detail_seq')
			into STRICT 	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			insert into pfcs_detail_patient(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				id_patient,
				nm_patient,
				ds_classification,
				ds_gender,
				dt_birthdate,
				ds_age_range,
				nr_encounter_varchar,
				dt_entrance,
				nr_last_encounter_varchar,
				dt_last_discharge,
				nr_seq_detail)
			values (
				nextval('pfcs_detail_patient_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.id_patient,
				c01_w.nm_patient,
				c01_w.ds_classification,
				c01_w.ds_gender,
				c01_w.dt_birthdate,
				c01_w.qt_idade_paciente,
				c01_w.nr_current_encounter,
				c01_w.dt_current_entry_date,
				c01_w.nr_last_encounter,
				c01_w.dt_last_discharge,
				pfcs_panel_detail_seq_w);

			insert into pfcs_detail_bed(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_department,
				ds_department,
				dt_entry_unit,
				ds_location,
				ds_status,
				ie_status,
				nr_seq_detail)
			values (
				nextval('pfcs_detail_patient_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.cd_current_department,
				c01_w.ds_current_department,
				c01_w.dt_entry_unit,
				c01_w.ds_location,
				c01_w.ds_status,
				c01_w.ie_status,
				pfcs_panel_detail_seq_w);

			commit;

		end;
		end loop;
	end if;
	
	if (pfcs_flag_settings_w = 1 or pfcs_flag_settings_w = 2) then
	
		for c01_w in c01_fhir(qt_time_readmitted_rule_w) loop
		begin	

			qt_total_w := qt_total_w + 1;

			select 	nextval('pfcs_panel_detail_seq')
			into STRICT 	pfcs_panel_detail_seq_w
			;

			insert into pfcs_panel_detail(
				nr_sequencia,
				nm_usuario,
				dt_atualizacao,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				ie_situation,
				nr_seq_indicator,
				nr_seq_operational_level)
			values (
				pfcs_panel_detail_seq_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				'T',
				nr_seq_indicator_p,
				nr_seq_operational_level_w);

			insert into pfcs_detail_patient(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				id_patient,
				nm_patient,
				ds_classification,
				ds_gender,
				dt_birthdate,
				ds_age_range,
				nr_encounter_varchar,
				dt_entrance,
				nr_last_encounter_varchar,
				dt_last_discharge,
				nr_seq_detail)
			values (
				nextval('pfcs_detail_patient_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.id_patient,
				c01_w.nm_patient,
				c01_w.ds_classification,
				c01_w.ds_gender,
				c01_w.dt_birthdate,
				c01_w.qt_idade_paciente,
				c01_w.nr_current_encounter,
				c01_w.dt_current_entry_date,
				c01_w.nr_last_encounter,
				c01_w.dt_last_discharge,
				pfcs_panel_detail_seq_w);

			insert into pfcs_detail_bed(
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				cd_department,
				ds_department,
				dt_entry_unit,
				ds_location,
				ds_status,
				ie_status,
				nr_seq_detail)
			values (
				nextval('pfcs_detail_patient_seq'),
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				c01_w.cd_current_department,
				c01_w.ds_current_department,
				c01_w.dt_entry_unit,
				c01_w.ds_location,
				c01_w.ds_status,
				c01_w.ie_status,
				pfcs_panel_detail_seq_w);

			commit;

		end;
		end loop;		
	end if;

	 := pfcs_pck.pfcs_generate_results(
		vl_indicator_p => qt_total_w, nr_seq_indicator_p => nr_seq_indicator_p, nr_seq_operational_level_p => nr_seq_operational_level_w, nm_usuario_p => nm_usuario_p, nr_seq_panel_p => nr_seq_panel_w);

	CALL pfcs_pck.pfcs_update_detail(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_panel_p => nr_seq_panel_w,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

	CALL pfcs_pck.pfcs_activate_records(
		nr_seq_indicator_p => nr_seq_indicator_p,
		nr_seq_operational_level_p => nr_seq_operational_level_w,
		nm_usuario_p => nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pfcs_calculate_readmission ( nr_seq_indicator_p bigint, cd_estabelecimento_p text, nm_usuario_p text) FROM PUBLIC;

