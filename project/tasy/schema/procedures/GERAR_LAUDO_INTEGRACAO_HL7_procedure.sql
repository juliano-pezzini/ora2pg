-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_laudo_integracao_hl7 ( nr_seg_reg_p bigint, nr_seq_laudo_p INOUT bigint) AS $body$
DECLARE

nr_prescricao_w		bigint;
nr_seq_prescricao_w	bigint;
nr_seq_propaci_w	bigint;
nr_seq_proc_interno_w	bigint;
cd_procedimento_w	bigint;
ie_origem_proced_w	bigint;
qt_procedimento_w	bigint;
cd_setor_atendimento_w	bigint;
cd_medico_exec_w	varchar(10);
nr_seq_exame_w		bigint;
ie_lado_w		varchar(15);
dt_prev_execucao_w	timestamp;
nr_atendimento_w	bigint;
dt_entrada_unidade_w	timestamp;
nr_laudo_w        	bigint;
cd_medico_resp_w	varchar(10);
qt_existe_medico_w	bigint;
ds_laudo_w		text;
ds_laudo_copia_w	text;
nr_seq_laudo_w		bigint;
nr_seq_laudo_ant_w	bigint;
nr_seq_laudo_atual_w	bigint;
nr_seq_copia_w		bigint;

cd_laudo_externo_w	bigint;
cd_medico_laudante_w	varchar(10);
ds_titulo_laudo_w	varchar(255);
dt_liberacao_laudo_w	timestamp;
ie_existe_laudo_w	varchar(1);
ie_tipo_ordem_w		varchar(5);
nm_usuario_w		usuario.nm_usuario%type;
nr_acesso_dicom_w	varchar(30);
nr_seq_prescr_w		bigint;
nr_crm_w			varchar(20);
uf_crm_w			w_integracao_laudo_hl7.UF_CRM%TYPE;
nm_medico_solicitante_w varchar(200);
ie_insere_medico_solic_w varchar(1);

dt_procedimento_w	timestamp;
ie_status_execucao_w	varchar(3);

cd_estabelecimento_w	smallint;
ie_alterar_medico_conta_w 	varchar(2);
ie_alterar_medico_exec_conta_w	varchar(2);
ie_cancelar_laudo_w   varchar(2);
nr_sequencia_ww varchar(10);


BEGIN

select	coalesce(max(nm_usuario),'Webservice')
into STRICT	nm_usuario_w
from 	usuario
where 	elimina_acentuacao(upper(nm_usuario)) = 'INTEGRACAO';

if (coalesce(wheb_usuario_pck.get_nm_usuario::text, '') = '') then
  CALL wheb_usuario_pck.set_nm_usuario(elimina_acentuacao(nm_usuario_w));
end if;

nr_seq_laudo_p := 0;

select 	MAX(vl_parametro)
into STRICT	ie_insere_medico_solic_w
from 	funcao_parametro
where  	cd_funcao = 28
and 	nr_sequencia = 78;

begin
	
	select	nr_acc_number,
		cd_medico_laudante,
		ie_tipo_ordem,
		cd_laudo_externo,
	--	ds_laudo,
		dt_liberacao_laudo,
		nr_crm,
		uf_crm
	into STRICT	nr_acesso_dicom_w,
		cd_medico_laudante_w,
		ie_tipo_ordem_w,
		cd_laudo_externo_w,
	--	ds_laudo_w,
		dt_liberacao_laudo_w,
		nr_crm_w,
		uf_crm_w
	from	w_integracao_laudo_hl7
	where	nr_sequencia	= nr_seg_reg_p;
	
exception
	when no_data_found then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(192823,	'NR_SEG_REG_P='|| nr_seg_reg_p);
end;


if (nr_acesso_dicom_w IS NOT NULL AND nr_acesso_dicom_w::text <> '') then
	begin
	
	select	nr_prescricao,
		nr_sequencia,
		nr_seq_proc_interno,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		cd_setor_atendimento,
		cd_medico_exec,
		nr_seq_exame,
		coalesce(ie_lado,'A'),
		dt_prev_execucao
	into STRICT	nr_prescricao_w,
		nr_seq_prescricao_w,
		nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_procedimento_w,
		cd_setor_atendimento_w,
		cd_medico_exec_w,
		nr_seq_exame_w,
		ie_lado_w,
		dt_prev_execucao_w
	from	prescr_procedimento
	where	nr_acesso_dicom	= nr_acesso_dicom_w
	and	dt_atualizacao_nrec > (clock_timestamp() - interval '60 days')
	order by nr_prescricao asc LIMIT 1;
	
	exception
	when no_data_found then
		begin
		
		select	nr_prescricao,
			nr_sequencia,
			nr_seq_proc_interno,
			cd_procedimento,
			ie_origem_proced,
			qt_procedimento,
			cd_setor_atendimento,
			cd_medico_exec,
			nr_seq_exame,
			coalesce(ie_lado,'A'),
			dt_prev_execucao
		into STRICT	nr_prescricao_w,
			nr_seq_prescricao_w,
			nr_seq_proc_interno_w,
			cd_procedimento_w,
			ie_origem_proced_w,
			qt_procedimento_w,
			cd_setor_atendimento_w,
			cd_medico_exec_w,
			nr_seq_exame_w,
			ie_lado_w,
			dt_prev_execucao_w
		from	prescr_procedimento
		where	nr_acesso_dicom	= nr_acesso_dicom_w;		
	
		exception
		when no_data_found then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(192827,'NR_ACESSO_DICOM_P='|| nr_acesso_dicom_w);
		end;
	end;
end if;



if (coalesce(nr_prescricao_w,0) > 0) and (coalesce(nr_seq_prescricao_w,0) > 0) then
	begin
	
	select	coalesce(max(nr_sequencia),0),
		max(nr_atendimento),
		max(dt_entrada_unidade),
		max(dt_procedimento)
	into STRICT	nr_seq_propaci_w,
		nr_atendimento_w,
		dt_entrada_unidade_w,
		dt_procedimento_w
	from	procedimento_paciente
	where	nr_prescricao		= nr_prescricao_w
	and	nr_sequencia_prescricao	= nr_seq_prescricao_w
	and          coalesce(nr_seq_proc_princ::text, '') = '';
	
	if (nr_seq_propaci_w = 0) then
		begin
		
		CALL Gerar_Proc_Pac_item_Prescr(	nr_prescricao_w,
						nr_seq_prescricao_w, 
						null, 
						null,
						nr_seq_proc_interno_w,
						cd_procedimento_w, 
						ie_origem_proced_w,
						qt_procedimento_w, 
						cd_setor_atendimento_w,
						9, 
						dt_prev_execucao_w,
						nm_usuario_w, 
						cd_medico_exec_w, 
						null,
						ie_lado_w, 
						null);
						
		select	max(nr_sequencia),
			max(nr_atendimento),
			max(dt_entrada_unidade),
			max(dt_procedimento)
		into STRICT	nr_seq_propaci_w,
			nr_atendimento_w,
			dt_entrada_unidade_w,
			dt_procedimento_w
		from	procedimento_paciente
		where	nr_prescricao		= nr_prescricao_w
		and	nr_sequencia_prescricao	= nr_seq_prescricao_w
		and          coalesce(nr_seq_proc_princ::text, '') = '';
		
		end;
	end if;
	
	select	coalesce(max(nr_laudo),0) + 1
	into STRICT	nr_laudo_w
	from	laudo_paciente
	where	nr_atendimento	= nr_atendimento_w;

	select	count(*)
	into STRICT	qt_existe_medico_w
	from	medico
	where	cd_pessoa_fisica	= cd_medico_laudante_w;
	
	if (coalesce(ie_insere_medico_solic_w,'N') = 'S') then
		select 	MAX(substr(obter_nome_pf(cd_medico),1,60))
		into STRICT 	nm_medico_solicitante_w
		from 	prescr_medica
		where 	nr_prescricao = nr_prescricao_w;
	else
		nm_medico_solicitante_w := '';	
	end if;
	
	if (qt_existe_medico_w = 0) then
	
		select	coalesce(max(cd_pessoa_fisica),'0')
		into STRICT	cd_medico_resp_w
		from	medico
		where	nr_crm	= nr_crm_w
		and	uf_crm	= uf_crm_w;
		
	else
		cd_medico_resp_w	:= cd_medico_laudante_w;
	end if;
	
	if (coalesce(cd_medico_resp_w,'0') = '0') then
	
		CALL gravar_log_cdi(88877,'Não encontrou o médico','Tasy');
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(192829, 'CD_MEDICO_LAUDANTE='|| cd_medico_laudante_w ||';NR_CRM='|| nr_crm_w ||';UF_CRM='|| uf_crm_w);
						
	else
		
		select 	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_laudo_ant_w
		from	laudo_paciente
		where	cd_laudo_externo = cd_laudo_externo_w
		and	nr_seq_proc <> nr_seq_propaci_w;
	
		if (nr_seq_laudo_ant_w > 0) then
		
			update	procedimento_paciente
			set	nr_laudo 	= nr_seq_laudo_ant_w
			where	nr_sequencia	= nr_seq_propaci_w;			
		
		else
			select	max(cd_estabelecimento)
			into STRICT	cd_estabelecimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_w;

			select coalesce(max(ie_cancelar_laudo),'N')
			into STRICT ie_cancelar_laudo_w
			from PARAMETRO_INTEGRACAO_PACS
			where cd_estabelecimento = cd_estabelecimento_w;	

			if (ie_cancelar_laudo_w = 'S') then
				begin
				select  MAX(nr_sequencia)
				  into STRICT	nr_sequencia_ww
				  from 	laudo_paciente
				where   nr_prescricao = nr_prescricao_w
				 and	nr_seq_prescricao = nr_seq_prescricao_w;

				if (coalesce(nr_sequencia_ww,0)<>0) then
					begin
						CALL cancelar_laudo_paciente(nr_sequencia_ww,'C',nm_usuario_w,'');
					end;
				end if;
			 end;
			end if;
	
					
			select	nextval('laudo_paciente_seq')
			into STRICT	nr_seq_laudo_w
			;
			
			select 	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_laudo_atual_w
			from	laudo_paciente
			where	cd_laudo_externo = cd_laudo_externo_w
			and	nr_seq_proc = nr_seq_propaci_w;			
			
			
			select	substr(obter_desc_prescr_proc_laudo(p.cd_procedimento,
					p.ie_origem_proced, 
					p.nr_seq_proc_interno, 
					p.ie_lado, 
					nr_seq_propaci_w),1,255)
			into STRICT	ds_titulo_laudo_w
			from	prescr_procedimento p
			where	nr_prescricao	= nr_prescricao_w
			and 	nr_sequencia	= nr_seq_prescricao_w;
		
			insert into laudo_paciente(
				nr_sequencia,
				nr_atendimento,
				dt_entrada_unidade,
				nr_laudo,
				nm_usuario,
				dt_atualizacao,
				cd_medico_resp,
				ds_titulo_laudo,
				dt_laudo,
				nr_prescricao,
				ds_laudo,
				nr_seq_proc,
				nr_seq_prescricao,
				dt_liberacao,
				qt_imagem,
				nm_medico_solicitante,
				ie_status_laudo,
				cd_laudo_externo,
				dt_exame)
			values (	nr_seq_laudo_w,
				nr_atendimento_w,
				dt_entrada_unidade_w,
				nr_laudo_w,
				nm_usuario_w,
				clock_timestamp(),
				cd_medico_resp_w,
				ds_titulo_laudo_w,
				dt_liberacao_laudo_w,
				nr_prescricao_w,
				'LAUDO INTEGRADO',
				nr_seq_propaci_w,
				nr_seq_prescricao_w,
				dt_liberacao_laudo_w,
				0,
				nm_medico_solicitante_w,
				'LL',
				cd_laudo_externo_w,
				dt_procedimento_w);
				
			nr_seq_laudo_p := nr_seq_laudo_w;

			
			select	max(cd_estabelecimento)
			into STRICT	cd_estabelecimento_w
			from	prescr_medica
			where	nr_prescricao = nr_prescricao_w;

			ie_alterar_medico_conta_w 	:= Obter_Valor_Param_Usuario(28 ,101 , obter_perfil_ativo ,null,cd_estabelecimento_w);
			ie_alterar_medico_exec_conta_w 	:= Obter_Valor_Param_Usuario(28 ,112 , obter_perfil_ativo ,null,cd_estabelecimento_w);
			
			
			if (ie_alterar_medico_conta_w = 'S') then
				CALL Atualizar_Propaci_Medico_Laudo(nr_seq_laudo_w,'EX',nm_usuario_w);
			end if;
			
			if (ie_alterar_medico_exec_conta_w = 'S') then
				CALL Atualizar_Propaci_Medico_Laudo(nr_seq_laudo_w,'EXC',nm_usuario_w);
			end if;
			
			
			
			/*	
			copia_campo_long_de_para('w_integracao_laudo_hl7',
						'ds_laudo',
						' where nr_sequencia = :nr_sequencia_p',
						'nr_sequencia_p='||nr_seg_reg_p,
						'laudo_paciente',
						'ds_laudo', 
						'where nr_sequencia = :nr_sequencia',
						'nr_sequencia='||nr_seq_laudo_w);	
			*/
	
				
			update	procedimento_paciente
			set	nr_laudo	= nr_seq_laudo_w
			where	nr_sequencia	= nr_seq_propaci_w;
			
			
			
			if (nr_seq_laudo_atual_w > 0) then
			
				/*
				select	ds_laudo
				into	ds_laudo_copia_w
				from	laudo_paciente 
				where 	nr_sequencia = nr_seq_laudo_atual_w;
				*/
				
				CALL GERAR_COPIA_LAUDO_PADRAO(nr_seq_laudo_atual_w, nr_seq_laudo_w, null, nm_usuario_w, 'Excluido na integração');
				
				
				update	laudo_paciente_copia
				set	nr_seq_laudo = nr_seq_laudo_w
				where	nr_seq_laudo = nr_seq_laudo_atual_w;
				
				update	LAUDO_PACIENTE_MEDICO
				set	nr_seq_laudo = nr_seq_laudo_w
				where	nr_seq_laudo = nr_seq_laudo_atual_w;
				
				delete	FROM laudo_paciente_pdf
				where	nr_seq_laudo = nr_seq_laudo_atual_w;
				
				delete 	FROM laudo_paciente
				where	nr_sequencia = nr_seq_laudo_atual_w;
				
			end if;
		
			/* *****  Atualiza status execução na prescrição ***** */

			UPDATE prescr_procedimento a
			SET a.ie_status_execucao = '40',
				a.nm_usuario  = nm_usuario_w
			WHERE a.nr_prescricao = nr_prescricao_w
			AND a.NR_ACESSO_DICOM  IN (nr_acesso_dicom_w)
				AND EXISTS ( SELECT 1
							 FROM procedimento_paciente b
							 WHERE b.nr_prescricao = a.nr_prescricao
							 AND b.nr_sequencia_prescricao = a.nr_sequencia);
		
			select   max(ie_status_execucao)
			into STRICT  ie_status_execucao_w
			from  prescr_procedimento a
			where  a.nr_prescricao = nr_prescricao_w
			and  a.nr_sequencia  = nr_seq_prescricao_w;
			
				if (ie_status_execucao_w <> '40') then			
			
				UPDATE prescr_procedimento a
				SET a.ie_status_execucao = '40',
						a.nm_usuario  = nm_usuario_w
				WHERE a.nr_prescricao = nr_prescricao_w
				AND a.NR_ACESSO_DICOM  IN (nr_acesso_dicom_w)
				AND EXISTS ( SELECT 1
							FROM procedimento_paciente b
							WHERE b.nr_prescricao = a.nr_prescricao
							AND b.nr_laudo = nr_seq_prescricao_w);		
			
			end if;
			
		end if;
		
	end if;
	
	end;
else
	CALL gravar_log_cdi(88877,'Não encontrou prescr_procedimento','Tasy');
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(192838);
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_laudo_integracao_hl7 ( nr_seg_reg_p bigint, nr_seq_laudo_p INOUT bigint) FROM PUBLIC;

