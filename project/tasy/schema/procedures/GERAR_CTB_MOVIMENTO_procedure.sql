-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_ctb_movimento ( nr_lote_contabil_p bigint, dt_movimento_p timestamp, cd_conta_debito_p text, cd_conta_credito_p text, cd_centro_custo_p text, cd_historico_p bigint, vl_movimento_p bigint, ds_compl_historico_p text, nm_usuario_p text, cd_interface_p bigint, nr_seq_agrupamento_p bigint, cd_estabelecimento_p bigint, nr_seq_movto_p INOUT bigint) AS $body$
DECLARE


nr_seq_movto_w			bigint;
nr_seq_movto_centro_w		bigint;
nr_seq_mes_ref_w			bigint;
nr_sequencia_w			bigint;
nr_seq_log_w			bigint;
ds_erro_w			varchar(2000);
qt_reg_w				bigint;
cd_conta_debito_w			varchar(40);
cd_conta_credito_w		varchar(40);
ie_conta_estab_w			varchar(1);
ie_regra_conta_w			varchar(15);
ie_regra_centro_w			varchar(15);
ie_regra_hist_padrao_w		varchar(15);
dt_nula_w			timestamp;
cd_centro_custo_w			varchar(20);
cd_historico_w			bigint;
cd_empresa_w			smallint;
cd_estabelecimento_w		bigint;
ie_gerar_centro_conta_w		varchar(1);
cd_centro_custo_fixo_w		integer;
cd_classif_debito_w		varchar(40);
cd_classif_credito_w		varchar(40);
qt_registros_w			bigint;

nr_seq_movto_ww			bigint := 0;
ie_exige_centro_w		varchar(1);
cd_conta_aux_w			varchar(20);
cd_centro_aux_w			varchar(20);
cd_estabelecimento_ww		bigint;

ie_estab_centro_custo_w		ctb_regra_exp_imp.ie_estab_centro_custo%type;


BEGIN

ie_gerar_centro_conta_w		:= coalesce(obter_valor_param_usuario(923, 55, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w), 'S');

cd_estabelecimento_ww		:= coalesce(cd_estabelecimento_p,0);


cd_conta_debito_w			:= replace(cd_conta_debito_p,' ','');
cd_conta_credito_w		:= replace(cd_conta_credito_p,' ','');
cd_centro_custo_w			:= cd_centro_custo_p;

if (cd_conta_debito_w = '0' or cd_conta_debito_w = '00000') then
	cd_conta_debito_w := replace(cd_conta_debito_w,'0','');
end if;

if (cd_conta_credito_w = '0' or cd_conta_credito_w = '00000') then
	cd_conta_credito_w := replace(cd_conta_credito_w,'0','');
end if;

if (cd_interface_p = 2368) then
	begin
	cd_conta_debito_w		:= (cd_conta_debito_w)::numeric;
	cd_conta_credito_w		:= (cd_conta_credito_w)::numeric;
	cd_centro_custo_w		:= (cd_centro_custo_w)::numeric;
	exception
		when others then
		cd_conta_debito_w		:= cd_conta_debito_w;
		cd_conta_credito_w		:= cd_conta_credito_w;
		cd_centro_custo_w		:= cd_centro_custo_w;
	end;

end if;

cd_historico_w			:= cd_historico_p;
cd_classif_debito_w		:= '';
cd_classif_credito_w		:= '';

select	max(dt_nula)
into STRICT	dt_nula_w
from	parametro_geral_tasy;

select	count(*),
	max(b.ie_regra_conta),
	max(b.ie_regra_hist_padrao),
	max(obter_empresa_estab(a.cd_estabelecimento)),
	max(a.cd_estabelecimento),
	coalesce(max(ie_conta_estab), 'N'),
	coalesce(max(ie_estab_centro_custo),'S')
into STRICT	qt_reg_w,
	ie_regra_conta_w,
	ie_regra_hist_padrao_w,
	cd_empresa_w,
	cd_estabelecimento_w,
	ie_conta_estab_w,
	ie_estab_centro_custo_w
from	ctb_regra_exp_imp b,
	lote_contabil a
where	a.nr_lote_contabil		= nr_lote_contabil_p
and	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.cd_interface		= cd_interface_p;

select	coalesce(cd_estabelecimento_w, max(cd_estabelecimento))
into STRICT	cd_estabelecimento_w
from	lote_contabil
where	nr_lote_contabil	= nr_lote_contabil_p;

if (coalesce(cd_empresa_w::text, '') = '') then
	cd_empresa_w	:= obter_empresa_estab(cd_estabelecimento_w);
end if;

/*Rotina especifica OS 255662 Matheus 08-12-2010 */

if (cd_interface_p = 1952) then

	if (coalesce(cd_conta_debito_w,'X') <> 'X') then

		cd_conta_aux_w	:= substr(cd_conta_debito_w,1,8);
		cd_centro_aux_w	:= substr(cd_conta_debito_w,9,9);

		select	coalesce(max(ie_centro_custo),'N')
		into STRICT	ie_exige_centro_w
		from	conta_contabil
		where	cd_empresa		= cd_empresa_w
		and	cd_sistema_contabil	= cd_conta_aux_w;


		if (ie_exige_centro_w = 'S') then
			cd_conta_debito_w	:= cd_conta_aux_w;
			cd_centro_custo_w	:= cd_centro_aux_w;

		end if;

	end if;

	if (coalesce(cd_conta_credito_w, 'X') <> 'X') then

		cd_conta_aux_w	:= substr(cd_conta_credito_w,1,8);
		cd_centro_aux_w	:= substr(cd_conta_credito_w,9,9);

		select	coalesce(max(ie_centro_custo),'N')
		into STRICT	ie_exige_centro_w
		from	conta_contabil
		where	cd_sistema_contabil	= cd_conta_aux_w
		and	cd_empresa		= cd_empresa_w;

		if (ie_exige_centro_w = 'S') then
			cd_conta_credito_w	:= cd_conta_aux_w;
			cd_centro_custo_w	:= cd_centro_aux_w;

		end if;
	end if;

end if;


if (qt_reg_w = 1) then
	if (ie_regra_conta_w = 'CLASSIF') then

		if (ie_conta_estab_w = 'S') then

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_debito_w
			from	conta_contabil
			where	cd_classificacao	= cd_conta_debito_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p), 1, 1) = 'S'
			and (substr(obter_se_conta_contab_estab(cd_conta_contabil, cd_estabelecimento_w), 1, 1) = 'S');

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_credito_w
			from	conta_contabil
			where	cd_classificacao	= cd_conta_credito_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S'
			and (substr(obter_se_conta_contab_estab(cd_conta_contabil, cd_estabelecimento_w), 1, 1) = 'S');

		else
			select	min(cd_conta_contabil)
			into STRICT	cd_conta_debito_w
			from	conta_contabil
			where	cd_classificacao	= cd_conta_debito_w
			and	cd_empresa		= cd_empresa_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S';

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_credito_w
			from	conta_contabil
			where	cd_classificacao	= cd_conta_credito_w
			and	cd_empresa		= cd_empresa_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S';

		end if;

	elsif (ie_regra_conta_w = 'CSP') then

		if (ie_conta_estab_w	= 'S') then

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_debito_w
			from	conta_contabil
			where	replace(cd_classificacao, '.', '')	= cd_conta_debito_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S'
			and (substr(obter_se_conta_contab_estab(cd_conta_contabil, cd_estabelecimento_w), 1, 1) = 'S');

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_credito_w
			from	conta_contabil
			where	replace(cd_classificacao, '.', '')	= cd_conta_credito_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S'
			and (substr(obter_se_conta_contab_estab(cd_conta_contabil, cd_estabelecimento_w), 1, 1) = 'S');

		else

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_debito_w
			from	conta_contabil
			where	replace(cd_classificacao,'.','')	= cd_conta_debito_w
			and	cd_empresa		= cd_empresa_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S';

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_credito_w
			from	conta_contabil
			where	replace(cd_classificacao,'.','')	= cd_conta_credito_w
			and	cd_empresa		= cd_empresa_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S';

		end if;

	elsif (ie_regra_conta_w = 'SISCONT') then


		if (ie_conta_estab_w = 'S') then

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_debito_w
			from	conta_contabil
			where	cd_sistema_contabil	= cd_conta_debito_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S'
			and (substr(obter_se_conta_contab_estab(cd_conta_contabil, cd_estabelecimento_w), 1, 1) = 'S');

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_credito_w
			from	conta_contabil
			where	cd_sistema_contabil	= cd_conta_credito_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S'
			and (substr(obter_se_conta_contab_estab(cd_conta_contabil, cd_estabelecimento_w), 1, 1) = 'S');

		else

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_debito_w
			from	conta_contabil
			where	cd_sistema_contabil	= cd_conta_debito_w
			and	cd_empresa		= cd_empresa_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S';

			select	min(cd_conta_contabil)
			into STRICT	cd_conta_credito_w
			from	conta_contabil
			where	cd_sistema_contabil	= cd_conta_credito_w
			and	cd_empresa		= cd_empresa_w
			and	substr(obter_se_conta_vigente(cd_conta_contabil, dt_movimento_p),1,1) = 'S';

		end if;

	end if;

	if (ie_regra_hist_padrao_w = 'SISCONT') then

		select	min(cd_historico)
		into STRICT	cd_historico_w
		from	historico_padrao
		where	somente_numero(cd_sistema_contabil) = cd_historico_p
		and	cd_empresa = cd_empresa_w
		and	ie_situacao = 'A';

	end if;

end if;

if (nr_seq_movto_p > 0) then
	nr_seq_movto_w	:= nr_seq_movto_p;
else
	select	nextval('ctb_movimento_seq')
	into STRICT	nr_seq_movto_w
	;
end if;

if (nr_seq_movto_p = 0) then
	begin
	select	nr_seq_mes_ref
	into STRICT	nr_seq_mes_ref_w
	from	lote_contabil
	where	nr_lote_contabil	= nr_lote_contabil_p;

	begin
	if (coalesce(cd_conta_debito_w, '0') <> '0') then
		cd_classif_debito_w	:= ctb_obter_classif_conta(cd_conta_debito_w, null, dt_movimento_p);
	end if;
	if (coalesce(cd_conta_credito_w, '0') <> '0') then
		cd_classif_credito_w	:= ctb_obter_classif_conta(cd_conta_credito_w, null, dt_movimento_p);
	end if;
	exception when others then
		cd_classif_debito_w	:= '';
		cd_classif_credito_w	:= '';
	end;

	begin

	if (cd_historico_w = 0) then
		cd_historico_w := 1;
	end if;

	select	count(*)
	into STRICT	qt_registros_w
	from	ctb_movimento
	where	nr_lote_contabil = nr_lote_contabil_p
	and		dt_movimento = dt_movimento_p
	and		nr_seq_mes_ref = nr_seq_mes_ref_w
	and		coalesce(cd_conta_debito,'0') = coalesce(cd_conta_debito_w,'0')
	and		coalesce(cd_conta_credito,'0') = coalesce(cd_conta_credito_w,'0')
	and		cd_historico = CASE WHEN cd_historico_w='0' THEN '1'  ELSE cd_historico_w END
	and		ds_compl_historico = replace(ds_compl_historico_p,'"','');

	if (qt_registros_w > 0) and (cd_interface_p = 2368) then

		select	max(nr_sequencia)
		into STRICT	nr_seq_movto_ww
		from	ctb_movimento
		where	nr_lote_contabil = nr_lote_contabil_p
		and	dt_movimento = dt_movimento_p
		and	nr_seq_mes_ref = nr_seq_mes_ref_w
		and	coalesce(cd_conta_debito,'0') = coalesce(cd_conta_debito_w,'0')
		and	coalesce(cd_conta_credito,'0') = coalesce(cd_conta_credito_w,'0')
		and	cd_historico = CASE WHEN cd_historico_w='0' THEN '1'  ELSE cd_historico_w END
		and	ds_compl_historico = replace(ds_compl_historico_p,'"','');

		update	ctb_movimento
		set	vl_movimento = vl_movimento + vl_movimento_p
		where	nr_lote_contabil = nr_lote_contabil_p
		and	dt_movimento = dt_movimento_p
		and	nr_seq_mes_ref = nr_seq_mes_ref_w
		and	coalesce(cd_conta_debito,'0') = coalesce(cd_conta_debito_w,'0')
		and	coalesce(cd_conta_credito,'0') = coalesce(cd_conta_credito_w,'0')
		and	cd_historico = CASE WHEN cd_historico_w='0' THEN '1'  ELSE cd_historico_w END
		and	ds_compl_historico = replace(ds_compl_historico_p,'"','');

	else



		if (cd_estabelecimento_ww = 0)then
		   insert into ctb_movimento(
			 nr_sequencia,
			 nr_lote_contabil,
			 nr_seq_mes_ref,
			  dt_movimento,
			 vl_movimento,
			 dt_atualizacao,
			 nm_usuario,
			 cd_historico,
			 cd_conta_debito,
			 cd_conta_credito,
			 ds_compl_historico,
			 nr_seq_agrupamento,
			 ie_revisado,
			 cd_classif_debito,
			 cd_classif_credito,
			 ie_status_origem)
		 values (	nr_seq_movto_w,
			 nr_lote_contabil_p,
			 nr_seq_mes_ref_w,
			 dt_movimento_p,
			 vl_movimento_p,
			 clock_timestamp(),
			 nm_usuario_p,
			 cd_historico_w,
			 replace(CASE WHEN CASE WHEN cd_conta_debito_w='' THEN  null  ELSE cd_conta_debito_w END ='0' THEN  null  ELSE cd_conta_debito_w END ,' ',''),
			 replace(CASE WHEN CASE WHEN cd_conta_credito_w='' THEN  null  ELSE cd_conta_credito_w END ='0' THEN  null  ELSE cd_conta_credito_w END ,' ',''),
			  replace(ds_compl_historico_p,'"',''),
			 CASE WHEN nr_seq_agrupamento_p=0 THEN null  ELSE nr_seq_agrupamento_p END ,
			 'N',
			 cd_classif_debito_w,
			 cd_classif_credito_w,
			 'I');


		  commit;

		else
		   insert into ctb_movimento(
			 nr_sequencia,
			 nr_lote_contabil,
			 nr_seq_mes_ref,
			  dt_movimento,
			 vl_movimento,
			 dt_atualizacao,
			 nm_usuario,
			 cd_historico,
			 cd_conta_debito,
			 cd_conta_credito,
			 ds_compl_historico,
			 nr_seq_agrupamento,
			 ie_revisado,
			 cd_classif_debito,
			 cd_classif_credito,
			 cd_estabelecimento,
			 ie_status_origem)
		 values (	nr_seq_movto_w,
			 nr_lote_contabil_p,
			 nr_seq_mes_ref_w,
			 dt_movimento_p,
			 vl_movimento_p,
			 clock_timestamp(),
			 nm_usuario_p,
			 cd_historico_w,
			 replace(CASE WHEN CASE WHEN cd_conta_debito_w='' THEN  null  ELSE cd_conta_debito_w END ='0' THEN  null  ELSE cd_conta_debito_w END ,' ',''),
			 replace(CASE WHEN CASE WHEN cd_conta_credito_w='' THEN  null  ELSE cd_conta_credito_w END ='0' THEN  null  ELSE cd_conta_credito_w END ,' ',''),
			  replace(ds_compl_historico_p,'"',''),
			 CASE WHEN nr_seq_agrupamento_p=0 THEN null  ELSE nr_seq_agrupamento_p END ,
			 'N',
			 cd_classif_debito_w,
			 cd_classif_credito_w,
			 cd_estabelecimento_ww,
			 'I');


			   commit;

		 end if;


		end if;

		exception
			when others then
				nr_seq_movto_p	:= 0;
				ds_erro_w	:= SQLERRM(SQLSTATE);
				select	nextval('ctb_log_import_seq')
				into STRICT	nr_seq_log_w
				;
				insert into ctb_log_import(
					nr_sequencia,
					nr_lote_contabil,
					dt_atualizacao,
					nm_usuario,
					ds_log)
				values (	nr_seq_log_w,
					nr_lote_contabil_p,
					clock_timestamp(),
					nm_usuario_p,
					to_char(dt_movimento_p,'ddmmyyyy') || ',' ||
					cd_conta_debito_w || ',' ||
					cd_conta_credito_w || ',' ||
					vl_movimento_p || ',' ||
					cd_historico_p || ',' ||
					ds_compl_historico_p || chr(13) || chr(10) || ds_erro_w);
	end;
	if (cd_centro_custo_w <> '0') then
		begin
		/*Anderson 17/04/2008 - OS80105 - importar o centro de custo pela classificação ou código contábil */

		select	count(*),
			max(b.ie_regra_centro)
		into STRICT	qt_reg_w,
			ie_regra_centro_w
		from	ctb_regra_exp_imp b,
			lote_contabil a
		where	a.nr_lote_contabil	= nr_lote_contabil_p
		and	a.cd_estabelecimento	= b.cd_estabelecimento
		and	b.cd_interface		= cd_interface_p;

		if (qt_reg_w = 1) then
			if (ie_regra_centro_w = 'CLASSIF') then
				select	min(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	centro_custo
				where	cd_classificacao	= cd_centro_custo_w
				and	((cd_estabelecimento	= cd_estabelecimento_w)
				or (ie_estab_centro_custo_w = 'N'));
			elsif (ie_regra_centro_w = 'CSP') then
				select	min(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	centro_custo
				where	replace(cd_classificacao,'.','')	= cd_centro_custo_w
				and	((cd_estabelecimento	= cd_estabelecimento_w)
				or (ie_estab_centro_custo_w = 'N'));
			elsif (ie_regra_centro_w = 'SISCONT') then
				select	min(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	centro_custo
				where	cd_sistema_contabil	= cd_centro_custo_w
				and	((cd_estabelecimento	= cd_estabelecimento_w)
				or (ie_estab_centro_custo_w = 'N'));
			end if;
		end if;

		select	nextval('ctb_movto_centro_custo_seq')
		into STRICT	nr_sequencia_w
		;

		if (cd_interface_p <> 2368) or (nr_seq_movto_ww = 0) then
			nr_seq_movto_ww := nr_seq_movto_w;
		end if;

		insert into ctb_movto_centro_custo(
			nr_sequencia,
			nr_seq_movimento,
			cd_centro_custo,
			dt_atualizacao,
			nm_usuario,
			vl_movimento,
			pr_rateio)
		values (	nr_sequencia_w,
			nr_seq_movto_ww,
			cd_centro_custo_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_movimento_p,
			100);
		commit;
		exception
			when others then
				ds_erro_w		:= SQLERRM(SQLSTATE);
				select	nextval('ctb_log_import_seq')
				into STRICT	nr_seq_log_w
				;
				insert into ctb_log_import(
					nr_sequencia,
					nr_lote_contabil,
					dt_atualizacao,
					nm_usuario,
					ds_log)
				values (	nr_seq_log_w,
					nr_lote_contabil_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_centro_custo_w || ',' ||
					vl_movimento_p || ' : ' ||
					chr(13) || chr(10) || ds_erro_w);
		end;
	elsif (ie_gerar_centro_conta_w = 'S') then
		CALL ctb_atualiza_ccusto_movto(nr_seq_movto_w,cd_estabelecimento_w,nm_usuario_p);
	end if;
	end;
else 	if (cd_centro_custo_w <> '0') then
		begin
		/*Anderson 17/04/2008 - OS80105 - importar o centro de custo pela classificação ou código contábil */

		select	count(*),
			max(b.ie_regra_centro)
		into STRICT	qt_reg_w,
			ie_regra_centro_w
		from	ctb_regra_exp_imp b,
			lote_contabil a
		where	a.nr_lote_contabil		= nr_lote_contabil_p
		and	a.cd_estabelecimento	= b.cd_estabelecimento
		and	b.cd_interface		= cd_interface_p;

		if (qt_reg_w = 1) then
			if (ie_regra_centro_w = 'CLASSIF') then
				select	min(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	centro_custo
				where	cd_classificacao	= cd_centro_custo_w
				and	((cd_estabelecimento	= cd_estabelecimento_w)
				or (ie_estab_centro_custo_w = 'N'));
			elsif (ie_regra_centro_w = 'CSP') then
				select	min(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	centro_custo
				where	replace(cd_classificacao,'.','')	= cd_centro_custo_w
				and	((cd_estabelecimento	= cd_estabelecimento_w)
				or (ie_estab_centro_custo_w = 'N'));
			elsif (ie_regra_centro_w = 'SISCONT') then
				select	min(cd_centro_custo)
				into STRICT	cd_centro_custo_w
				from	centro_custo
				where	cd_sistema_contabil	= cd_centro_custo_w
				and	((cd_estabelecimento	= cd_estabelecimento_w)
				or (ie_estab_centro_custo_w = 'N'));
			end if;
		end if;

		select	nextval('ctb_movto_centro_custo_seq')
		into STRICT	nr_sequencia_w
		;

		if (cd_interface_p <> 2368) or (nr_seq_movto_ww = 0) then
			nr_seq_movto_ww := nr_seq_movto_p;
		end if;

		insert into ctb_movto_centro_custo(
			nr_sequencia,
			nr_seq_movimento,
			cd_centro_custo,
			dt_atualizacao,
			nm_usuario,
			vl_movimento,
			pr_rateio)
		values (	nr_sequencia_w,
			nr_seq_movto_ww,
			cd_centro_custo_w,
			clock_timestamp(),
			nm_usuario_p,
			vl_movimento_p,
			100);
		commit;
		exception
			when others then
				ds_erro_w		:= SQLERRM(SQLSTATE);
				select	nextval('ctb_log_import_seq')
				into STRICT	nr_seq_log_w
				;
				insert into ctb_log_import(
					nr_sequencia,
					nr_lote_contabil,
					dt_atualizacao,
					nm_usuario,
					ds_log)
				values (	nr_seq_log_w,
					nr_lote_contabil_p,
					clock_timestamp(),
					nm_usuario_p,
					cd_centro_custo_w || ',' ||
					vl_movimento_p || ' : ' ||
					chr(13) || chr(10) || ds_erro_w);
		end;
	end if;
end if;

select	max(b.ie_regra_centro)
into STRICT	ie_regra_centro_w
from	ctb_regra_exp_imp b,
	lote_contabil a
where	a.nr_lote_contabil	= nr_lote_contabil_p
and	a.cd_estabelecimento	= b.cd_estabelecimento
and	b.cd_interface		= cd_interface_p;

if (ie_regra_centro_w = 'CENCON') then

	select	max(a.cd_centro_custo)
	into STRICT	cd_centro_custo_fixo_w
	from	conta_contabil a
	where	a.cd_conta_contabil	= coalesce(cd_conta_debito_w,cd_conta_credito_w);

	if (coalesce(cd_centro_custo_fixo_w,0) <> 0) then
		select	nextval('ctb_movto_centro_custo_seq')
		into STRICT	nr_sequencia_w
		;

		insert into ctb_movto_centro_custo(
				nr_sequencia,
				nr_seq_movimento,
				cd_centro_custo,
				dt_atualizacao,
				nm_usuario,
				vl_movimento,
				pr_rateio)
			values (	nr_sequencia_w,
				nr_seq_movto_w,
				cd_centro_custo_fixo_w,
				clock_timestamp(),
				nm_usuario_p,
				vl_movimento_p,
				100);
		commit;
	end if;
end if;

CALL ctb_atualizar_rateio_movto(nr_seq_movto_w,nm_usuario_p);

nr_seq_movto_p	:= nr_seq_movto_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_ctb_movimento ( nr_lote_contabil_p bigint, dt_movimento_p timestamp, cd_conta_debito_p text, cd_conta_credito_p text, cd_centro_custo_p text, cd_historico_p bigint, vl_movimento_p bigint, ds_compl_historico_p text, nm_usuario_p text, cd_interface_p bigint, nr_seq_agrupamento_p bigint, cd_estabelecimento_p bigint, nr_seq_movto_p INOUT bigint) FROM PUBLIC;

