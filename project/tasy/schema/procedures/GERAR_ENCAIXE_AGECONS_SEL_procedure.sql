-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_encaixe_agecons_sel (cd_agenda_p bigint, dt_agenda_p timestamp, hr_encaixe_p timestamp, qt_duracao_p bigint, nr_seq_agenda_sel_p bigint, ie_transferir_p text, cd_motivo_p text, ds_motivo_p text, nm_usuario_p text, nr_seq_encaixe_p INOUT bigint) AS $body$
DECLARE


dt_encaixe_w				timestamp;
cd_tipo_agenda_w			bigint;	
ds_consistencia_w			varchar(255);
cd_turno_w					varchar(1);
nr_seq_classif_w			bigint;
cd_agenda_w					bigint;
ie_status_agenda_w			varchar(3);
cd_pessoa_fisica_w			varchar(10);
nm_paciente_w				varchar(80);
dt_nascimento_pac_w			timestamp;
qt_idade_paciente_w			smallint;
nr_telefone_w				varchar(255);
nm_pessoa_contato_w			varchar(50);
ie_status_paciente_w		varchar(3);
cd_procedencia_w			integer;
cd_convenio_w				integer;
cd_usuario_convenio_w		varchar(30);
cd_categoria_w				varchar(10);
dt_validade_carteira_w		timestamp;
cd_plano_w					varchar(10);
nr_doc_convenio_w			varchar(20);
cd_tipo_acomodacao_w		smallint;
cd_medico_w					varchar(10);
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
nr_seq_proc_interno_w		bigint;
ie_lado_w					varchar(1);
ie_autorizacao_w			varchar(3);
cd_medico_exec_w			varchar(10);
nr_seq_sala_w				bigint;
ds_cirurgia_w				varchar(500);
ie_anestesia_w				varchar(1);
cd_anestesista_w			varchar(10);
cd_setor_atendimento_w		integer;
ds_observacao_w				varchar(4000);
nr_seq_agenda_w				agenda_consulta.nr_sequencia%type;
nm_usuario_origem_w			varchar(15);
ie_setor_encaixe_selec_w 	varchar(1);
cd_estabelecimento_w		smallint;
nr_seq_turno_w				bigint;
ie_status_transf_sel_w		varchar(3);
ie_cancelar_age_origem_w	varchar(1);
ie_classif_orig_transf_w	varchar(1);
ie_classif_agenda_w			varchar(5);
ie_consistencia_w			varchar(255);
ie_agenda_w					varchar(1);
ie_perm_encaixe_turno_w		varchar(1);
ie_feriado_w				varchar(1);
ie_feriado_agenda_w			agenda.ie_feriado%type;
nr_seq_indicacao_w			agenda_consulta.nr_seq_indicacao%type;
cd_pessoa_indicacao_w		agenda_consulta.cd_pessoa_indicacao%type;
nr_seq_motivo_agendamento_w	agenda_consulta.nr_seq_motivo_agendamento%type;
nm_pessoa_indicacao_w		agenda_consulta.nm_pessoa_indicacao%type;
ie_campo_mot_agend_copia_w		varchar(1);
ie_campo_mot_agend_transf_w		varchar(1);
nr_atendimento_w            	agenda_consulta.nr_atendimento%type;
ie_atend_copia_w 		varchar(1);
ie_atend_transf_w 		varchar(1);
ds_mensagem_w			varchar(4000);
ie_user_orig_transf_w	varchar(1)	:= 'N';
nr_seq_segurado_w       agenda_consulta.nr_seq_segurado%type;
ie_cons_regra_agenda_conv_w		varchar(1);

cd_proced_w		bigint;
ie_origem_w		bigint;
nr_seq_interno_w		bigint;
ie_exec_proc_w		varchar(1);
qt_procedimento_w		integer;
nr_seq_exame_w				bigint;
ie_dependente_w			agenda_consulta_proc.ie_dependente%type;
cd_material_exame_w	agenda_consulta_proc.cd_material_exame%type;
ds_material_especial_w	agenda_consulta_proc.ds_material_especial%type;
IE_REGRA_W	agenda_consulta_proc.ie_regra%type;
IE_GLOSA_w	agenda_consulta_proc.IE_GLOSA%type;
NR_SEQ_REGRA_w	agenda_consulta_proc.NR_SEQ_REGRA%type;
IE_GERADO_REGRA_w	agenda_consulta_proc.IE_GERADO_REGRA%type;
DS_OBSERVACAO_proc_w	agenda_consulta_proc.DS_OBSERVACAO%type;

ie_campo_autorizacao_transf_w		varchar(1);
ie_utiliza_agfa_w			varchar(1);
nr_sequencia_autor_w	bigint;

c01 CURSOR FOR
	SELECT	a.cd_procedimento,
			a.ie_origem_proced,
			a.nr_seq_proc_interno,
			a.ie_executar_proc,
			a.qt_procedimento,
			a.nr_seq_exame,
			a.ie_dependente,
			a.cd_material_exame,
			a.ds_material_especial,
      a.IE_REGRA,
a.IE_GLOSA,  
a.NR_SEQ_REGRA, 
a.IE_GERADO_REGRA, 
a.DS_OBSERVACAO
	from	agenda_consulta_proc a
	where	a.nr_seq_agenda	= nr_seq_agenda_sel_p
	and not exists (SELECT	1 
			from 	agenda_consulta_proc w 
			where a.nr_seq_proc_interno = w.nr_seq_proc_interno
			and w.nr_seq_agenda 		= nr_seq_agenda_w);

c02 CURSOR FOR
	SELECT	nr_sequencia
	from	autorizacao_convenio
	where	nr_seq_agenda_consulta	= nr_seq_agenda_sel_p
	and ie_campo_autorizacao_transf_w = 'S';


BEGIN

if (coalesce(hr_encaixe_p::text, '') = '') then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(184608);
end if;

ie_campo_autorizacao_transf_w 	:= obter_parametro_agenda(wheb_usuario_pck.get_cd_estabelecimento, 'IE_AUTORIZACAO_TRANSF', 'N');	

if (ie_campo_autorizacao_transf_w	= 'N') then
	ie_autorizacao_w := '';		
end if;

if (cd_agenda_p IS NOT NULL AND cd_agenda_p::text <> '') and (dt_agenda_p IS NOT NULL AND dt_agenda_p::text <> '') and (hr_encaixe_p IS NOT NULL AND hr_encaixe_p::text <> '') and (qt_duracao_p IS NOT NULL AND qt_duracao_p::text <> '') and (nr_seq_agenda_sel_p IS NOT NULL AND nr_seq_agenda_sel_p::text <> '') and (nr_seq_agenda_sel_p > 0) and (ie_transferir_p IS NOT NULL AND ie_transferir_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	/* obter horario agenda x encaixe */

	dt_encaixe_w := pkg_date_utils.get_DateTime(dt_agenda_p, hr_encaixe_p);	

	select	max(a.cd_tipo_agenda),
		coalesce(max(a.ie_feriado),'N')
	into STRICT	cd_tipo_agenda_w,
		ie_feriado_agenda_w
	from	agenda a,
			agenda_consulta b
	where	a.cd_agenda = b.cd_agenda
	and	b.nr_sequencia = nr_seq_agenda_sel_p;
	
	if (cd_tipo_agenda_w = 3) then
		/* consistir horario */

		ds_consistencia_w := consistir_horario_agecons(cd_agenda_p, dt_encaixe_w, qt_duracao_p, 'E', ds_consistencia_w);
		if (ds_consistencia_w IS NOT NULL AND ds_consistencia_w::text <> '') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ds_consistencia_w);
		end if;

		/* obter turno */

		select	obter_turno_horario_agenda(cd_agenda_p, dt_encaixe_w)
		into STRICT	cd_turno_w
		;
	end if;
	
	
	select	obter_turno_encaixe_agecons(cd_agenda_p,dt_encaixe_w)
	into STRICT	nr_seq_turno_w
	;
	
	select	coalesce(max(ie_encaixe),'S'),
			coalesce(max(ie_feriado),ie_feriado_agenda_w)
	into STRICT	ie_perm_encaixe_turno_w,
			ie_feriado_w
	from	agenda_turno
	where	nr_sequencia = nr_seq_turno_w;
	
	if (ie_perm_encaixe_turno_w = 'N') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(224365);
	end if;
	
	if (coalesce(obter_valor_param_usuario(821,219, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo),'N') = 'N') and (coalesce(nr_seq_turno_w::text, '') = '') and (coalesce(obter_turno_esp_encaixe(cd_agenda_p,dt_encaixe_w), 0) = 0) then
		CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(262321);
	end if;
	
	if (Obter_Se_Feriado(wheb_usuario_pck.get_cd_estabelecimento, dt_agenda_p) > 0) then
		if (ie_feriado_w = 'N') then
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(669868);
		end if;
	end if;
	
	/* obter classificacao */


	/*
	obter_classif_encaixe_agenda(nr_seq_classif_w);
	*/

		
	/* obter dados selecao */

	select	cd_agenda,
		ie_status_agenda,
		cd_pessoa_fisica,
		nm_paciente,
		dt_nascimento_pac,
		qt_idade_pac,
		nr_telefone,
		nm_pessoa_contato,
		ie_status_paciente,
		--cd_procedencia,
		cd_convenio,
		cd_usuario_convenio,
		cd_categoria,
		dt_validade_carteira,
		cd_plano,
		nr_doc_convenio,
		cd_tipo_acomodacao,
		cd_medico_req,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		--ie_lado,
		ie_autorizacao,
		--cd_medico_exec,
		nr_seq_sala,
		ds_confirmacao,
		--ie_anestesia,

		--cd_anestesista,
		cd_setor_atendimento,
		ds_observacao,
		nm_usuario_origem,
		obter_estab_agenda(cd_agenda),
		nr_seq_turno,
		ie_classif_agenda,
		nr_seq_indicacao,
		cd_pessoa_indicacao,
		nm_pessoa_indicacao,
		nr_seq_motivo_agendamento,
		nr_atendimento,
		nr_seq_segurado
	into STRICT	cd_agenda_w,
		ie_status_agenda_w,
		cd_pessoa_fisica_w,
		nm_paciente_w,
		dt_nascimento_pac_w,
		qt_idade_paciente_w,
		nr_telefone_w,
		nm_pessoa_contato_w,
		ie_status_paciente_w,
		--cd_procedencia_w,
		cd_convenio_w,
		cd_usuario_convenio_w,
		cd_categoria_w,
		dt_validade_carteira_w,
		cd_plano_w,
		nr_doc_convenio_w,
		cd_tipo_acomodacao_w,
		cd_medico_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		nr_seq_proc_interno_w,
		--ie_lado_w,
		ie_autorizacao_w,
		--cd_medico_exec_w,
		nr_seq_sala_w,
		ds_cirurgia_w,
		--ie_anestesia_w,

		--cd_anestesista_w,
		cd_setor_atendimento_w,
		ds_observacao_w,
		nm_usuario_origem_w,
		cd_estabelecimento_w,
		nr_seq_turno_w,
		ie_classif_agenda_w,
		nr_seq_indicacao_w,
		cd_pessoa_indicacao_w,
		nm_pessoa_indicacao_w,
		nr_seq_motivo_agendamento_w,
		nr_atendimento_w,
		nr_seq_segurado_w
	from	agenda_consulta
	where	nr_sequencia = nr_seq_agenda_sel_p;
	
	
	ie_campo_mot_agend_transf_w	:= obter_parametro_agenda(cd_estabelecimento_w, 'IE_MOT_AGENDA_TRANSF', 'N');
	ie_campo_mot_agend_copia_w	:= obter_parametro_agenda(cd_estabelecimento_w, 'IE_MOT_AGENDA_COPIA', 'N');
	
	
	if (ie_transferir_p = 'S' and ie_campo_mot_agend_transf_w = 'N') or (ie_transferir_p = 'N' and ie_campo_mot_agend_copia_w = 'N')then
		nr_seq_motivo_agendamento_w := '';
	end if;
	
	ie_atend_copia_w :=	obter_parametro_agenda(cd_estabelecimento_w, 'IE_ATEND_COPIA', 'S');
	ie_atend_transf_w :=	obter_parametro_agenda(cd_estabelecimento_w, 'IE_ATEND_TRANSF', 'S');

	
	if (ie_transferir_p = 'S' and ie_atend_transf_w = 'N') or (ie_transferir_p = 'N' and ie_atend_copia_w = 'N')then
		nr_Atendimento_w := null;
	end if;
	
	if (cd_tipo_agenda_w <> 5) then
		SELECT * FROM consistir_classif_agecon(cd_estabelecimento_w, cd_pessoa_fisica_w, dt_encaixe_w, cd_agenda_p, cd_convenio_w, null, null, null, null, nr_seq_agenda_sel_p, ie_consistencia_w, ie_agenda_w) INTO STRICT ie_consistencia_w, ie_agenda_w;
					
		if (ie_agenda_w = 'N') then			
			CALL Wheb_mensagem_pck.exibir_mensagem_abort( 262328 , 'DS_MENSAGEM='||ie_consistencia_w);
		end if;
	end if;
	
	/* gerar encaixe */
	
	ie_status_transf_sel_w := Obter_Param_Usuario(821, 243, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_status_transf_sel_w);
	ie_cancelar_age_origem_w := Obter_Param_Usuario(821, 282, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cancelar_age_origem_w);
	ie_cons_regra_agenda_conv_w := Obter_Param_Usuario(821, 294, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_cons_regra_agenda_conv_w);
	ie_utiliza_agfa_w := Obter_Param_Usuario(869, 31, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_utiliza_agfa_w);

	if (ie_transferir_p	= 'S') then
		select	obter_parametro_agenda(cd_estabelecimento_w, 'IE_USUARIO_ORIG_TRANSF', 'N')
		into STRICT	ie_user_orig_transf_w
		;
	end if;
		
	if (cd_tipo_agenda_w = 5) then
		
		ie_status_transf_sel_w	 := 'N';
		ie_cancelar_age_origem_w := 'S';
		
		cd_turno_w		:= 0;

		if ((to_char(dt_encaixe_w,'hh24'))::numeric  > 12) then
			cd_turno_w	:= 1;
		end if;
	end if;
	
	select	obter_parametro_agenda(cd_estabelecimento_w, 'IE_SETOR_ENCAIXE_SELEC', 'S')
	into STRICT	ie_setor_encaixe_selec_w
	;
	
	ie_classif_orig_transf_w := obter_parametro_agenda(cd_estabelecimento_w, 'IE_CLASSIF_ORIG_TRANSF', 'N');

	/* obter sequencia */

	select	nextval('agenda_consulta_seq')
	into STRICT	nr_seq_agenda_w
	;
	
	if (ie_setor_encaixe_selec_w = 'E') and (ie_transferir_p = 'S') then
		cd_setor_atendimento_w	:= null;
	elsif (ie_setor_encaixe_selec_w = 'T') and (ie_transferir_p = 'N') then
		cd_setor_atendimento_w	:= null;
	elsif (ie_setor_encaixe_selec_w = 'N') then
		cd_setor_atendimento_w	:= null;
	end if;
	
	if (ie_status_transf_sel_w = 'S') then
		ie_status_agenda_w := 'N';
	end if;

	CALL agecons_consiste_cmce(cd_pessoa_fisica_w, cd_convenio_w, cd_agenda_p, dt_encaixe_w);
	
	if (ie_cons_regra_agenda_conv_w	= 'S') then
		CALL consiste_regra_agecons_conv(cd_convenio_w, cd_categoria_w, cd_agenda_p, cd_setor_atendimento_w, cd_plano_w, cd_pessoa_fisica_w, dt_agenda_p, cd_estabelecimento_w, null, null);
	end if;
	
	if (coalesce(ie_classif_orig_transf_w,'N') <> 'S') then
		ie_classif_agenda_w := null;
  elsif (agenda_classif_liberada(obter_usuario_ativo(), obter_perfil_ativo(), null, ie_classif_agenda_w, 'A') = 'N') then
    CALL wheb_mensagem_pck.exibir_mensagem_abort(1142534);
	end if;
	
	ds_mensagem_w := obter_msg_bloq_geral_agenda_js(cd_estabelecimento_w,
				cd_agenda_p,
				nr_seq_agenda_sel_p,
				null,
				dt_encaixe_w);
	if (ds_mensagem_w IS NOT NULL AND ds_mensagem_w::text <> '') then
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(ds_mensagem_w);
	end if;

  	insert into agenda_consulta(
					nr_sequencia,
					cd_agenda,
					dt_agenda,
					--hr_inicio,
					nr_minuto_duracao,
					ie_status_agenda,
					cd_pessoa_fisica,
					nm_paciente,
					dt_nascimento_pac,
					qt_idade_pac,
					nr_telefone,
					nm_pessoa_contato,
					ie_status_paciente,
					--cd_procedencia,
					cd_convenio,
					cd_usuario_convenio,
					cd_categoria,
					dt_validade_carteira,
					cd_plano,
					nr_doc_convenio,
					cd_tipo_acomodacao,
					cd_medico_req,
					cd_procedimento,
					ie_origem_proced,
					nr_seq_proc_interno,
					--ie_lado,
					ie_autorizacao,
					--cd_medico_exec,
					nr_seq_sala,
					ds_confirmacao,
					--ie_anestesia,

					--cd_anestesista,
					cd_setor_atendimento,
					ds_observacao,
					--nr_seq_classif_agenda,
					cd_turno,
					dt_agendamento,
					nm_usuario_origem,
					nm_usuario,
					dt_atualizacao,
					--ie_equipamento,
					ie_encaixe,
					nr_seq_turno,
					ie_classif_agenda,
					nr_seq_indicacao,
					cd_pessoa_indicacao,
					nm_pessoa_indicacao,
					nr_seq_motivo_agendamento,
					nr_atendimento,
					nr_seq_segurado
					)
				values (
					nr_seq_agenda_w,
					cd_agenda_p,
					dt_encaixe_w,
					--dt_encaixe_w,
					qt_duracao_p,
					ie_status_agenda_w,
					cd_pessoa_fisica_w,
					nm_paciente_w,
					dt_nascimento_pac_w,
					qt_idade_paciente_w,
					nr_telefone_w,
					nm_pessoa_contato_w,
					ie_status_paciente_w,
					--cd_procedencia_w,
					cd_convenio_w,
					cd_usuario_convenio_w,
					cd_categoria_w,
					dt_validade_carteira_w,
					cd_plano_w,
					nr_doc_convenio_w,
          cd_tipo_acomodacao_w,
          cd_medico_w,
          cd_procedimento_w,
          ie_origem_proced_w,
          nr_seq_proc_interno_w,
          --ie_lado_w,
          ie_autorizacao_w,
          --cd_medico_exec_w,
          nr_seq_sala_w,
          ds_cirurgia_w,
          --ie_anestesia_w,

          --cd_anestesista_w,
          cd_setor_atendimento_w,
          ds_observacao_w,
          --nr_seq_classif_w,
          cd_turno_w,
          clock_timestamp(),
          CASE WHEN ie_user_orig_transf_w='S' THEN nm_usuario_origem_w  ELSE nm_usuario_p END ,
          nm_usuario_p,
          clock_timestamp(),
          --'N',
          'S',
          nr_seq_turno_w,
          CASE WHEN ie_classif_orig_transf_w='S' THEN ie_classif_agenda_w  ELSE null END ,
          nr_seq_indicacao_w,
          cd_pessoa_indicacao_w,
          nm_pessoa_indicacao_w,
          nr_seq_motivo_agendamento_w,
          nr_atendimento_w,
          nr_seq_segurado_w
          );
	
	open	c01;
loop
fetch	c01 into
	cd_proced_w,
	ie_origem_w,
	nr_seq_interno_w,
	ie_exec_proc_w,
	qt_procedimento_w,
	nr_seq_exame_w,
	ie_dependente_w,
	cd_material_exame_w,
	ds_material_especial_w,
  IE_REGRA_W,
  IE_GLOSA_w,
NR_SEQ_REGRA_w,
IE_GERADO_REGRA_w,
DS_OBSERVACAO_proc_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

  commit;

	begin
	
	insert into agenda_consulta_proc(nr_sequencia,
		nr_seq_agenda,
		cd_procedimento,
		ie_origem_proced,
		nr_seq_proc_interno,
		dt_atualizacao,
		nm_usuario,
		ie_executar_proc,
		qt_procedimento,
		nr_seq_exame,
		ie_dependente,
		cd_material_exame,
		ds_material_especial,
    IE_REGRA,
    IE_GLOSA,
NR_SEQ_REGRa,
IE_GERADO_REGRA,
DS_OBSERVACAO,
DT_ATUALIZACAO_NREC,
NM_USUARIO_NREC)
	values (nextval('agenda_consulta_proc_seq'),
		nr_seq_agenda_w,
		cd_proced_w,
		ie_origem_w,
		nr_seq_interno_w,
		clock_timestamp(),
		nm_usuario_p,
		ie_exec_proc_w,
		coalesce(qt_procedimento_w,1),
		nr_seq_exame_w,
		ie_dependente_w,
		cd_material_exame_w,
		ds_material_especial_w,
    IE_REGRA_W,
    IE_GLOSA_w,
NR_SEQ_REGRA_w,
IE_GERADO_REGRA_w,
DS_OBSERVACAO_proc_w,
clock_timestamp(),
nm_usuario_p);

	end;
end loop;
close c01;

open c02;
loop
fetch c02 into
	nr_sequencia_autor_w;
EXIT WHEN NOT FOUND; /* apply on c02 */

	if (ie_utiliza_agfa_w <> 'S') then
		update	autorizacao_convenio
		set	nr_seq_agenda_consulta	= nr_seq_agenda_w,
			dt_agenda_cons   	= hr_encaixe_p
		where	nr_sequencia		= nr_sequencia_autor_w;
	end if;

end loop;
close c02;

  /* cancelar agendamento anterior */

  if (ie_cancelar_age_origem_w = 'S') and (ie_transferir_p = 'S') then
    CALL alterar_status_agecons(cd_agenda_w, nr_seq_agenda_sel_p, 'C', cd_motivo_p, ds_motivo_p, 'N', nm_usuario_p,null);
  end if;
end if;

delete   FROM agenda_controle_horario
where   cd_agenda = cd_agenda_p
and   dt_agenda = trunc(dt_agenda_p);

commit;

nr_seq_encaixe_p := nr_seq_agenda_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_encaixe_agecons_sel (cd_agenda_p bigint, dt_agenda_p timestamp, hr_encaixe_p timestamp, qt_duracao_p bigint, nr_seq_agenda_sel_p bigint, ie_transferir_p text, cd_motivo_p text, ds_motivo_p text, nm_usuario_p text, nr_seq_encaixe_p INOUT bigint) FROM PUBLIC;

