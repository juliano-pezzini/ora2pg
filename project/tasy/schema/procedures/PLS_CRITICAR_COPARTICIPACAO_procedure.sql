-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_criticar_coparticipacao ( nr_seq_lib_coparticipacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* CRÍTICAS 
	1	Valor de coparticipação zerado 
	2	Item sem regra de preço para a coparticipação 
*/
 
 
nr_seq_conta_coparticipacao_w	pls_lib_coparticipacao.nr_seq_conta_coparticipacao%type;
vl_coparticipacao_w		pls_conta_coparticipacao.vl_coparticipacao%type;
nr_seq_conta_proc_w		pls_conta_coparticipacao.nr_seq_conta_proc%type;
nr_seq_conta_mat_w		pls_conta_coparticipacao.nr_seq_conta_mat%type;
ie_calculo_coparticipacao_w	pls_parametros.ie_calculo_coparticipacao%type;
nr_seq_regra_copartic_w		pls_conta_proc.nr_seq_regra_copartic%type;
qt_critica_w			bigint;


BEGIN 
 
select	max(nr_seq_conta_coparticipacao) 
into STRICT	nr_seq_conta_coparticipacao_w 
from	pls_lib_coparticipacao 
where	nr_sequencia	= nr_seq_lib_coparticipacao_p;
 
if (nr_seq_conta_coparticipacao_w IS NOT NULL AND nr_seq_conta_coparticipacao_w::text <> '') then 
	select	max(ie_calculo_coparticipacao) 
	into STRICT	ie_calculo_coparticipacao_w 
	from	pls_parametros 
	where	cd_estabelecimento	= cd_estabelecimento_p;
	 
	select	vl_coparticipacao, 
		nr_seq_conta_proc, 
		nr_seq_conta_mat 
	into STRICT	vl_coparticipacao_w, 
		nr_seq_conta_proc_w, 
		nr_seq_conta_mat_w 
	from	pls_conta_coparticipacao 
	where	nr_sequencia	= nr_seq_conta_coparticipacao_w;
	 
	if (coalesce(vl_coparticipacao_w,0) = 0) then 
		CALL pls_gravar_critica_copartic(nr_seq_lib_coparticipacao_p, 1, nm_usuario_p);
	end if;
	 
	if (coalesce(ie_calculo_coparticipacao_w,'P') = 'O') and (coalesce(vl_coparticipacao_w,0) = 0) then 
		if (nr_seq_conta_proc_w IS NOT NULL AND nr_seq_conta_proc_w::text <> '') then 
			select	max(nr_seq_regra_copartic) 
			into STRICT	nr_seq_regra_copartic_w 
			from	pls_conta_proc 
			where	nr_sequencia	= nr_seq_conta_proc_w;
			 
			if (coalesce(nr_seq_regra_copartic_w::text, '') = '') then 
				CALL pls_gravar_critica_copartic(nr_seq_lib_coparticipacao_p, 2, nm_usuario_p);
			end if;
		elsif (nr_seq_conta_mat_w IS NOT NULL AND nr_seq_conta_mat_w::text <> '') then 
			select	max(nr_seq_regra_copartic) 
			into STRICT	nr_seq_regra_copartic_w 
			from	pls_conta_mat 
			where	nr_sequencia	= nr_seq_conta_mat_w;
			 
			if (coalesce(nr_seq_regra_copartic_w::text, '') = '') then 
				CALL pls_gravar_critica_copartic(nr_seq_lib_coparticipacao_p, 2, nm_usuario_p);
			end if;
		end if;
	end if;
	 
	select	count(1) 
	into STRICT	qt_critica_w 
	from	pls_coparticipacao_critica 
	where	nr_seq_lib_copartic	= nr_seq_lib_coparticipacao_p;
	 
	if (qt_critica_w > 0) then 
		update	pls_lib_coparticipacao 
		set	ie_critica_pendente	= 'S' 
		where	nr_sequencia	= nr_seq_lib_coparticipacao_p;
	end if;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_criticar_coparticipacao ( nr_seq_lib_coparticipacao_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

