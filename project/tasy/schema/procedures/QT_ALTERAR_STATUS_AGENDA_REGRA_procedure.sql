-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE qt_alterar_status_agenda_regra (cd_estabelecimento_p bigint ) AS $body$
DECLARE

 
nr_seq_local_w 			bigint;
qt_horas_retro_w		integer;
ie_status_agenda_atual_w	varchar(2);
ie_novo_status_w		varchar(2);
cd_setor_agenda_w		integer;
ie_forma_cons_periodo_w		varchar(3);
dt_agenda_w			timestamp;
cd_pessoa_fisica_w		varchar(10);
nr_seq_agenda_w			bigint;
ds_status_Agenda_w		varchar(50);
ds_status_Agenda_novo_w		varchar(50);
dt_agenda_retro_w		timestamp;
nr_seq_regra_w			bigint;
cd_perfil_w			integer;
ds_titulo_w			varchar(255);
ds_mensagem_w			varchar(4000);
ds_agenda_w			varchar(255);
ie_gerar_comunic_w		varchar(1) := 'S';
qt_dias_regra_w			smallint;
nr_seq_agrupamento_w		bigint;
dt_inicial_w			timestamp;
nr_seq_local_regra_w	qt_agenda_altera_status.nr_seq_local%type;
ie_consiste_concorrencia_w	varchar(1);
nr_seq_sem_dt_fim_w	bigint;
nr_seq_log_w		bigint;
qt_em_aberto_w		bigint;
dt_falta_w		timestamp;
					
C01 CURSOR FOR 
	SELECT	qt_horas_retro,     
		substr(ie_status_agenda_atual,1,2), 
		substr(ie_novo_status,1,2), 
		coalesce(cd_setor_atendimento,0), 
		coalesce(ie_forma_cons_periodo,'H'), 
		nr_sequencia, 
		coalesce(nr_seq_agrupamento,0), 
		coalesce(dt_inicial, pkg_date_utils.get_DateTime(1899, 12, 30, 0, 0, 0)), 
		nr_seq_local 
	from	qt_agenda_altera_status 
	where	cd_estabelecimento = cd_estabelecimento_p 
	and	coalesce(ie_situacao,'A') = 'A';

C02 CURSOR FOR 
	SELECT	a.nr_sequencia, 
		substr(obter_valor_dominio(3192, a.ie_status_agenda),1,50), 
		a.dt_agenda, 
		a.cd_pessoa_fisica, 
		a.nr_seq_local 
	FROM agenda_quimio a
LEFT OUTER JOIN qt_local b ON (a.nr_seq_local = b.nr_Sequencia)
WHERE a.ie_status_agenda	= ie_status_agenda_atual_w and a.DT_AGENDA		< dt_agenda_retro_w and a.DT_AGENDA		> dt_inicial_w and ((a.nr_seq_local = nr_seq_local_regra_w) or (coalesce(nr_seq_local_regra_w::text, '') = '')) and ((b.cd_setor_Atendimento = cd_setor_agenda_w) or (cd_setor_agenda_w = 0)) and ((b.nr_seq_agrupamento <> nr_seq_agrupamento_w) or (nr_seq_agrupamento_w = 0))  and a.cd_estabelecimento	= cd_estabelecimento_p;

C04 CURSOR FOR 
	SELECT	cd_perfil, 
		ds_titulo, 
		ds_mensagem, 
		coalesce(qt_dias_regra,0) 
	from	QT_AGENDA_PERFIL_CI_STATUS 
	where	nr_seq_regra = nr_seq_regra_w 	 
	and (ie_gerar_comunic_w = 'S' or coalesce(ie_tipo_envio,'A') = 'A');
	
C05 CURSOR FOR 
	SELECT 	nr_sequencia 
	from	agenda_log_alt_status 
	where	coalesce(dt_final::text, '') = '' 
	and	dt_inicio between(clock_timestamp() - interval '1 days') and clock_timestamp() 
	and	Obter_Min_Entre_Datas(dt_inicio, clock_timestamp(),1) >= 120;	
 

BEGIN 
 
ie_consiste_concorrencia_w	:= OBTER_PARAMETRO_AGENDA(cd_estabelecimento_p, 'IE_CONSISTE_ALT_STATUS', 'N');
 
if (ie_consiste_concorrencia_w	= 'S') then 
 
	open C05;
	loop 
	fetch C05 into	 
		nr_seq_sem_dt_fim_w;
	EXIT WHEN NOT FOUND; /* apply on C05 */
		begin 
		 
		update	agenda_log_alt_status 
		set	dt_final	= clock_timestamp() 
		where	nr_Sequencia	= nr_seq_sem_dt_fim_w;		
		 
		end;
	end loop;
	 
	commit;
	 
	close C05;
	 
	select	nextval('agenda_log_alt_status_seq') 
	into STRICT	nr_seq_log_w 
	;
 
	insert into agenda_log_alt_status(nr_sequencia, 
			dt_atualizacao, 
			nm_usuario, 
			dt_atualizacao_nrec, 
			nm_usuario_nrec, 
			dt_inicio) 
	values (nr_seq_log_w, 
			clock_timestamp(), 
			'Tasy', 
			clock_timestamp(), 
			'Tasy', 
			clock_timestamp());
			 
	commit;
 
	select	count(*) 
	into STRICT	qt_em_aberto_w 
	from	agenda_log_alt_status 
	where	coalesce(dt_final::text, '') = '' 
	and	nr_sequencia	< nr_seq_log_w;
end if;
 
if (qt_em_aberto_w	= 0) or (ie_consiste_concorrencia_w	= 'N') then 
	 
	open C01;
	loop 
	fetch C01 into	 
		qt_horas_retro_w, 
		ie_status_agenda_atual_w, 
		ie_novo_status_w, 
		cd_setor_agenda_w, 
		ie_forma_cons_periodo_w, 
		nr_seq_regra_w, 
		nr_seq_agrupamento_w, 
		dt_inicial_w, 
		nr_seq_local_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
		ds_status_Agenda_novo_w	:= substr(obter_valor_dominio(3192, ie_novo_status_w),1,50);
		if (ie_forma_cons_periodo_w = 'H') then 
			dt_agenda_retro_w	:= (clock_timestamp() - (qt_horas_retro_w/24));
		elsif (ie_forma_cons_periodo_w = 'M') then 
			dt_agenda_retro_w	:= (clock_timestamp() - (qt_horas_retro_w/1440));
		end if;
		 
 
		open C02;
		loop 
		fetch C02 into	 
			nr_seq_agenda_w, 
			ds_status_Agenda_w, 
			dt_agenda_w, 
			cd_pessoa_fisica_w, 
			nr_seq_local_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin 
			 
			if (ie_novo_status_w = 'F') then 
				dt_falta_w := clock_timestamp();
			else 
				dt_falta_w := null;
			end if;
 
			update	agenda_quimio 
			set	ie_status_Agenda	= ie_novo_status_w, 
				dt_falta		= dt_falta_w, 
				ds_observacao		= substr(substr(ds_observacao,1,255) || chr(13) || 
							 Wheb_mensagem_pck.get_texto(307799, 'DS_STATUS_AGENDA_W='||ds_status_agenda_w||';DS_STATUS_AGENDA_NOVO_W='|| 
							 ds_status_agenda_novo_w),1,255) 
							/*'Status alterado automaticamente de ' || ds_status_agenda_w || ' para ' || ds_status_agenda_novo_w,1,1500)*/
 
 
			where	nr_sequencia	= nr_seq_agenda_w;
			commit;
				 
			open C04;
			loop 
			fetch C04 into	 
				cd_perfil_w, 
				ds_titulo_w, 
				ds_mensagem_w, 
				qt_dias_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin 
				if	((dt_agenda_w	>= trunc(clock_timestamp() - qt_dias_regra_w)) or (qt_dias_regra_w = 0)) then 
					ie_gerar_comunic_w := 'N';
					 
					SELECT 	max(ds_local ) 
					INTO STRICT 	ds_agenda_w 
					FROM 	qt_local 
					WHERE 	nr_Sequencia = nr_seq_local_w;
					 
					ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@agenda', ds_agenda_w),1,4000);
					ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@horario', to_char(dt_agenda_w,'dd/mm/yyyy hh24:mi')),1,4000);
					ds_mensagem_w	:= substr(replace_macro(ds_mensagem_w, '@paciente', substr(obter_nome_pf(cd_pessoa_fisica_w),1,255)),1,4000);
					 
					insert into comunic_interna( 
							dt_comunicado, 
							ds_titulo, 
							ds_comunicado, 
							nm_usuario, 
							dt_atualizacao, 
							ie_geral, 
							nm_usuario_destino, 
							ds_perfil_adicional, 
							nr_sequencia, 
							ie_gerencial, 
							dt_liberacao, 
							cd_estab_destino 
						) values ( 
							clock_timestamp(), 
							ds_titulo_w, 
							ds_mensagem_w, 
							'Tasy', 
							clock_timestamp(), 
							'N', 
							'', 
							cd_perfil_w||', ', 
							nextval('comunic_interna_seq'), 
							'N', 
							clock_timestamp(), 
							cd_estabelecimento_p);
 
				end if;
				end;
			end loop;
			close C04;
			end;
		end loop;
		close C02;
        end;
	end loop;
	close C01;
end if;
if (ie_consiste_concorrencia_w	= 'S') then 
	/* 
	NÃO ALTERAR ESSE UPDATE!! 
	PODE CAUSAR PROBLEMAS DE PERFORMANCE NA AGENDA DE EXAMES / GESTÃO DA AGENDA CIRURGÍCA	 
	*/
 
	 
	update	agenda_log_alt_status 
	set		dt_final		= clock_timestamp() 
	where	nr_Sequencia	= nr_seq_log_w;
	commit;	
	 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE qt_alterar_status_agenda_regra (cd_estabelecimento_p bigint ) FROM PUBLIC;

