-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_rescindir_contratos_lote ( nr_seq_lote_p bigint, dt_rescisao_p timestamp, dt_limite_utilizacao_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


ie_titulos_rescisao_w		varchar(2);
nr_seq_notific_pagador_w	bigint;
qt_nao_recebidas_w		bigint;
qt_liquidados_w			bigint;
nr_seq_regra_w			bigint;
qt_titulo_regra_w		bigint;
qt_titulo_pagador_w		bigint;
nr_seq_pagador_w		pls_notificacao_pagador.nr_seq_pagador%type;
ie_rescisao_pagador_w		varchar(1);
ds_nr_processo_w		varchar(255);

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_notificacao_pagador
	where	nr_seq_lote	= nr_seq_lote_p
	and	coalesce(ie_rescisao,'S')		= 'S';


BEGIN
select	coalesce(max(a.nr_sequencia),0)
into STRICT	nr_seq_regra_w
from	pls_regra_rescisao	a,
	pls_notificacao_regra	b,
	pls_notificacao_lote	c
where	a.nr_seq_regra_geracao	= b.nr_sequencia
and	b.nr_sequencia		= c.nr_seq_regra
and	c.nr_sequencia		= nr_seq_lote_p
and	trunc(clock_timestamp(),'dd') between trunc(coalesce(a.dt_inicio_vigencia,clock_timestamp()),'dd') and trunc(coalesce(a.dt_fim_vigencia,clock_timestamp()),'dd');

if (nr_seq_regra_w	> 0) then
	select	qt_titulo_aberto,
		ie_titulos_rescisao
	into STRICT	qt_titulo_regra_w,
		ie_titulos_rescisao_w
	from	pls_regra_rescisao
	where	nr_sequencia	= nr_seq_regra_w;
end if;

open C01;
loop
fetch C01 into
	nr_seq_notific_pagador_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	if (nr_seq_regra_w > 0) then
		update	pls_notificacao_pagador
		set	nr_seq_regra_rescisao	= nr_seq_regra_w
		where	nr_sequencia		= nr_seq_notific_pagador_w;
	end if;

	select  max(nr_seq_pagador)
	into STRICT	nr_seq_pagador_w
	from  	pls_notificacao_pagador
	where  	nr_sequencia = nr_seq_notific_pagador_w;

	begin
	ie_rescisao_pagador_w 	:= pls_obter_processo_jud_notif(nr_seq_lote_p, nr_seq_pagador_w, null, 'PR');
	exception
	when others then
		ie_rescisao_pagador_w := 'N';
	end;

	if (ie_rescisao_pagador_w  = 'N') then
		ds_nr_processo_w := pls_obter_processo_jud_notif(nr_seq_lote_p, nr_seq_pagador_w, null, 'NRP');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(337228,'NR_PROCESSO_P=' ||ds_nr_processo_w);
	end if;

	if	(qt_titulo_regra_w > 0 AND ie_rescisao_pagador_w = 'S')then
		if (ie_titulos_rescisao_w	= 'T') then	/* Considera todos os títulos do pagador, independente se está ou não na notificação */
			select	count(1)
			into STRICT	qt_titulo_pagador_w
			from	titulo_receber		d,
				pls_contrato_pagador	b,
				pls_notificacao_pagador a
			where	b.nr_sequencia		= d.nr_seq_pagador
			and	a.nr_seq_pagador	= b.nr_sequencia
			and	d.ie_situacao		in ('1','6')
			and	a.nr_sequencia		= nr_seq_notific_pagador_w;
		elsif (ie_titulos_rescisao_w	= 'N') then	/* Considera apenas os títulos que estão na notificação */
			select	count(1)
			into STRICT	qt_titulo_pagador_w
			from	titulo_receber		d,
				pls_mensalidade		c,
				pls_notificacao_item	b,
				pls_notificacao_pagador	a
			where	d.nr_seq_mensalidade	= c.nr_sequencia
			and	b.nr_seq_mensalidade	= c.nr_sequencia
			and	a.nr_sequencia		= b.nr_seq_notific_pagador
			and	d.ie_situacao		in ('1','6')
			and	a.nr_sequencia		= nr_seq_notific_pagador_w;
		end if;

		if (qt_titulo_pagador_w >= qt_titulo_regra_w) then
			CALL pls_rescindir_contrato_notific(	nr_seq_notific_pagador_w,
							dt_rescisao_p,
							dt_limite_utilizacao_p,
							nr_seq_motivo_p,
							ds_observacao_p,
							nr_seq_lote_p,
							nm_usuario_p,
							cd_estabelecimento_p);
		end if;
	elsif (ie_rescisao_pagador_w = 'S') then
		CALL pls_rescindir_contrato_notific(	nr_seq_notific_pagador_w,
						dt_rescisao_p,
						dt_limite_utilizacao_p,
						nr_seq_motivo_p,
						ds_observacao_p,
						nr_seq_lote_p,
						nm_usuario_p,
						cd_estabelecimento_p);
	end if;

	end;
end loop;
close C01;

update	pls_notificacao_lote
set	dt_rescisao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p,
	dt_atualizacao	= clock_timestamp()
where	nr_sequencia	= nr_seq_lote_p;

CALL pls_atualizar_valor_notific(nr_seq_lote_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_rescindir_contratos_lote ( nr_seq_lote_p bigint, dt_rescisao_p timestamp, dt_limite_utilizacao_p timestamp, nr_seq_motivo_p bigint, ds_observacao_p text, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

