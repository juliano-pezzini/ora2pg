-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE imp_itens_adic_agenda_int_opme ( cd_reserva_p text, ie_evento_p text, nm_usuario_p text, cd_material_p text, qt_material_p text, vl_unitario_p bigint, vl_desconto_p bigint, cd_cond_pagto_p text, ds_observacao_p text, cd_cnpj_p text, ds_erro_p INOUT text) AS $body$
DECLARE

 
/* 
ie_evento_p 
 0	= Dados do agendamento 
 1	= Itens - OPME 
*/
 
 
 
qt_existe_w		integer;
nr_sequencia_w		bigint;
cd_cond_pagto_w		bigint;
ds_erro_w		varchar(255);

 

BEGIN 
 
/*Consiste o agendamento*/
 
if (ie_evento_p = '0') then 
	begin 
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	agenda_paciente 
	where	nr_sequencia = cd_reserva_p;
	if (qt_existe_w = 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281595) || cd_reserva_p || WHEB_MENSAGEM_PCK.get_texto(281596);
	end if;
 
	end;
 
/*Consiste os itens*/
 
elsif (ie_evento_p = '1') then 
	begin 
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	material 
	where	cd_material = cd_material_p;
	if (qt_existe_w = 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281621) || cd_material_p || WHEB_MENSAGEM_PCK.get_texto(281596);
	end if;
 
	select	count(*) 
	into STRICT	qt_existe_w 
	from	material 
	where	cd_material = cd_material_p 
	and 	ie_situacao = 'I';
	if (qt_existe_w > 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281621) || cd_material_p || WHEB_MENSAGEM_PCK.get_texto(281622);
	end if;
 
	select	coalesce(max(cd_condicao_pagamento), 0) 
	into STRICT	cd_cond_pagto_w 
	from	condicao_pagamento 
	where	cd_condicao_pagamento = cd_cond_pagto_p;
	if (cd_cond_pagto_w = 0) then 
		ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281624) || cd_cond_pagto_p || WHEB_MENSAGEM_PCK.get_texto(281596);
	end if;
 
	if (cd_cnpj_p IS NOT NULL AND cd_cnpj_p::text <> '') then 
		select	count(*) 
		into STRICT	qt_existe_w 
		from	pessoa_juridica 
		where	cd_cgc		= cd_cnpj_p;
		if (qt_existe_w = 0) then 
			ds_erro_w	:= WHEB_MENSAGEM_PCK.get_texto(281625) || cd_cnpj_p || WHEB_MENSAGEM_PCK.get_texto(281627);
		end if;
	end if;
 
	end;
 
/*Grava os itens - Caso n√£o tenha erros*/
 
elsif (ie_evento_p = '10') then 
	begin 
 
	select	nextval('agenda_pac_opme_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	select	max(cd_condicao_pagamento) 
	into STRICT	cd_cond_pagto_w 
	from	condicao_pagamento 
	where	cd_sistema_ant	= cd_cond_pagto_p;
 
	insert into agenda_pac_opme( 
		nr_sequencia,			nr_seq_agenda, 
		dt_atualizacao,			nm_usuario, 
		cd_material,			qt_material, 
		vl_unitario_item,			vl_desconto, 
		cd_cond_pagto, 
		ie_origem_inf,			nr_seq_apres, 
		ie_padrao,			ds_observacao, 
		ie_autorizado,			cd_cgc, 
		dt_atualizacao_nrec,		nm_usuario_nrec, 
		ie_integracao,			ie_gerar_autor) 
	values ( 	nr_sequencia_w,			cd_reserva_p, 
		clock_timestamp(),				nm_usuario_p, 
		cd_material_p,			qt_material_p, 
		vl_unitario_p,			vl_desconto_p, 
		cd_cond_pagto_w, 
		'I',				500, 
		'S',				ds_observacao_p, 
		'P',				cd_cnpj_p, 
		clock_timestamp(),				nm_usuario_p, 
		'S',				'N');
 
	end;
 
elsif (ie_evento_p = '99') then 
	CALL ajusta_status_agenda_int_opme(cd_reserva_p, '30', null, nm_usuario_p);
end if;
 
 
if (coalesce(ds_erro_w,'X') <> 'X') then 
	CALL ajusta_status_agenda_int_opme(cd_reserva_p, '31', substr(ds_erro_w,1,255), nm_usuario_p);
	ds_erro_p	:= substr(ds_erro_w, 1, 255);
end if;
 
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE imp_itens_adic_agenda_int_opme ( cd_reserva_p text, ie_evento_p text, nm_usuario_p text, cd_material_p text, qt_material_p text, vl_unitario_p bigint, vl_desconto_p bigint, cd_cond_pagto_p text, ds_observacao_p text, cd_cnpj_p text, ds_erro_p INOUT text) FROM PUBLIC;

