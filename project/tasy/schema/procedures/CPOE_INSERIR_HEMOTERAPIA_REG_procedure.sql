-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cpoe_inserir_hemoterapia_reg ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_p cpoe_hemoterapia.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, ie_origem_inf_p prescr_medica.ie_origem_inf%type, cd_convenio_p convenio.cd_convenio%type, dt_inicio_prescr_p timestamp, dt_inicio_ret_p INOUT timestamp) AS $body$
DECLARE



nr_seq_hemo_cpoe_w		cpoe_hemoterapia.nr_sequencia%type;
cd_doenca_cid_w			cpoe_hemoterapia.cd_doenca_cid%type;
ie_trans_anterior_w		cpoe_hemoterapia.ie_trans_anterior%type;
dt_ultima_transf_w		cpoe_hemoterapia.dt_ultima_transf%type;
nr_seq_reacao_w			cpoe_hemoterapia.nr_seq_reacao%type;
ie_gravidez_w			cpoe_hemoterapia.ie_gravidez%type;
qt_gravidez_w			cpoe_hemoterapia.qt_gravidez%type;
qt_aborto_w				cpoe_hemoterapia.qt_aborto%type;
ie_tipo_paciente_w		cpoe_hemoterapia.ie_tipo_paciente%type;
ie_porte_cirurgico_w	cpoe_hemoterapia.ie_porte_cirurgico%type;
qt_hemoglobina_w		cpoe_hemoterapia.qt_hemoglobina%type;
qt_hematocrito_w		cpoe_hemoterapia.qt_hematocrito%type;
qt_plaqueta_w			cpoe_hemoterapia.qt_plaqueta%type;
qt_tap_w				cpoe_hemoterapia.qt_tap%type;
qt_tap_inr_w			cpoe_hemoterapia.qt_tap_inr%type;
qt_ttpa_w				cpoe_hemoterapia.qt_ttpa%type;
qt_ttpa_rel_w			cpoe_hemoterapia.qt_ttpa_rel%type;
qt_fibrinogenio_w		cpoe_hemoterapia.qt_fibrinogenio%type;
ie_tipo_w				cpoe_hemoterapia.ie_tipo%type;
dt_programada_w			cpoe_hemoterapia.dt_programada%type;
ie_urgencia_w			cpoe_hemoterapia.ie_urgencia%type;
ie_tipo_hemoterap_w		cpoe_hemoterapia.ie_tipo_hemoterap%type;
dt_cirurgia_w			cpoe_hemoterapia.dt_cirurgia%type;
nr_seq_derivado_reac_w	cpoe_hemoterapia.nr_seq_derivado_reac%type;
ds_observacao_w			cpoe_hemoterapia.ds_observacao%type;
nm_usuario_w			cpoe_hemoterapia.nm_usuario%type;
nm_usuario_nrec_w		cpoe_hemoterapia.nm_usuario_nrec%type;
dt_atualizacao_w		cpoe_hemoterapia.dt_atualizacao%type;
dt_atualizacao_nrec_w	cpoe_hemoterapia.dt_atualizacao_nrec%type;
nr_seq_derivado_w		cpoe_hemoterapia.nr_seq_derivado%type;
ie_via_aplicacao_w		cpoe_hemoterapia.ie_via_aplicacao%type;
ie_origem_proced_w		cpoe_hemoterapia.ie_origem_proced%type;
cd_procedimento_w		cpoe_hemoterapia.cd_procedimento%type;
nr_seq_proc_interno_w	cpoe_hemoterapia.nr_seq_proc_interno%type;
qt_procedimento_w		cpoe_hemoterapia.qt_procedimento%type;
ie_reserva_w			cpoe_hemoterapia.ie_reserva%type;
ie_reserva_presc_proced_w			cpoe_hemoterapia.ie_reserva%type;
cd_intervalo_w			cpoe_hemoterapia.cd_intervalo%type;
ie_aliquotado_w			cpoe_hemoterapia.ie_aliquotado%type;
ie_filtrado_w			cpoe_hemoterapia.ie_filtrado%type;
ie_irradiado_w			cpoe_hemoterapia.ie_irradiado%type;
ie_lavado_w				cpoe_hemoterapia.ie_lavado%type;
ds_justificativa_w		cpoe_hemoterapia.ds_justificativa%type;
ds_horarios_w			cpoe_hemoterapia.ds_horarios%type;
nr_ocorrencia_w			cpoe_hemoterapia.nr_ocorrencia%type;
qt_vol_hemocomp_w		cpoe_hemoterapia.qt_vol_hemocomp%type;
qt_hora_min_infusao_w	cpoe_hemoterapia.qt_hora_min_infusao%type;
qt_veloc_inf_hemo_w		cpoe_hemoterapia.qt_veloc_inf_hemo%type;
ie_unid_med_hemo_w		cpoe_hemoterapia.ie_unid_med_hemo%type;
nr_seq_indicacao1_w		cpoe_hemoterapia.nr_seq_indicacao1%type;
nr_seq_indicacao2_w		cpoe_hemoterapia.nr_seq_indicacao2%type;
qt_albumina_w			cpoe_hemoterapia.qt_albumina%type;
qt_calcio_w				cpoe_hemoterapia.qt_calcio%type;
qt_magnesio_w			cpoe_hemoterapia.qt_magnesio%type;
qt_bilirrubina_dir_w	cpoe_hemoterapia.qt_bilirrubina_dir%type;
qt_bilirrubina_ind_w	cpoe_hemoterapia.qt_bilirrubina_ind%type;
qt_hemoglobina_s_w		cpoe_hemoterapia.qt_hemoglobina_s%type;
qt_leucocitos_w			cpoe_hemoterapia.qt_leucocitos%type;
ie_coombs_direto_w		cpoe_hemoterapia.ie_coombs_direto%type;
ds_coagulopatia_w		cpoe_hemoterapia.ds_coagulopatia%type;
dt_fim_proc_w			cpoe_hemoterapia.dt_fim%type;

nr_seq_procedimento_w	prescr_procedimento.nr_sequencia%type;
qt_hora_infusao_w		prescr_procedimento.qt_hora_infusao%type;
qt_tempo_infusao_w		prescr_procedimento.qt_tempo_infusao%type;
nr_seq_exame_w			prescr_procedimento.nr_seq_exame%type;
dt_entrega_w			prescr_procedimento.dt_resultado%type;
dt_prevista_retorno_w	prescr_procedimento.dt_prev_execucao%type;
nr_doc_convenio_w		prescr_procedimento.nr_doc_convenio%type;
nr_sequencia_orig_w		prescr_procedimento.nr_sequencia%type;
ie_tipo_proced_w		prescr_procedimento.ie_tipo_proced%type;
ie_util_hemocomponente_w prescr_procedimento.ie_util_hemocomponente%type;

hr_prim_horario_w		cpoe_procedimento.hr_prim_horario%type;
ie_administracao_w		cpoe_procedimento.ie_administracao%type;
ie_acm_w				cpoe_procedimento.ie_acm%type;
ie_se_necessario_w		cpoe_procedimento.ie_se_necessario%type;

nr_seq_prescr_sol_bs_w	prescr_sol_bs_indicacao.nr_sequencia%type;
ie_grupo_hemocom_w		prescr_sol_bs_indicacao.ie_grupo_hemocom%type;
nr_seq_prescr_sangue_w	prescr_solic_bco_sangue.nr_sequencia%type;

dt_lib_suspensao_w		cpoe_material.dt_lib_suspensao%type;
nr_seq_mat_cpoe_assoc_w	cpoe_material.nr_sequencia%type;

ds_doenca_cid_w			cid_doenca.ds_doenca_cid%type;

cd_setor_atendimento_w	setor_atendimento.cd_setor_atendimento%type;

nr_prescricao_orig_w	prescr_medica.nr_prescricao%type;

qt_conversao_w			material_conversao_unidade.qt_conversao%type;
ie_fenotipado_w				cpoe_hemoterapia.ie_fenotipado%type;

ds_erro_ex_w 				varchar(2000);
qt_min_intervalo_assoc_w	double precision;
qt_min_intervalo_w			double precision;
ds_horarios_aux_w			varchar(4000);
ie_calcula_horarios_w		boolean;
dt_inicio_w					timestamp;
dt_inicio_orig_w			timestamp;
dt_inicio_base_w			timestamp;
dt_fim_w 					timestamp;
dt_proxima_dose_w			timestamp;
dt_prox_geracao_w			timestamp;
nr_seq_w					bigint;
cd_categoria_w				bigint;
ie_tipo_atendimento_w		bigint;
nr_horas_prox_geracao_w		integer;
ie_administrar_w			char(1);
ie_guia_w					varchar(3);
ie_tipo_conv_w				bigint;
ds_erro_ww					varchar(2000);
qt_hora_infusao_ww 			double precision;

cProcedimentos CURSOR FOR
	SELECT	a.nr_sequencia,
			a.cd_doenca_cid,
			obter_desc_cid(a.cd_doenca_cid),
			a.ie_trans_anterior,
			a.dt_ultima_transf,
			a.nr_seq_reacao,
			a.ie_gravidez,
			a.qt_gravidez,
			a.qt_aborto,
			a.ie_tipo_paciente,
			a.ie_porte_cirurgico,
			a.qt_hemoglobina,
			a.qt_hematocrito,
			a.qt_plaqueta,
			a.qt_tap,
			a.qt_tap_inr,
			a.qt_ttpa,
			a.qt_ttpa_rel,
			a.qt_fibrinogenio,
			a.ie_tipo,
			a.dt_programada,
			CASE WHEN coalesce(a.ie_urgencia::text, '') = '' THEN 'N'  ELSE 'S' END ,
			a.ie_tipo_hemoterap,
			a.dt_cirurgia,
			a.nr_seq_derivado_reac,
			a.ds_observacao,
			a.nm_usuario,
			a.nm_usuario_nrec,
			a.dt_atualizacao,
			a.dt_atualizacao_nrec,
			a.nr_seq_derivado,
			a.ie_via_aplicacao,		
			a.ie_origem_proced,
			a.cd_procedimento,
			a.nr_seq_proc_interno,
			a.qt_procedimento,
			a.cd_intervalo,
			a.ie_aliquotado,
			a.ie_filtrado,
			a.ie_irradiado,
			a.ie_lavado,
			a.ie_fenotipado,
			a.ds_justificativa,
			a.ds_horarios,
			a.nr_ocorrencia,
			coalesce(a.qt_vol_hemocomp, a.qt_volume_retirar) qt_vol_hemocomp,
			coalesce(a.qt_hora_min_infusao,0),
			a.qt_veloc_inf_hemo,
			a.ie_unid_med_hemo,
			a.dt_inicio,
			a.nr_seq_indicacao1,
			a.nr_seq_indicacao2,
			coalesce(a.ie_reserva,'N'),
			a.qt_albumina,
			a.qt_calcio, 
			a.qt_magnesio, 
			a.qt_bilirrubina_dir, 
			a.qt_bilirrubina_ind, 
			a.qt_hemoglobina_s,
			a.qt_leucocitos,
			a.ie_coombs_direto,
			a.ds_coagulopatia,
            a.ie_reserva ie_reserva_presc_proced,
			CASE WHEN coalesce(a.dt_lib_suspensao::text, '') = '' THEN  a.dt_fim  ELSE coalesce(a.dt_suspensao,a.dt_fim) END  dt_fim
	from	cpoe_hemoterapia a
	where	a.nr_sequencia 		= nr_sequencia_p
	and		((CASE WHEN coalesce(a.dt_lib_suspensao::text, '') = '' THEN  a.dt_fim  ELSE coalesce(a.dt_suspensao,a.dt_fim) END  >= clock_timestamp()) or (CASE WHEN coalesce(a.dt_lib_suspensao::text, '') = '' THEN  a.dt_fim  ELSE coalesce(a.dt_suspensao,a.dt_fim) coalesce(END::text, '') = '') or (coalesce(a.ie_retrogrado,'N') = 'S' AND a.dt_inicio >= dt_inicio_prescr_p)) -- retrograde/backward item)
	order 	by a.nr_sequencia;

c02 CURSOR FOR
SELECT	nr_seq_exame
from	san_regra_exame_cont_item
where	nr_seq_regra_exame = nr_seq_w;


	procedure gerar_indicacao_clinicas( nr_seq_prescr_sangue_p bigint,
					    nr_seq_indicacao_p bigint) is

	;
BEGIN

	select	nextval('prescr_sol_bs_indicacao_seq')
	into STRICT	nr_seq_prescr_sol_bs_w
	;

	select	ie_tipo_hemoc
	into STRICT	ie_grupo_hemocom_w
	from	san_indicacao
	where	nr_sequencia = nr_seq_indicacao_p;

	
	insert into prescr_sol_bs_indicacao(	nr_sequencia,
						nr_seq_solic_bs,
						nm_usuario,
						nm_usuario_nrec,
						ie_grupo_hemocom,
						nr_seq_indicacao,
						cd_perfil_ativo,
						ds_justificativa,
						dt_atualizacao,
						dt_atualizacao_nrec)
					values (
						nr_seq_prescr_sol_bs_w,
						nr_seq_prescr_sangue_p,
						nm_usuario_w,
						nm_usuario_w,
						ie_grupo_hemocom_w,
						nr_seq_indicacao_p,
						cd_perfil_p,
						ds_justificativa_w,
						clock_timestamp(),
						clock_timestamp());

	commit;
	end;

	procedure CPOE_Inserir_materiais_assoc is

		qt_assoc_w				integer;
		nr_agrupamento_w		number;
		nr_seq_w				number;
		dt_inicio_assoc_w			date;
		ie_se_necessario_assoc_w		char(1);
		ie_acm_assoc_w				char(1);
		qt_material_w				prescr_material.qt_material%type;
		cd_unidade_medida_consumo_w		prescr_material.cd_unidade_medida%type;
		qt_total_dispensar_w			prescr_material.qt_total_dispensar%type;
		qt_unitaria_w				prescr_material.qt_unitaria%type;
		ie_regra_disp_w				prescr_material.ie_regra_disp%type;
		nr_ocorrencia_assoc_w			prescr_material.nr_ocorrencia%type;
		nr_sequencia_assoc_w			prescr_material.nr_sequencia%type;
		nr_sequencia_princ_w			prescr_material.nr_sequencia%type;
		cd_material_assoc_w			cpoe_hemoterapia.cd_mat_hem1%type;
		ie_via_aplicacao_assoc_w		cpoe_hemoterapia.ie_via_mat_hem1%type;
		qt_dose_assoc_w				cpoe_hemoterapia.qt_dose_hem1%type;
		cd_unidade_medida_assoc_w		cpoe_hemoterapia.cd_unid_medida_dose_hem1%type;
		cd_intervalo_assoc_w			cpoe_hemoterapia.cd_interv_hem1%type;
		hr_prim_horario_assoc_w			cpoe_hemoterapia.hr_prim_hor_hem1%type;
		ds_horarios_assoc_w			cpoe_hemoterapia.ds_hor_hem1%type;
		ie_administracao_assoc_w		cpoe_hemoterapia.ie_adm_mat_hem1%type;
		cd_mat_recons_assoc_w		cpoe_hemoterapia.cd_mat_recons1%type;
		qt_dose_recons_assoc_w		cpoe_hemoterapia.qt_dose_rec1%type;
		cd_unid_med_recons_assoc_w		cpoe_hemoterapia.cd_unid_med_rec1%type;
		cd_mat_dil_assoc_w		cpoe_hemoterapia.cd_mat_dil1%type;
		qt_dose_dil_assoc_w		cpoe_hemoterapia.qt_dose_dil1%type;
		cd_unid_med_dil_assoc_w		cpoe_hemoterapia.cd_unid_med_dose_dil1%type;
		ie_urgencia_assoc_w		cpoe_hemoterapia.ie_urgencia_mat_hem1%type;
		ds_obser_hemo_assoc_w		cpoe_hemoterapia.ds_observacao_mat1%type;
		
		cMateriaisAssoc CURSOR FOR
			SELECT	cd_material,
				qt_dose,
				ie_via_aplicacao,
				cd_unidade_medida,
				cd_mat_recons,
				qt_dose_recons,
				cd_unid_med_recons,
				cd_mat_dil,
				qt_dose_dil,
				cd_unid_med_dil,
				cd_intervalo,
				ie_administracao,
				dt_inicio,
				hr_prim_horario,
				ie_urgencia,
				ds_horarios,
				ds_obser_hemo
			from	cpoe_material_hemoterapia_v
			where	nr_seq_hemo  = nr_sequencia_p
			and	((nr_atendimento = nr_atendimento_p) or (cd_pessoa_fisica = cd_pessoa_fisica_p and coalesce(nr_atendimento::text, '') = ''));
			
		procedure gerar_item_medicacao(	cd_material_p				number,
										cd_unidade_medida_dose_p	varchar2,
										qt_dose_p					number,
										ie_agrupador_p				number,
										nr_seq_diluicao_p			number,
										nr_sequencia_princ_p		out number) is
		
		begin
			
			select	coalesce(max(nr_agrupamento),0) + 1
			into STRICT	nr_agrupamento_w
			from	prescr_material
			where	nr_prescricao = nr_prescricao_p;

			select	coalesce(max(nr_sequencia),0) + 1
			into STRICT	  nr_sequencia_assoc_w
			from	  prescr_material
			where	  nr_prescricao = nr_prescricao_p;

			ie_calcula_horarios_w	:= false;
			-- Definir 1 horario, caso este nao tenha sido definido pelo usuario.
			if (coalesce(hr_prim_horario_assoc_w::text, '') = '') then
				hr_prim_horario_assoc_w		:= to_char(dt_inicio_base_w,'hh24:mi');
				ie_calcula_horarios_w	:= true;	
			end if;

			-- Atualiza a data inicio com dia e horario.
			dt_inicio_assoc_w		:= to_date(to_char(dt_inicio_assoc_w,'dd/mm/yyyy ') || hr_prim_horario_assoc_w,'dd/mm/yyyy hh24:mi');

			-- Atualizar data de inicio com a data atual, para itens que a data de inicio ja tenha sido ultrapassada.
			if (dt_inicio_assoc_w < dt_inicio_base_w) then
				-- Assumir data da prescricao para o item
				dt_inicio_assoc_w		:= to_date(to_char(dt_inicio_base_w,'dd/mm/yyyy ') || hr_prim_horario_assoc_w, 'dd/mm/yyyy hh24:mi');

				-- Adicionar um dia, caso o inicio do item, nao caia na data de hoje
				if (dt_inicio_assoc_w < dt_inicio_base_w) then
					dt_inicio_assoc_w	:= dt_inicio_assoc_w+1;
				end if;
				ie_calcula_horarios_w	:= true;
			end if;

			select	max(qt_min_intervalo)
			into STRICT	qt_min_intervalo_assoc_w
			from	intervalo_prescricao
			where	cd_intervalo = cd_intervalo_assoc_w;

			nr_ocorrencia_assoc_w := 0;
			SELECT * FROM cpoe_calcular_horario_prescr(nr_atendimento_p, cd_intervalo_assoc_w, cd_material_p, dt_inicio_assoc_w, 0, qt_min_intervalo_w, nr_ocorrencia_assoc_w, ds_horarios_assoc_w, ds_horarios_aux_w, nm_usuario_p, cd_estabelecimento_p, cd_perfil_p, null) INTO STRICT nr_ocorrencia_assoc_w, ds_horarios_assoc_w, ds_horarios_aux_w;

			ds_horarios_assoc_w := ds_horarios_assoc_w||ds_horarios_aux_w;

			if (ie_calcula_horarios_w) then
				nr_ocorrencia_assoc_w		:= 0;
			end if;
			
			ie_se_necessario_assoc_w	:= 'N';
			ie_acm_assoc_w				:= 'N';

			if (ie_administracao_assoc_w = 'N') then
				ie_se_necessario_assoc_w	:= 'S';
				hr_prim_horario_w		:= null;
				ds_horarios_assoc_w		:= 'SN';
			elsif (ie_administracao_assoc_w = 'C') then
				ie_acm_assoc_w			:= 'S';
				hr_prim_horario_w		:= null;
				ds_horarios_assoc_w		:= 'ACM';
			end if;

			qt_conversao_w := coalesce(obter_conversao_unid_med(cd_material_p, cd_unidade_medida_dose_p),0);
			cd_unidade_medida_consumo_w := coalesce(substr(obter_dados_material_estab(cd_material_p,cd_estabelecimento_p,'UMS'),1,30),cd_unidade_medida_dose_p);
			qt_unitaria_w	:= dividir(qt_dose_p,qt_conversao_w);
			qt_material_w	:= 0;
			SELECT * FROM obter_quant_dispensar(	cd_estabelecimento_p, cd_material_p, nr_prescricao_p, nr_sequencia_assoc_w, cd_intervalo_assoc_w, ie_via_aplicacao_assoc_w, qt_unitaria_w, 0, nr_ocorrencia_assoc_w, null, ie_origem_inf_p, cd_unidade_medida_consumo_w, 0, qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_ww, ie_se_necessario_assoc_w, ie_acm_assoc_w ) INTO STRICT qt_material_w, qt_total_dispensar_w, ie_regra_disp_w, ds_erro_ww;

			insert into prescr_material(
							nr_prescricao,
							nr_sequencia,
							ie_origem_inf,
							ie_agrupador,
							nr_sequencia_proc,
							cd_material,
							cd_unidade_medida_dose,
							cd_unidade_medida,
							qt_unitaria,
							qt_material,
							qt_dose,
							qt_total_dispensar,
							nr_ocorrencia,
							ie_via_aplicacao,
							cd_intervalo,
							hr_prim_horario,
							ds_horarios,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							ie_regra_disp,
							ie_acm,
							dt_inicio_medic,
							ie_se_necessario,
							ie_urgencia,
							nr_seq_mat_cpoe,
							nr_agrupamento,
							nr_sequencia_diluicao)
					values (
							nr_prescricao_p,
							nr_sequencia_assoc_w,
							ie_origem_inf_p,
							ie_agrupador_p,
							nr_seq_procedimento_w,
							cd_material_p,
							cd_unidade_medida_dose_p,
							cd_unidade_medida_consumo_w,
							qt_unitaria_w,
							qt_material_w,
							qt_dose_p,
							qt_total_dispensar_w,
							nr_ocorrencia_assoc_w,
							ie_via_aplicacao_assoc_w,
							cd_intervalo_assoc_w,
							hr_prim_horario_assoc_w,
							ds_horarios_assoc_w,
							dt_inicio_base_w,
							nm_usuario_w,
							dt_inicio_base_w,
							nm_usuario_nrec_w,
							ie_regra_disp_w,
							ie_acm_assoc_w,
							dt_inicio_assoc_w,
							ie_se_necessario_assoc_w,
							CASE WHEN coalesce(ie_urgencia_assoc_w::text, '') = '' THEN 'N'  ELSE 'S' END ,
							nr_seq_mat_cpoe_assoc_w,
							nr_agrupamento_w,
							nr_seq_diluicao_p);
			
			nr_sequencia_princ_p	:= nr_sequencia_assoc_w;
		end;

	begin
    	open cMateriaisAssoc;
		loop
		fetch cMateriaisAssoc into
			cd_material_assoc_w,
			qt_dose_assoc_w,
			ie_via_aplicacao_assoc_w,
			cd_unidade_medida_assoc_w,
			cd_mat_recons_assoc_w,
			qt_dose_recons_assoc_w,
			cd_unid_med_recons_assoc_w,
			cd_mat_dil_assoc_w,
			qt_dose_dil_assoc_w,
			cd_unid_med_dil_assoc_w,
			cd_intervalo_assoc_w,
			ie_administracao_assoc_w,
			dt_inicio_assoc_w,
			hr_prim_horario_assoc_w,
			ie_urgencia_assoc_w,
			ds_horarios_assoc_w,
			ds_obser_hemo_assoc_w;
		EXIT WHEN NOT FOUND; /* apply on cMateriaisAssoc */
			begin
			
			select	max(nr_sequencia),
				max(dt_lib_suspensao)
			into STRICT	nr_seq_mat_cpoe_assoc_w,
				dt_lib_suspensao_w
			from	cpoe_material
			where	nr_seq_hemoterapia = nr_sequencia_p
			and	cd_material = cd_material_assoc_w;

			if (dt_lib_suspensao_w IS NOT NULL AND dt_lib_suspensao_w::text <> '') then
				goto proximo_associado;
			end if;

				gerar_item_medicacao(cd_material_assoc_w, cd_unidade_medida_assoc_w, qt_dose_assoc_w, 1, null, nr_sequencia_princ_w);
				
				if (cd_mat_recons_assoc_w IS NOT NULL AND cd_mat_recons_assoc_w::text <> '') then
					gerar_item_medicacao(cd_mat_recons_assoc_w, cd_unid_med_recons_assoc_w, qt_dose_recons_assoc_w, 9, nr_sequencia_princ_w, nr_seq_w);
				end if;
				
				if (cd_mat_dil_assoc_w IS NOT NULL AND cd_mat_dil_assoc_w::text <> '') then
					gerar_item_medicacao(cd_mat_dil_assoc_w, cd_unid_med_dil_assoc_w, qt_dose_dil_assoc_w, 3, nr_sequencia_princ_w, nr_seq_w);
				end if;
			
				<<proximo_associado>>
				commit;
			end;
		end loop;
		close cMateriaisAssoc;
	end;
	
begin

	open cProcedimentos;
	loop
	fetch cProcedimentos into
		nr_seq_hemo_cpoe_w,
		cd_doenca_cid_w,
		ds_doenca_cid_w,
		ie_trans_anterior_w,
		dt_ultima_transf_w,
		nr_seq_reacao_w,
		ie_gravidez_w,
		qt_gravidez_w,
		qt_aborto_w,
		ie_tipo_paciente_w,
		ie_porte_cirurgico_w,
		qt_hemoglobina_w,
		qt_hematocrito_w,
		qt_plaqueta_w,
		qt_tap_w,
		qt_tap_inr_w,
		qt_ttpa_w,
		qt_ttpa_rel_w,
		qt_fibrinogenio_w,
		ie_tipo_w,
		dt_programada_w,
		ie_urgencia_w,
		ie_tipo_hemoterap_w,
		dt_cirurgia_w,
		nr_seq_derivado_reac_w,
		ds_observacao_w,
		nm_usuario_w,
		nm_usuario_nrec_w,
		dt_atualizacao_w,
		dt_atualizacao_nrec_w,
		nr_seq_derivado_w,
		ie_via_aplicacao_w,
		ie_origem_proced_w,
		cd_procedimento_w,
		nr_seq_proc_interno_w,
		qt_procedimento_w,
		cd_intervalo_w,
		ie_aliquotado_w,
		ie_filtrado_w,
		ie_irradiado_w,
		ie_lavado_w,
		ie_fenotipado_w,
		ds_justificativa_w,
		ds_horarios_w,
		nr_ocorrencia_w,
		qt_vol_hemocomp_w,
		qt_hora_min_infusao_w,
		qt_veloc_inf_hemo_w,
		ie_unid_med_hemo_w,
		dt_inicio_orig_w,
		nr_seq_indicacao1_w,
		nr_seq_indicacao2_w,
		ie_reserva_w,
		qt_albumina_w,
		qt_calcio_w,
		qt_magnesio_w,
		qt_bilirrubina_dir_w,
		qt_bilirrubina_ind_w,
		qt_hemoglobina_s_w,
		qt_leucocitos_w,
		ie_coombs_direto_w,
		ds_coagulopatia_w,
        ie_reserva_presc_proced_w,
		dt_fim_proc_w;
	EXIT WHEN NOT FOUND; /* apply on cProcedimentos */
		begin
		hr_prim_horario_w := to_char(dt_programada_w,'hh24:mi');
      nr_seq_prescr_sangue_w := null;
      if ((cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and
            (ie_origem_proced_w IS NOT NULL AND ie_origem_proced_w::text <> '') and
            coalesce(nr_seq_proc_interno_w::text, '') = '') then
			
			select	max(a.nr_sequencia)
			into STRICT	nr_seq_proc_interno_w
			from	proc_interno a,
				procedimento b
			where	a.cd_procedimento	= b.cd_procedimento
			and	a.ie_origem_proced	= b.ie_origem_proced
			and a.ie_tipo = 'BS'
			and	a.cd_procedimento	= cd_procedimento_w
			and	a.ie_origem_proced	= ie_origem_proced_w;
			
      end if;

      if (coalesce(nr_seq_prescr_sangue_w::text, '') = '') then
          begin
            --Insert Hemoterapia
            select	nextval('prescr_solic_bco_sangue_seq')
            into STRICT	nr_seq_prescr_sangue_w
;

            insert into prescr_solic_bco_sangue( nr_sequencia,
                                nr_seq_hemo_cpoe,
                                nr_prescricao,
                                nm_usuario,
                                dt_atualizacao,
                                cd_doenca_cid,
								ds_diagnostico,
                                ie_trans_anterior,
                                dt_ultima_transf,
                                nr_seq_reacao,
                                ie_gravidez,
                                qt_gravidez,
                                qt_aborto,
                                ie_tipo_paciente,
                                ie_porte_cirurgico,
                                qt_hemoglobina,
                                qt_hematocrito,
                                qt_plaqueta,
                                qt_tap,
                                qt_tap_inr,
                                qt_ttpa,
                                qt_ttpa_rel,
                                qt_fibrinogenio,
                                ie_tipo,
                                dt_programada,
                                dt_cirurgia,
								ie_reserva,
								qt_albumina, 
								qt_calcio, 
								qt_magnesio, 
								qt_bilirrubina_dir, 
								qt_bilirrubina_ind, 
								qt_hemoglobina_s,
								qt_leucocitos,
								ie_coombs_direto,
								ds_coagulopatia)
                            values (
                                nr_seq_prescr_sangue_w,
                                nr_seq_hemo_cpoe_w,
                                nr_prescricao_p,
                                nm_usuario_p,
                                clock_timestamp(),
                                cd_doenca_cid_w,
								ds_doenca_cid_w,
                                ie_trans_anterior_w,
                                dt_ultima_transf_w,
                                nr_seq_reacao_w,
                                ie_gravidez_w,
                                qt_gravidez_w,
                                qt_aborto_w,
                                CASE WHEN ie_tipo_paciente_w='C' THEN  'CL'  ELSE 'CI' END ,
                                ie_porte_cirurgico_w,
                                qt_hemoglobina_w,
                                qt_hematocrito_w,
                                qt_plaqueta_w,
                                qt_tap_w,
                                qt_tap_inr_w,
                                qt_ttpa_w,
                                qt_ttpa_rel_w,
                                qt_fibrinogenio_w,
                                ie_tipo_w,
                                dt_programada_w,
                                dt_cirurgia_w,
								ie_reserva_w,
								qt_albumina_w,
								qt_calcio_w,
								qt_magnesio_w,
								qt_bilirrubina_dir_w,
								qt_bilirrubina_ind_w,
								qt_hemoglobina_s_w,
								qt_leucocitos_w,
								ie_coombs_direto_w,
								ds_coagulopatia_w);
                            commit;
          end;
      end if;

			--Insert Indicacoes Clinicas
			if ( nr_seq_indicacao1_w > 0) then
				gerar_indicacao_clinicas(nr_seq_prescr_sangue_w, nr_seq_indicacao1_w);
			end if;

			if ( nr_seq_indicacao2_w > 0) then
				gerar_indicacao_clinicas(nr_seq_prescr_sangue_w, nr_seq_indicacao2_w);
			end if;

			-- Insert Hemocomponente ou Procedimento
			cd_categoria_w 		:= obter_Categoria_Atendimento(nr_atendimento_p);
			ie_tipo_atendimento_w 	:= obter_tipo_atendimento(nr_atendimento_p);
			ie_tipo_conv_w 		:= obter_tipo_convenio(cd_convenio_p);

			--Buscar informacoes do hemocompoente
			if ( coalesce(cd_procedimento_w::text, '') = '') then
				SELECT * FROM Obter_Proced_sangue(0, nr_seq_derivado_w, cd_estabelecimento_p, ie_tipo_atendimento_w, ie_tipo_conv_w, cd_convenio_p, cd_categoria_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w) INTO STRICT cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w;
			end if;

			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
				SELECT * FROM Obter_Proc_Tab_Interno(nr_seq_proc_interno_w, nr_prescricao_p, nr_atendimento_p, 0, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp()) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
			end if;

			qt_hora_infusao_ww :=  (substr(qt_hora_min_infusao_w,1,2))::numeric;
			
			if (qt_hora_infusao_ww > 0) then
				
				qt_hora_infusao_w := (substr(qt_hora_min_infusao_w,1,2))::numeric;
				qt_tempo_infusao_w := (substr(qt_hora_min_infusao_w,4,5))::numeric;
					
			end if;


			ie_calcula_horarios_w	:= false;
			dt_inicio_w		:= coalesce(dt_programada_w,dt_inicio_orig_w);
			ie_administrar_w 	:= null;
			dt_inicio_base_w	:= trunc( dt_inicio_prescr_p ,'mi');
			nr_horas_prox_geracao_w	:= 6;


			-- Definir 1 horario, caso este nao tenha sido definido pelo usuario.
			if (coalesce(hr_prim_horario_w::text, '') = '') then
				hr_prim_horario_w	:= to_char(dt_inicio_base_w,'hh24:mi');
				ie_calcula_horarios_w	:= true;
			end if;

			-- Atualiza a data inicio com dia e horario.
			dt_inicio_w	:= to_date(to_char(dt_inicio_w,'dd/mm/yyyy ') || hr_prim_horario_w,'dd/mm/yyyy hh24:mi');

			select 	max(nr_seq_exame_lab)
			into STRICT	nr_seq_exame_w
			from  	proc_interno
			where	nr_sequencia = nr_seq_proc_interno_w;


			if ( coalesce(nr_seq_exame_w::text, '') = '') then
				dt_entrega_w  := Obter_Entrega_Laudo( nr_prescricao_p, dt_inicio_w, nr_seq_proc_interno_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_p, nm_usuario_p, dt_entrega_w );
			else
				dt_prevista_retorno_w  := Atualiza_dt_realizacao_exame(nr_seq_exame_w, nr_prescricao_p, dt_inicio_w, dt_prevista_retorno_w );

				if (to_char(dt_prevista_retorno_w,'hh24:mi:ss') <> '00:00:00')  then
				   dt_inicio_w	:= dt_prevista_retorno_w;
				elsif (ie_acm_w = 'N') and (ie_se_necessario_w = 'N')	then
				   dt_inicio_w	:= dt_prevista_retorno_w;
				end if;
			end if;

			-- Atualizar data de inicio com a data atual, para itens que a data de inicio ja tenha sido ultrapassada.
			if (dt_inicio_w < dt_inicio_base_w) then
				-- Assumir data da prescricao para o item
				dt_inicio_w		:= to_date(to_char(dt_inicio_base_w,'dd/mm/yyyy ') || hr_prim_horario_w, 'dd/mm/yyyy hh24:mi');
				-- Adicionar um dia, caso o inicio do item, nao caia na data de hoje
				if (dt_inicio_w < dt_inicio_base_w) then
					dt_inicio_w	:= dt_inicio_w+1;
				end if;
				ie_calcula_horarios_w	:= true;
			end if;

			dt_proxima_dose_w := dt_inicio_w;

			-- Recalcula os horarios do item, caso a data de inicio, nao seja a mesma da tabela de CPOE_PROCEDIMENTO
			if (ie_calcula_horarios_w) then
				/* Retirado conforme conversa com o Analista de Sistemas Philippe e a Analista de Negocios Jacqueline, pois a Hemoterapia nao copia				
				
				CPOE_Prever_horarios_futuros(		nr_atendimento_p,	 nr_prescricao_p,	 nr_sequencia_p,
									'prescr_procedimento',	'nr_seq_proc_cpoe',	'prescr_proc_hor',
									'nr_seq_procedimento',	'cpoe_procedimento',	dt_inicio_base_w,
									dt_proxima_dose_w,	dt_fim_w,		cd_intervalo_w,
									ds_horarios_w,		nr_ocorrencia_w,	hr_prim_horario_w,
									cd_estabelecimento_p,	cd_perfil_p,		nm_usuario_p,
									null,			null,			cd_procedimento_w,
									cd_procedimento_w,	nr_seq_proc_interno_w,	ie_origem_proced_w);*/


				-- Localizar ultima prescricao e item
				select	max(a.nr_prescricao)
				into STRICT	nr_prescricao_orig_w
				from	prescr_medica a
				where	((a.nr_atendimento = nr_atendimento_p) or (a.cd_pessoa_fisica = cd_pessoa_fisica_p and coalesce(a.nr_atendimento::text, '') = ''))
				and		a.dt_prescricao > dt_inicio_base_w - 10
				and		exists (	SELECT	1
								from	prescr_procedimento b
								where	b.nr_seq_proc_cpoe = nr_sequencia_p
								and		b.nr_prescricao = a.nr_prescricao );

				select	min(nr_sequencia)
				into STRICT	nr_sequencia_orig_w
				from	prescr_procedimento
				where	nr_seq_proc_cpoe = nr_sequencia_p
				and		nr_prescricao = nr_prescricao_orig_w;
			end if;

			ie_administrar_w	:= null;
			dt_prox_geracao_w	:= null;

			-- Caso a data de inicio do item maior que data fim de base do item, reprogramar geracao do item.

			--  A prescricao deste item, deve ser gerada diariamente, independente de sua administracao.
			if (dt_proxima_dose_w > dt_inicio_base_w + 1 - 1/24/60/60) then
				dt_prox_geracao_w	:= trunc(dt_inicio_base_w + abs(mod(dt_proxima_dose_w - dt_inicio_base_w,24))/24 + 1,'hh24');
				ie_administrar_w	:= 'N';

				select	coalesce(max('S'),'N')
				into STRICT	ie_administrar_w
				from	prescr_procedimento item
				where	item.nr_prescricao = nr_prescricao_orig_w
				and		item.nr_sequencia = nr_sequencia_orig_w
				and		coalesce(item.ie_administrar,'N') = 'N'
				and		exists (	SELECT	1
								from	prescr_proc_hor horario
								where	horario.nr_prescricao = item.nr_prescricao
								and		horario.nr_seq_procedimento = item.nr_sequencia
								and		horario.dt_horario = dt_inicio_w
								);

				if (ie_administrar_w = 'S') then
					update	cpoe_procedimento
					set	dt_prox_geracao = dt_prox_geracao_w
					where	nr_sequencia = nr_sequencia_p;
					commit;
					goto proximo_item;
				end if;
			else
				dt_inicio_w		:= dt_proxima_dose_w;
				dt_proxima_dose_w	:= null;
			end if;
	
			-- Se o inicio do item for apos a data de fim, definida para o mesmo, este item nao deve ser mais copiado.
			if (dt_fim_w IS NOT NULL AND dt_fim_w::text <> '') and (dt_fim_w <= dt_inicio_w) then
				goto proximo_item;
			end if;
			
			-- Retornar a maior data de inicio dos itens.
			if	((coalesce(dt_inicio_ret_p::text, '') = '') or (dt_inicio_w > dt_inicio_ret_p)) then
				dt_inicio_ret_p	:= dt_inicio_w;
			end if;

			ie_se_necessario_w := 'N';
			ie_acm_w := 'N';

			if (ie_administracao_w = 'N') then
				ie_se_necessario_w	:= 'S';
				hr_prim_horario_w	:= null;
				ds_horarios_w		:= 'SN';
			elsif (ie_administracao_w = 'C') then
				ie_acm_w		:= 'S';
				hr_prim_horario_w	:= null;
				ds_horarios_w		:= 'ACM';
			elsif (coalesce(ds_horarios_w::text, '') = '') then
				ds_horarios_w := hr_prim_horario_w;
			end if;

			--obter_procedimento_tab_interna ( nr_seq_proc_interno_w, cd_convenio_p, cd_estabelecimento_p, dt_atualizacao_w, cd_procedimento_w, ie_origem_proced_w );
			SELECT * FROM tiss_obter_guia( '4', null, nr_doc_convenio_w, 'N', null, null, null, null, null, ie_guia_w, null, nr_prescricao_p, null, cd_setor_atendimento_p, null, nr_prescricao_p, null, null, null, null, nr_seq_proc_interno_w, null, cd_procedimento_w, ie_origem_proced_w, null, null ) INTO STRICT nr_doc_convenio_w, ie_guia_w;

			if (cd_setor_atendimento_p IS NOT NULL AND cd_setor_atendimento_p::text <> '') and (obter_se_setor_exec( cd_setor_atendimento_p, cd_estabelecimento_p, cd_procedimento_w, ie_origem_proced_w, nr_seq_proc_interno_w ) = 'S')then
				cd_setor_atendimento_w := cd_setor_atendimento_p;
			end if;

			begin
				if (obter_se_gerar_setor_rotina(cd_estabelecimento_p,924,cd_procedimento_w,ie_origem_proced_w,nr_seq_proc_interno_w,nr_seq_exame_w,cd_setor_atendimento_p,nm_usuario_p) = 'S') then
					cd_setor_atendimento_w := obter_setor_atend_proc(cd_estabelecimento_p,cd_procedimento_w,ie_origem_proced_w,null,cd_setor_atendimento_w,null,nr_seq_proc_interno_w, nr_atendimento_p);
				end if;
			exception when others then
				cd_setor_atendimento_w := null;
			end;
			
			if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
				select ie_tipo
				into STRICT ie_tipo_proced_w 
				from proc_interno 
				where nr_sequencia = nr_seq_proc_interno_w;
			else
				ie_tipo_proced_w := 'BSHE';
			end if;
			
			select	coalesce(max(nr_sequencia),0) + 1
			  into STRICT	nr_seq_procedimento_w
			  from	prescr_procedimento
			 where	nr_prescricao = nr_prescricao_p;

             ie_util_hemocomponente_w := '';
             
             if (ie_reserva_presc_proced_w = 'N')then
                   ie_util_hemocomponente_w := 'C';
             elsif (ie_reserva_presc_proced_w = 'S')then
                   ie_util_hemocomponente_w := 'R';
             end if;

			insert into prescr_procedimento(	nr_seq_proc_cpoe,
								nr_sequencia,
								nr_prescricao,
								nr_seq_solic_sangue,
								nr_seq_derivado,
								ie_via_aplicacao,
								cd_procedimento,
								qt_procedimento,
								ie_origem_proced,
								cd_intervalo,
								ie_aliquotado,
								ie_filtrado,
								ie_irradiado,
								ie_lavado,
								ie_fenotipado,
								ds_justificativa,
								ds_horarios,
								nr_ocorrencia,
								qt_vol_hemocomp,
								qt_veloc_inf_hemo,
								ie_unid_med_hemo,
								qt_hora_infusao,
								qt_tempo_infusao,
								cd_setor_atendimento,
								ie_origem_inf,
								ds_observacao,
								dt_prev_execucao,
								ie_se_necessario,
								ie_acm,
								nr_seq_proc_interno,
								dt_resultado,
								nr_doc_convenio,
								nr_seq_exame,
								cd_motivo_baixa,
								ie_tipo_proced,
								dt_inicio,
								dt_fim,
								ie_administrar,
								dt_proxima_dose,
								ie_urgencia,
								nr_prescricao_original,
								nr_seq_anterior,
								nm_usuario,
								nm_usuario_nrec,
								dt_atualizacao,
								dt_atualizacao_nrec,
                                ie_util_hemocomponente)
							values (
								nr_seq_hemo_cpoe_w,
								nr_seq_procedimento_w,
								nr_prescricao_p,
								nr_seq_prescr_sangue_w,								
								nr_seq_derivado_w,
								ie_via_aplicacao_w,
								cd_procedimento_w,
								coalesce(qt_procedimento_w,1),
								ie_origem_proced_w,
								cd_intervalo_w,
								ie_aliquotado_w,
								ie_filtrado_w,
								ie_irradiado_w,
								ie_lavado_w,
								ie_fenotipado_w,
								ds_justificativa_w,
								ds_horarios_w,
								nr_ocorrencia_w,
								qt_vol_hemocomp_w,
								qt_veloc_inf_hemo_w,
								ie_unid_med_hemo_w,
								qt_hora_infusao_w,
								qt_tempo_infusao_w,
								cd_setor_atendimento_w,
								ie_origem_inf_p,
								ds_observacao_w,
								dt_inicio_w,
								ie_se_necessario_w,
								ie_acm_w,
								nr_seq_proc_interno_w,
								dt_entrega_w,
								nr_doc_convenio_w,
								nr_seq_exame_w,
								0,
								ie_tipo_proced_w,
								dt_inicio_base_w,
								dt_inicio_base_w,
								ie_administrar_w,
								dt_proxima_dose_w,
								ie_urgencia_w,
								nr_prescricao_orig_w,
								nr_sequencia_orig_w,
								nm_usuario_w,
								nm_usuario_w,
								clock_timestamp(),
								clock_timestamp(),
                                ie_util_hemocomponente_w);

			<<proximo_item>>
			commit;

			CALL Gerar_Solic_testes(nr_seq_derivado_w, nr_prescricao_p, nr_seq_prescr_sangue_w, nr_atendimento_p, cd_estabelecimento_p, nm_usuario_p, dt_prox_geracao_w, cd_intervalo_w );
			CPOE_Inserir_materiais_assoc;

		end;
	end loop;
	close cProcedimentos;

CALL reordenar_procedimento(nr_prescricao_p);

exception when others then
	CALL gravar_log_cpoe(substr('CPOE_INSERIR_HEMOTERAPIA_REG EXCEPTION:'||substr(to_char(sqlerrm),1,2000)
		||'nr_atendimento_p:'||nr_atendimento_p||'cd_estabelecimento_p'||cd_estabelecimento_p
		||'cd_perfil_p:'||cd_perfil_p||'nm_usuario_p : '||nm_usuario_p||'cd_setor_atendimento_p'||cd_setor_atendimento_p
		||'ie_origem_inf_p:'||ie_origem_inf_p
		||'dt_inicio_prescr_p :'||to_char(dt_inicio_prescr_p,'dd/mm/yyyy hh24:mi:ss')
		||'dt_inicio_ret_p :'||to_char(dt_inicio_ret_p,'dd/mm/yyyy hh24:mi:ss'),1,2000),
		nr_atendimento_p, 'H', nr_sequencia_p);
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cpoe_inserir_hemoterapia_reg ( nr_atendimento_p atendimento_paciente.nr_atendimento%type, cd_pessoa_fisica_p pessoa_fisica.cd_pessoa_fisica%type, nr_prescricao_p prescr_medica.nr_prescricao%type, nr_sequencia_p cpoe_hemoterapia.nr_sequencia%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, cd_perfil_p perfil.cd_perfil%type, nm_usuario_p usuario.nm_usuario%type, cd_setor_atendimento_p setor_atendimento.cd_setor_atendimento%type, ie_origem_inf_p prescr_medica.ie_origem_inf%type, cd_convenio_p convenio.cd_convenio%type, dt_inicio_prescr_p timestamp, dt_inicio_ret_p INOUT timestamp) FROM PUBLIC;

