-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_evolucao_cirurgia ( nr_cirurgia_p bigint, nr_sequencia_p bigint, nm_usuario_p text, nr_seq_pepo_p bigint default null) AS $body$
DECLARE


cd_evolucao_w		bigint;
nr_atendimento_w	bigint;
ie_tipo_evolucao_w	varchar(3);
ds_diagnostico_w	varchar(2000);
ds_resumo_cirurgia_w	varchar(2000);
ds_diagnostico_pos_w	varchar(2000);
ds_exame_rad_w		varchar(2000);
ds_exame_anatomo_w	varchar(2000);
ds_cirurgia_w		varchar(32000);
cd_responsavel_w	varchar(10);
dt_liberacao_w		timestamp;
qt_controle_chr_w	bigint;
ds_pos_inicio_rtf_w	bigint;
ds_resumo_w		varchar(32000);
ds_conteudo_w		varchar(32000);
ie_evolucao_clinica_w	varchar(3);
cd_estabelecimento_w	smallint;
cd_pessoa_fisica_w	varchar(10);
ie_html_w			varchar(1);
qt_tamanho_w		bigint;
qt_posicao_w		bigint;
cd_perfil_w			perfil.cd_perfil%type := wheb_usuario_pck.get_cd_perfil;
ds_achados_operatorios_w   	varchar(2000);
ds_intercorrencia_w               	varchar(2000);
ds_po_imediato_w                 	varchar(2000);


expressao1_w	varchar(255);
expressao2_w	varchar(255);
expressao3_w	varchar(255);
expressao4_w	varchar(255);
expressao5_w	varchar(255);
expressao6_w    varchar(255);
expressao7_w    varchar(255);
expressao8_w  	varchar(255);


BEGIN

expressao1_w := obter_desc_expressao_idioma(287710, null, wheb_usuario_pck.get_nr_seq_idioma);--Diagnostico pro-operatorio
expressao2_w := obter_desc_expressao_idioma(774087, null, wheb_usuario_pck.get_nr_seq_idioma);--Cirurgia resumida
expressao3_w := obter_desc_expressao_idioma(287709, null, wheb_usuario_pck.get_nr_seq_idioma);--Diagnostico pos-operatorio
expressao4_w := obter_desc_expressao_idioma(289718, null, wheb_usuario_pck.get_nr_seq_idioma);--Exame radiologico
expressao5_w := obter_desc_expressao_idioma(289686, null, wheb_usuario_pck.get_nr_seq_idioma);--Exame anatomopatologico
expressao6_w := obter_desc_expressao_idioma(283146, null, wheb_usuario_pck.get_nr_seq_idioma);--Achados operatorios
expressao7_w := obter_desc_expressao_idioma(292148, null, wheb_usuario_pck.get_nr_seq_idioma);--Intercorroncia
expressao8_w := obter_desc_expressao_idioma(730815, null, wheb_usuario_pck.get_nr_seq_idioma);--Pos operatorio imediato
if (coalesce(nr_cirurgia_p,0) > 0) then
	select	coalesce(max(cd_estabelecimento),0)
	into STRICT		cd_estabelecimento_w
	from		cirurgia
	where		nr_cirurgia	=	nr_cirurgia_p;
else	
	cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
end if;	

ie_evolucao_clinica_w := obter_param_usuario(872, 53, cd_perfil_w, nm_usuario_p, cd_estabelecimento_w, ie_evolucao_clinica_w);	

select	cd_responsavel,
		ds_diagnostico,
		ds_resumo_cirurgia,
		ds_diagnostico_pos,
		ds_exame_rad,
		ds_exame_anatomo,
		ds_cirurgia,
		dt_liberacao,
		ds_achados_operatorios,
		ds_intercorrencia,
		ds_po_imediato
into STRICT	cd_responsavel_w,
		ds_diagnostico_w,
		ds_resumo_cirurgia_w,
		ds_diagnostico_pos_w,
		ds_exame_rad_w,
		ds_exame_anatomo_w,
		ds_cirurgia_w,
		dt_liberacao_w,
		ds_achados_operatorios_w,
    		ds_intercorrencia_w,
    		ds_po_imediato_w
from	cirurgia_descricao
where	nr_sequencia	=	nr_sequencia_p;

if (coalesce(nr_cirurgia_p,0) > 0) then
	select	max(nr_atendimento),
				max(cd_pessoa_fisica)
	into STRICT		nr_atendimento_w,
				cd_pessoa_fisica_w
	from		cirurgia
	where		nr_cirurgia	=	nr_cirurgia_p;
else	
	select	max(nr_atendimento),
				max(cd_pessoa_fisica)
	into STRICT		nr_atendimento_w,
				cd_pessoa_fisica_w
	from		pepo_cirurgia
	where		nr_sequencia	=	nr_seq_pepo_p;
end if;	

select	max(ie_tipo_evolucao)
into STRICT	ie_tipo_evolucao_w
from	usuario
where	nm_usuario = nm_usuario_p;

if (coalesce(ie_tipo_evolucao_w::text, '') = '') then
	CALL wheb_mensagem_pck.Exibir_Mensagem_Abort(231834);
	--r a i s e _application_error(-20011,'Tipo de evolucao nao informado para este usuario');
end if;

if (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') then
	select	nextval('evolucao_paciente_seq')
	into STRICT	cd_evolucao_w
	;
	
	if (position('{\rtf' in ds_cirurgia_w) = 0) then	
		ds_cirurgia_w := wheb_rtf_pck.get_cabecalho ||chr(13)||chr(10)|| replace(ds_cirurgia_w, chr(13)||chr(10), chr(13)||chr(10)|| wheb_rtf_pck.get_quebra_linha) ||chr(13)||chr(10)|| wheb_rtf_pck.get_rodape;	
	end if;

	ds_resumo_w :=	substr((expressao1_w	|| chr(13) ||
			substr(ds_diagnostico_w,1,2000)	|| chr(13) || chr(13) ||
			expressao2_w 		|| chr(13) ||
			substr(ds_resumo_cirurgia_w,1,2000) 	|| chr(13) || chr(13) ||
			expressao3_w 	|| chr(13) ||
			substr(ds_diagnostico_pos_w,1,2000)	|| chr(13) || chr(13) ||
			expressao4_w 		|| chr(13) ||
			substr(ds_exame_rad_w,1,2000)	|| chr(13) || chr(13) ||
			expressao5_w 	|| chr(13) ||
			substr(ds_exame_anatomo_w,1,2000)	|| chr(13) || chr(13) ||
      			expressao6_w  	|| chr(13) ||
      			substr(ds_achados_operatorios_w,1,2000) || chr(13) || chr(13) ||
      			expressao7_w 	|| chr(13) ||
      			substr(ds_intercorrencia_w,1,2000) 	|| chr(13) || chr(13) ||
      			expressao8_w  	|| chr(13) ||
      			substr(ds_po_imediato_w,1,2000) 	|| chr(13) || chr(13)),1,32000);

	if (position('<HTML TASY="HTML5">' in upper(ds_cirurgia_w)) > 0)  then
		ie_html_w	:= 'S';
	else
		ie_html_w	:= 'N';
	end if;
			
	if (coalesce(ie_html_w,'N') = 'S') then
		qt_tamanho_w := length(ds_cirurgia_w);
		qt_posicao_w := position('<HTML TASY="HTML5">' in upper(ds_cirurgia_w));
		ds_cirurgia_w := substr(ds_cirurgia_w, qt_posicao_w,qt_tamanho_w);
		qt_posicao_w := position('</HTML>' in upper(ds_cirurgia_w));
		ds_cirurgia_w := substr(ds_cirurgia_w, 1, qt_posicao_w-1);
		
		ds_conteudo_w := '<html tasy="html5">' || ds_resumo_w || ds_cirurgia_w ||  '</html>';
	else
		if (ds_cirurgia_w IS NOT NULL AND ds_cirurgia_w::text <> '') then
			/*INICIO Substituir os caracteres CHR(13) e CHR(10) pelo \par que que representa o ENTER no RTF*/

			qt_controle_chr_w :=0;
					
			while( position(chr(13) in ds_resumo_w) > 0 ) and ( qt_controle_chr_w < 100 ) loop
					ds_resumo_w := replace(ds_resumo_w,chr(13),'\par ');
					qt_controle_chr_w := qt_controle_chr_w + 1;
			end loop;

			qt_controle_chr_w := 0;

			while( position(chr(10) in ds_resumo_w) > 0 ) and ( qt_controle_chr_w < 100 ) loop
					ds_resumo_w := replace(ds_resumo_w,chr(10),'');
					qt_controle_chr_w := qt_controle_chr_w + 1;
			end loop;
			/*FIM Substituir os caracteres CHR(13) e CHR(10) pelo \par que que representa o ENTER no RTF*/


			
			/*Pega o cabecalho do RTF*/

			
			if	((position('viewkind4\uc1\pard\qj\cf1\f0\fs20' in ds_cirurgia_w) > 0) or (position('viewkind4\uc1\pard\cf1\f0\fs16' in ds_cirurgia_w) > 0)  or (position('viewkind4\uc1\pard\cf1\fs' in ds_cirurgia_w) > 0) or (position('viewkind4\uc1\pard\cf1\b' in ds_cirurgia_w) > 0)) then
				begin /*tratamento para quando e inserido via meu texto padrao para nao quebrar o RTF, visto que quando usa APENAS o texto padrao, o RTF fica noutro padrao*/
				ds_conteudo_w := '{\rtf1\ansi\deff0{\fonttbl{\f0\fnil Arial;}{\f1\fnil\fcharset0 Arial;}}' ||
								'{\colortbl ;\red0\green0\blue0;}' ||
								'\viewkind4\uc1\pard\cf1\lang1046\f0\fs20 ';
									
				if (position('viewkind4\uc1\pard\qj\cf1\f0\fs20' in ds_cirurgia_w) > 0) then
					ds_pos_inicio_rtf_w := position('viewkind4\uc1\pard\qj\cf1\f0\fs20' in ds_cirurgia_w) + 34;
				elsif (position('viewkind4\uc1\pard\cf1\f0\fs16' in ds_cirurgia_w) > 0) then
					ds_pos_inicio_rtf_w := position('viewkind4\uc1\pard\cf1\f0\fs16' in ds_cirurgia_w) + 31;
				elsif (position('viewkind4\uc1\pard\cf1\fs' in ds_cirurgia_w) > 0) then
					ds_pos_inicio_rtf_w := position('viewkind4\uc1\pard\cf1\fs' in ds_cirurgia_w) + 28;
				elsif (position('viewkind4\uc1\pard\cf1\b' in ds_cirurgia_w) > 0) then
					ds_pos_inicio_rtf_w := position('viewkind4\uc1\pard\cf1\b' in ds_cirurgia_w) + 22;					
				end if;
				
				end;
			elsif ((position('{\rtf1\ansi\' in ds_cirurgia_w) = 1) and (position('lang' in ds_cirurgia_w) = 0)) then
				begin
				ds_pos_inicio_rtf_w := 12;
				ds_conteudo_w := substr(ds_cirurgia_w,1,ds_pos_inicio_rtf_w) || 'fs20 ';
				end;
			else /* esta parte ficou como era antes, para nao impactar nos clientes que usam corretamente*/
				begin
				ds_pos_inicio_rtf_w := position('lang' in ds_cirurgia_w)+8;
				ds_conteudo_w := substr(ds_cirurgia_w,1,ds_pos_inicio_rtf_w) || 'fs20 ';
				end;
			end if;
					
			/*Acrecenta conteudo texto livre*/

			ds_conteudo_w := ds_conteudo_w || ds_resumo_w;
			/*Acrecenta resto do conteudo do RTF*/

			ds_conteudo_w := ds_conteudo_w || '\par '|| substr(ds_cirurgia_w,ds_pos_inicio_rtf_w,length(ds_cirurgia_w));
		else
			ds_conteudo_w := ds_resumo_w;
		end if;
	end if;
	
	insert into evolucao_paciente(
		cd_evolucao,
		dt_evolucao,
		ie_tipo_evolucao,
		cd_pessoa_fisica,
		dt_atualizacao,
		nm_usuario,
		nr_atendimento,
		ds_evolucao,
		cd_medico,
		dt_liberacao,
		ie_evolucao_clinica,
		cd_especialidade_medico,
		ie_recem_nato,
		ie_situacao,
		nr_cirurgia,
		nr_seq_pepo,
		dt_atualizacao_nrec,
		nm_usuario_nrec)
	values (
		cd_evolucao_w,
		clock_timestamp(),
		ie_tipo_evolucao_w,
		cd_pessoa_fisica_w,
		clock_timestamp(),
		nm_usuario_p,
		nr_atendimento_w,
		ds_conteudo_w,
		cd_responsavel_w,
		dt_liberacao_w,
		ie_evolucao_clinica_w,
		obter_especialidade_medico(cd_responsavel_w, 'C'),
		'N',
		'A',
		nr_cirurgia_p,
		nr_seq_pepo_p,
		clock_timestamp(),
		nm_usuario_p);
		
	update	cirurgia_descricao
	set	cd_evolucao 	= cd_evolucao_w
	where	nr_sequencia	= nr_sequencia_p;
	
			
	commit;
end if;	


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evolucao_cirurgia ( nr_cirurgia_p bigint, nr_sequencia_p bigint, nm_usuario_p text, nr_seq_pepo_p bigint default null) FROM PUBLIC;

