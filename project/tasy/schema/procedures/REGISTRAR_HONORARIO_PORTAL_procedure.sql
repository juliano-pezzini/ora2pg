-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE registrar_honorario_portal (nr_atendimento_p bigint, nr_seq_proc_interno_p bigint, dt_item_p timestamp, cd_medico_executor_p text, ie_erro_p INOUT text, nr_seq_proced_p INOUT bigint, nm_usuario_p text) AS $body$
DECLARE

			 
-- Projeto: Registrar Honoários Médicos da Retaguarda Através do Portal do Médico.	 
-- OS 599236 
/* Requisito: Parâmetros de Entrada 
	 Número do Atendimento: 
	 Código do procedimento Interno: 
	 Data do item na conta: DT_PROCEDIMENTO e DT_CONTA 
	 Médico: CD_MEDICO_EXECUTOR*/
 
 
cd_convenio_w				integer;
cd_categoria_w				varchar(10);
nr_doc_convenio_w			varchar(30);
ie_tipo_guia_w				varchar(30);
cd_senha_w				varchar(30);
nr_seq_atepacu_atual_w			bigint;
dt_entrada_unidade_w			timestamp;
cd_setor_atendimento_w			bigint;
cd_procedimento_w			bigint;
ie_origem_proced_w			bigint;
cd_estabelecimento_w			smallint;
cd_plano_w				varchar(10);
ie_classificacao_w			varchar(1);
ie_tipo_atendimento_w			smallint;
ie_medico_executor_w			varchar(2);
cd_cgc_prestador_w			varchar(14);
cd_medico_executor_w			varchar(10);	
cd_profissional_w			varchar(10);	
cd_pessoa_fisica_w			varchar(10);	
nr_seq_classificacao_w			bigint;
ie_clinica_w				integer;
ie_funcao_medico_w			varchar(10)	:= 0;
cd_espec_medica_w			integer	:= 0;
ie_via_acesso_w				varchar(1);	
nr_seq_w				bigint;
sql_err_w				varchar(2000);
dt_fim_conta_w				timestamp;
ie_fim_conta_w				varchar(1);
ie_erro_w				varchar(1):= 'N';
	

BEGIN 
 
ie_erro_w		:= 'N';
cd_procedimento_w	:= 0;	
ie_origem_proced_w	:= 0;
--Inicio do bloco de Tratamento de excessão 
begin	 
-- Obter o Convênio de Execução 
SELECT * FROM Obter_Convenio_Execucao(nr_atendimento_p, dt_item_p, cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w) INTO STRICT cd_convenio_w, cd_categoria_w, nr_doc_convenio_w, ie_tipo_guia_w, cd_senha_w;
 
--Buscar plano do atendimento 
select 	Obter_Plano_Atendimento(nr_atendimento_p,'C') 
into STRICT	cd_plano_w
;
 
--Buscar dados do atendimento 
select 	max(cd_estabelecimento), 
	max(ie_tipo_atendimento), 
	max(nr_seq_classificacao), 
	max(ie_clinica), 
	max(dt_fim_conta), 
	max(ie_fim_conta) 
into STRICT	cd_estabelecimento_w, 
	ie_tipo_atendimento_w, 
	nr_seq_classificacao_w, 
	ie_clinica_w, 
	dt_fim_conta_w, 
	ie_fim_conta_w 
from 	atendimento_paciente 
where 	nr_atendimento = nr_atendimento_p;
 
/* Buscar a Unidade do paciente conforme regra de negócio abaixo 
Regra de negócio:  Para Lançamento de visitas e procedimentos, iremos filtrar o setor que o paciente estava na data do lançamento. 
	     Para consulta do PA, vamos pesquisar o setor de atendimento do PA para lançar, pois temos mais de um. 
*/
 
if (ie_tipo_atendimento_w = 3) then 
	select	coalesce(max(a.nr_seq_interno),0) 
	into STRICT	nr_seq_atepacu_atual_w 
	from 	atend_paciente_unidade a, 
		setor_atendimento 	c 
	where	a.nr_atendimento 		= nr_atendimento_p 
	and 	a.cd_setor_atendimento		= c.cd_setor_atendimento 
	and 	c.cd_classif_setor = 1 
	and 	coalesce(a.dt_saida_unidade, a.dt_entrada_unidade + 9999)	= (SELECT max(coalesce(b.dt_saida_unidade, b.dt_entrada_unidade + 9999)) 
									  from  atend_paciente_unidade 	b, 
										  setor_atendimento 		d 
									  where b.nr_atendimento = nr_atendimento_p 
									  and  b.cd_setor_atendimento = d.cd_setor_atendimento 
									  and  d.cd_classif_setor = 1);
else 
	select	coalesce(max(a.nr_seq_interno),0) 
	into STRICT	nr_seq_atepacu_atual_w 
	from 	atend_paciente_unidade a, 
		setor_atendimento 	c 
	where	a.nr_atendimento 		= nr_atendimento_p 
	and 	a.cd_setor_atendimento		= c.cd_setor_atendimento 
	and 	c.cd_classif_setor in (3,4,8) 
	and 	coalesce(a.dt_saida_unidade, a.dt_entrada_unidade + 9999)	= (SELECT max(coalesce(b.dt_saida_unidade, b.dt_entrada_unidade + 9999)) 
									  from  atend_paciente_unidade 	b, 
										  setor_atendimento 		d 
									  where b.nr_atendimento = nr_atendimento_p 
									  and  b.cd_setor_atendimento = d.cd_setor_atendimento 
									  and  d.cd_classif_setor in (3,4,8));
end if;
 
--Buscar o Setor e a data de entrada unidade da Unidade Atual do paciente 
select 	max(cd_setor_atendimento), 
	max(dt_entrada_unidade) 
into STRICT	cd_setor_atendimento_w, 
	dt_entrada_unidade_w 
from 	atend_paciente_unidade 
where	nr_seq_interno = nr_seq_atepacu_atual_w;
 
 
/* 
Excessão (Gerar LOG) Atendimento FECHADO 
*/
 
if (ie_fim_conta_w = 'F') or (dt_fim_conta_w IS NOT NULL AND dt_fim_conta_w::text <> '') then 
	--Atendimento Fechado. Não permite mais movimento! 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(245282);
end if;
 
/* Requisito:  Consultar o DE-PARA do cadastro do procedimento interno, podemos ter uma único procedimento interno, vinculado a mais de um procedimento AMB; */
 
if (nr_seq_proc_interno_p IS NOT NULL AND nr_seq_proc_interno_p::text <> '') then 
 
	SELECT * FROM Obter_Proc_Tab_Interno_Conv(	nr_seq_proc_interno_p, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, cd_setor_atendimento_w, dt_item_p, null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
end if;
 
/* 
Excessão (Gerar LOG) caso não tenha o procedimento 
*/
 
if (cd_procedimento_w = 0) then 
	--Não foi encontrado o procedimento para o proc. interno informado! 
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(245283);
end if;
 
-- Busca a Classificação 
select	max(ie_classificacao) 
into STRICT	ie_classificacao_w 
from	procedimento 
where	cd_procedimento		= cd_procedimento_w 
and	ie_origem_proced	= ie_origem_proced_w;
		 
-- Obter Médico Executor 
SELECT * FROM consiste_medico_executor(cd_estabelecimento_w, cd_convenio_w, cd_setor_atendimento_w, cd_procedimento_w, ie_origem_proced_w, ie_tipo_atendimento_w, null, nr_seq_proc_interno_p, ie_medico_executor_w, cd_cgc_prestador_w, cd_medico_executor_w, cd_profissional_w, cd_pessoa_fisica_w, dt_item_p, nr_seq_classificacao_w, 'N', null, null) INTO STRICT ie_medico_executor_w, cd_cgc_prestador_w, cd_medico_executor_w, cd_profissional_w;
 
-- Se a regra não for "Médico Fixo" então utiliza o médico do parâmetro			 
if (coalesce(ie_medico_executor_w,'Z') <> 'F') then 
	cd_medico_executor_w:= cd_medico_executor_p;
end if;
 
/* 
- Requisito: Preencher especialidade do médico: Está informação está no cadastro do médico; 
- Requisito: Preencher a função do médico: Informação está no Shift F11/aplicação principal/faturamento/regra definição especialidade procedimento; 
*/
	 
SELECT * FROM obter_proced_espec_medica(cd_estabelecimento_w, cd_convenio_w, cd_procedimento_w, ie_origem_proced_w, null, null, null, ie_clinica_w, cd_setor_atendimento_w, cd_espec_medica_w, ie_funcao_medico_w, cd_medico_executor_w, nr_seq_proc_interno_p, ie_tipo_atendimento_w) INTO STRICT cd_espec_medica_w, ie_funcao_medico_w;
 
--Caso não tiver regra para definição da especialidade, o sistema lê do cadastro do médico 
if (coalesce(cd_espec_medica_w,0) = 0) then 
	select 	obter_especialidade_medico(cd_medico_executor_w,'C') 
	into STRICT	cd_espec_medica_w 
	;
end if;
 
-- Caso não tenha prestador definido na regra o sistema lê o prestador como o estabelecimento do atend. 
if (coalesce(cd_cgc_prestador_w::text, '') = '') then 
	select	max(a.cd_cgc) 
	into STRICT	cd_cgc_prestador_w 
	from 	estabelecimento a, 
		atendimento_paciente b 
	where	a.cd_estabelecimento 	= b.cd_estabelecimento 
	and	b.nr_atendimento 	= nr_atendimento_p;
end if;	
 
-- Buscar a via de acesso (Por default se não tiver regra é "Única ou Principal") 
select 	substr(obter_regra_via_acesso(cd_procedimento_w, ie_origem_proced_w, cd_estabelecimento_w, cd_convenio_w),1,2) 
into STRICT	ie_via_acesso_w
;
 
--Buscando a próxima sequência da tabela PROCEDIMENTO_PACIENTE 
select 	nextval('procedimento_paciente_seq') 
into STRICT	nr_seq_w
;
 
--Realizando a inserção na tabela PROCEDIMENTO_PACIENTE				 
insert into procedimento_paciente( 
	nr_sequencia,		nr_atendimento,		dt_entrada_unidade,		cd_procedimento,	dt_procedimento, 
	cd_convenio,		cd_categoria,		nr_doc_convenio,		ie_tipo_guia,		cd_senha, 
	ie_auditoria,		ie_emite_conta,		cd_cgc_prestador,		ie_origem_proced,	nr_seq_exame, 
	nr_seq_proc_interno,	qt_procedimento,	cd_setor_atendimento,		nr_seq_atepacu,		nr_seq_cor_exec, 
	ie_funcao_medico,	vl_procedimento,	ie_proc_princ_atend,		ie_video,		tx_medico, 
	tx_anestesia,		tx_procedimento,	ie_valor_informado,		ie_guia_informada,	cd_situacao_glosa, 
	nm_usuario_original,	ds_observacao,		dt_atualizacao,			nm_usuario,		cd_pessoa_fisica, 
	cd_medico_executor,	cd_especialidade, 	ie_via_acesso,			dt_conta) 
values ( 
	nr_seq_w,		nr_atendimento_p,	dt_entrada_unidade_w,		cd_procedimento_w,	dt_item_p, 
	cd_convenio_w,		cd_categoria_w,		nr_doc_convenio_w,		ie_tipo_guia_w,		cd_senha_w, 
	'N',			null,			cd_cgc_prestador_w,		ie_origem_proced_w,	null, 
	nr_seq_proc_interno_p,	1,			cd_setor_atendimento_w,		nr_seq_atepacu_atual_w,	null, 
	ie_funcao_medico_w,	100,			'N',				'N',			100, 
	100,			100,			'N',				'N',			0, 
	--nm_usuario_p,		'Honorário via Portal',		sysdate,				nm_usuario_p,		cd_profissional_w, 
	nm_usuario_p,		WHEB_MENSAGEM_PCK.get_texto(298844),	clock_timestamp(),	nm_usuario_p,		cd_profissional_w,	 
	cd_medico_executor_w,	cd_espec_medica_w, 	ie_via_acesso_w,		dt_item_p);
 
/* 
- Requisito: Consultar o valor do procedimento conforme as regras comerciais, inclusive com as regras de ajustes. O mesmo processo realizado quando incluímos um item manualmente através da conta paciente; 
- Requisito: Verificar DE-PARA para o TUSS e gravar na conta; 
- Requisito: Preencher o campo emiti conta/hon: Conforme cadastro de estrutura da conta; 
- Requisito: Preencher o prestador,Doc(guia)/Tipo: Analisar as regras do convênio para preenchimento da guia. 
 
*/
	 
if (ie_classificacao_w = '1') then 		 
	CALL atualiza_preco_procedimento(nr_seq_w, cd_convenio_w, nm_usuario_p);
	CALL gerar_taxa_sala_porte(nr_atendimento_p, dt_entrada_unidade_w, dt_item_p, cd_procedimento_w, nr_seq_w, nm_usuario_p);
end if;
 
/* Disparar regra de lançamento Automático */
 
CALL Gerar_lancamento_automatico(nr_atendimento_p,null,34,nm_usuario_p, nr_seq_w, null,null,null,null,null);
 
-- Verifica regras de autorização 
CALL gerar_autor_regra(nr_atendimento_p, null, nr_seq_w, null, null, nr_seq_proc_interno_p,'CP',nm_usuario_p,null,null,null,null,null,null,'','','');
			 
exception 
	when others then 
	 
	ie_erro_w := 'S';
	sql_err_w := substr(SQLERRM, 1, 4000);	
 
	/* 
	Requisito:	Criar uma tabela de log, para gravar os procedimentos que por algum motivo não foram incluídos na conta. 
		Campos: Número do atendimento ¿ Código do Procedimento ¿ Nome Do médico - Data do lançamento do item - Data do registro 
	 
	Requisito:	Todas as transações deve ter um retorno para o portal confirmando se a gravação foi efetuada com sucesso. 
	 
	 W_LOG_ERRO_PORTAL: 
	 
		 Nome                   	Nulo?  	Tipo 
		 ----------------------------------------- -------- 	------------------------- 
		 NR_SEQUENCIA               NOT NULL 	NUMBER(10) 
		 NR_ATENDIMENTO             NOT NULL 	NUMBER(10) 
		 DT_ATUALIZACAO              NOT NULL 	DATE 
		 NM_USUARIO                	NOT NULL 	VARCHAR2(15) 
		 DT_ATUALIZACAO_NREC                	DATE 
		 NM_USUARIO_NREC                  	VARCHAR2(15) 
		 CD_MEDICO_EXECUTOR                 	VARCHAR2(10) 
		 DT_ITEM                      	DATE 
		 NR_SEQ_PROC_INTERNO                	NUMBER(10) 
		 DS_ERRO                      	VARCHAR2(4000) 
		 CD_PROCEDIMENTO            NOT NULL 	NUMBER(15) 
		 IE_ORIGEM_PROCED            NOT NULL 	NUMBER(10)	 
	*/
 
	insert	into W_LOG_ERRO_PORTAL( 
			NR_SEQUENCIA, 
			NR_ATENDIMENTO, 
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			DT_ATUALIZACAO_NREC, 
			NM_USUARIO_NREC, 
			CD_MEDICO_EXECUTOR, 
			DT_ITEM, 
			NR_SEQ_PROC_INTERNO, 
			DS_ERRO, 
			CD_PROCEDIMENTO, 
			IE_ORIGEM_PROCED) 
		values (nextval('w_log_erro_portal_seq'), 
			nr_atendimento_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			cd_medico_executor_w, 
			dt_item_p, 
			nr_seq_proc_interno_p, 
			sql_err_w, 
			coalesce(cd_procedimento_w,0), 
			coalesce(ie_origem_proced_w,0));
	 
end; -- Fim do bloco de Tratamento de excessão 
commit;
 
ie_erro_p	:= coalesce(ie_erro_w,'N');
 
if (coalesce(ie_erro_w,'N') = 'S') then 
	nr_seq_proced_p := 0;
else 
	nr_seq_proced_p := nr_seq_w;
end if;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE registrar_honorario_portal (nr_atendimento_p bigint, nr_seq_proc_interno_p bigint, dt_item_p timestamp, cd_medico_executor_p text, ie_erro_p INOUT text, nr_seq_proced_p INOUT bigint, nm_usuario_p text) FROM PUBLIC;

