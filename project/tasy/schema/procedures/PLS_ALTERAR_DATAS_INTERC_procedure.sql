-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_alterar_datas_interc ( nr_seq_segurado_p bigint, dt_data_alteracao_p timestamp, ie_tipo_data_p text, cd_estabelecimento_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
/* IE_TIPO_DATA_P - dom 1899 
	14 - Alteração da data de adesão 
	16 - Alteração da data de inclusão da operadora 
*/
 
 
ds_valor_dominio_w		varchar(255);
dt_data_antiga_w		timestamp;
dt_contrato_w			timestamp;
nr_seq_tabela_w			bigint;
ie_tabela_ok_w			varchar(1)	:= 'S';
nr_seq_plano_w			bigint	:= 0;
ie_preco_w			varchar(2)	:= '1';
ds_observacao_historico_w	varchar(255);
ds_motivo_alteracao_w		varchar(255);
ie_dt_adesao_w			varchar(10);
dt_contratacao_titular_w	timestamp;
nr_seq_titular_w		bigint;
dt_validade_cart_parmetros_w	varchar(10);
nr_seq_intercambio_w		bigint;
nr_seq_seg_preco_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_pagador_w		pls_segurado.nr_seq_pagador%type;


BEGIN 
 
ds_valor_dominio_w	:= obter_valor_dominio(1899, ie_tipo_data_p);
 
select	coalesce(dt_base_validade_carteira,'B') 
into STRICT	dt_validade_cart_parmetros_w 
from	pls_parametros 
where	cd_estabelecimento	= cd_estabelecimento_p;
 
if (ie_tipo_data_p	= 14) then 
	select	coalesce(a.dt_contratacao,''), 
		coalesce(b.DT_INCLUSAO,''), 
		a.nr_seq_tabela, 
		coalesce(nr_seq_plano,0), 
		nr_seq_intercambio, 
		nr_seq_pagador 
	into STRICT	dt_data_antiga_w, 
		dt_contrato_w, 
		nr_seq_tabela_w, 
		nr_seq_plano_w, 
		nr_seq_intercambio_w, 
		nr_seq_pagador_w 
	from	pls_intercambio	b, 
		pls_segurado	a 
	where	a.nr_seq_intercambio	= b.nr_sequencia 
	and	a.nr_sequencia		= nr_seq_segurado_p;
	 
	select	coalesce(max(ie_preco),'1') 
	into STRICT	ie_preco_w 
	from	pls_plano 
	where	nr_sequencia	= nr_seq_plano_w;
	 
	--Não pode ser menor do que a data do contrato 
	if (ie_preco_w	= '1') and (dt_data_alteracao_p	< dt_contrato_w) then 
		CALL wheb_mensagem_pck.exibir_mensagem_abort(183428,'DT_DATA_ALTERACAO='||dt_data_alteracao_p||';'||'DT_CONTRATO='||dt_contrato_w);
	end if;
	 
	select	max(nr_seq_titular) 
	into STRICT	nr_seq_titular_w 
	from	pls_segurado 
	where	nr_sequencia	= nr_seq_segurado_p;
	 
	--Caso for dependente a data de inclusão alterada não pode ser menor do que do titular 
	if (nr_seq_titular_w IS NOT NULL AND nr_seq_titular_w::text <> '') then 
		select	dt_contratacao 
		into STRICT	dt_contratacao_titular_w 
		from	pls_segurado 
		where	nr_sequencia	= nr_seq_titular_w;
		 
		if (dt_contratacao_titular_w > dt_data_alteracao_p) then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(183429);
		end if;
	end if;	
	 
	update	pls_segurado 
	set	dt_contratacao		= dt_data_alteracao_p, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_sequencia		= nr_seq_segurado_p;
	 
	update	pls_segurado_pagador 
	set	dt_inicio_vigencia = trunc(dt_data_alteracao_p,'month') 
	where	nr_seq_segurado = nr_seq_segurado_p 
	and	nr_seq_pagador = nr_seq_pagador_w 
	and	trunc(dt_inicio_vigencia,'month') = trunc(dt_data_antiga_w,'month');
	 
	select	min(nr_sequencia) 
	into STRICT	nr_seq_seg_preco_w 
	from	pls_segurado_preco 
	where	nr_seq_segurado		= nr_seq_segurado_p 
	and	cd_motivo_reajuste	= 'C';
	 
	if (nr_seq_seg_preco_w IS NOT NULL AND nr_seq_seg_preco_w::text <> '') then 
		update	pls_segurado_preco 
		set	dt_reajuste	= dt_data_alteracao_p 
		where	nr_sequencia	= nr_seq_seg_preco_w;
	end if;
	 
	select	coalesce(dt_base_validade_carteira,dt_validade_cart_parmetros_w) 
	into STRICT	dt_validade_cart_parmetros_w 
	from	pls_intercambio 
	where	nr_sequencia	= nr_seq_intercambio_w;
	 
	dt_validade_cart_parmetros_w	:= coalesce(dt_validade_cart_parmetros_w,'B');
	 
	if (dt_validade_cart_parmetros_w = 'B') then 
		update	pls_segurado_carteira 
		set	dt_inicio_vigencia	= dt_data_alteracao_p, 
			dt_atualizacao		= clock_timestamp(), 
			nm_usuario		= nm_usuario_p 
		where	nr_seq_segurado		= nr_seq_segurado_p;
	end if;
elsif (ie_tipo_data_p	= 16) then 
	select	coalesce(dt_inclusao_operadora,'') 
	into STRICT	dt_data_antiga_w 
	from	pls_segurado 
	where	nr_sequencia		= nr_seq_segurado_p;
	 
	update	pls_segurado 
	set	dt_inclusao_operadora	= dt_data_alteracao_p, 
		dt_atualizacao		= clock_timestamp(), 
		nm_usuario		= nm_usuario_p 
	where	nr_sequencia		= nr_seq_segurado_p;
end if;
 
if (coalesce(nr_seq_motivo_p, 0) = 0) then 
	ds_observacao_historico_w := 'pls_alterar_datas';
else 
	select	ds_motivo 
	into STRICT	ds_motivo_alteracao_w 
	from	pls_motivo_alteracao_plano 
	where	nr_sequencia = nr_seq_motivo_p;
	 
	ds_observacao_historico_w := 'Motivo: '||ds_motivo_alteracao_w;
end if;
 
--Gerar histórico 
CALL pls_gerar_segurado_historico( 
	nr_seq_segurado_p, ie_tipo_data_p, clock_timestamp(), 
	'De: ' || dt_data_antiga_w || '. Para: ' || dt_data_alteracao_p, ds_observacao_historico_w, null, 
	null, null, null, 
	null, null, null, 
	null, null, null, 
	null, nm_usuario_p, 'S');
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_alterar_datas_interc ( nr_seq_segurado_p bigint, dt_data_alteracao_p timestamp, ie_tipo_data_p text, cd_estabelecimento_p bigint, nr_seq_motivo_p bigint, nm_usuario_p text) FROM PUBLIC;

