-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualiza_dados_conciliacao ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE



vl_deb_nao_lanc_banco_w		double precision;
vl_cred_nao_lanc_banco_w		double precision;
vl_deb_nao_lanc_emp_w		double precision;
vl_cred_nao_lanc_emp_w		double precision;
VL_SALDO_BANCO_w			double precision;
vl_lanc_bco_w				double precision;
VL_SALDO_EMP_w			double precision;
vl_lanc_emp_w				double precision;
dt_inicial_w				timestamp;
dt_final_w				timestamp;
/* Projeto Multimoeda - Variáveis */

cd_moeda_banco_w		integer;
cd_moeda_empresa_w		integer;
ie_banco_estrang_w		varchar(1) := 'N';
cd_estabelecimento_w		smallint;


BEGIN
/* Projeto Multimoeda - Busca dados do banco da conciliação */

select	max(a.cd_estabelecimento),
	max(a.cd_moeda)
into STRICT	cd_estabelecimento_w,
	cd_moeda_banco_w
from	banco_estabelecimento a,
	conciliacao_bancaria b
where	b.nr_seq_conta	= a.nr_sequencia
and	b.nr_sequencia	= nr_sequencia_p;

/* Projeto Multimoeda - Busca a moeda padrão da empresa */

select	obter_moeda_padrao_empresa(coalesce(cd_estabelecimento_w,obter_estabelecimento_ativo),'E')
into STRICT	cd_moeda_empresa_w
;

/* Projeto Multimoeda - Verifica se a conta é em moeda estrangeira ou não para definir os valores para a conciliação */

if (coalesce(cd_moeda_banco_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then
	ie_banco_estrang_w := 'S';
else
	ie_banco_estrang_w := 'N';
end if;

select	CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN coalesce(sum(CASE WHEN ie_banco='D' THEN vl_transacao_estrang  ELSE 0 END ), 0)  ELSE coalesce(sum(CASE WHEN ie_banco='D' THEN vl_transacao  ELSE 0 END ), 0) END  vl_debito,
	CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN coalesce(sum(CASE WHEN ie_banco='C' THEN vl_transacao_estrang  ELSE 0 END ), 0)  ELSE coalesce(sum(CASE WHEN ie_banco='C' THEN vl_transacao  ELSE 0 END ), 0) END  vl_Credito
into STRICT	vl_deb_nao_lanc_banco_w,
	vl_cred_nao_lanc_banco_w
from	transacao_financeira b,
	movto_trans_financ a,
	CONCIL_BANC_PEND_TASY e
where	a.nr_seq_trans_financ	= b.nr_sequencia
and	e.NR_SEQ_MOVTO_TRANS		= a.nr_sequencia
and	e.nr_seq_conciliacao		= nr_sequencia_p
and	coalesce(a.nr_seq_concil::text, '') = ''
and	a.ie_conciliacao		= 'N';

-- Os valores buscados aqui serão sempre na moeda da conta bancária da conciliação
select	coalesce(sum(CASE WHEN ie_deb_cred='D' THEN vl_lancamento  ELSE 0 END ), 0) vl_debito,
	coalesce(sum(CASE WHEN ie_deb_cred='C' THEN vl_lancamento  ELSE 0 END ), 0) vl_Credito
into STRICT	vl_deb_nao_lanc_emp_w,
	vl_cred_nao_lanc_emp_w
from	Banco_extrato_lanc a,
	CONCIL_BANC_PEND_BCO b
where	coalesce(a.nr_seq_concil::text, '') = ''
and	b.NR_SEQ_LANC_EXTRATO	= a.nr_sequencia
and	b.nr_seq_conciliacao		= nr_sequencia_p
and	a.ie_conciliacao		= 'N';

-- Os valores buscados aqui serão sempre na moeda da conta bancária da conciliação
select	coalesce(max(VL_SALDO_BANCO),0),
	coalesce(max(VL_SALDO_EMP),0)
into STRICT	VL_SALDO_BANCO_w,
	VL_SALDO_EMP_w
from	conciliacao_bancaria
where	nr_sequencia		= nr_sequencia_p;

select	CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN coalesce(sum(CASE WHEN ie_banco='D' THEN vl_transacao_estrang  ELSE vl_transacao_estrang * -1 END ), 0)  ELSE coalesce(sum(CASE WHEN ie_banco='D' THEN vl_transacao  ELSE vl_transacao * -1 END ), 0) END
into STRICT	vl_lanc_emp_w
from	transacao_financeira b,
	concil_banc_movto c,
	movto_trans_financ a
where	a.nr_seq_trans_financ	= b.nr_sequencia
and	c.nr_sequencia		= a.nr_seq_concil
and	c.nr_seq_conciliacao	= nr_sequencia_p;

-- Os valores buscados aqui serão sempre na moeda da conta bancária da conciliação
select	coalesce(sum(CASE WHEN ie_deb_cred='D' THEN vl_lancamento  ELSE vl_lancamento * -1 END ), 0)
into STRICT	vl_lanc_bco_w
from	concil_banc_movto b,
	Banco_extrato_lanc a
where	a.nr_seq_concil		= b.nr_sequencia
and	b.nr_seq_conciliacao	= nr_sequencia_p;

-- A moeda dos valores da conciliação bancária será sempre a mesma da conta bancária da conciliação.
update	conciliacao_bancaria
set	VL_DEB_NAO_LANC_BANCO	= vl_deb_nao_lanc_banco_w,
	VL_CRED_NAO_LANC_BANCO	= vl_cred_nao_lanc_banco_w,
	VL_DEB_NAO_LANC_EMP		= vl_deb_nao_lanc_emp_w,
	VL_CRED_NAO_LANC_EMP		= vl_cred_nao_lanc_emp_w,
	VL_SALDO_BANCO_CONC		= VL_SALDO_BANCO_w - vl_cred_nao_lanc_banco_w + vl_deb_nao_lanc_banco_w,
	VL_SALDO_EMP_CONC		= VL_SALDO_EMP_w - vl_deb_nao_lanc_emp_w + vl_cred_nao_lanc_emp_w,
	nm_usuario			= nm_usuario_p,
	dt_atualizacao		= clock_timestamp()
where	nr_sequencia			= nr_sequencia_p;

update	conciliacao_bancaria
set	vl_dif_conciliacao		= vl_saldo_banco_conc - vl_saldo_emp_conc
where	nr_sequencia			= nr_sequencia_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualiza_dados_conciliacao ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

