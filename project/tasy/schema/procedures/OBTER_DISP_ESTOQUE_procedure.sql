-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE obter_disp_estoque ( cd_material_p bigint, cd_local_estoque_p bigint, cd_estabelecimento_p bigint, qt_baixa_estoque_p bigint, qt_baixa_consumo_p bigint, cd_cgc_fornecedor_p text, ie_estoque_disp_p INOUT text, nr_seq_lote_p bigint default null) AS $body$
DECLARE


qt_estoque_w			double precision := 0;
qt_baixa_estoque_w		double precision := 0;
dt_mesano_referencia_w		timestamp;
dt_mesano_vigente_w		timestamp;
ie_consignado_w			varchar(1);
cd_material_estoque_w		integer;
ie_bloqueio_inventario_w	varchar(1);
ie_estoque_lote_w		material_estab.ie_estoque_lote%type;
nr_seq_lote_w			material_lote_fornec.nr_sequencia%type;
nr_seq_regra_w		bigint;
qt_estoque_consigado_w			double precision := 0;
qt_estoque_proprio_w			double precision := 0;
cd_cgc_fornec_w		varchar(14);


BEGIN
nr_seq_lote_w := coalesce(nr_seq_lote_p,0);

if (qt_baixa_estoque_p > 0) then
	qt_baixa_estoque_w	:= qt_baixa_estoque_p;
else
	select	round((dividir(qt_baixa_consumo_p, m.qt_conv_estoque_consumo))::numeric,4)
	into STRICT	qt_baixa_estoque_w
	from	material m
	where	m.cd_material = cd_material_p;
end if;

begin
select	dt_mesano_vigente
into STRICT	dt_mesano_vigente_w
from	parametro_estoque
where	cd_estabelecimento	= cd_estabelecimento_p;
exception
	when no_data_found Then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(260129);
		--'O estabelecimento não foi informado ou o parametro não está cadastrado';
end;

select	coalesce(ie_consignado,'0'),
	cd_material_estoque
into STRICT	ie_consignado_w,
	cd_material_estoque_w
from	material
where	cd_material = cd_material_p;

select	coalesce(max(ie_estoque_lote),'N')
into STRICT	ie_estoque_lote_w
from	material_estab
where	cd_material = cd_material_estoque_w
and	cd_estabelecimento = cd_estabelecimento_p;

if (cd_local_estoque_p = 0) then
	select	/*+ index (s salesto_i2) */		coalesce(max(s.dt_mesano_referencia),PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0))
	into STRICT	dt_mesano_referencia_w
	from	saldo_estoque s
	where	s.cd_estabelecimento	= cd_estabelecimento_p
	and	s.cd_material		= cd_material_estoque_w
	and	s.dt_mesano_referencia	>= dt_mesano_vigente_w;
else
	select	/*+ index (s salesto_i2) */		coalesce(max(s.dt_mesano_referencia),PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0))
	into STRICT	dt_mesano_referencia_w
	from	saldo_estoque s
	where	s.cd_estabelecimento	= cd_estabelecimento_p
	and	s.cd_material		= cd_material_estoque_w
	and 	s.dt_mesano_referencia	>= dt_mesano_vigente_w
	and	s.cd_local_estoque	= cd_local_estoque_p;
end if;

select	coalesce(max(IE_REGRA_SALDO_CONSIG),0)
into STRICT	nr_seq_regra_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_p;

ie_estoque_disp_p	:= 'S';
qt_estoque_w		:= 0;

/* Verificar se material não esta bloqueado para inventário */

begin

ie_bloqueio_inventario_w	:= 'N';

select	coalesce(max(ie_bloqueio_inventario),'N')
into STRICT	ie_bloqueio_inventario_w
from	saldo_estoque
where	cd_estabelecimento	= cd_estabelecimento_p
and	cd_local_estoque		= cd_local_estoque_p
and 	cd_material		= cd_material_estoque_w
and 	dt_mesano_referencia	= dt_mesano_referencia_w;
end;

if (ie_bloqueio_inventario_w	= 'S') then
	ie_estoque_disp_p := 'N';
else
	BEGIN
	/*Se o material é normal ou se o material é ambos e não tem fornecedor informado */

	if (ie_consignado_w = '0') or
		((ie_consignado_w = '2') and (coalesce(cd_cgc_fornecedor_p::text, '') = '')) then
		begin
		qt_estoque_w	:= obter_saldo_disp_estoque(cd_estabelecimento_p,
					cd_material_p,
					cd_local_estoque_p,
					dt_mesano_referencia_w,
					nr_seq_lote_w);

		--se for consignado ambos e possuir regra deve somar o proprio + consigado
		if (ie_consignado_w = '2') and (nr_seq_regra_w > 0)then
		begin
			if (dt_mesano_referencia_w = PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0)) and (dt_mesano_referencia_w > dt_mesano_vigente_w) then
				select	coalesce(max(s.dt_mesano_referencia),dt_mesano_referencia_w)
				into STRICT	dt_mesano_referencia_w
				from 	fornecedor_mat_consignado s
				where	s.cd_estabelecimento	= cd_estabelecimento_p
				and 	s.cd_material		= cd_material_estoque_w
				and 	s.dt_mesano_referencia	>= dt_mesano_vigente_w;
			end if;

			if (ie_estoque_lote_w = 'N') or (nr_seq_lote_w <= 0) then
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_estoque_consigado_w
				from	fornecedor_mat_consignado
				where	cd_estabelecimento		= cd_estabelecimento_p
				and	cd_local_estoque		= cd_local_estoque_p
				and	cd_material		= cd_material_estoque_w
				and	dt_mesano_referencia	= dt_mesano_referencia_w;
			else
				select	coalesce(sum(qt_estoque),0)
				into STRICT	qt_estoque_consigado_w
				from	fornecedor_mat_consig_lote
				where	cd_estabelecimento		= cd_estabelecimento_p
				and	cd_local_estoque		= cd_local_estoque_p
				and	cd_material		= cd_material_estoque_w
				and	dt_mesano_referencia	= dt_mesano_referencia_w
				and	nr_seq_lote		= nr_seq_lote_w;
			end if;
		
			qt_estoque_w	:= qt_estoque_w + qt_estoque_consigado_w;
		end;
		end if;

		if (qt_estoque_w < qt_baixa_estoque_w) then
			ie_estoque_disp_p := 'N';
		end if;

		end;
	/*Se o material é consignado ou se o material é ambos e tem fornecedor informado */

	elsif (ie_consignado_w = '1') or
		(ie_consignado_w = '2' AND cd_cgc_fornecedor_p IS NOT NULL AND cd_cgc_fornecedor_p::text <> '') then
		begin
		if (dt_mesano_referencia_w = PKG_DATE_UTILS.start_of(clock_timestamp(), 'month', 0)) or (dt_mesano_referencia_w >= dt_mesano_vigente_w) then
			select	coalesce(max(s.dt_mesano_referencia),dt_mesano_referencia_w)
			into STRICT	dt_mesano_referencia_w
			from 	fornecedor_mat_consignado s
			where	s.cd_estabelecimento	= cd_estabelecimento_p
		  	and	s.cd_fornecedor		= cd_cgc_fornecedor_p
			and 	s.cd_material		= cd_material_estoque_w
		  	and 	s.dt_mesano_referencia	>= dt_mesano_vigente_w;
		end if;

		if (ie_estoque_lote_w = 'N') or (nr_seq_lote_w <= 0) then
			select	coalesce(sum(qt_estoque),0)
			into STRICT	qt_estoque_w
			from	fornecedor_mat_consignado
			where	cd_estabelecimento		= cd_estabelecimento_p
			and	cd_local_estoque		= cd_local_estoque_p
			and	cd_fornecedor		= cd_cgc_fornecedor_p
			and	cd_material		= cd_material_estoque_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w;
		else
			select	coalesce(sum(qt_estoque),0)
			into STRICT	qt_estoque_w
			from	fornecedor_mat_consig_lote
			where	cd_estabelecimento		= cd_estabelecimento_p
			and	cd_local_estoque		= cd_local_estoque_p
			and	cd_fornecedor		= cd_cgc_fornecedor_p
			and	cd_material		= cd_material_estoque_w
			and	dt_mesano_referencia	= dt_mesano_referencia_w
			and	nr_seq_lote		= nr_seq_lote_w;
		end if;

		/*
		Se for consignado ambos, deve verificar tambem o saldo normal/proprio antes de dizer que nao tem saldo
		Se tiver regra de saldo consignado, deve somar o proprio + consignado
		Se nao tiver regra de saldo consignado,  considera apenas saldo normal/proprio
		*/

		/* Se for ie_consignado_w = '2', entao (cd_cgc_fornecedor_p is not null) = true */

		if (ie_consignado_w = '2') then
		begin
		
			if (nr_seq_regra_w > 0) then
		
				qt_estoque_proprio_w	:= obter_saldo_disp_estoque(cd_estabelecimento_p,
							cd_material_p,
							cd_local_estoque_p,
							dt_mesano_referencia_w,
							nr_seq_lote_w);
			
				qt_estoque_w	:= qt_estoque_w + qt_estoque_proprio_w;
				
			elsif (qt_estoque_w < qt_baixa_estoque_w) then	

				qt_estoque_proprio_w	:= obter_saldo_disp_estoque(cd_estabelecimento_p,
							cd_material_p,
							cd_local_estoque_p,
							dt_mesano_referencia_w,
							nr_seq_lote_w);
			
				qt_estoque_w	:= qt_estoque_proprio_w;
			end if;
			
		end;
		end if;

		if (qt_estoque_w < qt_baixa_estoque_w) then
			ie_estoque_disp_p := 'N';
		end if;

		end;
	end if;
	END;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE obter_disp_estoque ( cd_material_p bigint, cd_local_estoque_p bigint, cd_estabelecimento_p bigint, qt_baixa_estoque_p bigint, qt_baixa_consumo_p bigint, cd_cgc_fornecedor_p text, ie_estoque_disp_p INOUT text, nr_seq_lote_p bigint default null) FROM PUBLIC;

