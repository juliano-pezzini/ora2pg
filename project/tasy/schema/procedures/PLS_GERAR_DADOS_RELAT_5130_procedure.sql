-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_dados_relat_5130 ( nr_seq_lote_p bigint, nr_seq_fatura_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


/* IE_BANDA:
	C - Dados cobrador
	P - Pagador
	I - Itens de mensalidade / Itens de faturamento
	T - Tributos do título
*/
/* Cursor 1 */

nr_seq_fatura_w			bigint;
nr_titulo_w			bigint;

/* Cursor 2 */

ds_procedimento_w		PROCEDIMENTO.DS_PROCEDIMENTO%type;
qt_item_w			double precision;
vl_unitario_item_w		double precision;
vl_total_item_w			double precision;

/* Cursor 3 */

ds_tributo_w         		varchar(255);
tx_tributo_w                    double precision;
vl_tributo_w                    double precision;
vl_base_calculo_trib_w          double precision;
ie_tipo_tributo_w		varchar(15);

/* Outros SELECT's */

ie_pf_pj_w			varchar(2);
nm_pagador_w			varchar(255);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
dt_emissao_w			timestamp;
nr_nosso_numero_w		varchar(255);
ie_situacao_titulo_w		varchar(1);
nr_bloqueto_w			varchar(44);
vl_titulo_w			double precision;
dt_liquidacao_w			timestamp;
dt_vencimento_w			timestamp;
nr_seq_conta_banco_w		bigint;
cd_banco_dig_w			varchar(255);
nr_seq_pagador_w		bigint;
ds_endereco_w			varchar(255);
ds_bairro_w			varchar(255);
cd_cep_w			varchar(10);
ds_municipio_w			varchar(255);
sg_estado_w			pessoa_juridica.sg_estado%type;
nr_cpf_w			varchar(11);
cd_usuario_plano_w		varchar(30);
cd_agencia_bancaria_w		varchar(255);
nr_seq_relat_boleto_w		bigint;
ie_endereco_boleto_w		varchar(4);
ds_endereco_pag_w		varchar(255);
ds_bairro_pag_w			varchar(255);
cd_cep_pag_w			varchar(10);
ds_municipio_pag_w		varchar(255);
sg_estado_pag_w			pessoa_juridica.sg_estado%type;
ds_endereco_compl_w		varchar(255);
ds_bairro_compl_w		varchar(255);
cd_cep_compl_w			varchar(10);
ds_municipio_compl_w		varchar(255);
sg_estado_compl_w		pessoa_juridica.sg_estado%type;
vl_faturado_w			double precision;
cd_operadora_empresa_w		bigint;
nr_seq_fat_evento_w		pls_fatura_evento.nr_sequencia%type;
nr_seq_evento_w			pls_fatura_evento.nr_seq_evento%type;
vl_evento_w			pls_fatura_evento.vl_evento%type;
ds_razao_social_w		varchar(255);
ds_observacao_mensalidade_w	varchar(4000);
nr_endereco_w			varchar(10);
ds_complemento_w		varchar(255);
ds_email_w			varchar(255);
cd_cnpj_w			varchar(30);
nr_telefone_w			varchar(20);
nr_fax_w			varchar(20);
nr_inscricao_estadual_w		varchar(20);
nr_inscricao_municipal_w	varchar(20);
nr_ddd_telefone_w		varchar(5);
nr_ddd_fax_w			varchar(5);
tp_documento_w			varchar(5);
qt_reg_tit_w			integer;

C01 CURSOR FOR
	SELECT	a.nr_sequencia nr_seq_fatura,
		b.nr_titulo
	FROM pls_fatura a
LEFT OUTER JOIN titulo_receber b ON (a.nr_titulo = b.nr_titulo)
WHERE (a.nr_sequencia = nr_seq_fatura_p or a.nr_seq_lote = nr_seq_lote_p)
	
union

	SELECT	a.nr_sequencia nr_seq_fatura,
		b.nr_titulo
	FROM pls_fatura a
LEFT OUTER JOIN titulo_receber b ON (a.nr_titulo_ndc = b.nr_titulo)
WHERE (a.nr_sequencia = nr_seq_fatura_p or a.nr_seq_lote = nr_seq_lote_p);

C02 CURSOR FOR
	SELECT	nr_sequencia,
		nr_seq_evento,
		vl_evento
	from	pls_fatura_evento
	where	nr_seq_fatura	= nr_seq_fatura_w;

C03 CURSOR FOR	/* Dados TRIBUTOS DO TÍTULO */
	SELECT	substr(obter_desc_tributo(a.cd_tributo), 1, 200) ds_tributo,
		coalesce(a.tx_tributo, 0) tx_tributo,
		coalesce(a.vl_tributo, 0) vl_tributo,
		coalesce(a.vl_base_calculo, 0) vl_base_calculo,
		b.ie_tipo_tributo
	from	titulo_receber_trib	a,
		tributo			b
	where	a.cd_tributo 	= b.cd_tributo
	and	a.nr_titulo 	= nr_titulo_w;


BEGIN

delete	FROM w_pls_relat_boleto
where	nm_usuario = nm_usuario_p;

select	max(cd_cgc_outorgante)
into STRICT	cd_cgc_w
from	pls_outorgante
where	cd_estabelecimento = cd_estabelecimento_p;

if (cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') then
	select	substr(ds_razao_social,1,255),
		ds_endereco,
		nr_endereco,
		ds_complemento,
		ds_bairro,
		substr(cd_cep, 1, 10),
		substr(ds_municipio, 1, 255) ds_municipio,
		sg_estado,
		obter_dados_pf_pj(null,cd_cgc_w,'M') ds_email,
		nr_telefone,
		nr_fax,
		nr_inscricao_estadual,
		nr_inscricao_municipal
	into STRICT	ds_razao_social_w,
		ds_endereco_w,
		nr_endereco_w,
		ds_complemento_w,
		ds_bairro_w,
		cd_cep_w,
		ds_municipio_w,
		sg_estado_w,
		ds_email_w,
		nr_telefone_w,
		nr_fax_w,
		nr_inscricao_estadual_w,
		nr_inscricao_municipal_w
	from	pessoa_juridica
	where	cd_cgc = cd_cgc_w;

	cd_cnpj_w := obter_cnpj_mascara(cd_cgc_w);

	select	'CNPJ : '|| cd_cnpj_w ||
		CASE WHEN coalesce(nr_inscricao_estadual_w::text, '') = '' THEN ''  ELSE ' Iscr. Estadual: '|| nr_inscricao_estadual_w END  ||
		CASE WHEN coalesce(nr_inscricao_municipal_w::text, '') = '' THEN ''  ELSE '   Iscr. Municipal: '|| nr_inscricao_municipal_w END  || chr(13)||
		ds_endereco_w || ', ' || nr_endereco_w || chr(13)||
		cd_cep_w ||'        '|| ds_municipio_w ||'   '|| sg_estado_w || chr(13)||
		'Fone: ('||nr_ddd_telefone_w||') '|| nr_telefone_w ||
		CASE WHEN coalesce(nr_fax_w::text, '') = '' THEN ''  ELSE '                Fax: ('||nr_ddd_fax_w||') '|| nr_fax_w END  || chr(13)||
		CASE WHEN coalesce(ds_email_w::text, '') = '' THEN ''  ELSE 'e-mail: '||ds_email_w END
	into STRICT	ds_observacao_mensalidade_w
	;

	ds_endereco_w := substr(ds_endereco_w || ', ' || nr_endereco_w || ' - ' || ds_complemento_w, 1, 255);

	insert into w_pls_relat_boleto(nr_sequencia,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		ie_banda,
		nm_pessoa,
		ds_endereco,
		ds_bairro,
		cd_cep,
		ds_municipio,
		sg_estado,
		cd_cgc,
		ds_observacao_mensalidade)
	values (nextval('w_pls_relat_boleto_seq'),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		'C',
		ds_razao_social_w,
		ds_endereco_w,
		ds_bairro_w,
		cd_cep_w,
		ds_municipio_w,
		sg_estado_w,
		cd_cgc_w,
		ds_observacao_mensalidade_w);
end if;

open C01;
loop
fetch C01 into
	nr_seq_fatura_w,
	nr_titulo_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	tp_documento_w := null;
	if (coalesce(nr_titulo_w::text, '') = '') then
		select	count(1)
		into STRICT	qt_reg_tit_w
		from	pls_fatura
		where	nr_sequencia	= nr_seq_fatura_w
		and ((nr_titulo IS NOT NULL AND nr_titulo::text <> '') or (nr_titulo_ndc IS NOT NULL AND nr_titulo_ndc::text <> ''));

		if (qt_reg_tit_w = 0) then
			select	coalesce(max(p.tp_documento_1),'1')
			into STRICT	tp_documento_w
			from	ptu_fatura p
			where	p.nr_seq_pls_fatura = nr_seq_fatura_w;
		end if;
	end if;

	if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') or (tp_documento_w != '4') then -- NDC não gera boleto
		if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') then
			/* Dados TÍTULO */

			select	CASE WHEN coalesce(a.cd_cgc::text, '') = '' THEN  'PF'  ELSE 'PJ' END  ie_pf_pj,
				a.ie_situacao,
				a.nr_bloqueto,
				a.nr_seq_conta_banco,
				a.dt_liquidacao,
				a.nr_nosso_numero,
				coalesce(vl_titulo, 0)
			into STRICT	ie_pf_pj_w,
				ie_situacao_titulo_w,
				nr_bloqueto_w,
				nr_seq_conta_banco_w,
				dt_liquidacao_w,
				nr_nosso_numero_w,
				vl_titulo_w
			from	titulo_receber	a
			where	a.nr_titulo = nr_titulo_w;

			/* Dados LOTE DE FATURAMENTO + FATURA */

			select	coalesce(a.dt_emissao, a.dt_atualizacao_nrec),
				b.dt_vencimento,
				coalesce(b.vl_fatura + b.vl_total_ndc,0)
			into STRICT	dt_emissao_w,
				dt_vencimento_w,
				vl_faturado_w
			from	pls_fatura		b,
				pls_lote_faturamento	a
			where	a.nr_sequencia	= b.nr_seq_lote
			and	b.nr_sequencia 	= nr_seq_fatura_w;

			if (ie_pf_pj_w = 'PF') then
				/* Dados PAGADOR */

				begin
				select	b.nr_sequencia nr_seq_pagador,
					substr(d.nm_pessoa_fisica, 1, 255) nm_pagador,
					d.nr_cpf,
					substr(pls_carteira_pag_se_seg(b.nr_sequencia, d.cd_pessoa_fisica), 1, 30) cd_usuario_plano,
					b.ie_endereco_boleto,
					d.cd_pessoa_fisica
				into STRICT	nr_seq_pagador_w,
					nm_pagador_w,
					nr_cpf_w,
					cd_usuario_plano_w,
					ie_endereco_boleto_w,
					cd_pessoa_fisica_w
				from	pessoa_fisica		d,
					titulo_receber		c,
					pls_contrato_pagador	b,
					pls_fatura		a
				where	d.cd_pessoa_fisica	= c.cd_pessoa_fisica
				and (c.nr_titulo		= a.nr_titulo
				or	c.nr_titulo		= a.nr_titulo_ndc)
				and	b.nr_sequencia		= a.nr_seq_pagador
				and	a.nr_sequencia 		= nr_seq_fatura_w
				and	c.nr_titulo		= nr_titulo_w;
				exception
				when others then
					nr_seq_pagador_w	:= null;
					nm_pagador_w		:= null;
					nr_cpf_w		:= null;
					cd_usuario_plano_w	:= null;
					ie_endereco_boleto_w	:= null;
					cd_pessoa_fisica_w	:= null;
				end;

				/* Dados complementares do pagador PF */

				begin
				select	substr(e.ds_endereco || ', ' || coalesce(e.nr_endereco, e.ds_compl_end) || ' ' || e.ds_complemento, 1, 255) ds_endereco,
					e.ds_bairro,
					substr(e.cd_cep, 1, 10),
					substr(e.ds_municipio, 1, 255) ds_municipio,
					e.sg_estado
				into STRICT	ds_endereco_w,
					ds_bairro_w,
					cd_cep_w,
					ds_municipio_w,
					sg_estado_w
				from	compl_pessoa_fisica	e
				where	e.cd_pessoa_fisica 	= cd_pessoa_fisica_w
				and	((ie_endereco_boleto_w = 'PFR' AND e.ie_tipo_complemento = 1)
				or 	(ie_endereco_boleto_w = 'PFC' AND e.ie_tipo_complemento = 2)
				or 	(ie_endereco_boleto_w = 'PFV' AND e.ie_tipo_complemento = 3)
				or 	(ie_endereco_boleto_w = 'PFP' AND e.ie_tipo_complemento = 4)
				or 	(ie_endereco_boleto_w = 'PFM' AND e.ie_tipo_complemento = 5)
				or 	(ie_endereco_boleto_w = 'PFJ' AND e.ie_tipo_complemento = 6));
				exception
				when others then
					ds_endereco_w		:= null;
					ds_bairro_w		:= null;
					cd_cep_w		:= null;
					ds_municipio_w		:= null;
					sg_estado_w		:= null;
				end;
			elsif (ie_pf_pj_w = 'PJ') then
				/* Dados PAGADOR */

				begin
				select	b.nr_sequencia nr_seq_pagador,
					substr(d.ds_razao_social, 1, 255) nm_pagador,
					d.cd_cgc,
					substr(d.ds_endereco || ', ' || d.nr_endereco || ' ' || d.ds_complemento, 1, 255) ds_endereco,
					d.ds_bairro,
					substr(d.cd_cep, 1, 10),
					substr(d.ds_municipio, 1, 255) ds_municipio,
					d.sg_estado,
					e.cd_operadora_empresa
				into STRICT	nr_seq_pagador_w,
					nm_pagador_w,
					cd_cgc_w,
					ds_endereco_pag_w,
					ds_bairro_pag_w,
					cd_cep_pag_w,
					ds_municipio_pag_w,
					sg_estado_pag_w,
					cd_operadora_empresa_w
				FROM pessoa_juridica d, titulo_receber c, pls_fatura a, pls_contrato_pagador b
LEFT OUTER JOIN pls_contrato e ON (b.nr_seq_contrato = e.nr_sequencia)
WHERE d.cd_cgc		= c.cd_cgc and (c.nr_titulo		= a.nr_titulo
				or	c.nr_titulo		= a.nr_titulo_ndc) and b.nr_sequencia		= a.nr_seq_pagador  and a.nr_sequencia 		= nr_seq_fatura_w and c.nr_titulo		= nr_titulo_w;
				exception
				when others then
					nr_seq_pagador_w	:= null;
					nm_pagador_w		:= null;
					cd_cgc_w		:= null;
					ds_endereco_pag_w	:= null;
					ds_bairro_pag_w		:= null;
					cd_cep_pag_w		:= null;
					ds_municipio_pag_w	:= null;
					sg_estado_pag_w		:= null;
					cd_operadora_empresa_w	:= null;
				end;

				/* Dados complementares do pagador PJ */

				begin
				select	substr(e.ds_endereco || ', ' || e.nr_endereco || ' ' || e.ds_complemento, 1, 255) ds_endereco,
					e.ds_bairro,
					substr(e.cd_cep, 1, 10),
					substr(e.ds_municipio, 1, 255) ds_municipio,
					e.sg_estado
				into STRICT	ds_endereco_w,
					ds_bairro_w,
					cd_cep_w,
					ds_municipio_w,
					sg_estado_w
				from	pessoa_juridica_compl	e
				where	e.cd_cgc = cd_cgc_w
				and	e.ie_tipo_complemento = 1;
				exception
				when others then
					ds_endereco_compl_w	:= null;
					ds_bairro_compl_w	:= null;
					cd_cep_compl_w		:= null;
					ds_municipio_compl_w	:= null;
					sg_estado_compl_w	:= null;
				end;

				ds_endereco_w	:= coalesce(ds_endereco_compl_w, ds_endereco_pag_w);
				ds_bairro_w	:= coalesce(ds_bairro_compl_w, ds_bairro_pag_w);
				cd_cep_w	:= coalesce(cd_cep_compl_w, cd_cep_pag_w);
				ds_municipio_w	:= coalesce(ds_municipio_compl_w, ds_municipio_pag_w);
				sg_estado_w	:= coalesce(sg_estado_compl_w, sg_estado_pag_w);
			end if;

			begin
			select	a.cd_banco_dig
			into STRICT	cd_banco_dig_w
			from	titulo_receber_bloq_v 		a
			where	a.nr_titulo = nr_titulo_w;
			exception
			when others then
				cd_banco_dig_w := null;
			end;

			begin
			select	a.cd_agencia_bancaria ||'/'|| coalesce(a.cd_conta_bloqueto, a.cd_conta) cd_agencia_bancaria
			into STRICT	cd_agencia_bancaria_w
			from	banco_estabelecimento 	a
			where	a.nr_sequencia	= nr_seq_conta_banco_w  LIMIT 1;
			exception
			when others then
				cd_agencia_bancaria_w	:= null;
			end;
		end if;

		select	nextval('w_pls_relat_boleto_seq')
		into STRICT	nr_seq_relat_boleto_w
		;

		/* Insert TÍTULO + FATURA + PAGADOR */

		insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
					nr_seq_fatura, nr_titulo, dt_vencimento, ie_pf_pj, nm_pessoa, cd_cgc, cd_pessoa_fisica, dt_emissao_fatura,
					nr_nosso_numero, cd_agencia_bancaria, cd_operadora_empresa,
					cd_banco_dig, ie_situacao_titulo, nr_bloqueto, vl_titulo, dt_liquidacao, vl_faturado,
					ds_endereco, ds_bairro, cd_cep, ds_municipio, sg_estado,
					nr_cpf, cd_usuario_plano )
			values (	nr_seq_relat_boleto_w, clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'P',
					nr_seq_fatura_w, nr_titulo_w, dt_vencimento_w, ie_pf_pj_w, nm_pagador_w, cd_cgc_w, cd_pessoa_fisica_w, dt_emissao_w,
					nr_nosso_numero_w, cd_agencia_bancaria_w, cd_operadora_empresa_w,
					cd_banco_dig_w, ie_situacao_titulo_w, nr_bloqueto_w, vl_titulo_w, dt_liquidacao_w, vl_faturado_w,
					ds_endereco_w, ds_bairro_w, cd_cep_w, ds_municipio_w, sg_estado_w,
					nr_cpf_w, cd_usuario_plano_w );

		open C02;
		loop
		fetch C02 into
			nr_seq_fat_evento_w,
			nr_seq_evento_w,
			vl_evento_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin

			select 	substr(ds_evento,1,255)
			into STRICT	ds_procedimento_w
			from	pls_evento_faturamento
			where	nr_sequencia = nr_seq_evento_w;

			select	sum(qt)
			into STRICT	qt_item_w
			from (	SELECT	1 qt
					from	pls_fatura_conta	b,
						pls_fatura_proc		a
					where	a.nr_seq_fatura_conta	= b.nr_sequencia
					and	b.nr_seq_fatura_evento	= nr_seq_fat_evento_w
					
union all

					SELECT	1 qt
					from	pls_fatura_conta	b,
						pls_fatura_mat		a
					where	a.nr_seq_fatura_conta	= b.nr_sequencia
					and	b.nr_seq_fatura_evento	= nr_seq_fat_evento_w) alias1;

			vl_unitario_item_w	:= 	dividir_sem_round(vl_evento_w,qt_item_w);

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_seq_fatura, nr_titulo, ie_pf_pj,
						ds_item, qt_item, vl_item, vl_total_item )
				values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'I',
						nr_seq_fatura_w, nr_titulo_w, ie_pf_pj_w,
						ds_procedimento_w, qt_item_w, vl_unitario_item_w, vl_evento_w );

			end;
		end loop;
		close C02;

		open C03;
		loop
		fetch C03 into
			ds_tributo_w,
			tx_tributo_w,
			vl_tributo_w,
			vl_base_calculo_trib_w,
			ie_tipo_tributo_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin

			/* Insert TRIBUTOS DO TÍTULO */

			insert into w_pls_relat_boleto(	nr_sequencia, dt_atualizacao, nm_usuario, dt_atualizacao_nrec, nm_usuario_nrec, ie_banda,
						nr_seq_fatura, nr_titulo, ie_pf_pj, cd_cgc, vl_titulo, vl_faturado,
						ds_tributo, tx_tributo, vl_tributo, vl_base_calculo_trib, ie_tipo_tributo )
				values (	nextval('w_pls_relat_boleto_seq'), clock_timestamp(), nm_usuario_p, clock_timestamp(), nm_usuario_p, 'T',
						nr_seq_fatura_w, nr_titulo_w, ie_pf_pj_w, cd_cgc_w, vl_titulo_w, vl_faturado_w,
						ds_tributo_w, tx_tributo_w, vl_tributo_w, vl_base_calculo_trib_w, ie_tipo_tributo_w );

			end;
		end loop;
		close C03;
	end if;

	end;
end loop;
close C01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_dados_relat_5130 ( nr_seq_lote_p bigint, nr_seq_fatura_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

