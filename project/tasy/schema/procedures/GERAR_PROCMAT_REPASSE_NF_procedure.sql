-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_procmat_repasse_nf ( nr_interno_conta_p bigint, nm_usuario_p text, ie_commit_p text) AS $body$
DECLARE

					
-- variaveis declaradas em rodem alfabetica.
ds_erro_w		varchar(2000);
dt_emissao_w		timestamp;
nr_interno_conta_w	bigint;
nr_nota_fiscal_w	varchar(255);
nr_seq_lote_protocolo_w	bigint;
nr_seq_mat_repasse_w	bigint;
nr_seq_nota_fiscal_w	bigint;
nr_seq_proc_repasse_w	bigint;
nr_seq_protocolo_w	bigint;

c01 CURSOR FOR
SELECT	b.nr_sequencia nr_seq_proc_repasse,
	null nr_seq_mat_repasse
from	procedimento_repasse b,
	procedimento_paciente a
where	a.nr_sequencia		= b.nr_seq_procedimento
and	a.nr_interno_conta	= nr_interno_conta_p

union all

SELECT	null nr_seq_proc_repasse,
	b.nr_sequencia nr_seq_mat_repasse
from	material_repasse b,
	material_atend_paciente a
where	a.nr_sequencia		= b.nr_seq_material
and	a.nr_interno_conta	= nr_interno_conta_p;


BEGIN



select	max(nr_sequencia)
into STRICT	nr_seq_nota_fiscal_w
from	nota_fiscal
where	nr_interno_conta	= nr_interno_conta_p;
		

	if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
		select	max(nr_seq_protocolo)
		into STRICT	nr_seq_protocolo_w
		from	conta_paciente
		where	nr_interno_conta	= nr_interno_conta_p;

		
		if (nr_seq_protocolo_w IS NOT NULL AND nr_seq_protocolo_w::text <> '') then
			select	max(nr_sequencia)
			into STRICT	nr_seq_nota_fiscal_w
			from	nota_fiscal
			where	nr_seq_protocolo	= nr_seq_protocolo_w;

			if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
				select	max(nr_seq_nf_saida)
				into STRICT	nr_seq_nota_fiscal_w
				from	titulo_receber
				where	nr_seq_protocolo	= nr_seq_protocolo_w;

				if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
					select	max(nr_seq_lote_protocolo)
					into STRICT	nr_seq_lote_protocolo_w
					from	protocolo_convenio
					where	nr_seq_protocolo	= nr_seq_protocolo_w;

					if (nr_seq_lote_protocolo_w IS NOT NULL AND nr_seq_lote_protocolo_w::text <> '') then
						select	max(nr_sequencia)
						into STRICT	nr_seq_nota_fiscal_w
						from	nota_fiscal
						where	nr_seq_lote_prot	= nr_seq_lote_protocolo_w;
					end if;

					if (coalesce(nr_seq_nota_fiscal_w::text, '') = '') then
						select	max(nr_interno_conta)
						into STRICT	nr_interno_conta_w
						from	conta_paciente
						where	nr_seq_protocolo	= nr_seq_protocolo_w;

						if (nr_interno_conta_w IS NOT NULL AND nr_interno_conta_w::text <> '') then
							select	max(nr_sequencia)
							into STRICT	nr_seq_nota_fiscal_w
							from	nota_fiscal a
							where	a.nr_interno_conta	= nr_interno_conta_w
							and	a.ie_situacao	= '1';
						end if;
					end if;

				end if;
			end if;

		else
			select	max(nr_seq_nf_saida)
			into STRICT	nr_seq_nota_fiscal_w
			from	titulo_receber
			where	nr_interno_conta	= nr_interno_conta_p;

		end if;
				
	end if;
	
	
if (nr_seq_nota_fiscal_w IS NOT NULL AND nr_seq_nota_fiscal_w::text <> '') then
	open c01;
	loop
	fetch c01 into
		nr_seq_proc_repasse_w,
		nr_seq_mat_repasse_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

			select	max(nr_nota_fiscal),
				max(dt_emissao)
			into STRICT	nr_nota_fiscal_w,
				dt_emissao_w
			from	nota_fiscal
			where	nr_sequencia	= nr_seq_nota_fiscal_w;

			
			begin
			insert	into procmat_repasse_nf(dt_atualizacao,
				dt_atualizacao_nrec,
				dt_emissao,
				nm_usuario,
				nm_usuario_nrec,
				nr_nota_fiscal,
				nr_seq_mat_repasse,
				nr_seq_nota_fiscal,
				nr_seq_proc_repasse,
				nr_sequencia)
			values (clock_timestamp(),
				clock_timestamp(),
				dt_emissao_w,
				nm_usuario_p,
				nm_usuario_p,
				nr_nota_fiscal_w,
				nr_seq_mat_repasse_w,
				nr_seq_nota_fiscal_w,
				nr_seq_proc_repasse_w,
				nextval('procmat_repasse_nf_seq'));
			exception
			when unique_violation then
			ds_erro_w	:= substr(sqlerrm(SQLSTATE), 1, 2000);
			
				null;
			end;	

	end loop;
	close c01;
end if;

end	;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_procmat_repasse_nf ( nr_interno_conta_p bigint, nm_usuario_p text, ie_commit_p text) FROM PUBLIC;

