-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_gerar_agend_list_esp_2 ( nr_seq_lista_p bigint, cd_profissional_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_categoria_w		varchar(10);
cd_pessoa_fisica_w	varchar(20);
cd_convenio_w		bigint;
cd_empresa_ref_w	bigint;
nr_sequencia_w		bigint;
cd_plano_w		varchar(10);
cd_procedencia_w	integer;
cd_usuario_convenio_w	varchar(30);
ds_observacao_w		varchar(2000);
dt_nascimento_w		timestamp;
dt_prevista_w		timestamp;
dt_validade_carteira_w	timestamp;
dt_periodo_inicial_w	timestamp;
dt_periodo_final_w	timestamp;
nm_pessoa_lista_w	varchar(60);
cd_agenda_w		bigint;
cd_tipo_agenda_w	bigint;
nr_seq_proc_interno_w	bigint;
ie_lado_w		varchar(2);
cd_especialidade_w	bigint;
nr_seq_opm_w bigint;
nr_seq_status_ageint_w	agenda_integrada_status.nr_sequencia%type;
ie_classif_agenda_w		agenda_lista_espera.ie_classif_agenda%type;
nr_seq_agenda_w bigint;
dt_agendamento_w timestamp;


BEGIN 
if (coalesce(nr_seq_lista_p,0) > 0) then 
 
	select 	min(nr_sequencia) 
	into STRICT	nr_seq_status_ageint_w	 
	from 	agenda_integrada_status 
	where 	ie_situacao = 'A' 
	and 	ie_Status_tasy = 'EA';
 
	select	coalesce(max(cd_categoria),''), 
		coalesce(max(cd_convenio),''), 
		coalesce(max(cd_empresa_ref),''), 
		coalesce(max(cd_pessoa_fisica),''), 
		coalesce(max(cd_plano),''), 
		coalesce(max(cd_procedencia),''), 
		coalesce(max(cd_usuario_convenio),''), 
		coalesce(max(ds_observacao),''), 
		obter_dados_pf(max(cd_pessoa_fisica),'DN'), 
		max(dt_prevista_internacao), 
		max(dt_validade_carteira), 
		coalesce(max(nm_pessoa_lista),''), 
		clock_timestamp(), 
		max(dt_periodo_final), 
		coalesce(max(cd_agenda),''), 
		coalesce(max(nr_seq_proc_interno),''), 
		coalesce(max(ie_lado),''), 
		coalesce(max(cd_especialidade),''), 
		coalesce(max(ie_classif_agenda),''), 
		coalesce(max(nr_seq_opm),''), 
		max(dt_agendamento) 
	into STRICT	cd_categoria_w, 
		cd_convenio_w, 
		cd_empresa_ref_w, 
		cd_pessoa_fisica_w, 
		cd_plano_w, 
		cd_procedencia_w, 
		cd_usuario_convenio_w, 
		ds_observacao_w, 
		dt_nascimento_w, 
		dt_prevista_w, 
		dt_validade_carteira_w, 
		nm_pessoa_lista_w, 
		dt_periodo_inicial_w, 
		dt_periodo_final_w, 
		cd_agenda_w, 
		nr_seq_proc_interno_w, 
		ie_lado_w, 
		cd_especialidade_w, 
		ie_classif_agenda_w, 
		nr_seq_opm_w, 
		dt_agendamento_w 
	from	agenda_lista_espera 
	where	nr_sequencia = nr_seq_lista_p;
	 
	select count(*) 
	 into STRICT nr_sequencia_w 
	from agenda_lista_espera 
	where trunc(dt_agendamento) = trunc(dt_agendamento_w) 
	 and cd_pessoa_fisica = cd_pessoa_fisica_w;
	  
  if (nr_sequencia_w > 1) then 
		select coalesce(max(ai.nr_sequencia), 0) 
		 into STRICT nr_sequencia_w 
		 from agenda_integrada ai 		  
		where trunc(ai.DT_ATUALIZACAO) = trunc(clock_timestamp()) 
		 and ai.cd_pessoa_fisica = cd_pessoa_fisica_w;	
	 elsif (nr_sequencia_w = 1) then 
	  nr_sequencia_w := 0;
	 end if;
	  
	if (nr_sequencia_w = 0) then 
		select nextval('agenda_integrada_seq') 
		  into STRICT nr_sequencia_w 
		;
	insert into agenda_integrada(	 
		dt_atualizacao, 
		dt_inicio_agendamento, 
		dt_fim_agendamento, 
		nm_usuario, 
		nr_sequencia, 
		cd_categoria, 
		cd_convenio, 
		cd_empresa, 
		cd_estabelecimento, 
		cd_pessoa_fisica, 	 
		cd_plano, 
		cd_procedencia, 	 
		cd_profissional, 	 
		cd_usuario_convenio, 
		ds_observacao, 
		dt_atualizacao_nrec, 
		dt_nascimento, 
		dt_prevista, 
		dt_validade_carteira,	 
		nm_paciente,	 
		nr_seq_status, 
		ie_turno, 
		nr_seq_opm) 
	   values (	 
		clock_timestamp(), 
		dt_periodo_inicial_w, 
		dt_periodo_final_w, 
		nm_usuario_p, 
		nr_sequencia_w, 
		cd_categoria_w, 
		cd_convenio_w, 
		cd_empresa_ref_w, 
		cd_estabelecimento_p, 
		cd_pessoa_fisica_w, 
		cd_plano_w, 
		cd_procedencia_w, 
		cd_profissional_p, 
		cd_usuario_convenio_w, 
		ds_observacao_w, 
		clock_timestamp(), 
		dt_nascimento_w, 
		dt_prevista_w, 
		dt_validade_carteira_w, 
		nm_pessoa_lista_w, 
		nr_seq_status_ageint_w, 
		2, 
		nr_seq_opm_w);
	end if;
		if (coalesce(cd_agenda_w,0) > 0) then	 
			select	max(cd_tipo_agenda) 
			into STRICT	cd_tipo_agenda_w 
			from	agenda 
			where	cd_agenda = cd_agenda_w;
 
			if (coalesce(cd_tipo_agenda_w,0) = 2) then	 -- Exame 
			 
				insert into agenda_integrada_item( 
					nr_sequencia, 
					nr_seq_agenda_int, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					ie_tipo_agendamento, 
					nr_seq_proc_interno, 
					ie_lado) 
				values ( 
					nextval('agenda_integrada_item_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					'E', 
					nr_seq_proc_interno_w, 
					ie_lado_w);
			elsif (coalesce(cd_tipo_agenda_w,0) = 3) then -- Consulta	 
			 
				insert into agenda_integrada_item( 
					nr_sequencia, 
					nr_seq_agenda_int, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					ie_tipo_agendamento, 
					cd_especialidade, 
					ie_classif_agenda) 
				values ( 
					nextval('agenda_integrada_item_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					'C', 
					cd_especialidade_w, 
					ie_classif_agenda_w);
			elsif (coalesce(cd_tipo_agenda_w,0) = 5) then-- Servi√ßo 
			 
				insert into agenda_integrada_item( 
					nr_sequencia, 
					nr_seq_agenda_int, 
					dt_atualizacao, 
					nm_usuario, 
					dt_atualizacao_nrec, 
					nm_usuario_nrec, 
					ie_tipo_agendamento, 
					nr_seq_proc_interno, 
					ie_lado, 
					ie_classif_agenda) 
				values ( 
					nextval('agenda_integrada_item_seq'), 
					nr_sequencia_w, 
					clock_timestamp(), 
					nm_usuario_p, 
					clock_timestamp(), 
					nm_usuario_p, 
					'S', 
					nr_seq_proc_interno_w, 
					ie_lado_w, 
					ie_classif_agenda_w);
			end if;
		end if;
 
	update	agenda_lista_espera 
	set	ie_status_espera = 'E' 
	where	nr_sequencia = nr_seq_lista_p;
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_gerar_agend_list_esp_2 ( nr_seq_lista_p bigint, cd_profissional_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

