-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_aprovacoes_pendentes ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cargo_w			bigint;
cd_cargo_aprov_w			bigint;
ie_aprovacao_nivel_w		varchar(1);
nr_sequencia_w			bigint;
cd_perfil_w			integer	:= obter_perfil_ativo;
cd_estab_exclusivo_w		integer;
ie_aprov_regra_minimo_w		varchar(1);
ie_administra_outros_estab_w	varchar(1);
ie_nao_liberado_w			varchar(1);
ie_apresenta_w			varchar(1);
nr_seq_proc_aprov_w		bigint;
cd_pessoa_fisica_aprov_w		varchar(10);
nm_usuario_parecer_w		varchar(15);
dt_resp_parecer_w			timestamp;
dt_liberacao_w			timestamp;
ie_processo_nivel_w		varchar(1);
nr_nivel_atual_w			bigint;
nm_usuario_aprov_w		varchar(15);
ie_responsavel_w			varchar(1);
nr_nivel_aprovacao_w		bigint;
nr_seq_proc_aprov_nivel_w		bigint;
cd_cargo_nivel_w			bigint;
nm_usuario_nivel_w		varchar(15);
ie_mesmo_nivel_w			varchar(1);
nr_nivel_aprov_cargo_w		bigint;
nr_nivel_aprov_cargo_ww		bigint;
nr_nivel_aprov_pf_w		bigint;
nr_nivel_aprov_pf_ww		bigint;
ie_pessoa_delegada_w		varchar(1);
ie_origem_doc_w			varchar(1);
nr_documento_w			bigint;
ie_urgente_w			varchar(1);
cd_estabelecimento_w		integer;
ie_tipo_documento_w		varchar(2);
ds_tipo_documento_w		varchar(255);
qt_existe_w			bigint;
nr_seq_ult_aprovacao_w		bigint;
qt_registros_w			bigint;
qt_nova_estrutura_w        	bigint;

c01 CURSOR FOR
SELECT	a.nr_sequencia,
	a.nr_seq_proc_aprov,
	coalesce(a.cd_cargo,0) cd_cargo,
	coalesce(a.cd_pessoa_fisica,'0') cd_pessoa_fisica,
	a.nm_usuario_parecer,
	a.dt_resp_parecer,
	a.dt_liberacao,
	coalesce(a.ie_urgente,'N') ie_urgencia,
	a.cd_estabelecimento,
	ie_tipo ie_origem_doc,	
	a.nr_documento
from	processo_aprov_compra a
where	a.ie_aprov_reprov = 'P'
and	a.cd_estabelecimento = coalesce(cd_estab_exclusivo_w,a.cd_estabelecimento)
and	coalesce(a.dt_definicao::text, '') = ''
and	a.dt_atualizacao >= clock_timestamp() - interval '365 days' /*Fiz esse filtro porque nunca vai ter processos pendentes com mais de um ano*/
order by	nr_sequencia;

c010 CURSOR FOR
SELECT	cd_cargo,
	nm_usuario
from	(
	SELECT	coalesce(a.cd_cargo,0) cd_cargo,
		nm_usuario_p nm_usuario
	from	pessoa_fisica a
	where	a.cd_pessoa_fisica = cd_pessoa_fisica_p
	
union all

	select	coalesce(b.cd_cargo,0) cd_cargo,
		a.nm_usuario nm_usuario
	from	usuario a,
		pessoa_fisica b,
		pessoa_fisica_delegacao c
	where	a.cd_pessoa_fisica = b.cd_pessoa_fisica
	and	b.cd_pessoa_fisica = c.cd_pessoa_fisica
	and	c.cd_pessoa_substituta = cd_pessoa_fisica_p
	and	  ((coalesce(trunc(c.dt_inicio_limite),trunc(clock_timestamp())) <= trunc(clock_timestamp())) and (trunc(c.dt_limite) >= trunc(clock_timestamp())))) alias14
group by	cd_cargo,
	nm_usuario;

BEGIN

select	coalesce(max(cd_cargo),0)
into STRICT	cd_cargo_w
from	pessoa_fisica
where	cd_pessoa_fisica = cd_pessoa_fisica_p;

begin
select	coalesce(ie_aprovacao_nivel,'N'),
	coalesce(ie_aprov_regra_minimo,'N')
into STRICT	ie_aprovacao_nivel_w,
	ie_aprov_regra_minimo_w
from	parametro_compras
where	cd_estabelecimento = cd_estabelecimento_p;
exception
when others then
	ie_aprovacao_nivel_w		:= 'N';
	ie_aprov_regra_minimo_w		:= 'N';
end;

select	substr(coalesce(obter_valor_param_usuario(267, 6, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p),'N'),1,1),
	substr(coalesce(obter_valor_param_usuario(267, 3, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p),'N'),1,1)
into STRICT	ie_administra_outros_estab_w,
	ie_nao_liberado_w
;

if (ie_administra_outros_estab_w = 'N') then
	cd_estab_exclusivo_w	:= cd_estabelecimento_p;
else
	cd_estab_exclusivo_w	:= null;
end if;

delete
from	w_processo_aprov_compra
where	nm_usuario = nm_usuario_p;

nr_seq_ult_aprovacao_w	:= 0;

for vet_proc_w in c01 loop
	begin
	nr_sequencia_w			:= vet_proc_w.nr_sequencia;
	nr_seq_proc_aprov_w		:= vet_proc_w.nr_seq_proc_aprov;
	cd_cargo_aprov_w		:= vet_proc_w.cd_cargo;
	cd_pessoa_fisica_aprov_w	:= vet_proc_w.cd_pessoa_fisica;
	nm_usuario_parecer_w		:= vet_proc_w.nm_usuario_parecer;
	dt_resp_parecer_w		:= vet_proc_w.dt_resp_parecer;
	dt_liberacao_w			:= vet_proc_w.dt_liberacao;
	ie_urgente_w			:= vet_proc_w.ie_urgencia;
	cd_estabelecimento_w		:= vet_proc_w.cd_estabelecimento;
	ie_origem_doc_w			:= vet_proc_w.ie_origem_doc;
	nr_documento_w			:= vet_proc_w.nr_documento;	
	ie_apresenta_w 			:= 'N';
	
	select obter_estrutura_aprovacao(nr_seq_proc_aprov_w, nr_documento_w)
	into STRICT   qt_nova_estrutura_w
	;
	
	if (nr_sequencia_w <> nr_seq_ult_aprovacao_w) then	
		
		select	count(1)
		into STRICT	qt_existe_w
		from	w_processo_aprov_compra
		where	nr_sequencia = nr_sequencia_w
		and	nm_usuario = nm_usuario_p;
		
		ie_processo_nivel_w	:= ie_aprovacao_nivel_w;

		if (ie_processo_nivel_w = 'R') then
			
			if (qt_nova_estrutura_w > 0) then
			
				select	coalesce(max(a.ie_aprovacao_nivel),'N')
				into STRICT	ie_processo_nivel_w
				from	processo_aprovacao a,
					processo_aprov_compra b
				where	a.cd_processo_aprov	= b.cd_processo_aprov
				and	b.nr_sequencia		= nr_sequencia_w
				and 	b.nr_documento     	= nr_documento_w;
			else
				select	coalesce(max(a.ie_aprovacao_nivel),'N')
				into STRICT	ie_processo_nivel_w
				from	processo_aprovacao a,
					processo_aprov_resp b,
					processo_aprov_compra c
				where	a.cd_processo_aprov	= b.cd_processo_aprov
				and	c.nr_seq_proc_aprov	= b.nr_sequencia
				and	c.nr_sequencia		= nr_sequencia_w;

			end if;
		end if;

		if (qt_nova_estrutura_w > 0) then
		
			select	coalesce(min(nr_nivel_aprovacao),0)
			into STRICT	nr_nivel_atual_w
			from	processo_aprov_compra
			where	ie_aprov_reprov	= 'P'
			and	nr_sequencia		= nr_sequencia_w
			and 	nr_documento      	= nr_documento_w
			and	coalesce(dt_definicao::text, '') = '';
		else
			select	coalesce(min(a.nr_nivel_aprovacao),0)
			into STRICT	nr_nivel_atual_w
			from	processo_aprov_resp a,
				processo_aprov_compra b
			where	b.nr_seq_proc_aprov	= a.nr_sequencia
			and	b.ie_aprov_reprov	= 'P'
			and	b.nr_sequencia		= nr_sequencia_w
			and	coalesce(b.dt_definicao::text, '') = '';
		end if;
	end if;	
		
	if (qt_existe_w = 0) then

		/* Quando a aprovacao e da pessoa fisica do usuario */

		if (ie_apresenta_w = 'N') and (cd_pessoa_fisica_aprov_w <> '0') and (cd_pessoa_fisica_aprov_w = cd_pessoa_fisica_p) and
			((dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') or (ie_nao_liberado_w = 'S') or (ie_aprov_regra_minimo_w = 'S')) then
			ie_apresenta_w	:= 'S';
		end if;
		
		/* Quando a aprovacao e do cargo do usuario */

		if (ie_apresenta_w = 'N') and (cd_cargo_aprov_w <> 0) and (cd_cargo_aprov_w = cd_cargo_w) and
			((dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') or (ie_nao_liberado_w = 'S') or (ie_aprov_regra_minimo_w = 'S')) then
			ie_apresenta_w	:= 'S';
		end if;

		/* Quando o usuario e responsavel por dar um parecer */

		if (ie_apresenta_w = 'N') and (nm_usuario_parecer_w = nm_usuario_p) and (coalesce(dt_resp_parecer_w::text, '') = '') then
			ie_apresenta_w	:= 'S';
		end if;

    /* Quando processo de aprovacao por Nivel */

		if (ie_apresenta_w = 'N') and (ie_processo_nivel_w = 'S') then
			begin			

			/* Se o processo por nivel for conforme a regra do processo de aprovacao */

			if (ie_aprovacao_nivel_w = 'R') then
				begin

				if (qt_nova_estrutura_w > 0) then
				
					begin
					select	coalesce(ie_responsavel,'C')
					into STRICT	ie_responsavel_w
					from	processo_aprov_compra
					where	nr_seq_proc_aprov	= nr_seq_proc_aprov_w
					and	nr_documento		= nr_documento_w;
					exception
					when no_data_found or too_many_rows then
						ie_responsavel_w := 'C';
					end;
				else
					begin
					select	coalesce(ie_responsavel,'C')
					into STRICT	ie_responsavel_w
					from	processo_aprov_resp
					where	nr_sequencia	= nr_seq_proc_aprov_w;
					exception
					when no_data_found or too_many_rows then
						ie_responsavel_w := 'C';
					end;
				end if;
				
				if (ie_responsavel_w <> 'F') then
					
					if (qt_nova_estrutura_w > 0) then
					
						select	coalesce(max(b.ie_responsavel),'C')
						into STRICT	ie_responsavel_w
						from	processo_aprovacao a,
							processo_aprov_compra b
						where	a.cd_processo_aprov	= b.cd_processo_aprov
						and	b.nr_sequencia		= nr_sequencia_w
						and	b.nr_documento		= nr_documento_w
						and	b.nm_usuario_regra	= nm_usuario_p
						and	b.ie_responsavel		= 'F';
					else
						select	coalesce(max(b.ie_responsavel),'C')
						into STRICT	ie_responsavel_w
						from	processo_aprovacao a,
							processo_aprov_resp b,
							processo_aprov_compra c
						where	a.cd_processo_aprov	= b.cd_processo_aprov
						and	c.nr_seq_proc_aprov	= b.nr_sequencia
						and	c.nr_sequencia		= nr_sequencia_w
						and	b.nm_usuario_regra	= nm_usuario_p
						and	b.ie_responsavel		= 'F';
					end if;
				end if;

				ie_mesmo_nivel_w	:= 'N';

				open c010;
				loop
				fetch c010 into
					cd_cargo_nivel_w,
					nm_usuario_nivel_w;
				EXIT WHEN NOT FOUND or ie_mesmo_nivel_w <> 'N';  /* apply on c010 */
					begin

					if (ie_responsavel_w = 'C') then
					
						if (qt_nova_estrutura_w > 0) then
					
							select	coalesce(min(nr_nivel_aprovacao),0),
								coalesce(min(nr_seq_proc_aprov),0)
							into STRICT	nr_nivel_aprovacao_w,
								nr_seq_proc_aprov_nivel_w
							from	processo_aprov_compra
							where	nr_sequencia = nr_sequencia_w
							and	nr_documento = nr_documento_w
							and	cd_cargo = cd_cargo_nivel_w
							and	ie_aprov_reprov = 'P';
						else
							select	coalesce(min(a.nr_nivel_aprovacao),0),
								coalesce(min(nr_seq_proc_aprov),0)
							into STRICT	nr_nivel_aprovacao_w,
								nr_seq_proc_aprov_nivel_w
							from	processo_aprov_resp a,
								processo_aprov_compra b
							where	b.nr_seq_proc_aprov = a.nr_sequencia
							and	b.nr_sequencia = nr_sequencia_w
							and	a.cd_cargo = cd_cargo_nivel_w
							and	b.ie_aprov_reprov = 'P';
						end if;
							
					elsif (ie_responsavel_w = 'F') then
					
						if (qt_nova_estrutura_w > 0) then
					
							select	coalesce(min(nr_nivel_aprovacao),0),
								coalesce(min(nr_seq_proc_aprov),0)
							into STRICT	nr_nivel_aprovacao_w,
								nr_seq_proc_aprov_nivel_w
							from	processo_aprov_compra
							where	nr_sequencia = nr_sequencia_w
							and	nr_documento = nr_documento_w
							and	nm_usuario_regra = nm_usuario_nivel_w
							and	ie_aprov_reprov = 'P';
						else
							select	coalesce(min(a.nr_nivel_aprovacao),0),
								coalesce(min(nr_seq_proc_aprov),0)
							into STRICT	nr_nivel_aprovacao_w,
								nr_seq_proc_aprov_nivel_w
							from	processo_aprov_resp a,
								processo_aprov_compra b
							where	b.nr_seq_proc_aprov = a.nr_sequencia
							and	b.nr_sequencia = nr_sequencia_w
							and	a.nm_usuario_regra = nm_usuario_nivel_w
							and	b.ie_aprov_reprov = 'P';
						end if;
					
					end if;
					
					/*Identifica que o aprovador e do mesmo nivel do processo que esta pendente
					Por exemplo, esta pendente para o gerente geral, mas o Diretor e do mesmo nivel do gerente geral, entao vai cair para os dois*/
					if (nr_nivel_aprovacao_w = nr_nivel_atual_w) and (nr_seq_proc_aprov_w = nr_seq_proc_aprov_nivel_w)then
						ie_mesmo_nivel_w := 'S';
					end if;

					end;
				end loop;
				close c010;

				if (ie_mesmo_nivel_w	= 'S') then
					ie_apresenta_w	:= 'S';
				end if;

				end;

			/* Se o processo por nivel for conforme o cadastro do cargo/pessoa */

			elsif (ie_aprovacao_nivel_w = 'S') and
				((dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') or (ie_nao_liberado_w = 'S') or (ie_aprov_regra_minimo_w = 'S')) then
				begin

				select	coalesce(max(nr_nivel_aprovacao),0)
				into STRICT	nr_nivel_aprov_cargo_w
				from	cargo
				where	cd_cargo = cd_cargo_w;

				begin
				select	coalesce(nr_nivel_aprovacao,0)
				into STRICT	nr_nivel_aprov_cargo_ww
				from	cargo
				where	cd_cargo = cd_cargo_aprov_w;
				exception
				when others then
					nr_nivel_aprov_cargo_ww := 0;
				end;				
				

				SELECT	coalesce(max(nr_nivel_aprovacao),0)
				INTO STRICT	nr_nivel_aprov_pf_w
				FROM	usuario
				WHERE	nm_usuario = nm_usuario_p;
				
				begin
				select	coalesce(nm_usuario,'X')
				into STRICT	nm_usuario_aprov_w
				from	usuario
				where	cd_pessoa_fisica = cd_pessoa_fisica_aprov_w
				and	ie_situacao = 'A';
				exception
				when others then
					nm_usuario_aprov_w := 'X';
				end;

				SELECT	coalesce(max(nr_nivel_aprovacao),0)
				INTO STRICT	nr_nivel_aprov_pf_ww
				FROM	usuario
				WHERE	nm_usuario = nm_usuario_aprov_w;

				if	((coalesce(nr_nivel_aprov_cargo_w,0) <> 0) and (nr_nivel_aprov_cargo_w = nr_nivel_aprov_cargo_ww)) or
					((coalesce(nr_nivel_aprov_pf_w,0) <> 0) and (nr_nivel_aprov_pf_w = nr_nivel_aprov_pf_ww)) then
					ie_apresenta_w	:= 'S';
				end if;

				end;
			end if;

			end;
		end if;

		/* Processo por Nivel, Valores ou Nivel com valores */


		/* Considera delegacao */

		if (ie_apresenta_w = 'N') and
			((dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') or (ie_nao_liberado_w = 'S') or (ie_aprov_regra_minimo_w = 'S')) then

			select	substr(obter_se_pessoa_delegacao(nr_sequencia_w,nr_seq_proc_aprov_w,cd_pessoa_fisica_p, 'AC', clock_timestamp()),1,1)
			into STRICT	ie_pessoa_delegada_w
			;

			if (ie_pessoa_delegada_w = 'S') then
				ie_apresenta_w	:= 'S';
			end if;

		end if;
				
		if (ie_origem_doc_w = 'O') then
		
			select	count(*)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'O'
			and not exists (SELECT 1 from ordem_compra_item x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then
			
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
			
		elsif (ie_origem_doc_w = 'R') then
			select	count(*)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'R'
			and not exists (SELECT 1 from item_requisicao_material x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then
							
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
			
		elsif (ie_origem_doc_w = 'S') then
			select	count(*)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'S'
			and not exists (SELECT 1 from solic_compra_item x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
			
		elsif (ie_origem_doc_w = 'C') then
			select	count(*)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'C'
			and not exists (SELECT 1 from cot_compra_item x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then			
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
			
		elsif (ie_origem_doc_w = 'N') then
			select	count(*)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'N'
			and not exists (SELECT 1 from nota_fiscal_item x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
			
		elsif (ie_origem_doc_w = 'L') then
			select	count(*)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'L'
			and not exists (SELECT 1 from reg_lic_item x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
			
		elsif (ie_origem_doc_w = 'G') then
			select	count(*)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'G'
			and	not exists (SELECT 1 from contrato x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
			
		elsif (ie_origem_doc_w = 'E') then
			select	count(1)
			into STRICT	qt_registros_w
			from	processo_aprov_compra a
			where	a.nr_sequencia = nr_sequencia_w
			and	a.ie_aprov_reprov = 'P'
			and	a.ie_tipo = 'E'
			and	not exists (SELECT 1 from projeto_recurso x where x.nr_seq_aprovacao = a.nr_sequencia);
			
			if (qt_registros_w > 0) then
				update	processo_aprov_compra a
				set	ie_aprov_reprov = 'B'
				where	a.nr_sequencia = nr_sequencia_w;
				ie_apresenta_w	:= 'N';
			end if;
		end if;
		

		/* Se for para apresentar o processo, gera informacoes para a tabela temporaria */

		if (ie_apresenta_w = 'S') then
			
			if (ie_origem_doc_w = 'O') then
	
				select	coalesce(max(CASE WHEN ie_tipo_ordem='T' THEN  'TE'  ELSE 'OC' END ),'OC'),
						coalesce(max(CASE WHEN ie_tipo_ordem='T' THEN  WHEB_MENSAGEM_PCK.get_texto(1014379)  ELSE WHEB_MENSAGEM_PCK.get_texto(301426) END ),WHEB_MENSAGEM_PCK.get_texto(301426))
				into STRICT	ie_tipo_documento_w,
						ds_tipo_documento_w
				from	ORDEM_COMPRA
				where	nr_ordem_compra = nr_documento_w;
				
			elsif (ie_origem_doc_w = 'S') then
			
				select	coalesce(ie_tipo_servico,'SC'),
					CASE WHEN ie_tipo_servico='CD' THEN WHEB_MENSAGEM_PCK.get_texto(301427) WHEN ie_tipo_servico='SN' THEN WHEB_MENSAGEM_PCK.get_texto(301430) WHEN ie_tipo_servico='SP' THEN WHEB_MENSAGEM_PCK.get_texto(301432) WHEN ie_tipo_servico='SR' THEN WHEB_MENSAGEM_PCK.get_texto(301433) WHEN ie_tipo_servico='SI' THEN WHEB_MENSAGEM_PCK.get_texto(782823)  ELSE WHEB_MENSAGEM_PCK.get_texto(301435) END
				into STRICT	ie_tipo_documento_w,
					ds_tipo_documento_w
				from	solic_compra
				where	nr_solic_compra = nr_documento_w;
			
			elsif (ie_origem_doc_w = 'C') then
			
				ie_tipo_documento_w	:= 'CC';
				ds_tipo_documento_w	:= WHEB_MENSAGEM_PCK.get_texto(301425);
				
			elsif (ie_origem_doc_w = 'R') then
			
				ie_tipo_documento_w	:= 'RM';
				ds_tipo_documento_w	:= WHEB_MENSAGEM_PCK.get_texto(301422);
						
			elsif (ie_origem_doc_w = 'N') then
			
				ie_tipo_documento_w	:= 'NF';
				ds_tipo_documento_w	:= WHEB_MENSAGEM_PCK.get_texto(301421);
			
			elsif (ie_origem_doc_w = 'L') then
			
				ie_tipo_documento_w	:= 'L';
				ds_tipo_documento_w	:= WHEB_MENSAGEM_PCK.get_texto(301420);
				
			elsif (ie_origem_doc_w = 'G') then
				ie_tipo_documento_w := 'G';
				ds_tipo_documento_w	:= WHEB_MENSAGEM_PCK.get_texto(1170787);
				
			elsif (ie_origem_doc_w = 'E') then
				ie_tipo_documento_w := 'E';
				ds_tipo_documento_w	:= WHEB_MENSAGEM_PCK.get_texto(1206295);
			end if;

			insert into w_processo_aprov_compra(
				nr_sequencia,
				nr_seq_proc_aprov,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nm_usuario,
				dt_atualizacao,
				ie_tipo_documento,
				ie_origem_doc,
				ds_tipo_documento,
				nr_documento,
				cd_estabelecimento,
				ie_urgente)
			values (
				nr_sequencia_w,
				nr_seq_proc_aprov_w,
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				ie_tipo_documento_w,
				ie_origem_doc_w,
				ds_tipo_documento_w,
				nr_documento_w,
				cd_estabelecimento_w,
				ie_urgente_w);
		end if;

		nr_seq_ult_aprovacao_w	:= nr_sequencia_w;

	end if;

	end;
end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_aprovacoes_pendentes ( cd_pessoa_fisica_p text, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

