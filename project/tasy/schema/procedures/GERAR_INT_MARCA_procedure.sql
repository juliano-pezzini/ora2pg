-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_int_marca ( nr_seq_marca_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) AS $body$
DECLARE



nr_sequencia_int_w				w_int_marca.nr_sequencia%type;
ds_marca_int_w					w_int_marca.ds_marca%type;
ie_situacao_int_w				w_int_marca.ie_situacao%type;
nr_seq_tipo_int_w				w_int_marca.nr_seq_tipo%type;
cd_cnpj_fabricante_w				pessoa_juridica.cd_cgc%type;
cd_fabricante_w					w_int_marca.cd_cnpj_fabricante%type;
cd_tipo_marca_tasy_w				tipo_marca.nr_sequencia%type;
qt_registros_w					bigint;
ie_status_w					varchar(15);
ds_erro_w					varchar(2000);
nr_sequencia_nova_marca_w			marca.nr_sequencia%type;
qt_dia_ressup_int_w				w_int_marca.qt_dia_ressup%type;
ds_observacao_int_w 				w_int_marca.ds_observacao%type;
cd_sistema_ant_int_w				w_int_marca.cd_sistema_ant%type;
nr_seq_marca_w					w_int_marca.nr_sequencia%type;
nr_sequencia_w					marca.nr_sequencia%type;



BEGIN

nr_seq_marca_w := nr_seq_marca_p;

if (coalesce(nr_seq_marca_w,0) = 0) then
	select	max(nr_sequencia)
	into STRICT	nr_seq_marca_w
	from	w_int_marca;
end if;

ie_status_w	:= 'OK';

select	count(*)
into STRICT	qt_registros_w
from	w_int_marca
where   nr_sequencia = nr_seq_marca_w;

if (qt_registros_w > 0) then

	select 	nr_sequencia,
		ds_marca,
		coalesce(ie_situacao,'A'),
		nr_seq_tipo,
		cd_cnpj_fabricante,
		qt_dia_ressup,
		ds_observacao,
		cd_sistema_ant
	into STRICT	nr_sequencia_int_w,
		ds_marca_int_w,
		ie_situacao_int_w,
		nr_seq_tipo_int_w,
		cd_fabricante_w,
		qt_dia_ressup_int_w,
		ds_observacao_int_w,
		cd_sistema_ant_int_w
	from 	w_int_marca
	where 	nr_sequencia = nr_seq_marca_w;
else
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(449957,'NR_SEQUENCIA_W=' || nr_seq_marca_w); /*Não existe nenhum registro na tabela de passos referente a integração do fabricante com o código #@NR_SEQUENCIA_W#@.*/
end if;

/*DS_MARCA*/

if (ie_status_w = 'OK') and (coalesce(ds_marca_int_w::text, '') = '') then
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(449958); /*Favor preencher a descrição da marca.*/
end if;

/*IE_SITUACAO*/

if (ie_status_w = 'OK') and (coalesce(ie_situacao_int_w::text, '') = '') then
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(449963); /*Favor informar a situação da marca, pois esse campo é obrigatório.*/
elsif (ie_situacao_int_w not in ('A','I')) then
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(449965); /*Favor informar a situação da marca corretamente (A para a situação Ativa, I para a situação Inativa).*/
end if;

/*NR_SEQ_TIPO*/

if (ie_status_w = 'OK') and (coalesce(nr_seq_tipo_int_w::text, '') = '') then
	ie_status_w	:= 'E';
	ds_erro_w	:= wheb_mensagem_pck.get_Texto(449966,'NR_SEQUENCIA_W=' || nr_seq_marca_w); /*Favor informar um tipo para a marca com o código #@NR_SEQUENCIA_W#@.*/
else

	select 	coalesce(somente_numero(bkf_obter_conv_interna('','TIPO_MARCA','NR_SEQUENCIA',nr_seq_tipo_int_w,'BKF')),0)
	into STRICT	cd_tipo_marca_tasy_w
	;

	if (cd_tipo_marca_tasy_w = 0) then
		ie_status_w	:= 'E';
		ds_erro_w	:= wheb_mensagem_pck.get_Texto(449967,'NR_SEQUENCIA_INT_W'||nr_seq_tipo_int_w); /*Não foi cadastrada a conversão para o tipo da marca #@NR_SEQUENCIA_INT_W#@ que veio do sistema externo.*/
	else
		select	count(*)
		into STRICT	qt_registros_w
		from	tipo_marca
		where	nr_sequencia = cd_tipo_marca_tasy_w
		and	ie_situacao = 'A';

		if (qt_registros_w = 0) then
			ie_status_w	:= 'E';
			ds_erro_w	:= wheb_mensagem_pck.get_texto(449973, 'TIPO_MARCA_TASY_W'||cd_tipo_marca_tasy_w); /*Não existe no Tasy um tipo de marca com o código #@TIPO_MARCA_TASY_W#@.*/
		end if;
	end if;
end if;

/*CD_CNPJ_FABRICANTE*/

if (ie_status_w = 'OK') and (cd_fabricante_w IS NOT NULL AND cd_fabricante_w::text <> '') then

	select	count(*)
	into STRICT	qt_registros_w
	from	pessoa_juridica
	where	cd_sistema_ant = cd_fabricante_w
	and	ie_situacao = 'A';

	if (qt_registros_w = 0) then
		select	max(cd_cgc)
		into STRICT	cd_cnpj_fabricante_w
		from	pessoa_juridica
		where	cd_sistema_ant = cd_fabricante_w
		and	ie_situacao = 'A';
	end if;
end if;

if (ie_status_w = 'OK') then

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_sequencia_w
	from	marca
	where	cd_sistema_ant = cd_sistema_ant_int_w;

	if (nr_sequencia_w = 0) then

		select	nextval('marca_seq')
		into STRICT	nr_sequencia_nova_marca_w
		;

		insert into marca(
			nr_sequencia,
			ds_marca,
			ie_situacao,
			dt_atualizacao,
			nm_usuario,
			nr_seq_tipo,
			qt_dia_ressup,
			dt_atualizacao_nrec,
			nm_usuario_nrec,
			ds_observacao,
			cd_sistema_ant,
			cd_cnpj_fabricante)
		values (	nr_sequencia_nova_marca_w,
			ds_marca_int_w,
			ie_situacao_int_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_tipo_marca_tasy_w,
			qt_dia_ressup_int_w,
			clock_timestamp(),
			nm_usuario_p,
			ds_observacao_int_w,
			cd_sistema_ant_int_w,
			cd_cnpj_fabricante_w);
	else
		update	marca
		set	ds_marca = ds_marca_int_w,
			ie_situacao = ie_situacao_int_w,
			dt_atualizacao = clock_timestamp(),
			nm_usuario = nm_usuario_p,
			nr_seq_tipo = cd_tipo_marca_tasy_w,
			qt_dia_ressup = coalesce(qt_dia_ressup_int_w,qt_dia_ressup),
			ds_observacao = coalesce(ds_observacao_int_w,ds_observacao),
			cd_cnpj_fabricante = coalesce(cd_cnpj_fabricante_w,cd_cnpj_fabricante)
		where	nr_sequencia = nr_sequencia_w;
	end if;
end if;

delete from w_int_marca
where nr_sequencia = nr_seq_marca_w;

commit;

ie_status_p	:= ie_status_w;
ds_erro_p		:= ds_erro_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_int_marca ( nr_seq_marca_p bigint, nm_usuario_p text, ie_status_p INOUT text, ds_erro_p INOUT text) FROM PUBLIC;

