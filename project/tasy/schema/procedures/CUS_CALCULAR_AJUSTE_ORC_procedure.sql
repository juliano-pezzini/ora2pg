-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cus_calcular_ajuste_orc ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Gerar o valor de orçamento
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[  ]  Objetos do dicionário [ X ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atenção:
-------------------------------------------------------------------------------------------------------------------

Referências:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_centro_controle_w			orcamento_custo.cd_centro_controle%type;
cd_centro_controle_orig_w		cus_regra_ajuste_orc.cd_centro_controle_origem%type;
cd_centro_controle_dest_w		cus_regra_ajuste_orc.cd_centro_controle_dest%type;
cd_empresa_w				empresa.cd_empresa%type;
ie_sobrepor_w				cus_regra_ajuste_orc.ie_sobrepor%type;
ie_tipo_gasto_w				orcamento_custo.ie_tipo_gasto%type;
pr_calcular_w				cus_regra_ajuste_orc.pr_ajuste%type;
vl_orcado_w				orcamento_custo.vl_orcado%type;
vl_orcado_ww				cus_regra_ajuste_orc.vl_ajuste_calc%type;
qt_dias_prazo_w				orcamento_custo.qt_dias_prazo%type;
nr_seq_gng_w				cus_regra_ajuste_orc.nr_seq_gng_origem%type;
nr_seq_ng_origem_w			cus_regra_ajuste_orc.nr_seq_ng_origem%type;
nr_seq_ng_destino_w			cus_regra_ajuste_orc.nr_seq_ng_dest%type;
nr_sequencia_w				cus_regra_ajuste_orc.nr_sequencia%type;
nr_seq_ng_w				orcamento_custo.nr_seq_ng%type;
vl_total_w				orcamento_custo.vl_orcado%type;
qt_registro_w				integer;
nr_seq_ng_dest_w		orcamento_custo.nr_seq_ng%type;
cd_estab_origem_w			cus_regra_ajuste_orc.cd_estabelecimento%type;
cd_estab_destino_w			cus_regra_ajuste_orc.cd_estab_destino%type;

c_regra CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_centro_controle_origem,
		a.cd_centro_controle_dest,
		a.ie_sobrepor,
		a.pr_ajuste,
		a.nr_seq_gng_origem,
		a.nr_seq_ng_origem,
		a.nr_seq_ng_dest,
		coalesce(a.cd_estabelecimento, cd_estabelecimento_p),
		coalesce(a.cd_estab_destino, cd_estabelecimento_p)
	from	cus_regra_ajuste_orc	a
	where	a.nr_seq_tabela	= nr_seq_tabela_p
	order by
		a.nr_seq_calculo;

c_orcamento CURSOR FOR
	SELECT	a.cd_centro_controle,
		a.nr_seq_ng,
		a.vl_orcado,
		a.qt_dias_prazo
	from	natureza_gasto	b,
		orcamento_custo	a
	where	a.nr_seq_ng		= b.nr_sequencia
	and	a.cd_estabelecimento	= coalesce(b.cd_estabelecimento, a.cd_estabelecimento)
	and 	a.cd_estabelecimento	= cd_estab_origem_w
	and	b.cd_empresa		= cd_empresa_w
	and	a.nr_seq_tabela		= nr_seq_tabela_p
	and	a.nr_seq_ng		= coalesce(nr_seq_ng_origem_w, a.nr_seq_ng)
	and	a.cd_centro_controle	= coalesce(cd_centro_controle_orig_w, a.cd_centro_controle)
	and	b.nr_seq_gng		= coalesce(nr_seq_gng_w, b.nr_seq_gng);
	

BEGIN
cd_empresa_w	:= obter_empresa_estab(cd_estabelecimento_p);

open c_regra;
loop
fetch c_regra into
	nr_sequencia_w,
	cd_centro_controle_orig_w,
	cd_centro_controle_dest_w,
	ie_sobrepor_w,
	pr_calcular_w,
	nr_seq_gng_w,
	nr_seq_ng_origem_w,
	nr_seq_ng_destino_w,
	cd_estab_origem_w,
	cd_estab_destino_w;
EXIT WHEN NOT FOUND; /* apply on c_regra */
	begin
	vl_total_w	:= 0;
	
	open c_orcamento;
	loop
	fetch c_orcamento into	
		cd_centro_controle_w,
		nr_seq_ng_w,
		vl_orcado_w,
		qt_dias_prazo_w;
	EXIT WHEN NOT FOUND; /* apply on c_orcamento */
		begin
		vl_orcado_w		:= dividir(vl_orcado_w * pr_calcular_w, 100);
		vl_total_w		:= vl_total_w + vl_orcado_w;
		
		if (nr_seq_ng_destino_w IS NOT NULL AND nr_seq_ng_destino_w::text <> '') then
			nr_seq_ng_dest_w	:=	nr_seq_ng_destino_w;
		else
			nr_seq_ng_dest_w	:=	nr_seq_ng_w;
		end if;
		
		select	count(1)
		into STRICT	qt_registro_w
		from	orcamento_custo
		where	cd_estabelecimento	= cd_estab_destino_w
		and	nr_seq_tabela		= nr_seq_tabela_p
		and	nr_seq_ng		= nr_seq_ng_dest_w
		and	cd_centro_controle	= cd_centro_controle_dest_w  LIMIT 1;
		
		if (qt_registro_w = 0) then
			ie_tipo_gasto_w	:= substr(cus_obter_tipo_gasto_centro(	cd_estab_destino_w,
										cd_centro_controle_w,
										nr_seq_gng_w,
										null,
										nr_seq_ng_dest_w),1,1);
		
		
			if (ie_tipo_gasto_w in ('V','F','R')) then
				insert into orcamento_custo(nr_sequencia,
					cd_estabelecimento,
					cd_tabela_custo,
					cd_centro_controle,
					ie_tipo_gasto,
					dt_atualizacao,
					nm_usuario,
					vl_orcado,
					vl_avista,
					vl_distribuido,
					vl_receb_distrib,
					qt_dias_prazo,
					vl_a_distribuir,
					nr_seq_ng,
					nr_seq_tabela)
				values (nextval('orcamento_custo_seq'),
					cd_estab_destino_w,
					cd_tabela_custo_p,
					cd_centro_controle_dest_w,
					ie_tipo_gasto_w,
					clock_timestamp(),
					nm_usuario_p,
					vl_orcado_w,
					0,
					0,
					0,
					qt_dias_prazo_w,
					0,
					nr_seq_ng_dest_w,
					nr_seq_tabela_p);
			elsif (ie_tipo_gasto_w = 'M') then
				cus_ratear_orcamento_tipo(	cd_estab_destino_w,
								cd_tabela_custo_p,
								cd_centro_controle_dest_w,
								null,
								vl_orcado_ww,
								qt_dias_prazo_w,
								46,
								nm_usuario_p,
								nr_seq_tabela_p);
			end if;
		else
			update	orcamento_custo
			set	vl_orcado		= vl_orcado + vl_orcado_w,
				vl_avista		= 0,
				vl_distribuido		= 0,
				vl_receb_distrib	= 0
			where	cd_estabelecimento	= cd_estab_destino_w
			and	nr_seq_tabela		= nr_seq_tabela_p
			and	nr_seq_ng		= nr_seq_ng_dest_w
			and	cd_centro_controle	= cd_centro_controle_dest_w;
		end if;
	
		/*Atualiza o orçamento de origem, deduzindo do valor transportado*/

		if (pr_calcular_w >= 100) then
			delete	FROM orcamento_custo
			where	cd_estabelecimento	= cd_estab_origem_w
			and	nr_seq_tabela		= nr_seq_tabela_p
			and	cd_centro_controle	= cd_centro_controle_w
			and	nr_seq_ng		= nr_seq_ng_w;
		else
			update	orcamento_custo
			set	vl_orcado		= vl_orcado - vl_orcado_w,
				dt_atualizacao		= clock_timestamp(),
				nm_usuario		= nm_usuario_p
			where	cd_estabelecimento	= cd_estab_origem_w
			and	nr_seq_tabela		= nr_seq_tabela_p
			and	cd_centro_controle	= cd_centro_controle_w
			and	nr_seq_ng		= nr_seq_ng_w;	
		end if;
		end;
	end loop;
	close c_orcamento;
	
	update	cus_regra_ajuste_orc
	set	vl_ajuste_calc	= vl_orcado_ww
	where	nr_sequencia	= nr_sequencia_w;
	end;
end loop;
close c_regra;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cus_calcular_ajuste_orc ( cd_estabelecimento_p bigint, cd_tabela_custo_p bigint, nr_seq_tabela_p bigint, nm_usuario_p text) FROM PUBLIC;

