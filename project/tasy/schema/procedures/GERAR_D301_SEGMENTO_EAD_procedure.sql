-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_d301_segmento_ead (nr_seq_dataset_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cid_admissao_w		D301_SEGMENTO_EAD.cd_cid_admissao_1%type;
nr_seq_301_local_adm_1_w	D301_SEGMENTO_EAD.nr_seq_301_local_adm_1%type;
cd_cid_admissao_sec_w		D301_SEGMENTO_EAD.cd_cid_admissao_2%type;
nr_seq_301_local_adm_2_w	D301_SEGMENTO_EAD.nr_seq_301_local_adm_2%type;
nr_sequencia_w			D301_SEGMENTO_EAD.nr_sequencia%type;
cd_cid_referencia_w		d301_segmento_ead.cd_cid_referencia_1%type;
nr_seq_301_local_ref_1_w	d301_segmento_ead.nr_seq_301_local_ref_1%type;
cd_cid_referencia_sec_w		d301_segmento_ead.cd_cid_referencia_2%type;
nr_seq_301_local_ref_2_w	d301_segmento_ead.nr_seq_301_local_ref_2%type;

nr_seq_interno_w		diagnostico_doenca.nr_seq_interno%type;
ie_lado_w			diagnostico_doenca.ie_lado%type;
ie_lado_sec_w			diagnostico_doenca.ie_lado%type;
nr_atendimento_w		atendimento_paciente.nr_atendimento%type;
qt_reg_auf_w			bigint;


C01 CURSOR FOR
SELECT	d.cd_doenca,
	d.ie_lado
from	atendimento_paciente a,
	medic_diagnostico_doenca b,
	classificacao_diagnostico c,
	diagnostico_doenca d
where	b.nr_seq_classificacao 		= c.nr_sequencia
and	b.nr_atendimento		= a.nr_atendimento
and	d.nr_atendimento		= a.nr_atendimento
and	b.cd_doenca			= d.cd_doenca
and	b.ie_situacao			= 'A'
and	'S'				= OBTER_SE_CLASSIF_DIAG_301(c.nr_sequencia,'AUF',d.DT_DIAGNOSTICO)
--and	upper(c.ds_classificacao)	= 'AUFNAHMEDIAGNOSE' substitui pela function acima, para considerar a regra e não mais a descrição do diagnóstico
and	coalesce(d.cd_doenca_superior::text, '') = ''
and	coalesce(d.dt_inativacao::text, '') = ''
and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
and	a.nr_atendimento 		= nr_atendimento_w;

C02 CURSOR FOR
SELECT	d.cd_doenca,
	d.ie_lado
from	atendimento_paciente a,
	medic_diagnostico_doenca b,
	classificacao_diagnostico c,
	diagnostico_doenca d
where	b.nr_seq_classificacao 		= c.nr_sequencia
and	b.nr_atendimento		= a.nr_atendimento
and	d.nr_atendimento		= a.nr_atendimento
and	b.cd_doenca			= d.cd_doenca
and	b.ie_situacao			= 'A'
and	'S'				= OBTER_SE_CLASSIF_DIAG_301(c.nr_sequencia,'EIN',d.DT_DIAGNOSTICO)
--and	upper(c.ds_classificacao)	= 'EINWEISUNGSDIAGNOSE'  substitui pela function acima, para considerar a regra e não mais a descrição do diagnóstico
and	coalesce(d.cd_doenca_superior::text, '') = ''
and	coalesce(d.dt_inativacao::text, '') = ''
and	(d.dt_liberacao IS NOT NULL AND d.dt_liberacao::text <> '')
and	a.nr_atendimento 		= nr_atendimento_w;


BEGIN
qt_reg_auf_w := 0;

select	nr_atendimento
into STRICT	nr_atendimento_w
from	d301_dataset_envio
where	nr_sequencia = nr_seq_dataset_p;

open c01;
loop
fetch c01 into
	cd_cid_admissao_w,
	ie_lado_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin

	if (coalesce(qt_reg_auf_w,0) < 21) then

		select	max(a.ie_lado),
			max(a.cd_doenca)
		into STRICT	ie_lado_sec_w,
			cd_cid_admissao_sec_w
		from	diagnostico_doenca a,
			medic_diagnostico_doenca b,
			classificacao_diagnostico c
		where	b.nr_seq_classificacao 		= c.nr_sequencia
		and	b.nr_atendimento		= a.nr_atendimento
		and	b.cd_doenca			= a.cd_doenca
		and	coalesce(a.dt_inativacao::text, '') = ''
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	b.ie_situacao			= 'A'
		and	'S'				= OBTER_SE_CLASSIF_DIAG_301(c.nr_sequencia,'AUF',a.DT_DIAGNOSTICO)
		--and	upper(c.ds_classificacao)	= 'AUFNAHMEDIAGNOSE'
		and	a.cd_doenca_superior 		= cd_cid_admissao_w
		and	a.nr_atendimento		= nr_atendimento_w;

		select	max(OBTER_SEQ_VALOR_301('C301_16_LOCALIZACAO','IE_LOCALIZACAO',obter_conversao_301('C301_16_LOCALIZACAO',null,1372,ie_lado_w,'I'))),
			max(OBTER_SEQ_VALOR_301('C301_16_LOCALIZACAO','IE_LOCALIZACAO',obter_conversao_301('C301_16_LOCALIZACAO',null,1372,ie_lado_sec_w,'I')))
		into STRICT	nr_seq_301_local_adm_1_w,
			nr_seq_301_local_adm_2_w
		;

		select	nextval('d301_segmento_ead_seq')
		into STRICT	nr_sequencia_w
		;

		insert into D301_SEGMENTO_EAD(	cd_cid_admissao_1,
						nr_seq_301_local_adm_1,
						cd_cid_admissao_2,
						nr_seq_301_local_adm_2,
						dt_atualizacao,
						nm_usuario,
						nr_seq_dataset,
						nr_sequencia)
					values (	cd_cid_admissao_w,
						nr_seq_301_local_adm_1_w,
						cd_cid_admissao_sec_w,
						nr_seq_301_local_adm_2_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_dataset_p,
						nr_sequencia_w);

		qt_reg_auf_w := qt_reg_auf_w + 1;
	end if;
	end;

end loop;
close c01;

open c02;
loop
fetch c02 into
	cd_cid_referencia_w,
	ie_lado_w;
EXIT WHEN NOT FOUND; /* apply on c02 */
	begin

	if (coalesce(qt_reg_auf_w,0) < 21) then

		select	max(a.ie_lado),
			max(a.cd_doenca)
		into STRICT	ie_lado_sec_w,
			cd_cid_referencia_sec_w
		from	diagnostico_doenca a,
			medic_diagnostico_doenca b,
			classificacao_diagnostico c
		where	b.nr_seq_classificacao 		= c.nr_sequencia
		and	b.nr_atendimento		= a.nr_atendimento
		and	b.cd_doenca			= a.cd_doenca
		and	coalesce(a.dt_inativacao::text, '') = ''
		and	(a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and	b.ie_situacao			= 'A'
		and	'S' 				= OBTER_SE_CLASSIF_DIAG_301(c.nr_sequencia,'EIN',a.DT_DIAGNOSTICO)
		--and	upper(c.ds_classificacao)	= 'EINWEISUNGSDIAGNOSE'
		and	a.cd_doenca_superior 		= cd_cid_referencia_w
		and	a.nr_atendimento		= nr_atendimento_w;


		select	max(OBTER_SEQ_VALOR_301('C301_16_LOCALIZACAO','IE_LOCALIZACAO',obter_conversao_301('C301_16_LOCALIZACAO',null,1372,ie_lado_w,'I'))),
			max(OBTER_SEQ_VALOR_301('C301_16_LOCALIZACAO','IE_LOCALIZACAO',obter_conversao_301('C301_16_LOCALIZACAO',null,1372,ie_lado_sec_w,'I')))
		into STRICT	nr_seq_301_local_ref_1_w,
			nr_seq_301_local_ref_2_w
		;

		select	nextval('d301_segmento_ead_seq')
		into STRICT	nr_sequencia_w
		;

		insert into D301_SEGMENTO_EAD(	cd_cid_referencia_1,
						nr_seq_301_local_ref_1,
						cd_cid_referencia_2,
						nr_seq_301_local_ref_2,
						dt_atualizacao,
						nm_usuario,
						nr_seq_dataset,
						nr_sequencia)
					values (	cd_cid_referencia_w,
						nr_seq_301_local_ref_1_w,
						cd_cid_referencia_sec_w,
						nr_seq_301_local_ref_2_w,
						clock_timestamp(),
						nm_usuario_p,
						nr_seq_dataset_p,
						nr_sequencia_w);

		qt_reg_auf_w := qt_reg_auf_w + 1;
	end if;

	end;
end loop;
close c02;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_d301_segmento_ead (nr_seq_dataset_p bigint, nm_usuario_p text) FROM PUBLIC;

