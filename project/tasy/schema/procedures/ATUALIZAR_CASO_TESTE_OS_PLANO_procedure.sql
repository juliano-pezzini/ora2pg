-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_caso_teste_os_plano ( nr_seq_caso_teste_os_p bigint, nr_seq_caso_teste_plano_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_seq_caso_teste_os_w		bigint;
nr_seq_caso_teste_plano_w		bigint;
nr_seq_apres_w			integer;
cd_responsavel_w			bigint;
nr_seq_aplicacao_w		bigint;
nr_seq_ordem_serv_w		bigint;
ds_caso_teste_w			varchar(255);
qt_existe_w			bigint;

C01 CURSOR FOR
	SELECT	b.nr_sequencia
	from	teste_caso_teste b,
		teste_software a
	where	a.nr_sequencia = b.nr_seq_teste
	and	a.ie_tipo_teste = 'P'
	and	(a.nr_seq_proj_gpi IS NOT NULL AND a.nr_seq_proj_gpi::text <> '')
	and	b.nr_sequencia = coalesce(nr_seq_caso_teste_plano_p,b.nr_sequencia)
	and	b.nr_seq_caso_teste_ant = nr_seq_caso_teste_os_p;


BEGIN
CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('N');

if (coalesce(nr_seq_caso_teste_os_p,0) > 0) and (coalesce(nm_usuario_p,'X') <> 'X') then
	begin

	begin
	select	nr_sequencia,
		nr_seq_apres,
		ds_caso_teste,
		cd_responsavel,
		nr_seq_aplicacao,
		nr_seq_ordem_servico
	into STRICT	nr_seq_caso_teste_os_w,
		nr_seq_apres_w,
		ds_caso_teste_w,
		cd_responsavel_w,
		nr_seq_aplicacao_w,
		nr_seq_ordem_serv_w
	from	teste_caso_teste
	where	nr_sequencia = nr_seq_caso_teste_os_p;
	exception
	when no_data_found then
		nr_seq_caso_teste_os_w := 0;
	end;

	if (nr_seq_caso_teste_os_w > 0) then
		begin
		/* Verifica no caso de teste origem, se existe alguma ação (mesmo item) com sequência de apresentação duplicada */

		select	count(*)
		into STRICT	qt_existe_w
		from	teste_caso_teste_it_acao b,
			teste_caso_teste_item a
		where	a.nr_sequencia = b.nr_seq_item
		and	a.nr_seq_caso_teste = nr_seq_caso_teste_os_w
		and exists (	SELECT	1
				from	teste_caso_teste_it_acao x
				where	x.nr_seq_item	= a.nr_sequencia
				and	x.nr_seq_apres	= b.nr_seq_apres
				having count(*) > 1);

		if (qt_existe_w > 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(197764,'DS_CASO_TESTE='||ds_caso_teste_w);
		end if;

		open C01;
		loop
		fetch C01 into
			nr_seq_caso_teste_plano_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			/* Atualiza o caso de teste no plano */

			update	teste_caso_teste
			set	nr_seq_apres		= nr_seq_apres_w,
				ds_caso_teste		= ds_caso_teste_w,
				cd_responsavel		= cd_responsavel_w,
				nr_seq_aplicacao	= nr_seq_aplicacao_w,
				nr_seq_ordem_servico	= nr_seq_ordem_serv_w
			where	nr_sequencia		= nr_seq_caso_teste_plano_w;

			/* Exclui no plano os anexos dos itens e/ou ações que não existirem no caso de teste origem */

			delete from teste_caso_tst_acao_anexo a
			where a.nr_seq_acao in (
				SELECT	c.nr_sequencia
				from	teste_caso_teste_it_acao c,
					teste_caso_teste_item b
				where	b.nr_sequencia		= c.nr_seq_item
				and	b.nr_seq_caso_teste	= nr_seq_caso_teste_plano_w
				and (not exists (
						SELECT	1
						from	teste_caso_teste_item x
						where	x.nr_sequencia		= b.nr_seq_item_ant
						and	x.nr_seq_caso_teste	= nr_seq_caso_teste_os_w) or
					not exists (
						select	1
						from	teste_caso_teste_it_acao y,
							teste_caso_teste_item x
						where	x.nr_sequencia		= y.nr_seq_item
						and	y.nr_sequencia		= c.nr_seq_acao_ant
						and	x.nr_seq_caso_teste	= nr_seq_caso_teste_os_w)));

			/* Exclui no plano as ações que não existirem no caso de teste origem */

			delete from teste_caso_teste_it_acao a
			where a.nr_seq_item in (
					SELECT	b.nr_sequencia
					from	teste_caso_teste_item b
					where	b.nr_seq_caso_teste	= nr_seq_caso_teste_plano_w)
			and not exists (	SELECT	1
					from	teste_caso_teste_it_acao y,
						teste_caso_teste_item x
					where	x.nr_sequencia		= y.nr_seq_item
					and	y.nr_sequencia		= a.nr_seq_acao_ant
					and	x.nr_seq_caso_teste	= nr_seq_caso_teste_os_w);

			/* Exclui no plano os itens que não existirem no caso de teste origem */

			delete from teste_caso_teste_item a
			where a.nr_seq_caso_teste = nr_seq_caso_teste_plano_w
			and not exists (	SELECT	1
					from	teste_caso_teste_item x
					where	x.nr_sequencia		= a.nr_seq_item_ant
					and	x.nr_seq_caso_teste	= nr_seq_caso_teste_os_w);

			/* Atualiza no plano os itens a partir do caso de teste origem */

			update	teste_caso_teste_item a
			set(a.nr_seq_apres, a.ds_item, a.dt_atualizacao, a.nm_usuario) = (
				SELECT	b.nr_seq_apres,
					b.ds_item,
					clock_timestamp(),
					nm_usuario_p
				from	teste_caso_teste_item b
				where	b.nr_sequencia = a.nr_seq_item_ant)
			where	(a.nr_seq_item_ant IS NOT NULL AND a.nr_seq_item_ant::text <> '')
			and	a.nr_seq_caso_teste = nr_seq_caso_teste_plano_w;

			/* Atualiza no plano as ações a partir do caso de teste origem */

			update(SELECT	y.nr_seq_acao_ant,
					y.nr_seq_apres,
					y.cd_perfil,
					y.ds_premissas,
					y.ds_acao,
					y.ds_result_esperado,
					y.ds_observacao,
					y.dt_atualizacao,
					y.nm_usuario
				from	teste_caso_teste_it_acao y,
					teste_caso_teste_item x
				where	x.nr_sequencia = y.nr_seq_item
				and	(x.nr_seq_item_ant IS NOT NULL AND x.nr_seq_item_ant::text <> '')
				and	(y.nr_seq_acao_ant IS NOT NULL AND y.nr_seq_acao_ant::text <> '')
				and	x.nr_seq_caso_teste = nr_seq_caso_teste_plano_w) a
			set(a.nr_seq_apres, a.cd_perfil, a.ds_premissas, a.ds_acao, a.ds_result_esperado, a.ds_observacao, a.dt_atualizacao, a.nm_usuario) =
				(select	b.nr_seq_apres,
					b.cd_perfil,
					b.ds_premissas,
					b.ds_acao,
					b.ds_result_esperado,
					b.ds_observacao,
					clock_timestamp(),
					nm_usuario_p
				from	teste_caso_teste_it_acao b
				where	b.nr_sequencia = a.nr_seq_acao_ant);

			/* Atualiza no plano os anexos a partir do caso de teste origem */

			update(SELECT	z.nr_seq_anexo_ant,
					z.ds_arquivo,
					z.dt_atualizacao,
					z.nm_usuario
				from	teste_caso_tst_acao_anexo z,
					teste_caso_teste_it_acao y,
					teste_caso_teste_item x
				where	x.nr_sequencia = y.nr_seq_item
				and	y.nr_sequencia = z.nr_seq_acao
				and	(x.nr_seq_item_ant IS NOT NULL AND x.nr_seq_item_ant::text <> '')
				and	(y.nr_seq_acao_ant IS NOT NULL AND y.nr_seq_acao_ant::text <> '')
				and	(z.nr_seq_anexo_ant IS NOT NULL AND z.nr_seq_anexo_ant::text <> '')
				and	x.nr_seq_caso_teste = nr_seq_caso_teste_plano_w
				and exists (
					SELECT	1
					from	teste_caso_tst_acao_anexo k,
						teste_caso_teste_it_acao j,
						teste_caso_teste_item h
					where	h.nr_sequencia		= j.nr_seq_item
					and	j.nr_sequencia		= k.nr_seq_acao
					and	k.nr_sequencia		= z.nr_seq_anexo_ant
					and	h.nr_seq_caso_teste	= nr_seq_caso_teste_os_w)
					) a
			set(a.ds_arquivo, a.dt_atualizacao, a.nm_usuario) =
				(select	b.ds_arquivo,
					clock_timestamp(),
					nm_usuario_p
				from	teste_caso_tst_acao_anexo b
				where	b.nr_sequencia = a.nr_seq_anexo_ant);
			end;
		end loop;
		close C01;
		end;
	end if;

	end;
end if;

commit;
CALL wheb_usuario_pck.SET_IE_EXECUTAR_TRIGGER('S');

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_caso_teste_os_plano ( nr_seq_caso_teste_os_p bigint, nr_seq_caso_teste_plano_p bigint, nm_usuario_p text) FROM PUBLIC;

