-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_titulo_lote_prot (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_lote_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_base_vencimento_p timestamp, dt_emissao_p timestamp, vl_total_p bigint, tx_juros_p bigint, cd_tipo_taxa_juro_p bigint, tx_multa_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecip_p bigint, nr_documento_p bigint, nr_sequencia_doc_p bigint, nr_nota_fiscal_p bigint, cd_serie_p text, nm_usuario_p text, NR_SEQ_TRANS_FINANC_P bigint default null) AS $body$
DECLARE

	
dt_emissao_w			timestamp;
dt_base_w			timestamp		:= clock_timestamp();
dt_vencimento_w			timestamp;
dt_contabil_w			timestamp;
cd_estab_financeiro_w		smallint;
ie_tipo_titulo_w		varchar(5);
ie_calcula_venc_aprazo_w	varchar(10);
cd_convenio_conta_w		bigint;
cd_condicao_pagamento_w		bigint;
cd_moeda_padrao_w		integer;
ie_gerar_imposto_w		varchar(1);
nr_seq_trans_fin_nf_w		bigint;
nr_seq_trans_fin_baixa_w	bigint;
ie_forma_pagamento_w		smallint;
ie_acao_venc_nao_util_w		varchar(1);
ie_tipo_acrescimo_w		varchar(1)	:= 'P';
ie_dt_contab_tit_prot_w		varchar(1)	:= 'E';
ie_dt_contab_tit_prot_estab_w	varchar(1);
nr_seq_classe_w			bigint;
cont_portador_w			bigint;
count_titulo_w			bigint;
ie_tipo_protocolo_w		smallint;
nr_item_w			bigint;
cd_tipo_portador_w		integer;
cd_portador_w			bigint;
vl_base_juros_w			double precision;
qt_vencimentos_w		bigint;
ds_vencimentos_w		varchar(2000);
vl_vencimento_w			double precision;
vl_total_w			double precision;
tx_acrescimo_w			double precision;
tx_fracao_parcela_w		double precision;
nr_seq_nf_saida_w		bigint;
nr_seq_conta_banco_w		bigint;
nr_seq_carteira_cobr_w		bigint;
tx_multa_w			double precision;
tx_juros_w			double precision;
nr_titulo_w			bigint;
nr_nota_fiscal_w		varchar(255);
ie_origem_titulo_w		varchar(10)		:= '16';
ie_situacao_w			varchar(1)		:= '1';
ie_tipo_emissao_titulo_w	integer      		:= 1;
ie_tipo_inclusao_w		varchar(1)		:= '2';
cd_tributo_w			smallint;
vl_tributo_w			double precision;
tx_tributo_w			double precision;
vl_base_calculo_w		double precision;
vl_trib_nao_retido_w		double precision;
vl_base_nao_retido_w		double precision;
vl_trib_adic_w			double precision;
vl_base_adic_w			double precision;
ie_nf_tit_rec_w			varchar(1);
nr_seq_trans_prov_trib_rec_w	bigint;
cont_w				integer;
nr_seq_tit_rec_trib_w		bigint;
pr_aliquota_w			double precision;
vl_minimo_base_w		double precision;
vl_minimo_tributo_w		double precision;
ie_acumulativo_w		varchar(10);
vl_teto_base_w			double precision;
vl_desc_dependente_w		double precision;
nr_seq_regra_w			bigint;
ie_titulo_pagar_w		varchar(1);
cd_cgc_beneficiario_w		varchar(14);
cd_pessoa_fisica_w		varchar(10);
nr_titul_pagar_w		bigint;
vl_trib_titulo_w		double precision;
vl_ajuste_w			double precision;
ie_classif_tit_w		varchar(1);
ie_gerar_titulo_rec_w		varchar(1);
vl_descontos_w				nota_fiscal.vl_descontos%type;/*Total de descontos da NF*/
vl_descontos_tit_w			nota_fiscal.vl_descontos%type;
vl_desconto_calc_w			nota_fiscal.vl_descontos%type := 0;	
vl_total_desc_w				nota_fiscal.vl_descontos%type := 0;	
ie_deduz_desc_tit_w			varchar(1):= 'N';		

cd_darf_w			regra_calculo_imposto.cd_darf%type;

c01 CURSOR FOR
/* A Prazo   */

SELECT	tx_fracao_parcela,
	coalesce(tx_acrescimo,0),
	Obter_data_vencimento(
			dt_base_w,
			qt_dias_parcela,
			cd_estabelecimento_p,
			ie_corrido_util,
			ie_acao_venc_nao_util_w),
	0,
	0
from 	parcela
where 	cd_condicao_pagamento 	= cd_condicao_pagamento_w
and 	ie_forma_pagamento_w	<> 1

union

/* A Vista   */

SELECT 	100,
	0,	
	dt_base_w, 
	0,
	coalesce(vl_descontos_w,0)

where 	ie_forma_pagamento_w	= 1;

c02 CURSOR FOR
SELECT	a.cd_tributo,
	a.vl_tributo,
	a.tx_tributo,
	a.vl_base_calculo,
	a.vl_trib_nao_retido,
	a.vl_base_nao_retido,
	a.vl_trib_adic,
	a.vl_base_adic
from	nota_fiscal_trib a
where	a.nr_sequencia	= nr_seq_nf_saida_w

union

	SELECT  cd_tributo,
			sum(vl_tributo),
			tx_tributo, /*a taxa do tributo nao pode ser somada, senao ficara uma taxa incorreta no titulo*/
			sum(vl_base_calculo),
			sum(vl_trib_nao_retido),
			sum(vl_base_nao_retido),
			sum(vl_trib_adic),
			sum(vl_base_adic)
	from ( select	a.cd_tributo,
						a.vl_tributo,
						a.tx_tributo,
						a.vl_base_calculo,
						a.vl_trib_nao_retido,
						a.vl_base_nao_retido,
						a.vl_trib_adic,
						a.vl_base_adic
						from	nota_fiscal_item_trib a
						where	a.nr_sequencia	= nr_seq_nf_saida_w ) alias6
	group by    cd_tributo,
				tx_tributo;

c03 CURSOR FOR
SELECT	nr_seq_classe
from	classe_titulo_receb_regra
where	ie_tipo_protocolo	= ie_tipo_protocolo_w;
	

BEGIN


if (coalesce(nr_nota_fiscal_p,0) > 0) and (coalesce(nr_seq_lote_protocolo_p,0) > 0) then
	select	coalesce(max(nr_sequencia), null)
	into STRICT	nr_seq_nf_saida_w
	from	nota_fiscal
	where	nr_seq_lote_prot	= nr_seq_lote_protocolo_p;
end if;

select	coalesce(max(a.dt_emissao),clock_timestamp())
into STRICT	dt_emissao_w
from	nota_fiscal a
where	a.nr_sequencia	= nr_seq_nf_saida_w;

ie_tipo_titulo_w		:= Obter_Valor_Param_Usuario(801,77, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);
ie_calcula_venc_aprazo_w	:= Obter_Valor_Param_Usuario(-80,68, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);
ie_deduz_desc_tit_w		:= Obter_Valor_Param_Usuario(85,256, Obter_perfil_Ativo, nm_usuario_p, cd_estabelecimento_p);

if (coalesce(ie_tipo_titulo_w::text, '') = '') then
	ie_tipo_titulo_w	:= '1';
end if;

select	max(a.cd_convenio)
into STRICT	cd_convenio_conta_w
from	lote_protocolo a
where	a.nr_sequencia	= nr_seq_lote_protocolo_p;

if (cd_condicao_pagamento_p > 0) then
   	cd_condicao_pagamento_w := cd_condicao_pagamento_p;
else
  	begin
   	select 	cd_condicao_pagamento
   	into STRICT 	cd_condicao_pagamento_w
   	from 	nota_fiscal
   	where 	nr_seq_lote_prot = nr_seq_lote_protocolo_p;
   	end;
end if;

select 	coalesce(max(cd_moeda_padrao),1),
	coalesce(max(ie_gerar_imposto_tit_rec),'N'),
	max(nr_seq_trans_fin_nf),
	max(nr_seq_trans_fin_baixa)	
into STRICT 	cd_moeda_padrao_w,
	ie_gerar_imposto_w,
	nr_seq_trans_fin_nf_w,
	nr_seq_trans_fin_baixa_w	
from 	parametro_contas_receber
where	cd_estabelecimento  = cd_estabelecimento_p;

select 	coalesce(max(ie_forma_pagamento),3),
	coalesce(max(ie_acao_nao_util),'M'),
	coalesce(max(ie_tipo_acrescimo),'P')
into STRICT 	ie_forma_pagamento_w,
	ie_acao_venc_nao_util_w,
	ie_tipo_acrescimo_w
from 	condicao_pagamento
where 	cd_condicao_pagamento = cd_condicao_pagamento_w
and 	ie_situacao           = 'A';

select	coalesce(max(ie_dt_contab_tit_prot),'E')
into STRICT	ie_dt_contab_tit_prot_w
from	parametro_faturamento
where	cd_estabelecimento	= cd_estabelecimento_p;

select	coalesce(max(a.nr_seq_trans_tit_prot),nr_seq_trans_fin_nf_w),
	max(ie_dt_conta_tit_prot)
into STRICT	nr_seq_trans_fin_nf_w,
	ie_dt_contab_tit_prot_estab_w
from	convenio_estabelecimento a
where	a.cd_convenio		= cd_convenio_conta_w
and	a.cd_estabelecimento	= cd_estabelecimento_p;

dt_base_w	:= dt_base_vencimento_p;
/* define data base para condicao pagamento */
	
Select 	coalesce(Obter_Data_Base_Venc(dt_base_w, ie_forma_pagamento_w), dt_base_w)
into STRICT  	dt_base_w	
;

/* Obtem a classe do Titulo */

select	max(ie_tipo_protocolo)
into STRICT	ie_tipo_protocolo_w
from	lote_protocolo
where	nr_sequencia	= nr_seq_lote_protocolo_p;

if (coalesce(ie_tipo_protocolo_w::text, '') = '') then
	select	max(ie_tipo_protocolo)
	into STRICT	ie_tipo_protocolo_w
	from	protocolo_convenio
	where	nr_seq_lote_protocolo	= nr_seq_lote_protocolo_p;
end if;

if (ie_tipo_protocolo_w IS NOT NULL AND ie_tipo_protocolo_w::text <> '') then
	open C03;
	loop
	fetch C03 into	
		nr_seq_classe_w;
	EXIT WHEN NOT FOUND; /* apply on C03 */
	end loop;
	close C03;
end if;
/* Fim - Obtem a classe do Titulo */

select	count(*)
into STRICT	cont_portador_w
from	portador
where	cd_portador 		= 0
and	cd_tipo_portador 	= 0;
if (cont_portador_w = 0) then
	CALL WHEB_MENSAGEM_PCK.Exibir_Mensagem_Abort(186194);
end if;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

/*Verificar se as contas dos protocolos do lote ja possuem titulo gerado*/

select	count(*)
into STRICT	count_titulo_w
from	titulo_receber a,
	conta_paciente b,
	protocolo_convenio c
where	a.nr_interno_conta	= b.nr_interno_conta
and	b.nr_seq_protocolo	= c.nr_seq_protocolo
and	c.nr_seq_lote_protocolo	= nr_seq_lote_protocolo_p
and	a.ie_situacao		<> '3';

if (count_titulo_w > 0) then
	/*'Existem contas nos protocolos deste lote que ja possuem titulo!*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(242891);
else
	/*Verificar se os protocolos do lote ja possuem titulo gerado*/

	select	count(*)
	into STRICT	count_titulo_w
	from	titulo_receber a,		
		protocolo_convenio c
	where	a.nr_seq_protocolo	= c.nr_seq_protocolo	
	and	c.nr_seq_lote_protocolo	= nr_seq_lote_protocolo_p
	and	a.ie_situacao		<> '3';
	
	if (count_titulo_w > 0) then
		/*'Existem protocolos neste lote que ja possuem titulo!'*/

		CALL wheb_mensagem_pck.exibir_mensagem_abort(242894);
	end if;
end if;

nr_item_w	:= nr_sequencia_doc_p;

SELECT * FROM OBTER_PORTADOR_PF_PJ( cd_estabelecimento_p, cd_pessoa_fisica_p, cd_cgc_p, cd_portador_w, cd_tipo_portador_w) INTO STRICT cd_portador_w, cd_tipo_portador_w;

if (ie_tipo_acrescimo_w = 'B') then
	vl_base_juros_w	:= obter_base_acresc_cond_pagto( cd_condicao_pagamento_w, vl_total_p );
end if;

if (cd_condicao_pagamento_w IS NOT NULL AND cd_condicao_pagamento_w::text <> '') and
	((ie_forma_pagamento_w not in (1,2,12,10)) or (ie_forma_pagamento_w = 2 and (coalesce(ie_calcula_venc_aprazo_w,'N') = 'S'))) then
	SELECT * FROM Calcular_Vencimento(
			cd_estabelecimento_p, cd_condicao_pagamento_w, dt_base_w, qt_vencimentos_w, ds_vencimentos_w) INTO STRICT qt_vencimentos_w, ds_vencimentos_w;
end if;

if (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '') then
	select	sum(a.vl_descontos)
	into STRICT	vl_descontos_w
	from	nota_fiscal a
	where	a.nr_sequencia = nr_seq_nf_saida_w;
end if;



open  c01;
loop
fetch c01 into
	tx_fracao_parcela_w,
	tx_acrescimo_w,
	dt_vencimento_w,
	vl_vencimento_w,
	vl_descontos_tit_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

	if	((ie_forma_pagamento_w not in (1,2,12,10)) or (ie_forma_pagamento_w = 2 and (coalesce(ie_calcula_venc_aprazo_w,'N') = 'S'))) then
		dt_vencimento_w		:= To_Date(substr(ds_vencimentos_w,1,10),'dd/mm/yyyy');
		ds_vencimentos_w	:= substr(ds_vencimentos_w,12, length(ds_vencimentos_w));
	end if;

	if (vl_vencimento_w = 0) then
		begin
		if (coalesce(tx_fracao_parcela_w,0) > 0) then
			vl_vencimento_w 	:= ((vl_total_p * tx_fracao_parcela_w) / 100);
		end if;
		vl_total_w   		:= vl_total_w + vl_vencimento_w;
		end;
	end if;
	if (tx_acrescimo_w <> 0) then

		if (coalesce(ie_tipo_acrescimo_w,'P') = 'P') then
			vl_vencimento_w 	:= vl_vencimento_w + ((vl_vencimento_w * tx_acrescimo_w) / 100);
		elsif (coalesce(ie_tipo_acrescimo_w,'B') = 'B') then
			vl_vencimento_w 	:= vl_vencimento_w + ((vl_base_juros_w * tx_acrescimo_w) / 100);
		end if;
	end if;
	
	if (vl_descontos_tit_w = 0) and (ie_deduz_desc_tit_w = 'S')  then /*Se nao tiver descontos ou for a prazo a condicao de pagamento, calcular o descondo para cada fracao da condicao*/
		begin
		if (coalesce(tx_fracao_parcela_w,0) > 0) then /*se tiver fracao da parcela*/
			vl_desconto_calc_w	:=  (( coalesce(vl_descontos_w,0) * tx_fracao_parcela_w) / 100);
			vl_vencimento_w	:= vl_vencimento_w - coalesce(vl_desconto_calc_w,0);
		end if;
		vl_total_desc_w := coalesce(vl_total_desc_w,0) + coalesce(vl_desconto_calc_w,0);
		end;
	elsif (vl_descontos_tit_w <> 0) and (ie_deduz_desc_tit_w = 'S') then /*Se vier  desconto no cursor e pq e a vista, entao esse valor deve ser descontado direto no titulo*/
		vl_desconto_calc_w := coalesce(vl_descontos_tit_w,0);
		vl_vencimento_w	:= vl_vencimento_w - coalesce(vl_desconto_calc_w,0);
	end if;
	
	/*Forma de pagamento 12 */

	if (ie_forma_pagamento_w = 12) then
		begin
		if ((to_char(dt_emissao_p,'dd'))::numeric  <= 15) then
			dt_vencimento_w	:= PKG_DATE_UTILS.add_month(PKG_DATE_UTILS.get_date(15, dt_emissao_p), 1);
		else
			dt_vencimento_w	:= PKG_DATE_UTILS.get_datetime(PKG_DATE_UTILS.END_OF(PKG_DATE_UTILS.ADD_MONTH(dt_emissao_p,1,0), 'MONTH', 0), coalesce(dt_emissao_p, PKG_DATE_UTILS.get_Time('00:00:00')));
		end if;
		end;
	end if;
	
	dt_contabil_w		:= dt_emissao_p;
		
	ie_dt_contab_tit_prot_w	:= coalesce(ie_dt_contab_tit_prot_estab_w,ie_dt_contab_tit_prot_w);
	
	if (ie_dt_contab_tit_prot_w = 'R') then
		if (nr_seq_lote_protocolo_p IS NOT NULL AND nr_seq_lote_protocolo_p::text <> '') then
			select	max(dt_mesano_referencia)
			into STRICT	dt_contabil_w
			from	protocolo_convenio
			where	nr_seq_lote_protocolo	= nr_seq_lote_protocolo_p;
		end if;
	end if;
	
	/*Gravar carteira de cobranca */

	tx_juros_w		:= null;
	tx_multa_w		:= null;
	SELECT * FROM obter_carteira_cobranca(cd_estabelecimento_p, cd_convenio_conta_w, vl_vencimento_w, dt_emissao_p, nr_seq_conta_banco_w, nr_seq_carteira_cobr_w, tx_juros_w, tx_multa_w) INTO STRICT nr_seq_conta_banco_w, nr_seq_carteira_cobr_w, tx_juros_w, tx_multa_w;
				
	select	nextval('titulo_seq')
	into STRICT  	nr_titulo_w
	;

	if (coalesce(nr_nota_fiscal_p,0) = 0) then	/* ahoffelder - OS 277926 - 08/02/2011 - nao carregar 0 (zero) no campo NR_NOTA_FISCAL */
		nr_nota_fiscal_w	:= null;
	else
		nr_nota_fiscal_w	:= nr_nota_fiscal_p;
	end if;
	
	insert	into titulo_receber(
		nr_titulo,
		cd_estabelecimento,
		dt_atualizacao,
		nm_usuario,
		nr_seq_lote_prot,
		dt_emissao,
		dt_vencimento,
		dt_pagamento_previsto,
		vl_titulo,
		vl_saldo_titulo,
		vl_saldo_juros,
		vl_saldo_multa,
		cd_moeda,
		cd_portador,
		cd_tipo_portador,
		ie_situacao,
		ie_tipo_emissao_titulo,
		ie_origem_titulo,
		ie_tipo_titulo,
		ie_tipo_inclusao,
		cd_pessoa_fisica,
		cd_cgc,
		nr_interno_conta,
		nr_atendimento,
		cd_serie,
		nr_documento,
		nr_sequencia_doc,
		cd_banco,
		cd_agencia_bancaria,
		nr_bloqueto,
		dt_liquidacao,
		nr_lote_contabil,
		ds_observacao_titulo,
		dt_contabil,
		nr_seq_protocolo,
		tx_juros,
		cd_tipo_taxa_juro,
		tx_multa,
		cd_tipo_taxa_multa,
		tx_desc_antecipacao,
		nr_seq_classe,
		nr_guia,
		nr_nota_fiscal,
		nr_seq_nf_saida,
		cd_estab_financeiro,
		cd_convenio_conta,
		nr_seq_trans_fin_contab,
		nr_seq_trans_fin_baixa,
		nr_seq_conta_banco,
		nr_seq_carteira_cobr,
		nm_usuario_orig,
		dt_inclusao,
		nr_rps,
		nr_seq_agrupamento)
	values (nr_titulo_w,
		cd_estabelecimento_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_lote_protocolo_p,
		dt_emissao_p,
		dt_vencimento_w,
		dt_vencimento_w,
		vl_vencimento_w,
		vl_vencimento_w,
		0,
		0,
		cd_moeda_padrao_w,
		cd_portador_w,
		cd_tipo_portador_w,
		ie_situacao_w,
		ie_tipo_emissao_titulo_w,
		ie_origem_titulo_w,
		ie_tipo_titulo_w,
		ie_tipo_inclusao_w,
		cd_pessoa_fisica_p,
		cd_cgc_p,
		null,
		null,
		cd_serie_p,
		nr_documento_p,
		nr_item_w,
		null, --cd_banco_w,
		null, --cd_agencia_bancaria_w,
		null, --nr_bloqueto_w,
		null,
		null,
		null,
		dt_contabil_w,
		null,
		coalesce(tx_juros_w, tx_juros_p),
		cd_tipo_taxa_juro_p,
		coalesce(tx_multa_w, tx_multa_p),
		cd_tipo_taxa_multa_p,
		tx_desc_antecip_p,
		nr_seq_classe_w,
		null,
		nr_nota_fiscal_w,
		nr_seq_nf_saida_w,
		cd_estab_financeiro_w,
		cd_convenio_conta_w,
		nr_seq_trans_fin_nf_w,
		nr_seq_trans_fin_baixa_w,
		nr_seq_conta_banco_w,
		nr_seq_carteira_cobr_w,
		nm_usuario_p,
		clock_timestamp(),
		null,
		null);
		
	nr_item_w	:= nr_item_w + 1;
	if (ie_gerar_imposto_w = 'S') and (coalesce(nr_seq_lote_protocolo_p,0) <> 0) then
		CALL Gerar_Imposto_Tit_Rec(nr_titulo_w, nm_usuario_p);
	end if;
	
	 /*Gravar tributo da nota no titulo tambem */

	if (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '') then
	
		open C02;
		loop
		fetch C02 into
			cd_tributo_w,
			vl_tributo_w,
			tx_tributo_w,
			vl_base_calculo_w,
			vl_trib_nao_retido_w,
			vl_base_nao_retido_w,
			vl_trib_adic_w,
			vl_base_adic_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		
			select	coalesce(max(ie_nf_tit_rec),'N'),
				max(nr_seq_trans_prov_trib_rec)
			into STRICT	ie_nf_tit_rec_w,
				nr_seq_trans_prov_trib_rec_w
			from	tributo
			where	cd_tributo	= cd_tributo_w;

			select	count(*)
			into STRICT	cont_w
			from	titulo_receber_trib
			where	nr_titulo	= nr_titulo_w
			and	cd_tributo	= cd_tributo_w;
			
			if	(ie_nf_tit_rec_w = 'S' AND cont_w = 0) or (ie_nf_tit_rec_w = 'U') then
				
				if (cont_w > 0) then
					delete	from titulo_receber_trib
					where 	nr_titulo	= nr_titulo_w
					and 	cd_tributo	= cd_tributo_w;
				end if;

				select	nextval('titulo_receber_trib_seq')
				into STRICT	nr_seq_tit_rec_trib_w
				;

				insert	into titulo_receber_trib(nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					nr_titulo,
					cd_tributo,
					vl_tributo,
					tx_tributo,
					vl_base_calculo,
					vl_trib_nao_retido,
					vl_base_nao_retido,
					vl_trib_adic,
					vl_base_adic,
					vl_saldo,
					nr_seq_nota_fiscal,
					ie_origem_tributo,
					nr_seq_trans_financ)
				SELECT	nr_seq_tit_rec_trib_w,
					clock_timestamp(),
					nm_usuario_p,
					nr_titulo_w,
					cd_tributo_w,
					vl_tributo_w,
					tx_tributo_w,
					vl_base_calculo_w,
					vl_trib_nao_retido_w,
					vl_base_nao_retido_w,
					vl_trib_adic_w,
					vl_base_adic_w,
					vl_tributo_w,
					nr_seq_nf_saida_w,
					'C',
					nr_seq_trans_prov_trib_rec_w
				;
				
				SELECT * FROM obter_dados_trib_tit_rec(cd_tributo_w, cd_estabelecimento_p, cd_convenio_conta_w, dt_emissao_w, 'N', pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, cd_pessoa_fisica_p, cd_cgc_p, null, ie_origem_titulo_w, 0, nr_seq_regra_w, cd_darf_w) INTO STRICT pr_aliquota_w, vl_minimo_base_w, vl_minimo_tributo_w, ie_acumulativo_w, vl_teto_base_w, vl_desc_dependente_w, nr_seq_regra_w, cd_darf_w;
							
				select	max(a.ie_titulo_pagar),
					max(a.cd_cgc_beneficiario)
				into STRICT	ie_titulo_pagar_w,
					cd_cgc_beneficiario_w
				from	regra_calculo_imposto a
				where	a.nr_sequencia	= nr_seq_regra_w;
				

				if (ie_titulo_pagar_w	= 'S') then

					if (coalesce(cd_cgc_beneficiario_w::text, '') = '') then
						cd_pessoa_fisica_w	:= cd_pessoa_fisica_p;
					else
						cd_pessoa_fisica_w	:= null;
					end if;

					select	nextval('titulo_pagar_seq')
					into STRICT	nr_titul_pagar_w
					;

					insert	into titulo_pagar(cd_cgc,
						cd_estabelecimento,
						cd_estab_financeiro,
						cd_moeda,
						cd_pessoa_fisica,
						cd_tipo_taxa_juro,
						cd_tipo_taxa_multa,
						dt_atualizacao,
						dt_emissao,
						dt_vencimento_atual,
						dt_vencimento_original,
						ie_origem_titulo,
						ie_situacao,
						ie_tipo_titulo,
						nm_usuario,
						nr_seq_tit_rec_trib,
						nr_titulo,
						tx_juros,
						tx_multa,
						vl_saldo_juros,
						vl_saldo_multa,
						vl_saldo_titulo,
						vl_titulo,
						nr_seq_nota_fiscal,
						nr_lote_contabil)
					values (coalesce(cd_cgc_beneficiario_w,cd_cgc_p),
						cd_estabelecimento_p,
						cd_estab_financeiro_w,
						cd_moeda_padrao_w,
						cd_pessoa_fisica_w,
						cd_tipo_taxa_juro_p,
						cd_tipo_taxa_multa_p,
						clock_timestamp(),
						dt_emissao_w,
						dt_vencimento_w,
						dt_vencimento_w,
						'4',
						'A',
						'4',
						nm_usuario_p,
						nr_seq_tit_rec_trib_w,
						nr_titul_pagar_w,
						tx_juros_p,
						tx_multa_p,
						0,
						0,
						vl_tributo_w,
						vl_tributo_w,
						nr_seq_nf_saida_w,
						0);
						
					CALL ATUALIZAR_INCLUSAO_TIT_PAGAR(nr_titul_pagar_w, nm_usuario_p);
				end if;
				
			end if;
		
		end loop;
		close C02;
	
	end if;
	
	select	coalesce(sum(CASE WHEN a.ie_soma_diminui='D' THEN (coalesce(b.vl_tributo,0) * - 1) WHEN a.ie_soma_diminui='S' THEN  coalesce(b.vl_tributo,0)  ELSE 0 END ),0)
	into STRICT	vl_trib_titulo_w
	from	tributo a,
		titulo_receber_trib b
	where	coalesce(a.ie_incide_conta,'N')	= 'S'
	and	a.cd_tributo		= b.cd_tributo
	and	b.nr_titulo		= nr_titulo_w;

	update	titulo_receber
	set	vl_titulo		= coalesce(vl_titulo,0) + coalesce(vl_trib_titulo_w,0),
		vl_saldo_titulo	= coalesce(vl_saldo_titulo,0) + coalesce(vl_trib_titulo_w,0)
	where	nr_titulo		= nr_titulo_w;
end loop;
close C01;

if (coalesce(nr_seq_lote_protocolo_p,0) > 0) then
	
	update	protocolo_convenio
	set 	dt_integracao_cr 	= clock_timestamp()
	where 	nr_seq_lote_protocolo 	= nr_seq_lote_protocolo_p;
	
end if;

if (nr_titulo_w IS NOT NULL AND nr_titulo_w::text <> '') and (vl_total_w > 0) and (vl_total_w <> vl_total_p) then
	begin
	vl_ajuste_w 	:= (vl_total_p - vl_total_w);
	
	update 	titulo_receber
	set 	vl_titulo	= vl_titulo + vl_ajuste_w,
		vl_saldo_titulo	= vl_saldo_titulo + vl_ajuste_w
	where	nr_titulo	= nr_titulo_w;
	end;
end if;

if (nr_seq_trans_financ_p IS NOT NULL AND nr_seq_trans_financ_p::text <> '') then
	update	titulo_receber
	set	nr_seq_trans_fin_contab = nr_seq_trans_financ_p
	where	nr_titulo 		= nr_titulo_w;
end if;

ie_classif_tit_w := Obter_Param_Usuario(-80, 97, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_classif_tit_w);
ie_gerar_titulo_rec_w := Obter_Param_Usuario(-80, 5, obter_perfil_ativo, nm_usuario_p, obter_estabelecimento_ativo, ie_gerar_titulo_rec_w);

if ( coalesce(ie_classif_tit_w,'N') = 'S') and ( coalesce(ie_gerar_titulo_rec_w,'N') = 'S' ) and (nr_seq_nf_saida_w IS NOT NULL AND nr_seq_nf_saida_w::text <> '')  then
	CALL gerar_classif_tit_rec_nf(nr_seq_nf_saida_w,nm_usuario_p);
else
	CALL gerar_classif_titulo_receber(null, null, nm_usuario_p,nr_seq_lote_protocolo_p);
end if;

CALL Atualizar_Saldo_Tit_Rec(nr_titulo_w, nm_usuario_p);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_titulo_lote_prot (cd_estabelecimento_p bigint, cd_pessoa_fisica_p text, cd_cgc_p text, nr_seq_lote_protocolo_p bigint, cd_condicao_pagamento_p bigint, dt_base_vencimento_p timestamp, dt_emissao_p timestamp, vl_total_p bigint, tx_juros_p bigint, cd_tipo_taxa_juro_p bigint, tx_multa_p bigint, cd_tipo_taxa_multa_p bigint, tx_desc_antecip_p bigint, nr_documento_p bigint, nr_sequencia_doc_p bigint, nr_nota_fiscal_p bigint, cd_serie_p text, nm_usuario_p text, NR_SEQ_TRANS_FINANC_P bigint default null) FROM PUBLIC;

