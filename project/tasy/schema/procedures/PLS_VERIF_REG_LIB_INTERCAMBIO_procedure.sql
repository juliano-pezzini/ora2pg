-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_verif_reg_lib_intercambio ( nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, ie_tipo_regra_lib_p text, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, cd_operadora_exec_p text, nr_seq_regra_p INOUT bigint) AS $body$
DECLARE


/*
IE_TIPO_REGRA_LIB_P
LS - Envio do pedido
LR - Recebimento do pedido
*/
ie_tipo_guia_w			varchar(1);
vl_procedimento_w		double precision;
ie_carater_interna_w		varchar(1);
nr_seq_plano_w			bigint;
ie_preco_w			varchar(2);
ie_abrangencia_w		varchar(3);
cd_procedimento_w		bigint;
ie_origem_proced_w		smallint;
qt_solicitada_w			pls_guia_plano_proc.qt_solicitada%type;
cd_grupo_proc_w			bigint;
cd_especialidade_w		bigint;
cd_area_procedimento_w		bigint;
ie_origem_proc_w		smallint;
nr_seq_congenere_w		bigint;
nr_seq_segurado_w		bigint;
nr_seq_intercambio_w		bigint;
ie_carteira_valida_w		varchar(2);
dt_validade_carteira_w		timestamp;
dt_solicitacao_w		timestamp;
ie_validade_cartao_w		varchar(2);
nr_seq_guia_w			bigint;
qt_material_w			bigint	:= 0;
ds_observacao_w			varchar(255);
ds_observacao_guia_w		varchar(255);
ds_observacao_req_w		varchar(255);
nr_seq_requisicao_w		bigint;
ie_aprova_online_w		varchar(255);
ie_tipo_intercambio_w		varchar(255);
nr_seq_regra_excecao_w		bigint;
ie_libera_obs_w			varchar(2);
qt_observacao_guia_w		bigint;
ie_tipo_contrato_w		varchar(2)	:= 'X';
qt_itens_nao_lib_w		bigint;

/*Verifica se ha regra*/

C01 CURSOR FOR
	SELECT	nr_sequencia,
		ie_validade_cartao,
		ds_observacao,
		ie_aprova_online,
		coalesce(ie_libera_observacao,'N')
	from	( 	SELECT	nr_sequencia,
				ie_validade_cartao,
				ds_observacao,
				ie_aprova_online,
				ie_libera_observacao,
				nr_seq_plano,
				vl_maximo
			from	pls_regra_lib_aut_origem
			where	ie_situacao		= 'A'
			and	((coalesce(ie_tipo_guia::text, '') = '')	or (ie_tipo_guia 		= ie_tipo_guia_w))
			and	((coalesce(nr_seq_congenere::text, '') = '')	or (nr_seq_congenere 		= nr_seq_congenere_w))
			and	((coalesce(nr_seq_plano::text, '') = '') 	or (nr_seq_plano 		= nr_seq_plano_w))
			and	((coalesce(nr_seq_intercambio::text, '') = '')	or (nr_seq_intercambio 		= nr_seq_intercambio_w))
			and	((coalesce(ie_abrangencia::text, '') = '')	or (ie_abrangencia 		= ie_abrangencia_w))
			and	((coalesce(cd_procedimento::text, '') = '')	or (cd_procedimento		= cd_procedimento_w))
			and	((coalesce(ie_origem_proced::text, '') = '')	or (ie_origem_proced		= ie_origem_proc_w))
			and	((coalesce(cd_grupo_proc::text, '') = '')	or (cd_grupo_proc		= cd_grupo_proc_w))
			and	((coalesce(cd_especialidade::text, '') = '')	or (cd_especialidade		= cd_especialidade_w))
			and	((coalesce(cd_area_procedimento::text, '') = '')	or (cd_area_procedimento	= cd_area_procedimento_w))
			and	((coalesce(ie_preco::text, '') = '')	or (ie_preco			= ie_preco_w))
			and	((coalesce(vl_maximo::text, '') = '')	or (vl_procedimento_w 		<= vl_maximo))	
			and	ie_tipo_regra_liberacao	= ie_tipo_regra_lib_p
			and (coalesce(cd_estabelecimento, wheb_usuario_pck.get_cd_estabelecimento) = wheb_usuario_pck.get_cd_estabelecimento and pls_obter_se_controle_estab('RE') = 'S')
			
union all

			select	nr_sequencia,
				ie_validade_cartao,
				ds_observacao,
				ie_aprova_online,
				ie_libera_observacao,
				nr_seq_plano,
				vl_maximo
			from	pls_regra_lib_aut_origem
			where	ie_situacao		= 'A'
			and	((coalesce(ie_tipo_guia::text, '') = '')	or (ie_tipo_guia 		= ie_tipo_guia_w))
			and	((coalesce(nr_seq_congenere::text, '') = '')	or (nr_seq_congenere 		= nr_seq_congenere_w))
			and	((coalesce(nr_seq_plano::text, '') = '') 	or (nr_seq_plano 		= nr_seq_plano_w))
			and	((coalesce(nr_seq_intercambio::text, '') = '')	or (nr_seq_intercambio 		= nr_seq_intercambio_w))
			and	((coalesce(ie_abrangencia::text, '') = '')	or (ie_abrangencia 		= ie_abrangencia_w))
			and	((coalesce(cd_procedimento::text, '') = '')	or (cd_procedimento		= cd_procedimento_w))
			and	((coalesce(ie_origem_proced::text, '') = '')	or (ie_origem_proced		= ie_origem_proc_w))
			and	((coalesce(cd_grupo_proc::text, '') = '')	or (cd_grupo_proc		= cd_grupo_proc_w))
			and	((coalesce(cd_especialidade::text, '') = '')	or (cd_especialidade		= cd_especialidade_w))
			and	((coalesce(cd_area_procedimento::text, '') = '')	or (cd_area_procedimento	= cd_area_procedimento_w))
			and	((coalesce(ie_preco::text, '') = '')	or (ie_preco			= ie_preco_w))
			and	((coalesce(vl_maximo::text, '') = '')	or (vl_procedimento_w 		<= vl_maximo))	
			and	ie_tipo_regra_liberacao	= ie_tipo_regra_lib_p
			and 	pls_obter_se_controle_estab('RE') = 'N') alias101
	order by coalesce(nr_seq_plano,0),
		 coalesce(vl_maximo,0) desc;


BEGIN

nr_seq_regra_p	:= 0;

if (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '') then
	/*Obter dados  do procedimento*/

	select	nr_seq_guia,
		cd_procedimento,
		ie_origem_proced,
		qt_solicitada,
		coalesce(vl_procedimento,0)
	into STRICT	nr_seq_guia_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_solicitada_w,
		vl_procedimento_w
	from	pls_guia_plano_proc
	where	nr_sequencia	= nr_seq_guia_proc_p;

	SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proc_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proc_w;

	/*Obter dados da guia*/

	select	ie_tipo_guia,
		ie_carater_internacao,
		nr_seq_plano,
		nr_seq_segurado,
		dt_solicitacao,
		substr(ds_observacao,1,255)
	into STRICT	ie_tipo_guia_w,
		ie_carater_interna_w,
		nr_seq_plano_w,
		nr_seq_segurado_w,
		dt_solicitacao_w,
		ds_observacao_guia_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_w;

	select	count(*)
	into STRICT	qt_material_w
	from	pls_guia_plano_mat
	where	nr_seq_guia	= nr_seq_guia_w;
elsif (nr_seq_req_proc_p IS NOT NULL AND nr_seq_req_proc_p::text <> '') then
	/*Obter dados  do procedimento*/

	select	nr_seq_requisicao,
		cd_procedimento,
		ie_origem_proced,
		qt_procedimento,
		coalesce(vl_procedimento,0)
	into STRICT	nr_seq_requisicao_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		qt_solicitada_w,
		vl_procedimento_w
	from	pls_requisicao_proc
	where	nr_sequencia	= nr_seq_req_proc_p;

	SELECT * FROM pls_obter_estrut_proc(	cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proc_w) INTO STRICT cd_area_procedimento_w, cd_especialidade_w, cd_grupo_proc_w, ie_origem_proc_w;

	/*Obter dados da requisicao*/

	select	ie_tipo_guia,
		nr_seq_plano,
		nr_seq_segurado,
		dt_requisicao,
		substr(ds_observacao,1,255)
	into STRICT	ie_tipo_guia_w,
		nr_seq_plano_w,
		nr_seq_segurado_w,
		dt_solicitacao_w,
		ds_observacao_req_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_w;

	select	count(*)
	into STRICT	qt_material_w
	from	pls_requisicao_mat
	where	nr_seq_requisicao	= nr_seq_requisicao_w;
elsif (nr_seq_guia_p IS NOT NULL AND nr_seq_guia_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_congenere_w
	from	pls_congenere
	where	cd_cooperativa	= cd_operadora_exec_p;
	
	select	ie_tipo_guia
	into STRICT	ie_tipo_guia_w
	from	pls_guia_plano
	where	nr_sequencia	= nr_seq_guia_p;

	qt_material_w	:= 0;
elsif (nr_seq_requisicao_p IS NOT NULL AND nr_seq_requisicao_p::text <> '') then
	select	max(nr_sequencia)
	into STRICT	nr_seq_congenere_w
	from	pls_congenere
	where	cd_cooperativa	= cd_operadora_exec_p;
	
	select	ie_tipo_guia
	into STRICT	ie_tipo_guia_w
	from	pls_requisicao
	where	nr_sequencia	= nr_seq_requisicao_p;

	qt_material_w	:= 0;

end if;

if (qt_material_w	= 0) then
	/*Obter dados do plano*/

	begin
	select	ie_preco,
		ie_abrangencia
	into STRICT	ie_preco_w,
		ie_abrangencia_w
	from	pls_plano
	where	nr_sequencia	= nr_seq_plano_w;
	exception
	when others then
		ie_preco_w		:= 0;
		ie_abrangencia_w	:= null;
	end;

	if (nr_seq_segurado_w IS NOT NULL AND nr_seq_segurado_w::text <> '') then
		/*Obter dados do segurado*/

		select	max(a.nr_seq_congenere),
			max(a.nr_seq_intercambio),
			max(b.dt_validade_carteira)
		into STRICT	nr_seq_congenere_w,
			nr_seq_intercambio_w,
			dt_validade_carteira_w
		from	pls_segurado_carteira	b,
			pls_segurado		a
		where	a.nr_sequencia	= nr_seq_segurado_w
		and	a.nr_sequencia	= b.nr_seq_segurado;
		
		if (nr_seq_intercambio_w IS NOT NULL AND nr_seq_intercambio_w::text <> '') then
			select	coalesce(ie_tipo_contrato,'X')
			into STRICT	ie_tipo_contrato_w
			from	pls_intercambio
			where	nr_sequencia	= nr_seq_intercambio_w;
		end if;
	end if;

	/*Obter tipo de intercambio da cooperativa*/

	begin
	select	coalesce(ie_tipo_intercambio,'I')
	into STRICT	ie_tipo_intercambio_w
	from	pls_cong_autor_intercambio
	where	nr_seq_congenere	= nr_seq_congenere_w;
	exception
	when others then
		ie_tipo_intercambio_w	:= 'I';
	end;

	if (fim_dia(dt_validade_carteira_w) >= dt_solicitacao_w) then
		ie_carteira_valida_w	:= 'S';
	elsif (fim_dia(dt_validade_carteira_w) < dt_solicitacao_w) then
		ie_carteira_valida_w	:= 'N';
	end if;

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_p,
		ie_validade_cartao_w,
		ds_observacao_w,
		ie_aprova_online_w,
		ie_libera_obs_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if (ie_tipo_regra_lib_p	= 'LS') then
			if (ie_validade_cartao_w	= 'S') and (ie_carteira_valida_w = 'N') then
				nr_seq_regra_p	:= 0;
			end if;

			if (ie_aprova_online_w	= 'N') and (ie_tipo_intercambio_w	= 'D')then
				nr_seq_regra_p	:= 0;
			end if;
			
			nr_seq_regra_excecao_w	:= pls_obter_excec_lib_guia_inter(	cd_procedimento_w, ie_origem_proced_w, cd_area_procedimento_w,
											cd_grupo_proc_w, cd_especialidade_w, dt_solicitacao_w,
											ie_tipo_contrato_w);
			if (nr_seq_regra_excecao_w	> 0) then
				nr_seq_regra_p	:= 0;
				exit;
			end if;
		elsif (ie_tipo_regra_lib_p	= 'LR') then
			if (ie_libera_obs_w	= 'N') then
				nr_seq_regra_p	:= 0;
			end if;
		end if;
		end;
	end loop;
	close C01;

	if (coalesce(nr_seq_regra_p,0)	> 0) then
		if (nr_seq_guia_proc_p IS NOT NULL AND nr_seq_guia_proc_p::text <> '')  then
			update	pls_guia_plano_proc
			set	ie_libera_intercambio	= 'S'
			where	nr_sequencia		= nr_seq_guia_proc_p;

			if (ds_observacao_w IS NOT NULL AND ds_observacao_w::text <> '') then
				select 	count(1)
				into STRICT	qt_observacao_guia_w
				from	pls_guia_plano
				where 	upper(ds_observacao) like upper('%'||ds_observacao_w||'%')
				and	nr_sequencia	= nr_seq_guia_w;
				
				select	count(1)
				into STRICT	qt_itens_nao_lib_w
				from	pls_guia_plano_proc
				where	coalesce(ie_libera_intercambio,'N')	= 'N'
				and	nr_seq_guia			= nr_seq_guia_w;

				if (qt_observacao_guia_w = 0) and (qt_itens_nao_lib_w	= 0) then
					update	pls_guia_plano
					set	ds_observacao	= CASE WHEN ds_observacao='' THEN substr(ds_observacao_w,1,4000)  ELSE substr(ds_observacao||chr(10)||ds_observacao_w,1,4000) END
					where	nr_sequencia	= nr_seq_guia_w;
				end if;
			end if;
		end if;
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_verif_reg_lib_intercambio ( nr_seq_guia_proc_p bigint, nr_seq_req_proc_p bigint, ie_tipo_regra_lib_p text, nr_seq_guia_p bigint, nr_seq_requisicao_p bigint, cd_operadora_exec_p text, nr_seq_regra_p INOUT bigint) FROM PUBLIC;

