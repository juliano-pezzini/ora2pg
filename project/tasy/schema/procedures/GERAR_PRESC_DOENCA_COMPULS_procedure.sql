-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_presc_doenca_compuls ( nr_atendimento_p bigint, nr_cid_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_prescricao_p INOUT text) AS $body$
DECLARE


nr_seq_exame_w				cih_exame_doenca_compul.nr_seq_exame%type;
cd_pessoa_fisica_w			atendimento_paciente.cd_pessoa_fisica%type;
cd_medico_resp_w			atendimento_paciente.cd_medico_resp%type;
cd_setor_atendimento_w		setor_atendimento.cd_setor_atendimento%type;
cd_material_exame_w			material_exame_lab.cd_material_exame%type;
nr_seq_proc_interno_w		bigint;
ie_origem_proced_w			bigint;
cd_procedimento_w			bigint;
nr_seq_prescr_proc_w		bigint;
qtd_registros_w				bigint;
nr_prescricao_w				bigint;
dt_coleta_w					timestamp;

C01 CURSOR FOR
	SELECT	cedc.nr_seq_exame
	from	cih_doenca_compulsoria cdc,
			cih_exame_doenca_compul cedc
	where	cedc.nr_seq_doenca = cdc.nr_sequencia
		and cdc.cd_doenca_cid = nr_cid_p
		and cedc.ie_situacao = 'A'
		and cdc.ie_situacao = 'A'
		and cdc.ie_gerar_prescricao = 'S';


BEGIN

	if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') then
		begin
			select	cd_pessoa_fisica,
					cd_medico_resp,
					cd_setor_desejado
			into STRICT	cd_pessoa_fisica_w,
					cd_medico_resp_w,
					cd_setor_atendimento_w
			from	atendimento_paciente
			where	nr_atendimento = nr_atendimento_p;

			open C01;
				loop
					fetch C01 into	
						nr_seq_exame_w;
					EXIT WHEN NOT FOUND; /* apply on C01 */
					begin

						select	nextval('prescr_medica_seq')
						into STRICT	nr_prescricao_w
						;

						insert into prescr_medica(
							nr_prescricao,
							cd_pessoa_fisica,
							dt_prescricao,
							dt_atualizacao,
							nm_usuario,
							nr_atendimento,
							cd_estabelecimento,
							cd_medico,
							cd_setor_entrega
						) values (
							nr_prescricao_w,
							cd_pessoa_fisica_w,
							clock_timestamp(),
							clock_timestamp(),
							nm_usuario_p,
							nr_atendimento_p,
							cd_estabelecimento_p,
							cd_medico_resp_w,
							cd_setor_atendimento_w
						);
						
						if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then
							nr_prescricao_p := nr_prescricao_p || ', ' || nr_prescricao_w;
						else
							nr_prescricao_p := nr_prescricao_w;
						end if;

						select	max(b.cd_material_exame)
						into STRICT	cd_material_exame_w
						from	material_exame_lab b,
								exame_lab_material a
						where	a.nr_seq_material = b.nr_sequencia
							and	a.nr_seq_exame 	= nr_seq_exame_w
							and	a.ie_situacao	= 'A'
							and	ie_prioridade	=
								(SELECT	min(ie_prioridade)
									from	exame_lab_material x
									where	nr_seq_exame	= nr_seq_exame_w
									and	x.ie_situacao	= 'A');

						select	max(nr_seq_proc_interno),
								max(ie_origem_proced),
								max(cd_procedimento)
						into STRICT	nr_seq_proc_interno_w,
								ie_origem_proced_w,
								cd_procedimento_w
						from	exame_laboratorio
						where	nr_seq_exame = nr_seq_exame_w;

						select	coalesce(max(nr_sequencia), 0) + 1
						into STRICT	nr_seq_prescr_proc_w
						from	prescr_procedimento
						where	nr_prescricao	= nr_prescricao_w;

						select	count(1)
						into STRICT	qtd_registros_w
						from	prescr_procedimento
						where	nr_prescricao		= nr_prescricao_w
							and cd_material_exame	= cd_material_exame_w
							and nr_seq_exame		= nr_seq_exame_w;

						if (cd_procedimento_w IS NOT NULL AND cd_procedimento_w::text <> '') and (qtd_registros_w = 0)then
							begin

								insert into prescr_procedimento(
									nr_sequencia,
									cd_procedimento,
									qt_procedimento,
									nr_prescricao,
									dt_atualizacao,
									nm_usuario,
									ie_origem_inf,
									nr_seq_proc_interno,
									ie_origem_proced,
									nr_seq_interno,
									nr_seq_exame,
									dt_coleta,
									dt_prev_execucao,
									cd_setor_atendimento,
									cd_motivo_baixa,
									cd_material_exame,
									ie_suspenso
								) values (
									nr_seq_prescr_proc_w,
									cd_procedimento_w,
									1,
									nr_prescricao_w,
									clock_timestamp(),
									nm_usuario_p,
									'1',
									nr_seq_proc_interno_w,
									ie_origem_proced_w,
									nextval('prescr_procedimento_seq'),
									nr_seq_exame_w,
									clock_timestamp(),
									Obter_data_prev_exec(clock_timestamp(), clock_timestamp(), cd_setor_atendimento_w, nr_prescricao_w, 'A'),
									cd_setor_atendimento_w,
									0,
									cd_material_exame_w,
									'N'
								);

							end;
						end if;

					end;
				end loop;
			close C01;
		end;
	end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_presc_doenca_compuls ( nr_atendimento_p bigint, nr_cid_p text, cd_estabelecimento_p bigint, nm_usuario_p text, nr_prescricao_p INOUT text) FROM PUBLIC;

