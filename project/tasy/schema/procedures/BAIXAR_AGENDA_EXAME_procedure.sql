-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_agenda_exame ( qt_minutos_p bigint, ie_status_atual_p text, ie_status_baixa_p text, nm_usuario_p text) AS $body$
DECLARE

				
nr_seq_agenda_w		agenda_paciente.nr_sequencia%type;
cd_agenda_w		bigint;
cd_pessoa_fisica_w	varchar(10);
hr_inicio_w		timestamp;
dt_param_w		timestamp;
nm_paciente_w		varchar(60);
atrib_oldvalue_w	varchar(255);
atrib_newvalue_w	varchar(255);
dt_agenda_w		timestamp;
qt_item_w		bigint;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_agenda,
		a.hr_inicio,
		a.cd_pessoa_fisica,
		substr(obter_nome_pf(a.cd_pessoa_fisica),1,60),
		dt_agenda
	from	agenda g,
		agenda_paciente a
	where	g.cd_agenda		= a.cd_agenda
	and	a.ie_status_agenda 	= ie_status_atual_p
	and	g.cd_tipo_agenda	= 2
	and	a.hr_inicio		< dt_param_w
	and	a.hr_inicio		> to_date('01/06/2008','dd/mm/yyyy');

				

BEGIN

dt_param_w := clock_timestamp() - (1/1440 * qt_minutos_p);

open C01;
loop
fetch c01 into	
	nr_seq_agenda_w,
	cd_agenda_w,
	hr_inicio_w,
	cd_pessoa_fisica_w,
	nm_paciente_w,
	dt_agenda_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin


 	select 	count(*)
	into STRICT	qt_item_w
	from	agenda_paciente
	where	cd_agenda 		= cd_agenda_w
	and	to_char(hr_inicio,'hh24:mi') = to_char(hr_inicio_w,'hh24:mi')
	and	ie_status_baixa_p	= ie_status_agenda
	and	dt_agenda		= dt_agenda_w;

	if (qt_item_w > 0) then

		update	agenda_paciente
		set	hr_inicio	 = hr_inicio + 1/86400
		where	cd_agenda	 = cd_agenda_w
		and	dt_agenda	 = dt_agenda_w
		and	to_char(hr_inicio,'hh24:mi') = to_char(hr_inicio_w,'hh24:mi')
		and	ie_status_agenda = ie_status_baixa_p;

	end if;

	update	agenda_paciente
	set 	ie_status_agenda   	= ie_status_baixa_p
	where	nr_sequencia		= nr_seq_agenda_w;
	
	atrib_oldvalue_w := substr(obter_valor_dominio(83,ie_status_atual_p),1,255);
	atrib_newvalue_w := substr(obter_valor_dominio(83,ie_status_baixa_p),1,255);
	
	CALL gerar_agenda_paciente_hist(cd_agenda_w,nr_seq_agenda_w,'ST',nm_usuario_p, wheb_mensagem_pck.get_texto(800299) || ' ' || atrib_oldvalue_w || ' ' || wheb_mensagem_pck.get_texto(800303) || ' ' || atrib_newvalue_w,
				cd_pessoa_fisica_w, nm_paciente_w, hr_inicio_w, obter_perfil_ativo);

	end;
end loop;
close c01;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_agenda_exame ( qt_minutos_p bigint, ie_status_atual_p text, ie_status_baixa_p text, nm_usuario_p text) FROM PUBLIC;

