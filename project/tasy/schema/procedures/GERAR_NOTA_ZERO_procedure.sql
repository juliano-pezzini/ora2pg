-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nota_zero (nr_sequencia_p bigint, nr_titulo_p bigint, nm_usuario_p text, ie_estorno_p text) AS $body$
DECLARE


cd_serie_nf_w           nota_fiscal.cd_serie_nf%type;
cd_estabelecimento_w    nota_fiscal.cd_estabelecimento%type;
cd_operacao_nf_w        nota_fiscal.cd_operacao_nf%type;
cd_cgc_w                nota_fiscal.cd_cgc%type;
cd_cgc_emitente_w       nota_fiscal.cd_cgc_emitente%type;
cd_pessoa_fisica_w      nota_fiscal.cd_pessoa_fisica%type;
cd_natureza_operacao_w  nota_fiscal.cd_natureza_operacao%type;
cd_condicao_pagamento_w	nota_fiscal.cd_condicao_pagamento%type;
cd_moeda_w              nota_fiscal.cd_moeda%type;
ie_tipo_nota_w		nota_fiscal.ie_tipo_nota%type;
nr_nota_fiscal_w        nota_fiscal.nr_nota_fiscal%type;
nr_sequencia_w          nota_fiscal.nr_sequencia%type;
nr_sequencia_nf_w       nota_fiscal.nr_sequencia_nf%type;
nr_sequencia_origem_w   nota_fiscal.nr_sequencia%type;
qtd_w		 	bigint;
ie_tipo_convenio_w      convenio.ie_tipo_convenio%type;
nr_seq_protocolo_w	titulo_receber.nr_seq_protocolo%type;
nr_interno_conta_w      titulo_receber.nr_interno_conta%type;
			

BEGIN

select count(*)
into STRICT   qtd_w
from   nota_fiscal a,
       titulo_receber b
where  a.nr_sequencia = b.nr_seq_nf_saida
and    b.nr_titulo = nr_titulo_p;


if (qtd_w > 0) then


select  coalesce(max(nr_seq_protocolo),0),
	coalesce(max(nr_interno_conta),0)
into STRICT    nr_seq_protocolo_w,
        nr_interno_conta_w
from    titulo_receber
where   nr_titulo = nr_titulo_p;

if (nr_seq_protocolo_w > 0) then

	select Obter_Tipo_Convenio(Obter_Convenio_Protocolo(nr_seq_protocolo_w))
	into STRICT   ie_tipo_convenio_w
	;

elsif (nr_interno_conta_w > 0) then

	select Obter_Tipo_Convenio(Obter_conv_conta(nr_interno_conta_w))
	into STRICT   ie_tipo_convenio_w 
	;

end if;

if (coalesce(ie_tipo_convenio_w,1) = 1) then

select a.nr_sequencia,
       a.cd_serie_nf,
       a.cd_estabelecimento,
       a.cd_operacao_nf,
       a.cd_cgc,
       a.cd_cgc_emitente,
       a.cd_pessoa_fisica,
       a.cd_natureza_operacao,
       a.cd_condicao_pagamento,
       a.cd_moeda,
       a.ie_tipo_nota
into STRICT   nr_sequencia_origem_w,
       cd_serie_nf_w,
       cd_estabelecimento_w,
       cd_operacao_nf_w,
       cd_cgc_w,
       cd_cgc_emitente_w,
       cd_pessoa_fisica_w,
       cd_natureza_operacao_w,
       cd_condicao_pagamento_w,
       cd_moeda_w,
       ie_tipo_nota_w
from   nota_fiscal a,
       titulo_receber b
where  a.nr_sequencia = b.nr_seq_nf_saida
and    b.nr_titulo = nr_titulo_p;

select	nextval('nota_fiscal_seq')
into STRICT	nr_sequencia_w
;

nr_nota_fiscal_w := nr_sequencia_w + 800000;

select  coalesce(max(cd_serie_nf),cd_serie_nf_w)
into STRICT	cd_serie_nf_w
from 	serie_nota_fiscal
where	ie_compl_pago = 'S'
and	ie_situacao = 'A'
and	cd_estabelecimento = cd_estabelecimento_w;

select 	coalesce(max(nr_sequencia_nf),0)+1
into STRICT	nr_sequencia_nf_w
from 	nota_fiscal
where	nr_nota_fiscal 		= nr_nota_fiscal_w
and	cd_estabelecimento 	= cd_estabelecimento_w
and	cd_serie_nf 		= cd_serie_nf_w
and	cd_cgc_emitente		= cd_cgc_emitente_w;

insert into     nota_fiscal(
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_nota_fiscal,
		nr_sequencia_nf,
		cd_operacao_nf,
		dt_emissao,
		dt_entrada_saida,
		ie_acao_nf,
		ie_emissao_nf,
		ie_tipo_frete,
		vl_mercadoria,
		vl_total_nota,
		qt_peso_bruto,
		qt_peso_liquido,
		dt_atualizacao,
		nm_usuario,
		cd_condicao_pagamento,
		dt_contabil,
		cd_cgc,
		cd_pessoa_fisica,
		vl_ipi,
		vl_descontos,
		vl_frete,
		vl_seguro,
		vl_despesa_acessoria,
		vl_despesa_doc,
		ds_observacao,
		nr_nota_referencia,
		cd_serie_referencia,
		cd_natureza_operacao,
		dt_atualizacao_estoque,
		vl_desconto_rateio,
		ie_situacao,
		nr_ordem_compra,
		nr_lote_contabil,
		nr_sequencia,
		nr_sequencia_ref,
		cd_moeda,
		vl_conv_moeda,
		ie_entregue_bloqueto,
		ie_tipo_nota,
		cd_setor_digitacao,
		nr_danfe,
		nr_seq_baixa_tit)
	values (	cd_estabelecimento_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		nr_sequencia_nf_w,
		cd_operacao_nf_w,
		trunc(clock_timestamp()),
		clock_timestamp(),
		'1',
		'0',
		'0',
		0,
		0,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		cd_condicao_pagamento_w,
		null,
		cd_cgc_w,
		cd_pessoa_fisica_w,
		0,
		0,
		null,
		0,
		0,
		0,
		CASE WHEN ie_estorno_p='S' THEN wheb_mensagem_pck.get_texto(990908)  ELSE null END ,
		null,
		null,
		cd_natureza_operacao_w,
		null,
		0,
		'1',
		null,
		0,
		nr_sequencia_w,
		nr_sequencia_origem_w,
		cd_moeda_w,
		null,
		'N',
		ie_tipo_nota_w,
		null,
		null,
		nr_sequencia_p);
	
		
	insert into nota_fiscal_item(
		nr_sequencia,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_sequencia_nf,
		nr_item_nf,
		cd_natureza_operacao,
		qt_item_nf,
		vl_unitario_item_nf,
		vl_total_item_nf,
		dt_atualizacao,
		nm_usuario,
		vl_frete,
		vl_desconto,
		vl_despesa_acessoria,
		cd_material,
		cd_procedimento,
		cd_setor_atendimento,
		cd_conta,
		cd_local_estoque,
		ds_observacao,
		qt_peso_bruto,
		qt_peso_liquido,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_lote_fabricacao,
		dt_validade,
		dt_atualizacao_estoque,
		cd_conta_contabil,
		vl_desconto_rateio,
		vl_seguro,
		cd_centro_custo,
		cd_material_estoque,
		ie_origem_proced,
		nr_ordem_compra,
		vl_liquido,
		pr_desconto,
		nr_item_oci,
		dt_entrega_ordem,
		nr_seq_conta_financ,
		nr_contrato,
		ds_complemento,
		nr_seq_proj_rec,
		vl_projeto,
		nr_atendimento,
		pr_desc_financ,
		vl_desc_financ,
		nr_seq_lic_item,
		nr_seq_ordem_serv,
		ds_inconsistencia,
		ds_justificativa,
		vl_liq_moeda_ref,
		nr_seq_unidade_adic,
		nr_seq_lote_fornec,
		nr_emprestimo,
		nr_seq_item_emprestimo,
		ie_atualizar_barras,
		cd_barra_material,
		nr_sequencia_vinc_consig,
		nr_seq_proj_gpi,
		nr_seq_etapa_gpi,
		nr_seq_conta_gpi,
		dt_inicio_garantia,
		dt_fim_garantia,
		nr_seq_marca,
		ie_indeterminado,
		vl_item_preco_pub,
		vl_total_estrangeiro)
	(SELECT	nr_sequencia_w,
		cd_estabelecimento,
		cd_cgc_emitente,
		cd_serie_nf,
		nr_sequencia_nf_w,
		nr_item_nf,
		cd_natureza_operacao,
		1,
		0,
		0,
		clock_timestamp(),
		nm_usuario_p,
		0,
		0,
		0,
		cd_material,
		cd_procedimento,
		cd_setor_atendimento,
		cd_conta,
		cd_local_estoque,
		ds_observacao,
		qt_peso_bruto,
		qt_peso_liquido,
		cd_unidade_medida_compra,
		qt_item_estoque,
		cd_unidade_medida_estoque,
		cd_lote_fabricacao,
		dt_validade,
		'',
		cd_conta_contabil,
		0,
		0,
		cd_centro_custo,
		cd_material_estoque,
		ie_origem_proced,
		nr_ordem_compra,
		0,
		0,
		nr_item_oci,
		dt_entrega_ordem,
		nr_seq_conta_financ,
		nr_contrato,
		ds_complemento,
		nr_seq_proj_rec,
		0,
		nr_atendimento,
		0,
		0,
		nr_seq_lic_item,
		nr_seq_ordem_serv,
		ds_inconsistencia,
		ds_justificativa,
		0,
		nr_seq_unidade_adic,
		nr_seq_lote_fornec,
		nr_emprestimo,
		nr_seq_item_emprestimo,
		ie_atualizar_barras,
		cd_barra_material,
		nr_sequencia_vinc_consig,
		nr_seq_proj_gpi,
		nr_seq_etapa_gpi,
		nr_seq_conta_gpi,
		dt_inicio_garantia,
		dt_fim_garantia,
		nr_seq_marca,
		ie_indeterminado,
		0,
		0
	from	nota_fiscal_item
	where	nr_sequencia = nr_sequencia_origem_w);
		
	CALL atualizar_serie_nf(nr_sequencia_w, nm_usuario_p);
	
	update	nota_fiscal
	set	dt_atualizacao_estoque = clock_timestamp()
	where	nr_sequencia = nr_sequencia_w;


	end if;
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nota_zero (nr_sequencia_p bigint, nr_titulo_p bigint, nm_usuario_p text, ie_estorno_p text) FROM PUBLIC;

