-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_iniciar_impressao_mapa ( nm_usuario_p text, ie_opcao_p bigint, cd_estabelecimento_p bigint, ds_mapas_p INOUT text) AS $body$
DECLARE

 
nr_seq_grup_imp_w				bigint;
nr_seq_mapa_w					bigint;
nr_seq_impressao_mapa_w			bigint;
nr_prescricao_w					bigint;
nr_prescricao_ww				bigint;
nr_seq_prescr_w					bigint;
qt_max_exames_w					bigint;
ie_tipo_atendimento_w			bigint;
ie_urgencia_w					prescr_procedimento.ie_urgencia%type;
ie_tipo_atendimento_urgentes_w 	bigint;

/* 	ie_opcao_p 
	0 - Consiste os registros com valor menor que o definido no parâmetro 2 
	1 - Consiste os registros com valor maior que o definido no parâmetro 2*/
 
 
C01 CURSOR FOR 
		SELECT	nr_seq_grupo_imp, 
				ie_urgencia 
		from	lab_impressao_mapa_v 
		where	qtdade_exames >= qt_max_exames_w 
		and 	1 = ie_opcao_p 
		and		ie_tipo_atendimento = ie_tipo_atendimento_w 
		and 	cd_estabelecimento = cd_estabelecimento_p 
	
union
 
		SELECT	nr_seq_grupo_imp, 
				ie_urgencia 
		from	lab_impressao_mapa_v 
		where	qtdade_exames < qt_max_exames_w 
		and 	0 = ie_opcao_p	 
		and		ie_tipo_atendimento = ie_tipo_atendimento_w 
		and 	cd_estabelecimento = cd_estabelecimento_p 
	order by 	ie_urgencia, nr_seq_grupo_imp;
	
C03 CURSOR FOR 
		SELECT 	* from (SELECT distinct a.nr_prescricao 
		from	lab_impressao_mapa a, prescr_medica m, atendimento_paciente p, prescr_procedimento r 
		where	p.nr_atendimento = m.nr_atendimento 
		and		a.nr_prescricao = m.nr_prescricao 
		and		a.nr_seq_grup_imp = nr_seq_grup_imp_w 
		and		p.ie_tipo_atendimento = ie_tipo_atendimento_w 
		and 	coalesce(a.cd_mapa::text, '') = '' 
		and		a.ie_status = 10 
		AND 	a.nr_prescricao = r.nr_prescricao 
		and 	a.nr_seq_prescr = r.nr_sequencia 
		and 	coalesce(a.cd_estabelecimento,lab_obter_cd_estab_setor(r.cd_setor_atendimento)) = cd_estabelecimento_p) alias3 LIMIT (qt_max_exames_w);
			
C02 CURSOR FOR 
		SELECT	a.nr_sequencia, 
				a.nr_prescricao, 
				a.nr_seq_prescr 
		from	lab_impressao_mapa a, prescr_medica m, atendimento_paciente p, prescr_procedimento r 
		where	p.nr_atendimento = m.nr_atendimento 
		and		a.nr_prescricao = m.nr_prescricao 
		and		a.nr_seq_grup_imp = nr_seq_grup_imp_w 
		and		p.ie_tipo_atendimento = ie_tipo_atendimento_w 
		and		a.nr_prescricao = nr_prescricao_ww 
		and 	coalesce(a.cd_mapa::text, '') = '' 
		and		a.ie_status = 10 
		AND 	a.nr_prescricao = r.nr_prescricao 
		and 	a.nr_seq_prescr = r.nr_sequencia 
		and 	coalesce(a.cd_estabelecimento,lab_obter_cd_estab_setor(r.cd_setor_atendimento)) = cd_estabelecimento_p 
		and   ((r.ie_urgencia = ie_urgencia_w and ie_tipo_atendimento_urgentes_w > 0) or (coalesce(ie_tipo_atendimento_urgentes_w::text, '') = '' or ie_tipo_atendimento_urgentes_w = 0)) 
		order by 
				nr_sequencia;		
	 

BEGIN 
 
select	Obter_Valor_Param_Usuario(10209, 2, Obter_perfil_Ativo, nm_usuario_p, obter_estabelecimento_ativo) 
into STRICT	qt_max_exames_w
;
 
select	Obter_Valor_Param_Usuario(10209, 6, Obter_perfil_Ativo, nm_usuario_p, obter_estabelecimento_ativo) 
into STRICT	ie_tipo_atendimento_w
;
 
select	Obter_Valor_Param_Usuario(10209, 7, Obter_perfil_Ativo, nm_usuario_p, obter_estabelecimento_ativo) 
into STRICT	ie_tipo_atendimento_urgentes_w
;
 
 
ds_mapas_p := '';
	open C01;
	loop 
	fetch C01 into	 
		nr_seq_grup_imp_w, 
		ie_urgencia_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin		 
			select	nextval('gerar_codigo_mapa_seq') 
			into STRICT	nr_seq_mapa_w 
			;
			 
			if (ds_mapas_p IS NOT NULL AND ds_mapas_p::text <> '') then 
				ds_mapas_p := ds_mapas_p || ',';
			end if;
			 
			ds_mapas_p := ds_mapas_p || nr_seq_mapa_w;
			 
			open c03;
			loop 
			fetch c03 into	 
				nr_prescricao_ww;
			EXIT WHEN NOT FOUND; /* apply on c03 */
				begin 
			 
					open C02;
					loop 
					fetch C02 into	 
						nr_seq_impressao_mapa_w, 
						nr_prescricao_w, 
						nr_seq_prescr_w;
					EXIT WHEN NOT FOUND; /* apply on C02 */
						begin 
							update	lab_impressao_mapa 
							set	cd_mapa = nr_seq_mapa_w, 
								ie_status = 20 
							where	nr_sequencia = nr_seq_impressao_mapa_w;	
							 
							update	prescr_procedimento 
							set	nr_seq_imp_mapa = nr_seq_impressao_mapa_w 
							where	nr_prescricao = nr_prescricao_w 
							and	nr_sequencia = nr_seq_prescr_w;
							 
							CALL lab_insere_impressao_mapa_log(nr_prescricao_w, nr_seq_prescr_w, 20, nr_seq_mapa_w, nm_usuario_p);
						end;
					end loop;
					close C02;
				 
				end;
			end loop;
			close c03;
					 
		end;
	end loop;
	close C01;
 
 
if (ds_mapas_p IS NOT NULL AND ds_mapas_p::text <> '') then 
	commit;
end if;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_iniciar_impressao_mapa ( nm_usuario_p text, ie_opcao_p bigint, cd_estabelecimento_p bigint, ds_mapas_p INOUT text) FROM PUBLIC;

