-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_tit_rec_contrato ( dt_vencimento_p timestamp, qt_titulo_p bigint, nr_seq_regra_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_contabil_p timestamp) AS $body$
DECLARE


ie_forma_pagto_w		varchar(01);
cd_pessoa_contratado_w	varchar(60);
cd_cgc_contratado_w	varchar(14);
cd_pessoa_contratante_w	varchar(15);
cd_cgc_contratante_w	varchar(15);
vl_total_w		double precision;
qt_titulo_w		smallint;
qt_meses_w		smallint := 0;
qt_dias_w		bigint := 0;
nr_titulo_w		bigint;
cd_conta_financ_w		bigint;
nr_seq_classif_w		bigint;
cd_estab_financeiro_w	bigint;
ie_origem_w		varchar(10);
nr_seq_trans_financ_w	bigint;
nr_seq_trans_financ_baixa_w	bigint;
dt_inicio_vigencia_w	timestamp;
dt_venc_atual_w		timestamp;
dt_final_vigencia_w		timestamp;
dt_contabil_w		timestamp;
ie_tipo_titulo_w		varchar(2) := '1';
vl_tipo_titulo_w		varchar(2);
cd_tipo_juros_w			bigint;
tx_juros_w			contrato_regra_pagto.tx_juros%type;
cd_tipo_multa_w			bigint;
tx_multa_w			contrato_regra_pagto.tx_multa%type;
qt_periodo_variavel_w		integer;
ie_periodo_variavel_w		varchar(1);
nr_seq_conta_banco_w		bigint;
nr_seq_crit_rateio_w		bigint;
ie_centro_contrato_w		varchar(1);
cd_centro_rateio_w		bigint;
cd_conta_contabil_rateio_w	varchar(20);
cd_conta_financ_rateio_w	bigint;
pr_alocacao_w			double precision;
cd_centro_custo_w		bigint;
vl_total_rateio_w		double precision;
vl_rateio_w			double precision;
vl_titulo_w			double precision;
cd_conta_contabil_w		varchar(255);
ie_gerar_adiantamento_w		varchar(1);
nr_adiantamento_w		bigint;
cd_tipo_recebimento_w		bigint;
cd_perfil_w			bigint;
ie_consiste_vl_contrato_w	varchar(1);
vl_total_contrato_w		double precision;
vl_titulos_w			double precision;
ie_considera_contratante_w	varchar(1);
nr_seq_classe_tit_rec_w		contrato_regra_pagto.nr_seq_classe_tit_rec%type;

c01 CURSOR FOR
SELECT	a.cd_centro_custo,
	a.pr_alocacao
from	contrato_centro_custo a
where	a.nr_seq_contrato	= nr_seq_contrato_p
and	((coalesce(a.dt_inicio_vigencia::text, '') = '') or (coalesce(a.dt_fim_vigencia::text, '') = '') or (PKG_DATE_UTILS.start_of(clock_timestamp(),'dd',0) between PKG_DATE_UTILS.start_of(a.dt_inicio_vigencia,'dd',0) and PKG_DATE_UTILS.start_of(a.dt_fim_vigencia,'dd',0)));

c02 CURSOR FOR
SELECT	a.cd_centro_custo,
	a.cd_conta_contabil,
	a.cd_conta_financ,
	a.pr_rateio
from	ctb_criterio_rateio_item a,
	ctb_criterio_rateio b
where	b.nr_sequencia	= a.nr_seq_criterio
and	b.nr_sequencia	= nr_seq_crit_rateio_w;


BEGIN
cd_perfil_w	:= obter_perfil_ativo;

dt_venc_atual_w		:= dt_vencimento_p;
qt_titulo_w		:= coalesce(qt_titulo_p,0);
dt_contabil_w		:= coalesce(dt_contabil_p,PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.END_OF(dt_venc_atual_w, 'MONTH', 0),'dd',0));
vl_tipo_titulo_w := obter_param_usuario(1200, 68, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, vl_tipo_titulo_w);
ie_consiste_vl_contrato_w := obter_param_usuario(1200, 139, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_consiste_vl_contrato_w);
ie_gerar_adiantamento_w := obter_param_usuario(1200, 141, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_gerar_adiantamento_w);
ie_considera_contratante_w := obter_param_usuario(1200, 142, cd_perfil_w, nm_usuario_p, cd_estabelecimento_p, ie_considera_contratante_w);


if (coalesce(vl_tipo_titulo_w,'1') <> '1') then
	ie_tipo_titulo_w := vl_tipo_titulo_w;
end if;


select 	ie_forma,
	coalesce(vl_pagto,0),
	cd_conta_financ,
	dt_inicio_vigencia,
	dt_final_vigencia,
	nr_seq_trans_financ,
	nr_seq_trans_fin_baixa,
	coalesce(CD_TIPO_TAXA_JURO,2),
	coalesce(TX_JUROS,0),
	coalesce(CD_TIPO_TAXA_MULTA,2),
	coalesce(TX_MULTA,0),
	coalesce(ie_periodo_variavel,'D'),
	coalesce(qt_periodo_variavel,0),
	nr_seq_conta_banco,
	ie_centro_contrato,
	nr_seq_crit_rateio,
	cd_conta_contabil,
	nr_seq_classe_tit_rec
into STRICT 	ie_forma_pagto_w,
	vl_total_w,
	cd_conta_financ_w,
	dt_inicio_vigencia_w,
	dt_final_vigencia_w,
	nr_seq_trans_financ_w,
	nr_seq_trans_financ_baixa_w,
	cd_tipo_juros_w,
	tx_juros_w,
	cd_tipo_multa_w,
	tx_multa_w,
	ie_periodo_variavel_w,
	qt_periodo_variavel_w,
	nr_seq_conta_banco_w,
	ie_centro_contrato_w,
	nr_seq_crit_rateio_w,
	cd_conta_contabil_w,
	nr_seq_classe_tit_rec_w
from 	contrato_regra_pagto
where	nr_sequencia	= nr_seq_regra_p;

CALL gerenciamento_contrato_pck.consistir_tit_receber_contrato(nr_seq_contrato_p, 0, qt_titulo_p * vl_total_w, nm_usuario_p, 'N');

if (vl_total_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(351780);	
	/*Para a geração do título à pagar, o valor da regra deve ser maior que zero.*/

end if;

if (dt_inicio_vigencia_w IS NOT NULL AND dt_inicio_vigencia_w::text <> '') and (dt_final_vigencia_w IS NOT NULL AND dt_final_vigencia_w::text <> '') and
	((trunc(dividir(Obter_Dias_Entre_Datas(dt_inicio_vigencia_w, dt_final_vigencia_w),30)) + 1) < qt_titulo_p) then
	/*(-20011,'A quantidade de parcelas supera a quantidade de meses da vigência da regra.');*/

	CALL wheb_mensagem_pck.exibir_mensagem_abort(177853);
end if;

select	cd_pessoa_contratada,
		cd_cgc_contratado,
		coalesce(vl_total_contrato,0),
		cd_pessoa_contratante,
		cd_cnpj_contratante
into STRICT	cd_pessoa_contratado_w,
		cd_cgc_contratado_w,
		vl_total_contrato_w,
		cd_pessoa_contratante_w,
		cd_cgc_contratante_w
from	contrato
where	nr_sequencia	= nr_seq_contrato_p;

if (cd_pessoa_contratado_w IS NOT NULL AND cd_pessoa_contratado_w::text <> '') and (cd_cgc_contratado_w IS NOT NULL AND cd_cgc_contratado_w::text <> '') then
	cd_pessoa_contratado_w := null;
end if;

if (cd_pessoa_contratante_w IS NOT NULL AND cd_pessoa_contratante_w::text <> '') and (cd_cgc_contratante_w IS NOT NULL AND cd_cgc_contratante_w::text <> '') then
	cd_pessoa_contratante_w := null;
end if;

if (ie_forma_pagto_w = 'A') then
	qt_meses_w	:= 12;
elsif (ie_forma_pagto_w = 'B') then
	qt_meses_w	:= 2;
elsif (ie_forma_pagto_w = 'M') then
	qt_meses_w	:= 1;
elsif (ie_forma_pagto_w = 'T') then
	qt_meses_w	:= 3;
elsif (ie_forma_pagto_w = 'F') then
	qt_meses_w	:= 0;
elsif (ie_forma_pagto_w = 'R') then /* Semestral */
	qt_meses_w	:= 6;
elsif (ie_forma_pagto_w = 'Q') then
	qt_dias_w	:= 15;
elsif (ie_forma_pagto_w = 'S') then
	qt_dias_w	:= 7;
elsif (ie_forma_pagto_w = 'V') then
	begin

	if (ie_periodo_variavel_w = 'M') then
		qt_meses_w	:= qt_periodo_variavel_w;
	else
		qt_dias_w	:= qt_periodo_variavel_w;
	end if;

	end;	
end if;

select	coalesce(cd_estab_financeiro, cd_estabelecimento)
into STRICT	cd_estab_financeiro_w
from	estabelecimento
where	cd_estabelecimento	= cd_estabelecimento_p;

/* Francisco - OS 77083 - 13/12/2007 */

select	coalesce(max(ie_origem_tit_contrato),'9')
into STRICT	ie_origem_w
from	parametro_contas_receber
where	cd_estabelecimento	= cd_estabelecimento_p;

while(qt_titulo_w > 0) loop
	begin
	select	nextval('titulo_seq')
	into STRICT	nr_titulo_w
	;

	if (ie_consiste_vl_contrato_w = 'S') and (vl_total_contrato_w > 0) then
		select	sum(vl_titulo)
		into STRICT	vl_titulos_w
		from	titulo_receber
		where	nr_seq_contrato = nr_seq_contrato_p
		and	ie_situacao <> 3;

		vl_titulos_w := (vl_titulos_w + vl_total_w);
		if (vl_titulos_w > vl_total_contrato_w) then
			/* O valor do título ultrapassou o saldo do contrato.*/

			CALL wheb_mensagem_pck.exibir_mensagem_abort(245437);
		end if;
	end if;

	insert into titulo_receber(nr_titulo,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			dt_contabil,
			dt_emissao,
			dt_vencimento,
			dt_pagamento_previsto,
			vl_titulo,
			vl_saldo_titulo,
			vl_saldo_juros,
			vl_saldo_multa,
			cd_moeda,
			cd_portador,
			cd_tipo_portador,
			tx_juros,
			tx_multa,
			cd_tipo_taxa_juro,
			cd_tipo_taxa_multa,
			tx_desc_antecipacao,
			ie_situacao,
			ie_tipo_emissao_titulo,
			ie_origem_titulo,
			ie_tipo_titulo,
			ie_tipo_inclusao,
			cd_pessoa_fisica,
			cd_cgc,
			nr_seq_contrato,
			cd_estab_financeiro,
			nr_seq_trans_fin_contab,
			nm_usuario_orig,
			dt_inclusao,
			nr_seq_trans_fin_baixa,
			nr_seq_conta_banco,
			nr_seq_classe)
		values (	nr_titulo_w,
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			dt_contabil_w,
			clock_timestamp(),
			dt_venc_atual_w,
			dt_venc_atual_w,
			vl_total_w,
			vl_total_w,
			0,
			0,
			1,
			0,
			0,
			tx_juros_w,
			tx_multa_w,
			cd_tipo_juros_w,
			cd_tipo_multa_w,
			0,
			'1',
			1,
			ie_origem_w,
			ie_tipo_titulo_w,
			'2',
			CASE WHEN coalesce(ie_considera_contratante_w,'N')='S' THEN  cd_pessoa_contratante_w  ELSE cd_pessoa_contratado_w END ,
			CASE WHEN coalesce(ie_considera_contratante_w,'N')='S' THEN  cd_cgc_contratante_w  ELSE cd_cgc_contratado_w END ,
			nr_seq_contrato_p,
			cd_estab_financeiro_w,
			nr_seq_trans_financ_w,
			nm_usuario_p,
			clock_timestamp(),
			nr_seq_trans_financ_baixa_w,
			nr_seq_conta_banco_w,
			nr_seq_classe_tit_rec_w);
			
	if (cd_conta_financ_w IS NOT NULL AND cd_conta_financ_w::text <> '') and (coalesce(nr_seq_crit_rateio_w::text, '') = '') and (ie_centro_contrato_w = 'N') then
				
		select	coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_classif_w
		from	titulo_receber_classif
		where	nr_titulo = nr_titulo_w;	
	
		insert into titulo_receber_classif(cd_centro_custo,
				cd_conta_financ,
				dt_atualizacao,
				nm_usuario,
				nr_sequencia,
				nr_titulo,
				vl_classificacao,
				vl_desconto,
				vl_original)
			values (	null,
				cd_conta_financ_w,
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_classif_w,
				nr_titulo_w,
				vl_total_w,
				0,
				0);						
	
	end if;	
	
	if (ie_centro_contrato_w = 'S') and (coalesce(nr_seq_crit_rateio_w::text, '') = '') then
		
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_classif_w
		from	titulo_receber_classif
		where	nr_titulo = nr_titulo_w;

		vl_total_rateio_w			:= 0;
		open C01;
		loop
		fetch C01 into	
			cd_centro_custo_w,
			pr_alocacao_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin


			vl_rateio_w	:= round(vl_total_w * (pr_alocacao_w / 100),2);
			vl_total_rateio_w	:= vl_total_rateio_w + vl_rateio_w;
			nr_seq_classif_w	:= nr_seq_classif_w + 1;

			
			insert into titulo_receber_classif(
				nr_titulo,
				nr_sequencia,
				cd_centro_custo,
				cd_conta_financ,
				nr_seq_contrato,
				dt_atualizacao,
				nm_usuario,
				vl_classificacao,
				vl_desconto,
				vl_original,
				cd_conta_contabil)
			values (	nr_titulo_w,
				nr_seq_classif_w,
				cd_centro_custo_w,
				cd_conta_financ_w,
				nr_seq_contrato_p,
				clock_timestamp(),
				nm_usuario_p,
				vl_rateio_w,
				0,
				0,
				cd_conta_contabil_w);
			end;
		end loop;
		close C01;


		if (vl_total_rateio_w <> 0) then
			begin
			select	vl_titulo
			into STRICT	vl_titulo_w
			from	titulo_receber
			where	nr_titulo	= nr_titulo_w;

			update	titulo_receber_classif
			set	vl_classificacao 	= vl_classificacao + vl_titulo_w - vl_total_rateio_w
			where	nr_titulo		= nr_titulo_w
			and	nr_sequencia	= nr_seq_classif_w;
			
			end;
		end if;
	end if;
	
	if (nr_seq_crit_rateio_w IS NOT NULL AND nr_seq_crit_rateio_w::text <> '') then
		begin
		
		vl_total_rateio_w	:= 0;
		
		select	coalesce(max(nr_sequencia),0)
		into STRICT	nr_seq_classif_w
		from	titulo_receber_classif
		where	nr_titulo = nr_titulo_w;
				
		open C02;
		loop
		fetch C02 into	
			cd_centro_rateio_w,
			cd_conta_contabil_rateio_w,
			cd_conta_financ_rateio_w,
			pr_alocacao_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			
			vl_rateio_w	:= round(vl_total_w * (pr_alocacao_w / 100),2);
			vl_total_rateio_w	:= vl_total_rateio_w + vl_rateio_w;
			nr_seq_classif_w	:= nr_seq_classif_w + 1;

			
			insert into titulo_receber_classif(
				nr_titulo,
				nr_sequencia,
				cd_centro_custo,
				cd_conta_financ,
				nr_seq_contrato,
				dt_atualizacao,
				nm_usuario,
				vl_classificacao,
				vl_desconto,
				vl_original,
				cd_conta_contabil)
			values (	nr_titulo_w,
				nr_seq_classif_w,
				cd_centro_rateio_w,
				cd_conta_financ_rateio_w,
				nr_seq_contrato_p,
				clock_timestamp(),
				nm_usuario_p,
				vl_rateio_w,
				0,
				0,
				cd_conta_contabil_rateio_w);
				
			end;
		end loop;
		close C02;
		
		if (vl_total_rateio_w <> 0) then
			begin
			select	vl_titulo
			into STRICT	vl_titulo_w
			from	titulo_receber
			where	nr_titulo	= nr_titulo_w;

			update	titulo_receber_classif
			set	vl_classificacao	= vl_classificacao + vl_titulo_w - vl_total_rateio_w
			where	nr_titulo		= nr_titulo_w
			and	nr_sequencia	= nr_seq_classif_w;
			
			end;
		end if;
		
		end;
	end if;
	
	if (qt_meses_w > 0) then
		select	PKG_DATE_UTILS.ADD_MONTH(dt_venc_atual_w,qt_meses_w,0)
		into STRICT	dt_venc_atual_w
		;
	elsif (qt_dias_w > 0) then
		select	dt_venc_atual_w + qt_dias_w
		into STRICT	dt_venc_atual_w
		;
	end if;	

	qt_titulo_w := (qt_titulo_w - 1);
	
	end;

	if (coalesce(ie_gerar_adiantamento_w,'N') = 'S') and (coalesce(ie_tipo_titulo_w,'1') = '12') then
	
		select	coalesce(max(cd_tipo_recebimento),0)
		into STRICT	cd_tipo_recebimento_w
		from   	tipo_recebimento
		where  	ie_tipo_consistencia = 7;
		
		if (coalesce(cd_tipo_recebimento_w,0) = 0) then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(244616);
			--R+aise_application_error(-20011,'Não foi encontrado um tipo de recebimento do tipo Adiantamento.');
		end if;
		
		select	nextval('adiantamento_seq')
		into STRICT	nr_adiantamento_w
		;

		if (coalesce(nr_adiantamento_w,0) <> 0 ) then
			insert into adiantamento(nr_adiantamento,
				cd_cgc,
				cd_estabelecimento,
				cd_moeda,
				cd_pessoa_fisica,
				cd_tipo_recebimento,
				ds_observacao,
				dt_adiantamento,
				dt_atualizacao,
				dt_baixa,
				dt_contabil,
				ie_status,
				ie_situacao,
				nm_usuario,
				nr_seq_trans_fin,
				vl_adiantamento,
				vl_especie,
				vl_saldo,
				NR_SEQ_CONTRATO)
			VALUES (nr_adiantamento_w,
				CASE WHEN coalesce(ie_considera_contratante_w,'N')='S' THEN  cd_cgc_contratante_w  ELSE cd_cgc_contratado_w END ,
				cd_estabelecimento_p,
				1,
				CASE WHEN coalesce(ie_considera_contratante_w,'N')='S' THEN  cd_pessoa_contratante_w  ELSE cd_pessoa_contratado_w END ,
				cd_tipo_recebimento_w,
				wheb_mensagem_pck.get_texto(303031) || ' ' ||nr_seq_contrato_p||'.',
				clock_timestamp(),
				clock_timestamp(),
				null,
				dt_contabil_w,
				'D',
				'A',
				nm_usuario_p,
				nr_seq_trans_financ_w,
				vl_total_w,
				0,
				vl_total_w,
				nr_seq_contrato_p);
		end if;
	end if;

end loop;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_tit_rec_contrato ( dt_vencimento_p timestamp, qt_titulo_p bigint, nr_seq_regra_p bigint, nr_seq_contrato_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, dt_contabil_p timestamp) FROM PUBLIC;

