-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE cp_create_indicator ( nr_seq_goal_p cp_goal_indicator.nr_seq_goal%type, ds_unique_value_p cp_indicator.ds_unique_value%type, ds_display_name_p cp_indicator.ds_display_name%type, ds_version_p cp_indicator.ds_version%type, ie_data_type_p cp_indicator.ie_data_type%type, ie_language_p cp_indicator.ie_language%type, ie_active_p cp_indicator.ie_active%type, ie_progressive_p cp_indicator.ie_progressive%type, nm_usuario_p cp_indicator.nm_usuario%type, nr_sequencia_p INOUT cp_indicator.nr_sequencia%type, nr_seq_goal_indic_p INOUT cp_goal_indicator.nr_sequencia%type ) AS $body$
DECLARE


ds_version_w			cp_indicator.ds_version%type;
ds_display_name_w		cp_indicator.ds_display_name%type;
nr_sequencia_w			cp_indicator.nr_sequencia%type;
si_record_changed_w		cp_indicator.si_record_changed%type;


BEGIN

begin
	select	nr_sequencia,
			ds_version,
			ds_display_name,
			nr_sequencia
	into STRICT	nr_sequencia_w,
			ds_version_w,
			ds_display_name_w,
		    nr_sequencia_p
	from	cp_indicator
	where	nr_sequencia = (
		SELECT	max(nr_sequencia)
		from	cp_indicator
		where	ds_unique_value = ds_unique_value_p
	);
exception
	when no_data_found then
	begin
		nr_sequencia_w		:= null;
		ds_version_w		:= null;
		ds_display_name_w	:= null;		
		nr_sequencia_p 		:= null;
	end;
end;

select	CASE WHEN count(1)=0 THEN  'N'  ELSE 'Y' END
into STRICT	si_record_changed_w
from	cp_indicator
where	(ds_version IS NOT NULL AND ds_version::text <> '')
and		ds_version <> ds_version_p;

if (ds_version_w IS NOT NULL AND ds_version_w::text <> '') and (si_record_changed_w = 'Y') then

	select	CASE WHEN count(1)=0 THEN  'Y'  ELSE 'N' END
	into STRICT	si_record_changed_w
	from	cp_indicator
	where	ds_unique_value = ds_unique_value_p;
	
	if (si_record_changed_w = 'N') then
		select	CASE WHEN ds_display_name_p=coalesce(ds_display_name_w, ds_display_name_p) THEN  'N'  ELSE 'Y' END
		into STRICT	si_record_changed_w
		;
	end if;

end if;

if (coalesce(nr_sequencia_p::text, '') = '' or ds_version_w <> ds_version_p) then
	select	nextval('cp_indicator_seq')
	into STRICT	nr_sequencia_p
	;

	insert into cp_indicator(
		nr_sequencia,
		ds_unique_value,
		ds_display_name,
		ds_version,
		ie_data_type,
		ie_language,
		ie_active,
		ie_origin,
		ie_progressive,
		si_import_status,
		ie_situacao,
		nm_usuario,
		dt_atualizacao,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		si_record_changed
	) values (
		nr_sequencia_p,
		ds_unique_value_p,
		ds_display_name_p,
		ds_version_p,
		ie_data_type_p,
		ie_language_p,
		ie_active_p,
		'E', -- From Elsevier
		ie_progressive_p,
		'SP',
		'I',
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		coalesce(si_record_changed_w, 'N')
	);
	
	update	cp_indicator
	set		si_record_changed = 'N'
	where 	ds_version = ds_version_w;
	
end if;

if (nr_seq_goal_p IS NOT NULL AND nr_seq_goal_p::text <> '') then
	begin
		select	nr_sequencia
		into STRICT	nr_seq_goal_indic_p
		from	cp_goal_indicator
		where	nr_seq_goal = nr_seq_goal_p
			and nr_seq_indicator = nr_sequencia_p;
	exception
		when no_data_found then
			nr_seq_goal_indic_p	:= null;
	end;
	
	if (si_record_changed_w = 'N') then
		
		select 	CASE WHEN count(1)=0 THEN  'Y'  ELSE 'N' END
		into STRICT	si_record_changed_w
		from 	cp_goal_indicator a,
				cp_indicator b
		where	b.nr_sequencia = a.nr_seq_indicator
		and		b.nr_sequencia = (	SELECT 	max(nr_sequencia) 
									from 	cp_indicator 
									where 	ds_unique_value = ds_unique_value_p 
									and 	nr_sequencia < nr_sequencia_p)
		and		a.nr_seq_goal = nr_seq_goal_p;
		
	end if;
	
	if (coalesce(nr_seq_goal_indic_p::text, '') = '') then
		select	nextval('cp_goal_indicator_seq')
		into STRICT	nr_seq_goal_indic_p
		;

		insert into cp_goal_indicator(
			nr_sequencia,
			nr_seq_goal,
			nr_seq_indicator,
			ie_origin,
			si_import_status,
			ie_situacao,
			nm_usuario,
			dt_atualizacao,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			si_record_changed
		) values (
			nr_seq_goal_indic_p,
			nr_seq_goal_p,
			nr_sequencia_p,
			'E', -- From Elsevier
			'SP',
			'I',
			nm_usuario_p,
			clock_timestamp(),
			nm_usuario_p,
			clock_timestamp(),
			coalesce(si_record_changed_w, 'N')
		);
		
		update	cp_goal_indicator
		set		si_record_changed = 'N'
		where 	nr_seq_indicator = nr_sequencia_w;
		
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE cp_create_indicator ( nr_seq_goal_p cp_goal_indicator.nr_seq_goal%type, ds_unique_value_p cp_indicator.ds_unique_value%type, ds_display_name_p cp_indicator.ds_display_name%type, ds_version_p cp_indicator.ds_version%type, ie_data_type_p cp_indicator.ie_data_type%type, ie_language_p cp_indicator.ie_language%type, ie_active_p cp_indicator.ie_active%type, ie_progressive_p cp_indicator.ie_progressive%type, nm_usuario_p cp_indicator.nm_usuario%type, nr_sequencia_p INOUT cp_indicator.nr_sequencia%type, nr_seq_goal_indic_p INOUT cp_goal_indicator.nr_sequencia%type ) FROM PUBLIC;

