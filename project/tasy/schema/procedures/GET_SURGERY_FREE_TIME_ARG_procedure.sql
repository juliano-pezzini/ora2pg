-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE get_surgery_free_time_arg ( cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, dt_final_p timestamp, qt_minutos_p bigint, hr_inicial_p text, hr_final_p text, ds_restricao_p text, nm_usuario_p text, ie_grava_livre_p text, ds_horarios_p INOUT text, ie_gerar_retroativo_p text DEFAULT 'N', cd_departamento_medico_p bigint DEFAULT NULL, cd_departamento_medico_lista_p text DEFAULT NULL) AS $body$
DECLARE


    ie_feriado_w                    varchar(0001) := 'N';
    ie_dia_semana_w                 smallint;
    hr_inicial_w                    timestamp;
    hr_final_w                      timestamp;
    hr_inicial_intervalo_w          timestamp;
    hr_final_intervalo_w            timestamp;
    hr_atual_w                      timestamp;
    nr_minuto_intervalo_w           smallint;
    ie_existe_agenda_w              varchar(0001);
    ie_bloqueio_w                   varchar(0001);
    ie_bloqueio_hora_w              varchar(0001);
    ie_bloqueio_dia_w               varchar(0001);
    qt_horario_w                    smallint := 0;
    nr_sequencia_w                  bigint := 0;
    dt_agenda_w                     timestamp;
    ds_horarios_w                   varchar(0255);
    virgula_w                       varchar(1);
    qt_min_duracao_w                bigint := 0;
    hr_inicio_w                     timestamp;
    hr_fim_w                        timestamp;
    hr_inicial_par_w                timestamp;
    hr_final_par_w                  timestamp;
    cd_turno_w                      smallint := 0;
    nr_seq_esp_w                    bigint := 0;
    cd_medico_w                     varchar(10);
    nr_seq_agenda_medico_w          bigint;
    cd_medico_exec_w                varchar(10);
    qt_min_minimo_w                 bigint;
    qt_turno_w                      bigint;
    qt_intervalo_w                  bigint;
    hr_nada_w                       timestamp;
    ie_sobra_horario_w              varchar(01);
    ie_bloqueio_dia_hora_w          varchar(01);
    ds_observacao_horario_w         varchar(255);
    ie_gerar_obs_horario_w          varchar(01) := 'N';
    ie_autorizacao_w                varchar(05);
    ie_excluir_livres_w             varchar(01) := 'N';
    qt_agenda_w                     bigint;
    hr_quebra_turno_w               varchar(05);
    hr_quebra_turno_not_w           varchar(05);
    qt_min_quebra_turno_w           varchar(05);
    nr_seq_sala_w                   bigint;
    ie_anestesista_w                varchar(01) := 'N';
    ie_gerar_forcado_w              varchar(01) := 'N';
    ie_gerar_autorizacao_livres_w   varchar(01) := 'N';
    cd_anestesista_w                varchar(10);
    dt_forcado_w                    timestamp;
    nr_min_forcado_w                bigint;
    cd_agenda_forcado_w             bigint;
    ie_tipo_atendimento_w           smallint;
    ie_horario_adicional_w          varchar(1);
    nr_seq_classif_agenda_w         bigint;
    qt_horario_livre_gerado_w       bigint;
    ie_carater_cirurgia_w           varchar(1);
    cd_convenio_w                   integer;
    cd_categoria_w                  varchar(10);
    nr_seq_agenda_w                 agenda_paciente.nr_sequencia%TYPE;
    nm_paciente_w                   varchar(60);
    ie_status_agenda_w              varchar(1);
    ie_gerar_bloqueados_w           varchar(1);
    ie_deletar_bloqueados_w         varchar(1);
    ie_gerar_dia_anterior_w         varchar(1);
    ie_disp_medico_w                varchar(1);
    ie_gerar_observacao_w           varchar(1);
    ie_deletou_w                    boolean := false;
    qt_processo_w                   bigint;
    ie_tipo_atend_classif_w         varchar(15) := NULL;
    ie_reserva_completa_w           varchar(1);
    ie_exibe_motivo_bloqueio_w      varchar(1);
    ds_observacao_w                 varchar(255);
    cd_departamento_medico_w        integer := NULL;
    nr_seq_cycle_week_w             schedule_cycle_week.nr_sequencia%TYPE;
    ie_semana_w                     agenda_horario.ie_dia_semana%TYPE;
    dt_dia_semana_w                 agenda_horario.dt_dia_semana%TYPE;
    ds_retorno_w                    varchar(2);
    cd_departamento_medico_lista_w  varchar(2000);
    expressao1_w                    varchar(255);

    c01 CURSOR FOR
    SELECT
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(hr_inicial, 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(hr_final, 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(coalesce(hr_inicial_intervalo, hr_final), 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(coalesce(hr_final_intervalo, hr_final), 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        CASE WHEN coalesce(qt_minutos_p, 0)=0 THEN  nr_minuto_intervalo  ELSE qt_minutos_p END ,
        a.cd_medico,
        a.nr_seq_medico_exec,
        a.ds_observacao,
        a.nr_seq_sala,
        a.nr_seq_classif_agenda,
        cd_anestesista,
        ie_carater_cirurgia,
        cd_convenio,
        cd_categoria,
        ie_dia_semana,
        dt_dia_semana
    FROM
        agenda_horario a
    WHERE
            cd_agenda = coalesce(cd_agenda_p, cd_agenda)
        AND ( ( coalesce(nr_seq_cycle_week_w::text, '') = ''
                AND coalesce(a.nr_seq_schedule_cycle::text, '') = '' )
              OR ( a.nr_seq_schedule_cycle = nr_seq_cycle_week_w ) )
        AND ( ( dt_dia_semana = ie_dia_semana_w )
              OR ( ( dt_dia_semana = 9 )
                   AND ( ie_dia_semana_w NOT IN ( 7, 1 ) ) ) )
        AND ( ( nr_seq_esp_w = 0 )
              OR ( ie_horario_adicional_w = 'S' ) )
        AND ( ( coalesce(dt_final_vigencia::text, '') = '' )
              OR ( dt_final_vigencia >= to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                || to_char(hr_final, 'hh24:mi'),
                                                'dd/mm/yyyy hh24:mi') ) )
        AND ( ( coalesce(dt_inicio_vigencia::text, '') = '' )
              OR ( dt_inicio_vigencia <= to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                 || to_char(hr_inicial, 'hh24:mi'),
                                                 'dd/mm/yyyy hh24:mi') ) )
        AND hr_inicial < hr_final
        AND coalesce(nr_minuto_intervalo, 0) > 0
        AND ( ie_feriado_w <> 'S' )
        AND ( ( coalesce(cd_departamento_medico_w::text, '') = ''
                AND coalesce(cd_departamento_medico_lista_w::text, '') = ''
                OR a.qt_horas_ant_agenda > 0
                OR coalesce(a.cd_departamento_medico::text, '') = ''
                AND a.cd_agenda = cd_agenda_p )
              OR ( coalesce(cd_departamento_medico_lista_w::text, '') = ''
                   AND a.cd_departamento_medico = cd_departamento_medico_w )
              OR ( a.cd_departamento_medico IN (WITH RECURSIVE cte AS (

            SELECT
                (trim(both regexp_substr(cd_departamento_medico_lista_w, '[^,]+', 1, level)))::numeric
            
            instr(cd_departamento_medico_lista_w, ',', 1, level - 1) > 0
          UNION ALL

            SELECT
                (trim(both regexp_substr(cd_departamento_medico_lista_w, '[^,]+', 1, level)))::numeric 
            
            instr(cd_departamento_medico_lista_w, ',', 1, level - 1) > 0
         JOIN cte c ON ()

) SELECT * FROM cte;
) ) )
        AND ( obter_se_gerar_turno_semana(dt_inicio_vigencia, 'Q', dt_agenda_p) = 'S'
              OR coalesce(ie_dia_semana, 0) <> 9
              OR pkg_i18n.get_user_locale <> 'de_AT' )
    
UNION

    SELECT
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(hr_inicial, 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(hr_final, 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(coalesce(hr_inicial_intervalo, hr_final), 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                || ' '
                || to_char(coalesce(hr_final_intervalo, hr_final), 'hh24:mi'),
                'dd/mm/yyyy hh24:mi'),
        nr_minuto_intervalo,
        a.cd_medico,
        a.nr_seq_medico_exec,
        a.ds_observacao,
        a.nr_seq_sala,
        a.nr_seq_classif_agenda,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL,
        NULL
    FROM
        agenda_horario_esp a
    WHERE
            dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p)
        AND hr_inicial < hr_final
        AND coalesce(nr_minuto_intervalo, 0) > 0
        AND cd_agenda = cd_agenda_p
    ORDER BY
        1 DESC,
        2,
        5;

    c02 CURSOR FOR
    SELECT
        hr_inicio,
        ( hr_inicio + ( CASE WHEN ie_status_agenda='C' THEN  0  ELSE nr_minuto_duracao / 1440 END  ) ) dt_final
    FROM
        agenda_paciente
    WHERE
            cd_agenda = cd_agenda_p
        AND hr_inicio BETWEEN establishment_timezone_utils.startofday(dt_agenda_p) AND establishment_timezone_utils.endofday(dt_agenda_p)
        AND hr_inicio >= clock_timestamp()
        AND ie_sobra_horario_w = 'S'
    ORDER BY
        1;

    c04 CURSOR FOR
    SELECT
        a.nr_sequencia
    FROM
        autor_convenio_evento  b,
        agenda_paciente        a
    WHERE
            a.nr_sequencia = b.nr_seq_agenda
        AND a.cd_agenda = cd_agenda_p
        AND a.dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p)
        AND a.ie_status_agenda = 'L';


BEGIN
    IF (cd_departamento_medico_p IS NOT NULL AND cd_departamento_medico_p::text <> '') THEN
        cd_departamento_medico_w := cd_departamento_medico_p;
    END IF;

    IF (cd_departamento_medico_lista_p IS NOT NULL AND cd_departamento_medico_lista_p::text <> '') THEN
        cd_departamento_medico_lista_w := cd_departamento_medico_lista_p;
    END IF;
    SELECT
        COUNT(*)
    INTO STRICT qt_processo_w
    FROM
        processo_longo_v
    WHERE
        upper(nm_procedure) = 'OBTER_HORARIOS_LIVRES_CIRURGIA';

    IF ( qt_processo_w = 0 ) THEN
        BEGIN
            expressao1_w := obter_desc_expressao_idioma(774295, NULL, wheb_usuario_pck.get_nr_seq_idioma);--Geracao dos horarios livres da agenda;
            CALL gravar_processo_longo(expressao1_w, 'OBTER_HORARIOS_LIVRES_CIRURGIA', 1);
            SELECT
                coalesce(MAX(ie_gerar_sobra_horario), 'N'),
                coalesce(MAX(hr_quebra_turno), '12'),
                coalesce(MAX(qt_min_quebra_turno), '00'),
                MAX(ie_anestesista),
                coalesce(MAX(ie_tipo_atendimento), 0),
                MAX(hr_quebra_turno_not),
                coalesce(MAX(ie_reserva_completa), 'S')
            INTO STRICT
                ie_sobra_horario_w,
                hr_quebra_turno_w,
                qt_min_quebra_turno_w,
                ie_anestesista_w,
                ie_tipo_atendimento_w,
                hr_quebra_turno_not_w,
                ie_reserva_completa_w
            FROM
                agenda
            WHERE
                cd_agenda = cd_agenda_p;

            SELECT
                coalesce(MAX(nr_sequencia), 0),
                coalesce(MAX(ie_horario_adicional), 'N')
            INTO STRICT
                nr_seq_esp_w,
                ie_horario_adicional_w
            FROM
                agenda_horario_esp
            WHERE
                    cd_agenda = cd_agenda_p
                AND dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p);

            IF ( coalesce(hr_inicial_p::text, '') = '' ) THEN
                hr_inicial_par_w := establishment_timezone_utils.startofday(dt_agenda_p);
            ELSE
                hr_inicial_par_w := to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                            || ' '
                                            || hr_inicial_p,
                                           'dd/mm/yyyy hh24:mi');
            END IF;

            IF ( coalesce(hr_final_p::text, '') = '' ) THEN
                hr_final_par_w := establishment_timezone_utils.endofday(dt_agenda_p);
            ELSE
                hr_final_par_w := to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                          || ' '
                                          || hr_final_p,
                                         'dd/mm/yyyy hh24:mi');
            END IF;

            dt_agenda_w := establishment_timezone_utils.startofday(dt_agenda_p);
            BEGIN
                SELECT
                    'S'
                INTO STRICT ie_feriado_w
                FROM
                    feriado  a,
                    agenda   b
                WHERE
                        a.cd_estabelecimento = cd_estabelecimento_p
                    AND a.dt_feriado = dt_agenda_w
                    AND b.cd_agenda = cd_agenda_p
                    AND ie_feriado = 'N';

            EXCEPTION
                WHEN OTHERS THEN
                    ie_feriado_w := 'N';
            END;

            ie_exibe_motivo_bloqueio_w := obter_param_usuario(871, 119, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_exibe_motivo_bloqueio_w);
            ie_gerar_bloqueados_w := obter_param_usuario(871, 297, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_bloqueados_w);
            ie_deletar_bloqueados_w := obter_param_usuario(871, 369, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_deletar_bloqueados_w);
            ie_gerar_dia_anterior_w := obter_param_usuario(871, 423, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_dia_anterior_w);
            ie_gerar_obs_horario_w := obter_param_usuario(871, 625, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_gerar_obs_horario_w);
            ie_dia_semana_w := obter_cod_dia_semana(dt_agenda_w);
            IF ( philips_param_pck.get_nr_seq_idioma = 2 ) THEN -- Espanhol  - Mexico(MX)
                IF ( ie_dia_semana_w = 7 ) THEN
                    ie_dia_semana_w := 1;
                ELSE
                    ie_dia_semana_w := ie_dia_semana_w + 1;
                END IF;
            END IF;

            OPEN c04;
            LOOP
                FETCH c04 INTO nr_seq_agenda_w;
                EXIT WHEN NOT FOUND; /* apply on c04 */
                UPDATE autor_convenio_evento
                SET
                    nr_seq_agenda  = NULL,
                    nm_usuario = nm_usuario_p,
                    dt_atualizacao = clock_timestamp()
                WHERE
                    nr_seq_agenda = nr_seq_agenda_w;

                COMMIT;
            END LOOP;

            CLOSE c04;
            IF ( ie_excluir_livres_w = 'N' ) OR (hr_inicial_p IS NOT NULL AND hr_inicial_p::text <> '') THEN
                BEGIN
                    DELETE FROM agenda_paciente a
                    WHERE
                            a.cd_agenda = cd_agenda_p
                        AND a.dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p)
                        AND a.ie_status_agenda = 'L';

                    COMMIT;
                END;
            ELSE
                BEGIN
                    DELETE
			/*+ INDEX(A AGEPACI_UK) */ FROM agenda_paciente a
                    WHERE
                            cd_agenda = cd_agenda_p
                        AND dt_agenda >= clock_timestamp()
                        AND ie_status_agenda = 'L';

                    COMMIT;
                END;
            END IF;

            IF ( ie_deletar_bloqueados_w = 'S' )
                AND ( ie_gerar_bloqueados_w = 'S' )
            THEN
                DELETE
			/*+ INDEX(A AGEPACI_UK) */ FROM agenda_paciente a
                WHERE
                        cd_agenda = cd_agenda_p
                    AND hr_inicio >= clock_timestamp()
                    AND ie_status_agenda = 'B'
                    AND nm_paciente LIKE '%'
                                         || wheb_mensagem_pck.get_texto(300737)
                                         || '%';  --'Horario bloqueado';
                COMMIT;
                ie_deletou_w := true;
            END IF;

            nr_seq_cycle_week_w := get_current_schedule_week(cd_agenda_p, dt_agenda_p);
            OPEN c01;
            LOOP
                FETCH c01 INTO
                    hr_inicial_w,
                    hr_final_w,
                    hr_inicial_intervalo_w,
                    hr_final_intervalo_w,
                    nr_minuto_intervalo_w,
                    cd_medico_w,
                    nr_seq_agenda_medico_w,
                    ds_observacao_horario_w,
                    nr_seq_sala_w,
                    nr_seq_classif_agenda_w,
                    cd_anestesista_w,
                    ie_carater_cirurgia_w,
                    cd_convenio_w,
                    cd_categoria_w,
                    ie_semana_w,
                    dt_dia_semana_w;

                EXIT WHEN NOT FOUND; /* apply on c01 */
                BEGIN
                    ds_retorno_w := 'S';
                    IF (
                        (ie_semana_w IS NOT NULL AND ie_semana_w::text <> '')
                        AND ie_semana_w <> 9
                    ) THEN
                        ds_retorno_w := obter_se_contem_regra_semana(dt_agenda_p, dt_dia_semana_w, ie_semana_w);
                    END IF;

                    IF ( ds_retorno_w = 'S' ) THEN
                        IF ( nr_seq_classif_agenda_w = 0 ) THEN
                            nr_seq_classif_agenda_w := NULL;
                        END IF;
                        IF (nr_seq_classif_agenda_w IS NOT NULL AND nr_seq_classif_agenda_w::text <> '') THEN
                            SELECT
                                MAX(ie_tipo_atendimento)
                            INTO STRICT ie_tipo_atend_classif_w
                            FROM
                                agenda_paciente_classif
                            WHERE
                                nr_sequencia = nr_seq_classif_agenda_w;

                        END IF;

                        hr_atual_w := hr_inicial_w;
                        WHILE( hr_atual_w < hr_final_w )
                            AND ( hr_atual_w < hr_final_par_w )
                        LOOP
                            BEGIN
                                BEGIN
                                    SELECT
					/*+ INDEX(A AGEPACI_UK) */
                                        coalesce(MAX(nr_minuto_duracao), 0)
                                    INTO STRICT qt_min_duracao_w
                                    FROM
                                        agenda_paciente a
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND ie_status_agenda <> 'C'
                                        AND dt_agenda = establishment_timezone_utils.startofday(hr_atual_w)
                                        AND to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                                                    || ' '
                                                    || to_char(hr_inicio, 'hh24:mi'),
                                                    'dd/mm/yyyy hh24:mi') < ( hr_atual_w + ( nr_minuto_intervalo_w / 1440 ) )
                                        AND to_date(to_char(dt_agenda_w, 'dd/mm/yyyy')
                                                    || ' '
                                                    || to_char(hr_inicio +((nr_minuto_duracao - 1) / 1440), 'hh24:mi'),
                                                    'dd/mm/yyyy hh24:mi') > hr_atual_w;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        qt_min_duracao_w := 0;
                                END;

                                BEGIN
					/* bloqueio por periodo */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND coalesce(ie_dia_semana::text, '') = ''
                                        AND coalesce(hr_inicio_bloqueio::text, '') = ''
                                        AND coalesce(hr_final_bloqueio::text, '') = '';

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_w := 'N';
                                END;

                                BEGIN
					/* bloqueio por horario */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_hora_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND hr_atual_w BETWEEN to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                       || ' '
                                                                       || to_char(hr_inicio_bloqueio, 'hh24:mi:ss'),
                                                                       'dd/mm/yyyy hh24:mi:ss') AND to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                                                            || ' '
                                                                                                            || to_char(hr_final_bloqueio,
                                                                                                                       'hh24:mi:ss'),
                                                                                                            'dd/mm/yyyy hh24:mi:ss')
                                        AND coalesce(ie_dia_semana::text, '') = ''
                                        AND (hr_inicio_bloqueio IS NOT NULL AND hr_inicio_bloqueio::text <> '')
                                        AND (hr_final_bloqueio IS NOT NULL AND hr_final_bloqueio::text <> '')
                                        AND hr_inicio_bloqueio < hr_final_bloqueio;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_hora_w := 'N';
                                END;

                                BEGIN
					/* bloqueio por dia */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_dia_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND ( ( ie_dia_semana = ie_dia_semana_w )
                                              OR ( ie_dia_semana = 9 ) )
                                        AND (ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
                                        AND coalesce(hr_inicio_bloqueio::text, '') = ''
                                        AND coalesce(hr_final_bloqueio::text, '') = '';

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_dia_w := 'N';
                                END;

                                BEGIN
					/* bloqueio dia e hora */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_dia_hora_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND hr_atual_w BETWEEN to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                       || ' '
                                                                       || to_char(hr_inicio_bloqueio, 'hh24:mi:ss'),
                                                                       'dd/mm/yyyy hh24:mi:ss') AND to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                                                            || ' '
                                                                                                            || to_char(hr_final_bloqueio,
                                                                                                                       'hh24:mi:ss'),
                                                                                                            'dd/mm/yyyy hh24:mi:ss')
                                        AND (ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
                                        AND ( ( ie_dia_semana = ie_dia_semana_w )
                                              OR ( ie_dia_semana = 9 ) )
                                        AND (hr_inicio_bloqueio IS NOT NULL AND hr_inicio_bloqueio::text <> '')
                                        AND (hr_final_bloqueio IS NOT NULL AND hr_final_bloqueio::text <> '')
                                        AND hr_inicio_bloqueio < hr_final_bloqueio;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_dia_hora_w := 'N';
                                END;

                                IF ( qt_min_duracao_w = 0 )
                                    AND ( ( hr_atual_w >= clock_timestamp() ) OR ( ie_gerar_retroativo_p = 'S' ) )
                                    AND ( hr_atual_w >= hr_inicial_par_w )
                                    AND ( (
                                        ( ie_bloqueio_w = 'N' )
                                        AND ( ie_bloqueio_hora_w = 'N' )
                                        AND ( ie_bloqueio_dia_w = 'N' )
                                        AND ( ie_bloqueio_dia_hora_w = 'N' )
                                    ) OR ( ie_gerar_bloqueados_w = 'S' ) )
                                THEN
                                    BEGIN
                                        IF ( coalesce(length(ds_horarios_w), 0) < 249 ) THEN
                                            ds_horarios_w := ds_horarios_w
                                                             || virgula_w
                                                             || to_char(hr_atual_w, 'hh24:mi');
                                        END IF;

                                        virgula_w := ',';
                                        IF ( ie_grava_livre_p = 'S' ) THEN
                                            BEGIN
                                                cd_turno_w := 0;
                                                IF ( (to_char(hr_atual_w, 'hh24'))::numeric  > somente_numero(hr_quebra_turno_w) )
                                                OR (
                                                    ( (to_char(hr_atual_w, 'hh24'))::numeric  = somente_numero(hr_quebra_turno_w) )
                                                    AND ( (to_char(hr_atual_w, 'mi'))::numeric  >= somente_numero(qt_min_quebra_turno_w) )
                                                ) THEN
                                                    cd_turno_w := 1;
                                                END IF;

                                                IF (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '')
                                                    AND ( (to_char(hr_atual_w, 'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w) )
                                                THEN
                                                    cd_turno_w := 3;
                                                END IF;

                                                SELECT
                                                    nextval('agenda_paciente_seq')
                                                INTO STRICT nr_sequencia_w
;

                                                SELECT
                                                    MAX(cd_medico)
                                                INTO STRICT cd_medico_exec_w
                                                FROM
                                                    agenda_medico
                                                WHERE
                                                    nr_sequencia = nr_seq_agenda_medico_w;

                                                SELECT
                                                    COUNT(*) /*+ INDEX(A AGEPACI_UK) */                                                INTO STRICT qt_agenda_w
                                                FROM
                                                    agenda_paciente
                                                WHERE
                                                        cd_agenda = cd_agenda_p
                                                    AND dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p)
                                                    AND hr_inicio = hr_atual_w
                                                    AND ie_status_agenda IN ( 'L', 'N', 'R' );

                                                IF ( qt_agenda_w = 0 )
                                                    AND ( coalesce(ie_gerar_dia_anterior_w, 'S') = 'S' )
                                                THEN
                                                    SELECT
                                                        COUNT(*)	/*+ INDEX(A AGEPACI_UK) */                                                    INTO STRICT qt_agenda_w
                                                    FROM
                                                        agenda_paciente
                                                    WHERE
                                                            cd_agenda = cd_agenda_p
                                                        AND dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p - 1)
                                                        AND hr_atual_w BETWEEN hr_inicio AND hr_inicio + ( ( nr_minuto_duracao - 1 ) /
                                                        1440 )
                                                        AND ie_status_agenda NOT IN ( 'L', 'C', 'B' );

                                                END IF;

                                                IF ( qt_agenda_w = 0 ) THEN
                                                    SELECT
                                                        COUNT(*) /*+ INDEX(A AGEPACI_UK) */                                                    INTO STRICT qt_agenda_w
                                                    FROM
                                                        agenda_paciente
                                                    WHERE
                                                            cd_agenda = cd_agenda_p
                                                        AND dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p)
                                                        AND hr_atual_w BETWEEN hr_inicio AND hr_inicio + ( ( nr_minuto_duracao - 1 ) /
                                                        1440 )
                                                        AND ie_status_agenda NOT IN ( 'L', 'C', 'B' );

                                                END IF;

                                                nm_paciente_w := NULL;
                                                ie_status_agenda_w := 'L';
                                                IF ( ie_bloqueio_w = 'S' ) OR ( ie_bloqueio_hora_w = 'S' ) OR ( ie_bloqueio_dia_w =
                                                'S' ) OR ( ie_bloqueio_dia_hora_w = 'S' ) THEN
                                                    IF ( ie_exibe_motivo_bloqueio_w = 'S' ) THEN
                                                        nm_paciente_w := substr(wheb_mensagem_pck.get_texto(300737)
                                                                                || ': '
                                                                                || ds_observacao_w,
                                                                               1,
                                                                               60); /*'Horario bloqueado || nvl(observacao, descricao do motivo';*/
                                                    ELSE
                                                        nm_paciente_w := wheb_mensagem_pck.get_texto(300737); --'Horario bloqueado';
                                                    END IF;

                                                    ie_status_agenda_w := 'B';
                                                END IF;

                                                IF ( ie_status_agenda_w = 'B' )
                                                    AND ( NOT ie_deletou_w )
                                                THEN
                                                    DELETE 	/*+ INDEX(A AGEPACI_UK) */ FROM agenda_paciente a
                                                    WHERE
                                                            cd_agenda = cd_agenda_p
                                                        AND dt_agenda >= clock_timestamp()
                                                        AND hr_inicio >= clock_timestamp()
                                                        AND ie_status_agenda = 'B'
                                                        AND nm_paciente LIKE '%'
                                                                             || wheb_mensagem_pck.get_texto(300737)
                                                                             || '%';  --'Horario bloqueado';
                                                    COMMIT;
                                                    ie_deletou_w := true;
                                                END IF;

                                                IF ( qt_agenda_w = 0 ) THEN
                                                    BEGIN
                                                        ie_disp_medico_w := obter_se_medico_disp_agenda(hr_atual_w, nr_minuto_intervalo_w,
                                                                                                       cd_medico_w);
                                                        INSERT INTO agenda_paciente(
                                                            cd_agenda,
                                                            dt_agenda,
                                                            hr_inicio,
                                                            nr_minuto_duracao,
                                                            nm_usuario,
                                                            dt_atualizacao,
                                                            ie_status_agenda,
                                                            ie_ortese_protese,
                                                            ie_cdi,
                                                            ie_uti,
                                                            ie_banco_sangue,
                                                            ie_serv_especial,
                                                            ie_leito,
                                                            ie_anestesia,
                                                            nr_sequencia,
                                                            cd_turno,
                                                            ie_equipamento,
                                                            ie_autorizacao,
                                                            ie_video,
                                                            ie_uc,
                                                            cd_medico,
                                                            cd_medico_exec,
                                                            nm_paciente,
                                                            ie_biopsia,
                                                            ie_congelacao,
                                                            nr_seq_sala,
                                                            ie_consulta_anestesica,
                                                            ie_pre_internacao,
                                                            ie_tipo_atendimento,
                                                            ie_arco_c,
                                                            nr_seq_classif_agenda,
                                                            cd_anestesista,
                                                            ie_carater_cirurgia,
                                                            cd_convenio,
                                                            cd_categoria,
                                                            cd_medico_regra,
                                                            ie_reserva_completa
                                                        ) VALUES (
                                                            cd_agenda_p,
                                                            establishment_timezone_utils.startofday(dt_agenda_p),
                                                            hr_atual_w,
                                                            nr_minuto_intervalo_w,
                                                            nm_usuario_p,
                                                            clock_timestamp(),
                                                            ie_status_agenda_w,
                                                            'N',
                                                            'N',
                                                            'N',
                                                            'N',
                                                            'N',
                                                            'S',
                                                            ie_anestesista_w,
                                                            nr_sequencia_w,
                                                            cd_turno_w,
                                                            'N',
                                                            NULL,
                                                            'N',
                                                            'N',
                                                            CASE WHEN ie_disp_medico_w='N' THEN  NULL  ELSE cd_medico_w END ,
                                                            cd_medico_exec_w,
                                                            substr(coalesce(nm_paciente_w, CASE WHEN ie_gerar_obs_horario_w='S' THEN  substr(                                                            ds_observacao_horario_w, 1, 60)  ELSE NULL END ),
                                                                   1,
                                                                   60),
                                                            'N',
                                                            'N',
                                                            nr_seq_sala_w,
                                                            'N',
                                                            'N',
                                                            coalesce(ie_tipo_atend_classif_w, CASE WHEN ie_tipo_atendimento_w=0 THEN  NULL  ELSE ie_tipo_atendimento_w END ),
                                                            'N',
                                                            nr_seq_classif_agenda_w,
                                                            cd_anestesista_w,
                                                            ie_carater_cirurgia_w,
                                                            cd_convenio_w,
                                                            cd_categoria_w,
                                                            cd_medico_w,
                                                            CASE WHEN ie_reserva_completa_w='U' THEN  NULL  ELSE ie_reserva_completa_w END
                                                        );

                                                    END;
                                                END IF;

                                            END;
                                        END IF;

                                    END;
                                END IF;

                                hr_atual_w := hr_atual_w + ( nr_minuto_intervalo_w / 1440 );
                                qt_horario_w := qt_horario_w + 1;
                                IF ( hr_atual_w >= hr_inicial_intervalo_w )
                                    AND ( hr_atual_w < hr_final_intervalo_w )
                                THEN
                                    hr_atual_w := hr_final_intervalo_w;
                                END IF;

                                IF ( qt_horario_w > 401 ) THEN
                                    hr_atual_w := hr_final_w + 1;
                                END IF;
                            END;
                        END LOOP;

                    END IF;

                END;

            END LOOP;

            CLOSE c01;
            hr_nada_w := establishment_timezone_utils.startofyear(dt_agenda_p);
            hr_fim_w := hr_nada_w;
            qt_min_minimo_w := 0;
            OPEN c02;
            LOOP
                FETCH c02 INTO
                    hr_inicial_w,
                    hr_final_w;
                EXIT WHEN NOT FOUND; /* apply on c02 */
                IF ( hr_fim_w <> hr_nada_w )
                    AND ( hr_inicial_w > hr_fim_w )
                THEN
                    BEGIN
                        nr_minuto_intervalo_w := ( hr_inicial_w - hr_fim_w ) * 1440;
                        hr_atual_w := hr_fim_w;
                        IF ( nr_minuto_intervalo_w >= qt_min_minimo_w ) THEN
                            BEGIN
                                SELECT
                                    COUNT(*)
                                INTO STRICT qt_turno_w
                                FROM
                                    agenda_horario
                                WHERE
                                        cd_agenda = cd_agenda_p
                                    AND dt_dia_semana = ie_dia_semana_w
                                    AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                   || ' '
                                                                   || to_char(hr_inicial, 'hh24:mi'),
                                                                   'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                                                     || ' '
                                                                                                     || to_char(hr_final - 1 / 1440,
                                                                                                                'hh24:mi'),
                                                                                                     'dd/mm/yyyy hh24:mi');

                                IF ( qt_turno_w > 0 ) THEN
                                    SELECT
                                        MAX(cd_medico),
                                        MAX(cd_anestesista)
                                    INTO STRICT
                                        cd_medico_w,
                                        cd_anestesista_w
                                    FROM
                                        agenda_horario
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND dt_dia_semana = ie_dia_semana_w
                                        AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                       || ' '
                                                                       || to_char(hr_inicial, 'hh24:mi'),
                                                                       'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                                                         || ' '
                                                                                                         || to_char(hr_final - 1 /
                                                                                                         1440,
                                                                                                                    'hh24:mi'),
                                                                                                         'dd/mm/yyyy hh24:mi');

                                END IF;

                                SELECT
                                    COUNT(*)
                                INTO STRICT qt_intervalo_w
                                FROM
                                    agenda_horario
                                WHERE
                                        cd_agenda = cd_agenda_p
                                    AND dt_dia_semana = ie_dia_semana_w
                                    AND to_char(hr_inicial_intervalo, 'hh24') <> '00'
                                    AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                   || ' '
                                                                   || to_char(hr_inicial_intervalo, 'hh24:mi'),
                                                                   'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                                                     || ' '
                                                                                                     || to_char(hr_final_intervalo -
                                                                                                     1 / 1440,
                                                                                                                'hh24:mi'),
                                                                                                     'dd/mm/yyyy hh24:mi');

                                IF ( qt_turno_w = 0 ) THEN
                                    BEGIN
                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_turno_w
                                        FROM
                                            agenda_horario
                                        WHERE
                                                cd_agenda = cd_agenda_p
                                            AND dt_dia_semana = 9
                                            AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                           || ' '
                                                                           || to_char(hr_inicial, 'hh24:mi'),
                                                                           'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p,
                                                                           'dd/mm/yyyy')
                                                                                                             || ' '
                                                                                                             || to_char(hr_final -
                                                                                                             1 / 1440,
                                                                                                                        'hh24:mi'),
                                                                                                             'dd/mm/yyyy hh24:mi');

                                        IF ( qt_turno_w > 0 ) THEN
                                            SELECT
                                                MAX(cd_medico),
                                                MAX(cd_anestesista)
                                            INTO STRICT
                                                cd_medico_w,
                                                cd_anestesista_w
                                            FROM
                                                agenda_horario
                                            WHERE
                                                    cd_agenda = cd_agenda_p
                                                AND dt_dia_semana = 9
                                                AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                               || ' '
                                                                               || to_char(hr_inicial, 'hh24:mi'),
                                                                               'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p,
                                                                               'dd/mm/yyyy')
                                                                                                                 || ' '
                                                                                                                 || to_char(hr_final -
                                                                                                                 1 / 1440,
                                                                                                                            'hh24:mi'),
                                                                                                                 'dd/mm/yyyy hh24:mi');

                                        END IF;

                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_intervalo_w
                                        FROM
                                            agenda_horario
                                        WHERE
                                                cd_agenda = cd_agenda_p
                                            AND dt_dia_semana = 9
                                            AND to_char(hr_inicial_intervalo, 'hh24') <> '00'
                                            AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                           || ' '
                                                                           || to_char(hr_inicial_intervalo, 'hh24:mi'),
                                                                           'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p,
                                                                           'dd/mm/yyyy')
                                                                                                             || ' '
                                                                                                             || to_char(hr_final_intervalo -
                                                                                                             1 / 1440,
                                                                                                                        'hh24:mi'),
                                                                                                             'dd/mm/yyyy hh24:mi');

                                    END;
                                END IF;

                                BEGIN
					/* bloqueio por dia */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_dia_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND ( ( ie_dia_semana = ie_dia_semana_w )
                                              OR ( ie_dia_semana = 9 ) )
                                        AND (ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
                                        AND coalesce(hr_inicio_bloqueio::text, '') = ''
                                        AND coalesce(hr_final_bloqueio::text, '') = '';

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_dia_w := 'N';
                                END;

                                BEGIN
					/* bloqueio dia e hora */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_dia_hora_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND hr_atual_w BETWEEN to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                       || ' '
                                                                       || to_char(hr_inicio_bloqueio, 'hh24:mi:ss'),
                                                                       'dd/mm/yyyy hh24:mi:ss') AND to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                                                            || ' '
                                                                                                            || to_char(hr_final_bloqueio,
                                                                                                                       'hh24:mi:ss'),
                                                                                                            'dd/mm/yyyy hh24:mi:ss')
                                        AND (ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
                                        AND ( ( ie_dia_semana = ie_dia_semana_w )
                                              OR ( ie_dia_semana = 9 ) )
                                        AND (hr_inicio_bloqueio IS NOT NULL AND hr_inicio_bloqueio::text <> '')
                                        AND (hr_final_bloqueio IS NOT NULL AND hr_final_bloqueio::text <> '')
                                        AND hr_inicio_bloqueio < hr_final_bloqueio;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_dia_hora_w := 'N';
                                END;

                                IF
                                    ( ( ie_bloqueio_dia_w = 'N'  AND  ie_bloqueio_dia_hora_w = 'N' ) OR ( ie_gerar_bloqueados_w = 'S' ) )
                                    AND ( qt_turno_w > 0 )
                                    AND ( qt_intervalo_w = 0 )
                                THEN
                                    BEGIN
                                        cd_turno_w := 0;
                                        IF ( (to_char(hr_atual_w, 'hh24'))::numeric  > somente_numero(hr_quebra_turno_w) ) OR (
                                            ( (to_char(hr_atual_w, 'hh24'))::numeric  = somente_numero(hr_quebra_turno_w) )
                                            AND ( (to_char(hr_atual_w, 'mi'))::numeric  >= somente_numero(qt_min_quebra_turno_w) )
                                        ) THEN
                                            cd_turno_w := 1;
                                        END IF;

                                        IF (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '')
                                            AND ( (to_char(hr_atual_w, 'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w) )
                                        THEN
                                            cd_turno_w := 3;
                                        END IF;

                                        SELECT
                                            nextval('agenda_paciente_seq')
                                        INTO STRICT nr_sequencia_w
;

                                        SELECT
                                            COUNT(*) /*+ INDEX(A AGEPACI_UK) */                                        INTO STRICT qt_horario_livre_gerado_w
                                        FROM
                                            agenda_paciente
                                        WHERE
                                                cd_agenda = cd_agenda_p
                                            AND hr_inicio = hr_atual_w
                                            AND ie_status_agenda = 'L'
                                            AND dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p);

                                        nm_paciente_w := NULL;
                                        ie_status_agenda_w := 'L';
                                        IF ( ie_bloqueio_dia_w = 'S' ) OR ( ie_bloqueio_dia_hora_w = 'S' ) THEN
                                            IF ( ie_exibe_motivo_bloqueio_w = 'S' ) THEN
                                                nm_paciente_w := substr(wheb_mensagem_pck.get_texto(300737)
                                                                        || ': '
                                                                        || ds_observacao_w,
                                                                       1,
                                                                       60); /*'Horario bloqueado || descricao do motivo';*/
                                            ELSE
                                                nm_paciente_w := wheb_mensagem_pck.get_texto(300737); --'Horario bloqueado';
                                            END IF;

                                            ie_status_agenda_w := 'B';
                                        END IF;

                                        IF ( qt_horario_livre_gerado_w = 0 ) THEN
                                            IF ( ie_status_agenda_w = 'B' )
                                                AND ( NOT ie_deletou_w )
                                            THEN
                                                DELETE	/*+ INDEX(A AGEPACI_UK) */ FROM agenda_paciente a
                                                WHERE
                                                        cd_agenda = cd_agenda_p
                                                    AND hr_inicio >= clock_timestamp()
                                                    AND ie_status_agenda = 'B'
                                                    AND nm_paciente LIKE '%'
                                                                         || wheb_mensagem_pck.get_texto(300737)
                                                                         || '%'; --'Horario bloqueado';
                                                COMMIT;
                                                ie_deletou_w := true;
                                            END IF;

                                            INSERT INTO agenda_paciente(
                                                cd_agenda,
                                                dt_agenda,
                                                hr_inicio,
                                                nr_minuto_duracao,
                                                nm_usuario,
                                                dt_atualizacao,
                                                ie_status_agenda,
                                                ie_ortese_protese,
                                                ie_cdi,
                                                ie_uti,
                                                ie_banco_sangue,
                                                ie_serv_especial,
                                                ie_leito,
                                                ie_anestesia,
                                                nr_sequencia,
                                                cd_turno,
                                                ie_equipamento,
                                                ie_autorizacao,
                                                ie_video,
                                                ie_uc,
                                                cd_medico,
                                                cd_medico_exec,
                                                nm_paciente,
                                                ie_biopsia,
                                                ie_congelacao,
                                                ie_consulta_anestesica,
                                                ie_pre_internacao,
                                                ie_tipo_atendimento,
                                                ie_arco_c,
                                                nr_seq_classif_agenda,
                                                cd_anestesista,
                                                ie_carater_cirurgia,
                                                ie_reserva_completa
                                            ) VALUES (
                                                cd_agenda_p,
                                                establishment_timezone_utils.startofday(dt_agenda_p),
                                                hr_atual_w,
                                                nr_minuto_intervalo_w,
                                                nm_usuario_p,
                                                clock_timestamp(),
                                                ie_status_agenda_w,
                                                'N',
                                                'N',
                                                'N',
                                                'N',
                                                'N',
                                                'S',
                                                ie_anestesista_w,
                                                nr_sequencia_w,
                                                cd_turno_w,
                                                'N',
                                                NULL,
                                                'N',
                                                'N',
                                                cd_medico_w,
                                                cd_medico_exec_w,
                                                coalesce(nm_paciente_w, CASE WHEN ie_gerar_obs_horario_w='S' THEN  substr(ds_observacao_horario_w,                                                1, 60)  ELSE NULL END ),
                                                'N',
                                                'N',
                                                'N',
                                                'N',
                                                coalesce(ie_tipo_atend_classif_w, CASE WHEN ie_tipo_atendimento_w=0 THEN  NULL  ELSE ie_tipo_atendimento_w END ),
                                                'N',
                                                nr_seq_classif_agenda_w,
                                                cd_anestesista_w,
                                                ie_carater_cirurgia_w,
                                                CASE WHEN ie_reserva_completa_w='U' THEN  NULL  ELSE ie_reserva_completa_w END
                                            );

                                        END IF;

                                    END;
                                END IF;

                            END;
                        END IF;

                    END;
                END IF;

                IF ( hr_final_w > hr_fim_w ) THEN
                    hr_fim_w := hr_final_w;
                END IF;
            END LOOP;

            CLOSE c02;
            OPEN c02;
            LOOP
                FETCH c02 INTO
                    hr_inicial_w,
                    hr_final_w;
                EXIT WHEN NOT FOUND; /* apply on c02 */
                IF ( hr_inicial_w > hr_final_w ) THEN
                    BEGIN
                        nr_minuto_intervalo_w := ( hr_inicial_w - hr_final_w ) * 1440;
                        hr_atual_w := hr_inicial_w;
                        IF ( nr_minuto_intervalo_w >= qt_min_minimo_w ) THEN
                            BEGIN
                                SELECT
                                    COUNT(*)
                                INTO STRICT qt_turno_w
                                FROM
                                    agenda_horario
                                WHERE
                                        cd_agenda = cd_agenda_p
                                    AND dt_dia_semana = ie_dia_semana_w
                                    AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                   || ' '
                                                                   || to_char(hr_inicial, 'hh24:mi'),
                                                                   'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                                                     || ' '
                                                                                                     || to_char(hr_final - 1 / 1440,
                                                                                                                'hh24:mi'),
                                                                                                     'dd/mm/yyyy hh24:mi');

                                IF ( qt_turno_w > 0 ) THEN
                                    SELECT
                                        MAX(cd_medico),
                                        MAX(cd_anestesista)
                                    INTO STRICT
                                        cd_medico_w,
                                        cd_anestesista_w
                                    FROM
                                        agenda_horario
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND dt_dia_semana = ie_dia_semana_w
                                        AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                       || ' '
                                                                       || to_char(hr_inicial, 'hh24:mi'),
                                                                       'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                                                         || ' '
                                                                                                         || to_char(hr_final - 1 /
                                                                                                         1440,
                                                                                                                    'hh24:mi'),
                                                                                                         'dd/mm/yyyy hh24:mi');

                                END IF;

                                SELECT
                                    COUNT(*)
                                INTO STRICT qt_intervalo_w
                                FROM
                                    agenda_horario
                                WHERE
                                        cd_agenda = cd_agenda_p
                                    AND dt_dia_semana = ie_dia_semana_w
                                    AND to_char(hr_inicial_intervalo, 'hh24') <> '00'
                                    AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                   || ' '
                                                                   || to_char(hr_inicial_intervalo, 'hh24:mi'),
                                                                   'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                                                     || ' '
                                                                                                     || to_char(hr_final_intervalo -
                                                                                                     1 / 1440,
                                                                                                                'hh24:mi'),
                                                                                                     'dd/mm/yyyy hh24:mi');

                                IF ( qt_turno_w = 0 ) THEN
                                    BEGIN
                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_turno_w
                                        FROM
                                            agenda_horario
                                        WHERE
                                                cd_agenda = cd_agenda_p
                                            AND dt_dia_semana = 9
                                            AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                           || ' '
                                                                           || to_char(hr_inicial, 'hh24:mi'),
                                                                           'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p,
                                                                           'dd/mm/yyyy')
                                                                                                             || ' '
                                                                                                             || to_char(hr_final -
                                                                                                             1 / 1440,
                                                                                                                        'hh24:mi'),
                                                                                                             'dd/mm/yyyy hh24:mi');

                                        IF ( qt_turno_w > 0 ) THEN
                                            SELECT
                                                MAX(cd_medico),
                                                MAX(cd_anestesista)
                                            INTO STRICT
                                                cd_medico_w,
                                                cd_anestesista_w
                                            FROM
                                                agenda_horario
                                            WHERE
                                                    cd_agenda = cd_agenda_p
                                                AND dt_dia_semana = 9
                                                AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                               || ' '
                                                                               || to_char(hr_inicial, 'hh24:mi'),
                                                                               'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p,
                                                                               'dd/mm/yyyy')
                                                                                                                 || ' '
                                                                                                                 || to_char(hr_final -
                                                                                                                 1 / 1440,
                                                                                                                            'hh24:mi'),
                                                                                                                 'dd/mm/yyyy hh24:mi');

                                        END IF;

                                        SELECT
                                            COUNT(*)
                                        INTO STRICT qt_intervalo_w
                                        FROM
                                            agenda_horario
                                        WHERE
                                                cd_agenda = cd_agenda_p
                                            AND dt_dia_semana = 9
                                            AND to_char(hr_inicial_intervalo, 'hh24') <> '00'
                                            AND hr_atual_w BETWEEN to_date(to_char(dt_agenda_p, 'dd/mm/yyyy')
                                                                           || ' '
                                                                           || to_char(hr_inicial_intervalo, 'hh24:mi'),
                                                                           'dd/mm/yyyy hh24:mi') AND to_date(to_char(dt_agenda_p,
                                                                           'dd/mm/yyyy')
                                                                                                             || ' '
                                                                                                             || to_char(hr_final_intervalo -
                                                                                                             1 / 1440,
                                                                                                                        'hh24:mi'),
                                                                                                             'dd/mm/yyyy hh24:mi');

                                    END;
                                END IF;

                                BEGIN
					/* bloqueio por dia */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_dia_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND ( ( ie_dia_semana = ie_dia_semana_w )
                                              OR ( ie_dia_semana = 9 ) )
                                        AND (ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
                                        AND coalesce(hr_inicio_bloqueio::text, '') = ''
                                        AND coalesce(hr_final_bloqueio::text, '') = '';

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_dia_w := 'N';
                                END;

                                BEGIN
					/* bloqueio dia e hora */

                                    SELECT
                                        'S',
                                        substr(coalesce(ds_observacao, obter_valor_dominio(1007, ie_motivo_bloqueio)), 1, 200) ds_observacao_w
                                    INTO STRICT
                                        ie_bloqueio_dia_hora_w,
                                        ds_observacao_w
                                    FROM
                                        agenda_bloqueio
                                    WHERE
                                            cd_agenda = cd_agenda_p
                                        AND establishment_timezone_utils.startofday(hr_atual_w) BETWEEN establishment_timezone_utils.
                                        startofday(dt_inicial) AND establishment_timezone_utils.endofday(coalesce(dt_final, clock_timestamp()))
                                        AND hr_atual_w BETWEEN to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                       || ' '
                                                                       || to_char(hr_inicio_bloqueio, 'hh24:mi:ss'),
                                                                       'dd/mm/yyyy hh24:mi:ss') AND to_date(to_char(hr_atual_w, 'dd/mm/yyyy')
                                                                                                            || ' '
                                                                                                            || to_char(hr_final_bloqueio,
                                                                                                                       'hh24:mi:ss'),
                                                                                                            'dd/mm/yyyy hh24:mi:ss')
                                        AND (ie_dia_semana IS NOT NULL AND ie_dia_semana::text <> '')
                                        AND ( ( ie_dia_semana = ie_dia_semana_w )
                                              OR ( ie_dia_semana = 9 ) )
                                        AND (hr_inicio_bloqueio IS NOT NULL AND hr_inicio_bloqueio::text <> '')
                                        AND (hr_final_bloqueio IS NOT NULL AND hr_final_bloqueio::text <> '')
                                        AND hr_inicio_bloqueio < hr_final_bloqueio;

                                EXCEPTION
                                    WHEN OTHERS THEN
                                        ie_bloqueio_dia_hora_w := 'N';
                                END;

                                IF ( ie_bloqueio_dia_w = 'N' )
                                    AND ( ie_bloqueio_dia_hora_w = 'N' )
                                    AND ( qt_turno_w > 0 )
                                    AND ( qt_intervalo_w = 0 )
                                THEN
                                    BEGIN
                                        cd_turno_w := 0;
                                        IF ( (to_char(hr_atual_w, 'hh24'))::numeric  > somente_numero(hr_quebra_turno_w) ) OR (
                                            ( (to_char(hr_atual_w, 'hh24'))::numeric  = somente_numero(hr_quebra_turno_w) )
                                            AND ( (to_char(hr_atual_w, 'mi'))::numeric  >= somente_numero(qt_min_quebra_turno_w) )
                                        ) THEN
                                            cd_turno_w := 1;
                                        END IF;

                                        IF (hr_quebra_turno_not_w IS NOT NULL AND hr_quebra_turno_not_w::text <> '')
                                            AND ( (to_char(hr_atual_w, 'hh24'))::numeric  >= somente_numero(hr_quebra_turno_not_w) )
                                        THEN
                                            cd_turno_w := 3;
                                        END IF;

                                        SELECT
                                            COUNT(*) /*+ INDEX(A AGEPACI_UK) */                                        INTO STRICT qt_horario_livre_gerado_w
                                        FROM
                                            agenda_paciente
                                        WHERE
                                                cd_agenda = cd_agenda_p
                                            AND hr_inicio = hr_atual_w
                                            AND ie_status_agenda = 'L'
                                            AND dt_agenda = establishment_timezone_utils.startofday(dt_agenda_p);

                                        IF ( qt_horario_livre_gerado_w = 0 ) THEN
                                            SELECT
                                                nextval('agenda_paciente_seq')
                                            INTO STRICT nr_sequencia_w
;

                                            INSERT INTO agenda_paciente(
                                                cd_agenda,
                                                dt_agenda,
                                                hr_inicio,
                                                nr_minuto_duracao,
                                                nm_usuario,
                                                dt_atualizacao,
                                                ie_status_agenda,
                                                ie_ortese_protese,
                                                ie_cdi,
                                                ie_uti,
                                                ie_banco_sangue,
                                                ie_serv_especial,
                                                ie_leito,
                                                ie_anestesia,
                                                nr_sequencia,
                                                cd_turno,
                                                ie_equipamento,
                                                ie_autorizacao,
                                                ie_video,
                                                ie_uc,
                                                cd_medico,
                                                cd_medico_exec,
                                                nm_paciente,
                                                ie_biopsia,
                                                ie_congelacao,
                                                ie_consulta_anestesica,
                                                ie_pre_internacao,
                                                ie_tipo_atendimento,
                                                ie_arco_c,
                                                nr_seq_classif_agenda,
                                                cd_anestesista,
                                                ie_carater_cirurgia,
                                                ie_reserva_completa
                                            ) VALUES (
                                                cd_agenda_p,
                                                establishment_timezone_utils.startofday(dt_agenda_p),
                                                hr_atual_w,
                                                nr_minuto_intervalo_w,
                                                nm_usuario_p,
                                                clock_timestamp(),
                                                'L',
                                                'N',
                                                'N',
                                                'N',
                                                'N',
                                                'N',
                                                'S',
                                                ie_anestesista_w,
                                                nr_sequencia_w,
                                                cd_turno_w,
                                                'N',
                                                NULL,
                                                'N',
                                                'N',
                                                cd_medico_w,
                                                cd_medico_exec_w,
                                                CASE WHEN ie_gerar_obs_horario_w='S' THEN  substr(ds_observacao_horario_w, 1, 60)  ELSE NULL END ,
                                                'N',
                                                'N',
                                                'N',
                                                'N',
                                                coalesce(ie_tipo_atend_classif_w, CASE WHEN ie_tipo_atendimento_w=0 THEN  NULL  ELSE ie_tipo_atendimento_w END ),
                                                'N',
                                                nr_seq_classif_agenda_w,
                                                cd_anestesista_w,
                                                ie_carater_cirurgia_w,
                                                CASE WHEN ie_reserva_completa_w='U' THEN  NULL  ELSE ie_reserva_completa_w END
                                            );

                                        END IF;

                                    END;
                                END IF;

                            END;
                        END IF;

                    END;
                END IF;

                IF ( hr_final_w >= hr_fim_w ) THEN
                    hr_fim_w := hr_final_w;
                END IF;
            END LOOP;

            CLOSE c02;
            DELETE	/*+ INDEX(A AGEPACI_UK) */ FROM agenda_paciente
            WHERE
                    cd_agenda = cd_agenda_p
                AND dt_agenda BETWEEN establishment_timezone_utils.startofday(dt_agenda_p) AND establishment_timezone_utils.endofday(
                dt_agenda_p)
                AND nr_minuto_duracao = 0
                AND ie_status_agenda = 'L';

            COMMIT;
            CALL gravar_processo_longo('', '', '');
        EXCEPTION
            WHEN OTHERS THEN
                CALL gravar_processo_longo('', '', '');
                CALL wheb_mensagem_pck.exibir_mensagem_abort(184695, 'ERRO=' || sqlerrm);
        END;
    END IF;

    ds_horarios_p := ds_horarios_w;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE get_surgery_free_time_arg ( cd_estabelecimento_p bigint, cd_agenda_p bigint, dt_agenda_p timestamp, dt_final_p timestamp, qt_minutos_p bigint, hr_inicial_p text, hr_final_p text, ds_restricao_p text, nm_usuario_p text, ie_grava_livre_p text, ds_horarios_p INOUT text, ie_gerar_retroativo_p text DEFAULT 'N', cd_departamento_medico_p bigint DEFAULT NULL, cd_departamento_medico_lista_p text DEFAULT NULL) FROM PUBLIC;

