-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_nom_rc_dest_documento ( nr_seq_cabecalho_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* Datos del destinatario del documento */

cd_medico_resp_w			medico.cd_pessoa_fisica%type;

nr_crm_w					medico.nr_crm%type;
nm_primeiro_nome_resp_w		person_name.ds_given_name%type;
nm_sobrenome_pai_resp_w		person_name.ds_family_name%type;
nm_sobrenome_mae_resp_w		person_name.ds_component_name_1%type;
nr_telefone_w				compl_pessoa_fisica.nr_telefone%type;
ds_email_w					compl_pessoa_fisica.ds_email%type;

nr_atendimento_w			atendimento_paciente.nr_atendimento%type;
nr_seq_episodio_w			episodio_paciente.nr_sequencia%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;

cd_cgc_estab_saude_destino_w					pessoa_juridica.cd_cgc%type;
cd_clues_w					pessoa_juridica.cd_internacional%type;
ds_razao_social_w			pessoa_juridica.ds_razao_social%type;

nr_seq_pessoa_endereco_w	pessoa_endereco.nr_sequencia%type;	
ds_endereco_completo_w		varchar(2000);	
cd_tipo_vialidade_w			varchar(255);
ds_rua_vialidade_w			varchar(255);
nr_numero_externo_w			varchar(255);
nr_numero_ext_alfa_w		varchar(255);
nr_numero_interno_w			varchar(255);
nr_numero_int_alfa_w		varchar(255);
cd_tipo_asentamento_w		varchar(255);
nm_assentamento_w		    varchar(255);
cd_localidade_w				varchar(255);
cd_municipio_w				varchar(255);
cd_entidade_w				varchar(255);
cd_postal_w					varchar(255);
cd_pais_w					varchar(255);

ds_oid_w				    varchar(255)	:= null;
nm_oid_w				    varchar(255);
ds_tipo_w				    varchar(255);

qt_reg_w		            bigint;
nr_seq_catalogo_w		    end_catalogo.nr_sequencia%type;


BEGIN
delete from nom_rc_pessoa_juridica
where nr_seq_cabecalho = nr_seq_cabecalho_p
and	ie_tipo = 'DES';

select	a.nr_atendimento,
		a.nr_seq_episodio,
		a.cd_estabelecimento,
		a.cd_cgc_estab_saude_destino
into STRICT	nr_atendimento_w,
		nr_seq_episodio_w,
		cd_estabelecimento_w,
		cd_cgc_estab_saude_destino_w
from	nom_rc_cabecalho a
where	a.nr_sequencia	= nr_seq_cabecalho_p;


if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') then
	null;
elsif (nr_seq_episodio_w IS NOT NULL AND nr_seq_episodio_w::text <> '') then
	select	min(nr_atendimento)
	into STRICT	nr_atendimento_w
	from	atendimento_paciente a
	where	a.nr_seq_episodio = nr_seq_episodio_w;
end if;

if (nr_atendimento_w IS NOT NULL AND nr_atendimento_w::text <> '') and (cd_cgc_estab_saude_destino_w IS NOT NULL AND cd_cgc_estab_saude_destino_w::text <> '') then
	/*Legal Entity*/

	select	a.cd_internacional cd_clues, /*id_112 */
			a.ds_razao_social ds_razao_social /*id_113*/
	into STRICT	cd_clues_w,
			ds_razao_social_w
	from	pessoa_juridica a
	where 	a.cd_cgc = cd_cgc_estab_saude_destino_w;

	SELECT * FROM obter_oid_nom(cd_estabelecimento_w, cd_cgc_estab_saude_destino_w, 'SO', ds_oid_w, nm_oid_w) INTO STRICT ds_oid_w, nm_oid_w;

	if (coalesce(ds_oid_w::text, '') = '') then
		ds_tipo_w	:= obter_valor_dominio(8657,'SO');
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1062931,'DS_TIPO=' || ds_tipo_w);
	end if;

	/* Address */

	select	nr_seq_pessoa_endereco,	
			get_complete_address_desc(a.nr_seq_pessoa_endereco,null,null,null,null,'Y') ds_endereco_completo,  /*id_94*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_LOGRAD','C') cd_tipo_vialidade,  /*id_95*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'RUA_VIALIDADE','D') ds_rua_vialidade,  /*id_96*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO','D') nr_numero_externo,  /*id_97*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUM_EXT_ALFA','D') nr_numero_ext_alfa,
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'NUMERO_INT','D') nr_numero_interno,
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'COMPLEMENTO','D') nr_numero_int_alfa,  /*id_100*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'TIPO_BAIRRO','C') cd_tipo_asentamento,  /*id_101*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'BAIRRO_VILA','CD') nm_assentamento,  /*id_102*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'LOCALIDADE_AREA','C') cd_localidade, /*id_103*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'MUNICIPIO','C') cd_municipio, /*id_104*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'ESTADO_PROVINCI','C') cd_entidade, /*id_105*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'CODIGO_POSTAL','D') cd_postal, /*id_106*/
			get_info_end_endereco(a.nr_seq_pessoa_endereco,'PAIS','C') cd_pais /*id_107*/
	into STRICT	nr_seq_pessoa_endereco_w,	
			ds_endereco_completo_w,
			cd_tipo_vialidade_w,
			ds_rua_vialidade_w,
			nr_numero_externo_w,
			nr_numero_ext_alfa_w,
			nr_numero_interno_w,
			nr_numero_int_alfa_w,
			cd_tipo_asentamento_w,
			nm_assentamento_w,
			cd_localidade_w,
			cd_municipio_w,
			cd_entidade_w,
			cd_postal_w,
			cd_pais_w
	from	pessoa_juridica a
	where	a.cd_cgc = cd_cgc_estab_saude_destino_w;

	select	max(b.nr_seq_catalogo)
	into STRICT	nr_seq_catalogo_w
	from	end_endereco b,
			pessoa_endereco_item a
	where	b.nr_sequencia = a.nr_seq_end_endereco
	and		a.nr_seq_pessoa_endereco = nr_seq_pessoa_endereco_w;

	select 	a.cd_pessoa_prof_destino
	into STRICT	cd_medico_resp_w	
	from 	nom_rc_cabecalho a
	where 	a.nr_sequencia = nr_seq_cabecalho_p;

	if (cd_medico_resp_w IS NOT NULL AND cd_medico_resp_w::text <> '') then

		select	count(1)
		into STRICT	qt_reg_w
		from	medico a
		where	a.cd_pessoa_fisica = cd_medico_resp_w;

		if (qt_reg_w > 0) then
			/*responsible doctor*/

			select 	substr(obter_crm_medico(a.cd_pessoa_fisica), 1, 255) nr_crm, /*id_91*/
					z.ds_given_name nm_primeiro_nome, /*id_108*/
					z.ds_family_name nm_sobrenome_pai, /*id_109*/
					coalesce(z.ds_component_name_1, 'SIN INFORMACION') nm_sobrenome_mae, /*id_110*/
					obter_nom_rc_telefone(c.cd_pessoa_fisica, null, null) nr_telefone, /*id_92*/
					c.ds_email ds_email /*id_93*/
			into STRICT	nr_crm_w,
					nm_primeiro_nome_resp_w,
					nm_sobrenome_pai_resp_w,
					nm_sobrenome_mae_resp_w,
					nr_telefone_w,
					ds_email_w
			FROM medico a, pessoa_fisica b
LEFT OUTER JOIN person_name z ON (b.nr_seq_person_name = z.nr_sequencia AND 'main' = z.ds_type)
LEFT OUTER JOIN compl_pessoa_fisica c ON (b.cd_pessoa_fisica = c.cd_pessoa_fisica AND 1 = c.ie_tipo_complemento)
WHERE a.cd_pessoa_fisica = b.cd_pessoa_fisica     and b.cd_pessoa_fisica = cd_medico_resp_w;
		end if;
	end if;

	insert into nom_rc_pessoa_juridica(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		ie_tipo,
		ds_domicilio,
		cd_tipo_vialidade,
		nm_vialidade,
		nr_domicilio_ext,
		nr_domicilio_ext_alfa,
		nr_domicilio_int,
		nr_domicilio_int_alfa,
		cd_tipo_assentamento,
		nm_assentamento,
		cd_localidade,
		cd_municipio,
		cd_entidade_fed,
		cd_postal,
		cd_pais,
		cd_clues,
		nm_estab_salud,
		nr_cedula_medico_solic,
		nr_tel_medico_solic,
		ds_email_medico_solic,
		nm_primeiro_nome,
		nm_sobrenome_medico_1_pai,
		nm_sobrenome_medico_2_mae,
		ds_oid_estab_salud,
		cd_clues_estab,
		nr_seq_cabecalho,
		nr_seq_catalogo)
	values (nextval('nom_rc_pessoa_juridica_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		'DES',
		ds_endereco_completo_w,
		cd_tipo_vialidade_w,
		ds_rua_vialidade_w,
		nr_numero_externo_w,
		nr_numero_ext_alfa_w,
		nr_numero_interno_w,
		nr_numero_int_alfa_w,
		cd_tipo_asentamento_w,
		nm_assentamento_w,
		cd_localidade_w,
		cd_municipio_w,
		cd_entidade_w,
		cd_postal_w,
		cd_pais_w,
		cd_clues_w,
		coalesce(nm_oid_w,ds_razao_social_w),
		nr_crm_w,
		nr_telefone_w,
		ds_email_w,
		nm_primeiro_nome_resp_w,
		nm_sobrenome_pai_resp_w,
		nm_sobrenome_mae_resp_w,
		ds_oid_w,
		cd_clues_w,
		nr_seq_cabecalho_p,
		nr_seq_catalogo_w);
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_nom_rc_dest_documento ( nr_seq_cabecalho_p bigint, nm_usuario_p text) FROM PUBLIC;

