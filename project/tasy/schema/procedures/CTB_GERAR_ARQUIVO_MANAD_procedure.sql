-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_arquivo_manad ( nr_sequencia_p bigint, cd_empresa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE

/* 
 Tabela temporária utilizada 
CTB_ARQUIVO_MANAD 
Local base wheb arquivos 
\\192.168.0.230\utlfile 
*/
 
 
--######################################################################### 
--                                              VARIÁVEIS 
--######################################################################### 
 
arq_texto_w		utl_file.file_type;
ds_diretorio_w		varchar(255);
ds_diretorio_rede_w	varchar(255);
nm_arquivo_w		varchar(255);
c_comando_w 		integer;
retorno_w		integer;
nr_linha_w		bigint := 0;
qt_truncate_w		integer;
qt_registros_w		bigint;
dt_inicial_w		timestamp;
dt_final_w		timestamp;
qt_contador_w		bigint;
dt_final_mes_w		timestamp;
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
nr_sequencia_w			ctb_arquivo_manad.nr_sequencia%type;

--######################################################################### 
--                                                 CURSORES 
--######################################################################### 
 
-- Cursor para limpar a tabela temporária 
C_delete CURSOR FOR 
	SELECT	oid 
	from	ctb_arquivo_manad 
	where	nr_seq_regra_manad	= nr_sequencia_p;

-- Cursor para gerar o txt 
C_gerar_arquivo CURSOR FOR 
	SELECT	ds_arquivo 
	from	ctb_arquivo_manad 
	where	nr_seq_regra_manad	= nr_sequencia_p 
	order by nr_linha;

-- Tipo 0 #0 
C0000 CURSOR FOR 
	SELECT	substr(obter_nome_estabelecimento(a.cd_estabelecimento),1,80) ds_fantasia, 
		a.cd_cgc cd_cnpj, 
		' ' cd_cpf, 
		b.nr_cei nr_cei_inss, 
		b.nr_nit nr_nit, 
		substr(obter_dados_pf_pj(null, a.cd_cgc, 'UF'),1,2) sg_estado, 
		a.cd_inscricao_estadual cd_inscricao_estadual, 
		a.cd_localidade cd_municipio_ibge, 
		a.cd_inscricao_municipal nr_inscricao_municipal, 
		b.nr_suframa, 
		b.ie_centralizador ie_central_escrit, 
		--trunc(dt_inicial_w,'year') dt_inicial, 
		--last_day(add_months(trunc(dt_inicial_w,'year'),11))	dt_final, 
		dt_inicial_w dt_inicial, 
		dt_final_w dt_final, 
		'003' cd_versao, 
		'61' cd_finalidade_arq, 
		'0' cd_ind_entrada_dados 
	from	previdencia_estab b, 
		estabelecimento a 
	where	a.cd_estabelecimento = cd_estabelecimento_p 
	and	a.cd_estabelecimento = b.cd_estabelecimento;
	
-- Tipo 50 #50 
C0050 CURSOR FOR 
	SELECT	substr(obter_nome_pf_pj(a.cd_contabilista, null),1,80) nm_contabilista, 
		' ' cd_cnpj, 
		substr(obter_cpf_pessoa_fisica(a.cd_contabilista),1,20) cd_cpf, 
		nr_crc cd_crc, 
		dt_inicial_w dt_inicial, 
		dt_final_w dt_final, 
		' ' ds_endereco, 
		' ' nr_endereco, 
		' ' ds_complemento, 
		' ' ds_bairro, 
		substr(obter_compl_pf(a.cd_contabilista,1,'CEP'),1,15) cd_cep, 
		substr(obter_compl_pf(a.cd_contabilista,1,'UF'),1,2) sg_estado, 
		' ' nr_cx_postal, 
		substr(obter_compl_pf(a.cd_contabilista,1,'CEP'),1,15) cd_cep_cx_postal, 
		' ' nr_telefone, 
		' ' nr_fax, 
		' ' ds_email 
	from	empresa a 
	where	a.cd_empresa = cd_empresa_p;

-- Tipo 100 #100 
C0100 CURSOR FOR 
	SELECT	a.nm_usuario, 
		substr(obter_desc_cargo(b.cd_cargo),1,80) ds_cargo, 
		dt_inicial_w dt_inicial, 
		dt_final_w dt_final, 
		' ' cd_cnpj, 
		b.nr_cpf, 
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'T'),1,30) nr_telefone, 
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'FAX'),1,30)	nr_fax, 
		substr(obter_dados_pf_pj(a.cd_pessoa_fisica, null, 'M'),1,30) ds_email 
	from	pessoa_fisica b, 
		usuario a 
	where	a.nm_usuario = nm_usuario_p 
	and	a.cd_pessoa_fisica = b.cd_pessoa_fisica;	
	 
-- I050 #I050 
CI050 CURSOR FOR 
	SELECT	y.dt_atualizacao, 
		y.cd_grupo, 
		y.ie_tipo, 
		ctb_obter_nivel_classif_conta(y.cd_classificacao) nr_nivel, 
		y.cd_conta_contabil, 
		substr(ctb_obter_codigo_classif_vig(cd_empresa_p, ctb_obter_classif_conta_sup(y.cd_classificacao, dt_inicial_w, cd_empresa_p),dt_inicial_w),1,40) cd_conta_sup, 
		y.ds_conta_contabil 
	from ( 
	SELECT	dt_inicial_w dt_atualizacao, 
		CASE WHEN a.cd_grupo=1 THEN 1 WHEN a.cd_grupo=2 THEN 2 WHEN a.cd_grupo=3 THEN 5 WHEN a.cd_grupo=4 THEN 4  ELSE 9 END  cd_grupo, 
		CASE WHEN a.ie_tipo='T' THEN 'S'  ELSE 'A' END  ie_tipo, 
		a.cd_conta_contabil, 
		substr(ctb_obter_classif_conta(a.cd_conta_contabil, a.cd_classificacao, dt_inicial_w),1,40) cd_classificacao, 
		a.ds_conta_contabil 
	from	conta_contabil a 
	where	a.cd_empresa = cd_empresa_p 
	and	substr(obter_se_conta_vigente2(a.cd_conta_contabil, a.dt_inicio_vigencia, a.dt_fim_vigencia, dt_inicial_w),1,1) = 'S') y 
	where	1 = 1 
	order by cd_classificacao;

-- I100 #I100 
CI100 CURSOR FOR 
	SELECT	dt_inicial_w dt_atualizacao, 
		a.cd_centro_custo, 
		a.ds_centro_custo 
	from	estabelecimento b, 
		centro_custo a 
	where	b.cd_estabelecimento = a.cd_estabelecimento 
	and	b.cd_empresa = cd_empresa_p 
	and	b.cd_estabelecimento = coalesce(cd_estabelecimento_w,b.cd_estabelecimento) 
	order by 3;

-- I150 #I150 
CI150 CURSOR FOR 
	SELECT	a.cd_conta_contabil, 
		ctb_obter_mes_ref(a.nr_seq_mes_ref) dt_mesano_referencia, 
		coalesce(sum(a.vl_saldo - a.vl_movimento),0) vl_saldo_inicial, 
		substr(ctb_obter_situacao_saldo(a.cd_conta_contabil, sum(a.vl_saldo - a.vl_movimento)),1,1) ie_debito_credito_inicial, 
		coalesce(sum(a.vl_debito),0) vl_debito, 
		coalesce(sum(a.vl_credito),0) vl_credito, 
		coalesce(sum(a.vl_saldo),0) vl_saldo_final, 
		substr(ctb_obter_situacao_saldo(a.cd_conta_contabil, sum(a.vl_saldo)),1,1) ie_debito_credito_final 
	from	conta_contabil c, 
		ctb_mes_ref b, 
		ctb_saldo a 
	where	a.nr_seq_mes_ref = b.nr_sequencia 
	and	c.cd_conta_contabil = a.cd_conta_contabil 
	and	c.cd_empresa = b.cd_empresa 
	and	c.ie_tipo = 'A' 
	and	b.cd_empresa = cd_empresa_p 
	and	a.cd_estabelecimento = coalesce(cd_estabelecimento_w,a.cd_estabelecimento) 
	and	b.dt_referencia between dt_inicial_w and dt_final_w 
	group by 
		a.nr_seq_mes_ref, 
		b.dt_referencia, 
		a.cd_conta_contabil, 
		c.cd_classificacao 
	order by 
		b.dt_referencia, 
		c.cd_classificacao;

-- I200 #I200 
CI200 CURSOR FOR 
	SELECT	a.dt_movimento, 
		a.cd_conta_contabil, 
		c.cd_centro_custo, 
		a.cd_contrapartida, 
		coalesce(c.vl_movimento, a.vl_movimento) vl_movimento, 	 
		a.ie_debito_credito, 
		a.nr_seq_agrupamento nr_documento, 
		a.nr_sequencia, 
		substr(CASE WHEN d.ie_encerramento='N' THEN 'N' WHEN d.ie_encerramento='S' THEN 'E' END ,1,1) ie_tipo_lancamento, 
		substr(replace(replace(replace(a.ds_historico || ' ' || a.ds_compl_historico,chr(13),''),chr(10),''),'|',''),1,250) ds_historico 
	FROM lote_contabil d, ctb_mes_ref b, ctb_movimento_v a
LEFT OUTER JOIN ctb_movto_centro_custo c ON (a.nr_sequencia = c.nr_seq_movimento)
WHERE a.nr_lote_contabil = d.nr_lote_contabil and a.nr_seq_mes_ref = b.nr_sequencia  and b.cd_empresa = cd_empresa_p and a.cd_estabelecimento = coalesce(cd_estabelecimento_w,a.cd_estabelecimento) and trunc(a.dt_movimento) between dt_inicial_w and dt_final_w order by 
		a.dt_movimento;

-- I250 #I250 
CI250 CURSOR FOR 
	SELECT	b.dt_referencia, 
		a.cd_conta_contabil, 
		coalesce(sum(coalesce(a.vl_saldo,0)) - sum(coalesce(a.vl_encerramento,0)),0) vl_encerramento, 
		substr(ctb_obter_situacao_saldo(a.cd_conta_contabil, coalesce(sum(coalesce(a.vl_saldo,0)) - sum(coalesce(a.vl_encerramento,0)),0)),1,1) ie_indicador 
	from	ctb_grupo_conta d, 
		conta_contabil c, 
		ctb_mes_ref b, 
		ctb_saldo a 
	where	a.nr_seq_mes_ref = b.nr_sequencia 
	and 	a.cd_conta_contabil = c.cd_conta_contabil 
	and	c.cd_grupo		= d.cd_grupo 
	and	c.cd_empresa	= d.cd_empresa 
	and 	b.cd_empresa = cd_empresa_p 
	and	a.cd_estabelecimento = coalesce(cd_estabelecimento_w,a.cd_estabelecimento) 
	and 	b.dt_referencia = dt_final_mes_w 
	and	d.ie_tipo in ('R','C','D') 
	and	c.ie_tipo = 'A' 
	group by 
		b.dt_referencia, 
		a.cd_conta_contabil, 
		c.cd_classificacao 
	order by 
		c.cd_classificacao, 
		b.dt_referencia;

--######################################################################### 
--                                        VARIÁVEIS DOS CURSORES 
--######################################################################### 
 
-- Variávei do C_delete | cursor para limpar a tabela 
type C_delete_type is table of oid;
C_delete_regs_w C_delete_type;

-- Variável do cursor para gerar o arquivo de texto 
C_gerar_arquivo_w	C_gerar_arquivo%rowtype;

-- Registros da tabela temporária 
type ctb_arquivo_manad_w is table of ctb_arquivo_manad%rowtype index by integer;
arquivo_manad_w ctb_arquivo_manad_w;

-- Variávei do 0 
type C0000_type is table of C0000%rowtype;
C0000_regs_w C0000_type;

-- Variávei do 50 
type C0050_type is table of C0050%rowtype;
C0050_regs_w C0050_type;

-- Variávei do 100 
type C0100_type is table of C0100%rowtype;
C0100_regs_w C0100_type;

-- Variávei do I50 
type CI050_type is table of CI050%rowtype;
CI050_regs_w CI050_type;

-- Variávei do I100 
type CI100_type is table of CI100%rowtype;
CI100_regs_w CI100_type;

-- Variávei do I150 
type CI150_type is table of CI150%rowtype;
CI150_regs_w CI150_type;

-- Variávei do I200 
type CI200_type is table of CI200%rowtype;
CI200_regs_w CI200_type;

-- Variávei do I250 
type CI250_type is table of CI250%rowtype;
CI250_regs_w CI250_type;

	procedure add_registro(ds_registro_p	text) is 
	;
BEGIN
	qt_contador_w	:= qt_contador_w + 1;
	if (coalesce(ds_registro_p,'X') = 'X') then 
		CALL gravar_processo_longo('Gerando arquivo de texto' ,'CTB_GERAR_ARQUIVO_MANAD',qt_contador_w);
	else 
		CALL gravar_processo_longo('Carregando registros ' || ds_registro_p || ': ','CTB_GERAR_ARQUIVO_MANAD',qt_contador_w);
	end if;
	commit;
	end;
 
begin 
 
dt_final_mes_w := trunc(dt_final_w,'mm');
 
if (coalesce(nr_sequencia_p,0) <> 0) then 
	select	trunc(dt_inicial), 
		trunc(dt_final), 
		cd_estabelecimento 
	into STRICT	dt_inicial_w, 
		dt_final_w, 
		cd_estabelecimento_w 
	from	ctb_regra_manad 
	where	nr_sequencia = nr_sequencia_p;
end if;
 
--######################################################################### 
--                                     LIMPAR A TABELA TEMPORÁRIA 
--######################################################################### 
 
open C_delete;
loop 
fetch C_delete bulk collect into C_delete_regs_w limit 1000;
 
	-- Deletar em massa os registros da tabela temporária 
	forall i in C_delete_regs_w.first .. C_delete_regs_w.last 
	delete from ctb_arquivo_manad where rowid = C_delete_regs_w(i);
 
	commit;
EXIT WHEN NOT FOUND; /* apply on C_delete */
end loop;
commit;
close C_delete;
 
--######################################################################### 
--                            GERAÇÃO DOS REGISTROS NA TABELA TEMPORÁRIA 
--######################################################################### 
 
-- Inserir as linhas do boco 0 tipo 0000 #0 
add_registro('B0T0000');
open C0000;
loop 
fetch C0000 bulk collect into C0000_regs_w limit 1000;
	for j in 1 .. C0000_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'B0T0000';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	 
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	 
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo :=	'0000|' || 
					C0000_regs_w[j].ds_fantasia			|| '|' || 
					C0000_regs_w[j].cd_cnpj				|| '|' || 
					C0000_regs_w[j].cd_cpf				|| '|' || 
					C0000_regs_w[j].nr_cei_inss			|| '|' || 
					C0000_regs_w[j].nr_nit				|| '|' || 
					C0000_regs_w[j].sg_estado				|| '|' || 
					C0000_regs_w[j].cd_inscricao_estadual		|| '|' || 
					C0000_regs_w[j].cd_municipio_ibge			|| '|' || 
					C0000_regs_w[j].nr_inscricao_municipal		|| '|' || 
					C0000_regs_w[j].nr_suframa				|| '|' || 
					C0000_regs_w[j].ie_central_escrit			|| '|' || 
					to_char(C0000_regs_w[j].dt_inicial,'ddmmyyyy')	|| '|' || 
					to_char(C0000_regs_w[j].dt_final,'ddmmyyyy')	|| '|' || 
					C0000_regs_w[j].cd_versao				|| '|' || 
					C0000_regs_w[j].cd_finalidade_arq			|| '|' || 
					C0000_regs_w[j].cd_ind_entrada_dados;
	 
	end loop;
	 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in C0000_regs_w.first .. C0000_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on C0000 */
end loop;
commit;
close C0000;
 
/* 
Insert do bloco 0 Tipo 0001 
Somente 0 (zero) 
*/
 
add_registro('B0T0001');
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B0T0001', 
	'0001|0', 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
-- Inserir as linhas do bloco 0 tipo 0050 #50 
add_registro('B0T0050');
open C0050;
loop 
fetch C0050 bulk collect into C0050_regs_w limit 1000;
	for j in 1 .. C0050_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'B0T0050';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo :=	'0050|' || 
					C0050_regs_w[j].nm_contabilista			|| '|' || 
					C0050_regs_w[j].cd_cnpj				|| '|' || 
					C0050_regs_w[j].cd_cpf				|| '|' || 
					C0050_regs_w[j].cd_crc				|| '|' || 
					to_char(C0050_regs_w[j].dt_inicial,'ddmmyyyy')	|| '|' || 
					to_char(C0050_regs_w[j].dt_final,'ddmmyyyy')	|| '|' || 
					C0050_regs_w[j].ds_endereco			|| '|' || 
					C0050_regs_w[j].nr_endereco			|| '|' || 
					C0050_regs_w[j].ds_complemento			|| '|' || 
					C0050_regs_w[j].ds_bairro				|| '|' || 
					C0050_regs_w[j].cd_cep				|| '|' || 
					C0050_regs_w[j].sg_estado				|| '|' || 
					C0050_regs_w[j].nr_cx_postal			|| '|' || 
					C0050_regs_w[j].cd_cep_cx_postal			|| '|' || 
					C0050_regs_w[j].nr_telefone			|| '|' || 
					C0050_regs_w[j].nr_fax				|| '|' || 
					C0050_regs_w[j].ds_email;
					 
	end loop;
	 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in C0050_regs_w.first .. C0050_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on C0050 */
end loop;
commit;
close C0050;
 
-- Inserir as linhas do bloco 0 tipo 0100 #100 
add_registro('B0T0100');
open C0100;
loop 
fetch C0100 bulk collect into C0100_regs_w limit 1000;
	for j in 1 .. C0100_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'B0T0100';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo :=	'0100|' || 
					C0100_regs_w[j].nm_usuario			|| '|' || 
					C0100_regs_w[j].ds_cargo				|| '|' || 
					to_char(C0100_regs_w[j].dt_inicial,'ddmmyyyy')	|| '|' || 
					to_char(C0100_regs_w[j].dt_final,'ddmmyyyy')	|| '|' || 
					C0100_regs_w[j].cd_cnpj				|| '|' || 
					C0100_regs_w[j].nr_cpf				|| '|' || 
					C0100_regs_w[j].nr_telefone			|| '|' || 
					C0100_regs_w[j].nr_fax				|| '|' || 
					C0100_regs_w[j].ds_email;
	 
	end loop;
	 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in C0100_regs_w.first .. C0100_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on C0100 */
end loop;
commit;
close C0100;
 
/* 
Total de linhas do bloco 0 
count das linhas, mais a linha atual 
*/
 
select	count(*) + 1 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro in ('B0T0000','B0T0001','B0T0050','B0T0100') 
and	nm_usuario = nm_usuario_p;
 
add_registro('B0T0990');
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B0T0990', 
	'0990|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Insert do bloco I tipo I001 
*/
 
add_registro('BITI001');
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'BITI001', 
	'I001|0', 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Insert do bloco I tipo I005 
*/
 
add_registro('BITI005');
nr_linha_w := nr_linha_w + 1;
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'BITI005', 
	'I005|G|0', 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
-- Inserir as linhas do bloco I tipo I050 #I050 
add_registro('BITI050');
open CI050;
loop 
fetch CI050 bulk collect into CI050_regs_w limit 1000;
	for j in 1 .. CI050_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'BITI050';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo :=	'I050|' || 
					to_char(CI050_regs_w[j].dt_atualizacao,'ddmmyyyy')	|| '|' || 
					CI050_regs_w[j].cd_grupo				|| '|' || 
					CI050_regs_w[j].ie_tipo					|| '|' || 
					CI050_regs_w[j].nr_nivel				|| '|' || 
					CI050_regs_w[j].cd_conta_contabil			|| '|' || 
					CI050_regs_w[j].cd_conta_sup				|| '|' || 
					CI050_regs_w[j].ds_conta_contabil;
	end loop;
 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in CI050_regs_w.first .. CI050_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on CI050 */
end loop;
commit;
close CI050;
 
-- Inserir as linhas do bloco I tipo I100 #I100 
add_registro('BITI100');
open CI100;
loop 
fetch CI100 bulk collect into CI100_regs_w limit 1000;
	for j in 1 .. CI100_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'BITI100';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo :=	'I100|' || 
					to_char(CI100_regs_w[j].dt_atualizacao,'ddmmyyyy')	|| '|' || 
					CI100_regs_w[j].cd_centro_custo				|| '|' || 
					CI100_regs_w[j].ds_centro_custo;
	end loop;
	 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in CI100_regs_w.first .. CI100_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on CI100 */
end loop;
commit;
close CI100;
 
-- Inserir as linhas do bloco I tipo I150 #I150 
add_registro('BITI150');
open CI150;
loop 
fetch CI150 bulk collect into CI150_regs_w limit 1000;
	for j in 1 .. CI150_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'BITI150';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo :=	'I150|' || 
					CI150_regs_w[j].cd_conta_contabil			|| '|' || 
					to_char(CI150_regs_w[j].dt_mesano_referencia,'mmyyyy')	|| '|' || 
					abs(CI150_regs_w[j].vl_saldo_inicial)			|| '|' || 
					CI150_regs_w[j].ie_debito_credito_inicial		|| '|' || 
					abs(CI150_regs_w[j].vl_debito)				|| '|' || 
					abs(CI150_regs_w[j].vl_credito)				|| '|' || 
					abs(CI150_regs_w[j].vl_saldo_final)				|| '|' || 
					CI150_regs_w[j].ie_debito_credito_final;
	 
	 
	end loop;
	 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in CI150_regs_w.first .. CI150_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on CI150 */
end loop;
commit;
close CI150;
 
-- Inserir as linhas do bloco I tipo I200 #I200 
add_registro('BITI200');
open CI200;
loop 
fetch CI200 bulk collect into CI200_regs_w limit 1000;
	for j in 1 .. CI200_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'BITI200';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo :=	'I200|' || 
					to_char(CI200_regs_w[j].dt_movimento,'ddmmyyyy')	|| '|' || 
					CI200_regs_w[j].cd_conta_contabil			|| '|' || 
					CI200_regs_w[j].cd_centro_custo				|| '|' || 
					CI200_regs_w[j].cd_contrapartida			|| '|' || 
					abs(CI200_regs_w[j].vl_movimento)				|| '|' || 
					CI200_regs_w[j].ie_debito_credito			|| '|' || 
					CI200_regs_w[j].nr_documento				|| '|' || 
					CI200_regs_w[j].nr_sequencia				|| '|' || 
					CI200_regs_w[j].ie_tipo_lancamento			|| '|' || 
					CI200_regs_w[j].ds_historico;
	 
	end loop;
	 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in CI200_regs_w.first .. CI200_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on CI200 */
end loop;
commit;
close CI200;
 
-- Inserir as linhas do bloco I tipo I250 #I250 
add_registro('BITI250');
open CI250;
loop 
fetch CI250 bulk collect into CI250_regs_w limit 1000;
	for j in 1 .. CI250_regs_w.count 
	loop 
	-- Montagem da linha do arquivo 
	nr_linha_w := nr_linha_w + 1;
	arquivo_manad_w[j].cd_registro		:= 'BITI250';
	arquivo_manad_w[j].nm_usuario		:= nm_usuario_p;
	arquivo_manad_w[j].dt_atualizacao	:= clock_timestamp();
	 
	select	nextval('ctb_arquivo_manad_seq') 
	into STRICT	arquivo_manad_w[j].nr_sequencia 
	;
	 
	arquivo_manad_w[j].nr_linha		:= nr_linha_w;
	arquivo_manad_w[j].nr_seq_regra_manad	:= nr_sequencia_p;
	arquivo_manad_w[j].ds_arquivo := 'I250|' || 
					to_char(CI250_regs_w[j].dt_referencia,'ddmmyyyy')	|| '|' || 
					CI250_regs_w[j].cd_conta_contabil			|| '|' || 
					abs(CI250_regs_w[j].vl_encerramento)				|| '|' || 
					CI250_regs_w[j].ie_indicador;
	 
	end loop;
	 
	-- Inserir em massa os registros das linhas prontas na tabela temporária 
	forall i in CI250_regs_w.first .. CI250_regs_w.last 
	insert into ctb_arquivo_manad values arquivo_manad_w(i);
	 
	commit;
EXIT WHEN NOT FOUND; /* apply on CI250 */
end loop;
commit;
close CI250;
 
/* 
Inserir os registros do bloco I tipo I990 
Total dos registros do bloco I 
*/
 
select	count(*) + 1 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro in ('BITI001','BITI005','BITI050','BITI100','BITI150','BITI200','BITI250') 
and	nm_usuario = nm_usuario_p;
 
add_registro('BITI990');
nr_linha_w := nr_linha_w + 1;
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'BITI990', 
	'I990|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir o registro do bloco 9 tipo 9001 
somente 0 (zero) 
*/
 
add_registro('B9T9001');
nr_linha_w := nr_linha_w + 1;
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9001', 
	'9001|0', 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco 0 tipo 0000 
*/
 
add_registro('B9T9900');
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'B0T0000' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|0000|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco 0 tipo 0001 
*/
 
add_registro('B9T9900');
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'B0T0001' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
nr_linha_w := nr_linha_w + 1;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|0001|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco 0 tipo 0050 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'B0T0050' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|0050|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco 0 tipo 0100 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'B0T0100' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
nr_linha_w := nr_linha_w + 1;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|0100|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco 0 tipo 0990 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'B0T0990' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
nr_linha_w := nr_linha_w + 1;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|0990|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I001 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'BITI001' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I001|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I005 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'BITI005' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I005|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I050 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'BITI050' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I050|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I100 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro ='BITI100' 
and	nm_usuario = nm_usuario_p;
 
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I100|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I150 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro ='BITI150' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I150|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I200 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'BITI200' 
and	nm_usuario = nm_usuario_p;
 
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I200|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I250 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'BITI250' 
and	nm_usuario = nm_usuario_p;
 
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I250|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco 9 tipo 9001 | somente o insert realizado linhas acima 
*/
 
qt_registros_w := 1;
 
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|9001|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco 9 tipo 9900, mais o registro atual e os outros 3 a serem gerados abaixo 
*/
 
select	count(*) + 4 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'B9T9900' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|9900|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros 9990 | o totalizador de linhas do bloco 9 
*/
 
qt_registros_w := 1;
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|9990|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros 9999 | o totalizador de linhas do arquivo. 
*/
 
qt_registros_w := 1;
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|9999|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo I990 
*/
 
select	count(*) 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'BITI990' 
and	nm_usuario = nm_usuario_p;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
nr_linha_w := nr_linha_w + 1;
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'B9T9900', 
	'9900|I990|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Inserir os registros do bloco 9 tipo 9900 
Total dos registros do bloco I tipo 9900 
*/
 
add_registro('BITI990');
select	count(*) + 3 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	cd_registro = 'B9T9900' 
and	nm_usuario = nm_usuario_p;
 
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'BITI990', 
	'9990|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
/* 
Total de linhas do arquivo 
count das linhas, mais a linha com o total 
*/
 
select	count(nr_sequencia) + 1 
into STRICT	qt_registros_w 
from	ctb_arquivo_manad 
where	nr_seq_regra_manad	= nr_sequencia_p 
and	nm_usuario = nm_usuario_p;
 
nr_linha_w := nr_linha_w + 1;
 
select	nextval('ctb_arquivo_manad_seq') 
into STRICT	nr_sequencia_w
;
 
insert into ctb_arquivo_manad(	 
	nr_sequencia, 
	nr_seq_regra_manad, 
	nr_linha, 
	cd_registro, 
	ds_arquivo, 
	dt_atualizacao, 
	nm_usuario) 
values (	nr_sequencia_w, 
	nr_sequencia_p, 
	nr_linha_w, 
	'BITI990', 
	'9999|' || qt_registros_w, 
	clock_timestamp(), 
	nm_usuario_p);
commit;
 
--######################################################################### 
--                                    GERAR ARQUIVO .TXT COM UTL FILE 
--######################################################################### 
-- 923 - Contabilidade 
ds_diretorio_w	:= '/oraprd03/utlfile/';
ds_diretorio_w	:= '/tmp/';	
nm_arquivo_w	:= 'ArquivoMANAD.txt';
 
begin 
	add_registro(null);
 
	select	x.ds_local, 
		x.ds_local_rede 
	into STRICT	ds_diretorio_w, 
		ds_diretorio_rede_w 
	from (	SELECT	a.ds_local, 
			a.ds_local_rede 
		from	evento_tasy_utl_file a 
		where	a.ie_tipo = 'G' -- Gravação 
		and	a.cd_evento = '7' -- Geração de arquivo manad 
		and	coalesce(a.cd_funcao,coalesce(wheb_usuario_pck.get_cd_funcao,923)) = coalesce(wheb_usuario_pck.get_cd_funcao,923) 
		order by nr_sequencia) x LIMIT 1;
 
	arq_texto_w 	:= utl_file.fopen(ds_diretorio_w,nm_arquivo_w,'W');
	open C_gerar_arquivo;
	loop 
	fetch C_gerar_arquivo into 
		C_gerar_arquivo_w;
	EXIT WHEN NOT FOUND; /* apply on C_gerar_arquivo */
		begin 
		--gera uma nova linha no arquivo 
		utl_file.put_line(arq_texto_w,C_gerar_arquivo_w.ds_arquivo);
		utl_file.fflush(arq_texto_w);
		end;
	end loop;
	close C_gerar_arquivo;
 
	--fecha e libera o arquivo 
	utl_file.fclose(arq_texto_w);
	 
	-- Arquivo MANAD gerado com sucesso 
	ds_retorno_p := 'S';
exception 
when others then 
	-- Gerado as informações para o arquivo, porém não foi possível gerar o arquivo de texto 
	ds_retorno_p := 'G';
end;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_arquivo_manad ( nr_sequencia_p bigint, cd_empresa_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

