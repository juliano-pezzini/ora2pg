-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_orcamento_pacote (nr_seq_orc_p bigint, nr_seq_pacote_p bigint, nr_seq_pac_acomodacao_p bigint, nm_usuario_p text) AS $body$
DECLARE


ie_tipo_acomod_w                varchar(2);

cd_procedimento_w               bigint;
ie_origem_proced_w              bigint;
vl_honorario_w                  double precision;
vl_pacote_w                     double precision;
vl_procedimento_w		        double precision;
vl_auxiliares_w			        pacote_tipo_acomodacao.vl_auxiliares%type;
ie_carater_inter_sus_w          pacote_tipo_acomodacao.ie_carater_inter_sus%type;
qt_dias_pacote_w                integer;
vl_anestesista_w                double precision;
cd_material_w                   bigint;
ds_documento_w                  text;
ie_procedimento_regra_w         varchar(1):= 'S';
ie_material_regra_w             varchar(1):= 'S';
qt_limite_w                     bigint;
ie_qtde_limite_pacote_w         varchar(1);

nr_sequencia_w                  bigint;
NR_SEQ_PAC_ACOMOD_w             bigint;
ie_insere_w                     varchar(1):= 'S';

nr_seq_orc_proced_w             bigint;
ie_gera_todos_acomodacao_w	    varchar(1):= 'S';
pr_orcamento_w			        double precision;
ie_dispara_lanc_auto_w		    varchar(1);

nr_atendimento_w		        bigint;
nr_seq_item_w			        bigint;
ie_agendavel_w			        varchar(1);
nr_seq_proc_interno_w		    bigint;

cd_estabelecimento_w		    smallint;
cd_convenio_w			        bigint;
cd_categoria_w			        varchar(10);
nr_seq_proc_interno_ww		    bigint;

ie_autorizacao_w		        varchar(3);
ie_zera_pacote_agend_w		    varchar(1);
ie_valor_informado_w		    varchar(1);
nr_seq_pacote_w			        bigint;
cd_plano_w			            varchar(10);
cd_tipo_acomodacao_w		    smallint;
ds_observacao_w			        varchar(255);

cd_regra_honorario_w		    varchar(5);
ie_conta_honorario_w		    varchar(1);
ie_calcula_honorario_w		    varchar(1) := 'S';
cd_cgc_honorario_w		        varchar(14);
cd_pessoa_honorario_w		    varchar(10);
nr_seq_criterio_w		        bigint;
dt_orcamento_w			        orcamento_paciente.dt_orcamento%type;
ie_tipo_atendimento_w		    orcamento_paciente.ie_tipo_atendimento%type;
ie_clinica_w			        orcamento_paciente.ie_clinica%type;
cd_procedencia_w		        orcamento_paciente.cd_procedencia%type;
ie_regra_w			            orcamento_paciente_proc.ie_regra_plano%type;

c01 CURSOR FOR
        SELECT  a.cd_procedimento,
                a.ie_origem_proced,
                coalesce(a.vl_honorario,0),
                coalesce(a.vl_pacote,0),
                a.qt_dias_pacote,
                coalesce(a.vl_anestesista,0),
                1,
                a.nr_sequencia,
		coalesce(b.ie_agendavel,'N'),
		a.nr_seq_proc_interno,
		b.nr_seq_pacote,
		coalesce(a.vl_auxiliares,0),
		substr(a.ds_observacao,1,255)
	from    pacote_tipo_acomodacao a,
		pacote b
	where   a.nr_seq_pacote = b.nr_seq_pacote
	and	a.nr_seq_pacote   = nr_seq_pacote_p
	and     a.ie_tipo_acomod  = ie_tipo_acomod_w
	and 	((coalesce(ie_gera_todos_acomodacao_w,'S') = 'S') or ((coalesce(ie_gera_todos_acomodacao_w,'S') = 'N') and (a.nr_sequencia = nr_seq_pac_acomodacao_p)))
	and     ((coalesce(obter_dados_orcamento(nr_seq_orc_p,2), coalesce(a.ie_tipo_anestesia,'0')) = coalesce(a.ie_tipo_anestesia,'0')) or (coalesce(a.ie_tipo_anestesia::text, '') = ''))
	and	coalesce(a.ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w,0)) = coalesce(ie_carater_inter_sus_w,0)
	and     coalesce(dt_vigencia,clock_timestamp()) = (
                        SELECT  max(coalesce(dt_vigencia,clock_timestamp()))
                        from    Pacote_Tipo_Acomodacao b
                        where   nr_seq_pacote                   = nr_seq_pacote_p
                        and     ie_tipo_acomod                  = ie_tipo_acomod_w
                        and     coalesce(ie_situacao, 'A')           = 'A'
                        and     b.cd_procedimento               = a.cd_procedimento
                        and     b.ie_origem_proced              = a.ie_origem_proced
			and    	dt_orcamento_w between coalesce(b.dt_vigencia,clock_timestamp()) and coalesce(trunc(b.dt_vigencia_final, ('dd')) + 86399/86400, clock_timestamp() + interval '360 days')
			and    	((coalesce(ie_gera_todos_acomodacao_w,'S') = 'S') or ((coalesce(ie_gera_todos_acomodacao_w,'S') = 'N')
			and	coalesce(b.ie_carater_inter_sus, coalesce(ie_carater_inter_sus_w,0)) = coalesce(ie_carater_inter_sus_w,0)
			and (b.nr_sequencia = nr_seq_pac_acomodacao_p))));


c02 CURSOR FOR
        SELECT  cd_material,
                coalesce(qt_limite,1),
                NR_SEQ_PAC_ACOMOD,
		pr_orcamento
        from    pacote_material
        where   nr_seq_pacote   = nr_seq_pacote_p
        and     ie_inclui_exclui = 'I'
        and     coalesce(ie_material_regra_w,'S') in ('S','Z')
        and     (cd_material IS NOT NULL AND cd_material::text <> '');

c03 CURSOR FOR
        SELECT  ds_documento
        from    pacote_doc
        where   nr_seq_pacote   = nr_seq_pacote_p
        and     ie_tipo_doc = 'O';

c04 CURSOR FOR
        SELECT  cd_procedimento,
                ie_origem_proced,
                0,
                0,
                0,
                0,
		0,
                coalesce(qt_limite,1),
                NR_SEQ_PAC_ACOMOD,
		ie_agendavel
        from    pacote_procedimento
        where   nr_seq_pacote   = nr_seq_pacote_p
        and     ie_inclui_exclui = 'I'
        and     (cd_procedimento IS NOT NULL AND cd_procedimento::text <> '')
        and     coalesce(ie_procedimento_regra_w,'S') = 'S';
	
c05 CURSOR FOR
        SELECT  cd_procedimento,
                ie_origem_proced,
                0,
                0,
                0,
                0,
                coalesce(qt_limite,1),
                NR_SEQ_PAC_ACOMOD,
		nr_seq_proc_interno,
		ie_agendavel
        from    pacote_procedimento
        where   nr_seq_pacote   = nr_seq_pacote_p
        and     ie_inclui_exclui = 'I'
        and     ((cd_procedimento IS NOT NULL AND cd_procedimento::text <> '') or (nr_seq_proc_interno IS NOT NULL AND nr_seq_proc_interno::text <> ''))
	and 	coalesce(ie_agendavel,'N') = 'S'
        and     coalesce(ie_procedimento_regra_w,'S') = 'A';


BEGIN

ie_procedimento_regra_w 	:= obter_valor_param_usuario(106, 20, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_qtde_limite_pacote_w 	:= obter_valor_param_usuario(106, 38, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_material_regra_w     	:= obter_valor_param_usuario(106, 42, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento);
ie_gera_todos_acomodacao_w     	:= coalesce(obter_valor_param_usuario(106, 62, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'S');
ie_dispara_lanc_auto_w		:= coalesce(obter_valor_param_usuario(106, 74, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_zera_pacote_agend_w		:= coalesce(obter_valor_param_usuario(106, 84, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

select  coalesce(max(b.ie_classificacao),'X')
into STRICT    ie_tipo_acomod_w
from    tipo_acomodacao b,
        orcamento_paciente a
where a.cd_tipo_acomodacao = b.cd_tipo_acomodacao
  and a.nr_sequencia_orcamento = nr_seq_orc_p;

select	max(nr_atendimento),
	max(cd_estabelecimento),
	max(cd_convenio),
	max(cd_categoria),
	max(cd_plano),
	max(cd_tipo_acomodacao),
	max(dt_orcamento),
	max(ie_tipo_atendimento),
	max(ie_clinica),
	max(cd_procedencia),
	max(ie_carater_inter_sus)
into STRICT	nr_atendimento_w,
	cd_estabelecimento_w,
	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_tipo_acomodacao_w,
	dt_orcamento_w,
	ie_tipo_atendimento_w,
	ie_clinica_w,
	cd_procedencia_w,
	ie_carater_inter_sus_w
from	orcamento_paciente
where	nr_sequencia_orcamento = nr_seq_orc_p;

-- Pacote
open c01;
loop
fetch c01 into
    cd_procedimento_w,
    ie_origem_proced_w,
    vl_honorario_w,
    vl_pacote_w,
    qt_dias_pacote_w,
    vl_anestesista_w,
    qt_limite_w,
    nr_sequencia_w,
    ie_agendavel_w,
    nr_seq_proc_interno_ww,
    nr_seq_pacote_w,
    vl_auxiliares_w,
    ds_observacao_w;
EXIT WHEN NOT FOUND; /* apply on c01 */

		if (qt_dias_pacote_w > 999) then
				qt_dias_pacote_w:= 999;
		end if;

        if (ie_qtde_limite_pacote_w = 'N') then
                qt_limite_w:= 1;
        end if;

        select  nextval('orcamento_paciente_proc_seq')
        into STRICT    nr_seq_orc_proced_w
;
	
	
	/*consiste_proc_orc(nr_seq_orc_p,
				cd_procedimento_w,
				ie_origem_proced_w,
				qt_limite_w,
				cd_estabelecimento_w,
				nm_usuario_p,
				ie_autorizacao_w);			
	*/
	if (vl_pacote_w  = 0) then
		ie_valor_informado_w  := 'N';
	else
		ie_valor_informado_w  := 'S';
	end if;
	
	if (ie_zera_pacote_agend_w = 'S') and (ie_agendavel_w = 'S') then
		vl_pacote_w 		:= 0;
		vl_honorario_w		:= 0;
		vl_anestesista_w	:= 0;
		ie_valor_informado_w    := 'S';
	end if;
	
	ie_conta_honorario_w	:= 'N';
	ie_calcula_honorario_w	:= 'S';
	
	SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_orcamento_w, ie_tipo_atendimento_w, null, null, null, null, null, 'S', null, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, null, null, null, ie_clinica_w, null, null, cd_procedencia_w, null, null, nr_seq_proc_interno_ww, null) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
		
	if (ie_calcula_honorario_w	= 'N') then
		vl_honorario_w		:= 0;
		vl_anestesista_w	:= 0;
		vl_auxiliares_w		:= 0;
	end if;
	
	if (ie_conta_honorario_w = 'S') then
		vl_procedimento_w	:= vl_pacote_w + vl_honorario_w + vl_anestesista_w + vl_auxiliares_w;
	else
		vl_procedimento_w	:= vl_pacote_w;
	end if;	
	
        insert into orcamento_paciente_proc(NR_SEQUENCIA_ORCAMENTO,
                CD_PROCEDIMENTO,
                IE_ORIGEM_PROCED,
                QT_PROCEDIMENTO,
                DT_ATUALIZACAO,
                NM_USUARIO,
                VL_PROCEDIMENTO,
                VL_MEDICO,
                VL_ANESTESISTA,
                VL_FILME,
                VL_AUXILIARES,
                VL_CUSTO_OPERACIONAL,
                VL_DESCONTO,
                CD_MEDICO,
                IE_PROCEDIMENTO_PRINCIPAL,
                QT_DIA_INTERNACAO,
                IE_VALOR_INFORMADO,
                NR_SEQ_EXAME,
                NR_SEQUENCIA,
                ie_pacote,
		IE_AGENDAVEL,
		NR_SEQ_PROC_INTERNO,
		ie_autorizacao,
		nr_seq_pacote,
		ds_observacao)
        values (nr_seq_orc_p,
                cd_procedimento_w,
                ie_origem_proced_w,
                qt_limite_w,
                clock_timestamp(),
                nm_usuario_p,
                vl_procedimento_w,
                vl_honorario_w,
                vl_anestesista_w,
                0,
                vl_auxiliares_w,
                vl_procedimento_w - vl_honorario_w - vl_anestesista_w,
                0,
                null,
                'N',
                qt_dias_pacote_w,
                ie_valor_informado_w,

                null,
                nr_seq_orc_proced_w,
                'S',
		ie_agendavel_w,
		nr_seq_proc_interno_ww,
		ie_autorizacao_w,
		nr_seq_pacote_w,
		ds_observacao_w);

        --Valores originais do pacote
        insert into orcamento_pac_proc_valor(NR_SEQUENCIA,
                NR_SEQ_ORC_PROCED,
                DT_ATUALIZACAO,
                NM_USUARIO,
                DT_ATUALIZACAO_NREC,
                NM_USUARIO_NREC,
                IE_TIPO_VALOR,
                QT_PROCEDIMENTO,
                VL_PROCEDIMENTO,
                VL_MEDICO,
                VL_ANESTESISTA,
                VL_AUXILIARES,
                VL_CUSTO_OPERACIONAL,
                VL_FILME,
                VL_CUSTO)
        values (nextval('orcamento_pac_proc_valor_seq'),
                nr_seq_orc_proced_w,
                clock_timestamp(),
                nm_usuario_p,
                clock_timestamp(),
                nm_usuario_p,
                1,
                qt_limite_w,
                vl_procedimento_w,
                vl_honorario_w,
                vl_anestesista_w,
                vl_auxiliares_w,
                vl_procedimento_w - vl_honorario_w - vl_anestesista_w,
                0,
                0);
				
		if (2 = philips_param_pck.get_cd_pais) then
			CALL gerar_tributo_orc_pac(nr_seq_orc_p, nr_seq_orc_proced_w, 'P', nm_usuario_p);
		end if;
		
	
if (ie_dispara_lanc_auto_w = 'S') then
	CALL gerar_lanc_orc_automatico(nr_atendimento_w,nr_seq_orc_p,34,nr_seq_orc_proced_w,nm_usuario_p);
end if;

end loop;
close c01;

-- Procedimentos (Todos)  Param?o [20] = 'S'
open c04;
loop
fetch c04 into
        cd_procedimento_w,
        ie_origem_proced_w,
        vl_honorario_w,
        vl_pacote_w,
        qt_dias_pacote_w,
        vl_anestesista_w,
	vl_auxiliares_w,
        qt_limite_w,
        NR_SEQ_PAC_ACOMOD_w,
	ie_agendavel_w;
EXIT WHEN NOT FOUND; /* apply on c04 */
	ie_regra_w	:= null;
	
		if (qt_dias_pacote_w > 999) then
				qt_dias_pacote_w:= 999;
		end if;

        if (ie_qtde_limite_pacote_w = 'N') then
                qt_limite_w:= 1;
        end if;

        ie_insere_w:= 'S';
        if (coalesce(nr_sequencia_w,0) > 0) and (coalesce(NR_SEQ_PAC_ACOMOD_w,0) > 0) and (nr_sequencia_w <> NR_SEQ_PAC_ACOMOD_w) then
                ie_insere_w:= 'N';
        end if;
	
	if (vl_pacote_w  = 0) then
		ie_valor_informado_w  := 'N';
	else
		ie_valor_informado_w  := 'S';
	end if;
	
	if (ie_zera_pacote_agend_w = 'S') and (ie_agendavel_w = 'S') then
		vl_pacote_w 		:= 0;
		vl_honorario_w		:= 0;
		vl_anestesista_w	:= 0;
		ie_valor_informado_w    := 'S';
		end if;
	
        if (coalesce(ie_insere_w,'S') = 'S') then
	
		select	nextval('orcamento_paciente_proc_seq')
		into STRICT	nr_sequencia_w
		;

		SELECT * FROM consiste_proc_orc(nr_seq_orc_p, cd_procedimento_w, ie_origem_proced_w, qt_limite_w, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, null, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;
				
		ie_conta_honorario_w	:= 'N';
		ie_calcula_honorario_w	:= 'S';
		
		SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_orcamento_w, ie_tipo_atendimento_w, null, null, null, null, null, 'S', null, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, null, null, null, ie_clinica_w, null, null, cd_procedencia_w, null, null, null, null) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
			
		if (ie_calcula_honorario_w	= 'N') then
			vl_honorario_w		:= 0;
			vl_anestesista_w	:= 0;
			vl_auxiliares_w		:= 0;
		end if;
		
		if (ie_conta_honorario_w = 'S') then
			vl_procedimento_w	:= vl_pacote_w + vl_honorario_w + vl_anestesista_w + vl_auxiliares_w;
		else
			vl_procedimento_w	:= vl_pacote_w;
		end if;			

                insert into orcamento_paciente_proc(NR_SEQUENCIA_ORCAMENTO,
                        CD_PROCEDIMENTO,
                        IE_ORIGEM_PROCED,
                        QT_PROCEDIMENTO,
                        DT_ATUALIZACAO,
                        NM_USUARIO,
                        VL_PROCEDIMENTO,
                        VL_MEDICO,
                        VL_ANESTESISTA,
                        VL_FILME,
                        VL_AUXILIARES,
                        VL_CUSTO_OPERACIONAL,
                        VL_DESCONTO,
                        CD_MEDICO,
                        IE_PROCEDIMENTO_PRINCIPAL,
                        QT_DIA_INTERNACAO,
                        IE_VALOR_INFORMADO,
                        NR_SEQ_EXAME,
                        NR_SEQUENCIA,
                        ie_pacote,
			ie_autorizacao,
			nr_seq_pacote,
			nr_seq_proc_princ,
			ie_regra_plano)
                values (nr_seq_orc_p,
                        cd_procedimento_w,
                        ie_origem_proced_w,
                        qt_limite_w,
                        clock_timestamp(),
                        nm_usuario_p,
                        vl_procedimento_w,
                        vl_honorario_w,
                        vl_anestesista_w,
                        0,
                        0,
                        vl_procedimento_w - vl_honorario_w - vl_anestesista_w,
                        0,
                        null,
                        'N',
                        qt_dias_pacote_w,
                        ie_valor_informado_w,
                        null,
                        nr_sequencia_w,
                        'S',
			ie_autorizacao_w,
			nr_seq_pacote_w,
			nr_seq_orc_proced_w,
			ie_regra_w);
	
			
			
        end if;

end loop;
close c04;

-- Procedimentos (Todos) Par?tro [20] = 'A'
open c05;
loop
fetch c05 into
        cd_procedimento_w,
        ie_origem_proced_w,
        vl_honorario_w,
        vl_pacote_w,
        qt_dias_pacote_w,
        vl_anestesista_w,
        qt_limite_w,
        NR_SEQ_PAC_ACOMOD_w,
	nr_seq_proc_interno_w,
	ie_agendavel_w;
EXIT WHEN NOT FOUND; /* apply on c05 */
	ie_regra_w	:= null;
	
	if (qt_dias_pacote_w > 999) then
		qt_dias_pacote_w:= 999;
	end if;

        if (ie_qtde_limite_pacote_w = 'N') then
                qt_limite_w:= 1;
        end if;

        ie_insere_w:= 'S';
        if (coalesce(nr_sequencia_w,0) > 0) and (coalesce(NR_SEQ_PAC_ACOMOD_w,0) > 0) and (nr_sequencia_w <> NR_SEQ_PAC_ACOMOD_w) then
                ie_insere_w:= 'N';
        end if;
	
	if (coalesce(nr_seq_proc_interno_w,0) > 0) then
		SELECT * FROM obter_proc_tab_interno_conv(nr_seq_proc_interno_w, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), cd_tipo_acomodacao_w, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;
	end if;

        if (coalesce(ie_insere_w,'S') = 'S') then

		select 	nextval('orcamento_paciente_proc_seq')
		into STRICT	nr_seq_item_w
		;
		
		SELECT * FROM consiste_proc_orc(nr_seq_orc_p, cd_procedimento_w, ie_origem_proced_w, qt_limite_w, cd_estabelecimento_w, nm_usuario_p, ie_autorizacao_w, null, ie_regra_w) INTO STRICT ie_autorizacao_w, ie_regra_w;

		if (vl_pacote_w  = 0) then
			ie_valor_informado_w  := 'N';
		else
			ie_valor_informado_w  := 'S';
		end if;
		
		if (ie_zera_pacote_agend_w = 'S') and (ie_agendavel_w = 'S') then
			vl_pacote_w 		:= 0;
			vl_honorario_w		:= 0;
			vl_anestesista_w	:= 0;
			ie_valor_informado_w    := 'S';
		end if;
		
		ie_conta_honorario_w	:= 'N';
		ie_calcula_honorario_w	:= 'S';
		
		SELECT * FROM obter_regra_honorario(cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_procedimento_w, ie_origem_proced_w, dt_orcamento_w, ie_tipo_atendimento_w, null, null, null, null, null, 'S', null, cd_plano_w, cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w, null, null, null, ie_clinica_w, null, null, cd_procedencia_w, null, null, nr_seq_proc_interno_w, null) INTO STRICT cd_regra_honorario_w, ie_conta_honorario_w, ie_calcula_honorario_w, cd_cgc_honorario_w, cd_pessoa_honorario_w, nr_seq_criterio_w;
			
		if (ie_calcula_honorario_w	= 'N') then
			vl_honorario_w		:= 0;
			vl_anestesista_w	:= 0;
			vl_auxiliares_w		:= 0;
		end if;
		
		if (ie_conta_honorario_w = 'S') then
			vl_procedimento_w	:= vl_pacote_w + vl_honorario_w + vl_anestesista_w + vl_auxiliares_w;
		else
			vl_procedimento_w	:= vl_pacote_w;
		end if;			
			
                insert into orcamento_paciente_proc(NR_SEQUENCIA_ORCAMENTO,
                        CD_PROCEDIMENTO,
                        IE_ORIGEM_PROCED,
                        QT_PROCEDIMENTO,
                        DT_ATUALIZACAO,
                        NM_USUARIO,
                        VL_PROCEDIMENTO,
                        VL_MEDICO,
                        VL_ANESTESISTA,
                        VL_FILME,
                        VL_AUXILIARES,
                        VL_CUSTO_OPERACIONAL,
                        VL_DESCONTO,
                        CD_MEDICO,
                        IE_PROCEDIMENTO_PRINCIPAL,
                        QT_DIA_INTERNACAO,
                        IE_VALOR_INFORMADO,
                        NR_SEQ_EXAME,
                        NR_SEQUENCIA,
                        ie_pacote,
			ie_agendavel,
			nr_seq_proc_princ,
			nr_seq_proc_interno,
			ie_autorizacao,
			nr_seq_pacote,
			ie_regra_plano)
                values (nr_seq_orc_p,
                        cd_procedimento_w,
                        ie_origem_proced_w,
                        qt_limite_w,
                        clock_timestamp(),
                        nm_usuario_p,
                        vl_procedimento_w,
                        vl_honorario_w,
                        vl_anestesista_w,
                        0,
                        0,
                        vl_procedimento_w - vl_honorario_w - vl_anestesista_w,
                        0,
                        null,
                        'N',
                        qt_dias_pacote_w,
                       ie_valor_informado_w,
                        null,
                        nr_seq_item_w,
			'S',
                        'S',
			nr_seq_orc_proced_w,
			nr_seq_proc_interno_w,
			ie_autorizacao_w,
			nr_seq_pacote_w,
			ie_regra_w);
							
        end if;

end loop;
close c05;


-- Materiais
open c02;
loop
fetch c02 into
        cd_material_w,
        qt_limite_w,
        NR_SEQ_PAC_ACOMOD_w,
	pr_orcamento_w;
EXIT WHEN NOT FOUND; /* apply on c02 */

        if (ie_qtde_limite_pacote_w = 'N') then
                qt_limite_w:= 1;
        end if;

        ie_insere_w:= 'S';
        if (coalesce(nr_sequencia_w,0) > 0) and (coalesce(NR_SEQ_PAC_ACOMOD_w,0) > 0) and (nr_sequencia_w <> NR_SEQ_PAC_ACOMOD_w) then
                ie_insere_w:= 'N';
        end if;

        if (coalesce(ie_insere_w,'S') = 'S') then
		
		select	nextval('orcamento_paciente_mat_seq')
		into STRICT	nr_seq_item_w
		;
		
                insert into orcamento_paciente_mat(NR_SEQUENCIA_ORCAMENTO,
                        CD_MATERIAL,
                        QT_MATERIAL,
                        VL_MATERIAL,
                        DT_ATUALIZACAO,
                        NM_USUARIO,
                        VL_DESCONTO,
                        IE_VALOR_INFORMADO,
                        nr_sequencia,
			pr_orc_pacote,
			ds_observacao,
			nr_seq_proc_princ)
                values (nr_seq_orc_p,
                        cd_material_w,
                        qt_limite_w,
                        0,
                        clock_timestamp(),
                        nm_usuario_p,
                        0,
                        CASE WHEN coalesce(ie_material_regra_w,'S')='Z' THEN 'S'  ELSE 'N' END ,
                        nr_seq_item_w,
			pr_orcamento_w,
			CASE WHEN coalesce(ie_material_regra_w,'S')='Z' THEN  wheb_mensagem_pck.get_Texto(310407)  ELSE null END ,
			nr_seq_orc_proced_w);
			
	

        end if;
	
end loop;
close c02;

open c03;
loop
        fetch c03 into ds_documento_w;
        EXIT WHEN NOT FOUND; /* apply on c03 */
                insert into orcamento_pac_doc(NR_SEQUENCIA,
                        NR_ORC_PAC,
                        DT_ATUALIZACAO,
                        NM_USUARIO,
                        DS_DOCUMENTO)
                values (nextval('orcamento_pac_doc_seq'),
                        nr_seq_orc_p,
                        clock_timestamp(),
                        nm_usuario_p,
                        ds_documento_w);
end loop;
close c03;
	
commit;

CALL ATUALIZAR_TX_ORCAMENTO_PACOTE(nr_seq_orc_p, null);

CALL calcular_orcamento_paciente(nr_seq_orc_p, nm_usuario_p, 1);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_orcamento_pacote (nr_seq_orc_p bigint, nr_seq_pacote_p bigint, nr_seq_pac_acomodacao_p bigint, nm_usuario_p text) FROM PUBLIC;

