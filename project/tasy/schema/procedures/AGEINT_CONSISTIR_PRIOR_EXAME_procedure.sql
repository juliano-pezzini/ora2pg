-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_consistir_prior_exame ( nr_Seq_Ageint_p bigint, nr_seq_ageint_item_p bigint, dt_marcacao_p timestamp, ds_mensagem_p INOUT text, nm_usuario_p text) AS $body$
DECLARE



qt_marcacao_w			bigint;
nr_seq_proc_interno_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
cd_area_proced_w		integer;
cd_espec_proced_w		integer;
cd_grupo_proced_w		bigint;
nr_seq_proc_interno_ant_w	bigint;
cd_procedimento_ant_w		bigint;
ie_origem_proced_ant_w		bigint;
cd_area_proced_ant_w		integer;
cd_espec_proced_ant_w		integer;
cd_grupo_proced_ant_w		bigint;
qt_item_regra_w			bigint;
nr_seq_proc_interno_post_w	bigint;
cd_procedimento_post_w		bigint;
ie_origem_proced_post_w		bigint;
cd_area_proced_post_w		integer;
cd_espec_proced_post_w		integer;
cd_grupo_proced_post_w		bigint;
nr_seq_regra_w			bigint;
ds_mensagem_w			varchar(255);
ie_dias_considerados_regra_w bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	ageint_regra_exame_prior
	where	((cd_area_procedimento = cd_area_proced_w) or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))
	and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))
	order by coalesce(cd_procedimento,0),
		coalesce(nr_seq_proc_interno,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);

C02 CURSOR FOR
	SELECT	nr_seq_regra_Exame
	from	ageint_item_regra_prior
	where	((cd_area_procedimento = cd_area_proced_w) or (coalesce(cd_area_procedimento::text, '') = ''))
	and	((cd_especialidade = cd_espec_proced_w) or (coalesce(cd_especialidade::text, '') = ''))
	and	((cd_grupo_proc = cd_grupo_proced_w) or (coalesce(cd_grupo_proc::text, '') = ''))
	and	((cd_procedimento = cd_procedimento_w) or (coalesce(cd_procedimento::text, '') = ''))
	and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_w) or (coalesce(ie_origem_proced::text, '') = '')))
	and	((nr_seq_proc_interno = nr_seq_proc_interno_w) or (coalesce(nr_seq_proc_interno::text, '') = ''))
	order by coalesce(cd_procedimento,0),
		coalesce(nr_seq_proc_interno,0),
		coalesce(cd_grupo_proc,0),
		coalesce(cd_especialidade,0),
		coalesce(cd_area_procedimento,0);

--O item selecionado tem prioridade superior a algum item já marcado, com data anterior.
C03 CURSOR FOR
	SELECT	b.nr_seq_proc_interno,
			b.cd_procedimento,
			b.ie_origem_proced
	from	ageint_marcacao_usuario a,
			agenda_integrada_item b
	where	a.nr_seq_ageint_item <> nr_seq_Ageint_item_p
	and		a.nr_seq_ageint	= nr_seq_ageint_p
	and		a.nr_seq_ageint_item = b.nr_sequencia
	and		b.ie_tipo_agendamento <> 'C'
	and		trunc(a.hr_agenda) >= trunc(dt_marcacao_p - coalesce(ie_dias_considerados_regra_w,0))
	and 	a.hr_agenda < dt_marcacao_p
	and		coalesce(ds_mensagem_w::text, '') = ''
	order by a.hr_agenda;

--O item selecionado tem prioridade inferior a algum item já marcado, com data posterior.
C04 CURSOR FOR
	SELECT	b.nr_seq_proc_interno,
			b.cd_procedimento,
			b.ie_origem_proced
	from	ageint_marcacao_usuario a,
			agenda_integrada_item b
	where	a.nr_seq_ageint_item <> nr_seq_Ageint_item_p
	and		a.nr_seq_ageint	= nr_seq_ageint_p
	and		a.nr_seq_ageint_item = b.nr_sequencia
	and		b.ie_tipo_agendamento <> 'C'
	and		trunc(a.hr_agenda) <= trunc(dt_marcacao_p + coalesce(ie_dias_considerados_regra_w,0))
	and		a.hr_agenda	> dt_marcacao_p
order by a.hr_agenda;


BEGIN

ie_dias_considerados_regra_w := obter_param_usuario(869, 389, Obter_perfil_Ativo, wheb_usuario_pck.get_nm_usuario, wheb_usuario_pck.get_cd_estabelecimento, ie_dias_considerados_regra_w);

select	count(*)
into STRICT	qt_marcacao_w
from	ageint_marcacao_usuario a,
		agenda_integrada_item b
where	a.nr_seq_ageint_item	<> nr_seq_Ageint_item_p
and		a.nr_seq_ageint			= nr_seq_ageint_p
and		a.nr_seq_ageint_item	= b.nr_sequencia
and		b.ie_tipo_agendamento	<> 'C'
and		coalesce(a.ie_gerado,'N')	= 'N';

if (qt_marcacao_w	> 0) then
	select	max(nr_seq_proc_interno),
		max(cd_procedimento),
		max(ie_origem_proced)
	into STRICT	nr_seq_proc_interno_w,
		cd_procedimento_w,
		ie_origem_proced_w
	from	agenda_integrada_item
	where	nr_sequencia	= nr_seq_ageint_item_p;

	if (nr_seq_proc_interno_w IS NOT NULL AND nr_seq_proc_interno_w::text <> '') then
		select	coalesce(max(cd_area_procedimento),0),
			coalesce(max(cd_especialidade),0),
			coalesce(max(cd_grupo_proc),0)
		into STRICT	cd_area_proced_w,
			cd_espec_proced_w,
			cd_grupo_proced_w
		from	estrutura_procedimento_v
		where	cd_procedimento = cd_procedimento_w
		and	ie_origem_proced = ie_origem_proced_w;


		open C03;
		loop
		fetch C03 into
			nr_seq_proc_interno_ant_w,
			cd_procedimento_ant_w,
			ie_origem_proced_ant_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			select	coalesce(max(cd_area_procedimento),0),
				coalesce(max(cd_especialidade),0),
				coalesce(max(cd_grupo_proc),0)
			into STRICT	cd_area_proced_ant_w,
				cd_espec_proced_ant_w,
				cd_grupo_proced_ant_w
			from	estrutura_procedimento_v
			where	cd_procedimento = cd_procedimento_ant_w
			and	ie_origem_proced = ie_origem_proced_ant_w;
			open C01;
			loop
			fetch C01 into
				nr_seq_regra_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				select	count(*)
				into STRICT	qt_item_regra_w
				from	ageint_item_regra_prior
				where	nr_seq_regra_exame = nr_seq_regra_w
				and	((cd_area_procedimento = cd_area_proced_ant_w) or (coalesce(cd_area_procedimento::text, '') = ''))
				and	((cd_especialidade = cd_espec_proced_ant_w) or (coalesce(cd_especialidade::text, '') = ''))
				and	((cd_grupo_proc = cd_grupo_proced_ant_w) or (coalesce(cd_grupo_proc::text, '') = ''))
				and	((cd_procedimento = cd_procedimento_ant_w) or (coalesce(cd_procedimento::text, '') = ''))
				and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_ant_w) or (coalesce(ie_origem_proced::text, '') = '')))
				and	((nr_seq_proc_interno = nr_seq_proc_interno_ant_w) or (coalesce(nr_seq_proc_interno::text, '') = ''));
				if (qt_item_regra_w	> 0) then
					ds_mensagem_w	:= wheb_mensagem_pck.get_texto(790841);
				end if;
				end;
			end loop;
			close C01;
			end;
		end loop;
		close C03;

		if (coalesce(ds_mensagem_w::text, '') = '') then
			open C04;
			loop
			fetch C04 into
				nr_seq_proc_interno_post_w,
				cd_procedimento_post_w,
				ie_origem_proced_post_w;
			EXIT WHEN NOT FOUND; /* apply on C04 */
				begin
				select	coalesce(max(cd_area_procedimento),0),
					coalesce(max(cd_especialidade),0),
					coalesce(max(cd_grupo_proc),0)
				into STRICT	cd_area_proced_post_w,
					cd_espec_proced_post_w,
					cd_grupo_proced_post_w
				from	estrutura_procedimento_v
				where	cd_procedimento = cd_procedimento_post_w
				and	ie_origem_proced = ie_origem_proced_post_w;
				open C02;
				loop
				fetch C02 into
					nr_seq_regra_w;
				EXIT WHEN NOT FOUND; /* apply on C02 */
					begin
					select	count(*)
					into STRICT	qt_item_regra_w
					from	ageint_regra_exame_prior
					where	nr_sequencia = nr_seq_regra_w
					and	((cd_area_procedimento = cd_area_proced_post_w) or (coalesce(cd_area_procedimento::text, '') = ''))
					and	((cd_especialidade = cd_espec_proced_post_w) or (coalesce(cd_especialidade::text, '') = ''))
					and	((cd_grupo_proc = cd_grupo_proced_post_w) or (coalesce(cd_grupo_proc::text, '') = ''))
					and	((cd_procedimento = cd_procedimento_post_w) or (coalesce(cd_procedimento::text, '') = ''))
					and	((coalesce(cd_procedimento::text, '') = '') or ((ie_origem_proced = ie_origem_proced_post_w) or (coalesce(ie_origem_proced::text, '') = '')))
					and	((nr_seq_proc_interno = nr_seq_proc_interno_post_w) or (coalesce(nr_seq_proc_interno::text, '') = ''));
					if (qt_item_regra_w	> 0) then
						ds_mensagem_w	:= wheb_mensagem_pck.get_texto(790842);
					end if;
					end;
				end loop;
				close C02;
				end;
			end loop;
			close C04;
		end if;
	end if;
end if;

ds_mensagem_p	:= ds_mensagem_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_consistir_prior_exame ( nr_Seq_Ageint_p bigint, nr_seq_ageint_item_p bigint, dt_marcacao_p timestamp, ds_mensagem_p INOUT text, nm_usuario_p text) FROM PUBLIC;

