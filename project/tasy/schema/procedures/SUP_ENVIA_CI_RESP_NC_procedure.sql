-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sup_envia_ci_resp_nc ( nr_seq_nc_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
 
 
nr_seq_classif_w			bigint;
cd_estabelecimento_w		bigint;
nr_seq_regra_w			bigint;
nr_seq_comunic_w			bigint;
ds_titulo_w			varchar(80);
ds_comunic_w			varchar(2000);
nm_usuarios_w			varchar(4000);
nm_usuario_w			varchar(15);
nm_usuario_adic_w			varchar(2000);
ds_setor_adicional_w		varchar(2000);
cd_perfil_w			varchar(10);
ie_ci_lida_w			varchar(1);
cd_setor_regra_usuario_w		integer;
cd_pessoa_responsavel_w		varchar(10);
cd_setor_responsavel_w		bigint;
ie_usuario_w			varchar(15);

c01 CURSOR FOR 
SELECT	b.nr_sequencia, 
	b.cd_perfil 
from	regra_envio_comunic_compra a, 
	regra_envio_comunic_evento b 
where	a.nr_sequencia = b.nr_seq_regra 
and	a.cd_funcao = 981 
and	b.cd_evento = 68 
and	b.ie_situacao = 'A' 
and	a.cd_estabelecimento = 	cd_estabelecimento_w 
and	substr(obter_se_envia_ci_regra_compra(b.nr_sequencia,nr_seq_nc_p,'PC',obter_perfil_ativo,nm_usuario_p,null),1,1) = 'S';

c02 CURSOR FOR 
SELECT	a.cd_setor_atendimento 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w 
and	(a.cd_setor_atendimento IS NOT NULL AND a.cd_setor_atendimento::text <> '') 
group by	a.cd_setor_atendimento;

c03 CURSOR FOR 
SELECT	a.ie_usuario 
from	regra_envio_comunic_usu a 
where	a.nr_seq_evento = nr_seq_regra_w 
and	(a.ie_usuario IS NOT NULL AND a.ie_usuario::text <> '') 
group by	a.ie_usuario;


BEGIN 
 
select	cd_pessoa_resp, 
	cd_setor_resp, 
	cd_estabelecimento 
into STRICT	cd_pessoa_responsavel_w, 
	cd_setor_responsavel_w, 
	cd_estabelecimento_w 
from	nc_curva_abc 
where	nr_sequencia = nr_seq_nc_p;
 
if (cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> '') then 
	select	nm_usuario 
	into STRICT	nm_usuario_w 
	from	usuario 
	where	cd_pessoa_fisica = cd_pessoa_responsavel_w;
end if;
 
if (cd_setor_responsavel_w IS NOT NULL AND cd_setor_responsavel_w::text <> '') then 
	ds_setor_adicional_w	:= (cd_setor_responsavel_w || ',');
end if;
 
open c01;
loop 
fetch c01 into 
	nr_seq_regra_w, 
	cd_perfil_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin 
 
	select	nextval('comunic_interna_seq') 
	into STRICT	nr_seq_comunic_w 
	;
 
	select	obter_classif_comunic('F') 
	into STRICT	nr_seq_classif_w 
	;
 
	select	substr(obter_dados_regra_com_compra(nr_seq_nc_p, null, 981, 68, nr_seq_regra_w,'T'),1,80), 
		substr(obter_dados_regra_com_compra(nr_seq_nc_p, null, 981, 68, nr_seq_regra_w,'M'),1,2000) 
	into STRICT	ds_titulo_w, 
		ds_comunic_w 
	;
 
	select	coalesce(ie_ci_lida,'N') 
	into STRICT	ie_ci_lida_w 
	from 	regra_envio_comunic_evento 
	where 	nr_sequencia = nr_seq_regra_w;
 
	if (cd_perfil_w IS NOT NULL AND cd_perfil_w::text <> '') then 
		cd_perfil_w := cd_perfil_w ||',';
	end if;
 
	open c02;
	loop 
	fetch c02 into	 
		cd_setor_regra_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin 
		if (cd_setor_regra_usuario_w <> 0) then 
			ds_setor_adicional_w := substr(ds_setor_adicional_w || cd_setor_regra_usuario_w || ',',1,2000);
		end if;
		end;
	end loop;
	close c02;
 
	select	nm_usuarios_adic 
	into STRICT	nm_usuario_adic_w 
	from	regra_envio_comunic_evento 
	where	nr_sequencia = nr_seq_regra_w;
 
	open c03;
	loop 
	fetch c03 into 
		ie_usuario_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */
		begin 
		if (ie_usuario_w = 'RNC') then 
			begin 
			if (cd_pessoa_responsavel_w IS NOT NULL AND cd_pessoa_responsavel_w::text <> '') then 
				nm_usuarios_w	:= nm_usuario_w || ',';
			else 
				ds_setor_adicional_w	:= substr(ds_setor_adicional_w || cd_setor_responsavel_w || ',',1,2000);
			end if;			
			end;
		end if;
		end;
	end loop;
	close c03;
 
	nm_usuarios_w	:= substr(nm_usuarios_w || nm_usuario_adic_w,1,4000);
 
	if (nm_usuarios_w IS NOT NULL AND nm_usuarios_w::text <> '') or (cd_setor_responsavel_w IS NOT NULL AND cd_setor_responsavel_w::text <> '') then 
		begin 
		insert into comunic_interna(	 
				cd_estab_destino,			dt_comunicado,			ds_titulo, 
				ds_comunicado,			nm_usuario,			dt_atualizacao,			 
				ie_geral,				nm_usuario_destino,		nr_sequencia, 
				ie_gerencial,			nr_seq_classif,			dt_liberacao, 
				ds_perfil_adicional,			ds_setor_adicional) 
			values (	cd_estabelecimento_w,		clock_timestamp(),				ds_titulo_w, 
				ds_comunic_w,			nm_usuario_p,			clock_timestamp(), 
				'N',				nm_usuarios_w,			nr_seq_comunic_w, 
				'N',				nr_seq_classif_w,			clock_timestamp(), 
				cd_perfil_w,			ds_setor_adicional_w);
 
 
		/*Para que a comunicação seja gerada como lida ao próprio usuário */
 
		if (ie_ci_lida_w = 'S') then 
			insert into comunic_interna_lida(nr_sequencia,nm_usuario,dt_atualizacao)values (nr_seq_comunic_w,nm_usuario_p,clock_timestamp());
		end if;
		end;
	end if;	
 
	end;
end loop;
 
close c01;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sup_envia_ci_resp_nc ( nr_seq_nc_p bigint, nm_usuario_p text) FROM PUBLIC;

