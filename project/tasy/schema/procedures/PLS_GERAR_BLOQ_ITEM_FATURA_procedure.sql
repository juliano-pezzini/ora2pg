-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_bloq_item_fatura ( nr_seq_pls_fatura_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, ie_opcao_p text, ie_bloquear_p text, nm_usuario_p text) AS $body$
DECLARE


/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
OPS - Seleção de Itens da Contestação / OPS - Controle de Contestações
Finalidade: Bloquear/desbloquear os itens da fatura
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------
Pontos de atenção: Não pode ter COMMIT.

ie_opcao_p
D - Desbloquear
B - Bloquear
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/nr_seq_fat_proc_w		bigint;
nr_seq_fat_mat_w		bigint;
nr_seq_conta_pos_estab_w	bigint;

C01 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_conta_pos_estabelecido a
	where	a.nr_seq_conta_proc = nr_seq_conta_proc_p
	and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));

C02 CURSOR FOR
	SELECT	a.nr_sequencia
	from	pls_conta_pos_estabelecido a
	where	a.nr_seq_conta_mat = nr_seq_conta_mat_p
	and	((ie_situacao	= 'A') or (coalesce(ie_situacao::text, '') = ''));


BEGIN
if (upper(ie_opcao_p) = 'B') then
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		open C01;
		loop
		fetch C01 into
			nr_seq_conta_pos_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			select	max(d.nr_sequencia)
			into STRICT	nr_seq_fat_proc_w
			from	pls_fatura_proc		d,
				pls_fatura_conta 	c,
				pls_fatura_evento 	b,
				pls_fatura 		a
			where	a.nr_sequencia			= b.nr_seq_fatura
			and	b.nr_sequencia			= c.nr_seq_fatura_evento
			and	c.nr_sequencia			= d.nr_seq_fatura_conta
			and	d.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	a.nr_sequencia			= nr_seq_pls_fatura_p;

			update	pls_fatura_proc
			set	ie_liberado	= 'N'
			where	nr_sequencia	= nr_seq_fat_proc_w;
			end;
		end loop;
		close C01;
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		open C02;
		loop
		fetch C02 into
			nr_seq_conta_pos_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	max(d.nr_sequencia)
			into STRICT	nr_seq_fat_mat_w
			from	pls_fatura_mat		d,
				pls_fatura_conta 	c,
				pls_fatura_evento 	b,
				pls_fatura 		a
			where	a.nr_sequencia			= b.nr_seq_fatura
			and	b.nr_sequencia			= c.nr_seq_fatura_evento
			and	c.nr_sequencia			= d.nr_seq_fatura_conta
			and	d.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	a.nr_sequencia			= nr_seq_pls_fatura_p;

			update	pls_fatura_mat
			set	ie_liberado	= 'N'
			where	nr_sequencia	= nr_seq_fat_mat_w;
			end;
		end loop;
		close C02;
	end if;

elsif (upper(ie_opcao_p) = 'D') then
	if (nr_seq_conta_proc_p IS NOT NULL AND nr_seq_conta_proc_p::text <> '') then
		open C01;
		loop
		fetch C01 into
			nr_seq_conta_pos_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			select	max(d.nr_sequencia)
			into STRICT	nr_seq_fat_proc_w
			from	pls_fatura_proc		d,
				pls_fatura_conta 	c,
				pls_fatura_evento 	b,
				pls_fatura 		a
			where	a.nr_sequencia			= b.nr_seq_fatura
			and	b.nr_sequencia			= c.nr_seq_fatura_evento
			and	c.nr_sequencia			= d.nr_seq_fatura_conta
			and	d.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	a.nr_sequencia			= nr_seq_pls_fatura_p;

			update	pls_fatura_proc
			set	ie_liberado	= 'S'
			where	nr_sequencia	= nr_seq_fat_proc_w;
			end;
		end loop;
		close C01;
	elsif (nr_seq_conta_mat_p IS NOT NULL AND nr_seq_conta_mat_p::text <> '') then
		open C02;
		loop
		fetch C02 into
			nr_seq_conta_pos_estab_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
			begin
			select	max(d.nr_sequencia)
			into STRICT	nr_seq_fat_mat_w
			from	pls_fatura_mat		d,
				pls_fatura_conta 	c,
				pls_fatura_evento 	b,
				pls_fatura 		a
			where	a.nr_sequencia			= b.nr_seq_fatura
			and	b.nr_sequencia			= c.nr_seq_fatura_evento
			and	c.nr_sequencia			= d.nr_seq_fatura_conta
			and	d.nr_seq_conta_pos_estab	= nr_seq_conta_pos_estab_w
			and	a.nr_sequencia			= nr_seq_pls_fatura_p;

			update	pls_fatura_mat
			set	ie_liberado	= 'S'
			where	nr_sequencia	= nr_seq_fat_mat_w;
			end;
		end loop;
		close C02;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_bloq_item_fatura ( nr_seq_pls_fatura_p bigint, nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, ie_opcao_p text, ie_bloquear_p text, nm_usuario_p text) FROM PUBLIC;

