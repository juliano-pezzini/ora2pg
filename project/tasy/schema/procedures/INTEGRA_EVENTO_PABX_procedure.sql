-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE integra_evento_pabx ( nr_seq_interno_p bigint, cd_usuario_p text, cd_status_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
nm_usuario_w			varchar(15);
cd_unidade_basica_w		varchar(10);
cd_unidade_compl_w		varchar(10);
cd_setor_atendimento_w		integer;
nr_seq_gv_w			bigint;
evt_integ_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_seq_interno_w		bigint;
ie_aguarda_hig_w		varchar(1);
ie_verificar_pac_leito_w	varchar(1);
ie_pac_leito_w			varchar(1) := 'N';
qt_tempo_prev_higien_w		smallint;
ie_status_anterior_isol_w	varchar(1);
ie_status_anterior_hig_w	varchar(3);
nr_seq_unidade_w		bigint;
nr_atendimento_w		bigint;
ie_paciente_isolado_w		varchar(1);

c01 CURSOR FOR 
	SELECT	qt_tempo_prev_higien 
	from	regra_integracao_eritel 
	where	ie_isolamento = ie_status_anterior_isol_w 
	and	coalesce(ie_situacao,'A') = 'A' 
	order by 1;


BEGIN 
select	max(a.nm_usuario), 
	max(b.cd_pessoa_fisica) 
into STRICT	nm_usuario_w, 
	cd_pessoa_fisica_w 
from	usuario a, 
	pessoa_fisica b 
where 	a.cd_pessoa_fisica	= b.cd_pessoa_fisica 
and	b.cd_funcionario	= cd_usuario_p;
 
 
ie_verificar_pac_leito_w := obter_param_usuario(3111, 266, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_verificar_pac_leito_w);	
ie_aguarda_hig_w := obter_param_usuario(75, 145, obter_perfil_ativo, nm_usuario_w, cd_estabelecimento_p, ie_aguarda_hig_w);
 
if (coalesce(nr_seq_interno_p,0) = 0 ) then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(0); -- deve informar o leito 
end if;
 
if (cd_status_p = 'H') then -- Higienização 
	begin 
	 
	if (ie_verificar_pac_leito_w = 'N') then 
	 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_pac_leito_w 
		from	unidade_atendimento 
		where	nr_seq_interno = nr_seq_interno_p 
		and	(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '');
		 
		if (ie_pac_leito_w = 'S') then 
			CALL wheb_mensagem_pck.exibir_mensagem_abort(238384);
		end if;
	end if;
	 
	select	max(nr_atendimento) 
	into STRICT	nr_atendimento_w 
	from	unidade_atend_hist a 
	where	a.nr_seq_unidade = nr_seq_interno_p 
	and		a.dt_historico = (	SELECT 	max(x.dt_historico) 
						from	unidade_atend_hist x 
						where	a.nr_seq_unidade = x.nr_seq_unidade 
						and		x.ie_status_unidade <> 'a' 
							 );
							 
	select	max(ie_paciente_isolado) 
	into STRICT	ie_paciente_isolado_w 
	from	atendimento_paciente 
	where	nr_atendimento = nr_atendimento_w;
	 
	if (ie_paciente_isolado_w = 'S') then 
		ie_status_anterior_isol_w	:= 'S';
	else 
		ie_status_anterior_isol_w	:= 'N';
	end if;	
	 
	open c01;
	loop 
	fetch c01 into	 
		qt_tempo_prev_higien_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin 
		qt_tempo_prev_higien_w	:= qt_tempo_prev_higien_w;
		end;
	end loop;
	close c01;
		 
	update	unidade_atendimento 
	set	nm_usuario_higienizacao	= nm_usuario_w, 
		dt_inicio_higienizacao	= clock_timestamp(), 
		dt_higienizacao		 = NULL, 
		ie_status_unidade	= 'H', 
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario), 
		qt_tempo_prev_higien	= coalesce(qt_tempo_prev_higien_w,'') 
	where	nr_seq_interno		= nr_seq_interno_p;
	 
	commit;
 
	select 	max(b.nr_sequencia) 
	into STRICT	nr_seq_gv_w 
	from	sl_unid_atend b 
	where	trunc(b.dt_prevista) = trunc(clock_timestamp()) 
	and 	b.nr_seq_unidade = nr_seq_interno_p 
	and	coalesce(b.dt_inicio::text, '') = '';
	/* 
	if (nr_seq_gv_w > 0) then 
		gerar_dados_gestao_servico(nr_seq_gv_w, sysdate,sysdate,cd_pessoa_fisica_w,'I','',cd_pessoa_fisica_w,null,null,null,evt_integ_w); 
	end if; 
	*/
 
	end;
	 
elsif	((cd_status_p = 'L') or (cd_status_p = 'R')) then -- Livre 
--((cd_evento_p = 15) or ((evt_integ_w > 0) and (evt_integ_w = 2))) then 
	begin 
	 
	if (ie_verificar_pac_leito_w = 'N') then 
	 
		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END  
		into STRICT	ie_pac_leito_w 
		from	unidade_atendimento 
		where	nr_seq_interno = nr_seq_interno_p 
		and	(nr_atendimento IS NOT NULL AND nr_atendimento::text <> '');
		 
		if (ie_pac_leito_w = 'S') then 
			CALL Wheb_mensagem_pck.exibir_mensagem_abort(238384);
		end if;
	end if;
	 
	update	unidade_atendimento 
	set	nm_usuario_fim_higienizacao	= nm_usuario_w, 
		dt_higienizacao		= clock_timestamp(), 
		ie_status_unidade	= CASE WHEN coalesce(cd_paciente_reserva,nm_pac_reserva) = NULL THEN  'L'  ELSE 'R' END , 
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario) 
	where	nr_seq_interno = nr_seq_interno_p;
	 
	commit;
 
	select 	max(b.nr_sequencia) 
	into STRICT	nr_seq_gv_w 
	from	sl_unid_atend b 
	where	trunc(b.dt_prevista) = trunc(clock_timestamp()) 
	and 	b.nr_seq_unidade = nr_seq_interno_p 
	and	(b.dt_inicio IS NOT NULL AND b.dt_inicio::text <> '') 
	and 	coalesce(b.dt_fim::text, '') = '';
	/* 
	if (nr_seq_gv_w > 0) then 
		gerar_dados_gestao_servico(nr_seq_gv_w, sysdate,sysdate,cd_pessoa_fisica_w,'F','',cd_pessoa_fisica_w,null,null,null,evt_integ_w); 
	end if; 
	*/
 
	end;
 
elsif (cd_status_p = 'C') then -- Chamado manutenção 
	update	unidade_atendimento 
	set	ie_status_unidade	= 'C', 
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario) 
	where	nr_seq_interno = nr_seq_interno_p 
	and	coalesce(nr_atendimento::text, '') = '';
 
elsif (cd_status_p = 'E') then -- Manutenção 
	update	unidade_atendimento 
	set	ie_status_unidade	= 'E', 
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario) 
	where	nr_seq_interno = nr_seq_interno_p 
	and	coalesce(nr_atendimento::text, '') = '';
 
elsif (cd_status_p = 'G') then -- Aguardando higienização 
	 
 
	if (ie_aguarda_hig_w = 'S') then 
		update	unidade_atendimento 
		set	ie_status_unidade	= 'G', 
			nm_usuario		= coalesce(nm_usuario_w,nm_usuario) 
		where	nr_seq_interno = nr_seq_interno_p 
		and	coalesce(nr_atendimento::text, '') = '';
	else 
		update	unidade_atendimento 
		set	ie_status_unidade	= CASE WHEN coalesce(cd_paciente_reserva,nm_pac_reserva) = NULL THEN  'L'  ELSE 'R' END , 
			nm_usuario		= coalesce(nm_usuario_w,nm_usuario) 
		where	nr_seq_interno = nr_seq_interno_p 
		and	coalesce(nr_atendimento::text, '') = '';
	end if;
	 
	commit;
	 
	select	nr_seq_interno 
	into STRICT	nr_seq_interno_w 
	from	unidade_atendimento 
	where	nr_seq_interno = nr_seq_interno_p;
 
	CALL gerar_higienizacao_leito_unid(clock_timestamp(), nm_usuario_w,cd_estabelecimento_p, 'FM', nr_seq_interno_p, null);		
elsif (cd_status_p in ('I','O')) then -- Interditado, Isolamento 
 
	update	unidade_atendimento 
	set	ie_status_unidade	= cd_status_p, 
		nm_usuario		= coalesce(nm_usuario_w,nm_usuario) 
	where	nr_seq_interno = nr_seq_interno_p 
	and	coalesce(nr_atendimento::text, '') = '';
	 
	commit;
 
end if;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE integra_evento_pabx ( nr_seq_interno_p bigint, cd_usuario_p text, cd_status_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

