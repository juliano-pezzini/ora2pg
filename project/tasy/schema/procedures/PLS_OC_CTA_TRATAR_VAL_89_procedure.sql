-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_oc_cta_tratar_val_89 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:  Validar regime de internação
-------------------------------------------------------------------------------------------------------------------
Locais de chamada direta:
[ X]  Objetos do dicionário [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatórios [ ] Outros:
*/
dados_tb_sel_w			pls_tipos_ocor_pck.dados_table_selecao_ocor;
dados_tb_selecao_w		pls_tipos_ocor_pck.dados_table_selecao_ocor;
nr_idx_w			integer := 0;
ie_regime_internacao_w		pls_oc_cta_regra_inter.ie_regime_internacao%type;
qt_minina_w			pls_oc_cta_regra_inter.qt_minina%type;
qt_maxima_w			pls_oc_cta_regra_inter.qt_maxima%type;
qt_horas_w			double precision;

ie_regime_internacao_conta_w	pls_conta.ie_regime_internacao%type;
dt_entrada_conta_w		timestamp;
dt_alta_conta_w			timestamp;
nr_seq_conta_prin_w		pls_conta.nr_sequencia%type;


C01 CURSOR(	nr_seq_oc_cta_comb_p	dados_regra_p.nr_sequencia%type) FOR
	SELECT	a.ie_valida,
		a.nr_seq_regra_reg_int,
		a.ie_dados_cta_pric
	from	pls_oc_cta_val_inter a
	where	a.nr_seq_oc_cta_comb	= nr_seq_oc_cta_comb_p;

C02 CURSOR(	nr_id_transacao_pc	pls_oc_cta_selecao_ocor_v.nr_id_transacao%type) FOR
	SELECT	sel.nr_sequencia nr_seq_selecao,
		conta.ie_regime_internacao,
		conta.ie_regime_internacao_imp,
		conta.dt_entrada,
		conta.dt_entrada_imp,
		conta.dt_alta,
		conta.dt_alta_imp,
		conta.nr_sequencia nr_seq_conta
	from	pls_oc_cta_selecao_ocor_v	sel,
		pls_conta_v			conta
	where	sel.nr_id_transacao	= nr_id_transacao_pc
	and	sel.ie_valido		= 'S'
	and	conta.nr_sequencia	= sel.nr_seq_conta;
BEGIN

-- Deve existir informação da regra para aplicar a validação
if (dados_regra_p.nr_sequencia IS NOT NULL AND dados_regra_p.nr_sequencia::text <> '') then

	for	r_C01_w in C01(dados_regra_p.nr_sequencia) loop

		/*Verifica se é para validar a ocorrência*/

		if (r_C01_w.ie_valida = 'S') and (r_C01_w.nr_seq_regra_reg_int IS NOT NULL AND r_C01_w.nr_seq_regra_reg_int::text <> '') then

			CALL pls_tipos_ocor_pck.atualiza_campo_auxiliar('V', nr_id_transacao_p, null, dados_regra_p);
			pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_sel_w);

			--Busca os dados da regra
			select	a.ie_regime_internacao,
				a.qt_minina,
				coalesce(a.qt_maxima,0)
			into STRICT	ie_regime_internacao_w,
				qt_minina_w,
				qt_maxima_w
			from	pls_oc_cta_regra_inter a
			where	a.nr_sequencia	= r_C01_w.nr_seq_regra_reg_int;

			for r_C02_w in C02(nr_id_transacao_p) loop
				--Caso não for buscar da conta principal
				if (r_C01_w.ie_dados_cta_pric = 'N') then
					if (dados_regra_p.ie_evento <> 'IMP') then
						ie_regime_internacao_conta_w	:= r_C02_w.ie_regime_internacao;
						dt_entrada_conta_w		:= r_C02_w.dt_entrada;
						dt_alta_conta_w			:= r_C02_w.dt_alta;
					elsif (dados_regra_p.ie_evento = 'IMP') then
						ie_regime_internacao_conta_w	:= r_C02_w.ie_regime_internacao_imp;
						dt_entrada_conta_w		:= r_C02_w.dt_entrada_imp;
						dt_alta_conta_w			:= r_C02_w.dt_alta_imp;
					end if;
				else
					--Busca da conta principal
					nr_seq_conta_prin_w	:= pls_obter_conta_princ_atend(r_C02_w.nr_seq_conta,null,nm_usuario_p);

					if (nr_seq_conta_prin_w IS NOT NULL AND nr_seq_conta_prin_w::text <> '') then
						select	ie_regime_internacao,
							dt_entrada,
							dt_alta
						into STRICT	ie_regime_internacao_conta_w,
							dt_entrada_conta_w,
							dt_alta_conta_w
						from	pls_conta_v
						where	nr_sequencia	= nr_seq_conta_prin_w;
					end if;

				end if;

				--Verifica o tipo de evento, caso for importação então busca do campo de importação, senão busca da regime de internação normal
				if (ie_regime_internacao_w = ie_regime_internacao_conta_w) then

					--Calcula a hora de internação
					qt_horas_w	:= trunc(((dt_alta_conta_w - dt_entrada_conta_w) * 24),2);

					--Caso a quantidade de horas não esteja conforme a regra, então lança a ocorrência
					if	((qt_horas_w < qt_minina_w) or (qt_maxima_w > 0) and (qt_horas_w > qt_maxima_w)) then
						dados_tb_selecao_w.ie_valido(nr_idx_w)		:= 'S';
						dados_tb_selecao_w.nr_seq_selecao(nr_idx_w)	:= r_C02_w.nr_seq_selecao;
						dados_tb_selecao_w.ds_observacao(nr_idx_w)	:= 'A conta tem ' || obter_hora_duracao((dt_alta_conta_w - dt_entrada_conta_w) * 1440) || ' horas de internação';


						if (nr_idx_w = pls_util_cta_pck.qt_registro_transacao_w) then
							CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
													'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
							nr_idx_w := 0;
							pls_tipos_ocor_pck.limpar_nested_tables(dados_tb_selecao_w);
						else
							nr_idx_w := nr_idx_w + 1;
						end if;

					end if;
				end if;
			end loop;

			/*Lança as glosas caso existir registros que não foram gerados*/

			if (nr_idx_w > 0)	then
				CALL pls_tipos_ocor_pck.gerencia_selecao_validacao(	dados_tb_selecao_w.nr_seq_selecao, pls_util_cta_pck.clob_table_vazia_w,
										'SEQ', dados_tb_selecao_w.ds_observacao, dados_tb_selecao_w.ie_valido, nm_usuario_p);
			end if;

			CALL pls_tipos_ocor_pck.atualiza_campo_valido('V', nr_id_transacao_p, null, dados_regra_p);
		end if;

	end loop;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_oc_cta_tratar_val_89 ( dados_regra_p pls_tipos_ocor_pck.dados_regra, nr_id_transacao_p pls_oc_cta_selecao_ocor_v.nr_id_transacao%type, nm_usuario_p usuario.nm_usuario%type) FROM PUBLIC;

