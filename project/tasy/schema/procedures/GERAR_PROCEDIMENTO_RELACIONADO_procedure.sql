-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_procedimento_relacionado ( nr_interno_conta_p CONTA_PACIENTE.NR_INTERNO_CONTA%type, nm_usuario_p USUARIO.NM_USUARIO%type ) AS $body$
DECLARE

nr_seq_regra_excl_proc_w	regra_exclusao_proc.nr_sequencia%type;
cd_proced_regra_excl_proc_w	regra_exclusao_proc.cd_procedimento%type;
ie_orig_proc_regra_excl_proc_w	regra_exclusao_proc.ie_origem_proced%type;
cd_mot_exc_regra_excl_proc_w	regra_exclusao_proc.cd_motivo_exc_conta%type;
cd_proced_regra_proc_relac_w 	regra_proc_relacionado.cd_procedimento%type;
ie_ori_proc_regra_proc_relac_w 	regra_proc_relacionado.ie_origem_proced%type;
nr_seq_proc_proced_paciente_w 	procedimento_paciente.cd_procedimento%type;
nr_seq_exame_w			procedimento_paciente.nr_seq_exame%type;
cd_setor_atendimento_w		procedimento_paciente.cd_setor_atendimento%type;
nr_atendimento_w		procedimento_paciente.nr_atendimento%type;
cd_estabelecimento_w		procedimento_paciente.cd_estabelecimento_custo%type;
cd_medico_w			procedimento_paciente.cd_medico%type;
nr_seq_atepacu_w		procedimento_paciente.nr_seq_atepacu%type;
cd_convenio_w			procedimento_paciente.cd_convenio%type;
cd_categoria_w			procedimento_paciente.cd_categoria%type;
nr_seq_proc_relacionar_w	procedimento_paciente.nr_sequencia%type;
ds_observacao_w			procedimento_paciente.ds_observacao%type := null;
qt_procedimentos_regra_w 	bigint := 0;
qt_procedimentos_encontrados_w 	bigint := 0;
nr_row_w			bigint := 1;

c01 CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_procedimento,
		a.ie_origem_proced,
		a.cd_motivo_exc_conta
	from	regra_exclusao_proc a,
		conta_paciente b
	where 	b.nr_interno_conta 	= nr_interno_conta_p
	and	b.cd_convenio_parametro = a.cd_convenio
	and	a.ie_situacao 		= 'A'
	order by a.nr_sequencia;

c02 CURSOR FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced
	from	regra_proc_relacionado a
	where	a.nr_seq_regra_excl 	= nr_seq_regra_excl_proc_w
	and 	a.ie_situacao 		= 'A';

type tb_proc_item 	is table of bigint index by integer;
row_proc_item_w		tb_proc_item;


BEGIN
open c01;
loop
fetch c01 into 	nr_seq_regra_excl_proc_w,
		cd_proced_regra_excl_proc_w,
		ie_orig_proc_regra_excl_proc_w,
		cd_mot_exc_regra_excl_proc_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
		--somente procedimentos de origem 1 (amb) e 4 (proprio)
		if (ie_orig_proc_regra_excl_proc_w  (1, 4)) then
			qt_procedimentos_regra_w := 0;
			qt_procedimentos_encontrados_w := 0;
			open c02;
			loop
			fetch c02 into 	cd_proced_regra_proc_relac_w,
					ie_ori_proc_regra_proc_relac_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
			    begin
				qt_procedimentos_regra_w := qt_procedimentos_regra_w + 1;
				select 	max(a.nr_sequencia)
				into STRICT 	nr_seq_proc_proced_paciente_w
				from 	procedimento_paciente a
				where 	a.nr_interno_conta 	= nr_interno_conta_p
				and 	a.cd_procedimento 	= cd_proced_regra_proc_relac_w
				and 	a.ie_origem_proced 	= ie_ori_proc_regra_proc_relac_w
				and 	coalesce(a.cd_motivo_exc_conta::text, '') = '';

				if (coalesce(nr_seq_proc_proced_paciente_w::text, '') = '') then
				    exit;
				else
				    begin
					qt_procedimentos_encontrados_w := qt_procedimentos_encontrados_w + 1;
					row_proc_item_w(nr_row_w) := nr_seq_proc_proced_paciente_w;
					nr_row_w := nr_row_w + 1;
				    end;
				end if;
			    end;
			end loop;

			if (qt_procedimentos_regra_w = qt_procedimentos_encontrados_w) then
				select	a.nr_seq_exame,
					a.cd_setor_atendimento,
					a.nr_atendimento,
					b.cd_estabelecimento,
					a.cd_medico,
					a.nr_seq_atepacu,
					a.cd_convenio,
					a.cd_categoria
				into STRICT	nr_seq_exame_w,
					cd_setor_atendimento_w,
					nr_atendimento_w,
					cd_estabelecimento_w,
					cd_medico_w,
					nr_seq_atepacu_w,
					cd_convenio_w,
					cd_categoria_w
				from	procedimento_paciente a,
					conta_paciente b
				where	b.nr_interno_conta 	= nr_interno_conta_p
				and 	a.nr_interno_conta 	= b.nr_interno_conta
				and 	a.cd_procedimento 	= cd_proced_regra_proc_relac_w
				and 	a.ie_origem_proced 	= ie_ori_proc_regra_proc_relac_w;

				ds_observacao_w := substr(obter_desc_expressao(1038546) || ' ' || nr_seq_regra_excl_proc_w, 1, 255);

				nr_sequencia_p		=> nr_seq_proc_relacionar_w := inserir_procedimento_paciente(
					cd_procedimento_p	=> cd_proced_regra_excl_proc_w, qt_procedimento_p	=> 1, nr_seq_exame_p		=> null, nr_seq_proc_interno_p	=> null, ie_origem_proced_p	=> ie_orig_proc_regra_excl_proc_w, cd_setor_atendimento_p  => cd_setor_atendimento_w, nr_atendimento_p	=> nr_atendimento_w, cd_estabelecimento_p	=> cd_estabelecimento_w, nm_usuario_p		=> nm_usuario_p, ie_tipo_baixa_p		=> null, ie_valor_informado_p	=> 'N', cd_medico_p		=> cd_medico_w, nr_seq_atepacu_p	=> nr_seq_atepacu_w, dt_procedimento_p	=> clock_timestamp(), cd_convenio_p		=> cd_convenio_w, cd_categoria_p		=> cd_categoria_w, nr_sequencia_p		=> nr_seq_proc_relacionar_w, ds_observacao_p		=> ds_observacao_w);

				if (cd_mot_exc_regra_excl_proc_w IS NOT NULL AND cd_mot_exc_regra_excl_proc_w::text <> '') then
					forall i in 1 .. row_proc_item_w.count
						update  procedimento_paciente
						set 	cd_motivo_exc_conta 	= cd_mot_exc_regra_excl_proc_w,
							ds_observacao 		= substr(obter_desc_expressao(1038554) || ' ' || row_proc_item_w(i), 1, 255)
						where	nr_sequencia 		= row_proc_item_w(i);
				end if;

				commit;
			end if;
			close c02;
		end if;
	end;
end loop;
close c01;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_procedimento_relacionado ( nr_interno_conta_p CONTA_PACIENTE.NR_INTERNO_CONTA%type, nm_usuario_p USUARIO.NM_USUARIO%type ) FROM PUBLIC;

