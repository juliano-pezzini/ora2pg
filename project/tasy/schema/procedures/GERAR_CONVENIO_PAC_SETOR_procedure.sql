-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_convenio_pac_setor ( nr_seq_paciente_p bigint, nm_usuario_p text) AS $body$
DECLARE


	
cd_pessoa_fisica_w		varchar(10);
nr_atendimento_w		bigint;
cd_convenio_w			bigint;
cd_categoria_w			varchar(10);
cd_plano_w			varchar(10);
cd_usuario_convenio_w		varchar(60);
qt_reg_w			bigint;
ie_tipo_atendimento_w		smallint;
ie_restringe_estabelecimento_w varchar(1);
cd_estabelecimento_w smallint;

	
C01 CURSOR FOR
	SELECT	a.cd_convenio,
		a.cd_categoria,
		a.cd_plano_convenio,
		a.cd_usuario_convenio,
		a.ie_tipo_atendimento
	from	atendimento_paciente_v a
	where	a.cd_pessoa_fisica        = cd_pessoa_fisica_w
	and 	((ie_restringe_estabelecimento_w = 'N') or (a.cd_estabelecimento = cd_estabelecimento_w AND ie_restringe_estabelecimento_w = 'S'))
	order by nr_atendimento;	
	
	
c02 CURSOR FOR
	SELECT	cd_convenio,
		cd_categoria,
		CD_PLANO,
		CD_USUARIO_CONVENIO,
		ie_tipo_atendimento
	from	agenda_consulta a
	where	cd_pessoa_fisica = cd_pessoa_fisica_w
	order by nr_sequencia;
					

BEGIN
cd_estabelecimento_w := wheb_usuario_pck.get_cd_estabelecimento;
ie_restringe_estabelecimento_w := obter_param_usuario(281, 1546, obter_perfil_ativo, wheb_usuario_pck.get_nm_usuario, cd_estabelecimento_w, ie_restringe_estabelecimento_w);
select	max(cd_pessoa_fisica)
into STRICT	cd_pessoa_fisica_w
from	PACIENTE_SETOR
where	nr_seq_paciente	= nr_seq_paciente_p;



if (coalesce(nr_atendimento_w,0)	<> 0) then
	
	select	a.cd_convenio,
		a.cd_categoria,
		a.cd_plano_convenio,
		a.cd_usuario_convenio
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_usuario_convenio_w
	from	atend_categoria_convenio a
	where	a.nr_atendimento        = nr_atendimento_w
	and	 a.nr_seq_interno        = obter_atecaco_atendimento(a.nr_atendimento);
	
else
	open C01;
	loop
	fetch C01 into	
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_usuario_convenio_w,
		ie_tipo_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;
end if;

if (coalesce(cd_convenio_w::text, '') = '') then
	open C02;
	loop
	fetch C02 into	
		cd_convenio_w,
		cd_categoria_w,
		cd_plano_w,
		cd_usuario_convenio_w,
		ie_tipo_atendimento_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
	end loop;
	close C02;
end if;

select	count(*)
into STRICT	qt_reg_w
from	paciente_setor_convenio
where	nr_seq_paciente	= nr_seq_paciente_p;

if (cd_convenio_w IS NOT NULL AND cd_convenio_w::text <> '') and (cd_categoria_w IS NOT NULL AND cd_categoria_w::text <> '') and (qt_reg_w	= 0) then
	
	select	count(*)
	into STRICT	qt_reg_w
	from	convenio_plano
	where	cd_convenio = cd_convenio_w
	and	cd_plano = cd_plano_w;
	
	if (qt_reg_w	= 0) then
		cd_plano_w	:= null;
	end if;
	
	
	insert into paciente_setor_convenio(	nr_sequencia,
							dt_atualizacao,
							nm_usuario,
							dt_atualizacao_nrec,
							nm_usuario_nrec,
							cd_convenio,
							cd_categoria,
							cd_plano,
							cd_usuario_convenio,
							nr_seq_paciente,
							ie_tipo_atendimento)
				values (	nextval('paciente_setor_convenio_seq'),
							clock_timestamp(),
							nm_usuario_p,
							clock_timestamp(),
							nm_usuario_p,
							cd_convenio_w,
							cd_categoria_w,
							cd_plano_w,
							cd_usuario_convenio_w,
							nr_seq_paciente_p,
							ie_tipo_atendimento_w);
	commit;
	
end if;



end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_convenio_pac_setor ( nr_seq_paciente_p bigint, nm_usuario_p text) FROM PUBLIC;

