-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consisite_exigencia_analis ( nr_seq_proposta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE

			
qt_idade_w			bigint;
ie_exige_analise_w		varchar(10);
ds_erro_w			varchar(4000);
nr_seq_beneficiario_w		bigint;
qt_registros_w			bigint;
ie_exige_declaracao_saude_w	varchar(10);
ie_pessoa_contrato_w		varchar(10);
ie_tipo_operacao_w		pls_plano.ie_tipo_operacao%type;
ie_segmentacao_w		pls_plano.ie_segmentacao%type;

C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		coalesce(a.ie_exige_declaracao_saude,'N'),
		obter_idade_pf(a.cd_beneficiario,clock_timestamp(),'A'),
		b.ie_tipo_operacao,
		b.ie_segmentacao
	from	pls_proposta_beneficiario a,
		pls_plano b
	where	b.nr_sequencia		= a.nr_seq_plano
	and	a.nr_seq_proposta	= nr_seq_proposta_p
	and	coalesce(a.dt_cancelamento::text, '') = '';

C02 CURSOR FOR
	SELECT	ie_exige_analise
	from	pls_regra_exig_analise
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	ie_situacao		= 'A'
	and	qt_idade_w	between coalesce(qt_idade_inicial,0) and coalesce(qt_idade_final,999)
	and	((ie_declaracao_saude	= ie_exige_declaracao_saude_w) or (ie_declaracao_saude = 'A'))
	and	((ie_tipo_operacao	= ie_tipo_operacao_w) or (coalesce(ie_tipo_operacao::text, '') = ''))
	and	((ie_tipo_proposta	= ie_pessoa_contrato_w) or (ie_tipo_proposta = 'A'))
	and	((ie_segmentacao	= ie_segmentacao_w) or (coalesce(ie_segmentacao::text, '') = ''))
	order by coalesce(ie_declaracao_saude, 'A'),
		coalesce(ie_segmentacao, ' '),
		coalesce(ie_tipo_operacao, ' '),
		coalesce(ie_tipo_proposta, 'A');


BEGIN

ie_exige_analise_w	:= 'N';

select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END
into STRICT	ie_pessoa_contrato_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

open C01;
loop
fetch C01 into
	nr_seq_beneficiario_w,
	ie_exige_declaracao_saude_w,
	qt_idade_w,
	ie_tipo_operacao_w,
	ie_segmentacao_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	select	count(*)
	into STRICT	qt_registros_w
	from	pls_analise_adesao
	where	nr_seq_pessoa_proposta	= nr_seq_beneficiario_w;
	
	if (ie_exige_analise_w = 'N') and (qt_registros_w = 0) then
		open C02;
		loop
		fetch C02 into
			ie_exige_analise_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */
		end loop;
		close C02;
	end if;
	
	end;
end loop;
close C01;

if (ie_exige_analise_w = 'S') then
	ds_erro_w	:= wheb_mensagem_pck.get_texto(280916);
end if;

ds_erro_p	:= substr(ds_erro_w,1,255);

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consisite_exigencia_analis ( nr_seq_proposta_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

