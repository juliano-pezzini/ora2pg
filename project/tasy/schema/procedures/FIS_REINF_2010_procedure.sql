-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE fis_reinf_2010 ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


dt_inicial_w		fis_reinf_r2010.dt_competencia%TYPE;
dt_final_w		fis_reinf_r2010.dt_competencia%TYPE;
nr_seq_nfs_w		nota_fiscal.nr_sequencia%TYPE;
nr_nota_fiscal_w	nota_fiscal.nr_nota_fiscal%TYPE;
cd_serie_nf_w		nota_fiscal.cd_serie_nf%TYPE;
cd_cnpj_w			nota_fiscal.cd_cgc_emitente%TYPE;
cd_ind_obra_w		nota_fiscal.cd_ind_obra%type;
vl_bruto_nf_w		nota_fiscal.vl_mercadoria%TYPE;
vl_base_trib_inss_w	nota_fiscal_trib.vl_base_calculo%TYPE;
vl_retencao_inss_w	nota_fiscal_trib.vl_tributo%TYPE;
cd_tributo_w		fis_reinf_r2010.cd_tributo%TYPE;
vl_n_retencao_inss_w    nota_fiscal_trib.vl_tributo%TYPE;
tx_tributo_w		nota_fiscal_trib.tx_tributo%TYPE;
vl_ret_subcontratado_w	nota_fiscal_trib.vl_ret_subcontratado%type;
cd_cno_w				nota_fiscal.cd_cno%type;
vl_tributo_inss_w	nota_fiscal_trib.vl_tributo%TYPE;
vl_diferenca_w		nota_fiscal_trib.vl_tributo%TYPE;

C01 CURSOR FOR

SELECT  nr_seq_nfs,
        cd_serie_nota,
        MAX(nr_nota_fiscal) nr_nota_fiscal,
        MAX(cd_cnpj) cd_cnpj,
        MAX(vl_bruto_nf) vl_bruto_nf,
        SUM(vl_base_trib_inss) vl_base_trib_inss,
        sum(vl_n_retencao_inss) vl_n_retencao_inss,
		SUM(vl_retencao_inss) vl_retencao_inss,
		tx_tributo,
		max(coalesce(cd_ind_obra, 0)) cd_ind_obra,
		sum(coalesce(vl_ret_subcontratado, 0)) vl_ret_subcontratado,
		max(cd_cno) cd_cno
FROM (
	SELECT 	a.nr_sequencia nr_seq_nfs,
		obter_dados_nota_fiscal(a.nr_sequencia,'1') cd_serie_nota,
		MAX(SUBSTR(a.nr_nota_fiscal,1,80)) nr_nota_fiscal,
		MAX(a.cd_cgc_emitente) cd_cnpj,
		--MAX(a.vl_mercadoria) vl_bruto_nf,
		max(obter_dados_nota_fiscal(a.nr_sequencia,'45')) vl_bruto_nf,
		SUM(b.vl_base_calculo) vl_base_trib_inss,
		SUM(CASE WHEN obter_se_possui_processo(a.nr_sequencia,nr_sequencia_p,'2010')='S' THEN b.vl_tributo  ELSE 0 END ) vl_n_retencao_inss,
		sum(b.vl_base_calculo * CASE WHEN obter_contribuinte_receita(a.cd_cgc_emitente)=0 THEN  0.11  ELSE 0.035 END ) vl_retencao_inss,
		b.tx_tributo tx_tributo,
		max(a.cd_ind_obra) cd_ind_obra,
		sum(b.vl_ret_subcontratado) vl_ret_subcontratado,
		max(a.cd_cno) cd_cno
	FROM 	nota_fiscal a,
		nota_fiscal_trib b,
		tributo c,
		estabelecimento d
	WHERE 	a.nr_sequencia = b.nr_sequencia
	AND     b.cd_tributo = c.cd_tributo
	AND	a.dt_emissao BETWEEN TO_DATE( dt_inicial_w, 'dd/mm/rrrr HH24:MI:SS')  AND TO_DATE( dt_final_w, 'dd/mm/rrrr HH24:MI:SS')
	AND	a.ie_tipo_nota IN ('EF', 'EN', 'EP') 
	and     (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '')
	and     a.ie_situacao in (1)
	and	b.vl_tributo <> 0
	and     (a.cd_cgc_emitente IS NOT NULL AND a.cd_cgc_emitente::text <> '')
	--and	a.cd_estabelecimento = cd_estabelecimento_p
	and  	a.cd_estabelecimento = d.cd_estabelecimento
	and 	d.cd_cgc = (select cd_cgc from estabelecimento where cd_estabelecimento = cd_estabelecimento_p)
	AND  	c.cd_tributo = cd_tributo_w
	GROUP BY a.nr_sequencia,
		obter_dados_nota_fiscal(a.nr_sequencia,'1'),
		tx_tributo
	
UNION

	SELECT 	a.nr_sequencia nr_seq_nfs,
		obter_dados_nota_fiscal(a.nr_sequencia,'1') cd_serie_nota,
		MAX(SUBSTR(a.nr_nota_fiscal,1,80)) nr_nota_fiscal,
		MAX(a.cd_cgc_emitente) cd_cnpj,
		--MAX(a.vl_mercadoria) vl_bruto_nf,
		max(obter_dados_nota_fiscal(a.nr_sequencia,'45')) vl_bruto_nf,
		SUM(b.vl_base_calculo) vl_base_trib_inss,
		SUM(CASE WHEN obter_se_possui_processo(a.nr_sequencia,nr_sequencia_p,'2010')='S' THEN b.vl_tributo  ELSE 0 END ) vl_n_retencao_inss,
		sum(b.vl_base_calculo * CASE WHEN obter_contribuinte_receita(a.cd_cgc_emitente)=0 THEN  0.11  ELSE 0.035 END ) vl_retencao_inss,
		b.tx_tributo,
		max(a.cd_ind_obra) cd_ind_obra,
		sum(b.vl_ret_subcontratado) vl_ret_subcontratado,
		max(a.cd_cno) cd_cno
	FROM 	nota_fiscal a,
		nota_fiscal_item_trib b,
		tributo c,
		estabelecimento d 
	WHERE 	a.nr_sequencia = b.nr_sequencia
	AND	b.cd_tributo = c.cd_tributo
	AND	a.dt_emissao BETWEEN TO_DATE(dt_inicial_w, 'dd/mm/rrrr HH24:MI:SS') AND TO_DATE( dt_final_w, 'dd/mm/rrrr HH24:MI:SS')
	AND	a.ie_tipo_nota IN ('EF', 'EN', 'EP') 
	and     (a.dt_atualizacao_estoque IS NOT NULL AND a.dt_atualizacao_estoque::text <> '') 
	and     a.ie_situacao in (1)
	and	b.vl_tributo <> 0
	and     (a.cd_cgc_emitente IS NOT NULL AND a.cd_cgc_emitente::text <> '')
	--and	a.cd_estabelecimento = cd_estabelecimento_p
	and  	a.cd_estabelecimento = d.cd_estabelecimento
	and 	d.cd_cgc = (select cd_cgc from estabelecimento where cd_estabelecimento = cd_estabelecimento_p)
	AND	c.cd_tributo = cd_tributo_w
	GROUP BY a.nr_sequencia,
		obter_dados_nota_fiscal(a.nr_sequencia,'1'),  
		tx_tributo
       ) alias55 WHERE vl_retencao_inss > 0
	 AND vl_base_trib_inss > 0
       GROUP BY nr_seq_nfs, cd_serie_nota, tx_tributo
       order by cd_cnpj, nr_seq_nfs;


BEGIN
SELECT 	pkg_date_utils.start_of(a.dt_competencia, 'MONTH', 0)  dt_inicial,
	pkg_date_utils.end_of(a.dt_competencia, 'MONTH', 0) dt_final,
	a.cd_tributo cd_tributo
INTO STRICT	dt_inicial_w,
	dt_final_w,
	cd_tributo_w
FROM	fis_reinf_r2010 a
WHERE 	a.nr_sequencia = nr_sequencia_p;

	OPEN  C01;
	LOOP
	FETCH C01 INTO
		nr_seq_nfs_w,
		cd_serie_nf_w,
		nr_nota_fiscal_w,
		cd_cnpj_w,
		vl_bruto_nf_w,
		vl_base_trib_inss_w,
		vl_n_retencao_inss_w,
		vl_retencao_inss_w,
		tx_tributo_w,
		cd_ind_obra_w,
		vl_ret_subcontratado_w,
		cd_cno_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

	BEGIN	
			select	max(a.vl_tributo)
			into STRICT	vl_tributo_inss_w		
			from (	SELECT	b.vl_tributo vl_tributo
					from	nota_fiscal_trib b,
							tributo c
					where	b.cd_tributo		= c.cd_tributo
					and   	c.ie_tipo_tributo 	= 'INSS' 
					and		b.nr_sequencia		= nr_seq_nfs_w
					
union all

					SELECT	x.vl_tributo vl_tributo				
					from 	nota_fiscal_item_trib x,
							tributo y
					where x.cd_tributo 			= y.cd_tributo
					and   y.ie_tipo_tributo 	= 'INSS' 
					and   x.nr_sequencia 		= nr_seq_nfs_w)  a;


			
			vl_diferenca_w := vl_tributo_inss_w - vl_retencao_inss_w;
			
			if (vl_tributo_inss_w <> 0 and vl_diferenca_w <= 0.01 and vl_diferenca_w >= -0.01 ) then
				vl_retencao_inss_w := vl_tributo_inss_w;
			end if;
				
          	INSERT INTO fis_reinf_notas_r2010(
			nr_sequencia,
			cd_estabelecimento,
			dt_atualizacao,
			nm_usuario,
			vl_bruto_nf,
			vl_base_trib_inss,
			vl_retencao_inss,
			nr_documento,
			nr_seq_superior,
			cd_cnpj,
			nr_seq_nota,
			vl_n_retencao_inss,
			vl_servicos_15,
			vl_servicos_20,
			vl_servicos_25,
			cd_ind_obra,
			vl_ret_subcontratado,
			cd_cno)
		VALUES (	nextval('fis_reinf_notas_r2010_seq'),
			cd_estabelecimento_p,
			clock_timestamp(),
			nm_usuario_p,
			vl_bruto_nf_w,
			vl_base_trib_inss_w,
			vl_retencao_inss_w,
			nr_nota_fiscal_w,
			nr_sequencia_p,
			cd_cnpj_w,
			nr_seq_nfs_w,
			vl_n_retencao_inss_w,
			fis_obter_valor_apo_esp_2010(tx_tributo_w, vl_base_trib_inss_w, 2),
			fis_obter_valor_apo_esp_2010(tx_tributo_w, vl_base_trib_inss_w, 3),
			fis_obter_valor_apo_esp_2010(tx_tributo_w, vl_base_trib_inss_w, 4),
			cd_ind_obra_w,
			vl_ret_subcontratado_w,
			cd_cno_w);

		END;

	END LOOP;
	CLOSE C01;
	
	update	fis_reinf_r2010
	set	dt_geracao = clock_timestamp()
	where 	nr_sequencia = nr_sequencia_p;	
    commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE fis_reinf_2010 ( nr_sequencia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

