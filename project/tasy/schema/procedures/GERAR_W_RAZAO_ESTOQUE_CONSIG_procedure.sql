-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_w_razao_estoque_consig ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, dt_mesano_referencia_fim_p timestamp, cd_local_estoque_p bigint, dt_inicio_movto_p timestamp, dt_fim_movto_p timestamp, cd_material_p bigint, nm_usuario_p text) AS $body$
DECLARE




dt_mesano_referencia_fim_w		timestamp;
dt_movimento_w			timestamp;
qt_movimento_w			double precision;
dt_processo_w			timestamp;
dt_mesano_referencia_w		timestamp;
cd_local_estoque_w		smallint;
cd_local_estoque_ww		smallint;
cd_operacao_estoque_w		smallint;
cd_material_estoque_w		integer;
nr_movimento_estoque_w		bigint;
nr_documento_w			bigint;
dt_mes_ant_w			timestamp;
qt_saldo_ant_w			double precision;
qt_estoque_w			double precision	:= 0;
ie_entrada_saida_w			varchar(1);
cd_acao_w			varchar(1);
vl_custo_medio_w			double precision;
vl_movimento_w			double precision;
vl_estoque_w			double precision;
vl_estoque_ant_w			double precision;
dt_fim_movto_w			timestamp;

c01 CURSOR FOR
SELECT	PKG_DATE_UTILS.start_of(a.dt_movimento_estoque,'dd',0) dt_movimento_estoque,
	coalesce(sum(CASE WHEN a.cd_acao='1' THEN 	CASE WHEN b.ie_entrada_saida='S' THEN (qt_estoque * -1)  ELSE qt_estoque END   ELSE CASE WHEN b.ie_entrada_saida='S' THEN (qt_estoque * -1)  ELSE qt_estoque END  * -1 END ),0) qt_movimento,
	a.dt_processo,
	a.cd_local_estoque,
	a.cd_operacao_estoque,
	b.ie_entrada_saida,
	a.cd_material_estoque,
	a.nr_movimento_estoque,
	a.nr_documento,
	a.cd_acao,
	a.dt_mesano_referencia
from	operacao_estoque b,
	movimento_estoque_v a
where	a.cd_operacao_estoque	= b.cd_operacao_estoque
and	a.cd_material_estoque	= cd_material_p
and	a.cd_local_estoque		= coalesce(cd_local_estoque_ww, a.cd_local_estoque)
and	a.dt_mesano_referencia between dt_mesano_referencia_p and dt_mesano_referencia_fim_p
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	(a.dt_processo IS NOT NULL AND a.dt_processo::text <> '')
and	b.ie_consignado <> '0'
and (a.dt_movimento_estoque <= coalesce(dt_fim_movto_w, a.dt_movimento_estoque))
group by
	PKG_DATE_UTILS.start_of(a.dt_movimento_estoque,'dd',0),
	a.dt_processo,
	a.cd_local_estoque,
	a.cd_operacao_estoque,
	b.ie_entrada_saida,
	a.cd_material_estoque,
	a.nr_movimento_estoque,
	a.nr_documento,
	a.cd_acao,
	a.dt_mesano_referencia
order by
	PKG_DATE_UTILS.start_of(a.dt_movimento_estoque,'dd',0),
	a.dt_processo;


BEGIN

if (coalesce(cd_local_estoque_p,0) = 0) then
	cd_local_estoque_ww := null;
else
	cd_local_estoque_ww := cd_local_estoque_p;
end if;


dt_mes_ant_w	:= PKG_DATE_UTILS.ADD_MONTH(dt_mesano_referencia_p,-1,0);

if (dt_fim_movto_p IS NOT NULL AND dt_fim_movto_p::text <> '') then
	dt_fim_movto_w	:= fim_dia(dt_fim_movto_p);
end if;

qt_saldo_ant_w			:= 0;
vl_estoque_ant_w		:= 0;
qt_estoque_w			:= 0;
vl_estoque_w			:= 0;

delete from w_razao_estoque_consig;
commit;

select	coalesce(sum(qt_estoque),0),
	coalesce(sum(vl_estoque),0)
into STRICT	qt_saldo_ant_w,
	vl_estoque_ant_w
from	fornecedor_mat_consignado
where	cd_estabelecimento		= cd_estabelecimento_p
and	dt_mesano_referencia	= dt_mes_ant_w
and	cd_local_estoque		= coalesce(cd_local_estoque_ww, cd_local_estoque)
and	cd_material		= cd_material_p;

insert into w_razao_estoque_consig(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	ie_tipo_informacao,
	cd_estabelecimento,
	dt_mesano_referencia,
	cd_local_estoque,
	cd_material,
	qt_estoque,
	vl_estoque)
values ( nextval('w_razao_estoque_seq'),
	clock_timestamp(),
	nm_usuario_p,
	0,
	cd_estabelecimento_p,
	dt_mes_ant_w,
	cd_local_estoque_ww,
	cd_material_p,
	qt_saldo_ant_w,
	vl_estoque_ant_w);

qt_estoque_w	:= qt_saldo_ant_w;
vl_estoque_w	:= vl_estoque_ant_w;


open c01;
loop
fetch c01 into
	dt_movimento_w,
	qt_movimento_w,
	dt_processo_w,
	cd_local_estoque_w,
	cd_operacao_estoque_w,
	ie_entrada_saida_w,
	cd_material_estoque_w,
	nr_movimento_estoque_w,
	nr_documento_w,
	cd_acao_w,
	dt_mesano_referencia_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin
	/* Obter o custo m√©dio do material */

	select	coalesce(max(vl_custo_medio),0)
	into STRICT	vl_custo_medio_w
	from	fornecedor_mat_consignado
	where	cd_estabelecimento	= cd_estabelecimento_p
	and	cd_material		= cd_material_estoque_w
	and	dt_mesano_referencia	= dt_mesano_referencia_w;

	select	coalesce(vl_movimento,0)
	into STRICT	vl_movimento_w
	from	movimento_estoque_v1
	where	nr_movimento_Estoque = nr_movimento_estoque_w;

	if (dt_movimento_w < dt_inicio_movto_p) then
		qt_saldo_ant_w	:= qt_saldo_ant_w + qt_movimento_w;
		qt_estoque_w	:= qt_saldo_ant_w;
		vl_estoque_ant_w := vl_estoque_ant_w + vl_movimento_w;
		vl_estoque_w	:= vl_estoque_w;
	else
		qt_estoque_w	:= qt_estoque_w + qt_movimento_w;
		vl_estoque_w	:= (qt_Estoque_w * vl_custo_medio_w);

		insert into w_razao_estoque_consig(
			nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			ie_tipo_informacao,
			cd_estabelecimento,
			dt_mesano_referencia,
			dt_movimento,
			dt_processo,
			cd_local_estoque,
			cd_operacao_estoque,
			ie_entrada_saida,
			cd_acao,
			cd_material,
			nr_movimento_estoque,
			nr_documento,
			qt_movimento,
			qt_estoque,
			vl_movimento,
			vl_estoque)
		values ( nextval('w_razao_estoque_seq'),
			clock_timestamp(),
			nm_usuario_p,
			5,
			cd_estabelecimento_p,
			dt_mesano_referencia_w,
			dt_movimento_w,
			dt_processo_w,
			cd_local_estoque_w,
			cd_operacao_estoque_w,
			ie_entrada_saida_w,
			cd_acao_w,
			cd_material_estoque_w,
			nr_movimento_estoque_w,
			nr_documento_w,
			qt_movimento_w,
			qt_estoque_w,
			vl_movimento_w,
			vl_estoque_w);
	end if;

	end;
end loop;
close c01;

/*select	nvl(sum(qt_estoque),0),
	nvl(sum(vl_estoque),0)
into	qt_estoque_w,
	vl_estoque_w
from	fornecedor_mat_consignado
where	cd_estabelecimento		= cd_estabelecimento_p
and	dt_mesano_referencia	= dt_mesano_referencia_fim_p
and	cd_local_estoque		= nvl(cd_local_estoque_ww, cd_local_estoque)
and	cd_material		= cd_material_p;*/
insert into w_razao_estoque_consig(
	nr_sequencia,
	dt_atualizacao,
	nm_usuario,
	ie_tipo_informacao,
	cd_estabelecimento,
	dt_mesano_referencia,
	cd_local_estoque,
	cd_material,
	qt_estoque,
	vl_estoque)
values ( nextval('w_razao_estoque_seq'),
	clock_timestamp(),
	nm_usuario_p,
	9,
	cd_estabelecimento_p,
	dt_mesano_referencia_fim_p,
	cd_local_estoque_w,
	cd_material_p,
	qt_estoque_w,
	vl_estoque_w);

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_w_razao_estoque_consig ( cd_estabelecimento_p bigint, dt_mesano_referencia_p timestamp, dt_mesano_referencia_fim_p timestamp, cd_local_estoque_p bigint, dt_inicio_movto_p timestamp, dt_fim_movto_p timestamp, cd_material_p bigint, nm_usuario_p text) FROM PUBLIC;

