-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE send_diagnosis_integration (nr_seq_interno_p bigint, nr_atendimento_p bigint, cd_doenca_p text, dt_diagnostico_p timestamp, ie_classificacao_doenca_p text, ie_situacao_p text, dt_liberacao_p timestamp, dt_inativacao_p timestamp, dt_atualizacao_p timestamp) AS $body$
DECLARE

								
visit_id_w 					diagnostico_doenca.nr_atendimento%type;
patient_id_w 				atendimento_paciente.cd_pessoa_fisica%type;
diagnosis_id_w				diagnostico_doenca.nr_seq_interno%type;
diagnosis_origin_code_w		varchar(30);
diagnosis_code_w			diagnostico_doenca.cd_doenca%type;
diagnosis_date_w			varchar(30);
is_main_diagnosis_w			diagnostico_doenca.ie_classificacao_doenca%type;
diagnosis_event_w			diagnostico_doenca.ie_situacao%type;
diagnosis_created_on_w		varchar(30);
updatetimestampfilter_w 	diagnostico_doenca.dt_atualizacao%type;
nm_user_w               	diagnostico_doenca.nm_usuario%type;
ds_integracao_w				text;
establishment_id_w   smallint;


BEGIN

if (obter_setor(obter_setor_atual_paciente(nr_atendimento_p)) is not null) then

	select 	max(nr_atendimento_p) visit_id,
			max(nr_seq_interno_p) diagnosis_id,
      obter_estabelecimento_setor(obter_setor_atual_paciente(max(nr_atendimento_p))) establishment_id,  
			obter_setor_origem_atend(max(nr_atendimento_p)) diagnosis_origin_code,  
			max(cd_doenca_p) diagnosis_code, 
			to_char(max(dt_diagnostico_p), 'yyyymmddhh24miss') diagnosis_date, 
			CASE WHEN upper(max(ie_classificacao_doenca_p))='P' THEN 1  ELSE 2 END  is_main_diagnosis, 
			CASE WHEN upper(max(ie_situacao_p))='A' THEN 1  ELSE 2 END  diagnosis_event, 
			to_char(max(dt_atualizacao_p), 'yyyymmddhh24miss') diagnosis_created_on,
			to_date(max(dt_atualizacao_p)) updatetimestampfilter
	into STRICT 	visit_id_w,
			diagnosis_id_w,
      establishment_id_w,
			diagnosis_origin_code_w,
			diagnosis_code_w,
			diagnosis_date_w,
			is_main_diagnosis_w,
			diagnosis_event_w,
			diagnosis_created_on_w,
			updatetimestampfilter_w
	 
	where (dt_liberacao_p IS NOT NULL AND dt_liberacao_p::text <> '')
	and coalesce(dt_inativacao_p::text, '') = '';
	
	nm_user_w := WHEB_USUARIO_PCK.GET_NM_USUARIO;
	patient_id_w := OBTER_PESSOA_ATENDIMENTO(nr_atendimento_p,'C');
	
	if (patient_id_w IS NOT NULL AND patient_id_w::text <> '') and (visit_id_w IS NOT NULL AND visit_id_w::text <> '') then
	
		SELECT BIFROST.SEND_INTEGRATION( 'patientinformation.diagnosis',
										'com.philips.tasy.integration.atepac.patientinformation.diagnosis.Diagnosis',
										'{ "patientId" : "' ||patient_id_w || '",'
										||'"visitId" : "' ||visit_id_w || '",'
                    ||'"establishmentId" : "'||establishment_id_w||'",'
										||'"diagnosisId" : "' ||diagnosis_id_w || '",'
										|| '"diagnosisOriginCode" : "' || diagnosis_origin_code_w ||'",'
										|| '"diagnosisCode" : "' || diagnosis_code_w ||'" ,'
										|| '"diagnosisDate" : "' || diagnosis_date_w ||'" ,'
										|| '"isMainDiagnosis" : "' || is_main_diagnosis_w ||'" ,'
										|| '"diagnosisEvent" : "' || diagnosis_event_w ||'" ,'
										|| '"diagnosisCreatedOn" : "' || diagnosis_created_on_w ||'" ,'
										|| '"updatetimestampfilter" : "' || updatetimestampfilter_w ||'"'
										|| '}',
										nm_user_w)
			INTO STRICT DS_INTEGRACAO_W
			;
	end if;		
	
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE send_diagnosis_integration (nr_seq_interno_p bigint, nr_atendimento_p bigint, cd_doenca_p text, dt_diagnostico_p timestamp, ie_classificacao_doenca_p text, ie_situacao_p text, dt_liberacao_p timestamp, dt_inativacao_p timestamp, dt_atualizacao_p timestamp) FROM PUBLIC;

