-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_gerar_acomp_metrica_ticket ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_centro_custo_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_conta_contabil_w			varchar(20);
cd_centro_custo_w				integer;
cd_empresa_w				smallint;
dt_inicial_w				timestamp;
dt_final_w				timestamp;
dt_referencia_w				timestamp;
ds_gerencial_w				varchar(255);
nr_seq_mes_ref_w				bigint;
nr_seq_metrica_w				bigint;
qt_metrica_real_w				double precision;
vl_ticket_real_w				double precision;

/* Meses */

c00 CURSOR FOR
SELECT	nr_sequencia,
	dt_referencia
from	ctb_mes_ref
where	dt_referencia between dt_inicial_w and dt_final_w
and	cd_empresa	= cd_empresa_w;

/* Centro de custo*/

c01 CURSOR FOR
SELECT	distinct
	a.cd_centro_custo,
	substr(obter_desc_centro_custo(a.cd_centro_custo),1,40) ds_centro_custo
from	ctb_orcamento a
where	a.cd_estabelecimento	= cd_estabelecimento_p
and	ctb_obter_se_centro_usuario(a.cd_centro_custo, cd_empresa_w, nm_usuario_p) = 'S'
and	a.nr_seq_mes_ref	= nr_seq_mes_ref_w
and	a.cd_centro_custo	= coalesce(cd_centro_custo_p, a.cd_centro_custo)
and	(a.nr_seq_metrica IS NOT NULL AND a.nr_seq_metrica::text <> '')
order by 1;

/*Métrica */

c02 CURSOR FOR
SELECT	distinct
	a.nr_seq_metrica,
	substr(ctb_obter_desc_metrica(a.nr_seq_metrica),1,80) ds_metrica
from	ctb_orcamento a
where	a.cd_estabelecimento	= cd_estabelecimento_p
and	a.nr_seq_mes_ref	= nr_seq_mes_ref_w
and	a.cd_centro_custo	= cd_centro_custo_w
and	(a.nr_seq_metrica IS NOT NULL AND a.nr_seq_metrica::text <> '')
order by 1;

/* Ticket médio*/

c03 CURSOR FOR
SELECT	a.cd_conta_contabil,
	substr(obter_desc_conta_contabil(a.cd_conta_contabil),1,255) ds_conta_contabil,
	coalesce(sum(a.vl_ticket_medio_real),0) vl_ticket_real
from	ctb_orcamento a
where	a.cd_estabelecimento	= cd_estabelecimento_p
and	a.cd_centro_custo	= cd_centro_custo_w
and	a.nr_seq_metrica	= nr_seq_metrica_w
and	a.nr_seq_mes_ref	= nr_seq_mes_ref_w
group by a.cd_conta_contabil
order by 1;


BEGIN

cd_empresa_w		:= obter_empresa_estab(cd_estabelecimento_p);
dt_inicial_w		:= dt_inicial_p;
dt_final_w		:= dt_final_p;

/*Limpa acompanhamento gerado*/

delete	from ctb_metrica_acomp
where	nm_usuario = nm_usuario_p;
commit;

open C00;
loop
fetch C00 into
	nr_seq_mes_ref_w,
	dt_referencia_w;
EXIT WHEN NOT FOUND; /* apply on C00 */
	begin

	open c01;
	loop
	fetch c01 into
		cd_centro_custo_w,
		ds_gerencial_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */

		insert into ctb_metrica_acomp(
			nr_sequencia,
			cd_estabelecimento,
			nr_seq_cenario,
			nr_seq_metrica,
			nr_seq_mes_ref,
			dt_referencia,
			cd_centro_custo,
			ds_gerencial,
			qt_metrica_orc,
			qt_metrica_real,
			vl_ticket_orc,
			vl_ticket_real,
			vl_orcado,
			vl_realizado,
			nm_usuario,
			nm_usuario_nrec,
			dt_atualizacao,
			dt_atualizacao_nrec,
			vl_orcado_ant,
			vl_realizado_ant)
		values (	nextval('ctb_metrica_acomp_seq'),
			cd_estabelecimento_p,
			null,
			null,
			nr_seq_mes_ref_w,
			dt_referencia_w,
			cd_centro_custo_w,
			ds_gerencial_w,
			0,
			0,
			0,
			0,
			0,
			0,
			nm_usuario_p,
			nm_usuario_p,
			clock_timestamp(),
			clock_timestamp(),
			null,
			null);

		/* Início gravação das métricas do centro de custo*/

		open c02;
		loop
		fetch c02 into
			nr_seq_metrica_w,
			ds_gerencial_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			qt_metrica_real_w	:= coalesce(ctb_obter_metrica_real(cd_estabelecimento_p, cd_centro_custo_w, nr_seq_metrica_w,nr_seq_mes_ref_w),0);
			ds_gerencial_w		:= substr('     ' || ds_gerencial_w,1,255);

			insert into ctb_metrica_acomp(
				nr_sequencia,
				cd_estabelecimento,
				nr_seq_cenario,
				nr_seq_metrica,
				nr_seq_mes_ref,
				dt_referencia,
				cd_centro_custo,
				ds_gerencial,
				qt_metrica_orc,
				qt_metrica_real,
				vl_ticket_orc,
				vl_ticket_real,
				vl_orcado,
				vl_realizado,
				vl_saldo,
				nm_usuario,
				nm_usuario_nrec,
				dt_atualizacao,
				dt_atualizacao_nrec,
				vl_orcado_ant,
				vl_realizado_ant)
			values (	nextval('ctb_metrica_acomp_seq'),
				cd_estabelecimento_p,
				null,
				nr_seq_metrica_w,
				nr_seq_mes_ref_w,
				dt_referencia_w,
				cd_centro_custo_w,
				ds_gerencial_w,
				0,
				qt_metrica_real_w,
				null,
				null,
				0,
				0,
				0,
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				clock_timestamp(),
				null,
				null);

			/*Ultimo nível - Ticket médio*/

			open C03;
			loop
			fetch C03 into
				cd_conta_contabil_w,
				ds_gerencial_w,
				vl_ticket_real_w;
			EXIT WHEN NOT FOUND; /* apply on C03 */
				begin
				ds_gerencial_w		:= substr('         ' || ds_gerencial_w,1,255);
				insert into ctb_metrica_acomp(
					nr_sequencia,
					cd_estabelecimento,
					nr_seq_cenario,
					nr_seq_metrica,
					nr_seq_mes_ref,
					dt_referencia,
					cd_centro_custo,
					ds_gerencial,
					qt_metrica_orc,
					qt_metrica_real,
					vl_ticket_orc,
					vl_ticket_real,
					vl_orcado,
					vl_realizado,
					vl_saldo,
					nm_usuario,
					nm_usuario_nrec,
					dt_atualizacao,
					dt_atualizacao_nrec,
					vl_orcado_ant,
					vl_realizado_ant)
				values (	nextval('ctb_metrica_acomp_seq'),
					cd_estabelecimento_p,
					null,
					nr_seq_metrica_w,
					nr_seq_mes_ref_w,
					dt_referencia_w,
					cd_centro_custo_w,
					ds_gerencial_w,
					null,
					null,
					0,
					vl_ticket_real_w,
					null,
					null,
					null,
					nm_usuario_p,
					nm_usuario_p,
					clock_timestamp(),
					clock_timestamp(),
					null,
					null);

				end;
			end loop;
			close C03;
			end;
		end loop;
		close c02;
		commit;
	end loop;
	close c01;

	end;
end loop;
close C00;

commit;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_gerar_acomp_metrica_ticket ( cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, cd_centro_custo_p bigint, nm_usuario_p text) FROM PUBLIC;

