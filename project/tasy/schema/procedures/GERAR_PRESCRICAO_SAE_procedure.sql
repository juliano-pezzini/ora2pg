-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_prescricao_sae (nr_prescr_sae_p bigint, nm_usuario_p text, ds_protocolos_p text default ' ', ie_platform_p text default null) AS $body$
DECLARE


nr_prescricao_w				bigint;
cd_pessoa_fisica_w			varchar(10);
nr_atendimento_w			bigint;
cd_medico_w					varchar(10);
dt_prescricao_w				timestamp;
cd_setor_atendimento_w		integer;
cd_estabelecimento_w		smallint;
cd_prescritor_w				varchar(10);
ie_funcao_prescritor_w		varchar(3);
nr_seq_proc_w				bigint;
cd_material_w				integer;
ie_via_aplicacao_w			varchar(5);
cd_unidade_medida_dose_w	varchar(30);
qt_dose_w					double precision;
qt_dose_especial_w		    double precision;
nr_seq_presc_material_w		integer;
cd_unidade_medida_w			varchar(30);
qt_conversao_w				double precision;
cd_intervalo_w				varchar(7);
nr_seq_acum_w				bigint;
ie_tipo_material_w			varchar(3);
ie_agrupador_w				varchar(2);
vl_prim_hor_w				varchar(15);
nr_seq_protocolo_w			bigint;
cd_protocolo_w				bigint;
nr_sequencia_protocolo_w		bigint;
ds_justificativa_w			varchar(2000);
nr_ocorrencia_w				bigint;
ds_horarios_w				varchar(2000);
NR_SEQ_PROC_interv_w			bigint;
HR_PRIM_HORARIO_w			varchar(10);
QT_HORAS_VALIDADE_w			bigint;
dt_primeiro_horario_w			timestamp;
ie_adep_w				varchar(10);
DT_INICIO_PRESCR_w			timestamp;
IE_URGENCIA_w				varchar(10);
IE_MOTIVO_PRESCRICAO_w			varchar(10);
nr_seq_pe_proc_w			bigint;
cd_motivo_baixa_w			smallint;
hr_prim_horario_2_w			varchar(5);
cd_motivo_baixa_paran_w		smallint;
ie_se_necessario_w			varchar(1);
ie_acm_w					varchar(1);
ie_interv_espec_agora_w	    varchar(1);
hr_horario_espec_w		    varchar(5);
ds_protocolos_w				varchar(1000);
qt_conversao_dose_w	   		double precision;
qt_unitaria_w   			double precision;
qt_material_w   			double precision;
qt_dispensar_w				double precision;
ie_regra_disp_w				varchar(1);
ds_erro_w					varchar(255);

ds_erro_regra_prescr_mat_w      varchar(1);
ie_abortar_regra_prescr_mat_w   varchar(1) := 'N';
ds_mensagem_regra_prescr_mat_w  varchar(4000);

c01 CURSOR FOR
	SELECT	a.cd_intervalo,
		a.nr_sequencia,
		b.cd_material,
		b.ie_via_aplicacao,
		b.cd_unidade_medida_dose,
		coalesce(b.qt_dose,0),
		b.ds_justificativa,
		nr_seq_acum_w + row_number() OVER () AS rownum,
		coalesce(obter_ocorrencias_horarios_rep(a.ds_horarios),1) nr_ocorrencia, -- Coloquei o NVL para quando for marcado o campo "Horario especial"
		ds_horarios,
		a.NR_SEQ_PROC,
		a.ie_agora,		
		b.cd_motivo_baixa,
		a.hr_prim_horario,
		a.ie_se_necessario,
		a.ie_acm,
        coalesce(a.ie_interv_espec_agora, 'N'),
        a.hr_horario_espec
	from	pe_prescr_proc a,
		pe_material_proced b
	where	b.nr_seq_proc	= a.nr_seq_proc
	and	a.nr_seq_prescr	= nr_prescr_sae_p
	
union all

		SELECT	a.cd_intervalo,
		a.nr_sequencia,
		b.cd_material,
		b.ie_via_aplicacao,
		b.cd_unidade_medida_dose,
		coalesce(b.qt_dose,0),
		b.ds_justificativa,
		nr_seq_acum_w + row_number() OVER () AS rownum,
		obter_ocorrencias_horarios_rep(a.ds_horarios) nr_ocorrencia,
		ds_horarios,
		a.NR_SEQ_PROC,
		a.ie_agora,		
		b.cd_motivo_baixa,
		a.hr_prim_horario,
		a.ie_se_necessario,
		a.ie_acm,
        coalesce(a.ie_interv_espec_agora, 'N'),
        a.hr_horario_espec
	from	pe_prescr_proc a,
		pe_material_proced b
	where	b.nr_seq_prot_proc	= a.nr_seq_prot_proc
	and	a.nr_seq_prescr	= nr_prescr_sae_p;


BEGIN


cd_motivo_baixa_paran_w := Obter_Param_Usuario(924, 194, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, cd_motivo_baixa_paran_w);


if (nr_prescr_sae_p IS NOT NULL AND nr_prescr_sae_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then

	/* obter dados sae x atend */

	select	cd_pessoa_fisica,
		nr_atendimento,
		substr(obter_medico_resp_atend(nr_atendimento,'C'),1,10) cd_medico,
		dt_prescricao,
		coalesce((SUBSTR(obter_unidade_atendimento(nr_atendimento,'IA','CS'),1,5))::numeric ,(SUBSTR(obter_unidade_atendimento(nr_atendimento,'A','CS'),1,5))::numeric ) cd_setor_atendimento,
		obter_estab_atend(nr_atendimento) cd_estabelecimento,
		substr(obter_dados_usuario_opcao(nm_usuario_p,'C'),1,10) cd_prescritor,
		substr(obter_funcao_usuario_orig(nm_usuario_p),1,3) ie_funcao_prescritor,
		QT_HORAS_VALIDADE,
		DT_INICIO_PRESCR
	into STRICT	cd_pessoa_fisica_w,
		nr_atendimento_w,
		cd_medico_w,
		dt_prescricao_w,
		cd_setor_atendimento_w,
		cd_estabelecimento_w,
		cd_prescritor_w,
		ie_funcao_prescritor_w,
		QT_HORAS_VALIDADE_w,
		DT_INICIO_PRESCR_w
	from	pe_prescricao
	where	nr_sequencia = nr_prescr_sae_p
	and	coalesce(ie_situacao,'A') = 'A';

	vl_prim_hor_w := Obter_Param_Usuario(281, 388, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, vl_prim_hor_w);
	ie_adep_w := Obter_Param_Usuario(281, 967, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_adep_w);
	IE_MOTIVO_PRESCRICAO_w := Obter_Param_Usuario(281, 1070, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, IE_MOTIVO_PRESCRICAO_w);

	if (vl_prim_hor_w = '1') then
		dt_prescricao_w	:= trunc(ESTABLISHMENT_TIMEZONE_UTILS.todayAtTime(coalesce(Obter_Prim_Horario_Setor(cd_setor_atendimento_w),clock_timestamp())), 'mi');
		if (dt_prescricao_w < clock_timestamp()) then
			dt_prescricao_w := dt_prescricao_w + 1;
		end if;
	elsif (vl_prim_hor_w = '2') or (vl_prim_hor_w = '4')then
		dt_prescricao_w	:= trunc(clock_timestamp() + (1/24),'hh24');
	end if;

	/* gerar prescricao */

	select	nextval('prescr_medica_seq')
	into STRICT	nr_prescricao_w
	;

	insert into prescr_medica(
					nr_prescricao,
					cd_pessoa_fisica,
					nr_atendimento,
					cd_medico,
					dt_prescricao,
					dt_atualizacao,
					nm_usuario,
					nr_horas_validade,
					dt_primeiro_horario,
					cd_setor_atendimento,
					ie_recem_nato,
					ie_origem_inf,
					nm_usuario_original,
					cd_estabelecimento,
					cd_prescritor,
					ie_emergencia,
					ie_funcao_prescritor,
					ie_prescricao_alta,
					ie_prescr_emergencia,
					ie_adep,
					ie_prescricao_sae,
					IE_MOTIVO_PRESCRICAO)
	values (
					nr_prescricao_w,
					cd_pessoa_fisica_w,
					nr_atendimento_w,
					cd_medico_w,
					coalesce(trunc(DT_INICIO_PRESCR_w, 'mi'), trunc(dt_prescricao_w, 'mi')),
					clock_timestamp(),
					nm_usuario_p,
					coalesce(QT_HORAS_VALIDADE_w,24),
					coalesce(trunc(DT_INICIO_PRESCR_w, 'mi'), trunc(dt_prescricao_w, 'mi')),
					cd_setor_atendimento_w,
					'N',
					Obter_Tipo_Pessoa(cd_prescritor_w),--'S',
					nm_usuario_p,
					cd_estabelecimento_w,
					cd_prescritor_w,
					'N',
					ie_funcao_prescritor_w,
					'N',
					'N',
					coalesce(ie_adep_w,'N'),
					'S',
					IE_MOTIVO_PRESCRICAO_w);

	/* atualizar sae */

	update	pe_prescricao
	set	nr_prescricao = nr_prescricao_w
	where	nr_sequencia = nr_prescr_sae_p;



	open c01;
	loop
		fetch c01 into
			cd_intervalo_w,
			nr_seq_proc_w,
			cd_material_w,
			ie_via_aplicacao_w,
			cd_unidade_medida_dose_w,
			qt_dose_w,
			ds_justificativa_w,
			nr_seq_presc_material_w,
			nr_ocorrencia_w,
			ds_horarios_w,
			NR_SEQ_PROC_interv_w,
			IE_URGENCIA_w,
			cd_motivo_baixa_w,
			hr_prim_horario_2_w,
			ie_se_necessario_w,
			ie_acm_w,
            ie_interv_espec_agora_w,
            hr_horario_espec_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */

		select	coalesce(cd_unidade_medida_dose_w,substr(obter_dados_material_estab(cd_material,cd_estabelecimento_w,'UMS'),1,30)) cd_unidade_medida_consumo,
				ie_tipo_material
		into STRICT	cd_unidade_medida_w,
				ie_tipo_material_w
		from	material
		where	cd_material = cd_material_w;

		if (ie_tipo_material_w = '1') then
			ie_agrupador_w	:= '2';
		elsif (ie_tipo_material_w in ('2','3')) then
			ie_agrupador_w	:= '1';
		end if;

		select	coalesce(max(qt_conversao),1)
		into STRICT	qt_conversao_w
		from	material_conversao_unidade
		where	cd_material			= cd_material_w
		and	cd_unidade_medida	= cd_unidade_medida_w;
		
		
		select  coalesce(max(nr_sequencia),0) + 1
		into STRICT	nr_seq_presc_material_w
		from	prescr_material
		where	nr_prescricao = nr_prescricao_w;
		
        qt_dose_especial_w := null;
        if ie_interv_espec_agora_w = 'S' then
            qt_dose_especial_w := qt_dose_w;
        end if;

		qt_conversao_dose_w	:= obter_conversao_unid_med(cd_material_w, cd_unidade_medida_w);

		qt_unitaria_w := dividir(trunc(dividir(qt_dose_w * 1000, qt_conversao_dose_w)), 1000);		

		if (qt_unitaria_w = 0) then
			qt_unitaria_w :=  dividir(qt_dose_w, qt_conversao_dose_w);
		end if;
		
		if (nr_ocorrencia_w = 0) then
			qt_material_w := coalesce(qt_dose_w, 1);
		else
			qt_material_w := coalesce(nr_ocorrencia_w * qt_dose_w, 1);
		end if;

		SELECT * FROM obter_quant_dispensar(cd_estabelecimento_w, cd_material_w, nr_prescricao_w, nr_seq_presc_material_w, cd_intervalo_w, ie_via_aplicacao_w, qt_unitaria_w, coalesce(qt_dose_especial_w,0), nr_ocorrencia_w, null, 'SAE', cd_unidade_medida_dose_w, 1, qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w, ie_se_necessario_w, ie_acm_w) INTO STRICT qt_material_w, qt_dispensar_w, ie_regra_disp_w, ds_erro_w;
				
		if (ds_erro_w IS NOT NULL AND ds_erro_w::text <> '') then
			CALL gerar_log_prescricao(nr_prescricao_w, nr_seq_presc_material_w, ie_agrupador_w, null, null, 'gerar_prescricao_sae > obter_quant_dispensar erro: '||ds_erro_w, nm_usuario_p, 11983, 'N');
		end if;

    if ( ie_platform_p = 'H' ) then 
      begin
      SELECT * FROM cpoe_consist_regra_prescr_mat(	nr_atendimento_w, cd_material_w, 'N', ie_via_aplicacao_w, Obter_Tipo_Atendimento(nr_atendimento_w), cd_setor_atendimento_w, obter_perfil_ativo, Obter_Convenio_Atendimento(nr_atendimento_w), nm_usuario_p, cd_estabelecimento_w, cd_pessoa_fisica_w, DT_INICIO_PRESCR_w, ds_erro_regra_prescr_mat_w, ds_mensagem_regra_prescr_mat_w, ie_abortar_regra_prescr_mat_w) INTO STRICT ds_erro_regra_prescr_mat_w, ds_mensagem_regra_prescr_mat_w, ie_abortar_regra_prescr_mat_w;
      exception WHEN OTHERS THEN
          ds_erro_regra_prescr_mat_w := 'S';
          ie_abortar_regra_prescr_mat_w := 'S';
      end;
    else
      ds_erro_regra_prescr_mat_w := 'N';
      ie_abortar_regra_prescr_mat_w := 'N';

    end if;		

      if (ds_erro_regra_prescr_mat_w <> 'S') or (ie_abortar_regra_prescr_mat_w <> 'S') then
		Insert	into Prescr_material(
			nr_prescricao,
			nr_sequencia,
			ie_origem_inf,
			cd_material,
			cd_unidade_medida_dose,
			cd_unidade_medida,
			qt_dose,
			qt_unitaria,
			qt_material,
			dt_atualizacao,
			nm_usuario,
			cd_intervalo,
			ds_observacao,
			nr_seq_pe_proc,
			ie_agrupador,
			ie_medicacao_paciente,
			ie_se_necessario,
			ie_urgencia,
			ie_suspenso,
			ie_utiliza_kit,
			ie_status_cirurgia,
			ie_bomba_infusao,
			ie_aplic_bolus,
			ie_aplic_lenta,
			ie_acm,
			cd_motivo_baixa,
			dt_baixa,
			qt_conversao_dose,
			ds_horarios,
			nr_ocorrencia,
			ie_via_aplicacao,
			ie_recons_diluente_fixo,
			ie_sem_aprazamento,
			ie_cobra_paciente,
			ie_intervalo_dif,
			hr_prim_horario,
			nr_agrupamento,
			ds_justificativa,
			qt_total_dispensar,
            ie_dose_espec_agora,
            qt_dose_especial,
            hr_dose_especial,
			ie_regra_disp)
		values (
			nr_prescricao_w,
			nr_seq_presc_material_w,
			'A',
			cd_material_w,
			cd_unidade_medida_w,
			cd_unidade_medida_w,
			qt_dose_w,
			obter_conversao_unid_med_cons(cd_material_w, cd_unidade_medida_w, qt_dose_w),
			qt_material_w,
			clock_timestamp(),
			nm_usuario_p,
			cd_intervalo_w,
			null,
			nr_seq_proc_w,
			ie_agrupador_w,
			'N',
			coalesce(ie_se_necessario_w,'N'),
			IE_URGENCIA_W,
			'N',
			'N',
			'GI',
			'N',
			'N',
			'N',
			coalesce(ie_acm_w,'N'),
			CASE WHEN Obter_regra_dispensacao_SAE(cd_estabelecimento_w, cd_material_w, cd_unidade_medida_dose_w, ie_via_aplicacao_w, cd_intervalo_w, nr_atendimento_w, 'U', nr_prescr_sae_p, nr_sequencia_protocolo_w)='K' THEN cd_motivo_baixa_paran_w  ELSE coalesce(cd_motivo_baixa_w,0) END ,
			null,
			qt_conversao_w,
			ds_horarios_w,
			nr_ocorrencia_w,
			ie_via_aplicacao_w,
			'N',
			'N',
			null,
			null,
			hr_prim_horario_2_w,
			CASE WHEN ie_agrupador_w='1' THEN Obter_proximo_agrup_medic(nr_prescricao_w)  ELSE null END ,
			ds_justificativa_w,
			qt_dispensar_w,
            ie_interv_espec_agora_w,
            qt_dose_especial_w,
            hr_horario_espec_w,
			ie_regra_disp_w);
		end if;
	end loop;
	close c01;
	
	CALL gerar_protocolos_presc_sae(nr_prescr_sae_p,nm_usuario_p,nr_prescricao_w,ds_protocolos_p);

end if;

if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_prescricao_sae (nr_prescr_sae_p bigint, nm_usuario_p text, ds_protocolos_p text default ' ', ie_platform_p text default null) FROM PUBLIC;

