-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_razao_fornecedor ( dt_parametro_p timestamp, nm_usuario_p text, ie_considera_cancel_p text, cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_somente_repasse_p text, ie_tipo_titulo_p text, nr_seq_conta_financ_p bigint, ie_tipo_relatorio_p text, ie_data_mes_p text) AS $body$
DECLARE

 
dt_inicio_w				timestamp;
dt_final_w				timestamp;
cd_cgc_w					varchar(14);
cd_pessoa_fisica_w			varchar(10);
vl_saldo_ant_w				double precision;
vl_saldo_atual_w				double precision;
ie_tipo_w					integer;
dt_movimento_w				timestamp;
nr_documento_w				varchar(40);
vl_movimento_w				double precision;
vl_credito_w				double precision;
vl_debito_w				double precision;
nr_sequencia_w				bigint;
nr_titulo_ant_w				bigint;
cd_conta_contabil_w			varchar(20);
nr_titulo_w				varchar(20);
vl_saldo_anterior_w			double precision;
cd_tipo_pessoa_w			pessoa_juridica.cd_tipo_pessoa%type;
vl_saldo_movto_w			double precision;
ie_ordem_w				bigint	:= 1;

/*Matheus OS 51243 em 02/03/2007 Inclusão de cd_pessoa_fisica */
 
Fornecedor CURSOR FOR 
	SELECT	distinct 
		cd_cgc, 
		cd_pessoa_fisica, 
		substr(obter_conta_contab_pf_pj_estab(cd_estabelecimento_p,a.cd_cgc,a.cd_pessoa_fisica,'P',dt_inicial_p),1,100) conta_contabil 
	from	titulo_pagar a 
	where	dt_contabil < dt_final_w 
	and	coalesce(dt_liquidacao,clock_timestamp()) >= dt_inicio_w 
	and (cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) 
	and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N') 
	and (ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '') 
	and (exists (	SELECT	1 
			from	titulo_pagar_classif x 
			where	a.nr_titulo		= x.nr_titulo 
			and	x.nr_seq_conta_financ	= nr_seq_conta_financ_p) 
		or coalesce(nr_seq_conta_financ_p::text, '') = '');

Movimento CURSOR FOR 
SELECT	ie_tipo, 
	dt_movimento, 
	ds_movimento, 
	vl_movimento, 
	nr_titulo 
from	(SELECT	1 ie_tipo, 
		a.dt_baixa dt_movimento, 
		substr(wheb_mensagem_pck.get_texto(302852) || a.nr_titulo || '/' || coalesce(b.nr_cheque,substr(obter_dados_nota_fiscal(c.nr_seq_nota_fiscal,'0'),1,100)),1,40) ds_movimento, 
		vl_baixa vl_movimento, 
		a.nr_titulo 
	FROM titulo_pagar c, titulo_pagar_baixa a
LEFT OUTER JOIN bordero_pagamento b ON (a.nr_bordero = b.nr_bordero)
WHERE a.nr_titulo = c.nr_titulo  and (((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and c.cd_cgc = cd_cgc_w) or ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and c.cd_pessoa_fisica = cd_pessoa_fisica_w)) and a.dt_baixa between dt_inicio_w and dt_final_w and (c.cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) and ((c.ie_situacao not in ('D','C') and 'N' = ie_considera_cancel_p) or (c.ie_situacao <> 'D' and 'S' = ie_considera_cancel_p)) and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N' ) and (c.ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '') and (exists (	select	1 
			from	titulo_pagar_classif x 
			where	c.nr_titulo		= x.nr_titulo 
			and	x.nr_seq_conta_financ	= nr_seq_conta_financ_p) 
		or coalesce(nr_seq_conta_financ_p::text, '') = '') 
	 
union all
 
	select	2 ie_tipo, 
		coalesce(b.dt_contabil, b.dt_atualizacao) dt_movimento, 
		substr(wheb_mensagem_pck.get_texto(302897) || b.nr_titulo || '/' || nr_adiantamento,1,40), 
		vl_adiantamento, 
		a.nr_titulo 
	from	titulo_pagar_adiant b, 
		titulo_pagar a 
	where	coalesce(b.dt_contabil, b.dt_atualizacao) between dt_inicio_w and dt_final_w 
	and	a.nr_titulo = b.nr_titulo 
	and	((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '' AND a.cd_cgc = cd_cgc_w) or (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '' AND a.cd_pessoa_fisica = cd_pessoa_fisica_w)) 
	and (a.cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) 
	and	((a.ie_situacao not in ('D','C') and 'N' = ie_considera_cancel_p) or (a.ie_situacao <> 'D' and 'S' = ie_considera_cancel_p)) 
	and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N' ) 
	and (a.ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '') 
	and (exists (	select	1 
			from	titulo_pagar_classif x 
			where	a.nr_titulo		= x.nr_titulo 
			and	x.nr_seq_conta_financ	= nr_seq_conta_financ_p) 
		or coalesce(nr_seq_conta_financ_p::text, '') = '') 
	
union all
 
	select	3 ie_tipo, 
		b.dt_alteracao dt_movimento, 
		substr(wheb_mensagem_pck.get_texto(302898) || to_char(b.nr_titulo),1,40), 
		abs(vl_anterior - vl_alteracao), 
		a.nr_titulo 
	from	titulo_pagar_alt_valor b, 
		titulo_pagar a 
	where	b.dt_alteracao between dt_inicio_w and dt_final_w 
	and (vl_anterior - vl_alteracao) > 0 
	and	a.nr_titulo = b.nr_titulo 
	and (a.cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) 
	and	((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '' AND a.cd_cgc = cd_cgc_w) or (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '' AND a.cd_pessoa_fisica = cd_pessoa_fisica_w)) 
	and	((a.ie_situacao not in ('D','C') and 'N' = ie_considera_cancel_p) or (a.ie_situacao <> 'D' and 'S' = ie_considera_cancel_p))	 
	and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N' ) 
	and (a.ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '') 
	and (exists (	select	1 
			from	titulo_pagar_classif x 
			where	a.nr_titulo		= x.nr_titulo 
			and	x.nr_seq_conta_financ	= nr_seq_conta_financ_p) 
		or coalesce(nr_seq_conta_financ_p::text, '') = '') 
	
union all
 
	select	4 ie_tipo, 
		b.dt_alteracao dt_movimento, 
		substr(wheb_mensagem_pck.get_texto(302899) || to_char(b.nr_titulo),1,40), 
		abs(vl_anterior - vl_alteracao), 
		a.nr_titulo 
	from	titulo_pagar_alt_valor b, 
		titulo_pagar a 
	where	b.dt_alteracao between dt_inicio_w and dt_final_w 
	and (vl_anterior - vl_alteracao) < 0 
	and	a.nr_titulo = b.nr_titulo 
	and	((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '' AND a.cd_cgc = cd_cgc_w) or (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '' AND a.cd_pessoa_fisica = cd_pessoa_fisica_w)) 
	and (a.cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) 
	and	((a.ie_situacao not in ('D','C') and 'N' = ie_considera_cancel_p) or (a.ie_situacao <> 'D' and 'S' = ie_considera_cancel_p)) 
	and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N' ) 
	and (a.ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '') 
	and (exists (	select	1 
			from	titulo_pagar_classif x 
			where	a.nr_titulo		= x.nr_titulo 
			and	x.nr_seq_conta_financ	= nr_seq_conta_financ_p) 
		or coalesce(nr_seq_conta_financ_p::text, '') = '') 
	
union all
 
	select	5 ie_tipo, 
		coalesce(dt_contabil, dt_emissao) dt_movimento, 
		substr(wheb_mensagem_pck.get_texto(302900) || nr_titulo || '/' || coalesce(nr_documento,substr(obter_dados_nota_fiscal(nr_seq_nota_fiscal,'0'),1,100)),1,40), 
		/*to_number(obter_dados_tit_pagar(nr_titulo,'VT')), Francisco - 24/08/11 - Tem que considerar por data, troquei por outra function*/
 
		obter_valores_tit_pagar(a.nr_titulo,dt_inicio_w,'VOT'), 
		a.nr_titulo 
	from	titulo_pagar a 
	where	coalesce(dt_contabil, dt_emissao) between dt_inicio_w and dt_final_w 
	and	((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '' AND cd_cgc = cd_cgc_w) or (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '' AND cd_pessoa_fisica = cd_pessoa_fisica_w)) 
	and (cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) 
	and	((ie_situacao not in ('D','C') and 'N' = ie_considera_cancel_p) or (ie_situacao <> 'D' and 'S' = ie_considera_cancel_p)) 
	and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N' ) 
	and (ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '') 
	and (exists (	select	1 
			from	titulo_pagar_classif x 
			where	a.nr_titulo		= x.nr_titulo 
			and	x.nr_seq_conta_financ	= nr_seq_conta_financ_p) 
		or coalesce(nr_seq_conta_financ_p::text, '') = '')) alias109 
order by	dt_movimento, ie_tipo;
					 	-- Edgar/Francisco 09/03/2006 OS 30065, titulos desdobrados dão lugar a outros... 
						-- Anderson 26/09/2006 OS 39921 - inclui o parametro dos titulos cancelados. 
BEGIN 
 
dt_inicio_w	:= coalesce(dt_inicial_p,trunc(dt_parametro_p, 'month'));
dt_final_w	:= (trunc(coalesce(coalesce(dt_final_p,trunc(last_day(dt_parametro_p),'dd')),clock_timestamp()),'dd') + 86399/86400);
 
select	max(nr_titulo) 
into STRICT	nr_titulo_ant_w 
from	titulo_pagar a 
where	dt_contabil			< dt_final_w 
and	coalesce(dt_liquidacao,clock_timestamp())	>= dt_inicio_w 
and	cd_estabelecimento		= cd_estabelecimento_p 
and		exists (SELECT	1 
				from 	titulo_pagar_baixa x 
				where	a.nr_titulo = x.nr_titulo 
				and	(((x.dt_baixa < trunc(coalesce(a.dt_contabil, a.dt_emissao), 'dd')) and ('N' = ie_data_mes_p)) 
					or ((x.dt_baixa < trunc(coalesce(a.dt_contabil, a.dt_emissao), 'mm')) and (trunc(dt_parametro_p,'mm') = trunc(coalesce(a.dt_contabil, a.dt_emissao), 'mm')) and ('S' = ie_data_mes_p))));
 
if (nr_titulo_ant_w IS NOT NULL AND nr_titulo_ant_w::text <> '') then 
	CALL wheb_mensagem_pck.exibir_mensagem_abort(231971,'NR_TITULO='||nr_titulo_ant_w);
 
end if;
	 
delete from t_razao_fornecedor;
 
open Fornecedor;
loop 
	fetch Fornecedor into 
			cd_cgc_w, 
			cd_pessoa_fisica_w, 
			cd_conta_contabil_w;
	EXIT WHEN NOT FOUND; /* apply on Fornecedor */
 
	/* obter saldo anterior */
 
	 
	select	sum(obter_saldo_titulo_pagar(nr_titulo,dt_inicio_w - 1/86400)) vl_credito, 
		substr(obter_dados_pf_pj(NULL, max(cd_cgc), 'TP'),1,255) cd_tipo_pessoa 
	into STRICT	vl_saldo_anterior_w, 
		cd_tipo_pessoa_w 
	from	titulo_pagar 
	where	(	((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '') and cd_cgc = cd_cgc_w) or ((cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '') and cd_pessoa_fisica = cd_pessoa_fisica_w) 
		) 
	and (cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) 
	and	coalesce(dt_contabil, dt_emissao) < dt_inicio_w 
	and	(	(ie_situacao not in ('D','C') and 'N' = ie_considera_cancel_p) or (ie_situacao <> 'D' and 'S' = ie_considera_cancel_p) 
		) 
	and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N' ) 
	and (ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '');
	 
	ie_ordem_w	:= ie_ordem_w + 1;
	 
	insert into T_Razao_Fornecedor( 
		nr_sequencia, 
		cd_cgc, 
		cd_pessoa_fisica, 
		ie_tipo, 
		dt_atualizacao, 
		nm_usuario, 
		dt_movimento, 
		nr_documento, 
		vl_credito, 
		vl_debito, 
		cd_tipo_pessoa, 
		CD_CONTA_CONTABIL, 
		vl_saldo_atual, 
		ie_ordem) 
	values (nextval('t_razao_fornecedor_seq'), 
		cd_cgc_w, 
		cd_pessoa_fisica_w,  
		0, 
		clock_timestamp(), 
		nm_usuario_p, 
		dt_inicio_w, 
		wheb_mensagem_pck.get_texto(302901), 
		vl_saldo_anterior_w, 
		0, 
		cd_tipo_pessoa_w, 
		cd_conta_contabil_w, 
		vl_saldo_anterior_w, 
		ie_ordem_w);
 
	if (coalesce(ie_tipo_relatorio_p,'N') = 'N') then 
	 
		vl_saldo_movto_w	:= vl_saldo_anterior_w;
	 
		open Movimento;
		loop 
			fetch Movimento into	ie_tipo_w, 
						dt_movimento_w, 
						nr_documento_w, 
						vl_movimento_w, 
						nr_titulo_w;
			EXIT WHEN NOT FOUND; /* apply on Movimento */
 
			vl_credito_w := 0;
			vl_debito_w := 0;
 
			if (ie_tipo_w <= 3) then 
				vl_debito_w	:= vl_movimento_w;
			else 
				vl_credito_w	:= vl_movimento_w;
			end if;
 
			select nextval('t_razao_fornecedor_seq') 
			into STRICT	nr_sequencia_w 
			;
		 
			if (coalesce(cd_conta_contabil_w::text, '') = '') then 
				select 	substr(obter_conta_contab_pf_pj_estab(cd_estabelecimento_p,cd_cgc_w,cd_pessoa_fisica_w,'P',dt_movimento_w),1,100) 
				into STRICT	cd_conta_contabil_w 
				;
			end if;
			 
			vl_saldo_movto_w	:= coalesce(vl_saldo_movto_w,0) + coalesce(vl_credito_w,0) - coalesce(vl_debito_w,0);			
 
			ie_ordem_w	:= ie_ordem_w + 1;
			 
			begin 
			insert into T_Razao_Fornecedor( 
				nr_sequencia, 
				cd_cgc, 
				cd_pessoa_fisica, 
				ie_tipo, 
				dt_atualizacao,	 
				nm_usuario, 
				dt_movimento, 
				nr_documento, 
				vl_credito, 
				vl_debito, 
				cd_tipo_pessoa, 
				cd_conta_contabil, 
				nr_titulo, 
				vl_saldo_atual, 
				ie_ordem) 
			values (nr_sequencia_w, 
				cd_cgc_w, 
				cd_pessoa_fisica_w, 
				ie_tipo_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				dt_movimento_w, 
				nr_documento_w, 
				vl_credito_w, 
				vl_debito_w, 
				obter_dados_pf_pj(NULL, cd_cgc_w, 'TP'), 
				cd_conta_contabil_w, 
				nr_titulo_w, 
				vl_saldo_movto_w, 
				ie_ordem_w);
			exception 
				when others then 
					RAISE NOTICE '%|%', vl_credito_w, vl_debito_w;
			end;
		end loop;
		close Movimento;
	end if;
 
	/*	Edgar 27/08/2008, retirei este bloco 
	select	T_Razao_Fornecedor_seq.nextval 
	into	nr_sequencia_w 
	from	dual; 
	*/
 
	ie_ordem_w	:= ie_ordem_w + 1;
	/* obter saldo atual */
 
	insert into T_Razao_Fornecedor( 
		nr_sequencia, 
		cd_cgc, 
		cd_pessoa_fisica, 
		ie_tipo, 
		dt_atualizacao, 
		nm_usuario, 
		dt_movimento, 
		nr_documento, 
		vl_credito, 
		vl_debito, 
		cd_tipo_pessoa, 
		cd_conta_contabil, 
		vl_saldo_atual, 
		ie_ordem) 
	SELECT	nextval('t_razao_fornecedor_seq'), 
		a.*, 
		ie_ordem_w 
	from	 
	(SELECT	cd_cgc_w cd_cgc, 
		cd_pessoa_fisica_w cd_pessoa_fisica,  
		99 ie_tipo, 
		clock_timestamp() dt_atualizacao, 
		nm_usuario_p nm_usuario, 
		dt_final_w dt_mocimento, 
		wheb_mensagem_pck.get_texto(302902) nr_documento, 
		sum(obter_saldo_titulo_pagar(nr_titulo,dt_final_w)) vl_credito, 
		0 vl_debito, 
		obter_dados_pf_pj(NULL, cd_cgc, 'TP') cd_tipo_pessoa, 
		substr(obter_conta_contab_pf_pj_estab(cd_estabelecimento_p,cd_cgc,cd_pessoa_fisica,'P',dt_inicial_p),1,100) CD_CONTA_CONTABIL, 
		sum(obter_saldo_titulo_pagar(nr_titulo,dt_final_w)) vl_saldo_atual 
	from 	titulo_pagar 
	where	((cd_cgc_w IS NOT NULL AND cd_cgc_w::text <> '' AND cd_cgc = cd_cgc_w) or (cd_pessoa_fisica_w IS NOT NULL AND cd_pessoa_fisica_w::text <> '' AND cd_pessoa_fisica = cd_pessoa_fisica_w)) 
	and (cd_estabelecimento = cd_estabelecimento_p or 0=cd_estabelecimento_p) 
	and	coalesce(dt_contabil, dt_emissao) 	<= dt_final_w 
	and	((ie_situacao not in ('D','C') and 'N' = ie_considera_cancel_p) or (ie_situacao <> 'D' and 'S' = ie_considera_cancel_p)) 
	and ((nr_repasse_terceiro IS NOT NULL AND nr_repasse_terceiro::text <> '') or coalesce(ie_somente_repasse_p,'N') = 'N' ) 
	and (ie_tipo_titulo = ie_tipo_titulo_p or coalesce(ie_tipo_titulo_p::text, '') = '') 
	group by obter_dados_pf_pj(NULL, cd_cgc, 'TP'), 
		substr(obter_conta_contab_pf_pj_estab(cd_estabelecimento_p,cd_cgc,cd_pessoa_fisica,'P',dt_inicial_p),1,100)) a;
 
/*	and	nvl(dt_liquidacao,sysdate) >= dt_inicio_w; Fábio 07/03/2005 OS15754 */
 
end loop;
close Fornecedor;
 
commit;
 
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_razao_fornecedor ( dt_parametro_p timestamp, nm_usuario_p text, ie_considera_cancel_p text, cd_estabelecimento_p bigint, dt_inicial_p timestamp, dt_final_p timestamp, ie_somente_repasse_p text, ie_tipo_titulo_p text, nr_seq_conta_financ_p bigint, ie_tipo_relatorio_p text, ie_data_mes_p text) FROM PUBLIC;

