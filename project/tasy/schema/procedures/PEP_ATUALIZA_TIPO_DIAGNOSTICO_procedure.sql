-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pep_atualiza_tipo_diagnostico ( nr_atendimento_p bigint, ie_tipo_diagnostico_p bigint, dt_diagnostico_p timestamp, qt_tempo_p bigint, ie_unidade_tempo_p text, ie_tipo_doenca_p text, cd_doenca_p text, ds_diagnostico_p text, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_problema_w lista_problema_pac_item.nr_seq_problema%type;
nr_seq_interno_w diagnostico_doenca.nr_seq_interno%type;
nr_sequencia_w lista_problema_pac.nr_sequencia%type;
ie_intensidade_w lista_problema_pac.ie_intensidade%type;
ie_status_w lista_problema_pac.ie_status%type;
ds_observacao_w lista_problema_pac.ds_observacao%type;
dt_fim_w lista_problema_pac.dt_fim%type;

c01 CURSOR FOR
  SELECT a.nr_seq_problema,
    b.ie_intensidade,
    b.ie_status,
    b.ds_observacao
  from lista_problema_pac_item a,
    lista_problema_pac b
  where a.ie_tipo_registro = 'DM'
    and a.nr_seq_registro = nr_seq_interno_w
    and a.nr_seq_problema = b.nr_sequencia;


BEGIN

if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '') and (ie_tipo_diagnostico_p IS NOT NULL AND ie_tipo_diagnostico_p::text <> '') and (dt_diagnostico_p IS NOT NULL AND dt_diagnostico_p::text <> '') then
	
	update diagnostico_medico
        set   ie_tipo_diagnostico  = ie_tipo_diagnostico_p
        where nr_atendimento       = nr_atendimento_p
        and   dt_diagnostico       = dt_diagnostico_p;

end if;


if (nr_atendimento_p IS NOT NULL AND nr_atendimento_p::text <> '')  and (dt_diagnostico_p IS NOT NULL AND dt_diagnostico_p::text <> '') and (cd_doenca_p IS NOT NULL AND cd_doenca_p::text <> '') then
	
	update  diagnostico_doenca
	set     qt_tempo             = qt_tempo_p,
		ie_unidade_tempo     = ie_unidade_tempo_p,
		ie_tipo_doenca       = ie_tipo_doenca_p, 
		ds_diagnostico       = ds_diagnostico_p, 
		ie_tipo_diagnostico  = ie_tipo_diagnostico_p
        where   nr_atendimento       = nr_atendimento_p
        and     dt_diagnostico       = dt_diagnostico_p
        and     cd_doenca            = cd_doenca_p;
		
	
end if;

commit;

select max(nr_seq_interno)
into STRICT nr_seq_interno_w
from diagnostico_doenca
where   nr_atendimento       = nr_atendimento_p
and dt_diagnostico = dt_diagnostico_p
and cd_doenca = cd_doenca_p;

open c01;
	loop
	fetch c01 into nr_seq_problema_w,
    ie_intensidade_w,
    ie_status_w,
    ds_observacao_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
  begin
    if (nr_seq_problema_w > 0) then
      CALL alterar_finalizar_problema(nr_seq_problema_w, ie_intensidade_w, ie_status_w, ds_observacao_w, wheb_usuario_pck.get_nm_usuario, dt_fim_w, 'CT', ie_tipo_diagnostico_p);
    end if;
  end;
  end loop;
close c01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pep_atualiza_tipo_diagnostico ( nr_atendimento_p bigint, ie_tipo_diagnostico_p bigint, dt_diagnostico_p timestamp, qt_tempo_p bigint, ie_unidade_tempo_p text, ie_tipo_doenca_p text, cd_doenca_p text, ds_diagnostico_p text, nm_usuario_p text ) FROM PUBLIC;

