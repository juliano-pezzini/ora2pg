-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE insert_orcamento_pac_proc (nr_seq_orcamento_p orcamento_paciente.nr_sequencia_orcamento%type, nm_usuario_p orcamento_paciente.nm_usuario%type) AS $body$
DECLARE


nr_seq_orcamento_proc_w orcamento_paciente_proc.nr_sequencia%type;
cd_convenio_w orcamento_paciente.cd_convenio%type;
cd_categoria_w orcamento_paciente.cd_categoria%type;
cd_plano_w orcamento_paciente.cd_plano%type;
cd_estabelecimento_w orcamento_paciente.cd_estabelecimento%type;
cd_procedimento_w orcamento_paciente_proc.cd_procedimento%type;
ie_origem_proced_w orcamento_paciente_proc.ie_origem_proced%type;
nr_seq_proc_orc_w orcamento_paciente_proc.nr_sequencia%type;

c_proc_orc_paciente CURSOR FOR
SELECT	a.nr_sequencia,
        a.nr_seq_proc_interno,
        a.ie_lado,
        a.vl_coparticipacao,
        a.nr_seq_proc_orc,
        a.nr_seq_doc_convenio,
        a.nr_ano_guia,
        a.cd_procedimento_tuss,
        obter_medico_crm(a.nr_crm) cd_medico,
        a.qt_procedimento
from	procedimento_guia_wint a
where	a.nr_sequencia_orcamento = nr_seq_orcamento_p
and	coalesce(a.ds_erro::text, '') = ''
and	upper(coalesce(a.ds_status, 'AUTORIZADO')) <> 'ERRO'	
and	a.ie_gerar = 'S';

c_proc_orc_paciente_w c_proc_orc_paciente%rowtype;


BEGIN

begin
select	a.cd_convenio,
	a.cd_categoria,
	a.cd_plano,
	a.cd_estabelecimento
into STRICT	cd_convenio_w,
	cd_categoria_w,
	cd_plano_w,
	cd_estabelecimento_w
from	orcamento_paciente a
where	a.nr_sequencia_orcamento = nr_seq_orcamento_p;
exception
        when no_data_found then
                cd_convenio_w := null;
                cd_categoria_w := null;
                cd_plano_w := null;
                cd_estabelecimento_w := null;
        when too_many_rows then
                cd_convenio_w := null;
                cd_categoria_w := null;
                cd_plano_w := null;
                cd_estabelecimento_w := null;
end;

open c_proc_orc_paciente;
loop
        fetch c_proc_orc_paciente into
        c_proc_orc_paciente_w;
        EXIT WHEN NOT FOUND; /* apply on c_proc_orc_paciente */

        begin
        select  a.nr_sequencia
	into STRICT    nr_seq_orcamento_proc_w
	from    orcamento_paciente_proc a
	where   a.nr_sequencia = c_proc_orc_paciente_w.nr_seq_proc_orc;
        exception
                when no_data_found then
                        nr_seq_orcamento_proc_w := null;
                when  too_many_rows then
                        nr_seq_orcamento_proc_w := null;
        end;

        if (coalesce(nr_seq_orcamento_proc_w::text, '') = '')then
                SELECT * FROM obter_proc_tab_interno_conv(
				c_proc_orc_paciente_w.nr_seq_proc_interno, cd_estabelecimento_w, cd_convenio_w, cd_categoria_w, cd_plano_w, null, cd_procedimento_w, ie_origem_proced_w, null, clock_timestamp(), null, null, null, null, null, null, null, null) INTO STRICT cd_procedimento_w, ie_origem_proced_w;

                select  nextval('orcamento_paciente_proc_seq')
                into STRICT    nr_seq_proc_orc_w
;

                insert into orcamento_paciente_proc(nr_sequencia,
                                                    nr_sequencia_orcamento,
                                                    vl_procedimento,
                                                    vl_medico,
                                                    vl_filme,
                                                    vl_desconto,
                                                    vl_custo_operacional,
                                                    vl_custo,
                                                    vl_coparticipacao,
                                                    vl_auxiliares,
                                                    vl_anestesista,
                                                    tx_procedimento,
                                                    qt_procedimento,
                                                    nr_seq_proc_interno,
                                                    nm_usuario,
                                                    ie_origem_proced,
                                                    ie_lado,
                                                    dt_atualizacao,
                                                    cd_proced_tuss,
                                                    cd_procedimento,
                                                    ie_valor_informado,
                                                    cd_medico)
                                             values (nr_seq_proc_orc_w,
                                                    nr_seq_orcamento_p,
                                                    0,
                                                    0,
                                                    0,
                                                    0,
                                                    0,
                                                    0,
                                                    c_proc_orc_paciente_w.vl_coparticipacao,
                                                    0,
                                                    0,
                                                    100,
                                                    c_proc_orc_paciente_w.qt_procedimento,
                                                    c_proc_orc_paciente_w.nr_seq_proc_interno,
                                                    nm_usuario_p,
                                                    ie_origem_proced_w,
                                                    c_proc_orc_paciente_w.ie_lado,
                                                    clock_timestamp(),
                                                    c_proc_orc_paciente_w.cd_procedimento_tuss,
                                                    cd_procedimento_w,
                                                    'N',
                                                    c_proc_orc_paciente_w.cd_medico);
                update	procedimento_guia_wint a
		set	a.nr_seq_proc_orc = nr_seq_proc_orc_w
		where	a.nr_sequencia = c_proc_orc_paciente_w.nr_sequencia;
        else
                update	orcamento_paciente_proc a
		set	a.vl_coparticipacao = coalesce(c_proc_orc_paciente_w.vl_coparticipacao, vl_coparticipacao),
                        a.dt_atualizacao = clock_timestamp(),
                        a.nm_usuario = nm_usuario_p
		where	a.nr_sequencia = nr_seq_orcamento_proc_w;
        end if;

        update  orcamento_paciente a
        set     a.nr_doc_guia = c_proc_orc_paciente_w.nr_seq_doc_convenio,
                a.cd_medico = coalesce(a.cd_medico, c_proc_orc_paciente_w.cd_medico),
                a.dt_atualizacao = clock_timestamp(),
                a.nm_usuario = nm_usuario_p
        where   a.nr_sequencia_orcamento = nr_seq_orcamento_p;

        CALL update_status_proc_wint(to_char(c_proc_orc_paciente_w.nr_sequencia), 'G');
end loop;
close c_proc_orc_paciente;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE insert_orcamento_pac_proc (nr_seq_orcamento_p orcamento_paciente.nr_sequencia_orcamento%type, nm_usuario_p orcamento_paciente.nm_usuario%type) FROM PUBLIC;

