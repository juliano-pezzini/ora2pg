-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE arredondar_deducao_conv_conta ( nr_interno_conta_p bigint, vl_base_com_imposto_p bigint, vl_base_sem_imposto_p bigint, ie_coseguro_maximo_p text, pr_imposto_p bigint, nm_usuario_p text) AS $body$
DECLARE


vl_total_item_w		conta_paciente.vl_conta%type := 0;

vl_medico_dif_w		procedimento_paciente.vl_medico%type;
vl_custo_oper_dif_w	procedimento_paciente.vl_custo_operacional%type;
vl_procedimento_w	procedimento_paciente.vl_procedimento%type;

nr_seq_proc_dif_w	procedimento_paciente.nr_sequencia%type;
nr_seq_proc_ded_dif_w	procedimento_paciente.nr_sequencia%type;
nr_seq_mat_dif_w	material_atend_paciente.nr_sequencia%type;
nr_seq_mat_ded_dif_w	material_atend_paciente.nr_sequencia%type;
vl_material_w			material_atend_paciente.vl_material%type;
nr_seq_deducao_dif_w	conta_pac_ded_conv_item.nr_sequencia%type;

ie_tipo_calculo_w	conta_pac_deducao_conv.ie_tipo_calculo%type;
nr_seq_deducao_conv_w	conta_pac_deducao_conv.nr_sequencia%type;
vl_calculado_w		conta_pac_deducao_conv.vl_calculado%type;
vl_informado_calculo_w	conta_pac_deducao_conv.vl_informado_calculo%type;
nr_interno_conta_partic_w	conta_paciente.nr_interno_conta%type;

nr_seq_conta_ded_item_w	conta_pac_ded_conv_item.nr_sequencia%type;

vl_diferenca_w		double precision := 0;

vl_total_rateio_imposto_w		double precision;
vl_total_rateio_sem_imposto_w	double precision;
vl_diferenca_imposto_w			double precision;
vl_diferenca_sem_imposto_w		double precision;
vl_base_com_imposto_w			double precision;
vl_base_sem_imposto_w			double precision;

vl_diferenca_total_w			double precision;
vl_calculado_com_imposto_w		double precision;
vl_calculado_sem_imposto_w		double precision;
i		integer;
vl_diferenca_anterior_w			double precision;
ie_imposto_w		varchar(1);
vl_max_coseguro_conta_w		conta_paciente.vl_maximo_coseguro%type := 0;
qt_registro_imposto_w		bigint;
qt_registro_sem_imposto_w	bigint;

vl_total_coseguro_w		conta_pac_deducao_conv.vl_calculado%type;
vl_calculado_com_imp_w	conta_pac_deducao_conv.vl_calculado_com_imp%type;
vl_calculado_sem_imp_w	conta_pac_deducao_conv.vl_calculado_sem_imp%type;
ie_alteracao_w			varchar(1)	:= 'N';
nr_atendimento_w		conta_paciente.nr_interno_conta%type;
nr_seq_proc_pacote_w		procedimento_paciente.nr_seq_proc_pacote%type;
cd_convenio_w			procedimento_paciente.cd_convenio%type;
cd_categoria_w			procedimento_paciente.cd_categoria%type;

c01 CURSOR FOR
	SELECT	ie_tipo_calculo,
			nr_sequencia,
			vl_informado_calculo,
			vl_calculado,
			vl_calculado_com_imp,
			vl_calculado_sem_imp
	from	conta_pac_deducao_conv
	where	nr_seq_conta_orig = nr_interno_conta_p
	and		coalesce(vl_calculado,0) <> 0;

c_deducao_imposto CURSOR(	nr_seq_deducao_pc	bigint,
							ie_imposto_pc	text) FOR
	SELECT	a.nr_sequencia,
			a.nr_seq_propaci_origem,
			a.nr_seq_propaci_dest,
			a.nr_seq_matpaci_origem,
			a.nr_seq_matpaci_dest,
			a.vl_rateio
	from	conta_pac_ded_conv_item a
	where	a.nr_seq_deducao_conv	= nr_seq_deducao_pc
	and		a.vl_rateio_com_imp <> 0
	and		ie_imposto_pc = 'S'
	
union all

	SELECT	a.nr_sequencia,
			a.nr_seq_propaci_origem,
			a.nr_seq_propaci_dest,
			a.nr_seq_matpaci_origem,
			a.nr_seq_matpaci_dest,
			a.vl_rateio
	from	conta_pac_ded_conv_item a
	where	a.nr_seq_deducao_conv	= nr_seq_deducao_pc
	and		a.vl_rateio_sem_imp <> 0
	and		ie_imposto_pc = 'N'
	order by
		vl_rateio desc;

BEGIN
vl_base_com_imposto_w	:= coalesce(vl_base_com_imposto_p,0);
vl_base_sem_imposto_w	:= coalesce(vl_base_sem_imposto_p,0);

select	coalesce(sum(a.vl_calculado),0)
into STRICT	vl_total_coseguro_w
from	conta_pac_deducao_conv a
where	a.ie_tipo_calculo in ('H','N','A')
and		a.nr_seq_conta_orig = nr_interno_conta_p;

if (coalesce(nr_interno_conta_p,0) > 0) then
	open c01;
		loop
		fetch	c01
		into	ie_tipo_calculo_w,
			nr_seq_deducao_conv_w,
			vl_informado_calculo_w,
			vl_calculado_w,
			vl_calculado_com_imp_w,
			vl_calculado_sem_imp_w;
		EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		select	coalesce(sum(vl_rateio_com_imp),0),
				count(1)
		into STRICT	vl_total_rateio_imposto_w,
				qt_registro_imposto_w
		from	conta_pac_ded_conv_item a,
				conta_pac_deducao_conv b
		where	a.nr_seq_deducao_conv = b.nr_sequencia
		and		b.nr_sequencia	= nr_seq_deducao_conv_w
		and		a.vl_rateio_com_imp <> 0;

		select	coalesce(sum(vl_rateio_sem_imp),0),
				count(1)
		into STRICT	vl_total_rateio_sem_imposto_w,
				qt_registro_sem_imposto_w
		from	conta_pac_ded_conv_item a,
				conta_pac_deducao_conv b
		where	a.nr_seq_deducao_conv = b.nr_sequencia
		and		b.nr_sequencia	= nr_seq_deducao_conv_w
		and		a.vl_rateio_sem_imp <> 0;

		select	coalesce(sum(vl_rateio),0)
		into STRICT	vl_total_item_w
		from	conta_pac_ded_conv_item a
		where	nr_seq_deducao_conv = nr_seq_deducao_conv_w;

		vl_calculado_com_imposto_w	:= vl_calculado_com_imp_w;

		vl_diferenca_imposto_w	:= 0;
		if (vl_total_rateio_imposto_w <> vl_calculado_com_imposto_w) then
			vl_diferenca_imposto_w	:= vl_calculado_com_imposto_w - vl_total_rateio_imposto_w;
		end if;

		vl_calculado_sem_imposto_w	:= vl_calculado_sem_imp_w;

		vl_diferenca_sem_imposto_w	:= 0;
		if (vl_total_rateio_sem_imposto_w <> vl_calculado_sem_imposto_w) then
			vl_diferenca_sem_imposto_w	:= vl_calculado_sem_imposto_w - vl_total_rateio_sem_imposto_w;
		end if;

		i	:= 1;
		for	i in 1..4 loop
			/* Com imposto */

			if (i = 1) then
				vl_diferenca_total_w	:= vl_diferenca_imposto_w;
				ie_imposto_w	:= 'S';
			/* Sem imposto */

			elsif (i = 3) then
				vl_diferenca_total_w	:= vl_diferenca_sem_imposto_w;
				ie_imposto_w	:= 'N';
			/* Se ainda houver diferença, para ambos */

			elsif (i in (2,4)) then
				vl_diferenca_w	:= vl_diferenca_total_w;
			end if;
			if (vl_diferenca_w	<> vl_diferenca_total_w) then
				if (vl_diferenca_total_w > 0) then
					vl_diferenca_w	:= 0.01;
				elsif (vl_diferenca_total_w < 0) then
					vl_diferenca_w	:= -0.01;
				else
					vl_diferenca_w	:= 0;
				end if;
			end if;

			/* Encontrar um procedimento com imposto para colocar a diferença */

			for r_c_deducao_imposto in c_deducao_imposto(nr_seq_deducao_conv_w,ie_imposto_w) loop
				if (vl_diferenca_total_w <> 0) and (abs(vl_diferenca_total_w) < 100) then
					if (r_c_deducao_imposto.nr_seq_matpaci_origem IS NOT NULL AND r_c_deducao_imposto.nr_seq_matpaci_origem::text <> '') and (r_c_deducao_imposto.nr_seq_matpaci_dest IS NOT NULL AND r_c_deducao_imposto.nr_seq_matpaci_dest::text <> '') then
						select	coalesce(sum(vl_material),0)
						into STRICT	vl_material_w
						from	material_atend_paciente
						where	nr_sequencia	= r_c_deducao_imposto.nr_seq_matpaci_origem;

						if (vl_material_w <> 0) then
							ie_alteracao_w	:= 'S';
							/* Origem */

							update	material_atend_paciente
							set		vl_material = vl_material - vl_diferenca_w
							where	nr_sequencia = r_c_deducao_imposto.nr_seq_matpaci_origem;

							/*Atualizar o imposto do item após a dedução*/

							CALL gerar_tributo_conta_pac(nr_interno_conta_p, r_c_deducao_imposto.nr_seq_matpaci_origem, 'M', nm_usuario_p);

							/* Destino */

							update	conta_pac_ded_conv_item
							set		vl_rateio = vl_rateio + vl_diferenca_w,
									vl_rateio_com_imp = CASE WHEN ie_imposto_w='S' THEN vl_rateio_com_imp + vl_diferenca_w  ELSE vl_rateio_com_imp END ,
									vl_rateio_sem_imp = CASE WHEN ie_imposto_w='N' THEN vl_rateio_sem_imp + vl_diferenca_w  ELSE vl_rateio_sem_imp END
							where	nr_sequencia = r_c_deducao_imposto.nr_sequencia;

							update	material_atend_paciente
							set		vl_material = vl_material + vl_diferenca_w
							where	nr_sequencia = r_c_deducao_imposto.nr_seq_matpaci_dest;

							select	nr_interno_conta
							into STRICT	nr_interno_conta_partic_w
							from	material_atend_paciente a
							where	a.nr_sequencia	= r_c_deducao_imposto.nr_seq_matpaci_dest;

							/*Atualizar o imposto do item após a dedução*/

							CALL gerar_tributo_conta_pac(nr_interno_conta_partic_w, r_c_deducao_imposto.nr_seq_matpaci_dest, 'M', nm_usuario_p);

						else
							ie_alteracao_w	:= 'N';
						end if;

					elsif (r_c_deducao_imposto.nr_seq_propaci_origem IS NOT NULL AND r_c_deducao_imposto.nr_seq_propaci_origem::text <> '') and (r_c_deducao_imposto.nr_seq_propaci_dest IS NOT NULL AND r_c_deducao_imposto.nr_seq_propaci_dest::text <> '') then
						/* Origem */

						select	coalesce(sum(vl_procedimento),0),
								coalesce(sum(vl_custo_operacional),0),
								coalesce(sum(vl_medico),0)
						into STRICT	vl_procedimento_w,
								vl_custo_oper_dif_w,
								vl_medico_dif_w
						from	procedimento_paciente
						where	nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_dest;

						if (vl_procedimento_w <> 0) then
							ie_alteracao_w	:= 'S';

							update	procedimento_paciente
							set		vl_procedimento = vl_procedimento - vl_diferenca_w
							where	nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_origem;

							select  max(nr_seq_proc_pacote),
								max(nr_atendimento),
								max(cd_convenio),
								max(cd_categoria)
							into STRICT 	nr_seq_proc_pacote_w,
								nr_atendimento_w,
								cd_convenio_w,
								cd_categoria_w
							from  	procedimento_paciente
							where   nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_origem;

							if (r_c_deducao_imposto.nr_seq_propaci_origem = nr_seq_proc_pacote_w) then
								/*Rateia o pacote ao processar a conta*/

								CALL Calcular_Pacote(nr_atendimento_w,
										nr_interno_conta_p,
										cd_convenio_w,
										cd_categoria_w,
										nm_usuario_p,
										'N','N','N','S','N');
							else
								CALL gerar_tributo_conta_pac(nr_interno_conta_p, r_c_deducao_imposto.nr_seq_propaci_origem, 'P', nm_usuario_p);
							end if;


							if (vl_custo_oper_dif_w <> 0) then
								update	procedimento_paciente
								set		vl_custo_operacional = vl_custo_operacional - vl_diferenca_w
								where	nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_origem;
							elsif (vl_medico_dif_w <> 0) then
								update	procedimento_paciente
								set		vl_medico = vl_medico - vl_diferenca_w
								where	nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_origem;
							end if;

							/* Destino */

							update	conta_pac_ded_conv_item
							set		vl_rateio = vl_rateio + vl_diferenca_w,
									vl_rateio_com_imp = CASE WHEN ie_imposto_w='S' THEN vl_rateio_com_imp + vl_diferenca_w  ELSE vl_rateio_com_imp END ,
									vl_rateio_sem_imp = CASE WHEN ie_imposto_w='N' THEN vl_rateio_sem_imp + vl_diferenca_w  ELSE vl_rateio_sem_imp END
							where	nr_sequencia = r_c_deducao_imposto.nr_sequencia;

							update	procedimento_paciente
							set		vl_procedimento = vl_procedimento + vl_diferenca_w
							where	nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_dest;

							select	nr_interno_conta
							into STRICT	nr_interno_conta_partic_w
							from	procedimento_paciente a
							where	a.nr_sequencia	= r_c_deducao_imposto.nr_seq_propaci_dest;

							CALL gerar_tributo_conta_pac(nr_interno_conta_partic_w, r_c_deducao_imposto.nr_seq_propaci_dest, 'P', nm_usuario_p);

							if (vl_custo_oper_dif_w <> 0) then
								update	procedimento_paciente
								set		vl_custo_operacional = vl_custo_operacional + vl_diferenca_w
								where	nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_dest
								and		vl_custo_operacional > 0;
							elsif (vl_medico_dif_w <> 0) then
								update	procedimento_paciente
								set		vl_medico = vl_medico + vl_diferenca_w
								where	nr_sequencia = r_c_deducao_imposto.nr_seq_propaci_dest
								and		vl_medico > 0;
							end if;
						else
							ie_alteracao_w	:= 'N';
						end if;
					end if;
					if (ie_alteracao_w = 'S') then
						vl_diferenca_total_w	:= vl_diferenca_total_w - vl_diferenca_w;
					end if;
				end if;
			end loop; -- cursor
		end loop; -- for
		end;
	end loop;
	close c01;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE arredondar_deducao_conv_conta ( nr_interno_conta_p bigint, vl_base_com_imposto_p bigint, vl_base_sem_imposto_p bigint, ie_coseguro_maximo_p text, pr_imposto_p bigint, nm_usuario_p text) FROM PUBLIC;

