-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_ev_linha_cuidado ( IE_TIPO_P text, NM_TABELA_P text, NR_SEQUENCIA_P bigint, DS_INFO_ADICIONAL_P text, CD_PESSOA_FISICA_P text, NM_USUARIO_P text, IE_COMMIT_P text DEFAULT 'S') AS $body$
DECLARE


cd_medico_w                   PESSOA_FISICA.CD_PESSOA_FISICA%TYPE;
ie_tipo_agendamento_w         PROTOCOLO_INT_PAC_EVENTO.IE_TIPO_AGENDAMENTO%TYPE;
ie_tipo_atendimento_w         PROTOCOLO_INT_PAC_EVENTO.IE_TIPO_ATENDIMENTO%TYPE;
ie_clinica_w                  PROTOCOLO_INT_PAC_EVENTO.IE_CLINICA%TYPE;
ie_origem_proced_w            PROTOCOLO_INT_PAC_EVENTO.IE_ORIGEM_PROCED%TYPE;
cd_procedimento_w             PROTOCOLO_INT_PAC_EVENTO.CD_PROCEDIMENTO%TYPE;
nr_seq_dispositivo_w          PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_DISPOSITIVO%TYPE;
ie_acao_w                     PROTOCOLO_INT_PAC_EVENTO.IE_ACAO%TYPE;
nr_seq_tipo_consulta_w        PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_TIPO_CONSULTA%TYPE;
cd_protocolo_w                PROTOCOLO_INT_PAC_EVENTO.CD_PROTOCOLO%TYPE;
nr_seq_protocolo_w            PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_PROTOCOLO%TYPE;
nr_seq_escala_w               PESSOA_FISICA.DS_OBSERVACAO%TYPE;
nr_seq_score_flex_w           PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_SCORE_FLEX%TYPE;
nr_seq_score_flex_ii_w        PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_SCORE_FLEX_II%TYPE;
nr_seq_evento_w               PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_EVENTO%TYPE;
dt_avaliacao_w                PROTOCOLO_INT_PAC_EVENTO.DT_AVALIACAO%TYPE;
cd_classif_setor_w            PROTOCOLO_INT_PAC_EVENTO.CD_CLASSIF_SETOR%TYPE;
cd_especialidade_medico_w     PROTOCOLO_INT_PAC_EVENTO.CD_ESPECIALIDADE_MEDICO%TYPE;
ie_evolucao_clinica_w         PROTOCOLO_INT_PAC_EVENTO.IE_EVOLUCAO_CLINICA%TYPE;
nr_seq_programa_saude_w       PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_PROGRAMA_SAUDE%TYPE;
nr_seq_vacina_w               PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_VACINA%TYPE;
ie_dose_w                     PROTOCOLO_INT_PAC_EVENTO.IE_DOSE%TYPE;
dt_real_w                     PROTOCOLO_INT_PAC_EVENTO.DT_REAL%TYPE;
dt_inicio_parto_w             PROTOCOLO_INT_PAC_EVENTO.DT_PROV_PARTO%TYPE;
nr_seq_grupo_exame_nao_lab_w  PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_GRUPO_EXAME_NAO_LAB%TYPE;
nr_seq_classif_w              PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_CLASSIF%TYPE;
nr_seq_template_w             PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_TEMPLATE%TYPE;
nr_seq_avaliacao_w            PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_AVALIACAO%TYPE;
nr_seq_grupo_exame_lab_w      PROTOCOLO_INT_PAC_EVENTO.NR_SEQ_GRUPO_EXAME_LAB%TYPE;
ie_tipo_radio_w               PROTOCOLO_INT_PAC_EVENTO.IE_TIPO%TYPE;
nr_seq_tipo_w                 RXT_TUMOR.NR_SEQ_TIPO%TYPE;

-----------------------------------Cursores------------------------------------
padrao CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and coalesce(dt_real_w, clock_timestamp()) between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P;

agendamentos CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and coalesce(c.IE_TIPO_AGENDAMENTO, coalesce(ie_tipo_agendamento_w, 0)) = coalesce(ie_tipo_agendamento_w, 0)
  and (ie_tipo_agendamento_w != 'C' or coalesce(c.CD_ESPECIALIDADE::text, '') = '' or obter_se_especialidades_medico(cd_medico_w, c.CD_ESPECIALIDADE) = 'S');

atendimentos CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and coalesce(c.IE_TIPO_ATENDIMENTO, ie_tipo_atendimento_w) = ie_tipo_atendimento_w
  and coalesce(c.IE_CLINICA, ie_clinica_w) = ie_clinica_w;

cirurgias CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and coalesce(c.IE_ORIGEM_PROCED, ie_origem_proced_w) = ie_origem_proced_w
  and coalesce(c.CD_PROCEDIMENTO, cd_procedimento_w) = cd_procedimento_w;

dispositivos CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and coalesce(c.NR_SEQ_DISPOSITIVO, nr_seq_dispositivo_w) = nr_seq_dispositivo_w
  and coalesce(c.IE_ACAO, ie_acao_w) = ie_acao_w;

consultas_oft CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and coalesce(c.NR_SEQ_TIPO_CONSULTA, nr_seq_tipo_consulta_w) = nr_seq_tipo_consulta_w;

cpoe CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and coalesce(c.CD_PROTOCOLO, cd_protocolo_w) = cd_protocolo_w
  and coalesce(c.NR_SEQ_PROTOCOLO, nr_seq_protocolo_w) = nr_seq_protocolo_w;

escalas CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c,
  VICE_ESCALA d
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and c.NR_SEQ_ESCALA = d.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and (coalesce(d.IE_ESCALA::text, '') = '' or obter_se_contido(d.IE_ESCALA, nr_seq_escala_w) = 'S')
  and coalesce(c.NR_SEQ_SCORE_FLEX, nr_seq_score_flex_w) = nr_seq_score_flex_w
  and coalesce(c.NR_SEQ_SCORE_FLEX_II, nr_seq_score_flex_ii_w) = nr_seq_score_flex_ii_w;

eventos CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and coalesce(c.NR_SEQ_EVENTO, nr_seq_evento_w) = nr_seq_evento_w;

locoRegional CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and dt_avaliacao_w between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0);

movimentacaoPaciente CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(c.CD_CLASSIF_SETOR, cd_classif_setor_w) = cd_classif_setor_w;

evolucoes CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(c.CD_ESPECIALIDADE_MEDICO, cd_especialidade_medico_w) = cd_especialidade_medico_w
  and coalesce(c.IE_EVOLUCAO_CLINICA, ie_evolucao_clinica_w) = ie_evolucao_clinica_w
  and coalesce(c.NR_SEQ_TEMPLATE, nr_seq_template_w) = nr_seq_template_w
  and coalesce(c.NR_SEQ_AVALIACAO, nr_seq_avaliacao_w) = nr_seq_avaliacao_w;

programasSaude CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(c.NR_SEQ_PROGRAMA_SAUDE, nr_seq_programa_saude_w) = nr_seq_programa_saude_w;

vacinas CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(c.NR_SEQ_VACINA, nr_seq_vacina_w) = nr_seq_vacina_w
  and coalesce(c.IE_DOSE, ie_dose_w) = ie_dose_w;

partos CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(trunc(c.DT_PROV_PARTO), trunc(dt_inicio_parto_w)) = trunc(dt_inicio_parto_w);

exNaoLaboratoriais CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(c.NR_SEQ_GRUPO_EXAME_NAO_LAB, nr_seq_grupo_exame_nao_lab_w) = nr_seq_grupo_exame_nao_lab_w
  and coalesce(c.NR_SEQ_CLASSIF, nr_seq_classif_w) = nr_seq_classif_w;

exLaboratoriais CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(c.NR_SEQ_GRUPO_EXAME_LAB, nr_seq_grupo_exame_lab_w) = nr_seq_grupo_exame_lab_w;

radioterapias CURSOR FOR
SELECT c.nr_sequencia
from PROTOCOLO_INT_PACIENTE a,
  PROTOCOLO_INT_PAC_ETAPA b,
  PROTOCOLO_INT_PAC_EVENTO c
where b.NR_SEQ_PROTOCOLO_INT_PAC = a.NR_SEQUENCIA
  and c.NR_SEQ_PRT_INT_PAC_ETAPA = b.NR_SEQUENCIA
  and a.CD_PESSOA_FISICA = CD_PESSOA_FISICA_P
  and coalesce(b.DT_FINAL_REAL::text, '') = ''
  and c.IE_TIPO_EVENTO = IE_TIPO_P
  and clock_timestamp() between INICIO_DIA(c.DT_PREVISTA) - coalesce(c.NR_DIAS_ANT, 0) and Fim_Dia(c.DT_PREVISTA) + coalesce(c.NR_DIAS_DEP, 0)
  and coalesce(c.IE_TIPO, ie_tipo_radio_w) = ie_tipo_radio_w;
-----------------------------------/Cursores-----------------------------------
-----------------------------------Objects-------------------------------------
PROCEDURE update_int_pac_evento(
    nr_sequencia_w PROTOCOLO_INT_PAC_EVENTO.NR_SEQUENCIA%type,
    dt_info_w PROTOCOLO_INT_PAC_EVENTO.DT_REAL%type := null
) IS
  nr_seq_protocolo_int_pac_w 	protocolo_int_paciente.nr_sequencia%TYPE;
  nm_usuario_w				protocolo_int_paciente.nm_usuario%TYPE;
  ds_tratamento_w			protocolo_int_paciente.ds_tratamento%TYPE;
  dt_inicial_previsto_w			protocolo_int_paciente.dt_inicial_previsto%TYPE;
  ie_status_w				protocolo_int_paciente.ie_status%TYPE;
  ie_variacao_w				protocolo_int_paciente.ie_variacao%TYPE;
  ds_variacao_w				protocolo_int_paciente.ds_variacao%TYPE;
  ie_alerta_w				protocolo_int_paciente.ie_alerta%TYPE;
  nr_seq_nais_insurance_w		protocolo_int_paciente.nr_seq_nais_insurance%TYPE;
  cd_departamento_med_w			protocolo_int_paciente.cd_departamento_med%TYPE;
BEGIN

    update PROTOCOLO_INT_PAC_EVENTO
    set DT_REAL = coalesce(dt_info_w, clock_timestamp()),
        DS_TABELA_ORIGEM = NM_TABELA_P,
        NR_SEQ_ORIGEM = NR_SEQUENCIA_P
    where NR_SEQUENCIA = nr_sequencia_w;

    if (IE_COMMIT_P = 'S') then
    	commit;
    end if;

    begin
    	SELECT
		a.nr_sequencia,
		a.nm_usuario,
		a.ds_tratamento,
		a.dt_inicial_previsto,
		a.ie_status,
		a.ie_variacao,
		a.ds_variacao,
		a.ie_alerta,
		a.nr_seq_nais_insurance,
		a.cd_departamento_med
	INTO STRICT
		nr_seq_protocolo_int_pac_w,
		nm_usuario_w,
		ds_tratamento_w,
		dt_inicial_previsto_w,
		ie_status_w,
		ie_variacao_w,
		ds_variacao_w,
		ie_alerta_w,
		nr_seq_nais_insurance_w,
		cd_departamento_med_w
	FROM PROTOCOLO_INT_PACIENTE a,
 	     PROTOCOLO_INT_PAC_ETAPA b,
	     PROTOCOLO_INT_PAC_EVENTO c
	where a.nr_sequencia = b.nr_seq_protocolo_int_pac
	and b.nr_sequencia = c.nr_seq_prt_int_pac_etapa
	and c.NR_SEQUENCIA = nr_sequencia_w;
	exception
		when no_data_found then
		    nr_seq_protocolo_int_pac_w:=null;
		    nm_usuario_w:=null;
		    ds_tratamento_w:=null;
		    dt_inicial_previsto_w:=null;
		    ie_status_w:=null;
		    ie_variacao_w:=null;
		    ds_variacao_w:=null;
		    ie_alerta_w:=null;
		    nr_seq_nais_insurance_w:=null;
		    cd_departamento_med_w:=null;
		when too_many_rows then
		    nr_seq_protocolo_int_pac_w:=null;
		    nm_usuario_w:=null;
		    ds_tratamento_w:=null;
		    dt_inicial_previsto_w:=null;
		    ie_status_w:=null;
		    ie_variacao_w:=null;
		    ds_variacao_w:=null;
		    ie_alerta_w:=null;
		    nr_seq_nais_insurance_w:=null;
		    cd_departamento_med_w:=null;

    end;

    CALL prot_int_atualizar(nr_seq_protocolo_int_pac_w, nm_usuario_w, ds_tratamento_w, dt_inicial_previsto_w, ie_status_w, ie_variacao_w, ds_variacao_w, ie_alerta_w, nr_seq_nais_insurance_w, cd_departamento_med_w);

END;

/**
* DS_INFO_ADICIONAL_P must be in the following format:
*  ds_description1=ds_value1;ds_description2=ds_value;
*/
FUNCTION get_info(
  ds_info_w VARCHAR2
) return;

begin
  if (DS_INFO_ADICIONAL_P like '%'||ds_info_w||'=%') then
    ds_informacao_w := substr(DS_INFO_ADICIONAL_P, position(ds_info_w in DS_INFO_ADICIONAL_P) + LENGTH(ds_info_w) + 1);
    return;
  else
    return;
  end if;
end;
-----------------------------------/Objects-------------------------------------
-----------------------------------Inicio---------------------------------------
begin
  select max(cd_pessoa_fisica)
  into STRICT cd_medico_w
  from usuario
  where nm_usuario = NM_USUARIO_P;
  if (IE_TIPO_P = 'CD' or--Diagnostico
     IE_TIPO_P = 'LI' or--Lista de problemas
     IE_TIPO_P = 'RA' or--Receitas
     IE_TIPO_P = 'FC' or--Feridas e curativos
     IE_TIPO_P = 'QT') then--Quimioterapia
    FOR ev IN padrao LOOP BEGIN
      update_int_pac_evento(ev.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'SV' or--Sinais vitais e monitorizacao geral
         IE_TIPO_P = 'SE') then--Solicitacao externa de exames
    dt_real_w := coalesce(to_date(get_info('dt_real_w'), 'dd/mm/yyyy hh24:mi:ss'), clock_timestamp());
    FOR ev IN padrao LOOP BEGIN
      update_int_pac_evento(ev.nr_sequencia, dt_real_w);
    end; end loop;

  elsif (IE_TIPO_P = 'AG') then--Agendamentos
    ie_tipo_agendamento_w := coalesce(DS_INFO_ADICIONAL_P, 0);
    FOR agendamento IN agendamentos LOOP BEGIN
      update_int_pac_evento(agendamento.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'AT') then--Atendimentos
    ie_tipo_atendimento_w := coalesce(Obter_Tipo_Atendimento(DS_INFO_ADICIONAL_P),0);
		ie_clinica_w 			:= coalesce(Obter_Clinica_Atend(DS_INFO_ADICIONAL_P,'C'),0);
    FOR atendimento IN atendimentos LOOP BEGIN
      update_int_pac_evento(atendimento.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'CI') then--Cirurgias
    ie_origem_proced_w := coalesce(get_info('ie_origem_proced_w'), 0);
    cd_procedimento_w := coalesce(get_info('cd_procedimento_w'), 0);
    FOR cirurgia IN cirurgias LOOP BEGIN
      update_int_pac_evento(cirurgia.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'DI') then--Dispositivos
    nr_seq_dispositivo_w := coalesce(get_info('nr_seq_dispositivo_w'), 0);
    ie_acao_w := coalesce(get_info('ie_acao_w'), 0);
    FOR dispositivo IN dispositivos LOOP BEGIN
      update_int_pac_evento(dispositivo.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'CO') then--Consulta oftalmologica
    nr_seq_tipo_consulta_w := coalesce(DS_INFO_ADICIONAL_P, 0);
    FOR consulta IN consultas_oft LOOP BEGIN
      update_int_pac_evento(consulta.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'CP') then--CPOE
    cd_protocolo_w := coalesce(get_info('cd_protocolo_w'), 0);
    nr_seq_protocolo_w := coalesce(get_info('nr_seq_protocolo_w'), 0);
    FOR registro IN cpoe LOOP BEGIN
      update_int_pac_evento(registro.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'EI') then--Escalas e indices
    nr_seq_escala_w := coalesce(get_info('nr_seq_escala_w'), 0);
    nr_seq_score_flex_w := coalesce(get_info('nr_seq_score_flex_w'), 0);
    nr_seq_score_flex_ii_w := coalesce(get_info('nr_seq_score_flex_ii_w'), 0);
    FOR escala IN escalas LOOP BEGIN
      update_int_pac_evento(escala.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'ET') then--Eventos
    nr_seq_evento_w := coalesce(DS_INFO_ADICIONAL_P, 0);
    FOR evento IN eventos LOOP BEGIN
      update_int_pac_evento(evento.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'LR') then--Loco regional
    dt_avaliacao_w := to_date(DS_INFO_ADICIONAL_P, 'dd/mm/yyyy');
    FOR loco IN locoRegional LOOP BEGIN
      update_int_pac_evento(loco.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'MP') then--Movimentacao Paciente
    cd_classif_setor_w := coalesce(DS_INFO_ADICIONAL_P, 0);
    FOR mov IN movimentacaoPaciente LOOP BEGIN
      update_int_pac_evento(mov.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'EV') then--Notas clinicas
    cd_especialidade_medico_w := coalesce(get_info('cd_especialidade_medico_w'), 0);
    ie_evolucao_clinica_w := coalesce(get_info('ie_evolucao_clinica_w'), 0);
    nr_seq_template_w := coalesce(get_info('nr_seq_template_w'), 0);
    nr_seq_avaliacao_w := coalesce(get_info('nr_seq_avaliacao_w'), 0);
    FOR evolucao IN evolucoes LOOP BEGIN
      update_int_pac_evento(evolucao.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'PS') then--Programa de saude
    nr_seq_programa_saude_w := coalesce(DS_INFO_ADICIONAL_P, 0);
    FOR prog IN programasSaude LOOP BEGIN
      update_int_pac_evento(prog.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'VA') then--Vacinas
    nr_seq_vacina_w := coalesce(get_info('nr_seq_vacina_w'), 0);
    ie_dose_w := coalesce(get_info('ie_dose_w'), 0);
    FOR vac IN vacinas LOOP BEGIN
      update_int_pac_evento(vac.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'HP') then--Historia de parto
    dt_inicio_parto_w := coalesce(to_date(get_info('dt_inicio_parto_w'), 'dd/mm/yyyy hh24:mi:ss'), clock_timestamp());
    FOR parto IN partos LOOP BEGIN
      update_int_pac_evento(parto.nr_sequencia, dt_inicio_parto_w);
    end; end loop;

  elsif (IE_TIPO_P = 'EN') then--Exames nao laboratoriais
    nr_seq_grupo_exame_nao_lab_w := coalesce(get_info('nr_seq_grupo_exame_nao_lab_w'), 0);
    nr_seq_classif_w := coalesce(get_info('nr_seq_classif_w'), 0);
    FOR exame IN exNaoLaboratoriais LOOP BEGIN
      update_int_pac_evento(exame.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'EX') then--Exames laboratoriais
    nr_seq_grupo_exame_lab_w := coalesce(DS_INFO_ADICIONAL_P, 0);
    FOR exame IN exLaboratoriais LOOP BEGIN
      update_int_pac_evento(exame.nr_sequencia);
    end; end loop;

  elsif (IE_TIPO_P = 'RX') then--Radioterapia
    nr_seq_tipo_w := coalesce(DS_INFO_ADICIONAL_P, 0);
    select coalesce(max(IE_TIPO), 0)
    into STRICT ie_tipo_radio_w
    from RXT_TIPO
    where NR_SEQUENCIA = nr_seq_tipo_w;
    FOR radio IN radioterapias LOOP BEGIN
      update_int_pac_evento(radio.nr_sequencia);
    end; end loop;

  end if;
exception
when others then
cd_medico_w := null;
ie_tipo_agendamento_w := null;
ie_tipo_atendimento_w := null;
ie_clinica_w := null;
ie_origem_proced_w := null;
cd_procedimento_w := null;
nr_seq_tipo_consulta_w := null;
cd_protocolo_w := null;
nr_seq_protocolo_w := null;
nr_seq_escala_w := null;
nr_seq_score_flex_w := null;
nr_seq_score_flex_ii_w := null;
dt_avaliacao_w := null;
cd_classif_setor_w := null;
cd_especialidade_medico_w := null;
ie_evolucao_clinica_w := null;
nr_seq_programa_saude_w := null;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_ev_linha_cuidado ( IE_TIPO_P text, NM_TABELA_P text, NR_SEQUENCIA_P bigint, DS_INFO_ADICIONAL_P text, CD_PESSOA_FISICA_P text, NM_USUARIO_P text, IE_COMMIT_P text DEFAULT 'S') FROM PUBLIC;

