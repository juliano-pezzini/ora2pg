-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_movto_estoque_nf ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_movimento_estoque_w		bigint;
cd_estabelecimento_w		nota_fiscal.cd_estabelecimento%type;
cd_local_estoque_w		nota_fiscal_item.cd_local_estoque%type;
dt_movimento_estoque_w		nota_fiscal.dt_entrada_saida%type;
cd_operacao_estoque_w		operacao_nota.cd_operacao_estoque%type;
cd_acao_w			varchar(1);
cd_material_estoque_w		nota_fiscal_item.cd_material_estoque%type;
cd_material_w			nota_fiscal_item.cd_material%type;
dt_mesano_referencia_w		timestamp;
qt_movimento_w			nota_fiscal_item.qt_item_nf%type;
dt_atualizacao_w		timestamp		:= clock_timestamp();
nm_usuario_w			varchar(15);
ie_origem_documento_w		varchar(3);
nr_documento_w			varchar(20);
nr_sequencia_item_docto_w	nota_fiscal_item.nr_item_nf%type;

nr_item_nf_ww			integer	:=	0;
vl_total_item_nf_ww		double precision;
vl_total_item_nf_soma_w		double precision;
nr_movimento_estoque_ww		bigint;

cd_cgc_emitente_w		varchar(14);
cd_serie_nf_w			nota_fiscal.cd_serie_nf%type;
nr_sequencia_documento_w	nota_fiscal.nr_sequencia_nf%type;
vl_movimento_w			double precision;
cd_unidade_medida_estoque_w	varchar(30);
cd_procedimento_w		bigint;
cd_setor_atendimento_w		nota_fiscal_item.cd_setor_atendimento%type;
cd_conta_w			nota_fiscal_item.cd_conta%type;
dt_contabil_w			timestamp;
cd_lote_fabricacao_w		varchar(20);
dt_validade_w			timestamp;
qt_estoque_w			nota_fiscal_item.qt_item_estoque%type;
dt_processo_w			timestamp;
cd_local_estoque_destino_w	smallint;
cd_centro_custo_w		nota_fiscal_item.cd_centro_custo%type;
vl_despesa_acessoria_w		nota_fiscal_item.vl_despesa_acessoria%type;
vl_seguro_w			nota_fiscal_item.vl_seguro%type;
vl_total_item_nf_w		nota_fiscal_item.vl_total_item_nf%type;
vl_frete_w			nota_fiscal_item.vl_frete%type;
vl_desconto_w			nota_fiscal_item.vl_desconto%type;
vl_desconto_rateio_w		nota_fiscal_item.vl_desconto_rateio%type;
cd_unidade_medida_compra_w	varchar(30);
nr_movimento_estoque_corresp	bigint;
cd_conta_contabil_w		varchar(20);
ie_origem_proced_w		nota_fiscal_item.ie_origem_proced%type;
cd_fornecedor_w			varchar(14);
nr_lote_contabil_w		nota_fiscal.nr_lote_contabil%type;
dt_mesano_vigente_w		timestamp;
cd_tributo_w			smallint;
cd_tipo_valor_w			smallint;
vl_tributo_w			double precision;
vl_custo_medio_w		double precision;
qt_movto_valor_w		integer;
nr_seq_lote_fornec_w		nota_fiscal_item.nr_seq_lote_fornec%type;
nr_seq_lote_item_w		bigint;
ie_tipo_nota_w			varchar(2);
qt_existe_w			integer;
ie_valorizar_material_w		varchar(1) := 'N';
ie_valorizar_cm_movimento_w	varchar(1);
ie_gera_lote_desdobrado_w	varchar(1);
ie_acao_nf_w			varchar(1);
nr_sequencia_ref_w		nota_fiscal.nr_sequencia_ref%type;
ie_devolucao_w			varchar(1);
nr_sequencia_nf_w		bigint;
ie_preco_saldo_estab_w		parametro_compras.ie_preco_saldo_estab%type;

vl_despesa_acessoria_dif_w	double precision;
vl_seguro_dif_w			double precision;
vl_total_item_nf_dif_w		double precision;
vl_frete_dif_w			double precision;
vl_desconto_dif_w		double precision;
vl_desconto_rateio_dif_w	double precision;
nr_item_nf_w			integer;

dt_ult_compra_w			saldo_estoque.dt_ult_compra%type;
ie_situacao_w			nota_fiscal.ie_situacao%type;

c01 CURSOR FOR
SELECT	0,
	b.cd_estabelecimento,
	c.cd_local_estoque,
	b.dt_entrada_saida,
	a.cd_operacao_estoque,
	b.ie_acao_nf,
	c.cd_material,
	c.cd_material_estoque,
	b.dt_entrada_saida,
	c.qt_item_nf,
	clock_timestamp(),
	nm_usuario_p,
	'1',
	substr(b.nr_nota_fiscal,1,20),
	c.nr_item_nf,
	b.cd_cgc_emitente,
	b.cd_serie_nf,
	b.nr_sequencia_nf,
	0,
	c.cd_unidade_medida_estoque,
	0,
	c.cd_setor_atendimento,
	c.cd_conta,
	b.dt_entrada_saida,
	c.cd_lote_fabricacao,
	c.dt_validade,
	c.qt_item_estoque qt_item_estoque,
	null,
	null,
	c.cd_centro_custo,
	c.vl_despesa_acessoria,
	c.vl_seguro,
	c.vl_total_item_nf,
	c.vl_frete,
	c.vl_desconto,
	c.vl_desconto_rateio,
	c.cd_unidade_medida_compra,
	null,
	c.cd_conta_contabil,
	c.ie_origem_proced,
	coalesce(c.cd_fornecedor_consig,b.cd_cgc),
	b.nr_lote_contabil,
	CASE WHEN c.qt_item_estoque=0 THEN 0  ELSE coalesce(c.vl_liquido,0) / c.qt_item_estoque END ,
	c.nr_seq_lote_fornec,
	0,
	'N'
from	operacao_nota a,
	nota_fiscal b ,
	nota_fiscal_item c,
	operacao_estoque d
where	b.nr_sequencia         = c.nr_sequencia
and	b.cd_operacao_nf     	= a.cd_operacao_nf
and	coalesce(b.dt_atualizacao_estoque::text, '') = ''
and	b.nr_sequencia    	= nr_sequencia_p
and	(c.cd_material IS NOT NULL AND c.cd_material::text <> '')
and	obter_se_local_direto(c.cd_local_estoque) = 'N'
and	(c.cd_local_estoque IS NOT NULL AND c.cd_local_estoque::text <> '')
and	obter_se_gerou_lote_desdobrado(b.nr_sequencia,c.nr_item_nf,c.cd_material,d.ie_tipo_requisicao,b.cd_estabelecimento) <> 'S'
and	a.cd_operacao_estoque = d.cd_operacao_estoque
and not exists (	SELECT	1
		from	nota_fiscal_item_lote x
		where	x.nr_seq_nota	= c.nr_sequencia
		and	x.nr_item_nf	= c.nr_item_nf)

union all

select	0,
	b.cd_estabelecimento,
	c.cd_local_estoque,
	b.dt_entrada_saida,
	a.cd_operacao_estoque,
	b.ie_acao_nf,
	c.cd_material,
	c.cd_material_estoque,
	b.dt_entrada_saida,
	dividir(c.qt_item_nf * x.qt_material, c.qt_item_estoque),
	clock_timestamp(),
	nm_usuario_p,
	'1',
	substr(b.nr_nota_fiscal,1,20),
	c.nr_item_nf,
	b.cd_cgc_emitente,
	b.cd_serie_nf,
	b.nr_sequencia_nf,
	0,
	c.cd_unidade_medida_estoque,
	0,
	c.cd_setor_atendimento,
	c.cd_conta,
	b.dt_entrada_saida,
	x.cd_lote_fabricacao,
	x.dt_validade,
	x.qt_material qt_item_estoque,
	null,
	null,
	c.cd_centro_custo,
	dividir(x.qt_material * c.vl_despesa_acessoria, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_seguro, c.qt_item_estoque),
	round((dividir(x.qt_material * c.vl_total_item_nf, c.qt_item_estoque))::numeric,2),
	dividir(x.qt_material * c.vl_frete, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_desconto, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_desconto_rateio, c.qt_item_estoque),
	c.cd_unidade_medida_compra,
	null,
	c.cd_conta_contabil,
	c.ie_origem_proced,
	coalesce(c.cd_fornecedor_consig,b.cd_cgc),
	b.nr_lote_contabil,
	CASE WHEN c.qt_item_estoque=0 THEN  0  ELSE coalesce(c.vl_liquido,0) / c.qt_item_estoque END ,
	x.nr_seq_lote_fornec,
	x.nr_sequencia,
	'N'
from	operacao_nota a,
	nota_fiscal b ,
	nota_fiscal_item c,
	nota_fiscal_item_lote x,
	operacao_estoque d
where	b.nr_sequencia		= c.nr_sequencia
and	b.cd_operacao_nf	= a.cd_operacao_nf
and	coalesce(b.dt_atualizacao_estoque::text, '') = ''
and	b.nr_sequencia    	= nr_sequencia_p
and	(c.cd_material IS NOT NULL AND c.cd_material::text <> '')
and	obter_se_local_direto(c.cd_local_estoque) = 'N'
and	(c.cd_local_estoque IS NOT NULL AND c.cd_local_estoque::text <> '')
and	x.nr_seq_nota		= c.nr_sequencia
and	x.nr_item_nf		= c.nr_item_nf
and	obter_se_gerou_lote_desdobrado(b.nr_sequencia,c.nr_item_nf,c.cd_material,d.ie_tipo_requisicao,b.cd_estabelecimento) <> 'S'
and	a.cd_operacao_estoque = d.cd_operacao_estoque

union all

select	0,
	b.cd_estabelecimento,
	c.cd_local_estoque,
	b.dt_entrada_saida,
	a.cd_operacao_estoque,
	b.ie_acao_nf,
	c.cd_material,
	c.cd_material_estoque,
	b.dt_entrada_saida,
	dividir(c.qt_item_nf * x.qt_material, c.qt_item_estoque),
	clock_timestamp(),
	nm_usuario_p,
	'1',
	substr(b.nr_nota_fiscal,1,20),
	c.nr_item_nf,
	b.cd_cgc_emitente,
	b.cd_serie_nf,
	b.nr_sequencia_nf,
	0,
	c.cd_unidade_medida_estoque,
	0,
	c.cd_setor_atendimento,
	c.cd_conta,
	b.dt_entrada_saida,
	x.ds_lote_fornec,
	x.dt_validade,
	x.qt_material qt_item_estoque,
	null,
	null,
	c.cd_centro_custo,
	dividir(x.qt_material * c.vl_despesa_acessoria, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_seguro, c.qt_item_estoque),
	round((dividir(x.qt_material * c.vl_total_item_nf, c.qt_item_estoque))::numeric,2),
	dividir(x.qt_material * c.vl_frete, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_desconto, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_desconto_rateio, c.qt_item_estoque),
	c.cd_unidade_medida_compra,
	null,
	c.cd_conta_contabil,
	c.ie_origem_proced,
	coalesce(c.cd_fornecedor_consig,b.cd_cgc),
	b.nr_lote_contabil,
	CASE WHEN c.qt_item_estoque=0 THEN  0  ELSE coalesce(c.vl_liquido,0) / c.qt_item_estoque END ,
	x.nr_sequencia,
	0,
	'S'
from	operacao_nota a,
	operacao_estoque d,
	nota_fiscal b ,
	nota_fiscal_item c,
	material_lote_fornec x
where	b.nr_sequencia		= c.nr_sequencia
and	b.cd_operacao_nf	= a.cd_operacao_nf
and	coalesce(b.dt_atualizacao_estoque::text, '') = ''
and	b.nr_sequencia    	= nr_sequencia_p
and	(c.cd_material IS NOT NULL AND c.cd_material::text <> '')
and	obter_se_local_direto(c.cd_local_estoque) = 'N'
and	(c.cd_local_estoque IS NOT NULL AND c.cd_local_estoque::text <> '')
and	x.nr_sequencia_nf	= nr_sequencia_nf_w
and	x.nr_item_nf		= c.nr_item_nf
and	a.cd_operacao_estoque = d.cd_operacao_estoque
and	obter_se_gerou_lote_desdobrado(b.nr_sequencia,c.nr_item_nf,c.cd_material,d.ie_tipo_requisicao,b.cd_estabelecimento) = 'S'

union all

select	0,
	b.cd_estabelecimento,
	c.cd_local_estoque,
	b.dt_entrada_saida,
	a.cd_operacao_estoque,
	b.ie_acao_nf,
	c.cd_material,
	c.cd_material_estoque,
	b.dt_entrada_saida,
	dividir(c.qt_item_nf * x.qt_material, c.qt_item_estoque),
	clock_timestamp(),
	nm_usuario_p,
	'1',
	substr(b.nr_nota_fiscal,1,20),
	c.nr_item_nf,
	b.cd_cgc_emitente,
	b.cd_serie_nf,
	b.nr_sequencia_nf,
	0,
	c.cd_unidade_medida_estoque,
	0,
	c.cd_setor_atendimento,
	c.cd_conta,
	b.dt_entrada_saida,
	x.ds_lote_fornec,
	x.dt_validade,
	x.qt_material qt_item_estoque,
	null,
	null,
	c.cd_centro_custo,
	dividir(x.qt_material * c.vl_despesa_acessoria, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_seguro, c.qt_item_estoque),
	round((dividir(x.qt_material * c.vl_total_item_nf, c.qt_item_estoque))::numeric,2),
	dividir(x.qt_material * c.vl_frete, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_desconto, c.qt_item_estoque),
	dividir(x.qt_material * c.vl_desconto_rateio, c.qt_item_estoque),
	c.cd_unidade_medida_compra,
	null,
	c.cd_conta_contabil,
	c.ie_origem_proced,
	coalesce(c.cd_fornecedor_consig,b.cd_cgc),
	b.nr_lote_contabil,
	CASE WHEN c.qt_item_estoque=0 THEN  0  ELSE coalesce(c.vl_liquido,0) / c.qt_item_estoque END ,
	x.nr_sequencia,
	0,
	'S'
from	operacao_nota a,
	operacao_estoque d,
	nota_fiscal b ,
	nota_fiscal_item c,
	material_lote_fornec x,
	material_lote_fornec_nf z
where	b.nr_sequencia		= c.nr_sequencia
and	b.cd_operacao_nf	= a.cd_operacao_nf
and	coalesce(b.dt_atualizacao_estoque::text, '') = ''
and	b.nr_sequencia    	= nr_sequencia_p
and	(c.cd_material IS NOT NULL AND c.cd_material::text <> '')
and	obter_se_local_direto(c.cd_local_estoque) = 'N'
and	(c.cd_local_estoque IS NOT NULL AND c.cd_local_estoque::text <> '')
and	z.nr_sequencia_nf	= nr_sequencia_nf_w
and	z.nr_item_nf		= c.nr_item_nf
and	x.nr_sequencia		= z.nr_seq_lote_fornec
and	a.cd_operacao_estoque = d.cd_operacao_estoque
and	obter_se_gerou_lote_desdobrado(b.nr_sequencia,c.nr_item_nf,c.cd_material,d.ie_tipo_requisicao,b.cd_estabelecimento) = 'S'
order by nr_item_nf, qt_item_estoque;

c02 CURSOR FOR
SELECT	a.cd_tributo,
		a.vl_tributo
from	tributo b,
		nota_fiscal_item_trib a
where	a.cd_tributo	= b.cd_tributo
and		a.nr_sequencia	= nr_sequencia_p
and		a.nr_item_nf	= nr_sequencia_item_docto_w
and		not exists (	
		SELECT	1
		from	nota_fiscal_item_lote x
		where	x.nr_seq_nota	= a.nr_sequencia
		and	x.nr_item_nf	= a.nr_item_nf)
and		ie_gera_lote_desdobrado_w = 'N'

union

select	a.cd_tributo,
		CASE WHEN c.qt_item_estoque=0 THEN  0  ELSE (a.vl_tributo / c.qt_item_estoque) * y.qt_material END
from	tributo b,
		nota_fiscal_item c,
		nota_fiscal_item_lote y,
		nota_fiscal_item_trib a
where	a.cd_tributo	= b.cd_tributo
and		a.nr_sequencia	= nr_sequencia_p
and		a.nr_item_nf	= nr_sequencia_item_docto_w
and		a.nr_sequencia	= c.nr_sequencia
and		a.nr_item_nf	= c.nr_item_nf
and		y.nr_sequencia	= nr_seq_lote_item_w
and		exists (
		select	1
		from	nota_fiscal_item_lote x
		where	x.nr_seq_nota	= a.nr_sequencia
		and	x.nr_item_nf	= a.nr_item_nf)
and		ie_gera_lote_desdobrado_w = 'N'

union

select	a.cd_tributo,
		(a.vl_tributo/qt_item_nf)
from	tributo b,
		nota_fiscal_item_trib a,
		nota_fiscal_item c
where	c.nr_sequencia	= nr_sequencia_p
and		c.nr_item_nf	= nr_sequencia_item_docto_w
and		c.nr_sequencia = a.nr_sequencia
and		c.nr_item_nf = a.nr_item_nf
and		a.cd_tributo	= b.cd_tributo
and		ie_gera_lote_desdobrado_w = 'S';



BEGIN

select	cd_estabelecimento,
		ie_acao_nf,
		nr_sequencia_ref
into STRICT	cd_estabelecimento_w,
		ie_acao_nf_w,
		nr_sequencia_ref_w
from	nota_fiscal
where	nr_sequencia = nr_sequencia_p;

select	obter_se_nota_entrada_saida(nr_sequencia_p)
into STRICT	ie_tipo_nota_w
;

select	count(*)
into STRICT	qt_existe_w
from	operacao_nota a,
	nota_fiscal b
where	b.nr_sequencia    	= nr_sequencia_p
and	b.cd_operacao_nf     	= a.cd_operacao_nf
and	coalesce(a.cd_operacao_estoque::text, '') = '';
if (qt_existe_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(242864);
end if;

select	a.ie_devolucao
into STRICT	ie_devolucao_w
from	operacao_nota a,
	nota_fiscal b
where	b.nr_sequencia    	= nr_sequencia_p
and	b.cd_operacao_nf     	= a.cd_operacao_nf;

if (ie_acao_nf_w = '2') then
	nr_sequencia_nf_w := nr_sequencia_ref_w;
else	
	if (ie_devolucao_w = 'S') and (nr_sequencia_ref_w IS NOT NULL AND nr_sequencia_ref_w::text <> '') then
		nr_sequencia_nf_w := nr_sequencia_ref_w;
	else
		nr_sequencia_nf_w := nr_sequencia_p;
	end if;
end if;

select	coalesce(max(ie_atualiza_cm_calc_nf),'N')
into STRICT	ie_valorizar_cm_movimento_w
from	parametro_estoque
where	cd_estabelecimento = cd_estabelecimento_w;

if (ie_valorizar_cm_movimento_w = 'S') then
	begin
	select	cd_operacao_estoque
	into STRICT	cd_operacao_estoque_w
	from	operacao_nota a,
		nota_fiscal b
	where	b.nr_sequencia    	= nr_sequencia_p
	and	b.cd_operacao_nf     	= a.cd_operacao_nf;
	
	begin
	select	coalesce(CASE WHEN ie_altera_custo='S' THEN 'S'  ELSE 'N' END ,'N')
	into STRICT	ie_valorizar_material_w
	from	operacao_estoque
	where	cd_operacao_estoque = cd_operacao_estoque_w;
	exception
	when others then
		ie_valorizar_material_w := 'N';	
	end;
	end;
end if;

nr_item_nf_w	:=	0;

open c01;
loop
fetch c01 into
	nr_movimento_estoque_w,
	cd_estabelecimento_w,
	cd_local_estoque_w,
	dt_movimento_estoque_w,
	cd_operacao_estoque_w,
	cd_acao_w,
	cd_material_w,
	cd_material_estoque_w,
	dt_mesano_referencia_w,
	qt_movimento_w,
	dt_atualizacao_w,
	nm_usuario_w,
	ie_origem_documento_w,
	nr_documento_w,
	nr_sequencia_item_docto_w,
	cd_cgc_emitente_w,
	cd_serie_nf_w,
	nr_sequencia_documento_w,
	vl_movimento_w,
	cd_unidade_medida_estoque_w,
	cd_procedimento_w,
	cd_setor_atendimento_w,
	cd_conta_w,
	dt_contabil_w,
	cd_lote_fabricacao_w,
	dt_validade_w,
	qt_estoque_w,
	dt_processo_w,
	cd_local_estoque_destino_w,
	cd_centro_custo_w,
	vl_despesa_acessoria_w,
	vl_seguro_w,
	vl_total_item_nf_w,
	vl_frete_w,
	vl_desconto_w,
	vl_desconto_rateio_w,
	cd_unidade_medida_compra_w,
	nr_movimento_estoque_corresp,
	cd_conta_contabil_w,
	ie_origem_proced_w,
	cd_fornecedor_w,
	nr_lote_contabil_w,
	vl_custo_medio_w,
	nr_seq_lote_fornec_w,
	nr_seq_lote_item_w,
	ie_gera_lote_desdobrado_w;
if C01%FOUND then
	begin
	if (nr_item_nf_w <> nr_sequencia_item_docto_w) then
		begin
		vl_despesa_acessoria_dif_w           := 0;
		vl_seguro_dif_w                      := 0;
		vl_total_item_nf_dif_w               := 0;
		vl_frete_dif_w                       := 0;
		vl_desconto_dif_w                    := 0;
		vl_desconto_rateio_dif_w             := 0;
		end;
	end if;
	
	nr_item_nf_w	:=	nr_sequencia_item_docto_w;
	nr_documento_w  := regexp_replace(nr_documento_w, '[^0-9]', null);
	
	/*Atribui a diferen?a do item da linha anterior ao registro da linha atual (do mesmo item)*/

	vl_despesa_acessoria_w           := vl_despesa_acessoria_dif_w + vl_despesa_acessoria_w;
	vl_seguro_w                      := vl_seguro_dif_w + vl_seguro_w;
	vl_total_item_nf_w               := vl_total_item_nf_dif_w + vl_total_item_nf_w;
	vl_frete_w                       := vl_frete_dif_w + vl_frete_w;
	vl_desconto_w                    := vl_desconto_dif_w + vl_desconto_w;
	vl_desconto_rateio_w             := vl_desconto_rateio_dif_w + vl_desconto_rateio_w;
	
	/*Calcula a diferen?a do arredondamento*/

	vl_despesa_acessoria_dif_w           :=  vl_despesa_acessoria_w - round((vl_despesa_acessoria_w)::numeric, 2);
	vl_seguro_dif_w                      :=  vl_seguro_w - round((vl_seguro_w)::numeric, 2);
	vl_total_item_nf_dif_w               :=  vl_total_item_nf_w - round((vl_total_item_nf_w)::numeric, 2);
	vl_frete_dif_w                       :=  vl_frete_w - round((vl_frete_w)::numeric, 2);
	vl_desconto_dif_w                    :=  vl_desconto_w - round((vl_desconto_w)::numeric, 2);
	vl_desconto_rateio_dif_w             :=  vl_desconto_rateio_w - round((vl_desconto_rateio_w)::numeric, 2);
	
	/*Arredonda os valores para a movimenta??o*/

	vl_despesa_acessoria_w	:=	round((vl_despesa_acessoria_w)::numeric, 2);
	vl_seguro_w 		:=	round((vl_seguro_w)::numeric, 2);
	vl_total_item_nf_w 	:=	round((vl_total_item_nf_w)::numeric, 2);
	vl_frete_w 		:=	round((vl_frete_w)::numeric, 2);
	vl_desconto_w 		:=	round((vl_desconto_w)::numeric, 2);
	vl_desconto_rateio_w 	:=	round((vl_desconto_rateio_w)::numeric, 2);	
	
	/*
	Sidnei - 14/07/2014 - OS 759012
	Controle para rateio do valor para lote fornecedor.
	N?o deve ser gerado valor de movimento com mais de dois decimais, pois gera diverg?ncia no fechamento mensal.
	*/
	
	if (nr_item_nf_ww = 0) then
		nr_item_nf_ww		:=	nr_sequencia_item_docto_w;
		vl_total_item_nf_soma_w	:=	0;
	elsif (nr_item_nf_ww <> nr_sequencia_item_docto_w) then
		begin
		select	coalesce(max(vl_total_item_nf),0)
		into STRICT	vl_total_item_nf_ww
		from	nota_fiscal_item
		where	nr_sequencia	= nr_sequencia_p
		and	nr_item_nf	= nr_item_nf_ww;
		
		if (vl_total_item_nf_soma_w <> vl_total_item_nf_ww) then
			update	movimento_estoque_valor
			set	vl_movimento = vl_movimento + (vl_total_item_nf_ww - vl_total_item_nf_soma_w)
			where	nr_movimento_estoque = nr_movimento_estoque_ww
			and	cd_tipo_valor = 1  LIMIT 1;
		end if;
		
		nr_item_nf_ww		:=	nr_sequencia_item_docto_w;
		vl_total_item_nf_soma_w	:=	0;
		end;
	end if;	
	vl_total_item_nf_soma_w	:=	vl_total_item_nf_soma_w + vl_total_item_nf_w;
	
	select	nextval('movimento_estoque_seq')
	into STRICT	nr_movimento_estoque_w
	;
	
	nr_movimento_estoque_ww	:=	nr_movimento_estoque_w;

       	insert into movimento_estoque(
 		nr_movimento_estoque,
 		cd_estabelecimento,
 		cd_local_estoque,
 		dt_movimento_estoque,
 		cd_operacao_estoque,
 		cd_acao,
 		cd_material,
 		dt_mesano_referencia,
 		qt_movimento,
 		dt_atualizacao,
 		nm_usuario,
 		ie_origem_documento,
 		nr_documento,
 		nr_sequencia_item_docto,
 		cd_cgc_emitente,
 		cd_serie_nf,
 		nr_sequencia_documento,
 		vl_movimento,
 		cd_unidade_medida_estoque,
 		cd_procedimento,
 		cd_setor_atendimento,
 		cd_conta,
 		dt_contabil,
 		cd_lote_fabricacao,
 		dt_validade,
 		qt_estoque,
 		dt_processo,
 		cd_local_estoque_destino,
 		cd_centro_custo,
 		cd_unidade_med_mov,
 		nr_movimento_estoque_corresp,
 		cd_conta_contabil,
 		cd_material_estoque,
 		ie_origem_proced,
 		cd_fornecedor,
 		nr_lote_contabil,
		nr_seq_tab_orig,
		nr_seq_lote_fornec)
	values (	nr_movimento_estoque_w,
		cd_estabelecimento_w,
		cd_local_estoque_w,
		dt_movimento_estoque_w,
		cd_operacao_estoque_w,
		cd_acao_w,
		cd_material_w,
		dt_mesano_referencia_w,
		qt_movimento_w,
		dt_atualizacao_w,
		nm_usuario_w,
		'1',
		substr(nr_documento_w,1,15),
		nr_sequencia_item_docto_w,
		cd_cgc_emitente_w,
		cd_serie_nf_w,
		nr_sequencia_documento_w,
		vl_movimento_w,
		cd_unidade_medida_estoque_w,
		cd_procedimento_w,
		cd_setor_atendimento_w,
		cd_conta_w,
		dt_contabil_w,
		cd_lote_fabricacao_w,
		dt_validade_w,
		qt_estoque_w,
		dt_processo_w,
		cd_local_estoque_destino_w,
		cd_centro_custo_w,
		cd_unidade_medida_compra_w,
		nr_movimento_estoque_corresp,
		cd_conta_contabil_w,
		cd_material_estoque_w,
		ie_origem_proced_w,
		cd_fornecedor_w,
		nr_lote_contabil_w,
		nr_sequencia_p,
		nr_seq_lote_fornec_w);

	IF  VL_TOTAL_ITEM_NF_W <> 0 THEN
		insert into movimento_estoque_valor(
			NR_MOVIMENTO_ESTOQUE	,
			CD_TIPO_VALOR           ,        
			VL_MOVIMENTO            ,        
			DT_ATUALIZACAO          ,        
			NM_USUARIO)	
		values (NR_MOVIMENTO_ESTOQUE_w ,
            	1			      ,         
 			VL_TOTAL_ITEM_NF_w	,	           
 			DT_ATUALIZACAO_w        ,         
 			NM_USUARIO_p);
	end if;
	IF  VL_FRETE_W <> 0 THEN
		insert into movimento_estoque_valor(
			NR_MOVIMENTO_ESTOQUE		,
 			CD_TIPO_VALOR           	,        
 			VL_MOVIMENTO            	,        
 			DT_ATUALIZACAO          	,        
 			NM_USUARIO)	
		values (NR_MOVIMENTO_ESTOQUE_w       ,
            	2			     	,          
 			VL_FRETE_W	             	,	           
 			DT_ATUALIZACAO_w             ,         
 			NM_USUARIO_p);
	end if;
	IF  VL_SEGURO_W <> 0 THEN
		insert into movimento_estoque_valor(
			NR_MOVIMENTO_ESTOQUE		,
 			CD_TIPO_VALOR           	,        
 			VL_MOVIMENTO            	,        
 			DT_ATUALIZACAO          	,        
 			NM_USUARIO)	
		values (NR_MOVIMENTO_ESTOQUE_w       ,
              	3			     	,          
 			VL_SEGURO_w	            	,	           
 			DT_ATUALIZACAO_w         	,         
 			NM_USUARIO_p);
	end if;
	IF  VL_DESPESA_ACESSORIA_W <> 0 THEN
		insert into movimento_estoque_valor(
			NR_MOVIMENTO_ESTOQUE		,            
 			CD_TIPO_VALOR           	,        
 			VL_MOVIMENTO            	,        
 			DT_ATUALIZACAO          	,        
 			NM_USUARIO)	
		values (NR_MOVIMENTO_ESTOQUE_w       ,
            	4				, 		             
			VL_DESPESA_ACESSORIA_w	      ,	           
			DT_ATUALIZACAO_w        	,         
			NM_USUARIO_p);
	end if;
	IF (VL_desconto_w + VL_DESCONTO_RATEIO_w <> 0) THEN
		insert into movimento_estoque_valor(
			NR_MOVIMENTO_ESTOQUE		,
			CD_TIPO_VALOR           	,        
			VL_MOVIMENTO            	,        
			DT_ATUALIZACAO          	,        
			NM_USUARIO)	
		values (NR_MOVIMENTO_ESTOQUE_w 	,
			5 		            	,          
			VL_desconto_w + VL_DESCONTO_RATEIO_w,	           
			DT_ATUALIZACAO_w       	,         
			NM_USUARIO_p);
	end if;
	
	begin
	OPEN C02;
	LOOP
	FETCH C02
	into	cd_tributo_w,
			vl_tributo_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
		begin
		select	cd_tipo_valor
		into STRICT	cd_tipo_valor_w
		from	tipo_valor
		where	cd_tributo = cd_tributo_w;
		exception
			when others then
				cd_tipo_valor_w := 0;
		end;
		select	count(*)
		into STRICT	qt_movto_valor_w
		from	movimento_estoque_valor
		where	NR_MOVIMENTO_ESTOQUE = NR_MOVIMENTO_ESTOQUE_w
		and	CD_TIPO_VALOR = CASE WHEN cd_tipo_valor_w=0 THEN 6  ELSE cd_tipo_valor_w END;

		if (vl_tributo_w <> 0) and (qt_movto_valor_w = 0) then
			insert into movimento_estoque_valor(
				NR_MOVIMENTO_ESTOQUE,
				CD_TIPO_VALOR,
				VL_MOVIMENTO,
				DT_ATUALIZACAO,
				NM_USUARIO)
			values (	NR_MOVIMENTO_ESTOQUE_w,
				CASE WHEN cd_tipo_valor_w=0 THEN 6  ELSE cd_tipo_valor_w END ,
				vl_tributo_w,
				DT_ATUALIZACAO_w,
				NM_USUARIO_p);
		end if;
	end loop;
	close c02;
	end;
	
	begin
	select	dt_mesano_vigente
	into STRICT	dt_mesano_vigente_w
	from   	parametro_estoque
	where  	cd_estabelecimento = cd_estabelecimento_w;
	exception
		when others then
			dt_mesano_vigente_w := dt_mesano_referencia_w;
	end;
	
	if	DT_MESANO_REFERENCIA_W	<= PKG_DATE_UTILS.start_of(PKG_DATE_UTILS.END_OF(dt_mesano_vigente_w, 'MONTH', 0), 'dd', 0) then
		DT_MESANO_REFERENCIA_W := dt_mesano_vigente_w;
   	else
		DT_MESANO_REFERENCIA_W := PKG_DATE_UTILS.start_of(DT_MESANO_REFERENCIA_W,'month',0);
	end if;
	
	select	ie_preco_saldo_estab
	into STRICT	ie_preco_saldo_estab_w
	from	parametro_compras
	where	cd_estabelecimento = cd_estabelecimento_w;
	
	select 	ie_situacao
	into STRICT	ie_situacao_w
	from 	nota_fiscal
	where 	nr_sequencia = nr_sequencia_p;
	
	if (ie_tipo_nota_w = 'E') then
		
		begin
		select	dt_ult_compra
		into STRICT 	dt_ult_compra_w
		from 	saldo_estoque
		where	cd_material = cd_material_estoque_w
		and	cd_estabelecimento = cd_estabelecimento_w
		and ('S' = ie_preco_saldo_estab_w or cd_local_estoque = cd_local_estoque_w)
		and	dt_mesano_referencia = dt_mesano_referencia_w;
		exception
			when others then
				dt_ult_compra_w := null;
		end;
		
		if (ie_situacao_w <> 2) then
			
			begin
			update	saldo_estoque
			set	vl_preco_ult_compra = (dividir((vl_total_item_nf_w - vl_desconto_w) , qt_estoque_w)),
				dt_ult_compra	= dt_movimento_estoque_w
			where	cd_material = cd_material_estoque_w
			and	cd_estabelecimento = cd_estabelecimento_w
			and ('S' = ie_preco_saldo_estab_w or cd_local_estoque = cd_local_estoque_w)
			and	dt_mesano_referencia = dt_mesano_referencia_w;
			exception
			when others then
				cd_material_estoque_w := 0;
			end;
		elsif(ie_situacao_w = 2 AND dt_movimento_estoque_w >= dt_ult_compra_w) then
			
			begin
				select 	coalesce(vl_total_item_nf, 0),
					coalesce(vl_desconto, 0),
					coalesce(qt_item_estoque, 0),
					dt_entrada_saida
				into STRICT	vl_total_item_nf_w,
					vl_desconto_w,
					qt_estoque_w,
					dt_movimento_estoque_w
				from (	SELECT	a.vl_total_item_nf,
							a.vl_desconto,
							a.qt_item_estoque,
							b.dt_entrada_saida
						from 	nota_fiscal_item a,
							nota_fiscal b
						where	a.nr_sequencia = b.nr_sequencia
						and	b.ie_situacao = '1'
						and 	(b.dt_atualizacao_estoque IS NOT NULL AND b.dt_atualizacao_estoque::text <> '')
						and	a.cd_material = cd_material_w
						and 	a.cd_material_estoque = cd_material_estoque_w
						and ('S' = ie_preco_saldo_estab_w or a.cd_local_estoque = cd_local_estoque_w)
						order by b.dt_atualizacao_estoque desc) alias6 LIMIT 1;
			exception
			when others then
				vl_total_item_nf_w := 0;
				vl_desconto_w := 0;
				qt_estoque_w := 0;
			end;
			
			if (vl_total_item_nf_w <> 0) then
				begin
				update	saldo_estoque
				set	vl_preco_ult_compra = (dividir((vl_total_item_nf_w - vl_desconto_w) , qt_estoque_w)),
					dt_ult_compra	= dt_movimento_estoque_w
				where	cd_material = cd_material_estoque_w
				and	cd_estabelecimento = cd_estabelecimento_w
				and ('S' = ie_preco_saldo_estab_w or cd_local_estoque = cd_local_estoque_w)
				and	dt_mesano_referencia = dt_mesano_referencia_w;
				exception
				when others then
					cd_material_estoque_w := 0;
				end;
			end if;
		end if;
		
	end if;
	
	begin
	delete from custo_mensal_material
	where	cd_estabelecimento	= cd_estabelecimento_w
	and	dt_referencia		= dt_mesano_referencia_w
	and	cd_material		= cd_material_estoque_w
	and	ie_tipo_custo		= 'R';
	
	insert into custo_mensal_material(cd_estabelecimento,
		dt_referencia, 
		cd_material, 
		ie_tipo_custo, 
		dt_atualizacao, 
		nm_usuario, 
		vl_custo)
	values (cd_estabelecimento_w, 
		dt_mesano_referencia_w, 
		cd_material_estoque_w, 
		'R', 
		clock_timestamp(), 
		nm_usuario_w, 
		vl_custo_medio_w);
	exception
		when others then
			cd_material_estoque_w := 0;			
	end;
	
	if (ie_valorizar_material_w = 'S') and (cd_material_estoque_w > 0) then
		begin
		if (substr(sup_obter_metodo_valorizacao(dt_mesano_referencia_w, cd_estabelecimento_w),1,15) = 'MPM') then
			CALL val_estoque_media_ponderada.val_prod_mat(dt_mesano_referencia_w, cd_estabelecimento_w, cd_material_estoque_w, nm_usuario_w);
		else
			CALL val_mensal_estoque.val_est_prod_mat(dt_mesano_referencia_w,cd_estabelecimento_w,cd_material_estoque_w,nm_usuario_w);
		end if;
		end;
	end if;	
     	end;
else
	exit;
end if;
END LOOP;
close C01;

select	coalesce(max(vl_total_item_nf),0)
into STRICT	vl_total_item_nf_ww
from	nota_fiscal_item
where	nr_sequencia	= nr_sequencia_p
and	nr_item_nf	= nr_item_nf_ww;

if (nr_movimento_estoque_ww > 0) and (vl_total_item_nf_soma_w <> vl_total_item_nf_ww) then
	update	movimento_estoque_valor
	set	vl_movimento = vl_movimento + (vl_total_item_nf_ww - vl_total_item_nf_soma_w)
	where	nr_movimento_estoque = nr_movimento_estoque_ww
	and	cd_tipo_valor = 1  LIMIT 1;
end if;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_movto_estoque_nf ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

