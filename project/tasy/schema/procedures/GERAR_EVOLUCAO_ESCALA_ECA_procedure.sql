-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';



--
-- dblink wrapper to call function gerar_evolucao_escala_eca as an autonomous transaction
--
CREATE EXTENSION IF NOT EXISTS dblink;

CREATE OR REPLACE PROCEDURE gerar_evolucao_escala_eca (nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE
	-- Change this to reflect the dblink connection string
	v_conn_str  text := format('port=%s dbname=%s user=%s', current_setting('port'), current_database(), current_user);
	v_query     text;

BEGIN
	v_query := 'CALL gerar_evolucao_escala_eca_atx ( ' || quote_nullable(nr_sequencia_p) || ',' || quote_nullable(nm_usuario_p) || ' )';
	PERFORM * FROM dblink(v_conn_str, v_query) AS p (ret boolean);

END;
$body$ LANGUAGE plpgsql SECURITY DEFINER;




CREATE OR REPLACE PROCEDURE gerar_evolucao_escala_eca_atx (nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE
 			

nr_sequencia_w			bigint;
ds_item_w				varchar(32000);
ds_resultado_w			varchar(32000);
ds_evolucao_w			varchar(32000);
ds_titulo_w				varchar(32000);
ds_itens_w				varchar(32000);
ds_compl_w				varchar(32000);
cd_medico_w				varchar(10);
nr_atendimento_w		bigint;
cd_pessoa_fisica_w		varchar(10);		
ie_inserir_w			boolean;	
nr_seq_tipo_avaliacao_w	bigint;
dt_avaliacao_w			timestamp;
ds_autor_w				varchar(255);
qt_pontuacao_w			bigint;
ds_gradacao_w			varchar(100);
IE_TIPO_EVOLUCAO_GCA_w	varchar(100);
cd_estabelecimento_w	bigint;
IE_TIPO_EVOLUCAO_w		varchar(10);
cd_evolucao_w			bigint;
nr_seq_apres_w			bigint;
DS_OBSERVACAO_w			varchar(4000);



C01 CURSOR FOR
	
	SELECT 	'    '||REPLACE(obter_descricao_padrao('GCA_ITEM','DS_ITEM',b.NR_SEQ_ITEM),CHR(13), ' ') ds_item,
		' '||REPLACE(obter_descricao_padrao('GCA_ITEM_RESULT','DS_RESULTADO',b.NR_SEQ_RESULT),CHR(10),' ') ds_resultado,
		(SELECT	x.nr_seq_apres
		 from	gca_item x
		 where	x.nr_sequencia = b.nr_seq_item) nr_seq_apres
	from   	gca_atend_result b,
		gca_atendimento a
	where  	b.nr_seq_avaliacao = a.nr_Sequencia
	and	a.nr_sequencia = nr_sequencia_p
	and	(obter_descricao_padrao('GCA_ITEM_RESULT','DS_RESULTADO',b.NR_SEQ_RESULT) IS NOT NULL AND (obter_descricao_padrao('GCA_ITEM_RESULT','DS_RESULTADO',b.NR_SEQ_RESULT))::text <> '')
	ORDER BY nr_seq_apres, ds_item;
BEGIN


select	obter_pessoa_atendimento(nr_atendimento,'C'),
		nr_atendimento,
		dt_avaliacao,
		obter_valor_dominio(4562,IE_AUTOR),
		QT_PONTUACAO,
		obter_descricao_padrao('GCA_GRADACAO', 'DS_GRADACAO', NR_SEQ_GRADACAO),
		cd_pessoa_fisica,
		DS_OBSERVACAO
into STRICT	cd_pessoa_fisica_w,
		nr_atendimento_w,
		dt_avaliacao_w,
		ds_autor_w,
		qt_pontuacao_w,
		ds_gradacao_w,
		cd_medico_w,
		DS_OBSERVACAO_w
from	gca_atendimento
where	nr_sequencia	= nr_sequencia_p;

cd_estabelecimento_w	:= OBTER_ESTAB_ATEND(nr_atendimento_w);

select	max(IE_TIPO_EVOLUCAO_GCA)
into STRICT	IE_TIPO_EVOLUCAO_GCA_w
from	parametro_medico
where	cd_estabelecimento = cd_estabelecimento_w;


if (IE_TIPO_EVOLUCAO_GCA_w IS NOT NULL AND IE_TIPO_EVOLUCAO_GCA_w::text <> '') then


	ds_evolucao_w	:= wheb_rtf_pck.GET_CABECALHO;



	ds_titulo_w	:= wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true)||'Avaliação Diária do Enfermeiro'||wheb_rtf_pck.get_negrito(false);
	--ds_compl_w	:= wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true)||'Data avaliação :'||wheb_rtf_pck.get_negrito(false)||to_char(dt_avaliacao_w,'dd/mm/yyyy');
	ds_compl_w	:= ds_compl_w||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true) || obter_desc_expressao(296046) || ': ' || wheb_rtf_pck.get_negrito(false)||qt_pontuacao_w;

	if (ds_gradacao_w IS NOT NULL AND ds_gradacao_w::text <> '') then
		ds_compl_w	:= ds_compl_w||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true) || obter_desc_expressao(305277)/*'Nível compl assistencial: '*/
||': '|| wheb_rtf_pck.get_negrito(false)||ds_gradacao_w;
	end if;

	if (ds_autor_w IS NOT NULL AND ds_autor_w::text <> '') then
		ds_compl_w	:= ds_compl_w||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true) || obter_desc_expressao(297388) || ': ' || wheb_rtf_pck.get_negrito(false)||ds_autor_w;
	end if;

	ds_compl_w	:= ds_compl_w||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true) || obter_desc_expressao(306200) || ': ' || wheb_rtf_pck.get_negrito(false);

	ds_itens_w	:= null;

	open C01;
	loop
	fetch C01 into	
		ds_item_w,
		ds_resultado_w,
		nr_seq_apres_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin
		if ((trim(both ds_item_w) IS NOT NULL AND (trim(both ds_item_w))::text <> '')	) and ((trim(both ds_resultado_w) IS NOT NULL AND (trim(both ds_resultado_w))::text <> '')	) then
			ds_itens_w	:= ds_itens_w ||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_negrito(true)||rpad(ds_item_w,40,' ')||':'||wheb_rtf_pck.get_negrito(false)||ds_resultado_w;
		end if;		
		end;
	end loop;
	close C01;

	if (ds_itens_w IS NOT NULL AND ds_itens_w::text <> '') then
		ds_evolucao_w	:= substr(ds_evolucao_w||ds_titulo_w||ds_compl_w||ds_itens_w,1,32000);
		ie_inserir_w	:= true;
	end if;
	
	if (DS_OBSERVACAO_w IS NOT NULL AND DS_OBSERVACAO_w::text <> '') then
		ds_evolucao_w	:= ds_evolucao_w||wheb_rtf_pck.get_quebra_linha||wheb_rtf_pck.get_quebra_linha || obter_desc_expressao(753406) || ' ' || DS_OBSERVACAO_w;
	end if;

	ds_evolucao_w	:= ds_evolucao_w||wheb_rtf_pck.get_rodape;

	if (ie_inserir_w) then
	
		select	max(IE_TIPO_EVOLUCAO)
		into STRICT	IE_TIPO_EVOLUCAO_w
		from	usuario
		where	nm_usuario = nm_usuario_p;
		
		select	nextval('evolucao_paciente_seq')
		into STRICT	cd_evolucao_w
		;
		
		insert into evolucao_paciente(cd_evolucao,
									  dt_evolucao,
									  ie_tipo_evolucao,
									  cd_pessoa_fisica,
									  dt_atualizacao,
									  nm_usuario,
									  nr_atendimento,
									  ds_evolucao,					
									  dt_liberacao,
									  ie_evolucao_clinica,
									  cd_medico)
				values (cd_evolucao_w,
						 clock_timestamp(),
						 coalesce(IE_TIPO_EVOLUCAO_w,1),
						 cd_pessoa_fisica_w,
						 clock_timestamp(),
						 nm_usuario_p,
						 nr_atendimento_w,
						 ds_evolucao_w,					
						 null,
						 IE_TIPO_EVOLUCAO_GCA_w,
						 cd_medico_w);
		
		--liberar_evolucao(cd_evolucao_w,nm_usuario_p);    Não gerar liberado por causa da assinatura digital.
		
		
		
		commit;
	end if;

end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_evolucao_escala_eca (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC; -- REVOKE ALL ON PROCEDURE gerar_evolucao_escala_eca_atx (nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

