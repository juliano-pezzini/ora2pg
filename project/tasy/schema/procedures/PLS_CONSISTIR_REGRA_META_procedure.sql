-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_regra_meta ( nr_seq_meta_p bigint, nr_seq_regra_p bigint, vl_peso_p bigint, qt_metas_p bigint, nm_usuario_p text, ds_erro_p INOUT text) AS $body$
DECLARE


vl_peso_w		pls_vendedor_meta_regra.vl_peso%type;
vl_peso_permitido_w	pls_vendedor_meta_regra.vl_peso%type;
qt_composicao_w		integer;


BEGIN

if (vl_peso_p > 10) then
	ds_erro_p := wheb_mensagem_pck.get_texto(280203);
	-- Mensagem: O peso não pode ser maior que 10!
else
	select	count(1)
	into STRICT	qt_composicao_w
	from	pls_vendedor_meta_regra
	where	nr_seq_meta = nr_seq_meta_p
	and	nr_sequencia <> nr_seq_regra_p;

	if (qt_composicao_w > 0) then
		if (vl_peso_p = 0) then
			ds_erro_p := wheb_mensagem_pck.get_texto(391699);
			-- Mensagem: Favor informar o valor do peso.
		end if;

		select	sum(vl_peso)
		into STRICT	vl_peso_w
		from	pls_vendedor_meta_regra
		where	nr_seq_meta = nr_seq_meta_p
		and	nr_sequencia <> nr_seq_regra_p;

		if	((coalesce(vl_peso_w,0) + vl_peso_p) > 10) then
			vl_peso_permitido_w := 10 - vl_peso_w;
			ds_erro_p := wheb_mensagem_pck.get_texto(280204, 'VL_PESO_P=' || vl_peso_p || ';VL_PESO_PERMITIDO_P=' || vl_peso_permitido_w);
			-- Mensagem: Não é possível cadastrar peso VL_PESO_P para a regra. O maxímo permitido de acordo com as outras regras é VL_PESO_PERMITIDO_P.
		elsif (coalesce(vl_peso_w,0) = 0) and (qt_composicao_w = 1) then
			update	pls_vendedor_meta_regra
			set	vl_peso = 10 - vl_peso_p
			where	nr_seq_meta = nr_seq_meta_p
			and	nr_sequencia <> nr_seq_regra_p;
		end if;
	else
		if (vl_peso_p = 0) then
			update	pls_vendedor_meta_regra
			set	vl_peso = 10
			where	nr_sequencia = nr_seq_regra_p;
		end if;
	end if;

	if (coalesce(ds_erro_p::text, '') = '') then
		-- aaschlote 10/03/2011 OS - 294419
		ds_erro_p := pls_consistir_regra_qt_metas(nr_seq_meta_p, nr_seq_regra_p, qt_metas_p, ds_erro_p);
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_regra_meta ( nr_seq_meta_p bigint, nr_seq_regra_p bigint, vl_peso_p bigint, qt_metas_p bigint, nm_usuario_p text, ds_erro_p INOUT text) FROM PUBLIC;

