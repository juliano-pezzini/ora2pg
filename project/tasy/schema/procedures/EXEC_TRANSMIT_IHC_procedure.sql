-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE exec_transmit_ihc ( nr_account_p bigint, nr_seq_protocol_p bigint, ie_type_claim_p text) AS $body$
DECLARE



ie_exists_ihc_w			smallint;
cd_interface_w			bigint;
ds_param_integ_hl7_w	varchar(255);
nr_account_w			bigint;
nr_encounter_w			bigint;
ie_type_w 				varchar(2);
cd_client_w				varchar(4000);
ds_certificate_text_w	varchar(4000);
cd_referrer_w 			varchar(4000);
cd_drg_w                varchar(255);
nr_drgver_w				bigint;
ds_message_w      varchar(4000);
ie_type_claim_w		varchar(10) := coalesce(ie_type_claim_p,'HC');
ie_reffer_required_w      varchar(2)   := 'Y';

insurance_type_w bigint;
encounter_type_w bigint;

C01 CURSOR FOR
SELECT	coalesce(nr_atendimento,0),
		coalesce(nr_interno_conta,0),
		'P'
from	conta_paciente
where	nr_seq_protocolo = coalesce(nr_seq_protocol_p,0)

union

SELECT	coalesce(nr_atendimento,0),
		coalesce(nr_interno_conta,0),
		'A'
from	conta_paciente
where	nr_interno_conta = coalesce(nr_account_p,0)
order by 1, 2;


BEGIN

	open C01;
	loop
	fetch C01 into
		nr_encounter_w,
		nr_account_w,
		ie_type_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	select	coalesce(a.ie_tipo_atend_conta,c.ie_tipo_atendimento),
			b.ie_tipo_convenio
	into STRICT	encounter_type_w,
			insurance_type_w
	from	conta_paciente a,
			convenio b,
			atendimento_paciente c
	where   a.cd_convenio_parametro = b.cd_convenio
	and		a.nr_atendimento = c.nr_atendimento
	and		a.nr_interno_conta = nr_account_w;

	select  a.dc_client_id,
          a.certificate_text,
          a.drg,
          a.drgver
	into STRICT   cd_client_w,
          ds_certificate_text_w,
          cd_drg_w,
          nr_drgver_w
	from    bft_encounter_billing_v a
	where   a.nr_account_id = nr_account_w;
	
	select a.referrer_provider_id
	into STRICT   cd_referrer_w
	from   bft_invoice_billing_v a
	where  a.nr_interno_conta = nr_account_w;
	

	select  CASE WHEN coalesce(max(1),0)=1 THEN 'N'  ELSE 'Y' END    -- 1 = NO / 0 = YES
	into STRICT    ie_reffer_required_w
	from    med_avaliacao_paciente a,
			med_tipo_avaliacao b
	where   a.nr_atendimento = nr_encounter_w
	and     a.nr_seq_tipo_avaliacao in (130,132,131)
	and     a.ie_situacao = 'A'
	and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
	and		  b.nr_sequencia = a.nr_seq_tipo_avaliacao;

	if (ie_reffer_required_w = 'Y') then

		select  CASE WHEN coalesce(max(1),0)=1 THEN 'N'  ELSE 'Y' END    -- 1 = NO / 0 = YES
		into STRICT    ie_reffer_required_w
		from    icunsw a
		where   a.nr_atendimento = nr_encounter_w
		and     (a.dt_liberacao IS NOT NULL AND a.dt_liberacao::text <> '')
		and     a.ie_situacao = 'A';
	end if;

	if (ie_type_w = 'A') then

		if (coalesce(cd_client_w::text, '') = '') then
			ds_message_w := wheb_mensagem_pck.get_texto(1113796) || chr(13) || chr(10);
		end if;
		if (((ds_certificate_text_w IS NOT NULL AND ds_certificate_text_w::text <> '') and (coalesce(cd_referrer_w::text, '') = '') and (ie_reffer_required_w = 'Y')) and (ie_type_claim_p = 'HC')) then
			ds_message_w := ds_message_w || wheb_mensagem_pck.get_texto(1113797) || chr(13) || chr(10);
		end if;
		if ((coalesce(cd_drg_w::text, '') = '' or coalesce(nr_drgver_w::text, '') = '') and ie_type_claim_p = 'HC') then
			ds_message_w := ds_message_w || wheb_mensagem_pck.get_texto(1113798);
		end if;
		if (ds_message_w IS NOT NULL AND ds_message_w::text <> '') then
		  CALL wheb_mensagem_pck.exibir_mensagem_abort(ds_message_w);
		end if;
	end if;
	
	if (ie_type_w = 'P') then

		if (coalesce(cd_client_w::text, '') = '') then
			ds_message_w := wheb_mensagem_pck.get_texto(1113796);
		end if;
		if (((ds_certificate_text_w IS NOT NULL AND ds_certificate_text_w::text <> '') and (coalesce(cd_referrer_w::text, '') = '') and (ie_reffer_required_w = 'Y')) and (ie_type_claim_p = 'HC')) then
			ds_message_w := ds_message_w || wheb_mensagem_pck.get_texto(1113797);
		end if;
		if ((coalesce(cd_drg_w::text, '') = '' or coalesce(nr_drgver_w::text, '') = '') and ie_type_claim_p = 'HC') then
			ds_message_w := ds_message_w || wheb_mensagem_pck.get_texto(1113798);
		end if;
		if (ds_message_w IS NOT NULL AND ds_message_w::text <> '') then
			insert into eclipse_claim_history(
					nr_sequencia,
					dt_atualizacao,
					nm_usuario,
					dt_atualizacao_nrec,
					nm_usuario_nrec,
					nr_interno_conta,
					ds_historico) values (
					nextval('eclipse_claim_history_seq'),
					clock_timestamp(),
					'DCInterface',
					clock_timestamp(),
					'DCInterface',
					nr_account_w,
					substr(ds_message_w,1,4000));

			commit;
			ds_message_w := '';
     end if;
	end if;

	if (insurance_type_w = 2) and (ie_type_claim_w = 'HC') then

		cd_interface_w := 3; -- execute the event for CREATE INVOICE + UPDATEFEES + create episode and transmit IHC
		ds_param_integ_hl7_w := '{"ENCOUNTER_ID" : ' || nr_encounter_w ||
								' , "INTERNAL_ACCOUNT_ID" : ' || nr_account_w || '}';
		CALL execute_bifrost_integration(cd_interface_w,ds_param_integ_hl7_w);	

	elsif (insurance_type_w in (13,12)) and (ie_type_claim_w = 'HC') then
	
		cd_interface_w := 165;  -- execute the event for transmit claim (BB and DVA)
		ds_param_integ_hl7_w := '{"ENCOUNTER_ID" : ' || nr_encounter_w ||
								' , "INTERNAL_ACCOUNT_ID" : ' || nr_account_w || '}';
		CALL execute_bifrost_integration(cd_interface_w,ds_param_integ_hl7_w);	

	elsif (ie_type_claim_w = 'PC') then
		
		cd_interface_w := 168; -- execute the event for transmit PC
		ds_param_integ_hl7_w := '{"ENCOUNTER_ID" : ' || nr_encounter_w ||
							' , "INTERNAL_ACCOUNT_ID" : ' || nr_account_w || '}';
		CALL execute_bifrost_integration(cd_interface_w,ds_param_integ_hl7_w);	

	end if;
	end;
	end loop;
	close C01;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE exec_transmit_ihc ( nr_account_p bigint, nr_seq_protocol_p bigint, ie_type_claim_p text) FROM PUBLIC;

