-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_lote_fornecedor ( nr_emprestimo_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


nr_seq_lote_w			bigint;
cd_material_w			integer;
ds_lote_fornec_w		varchar(20);
dt_validade_material_w		timestamp;
ie_indeterminado_w		varchar(1);
qt_gerar_w			double precision;
qt_emprestimo_w			double precision;
cd_estabelecimento_w		smallint;
cd_cgc_pf_w			varchar(14);
ie_gerar_desdobrado_w		varchar(1);
ie_gera_w			varchar(1);
ie_quantidade_w			varchar(1);
ie_tipo_w			varchar(1);
qt_existe_w			integer;
ds_retorno_w			varchar(255);
nr_seq_item_w			integer;
nr_seq_marca_w			bigint;
qt_conv_compra_estoque_w	double precision;
ds_retorno_lote_w		varchar(255);

C01 CURSOR FOR
	SELECT	'E',
		b.nr_sequencia,
		b.cd_material,
		b.ds_lote_fornec,
		b.dt_validade_material,
		coalesce(b.ie_indeterminado, 'N'),
		b.qt_emprestimo,
		coalesce(a.cd_pessoa_juridica, a.cd_pessoa_fisica),
		a.cd_estabelecimento,
		b.nr_seq_marca
	from	emprestimo a,
		emprestimo_material b
	where	a.nr_emprestimo		= b.nr_emprestimo
	and	a.nr_emprestimo		= nr_emprestimo_p
	and	coalesce(b.nr_seq_lote::text, '') = ''
	and	(b.ds_lote_fornec IS NOT NULL AND b.ds_lote_fornec::text <> '')
	and ((b.dt_validade_material IS NOT NULL AND b.dt_validade_material::text <> '') or ie_indeterminado = 'S')
	and (substr(obter_se_material_estoque_lote(a.cd_estabelecimento, b.cd_material),1,1) = 'N')
	and	ie_tipo = 'E'
	
union all

	SELECT	'S',
		b.nr_seq_dev,
		b.cd_material,
		b.ds_lote_fornec,
		b.dt_validade,
		coalesce(b.ie_indeterminado, 'N'),
		b.qt_material,
		coalesce(a.cd_pessoa_juridica, a.cd_pessoa_fisica),
		a.cd_estabelecimento,
		b.nr_seq_marca
	from	emprestimo a,
		emprestimo_material_dev b
	where	a.nr_emprestimo		= b.nr_emprestimo
	and	a.nr_emprestimo		= nr_emprestimo_p
	and	coalesce(b.nr_seq_lote::text, '') = ''
	and	(b.ds_lote_fornec IS NOT NULL AND b.ds_lote_fornec::text <> '')
	and ((b.dt_validade IS NOT NULL AND b.dt_validade::text <> '') or ie_indeterminado = 'S')
	and (substr(obter_se_material_estoque_lote(a.cd_estabelecimento, b.cd_material),1,1) = 'N')
	and	ie_tipo = 'S';


BEGIN

select	count(*)
into STRICT	qt_existe_w
from	emprestimo
where	nr_emprestimo = nr_emprestimo_p
and	coalesce(cd_pessoa_juridica::text, '') = '';
if (qt_existe_w > 0) then
	--rase_application_error(-20011, Para gerar lote fornecedor, e preciso ter a informacao da pessoa juridica no emprestimo);
	CALL Wheb_mensagem_pck.exibir_mensagem_abort(226081);
end if;

ds_retorno_w	:= '';

OPEN  C01;
LOOP
FETCH C01 INTO
	ie_tipo_w,
	nr_seq_item_w,
	cd_material_w,
	ds_lote_fornec_w,
	dt_validade_material_w,
	ie_indeterminado_w,
	qt_emprestimo_w,
	cd_cgc_pf_w,
	cd_estabelecimento_w,
	nr_seq_marca_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	SELECT * FROM Obter_Regra_empr_lote_fornec(	cd_material_w, cd_estabelecimento_w, ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w) INTO STRICT ie_gera_w, ie_quantidade_w, ie_gerar_desdobrado_w;
	if (ie_gera_w in ('S','O')) then
		begin
		/* Gera lote fornecedor */

		
		qt_conv_compra_estoque_w := obter_conversao_material(cd_material_w,'EC');
		
		if (ie_quantidade_w = 'E') then
			qt_gerar_w	:= qt_emprestimo_w;
		else
			qt_gerar_w	:= dividir(qt_emprestimo_w,qt_conv_compra_estoque_w);
		end if;
		
		if (coalesce(ie_gerar_desdobrado_w,'N') = 'N') then
			begin
			select	nextval('material_lote_fornec_seq')
			into STRICT	nr_seq_lote_w
			;

			if (coalesce(ds_retorno_w::text, '') = '') then
				ds_retorno_w	:= nr_seq_lote_w;
			else	ds_retorno_w	:= substr(ds_retorno_w || ', ' || nr_seq_lote_w, 1, 255);
			end if;

			insert into material_lote_fornec(
				nr_sequencia,
				cd_material,
				ie_origem_lote,
				nr_digito_verif,
				dt_atualizacao,
				nm_usuario,
				ds_lote_fornec,
				dt_validade,
				cd_cgc_fornec,
				qt_material,
				cd_estabelecimento,
				ie_validade_indeterminada,
				ie_situacao,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				nr_seq_marca,
				nr_emprestimo)
			values (nr_seq_lote_w,
				cd_material_w,
				'E',
				calcula_digito('Modulo11', nr_seq_lote_w),
				clock_timestamp(),
				nm_usuario_p,
				ds_lote_fornec_w,
				dt_validade_material_w,
				cd_cgc_pf_w,
				qt_emprestimo_w,
				cd_estabelecimento_w,
				ie_indeterminado_w,
				'A',
				clock_timestamp(),
				nm_usuario_p,
				nr_seq_marca_w,
				nr_emprestimo_p);

			/* Inclui a sequencia do lote gerado */

			if (ie_tipo_w = 'E') then
				update	emprestimo_material
				set	nr_seq_lote		= nr_seq_lote_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_emprestimo		= nr_emprestimo_p
				and	nr_sequencia		= nr_seq_item_w;
			elsif (ie_tipo_w = 'S') then
				update	emprestimo_material_dev
				set	nr_seq_lote		= nr_seq_lote_w,
					nm_usuario		= nm_usuario_p,
					dt_atualizacao		= clock_timestamp()
				where	nr_emprestimo		= nr_emprestimo_p
				and	nr_seq_dev		= nr_seq_item_w;
			end if;
			end;
		elsif (ie_gerar_desdobrado_w = 'S') then
			ds_retorno_lote_w := sup_desdobrar_lote_emprestimo(nr_emprestimo_p, nr_seq_item_w, qt_gerar_w, nm_usuario_p, ds_retorno_lote_w);
			ds_retorno_w := substr(ds_retorno_w || ds_retorno_lote_w,1,255);
		end if;
		end;
	end if;
	end;
END LOOP;
CLOSE C01;

commit;

ds_retorno_p	:= substr(ds_retorno_w,1,255);

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_lote_fornecedor ( nr_emprestimo_p bigint, nm_usuario_p text, ds_retorno_p INOUT text) FROM PUBLIC;

