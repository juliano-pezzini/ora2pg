-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_procedimento_laudo (nr_seq_laudo_p bigint, ie_vincular_tudo_p text, nm_usuario_p text, ie_commit_p text default 'N') AS $body$
DECLARE



nr_prescricao_w			bigint	:= 0;
nr_seq_proc_w			bigint	:= 0;
nr_laudo_proc_w			bigint	:= 0;
cd_setor_atendimento_w		integer	:= 0;
nr_seq_proced_w			bigint	:= 0;
nr_sequencia_w			bigint	:= 0;
nr_seq_prescricao_w		integer	:= 0;
ds_arquivo_w			varchar(80);
dt_liberacao_w			timestamp;

nr_prescricao_proced_w		bigint	:= 0;
nr_seq_prescr_proced_w		integer	:= 0;
nr_seq_interno_w		bigint	:= 0;
ie_status_execucao_w		varchar(3);
ie_proc_status_w		varchar(1);
ie_prioriza_principal_w		varchar(10);

cd_tipo_procedimento_w		smallint;

ie_vincula_tipo_proced_w	varchar(1);
ie_vinc_proced_exc_w		varchar(10);

value_parameter_w		varchar(512);

nr_seq_regra_vinc_w		bigint;
ie_tipo_regra_w			smallint;

ie_gerar_padrao_amostra_w	varchar(1) := 'N';
nr_seq_lab_w			varchar(20);

c01 CURSOR FOR
	SELECT	/*+ ALL_ROWS*/		b.nr_sequencia,
		b.nr_prescricao,
		a.nr_sequencia
	from	procedimento_paciente b,
		prescr_procedimento a,
		prescr_medica p,
		procedimento c
	where	p.nr_prescricao	= nr_prescricao_w
	and	p.nr_prescricao	= a.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.cd_procedimento = c.cD_procedimento
	and	a.ie_origem_proced = c.ie_origem_proced
	and (a.nr_sequencia	= b.nr_sequencia_prescricao OR coalesce(b.nr_sequencia_prescricao::text, '') = '')
	and	b.nr_sequencia	<> nr_seq_proc_w
	and	b.cd_setor_atendimento = cd_setor_atendimento_w
	and (coalesce(b.nr_laudo::text, '') = '' or (ie_vincula_tipo_proced_w = 'S' and c.cd_tipo_procedimento = cd_tipo_procedimento_w))
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(b.cd_motivo_exc_conta::text, '') = ''))
	and	((ie_prioriza_principal_w = 'N') or (coalesce(b.nr_seq_proc_princ,0) <> nr_seq_proc_w));


c02 CURSOR FOR
	SELECT	/*+ ALL_ROWS*/		b.nr_sequencia
	from	procedimento_paciente b,
		prescr_proc_ditado c,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_w
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	a.nr_seq_interno= c.nr_seq_prescr_proc
	and	c.ds_arquivo	= ds_arquivo_w
	and	b.nr_sequencia	<> nr_seq_proc_w
	and	b.cd_setor_atendimento = cd_setor_atendimento_w
	and	coalesce(b.nr_laudo::text, '') = ''
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(b.cd_motivo_exc_conta::text, '') = ''));


c03 CURSOR FOR
	SELECT	/*+ ALL_ROWS*/		b.nr_sequencia
	from	procedimento_paciente b,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_w
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	b.nr_sequencia	<> nr_seq_proc_w
	and	a.nr_seq_proc_princ = nr_seq_interno_w
	and	coalesce(b.nr_laudo::text, '') = ''
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(b.cd_motivo_exc_conta::text, '') = ''));

C04 CURSOR FOR
	SELECT	a.nr_sequencia,
		0 ie_tipo
	from	regra_vinculo_laudo a,
		procedimento b,
		procedimento_paciente c,
		grupo_proc d
	where 	c.cd_procedimento  = coalesce(a.cd_procedimento,c.cd_procedimento)
	and 	c.ie_origem_proced = coalesce(a.ie_origem_proced,c.ie_origem_proced)
	and	d.cd_especialidade = coalesce(a.cd_especialidade,d.cd_especialidade)
	and	c.cd_procedimento  = b.cd_procedimento
	and	c.ie_origem_proced = b.ie_origem_proced
	and	b.cd_grupo_proc    = d.cd_grupo_proc
	and	c.nr_sequencia	   = nr_seq_proc_w
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(c.cd_motivo_exc_conta::text, '') = ''))
	
union

	SELECT	distinct
		a.nr_seq_regra_vinculo_laudo,
		1 ie_tipo
	from	regra_vinculo_laudo_proc a,
		procedimento_paciente c,
		procedimento b,
		grupo_proc d
	where 	c.cd_procedimento  = coalesce(a.cd_procedimento,c.cd_procedimento)
	and 	c.ie_origem_proced = coalesce(a.ie_origem_proced,c.ie_origem_proced)
	and	d.cd_especialidade = coalesce(a.cd_especialidade,d.cd_especialidade)
	and	c.cd_procedimento  = b.cd_procedimento
	and	c.ie_origem_proced = b.ie_origem_proced
	and	b.cd_grupo_proc    = d.cd_grupo_proc
	and	c.nr_sequencia	   = nr_seq_proc_w
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(c.cd_motivo_exc_conta::text, '') = ''))
	order 	by 1;

C05 CURSOR FOR
	SELECT	c.nr_sequencia,
		c.nr_prescricao,
		c.nr_sequencia_prescricao
	from	regra_vinculo_laudo_proc a,
		procedimento_paciente c,
		procedimento b,
		grupo_proc d
	where	c.cd_procedimento   = coalesce(a.cd_procedimento, c.cd_procedimento)
	and	c.ie_origem_proced  = coalesce(a.ie_origem_proced, c.ie_origem_proced)
	and	d.cd_especialidade  = coalesce(a.cd_especialidade,d.cd_especialidade)
	and	c.cd_procedimento   = b.cd_procedimento
	and	c.ie_origem_proced  = b.ie_origem_proced
	and	b.cd_grupo_proc     = d.cd_grupo_proc
	and	coalesce(c.nr_laudo::text, '') = ''
	and	coalesce(c.dt_vinc_proced_adic::text, '') = ''
	and	c.nr_sequencia <> nr_seq_proc_w
	and	a.nr_seq_regra_vinculo_laudo = nr_seq_regra_vinc_w
	and	c.nr_prescricao = nr_prescricao_w
	and	ie_tipo_regra_w = 0
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(c.cd_motivo_exc_conta::text, '') = ''))
	
union

	SELECT	c.nr_sequencia,
		c.nr_prescricao,
		c.nr_sequencia_prescricao
	from	regra_vinculo_laudo a,
		procedimento_paciente c,
		procedimento b,
		grupo_proc d
	where	c.cd_procedimento   = coalesce(a.cd_procedimento, c.cd_procedimento)
	and	c.ie_origem_proced  = coalesce(a.ie_origem_proced, c.ie_origem_proced)
	and	d.cd_especialidade  = coalesce(a.cd_especialidade,d.cd_especialidade)
	and	c.cd_procedimento   = b.cd_procedimento
	and	c.ie_origem_proced  = b.ie_origem_proced
	and	b.cd_grupo_proc     = d.cd_grupo_proc
	and	coalesce(c.nr_laudo::text, '') = ''
	and	coalesce(c.dt_vinc_proced_adic::text, '') = ''
	and	a.nr_sequencia = nr_seq_regra_vinc_w
	and	c.nr_sequencia <> nr_seq_proc_w
	and	c.nr_prescricao = nr_prescricao_w
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(c.cd_motivo_exc_conta::text, '') = ''))
	and	ie_tipo_regra_w = 1;

C06 CURSOR FOR
	SELECT	b.nr_sequencia
	from	procedimento_paciente b,
		prescr_procedimento a,
		prescr_medica d
	where	d.nr_prescricao	= nr_prescricao_w
	and	a.nr_prescricao	= d.nr_prescricao
	and	a.nr_prescricao	= b.nr_prescricao
	and	a.nr_sequencia	= b.nr_sequencia_prescricao
	and	b.nr_sequencia	<> nr_seq_proc_w
	and	a.nr_seq_lab	= nr_seq_lab_w
	and	coalesce(b.nr_laudo::text, '') = ''
	and	((ie_vinc_proced_exc_w = 'S')  or (coalesce(b.cd_motivo_exc_conta::text, '') = ''));



BEGIN

ie_vincula_tipo_proced_w	:= coalesce(Obter_Valor_Param_Usuario(28, 222, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');
ie_vinc_proced_exc_w		:= coalesce(Obter_Valor_Param_Usuario(28, 277, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'S');
ie_prioriza_principal_w		:= coalesce(Obter_Valor_Param_Usuario(28, 287, wheb_usuario_pck.get_cd_perfil, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento),'N');

select	coalesce(max(ie_gerar_padrao_amostra),'N')
into STRICT	ie_gerar_padrao_amostra_w
from	lab_parametro;


select	coalesce(max(nr_prescricao),0),
	coalesce(max(nr_seq_proc),0),
	max(dt_liberacao)
into STRICT	nr_prescricao_w,
	nr_seq_proc_w,
	dt_liberacao_w
from	laudo_paciente
where	nr_sequencia	= nr_seq_laudo_p;

if (nr_seq_proc_w > 0) then
	begin

	select	cd_setor_atendimento,
		coalesce(nr_laudo,0),
		nr_sequencia,
		nr_sequencia_prescricao
	into STRICT	cd_setor_atendimento_w,
		nr_laudo_proc_w,
		nr_sequencia_w,
		nr_seq_prescricao_w
	from	procedimento_paciente
	where	nr_sequencia	= nr_seq_proc_w;


	select 	max(a.nr_seq_interno),
		max(b.cd_tipo_procedimento),
		max(nr_seq_lab)
	into STRICT	nr_seq_interno_w,
		cd_tipo_procedimento_w,
		nr_seq_lab_w
	from	prescr_procedimento a,
		procedimento b
	where	a.cd_procedimento = b.cd_procedimento
	and	a.ie_origem_proced = b.ie_origem_proced
	and	nr_sequencia = nr_seq_prescricao_w
	and	nr_prescricao = nr_prescricao_w;


	update	procedimento_paciente
	set	nr_laudo	= nr_seq_laudo_p,
		nr_controle	= CASE WHEN Obter_sigla_Exame_interno(nr_seq_proc_interno) = NULL THEN null  ELSE SUBSTR(Obter_sigla_Exame_interno(nr_seq_proc_interno)||nr_interno_conta||nr_sequencia,1,254) END
	where	nr_sequencia	= nr_seq_proc_w;


	if (nr_laudo_proc_w = 0) then
		CALL Atualizar_status_exec(nr_sequencia_w,nm_usuario_p);

	else
		select	max(ie_status_execucao)
		into STRICT	ie_status_execucao_w
		from	prescr_procedimento a
		where	a.nr_prescricao = nr_prescricao_w
		and	a.nr_sequencia = nr_seq_prescricao_w;

		select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
		into STRICT	ie_proc_status_w
		from	prescr_proc_status a
		where	a.nr_prescricao = nr_prescricao_w
		and	a.nr_seq_prescr = nr_seq_prescricao_w
		and	a.ie_status_exec = '26';

		if (ie_proc_status_w = 'S') and (ie_status_execucao_w = '25') then
			update	prescr_procedimento
			set	ie_status_execucao = '26',
				nm_usuario	= nm_usuario_p,
				dt_atualizacao = clock_timestamp()
			where	nr_prescricao = nr_prescricao_w
			and	nr_sequencia = nr_seq_prescricao_w;
		end if;
	end if;


	begin
	select	b.ds_arquivo
	into STRICT	ds_arquivo_w
	from	prescr_proc_ditado b,
		prescr_procedimento a
	where	a.nr_prescricao	= nr_prescricao_w
	and	a.nr_sequencia	= nr_seq_prescricao_w
	and	a.nr_seq_interno= b.nr_seq_prescr_proc;
	exception
		when others then
			ds_arquivo_w	:= null;
	end;

	open	c02;
	loop
	fetch	c02 into nr_seq_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
		begin

		update	procedimento_paciente
		set	nr_laudo	= nr_seq_laudo_p,
			nr_controle	= CASE WHEN Obter_sigla_Exame_interno(nr_seq_proc_interno) = NULL THEN null  ELSE SUBSTR(Obter_sigla_Exame_interno(nr_seq_proc_interno)||nr_interno_conta||nr_sequencia,1,254) END
		where	nr_sequencia	= nr_seq_proced_w;

		CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);
		end;
	end 	loop;
	close	c02;


	open	c03;
	loop
	fetch	c03 into nr_seq_proced_w;
		EXIT WHEN NOT FOUND; /* apply on c03 */
		begin


		update	procedimento_paciente
		set	nr_laudo	= nr_seq_laudo_p,
			nr_controle	= CASE WHEN Obter_sigla_Exame_interno(nr_seq_proc_interno) = NULL THEN null  ELSE SUBSTR(Obter_sigla_Exame_interno(nr_seq_proc_interno)||nr_interno_conta||nr_sequencia,1,254) END
		where	nr_sequencia	= nr_seq_proced_w;


		CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);
		end;
	end 	loop;
	close	c03;


	if (ie_vincular_tudo_p = 'S') then

		open	c01;
		loop
		fetch	c01 into nr_seq_proced_w,
				nr_prescricao_proced_w,
				nr_seq_prescr_proced_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
			begin

			update	procedimento_paciente
			set	nr_laudo	= nr_seq_laudo_p,
				nr_controle	= CASE WHEN Obter_sigla_Exame_interno(nr_seq_proc_interno) = NULL THEN null  ELSE SUBSTR(Obter_sigla_Exame_interno(nr_seq_proc_interno)||nr_interno_conta||nr_sequencia,1,254) END
			where	nr_sequencia	= nr_seq_proced_w;

			if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then


				Update	prescr_procedimento
				set	ie_status_execucao	= 40,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_prescricao		= nr_prescricao_proced_w
				and	nr_sequencia		= nr_seq_prescr_proced_w;

			else
				CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);

			end if;
			end;
		end 	loop;
		close	c01;

	end if;


	open C04;
	loop
	fetch C04 into
		nr_seq_regra_vinc_w,
		ie_tipo_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C04 */
		begin
		open C05;
		loop
		fetch C05 into
			nr_seq_proced_w,
			nr_prescricao_proced_w,
			nr_seq_prescr_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C05 */
			begin

			update	procedimento_paciente
			set	nr_laudo	= nr_seq_laudo_p,
				nr_controle	= CASE WHEN Obter_sigla_Exame_interno(nr_seq_proc_interno) = NULL THEN null  ELSE SUBSTR(Obter_sigla_Exame_interno(nr_seq_proc_interno)||nr_interno_conta||nr_sequencia,1,254) END ,
				dt_vinc_proced_adic = clock_timestamp()
			where	nr_sequencia	= nr_seq_proced_w;

			if (dt_liberacao_w IS NOT NULL AND dt_liberacao_w::text <> '') then

				Update	prescr_procedimento
				set	ie_status_execucao	= 40,
					nm_usuario	= nm_usuario_p,
					dt_atualizacao = clock_timestamp()
				where	nr_prescricao		= nr_prescricao_proced_w
				and	nr_sequencia		= nr_seq_prescr_proced_w;

			else
				CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);

			end if;

			end;
		end loop;
		close C05;
		end;
	end loop;
	close C04;


	if (ie_gerar_padrao_amostra_w = 'S') and (nr_seq_lab_w IS NOT NULL AND nr_seq_lab_w::text <> '') then

		open C06;
		loop
		fetch C06 into
			nr_seq_proced_w;
		EXIT WHEN NOT FOUND; /* apply on C06 */
			begin

			update	procedimento_paciente
			set	nr_laudo	= nr_seq_laudo_p,
				nr_controle	= CASE WHEN Obter_sigla_Exame_interno(nr_seq_proc_interno) = NULL THEN null  ELSE SUBSTR(Obter_sigla_Exame_interno(nr_seq_proc_interno)||nr_interno_conta||nr_sequencia,1,254) END
			where	nr_sequencia	= nr_seq_proced_w;

			CALL Atualizar_status_exec(nr_seq_proced_w,nm_usuario_p);

			end;
		end loop;
		close C06;
	end if;

	if (ie_commit_p = 'S') then
		if (coalesce(wheb_usuario_pck.get_ie_commit, 'S') = 'S') then commit; end if;
	end if;

	end;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_procedimento_laudo (nr_seq_laudo_p bigint, ie_vincular_tudo_p text, nm_usuario_p text, ie_commit_p text default 'N') FROM PUBLIC;

