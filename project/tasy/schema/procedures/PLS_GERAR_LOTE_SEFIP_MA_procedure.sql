-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_gerar_lote_sefip_ma ( nr_seq_lote_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_cgc_tomador_padrao_w		sefip_lote.cd_cgc_tomador_padrao%type;
cd_cgc_tomador_w		sefip_lote.cd_cgc_tomador_padrao%type;
cd_pessoa_fisica_w		pls_prestador.cd_pessoa_fisica%type;
dt_lote_w			sefip_lote.dt_lote%type;
nr_contador_w			bigint := 0;
nr_seq_prestador_padrao_w	sefip_lote.nr_seq_prestador_padrao%type;
nr_seq_sefip_tomador_w		sefip_lote.nr_seq_prestador_padrao%type;
cd_darf_w			sefip_lote.cd_darf%type;
nr_seq_tomador_padrao_w		sefip_tomador.nr_sequencia%type;
vl_imposto_w			double precision;
vl_faturado_w			double precision;
vl_pagamento_w			double precision;
vl_conta_total_w		double precision;
nr_vetor_w			bigint := 0;
qt_itens_conta_w		bigint;
qt_itens_aux_w			bigint;
vl_pagamento_total_w		double precision;
vl_imposto_total_w		double precision;
cd_cgc_ant_w			sefip_lote.cd_cgc_tomador_padrao%type;
vl_imposto_11_w			double precision;
vl_imposto_20_w			double precision;
vl_base_teto_w			double precision;
vl_base_acumulado_w		double precision;
vl_base_calculo_w		double precision;
pr_imposto_w			double precision;
vl_base_outra_fonte_w		double precision;
qt_registros_w			bigint;
vl_imposto_int_w		bigint;
vl_sobra_w			double precision;
nr_seq_prestador_ant_w		sefip_lote.nr_seq_prestador_padrao%type;
ie_ordenacao_w			bigint;


c_mensalidades CURSOR FOR
	SELECT	p.cd_cgc cd_cgc,
		sum(s.vl_mensalidade) vl_faturado
	from	pls_mensalidade_segurado s,
		pls_mensalidade m,
		pls_plano n,
		pls_segurado r,
		pls_contrato_pagador p,
		pls_contrato c
	where	s.nr_seq_mensalidade = m.nr_sequencia
	and	s.nr_seq_segurado = r.nr_sequencia
	and	m.nr_seq_pagador = p.nr_sequencia
	and	p.nr_seq_contrato = c.nr_sequencia
	and	r.nr_seq_plano = n.nr_sequencia
	and	coalesce(p.cd_cgc,'X') <> 'X'
	and	coalesce(m.ie_cancelamento,'X') = 'X'
	and	m.vl_mensalidade > 0
	and	trunc(m.dt_referencia,'month') = dt_lote_w
	and	n.ie_tipo_contratacao = 'CE'
	group by p.cd_cgc
	having sum(s.vl_mensalidade) > 0;

vet_mensalidades	c_mensalidades%ROWTYPE;

c_prod_medica CURSOR FOR
	SELECT	distinct a.nr_seq_prestador,
		null vl_base_calculo
	from	pls_lote_pagamento b,
		pls_pagamento_prestador a,
		pls_prestador p
	where	a.nr_seq_lote = b.nr_sequencia
	and	p.nr_sequencia	= a.nr_seq_prestador
	and	coalesce(p.cd_pessoa_fisica,'X') <> 'X'
	and	trunc(b.dt_mes_competencia,'month') = dt_lote_w
	and	p.nr_sequencia = (	SELECT	max(z.nr_sequencia)
					from	pls_prestador z
					where	z.cd_pessoa_fisica = p.cd_pessoa_fisica
					and	exists (	select	1
							from	pls_pagamento_prestador w
							where	w.nr_sequencia = a.nr_sequencia
							and	w.nr_seq_prestador = z.nr_sequencia))
	and	exists (	select	1
			from	pls_pag_prest_vencimento v,
				pls_pag_prest_venc_trib t,
				tributo z
			where	t.nr_seq_vencimento    = v.nr_sequencia
			and	t.cd_tributo	       = z.cd_tributo
			and	v.nr_seq_pag_prestador = a.nr_sequencia
			and	z.ie_tipo_tributo = 'INSS'
			and	t.vl_base_calculo > 0
			and 	ie_pago_prev = 'V');

vet_prod_medica	c_prod_medica%ROWTYPE;

c_conta_medica CURSOR FOR
	SELECT	y.ie_tipo_contratacao,
		CASE WHEN r.ie_tipo_contratacao='CE' THEN  coalesce(p.cd_cgc,w.cd_cgc_estipulante)  ELSE p.cd_cgc END  cd_cgc,
		r.vl_liberado vl_liberado,
		CASE WHEN r.ie_tipo_contratacao='CE' THEN  1  ELSE 2 END  ie_ordenacao
	FROM pls_conta_medica_resumo r, pls_pagamento_item c, pls_lote_pagamento b, pls_pagamento_prestador a, pls_segurado s
LEFT OUTER JOIN pls_contrato_pagador p ON (s.nr_seq_pagador = p.nr_sequencia)
LEFT OUTER JOIN pls_plano y ON (s.nr_seq_plano = y.nr_sequencia)
LEFT OUTER JOIN pls_contrato w ON (p.nr_seq_contrato = w.nr_sequencia)
WHERE a.nr_seq_lote = b.nr_sequencia and c.nr_seq_pagamento = a.nr_sequencia and a.nr_seq_prestador in (	SELECT	nr_sequencia
					from	pls_prestador
					where	cd_pessoa_fisica = cd_pessoa_fisica_w) and trunc(b.dt_mes_competencia,'month') = dt_lote_w and r.nr_seq_lote_pgto = b.nr_sequencia and r.nr_seq_pag_item = c.nr_sequencia and r.nr_seq_segurado = s.nr_sequencia    and coalesce(r.vl_liberado,0) > 0 order by ie_ordenacao asc;

vet_conta_medica	c_conta_medica%ROWTYPE;


c_ocorrencia_fin CURSOR FOR
	SELECT	nr_seq_prestador,
		vl_liberado
	from (	SELECT	a.nr_seq_prestador,
				sum(c.vl_item) vl_liberado
			from	pls_lote_pagamento b,
				pls_pagamento_prestador a,
				pls_pagamento_item c,
				pls_prestador p
			where	a.nr_seq_lote = b.nr_sequencia
			and	c.nr_seq_pagamento = a.nr_sequencia
			and	a.nr_seq_prestador = p.nr_sequencia
			and	trunc(b.dt_mes_competencia,'month') = dt_lote_w
			and	c.vl_item <> 0
			and	p.nr_sequencia in (	select	nr_sequencia
							from	pls_prestador
							where	cd_pessoa_fisica = cd_pessoa_fisica_w)
			and	exists (	select	1
						from	pls_evento_tributo w,
							tributo z
						where	w.cd_tributo = z.cd_tributo
						and	w.nr_seq_evento = c.nr_seq_evento
						and	w.ie_situacao = 'A'
						and	dt_lote_w between coalesce(dt_inicio_vigencia,dt_lote_w) and coalesce(dt_fim_vigencia,clock_timestamp())
						and	z.ie_tipo_tributo = 'INSS')
			and	not exists (	select	1
						FROM pls_conta_medica_resumo r, pls_segurado s
LEFT OUTER JOIN pls_contrato_pagador p ON (s.nr_seq_pagador = p.nr_sequencia)
LEFT OUTER JOIN pls_plano y ON (s.nr_seq_plano = y.nr_sequencia)
LEFT OUTER JOIN pls_contrato w ON (p.nr_seq_contrato = w.nr_sequencia)
WHERE a.nr_seq_lote = b.nr_sequencia and c.nr_seq_pagamento = a.nr_sequencia and trunc(b.dt_mes_competencia,'month') = dt_lote_w and r.nr_seq_lote_pgto = b.nr_sequencia and r.nr_seq_pag_item = c.nr_sequencia and r.nr_seq_segurado = s.nr_sequencia    and r.vl_liberado > 0 )
		group by a.nr_seq_prestador) alias9
	where vl_liberado <> 0
	order by nr_seq_prestador;

vet_ocorrencia_fin	c_ocorrencia_fin%ROWTYPE;


c_pres_padrao CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_cgc
	from	sefip_tomador a
	where	a.nr_seq_lote = nr_seq_lote_p
	and	not exists (	SELECT	1
				from	sefip_tomador_movimento b
				where	b.nr_seq_tomador = a.nr_sequencia);
vet_pres_padrao	c_pres_padrao%ROWTYPE;

c_prestadores_zero CURSOR FOR
	SELECT	a.nr_sequencia,
		a.nr_seq_prestador,
		a.vl_remuneracao
	from	sefip_tomador_movimento a
	where	a.nr_seq_lote = nr_seq_lote_p
	and	1 = 2
	and	a.vl_descontado = 0;
vet_prestadores_zero	c_prestadores_zero%ROWTYPE;


BEGIN

--delete marcio_log;
--commit;
select	dt_lote,
	cd_cgc_tomador_padrao,
	nr_seq_prestador_padrao
into STRICT	dt_lote_w,
	cd_cgc_tomador_padrao_w,
	nr_seq_prestador_padrao_w
from	sefip_lote
where	nr_sequencia = nr_seq_lote_p;

if (coalesce(nr_seq_prestador_padrao_w,0) = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(669678);
end if;

dt_lote_w := trunc(dt_lote_w,'month');

nr_contador_w := 0;

/*Cursor das Mensalidades que devem inserir tomador*/

open c_mensalidades;
loop
fetch c_mensalidades into
	vet_mensalidades;
EXIT WHEN NOT FOUND; /* apply on c_mensalidades */
	begin

	nr_contador_w := nr_contador_w + 1;

	insert into sefip_tomador(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lote,
		cd_cgc,
		vl_retencao,
		vl_faturado)
	values (	nextval('sefip_tomador_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_lote_p,
		vet_mensalidades.cd_cgc,
		0,
		vet_mensalidades.vl_faturado);

	if (mod(nr_contador_w,1000) = 0) then
		commit;
	end if;

	end;
end loop;
close c_mensalidades;

/*Inserir as mensalidades com tomador padrão*/

if (coalesce(cd_cgc_tomador_padrao_w,'X') <> 'X') then
	select	coalesce(sum(s.vl_mensalidade),0) vl_faturado
	into STRICT	vl_faturado_w
	from	pls_mensalidade_segurado s,
		pls_mensalidade m,
		pls_plano n,
		pls_segurado r,
		pls_contrato_pagador p,
		pls_contrato c
	where	s.nr_seq_mensalidade = m.nr_sequencia
	and	s.nr_seq_segurado = r.nr_sequencia
	and	m.nr_seq_pagador = p.nr_sequencia
	and	p.nr_seq_contrato = c.nr_sequencia
	and	r.nr_seq_plano = n.nr_sequencia
	and	coalesce(m.ie_cancelamento,'X') = 'X'
	and	m.vl_mensalidade > 0
	and	trunc(m.dt_referencia,'month') = dt_lote_w
	and	coalesce(n.ie_tipo_contratacao,'X') <> 'CE';

	select	nextval('sefip_tomador_seq')
	into STRICT	nr_seq_tomador_padrao_w
	;

	insert into sefip_tomador(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_lote,
		cd_cgc,
		vl_retencao,
		vl_faturado)
	values (	nr_seq_tomador_padrao_w,
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_lote_p,
		cd_cgc_tomador_padrao_w,
		0,
		vl_faturado_w);

	commit;
end if;

nr_contador_w := 0;

/*Cursor da produção médica*/

open c_prod_medica;
loop
fetch c_prod_medica into
	vet_prod_medica;
EXIT WHEN NOT FOUND; /* apply on c_prod_medica */
	begin

	select	count(*),
		sum(r.vl_liberado)
	into STRICT	qt_itens_conta_w,
		vl_conta_total_w
	from	pls_lote_pagamento b,
		pls_pagamento_prestador a,
		pls_pagamento_item c,
		pls_conta_medica_resumo r
	where	a.nr_seq_lote = b.nr_sequencia
	and	c.nr_seq_pagamento = a.nr_sequencia
	and	a.nr_seq_prestador = vet_prod_medica.nr_seq_prestador
	and	trunc(b.dt_mes_competencia,'month') = dt_lote_w
	and	r.nr_seq_lote_pgto = b.nr_sequencia
	and	r.nr_seq_pag_item = c.nr_sequencia
	and	r.vl_liberado > 0;

	select	max(cd_pessoa_fisica)
	into STRICT	cd_pessoa_fisica_w
	from	pls_prestador
	where	nr_sequencia = vet_prod_medica.nr_seq_prestador;

	vl_imposto_11_w := 0;
	vl_imposto_20_w := 0;

	if (coalesce(cd_pessoa_fisica_w,'X') <> 'X')  then

		select	coalesce(sum(vl_imposto),0)
		into STRICT	vl_imposto_11_w
		from	pls_lote_ret_trib_valor a,
			pls_lote_ret_trib_prest b,
			pls_lote_retencao_trib l
		where	b.nr_sequencia = a.nr_seq_trib_prest
		and	b.nr_seq_lote = l.nr_sequencia
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	pr_tributo = 11
		and	trunc(l.dt_mes_referencia,'month') = dt_lote_w;

		select	coalesce(sum(vl_imposto),0)
		into STRICT	vl_imposto_20_w
		from	pls_lote_ret_trib_valor a,
			pls_lote_ret_trib_prest b,
			pls_lote_retencao_trib l
		where	b.nr_sequencia = a.nr_seq_trib_prest
		and	b.nr_seq_lote = l.nr_sequencia
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	pr_tributo = 20
		and	trunc(l.dt_mes_referencia,'month') = dt_lote_w;

		select	coalesce(sum(vl_base_calculo),0)
		into STRICT	vl_base_outra_fonte_w
		from	pls_lote_ret_trib_valor a,
			pls_lote_ret_trib_prest b,
			pls_lote_retencao_trib l,
			tributo t
		where	b.nr_sequencia = a.nr_seq_trib_prest
		and	b.nr_seq_lote = l.nr_sequencia
		and	a.cd_tributo = t.cd_tributo
		and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
		and	ie_pago_prev = 'R'
		and	t.ie_tipo_tributo = 'INSS'
		and	trunc(l.dt_mes_referencia,'month') = dt_lote_w;

	end if;
	/*
	if (qt_itens_conta_w = 0) then

		select	sum(a.vl_pagamento) vl_base_calculo
		into	vl_pagamento_w
		from	pls_lote_pagamento b,
			pls_pagamento_prestador a,
			pls_prestador p
		where	a.nr_seq_lote = b.nr_sequencia
		and	p.nr_sequencia	= a.nr_seq_prestador
		and	nvl(p.cd_pessoa_fisica,'X') <> 'X'
		and	trunc(b.dt_mes_competencia,'month') = dt_lote_w
		and	p.nr_sequencia = (	select	max(z.nr_sequencia)
						from	pls_prestador z
						where	z.cd_pessoa_fisica = p.cd_pessoa_fisica)
		and	p.nr_sequencia = vet_prod_medica.nr_seq_prestador
		and	exists(	select	1
				from	pls_pag_prest_vencimento v,
					pls_pag_prest_venc_trib t,
					tributo z
				where	t.nr_seq_vencimento    = v.nr_sequencia
				and	t.cd_tributo	       = z.cd_tributo
				and	v.nr_seq_pag_prestador = a.nr_sequencia
				and	z.ie_tipo_tributo = 'INSS'
				and	t.vl_base_calculo > 0
				and 	ie_pago_prev = 'V');

		if (vl_imposto_11_w > 0) then
			vl_imposto_w := vl_imposto_11_w;
		end if;

		if (vl_imposto_20_w > 0) then
			vl_imposto_w := vl_imposto_20_w;
		end if;

		insert into sefip_tomador_movimento
			(nr_sequencia,
			dt_atualizacao,
			nm_usuario,
			nm_usuario_nrec,
			dt_atualizacao_nrec,
			nr_seq_prestador,
			vl_remuneracao,
			vl_remuneracao_13,
			vl_descontado,
			vl_base_13,
			vl_base_13_movimento,
			nr_seq_tomador,
			cd_cbo_saude,
			cd_cgc_estipulante,
			cd_pf_estipulante,
			nr_seq_lote)
		values	(sefip_tomador_movimento_seq.nextval,
			sysdate,
			nm_usuario_p,
			nm_usuario_p,
			sysdate,
			vet_prod_medica.nr_seq_prestador,
			vl_pagamento_w,
			0,
			vl_imposto_w,
			0,
			0,
			nr_seq_tomador_padrao_w,
			null,
			cd_cgc_tomador_padrao_w,
			null,
			nr_seq_lote_p);
		commit;
	end if;
	*/
	qt_itens_aux_w 		:= 0;
	vl_pagamento_total_w	:= 0;
	vl_imposto_total_w	:= 0;
	vl_base_acumulado_w	:= 0;

	cd_cgc_ant_w := '';

	select	max(coalesce(vl_teto_base_calculo,4390.24))
	into STRICT	vl_base_teto_w
	from	tributo_conta_pagar r,
		tributo t
	where	r.cd_tributo = t.cd_tributo
	and	t.ie_tipo_tributo = 'INSS'
	and	coalesce(ie_producao_medica,'A') in ('S','A')
	and	dt_lote_w between coalesce(dt_inicio_vigencia,dt_lote_w) and coalesce(dt_fim_vigencia,clock_timestamp());

	if (coalesce(vl_base_outra_fonte_w,0) > 0) then
		vl_base_teto_w := vl_base_teto_w - vl_base_outra_fonte_w;
	end if;

	select	count(*)
	into STRICT	qt_registros_w
	from	pls_prestador p,
		sefip_tomador_movimento s
	where	p.nr_sequencia = s.nr_seq_prestador
	and	s.nr_seq_lote = nr_seq_lote_p
	and	p.cd_pessoa_fisica = cd_pessoa_fisica_w;

	if (qt_registros_w = 0) then
		vl_sobra_w	:= 0;
		vl_imposto_w	:= 0;

		select	count(*)
		into STRICT	qt_registros_w
		FROM pls_conta_medica_resumo r, pls_pagamento_item c, pls_lote_pagamento b, pls_pagamento_prestador a, pls_segurado s
LEFT OUTER JOIN pls_contrato_pagador p ON (s.nr_seq_pagador = p.nr_sequencia)
LEFT OUTER JOIN pls_plano y ON (s.nr_seq_plano = y.nr_sequencia)
LEFT OUTER JOIN pls_contrato w ON (p.nr_seq_contrato = w.nr_sequencia)
WHERE a.nr_seq_lote = b.nr_sequencia and c.nr_seq_pagamento = a.nr_sequencia and a.nr_seq_prestador in (	SELECT	nr_sequencia
						from	pls_prestador
						where	cd_pessoa_fisica = cd_pessoa_fisica_w) and trunc(b.dt_mes_competencia,'month') = dt_lote_w and r.nr_seq_lote_pgto = b.nr_sequencia and r.nr_seq_pag_item = c.nr_sequencia and r.nr_seq_segurado = s.nr_sequencia    and coalesce(r.vl_liberado,0) > 0;

		open c_conta_medica;
			loop
			fetch c_conta_medica into
				vet_conta_medica;
			EXIT WHEN NOT FOUND; /* apply on c_conta_medica */
				begin
				qt_registros_w	:= qt_registros_w - 1;
				ie_ordenacao_w 	:= vet_conta_medica.ie_ordenacao;
				qt_itens_aux_w 	:= qt_itens_aux_w + 1;
				nr_contador_w 	:= nr_contador_w + 1;

				cd_cgc_tomador_w := vet_conta_medica.cd_cgc;

				if (coalesce(cd_cgc_ant_w,'X') <> cd_cgc_tomador_w) then
					begin
					select	nr_sequencia
					into STRICT	nr_seq_sefip_tomador_w
					from (	SELECT	nr_sequencia
							from	sefip_tomador
							where	cd_cgc = cd_cgc_tomador_w
							and	nr_seq_lote = nr_seq_lote_p) alias2 LIMIT 1;

					cd_cgc_ant_w := cd_cgc_tomador_w;

					exception when others then
						nr_seq_sefip_tomador_w := 0;
						cd_cgc_ant_w := '';
					end;
				end if;

				if (nr_seq_sefip_tomador_w = 0) and (vet_conta_medica.ie_tipo_contratacao = 'CE') then

					nr_seq_sefip_tomador_w := nr_seq_tomador_padrao_w;
					cd_cgc_tomador_w := cd_cgc_tomador_padrao_w;

					/*select	sefip_tomador_seq.nextval
					into	nr_seq_sefip_tomador_w
					from	dual;

					insert into sefip_tomador(
						nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						dt_atualizacao_nrec,
						nm_usuario_nrec,
						nr_seq_lote,
						cd_cgc,
						vl_retencao,
						vl_faturado)
					values(	nr_seq_sefip_tomador_w,
						sysdate,
						nm_usuario_p,
						sysdate,
						nm_usuario_p,
						nr_seq_lote_p,
						cd_cgc_tomador_w,
						0,
						0);
					commit;*/
				end if;

				if (vl_base_teto_w > 0) then
					vl_base_calculo_w := vet_conta_medica.vl_liberado;

					if (vl_base_acumulado_w + vl_base_calculo_w > vl_base_teto_w) then
						vl_base_calculo_w := vl_base_teto_w - vl_base_acumulado_w;

						if (vl_base_calculo_w < 0) then
							vl_base_calculo_w := 0;
						end if;

					end if;

					vl_base_acumulado_w := vl_base_acumulado_w + vl_base_calculo_w;

					-- Se ie_ordenacao = 1 então o tipo de contratação é CE. Nesse caso, a alíquota do tributo é 11%
					if (vl_base_acumulado_w <= vl_base_teto_w) then
						begin
						select	coalesce(max(pr_aliquota),0)
						into STRICT	pr_imposto_w
						from	tributo_conta_pagar
						where	cd_tributo in (	SELECT	t.cd_tributo
									from	pls_pag_prest_vencimento v,
										pls_pag_prest_venc_trib t,
										pls_pagamento_prestador p,
										tributo z
									where	t.nr_seq_vencimento    = v.nr_sequencia
									and	t.cd_tributo	       = z.cd_tributo
									and	v.nr_seq_pag_prestador = p.nr_sequencia
									and	p.nr_seq_prestador = vet_prod_medica.nr_seq_prestador
									and	z.ie_tipo_tributo = 'INSS'
									and	t.vl_base_calculo > 0
									and 	ie_pago_prev = 'V'
									and	trunc(v.dt_vencimento,'month') = dt_lote_w)
						and	dt_lote_w between coalesce(dt_inicio_vigencia , clock_timestamp()) and coalesce(dt_fim_vigencia , clock_timestamp())
						and	coalesce(pr_aliquota,0) > 0  LIMIT 1;
						exception
							when others then
							pr_imposto_w := 0;
						end;
					else
						pr_imposto_w	:= 0;
					end if;

					vl_imposto_int_w 	:= dividir(vl_base_calculo_w * pr_imposto_w,100);
					vl_imposto_w		:= trunc(vl_imposto_int_w,2);
					vl_sobra_w		:= (vl_imposto_int_w - vl_imposto_w) + vl_sobra_w;

					if (qt_registros_w = 0) then
						vl_imposto_w	:= vl_imposto_w + vl_sobra_w;
					end if;
				else
					vl_imposto_w := 0;
				end if;

				if (nr_seq_sefip_tomador_w <> 0) and (vet_conta_medica.ie_tipo_contratacao = 'CE') then

					insert into sefip_tomador_movimento(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nm_usuario_nrec,
						dt_atualizacao_nrec,
						nr_seq_prestador,
						vl_remuneracao,
						vl_remuneracao_13,
						vl_descontado,
						vl_base_13,
						vl_base_13_movimento,
						nr_seq_tomador,
						cd_cbo_saude,
						cd_cgc_estipulante,
						cd_pf_estipulante,
						nr_seq_lote)
					values (nextval('sefip_tomador_movimento_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p,
						clock_timestamp(),
						vet_prod_medica.nr_seq_prestador,
						vet_conta_medica.vl_liberado,
						0,
						vl_imposto_w,
						0,
						0,
						nr_seq_sefip_tomador_w,
						null,
						cd_cgc_tomador_w,
						null,
						nr_seq_lote_p);
				else

					insert into sefip_tomador_movimento(nr_sequencia,
						dt_atualizacao,
						nm_usuario,
						nm_usuario_nrec,
						dt_atualizacao_nrec,
						nr_seq_prestador,
						vl_remuneracao,
						vl_remuneracao_13,
						vl_descontado,
						vl_base_13,
						vl_base_13_movimento,
						nr_seq_tomador,
						cd_cbo_saude,
						cd_cgc_estipulante,
						cd_pf_estipulante,
						nr_seq_lote)
					values (nextval('sefip_tomador_movimento_seq'),
						clock_timestamp(),
						nm_usuario_p,
						nm_usuario_p,
						clock_timestamp(),
						vet_prod_medica.nr_seq_prestador,
						vet_conta_medica.vl_liberado,
						0,
						vl_imposto_w,
						0,
						0,
						nr_seq_tomador_padrao_w,
						null,
						cd_cgc_tomador_w,
						null,
						nr_seq_lote_p);

				end if;

				if (mod(nr_contador_w,1000) = 0) then
					commit;
				end if;

				end;
			end loop;
			close c_conta_medica;

		nr_contador_w := 0;

		select	max(coalesce(vl_teto_base_calculo,4390.24))
		into STRICT	vl_base_teto_w
		from	tributo_conta_pagar r,
			tributo t
		where	r.cd_tributo = t.cd_tributo
		and	t.ie_tipo_tributo = 'INSS'
		and	coalesce(ie_producao_medica,'A') in ('S','A')
		and	dt_lote_w between coalesce(dt_inicio_vigencia,dt_lote_w) and coalesce(dt_fim_vigencia,clock_timestamp());

		/* Cursor para inserir as ocorrências financeiras */

		open c_ocorrencia_fin;
		loop
		fetch c_ocorrencia_fin into
			vet_ocorrencia_fin;
		EXIT WHEN NOT FOUND; /* apply on c_ocorrencia_fin */
			begin

			select	coalesce(sum(vl_base_calculo),0)
			into STRICT	vl_base_outra_fonte_w
			from	pls_lote_ret_trib_valor a,
				pls_lote_ret_trib_prest b,
				pls_lote_retencao_trib l,
				tributo t
			where	b.nr_sequencia = a.nr_seq_trib_prest
			and	b.nr_seq_lote = l.nr_sequencia
			and	a.cd_tributo = t.cd_tributo
			and	b.cd_pessoa_fisica = cd_pessoa_fisica_w
			and	ie_pago_prev = 'R'
			and	t.ie_tipo_tributo = 'INSS'
			and	trunc(l.dt_mes_referencia,'month') = dt_lote_w;

			if (coalesce(vl_base_outra_fonte_w,0) > 0) then
				vl_base_teto_w := vl_base_teto_w - vl_base_outra_fonte_w;
			end if;

			select	sum(a.vl_remuneracao)
			into STRICT	vl_base_acumulado_w
			from	sefip_tomador_movimento a
			where	a.nr_seq_lote = nr_seq_lote_p
			and	nr_seq_prestador = vet_ocorrencia_fin.nr_seq_prestador;

			vl_base_calculo_w := vet_ocorrencia_fin.vl_liberado;

			if (coalesce(vl_base_acumulado_w,0) + vl_base_calculo_w > vl_base_teto_w) then
				vl_base_calculo_w := vl_base_teto_w - coalesce(vl_base_acumulado_w,0);

				if (vl_base_calculo_w < 0) then
					vl_base_calculo_w := 0;
				end if;
			end if;

			pr_imposto_w	:= 20;

			vl_imposto_w := round((dividir(vl_base_calculo_w * pr_imposto_w,100))::numeric,4);
			--vl_imposto_ww := round(dividir(vl_base_calculo_w * pr_imposto_w,100),4);
			/*
			insert into marcio_log values(vet_ocorrencia_fin.vl_liberado || '|' || vl_base_acumulado_w || '|' || vl_base_calculo_w || '|' || vl_imposto_w);

			insert into marcio_log values(vet_prod_medica.nr_seq_prestador, vl_imposto_w);
			commit;
			*/
			nr_contador_w := nr_contador_w + 1;

			insert into sefip_tomador_movimento(nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				nm_usuario_nrec,
				dt_atualizacao_nrec,
				nr_seq_prestador,
				vl_remuneracao,
				vl_remuneracao_13,
				vl_descontado,
				vl_base_13,
				vl_base_13_movimento,
				nr_seq_tomador,
				cd_cbo_saude,
				cd_cgc_estipulante,
				cd_pf_estipulante,
				nr_seq_lote)
			values (nextval('sefip_tomador_movimento_seq'),
				clock_timestamp(),
				nm_usuario_p,
				nm_usuario_p,
				clock_timestamp(),
				vet_ocorrencia_fin.nr_seq_prestador,
				vet_ocorrencia_fin.vl_liberado,
				0,
				vl_imposto_w,
				0,
				0,
				nr_seq_tomador_padrao_w,
				null,
				cd_cgc_tomador_padrao_w,
				null,
				nr_seq_lote_p);
			if (mod(nr_contador_w,1000) = 0) then
				commit;
			end if;

			end;
		end loop;
		close c_ocorrencia_fin;

	end if;

	end;
end loop;
close c_prod_medica;

commit;

nr_contador_w := 0;

/*Cursor para inserir o prestador padrão*/

open c_pres_padrao;
loop
fetch c_pres_padrao into
	vet_pres_padrao;
EXIT WHEN NOT FOUND; /* apply on c_pres_padrao */
	begin

	nr_contador_w := nr_contador_w + 1;

	insert into sefip_tomador_movimento(nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		nm_usuario_nrec,
		dt_atualizacao_nrec,
		nr_seq_prestador,
		vl_remuneracao,
		vl_remuneracao_13,
		vl_descontado,
		vl_base_13,
		vl_base_13_movimento,
		nr_seq_tomador,
		cd_cbo_saude,
		cd_cgc_estipulante,
		cd_pf_estipulante,
		nr_seq_lote)
	values (nextval('sefip_tomador_movimento_seq'),
		clock_timestamp(),
		nm_usuario_p,
		nm_usuario_p,
		clock_timestamp(),
		nr_seq_prestador_padrao_w,
		0.01,
		0,
		0,
		0,
		0,
		vet_pres_padrao.nr_sequencia,
		null,
		vet_pres_padrao.cd_cgc,
		null,
		nr_seq_lote_p);

	if (mod(nr_contador_w,1000) = 0) then
		commit;
	end if;
	end;
end loop;
close c_pres_padrao;

open c_prestadores_zero;
loop
fetch c_prestadores_zero into
	vet_prestadores_zero;
EXIT WHEN NOT FOUND; /* apply on c_prestadores_zero */
	begin

	update	sefip_tomador_movimento
	set	vl_remuneracao		= vl_remuneracao + vet_prestadores_zero.vl_remuneracao
	where	nr_seq_lote		= nr_seq_lote_p
	and	nr_seq_prestador	= vet_prestadores_zero.nr_seq_prestador
	and	vl_descontado > 0  LIMIT 1;

	delete 	from sefip_tomador_movimento
	where	nr_sequencia = vet_prestadores_zero.nr_sequencia;

	commit;
	end;
end loop;
close c_prestadores_zero;

update	sefip_lote
set	dt_geracao	= clock_timestamp(),
	nm_usuario	= nm_usuario_p
where	nr_sequencia	= nr_seq_lote_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_gerar_lote_sefip_ma ( nr_seq_lote_p bigint, nm_usuario_p text) FROM PUBLIC;

