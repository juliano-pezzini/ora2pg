-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_eis_etapa_tempo (cd_estabelecimento_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) AS $body$
DECLARE

 
dt_inicial_w			timestamp;
dt_final_w			timestamp;
nr_interno_conta_w		bigint;
nr_seq_etapa_w			bigint;
cd_pessoa_fisica_w		varchar(10);
nr_sequencia_w			bigint;
qt_dias_w			bigint;
qt_dias_alta_w			bigint;
ds_etapa_w			varchar(120);
nm_pessoa_fisica_w		varchar(80);
nr_seq_motivo_dev_w		bigint;
cd_convenio_w			integer;
nr_atendimento_w		bigint;
dt_alta_w			timestamp;

c01 CURSOR FOR 
	SELECT 	a.nr_interno_conta, 
		b.nr_atendimento, 
		x.dt_alta dt_alta, 
		a.nr_seq_etapa, 
		a.cd_pessoa_fisica, 
		a.nr_seq_motivo_dev, 
		b.cd_convenio_parametro cd_convenio, 
		obter_dias_entre_datas(dt_etapa, coalesce(dt_fim_etapa,clock_timestamp())) qt_dias, 
		obter_dias_entre_datas(coalesce(x.dt_alta,coalesce(dt_fim_etapa,clock_timestamp())),dt_etapa) qt_dias_alta 
	from 	atendimento_paciente x, 
		conta_paciente_etapa a, 
		conta_paciente b 
	where 	a.nr_interno_conta 	= b.nr_interno_conta 
	and 	x.nr_atendimento	= b.nr_atendimento 
	and	b.cd_estabelecimento 	= cd_estabelecimento_p 
	and	b.dt_mesano_referencia between dt_inicial_w and dt_final_w 
	and 	a.nr_sequencia = (SELECT max(c.nr_sequencia) 
				 from	 atendimento_paciente y, 
					 conta_paciente_etapa c, 
					 conta_paciente d 
				 where c.nr_interno_conta 	= d.nr_interno_conta 
				 and 	 y.nr_atendimento  	= d.nr_atendimento 
				 and	 d.cd_estabelecimento 	= cd_estabelecimento_p 
				 and  d.nr_interno_conta 	= b.nr_interno_conta 
				 and	 d.dt_mesano_referencia between dt_inicial_w and dt_final_w 
				 and 	 a.nr_seq_etapa = c.nr_seq_etapa);


BEGIN 
 
dt_inicial_w		:= trunc(dt_mes_referencia_p, 'month');
dt_final_w		:= fim_dia(last_day(dt_mes_referencia_p));
 
delete	from eis_etapa_tempo 
where	cd_estabelecimento = cd_estabelecimento_p 
and	dt_referencia = dt_inicial_w;
 
open c01;
loop 
fetch 	c01 into 
	nr_interno_conta_w, 
	nr_atendimento_w, 
	dt_alta_w, 
	nr_seq_etapa_w,	 
	cd_pessoa_fisica_w, 
	nr_seq_motivo_dev_w, 
	cd_convenio_w, 
	qt_dias_w, 
	qt_dias_alta_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	begin	 
 
	select	nextval('eis_etapa_tempo_seq') 
	into STRICT	nr_sequencia_w 
	;
	 
	select 	max(substr(nm_pessoa_fisica,1,80)) 
	into STRICT	nm_pessoa_fisica_w 
	from 	pessoa_fisica 
	where 	cd_pessoa_fisica = cd_pessoa_fisica_w;
	 
	select 	max(substr(ds_etapa,1,120)) 
	into STRICT	ds_etapa_w 
	from 	fatur_etapa 
	where 	nr_sequencia = nr_seq_etapa_w;	
	 
	insert into eis_etapa_tempo(nr_sequencia, 
		cd_estabelecimento, 
		dt_referencia, 
		dt_atualizacao, 
		nm_usuario, 
		dt_atualizacao_nrec, 
		nm_usuario_nrec, 
		nr_interno_conta, 
		nr_seq_etapa, 
		cd_pessoa_fisica, 
		qt_dias, 
		nm_pessoa_fisica, 
		ds_etapa, 
		nr_seq_motivo_dev, 
		cd_convenio, 
		nr_atendimento, 
		dt_alta, 
		qt_dias_alta) 
	values (	nr_sequencia_w, 
		cd_estabelecimento_p, 
		dt_inicial_w, 
		clock_timestamp(), 
		nm_usuario_p, 
		clock_timestamp(), 
		nm_usuario_p, 
		nr_interno_conta_w, 
		nr_seq_etapa_w, 
		cd_pessoa_fisica_w, 
		qt_dias_w, 
		nm_pessoa_fisica_w, 
		ds_etapa_w, 
		nr_seq_motivo_dev_w, 
		cd_convenio_w, 
		nr_atendimento_w, 
		dt_alta_w, 
		qt_dias_alta_w);
	end;
end loop;
close c01;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_eis_etapa_tempo (cd_estabelecimento_p bigint, dt_mes_referencia_p timestamp, nm_usuario_p text) FROM PUBLIC;

