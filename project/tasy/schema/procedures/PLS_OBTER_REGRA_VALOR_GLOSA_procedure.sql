-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_obter_regra_valor_glosa ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) AS $body$
DECLARE


nr_seq_prestador_exec_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
dt_item_w			timestamp;
nr_seq_regra_w			bigint;
ie_origem_conta_w		varchar(2);
nr_seq_regra_glosa_proc_w	bigint;
nr_seq_regra_glosa_mat_w	bigint;

C01 CURSOR FOR
	SELECT	nr_sequencia
	from	pls_regra_valor_glosa
	where	coalesce(nr_seq_prestador, nr_seq_prestador_exec_w)	= nr_seq_prestador_exec_w
	and	((coalesce(cd_procedimento,0) = 0) or (cd_procedimento = cd_procedimento_w AND ie_origem_proced = ie_origem_proced_w))
	and	trunc(dt_item_w) between trunc(coalesce(dt_inicio_vigencia, dt_item_w)) and trunc(coalesce(dt_fim_vigencia, dt_item_w))
	and	((coalesce(ie_origem_conta::text, '') = '') or (ie_origem_conta = ie_origem_conta_w ))
	and	cd_estabelecimento = cd_estabelecimento_p
	and	ie_situacao = 'A'
	order by	coalesce(nr_seq_prestador,0),
			coalesce(cd_procedimento,0),
			dt_inicio_vigencia;


BEGIN

if (coalesce(nr_seq_conta_proc_p,0) > 0) then

	begin
	select	a.nr_seq_prestador_exec,
		b.cd_procedimento,
		b.ie_origem_proced,
		coalesce(b.dt_procedimento, a.dt_emissao),
		a.ie_origem_conta,
		coalesce(b.nr_seq_regra_glosa,0)
	into STRICT	nr_seq_prestador_exec_w,
		cd_procedimento_w,
		ie_origem_proced_w,
		dt_item_w,
		ie_origem_conta_w,
		nr_seq_regra_glosa_proc_w
	from	pls_conta a,
		pls_conta_proc b
	where	a.nr_sequencia = b.nr_seq_conta
	and	b.nr_sequencia = nr_seq_conta_proc_p;
	exception
	when others then
		nr_seq_prestador_exec_w := null;
		cd_procedimento_w	:= null;
		ie_origem_proced_w	:= null;
		dt_item_w		:= null;
		ie_origem_conta_w	:= null;
	end;

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;

	if (nr_seq_regra_glosa_proc_w <> coalesce(nr_seq_regra_w,0)) then
		update	pls_conta_proc
		set	nr_seq_regra_glosa	= nr_seq_regra_w
		where	nr_sequencia		= nr_seq_conta_proc_p;
	end if;
elsif (coalesce(nr_seq_conta_mat_p,0) > 0) then

	begin
	select	a.nr_seq_prestador_exec,
		coalesce(b.dt_atendimento, a.dt_emissao),
		a.ie_origem_conta,
		coalesce(b.nr_seq_regra_glosa,0)
	into STRICT	nr_seq_prestador_exec_w,
		dt_item_w,
		ie_origem_conta_w,
		nr_seq_regra_glosa_mat_w
	from	pls_conta a,
		pls_conta_mat b
	where	a.nr_sequencia = b.nr_seq_conta
	and	b.nr_sequencia = nr_seq_conta_mat_p;
	exception
	when others then
		nr_seq_prestador_exec_w	:= null;
		dt_item_w		:= null;
		ie_origem_conta_w	:= null;
	end;

	open C01;
	loop
	fetch C01 into
		nr_seq_regra_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
	end loop;
	close C01;

	if (nr_seq_regra_glosa_mat_w <> coalesce(nr_seq_regra_w,0)) then
		update	pls_conta_mat
		set	nr_seq_regra_glosa	= nr_seq_regra_w
		where	nr_sequencia		= nr_seq_conta_mat_p;
	end if;
end if;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_obter_regra_valor_glosa ( nr_seq_conta_proc_p bigint, nr_seq_conta_mat_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text ) FROM PUBLIC;

