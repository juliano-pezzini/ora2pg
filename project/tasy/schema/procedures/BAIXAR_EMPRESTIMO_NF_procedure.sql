-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE baixar_emprestimo_nf ( nr_sequencia_p bigint, nm_usuario_p text) AS $body$
DECLARE


nr_item_nf_w		integer;
nr_emprestimo_w		bigint;
nr_seq_item_emprestimo_w	integer;
qt_item_estoque_w		double precision;
qt_item_etq_saldo_w 	double precision;
ie_devolucao_parcial_w	boolean := false;
nr_seq_mat_emprest_w	emprestimo_material.nr_sequencia%type;
qt_saldo_w		double precision;
qt_saldo_controle_w		double precision;
qt_baixar_w		double precision;
nr_seq_dev_w		integer;
cd_material_w		integer;
qt_saldo_emp_w		double precision;
nr_seq_lote_fornec_w	bigint;
ie_erro_w			varchar(255);
cd_estabelecimento_w	estabelecimento.cd_estabelecimento%type;
cd_local_estoque_w	local_estoque.cd_local_estoque%type;
cd_lote_fabricacao_w	nota_fiscal_item.cd_lote_fabricacao%type;
dt_validade_w		nota_fiscal_item.dt_validade%type;
qt_total_mat_nf_w		nota_fiscal_item.QT_ITEM_NF%type;
qt_itens_emp_w		bigint;
ie_forma_gerado_empres_w	nota_fiscal_item.ie_forma_gerado_empres%type;
qt_existe_w		bigint;
qt_total_emp_w		bigint;
qt_total_nf_w		bigint;
qt_total_item_nf_w	bigint;
qt_rg_nf_w		bigint;
qt_rg_emp_w		bigint;
ie_estoque_lote_w		varchar(1);
ie_tipo_w			emprestimo.ie_tipo%type;
ie_acao_w		smallint := 2;
nr_seq_marca_w		nota_fiscal_item.nr_seq_marca%type;


C01 CURSOR FOR
SELECT	nr_item_nf,
	nr_emprestimo,
	nr_seq_item_emprestimo,
	qt_item_estoque,
	cd_material,
	nr_seq_lote_fornec,
	cd_local_estoque,
	cd_lote_fabricacao,
	dt_validade,
	coalesce(ie_forma_gerado_empres,'NF'),
	nr_seq_marca,
	(SELECT sum(coalesce(b.QT_ITEM_NF,0)) from nota_fiscal_item b where b.nr_sequencia	= a.nr_sequencia and b.cd_material = a.cd_material group by cd_material ) qt_total_mat_nf,
	(select sum(coalesce(b.QT_ITEM_NF,0)) from nota_fiscal_item b where b.nr_sequencia	= a.nr_sequencia and b.nr_emprestimo = a.nr_emprestimo group by nr_emprestimo ) qt_total_nf,
	(select count(*) from nota_fiscal_item b where b.nr_sequencia	= a.nr_sequencia and b.nr_emprestimo = a.nr_emprestimo group by nr_emprestimo ) qt_rg_nf
from	nota_fiscal_item a
where	a.nr_sequencia	= nr_sequencia_p
and	(a.nr_emprestimo IS NOT NULL AND a.nr_emprestimo::text <> '')
and 	(a.nr_seq_item_emprestimo IS NOT NULL AND a.nr_seq_item_emprestimo::text <> '')
and	coalesce(a.ie_forma_gerado_empres,'NF') in ('DN','NF', 'S');

c02 CURSOR FOR
SELECT	cd_lote_fabricacao,
	dt_validade,
	qt_material,
	nr_seq_lote_fornec,
	nr_seq_marca
from	nota_fiscal_item_lote
where	nr_seq_nota = nr_sequencia_p
and	nr_item_nf = nr_item_nf_w

union all

SELECT	a.cd_lote_fabricacao,
	a.dt_validade,
	a.qt_item_estoque,
	a.nr_seq_lote_fornec,
	nr_seq_marca
from	nota_fiscal_item a
where	a.nr_sequencia = nr_sequencia_p
and	a.nr_item_nf = nr_item_nf_w
and not exists (
	select	1
	from	nota_fiscal_item_lote x
	where	x.nr_seq_nota = a.nr_sequencia
	and	x.nr_item_nf = a.nr_item_nf);

/* OS-935330 - Emprestimo / devolucao Lote */

c03 CURSOR FOR
SELECT x.nr_sequencia,
       x.qt_material,
	  (SELECT sum(coalesce(b.qt_material,0)) 
         from 	emprestimo_material b 
        where b.nr_emprestimo = x.nr_emprestimo 
          and b.qt_material > 0 
          and b.cd_material = x.cd_material group by b.cd_material ) qt_itens_emp,
	  (select count(*) from emprestimo_material where nr_emprestimo = x.nr_emprestimo) qt_rg_emp
 from (select a.nr_sequencia, a.cd_material, a.nr_emprestimo,
	          coalesce(sum(a.qt_material),0) qt_material
         from emprestimo_material a
        where a.nr_emprestimo	= nr_emprestimo_w 
          and a.qt_material > 0 --sequencia sem saldo - completamente devolvida
          and a.cd_material = (select	b.cd_material
                                 from	emprestimo_material b
							    where	b.nr_sequencia	= nr_seq_item_emprestimo_w
								  and	b.nr_emprestimo	= a.nr_emprestimo)
group by a.nr_sequencia, a.cd_material, a.nr_emprestimo
order by a.nr_sequencia) x;


BEGIN

OPEN c01;
LOOP
Fetch c01 into
        nr_item_nf_w,
	nr_emprestimo_w,
	nr_seq_item_emprestimo_w,
	qt_item_estoque_w, 
	cd_material_w,
	nr_seq_lote_fornec_w,
	cd_local_estoque_w,
	cd_lote_fabricacao_w,
	dt_validade_w,
	ie_forma_gerado_empres_w,
	nr_seq_marca_w,
	qt_total_mat_nf_w,
	qt_total_nf_w,
	qt_rg_nf_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin

	select	coalesce(ie_tipo,'E')
	into STRICT	ie_tipo_w
	from	emprestimo
	where 	nr_emprestimo = nr_emprestimo_w;
	
	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	emprestimo
	where	nr_emprestimo = nr_emprestimo_w;

	select	count(*)
	into STRICT	qt_existe_w
	from	nota_fiscal_item_lote
	where	nr_seq_nota = nr_sequencia_p
	and	nr_item_nf = nr_item_nf_w;
	
	select 	coalesce(sum(QT_EMPRESTIMO),0)
	into STRICT	qt_total_emp_w
	from 	emprestimo_material
	where 	nr_emprestimo	= nr_emprestimo_w
	group by nr_emprestimo;
	
	/*Tratamento de duplicidade de baixa - 772111*/

	if	((ie_tipo_w = 'S') or (ie_forma_gerado_empres_w <> 'S')) then
		begin
		
		--qt_item_etq_saldo_w := qt_item_estoque_w ;
		qt_item_etq_saldo_w := qt_total_mat_nf_w;
		
		open C03;
		loop
		fetch C03 into
			nr_seq_mat_emprest_w,
			qt_saldo_w,
			qt_itens_emp_w,
			qt_rg_emp_w;
		EXIT WHEN NOT FOUND; /* apply on C03 */
			begin
			
				
			if (nr_seq_mat_emprest_w = nr_seq_item_emprestimo_w) then
				
				--Se o total do emprestimo for igual ao total da nota fiscal entao e uma baixa completa,caso contrario e parcial.
				if (qt_item_estoque_w < qt_saldo_w AND qt_total_emp_w <> qt_total_nf_w) then				
					qt_item_etq_saldo_w := qt_item_estoque_w;				
				else			
					qt_saldo_controle_w	:= qt_total_mat_nf_w - qt_saldo_w;				
					qt_item_etq_saldo_w 	:=  qt_total_mat_nf_w - qt_saldo_controle_w;				
				end if;
				
				

				if ( qt_item_etq_saldo_w > 0) then --qt_baixar_w > 0 ) then
					begin
					if (qt_existe_w = 0) then
					
						select	coalesce(max(nr_seq_dev),0) + 1
						into STRICT	nr_seq_dev_w
						from	emprestimo_material_dev
						where	nr_sequencia	= nr_seq_mat_emprest_w
						and	nr_emprestimo	= nr_emprestimo_w;
						
						insert into emprestimo_material_dev(
							nr_emprestimo,
							nr_sequencia,
							nr_seq_dev,
							cd_material,
							qt_material,
							dt_atualizacao,
							nm_usuario,
							nr_seq_nota,
							nr_seq_item_nota,
							nr_seq_lote,
							ds_lote_fornec,
							dt_validade,
							nr_seq_marca)
						values (nr_emprestimo_w,
							nr_seq_mat_emprest_w, 
							nr_seq_dev_w,
							cd_material_w,
							qt_item_etq_saldo_w,--qt_baixar_w,
							clock_timestamp(),
							nm_usuario_p,
							nr_sequencia_p,
							nr_item_nf_w,
							nr_seq_lote_fornec_w,
							cd_lote_fabricacao_w,
							dt_validade_w,
							nr_seq_marca_w);
							
						update	emprestimo_material
						set	qt_material = qt_material - qt_item_etq_saldo_w -- qt_baixar_w
						where	nr_emprestimo = nr_emprestimo_w
						and	nr_sequencia = nr_seq_mat_emprest_w;
					
					elsif (qt_existe_w > 0) then
						open C02;
						loop
						fetch C02 into	
							cd_lote_fabricacao_w,
							dt_validade_w,
							qt_baixar_w,
							nr_seq_lote_fornec_w,
							nr_seq_marca_w;
						EXIT WHEN NOT FOUND; /* apply on C02 */
							begin
							
							select (coalesce(max(nr_seq_dev),0) + 1)
							into STRICT	nr_seq_dev_w
							from	emprestimo_material_dev
							where	nr_sequencia	=  nr_seq_mat_emprest_w
							and	nr_emprestimo	= nr_emprestimo_w;
							
							insert into emprestimo_material_dev(
								nr_emprestimo,
								nr_sequencia,
								nr_seq_dev,
								cd_material,
								qt_material,
								dt_atualizacao,
								nm_usuario,
								nr_seq_nota,
								nr_seq_item_nota,
								nr_seq_lote,
								ds_lote_fornec,
								dt_validade,
								nr_seq_marca)
							values ( nr_emprestimo_w ,
								nr_seq_mat_emprest_w,
								nr_seq_dev_w,
								cd_material_w,
								qt_baixar_w, 
								clock_timestamp(),
								nm_usuario_p,
								nr_sequencia_p,
								nr_item_nf_w,
								nr_seq_lote_fornec_w,
								cd_lote_fabricacao_w,
								dt_validade_w,
								nr_seq_marca_w);
									

							end;
						end loop;
						close C02;
							
					
							
							update	emprestimo_material
							set	qt_material = qt_material - qt_item_etq_saldo_w -- qt_baixar_w
							where	nr_emprestimo = nr_emprestimo_w
							and	nr_sequencia = nr_seq_mat_emprest_w; 			
					end if;
					end;
					
				end if;
				
			else
						--Para casos onde o emprestimo possui 2 itens iguais porem lotes diferentes na criacao, porem  no barras ( na devolucao ) e atendido totalmente com apenas 1 lote.

						-- se a quantidade de registros do emprestimo esta difernete da nota fiscal, entao houve um agrupamento por parte do barras,
						
							if (qt_total_emp_w = qt_total_nf_w) and (qt_rg_nf_w <> qt_rg_emp_w)then
															
						-- Se a quantidade de item na nf for apenas 1 e a soma dos itens do emprestimo for maior que 1, vai ser baixado a quantidade do emprestimo para 0, pois a baixa ja foi realizada completamente no outro lote
								if (qt_total_mat_nf_w = qt_itens_emp_w) then
										
								update	emprestimo_material
								set	qt_material = qt_material - qt_saldo_w
								where	nr_emprestimo = nr_emprestimo_w
								and	nr_sequencia = nr_seq_mat_emprest_w; 								
							
								end if;
	
							end if;	
			
			end if;
			
			end;
		end loop;
		close C03;
		
		end;
	end if;

	select	sum(qt_material)
	into STRICT	qt_saldo_emp_w
	from	emprestimo_material
	where	nr_emprestimo = nr_emprestimo_w;
	
	if ( qt_saldo_emp_w = 0) then
		update	emprestimo
		set	ie_situacao = 'B'
		where	nr_emprestimo = nr_emprestimo_w;
	end if;
	
	ie_estoque_lote_w := obter_se_material_estoque_lote(cd_estabelecimento_w,cd_material_w);
	
	if	((ie_forma_gerado_empres_w = 'DN') or (ie_tipo_w = 'S' and ie_forma_gerado_empres_w = 'S')) and (coalesce(nr_seq_lote_fornec_w,0) > 0) and (ie_estoque_lote_w = 'S') then

		if (ie_tipo_w = 'S' and ie_forma_gerado_empres_w = 'S') then
			ie_acao_w := 1;
		end if;

		open c02;
		loop
		fetch c02 into	
			cd_lote_fabricacao_w,
			dt_validade_w,
			qt_baixar_w,
			nr_seq_lote_fornec_w,
			nr_seq_marca_w;
		EXIT WHEN NOT FOUND; /* apply on c02 */
			begin
			ie_erro_w := atualizar_saldo_lote(
					cd_estabelecimento_w, cd_local_estoque_w, cd_material_w, PKG_DATE_UTILS.START_OF(clock_timestamp(),'month'), nr_seq_lote_fornec_w, 0, qt_baixar_w, ie_acao_w, nm_usuario_p, ie_erro_w);
			end;
		end loop;
		close c02;
		
	end if;

	end;
end loop;
close c01;

/*commit; Anderson 09/08/2007 - Nao pode ter commit OS65220*/

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE baixar_emprestimo_nf ( nr_sequencia_p bigint, nm_usuario_p text) FROM PUBLIC;

