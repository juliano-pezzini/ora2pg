-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ageint_checklist_agend_conv (nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_gerado_p INOUT text) AS $body$
DECLARE



cd_convenio_w		integer;	
cd_categoria_w		varchar(10);
cd_plano_w		varchar(10);
ie_existe_regra_w	varchar(1);
				
nr_seq_ageint_check_list_w	bigint;

nr_seq_item_w		bigint;	
nr_seq_grupo_w		ageint_grupo_check_list.nr_sequencia%type;
ie_gerado_w		varchar(1) := 'N';
ie_retorno_w		varchar(1);


C01 CURSOR FOR
	SELECT	a.nr_sequencia,
		b.nr_sequencia
	from	ageint_grupo_check_list a,
		ageint_item_check_list b
	where	a.ie_situacao = 'A'
	and	b.ie_situacao = 'A'
	and	b.nr_seq_grupo_check_list = a.nr_sequencia
	and	a.nr_sequencia in (SELECT	nr_seq_grupo_check_list
				   from		ageint_regra_checklist
				   where	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = ''))
				   and		((ie_tipo_convenio = Obter_Tipo_Convenio(cd_convenio_w)) or (coalesce(ie_tipo_convenio::text, '') = '')) 
				   and		((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = '')) 
				   and		((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = '')) 
				   and (coalesce(cd_procedimento::text, '') = '') 
				   and (coalesce(nr_seq_proc_interno::text, '') = '') 
				   and (coalesce(cd_area_procedimento::text, '') = '') 
				   and (coalesce(cd_especialidade::text, '') = '') 
				   and (coalesce(cd_grupo_proc::text, '') = '')
				   and (coalesce(cd_especialidade_item::text, '') = '')
				   and		coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
				   and		coalesce(ie_apres_agendamento,'N') = 'N');
				
				       

BEGIN

if (nr_seq_ageint_p IS NOT NULL AND nr_seq_ageint_p::text <> '') then

	select	max(cd_convenio),
		max(cd_categoria),
		max(cd_plano)
	into STRICT	cd_convenio_w,
		cd_categoria_w,
		cd_plano_w
	from	agenda_integrada
	where	nr_sequencia = nr_seq_ageint_p;

	select	CASE WHEN count(*)=0 THEN 'N'  ELSE 'S' END
	into STRICT	ie_existe_regra_w
	from	ageint_regra_checklist
	where	((cd_convenio = cd_convenio_w) or (coalesce(cd_convenio::text, '') = '')) 
	and		((ie_tipo_convenio = Obter_Tipo_Convenio(cd_convenio_w)) or (coalesce(ie_tipo_convenio::text, '') = '')) 
	and	((cd_plano_convenio = cd_plano_w) or (coalesce(cd_plano_convenio::text, '') = '')) 
	and	((cd_categoria = cd_categoria_w) or (coalesce(cd_categoria::text, '') = '')) 
	and (coalesce(cd_procedimento::text, '') = '') 
	and (coalesce(nr_seq_proc_interno::text, '') = '') 
	and (coalesce(cd_area_procedimento::text, '') = '') 
	and (coalesce(cd_especialidade::text, '') = '') 
	and (coalesce(cd_grupo_proc::text, '') = '')
	and (coalesce(cd_especialidade_item::text, '') = '')
	and	coalesce(cd_estabelecimento, cd_estabelecimento_p)	= cd_estabelecimento_p
	and	coalesce(ie_apres_agendamento,'N') = 'N';

	if (ie_existe_regra_w = 'S') then
	
		open C01;
		loop
		fetch C01 into	
			nr_seq_grupo_w,
			nr_seq_item_w;
		EXIT WHEN NOT FOUND; /* apply on C01 */
			begin
			
			select 	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
			into STRICT	ie_retorno_w
			from	ageint_check_list_pac_item_v a
			where	nr_seq_ageint = nr_seq_ageint_p
			and	a.nr_seq_grupo = nr_seq_grupo_w;
			
			end;
		end loop;
		close C01;
	
		if (ie_retorno_w = 'S') then
			select	nextval('ageint_check_list_paciente_seq')
			into STRICT	nr_seq_ageint_check_list_w
			;
					
			insert into ageint_check_list_paciente(nr_sequencia,
								nr_seq_ageint,
								dt_atualizacao,
								nm_usuario,
								ie_tipo_check_list)
							values (nr_seq_ageint_check_list_w,
								nr_seq_ageint_p,
								clock_timestamp(),	
								nm_usuario_p,
								'I');
								
			ie_gerado_w	:= 'S';
								
			open C01;
			loop
			fetch C01 into	
				nr_seq_grupo_w,
				nr_seq_item_w;
			EXIT WHEN NOT FOUND; /* apply on C01 */
				begin
				insert into ageint_check_list_pac_item(	nr_sequencia,
									dt_atualizacao,
									nm_usuario,
									dt_atualizacao_nrec,
									nm_usuario_nrec,
									nr_seq_check_list,						
									nr_seq_item_check_list,
									ds_resultado)
								values (nextval('ageint_check_list_pac_item_seq'),
									clock_timestamp(),
									nm_usuario_p,
									clock_timestamp(),
									nm_usuario_p,
									nr_seq_ageint_check_list_w,
									nr_seq_item_w,
									'N');
				
				end;
			end loop;
			close C01;
		end if;
	end if;	
						
								
	commit;

end if;	

ie_gerado_p	:= ie_gerado_w;
	
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ageint_checklist_agend_conv (nr_seq_ageint_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint, ie_gerado_p INOUT text) FROM PUBLIC;

