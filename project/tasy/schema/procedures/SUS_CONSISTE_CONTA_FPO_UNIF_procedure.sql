-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE sus_consiste_conta_fpo_unif ( dt_parametro_p timestamp, nr_interno_conta_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, nr_seq_protocolo_p bigint, ie_opcao_p text, ds_retorno_p INOUT text) AS $body$
DECLARE


qt_fisico_w		bigint 	:= 0;
vl_orcamentario_w	double precision	:= 0;
cd_convenio_w		integer	:= 0;
qt_exec_w		bigint 	:= 0;
vl_exec_w		double precision	:= 0;
vl_info_w		double precision	:= 0;
ds_retorno_w		varchar(2000)	:='S';
ie_tipo_atendimento_w	smallint	:= 0;
qt_regra_w		bigint      := 0;
dt_parametro_w          timestamp;
cd_procedimento_w	procedimento_paciente.cd_procedimento%type;
ie_origem_proced_w	procedimento_paciente.ie_origem_proced%type;
qt_procedimento_w	procedimento_paciente.qt_procedimento%type;
nr_atendimento_w	atendimento_paciente.nr_atendimento%type;
cd_cbo_w		procedimento_paciente.cd_cbo%type;
cd_estabelecimento_w	conta_paciente.cd_estabelecimento%type;
ie_regra_tipo_atend_w	parametro_faturamento.ie_regra_tipo_atend%type;
nr_aih_w		sus_aih_unif.nr_aih%type;
cd_setor_atendimento_w	procedimento_paciente.cd_setor_atendimento%type;
cd_procedencia_w	atendimento_paciente.cd_procedencia%type;
ie_carater_inter_sus_w	atendimento_paciente.ie_carater_inter_sus%type;

cursor01 CURSOR(nr_interno_conta_pp conta_paciente.nr_interno_conta%type) FOR
	SELECT	a.cd_procedimento,
		a.ie_origem_proced,
		a.qt_procedimento,
		coalesce(a.cd_cbo,'0') cd_cbo,
		a.cd_setor_atendimento,
		c.cd_procedencia,
		c.ie_carater_inter_sus
	from	procedimento_paciente a,
		conta_paciente b,
		atendimento_paciente c
	where	a.nr_interno_conta = b.nr_interno_conta
	and	b.nr_atendimento = 	c.nr_atendimento
	and	a.nr_interno_conta	= nr_interno_conta_pp
	and	a.ie_origem_proced	= 7
	and	coalesce(cd_motivo_exc_conta::text, '') = '';

cursor01_w              cursor01%rowtype;


BEGIN

dt_parametro_w  := pkg_date_utils.start_of(dt_parametro_p,'MONTH',0);

begin
select	max(b.cd_estabelecimento),
	coalesce(max(s.nr_aih),0)
into STRICT	cd_estabelecimento_w,
	nr_aih_w
FROM atendimento_paciente a, conta_paciente b
LEFT OUTER JOIN sus_aih_unif s ON (b.nr_interno_conta = s.nr_interno_conta)
WHERE a.nr_atendimento	= b.nr_atendimento  and b.nr_interno_conta	= nr_interno_conta_p;
exception
	when others then
	cd_estabelecimento_w	:= 0;
	nr_aih_w		:= 0;
end;

select	count(*)
into STRICT	qt_regra_w
from	sus_fpo_regra a
where	a.cd_estabelecimento		= cd_estabelecimento_w
and	pkg_date_utils.start_of(a.dt_competencia,'MONTH',0) = dt_parametro_w
and	coalesce(a.ie_situacao,'A') = 'A';

if (qt_regra_w > 0) then
	begin
	/*Obter parametros de Faturamento*/

	select	coalesce(max(ie_regra_tipo_atend),'A')
	into STRICT	ie_regra_tipo_atend_w
	from	parametro_faturamento
	where	cd_estabelecimento = cd_estabelecimento_w;

	ie_tipo_atendimento_w:= ie_tipo_atendimento_p;

	if (coalesce(ie_regra_tipo_atend_w,'A') = 'C') then
		begin
		select	coalesce(max(ie_tipo_atend_conta),ie_tipo_atendimento_p)
		into STRICT	ie_tipo_atendimento_w
		from 	conta_paciente
		where 	nr_interno_conta = nr_interno_conta_p;
		exception
			when others then
			ie_tipo_atendimento_w:= ie_tipo_atendimento_p;
		end;
	end if;

	for  	cursor01_w in cursor01(nr_interno_conta_p) loop
                begin
                cd_procedimento_w       := cursor01_w.cd_procedimento;
                ie_origem_proced_w      := cursor01_w.ie_origem_proced;
                qt_procedimento_w       := cursor01_w.qt_procedimento;
                cd_cbo_w                := cursor01_w.cd_cbo;
                cd_setor_atendimento_w  := cursor01_w.cd_setor_atendimento;
                cd_procedencia_w        := cursor01_w.cd_procedencia;
                ie_carater_inter_sus_w  := cursor01_w.ie_carater_inter_sus;
                /*Obter Atendimento da Conta*/

		nr_atendimento_w	:= obter_atendimento_conta(nr_interno_conta_p);
		/*obter convenio atendimento*/

		cd_convenio_w		:= obter_convenio_atendimento(nr_atendimento_w);
		/*teto maximo quantidade*/

		qt_fisico_w		:= sus_obter_fpo_unif(	cd_procedimento_w, ie_origem_proced_w,
								ie_tipo_atendimento_w,dt_parametro_p,
								cd_cbo_w, 1,cd_estabelecimento_p,nr_aih_w,
								cd_setor_atendimento_w, coalesce(cd_procedencia_w,0),
								ie_carater_inter_sus_w);

		/*teto maximo valor*/

		vl_orcamentario_w	:=  sus_obter_fpo_unif(	cd_procedimento_w, ie_origem_proced_w,
								ie_tipo_atendimento_w,dt_parametro_p,
								cd_cbo_w, 2,cd_estabelecimento_p,nr_aih_w,
								cd_setor_atendimento_w, coalesce(cd_procedencia_w,0),
								ie_carater_inter_sus_w);

		/*valor procedimento*/

		vl_info_w		:= coalesce(sus_obter_preco_proced(	cd_estabelecimento_p,dt_parametro_p,
									ie_tipo_atendimento_w,cd_procedimento_w,
									ie_origem_proced_w,2),0);

                if (ie_opcao_p = 'S') then
                        begin
                        /*quantidade e valor ja executado do procedimento para a data de vigencia*/

			select	coalesce(sum(a.qt_procedimento),0),
				coalesce(sum(a.vl_procedimento),0)
			into STRICT	qt_exec_w,
				vl_exec_w
			from	procedimento_paciente a,
				conta_paciente b,
				protocolo_convenio c
			where	a.nr_interno_conta      = b.nr_interno_conta
			and	b.nr_seq_protocolo	= c.nr_seq_protocolo
			and	a.cd_procedimento	= cd_procedimento_w
			and	a.ie_origem_proced	= ie_origem_proced_w
			and	pkg_date_utils.start_of(c.dt_mesano_referencia, 'MONTH',0) = dt_parametro_w
			and	a.cd_convenio		= cd_convenio_w
			and	coalesce(cd_motivo_exc_conta::text, '') = '';

			qt_exec_w	:= coalesce(qt_exec_w,0) + coalesce(qt_procedimento_w,0);
			vl_exec_w	:= coalesce(vl_exec_w,0) + coalesce((vl_info_w * qt_procedimento_w),0);
                        end;
		elsif (ie_opcao_p = 'P') then
                        begin
			/*quantidade e valor ja executado do procedimento para a data de vigencia*/

			select	coalesce(sum(a.qt_procedimento),0),
				coalesce(sum(a.vl_procedimento),0)
			into STRICT	qt_exec_w,
				vl_exec_w
			from	conta_paciente b,
				procedimento_paciente a
			where	a.cd_convenio           = cd_convenio_w
			and	b.nr_seq_protocolo      = nr_seq_protocolo_p
			and	a.nr_interno_conta      = b.nr_interno_conta
			and	coalesce(a.cd_motivo_exc_conta::text, '') = '';

			qt_exec_w	:= coalesce(qt_exec_w,0) + coalesce(qt_procedimento_w,0);
			vl_exec_w	:= coalesce(vl_exec_w,0) + coalesce((vl_info_w * qt_procedimento_w),0);
                        end;
		end if;

		if 	((qt_exec_w	> qt_fisico_w) or (vl_exec_w	> vl_orcamentario_w)) then
			ds_retorno_w	:= 'N';
		end if;
		--end if;
                qt_exec_w		:= 0;
                vl_exec_w		:= 0;
                qt_fisico_w		:= 0;
                vl_orcamentario_w	:= 0;
                vl_info_w		:= 0;
                qt_procedimento_w	:= 0;

                end;
	end loop;

	end;
end if;

ds_retorno_p	:= ds_retorno_w;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE sus_consiste_conta_fpo_unif ( dt_parametro_p timestamp, nr_interno_conta_p bigint, ie_tipo_atendimento_p bigint, cd_estabelecimento_p bigint, nr_seq_protocolo_p bigint, ie_opcao_p text, ds_retorno_p INOUT text) FROM PUBLIC;

