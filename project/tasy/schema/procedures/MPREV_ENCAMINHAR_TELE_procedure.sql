-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE mprev_encaminhar_tele ( nr_seq_part_ciclo_item_p bigint, cd_profissional_dest_p bigint, cd_profissional_logado_p bigint, nr_seq_funcao_dest_p bigint, ds_motivo_repasse_p text, nm_usuario_p text) AS $body$
DECLARE

 
nr_seq_mprev_tele_repasse_w	bigint;
nm_prof_resp_w			varchar(255);
nm_paciente_w			varchar(255);
nm_usuario_destino_w		varchar(15);
nr_seq_classif_w		bigint;					
qt_registros_w			bigint;
ds_titulo_w 			varchar(255);
ds_comunicado_linha1_w 		varchar(1000);
ds_comunicado_linha2_w 		varchar(1000);
ds_comunicado_linha3_w 		varchar(1000);

C01 CURSOR(	nr_seq_part_ciclo_item_pc	mprev_partic_ciclo_item.nr_sequencia%type, 
		cd_profissional_logado_pc	pessoa_fisica.cd_pessoa_fisica%type) FOR 
	SELECT	a.nr_sequencia 
	from	mprev_part_cic_item_resp a 
	where	a.nr_seq_partic_ciclo_item = nr_seq_part_ciclo_item_pc 
	and	a.cd_profissional = cd_profissional_logado_pc 
	and	coalesce(a.dt_finalizacao::text, '') = '' 
	order by a.nr_sequencia;
	
C02 CURSOR(	nr_seq_funcao_dest_pc	mprev_funcao_colaborador.nr_sequencia%type) FOR 
 
	SELECT	distinct(a.cd_pessoa_fisica) cd_profissional 
	from 	mprev_equipe_profissional a, 
		mprev_funcao_colaborador b 
	where	a.nr_seq_funcao = b.nr_sequencia 
	and	b.nr_sequencia = nr_seq_funcao_dest_pc 
	and	a.dt_inclusao <= clock_timestamp() 
	and (coalesce(a.dt_exclusao::text, '') = '' or a.dt_exclusao > clock_timestamp());
	
BEGIN 
 
if (nr_seq_part_ciclo_item_p IS NOT NULL AND nr_seq_part_ciclo_item_p::text <> '') and 
	((cd_profissional_dest_p IS NOT NULL AND cd_profissional_dest_p::text <> '') or (nr_seq_funcao_dest_p IS NOT NULL AND nr_seq_funcao_dest_p::text <> '')) then 
	 
	select	count(1) 
	into STRICT	qt_registros_w 
	from	mprev_part_cic_item_resp a 
	where	a.nr_seq_partic_ciclo_item = nr_seq_part_ciclo_item_p 
	and	a.cd_profissional = cd_profissional_logado_p 
	and	coalesce(a.dt_finalizacao::text, '') = '';
	 
	if (qt_registros_w > 0) then 
		for r_C01 in C01( nr_seq_part_ciclo_item_p, cd_profissional_logado_p ) loop 
			begin 
				update	mprev_part_cic_item_resp 
				set	dt_finalizacao 	= clock_timestamp(), 
					dt_atualizacao 	= clock_timestamp(), 
					nm_usuario	= nm_usuario_p 
				where	nr_sequencia = r_C01.nr_sequencia;
			end;
		end loop;
	end if;
 
	/*select	count(1) 
	into	qt_registros_w 
	from	mprev_part_cic_item_resp a 
	where	a.nr_seq_partic_ciclo_item = nr_seq_part_ciclo_item_p 
	and	a.cd_profissional = cd_profissional_dest_p 
	and	a.dt_finalizacao is null;	 
	Se o profissional já for o responsável pelo ciclo não insere novamente*/
 
	 
	insert	into	mprev_part_cic_item_resp(nr_sequencia,          
			dt_atualizacao,         
			nm_usuario,           
			dt_atualizacao_nrec, 
			nm_usuario_nrec,        
			nr_seq_partic_ciclo_item, 
			cd_profissional,      
			nr_seq_funcao_colab, 
			dt_finalizacao,     
			ds_motivo_repasse) 
	values (nextval('mprev_part_cic_item_resp_seq'), 
			clock_timestamp(), 
			nm_usuario_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			nr_seq_part_ciclo_item_p, 
			cd_profissional_dest_p, 
			nr_seq_funcao_dest_p, 
			null, 
			ds_motivo_repasse_p);
	 
	/*Envia a mensagem para os profissionais responsáveis*/
 
	select	substr(obter_pessoa_fisica_usuario(nm_usuario_p, null),1,100) 
	into STRICT	nm_prof_resp_w 
	;
 
	select	substr(obter_nome_pf(cd_pessoa_fisica),1,255) 
	into STRICT	nm_paciente_w 
	from	mprev_partic_ciclo_item_v 
	where	nr_sequencia = nr_seq_part_ciclo_item_p;
	 
	select	obter_classif_comunic('F') 
	into STRICT	nr_seq_classif_w 
	;
	 
	/*Envia uma mensagem apenas para o profissional que recebe o repasse*/
 
	if (cd_profissional_dest_p IS NOT NULL AND cd_profissional_dest_p::text <> '') then 
		select	substr(obter_usuario_pf(cd_profissional_dest_p),1,15) 
		into STRICT	nm_usuario_destino_w 
		;
		 
		ds_titulo_w := wheb_mensagem_pck.get_texto(338366);
		ds_comunicado_linha1_w := wheb_mensagem_pck.get_texto(338369, 'nm_prof_resp=' || nm_prof_resp_w ||';nm_paciente='|| nm_paciente_w);
		ds_comunicado_linha2_w := wheb_mensagem_pck.get_texto(338390, 'ds_motivo='||ds_motivo_repasse_p);
		ds_comunicado_linha3_w := wheb_mensagem_pck.get_texto(338393);
		 
		CALL gerar_comunic_padrao(	clock_timestamp(), 
					--'Repasse de telemonitoramento', 
					ds_titulo_w, 
					--O profissional #@nm_prof_resp#@ encaminhou o telemonitoramento do paciente #@nm_paciente#@ para a sua função. 
					ds_comunicado_linha1_w||chr(13)||chr(10)|| 
					--Motivo:#@ds_motivo#@ 
					ds_comunicado_linha2_w||chr(13)||chr(10)|| 
					' '||chr(13)||chr(10)|| 
					--Para ligar para o mesmo, acesse a função PrevMed - Telemonitoramento, que o mesmo aparecerá em sua lista. 
					ds_comunicado_linha3_w, 
					nm_usuario_p, 
					'N', 
					nm_usuario_destino_w, 
					'N', 
					nr_seq_classif_w, 
					'', 
					'', 
					'', 
					clock_timestamp(), 
					'', 
					'');
	/*Envia uma mensagem para os profissionais que que possuim a função repassada*/
	 
	elsif (nr_seq_funcao_dest_p IS NOT NULL AND nr_seq_funcao_dest_p::text <> '') then 
		for r_C02 in C02( nr_seq_funcao_dest_p ) loop 
			begin 
				ds_titulo_w := wheb_mensagem_pck.get_texto(338366);
				ds_comunicado_linha1_w := wheb_mensagem_pck.get_texto(338369, 'nm_prof_resp=' || nm_prof_resp_w ||';nm_paciente='|| nm_paciente_w);
				ds_comunicado_linha2_w := wheb_mensagem_pck.get_texto(338390, 'ds_motivo='||ds_motivo_repasse_p);
				ds_comunicado_linha3_w := wheb_mensagem_pck.get_texto(338391);
				 
				select	substr(obter_usuario_pf(r_C02.cd_profissional),1,15) 
				into STRICT	nm_usuario_destino_w 
				;
				 
				CALL gerar_comunic_padrao(	clock_timestamp(), 
							--'Repasse de telemonitoramento', 
							ds_titulo_w, 
							--O profissional #@nm_prof_resp#@ encaminhou o telemonitoramento do paciente #@nm_paciente#@ para a sua função. 
							ds_comunicado_linha1_w||chr(13)||chr(10)|| 
							--Motivo:#@ds_motivo#@ 
							ds_comunicado_linha2_w||chr(13)||chr(10)|| 
							' '||chr(13)||chr(10)|| 
							--Para ligar para o mesmo, acesse a função PrevMed - Telemonitoramento, que o mesmo aparecerá para sua função. 
							ds_comunicado_linha3_w, 
							nm_usuario_p, 
							'N', 
							nm_usuario_destino_w, 
							'N', 
							nr_seq_classif_w, 
							'', 
							'', 
							'', 
							clock_timestamp(), 
							'', 
							'');
			end;
		end loop;
	end if;
 
end if;		
		 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE mprev_encaminhar_tele ( nr_seq_part_ciclo_item_p bigint, cd_profissional_dest_p bigint, cd_profissional_logado_p bigint, nr_seq_funcao_dest_p bigint, ds_motivo_repasse_p text, nm_usuario_p text) FROM PUBLIC;

