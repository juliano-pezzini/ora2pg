-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_incluir_sca_cont_exist ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE


nr_seq_benef_w			bigint;
nr_seq_plano_w			bigint;
nr_seq_tabela_w			bigint;
nr_seq_vendedor_canal_w		bigint;
nr_seq_vendedor_pf_w		bigint;
qt_idade_limite_w		bigint;
dt_inicio_vigencia_w		timestamp;
nr_contrato_exist_w		bigint;
cd_beneficiario_prop_w		bigint;
nr_seq_benef_contrato_w		bigint;
nr_seq_contrato_w		bigint;
nr_seq_beneficiario_w		bigint;
nr_seq_vinculo_sca_novo_w	bigint;
dt_reajuste_sca_w		timestamp;
dt_contrato_w			timestamp;
ie_lancamento_mensalidade_w	varchar(10);
ie_geracao_valores_w		varchar(10);
nr_seq_plano_duplicado_w   	varchar(10);
nm_beneficiario_w		varchar(200);
liberar_sca_auto_w		varchar(1);

C01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_beneficiario,
		nr_seq_beneficiario,
		substr(obter_nome_pf(cd_beneficiario),1,200)
	from	pls_proposta_beneficiario
	where	nr_seq_proposta = nr_seq_proposta_p;

C02 CURSOR FOR
	SELECT	nr_seq_plano,
		nr_seq_tabela,
		nr_seq_vendedor_canal,
		nr_seq_vendedor_pf,
		qt_idade_limite,
		dt_inicio_vigencia
	from	pls_sca_vinculo
	where	nr_seq_benef_proposta = nr_seq_benef_w;


BEGIN

liberar_sca_auto_w	:= coalesce(obter_valor_param_usuario(1232, 119, Obter_Perfil_Ativo, nm_usuario_p, 0), 'N');

select	nr_seq_contrato
into STRICT	nr_contrato_exist_w
from	pls_proposta_adesao
where	nr_sequencia	= nr_seq_proposta_p;

select	nr_sequencia,
	ie_geracao_valores
into STRICT	nr_seq_contrato_w,
	ie_geracao_valores_w
from	pls_contrato
where	nr_contrato	= nr_contrato_exist_w;

open C01;
loop
fetch C01 into
	nr_seq_benef_w,
	cd_beneficiario_prop_w,
	nr_seq_beneficiario_w,
	nm_beneficiario_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	if (coalesce(nr_seq_beneficiario_w::text, '') = '') then
		select	max(nr_sequencia)
		into STRICT	nr_seq_benef_contrato_w
		from	pls_segurado
		where	cd_pessoa_fisica	= cd_beneficiario_prop_w
		and	nr_seq_contrato		= nr_seq_contrato_w;
		
		if (coalesce(nr_seq_benef_contrato_w::text, '') = '') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(358648,'NM_BENEFICIARIO='||nm_beneficiario_w||';NR_CONTRATO='||nr_contrato_exist_w);
		end if;
	else
		nr_seq_benef_contrato_w	:= nr_seq_beneficiario_w;
	end if;
	
	open C02;
	loop
	fetch C02 into
		nr_seq_plano_w,
		nr_seq_tabela_w,
		nr_seq_vendedor_canal_w,
		nr_seq_vendedor_pf_w,
		qt_idade_limite_w,
		dt_inicio_vigencia_w;
	EXIT WHEN NOT FOUND; /* apply on C02 */
		begin
		
		select 	max(nr_seq_plano)
		into STRICT 	nr_seq_plano_duplicado_w
		from	pls_sca_vinculo x
		where	x.nr_seq_segurado = nr_seq_benef_contrato_w
		and 	x.nr_seq_plano = nr_seq_plano_w
		and 	coalesce(x.dt_fim_vigencia::text, '') = '';
		
		if (nr_seq_plano_duplicado_w IS NOT NULL AND nr_seq_plano_duplicado_w::text <> '') then		
         CALL wheb_mensagem_pck.exibir_mensagem_abort(1104297,'NR_SEQ_SCA='|| nr_seq_plano_duplicado_w || ';BENEFICIARIO=' || nr_seq_benef_w || ' - ' || nm_beneficiario_w);
		end if;
		
		select	dt_reajuste,
			ie_lancamento_mensalidade
		into STRICT	dt_reajuste_sca_w,
			ie_lancamento_mensalidade_w
		from	pls_plano
		where	nr_sequencia = nr_seq_plano_w;
    		
		select	nextval('pls_sca_vinculo_seq')
		into STRICT	nr_seq_vinculo_sca_novo_w
		;
		
		insert into pls_sca_vinculo(	nr_sequencia,dt_atualizacao,dt_atualizacao_nrec,nm_usuario, nm_usuario_nrec,
				nr_seq_plano, nr_seq_tabela,nr_seq_vendedor_canal,nr_seq_vendedor_pf, qt_idade_limite,
				dt_inicio_vigencia,nr_seq_segurado,dt_reajuste,ie_lancamento_mensalidade,ie_geracao_valores,
				ie_embutido_produto, nr_seq_benef_proposta)
		values (	nr_seq_vinculo_sca_novo_w, clock_timestamp(), clock_timestamp(), nm_usuario_p, nm_usuario_p,
				nr_seq_plano_w, nr_seq_tabela_w,nr_seq_vendedor_canal_w,nr_seq_vendedor_pf_w,qt_idade_limite_w,
				dt_inicio_vigencia_w, nr_seq_benef_contrato_w,dt_reajuste_sca_w,ie_lancamento_mensalidade_w,ie_geracao_valores_w,
				'N',nr_seq_benef_w);
		
		CALL pls_duplicar_tabela_preco_sca(nr_seq_contrato_w,nr_seq_vinculo_sca_novo_w,nr_seq_tabela_w,'N',nm_usuario_p);
		
		if (liberar_sca_auto_w = 'S') then
			CALL pls_liberar_vinculo_sca(null, null, nr_seq_vinculo_sca_novo_w, 'L', 'N', 'N', nm_usuario_p, cd_estabelecimento_p);
		end if;
		end;
	end loop;
	close C02;
	
	end;
end loop;
close C01;

update	pls_proposta_adesao
set	ie_status = 'T'
where	nr_sequencia = nr_seq_proposta_p;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_incluir_sca_cont_exist ( nr_seq_proposta_p bigint, nm_usuario_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

