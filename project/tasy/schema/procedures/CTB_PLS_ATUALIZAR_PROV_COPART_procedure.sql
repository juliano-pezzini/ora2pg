-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE ctb_pls_atualizar_prov_copart ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_copartic_p pls_conta_coparticipacao.nr_sequencia%type, nr_seq_atualizacao_p pls_movimento_contabil.nr_seq_atualizacao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_movimento_p INOUT integer, nr_seq_copartic_contab_p pls_conta_copartic_contab.nr_sequencia%type default null) AS $body$
DECLARE

						
/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade:
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta:
[ X ]  Objetos do dicionario [  ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
-------------------------------------------------------------------------------------------------------------------

Referencias:
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
cd_classificacao_credito_w	varchar(255);
cd_classificacao_debito_w	varchar(255);
cd_conta_credito_w		varchar(20);
cd_conta_debito_w		varchar(20);
ie_preco_w			varchar(2);
ie_tipo_segurado_w		varchar(2);
ie_regulamentacao_w		varchar(2);
ie_tipo_contratacao_w		varchar(2);
ie_segmentacao_w		varchar(2);
nr_seq_plano_w			pls_plano.nr_sequencia%type;
dt_referencia_w			timestamp;
nr_seq_esquema_w		bigint;
nr_seq_esquema_ww		bigint;
cd_historico_padrao_w		bigint;
cd_historico_padrao_ww		bigint;
ds_erro_w			varchar(4000);
nr_seq_contrato_w		bigint;
nr_seq_conta_w			bigint;
nr_seq_conta_copartic_w		bigint;
cd_procedimento_w		bigint;
ie_origem_proced_w		bigint;
nr_seq_grupo_ans_w		bigint;
nr_seq_grupo_ans_ww		bigint;
nr_seq_grupo_superior_w		bigint;
ie_classif_grupo_w		varchar(5);
ie_classif_grupo_ww		varchar(5);
ie_tipo_relacao_w		varchar(2);
nr_seq_tipo_atendimento_w	bigint;
cd_medico_executor_w		varchar(10);
ie_regime_internacao_w		varchar(1);
nr_seq_conselho_w		bigint;
ie_tipo_guia_w			varchar(2);
ie_ato_cooperado_w		varchar(5);
ie_tipo_contrato_w		varchar(2);
ie_codificacao_w		varchar(2);
vl_fixo_w			varchar(30);
cd_conta_contabil_w		varchar(20);
ie_debito_credito_w		varchar(1);
ie_tipo_outorgante_w		varchar(3);
ie_tipo_operacao_w		varchar(3);
ds_mascara_w			varchar(30);
ie_proc_mat_w			varchar(1);
ie_tipo_vinculo_operadora_w	varchar(2);
ie_tipo_protocolo_w		varchar(3);
ie_estorno_custo_w		varchar(1);
cd_classificacao_item_w		varchar(30);
ie_tipo_despesa_w		pls_conta_mat.ie_tipo_despesa%type;
qt_movimento_w			bigint	:= 0;
nr_seq_tipo_prestador_w		pls_prestador.nr_seq_tipo_prestador%type;
ie_prestador_codificacao_w	pls_esquema_contabil.ie_prestador_codificacao%type;
nr_seq_tipo_prest_regra_w	pls_esquema_contabil.nr_seq_tipo_prestador%type;
ie_tipo_relacao_regra_w		pls_esquema_contabil.ie_tipo_relacao%type;
nr_seq_prestador_w		pls_prestador.nr_sequencia%type;
nr_id_w				oid;
dt_mesano_ref_w			pls_lote_faturamento.dt_mesano_referencia%type;
ie_tipo_repasse_w		pls_esquema_contabil.ie_tipo_repasse%type;
ie_tipo_compartilhamento_w	pls_esquema_contabil.ie_tipo_compartilhamento%type;
nr_seq_segurado_w		pls_segurado.nr_sequencia%type;
nr_seq_tipo_conta_w		pls_conta.nr_seq_tipo_conta%type;
ie_benef_remido_w		pls_esquema_contabil.ie_benef_remido%type;
nr_seq_congenere_w		pls_protocolo_conta.nr_seq_congenere%type;
dt_ref_repasse_w		timestamp;
dt_repasse_w			timestamp;
dt_fim_repasse_w		timestamp;
nr_seq_mot_reembolso_w		pls_protocolo_conta.nr_seq_mot_reembolso%type;
ie_data_tipo_segurado_w		pls_parametros.ie_data_tipo_segurado%type;

c_copartic CURSOR FOR
	SELECT	b.nr_sequencia,
		e.ie_tipo_contratacao,
		e.ie_preco,
		e.ie_segmentacao,
		e.ie_regulamentacao,
		coalesce(c.ie_tipo_segurado,d.ie_tipo_segurado) ie_tipo_segurado,
		f.dt_mes_competencia,
		CASE WHEN ie_data_tipo_segurado_w='P' THEN  f.dt_mes_competencia  ELSE (coalesce((	SELECT	p.dt_procedimento											from    pls_conta_proc p											where   p.nr_sequencia	= a.nr_seq_conta_proc											
union
											select  m.dt_atendimento											from    pls_conta_mat m											where   m.nr_sequencia	= a.nr_seq_conta_mat), f.dt_mes_competencia)) END  dt_ref_repasse,				
		d.nr_seq_contrato,
		c.nr_sequencia nr_seq_conta,
		e.ie_tipo_operacao,
		e.nr_sequencia nr_seq_plano_seg,
		null cd_procedimento,
		null ie_origem_proced,
		(	select	r.ie_ato_cooperado
			from	pls_conta_medica_resumo r
			where	r.nr_sequencia = b.nr_seq_conta_resumo
			and	r.nr_seq_conta = c.nr_sequencia
			
union

			select	p.ie_ato_cooperado
			from	pls_conta_proc p
			where	p.nr_sequencia = a.nr_seq_conta_proc
			and	coalesce(b.nr_seq_conta_resumo,0) = 0
			
union

			select	m.ie_ato_cooperado
			from	pls_conta_mat m
			where	m.nr_sequencia = a.nr_seq_conta_mat
			and	coalesce(b.nr_seq_conta_resumo,0) = 0
		) ie_ato_cooperado,
		c.ie_tipo_guia,
		c.nr_seq_tipo_atendimento,
		c.cd_medico_executor,
		c.ie_regime_internacao,
		d.ie_tipo_vinculo_operadora,
		a.ie_estorno_custo,
		coalesce((	select	r.nr_seq_grupo_ans
			from	pls_conta_medica_resumo r
			where	r.nr_sequencia = b.nr_seq_conta_resumo
			and	r.nr_seq_conta = c.nr_sequencia),(	select	p.nr_seq_grupo_ans
									from	pls_conta_proc p
									where	p.nr_sequencia = a.nr_seq_conta_proc
									
union

									select	m.nr_seq_grupo_ans
									from	pls_conta_mat m
									where	m.nr_sequencia = a.nr_seq_conta_mat)) nr_seq_grupo_ans,
		(	select	r.ie_tipo_despesa
			from	pls_conta_medica_resumo r
			where	r.nr_sequencia = b.nr_seq_conta_resumo
			and	r.nr_seq_conta = c.nr_sequencia
			
union

			select	p.ie_tipo_despesa
			from	pls_conta_proc p
			where	p.nr_sequencia = a.nr_seq_conta_proc
			and	coalesce(b.nr_seq_conta_resumo,0) = 0
			
union

			select	m.ie_tipo_despesa
			from	pls_conta_mat m
			where	m.nr_sequencia = a.nr_seq_conta_mat
			and	coalesce(b.nr_seq_conta_resumo,0) = 0
		) ie_tipo_despesa,
                (	select	'P'
			from	pls_conta_proc p
			where	p.nr_sequencia = a.nr_seq_conta_proc
			
union

			select	'M'
			from	pls_conta_mat m
			where	m.nr_sequencia = a.nr_seq_conta_mat
		) ie_proc_mat,
		CASE WHEN ie_prestador_codificacao_w='E' THEN c.nr_seq_prestador_exec WHEN ie_prestador_codificacao_w='S' THEN c.nr_seq_prestador WHEN ie_prestador_codificacao_w='P' THEN (	select	r.nr_seq_prestador_pgto														from	pls_conta_medica_resumo r														where	r.nr_sequencia = b.nr_seq_conta_resumo														and	r.nr_seq_conta = c.nr_sequencia)  ELSE f.nr_seq_prestador END  nr_seq_prestador,
		d.nr_sequencia nr_seq_segurado,
		b.oid nr_id,
		c.nr_seq_tipo_conta,
		pls_obter_se_benef_remido(d.nr_sequencia,f.dt_mes_competencia) ie_benef_remido,
		f.nr_seq_congenere,
		f.nr_seq_mot_reembolso
	from	pls_conta_coparticipacao	a,
		pls_conta_copartic_contab	b,
		pls_conta			c,
		pls_segurado			d,
		pls_plano			e,
		pls_protocolo_conta		f
	where	a.nr_sequencia	= b.nr_seq_conta_copartic
	and	a.nr_seq_conta  = c.nr_sequencia
	and	d.nr_sequencia	= c.nr_seq_segurado
	and	e.nr_sequencia	= c.nr_seq_plano
	and	f.nr_sequencia	= c.nr_seq_protocolo
	and	c.nr_sequencia	= nr_seq_conta_p
	and	(c.nr_seq_plano IS NOT NULL AND c.nr_seq_plano::text <> '')
	and (f.ie_tipo_protocolo	= 'R'
	or	a.ie_status_coparticipacao 	<> 'N')
	and	((a.nr_sequencia = nr_seq_conta_copartic_p) or (coalesce(nr_seq_conta_copartic_p::text, '') = ''))
	and	((b.nr_sequencia = nr_seq_copartic_contab_p) or (coalesce(nr_seq_copartic_contab_p::text, '') = ''))
	and 	a.ie_status_mensalidade <> 'C';

c_esquema CURSOR FOR
	SELECT	a.nr_sequencia,
		a.cd_historico_padrao,
		a.ie_prestador_codificacao,
		a.nr_seq_tipo_prestador,
		a.ie_tipo_relacao
	from	pls_esquema_contabil	a
	where	a.ie_tipo_regra		= 'PC'
	and	a.cd_estabelecimento	= cd_estabelecimento_p
	and	dt_referencia_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_referencia_w)
	and	((exists (SELECT	1
				from	pls_grupo_seg_item	l,
					pls_grupo_segmentacao	k
				where	l.nr_seq_grupo		= k.nr_sequencia
				and	k.nr_sequencia		= a.nr_seq_grupo_segmentacao
				and	l.ie_segmentacao	= ie_segmentacao_w)) or (coalesce(a.nr_seq_grupo_segmentacao::text, '') = ''))
	and	((a.nr_seq_plano = nr_seq_plano_w) or (coalesce(a.nr_seq_plano::text, '') = ''))
	and	((a.ie_tipo_outorgante = ie_tipo_outorgante_w) or (coalesce(a.ie_tipo_outorgante::text, '') = ''))
	and	((a.ie_tipo_segurado = ie_tipo_segurado_w) or (coalesce(a.ie_tipo_segurado::text, '') = ''))
	and	((a.ie_tipo_repasse = ie_tipo_repasse_w) or (coalesce(a.ie_tipo_repasse::text, '') = ''))
	and	((a.ie_tipo_compartilhamento = ie_tipo_compartilhamento_w) or (coalesce(a.ie_tipo_compartilhamento::text, '') = ''))
	and	((a.ie_tipo_plano = ie_tipo_operacao_w) or (coalesce(a.ie_tipo_plano::text, '') = ''))
	and	((a.ie_tipo_vinculo_operadora = ie_tipo_vinculo_operadora_w) or (coalesce(a.ie_tipo_vinculo_operadora::text, '') = ''))
	and	((a.nr_seq_contrato = nr_seq_contrato_w) or (coalesce(a.nr_seq_contrato::text, '') = ''))
	and	((a.ie_tipo_protocolo = ie_tipo_protocolo_w) or (coalesce(a.ie_tipo_protocolo::text, '') = ''))
	and	((a.ie_tipo_contratacao = ie_tipo_contratacao_w) or (coalesce(a.ie_tipo_contratacao::text, '') = ''))
	and	((a.nr_seq_tipo_conta = nr_seq_tipo_conta_w) or (coalesce(a.nr_seq_tipo_conta::text, '') = ''))
	and	((a.ie_benef_remido = ie_benef_remido_w) or (coalesce(a.ie_benef_remido::text, '') = ''))
	and	((a.nr_seq_mot_reembolso = nr_seq_mot_reembolso_w) or (coalesce(a.nr_seq_mot_reembolso::text, '') = ''))
	order by
		coalesce(a.ie_tipo_relacao, ' '),
		coalesce(a.nr_seq_tipo_prestador, 0),
		coalesce(a.ie_tipo_compartilhamento,0),
		coalesce(a.ie_tipo_repasse,' '),
		coalesce(a.ie_tipo_segurado,' '),
		coalesce(a.nr_seq_contrato,0),
		coalesce(a.ie_tipo_plano,' '),
		coalesce(a.nr_seq_plano,0),
		coalesce(a.ie_tipo_vinculo_operadora,0),
		coalesce(a.ie_tipo_outorgante,' '),
		coalesce(a.ie_tipo_contratacao,' '),
		coalesce(a.nr_seq_tipo_conta,0),
		coalesce(a.ie_benef_remido,' '),
		coalesce(a.nr_seq_grupo_segmentacao,0),
		coalesce(a.ie_tipo_protocolo,' '),
		coalesce(a.nr_seq_mot_reembolso, 0),
		coalesce(a.dt_inicio_vigencia,clock_timestamp());

c_segmentacao CURSOR FOR
	SELECT	ie_codificacao,
		vl_fixo,
		cd_conta_contabil,
		ie_debito_credito,
		ds_mascara
	from	pls_esquema_contabil_seg
	where	nr_seq_regra_esquema	= nr_seq_esquema_w
	order by
		ie_debito_credito,
		nr_seq_apresentacao;


BEGIN
qt_movimento_w	:= qt_movimento_p;

select	ie_tipo_outorgante
into STRICT	ie_tipo_outorgante_w
from	pls_outorgante
where	cd_estabelecimento	= cd_estabelecimento_p  LIMIT 1;

select	coalesce(max(a.ie_data_tipo_segurado),'A')
into STRICT	ie_data_tipo_segurado_w
from	pls_parametros a
where	a.cd_estabelecimento = cd_estabelecimento_p;

if (coalesce(nr_seq_conta_p,0) <> 0) then
	select	b.ie_tipo_protocolo
	into STRICT	ie_tipo_protocolo_w
	from	pls_conta		a,
		pls_protocolo_conta	b
	where	a.nr_seq_protocolo	= b.nr_sequencia
	and	a.nr_sequencia		= nr_seq_conta_p  LIMIT 1;
end if;

select	max(b.dt_mes_competencia)
into STRICT	dt_mesano_ref_w
from	pls_conta			a,
	pls_protocolo_conta		b
where	b.nr_sequencia	= a.nr_seq_protocolo
and	a.nr_sequencia	= nr_seq_conta_p;
	
select	max(a.ie_prestador_codificacao)
into STRICT	ie_prestador_codificacao_w
from	pls_esquema_contabil	a
where	a.ie_tipo_regra		= 'PC'
and	a.cd_estabelecimento	= cd_estabelecimento_p
and	dt_mesano_ref_w between a.dt_inicio_vigencia and coalesce(a.dt_fim_vigencia,dt_mesano_ref_w);

open c_copartic;
loop
fetch c_copartic into
	nr_seq_conta_copartic_w,
	ie_tipo_contratacao_w,
	ie_preco_w,
	ie_segmentacao_w,
	ie_regulamentacao_w,
	ie_tipo_segurado_w,
	dt_referencia_w,
	dt_ref_repasse_w,
	nr_seq_contrato_w,
	nr_seq_conta_w,
	ie_tipo_operacao_w,
	nr_seq_plano_w,
	cd_procedimento_w,
	ie_origem_proced_w,
	ie_ato_cooperado_w,
	ie_tipo_guia_w,
	nr_seq_tipo_atendimento_w,
	cd_medico_executor_w,
	ie_regime_internacao_w,
	ie_tipo_vinculo_operadora_w,
	ie_estorno_custo_w,
	nr_seq_grupo_ans_w,
	ie_tipo_despesa_w,
        ie_proc_mat_w,
	nr_seq_prestador_w,
	nr_seq_segurado_w,
	nr_id_w,
	nr_seq_tipo_conta_w,
	ie_benef_remido_w,
	nr_seq_congenere_w,
	nr_seq_mot_reembolso_w;
EXIT WHEN NOT FOUND; /* apply on c_copartic */
	begin
	nr_seq_esquema_w		:= null;
	cd_conta_credito_w		:= null;
	cd_conta_debito_w		:= null;
	cd_classificacao_credito_w	:= null;
	cd_classificacao_debito_w	:= null;
	nr_seq_conselho_w		:= null;
	cd_historico_padrao_w		:= null;
	ie_tipo_contrato_w		:= '';

	SELECT * FROM pls_obter_dados_repasse(	dt_ref_repasse_w, nr_seq_segurado_w, nr_seq_congenere_w, ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w) INTO STRICT ie_tipo_repasse_w, ie_tipo_compartilhamento_w, dt_repasse_w, dt_fim_repasse_w;
	
	if (nr_seq_contrato_w IS NOT NULL AND nr_seq_contrato_w::text <> '') then
		select	CASE WHEN coalesce(cd_cgc_estipulante::text, '') = '' THEN 'PF'  ELSE 'PJ' END
		into STRICT	ie_tipo_contrato_w
		from	pls_contrato
		where	nr_sequencia	= nr_seq_contrato_w  LIMIT 1;
	end if;
	
	if (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '') then
		select	ie_tipo_relacao,
			nr_seq_tipo_prestador
		into STRICT	ie_tipo_relacao_w,
			nr_seq_tipo_prestador_w
		from	pls_prestador
		where	nr_sequencia	= nr_seq_prestador_w  LIMIT 1;
		
		/*if	(nr_seq_tipo_prestador_w is not null) then
			select	ie_tipo_ptu
			into	ie_tipo_prestador_w
			from	pls_tipo_prestador
			where	nr_sequencia	= nr_seq_tipo_prestador_w
			and	rownum		<= 1;
		end if;*/
	end if;
	
	
	
	nr_seq_esquema_ww	:= null;
	cd_historico_padrao_ww	:= null;
	open c_esquema;
	loop
	fetch c_esquema into
		nr_seq_esquema_ww,
		cd_historico_padrao_ww,
		ie_prestador_codificacao_w,
		nr_seq_tipo_prest_regra_w,
		ie_tipo_relacao_regra_w;
	EXIT WHEN NOT FOUND; /* apply on c_esquema */
		begin
		
		if (coalesce(ie_tipo_relacao_regra_w,coalesce(ie_tipo_relacao_w,'X')) = coalesce(ie_tipo_relacao_w,'X')) and (coalesce(nr_seq_tipo_prest_regra_w,coalesce(nr_seq_tipo_prestador_w,0)) = coalesce(nr_seq_tipo_prestador_w,0)) then
			nr_seq_esquema_w	:= nr_seq_esquema_ww;
			cd_historico_padrao_w	:= cd_historico_padrao_ww;
		end if;
		end;
	end loop;
	close c_esquema;

	/* GRUPO ANS */


	/*
	if	(nvl(nr_seq_grupo_ans_w,0) = 0) then
	
		if	(cd_medico_executor_w is not null) then
			select	max(nr_seq_conselho)
			into	nr_seq_conselho_w
			from	pessoa_fisica
			where	cd_pessoa_fisica	= cd_medico_executor_w;
		end if;

		nr_seq_grupo_ans_w	:= pls_obter_grupo_ans(	cd_procedimento_w,
								ie_origem_proced_w,
								nr_seq_conselho_w,
								nr_seq_tipo_atendimento_w,
								ie_tipo_guia_w,
								ie_regime_internacao_w,
								ie_tipo_despesa_w,
								'G',
								nvl(cd_estabelecimento_p, 0));
	end if;
	*/


	/* 5 - Grupo ANS com base nos valores do ITAMED */

	if (coalesce(nr_seq_grupo_ans_w,0) > 0) then
		begin
		select	nr_seq_grupo_superior
		into STRICT	nr_seq_grupo_superior_w
		from	ans_grupo_despesa
		where	nr_sequencia	= nr_seq_grupo_ans_w;
		exception
		when others then
			nr_seq_grupo_superior_w	:= null;
		end;
	end if;

	if (coalesce(nr_seq_grupo_superior_w, 0) = 0) then
		nr_seq_grupo_ans_ww	:= nr_seq_grupo_ans_w;
	else
		nr_seq_grupo_ans_ww	:= nr_seq_grupo_superior_w;
	end if;

	select	max(ie_tipo_grupo_ans)
	into STRICT	nr_seq_grupo_ans_ww
	from	ans_grupo_despesa
	where	nr_sequencia	= nr_seq_grupo_ans_ww;

	if (nr_seq_grupo_ans_ww = 10) then /* 1 - Consultas */
		ie_classif_grupo_w	:= '1';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 20) then /* 49 - Exames */
		ie_classif_grupo_w	:= '2';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 30) then /* 51 - Terapias */
		ie_classif_grupo_w	:= '3';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 41) then /* 7 - Internacao - Honorario medico */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '1';
	elsif (nr_seq_grupo_ans_ww = 42) then /* 8 - Internacao - Exames */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '2';
	elsif (nr_seq_grupo_ans_ww = 43) then /* 9 - Internacao - Terapias*/
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '3';
	elsif (nr_seq_grupo_ans_ww = 44) then /* 10 - Internacao - Materiais medicos */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '4';
	elsif (nr_seq_grupo_ans_ww = 45) then /* 11 - Internacao - Medicamentos */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '5';
	elsif (nr_seq_grupo_ans_ww = 46) then /* 11 - Internacao - Procedimentos com preco fixo */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '6';
	elsif (nr_seq_grupo_ans_ww = 49) then /* 12 - Internacao - Outras despesas */
		ie_classif_grupo_w	:= '4';
		ie_classif_grupo_ww	:= '9';
	elsif (nr_seq_grupo_ans_ww = 50) then /* 6 - Outros atendimentos - Ambulatoriais */
		ie_classif_grupo_w	:= '5';
		ie_classif_grupo_ww	:= '0';
	elsif (nr_seq_grupo_ans_ww = 60) then /* 16 - Demais despesas assistenciais */
		ie_classif_grupo_w	:= '6';
		ie_classif_grupo_ww	:= '0';
	end if;

	open c_segmentacao;
	loop
	fetch c_segmentacao into
		ie_codificacao_w,
		vl_fixo_w,
		cd_conta_contabil_w,
		ie_debito_credito_w,
		ds_mascara_w;
	EXIT WHEN NOT FOUND; /* apply on c_segmentacao */
		begin
		cd_classificacao_item_w	:= null;

		/*if	(ie_estorno_custo_w = 'S') then
			if	(ie_debito_credito_w = 'C') then
				ie_debito_credito_w	:= 'D';
			else
				ie_debito_credito_w	:= 'C';
			end if;
		end if;*/
		if (ie_debito_credito_w = 'C') then /* Classificacao CREDITO */
			if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
				select	cd_classificacao_atual
				into STRICT	cd_classificacao_credito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_credito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
				if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_w;
				else
					cd_classificacao_item_w	:= 'GA';
				end if;
			elsif (ie_codificacao_w = 'FP') then /* Formacao de Preco */
				if (ie_tipo_segurado_w = 'A') then
					cd_classificacao_item_w	:= '9';
				else
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
				end if;
			elsif (ie_codificacao_w = 'R') then /* Regulamentacao */
				cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
			elsif (ie_codificacao_w = 'TC') then /* Tipo de contratacao */
				if (ie_tipo_contratacao_w in ('I','CE','CA')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
				else
					cd_classificacao_item_w	:= cd_classificacao_credito_w || 'TC';
				end if;
			elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa fisica ou Juridica) */
				if (ie_tipo_contrato_w in ('PF','PJ')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
				else
					cd_classificacao_item_w	:= cd_classificacao_credito_w || 'TP';
				end if;
			elsif (ie_codificacao_w = 'S') then /* Segmentacao */
				cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
				cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
				if (ie_ato_cooperado_w in ('1','2','3')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
				else
					cd_classificacao_item_w	:= 'A';
				end if;
			elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
				if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_ww;
				else
					cd_classificacao_item_w	:= 'CG';
				end if;
			elsif (ie_codificacao_w = 'RC') then /* Tipo de contratacao / Regulamentaco */
				cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
                        elsif (ie_codificacao_w = 'TD') then /* Tipo de despesa*/
				if (ie_proc_mat_w = 'P') then
					if (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_despesa(ie_tipo_despesa_w);
					else
						cd_classificacao_item_w := 'TD';
					end if;
				else
					cd_classificacao_item_w := 1;
				end if;
			end if;

			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;

				cd_classificacao_credito_w	:= cd_classificacao_credito_w || cd_classificacao_item_w;
			end if;
		elsif (ie_debito_credito_w = 'D') then /* Classificacao DEBITO */
			if (ie_codificacao_w = 'CR') then /* Codigo reduzido */
				select	cd_classificacao_atual
				into STRICT	cd_classificacao_debito_w
				from	conta_contabil
				where	cd_conta_contabil	= cd_conta_contabil_w;

				cd_conta_debito_w	:= cd_conta_contabil_w;
			elsif (ie_codificacao_w = 'FX') then /* Fixo */
				cd_classificacao_item_w	:= vl_fixo_w;
			elsif (ie_codificacao_w = 'GA') then /* Grupo ANS */
				if (ie_classif_grupo_w IS NOT NULL AND ie_classif_grupo_w::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_w;
				else
					cd_classificacao_item_w	:= 'GA';
				end if;
			elsif (ie_codificacao_w = 'FP') then /* Formacao de Preco */
				if (ie_tipo_segurado_w = 'A') then
					cd_classificacao_item_w	:= '9';
				else
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_formacao_preco(ie_preco_w);
				end if;
			elsif (ie_codificacao_w = 'R') then /* Regulamentacao */
				cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_regulamentacao(ie_regulamentacao_w);
			elsif (ie_codificacao_w = 'TC') then /* Tipo de contratacao */
				if (ie_tipo_contratacao_w in ('I','CE','CA')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_contratacao(ie_tipo_contratacao_w);
				else
					cd_classificacao_item_w	:= 'TC';
				end if;
			elsif (ie_codificacao_w = 'S') then /* Segmentacao */
				cd_classificacao_item_w	:= lpad(ie_segmentacao_w,2,'0');
			elsif (ie_codificacao_w = 'TP') then /* Tipo de Contrato (Pessoa fisica ou Juridica) */
				if (ie_tipo_contrato_w in ('PF','PJ')) then
					cd_classificacao_item_w	:= pls_atualizar_codificacao_pck.get_tipo_pessoa_contrato(ie_tipo_contrato_w);
				else
					cd_classificacao_item_w	:= 'TP';
				end if;
			elsif (ie_codificacao_w = 'TR') then /* Tipo de relacao com a OPS */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_relacao(ie_tipo_relacao_w);
			elsif (ie_codificacao_w = 'TA') then /* Tipo de ato cooperado */
				if (ie_ato_cooperado_w in ('1','2','3')) then
					cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_ato_cooperado(ie_ato_cooperado_w);
				else
					cd_classificacao_item_w	:= 'A';
				end if;
			elsif (ie_codificacao_w = 'CG') then /* Complemento grupo ANS */
				if (ie_classif_grupo_ww IS NOT NULL AND ie_classif_grupo_ww::text <> '') then
					cd_classificacao_item_w	:= ie_classif_grupo_ww;
				else
					cd_classificacao_item_w	:= 'CG';
				end if;
			elsif (ie_codificacao_w = 'RC') then /* Tipo de contratacao / Regulamentacao */
				cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_contratacao_regulamentacao(ie_tipo_contratacao_w,ie_regulamentacao_w);
                        elsif (ie_codificacao_w = 'TD') then /* Tipo de despesa*/
				if (ie_proc_mat_w = 'P') then
					if (ie_tipo_despesa_w IS NOT NULL AND ie_tipo_despesa_w::text <> '') then
						cd_classificacao_item_w := pls_atualizar_codificacao_pck.get_tipo_despesa(ie_tipo_despesa_w);
					else
						cd_classificacao_item_w := 'TD';
					end if;
				else
					cd_classificacao_item_w := 1;
				end if;
			end if;

			if (cd_classificacao_item_w IS NOT NULL AND cd_classificacao_item_w::text <> '') then
				if (ds_mascara_w = '00') then
					cd_classificacao_item_w	:= lpad(cd_classificacao_item_w,2,'0') || '.';
				elsif (ds_mascara_w = '0.0') then
					cd_classificacao_item_w	:= substr(lpad(cd_classificacao_item_w,2,'0'),1,1) ||'.'||substr(lpad(cd_classificacao_item_w,2,'0'),2,1) || '.';
				elsif (ds_mascara_w = '0_') then
					cd_classificacao_item_w	:= cd_classificacao_item_w;
				else
					cd_classificacao_item_w	:= cd_classificacao_item_w || '.';
				end if;

				cd_classificacao_debito_w	:= cd_classificacao_debito_w || cd_classificacao_item_w;
			end if;
		end if;
		end;
	end loop;
	close c_segmentacao;

	/* Remover o ultimo ponto da classificacao */

	if (substr(cd_classificacao_credito_w,length(cd_classificacao_credito_w),length(cd_classificacao_credito_w)) = '.') then
		cd_classificacao_credito_w	:= substr(cd_classificacao_credito_w,1,length(cd_classificacao_credito_w)-1);
	end if;

	if (substr(cd_classificacao_debito_w,length(cd_classificacao_debito_w),length(cd_classificacao_debito_w)) = '.') then
		cd_classificacao_debito_w	:= substr(cd_classificacao_debito_w,1,length(cd_classificacao_debito_w)-1);
	end if;

	if (coalesce(cd_conta_credito_w::text, '') = '') then
		cd_conta_credito_w	:= ctb_obter_conta_classif(cd_classificacao_credito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;

	if (coalesce(cd_conta_debito_w::text, '') = '') then
		cd_conta_debito_w	:= ctb_obter_conta_classif(cd_classificacao_debito_w,dt_referencia_w,cd_estabelecimento_p);
	end if;

	if (nr_seq_atualizacao_p IS NOT NULL AND nr_seq_atualizacao_p::text <> '') then
		if (coalesce(nr_seq_esquema_w::text, '') = '') then
			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						1,
						null,
						null,
						null,
						null,
						nr_seq_conta_copartic_w,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w);
		elsif	((coalesce(cd_conta_credito_w::text, '') = '') or (coalesce(cd_conta_debito_w::text, '') = '')) then
			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						2,
						null,
						null,
						null,
						null,
						nr_seq_conta_copartic_w,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w);
                elsif (coalesce(nr_seq_plano_w, 0) = 0) then
			CALL pls_gravar_mov_contabil(nr_seq_atualizacao_p,
						8,
						null,
						null,
						null,
						null,
						nr_seq_conta_copartic_w,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						null,
						nm_usuario_p,
						nr_seq_esquema_w);
		end if;
	end if;

	begin
	
	update	pls_conta_copartic_contab
	set	cd_conta_cred_provisao		= cd_conta_credito_w,
		cd_conta_deb_provisao		= cd_conta_debito_w,
		cd_historico_provisao		= cd_historico_padrao_w,
		cd_classif_cred_provisao	= cd_classificacao_credito_w,
		cd_classif_deb_provisao		= cd_classificacao_debito_w,
		nr_seq_esquema_prov		= nr_seq_esquema_w,
		nr_seq_grupo_ans		= nr_seq_grupo_ans_w
	where	rowid				= nr_id_w;
	exception
	when others then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(189006,'NR_SEQ_CONTA_COPARTIC='||nr_seq_conta_copartic_w);
	end;

	qt_movimento_w	:= qt_movimento_w + 1;

	if (mod(qt_movimento_w,300) = 0) then
		commit;
	end if;
	end;
end loop;
close c_copartic;

qt_movimento_p	:= qt_movimento_w;
--commit;
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE ctb_pls_atualizar_prov_copart ( nr_seq_conta_p pls_conta.nr_sequencia%type, nr_seq_conta_copartic_p pls_conta_coparticipacao.nr_sequencia%type, nr_seq_atualizacao_p pls_movimento_contabil.nr_seq_atualizacao%type, nm_usuario_p usuario.nm_usuario%type, cd_estabelecimento_p estabelecimento.cd_estabelecimento%type, qt_movimento_p INOUT integer, nr_seq_copartic_contab_p pls_conta_copartic_contab.nr_sequencia%type default null) FROM PUBLIC;

