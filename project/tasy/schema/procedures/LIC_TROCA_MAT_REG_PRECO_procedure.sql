-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lic_troca_mat_reg_preco ( nr_sequencia_p bigint, cd_material_novo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


cd_material_w			integer;
cd_unidade_medida_compra_w	varchar(30);
cd_unidade_medida_compra_ww	varchar(30);
ie_situacao_w			varchar(1);
ds_marca_w			varchar(255);
nr_seq_marca_w			bigint;
qt_existe_w			bigint;


BEGIN

select	coalesce(max(cd_material),0)
into STRICT	cd_material_w
from	reg_compra_item
where	nr_sequencia = nr_sequencia_p;

if (cd_material_w > 0) then

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,255) cd_unidade_medida_compra,
		ie_situacao
	into STRICT	cd_unidade_medida_compra_w,
		ie_situacao_w
	from	material
	where	cd_material = cd_material_w;

	if (ie_situacao_w = 'I') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266236);
		--'Este novo material está inativo.');
	end if;

	select	substr(obter_dados_material_estab(cd_material,cd_estabelecimento_p,'UMC'),1,255) cd_unidade_medida_compra
	into STRICT	cd_unidade_medida_compra_ww
	from	material
	where	cd_material = cd_material_novo_p;

	if (cd_unidade_medida_compra_w <> cd_unidade_medida_compra_ww) then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(266237);
		--'O novo material possui unidade de medida de compra diferente do material original. Não será possível efetuar a  substituição.');
	end if;

	update	reg_compra_item
	set	dt_cancelamento = clock_timestamp(),
		ds_motivo_cancel = WHEB_MENSAGEM_PCK.get_texto(311030, 'CD_MATERIAL_W=' || cd_material_w) || cd_material_novo_p || '.' --Substituição do material ' || cd_material_w || ' para
	where	nr_sequencia = nr_sequencia_p;

	select	ds_marca
	into STRICT	ds_marca_w
	from	reg_compra_item
	where	nr_sequencia = nr_sequencia_p;

	insert into reg_compra_item(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		dt_atualizacao_nrec,
		nm_usuario_nrec,
		nr_seq_licitacao,
		nr_seq_reg_compra,
		nr_seq_lic_item,
		nr_seq_fornec,
		nr_seq_fornec_original,
		nr_seq_lic_item_fornec,
		cd_material,
		qt_item,
		vl_item,
		qt_item_original,
		vl_item_original,
		ds_marca,
		ds_marca_original)
	SELECT	nextval('reg_compra_item_seq'),
		clock_timestamp(),
		nm_usuario_p,
		clock_timestamp(),
		nm_usuario_p,
		nr_seq_licitacao,
		nr_seq_reg_compra,
		nr_seq_lic_item,
		nr_seq_fornec,
		nr_seq_fornec_original,
		nr_seq_lic_item_fornec,
		cd_material_novo_p,
		qt_item,
		vl_item,
		qt_item_original,
		vl_item_original,
		ds_marca,
		ds_marca_original
	from	reg_compra_item
	where	nr_sequencia = nr_sequencia_p;

	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_marca_w
	from	marca
	where	elimina_acentuacao(upper(ds_marca)) = elimina_acentuacao(upper(ds_marca_w));

	if (nr_seq_marca_w > 0) then

		select	count(*)
		into STRICT	qt_existe_w
		from	material_marca
		where	cd_material = cd_material_novo_p
		and	nr_sequencia = nr_seq_marca_w;

		if (qt_existe_w = 0) then

			insert into material_marca(
				cd_material,
				nr_sequencia,
				dt_atualizacao,
				nm_usuario,
				dt_atualizacao_nrec,
				nm_usuario_nrec,
				qt_prioridade,
				ie_situacao)
			values (	cd_material_novo_p,
				nr_seq_marca_w,
				clock_timestamp(),
				nm_usuario_p,
				clock_timestamp(),
				nm_usuario_p,
				1,
				'A');
		end if;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lic_troca_mat_reg_preco ( nr_sequencia_p bigint, cd_material_novo_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

