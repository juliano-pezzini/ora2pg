-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE lab_ls_exame_lab_result_item (nr_prescricao_p bigint, nr_seq_lote_p bigint, dt_coleta_p text, hr_coleta_p text, cd_exame_principal_p text, cd_material_exame_p text, cd_exame_analito_p text, ds_resultado_p text, vl_campo_resultado_p text, ds_unidade_medida_p text, qt_minima_p text, qt_maxima_p text, vl_referencia_resultado_p text, nr_sequencia_p INOUT bigint ) AS $body$
DECLARE


cd_exame_principal_w	bigint;
cd_exame_analito_w		bigint;
nr_sequencia_w			bigint;
nr_seq_resultado_w		bigint;
nr_seq_resultado_ww		bigint;
nr_seq_lab_resultado_w	bigint;
ie_formato_resultado_w	varchar(3);
ds_consistencia_w		varchar(255);
cd_medico_w				varchar(10);
qt_anos_w				double precision;
ie_sexo_w				varchar(1);
nr_seq_material_w		bigint;
ds_erro_p 				varchar(4000);
ie_status_receb_w		smallint;
dt_aprovacao_w			timestamp;
nr_seq_res_item_w		bigint;
ie_existe_res_w			varchar(1);
ie_campo_calculo_w		varchar(1);


cd_material_exame_w		material_exame_lab.cd_material_exame%type;


BEGIN

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') then

	select  MAX(a.ie_status_receb)
	into STRICT	ie_status_receb_w
	from	lab_parametro a,
			prescr_medica b
	where 	a.cd_estabelecimento = b.cd_estabelecimento
	and		b.nr_prescricao  = nr_prescricao_p;


	select	max(cd_medico)
	into STRICT	cd_medico_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;

	CALL gravar_log_lab(89, 	nr_prescricao_p			||' - '||
						nr_seq_lote_p			||' - '||
						dt_coleta_p				||' - '||
						hr_coleta_p				||' - '||
						cd_exame_principal_p	||' - '||
						cd_material_exame_p		||' - '||
						cd_exame_analito_p		||' - '||
						ds_resultado_p			||' - '||
						vl_campo_resultado_p	||' - '||
						ds_unidade_medida_p, 'LabSolucaoDll', nr_prescricao_p);

	--gravar_log_lab (89,'1'||cd_medico_w,'LabSolucaoDll');
	--commit;
	select	max(b.nr_seq_exame),
		max(a.ie_formato_resultado),
		Max(ie_campo_calculo)
	into STRICT	cd_exame_principal_w,
		ie_formato_resultado_w,
		ie_campo_calculo_w
	from	exame_laboratorio a,
		lab_exame_equip b,
		equipamento_lab c
	where	a.nr_seq_exame = b.nr_seq_exame
	and	b.cd_equipamento = c.cd_equipamento
	and	c.ds_sigla = 'SOL'
	and	b.cd_exame_equip = cd_exame_principal_p;

	if (coalesce(cd_exame_principal_w::text, '') = '') then
		CALL wheb_mensagem_pck.exibir_mensagem_abort(1032616, 'CD_EXAME=' || cd_exame_principal_p);
	end if;

	--gravar_log_lab (89,'2'||cd_exame_principal_w||' '||ie_formato_resultado_w,'LabSolucaoDll');
	--commit;
	-- Busca pelo código do analito
	select	max(e.nr_seq_exame)
	into STRICT	cd_exame_analito_w
	from	exame_laboratorio e
	where	e.nr_seq_exame = (SELECT nr_seq_exame
				  from equipamento_lab b,
					lab_exame_equip a
				  WHERE	a.cd_equipamento = b.cd_equipamento
				  AND	a.cd_exame_equip = cd_exame_analito_p
				  AND	upper(b.ds_sigla) = 'SOL'
				  AND	a.nr_seq_exame = cd_exame_principal_w);WITH RECURSIVE cte AS (



	if (coalesce(cd_exame_analito_w::text, '') = '') then

		select	max(e.nr_seq_exame)
		into STRICT	cd_exame_analito_w
		from	exame_laboratorio e WHERE nr_seq_superior = cd_exame_principal_w
  UNION ALL



	if (coalesce(cd_exame_analito_w::text, '') = '') then

		select	max(e.nr_seq_exame)
		into STRICT	cd_exame_analito_w
		from	exame_laboratorio e JOIN cte c ON (c.prior nr_seq_exame = e.nr_seq_superior)

) SELECT * FROM cte WHERE nr_seq_exame = (SELECT nr_seq_exame
					from equipamento_lab b,
						 lab_exame_equip a
					WHERE	a.cd_equipamento = b.cd_equipamento
					AND	a.cd_exame_equip = cd_exame_analito_p
					AND	upper(b.ds_sigla) = 'SOL'
					AND	a.nr_seq_exame = e.nr_seq_exame);
;


	end if;


	--gravar_log_lab(89,'3'||cd_exame_analito_w||' '||cd_exame_analito_p,'LabSolucaoDll');
	--commit;
	select	max(b.nr_sequencia),
			max(b.cd_material_exame),
			max(d.nr_sequencia)
	into STRICT	nr_seq_material_w,
			cd_material_exame_w,
			nr_sequencia_w
	from	MATERIAL_EXAME_LAB_INT a,
			MATERIAL_EXAME_LAB b,
			equipamento_lab c,
			prescr_procedimento d
	where	a.nr_seq_material = b.nr_sequencia
	and		a.cd_equipamento = c.cd_equipamento
	and		d.cd_material_exame = b.cd_material_exame
	and		c.ds_sigla = 'SOL'
	and		a.CD_MATERIAL_INTEGRACAO = cd_material_exame_p
	and		d.nr_prescricao = nr_prescricao_p
	and		d.nr_seq_exame = cd_exame_principal_w;

	/*select	max(a.nr_sequencia),
			max(b.nr_sequencia)
	into	nr_sequencia_w,
			nr_seq_material_w
	from	prescr_procedimento a,
			material_exame_lab b
	where	a.nr_prescricao = nr_prescricao_p
	and		a.cd_material_exame = b.cd_material_exame
	and		a.nr_seq_exame = cd_exame_principal_w
	and		trim(nvl(b.cd_material_integracao,a.cd_material_exame)) = trim(cd_material_exame_p);*/
	/*select	max(a.nr_sequencia)
	into	nr_sequencia_w
	from	prescr_procedimento a
	where	a.nr_prescricao = nr_prescricao_p
	and		a.cd_material_exame = cd_material_exame_w
	and		a.nr_seq_exame = cd_exame_principal_w;	*/
	--gravar_log_lab (89,'4'||cd_exame_principal_w||' '||cd_material_exame_p,'LabSolucaoDll');
	--commit;
	select	max(b.nr_seq_resultado)
	into STRICT	nr_seq_resultado_w
	from	exame_lab_resultado a,
			exame_lab_result_item b
	where	a.nr_seq_resultado = b.nr_seq_resultado
	and		a.nr_prescricao = nr_prescricao_p
	and		b.nr_seq_prescr = nr_sequencia_w;

	--gravar_log_lab (89,'Resultado' ||nr_prescricao_p || 'Sequencia: ' || nr_sequencia_w || ' ' ||nr_seq_resultado_w,'LabSolucaoDll');
	--commit;
	if (coalesce(nr_seq_resultado_w::text, '') = '' and
        (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and
        (nr_sequencia_w IS NOT NULL AND nr_sequencia_w::text <> '')) then
		begin
		CALL gera_exame_result_lab(nr_prescricao_p,nr_sequencia_w,'N','N','S','LabSolucaoDll');
		exception
		when others then
			CALL gravar_log_lab(89,obter_desc_expressao(621802)/*'Resultado não gerado para prescrição: '*/
 ||nr_prescricao_p || obter_desc_expressao(504171)/*'Sequencia: '*/ || nr_sequencia_w || ' ' || substr(sqlerrm,1,90),'LabSolucaoDll',nr_prescricao_p,'SOLUCAO');
			commit;
		end;


		select 	max(nr_seq_resultado)
		into STRICT	nr_seq_resultado_w
		from 	exame_lab_resultado
		where	nr_prescricao   = nr_prescricao_p;

		if (nr_seq_resultado_w IS NOT NULL AND nr_seq_resultado_w::text <> '') then
			begin

			select 	trunc(dividir(obter_dias_entre_datas(obter_nascimento_prescricao(nr_prescricao_p),clock_timestamp()),365),4),
					obter_sexo_prescricao(nr_prescricao_p)
			into STRICT 	qt_anos_w,
					ie_sexo_w
			;

			--gravar_log_lab(89,'2---- Entrou ' ||nr_prescricao_p || 'Sequencia: ' || nr_sequencia_w || ' ' || substr(sqlerrm,1,90),'LabSolucaoDll');
			commit;

			--gera_resultado_lab_imp(nr_seq_resultado_w, nr_prescricao_p, nr_sequencia_w, cd_exame_principal_w, nr_seq_material_w,qt_anos_w,ie_sexo_w,'LabSolucaoDll');
			exception
			when others then
				CALL gravar_log_lab(89,obter_desc_expressao(621802)/*'Resultado não gerado para prescrição: '*/
 ||nr_prescricao_p || obter_desc_expressao(504171)/*'Sequencia: '*/ || nr_sequencia_w || ' ' || substr(sqlerrm,1,90),'LabSolucaoDll',nr_prescricao_p,'SOLUCAO');
				commit;
			end;

		else
			CALL gravar_log_lab(89,' 1 Resultado não encontrado para a prescrição: ' || nr_prescricao_p,'LabSolucaoDll',nr_prescricao_p,'SOLUCAO');
			commit;
		end if;

	end if;

	select	max(b.nr_seq_resultado),
			max(b.nr_sequencia)
	into STRICT	nr_seq_resultado_w,
			nr_seq_lab_resultado_w
	from	exame_lab_resultado a,
			exame_lab_result_item b
	where	a.nr_seq_resultado = b.nr_seq_resultado
	and		a.nr_prescricao = nr_prescricao_p
	and		b.nr_seq_prescr = nr_sequencia_w;



	--gravar_log_lab (89, 'Antes consulta ' || nr_seq_resultado_w||' '||nr_sequencia_w||' '||nr_prescricao_p,'LabSolucaoDll');
	--commit;
	if (nr_seq_resultado_w IS NOT NULL AND nr_seq_resultado_w::text <> '') and (cd_exame_analito_w IS NOT NULL AND cd_exame_analito_w::text <> '') then

		--gravar_log_lab (89, 'Entrou 1 ' || nr_prescricao_p||' '||ds_resultado_p||' '||vl_campo_resultado_p,'LabSolucaoDll');
		--commit;
		/*select	decode(count(1),0, 'N', 'S')
		into	ie_existe_res_w
		from	exame_lab_result_item a
		where	a.nr_seq_resultado = nr_seq_resultado_w
		and		a.nr_seq_prescr = nr_sequencia_w
		and		a.nr_seq_exame = nvl(cd_exame_analito_w, cd_exame_principal_w);


		if (ie_existe_res_w = 'N') then

			select	nvl(max(a.nr_sequencia),0)+1
			into	nr_seq_res_item_w
			from	exame_lab_result_item a,
					exame_lab_resultado b
			where	a.nr_seq_resultado = b.nr_seq_resultado
			and		b.nr_prescricao = nr_prescricao_p;

			insert into exame_lab_result_item(
					nr_seq_resultado,
					nr_sequencia,
					nr_seq_exame,
					dt_atualizacao,
					nm_usuario,
					nr_seq_material,
					nr_seq_prescr)
			values(	nr_seq_resultado_w,
					nr_seq_res_item_w,
					nvl(cd_exame_analito_w, cd_exame_principal_w),
					sysdate,
					'SOLUCAO',
					decode(nvl(cd_exame_analito_w,'-1'),'-1', null, nr_seq_material_w),
					nr_sequencia_w);

		end if;*/
		if (ie_formato_resultado_w = 'P') or (ie_formato_resultado_w = 'VP' and ie_campo_calculo_w = 'V') then
			update	exame_lab_result_item
			set	ds_unidade_medida 	= ds_unidade_medida_p,
				pr_resultado		= vl_campo_resultado_p,
				ds_resultado		= ds_resultado_p,
				cd_medico_resp 		= cd_medico_w, --:cd_medico_resp,
				dt_aprovacao 		= clock_timestamp(),
				nm_usuario_aprovacao 	= 'AprovLote',
				dt_atualizacao 		= clock_timestamp(),
				nm_usuario 			= 'AprovLote',
				ds_referencia_ext 	= vl_referencia_resultado_p,
				ds_referencia	 	= vl_referencia_resultado_p,
				pr_minimo			= qt_minima_p,
				pr_maximo			= qt_maxima_p
			where	1=1
			and	nr_seq_resultado 	= nr_seq_resultado_w
--			and	nr_sequencia 		= nr_seq_lab_resultado_w;
			and nr_seq_prescr = nr_sequencia_w
			and	nr_seq_exame = coalesce(cd_exame_analito_w, cd_exame_principal_w);
		elsif (ie_formato_resultado_w = 'V') or (ie_formato_resultado_w = 'VP' and ie_campo_calculo_w = 'P') then
			update	exame_lab_result_item
			set	ds_unidade_medida 	= ds_unidade_medida_p,
				qt_resultado		= vl_campo_resultado_p,
				ds_resultado		= ds_resultado_p,
				cd_medico_resp 		= cd_medico_w, --:cd_medico_resp,
				dt_aprovacao 		= clock_timestamp(),
				nm_usuario_aprovacao 	= 'AprovLote',
				dt_atualizacao 		= clock_timestamp(),
				nm_usuario 		= 'AprovLote',
				ds_referencia_ext 	= vl_referencia_resultado_p,
				ds_referencia	 	= vl_referencia_resultado_p,
				qt_minima			= qt_minima_p,
				qt_maxima			= qt_maxima_p
			where	1=1
			and	nr_seq_resultado 	= nr_seq_resultado_w
--			and	nr_sequencia 		= nr_seq_lab_resultado_w;
			and nr_seq_prescr = nr_sequencia_w
			and	nr_seq_exame = coalesce(cd_exame_analito_w, cd_exame_principal_w);
		else
			update	exame_lab_result_item
			set	ds_unidade_medida 	= ds_unidade_medida_p,
				--qt_resultado		= vl_campo_resultado_p,
				ds_resultado		= coalesce(ds_resultado_p,vl_campo_resultado_p),
				cd_medico_resp 		= cd_medico_w, --:cd_medico_resp,
				dt_aprovacao 		= clock_timestamp(),
				nm_usuario_aprovacao 	= 'AprovLote',
				dt_atualizacao 		= clock_timestamp(),
				nm_usuario 		= 'AprovLote',
				ds_referencia_ext 	= vl_referencia_resultado_p,
				ds_referencia	 	= vl_referencia_resultado_p,
				qt_minima			= qt_minima_p,
				qt_maxima			= qt_maxima_p
			where	1=1
			and	nr_seq_resultado 	= nr_seq_resultado_w
--			and	nr_sequencia 		= nr_seq_lab_resultado_w;
			and nr_seq_prescr = nr_sequencia_w
			and	nr_seq_exame = coalesce(cd_exame_analito_w, cd_exame_principal_w);
		end if;

		--gravar_log_lab (89, 'Entrou 1 ' || nr_prescricao_p||' '||ds_resultado_p||' '||cd_exame_analito_w||' '||cd_exame_principal_w,'LabSolucaoDll');
		--commit;
		update	prescr_procedimento
		set	ie_status_atend = ie_status_receb_w,
			nm_usuario = 'AprovLote',
			dt_atualizacao = clock_timestamp()
		where	nr_prescricao = nr_prescricao_p
		and	nr_sequencia = nr_sequencia_w;

		if (ie_status_receb_w = 30) then
			select 	MAX(a.dt_aprovacao),
					MAX(a.nr_seq_resultado)
			into STRICT 	dt_aprovacao_w,
					nr_seq_resultado_ww
			from 	exame_lab_result_item a,
					exame_lab_resultado b
			where 	a.nr_seq_resultado = b.nr_seq_resultado
			and		b.nr_prescricao	=	nr_prescricao_p
			and		a.nr_seq_prescr = nr_sequencia_w;

			if (dt_aprovacao_w IS NOT NULL AND dt_aprovacao_w::text <> '') then
				update 	exame_lab_result_item
				set 	dt_aprovacao  = NULL,
						dt_atualizacao = clock_timestamp()
				where 	nr_seq_resultado = nr_seq_resultado_ww
				and	  	nr_seq_prescr = nr_sequencia_w;
			end if;


		end if;

		--Consistir_Aprovacao_Exame(nr_prescricao_p, nr_sequencia_w, ds_consistencia_w);
		/*nr_seq_resultado_p	:= nr_seq_resultado_w;
		nr_sequencia_p		:= nr_seq_lab_resultado_w;	*/
		nr_sequencia_p		:= nr_sequencia_w;
	end if;

end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE lab_ls_exame_lab_result_item (nr_prescricao_p bigint, nr_seq_lote_p bigint, dt_coleta_p text, hr_coleta_p text, cd_exame_principal_p text, cd_material_exame_p text, cd_exame_analito_p text, ds_resultado_p text, vl_campo_resultado_p text, ds_unidade_medida_p text, qt_minima_p text, qt_maxima_p text, vl_referencia_resultado_p text, nr_sequencia_p INOUT bigint ) FROM PUBLIC;

