-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE rxt_gerar_planejamento ( nr_seq_tratamento_p bigint, nr_seq_equipamento_p bigint, dt_inicio_tratamento_p timestamp, qt_duracao_tratamento_p bigint, nr_seq_fases_p text, nm_usuario_p text, ie_prox_hor_sobreposto_p text, cd_estabelecimento_p bigint, ie_somente_pendente_p text default 'N', ie_alter_plan_p INOUT text DEFAULT NULL) AS $body$
DECLARE


dt_tratamento_w			timestamp;
dt_tratamento_ww		timestamp;
dt_final_vigencia_w		timestamp;
nr_seq_fase_w		bigint;
qt_duracao_fase_w		integer;
ie_novo_tratamento_w	varchar(1);
qt_dia_trat_w		bigint;
ie_gerar_agenda_w		varchar(1);
dt_dia_semana_w		bigint;
ie_feriado_w		varchar(1);
ie_dia_feriado_w		varchar(1);
nr_seq_volume_trat_w	bigint;
ie_considera_volume_w	varchar(1);
qt_intervalo_w		integer;
nr_seq_campo_w		bigint;
qt_duracao_campo_w	integer;
ie_tipo_trat_w		varchar(5);
ie_final_semana_w		varchar(1);
ie_fim_sem_w		varchar(1);
qt_reg_vigencia_w		bigint;
qt_existe_w		bigint;
ie_utilizar_data_trat_w	varchar(1);
ie_dia_semana_w		smallint;	
ie_dia_trabalho_w	varchar(1);
nr_seq_aplic_trat_w  bigint;
qt_inter_insercoes_w bigint;
qt_duracao_trat_w 	 bigint;
ie_dias_entre_w 	bigint;
ie_agendou_w		varchar(1);
ie_alter_plan_w 	varchar(1) := 'N';

c01 CURSOR FOR
SELECT	nr_sequencia,
	coalesce(CASE WHEN ie_somente_pendente_p='S' THEN rxt_obter_dias_fase_pend(nr_sequencia)  ELSE qt_duracao_trat END ,0) qt_duracao_trat,
	coalesce(qt_intervalo,0),
	coalesce(ie_final_semana,'N')
from	rxt_fase_tratamento
where	nr_seq_tratamento = nr_seq_tratamento_p
and	obter_se_contido(nr_sequencia,nr_seq_fases_p) = 'S'
and	coalesce(CASE WHEN ie_somente_pendente_p='S' THEN rxt_obter_dias_fase_pend(nr_sequencia)  ELSE qt_duracao_trat END ,0) > 0
order by
	nm_fase,
	qt_duracao_trat;
		
c02 CURSOR FOR
SELECT	distinct(nr_seq_volume_tratamento)
from	rxt_fase_tratamento
where	nr_seq_tratamento = nr_seq_tratamento_p
and	obter_se_contido(nr_sequencia,nr_seq_fases_p) = 'S'
order by nr_seq_volume_tratamento;

c03 CURSOR FOR
SELECT	nr_sequencia,	
	coalesce(CASE WHEN ie_somente_pendente_p='S' THEN rxt_obter_dias_fase_pend(nr_sequencia)  ELSE qt_duracao_trat END ,0) qt_duracao_trat,
	coalesce(qt_intervalo,0),
	coalesce(ie_final_semana,'N')
from	rxt_fase_tratamento
where	nr_seq_tratamento = nr_seq_tratamento_p
and	obter_se_contido(nr_sequencia,nr_seq_fases_p) = 'S'
and	coalesce(CASE WHEN ie_somente_pendente_p='S' THEN rxt_obter_dias_fase_pend(nr_sequencia)  ELSE qt_duracao_trat END ,0) > 0
and	nr_seq_volume_tratamento = nr_seq_volume_trat_w
order by
	nm_fase,
	qt_duracao_trat;
	
c04 CURSOR FOR
SELECT	nr_sequencia,
	qt_dia_trat,
	0
from	rxt_campo_trat_roentgen
where	nr_seq_tratamento = nr_seq_tratamento_p
and	obter_se_contido(nr_sequencia,nr_seq_fases_p) = 'S'
order by
	nm_campo,
	qt_dia_trat;

c05 CURSOR FOR
SELECT	distinct(nr_seq_volume_tratamento)
from	rxt_campo_trat_roentgen
where	nr_seq_tratamento = nr_seq_tratamento_p
and	obter_se_contido(nr_sequencia,nr_seq_fases_p) = 'S'
order by nr_seq_volume_tratamento;
	
c06 CURSOR FOR
SELECT	nr_sequencia,
	qt_dia_trat,
	0
from	rxt_campo_trat_roentgen
where	nr_seq_tratamento = nr_seq_tratamento_p
and	obter_se_contido(nr_sequencia,nr_seq_fases_p) = 'S'
and	nr_seq_volume_tratamento = nr_seq_volume_trat_w
order by
	nm_campo,
	qt_dia_trat;
	
c07 CURSOR FOR
SELECT	a.nr_sequencia,
	coalesce(a.qt_intervalo_insercoes,0)
from	RXT_BRAQ_APLIC_TRAT a,
		RXT_TRATAMENTO b
where	a.nr_seq_tratamento = nr_seq_tratamento_p
and 	a.nr_seq_tratamento = b.nr_sequencia
and		obter_se_contido(a.nr_sequencia,nr_seq_fases_p) = 'S'
order by
	NR_ORDEM_EXECUCAO_APLIC;
	
c08 CURSOR FOR	
SELECT 	distinct(nr_insercao)
from RXT_BRAQ_CAMPO_APLIC_TRAT
where nr_seq_aplic_trat = nr_seq_aplic_trat_w
order by 1;
	

BEGIN
ie_alter_plan_p := 'N';
if (nr_seq_tratamento_p IS NOT NULL AND nr_seq_tratamento_p::text <> '') and (nr_seq_equipamento_p IS NOT NULL AND nr_seq_equipamento_p::text <> '') and (dt_inicio_tratamento_p IS NOT NULL AND dt_inicio_tratamento_p::text <> '') and (qt_duracao_tratamento_p IS NOT NULL AND qt_duracao_tratamento_p::text <> '') and (nr_seq_fases_p IS NOT NULL AND nr_seq_fases_p::text <> '') and (nm_usuario_p IS NOT NULL AND nm_usuario_p::text <> '') then
	
	ie_utilizar_data_trat_w := obter_param_usuario(3030, 37, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_p, ie_utilizar_data_trat_w);
	
	select	coalesce(max(rxt_obter_tipo_trat_prot(nr_seq_protocolo)),'X')
	into STRICT	ie_tipo_trat_w
	from	rxt_tratamento
	where	nr_sequencia	= nr_seq_tratamento_p;
	
	select	coalesce(max(ie_considera_tratamento_volume),'N')
	into STRICT	ie_considera_volume_w
	from 	rxt_parametro;
	
	select	CASE WHEN count(*)=0 THEN 'S'  ELSE 'N' END
	into STRICT	ie_novo_tratamento_w
	from	rxt_agenda
	where	nr_seq_tratamento = nr_seq_tratamento_p
	and	ie_status_agenda not in ('C','L')
	and	ie_tipo_agenda = 'T';
	
	if (ie_novo_tratamento_w = 'S') then
	
		dt_tratamento_w	:= dt_inicio_tratamento_p;
	
		update	rxt_tratamento
		set	dt_inicio_trat	= dt_tratamento_w
		where	nr_sequencia	= nr_seq_tratamento_p;	
		
	else
	
		if (ie_utilizar_data_trat_w = 'N') then
			select	min(dt_agenda)-- + 1
			into STRICT	dt_tratamento_w
			from	rxt_agenda
			where	nr_seq_tratamento = nr_seq_tratamento_p
			and	ie_status_agenda not in ('C','L'); -- ALTERADO AQUI
		else
			dt_tratamento_w := dt_inicio_tratamento_p;
		end if;	
	end if;
	
	/* obter dia semana */

	ie_dia_semana_w		:= rxt_obter_cod_dia_semana(dt_tratamento_w);	
	
	/*obter se dia de trabalho*/

	select CASE WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=0 THEN  'N' WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=1 THEN  'S' END
	into STRICT ie_dia_trabalho_w
	;
	
	select	coalesce(max(dt_dia_semana),9),
		coalesce(max(ie_feriado),'N'),
		max(dt_final_vigencia)
	into STRICT	dt_dia_semana_w,
		ie_feriado_w,
		dt_final_vigencia_w
	from	rxt_equip_regra_agenda
	where	nr_seq_equipamento	= nr_seq_equipamento_p
	and	to_char(hr_inicial,'hh24:mi:ss') 	< to_char(dt_tratamento_w,'hh24:mi:ss')
	and	to_char(hr_final,'hh24:mi:ss')   	> to_char(dt_tratamento_w,'hh24:mi:ss')  
	AND	TO_CHAR(hr_inicial,'hh24:mi:ss')	< TO_CHAR(hr_final,'hh24:mi:ss') 
	AND	((coalesce(dt_inicio_vigencia::text, '') = '') 	OR (dt_inicio_vigencia	<= TRUNC(dt_tratamento_w))) 
	AND	((coalesce(dt_final_vigencia::text, '') = '') 	OR (dt_final_vigencia	>= TRUNC(dt_tratamento_w)))
	AND	((dt_dia_semana	= ie_dia_semana_w) 	OR (dt_dia_semana = 9 AND ie_dia_trabalho_w = 'S'));
	
	dt_tratamento_ww := dt_tratamento_w;
	
	
	if (ie_tipo_trat_w = 'B') then
		open c07;
			loop
			fetch c07 into	nr_seq_aplic_trat_w,
					qt_inter_insercoes_w;
			EXIT WHEN NOT FOUND; /* apply on c07 */
				begin
				
				open c08;
					loop
					fetch c08 into	qt_duracao_trat_w;
					EXIT WHEN NOT FOUND; /* apply on c08 */
						begin
						qt_reg_vigencia_w := -1;	
						ie_agendou_w := 'N';
						while(ie_agendou_w  <> 'S') loop
							begin
								
								/* Gerar agendas para o equipamento */

								CALL rxt_gerar_agenda_equip(nr_seq_equipamento_p, dt_tratamento_w, 'N', nm_usuario_p);
								/* Verifica se na data possui agenda */

								ie_gerar_agenda_w	:= rxt_obter_se_agenda_dia(nr_seq_equipamento_p, dt_tratamento_w, nr_seq_tratamento_p);
														
								if (ie_gerar_agenda_w = 'S') then
									/* Verifica se agenda no feriado */

									if (ie_feriado_w = 'N') then
										/* Obter se dia tratamento e feriado */

										select	CASE WHEN obter_se_feriado(cd_estabelecimento_p, dt_tratamento_w)=0 THEN 'N'  ELSE 'S' END
										into STRICT	ie_dia_feriado_w
										;
									end if;
																
									if	((ie_feriado_w = 'N' AND ie_dia_feriado_w = 'N') or (ie_feriado_w = 'S'))then	
										
										ie_alter_plan_w := rxt_gerar_agenda_trat(nr_seq_tratamento_p, null, nr_seq_equipamento_p, dt_tratamento_w, nm_usuario_p, ie_prox_hor_sobreposto_p, 0, cd_estabelecimento_p, 0, nr_seq_aplic_trat_w, qt_duracao_trat_w, ie_alter_plan_w);	
										if (ie_alter_plan_w <> 'N') then
											ie_alter_plan_p := ie_alter_plan_w;
										end if;
										dt_tratamento_ww := dt_tratamento_w;
										ie_agendou_w := 'S';
									end if;
								end if;
							
								select	count(*) qt_registros
								into STRICT qt_reg_vigencia_w
								from	rxt_equip_regra_agenda
								where	nr_seq_equipamento	= nr_seq_equipamento_p
								and	((coalesce(dt_final_vigencia::text, '') = '') 	OR (TRUNC(dt_final_vigencia)		>= TRUNC(dt_tratamento_w)));
								
								if qt_reg_vigencia_w = 0 then	
									CALL Wheb_mensagem_pck.exibir_mensagem_abort(353672);
								end if;	
								
								if (ie_agendou_w = 'N') then	
									--- Adiciona um dia para que agende o dia seguinte ao feriado/bloqueio
									dt_tratamento_w	:= dt_tratamento_w + 1;
								else
									---Aplica intervalo para achar proximo dia aplicacao
									dt_tratamento_w	:= dt_tratamento_w + qt_inter_insercoes_w + 1;	
								end if;
												
								ie_dia_semana_w		:= rxt_obter_cod_dia_semana(dt_tratamento_w);
								
								select CASE WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=0 THEN  'N' WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=1 THEN  'S' END
								into STRICT ie_dia_trabalho_w
								;
								
								--- Busca regra de agenda do equipamento
								select	coalesce(max(dt_dia_semana),9),
										coalesce(max(ie_feriado),'N'),
										max(dt_final_vigencia)
								into STRICT	dt_dia_semana_w,
										ie_feriado_w,
										dt_final_vigencia_w
								from	rxt_equip_regra_agenda
								where	nr_seq_equipamento	= nr_seq_equipamento_p
								and	to_char(hr_inicial,'hh24:mi:ss') 	< to_char(dt_tratamento_w,'hh24:mi:ss')
								and	to_char(hr_final,'hh24:mi:ss')   	> to_char(dt_tratamento_w,'hh24:mi:ss')  
								AND	TO_CHAR(hr_inicial,'hh24:mi:ss')	< TO_CHAR(hr_final,'hh24:mi:ss') 
								AND	((coalesce(dt_inicio_vigencia::text, '') = '') 	OR (dt_inicio_vigencia	<= TRUNC(dt_tratamento_w))) 
								AND	((coalesce(dt_final_vigencia::text, '') = '') 	OR (dt_final_vigencia	>= TRUNC(dt_tratamento_w)))
								AND	((dt_dia_semana	= ie_dia_semana_w) 	OR (dt_dia_semana = 9 AND ie_dia_trabalho_w = 'S'));
								
								
								--- Se for dia de semana
								if (dt_dia_semana_w = 9) then	
									ie_dia_semana_w		:= rxt_obter_cod_dia_semana(dt_tratamento_w);				
									
									/* Dias de trabalho */

									while(ie_dia_semana_w in (7,1)) loop
										begin
											dt_tratamento_w := dt_tratamento_w + 1;
											
											select  pkg_date_utils.get_weekday(dt_tratamento_w)
											into STRICT  	ie_dia_semana_w
											;
										end;													
									end loop;
								else
								/* Seg, Ter, Qua, Qui, Sex, Sab e Dom */
											
									ie_dia_semana_w		:= rxt_obter_cod_dia_semana(dt_tratamento_w);

									while(dt_dia_semana_w <> ie_dia_semana_w) loop
										begin						
										dt_tratamento_w	:= dt_tratamento_w + 1;
																
										ie_dia_semana_w		:= rxt_obter_cod_dia_semana(dt_tratamento_w);
													
										select CASE WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=0 THEN  'N' WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=1 THEN  'S' END
										into STRICT ie_dia_trabalho_w
										;	
										
										select	coalesce(max(dt_dia_semana),9),
												coalesce(max(ie_feriado),'N'),
												max(dt_final_vigencia)
										into STRICT	dt_dia_semana_w,
												ie_feriado_w,
												dt_final_vigencia_w
										from	rxt_equip_regra_agenda
										where	nr_seq_equipamento	= nr_seq_equipamento_p
										and	to_char(hr_inicial,'hh24:mi:ss') 	< to_char(dt_tratamento_w,'hh24:mi:ss')
										and	to_char(hr_final,'hh24:mi:ss')   	> to_char(dt_tratamento_w,'hh24:mi:ss')  
										AND	TO_CHAR(hr_inicial,'hh24:mi:ss')	< TO_CHAR(hr_final,'hh24:mi:ss') 
										AND	((coalesce(dt_inicio_vigencia::text, '') = '') 	OR (dt_inicio_vigencia	<= TRUNC(dt_tratamento_w))) 
										AND	((coalesce(dt_final_vigencia::text, '') = '') 	OR (dt_final_vigencia	>= TRUNC(dt_tratamento_w)))
										AND	((dt_dia_semana	= ie_dia_semana_w) 	OR (dt_dia_semana = 9 AND ie_dia_trabalho_w = 'S'));
										
										end;													
									end loop;
										
								end if;
							end;													
							end loop;						
						end;
					end loop;
					close c08;			
				end;
			end loop;
			close c07;	
	elsif (ie_tipo_trat_w	<> 'R') then
		if (ie_considera_volume_w = 'N') then
			open c01;
			loop
			fetch c01 into	nr_seq_fase_w,
					qt_duracao_fase_w,
					qt_intervalo_w,
					ie_final_semana_w;
			EXIT WHEN NOT FOUND; /* apply on c01 */
				begin		
				qt_dia_trat_w	:= 0;	
				qt_reg_vigencia_w := -1;	
				while (qt_dia_trat_w < qt_duracao_fase_w AND qt_reg_vigencia_w <> 0)   loop
					begin		
					/* Gerar agendas para o equipamento */

					CALL rxt_gerar_agenda_equip(nr_seq_equipamento_p, dt_tratamento_w, 'N', nm_usuario_p);-- commit;
					
					/* Verifica se na data possui agenda */

					ie_gerar_agenda_w	:= rxt_obter_se_agenda_dia(nr_seq_equipamento_p, dt_tratamento_w, nr_seq_tratamento_p);
					
					/* Se possuir agenda no dia */

					if (ie_gerar_agenda_w = 'S') then			
						/* Verifica se agenda no feriado */

						if (ie_feriado_w = 'N') then
							/* Obter se dia tratamento e feriado */

							select	CASE WHEN obter_se_feriado(cd_estabelecimento_p, dt_tratamento_w)=0 THEN 'N'  ELSE 'S' END
							into STRICT	ie_dia_feriado_w
							;
						end if;
						
						select	CASE WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=0 THEN  'N' WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=1 THEN  'S' END
						into STRICT	ie_fim_sem_w
						;
						
						if	((ie_feriado_w = 'N' AND ie_dia_feriado_w = 'N') or (ie_feriado_w = 'S')) and (ie_fim_sem_w = 'S' or
							 	ie_final_semana_w = 'S') then				
							/* Gravar o agendamento no tratamento */

							ie_alter_plan_p := rxt_gerar_agenda_trat(nr_seq_tratamento_p, nr_seq_fase_w, nr_seq_equipamento_p, dt_tratamento_w, nm_usuario_p, ie_prox_hor_sobreposto_p, 0, cd_estabelecimento_p, qt_duracao_tratamento_p, 0, 0, ie_alter_plan_p);				
							qt_dia_trat_w	:= qt_dia_trat_w + 1;
						end if;				
					end if;

					select	count(*) qt_registros
						into STRICT qt_reg_vigencia_w
						from	rxt_equip_regra_agenda
						where	nr_seq_equipamento	= nr_seq_equipamento_p
						and	((coalesce(dt_final_vigencia::text, '') = '') 	OR (TRUNC(dt_final_vigencia)		>= TRUNC(dt_tratamento_w)));
						if qt_reg_vigencia_w = 0 then	
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(353672);
						end if;	
					
					
					if (dt_dia_semana_w = 9) then				
						/* Dias de trabalho */

						dt_tratamento_w	:= dt_tratamento_w + 1;						
					else
						/* Seg, Ter, Qua, Qui, Sex, Sab e Dom */

						dt_tratamento_w	:= dt_tratamento_w + 7;
						if (ie_fim_sem_w = 'N') and (ie_final_semana_w = 'N') then
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(854408);
						end if;
					end if;			
					end;
				end loop;	
				
				dt_tratamento_w := dt_tratamento_w + qt_intervalo_w;
				
				
				end;
			end loop;
			close c01;
		else
			open c02;
			loop
			fetch c02 into	
				nr_seq_volume_trat_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
				begin
				dt_tratamento_w := dt_tratamento_ww;
				open c03;
				loop
				fetch c03 into	
					nr_seq_fase_w,
					qt_duracao_fase_w,
					qt_intervalo_w,
					ie_final_semana_w;
				EXIT WHEN NOT FOUND; /* apply on c03 */
					begin		
					qt_dia_trat_w	:= 0;
					
					select	count(*)
					into STRICT	qt_dia_trat_w
					from	rxt_agenda a
					where	a.nr_seq_tratamento = nr_seq_tratamento
					and ie_status_agenda not in ('C','E')
					and	exists (SELECT	1
							from	rxt_agenda_fase x
							where	x.nr_seq_agenda_rxt = a.nr_sequencia
							and	x.nr_seq_fase = nr_seq_fase_w);
					
					
					qt_reg_vigencia_w := -1;
					while (qt_dia_trat_w < qt_duracao_fase_w AND qt_reg_vigencia_w <> 0)  loop
						begin		
						/* Gerar agendas para o equipamento */
																
						CALL rxt_gerar_agenda_equip(nr_seq_equipamento_p, dt_tratamento_w, 'N', nm_usuario_p);
						
						/* Verifica se na data possui agenda */

						ie_gerar_agenda_w	:= rxt_obter_se_agenda_dia(nr_seq_equipamento_p, dt_tratamento_w, nr_seq_tratamento_p);
						
						/* Se possuir agenda no dia */

						if (ie_gerar_agenda_w = 'S') then			
							/* Verifica se agenda no feriado */

							if (ie_feriado_w = 'N') then
								/* Obter se dia tratamento e feriado */

								select	CASE WHEN obter_se_feriado(cd_estabelecimento_p, dt_tratamento_w)=0 THEN 'N'  ELSE 'S' END
								into STRICT	ie_dia_feriado_w
								;
							end if;
							
							select	CASE WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=0 THEN  'N' WHEN pkg_date_utils.is_business_day(dt_tratamento_w)=1 THEN  'S' END
							into STRICT	ie_fim_sem_w
							;
							
							if	((ie_feriado_w = 'N' AND ie_dia_feriado_w = 'N') or (ie_feriado_w = 'S')) and (ie_fim_sem_w = 'S' or
							 	ie_final_semana_w = 'S')then				
								/* Gravar o agendamento no tratamento */

								ie_alter_plan_p := rxt_gerar_agenda_trat(nr_seq_tratamento_p, nr_seq_fase_w, nr_seq_equipamento_p, dt_tratamento_w, nm_usuario_p, ie_prox_hor_sobreposto_p, nr_seq_volume_trat_w, cd_estabelecimento_p, qt_duracao_tratamento_p, 0, 0, ie_alter_plan_p);
								qt_dia_trat_w	:= qt_dia_trat_w + 1;
							end if;				
						end if;
						
						select	count(*) qt_registros
							into STRICT qt_reg_vigencia_w
							from	rxt_equip_regra_agenda
							where	nr_seq_equipamento	= nr_seq_equipamento_p
							and	((coalesce(dt_final_vigencia::text, '') = '') 	OR (TRUNC(dt_final_vigencia)		>= TRUNC(dt_tratamento_w)));
							if qt_reg_vigencia_w = 0 then	
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(353672);
							end if;						
							
						if (dt_dia_semana_w = 9) then				
							/* Dias de trabalho */

							dt_tratamento_w	:= dt_tratamento_w + 1;						
						else
							/* Seg, Ter, Qua, Qui, Sex, Sab e Dom */

							dt_tratamento_w	:= dt_tratamento_w + 7;
							if (ie_fim_sem_w = 'N') and (ie_final_semana_w = 'N') then
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(854408);
							end if;
						end if;	

						end;
							
					end loop;	
					dt_tratamento_w := dt_tratamento_w + qt_intervalo_w;
					end;
				end loop;
				close c03;
				end;
			end loop;
			close c02;
		end if;	
	else
		if (ie_considera_volume_w = 'N') then
			open c04;
			loop
			fetch c04 into	nr_seq_campo_w,
					qt_duracao_campo_w,
					qt_intervalo_w;
			EXIT WHEN NOT FOUND; /* apply on c04 */
				begin		
				qt_dia_trat_w	:= 0;		
				qt_reg_vigencia_w := -1;
				while (qt_dia_trat_w < qt_duracao_campo_w AND qt_reg_vigencia_w <> 0) loop
					begin		
					/* Gerar agendas para o equipamento */

					CALL rxt_gerar_agenda_equip(nr_seq_equipamento_p, dt_tratamento_w, 'N', nm_usuario_p);-- commit;
					
					/* Verifica se na data possui agenda */

					ie_gerar_agenda_w	:= rxt_obter_se_agenda_dia(nr_seq_equipamento_p, dt_tratamento_w, nr_seq_tratamento_p);
					
					/* Se possuir agenda no dia */

					if (ie_gerar_agenda_w = 'S') then			
						/* Verifica se agenda no feriado */

						if (ie_feriado_w = 'N') then
							/* Obter se dia tratamento e feriado */

							select	CASE WHEN obter_se_feriado(cd_estabelecimento_p, dt_tratamento_w)=0 THEN 'N'  ELSE 'S' END
							into STRICT	ie_dia_feriado_w
							;
						end if;
						
						if	((ie_feriado_w = 'N' AND ie_dia_feriado_w = 'N') or (ie_feriado_w = 'S')) then				
							/* Gravar o agendamento no tratamento */

							CALL rxt_gerar_agenda_trat_roentgen(nr_seq_tratamento_p, nr_seq_campo_w, nr_seq_equipamento_p, dt_tratamento_w, nm_usuario_p, ie_prox_hor_sobreposto_p,0,cd_estabelecimento_p);				
							qt_dia_trat_w	:= qt_dia_trat_w + 1;
						end if;				
					end if;

					select	count(*) qt_registros
						into STRICT qt_reg_vigencia_w
						from	rxt_equip_regra_agenda
						where	nr_seq_equipamento	= nr_seq_equipamento_p
						and	((coalesce(dt_final_vigencia::text, '') = '') 	OR (TRUNC(dt_final_vigencia)		>= TRUNC(dt_tratamento_w)));
						if qt_reg_vigencia_w = 0 then	
							CALL Wheb_mensagem_pck.exibir_mensagem_abort(353672);
						end if;	
					
					if (dt_dia_semana_w = 9) then				
						/* Dias de trabalho */

						dt_tratamento_w	:= dt_tratamento_w + 1;						
					else
						/* Seg, Ter, Qua, Qui, Sex, Sab e Dom */

						dt_tratamento_w	:= dt_tratamento_w + 7;
					end if;			
					end;
				end loop;	
				
				dt_tratamento_w := dt_tratamento_w + qt_intervalo_w;
				
				end;
			end loop;
			close c04;
		else
			open c05;
			loop
			fetch c05 into	
				nr_seq_volume_trat_w;
			EXIT WHEN NOT FOUND; /* apply on c05 */
				begin
				dt_tratamento_w := dt_tratamento_ww;
				open c06;
				loop
				fetch c06 into	
					nr_seq_campo_w,
					qt_duracao_campo_w,
					qt_intervalo_w;
				EXIT WHEN NOT FOUND; /* apply on c06 */
					begin		
					qt_dia_trat_w	:= 0;	
					qt_reg_vigencia_w := -1;
					while (qt_dia_trat_w < qt_duracao_campo_w AND qt_reg_vigencia_w <> 0) loop
						begin		
						/* Gerar agendas para o equipamento */

						CALL rxt_gerar_agenda_equip(nr_seq_equipamento_p, dt_tratamento_w, 'N', nm_usuario_p); --commit;
						
						/* Verifica se na data possui agenda */

						ie_gerar_agenda_w	:= rxt_obter_se_agenda_dia(nr_seq_equipamento_p, dt_tratamento_w, nr_seq_tratamento_p);
						
						/* Se possuir agenda no dia */

						if (ie_gerar_agenda_w = 'S') then			
							/* Verifica se agenda no feriado */

							if (ie_feriado_w = 'N') then
								/* Obter se dia tratamento e feriado */

								select	CASE WHEN obter_se_feriado(cd_estabelecimento_p, dt_tratamento_w)=0 THEN 'N'  ELSE 'S' END
								into STRICT	ie_dia_feriado_w
								;
							end if;
							
							if	((ie_feriado_w = 'N' AND ie_dia_feriado_w = 'N') or (ie_feriado_w = 'S')) then				
								/* Gravar o agendamento no tratamento */

								CALL rxt_gerar_agenda_trat_roentgen(nr_seq_tratamento_p, nr_seq_campo_w, nr_seq_equipamento_p, dt_tratamento_w, nm_usuario_p, ie_prox_hor_sobreposto_p,nr_seq_volume_trat_w,cd_estabelecimento_p);				
								qt_dia_trat_w	:= qt_dia_trat_w + 1;
							end if;				
						end if;
					
						select	count(*) qt_registros
							into STRICT qt_reg_vigencia_w
							from	rxt_equip_regra_agenda
							where	nr_seq_equipamento	= nr_seq_equipamento_p
							and	((coalesce(dt_final_vigencia::text, '') = '') 	OR (TRUNC(dt_final_vigencia)		>= TRUNC(dt_tratamento_w)));
							if qt_reg_vigencia_w = 0 then	
								CALL Wheb_mensagem_pck.exibir_mensagem_abort(353672);
							end if;	

					
						if (dt_dia_semana_w = 9) then				
							/* Dias de trabalho */

							dt_tratamento_w	:= dt_tratamento_w + 1;						
						else
							/* Seg, Ter, Qua, Qui, Sex, Sab e Dom */

							dt_tratamento_w	:= dt_tratamento_w + 7;
						end if;			
						end;
					end loop;	
					dt_tratamento_w := dt_tratamento_w + qt_intervalo_w;
					end;
				end loop;
				close c06;
				end;
			end loop;
			close c05;
		end if;	
	end if;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE rxt_gerar_planejamento ( nr_seq_tratamento_p bigint, nr_seq_equipamento_p bigint, dt_inicio_tratamento_p timestamp, qt_duracao_tratamento_p bigint, nr_seq_fases_p text, nm_usuario_p text, ie_prox_hor_sobreposto_p text, cd_estabelecimento_p bigint, ie_somente_pendente_p text default 'N', ie_alter_plan_p INOUT text DEFAULT NULL) FROM PUBLIC;

