-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE vincular_titulo_pagar_nf ( nr_sequencia_p bigint, nr_titulo_p bigint, nm_usuario_p text, ie_consiste_vencto_p text, ie_altera_valor_p text, ds_consistencia_p INOUT text) AS $body$
DECLARE


ds_vencimentos_w		varchar(4000);
ds_irrelevante_w		varchar(4000);
ds_observacao_w			varchar(255);
ie_gerar_tributos_w		varchar(255);
ie_situacao_w			varchar(255);
cd_tipo_servico_w		varchar(100) := '';
nr_nota_fiscal_w		varchar(20);
cd_conta_contabil_w		varchar(20);
cd_darf_w			varchar(10);
cd_variacao_w			varchar(2);
ie_periodicidade_w		varchar(1);
ie_gerar_cc_w			varchar(1);
ie_alterar_venc_vinc_nf_w	varchar(1);
cd_cgc_w			varchar(14);
cd_pessoa_fisica_w		varchar(10);
vl_desconto_w			double precision;
vl_rateio_w			double precision;
vl_trib_w			double precision;
vl_rateio_total_w		double precision;
vl_total_nota_w			double precision;
vl_titulo_w			double precision;
vl_base_adic_w			double precision;
vl_base_calculo_w		double precision;
vl_base_nao_retido_w		double precision;
vl_reducao_w			double precision;
vl_desc_base_w			double precision;
vl_trib_adic_w			double precision;
vl_nao_retido_w			double precision;
vl_imposto_w			double precision;
vl_saldo_titulo_w		double precision;
nr_seq_alt_venc_w		bigint;
qt_vencimentos_w		bigint;
nr_seq_alt_valor_w		bigint;
cd_conta_financ_w		bigint;
cd_tributo_w			bigint;
nr_seq_imposto_w		bigint;
cd_cond_pagto_w			bigint;
cd_cond_pagto_trib_w		bigint;
nr_seq_classif_w		bigint;
cd_natureza_operacao_w		bigint;
cd_operacao_nf_w		bigint;
cd_centro_custo_w		integer;
cd_estabelecimento_w		smallint;
count_w				smallint;
dt_vencimento_w			timestamp	:= clock_timestamp();
dt_venc_titulo_w		timestamp;
dt_venc_nota_w			timestamp;
ie_tipo_titulo_operacao_w	varchar(2);
ie_pago_prev_w			varchar(1);
pr_imposto_w			double precision;
nr_seq_interno_w		bigint;
nr_seq_classe_w			bigint;
nr_seq_trib_cp_w		bigint;
ie_origem_titulo_w		titulo_pagar.ie_origem_titulo%type;
qt_gerar_w                      integer;

C01 CURSOR FOR
SELECT	b.cd_condicao_pagamento,
	a.cd_conta_financ,
	a.cd_darf,
	a.cd_tributo,
	a.cd_variacao,
	a.ie_periodicidade,
	a.vl_base_adic,
	a.vl_base_calculo,
	a.vl_base_nao_retido,
	a.vl_reducao,
	a.vl_reducao_base,
	a.vl_trib_adic,
	a.vl_trib_nao_retido,
	a.vl_tributo
from	nota_fiscal b,
	nota_fiscal_trib a
where	a.nr_sequencia	= nr_sequencia_p
and	a.nr_sequencia	= b.nr_sequencia;

C02 CURSOR FOR
SELECT	a.cd_centro_custo,
	a.cd_conta_contabil,
	a.cd_conta_financ,
	a.vl_desconto,
	coalesce(a.vl_rateio,0)
from	NOTA_FISCAL_ITEM_RATEIO a
where	a.nr_seq_nota	= nr_sequencia_p;

c03 CURSOR FOR
SELECT	a.cd_conta_financ,
	a.cd_darf,
	a.cd_tributo,
	a.cd_variacao,
	a.ie_pago_prev,
	a.ie_periodicidade,
	a.pr_imposto,
	a.vl_base_adic,
	a.vl_base_calculo,
	a.vl_base_nao_retido,
	a.vl_imposto,
	a.vl_reducao,
	a.vl_trib_adic
from	titulo_pagar_imposto a
where	a.nr_titulo	= nr_titulo_p;


BEGIN
select	substr(a.nr_nota_fiscal,1,20),
	a.vl_total_nota,
	a.cd_tipo_servico,
	a.cd_natureza_operacao,
	a.cd_operacao_nf,
	b.ie_tipo_titulo
into STRICT	nr_nota_fiscal_w,
	vl_total_nota_w,
	cd_tipo_servico_w,
	cd_natureza_operacao_w,
	cd_operacao_nf_w,
	ie_tipo_titulo_operacao_w	
FROM nota_fiscal a
LEFT OUTER JOIN operacao_nota b ON (a.cd_operacao_nf = b.cd_operacao_nf)
WHERE a.nr_sequencia 		= nr_sequencia_p;

update	titulo_pagar
set	dt_atualizacao		= clock_timestamp(),
	nm_usuario		= nm_usuario_p,
	nr_seq_nota_fiscal	= nr_sequencia_p,
	nr_documento		= nr_nota_fiscal_w,
	ie_tipo_titulo		= coalesce(ie_tipo_titulo_operacao_w,ie_tipo_titulo)
where	nr_titulo		= nr_titulo_p;

select	count(*)
into STRICT	count_w
from	titulo_pagar_imposto
where	nr_titulo = nr_titulo_p;

if (count_w <> 0) then
	update	titulo_pagar
	set	nr_documento		= nr_nota_fiscal_w,
		dt_atualizacao		= clock_timestamp(),
		nm_usuario		= nm_usuario_p
	where	nr_titulo_original	= nr_titulo_p;
end if;

update	nota_fiscal
set	ds_observacao = substr(Wheb_mensagem_pck.get_texto(303979) ||' = ' || nr_titulo_p || chr(10) || substr(ds_observacao,1,3950),1,4000)
where	nr_sequencia = nr_sequencia_p;

CALL gerar_historico_nota_fiscal(nr_sequencia_p, nm_usuario_p, '5', Wheb_mensagem_pck.get_texto(303979) || ' = ' || nr_titulo_p);

select	coalesce(vl_titulo,0),
	cd_estabelecimento,
	ie_situacao,
	cd_pessoa_fisica,
	cd_cgc,
	nr_seq_classe,
	ie_origem_titulo
into STRICT	vl_titulo_w,
	cd_estabelecimento_w,
	ie_situacao_w,
	cd_pessoa_fisica_w,
	cd_cgc_w,
	nr_seq_classe_w,
	ie_origem_titulo_w
from	titulo_pagar
where	nr_titulo	= nr_titulo_p;

select	coalesce(ie_alterar_venc_vinc_nf, 'S')
into STRICT	ie_alterar_venc_vinc_nf_w
from	parametros_contas_pagar
where	cd_estabelecimento	= cd_estabelecimento_w;

ie_gerar_tributos_w := obter_param_usuario(40, 141, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_tributos_w);

if (ie_gerar_tributos_w = 'S') then
	open C01;
	loop
	fetch C01 into
		cd_cond_pagto_w,
		cd_conta_financ_w,
		cd_darf_w,
		cd_tributo_w,
		cd_variacao_w,
		ie_periodicidade_w,
		vl_base_adic_w,
		vl_base_calculo_w,
		vl_base_nao_retido_w,
		vl_reducao_w,
		vl_desc_base_w,
		vl_trib_adic_w,
		vl_nao_retido_w,
		vl_imposto_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */		
		
		/*lhalves OS 209410 em 25/05/2010 - buscar o vencimento do tributo de acordo com o cadastro do mesmo.*/

		SELECT * FROM obter_dados_trib_tit_pagar(	cd_tributo_w, cd_estabelecimento_w, cd_cgc_w, cd_pessoa_fisica_w, ds_irrelevante_w, ds_irrelevante_w, cd_cond_pagto_trib_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, clock_timestamp(), ds_irrelevante_w, ds_irrelevante_w, 'N', cd_natureza_operacao_w, cd_tipo_servico_w, null, null, null, nr_seq_trib_cp_w, cd_operacao_nf_w, 0, ds_irrelevante_w, ds_irrelevante_w, vl_base_calculo_w, 'N', nr_seq_classe_w, ie_origem_titulo_w, null, null) INTO STRICT ds_irrelevante_w, ds_irrelevante_w, cd_cond_pagto_trib_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, ds_irrelevante_w, nr_seq_trib_cp_w, ds_irrelevante_w, ds_irrelevante_w;		

		dt_vencimento_w	:= clock_timestamp();
		SELECT * FROM calcular_vencimento(cd_estabelecimento_w, coalesce(cd_cond_pagto_trib_w,cd_cond_pagto_w), dt_vencimento_w, qt_vencimentos_w, ds_vencimentos_w) INTO STRICT qt_vencimentos_w, ds_vencimentos_w;
		
		if (qt_vencimentos_w = 1) then
			dt_vencimento_w	:= to_date(substr(ds_vencimentos_w,1,10),'dd/mm/yyyy');
		end if;

		select	nextval('titulo_pagar_imposto_seq')
		into STRICT	nr_seq_imposto_w
		;

		insert into titulo_pagar_imposto(cd_cond_pagto,		
			cd_conta_financ,
			cd_darf,
			cd_tributo,
			cd_variacao,
			dt_atualizacao,
			dt_imposto,
			ie_pago_prev,
			ie_periodicidade,
			ie_vencimento,
			nm_usuario,
			nr_sequencia,
			nr_titulo,
			vl_base_adic,
			vl_base_calculo,
			vl_base_nao_retido,
			vl_reducao,
			vl_desc_base,
			vl_trib_adic,
			vl_nao_retido,
			vl_imposto,
			nr_seq_trib_cp)
		values (cd_cond_pagto_w,
			cd_conta_financ_w,
			cd_darf_w,
			cd_tributo_w,
			cd_variacao_w,
			clock_timestamp(),
			dt_vencimento_w,
			'V',
			ie_periodicidade_w,
			'V',
			nm_usuario_p,
			nr_seq_imposto_w,
			nr_titulo_p,
			vl_base_adic_w,
			vl_base_calculo_w,
			vl_base_nao_retido_w,
			vl_reducao_w,
			vl_desc_base_w,
			vl_trib_adic_w,
			vl_nao_retido_w,
			vl_imposto_w,
			nr_seq_trib_cp_w);

	commit;
	
	select count(*)
	into STRICT   qt_gerar_w
	from   titulo_pagar
	where  cd_tributo = cd_tributo_w
	and    nr_seq_nota_fiscal = nr_sequencia_p;
	
	if (qt_gerar_w = 0) then
	
		CALL Gerar_Titulo_Tributo(nr_seq_imposto_w, nm_usuario_p);
	
	end if;

	end loop;
	close C01;
elsif (ie_gerar_tributos_w	= 'T') then

	open	c03;
	loop
	fetch	c03 into
		cd_conta_financ_w,
		cd_darf_w,
		cd_tributo_w,
		cd_variacao_w,
		ie_pago_prev_w,
		ie_periodicidade_w,
		pr_imposto_w,
		vl_base_adic_w,
		vl_base_calculo_w,
		vl_base_nao_retido_w,
		vl_imposto_w,
		vl_reducao_w,
		vl_trib_adic_w;
	EXIT WHEN NOT FOUND; /* apply on c03 */

		select	nextval('nota_fiscal_trib_seq')
		into STRICT	nr_seq_interno_w
		;

		insert	into nota_fiscal_trib(cd_conta_financ,
			cd_darf,
			cd_tributo,
			cd_variacao,
			dt_atualizacao,
			dt_atualizacao_nrec,
			ie_pago_prev,
			ie_periodicidade,
			nm_usuario,
			nm_usuario_nrec,
			nr_seq_interno,
			nr_sequencia,
			tx_tributo,
			vl_base_adic,
			vl_base_calculo,
			vl_base_nao_retido,
			vl_reducao,
			vl_trib_adic,
			vl_trib_nao_retido,
			vl_tributo)
		values (cd_conta_financ_w,
			cd_darf_w,
			cd_tributo_w,
			cd_variacao_w,
			clock_timestamp(),
			clock_timestamp(),
			ie_pago_prev_w,
			ie_periodicidade_w,
			nm_usuario_p,
			nm_usuario_p,
			nr_seq_interno_w,
			nr_sequencia_p,
			pr_imposto_w,
			vl_base_adic_w,
			vl_base_calculo_w,
			vl_base_nao_retido_w,
			vl_reducao_w,
			vl_trib_adic_w,
			vl_base_nao_retido_w,
			vl_imposto_w);

	end	loop;
	close	c03;

end if;

if (vl_total_nota_w <> vl_titulo_w) and
	((ie_altera_valor_p = 'S') or (ie_altera_valor_p = 'A' AND ie_situacao_w = 'A')) then
	select	coalesce(max(nr_sequencia),0)
	into STRICT	nr_seq_alt_valor_w
	from	titulo_pagar_alt_valor
	where	nr_titulo	= nr_titulo_p;
	
	nr_seq_alt_valor_w	:= nr_seq_alt_valor_w + 1;

	select	Obter_Saldo_Titulo_Pagar(nr_titulo,clock_timestamp())
	into STRICT	vl_saldo_titulo_w
	from	titulo_pagar
	where	nr_titulo	= nr_titulo_p;

	begin
	insert into titulo_pagar_alt_valor(nr_titulo,
		nr_sequencia, 
		dt_alteracao, 
		vl_anterior, 
		vl_alteracao, 
		cd_moeda, 
		dt_atualizacao, 
		nm_usuario, 
		nr_lote_contabil, 
		ds_observacao, 
		nr_seq_trans_fin, 
		nr_externo, 
		nr_seq_motivo )	 
	values (nr_titulo_p,
		nr_seq_alt_valor_w, 
		clock_timestamp(), 
		vl_saldo_titulo_w, 
		vl_total_nota_w,
		1, 
		clock_timestamp(),
		nm_usuario_p,
		0, 
		Wheb_mensagem_pck.get_texto(303980),
		null,
		null, 
		null);
		
	CALL Atualizar_Saldo_Tit_Pagar(nr_titulo_p,nm_usuario_p);
	CALL Gerar_W_Tit_Pag_imposto(nr_titulo_p, nm_usuario_p);
	
	CALL atualizar_tit_pagar_classif(nr_titulo_p,'S' ,nm_usuario_p);	
	end;
end if;

select	count(*)
into STRICT	count_w
from	nota_fiscal_venc
where	nr_sequencia = nr_sequencia_p;

if (count_w = 1) then
	select	dt_vencimento_atual
	into STRICT	dt_venc_titulo_w
	from	titulo_pagar
	where	nr_titulo = nr_titulo_p;

	count_w := 0;
	
	select	dt_vencimento
	into STRICT	dt_venc_nota_w
	from	nota_fiscal_venc
	where	nr_sequencia		 = nr_sequencia_p;

	if (dt_venc_nota_w <> dt_venc_titulo_w) then
		ds_observacao_w := Wheb_mensagem_pck.get_texto(303981) || ' ' || nr_sequencia_p;

		if (ie_consiste_vencto_p = 'B') then
			CALL wheb_mensagem_pck.exibir_mensagem_abort(189399);
			--r aise_application_error(-20111,'Sem permissão para vincular o título, verifique parâmetro 43');
		elsif (ie_consiste_vencto_p = 'S') then
			ds_consistencia_p := Wheb_mensagem_pck.get_texto(303982);
		elsif (ie_consiste_vencto_p = 'A') then
			if (ie_alterar_venc_vinc_nf_w = 'S') then
				CALL alterar_venc_titulo(	nr_titulo_p,
							dt_venc_nota_w,
							'CP',
							null,
							null,
							null,
							null,
							null,
							null,
							nm_usuario_p,
							ds_observacao_w);

				select	max(nr_sequencia)
				into STRICT	nr_seq_alt_venc_w
				from	titulo_pagar_alt_venc
				where	nr_titulo	= nr_titulo_p;

				CALL atualizar_venc_titulo_imposto(	nr_titulo_p,
								nr_seq_alt_venc_w,
								nm_usuario_p);
			end if;

			ds_consistencia_p := Wheb_mensagem_pck.get_texto(303983);
		end if;
	end if;

end if;

ie_gerar_cc_w := obter_param_usuario(40, 167, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_cc_w);

if (ie_gerar_cc_w	= 'S') then
	select	count(*)
	into STRICT	count_w
	from	nota_fiscal_item a
	where	a.nr_sequencia	= nr_sequencia_p;

	if (count_w > 0) then
		delete	from titulo_pagar_classif
		where	nr_titulo	= nr_titulo_p;

		insert	into titulo_pagar_classif(cd_centro_custo,
			cd_conta_contabil,
			dt_atualizacao,
			nm_usuario,
			nr_contrato,
			nr_seq_conta_financ,
			nr_sequencia,
			nr_titulo,
			vl_desconto,
			vl_titulo)
		SELECT	a.cd_centro_custo,
			a.cd_conta_contabil,
			clock_timestamp(),
			nm_usuario_p,
			a.nr_contrato,
			a.nr_seq_conta_financ,
			(SELECT	coalesce(max(x.nr_sequencia),0) + 1
			from	titulo_pagar_classif x
			where	x.nr_titulo	= nr_titulo_p),
			nr_titulo_p,
			a.vl_desconto,
			coalesce(a.vl_total_item_nf,0)
		from	nota_fiscal_item a
		where	a.nr_sequencia	= nr_sequencia_p;
	end if;
elsif (ie_gerar_cc_w	= 'R') then
	select	count(*)
	into STRICT	count_w
	from	NOTA_FISCAL_ITEM_RATEIO a
	where	a.nr_seq_nota	= nr_sequencia_p;
	
	if (count_w > 0) then
		delete	from titulo_pagar_classif
		where	nr_titulo	= nr_titulo_p;

		nr_seq_classif_w	:= 1;
		
		open C02;
		loop
		fetch C02 into
			cd_centro_custo_w,
			cd_conta_contabil_w,
			cd_conta_financ_w,
			vl_desconto_w,
			vl_rateio_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			select	coalesce(sum(a.vl_tributo),0)
			into STRICT	vl_trib_w
			from	nota_fiscal b,
				nota_fiscal_trib a
			where	a.nr_sequencia	= nr_sequencia_p
			and	a.nr_sequencia	= b.nr_sequencia;

			select	coalesce(sum(a.vl_rateio),0)
			into STRICT	vl_rateio_total_w
			from	NOTA_FISCAL_ITEM_RATEIO a
			where	a.nr_seq_nota	= nr_sequencia_p;

			vl_rateio_w	:= vl_rateio_w - ((vl_trib_w / vl_rateio_total_w) * vl_rateio_w);

			insert into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_sequencia,
				nr_titulo,
				vl_desconto,
				vl_titulo)
			values (cd_centro_custo_w,
				cd_conta_contabil_w,
				clock_timestamp(),
				nm_usuario_p,
				null,
				cd_conta_financ_w,
				nr_seq_classif_w,
				nr_titulo_p,
				vl_desconto_w,
				vl_rateio_w);

			nr_seq_classif_w	:= nr_seq_classif_w + 1;

		end loop;
		close C02;
	end if;
elsif (ie_gerar_cc_w	= 'A') then	

	select	count(*)
	into STRICT	count_w
	from	NOTA_FISCAL_ITEM_RATEIO a
	where	a.nr_seq_nota	= nr_sequencia_p;
	
	if (count_w > 0) then
		delete	from titulo_pagar_classif
		where	nr_titulo	= nr_titulo_p;

		nr_seq_classif_w	:= 1;
		
		open C02;
		loop
		fetch C02 into
			cd_centro_custo_w,
			cd_conta_contabil_w,
			cd_conta_financ_w,
			vl_desconto_w,
			vl_rateio_w;
		EXIT WHEN NOT FOUND; /* apply on C02 */

			select	coalesce(sum(a.vl_tributo),0)
			into STRICT	vl_trib_w
			from	nota_fiscal b,
				nota_fiscal_trib a
			where	a.nr_sequencia	= nr_sequencia_p
			and	a.nr_sequencia	= b.nr_sequencia;

			select	coalesce(sum(a.vl_rateio),0)
			into STRICT	vl_rateio_total_w
			from	NOTA_FISCAL_ITEM_RATEIO a
			where	a.nr_seq_nota	= nr_sequencia_p;

			vl_rateio_w	:= vl_rateio_w - ((vl_trib_w / vl_rateio_total_w) * vl_rateio_w);

			insert into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_sequencia,
				nr_titulo,
				vl_desconto,
				vl_titulo)
			values (cd_centro_custo_w,
				cd_conta_contabil_w,
				clock_timestamp(),
				nm_usuario_p,
				null,
				cd_conta_financ_w,
				nr_seq_classif_w,
				nr_titulo_p,
				vl_desconto_w,
				vl_rateio_w);

			nr_seq_classif_w	:= nr_seq_classif_w + 1;

		end loop;
		close C02;
	elsif (count_w = 0) then
	
		select	count(*)
		into STRICT	count_w
		from	nota_fiscal_item a
		where	a.nr_sequencia	= nr_sequencia_p;

		if (count_w > 0) then
			delete	from titulo_pagar_classif
			where	nr_titulo	= nr_titulo_p;

			insert	into titulo_pagar_classif(cd_centro_custo,
				cd_conta_contabil,
				dt_atualizacao,
				nm_usuario,
				nr_contrato,
				nr_seq_conta_financ,
				nr_sequencia,
				nr_titulo,
				vl_desconto,
				vl_titulo)
			SELECT	a.cd_centro_custo,
				a.cd_conta_contabil,
				clock_timestamp(),
				nm_usuario_p,
				a.nr_contrato,
				a.nr_seq_conta_financ,
				(SELECT	coalesce(max(x.nr_sequencia),0) + 1
				from	titulo_pagar_classif x
				where	x.nr_titulo	= nr_titulo_p),
				nr_titulo_p,
				a.vl_desconto,
				coalesce(a.vl_total_item_nf,0)
			from	nota_fiscal_item a
			where	a.nr_sequencia	= nr_sequencia_p;
		end if;
	end if;	
end if;

CALL VINCULAR_TIT_TRIB_REPASSE_NF(nr_sequencia_p, nm_usuario_p);

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE vincular_titulo_pagar_nf ( nr_sequencia_p bigint, nr_titulo_p bigint, nm_usuario_p text, ie_consiste_vencto_p text, ie_altera_valor_p text, ds_consistencia_p INOUT text) FROM PUBLIC;

