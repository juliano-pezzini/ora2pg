-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE atualizar_setor_prescr ( nr_prescricao_p bigint, cd_setor_atend_p bigint, nm_usuario_p text) AS $body$
DECLARE

				
VarIdentPrescrADEP_w		varchar(15);
ie_rep_adep_w			varchar(1);
ie_adep_param_w			varchar(15);
ie_adep_w			varchar(1)	:= 'N';
nr_sequencia_w			prescr_mat_hor.nr_sequencia%type;
cd_local_estoque_w		local_estoque.cd_local_estoque%type;
cd_estabelecimento_w		estabelecimento.cd_estabelecimento%type;
ds_horario_w			prescr_mat_hor.ds_horario%type;
nr_seq_material_w		prescr_material.nr_sequencia%type;
cd_local_w			local_estoque.cd_local_estoque%type;

c01 CURSOR FOR
	SELECT	nr_sequencia,
		cd_local_estoque,
		to_char(dt_horario,'hh24:mi'),
		nr_seq_material
	from	prescr_mat_hor
	where	nr_prescricao = nr_prescricao_p;


BEGIN

if (obter_funcao_ativa = 252) then
	VarIdentPrescrADEP_w := obter_param_usuario(252, 27, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarIdentPrescrADEP_w);
else
	VarIdentPrescrADEP_w := obter_param_usuario(7015, 62, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarIdentPrescrADEP_w);
end if;

if (nr_prescricao_p IS NOT NULL AND nr_prescricao_p::text <> '') and (cd_setor_atend_p IS NOT NULL AND cd_setor_atend_p::text <> '') then

	select	max(coalesce(ie_adep,obter_se_setor_adep(cd_setor_atendimento))),
		max(ie_adep)
	into STRICT	ie_rep_adep_w,
		ie_adep_param_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	if (cd_setor_atend_p > 0) then
		select	coalesce(max(ie_adep),'N')
		into STRICT	ie_rep_adep_w
		from	setor_atendimento
		where	cd_setor_atendimento = cd_setor_atend_p;
	end if;

	if (VarIdentPrescrADEP_w = 'DS') then
		ie_adep_w := ie_rep_adep_w;
	elsif (VarIdentPrescrADEP_w = 'NV') then
		ie_adep_w := 'N';
	elsif (VarIdentPrescrADEP_w = 'SV') then
		ie_adep_w := 'S';
	elsif (VarIdentPrescrADEP_w = 'PV') or (VarIdentPrescrADEP_w = 'PNV') then
		ie_adep_w := ie_adep_param_w;
	end if;

	update	prescr_medica
	set	cd_setor_atendimento 	= cd_setor_atend_p,
		ie_adep			= ie_adep_w,
		nm_usuario		= nm_usuario_p,
		dt_atualizacao		= clock_timestamp()
	where	nr_prescricao		= nr_prescricao_p;
	
	begin
	select	cd_estabelecimento
	into STRICT	cd_estabelecimento_w
	from	prescr_medica
	where	nr_prescricao = nr_prescricao_p;
	
	open c01;
	loop
	fetch c01 into
		nr_sequencia_w,
		cd_local_estoque_w,
		ds_horario_w,
		nr_seq_material_w;
	EXIT WHEN NOT FOUND; /* apply on c01 */
		begin
		
		select	cd_local_estoque
		into STRICT	cd_local_w
		from	prescr_material
		where	nr_sequencia = nr_seq_material_w
		and	nr_prescricao = nr_prescricao_p;
		
		update	prescr_mat_hor
		set	nr_seq_turno = Obter_turno_horario_prescr(cd_estabelecimento_w,cd_setor_atend_p,ds_horario_w,coalesce(cd_local_estoque_w,cd_local_w))
		where	nr_sequencia = nr_sequencia_w;
		
		end;
	end loop;
	close c01;
	exception
	when others then
		null;
	end;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE atualizar_setor_prescr ( nr_prescricao_p bigint, cd_setor_atend_p bigint, nm_usuario_p text) FROM PUBLIC;

