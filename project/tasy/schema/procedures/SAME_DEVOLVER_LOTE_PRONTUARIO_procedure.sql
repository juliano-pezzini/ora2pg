-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE same_devolver_lote_prontuario ( nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text, cd_estabelecimento_p bigint) AS $body$
DECLARE

 
/* 
ie_acao_p 
 'D' = Devolução 
 'E' = Desfazer devolução 
*/
 
											 
nr_seq_pront_w			bigint;
cd_pessoa_fisica_w		varchar(10);
cd_setor_atendimento_w		integer;
nr_seq_solic_w			bigint;
nr_seq_solic_pront_w		bigint;
ds_parametro_w			varchar(10) := obter_valor_param_usuario(941,103,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p);

ie_status_na_devolucao_w	varchar(10) := coalesce(obter_valor_param_usuario(941,82,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'D');
ie_armazena_na_devolucao_w	varchar(10) := coalesce(obter_valor_param_usuario(941,234,obter_perfil_ativo,nm_usuario_p,cd_estabelecimento_p),'S');

/*Solicitações do lote*/
 
C01 CURSOR FOR 
	SELECT	distinct nr_sequencia 
	from	same_solic_pront 
	where	nr_seq_lote	= nr_seq_lote_p 
	and	((ie_status('E','R') and ie_acao_p = 'D') or (ie_status = 'D' and ie_acao_p = 'E')) 
	and	((ds_parametro_w = 'N') or (cd_estabelecimento = cd_estabelecimento_p));

/*Envelopes da solicitação*/
 
C02 CURSOR FOR 
	SELECT	distinct nr_sequencia, 
		nr_seq_prontuario 
	from	same_solic_pront_envelope 
	where	nr_seq_solic = nr_seq_solic_w 
	and	((coalesce(dt_devolucao::text, '') = '' and ie_acao_p = 'D') or (ie_acao_p = 'E' and (dt_devolucao IS NOT NULL AND dt_devolucao::text <> '')));


BEGIN 
 
/*select	nvl(vl_parametro,vl_parametro_padrao) 
into	ds_parametro_w 
from	funcao_parametro 
where	cd_funcao = 0 
and	nr_sequencia = 120;*/
 
 
select	substr(obter_pessoa_fisica_usuario(nm_usuario_p, 'C'),1,10), 
	obter_setor_usuario(nm_usuario_p) 
into STRICT	cd_pessoa_fisica_w, 
	cd_setor_atendimento_w
;
 
if (ie_acao_p = 'E') then 
	select 	coalesce(max(a.nr_seq_prontuario),0) 
	into STRICT	nr_seq_pront_w 
	from	same_solic_pront_envelope a, 
		same_solic_pront b, 
		same_solic_pront_lote c, 
		same_prontuario d 
	where	b.nr_sequencia = a.nr_seq_solic 
	and	b.nr_seq_lote = c.nr_sequencia 
	and	b.nr_seq_lote = nr_seq_lote_p 
	and	a.nr_seq_prontuario = d.nr_sequencia 
	and	d.ie_status <> '1' 
	and	((ds_parametro_w = 'N') or (d.cd_estabelecimento = cd_estabelecimento_p));
	 
	if (nr_seq_pront_w > 0) then 
		CALL Wheb_mensagem_pck.exibir_mensagem_abort(223163,'NR_SEQ_PRONT='||nr_seq_pront_w);
		--Rase_application_error(-20011,'Não é possível desfazer a devolução deste lote pois o prontuário '||nr_seq_pront_w||' não está mais no SAME.');	 
	end if;
end if;
		 
open c01;
loop 
fetch c01 into 
	nr_seq_solic_w;
EXIT WHEN NOT FOUND; /* apply on c01 */
	 
	open c02;
	loop 
	fetch c02 into 
		nr_seq_solic_pront_w, 
		nr_seq_pront_w;
	EXIT WHEN NOT FOUND; /* apply on c02 */
	 
	/*Devolução*/
 
	if (ie_acao_p = 'D') then 
		begin 
		/*Devolve o prontuário*/
 
		 
		-- Não setar para 'Armazenado' se utiliza o status 'V = Em Devolução', setará para armazenado somente no status 'D = Devolvido' 
		if ((coalesce(nr_seq_pront_w,0) > 0) and ((ie_status_na_devolucao_w <> 'V') or (ie_armazena_na_devolucao_w <> 'N'))) then 
		 
			update	same_prontuario 
			set	ie_status	= '1', 
				dt_atualizacao	= clock_timestamp(), 
				nm_usuario	= nm_usuario_p 
			where	nr_sequencia	= nr_seq_pront_w;
		 
		end if;
		 
		/*Faz a devolução do envelope*/
 
		update	same_solic_pront_envelope 
		set	dt_devolucao	= clock_timestamp(), 
			cd_pessoa_devol	= cd_pessoa_fisica_w, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_solic_pront_w;
					 
		/*Gera o histórico com a operação de Devolução*/
 
		CALL Same_Gerar_Historico( 
			nr_seq_pront_w, 
			12, 
			cd_pessoa_fisica_w, 
			cd_setor_atendimento_w, 
			nm_usuario_p				 
		);
		end;
	 
	/*Desfazer devolução*/
 
	elsif (ie_acao_p = 'E') then 
		begin 
		 
		/*Desfaz devolução do prontuário*/
 
		update	same_prontuario 
		set	ie_status	= '8', 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_pront_w;
		 
		/*Desfaz a devolução do envelope*/
 
		update	same_solic_pront_envelope 
		set	dt_devolucao	 = NULL, 
			cd_pessoa_devol	 = NULL, 
			dt_atualizacao	= clock_timestamp(), 
			nm_usuario	= nm_usuario_p 
		where	nr_sequencia	= nr_seq_solic_pront_w;
				 
		/*Gera o histórico com a operação de Devolução desfeita*/
 
		CALL Same_Gerar_Historico( 
			nr_seq_pront_w, 
			25, 
			cd_pessoa_fisica_w, 
			cd_setor_atendimento_w, 
			nm_usuario_p				 
		);
		end;
	end if;
	 
	commit;
 
	end loop;
	close c02;	
	 
/*Devolve ou desfaz a devolução da solicitação*/
 
if (ie_acao_p = 'D') then 
		CALL Same_Devolver_Solicitacao( 
			nr_seq_solic_w, 
			nm_usuario_p, 
			cd_estabelecimento_p 
		);
elsif (ie_acao_p = 'E') then		 
		CALL Same_Desfazer_Devolver_Solic( 
			nr_seq_solic_w, 
			nm_usuario_p 
		);		
end if;
 
commit;		
 
end loop;
close c01;	
 
/*Devolve ou desfaz a devolução do lote*/
 
if (ie_acao_p = 'D') then 
	CALL Same_Devolver_Lote( 
		nr_seq_lote_p, 
		nm_usuario_p 
	);
elsif (ie_acao_p = 'E') then 
	CALL Same_Desfazer_Devolver_Lote( 
		nr_seq_lote_p, 
		nm_usuario_p 
	);
end if;
	 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE same_devolver_lote_prontuario ( nr_seq_lote_p bigint, nm_usuario_p text, ie_acao_p text, cd_estabelecimento_p bigint) FROM PUBLIC;

