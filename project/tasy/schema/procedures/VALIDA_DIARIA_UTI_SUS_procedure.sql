-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE valida_diaria_uti_sus ( nr_seq_protocolo_p bigint, nm_usuario_p text) AS $body$
DECLARE

 
cd_tipo_leito_w		smallint;
qt_proc_leito_w		double precision;
nr_aih_w		bigint;
nr_interno_conta_w	bigint;
nr_atendimento_w	bigint;
qt_dia_uti_mes_ini_w	smallint;
qt_dia_uti_mes_ant_w	smallint;
qt_dia_uti_mes_alta_w	smallint;
dt_final_w		timestamp;
dt_mesano_referencia_w	timestamp;
nr_sequencia_w		bigint;
dt_mes_ini_w		timestamp;
dt_mes_ant_w		timestamp;
dt_mes_alta_w		timestamp;
dt_referencia_w		timestamp;
ie_periodo_diaria_w	smallint;
qt_total_diaria_uti_w	bigint;
qt_registros_w		bigint;
nr_seq_aih_w		bigint;

C01 CURSOR FOR 
	SELECT 
		b.cd_tipo_leito, 
		b.ie_periodo_diaria, 
		sum(c.qt_procedimento) 
	from	sus_leito_proc b, 
		procedimento_paciente c 
	where	c.nr_interno_conta	= nr_interno_conta_w 
	and	c.cd_procedimento	= b.cd_procedimento 
	and	c.ie_origem_proced	= b.ie_origem_proced 
	and	coalesce(c.cd_motivo_exc_conta::text, '') = '' 
	group by b.cd_tipo_leito,b.ie_periodo_diaria;

C02 CURSOR FOR 
	SELECT	b.nr_aih, 
		b.nr_interno_conta, 
		a.nr_atendimento, 
		b.nr_sequencia 
	from	sus_aih b, 
		conta_paciente a 
	where	a.nr_seq_protocolo	= nr_seq_protocolo_p 
	and	a.nr_interno_conta	= b.nr_interno_conta 
	and	qt_registros_w		> 0;

 

BEGIN 
 
select coalesce(max(dt_mesano_referencia),clock_timestamp()) 
into STRICT	 dt_mesano_referencia_w 
from	 protocolo_convenio 
where	 nr_seq_protocolo	= nr_seq_protocolo_p;
 
qt_registros_w	:= 0;
select count(*) 
into STRICT	 qt_registros_w 
from	 sus_leito;
 
OPEN C02;
LOOP 
FETCH 	C02 into 
	nr_aih_w, 
	nr_interno_conta_w, 
	nr_atendimento_w, 
	nr_seq_aih_w;
EXIT WHEN NOT FOUND; /* apply on C02 */
	begin 
	delete	from sus_leito_movto 
	where	nr_aih = nr_aih_w 
	 and	nr_sequencia = nr_seq_aih_w;
 
	select coalesce(qt_dia_uti_mes_ini,0), 
		 coalesce(qt_dia_uti_mes_ant,0), 
		 coalesce(qt_dia_uti_mes_alta,0) 
	into STRICT	 qt_dia_uti_mes_ini_w, 
		 qt_dia_uti_mes_ant_w, 
		 qt_dia_uti_mes_alta_w 
	from	 sus_aih 
	where	 nr_aih		= nr_aih_w 
	and	 nr_atendimento	= nr_atendimento_w 
	and	 nr_interno_conta	= nr_interno_conta_w 
	and	 nr_sequencia	= nr_seq_aih_w;
 
	select coalesce(b.dt_final,a.dt_alta) 
	into STRICT	 dt_final_w 
	from	 atendimento_paciente a, 
		 sus_aih b 
	where	 b.nr_aih		= nr_aih_w 
	and	 b.nr_interno_conta 	= nr_interno_conta_w 
	and	 b.nr_atendimento	= nr_atendimento_w 
	and	 a.nr_atendimento	= b.nr_atendimento 
	and	 b.nr_sequencia		= nr_seq_aih_w;
	 
	if (coalesce(dt_final_w::text, '') = '') then 
		dt_final_w	:= dt_mesano_referencia_w;
	end if;
 
	/* Define data inicial */
 
	select add_months(trunc(dt_final_w,'month'),-2) 
	into STRICT	 dt_mes_ini_w 
	;
 
	/* Define data anterior */
 
	select add_months(trunc(dt_final_w,'month'),-1) 
	into STRICT	 dt_mes_ant_w 
	;
 
	/* Define data alta */
 
	select trunc(dt_final_w,'month') 
	into STRICT	 dt_mes_alta_w 
	;
 
	qt_proc_leito_w		:= 0;
	qt_total_diaria_uti_w	:= 0;
	OPEN C01;
	LOOP 
	FETCH C01 into 
		cd_tipo_leito_w, 
		ie_periodo_diaria_w, 
		qt_proc_leito_w;
	EXIT WHEN NOT FOUND; /* apply on C01 */
		begin 
 
		qt_total_diaria_uti_w	:= qt_total_diaria_uti_w + qt_proc_leito_w;
 
		select nextval('sus_leito_movto_seq') 
		into STRICT	 nr_sequencia_w 
		;
 
		if (ie_periodo_diaria_w	= 1) then 
			dt_referencia_w	:= dt_mes_ini_w;
		elsif (ie_periodo_diaria_w	= 2) then 
			dt_referencia_w	:= dt_mes_ant_w;
		else 
			dt_referencia_w	:= dt_mes_alta_w;
		end if;
 
		insert into sus_leito_movto( 
				nr_sequencia, 
				cd_tipo_leito, 
				dt_referencia, 
				nr_aih, 
				qt_diaria, 
				dt_atualizacao, 
				nm_usuario, 
				nr_seq_aih) 
		values (nr_sequencia_w, 
				cd_tipo_leito_w, 
				dt_referencia_w, 
				nr_aih_w, 
				qt_proc_leito_w, 
				clock_timestamp(), 
				nm_usuario_p, 
				nr_seq_aih_w);
		end;
	END LOOP;
	close c01;
 
	if (qt_total_diaria_uti_w	= 0) then 
		begin 
		if (qt_dia_uti_mes_ini_w	> 0) then 
			begin 
			select nextval('sus_leito_movto_seq') into STRICT nr_sequencia_w;
			insert into sus_leito_movto( 
			 	 nr_sequencia,cd_tipo_leito,dt_referencia,nr_aih, 
			 	 qt_diaria,dt_atualizacao,nm_usuario, nr_seq_aih) 
			values (nr_sequencia_w,9,dt_mes_ini_w,nr_aih_w, 
			 	 qt_dia_uti_mes_ini_w,clock_timestamp(),nm_usuario_p, nr_seq_aih_w);
			end;
		end if;
		if (qt_dia_uti_mes_ant_w	> 0) then 
			begin 
			select nextval('sus_leito_movto_seq') into STRICT nr_sequencia_w;
			insert into sus_leito_movto( 
			 	 nr_sequencia,cd_tipo_leito,dt_referencia,nr_aih, 
			 	 qt_diaria,dt_atualizacao,nm_usuario, nr_seq_aih) 
			values (nr_sequencia_w,9,dt_mes_ant_w,nr_aih_w, 
			 	 qt_dia_uti_mes_ant_w,clock_timestamp(),nm_usuario_p, nr_seq_aih_w);
			end;
		end if;
		if (qt_dia_uti_mes_alta_w	> 0) then 
			begin 
			select nextval('sus_leito_movto_seq') into STRICT nr_sequencia_w;
			insert into sus_leito_movto( 
			 	 nr_sequencia,cd_tipo_leito,dt_referencia,nr_aih, 
			 	 qt_diaria,dt_atualizacao,nm_usuario, nr_seq_aih) 
			values (nr_sequencia_w,9,dt_mes_alta_w,nr_aih_w, 
			 	 qt_dia_uti_mes_alta_w,clock_timestamp(),nm_usuario_p, nr_seq_aih_w);
			end;
		end if;
		end;
	end if;
	commit;
 
	end;
END LOOP;
close c02;
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE valida_diaria_uti_sus ( nr_seq_protocolo_p bigint, nm_usuario_p text) FROM PUBLIC;

