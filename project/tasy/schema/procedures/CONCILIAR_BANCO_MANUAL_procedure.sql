-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE conciliar_banco_manual (nr_seq_conciliacao_p bigint, ds_lista_movto_p text, ds_lista_extrato_p text, ds_erro_p INOUT text, nm_usuario_p text) AS $body$
DECLARE

 
nr_sequencia_w			bigint;
nr_seq_w			bigint;
ie_tipo_lanc_w			varchar(10);
IE_DEB_CRED_W			bigint;
vl_lanc_w			double precision;
vl_saldo_w			double precision;
vl_movto_w			double precision;
vl_extrato_w			double precision;
i				smallint;
dt_movimento_w			timestamp;
ie_compensar_cheque_concil_w	varchar(1)	:= 'N';
cd_estabelecimento_w		smallint;
ie_gerar_movto_cheque_w		varchar(1);
nr_seq_cheque_w			bigint;
/* Projeto Multimoeda - Variáveis */
cd_moeda_banco_w		integer;
cd_moeda_empresa_w		integer;
ie_banco_estrang_w		varchar(1) := 'N';

c01 CURSOR FOR 
SELECT	a.nr_sequencia, 
	'M', 
	CASE WHEN coalesce(ie_banco_estrang_w,'N')='S' THEN coalesce(a.vl_transacao_estrang,0)  ELSE a.vl_transacao END  vl_transacao, 
	CASE WHEN b.ie_banco='D' THEN  -1  ELSE 1 END  IE_DEB_CRED 
from	transacao_financeira b, 
	movto_trans_financ a 
where	b.nr_sequencia		= a.nr_seq_trans_financ 
and	a.nr_sequencia		in (SELECT	x.nr_seq_ref 
				from	w_concil x 
				where	x.ie_tipo	= 'T' 
				and	x.nm_usuario	= nm_usuario_p) 
and	coalesce(a.nr_seq_concil::text, '') = '' 
and	b.ie_banco 		<> 'N' 

union
 
select	a.nr_sequencia, 
	'P', 
	a.vl_lancamento, 
	CASE WHEN a.ie_deb_cred='D' THEN  1  ELSE -1 END  IE_DEB_CRED 
from	banco_extrato_lanc a 
where	a.nr_sequencia		in (select	x.nr_seq_ref 
				from	w_concil x 
				where	x.ie_tipo	= 'E' 
				and	x.nm_usuario	= nm_usuario_p) 
and	coalesce(a.nr_seq_concil::text, '') = '';

c02 CURSOR FOR 
SELECT	a.nr_sequencia 
from	cheque a 
where	coalesce(a.dt_compensacao::text, '') = '' 
and	exists (SELECT	1 
	from	movto_trans_financ x 
	where	x.nr_seq_cheque_cp	= a.nr_sequencia 
	and	x.nr_sequencia		= nr_seq_w) 

union
 
select	a.nr_sequencia 
from	cheque a 
where	coalesce(a.dt_compensacao::text, '') = '' 
and	exists (select	1 
	from	movto_trans_financ x 
	where	x.nr_documento	= a.nr_cheque 
	and	x.nr_sequencia	= nr_seq_w 
	and	coalesce(x.nr_seq_cheque::text, '') = '' 
	and	(x.nr_bordero IS NOT NULL AND x.nr_bordero::text <> '') 
	and	exists (select	1 
		from	cheque_bordero_titulo y 
		where	y.nr_bordero	= x.nr_bordero 
		and	y.nr_cheque	= a.nr_cheque));

 

BEGIN 
 
select	coalesce(max(b.cd_estabelecimento),obter_estabelecimento_ativo), 
	max(b.cd_moeda) 
into STRICT	cd_estabelecimento_w, 
	cd_moeda_banco_w 
from	banco_estabelecimento b, 
	conciliacao_bancaria a 
where	a.nr_seq_conta	= b.nr_sequencia 
and	a.nr_sequencia	= nr_seq_conciliacao_p;
 
/* Projeto Multimoeda - Busca a moeda padrão da empresa */
 
select	obter_moeda_padrao_empresa(coalesce(cd_estabelecimento_w,obter_estabelecimento_ativo),'E') 
into STRICT	cd_moeda_empresa_w
;
 
/* Projeto Multimoeda - Verifica se a conta é em moeda estrangeira ou não para definir os valores para a conciliação */
 
if (coalesce(cd_moeda_banco_w,cd_moeda_empresa_w) <> cd_moeda_empresa_w) then 
	ie_banco_estrang_w := 'S';
else 
	ie_banco_estrang_w := 'N';
end if;
 
select	coalesce(max(ie_compensar_cheque_concil),'N') 
into STRICT	ie_compensar_cheque_concil_w 
from	parametros_contas_pagar 
where	cd_estabelecimento	= cd_estabelecimento_w;
 
ie_gerar_movto_cheque_w := obter_param_usuario(814, 43, obter_perfil_ativo, nm_usuario_p, cd_estabelecimento_w, ie_gerar_movto_cheque_w);
 
vl_movto_w		:= 0;
vl_extrato_w		:= 0;
 
/* consistir valores de deb/cred das transações com valores de cred/deb do extrato */
 
open c01;
loop 
fetch c01 into 
	nr_seq_w, 
	ie_tipo_lanc_w, 
	vl_lanc_w, 
	IE_DEB_CRED_W;
EXIT WHEN NOT FOUND; /* apply on c01 */
	if (ie_tipo_lanc_w = 'M') then 
		vl_movto_w 	:= vl_movto_w + (vl_lanc_w * IE_DEB_CRED_W);
	else 
		vl_extrato_w 	:= vl_extrato_w + (vl_lanc_w  * IE_DEB_CRED_W);
	end if;
end loop;
close c01;
 
vl_saldo_w	:= vl_movto_w - vl_extrato_w;
 
if (vl_saldo_w = 0) then 
	select	nextval('concil_banc_movto_seq') 
	into STRICT	nr_sequencia_w 
	;
 
	insert into	concil_banc_movto(NR_SEQUENCIA, 
			NR_SEQ_CONCILIACAO, 
			DT_ATUALIZACAO, 
			NM_USUARIO, 
			IE_FORMA_CONCILIACAO) 
	values (nr_sequencia_w, 
			nr_seq_conciliacao_p, 
			clock_timestamp(), 
			nm_usuario_p, 
			'M');
 
	update	banco_extrato_lanc 
	set	nr_seq_concil	= nr_sequencia_w, 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp(), 
		ie_conciliacao	= 'S' 
	where	nr_sequencia	in (SELECT	x.nr_seq_ref 
				from	w_concil x 
				where	x.ie_tipo	= 'E' 
				and	x.nm_usuario	= nm_usuario_p);
 
	delete	from concil_banc_pend_bco 
	where	nr_seq_lanc_extrato	in (SELECT	x.nr_seq_ref 
					from	w_concil x 
					where	x.ie_tipo	= 'E' 
					and	x.nm_usuario	= nm_usuario_p);
 
	update	movto_trans_financ 
	set	nr_seq_concil	= nr_sequencia_w, 
		nm_usuario	= nm_usuario_p, 
		dt_atualizacao	= clock_timestamp(), 
		ie_conciliacao	= 'S', 
		dt_conferencia	= clock_timestamp() 
	where	nr_sequencia	in (SELECT	x.nr_seq_ref 
				from	w_concil x 
				where	x.ie_tipo	= 'T' 
				and	x.nm_usuario	= nm_usuario_p);
	 
	select	coalesce(max(dt_movimento), clock_timestamp()) 
	into STRICT	dt_movimento_w 
	from	banco_extrato_lanc 
	where	nr_sequencia	in (SELECT	x.nr_seq_ref 
				from	w_concil x 
				where	x.ie_tipo	= 'E' 
				and	x.nm_usuario	= nm_usuario_p);	
 
	if (ie_compensar_cheque_concil_w = 'S') then 
 
		if (ie_gerar_movto_cheque_w = 'S') then 
 
			open c02;
			loop 
			fetch c02 into 
				nr_seq_cheque_w;
			EXIT WHEN NOT FOUND; /* apply on c02 */
 
				compensar_cheque(nr_seq_cheque_w,dt_movimento_w,'I',nm_usuario_p,null);
					update	movto_trans_financ 
				set	ds_historico	= substr(WHEB_MENSAGEM_PCK.get_texto(279664) || nr_sequencia_w,1,255) 
				where	nr_sequencia	=	(SELECT	max(a.nr_sequencia) 
								from	movto_trans_financ a 
								where	a.nr_seq_cheque_cp	= nr_seq_cheque_w);
			end loop;
			close c02;
 
		else 
		 
			update	cheque a 
			set	dt_compensacao	= dt_movimento_w 
			where	coalesce(dt_compensacao::text, '') = '' 
			and	exists (SELECT	1 
					from	movto_trans_financ x 
					where	x.nr_seq_cheque_cp	= a.nr_sequencia 
					and	x.nr_sequencia	in (select	y.nr_seq_ref 
								from	w_concil y 
								where	y.ie_tipo	= 'T' 
								and	y.nm_usuario	= nm_usuario_p) 
					and	(x.nr_seq_concil IS NOT NULL AND x.nr_seq_concil::text <> ''));
 
			/* Compensar cheque único do borderô */
 
			update	cheque a 
			set	dt_compensacao	= dt_movimento_w 
			where	coalesce(dt_compensacao::text, '') = '' 
			and	exists (SELECT	1 
					from	movto_trans_financ x 
					where	x.nr_documento	= a.nr_cheque 
					and	x.nr_sequencia	in (select	y.nr_seq_ref 
								from	w_concil y 
								where	y.ie_tipo	= 'T' 
								and	y.nm_usuario	= nm_usuario_p) 
					and	(x.nr_seq_concil IS NOT NULL AND x.nr_seq_concil::text <> '') 
					and	coalesce(x.nr_seq_cheque::text, '') = '' 
					and	(x.nr_bordero IS NOT NULL AND x.nr_bordero::text <> '') 
					/*and	x.nr_seq_cheque_cp = a.nr_sequencia*/
 
					and	exists (select	1 
							from	cheque_bordero_titulo y 
							where	y.nr_bordero	= x.nr_bordero 
							and	y.nr_cheque	= a.nr_cheque 
							and	y.nr_seq_cheque = a.nr_sequencia));
		end if;	
	end if;
 
	delete	from concil_banc_pend_tasy 
	where	nr_seq_movto_trans	in (SELECT	x.nr_seq_ref 
					from	w_concil x 
					where	x.ie_tipo	= 'T' 
					and	x.nm_usuario	= nm_usuario_p);
 
else 
	ds_erro_p := WHEB_MENSAGEM_PCK.get_texto(279666) || vl_saldo_w;
end if;
 
delete	from w_concil 
where	nm_usuario	= nm_usuario_p;
 
commit;
 
end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE conciliar_banco_manual (nr_seq_conciliacao_p bigint, ds_lista_movto_p text, ds_lista_extrato_p text, ds_erro_p INOUT text, nm_usuario_p text) FROM PUBLIC;

