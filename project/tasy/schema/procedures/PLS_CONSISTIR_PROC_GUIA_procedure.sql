-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE pls_consistir_proc_guia ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) AS $body$
DECLARE


/* +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Finalidade: Realizar a consistencia dos procedimentos lancados na guia, principalmente Carencia, Cobertura, Limitacao e Ocorrencias
-------------------------------------------------------------------------------------------------------------------

Locais de chamada direta: 
[X]  Objetos do dicionario [ ] Tasy (Delphi/Java) [  ] Portal [  ]  Relatorios [ ] Outros:
 ------------------------------------------------------------------------------------------------------------------

Pontos de atencao:
1 - Performance
2 - Muita atencao nas consistencias de Carencia, Cobertura, Limitacao, nao pode parar de funcionar.
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ */
nr_seq_segurado_w		bigint;
ie_origem_proced_w		bigint;
cd_procedimento_w		bigint;
nr_seq_guia_proc_w		bigint;
dt_solicitacao_w		timestamp;
nr_seq_plano_w			bigint;
nr_seq_contrato_w		bigint;
qt_solicitada_w			pls_guia_plano_proc.qt_solicitada%type;
qt_registros_w			bigint;
qt_registros_mat_w		bigint;
qt_glosa_proc_w			bigint := 0;
ie_regulamentacao_w		varchar(2);
ie_segmentacao_w		varchar(3);
qt_glosa_w			bigint;
nr_seq_motivo_lib_w		bigint;
ie_tipo_guia_w			varchar(2);
nr_seq_tipo_acomodacao_w	bigint;
ie_status_w			varchar(1) := '';
ie_auditoria_w			varchar(1) := '';
nr_seq_prestador_w		bigint;
nr_seq_regra_limitacao_w	bigint;
qt_solicitada_grupo_w		pls_guia_plano_proc.qt_solicitada%type;
ie_tipo_segurado_w		varchar(2);
ie_estagio_w			smallint;
nr_seq_guia_w			bigint;
ie_tipo_internacao_w		varchar(1);
dt_liberacao_w			timestamp;
nr_seq_uni_exec_w		bigint;
ie_tipo_processo_w		varchar(1);
nr_seq_regra_w			bigint;
ie_permite_w			varchar(1);
ie_nascido_plano_w		varchar(1);
nr_seq_congenere_w		bigint;
nr_seq_regra_lib_int_w		bigint;
ie_tipo_pagador_w		varchar(4);
qt_idade_segurado_w		bigint;
ie_carencia_abrangencia_ant_w	varchar(10);
ie_glosa_prest_item_w		varchar(1);
ie_tipo_intercambio_w		varchar(10);

c010 CURSOR FOR
	SELECT	nr_sequencia,
		ie_origem_proced,
		cd_procedimento,
		coalesce(qt_solicitada,0)
	from	pls_guia_plano_proc
	where	nr_seq_guia		= nr_seq_guia_p
	and	coalesce(nr_seq_motivo_exc::text, '') = ''
	and (ie_status		= 'U'
	or	coalesce(ie_status::text, '') = '');


BEGIN

-- gerencia a atualizacao da tabela TM para estrutura de materiais
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_PROC_GUIA', 'PLS_ESTRUTURA_MATERIAL_TM');
--Atualizando a tabela de grupo de procedimentos
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_PROC_GUIA', 'PLS_GRUPO_SERVICO_TM');
-- gerencia a atualizacao da tabela TM para para grupos de materiais
CALL PLS_GERENCIA_UPD_OBJ_PCK.ATUALIZAR_OBJETOS('Tasy', 'PLS_CONSISTIR_PROC_GUIA', 'PLS_GRUPO_MATERIAL_TM');

select	nr_sequencia,
	nr_seq_segurado,
	dt_solicitacao,
	ie_tipo_guia,
	nr_seq_tipo_acomodacao,
	nr_seq_prestador,
	ie_estagio,
	nr_seq_uni_exec,
	ie_tipo_processo,
	ie_tipo_intercambio,
	nr_seq_plano
into STRICT	nr_seq_guia_w,
	nr_seq_segurado_w,
	dt_solicitacao_w,
	ie_tipo_guia_w,
	nr_seq_tipo_acomodacao_w,
	nr_seq_prestador_w,
	ie_estagio_w,
	nr_seq_uni_exec_w,
	ie_tipo_processo_w,
	ie_tipo_intercambio_w,
	nr_seq_plano_w
from	pls_guia_plano
where	nr_sequencia		= nr_seq_guia_p;

--Djavan - 29/08/2013 - OS 601917 - Retirado o tratamento abaixo feito pelo Felipe pois foi criado um parametro na funcao OPS - Gestao de Operadoras > Parametros da OPS > Autorizacoes para nao ser gerada a glosa semprestador informado na guia.

/*Felipe - 18/11/2010 - OS 266174 -  Se existir Operadora informada e NaO existir o prestador, entao nao deve emitir a glosa 1214
if	(nvl(nr_seq_prestador_w,0) = 0) and
	(nvl(nr_seq_uni_exec_w,0) > 0) then
	ie_tipo_processo_w	:= 'I';
end if;*/
begin
	select	nr_seq_contrato,
		ie_tipo_segurado,
		nr_seq_congenere
	into STRICT	nr_seq_contrato_w,
		ie_tipo_segurado_w,
		nr_seq_congenere_w
	from	pls_segurado
	where	nr_sequencia	= nr_seq_segurado_w;
exception
when others then
	nr_seq_contrato_w 	:= 0;
	ie_tipo_segurado_w 	:= null;
	nr_seq_congenere_w	:= null;
end;

qt_idade_segurado_w := pls_obter_idade_segurado(nr_seq_segurado_w, dt_solicitacao_w, 'A');

begin
	select	coalesce(ie_carencia_abrangencia_ant,'N')
	into STRICT	ie_carencia_abrangencia_ant_w
	from	pls_parametros
	where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	ie_carencia_abrangencia_ant_w := 'N';
end;

begin
	select	ie_glosa_prest_item
	into STRICT	ie_glosa_prest_item_w
	from	pls_param_autorizacao
	where	cd_estabelecimento	= cd_estabelecimento_p;
exception
when others then
	select	max(ie_glosa_prest_item)
	into STRICT	ie_glosa_prest_item_w
	from	pls_param_autorizacao;
end;

select	count(1)
into STRICT	qt_registros_w
from	pls_guia_plano_proc
where	nr_seq_guia	= nr_seq_guia_p
and	coalesce(nr_seq_motivo_exc::text, '') = '';

select	count(1)
into STRICT	qt_registros_mat_w
from	pls_guia_plano_mat
where	nr_seq_guia	= nr_seq_guia_p
and	coalesce(nr_seq_motivo_exc::text, '') = '';

begin
select	CASE WHEN b.cd_cgc='' THEN 'PF'  ELSE 'PJ' END
into STRICT	ie_tipo_pagador_w
from	pls_contrato_pagador	b,
	pls_segurado		a
where	a.nr_sequencia		= nr_seq_segurado_w
and	a.nr_seq_pagador	= b.nr_sequencia;
exception
when others then
	ie_tipo_pagador_w	:= 'A';
end;

if (qt_registros_w = 0 and qt_registros_mat_w = 0) then
	CALL pls_gravar_motivo_glosa('1499',nr_seq_guia_p,null,null,'Procedimento nao informado',nm_usuario_p,null,'CG',nr_seq_prestador_w, null,null);
else
	open c010;
	loop
	fetch c010 into
		nr_seq_guia_proc_w,
		ie_origem_proced_w,
		cd_procedimento_w,
		qt_solicitada_w;
	EXIT WHEN NOT FOUND; /* apply on c010 */
		ie_status_w	:= '';
		if (ie_tipo_segurado_w <> 'P') then
			CALL pls_tiss_consistir_autorizacao(nr_seq_guia_proc_w, 'AP', 'CG',
				nr_seq_prestador_w, null, '',
				nm_usuario_p, cd_estabelecimento_p,null);

			CALL pls_tiss_consistir_proc(nr_seq_guia_proc_w, 'AP', 'CG',
				nr_seq_prestador_w, null, '',
				nm_usuario_p, cd_estabelecimento_p,null);
				
			CALL pls_tiss_consistir_guia(nr_seq_guia_proc_w, 'AP', 'CG',
				nr_seq_prestador_w, null, '',
				nm_usuario_p, cd_estabelecimento_p);

			if (coalesce(qt_solicitada_w,0) = 0) then
					CALL pls_gravar_motivo_glosa('1423',null,nr_seq_guia_proc_w,null,null,nm_usuario_p,null,'CG',nr_seq_prestador_w, null,null);
			end if;
			/* 1423 - Quantidade solicitada acima da quantidade permitida */

			if (ie_tipo_segurado_w	not in ('I','H')) then
				ie_tipo_internacao_w	:= pls_obter_internado_guia(nr_seq_guia_proc_w,'AP');

				CALL pls_consistir_qtde_proc(nr_seq_guia_p, cd_procedimento_w, ie_origem_proced_w,
							nr_seq_guia_proc_w, 'CG', ie_tipo_guia_w,
							ie_tipo_internacao_w, null, cd_estabelecimento_p,
							nm_usuario_p);

				/* Paulo - OS 81369 - Limitar os procedimentos por grupo de limitacao */

				if (coalesce(pls_obter_regra_limitacao(cd_procedimento_w,null,ie_origem_proced_w,nr_seq_segurado_w,null),'0') <> '0') then
					select	pls_obter_regra_limitacao(cd_procedimento_w,null,ie_origem_proced_w,nr_seq_segurado_w,null),
						coalesce(a.qt_solicitada,0)
					into STRICT	nr_seq_regra_limitacao_w,
						qt_solicitada_grupo_w
					from	pls_guia_plano_proc a
					where	a.nr_sequencia	= nr_seq_guia_proc_w;
				else
					qt_solicitada_grupo_w := qt_solicitada_w;
				end if;

				select	ie_regulamentacao,
					ie_segmentacao
				into STRICT	ie_regulamentacao_w,
					ie_segmentacao_w
				from	pls_plano
				where	nr_sequencia	= nr_seq_plano_w;

				qt_glosa_w := pls_consistir_cobertura_proc(nr_seq_segurado_w, nr_seq_guia_proc_w, null, null, cd_procedimento_w, ie_origem_proced_w, clock_timestamp(), ie_segmentacao_w, cd_estabelecimento_p, null, nm_usuario_p, qt_glosa_w, 'G');
			end if;

			if (coalesce(qt_glosa_w,0) = 0) then
				/*aaschlote 21/12/2010 - OS - 271679 - Verificar se o beneficiario e recem-nascido, caso for, nao sera preciso consitir as carencias do beneficiario*/

				ie_nascido_plano_w := pls_obter_segurado_nasc_plano(nr_seq_segurado_w, cd_estabelecimento_p, ie_nascido_plano_w, nm_usuario_p);

				/* Consistencias*/

				if (ie_tipo_segurado_w	not in ('I','H')) then
					CALL pls_consistir_limitacao_proc(nr_seq_segurado_w, nr_seq_guia_proc_w, null, null, null, cd_procedimento_w, ie_origem_proced_w,
									qt_solicitada_grupo_w, nr_seq_guia_p, cd_estabelecimento_p, nm_usuario_p);
				end if;
				if (coalesce(ie_nascido_plano_w,'N') = 'N') and (ie_tipo_segurado_w	not in ('I','H')) then
					CALL pls_consistir_carencia_proc(nr_seq_segurado_w, nr_seq_guia_proc_w, null, null, null, cd_procedimento_w,
									ie_origem_proced_w, dt_solicitacao_w, cd_estabelecimento_p, nm_usuario_p,
									null,ie_carencia_abrangencia_ant_w);
				end if;
				CALL pls_consistir_cpt(	nr_seq_segurado_w, nr_seq_guia_proc_w, null,
								null, null, cd_procedimento_w, 
								ie_origem_proced_w, dt_solicitacao_w, cd_estabelecimento_p, 
								nm_usuario_p);
				if (coalesce(ie_nascido_plano_w,'N') = 'N') and (ie_tipo_segurado_w	not in ('I','H')) then
					CALL pls_consistir_carencia_proc(nr_seq_segurado_w, null, nr_seq_guia_p, null, null, null, null, dt_solicitacao_w,
								cd_estabelecimento_p, nm_usuario_p, null,ie_carencia_abrangencia_ant_w);
				end if;

				CALL pls_consistir_benef_proc(nr_seq_segurado_w,nr_seq_guia_p, null, null, 'CG', nm_usuario_p, cd_estabelecimento_p,qt_idade_segurado_w);
				/*Fim consistencias*/

				if (ie_regulamentacao_w = 'R') and (ie_tipo_segurado_w	not in ('I','H')) then
					select	count(1)
					into STRICT	qt_registros_w
					from	pls_cobertura
					where	nr_seq_plano		= nr_seq_plano_w;
					if (qt_registros_w = 0) then
						CALL pls_gravar_motivo_glosa('1423',null,nr_seq_guia_proc_w,null,null,nm_usuario_p,null,'CG',nr_seq_prestador_w, null,null);
					end if;
				end if;
			end if;
			
			CALL pls_consistir_acomod_diaria(nr_seq_guia_proc_w, nm_usuario_p);			
			
			/*pls_obter_estrut_proc(cd_procedimento_w, ie_origem_proced_w, cd_area_w,
				cd_especialidade_w, cd_grupo_w, ie_origem_w);*/


			/*Tratamento para que nao seja feita a consistencia do procediemento pelo prestador com guias de intercambio */

			if (coalesce(ie_tipo_intercambio_w,'X')	<> 'E')then
				if (coalesce(ie_glosa_prest_item_w,'S')		= 'S') or
					((coalesce(ie_glosa_prest_item_w,'S')	= 'N') and (nr_seq_prestador_w IS NOT NULL AND nr_seq_prestador_w::text <> '')) then
					CALL pls_consistir_proc_prestador(nr_seq_prestador_w, null, nr_seq_guia_proc_w, null, null, cd_estabelecimento_p, nm_usuario_p,'CG');
				end if;
			end if;
			/*  */



			/*Diether - OS - 266284 */

			SELECT * FROM pls_consiste_rede_atend(null, nr_seq_guia_p, null, null, null, nr_seq_guia_proc_w, null, null, nm_usuario_p, cd_estabelecimento_p, nr_seq_regra_w, ie_permite_w) INTO STRICT nr_seq_regra_w, ie_permite_w;

			select	count(1)
			into STRICT	qt_registros_w
			from	pls_guia_glosa
			where	nr_seq_guia_proc	= nr_seq_guia_proc_w;

			select	coalesce(max(nr_sequencia),0)
			into STRICT	nr_seq_motivo_lib_w
			from	pls_guia_motivo_lib
			where	nr_seq_guia_proc	= nr_seq_guia_proc_w;

			if (nr_seq_motivo_lib_w > 0) then
				select	coalesce(ie_auditoria,'X')
				into STRICT	ie_auditoria_w
				from	pls_guia_motivo_lib
				where	nr_sequencia	= nr_seq_motivo_lib_w;
				/* (P,M)(Autorizado pelo auditor,Negado pelo auditor) */

				if (ie_auditoria_w <> 'X') then
					ie_status_w	:= ie_auditoria_w;
				end if;
			end if;

			if (qt_registros_w	> 0) then
				if (nr_seq_motivo_lib_w > 0) then
					update	pls_guia_plano_proc
					set	nm_usuario_liberacao	= nm_usuario_p,
						dt_liberacao		= CASE WHEN ie_status_w='' THEN clock_timestamp()  ELSE null END ,
						qt_autorizada		= qt_solicitada_w,
						ie_status		= CASE WHEN ie_status_w='' THEN 'L'  ELSE ie_status_w END
					where	nr_sequencia		= nr_seq_guia_proc_w
					and	ie_status		in ('C','U');
				else
					update	pls_guia_plano_proc
					set	nm_usuario_liberacao	= nm_usuario_p,
						dt_liberacao		= clock_timestamp(),
						qt_autorizada		= 0,
						ie_status		= 'N'
					where	nr_sequencia		= nr_seq_guia_proc_w
					and	ie_status		in ('C','U');

					qt_glosa_proc_w			:= qt_glosa_proc_w + 1;
				end if;
			else
				update	pls_guia_plano_proc
				set	nm_usuario_liberacao	= nm_usuario_p,
					dt_liberacao		= CASE WHEN ie_status_w='' THEN clock_timestamp()  ELSE null END ,
					qt_autorizada		= qt_solicitada_w,
					ie_status		= CASE WHEN ie_status_w='' THEN 'S'  ELSE ie_status_w END
				where	nr_sequencia		= nr_seq_guia_proc_w
				and	ie_status		in ('C','U','A');

				/* Felipe - OS 84526 - Tratar para fazer as regras de auditoria caso o procedimento nao tenha glosa */


				/* Felipe - OS 163813 - Se o procedimento tem liberacao do auditor, entao nao faz as regras de auditoria */

				if (nr_seq_motivo_lib_w = 0) and
					((ie_status_w <> 'P') or (ie_estagio_w in (3,6,7))) then
					CALL pls_consiste_regra_autorizacao(nr_seq_guia_proc_w, 1, cd_estabelecimento_p, nm_usuario_p);
				end if;
				/* Fim alteracao Felipe*/

				begin
					select	dt_liberacao
					into STRICT	dt_liberacao_w
					from	pls_guia_plano_proc
					where	nr_sequencia = nr_seq_guia_proc_w;
				exception
				when others then
					dt_liberacao_w := clock_timestamp();
				end;
			end if;
			/* Alexandre - OS 241520 */


			/*pls_gerar_ocorrencia(	nr_seq_segurado_w, null, nr_seq_guia_p,
						null, nr_seq_guia_proc_w, null,
						cd_procedimento_w, ie_origem_proced_w, null,
						ie_tipo_guia_w, nr_seq_plano_w, 'A',
						null, null, nr_seq_prestador_w,
						null,'I',dt_liberacao_w,
						'',nm_usuario_p, cd_estabelecimento_p,
						nr_seq_uni_exec_w,'N', null,null,null);*/
			
			CALL pls_gerar_ocorrencia_aut(nr_seq_segurado_w, null, nr_seq_guia_p,
						null, nr_seq_guia_proc_w, null,
						cd_procedimento_w, ie_origem_proced_w, null,
						ie_tipo_guia_w, nr_seq_plano_w,
						null, ie_tipo_pagador_w, nr_seq_prestador_w,
						null,'I',dt_liberacao_w,
						null,nm_usuario_p, cd_estabelecimento_p,
						nr_seq_congenere_w,'N',null);
		else
			update	pls_guia_plano_proc
			set	nm_usuario_liberacao	= nm_usuario_p,
				dt_liberacao		= CASE WHEN ie_status_w='' THEN clock_timestamp()  ELSE null END ,
				qt_autorizada		= qt_solicitada_w,
				ie_status		= CASE WHEN ie_status_w='' THEN 'S'  ELSE ie_status_w END
			where	nr_sequencia		= nr_seq_guia_proc_w
			and	ie_status		in ('C','U');
		end if;

		if (ie_tipo_processo_w	= 'I') then
			nr_seq_regra_lib_int_w := pls_verif_reg_lib_intercambio(nr_seq_guia_proc_w, null, 'LS', null, null, null, nr_seq_regra_lib_int_w);
		end if;
	end loop;
	close c010;
end if;

commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE pls_consistir_proc_guia ( nr_seq_guia_p bigint, cd_estabelecimento_p bigint, nm_usuario_p text) FROM PUBLIC;

