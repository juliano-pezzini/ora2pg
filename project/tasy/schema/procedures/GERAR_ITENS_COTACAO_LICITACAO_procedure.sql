-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gerar_itens_cotacao_licitacao ( nr_seq_licitacao_p bigint, nr_cot_compra_p bigint, nm_usuario_p text) AS $body$
DECLARE


						
nr_seq_lic_item_w			reg_lic_item.nr_seq_lic_item%type;
vl_item_w				cot_compra_resumo.vl_unitario_material%type;
vl_total_item_w				cot_compra_resumo.vl_unitario_material%type;
cd_material_w				material.cd_material%type;
cd_unid_medida_w			unidade_medida.cd_unidade_medida%type;
qt_item_w				cot_compra_resumo.qt_material%type;
nr_item_cot_compra_w			cot_compra_resumo.nr_item_cot_compra%type;
qt_registros_w				bigint;
qt_dias_prazo_entrega_w  reg_licitacao.qt_dias_prazo_entrega%TYPE;
dt_entrega_com_prazo_entrega_w  cot_compra.dt_entrega%TYPE;
dt_entrega_atual_w  cot_compra.dt_entrega%TYPE;
						
c01 CURSOR FOR
SELECT	b.cd_material,
	a.vl_unitario_material,
	a.qt_material,
	b.nr_item_cot_compra,
	substr(obter_atributo_cot_compra(b.nr_cot_compra, b.nr_item_cot_compra,'CD_UNIDADE_MEDIDA_COMPRA'),1,60)
from	cot_compra_resumo a,
	cot_compra_forn_item b
where	a.nr_seq_cot_item_forn = b.nr_sequencia
and	a.nr_cot_compra = nr_cot_compra_p;


BEGIN

select	count(*)
into STRICT	qt_registros_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p;

if (qt_registros_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(454757); /*Esse numero de cotacao nao existe.*/
end if;

select	count(*)
into STRICT	qt_registros_w
from	cot_compra_resumo
where	nr_cot_compra = nr_cot_compra_p;

select	qt_dias_prazo_entrega
into STRICT	qt_dias_prazo_entrega_w
from	reg_licitacao
where	nr_sequencia	= nr_seq_licitacao_p;

if (qt_dias_prazo_entrega_w IS NOT NULL AND qt_dias_prazo_entrega_w::text <> '') then
	dt_entrega_com_prazo_entrega_w := clock_timestamp() + qt_dias_prazo_entrega_w;
else
	select	dt_entrega
	into STRICT	dt_entrega_atual_w
	from	cot_compra
	where	nr_cot_compra = nr_cot_compra_p;

	if (dt_entrega_atual_w IS NOT NULL AND dt_entrega_atual_w::text <> '') then
		dt_entrega_com_prazo_entrega_w := dt_entrega_atual_w;
	end if;
end if;

if (qt_registros_w = 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(454752); /*Essa cotacao de compras nao esta calculada. Favor calcular a cotacao para poder vincular com a licitacao.*/
end if;

select	count(*)
into STRICT	qt_registros_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p
and	(dt_geracao_ordem_compra IS NOT NULL AND dt_geracao_ordem_compra::text <> '');

if (qt_registros_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(454800); /*Essa cotacao de compras ja esta vinculada a uma ordem de compra. Nao e possivel vincular com a licitacao.*/
end if;

select	count(*)
into STRICT	qt_registros_w
from	cot_compra
where	nr_cot_compra = nr_cot_compra_p
and	(nr_seq_reg_licitacao IS NOT NULL AND nr_seq_reg_licitacao::text <> '');

if (qt_registros_w > 0) then
	CALL wheb_mensagem_pck.exibir_mensagem_abort(454801); /*Essa cotacao de compras ja esta vunculada em outra licitacao.*/
end if;


open C01;
loop
fetch C01 into	
	cd_material_w,
	vl_item_w,
	qt_item_w,
	nr_item_cot_compra_w,
	cd_unid_medida_w;
EXIT WHEN NOT FOUND; /* apply on C01 */
	begin
	
	vl_total_item_w	:= qt_item_w * vl_item_w;

	select	coalesce(max(nr_seq_lic_item),0) +1
	into STRICT	nr_seq_lic_item_w
	from	reg_lic_item
	where	nr_seq_licitacao = nr_seq_licitacao_p;

	insert into reg_lic_item(
		dt_atualizacao,
		nm_usuario,
		nr_seq_licitacao,
		nr_seq_lic_item,
		cd_material,
		cd_unid_medida,
		qt_item,
		vl_maximo_edital,
		pr_inflacao,
		ie_lote,
		vl_total_item)
	values (	clock_timestamp(),
		nm_usuario_p,
		nr_seq_licitacao_p,
		nr_seq_lic_item_w,
		cd_material_w,
		cd_unid_medida_w,
		qt_item_w,
		vl_item_w,
		null,
		'N',
		vl_total_item_w);


	update	cot_compra
	set	nr_seq_reg_licitacao = nr_seq_licitacao_p,
		ie_finalidade_cotacao = 'P',
		dt_entrega = dt_entrega_com_prazo_entrega_w
	where	nr_cot_compra = nr_cot_compra_p;

	update	reg_licitacao
	set	dt_liberacao	= clock_timestamp(),
		nm_usuario_lib	= nm_usuario_p
	where	nr_sequencia	= nr_seq_licitacao_p;
	
	update	cot_compra_item
	set	nr_seq_licitacao = nr_seq_licitacao_p,
		nr_seq_lic_item = nr_seq_lic_item_w
	where	nr_cot_compra = nr_cot_compra_p
	and	nr_item_cot_compra = nr_item_cot_compra_w;

	insert into reg_lic_historico(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		ie_tipo_historico,
		ds_observacao,
		nr_seq_licitacao)
	values (	nextval('reg_lic_historico_seq'),
		clock_timestamp(),
		nm_usuario_p,
		'L',
		WHEB_MENSAGEM_PCK.get_texto(310352), --'Liberacao da licitacao.',
		nr_seq_licitacao_p);
		
	insert into reg_lic_historico(
		nr_sequencia,
		dt_atualizacao,
		nm_usuario,
		ie_tipo_historico,
		ds_observacao,
		nr_seq_licitacao)
	values (	nextval('reg_lic_historico_seq'),
		clock_timestamp(),
		nm_usuario_p,
		'VC',
		Wheb_mensagem_pck.get_Texto(454803, 'NR_COT_COMPRA_W='|| nr_cot_compra_p ), /*A cotacao de compras numero #@NR_COT_COMPRA_W#@ foi vinculada a essa licitacao.*/
		nr_seq_licitacao_p);
	end;
end loop;
close C01;

	
commit;

end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gerar_itens_cotacao_licitacao ( nr_seq_licitacao_p bigint, nr_cot_compra_p bigint, nm_usuario_p text) FROM PUBLIC;

