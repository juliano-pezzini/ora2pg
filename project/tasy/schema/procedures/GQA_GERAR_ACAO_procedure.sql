-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.1
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=srv-dbora-03.whebdc.com.br;service_name=DEV_1815;port=1521

SET client_encoding TO 'UTF8';





CREATE OR REPLACE PROCEDURE gqa_gerar_acao ( nr_seq_pend_regra_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, cd_pessoa_fisica_dest_p text, nr_seq_pend_pac_acao_p bigint, ie_tipo_pendencia_p bigint, ie_liberar_p text, nr_prescricao_p INOUT bigint) AS $body$
DECLARE

                                

cd_protocolo_w			bigint;
ie_estender_validade_w	varchar(5);
dt_prim_hor_prescr_w	timestamp;
nr_horas_validade_w		integer := 0;
ds_erro_w               varchar(2000);
ie_utilizado_pa_w       varchar(1) := 'N';
nr_prescricao_pa_w	    bigint;
nr_seq_protocolo_w		bigint;
VarQtHorasMaxExtensao_w	bigint;
ie_item_inconsistente_w varchar(1);

/*Constante Tipos de acao a ser gerada */

ConstTipoPrescricao smallint := 1;

BEGIN

    ie_estender_validade_w := obter_param_usuario(924, 249, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, ie_estender_validade_w);
	VarQtHorasMaxExtensao_w := Obter_Param_Usuario(924, 154, obter_perfil_ativo, nm_usuario_p, wheb_usuario_pck.get_cd_estabelecimento, VarQtHorasMaxExtensao_w);

    select   e.cd_protocolo,
             e.nr_seq_protocolo
    into STRICT     cd_protocolo_w,
             nr_seq_protocolo_w
    from     gqa_pendencia_pac a,
             gqa_pend_pac_acao b,
             gqa_pendencia_regra d,
             gqa_acao            e
    where    a.nr_sequencia     = b.nr_seq_pend_pac
    and      d.nr_sequencia     = a.nr_seq_pend_regra
    and      e.NR_SEQUENCIA     = b.nr_seq_regra_acao
    and      b.nr_sequencia     = nr_seq_pend_pac_acao_p;

	select	max(nr_sequencia)
	into STRICT	nr_seq_protocolo_w
	from    protocolo_medicacao
	where   ie_situacao = 'A'
	and     cd_protocolo = cd_protocolo_w
	and		nr_seq_interna = nr_seq_protocolo_w;

    case ie_tipo_pendencia_p
    
    when ConstTipoPrescricao then
    
        
        if (nr_seq_protocolo_w >= 0 AND cd_protocolo_w >= 0) then
        
            dt_prim_hor_prescr_w := to_date('30/12/1899 ' || to_char(clock_timestamp(), 'hh24:mi') || ':00','dd/mm/yyyy hh24:mi:ss');

            select    obter_horas_validade_prescr(dt_prim_hor_prescr_w,nr_atendimento_p,ie_estender_validade_w,'A',clock_timestamp(), null)
            into STRICT      nr_horas_validade_w
;
    			
			if (VarQtHorasMaxExtensao_w > 0) and (nr_horas_validade_w > 0) and (nr_horas_validade_w > VarQtHorasMaxExtensao_w) then
				nr_horas_validade_w := obter_horas_validade_prescr(dt_prim_hor_prescr_w,nr_atendimento_p,'N','A',clock_timestamp(), null);
			end if;

            nr_prescricao_p := Gerar_Prescricao_Protocolo(cd_pessoa_fisica_p, cd_pessoa_fisica_dest_p, nr_atendimento_p, cd_protocolo_w, nr_seq_protocolo_w, 0,  -- Buscar
                                    0, nr_horas_validade_w, nr_prescricao_p, null, null, to_char(clock_timestamp(),'hh24:mi'), clock_timestamp(), null, 1, 'N', nm_usuario_p, null,  -- Buscar
                                    null, 'N', nr_seq_pend_pac_acao_p);

            if ie_liberar_p = 'S' then
            
                ds_erro_w := liberar_prescricao( nr_prescricao_p, nr_atendimento_p, 'S', coalesce(obter_perfil_ativo,0), nm_usuario_p, 'S', ds_erro_w);

                CALL liberar_prescricao_farmacia(nr_prescricao_p, 
                                            0, 
                                            nm_usuario_p, 
                                            'N');

            end if;

            select    coalesce(max(ie_utilizado_pa),'N')
            into STRICT      ie_utilizado_pa_w
            from      tipo_protocolo
            where     cd_tipo_protocolo = 
            (         SELECT  max(cd_tipo_protocolo)
                    from    protocolo
                    where   cd_protocolo = cd_protocolo_w
            );

            if (ie_utilizado_pa_w = 'S') then										 						
            SELECT * FROM Gerar_Protocolo_PA( cd_protocolo_w, nr_seq_protocolo_w, nr_atendimento_p, 'N', 'S', 'S', 'S', 'S', 'S', 'S', 'S', 'S', nm_usuario_p, nr_prescricao_pa_w, ie_item_inconsistente_w) INTO STRICT nr_prescricao_pa_w, ie_item_inconsistente_w;
            end if;
        end if;
    end case;


end;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE gqa_gerar_acao ( nr_seq_pend_regra_p bigint, nr_atendimento_p bigint, cd_pessoa_fisica_p text, nm_usuario_p text, cd_pessoa_fisica_dest_p text, nr_seq_pend_pac_acao_p bigint, ie_tipo_pendencia_p bigint, ie_liberar_p text, nr_prescricao_p INOUT bigint) FROM PUBLIC;

